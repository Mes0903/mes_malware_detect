
8cbe9e4d932eb1fdf725a7bce1700360b839e17dcbf7599d93a58ec5e6419ded.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	push   ds
  402ab5:	enter  0xcab1,0x7c
  402ab9:	jl     0x402b37
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	test   BYTE PTR [ebx+0x6c],bh
  402acf:	ins    BYTE PTR es:[edi],dx
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi-0x28efbb0e]
  402b65:	adc    al,0xa0
  402b67:	outs   dx,BYTE PTR ds:[esi]
  402b68:	push   0x1f1253a9
  402b6d:	adc    al,0xd0
  402b6f:	loope  0x402b0a
  402b71:	mov    eax,0x3bb6d68f
  402b76:	add    esi,esp
  402b78:	xor    BYTE PTR [edi+esi*8-0x66],cl
  402b7c:	mov    ch,0xe9
  402b7e:	push   edx
  402b7f:	je     0x402b21
  402b81:	cdq    
  402b82:	mov    al,ds:0xb27f4f6c
  402b87:	inc    eax
  402b88:	xor    BYTE PTR [esi-0x542ea5a7],0xa4
  402b8f:	mov    ds:0xadec2899,eax
  402b94:	mov    ah,0x76
  402b96:	leave  
  402b97:	mov    eax,0x8560823b
  402b9c:	push   es
  402b9d:	mov    edx,0x74adc25
  402ba2:	and    BYTE PTR [esi+0x1cc064d0],bl
  402ba8:	cmp    esp,eax
  402baa:	pushf  
  402bab:	lods   eax,DWORD PTR ds:[esi]
  402bac:	xchg   BYTE PTR ds:0xc93cd655,dl
  402bb2:	cmp    al,bh
  402bb4:	xchg   DWORD PTR [ebp+0x1f],esp
  402bb7:	sub    DWORD PTR [esi+ecx*4],esi
  402bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bbb:	mov    edx,0x517ae082
  402bc0:	inc    ecx
  402bc1:	in     al,dx
  402bc2:	aad    0x74
  402bc4:	jno    0x402c1f
  402bc6:	pop    ecx
  402bc7:	enter  0x3c21,0x2d
  402bcb:	lds    esp,FWORD PTR [edi]
  402bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bce:	dec    ecx
  402bcf:	sbb    al,BYTE PTR [ebx+0x37]
  402bd2:	call   FWORD PTR [eax+0x6d]
  402bd5:	pop    esp
  402bd6:	jmp    0x402bd7
  402bd8:	pop    ebp
  402bd9:	in     eax,0x13
  402bdb:	jnp    0x402c4e
  402bdd:	pop    edi
  402bde:	stc    
  402bdf:	pushf  
  402be0:	inc    esp
  402be1:	in     eax,dx
  402be2:	push   ebx
  402be3:	mov    edx,0xa7121dbb
  402be8:	fmul   QWORD PTR [ebp+0x4a7150c0]
  402bee:	outs   dx,BYTE PTR ds:[esi]
  402bef:	pop    edi
  402bf0:	mov    ds:0xd0c6c230,eax
  402bf5:	xor    DWORD PTR [edi+0x2ae0c3e8],edi
  402bfb:	mov    edx,0xe11da332
  402c00:	fsubp  st(3),st
  402c02:	inc    esi
  402c03:	jnp    0x402c3a
  402c05:	loopne 0x402bfe
  402c07:	and    BYTE PTR [ebx],cl
  402c09:	das    
  402c0a:	stc    
  402c0b:	push   0xffffffe2
  402c0d:	es jno 0x402c82
  402c10:	fild   WORD PTR [ecx+ebp*1]
  402c13:	aaa    
  402c14:	adc    eax,0xaee689e0
  402c19:	retf   
  402c1a:	imul   ebp,ebx,0xca4926cf
  402c20:	mov    ah,0x82
  402c22:	push   eax
  402c23:	mov    BYTE PTR [eax+0x4491c420],bh
  402c29:	aaa    
  402c2a:	xchg   edi,eax
  402c2b:	mov    edi,0x9c854a5a
  402c30:	mov    edx,0x784303e1
  402c35:	and    esi,DWORD PTR [eax+eiz*8-0x4e]
  402c39:	not    dl
  402c3b:	mov    ds:0xcd8e90a8,eax
  402c40:	push   eax
  402c41:	mov    bh,0x77
  402c43:	jge    0x402c59
  402c45:	test   ecx,ebp
  402c47:	mov    al,0x7a
  402c49:	mov    bl,al
  402c4b:	(bad)  
  402c4d:	nop
  402c4e:	xchg   ebp,eax
  402c4f:	lds    eax,FWORD PTR [eax+edi*1]
  402c52:	or     dh,BYTE PTR [eax-0x3e]
  402c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c56:	daa    
  402c57:	mov    DWORD PTR [ecx],eax
  402c59:	sbb    al,0x6f
  402c5b:	push   0xffffffcb
  402c5d:	lods   eax,DWORD PTR ds:[esi]
  402c5e:	repnz sub BYTE PTR [edx-0x2],dl
  402c62:	sub    eax,0x43727a47
  402c67:	(bad)  
  402c68:	mov    edx,0x13dcb7a5
  402c6d:	push   cs
  402c6e:	dec    eax
  402c6f:	stos   BYTE PTR es:[edi],al
  402c70:	push   ds
  402c71:	nop
  402c72:	out    dx,eax
  402c73:	pushf  
  402c74:	dec    ebx
  402c75:	por    mm3,QWORD PTR ds:0xfa1c78cb
  402c7c:	imul   eax,DWORD PTR [eax+0x57],0x21
  402c80:	and    bh,BYTE PTR [edi+0x6062471f]
  402c86:	(bad)  
  402c87:	les    ebp,FWORD PTR [ecx]
  402c89:	add    eax,0xd95e37ea
  402c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c8f:	loope  0x402c89
  402c91:	push   cs
  402c92:	xchg   ecx,eax
  402c93:	cmc    
  402c94:	xor    ch,BYTE PTR [esi-0x7975ae94]
  402c9a:	ret    0x2744
  402c9d:	sub    ah,BYTE PTR [esi-0x76]
  402ca0:	loopne 0x402cd8
  402ca2:	adc    ecx,DWORD PTR [ecx]
  402ca4:	add    esp,DWORD PTR [ecx-0x30de2cfe]
  402caa:	inc    ebx
  402cab:	inc    edx
  402cac:	jnp    0x402ccb
  402cae:	pop    edx
  402caf:	sub    cl,BYTE PTR [ebx-0x6af2994b]
  402cb5:	push   ecx
  402cb6:	jbe    0x402c3d
  402cb8:	xor    BYTE PTR [ebx],0x50
  402cbb:	pop    edx
  402cbc:	and    al,0x49
  402cbe:	clc    
  402cbf:	push   0xf6b014ed
  402cc4:	xchg   ecx,eax
  402cc5:	add    al,0x5a
  402cc7:	adc    DWORD PTR [esi+0x5e022ba6],esp
  402ccd:	shr    DWORD PTR [ecx+edx*8+0x358bbc8f],0xfc
  402cd5:	mov    BYTE PTR [ecx+0x10],dh
  402cd8:	xor    DWORD PTR [ecx],ebp
  402cda:	sub    ah,BYTE PTR [eax-0x61b5fa73]
  402ce0:	in     eax,dx
  402ce1:	dec    ecx
  402ce2:	push   cs
  402ce3:	js     0x402cea
  402ce5:	push   0xffffff8e
  402ce7:	xor    eax,0x4950edcf
  402cec:	loop   0x402d4b
  402cee:	xlat   BYTE PTR ds:[ebx]
  402cef:	sbb    al,0x8c
  402cf1:	pop    es
  402cf2:	jae    0x402d29
  402cf4:	mov    bh,BYTE PTR [esi+ebx*2+0x30]
  402cf8:	add    bh,dh
  402cfa:	push   esi
  402cfb:	xchg   ebp,eax
  402cfc:	pop    ebp
  402cfd:	in     al,dx
  402cfe:	cmp    al,0x6
  402d00:	dec    ecx
  402d01:	inc    edi
  402d02:	lods   eax,DWORD PTR ds:[esi]
  402d03:	inc    esi
  402d04:	push   0xe505716c
  402d09:	test   eax,0x74847652
  402d0e:	pop    ebx
  402d0f:	jle    0x402d10
  402d11:	or     ah,BYTE PTR [ebp-0x5a]
  402d14:	(bad)  
  402d15:	pop    eax
  402d16:	and    ebx,DWORD PTR [edi+0xf2ed67a]
  402d1c:	inc    ebp
  402d1d:	dec    edx
  402d1e:	lock push ds
  402d20:	fdivr  DWORD PTR [edx]
  402d22:	or     DWORD PTR [edx-0x7e],edi
  402d25:	jne    0x402ce7
  402d27:	(bad)  [edi-0x36]
  402d2a:	sub    al,0x6d
  402d2c:	push   ebx
  402d2d:	cdq    
  402d2e:	rcl    BYTE PTR ds:0x3f3e579d,1
  402d34:	hlt    
  402d35:	add    eax,0x4ae61a3a
  402d3a:	iret   
  402d3b:	ins    DWORD PTR es:[edi],dx
  402d3c:	inc    ebx
  402d3d:	out    0x50,al
  402d3f:	xchg   DWORD PTR [edx-0x1222a73b],ebp
  402d45:	leave  
  402d46:	adc    DWORD PTR [ebp-0x59d5a9ab],ebx
  402d4c:	or     BYTE PTR [edi],bh
  402d4e:	fcomp  QWORD PTR [ecx+0x1f]
  402d51:	inc    ebx
  402d52:	(bad)  
  402d53:	pop    ds
  402d54:	aam    0x5
  402d56:	jp     0x402d2c
  402d58:	in     al,dx
  402d59:	push   ecx
  402d5a:	jp     0x402dbd
  402d5c:	(bad)  
  402d5d:	ins    DWORD PTR es:[edi],dx
  402d5e:	and    al,0x10
  402d60:	mov    esp,0x2d3b8228
  402d65:	in     eax,0x22
  402d67:	pop    esi
  402d68:	stc    
  402d69:	nop
  402d6a:	sub    bl,0xd9
  402d6d:	loope  0x402d6f
  402d6f:	je     0x402dbc
  402d71:	and    edi,DWORD PTR [edi+0x4]
  402d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d75:	dec    edi
  402d76:	lea    edi,[eax+0x503aab53]
  402d7c:	out    0x5e,al
  402d7e:	inc    eax
  402d7f:	mov    bl,0xff
  402d81:	aam    0x2a
  402d83:	mov    ebp,0x25012bcf
  402d88:	dec    esi
  402d89:	adc    bl,ah
  402d8b:	jecxz  0x402d5b
  402d8d:	pop    ds
  402d8e:	ss or  ebp,edx
  402d91:	push   ebp
  402d92:	dec    ebp
  402d93:	daa    
  402d94:	out    dx,eax
  402d95:	push   0xffffffc4
  402d97:	mov    esi,0xabe8d6e7
  402d9c:	repz fdiv QWORD PTR [esi+0x6e]
  402da0:	jp     0x402dad
  402da2:	lock push ebx
  402da4:	test   eax,0xc423cf67
  402da9:	frstor [eax-0x7d]
  402dac:	imul   ebp,edx,0x3c
  402daf:	jns    0x402dc3
  402db1:	mov    ecx,0x16f6726e
  402db6:	stos   BYTE PTR es:[edi],al
  402db7:	repz xchg esi,eax
  402db9:	in     al,0x9d
  402dbb:	mov    ds:0x805f64c1,eax
  402dc0:	jae    0x402d91
  402dc2:	std    
  402dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dc4:	and    cl,BYTE PTR [ecx+0x58]
  402dc7:	inc    ebp
  402dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc9:	mov    bl,0x81
  402dcb:	scas   al,BYTE PTR es:[edi]
  402dcc:	adc    dl,bh
  402dce:	daa    
  402dcf:	and    BYTE PTR [ebx+0x643cadd9],ah
  402dd5:	sub    ah,BYTE PTR [edx+ecx*2]
  402dd8:	aaa    
  402dd9:	or     DWORD PTR [ebx+0x3c1f94e5],ebp
  402ddf:	jecxz  0x402e48
  402de1:	cld    
  402de2:	stc    
  402de3:	add    BYTE PTR [eax],ch
  402de5:	mov    BYTE PTR [ecx],dl
  402de7:	cwde   
  402de8:	and    edi,DWORD PTR [ecx+0x6a]
  402deb:	repnz das 
  402ded:	test   eax,0x552808a3
  402df2:	push   edx
  402df3:	not    DWORD PTR [ecx+eax*2]
  402df6:	pop    esi
  402df8:	add    al,0x79
  402dfa:	mov    ah,cl
  402dfc:	(bad)  
  402dfd:	push   ecx
  402dfe:	daa    
  402dff:	cmp    bl,BYTE PTR [ebx-0x6e]
  402e02:	xor    BYTE PTR [ecx-0x503930ee],dh
  402e08:	stc    
  402e09:	mov    ds:0x921c8e50,eax
  402e0e:	cmp    BYTE PTR [ebx+0x25],bl
  402e11:	(bad)  
  402e12:	cmp    ecx,DWORD PTR [eax+edi*8]
  402e15:	sbb    eax,0x542e85a7
  402e1a:	pop    ebp
  402e1b:	imul   edi,DWORD PTR ds:0x177e5206,0x7b
  402e22:	xor    BYTE PTR [ecx-0x78],dl
  402e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e26:	inc    ebp
  402e27:	push   ds
  402e28:	cmp    DWORD PTR [esi-0x64],edi
  402e2b:	sub    esi,edx
  402e2d:	inc    esp
  402e2e:	(bad)  
  402e2f:	fist   WORD PTR [edi]
  402e31:	sbb    ch,cl
  402e33:	nop
  402e34:	lahf   
  402e35:	jo     0x402dff
  402e37:	or     al,0xfc
  402e39:	nop
  402e3a:	or     dl,dh
  402e3c:	and    eax,0xee082b32
  402e41:	(bad)  
  402e42:	fbstp  TBYTE PTR [eax+0x73cb8fda]
  402e48:	or     ecx,esp
  402e4a:	std    
  402e4b:	and    eax,0xf9e1a748
  402e50:	aad    0x4d
  402e52:	call   0xbbdd:0x7341fd33
  402e59:	ds adc eax,0x138193db
  402e5f:	shl    BYTE PTR [eax],1
  402e61:	xchg   esp,eax
  402e62:	stos   BYTE PTR es:[edi],al
  402e63:	out    dx,al
  402e64:	icebp  
  402e65:	and    ebx,edx
  402e67:	xor    eax,0xe7bfb31c
  402e6c:	dec    ebx
  402e6d:	(bad)  
  402e6e:	inc    ecx
  402e6f:	pop    ds
  402e70:	and    al,0x48
  402e72:	mov    ebx,0x61471fc8
  402e77:	mov    ds:0xa0507742,eax
  402e7c:	pop    ebx
  402e7d:	ret    
  402e7e:	popa   
  402e7f:	dec    ebp
  402e80:	leave  
  402e81:	xor    ebp,ebx
  402e83:	cmp    DWORD PTR [eax+0x3],ebx
  402e86:	call   0xca53c31a
  402e8b:	sbb    eax,0xe5e4ba11
  402e90:	inc    edi
  402e91:	out    0x82,al
  402e93:	fadd   DWORD PTR [ecx-0x18a5cfee]
  402e99:	mov    eax,ebp
  402e9b:	bound  edx,QWORD PTR [edi-0x70]
  402e9e:	stos   BYTE PTR es:[edi],al
  402e9f:	dec    edx
  402ea0:	aam    0x0
  402ea2:	mov    ecx,0x5824ba48
  402ea7:	inc    edx
  402ea8:	imul   ecx,DWORD PTR [edi],0xa390c3f2
  402eae:	jns    0x402eb4
  402eb0:	xor    al,BYTE PTR [esi-0x61]
  402eb3:	por    mm1,mm3
  402eb6:	mov    edx,0x8f6e7905
  402ebb:	xchg   edx,eax
  402ebc:	iret   
  402ebd:	xor    BYTE PTR [ebp+esi*8+0x6e],0x47
  402ec2:	dec    edi
  402ec3:	cmp    BYTE PTR [ebx+0x4e],al
  402ec6:	cld    
  402ec7:	cs addr16 sbb ebx,ecx
  402ecb:	jg     0x402eff
  402ecd:	sub    ch,BYTE PTR [esi+0x22]
  402ed0:	push   edx
  402ed1:	pop    edx
  402ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed3:	xlat   BYTE PTR gs:[ebx]
  402ed5:	aad    0xd4
  402ed7:	inc    ebx
  402ed8:	aaa    
  402ed9:	mov    bl,0xc4
  402edb:	lods   eax,DWORD PTR ds:[esi]
  402edc:	imul   eax,DWORD PTR [ecx-0x28],0x43
  402ee0:	rol    dl,0x99
  402ee3:	xchg   esp,eax
  402ee4:	test   al,0xd0
  402ee6:	rcl    BYTE PTR [edx-0x74],cl
  402ee9:	std    
  402eea:	pop    es
  402eeb:	fs popf 
  402eed:	and    bh,BYTE PTR [eax-0x62]
  402ef0:	xchg   esp,eax
  402ef1:	mov    bh,0x93
  402ef3:	mov    ebx,0x19d7e1f5
  402ef8:	or     BYTE PTR ds:0x5a13adfe,bl
  402efe:	fimul  DWORD PTR [ebp+0x7a]
  402f01:	jb     0x402f5b
  402f03:	push   si
  402f05:	fisub  DWORD PTR [edi-0x17]
  402f08:	outs   dx,DWORD PTR ds:[esi]
  402f09:	or     ch,BYTE PTR [eax+esi*8]
  402f0c:	aas    
  402f0d:	add    eax,0x83c23825
  402f12:	pop    ecx
  402f13:	mov    esi,0x7ad9d787
  402f18:	lock imul edx,eax,0xd26fcef8
  402f1f:	sbb    DWORD PTR [esi+0x79],eax
  402f22:	jne    0x402f43
  402f24:	ins    DWORD PTR es:[edi],dx
  402f25:	pop    ds
  402f26:	xchg   ebx,eax
  402f27:	not    DWORD PTR [eax]
  402f29:	or     BYTE PTR [esi-0x39],0x90
  402f2d:	out    0x91,eax
  402f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f30:	jb     0x402f4d
  402f32:	test   edi,eax
  402f34:	rcr    BYTE PTR [edx],cl
  402f36:	lock sahf 
  402f38:	add    dh,bh
  402f3a:	scas   al,BYTE PTR es:[edi]
  402f3b:	ins    BYTE PTR es:[edi],dx
  402f3c:	pop    ebx
  402f3d:	jb     0x402fa8
  402f3f:	and    esp,DWORD PTR [eax]
  402f41:	std    
  402f42:	loope  0x402f12
  402f44:	loopne 0x402f70
  402f46:	repz (bad) 
  402f48:	xchg   edi,eax
  402f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4a:	into   
  402f4b:	dec    edx
  402f4c:	sbb    eax,ebp
  402f4e:	fstp   TBYTE PTR [ecx]
  402f50:	xchg   cx,dx
  402f53:	xchg   esi,eax
  402f54:	call   0x49a1f5f5
  402f59:	sbb    DWORD PTR [eax],0xffffffd4
  402f5c:	xlat   BYTE PTR ds:[ebx]
  402f5d:	mov    ds:0x72a85660,eax
  402f62:	sbb    BYTE PTR [ebx],0xf9
  402f65:	(bad)  
  402f68:	xor    eax,DWORD PTR [esi+ecx*8+0x1a99aa23]
  402f6f:	dec    ecx
  402f70:	jnp    0x402f53
  402f72:	test   BYTE PTR [ebx-0x42ddee23],cl
  402f78:	or     al,0x10
  402f7a:	popf   
  402f7b:	shl    DWORD PTR ds:0x1d893f3c,0x7f
  402f82:	iret   
  402f83:	jmp    0x402f25
  402f85:	arpl   WORD PTR [eax+0xcdbb548],dx
  402f8b:	popf   
  402f8c:	or     bh,BYTE PTR [edi-0x38]
  402f8f:	nop
  402f90:	cld    
  402f91:	or     DWORD PTR [ebx],esp
  402f93:	jns    0x402f39
  402f95:	lds    eax,FWORD PTR [esi-0x12]
  402f98:	sbb    ch,dl
  402f9a:	scas   eax,DWORD PTR es:[edi]
  402f9b:	out    dx,eax
  402f9c:	sub    bl,dl
  402f9e:	push   esi
  402f9f:	std    
  402fa0:	pop    ss
  402fa1:	leave  
  402fa2:	into   
  402fa3:	add    al,0x23
  402fa5:	ror    BYTE PTR [ebx+0x44816f9c],0xfe
  402fac:	(bad)  
  402fad:	rcl    dh,1
  402faf:	xor    al,0x33
  402fb1:	mov    ?,WORD PTR [edx]
  402fb3:	xchg   BYTE PTR [eax-0x5e4edec1],ah
  402fb9:	mov    BYTE PTR [edx*2+0x727baa65],ch
  402fc0:	add    eax,0x5899919f
  402fc5:	cmc    
  402fc6:	and    esp,DWORD PTR [ebx]
  402fc8:	dec    esi
  402fc9:	cmp    edi,ebp
  402fcb:	sub    al,0xb2
  402fcd:	loope  0x40304c
  402fcf:	xchg   ecx,eax
  402fd0:	mov    ds:0x9e0730c2,eax
  402fd5:	push   ebx
  402fd6:	int3   
  402fd7:	or     ah,bl
  402fd9:	add    DWORD PTR [ecx],eax
  402fdb:	fwait
  402fdc:	ins    BYTE PTR es:[edi],dx
  402fdd:	jo     0x8864e539
  402fe3:	jb     0x402ff8
  402fe5:	dec    eax
  402fe6:	inc    esp
  402fe7:	jmp    0x69c7607a
  402fec:	cmp    al,BYTE PTR [eax+0x28]
  402fef:	and    BYTE PTR [edx+0x5b1ad1bc],dl
  402ff5:	sbb    eax,0x164574c
  402ffa:	xlat   BYTE PTR ds:[ebx]
  402ffb:	and    al,0x20
  402ffd:	enter  0x64eb,0x4f
  403001:	out    dx,eax
  403002:	adc    eax,0xb52ac702
  403007:	mov    edi,ecx
  403009:	xchg   ebx,eax
  40300a:	push   0xad849cd0
  40300f:	pop    edi
  403010:	push   0x1ddb7d2e
  403015:	rol    BYTE PTR [eax],cl
  403017:	mov    ecx,0xc01711fd
  40301c:	push   es
  40301d:	pop    ebx
  40301e:	add    esp,DWORD PTR [ecx+0xa08ed72]
  403024:	xlat   BYTE PTR ds:[ebx]
  403025:	xchg   edx,eax
  403026:	retf   
  403027:	call   0x69e9:0xff21b37c
  40302e:	clc    
  40302f:	nop
  403030:	popa   
  403031:	sbb    BYTE PTR [ebp+0x1bc5b49e],bl
  403037:	rol    DWORD PTR [ebp-0x4a],cl
  40303a:	ins    BYTE PTR es:[edi],dx
  40303b:	retf   
  40303c:	xor    DWORD PTR [eax+edi*2-0x28],ebx
  403040:	sub    ah,BYTE PTR [esi-0x6f]
  403043:	shr    BYTE PTR [edi-0x5a],1
  403046:	fild   QWORD PTR [eax-0x375e645f]
  40304c:	je     0x403000
  40304e:	std    
  40304f:	pop    ecx
  403050:	inc    ebp
  403051:	mov    ebx,0xa4b9da37
  403056:	cli    
  403057:	mov    edi,ss
  403059:	or     BYTE PTR [ecx-0x12f77280],al
  40305f:	in     al,dx
  403060:	sar    ebx,cl
  403062:	repnz add ecx,eax
  403065:	enter  0x3a53,0xc1
  403069:	test   eax,0x6e18eebd
  40306e:	adc    bl,ah
  403070:	jmp    0x369f3fc
  403075:	les    esi,FWORD PTR [ebp+0x50]
  403078:	and    eax,0x5c956d04
  40307d:	xchg   DWORD PTR [ebp+esi*8+0x2cb9b51e],edx
  403084:	add    eax,0x883f2c50
  403089:	adc    al,0x49
  40308b:	or     DWORD PTR [edx-0x5d4c158b],0x16
  403092:	mov    ebx,DWORD PTR [ebx]
  403094:	dec    cx
  403096:	add    esi,ecx
  403098:	test   eax,0xc4ec9b7f
  40309d:	inc    edx
  40309e:	jecxz  0x403041
  4030a0:	out    dx,eax
  4030a1:	inc    edi
  4030a2:	inc    esp
  4030a3:	sbb    ah,BYTE PTR [esi-0x36fce1ab]
  4030a9:	fwait
  4030aa:	ret    0xc5f6
  4030ad:	adc    DWORD PTR [ecx+0x49],esp
  4030b0:	mov    ebx,DWORD PTR [ecx+0x70]
  4030b3:	push   es
  4030b4:	aaa    
  4030b5:	jns    0x403095
  4030b7:	ss inc ebp
  4030b9:	(bad)
  4030bc:	fadd   QWORD PTR [edx+0x32]
  4030bf:	fsqrt  
  4030c1:	std    
  4030c2:	jnp    0x4030ac
  4030c4:	add    BYTE PTR [ebp+0x489e07da],bl
  4030ca:	mov    ds:0xd78c89de,al
  4030cf:	fisttp DWORD PTR [ecx]
  4030d1:	repnz out dx,al
  4030d3:	mov    ah,0x80
  4030d5:	cmp    dl,dh
  4030d7:	(bad)  
  4030d8:	gs mov ch,ah
  4030db:	ins    BYTE PTR es:[edi],dx
  4030dc:	xchg   ebx,eax
  4030dd:	push   ebp
  4030de:	std    
  4030df:	xchg   ebp,eax
  4030e0:	sti    
  4030e1:	pop    eax
  4030e2:	dec    eax
  4030e3:	sbb    DWORD PTR [edi-0x37],ebp
  4030e6:	xor    cl,bh
  4030e8:	inc    eax
  4030e9:	pop    edi
  4030ea:	xlat   BYTE PTR ds:[ebx]
  4030eb:	push   esi
  4030ec:	daa    
  4030ed:	or     DWORD PTR [esi+eiz*4+0x27],edx
  4030f1:	jbe    0x4030ea
  4030f3:	sbb    eax,0x6e21f8da
  4030f8:	int    0x40
  4030fa:	shr    bh,1
  4030fc:	cmc    
  4030fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030fe:	dec    eax
  4030ff:	push   ss
  403100:	jmp    0xeac6:0xabcf6dc5
  403107:	add    ch,cl
  403109:	dec    eax
  40310a:	bswap  ecx
  40310c:	inc    ecx
  40310d:	cld    
  40310e:	ror    dh,cl
  403110:	jns    0x4030ae
  403112:	xchg   esp,eax
  403113:	jae    0x403159
  403115:	in     eax,0xf0
  403117:	adc    DWORD PTR [esi+ebx*2-0x16],0x78
  40311c:	retf   0x7c67
  40311f:	sub    DWORD PTR [edx-0x31],0x56ebae1f
  403126:	mov    ebp,0x6fd7c20f
  40312b:	add    bl,ah
  40312d:	push   ecx
  40312e:	xchg   esi,eax
  40312f:	(bad)  
  403130:	push   ds
  403131:	xchg   ecx,eax
  403132:	adc    al,0xb1
  403134:	fiadd  DWORD PTR [ebx+0x2c]
  403137:	xchg   edi,eax
  403138:	popf   
  403139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40313a:	fdiv   st(6),st
  40313c:	enter  0x2832,0xa1
  403140:	and    al,0xf0
  403142:	(bad)  
  403143:	out    0x6c,al
  403145:	(bad)  
  403146:	(bad)  
  403148:	retf   
  403149:	inc    ebp
  40314a:	sbb    bh,BYTE PTR [ecx+0x11]
  40314d:	adc    al,0x21
  40314f:	arpl   WORD PTR [esi+edi*1],di
  403152:	lods   eax,DWORD PTR ds:[esi]
  403153:	and    DWORD PTR [ebx-0x49bcbb64],ecx
  403159:	push   cs
  40315a:	popa   
  40315b:	inc    ebp
  40315c:	xchg   ecx,eax
  40315d:	mov    eax,0x19356f7d
  403162:	pop    esi
  403163:	shl    DWORD PTR [eax-0x7],1
  403166:	fprem  
  403168:	push   ecx
  403169:	cmp    bl,BYTE PTR [esi-0x681df547]
  40316f:	imul   ah
  403171:	pop    ebp
  403172:	inc    edx
  403173:	lock punpckhbw mm6,QWORD PTR [ecx]
  403177:	sar    DWORD PTR [edi+0x4d8ca5dc],cl
  40317d:	shr    DWORD PTR [ecx-0x1d7d1f32],0xd4
  403184:	mov    ds:0x2f37397b,al
  403189:	dec    BYTE PTR [eax+ecx*1]
  40318c:	xor    eax,0x49ff6485
  403191:	sub    DWORD PTR ds:0xcab66bc1,edx
  403197:	stc    
  403198:	mov    ebp,0x29888cc5
  40319d:	rcl    BYTE PTR [ebx],0xb
  4031a0:	int    0x4c
  4031a2:	or     al,0xe8
  4031a4:	jp     0x403199
  4031a6:	sahf   
  4031a7:	and    BYTE PTR [edi+0x61],0xef
  4031ab:	enter  0x7c56,0x89
  4031af:	retf   
  4031b0:	inc    edi
  4031b1:	and    dh,bh
  4031b3:	add    DWORD PTR [esi-0x1770f20f],esi
  4031b9:	sub    DWORD PTR [ecx],esp
  4031bb:	inc    ebx
  4031bc:	adc    al,0x90
  4031be:	enter  0x7171,0x32
  4031c2:	jecxz  0x4031d1
  4031c4:	jb     0x40316e
  4031c6:	popf   
  4031c7:	cmp    al,0x8
  4031c9:	mov    bl,0xc5
  4031cb:	test   ah,cl
  4031cd:	mov    dl,0xd2
  4031cf:	jp     0x4031af
  4031d1:	push   ds
  4031d2:	icebp  
  4031d3:	push   edx
  4031d4:	mov    eax,ds:0x48fbc2a9
  4031d9:	fsub   QWORD PTR [ebx+0x6f]
  4031dc:	test   eax,0xd45c2c2a
  4031e1:	fwait
  4031e2:	(bad)  
  4031e3:	std    
  4031e4:	inc    ecx
  4031e5:	sbb    DWORD PTR [edx-0x3f],0x4740cfad
  4031ec:	and    BYTE PTR [edx-0x10],0xaa
  4031f0:	stc    
  4031f1:	in     al,0xb4
  4031f3:	lds    ebx,FWORD PTR [eax]
  4031f5:	xor    DWORD PTR [eax+0x27953958],esp
  4031fb:	xchg   edi,eax
  4031fc:	in     eax,0xc7
  4031fe:	xor    ah,0xe3
  403201:	(bad)  
  403202:	xor    esp,edx
  403204:	push   es
  403205:	inc    ebx
  403206:	mov    ch,0x55
  403208:	(bad)
  40320d:	jge    0x4031ee
  40320f:	and    DWORD PTR [edx+0x6970daa8],edi
  403215:	push   cs
  403216:	lock and eax,0xca00febd
  40321c:	cmp    DWORD PTR ds:0x24f059b3,ebp
  403222:	imul   ebx,ebx,0x40
  403225:	or     eax,DWORD PTR [ebp+0x7a]
  403228:	push   ebx
  403229:	sub    DWORD PTR [eax+0x6a],0x2c30b67c
  403230:	mul    BYTE PTR ds:0x2c274861
  403236:	mov    eax,ds:0xcfc87c5
  40323b:	pushf  
  40323c:	xchg   ecx,eax
  40323d:	pop    edx
  40323e:	in     al,0xc8
  403240:	xchg   esp,eax
  403241:	lds    ebx,FWORD PTR [eax+eiz*8]
  403244:	lahf   
  403245:	or     eax,0x88e5bba4
  40324a:	std    
  40324b:	call   0xe27f3903
  403250:	jno    0x403207
  403252:	cld    
  403253:	fisub  WORD PTR [ecx]
  403255:	imul   ebx,DWORD PTR [esi+0x5],0xfffffffb
  403259:	cwde   
  40325a:	adc    eax,0x687f21ea
  40325f:	leave  
  403260:	(bad)  
  403262:	sub    DWORD PTR [ebx-0xc],0x877c6c90
  403269:	sub    edx,DWORD PTR [esi-0x4312f0af]
  40326f:	inc    ecx
  403270:	pop    edx
  403271:	idiv   DWORD PTR [edx-0x69]
  403274:	dec    edi
  403275:	lods   eax,DWORD PTR ds:[esi]
  403276:	mov    fs,WORD PTR [ecx+0xb]
  403279:	add    al,0x76
  40327b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40327c:	shr    al,cl
  40327e:	cwde   
  40327f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403280:	popf   
  403281:	or     DWORD PTR [ebp+0x1c],0xb556d50f
  403288:	sub    BYTE PTR [esi],ch
  40328a:	cdq    
  40328b:	bound  eax,QWORD PTR [ebx+0x5a]
  40328e:	fnstsw WORD PTR [edi+eax*4-0x1f]
  403292:	and    al,0x3c
  403294:	xchg   ecx,eax
  403295:	mov    bl,0xbe
  403297:	lods   eax,DWORD PTR ds:[esi]
  403298:	ins    DWORD PTR es:[edi],dx
  403299:	vcmpfalsesd xmm7,xmm3,QWORD PTR ds:0x5bad7b20
  4032a2:	lods   al,BYTE PTR ds:[esi]
  4032a3:	pop    edx
  4032a4:	outs   dx,DWORD PTR ds:[esi]
  4032a5:	cmc    
  4032a6:	mov    ch,0xd8
  4032a8:	jb     0x403231
  4032aa:	mov    ah,bh
  4032ac:	pop    ebp
  4032ad:	int3   
  4032ae:	aam    0xa4
  4032b0:	ins    BYTE PTR es:[edi],dx
  4032b1:	xor    bl,BYTE PTR ds:0xf104ff2e
  4032b7:	js     0x4032dc
  4032b9:	mov    edi,0x1acca8b
  4032be:	cmc    
  4032bf:	or     dl,BYTE PTR [ecx]
  4032c1:	push   edi
  4032c2:	or     BYTE PTR [esi],0x1c
  4032c5:	push   esp
  4032c6:	mov    eax,ds:0x41e4e882
  4032cb:	out    0x1d,al
  4032cd:	aad    0x60
  4032cf:	icebp  
  4032d0:	sub    al,ch
  4032d2:	mov    cs,eax
  4032d4:	cmp    DWORD PTR [ebx-0x5f9cd1b],ecx
  4032da:	inc    esp
  4032db:	xchg   esp,eax
  4032dc:	test   BYTE PTR [ebx+0x59acf996],al
  4032e2:	fnstsw ax
  4032e4:	add    cl,al
  4032e6:	mov    WORD PTR [edi+edx*2+0x5da0923a],es
  4032ed:	adc    BYTE PTR [esi],ah
  4032ef:	pop    ebx
  4032f0:	pop    ebp
  4032f1:	mov    edi,0x9942dc58
  4032f6:	fiadd  WORD PTR [eax+ebp*1]
  4032f9:	jno    0x4032e1
  4032fb:	inc    DWORD PTR [edi-0xaf4ed56]
  403301:	imul   edx,DWORD PTR [ebx+ecx*2+0x52e0a86e],0xffffffbd
  403309:	push   eax
  40330a:	mov    cl,cl
  40330c:	fnstenv [ebx]
  40330e:	dec    eax
  40330f:	pop    ebp
  403310:	add    al,0xf6
  403312:	or     edx,DWORD PTR [ecx-0x2]
  403315:	cmp    DWORD PTR [ebx-0x5f],ecx
  403318:	sbb    DWORD PTR [ebp-0x78d89330],edi
  40331e:	xchg   esp,eax
  40331f:	fnstenv [esi-0x1c]
  403322:	mov    ah,0xf5
  403324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403325:	pop    ebx
  403326:	xchg   ebp,eax
  403327:	popa   
  403328:	ja     0x40331b
  40332a:	shl    edx,cl
  40332c:	scas   al,BYTE PTR es:[edi]
  40332d:	sbb    dl,BYTE PTR [ebx+0x29]
  403330:	push   es
  403331:	mov    dh,0x76
  403333:	mov    ebp,0x57dd3988
  403338:	pop    ebp
  403339:	icebp  
  40333a:	xchg   DWORD PTR [eax],edi
  40333c:	jle    0x4032be
  40333e:	mov    ah,0x21
  403340:	pop    esi
  403341:	mov    bl,0xb0
  403343:	xor    esp,0xffffffab
  403346:	cmp    esp,esp
  403348:	pop    esp
  403349:	mov    bl,0xde
  40334b:	push   0x46
  40334d:	dec    edi
  40334e:	test   al,0x0
  403350:	(bad)  
  403351:	clc    
  403352:	iret   
  403353:	lock mov dl,0xe8
  403356:	xchg   ebp,eax
  403357:	mov    esp,0xab4afc35
  40335c:	jnp    0x40330b
  40335e:	test   DWORD PTR [edx+0x72],0xa1e00d3a
  403365:	scas   al,BYTE PTR es:[edi]
  403366:	mov    ds:0x8da5f7de,al
  40336b:	shl    BYTE PTR [ecx+0x61],cl
  40336e:	lods   al,BYTE PTR ds:[esi]
  40336f:	jecxz  0x403399
  403371:	and    al,0xe3
  403373:	call   0xe3684bfb
  403378:	jg     0x40330c
  40337a:	sbb    al,cl
  40337c:	jmp    0x5189595e
  403381:	loop   0x403309
  403383:	dec    ecx
  403384:	lahf   
  403385:	(bad)  
  403386:	mov    al,0x28
  403388:	xchg   edi,eax
  403389:	sbb    DWORD PTR [esi+0x45],0xa1fd01af
  403390:	std    
  403391:	test   DWORD PTR [ebx],ebx
  403393:	fiadd  DWORD PTR [eax+esi*8]
  403396:	sub    BYTE PTR [edi],dh
  403398:	cld    
  403399:	fldenv [ecx]
  40339b:	and    ecx,ecx
  40339d:	pop    esp
  40339e:	jo     0x403393
  4033a0:	add    ecx,0x7b
  4033a3:	sub    BYTE PTR [edx-0x8be3364],0xb0
  4033aa:	pop    es
  4033ab:	fwait
  4033ac:	jmp    0x4033f8
  4033ae:	xor    esi,eax
  4033b0:	rol    DWORD PTR [edx+0x60],1
  4033b3:	std    
  4033b4:	dec    BYTE PTR [ebx]
  4033b6:	xchg   edx,eax
  4033b7:	into   
  4033b8:	or     eax,0xbf30294c
  4033bd:	arpl   WORD PTR [eax],dx
  4033bf:	push   ss
  4033c0:	pop    edi
  4033c1:	ins    BYTE PTR es:[edi],dx
  4033c2:	cld    
  4033c3:	clc    
  4033c4:	test   BYTE PTR [esi],0x3e
  4033c7:	fadd   DWORD PTR [eax-0x3c]
  4033ca:	dec    DWORD PTR [ebp+0xe6e1783]
  4033d0:	loop   0x403427
  4033d2:	int    0xda
  4033d4:	pop    ecx
  4033d5:	mov    ?,WORD PTR [bp+si+0x3282]
  4033da:	sbb    DWORD PTR [edx],ebx
  4033dc:	jb     0x403397
  4033de:	push   cs
  4033df:	push   0xffffff96
  4033e1:	push   0x436382ae
  4033e6:	rcr    ebx,0x5e
  4033e9:	into   
  4033ea:	repz pop ss
  4033ec:	call   DWORD PTR [edx+0x661caa68]
  4033f2:	ja     0x40338f
  4033f4:	add    DWORD PTR [edi-0x674e0b0b],edi
  4033fa:	adc    eax,0x29980cee
  4033ff:	or     al,BYTE PTR [ebx]
  403401:	pop    edi
  403402:	les    esp,FWORD PTR [ecx+0x327c6462]
  403408:	dec    ebp
  403409:	mov    dh,0x4e
  40340b:	push   es
  40340c:	jbe    0x40343b
  40340e:	retf   
  40340f:	in     al,0x37
  403411:	jb     0x403443
  403413:	sub    eax,0x1ee8265c
  403418:	aad    0x3e
  40341a:	dec    esp
  40341b:	xchg   esi,eax
  40341c:	rcr    DWORD PTR [edi+edi*1],0xfa
  403420:	ret    
  403421:	push   ds
  403422:	lahf   
  403423:	add    DWORD PTR [edx],ecx
  403425:	test   ah,al
  403427:	outs   dx,BYTE PTR ds:[esi]
  403428:	inc    ebp
  403429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342a:	popf   
  40342b:	push   es
  40342c:	inc    ebx
  40342d:	sbb    eax,0x7f3abdc2
  403432:	sub    dh,BYTE PTR [ebx+0x5596b7c7]
  403438:	and    ecx,edx
  40343a:	inc    ebx
  40343b:	add    eax,DWORD PTR [eax-0x4be32a14]
  403441:	jne    0x40348f
  403443:	aad    0x55
  403445:	add    eax,edx
  403447:	test   al,0x75
  403449:	xor    al,0xae
  40344b:	push   esi
  40344c:	and    BYTE PTR [edi+0x40],cl
  40344f:	mov    eax,0xf7edf4f3
  403454:	loope  0x40347e
  403456:	imul   eax,DWORD PTR [edx],0xecd7
  40345c:	fild   WORD PTR [ecx]
  40345e:	pop    ecx
  40345f:	inc    BYTE PTR [eax]
  403461:	push   ss
  403462:	(bad)  
  403463:	or     cl,dl
  403465:	pushf  
  403466:	lods   eax,DWORD PTR ds:[esi]
  403467:	out    0xbf,eax
  403469:	dec    esp
  40346a:	jae    0x403422
  40346c:	inc    edi
  40346d:	fistp  QWORD PTR [eax]
  40346f:	sahf   
  403470:	pop    esp
  403471:	dec    eax
  403472:	sbb    bl,BYTE PTR [edx+edx*2+0x56]
  403476:	pop    ds
  403477:	lds    ebx,FWORD PTR [ecx]
  403479:	stc    
  40347a:	cld    
  40347b:	ret    0x8f01
  40347e:	push   ecx
  40347f:	adc    eax,0x33c9c2a7
  403484:	dec    esi
  403485:	pop    ecx
  403486:	push   cs
  403487:	dec    esp
  403488:	cmp    DWORD PTR [edx+0x2],esi
  40348b:	test   BYTE PTR [ebp+ebx*8+0x4879ea4f],dh
  403492:	or     bh,BYTE PTR [esi]
  403494:	push   eax
  403495:	jb     0x40343f
  403497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403498:	ins    BYTE PTR es:[edi],dx
  403499:	data16 mov dh,0x93
  40349c:	out    0x6a,eax
  40349e:	fcmovnb st,st(3)
  4034a0:	addr16 push edi
  4034a2:	les    ecx,FWORD PTR [ebp-0x63]
  4034a5:	str    edi
  4034a8:	ins    DWORD PTR es:[edi],dx
  4034a9:	jl     0x4034f3
  4034ab:	xchg   esp,eax
  4034ac:	jnp    0x4034d4
  4034ae:	push   0xbe3e102f
  4034b3:	pop    ebp
  4034b4:	shr    al,cl
  4034b6:	int    0xe7
  4034b8:	fs mov ebx,0x4376c0de
  4034be:	call   0x6879f1d9
  4034c3:	jge    0x4034d6
  4034c5:	xchg   esi,eax
  4034c6:	push   0x3d
  4034c8:	inc    esp
  4034c9:	dec    edx
  4034ca:	ja     0x403526
  4034cc:	retf   0xc18
  4034cf:	cdq    
  4034d0:	cmc    
  4034d1:	(bad)  
  4034d2:	jnp    0x4034a4
  4034d4:	mov    ebp,0x29010599
  4034d9:	popa   
  4034da:	cmp    BYTE PTR ds:[edi+0x4],dl
  4034de:	pop    ebx
  4034df:	sbb    al,0x87
  4034e1:	jecxz  0x40354a
  4034e3:	test   BYTE PTR [ecx+ebp*1+0x70],ch
  4034e7:	or     eax,DWORD PTR [ecx*4-0x398aa649]
  4034ee:	xor    al,0xf2
  4034f0:	add    al,BYTE PTR [eax+0x22444f98]
  4034f6:	out    0x8e,eax
  4034f8:	fnstsw WORD PTR [ebx+0xb75823e]
  4034fe:	bound  edi,QWORD PTR ds:0x8d3d8e36
  403504:	pop    esi
  403505:	lahf   
  403506:	jmp    0x4034b8
  403508:	aam    0x4e
  40350a:	pop    edx
  40350b:	adc    bh,BYTE PTR [edx+eiz*8]
  40350e:	mov    ds:0xebdd23f9,eax
  403513:	cmp    ah,bl
  403515:	out    dx,al
  403516:	daa    
  403517:	jo     0x4034dd
  403519:	inc    esp
  40351a:	(bad)  
  40351b:	(bad)  
  40351c:	mov    dl,0x85
  40351e:	call   0x43aa889e
  403523:	enter  0xf420,0xee
  403527:	shr    ebp,0x9e
  40352a:	cmp    bl,BYTE PTR [eax-0x7b]
  40352d:	add    BYTE PTR [edi-0x1b],bl
  403530:	push   edi
  403531:	dec    esp
  403532:	push   ds
  403533:	into   
  403534:	sbb    bh,BYTE PTR [ebp+esi*4+0x21623ce0]
  40353b:	nop
  40353c:	pop    ss
  40353d:	pop    ebp
  40353e:	and    cl,BYTE PTR [eax-0x50]
  403541:	mov    ds:0xddf46657,eax
  403546:	adc    al,0x71
  403548:	mov    ds:0x6747a36e,eax
  40354d:	add    al,0x6
  40354f:	outs   dx,DWORD PTR ds:[esi]
  403550:	adc    al,0x34
  403552:	push   eax
  403553:	pop    ebp
  403554:	out    0xf4,eax
  403556:	loope  0x4035c3
  403558:	mov    esi,0x7b5e1bcd
  40355d:	sub    DWORD PTR [edi],0x5c
  403560:	or     eax,0xae07b7e9
  403565:	and    BYTE PTR [edx+0x701984ed],bl
  40356b:	mov    ecx,0x771e1284
  403570:	sar    DWORD PTR [ecx],cl
  403572:	sahf   
  403573:	retf   0xe037
  403576:	sub    BYTE PTR [eax+0x79],bl
  403579:	or     DWORD PTR [ebp+edi*2-0x3ce35a1],0x6ed0ba2c
  403584:	imul   ebx,DWORD PTR [ecx-0x6f],0x1a47d3fd
  40358b:	in     eax,dx
  40358c:	sbb    edx,DWORD PTR [eax]
  40358e:	xchg   esp,eax
  40358f:	or     cl,BYTE PTR [edi-0xf]
  403592:	inc    edx
  403593:	dec    esi
  403594:	and    ch,BYTE PTR [edi]
  403596:	mov    ah,0x7
  403598:	clc    
  403599:	push   esi
  40359a:	jo     0x40353d
  40359c:	xchg   esi,eax
  40359d:	add    ebp,0x3b71b0c8
  4035a3:	ins    DWORD PTR es:[edi],dx
  4035a4:	mov    bl,0x55
  4035a6:	or     DWORD PTR [ebx-0x60],ebx
  4035a9:	in     al,dx
  4035aa:	dec    ecx
  4035ab:	fsubr  DWORD PTR [eax+0x6e]
  4035ae:	pop    eax
  4035af:	dec    edi
  4035b0:	fdiv   QWORD PTR [esi+0x4205f149]
  4035b6:	sahf   
  4035b7:	push   ebp
  4035b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035b9:	retf   
  4035ba:	clc    
  4035bb:	sbb    BYTE PTR [edi],dl
  4035bd:	js     0x40357d
  4035bf:	xchg   edi,eax
  4035c0:	and    BYTE PTR [eax+eiz*1+0x5b50e9c2],bh
  4035c7:	sub    esi,DWORD PTR [eax]
  4035c9:	jmp    0x403611
  4035cb:	pop    edx
  4035cc:	inc    eax
  4035cd:	xchg   ebx,eax
  4035ce:	ins    BYTE PTR es:[edi],dx
  4035cf:	dec    eax
  4035d0:	and    DWORD PTR [eax+0x6c],ebx
  4035d3:	jmp    0xc052:0x3165163d
  4035da:	jl     0x4035db
  4035dc:	pop    edi
  4035dd:	mov    BYTE PTR [ebx-0x32],ch
  4035e0:	mov    ebp,0x5ce010f
  4035e5:	jne    0x4035b7
  4035e7:	ret    0x50a6
  4035ea:	dec    esp
  4035eb:	push   eax
  4035ec:	shl    DWORD PTR [ebp-0x50],cl
  4035ef:	xchg   edx,eax
  4035f0:	cmp    eax,0x91a64674
  4035f5:	push   esp
  4035f6:	in     eax,dx
  4035f7:	jnp    0x40362b
  4035f9:	xchg   ebx,eax
  4035fa:	xlat   BYTE PTR ds:[ebx]
  4035fb:	outs   dx,BYTE PTR ds:[esi]
  4035fc:	jmp    0x4035cf
  4035fe:	push   ss
  4035ff:	sub    BYTE PTR [ebx-0x5a2f10fa],ah
  403605:	adc    bh,ah
  403607:	mov    BYTE PTR [ebx+0x2f],bl
  40360a:	jle    0x4035bc
  40360c:	xor    DWORD PTR [ebx-0x377a3e1f],edi
  403612:	lock or bl,BYTE PTR [eax+0x7e]
  403616:	and    al,0x36
  403618:	push   0xffffffad
  40361a:	inc    ecx
  40361b:	jo     0x4035f8
  40361d:	pushf  
  40361e:	dec    esp
  40361f:	iret   
  403620:	into   
  403621:	jb     0x4035f2
  403623:	cmp    BYTE PTR [ebp+0x33],dh
  403626:	mov    ah,0xb2
  403628:	sbb    esi,DWORD PTR [eax+0xb]
  40362b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40362c:	outs   dx,DWORD PTR ds:[esi]
  40362d:	gs inc edi
  40362f:	dec    ebx
  403630:	add    BYTE PTR [ebx-0x1a],ah
  403633:	push   eax
  403634:	mov    esi,0x1dfb0936
  403639:	jbe    0x403670
  40363b:	xchg   esi,eax
  40363c:	sbb    al,0x80
  40363e:	inc    esp
  40363f:	outs   dx,BYTE PTR ds:[esi]
  403640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403641:	fsub   QWORD PTR [esi-0x203dd454]
  403647:	cmp    eax,DWORD PTR ds:0x3f66fa06
  40364d:	aam    0x2b
  40364f:	(bad)  
  403650:	sub    ch,ah
  403652:	mov    al,0xce
  403654:	add    al,bh
  403656:	ret    0x261e
  403659:	xor    esp,DWORD PTR [ecx]
  40365b:	shl    ecx,cl
  40365d:	push   ss
  40365e:	or     DWORD PTR [ebx+ebx*4-0x1e077c03],ecx
  403665:	fmul   DWORD PTR [edx]
  403667:	stc    
  403668:	test   eax,0x9ea9b08b
  40366d:	jmp    0x4036da
  40366f:	xchg   esi,eax
  403670:	out    0x7c,al
  403672:	js     0x403646
  403674:	xchg   ebx,eax
  403675:	add    BYTE PTR [esi],bh
  403677:	ficomp WORD PTR [ecx]
  403679:	push   cs
  40367a:	and    esi,esp
  40367c:	fadd   DWORD PTR [ecx]
  40367e:	iret   
  40367f:	xchg   edi,eax
  403680:	mov    bl,0x17
  403682:	adc    al,0x8e
  403684:	ret    0x170b
  403687:	xchg   DWORD PTR gs:[ecx+0x35],edx
  40368b:	icebp  
  40368c:	ins    DWORD PTR es:[edi],dx
  40368d:	and    eax,0x94b7e179
  403692:	inc    eax
  403693:	mov    dl,0xf
  403695:	repnz popa 
  403697:	mov    ebx,0xa7102811
  40369c:	or     bl,BYTE PTR [ecx-0x45]
  40369f:	arpl   WORD PTR [ebx+0x78],si
  4036a2:	mov    al,0xba
  4036a4:	retf   
  4036a5:	rol    DWORD PTR [eax+eiz*8],cl
  4036a8:	mov    ds:0x9d8011a5,eax
  4036ad:	sub    al,0x7a
  4036af:	daa    
  4036b0:	jmp    0xa33ad418
  4036b5:	lods   eax,DWORD PTR ds:[esi]
  4036b6:	scas   eax,DWORD PTR es:[edi]
  4036b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b8:	cmp    DWORD PTR [ecx],ecx
  4036ba:	mov    ds:0xaab48a9d,al
  4036bf:	sub    al,0xc4
  4036c1:	inc    ecx
  4036c2:	mov    ss,WORD PTR [eax]
  4036c4:	pop    edx
  4036c5:	sbb    eax,0x10a18507
  4036ca:	jbe    0x403726
  4036cc:	rcr    bh,1
  4036ce:	sbb    DWORD PTR [edi-0x69a915cf],eax
  4036d4:	out    dx,al
  4036d5:	fsubr  DWORD PTR [ebp+0x273ba0a2]
  4036db:	mov    WORD PTR [ebp+edx*8-0x28],?
  4036df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036e0:	add    DWORD PTR [ecx-0x3e],ebx
  4036e3:	sub    esp,DWORD PTR es:[ecx-0x3d3cc867]
  4036ea:	shl    BYTE PTR [ebp+0x52],0x35
  4036ee:	mov    edi,0x5d7093da
  4036f3:	inc    ecx
  4036f4:	xchg   esi,eax
  4036f5:	das    
  4036f6:	retf   
  4036f7:	add    BYTE PTR [edi+0x65],0xd2
  4036fb:	push   edx
  4036fc:	aaa    
  4036fd:	fbstp  TBYTE PTR [ebx+0xb0509fd]
  403703:	sub    DWORD PTR [edx-0x7622e358],esp
  403709:	mov    edx,0x329491b1
  40370e:	in     eax,0xa5
  403710:	jne    0x403703
  403712:	mov    ds:0xb9f900d8,al
  403717:	gs sub eax,0x3455505f
  40371d:	dec    ebp
  40371e:	sub    DWORD PTR ds:0xb1a06441,eax
  403724:	mov    dl,0x65
  403726:	loopne 0x403788
  403728:	xchg   edi,eax
  403729:	jno    0x403719
  40372b:	test   BYTE PTR [esi+0x14385dfd],cl
  403731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403732:	xchg   esp,eax
  403733:	add    cl,bh
  403735:	call   0xb833b1dc
  40373a:	popa   
  40373b:	mov    esp,0x42dcf427
  403740:	or     al,bl
  403742:	test   al,0x98
  403744:	add    DWORD PTR [eax+0x15],ebx
  403747:	int    0x99
  403749:	scas   eax,DWORD PTR es:[edi]
  40374a:	xlat   BYTE PTR ds:[ebx]
  40374b:	mov    dh,BYTE PTR [edx+0x3561247f]
  403751:	mov    fs,WORD PTR [ebx+ebp*2-0x30]
  403755:	fidiv  DWORD PTR [esi]
  403757:	test   BYTE PTR [ebx],ch
  403759:	jmp    0x40374b
  40375b:	rcl    BYTE PTR [edi+0x1bee263a],cl
  403761:	pop    esi
  403762:	imul   ecx,DWORD PTR [ecx-0x74bbc798],0x2f
  403769:	pop    ecx
  40376a:	ret    0x2857
  40376d:	imul   ebp,DWORD PTR ds:[edx],0x40a25eb6
  403774:	fld    QWORD PTR [ebx+0x6c]
  403777:	gs sub eax,0x6571e2a7
  40377d:	cmp    esp,DWORD PTR [esi+0x6ba43528]
  403783:	jno    0x4037ad
  403785:	retf   
  403786:	push   es
  403787:	and    BYTE PTR [ebp+0x3abaaea6],ah
  40378d:	inc    ebx
  40378e:	ficomp WORD PTR [edx]
  403790:	cli    
  403791:	sbb    DWORD PTR [ebp+0x2c37c0b1],ebp
  403797:	scas   eax,DWORD PTR es:[edi]
  403798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403799:	inc    esi
  40379a:	in     al,dx
  40379b:	lds    ebp,FWORD PTR [edx+eiz*8+0x7181be7e]
  4037a2:	or     eax,DWORD PTR [ebp-0x5135138a]
  4037a8:	es or  ch,bl
  4037ab:	dec    ebp
  4037ac:	loop   0x403804
  4037ae:	aam    0x95
  4037b0:	les    esp,FWORD PTR [esi+0x13]
  4037b3:	xor    eax,0xa9ab3db9
  4037b8:	shld   DWORD PTR [edx*2-0x11092a1c],esi,0xa9
  4037c1:	ins    BYTE PTR es:[edi],dx
  4037c2:	add    ebx,ebp
  4037c4:	test   al,0x5
  4037c6:	es aam 0xcb
  4037c9:	xchg   ecx,eax
  4037ca:	add    eax,0x89ff1714
  4037cf:	jnp    0x40378c
  4037d1:	shl    BYTE PTR [edx-0x455fe46c],cl
  4037d7:	(bad)  
  4037d8:	xor    ebp,esp
  4037da:	clc    
  4037db:	xchg   ebp,eax
  4037dc:	jmp    0x70d6:0xdb6e20cf
  4037e3:	leave  
  4037e4:	retf   
  4037e5:	mov    BYTE PTR [esi+0x26],bl
  4037e8:	pop    ds
  4037e9:	in     al,0x48
  4037eb:	xchg   DWORD PTR [edi],edi
  4037ed:	pop    esp
  4037ee:	(bad)  
  4037ef:	cmp    al,0x73
  4037f1:	fucomi st,st(3)
  4037f3:	loopne 0x4037db
  4037f5:	push   0xdcf718bb
  4037fa:	cdq    
  4037fb:	mov    WORD PTR [ebp+0x5b60c782],?
  403801:	xchg   ecx,eax
  403802:	jmp    0x6a3b5c37
  403807:	addr16 enter 0x6dc8,0x8c
  40380c:	pop    ecx
  40380d:	jp     0x4037dd
  40380f:	jg     0x403802
  403811:	jp     0x4037bc
  403813:	sbb    al,BYTE PTR [edi-0x7a]
  403816:	in     eax,dx
  403817:	and    esp,DWORD PTR [edx-0x7]
  40381a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40381b:	loopne 0x4037a4
  40381d:	sahf   
  40381e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40381f:	scas   eax,DWORD PTR es:[edi]
  403820:	mov    esi,0x10d34edf
  403825:	add    al,0xcd
  403827:	into   
  403828:	gs (bad) 
  40382a:	push   edx
  40382b:	in     eax,0x44
  40382d:	pop    edx
  40382e:	mov    esi,DWORD PTR [esi]
  403830:	jae    0x403860
  403832:	inc    ebp
  403833:	dec    ebp
  403834:	mov    cl,ch
  403836:	mov    fs,ebx
  403838:	mov    ebp,esp
  40383a:	stos   DWORD PTR es:[di],eax
  40383c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40383d:	jnp    0x40381b
  40383f:	ss in  al,dx
  403841:	loop   0x403843
  403843:	push   edi
  403844:	mov    WORD PTR [eax-0x50],fs
  403847:	pusha  
  403848:	retf   0x891b
  40384b:	mov    WORD PTR [ebx+0x5c],ds
  40384e:	jae    0x40381e
  403850:	mov    bl,0xf5
  403852:	and    DWORD PTR [edi-0x6b],esi
  403855:	jb     0x403873
  403857:	fidivr DWORD PTR [eax]
  403859:	xchg   esi,eax
  40385a:	call   0xd539cee1
  40385f:	mov    ch,0x3f
  403861:	js     0x4038d2
  403863:	adc    al,0xe6
  403865:	mov    edi,0x84b52c99
  40386a:	push   ds
  40386b:	pop    ebp
  40386c:	mov    ah,0x40
  40386e:	leave  
  40386f:	xlat   BYTE PTR ds:[ebx]
  403870:	cmp    esp,edi
  403872:	aas    
  403873:	repnz cmc 
  403875:	ds int 0xad
  403878:	(bad)  
  403879:	retf   0x5d88
  40387c:	and    eax,0x600221ee
  403881:	pop    ss
  403882:	fdivp  st(1),st
  403884:	aam    0xa9
  403886:	cmc    
  403887:	push   esp
  403888:	imul   esi,DWORD PTR [ebp-0x48],0xd1caa9a9
  40388f:	outs   dx,BYTE PTR ds:[esi]
  403890:	sub    eax,0x6a2667d8
  403895:	pop    eax
  403896:	int3   
  403897:	(bad)  
  403898:	jmp    0x16d1ef8f
  40389d:	cmp    bh,cl
  40389f:	sub    edi,0xd12dae99
  4038a5:	sbb    eax,0x2a6630e4
  4038aa:	imul   ecx,DWORD PTR [ebx+0x7d],0xffffff86
  4038ae:	or     edx,0x59109af8
  4038b4:	adc    dl,bl
  4038b6:	sbb    BYTE PTR [edx+0x68ecbbbb],bl
  4038bc:	dec    ecx
  4038bd:	and    edi,esp
  4038bf:	repnz xchg esp,eax
  4038c1:	adc    edi,ecx
  4038c3:	push   ebp
  4038c4:	ins    BYTE PTR es:[edi],dx
  4038c5:	inc    eax
  4038c6:	int3   
  4038c7:	xchg   ebx,eax
  4038c8:	in     eax,dx
  4038c9:	adc    ch,dl
  4038cb:	inc    ecx
  4038cc:	mov    bx,gs
  4038cf:	push   ebx
  4038d0:	push   ss
  4038d1:	aas    
  4038d2:	push   eax
  4038d3:	(bad)  [edi+0x3e]
  4038d6:	cdq    
  4038d7:	scas   al,BYTE PTR es:[edi]
  4038d8:	adc    eax,0xd9cea9ba
  4038dd:	jl     0x40389f
  4038df:	mov    dh,0x75
  4038e1:	jno    0x403873
  4038e3:	mov    ah,0xbc
  4038e5:	test   bh,al
  4038e7:	and    BYTE PTR [esi],ah
  4038e9:	push   eax
  4038ea:	test   DWORD PTR [ebp-0x4b2b3cde],edi
  4038f0:	mov    esp,0x729490de
  4038f5:	adc    ebx,esp
  4038f7:	out    dx,eax
  4038f8:	in     al,0x2b
  4038fa:	cmp    ch,ch
  4038fc:	mov    ds,WORD PTR [edi+0x60]
  4038ff:	scas   eax,DWORD PTR es:[edi]
  403900:	mov    ds:0xaba28502,eax
  403905:	xchg   ebp,eax
  403906:	inc    edi
  403907:	inc    edx
  403908:	addr16 inc eax
  40390a:	nop
  40390b:	adc    bl,BYTE PTR [ecx-0x32]
  40390e:	jp     0x4038c1
  403910:	cmp    ch,BYTE PTR [edi+esi*8+0x7e59c8d0]
  403917:	mov    ebx,0x5f386018
  40391c:	sbb    dh,BYTE PTR [edi-0x4a]
  40391f:	adc    ch,BYTE PTR [eax]
  403921:	jle    0x40393d
  403923:	icebp  
  403924:	xor    edi,DWORD PTR [ebx]
  403926:	pop    ds
  403927:	test   ebp,ecx
  403929:	add    ah,BYTE PTR [eax]
  40392b:	iret   
  40392c:	out    dx,al
  40392d:	fucomp st(4)
  40392f:	xlat   BYTE PTR ds:[ebx]
  403930:	push   ebp
  403931:	sbb    esp,DWORD PTR [ecx+0x4a]
  403934:	hlt    
  403935:	pop    edi
  403936:	mov    ds:0x979a51f2,eax
  40393b:	retf   0xc382
  40393e:	adc    al,0xd3
  403940:	jl     0x4039b5
  403942:	jle    0x403905
  403944:	ss pushf 
  403946:	dec    edi
  403947:	or     ch,BYTE PTR [ecx+0x54]
  40394a:	mov    ebx,0x280c2eb2
  40394f:	pop    ebx
  403950:	addr16 aad 0xcb
  403953:	cmp    al,BYTE PTR [ecx-0x495ba567]
  403959:	xchg   ebp,eax
  40395a:	jmp    0x3a41047
  40395f:	dec    ecx
  403960:	inc    ecx
  403961:	jge    0x403993
  403963:	popa   
  403964:	(bad)  
  403965:	adc    edx,DWORD PTR [ecx+ebp*8+0x7b]
  403969:	ret    0xb177
  40396c:	fstp   DWORD PTR [edi]
  40396e:	aam    0x6a
  403970:	sub    al,0x46
  403972:	xor    eax,0xd48c405
  403977:	gs out dx,eax
  403979:	jl     0x403927
  40397b:	add    esp,0xfffffffd
  40397e:	into   
  40397f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403980:	rcr    DWORD PTR [eax+ecx*4],cl
  403983:	jle    0x403910
  403985:	imul   edi,ebx,0xd
  403988:	mov    bl,0x4
  40398a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40398b:	aaa    
  40398c:	push   ss
  40398d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398e:	mov    dh,0xb7
  403990:	loopne 0x40397e
  403992:	cmp    eax,DWORD PTR [ecx+ebp*4-0x70b987ef]
  403999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40399a:	mov    cs,WORD PTR [ebx-0x6d]
  40399d:	push   ds
  40399e:	xchg   ebx,eax
  40399f:	stos   DWORD PTR es:[edi],eax
  4039a0:	leave  
  4039a1:	mov    ebp,0x9f9d5588
  4039a6:	fwait
  4039a7:	dec    eax
  4039a8:	test   al,0x3c
  4039aa:	jg     0x4039f0
  4039ac:	(bad)  
  4039ad:	mov    dh,0xfd
  4039af:	imul   eax,ebx,0x7
  4039b2:	and    esp,ebp
  4039b4:	xor    BYTE PTR [eax],ah
  4039b6:	add    ecx,ecx
  4039b8:	sbb    esp,eax
  4039ba:	and    BYTE PTR [ebp+0x0],0x21
  4039be:	stc    
  4039bf:	enter  0x5ba6,0x1b
  4039c3:	jmp    0x145d059a
  4039c8:	jno    0x40396c
  4039ca:	in     eax,0x73
  4039cc:	inc    ebx
  4039cd:	mov    ebx,0xbbd61bcf
  4039d2:	stos   DWORD PTR es:[edi],eax
  4039d3:	in     al,dx
  4039d4:	sub    edi,DWORD PTR [edx+0x3a]
  4039d7:	shr    edx,1
  4039d9:	sub    edx,DWORD PTR [eax]
  4039db:	xor    bh,BYTE PTR [edx]
  4039dd:	(bad)  
  4039de:	ins    BYTE PTR es:[edi],dx
  4039df:	(bad)  
  4039e0:	popf   
  4039e1:	xor    eax,ebx
  4039e3:	sub    al,0xa2
  4039e5:	inc    esi
  4039e6:	push   esi
  4039e7:	scas   al,BYTE PTR es:[edi]
  4039e8:	jmp    0x4039e7
  4039ea:	and    eax,0xa00ebf8f
  4039ef:	and    DWORD PTR [edx],eax
  4039f1:	jbe    0x403989
  4039f3:	popa   
  4039f4:	dec    esp
  4039f5:	enter  0xf9ab,0x98
  4039f9:	lods   eax,DWORD PTR ds:[esi]
  4039fa:	xchg   esi,eax
  4039fb:	push   ds
  4039fc:	dec    edx
  4039fd:	xor    DWORD PTR [eax],ecx
  4039ff:	lods   al,BYTE PTR ds:[esi]
  403a00:	sbb    al,0x76
  403a02:	enter  0xbe2f,0xea
  403a06:	sub    BYTE PTR [edx],cl
  403a08:	jno    0x403a21
  403a0a:	hlt    
  403a0b:	xchg   esp,eax
  403a0c:	and    dl,BYTE PTR [ebx-0x5a5e4f6e]
  403a12:	sbb    eax,0xeb3a234d
  403a17:	pop    esi
  403a18:	mov    al,ds:0x3d2121d6
  403a1d:	mul    DWORD PTR [edi]
  403a1f:	sahf   
  403a20:	icebp  
  403a21:	pop    es
  403a22:	mov    ebx,DWORD PTR [edi-0x68]
  403a25:	push   ss
  403a26:	(bad)  
  403a27:	adc    dl,ch
  403a29:	xor    esi,DWORD PTR [edx-0x725ff7b8]
  403a2f:	or     eax,0x6488633d
  403a34:	adc    eax,0x49fb7f61
  403a39:	or     al,0xf4
  403a3b:	dec    ebp
  403a3c:	sbb    BYTE PTR [ecx-0x2f],ch
  403a3f:	cwde   
  403a40:	or     esp,DWORD PTR [esi]
  403a42:	arpl   si,bx
  403a44:	iret   
  403a45:	mov    cl,0x2e
  403a47:	lea    esp,[ebp+0x8ab85b5]
  403a4d:	mov    bl,0x53
  403a4f:	or     esp,DWORD PTR [edi-0x1bdb4680]
  403a55:	das    
  403a56:	jl     0x4039d8
  403a58:	fiadd  DWORD PTR [ebx-0x46c90a06]
  403a5e:	jb     0x4039eb
  403a60:	pop    ds
  403a61:	mov    ebx,0xaa7b53f2
  403a66:	dec    ebx
  403a67:	in     al,0x43
  403a69:	push   es
  403a6a:	popaw  
  403a6c:	lds    edi,FWORD PTR ds:0xdaddd2f3
  403a72:	xchg   DWORD PTR [ecx],ebp
  403a74:	ffreep st(1)
  403a76:	inc    eax
  403a77:	mov    al,0x95
  403a79:	xchg   ecx,eax
  403a7a:	cld    
  403a7b:	sbb    ah,BYTE PTR [edx]
  403a7d:	mov    esp,0x65bd215d
  403a82:	xor    ebx,ebp
  403a84:	js     0x403a80
  403a86:	fstp   TBYTE PTR [eax-0x49ad1e14]
  403a8c:	mov    bh,bh
  403a8e:	adc    edx,DWORD PTR [edi]
  403a90:	xor    dx,0x40ee
  403a95:	ds rcr dh,0xfc
  403a99:	pusha  
  403a9a:	xchg   BYTE PTR [eax],bh
  403a9c:	inc    ebp
  403a9d:	out    0xd1,al
  403a9f:	xor    al,0xcd
  403aa1:	cs adc ebx,edi
  403aa4:	dec    ebp
  403aa5:	test   eax,0x8e2bf7b7
  403aaa:	mov    ebx,DWORD PTR ds:0x4c4f8b10
  403ab0:	add    esp,DWORD PTR [edx+ebp*2]
  403ab3:	adc    bl,BYTE PTR [edi-0x46]
  403ab6:	mov    edi,0xf1b7b91d
  403abb:	adc    esp,DWORD PTR [ecx+0x3d204d8f]
  403ac1:	xchg   ecx,eax
  403ac2:	rcl    BYTE PTR [edx+esi*1],cl
  403ac5:	push   ebp
  403ac6:	das    
  403ac7:	mov    ch,0xee
  403ac9:	mov    ds:0xd422cbad,al
  403ace:	add    BYTE PTR [edi-0x26],0x15
  403ad2:	xchg   ebp,eax
  403ad3:	in     eax,dx
  403ad4:	aas    
  403ad5:	test   BYTE PTR [ecx+eiz*8],ah
  403ad8:	sub    eax,0xf6714fbe
  403add:	inc    ecx
  403ade:	sub    dh,BYTE PTR [eax-0xf31a0cc]
  403ae4:	xchg   edx,eax
  403ae5:	push   0xbfcd69a6
  403aea:	lock pop ebp
  403aec:	sub    esi,eax
  403aee:	(bad)
  403af1:	and    eax,0x8c2b3a7f
  403af6:	scas   al,BYTE PTR es:[edi]
  403af7:	loopne 0x403b26
  403af9:	cmp    al,0xd3
  403afb:	cli    
  403afc:	cmp    eax,0x86fc614a
  403b01:	ret    0x7131
  403b04:	outs   dx,DWORD PTR ds:[esi]
  403b05:	lods   eax,DWORD PTR ds:[esi]
  403b06:	sbb    al,0xa3
  403b08:	rcr    BYTE PTR [eax+0x4b],1
  403b0b:	jle    0x403b50
  403b0d:	xchg   esp,eax
  403b0e:	popa   
  403b0f:	and    DWORD PTR [eax+ebp*1],ecx
  403b12:	pushf  
  403b13:	sub    eax,0x9d557b54
  403b18:	jmp    0x499ca964
  403b1d:	and    BYTE PTR [ebp+0x720b5914],bh
  403b23:	mov    BYTE PTR [edx-0x7e],al
  403b26:	dec    esp
  403b27:	xchg   edi,eax
  403b28:	fist   WORD PTR [ebx]
  403b2a:	test   ecx,ecx
  403b2c:	mov    ds:0x4c22189c,al
  403b31:	fnstcw WORD PTR [edx+0x51b11fb]
  403b37:	outs   dx,BYTE PTR cs:[esi]
  403b39:	aad    0xb1
  403b3b:	cmp    DWORD PTR [ebp-0x71baef92],0xfffffffa
  403b42:	daa    
  403b43:	out    dx,al
  403b44:	jo     0x403b03
  403b46:	jo     0x403b06
  403b48:	(bad)  
  403b49:	stc    
  403b4a:	out    dx,al
  403b4b:	adc    al,0x79
  403b4d:	mov    edx,0x1c2cff88
  403b52:	dec    ebx
  403b53:	loope  0x403b7d
  403b55:	sbb    BYTE PTR [eax+ebp*1],ah
  403b58:	add    DWORD PTR [edi+eax*1-0x2042790b],esi
  403b5f:	jp     0x403b17
  403b61:	push   ebp
  403b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b63:	shl    BYTE PTR [edi-0x19],1
  403b66:	ror    DWORD PTR [ebp+0x62c3c159],cl
  403b6c:	in     eax,0xbe
  403b6e:	aam    0x72
  403b70:	lds    esi,FWORD PTR [ebp-0x4f568d15]
  403b76:	jmp    0x403bbd
  403b78:	xchg   ebx,eax
  403b79:	sub    al,0xb3
  403b7b:	pop    esp
  403b7c:	push   0x78704e05
  403b81:	mov    ch,0xd3
  403b83:	shl    BYTE PTR [ecx+ebp*2+0x4e],cl
  403b87:	(bad)  
  403b88:	cmp    edx,DWORD PTR [eax]
  403b8a:	dec    esi
  403b8b:	ror    DWORD PTR [ecx+0x2b],0xe9
  403b8f:	pop    edx
  403b90:	mov    dl,0x8f
  403b92:	jle    0x403b52
  403b94:	pop    eax
  403b95:	cmp    ecx,esi
  403b97:	loopne 0x403b85
  403b99:	test   dh,ch
  403b9b:	sub    al,0x40
  403b9d:	mov    esi,0xa50074da
  403ba2:	cmp    al,0xdd
  403ba4:	pop    ecx
  403ba5:	push   es
  403ba6:	push   es
  403ba7:	push   ecx
  403ba8:	fnsave [eax-0x7f]
  403bab:	mov    eax,gs
  403bad:	call   0x26d64cc0
  403bb2:	aad    0x95
  403bb4:	adc    ecx,DWORD PTR [ebp-0x53fabcb9]
  403bba:	jmp    0x91ddaf31
  403bbf:	sbb    eax,DWORD PTR [ecx+0x525f2404]
  403bc5:	lods   al,BYTE PTR ds:[esi]
  403bc6:	bound  edi,QWORD PTR [edi]
  403bc8:	ret    
  403bc9:	adc    ah,cl
  403bcb:	xor    DWORD PTR [ebx+0x15685802],ecx
  403bd1:	mov    edi,ds
  403bd3:	add    DWORD PTR [eax],ebx
  403bd5:	popf   
  403bd6:	retf   0x948c
  403bd9:	and    al,0xf1
  403bdb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bdd:	loopne 0x403bc2
  403bdf:	xchg   ebp,eax
  403be0:	in     al,0xee
  403be2:	adc    al,0xb9
  403be4:	mov    ds:0x22ed6d0f,eax
  403be9:	iret   
  403bea:	ja     0x403c2f
  403bec:	mov    ds:0x744f1785,al
  403bf1:	ins    BYTE PTR es:[edi],dx
  403bf2:	pop    esi
  403bf3:	js     0x403c04
  403bf5:	dec    eax
  403bf6:	or     DWORD PTR [ebp-0x7b5c0692],ecx
  403bfc:	imul   ebp,DWORD PTR [esi+0x4e65dd17],0x46ad4149
  403c06:	fbld   TBYTE PTR [ebx+0x42]
  403c09:	ins    DWORD PTR es:[edi],dx
  403c0a:	mov    dl,0xa6
  403c0c:	mov    ds:0x74b8ff2b,eax
  403c11:	xchg   esi,eax
  403c12:	push   cs
  403c13:	jnp    0x403bec
  403c15:	push   eax
  403c16:	jle    0x403bb0
  403c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c19:	push   esi
  403c1a:	jp     0x403c6e
  403c1c:	and    BYTE PTR [ebp+0x3be4e40a],dl
  403c22:	push   cs
  403c23:	fwait
  403c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c25:	inc    eax
  403c26:	test   DWORD PTR [edi+0x220a23cc],eax
  403c2c:	ins    BYTE PTR es:[edi],dx
  403c2d:	add    BYTE PTR [edi],ch
  403c2f:	mov    esi,0x7d9eaa37
  403c34:	mov    BYTE PTR [eax],bh
  403c36:	jae    0x403ca2
  403c38:	ret    
  403c39:	dec    edx
  403c3a:	and    edx,DWORD PTR [ebx]
  403c3c:	and    al,BYTE PTR [ebx+0x1d]
  403c3f:	push   es
  403c40:	(bad)  
  403c41:	nop
  403c42:	test   BYTE PTR [esp+edx*2+0x2d6966d4],dl
  403c49:	jmp    0x961606dc
  403c4e:	and    eax,0x9cabe2db
  403c53:	(bad)  
  403c56:	adc    ecx,DWORD PTR [eax+0x1]
  403c59:	or     eax,0x3657e418
  403c5e:	cmp    dl,BYTE PTR ds:0xc26742b3
  403c64:	jns    0x403c32
  403c66:	test   edx,ecx
  403c68:	imul   ebx,ebp,0xae450d57
  403c6e:	sub    eax,0xe904c2f
  403c73:	add    eax,0x31830a94
  403c78:	sub    BYTE PTR [ebp-0x1d3e374a],dl
  403c7e:	aam    0x33
  403c80:	dec    ecx
  403c81:	enter  0x60c6,0x2c
  403c85:	(bad)  
  403c86:	lods   eax,DWORD PTR ds:[esi]
  403c87:	ins    BYTE PTR es:[edi],dx
  403c88:	xor    eax,0x123d406e
  403c8d:	pop    edx
  403c8e:	add    al,0xa2
  403c90:	in     al,dx
  403c91:	out    0xf9,eax
  403c93:	jbe    0x403c19
  403c95:	enter  0xad23,0xe3
  403c99:	mov    dl,0x5c
  403c9b:	push   esi
  403c9c:	das    
  403c9d:	int3   
  403c9e:	mov    ebp,0x922234e9
  403ca3:	imul   ecx,DWORD PTR [bx],0x9b6e34dc
  403caa:	add    ebx,DWORD PTR [esi-0x2783ba45]
  403cb0:	or     al,0x1c
  403cb2:	push   esi
  403cb3:	es inc ebx
  403cb5:	jne    0x403d2a
  403cb7:	pop    ds
  403cb8:	aad    0x28
  403cba:	imul   edi,DWORD PTR [ecx+ebp*4],0x870ce81c
  403cc1:	cdq    
  403cc2:	inc    DWORD PTR [edi]
  403cc4:	test   eax,0xd017b807
  403cc9:	or     eax,ebp
  403ccb:	sbb    bh,cl
  403ccd:	retf   0xd061
  403cd0:	sub    edx,DWORD PTR [edi+eax*4+0xefa30d9]
  403cd7:	(bad)  
  403cd8:	cmc    
  403cd9:	loop   0x403cb5
  403cdb:	mov    dl,0x4
  403cdd:	nop
  403cde:	mov    ebp,0xdd47673d
  403ce3:	cmp    edi,DWORD PTR [edi-0x68]
  403ce6:	push   edx
  403ce7:	push   ds
  403ce8:	or     DWORD PTR [edi-0x568176ef],esi
  403cee:	jno    0x403d64
  403cf0:	call   0xd2a8:0x2c209c25
  403cf7:	add    BYTE PTR [ebp+eiz*8-0x32fa56f6],ch
  403cfe:	push   es
  403cff:	dec    eax
  403d00:	add    edx,DWORD PTR [ecx+0xb08c629]
  403d06:	inc    edi
  403d07:	inc    ebp
  403d08:	div    BYTE PTR [eax+0x3d8ab5d5]
  403d0e:	sbb    al,ah
  403d10:	adc    al,0x49
  403d13:	and    ch,BYTE PTR [ebx]
  403d15:	mov    ebx,0x1e7ee128
  403d1a:	scas   al,BYTE PTR es:[edi]
  403d1b:	lock out dx,eax
  403d1d:	outs   dx,BYTE PTR ds:[esi]
  403d1e:	inc    esi
  403d1f:	sub    al,0xa0
  403d21:	fdiv   st(5),st
  403d23:	test   bh,0xe5
  403d26:	stos   BYTE PTR es:[edi],al
  403d27:	jne    0x403d23
  403d29:	mov    eax,ds:0xe5af2681
  403d2e:	ror    dh,1
  403d30:	scas   al,BYTE PTR es:[edi]
  403d31:	jge    0x403d0b
  403d33:	jbe    0x403d70
  403d35:	rcr    BYTE PTR [edi+0x6d966a50],1
  403d3b:	push   es
  403d3c:	in     eax,dx
  403d3d:	lock aam 0xee
  403d40:	push   edi
  403d41:	dec    edx
  403d42:	fwait
  403d43:	mov    eax,0xffd16c86
  403d48:	out    0x67,eax
  403d4a:	mov    al,bl
  403d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4d:	int3   
  403d4e:	xor    eax,0x3d7bd314
  403d53:	stos   DWORD PTR es:[edi],eax
  403d54:	sbb    BYTE PTR [ebp-0x1fad1522],bl
  403d5a:	not    bl
  403d5c:	xlat   BYTE PTR ds:[ebx]
  403d5d:	jmp    0xb0ca3fa7
  403d62:	aad    0x57
  403d64:	inc    edx
  403d65:	pop    ecx
  403d66:	fwait
  403d67:	xchg   ebp,eax
  403d68:	xchg   BYTE PTR [ebx+esi*1+0x6fc9d9ea],bl
  403d6f:	sbb    eax,0x81f52a91
  403d74:	ins    DWORD PTR es:[edi],dx
  403d75:	xor    eax,0x35d4706d
  403d7a:	(bad)  
  403d7c:	div    BYTE PTR [edx+0x67ea94ef]
  403d82:	cmp    ah,BYTE PTR [edi]
  403d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d85:	dec    esi
  403d86:	dec    BYTE PTR [ebp+ebx*2-0x3c9f56ba]
  403d8d:	add    DWORD PTR [eax+ebp*4-0x1239db6],eax
  403d94:	and    ah,BYTE PTR [ebp-0x47]
  403d97:	jb     0x403dc0
  403d99:	ins    BYTE PTR es:[edi],dx
  403d9a:	push   edx
  403d9b:	pop    esp
  403d9c:	dec    eax
  403d9d:	or     eax,0x4e849be0
  403da2:	push   esi
  403da3:	adc    eax,0x528cd0ff
  403da8:	adc    BYTE PTR [eax+0x6f],0x2e
  403dac:	ss ins DWORD PTR es:[edi],dx
  403dae:	push   ebx
  403daf:	mov    bh,0x73
  403db1:	dec    esi
  403db2:	loop   0x403dd2
  403db4:	pop    DWORD PTR [edi]
  403db6:	sbb    DWORD PTR [esp+edx*8],edx
  403db9:	ja     0x403dd9
  403dbb:	adc    al,0x69
  403dbd:	xor    al,0x29
  403dbf:	es dec ebp
  403dc1:	mul    DWORD PTR [eax+0x54]
  403dc4:	push   ss
  403dc5:	fsubr  QWORD PTR [eax]
  403dc7:	or     al,0x7a
  403dc9:	pop    esp
  403dca:	xor    eax,esp
  403dcc:	fisub  DWORD PTR [esi-0x179eeb5e]
  403dd2:	scas   al,BYTE PTR es:[edi]
  403dd3:	pop    ds
  403dd4:	sbb    DWORD PTR [edx],ebp
  403dd6:	jae    0x403e06
  403dd8:	pop    eax
  403dd9:	fsubr  QWORD PTR gs:[eax-0x5b00fc4a]
  403de0:	mov    bh,0x76
  403de2:	fisub  WORD PTR [eax]
  403de4:	data16 sbb bh,bh
  403de7:	(bad)  [esi-0x4c]
  403dea:	inc    edi
  403deb:	mov    ah,0xed
  403ded:	dec    eax
  403dee:	(bad)  
  403def:	adc    BYTE PTR [ecx+0x11f4ea3a],dl
  403df5:	xchg   ebp,eax
  403df6:	cmp    edi,ebx
  403df8:	cmp    dh,BYTE PTR [esp+edi*2+0x4e]
  403dfc:	sbb    DWORD PTR [eax],edx
  403dfe:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  403e00:	mov    edi,0x5bc7e2db
  403e05:	lea    edx,[esi]
  403e07:	stos   DWORD PTR es:[edi],eax
  403e08:	addr16 jmp 0xcc01a565
  403e0e:	fsubr  QWORD PTR ds:0xd992a589
  403e14:	inc    ebp
  403e15:	jae    0x403da7
  403e17:	jae    0x403e0f
  403e19:	add    eax,DWORD PTR [ecx]
  403e1b:	mov    al,0xa8
  403e1d:	(bad)  
  403e1e:	in     eax,0x49
  403e20:	popf   
  403e21:	jg     0x403daa
  403e23:	pop    ds
  403e24:	outs   dx,DWORD PTR ds:[esi]
  403e25:	jg     0x403e51
  403e27:	loop   0x403e18
  403e29:	pop    ds
  403e2a:	xchg   ebx,eax
  403e2b:	cmc    
  403e2c:	mov    ?,ebp
  403e2e:	fidiv  WORD PTR [esi-0x2c4daab]
  403e34:	push   ss
  403e35:	cmc    
  403e36:	lea    edx,ds:0xe1d8643d
  403e3c:	inc    ebp
  403e3d:	bound  eax,QWORD PTR [ebx]
  403e3f:	aas    
  403e40:	add    BYTE PTR [eax-0x43882a02],al
  403e46:	push   es
  403e47:	cmp    ah,al
  403e49:	mov    dh,0x16
  403e4b:	sbb    dl,BYTE PTR [edx-0x5b]
  403e4e:	adc    DWORD PTR [edx-0x56],ecx
  403e51:	cmc    
  403e52:	add    bh,BYTE PTR [esi+0x4808af96]
  403e58:	xchg   ecx,eax
  403e59:	int3   
  403e5a:	xor    eax,0x2c729e4a
  403e5f:	cdq    
  403e60:	xor    al,0x30
  403e62:	fwait
  403e63:	pop    ecx
  403e64:	pop    es
  403e65:	mov    ?,esp
  403e67:	or     al,0xe9
  403e69:	pusha  
  403e6a:	ds cmc 
  403e6c:	mov    bl,0xaf
  403e6e:	js     0x403eba
  403e70:	adc    ecx,DWORD PTR [esi]
  403e72:	or     eax,0x5802c460
  403e77:	dec    edi
  403e78:	cmp    DWORD PTR [ecx+0x3716ea],eax
  403e7e:	mov    ah,BYTE PTR [edx+0x7971a48f]
  403e84:	mov    al,0x4a
  403e86:	clc    
  403e87:	stc    
  403e88:	dec    edi
  403e89:	or     ch,BYTE PTR [ebx+0x50f576e9]
  403e8f:	fadd   QWORD PTR [eax-0x70]
  403e92:	cmp    eax,0x8db35bc8
  403e97:	dec    eax
  403e98:	push   ebp
  403e99:	pushf  
  403e9a:	jb     0x403e8d
  403e9c:	rol    DWORD PTR [ecx+0x10ce824f],0xfa
  403ea3:	jo     0x403e66
  403ea5:	inc    eax
  403ea6:	jbe    0x403e7a
  403ea8:	mov    eax,ds:0x1e4281dc
  403ead:	cdq    
  403eae:	sub    esp,DWORD PTR [esi]
  403eb0:	xchg   edi,eax
  403eb1:	add    eax,0xd7c2b70b
  403eb6:	jl     0x403f1d
  403eb8:	xor    ah,ch
  403eba:	mov    dh,0x3a
  403ebc:	cmp    DWORD PTR [edx],0xfffffff9
  403ebf:	sub    dl,BYTE PTR [ebp+0x58465123]
  403ec5:	(bad)  
  403ec7:	inc    ecx
  403ec8:	sbb    eax,DWORD PTR [ebx+ebp*4]
  403ecb:	adc    bl,dl
  403ecd:	arpl   WORD PTR [ebp+0x6d],bp
  403ed0:	sub    al,0x1c
  403ed2:	push   cs
  403ed3:	fisub  WORD PTR [ecx-0x6302e0ab]
  403ed9:	pop    ds
  403eda:	call   0x628a638b
  403edf:	scas   al,BYTE PTR es:[edi]
  403ee0:	jno    0x403e8f
  403ee2:	imul   edx,ebx,0x58851359
  403ee8:	and    DWORD PTR [edi+0x394235b],0x5a
  403eef:	pop    esp
  403ef0:	cmp    DWORD PTR [ebx],ecx
  403ef2:	lods   eax,DWORD PTR ds:[esi]
  403ef3:	(bad)  
  403ef5:	sbb    eax,0xc69dabbe
  403efa:	push   0x5a
  403efc:	call   0x10a9:0xa6c9dffc
  403f03:	sub    al,BYTE PTR [edi]
  403f05:	int3   
  403f06:	mov    al,0x61
  403f08:	call   0x5640:0xcb881705
  403f0f:	popa   
  403f10:	pop    edx
  403f11:	(bad)  
  403f12:	(bad)  
  403f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f14:	mov    dl,ch
  403f16:	aas    
  403f17:	fisubr DWORD PTR [edx+0x3a]
  403f1a:	sbb    ebp,DWORD PTR [ebp-0x44]
  403f1d:	sub    DWORD PTR [ecx],esi
  403f1f:	mov    ch,0x2a
  403f21:	inc    edx
  403f22:	push   ss
  403f23:	mov    edi,DWORD PTR [ebp-0x4c1ef044]
  403f29:	xchg   esp,eax
  403f2a:	iret   
  403f2b:	out    0x41,al
  403f2d:	push   ecx
  403f2e:	(bad)  
  403f2f:	jb     0x403eb4
  403f31:	loope  0x403f2e
  403f33:	xor    al,0xd9
  403f35:	and    al,0x72
  403f37:	push   esi
  403f38:	pop    ecx
  403f39:	in     eax,dx
  403f3a:	repnz mov bl,0xfe
  403f3d:	lock pop edx
  403f3f:	inc    edx
  403f40:	jnp    0x403f9c
  403f42:	aas    
  403f43:	push   edi
  403f44:	aas    
  403f45:	aaa    
  403f46:	pop    ds
  403f47:	push   ebp
  403f48:	aam    0x86
  403f4a:	mov    ecx,0x52b37570
  403f4f:	cmp    edx,DWORD PTR [eax+eax*2-0x10f9bc5c]
  403f56:	dec    BYTE PTR [esi]
  403f58:	stos   DWORD PTR es:[edi],eax
  403f59:	fs push 0x4b
  403f5c:	pop    ebx
  403f5d:	pushf  
  403f5e:	ins    DWORD PTR es:[edi],dx
  403f5f:	je     0x403f07
  403f61:	or     eax,0x831d160a
  403f66:	lock push ebp
  403f68:	push   ebx
  403f69:	jo     0x403fd6
  403f6b:	mov    cl,0x35
  403f6d:	test   dh,ah
  403f6f:	add    eax,0x2bc08584
  403f74:	out    dx,eax
  403f75:	enter  0x885a,0x7d
  403f79:	and    bh,BYTE PTR cs:[edx]
  403f7c:	fidiv  WORD PTR [esi]
  403f7e:	and    eax,0xc423acae
  403f83:	dec    edx
  403f84:	push   eax
  403f85:	xor    dl,BYTE PTR [esp+edx*2]
  403f88:	and    al,0x45
  403f8a:	out    dx,eax
  403f8b:	sbb    bl,BYTE PTR [esi]
  403f8d:	jg     0x403fc5
  403f8f:	cmp    DWORD PTR [eax],esi
  403f91:	adc    edx,DWORD PTR ds:0xd3eb0820
  403f97:	or     eax,0xb243acf5
  403f9c:	add    BYTE PTR [edx+0x2],0x8c
  403fa0:	div    DWORD PTR [ecx]
  403fa2:	(bad)  
  403fa3:	shl    BYTE PTR [edi+eiz*1],0xcd
  403fa7:	mov    ds:0x2cbc6d67,al
  403fac:	outs   dx,DWORD PTR ds:[esi]
  403fad:	les    ecx,FWORD PTR [ecx-0x5a574e36]
  403fb3:	sub    eax,0x824a9033
  403fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb9:	aam    0x2b
  403fbb:	adc    eax,0x5bf551cc
  403fc0:	mov    bl,0xb0
  403fc2:	xchg   DWORD PTR [edx+0x748863c7],ecx
  403fc8:	loopne 0x404014
  403fca:	stos   DWORD PTR es:[edi],eax
  403fcb:	push   cs
  403fcc:	push   sp
  403fce:	pop    edi
  403fcf:	jg     0x40404f
  403fd1:	leave  
  403fd2:	mov    esi,0xca02e835
  403fd7:	jle    0x403f73
  403fd9:	mov    al,0xc6
  403fdb:	dec    ebp
  403fdc:	sub    ecx,DWORD PTR [edi-0x461676c0]
  403fe2:	and    BYTE PTR [edi],0x31
  403fe5:	inc    ecx
  403fe6:	sub    BYTE PTR [edx-0x648cf221],ah
  403fec:	ja     0x403fe3
  403fee:	mov    al,ds:0x369d72ca
  403ff3:	in     al,dx
  403ff4:	cs xchg ebx,eax
  403ff6:	add    al,0x66
  403ff8:	lods   al,BYTE PTR ds:[esi]
  403ff9:	int3   
  403ffa:	add    DWORD PTR ds:0x7f0ed688,eax
  404000:	adc    DWORD PTR [edi],esi
  404002:	inc    esp
  404003:	mov    ds:0xfefa25a6,al
  404008:	jbe    0x403fd0
  40400a:	mov    ah,0x7d
  40400c:	jo     0x404059
  40400e:	xchg   ebx,eax
  40400f:	loop   0x403fca
  404011:	in     al,0xac
  404013:	mov    WORD PTR [ebx+ebx*8],cs
  404016:	add    dh,dl
  404018:	sub    DWORD PTR [edi-0x143654f4],0x69
  40401f:	mov    ?,ecx
  404021:	retf   
  404022:	gs call 0xdb9:0xeb259b3
  40402a:	into   
  40402b:	or     al,0x1b
  40402d:	dec    esi
  40402e:	add    bl,0xc9
  404031:	inc    edi
  404032:	sub    BYTE PTR ds:0x8d8c90c9,cl
  404038:	test   eax,0xaf9af292
  40403d:	sbb    edx,ecx
  40403f:	push   es
  404040:	pusha  
  404041:	int    0x66
  404043:	xchg   edi,eax
  404044:	es in  eax,dx
  404046:	push   eax
  404047:	jb     0x404027
  404049:	push   edi
  40404a:	add    ebp,edx
  40404c:	inc    ebp
  40404d:	jns    0x4040aa
  40404f:	add    DWORD PTR [eax+0x621a3b68],esp
  404055:	xchg   DWORD PTR [edi],ebp
  404057:	cmp    cl,BYTE PTR [ebp-0x7c]
  40405a:	cmp    bh,BYTE PTR [ebx+0x7b43e524]
  404060:	outs   dx,BYTE PTR ds:[esi]
  404061:	add    esp,eax
  404063:	std    
  404064:	loop   0x4040d9
  404066:	adc    dh,ah
  404068:	ror    WORD PTR [edx],1
  40406b:	and    al,0x99
  40406d:	pusha  
  40406e:	ins    DWORD PTR es:[edi],dx
  40406f:	scas   al,BYTE PTR es:[edi]
  404070:	cwde   
  404071:	pop    ebx
  404072:	mov    al,ds:0xe9935d44
  404077:	gs (bad) 
  40407a:	or     edi,DWORD PTR [ebx+0x47]
  40407d:	mov    ah,0x76
  40407f:	xor    BYTE PTR [ebx],al
  404081:	call   0xe068e6d2
  404086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404087:	or     ah,al
  404089:	jne    0x4040ab
  40408b:	pop    ecx
  40408c:	dec    ecx
  40408d:	sub    edi,DWORD PTR [ecx]
  40408f:	call   0x7d7bf8aa
  404094:	xchg   esi,eax
  404095:	call   0xe1dec910
  40409a:	or     eax,DWORD PTR [ebp+0x2b]
  40409d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409e:	adc    edx,eax
  4040a0:	(bad)  
  4040a1:	adc    eax,0x8290e313
  4040a6:	cmp    BYTE PTR [edi],0x2e
  4040a9:	stos   BYTE PTR es:[edi],al
  4040aa:	mov    dh,0xd5
  4040ac:	add    al,0x79
  4040ae:	sub    ah,BYTE PTR [edx]
  4040b0:	fidivr DWORD PTR ds:0xe8385890
  4040b6:	popa   
  4040b7:	aas    
  4040b8:	scas   eax,DWORD PTR es:[edi]
  4040b9:	arpl   WORD PTR [ebp-0x181c666],si
  4040bf:	test   DWORD PTR [ebx+0x66],edx
  4040c2:	inc    esp
  4040c3:	jp     0x4040fb
  4040c5:	in     al,0xb
  4040c7:	push   ebx
  4040c8:	sbb    eax,DWORD PTR [edx]
  4040ca:	adc    DWORD PTR [eax-0x7d],ebp
  4040cd:	les    ebx,FWORD PTR [ecx+eax*2+0x32]
  4040d1:	xor    ch,BYTE PTR [eax]
  4040d3:	or     eax,0xaf1d0179
  4040d8:	and    eax,ebp
  4040da:	and    bl,bl
  4040dc:	cmp    DWORD PTR [eax+ebp*4-0x61],ebp
  4040e0:	adc    BYTE PTR [ebx-0x3d],cl
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	and    dl,0xa8
  4040e7:	push   0x87f00873
  4040ec:	xor    BYTE PTR [ebx-0x1c7e2c4],bh
  4040f2:	lods   eax,DWORD PTR ds:[esi]
  4040f3:	repz shl DWORD PTR [eax],cl
  4040f6:	ret    
  4040f7:	jno    0x4040a1
  4040f9:	push   esi
  4040fa:	(bad)  
  4040fb:	sar    edi,1
  4040fd:	xor    BYTE PTR [ecx],bh
  4040ff:	stc    
  404100:	loope  0x4040d1
  404102:	add    BYTE PTR [edi],ah
  404104:	xor    ebx,eax
  404106:	fdiv   DWORD PTR [edi]
  404108:	xor    DWORD PTR [ecx],edx
  40410a:	popa   
  40410b:	push   edi
  40410c:	push   esp
  40410d:	mov    DWORD PTR [esi+0x77],0xd09579a0
  404114:	stc    
  404115:	or     eax,0xd2f9a8e8
  40411a:	mov    edi,0xa057a7cc
  40411f:	out    dx,al
  404120:	adc    al,0x36
  404122:	stos   DWORD PTR es:[edi],eax
  404123:	jae    0x4040eb
  404125:	push   0xffffffbc
  404127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404128:	mov    ch,0xdc
  40412a:	and    BYTE PTR [ecx+0x5f],0xa3
  40412e:	es dec edi
  404130:	or     DWORD PTR [edx+edx*2-0x16],ecx
  404134:	loopne 0x40412a
  404136:	add    eax,0x27f382c3
  40413b:	arpl   WORD PTR [ebp-0x3c],bx
  40413e:	fsub   DWORD PTR [edx+0x57]
  404141:	fild   QWORD PTR ds:0x7fdcf63d
  404147:	xlat   BYTE PTR ds:[ebx]
  404148:	rcl    al,cl
  40414a:	sti    
  40414b:	jne    0x404145
  40414d:	je     0x404165
  40414f:	inc    esi
  404150:	dec    ebp
  404151:	jge    0x404116
  404153:	inc    ecx
  404154:	mov    DWORD PTR [eax-0xc],edi
  404157:	pop    eax
  404158:	(bad)  
  404159:	jge    0x4041ca
  40415b:	pushf  
  40415c:	push   0xffffff89
  40415e:	add    DWORD PTR [ecx-0x4],eax
  404161:	adc    ebp,edi
  404163:	les    eax,FWORD PTR [ebp-0x71]
  404166:	jns    0x404169
  404168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404169:	or     cl,BYTE PTR [esi*2-0x25613daa]
  404170:	(bad)  
  404171:	xor    al,0xee
  404173:	imul   esp,DWORD PTR [esi+0x4c],0xffffffe8
  404177:	pop    eax
  404178:	and    DWORD PTR [esi],esi
  40417a:	mov    WORD PTR [ebp-0x73],?
  40417d:	push   cs
  40417e:	mov    dl,0xc1
  404180:	daa    
  404181:	fsub   DWORD PTR [eax+0x68]
  404184:	jge    0x4041b3
  404186:	outs   dx,BYTE PTR ds:[esi]
  404187:	leave  
  404188:	add    edx,edx
  40418a:	les    eax,FWORD PTR [edx+eax*2-0x51]
  40418e:	sahf   
  40418f:	sub    edx,DWORD PTR ss:[eax*4-0xf944ae6]
  404197:	gs mov ebx,0xdba1329f
  40419d:	and    eax,0xc6772456
  4041a2:	and    ah,BYTE PTR [eax+0x5f]
  4041a5:	loop   0x404202
  4041a7:	retf   0x31bd
  4041aa:	sub    BYTE PTR [esi-0x3a],bh
  4041ad:	in     al,dx
  4041ae:	out    0x60,eax
  4041b0:	push   esp
  4041b1:	outs   dx,DWORD PTR ds:[esi]
  4041b2:	mov    dl,0x2e
  4041b4:	inc    esp
  4041b5:	mov    ds:0x707c6cab,eax
  4041ba:	sahf   
  4041bb:	ins    DWORD PTR es:[edi],dx
  4041bc:	jecxz  0x4041c1
  4041be:	rcr    BYTE PTR [eax+0x59f4804b],cl
  4041c4:	sub    eax,0xc1b37fe4
  4041c9:	cmc    
  4041ca:	push   ebp
  4041cb:	ret    0xc508
  4041ce:	push   0xca1a32ff
  4041d3:	retf   
  4041d4:	add    BYTE PTR [ebx-0x2c7b01ec],dl
  4041da:	jae    0x404259
  4041dc:	(bad)  [eax]
  4041de:	test   DWORD PTR [ebx],0xa4181836
  4041e4:	and    BYTE PTR ds:0x7554f1f4,cl
  4041ea:	push   0xbd6f797f
  4041ef:	mov    ebx,0x1fe25d17
  4041f4:	pop    ebx
  4041f5:	in     al,0x49
  4041f7:	sbb    edx,esi
  4041f9:	adc    eax,0xcd35a68
  4041fe:	adc    al,0x28
  404200:	lahf   
  404201:	mov    esi,0xcf8a7da6
  404206:	(bad)  
  404207:	std    
  404208:	dec    esi
  404209:	lahf   
  40420a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40420b:	xor    al,0xe4
  40420d:	ds call 0x7310:0xdb46e096
  404215:	cmp    DWORD PTR [eax-0x6e],esp
  404218:	fdivr  st(2),st
  40421a:	cli    
  40421b:	mov    cl,0xd6
  40421d:	imul   esp,DWORD PTR [ecx+0x72e03838],0xffffff9a
  404224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404225:	out    dx,al
  404226:	fs out 0xf0,al
  404229:	cmp    bh,dh
  40422b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422c:	mov    edx,0x3c60bf90
  404231:	and    al,0x58
  404233:	mov    ch,ah
  404235:	sub    BYTE PTR ds:0x120ab345,ah
  40423b:	sar    cl,1
  40423d:	out    0x56,al
  40423f:	xchg   ebx,eax
  404240:	ss or  al,0xc3
  404243:	push   esi
  404244:	mov    bl,0x68
  404246:	xchg   ebx,eax
  404247:	in     al,0xd9
  404249:	mov    eax,ds:0x4bd6c19d
  40424e:	popa   
  40424f:	fimul  WORD PTR [eax]
  404251:	mov    DWORD PTR [ebx],edx
  404253:	dec    edi
  404254:	imul   ecx,DWORD PTR [eax+esi*2-0x71],0x6d
  404259:	xchg   esi,eax
  40425a:	pop    ds
  40425b:	loop   0x40429d
  40425d:	(bad)  
  40425f:	dec    eax
  404260:	and    ch,BYTE PTR [ecx-0x12a9cba7]
  404266:	dec    ebp
  404267:	push   ebp
  404268:	loope  0x40423e
  40426a:	pusha  
  40426b:	mov    ds:0xf49216b2,al
  404270:	sti    
  404271:	mov    al,ds:0x64207380
  404276:	repz clc 
  404278:	lea    edx,[ecx]
  40427a:	les    edx,FWORD PTR [edi+0x4f]
  40427d:	pop    esi
  40427e:	mov    cl,ah
  404280:	pop    ebp
  404281:	sub    ch,cl
  404283:	push   eax
  404284:	xor    bh,BYTE PTR [esi+0x6fc13e84]
  40428a:	mov    ecx,0x4f763635
  40428f:	out    0x2e,eax
  404291:	or     bl,BYTE PTR [esi+0x5e1c9f8c]
  404297:	sub    DWORD PTR [ecx-0x66f51b7c],edx
  40429d:	stos   DWORD PTR es:[edi],eax
  40429e:	clc    
  40429f:	add    eax,0x9fb7c4fc
  4042a4:	dec    ebp
  4042a5:	jmp    0xb6c9:0xddd635e7
  4042ac:	call   0x5f95:0xcdc66d68
  4042b3:	push   ebx
  4042b4:	(bad)  
  4042b5:	dec    ebp
  4042b6:	xor    eax,0xdaeb49c7
  4042bb:	loope  0x4042f0
  4042bd:	jmp    0xde4cc446
  4042c2:	cwde   
  4042c3:	cmp    eax,0xb683138f
  4042c8:	es pushf 
  4042ca:	inc    ecx
  4042cb:	xchg   ebp,eax
  4042cc:	dec    esi
  4042cd:	pop    edx
  4042ce:	xor    eax,0x6c9071e3
  4042d3:	add    dl,BYTE PTR [eax-0x46683075]
  4042d9:	jp     0x404312
  4042db:	mov    ecx,DWORD PTR [ebp+0x26]
  4042de:	push   ds
  4042df:	mov    dl,0x64
  4042e1:	mov    dl,0xb8
  4042e3:	test   al,0xe3
  4042e5:	jno    0x404274
  4042e7:	mov    bl,0x86
  4042e9:	rcl    BYTE PTR [edi-0xd9cd88f],0x34
  4042f0:	push   cs
  4042f1:	xor    BYTE PTR [edi*1+0x27c57b78],dl
  4042f8:	aaa    
  4042f9:	add    edi,DWORD PTR [ecx+0x36d425]
  4042ff:	dec    ebx
  404300:	ja     0x4042ff
  404302:	mov    bl,BYTE PTR [ebx]
  404304:	sub    DWORD PTR [esi-0x45],ebx
  404307:	add    eax,0x69361d0b
  40430c:	data16 icebp 
  40430e:	xchg   esi,edi
  404310:	test   DWORD PTR [ecx+0x67796b12],0x681cc58e
  40431a:	ds cmp bl,0x4e
  40431e:	xor    BYTE PTR [esi+0x21],al
  404321:	sub    eax,0x6216a930
  404326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404327:	ror    BYTE PTR [ecx],cl
  404329:	fnstenv [ebp+0x4f]
  40432c:	pop    es
  40432d:	loope  0x4042f9
  40432f:	xchg   DWORD PTR [ecx],ebx
  404331:	cmp    al,0xa
  404333:	(bad)  
  404334:	aaa    
  404335:	sbb    BYTE PTR [edx],dh
  404337:	retf   
  404338:	adc    DWORD PTR [ebx-0x2a],ebx
  40433b:	dec    edx
  40433c:	mov    WORD PTR [eax-0x67],ss
  40433f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404340:	aam    0xe9
  404342:	lods   eax,DWORD PTR ds:[esi]
  404343:	mov    dl,0xeb
  404345:	clc    
  404346:	push   0x437c5c30
  40434b:	xchg   edx,eax
  40434c:	mov    bl,0xd
  40434e:	jno    0x404344
  404350:	retf   0x285a
  404353:	pop    ebp
  404354:	jp     0x40437d
  404356:	xor    esp,DWORD PTR [edi-0x14]
  404359:	shr    BYTE PTR [ebx],1
  40435b:	push   ds
  40435c:	sti    
  40435d:	pop    ss
  40435e:	out    dx,eax
  40435f:	xor    eax,0xf64be271
  404364:	jg     0x40437a
  404366:	cmp    esp,eax
  404368:	ja     0x4043d5
  40436a:	mov    dh,0xe6
  40436c:	mov    esi,esi
  40436e:	xchg   esi,eax
  40436f:	data16 adc cl,BYTE PTR [edi+0x70]
  404373:	sub    cl,BYTE PTR [ebx-0x722725d6]
  404379:	push   ebx
  40437a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40437b:	jl     0x4043c4
  40437d:	fisttp WORD PTR [eax-0x66]
  404380:	adc    esp,ebp
  404382:	ds or  ah,ah
  404385:	in     al,dx
  404386:	aaa    
  404387:	(bad)  
  404388:	cli    
  404389:	mov    bh,0x81
  40438b:	pop    esp
  40438c:	gs dec ebp
  40438e:	push   ds
  40438f:	add    dl,BYTE PTR [esi-0x38e1b20b]
  404395:	das    
  404396:	(bad)  
  404397:	push   ebp
  404398:	out    dx,eax
  404399:	cmp    cl,BYTE PTR [edi-0x66]
  40439c:	scas   eax,DWORD PTR es:[edi]
  40439d:	addr16 ret 
  40439f:	sti    
  4043a0:	and    BYTE PTR [edx+0x51],bh
  4043a3:	imul   edi,DWORD PTR [edi],0x2c
  4043a6:	cmp    al,dl
  4043a8:	test   al,0xcb
  4043aa:	mov    fs,WORD PTR [esi+0x6a4b2829]
  4043b0:	mov    eax,0xc2241dbd
  4043b5:	pop    esi
  4043b6:	mov    ecx,0x4a42ede0
  4043bb:	retf   0x6002
  4043be:	adc    eax,0x1c718e0b
  4043c3:	mov    ebx,0xa654ef93
  4043c8:	mov    esp,0x7124d4c
  4043cd:	cmp    DWORD PTR [esp+ebp*8-0x6],ecx
  4043d1:	mov    ch,0xe8
  4043d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d4:	mov    dl,0x7
  4043d6:	into   
  4043d7:	in     eax,dx
  4043d8:	mov    dl,0x63
  4043da:	sub    al,0xbe
  4043dc:	adc    eax,0x137ba98e
  4043e1:	fmul   st(3),st
  4043e3:	ss xor al,0x8f
  4043e6:	cs sub eax,0x83833835
  4043ec:	outs   dx,DWORD PTR ds:[esi]
  4043ed:	cmp    eax,0x4cc27029
  4043f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f3:	mov    ebp,0x5648a354
  4043f8:	or     eax,edx
  4043fa:	push   0xffffff9b
  4043fc:	xchg   ecx,eax
  4043fd:	sub    esi,DWORD PTR [ebx-0x80d6030]
  404403:	jmp    0x3ddc:0x842637fa
  40440a:	or     ch,BYTE PTR [eax-0x36]
  40440d:	out    dx,eax
  40440e:	mov    bl,0x6f
  404410:	xor    ecx,DWORD PTR [eax]
  404412:	sahf   
  404413:	leave  
  404414:	call   0x5f91c9fc
  404419:	pop    edi
  40441a:	ret    
  40441b:	cld    
  40441c:	xchg   esp,eax
  40441d:	cmp    BYTE PTR [eax-0x9],dh
  404420:	nop
  404421:	inc    esi
  404422:	xor    DWORD PTR [eax+0xc153ceb],ebx
  404428:	shl    esi,0x13
  40442b:	imul   esp,ecx,0xffffff85
  40442e:	sub    bl,cl
  404430:	retf   0xd9bd
  404433:	(bad)  
  404434:	(bad)  
  404435:	add    eax,0x1db09318
  40443a:	pop    esp
  40443b:	xor    ebp,DWORD PTR [ebp+ecx*8-0x69]
  40443f:	dec    eax
  404440:	jb     0x404420
  404442:	in     al,0x49
  404444:	dec    edx
  404445:	stos   DWORD PTR es:[edi],eax
  404446:	pop    ecx
  404447:	xchg   esi,eax
  404448:	jae    0x4044ba
  40444a:	out    0xc8,eax
  40444c:	sbb    al,0x84
  40444e:	(bad)  
  40444f:	pushf  
  404450:	mov    al,0x3a
  404452:	dec    esi
  404453:	gs inc ebp
  404455:	mov    ch,0x2
  404457:	inc    esp
  404458:	je     0x404482
  40445a:	retf   0x80c0
  40445d:	mov    al,0x6b
  40445f:	lahf   
  404460:	push   ebp
  404461:	push   eax
  404462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404463:	cmp    eax,0x94965fc9
  404468:	xchg   ebp,eax
  404469:	fnsave ds:0xfa6a918f
  40446f:	cmp    eax,0x8b21028e
  404474:	rcr    DWORD PTR [ecx],1
  404476:	rcl    DWORD PTR [ecx+0x58],1
  404479:	xchg   ebx,eax
  40447a:	fsincos 
  40447c:	daa    
  40447d:	aam    0x29
  40447f:	push   eax
  404480:	adc    DWORD PTR [ebp-0x13],0xffffff92
  404484:	jns    0x404471
  404486:	outs   dx,DWORD PTR ds:[esi]
  404488:	in     al,0x62
  40448a:	push   eax
  40448b:	mov    ds:0x5a9ac7e2,eax
  404490:	cmp    edi,esp
  404492:	pusha  
  404493:	je     0x404493
  404495:	pop    es
  404496:	push   0xfd35ca7
  40449b:	sub    bh,BYTE PTR [eax-0x6b3746a7]
  4044a1:	ins    BYTE PTR es:[edi],dx
  4044a2:	cli    
  4044a3:	mov    bh,0xbc
  4044a5:	outs   dx,BYTE PTR ds:[esi]
  4044a6:	stos   BYTE PTR es:[edi],al
  4044a7:	sbb    al,al
  4044a9:	jecxz  0x4044d9
  4044ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ac:	test   DWORD PTR [eax+ebp*1-0x59834735],eax
  4044b3:	mov    esp,0xa7bee1d6
  4044b8:	mov    esi,0x7c9f4ce9
  4044bd:	and    bl,ah
  4044bf:	ins    DWORD PTR es:[edi],dx
  4044c0:	in     eax,dx
  4044c1:	int    0xb6
  4044c3:	or     eax,DWORD PTR [edx+0x19e20e0b]
  4044c9:	fwait
  4044ca:	cwde   
  4044cb:	es pushf 
  4044cd:	fs dec edx
  4044cf:	repz push esp
  4044d1:	and    ah,BYTE PTR [eax-0x5]
  4044d4:	fld    TBYTE PTR [eax-0x1e]
  4044d7:	retf   0xc254
  4044da:	sbb    esi,edx
  4044dc:	sbb    DWORD PTR [esi+0x2c],edx
  4044df:	shr    DWORD PTR [ebx+0x7a2d43a3],1
  4044e5:	mov    DWORD PTR [edi+0x5c4d1384],esi
  4044eb:	jb     0x404540
  4044ed:	fcom   QWORD PTR [edi-0x7e88810]
  4044f3:	pop    ebp
  4044f4:	jmp    0xb1af:0xa88497c8
  4044fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fc:	sub    cl,BYTE PTR [esp+edi*2+0x2c00870d]
  404503:	sbb    al,0x64
  404505:	mov    al,0xf1
  404507:	push   ebx
  404508:	cmp    edi,DWORD PTR ds:0xb92e7227
  40450e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40450f:	cmp    al,0x1a
  404511:	mov    cl,0xce
  404513:	mov    ebp,0xa4242298
  404518:	shl    ebx,0xa8
  40451b:	jge    0x4044c5
  40451d:	lock xacquire add DWORD PTR [edx],esi
  404521:	inc    ebx
  404522:	outs   dx,DWORD PTR ds:[esi]
  404523:	dec    edi
  404524:	outs   dx,BYTE PTR ds:[esi]
  404525:	adc    al,0xbb
  404527:	aam    0x60
  404529:	loop   0x40456f
  40452b:	mov    ecx,0x44cd625a
  404530:	inc    ecx
  404531:	mov    dl,0x63
  404533:	push   edi
  404534:	lods   al,BYTE PTR ds:[esi]
  404535:	cs mov bl,0x2e
  404538:	aas    
  404539:	jae    0x40456a
  40453b:	fwait
  40453c:	sub    esp,DWORD PTR [esi+ebp*2-0x41f2d269]
  404543:	adc    DWORD PTR [eax],ecx
  404545:	ror    DWORD PTR [ecx],0xd6
  404548:	es data16 gs stos BYTE PTR es:[edi],al
  40454c:	clc    
  40454d:	repnz dec eax
  40454f:	xchg   edx,eax
  404550:	imul   ebp,DWORD PTR ds:[edi+eax*1-0x5acd7159],0x2e72fdfd
  40455c:	call   0x9599:0x338fa78f
  404563:	mov    bh,0x6
  404565:	or     eax,0xb5f342af
  40456a:	sub    DWORD PTR [edi],ebx
  40456c:	jae    0x40457a
  40456e:	(bad)  
  404570:	sbb    al,0xe3
  404572:	mov    BYTE PTR [esi+0x7e],cl
  404575:	aad    0x64
  404577:	aam    0xc7
  404579:	aam    0xcd
  40457b:	es cdq 
  40457d:	out    dx,al
  40457e:	sub    eax,0x4f316196
  404583:	loop   0x40454d
  404585:	mov    esi,0xd597e62b
  40458a:	push   cs
  40458b:	sar    DWORD PTR [ebx+0x51efdb2e],0x25
  404592:	mov    al,0xc2
  404594:	in     al,0x9
  404596:	sbb    eax,0x9e9b79d7
  40459b:	or     eax,0x1060bd33
  4045a0:	sub    esp,DWORD PTR [eax+eax*2-0x4e]
  4045a4:	sub    al,BYTE PTR [eax]
  4045a6:	push   0xa0f42317
  4045ab:	sub    BYTE PTR [edi+ebx*8-0x1c],ch
  4045af:	cld    
  4045b0:	shr    DWORD PTR [ebp-0x71],0x20
  4045b4:	xor    BYTE PTR [edi-0x2],bl
  4045b7:	add    al,0x77
  4045b9:	and    eax,0x51f795fc
  4045be:	std    
  4045bf:	add    ebx,esi
  4045c1:	mov    dh,0xcd
  4045c3:	mov    ch,0x35
  4045c5:	jb     0x404608
  4045c7:	daa    
  4045c8:	outs   dx,BYTE PTR ds:[esi]
  4045c9:	fxch   st(6)
  4045cb:	out    0x47,eax
  4045cd:	jo     0x40461c
  4045cf:	das    
  4045d0:	pop    esi
  4045d1:	fwait
  4045d2:	aaa    
  4045d3:	out    0x0,al
  4045d5:	fldcw  WORD PTR [ebx-0x1d]
  4045d8:	mov    eax,ds:0x96fea710
  4045dd:	mov    edx,0xa238bae0
  4045e3:	(bad)  
  4045e4:	push   cs
  4045e5:	lods   al,BYTE PTR ds:[esi]
  4045e6:	mov    cl,0xc7
  4045e8:	outs   dx,BYTE PTR ds:[esi]
  4045e9:	retf   0xc1b8
  4045ec:	aad    0xdf
  4045ee:	add    BYTE PTR [ebx*1+0x32834069],bl
  4045f5:	shl    DWORD PTR [edi+0x39],1
  4045f8:	cs xor bh,bh
  4045fb:	sbb    edi,DWORD PTR [edi-0x2d6460dd]
  404601:	fcomip st,st(7)
  404603:	aad    0xfd
  404605:	icebp  
  404606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404607:	xchg   ecx,eax
  404608:	adc    esi,DWORD PTR [ebx]
  40460a:	mov    ds:0x893266f5,eax
  40460f:	into   
  404610:	ins    BYTE PTR es:[edi],dx
  404611:	cmp    eax,0xe06d77fd
  404616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404617:	or     BYTE PTR [edx+0x387c8ef8],ch
  40461d:	int    0x6a
  40461f:	mov    eax,ds:0x2b010d87
  404624:	iret   
  404625:	mov    edi,0x48351dc6
  40462a:	fdivr  QWORD PTR [ebx]
  40462c:	es push ds
  40462e:	je     0x404600
  404630:	jge    0x404608
  404632:	or     al,0x85
  404634:	mov    WORD PTR [edx+0x6b],ds
  404637:	mov    eax,eax
  404639:	paddw  mm1,QWORD PTR [ebx+0x5c]
  40463d:	push   ss
  40463e:	aad    0x1
  404640:	xchg   esi,eax
  404641:	inc    ebp
  404642:	or     ecx,DWORD PTR ds:0xe195f380
  404648:	cmp    BYTE PTR [ecx+0x48144258],bl
  40464e:	or     eax,0x8515e8e
  404653:	mov    ch,0x78
  404655:	sub    DWORD PTR [esi+0x1ecb010e],esp
  40465b:	dec    ecx
  40465c:	mov    fs:0x44fe46ec,al
  404662:	mov    edi,0x939cb660
  404667:	aad    0xb3
  404669:	dec    esp
  40466a:	mov    eax,0x430428d1
  40466f:	and    BYTE PTR [edi+0x30],0x62
  404673:	sbb    al,cl
  404675:	pop    ss
  404676:	icebp  
  404677:	nop
  404678:	or     BYTE PTR [eax-0x72],cl
  40467b:	xchg   esp,eax
  40467c:	xor    esi,edx
  40467e:	dec    edx
  40467f:	fistp  WORD PTR [ebx]
  404681:	lods   eax,DWORD PTR ds:[esi]
  404682:	cdq    
  404683:	out    0xfe,al
  404685:	inc    esi
  404686:	inc    ecx
  404687:	xor    ch,al
  404689:	dec    ebx
  40468a:	dec    edi
  40468b:	jg     0x4046b1
  40468d:	jmp    0x404658
  40468f:	mov    esi,0xbe3d5348
  404694:	int3   
  404695:	ret    
  404696:	jno    0x404681
  404698:	inc    ebp
  404699:	jmp    0xc84d4187
  40469e:	in     al,dx
  40469f:	pop    es
  4046a0:	xor    dl,dl
  4046a2:	mov    al,ds:0x190f35bc
  4046a7:	sbb    eax,0x480d8ebc
  4046ac:	loop   0x40464f
  4046ae:	pop    eax
  4046af:	out    0xe7,eax
  4046b1:	aam    0x2a
  4046b3:	ret    0x6d16
  4046b6:	inc    edx
  4046b7:	push   ds
  4046b8:	test   DWORD PTR [ecx],ebx
  4046ba:	xchg   ecx,eax
  4046bb:	mov    bl,0x33
  4046bd:	inc    esi
  4046be:	repz add al,0xb1
  4046c1:	rol    BYTE PTR [edx-0x2996f254],0x42
  4046c8:	ins    DWORD PTR es:[edi],dx
  4046c9:	add    BYTE PTR [eax+0x13],0x4e
  4046cd:	sub    ch,ch
  4046cf:	adc    BYTE PTR [esi+eax*4+0x1a],ah
  4046d3:	popa   
  4046d4:	enter  0xaf6d,0x1f
  4046d8:	xor    DWORD PTR [esi+ecx*2-0x2b89e5bd],ebx
  4046df:	inc    edx
  4046e0:	popa   
  4046e1:	xor    DWORD PTR [eax-0x5bf44b5e],eax
  4046e7:	or     DWORD PTR [eax+edi*4],edi
  4046ea:	ret    
  4046eb:	scas   eax,DWORD PTR es:[edi]
  4046ec:	xor    al,0x5d
  4046ee:	and    ebp,DWORD PTR [ebx]
  4046f0:	push   esi
  4046f1:	pop    ebp
  4046f2:	or     ah,cl
  4046f4:	add    DWORD PTR [esi+0x18],0xffffffaf
  4046f8:	cli    
  4046f9:	and    eax,0x719e5aac
  4046fe:	ficom  WORD PTR [eax-0xc]
  404701:	outs   dx,BYTE PTR ds:[esi]
  404702:	xchg   ebx,eax
  404703:	adc    cl,BYTE PTR [esi-0x24]
  404706:	ja     0x545ba238
  40470c:	nop
  40470d:	dec    edi
  40470e:	pop    ds
  40470f:	test   al,0xf5
  404711:	enter  0xc0,0x64
  404715:	dec    ebp
  404716:	ret    0xa2b7
  404719:	mov    ?,edi
  40471b:	xchg   esi,eax
  40471c:	(bad)  
  40471d:	and    esi,DWORD PTR [ebx-0x1afe3ea]
  404723:	push   ebp
  404724:	cmp    dh,bl
  404726:	dec    esp
  404727:	les    esi,FWORD PTR [eax+0x6ef936fd]
  40472d:	pop    esi
  40472e:	pop    ss
  40472f:	pop    esi
  404730:	call   0x1aa8f69d
  404735:	hlt    
  404736:	(bad)  
  404737:	outs   dx,DWORD PTR ds:[esi]
  404738:	xor    BYTE PTR [ecx+0x6cd98486],dh
  40473e:	mov    ecx,0x873b3161
  404743:	or     DWORD PTR [edi],edx
  404745:	ds dec ebp
  404747:	push   ebx
  404748:	push   esi
  404749:	int    0x75
  40474b:	jmp    0x8b9f:0xc57ecdca
  404752:	mov    ah,0x8e
  404754:	loop   0x4047a1
  404756:	and    al,0x8e
  404758:	int3   
  404759:	sub    DWORD PTR [edx],eax
  40475b:	cld    
  40475c:	ret    0x8f5d
  40475f:	push   edx
  404760:	shl    DWORD PTR [edi-0x13],cl
  404763:	or     al,0x71
  404765:	cmp    BYTE PTR [eax+eax*1-0x73],ch
  404769:	or     esp,DWORD PTR [ebp-0x6f]
  40476c:	mov    ebx,0x4b9b7715
  404771:	ins    BYTE PTR es:[edi],dx
  404772:	pop    ebp
  404773:	aas    
  404774:	lds    edi,FWORD PTR [ebx+0x61]
  404777:	add    esp,DWORD PTR [eax-0x35]
  40477a:	dec    esi
  40477b:	sub    BYTE PTR cs:[edi-0x37a3705a],dl
  404782:	xor    eax,DWORD PTR [edi+0x3c1382a8]
  404788:	stos   DWORD PTR es:[edi],eax
  404789:	(bad)  
  40478b:	or     edx,DWORD PTR [ecx-0x64]
  40478e:	push   edi
  40478f:	push   eax
  404790:	ret    
  404791:	xchg   DWORD PTR [esi-0xc],ebx
  404794:	jae    0x4047a1
  404796:	loopne 0x4047f9
  404798:	enter  0xe843,0x7d
  40479c:	xchg   ecx,eax
  40479d:	(bad)  
  40479e:	in     eax,dx
  40479f:	pop    ds
  4047a0:	mov    BYTE PTR [ebx+esi*8],ch
  4047a3:	push   ds
  4047a4:	(bad)  
  4047a5:	cmp    DWORD PTR [ecx-0x4c],ecx
  4047a8:	adc    al,0x3d
  4047aa:	stc    
  4047ab:	xchg   esi,eax
  4047ac:	xchg   DWORD PTR ds:0xb9c87330,eax
  4047b2:	add    al,0xa5
  4047b4:	test   eax,0x16b8ecec
  4047b9:	aaa    
  4047ba:	push   edx
  4047bb:	mov    WORD PTR [edx],gs
  4047bd:	jnp    0x404804
  4047bf:	sahf   
  4047c0:	xchg   ecx,eax
  4047c1:	icebp  
  4047c2:	ror    BYTE PTR [eax],cl
  4047c4:	xchg   edx,eax
  4047c5:	add    BYTE PTR [ebx+eax*2+0x32b3ced3],cl
  4047cc:	scas   eax,DWORD PTR es:[edi]
  4047cd:	neg    ecx
  4047cf:	lods   al,BYTE PTR ds:[esi]
  4047d0:	or     bh,BYTE PTR [edx]
  4047d2:	fs sub eax,0x8c8ed7ee
  4047d8:	dec    eax
  4047d9:	ja     0x404832
  4047db:	mov    esi,0x33315536
  4047e0:	mov    WORD PTR [eax+0x1bb942fe],es
  4047e6:	xor    BYTE PTR [ebx],dl
  4047e8:	out    dx,al
  4047e9:	add    dh,BYTE PTR ds:0x925e1331
  4047ef:	outs   dx,DWORD PTR ds:[esi]
  4047f0:	push   ss
  4047f1:	mov    al,BYTE PTR [edi]
  4047f3:	sub    cl,ch
  4047f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f6:	jmp    0x69fe6503
  4047fb:	add    bh,cl
  4047fd:	fwait
  4047fe:	lods   al,BYTE PTR ds:[esi]
  4047ff:	jno    0x404842
  404801:	mov    BYTE PTR ds:0x7b4ca1ac,0x4c
  404808:	in     eax,dx
  404809:	sub    cl,BYTE PTR [ecx-0x439b6b96]
  40480f:	jno    0x404840
  404811:	fmulp  st(3),st
  404813:	bsr    ebx,ebp
  404816:	add    DWORD PTR ds:0xbfd843b,0xffffffb9
  40481d:	and    BYTE PTR [ebp+0x3739fab8],bl
  404823:	sub    DWORD PTR [ebx],esi
  404825:	pop    esp
  404826:	fstp   TBYTE PTR [ebx+0x6d7c15c]
  40482c:	not    DWORD PTR [edi+0x51]
  40482f:	inc    ecx
  404830:	inc    edx
  404831:	push   ebp
  404832:	imul   esi,eax,0xc751cac5
  404838:	repnz sub DWORD PTR [ebx+ecx*8-0x76a8e4d0],ebx
  404840:	pop    ebx
  404841:	cmp    BYTE PTR [edx+0x6d],0xed
  404845:	inc    ebx
  404846:	cli    
  404847:	(bad)  
  404848:	fsub   DWORD PTR [ebp-0x5ccc4368]
  40484e:	inc    ecx
  40484f:	pop    ebx
  404850:	fwait
  404851:	mov    bl,0xff
  404853:	push   ds
  404854:	in     eax,0xbe
  404856:	fbstp  TBYTE PTR [edi+0x7909f8be]
  40485c:	stos   BYTE PTR es:[edi],al
  40485d:	test   BYTE PTR [ecx],dl
  40485f:	jae    0x404899
  404861:	jno    0x4048d8
  404863:	jnp    0x4048b6
  404865:	mov    dl,0x23
  404867:	aaa    
  404868:	ins    DWORD PTR es:[edi],dx
  404869:	inc    eax
  40486a:	fcmovb st,st(1)
  40486c:	push   esp
  40486d:	in     eax,dx
  40486e:	test   BYTE PTR [edx-0x4ba5c1af],ah
  404874:	pop    ebx
  404875:	out    0xd6,al
  404877:	cmp    BYTE PTR [edi+0x1e1126b7],dl
  40487d:	cwde   
  40487e:	in     al,0xa3
  404880:	inc    ebx
  404881:	in     eax,dx
  404882:	cli    
  404883:	mov    eax,0x1958080f
  404888:	adc    eax,0x1998f79a
  40488d:	into   
  40488e:	xor    esp,edx
  404890:	mov    eax,ds:0x185e045b
  404895:	paddd  mm1,QWORD PTR [edx-0x5d]
  404899:	imul   edx,DWORD PTR [esi+0x34f0d043],0xd6d35001
  4048a3:	pop    ss
  4048a4:	mov    ch,0x4c
  4048a6:	inc    ecx
  4048a7:	inc    ebp
  4048a8:	aam    0xe0
  4048aa:	retf   
  4048ab:	xor    DWORD PTR [edx+0x37],ebx
  4048ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048af:	scas   al,BYTE PTR es:[edi]
  4048b0:	mov    edx,0xfc86c867
  4048b5:	retw   0xc9a0
  4048b9:	imul   ebx,DWORD PTR [ecx-0x533aa422],0xffffffdc
  4048c0:	mov    cl,BYTE PTR [esi]
  4048c2:	xor    eax,0x48a11c46
  4048c7:	and    edx,edx
  4048c9:	push   edi
  4048ca:	mov    cl,0x89
  4048cc:	sub    cl,ch
  4048ce:	lds    ebx,FWORD PTR [eax+0x2e1c6dff]
  4048d4:	shl    BYTE PTR [edx+edi*1-0x11],cl
  4048d8:	fstp   QWORD PTR [eax-0x248d5720]
  4048de:	mov    ch,0x16
  4048e0:	jp     0x4048f5
  4048e2:	mov    bh,0xa1
  4048e4:	test   eax,0xc8549cff
  4048e9:	lds    ebp,FWORD PTR [eax+0x152d2f5]
  4048ef:	(bad)  
  4048f0:	retf   
  4048f1:	pop    esp
  4048f2:	icebp  
  4048f3:	fadd   DWORD PTR [eax-0x2280db2]
  4048f9:	scas   eax,DWORD PTR es:[edi]
  4048fa:	outs   dx,BYTE PTR ds:[esi]
  4048fb:	xchg   edi,eax
  4048fc:	and    cl,BYTE PTR ds:0x1312e371
  404902:	push   cs
  404903:	add    al,0x9c
  404905:	sbb    eax,0xb7dae7b3
  40490a:	xchg   edi,eax
  40490b:	xchg   esp,eax
  40490c:	add    eax,0xd4c96072
  404911:	cmc    
  404912:	pop    edi
  404913:	fild   DWORD PTR [edi+0x6122bcb1]
  404919:	ds lock aam 0x3e
  40491d:	addr16 aam 0xd7
  404920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404921:	scas   al,BYTE PTR es:[edi]
  404922:	jge    0x4048b2
  404924:	xor    ebx,DWORD PTR [ebx+0xaa3fc26]
  40492a:	and    al,0x33
  40492c:	jae    0x40493c
  40492e:	dec    ecx
  40492f:	repnz inc esp
  404931:	xor    al,0xa3
  404933:	test   esi,ebx
  404935:	jnp    0x404902
  404937:	loop   0x404910
  404939:	push   0xbb147f95
  40493e:	sbb    cl,BYTE PTR [esi]
  404940:	pop    ss
  404941:	fsubr  QWORD PTR [ecx+0x6169c213]
  404947:	or     bh,BYTE PTR [eax+0x36]
  40494a:	add    al,0x2c
  40494c:	mov    dl,0xf8
  40494e:	shl    BYTE PTR [edx+0x77],0x17
  404952:	call   0xc3fa:0xf0e0a15a
  404959:	push   es
  40495a:	int    0x1a
  40495c:	pushf  
  40495d:	adc    DWORD PTR [ebx+0x1],eax
  404960:	sbb    eax,0x89408f7c
  404965:	lods   al,BYTE PTR ds:[esi]
  404966:	pop    edx
  404967:	sbb    edx,eax
  404969:	xchg   BYTE PTR [esi+0x8],bl
  40496c:	bound  edi,QWORD PTR [esi+0x55]
  40496f:	sbb    al,al
  404971:	xor    al,BYTE PTR [edi-0x54]
  404974:	in     al,dx
  404975:	into   
  404976:	and    esp,DWORD PTR [esi]
  404978:	cmp    dl,bh
  40497a:	dec    esi
  40497b:	out    0x4c,eax
  40497d:	mov    dh,0xb
  40497f:	fs ret 
  404981:	stc    
  404982:	dec    esi
  404983:	inc    esi
  404984:	xor    DWORD PTR [eax],ebp
  404986:	xor    DWORD PTR [edx-0x74],esi
  404989:	gs cld 
  40498b:	mov    edi,0x12bf1350
  404990:	icebp  
  404991:	fcmovnu st,st(2)
  404993:	mov    ds:0xd8bb8a4d,al
  404998:	dec    ebx
  404999:	and    edi,ebp
  40499b:	nop
  40499c:	xchg   esi,eax
  40499d:	test   eax,0xbaa8304c
  4049a2:	sbb    eax,DWORD PTR [ecx+eiz*1-0x26]
  4049a6:	ja     0x404a14
  4049a8:	fwait
  4049a9:	inc    edi
  4049aa:	hlt    
  4049ab:	ja     0x4049d9
  4049ad:	(bad)  
  4049af:	or     al,0xb4
  4049b1:	sub    BYTE PTR [esi],dh
  4049b3:	dec    edx
  4049b4:	imul   edi,DWORD PTR [ebx],0x44
  4049b7:	sbb    edi,esi
  4049b9:	inc    edi
  4049ba:	xor    edi,edi
  4049bc:	sbb    dl,BYTE PTR [eax+edx*8]
  4049bf:	icebp  
  4049c0:	mov    eax,0xc7c9a69b
  4049c5:	jge    0x4049eb
  4049c7:	ds sti 
  4049c9:	(bad)  
  4049ca:	leave  
  4049cb:	sbb    dl,dh
  4049cd:	inc    edi
  4049ce:	jbe    0x404a11
  4049d0:	push   ds
  4049d1:	add    esp,ecx
  4049d3:	push   es
  4049d4:	int    0x8b
  4049d6:	inc    esp
  4049d7:	mov    ds:0xb81eecab,eax
  4049dc:	in     al,0xe2
  4049de:	jmp    0x2dfa:0x3b84cb7d
  4049e5:	ds in  eax,0xcb
  4049e8:	(bad)  
  4049e9:	ror    DWORD PTR [edi+0x435a6f43],cl
  4049ef:	aas    
  4049f0:	fdiv   QWORD PTR [edx+0x68]
  4049f3:	dec    edx
  4049f4:	pusha  
  4049f5:	xor    eax,0x855f24e3
  4049fa:	xor    cl,BYTE PTR [ecx+0x33]
  4049fd:	mov    ah,0x70
  4049ff:	in     eax,dx
  404a00:	inc    ebx
  404a01:	xor    BYTE PTR ss:[edi+0xc],al
  404a05:	mov    ebp,ecx
  404a07:	adc    BYTE PTR ss:[ebp+0x171ec67a],bl
  404a0e:	loopne 0x4049ad
  404a10:	jns    0x404a31
  404a12:	mov    ah,0x9f
  404a14:	mov    edx,0xee8550e4
  404a19:	das    
  404a1a:	cmp    DWORD PTR [ebx],edi
  404a1c:	loop   0x404a7b
  404a1e:	pusha  
  404a1f:	in     al,0x9
  404a21:	pushf  
  404a22:	push   cs
  404a23:	jb     0x404a8d
  404a25:	mov    cl,0xc6
  404a27:	data16 (bad) 
  404a29:	ror    ebp,0xe3
  404a2c:	data16 sub BYTE PTR [edi],al
  404a2f:	iret   
  404a30:	or     BYTE PTR [edi+0x3e],dl
  404a33:	adc    edi,DWORD PTR [esi]
  404a35:	ror    DWORD PTR [eax],cl
  404a37:	(bad)  
  404a38:	retf   
  404a39:	push   ecx
  404a3b:	call   ebp
  404a3d:	enter  0xc438,0x42
  404a41:	jns    0x404a60
  404a43:	std    
  404a44:	push   cs
  404a45:	call   0x6add:0x8e7bddde
  404a4c:	jg     0x404a80
  404a4e:	mov    edi,0xeab5229
  404a53:	cmp    ebx,DWORD PTR [edi]
  404a55:	cld    
  404a56:	xor    ecx,DWORD PTR [ebp+0x1f40de1b]
  404a5c:	mov    ah,0x5b
  404a5e:	mov    WORD PTR [ebx-0x7e],es
  404a61:	js     0x404a76
  404a63:	mov    ds:0x5fb5491e,al
  404a68:	aam    0xca
  404a6a:	mov    dl,0x1e
  404a6c:	sahf   
  404a6d:	cmp    eax,0x8a414314
  404a72:	rcl    BYTE PTR [edi-0xf],cl
  404a75:	daa    
  404a76:	or     ch,0x53
  404a79:	adc    ecx,esp
  404a7b:	push   ss
  404a7c:	pop    ebx
  404a7d:	popf   
  404a7e:	push   0xffffffc1
  404a80:	stos   BYTE PTR es:[edi],al
  404a81:	ror    BYTE PTR [eax],0xc
  404a84:	and    eax,edx
  404a86:	je     0x404ae2
  404a88:	(bad)  
  404a89:	adc    BYTE PTR [eax+eax*8-0x17cf4eac],ch
  404a90:	xchg   esi,eax
  404a91:	dec    edi
  404a92:	sbb    al,0xf6
  404a94:	push   eax
  404a95:	dec    esi
  404a96:	sbb    dl,bl
  404a98:	popa   
  404a99:	shr    BYTE PTR [esi+0x60b6a6cb],1
  404a9f:	aam    0xbc
  404aa1:	dec    edi
  404aa2:	lahf   
  404aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa4:	add    BYTE PTR [edx+0x77],0xb1
  404aa8:	or     esp,DWORD PTR [esi]
  404aaa:	popa   
  404aab:	cmc    
  404aac:	mov    ebp,0xc227dca
  404ab1:	in     al,0xfd
  404ab3:	mov    edi,0xd7d13faf
  404ab8:	or     al,0xfa
  404aba:	push   esi
  404abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404abc:	push   sp
  404abe:	pop    esi
  404abf:	mov    dh,0xd8
  404ac1:	shl    DWORD PTR [esi+0x16],0x15
  404ac5:	mov    eax,ds:0x8bf8ecdf
  404aca:	jnp    0x404ac2
  404acc:	cwde   
  404acd:	outs   dx,BYTE PTR cs:[esi]
  404acf:	cmp    dl,al
  404ad1:	jmp    0x404b45
  404ad3:	call   0x5fa422dd
  404ad8:	les    ebp,FWORD PTR [ecx]
  404ada:	(bad)  
  404adc:	xchg   ebx,eax
  404add:	mov    edx,0xc785ab7d
  404ae2:	jl     0x404aca
  404ae4:	jae    0x404b65
  404ae6:	test   DWORD PTR [ebx+0x35],ebp
  404ae9:	mov    ecx,0xa946e390
  404aee:	lods   eax,DWORD PTR ds:[esi]
  404aef:	push   ebx
  404af0:	sub    eax,0x66adced4
  404af5:	mov    ebp,0x6fbc4fb8
  404afa:	mov    edi,0xbf321d3b
  404aff:	(bad)
  404b03:	or     ebx,DWORD PTR [edx]
  404b05:	lahf   
  404b06:	lods   al,BYTE PTR ds:[esi]
  404b07:	push   DWORD PTR [esi]
  404b09:	jb     0x404b3d
  404b0b:	imul   ebp,eax,0x56e748cc
  404b11:	(bad)  
  404b12:	sub    DWORD PTR [ecx],eax
  404b14:	jecxz  0x404ad3
  404b16:	and    esp,eax
  404b18:	xchg   edx,eax
  404b19:	xchg   esp,eax
  404b1a:	push   0x4a
  404b1c:	loopne 0x404ae4
  404b1e:	jg     0x404adc
  404b20:	(bad)  
  404b21:	jbe    0x404ba2
  404b23:	enter  0x441a,0x96
  404b27:	jmp    0xafea3451
  404b2c:	cs shr ah,cl
  404b2f:	lock add eax,0x3b03e20c
  404b35:	adc    al,0x4a
  404b37:	mov    cl,0x3e
  404b39:	mov    ch,0xc6
  404b3b:	sbb    BYTE PTR [ecx+0x68],0xe
  404b3f:	ja     0x404b6f
  404b41:	sahf   
  404b42:	inc    ebx
  404b43:	xchg   esi,eax
  404b44:	retf   
  404b45:	cmp    ch,BYTE PTR [esi+edi*1+0x2844da10]
  404b4c:	adc    eax,DWORD PTR [edx+0x6b7e736a]
  404b52:	push   es
  404b53:	les    esp,FWORD PTR [ebx-0x2]
  404b56:	test   al,0xb5
  404b58:	jecxz  0x404bae
  404b5a:	xor    bh,0x5b
  404b5d:	inc    edi
  404b5e:	dec    esp
  404b5f:	dec    ecx
  404b60:	jae    0x404b99
  404b62:	mov    ds:0x8c72fd49,al
  404b67:	dec    edi
  404b68:	test   eax,0xb31fb678
  404b6d:	sbb    esi,esp
  404b6f:	jp     0x404bc7
  404b71:	enter  0xd3c1,0xf0
  404b75:	cmp    eax,0x1e26510b
  404b7a:	xchg   edx,eax
  404b7b:	push   0xa4629723
  404b80:	imul   edx,esp,0x73
  404b83:	fsub   DWORD PTR [ecx]
  404b85:	or     DWORD PTR [eax],eax
  404b87:	sbb    al,BYTE PTR [eax+ecx*2]
  404b8a:	pop    ds
  404b8b:	cmp    BYTE PTR [eax+0x4df5995],ah
  404b91:	jo     0x404b46
  404b93:	rol    DWORD PTR [esi-0x66837ff8],1
  404b99:	lahf   
  404b9a:	pop    ds
  404b9b:	mul    DWORD PTR [edx]
  404b9d:	push   es
  404b9e:	lods   eax,DWORD PTR ds:[esi]
  404b9f:	or     BYTE PTR [esi],dh
  404ba1:	sbb    edx,DWORD PTR [edx+0x3e490a18]
  404ba7:	pop    es
  404ba8:	ja     0x404b92
  404baa:	test   eax,0x9c4d54c0
  404baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb0:	mov    edi,0x27006628
  404bb5:	mov    ah,0x4b
  404bb7:	jo     0x404bf4
  404bb9:	or     eax,0x18398ab7
  404bbe:	out    0xf5,al
  404bc0:	cmp    esp,DWORD PTR [edi+0x5c67b9f]
  404bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc7:	adc    DWORD PTR [ebp+0x37],edx
  404bca:	out    dx,al
  404bcb:	loopne 0x404b50
  404bcd:	dec    esp
  404bce:	mov    ds:0xcb3f6e6e,eax
  404bd3:	jb     0x404c3d
  404bd5:	fdiv   st(0),st
  404bd7:	in     al,0xe2
  404bd9:	in     eax,0x26
  404bdb:	shr    ebp,1
  404bdd:	out    dx,al
  404bde:	arpl   bx,bp
  404be0:	mov    ds:0x3cbd7b0d,eax
  404be5:	xchg   edx,eax
  404be6:	cmc    
  404be7:	mov    ch,0xc1
  404be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bea:	mov    DWORD PTR ds:0xeef5cf78,edx
  404bf0:	pop    ecx
  404bf1:	mov    al,0xc9
  404bf3:	cmp    BYTE PTR [ecx],cl
  404bf5:	sub    dh,BYTE PTR [eax-0x7f823d4a]
  404bfb:	data16 outs dx,BYTE PTR ds:[esi]
  404bfd:	mov    esp,0x7a455323
  404c02:	jo     0x404c09
  404c04:	jae    0x404b87
  404c06:	xchg   ebp,eax
  404c07:	jge    0x404bc9
  404c09:	push   ecx
  404c0a:	pop    ebp
  404c0b:	stos   DWORD PTR es:[edi],eax
  404c0c:	mov    al,ds:0x21c9dc02
  404c11:	and    eax,0x822064b7
  404c16:	pop    ebx
  404c17:	xchg   ecx,eax
  404c18:	adc    dl,dl
  404c1a:	xor    esp,0xb5f30b9f
  404c20:	pop    ebx
  404c21:	(bad)  
  404c22:	and    al,0x37
  404c24:	sbb    cl,bh
  404c26:	adc    BYTE PTR [edi-0x71a5257f],cl
  404c2c:	jge    0x404c6e
  404c2e:	pop    ds
  404c2f:	jne    0x404c30
  404c31:	shr    DWORD PTR ds:0x34b3a3d3,1
  404c37:	adc    esp,edx
  404c39:	jmp    0x404c75
  404c3b:	inc    eax
  404c3c:	jge    0x404c03
  404c3e:	adc    bh,ch
  404c40:	push   es
  404c41:	fs neg eax
  404c44:	in     al,dx
  404c45:	fistp  WORD PTR [ebx]
  404c47:	ss popa 
  404c49:	or     DWORD PTR [edx-0x5ebcbb3c],esi
  404c4f:	stos   DWORD PTR es:[edi],eax
  404c50:	and    ah,ah
  404c52:	imul   edx,DWORD PTR [eax+0x6c],0xffffffa4
  404c56:	shl    DWORD PTR [ebx],0x67
  404c59:	or     eax,0x27d575f6
  404c5e:	pop    ebx
  404c5f:	sbb    eax,0x21f56aa5
  404c64:	jecxz  0x404cad
  404c66:	jne    0x404c5d
  404c68:	adc    BYTE PTR [ecx],0x5c
  404c6b:	mov    WORD PTR [edx+0x22],ds
  404c6e:	mov    ds:0xe78a555a,al
  404c73:	add    eax,0x4266571e
  404c78:	xchg   ebp,eax
  404c79:	nop
  404c7a:	dec    ebp
  404c7b:	pop    ebp
  404c7c:	int    0xb3
  404c7e:	pop    ds
  404c7f:	lds    edi,FWORD PTR [eax+ecx*4+0x49]
  404c83:	int    0x95
  404c85:	inc    ebx
  404c86:	or     BYTE PTR [eax-0x6f],ch
  404c89:	pop    ecx
  404c8a:	dec    ebp
  404c8b:	and    bl,BYTE PTR [edi]
  404c8d:	ins    BYTE PTR es:[edi],dx
  404c8e:	pushf  
  404c8f:	fwait
  404c90:	mov    esi,0xdb22b0c6
  404c95:	fisttp WORD PTR [edi-0x1a]
  404c98:	cs jno 0x404c83
  404c9b:	sub    al,0x10
  404c9d:	daa    
  404c9e:	retf   
  404c9f:	js     0x404d1c
  404ca1:	xchg   cl,ch
  404ca3:	lods   al,BYTE PTR ds:[esi]
  404ca4:	sbb    DWORD PTR [ecx+0x2e56d5b6],0x5c2799df
  404cae:	bound  esp,QWORD PTR [ebp-0x19343d47]
  404cb4:	pop    edi
  404cb5:	sbb    BYTE PTR [ecx-0x4f],bh
  404cb8:	xlat   BYTE PTR ds:[ebx]
  404cb9:	into   
  404cba:	mov    edx,0x44c58b72
  404cbf:	xor    eax,0x299a1232
  404cc4:	inc    esi
  404cc5:	dec    esi
  404cc6:	jns    0x404c6a
  404cc8:	test   BYTE PTR [ebp-0x6f],dh
  404ccb:	or     al,0x2f
  404cce:	mov    DWORD PTR [esp+ebx*1],ebx
  404cd1:	pop    ebx
  404cd2:	xlat   BYTE PTR ds:[ebx]
  404cd3:	and    al,0xfc
  404cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd6:	scas   al,BYTE PTR es:[edi]
  404cd7:	(bad)  
  404cd9:	fwait
  404cda:	ins    BYTE PTR es:[edi],dx
  404cdb:	add    al,0xb0
  404cdd:	mov    ds:0xee904867,eax
  404ce2:	pop    esi
  404ce3:	cdq    
  404ce4:	sbb    bh,BYTE PTR [edi-0x7e]
  404ce7:	call   0xbfc3:0x1c4f82e3
  404cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cef:	shr    BYTE PTR [edi+0x13],0xcd
  404cf3:	aad    0x73
  404cf5:	mov    ds:0x1130cb20,eax
  404cfa:	mov    ecx,0xea0af961
  404cff:	in     al,0xe1
  404d01:	lock mov eax,ds:0x1892924e
  404d07:	cmp    ebx,edi
  404d09:	and    dl,BYTE PTR cs:[ebx-0x45]
  404d0d:	aam    0x14
  404d0f:	and    al,0x8f
  404d11:	push   edx
  404d12:	mov    dl,0x8f
  404d14:	dec    eax
  404d15:	inc    ebx
  404d16:	div    BYTE PTR [ebx+0x5e03d4ee]
  404d1c:	lea    edi,[eax+0x772cc292]
  404d22:	ror    BYTE PTR [esi],0xbf
  404d25:	push   eax
  404d26:	jb     0x404d19
  404d28:	jb     0x404cfb
  404d2a:	xchg   edi,eax
  404d2b:	mov    dl,BYTE PTR [eax-0x6a]
  404d2e:	jns    0x404cfa
  404d30:	stos   DWORD PTR es:[edi],eax
  404d31:	mov    ds:0xc65f219f,eax
  404d36:	cmp    ah,ch
  404d38:	sbb    esp,DWORD PTR [edx]
  404d3a:	out    0x56,eax
  404d3c:	jno    0x404d02
  404d3e:	mov    bh,0x65
  404d40:	lahf   
  404d41:	inc    ebp
  404d42:	popa   
  404d43:	sbb    eax,0x19d51525
  404d48:	adc    bh,BYTE PTR [ecx+0x5f]
  404d4b:	pushf  
  404d4c:	adc    ebp,edx
  404d4e:	mov    edx,0xc15af930
  404d53:	ficomp DWORD PTR [ecx-0x3ec99270]
  404d59:	mov    cl,0x2
  404d5b:	cmp    BYTE PTR [eax+0xb340c50],bh
  404d61:	loop   0x404d76
  404d63:	cdq    
  404d64:	cdq    
  404d65:	push   eax
  404d66:	cmp    ecx,esi
  404d68:	jmp    0x404d21
  404d6a:	(bad)  
  404d6b:	jno    0x404dc0
  404d6d:	pop    ebx
  404d6e:	out    0xc8,eax
  404d70:	pop    ecx
  404d71:	mov    ah,0x19
  404d73:	add    ebx,DWORD PTR [ecx-0x1580ed98]
  404d79:	std    
  404d7a:	xlat   BYTE PTR ds:[ebx]
  404d7b:	lods   al,BYTE PTR ds:[esi]
  404d7c:	scas   eax,DWORD PTR es:[edi]
  404d7d:	call   0x406b:0x5bba8ce4
  404d84:	in     eax,dx
  404d85:	xor    esp,DWORD PTR [ebp+edi*1-0x77]
  404d89:	push   edi
  404d8a:	dec    eax
  404d8b:	and    al,0x20
  404d8d:	xlat   BYTE PTR ds:[ebx]
  404d8e:	outs   dx,DWORD PTR ds:[esi]
  404d8f:	aas    
  404d90:	sub    DWORD PTR [ebp-0x2b],esp
  404d93:	push   0xffffffe9
  404d95:	call   0xaff7:0xf7cafe42
  404d9c:	loop   0x404d75
  404d9e:	and    DWORD PTR [esi+0x54],ebp
  404da1:	cwde   
  404da2:	aad    0x5a
  404da4:	(bad)
  404da8:	test   eax,0xcf12d1ec
  404dad:	mov    ss,eax
  404daf:	sbb    DWORD PTR [ebx+0x17],esp
  404db2:	call   0x61db:0x8fa745d1
  404db9:	shl    DWORD PTR [edx+0x22ca27b5],cl
  404dbf:	or     bh,BYTE PTR [eax-0x45]
  404dc2:	inc    ebx
  404dc3:	call   0x41678e0a
  404dc8:	ret    0x6b5f
  404dcb:	mov    edx,0x7c5299af
  404dd0:	inc    ecx
  404dd1:	push   ss
  404dd2:	xor    eax,0x9184fdb2
  404dd7:	mov    ds:0x96173047,eax
  404ddc:	push   es
  404ddd:	sub    al,BYTE PTR [eax+0x530f621d]
  404de3:	push   ebx
  404de4:	test   eax,0xa3cdae4d
  404de9:	pusha  
  404dea:	cmp    al,0xe
  404dec:	jg     0x404e26
  404dee:	cmp    DWORD PTR [edi-0x12],edx
  404df1:	push   ebp
  404df2:	mov    cl,al
  404df4:	pop    eax
  404df5:	enter  0x36d9,0xf
  404df9:	test   al,bl
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	add    BYTE PTR [ebx],ah
  404dff:	add    eax,0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [ebx+0x34757625],edx
  4058f3:	pop    edi
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	and    al,0x51
  4058fc:	fwait
  4058fd:	out    dx,al
  4058fe:	int3   
  4058ff:	sbb    ebp,esp
  405901:	bound  ecx,QWORD PTR [eax+0x71576f85]
  405907:	adc    eax,0xd8468716
  40590c:	and    ah,BYTE PTR [esi+edx*8+0x60]
  405910:	sahf   
  405911:	das    
  405912:	push   0x49ce0a01
  405917:	mov    edx,0x78181f00
  40591c:	mov    ds:0x2cd64281,eax
  405921:	xor    al,dh
  405923:	rol    BYTE PTR [eax+ebp*4+0x55],0xbe
  405928:	adc    ebp,ecx
  40592a:	out    dx,eax
  40592b:	mov    edi,0x612d9299
  405930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405931:	jo     0x405969
  405933:	push   edi
  405934:	mov    ds:0x39007d21,eax
  405939:	adc    BYTE PTR [esi-0x25],dl
  40593c:	ds cs test al,0x39
  405940:	dec    esi
  405941:	sahf   
  405942:	jo     0x40596d
  405944:	sbb    esp,eax
  405946:	aas    
  405947:	nop
  405948:	or     eax,0x214f3912
  40594d:	in     al,dx
  40594e:	aas    
  40594f:	int3   
  405950:	(bad)  
  405952:	mov    bl,0xa4
  405954:	popa   
  405955:	adc    BYTE PTR [eax+0x12],ch
  405958:	and    DWORD PTR [edi-0x642e4e66],eax
  40595e:	mov    esi,0x4e878cc9
  405963:	xchg   esp,eax
  405964:	lods   eax,DWORD PTR ds:[esi]
  405965:	call   0xad5f:0x87fa60eb
  40596c:	sbb    al,0x61
  40596e:	and    eax,0xec01ec12
  405973:	inc    esp
  405974:	xchg   ecx,eax
  405975:	cmp    ah,BYTE PTR [ebp+0x77]
  405978:	cmp    ebp,DWORD PTR [esi]
  40597a:	pop    eax
  40597b:	and    BYTE PTR [esi-0x72],cl
  40597e:	enter  0x6704,0x68
  405982:	stos   BYTE PTR es:[edi],al
  405983:	sub    eax,0xee655b75
  405988:	add    edx,DWORD PTR [edx]
  40598a:	lods   al,BYTE PTR ds:[esi]
  40598b:	test   DWORD PTR [eax-0x72475c61],esp
  405991:	push   ecx
  405992:	addr16 gs mov cl,0xe0
  405996:	fst    DWORD PTR [eax-0x47df9555]
  40599c:	mov    ds,WORD PTR [eax]
  40599e:	lods   al,BYTE PTR ds:[esi]
  40599f:	or     al,0x28
  4059a1:	repz cmp DWORD PTR ds:[eax-0x2a],ebp
  4059a6:	push   ecx
  4059a7:	ss pop edx
  4059a9:	cli    
  4059aa:	xor    DWORD PTR [edi+0x1b8c5e4d],eax
  4059b0:	mov    ds:0xb85d0340,eax
  4059b5:	xchg   esp,eax
  4059b6:	adc    al,ah
  4059b8:	xchg   BYTE PTR [edi+0x24],ch
  4059bb:	(bad)  
  4059bc:	and    dh,BYTE PTR [esi-0x15cc7b6a]
  4059c2:	(bad)  
  4059c3:	dec    esp
  4059c4:	add    ah,BYTE PTR [ebp-0x7a]
  4059c7:	out    0xa7,al
  4059c9:	add    eax,esp
  4059cb:	loopne 0x4059bf
  4059cd:	idiv   BYTE PTR [ebx+0x48701f0a]
  4059d3:	aaa    
  4059d4:	xchg   ebx,eax
  4059d5:	test   al,0x33
  4059d7:	mov    ds,eax
  4059d9:	pop    esi
  4059da:	sbb    BYTE PTR [edx+0xe],ch
  4059dd:	pusha  
  4059de:	data16 jb 0x4059bb
  4059e1:	push   ss
  4059e2:	mov    ds:0x618985e7,eax
  4059e7:	enter  0x2a50,0x71
  4059eb:	jle    0x4059e3
  4059ed:	adc    al,0xfa
  4059ef:	sub    edx,eax
  4059f1:	loopne 0x405a1b
  4059f3:	(bad)  
  4059f4:	pop    ecx
  4059f5:	out    0x7e,eax
  4059f7:	popf   
  4059f8:	fadd   DWORD PTR [edi]
  4059fa:	lea    esi,[ebp+0x3490acf0]
  405a00:	jmp    0xd1483945
  405a05:	xchg   ebx,eax
  405a06:	inc    edx
  405a07:	jb     0x4059ec
  405a09:	jbe    0x4059b1
  405a0b:	xchg   esp,eax
  405a0c:	sbb    BYTE PTR [ecx-0x38],0x4b
  405a10:	ins    DWORD PTR es:[edi],dx
  405a11:	jnp    0x405a92
  405a13:	in     eax,dx
  405a14:	push   edi
  405a15:	xor    BYTE PTR [esi-0xf],ch
  405a18:	outs   dx,DWORD PTR ds:[esi]
  405a19:	push   es
  405a1a:	pop    edx
  405a1b:	in     al,0x84
  405a1d:	add    ebx,edx
  405a1f:	add    BYTE PTR [ecx+edx*2+0x79],al
  405a23:	test   BYTE PTR [esi+ebx*2-0x5e765c20],dl
  405a2a:	xchg   edi,eax
  405a2b:	cmp    BYTE PTR [edi-0xba7248d],0xb0
  405a32:	fcmovne st,st(1)
  405a34:	cmp    BYTE PTR cs:[edi],bh
  405a37:	ror    bl,1
  405a39:	sbb    cl,ch
  405a3b:	mov    DWORD PTR [di+0x1f],ebp
  405a3f:	push   eax
  405a40:	pop    eax
  405a41:	xchg   ebp,eax
  405a42:	pop    esp
  405a43:	or     eax,DWORD PTR [edx-0x5c]
  405a46:	sub    al,0x87
  405a48:	aas    
  405a49:	lds    eax,FWORD PTR [ebx-0x60]
  405a4c:	pop    ss
  405a4d:	shl    BYTE PTR [edi+ecx*2],1
  405a50:	mov    ebp,0x4bcd6309
  405a55:	cmp    dl,al
  405a57:	(bad)  
  405a58:	loopne 0x4059e5
  405a5a:	or     al,0xfc
  405a5c:	ret    0x1c39
  405a5f:	imul   eax,DWORD PTR [esi+eiz*2],0x3c712a01
  405a66:	dec    ecx
  405a67:	adc    BYTE PTR [edi+0x53],bh
  405a6a:	shr    BYTE PTR [ecx+0x1b],0x6d
  405a6e:	push   esi
  405a6f:	push   ecx
  405a70:	cmp    ax,0x6acc
  405a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a75:	cs mov bh,0x9b
  405a78:	jge    0x405a2a
  405a7a:	daa    
  405a7b:	inc    edi
  405a7c:	loopne 0x405a7a
  405a7e:	xor    al,0xe2
  405a80:	jecxz  0x405a6d
  405a82:	push   eax
  405a83:	mov    al,ds:0xa92df205
  405a88:	icebp  
  405a89:	arpl   cx,bp
  405a8b:	mov    eax,es:0x342ca1b2
  405a91:	add    dl,bh
  405a93:	mov    ecx,es
  405a95:	mov    ds:0x445cb8af,eax
  405a9a:	ins    BYTE PTR es:[edi],dx
  405a9b:	and    DWORD PTR [ecx],ebp
  405a9d:	xor    DWORD PTR [esi-0x21c7e0b0],edi
  405aa3:	into   
  405aa4:	or     al,0x97
  405aa6:	sahf   
  405aa7:	jge    0x405aef
  405aa9:	xlat   BYTE PTR ds:[ebx]
  405aaa:	sub    ch,BYTE PTR [edi-0x1f]
  405aad:	hlt    
  405aae:	mov    ds,WORD PTR [ebx+esi*4]
  405ab1:	inc    edi
  405ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab3:	fidiv  WORD PTR [edx-0x2ccdc4bf]
  405ab9:	mov    ebx,DWORD PTR [ecx-0x37]
  405abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405abd:	aam    0x17
  405abf:	cmp    cl,BYTE PTR [esi]
  405ac1:	ja     0x405acb
  405ac3:	mov    WORD PTR [ebp-0x15],ds
  405ac6:	dec    esp
  405ac7:	call   0x8d3d:0xafd38a3f
  405ace:	xor    eax,DWORD PTR [eax-0x3]
  405ad1:	fstp   TBYTE PTR ds:0x98609ac7
  405ad7:	test   DWORD PTR [edi+ebx*1+0x23],ebp
  405adb:	cmp    ah,BYTE PTR [edx+0x6]
  405ade:	xor    eax,DWORD PTR [edx]
  405ae0:	inc    edx
  405ae1:	jp     0x405b19
  405ae3:	out    0x2e,al
  405ae5:	scas   eax,DWORD PTR es:[edi]
  405ae6:	inc    eax
  405ae7:	in     al,dx
  405ae8:	popa   
  405ae9:	retf   0xb209
  405aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aed:	dec    ebx
  405aee:	test   BYTE PTR [eax-0x4fc8add],bl
  405af4:	pop    edi
  405af5:	int3   
  405af6:	nop
  405af7:	inc    DWORD PTR [ecx+0x2636e694]
  405afd:	add    BYTE PTR [ebp-0x79137e14],bh
  405b03:	add    dh,BYTE PTR [eax+0x3]
  405b06:	(bad)  
  405b07:	call   0xe06a42ce
  405b0c:	jle    0x405a93
  405b0e:	or     ecx,DWORD PTR [edi]
  405b10:	ds ins BYTE PTR es:[di],dx
  405b13:	xchg   ebx,eax
  405b14:	mov    ebp,0x5a381465
  405b19:	push   es
  405b1a:	test   al,0xe7
  405b1c:	mov    bl,al
  405b1e:	sub    ebx,DWORD PTR [ebp+0x54715fc6]
  405b24:	inc    ebp
  405b25:	cld    
  405b26:	retf   
  405b27:	dec    esi
  405b28:	sub    DWORD PTR [esp+edi*2-0x1f],eax
  405b2c:	(bad)  
  405b2d:	cmp    al,0x91
  405b2f:	mov    ds:0x76d797b0,eax
  405b34:	(bad)  
  405b35:	daa    
  405b36:	cmp    BYTE PTR [ebp+0x7ac6e63],dh
  405b3c:	push   cs
  405b3d:	out    0xc3,al
  405b3f:	add    ebx,DWORD PTR ds:0x77ed47f8
  405b45:	mov    eax,ds:0xb910a49e
  405b4a:	adc    DWORD PTR [ecx],0xe08bf82b
  405b50:	push   ebx
  405b51:	add    eax,0x2813d0ba
  405b56:	addr16 (bad) 
  405b58:	mov    al,ds:0x7ce16b83
  405b5d:	or     ch,BYTE PTR [edi-0x4b076b6b]
  405b63:	or     ebp,ecx
  405b65:	or     DWORD PTR ds:0x3ee326be,edx
  405b6b:	shr    DWORD PTR [edx],1
  405b6d:	sub    edx,eax
  405b6f:	xchg   ebx,eax
  405b70:	jno    0x405ba1
  405b72:	out    0xdd,al
  405b74:	fdivr  st(6),st
  405b76:	pop    eax
  405b77:	sub    edx,DWORD PTR [ebx]
  405b79:	xor    al,0x87
  405b7b:	in     eax,dx
  405b7c:	in     eax,0xc4
  405b7e:	clc    
  405b7f:	cmp    DWORD PTR [ebp-0x43],ecx
  405b82:	inc    edx
  405b83:	pop    es
  405b84:	pop    edi
  405b85:	mov    eax,0x4f0e9b32
  405b8a:	in     al,dx
  405b8b:	add    esi,ecx
  405b8d:	xor    BYTE PTR [edx],bh
  405b8f:	pop    ebx
  405b90:	mov    ah,0x91
  405b92:	call   0xba446ba3
  405b97:	fstp   QWORD PTR [ebp-0xb]
  405b9a:	lea    ebp,[ebp-0x28e71b0b]
  405ba0:	mov    edi,0x54fa4e3c
  405ba5:	xchg   esi,eax
  405ba6:	sahf   
  405ba7:	dec    esp
  405ba8:	or     al,BYTE PTR [edx-0x2aab3c4c]
  405bae:	ja     0x405b8b
  405bb0:	ret    
  405bb1:	mov    ch,0xa8
  405bb3:	sbb    BYTE PTR [ecx-0x19],dh
  405bb6:	xchg   BYTE PTR [edi-0x5d4c7dd8],ch
  405bbc:	mov    es,WORD PTR [esi+0x144f35f3]
  405bc2:	and    ah,BYTE PTR [eax+0x5efe9cc3]
  405bc8:	shl    DWORD PTR [edx-0x1d],1
  405bcb:	cmp    ch,ch
  405bcd:	xchg   esi,eax
  405bce:	push   ss
  405bcf:	adc    BYTE PTR [ebx+ecx*4-0x4],dh
  405bd3:	loope  0x405bdf
  405bd5:	mov    fs,WORD PTR [ebx-0x74]
  405bd8:	dec    esp
  405bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bda:	ins    DWORD PTR es:[edi],dx
  405bdb:	mov    esp,0xb3291d14
  405be0:	dec    esi
  405be1:	mov    WORD PTR [edx+0x3c],?
  405be4:	pop    es
  405be5:	imul   ebx,DWORD PTR [ecx-0x55],0xadee97c5
  405bec:	in     eax,0x15
  405bee:	es popf 
  405bf0:	push   edi
  405bf1:	call   0x2688:0xbeb23d6c
  405bf8:	mov    ebx,0xce879d09
  405bfd:	sbb    DWORD PTR [edi],0xffffffdb
  405c00:	clc    
  405c01:	inc    esi
  405c02:	test   al,0xc7
  405c04:	scas   eax,DWORD PTR es:[edi]
  405c05:	cmp    al,0xc7
  405c07:	fcom   QWORD PTR [edx]
  405c09:	lahf   
  405c0a:	add    al,0x56
  405c0c:	(bad)  
  405c0d:	ins    BYTE PTR es:[edi],dx
  405c0e:	or     ah,BYTE PTR [edi]
  405c10:	jg     0x405bce
  405c12:	sub    bh,0x24
  405c15:	dec    ebx
  405c16:	call   0xfbb3:0x56c8ba78
  405c1d:	sar    BYTE PTR [eax+0xf],1
  405c20:	sar    BYTE PTR [edi+0x2f],0x6c
  405c24:	mov    edi,0x8acdb4c8
  405c29:	cmp    DWORD PTR [ebx],ebp
  405c2b:	push   esp
  405c2c:	jb     0x405bcd
  405c2e:	repnz mov ds:0x1b786e5,al
  405c34:	add    eax,0x2e02f6d8
  405c39:	out    0xba,eax
  405c3b:	lea    ebp,[edx]
  405c3d:	fdiv   st(3),st
  405c3f:	jnp    0x405cad
  405c41:	js     0x405c02
  405c43:	in     al,dx
  405c44:	fwait
  405c45:	or     al,0x8a
  405c47:	(bad)  
  405c48:	cmp    DWORD PTR [edi],ecx
  405c4a:	push   ds
  405c4b:	adc    BYTE PTR [ebx+esi*4],ah
  405c4e:	inc    edi
  405c4f:	sbb    DWORD PTR [esi+edx*4-0x78],0x5f
  405c54:	shl    DWORD PTR [ecx],cl
  405c56:	add    eax,0xda661f1
  405c5b:	jae    0x405c97
  405c5d:	cs mov eax,0x8fb0ca5d
  405c63:	mov    cl,0x65
  405c65:	repnz lea edi,[edx+0x1]
  405c69:	mov    ch,0x69
  405c6b:	ret    
  405c6c:	lods   eax,DWORD PTR ds:[esi]
  405c6d:	pushf  
  405c6e:	arpl   bx,bp
  405c70:	mov    ds:0xe53c9261,eax
  405c75:	xor    BYTE PTR [ebp+0x17],bh
  405c78:	fbstp  TBYTE PTR [ebx-0x5a]
  405c7b:	cmp    ch,BYTE PTR [edx-0x7aaf40fa]
  405c81:	jo     0x405c27
  405c83:	neg    BYTE PTR [ecx]
  405c85:	adc    esi,DWORD PTR [ecx+0x52cb1272]
  405c8b:	popa   
  405c8c:	dec    ebx
  405c8d:	sbb    eax,0x9a8cbb0b
  405c92:	fmul   st,st(0)
  405c94:	stos   DWORD PTR es:[edi],eax
  405c95:	dec    edx
  405c96:	out    0x2d,eax
  405c98:	mov    ebx,0xf355363e
  405c9d:	out    0xa8,al
  405c9f:	imul   eax,DWORD PTR [ecx-0x69b22be2],0x428f3a87
  405ca9:	int    0xab
  405cab:	dec    esp
  405cac:	xchg   ebp,eax
  405cad:	or     BYTE PTR [ebx+0x75],bh
  405cb0:	aaa    
  405cb1:	arpl   WORD PTR [esi+0x29],di
  405cb4:	shl    BYTE PTR [ebx],cl
  405cb6:	dec    ebx
  405cb7:	pop    edx
  405cb8:	aad    0x22
  405cba:	push   es
  405cbb:	dec    eax
  405cbc:	mov    edx,0x529da057
  405cc1:	and    DWORD PTR [ebx],eax
  405cc3:	sti    
  405cc4:	test   al,0x4a
  405cc6:	pop    ss
  405cc7:	mov    BYTE PTR [eax+0x13439a42],bh
  405ccd:	xor    DWORD PTR [ebx],esp
  405ccf:	in     al,dx
  405cd0:	or     dh,BYTE PTR [ebx-0x2d117136]
  405cd6:	or     eax,0xa4704eb5
  405cdb:	xchg   esp,eax
  405cdc:	hlt    
  405cdd:	fldcw  WORD PTR [eax]
  405cdf:	push   ss
  405ce0:	xchg   ebx,eax
  405ce1:	mov    al,0x78
  405ce3:	in     eax,0xbe
  405ce5:	pop    ss
  405ce6:	cmp    DWORD PTR [ebp-0x5d3a5cd2],ecx
  405cec:	pop    esp
  405ced:	cli    
  405cee:	test   BYTE PTR [esp+eax*4+0x40],ch
  405cf2:	sahf   
  405cf3:	pushf  
  405cf4:	inc    DWORD PTR [eax]
  405cf6:	gs jle 0x405c7b
  405cf9:	call   0xb200:0x311410ba
  405d00:	arpl   WORD PTR [ebp-0xee03a0c],sp
  405d06:	les    ecx,FWORD PTR [ebx+edx*2-0x65]
  405d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d0b:	ret    
  405d0c:	mov    eax,ds:0xdcf10ea2
  405d11:	jg     0x405d36
  405d13:	idiv   BYTE PTR [esi+0x6d]
  405d16:	mov    eax,0x5eae7fac
  405d1b:	adc    BYTE PTR [eax-0x3d4f630f],dl
  405d21:	jge    0x405d6b
  405d23:	jge    0x405d3e
  405d25:	xchg   edx,eax
  405d26:	mov    ebp,0x72c71616
  405d2b:	cmp    edi,DWORD PTR [ebx+0x1c]
  405d2e:	(bad)  
  405d30:	scas   al,BYTE PTR es:[edi]
  405d31:	lds    edi,FWORD PTR [eax+ebx*8-0x9b192]
  405d38:	mov    esp,0x52013bd4
  405d3d:	ds lock stc 
  405d40:	sbb    edi,DWORD PTR [ebx-0x17]
  405d43:	add    ah,BYTE PTR [edi+0x1de5077b]
  405d49:	inc    esp
  405d4a:	cwde   
  405d4b:	or     al,0x2a
  405d4d:	pop    es
  405d4e:	adc    eax,0xc29b87d7
  405d53:	clc    
  405d54:	mov    eax,esp
  405d56:	inc    esi
  405d57:	and    eax,0xcd39131e
  405d5c:	std    
  405d5d:	sar    BYTE PTR [eax+0x48],1
  405d60:	jp     0x405d65
  405d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d63:	jmp    0xaf62e884
  405d68:	imul   ebx,DWORD PTR [eax],0xffffff8f
  405d6b:	pusha  
  405d6c:	add    BYTE PTR [ebp+edx*4-0x16a9cf22],0x71
  405d74:	aas    
  405d75:	aaa    
  405d76:	loopne 0x405d74
  405d78:	jl     0x405d6d
  405d7a:	repz push ds
  405d7c:	push   esp
  405d7d:	jno    0x405d5b
  405d7f:	mov    gs,WORD PTR [edx+0x4c07a321]
  405d85:	fidiv  DWORD PTR [eiz*4+0x4bcc6307]
  405d8c:	and    ch,BYTE PTR [ecx+0x3b0ba026]
  405d92:	or     eax,0x5e3978cf
  405d97:	cmp    BYTE PTR [eax+0x60],0x3a
  405d9b:	add    BYTE PTR [ebp+0x4659f218],0xf9
  405da2:	fstp   DWORD PTR [edx]
  405da4:	mov    ebx,DWORD PTR [ecx+0x938189b]
  405daa:	test   BYTE PTR [ebp+0x5d],bh
  405dad:	mov    esi,0x1cc0c9db
  405db2:	xchg   bh,ch
  405db4:	add    eax,0x394bc57d
  405db9:	stc    
  405dba:	sbb    ah,al
  405dbc:	out    dx,al
  405dbd:	pop    esi
  405dbe:	jp     0x405d68
  405dc0:	cmp    eax,0xb6f965
  405dc5:	push   esi
  405dc6:	mov    al,ds:0x4cbcc22
  405dcb:	sbb    BYTE PTR [ecx+0x98d4832],dl
  405dd1:	sub    eax,0xe0cc0638
  405dd6:	pop    ds
  405dd7:	adc    eax,0xa14a1b83
  405ddc:	push   es
  405ddd:	mov    esp,0x9ba1cbc0
  405de2:	cmp    ecx,edi
  405de4:	sar    DWORD PTR ds:0x241ff9df,0x39
  405deb:	ja     0x405db2
  405ded:	cmp    DWORD PTR [edx],0x1971223c
  405df3:	xchg   ecx,eax
  405df4:	push   edi
  405df5:	mov    esp,?
  405df7:	or     edi,DWORD PTR [edi]
  405df9:	jge    0x405dfc
  405dfb:	out    dx,eax
  405dfc:	sti    
  405dfd:	jne    0x405dba
  405dff:	push   esp
  405e00:	jnp    0x405e75
  405e02:	daa    
  405e03:	push   0x234c91ce
  405e08:	pop    ecx
  405e09:	and    DWORD PTR [ecx+0x3c],ebp
  405e0c:	cld    
  405e0d:	pop    ebp
  405e0e:	and    DWORD PTR [esi+eax*8+0x55],esp
  405e12:	popf   
  405e13:	in     eax,dx
  405e14:	cmp    al,0xd2
  405e16:	(bad)  
  405e17:	ds jae 0x405da1
  405e1a:	mov    esi,0x474dd1c8
  405e1f:	or     ebx,0xffffffca
  405e22:	jbe    0x405e7d
  405e24:	ret    0xdfc7
  405e27:	ds pop esi
  405e29:	lock aam 0xae
  405e2c:	add    esi,DWORD PTR es:[esi-0x6c]
  405e30:	add    ecx,esp
  405e32:	xor    cl,ah
  405e34:	mov    ah,0x5c
  405e36:	call   0xb2ac:0x2038130d
  405e3d:	mov    bl,0xd4
  405e3f:	adc    bh,BYTE PTR [esi]
  405e41:	out    dx,al
  405e42:	xchg   ecx,eax
  405e43:	dec    esi
  405e44:	call   0x55be476c
  405e49:	imul   edx,DWORD PTR [esi],0xffffffb8
  405e4c:	and    dl,BYTE PTR [edx]
  405e4e:	ins    DWORD PTR es:[edi],dx
  405e4f:	repz ja 0x405e21
  405e52:	inc    esp
  405e53:	adc    al,0x9e
  405e55:	sbb    ah,BYTE PTR [eax]
  405e57:	(bad)  
  405e58:	sti    
  405e59:	ins    BYTE PTR es:[edi],dx
  405e5a:	push   es
  405e5b:	in     eax,dx
  405e5c:	mov    bh,0xf1
  405e5e:	and    esi,DWORD PTR [ebp-0x2846bc78]
  405e64:	scas   al,BYTE PTR es:[edi]
  405e65:	pop    ss
  405e66:	mov    esi,0x39f21641
  405e6b:	rol    BYTE PTR [ecx],cl
  405e6d:	sar    bl,0x8f
  405e70:	psubusb mm7,QWORD PTR [eax+ebp*4-0x80]
  405e75:	out    dx,al
  405e76:	fucomi st,st(3)
  405e78:	(bad)  
  405e7a:	(bad)  
  405e7b:	jl     0x405eca
  405e7d:	xor    BYTE PTR [edi],ch
  405e7f:	(bad)  
  405e80:	loop   0x405e86
  405e82:	mov    dl,0x6e
  405e84:	ja     0x405ed5
  405e86:	xlat   BYTE PTR ds:[ebx]
  405e87:	imul   esp,DWORD PTR [edx],0xc7a311f9
  405e8d:	bound  edi,QWORD PTR ds:0x782339e0
  405e93:	lods   eax,DWORD PTR ds:[esi]
  405e94:	or     esp,0x0
  405e97:	adc    DWORD PTR [edi],edx
  405e99:	xchg   ebp,esi
  405e9b:	mov    ah,0xb3
  405e9d:	add    BYTE PTR [esi],al
  405e9f:	or     al,0xff
  405ea1:	ss or  eax,0xc21c44fd
  405ea7:	call   0x174c4a4a
  405eac:	in     eax,dx
  405ead:	in     eax,dx
  405eae:	cmp    al,0xb3
  405eb0:	push   edx
  405eb1:	jnp    0x405e54
  405eb3:	adc    eax,0x88e236a9
  405eb8:	mov    WORD PTR [esi-0x28],?
  405ebb:	or     DWORD PTR [ebx+0x79],esp
  405ebe:	mov    ecx,0xb6f0c1af
  405ec3:	or     edi,ebx
  405ec5:	cdq    
  405ec6:	pusha  
  405ec7:	lahf   
  405ec8:	xchg   ecx,eax
  405ec9:	xchg   ecx,ebx
  405ecb:	fwait
  405ecc:	pop    ebx
  405ecd:	cmp    esi,DWORD PTR [edx+0x6a]
  405ed0:	sub    ebx,edx
  405ed2:	test   al,0xfd
  405ed4:	adc    esp,DWORD PTR [ebx+0x58fb1bff]
  405eda:	loopne 0x405e8f
  405edc:	jno    0x405f56
  405ede:	pop    edi
  405edf:	sub    DWORD PTR [ecx],ebx
  405ee1:	lea    esp,ds:0x3f4e3fb2
  405ee7:	stos   DWORD PTR es:[edi],eax
  405ee8:	jmp    0xd22ae2a3
  405eed:	in     al,0x82
  405eef:	les    eax,FWORD PTR [esi+esi*4]
  405ef2:	push   0xb5e5b57f
  405ef7:	mov    dh,BYTE PTR [ecx+0x309884f9]
  405efd:	jae    0x405ea1
  405eff:	fmul   st,st(4)
  405f01:	fwait
  405f02:	in     eax,dx
  405f03:	int    0x67
  405f05:	xor    ecx,DWORD PTR [ecx]
  405f07:	push   0x2a
  405f09:	lods   eax,DWORD PTR ds:[esi]
  405f0a:	test   BYTE PTR [ebx-0x609132d1],ch
  405f10:	jb     0x405f1f
  405f12:	fcom   QWORD PTR [edi+0x5faf6dcb]
  405f18:	jp     0x405ec3
  405f1a:	fiadd  WORD PTR [ecx-0x2523304]
  405f20:	dec    edi
  405f21:	jmp    0x4347:0xe2dd5b1c
  405f28:	jp     0x405eed
  405f2a:	je     0x405ee7
  405f2c:	ins    BYTE PTR es:[edi],dx
  405f2d:	(bad)  
  405f2e:	bound  ebx,QWORD PTR [ebx]
  405f30:	stos   DWORD PTR es:[edi],eax
  405f31:	and    BYTE PTR [esi-0x3c01f3f6],dl
  405f37:	mov    DWORD PTR [edi-0x1d],esi
  405f3a:	add    cl,cl
  405f3c:	out    0x3b,eax
  405f3e:	mov    eax,ds:0x583885cc
  405f43:	push   ebp
  405f44:	test   eax,0xee577ea1
  405f49:	out    dx,al
  405f4a:	add    al,0x7b
  405f4c:	dec    ebx
  405f4d:	pop    ebx
  405f4e:	and    esp,ebx
  405f50:	leave  
  405f51:	sub    ch,cl
  405f53:	cwde   
  405f54:	out    0xa7,eax
  405f56:	jl     0x405f3d
  405f58:	mov    ah,0x27
  405f5a:	(bad)  
  405f5b:	(bad)  
  405f5c:	fist   WORD PTR cs:[ebx]
  405f5f:	push   eax
  405f60:	mov    edx,0x1feaa930
  405f65:	repnz push 0x29
  405f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f69:	fst    DWORD PTR [eax]
  405f6b:	xchg   ebx,eax
  405f6c:	shl    BYTE PTR [ebx],cl
  405f6e:	cmp    eax,0x7db158d3
  405f73:	push   ecx
  405f74:	jl     0x405f80
  405f76:	fs sahf 
  405f78:	cmp    eax,0x4389d5c5
  405f7d:	icebp  
  405f7e:	jne    0x405f7e
  405f80:	pop    ebx
  405f81:	push   edx
  405f82:	rcr    DWORD PTR [ecx],1
  405f84:	inc    BYTE PTR [ebp+0x15c1cd78]
  405f8a:	pop    ebx
  405f8b:	int3   
  405f8c:	sub    BYTE PTR [ebp+0x50463b8],dl
  405f92:	jl     0x405f5c
  405f94:	xchg   BYTE PTR [eax],bh
  405f96:	scas   eax,DWORD PTR es:[edi]
  405f97:	xchg   edx,eax
  405f98:	icebp  
  405f99:	test   ebx,esp
  405f9b:	mov    ebx,0x7999d6a9
  405fa0:	mov    ebx,0x3c760742
  405fa5:	idiv   DWORD PTR [ecx+0x5c16c1e7]
  405fab:	inc    edx
  405fac:	jno    0x40600c
  405fae:	mov    dl,0xbf
  405fb0:	(bad)  
  405fb1:	nop    DWORD PTR [edi]
  405fb4:	aaa    
  405fb5:	fcomp  DWORD PTR [esi-0x67]
  405fb8:	out    dx,al
  405fb9:	cmc    
  405fba:	lea    esp,[bx+0x27]
  405fbe:	inc    ebx
  405fbf:	mov    ebp,DWORD PTR [edi-0x1]
  405fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc3:	mov    es,WORD PTR [ebp-0x9]
  405fc6:	inc    ebp
  405fc7:	sbb    al,0x65
  405fc9:	fwait
  405fca:	sbb    BYTE PTR [esi-0x9],cl
  405fcd:	sbb    al,0xbe
  405fcf:	ficomp DWORD PTR [eax+0x9]
  405fd2:	daa    
  405fd3:	mov    bh,0xd6
  405fd5:	fwait
  405fd6:	jne    0x406007
  405fd8:	sahf   
  405fd9:	jmp    0x7c266827
  405fde:	sbb    al,0x23
  405fe0:	scas   al,BYTE PTR es:[edi]
  405fe1:	or     bh,BYTE PTR [eax-0x25]
  405fe4:	add    ebx,eax
  405fe6:	push   edi
  405fe7:	(bad)  
  405fe8:	test   DWORD PTR [eax+esi*8-0x2d],0x1e3a4eb3
  405ff0:	std    
  405ff1:	aad    0xb9
  405ff3:	sar    BYTE PTR [esi-0x164cda0f],1
  405ff9:	mov    ebx,DWORD PTR [edi]
  405ffb:	sar    DWORD PTR [ebp+edi*4-0x3d829e3],0x40
  406003:	add    eax,0x45e6c1ef
  406008:	jge    0x406083
  40600a:	mov    eax,ds:0xf99f76bf
  40600f:	jns    0x405fa0
  406011:	mov    cl,0x98
  406013:	mov    BYTE PTR [edi-0x21f4e7f8],ah
  406019:	push   cs
  40601a:	sbb    DWORD PTR [edi],ebx
  40601c:	push   ebp
  40601d:	(bad)  
  40601f:	mov    eax,ds:0x8a85eda3
  406024:	retf   
  406025:	jbe    0x406025
  406027:	jae    0x405fd6
  406029:	inc    edx
  40602a:	mov    eax,0x1854c076
  40602f:	jnp    0x405fee
  406031:	add    DWORD PTR [eax+0x2c],edx
  406034:	inc    esp
  406035:	mov    ah,0x85
  406037:	pop    ss
  406038:	cwde   
  406039:	sub    ch,BYTE PTR [esi-0x3dda290]
  40603f:	xor    ecx,DWORD PTR [edi-0x63f13645]
  406045:	fcmovnu st,st(6)
  406047:	push   ebx
  406048:	dec    ebx
  406049:	cwde   
  40604a:	jmp    0xcc3e649a
  40604f:	inc    ecx
  406050:	and    BYTE PTR [edx+0x695a4595],bh
  406056:	push   ss
  406057:	std    
  406058:	or     BYTE PTR ds:0x340eb61e,bl
  40605e:	fdivr  DWORD PTR [ebx+0x56da77ab]
  406064:	dec    esi
  406065:	mov    al,ds:0xf02a8d6f
  40606a:	mov    al,0xf6
  40606c:	sbb    al,0xf7
  40606e:	xchg   ebp,eax
  40606f:	xor    BYTE PTR [edx-0x19],cl
  406072:	aas    
  406073:	sbb    bl,BYTE PTR [eax-0x75]
  406076:	add    BYTE PTR [esi-0x29],cl
  406079:	mov    ebp,0x40fe9dfe
  40607e:	push   edi
  40607f:	nop
  406080:	int    0xf0
  406082:	cld    
  406083:	pop    ecx
  406084:	dec    ebx
  406085:	or     BYTE PTR [ebx],dh
  406087:	mov    ch,0xce
  406089:	sbb    edi,0x64c82b3c
  40608f:	lds    ebx,FWORD PTR [ebp+0x3f]
  406092:	mov    al,ds:0x9185c745
  406097:	lods   eax,DWORD PTR ds:[esi]
  406098:	shl    BYTE PTR [esi-0xb],0xc5
  40609c:	mov    esp,0x70343949
  4060a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060a2:	mov    ah,0xe0
  4060a4:	cmp    bh,bl
  4060a6:	imul   edx,DWORD PTR [esi-0x46],0xffffffdf
  4060aa:	retf   
  4060ab:	adc    ch,cl
  4060ad:	(bad)  
  4060ae:	pop    ds
  4060af:	push   edx
  4060b0:	lahf   
  4060b1:	mov    bl,0xe3
  4060b3:	in     al,dx
  4060b4:	hlt    
  4060b5:	inc    edx
  4060b6:	mov    dl,0x5f
  4060b8:	xor    dh,0xc2
  4060bb:	ret    
  4060bc:	cmp    eax,edx
  4060be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060bf:	mov    ch,0x24
  4060c1:	in     eax,dx
  4060c2:	jne    0x40611e
  4060c4:	inc    edi
  4060c5:	or     DWORD PTR [esi-0x12],0x4bf90988
  4060cc:	stos   BYTE PTR es:[edi],al
  4060cd:	and    DWORD PTR [ebx+ecx*4],0x954f4373
  4060d4:	stos   BYTE PTR es:[edi],al
  4060d5:	mov    edi,0xd23fb429
  4060da:	loope  0x4060c4
  4060dc:	push   ebp
  4060dd:	sub    al,0xbe
  4060df:	mov    esi,DWORD PTR [edi+0x2c07f5e9]
  4060e5:	arpl   WORD PTR [esi],si
  4060e7:	fbld   TBYTE PTR [edi]
  4060e9:	das    
  4060ea:	sbb    al,0x2f
  4060ec:	dec    ebp
  4060ed:	mov    ebp,0x95b3a0dd
  4060f2:	in     al,dx
  4060f3:	xchg   edx,eax
  4060f4:	test   BYTE PTR [edi-0x1d],bh
  4060f7:	fstp   QWORD PTR [ecx-0x420396e9]
  4060fd:	mov    eax,DWORD PTR [ebp-0x5c]
  406100:	test   BYTE PTR [edi+0x7f],ch
  406103:	mov    ebx,0xb6fedb2f
  406108:	call   0x9db8:0x65649d78
  40610f:	dec    ebp
  406110:	clc    
  406111:	mov    ecx,esi
  406113:	iret   
  406114:	mov    ch,0x8b
  406116:	scas   al,BYTE PTR es:[edi]
  406117:	ret    
  406118:	ss inc esp
  40611a:	pop    edx
  40611b:	fucom  st(0)
  40611d:	mov    edx,DWORD PTR [ebp+ebp*4-0x19e731be]
  406124:	pop    ds
  406125:	xchg   esi,eax
  406126:	data16 loope 0x406199
  406129:	nop
  40612a:	xor    al,0xfa
  40612c:	xchg   edi,eax
  40612d:	repnz stos DWORD PTR es:[edi],eax
  40612f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406130:	xlat   BYTE PTR ds:[ebx]
  406131:	lahf   
  406132:	stos   BYTE PTR es:[edi],al
  406133:	bound  esi,QWORD PTR [ebx+0x130e509c]
  406139:	ret    
  40613a:	mov    edx,0x5ca6d3a5
  40613f:	cli    
  406140:	cmp    BYTE PTR [eax-0x3],cl
  406143:	in     eax,dx
  406144:	sbb    DWORD PTR [esi],0x7ada5a0e
  40614a:	rcr    esp,cl
  40614c:	jl     0x4061b6
  40614e:	and    eax,0x512a6b22
  406153:	pushf  
  406154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406156:	and    esp,DWORD PTR [ebp+ebx*1-0x55]
  40615a:	mov    ch,0x4f
  40615c:	sbb    eax,0x953f0970
  406161:	or     cl,0xc3
  406164:	sub    bh,BYTE PTR [eax]
  406166:	out    0x76,eax
  406168:	mov    eax,ds:0x5fb29c21
  40616d:	sti    
  40616e:	or     DWORD PTR [edx-0x29],ecx
  406171:	cmp    eax,0xeb1a62ff
  406176:	test   BYTE PTR [ebx+0x65],0xea
  40617a:	or     eax,0x14a1335e
  40617f:	pop    es
  406180:	nop
  406181:	add    DWORD PTR [esi+0x12],eax
  406184:	mov    al,ds:0x8a4109a8
  406189:	arpl   WORD PTR [edi-0x30],cx
  40618c:	aad    0xc
  40618e:	js     0x4061f0
  406190:	or     bl,ah
  406192:	dec    edi
  406193:	pop    esp
  406194:	jle    0x4061eb
  406196:	mov    eax,0xd231d9f5
  40619b:	mov    ecx,0xc3d72a6f
  4061a0:	lods   eax,DWORD PTR ds:[esi]
  4061a1:	bound  ecx,QWORD PTR [esi+0x57d20062]
  4061a7:	out    dx,eax
  4061a8:	jnp    0x4061d1
  4061aa:	inc    edi
  4061ab:	outs   dx,DWORD PTR ds:[esi]
  4061ac:	pop    ebp
  4061ad:	push   ebp
  4061ae:	push   esi
  4061af:	pusha  
  4061b0:	sub    cl,BYTE PTR [edx+0x4a8a5713]
  4061b6:	push   ds
  4061b7:	arpl   WORD PTR [eax+0x26],bx
  4061ba:	or     al,0x75
  4061bc:	test   al,0xd1
  4061be:	and    eax,eax
  4061c0:	stos   BYTE PTR es:[edi],al
  4061c1:	and    bl,cl
  4061c3:	ret    0x8f13
  4061c6:	and    al,0xbd
  4061c8:	clc    
  4061c9:	aad    0x38
  4061cb:	int3   
  4061cc:	push   edi
  4061cd:	jl     0x406164
  4061cf:	retf   
  4061d0:	dec    eax
  4061d1:	shl    BYTE PTR [ebp-0x7c],0x10
  4061d5:	lock or esp,DWORD PTR [eax+0x6f38cb2f]
  4061dc:	test   eax,0xfc44ddbd
  4061e1:	xchg   ebx,eax
  4061e2:	js     0x40618c
  4061e4:	or     al,0xc1
  4061e6:	sti    
  4061e7:	dec    edi
  4061e8:	loop   0x4061fb
  4061ea:	jl     0x40617e
  4061ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ed:	ret    
  4061ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ef:	repz call 0x9f0e0e9f
  4061f5:	out    0x76,al
  4061f7:	mov    DWORD PTR [ecx],ecx
  4061f9:	loopne 0x406242
  4061fb:	pop    edx
  4061fc:	xchg   DWORD PTR [ecx+0x27ff4e13],edi
  406202:	lods   eax,DWORD PTR ds:[esi]
  406203:	shr    DWORD PTR [edx-0x64],1
  406206:	push   ds
  406207:	call   0xcc887b08
  40620c:	ins    DWORD PTR es:[edi],dx
  40620d:	push   ss
  40620e:	ret    0xcca1
  406211:	inc    edi
  406212:	push   ebx
  406213:	mov    ch,0xb1
  406215:	pop    ecx
  406216:	arpl   WORD PTR [ecx-0x2327a4af],cx
  40621c:	popf   
  40621d:	cdq    
  40621e:	sub    DWORD PTR [edx],edi
  406220:	js     0x406233
  406222:	dec    esp
  406223:	fucomip st,st(1)
  406225:	test   BYTE PTR [esi+0x734fc8e2],0xaf
  40622c:	div    DWORD PTR [edx+0x65db3180]
  406232:	shl    ebx,cl
  406234:	fyl2xp1 
  406236:	push   ebp
  406237:	sub    dl,BYTE PTR [ebx]
  406239:	in     al,dx
  40623a:	add    BYTE PTR [edx-0x76f7c7bb],al
  406240:	inc    BYTE PTR [esi-0x49ec8537]
  406246:	jmp    0xe77341e5
  40624b:	pop    es
  40624c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40624d:	inc    ecx
  40624e:	cmp    BYTE PTR [esi],ah
  406250:	adc    al,0xc9
  406252:	scas   al,BYTE PTR es:[edi]
  406253:	sbb    BYTE PTR [ebx-0x3b],al
  406256:	mov    bh,0x30
  406258:	xchg   ecx,eax
  406259:	pop    ebx
  40625a:	dec    ecx
  40625b:	jnp    0x406220
  40625d:	dec    eax
  40625e:	mov    cl,0xa9
  406260:	pop    edi
  406261:	dec    esi
  406262:	data16 loope 0x4061ed
  406265:	adc    al,0x38
  406267:	dec    eax
  406268:	pop    edi
  406269:	jbe    0x40629c
  40626b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40626c:	aaa    
  40626d:	cmp    dh,al
  40626f:	mov    BYTE PTR [ecx],al
  406271:	fs or  eax,0x4ab6f188
  406277:	ins    DWORD PTR es:[edi],dx
  406278:	dec    eax
  406279:	pusha  
  40627a:	sti    
  40627b:	mov    ds:0x72831b34,al
  406280:	repnz hlt 
  406282:	(bad)  
  406283:	push   0x5f6abee6
  406288:	mov    dh,0x12
  40628a:	lahf   
  40628b:	jp     0x406289
  40628d:	add    ah,dh
  40628f:	jno    0x406219
  406291:	pop    esi
  406292:	in     eax,0x94
  406294:	jns    0x406247
  406296:	loopne 0x40627f
  406298:	sub    DWORD PTR [ebx-0x3b],0x40
  40629c:	fisubr DWORD PTR [ebp+0xb40bb56]
  4062a2:	fdivrp st(3),st
  4062a4:	loopne 0x406266
  4062a6:	push   es
  4062a7:	ins    DWORD PTR es:[edi],dx
  4062a8:	enter  0x1f86,0xa0
  4062ac:	std    
  4062ad:	test   al,0xc3
  4062af:	test   BYTE PTR [eax+0x7d797ab],al
  4062b5:	or     edi,DWORD PTR ds:0x69d06a57
  4062bb:	inc    dh
  4062bd:	inc    ecx
  4062be:	dec    ebx
  4062bf:	sti    
  4062c0:	int3   
  4062c1:	imul   edx,DWORD PTR [ebx+0xc50c130],0xffffff96
  4062c8:	push   edi
  4062c9:	lahf   
  4062ca:	xchg   ecx,edi
  4062cc:	sub    edx,ecx
  4062ce:	add    BYTE PTR ds:0x823e2480,0xec
  4062d5:	fadd   QWORD PTR [ecx-0x3d]
  4062d8:	es inc edi
  4062da:	and    ebx,esp
  4062dc:	and    eax,eax
  4062de:	mov    ah,0xa1
  4062e0:	loope  0x406356
  4062e2:	out    0xa4,eax
  4062e4:	xchg   DWORD PTR [edi],edx
  4062e6:	mov    dl,0xae
  4062e8:	push   edi
  4062e9:	xor    esi,ecx
  4062eb:	call   0x40662cd4
  4062f0:	in     al,0x2f
  4062f2:	fs fld st(4)
  4062f5:	sbb    edi,0xfffffff0
  4062f8:	sbb    ecx,ebx
  4062fa:	bndstx [esi+ecx*8-0xf515d9],(bad)
  406302:	inc    ebx
  406303:	pop    ss
  406304:	inc    ebp
  406305:	daa    
  406306:	fisttp QWORD PTR ds:0x221757f6
  40630c:	xor    al,0x88
  40630e:	fldenv [edi+esi*1]
  406311:	imul   edx,DWORD PTR [eax-0x69],0xffffffa9
  406315:	cld    
  406316:	cmp    BYTE PTR [edx+0x22],bh
  406319:	push   edx
  40631a:	xlat   BYTE PTR ds:[ebx]
  40631b:	retf   
  40631c:	sbb    al,0x22
  40631e:	inc    ecx
  40631f:	xor    eax,0x7df71d0b
  406324:	(bad)  
  406325:	mov    al,ds:0x3a945e5d
  40632a:	and    al,BYTE PTR [esi+0x3]
  40632d:	test   al,0xdb
  40632f:	jmp    0x6f790b3
  406334:	cld    
  406335:	add    eax,DWORD PTR [edx+0x4647a53f]
  40633b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40633c:	adc    eax,0x527bbfa2
  406341:	mov    esp,0x38d05e1c
  406346:	xor    BYTE PTR [esi+0x30],bl
  406349:	mov    ebx,0x77e9d3d4
  40634e:	or     esp,DWORD PTR [edx]
  406350:	mov    ah,0xbd
  406352:	ss scas al,BYTE PTR es:[edi]
  406354:	jnp    0x40637a
  406356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406357:	enter  0xa51b,0xc4
  40635b:	loope  0x4063c7
  40635d:	out    dx,al
  40635e:	out    dx,eax
  40635f:	rcr    DWORD PTR ss:[esi],0xf
  406363:	mov    WORD PTR [eax+ebp*4+0x72],?
  406367:	fidiv  DWORD PTR [ecx+0x8]
  40636a:	mov    ebx,0xd7d11241
  40636f:	mov    gs,WORD PTR ds:0x2568213b
  406375:	shl    BYTE PTR [ebx-0x78],cl
  406378:	dec    ecx
  406379:	ins    DWORD PTR es:[edi],dx
  40637a:	pusha  
  40637b:	or     dh,bh
  40637d:	(bad)  
  40637e:	push   0x7740b036
  406383:	xchg   DWORD PTR [ebp-0x915cd6c],edi
  406389:	out    dx,al
  40638a:	aam    0x6b
  40638c:	sbb    al,0xed
  40638e:	out    dx,eax
  40638f:	mov    WORD PTR [ebx-0x6a21a041],?
  406395:	xor    eax,0x29299aa3
  40639a:	(bad)  
  40639b:	pop    ebp
  40639c:	daa    
  40639d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40639e:	xchg   esp,eax
  40639f:	pushf  
  4063a0:	xor    eax,0xd5d98ce3
  4063a5:	cli    
  4063a6:	fisubr DWORD PTR [esi-0x11]
  4063a9:	xor    eax,edx
  4063ab:	dec    esi
  4063ac:	inc    DWORD PTR [edi]
  4063ae:	je     0x406412
  4063b0:	popa   
  4063b1:	mov    cl,ah
  4063b3:	pop    es
  4063b4:	ins    BYTE PTR es:[edi],dx
  4063b5:	je     0x4063b1
  4063b7:	jp     0x406409
  4063b9:	lea    ecx,[edi-0x7c]
  4063bc:	jge    0x40638b
  4063be:	sub    cl,BYTE PTR [ebx-0x49]
  4063c1:	or     ch,ah
  4063c3:	popf   
  4063c4:	arpl   WORD PTR [esi+0x155307bb],bp
  4063ca:	xor    al,BYTE PTR [ebx+0x7fe53a1d]
  4063d0:	xchg   ebp,eax
  4063d1:	or     bh,BYTE PTR [edi]
  4063d3:	or     bh,BYTE PTR [edi]
  4063d5:	aam    0x34
  4063d7:	sbb    ch,BYTE PTR ss:[edi+0x173ab4a4]
  4063de:	aaa    
  4063df:	cld    
  4063e0:	aad    0xb2
  4063e2:	push   ecx
  4063e3:	xchg   edx,eax
  4063e4:	out    0xcc,eax
  4063e6:	or     eax,0x8d8bf78f
  4063eb:	stc    
  4063ec:	or     cl,0xdf
  4063ef:	sub    ch,BYTE PTR [edx+0x1fcdc8a]
  4063f5:	fcmovnu st,st(6)
  4063f7:	inc    esp
  4063f8:	sub    dl,dl
  4063fa:	lods   eax,DWORD PTR ds:[esi]
  4063fb:	or     BYTE PTR [edx+0x5b],cl
  4063fe:	data16 daa 
  406400:	adc    al,0xd3
  406402:	mov    ch,0xd7
  406404:	inc    edx
  406405:	inc    esi
  406406:	test   BYTE PTR [ecx+esi*8-0x25149ebe],ch
  40640d:	les    eax,FWORD PTR [esi]
  40640f:	mov    esi,DWORD PTR [edi]
  406411:	xchg   ebp,eax
  406412:	mov    esi,0x51a00a98
  406417:	mov    esi,0xba71bb9
  40641c:	cmp    ch,BYTE PTR [ebx]
  40641e:	jg     0x406444
  406420:	mov    BYTE PTR [eax+0x3fdb6b5d],cl
  406426:	repz sbb eax,0x8e80068
  40642c:	mov    ch,0x62
  40642e:	ror    BYTE PTR [ebp+0x17d4afd1],1
  406434:	push   edi
  406435:	dec    ebx
  406436:	xor    cl,BYTE PTR [ebx+0x25]
  406439:	fsubr  QWORD PTR [ecx]
  40643b:	add    dl,bh
  40643d:	mov    WORD PTR [edx],fs
  40643f:	(bad)  
  406440:	aas    
  406441:	add    eax,0xc80fec55
  406446:	in     eax,0x66
  406448:	outs   dx,DWORD PTR ds:[esi]
  406449:	mov    bh,al
  40644b:	cdq    
  40644c:	ficom  DWORD PTR [eax]
  40644e:	je     0x4064a2
  406450:	push   esi
  406451:	or     al,0x5e
  406453:	jno    0x4063f2
  406455:	ins    BYTE PTR es:[edi],dx
  406456:	aad    0xdd
  406458:	icebp  
  406459:	fcomp  DWORD PTR [ebp-0xd]
  40645c:	jns    0x406453
  40645e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40645f:	jmp    0x57b3f6c6
  406464:	sub    eax,0x5bb8496b
  406469:	jmp    0x4d05fa44
  40646e:	mov    ebp,0x5ca77cee
  406473:	loopne 0x4064d6
  406475:	or     bh,BYTE PTR [ebp+0x9]
  406478:	std    
  406479:	sub    eax,0xfc9bbdbd
  40647e:	pop    esp
  40647f:	bound  ebp,QWORD PTR [edi]
  406481:	clc    
  406482:	and    esp,DWORD PTR [ebp+0x23]
  406485:	jg     0x406469
  406487:	sbb    BYTE PTR [edi+0x750a7054],al
  40648d:	jp     0x4064fa
  40648f:	into   
  406490:	clc    
  406491:	nop
  406492:	jmp    0xcca83b0d
  406497:	cmp    DWORD PTR [ebx],edx
  406499:	scas   al,BYTE PTR es:[edi]
  40649a:	dec    ebx
  40649b:	and    DWORD PTR [eax-0xb],ecx
  40649e:	stos   DWORD PTR es:[edi],eax
  40649f:	mov    bh,0xae
  4064a1:	data16 fstp DWORD PTR [edx+0x384f4524]
  4064a8:	cmp    DWORD PTR [edi+0xc001ff0],edi
  4064ae:	sbb    cl,BYTE PTR [ebx-0x47]
  4064b1:	inc    ecx
  4064b2:	add    esi,edx
  4064b4:	aad    0xe6
  4064b6:	bound  esi,QWORD PTR [esi]
  4064b8:	repz dec esp
  4064ba:	or     al,0xe3
  4064bc:	clc    
  4064bd:	jo     0x40648e
  4064bf:	mov    ecx,DWORD PTR [edi-0x803f90]
  4064c5:	daa    
  4064c6:	call   0xee41:0xb28bbb13
  4064cd:	test   DWORD PTR [esi],esi
  4064cf:	xor    edi,DWORD PTR [ecx+0x60]
  4064d2:	jb     0x406546
  4064d4:	(bad)  
  4064d5:	outs   dx,DWORD PTR ds:[esi]
  4064d6:	inc    ecx
  4064d7:	jmp    0x8be3:0x13110587
  4064de:	add    ebx,DWORD PTR [esi]
  4064e0:	mov    esp,0xa43c3d3f
  4064e5:	inc    ebp
  4064e6:	leave  
  4064e7:	mov    ebx,0x58b6b5c7
  4064ec:	stc    
  4064ed:	pop    es
  4064ee:	mov    ebx,0x3f86e4b0
  4064f3:	(bad)  
  4064f4:	jecxz  0x406509
  4064f6:	out    0x5e,al
  4064f8:	push   edi
  4064f9:	adc    ebp,DWORD PTR [ebx]
  4064fb:	cmp    eax,0xc050fc01
  406500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406501:	sbb    ecx,esi
  406503:	or     al,0x75
  406505:	stos   DWORD PTR es:[edi],eax
  406506:	sub    eax,0x807c9db4
  40650b:	icebp  
  40650c:	jl     0x40652e
  40650e:	ins    BYTE PTR es:[edi],dx
  40650f:	xlat   BYTE PTR ds:[ebx]
  406510:	dec    edx
  406511:	out    dx,al
  406512:	sahf   
  406513:	fst    DWORD PTR [ecx-0x9]
  406516:	fs sub al,0x97
  406519:	cs xchg esp,eax
  40651b:	cmp    eax,0xd4c614eb
  406520:	pop    ebp
  406521:	retf   
  406522:	cmp    ebx,edx
  406524:	das    
  406525:	pslld  mm5,QWORD PTR [esi]
  406528:	test   BYTE PTR [bx+si+0x5a8a],al
  40652d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40652e:	not    BYTE PTR [ecx]
  406530:	jmp    0x7b4e3784
  406535:	cmp    edx,edx
  406537:	jo     0x406552
  406539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40653a:	into   
  40653b:	dec    eax
  40653c:	sub    bl,BYTE PTR gs:[ecx]
  40653f:	loop   0x4064f7
  406541:	int    0x35
  406543:	sub    DWORD PTR [esi+0x366636f3],eax
  406549:	mov    bl,0x2
  40654b:	xchg   edx,eax
  40654c:	push   ebp
  40654d:	add    DWORD PTR [ebp+0x653b06d5],ecx
  406553:	fidivr WORD PTR [esi]
  406555:	bound  edi,QWORD PTR [edx]
  406557:	push   edx
  406558:	test   DWORD PTR [eax+0x73bafe59],0xee8e5ea4
  406562:	mov    dl,0x73
  406564:	mov    ch,bl
  406566:	pusha  
  406567:	les    esi,FWORD PTR [edi]
  406569:	push   eax
  40656a:	and    ebx,DWORD PTR [edi+0x27]
  40656d:	loop   0x406558
  40656f:	pop    cx
  406571:	rol    BYTE PTR [edx+0x52b42889],cl
  406577:	mov    ecx,0x63609140
  40657c:	adc    edi,DWORD PTR ds:[eax-0x44]
  406580:	(bad)  
  406581:	fidiv  DWORD PTR ds:0x4f320e22
  406587:	xor    DWORD PTR [ebx-0x9],ebx
  40658a:	lds    eax,FWORD PTR [ebp+0x31a765ce]
  406590:	mov    eax,ds:0x4b9e0f79
  406595:	and    ebx,DWORD PTR [eax+edi*1]
  406598:	inc    ecx
  406599:	mov    dh,0x94
  40659b:	mov    dl,0xa1
  40659d:	in     al,0x9f
  40659f:	test   BYTE PTR [edx],bl
  4065a1:	(bad)  
  4065a2:	push   eax
  4065a3:	sbb    edi,esi
  4065a5:	into   
  4065a6:	or     al,0x23
  4065a8:	mov    eax,ds:0xa240aa46
  4065ad:	lods   eax,DWORD PTR ds:[esi]
  4065ae:	sbb    cl,BYTE PTR [eax-0x61]
  4065b1:	xchg   BYTE PTR [esp+edx*8],dh
  4065b4:	nop
  4065b5:	and    ah,BYTE PTR [edi-0x19090fb3]
  4065bb:	sbb    al,0xd
  4065bd:	(bad)  
  4065be:	in     al,dx
  4065bf:	push   esi
  4065c0:	dec    ebp
  4065c1:	ret    0x2671
  4065c4:	fsub   st,st(3)
  4065c6:	lea    ecx,ds:0xdf4f54b5
  4065cc:	call   0x936b1dfc
  4065d1:	adc    DWORD PTR [eax-0x3ddb3c5b],esp
  4065d7:	in     eax,dx
  4065d8:	cmp    al,0xf0
  4065da:	mov    ds:0x2a6d9fde,al
  4065df:	mov    edx,DWORD PTR [ebx+edi*2]
  4065e2:	(bad)  
  4065e3:	enter  0xb7b5,0x2c
  4065e7:	push   ss
  4065e8:	loopne 0x40661f
  4065ea:	jae    0x4065a1
  4065ec:	pop    ebx
  4065ed:	cmc    
  4065ee:	sahf   
  4065ef:	scas   eax,DWORD PTR es:[edi]
  4065f0:	cli    
  4065f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f3:	lods   al,BYTE PTR ds:[esi]
  4065f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f5:	mov    edi,DWORD PTR [ecx-0x6b4bb777]
  4065fb:	adc    eax,0x7a18d4c8
  406600:	call   0x2d829cd
  406605:	(bad)
  406609:	or     DWORD PTR [ecx+0x31f6ace8],esi
  40660f:	cmc    
  406610:	inc    ebx
  406611:	sub    edx,DWORD PTR [eax-0x1e3dfe7a]
  406617:	cld    
  406618:	dec    esp
  406619:	xchg   ebp,eax
  40661a:	fst    DWORD PTR [ecx+0x3f598abb]
  406620:	(bad)  
  406622:	cmp    edx,esi
  406624:	stc    
  406625:	pop    ss
  406626:	ja     0x406614
  406628:	shl    BYTE PTR [ecx],1
  40662a:	inc    edx
  40662b:	arpl   WORD PTR [edi+0x2d27a9cf],bp
  406631:	(bad)  
  406632:	lea    ebp,[eax-0x78d31473]
  406638:	sub    al,0xb
  40663a:	xchg   ebp,eax
  40663b:	test   DWORD PTR [ebx],ebx
  40663d:	xlat   BYTE PTR ds:[ebx]
  40663e:	test   DWORD PTR [esp+ebx*2-0x4e],0x168f7064
  406646:	xchg   DWORD PTR [esp+eax*2+0x2af6e751],edi
  40664d:	out    dx,eax
  40664e:	les    edx,FWORD PTR [ebx-0xc588a44]
  406654:	and    DWORD PTR [edi],ebp
  406656:	sub    ebx,DWORD PTR [ebp-0x40]
  406659:	sbb    BYTE PTR [esi+edi*2+0x1c],ah
  40665d:	jns    0x4065fd
  40665f:	std    
  406660:	out    0x1d,al
  406662:	neg    ecx
  406664:	lods   eax,DWORD PTR ds:[esi]
  406665:	and    eax,0xacbde4c5
  40666a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40666b:	(bad)  
  40666d:	sbb    al,0x64
  40666f:	sub    eax,0x97c0ff18
  406674:	xchg   ebp,eax
  406675:	(bad)  [esp+esi*4+0x15]
  406679:	lods   eax,DWORD PTR ds:[esi]
  40667a:	int    0xb2
  40667c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40667d:	dec    edi
  40667e:	enter  0x71d6,0x53
  406682:	jl     0x40669d
  406684:	shl    BYTE PTR [esi+0x6455e1e5],1
  40668a:	in     eax,0xd5
  40668c:	fcom   DWORD PTR [ecx]
  40668e:	add    ebp,DWORD PTR [ebx]
  406690:	push   cs
  406691:	mov    ch,0xff
  406693:	fwait
  406694:	xlat   BYTE PTR ds:[ebx]
  406695:	loope  0x4066d9
  406697:	pop    ss
  406698:	adc    DWORD PTR [edi-0x64580df7],0x70
  40669f:	test   al,0x82
  4066a1:	pushf  
  4066a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a3:	mov    ds:0x1ef0a537,al
  4066a8:	ins    DWORD PTR es:[edi],dx
  4066a9:	stc    
  4066aa:	les    ebp,FWORD PTR [ecx-0x22]
  4066ad:	mov    ss,ebp
  4066af:	aaa    
  4066b0:	jl     0x4066a9
  4066b2:	pop    eax
  4066b3:	jnp    0x4066ac
  4066b5:	repnz test esp,esi
  4066b8:	fadd   st,st(3)
  4066ba:	pop    edi
  4066bb:	icebp  
  4066bc:	lahf   
  4066bd:	lea    ebx,[ecx+0x56e48309]
  4066c3:	xor    ebx,DWORD PTR [ebp+0x71]
  4066c6:	push   es
  4066c7:	mov    cs,ebx
  4066c9:	ins    DWORD PTR es:[edi],dx
  4066ca:	xor    esi,edx
  4066cc:	les    edx,FWORD PTR [edi+0x2]
  4066cf:	inc    esp
  4066d0:	push   ss
  4066d1:	sub    BYTE PTR [edi-0x38],al
  4066d4:	popf   
  4066d5:	stos   DWORD PTR es:[edi],eax
  4066d6:	jno    0x40671a
  4066d8:	pop    ss
  4066d9:	cmp    dl,bh
  4066db:	imul   ecx,eax,0x5e10e224
  4066e1:	rol    DWORD PTR [ecx-0x55133c3],0x85
  4066e8:	mov    al,0x4c
  4066ea:	jecxz  0x406677
  4066ec:	cwde   
  4066ed:	add    bh,BYTE PTR [ebx-0x4c]
  4066f0:	mov    al,ds:0xb61be8f0
  4066f5:	jo     0xde20b3bd
  4066fb:	cmc    
  4066fc:	mov    DWORD PTR [eax],ecx
  4066fe:	pop    eax
  4066ff:	jno    0x4066ee
  406701:	push   edi
  406702:	les    esp,FWORD PTR [edx]
  406704:	fstp   QWORD PTR [ecx-0x29c2ffbb]
  40670a:	cmp    DWORD PTR [esi+0x77c3c1e3],ebp
  406710:	jae    0x4066ca
  406712:	mov    eax,0x9496c609
  406717:	cmp    BYTE PTR [ebx],ch
  406719:	call   0x7fb:0xcf761141
  406720:	jecxz  0x4066cc
  406722:	xor    BYTE PTR [edx],0xce
  406725:	icebp  
  406726:	jp     0x40672f
  406728:	ror    DWORD PTR [edi],1
  40672a:	or     BYTE PTR [ebx+0x3d],dh
  40672d:	xchg   dh,dl
  40672f:	pop    eax
  406730:	add    esp,DWORD PTR [edx+0xd823ba7]
  406736:	in     eax,dx
  406737:	mov    gs,WORD PTR [eax+0x76]
  40673a:	pop    eax
  40673b:	add    esp,DWORD PTR ds:0x7462f97d
  406741:	loope  0x4067ba
  406743:	mov    dh,0x2a
  406745:	push   esi
  406746:	popf   
  406747:	cmp    DWORD PTR [edx],esp
  406749:	pusha  
  40674a:	mov    ebx,0x3b39b5fb
  40674f:	lock sbb edi,DWORD PTR [esi+0x13]
  406753:	and    DWORD PTR [ebp+0x43],edx
  406756:	ins    DWORD PTR es:[edi],dx
  406757:	xor    eax,0x4bfc6f34
  40675c:	into   
  40675d:	outs   dx,BYTE PTR ds:[esi]
  40675e:	sbb    al,0x32
  406760:	ffree  st(2)
  406762:	xchg   edx,eax
  406763:	dec    ebp
  406764:	(bad)  
  406765:	pop    ecx
  406766:	jb     0x4066f9
  406768:	pop    ebx
  406769:	out    0xe,eax
  40676b:	xchg   esp,eax
  40676c:	fs add ebp,ebx
  40676f:	xor    DWORD PTR [edi-0x235c38c1],eax
  406775:	cwde   
  406776:	mov    esi,0xa9d60199
  40677b:	inc    edi
  40677c:	adc    DWORD PTR [esi],ecx
  40677e:	jge    0x406758
  406780:	mov    DWORD PTR [ebp+eax*8+0x76],ebx
  406784:	jge    0x406788
  406786:	loop   0x40672c
  406788:	fdivr  DWORD PTR [ebx-0x32]
  40678b:	das    
  40678c:	add    DWORD PTR [ecx],eax
  40678e:	dec    eax
  40678f:	cmp    BYTE PTR cs:[ebx],al
  406792:	pop    ebp
  406793:	test   DWORD PTR [eax-0x14],ecx
  406796:	jns    0x40672f
  406798:	mov    ch,0xf0
  40679a:	mov    bh,BYTE PTR [edx+0x53]
  40679d:	and    eax,DWORD PTR [ecx]
  40679f:	daa    
  4067a0:	fsubr  DWORD PTR ds:0x7c6d3af2
  4067a6:	lock cwde 
  4067a8:	xor    ah,BYTE PTR [esi-0x6a04a254]
  4067ae:	shl    eax,0xfa
  4067b1:	jno    0x40681d
  4067b3:	imul   edi,DWORD PTR cs:[edi+0x4abd781],0xdf9c1f42
  4067be:	lods   eax,DWORD PTR ds:[esi]
  4067bf:	mov    esp,0x2ebc4b23
  4067c4:	scas   al,BYTE PTR es:[edi]
  4067c5:	rol    DWORD PTR [edx+0x1d],0x24
  4067c9:	imul   ebp,DWORD PTR [esi],0xfffffffb
  4067cc:	inc    ecx
  4067cd:	fisttp DWORD PTR [ecx+0x5d]
  4067d0:	cmovb  esi,DWORD PTR [eax+0x6a]
  4067d4:	cdq    
  4067d5:	adc    eax,0xe9237915
  4067da:	ror    edi,1
  4067dc:	push   ebp
  4067dd:	daa    
  4067de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067df:	enter  0xcf62,0x57
  4067e3:	mov    al,0x5c
  4067e5:	mov    cl,0x82
  4067e7:	mov    edi,0xa648cdf4
  4067ec:	pop    ss
  4067ed:	outs   dx,BYTE PTR ds:[esi]
  4067ee:	test   eax,0x4dc13ea4
  4067f3:	int3   
  4067f4:	cmp    BYTE PTR [edx+edx*4-0x52],cl
  4067f8:	sbb    bl,ch
  4067fa:	rcl    DWORD PTR [esi-0x3b84b6c],1
  406800:	leave  
  406801:	outs   dx,DWORD PTR ds:[esi]
  406802:	dec    esi
  406803:	xlat   BYTE PTR ds:[ebx]
  406804:	arpl   WORD PTR [ecx+eax*4+0x159b0c83],bp
  40680b:	shl    DWORD PTR [eax+0x5],cl
  40680e:	inc    ebx
  40680f:	adc    eax,0x5846aeb7
  406814:	and    eax,0x286d2b7a
  406819:	inc    ebp
  40681a:	pusha  
  40681b:	ja     0x4067af
  40681d:	jmp    0x40682a
  40681f:	fsubr  DWORD PTR [esi]
  406821:	jg     0x406829
  406823:	call   0x6874995d
  406828:	mov    al,0xf1
  40682a:	ror    bh,cl
  40682c:	adc    BYTE PTR [edi-0x666b1fdc],al
  406832:	in     eax,0x2
  406834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406835:	in     eax,dx
  406836:	jge    0x406898
  406838:	das    
  406839:	fwait
  40683a:	pop    ebp
  40683b:	or     esi,DWORD PTR [ebp+0x5476a3ed]
  406841:	ja     0x406861
  406843:	addr16 mov esi,0x7fd4d25a
  406849:	ins    DWORD PTR es:[edi],dx
  40684a:	les    esp,FWORD PTR [esi-0x3b]
  40684d:	ins    BYTE PTR es:[edi],dx
  40684e:	sar    ah,0x7e
  406851:	stos   BYTE PTR es:[edi],al
  406852:	dec    ebp
  406853:	inc    esi
  406854:	pop    ebx
  406855:	js     0x40689b
  406857:	stos   DWORD PTR es:[edi],eax
  406858:	pop    ecx
  406859:	jne    0x40683f
  40685b:	xor    al,0xe8
  40685d:	aad    0xc1
  40685f:	ret    
  406860:	(bad)  
  406861:	fisttp WORD PTR [eax-0x77db5402]
  406867:	outs   dx,DWORD PTR ds:[esi]
  406868:	sbb    eax,0xe9fe8783
  40686d:	in     eax,0x7b
  40686f:	fild   DWORD PTR [eax-0xd]
  406872:	aas    
  406873:	mov    ebp,0x72f709be
  406878:	sbb    ch,BYTE PTR [ebp-0xa]
  40687b:	add    BYTE PTR [ecx+ecx*8-0x5f],0x43
  406880:	(bad)  
  406881:	(bad)  
  406882:	push   es
  406883:	inc    esi
  406884:	push   ss
  406885:	pop    es
  406886:	cld    
  406887:	and    ebx,DWORD PTR [eax]
  406889:	inc    eax
  40688a:	dec    ebp
  40688b:	out    0xd0,eax
  40688d:	fidivr WORD PTR [ecx]
  40688f:	mov    ch,0x3a
  406891:	int3   
  406892:	ss out dx,eax
  406894:	or     cl,dl
  406896:	or     DWORD PTR ds:0x7d9d78ac,0x19
  40689d:	push   eax
  40689e:	mov    ds:0x65e831b4,eax
  4068a3:	imul   eax,DWORD PTR [esi-0x63b4bde],0xffffffa7
  4068aa:	les    ecx,FWORD PTR [ecx+esi*2-0x41]
  4068ae:	fisttp WORD PTR [edi+esi*4+0x6526418e]
  4068b5:	popf   
  4068b6:	jnp    0x406891
  4068b8:	ds das 
  4068ba:	mov    bp,0xe580
  4068be:	dec    edi
  4068bf:	mov    ah,0xf0
  4068c1:	xchg   ebx,eax
  4068c2:	jl     0x406865
  4068c4:	mov    cl,0x4
  4068c6:	aaa    
  4068c7:	mov    al,ds:0x23ab1544
  4068cc:	and    bl,BYTE PTR [ecx+0x67]
  4068cf:	xchg   ebp,eax
  4068d0:	ins    BYTE PTR es:[edi],dx
  4068d1:	mov    bh,0xaf
  4068d3:	loopne 0x40691b
  4068d5:	popa   
  4068d6:	call   0x449a:0x7d167b09
  4068dd:	sub    BYTE PTR ds:0x361fa6ce,bl
  4068e3:	lods   al,BYTE PTR ds:[esi]
  4068e4:	push   DWORD PTR [edx+0x61]
  4068e7:	popa   
  4068e8:	sub    eax,DWORD PTR [ebx-0x76]
  4068eb:	iret   
  4068ec:	(bad)  
  4068ee:	cmp    ebx,esi
  4068f0:	adc    bl,BYTE PTR [ebx+0x27fd1c4b]
  4068f6:	or     al,BYTE PTR [ebx]
  4068f8:	add    esi,DWORD PTR [ecx+eiz*2]
  4068fb:	sbb    al,0x52
  4068fd:	dec    esi
  4068fe:	inc    edx
  4068ff:	rcr    BYTE PTR [ebx+0x2219f5b0],1
  406905:	inc    esp
  406906:	and    dh,BYTE PTR [eax-0x11]
  406909:	or     esp,DWORD PTR [esp+esi*1+0x65a6e69a]
  406910:	or     edi,DWORD PTR [edi+0x27e3e8f2]
  406916:	dec    edi
  406917:	addr16 push 0x3f7afee0
  40691d:	repnz inc edi
  40691f:	imul   ebx,DWORD PTR [ebx],0xffffffd6
  406922:	sub    ecx,DWORD PTR [eax+0x50]
  406925:	stos   DWORD PTR es:[edi],eax
  406926:	lock pusha 
  406928:	test   ch,ch
  40692a:	sar    BYTE PTR [edi],0x2d
  40692d:	ficom  WORD PTR [esi]
  40692f:	pushf  
  406930:	dec    ecx
  406931:	repnz ror DWORD PTR [ebx-0x2af7ab3d],cl
  406938:	push   esp
  406939:	hlt    
  40693a:	push   cs
  40693b:	loop   0x40691b
  40693d:	inc    esi
  40693e:	out    dx,al
  40693f:	mov    dh,BYTE PTR [ebp-0x35]
  406942:	mov    cl,0xa8
  406944:	fisubr WORD PTR [edi+esi*1]
  406947:	add    esp,ebp
  406949:	dec    DWORD PTR [edx-0x76]
  40694c:	inc    eax
  40694d:	sbb    BYTE PTR [ecx+ebx*1],bl
  406950:	in     eax,dx
  406951:	es and al,0x45
  406954:	jge    0x40693d
  406956:	gs pop ss
  406958:	jecxz  0x40691a
  40695a:	ins    DWORD PTR es:[edi],dx
  40695b:	stc    
  40695c:	jnp    0x406980
  40695e:	ja     0x4069a0
  406960:	push   edi
  406961:	rcl    BYTE PTR [esi-0x6cb15fd3],0xe7
  406968:	mov    dl,0x97
  40696a:	das    
  40696b:	or     al,BYTE PTR [esi+0x5b]
  40696e:	push   ds
  40696f:	sbb    al,0x9b
  406971:	scas   eax,DWORD PTR es:[edi]
  406972:	xchg   al,ch
  406974:	adc    eax,0x6c92c112
  406979:	add    al,0xc5
  40697b:	std    
  40697c:	test   eax,0xd2cb726f
  406981:	pop    edi
  406982:	push   esi
  406983:	push   ecx
  406984:	cdq    
  406985:	in     eax,0xec
  406987:	xchg   ecx,eax
  406988:	jl     0x406949
  40698a:	add    ebp,esi
  40698c:	pop    ds
  40698d:	xor    cl,BYTE PTR [eax]
  40698f:	and    BYTE PTR [eax-0xa],0xbb
  406993:	call   0x248e08a3
  406998:	mov    al,ds:0x1304c08c
  40699d:	jg     0x40697d
  40699f:	inc    ebp
  4069a0:	dec    eax
  4069a1:	enter  0x88a2,0xa6
  4069a5:	mov    edx,0xea8d4de4
  4069aa:	cmp    ebx,DWORD PTR [esi]
  4069ac:	xchg   edx,eax
  4069ad:	stc    
  4069ae:	in     al,dx
  4069af:	cmp    BYTE PTR [esi],ch
  4069b1:	jge    0x4069f5
  4069b3:	sbb    al,0xb8
  4069b5:	mov    DWORD PTR [edi],ebx
  4069b7:	push   ds
  4069b8:	xor    eax,0x2ab533a9
  4069bd:	push   0x4b
  4069bf:	xor    esp,DWORD PTR [ebx]
  4069c1:	mov    ebp,0x997f2178
  4069c6:	push   esi
  4069c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c8:	add    al,0x2
  4069ca:	pop    ebp
  4069cb:	call   0xdb0e2f56
  4069d0:	pop    eax
  4069d1:	mov    al,ds:0x5ae2eac
  4069d6:	imul   edi,DWORD PTR [ebp-0x51],0xaefce171
  4069dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069de:	repnz dec ecx
  4069e0:	push   ds
  4069e1:	fnstenv ds:0x64509235
  4069e7:	or     bl,ch
  4069e9:	xchg   ebp,eax
  4069ea:	(bad)  
  4069eb:	clc    
  4069ec:	aam    0xdb
  4069ee:	dec    esp
  4069ef:	fcmovne st,st(6)
  4069f1:	push   ss
  4069f2:	clc    
  4069f3:	mov    cl,0xc8
  4069f5:	loopne 0x406a0e
  4069f7:	sbb    al,0x62
  4069f9:	dec    ecx
  4069fa:	sub    esp,DWORD PTR [edi]
  4069fc:	shl    BYTE PTR [esi],cl
  4069fe:	or     al,0x36
  406a00:	cmp    esi,DWORD PTR [edx-0x1e14c20c]
  406a06:	jle    0x406a20
  406a08:	or     al,0x3d
  406a0a:	xchg   edi,eax
  406a0b:	and    eax,0x71f88f3e
  406a10:	mov    BYTE PTR [eax],dl
  406a12:	inc    edi
  406a13:	neg    DWORD PTR [ebx+edi*2-0x59b2c037]
  406a1a:	popa   
  406a1b:	popf   
  406a1c:	and    al,0xd8
  406a1e:	mov    cl,0x30
  406a20:	xchg   DWORD PTR [edi],eax
  406a22:	jle    0x4069b6
  406a24:	cli    
  406a25:	sbb    eax,0x80a8e022
  406a2a:	stc    
  406a2b:	dec    eax
  406a2c:	jae    0x406a5f
  406a2e:	ret    0xd7b4
  406a31:	(bad)  
  406a32:	loopne 0x406a37
  406a34:	xchg   edx,eax
  406a35:	or     al,0x2c
  406a37:	push   edi
  406a38:	inc    ebp
  406a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a3a:	push   es
  406a3b:	clc    
  406a3c:	mov    cl,0xd2
  406a3e:	mov    cl,0xc5
  406a40:	sub    edi,DWORD PTR [edx+0x2793a554]
  406a46:	inc    eax
  406a47:	aam    0x48
  406a49:	dec    ebp
  406a4a:	xor    eax,0x4054cc7d
  406a4f:	shl    bl,1
  406a51:	call   0xe596:0x79d9f6db
  406a58:	rcl    BYTE PTR ds:0x23382a21,0xcb
  406a60:	push   esi
  406a61:	add    al,0x96
  406a63:	cmc    
  406a64:	mov    ecx,0x747176e3
  406a69:	jbe    0x406a53
  406a6b:	not    bl
  406a6d:	inc    esi
  406a6e:	push   esp
  406a6f:	scas   eax,DWORD PTR es:[edi]
  406a70:	stc    
  406a71:	shr    BYTE PTR [ecx-0xd],1
  406a74:	icebp  
  406a75:	jb     0x406a28
  406a77:	stos   DWORD PTR es:[edi],eax
  406a78:	cmp    eax,0x158b74f3
  406a7d:	out    0xe,eax
  406a7f:	fsub   st(4),st
  406a81:	push   ss
  406a82:	mov    ebx,ebp
  406a84:	mov    BYTE PTR [ecx-0x3b],dh
  406a87:	fwait
  406a88:	mov    edi,0xc132d1d5
  406a8d:	cmp    eax,0x9e72198b
  406a92:	adc    dl,ah
  406a94:	clc    
  406a95:	outs   dx,DWORD PTR ds:[esi]
  406a96:	inc    BYTE PTR [esi]
  406a98:	mov    ah,0x33
  406a9a:	xchg   BYTE PTR [ebp+0x68],ch
  406a9d:	les    ebx,FWORD PTR [ebx+ebx*1-0x1e]
  406aa1:	call   0x5db2:0xbf5414e2
  406aa8:	mov    edi,0xb4c1fdc7
  406aad:	bound  ecx,QWORD PTR [ecx-0x72aaaa45]
  406ab3:	push   esp
  406ab4:	pop    esi
  406ab5:	shr    DWORD PTR [esi],0xa7
  406ab8:	dec    edx
  406ab9:	les    esi,FWORD PTR [esi-0xeb4c5f3]
  406abf:	add    eax,0x76012d2f
  406ac4:	xchg   DWORD PTR [esi-0x199d9206],ebp
  406aca:	sar    BYTE PTR [eax-0x51],cl
  406acd:	mov    bl,0x29
  406acf:	cs fs cmp al,0x97
  406ad3:	cmc    
  406ad4:	push   es
  406ad5:	adc    DWORD PTR [eax-0x7c202542],ecx
  406adb:	jae    0x406b25
  406add:	cdq    
  406ade:	sbb    ah,bl
  406ae0:	lahf   
  406ae1:	jno    0x406b4b
  406ae3:	xor    eax,0x6476dc
  406ae8:	sbb    ebp,ebp
  406aea:	or     eax,0xca01fa98
  406aef:	dec    esi
  406af0:	xor    eax,0x556b333f
  406af5:	in     eax,dx
  406af6:	fsubr  DWORD PTR [ebp+0x2e04182f]
  406afc:	fbstp  TBYTE PTR [esi]
  406afe:	push   edi
  406aff:	sub    eax,0x9ae4e83f
  406b04:	std    
  406b05:	aad    0x1d
  406b07:	inc    eax
  406b08:	repz (bad) 
  406b0a:	ins    BYTE PTR es:[edi],dx
  406b0b:	dec    eax
  406b0c:	shl    cl,cl
  406b0e:	dec    esp
  406b0f:	mov    ch,0xca
  406b11:	das    
  406b12:	push   esp
  406b13:	cdq    
  406b14:	scas   eax,DWORD PTR es:[edi]
  406b15:	hlt    
  406b16:	call   0x10d46739
  406b1b:	sbb    DWORD PTR [edx+0x496a41df],edi
  406b21:	call   0x7dabdd91
  406b26:	inc    ebp
  406b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b28:	xchg   ebp,eax
  406b29:	pusha  
  406b2a:	sub    DWORD PTR [esi-0x31cb054a],ecx
  406b30:	xchg   ebp,eax
  406b31:	loop   0x406ade
  406b33:	shl    BYTE PTR [eax-0x422f1acc],1
  406b39:	xchg   ebx,eax
  406b3a:	add    DWORD PTR [edi+0x58],0xffffffa9
  406b3e:	xchg   ebp,eax
  406b3f:	stos   DWORD PTR es:[edi],eax
  406b40:	pop    ecx
  406b41:	add    dl,BYTE PTR [ebp+0x66]
  406b44:	mov    edi,0xd95be162
  406b49:	sbb    BYTE PTR [edx-0x44],ch
  406b4c:	call   0x86e276b0
  406b51:	lods   eax,DWORD PTR ds:[esi]
  406b52:	dec    ebx
  406b53:	scas   al,BYTE PTR es:[edi]
  406b54:	push   esi
  406b55:	lods   al,BYTE PTR ds:[esi]
  406b56:	sub    DWORD PTR [eax+eiz*4+0x5b],edi
  406b5a:	pop    ebx
  406b5b:	lahf   
  406b5c:	icebp  
  406b5d:	jno    0x406b87
  406b5f:	sbb    DWORD PTR [ecx],ebp
  406b61:	add    ecx,eax
  406b63:	xchg   esi,eax
  406b64:	fbstp  TBYTE PTR [eax-0x3d]
  406b67:	mov    eax,ds:0xd2cf9371
  406b6c:	stos   BYTE PTR es:[edi],al
  406b6d:	(bad)  
  406b6e:	cmp    al,0x9e
  406b70:	mov    esi,0x22345241
  406b75:	mov    ds:0x3c789867,eax
  406b7a:	push   eax
  406b7b:	jecxz  0x406b37
  406b7d:	xchg   esi,eax
  406b7e:	mov    bh,0x86
  406b80:	push   ds
  406b81:	out    dx,al
  406b82:	jecxz  0x406b4a
  406b84:	push   cs
  406b85:	push   cs
  406b86:	fs imul edx,edx,0x40e1279d
  406b8d:	je     0x406b2b
  406b8f:	dec    ecx
  406b90:	mov    al,BYTE PTR [eax-0x40]
  406b93:	dec    esi
  406b94:	lods   al,BYTE PTR ds:[esi]
  406b95:	std    
  406b96:	sbb    ebp,DWORD PTR [ebx+0x7c]
  406b99:	push   ecx
  406b9a:	bound  ebx,QWORD PTR [esi]
  406b9c:	mov    al,0xe9
  406b9e:	js     0x406bea
  406ba0:	jmp    0x16fa:0xfaaf2823
  406ba7:	and    ebp,ebx
  406ba9:	pusha  
  406baa:	ret    
  406bab:	cmp    BYTE PTR [eax-0x6b],ah
  406bae:	loop   0x406c00
  406bb0:	adc    DWORD PTR [esi+0x29],0xffffffb2
  406bb4:	jmp    0x9e02:0xddd48f3c
  406bbb:	stos   DWORD PTR es:[edi],eax
  406bbc:	xor    eax,0xd62b80a7
  406bc1:	stc    
  406bc2:	ja     0x406ba9
  406bc4:	out    dx,eax
  406bc5:	ja     0x406bd4
  406bc7:	jae    0x406bc4
  406bc9:	sub    eax,0xcec6b66c
  406bce:	outs   dx,DWORD PTR ds:[esi]
  406bcf:	loopne 0x406b81
  406bd1:	stos   DWORD PTR es:[edi],eax
  406bd2:	ret    
  406bd3:	sbb    dl,BYTE PTR [eax+eax*8+0x1e54514c]
  406bda:	sbb    cl,ch
  406bdc:	inc    ebx
  406bdd:	mov    ah,0x33
  406bdf:	inc    ebx
  406be0:	mov    DWORD PTR [esi+0x1b],esp
  406be3:	mov    BYTE PTR gs:[ecx+eax*4+0x199829bd],dl
  406beb:	inc    edx
  406bec:	mov    eax,ds:0x3ab132cf
  406bf1:	gs jp  0x406c0d
  406bf4:	jg     0x406c66
  406bf6:	std    
  406bf7:	and    al,0xc7
  406bf9:	adc    bh,BYTE PTR [eax-0x2561f2b8]
  406bff:	inc    ecx
  406c00:	popf   
  406c01:	mov    bh,0x92
  406c03:	mov    ebp,0x9c656b05
  406c08:	push   es
  406c09:	out    0xa7,eax
  406c0b:	les    esi,FWORD PTR [edx]
  406c0d:	(bad)
  406c11:	sbb    eax,0xc5616c7
  406c16:	in     al,0xec
  406c18:	mov    eax,0x16ebe2c
  406c1d:	sub    ah,BYTE PTR [edx]
  406c1f:	mov    esi,0x5bdadb4f
  406c24:	jp     0x406beb
  406c26:	fidiv  WORD PTR [edx-0x5d25821c]
  406c2c:	or     bl,bh
  406c2e:	push   edx
  406c2f:	jp     0x406c26
  406c31:	adc    BYTE PTR [edi-0xc],dl
  406c34:	mov    cl,0x8a
  406c36:	mov    esi,0x6825c766
  406c3b:	aam    0x3f
  406c3d:	out    dx,al
  406c3e:	or     ecx,edi
  406c40:	cmp    eax,0x48a7e74e
  406c45:	jbe    0x406bf8
  406c47:	scas   eax,DWORD PTR es:[edi]
  406c48:	jle    0x406cb9
  406c4a:	jg     0x406c19
  406c4c:	aas    
  406c4d:	push   ds
  406c4e:	lea    esi,[edx+0x46]
  406c51:	cs inc eax
  406c53:	aam    0x8d
  406c55:	inc    ecx
  406c56:	dec    esi
  406c57:	add    eax,0xa2300929
  406c5c:	call   0xf72c59ab
  406c61:	jp     0x406c9d
  406c63:	or     al,BYTE PTR [ecx-0x5e]
  406c66:	push   0xb75434c1
  406c6b:	pusha  
  406c6c:	fwait
  406c6d:	jmp    FWORD PTR [esi+0x5961b2cb]
  406c73:	pop    DWORD PTR ds:0x78f46810
  406c79:	ficom  WORD PTR [ebp+0x56fd3f25]
  406c7f:	mov    ecx,0xb88ce807
  406c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c85:	rcr    ebx,cl
  406c87:	adc    eax,0x5e1164dd
  406c8c:	mov    ecx,0xb1b549e1
  406c91:	rep lods al,BYTE PTR ds:[esi]
  406c93:	mov    ebp,0x66811c9f
  406c98:	(bad)  
  406c99:	repnz (bad) [eax+0x34]
  406c9d:	cmp    BYTE PTR [ecx+0x612a2152],al
  406ca3:	pop    ds
  406ca4:	rcr    dl,1
  406ca6:	adc    ebp,DWORD PTR fs:[ecx-0x44b3ccac]
  406cad:	sbb    eax,0x9c564973
  406cb2:	xlat   BYTE PTR ds:[ebx]
  406cb3:	imul   esp,DWORD PTR [esi],0xffffffc4
  406cb6:	adc    al,dh
  406cb8:	neg    esp
  406cba:	pop    eax
  406cbb:	xor    cl,BYTE PTR [eax+0x466d40c]
  406cc1:	xchg   esp,eax
  406cc2:	cwde   
  406cc3:	out    0x56,al
  406cc5:	dec    esi
  406cc6:	dec    edi
  406cc7:	test   DWORD PTR [eax],edx
  406cc9:	loop   0x406c9f
  406ccb:	xchg   ebp,eax
  406ccc:	out    0xfb,al
  406cce:	aam    0x97
  406cd0:	in     al,0x7a
  406cd2:	popa   
  406cd3:	xor    edx,edi
  406cd5:	les    ebp,FWORD PTR [edi]
  406cd7:	outs   dx,BYTE PTR ds:[esi]
  406cd8:	adc    BYTE PTR ss:[edx],bl
  406cdb:	push   0x5f
  406cdd:	jmp    0x406cbc
  406cdf:	sbb    ebp,edi
  406ce1:	imul   ebx,DWORD PTR [ebp-0x1c],0x31
  406ce5:	xchg   edx,eax
  406ce6:	out    dx,al
  406ce7:	arpl   ax,ax
  406ce9:	test   al,0x72
  406ceb:	mov    BYTE PTR [esi],bl
  406ced:	xchg   BYTE PTR [eax],bh
  406cef:	lods   eax,DWORD PTR ds:[esi]
  406cf0:	push   ebp
  406cf1:	lahf   
  406cf2:	push   ss
  406cf3:	in     al,dx
  406cf4:	xchg   edx,eax
  406cf5:	xor    BYTE PTR [esi],cl
  406cf7:	sub    ebx,esi
  406cf9:	cmp    DWORD PTR [ecx-0x70c3e85d],eax
  406cff:	cld    
  406d00:	inc    edx
  406d01:	test   al,0x27
  406d03:	jg     0x406d14
  406d05:	xor    esi,ebp
  406d07:	cmp    ebp,DWORD PTR [eax+0x73c9e17b]
  406d0d:	mov    ax,ds:0x555b0be7
  406d13:	inc    esi
  406d14:	jge    0x406cda
  406d16:	pop    ecx
  406d17:	sub    eax,0x65f316a8
  406d1c:	mov    ch,0xc2
  406d1e:	loopne 0x406d6e
  406d20:	and    DWORD PTR [edx+0x1146c272],0xffffffbb
  406d27:	push   0x75dc9d17
  406d2c:	sbb    eax,0xc03f537
  406d31:	out    dx,al
  406d32:	rcl    DWORD PTR [ecx-0x3c497596],0x95
  406d39:	cli    
  406d3a:	pop    eax
  406d3b:	std    
  406d3c:	loop   0x406ced
  406d3e:	mov    DWORD PTR [edx*1-0x23a11e5d],ebp
  406d45:	(bad)  
  406d46:	mov    al,ds:0x9b6da177
  406d4b:	and    ebx,DWORD PTR [esi-0x74c79581]
  406d51:	les    ebx,FWORD PTR cs:[ecx-0x20]
  406d55:	sbb    al,BYTE PTR [esi-0xc671802]
  406d5b:	mov    BYTE PTR ds:0x576b704e,ch
  406d61:	pop    DWORD PTR [esi+edi*8-0x7de6cce7]
  406d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d69:	push   es
  406d6a:	add    eax,0xfab5ee9f
  406d6f:	and    eax,DWORD PTR [ebp-0x709ad632]
  406d75:	lods   al,BYTE PTR ds:[esi]
  406d76:	mov    ah,0x86
  406d78:	fiadd  DWORD PTR [esi+0x49]
  406d7b:	jbe    0x406d23
  406d7d:	loop   0x406d83
  406d7f:	adc    esp,DWORD PTR [esi-0x58]
  406d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d83:	js     0x406d17
  406d85:	jp     0x406d08
  406d87:	push   ecx
  406d88:	mov    WORD PTR [ecx],ds
  406d8a:	sub    ecx,DWORD PTR [ebx+0x40]
  406d8d:	loop   0x406db9
  406d8f:	xor    ch,al
  406d91:	or     BYTE PTR ds:0xa2b009db,bl
  406d97:	and    eax,0x2e2c9b0a
  406d9c:	retf   
  406d9d:	xor    al,0x8c
  406d9f:	mov    bl,0x3
  406da1:	inc    edx
  406da2:	lods   eax,DWORD PTR ds:[esi]
  406da3:	scas   eax,DWORD PTR es:[edi]
  406da4:	push   ss
  406da5:	and    eax,0x7e2a40cb
  406daa:	cmc    
  406dab:	inc    edi
  406dac:	into   
  406dad:	jmp    0x98c10cd1
  406db2:	enter  0x1710,0x5a
  406db6:	dec    edi
  406db7:	loope  0x406e0d
  406db9:	mov    esi,0x657302aa
  406dbe:	adc    al,0xb3
  406dc0:	iret   
  406dc1:	pop    es
  406dc2:	cmp    dl,BYTE PTR [ebx+0x14768731]
  406dc8:	pusha  
  406dc9:	(bad)  
  406dca:	iret   
  406dcb:	fcomp  st(2)
  406dcd:	dec    ecx
  406dce:	jb     0x406d76
  406dd0:	outs   dx,DWORD PTR ds:[esi]
  406dd1:	shl    DWORD PTR [edi-0x2918668c],cl
  406dd7:	cmp    DWORD PTR [edx-0x25657df0],esp
  406ddd:	dec    eax
  406dde:	(bad)  
  406ddf:	popf   
  406de0:	fld    DWORD PTR [esi+0x3527ed4d]
  406de6:	adc    ah,BYTE PTR [ebp-0x49]
  406de9:	aas    
  406dea:	pop    edx
  406deb:	fistp  WORD PTR ds:0xcc039400
  406df1:	rcr    DWORD PTR [esi],1
  406df3:	or     al,0x38
  406df5:	stos   DWORD PTR es:[edi],eax
  406df6:	hlt    
  406df7:	sub    ah,BYTE PTR [esi]
  406df9:	push   es
  406dfa:	icebp  
  406dfb:	sub    dh,BYTE PTR [esp+eax*1+0xd4d076a]
  406e02:	inc    esi
  406e03:	int    0x78
  406e05:	arpl   WORD PTR [ecx],cx
  406e07:	(bad)  
  406e08:	imul   esp,DWORD PTR [edi+0x77e71e0b],0xffffffd2
  406e0f:	ja     0x406e57
  406e11:	lods   eax,DWORD PTR ds:[esi]
  406e12:	adc    al,0x7
  406e14:	gs jbe 0x406dd7
  406e17:	fwait
  406e18:	aaa    
  406e19:	retf   
  406e1a:	add    BYTE PTR [ecx-0x18a2e53],cl
  406e20:	jbe    0x406de3
  406e22:	mov    bl,0x79
  406e24:	hlt    
  406e25:	shr    BYTE PTR ds:[esi],1
  406e28:	jle    0x406dcb
  406e2a:	jl     0x406db3
  406e2c:	mov    dl,0x6c
  406e2e:	aaa    
  406e2f:	sub    ah,cl
  406e31:	(bad)  
  406e32:	xor    bh,BYTE PTR [ebx+eiz*1-0x62]
  406e36:	pusha  
  406e37:	mov    bl,0x7
  406e39:	out    dx,eax
  406e3a:	push   ss
  406e3b:	pop    eax
  406e3c:	mov    WORD PTR [esi-0x6f3a15f],es
  406e42:	mov    edi,0x794577f1
  406e47:	test   BYTE PTR [ecx+edx*8-0x610975be],al
  406e4e:	lahf   
  406e4f:	jcxz   0x406dd5
  406e52:	inc    eax
  406e53:	mov    al,0x38
  406e55:	and    esi,DWORD PTR [ecx-0x68]
  406e58:	cmp    BYTE PTR [ecx],al
  406e5a:	ror    BYTE PTR [ebx],0xf7
  406e5d:	mov    eax,ds:0xe5770e6d
  406e62:	aas    
  406e63:	loopne 0x406ed6
  406e65:	adc    edx,esi
  406e67:	xlat   BYTE PTR ds:[ebx]
  406e68:	sahf   
  406e69:	or     esi,DWORD PTR [esi]
  406e6b:	dec    ecx
  406e6c:	sbb    ebx,DWORD PTR [esi]
  406e6e:	xchg   esp,eax
  406e6f:	outs   dx,DWORD PTR ds:[esi]
  406e70:	and    al,0xbf
  406e72:	cwde   
  406e73:	in     al,0x51
  406e75:	push   edi
  406e76:	jl     0x406e20
  406e78:	(bad)  
  406e79:	and    BYTE PTR [eax+0x1f25c07b],ch
  406e7f:	adc    BYTE PTR [esi-0x1d54d4af],al
  406e85:	adc    BYTE PTR [ecx+0x64da9e28],ch
  406e8b:	dec    edi
  406e8c:	sub    BYTE PTR [edi+eax*4+0x5d817764],ah
  406e93:	loop   0x406e22
  406e95:	in     al,dx
  406e96:	data16 (bad) 
  406e98:	mov    ds:0x2c1edfd1,eax
  406e9d:	mov    bl,0x85
  406e9f:	inc    ebx
  406ea0:	sub    edi,DWORD PTR [eax+0x446ddad0]
  406ea6:	ins    BYTE PTR es:[edi],dx
  406ea7:	rol    BYTE PTR [ebx],cl
  406ea9:	xchg   edx,eax
  406eaa:	inc    ecx
  406eab:	das    
  406eac:	xchg   edx,eax
  406ead:	in     al,0x5d
  406eaf:	jnp    0x406e89
  406eb1:	loop   0x406f18
  406eb3:	jns    0x406e88
  406eb5:	sub    al,0xbd
  406eb7:	add    eax,0x98525607
  406ebc:	pop    es
  406ebd:	rol    ch,cl
  406ebf:	cwde   
  406ec0:	addr16 add eax,0x723f14da
  406ec6:	mov    DWORD PTR [edi-0x24],0x58ae5cbb
  406ecd:	sub    DWORD PTR [edx-0x53],eax
  406ed0:	jecxz  0x406e6b
  406ed2:	sub    eax,0x3569c409
  406ed7:	test   al,0x68
  406ed9:	out    dx,eax
  406eda:	rcr    BYTE PTR [esi],cl
  406edc:	ret    
  406edd:	dec    ebx
  406ede:	das    
  406edf:	mov    WORD PTR [edi-0x61],ds
  406ee2:	shl    BYTE PTR [ebx+ecx*8],cl
  406ee5:	test   eax,0x3bcf9d15
  406eea:	push   edi
  406eeb:	pop    ss
  406eec:	pop    edx
  406eed:	xor    eax,0x6e6ce9d1
  406ef2:	pop    ss
  406ef3:	dec    esi
  406ef4:	xor    eax,0x84e01aab
  406ef9:	ds into 
  406efb:	sub    ebx,ecx
  406efd:	pushf  
  406efe:	cmp    eax,0x37756aa0
  406f03:	dec    edx
  406f04:	add    al,BYTE PTR [edi]
  406f06:	pushf  
  406f07:	(bad)  
  406f08:	lods   eax,DWORD PTR ds:[esi]
  406f09:	or     dh,dl
  406f0b:	retf   0x4644
  406f0e:	mov    db7,edi
  406f11:	scas   eax,DWORD PTR es:[edi]
  406f12:	fldenv [esi+0x35c5d580]
  406f18:	leave  
  406f19:	sahf   
  406f1a:	hlt    
  406f1b:	inc    esp
  406f1c:	mov    esp,0x631e646a
  406f21:	fs gs inc ebx
  406f24:	data16 daa 
  406f26:	xor    DWORD PTR [ebx],0x51703748
  406f2c:	mov    cl,0xf7
  406f2e:	push   ds
  406f2f:	jp     0x406f53
  406f31:	addr16 ret 0x3990
  406f35:	add    al,0xb8
  406f37:	test   eax,0xf6cc05e4
  406f3c:	fucomip st,st(3)
  406f3e:	jae    0x406edf
  406f40:	adc    DWORD PTR [esp+eax*2-0x10],0x59
  406f45:	pop    edx
  406f46:	(bad)  
  406f47:	(bad)  [ecx+0x53056329]
  406f4d:	and    DWORD PTR [eax-0x1a],ebx
  406f50:	push   ss
  406f51:	test   al,0x17
  406f53:	imul   esi,eax,0xc4501965
  406f59:	inc    eax
  406f5a:	retf   0x24fa
  406f5d:	adc    eax,0xd8cfdf0c
  406f62:	pop    edi
  406f63:	call   0x7f991fd2
  406f68:	mov    al,ds:0x81a4861e
  406f6d:	cmp    DWORD PTR [ebx+0x23],esi
  406f70:	cwde   
  406f71:	mov    esi,0x538796df
  406f76:	sub    BYTE PTR [eax-0x17],dl
  406f79:	adc    DWORD PTR [esi+0x45],edi
  406f7c:	mov    cs,WORD PTR [ebp-0xa54d6dd]
  406f82:	rcl    BYTE PTR [si+0x79],cl
  406f86:	dec    eax
  406f87:	inc    ebp
  406f88:	shr    DWORD PTR [esi-0x6dc2be64],cl
  406f8e:	jns    0x406fa8
  406f90:	out    dx,al
  406f91:	xor    eax,0xaffe60ab
  406f96:	nop
  406f97:	adc    BYTE PTR [ecx-0x29],al
  406f9a:	sar    DWORD PTR [esi-0x9416118],1
  406fa0:	mov    ds:0x56cca5ce,al
  406fa5:	(bad)  
  406fa7:	ret    
  406fa8:	jbe    0x406ff2
  406faa:	neg    ah
  406fac:	lods   eax,DWORD PTR ds:[esi]
  406fad:	enter  0x3605,0x1d
  406fb1:	xor    esi,DWORD PTR [ebp-0x3a992b74]
  406fb7:	je     0x406ff0
  406fb9:	dec    edi
  406fba:	inc    ebx
  406fbb:	pop    esp
  406fbc:	adc    al,0xf4
  406fbe:	pop    ds
  406fbf:	ficomp WORD PTR [edi+0x39]
  406fc2:	out    0x38,eax
  406fc4:	in     eax,0x82
  406fc6:	push   0x42
  406fc8:	(bad)  
  406fc9:	and    eax,0x446afdbe
  406fce:	sub    esi,ebx
  406fd0:	(bad)  
  406fd1:	jae    0x406fd8
  406fd3:	je     0x406fc9
  406fd5:	test   al,0x10
  406fd7:	ret    
  406fd8:	sbb    esp,esi
  406fda:	out    0xa4,al
  406fdc:	into   
  406fdd:	add    DWORD PTR [ecx-0x18b79ee0],edx
  406fe3:	mov    ah,0x0
  406fe5:	cmp    ecx,DWORD PTR [edi-0x4]
  406fe8:	fiadd  DWORD PTR [ebx-0x45c88022]
  406fee:	pop    edi
  406fef:	dec    esi
  406ff0:	cdq    
  406ff1:	add    al,0x12
  406ff3:	xchg   BYTE PTR [edi+esi*1+0x75afdc97],ch
  406ffa:	fnstsw WORD PTR [edi+0x74c77c71]
  407000:	(bad)  
  407001:	push   cs
  407002:	hlt    
  407003:	jl     0x406fc3
  407005:	repz sti 
  407007:	mov    DWORD PTR [esp+eiz*8-0x4fe5dfd8],ebx
  40700e:	mov    bl,0x70
  407010:	sub    eax,0x96ad80c
  407015:	scas   al,BYTE PTR es:[edi]
  407016:	test   DWORD PTR [edx+0x64],esp
  407019:	inc    esi
  40701a:	cli    
  40701b:	jmp    0xe95c:0x7d36342
  407022:	xchg   DWORD PTR [ebp+0x710aedf5],esi
  407028:	retf   0xfdde
  40702b:	loope  0x407010
  40702d:	je     0x406fe3
  40702f:	test   DWORD PTR [ecx],ecx
  407031:	int3   
  407032:	push   edx
  407033:	fs in  al,0xd1
  407036:	std    
  407037:	adc    DWORD PTR [esi+0x57],eax
  40703a:	cmc    
  40703b:	jmp    FWORD PTR [edi]
  40703d:	outs   dx,DWORD PTR ds:[esi]
  40703e:	inc    ebx
  40703f:	jno    0x407029
  407041:	std    
  407042:	mov    edx,0xea13f269
  407047:	mov    es,eax
  407049:	mov    ebx,0x39ce7a59
  40704e:	push   ebp
  40704f:	push   ebx
  407050:	je     0x406fda
  407052:	jecxz  0x4070b2
  407054:	outs   dx,DWORD PTR ds:[esi]
  407055:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407057:	sbb    al,0xc2
  407059:	(bad)  
  40705a:	sahf   
  40705b:	in     al,0x60
  40705d:	mov    edi,DWORD PTR [edi]
  40705f:	dec    edx
  407060:	xchg   edi,eax
  407061:	inc    BYTE PTR [ebx+0x65114e39]
  407067:	das    
  407068:	sahf   
  407069:	mov    edx,DWORD PTR [edi-0x4258c07f]
  40706f:	fistp  WORD PTR [edx]
  407071:	xor    al,0x9a
  407073:	mov    cl,0xa
  407075:	ins    BYTE PTR es:[edi],dx
  407076:	xor    BYTE PTR [esi+0x783a5a8d],bh
  40707c:	jae    0x4070fb
  40707e:	cs popf 
  407080:	add    ah,BYTE PTR [ecx]
  407082:	ja     0x407024
  407084:	fwait
  407085:	inc    ebp
  407086:	cmp    DWORD PTR [edi],0xffffff9e
  407089:	mov    al,bl
  40708b:	popa   
  40708c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40708d:	ss xchg ebp,eax
  40708f:	add    dh,ah
  407091:	mov    ch,ch
  407093:	je     0x4070a2
  407095:	rcr    BYTE PTR [eax],0xff
  407098:	outs   dx,DWORD PTR ds:[esi]
  407099:	aaa    
  40709a:	jecxz  0x4070b5
  40709c:	pop    ebx
  40709d:	cmp    al,BYTE PTR [edx-0x59]
  4070a0:	and    al,0x4
  4070a2:	nop
  4070a3:	inc    esi
  4070a4:	in     al,dx
  4070a5:	xchg   esi,eax
  4070a6:	fsubp  st(2),st
  4070a8:	push   eax
  4070a9:	ficomp WORD PTR [ecx]
  4070ab:	pushf  
  4070ac:	add    esp,ebp
  4070ae:	clc    
  4070af:	cvtps2pi mm7,xmm3
  4070b2:	jl     0x4070b1
  4070b4:	ja     0x407108
  4070b6:	push   ds
  4070b7:	test   BYTE PTR [esi],dh
  4070b9:	jo     0x407120
  4070bb:	fcom   QWORD PTR [eax]
  4070bd:	push   DWORD PTR [edx+0x5]
  4070c0:	int    0x7
  4070c2:	jmp    0x407098
  4070c4:	mov    edi,0x5d341b93
  4070c9:	cdq    
  4070ca:	dec    ecx
  4070cb:	call   0x32d8b50b
  4070d0:	out    dx,eax
  4070d1:	outs   dx,BYTE PTR ds:[esi]
  4070d2:	push   eax
  4070d3:	pushf  
  4070d4:	lahf   
  4070d5:	xor    DWORD PTR ds:0xfbe06d76,eax
  4070db:	and    BYTE PTR [ebx+eax*4],ch
  4070de:	(bad)
  4070e2:	xchg   esp,eax
  4070e3:	dec    eax
  4070e4:	mov    dl,0x50
  4070e6:	add    BYTE PTR [edi-0x6514b9e1],bl
  4070ec:	pusha  
  4070ed:	(bad)  
  4070f1:	enter  0x8329,0x88
  4070f5:	sahf   
  4070f6:	mov    al,0xea
  4070f8:	push   esp
  4070f9:	pop    edx
  4070fa:	sbb    eax,0x9f623093
  4070ff:	repnz std 
  407101:	mov    bl,0x68
  407103:	ins    DWORD PTR es:[edi],dx
  407104:	lds    ebx,FWORD PTR [edx]
  407106:	test   BYTE PTR [edx+0x31],cl
  407109:	jmp    0x3024:0x7a0cf22f
  407110:	test   eax,0x62264aee
  407115:	xor    ebx,esi
  407117:	or     DWORD PTR [ecx+esi*8-0x21],ecx
  40711b:	lock jno 0x407133
  40711e:	jno    0x407195
  407120:	test   ch,dh
  407122:	popf   
  407123:	shl    al,0xc5
  407126:	cld    
  407127:	je     0x407138
  407129:	mov    ah,0x78
  40712b:	icebp  
  40712c:	dec    ebp
  40712d:	push   ecx
  40712e:	mov    ah,0x81
  407130:	mov    ebp,0x194e45f6
  407135:	xor    eax,0x57e2e96b
  40713a:	mov    al,ds:0x554ee6c
  40713f:	int    0xb0
  407141:	bound  edx,QWORD PTR [ebp+0x46]
  407144:	add    dh,0xfb
  407147:	pop    esi
  407148:	neg    DWORD PTR [edi-0x1b94d601]
  40714e:	mov    ebx,0x4e90233b
  407153:	lods   eax,DWORD PTR ds:[esi]
  407154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407155:	loope  0x4070e7
  407157:	sub    ebx,ecx
  407159:	jge    0x407135
  40715b:	sub    DWORD PTR [ebx-0x4b18e2f5],ebp
  407161:	loope  0x4071cf
  407163:	(bad)  
  407165:	sub    eax,0xd0405943
  40716a:	fisub  WORD PTR [edx+0x3b]
  40716d:	das    
  40716e:	enter  0x79ce,0x3c
  407172:	xchg   ecx,eax
  407173:	std    
  407174:	jecxz  0x4071ac
  407176:	dec    ecx
  407177:	or     BYTE PTR [esp+ecx*2+0x76aabd4e],bh
  40717e:	popf   
  40717f:	lds    ecx,FWORD PTR [ecx-0x57]
  407182:	jg     0x407194
  407184:	inc    ebp
  407185:	ins    BYTE PTR es:[edi],dx
  407186:	fmulp  st(7),st
  407188:	outs   dx,DWORD PTR ds:[esi]
  407189:	mov    cl,bl
  40718b:	inc    edx
  40718c:	fst    DWORD PTR [esi]
  40718e:	jnp    0x40712e
  407190:	cs and al,0x3d
  407193:	mov    ah,0x0
  407195:	je     0x407181
  407197:	lods   al,BYTE PTR ds:[esi]
  407198:	or     esi,DWORD PTR [edx]
  40719a:	loope  0x4071ea
  40719c:	lds    edi,FWORD PTR [bp+si-0x798d]
  4071a1:	push   ds
  4071a2:	(bad)  
  4071a3:	cwde   
  4071a4:	push   edx
  4071a5:	mov    ds:0x2928b825,eax
  4071aa:	xchg   edi,eax
  4071ab:	in     eax,dx
  4071ac:	pop    eax
  4071ad:	cli    
  4071ae:	pop    ecx
  4071af:	mov    ecx,0x6990d9cd
  4071b4:	mov    al,ds:0x7d4ce4e
  4071b9:	mov    al,ds:0xdeae2ea2
  4071be:	imul   eax,DWORD PTR [edx-0x23bfe2b8],0xb52fe15a
  4071c8:	push   esp
  4071c9:	pusha  
  4071ca:	fcom   QWORD PTR [edi+0x19]
  4071cd:	test   ebp,ebx
  4071cf:	(bad)  
  4071d1:	stc    
  4071d2:	xor    BYTE PTR ds:0x2f0a6dcd,0x71
  4071d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071da:	inc    esp
  4071db:	mov    al,0x48
  4071dd:	icebp  
  4071de:	xchg   ecx,eax
  4071df:	pop    es
  4071e0:	cdq    
  4071e1:	lods   al,BYTE PTR ds:[esi]
  4071e2:	outs   dx,BYTE PTR ds:[esi]
  4071e3:	aad    0xe4
  4071e5:	pop    esi
  4071e6:	test   dh,0x3d
  4071e9:	pop    ss
  4071ea:	push   ds
  4071eb:	popf   
  4071ec:	adc    eax,0x4a7a3bf7
  4071f1:	push   es
  4071f2:	outs   dx,DWORD PTR ds:[esi]
  4071f3:	mov    edi,ds
  4071f5:	in     eax,0x7f
  4071f7:	ja     0x407254
  4071f9:	mov    eax,ds:0x2111b40
  4071fe:	loop   0x407264
  407200:	iret   
  407201:	rep ins DWORD PTR es:[edi],dx
  407203:	loope  0x4071b9
  407205:	add    edi,DWORD PTR ds:0x340ce694
  40720b:	push   0xffffffa7
  40720d:	pop    ss
  40720e:	cmp    al,0xc1
  407210:	adc    al,0x53
  407212:	(bad)  
  407213:	mov    eax,ds:0x98124d42
  407218:	ss mov edi,0xcfdcd304
  40721e:	in     eax,dx
  40721f:	jae    0x4071ef
  407221:	cli    
  407222:	repnz add eax,0xc3054158
  407228:	push   eax
  407229:	dec    ecx
  40722a:	dec    edx
  40722b:	jecxz  0x407264
  40722d:	into   
  40722e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40722f:	push   eax
  407230:	out    dx,al
  407231:	es push ebx
  407233:	pusha  
  407234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407235:	hlt    
  407236:	cmp    esi,DWORD PTR [edx-0x13cc805a]
  40723c:	xlat   BYTE PTR ds:[ebx]
  40723d:	adc    BYTE PTR [ecx+0x777d614d],ah
  407243:	jae    0x40728f
  407245:	sub    al,0xc
  407247:	pop    eax
  407248:	fist   WORD PTR [esi+0x5c]
  40724b:	jle    0x40723e
  40724d:	jb     0x407245
  40724f:	jns    0x407210
  407251:	xchg   edi,eax
  407252:	idiv   BYTE PTR [edi]
  407254:	test   DWORD PTR [ecx+edx*2],ebp
  407257:	or     ecx,edi
  407259:	push   ds
  40725a:	inc    edi
  40725b:	pushf  
  40725c:	xchg   edi,eax
  40725d:	ret    0xb64b
  407260:	inc    edi
  407261:	loope  0x4071ea
  407263:	add    al,0xf6
  407265:	mov    ecx,0x1d893333
  40726a:	mov    dh,0x2f
  40726c:	jne    0x4072ba
  40726e:	imul   edi,DWORD PTR ds:0xeac61018,0xffffff86
  407275:	sbb    DWORD PTR [edx+0x517bdb68],0x41926f36
  40727f:	cmp    eax,0x43499543
  407284:	lods   al,BYTE PTR ds:[esi]
  407285:	adc    ecx,DWORD PTR [edi]
  407287:	push   ecx
  407288:	mov    bl,0xa
  40728a:	inc    esi
  40728b:	jnp    0x407257
  40728d:	mov    BYTE PTR [eax+0x43],bh
  407290:	xchg   ebp,eax
  407291:	jmp    0x4072ce
  407293:	int3   
  407294:	ds fdivr st,st(1)
  407297:	lock cmp dl,BYTE PTR [ecx+0x530d76c1]
  40729e:	mov    esi,eax
  4072a0:	aas    
  4072a1:	shufps xmm5,xmm0,0x45
  4072a5:	test   DWORD PTR fs:[esi+0x5c7f60a],edi
  4072ac:	xchg   ebx,edx
  4072ae:	cwde   
  4072af:	int3   
  4072b0:	ret    
  4072b1:	inc    esi
  4072b2:	in     al,dx
  4072b3:	push   ds
  4072b4:	push   ebx
  4072b5:	fwait
  4072b6:	cmc    
  4072b7:	xchg   esi,eax
  4072b8:	xlat   BYTE PTR ds:[ebx]
  4072b9:	cld    
  4072ba:	mov    ecx,0xed836467
  4072bf:	and    eax,0x1a78dd65
  4072c4:	jl     0x407305
  4072c6:	cmp    al,0x6e
  4072c8:	cmp    DWORD PTR [esi-0x11dab961],ebp
  4072ce:	inc    esi
  4072cf:	push   ds
  4072d0:	adc    al,0x1
  4072d2:	mov    bl,0x6e
  4072d4:	mov    cl,0x4b
  4072d6:	pop    ecx
  4072d7:	xchg   edi,eax
  4072d8:	sub    al,0xf6
  4072da:	xchg   BYTE PTR [edi+edx*2-0x2c],dh
  4072de:	outs   dx,DWORD PTR ds:[esi]
  4072df:	das    
  4072e0:	adc    cl,bh
  4072e2:	sub    BYTE PTR [edi],al
  4072e4:	add    ecx,DWORD PTR [eax+0x250164a3]
  4072ea:	addr16 mov ch,bl
  4072ed:	cmp    al,BYTE PTR [eax+ebp*2-0x1e569f44]
  4072f4:	mov    dh,0xee
  4072f6:	pop    eax
  4072f7:	rol    BYTE PTR [edi],0xa9
  4072fa:	imul   edx,DWORD PTR [ecx+0x78],0x2dd593
  407301:	test   BYTE PTR [esi+0x43b1a2f6],0x5d
  407308:	daa    
  407309:	fnstenv [edx-0x6fcc5693]
  40730f:	jge    0x40736e
  407311:	adc    ah,ch
  407313:	popa   
  407314:	pop    edx
  407315:	cli    
  407316:	jo     0x40737e
  407318:	jns    0x407364
  40731a:	push   esi
  40731b:	cmp    BYTE PTR [edx+0x5858eec8],cl
  407321:	lds    edx,FWORD PTR [ecx-0x2f]
  407324:	sbb    edx,DWORD PTR [edx-0x61]
  407327:	cmp    eax,0x89ca8de1
  40732c:	sbb    eax,0xf69920c0
  407331:	adc    al,0xfb
  407333:	inc    esp
  407334:	test   DWORD PTR [eax],0x5a205905
  40733a:	js     0x407388
  40733c:	inc    ebx
  40733d:	pop    ds
  40733e:	adc    BYTE PTR [ecx+0x16],al
  407341:	dec    esp
  407342:	push   ebx
  407343:	out    0xa5,al
  407345:	popf   
  407346:	es dec eax
  407348:	jecxz  0x407305
  40734a:	dec    ebx
  40734b:	xbegin 0x63948a73
  407351:	pop    esi
  407352:	mov    ebx,0x2b00b390
  407357:	mov    dh,0x96
  407359:	mov    bl,0x2f
  40735b:	add    BYTE PTR [esi+0x33e2c728],0xcd
  407362:	push   esp
  407363:	out    0xdd,eax
  407365:	xor    al,BYTE PTR [ebp+0x1b5c89ae]
  40736b:	mov    ebx,0xe195266e
  407370:	gs cmp al,0xb4
  407373:	pushf  
  407374:	xchg   esi,eax
  407375:	sub    eax,eax
  407377:	retf   
  407378:	out    0x12,al
  40737a:	ins    DWORD PTR es:[edi],dx
  40737b:	add    al,0x25
  40737d:	inc    ebp
  40737e:	mov    eax,ds:0x168a4a87
  407383:	scas   eax,DWORD PTR es:[edi]
  407384:	arpl   WORD PTR [esi-0x6251f3e7],bp
  40738a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40738b:	lock push ds
  40738d:	xor    al,0x44
  40738f:	mov    esi,0xe2f3a737
  407394:	pop    edi
  407395:	or     ecx,edi
  407397:	push   es
  407398:	into   
  407399:	dec    ebp
  40739a:	dec    edx
  40739b:	push   ds
  40739c:	je     0x4073b5
  40739e:	and    BYTE PTR [edx+ebp*1+0x7596bebb],ch
  4073a5:	mov    ebp,0x3e61afbc
  4073aa:	cs xchg ebx,eax
  4073ac:	cmp    edi,DWORD PTR [edi+0x4e]
  4073af:	mov    eax,0x74537a7c
  4073b4:	stos   DWORD PTR es:[edi],eax
  4073b5:	mov    al,0x19
  4073b7:	gs pop es
  4073b9:	sbb    eax,0x4ae1a144
  4073be:	popa   
  4073bf:	dec    edx
  4073c0:	jecxz  0x40742a
  4073c2:	mov    esp,DWORD PTR [ecx+0x25]
  4073c5:	les    esp,FWORD PTR [eax]
  4073c7:	mov    ah,0x57
  4073c9:	stos   BYTE PTR es:[edi],al
  4073ca:	popa   
  4073cb:	sbb    ebp,DWORD PTR [eax]
  4073cd:	gs std 
  4073cf:	pop    ebx
  4073d0:	sub    edi,DWORD PTR [ecx+0x6af5fb0f]
  4073d6:	push   0x4d
  4073d8:	(bad)  
  4073d9:	xchg   esp,eax
  4073da:	add    cl,BYTE PTR [edx-0x59049662]
  4073e0:	add    eax,0xe31dab97
  4073e5:	cmp    eax,0xb57c5717
  4073ea:	xchg   esi,eax
  4073eb:	or     edx,0xffffffee
  4073ee:	xor    edi,esi
  4073f0:	aaa    
  4073f1:	retf   
  4073f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073f3:	clc    
  4073f4:	addr16 aam 0xb9
  4073f7:	adc    BYTE PTR [edx],dl
  4073f9:	stc    
  4073fa:	mov    dl,0x14
  4073fc:	scas   eax,DWORD PTR es:[edi]
  4073fd:	ins    BYTE PTR es:[edi],dx
  4073fe:	or     dl,BYTE PTR [esi]
  407400:	sbb    DWORD PTR [edi+esi*4+0x1b],eax
  407404:	mov    ecx,0x8d366543
  407409:	mov    al,ds:0xed430d86
  40740e:	ss addr16 mov ebp,0x89c6fd81
  407415:	push   eax
  407416:	sub    dl,BYTE PTR [edx-0x68]
  407419:	lea    esp,[ebp+0x64bcd4ee]
  40741f:	adc    eax,0x508fc475
  407424:	dec    esp
  407425:	cmp    DWORD PTR [ebp+0x3a],ecx
  407428:	clc    
  407429:	jmp    0x68a4:0x324c0f10
  407430:	lods   eax,DWORD PTR ds:[esi]
  407431:	mov    ch,0x7a
  407433:	inc    eax
  407434:	dec    eax
  407435:	js     0x4073e6
  407437:	sbb    DWORD PTR [eax],ecx
  407439:	test   BYTE PTR [ebp-0x71b0a660],ch
  40743f:	mov    eax,?
  407441:	ja     0x4073e1
  407443:	mov    BYTE PTR [edx+0x1f33c463],dl
  407449:	cmp    al,0x5f
  40744b:	in     eax,0xb5
  40744d:	outs   dx,BYTE PTR ds:[esi]
  40744e:	in     eax,dx
  40744f:	jne    0x4074c5
  407451:	dec    ebx
  407452:	xor    ebx,DWORD PTR [ebp-0x3426b720]
  407458:	test   eax,0x19cbb67c
  40745d:	jae    0x4074cd
  40745f:	popf   
  407460:	pop    ecx
  407461:	add    BYTE PTR [ebx-0x5b],al
  407464:	push   ds
  407465:	ficom  DWORD PTR [esi+0x584dddc4]
  40746b:	sahf   
  40746c:	or     BYTE PTR [ecx-0x5a],ch
  40746f:	jge    0x407401
  407471:	cmp    bh,bh
  407473:	(bad)  
  407474:	mov    dh,0x7
  407476:	add    ecx,DWORD PTR [esi+esi*2+0x7a59ff00]
  40747d:	retf   0xf3f6
  407480:	xchg   edx,eax
  407481:	shr    BYTE PTR [edi-0x744daa25],0xbf
  407488:	test   al,0xee
  40748a:	test   DWORD PTR [esi],esi
  40748c:	(bad)  
  40748d:	iret   
  40748e:	test   BYTE PTR [esi-0x42],bl
  407491:	mov    al,0xcf
  407493:	out    dx,al
  407494:	inc    edx
  407495:	dec    eax
  407496:	cmp    cl,BYTE PTR [ecx+0x47]
  407499:	cmp    al,0x0
  40749b:	int3   
  40749c:	pop    es
  40749d:	jno    0x40742a
  40749f:	aad    0x98
  4074a1:	pop    ds
  4074a2:	shr    BYTE PTR [eax],1
  4074a4:	mov    al,0x2d
  4074a6:	sar    DWORD PTR [eax],0x32
  4074a9:	jno    0x407485
  4074ab:	mov    ch,0x5a
  4074ad:	int    0xc9
  4074af:	in     eax,dx
  4074b0:	push   ebp
  4074b1:	and    al,0xea
  4074b3:	ins    BYTE PTR es:[edi],dx
  4074b4:	nop
  4074b5:	mov    dl,0xb
  4074b7:	push   ebx
  4074b8:	mov    edx,0x9e0d1a99
  4074bd:	jnp    0x40745f
  4074bf:	mov    DWORD PTR [ecx],ebp
  4074c1:	mov    ebx,0x44dcaaa3
  4074c6:	in     eax,dx
  4074c7:	sbb    edi,ecx
  4074c9:	jo     0x407501
  4074cb:	cs out 0xdb,eax
  4074ce:	retf   
  4074cf:	mov    bh,0x2d
  4074d1:	or     BYTE PTR [eax+0x49ece809],ch
  4074d7:	mov    ds:0x5b20eae6,al
  4074dc:	mov    bl,0xb0
  4074de:	(bad)  
  4074df:	mov    dl,0x59
  4074e1:	mov    edi,0x9570f0d5
  4074e6:	or     eax,DWORD PTR [esi+0x1f]
  4074e9:	or     DWORD PTR [edi-0x5f],0x10
  4074ed:	fisubr WORD PTR [ebp-0x5c]
  4074f0:	jb     0x407529
  4074f2:	mov    ecx,DWORD PTR [edx]
  4074f4:	jmp    0x442d:0xbc1e89ae
  4074fb:	cwde   
  4074fc:	pop    ebp
  4074fd:	mov    esi,DWORD PTR [esi]
  4074ff:	out    0x4e,eax
  407501:	pop    es
  407502:	xchg   esp,eax
  407503:	popf   
  407504:	xor    eax,0x89040a82
  407509:	or     al,0x2f
  40750b:	test   DWORD PTR [ecx+esi*1+0x3257067b],ecx
  407512:	std    
  407513:	or     DWORD PTR [eax-0x6b6ad1e8],esp
  407519:	push   0x32
  40751b:	fst    QWORD PTR [esi-0x7a]
  40751e:	out    dx,eax
  40751f:	sar    DWORD PTR [eax],0xb2
  407522:	mov    al,0x89
  407524:	mov    esi,0x4799da84
  407529:	xor    bh,BYTE PTR [edx-0x3c3f3e27]
  40752f:	dec    esp
  407530:	add    ch,al
  407532:	test   BYTE PTR [ebp-0x7b6d6444],ch
  407538:	aam    0x3
  40753a:	inc    edx
  40753b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40753c:	daa    
  40753d:	mov    al,ds:0x587c3fa4
  407542:	addr16 imul esp,ebx,0xe203826b
  407549:	je     0x4074dd
  40754b:	and    DWORD PTR [edi+0x5d],eax
  40754e:	add    eax,0x7e6e6a92
  407553:	rcr    BYTE PTR [eax-0x42],0x9
  407557:	jmp    0x85b14475
  40755c:	outs   dx,DWORD PTR ds:[esi]
  40755d:	cmp    eax,edi
  40755f:	mov    edi,0xa714b1fc
  407564:	imul   ebp,ebx,0x6d4ce07f
  40756a:	or     DWORD PTR [esi-0x7879e12c],eax
  407570:	mov    ch,0xbc
  407572:	aas    
  407573:	pop    edx
  407574:	mov    esp,0x72b190db
  407579:	mov    al,ds:0x18217304
  40757e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40757f:	cmp    DWORD PTR ds:0xd255120e,esp
  407585:	jge    0x4075f5
  407587:	mov    edx,0x118e9f8e
  40758c:	and    edi,DWORD PTR [esi+ebp*2-0x2d]
  407590:	pop    ds
  407591:	in     eax,0xd9
  407593:	push   cs
  407594:	sub    ch,dl
  407596:	lock jb 0x4075a1
  407599:	push   ebp
  40759a:	outs   dx,DWORD PTR ds:[esi]
  40759b:	test   esp,esi
  40759d:	push   esi
  40759e:	scas   al,BYTE PTR es:[edi]
  40759f:	jecxz  0x40753e
  4075a1:	(bad)  
  4075a2:	mov    dl,0xb
  4075a4:	sbb    DWORD PTR [ecx+0x4c],ebx
  4075a7:	push   0xffffffc4
  4075a9:	inc    edi
  4075aa:	jmp    0x27b8ecd3
  4075af:	inc    ebx
  4075b0:	inc    cl
  4075b2:	cdq    
  4075b3:	and    al,0x1e
  4075b5:	test   bh,dl
  4075b7:	sbb    edi,DWORD PTR [edx]
  4075b9:	pop    ss
  4075ba:	mov    bh,0x7a
  4075bc:	add    eax,0xa8b50622
  4075c1:	psubsw mm3,QWORD PTR [edi]
  4075c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075c5:	pop    ecx
  4075c6:	out    0xcd,eax
  4075c8:	inc    ebp
  4075c9:	jg     0x4075c2
  4075cb:	fs jo  0x407636
  4075ce:	sbb    edx,ebp
  4075d0:	popa   
  4075d1:	es (bad) 
  4075d3:	jp     0x407626
  4075d5:	cmp    eax,0x8eaaf49f
  4075da:	fimul  DWORD PTR [esi+0x571369d7]
  4075e0:	repz fnstcw WORD PTR [eax+edx*2]
  4075e4:	in     al,0xfb
  4075e6:	aad    0x1a
  4075e8:	sub    DWORD PTR [eax],0xe4aed153
  4075ee:	sar    DWORD PTR [esi+0x7e7c3cc3],0xe5
  4075f5:	addr16 jbe 0x407675
  4075f8:	pop    edi
  4075f9:	pop    ebp
  4075fa:	dec    esi
  4075fb:	push   0xf87ddbe1
  407600:	call   FWORD PTR [edi+0x64]
  407603:	int3   
  407604:	ds add al,0xcc
  407607:	xlat   BYTE PTR ds:[ebx]
  407608:	sbb    DWORD PTR [ebx-0x3d],0x57
  40760c:	xor    DWORD PTR ds:0x1661f0e9,edx
  407612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407613:	jno    0x4075ee
  407615:	push   ds
  407616:	sahf   
  407617:	aas    
  407618:	jae    0x4075d1
  40761a:	(bad)  
  40761b:	xor    eax,0x1c7b37de
  407620:	add    al,0xad
  407622:	push   ebx
  407623:	pop    esi
  407624:	fdivr  DWORD PTR [edx]
  407626:	xchg   edi,eax
  407627:	jns    0x4075c9
  407629:	scas   eax,DWORD PTR es:[edi]
  40762a:	mov    ah,BYTE PTR [edi-0x6f6a3962]
  407630:	popf   
  407631:	cmp    al,0xe8
  407633:	sub    bh,BYTE PTR [esi+0x43]
  407636:	lock dec esp
  407638:	push   eax
  407639:	mov    bh,0x79
  40763b:	imul   esi,DWORD PTR [esi+0x2a124de0],0x4e
  407642:	out    dx,al
  407643:	ror    DWORD PTR [ecx+ecx*1-0x1b],cl
  407647:	jle    0x4075df
  407649:	dec    ecx
  40764a:	mov    eax,ds:0x581f3200
  40764f:	mov    ds:0xf93379cb,eax
  407654:	sub    al,0x62
  407656:	in     al,0xa4
  407658:	jb     0x407635
  40765a:	and    BYTE PTR [esi-0x1f],dh
  40765d:	xchg   DWORD PTR [ebp-0x40],esi
  407660:	lods   al,BYTE PTR ds:[esi]
  407661:	mov    edx,0xee73de92
  407666:	add    al,0xe3
  407668:	push   es
  407669:	aaa    
  40766a:	pop    edi
  40766b:	stos   DWORD PTR es:[edi],eax
  40766c:	pop    esi
  40766d:	xor    al,0x7d
  40766f:	add    dh,BYTE PTR [ecx-0x384a3372]
  407675:	dec    ebx
  407676:	gs jle 0x40767f
  407679:	xor    al,0x6d
  40767b:	pop    eax
  40767c:	xchg   esi,eax
  40767d:	mov    ch,0xde
  40767f:	dec    ecx
  407680:	sub    al,0x3e
  407682:	mov    bl,0xf9
  407684:	aam    0x3b
  407686:	loope  0x407658
  407688:	push   ebp
  407689:	or     BYTE PTR [ebx],bl
  40768b:	pushf  
  40768c:	pop    ebx
  40768d:	jbe    0x4076dc
  40768f:	inc    ebx
  407690:	pop    es
  407691:	xchg   edi,eax
  407692:	sub    BYTE PTR [edi],cl
  407694:	ins    DWORD PTR es:[edi],dx
  407695:	ja     0x407640
  407697:	push   ds
  407698:	out    dx,al
  407699:	imul   edx,DWORD PTR [eax],0x47ba58f
  40769f:	int3   
  4076a0:	rol    DWORD PTR [ecx-0x3a],cl
  4076a3:	push   0x4b
  4076a5:	mov    eax,0xce2baf9e
  4076aa:	xor    bl,BYTE PTR [eax+0x21]
  4076ad:	adc    eax,0xe2f33fd4
  4076b2:	or     al,0x32
  4076b4:	fcom   QWORD PTR [edi]
  4076b6:	and    al,0x9b
  4076b8:	(bad)  
  4076b9:	cwde   
  4076ba:	mov    bl,0x1d
  4076bc:	push   ds
  4076bd:	loop   0x407659
  4076bf:	es and esi,ebp
  4076c2:	adc    DWORD PTR [ebx-0x62],ecx
  4076c5:	jbe    0x4076c0
  4076c7:	fidivr WORD PTR fs:[edx]
  4076ca:	xchg   ecx,eax
  4076cb:	add    DWORD PTR [ebx+0x71],0x17
  4076cf:	inc    esi
  4076d0:	(bad)  
  4076d1:	push   eax
  4076d2:	enter  0x7150,0xb9
  4076d6:	pop    edi
  4076d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d8:	pop    ds
  4076d9:	fadd   QWORD PTR [ebx-0x80]
  4076dc:	xor    eax,0xe791421b
  4076e1:	push   ecx
  4076e2:	xchg   BYTE PTR [edi],bh
  4076e4:	xor    edi,esi
  4076e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076e7:	cwde   
  4076e8:	sub    ebx,esp
  4076ea:	sbb    BYTE PTR [ebp+0x2caf66bd],cl
  4076f0:	aaa    
  4076f1:	cmp    esp,DWORD PTR [ebp+0x40c77174]
  4076f7:	add    ch,BYTE PTR [ebp+0x1032fb5e]
  4076fd:	add    dl,dl
  4076ff:	jne    0x407735
  407701:	ret    0x297e
  407704:	leave  
  407705:	jp     0x40771d
  407707:	and    DWORD PTR [edi+0x9],eax
  40770a:	cmp    edi,DWORD PTR [edi]
  40770c:	sbb    BYTE PTR ds:0xc0369a9,0x25
  407713:	pop    ecx
  407714:	mov    ebp,0xc5412179
  407719:	addr16 (bad) 
  40771b:	out    0xdf,al
  40771d:	jmp    0x407731
  40771f:	iret   
  407720:	inc    ebx
  407721:	lock rol BYTE PTR [ecx-0x2696d167],cl
  407728:	push   esp
  407729:	fst    QWORD PTR [ebx+edi*2]
  40772c:	jecxz  0x4076e9
  40772e:	xor    al,0xb8
  407730:	inc    eax
  407731:	mov    esi,DWORD PTR [ebx-0x6020f898]
  407737:	dec    esi
  407738:	leave  
  407739:	pop    ebx
  40773a:	call   0x4884:0x1d00fbc6
  407741:	sbb    WORD PTR [ecx-0x7ff5de8f],0xd151
  40774a:	mov    cl,0x4c
  40774c:	sbb    BYTE PTR [edi+0x76],bh
  40774f:	and    DWORD PTR [ebx-0x4a],0xbb6e65e6
  407756:	and    DWORD PTR [eax-0x2a95629f],ecx
  40775c:	and    ebx,0xa
  40775f:	addr16 leave 
  407761:	mov    BYTE PTR fs:[ebx],al
  407764:	fisubr WORD PTR [ecx-0x3]
  407767:	push   ecx
  407768:	fidiv  WORD PTR [edx-0x6b00284f]
  40776e:	mov    ch,0x4b
  407770:	mov    BYTE PTR ds:0x42bee804,bh
  407776:	xchg   edx,eax
  407777:	cmp    al,bh
  407779:	pusha  
  40777a:	cwde   
  40777b:	(bad)  
  40777c:	call   0x7ce:0x6e26647b
  407783:	xor    eax,0x331d6c13
  407788:	jl     0x407746
  40778a:	outs   dx,BYTE PTR ds:[esi]
  40778b:	or     al,0x56
  40778d:	das    
  40778e:	repz add eax,0xb05968f4
  407794:	(bad)  
  407795:	mov    al,0x7f
  407797:	sub    DWORD PTR [ecx+0x5acee747],ebx
  40779d:	push   ebp
  40779e:	icebp  
  40779f:	fcmovu st,st(3)
  4077a1:	arpl   WORD PTR [eax],bp
  4077a3:	dec    edi
  4077a4:	pop    esp
  4077a5:	loopne 0x4077d1
  4077a7:	inc    ecx
  4077a8:	outs   dx,BYTE PTR ds:[esi]
  4077a9:	cmp    dl,BYTE PTR [edi+edi*8-0x6ae18c75]
  4077b0:	pushf  
  4077b1:	add    eax,0x6be8c8fe
  4077b6:	push   ebp
  4077b7:	pop    edi
  4077b8:	scas   al,BYTE PTR es:[edi]
  4077b9:	mov    ah,0x9e
  4077bb:	mov    ah,BYTE PTR [ecx+0x580ba24]
  4077c1:	and    eax,0x9fcd8881
  4077c6:	adc    BYTE PTR [ecx],0x73
  4077c9:	retf   
  4077ca:	push   cs
  4077cb:	push   ds
  4077cc:	cwde   
  4077cd:	mov    WORD PTR [ebx+0x1d],cs
  4077d0:	lahf   
  4077d1:	inc    ebp
  4077d2:	push   esp
  4077d3:	sbb    eax,0x4fd537ad
  4077d8:	xor    DWORD PTR [ebx+0x33ee0cd1],edi
  4077de:	and    eax,DWORD PTR [eax-0x7c]
  4077e1:	out    dx,al
  4077e2:	mov    edx,0xe3e638d6
  4077e7:	push   ds
  4077e8:	test   BYTE PTR [ecx-0x2a],al
  4077eb:	imul   esi,DWORD PTR ds:0xe98f2522,0xe8042f66
  4077f5:	mov    ah,0x30
  4077f7:	(bad)  [ecx+ebp*1-0x43d43076]
  4077ff:	fimul  DWORD PTR [ecx]
  407801:	adc    BYTE PTR [esi-0x75],dh
  407804:	fbld   TBYTE PTR cs:[esi]
  407807:	(bad)  
  407808:	mov    dl,BYTE PTR [ebx-0x19452c19]
  40780e:	or     eax,0x9e1cdcf9
  407813:	outs   dx,BYTE PTR ds:[esi]
  407814:	or     eax,DWORD PTR [esi+0x7f4b78b3]
  40781a:	add    eax,0x41c726a1
  40781f:	stos   BYTE PTR es:[edi],al
  407820:	pop    esp
  407821:	ffreep st(0)
  407823:	push   esi
  407824:	or     bh,ch
  407826:	fidiv  WORD PTR [edx]
  407828:	popa   
  407829:	stc    
  40782a:	adc    ebx,0x8ab8145
  407830:	jg     0x4077fb
  407832:	inc    esp
  407833:	jge    0x4077c6
  407835:	out    0x8d,eax
  407837:	cmp    DWORD PTR [esi-0x5d34b419],ecx
  40783d:	cmp    esp,edx
  40783f:	mov    ch,0x6d
  407841:	jae    0x407867
  407843:	pop    eax
  407844:	fsubp  st(7),st
  407846:	mov    eax,0xb4147fa8
  40784b:	push   esp
  40784c:	jns    0x40786c
  40784e:	sub    ah,cl
  407850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407851:	jne    0xe13b678e
  407857:	xor    BYTE PTR [ebx+0x2f],0xb8
  40785b:	sbb    ebp,DWORD PTR [ebp+0x33a41e80]
  407861:	int    0xf7
  407863:	push   es
  407864:	mov    al,ds:0xb4b40b47
  407869:	fistp  DWORD PTR [ecx-0x2a53f58c]
  40786f:	hlt    
  407870:	mov    eax,ds:0xb4c8d51f
  407875:	std    
  407876:	stc    
  407877:	sub    edi,0x11ca3928
  40787d:	pop    ecx
  40787e:	push   ss
  40787f:	ins    DWORD PTR es:[edi],dx
  407880:	push   cs
  407881:	push   ds
  407882:	push   esi
  407883:	mov    ebx,0x95005a21
  407888:	icebp  
  407889:	xchg   ecx,eax
  40788a:	sbb    BYTE PTR [eax+0x8],bl
  40788d:	int    0x2
  40788f:	mov    cl,0x21
  407891:	sbb    esp,DWORD PTR [ebx-0x2c13c849]
  407897:	xlat   BYTE PTR ds:[ebx]
  407898:	mov    eax,0x3938ac93
  40789d:	pop    ss
  40789e:	popf   
  40789f:	imul   edx,DWORD PTR cs:0x57646fae,0xfffffff1
  4078a7:	cmc    
  4078a8:	mov    cl,0xff
  4078aa:	jnp    0x4078a3
  4078ac:	stos   DWORD PTR es:[edi],eax
  4078ad:	lea    ecx,[ebx]
  4078af:	xchg   ecx,eax
  4078b0:	aam    0x31
  4078b2:	mov    edi,DWORD PTR [edx]
  4078b4:	xor    BYTE PTR [edi+0x770210ba],cl
  4078ba:	xchg   edi,eax
  4078bb:	fldcw  WORD PTR [eax+esi*2-0x2a]
  4078bf:	push   ebp
  4078c0:	dec    DWORD PTR [edi+0x62eb1f3a]
  4078c6:	mov    WORD PTR [ebx],cs
  4078c8:	arpl   WORD PTR [eax],bp
  4078ca:	div    DWORD PTR [esi+0x34]
  4078cd:	sahf   
  4078ce:	call   0xe59f:0x4d14c0b
  4078d5:	jecxz  0x40794d
  4078d7:	mov    bh,0xe3
  4078d9:	ror    BYTE PTR [edx-0x263576c1],0x1a
  4078e0:	inc    ebp
  4078e1:	jae    0x4078ea
  4078e3:	dec    ecx
  4078e4:	rol    BYTE PTR [edi],cl
  4078e6:	mov    es,WORD PTR [eax]
  4078e8:	xchg   DWORD PTR [edi-0x22],ecx
  4078eb:	mov    edx,0xd9d9324b
  4078f0:	(bad)
  4078f3:	dec    edi
  4078f4:	mov    al,0xcb
  4078f6:	rcr    DWORD PTR [ecx],cl
  4078f8:	xchg   BYTE PTR [eax],dl
  4078fa:	bnd jmp 0x4078d4
  4078fd:	out    0x3a,al
  4078ff:	into   
  407900:	imul   eax,DWORD PTR [ebx+0x11ec9246],0xffffff98
  407907:	mov    bh,0x32
  407909:	loopne 0x407971
  40790b:	mov    eax,0x8885180a
  407910:	xor    eax,0x41e2d06
  407915:	fidivr WORD PTR fs:[eax-0x6f]
  407919:	jmp    0x817887b4
  40791e:	mov    al,0xc6
  407920:	sub    DWORD PTR [ecx+ebx*4+0x3bc809d4],ecx
  407927:	fmul   DWORD PTR [eax+0x5d]
  40792a:	and    al,0x9c
  40792c:	test   al,0xdd
  40792e:	cmp    al,0x41
  407930:	test   BYTE PTR [eax+0x1f],0x5
  407934:	inc    edi
  407935:	test   DWORD PTR [esi+eiz*4-0x15c4d70b],esp
  40793c:	sbb    eax,0xbba8782e
  407941:	push   cs
  407942:	xor    al,0x17
  407944:	add    BYTE PTR [ebp-0x7010787f],dh
  40794a:	out    0x36,eax
  40794c:	mov    bl,0xba
  40794e:	cdq    
  40794f:	push   cs
  407950:	xor    eax,0x74589793
  407955:	test   DWORD PTR [ebx-0x258a1059],edx
  40795b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795c:	pop    edx
  40795d:	jb     0x40799b
  40795f:	aas    
  407960:	frstor [ecx+0xb5f3e28]
  407966:	mov    bl,0xfb
  407968:	jecxz  0x407965
  40796a:	lods   eax,DWORD PTR ds:[esi]
  40796b:	push   ecx
  40796c:	and    al,0x1e
  40796e:	daa    
  40796f:	cmp    ecx,DWORD PTR [edi-0x52]
  407972:	adc    DWORD PTR [ebp-0x29312321],esp
  407978:	xor    eax,0xf0b5dada
  40797d:	stc    
  40797e:	mov    esi,0x6ce8f4f8
  407983:	cmp    al,0x32
  407985:	xor    DWORD PTR [edi+0x10],0x2d
  407989:	inc    eax
  40798a:	pop    es
  40798b:	push   ds
  40798c:	retf   
  40798d:	mov    eax,es:0x188214cf
  407993:	sbb    al,0xce
  407995:	and    BYTE PTR ds:[esp+edi*2-0x60e0d257],0xa1
  40799e:	in     al,dx
  40799f:	jb     0x40792b
  4079a1:	xor    eax,0xb2872ba6
  4079a6:	mov    ch,0x2e
  4079a8:	in     eax,0xf8
  4079aa:	outs   dx,DWORD PTR ds:[esi]
  4079ab:	push   cs
  4079ac:	jnp    0x407969
  4079ae:	dec    ecx
  4079af:	push   es
  4079b0:	mov    al,0xdb
  4079b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b3:	ret    0x42b0
  4079b6:	inc    esi
  4079b7:	std    
  4079b8:	(bad)  
  4079b9:	jb     0x407a14
  4079bb:	pop    esi
  4079bc:	add    al,BYTE PTR [ebx+0x28bee9b1]
  4079c2:	adc    BYTE PTR gs:[ecx+0x14c63deb],ch
  4079c9:	cli    
  4079ca:	jmp    0x3a6c:0x1f166b3a
  4079d1:	add    eax,DWORD PTR [esi-0x2c3202c2]
  4079d7:	cwde   
  4079d8:	cmp    DWORD PTR [eax+ebp*2+0x5b],0xffffffc9
  4079dd:	sbb    ah,ch
  4079df:	je     0x407978
  4079e1:	out    dx,eax
  4079e2:	mov    ebx,0xf47f4e6d
  4079e7:	pop    es
  4079e8:	cmp    al,BYTE PTR [esi]
  4079ea:	imul   esi,DWORD PTR [edi-0x3ec17b3a],0x547055f8
  4079f4:	jae    0x4079f7
  4079f6:	stos   DWORD PTR es:[edi],eax
  4079f7:	shr    ecx,1
  4079f9:	es loope 0x407984
  4079fc:	loope  0x407a14
  4079fe:	data16 mov bh,0xe0
  407a01:	mov    edx,eax
  407a03:	cmp    bl,ch
  407a05:	retf   0x9984
  407a08:	or     al,0x18
  407a0a:	fs in  eax,dx
  407a0c:	xlat   BYTE PTR ds:[ebx]
  407a0d:	in     eax,dx
  407a0e:	jb     0x407a52
  407a10:	(bad)  
  407a12:	lods   eax,DWORD PTR ds:[esi]
  407a13:	enter  0xca22,0xca
  407a17:	scas   al,BYTE PTR es:[edi]
  407a18:	or     ebp,edi
  407a1a:	fwait
  407a1b:	aaa    
  407a1c:	pop    ebp
  407a1d:	into   
  407a1e:	aam    0x70
  407a20:	adc    BYTE PTR [edi],bh
  407a22:	mov    edi,0x988c99c
  407a27:	jle    0x4079ee
  407a29:	outs   dx,DWORD PTR ds:[esi]
  407a2a:	stc    
  407a2b:	lods   eax,DWORD PTR ds:[esi]
  407a2c:	lods   eax,DWORD PTR ds:[esi]
  407a2d:	repz lea edi,[ebx-0x143bd4cb]
  407a34:	enter  0x13fb,0x34
  407a38:	in     al,dx
  407a39:	sahf   
  407a3a:	out    dx,eax
  407a3b:	cli    
  407a3c:	test   ecx,0x9797a0ff
  407a42:	out    dx,al
  407a43:	or     edx,DWORD PTR [ebx+0x76b9f7d2]
  407a49:	add    eax,0xcae88265
  407a4e:	xor    DWORD PTR [eax],ecx
  407a50:	xchg   esp,eax
  407a51:	retf   0xdc3
  407a54:	gs lahf 
  407a56:	jo     0x407a41
  407a58:	push   0xfffffff2
  407a5a:	not    BYTE PTR [edx+0x63635fc]
  407a60:	lahf   
  407a61:	add    eax,0xd653499c
  407a66:	xchg   edx,eax
  407a67:	jo     0x407ad5
  407a69:	add    DWORD PTR [ecx],esp
  407a6b:	pop    ebx
  407a6c:	xchg   ebp,eax
  407a6d:	xchg   edi,eax
  407a6e:	xor    edi,edx
  407a70:	adc    DWORD PTR [esi+ebp*2],ebx
  407a73:	mov    ch,0x38
  407a75:	imul   ebx,DWORD PTR [edi],0x24a73a7
  407a7b:	cmp    edi,esi
  407a7d:	push   esp
  407a7e:	test   al,0xc6
  407a80:	xchg   ebx,eax
  407a81:	xchg   esp,eax
  407a82:	or     DWORD PTR ds:0xfaf18241,esp
  407a88:	xchg   ebx,eax
  407a89:	fadd   st,st(2)
  407a8b:	jp     0x407a15
  407a8d:	pushf  
  407a8e:	(bad)
  407a93:	jl     0x407b0a
  407a95:	out    dx,eax
  407a96:	fs xchg esp,eax
  407a98:	add    DWORD PTR [ecx+edi*1+0x5],0xffffffd4
  407a9d:	jae    0x407a51
  407a9f:	data16 or cl,BYTE PTR [esi+ebx*1]
  407aa3:	cmp    eax,0x3dca7199
  407aa8:	stc    
  407aa9:	xchg   ebx,eax
  407aaa:	loop   0x407a79
  407aac:	or     DWORD PTR [ebp*8-0xc84ce76],0xfffffff9
  407ab4:	mov    DWORD PTR [edi+0xd],ebx
  407ab7:	mov    ds:0xc061e24f,al
  407abc:	mov    eax,ds:0x6abb4790
  407ac2:	out    0xa4,eax
  407ac4:	test   eax,0x637bd566
  407ac9:	or     ebx,0xfffffff7
  407acc:	push   edx
  407acd:	push   esp
  407ace:	popa   
  407acf:	outs   dx,DWORD PTR ds:[esi]
  407ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad1:	ds call 0xea32:0x95797744
  407ad9:	xchg   edx,eax
  407ada:	jne    0x407ac5
  407adc:	sbb    esi,DWORD PTR [ebp-0x6c]
  407adf:	hlt    
  407ae0:	jecxz  0x407adc
  407ae2:	sahf   
  407ae3:	pushf  
  407ae4:	xor    esi,DWORD PTR [ebx+0x5b]
  407ae7:	sub    BYTE PTR [ebx+0x2b],ah
  407aea:	(bad)  
  407aec:	(bad)  
  407aee:	or     eax,0x88fa41c8
  407af3:	push   ds
  407af4:	push   ebp
  407af5:	repz xchg ebx,eax
  407af7:	cld    
  407af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af9:	repnz loopne 0x407b0a
  407afc:	jns    0x407ad5
  407afe:	daa    
  407aff:	inc    ebp
  407b00:	in     al,dx
  407b01:	sbb    DWORD PTR [ecx+0x6f4a59e8],esp
  407b07:	jno    0x407b40
  407b09:	mov    bl,0xef
  407b0b:	adc    ch,dl
  407b0d:	sub    DWORD PTR [edx-0x4a2c20e3],0xffffff85
  407b14:	mov    fs,WORD PTR [ebp-0xcba5589]
  407b1a:	dec    esp
  407b1b:	mov    DWORD PTR [edx],ecx
  407b1d:	mov    ebx,0x2f612e8a
  407b22:	xchg   DWORD PTR [edx-0x5335d418],esi
  407b28:	pop    esi
  407b29:	test   al,0x1a
  407b2b:	jge    0x407ad8
  407b2d:	jno    0x407b77
  407b2f:	lock pop es
  407b31:	pop    ds
  407b32:	daa    
  407b33:	popf   
  407b34:	mov    bl,0x47
  407b36:	mov    eax,ds:0xfddf3ae2
  407b3b:	std    
  407b3c:	fcmovbe st,st(3)
  407b3e:	fwait
  407b3f:	sahf   
  407b40:	jnp    0x407b58
  407b42:	shl    ch,0xe9
  407b45:	fcom   QWORD PTR [edx-0x4]
  407b48:	je     0x407b2e
  407b4a:	stos   DWORD PTR es:[edi],eax
  407b4b:	(bad)  
  407b4c:	jmp    0x80d3:0xf31be6d2
  407b53:	call   0x8669596e
  407b58:	add    eax,0x5c4cf06b
  407b5d:	out    0x93,al
  407b5f:	mov    bl,bl
  407b61:	lods   al,BYTE PTR ds:[esi]
  407b62:	inc    esi
  407b63:	jle    0x407afd
  407b65:	jnp    0x407b57
  407b67:	cmp    dh,bh
  407b69:	xor    al,0x93
  407b6b:	out    0x8c,eax
  407b6d:	dec    edx
  407b6e:	xchg   edi,eax
  407b6f:	je     0x407bef
  407b71:	adc    al,0xe6
  407b73:	cmp    al,0x7e
  407b75:	pop    ss
  407b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b77:	and    BYTE PTR [eax],al
  407b79:	out    0x74,al
  407b7b:	in     al,dx
  407b7c:	mov    dh,0x7d
  407b7e:	(bad)  
  407b7f:	je     0x407be8
  407b81:	add    esi,DWORD PTR [ecx+edi*4+0x76ec50c1]
  407b88:	sub    ch,BYTE PTR [esi-0x66]
  407b8b:	mov    ch,0xeb
  407b8d:	adc    BYTE PTR [esp+ebp*8-0x27],bl
  407b91:	pop    ebp
  407b92:	xchg   ebp,eax
  407b93:	xlat   BYTE PTR ds:[ebx]
  407b94:	jbe    0x407bf4
  407b96:	mov    eax,ds:0x1906f884
  407b9b:	mov    esp,DWORD PTR [ebx+0x1d184ff9]
  407ba1:	iret   
  407ba2:	push   edi
  407ba3:	jmp    FWORD PTR [ebp+0xe]
  407ba6:	jge    0x407c14
  407ba8:	and    DWORD PTR [esi+ebx*8],ebx
  407bab:	mov    ?,WORD PTR ds:0xa30ba419
  407bb1:	or     eax,0x72d91300
  407bb6:	push   edi
  407bb7:	(bad)  
  407bb8:	sti    
  407bb9:	inc    eax
  407bba:	xchg   esi,eax
  407bbb:	dec    ebp
  407bbc:	jmp    0x3977:0xe446e175
  407bc3:	mov    eax,ds:0x1a2f87fb
  407bc8:	inc    esi
  407bc9:	pusha  
  407bca:	xchg   edi,eax
  407bcb:	sbb    edx,ebx
  407bcd:	xor    ecx,DWORD PTR [edx+0x62]
  407bd0:	sub    BYTE PTR cs:[ebx+0x7a],al
  407bd4:	nop
  407bd5:	adc    dh,0xa4
  407bd8:	push   0x4a
  407bda:	add    al,0xd8
  407bdc:	mov    ah,0xcb
  407bde:	idiv   BYTE PTR [ebx-0x15]
  407be1:	push   ebp
  407be2:	stc    
  407be3:	mov    ch,0x1
  407be5:	cmp    al,0x16
  407be7:	loope  0x407c5a
  407be9:	xor    ah,BYTE PTR [edx]
  407beb:	icebp  
  407bec:	jecxz  0x407c12
  407bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bef:	out    0xbc,al
  407bf1:	pop    edx
  407bf2:	dec    edx
  407bf3:	lea    edx,[esi-0x19]
  407bf6:	popa   
  407bf7:	push   esp
  407bf8:	and    esp,esi
  407bfa:	fisub  WORD PTR gs:[ecx]
  407bfd:	iret   
  407bfe:	sub    dh,0x1a
  407c01:	loop   0x407b8a
  407c03:	shl    DWORD PTR [ebp+0x4c],0x23
  407c07:	loopne 0x407c12
  407c09:	pusha  
  407c0a:	je     0x407c11
  407c0c:	or     al,0x11
  407c0e:	scas   al,BYTE PTR es:[edi]
  407c0f:	mov    edx,DWORD PTR [esi+0x35]
  407c12:	enter  0xd4af,0x30
  407c16:	jl     0x407bd4
  407c18:	push   esp
  407c19:	adc    DWORD PTR ds:0x7a26e6e,edx
  407c1f:	pop    ds
  407c20:	dec    ebx
  407c21:	dec    edx
  407c22:	add    edi,DWORD PTR [edi-0x26]
  407c25:	call   0xe62f09b
  407c2a:	clc    
  407c2b:	in     eax,0xa1
  407c2d:	mov    bh,0xe2
  407c2f:	inc    edx
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0xf16fd1e6,cl
  407c46:	mov    WORD PTR [esi],es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	dec    esi
  407c50:	jnp    0x407c11
  407c52:	cmp    eax,0xf9fe8b55
  407c57:	dec    esp
  407c58:	pop    ebp
  407c59:	js     0x407c6c
  407c5b:	sbb    al,0xdf
  407c5d:	loopne 0x407c02
  407c5f:	sbb    ah,BYTE PTR [ebx]
  407c61:	jle    0x407c29
  407c63:	dec    esp
  407c64:	lahf   
  407c65:	pushf  
  407c66:	cmc    
  407c67:	xor    DWORD PTR [ecx],0x7e
  407c6a:	push   0xffffff84
  407c6c:	sub    DWORD PTR [edi+0x48d3236b],ebp
  407c72:	aad    0x8
  407c74:	outs   dx,BYTE PTR ds:[esi]
  407c75:	jnp    0x407c53
  407c77:	jnp    0x407c5a
  407c79:	(bad)  
  407c7a:	cmp    eax,0xc95d2615
  407c7f:	ret    0xda2
  407c82:	push   esi
  407c83:	push   0x87557acf
  407c88:	test   DWORD PTR [esi-0x2d],esi
  407c8b:	test   eax,0x7948d983
  407c90:	loop   0x407c2c
  407c92:	cs dec esi
  407c94:	mov    eax,ds:0x72d54568
  407c99:	xor    dl,BYTE PTR [eax+0x32]
  407c9c:	jge    0x407c80
  407c9e:	fstp   QWORD PTR [ebx-0x7be27712]
  407ca4:	mov    edx,0xb60db295
  407ca9:	mov    eax,ds:0xa358f9ec
  407cae:	mov    al,ds:0xe0bd48c6
  407cb3:	bound  ebp,QWORD PTR [esi]
  407cb5:	sbb    esp,edi
  407cb7:	jae    0x6f6943ee
  407cbd:	mov    eax,0x45cba181
  407cc2:	adc    DWORD PTR [edx+0x7529e76f],esi
  407cc8:	call   0xa434:0x2e6eade2
  407ccf:	sbb    esi,DWORD PTR [edi]
  407cd1:	ins    BYTE PTR es:[edi],dx
  407cd2:	jge    0x407cd6
  407cd4:	sti    
  407cd5:	aad    0x35
  407cd7:	add    al,0x57
  407cd9:	test   BYTE PTR [edi+eiz*1-0x50],ch
  407cdd:	bswap  esp
  407cdf:	pop    ebx
  407ce0:	xchg   BYTE PTR [esi+0x62627d8a],ah
  407ce6:	cli    
  407ce7:	pop    ds
  407ce8:	sar    BYTE PTR [ebp+0x6503e245],cl
  407cee:	mov    edi,0xb3a772b3
  407cf3:	lahf   
  407cf4:	retf   0xc3a9
  407cf7:	xor    ebx,DWORD PTR [eax+0x5c6a10d3]
  407cfd:	gs dec bx
  407d00:	dec    ebx
  407d01:	push   ds
  407d02:	xchg   ebp,eax
  407d03:	or     al,0xcb
  407d05:	inc    edx
  407d06:	inc    esp
  407d07:	cwde   
  407d08:	out    dx,eax
  407d09:	push   es
  407d0a:	(bad)  
  407d0c:	shl    al,cl
  407d0e:	and    BYTE PTR [esi-0x46f4b7b8],al
  407d14:	adc    eax,ecx
  407d16:	pushf  
  407d17:	cmp    eax,0xf5d668b7
  407d1c:	sub    bh,BYTE PTR [edx+0x641c9749]
  407d22:	mov    dl,ah
  407d24:	repnz std 
  407d26:	mov    ebx,DWORD PTR [ecx+0x34]
  407d29:	mov    bh,0xf9
  407d2b:	add    al,0x75
  407d2d:	ss mov esi,0x18bde373
  407d33:	mov    BYTE PTR [edx+0x6e],cl
  407d36:	out    0xa9,eax
  407d38:	xlat   BYTE PTR ds:[ebx]
  407d39:	sbb    DWORD PTR [ebp+0x47b13957],0x3c7a61a8
  407d43:	pop    ebx
  407d44:	and    cl,BYTE PTR [esi+0x6b04ef10]
  407d4a:	pusha  
  407d4b:	sub    eax,0x2ba54a03
  407d50:	stc    
  407d51:	sbb    eax,0x7e5228da
  407d56:	cli    
  407d57:	sbb    DWORD PTR [esi],0x35
  407d5a:	clc    
  407d5b:	hlt    
  407d5c:	popa   
  407d5d:	mov    ds:0x25861882,eax
  407d62:	add    dl,cl
  407d64:	out    dx,eax
  407d65:	aam    0x6a
  407d67:	in     eax,dx
  407d68:	fisttp QWORD PTR [edx+esi*8+0x630e3082]
  407d6f:	pop    edx
  407d70:	stos   DWORD PTR es:[edi],eax
  407d71:	inc    edx
  407d72:	sbb    eax,0x7f1d7afd
  407d77:	fwait
  407d78:	or     bh,ch
  407d7a:	mov    ebx,0xc5c7b6f9
  407d7f:	mov    bh,al
  407d81:	prefetchnta BYTE PTR [ebx]
  407d84:	and    al,0x48
  407d86:	into   
  407d87:	(bad)  
  407d8a:	scas   al,BYTE PTR es:[edi]
  407d8b:	xlat   BYTE PTR ds:[ebx]
  407d8c:	mov    al,ds:0xd44f7f12
  407d91:	mov    edx,DWORD PTR [ebx]
  407d93:	pop    esp
  407d94:	(bad)  
  407d95:	test   eax,0xd78a686e
  407d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d9b:	lods   eax,DWORD PTR ds:[esi]
  407d9c:	adc    al,0x30
  407d9e:	cli    
  407d9f:	sub    al,0x86
  407da1:	mov    ds,WORD PTR [edi]
  407da3:	div    BYTE PTR [esi-0x4c]
  407da6:	push   esi
  407da7:	fcomip st,st(0)
  407da9:	enter  0x1946,0x6c
  407dad:	inc    eax
  407dae:	mov    edx,DWORD PTR [ebx]
  407db0:	push   eax
  407db1:	cwde   
  407db2:	arpl   WORD PTR [eax+0x498db3e0],bx
  407db8:	mov    ch,0x73
  407dba:	je     0x407d48
  407dbc:	pop    es
  407dbd:	inc    edx
  407dbe:	call   FWORD PTR [ebp-0x45]
  407dc1:	sbb    cl,BYTE PTR ds:0xe630183e
  407dc7:	ins    DWORD PTR es:[edi],dx
  407dc8:	dec    eax
  407dc9:	add    DWORD PTR [ebx-0x4c],0x56
  407dcd:	ror    BYTE PTR [eax-0x7c175f24],1
  407dd3:	pop    eax
  407dd4:	xchg   esp,eax
  407dd5:	mov    bx,0x7f17
  407dd9:	jecxz  0x407df1
  407ddb:	xlat   BYTE PTR ds:[ebx]
  407ddc:	or     ebx,0xbe8e33a5
  407de2:	cmc    
  407de3:	dec    edx
  407de4:	inc    edi
  407de5:	repnz into 
  407de7:	push   cs
  407de8:	push   eax
  407de9:	mov    bl,0xf9
  407deb:	or     al,BYTE PTR [ebp+0x7131fabd]
  407df1:	pop    ecx
  407df2:	push   ss
  407df3:	addr16 mov eax,ds:0xfcfc
  407df7:	mov    ecx,0x95e168ba
  407dfc:	inc    ecx
  407dfd:	push   0xa87bfd66
  407e02:	mov    gs,WORD PTR [eax+0x7d]
  407e05:	pop    ebp
  407e06:	cmp    eax,0x36fbbcaf
  407e0b:	popf   
  407e0c:	add    al,0x78
  407e0e:	dec    edx
  407e0f:	shl    DWORD PTR [ecx],cl
  407e11:	add    al,0x89
  407e13:	popa   
  407e14:	xchg   ebp,eax
  407e15:	cs dec ebp
  407e17:	icebp  
  407e18:	and    DWORD PTR [esi-0x492c0e9f],edi
  407e1e:	les    esp,FWORD PTR [ebx]
  407e20:	push   edi
  407e21:	les    ebp,FWORD PTR [edi+edx*8]
  407e24:	or     eax,0xc40dbabc
  407e29:	retf   0x631e
  407e2c:	mov    bl,0x1
  407e2e:	ror    DWORD PTR [eax],cl
  407e30:	sub    al,0x77
  407e32:	mov    esp,0x4bf080ad
  407e37:	xchg   esp,eax
  407e38:	adc    BYTE PTR [ecx-0x2c2ef8cb],dh
  407e3e:	mov    gs,WORD PTR [ecx-0x76]
  407e41:	jns    0x407e29
  407e43:	loopne 0x407e6b
  407e45:	dec    ecx
  407e46:	leave  
  407e47:	loopne 0x407ebf
  407e49:	scas   eax,DWORD PTR es:[edi]
  407e4a:	sbb    dl,dh
  407e4c:	push   0x1d
  407e4e:	and    edx,DWORD PTR [ebx-0x1638dcba]
  407e54:	xor    ah,0x55
  407e57:	arpl   WORD PTR [ebx+0x17211643],si
  407e5d:	mov    al,0x42
  407e5f:	xchg   ch,al
  407e61:	fwait
  407e62:	int3   
  407e63:	pop    edx
  407e64:	test   eax,0x1c5a77a9
  407e69:	arpl   bp,di
  407e6b:	dec    ecx
  407e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e6d:	jb     0x407e76
  407e6f:	outs   dx,DWORD PTR ds:[esi]
  407e70:	dec    esp
  407e71:	mov    BYTE PTR [ebp+0x6c],dl
  407e74:	sbb    edi,DWORD PTR [eax]
  407e76:	mov    ebx,0xa8451296
  407e7b:	shl    ebp,1
  407e7d:	sahf   
  407e7e:	pop    es
  407e7f:	test   al,0xac
  407e81:	jne    0x407e2b
  407e83:	aas    
  407e84:	add    bh,ch
  407e86:	sub    edi,edx
  407e88:	dec    eax
  407e89:	cld    
  407e8a:	sub    al,0x71
  407e8c:	imul   edx,esi,0x71
  407e8f:	inc    eax
  407e90:	fild   QWORD PTR [esi+0x7d]
  407e93:	scas   al,BYTE PTR es:[edi]
  407e94:	mov    ah,0x54
  407e96:	pop    esi
  407e97:	test   DWORD PTR [ecx],esp
  407e99:	adc    eax,DWORD PTR es:[edi-0x27f43219]
  407ea0:	int3   
  407ea1:	(bad)  
  407ea2:	adc    al,0x64
  407ea4:	jbe    0x407e2d
  407ea6:	into   
  407ea7:	inc    BYTE PTR [edi]
  407ea9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407eac:	or     bh,BYTE PTR [esi]
  407eae:	and    al,0xce
  407eb0:	fcmovnu st,st(0)
  407eb2:	push   ds
  407eb3:	scas   al,BYTE PTR es:[edi]
  407eb4:	out    dx,al
  407eb5:	ss lahf 
  407eb7:	mov    WORD PTR [edx+0x51ca58b8],fs
  407ebd:	mov    ebx,0xc4ae8472
  407ec2:	cli    
  407ec3:	and    ah,BYTE PTR [ebx]
  407ec5:	xchg   edi,eax
  407ec6:	ins    BYTE PTR es:[edi],dx
  407ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec8:	stos   BYTE PTR es:[edi],al
  407ec9:	test   eax,0xae66ab79
  407ece:	mov    ebp,gs
  407ed0:	imul   esi,DWORD PTR [edi-0xa1ae28f],0xb4ef1bf2
  407eda:	pop    ebp
  407edb:	in     al,dx
  407edc:	loop   0x407ef8
  407ede:	out    dx,al
  407edf:	xor    DWORD PTR [edx],edi
  407ee1:	dec    ebx
  407ee2:	adc    al,0xb6
  407ee4:	pop    edx
  407ee5:	pop    esp
  407ee6:	xor    esi,ebx
  407ee8:	test   DWORD PTR [ebx],0x85f64e92
  407eee:	xchg   edi,eax
  407eef:	shr    bl,0xa5
  407ef2:	leave  
  407ef3:	fisub  DWORD PTR [esi-0x66636360]
  407ef9:	and    dh,dh
  407efb:	mov    al,ds:0xbd8dd9cc
  407f00:	pop    edx
  407f01:	xchg   ebx,eax
  407f02:	push   0x48
  407f04:	xor    al,BYTE PTR [eax-0x5]
  407f07:	xchg   DWORD PTR [esi-0x60c0986],edi
  407f0d:	sub    al,0x5
  407f0f:	enter  0xf052,0xd2
  407f13:	mov    eax,0x3241ffec
  407f18:	mov    bl,0x84
  407f1a:	adc    DWORD PTR ds:0x7c03f4a4,edi
  407f20:	mov    al,ds:0xeb9471b2
  407f25:	sbb    eax,0x94b3b8ed
  407f2a:	cmp    al,0x4e
  407f2c:	jl     0x407ef5
  407f2e:	gs inc eax
  407f30:	jmp    0x45dede1d
  407f35:	enter  0xe582,0x17
  407f39:	(bad)  
  407f3b:	stc    
  407f3c:	jo     0x407ed3
  407f3e:	fbstp  TBYTE PTR ds:0x35d890fb
  407f44:	inc    esp
  407f45:	pop    ebp
  407f46:	pop    edi
  407f47:	or     al,0xf8
  407f49:	add    eax,DWORD PTR [edi]
  407f4b:	dec    edi
  407f4c:	push   edx
  407f4d:	loope  0x407f33
  407f4f:	push   ds
  407f50:	sub    eax,0x6e89b05f
  407f55:	pop    ss
  407f56:	inc    ebp
  407f57:	pop    edx
  407f58:	or     dh,BYTE PTR [eax-0x19]
  407f5b:	mov    ds:0xc5929060,al
  407f60:	push   eax
  407f61:	popf   
  407f62:	icebp  
  407f63:	jmp    0x5666:0xd0445820
  407f6a:	xchg   edx,eax
  407f6b:	jne    0x407fd9
  407f6d:	dec    ebx
  407f6e:	mov    BYTE PTR [esi],ah
  407f70:	jbe    0x407f09
  407f72:	pusha  
  407f73:	hlt    
  407f74:	jbe    0x407fb7
  407f76:	test   al,0x7f
  407f78:	pop    edi
  407f79:	sahf   
  407f7a:	xchg   esp,eax
  407f7b:	mov    bl,0x11
  407f7d:	push   ss
  407f7e:	popa   
  407f7f:	std    
  407f80:	fild   WORD PTR [ebx+0x472b82f]
  407f86:	pop    eax
  407f87:	sti    
  407f88:	ja     0x407fa6
  407f8a:	popf   
  407f8b:	xchg   DWORD PTR [eax+0x2b4936a2],edx
  407f91:	mov    gs,WORD PTR [edx-0xc0df8da]
  407f97:	sub    eax,0x8beac33b
  407f9c:	imul   esi,DWORD PTR [ebx],0x3e1c2a03
  407fa2:	hlt    
  407fa3:	loope  0x407f41
  407fa5:	xor    eax,eax
  407fa7:	ret    
  407fa8:	mov    ebp,0xc4cc9a7d
  407fad:	inc    ebx
  407fae:	bound  ecx,QWORD PTR [ebx]
  407fb0:	or     ebp,DWORD PTR [ebx+ebx*2]
  407fb3:	lahf   
  407fb4:	rol    eax,cl
  407fb6:	xchg   DWORD PTR [ecx+0x1f],ebx
  407fb9:	push   edx
  407fba:	mov    esi,0x446ff631
  407fbf:	fnsave ds:0x329f905d
  407fc5:	icebp  
  407fc6:	clc    
  407fc7:	jmp    FWORD PTR [ebp-0x146b9466]
  407fcd:	fcmove st,st(0)
  407fcf:	aam    0xda
  407fd1:	fldenv [esi]
  407fd3:	aas    
  407fd4:	xor    esi,DWORD PTR [ebx]
  407fd6:	xlat   BYTE PTR ds:[ebx]
  407fd7:	std    
  407fd8:	inc    edx
  407fd9:	mov    ecx,0xb3bf8ff3
  407fde:	jg     0x407f70
  407fe0:	add    al,0x49
  407fe2:	dec    eax
  407fe3:	dec    ecx
  407fe4:	fist   WORD PTR [eax-0xaab4890]
  407fea:	push   0x79
  407fec:	jne    0x40800c
  407fee:	mov    bh,0xbc
  407ff0:	lods   eax,DWORD PTR ds:[esi]
  407ff1:	mov    ebx,0x34319b05
  407ff6:	dec    eax
  407ff7:	and    edx,DWORD PTR [edi-0xc3f3fe4]
  407ffd:	test   al,0x50
  407fff:	pop    ebx
  408000:	std    
  408001:	sti    
  408002:	jl     0x407fd3
  408004:	mov    edi,0x1d54b796
  408009:	push   esi
  40800a:	jo     0x408032
  40800c:	inc    eax
  40800d:	pop    esi
  40800e:	mov    edi,0xfdf0012c
  408013:	push   ebp
  408014:	iret   
  408015:	inc    ecx
  408016:	mov    dh,BYTE PTR [edx-0x23d42a6]
  40801c:	jne    0x40809b
  40801e:	leave  
  40801f:	into   
  408020:	inc    edx
  408021:	pop    es
  408022:	jmp    0x5cc7077a
  408027:	adc    cl,BYTE PTR [edx-0x76]
  40802a:	mov    dh,0x62
  40802c:	adc    esi,DWORD PTR [esi+0x2adb9b01]
  408032:	int    0x1
  408034:	xor    esp,DWORD PTR [edx]
  408036:	adc    BYTE PTR [edi+ebp*1+0x17],ah
  40803a:	add    eax,0xebfe31eb
  40803f:	outs   dx,DWORD PTR ds:[esi]
  408040:	ins    BYTE PTR es:[edi],dx
  408041:	mov    ss,WORD PTR [ebx]
  408043:	xchg   ecx,eax
  408044:	inc    edx
  408045:	mov    al,0x52
  408047:	dec    edx
  408048:	fcom   QWORD PTR [ebx]
  40804a:	sbb    al,0x34
  40804c:	iret   
  40804d:	mov    DWORD PTR [ebp*4-0x1fbe20fe],edx
  408054:	xor    esp,ebp
  408056:	push   ebp
  408057:	inc    esi
  408058:	mul    BYTE PTR [edx+0x675ef23a]
  40805e:	mov    ch,0x58
  408060:	ret    
  408061:	scas   eax,DWORD PTR es:[edi]
  408062:	xlat   BYTE PTR ds:[ebx]
  408063:	rcl    DWORD PTR [ebx+0x635b995b],0x1d
  40806a:	inc    ebp
  40806b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40806c:	mov    esp,0x8e0ef7b9
  408071:	shr    DWORD PTR [eax],cl
  408073:	inc    edx
  408074:	call   0x936b84cc
  408079:	pop    esi
  40807a:	cmp    al,0x9a
  40807c:	dec    esi
  40807d:	div    BYTE PTR [esi]
  40807f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408080:	popa   
  408081:	jno    0x40805c
  408083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408084:	push   es
  408085:	call   0x1a4b:0x2253a80e
  40808c:	test   eax,0xb67b8c5a
  408091:	div    DWORD PTR [edx-0x69]
  408094:	and    eax,0x8dda02a7
  408099:	sar    BYTE PTR [ecx-0x42e886ad],0x1e
  4080a0:	xchg   dl,dl
  4080a2:	mov    dl,0xf4
  4080a4:	jns    0x408111
  4080a6:	shr    DWORD PTR [ecx],0x6d
  4080a9:	cdq    
  4080aa:	jmp    0x6eedcd51
  4080af:	nop
  4080b0:	mov    bl,0xe6
  4080b2:	push   esp
  4080b3:	push   eax
  4080b4:	mov    esp,0x26345f5a
  4080b9:	leave  
  4080ba:	and    eax,0x490ba0af
  4080bf:	mov    ch,0xda
  4080c1:	cwde   
  4080c2:	xor    al,0x9d
  4080c4:	mov    esi,0xecbf4adf
  4080c9:	sbb    BYTE PTR [ecx],0x32
  4080cc:	add    cl,cl
  4080ce:	scas   eax,DWORD PTR es:[edi]
  4080cf:	adc    DWORD PTR [eax-0x41d03e12],ebx
  4080d5:	out    dx,al
  4080d6:	popa   
  4080d7:	iret   
  4080d8:	jno    0x4080da
  4080da:	(bad)
  4080dd:	lahf   
  4080de:	cmp    edi,ebx
  4080e0:	pop    ss
  4080e1:	sbb    BYTE PTR [edi-0x729544b3],ch
  4080e7:	scas   eax,DWORD PTR es:[edi]
  4080e8:	(bad)  
  4080e9:	dec    di
  4080eb:	aas    
  4080ec:	cs sbb edi,ebx
  4080ef:	sar    BYTE PTR [eax+eiz*8+0x7d],1
  4080f3:	push   esp
  4080f4:	les    edi,FWORD PTR [edx-0x6396f4e]
  4080fa:	outs   dx,DWORD PTR ds:[esi]
  4080fb:	and    ebx,DWORD PTR [edx]
  4080fd:	(bad)  
  4080ff:	or     eax,0x9759e0a3
  408104:	lds    esp,FWORD PTR [esi+0x7d3983cc]
  40810a:	xor    edi,DWORD PTR [ebx+eiz*2]
  40810d:	ds pusha 
  40810f:	int3   
  408110:	sub    BYTE PTR [eax+0x30f7f3bf],0x3f
  408117:	cmp    DWORD PTR [edi+edx*8],esp
  40811a:	or     DWORD PTR [eax],ebp
  40811c:	dec    eax
  40811d:	mov    esp,0xa38678c0
  408122:	push   0xffffffa7
  408124:	bound  ecx,QWORD PTR [ebx]
  408126:	sbb    al,0xeb
  408128:	mov    ?,WORD PTR [ebx+0x70]
  40812b:	shl    DWORD PTR [edi],0x98
  40812e:	add    dl,bl
  408130:	pop    edi
  408131:	mov    eax,ds:0xc019d5f4
  408136:	mov    ecx,0xb3435a82
  40813b:	dec    eax
  40813c:	sbb    DWORD PTR [ebx-0x45ef76ca],esp
  408142:	pop    edx
  408143:	push   ds
  408144:	cld    
  408145:	ja     0x408136
  408147:	in     al,0xb5
  408149:	xor    al,0x6a
  40814b:	clc    
  40814c:	ja     0x40819d
  40814e:	pop    edx
  40814f:	add    DWORD PTR [edi+0x5c],ebx
  408152:	arpl   WORD PTR [esi],sp
  408154:	imul   ebx,DWORD PTR [edi-0x487fe7bf],0x77
  40815b:	add    DWORD PTR [ecx],edx
  40815d:	and    eax,0x5296fb46
  408162:	jb     0x4081cf
  408164:	xlat   BYTE PTR ds:[ebx]
  408165:	enter  0x73b8,0x42
  408169:	jno    0x408168
  40816b:	mov    edi,0xb5d07aca
  408170:	and    al,0x45
  408172:	or     eax,0x3d1805a9
  408177:	js     0x4081bd
  408179:	sahf   
  40817a:	sahf   
  40817b:	xor    al,0x61
  40817d:	push   ebp
  40817e:	push   ds
  40817f:	outs   dx,BYTE PTR ds:[esi]
  408180:	pop    edi
  408181:	ja     0x408116
  408183:	xchg   ebp,eax
  408184:	in     al,0xc8
  408186:	fs or  eax,0xa7c4eeee
  40818c:	shl    DWORD PTR [ebp-0x5a8dc4b5],1
  408192:	stos   DWORD PTR es:[edi],eax
  408193:	xchg   ebx,eax
  408194:	leave  
  408195:	dec    ecx
  408196:	push   0x32a38c6d
  40819b:	jb     0x4081c8
  40819d:	addr16 (bad) 
  40819f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a0:	outs   dx,BYTE PTR ds:[esi]
  4081a1:	pusha  
  4081a2:	pop    edx
  4081a3:	and    bl,BYTE PTR [eax+0x2a880cac]
  4081a9:	xor    DWORD PTR [ebp+edi*4+0x16],esi
  4081ad:	into   
  4081ae:	add    eax,0x92a65d56
  4081b3:	ins    BYTE PTR es:[edi],dx
  4081b4:	outs   dx,DWORD PTR ds:[esi]
  4081b5:	enter  0x70e5,0xbf
  4081b9:	inc    edx
  4081ba:	xlat   BYTE PTR ds:[ebx]
  4081bb:	mov    DWORD PTR [esi],ebp
  4081bd:	jmp    0x4026:0x395e6edd
  4081c4:	lds    ebp,FWORD PTR [eax+0x58]
  4081c7:	mov    dh,0x3d
  4081c9:	dec    esp
  4081ca:	cmp    DWORD PTR [esi+0x79],ecx
  4081cd:	pop    ds
  4081ce:	jl     0x4081f2
  4081d0:	in     eax,0xe
  4081d2:	sub    BYTE PTR [edi+0x37],dl
  4081d5:	hlt    
  4081d6:	pop    ebp
  4081d7:	lock imul BYTE PTR [ebx-0x26760360]
  4081de:	icebp  
  4081df:	test   BYTE PTR [esi-0x18],ah
  4081e2:	add    BYTE PTR [ebx-0x6a697ee6],bh
  4081e8:	sub    al,0xeb
  4081ea:	neg    edi
  4081ec:	push   0x5bae6dca
  4081f1:	cmp    BYTE PTR [esi-0x1b15b353],ah
  4081f7:	hlt    
  4081f8:	mov    ds:0x6b186c0b,eax
  4081fd:	les    esi,FWORD PTR [ecx-0x5b416824]
  408203:	hlt    
  408204:	leave  
  408205:	sub    bl,BYTE PTR [ebp+0x457857e8]
  40820b:	jne    0x40826c
  40820d:	retf   
  40820e:	sbb    bh,BYTE PTR [ebx]
  408210:	sbb    eax,0x6a3aa05b
  408215:	push   edx
  408216:	scas   eax,DWORD PTR es:[edi]
  408217:	ret    
  408218:	ret    0xe8f8
  40821b:	push   edx
  40821c:	sbb    DWORD PTR [esi],ebp
  40821e:	lahf   
  40821f:	sbb    BYTE PTR [esi+eax*4-0x5],ch
  408223:	pop    eax
  408224:	sub    eax,0x801810b8
  408229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40822a:	xor    BYTE PTR ds:0x1a62900f,bh
  408230:	das    
  408231:	cmp    DWORD PTR [edi],ebp
  408233:	ins    BYTE PTR es:[edi],dx
  408234:	pop    eax
  408235:	scas   al,BYTE PTR es:[edi]
  408236:	rol    DWORD PTR [ebp+0x1ca6f5cd],0x93
  40823d:	xchg   ebx,eax
  40823e:	adc    ebp,DWORD PTR [eax+0x1a3f7df0]
  408244:	bsf    esp,DWORD PTR [ebp-0x2f]
  408248:	sbb    DWORD PTR [ecx+0x6a],0x4c
  40824c:	out    0x7b,al
  40824e:	mov    cl,0x16
  408250:	xchg   esp,eax
  408251:	hlt    
  408252:	jbe    0x40822a
  408254:	pop    ebx
  408255:	mov    BYTE PTR [ebp+0xdcbd833],bh
  40825b:	push   edi
  40825c:	mov    bh,0x9
  40825e:	scas   eax,DWORD PTR es:[edi]
  40825f:	in     al,0xa5
  408261:	loope  0x4082b9
  408263:	jne    0x40823b
  408265:	adc    al,0xc
  408267:	fnstenv [ecx]
  408269:	pushf  
  40826a:	mov    esi,0x2977ed7b
  40826f:	imul   DWORD PTR [ecx+0x21]
  408272:	adc    DWORD PTR [esp+edi*1],ebp
  408275:	dec    edi
  408276:	call   0x60579c7c
  40827b:	sbb    BYTE PTR [ebx-0x54],dh
  40827e:	push   cs
  40827f:	mov    esi,?
  408281:	inc    esp
  408282:	xchg   ecx,eax
  408283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408284:	mov    dh,0xee
  408286:	or     ebp,DWORD PTR [edi+esi*8+0xafe9e4f]
  40828d:	push   ecx
  40828e:	adc    cl,BYTE PTR [edx-0x7c]
  408291:	pop    ds
  408292:	or     esp,ebx
  408294:	mov    ebp,0x413f6ef1
  408299:	push   esp
  40829a:	enter  0xc7a2,0xcc
  40829e:	xchg   esi,eax
  40829f:	shr    DWORD PTR [ebp-0x15a02cb7],0xac
  4082a6:	test   BYTE PTR [esi+0xab54cd1],bl
  4082ac:	leave  
  4082ad:	test   BYTE PTR [esi+0x74],bl
  4082b0:	mov    ebp,0x7417552c
  4082b5:	aaa    
  4082b6:	xchg   esp,eax
  4082b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082b8:	ret    0xb615
  4082bb:	add    DWORD PTR [esi+0x558c526c],esi
  4082c1:	lea    edi,[ebp+0x1f488d6d]
  4082c7:	hlt    
  4082c8:	out    0x20,eax
  4082ca:	cwde   
  4082cb:	cdq    
  4082cc:	ins    DWORD PTR es:[edi],dx
  4082cd:	jns    0x408325
  4082cf:	inc    edi
  4082d0:	mov    dh,0xda
  4082d2:	imul   edi,DWORD PTR [ebx],0x2f
  4082d5:	popf   
  4082d6:	add    eax,0x9ee60632
  4082db:	aam    0x97
  4082dd:	jnp    0x4082b2
  4082df:	xchg   ebx,eax
  4082e0:	div    DWORD PTR [ebp-0x2e]
  4082e3:	fcom   DWORD PTR [esi]
  4082e5:	mov    esi,DWORD PTR [ebp-0x353ccd6e]
  4082eb:	xacquire xchg DWORD PTR [eax+0x26],esi
  4082ef:	ins    BYTE PTR es:[edi],dx
  4082f0:	bound  edi,QWORD PTR [esi+0x55]
  4082f3:	adc    edx,DWORD PTR [ecx+0x17]
  4082f6:	push   eax
  4082f7:	or     al,0x43
  4082f9:	in     al,dx
  4082fa:	pop    edi
  4082fb:	scas   eax,DWORD PTR es:[edi]
  4082fc:	mul    DWORD PTR [ecx+0x27d0cddd]
  408302:	cli    
  408303:	mov    bh,0x15
  408305:	mov    ds:0x92531f6e,eax
  40830a:	ss inc esp
  40830c:	pop    edi
  40830d:	mov    ebp,0xe10e4e39
  408312:	mov    eax,0x2c587db3
  408317:	shl    BYTE PTR ss:[ebx],cl
  40831a:	jo     0x4082b1
  40831c:	cmp    eax,0xaf1820bd
  408321:	cwde   
  408322:	mov    bl,0x8b
  408324:	enter  0x8f42,0x7f
  408328:	dec    esp
  408329:	lea    ecx,[edx-0x1cfeec5d]
  40832f:	inc    ebp
  408330:	cli    
  408331:	ja     0x4083a2
  408333:	xchg   esp,eax
  408334:	fild   DWORD PTR ss:[ecx]
  408337:	or     bh,ah
  408339:	xchg   esp,eax
  40833a:	je     0x408343
  40833c:	fild   DWORD PTR [ebx+ebx*4]
  40833f:	sbb    al,0xf0
  408341:	fs dec esi
  408343:	shl    BYTE PTR [esp+eiz*2-0x63],cl
  408347:	xor    eax,0x34bf22c6
  40834c:	cli    
  40834d:	cmp    esi,DWORD PTR [ecx-0x44]
  408350:	xchg   ebp,eax
  408351:	push   esi
  408352:	cs push cs
  408354:	jp     0x408310
  408356:	mov    edx,0x80e23c37
  40835b:	ss mov esi,0x9b1e23a4
  408361:	add    DWORD PTR [edi],ebp
  408363:	daa    
  408364:	ret    
  408365:	push   cs
  408366:	popf   
  408367:	xchg   ebp,ecx
  408369:	xor    al,0x84
  40836b:	loop   0x40830c
  40836d:	jmp    0x1ac015f7
  408372:	ds xchg ebp,eax
  408374:	inc    esi
  408375:	cwde   
  408376:	and    eax,0x64049b55
  40837b:	dec    ecx
  40837c:	out    0x66,al
  40837e:	xchg   esi,eax
  40837f:	mov    ds:0xb613e0a8,eax
  408384:	inc    eax
  408385:	mov    ?,WORD PTR [ebp+0x75b59452]
  40838b:	jns    0x4083e2
  40838d:	(bad)  
  40838e:	lock bound edx,QWORD PTR [ebx-0x37c877ea]
  408395:	stc    
  408396:	js     0x4083cd
  408398:	sub    DWORD PTR [eax+eax*1],ebp
  40839b:	xchg   esi,eax
  40839c:	dec    edx
  40839d:	and    al,0x40
  40839f:	pushf  
  4083a0:	pushf  
  4083a1:	xchg   esi,eax
  4083a2:	jmp    0x4083c9
  4083a4:	push   ss
  4083a5:	mov    BYTE PTR es:[edi-0x47],bh
  4083a9:	out    0xbe,al
  4083ab:	mov    bh,0x67
  4083ad:	fistp  QWORD PTR [edi]
  4083af:	pop    ebx
  4083b0:	jmp    0x4083a2
  4083b2:	dec    esi
  4083b3:	stos   BYTE PTR es:[edi],al
  4083b4:	movzx  esi,cx
  4083b7:	mov    ah,0x67
  4083b9:	mov    ecx,0xde9b09d0
  4083be:	fcmovnb st,st(5)
  4083c0:	cdq    
  4083c1:	call   0xad770c94
  4083c6:	imul   esi,esi,0xffffff93
  4083c9:	sahf   
  4083ca:	jns    0x4083b1
  4083cc:	test   ah,0x48
  4083cf:	lahf   
  4083d0:	add    DWORD PTR [edi],edx
  4083d2:	fwait
  4083d3:	xchg   ebx,eax
  4083d4:	mov    al,0x6d
  4083d6:	xor    bh,ch
  4083d8:	or     ebx,edi
  4083da:	xor    BYTE PTR [ebx],bh
  4083dc:	or     al,0x4
  4083de:	cdq    
  4083df:	fxch   st(6)
  4083e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083e2:	xor    BYTE PTR [esi-0x52],al
  4083e5:	add    eax,0x98547b81
  4083ea:	test   DWORD PTR [esi+edx*4],ebx
  4083ed:	and    eax,0xb7cf4bb8
  4083f2:	int    0x81
  4083f4:	cdq    
  4083f5:	adc    DWORD PTR [esi+ebx*4+0x64ff5ab6],edi
  4083fc:	xor    edx,DWORD PTR [ebx]
  4083fe:	dec    edi
  4083ff:	xchg   ebp,eax
  408400:	inc    ecx
  408401:	popa   
  408402:	lods   eax,DWORD PTR ds:[esi]
  408403:	sbb    esp,esi
  408405:	stos   DWORD PTR es:[edi],eax
  408406:	cmp    dh,BYTE PTR [edi-0x64136b20]
  40840c:	leave  
  40840d:	cmp    al,0x9
  40840f:	in     al,0xb9
  408411:	add    BYTE PTR [esi],cl
  408413:	xchg   ebx,eax
  408414:	je     0x40846c
  408416:	adc    ebx,ebx
  408418:	fdiv   st,st(6)
  40841a:	ss stos DWORD PTR es:[edi],eax
  40841c:	jns    0x4083c5
  40841e:	inc    esi
  40841f:	cmc    
  408420:	adc    ecx,eax
  408422:	jmp    0xd6136e0a
  408427:	add    eax,0x6a5d5e1d
  40842c:	lock pop ecx
  40842e:	aas    
  40842f:	sub    eax,0x3bc0aa91
  408434:	sbb    DWORD PTR [ecx],esp
  408436:	jp     0x40841a
  408438:	push   esp
  408439:	enter  0x83ba,0x41
  40843d:	push   eax
  40843e:	popaw  
  408440:	add    eax,0xe32ea46d
  408445:	sbb    al,0x8e
  408447:	lods   eax,DWORD PTR ds:[esi]
  408448:	scas   al,BYTE PTR es:[edi]
  408449:	sub    edx,DWORD PTR [esi-0x7e]
  40844c:	addr16 clc 
  40844e:	or     edx,DWORD PTR [ecx+0x49]
  408451:	retf   0x9a71
  408454:	inc    ebx
  408455:	mov    dl,dh
  408457:	push   edi
  408458:	fwait
  408459:	inc    edi
  40845a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40845b:	ja     0x408402
  40845d:	mov    ?,WORD PTR [esi]
  40845f:	pop    ebx
  408460:	or     al,0x87
  408462:	repz mov dl,0x96
  408465:	call   0x5a7d564
  40846a:	ins    BYTE PTR es:[edi],dx
  40846b:	int3   
  40846c:	push   ss
  40846d:	mov    esp,0x39442ba2
  408472:	jmp    0x40848a
  408474:	mov    dh,0x6d
  408476:	jp     0x4083f9
  408478:	ja     0x408404
  40847a:	mov    dh,0x9d
  40847c:	sbb    esp,ebx
  40847e:	jo     0x4084ee
  408480:	push   ecx
  408481:	mov    esp,0x641b442a
  408486:	lea    eax,[ebx]
  408488:	std    
  408489:	repnz (bad) 
  40848b:	int3   
  40848c:	xchg   DWORD PTR [esi],eax
  40848e:	clc    
  40848f:	push   eax
  408490:	nop
  408491:	adc    DWORD PTR [esi-0x393837de],ebx
  408497:	rcr    BYTE PTR [ebx-0x2e],cl
  40849a:	push   0xc7b207c7
  40849f:	std    
  4084a0:	adc    eax,0x749febe3
  4084a5:	lahf   
  4084a6:	imul   edx,ecx,0xffffff9c
  4084a9:	out    dx,eax
  4084aa:	or     al,0x6e
  4084ac:	rcl    dh,cl
  4084ae:	sbb    ch,ch
  4084b0:	iret   
  4084b1:	loop   0x408455
  4084b3:	push   eax
  4084b4:	and    eax,DWORD PTR [esi-0x18966113]
  4084ba:	repnz dec edi
  4084bc:	dec    ebx
  4084bd:	pop    edi
  4084be:	shl    esp,cl
  4084c0:	push   es
  4084c1:	pop    DWORD PTR [ecx]
  4084c3:	jecxz  0x408542
  4084c5:	dec    edi
  4084c6:	shr    dh,cl
  4084c8:	dec    esi
  4084c9:	xor    eax,0x53eccfd0
  4084ce:	(bad)  
  4084cf:	jmp    0x67bf:0x83d2bec
  4084d6:	xlat   BYTE PTR ds:[ebx]
  4084d7:	aaa    
  4084d8:	repz enter 0x99a6,0x2a
  4084dd:	outs   dx,BYTE PTR es:[esi]
  4084df:	call   0xfcdb:0x6f6b9a50
  4084e6:	adc    esp,DWORD PTR [edi-0x7e]
  4084e9:	(bad)  
  4084ea:	arpl   WORD PTR [ebp+esi*2+0x743ce3df],cx
  4084f1:	and    dh,0x82
  4084f4:	pop    edx
  4084f5:	ret    0x9fe1
  4084f8:	push   edx
  4084f9:	fiadd  WORD PTR [edi-0x5e]
  4084fc:	sub    al,0x78
  4084fe:	xchg   esi,eax
  4084ff:	jbe    0x408531
  408501:	and    bl,bl
  408503:	and    al,0xbf
  408505:	icebp  
  408506:	shr    DWORD PTR [edx-0x5bfa329e],0x72
  40850d:	xor    edi,DWORD PTR [esi]
  40850f:	pop    es
  408510:	inc    ebp
  408511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408512:	mov    edx,0x7ee8d968
  408517:	dec    edi
  408518:	jecxz  0x4084c2
  40851a:	cwde   
  40851b:	pop    ss
  40851c:	hlt    
  40851d:	jge    0x4084f3
  40851f:	mov    eax,ds:0x52d9b1e5
  408524:	mov    ch,0xa1
  408526:	mov    ds:0x1fda56a0,eax
  40852b:	fmul   DWORD PTR [edx]
  40852d:	aam    0x85
  40852f:	push   ecx
  408530:	shr    DWORD PTR [eax],cl
  408532:	pop    ebp
  408533:	cmp    dh,BYTE PTR [ebp+0x20]
  408536:	sbb    dl,ah
  408538:	repz mov ?,esi
  40853b:	lock aam 0xb
  40853e:	xor    DWORD PTR [ebx],edi
  408540:	ins    BYTE PTR es:[edi],dx
  408541:	jmp    0x9376b987
  408546:	xchg   ebp,eax
  408547:	mul    BYTE PTR [edx+0x37301f21]
  40854d:	lods   al,BYTE PTR ds:[esi]
  40854e:	mov    esp,0x7c45082
  408553:	push   edi
  408554:	stos   BYTE PTR es:[edi],al
  408555:	and    BYTE PTR [ecx-0x31],cl
  408558:	aad    0x21
  40855a:	jge    0x4085db
  40855c:	leave  
  40855d:	xchg   esi,eax
  40855e:	lods   al,BYTE PTR ds:[esi]
  40855f:	cvtps2pd xmm1,QWORD PTR [edx]
  408562:	jns    0x4085e0
  408564:	or     ecx,DWORD PTR [esi-0x5ea7fc3]
  40856a:	frstor [edi*2+0x23045663]
  408571:	in     eax,0x68
  408573:	dec    eax
  408574:	inc    ebx
  408575:	loope  0x408523
  408577:	jno    0x4085e4
  408579:	jb     0x40850f
  40857b:	pop    ds
  40857c:	mov    bp,0xb31f
  408580:	arpl   WORD PTR [edi+0x75],di
  408583:	mov    ebx,0xb43640dd
  408588:	repz lahf 
  40858a:	jp     0x40852a
  40858c:	clc    
  40858d:	(bad)  
  40858e:	dec    ecx
  40858f:	popa   
  408590:	sub    dh,BYTE PTR [esi+0x59]
  408593:	push   0xdb318d9
  408598:	push   edx
  408599:	sti    
  40859a:	cli    
  40859b:	sbb    ecx,ebp
  40859d:	(bad)  
  40859e:	ins    BYTE PTR es:[edi],dx
  40859f:	ret    0x9841
  4085a2:	leave  
  4085a3:	adc    DWORD PTR [edi-0x43d54e08],0xa3933119
  4085ad:	adc    edi,DWORD PTR [edi+0x2b84daec]
  4085b3:	mov    ds:0x103236d1,al
  4085b8:	pop    ebx
  4085b9:	add    al,0xc1
  4085bb:	inc    eax
  4085bc:	aaa    
  4085bd:	push   esp
  4085be:	test   eax,0xdaab4373
  4085c3:	push   ss
  4085c4:	adc    ebp,DWORD PTR [esi+edx*8]
  4085c7:	mov    al,ds:0x272e2898
  4085cc:	(bad)  
  4085cd:	xchg   esi,eax
  4085ce:	(bad)  
  4085cf:	mov    ebp,0x678721f8
  4085d4:	fwait
  4085d5:	push   ecx
  4085d6:	mov    ds:0xc705196a,al
  4085db:	into   
  4085dc:	aas    
  4085dd:	jmp    0x512ee884
  4085e2:	push   esi
  4085e3:	outs   dx,DWORD PTR ds:[esi]
  4085e4:	mov    ss,esi
  4085e6:	sbb    BYTE PTR ds:0x4e6b6c2b,bl
  4085ec:	xchg   edi,eax
  4085ed:	shl    ecx,cl
  4085ef:	cmp    eax,0x5b16d485
  4085f4:	xchg   ecx,eax
  4085f5:	cmc    
  4085f6:	xchg   ecx,eax
  4085f7:	sahf   
  4085f8:	and    eax,0x222d17bd
  4085fd:	sahf   
  4085fe:	adc    dl,BYTE PTR [edi+0x76d1822c]
  408604:	add    ecx,DWORD PTR ds:0x1e931ebc
  40860a:	iret   
  40860b:	jmp    0x4085ef
  40860d:	add    BYTE PTR [edx+0xe849af9],dl
  408613:	mov    ebx,0xdc3522ad
  408618:	inc    esi
  408619:	bound  edi,QWORD PTR [eax]
  40861b:	or     ecx,eax
  40861d:	lods   eax,DWORD PTR ds:[esi]
  40861e:	(bad)  
  40861f:	sti    
  408620:	inc    edi
  408621:	out    dx,al
  408622:	jmp    0x90e0b7e8
  408627:	dec    ebp
  408628:	push   esp
  408629:	jecxz  0x4085ca
  40862b:	add    al,0xd0
  40862d:	lods   eax,DWORD PTR ds:[esi]
  40862e:	push   0x510c314a
  408633:	out    dx,eax
  408634:	and    al,0x35
  408636:	cmp    edx,DWORD PTR [edi]
  408638:	dec    eax
  408639:	lods   al,BYTE PTR ds:[esi]
  40863a:	out    dx,al
  40863b:	mov    ss,WORD PTR [ebp+0x2680b489]
  408641:	xchg   DWORD PTR [edx-0x2d3878d3],ebp
  408647:	data16 mov ah,BYTE PTR [ecx-0x1858325b]
  40864e:	push   0xffffffbd
  408650:	ss in  eax,0x7c
  408653:	stos   DWORD PTR es:[edi],eax
  408654:	pop    ecx
  408655:	cmp    ebx,DWORD PTR [eax+eiz*2+0x2e81f60b]
  40865c:	in     al,0x8
  40865e:	and    bl,BYTE PTR [ecx]
  408660:	ja     0x408640
  408662:	iret   
  408663:	arpl   WORD PTR [ebx+0x78],di
  408666:	push   es
  408667:	xchg   DWORD PTR [edi+0x44785615],ecx
  40866d:	stos   BYTE PTR es:[edi],al
  40866e:	(bad)  
  40866f:	dec    ecx
  408670:	xlat   BYTE PTR ds:[ebx]
  408671:	jmp    0x4f38:0x5167863b
  408678:	mov    BYTE PTR [edi],dh
  40867a:	pop    esi
  40867b:	out    0xeb,al
  40867d:	addr16 sbb eax,0x1348bfc5
  408683:	fcmovnu st,st(2)
  408685:	scas   al,BYTE PTR es:[edi]
  408686:	mov    DWORD PTR [ebx+0x3f3ae641],esp
  40868c:	add    ebp,esi
  40868e:	xchg   edi,eax
  40868f:	daa    
  408690:	xchg   BYTE PTR [eax],ah
  408692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408693:	data16 mov al,ds:0x136acec2
  408699:	inc    eax
  40869a:	(bad)  
  40869b:	lods   eax,DWORD PTR ds:[esi]
  40869c:	call   0x96f5c248
  4086a1:	mov    ecx,0x4290d10a
  4086a6:	inc    edx
  4086a7:	mov    esp,edx
  4086a9:	add    al,0xd4
  4086ab:	mov    dl,0x93
  4086ad:	std    
  4086ae:	cld    
  4086af:	lea    eax,[eax+0x9]
  4086b2:	hlt    
  4086b3:	call   0x89baa599
  4086b8:	inc    ebx
  4086b9:	int3   
  4086ba:	iret   
  4086bb:	sub    cl,BYTE PTR ds:0x707279c9
  4086c1:	mov    al,0xc7
  4086c3:	pop    ebx
  4086c4:	mov    ds:0x90a22ede,eax
  4086c9:	daa    
  4086ca:	add    BYTE PTR [ecx+0x55eea52],0xfe
  4086d1:	cmp    BYTE PTR ds:0x211f7903,dl
  4086d7:	jb     0x40865f
  4086d9:	cmp    DWORD PTR [edi-0x3c],0x76ae3f70
  4086e0:	adc    DWORD PTR [ebx-0x4d],edx
  4086e3:	jmp    0x11fa:0xbc440e63
  4086ea:	mov    ebx,0x808ba4a8
  4086ef:	sbb    DWORD PTR [esi],0x47e320ad
  4086f5:	adc    edi,edi
  4086f7:	pop    ebp
  4086f8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4086fa:	rcl    DWORD PTR [esi+edx*4-0x624cd8f3],0xdc
  408702:	shl    BYTE PTR [eax+0x4f],1
  408705:	sbb    bl,cl
  408707:	je     0x408701
  408709:	int    0x24
  40870b:	or     dl,BYTE PTR [esi-0x1945424]
  408711:	and    bh,cl
  408713:	test   BYTE PTR [edx-0x70],0xf4
  408717:	ins    DWORD PTR es:[edi],dx
  408718:	ror    al,0xa7
  40871b:	mov    eax,0xfa48594b
  408720:	jno    0x40875f
  408722:	in     al,0xb8
  408724:	jbe    0x40874d
  408726:	bound  ebx,QWORD PTR [ebp+0x3fc64d3e]
  40872c:	mov    ch,0x30
  40872e:	loope  0x40878d
  408730:	sub    al,0x90
  408732:	sti    
  408733:	adc    eax,0x82b11422
  408738:	xchg   esp,eax
  408739:	mov    al,ds:0xe4a647a6
  40873e:	push   esp
  40873f:	push   0x99b4e1cd
  408744:	dec    esp
  408745:	in     al,dx
  408746:	jmp    0xf202:0x97529da2
  40874d:	xchg   edx,eax
  40874f:	sti    
  408750:	rol    DWORD PTR [edx-0x4b],1
  408753:	add    BYTE PTR [esi-0x2d373817],bl
  408759:	cmp    eax,0x8d14c17
  40875e:	das    
  40875f:	test   eax,0x53ab4b7
  408764:	add    BYTE PTR [edi+0xf1ed7de],dl
  40876a:	leave  
  40876b:	iret   
  40876c:	shl    BYTE PTR [esi],cl
  40876e:	repz push esi
  408770:	test   BYTE PTR [ebp+0x51],0xdb
  408774:	add    al,0x50
  408776:	mov    bl,0x31
  408778:	sbb    al,0xcf
  40877a:	push   ebp
  40877b:	push   ds
  40877c:	out    0x9c,eax
  40877e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40877f:	retf   
  408780:	sar    BYTE PTR [edi+ecx*4-0x6244d30b],1
  408787:	frstor [edx-0x37586ee6]
  40878d:	clc    
  40878e:	adc    eax,ecx
  408790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408791:	ret    0x4885
  408794:	ret    0x720b
  408797:	mov    dh,0x42
  408799:	vmovss xmm6,xmm5,xmm6
  40879d:	mov    edi,0x3e75fffd
  4087a2:	jnp    0x4087ac
  4087a4:	mov    esp,0xa9439af
  4087a9:	ror    BYTE PTR [ecx+0x38bbe207],cl
  4087af:	mov    ah,0x92
  4087b1:	push   ebp
  4087b2:	mov    esp,0xc0f70847
  4087b7:	cs test eax,0xd51e375f
  4087bd:	pop    ebx
  4087be:	lahf   
  4087bf:	mov    al,ds:0x31b108bb
  4087c4:	jge    0x4087e2
  4087c6:	in     eax,dx
  4087c7:	enter  0x5159,0x19
  4087cb:	xor    ah,BYTE PTR [edi]
  4087cd:	ds cwde 
  4087cf:	into   
  4087d0:	inc    esi
  4087d1:	sbb    al,0x20
  4087d3:	mov    esi,0x893f45ed
  4087d8:	es in  al,0x1b
  4087db:	mov    ds:0x9a14603b,al
  4087e0:	aas    
  4087e1:	pop    esi
  4087e2:	add    al,BYTE PTR [edx-0x80]
  4087e5:	out    0x4b,eax
  4087e7:	jmp    0x1ba045cc
  4087ec:	mov    ds:0x8f21c476,eax
  4087f1:	sub    al,0x9b
  4087f3:	test   BYTE PTR [edi+0xf70c700],bl
  4087f9:	test   eax,0x5a5e063f
  4087fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ff:	push   edi
  408800:	mul    BYTE PTR [edi]
  408802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408803:	pop    esi
  408804:	inc    edi
  408805:	and    BYTE PTR [ebx-0x14],bh
  408808:	in     al,0x1b
  40880a:	or     BYTE PTR [eax],ah
  40880c:	rcr    BYTE PTR [eax-0x28bf1536],cl
  408812:	gs mov cl,0x4e
  408815:	xchg   ebp,eax
  408816:	sub    esp,DWORD PTR [ecx-0x1ddf396]
  40881c:	rol    DWORD PTR [edx],cl
  40881e:	jecxz  0x408898
  408820:	sahf   
  408821:	push   ss
  408822:	call   0x1774:0xf17f7c79
  408829:	outs   dx,DWORD PTR ds:[esi]
  40882a:	mov    cl,0xa2
  40882c:	int3   
  40882d:	fisubr DWORD PTR [eax]
  40882f:	ret    
  408830:	or     ebp,esp
  408832:	jns    0x40882e
  408834:	daa    
  408835:	jnp    0x40882f
  408837:	jecxz  0x4087cd
  408839:	lds    eax,FWORD PTR [ecx+0x16]
  40883c:	add    bh,bl
  40883e:	cli    
  40883f:	adc    al,al
  408841:	dec    ebx
  408842:	inc    ebp
  408843:	fstp   QWORD PTR [ecx]
  408845:	mov    ds:0x8ee0e1a3,al
  40884a:	mov    WORD PTR [ebx+0x50],es
  40884d:	sub    al,0x99
  40884f:	mov    cl,0x2
  408851:	loop   0x40884c
  408853:	mov    ch,BYTE PTR [edi+edi*1]
  408856:	inc    esi
  408857:	sar    BYTE PTR [ebx-0xb3345c3],cl
  40885d:	push   edi
  40885e:	jbe    0x4088bc
  408860:	(bad)  
  408861:	add    BYTE PTR [esi+0x66c9cba3],cl
  408867:	shl    DWORD PTR [edi+edi*8-0x307223e1],cl
  40886e:	push   edi
  40886f:	xchg   BYTE PTR [edi],ah
  408871:	or     edi,DWORD PTR [ebx]
  408873:	retw   0x5869
  408877:	pusha  
  408878:	enter  0x4e46,0xda
  40887c:	cmp    edi,DWORD PTR [eax]
  40887e:	mov    eax,ds:0x2f42e165
  408883:	sbb    ebp,DWORD PTR [ebp+0x20]
  408886:	ds enter 0x7b30,0x82
  40888b:	push   ecx
  40888c:	fs lock xchg al,dh
  408890:	mov    dl,0x5d
  408892:	sahf   
  408893:	dec    edi
  408894:	xor    DWORD PTR [ebp-0x5aa92724],ebp
  40889a:	pop    es
  40889b:	mov    gs,WORD PTR [edx]
  40889d:	int    0xa7
  40889f:	and    al,BYTE PTR [ebx+0x38be36fc]
  4088a5:	pop    esi
  4088a6:	aam    0x82
  4088a8:	retf   
  4088a9:	push   ebx
  4088aa:	pushf  
  4088ab:	jo     0x408883
  4088ad:	mov    edi,0xa7cee7c0
  4088b2:	or     dh,BYTE PTR ds:0x8876922c
  4088b8:	or     eax,0x2f0431d4
  4088bd:	les    ebp,FWORD PTR ds:0x9b4c72ff
  4088c3:	rcl    BYTE PTR [edx+0x22a00177],0x8b
  4088ca:	xor    al,0x38
  4088cc:	cmp    DWORD PTR [ebp+0x19],eax
  4088cf:	jmp    0x79292bec
  4088d4:	lods   eax,DWORD PTR ds:[esi]
  4088d5:	idiv   esp
  4088d7:	dec    ecx
  4088d8:	in     eax,dx
  4088d9:	test   eax,0x330cf2c6
  4088de:	call   0x8551:0x4553f80d
  4088e5:	add    al,0x41
  4088e7:	add    bl,BYTE PTR [ebx-0x1b]
  4088ea:	jmp    0x3dc81ed0
  4088ef:	test   DWORD PTR [eax+0xd991e9a],edx
  4088f5:	loope  0x408895
  4088f7:	enter  0xc0c,0x4c
  4088fb:	jmp    0x6232ab06
  408900:	stc    
  408901:	pusha  
  408902:	fmul   QWORD PTR [edi-0x33e5312f]
  408908:	bound  esp,QWORD PTR [esi]
  40890a:	js     0x408986
  40890c:	popf   
  40890d:	sar    DWORD PTR [edi-0x30],0x2
  408911:	inc    ebx
  408912:	fwait
  408913:	jl     0x40889f
  408915:	pop    ds
  408916:	hlt    
  408917:	sbb    eax,0x4ef3e5e5
  40891c:	sbb    BYTE PTR [esi-0x26d359cb],cl
  408922:	and    DWORD PTR [edi],esi
  408924:	fwait
  408925:	push   0xfffffffb
  408927:	mov    edx,0x689bb9d5
  40892c:	lahf   
  40892d:	ss and edi,edx
  408930:	jne    0x408929
  408932:	xlat   BYTE PTR ds:[ebx]
  408933:	jne    0x4088f7
  408935:	ror    BYTE PTR [ecx+0x7ec336b3],cl
  40893b:	cld    
  40893c:	stos   DWORD PTR es:[edi],eax
  40893d:	mov    cl,0x71
  40893f:	(bad)  
  408941:	fdivr  DWORD PTR [edi-0x2e]
  408944:	leave  
  408945:	inc    ebp
  408946:	mov    DWORD PTR [ecx+0x8b52552],0x2e643f76
  408950:	cli    
  408951:	sub    ch,BYTE PTR [edi-0x77ee3968]
  408957:	out    0xdb,al
  408959:	sbb    DWORD PTR [edi+ebp*1],ecx
  40895c:	lods   eax,DWORD PTR ds:[esi]
  40895d:	xchg   edi,eax
  40895e:	xor    al,0xe3
  408960:	popf   
  408961:	dec    edx
  408962:	xchg   esp,eax
  408963:	xor    eax,0x82696d2e
  408968:	fstp   DWORD PTR [ebp+ebp*8+0x5d]
  40896c:	test   eax,0xe5769a96
  408971:	fild   DWORD PTR [ecx+0x4b7d3ad6]
  408977:	shr    BYTE PTR [edi+0x22],cl
  40897a:	call   0x22266114
  40897f:	cmp    ch,BYTE PTR [edi-0x1a4a7259]
  408985:	and    eax,0xd8837600
  40898a:	div    DWORD PTR [ebx-0x14220832]
  408990:	or     ah,bl
  408992:	retf   
  408993:	dec    dl
  408995:	dec    edi
  408996:	bnd jo 0x4089b4
  408999:	aas    
  40899a:	or     BYTE PTR [esi+0x554f93cf],dl
  4089a0:	nop
  4089a1:	stos   BYTE PTR es:[edi],al
  4089a2:	cmp    BYTE PTR [edi-0x7d],dl
  4089a5:	xor    DWORD PTR [edx+0x6b],0xffffff81
  4089a9:	ret    
  4089aa:	into   
  4089ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ac:	xchg   DWORD PTR [ecx+0x38],ecx
  4089af:	inc    ecx
  4089b0:	in     al,0xeb
  4089b2:	pop    ds
  4089b3:	cdq    
  4089b4:	loop   0x4089ae
  4089b6:	jb     0x408a0e
  4089b8:	pop    eax
  4089b9:	int3   
  4089ba:	ficom  WORD PTR ds:0xbf8ef757
  4089c0:	adc    eax,0x46f33928
  4089c5:	pop    es
  4089c6:	inc    edi
  4089c7:	jecxz  0x408a28
  4089c9:	mov    ah,0x8a
  4089cb:	mov    esi,0x88408aa7
  4089d0:	pop    esi
  4089d1:	lahf   
  4089d2:	repnz mov bl,0x3f
  4089d5:	pop    ebp
  4089d6:	arpl   WORD PTR ds:0xa5163379,dx
  4089dc:	scas   al,BYTE PTR es:[edi]
  4089dd:	pop    ss
  4089de:	rol    BYTE PTR [edx],1
  4089e0:	mov    bl,0x8a
  4089e2:	outs   dx,DWORD PTR fs:[esi]
  4089e4:	(bad)  
  4089e5:	fcomp  QWORD PTR [esi+ebp*8+0x49907df0]
  4089ec:	lods   eax,DWORD PTR ds:[esi]
  4089ed:	pop    ebp
  4089ee:	push   ss
  4089ef:	push   esp
  4089f0:	(bad)  
  4089f1:	repz pop ecx
  4089f3:	adc    al,0xad
  4089f5:	test   eax,0x85f3248e
  4089fa:	shl    BYTE PTR [ecx],cl
  4089fc:	frstpm(287 only) 
  4089fe:	adc    edi,ebp
  408a00:	cmp    bl,BYTE PTR [esi]
  408a02:	inc    eax
  408a03:	mov    ch,0xac
  408a05:	dec    ecx
  408a06:	and    bl,dh
  408a08:	xor    al,0x18
  408a0a:	loope  0x408a59
  408a0c:	sub    al,BYTE PTR [edx]
  408a0e:	pop    ecx
  408a0f:	std    
  408a10:	xor    al,0x3b
  408a12:	xchg   edx,eax
  408a13:	mov    ebx,0x708cbe46
  408a18:	jo     0x4089b6
  408a1a:	gs (bad) 
  408a1c:	pop    ebp
  408a1d:	xchg   esi,eax
  408a1e:	cmp    eax,0x29db731c
  408a23:	sbb    al,0xf7
  408a25:	cmc    
  408a26:	outs   dx,DWORD PTR ds:[esi]
  408a27:	dec    eax
  408a28:	clc    
  408a29:	leave  
  408a2a:	add    eax,esi
  408a2c:	jmp    0x88711f8b
  408a31:	sbb    BYTE PTR [eax-0x2f6bb937],ah
  408a37:	add    DWORD PTR [esi-0x1928429a],eax
  408a3d:	or     BYTE PTR [ebp+0x1607ff30],bl
  408a43:	xchg   ebx,eax
  408a44:	or     BYTE PTR [eax+0x3],0x34
  408a48:	cmp    dh,dh
  408a4a:	loop   0x408a65
  408a4c:	inc    edx
  408a4d:	psraw  mm0,QWORD PTR [edx-0x52]
  408a51:	push   ds
  408a52:	hlt    
  408a53:	sub    al,0xdb
  408a55:	aam    0xb3
  408a57:	fld    QWORD PTR [esi+0x6b]
  408a5a:	cli    
  408a5b:	cmc    
  408a5c:	cli    
  408a5d:	push   edi
  408a5e:	xchg   ecx,eax
  408a5f:	sbb    BYTE PTR [ebx],bh
  408a61:	cwde   
  408a62:	push   0x5dc79953
  408a67:	add    eax,0x32d45720
  408a6c:	outs   dx,BYTE PTR ds:[esi]
  408a6d:	adc    eax,0xa178ae0d
  408a72:	fmul   QWORD PTR [edi+0x2cab10f4]
  408a78:	dec    dh
  408a7a:	add    al,BYTE PTR [ebx]
  408a7c:	mov    dh,0xc9
  408a7e:	das    
  408a7f:	adc    al,BYTE PTR [edi]
  408a81:	cmp    al,0x9
  408a83:	(bad)  
  408a86:	(bad)  
  408a87:	xchg   DWORD PTR [eax],edx
  408a89:	mov    eax,0x223619cd
  408a8e:	xor    al,0xc7
  408a90:	ds jmp 0xefb3:0xafb10f54
  408a98:	ins    DWORD PTR es:[edi],dx
  408a99:	jno    0x408aaf
  408a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a9c:	test   al,0x2b
  408a9e:	aam    0x2e
  408aa0:	mov    edi,0x5911c162
  408aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa6:	rol    DWORD PTR [esi+ecx*2],1
  408aa9:	arpl   ax,cx
  408aab:	xchg   esp,eax
  408aac:	mov    ecx,0x5d15bd7a
  408ab1:	imul   DWORD PTR [edi]
  408ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab4:	jl     0x408af5
  408ab6:	mov    eax,0xbb22a6b5
  408abb:	cmp    BYTE PTR [ecx],ch
  408abd:	xchg   esi,eax
  408abe:	cli    
  408abf:	inc    edi
  408ac0:	in     al,dx
  408ac1:	addr16 je 0x408b13
  408ac4:	jnp    0x408a7a
  408ac6:	sti    
  408ac7:	jo     0x408a72
  408ac9:	mov    dh,BYTE PTR [ebx-0x4c200329]
  408acf:	sbb    al,BYTE PTR [ecx-0x7f]
  408ad2:	lods   al,BYTE PTR ds:[esi]
  408ad3:	jmp    0x43ee7f69
  408ad8:	xchg   ebp,eax
  408ad9:	mov    ds:0x68e295b6,eax
  408ade:	int3   
  408adf:	jo     0x408b4d
  408ae1:	loop   0x408b31
  408ae3:	fimul  WORD PTR [edx+0x5d]
  408ae6:	mov    ebp,0x3dd9abff
  408aeb:	shr    edi,0xd
  408aee:	call   0xb69e:0x6cc306f6
  408af5:	pop    ebp
  408af6:	pop    esp
  408af7:	ret    0x218b
  408afa:	push   0xc8f94751
  408aff:	inc    edx
  408b00:	cmp    al,0x44
  408b02:	add    BYTE PTR [ebx-0x3e332e8b],0xa8
  408b09:	cld    
  408b0a:	lock dec ecx
  408b0c:	rol    dl,cl
  408b0e:	ss repnz lods eax,DWORD PTR ds:[esi]
  408b12:	dec    ebp
  408b13:	test   DWORD PTR [ecx],ebp
  408b15:	scas   eax,DWORD PTR es:[edi]
  408b16:	bnd jle 0x408b26
  408b19:	cmp    DWORD PTR [eax+0x25],ecx
  408b1c:	icebp  
  408b1d:	mov    dl,0xd7
  408b1f:	cmp    eax,0x416772a4
  408b24:	xchg   esi,eax
  408b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b26:	and    al,0x4d
  408b28:	std    
  408b29:	(bad)  
  408b2a:	leave  
  408b2b:	or     eax,DWORD PTR [ebp+0x6505336f]
  408b31:	pop    edi
  408b32:	push   esp
  408b33:	dec    edx
  408b34:	xor    ch,BYTE PTR [ecx+0x1ec753bc]
  408b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b3b:	mov    ebp,0x725e41eb
  408b40:	(bad)  
  408b41:	sub    eax,0x633a8e06
  408b46:	(bad)  
  408b47:	xchg   ecx,eax
  408b48:	test   DWORD PTR ds:0x4629e169,ebx
  408b4e:	xchg   DWORD PTR [edx+ecx*1-0x10],edi
  408b52:	jmp    0x7513:0xdab5eb08
  408b59:	loopne 0x408b2c
  408b5b:	jecxz  0x408b69
  408b5d:	cdq    
  408b5e:	add    BYTE PTR [eax-0x5],dh
  408b61:	nop
  408b62:	mov    bl,0x9f
  408b64:	xchg   ecx,esp
  408b66:	scas   al,BYTE PTR es:[edi]
  408b67:	paddd  mm7,QWORD PTR [esi+eiz*4]
  408b6b:	fiadd  WORD PTR [esi+eax*1-0x4b7a33dd]
  408b72:	es call 0x3bb2:0x8a658146
  408b7a:	sub    al,0x39
  408b7c:	adc    esi,DWORD PTR [esi]
  408b7e:	std    
  408b7f:	sbb    cl,BYTE PTR [edi-0x5b]
  408b82:	jl     0x408bac
  408b84:	loope  0x408b73
  408b86:	mov    ebp,DWORD PTR [ebp-0x4729750b]
  408b8c:	dec    esi
  408b8d:	xor    edx,DWORD PTR [ebx+0x4]
  408b90:	fcom   st(3)
  408b92:	xchg   esi,eax
  408b93:	push   ebx
  408b94:	inc    esi
  408b95:	int    0x34
  408b97:	inc    esp
  408b98:	mov    dl,0xf7
  408b9a:	sbb    ebp,0xfffffff2
  408b9d:	jae    0x408bf5
  408b9f:	inc    ebp
  408ba0:	pop    ecx
  408ba1:	push   cs
  408ba2:	test   esp,esi
  408ba4:	dec    edi
  408ba6:	arpl   WORD PTR [eax+edx*1],bx
  408ba9:	sbb    DWORD PTR [ecx],edi
  408bab:	shl    BYTE PTR [esi],0x74
  408bae:	cmc    
  408baf:	scas   eax,DWORD PTR es:[edi]
  408bb0:	jne    0x408b74
  408bb2:	shl    bl,1
  408bb4:	sahf   
  408bb5:	pop    esi
  408bb6:	jnp    0x408c13
  408bb8:	sbb    eax,0x3ed8bc23
  408bbd:	jl     0x408b61
  408bbf:	in     al,dx
  408bc0:	fs pop eax
  408bc2:	test   eax,0xc4bf5b9
  408bc7:	test   eax,0x53c98fc6
  408bcc:	test   al,0x3c
  408bce:	rcr    DWORD PTR [esi-0x72],1
  408bd1:	fild   QWORD PTR [ecx+0x23]
  408bd4:	xchg   BYTE PTR [edi-0x63e870c0],ch
  408bda:	inc    edi
  408bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bdc:	loop   0x408b93
  408bde:	in     al,dx
  408bdf:	fist   WORD PTR [edi+0x38]
  408be2:	pushf  
  408be3:	mov    bh,0xf9
  408be5:	jecxz  0x408bba
  408be7:	jnp    0x408c2b
  408be9:	fnstsw WORD PTR [ebp+0x4f3a1c06]
  408bef:	imul   esi,DWORD PTR [edx],0x4f
  408bf2:	ret    0x9c6
  408bf5:	jb     0x408ba4
  408bf7:	jle    0x408bc8
  408bf9:	jl     0x408c3b
  408bfb:	inc    ebx
  408bfc:	fs pop ecx
  408bfe:	sub    dl,bh
  408c00:	pop    ebx
  408c01:	daa    
  408c02:	cmp    esi,DWORD PTR [edi+0x2]
  408c05:	out    dx,eax
  408c06:	mov    gs,eax
  408c08:	add    eax,0x13a7b3c4
  408c0d:	icebp  
  408c0e:	push   es
  408c0f:	outs   dx,BYTE PTR ds:[esi]
  408c10:	dec    edi
  408c11:	and    BYTE PTR [esi+0x25],bh
  408c14:	ins    BYTE PTR es:[edi],dx
  408c15:	lock cmp ebp,DWORD PTR [eax]
  408c18:	imul   al
  408c1a:	jecxz  0x408c14
  408c1c:	enter  0x8bed,0xa4
  408c20:	in     al,0x9d
  408c22:	sbb    edx,DWORD PTR [ecx+eiz*1]
  408c25:	dec    ebp
  408c26:	sbb    eax,0x21079779
  408c2b:	test   BYTE PTR [ebx+edx*4+0xd7117a5],al
  408c32:	rcl    DWORD PTR [edi-0x357e3ce1],0xc5
  408c39:	lods   al,BYTE PTR ds:[esi]
  408c3a:	fdiv   DWORD PTR [edx+0x32b0f69b]
  408c40:	pop    ecx
  408c41:	retf   0xc114
  408c44:	jo     0x408cc2
  408c46:	js     0x408bd9
  408c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c49:	rdpmc  
  408c4b:	cwde   
  408c4c:	jb     0x408c9c
  408c4e:	mov    edi,0xb87075f9
  408c53:	xchg   BYTE PTR [esp+eiz*8],dh
  408c56:	rol    DWORD PTR [edi],1
  408c58:	mov    ah,BYTE PTR [ecx+0x1a2b6269]
  408c5e:	out    dx,eax
  408c5f:	and    al,0xd
  408c61:	add    edx,DWORD PTR [edx+0x15a16c70]
  408c67:	fld    QWORD PTR [ebx-0x7554ebab]
  408c6d:	jmp    0x408c44
  408c6f:	aas    
  408c70:	push   0xc6e9b079
  408c75:	dec    edx
  408c76:	int    0x39
  408c78:	leave  
  408c79:	mov    DWORD PTR [ebx],esp
  408c7b:	pop    ss
  408c7c:	fcom   st(5)
  408c7e:	in     al,0x79
  408c80:	mov    ebx,0x5a76fa30
  408c85:	adc    DWORD PTR [ebx+0x67],esi
  408c88:	dec    esi
  408c89:	sub    BYTE PTR [ecx+eiz*8],ah
  408c8c:	adc    eax,0x7b6797f9
  408c91:	xchg   edi,eax
  408c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c93:	mov    ebp,0xfbd434ee
  408c98:	fs mov dl,0x23
  408c9b:	das    
  408c9c:	std    
  408c9d:	outs   dx,DWORD PTR ds:[esi]
  408c9e:	inc    esi
  408c9f:	loope  0x408cb3
  408ca1:	mov    al,ds:0x75395e0c
  408ca6:	adc    DWORD PTR [ebx-0xf8cfe0d],eax
  408cac:	xchg   ebp,eax
  408cad:	imul   BYTE PTR [edx+0x64873262]
  408cb3:	idiv   BYTE PTR [ecx+ebx*8]
  408cb6:	loop   0x408d31
  408cb8:	fstp   DWORD PTR [esi]
  408cba:	or     cl,ah
  408cbc:	or     dl,BYTE PTR ds:[ebx+0x1cfd7f2d]
  408cc3:	mov    esi,0xd7f40bb3
  408cc8:	mov    ds:0x57eb4099,al
  408ccd:	add    edi,DWORD PTR [ebp-0x44cd8831]
  408cd3:	jp     0x408c7a
  408cd5:	std    
  408cd6:	cli    
  408cd7:	mov    ds:0x9db4a85d,al
  408cdc:	scas   al,BYTE PTR es:[edi]
  408cdd:	xchg   esi,eax
  408cde:	retf   
  408cdf:	mov    bh,0x6
  408ce1:	mov    esp,esp
  408ce3:	in     eax,dx
  408ce4:	gs popf 
  408ce6:	dec    ecx
  408ce7:	inc    ebx
  408ce8:	lahf   
  408ce9:	fstp   TBYTE PTR [ebp-0x7ce60b0e]
  408cef:	and    eax,0x26915324
  408cf4:	pop    ebp
  408cf5:	pop    es
  408cf6:	popa   
  408cf7:	pop    ebp
  408cf8:	and    DWORD PTR [eax+eax*2-0x19],0x53707f9c
  408d00:	xor    eax,DWORD PTR [esi-0x4a0ec22f]
  408d06:	lods   eax,DWORD PTR ds:[esi]
  408d07:	cwde   
  408d08:	or     eax,0x4738140f
  408d0d:	xor    ecx,DWORD PTR [edx-0x38acc60e]
  408d13:	mov    ?,WORD PTR [esi+0x65]
  408d16:	push   cs
  408d17:	add    esp,ecx
  408d19:	lods   al,BYTE PTR ds:[esi]
  408d1a:	fmul   QWORD PTR [edx+eiz*4]
  408d1d:	mov    dl,0x2e
  408d1f:	cli    
  408d20:	mov    ah,0x9c
  408d22:	xor    eax,0x120b24a5
  408d27:	fwait
  408d28:	cmp    DWORD PTR [ebx-0x630e1bfc],ecx
  408d2e:	dec    ebp
  408d2f:	mov    bh,BYTE PTR [edx-0x8ef4dee]
  408d35:	test   cl,0x3
  408d38:	xchg   ecx,eax
  408d39:	scas   eax,DWORD PTR es:[edi]
  408d3a:	retf   0x7873
  408d3d:	cs pusha 
  408d3f:	shl    DWORD PTR ds:[esi],cl
  408d42:	std    
  408d43:	(bad)  
  408d44:	data16 into 
  408d46:	jns    0x408d58
  408d48:	add    esp,ebx
  408d4a:	mov    bh,0x18
  408d4c:	adc    esi,DWORD PTR [edx-0x20262b4c]
  408d52:	xchg   esp,eax
  408d53:	arpl   WORD PTR [eax],bx
  408d55:	out    0x43,eax
  408d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d58:	(bad)  
  408d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d5a:	add    eax,DWORD PTR [ebx-0x7d]
  408d5d:	push   esp
  408d5e:	(bad)  
  408d5f:	popf   
  408d60:	mov    DWORD PTR [ecx+0x120befe8],ebx
  408d66:	mov    bh,0x18
  408d68:	cld    
  408d69:	sar    DWORD PTR [ebx-0x7b287066],0xa1
  408d70:	mov    ch,0x4e
  408d72:	and    esp,DWORD PTR [edx+0x3e6d6096]
  408d78:	mov    al,0xaf
  408d7a:	(bad)  
  408d7b:	dec    esi
  408d7c:	sub    esi,ecx
  408d7e:	push   ds
  408d7f:	ins    DWORD PTR es:[edi],dx
  408d80:	arpl   WORD PTR [ebx+0x6a931b61],dx
  408d86:	xchg   BYTE PTR [edx],al
  408d88:	jmp    0xc8c6e51
  408d8d:	inc    esp
  408d8e:	xchg   edi,eax
  408d8f:	cmp    bl,BYTE PTR [edx-0x75]
  408d92:	in     eax,0xba
  408d94:	fwait
  408d95:	xchg   esi,eax
  408d96:	inc    eax
  408d97:	mov    ds:0xc576ddba,eax
  408d9c:	push   ebp
  408d9d:	jmp    0x408dce
  408d9f:	lods   al,BYTE PTR ds:[esi]
  408da0:	xchg   esp,eax
  408da1:	cs push ds
  408da3:	je     0x408e05
  408da5:	mov    BYTE PTR [ebx+eax*4+0x5f],bh
  408da9:	sub    BYTE PTR [ebp+0x5f],dl
  408dac:	icebp  
  408dad:	lods   eax,DWORD PTR ds:[esi]
  408dae:	mov    es,WORD PTR [edx-0x38678ac7]
  408db4:	lahf   
  408db5:	or     DWORD PTR [ebp-0x2720c098],edx
  408dbb:	in     eax,0x65
  408dbd:	mov    dh,0x3b
  408dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc0:	repnz aas 
  408dc2:	outs   dx,DWORD PTR ds:[esi]
  408dc3:	dec    ecx
  408dc4:	and    DWORD PTR [edx+0x60],esp
  408dc7:	ins    BYTE PTR es:[edi],dx
  408dc8:	popf   
  408dc9:	cmc    
  408dca:	stc    
  408dcb:	jne    0x408dd8
  408dcd:	je     0x408e12
  408dcf:	out    dx,eax
  408dd0:	and    BYTE PTR ds:0xd813b713,0x9a
  408dd7:	xor    eax,0x9f504ba2
  408ddc:	xchg   esp,eax
  408ddd:	mov    al,0x46
  408ddf:	(bad)  
  408de0:	js     0x408e15
  408de2:	in     eax,0x2e
  408de4:	stos   DWORD PTR es:[edi],eax
  408de5:	out    dx,al
  408de6:	loopne 0x408dad
  408de8:	or     eax,0xaedc8f9e
  408ded:	stc    
  408dee:	in     eax,dx
  408def:	jecxz  0x408e5a
  408df1:	add    DWORD PTR [esi+0x52],edi
  408df4:	add    bl,BYTE PTR [edi]
  408df6:	fwait
  408df7:	test   dl,dl
  408df9:	int    0xd6
  408dfb:	in     al,0x67
  408dfd:	and    esp,edi
  408dff:	jne    0x408dd5
  408e01:	mov    DWORD PTR [edx+0x3b914893],ebx
  408e07:	mov    ds:0xe71658bd,al
  408e0c:	xchg   ebx,eax
  408e0d:	mov    ds,WORD PTR [eax+0x71]
  408e10:	jl     0x408df2
  408e12:	add    dh,dl
  408e14:	jmp    0x408e14
  408e16:	mov    al,ds:0xd57f4e4c
  408e1b:	pop    edi
  408e1c:	outs   dx,BYTE PTR ds:[esi]
  408e1d:	dec    eax
  408e1e:	sbb    al,0x2e
  408e20:	daa    
  408e21:	lock mov ds:0x921d1887,al
  408e27:	xor    eax,0x12fa77c3
  408e2c:	sbb    al,0xd4
  408e2e:	fnstsw WORD PTR [ebx+0x317d3538]
  408e34:	idiv   DWORD PTR [eax]
  408e36:	neg    BYTE PTR [edx+edx*2-0x15]
  408e3a:	sub    edx,esp
  408e3c:	mov    cl,0x2f
  408e3e:	ja     0x408e4f
  408e40:	jle    0x408dcc
  408e42:	pop    ebp
  408e43:	mov    esp,0xd21e937e
  408e48:	scas   eax,DWORD PTR es:[edi]
  408e49:	add    al,0x97
  408e4b:	ins    DWORD PTR es:[edi],dx
  408e4c:	mov    eax,ds:0xbd81cc4e
  408e51:	pop    eax
  408e52:	ins    BYTE PTR es:[edi],dx
  408e53:	inc    edi
  408e54:	lock sahf 
  408e56:	enter  0xab6a,0xc7
  408e5a:	push   eax
  408e5b:	in     al,0xf3
  408e5d:	xor    eax,0x7e42d02d
  408e62:	into   
  408e63:	clc    
  408e64:	jmp    0x600e:0x76ad940d
  408e6b:	jmp    0x4d62747c
  408e70:	and    WORD PTR [ecx+edx*8-0x63],bp
  408e75:	stos   DWORD PTR es:[edi],eax
  408e76:	ret    
  408e77:	out    0x80,eax
  408e79:	xor    eax,0x7a81522a
  408e7e:	push   cs
  408e7f:	add    al,BYTE PTR [esi+esi*2]
  408e82:	push   edx
  408e83:	push   edi
  408e84:	aam    0xbe
  408e86:	xchg   ebp,eax
  408e87:	aam    0x54
  408e89:	mov    ebx,0xba18cf8b
  408e8e:	or     DWORD PTR [edx-0x68db624],ebx
  408e94:	mov    ch,0x15
  408e96:	retf   
  408e97:	cmc    
  408e98:	sub    BYTE PTR [edi-0x24e833a],0x3e
  408e9f:	scas   al,BYTE PTR es:[edi]
  408ea0:	dec    ebx
  408ea1:	and    al,0x7d
  408ea3:	call   FWORD PTR [ecx]
  408ea5:	iret   
  408ea6:	loop   0x408e64
  408ea8:	stos   BYTE PTR es:[edi],al
  408ea9:	call   0x7d5815ea
  408eae:	call   0xd659:0xfe0d3995
  408eb5:	mov    ds:0x4c7faf78,eax
  408eba:	es xchg ecx,eax
  408ebc:	cmp    eax,0x67341829
  408ec1:	(bad)  
  408ec3:	and    eax,0x32ecc366
  408ec8:	jb     0x408e89
  408eca:	ins    DWORD PTR es:[edi],dx
  408ecb:	inc    ecx
  408ecc:	clc    
  408ecd:	ins    DWORD PTR es:[edi],dx
  408ece:	hlt    
  408ecf:	sub    BYTE PTR [edx+0x73760f5e],ch
  408ed5:	push   cs
  408ed6:	in     eax,dx
  408ed7:	mov    bl,0x52
  408ed9:	and    ebx,DWORD PTR [eax+0x23]
  408edc:	mov    cl,0xb9
  408ede:	mov    ss,eax
  408ee0:	xchg   DWORD PTR [edx+0x6d138334],ebp
  408ee6:	lahf   
  408ee7:	dec    esi
  408ee8:	in     al,dx
  408ee9:	test   DWORD PTR [edi],ebp
  408eeb:	and    bh,dl
  408eed:	xchg   edx,eax
  408eee:	in     eax,dx
  408eef:	cmp    DWORD PTR [ebx],ebp
  408ef1:	sub    al,0xd7
  408ef3:	dec    esi
  408ef4:	shl    BYTE PTR [esi+0x24eab4d5],0x9e
  408efb:	call   0x5673c087
  408f00:	pop    ebp
  408f01:	and    ebx,DWORD PTR [eax-0x585999f4]
  408f07:	in     eax,0x29
  408f09:	jle    0x408ee1
  408f0b:	xlat   BYTE PTR ds:[ebx]
  408f0c:	jmp    0xedcb7d91
  408f11:	add    DWORD PTR [ecx+0x7e],edx
  408f14:	sub    al,0xd2
  408f16:	ss inc edi
  408f18:	add    BYTE PTR [ebp+esi*1+0x6a],dl
  408f1c:	xchg   edx,eax
  408f1d:	mov    WORD PTR [ebp-0x3e],?
  408f20:	adc    ebx,DWORD PTR [edi+0x4ef858c7]
  408f26:	rcr    BYTE PTR [edx],1
  408f28:	mov    eax,0xf3964f85
  408f2d:	and    ebx,edi
  408f2f:	jno    0x408eb5
  408f31:	xor    BYTE PTR [ecx],cl
  408f33:	ss xchg esi,eax
  408f35:	ss inc edi
  408f37:	and    eax,0xbd035601
  408f3c:	push   ebx
  408f3d:	pop    edx
  408f3e:	loop   0x408ee6
  408f40:	out    0xb5,al
  408f42:	shl    DWORD PTR [ebx+ecx*2+0x71],1
  408f46:	ins    DWORD PTR es:[edi],dx
  408f47:	inc    ebx
  408f48:	cmp    al,0x38
  408f4a:	fmul   DWORD PTR [ebp-0x4e37d700]
  408f50:	pushf  
  408f51:	push   edi
  408f52:	adc    ah,bh
  408f54:	icebp  
  408f55:	sbb    al,0x4e
  408f57:	dec    ebx
  408f58:	add    bl,BYTE PTR ds:0x256b2e0a
  408f5e:	(bad)  
  408f5f:	into   
  408f60:	mov    dl,al
  408f62:	js     0x408f65
  408f64:	mov    bl,0x26
  408f66:	stos   BYTE PTR es:[edi],al
  408f67:	fcmovnbe st,st(2)
  408f69:	cmp    cl,ah
  408f6b:	test   DWORD PTR [eax+0x6a323a6b],edi
  408f71:	sub    eax,0xfc3b31d7
  408f76:	daa    
  408f77:	(bad)  
  408f78:	xlat   BYTE PTR ds:[ebx]
  408f79:	fnstcw WORD PTR [ebx+0x46]
  408f7c:	xchg   edi,eax
  408f7d:	inc    ebp
  408f7e:	sub    eax,0xdbc17d6
  408f83:	push   ebx
  408f84:	cmp    BYTE PTR [eax-0x3d3b6ead],dh
  408f8a:	sbb    ch,ch
  408f8c:	sbb    al,0xf9
  408f8e:	dec    esp
  408f8f:	in     al,0x7c
  408f91:	mov    eax,ds:0xc355dc1
  408f96:	mov    al,ds:0x415a3bf6
  408f9b:	fwait
  408f9c:	(bad)  
  408f9d:	jge    0x408f51
  408f9f:	push   0x5e
  408fa1:	xchg   DWORD PTR [edx+ebx*4+0x49],ecx
  408fa5:	push   ss
  408fa6:	dec    ebp
  408fa7:	xor    ch,BYTE PTR [eax+0x5c]
  408faa:	mov    edi,0x89075a07
  408faf:	pop    ds
  408fb0:	std    
  408fb1:	test   DWORD PTR ds:0x43ed1215,edi
  408fb7:	jnp    0x408ffa
  408fb9:	lea    ecx,[ebx]
  408fbb:	dec    edi
  408fbc:	outs   dx,DWORD PTR ds:[esi]
  408fbd:	jno    0x408f6b
  408fbf:	(bad)  
  408fc0:	mov    al,0x3f
  408fc2:	push   ds
  408fc3:	cmp    ch,BYTE PTR [esi]
  408fc5:	xor    ebx,0x1b1138
  408fcb:	jbe    0x605ddc7a
  408fd1:	mov    ds:0x49e4f153,al
  408fd6:	(bad)  
  408fd7:	mov    ch,0x6a
  408fd9:	cmp    ebx,0xed6f2d1e
  408fdf:	cli    
  408fe0:	jmp    0x5fff:0xc43de14a
  408fe7:	jne    0x409054
  408fe9:	les    edx,FWORD PTR [eax-0x545b1f97]
  408fef:	mov    WORD PTR [edi-0x38],es
  408ff2:	adc    bh,BYTE PTR [ecx+0x4b4733a8]
  408ff8:	push   eax
  408ff9:	dec    esi
  408ffa:	inc    edi
  408ffb:	jmp    DWORD PTR ds:0x6c671890
  409001:	aas    
  409002:	mov    ah,BYTE PTR [ecx-0x3e]
  409005:	jnp    0x40906f
  409007:	sbb    esp,edi
  409009:	test   DWORD PTR [ecx-0x4506a993],eax
  40900f:	push   0x59dcf1bc
  409014:	jmp    0xc0edb002
  409019:	xchg   ecx,eax
  40901a:	loop   0x409084
  40901c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40901d:	popf   
  40901e:	sub    BYTE PTR [ebx-0x42],al
  409021:	int3   
  409022:	jno    0x408ff6
  409024:	loop   0x408fc8
  409026:	mov    ah,BYTE PTR [esi]
  409028:	inc    esp
  409029:	stc    
  40902a:	imul   edi,DWORD PTR [esp+ecx*1-0x2f],0xffffff8c
  40902f:	mov    ah,0xfc
  409031:	scas   eax,DWORD PTR es:[edi]
  409032:	je     0x408fd6
  409034:	xchg   ebp,eax
  409035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409036:	outs   dx,BYTE PTR ds:[esi]
  409037:	stos   DWORD PTR es:[edi],eax
  409038:	add    al,0x40
  40903a:	out    dx,al
  40903b:	loope  0x409020
  40903d:	jmp    0x586d:0x36f8d85d
  409044:	cwde   
  409045:	aad    0x67
  409047:	xor    BYTE PTR [eax-0x21],dl
  40904a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40904b:	out    dx,eax
  40904c:	push   es
  40904d:	stos   BYTE PTR es:[edi],al
  40904e:	sub    eax,0x42e2e950
  409053:	mov    ecx,ds
  409055:	(bad)  
  409056:	sub    BYTE PTR [ebx-0x145399a0],dl
  40905c:	pop    edi
  40905d:	dec    ebx
  40905e:	outs   dx,BYTE PTR ds:[esi]
  40905f:	sbb    eax,0xb5580a96
  409064:	fstp   TBYTE PTR [ebp-0x4e]
  409067:	and    al,bh
  409069:	xchg   ebx,eax
  40906a:	loopne 0x409022
  40906c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40906d:	arpl   ax,cx
  40906f:	mov    ds:0xb04ff8f2,al
  409074:	lahf   
  409075:	sbb    bl,bl
  409077:	add    al,0x5
  409079:	out    dx,eax
  40907a:	xor    eax,0xe6359bb9
  40907f:	sub    ch,BYTE PTR [edi+0xe]
  409082:	in     eax,dx
  409083:	pop    esp
  409084:	pop    es
  409085:	sbb    ah,BYTE PTR [eax+0x7]
  409088:	push   esp
  409089:	gs cmc 
  40908b:	ja     0x409017
  40908d:	and    BYTE PTR [eax],bl
  40908f:	(bad)  
  409090:	dec    ebp
  409091:	cs es push esp
  409094:	sub    esp,DWORD PTR [eax+0x50]
  409097:	or     bl,cl
  409099:	mov    eax,0xa5b9c181
  40909e:	sbb    DWORD PTR [edi-0x3114fa22],ebx
  4090a4:	scas   eax,DWORD PTR es:[edi]
  4090a5:	les    ebp,FWORD PTR [edx]
  4090a7:	adc    ebx,DWORD PTR [edx+0x59c31007]
  4090ad:	loope  0x409079
  4090af:	dec    esi
  4090b0:	cmc    
  4090b1:	(bad)  
  4090b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090b3:	loope  0x40912a
  4090b5:	vpmacssdqh ymm3,ymm7,YMMWORD PTR [edi+0x7044b07c],ymm3
  4090bf:	cli    
  4090c0:	ficom  WORD PTR [ebp-0x8153097]
  4090c6:	(bad)  
  4090c7:	sub    dl,dl
  4090c9:	jmp    0x16680ea6
  4090ce:	or     bh,0x8e
  4090d1:	push   es
  4090d2:	mov    ebx,DWORD PTR [edi-0x33]
  4090d5:	sbb    eax,0x3094bdf6
  4090da:	xor    eax,0xbd3d44d5
  4090df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090e0:	pop    ecx
  4090e1:	jbe    0x4090b5
  4090e3:	int3   
  4090e4:	int3   
  4090e5:	inc    eax
  4090e6:	add    ebx,DWORD PTR [ebp+0x30c5519c]
  4090ec:	and    al,0xfd
  4090ee:	and    ebp,0x8509e586
  4090f4:	getsec 
  4090f6:	adc    ch,ah
  4090f8:	mov    es,edx
  4090fa:	sub    edi,DWORD PTR [edi]
  4090fc:	mov    cl,0x5d
  4090fe:	rcr    DWORD PTR [esi],1
  409100:	lahf   
  409101:	data16 test BYTE PTR [edi+0x22],al
  409105:	mul    BYTE PTR [eax+0x35532fae]
  40910b:	or     eax,DWORD PTR [ebp-0x4f5915f2]
  409111:	xchg   edi,eax
  409112:	sbb    eax,0x8f02dcb7
  409117:	mov    dl,0xa9
  409119:	xchg   ebp,eax
  40911a:	test   esi,ebp
  40911c:	push   ds
  40911d:	fst    DWORD PTR [eax+0x23b330fe]
  409123:	push   es
  409124:	jmp    ebp
  409126:	jo     0x409171
  409128:	ins    DWORD PTR es:[edi],dx
  409129:	icebp  
  40912a:	stc    
  40912b:	xchg   edx,eax
  40912c:	push   edi
  40912d:	cwde   
  40912e:	std    
  40912f:	mov    ecx,0xff3a1957
  409134:	imul   edi,DWORD PTR [eax-0x3f86657c],0xffffffa0
  40913b:	push   ebx
  40913c:	sti    
  40913d:	sub    dl,al
  40913f:	push   edi
  409140:	xchg   ebp,eax
  409141:	arpl   WORD PTR [edx-0x78],bx
  409144:	bound  ecx,QWORD PTR [edx-0x5fc789b7]
  40914a:	xchg   esp,eax
  40914b:	or     dh,dh
  40914d:	ror    DWORD PTR [ecx+0x149d9df4],1
  409153:	cli    
  409154:	push   ss
  409155:	sub    DWORD PTR [eax],esp
  409157:	call   0x2842:0xe6ee5db6
  40915e:	dec    esi
  40915f:	xchg   ebx,eax
  409160:	sub    eax,0x3d6fbcfd
  409165:	or     esp,eax
  409167:	sub    ch,BYTE PTR [ebx-0x6b]
  40916a:	inc    ebp
  40916b:	cmp    al,0xbd
  40916d:	aam    0x51
  40916f:	mov    eax,ds:0xec9cf54
  409174:	addr16 push edi
  409176:	retf   
  409177:	iret   
  409178:	scas   eax,DWORD PTR es:[edi]
  409179:	mov    cl,0x96
  40917b:	sbb    al,0xea
  40917d:	push   esi
  40917e:	shl    bl,1
  409180:	mov    ecx,0x7111843b
  409185:	mov    eax,0xef8c0838
  40918a:	pop    ebx
  40918b:	dec    esi
  40918c:	pushf  
  40918d:	add    bl,BYTE PTR [ebx-0x30]
  409190:	push   ebp
  409191:	call   0x40352336
  409196:	jbe    0x4091b9
  409198:	cld    
  409199:	xor    DWORD PTR [eax-0x3a],esi
  40919c:	adc    DWORD PTR [ecx+0xb7287f2],edi
  4091a2:	aas    
  4091a3:	push   edx
  4091a4:	sahf   
  4091a5:	aad    0xd1
  4091a7:	pushf  
  4091a8:	sub    esi,DWORD PTR [esi+0x53b381b6]
  4091ae:	in     eax,0x17
  4091b0:	out    dx,eax
  4091b1:	inc    ecx
  4091b2:	and    al,0xf9
  4091b4:	mov    ah,dl
  4091b6:	fsubr  QWORD PTR [ebx-0x26]
  4091b9:	jmp    0x356dfd8e
  4091be:	xchg   ecx,eax
  4091bf:	xor    dh,BYTE PTR [ecx+ebx*1-0x1b]
  4091c3:	sbb    edi,DWORD PTR [ebx-0x78ba8c78]
  4091c9:	(bad)  [ecx-0x686374d3]
  4091cf:	std    
  4091d0:	adc    eax,0xbd71cfbc
  4091d5:	out    0x1e,al
  4091d7:	inc    ebx
  4091d8:	ins    DWORD PTR es:[edi],dx
  4091d9:	loop   0x4091c1
  4091db:	shr    ch,cl
  4091dd:	ins    DWORD PTR es:[edi],dx
  4091de:	pop    ds
  4091df:	pop    ebp
  4091e0:	jmp    0xfbe89ce0
  4091e5:	loope  0x40917c
  4091e7:	cmc    
  4091e8:	out    dx,al
  4091e9:	mov    edx,0xa817ea0d
  4091ee:	lock sbb bl,BYTE PTR [ebx+0x13]
  4091f2:	mov    ch,0xcd
  4091f4:	(bad)  
  4091f5:	xchg   edi,eax
  4091f6:	fisubr WORD PTR [ecx-0x784b6d0d]
  4091fc:	mov    dh,0xd0
  4091fe:	xchg   esp,eax
  4091ff:	jmp    0x3d951ccf
  409204:	cmp    bh,ah
  409206:	push   cs
  409207:	jecxz  0x409280
  409209:	mov    al,0xc0
  40920b:	(bad)  
  40920c:	in     eax,dx
  40920d:	rcl    BYTE PTR [edi],cl
  40920f:	or     eax,0x6e15ee23
  409214:	sbb    al,BYTE PTR ds:0x5cfb088f
  40921a:	aas    
  40921b:	adc    DWORD PTR [esi],0x45
  40921e:	(bad)  
  40921f:	cli    
  409220:	out    dx,al
  409221:	mov    al,ds:0x23786405
  409226:	cdq    
  409227:	mov    edx,DWORD PTR [ebp-0x73]
  40922a:	fwait
  40922b:	aam    0x38
  40922d:	jecxz  0x40924b
  40922f:	stos   BYTE PTR es:[edi],al
  409230:	cmc    
  409231:	iret   
  409232:	dec    esi
  409233:	in     al,0x35
  409235:	cmp    ebp,DWORD PTR [edx]
  409237:	cli    
  409238:	add    al,BYTE PTR [edx+0x52]
  40923b:	rol    bh,0xad
  40923e:	in     eax,dx
  40923f:	inc    edi
  409240:	cmp    ah,BYTE PTR [ecx-0x5d9b92b9]
  409246:	and    al,0x39
  409248:	and    al,0x65
  40924a:	push   0x9ba83d11
  40924f:	inc    ebx
  409250:	ja     0x40925d
  409252:	icebp  
  409253:	xchg   BYTE PTR [ebx-0x46],ah
  409256:	addr16 pop eax
  409258:	inc    edi
  409259:	push   ebp
  40925a:	jl     0x409288
  40925c:	call   0xfb8d:0x8a9e6a58
  409263:	cli    
  409264:	(bad)  
  409265:	in     al,dx
  409266:	idiv   DWORD PTR [ebp-0x6bf2cf9e]
  40926c:	addr16 jp 0x40920f
  40926f:	jne    0x4092e9
  409271:	popa   
  409272:	(bad)  
  409274:	sub    eax,0x699930dd
  409279:	jmp    0xc9ed:0xeed6e238
  409280:	ss ds or al,0x7
  409284:	dec    eax
  409285:	sub    DWORD PTR [ecx+0x11],esi
  409288:	fist   WORD PTR [esi]
  40928a:	and    al,0x34
  40928c:	cld    
  40928d:	retf   
  40928e:	scas   eax,DWORD PTR es:[edi]
  40928f:	push   ecx
  409290:	ret    0xfb23
  409293:	push   ss
  409294:	hlt    
  409295:	int    0x2d
  409297:	push   ss
  409298:	and    ebp,DWORD PTR [edi+edx*4]
  40929b:	loop   0x4092d3
  40929d:	jne    0x40922b
  40929f:	rol    BYTE PTR [edi],cl
  4092a1:	test   eax,0x7926a7ea
  4092a6:	inc    ebp
  4092a7:	addr16 mov eax,ds:0xa5a7
  4092ab:	push   0x45b05424
  4092b0:	ss cmp eax,0xcf6ea72
  4092b6:	pushf  
  4092b7:	xchg   BYTE PTR [ebx],cl
  4092b9:	out    dx,al
  4092ba:	pop    es
  4092bb:	sub    bh,cl
  4092bd:	cmp    edx,DWORD PTR [edi+edi*2-0x1d]
  4092c1:	stc    
  4092c2:	out    0xcf,al
  4092c4:	test   DWORD PTR [ecx+0x4d],edx
  4092c7:	es xchg esp,eax
  4092c9:	inc    edi
  4092ca:	outs   dx,DWORD PTR ds:[esi]
  4092cb:	pop    ebx
  4092cc:	aad    0xae
  4092ce:	sti    
  4092cf:	out    0xa,al
  4092d1:	shl    DWORD PTR [ecx-0x61],1
  4092d4:	fdivr  DWORD PTR cs:0xda78f0f
  4092db:	add    ebp,DWORD PTR [ebx]
  4092dd:	dec    esp
  4092de:	stos   DWORD PTR es:[edi],eax
  4092df:	sbb    ah,BYTE PTR [ebx]
  4092e1:	arpl   WORD PTR [ebp+0x7d],sp
  4092e4:	jbe    0x4092e7
  4092e6:	mov    ds:0xd4222c2,eax
  4092eb:	dec    edx
  4092ec:	add    al,0xe9
  4092ee:	mov    BYTE PTR [eax+0xa7dc72e],ah
  4092f4:	pop    edi
  4092f5:	test   DWORD PTR [esi+0x158df438],ebx
  4092fb:	je     0x409325
  4092fd:	mov    eax,ds:0x4fab8522
  409302:	or     al,0x72
  409304:	pop    es
  409305:	cmp    al,0xb3
  409307:	ret    0xd49a
  40930a:	sbb    eax,0xa65d1a2
  40930f:	xor    ch,BYTE PTR [ecx+0x58]
  409312:	xchg   ebx,eax
  409313:	call   0x49e9:0x1998e88b
  40931a:	cmc    
  40931b:	mov    WORD PTR [ebx+0x4a],?
  40931e:	stos   BYTE PTR es:[edi],al
  40931f:	jmp    0xaaf4b08e
  409324:	cs hlt 
  409326:	and    DWORD PTR [edx+ecx*8],0xfffffff2
  40932a:	push   ebp
  40932b:	mov    bh,0xe3
  40932d:	popa   
  40932e:	jno    0x4092e9
  409330:	rcr    DWORD PTR [eax-0x64ea58fe],cl
  409336:	jo     0x409328
  409338:	mov    eax,DWORD PTR [esi-0x567e07ea]
  40933e:	int    0xd7
  409340:	mov    eax,ds:0x1764925a
  409345:	mov    edi,0x821b9289
  40934a:	loop   0x40936b
  40934c:	xor    DWORD PTR [eax-0x408e1c3d],ebp
  409352:	mov    edi,0xe9befa8d
  409357:	(bad)  
  409358:	addr16 aad 0x40
  40935b:	jno    0x40934b
  40935d:	icebp  
  40935e:	pop    eax
  40935f:	ret    0x2e9f
  409362:	mov    al,0x29
  409364:	test   ch,dl
  409366:	scas   al,BYTE PTR es:[edi]
  409367:	sub    dh,BYTE PTR [edi]
  409369:	adc    edx,DWORD PTR [edi]
  40936b:	lods   eax,DWORD PTR ds:[esi]
  40936c:	inc    esi
  40936d:	push   edx
  40936e:	outs   dx,BYTE PTR ds:[esi]
  40936f:	adc    esi,esp
  409371:	icebp  
  409372:	jae    0x409368
  409374:	push   ebp
  409375:	mov    edx,0xfa5c22b8
  40937a:	xchg   ebp,eax
  40937b:	mov    al,0x6e
  40937d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40937e:	test   ecx,edi
  409380:	push   0xae6e3247
  409385:	lea    edx,[ecx+0x2fc6c8d7]
  40938b:	dec    edi
  40938c:	neg    BYTE PTR [ecx+0x67]
  40938f:	push   ecx
  409390:	or     ch,BYTE PTR cs:[eax-0x45]
  409394:	add    eax,0x3b547e29
  409399:	cld    
  40939a:	cli    
  40939b:	and    cl,ch
  40939d:	(bad)  
  40939e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40939f:	mov    eax,ds:0x9872396a
  4093a4:	xchg   ebx,eax
  4093a5:	sub    ch,dh
  4093a7:	jne    0x4093be
  4093a9:	cwde   
  4093aa:	ret    
  4093ab:	test   al,0x61
  4093ad:	retf   
  4093ae:	inc    eax
  4093af:	loope  0x409364
  4093b1:	fadd   DWORD PTR [edx+esi*4-0x7f7bb3ae]
  4093b8:	inc    eax
  4093b9:	in     al,0x14
  4093bb:	push   ebp
  4093bc:	dec    ebx
  4093bd:	rol    DWORD PTR [edx+0x215a37b1],0x9b
  4093c4:	popa   
  4093c5:	cmp    BYTE PTR [eax+0xd125f47],ah
  4093cb:	mov    DWORD PTR [esi],eax
  4093cd:	inc    ecx
  4093ce:	push   cs
  4093cf:	test   al,0xc3
  4093d1:	xchg   ebp,eax
  4093d2:	aam    0xa8
  4093d4:	lahf   
  4093d5:	jae    0x4093c5
  4093d7:	lods   eax,DWORD PTR ds:[esi]
  4093d8:	xor    BYTE PTR [ecx-0x7c],0xf0
  4093dc:	add    DWORD PTR [edi],eax
  4093de:	sub    ah,BYTE PTR [ebx+0x13fd7aa0]
  4093e4:	adc    eax,0x3a3c3255
  4093e9:	test   BYTE PTR ds:0x4ff1e435,al
  4093ef:	cdq    
  4093f0:	loopne 0x4093ca
  4093f2:	dec    ebp
  4093f3:	jmp    0x51cc5851
  4093f8:	push   es
  4093f9:	inc    eax
  4093fa:	dec    esp
  4093fb:	mov    esp,0x707ab32a
  409400:	jns    0x40946a
  409402:	test   eax,0x149a374
  409407:	vandps ymm5,ymm0,YMMWORD PTR [eax*2-0x2caf8a54]
  409410:	test   esp,0x21d9bdc7
  409416:	mov    ebp,0x8812084e
  40941b:	inc    eax
  40941c:	pop    es
  40941d:	cvtps2pd xmm7,QWORD PTR [ebx-0x4667e9ff]
  409424:	dec    DWORD PTR [eax+0x6bbcb623]
  40942a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40942b:	mov    bl,0x4b
  40942d:	add    eax,0x80a68d60
  409432:	out    0xf1,eax
  409434:	bnd jmp 0x2be95c34
  40943a:	jecxz  0x4094a9
  40943c:	daa    
  40943d:	and    ch,bl
  40943f:	xor    ecx,DWORD PTR [ecx+0x4970a008]
  409445:	mov    WORD PTR [ecx+0x2107048e],cs
  40944b:	sub    bl,BYTE PTR [esi-0xa39136a]
  409451:	xor    DWORD PTR [edx+0x1978816d],edx
  409457:	loop   0x40941d
  409459:	ja     0x409499
  40945b:	xchg   esp,eax
  40945c:	inc    edi
  40945d:	ja     0x409460
  40945f:	gs mov ecx,0x90603643
  409465:	jb     0x409413
  409467:	ins    BYTE PTR es:[edi],dx
  409468:	dec    ebp
  409469:	or     eax,0xd13c368b
  40946e:	retf   0xaee7
  409471:	lea    edi,[ecx+esi*4+0x59]
  409475:	add    eax,0x9e020966
  40947a:	sbb    DWORD PTR [ebx-0x12],edi
  40947d:	or     al,0x20
  40947f:	cs in  eax,dx
  409481:	retf   0x7bae
  409484:	in     al,0x5b
  409486:	iret   
  409487:	in     al,0x4
  409489:	mov    al,0x2f
  40948b:	inc    esp
  40948c:	cmp    al,0xd1
  40948e:	lods   al,BYTE PTR ds:[esi]
  40948f:	lods   eax,DWORD PTR ds:[esi]
  409490:	sub    DWORD PTR [eax+0x4187f768],edi
  409496:	push   ds
  409497:	and    eax,0xee79ebe1
  40949c:	gs xor bl,al
  40949f:	or     DWORD PTR [eax+0x76],0x65
  4094a3:	mov    ds:0x4805b7f7,eax
  4094a8:	add    al,0x8f
  4094aa:	and    DWORD PTR ds:[ebx],edi
  4094ad:	push   0xfffffff8
  4094af:	outs   dx,BYTE PTR cs:[esi]
  4094b1:	jge    0x4094bb
  4094b3:	push   edx
  4094b4:	add    al,0xc2
  4094b6:	inc    edx
  4094b7:	neg    BYTE PTR [ebx+0x3f161d27]
  4094bd:	push   eax
  4094be:	(bad)  
  4094bf:	aaa    
  4094c0:	pop    ebx
  4094c1:	push   esp
  4094c2:	popa   
  4094c3:	jns    0x4094f2
  4094c5:	sub    bl,BYTE PTR [ebx-0x6cda33f5]
  4094cb:	add    ah,BYTE PTR [ebx]
  4094cd:	imul   edx,DWORD PTR [ecx-0x1b4fd00c],0x71
  4094d4:	xor    bl,BYTE PTR [eax+esi*1]
  4094d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d8:	jg     0x4094ad
  4094da:	out    0xcb,eax
  4094dc:	sub    bh,BYTE PTR [edx+0x49]
  4094df:	inc    eax
  4094e0:	jne    0x4094c1
  4094e2:	inc    eax
  4094e3:	or     eax,0xd4858b9b
  4094e8:	stc    
  4094e9:	neg    BYTE PTR [edi]
  4094eb:	shl    ch,1
  4094ed:	fild   WORD PTR [edi+0x2ed50d99]
  4094f3:	mov    ds:0x8451b379,al
  4094f8:	dec    esi
  4094f9:	imul   ebp,DWORD PTR [edi],0x3f7b72f6
  4094ff:	rcl    DWORD PTR [esi-0x6c],0x17
  409503:	pop    ecx
  409504:	out    dx,eax
  409505:	loopne 0x4094aa
  409507:	je     0x409576
  409509:	dec    edi
  40950a:	pop    ecx
  40950b:	push   esi
  40950c:	(bad)  
  40950d:	xchg   esi,eax
  40950e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40950f:	cmp    al,0x4f
  409511:	sbb    al,0xb
  409513:	ficom  WORD PTR fs:[edx+eiz*4+0xb3ed624]
  40951b:	shl    DWORD PTR [eax],cl
  40951d:	inc    edx
  40951e:	arpl   WORD PTR [eax+0x29],si
  409521:	sbb    ch,cl
  409523:	outs   dx,BYTE PTR cs:[esi]
  409525:	jae    0x409574
  409527:	rol    BYTE PTR [ebp*8+0xdbd28f6],0x62
  40952f:	aad    0xc2
  409531:	add    al,0x0
  409533:	stos   BYTE PTR es:[edi],al
  409534:	mov    dh,0x3
  409536:	mov    ds,WORD PTR [esi]
  409538:	sub    ebp,edi
  40953a:	cwde   
  40953b:	pop    edx
  40953c:	outs   dx,BYTE PTR ds:[esi]
  40953d:	js     0x40959c
  40953f:	mov    esp,0xc4a557f8
  409544:	pop    ebp
  409545:	mov    esi,0x6f1b7d03
  40954a:	jnp    0x40958f
  40954c:	mov    ebp,0x954e97d0
  409551:	mov    edx,0xe89ff43e
  409556:	add    ecx,DWORD PTR [edi+0x704f840b]
  40955c:	jo     0x40954b
  40955e:	out    dx,al
  40955f:	jg     0x409591
  409561:	stos   DWORD PTR es:[edi],eax
  409562:	mov    cl,0x11
  409564:	cmp    esp,DWORD PTR [esp+eiz*8-0x53f8b4fb]
  40956b:	jl     0x409547
  40956d:	push   ecx
  40956e:	sub    al,0x7
  409570:	push   ds
  409571:	pop    DWORD PTR [ebx-0x66]
  409574:	shld   DWORD PTR [ebx+0x3b],edi,0x98
  409579:	sahf   
  40957a:	jne    0x409561
  40957c:	ror    DWORD PTR [edx],0xa8
  40957f:	mov    cl,0x69
  409581:	inc    ebx
  409582:	and    DWORD PTR [edx+ecx*4],edx
  409585:	xor    edx,DWORD PTR [ebp-0x75]
  409588:	dec    edx
  409589:	jmp    0x40954c
  40958b:	adc    DWORD PTR [ecx-0x27],edx
  40958e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40958f:	ret    
  409590:	jno    0x40953c
  409592:	add    DWORD PTR [ebx+eiz*1-0x1668987c],edi
  409599:	sub    eax,0xf5bf3526
  40959e:	pop    edx
  40959f:	push   ss
  4095a0:	je     0x40954f
  4095a2:	aam    0x6d
  4095a4:	aaa    
  4095a5:	and    al,0xdc
  4095a7:	fcom   QWORD PTR [eax-0x1ca27b28]
  4095ad:	jg     0x40952f
  4095af:	lods   eax,DWORD PTR ds:[esi]
  4095b0:	cmp    BYTE PTR [ecx-0x72],cl
  4095b3:	mov    al,ds:0x25cf8fb6
  4095b8:	fwait
  4095b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ba:	int3   
  4095bb:	adc    bh,cl
  4095bd:	fadd   DWORD PTR [esi*2-0x5da6565c]
  4095c4:	jmp    0xf0242a36
  4095c9:	test   al,0xfd
  4095cb:	inc    ecx
  4095cc:	(bad)  [ebp-0x2f]
  4095cf:	cld    
  4095d0:	jnp    0x40959f
  4095d2:	ja     0x4095fc
  4095d4:	(bad)  
  4095d5:	pop    ss
  4095d6:	shr    DWORD PTR [edx-0x27],cl
  4095d9:	mov    DWORD PTR [eax+0x10411b0e],esi
  4095df:	call   DWORD PTR [eax-0x428541ac]
  4095e5:	sbb    ch,BYTE PTR [ebx]
  4095e7:	inc    ebx
  4095e8:	test   DWORD PTR [ebx],ebp
  4095ea:	dec    eax
  4095eb:	sub    eax,0xbc1e9142
  4095f0:	popf   
  4095f1:	jl     0x409663
  4095f3:	xchg   ebp,eax
  4095f4:	xor    al,BYTE PTR [edx]
  4095f6:	push   ebx
  4095f7:	idiv   BYTE PTR [edi+0x251a70c1]
  4095fd:	mov    eax,ds:0x418954f
  409602:	lahf   
  409603:	inc    edx
  409604:	jno    0x409632
  409606:	fld    TBYTE PTR [edx+eiz*8+0x8]
  40960a:	mov    esi,0x45ae4bd6
  40960f:	push   DWORD PTR [esp+edx*8-0x690cc69b]
  409616:	cmp    BYTE PTR [esi+0x41],ch
  409619:	loope  0x4095ae
  40961b:	ss xchg ebx,eax
  40961d:	mov    esp,0x6e1ffa0f
  409622:	jl     0x40961b
  409624:	mov    cl,0xe8
  409626:	pop    edx
  409627:	adc    al,0xb5
  409629:	inc    ebx
  40962a:	div    DWORD PTR [eax]
  40962c:	jns    0x409688
  40962e:	mov    cl,0x96
  409630:	aas    
  409631:	ins    BYTE PTR es:[edi],dx
  409632:	fsubr  DWORD PTR [edi+0x24a6b83a]
  409638:	cmp    ecx,esp
  40963a:	bound  edi,QWORD PTR [ecx+eiz*1+0x17]
  40963e:	mov    cs,WORD PTR [ebx-0x3c]
  409641:	out    dx,al
  409642:	push   es
  409643:	cwde   
  409644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409645:	mov    ebp,0xc8f45288
  40964a:	call   0xc7b9188a
  40964f:	dec    eax
  409650:	push   eax
  409651:	pop    edi
  409652:	mov    edi,0xa39a42b0
  409657:	lea    edi,[esi+0x5c59dc20]
  40965d:	push   DWORD PTR [ebx+esi*8]
  409660:	jae    0x4095f6
  409662:	jno    0x40962f
  409664:	or     al,0xa4
  409666:	into   
  409667:	sahf   
  409668:	xchg   esp,eax
  409669:	stc    
  40966a:	call   0x94cfe969
  40966f:	imul   edi,DWORD PTR [eax-0x7d],0x13
  409673:	out    0xc0,al
  409675:	push   es
  409676:	outs   dx,BYTE PTR ds:[esi]
  409677:	lea    edi,[edx+0x7fcfccf3]
  40967d:	(bad)
  409680:	inc    edi
  409681:	dec    esp
  409682:	out    dx,eax
  409683:	pop    ebp
  409684:	pop    es
  409685:	push   esi
  409686:	cmp    al,0x76
  409688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409689:	lods   al,BYTE PTR ds:[esi]
  40968a:	sbb    DWORD PTR [ecx+0x50d31be],ebp
  409690:	and    BYTE PTR [ebx-0x2c77543b],ch
  409696:	sbb    BYTE PTR [ecx+ebp*2+0x28],dh
  40969a:	das    
  40969b:	fs jno 0x409695
  40969e:	(bad)  
  40969f:	mov    ebp,0x4d7ca164
  4096a4:	arpl   WORD PTR [edx-0x4db25706],bp
  4096aa:	(bad)  [ebp+0x8]
  4096ad:	sahf   
  4096ae:	dec    edi
  4096af:	test   al,0x89
  4096b1:	in     al,0x33
  4096b3:	pop    eax
  4096b4:	aas    
  4096b5:	adc    eax,0xc5ed5304
  4096ba:	xor    BYTE PTR [edx-0x56],0xd8
  4096be:	dec    esp
  4096bf:	inc    edi
  4096c0:	popf   
  4096c1:	add    eax,0x7a95e2c
  4096c6:	adc    eax,0xb28a3ff7
  4096cb:	(bad)  
  4096cc:	jmp    0x4096f7
  4096ce:	push   edx
  4096cf:	sub    DWORD PTR [ebx+0x43],edx
  4096d2:	xchg   DWORD PTR [edi+0x51],esp
  4096d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096d6:	mov    ecx,0xfa222988
  4096db:	sbb    edx,DWORD PTR [ecx-0x46bb2adb]
  4096e1:	in     al,dx
  4096e2:	out    0xd3,eax
  4096e4:	sub    eax,0xf9bffcf6
  4096e9:	popf   
  4096ea:	push   ds
  4096eb:	cmp    al,0x2b
  4096ed:	pop    edi
  4096ee:	jp     0x4096e7
  4096f0:	jl     0x409718
  4096f2:	mov    ah,0xc
  4096f4:	and    al,0x32
  4096f6:	outs   dx,DWORD PTR ds:[esi]
  4096f7:	rcl    BYTE PTR [esi],cl
  4096f9:	jge    0x409739
  4096fb:	int    0xf2
  4096fd:	(bad)  
  4096fe:	fcomp  QWORD PTR [ecx]
  409700:	fild   DWORD PTR [esi-0x516870e6]
  409706:	sbb    bl,BYTE PTR [edi+eiz*8+0x51]
  40970a:	or     al,BYTE PTR [edx-0x119f34df]
  409710:	arpl   WORD PTR [ecx],si
  409712:	pop    es
  409713:	in     al,0xd4
  409715:	mov    cl,0x61
  409717:	and    eax,0x2964ca70
  40971c:	sar    DWORD PTR [edx],cl
  40971e:	cmp    ah,al
  409720:	rol    BYTE PTR [ebx+0x4d37c9a9],1
  409726:	(bad)  
  409727:	neg    DWORD PTR [eax+0x2b]
  40972a:	pop    esp
  40972b:	jno    0x40976f
  40972d:	fisubr DWORD PTR [edi+edx*4]
  409730:	dec    ecx
  409731:	pop    edx
  409732:	dec    edx
  409733:	pop    edx
  409734:	sub    eax,0xffa70c33
  409739:	mov    al,BYTE PTR [ebx-0x42]
  40973c:	daa    
  40973d:	push   0xe
  40973f:	mov    ecx,0xec8c21f3
  409744:	out    0xb0,al
  409746:	loopne 0x40974d
  409748:	jle    0x409722
  40974a:	adc    eax,0x7540953d
  40974f:	mov    esp,0xdd673435
  409754:	mov    eax,0x73535016
  409759:	xlat   BYTE PTR ds:[ebx]
  40975a:	pop    eax
  40975b:	stos   DWORD PTR es:[edi],eax
  40975c:	lods   eax,DWORD PTR ds:[esi]
  40975d:	sbb    ebp,DWORD PTR [esi]
  40975f:	arpl   WORD PTR [esi],bp
  409761:	pop    esp
  409762:	out    dx,al
  409763:	ins    BYTE PTR es:[edi],dx
  409764:	sti    
  409765:	(bad)  
  409766:	sbb    eax,0x70b59634
  40976b:	mov    es,WORD PTR [ebp+0x6ca9a628]
  409771:	shl    DWORD PTR [ebp-0x86ab740],cl
  409777:	pop    esp
  409778:	into   
  409779:	jno    0x4097ba
  40977b:	aas    
  40977c:	inc    edi
  40977d:	push   edi
  40977e:	sar    DWORD PTR [edx+0x41159dc4],cl
  409784:	pop    edi
  409785:	adc    BYTE PTR [ecx-0x58],cl
  409788:	adc    al,0x83
  40978a:	or     eax,0x5b835e85
  40978f:	pop    eax
  409790:	out    dx,eax
  409791:	fisub  WORD PTR [ebp-0x19639ab1]
  409797:	push   0x49f896a2
  40979c:	int3   
  40979d:	movzx  ebp,BYTE PTR [edi+0x54]
  4097a1:	xchg   BYTE PTR [esi-0x21],dh
  4097a4:	cmc    
  4097a5:	js     0x409803
  4097a7:	cmp    al,0x8
  4097a9:	pop    edx
  4097aa:	add    edi,esp
  4097ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ad:	mov    dh,0xc7
  4097af:	jne    0x4097c5
  4097b1:	push   es
  4097b2:	add    eax,0x191780d2
  4097b7:	mov    BYTE PTR [eax+0x81a6520],0xe
  4097be:	cmp    esp,DWORD PTR [esi-0x7bcbb22e]
  4097c4:	inc    edx
  4097c5:	in     al,dx
  4097c6:	sbb    al,0x9e
  4097c8:	pop    ecx
  4097c9:	cmc    
  4097ca:	sub    BYTE PTR [edi-0x62],dh
  4097cd:	sbb    eax,0xfc4cf4e3
  4097d2:	fsub   QWORD PTR [ebx-0x6c]
  4097d5:	fldenv [ecx+ebx*4]
  4097d8:	rcr    DWORD PTR [esp+edi*1-0x74717ecf],cl
  4097df:	push   esp
  4097e0:	jg     0x40977e
  4097e2:	mov    ch,0x45
  4097e4:	push   edi
  4097e5:	add    al,0x8b
  4097e7:	sub    edx,ebx
  4097e9:	jge    0x40976e
  4097eb:	daa    
  4097ec:	lods   al,BYTE PTR ds:[esi]
  4097ed:	fcomp  DWORD PTR [ebx+0x6bbef0eb]
  4097f3:	fs leave 
  4097f5:	adc    eax,0xcea8a671
  4097fa:	mov    eax,0x7ae47c2
  4097ff:	xchg   ebp,eax
  409800:	(bad)  
  409801:	pop    esp
  409802:	in     eax,0x4d
  409804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409805:	in     eax,dx
  409806:	adc    eax,0xde02cb21
  40980b:	fistp  DWORD PTR [esi]
  40980d:	fwait
  40980e:	cmc    
  40980f:	pushf  
  409810:	push   edi
  409811:	das    
  409812:	or     esi,DWORD PTR [esi-0x2011b17c]
  409818:	push   ss
  409819:	push   ds
  40981a:	sti    
  40981b:	iret   
  40981c:	sbb    BYTE PTR [ebp+0x2e2b4053],bl
  409822:	fwait
  409823:	xchg   edx,eax
  409824:	push   edi
  409825:	sbb    ebx,DWORD PTR [edi-0x1303f5b3]
  40982b:	int3   
  40982c:	dec    edi
  40982d:	lock ficomp WORD PTR [edi+0x2c]
  409831:	mov    edx,ebp
  409833:	xchg   edi,eax
  409834:	inc    edi
  409835:	cmp    eax,0xd5cfc0e3
  40983a:	std    
  40983b:	and    bl,dh
  40983d:	std    
  40983e:	jne    0x4cb6f757
  409844:	mov    ds,WORD PTR [ebp-0x6ae5462c]
  40984a:	js     0x409845
  40984c:	cmp    eax,DWORD PTR [esi+edx*8]
  40984f:	not    DWORD PTR [ebx-0x2e]
  409852:	xor    eax,0x207fe9a0
  409857:	mov    ecx,0x2957c0a7
  40985c:	js     0x409870
  40985e:	fninit 
  409860:	jge    0x409856
  409862:	test   DWORD PTR [ebx+0x53c85ed8],ebp
  409868:	push   es
  409869:	cmp    ah,cl
  40986b:	pop    edx
  40986c:	mov    eax,ds:0x66043c4b
  409871:	pushf  
  409872:	and    ebx,DWORD PTR [ecx]
  409874:	call   0x18:0xbc77ef80
  40987b:	pushf  
  40987c:	in     eax,dx
  40987d:	sbb    ch,bh
  40987f:	add    eax,0x204ed750
  409884:	pop    ss
  409885:	std    
  409886:	sbb    ch,ah
  409888:	fwait
  409889:	push   ds
  40988a:	xchg   ecx,eax
  40988b:	inc    edx
  40988c:	xchg   edi,eax
  40988d:	mov    ebx,cr2
  409890:	push   0x77
  409892:	lahf   
  409893:	(bad)  
  409894:	bound  ecx,QWORD PTR [esi+edi*8+0x31987a9e]
  40989b:	fnstsw WORD PTR [ecx-0x5009616c]
  4098a1:	dec    eax
  4098a2:	data16 test al,bh
  4098a5:	jbe    0x409835
  4098a7:	fmul   st,st(0)
  4098a9:	and    BYTE PTR [eax+ecx*1+0x69],bl
  4098ad:	add    ebp,DWORD PTR [ebp+0x6d]
  4098b0:	jbe    0x409917
  4098b2:	bound  ebp,QWORD PTR [ebx-0x55]
  4098b5:	sub    ebx,DWORD PTR ds:0x7967bc64
  4098bb:	fadd   st,st(4)
  4098bd:	cli    
  4098be:	or     al,0x27
  4098c0:	xchg   dh,ah
  4098c2:	inc    cl
  4098c4:	sbb    BYTE PTR [edx+0x6],dh
  4098c7:	inc    edi
  4098c8:	call   0x689981f7
  4098cd:	pop    ds
  4098ce:	cs pusha 
  4098d0:	xor    al,0x99
  4098d2:	out    dx,eax
  4098d3:	xchg   ebp,eax
  4098d4:	ret    0xf102
  4098d7:	shl    DWORD PTR cs:0xf03b3e40,1
  4098de:	sub    al,0x8b
  4098e0:	mov    al,ds:0xa7f75e03
  4098e5:	xor    bh,dh
  4098e7:	xor    BYTE PTR [ebx],0x69
  4098ea:	data16 cli 
  4098ec:	jmp    0x40990b
  4098ee:	out    dx,al
  4098ef:	push   ds
  4098f0:	mov    al,ds:0xc667f7ac
  4098f5:	cmp    eax,0xf700ef2b
  4098fa:	sbb    bh,dh
  4098fc:	jg     0x4098dd
  4098fe:	add    al,0x6b
  409900:	nop
  409901:	mov    cl,0x78
  409903:	pop    edx
  409904:	fcmovne st,st(0)
  409906:	stos   DWORD PTR es:[edi],eax
  409907:	arpl   WORD PTR [esi-0x5cc052cb],si
  40990d:	leave  
  40990e:	in     eax,dx
  40990f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409910:	daa    
  409911:	push   ss
  409912:	sub    DWORD PTR [edi+0x5e81c2fd],esi
  409918:	lods   eax,DWORD PTR ds:[esi]
  409919:	iret   
  40991a:	push   ebp
  40991b:	xchg   esp,eax
  40991c:	mov    esi,0x166adebe
  409922:	sar    al,0x84
  409925:	mov    ch,0x6f
  409927:	ficom  DWORD PTR [ecx+edx*8+0x29f3461a]
  40992e:	and    eax,0x9f52b437
  409933:	aam    0xac
  409935:	add    DWORD PTR [ebx],ebx
  409937:	outs   dx,BYTE PTR ds:[esi]
  409938:	or     BYTE PTR [edx+0x4b],al
  40993b:	pop    ds
  40993c:	jae    0x409905
  40993e:	enter  0x8630,0xfb
  409942:	mov    dh,0xf4
  409944:	sbb    al,0x60
  409946:	and    eax,ebp
  409948:	cmp    al,0x10
  40994a:	or     edi,DWORD PTR [ebp-0x8]
  40994d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40994e:	sub    al,0x6e
  409950:	jne    0x40992f
  409952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409953:	xor    BYTE PTR [ecx+ecx*4+0x98b4577],bl
  40995a:	cs in  eax,0x41
  40995d:	inc    eax
  40995e:	xchg   ebp,eax
  40995f:	gs mov dh,0x44
  409962:	hlt    
  409963:	or     ecx,DWORD PTR [edx+0x63]
  409966:	fdivr  QWORD PTR [eax+0x4b066f4c]
  40996c:	jae    0x4099b4
  40996e:	push   esp
  40996f:	into   
  409970:	push   ebp
  409971:	pop    edi
  409972:	add    al,0xdf
  409974:	dec    esp
  409975:	pop    edi
  409976:	mov    edx,0x8eedf988
  40997b:	fnstenv [ebx]
  40997d:	jle    0x409929
  40997f:	mov    bl,BYTE PTR [edx]
  409981:	aam    0x86
  409983:	sub    edx,ebx
  409985:	pop    ebx
  409986:	leave  
  409987:	inc    esp
  409988:	mov    ecx,0xcdbdc2f1
  40998d:	xor    DWORD PTR [edi+ecx*2-0x2656de48],edx
  409994:	jecxz  0x409995
  409996:	dec    edx
  409997:	jb     0x409936
  409999:	dec    esi
  40999a:	aam    0x71
  40999c:	enter  0x1087,0x39
  4099a0:	fisubr DWORD PTR [ebp-0x305b1abf]
  4099a6:	cmp    al,0x1a
  4099a8:	sysenter 
  4099aa:	mov    ebp,0x55e49975
  4099af:	adc    bl,BYTE PTR [eax+0x1d]
  4099b2:	outs   dx,BYTE PTR ds:[esi]
  4099b3:	enter  0x1be2,0x5
  4099b7:	ja     0x4099c4
  4099b9:	cmp    eax,0xedb7d48e
  4099be:	cdq    
  4099bf:	fwait
  4099c0:	jp     0x4099fc
  4099c2:	sub    ecx,DWORD PTR [edi-0x48f21eca]
  4099c8:	or     DWORD PTR [edi+0x3a876fdc],ebp
  4099ce:	je     0x409967
  4099d0:	xlat   BYTE PTR ds:[ebx]
  4099d1:	(bad)  [ebp+0x44e94cf5]
  4099d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099d8:	ins    BYTE PTR es:[edi],dx
  4099d9:	fsub   QWORD PTR [esi-0x5195b5ce]
  4099df:	mov    BYTE PTR [esi+0xcbfd23e],dh
  4099e5:	dec    ecx
  4099e6:	ret    0x4082
  4099e9:	or     al,BYTE PTR [edi-0x16e68850]
  4099ef:	mov    edi,0x50767ad9
  4099f4:	mov    al,0x49
  4099f6:	leave  
  4099f7:	fs fldl2t 
  4099fa:	pusha  
  4099fb:	mov    ecx,0x19b7ea81
  409a00:	cmp    esi,edx
  409a02:	mov    dh,0xff
  409a04:	stc    
  409a05:	addr16 push esp
  409a07:	xor    BYTE PTR [ebp-0x18],bh
  409a0a:	out    0xa8,eax
  409a0c:	pop    esp
  409a0d:	cld    
  409a0e:	cdq    
  409a0f:	int    0x3d
  409a11:	push   ss
  409a12:	cmp    al,0x43
  409a14:	enter  0x9751,0x7c
  409a18:	mov    ds:0xb054a151,al
  409a1d:	mov    cl,0x46
  409a1f:	(bad)  [ecx+ecx*1]
  409a22:	xchg   ecx,eax
  409a23:	js     0x409a90
  409a25:	scas   eax,DWORD PTR es:[edi]
  409a26:	dec    esp
  409a27:	jne    0x4099bc
  409a29:	stc    
  409a2a:	sub    BYTE PTR [ebp+esi*1+0x6a460893],cl
  409a31:	mov    esi,0x5621c4d1
  409a36:	push   ds
  409a37:	and    dh,BYTE PTR [ecx]
  409a39:	mov    eax,ds:0xd781b8e8
  409a3e:	cmp    al,0x3d
  409a40:	jmp    0xb768bbd8
  409a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a46:	and    al,0x61
  409a48:	pop    esi
  409a49:	call   0xdf1d:0xbf862a39
  409a50:	into   
  409a51:	and    al,0xde
  409a53:	loope  0x4099f7
  409a55:	push   ss
  409a56:	test   eax,0x3fa3229d
  409a5b:	cwde   
  409a5c:	js     0x409a47
  409a5e:	and    BYTE PTR [ebx+edx*1+0x5f],cl
  409a62:	mov    ebx,0x412972ed
  409a67:	nop
  409a68:	jns    0x409aa4
  409a6a:	jnp    0x409a85
  409a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a6d:	out    0x59,al
  409a6f:	mov    ds:0xe99b9a33,eax
  409a74:	sub    eax,0x3f7b4e20
  409a79:	pusha  
  409a7a:	cs or  al,cl
  409a7d:	sub    dh,dh
  409a7f:	inc    esi
  409a80:	mov    al,ds:0x27205048
  409a85:	add    dl,BYTE PTR [edx]
  409a87:	xchg   ebp,eax
  409a88:	and    ebx,DWORD PTR [edi+0x55]
  409a8b:	mov    esi,0xcfe60aab
  409a90:	adc    BYTE PTR [ecx+0xb],0x43
  409a94:	into   
  409a95:	dec    eax
  409a96:	inc    eax
  409a97:	out    0xf1,al
  409a99:	xchg   esp,eax
  409a9a:	inc    esp
  409a9b:	imul   ebx,DWORD PTR [eax-0x1e6ef2df],0xe835bb94
  409aa5:	stc    
  409aa6:	cmc    
  409aa7:	xchg   esp,eax
  409aa8:	mov    ebp,0xfcd7ed25
  409aad:	fidivr WORD PTR [eax+0x55]
  409ab0:	xchg   esi,eax
  409ab1:	cdq    
  409ab2:	sahf   
  409ab3:	mov    ecx,0x1520b5b3
  409ab8:	out    0x24,al
  409aba:	pusha  
  409abb:	pusha  
  409abc:	or     BYTE PTR [ebx-0x8],0xba
  409ac0:	push   edi
  409ac1:	leave  
  409ac2:	mov    eax,0xa2617706
  409ac7:	inc    edi
  409ac8:	and    BYTE PTR [esi],al
  409aca:	ret    0xe54
  409acd:	mov    DWORD PTR [ecx],ebx
  409acf:	test   al,0x23
  409ad1:	call   DWORD PTR [ebx]
  409ad3:	ds sbb eax,0x7795440
  409ad9:	dec    eax
  409ada:	inc    dh
  409adc:	fcmove st,st(2)
  409ade:	sub    al,0xdf
  409ae0:	jp     0x409a6f
  409ae2:	inc    edi
  409ae3:	jne    0x409b63
  409ae5:	adc    eax,0x394d77b2
  409aea:	cdq    
  409aeb:	fs dec esp
  409aed:	test   al,0x9b
  409aef:	retf   0x89fa
  409af2:	bound  esp,QWORD PTR [eax-0x1]
  409af5:	je     0x409b5e
  409af7:	das    
  409af8:	ret    0xf012
  409afb:	mov    ds:0xf669849a,eax
  409b00:	or     bl,bh
  409b02:	sbb    edi,0xffffff94
  409b05:	sub    ah,BYTE PTR ds:0x1f29aa1
  409b0b:	lods   eax,DWORD PTR ds:[esi]
  409b0c:	stc    
  409b0d:	pop    ss
  409b0e:	mov    dl,0xde
  409b10:	adc    al,0x8
  409b12:	add    esp,DWORD PTR [esi-0x7153cbf9]
  409b18:	dec    ecx
  409b19:	(bad)
  409b1c:	aam    0xfd
  409b1e:	nop
  409b1f:	jnp    0x409b33
  409b21:	jecxz  0x409b75
  409b23:	and    eax,0x3a7f56f9
  409b28:	mov    ch,0x14
  409b2a:	mov    ss:0x80694e2c,al
  409b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b31:	lods   eax,DWORD PTR ds:[esi]
  409b32:	jns    0x409abc
  409b34:	and    eax,0x51118158
  409b39:	cs fwait
  409b3b:	mov    ds:0x2aa4a770,eax
  409b40:	and    eax,0x40371c1c
  409b45:	add    eax,0x5bacac3b
  409b4a:	sub    DWORD PTR [ebx+0x30],eax
  409b4d:	mov    dh,0x15
  409b4f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  409b51:	retf   0x7331
  409b54:	jp     0x409ad8
  409b56:	adc    al,0x80
  409b58:	adc    eax,0xd655744a
  409b5d:	out    dx,eax
  409b5e:	push   edx
  409b5f:	sub    ecx,DWORD PTR [edi+0x73f7ca1c]
  409b65:	or     DWORD PTR [esi+0x54],ebx
  409b68:	outs   dx,BYTE PTR ds:[esi]
  409b69:	loop   0x409bc4
  409b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6c:	les    edx,FWORD PTR [eax+0x39441a24]
  409b72:	sub    al,BYTE PTR [edx]
  409b74:	sbb    DWORD PTR [edx],edx
  409b76:	xchg   esi,eax
  409b77:	add    eax,DWORD PTR cs:[edx+0x1014b2f]
  409b7e:	pop    ecx
  409b7f:	aas    
  409b80:	push   eax
  409b81:	stc    
  409b82:	push   0x6b3136ab
  409b87:	jl     0x409b92
  409b89:	push   0xb1f87dbc
  409b8e:	ds dec ebx
  409b90:	rcl    DWORD PTR [eax+esi*8+0x61c89e4],cl
  409b97:	and    edi,DWORD PTR [ebx-0x46]
  409b9a:	xor    BYTE PTR [ecx-0x22166194],bh
  409ba0:	mov    ch,0x3
  409ba2:	call   0xc31d:0x4fe8229c
  409ba9:	sbb    eax,0x370d1be5
  409bae:	(bad)  
  409bb0:	(bad)  
  409bb1:	jg     0x409bec
  409bb3:	cmp    DWORD PTR [esi+0x3c197fd8],ecx
  409bb9:	mov    ah,0xa
  409bbb:	ret    0x9bbc
  409bbe:	xor    al,0x3c
  409bc0:	pop    ecx
  409bc1:	int    0x6e
  409bc3:	xchg   BYTE PTR [eax-0x43],ah
  409bc6:	push   ebx
  409bc7:	jb     0x409bca
  409bc9:	sbb    eax,0xc738830d
  409bce:	cmp    edx,DWORD PTR [edi+eax*4+0x6b]
  409bd2:	dec    ebp
  409bd3:	out    0x35,al
  409bd5:	xchg   ecx,eax
  409bd6:	int3   
  409bd7:	xor    al,0x2e
  409bd9:	scas   al,BYTE PTR es:[edi]
  409bda:	fidivr DWORD PTR ds:0x70bc29f
  409be0:	popa   
  409be1:	fstp   TBYTE PTR [esi+edi*4+0x12fffbc6]
  409be8:	push   ebp
  409be9:	repnz in eax,0x5d
  409bec:	imul   esp,DWORD PTR [esi-0x244f3630],0xffffffb3
  409bf3:	daa    
  409bf4:	imul   ebx,edi,0xa56c05de
  409bfa:	xchg   edx,eax
  409bfb:	das    
  409bfc:	js     0x409b7e
  409bfe:	push   ecx
  409bff:	jns    0x409c3e
  409c01:	xchg   esi,eax
  409c02:	inc    esp
  409c03:	pop    ebx
  409c04:	mov    cl,0xd2
  409c06:	daa    
  409c07:	jb     0x409c46
  409c09:	sub    esi,DWORD PTR [ebx-0x5e]
  409c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c0d:	push   ebp
  409c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c0f:	or     edi,ecx
  409c11:	test   BYTE PTR [ecx+0x14],cl
  409c14:	fmul   DWORD PTR [edx-0x68]
  409c17:	cs push ebp
  409c19:	mov    bl,0x1
  409c1b:	repz mov esi,0xf71510c3
  409c21:	add    al,0xe5
  409c23:	lock mov eax,ds:0x4a94b838
  409c29:	retf   0x9d37
  409c2c:	rcl    BYTE PTR [esi+0x7],0x84
  409c30:	jle    0x409bb9
  409c32:	in     al,dx
  409c33:	ss stos DWORD PTR es:[edi],eax
  409c35:	push   esi
  409c36:	call   0x40194fd2
  409c3b:	pop    ebp
  409c3c:	ficomp DWORD PTR [ebp+edi*2+0x77f614fe]
  409c43:	into   
  409c44:	inc    ebp
  409c45:	inc    eax
  409c46:	and    BYTE PTR [edi-0x74b8b36f],ah
  409c4c:	adc    BYTE PTR [ebx],ch
  409c4e:	xlat   BYTE PTR ds:[ebx]
  409c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c50:	in     al,0x55
  409c52:	add    eax,0x83c29160
  409c57:	mov    edx,0x88ad2f94
  409c5c:	mov    dl,0xaa
  409c5e:	mov    dl,0xc8
  409c60:	pop    edx
  409c61:	leave  
  409c62:	xor    DWORD PTR [ebx-0x52],eax
  409c65:	mov    al,ds:0xed157d75
  409c6a:	mov    esi,0x680939e2
  409c6f:	ds jmp 0x23a7704f
  409c75:	and    BYTE PTR [ebp-0x80],0xee
  409c79:	sub    BYTE PTR [esi+esi*2],ch
  409c7c:	adc    al,0xab
  409c7e:	clc    
  409c7f:	mov    edx,0x9cc7693a
  409c84:	xchg   edi,eax
  409c85:	addr16 mov ecx,0x40996861
  409c8b:	sub    DWORD PTR [edi+eiz*1+0x46],edx
  409c8f:	cmp    al,0xf7
  409c91:	cmp    ah,ch
  409c93:	call   0xc545:0x4f130a0
  409c9a:	jecxz  0x409c1d
  409c9c:	push   edi
  409c9d:	mov    eax,0x7ef8c16e
  409ca2:	jae    0x409c51
  409ca4:	pop    ebx
  409ca5:	pop    esp
  409ca6:	cmp    eax,ebp
  409ca8:	cmp    DWORD PTR [eax+0x7c],esi
  409cab:	sbb    al,0x96
  409cad:	add    eax,0xa137109
  409cb2:	xchg   ebp,eax
  409cb3:	mov    es,WORD PTR [eax+0x13335814]
  409cb9:	mov    bl,0x7c
  409cbb:	ja     0x409cd2
  409cbd:	cld    
  409cbe:	jg     0x409cd0
  409cc0:	cdq    
  409cc1:	cmp    BYTE PTR [eax-0x58fbc9d0],cl
  409cc7:	test   eax,0x242beb1c
  409ccc:	jae    0x409cef
  409cce:	xchg   edi,eax
  409ccf:	call   0xfdb91296
  409cd4:	xchg   DWORD PTR [esi],ebp
  409cd6:	(bad)  
  409cd7:	lods   eax,DWORD PTR ds:[esi]
  409cd8:	ins    DWORD PTR es:[edi],dx
  409cd9:	push   ebx
  409cda:	cwde   
  409cdb:	stc    
  409cdc:	das    
  409cdd:	add    al,0xe
  409cdf:	cmp    ebp,edi
  409ce1:	hlt    
  409ce2:	mov    esi,0x461f9544
  409ce7:	lods   al,BYTE PTR ds:[esi]
  409ce8:	nop
  409ce9:	fist   DWORD PTR [esi+0x8]
  409cec:	in     al,0x69
  409cee:	lea    ebp,[ebx]
  409cf0:	jno    0x409d27
  409cf2:	mov    ecx,DWORD PTR [ebp+edx*2-0x66]
  409cf6:	adc    al,0x1d
  409cf8:	adc    al,0xd
  409cfa:	push   edx
  409cfb:	cdq    
  409cfc:	sub    DWORD PTR [edi],ebx
  409cfe:	leave  
  409cff:	das    
  409d00:	lods   eax,DWORD PTR ds:[esi]
  409d01:	mov    ebp,0x8291817b
  409d06:	in     eax,dx
  409d07:	mov    edx,DWORD PTR [ebx+0x1f]
  409d0a:	aad    0x93
  409d0c:	outs   dx,BYTE PTR ds:[esi]
  409d0d:	jb     0x409d37
  409d0f:	jmp    0xb5:0x66ef962b
  409d16:	mov    ebp,eax
  409d18:	mov    al,0x60
  409d1a:	push   es
  409d1b:	pop    edx
  409d1c:	cmc    
  409d1d:	aas    
  409d1e:	add    BYTE PTR [edx+0x61],dl
  409d21:	mov    cl,0xe7
  409d23:	fcomp  DWORD PTR [bx-0x18]
  409d27:	adc    al,0xb4
  409d29:	test   DWORD PTR [ecx+0x35],ebp
  409d2c:	std    
  409d2d:	cbw    
  409d2f:	pop    ebp
  409d30:	xlat   BYTE PTR ds:[ebx]
  409d31:	push   esi
  409d32:	mov    al,ds:0xd81bab25
  409d37:	sbb    dl,BYTE PTR [eax+0x47]
  409d3a:	adc    BYTE PTR [eax],bh
  409d3c:	ja     0x409d5e
  409d3e:	(bad)  
  409d3f:	cmp    eax,0xe3a3ce46
  409d44:	dec    edi
  409d45:	cmp    BYTE PTR [edi+0x48],cl
  409d48:	cwde   
  409d49:	dec    edx
  409d4a:	mov    ds:0x9e834a4a,eax
  409d4f:	mul    DWORD PTR [eax]
  409d51:	xlat   BYTE PTR ds:[ebx]
  409d52:	push   edi
  409d53:	loop   0x409dce
  409d55:	jge    0x409d13
  409d57:	out    dx,eax
  409d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d59:	int    0x61
  409d5b:	sbb    al,0x74
  409d5d:	adc    ch,BYTE PTR [edx-0x675f31b7]
  409d63:	inc    ebx
  409d64:	lock sub esi,DWORD PTR [ebp-0x59999ee9]
  409d6b:	lds    ebp,FWORD PTR [eax]
  409d6d:	rcr    DWORD PTR [ebx+eiz*2],1
  409d70:	sti    
  409d71:	cmp    DWORD PTR [ebx],ebx
  409d73:	mov    ebx,edi
  409d75:	out    dx,al
  409d76:	icebp  
  409d77:	cdq    
  409d78:	dec    eax
  409d79:	push   ebx
  409d7a:	ds xchg esi,eax
  409d7c:	std    
  409d7d:	push   eax
  409d7e:	ja     0x409deb
  409d80:	daa    
  409d81:	jmp    0x83f22867
  409d86:	dec    esp
  409d87:	dec    edi
  409d88:	mov    ch,0xc8
  409d8a:	mov    al,ds:0xf88ffa0c
  409d8f:	cmp    ebp,0x11
  409d92:	cwde   
  409d93:	(bad)  
  409d94:	add    al,0xc5
  409d96:	lea    esi,[eax+ebp*8-0x30541b79]
  409d9d:	mov    edx,0xdb078f24
  409da2:	jb     0x409def
  409da4:	jbe    0x409e04
  409da6:	sahf   
  409da7:	test   BYTE PTR [edx-0x5e],dh
  409daa:	push   ebx
  409dab:	je     0x409e0b
  409dad:	loope  0x409daf
  409daf:	retf   
  409db0:	lods   eax,DWORD PTR ds:[esi]
  409db1:	sbb    al,0x26
  409db3:	ret    
  409db4:	jmp    0x91e9:0x3948166
  409dbb:	arpl   WORD PTR [bp+di],si
  409dbe:	push   ss
  409dbf:	xchg   edi,eax
  409dc0:	and    al,0xfb
  409dc2:	mov    eax,0x42067470
  409dc7:	out    0xe9,al
  409dc9:	mov    bh,0x60
  409dcb:	xchg   ebx,eax
  409dcc:	pop    esi
  409dcd:	mov    edx,DWORD PTR [ebx+0x31]
  409dd0:	das    
  409dd1:	leave  
  409dd2:	(bad)
  409dd6:	sar    DWORD PTR [eax+0x6b],0x16
  409dda:	mov    ecx,0xd2da61b4
  409ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de0:	sbb    al,0xd6
  409de2:	sbb    esi,eax
  409de4:	dec    edx
  409de5:	ja     0x596faf31
  409deb:	push   eax
  409dec:	mov    gs,WORD PTR [esi+0x43f8ad2e]
  409df2:	mov    WORD PTR [ecx-0x443fdfe2],?
  409df8:	(bad)  
  409df9:	aad    0xf1
  409dfb:	dec    ebp
  409dfc:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  409dfe:	sub    eax,0x75b1f565
  409e03:	sbb    ch,cl
  409e05:	adc    al,0x22
  409e07:	cwde   
  409e08:	xchg   ecx,eax
  409e09:	cmc    
  409e0a:	mov    ebx,0xd721d4d9
  409e0f:	push   edi
  409e10:	js     0x409e15
  409e12:	(bad)  
  409e14:	or     esp,DWORD PTR [edx+0x5016dfd4]
  409e1a:	mov    bl,0x7c
  409e1c:	xlat   BYTE PTR ds:[ebx]
  409e1d:	fld    TBYTE PTR [esi+esi*1-0x33]
  409e21:	fwait
  409e22:	sub    bl,BYTE PTR [esp+ebp*4-0x62]
  409e26:	stos   DWORD PTR es:[edi],eax
  409e27:	jb     0x409e00
  409e29:	adc    edi,0xfab48481
  409e2f:	pop    edx
  409e30:	js     0x409dbc
  409e32:	imul   ebx,edx,0x15
  409e35:	je     0x409e20
  409e37:	cmp    bl,BYTE PTR [esi-0x691d712f]
  409e3d:	xchg   ebp,eax
  409e3e:	or     ah,BYTE PTR [esi+0xf]
  409e41:	js     0x409dc7
  409e43:	in     eax,dx
  409e44:	mov    bh,0xa7
  409e46:	xlat   BYTE PTR ds:[ebx]
  409e47:	cmp    ch,BYTE PTR [ebp+0x14b94802]
  409e4d:	aas    
  409e4e:	pop    esi
  409e4f:	pop    ebp
  409e50:	xchg   ebp,eax
  409e51:	jle    0x409ec5
  409e53:	ret    0x8d65
  409e56:	xor    ebp,ebx
  409e58:	add    ecx,ebp
  409e5a:	lods   al,BYTE PTR ds:[esi]
  409e5b:	test   DWORD PTR [eax+0x14529ab5],ebp
  409e61:	ins    DWORD PTR es:[edi],dx
  409e62:	nop
  409e63:	xchg   ebp,eax
  409e64:	bound  esi,QWORD PTR ds:0x51ab787c
  409e6a:	mov    al,cl
  409e6c:	jnp    0x409e2c
  409e6e:	bts    ebp,esp
  409e71:	mov    BYTE PTR [ecx-0x64],al
  409e74:	pop    esi
  409e75:	jl     0x409e2a
  409e77:	lea    esi,[ecx-0x1ee03cf9]
  409e7d:	mov    ch,0x60
  409e7f:	scas   al,BYTE PTR es:[edi]
  409e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e81:	(bad)  
  409e83:	sub    BYTE PTR [eax],ah
  409e85:	cmp    al,0x4c
  409e87:	xchg   esp,eax
  409e88:	xchg   BYTE PTR [edx-0x74ab5828],cl
  409e8e:	dec    ebx
  409e8f:	enter  0xa8d2,0x5
  409e93:	stos   BYTE PTR es:[edi],al
  409e94:	inc    ecx
  409e95:	(bad)  [esp+ebp*8]
  409e98:	mov    ah,0xe7
  409e9a:	aas    
  409e9b:	lods   eax,DWORD PTR ds:[esi]
  409e9c:	aad    0xe
  409e9e:	push   cs
  409e9f:	push   esi
  409ea0:	or     al,BYTE PTR ds:0x3cfd79ee
  409ea6:	push   esp
  409ea7:	xchg   edx,eax
  409ea8:	test   BYTE PTR [edi+0x22],dl
  409eab:	arpl   cx,sp
  409ead:	retf   0xa7a3
  409eb0:	and    dl,BYTE PTR [esi+ecx*2]
  409eb3:	dec    edi
  409eb4:	stos   DWORD PTR es:[edi],eax
  409eb5:	jle    0x409ea4
  409eb7:	ror    edx,1
  409eb9:	arpl   si,bp
  409ebb:	sub    BYTE PTR [edi],dl
  409ebd:	xchg   ecx,eax
  409ebe:	mov    ebx,0x9ce2041e
  409ec3:	test   BYTE PTR [edx+edx*8-0x50],dh
  409ec7:	inc    ebx
  409ec8:	ds mov bh,0x0
  409ecb:	pop    ebp
  409ecc:	xchg   DWORD PTR [esp+0x57],ebx
  409ed0:	cmp    BYTE PTR [eax],bh
  409ed2:	jne    0x409e6c
  409ed4:	inc    ebp
  409ed5:	leave  
  409ed6:	jle    0x409eea
  409ed8:	arpl   WORD PTR [ecx-0x5b68e6b],ax
  409ede:	inc    ebx
  409edf:	and    BYTE PTR [ebp-0x47cc7d33],dl
  409ee5:	mov    cl,0x66
  409ee7:	and    DWORD PTR [ebx-0x6e],eax
  409eea:	xor    ecx,esi
  409eec:	das    
  409eed:	int3   
  409eee:	mov    eax,ds:0x63a844d1
  409ef3:	lahf   
  409ef4:	jbe    0x409ec3
  409ef6:	test   DWORD PTR [eax],edx
  409ef8:	xor    eax,0x101c02f8
  409efd:	add    BYTE PTR [ebp+0x2e],0x89
  409f01:	ins    DWORD PTR es:[edi],dx
  409f02:	mov    al,ds:0x72add047
  409f07:	or     al,BYTE PTR [ecx+edi*8-0x2f]
  409f0b:	push   edx
  409f0c:	add    edi,DWORD PTR [ebx]
  409f0e:	inc    esp
  409f0f:	gs mov ebp,0xb076785e
  409f15:	add    bl,BYTE PTR [ecx+0x24]
  409f18:	mov    eax,ds:0xfcfd4cc5
  409f1d:	or     eax,0x39d6571f
  409f22:	out    0xc1,al
  409f24:	lods   eax,DWORD PTR ds:[esi]
  409f25:	repnz add BYTE PTR [edi],bl
  409f28:	clc    
  409f29:	mov    ecx,0xeaa9e227
  409f2e:	add    ch,BYTE PTR [edi]
  409f30:	lea    edx,[eax]
  409f32:	lods   al,BYTE PTR ds:[esi]
  409f33:	and    eax,0x8f859d3d
  409f38:	sbb    ah,BYTE PTR [ebx]
  409f3a:	add    eax,0x843c64e
  409f3f:	shl    DWORD PTR [esi+0x7e],cl
  409f42:	sub    al,0x4e
  409f44:	xor    al,0xfe
  409f46:	fs jmp 0x409f1c
  409f49:	cmp    al,0x65
  409f4b:	shr    DWORD PTR [edi-0x314a50cf],0x38
  409f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f53:	ds inc esi
  409f55:	or     al,0xa5
  409f57:	imul   BYTE PTR [edi]
  409f59:	sbb    eax,0x573bf3c
  409f5e:	mov    dl,0xce
  409f60:	hlt    
  409f61:	nop
  409f62:	data16 mov ds:0x7610b63,al
  409f68:	mov    bl,0x37
  409f6a:	sub    BYTE PTR [ebx],bh
  409f6c:	test   eax,0x6dc25c6d
  409f71:	inc    edi
  409f72:	mov    DWORD PTR [eax+0x267dc209],0x381b740f
  409f7c:	inc    ebx
  409f7d:	sub    dh,dh
  409f7f:	fcomp  DWORD PTR [ecx+0x198808b]
  409f85:	add    BYTE PTR [eax],al
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a222
  40a251:	popa   
  40a252:	(bad)  
  40a253:	mov    eax,ds:0x7c7c05d0
  40a258:	dec    esi
  40a259:	pop    edi
  40a25a:	jl     0x40a2d8
  40a25c:	lds    ebp,FWORD PTR [edi+0x2b98014a]
  40a262:	(bad)  
  40a264:	or     ch,BYTE PTR [edi+0x72]
  40a267:	and    eax,0xc7923bb9
  40a26c:	xchg   edx,eax
  40a26d:	xchg   BYTE PTR [esi+eax*1-0x23],bh
  40a271:	add    edi,DWORD PTR [edx+edx*2]
  40a274:	xchg   ebx,eax
  40a275:	and    ah,BYTE PTR [esi+0x11]
  40a278:	idiv   esi
  40a27a:	push   es
  40a27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a27c:	ds into 
  40a27e:	cs mov edi,0xa8caf7aa
  40a284:	mov    ds:0xd096740d,eax
  40a289:	ret    
  40a28a:	push   ss
  40a28b:	shl    dl,cl
  40a28d:	adc    edx,ebx
  40a28f:	data16 mov BYTE PTR [esi],bh
  40a292:	sub    bl,BYTE PTR [edx-0xd]
  40a295:	in     eax,0x37
  40a297:	add    al,0xa3
  40a299:	xchg   edx,eax
  40a29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29b:	es push ecx
  40a29d:	add    DWORD PTR [esi+0x31],0xfd11b3bf
  40a2a4:	imul   BYTE PTR [eax+edi*4+0x20fe6f94]
  40a2ab:	dec    edx
  40a2ac:	es xchg ebp,eax
  40a2ae:	mov    ecx,0x2e0f0373
  40a2b3:	jb     0x40a298
  40a2b5:	jp     0x40a23b
  40a2b7:	stos   BYTE PTR es:[edi],al
  40a2b8:	es aad 0x6b
  40a2bb:	sub    ecx,DWORD PTR [eax+edi*1]
  40a2be:	fdiv   QWORD PTR ds:0xf034237e
  40a2c4:	jno    0x40a335
  40a2c6:	lods   eax,DWORD PTR ds:[esi]
  40a2c7:	jo     0x40a322
  40a2c9:	icebp  
  40a2ca:	cmp    esi,edi
  40a2cc:	mov    ah,0xc4
  40a2ce:	in     al,dx
  40a2cf:	inc    eax
  40a2d0:	nop
  40a2d1:	dec    esp
  40a2d2:	stos   BYTE PTR es:[edi],al
  40a2d3:	jae    0x40a2af
  40a2d5:	hlt    
  40a2d6:	mov    DWORD PTR [eax],ecx
  40a2d8:	jecxz  0x40a283
  40a2da:	fdiv   QWORD PTR [ecx-0x4f]
  40a2dd:	(bad)
  40a2e0:	jecxz  0x40a321
  40a2e2:	cmp    ch,ch
  40a2e4:	push   ds
  40a2e5:	cmp    al,0x4e
  40a2e7:	push   ss
  40a2e8:	mov    eax,0xdb932a2b
  40a2ed:	dec    ecx
  40a2ee:	cmp    BYTE PTR [eax+0x56fe59e1],0x0
  40a2f5:	call   0x6ad8:0x29125164
  40a2fc:	mov    eax,0x6c62c3cc
  40a301:	or     edi,DWORD PTR [eax]
  40a303:	xchg   ebx,eax
  40a304:	cmp    ah,dh
  40a306:	push   ebx
  40a307:	aam    0x59
  40a309:	test   al,0xd8
  40a30b:	push   eax
  40a30c:	xchg   edi,eax
  40a30d:	and    esp,DWORD PTR [esi+0x19]
  40a310:	inc    ebx
  40a311:	push   cs
  40a312:	and    ebx,ebx
  40a314:	outs   dx,DWORD PTR ds:[esi]
  40a315:	js     0x40a38e
  40a317:	loope  0x40a2eb
  40a319:	out    0xcb,al
  40a31b:	sub    dh,ch
  40a31d:	dec    ecx
  40a31e:	in     al,0x3d
  40a320:	dec    BYTE PTR [edx-0x7b5c256b]
  40a326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a327:	or     ebx,DWORD PTR [edx-0x568fd87f]
  40a32d:	loop   0x40a377
  40a32f:	push   esp
  40a330:	(bad)  
  40a331:	aam    0xc4
  40a333:	jp     0x40a30b
  40a335:	xor    cl,BYTE PTR [esi+0x5]
  40a338:	ja     0x40a398
  40a33a:	std    
  40a33b:	dec    ecx
  40a33c:	pop    esi
  40a33d:	outs   dx,BYTE PTR ds:[esi]
  40a33e:	outs   dx,DWORD PTR ds:[esi]
  40a33f:	mov    al,ds:0x7adba678
  40a344:	shr    DWORD PTR [esi],0x22
  40a347:	pop    ds
  40a348:	arpl   WORD PTR [eax],ax
  40a34a:	push   ebp
  40a34b:	add    DWORD PTR [esi-0x16],0x7d
  40a34f:	sbb    BYTE PTR [edx+ebp*2],dl
  40a352:	(bad)  
  40a354:	jl     0x40a331
  40a356:	loopne 0x40a3ba
  40a358:	rol    ah,1
  40a35a:	cmp    eax,DWORD PTR [ecx-0x11]
  40a35d:	sbb    bh,dh
  40a35f:	dec    esi
  40a360:	fucomip st,st(0)
  40a362:	xchg   ebx,eax
  40a363:	or     eax,0xabce7fa5
  40a368:	ror    BYTE PTR [edx-0x46b99ba6],cl
  40a36e:	or     DWORD PTR [ecx+0x514fb52],edi
  40a374:	sbb    eax,0xab0289d7
  40a379:	js     0x40a381
  40a37b:	adc    eax,ecx
  40a37d:	xor    BYTE PTR [esi],dh
  40a37f:	dec    edi
  40a380:	push   es
  40a381:	mov    ah,0x8d
  40a383:	jg     0x40a3bd
  40a385:	lea    ebp,[edi-0x29bf7413]
  40a38b:	icebp  
  40a38c:	mov    ecx,DWORD PTR [ecx]
  40a38e:	mov    al,ds:0x10f842a
  40a393:	cmp    eax,0x36eaf2c6
  40a398:	push   0xffffff8f
  40a39a:	mov    dl,BYTE PTR es:[ebx]
  40a39d:	ds jmp 0x40a353
  40a3a0:	xlat   BYTE PTR ds:[ebx]
  40a3a1:	pop    ecx
  40a3a2:	loop   0x40a368
  40a3a4:	xor    ecx,DWORD PTR [esi-0x68]
  40a3a7:	lock inc eax
  40a3a9:	imul   esi,DWORD PTR [eax-0x18f1aa5b],0xf20f164a
  40a3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3b4:	inc    edi
  40a3b5:	mov    esp,0x3849c2dd
  40a3ba:	fisttp DWORD PTR ds:0x3956d35b
  40a3c0:	sbb    bl,bh
  40a3c2:	dec    esp
  40a3c3:	(bad)  [ecx+0x52]
  40a3c6:	enter  0x14cb,0x68
  40a3ca:	inc    eax
  40a3cb:	push   ecx
  40a3cc:	jge    0x40a355
  40a3ce:	add    esp,DWORD PTR [ecx-0x4a]
  40a3d1:	loop   0x40a3f8
  40a3d3:	icebp  
  40a3d4:	clc    
  40a3d5:	test   al,0xb4
  40a3d8:	mul    BYTE PTR [ebx]
  40a3da:	mov    edi,0xb07b3916
  40a3df:	dec    esi
  40a3e0:	cs scas al,BYTE PTR es:[edi]
  40a3e2:	xor    DWORD PTR [esi-0x41015447],ebp
  40a3e8:	retf   0xdcb8
  40a3eb:	in     al,dx
  40a3ec:	push   es
  40a3ed:	mov    bl,0x35
  40a3ef:	inc    esp
  40a3f0:	jno    0x40a423
  40a3f2:	cmp    al,0x67
  40a3f4:	inc    ebx
  40a3f5:	sahf   
  40a3f6:	push   0x64
  40a3f8:	and    BYTE PTR [esi-0x14],ah
  40a3fb:	in     eax,dx
  40a3fc:	sbb    ah,bh
  40a3fe:	xor    DWORD PTR [edi-0x79],ebx
  40a401:	and    DWORD PTR [edi-0x48c3ad03],0x63
  40a408:	fld    QWORD PTR [eax]
  40a40a:	sbb    eax,0x545d568d
  40a40f:	sub    bl,dl
  40a411:	pop    ds
  40a412:	and    esi,DWORD PTR [ecx-0x76]
  40a415:	xlat   BYTE PTR ds:[ebx]
  40a416:	pop    eax
  40a417:	shl    BYTE PTR [eax],1
  40a419:	lock outs dx,BYTE PTR ds:[esi]
  40a41b:	(bad)  
  40a41c:	pop    ebp
  40a41d:	dec    ecx
  40a41e:	stos   BYTE PTR es:[edi],al
  40a41f:	dec    esi
  40a420:	jg     0x40a3de
  40a422:	push   ecx
  40a423:	pusha  
  40a424:	mov    dh,0x19
  40a426:	cmp    al,0x13
  40a428:	dec    edx
  40a429:	cld    
  40a42a:	cmp    DWORD PTR ss:[ecx-0x60513938],edx
  40a431:	sub    DWORD PTR [ebx+0x2a],ebx
  40a434:	pop    eax
  40a435:	js     0x40a400
  40a437:	fwait
  40a438:	pop    ecx
  40a439:	retf   0x9588
  40a43c:	(bad)  
  40a43d:	fucomip st,st(6)
  40a43f:	inc    ebx
  40a440:	sub    edi,esi
  40a442:	mov    esi,DWORD PTR [ebp-0x207cadf]
  40a448:	push   esi
  40a449:	xor    al,0x34
  40a44b:	adc    BYTE PTR [eax-0x4b706147],bh
  40a451:	inc    ebp
  40a452:	out    0xcf,eax
  40a454:	cmp    DWORD PTR [ebx],esi
  40a456:	mov    eax,ds:0xbd31c34b
  40a45b:	push   esi
  40a45c:	xchg   ebp,eax
  40a45d:	mov    al,0xae
  40a45f:	into   
  40a460:	xchg   esp,eax
  40a461:	pop    es
  40a462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a463:	add    DWORD PTR [edi+0x15],ebp
  40a466:	cld    
  40a467:	nop
  40a468:	pop    ebp
  40a469:	jmp    0x40a48c
  40a46b:	dec    esi
  40a46c:	jno    0x40a43d
  40a46e:	dec    DWORD PTR [eax-0x6c]
  40a471:	in     eax,0x5
  40a473:	aaa    
  40a474:	stc    
  40a475:	nop
  40a476:	out    0xa2,eax
  40a478:	(bad)  
  40a479:	cwde   
  40a47a:	pop    eax
  40a47b:	inc    ecx
  40a47c:	cmp    al,0xea
  40a47e:	push   0x79
  40a480:	imul   esi,DWORD PTR [edx+0x3ffb900e],0x862b7516
  40a48a:	inc    ecx
  40a48b:	mov    bh,0x5e
  40a48d:	loop   0x40a464
  40a48f:	dec    ebp
  40a490:	or     BYTE PTR [edi],bl
  40a492:	lea    ebp,[ecx+edi*8]
  40a495:	dec    ebp
  40a496:	cmp    dl,BYTE PTR [edi+esi*4+0x53d19311]
  40a49d:	add    eax,0x9efbf025
  40a4a2:	inc    esp
  40a4a3:	xor    BYTE PTR [esp+eax*2],dl
  40a4a6:	dec    ebx
  40a4a7:	inc    esi
  40a4a8:	sub    ebp,DWORD PTR [eax-0x33]
  40a4ab:	ja     0x40a4e4
  40a4ad:	in     al,dx
  40a4ae:	push   esi
  40a4af:	das    
  40a4b0:	ins    BYTE PTR es:[edi],dx
  40a4b1:	mov    edx,0xedb5039f
  40a4b6:	mov    ds:0x449f9f4a,eax
  40a4bb:	pop    ds
  40a4bc:	sbb    ecx,DWORD PTR [ecx-0x414f9848]
  40a4c2:	jmp    0xd778:0xa6a46c69
  40a4c9:	inc    edx
  40a4ca:	lock into 
  40a4cc:	pop    ebp
  40a4cd:	adc    al,0x93
  40a4cf:	dec    eax
  40a4d0:	addr16 js 0x40a457
  40a4d3:	das    
  40a4d4:	mov    eax,ds:0x55e11e68
  40a4d9:	jge    0x40a4ac
  40a4db:	jge    0x40a525
  40a4dd:	dec    edi
  40a4de:	jnp    0x40a4ef
  40a4e0:	dec    esp
  40a4e1:	popf   
  40a4e2:	pop    DWORD PTR [ebp-0x18]
  40a4e5:	mov    ah,0x2f
  40a4e7:	dec    ebx
  40a4e8:	js     0x40a4e9
  40a4ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4eb:	(bad)  
  40a4ec:	mov    eax,0xa31daf3c
  40a4f1:	dec    edi
  40a4f2:	ficomp DWORD PTR ds:0x8229b004
  40a4f8:	xor    edx,DWORD PTR ds:0xc32da6f3
  40a4fe:	mov    ecx,0x8f800fec
  40a503:	popf   
  40a504:	dec    edx
  40a505:	adc    eax,0x2274222a
  40a50a:	rol    cl,cl
  40a50c:	add    bh,bl
  40a50e:	push   ebp
  40a50f:	cmp    ecx,DWORD PTR [ebp+0x40ffffa0]
  40a515:	mov    DWORD PTR [ecx+0x3b960fc8],0x8edd1794
  40a51f:	sbb    BYTE PTR [ebp-0xb2f8c71],0xc8
  40a526:	in     eax,0xa2
  40a528:	jmp    0x40a4c4
  40a52a:	(bad)  
  40a52b:	xchg   ecx,eax
  40a52c:	cli    
  40a52d:	lds    eax,FWORD PTR [ebp+0x6ddec77a]
  40a533:	stos   BYTE PTR es:[edi],al
  40a534:	loopne 0x40a51b
  40a536:	cli    
  40a537:	cs add eax,0x777733a5
  40a53d:	ret    
  40a53e:	push   edi
  40a53f:	jnp    0x40a521
  40a541:	arpl   WORD PTR [ebp+0xa],si
  40a544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a545:	mov    DWORD PTR [eax],ebp
  40a547:	es inc ebx
  40a549:	mov    eax,0xc5c042e0
  40a54e:	fist   DWORD PTR [ebp+0x14]
  40a551:	adc    al,0xb7
  40a553:	or     DWORD PTR ds:0x2544dbc1,ebp
  40a559:	pop    ds
  40a55a:	shr    DWORD PTR [edi+0xe],0xc8
  40a55e:	test   DWORD PTR [ebx+0x616bbca5],esi
  40a564:	dec    esi
  40a565:	jle    0x40a520
  40a567:	clc    
  40a568:	sahf   
  40a569:	lods   eax,DWORD PTR ds:[esi]
  40a56a:	lods   al,BYTE PTR ds:[esi]
  40a56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a56c:	cmc    
  40a56d:	mov    al,ds:0xc2aa0a0e
  40a572:	test   edi,eax
  40a574:	lods   eax,DWORD PTR ds:[esi]
  40a575:	stos   DWORD PTR es:[edi],eax
  40a576:	inc    esi
  40a577:	aad    0xb6
  40a579:	push   0x65a880d6
  40a57e:	nop
  40a57f:	imul   edx,DWORD PTR [ebx+esi*8],0x60f98b06
  40a586:	(bad)  
  40a587:	jnp    0x40a5e6
  40a589:	adc    eax,DWORD PTR [edi+0x6ab93c70]
  40a58f:	mov    dl,0x36
  40a591:	les    eax,FWORD PTR [esi+0x38]
  40a594:	mov    gs,ebp
  40a596:	sbb    DWORD PTR [edx],0xc2946955
  40a59c:	sti    
  40a59d:	mov    cl,0x57
  40a59f:	xchg   di,ax
  40a5a1:	mov    esi,0xd498a782
  40a5a6:	add    DWORD PTR [ebx-0x4dbc00b0],esi
  40a5ac:	mov    ds:0x833aae57,al
  40a5b1:	xchg   BYTE PTR ds:0x202db3cc,bh
  40a5b7:	cmp    al,BYTE PTR [ebp-0x1bb8cd7]
  40a5bd:	mov    al,0x1d
  40a5bf:	loop   0x40a57c
  40a5c1:	addr16 pop eax
  40a5c3:	cli    
  40a5c4:	paddsb mm1,QWORD PTR [edi]
  40a5c7:	dec    ecx
  40a5c8:	lahf   
  40a5c9:	pop    ecx
  40a5ca:	imul   ebx,DWORD PTR [ebp-0x5],0x5b1f859a
  40a5d1:	push   cs
  40a5d2:	retf   
  40a5d3:	push   ds
  40a5d4:	push   ss
  40a5d5:	cmp    eax,0x33a13f12
  40a5da:	or     eax,DWORD PTR [edi]
  40a5dc:	rcl    BYTE PTR [edi-0x44],cl
  40a5df:	lea    eax,[esi-0x3e63e67f]
  40a5e5:	mov    bh,al
  40a5e7:	adc    DWORD PTR ds:0x23dabd90,ecx
  40a5ed:	je     0x40a5b0
  40a5ef:	xchg   BYTE PTR [edi+0x1a],bh
  40a5f2:	ror    BYTE PTR [edx-0x58],cl
  40a5f5:	cmp    eax,0x1d0bc5fd
  40a5fa:	dec    esp
  40a5fb:	loope  0x40a651
  40a5fd:	imul   edi,esp,0x49
  40a600:	inc    edi
  40a601:	dec    edi
  40a602:	mov    ebp,0x450c8116
  40a607:	dec    ebp
  40a608:	hlt    
  40a609:	je     0x40a639
  40a60b:	or     DWORD PTR [ecx+0x2bdf26f9],esp
  40a611:	test   DWORD PTR [ecx-0x36],ebp
  40a614:	mov    edx,0xc7b0bf63
  40a619:	mov    edi,0xa38ab7a8
  40a61e:	or     dl,BYTE PTR [ebx+0x49]
  40a621:	daa    
  40a622:	jl     0x40a5e5
  40a624:	sahf   
  40a625:	popf   
  40a626:	paddsw mm3,QWORD PTR [eax-0x21]
  40a62a:	or     BYTE PTR [edi],cl
  40a62c:	cmp    al,0x31
  40a62e:	clc    
  40a62f:	adc    dh,BYTE PTR [edx+eax*2+0x68759bd0]
  40a636:	push   ebx
  40a637:	dec    edx
  40a638:	int    0xd0
  40a63a:	inc    ebx
  40a63b:	ror    DWORD PTR [eax+0x23],1
  40a63e:	and    DWORD PTR [ebp-0x2a],eax
  40a641:	stos   BYTE PTR es:[edi],al
  40a642:	retf   0xf30d
  40a645:	or     BYTE PTR [edx],0x7f
  40a648:	mov    esp,0x1e68270c
  40a64d:	fs out dx,eax
  40a64f:	(bad)  
  40a650:	xor    BYTE PTR [esi+0xcef7ef],bl
  40a656:	xor    eax,0x37fa790f
  40a65b:	mov    eax,0x7fb1464f
  40a660:	cmp    DWORD PTR [esi+0x44],esi
  40a663:	in     al,0xf2
  40a665:	das    
  40a666:	cmp    BYTE PTR [ebx],0x24
  40a669:	add    BYTE PTR [edi+0x11],cl
  40a66c:	mov    ?,WORD PTR [edi]
  40a66e:	daa    
  40a66f:	pop    es
  40a670:	sbb    edi,DWORD PTR [edi-0x6d83bad9]
  40a676:	mov    esi,0xd6930f60
  40a67b:	in     al,dx
  40a67c:	jge    0x40a6d9
  40a67e:	push   ecx
  40a67f:	mov    bl,0xe8
  40a681:	mov    ecx,fs
  40a683:	shl    DWORD PTR [ebp+0x10905735],1
  40a689:	stos   DWORD PTR es:[edi],eax
  40a68a:	les    ecx,FWORD PTR [ecx-0x70]
  40a68d:	mov    dh,0x44
  40a68f:	jecxz  0x40a6c8
  40a691:	inc    ebx
  40a692:	mov    BYTE PTR [esi-0x6e],ah
  40a695:	or     eax,0x95ee0f16
  40a69a:	xor    eax,0xe6bf3e62
  40a69f:	rcl    DWORD PTR [ebp-0x38980ad9],0xe9
  40a6a6:	and    BYTE PTR [edi-0x243aec79],0x9c
  40a6ad:	dec    esp
  40a6ae:	add    BYTE PTR [ecx+ebp*1-0x4a],0x4a
  40a6b3:	out    dx,al
  40a6b4:	xor    al,0xc
  40a6b6:	mov    ebx,0xd08ae730
  40a6bb:	pop    esp
  40a6bc:	pusha  
  40a6bd:	retf   0xf70d
  40a6c0:	gs iret 
  40a6c2:	inc    eax
  40a6c3:	inc    esp
  40a6c4:	jmp    0xe45a:0x16a0f458
  40a6cb:	jmp    0x40a6a9
  40a6cd:	(bad)  
  40a6cf:	scas   eax,DWORD PTR es:[edi]
  40a6d0:	xchg   DWORD PTR [ebx+0x18a7b755],ebx
  40a6d6:	mov    al,ds:0xf5f7846
  40a6db:	and    edx,0x56fa0f99
  40a6e1:	mov    WORD PTR [ecx+ebx*4],ds
  40a6e4:	cmp    eax,0xf4d40683
  40a6e9:	mov    edx,0x113af82d
  40a6ee:	das    
  40a6ef:	shl    BYTE PTR [edi-0x6c0eac52],cl
  40a6f5:	iret   
  40a6f6:	mov    cl,0x71
  40a6f8:	push   esi
  40a6f9:	mov    ecx,0x3a02eca0
  40a6fe:	pop    esi
  40a6ff:	sbb    al,0x33
  40a701:	test   BYTE PTR [edi+eiz*4-0x4d6f94a2],dh
  40a708:	push   esp
  40a709:	mov    dl,0xb3
  40a70b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40a70d:	stos   DWORD PTR es:[edi],eax
  40a70e:	sub    al,0x5e
  40a710:	fimul  DWORD PTR [edx-0x4720fe99]
  40a716:	fstp   DWORD PTR [ebp-0x3]
  40a719:	jbe    0x40a73c
  40a71b:	rcl    bl,cl
  40a71d:	in     eax,dx
  40a71e:	(bad)  
  40a71f:	iret   
  40a720:	jecxz  0x40a755
  40a722:	outs   dx,BYTE PTR ds:[esi]
  40a723:	or     edx,DWORD PTR [esi+0x6e9a7b90]
  40a729:	adc    eax,0x727eeb52
  40a72e:	xchg   DWORD PTR [edx-0x42],esi
  40a731:	sbb    edi,DWORD PTR [esi+0x415683c7]
  40a737:	xchg   eax,ecx
  40a739:	(bad)  
  40a73a:	adc    dl,BYTE PTR [ebx+0x2819ae55]
  40a740:	in     al,0xd1
  40a742:	fstp   QWORD PTR [ecx+0x6f464a4d]
  40a748:	(bad)  
  40a749:	xor    dl,cl
  40a74b:	rcl    DWORD PTR [eax+edi*4],cl
  40a74e:	push   esp
  40a74f:	push   cs
  40a750:	addr16 push esi
  40a752:	sbb    BYTE PTR [ebx],0x27
  40a755:	mov    dl,0x55
  40a757:	ins    BYTE PTR es:[edi],dx
  40a758:	popa   
  40a759:	push   cs
  40a75a:	sbb    eax,DWORD PTR [edi-0x11380581]
  40a760:	sub    dl,BYTE PTR [ebx+0x3b]
  40a763:	mov    ebx,0x71c9a12e
  40a768:	xor    edi,DWORD PTR [eax-0x14a870f8]
  40a76e:	jno    0x40a7e1
  40a770:	adc    DWORD PTR [esi],edx
  40a772:	sbb    eax,0x5d21713e
  40a777:	pop    ebx
  40a778:	xchg   esi,eax
  40a779:	push   0xffffff90
  40a77b:	pop    esi
  40a77c:	dec    esp
  40a77d:	xchg   dh,bh
  40a77f:	fsub   QWORD PTR [ebx+0x72]
  40a782:	scas   eax,DWORD PTR es:[edi]
  40a783:	mov    ebp,0x7ab4185a
  40a788:	mov    dh,0x57
  40a78a:	jno    0x40a7e2
  40a78c:	outs   dx,DWORD PTR ds:[esi]
  40a78d:	xchg   ebp,eax
  40a78e:	outs   dx,BYTE PTR ds:[esi]
  40a78f:	push   ebp
  40a790:	mov    ebx,ebx
  40a792:	and    edx,ebp
  40a794:	cs sti 
  40a796:	ficomp WORD PTR [ebp-0x23608803]
  40a79c:	or     ebp,esi
  40a79e:	push   ds
  40a79f:	stos   BYTE PTR es:[edi],al
  40a7a0:	xor    al,0x45
  40a7a2:	stc    
  40a7a3:	shl    BYTE PTR [edi-0x3b],cl
  40a7a6:	ins    DWORD PTR es:[edi],dx
  40a7a7:	nop
  40a7a8:	js     0x40a75a
  40a7aa:	dec    ecx
  40a7ab:	das    
  40a7ac:	mov    edx,0x168216ca
  40a7b1:	xor    eax,0xcec25b75
  40a7b6:	pusha  
  40a7b7:	pop    esp
  40a7b8:	xor    al,0x6c
  40a7ba:	fist   WORD PTR [ecx+0x9]
  40a7bd:	fnsave [edi+0x32227cd5]
  40a7c3:	mov    al,0x38
  40a7c5:	mov    ch,0x8a
  40a7c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c8:	test   DWORD PTR [eax+0xb],eax
  40a7cb:	and    cl,bl
  40a7cd:	(bad)  
  40a7ce:	stos   BYTE PTR es:[edi],al
  40a7cf:	xchg   ecx,eax
  40a7d0:	add    bh,bh
  40a7d2:	mov    ch,0x87
  40a7d4:	and    DWORD PTR fs:[esi-0x48434b44],ebx
  40a7db:	test   eax,0x447a12c6
  40a7e0:	dec    eax
  40a7e1:	call   0x9302:0x90d655e0
  40a7e8:	cmp    eax,0x54ee211e
  40a7ed:	stos   DWORD PTR es:[edi],eax
  40a7ee:	das    
  40a7ef:	push   esi
  40a7f0:	inc    edi
  40a7f1:	out    0x1f,eax
  40a7f3:	add    dl,BYTE PTR [eax+0x46cac905]
  40a7f9:	push   0xe97501b6
  40a7fe:	or     al,0xbc
  40a800:	add    DWORD PTR [esi-0x72f7f528],esi
  40a806:	cmp    bl,ch
  40a808:	bound  esp,QWORD PTR [edx+eiz*2-0x47]
  40a80c:	fcmove st,st(3)
  40a80e:	repnz cld 
  40a810:	rcr    BYTE PTR [ecx-0x56],cl
  40a813:	pop    esp
  40a814:	push   cs
  40a815:	xchg   ebp,eax
  40a816:	jg     0x40a79d
  40a818:	mov    edi,ss
  40a81a:	inc    edi
  40a81b:	pop    ebp
  40a81c:	in     eax,0x8
  40a81e:	push   ebp
  40a81f:	cmp    BYTE PTR [eax-0x1d1c8017],bh
  40a825:	mov    ebp,?
  40a827:	cdq    
  40a828:	les    eax,FWORD PTR [ecx]
  40a82a:	not    DWORD PTR [esi+eiz*2-0x5228c219]
  40a831:	mov    ds:0x6da98249,al
  40a836:	dec    esi
  40a837:	fist   WORD PTR [eax-0x6eb73dd5]
  40a83d:	dec    ebp
  40a83e:	rcl    BYTE PTR [ebx],cl
  40a840:	retf   0x5f13
  40a843:	xchg   edi,eax
  40a844:	dec    ebp
  40a845:	sub    eax,0x711ce2af
  40a84a:	out    0xa2,al
  40a84c:	push   ss
  40a84d:	nop
  40a84e:	into   
  40a84f:	aaa    
  40a850:	jne    0x40a8be
  40a852:	repnz pop ebx
  40a854:	inc    ecx
  40a855:	jb     0x40a81f
  40a857:	fstp   DWORD PTR ds:0x4ba3e9ea
  40a85d:	dec    ecx
  40a85e:	xchg   esp,eax
  40a85f:	(bad)  
  40a860:	sar    ebx,1
  40a862:	call   0xc55b98
  40a867:	div    BYTE PTR [ebx]
  40a869:	cmc    
  40a86a:	pop    ecx
  40a86b:	dec    ecx
  40a86c:	inc    esi
  40a86d:	push   ebx
  40a86e:	cmp    BYTE PTR [edx+0x5bcab7c7],ah
  40a874:	in     eax,dx
  40a875:	sub    BYTE PTR ds:0x47e27a3b,bl
  40a87b:	pushf  
  40a87c:	pop    ds
  40a87d:	pop    ds
  40a87e:	icebp  
  40a87f:	inc    esi
  40a880:	sbb    edx,0x3
  40a883:	push   ebx
  40a884:	pop    ebp
  40a885:	sbb    DWORD PTR [esi-0x68],eax
  40a888:	fdiv   DWORD PTR [edx+ebp*4+0x20]
  40a88c:	xchg   edi,eax
  40a88d:	mov    edx,0x3d38e951
  40a892:	pop    ss
  40a893:	sub    dh,BYTE PTR [esi+0x2e]
  40a896:	adc    ecx,edi
  40a898:	push   esi
  40a899:	dec    edi
  40a89a:	jns    0x40a8b0
  40a89c:	jno    0x40a917
  40a89e:	popa   
  40a89f:	add    ax,0x2cb4
  40a8a3:	aam    0x70
  40a8a5:	mov    bh,0x98
  40a8a7:	pop    edi
  40a8a8:	gs jno 0x40a915
  40a8ab:	pop    ecx
  40a8ac:	mov    cl,0xda
  40a8ae:	sub    ebp,DWORD PTR [ecx+0x5c]
  40a8b1:	xchg   esp,eax
  40a8b2:	js     0x40a8f7
  40a8b4:	mov    eax,ds:0x91326c78
  40a8b9:	ret    
  40a8ba:	aaa    
  40a8bb:	dec    esi
  40a8bc:	jle    0x40a8be
  40a8be:	jge    0x40a8e7
  40a8c0:	mov    ecx,0x3469a1cd
  40a8c5:	fild   DWORD PTR [eax+0x4f9f2fbd]
  40a8cb:	test   esp,ebx
  40a8cd:	cmp    BYTE PTR [eax+0x49dbfaea],al
  40a8d3:	push   esi
  40a8d4:	jmp    0x40a864
  40a8d6:	ret    0xb7d8
  40a8d9:	cmp    al,0x84
  40a8db:	out    0x59,al
  40a8dd:	cmp    BYTE PTR [eax-0x40],ch
  40a8e0:	data16 scas al,BYTE PTR es:[edi]
  40a8e2:	in     eax,0x82
  40a8e4:	mov    esi,0xa4295fc8
  40a8e9:	inc    ebp
  40a8ea:	pop    ds
  40a8eb:	gs dec eax
  40a8ed:	mov    bl,0xe5
  40a8ef:	ins    BYTE PTR es:[edi],dx
  40a8f0:	(bad)  
  40a8f1:	pop    esp
  40a8f2:	and    al,0xc4
  40a8f4:	dec    edx
  40a8f5:	mov    cs:0xe32a2729,eax
  40a8fb:	out    0xe3,eax
  40a8fd:	test   al,0xf5
  40a8ff:	mov    dl,0xcb
  40a901:	div    BYTE PTR [eax+0x27]
  40a904:	rol    BYTE PTR [edx+0x5e],0x57
  40a908:	stos   DWORD PTR es:[edi],eax
  40a909:	in     eax,0x44
  40a90b:	test   DWORD PTR [edi],0xdb56b81a
  40a911:	outs   dx,BYTE PTR ds:[esi]
  40a912:	scas   al,BYTE PTR es:[edi]
  40a913:	loop   0x40a8c8
  40a915:	(bad)  
  40a916:	bound  eax,QWORD PTR [ebp+0x20]
  40a919:	fimul  DWORD PTR [esp+edx*2-0x6805225d]
  40a920:	call   0xd8e2:0x29a0dad7
  40a927:	and    esi,DWORD PTR [ecx]
  40a929:	rcr    BYTE PTR [edi],cl
  40a92b:	es push cs
  40a92d:	(bad)  
  40a92e:	fist   DWORD PTR [esi]
  40a930:	pop    ss
  40a931:	jo     0x40a994
  40a933:	fstp   QWORD PTR [edx+0x6]
  40a936:	jp     0x40a96d
  40a938:	jnp    0x40a90b
  40a93a:	jmp    0xf47:0xa4c56132
  40a941:	test   BYTE PTR [ebx+0x71],ah
  40a944:	out    0xe6,eax
  40a946:	or     esp,DWORD PTR [esi+ecx*8-0x80]
  40a94a:	dec    eax
  40a94b:	xor    al,0xf2
  40a94d:	jmp    0xd81a:0x4f7d370e
  40a954:	cmp    eax,0x1780855a
  40a959:	test   eax,0x223e7bf3
  40a95e:	lock jnp 0x40a9d4
  40a961:	fsubr  st,st(1)
  40a963:	sub    BYTE PTR [edi],ch
  40a965:	dec    eax
  40a966:	sub    bh,BYTE PTR [ebx]
  40a968:	test   BYTE PTR [eax],cl
  40a96a:	or     BYTE PTR ds:0xe76c501f,dl
  40a970:	mov    eax,DWORD PTR ds:0x49f8cd34
  40a976:	loopne 0x40a96c
  40a978:	(bad)  
  40a979:	cs ins BYTE PTR es:[edi],dx
  40a97b:	xor    DWORD PTR [eax-0x475c1cb9],ecx
  40a981:	es add eax,0xd9ea5553
  40a987:	mov    dl,0x90
  40a989:	cld    
  40a98a:	or     al,0xf7
  40a98c:	loope  0x40a9ed
  40a98e:	push   cs
  40a98f:	xor    eax,0xe4695c96
  40a994:	shl    edx,1
  40a996:	inc    ebx
  40a997:	dec    edi
  40a998:	push   ss
  40a999:	into   
  40a99a:	leave  
  40a99b:	xchg   DWORD PTR [ebp+0x0],esi
  40a99e:	sub    DWORD PTR [ebx+0xcddbcb8],0x34ea48dc
  40a9a8:	lds    edi,FWORD PTR [edi]
  40a9aa:	mov    al,ds:0x41340e3e
  40a9af:	push   ebx
  40a9b0:	inc    edx
  40a9b1:	jmp    0xf973c880
  40a9b6:	and    al,0xb8
  40a9b8:	fldenv [ebp+0x29ba8655]
  40a9be:	xchg   dh,bl
  40a9c0:	push   ds
  40a9c1:	das    
  40a9c2:	iret   
  40a9c3:	add    esi,0x47
  40a9c6:	xor    al,0xb2
  40a9c8:	gs (bad) 
  40a9ca:	rcr    bh,1
  40a9cc:	dec    ebx
  40a9cd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40a9cf:	and    bh,BYTE PTR [esi]
  40a9d1:	inc    ebp
  40a9d2:	push   edi
  40a9d3:	jmp    0x40a993
  40a9d5:	sub    al,0x81
  40a9d7:	mul    BYTE PTR [ebx+edx*4-0x31]
  40a9db:	test   bh,ah
  40a9dd:	shl    ah,cl
  40a9df:	inc    edi
  40a9e0:	xchg   edx,eax
  40a9e1:	enter  0x22ac,0x11
  40a9e5:	and    al,0xe3
  40a9e7:	cdq    
  40a9e8:	cmp    ebp,eax
  40a9ea:	pusha  
  40a9eb:	jno    0x40a9db
  40a9ed:	shr    DWORD PTR [ebx-0x239de0af],cl
  40a9f3:	outs   dx,DWORD PTR ds:[esi]
  40a9f4:	inc    ecx
  40a9f5:	stos   BYTE PTR es:[edi],al
  40a9f6:	inc    edi
  40a9f7:	es mov esp,0x6b74dd6c
  40a9fd:	jnp    0x40a9e5
  40a9ff:	mov    ebp,0x51491c2a
  40aa04:	inc    eax
  40aa05:	mov    esp,0xf76e2d78
  40aa0a:	ficomp WORD PTR [ebx-0x2e]
  40aa0d:	fucomi st,st(6)
  40aa0f:	xchg   esp,eax
  40aa10:	sbb    eax,0xecfdd3c5
  40aa15:	fdivr  QWORD PTR [ecx+0x5f65b2ec]
  40aa1b:	or     DWORD PTR [edi+0x700035f6],esp
  40aa21:	pop    edi
  40aa22:	mov    edx,0xeb9dce05
  40aa27:	cmp    esi,ebx
  40aa29:	pop    ecx
  40aa2a:	sbb    al,cl
  40aa2c:	out    0xb8,eax
  40aa2e:	jecxz  0x40aaa2
  40aa30:	ja     0x40aa5b
  40aa32:	and    BYTE PTR [ebx-0x1820afa4],bh
  40aa38:	(bad)  
  40aa39:	fsub   st,st(6)
  40aa3b:	aad    0x69
  40aa3d:	out    dx,eax
  40aa3e:	fincstp 
  40aa40:	loopne 0x40aa6f
  40aa42:	pop    ebp
  40aa43:	mov    bl,0xcf
  40aa45:	lahf   
  40aa46:	and    eax,0x7caee948
  40aa4b:	xor    bh,dh
  40aa4d:	dec    ecx
  40aa4e:	and    eax,0xa97d9448
  40aa53:	mov    ch,0xc0
  40aa55:	xchg   esp,eax
  40aa56:	mov    esp,0xaac793bf
  40aa5b:	inc    ebp
  40aa5c:	test   al,0x90
  40aa5e:	popf   
  40aa5f:	shl    BYTE PTR [eax-0x56],cl
  40aa62:	bound  eax,QWORD PTR [edi]
  40aa64:	mov    ds:0x279b714d,al
  40aa69:	cli    
  40aa6a:	repz out 0x54,al
  40aa6d:	cmp    al,0x6c
  40aa6f:	mov    dl,0x2
  40aa71:	cmp    al,0x19
  40aa73:	push   ecx
  40aa74:	test   DWORD PTR [ecx+0x77],esp
  40aa77:	inc    ebx
  40aa78:	das    
  40aa79:	rcr    BYTE PTR [ebp+0x6316973e],1
  40aa7f:	pop    ebp
  40aa80:	popa   
  40aa81:	jne    0x40aa81
  40aa83:	mov    ds:0x126503e9,eax
  40aa88:	dec    edi
  40aa89:	jno    0x40aacb
  40aa8b:	mov    dl,0xd3
  40aa8d:	push   ss
  40aa8e:	jle    0x40aa8f
  40aa90:	sub    al,0xbb
  40aa92:	sbb    al,0x81
  40aa94:	cmp    DWORD PTR [edi],esp
  40aa96:	sub    ah,ah
  40aa98:	fsubr  DWORD PTR [ecx+0x9]
  40aa9b:	add    dh,BYTE PTR [esp+esi*2-0x2dfabe48]
  40aaa2:	loope  0x40aa49
  40aaa4:	loop   0x40aab0
  40aaa6:	jl     0x40aa74
  40aaa8:	mov    eax,0xc397f4cc
  40aaad:	stc    
  40aaae:	mov    DWORD PTR [ebp+eax*1+0x37],ecx
  40aab2:	enter  0x4295,0xaa
  40aab6:	xchg   ebx,eax
  40aab7:	pop    es
  40aab8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40aaba:	lock jnp 0x40ab02
  40aabd:	xor    ah,al
  40aabf:	push   es
  40aac0:	dec    esi
  40aac1:	xchg   BYTE PTR ds:0xdea78162,cl
  40aac7:	sbb    DWORD PTR [ebx-0x1a],eax
  40aaca:	push   ss
  40aacb:	cmp    al,0xc
  40aacd:	xlat   BYTE PTR ds:[ebx]
  40aace:	pop    ss
  40aacf:	ds and bl,bh
  40aad2:	xchg   esp,eax
  40aad3:	and    eax,0xeb784a59
  40aad8:	fidiv  WORD PTR ds:0xd0677e29
  40aade:	and    ebx,eax
  40aae0:	jb     0x40aa98
  40aae2:	or     dh,al
  40aae4:	sti    
  40aae5:	out    0x84,al
  40aae7:	add    esi,edi
  40aae9:	jl     0x40aaa3
  40aaeb:	scas   eax,DWORD PTR es:[edi]
  40aaec:	lahf   
  40aaed:	(bad)  
  40aaf0:	mov    dh,0x34
  40aaf2:	mov    al,ds:0x6f68db87
  40aaf7:	mov    eax,ds:0x5e9ad76
  40aafc:	mov    ds:0x2af22ca2,al
  40ab01:	fwait
  40ab02:	mov    es,WORD PTR [eax-0x1a34edaf]
  40ab08:	hlt    
  40ab09:	jecxz  0x40ab1d
  40ab0b:	add    al,0xcd
  40ab0d:	mov    bl,0x74
  40ab0f:	cwde   
  40ab10:	cmp    al,0x72
  40ab12:	popf   
  40ab13:	mov    ch,0x77
  40ab15:	mov    cl,0xec
  40ab17:	sbb    DWORD PTR [ecx],eax
  40ab19:	or     dh,BYTE PTR [ebp+0x4c]
  40ab1c:	enter  0x25ed,0xe6
  40ab20:	leave  
  40ab21:	jne    0x40aaf2
  40ab23:	or     BYTE PTR [edx+ecx*2+0x3efe1467],ah
  40ab2a:	ss pop edx
  40ab2c:	int    0x3d
  40ab2e:	int3   
  40ab2f:	daa    
  40ab30:	je     0x40ab63
  40ab32:	aad    0xff
  40ab34:	mov    al,al
  40ab36:	mul    DWORD PTR fs:[eax+0x738814cf]
  40ab3d:	daa    
  40ab3e:	rol    BYTE PTR [esi+0x3a],0x5a
  40ab42:	dec    edi
  40ab43:	fwait
  40ab44:	cwde   
  40ab45:	fisttp DWORD PTR [ecx-0x1c8956d0]
  40ab4b:	add    BYTE PTR [edi+0x1acd7686],ah
  40ab51:	cs dec ebx
  40ab53:	xchg   ebx,eax
  40ab54:	inc    edx
  40ab55:	lock add DWORD PTR [edx+0x3d],0x41170227
  40ab5d:	in     al,0x85
  40ab5f:	add    ax,0x9df5
  40ab63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab64:	or     BYTE PTR [ecx-0x45],0x1d
  40ab68:	inc    ecx
  40ab69:	lds    ebp,FWORD PTR ds:0x461779f1
  40ab6f:	or     ecx,ebp
  40ab71:	push   esp
  40ab72:	retf   0xb14d
  40ab75:	add    al,0x54
  40ab77:	mov    ds,esp
  40ab79:	retf   
  40ab7a:	es ins DWORD PTR es:[edi],dx
  40ab7c:	loope  0x40ab31
  40ab7e:	add    DWORD PTR [ecx+0x21],ebp
  40ab81:	xor    BYTE PTR [ebx-0x5f],ah
  40ab84:	jmp    0xbfea440e
  40ab89:	mov    al,ds:0x8f24f632
  40ab8e:	dec    ebx
  40ab8f:	cmp    ch,BYTE PTR [eax]
  40ab91:	int3   
  40ab92:	pop    esp
  40ab93:	add    al,0xd6
  40ab95:	test   DWORD PTR [edx],0x53e1b351
  40ab9b:	out    dx,al
  40ab9c:	not    BYTE PTR [eax+0x3651a510]
  40aba2:	jge    0x40ac04
  40aba4:	cli    
  40aba5:	add    al,0xe5
  40aba7:	jle    0x40ac27
  40aba9:	add    bh,BYTE PTR [esi+0x2c]
  40abac:	aad    0x89
  40abae:	jno    0x40ab8e
  40abb0:	std    
  40abb1:	outs   dx,BYTE PTR ds:[esi]
  40abb2:	fnstsw ax
  40abb4:	xor    al,0xf2
  40abb6:	mov    DWORD PTR [esi-0xa0c297],0x80b2d453
  40abc0:	cmp    edx,DWORD PTR [ecx+edx*4-0x7297871a]
  40abc7:	test   BYTE PTR [eax],bh
  40abc9:	ja     0x40abcf
  40abcb:	pop    ebx
  40abcc:	or     ebx,esp
  40abce:	lods   eax,DWORD PTR ds:[esi]
  40abcf:	test   eax,0x684cec16
  40abd4:	cmp    edi,0x46dbc4cb
  40abda:	call   0xb4c0d6c7
  40abdf:	mov    BYTE PTR [eax+0x453a8599],ah
  40abe5:	mov    ch,0x6d
  40abe7:	pushf  
  40abe8:	outs   dx,DWORD PTR ds:[esi]
  40abe9:	loop   0x40ab9b
  40abeb:	aas    
  40abec:	out    0x89,al
  40abee:	mov    edx,0xa53051fc
  40abf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf4:	jle    0x40ac2a
  40abf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abf7:	mov    ebp,0x19306437
  40abfc:	adc    ah,BYTE PTR [ecx]
  40abfe:	stc    
  40abff:	(bad)  
  40ac00:	cdq    
  40ac01:	inc    ebp
  40ac02:	xor    cl,bh
  40ac04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac05:	sub    dh,0x12
  40ac08:	aas    
  40ac09:	and    DWORD PTR [edi],ecx
  40ac0b:	mov    al,0x75
  40ac0d:	iret   
  40ac0e:	int    0xd7
  40ac10:	push   0xe4d53f35
  40ac15:	std    
  40ac16:	test   BYTE PTR [ebp-0x754793e9],ah
  40ac1c:	and    BYTE PTR [edx-0x6b3c8e26],dl
  40ac22:	add    ecx,DWORD PTR ds:0x6b50a181
  40ac28:	shl    DWORD PTR [esi+0x7f],1
  40ac2b:	mov    bl,0xae
  40ac2d:	aaa    
  40ac2e:	cs push edx
  40ac30:	xchg   DWORD PTR [edi-0xa],ebp
  40ac33:	arpl   WORD PTR [ebp-0x51],bp
  40ac36:	jae    0x40aca3
  40ac38:	sub    DWORD PTR [edi+0x0],esp
  40ac3b:	mov    WORD PTR [edx],?
  40ac3d:	dec    eax
  40ac3e:	ins    BYTE PTR es:[edi],dx
  40ac3f:	out    0x4c,eax
  40ac41:	inc    eax
  40ac42:	aaa    
  40ac43:	xchg   ecx,eax
  40ac44:	mov    cl,BYTE PTR [ebx]
  40ac46:	cs jno 0x40ac6a
  40ac49:	(bad)  [esi+edx*2+0x35]
  40ac4d:	div    DWORD PTR [ebx]
  40ac4f:	scas   eax,DWORD PTR es:[edi]
  40ac50:	sub    ah,BYTE PTR [eax+eax*8+0x34]
  40ac54:	stos   BYTE PTR es:[edi],al
  40ac55:	cli    
  40ac56:	mov    bh,0x6a
  40ac58:	fld    QWORD PTR [ebp+0x15]
  40ac5b:	sbb    al,0x14
  40ac5d:	mov    ah,0xd2
  40ac5f:	push   0x21
  40ac61:	fwait
  40ac62:	out    dx,al
  40ac63:	cmp    DWORD PTR [edx],0x80609ee5
  40ac69:	ins    DWORD PTR es:[edi],dx
  40ac6a:	test   eax,0xe9551f32
  40ac6f:	adc    bl,BYTE PTR [esi+0x6]
  40ac72:	mov    eax,ds:0xad466cf1
  40ac77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac78:	inc    ebx
  40ac79:	icebp  
  40ac7a:	add    DWORD PTR [edx],edx
  40ac7c:	dec    esi
  40ac7d:	mov    ch,0x72
  40ac7f:	(bad)  
  40ac80:	mov    eax,gs:0x58ac9191
  40ac86:	mov    ebx,0x8bc12358
  40ac8b:	mov    eax,ds:0xaf62773e
  40ac90:	inc    esp
  40ac91:	call   0x7b9b:0xaa5f3826
  40ac98:	xchg   ebp,eax
  40ac99:	cwde   
  40ac9a:	out    0xa6,al
  40ac9c:	sbb    BYTE PTR [ecx+0x49f47247],0x7d
  40aca3:	xchg   edx,eax
  40aca4:	xchg   edx,eax
  40aca5:	pop    ds
  40aca6:	fistp  WORD PTR [edx+0x52]
  40aca9:	and    DWORD PTR [esi+0x3b],0x1b
  40acad:	push   ecx
  40acae:	mov    bl,0x0
  40acb0:	retf   
  40acb1:	je     0x40ac3f
  40acb3:	jno    0x40ac40
  40acb5:	inc    edx
  40acb6:	mov    ebx,0x40b105ac
  40acbb:	test   BYTE PTR ds:[edi+0x44],al
  40acbf:	in     eax,dx
  40acc0:	gs aad 0xfd
  40acc3:	jge    0x40ad1a
  40acc5:	cmovbe esp,DWORD PTR [edi+0x5e]
  40acc9:	cmc    
  40acca:	ja     0x40ad4b
  40accc:	repnz jmp 0xa44f:0x4f677ec4
  40acd4:	outs   dx,BYTE PTR ds:[esi]
  40acd5:	int    0x42
  40acd7:	call   DWORD PTR [edi]
  40acd9:	les    ecx,FWORD PTR [ebx+0x16]
  40acdc:	outs   dx,BYTE PTR ds:[esi]
  40acdd:	sbb    BYTE PTR [edi+0x38d70f5b],cl
  40ace3:	sbb    edx,ebp
  40ace5:	icebp  
  40ace6:	and    ecx,DWORD PTR [esi]
  40ace8:	lods   eax,DWORD PTR ds:[esi]
  40ace9:	or     BYTE PTR [edx],bh
  40aceb:	daa    
  40acec:	mov    dl,0xff
  40acee:	iret   
  40acef:	stc    
  40acf0:	loop   0x40ac88
  40acf2:	test   DWORD PTR [ecx-0x65],edx
  40acf5:	sti    
  40acf6:	retf   
  40acf7:	mov    ecx,0xe90557af
  40acfc:	sti    
  40acfd:	imul   ebx,DWORD PTR [edx],0xc6884d8b
  40ad03:	jns    0x40ac9e
  40ad05:	in     eax,dx
  40ad06:	fnstsw WORD PTR [eax]
  40ad08:	mov    esi,0x8b758ea7
  40ad0d:	cwde   
  40ad0e:	int3   
  40ad0f:	xchg   edx,eax
  40ad10:	mov    ds:0x60c75739,al
  40ad15:	and    BYTE PTR [ecx+0xa],0x56
  40ad19:	cld    
  40ad1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1b:	cmc    
  40ad1c:	push   ebx
  40ad1d:	jl     0x40aca0
  40ad1f:	lods   eax,DWORD PTR ds:[esi]
  40ad20:	aaa    
  40ad21:	dec    ebp
  40ad22:	jle    0x40ad17
  40ad24:	js     0x40ad6b
  40ad26:	mov    DWORD PTR [edi-0x20],0xec92f704
  40ad2d:	loopne 0x40ad94
  40ad2f:	nop
  40ad30:	xor    eax,0x49338a9e
  40ad35:	ss je  0x40acc8
  40ad38:	jnp    0x40ad7a
  40ad3a:	loopne 0x40ad4e
  40ad3c:	sub    dl,BYTE PTR [esi]
  40ad3e:	adc    esp,DWORD PTR [edi-0x56]
  40ad41:	adc    dl,BYTE PTR [esi]
  40ad43:	inc    ecx
  40ad44:	lods   al,BYTE PTR ds:[esi]
  40ad45:	push   ss
  40ad46:	ss pop ss
  40ad48:	jb     0x40acf3
  40ad4a:	outs   dx,BYTE PTR ds:[esi]
  40ad4b:	(bad)  
  40ad4c:	outs   dx,DWORD PTR ds:[esi]
  40ad4d:	scas   eax,DWORD PTR es:[edi]
  40ad4e:	cmp    al,0xc8
  40ad50:	scas   al,BYTE PTR es:[edi]
  40ad51:	repnz fwait
  40ad53:	mov    ebp,DWORD PTR [eax-0xa]
  40ad56:	imul   DWORD PTR [edi]
  40ad58:	es sub eax,0xf233dcc
  40ad5e:	jl     0x40ada3
  40ad60:	lahf   
  40ad61:	cmp    eax,0xf12c76e
  40ad66:	dec    eax
  40ad67:	add    ebx,DWORD PTR [eax]
  40ad69:	xchg   esi,eax
  40ad6a:	out    dx,eax
  40ad6b:	mov    ebx,0x6d9683fc
  40ad70:	ret    
  40ad71:	xlat   BYTE PTR ds:[ebx]
  40ad72:	retf   0xb7d4
  40ad75:	mov    ebx,DWORD PTR [ebx]
  40ad77:	xchg   esi,eax
  40ad78:	xor    eax,0x46d910d2
  40ad7d:	aam    0x6f
  40ad7f:	neg    DWORD PTR [ebp-0x63]
  40ad82:	popf   
  40ad83:	test   cl,ah
  40ad85:	js     0x40ad0f
  40ad87:	mov    al,0xaa
  40ad89:	adc    eax,0xe1b5f7bd
  40ad8e:	cmp    edi,edi
  40ad90:	jecxz  0x40adf9
  40ad92:	std    
  40ad93:	iret   
  40ad94:	or     BYTE PTR [edx+0x1594273f],dh
  40ad9a:	rcr    DWORD PTR [ebx],1
  40ad9c:	sbb    esi,ecx
  40ad9e:	xor    eax,0xa60f7863
  40ada3:	cmp    esp,DWORD PTR [ecx+0x4b36a1c8]
  40ada9:	jnp    0x40ad85
  40adab:	and    DWORD PTR [ebp+edx*8+0x6865aca5],0xf57d58b1
  40adb6:	retf   
  40adb7:	xchg   ebp,eax
  40adb8:	add    ch,BYTE PTR [esi]
  40adba:	(bad)  [ecx+0x4]
  40adbd:	sub    eax,0x168ffa5b
  40adc2:	push   ss
  40adc3:	das    
  40adc4:	mov    al,0x45
  40adc6:	push   ebx
  40adc7:	dec    edx
  40adc8:	enter  0x6f50,0x7a
  40adcc:	les    eax,FWORD PTR [ecx-0x15]
  40adcf:	sub    ebp,edi
  40add1:	mov    cl,BYTE PTR [ebx-0x1f88eeb9]
  40add7:	and    DWORD PTR [ebx],ecx
  40add9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adda:	inc    ecx
  40addb:	(bad)  [edi+0x15266989]
  40ade1:	bound  esi,QWORD PTR [esi+0x5e]
  40ade4:	mov    eax,ds:0xd5a81d7b
  40ade9:	mov    ecx,edi
  40adeb:	iret   
  40adec:	or     BYTE PTR [esp+eax*2+0x16c0e6e7],dh
  40adf3:	(bad)  
  40adf4:	je     0x40ada8
  40adf6:	inc    esp
  40adf7:	cmc    
  40adf8:	xor    eax,0x842458bc
  40adfd:	xchg   esp,eax
  40adfe:	jmp    0xb6bb:0x4dcf20a8
  40ae05:	xlat   BYTE PTR ds:[ebx]
  40ae06:	loope  0x40ae00
  40ae08:	xor    al,0x3f
  40ae0a:	or     BYTE PTR [ebx+0x31],ch
  40ae0d:	push   edx
  40ae0e:	arpl   dx,cx
  40ae10:	add    eax,0x9adde6ec
  40ae15:	sub    dl,bl
  40ae17:	xor    eax,0x5e60e77f
  40ae1c:	jmp    0xc550:0x40bbb1d9
  40ae23:	sbb    esi,DWORD PTR [esi-0x1cabee6]
  40ae29:	jg     0x40ae6c
  40ae2b:	jl     0x40ae7f
  40ae2d:	sub    ch,BYTE PTR [ecx-0x2479c67d]
  40ae33:	pop    eax
  40ae34:	cmove  ecx,edi
  40ae37:	cld    
  40ae38:	test   eax,0xf0c6a126
  40ae3d:	lods   eax,DWORD PTR ds:[esi]
  40ae3e:	shl    DWORD PTR [eax],1
  40ae40:	por    mm0,mm5
  40ae43:	ja     0x40addc
  40ae45:	hlt    
  40ae46:	pop    ebp
  40ae47:	xor    eax,0x2eab17b7
  40ae4c:	jmp    0x40ae7c
  40ae4e:	(bad)  
  40ae4f:	mov    al,0x9b
  40ae51:	push   edx
  40ae52:	push   ecx
  40ae53:	and    eax,0x1390630c
  40ae58:	or     al,0x83
  40ae5a:	ror    DWORD PTR [edi-0x54c31faa],1
  40ae60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae61:	jmp    0xceb6:0xfa2c9714
  40ae68:	imul   ebp,DWORD PTR [ebx+0x798298e5],0x6b6213ba
  40ae72:	retf   
  40ae73:	(bad)  
  40ae74:	adc    al,0x90
  40ae76:	sub    eax,0x342da7c6
  40ae7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae7c:	aam    0x55
  40ae7e:	cmp    esi,ebx
  40ae80:	mov    ebp,DWORD PTR [edi]
  40ae82:	inc    esp
  40ae83:	int3   
  40ae84:	xchg   edi,eax
  40ae85:	and    al,BYTE PTR [ebp-0x7c]
  40ae88:	popa   
  40ae89:	std    
  40ae8a:	das    
  40ae8b:	add    al,0xb2
  40ae8d:	cli    
  40ae8e:	fucomp st(2)
  40ae90:	not    DWORD PTR [esi+0x94f0e65]
  40ae96:	xchg   edi,eax
  40ae97:	popf   
  40ae98:	jle    0x40ae6f
  40ae9a:	push   ebx
  40ae9b:	mov    ebx,0x86e657f9
  40aea0:	pop    edi
  40aea1:	call   0x277e:0x9d304e2b
  40aea8:	xchg   ebx,eax
  40aea9:	xchg   ebp,eax
  40aeaa:	(bad)  
  40aeab:	sub    DWORD PTR ds:0x7c397a8a,eax
  40aeb1:	in     eax,dx
  40aeb2:	imul   bh
  40aeb4:	aam    0xec
  40aeb6:	inc    esi
  40aeb7:	adc    ecx,ebp
  40aeb9:	test   eax,0xf1f1e8bc
  40aebe:	pushf  
  40aebf:	add    al,0x3a
  40aec1:	jl     0x40aeb4
  40aec3:	jnp    0x40af29
  40aec5:	xchg   ebp,eax
  40aec6:	inc    edx
  40aec7:	xchg   esp,eax
  40aec8:	je     0x40af43
  40aeca:	stc    
  40aecb:	cmp    BYTE PTR [esi-0x6e1790],bh
  40aed1:	bound  edi,QWORD PTR [edi+0x1808e2ac]
  40aed7:	repz push edx
  40aed9:	jg     0x40af43
  40aedb:	adc    al,0x71
  40aedd:	loope  0x40ae91
  40aedf:	es xchg edi,eax
  40aee1:	dec    esp
  40aee2:	lahf   
  40aee3:	mov    dl,0xb2
  40aee5:	push   es
  40aee6:	jne    0x40aeb9
  40aee8:	push   ebp
  40aee9:	push   esp
  40aeea:	jg     0x40aec3
  40aeec:	mov    al,ds:0x307d3b3d
  40aef1:	or     DWORD PTR [edi],0xed55d2ba
  40aef7:	ds pop ebx
  40aef9:	cmp    BYTE PTR [ecx-0x67792d87],0xdc
  40af00:	pop    ss
  40af01:	pop    ds
  40af02:	int    0xd6
  40af04:	inc    esp
  40af05:	push   ds
  40af06:	sbb    eax,0x798ea537
  40af0b:	repnz mov bl,0xc0
  40af0e:	mov    al,0x17
  40af10:	push   ds
  40af11:	outs   dx,DWORD PTR ds:[esi]
  40af12:	dec    ebp
  40af13:	pop    edi
  40af14:	pushf  
  40af15:	push   ebx
  40af16:	gs xchg esp,eax
  40af18:	into   
  40af19:	xor    DWORD PTR [esi],ebx
  40af1b:	and    ch,cl
  40af1d:	ror    DWORD PTR [edi-0x1d],1
  40af20:	ds into 
  40af22:	rcr    al,0x3a
  40af25:	fwait
  40af26:	pushf  
  40af27:	or     DWORD PTR [edx+0x41],esi
  40af2a:	fidiv  WORD PTR [esi]
  40af2c:	icebp  
  40af2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2e:	mov    dl,0xc
  40af30:	jecxz  0x40af26
  40af32:	jl     0x40af1c
  40af34:	lods   al,BYTE PTR ds:[esi]
  40af35:	jbe    0x40af5a
  40af37:	cs mov ch,0x8d
  40af3a:	push   ecx
  40af3b:	sbb    ecx,DWORD PTR [esi-0x15]
  40af3e:	lods   eax,DWORD PTR ds:[esi]
  40af3f:	inc    edx
  40af40:	lods   eax,DWORD PTR ds:[esi]
  40af41:	mov    eax,ds:0x259120f3
  40af46:	in     al,0x6e
  40af48:	pop    esi
  40af49:	fdivr  QWORD PTR [edx+0x7a]
  40af4c:	pusha  
  40af4d:	mov    dl,0xda
  40af4f:	jmp    0x5da:0x95659b53
  40af56:	jp     0x40aef0
  40af58:	fdiv   QWORD PTR [edx-0x447c3557]
  40af5e:	jle    0x40af00
  40af60:	rcl    dh,0xde
  40af63:	jno    0x40afbd
  40af65:	push   edx
  40af66:	inc    eax
  40af67:	xchg   edi,eax
  40af68:	out    0xf0,eax
  40af6a:	jmp    0x6f51b929
  40af6f:	push   0x42
  40af71:	rol    ecx,1
  40af73:	push   esi
  40af74:	lods   eax,DWORD PTR ds:[esi]
  40af75:	jmp    0x40aefc
  40af77:	(bad)  [ecx+0x2]
  40af7a:	or     dl,bh
  40af7c:	push   ecx
  40af7d:	jo     0x40afef
  40af7f:	or     bl,BYTE PTR [ecx*1+0x11bcd4ef]
  40af86:	mov    esi,0x1748dc7d
  40af8b:	xor    dl,BYTE PTR [ebx+0x59227a14]
  40af91:	inc    ebp
  40af92:	fcom   QWORD PTR [ebp+0x3b]
  40af95:	jmp    0x40afa9
  40af97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af98:	pop    ebx
  40af99:	scas   eax,DWORD PTR es:[edi]
  40af9a:	mov    bh,0x9b
  40af9c:	ins    BYTE PTR es:[edi],dx
  40af9d:	jns    0x40afb2
  40af9f:	mov    bh,0xea
  40afa1:	cmp    DWORD PTR [esi+0xa],ebx
  40afa4:	iret   
  40afa5:	sbb    esi,DWORD PTR [edx+0x5c54b105]
  40afab:	dec    esp
  40afac:	jg     0x40af4e
  40afae:	daa    
  40afaf:	ss call 0xe06a47d9
  40afb5:	mov    ecx,DWORD PTR [ebp-0x6778aeb3]
  40afbb:	pop    ss
  40afbc:	sub    edi,edi
  40afbe:	jae    0x40afa2
  40afc0:	mov    ds:0xcdf5d2cf,eax
  40afc5:	(bad)  
  40afc6:	mov    al,0xb0
  40afc8:	cmovne esi,DWORD PTR [ecx+0x7f]
  40afcc:	fmul   QWORD PTR [esi]
  40afce:	pop    eax
  40afcf:	pop    edx
  40afd0:	push   es
  40afd1:	jo     0x40af97
  40afd3:	jno    0x40afd2
  40afd5:	in     eax,dx
  40afd6:	lods   eax,DWORD PTR ds:[esi]
  40afd7:	mov    eax,ds:0x89d708c1
  40afdc:	add    eax,0x341e24d6
  40afe1:	xchg   edx,eax
  40afe2:	push   0xe6f20bf9
  40afe7:	into   
  40afe8:	mov    ecx,0x7b17be4c
  40afed:	sub    BYTE PTR [ebp+0x6156a863],al
  40aff3:	and    ah,ah
  40aff5:	fisub  DWORD PTR [eax+0x79]
  40aff8:	add    edi,eax
  40affa:	push   ebx
  40affb:	cs xchg ecx,esp
  40affe:	das    
  40afff:	inc    edi
  40b000:	add    edi,ebp
  40b002:	dec    eax
  40b003:	cmp    al,0xa3
  40b005:	cmp    bl,bl
  40b007:	cmp    al,0x55
  40b009:	sti    
  40b00a:	bound  esi,QWORD PTR [esi]
  40b00c:	sbb    BYTE PTR [esi+0x66],al
  40b00f:	daa    
  40b010:	cs pushf 
  40b012:	rcr    DWORD PTR [ebx],1
  40b014:	aaa    
  40b015:	add    esp,edx
  40b017:	jp     0x40aff4
  40b019:	lods   eax,DWORD PTR ds:[esi]
  40b01a:	std    
  40b01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b01c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b01d:	es ins DWORD PTR es:[edi],dx
  40b01f:	test   DWORD PTR [ebx-0x62155fad],esi
  40b025:	arpl   WORD PTR [edx],cx
  40b027:	xor    esp,DWORD PTR [esi]
  40b029:	mov    eax,ds:0xbcbcaeb0
  40b02e:	xchg   ebx,eax
  40b02f:	call   0x7f8001d5
  40b034:	imul   esp,DWORD PTR [eax+0x4a],0xe794c72f
  40b03b:	cwde   
  40b03c:	sbb    bh,BYTE PTR [esi+0x2d]
  40b03f:	inc    ecx
  40b040:	int    0x4a
  40b042:	pusha  
  40b043:	(bad)  
  40b044:	shl    BYTE PTR [edi+0x1],cl
  40b047:	retf   
  40b048:	xchg   ebp,eax
  40b049:	pop    ss
  40b04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04b:	adc    eax,ebp
  40b04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b04e:	cmc    
  40b04f:	and    al,ah
  40b051:	daa    
  40b052:	jo     0x40b042
  40b054:	and    eax,0xb5fb7e5
  40b059:	push   esi
  40b05a:	fwait
  40b05b:	mov    ah,0xd7
  40b05d:	push   ecx
  40b05e:	mov    esp,0x510f51db
  40b063:	lds    edx,FWORD PTR [edx-0x49]
  40b066:	mov    al,0xa
  40b068:	pusha  
  40b069:	and    al,0x48
  40b06b:	mov    ebp,0x5019e793
  40b070:	or     edx,DWORD PTR [edi-0x5a]
  40b073:	mov    al,0xdf
  40b075:	pop    eax
  40b076:	xchg   ecx,eax
  40b077:	xor    edx,esp
  40b079:	inc    eax
  40b07a:	bound  eax,QWORD PTR [edx+0x26c44154]
  40b080:	mov    ds:0xfeecb70e,al
  40b085:	push   ebx
  40b086:	xor    eax,0x69a30279
  40b08b:	adc    DWORD PTR [ecx],ecx
  40b08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b08e:	sub    ah,BYTE PTR [ebx+edi*8-0x3e]
  40b092:	jno    0x40b039
  40b094:	stos   BYTE PTR es:[edi],al
  40b095:	inc    ecx
  40b096:	push   ds
  40b097:	sti    
  40b098:	xchg   ecx,eax
  40b099:	jae    0x40b037
  40b09b:	sub    al,0x2c
  40b09d:	iret   
  40b09e:	mov    ?,edx
  40b0a0:	ins    DWORD PTR es:[edi],dx
  40b0a1:	aam    0x69
  40b0a3:	scas   al,BYTE PTR es:[edi]
  40b0a4:	mov    ds:0x3827dc11,al
  40b0a9:	sub    bl,bl
  40b0ab:	or     BYTE PTR [edi-0x5],dh
  40b0ae:	dec    esi
  40b0af:	inc    edx
  40b0b0:	xlat   BYTE PTR ds:[ebx]
  40b0b1:	push   ss
  40b0b2:	jge    0x40b0c1
  40b0b4:	pushf  
  40b0b5:	aaa    
  40b0b6:	xor    bl,ch
  40b0b8:	fcos   
  40b0ba:	push   es
  40b0bb:	in     al,0xa9
  40b0bd:	dec    ebx
  40b0be:	jns    0x40b08f
  40b0c0:	push   es
  40b0c1:	jno    0x40b120
  40b0c3:	push   ds
  40b0c4:	add    eax,0xe0381f24
  40b0c9:	xchg   DWORD PTR [edx+0x36],esi
  40b0cc:	pop    ebx
  40b0cd:	dec    edx
  40b0ce:	in     eax,0x98
  40b0d0:	retf   
  40b0d1:	xor    BYTE PTR fs:[ecx+0x7f],cl
  40b0d5:	sbb    DWORD PTR [edi-0x7],edx
  40b0d8:	sbb    ebx,DWORD PTR [ecx-0xf9fdf0f]
  40b0de:	pop    esp
  40b0df:	add    ecx,DWORD PTR [ecx-0x3f]
  40b0e2:	or     eax,0x562903f6
  40b0e7:	leave  
  40b0e8:	push   0xe7c03fcf
  40b0ed:	aaa    
  40b0ee:	or     ah,BYTE PTR [esi]
  40b0f0:	mov    al,0xc6
  40b0f2:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b0f5:	in     al,0xf7
  40b0f7:	sahf   
  40b0f8:	add    al,0xc3
  40b0fb:	pop    eax
  40b0fc:	dec    ebp
  40b0fd:	dec    ecx
  40b0fe:	arpl   WORD PTR [eax-0x3d],si
  40b101:	pop    ebp
  40b102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b103:	out    0xa2,eax
  40b105:	pop    edi
  40b106:	sbb    esi,DWORD PTR [ecx-0x658007b1]
  40b10c:	mov    cl,0x38
  40b10e:	lock adc al,0xb2
  40b111:	retf   0x2f31
  40b114:	mov    edi,0xd6ab8afa
  40b119:	sub    ebx,DWORD PTR [edi+0x4f834fa2]
  40b11f:	push   esi
  40b120:	jp     0x40b105
  40b122:	leave  
  40b123:	and    DWORD PTR [edi+0x45],esi
  40b126:	xchg   esp,eax
  40b127:	xor    al,0xaa
  40b129:	sub    ah,BYTE PTR [ebx-0x45]
  40b12c:	sub    bl,ch
  40b12e:	cmp    DWORD PTR [ecx],edi
  40b130:	in     al,0x53
  40b132:	ds mov ah,0x9c
  40b135:	test   BYTE PTR [ebx-0x4b6ab13b],ah
  40b13b:	loope  0x40b138
  40b13d:	xchg   ebp,eax
  40b13e:	outs   dx,BYTE PTR ds:[esi]
  40b13f:	or     DWORD PTR [edx+0x183bd17c],edx
  40b145:	dec    ecx
  40b146:	sub    eax,0x6d6832b1
  40b14b:	arpl   WORD PTR [eax+0x1],di
  40b14e:	ins    BYTE PTR es:[edi],dx
  40b14f:	(bad)
  40b152:	add    eax,0x732d075
  40b157:	nop
  40b158:	mov    ds:0x159caebe,eax
  40b15d:	dec    ebx
  40b15e:	dec    edi
  40b15f:	retf   0x85a1
  40b162:	add    edx,DWORD PTR [edx]
  40b164:	xlat   BYTE PTR ds:[ebx]
  40b165:	pop    ecx
  40b166:	mov    ecx,0xe0fc323d
  40b16b:	ret    0xa877
  40b16e:	in     al,dx
  40b16f:	popa   
  40b170:	cli    
  40b171:	cdq    
  40b172:	call   0xb4c5:0x602a1293
  40b179:	ret    
  40b17a:	jno    0x40b177
  40b17c:	retf   
  40b17d:	sub    DWORD PTR [edi],ebp
  40b17f:	jno    0x40b1ff
  40b181:	add    al,BYTE PTR [edx-0x537d71ae]
  40b187:	add    al,0x87
  40b189:	pop    ds
  40b18a:	adc    ch,BYTE PTR [edx+0x7abe79ec]
  40b190:	mov    eax,ds:0x9d228b4d
  40b195:	ret    
  40b196:	jns    0x40b19e
  40b198:	xchg   esp,eax
  40b199:	pop    esi
  40b19a:	(bad)  
  40b19b:	ss mov ss:0xfe59fddb,al
  40b1a2:	sbb    BYTE PTR [eax+0x2],bh
  40b1a5:	lahf   
  40b1a6:	inc    esp
  40b1a7:	cmp    esi,DWORD PTR [edx]
  40b1a9:	in     eax,0x32
  40b1ab:	out    0xac,eax
  40b1ad:	(bad)  
  40b1ae:	xchg   ebp,eax
  40b1af:	(bad)  
  40b1b0:	int    0x1
  40b1b2:	pusha  
  40b1b3:	push   eax
  40b1b4:	sub    al,0xb0
  40b1b6:	push   es
  40b1b7:	mov    ah,0xe2
  40b1b9:	aaa    
  40b1ba:	add    cl,BYTE PTR [edi+0x20d4713f]
  40b1c0:	mov    eax,ds:0x3c1258e2
  40b1c5:	mov    DWORD PTR [esi+0x36],esp
  40b1c8:	inc    ebx
  40b1c9:	push   ebp
  40b1ca:	or     BYTE PTR [esi-0x665e6cd5],dh
  40b1d0:	mov    ?,eax
  40b1d2:	imul   edi,DWORD PTR [ebx-0x1d12a84],0xffffffc7
  40b1d9:	sbb    al,0x3a
  40b1db:	in     eax,dx
  40b1dc:	mul    BYTE PTR [ecx+0x66]
  40b1df:	push   0xffffff8b
  40b1e1:	test   BYTE PTR ds:0x8ee3abe7,bh
  40b1e7:	pop    esi
  40b1e8:	jmp    0x6b2e4a
  40b1ed:	jmp    0x7c90:0xdf20
  40b1f3:	push   esp
  40b1f4:	frndint 
  40b1f6:	push   edi
  40b1f7:	hlt    
  40b1f8:	iret   
  40b1f9:	mov    ecx,0x88d34016
  40b1fe:	or     dh,dl
  40b200:	into   
  40b201:	retf   
  40b202:	dec    esp
  40b203:	mov    WORD PTR [esi+0x4ffdbc26],?
  40b209:	sysexit 
  40b20b:	(bad)  
  40b20c:	pop    ebx
  40b20d:	outs   dx,DWORD PTR ds:[esi]
  40b20e:	and    BYTE PTR [ebx+0x6],cl
  40b211:	ror    BYTE PTR [ebp-0x9],0x71
  40b215:	fwait
  40b216:	in     al,dx
  40b217:	aam    0x7
  40b219:	and    esp,DWORD PTR [ecx]
  40b21b:	les    edi,FWORD PTR [edx+eax*8+0x25b85b02]
  40b222:	xor    ebp,esi
  40b224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b225:	lock push ds
  40b227:	inc    ecx
  40b228:	sub    DWORD PTR [eax+0x6fbc9ed1],eax
  40b22e:	gs dec ebx
  40b230:	push   cs
  40b231:	aaa    
  40b232:	sub    DWORD PTR gs:[edi],edx
  40b235:	aas    
  40b236:	mov    al,ds:0xede731cc
  40b23b:	lods   eax,DWORD PTR ds:[esi]
  40b23c:	ds jnp 0x40b205
  40b23f:	in     eax,0x12
  40b241:	add    BYTE PTR [edi+0x58],0x81
  40b245:	adc    al,0x9b
  40b247:	jbe    0x40b257
  40b249:	lods   eax,DWORD PTR ds:[esi]
  40b24a:	mov    dh,0xeb
  40b24c:	push   ss
  40b24d:	pusha  
  40b24e:	or     al,0x60
  40b250:	jge    0x40b1df
  40b252:	mov    DWORD PTR [ebp+0x3a],eax
  40b255:	mov    DWORD PTR [ebx+0x2a1d18f],esp
  40b25b:	js     0x40b2b5
  40b25d:	mov    ebp,esi
  40b25f:	ds jo  0x40b20c
  40b262:	mov    dl,BYTE PTR [edx]
  40b264:	adc    al,0x6b
  40b266:	xchg   edi,eax
  40b267:	cmc    
  40b268:	fiadd  DWORD PTR [ecx-0x22]
  40b26b:	dec    ecx
  40b26c:	add    al,bh
  40b26e:	(bad)  
  40b26f:	mov    edi,0x934dde96
  40b274:	mov    esp,0x70b5e6da
  40b279:	pop    ebp
  40b27a:	sbb    ebx,DWORD PTR [ecx+0x7b]
  40b27d:	ds xor eax,0xb3969a81
  40b283:	jg     0x40b254
  40b285:	mov    ah,0x29
  40b287:	fxch   st(3)
  40b289:	mov    dl,0xfa
  40b28b:	aad    0xe8
  40b28d:	jmp    0x40b28f
  40b28f:	rol    BYTE PTR [ebx+0x1b],cl
  40b292:	jns    0x40b246
  40b294:	sbb    ebx,DWORD PTR [ebp-0x7380e75b]
  40b29a:	(bad)  
  40b29b:	in     al,0xe
  40b29d:	adc    DWORD PTR [edx-0x7bd5d652],edi
  40b2a3:	mov    cs,WORD PTR [ecx+eax*4+0x3ba50f0d]
  40b2aa:	cli    
  40b2ab:	cmp    DWORD PTR [eax],esp
  40b2ad:	imul   edx,DWORD PTR [esi-0x6a73bb9c],0x16
  40b2b4:	or     BYTE PTR [ebp-0x5d],bh
  40b2b7:	dec    esi
  40b2b8:	out    0x60,eax
  40b2ba:	push   ebp
  40b2bb:	aaa    
  40b2bc:	pop    es
  40b2bd:	cmc    
  40b2be:	cwde   
  40b2bf:	aaa    
  40b2c0:	je     0x40b27c
  40b2c2:	outs   dx,DWORD PTR ds:[esi]
  40b2c3:	adc    esp,DWORD PTR [eax-0x29387524]
  40b2c9:	jge    0x40b320
  40b2cb:	mov    edi,0x15bde2d9
  40b2d0:	xor    BYTE PTR [eax],dh
  40b2d2:	inc    edx
  40b2d3:	xchg   ebx,eax
  40b2d4:	xchg   ecx,eax
  40b2d5:	ds in  eax,0x5b
  40b2d8:	inc    esi
  40b2d9:	sub    eax,0x5e7628bb
  40b2de:	sar    cl,cl
  40b2e0:	and    eax,0x189b6838
  40b2e5:	pushf  
  40b2e6:	shl    WORD PTR [edi+0x58539173],1
  40b2ed:	pop    ebp
  40b2ee:	std    
  40b2ef:	inc    ebx
  40b2f0:	sbb    ch,BYTE PTR [eax+0x2e2bf177]
  40b2f6:	in     al,0x32
  40b2f8:	and    dh,cl
  40b2fa:	neg    edi
  40b2fc:	mov    ecx,?
  40b2fe:	ret    0xa24d
  40b301:	dec    esp
  40b302:	test   DWORD PTR [eax-0x5d],edx
  40b305:	mov    edi,0x1b02b0d6
  40b30a:	pop    ecx
  40b30b:	xchg   esp,eax
  40b30c:	mov    eax,ds:0x2e0914a0
  40b311:	add    BYTE PTR [ebx-0x60f58499],cl
  40b317:	adc    dl,al
  40b319:	or     al,BYTE PTR [esi+0x185ef596]
  40b31f:	loop   0x40b377
  40b321:	out    0x41,eax
  40b323:	jmp    0x40b382
  40b325:	loop   0x40b2a8
  40b327:	mov    esp,DWORD PTR [eax]
  40b329:	sbb    BYTE PTR [edi],dl
  40b32b:	mov    al,dh
  40b32d:	dec    BYTE PTR [ebx]
  40b32f:	add    eax,0xe01eee94
  40b334:	(bad)  
  40b335:	stos   BYTE PTR es:[edi],al
  40b336:	fmul   DWORD PTR [edi+0x71]
  40b339:	jns    0x40b36f
  40b33b:	pop    eax
  40b33c:	sbb    DWORD PTR [eax-0x5f],eax
  40b33f:	xor    eax,0x261918ea
  40b344:	imul   ecx,DWORD PTR [ebp+0x66],0x8d967c02
  40b34b:	cmc    
  40b34c:	cmp    al,0xc8
  40b34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b34f:	ror    DWORD PTR [ebp+0x5b49a78e],0x7e
  40b356:	dec    ebp
  40b357:	sahf   
  40b358:	les    edx,FWORD PTR ds:0x52dc874a
  40b35e:	aad    0xba
  40b360:	loope  0x40b2f1
  40b362:	ins    BYTE PTR es:[edi],dx
  40b363:	or     al,0xd4
  40b365:	push   ecx
  40b366:	inc    esp
  40b367:	and    al,0x15
  40b369:	inc    edi
  40b36a:	jp     0x40b3c5
  40b36c:	fmul   st,st(5)
  40b36e:	pop    es
  40b36f:	jmp    0xd561:0xa640f691
  40b376:	cmp    al,0xf3
  40b378:	cmp    BYTE PTR [edi],dh
  40b37a:	jbe    0x40b352
  40b37c:	add    al,0xe0
  40b37e:	out    0x2b,al
  40b380:	adc    eax,0xf3617953
  40b385:	mov    ch,0xd3
  40b387:	dec    edx
  40b388:	out    0xe0,al
  40b38a:	pop    esi
  40b38b:	outs   dx,DWORD PTR ds:[esi]
  40b38c:	lods   eax,DWORD PTR ds:[esi]
  40b38d:	add    DWORD PTR [ecx-0x5c],ecx
  40b390:	ins    BYTE PTR es:[edi],dx
  40b391:	xchg   ecx,eax
  40b392:	inc    ecx
  40b393:	dec    esi
  40b394:	jecxz  0x40b3ea
  40b396:	out    0x10,eax
  40b398:	nop
  40b399:	push   ebp
  40b39a:	add    BYTE PTR [edx],dh
  40b39c:	inc    ebp
  40b39d:	loope  0x40b410
  40b39f:	stc    
  40b3a0:	rcl    esp,1
  40b3a2:	pop    es
  40b3a3:	aad    0x9d
  40b3a5:	cmc    
  40b3a6:	or     BYTE PTR [ebx-0x4f],ah
  40b3a9:	and    DWORD PTR ss:[edx],edi
  40b3ac:	lahf   
  40b3ad:	out    dx,al
  40b3ae:	aas    
  40b3af:	adc    esp,DWORD PTR [esi-0x4e]
  40b3b2:	and    al,BYTE PTR [edi-0x6c]
  40b3b5:	in     al,0x37
  40b3b7:	pop    edx
  40b3b8:	inc    edi
  40b3b9:	iret   
  40b3ba:	aam    0x4e
  40b3bc:	icebp  
  40b3bd:	lahf   
  40b3be:	in     eax,0x57
  40b3c0:	mov    bl,0xbf
  40b3c2:	push   esi
  40b3c3:	inc    esi
  40b3c4:	scas   eax,DWORD PTR es:[edi]
  40b3c5:	pop    ebx
  40b3c6:	sbb    al,0xc7
  40b3c8:	std    
  40b3c9:	or     al,0xc1
  40b3cb:	pop    ebx
  40b3cc:	pop    ebp
  40b3cd:	or     al,0xb4
  40b3cf:	sbb    esp,edi
  40b3d1:	or     al,0xbf
  40b3d3:	cli    
  40b3d4:	lock loope 0x40b3fe
  40b3d7:	arpl   WORD PTR [edx-0x27],dx
  40b3da:	mov    ds:0x2ffaba11,al
  40b3df:	popf   
  40b3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e1:	inc    ebx
  40b3e2:	stc    
  40b3e3:	mov    dl,0xd7
  40b3e5:	jnp    0x40b3aa
  40b3e7:	jmp    0xa53:0xf01c6e93
  40b3ee:	push   edi
  40b3ef:	and    DWORD PTR fs:[ebp-0x69],eax
  40b3f3:	sahf   
  40b3f4:	shl    ebx,0xfd
  40b3f7:	loope  0x40b37d
  40b3f9:	loopne 0x40b472
  40b3fb:	push   0x6a
  40b3fd:	scas   ax,WORD PTR es:[edi]
  40b3ff:	jnp    0x40b3b9
  40b401:	jno    0x40b3f1
  40b403:	pop    ecx
  40b404:	dec    esi
  40b405:	or     DWORD PTR [ecx+0x777ff95f],edi
  40b40b:	adc    DWORD PTR [ecx],edx
  40b40d:	inc    edx
  40b40e:	sahf   
  40b40f:	pusha  
  40b410:	sti    
  40b411:	mov    al,0xa
  40b413:	lahf   
  40b414:	adc    bl,dl
  40b416:	cmp    dl,bh
  40b418:	and    edx,0xa5f35392
  40b41e:	neg    BYTE PTR [ecx-0x6f]
  40b421:	mov    ch,0x44
  40b423:	mov    eax,0x37f9cff8
  40b428:	xor    eax,0xc9fb6e5c
  40b42d:	hlt    
  40b42e:	add    ebp,DWORD PTR [edx]
  40b430:	(bad)  
  40b431:	dec    esp
  40b432:	fild   QWORD PTR [edx-0x74]
  40b435:	jne    0x40b424
  40b437:	sti    
  40b438:	dec    dl
  40b43a:	pushf  
  40b43b:	jno    0x40b3d3
  40b43d:	sbb    DWORD PTR [eax-0x1e972edb],edi
  40b443:	mov    ch,0xfe
  40b445:	es mov ebx,0xba804209
  40b44b:	pushf  
  40b44c:	lods   al,BYTE PTR ds:[esi]
  40b44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b44e:	hlt    
  40b44f:	lahf   
  40b450:	into   
  40b451:	xor    DWORD PTR [ecx],esp
  40b453:	xchg   al,ah
  40b455:	add    eax,0xedc06fac
  40b45a:	xchg   edx,eax
  40b45b:	jno    0x40b4d3
  40b45d:	push   esi
  40b45e:	and    eax,edi
  40b460:	addr16 int 0xf2
  40b463:	mov    bh,0x32
  40b465:	push   0xffffffda
  40b467:	cmp    ch,BYTE PTR [edi]
  40b469:	push   ecx
  40b46a:	test   dh,ch
  40b46c:	(bad)  
  40b46d:	mov    ecx,0x7cc6e6f8
  40b472:	in     al,0xf8
  40b474:	add    BYTE PTR [ebx-0x8d1f7c3],0xbc
  40b47b:	pop    DWORD PTR [ecx+0x5c502bb6]
  40b481:	jle    0x40b4dc
  40b483:	icebp  
  40b484:	add    edi,DWORD PTR [ebx]
  40b486:	ja     0x40b4aa
  40b488:	repnz sub al,0xfa
  40b48b:	push   0x6c
  40b48d:	dec    ecx
  40b48e:	jb     0x40b436
  40b490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b491:	into   
  40b492:	cwde   
  40b493:	push   ecx
  40b494:	jp     0x40b477
  40b496:	cmp    eax,0x3b67b3ea
  40b49b:	cmp    eax,ebx
  40b49d:	pop    ds
  40b49e:	daa    
  40b49f:	add    eax,0x8e46900a
  40b4a4:	cmp    cl,bh
  40b4a6:	hlt    
  40b4a7:	mov    ?,WORD PTR [esi]
  40b4a9:	loop   0x40b453
  40b4ab:	in     al,0xc5
  40b4ad:	mov    bh,0x9a
  40b4af:	out    dx,eax
  40b4b0:	bound  ebx,QWORD PTR [ebp-0x48]
  40b4b3:	inc    esi
  40b4b4:	cmp    eax,0xec3d4d69
  40b4b9:	mov    ecx,0xaf199e75
  40b4be:	test   DWORD PTR [eax],ebx
  40b4c0:	push   edx
  40b4c1:	cli    
  40b4c2:	mul    BYTE PTR [eax+0x5]
  40b4c5:	add    DWORD PTR [esi],edi
  40b4c7:	sbb    al,0x24
  40b4c9:	(bad)  
  40b4ca:	mov    ss,WORD PTR [edi]
  40b4cc:	fcmove st,st(0)
  40b4ce:	rcl    DWORD PTR [edi+0x324cdf5c],cl
  40b4d4:	inc    ebx
  40b4d5:	xchg   edx,eax
  40b4d6:	popa   
  40b4d7:	stc    
  40b4d8:	mov    DWORD PTR [ebp-0x5f6397ab],edi
  40b4de:	gs adc al,0x18
  40b4e1:	pop    edi
  40b4e2:	jecxz  0x40b47a
  40b4e4:	sti    
  40b4e5:	pop    ecx
  40b4e6:	adc    BYTE PTR [ebx],al
  40b4e8:	push   esi
  40b4e9:	jge    0x40b512
  40b4eb:	jno    0x40b4db
  40b4ed:	sub    eax,0x21968289
  40b4f2:	ja     0x40b523
  40b4f4:	ror    BYTE PTR [ebx+eiz*8],0x5a
  40b4f8:	add    BYTE PTR [esi],bh
  40b4fa:	retf   
  40b4fb:	pop    ds
  40b4fc:	std    
  40b4fd:	test   BYTE PTR [edi-0x7fe62695],dh
  40b503:	scas   eax,DWORD PTR es:[edi]
  40b504:	inc    ebp
  40b505:	pop    edx
  40b506:	aaa    
  40b507:	mov    ecx,gs
  40b509:	mov    dh,0x3b
  40b50b:	dec    edi
  40b50c:	inc    DWORD PTR [esi]
  40b50e:	dec    ebp
  40b50f:	mov    ch,0x8e
  40b511:	xor    al,0x5e
  40b513:	or     eax,0x77e1dfc3
  40b518:	vsqrtss xmm5,xmm3,xmm0
  40b51c:	rcr    ah,0x56
  40b51f:	sub    eax,0x84a2ced8
  40b524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b525:	retf   
  40b526:	cmp    BYTE PTR [ebx+edx*8-0x35ffe396],dl
  40b52d:	or     BYTE PTR [esi+0x62dba76],bh
  40b533:	adc    al,0x62
  40b535:	je     0x40b4e5
  40b537:	cmp    DWORD PTR [edx],ebx
  40b539:	pop    ss
  40b53a:	mov    ecx,0x7d21b438
  40b53f:	mov    al,ds:0x4b3362a9
  40b544:	in     eax,dx
  40b545:	pusha  
  40b546:	in     eax,0x61
  40b548:	std    
  40b549:	jge    0x40b552
  40b54b:	xor    DWORD PTR [eax+0x27],ecx
  40b54e:	jb     0x40b4f9
  40b550:	adc    cl,ah
  40b552:	sbb    ecx,esp
  40b554:	loopne 0x40b570
  40b556:	jnp    0x40b5b2
  40b558:	ret    0x360e
  40b55b:	enter  0x9505,0x7f
  40b55f:	ss dec eax
  40b561:	dec    eax
  40b562:	cli    
  40b563:	or     esp,DWORD PTR [eax]
  40b565:	ror    DWORD PTR [edx-0x4f],0xd2
  40b569:	xlat   BYTE PTR ds:[ebx]
  40b56a:	inc    ebx
  40b56b:	bound  esp,QWORD PTR [edi+0x26]
  40b56e:	jno    0x40b5ea
  40b570:	xor    BYTE PTR [ebp+0x437c580b],ah
  40b576:	sbb    al,0x44
  40b578:	ja     0x40b5bc
  40b57a:	cmp    al,0x1a
  40b57c:	mov    edi,fs
  40b57e:	mov    edi,0x7c5da72e
  40b583:	dec    ebp
  40b584:	adc    ah,ch
  40b586:	xchg   edi,eax
  40b587:	mov    bl,0xc6
  40b589:	sbb    eax,0x13fac79f
  40b58e:	dec    edi
  40b58f:	jecxz  0x40b52a
  40b591:	aaa    
  40b592:	retf   0xa2f5
  40b595:	sbb    eax,0x5785b434
  40b59a:	cmp    eax,0xaa7d0156
  40b59f:	test   BYTE PTR [edi+0x1b],dh
  40b5a2:	mov    bh,0x45
  40b5a4:	jmp    FWORD PTR ds:0xfdc4cb53
  40b5aa:	or     bl,BYTE PTR [esi-0x79]
  40b5ad:	sub    bl,0xb4
  40b5b0:	shl    BYTE PTR [eax-0x6d],0x50
  40b5b4:	pop    esp
  40b5b5:	cmp    al,0xa2
  40b5b7:	(bad)  
  40b5b8:	iret   
  40b5b9:	mov    ah,0x96
  40b5bb:	fistp  WORD PTR [ecx-0x5b]
  40b5be:	pop    ds
  40b5bf:	je     0x40b62a
  40b5c1:	ins    BYTE PTR es:[edi],dx
  40b5c2:	sbb    BYTE PTR [eax-0x6f855e52],0xdb
  40b5c9:	cld    
  40b5ca:	fsincos 
  40b5cc:	add    ecx,DWORD PTR [edx-0x72871dd0]
  40b5d2:	sbb    al,0x2
  40b5d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d5:	sar    DWORD PTR [esi-0x1b8c1d9d],1
  40b5db:	(bad)  
  40b5dd:	sbb    dh,dl
  40b5df:	add    bl,BYTE PTR [esi+0x3e56d092]
  40b5e5:	xchg   esi,eax
  40b5e6:	(bad)  
  40b5e7:	jl     0x40b597
  40b5e9:	pop    ecx
  40b5ea:	jmp    0x5189:0x88235482
  40b5f1:	stc    
  40b5f2:	xor    DWORD PTR [eax-0x12f59f42],ebx
  40b5f8:	cmp    al,0xe1
  40b5fa:	mov    ds:0x7e4c49,eax
  40b5ff:	and    BYTE PTR [ecx-0xc611a96],ch
  40b605:	ret    
  40b606:	aas    
  40b607:	loopne 0x40b5f3
  40b609:	scas   eax,DWORD PTR es:[edi]
  40b60a:	push   ecx
  40b60b:	je     0x40b663
  40b60d:	outs   dx,DWORD PTR ds:[esi]
  40b60e:	mov    al,ds:0x1a1f8be0
  40b613:	xor    DWORD PTR [esi],0x3d
  40b616:	sub    ebp,DWORD PTR [edx]
  40b618:	call   FWORD PTR [esp+eax*2-0x2bd30d76]
  40b61f:	push   esi
  40b620:	les    edx,FWORD PTR ds:0x1d24f6cb
  40b626:	push   esi
  40b627:	fs push edi
  40b629:	imul   ecx,DWORD PTR [ecx],0x115e9db8
  40b62f:	repnz fadd DWORD PTR [edx+0x71af8f2f]
  40b636:	mov    ah,0x7
  40b638:	in     al,dx
  40b639:	jmp    0x83ae:0xdffc7de
  40b640:	sub    BYTE PTR [ecx-0x9256ba5],dl
  40b646:	or     DWORD PTR [eax+0x78],0xffffffdd
  40b64a:	ins    BYTE PTR es:[edi],dx
  40b64b:	out    0x73,eax
  40b64d:	ret    0xcdd5
  40b650:	fbstp  TBYTE PTR [ebx]
  40b652:	scas   eax,DWORD PTR es:[edi]
  40b653:	ja     0x40b662
  40b655:	lock or edi,DWORD PTR [edi+0x58]
  40b659:	sub    al,0x2
  40b65b:	dec    ecx
  40b65c:	jg     0x40b63d
  40b65e:	pop    ecx
  40b65f:	mul    ebx
  40b661:	or     al,0x8b
  40b663:	xchg   ebx,eax
  40b664:	fwait
  40b665:	xchg   dh,al
  40b667:	push   es
  40b668:	loope  0x40b6d9
  40b66a:	sub    esi,eax
  40b66c:	push   ss
  40b66d:	outs   dx,BYTE PTR ds:[esi]
  40b66e:	or     DWORD PTR [esi+ecx*4-0x1ad7746],edx
  40b675:	outs   dx,BYTE PTR ds:[esi]
  40b676:	fnstenv [esi-0x75]
  40b679:	jb     0x40b6f6
  40b67b:	adc    esp,DWORD PTR [esi]
  40b67d:	mov    cl,0x38
  40b67f:	pop    ebx
  40b680:	jnp    0x40b687
  40b682:	jmp    0x77bc:0x7ef0faa2
  40b689:	or     BYTE PTR [ebx],al
  40b68b:	or     ch,dh
  40b68d:	fild   DWORD PTR [edi+0x1c295369]
  40b693:	arpl   WORD PTR [esi],si
  40b695:	push   es
  40b696:	sub    al,0x44
  40b698:	int3   
  40b699:	jge    0x40b6f1
  40b69b:	inc    edi
  40b69c:	pusha  
  40b69d:	mov    al,0x4c
  40b69f:	push   0x2c
  40b6a1:	mov    eax,ds:0x72a6f42a
  40b6a6:	ror    BYTE PTR [ebp+0x23998bfc],0xdc
  40b6ad:	inc    eax
  40b6ae:	adc    al,0x40
  40b6b0:	cmp    ch,dh
  40b6b2:	retf   0x4071
  40b6b5:	out    dx,al
  40b6b6:	lea    esi,[edi-0x18]
  40b6b9:	ins    DWORD PTR es:[edi],dx
  40b6ba:	mov    DWORD PTR [ebx+0x756d674c],esi
  40b6c0:	test   BYTE PTR [ebx+0x66],ch
  40b6c3:	daa    
  40b6c4:	cwde   
  40b6c5:	add    DWORD PTR [esi],edx
  40b6c7:	int    0xec
  40b6c9:	cmp    al,0x23
  40b6cb:	(bad)  
  40b6cc:	out    dx,al
  40b6cd:	sbb    DWORD PTR [ecx],ebp
  40b6cf:	lods   al,BYTE PTR ds:[esi]
  40b6d0:	aam    0x45
  40b6d2:	sub    BYTE PTR ds:0xfed4ca26,cl
  40b6d8:	lods   eax,DWORD PTR ds:[esi]
  40b6d9:	retf   
  40b6da:	and    edx,edx
  40b6dc:	jno    0x40b750
  40b6de:	call   0xdd6:0xc2f88679
  40b6e5:	add    eax,DWORD PTR [eax-0x311b833d]
  40b6eb:	jns    0x40b698
  40b6ed:	loop   0x40b76b
  40b6ef:	sbb    BYTE PTR [esi+0x2fc6e39],al
  40b6f5:	xor    ebp,DWORD PTR [edx]
  40b6f7:	icebp  
  40b6f8:	mov    eax,ebp
  40b6fa:	mov    ds:0x5467938a,eax
  40b6ff:	push   edx
  40b700:	int    0x73
  40b702:	bound  esi,QWORD PTR [ecx]
  40b704:	pop    ebx
  40b705:	xor    al,0x55
  40b707:	ja     0x40b6c6
  40b709:	hlt    
  40b70a:	es es add dl,cl
  40b70e:	adc    eax,0x32bd083
  40b713:	mov    dl,0x75
  40b715:	mov    eax,0xd02595ab
  40b71a:	mov    eax,0xd72fa384
  40b71f:	retf   0x3ef6
  40b722:	gs dec edx
  40b724:	leave  
  40b725:	iret   
  40b726:	sbb    edi,ebp
  40b728:	cld    
  40b729:	pop    ecx
  40b72a:	dec    eax
  40b72b:	lds    eax,FWORD PTR [esi+0x6f]
  40b72e:	outs   dx,BYTE PTR es:[esi]
  40b730:	jbe    0x40b741
  40b732:	jg     0x40b788
  40b734:	pop    ebx
  40b735:	mov    esi,0x2a868534
  40b73a:	cmp    dl,BYTE PTR [ebx-0x2c]
  40b73d:	jle    0x40b6dd
  40b73f:	lea    ebx,[edi+0x7e73ccd7]
  40b745:	ds das 
  40b747:	(bad)  
  40b748:	lock shl bh,0x59
  40b74c:	aas    
  40b74d:	out    dx,eax
  40b74e:	rcl    DWORD PTR [ebx],0x5f
  40b751:	repz ret 
  40b753:	push   esp
  40b754:	and    DWORD PTR [edx],ebp
  40b756:	xlat   BYTE PTR ds:[ebx]
  40b757:	fs push cs
  40b759:	adc    BYTE PTR [ecx-0x763a4064],dl
  40b75f:	and    BYTE PTR [ecx],bl
  40b761:	mov    WORD PTR [eax+0x78],fs
  40b764:	lds    esp,FWORD PTR [ebx+esi*2+0x7f]
  40b768:	call   0x8951:0xafdf4dea
  40b76f:	push   edx
  40b770:	mov    ds:0x5ff8229b,eax
  40b775:	push   edx
  40b776:	xchg   ebx,eax
  40b777:	mov    ds:0xa7930dc6,al
  40b77c:	xchg   edi,eax
  40b77d:	cmp    bl,ah
  40b77f:	or     eax,0xe7b27c18
  40b784:	(bad)  
  40b785:	mov    ch,0x36
  40b787:	adc    al,0x9f
  40b789:	or     al,0xa1
  40b78b:	ds mov ebp,0x95de6eea
  40b791:	fidiv  WORD PTR [edi+0x3b]
  40b794:	and    DWORD PTR [esi+0x6a9aa957],ebx
  40b79a:	retf   
  40b79b:	in     al,0xb0
  40b79d:	jmp    0x40b796
  40b79f:	dec    ecx
  40b7a0:	pusha  
  40b7a1:	and    bl,BYTE PTR [eax-0x3ee45734]
  40b7a7:	out    0xb4,eax
  40b7a9:	fwait
  40b7aa:	ror    BYTE PTR [esi],1
  40b7ac:	xor    eax,0xc7cf4a00
  40b7b1:	(bad)  
  40b7b2:	pop    edx
  40b7b3:	adc    eax,0x2310ee30
  40b7b8:	inc    ebp
  40b7b9:	xor    ebp,DWORD PTR [ebx+0x12ec2545]
  40b7bf:	mov    esp,0xd0b9b21d
  40b7c4:	jmp    0xfce316a9
  40b7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ca:	es jecxz 0x40b75c
  40b7cd:	push   ecx
  40b7ce:	stos   DWORD PTR es:[edi],eax
  40b7cf:	ja     0x40b798
  40b7d1:	out    0x9a,al
  40b7d3:	mov    al,ds:0x5db1fc28
  40b7d8:	jp     0x40b78b
  40b7da:	jp     0x40b762
  40b7dc:	sbb    dl,BYTE PTR [ebx]
  40b7de:	dec    ecx
  40b7df:	add    BYTE PTR [eax-0x63f6b3c4],al
  40b7e5:	out    0xf,al
  40b7e7:	enter  0xd8e3,0x4d
  40b7eb:	pop    ss
  40b7ec:	(bad)  
  40b7ed:	(bad)  
  40b7ee:	lock adc al,0xaa
  40b7f1:	std    
  40b7f2:	ins    BYTE PTR es:[edi],dx
  40b7f3:	(bad)  
  40b7f4:	hlt    
  40b7f5:	imul   ecx,edx,0x5fa10132
  40b7fb:	jge    0x40b7e5
  40b7fd:	sar    bh,0x85
  40b800:	(bad)  
  40b801:	loopne 0x40b7c8
  40b803:	xchg   edi,eax
  40b804:	xchg   ebx,eax
  40b805:	or     DWORD PTR [edi-0x59309358],ebp
  40b80b:	mov    DWORD PTR [esi+0x25],edx
  40b80e:	ret    0x83d5
  40b811:	lods   eax,DWORD PTR ds:[esi]
  40b812:	or     DWORD PTR [ebp+eiz*2-0x70],esp
  40b816:	dec    esi
  40b817:	jb     0x40b822
  40b819:	test   BYTE PTR [edi-0x29],cl
  40b81c:	dec    esi
  40b81d:	loope  0x40b891
  40b81f:	jbe    0x40b7c3
  40b821:	mov    ecx,0x9a6f4f05
  40b826:	sub    cl,BYTE PTR [edx-0x65]
  40b829:	sbb    cl,bh
  40b82b:	push   esp
  40b82c:	in     al,dx
  40b82d:	mov    ds:0xc5fd74fa,eax
  40b832:	push   ss
  40b833:	mov    ebp,0xcbee1607
  40b838:	aam    0xdb
  40b83a:	xchg   esi,eax
  40b83b:	sub    eax,0xf085662d
  40b840:	xor    eax,esp
  40b842:	hlt    
  40b843:	inc    ebp
  40b844:	test   al,0xaf
  40b846:	xchg   esp,eax
  40b847:	mov    bh,0xea
  40b849:	push   ebx
  40b84a:	stos   BYTE PTR es:[edi],al
  40b84b:	arpl   WORD PTR [ecx-0x1b],dx
  40b84e:	push   0x39
  40b850:	aaa    
  40b851:	push   ss
  40b852:	xchg   edi,eax
  40b853:	pop    ebx
  40b854:	sbb    ch,dl
  40b856:	test   DWORD PTR [ebx+0x614c6bfe],ebx
  40b85c:	sbb    edi,DWORD PTR [ebx]
  40b85e:	jbe    0x40b7e2
  40b860:	pop    ebp
  40b861:	rol    BYTE PTR [ebx+edi*2],1
  40b864:	jne    0x40b888
  40b866:	pop    ebx
  40b867:	dec    esi
  40b868:	jnp    0x40b818
  40b86a:	mov    ?,WORD PTR [esp+ebx*4+0x4dfe6bfb]
  40b871:	and    ebp,DWORD PTR [ebp+0x27]
  40b874:	dec    esi
  40b875:	ror    DWORD PTR [edi-0x71],0x9d
  40b879:	ret    
  40b87a:	mov    ah,0x5a
  40b87c:	pushf  
  40b87d:	and    bh,BYTE PTR [edx-0x49757689]
  40b883:	in     al,dx
  40b884:	jmp    0x9334:0x21fdfa7a
  40b88b:	add    DWORD PTR [esi],ecx
  40b88d:	and    DWORD PTR [esi+eax*8],edi
  40b890:	lods   eax,DWORD PTR ds:[esi]
  40b891:	or     al,BYTE PTR [edi+ebp*2]
  40b894:	mul    BYTE PTR [esi+0xc1ec45e]
  40b89a:	fld    TBYTE PTR ds:0x7b1aa5cb
  40b8a0:	cmc    
  40b8a1:	pop    esp
  40b8a2:	out    dx,al
  40b8a3:	sbb    al,0xdb
  40b8a5:	loop   0x40b904
  40b8a7:	ret    0x4499
  40b8aa:	mov    esp,0x713da6a2
  40b8af:	inc    edx
  40b8b0:	repnz outs dx,DWORD PTR ds:[esi]
  40b8b2:	adc    ch,BYTE PTR [ebp+edx*2+0x28046c77]
  40b8b9:	jle    0x40b85d
  40b8bb:	xchg   ecx,eax
  40b8bc:	xor    eax,0x26ab1d5b
  40b8c1:	and    BYTE PTR [eax-0x1c],0x5c
  40b8c5:	jns    0x40b8f0
  40b8c7:	sbb    ebx,DWORD PTR [eax+0x59bbd98b]
  40b8cd:	aad    0xc6
  40b8cf:	out    dx,al
  40b8d0:	jp     0x40b8ba
  40b8d2:	xchg   dl,al
  40b8d4:	add    DWORD PTR [edi-0x174b526d],edx
  40b8da:	xchg   DWORD PTR [ebx],esi
  40b8dc:	test   al,0x4d
  40b8de:	scas   eax,DWORD PTR es:[edi]
  40b8df:	cmp    al,0x88
  40b8e1:	loop   0x40b8fc
  40b8e3:	inc    ebx
  40b8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e5:	ret    
  40b8e6:	sbb    DWORD PTR [ecx+0x53],ebp
  40b8e9:	data16 arpl WORD PTR [edi-0x487e0cfa],cx
  40b8f0:	dec    eax
  40b8f1:	aas    
  40b8f2:	add    al,0x54
  40b8f4:	dec    edx
  40b8f5:	cmp    esi,DWORD PTR [esi+eiz*1+0x6c5c80da]
  40b8fc:	or     eax,0xdfb4b975
  40b901:	fs gs and al,0x1d
  40b905:	adc    al,0x5
  40b907:	or     BYTE PTR [ebx-0x79],cl
  40b90a:	xchg   ebx,eax
  40b90b:	addr16 and eax,0x464b0b30
  40b911:	and    DWORD PTR [eax+0x3128e600],edx
  40b917:	out    0x61,eax
  40b919:	push   0xffffffb7
  40b91b:	or     al,0xad
  40b91d:	cmp    ch,cl
  40b91f:	in     eax,0xa8
  40b921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b922:	mov    ds:0xf17f142a,eax
  40b927:	adc    DWORD PTR [ebx],eax
  40b929:	xor    eax,0x5c2ce7be
  40b92e:	xchg   ebp,eax
  40b92f:	jne    0x40b90b
  40b931:	sbb    bl,BYTE PTR [eax-0x30]
  40b934:	aad    0x7a
  40b936:	push   es
  40b937:	lock imul edi,DWORD PTR [ecx-0x44606b97],0xffffffbd
  40b93f:	loopne 0x40b974
  40b941:	xchg   edi,eax
  40b942:	adc    ebx,esp
  40b944:	adc    BYTE PTR [ecx-0x46],bh
  40b947:	adc    eax,0x3133c0be
  40b94c:	loope  0x40b98d
  40b94e:	pop    edi
  40b94f:	and    edx,DWORD PTR [edx]
  40b951:	and    dl,bl
  40b953:	ret    0xdffd
  40b956:	adc    ecx,DWORD PTR [eax+0x21]
  40b959:	jno    0x40b930
  40b95b:	mov    ah,0xd1
  40b95d:	rcr    dh,0x55
  40b960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b961:	ja     0x40b90f
  40b963:	cmp    eax,ebx
  40b965:	adc    ch,BYTE PTR [edi+0x1ef2723e]
  40b96b:	mov    esp,0xf4137381
  40b970:	mov    ebp,0x23a69beb
  40b975:	imul   esp,DWORD PTR [edi+0x3169cce2],0x4cf7365a
  40b97f:	dec    eax
  40b980:	das    
  40b981:	xor    esi,DWORD PTR [edx]
  40b983:	and    al,0x16
  40b985:	adc    ebp,ebx
  40b987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b988:	aaa    
  40b989:	repnz aaa 
  40b98b:	scas   al,BYTE PTR es:[edi]
  40b98c:	pop    ebp
  40b98d:	rcl    DWORD PTR [ecx-0x13],1
  40b990:	mov    eax,0x4d5fb7c0
  40b995:	sub    eax,0x1cb8a486
  40b99a:	cld    
  40b99b:	lea    edi,[eax-0x68f44b63]
  40b9a1:	loop   0x40b923
  40b9a3:	mov    al,0x35
  40b9a5:	jae    0x40b983
  40b9a7:	mov    al,ds:0x2362b0f8
  40b9ac:	cmp    ch,BYTE PTR ds:0xd18d7d99
  40b9b2:	pop    ebp
  40b9b3:	adc    ecx,DWORD PTR [ebp-0x3f]
  40b9b6:	push   ds
  40b9b7:	inc    ebx
  40b9b8:	inc    esi
  40b9b9:	in     eax,dx
  40b9ba:	mov    WORD PTR [ecx],cs
  40b9bc:	pop    ebp
  40b9bd:	pushf  
  40b9be:	retf   0xb770
  40b9c1:	scas   al,BYTE PTR es:[edi]
  40b9c2:	jmp    0x7b88e1f3
  40b9c7:	mov    eax,ds:0x1509f2f3
  40b9cc:	inc    ebp
  40b9cd:	ds cwde 
  40b9cf:	jmp    DWORD PTR [ecx-0x7a]
  40b9d2:	ror    BYTE PTR [edx-0x744ba08],1
  40b9d8:	pop    eax
  40b9d9:	cmc    
  40b9da:	icebp  
  40b9db:	and    ebx,edi
  40b9dd:	xchg   esi,eax
  40b9de:	pop    ecx
  40b9df:	adc    eax,0x690d936a
  40b9e4:	shl    DWORD PTR [eax-0xc10ff0e],0x77
  40b9eb:	xor    al,0x87
  40b9ed:	sahf   
  40b9ee:	mov    edi,0x2346beba
  40b9f3:	psllq  mm7,QWORD PTR ds:[ecx+0x60]
  40b9f8:	inc    ebx
  40b9f9:	push   edx
  40b9fa:	sbb    bh,dl
  40b9fc:	je     0x40ba14
  40b9fe:	sub    al,0x9e
  40ba00:	jnp    0x40b9da
  40ba02:	sbb    BYTE PTR [edi+0x257fc09e],0x46
  40ba09:	jge    0x40b99d
  40ba0b:	ins    BYTE PTR es:[edi],dx
  40ba0c:	cmp    DWORD PTR [eax+0x619e8736],0x45306663
  40ba16:	mov    cl,0xd2
  40ba18:	sbb    BYTE PTR [ebx],ah
  40ba1a:	add    eax,0xed02cd1b
  40ba1f:	out    dx,eax
  40ba20:	push   ebp
  40ba21:	sub    eax,0xb1c35d01
  40ba26:	repz in eax,dx
  40ba28:	push   edx
  40ba29:	das    
  40ba2a:	call   0x83e5:0x54c8ff1d
  40ba31:	jne    0x40ba3e
  40ba33:	adc    cl,BYTE PTR [edi+0x503b93af]
  40ba39:	inc    ebx
  40ba3a:	fwait
  40ba3b:	xor    al,0xce
  40ba3d:	imul   ebx,esp,0xffffff90
  40ba40:	push   esp
  40ba41:	ins    DWORD PTR es:[edi],dx
  40ba42:	scas   eax,DWORD PTR es:[edi]
  40ba43:	dec    ebx
  40ba44:	jecxz  0x40ba54
  40ba46:	add    DWORD PTR [ebx-0x30],0xffffffa7
  40ba4a:	lds    eax,FWORD PTR [esp+eiz*4]
  40ba4d:	sub    BYTE PTR [di-0x63],0x63
  40ba52:	xchg   edi,eax
  40ba53:	jp     0x40ba91
  40ba55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba56:	adc    esi,DWORD PTR [ebx+0xe]
  40ba59:	inc    edx
  40ba5a:	loop   0x40ba7a
  40ba5c:	xchg   esi,eax
  40ba5d:	cld    
  40ba5e:	mov    edx,0x6d1d1a21
  40ba63:	xor    BYTE PTR [ebp-0x37],dl
  40ba66:	fs push ebp
  40ba68:	ins    DWORD PTR es:[edi],dx
  40ba69:	or     al,0xb4
  40ba6b:	xchg   ebp,eax
  40ba6c:	jp     0x40ba37
  40ba6e:	sbb    eax,0x7500b29
  40ba73:	sbb    BYTE PTR [ecx+0x364b0e58],bh
  40ba79:	xor    cl,dl
  40ba7b:	mov    al,0x4c
  40ba7d:	mov    bh,0xaa
  40ba7f:	and    DWORD PTR [eax+0x3491a103],0xffffff8d
  40ba86:	xor    ah,BYTE PTR [ecx-0x6064e659]
  40ba8c:	imul   ebp,DWORD PTR [ecx],0x7d
  40ba8f:	jle    0x40bad0
  40ba91:	stc    
  40ba92:	sub    ebp,DWORD PTR [esp+eax*1-0x20]
  40ba96:	aas    
  40ba97:	mov    dh,0xb
  40ba99:	out    0xa9,al
  40ba9b:	inc    edi
  40ba9c:	(bad)  
  40ba9d:	and    al,0xc8
  40ba9f:	retf   
  40baa0:	sbb    al,0x3e
  40baa2:	xchg   ebp,eax
  40baa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa5:	push   ebx
  40baa6:	push   ebp
  40baa7:	fst    DWORD PTR [ecx+eiz*4-0x3f]
  40baab:	les    esi,FWORD PTR [edx+ebp*1-0x602056e5]
  40bab2:	test   al,0x30
  40bab4:	add    esi,DWORD PTR [eax-0x4e]
  40bab7:	jle    0x40bb1e
  40bab9:	cwde   
  40baba:	mov    bl,0xd
  40babc:	xor    DWORD PTR [eax+0x77117d54],0xeb739696
  40bac6:	push   0x79
  40bac8:	in     eax,dx
  40bac9:	imul   DWORD PTR [ebp+0x31]
  40bacc:	and    dh,BYTE PTR [edi-0x22]
  40bacf:	pop    ebx
  40bad0:	and    bl,BYTE PTR [eax]
  40bad2:	inc    edx
  40bad3:	xchg   ebx,eax
  40bad4:	hlt    
  40bad5:	xchg   ebx,eax
  40bad6:	add    al,0xf0
  40bad8:	cmp    edx,DWORD PTR [esi+ebx*8]
  40badb:	test   eax,0x4eb2b667
  40bae0:	xchg   ebp,eax
  40bae1:	cmc    
  40bae2:	lea    esi,[esi+0x30c847b3]
  40bae8:	mov    ah,BYTE PTR [edi-0x43e9ec39]
  40baee:	mov    al,0xf1
  40baf0:	inc    ebx
  40baf1:	inc    ebp
  40baf2:	xlat   BYTE PTR ds:[ebx]
  40baf3:	cmc    
  40baf4:	outs   dx,BYTE PTR ds:[esi]
  40baf5:	mov    al,ds:0x362ff8ba
  40bafa:	lea    ebx,[edx]
  40bafc:	push   edx
  40bafd:	sub    cl,al
  40baff:	pop    ebp
  40bb00:	xchg   ecx,eax
  40bb01:	or     al,0x6f
  40bb03:	inc    edi
  40bb04:	mov    bl,0xe8
  40bb06:	mov    esi,?
  40bb08:	and    eax,DWORD PTR [ebx+ebx*1-0x619779f4]
  40bb0f:	dec    esp
  40bb10:	mov    eax,fs
  40bb12:	out    0xac,eax
  40bb14:	sbb    DWORD PTR [esi+esi*1],edx
  40bb17:	pop    ebp
  40bb18:	mov    al,ds:0xf39176b7
  40bb1d:	mov    bh,0x4d
  40bb1f:	imul   esi,ecx,0xffffffb1
  40bb22:	push   cs
  40bb23:	xchg   esi,ebp
  40bb25:	sbb    BYTE PTR [esi+0x3c],bh
  40bb28:	mov    ecx,0x3e910cc7
  40bb2d:	dec    esp
  40bb2e:	or     BYTE PTR [edx-0x21],ah
  40bb31:	jmp    0x40bba6
  40bb33:	arpl   WORD PTR ds:[esi+0x643179],sp
  40bb3a:	mov    esi,0xf78ef29b
  40bb3f:	fisub  DWORD PTR [ebx+edi*8]
  40bb42:	cmp    ecx,edx
  40bb44:	and    eax,0x76abfec4
  40bb49:	add    eax,0x7949a8ea
  40bb4e:	xor    DWORD PTR [ebp+0x4c],eax
  40bb51:	scas   al,BYTE PTR es:[edi]
  40bb52:	jecxz  0x40bb0e
  40bb54:	push   ds
  40bb55:	std    
  40bb56:	ins    DWORD PTR es:[edi],dx
  40bb57:	sar    DWORD PTR [ebx+0xd],0x9b
  40bb5b:	jle    0x40bb6f
  40bb5d:	adc    DWORD PTR [ebx+0x12],0xffffffac
  40bb61:	mov    bl,0x67
  40bb63:	inc    ecx
  40bb64:	xor    al,0x88
  40bb66:	aad    0xaf
  40bb68:	cdq    
  40bb69:	pop    ebp
  40bb6a:	and    DWORD PTR [ecx+0x22],ebp
  40bb6d:	cmp    al,0xf8
  40bb6f:	int3   
  40bb70:	lods   eax,DWORD PTR ds:[esi]
  40bb71:	cmp    eax,0x69a062a
  40bb76:	loopne 0x40bb94
  40bb78:	push   ds
  40bb79:	ins    DWORD PTR es:[edi],dx
  40bb7a:	xor    BYTE PTR [edx],0x35
  40bb7d:	icebp  
  40bb7e:	sub    eax,0x79bb30e
  40bb83:	shl    BYTE PTR [edi+0x1fbc22b7],cl
  40bb89:	mul    edi
  40bb8b:	mov    DWORD PTR [edi],esp
  40bb8d:	pop    ecx
  40bb8e:	shr    BYTE PTR [edx+0xa],cl
  40bb91:	sub    DWORD PTR [ecx+0x48],ebp
  40bb94:	push   cs
  40bb95:	loopne 0x40bb82
  40bb97:	push   edx
  40bb98:	loop   0x40bbe8
  40bb9a:	sbb    DWORD PTR [esi],eax
  40bb9c:	xchg   edx,eax
  40bb9d:	call   0xadee0bc8
  40bba2:	or     DWORD PTR [edi],ebx
  40bba4:	adc    cl,BYTE PTR [ebp+0x3f]
  40bba7:	lds    esi,FWORD PTR [edi]
  40bba9:	dec    esp
  40bbaa:	ret    0x4ceb
  40bbad:	fdivr  st,st(7)
  40bbaf:	std    
  40bbb0:	or     BYTE PTR [edi+0x38],ah
  40bbb3:	pop    edx
  40bbb4:	jmp    0x40bbef
  40bbb6:	data16 (bad) 
  40bbb8:	out    dx,eax
  40bbb9:	mov    ecx,0x8d2b5e40
  40bbbe:	shr    BYTE PTR [eax],cl
  40bbc0:	lods   eax,DWORD PTR ds:[esi]
  40bbc1:	call   0x6c68:0x2431594d
  40bbc8:	jle    0x40bc36
  40bbca:	dec    eax
  40bbcb:	aas    
  40bbcc:	addr16 push esi
  40bbce:	pop    ebx
  40bbcf:	daa    
  40bbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd1:	jg     0x40bbd9
  40bbd3:	add    ch,bl
  40bbd5:	dec    eax
  40bbd6:	aas    
  40bbd7:	sbb    DWORD PTR fs:[ecx],0x256b7c88
  40bbde:	out    0xe0,al
  40bbe0:	test   DWORD PTR [eax],edx
  40bbe2:	shl    BYTE PTR [ebp+0x24],1
  40bbe5:	pusha  
  40bbe6:	dec    edi
  40bbe7:	mov    eax,?
  40bbe9:	mov    dh,0x58
  40bbeb:	xchg   BYTE PTR [eax-0x1292cab7],cl
  40bbf1:	in     eax,0x5b
  40bbf3:	das    
  40bbf4:	mov    ds:0xfeb3dbf5,al
  40bbf9:	or     DWORD PTR [ecx+0x3d],ecx
  40bbfc:	ret    
  40bbfd:	pop    edx
  40bbfe:	mov    cl,0xa9
  40bc00:	into   
  40bc01:	sub    DWORD PTR [esi+ebp*2],ecx
  40bc04:	fld    TBYTE PTR ds:0x945318ec
  40bc0a:	mov    ebx,0xe29b695e
  40bc0f:	sub    al,0x3a
  40bc11:	and    ecx,DWORD PTR [edi]
  40bc13:	rcr    DWORD PTR [esi],1
  40bc15:	xchg   BYTE PTR [edi-0x406782a3],bh
  40bc1b:	in     eax,dx
  40bc1c:	and    ecx,DWORD PTR [edi-0x6fd3d70]
  40bc22:	xchg   ebx,eax
  40bc23:	adc    eax,0xeb7d5d36
  40bc28:	aam    0x45
  40bc2a:	imul   ecx,DWORD PTR ds:0x19d6af0f,0x4a
  40bc31:	inc    edx
  40bc32:	sar    ebx,0xcf
  40bc35:	cmp    eax,ecx
  40bc37:	xchg   DWORD PTR [ecx],esi
  40bc39:	and    DWORD PTR [eax-0x3d],ebx
  40bc3c:	cld    
  40bc3d:	sbb    eax,0xbe5494a9
  40bc42:	cld    
  40bc43:	jp     0x40bc1c
  40bc45:	sub    al,0x7b
  40bc47:	sbb    ebx,edi
  40bc49:	mov    ah,0xb4
  40bc4b:	sub    al,0x10
  40bc4d:	push   ecx
  40bc4e:	push   0x86085146
  40bc53:	mov    ch,0xf7
  40bc55:	jl     0x40bccf
  40bc57:	loop   0x40bc4f
  40bc59:	mov    bl,0xd4
  40bc5b:	retf   0xc851
  40bc5e:	add    edi,DWORD PTR [ebx+0x22e51a4a]
  40bc64:	loope  0x40bc6c
  40bc66:	rcl    DWORD PTR [esi+0x73],1
  40bc69:	and    al,0xbe
  40bc6b:	ja     0x40bc99
  40bc6d:	or     esi,esp
  40bc6f:	add    al,0xf
  40bc71:	pop    ds
  40bc72:	cmp    edi,DWORD PTR [ecx]
  40bc74:	(bad)  
  40bc76:	jno    0x40bc72
  40bc78:	aam    0x3
  40bc7a:	in     al,0xac
  40bc7c:	aam    0x89
  40bc7e:	lock pop ecx
  40bc80:	div    bl
  40bc82:	jno    0x40bc90
  40bc84:	sub    DWORD PTR [edi-0x23],ebx
  40bc87:	inc    BYTE PTR [ecx-0x5a278f36]
  40bc8d:	fmul   DWORD PTR [esi-0x3003535f]
  40bc93:	sahf   
  40bc94:	adc    esi,DWORD PTR [esi]
  40bc96:	xor    ah,BYTE PTR [ecx-0x3b]
  40bc99:	sbb    eax,0xca38c744
  40bc9e:	addr16 or cl,cl
  40bca1:	sub    edx,ecx
  40bca3:	dec    edi
  40bca4:	enter  0x9ab1,0xf0
  40bca8:	arpl   dx,di
  40bcaa:	add    BYTE PTR [edi-0x18ac982],bl
  40bcb0:	push   ds
  40bcb1:	dec    eax
  40bcb2:	xor    al,0x5b
  40bcb4:	push   esp
  40bcb5:	gs pop eax
  40bcb7:	adc    dh,BYTE PTR [ebp-0x60]
  40bcba:	adc    BYTE PTR [eax+0x1cab0706],dl
  40bcc0:	mov    DWORD PTR [ecx],edx
  40bcc2:	pop    ds
  40bcc3:	out    0x6b,eax
  40bcc5:	leave  
  40bcc6:	(bad)  [esi+0x36a854d4]
  40bccc:	xor    BYTE PTR [eax],0xbd
  40bccf:	inc    edx
  40bcd0:	rol    DWORD PTR [edx+esi*2],cl
  40bcd3:	fcom   DWORD PTR [edx]
  40bcd5:	cmp    esp,ecx
  40bcd7:	dec    edi
  40bcd8:	test   BYTE PTR [eax-0x2a4f7b08],bh
  40bcde:	aas    
  40bcdf:	dec    esp
  40bce0:	leave  
  40bce1:	push   0xffffff99
  40bce3:	xlat   BYTE PTR ds:[ebx]
  40bce4:	call   0x999d:0xfc4085f0
  40bceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcec:	in     al,dx
  40bced:	dec    ebx
  40bcee:	in     al,0xf3
  40bcf0:	ins    BYTE PTR es:[edi],dx
  40bcf1:	mov    dl,0xba
  40bcf3:	jmp    0x4ca0:0x1cb6124c
  40bcfa:	mov    edx,eax
  40bcfc:	inc    ecx
  40bcfd:	pushf  
  40bcfe:	sub    cl,BYTE PTR [eax+0x5]
  40bd01:	inc    ebx
  40bd02:	xchg   esi,eax
  40bd03:	fstp   QWORD PTR [edx+0x20]
  40bd06:	(bad)  
  40bd08:	adc    BYTE PTR [esi+0x21244128],bh
  40bd0e:	dec    ebp
  40bd0f:	cmp    ah,BYTE PTR [ebx-0x75f18d41]
  40bd15:	ja     0x40bcd8
  40bd17:	pop    ss
  40bd18:	lea    ecx,[ecx-0x14374db2]
  40bd1e:	pop    es
  40bd1f:	in     al,dx
  40bd20:	sahf   
  40bd21:	jns    0x40bce6
  40bd23:	fisub  DWORD PTR [ecx+esi*2+0x11]
  40bd27:	jae    0x40bd6b
  40bd29:	mov    ebx,0x4e22cbc9
  40bd2e:	vpmacssdd ymm13,ymm6,ymm2,YMMWORD PTR [esi-0xa6bd703]
  40bd38:	pop    esp
  40bd39:	mov    cl,0x2d
  40bd3b:	sbb    edx,esp
  40bd3d:	fdiv   DWORD PTR [ecx]
  40bd3f:	std    
  40bd40:	ins    DWORD PTR es:[edi],dx
  40bd41:	dec    esi
  40bd42:	cmp    eax,0x75742f13
  40bd47:	out    0x3,eax
  40bd49:	cli    
  40bd4a:	std    
  40bd4b:	mov    gs,WORD PTR [eax+0x32]
  40bd4e:	iret   
  40bd4f:	(bad)  
  40bd50:	dec    esp
  40bd51:	inc    ebx
  40bd52:	pop    eax
  40bd53:	into   
  40bd54:	es jne 0x40bd53
  40bd57:	push   cs
  40bd58:	scas   eax,DWORD PTR es:[edi]
  40bd59:	jo     0x40bda2
  40bd5b:	push   ss
  40bd5c:	mov    ecx,0x52ebec58
  40bd61:	xor    ebx,eax
  40bd63:	hlt    
  40bd64:	shl    BYTE PTR [ebx+0x5c960724],0x58
  40bd6b:	cli    
  40bd6c:	and    BYTE PTR [esi-0x3],bh
  40bd6f:	adc    eax,0x5aa5e6f6
  40bd74:	jp     0x40bd94
  40bd76:	(bad)  
  40bd77:	cmp    edi,ebp
  40bd79:	loop   0x40bdf8
  40bd7b:	mov    bh,0xf4
  40bd7d:	add    WORD PTR [ebx+0x6e],bp
  40bd81:	add    BYTE PTR [ecx],dl
  40bd83:	cmp    BYTE PTR [ecx+0x4820bdb0],bh
  40bd89:	stos   BYTE PTR es:[edi],al
  40bd8a:	cmp    ebp,ecx
  40bd8c:	aad    0x9
  40bd8e:	push   DWORD PTR [edi]
  40bd90:	test   edi,ecx
  40bd92:	push   edi
  40bd93:	(bad)  
  40bd94:	into   
  40bd95:	inc    edi
  40bd96:	inc    eax
  40bd97:	xchg   edi,eax
  40bd98:	int3   
  40bd99:	or     al,0xa4
  40bd9b:	mov    cl,bl
  40bd9d:	lods   al,BYTE PTR ds:[esi]
  40bd9e:	(bad)  
  40bd9f:	cmc    
  40bda0:	sbb    al,0x6d
  40bda2:	fcmovb st,st(1)
  40bda4:	cmp    bh,BYTE PTR [ebx+0x7]
  40bda7:	test   BYTE PTR [edi],al
  40bda9:	xchg   ebx,ebp
  40bdab:	dec    edi
  40bdac:	ins    DWORD PTR es:[edi],dx
  40bdad:	loopne 0x40bd5b
  40bdaf:	sub    edx,DWORD PTR [edi]
  40bdb1:	rcr    esp,0x69
  40bdb4:	out    0xbc,eax
  40bdb6:	jp     0x40bd92
  40bdb8:	shr    esi,cl
  40bdba:	mov    esi,0x5a6861b3
  40bdbf:	pop    edx
  40bdc0:	arpl   WORD PTR [edx-0x79],dx
  40bdc3:	cmp    cl,ch
  40bdc5:	test   ebx,esi
  40bdc7:	hlt    
  40bdc8:	cli    
  40bdc9:	mov    eax,ds:0x47c48492
  40bdce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdcf:	and    ebp,0xffffffee
  40bdd2:	lods   al,BYTE PTR ds:[esi]
  40bdd3:	loope  0x40bdcd
  40bdd5:	out    0xab,eax
  40bdd7:	xor    ah,BYTE PTR [edx-0x76cce1a]
  40bddd:	test   DWORD PTR ds:0x71c2ea15,edx
  40bde3:	sahf   
  40bde4:	mov    cl,0x5e
  40bde6:	jg     0x40be24
  40bde8:	retf   
  40bde9:	test   al,0x67
  40bdeb:	imul   edx,eax,0x4f3b6ce0
  40bdf1:	xor    eax,0x772a37b7
  40bdf6:	popf   
  40bdf7:	or     al,0x8c
  40bdf9:	aad    0x32
  40bdfb:	xchg   esp,eax
  40bdfc:	loop   0x40be27
  40bdfe:	xor    eax,0x7c75fdd9
  40be03:	pop    ss
  40be04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be05:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40be07:	mov    bh,0x19
  40be09:	outs   dx,DWORD PTR ds:[esi]
  40be0a:	scas   eax,DWORD PTR es:[edi]
  40be0b:	bound  eax,QWORD PTR [eax-0x4c]
  40be0e:	adc    BYTE PTR [esi+0x4122dff3],dh
  40be14:	dec    edi
  40be15:	mov    BYTE PTR [edx+0x7864ba2c],dh
  40be1b:	mov    esi,0x792402dd
  40be20:	call   0x832a7236
  40be25:	ins    DWORD PTR es:[edi],dx
  40be26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be27:	jmp    0xe658c9fb
  40be2c:	push   ebx
  40be2d:	sub    DWORD PTR [ecx-0xd],ebx
  40be30:	pop    ebp
  40be31:	xchg   DWORD PTR [esp+ecx*8-0x540240c2],ebp
  40be38:	and    esi,DWORD PTR [edi-0x17]
  40be3b:	xlat   BYTE PTR ds:[ebx]
  40be3c:	add    BYTE PTR ds:0xe43cda23,dh
  40be42:	pop    eax
  40be43:	pop    eax
  40be44:	jb     0x40be28
  40be46:	mov    BYTE PTR [ebx-0x5c],bh
  40be49:	mov    ebp,0x63c64885
  40be4e:	jbe    0x40be98
  40be50:	retf   
  40be51:	loopne 0x40bdd8
  40be53:	xchg   esi,eax
  40be54:	repnz adc esp,DWORD PTR [ecx]
  40be57:	push   es
  40be58:	sbb    ah,dh
  40be5a:	rcr    DWORD PTR [edi+0x4459ac66],1
  40be60:	hlt    
  40be61:	cmp    DWORD PTR [eax+0x46b0da1c],eax
  40be67:	dec    esp
  40be68:	jge    0x40be9a
  40be6a:	jmp    0x40bec2
  40be6c:	addr16 inc ebp
  40be6e:	sar    BYTE PTR [esp+ebx*4],cl
  40be71:	pop    esi
  40be72:	jmp    0x9dfb:0xba051f53
  40be79:	ja     0x40be55
  40be7b:	push   ecx
  40be7c:	cmp    al,cl
  40be7e:	mov    edi,0xc5b19c0
  40be83:	push   eax
  40be84:	cld    
  40be85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be86:	stc    
  40be87:	or     eax,0x6aa64e86
  40be8c:	fsubr  st(5),st
  40be8e:	adc    ah,dh
  40be90:	mov    dl,BYTE PTR [edx-0x63]
  40be93:	sbb    al,al
  40be95:	dec    ecx
  40be96:	repnz outs dx,BYTE PTR ds:[esi]
  40be98:	inc    eax
  40be99:	test   BYTE PTR [ebx],ch
  40be9b:	ins    BYTE PTR es:[edi],dx
  40be9c:	lods   al,BYTE PTR ds:[esi]
  40be9d:	add    BYTE PTR [eax+0x1ccca5d2],bl
  40bea3:	xchg   ebx,eax
  40bea4:	hlt    
  40bea5:	stos   DWORD PTR es:[edi],eax
  40bea6:	sahf   
  40bea7:	add    al,BYTE PTR [edi-0x6261be30]
  40bead:	cmp    eax,0xe3465f73
  40beb2:	mov    edx,0x634cd80f
  40beb7:	cmp    BYTE PTR [eax-0x22],ah
  40beba:	cmp    esp,DWORD PTR [ebx]
  40bebc:	xchg   DWORD PTR [ebx],ebp
  40bebe:	in     eax,dx
  40bebf:	xchg   ebx,eax
  40bec0:	ret    0xef79
  40bec3:	adc    ch,BYTE PTR [ebx]
  40bec5:	shr    DWORD PTR [ecx+0x6d],0x40
  40bec9:	sub    al,0xb4
  40becb:	add    al,dl
  40becd:	jb     0x40be59
  40becf:	bound  ecx,QWORD PTR [esi*8+0x4dfc5a60]
  40bed6:	repz shl BYTE PTR [edx-0x536236e9],0xff
  40bede:	mov    ss,ecx
  40bee0:	push   ss
  40bee1:	and    DWORD PTR [ecx],esp
  40bee3:	fisubr WORD PTR [edi]
  40bee5:	xor    eax,0xe19b2f8
  40beea:	mov    esi,0xf1fb4c57
  40beef:	jg     0x40bee3
  40bef1:	retf   
  40bef2:	mov    esi,0x9586f9ba
  40bef7:	mov    cs:0x5ef0d5cf,al
  40befd:	je     0x40be9d
  40beff:	pop    eax
  40bf00:	ret    
  40bf01:	inc    ebx
  40bf02:	test   al,0x6e
  40bf04:	jns    0x40bf27
  40bf06:	bts    DWORD PTR [eax],ebp
  40bf09:	dec    esp
  40bf0a:	scas   eax,DWORD PTR es:[edi]
  40bf0b:	jae    0x40be94
  40bf0d:	mov    al,0x12
  40bf0f:	jmp    0x802028d8
  40bf14:	jae    0x40bed5
  40bf16:	or     ebp,DWORD PTR [eax-0x79]
  40bf19:	rol    dl,0x57
  40bf1c:	(bad)  
  40bf1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf1f:	scas   eax,DWORD PTR es:[edi]
  40bf20:	inc    edi
  40bf21:	pop    esi
  40bf22:	mov    dh,0x93
  40bf24:	cmp    dl,BYTE PTR [ecx-0x70a1daa2]
  40bf2a:	sub    DWORD PTR [eax+eax*2-0x4128906f],ecx
  40bf31:	add    BYTE PTR [eax],bh
  40bf33:	ret    0x3bfd
  40bf36:	jbe    0x40bf5e
  40bf38:	lods   eax,DWORD PTR ds:[esi]
  40bf39:	mov    ecx,0x6deacf66
  40bf3e:	psadbw mm0,QWORD PTR [edi+0x5d7ffe80]
  40bf45:	call   FWORD PTR [ecx]
  40bf47:	gs leave 
  40bf49:	pop    edx
  40bf4a:	add    al,0xcf
  40bf4c:	jne    0x40bf4d
  40bf4e:	mov    WORD PTR [edi-0x29],?
  40bf51:	mov    esi,ebp
  40bf53:	icebp  
  40bf54:	fldcw  WORD PTR [ebx-0x6c2b7a78]
  40bf5a:	je     0x40bfda
  40bf5c:	test   al,0xac
  40bf5e:	dec    ebp
  40bf5f:	enter  0x3da3,0x5
  40bf63:	jae    0x40bf3b
  40bf65:	iret   
  40bf66:	mov    edi,0xd2e71a1c
  40bf6b:	add    DWORD PTR [ebp+0x2c8681e2],0xc905b587
  40bf75:	ret    0x30fa
  40bf78:	test   al,0xef
  40bf7a:	ins    DWORD PTR es:[edi],dx
  40bf7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7c:	or     cl,BYTE PTR [ebx+0x16]
  40bf7f:	int3   
  40bf80:	adc    al,0xbd
  40bf82:	les    esi,FWORD PTR [ecx+0x5f]
  40bf85:	in     eax,0x97
  40bf87:	stos   BYTE PTR es:[edi],al
  40bf88:	leave  
  40bf89:	out    0x7b,eax
  40bf8b:	ss mov esi,0x9853ea6d
  40bf91:	sbb    esp,DWORD PTR [ecx-0x48d71e7d]
  40bf97:	push   edx
  40bf98:	jmp    0xe32b:0xfbbb6b61
  40bf9f:	inc    ebp
  40bfa0:	loop   0x40bfb8
  40bfa2:	add    DWORD PTR [esi],esp
  40bfa4:	test   eax,0x54256c8e
  40bfa9:	jl     0x40bff5
  40bfab:	dec    esp
  40bfac:	(bad)  
  40bfae:	mov    WORD PTR [esi+0x48],?
  40bfb1:	popf   
  40bfb2:	pusha  
  40bfb3:	ret    0x44a9
  40bfb6:	inc    edi
  40bfb7:	icebp  
  40bfb8:	pop    edi
  40bfb9:	fdivr  DWORD PTR [ecx-0xe88c3bc]
  40bfbf:	inc    esp
  40bfc0:	cmp    DWORD PTR [ebx+0x6ce188b1],esi
  40bfc6:	in     eax,dx
  40bfc7:	adc    DWORD PTR [edi-0x6de50786],ebp
  40bfcd:	xchg   BYTE PTR [edi],ah
  40bfcf:	dec    edi
  40bfd0:	sbb    eax,0x823ece90
  40bfd5:	rcl    BYTE PTR [esp+edx*4+0x1b],cl
  40bfd9:	xor    ah,BYTE PTR [esi+edx*8]
  40bfdc:	fmul   st(3),st
  40bfde:	je     0x40c038
  40bfe0:	stc    
  40bfe1:	push   cs
  40bfe2:	inc    eax
  40bfe3:	test   al,0x2
  40bfe5:	pop    esp
  40bfe6:	jae    0x40bf9d
  40bfe8:	push   cs
  40bfe9:	push   0x43
  40bfeb:	mov    eax,0x305167c2
  40bff0:	or     bh,bl
  40bff2:	scas   al,BYTE PTR es:[edi]
  40bff3:	pop    ds
  40bff4:	mov    ch,0x87
  40bff6:	dec    edx
  40bff7:	or     BYTE PTR [edx],bl
  40bff9:	retf   0x4b04
  40bffc:	or     al,0x18
  40bffe:	jbe    0x40c00e
  40c000:	or     DWORD PTR [eax],ecx
  40c002:	call   0x56f1:0xef1ca192
  40c009:	jnp    0x40bf95
  40c00b:	(bad)  
  40c00c:	pop    ds
  40c00d:	jns    0x40c04e
  40c00f:	inc    esi
  40c010:	jg     0x40c038
  40c012:	fiadd  WORD PTR [edi+0x16]
  40c015:	inc    ebx
  40c016:	in     al,0xaa
  40c018:	cmp    esi,DWORD PTR [ecx+0x57f5dfed]
  40c01e:	test   eax,0xdec18cbf
  40c023:	push   0x2b
  40c025:	adc    dl,BYTE PTR [esi-0x54458320]
  40c02b:	dec    ebp
  40c02c:	jne    0x40c02a
  40c02e:	cmc    
  40c02f:	add    DWORD PTR [ebx+0x3b11e3bd],0x19c02083
  40c039:	ret    
  40c03a:	push   ss
  40c03b:	js     0x40bfc4
  40c03d:	enter  0x2389,0xb
  40c041:	arpl   di,ax
  40c043:	retf   0x5354
  40c046:	outs   dx,DWORD PTR ds:[esi]
  40c047:	inc    edx
  40c048:	ror    ecx,0xd4
  40c04b:	xchg   ebx,eax
  40c04c:	xor    al,0x39
  40c04e:	adc    ebx,DWORD PTR [edx]
  40c050:	lea    edx,fs:[ecx-0x2f]
  40c054:	mov    ebp,esp
  40c056:	mov    ebp,0xd86c2b1c
  40c05b:	ins    BYTE PTR es:[edi],dx
  40c05c:	inc    ebx
  40c05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c05e:	inc    ebx
  40c05f:	out    dx,eax
  40c060:	js     0x40bff1
  40c062:	lock js 0x40c0d8
  40c065:	dec    ebp
  40c066:	push   ds
  40c067:	mov    ebx,0xf8b69c3a
  40c06c:	jge    0x40c079
  40c06e:	jno    0x40c056
  40c070:	aaa    
  40c071:	or     dh,bh
  40c073:	or     al,0x65
  40c075:	or     DWORD PTR [ecx-0x4afbbf6a],eax
  40c07b:	lds    eax,FWORD PTR [edi]
  40c07d:	psubsw mm4,mm2
  40c080:	push   ecx
  40c081:	push   ebx
  40c082:	mov    ebp,0x3312d178
  40c087:	pop    edx
  40c088:	jno    0x40c09d
  40c08a:	les    eax,FWORD PTR [ebx*1-0x2e9e893a]
  40c091:	imul   ecx,DWORD PTR [eax+0x7f26ec22],0x57fe56de
  40c09b:	pop    edx
  40c09c:	sub    ebp,edi
  40c09e:	les    ebp,FWORD PTR [ecx+0x56]
  40c0a1:	jecxz  0x40c104
  40c0a3:	adc    BYTE PTR [eax],dl
  40c0a5:	les    ebx,FWORD PTR [edi-0x574b5baa]
  40c0ab:	icebp  
  40c0ac:	std    
  40c0ad:	in     eax,0x45
  40c0af:	sbb    ebx,DWORD PTR [ebx+ebp*1+0x17da0507]
  40c0b6:	mov    ch,0x7f
  40c0b8:	inc    esi
  40c0b9:	mov    es,WORD PTR [edi-0x2ce8e9b1]
  40c0bf:	add    DWORD PTR [eax],edx
  40c0c1:	xchg   ecx,eax
  40c0c2:	jne    0x40c108
  40c0c4:	push   ecx
  40c0c5:	dec    edi
  40c0c6:	scas   eax,DWORD PTR es:[edi]
  40c0c7:	jge    0x40c0b9
  40c0c9:	xor    cl,bh
  40c0cb:	sbb    bl,BYTE PTR [esi]
  40c0cd:	(bad)  
  40c0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d0:	std    
  40c0d1:	cmp    dl,0x1f
  40c0d4:	clc    
  40c0d5:	mov    ah,BYTE PTR [esi-0x24]
  40c0d8:	lods   al,BYTE PTR ds:[esi]
  40c0d9:	aam    0x1
  40c0db:	jl     0x40c11e
  40c0dd:	mov    ebp,0xb1bb61b8
  40c0e2:	mov    cs,ebp
  40c0e4:	push   cs
  40c0e5:	cmp    BYTE PTR [esi],cl
  40c0e7:	in     al,dx
  40c0e8:	sub    al,0x83
  40c0ea:	mov    dh,0xe0
  40c0ec:	pushf  
  40c0ed:	push   0x18c77449
  40c0f2:	cs ret 
  40c0f4:	push   ss
  40c0f5:	cmp    bl,dl
  40c0f7:	cmp    al,0x93
  40c0f9:	sub    edi,esi
  40c0fb:	jb     0x40c10d
  40c0fd:	mov    eax,0x8028a9d2
  40c102:	(bad)  
  40c104:	jbe    0x40c180
  40c106:	sti    
  40c107:	pop    esp
  40c108:	popf   
  40c109:	int    0x9b
  40c10b:	in     eax,0x92
  40c10d:	jge    0x40c0eb
  40c10f:	xchg   ebp,eax
  40c110:	push   ebp
  40c111:	jecxz  0x40c0f4
  40c113:	int3   
  40c114:	cld    
  40c115:	repz js 0x40c143
  40c118:	sub    eax,0x511b76c3
  40c11d:	(bad)  
  40c11e:	js     0x40c178
  40c120:	imul   esp,ebx,0xcaa277de
  40c126:	pusha  
  40c127:	push   es
  40c128:	fisttp WORD PTR [ebp-0x73]
  40c12b:	push   0xffffffb4
  40c12d:	push   ebp
  40c12e:	dec    eax
  40c12f:	inc    ecx
  40c130:	dec    edx
  40c131:	lods   eax,DWORD PTR ds:[esi]
  40c132:	in     al,dx
  40c133:	and    BYTE PTR [eax+0x19],dh
  40c136:	mov    bh,BYTE PTR [esi-0x6f]
  40c139:	push   ds
  40c13a:	test   cl,ah
  40c13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c13d:	jmp    0x272d:0x8338392d
  40c144:	in     eax,dx
  40c145:	int    0x79
  40c147:	adc    DWORD PTR [eax+0x5c],edx
  40c14a:	outs   dx,DWORD PTR ds:[esi]
  40c14b:	popa   
  40c14c:	outs   dx,DWORD PTR ds:[esi]
  40c14d:	in     eax,dx
  40c14e:	daa    
  40c14f:	jmp    0x6194c704
  40c154:	xchg   edi,eax
  40c155:	aaa    
  40c156:	ins    DWORD PTR es:[edi],dx
  40c157:	ret    0x67fd
  40c15a:	and    al,0xd6
  40c15c:	mov    al,ds:0x6a02e1e4
  40c161:	pop    ebp
  40c162:	arpl   di,di
  40c164:	ss push ebx
  40c166:	mov    DWORD PTR [ecx+0x4f],eax
  40c169:	and    al,0x2e
  40c16b:	mov    BYTE PTR [edi-0x50369a6c],cl
  40c171:	sbb    eax,0x16474a86
  40c176:	rcr    DWORD PTR [eax+0x1644be1c],cl
  40c17c:	xor    ah,BYTE PTR [edx+edx*2+0x4f3bef16]
  40c183:	nop
  40c184:	stos   DWORD PTR es:[edi],eax
  40c185:	aam    0x7
  40c187:	inc    edi
  40c188:	inc    edi
  40c189:	mov    ds:0x50c7da37,eax
  40c18e:	jmp    0x40c16b
  40c190:	adc    al,0xa3
  40c192:	pop    ds
  40c193:	das    
  40c194:	test   al,0xd9
  40c196:	mov    ds:0x3daf6b68,al
  40c19b:	loop   0x40c219
  40c19d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c19e:	xchg   DWORD PTR [eax-0x47],ebp
  40c1a1:	aaa    
  40c1a2:	test   al,0x88
  40c1a4:	xor    edx,DWORD PTR fs:[ebp+0x30950b83]
  40c1ab:	es pop eax
  40c1ad:	mov    ebp,0x605b106
  40c1b2:	retf   0xf497
  40c1b5:	rcr    DWORD PTR [ebp+0x7e],cl
  40c1b8:	pop    es
  40c1b9:	cli    
  40c1ba:	aam    0xd2
  40c1bc:	cmc    
  40c1bd:	lahf   
  40c1be:	(bad)  
  40c1bf:	pop    ebp
  40c1c0:	imul   BYTE PTR ds:0x5e0ea1fb
  40c1c6:	pavgw  mm1,mm1
  40c1c9:	test   al,0xdd
  40c1cb:	pop    esi
  40c1cc:	pop    esi
  40c1cd:	xor    eax,0x44b02e9
  40c1d2:	xlat   BYTE PTR ds:[ebx]
  40c1d3:	enter  0xfe7,0x1a
  40c1d7:	call   0xf93be746
  40c1dc:	sub    DWORD PTR [esp+edx*1],0xffffffb2
  40c1e0:	mov    WORD PTR [esi+0x5a],cs
  40c1e3:	jno    0x40c251
  40c1e5:	xor    BYTE PTR [edi+0x1b],cl
  40c1e8:	jle    0x40c1b9
  40c1ea:	adc    DWORD PTR [edi+0x53],edx
  40c1ed:	pop    es
  40c1ee:	sbb    BYTE PTR [eax],ah
  40c1f0:	xor    dl,BYTE PTR [edx+eiz*2+0x38]
  40c1f4:	push   eax
  40c1f5:	jl     0x40c272
  40c1f7:	inc    ebp
  40c1f8:	mov    esi,esi
  40c1fa:	aam    0x5a
  40c1fc:	mov    cl,0xf0
  40c1fe:	ins    DWORD PTR es:[edi],dx
  40c1ff:	jne    0x40c18b
  40c201:	fwait
  40c202:	and    al,BYTE PTR [ecx-0x14]
  40c205:	mov    eax,ds:0x5eb9bdf2
  40c20a:	xchg   ebp,eax
  40c20b:	test   esi,eax
  40c20d:	int    0xc6
  40c20f:	push   esi
  40c210:	dec    eax
  40c211:	push   0xffffffc5
  40c213:	lods   eax,DWORD PTR ds:[esi]
  40c214:	or     al,0xcf
  40c216:	fdiv   DWORD PTR [edi+eiz*8-0x29]
  40c21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c21c:	setl   BYTE PTR [edi-0x5a]
  40c220:	dec    edi
  40c221:	popf   
  40c222:	daa    
  40c223:	repnz hlt 
  40c225:	add    al,0xfc
  40c227:	mov    WORD PTR [ebx+0x25a5a297],gs
  40c22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c22e:	int3   
  40c22f:	sub    DWORD PTR [eax+0x2c21cced],ebp
  40c235:	in     eax,0xf
  40c237:	aam    0xf
  40c239:	mov    bh,0xe7
  40c23b:	aam    0x52
  40c23d:	jge    0x40c1ef
  40c23f:	rol    BYTE PTR [esi],1
  40c241:	sub    al,0xba
  40c243:	xchg   ebp,eax
  40c244:	lea    ebx,[eax+0x5a0d048c]
  40c24a:	inc    ebx
  40c24b:	mov    WORD PTR [edx-0x30],gs
  40c24e:	in     al,dx
  40c24f:	cli    
  40c250:	cwde   
  40c251:	aas    
  40c252:	jl     0x40c2a7
  40c254:	iret   
  40c255:	pop    edi
  40c256:	dec    esp
  40c257:	rol    DWORD PTR [esp+esi*1+0x4f673fae],cl
  40c25e:	outs   dx,BYTE PTR ds:[esi]
  40c25f:	loopne 0x40c252
  40c261:	dec    esi
  40c262:	in     eax,0xb1
  40c264:	scas   al,BYTE PTR es:[edi]
  40c265:	mov    ecx,0xaa7a4a1a
  40c26a:	mov    esi,0x33390ac6
  40c26f:	shr    BYTE PTR [eax],cl
  40c271:	jne    0x40c27a
  40c273:	cmp    BYTE PTR [edi-0x1f],bl
  40c276:	mov    ds:0xaf9e52db,al
  40c27b:	outs   dx,BYTE PTR ds:[esi]
  40c27c:	aas    
  40c27d:	jo     0x40c22e
  40c27f:	addr16 xchg edx,eax
  40c281:	(bad)  
  40c282:	je     0x40c2b1
  40c284:	pop    esi
  40c285:	pop    edx
  40c286:	sub    bh,dh
  40c288:	repz cmp DWORD PTR [edi],ebx
  40c28b:	out    dx,eax
  40c28c:	jmp    0x7d129d83
  40c291:	test   DWORD PTR [edi],eax
  40c293:	test   al,0xdd
  40c295:	fbstp  TBYTE PTR [edi]
  40c297:	or     DWORD PTR [edi+0x44b297b9],ebp
  40c29d:	mov    ebp,0x9a6f13f8
  40c2a2:	nop
  40c2a3:	dec    ebx
  40c2a4:	cmc    
  40c2a5:	sbb    ecx,DWORD PTR [esi]
  40c2a7:	cwde   
  40c2a8:	jno    0x40c2bf
  40c2aa:	scas   al,BYTE PTR es:[edi]
  40c2ab:	dec    ecx
  40c2ac:	jae    0x40c2ff
  40c2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2af:	mov    dl,0x4b
  40c2b1:	stc    
  40c2b2:	jno    0x40c31a
  40c2b4:	pop    eax
  40c2b5:	sbb    eax,0xaa26483e
  40c2ba:	xchg   DWORD PTR [ecx],edi
  40c2bc:	add    al,0x2c
  40c2be:	xor    BYTE PTR [edi+0x6b],dl
  40c2c1:	mov    eax,ds:0xadde92a1
  40c2c6:	sar    BYTE PTR [ecx+0x573d8a2e],cl
  40c2cc:	lods   al,BYTE PTR ds:[esi]
  40c2cd:	sbb    DWORD PTR [ebp-0xf],0xffffffe1
  40c2d1:	xor    al,0x1d
  40c2d3:	jae    0x40c2b2
  40c2d5:	in     al,dx
  40c2d6:	jl     0x40c321
  40c2d8:	cli    
  40c2d9:	jecxz  0x40c308
  40c2db:	cld    
  40c2dc:	or     ah,BYTE PTR [ecx+0x1bbde268]
  40c2e2:	mov    eax,0x8c7a2ad7
  40c2e7:	test   bl,ch
  40c2e9:	sub    eax,0x2d33dd71
  40c2ee:	and    BYTE PTR [edi+0x53],0x66
  40c2f2:	sbb    eax,0xd07c5ece
  40c2f7:	dec    ecx
  40c2f8:	shr    BYTE PTR [edi+0xa],cl
  40c2fb:	xchg   edi,eax
  40c2fc:	adc    eax,0xcfd2c2de
  40c301:	jge    0x40c320
  40c303:	cmp    DWORD PTR [esi+0x24],0x5f
  40c307:	loope  0x40c360
  40c309:	retf   
  40c30a:	inc    edx
  40c30b:	mov    dh,bh
  40c30d:	mov    dh,0x14
  40c30f:	loopne 0x40c2a2
  40c311:	data16 mov ss,WORD PTR ds:0x79757316
  40c318:	jle    0x40c33e
  40c31a:	inc    eax
  40c31b:	push   esi
  40c31c:	out    0x32,eax
  40c31e:	lods   al,BYTE PTR ds:[esi]
  40c31f:	mov    ecx,0xe9ce9706
  40c324:	mov    ds:0xd823781c,eax
  40c329:	lahf   
  40c32a:	mov    ds:0x6fd9bb4,eax
  40c32f:	ins    BYTE PTR es:[edi],dx
  40c330:	mov    dl,BYTE PTR ds:0xe4d21a27
  40c336:	ds xchg edi,eax
  40c338:	sbb    ah,BYTE PTR [edx]
  40c33a:	push   ss
  40c33b:	adc    ch,ch
  40c33d:	idiv   DWORD PTR [edi+esi*2]
  40c340:	cmc    
  40c341:	push   eax
  40c342:	clc    
  40c343:	dec    esp
  40c344:	add    dh,ch
  40c346:	xchg   ecx,eax
  40c347:	add    dl,ah
  40c349:	popa   
  40c34a:	xlat   BYTE PTR ds:[ebx]
  40c34b:	mov    ecx,0x5a8348a6
  40c350:	mov    BYTE PTR [ebx+edx*8-0xe],dh
  40c354:	adc    edi,DWORD PTR [ebx+0x7d67e0f3]
  40c35a:	cmp    esp,ebp
  40c35c:	rol    esi,cl
  40c35e:	push   ss
  40c35f:	in     eax,dx
  40c360:	pop    ebp
  40c361:	sub    DWORD PTR [ecx+0x18],esi
  40c364:	xchg   ebp,eax
  40c365:	out    0x80,al
  40c367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c368:	rcr    DWORD PTR [ebx-0x30],0x48
  40c36c:	push   esi
  40c36d:	dec    ebp
  40c36e:	add    BYTE PTR [ebp-0x73],bl
  40c371:	sahf   
  40c372:	std    
  40c373:	xchg   ebx,eax
  40c374:	dec    esp
  40c375:	in     eax,dx
  40c376:	daa    
  40c377:	bound  edi,QWORD PTR [ebp-0x4a]
  40c37a:	adc    esi,DWORD PTR [ebp+0x1696a4b7]
  40c380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c381:	dec    edi
  40c382:	jecxz  0x40c368
  40c384:	mov    al,0x74
  40c386:	dec    edi
  40c387:	icebp  
  40c388:	jns    0x40c39f
  40c38a:	xchg   edi,eax
  40c38b:	shl    BYTE PTR [esi-0x67ba24fb],1
  40c391:	cmp    ecx,DWORD PTR [ebx-0x77386174]
  40c397:	dec    esi
  40c398:	and    al,0x20
  40c39a:	mov    esi,0x4fb047c8
  40c39f:	shl    DWORD PTR [esi+0x4baf25e4],cl
  40c3a5:	stos   DWORD PTR es:[edi],eax
  40c3a6:	xchg   edx,eax
  40c3a7:	repz push ecx
  40c3a9:	repz xor esp,DWORD PTR [esi]
  40c3ac:	fcom   DWORD PTR [ebp+0x4b37ae8b]
  40c3b2:	xchg   esi,eax
  40c3b3:	scas   eax,DWORD PTR es:[edi]
  40c3b4:	cmp    al,0x19
  40c3b6:	leave  
  40c3b7:	sub    BYTE PTR [ebp+0x57cb7665],dh
  40c3bd:	push   esp
  40c3be:	sbb    al,0xa7
  40c3c0:	lods   al,BYTE PTR ds:[esi]
  40c3c1:	in     eax,dx
  40c3c2:	mov    eax,0xd13266e
  40c3c7:	adc    al,0x36
  40c3c9:	in     eax,0x54
  40c3cb:	les    edi,FWORD PTR [ebp+0x4b]
  40c3ce:	jmp    0xc7a9:0xdf2ebc76
  40c3d5:	sub    al,BYTE PTR [edi-0x829de59]
  40c3db:	push   0x1e97832d
  40c3e0:	rcl    DWORD PTR [edi-0x3c],1
  40c3e3:	push   ebx
  40c3e4:	lds    ecx,FWORD PTR [ebx+0x144145d7]
  40c3ea:	pop    ds
  40c3eb:	ss in  al,dx
  40c3ed:	jo     0x40c370
  40c3ef:	popf   
  40c3f0:	or     BYTE PTR [esi],dl
  40c3f2:	cmp    eax,0x1a47b286
  40c3f8:	shl    DWORD PTR [ebx-0x24],1
  40c3fb:	dec    BYTE PTR [ebx+0x25b151df]
  40c401:	adc    DWORD PTR [ecx-0x2954fda5],esp
  40c407:	jnp    0x40c3ad
  40c409:	stc    
  40c40a:	pop    es
  40c40b:	aas    
  40c40c:	adc    esi,DWORD PTR [esi-0x6b]
  40c40f:	pushf  
  40c410:	xchg   edx,eax
  40c411:	jp     0x40c3f1
  40c413:	sti    
  40c414:	fisttp DWORD PTR [ecx-0x70879f2e]
  40c41a:	mov    ebx,0x9966990
  40c41f:	inc    esp
  40c420:	scas   al,BYTE PTR es:[edi]
  40c421:	adc    al,0x92
  40c423:	shld   DWORD PTR [esi+0x41],edi,0xd5
  40c428:	jno    0x40c3f4
  40c42a:	jae    0x40c3bf
  40c42c:	inc    edx
  40c42d:	xor    eax,DWORD PTR [ecx+ebp*4]
  40c430:	adc    al,0x3e
  40c432:	push   edi
  40c433:	in     al,dx
  40c434:	lods   eax,DWORD PTR ds:[esi]
  40c435:	out    dx,eax
  40c436:	push   edi
  40c437:	adc    BYTE PTR [eax-0x4a],dl
  40c43a:	sbb    eax,DWORD PTR [ebp-0x63c2a35]
  40c440:	push   esi
  40c441:	(bad)  
  40c442:	cmp    al,0x54
  40c444:	inc    eax
  40c445:	hlt    
  40c446:	add    ch,BYTE PTR [ecx+0x9]
  40c449:	(bad)  
  40c44a:	paddsb mm6,QWORD PTR [edx-0x1f97d5d7]
  40c451:	int3   
  40c452:	shl    DWORD PTR [esi-0x37937eb3],cl
  40c458:	jle    0x40c404
  40c45a:	push   esp
  40c45b:	shl    DWORD PTR [ecx-0x7134961c],0xe8
  40c462:	mov    ch,0xeb
  40c464:	ror    DWORD PTR [esi+esi*2+0x34303c10],cl
  40c46b:	mov    BYTE PTR [ebp+0x4d],dh
  40c46e:	scas   eax,DWORD PTR es:[edi]
  40c46f:	into   
  40c470:	popf   
  40c471:	scas   eax,DWORD PTR es:[edi]
  40c472:	pop    edi
  40c473:	push   ds
  40c474:	popf   
  40c475:	ins    BYTE PTR es:[edi],dx
  40c476:	push   edi
  40c477:	out    dx,eax
  40c478:	sbb    DWORD PTR [ecx],eax
  40c47a:	test   al,0xb0
  40c47c:	dec    ebp
  40c47d:	popf   
  40c47e:	std    
  40c47f:	loop   0x40c414
  40c481:	fimul  DWORD PTR [esi+0x48547003]
  40c487:	add    bl,BYTE PTR [edi+eax*1-0x2af7faf3]
  40c48e:	ret    
  40c48f:	or     cl,BYTE PTR [edi]
  40c491:	js     0x40c457
  40c493:	fidivr DWORD PTR [edx*4+0x7836f377]
  40c49a:	shl    ecx,1
  40c49c:	stos   DWORD PTR es:[edi],eax
  40c49d:	je     0x40c431
  40c49f:	es jne 0x40c4e0
  40c4a2:	loopne 0x40c497
  40c4a4:	pop    ss
  40c4a5:	arpl   WORD PTR [edx+0x6a],ax
  40c4a8:	jge    0x40c487
  40c4aa:	add    ebp,ebx
  40c4ac:	rcl    BYTE PTR [esi-0x80],cl
  40c4af:	pop    ds
  40c4b0:	jg     0x40c521
  40c4b2:	push   0xffffffa8
  40c4b4:	stos   DWORD PTR es:[edi],eax
  40c4b5:	retf   0xeb8d
  40c4b8:	pop    ecx
  40c4b9:	sbb    edi,edx
  40c4bb:	call   0x69e9:0x34bc17e3
  40c4c2:	outs   dx,BYTE PTR ds:[esi]
  40c4c3:	push   eax
  40c4c4:	mov    al,0x18
  40c4c6:	addr16 mov ch,0xe7
  40c4c9:	loope  0x40c45b
  40c4cb:	ret    
  40c4cc:	mov    eax,ds:0xd100fa73
  40c4d1:	cmp    eax,0xbad0eaf6
  40c4d6:	pop    es
  40c4d7:	xor    bl,al
  40c4d9:	cmp    DWORD PTR [esi+esi*8-0x7b],ecx
  40c4dd:	push   0xffffffdf
  40c4df:	nop
  40c4e0:	mov    eax,0xe8d9eaa8
  40c4e5:	adc    al,0x45
  40c4e7:	fwait
  40c4e8:	mov    ?,WORD PTR [edx+eax*1-0x55]
  40c4ec:	repz push 0xffffffa4
  40c4ef:	push   es
  40c4f0:	lods   al,BYTE PTR ds:[esi]
  40c4f1:	js     0x40c53d
  40c4f3:	scas   al,BYTE PTR es:[edi]
  40c4f4:	out    0x47,al
  40c4f6:	inc    edx
  40c4f7:	es inc edi
  40c4f9:	adc    ecx,DWORD PTR fs:[esi-0x4]
  40c4fd:	in     eax,dx
  40c4fe:	imul   cl
  40c500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c501:	(bad)  
  40c502:	sub    eax,0x58794825
  40c507:	imul   edx,DWORD PTR ds:0x5afb1684,0xa74996ef
  40c511:	dec    ebx
  40c512:	stc    
  40c513:	xchg   esp,ecx
  40c515:	xor    eax,0xe92cbb53
  40c51a:	imul   esi,DWORD PTR [esp+edi*1],0x15
  40c51e:	xor    ah,BYTE PTR [esi+0x6a]
  40c521:	jmp    0x92ae8069
  40c526:	lfs    ecx,FWORD PTR ds:0x3567e7e1
  40c52d:	and    DWORD PTR [esi-0x13],eax
  40c530:	fs retf 0xf6f8
  40c534:	mov    ds:0x27f8918b,eax
  40c539:	in     al,dx
  40c53a:	jg     0x40c54a
  40c53c:	mov    ds:0xfedc9a6f,al
  40c541:	xchg   ebx,eax
  40c542:	xchg   edx,eax
  40c543:	push   ebp
  40c544:	jns    0x40c4ef
  40c546:	test   eax,0x82f8e487
  40c54b:	jns    0x40c5bb
  40c54d:	inc    edx
  40c54e:	pop    ebp
  40c54f:	xchg   BYTE PTR [ecx+0x7bd46455],al
  40c555:	mov    ss,ebx
  40c557:	popa   
  40c558:	push   ebp
  40c559:	jecxz  0x40c55c
  40c55b:	iret   
  40c55c:	adc    cl,BYTE PTR [esi+edx*4-0x4fcde13b]
  40c563:	jmp    0x1ef4:0xcb708334
  40c56a:	sub    eax,0xe849bf29
  40c56f:	add    esi,DWORD PTR [edx-0x18]
  40c572:	or     dh,0xc8
  40c575:	sub    DWORD PTR [edx],eax
  40c577:	loope  0x40c500
  40c579:	and    cl,BYTE PTR [eax+ecx*2-0x15c3532d]
  40c580:	push   ecx
  40c581:	push   ebp
  40c582:	clc    
  40c583:	push   esp
  40c584:	scas   eax,DWORD PTR es:[edi]
  40c585:	cmp    bl,BYTE PTR [edi-0x41]
  40c588:	mov    cs,WORD PTR es:[ebx]
  40c58b:	or     bl,cl
  40c58d:	call   0x7dc9fd95
  40c592:	clc    
  40c593:	mov    eax,DWORD PTR [ebp+0xc]
  40c596:	mov    edi,DWORD PTR [ebp+0xc]
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xc54b873c
  40c65b:	xchg   esp,eax
  40c65c:	fistp  DWORD PTR [edx+eiz*4+0x4e7c7ce0]
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	sub    ah,ch
  40c668:	data16 loope 0x40c693
  40c66b:	dec    eax
  40c66c:	test   eax,0x33c65f39
  40c671:	pop    ebp
  40c672:	mov    WORD PTR [eax-0x36ee4290],ds
  40c678:	cmp    eax,0x7ff2c2b2
  40c67d:	sub    ebx,0x790a9545
  40c683:	mov    ecx,0xd8e482bc
  40c688:	aam    0xa1
  40c68a:	cli    
  40c68b:	jne    0x40c6e3
  40c68d:	adc    bh,bl
  40c68f:	dec    ebp
  40c690:	daa    
  40c691:	lds    esi,FWORD PTR [edx-0x51]
  40c694:	jns    0x40c6aa
  40c696:	cmp    DWORD PTR [edx],edx
  40c698:	xor    DWORD PTR [edx+edx*2-0x754bc2ea],esp
  40c69f:	add    eax,0xf27201de
  40c6a4:	adc    DWORD PTR [ecx-0x73d9c07b],esp
  40c6aa:	jmp    0x40c67e
  40c6ac:	bnd je 0x40c701
  40c6af:	lods   eax,DWORD PTR ds:[esi]
  40c6b0:	cmp    eax,0xd200997c
  40c6b5:	mov    edx,0x12ea4e49
  40c6ba:	cmp    eax,0x470f413f
  40c6bf:	jmp    0x40c6b3
  40c6c1:	fxam   
  40c6c3:	jae    0x40c6d0
  40c6c5:	fisttp QWORD PTR [edi+0x47d0c101]
  40c6cb:	sub    DWORD PTR [ebp+0x57],ebx
  40c6ce:	pop    eax
  40c6cf:	push   edx
  40c6d0:	pop    ss
  40c6d1:	hlt    
  40c6d2:	cwde   
  40c6d3:	xchg   edx,eax
  40c6d4:	fwait
  40c6d5:	pop    esi
  40c6d6:	xchg   DWORD PTR [edi],ebp
  40c6d8:	clc    
  40c6d9:	inc    ebp
  40c6da:	(bad)  [esi+0x1b]
  40c6dd:	addr16 sbb eax,0xb2136eb6
  40c6e3:	popa   
  40c6e4:	ins    DWORD PTR es:[edi],dx
  40c6e5:	out    dx,eax
  40c6e6:	mov    fs,edx
  40c6e8:	or     bl,BYTE PTR [esi-0x3e]
  40c6eb:	shl    DWORD PTR [ecx-0x49],1
  40c6ee:	mov    esp,0xeec3276f
  40c6f3:	sbb    esp,DWORD PTR [edi+0x35]
  40c6f6:	push   eax
  40c6f7:	and    BYTE PTR [edx],dl
  40c6f9:	int    0x74
  40c6fb:	jg     0x40c6eb
  40c6fd:	idiv   DWORD PTR [edi-0x53]
  40c700:	leave  
  40c701:	dec    esi
  40c702:	mov    al,0x25
  40c704:	jo     0x40c698
  40c706:	out    0x87,al
  40c708:	push   ds
  40c709:	shr    DWORD PTR [eax+0x53],cl
  40c70c:	mov    edi,0x855fced7
  40c711:	rol    eax,cl
  40c713:	xchg   edi,eax
  40c714:	mov    dh,0xbe
  40c716:	mov    bh,dl
  40c718:	popa   
  40c719:	mov    ebx,0x9ebe4ded
  40c71e:	cdq    
  40c71f:	aad    0xca
  40c721:	xor    eax,0xe74e8423
  40c726:	xchg   ebx,eax
  40c727:	nop
  40c728:	ss sub al,0x7
  40c72b:	ins    BYTE PTR es:[edi],dx
  40c72c:	jl     0x40c781
  40c72e:	popa   
  40c72f:	pop    esi
  40c730:	sbb    edi,DWORD PTR [edx-0xc]
  40c733:	or     al,0xa1
  40c735:	pushf  
  40c736:	push   0xffffffd1
  40c738:	jmp    0x6ec4:0x1d0cbee2
  40c73f:	stc    
  40c740:	xchg   BYTE PTR [edi-0x66b8afbb],bh
  40c746:	fisttp DWORD PTR [ebx]
  40c748:	adc    eax,0xeb832262
  40c74d:	jmp    0xcdba:0x90b924a6
  40c754:	pop    eax
  40c755:	adc    bl,BYTE PTR [edi+0x4ac60053]
  40c75b:	popf   
  40c75c:	test   ebp,edx
  40c75e:	mul    edx
  40c760:	add    eax,0x5f27ea1f
  40c765:	dec    eax
  40c766:	out    0xde,al
  40c768:	mov    bl,0x92
  40c76a:	gs enter 0xf727,0xcf
  40c76f:	jge    0x40c79b
  40c771:	dec    ebx
  40c772:	es out dx,al
  40c774:	or     al,0xcf
  40c776:	sbb    ch,BYTE PTR [ecx+0xc]
  40c779:	push   ebx
  40c77a:	in     al,0x77
  40c77c:	or     eax,DWORD PTR [ecx-0x25aeef2]
  40c782:	mov    cl,0x67
  40c784:	inc    ecx
  40c785:	ss aam 0x45
  40c788:	aad    0xc3
  40c78a:	mov    BYTE PTR [ebx-0x5c],dl
  40c78d:	sar    DWORD PTR [edi-0xf51ff42],cl
  40c793:	js     0x40c7d2
  40c795:	sub    eax,0x36ebab5b
  40c79a:	sar    DWORD PTR [ecx-0x6aea62a7],cl
  40c7a0:	xor    ch,BYTE PTR [esi-0x34]
  40c7a3:	scas   al,BYTE PTR es:[edi]
  40c7a4:	iret   
  40c7a5:	fwait
  40c7a6:	adc    edi,DWORD PTR [esi+edi*4-0x4f2c11a0]
  40c7ad:	or     DWORD PTR [ebx],esp
  40c7af:	fs into 
  40c7b1:	push   ss
  40c7b2:	mov    al,0x45
  40c7b4:	int    0xe
  40c7b6:	sbb    al,0xcc
  40c7b8:	test   al,0x8e
  40c7ba:	sub    BYTE PTR [esi],al
  40c7bc:	dec    esp
  40c7bd:	stos   BYTE PTR es:[edi],al
  40c7be:	mov    edi,DWORD PTR [edx]
  40c7c0:	mov    dl,dl
  40c7c2:	sub    BYTE PTR [eax-0x55f4b942],al
  40c7c8:	mov    esi,0x49bdc5a5
  40c7cd:	int3   
  40c7ce:	jge    0x40c7f4
  40c7d0:	xchg   ebp,eax
  40c7d1:	mov    eax,ds:0x8e5cca35
  40c7d6:	sbb    DWORD PTR [esi],ebp
  40c7d8:	xchg   ebp,eax
  40c7d9:	sub    eax,0x9fbc4b3e
  40c7de:	inc    ebp
  40c7df:	stos   BYTE PTR es:[edi],al
  40c7e0:	in     al,dx
  40c7e1:	not    DWORD PTR [edi]
  40c7e3:	mov    bh,BYTE PTR [edx-0x40de0a1e]
  40c7e9:	pop    es
  40c7ea:	push   eax
  40c7eb:	lds    esi,FWORD PTR [ebp+0x3df7a7fb]
  40c7f1:	add    cl,BYTE PTR [ecx]
  40c7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7f4:	mov    al,ds:0x95093abe
  40c7f9:	or     al,0x9a
  40c7fb:	retf   0x5177
  40c7fe:	xor    BYTE PTR [edx-0x68],bl
  40c801:	popf   
  40c802:	add    eax,ebx
  40c804:	xchg   ebx,eax
  40c805:	int3   
  40c806:	cwde   
  40c807:	ret    0xe374
  40c80a:	lods   al,BYTE PTR ds:[esi]
  40c80b:	add    cl,BYTE PTR [edi+esi*2]
  40c80e:	xchg   ebx,eax
  40c80f:	lods   al,BYTE PTR ds:[esi]
  40c810:	fwait
  40c811:	sar    BYTE PTR [esi-0x5c8afb21],0x45
  40c818:	in     al,dx
  40c819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c81a:	pop    ecx
  40c81b:	xchg   ebx,eax
  40c81c:	xor    BYTE PTR [ebx-0x3dbc1493],dh
  40c822:	push   edi
  40c823:	loopne 0x40c881
  40c825:	inc    ecx
  40c826:	xchg   edi,eax
  40c827:	out    0x35,al
  40c829:	adc    BYTE PTR [eax+0x15b3d9ea],0xaf
  40c830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c831:	fcom   QWORD PTR [edi-0x2f86b6ed]
  40c837:	sbb    ecx,0xd9f34fb9
  40c83d:	push   0xc44c7897
  40c842:	ins    DWORD PTR es:[edi],dx
  40c843:	fidiv  WORD PTR [ebp+0x12]
  40c846:	push   ds
  40c847:	(bad)  
  40c848:	retf   
  40c849:	stc    
  40c84a:	cmp    ch,BYTE PTR [esi+0x17]
  40c84d:	daa    
  40c84e:	mov    cl,0xd8
  40c850:	inc    ebp
  40c851:	fimul  WORD PTR [eax+eax*8]
  40c854:	sub    ebp,esi
  40c856:	pop    esi
  40c857:	xor    DWORD PTR [ecx+0x1a],esp
  40c85a:	lods   al,BYTE PTR ds:[esi]
  40c85b:	call   esi
  40c85d:	in     eax,dx
  40c85e:	xor    al,0xee
  40c860:	adc    BYTE PTR ds:0x844930c8,ah
  40c866:	(bad)  
  40c867:	dec    edi
  40c868:	rol    ah,0xe1
  40c86b:	fcom   QWORD PTR [ebp+0x4ebc1d42]
  40c871:	mov    ds:0x7bb91c97,eax
  40c876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c877:	ret    
  40c878:	dec    esp
  40c879:	scas   al,BYTE PTR es:[edi]
  40c87a:	in     eax,dx
  40c87b:	adc    BYTE PTR [ebx-0x34529169],dl
  40c881:	int    0x49
  40c883:	fbld   TBYTE PTR [edi+0x33ad8a93]
  40c889:	int3   
  40c88a:	adc    dl,BYTE PTR [ecx+0x78]
  40c88d:	or     BYTE PTR [ebx+0x68],0x41
  40c891:	stos   BYTE PTR es:[edi],al
  40c892:	xchg   esp,eax
  40c893:	mov    dl,0x39
  40c895:	clc    
  40c896:	cmp    ebx,ebx
  40c898:	mov    eax,0x38acdae9
  40c89d:	mov    ?,WORD PTR [esi]
  40c89f:	jmp    0x9d0b:0x14da4b8d
  40c8a6:	outs   dx,BYTE PTR ds:[esi]
  40c8a7:	dec    eax
  40c8a8:	lods   al,BYTE PTR ds:[esi]
  40c8a9:	xor    esi,ecx
  40c8ab:	xchg   edx,eax
  40c8ac:	dec    esp
  40c8ad:	ins    BYTE PTR es:[edi],dx
  40c8ae:	cmc    
  40c8af:	adc    eax,0x276909d0
  40c8b4:	add    BYTE PTR [ecx-0x7a172c8c],al
  40c8ba:	outs   dx,BYTE PTR ds:[esi]
  40c8bb:	nop
  40c8bc:	or     al,0x7f
  40c8be:	loopne 0x40c8a4
  40c8c0:	push   ebp
  40c8c1:	aaa    
  40c8c2:	push   ecx
  40c8c3:	add    DWORD PTR [edx],0xd77ad333
  40c8c9:	aam    0xb7
  40c8cb:	es sar edx,0x9e
  40c8cf:	ret    0xa22a
  40c8d2:	push   0x9d753592
  40c8d7:	mov    bl,0x99
  40c8d9:	ficomp WORD PTR ds:0x7ab934f0
  40c8df:	fsubr  DWORD PTR [ebp+eax*8+0x0]
  40c8e3:	inc    ecx
  40c8e4:	push   0x5b3e0162
  40c8e9:	or     BYTE PTR [ebx],ah
  40c8eb:	mov    cl,BYTE PTR [esi+0x73]
  40c8ee:	or     BYTE PTR [edi-0x45f648fb],al
  40c8f4:	loope  0x40c900
  40c8f6:	scas   al,BYTE PTR es:[edi]
  40c8f7:	loopne 0x40c965
  40c8f9:	sahf   
  40c8fa:	or     al,cl
  40c8fc:	push   ebx
  40c8fd:	cli    
  40c8fe:	sti    
  40c8ff:	push   ecx
  40c900:	retf   0xe003
  40c903:	inc    eax
  40c904:	push   edi
  40c905:	repz adc ebp,DWORD PTR [ecx+0x4b5bad2]
  40c90c:	fiadd  WORD PTR [edi+0x7b256398]
  40c912:	nop
  40c913:	cmp    al,0x68
  40c915:	jmp    0x4a1658a9
  40c91a:	jmp    0x40c91c
  40c91c:	in     eax,0xb
  40c91e:	mov    cl,0xe2
  40c920:	xor    al,0x91
  40c922:	icebp  
  40c923:	popa   
  40c924:	ret    
  40c925:	adc    DWORD PTR [edx+0x2a],esp
  40c928:	xor    WORD PTR [eax+edi*4+0x2be93722],bx
  40c930:	div    DWORD PTR [esi]
  40c932:	adc    edx,DWORD PTR [edi-0x2c]
  40c935:	clc    
  40c936:	(bad)  
  40c937:	ja     0x40c8d0
  40c939:	popa   
  40c93a:	cld    
  40c93b:	bound  edi,QWORD PTR [ebx]
  40c93d:	mov    BYTE PTR [ecx+0x33],dh
  40c940:	cmp    edx,DWORD PTR [edi-0x224ea4ba]
  40c946:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40c948:	and    eax,DWORD PTR [edi-0x1ec8a604]
  40c94e:	retf   
  40c94f:	adc    eax,0x60ad4bc6
  40c954:	cli    
  40c955:	ficom  DWORD PTR [ebx+0x7c0fe2cb]
  40c95b:	mov    dh,0x10
  40c95d:	icebp  
  40c95e:	xchg   edx,eax
  40c95f:	in     al,0x24
  40c961:	clc    
  40c962:	mov    dl,0x94
  40c964:	inc    ecx
  40c965:	mov    cl,0xf5
  40c967:	shr    edi,0x89
  40c96a:	sub    eax,eax
  40c96c:	push   ebp
  40c96d:	fdivr  st(4),st
  40c96f:	xor    DWORD PTR [esi],ecx
  40c971:	mov    eax,0xf1e7ed40
  40c976:	and    eax,0x6dc2a4b
  40c97b:	xor    ebx,DWORD PTR fs:[ecx-0x5]
  40c97f:	aas    
  40c980:	(bad)  
  40c982:	sahf   
  40c983:	dec    esp
  40c984:	repnz lock (bad) [edx+0x7161b26e]
  40c98c:	call   0xc540be2c
  40c991:	cli    
  40c992:	push   ds
  40c993:	lea    ecx,[ecx+0x449e46b1]
  40c999:	sub    dh,BYTE PTR [edx+ebx*2+0x7b]
  40c99d:	pop    esp
  40c99e:	jns    0x40c9da
  40c9a0:	jecxz  0x40c98f
  40c9a2:	int3   
  40c9a3:	pop    ss
  40c9a4:	fiadd  WORD PTR [eax+0x57]
  40c9a7:	pop    ebx
  40c9a8:	scas   al,BYTE PTR es:[edi]
  40c9a9:	ins    BYTE PTR es:[edi],dx
  40c9aa:	daa    
  40c9ab:	sbb    eax,0xf8f0dc1e
  40c9b0:	ja     0x40c946
  40c9b2:	inc    ebp
  40c9b3:	pop    edi
  40c9b4:	pop    esi
  40c9b5:	fnstsw WORD PTR [eax+0x4a882626]
  40c9bb:	sub    bl,bl
  40c9bd:	shl    BYTE PTR [esi-0x14],0xcd
  40c9c1:	add    BYTE PTR [eax-0x4],0x32
  40c9c5:	mov    dl,0xc2
  40c9c7:	je     0x40c9a1
  40c9c9:	sub    bh,BYTE PTR [ecx+0x70]
  40c9cc:	mov    esi,0x5ddd2813
  40c9d1:	push   0xdfdb5bf0
  40c9d6:	mov    dl,0x4a
  40c9d8:	cld    
  40c9d9:	mov    ss,WORD PTR [ecx+eiz*8+0x33077e27]
  40c9e0:	sub    BYTE PTR [ebx-0x24],al
  40c9e3:	inc    eax
  40c9e4:	mov    ebx,0xe7d68dfa
  40c9e9:	jmp    0x2180c994
  40c9ee:	(bad)  
  40c9ef:	test   eax,0xf407d474
  40c9f4:	cmp    al,0xbf
  40c9f6:	mov    ecx,edx
  40c9f8:	cwde   
  40c9f9:	clc    
  40c9fa:	add    esi,edi
  40c9fc:	(bad)  
  40c9fd:	xchg   edx,eax
  40c9fe:	lock gs icebp 
  40ca01:	ja     0x40c9b8
  40ca03:	mov    edi,DWORD PTR [edx]
  40ca05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca06:	dec    edi
  40ca07:	mov    ebx,0x78e37f9
  40ca0c:	inc    esp
  40ca0d:	xor    DWORD PTR [edx],ecx
  40ca0f:	lahf   
  40ca10:	hlt    
  40ca11:	push   esp
  40ca12:	sbb    eax,ebp
  40ca14:	aam    0xfb
  40ca16:	data16 mov cl,0xa8
  40ca19:	rcl    DWORD PTR [ecx],0x99
  40ca1c:	jo     0x40ca87
  40ca1e:	sub    DWORD PTR [eax+0x21291844],edx
  40ca24:	mov    ds:0xf15e5c34,eax
  40ca29:	loop   0x40ca78
  40ca2b:	mov    ds:0xed8f14e5,al
  40ca30:	pushf  
  40ca31:	dec    esi
  40ca32:	sbb    al,0x12
  40ca34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca35:	repz or DWORD PTR [eax-0x45],0xc60b1472
  40ca3d:	hlt    
  40ca3e:	dec    ebp
  40ca3f:	shl    ah,cl
  40ca41:	retf   0x6f36
  40ca44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca45:	xor    DWORD PTR [ecx],ecx
  40ca47:	call   0x142d20f9
  40ca4c:	test   eax,0x98187a51
  40ca51:	outs   dx,DWORD PTR ds:[esi]
  40ca52:	mov    ch,0xdb
  40ca54:	lds    ecx,FWORD PTR [esi]
  40ca56:	jg     0x40ca89
  40ca58:	dec    edx
  40ca59:	nop
  40ca5a:	sbb    BYTE PTR [edi-0x41aa7cb2],bh
  40ca60:	fldcw  WORD PTR [edx+0x3aca9d86]
  40ca66:	jns    0x40cae6
  40ca68:	dec    eax
  40ca69:	dec    edx
  40ca6a:	hlt    
  40ca6b:	icebp  
  40ca6c:	jl     0x40caed
  40ca6e:	sub    al,0x3b
  40ca70:	inc    edx
  40ca71:	rcr    DWORD PTR [ebx+0x3c9bc7c8],cl
  40ca77:	mov    ebx,0xfa14da4d
  40ca7c:	jae    0x40ca49
  40ca7e:	inc    esi
  40ca7f:	or     esp,DWORD PTR es:[edx+0x2]
  40ca83:	push   esi
  40ca84:	je     0x40ca45
  40ca86:	adc    BYTE PTR [edi-0x4f],ch
  40ca89:	scas   eax,DWORD PTR es:[edi]
  40ca8a:	in     al,0xa8
  40ca8c:	pop    edi
  40ca8d:	mov    ecx,0x3e974eb6
  40ca92:	mov    ds:0xd3bdaa4c,al
  40ca97:	loope  0x40cb0f
  40ca99:	sbb    eax,0x860a6b96
  40ca9e:	mov    ebp,0x3988e0b4
  40caa3:	in     al,dx
  40caa4:	mov    cl,BYTE PTR [eax-0x30a7727d]
  40caaa:	stos   DWORD PTR es:[edi],eax
  40caab:	daa    
  40caac:	pop    esp
  40caad:	test   bl,dl
  40caaf:	mov    ebp,0x77f90107
  40cab4:	push   es
  40cab5:	ja     0x40cb14
  40cab7:	add    al,0xc9
  40cab9:	or     dh,bl
  40cabb:	scas   al,BYTE PTR es:[edi]
  40cabc:	nop
  40cabd:	mov    ecx,0xe0dfe527
  40cac2:	stc    
  40cac3:	mov    dh,0x64
  40cac5:	mov    al,0x94
  40cac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cac8:	iret   
  40cac9:	or     DWORD PTR [ecx-0x7fcde470],esi
  40cacf:	mov    BYTE PTR [ebx],0xc1
  40cad2:	jmp    0x14d2:0x69df832f
  40cad9:	scas   eax,DWORD PTR es:[edi]
  40cada:	sti    
  40cadb:	mov    bh,0xc1
  40cadd:	inc    esi
  40cade:	sbb    al,0x2d
  40cae0:	xor    al,0xaa
  40cae2:	sar    BYTE PTR [ecx+0x23],0x12
  40cae6:	inc    ebp
  40cae7:	push   ds
  40cae8:	push   eax
  40cae9:	xor    eax,0xf902d549
  40caee:	inc    edi
  40caef:	inc    esp
  40caf0:	mov    dh,0x94
  40caf2:	push   edx
  40caf3:	rcl    dh,cl
  40caf5:	cmp    DWORD PTR [esi-0x249c136f],ebp
  40cafb:	mov    ebp,0xc3eac009
  40cb00:	enter  0x9bfd,0xfe
  40cb04:	jbe    0x40cabf
  40cb06:	jbe    0x40cb11
  40cb08:	xchg   esp,eax
  40cb09:	sub    ecx,esp
  40cb0b:	fcomp  QWORD PTR [ebp-0x3e]
  40cb0e:	pop    edx
  40cb0f:	mov    eax,ds:0xa622caea
  40cb14:	mov    ecx,0xb73ec7ff
  40cb19:	xchg   DWORD PTR [edi-0x7b],esi
  40cb1c:	aad    0x9b
  40cb1e:	adc    bl,BYTE PTR [esi+0x3a]
  40cb21:	dec    ebp
  40cb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb23:	adc    al,0x7b
  40cb25:	inc    esp
  40cb26:	mov    ds:0xb5d9ec7e,eax
  40cb2b:	xchg   ebp,eax
  40cb2c:	outs   dx,DWORD PTR ds:[esi]
  40cb2d:	sahf   
  40cb2e:	out    0x2e,eax
  40cb30:	das    
  40cb31:	mov    ebx,0xe412685a
  40cb36:	pop    ebx
  40cb37:	xor    al,0x97
  40cb39:	mov    ah,0x9
  40cb3b:	aad    0x37
  40cb3d:	jns    0x40cb59
  40cb3f:	daa    
  40cb40:	int    0xb0
  40cb42:	and    al,0x7c
  40cb44:	xchg   edx,eax
  40cb45:	xor    BYTE PTR ds:0x85b3ed86,bh
  40cb4b:	test   al,0x51
  40cb4d:	cmp    DWORD PTR [esi-0x6627b6d5],edx
  40cb53:	and    esi,DWORD PTR [eax]
  40cb55:	xchg   ebp,eax
  40cb56:	icebp  
  40cb57:	lods   al,BYTE PTR ds:[esi]
  40cb58:	pop    edx
  40cb59:	nop
  40cb5a:	cmp    esp,ecx
  40cb5c:	pop    ss
  40cb5d:	scas   al,BYTE PTR es:[edi]
  40cb5e:	lahf   
  40cb5f:	(bad)  
  40cb60:	inc    eax
  40cb61:	mov    ecx,0x5e6f8ba7
  40cb66:	(bad)  
  40cb67:	fbld   TBYTE PTR [esi-0x1d]
  40cb6a:	aad    0xeb
  40cb6c:	add    BYTE PTR [ebp+0x4b3702b7],al
  40cb72:	sub    eax,0x1867c12d
  40cb77:	sub    eax,0x4c278a7b
  40cb7c:	cmc    
  40cb7d:	pop    edi
  40cb7e:	pop    ebx
  40cb7f:	add    eax,0xee60f4a
  40cb84:	les    esp,FWORD PTR [esi]
  40cb86:	out    dx,eax
  40cb87:	scas   al,BYTE PTR es:[edi]
  40cb88:	push   cs
  40cb89:	pop    ss
  40cb8a:	sti    
  40cb8b:	out    dx,eax
  40cb8c:	sub    eax,DWORD PTR [edx-0x65]
  40cb8f:	dec    esi
  40cb90:	dec    ebp
  40cb91:	xor    al,0x53
  40cb93:	mov    al,ds:0xe4226e08
  40cb98:	inc    edi
  40cb99:	ins    BYTE PTR es:[edi],dx
  40cb9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb9b:	in     eax,dx
  40cb9c:	out    0x6f,eax
  40cb9e:	stos   DWORD PTR es:[edi],eax
  40cb9f:	in     al,dx
  40cba0:	jecxz  0x40cbc7
  40cba2:	addr16 mov ah,0x34
  40cba5:	mov    esp,0x3dfd6f93
  40cbaa:	cdq    
  40cbab:	ror    BYTE PTR [eax-0xf],cl
  40cbae:	xchg   ecx,eax
  40cbaf:	fimul  DWORD PTR [ebx]
  40cbb1:	sbb    ah,BYTE PTR [ebp-0x153f463d]
  40cbb7:	arpl   WORD PTR [esi+0x71a6f10a],di
  40cbbd:	fistp  QWORD PTR [esi+0x5c49bd9d]
  40cbc3:	cli    
  40cbc4:	repz mov dl,0x4
  40cbc7:	sub    dh,dh
  40cbc9:	aam    0xa8
  40cbcb:	scas   al,BYTE PTR es:[edi]
  40cbcc:	shl    BYTE PTR [edi-0x59e3c83a],0x42
  40cbd3:	iret   
  40cbd4:	(bad)  
  40cbd5:	(bad)  
  40cbd7:	div    BYTE PTR [esi+ebp*1]
  40cbda:	mov    ecx,0x35fd83aa
  40cbdf:	scas   eax,DWORD PTR es:[edi]
  40cbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe1:	fstp   DWORD PTR [ebp+0x3d]
  40cbe4:	jmp    0x41d13a0a
  40cbe9:	lods   al,BYTE PTR ds:[esi]
  40cbea:	inc    ecx
  40cbeb:	imul   esp,DWORD PTR [eax-0x161b8a61],0xe575369b
  40cbf5:	add    ah,BYTE PTR [eax-0x7cdef688]
  40cbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbfc:	jb     0x40cc01
  40cbfe:	pusha  
  40cbff:	lahf   
  40cc00:	fst    QWORD PTR [edx-0x7dcf2bea]
  40cc06:	leave  
  40cc07:	xor    ch,BYTE PTR [edx+0x3a]
  40cc0a:	adc    bh,BYTE PTR ss:[ebx]
  40cc0d:	jl     0x40cc6a
  40cc0f:	xchg   esp,eax
  40cc10:	sahf   
  40cc11:	dec    ebx
  40cc12:	mov    eax,0xf073af4c
  40cc17:	and    eax,0x8ac7666f
  40cc1c:	in     eax,0x4
  40cc1e:	sub    ebp,DWORD PTR [eax]
  40cc20:	rcr    DWORD PTR [esi-0x49],1
  40cc23:	aaa    
  40cc24:	adc    al,0x1a
  40cc26:	fisubr DWORD PTR [eax]
  40cc28:	scas   al,BYTE PTR es:[edi]
  40cc29:	daa    
  40cc2a:	fwait
  40cc2b:	cmp    eax,edx
  40cc2d:	inc    esi
  40cc2e:	cwde   
  40cc2f:	push   ecx
  40cc30:	sub    al,0x88
  40cc32:	xchg   DWORD PTR [esp+esi*1+0x2d72f158],ecx
  40cc39:	and    BYTE PTR [eax+0x54b0caee],cl
  40cc3f:	call   0xc74cbc19
  40cc44:	inc    eax
  40cc45:	jbe    0x40cc4c
  40cc47:	fstp   TBYTE PTR [eax-0x71]
  40cc4a:	xchg   ebp,eax
  40cc4b:	adc    eax,0xa5cc38e
  40cc50:	int    0x47
  40cc52:	mov    eax,0x7cf08a64
  40cc57:	(bad)  [ebp+0x35e1b115]
  40cc5d:	xchg   ebp,eax
  40cc5e:	loope  0x40cbe2
  40cc60:	cwde   
  40cc61:	sub    DWORD PTR [esi+0x3caad5cd],0x2003031c
  40cc6b:	(bad)  
  40cc6c:	dec    edi
  40cc6d:	scas   al,BYTE PTR es:[edi]
  40cc6e:	dec    esp
  40cc6f:	push   ebx
  40cc70:	xor    eax,0xc7a56f6
  40cc75:	cld    
  40cc76:	lahf   
  40cc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc78:	mov    ecx,0xb7529db8
  40cc7d:	jo     0x40cc02
  40cc7f:	out    dx,al
  40cc80:	xchg   DWORD PTR [edx],esp
  40cc82:	fisttp DWORD PTR [ebx+0x3f5f7456]
  40cc88:	sub    BYTE PTR [ebx+ebx*4],ch
  40cc8b:	mov    ebx,0xd6de9783
  40cc90:	sbb    eax,edx
  40cc92:	mov    ebp,0xa920221f
  40cc97:	shr    DWORD PTR [ebx],1
  40cc99:	inc    BYTE PTR [ecx+0xb]
  40cc9c:	or     ecx,DWORD PTR [ebp-0x71926c3a]
  40cca2:	inc    esp
  40cca3:	adc    bl,BYTE PTR [ebx]
  40cca5:	mov    al,ds:0x2b7b96f5
  40ccaa:	outs   dx,DWORD PTR es:[esi]
  40ccac:	jle    0x40cc63
  40ccae:	stos   BYTE PTR es:[edi],al
  40ccaf:	fldenv [edi]
  40ccb1:	pop    edx
  40ccb2:	or     ah,dh
  40ccb4:	ds mov eax,0xc538879f
  40ccba:	pushf  
  40ccbb:	retf   0xf0af
  40ccbe:	pop    esp
  40ccbf:	scas   al,BYTE PTR es:[edi]
  40ccc0:	in     al,dx
  40ccc1:	xor    sp,0x31
  40ccc5:	arpl   bp,sp
  40ccc7:	call   0xca7d:0xf42fcd65
  40ccce:	adc    eax,0xa5b98c0e
  40ccd3:	call   0x44170bb1
  40ccd8:	idiv   DWORD PTR [eax+ecx*8-0x6f]
  40ccdc:	sub    al,0x66
  40ccde:	scas   eax,DWORD PTR es:[edi]
  40ccdf:	cwde   
  40cce0:	ret    
  40cce1:	fild   DWORD PTR [edi+0x75c6091e]
  40cce7:	mov    bh,0x2
  40cce9:	pop    ebp
  40ccea:	jmp    0x9ab6:0x5fbe5f84
  40ccf1:	and    eax,0xd325c225
  40ccf6:	mov    DWORD PTR [esi+0x2c45e320],esp
  40ccfc:	pop    edi
  40ccfd:	aam    0xa9
  40ccff:	mov    ebp,0xa6bee290
  40cd04:	mov    dh,BYTE PTR ds:0xdc317119
  40cd0a:	fst    QWORD PTR [ebp-0xb1a00d8]
  40cd10:	bound  esp,QWORD PTR [ecx]
  40cd12:	call   0x355b:0x194cece4
  40cd19:	sub    edi,esi
  40cd1b:	dec    edi
  40cd1c:	ret    
  40cd1d:	mov    bl,0x5d
  40cd20:	aad    0x78
  40cd22:	outs   dx,DWORD PTR ds:[esi]
  40cd23:	push   0xffffff91
  40cd25:	adc    al,0x4b
  40cd27:	rol    DWORD PTR [edi],1
  40cd29:	and    esi,DWORD PTR [eax+0x4c167aad]
  40cd2f:	out    dx,eax
  40cd30:	(bad)  
  40cd31:	(bad)  
  40cd32:	in     eax,dx
  40cd33:	add    ecx,DWORD PTR [ebp-0x50e76c56]
  40cd39:	fcmovnb st,st(1)
  40cd3b:	nop
  40cd3c:	enter  0x33b,0x1c
  40cd40:	xor    edi,DWORD PTR [edx]
  40cd42:	mov    al,ds:0xc2405292
  40cd47:	int    0x63
  40cd49:	or     edx,DWORD PTR [ebx-0x5f7735fb]
  40cd4f:	mov    ds:0xa3433447,al
  40cd54:	sbb    ch,ah
  40cd56:	mov    WORD PTR [esi-0x56b3b59a],gs
  40cd5c:	or     dh,BYTE PTR [ebx-0x30]
  40cd5f:	adc    DWORD PTR ss:[eax],edi
  40cd62:	inc    eax
  40cd63:	push   esi
  40cd64:	into   
  40cd65:	sub    dh,ch
  40cd67:	or     BYTE PTR [esi+0x3361377],bl
  40cd6d:	sbb    BYTE PTR [bp-0x7a],dh
  40cd71:	sub    edx,DWORD PTR [ecx+0x3]
  40cd74:	stc    
  40cd75:	dec    edx
  40cd76:	mov    ecx,0x703e255d
  40cd7b:	aas    
  40cd7c:	outs   dx,DWORD PTR ds:[esi]
  40cd7d:	imul   esi,DWORD PTR [ecx],0xffffffba
  40cd80:	xchg   ebp,eax
  40cd81:	sahf   
  40cd82:	fsubr  DWORD PTR [edi]
  40cd84:	and    ah,BYTE PTR [edx]
  40cd86:	fidiv  DWORD PTR [ecx-0x53616bff]
  40cd8c:	bound  edi,QWORD PTR [edi-0x1d]
  40cd8f:	leave  
  40cd90:	daa    
  40cd91:	bound  esi,QWORD PTR [eax-0x7a]
  40cd94:	nop
  40cd95:	and    DWORD PTR [eax+0x6552bd1d],edi
  40cd9b:	mov    dh,0x5c
  40cd9d:	mov    ebx,0x15eca953
  40cda2:	fsubr  QWORD PTR ds:0x788933f1
  40cda8:	inc    edx
  40cda9:	retf   
  40cdaa:	adc    esp,DWORD PTR [ebp-0x41cbd043]
  40cdb0:	(bad)  
  40cdb2:	mov    WORD PTR [edi-0x4d],cx
  40cdb6:	mov    ebx,0x8b6f054b
  40cdbb:	(bad)  
  40cdbc:	xchg   ebp,eax
  40cdbd:	cmp    cl,ah
  40cdbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdc0:	mov    esi,0xc79814e9
  40cdc5:	cmp    al,0x29
  40cdc7:	xchg   DWORD PTR [edi+0x14],eax
  40cdca:	pop    ebx
  40cdcb:	pop    ebp
  40cdcc:	and    eax,0x818b6b9
  40cdd1:	add    DWORD PTR [ebx],eax
  40cdd3:	xchg   edi,eax
  40cdd4:	(bad)  
  40cdd5:	fnstsw WORD PTR [edx]
  40cdd7:	loope  0x40cd5e
  40cdd9:	mov    ebx,0x6a2e0ade
  40cdde:	retf   
  40cddf:	mov    ebx,0x236caa57
  40cde4:	inc    edx
  40cde5:	push   0x46
  40cde7:	ins    DWORD PTR es:[edi],dx
  40cde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cde9:	cmp    al,0xcc
  40cdeb:	lods   al,BYTE PTR ds:[esi]
  40cdec:	add    BYTE PTR [esi-0x5d3765ca],dl
  40cdf2:	cwde   
  40cdf3:	sahf   
  40cdf4:	and    BYTE PTR [ebp-0x5e],bl
  40cdf7:	lods   al,BYTE PTR ds:[esi]
  40cdf8:	jge    0x40cd7d
  40cdfa:	pop    eax
  40cdfb:	js     0x40cdcf
  40cdfd:	sbb    DWORD PTR [edx+esi*4-0x367e64aa],ebx
  40ce04:	xchg   BYTE PTR [ebp-0xe],dh
  40ce07:	fwait
  40ce08:	sahf   
  40ce09:	mov    ecx,0x58b39464
  40ce0e:	xor    DWORD PTR ds:0xaf003f,edx
  40ce14:	clc    
  40ce15:	xor    al,0x8d
  40ce17:	add    bh,BYTE PTR [eax+0xa400f62]
  40ce1d:	inc    edx
  40ce1e:	dec    edi
  40ce1f:	jne    0x40cdc7
  40ce21:	adc    BYTE PTR [eax+eax*2],dl
  40ce24:	inc    ebp
  40ce25:	pop    edx
  40ce26:	leave  
  40ce27:	cmp    edx,ebp
  40ce29:	rol    al,cl
  40ce2b:	cmp    edx,DWORD PTR [ebx]
  40ce2d:	mov    DWORD PTR [ecx],0x9b6f5235
  40ce33:	mov    cl,0xc3
  40ce35:	push   eax
  40ce36:	inc    eax
  40ce37:	neg    BYTE PTR [edx+0x39bdd49]
  40ce3d:	enter  0xb13d,0xd5
  40ce41:	rcl    BYTE PTR [ecx],1
  40ce43:	repnz adc ebp,ecx
  40ce46:	mov    al,BYTE PTR [esi]
  40ce48:	inc    edi
  40ce49:	xchg   edx,eax
  40ce4a:	cmp    eax,0xd2c0ae6c
  40ce4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce50:	out    0xc8,al
  40ce52:	pushw  cs
  40ce54:	dec    edx
  40ce55:	loop   0x40cec9
  40ce57:	or     al,0x99
  40ce59:	js     0x40ce3a
  40ce5b:	retf   
  40ce5c:	inc    edx
  40ce5d:	cmp    al,0x93
  40ce5f:	jo     0x40cea8
  40ce61:	mov    edx,0xea9c41a6
  40ce66:	mov    ebp,0x5a080053
  40ce6b:	and    al,0x30
  40ce6d:	mov    eax,ds:0x469e95a8
  40ce72:	cmp    eax,DWORD PTR [ecx+0x61]
  40ce75:	and    eax,0xdf2994b9
  40ce7a:	ds lahf 
  40ce7c:	xchg   esp,eax
  40ce7d:	aad    0xa8
  40ce7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce80:	cmc    
  40ce81:	pop    es
  40ce82:	cmp    BYTE PTR [esi],bh
  40ce84:	or     esp,DWORD PTR [edi+0x25f38f96]
  40ce8a:	aam    0xac
  40ce8c:	inc    edi
  40ce8d:	fcomip st,st(4)
  40ce8f:	mov    ebx,0xa794621d
  40ce94:	xor    ch,ah
  40ce96:	or     ebp,DWORD PTR [ecx+0x4fa9db53]
  40ce9c:	cmc    
  40ce9d:	mov    DWORD PTR ds:0x129d2c4f,edx
  40cea3:	jmp    0xd87892fa
  40cea8:	icebp  
  40cea9:	jmp    0x3f213953
  40ceae:	test   BYTE PTR [edi],dl
  40ceb0:	cmp    cl,BYTE PTR [ebx+0x3e67088f]
  40ceb6:	push   eax
  40ceb7:	pop    edi
  40ceb8:	add    bh,bh
  40ceba:	adc    al,0x15
  40cebc:	adc    DWORD PTR [edi-0x7f338e59],eax
  40cec2:	jmp    0x40ce79
  40cec4:	sbb    esi,esp
  40cec6:	fistp  DWORD PTR [ecx+0x297ce93]
  40cecc:	shl    DWORD PTR [eax+0x33864c20],1
  40ced2:	mov    ?,WORD PTR [ebp-0x55]
  40ced5:	lods   al,BYTE PTR ds:[esi]
  40ced6:	paddusb mm2,mm4
  40ced9:	into   
  40ceda:	xchg   ebp,eax
  40cedb:	pop    ds
  40cedc:	out    0xf0,al
  40cede:	cmp    cl,BYTE PTR [esi-0x42]
  40cee1:	and    ebp,ecx
  40cee3:	sar    edi,0x19
  40cee6:	dec    ecx
  40cee7:	neg    DWORD PTR [ebx+0x5bfa2af]
  40ceed:	(bad)  [ebp+edx*8-0x23]
  40cef1:	gs sub eax,0xbd1b57f9
  40cef7:	clc    
  40cef8:	xchg   esp,eax
  40cef9:	sbb    esi,DWORD PTR [edx-0x3d]
  40cefc:	xor    BYTE PTR [ecx],dh
  40cefe:	dec    ebp
  40ceff:	inc    edx
  40cf00:	sub    al,0x3e
  40cf02:	test   BYTE PTR [edx+edi*8],0xa7
  40cf06:	dec    esi
  40cf07:	out    dx,eax
  40cf08:	std    
  40cf09:	xor    eax,eax
  40cf0b:	rcl    BYTE PTR ds:0xbf284a54,1
  40cf11:	mov    al,0x8c
  40cf13:	cmp    DWORD PTR [ecx+0x754004d0],edi
  40cf19:	addr16 test ch,bl
  40cf1c:	xchg   ebp,eax
  40cf1d:	lods   eax,DWORD PTR ds:[esi]
  40cf1e:	xor    esp,ebx
  40cf20:	push   ebx
  40cf21:	mov    ah,0x69
  40cf24:	stos   BYTE PTR es:[edi],al
  40cf25:	pushf  
  40cf26:	mov    edx,0x3b5a4ac7
  40cf2b:	cdq    
  40cf2c:	pop    ebp
  40cf2d:	pusha  
  40cf2e:	inc    edx
  40cf2f:	mov    esp,0x890db1e1
  40cf34:	sti    
  40cf35:	mov    ds:0x862ef3fe,al
  40cf3a:	pop    ss
  40cf3b:	or     esp,DWORD PTR [ecx+ebx*8+0x9284b60]
  40cf42:	inc    ebx
  40cf43:	ret    0xf403
  40cf46:	mov    ecx,0x3e983981
  40cf4b:	pop    esp
  40cf4c:	aas    
  40cf4d:	loopne 0x40cedd
  40cf4f:	enter  0xd21c,0xf6
  40cf53:	xchg   BYTE PTR [edi+eiz*8],dl
  40cf56:	pop    ds
  40cf57:	jbe    0x40cfc3
  40cf59:	jl     0x40cfc8
  40cf5b:	or     eax,0x4d13abf8
  40cf60:	shl    DWORD PTR [eax-0x49080c45],1
  40cf66:	sub    dl,BYTE PTR [eax-0x55741fc7]
  40cf6c:	(bad)  
  40cf6d:	xor    DWORD PTR [ebx+0xaa13eb0],edi
  40cf73:	(bad)  
  40cf74:	pop    ecx
  40cf75:	or     BYTE PTR [ecx],dh
  40cf77:	out    dx,eax
  40cf78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf79:	add    ebx,DWORD PTR ss:[eax+0x48908240]
  40cf80:	pop    ss
  40cf81:	xchg   esp,eax
  40cf82:	lahf   
  40cf83:	(bad)  
  40cf84:	push   ebp
  40cf85:	scas   al,BYTE PTR es:[edi]
  40cf86:	adc    edx,edx
  40cf88:	icebp  
  40cf89:	xlat   BYTE PTR ds:[ebx]
  40cf8a:	call   0xc2135bbe
  40cf8f:	jp     0x40cf2b
  40cf91:	outs   dx,DWORD PTR ds:[esi]
  40cf92:	push   edi
  40cf93:	mov    ds,WORD PTR [edi]
  40cf95:	in     al,0xed
  40cf97:	nop
  40cf98:	lea    esi,[ebx+0x422b692e]
  40cf9e:	and    al,0x11
  40cfa0:	lahf   
  40cfa1:	retf   0xf8f
  40cfa4:	mov    eax,eax
  40cfa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa7:	sub    DWORD PTR [esi-0x10],esi
  40cfaa:	repz dec ecx
  40cfac:	fwait
  40cfad:	push   edx
  40cfae:	lahf   
  40cfaf:	sub    BYTE PTR [ecx-0x26a9e7b8],0xdc
  40cfb6:	ror    DWORD PTR [edx+0x1e],1
  40cfb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfba:	int    0xb1
  40cfbc:	push   ecx
  40cfbd:	stos   DWORD PTR es:[edi],eax
  40cfbe:	push   ds
  40cfbf:	mov    bl,0xa6
  40cfc1:	adc    ebp,DWORD PTR [edx-0x2ff77143]
  40cfc7:	(bad)  
  40cfc8:	sar    BYTE PTR [ebp-0x2aca4d0e],0x93
  40cfcf:	shr    DWORD PTR [eax+0x4f6a9048],1
  40cfd5:	nop
  40cfd6:	pop    ebp
  40cfd7:	inc    esp
  40cfd8:	pusha  
  40cfd9:	mov    DWORD PTR [edx+0x53],eax
  40cfdc:	in     eax,0x20
  40cfde:	pop    ebx
  40cfdf:	pop    esp
  40cfe0:	sub    DWORD PTR [edx+0x3c7f82c3],0xffffffc9
  40cfe7:	aam    0x10
  40cfe9:	in     eax,0xea
  40cfeb:	push   0xffffffba
  40cfed:	jle    0x40cf7e
  40cfef:	int    0x11
  40cff1:	adc    BYTE PTR [esi-0x3bd41305],ch
  40cff7:	push   0x3354b447
  40cffc:	shr    DWORD PTR [edx-0x48adc7b],1
  40d002:	xor    esi,0xfa0f4cb9
  40d008:	sbb    dh,ch
  40d00a:	imul   edi,DWORD PTR [ebp-0x4c392df2],0xffffff8b
  40d011:	jecxz  0x40d02b
  40d013:	stos   BYTE PTR es:[edi],al
  40d014:	jge    0x40cfe9
  40d016:	and    BYTE PTR ds:0x1fed7704,0xb6
  40d01d:	jb     0x40d082
  40d01f:	sub    eax,0x93b9baca
  40d024:	lods   al,BYTE PTR ds:[esi]
  40d025:	mov    WORD PTR [ebx-0x50],gs
  40d028:	cmp    esi,DWORD PTR [eax-0x63]
  40d02b:	jno    0x40d08e
  40d02d:	jg     0x40d0a0
  40d02f:	pop    esp
  40d030:	mov    bl,0x96
  40d032:	stos   DWORD PTR es:[edi],eax
  40d033:	call   0xf91c:0x4eac4f96
  40d03a:	sub    BYTE PTR [edx-0x4a],ah
  40d03d:	mov    cl,0xd0
  40d03f:	xchg   ebp,eax
  40d040:	sti    
  40d041:	or     al,0x64
  40d043:	out    0xcc,al
  40d045:	and    dh,BYTE PTR [ecx]
  40d047:	or     edx,DWORD PTR ds:0x9ef0558d
  40d04d:	arpl   WORD PTR [ebx+esi*2-0xe],bp
  40d051:	sub    BYTE PTR [ebp+ebx*4+0x54],al
  40d055:	mov    edx,0x634745c0
  40d05a:	xchg   esi,eax
  40d05b:	lock int 0x47
  40d05e:	adc    ah,BYTE PTR [edx+0x1b]
  40d061:	addr16 push esi
  40d063:	mov    ch,0x7a
  40d065:	(bad)  
  40d066:	icebp  
  40d067:	sub    eax,0x7c61f6f4
  40d06c:	adc    al,0xa
  40d06e:	mov    DWORD PTR [eax-0x40],edi
  40d071:	mov    dl,0x7c
  40d073:	fsubr  DWORD PTR [edi-0xcb99350]
  40d079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d07a:	adc    ecx,DWORD PTR [ebp-0x50]
  40d07d:	xor    ch,ch
  40d07f:	imul   BYTE PTR [eax-0x41bb67a9]
  40d085:	int3   
  40d086:	leave  
  40d087:	push   esp
  40d088:	cmp    BYTE PTR [ebx+esi*1+0x4abfb7cc],0x4f
  40d090:	mov    eax,ds:0x337794b8
  40d095:	jg     0x40d0ca
  40d097:	les    esp,FWORD PTR [ecx]
  40d099:	pop    ds
  40d09a:	ja     0x40d022
  40d09c:	test   eax,0x21765251
  40d0a1:	rcr    ch,0x77
  40d0a4:	inc    eax
  40d0a5:	aad    0xed
  40d0a7:	inc    ebp
  40d0a8:	and    BYTE PTR [edx+0x1822770e],cl
  40d0ae:	mov    BYTE PTR [edx],0x39
  40d0b1:	ss jge 0x40d063
  40d0b4:	out    0x62,eax
  40d0b6:	scas   eax,DWORD PTR es:[edi]
  40d0b7:	out    dx,ax
  40d0b9:	mov    ch,0xe0
  40d0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0bc:	retf   0xc9dc
  40d0bf:	lds    eax,FWORD PTR ds:0x3c37a542
  40d0c5:	(bad)  
  40d0c6:	fbstp  TBYTE PTR [ebx-0x33]
  40d0c9:	sahf   
  40d0ca:	lods   eax,DWORD PTR ds:[esi]
  40d0cb:	aas    
  40d0cc:	push   cs
  40d0cd:	nop
  40d0ce:	aas    
  40d0cf:	fld    QWORD PTR [edi]
  40d0d1:	(bad)  
  40d0d3:	mov    ds:0x45e2a50b,al
  40d0d8:	(bad)  ds:0x1c12c32f
  40d0de:	mov    ebp,0x5224622d
  40d0e3:	pop    ebx
  40d0e4:	div    DWORD PTR [ecx]
  40d0e6:	(bad)  
  40d0e7:	xchg   ebx,eax
  40d0e8:	xor    eax,0xbc43cdbb
  40d0ed:	cld    
  40d0ee:	cwde   
  40d0ef:	mov    ds:0x688e2ca3,al
  40d0f4:	push   eax
  40d0f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f6:	std    
  40d0f7:	loop   0x40d0bb
  40d0f9:	push   ss
  40d0fa:	sti    
  40d0fb:	jp     0x40d139
  40d0fd:	jno    0x40d0c0
  40d0ff:	call   0x438fd1bc
  40d104:	jb     0x40d162
  40d106:	dec    ebx
  40d107:	xor    al,0x3c
  40d109:	xchg   esp,eax
  40d10a:	push   ds
  40d10b:	jecxz  0x40d160
  40d10d:	push   eax
  40d10e:	pop    esp
  40d10f:	push   esp
  40d110:	pop    ebp
  40d111:	loopne 0x40d16d
  40d113:	sti    
  40d114:	xchg   DWORD PTR [edx+0x72],esi
  40d117:	sbb    dh,bl
  40d119:	aad    0x16
  40d11b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d11c:	shl    DWORD PTR [ecx-0x65253ca0],1
  40d122:	cwde   
  40d123:	in     eax,0xca
  40d125:	(bad)  
  40d127:	pop    ebp
  40d128:	xor    esi,DWORD PTR [ebx+0x7e93f1f8]
  40d12e:	push   es
  40d12f:	adc    eax,0x117bdebc
  40d134:	rol    DWORD PTR [ecx],cl
  40d136:	xchg   DWORD PTR [edx+0x37],edi
  40d139:	sbb    ch,BYTE PTR [ecx+0x5c]
  40d13c:	outs   dx,DWORD PTR ds:[esi]
  40d13d:	fld    TBYTE PTR [edx+0x7ec6a5d8]
  40d143:	jmp    0x25e7e0f8
  40d148:	iret   
  40d149:	xchg   ebx,eax
  40d14a:	stos   DWORD PTR es:[edi],eax
  40d14b:	ror    al,0x5b
  40d14e:	push   esi
  40d14f:	ins    BYTE PTR es:[edi],dx
  40d150:	xchg   edi,eax
  40d151:	lds    edx,FWORD PTR [edi-0x3d]
  40d154:	xor    edi,esi
  40d156:	mov    al,ds:0x2a50c4bc
  40d15b:	adc    BYTE PTR [esi+0x6517003f],cl
  40d161:	outs   dx,BYTE PTR ds:[esi]
  40d162:	pop    ecx
  40d163:	inc    ebx
  40d164:	in     al,0xf9
  40d166:	jne    0x40d1d0
  40d168:	dec    esp
  40d169:	xchg   esp,eax
  40d16a:	cwde   
  40d16b:	rcl    BYTE PTR [edi+0x2a],1
  40d16e:	jecxz  0x40d18d
  40d170:	ret    
  40d171:	add    al,BYTE PTR [edx-0x38]
  40d174:	inc    ebx
  40d175:	test   al,0x4
  40d177:	adc    BYTE PTR [esi+0x5d221cfc],ah
  40d17d:	fcom   DWORD PTR [edx+0x2fed53a6]
  40d183:	std    
  40d184:	mov    DWORD PTR [ecx+0x68],esi
  40d187:	cld    
  40d188:	or     eax,0x4ea58ddd
  40d18d:	push   cs
  40d18e:	in     al,0x61
  40d190:	xchg   esp,eax
  40d191:	add    BYTE PTR [ebp+0x5d3a76ae],al
  40d197:	jne    0x40d1d2
  40d199:	push   cs
  40d19a:	std    
  40d19b:	push   ds
  40d19c:	xchg   ebx,eax
  40d19d:	mov    DWORD PTR [ecx],ebx
  40d19f:	lods   al,BYTE PTR ds:[esi]
  40d1a0:	sub    DWORD PTR [edx+0x1ad7e099],eax
  40d1a6:	cld    
  40d1a7:	ret    0x2dcf
  40d1aa:	scas   eax,DWORD PTR es:[edi]
  40d1ab:	mov    ah,0x27
  40d1ad:	pop    edi
  40d1ae:	aad    0x1e
  40d1b0:	ins    DWORD PTR es:[edi],dx
  40d1b1:	test   al,0xe9
  40d1b3:	pushf  
  40d1b4:	push   es
  40d1b5:	pop    esi
  40d1b6:	jo     0x40d184
  40d1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b9:	mov    ebx,0xba52f67e
  40d1be:	enter  0xaa65,0xe
  40d1c2:	push   ecx
  40d1c3:	stos   BYTE PTR es:[edi],al
  40d1c4:	mov    ebx,0x9e5e1de8
  40d1c9:	stos   DWORD PTR es:[edi],eax
  40d1ca:	and    DWORD PTR [ebx-0x15810637],ecx
  40d1d0:	enter  0x6c20,0xfa
  40d1d4:	or     BYTE PTR [edi-0x36],0x85
  40d1d8:	jno    0x40d23e
  40d1da:	sbb    eax,0xf7e61790
  40d1df:	jp     0x40d20a
  40d1e1:	lahf   
  40d1e2:	push   ecx
  40d1e3:	adc    ch,BYTE PTR [edi-0x2a]
  40d1e6:	mov    BYTE PTR [edx+edi*8-0x75],al
  40d1ea:	pop    esi
  40d1eb:	jo     0x40d22c
  40d1ed:	dec    ecx
  40d1ee:	cmp    cl,BYTE PTR [ebx+ecx*1+0x18]
  40d1f2:	cwde   
  40d1f3:	add    DWORD PTR [esi],0x59f6cbfa
  40d1f9:	aad    0x29
  40d1fb:	shr    al,1
  40d1fd:	adc    al,0x3e
  40d1ff:	fcmovnbe st,st(3)
  40d201:	adc    DWORD PTR ds:0x69d1e474,eax
  40d207:	xchg   esi,eax
  40d208:	jae    0x40d243
  40d20a:	test   BYTE PTR [edx+0x5c],ah
  40d20d:	mov    eax,0xcc90740c
  40d212:	or     al,0xed
  40d214:	out    dx,al
  40d215:	xor    DWORD PTR ds:0x75129dbb,esp
  40d21b:	sti    
  40d21c:	fneni(8087 only) 
  40d21e:	out    0x19,al
  40d220:	push   edx
  40d221:	jecxz  0x40d230
  40d223:	shr    DWORD PTR [esp+ecx*1],1
  40d226:	(bad)  
  40d227:	mov    DWORD PTR [eax+edi*4],edx
  40d22a:	cmp    eax,0x46be4020
  40d22f:	cmp    ecx,DWORD PTR [ecx]
  40d231:	imul   BYTE PTR [edx]
  40d233:	test   al,0xb2
  40d235:	mov    ebp,edi
  40d237:	jmp    0x818a:0xb668443c
  40d23e:	add    eax,edi
  40d240:	mov    bl,0x6a
  40d242:	dec    esp
  40d243:	stos   BYTE PTR es:[edi],al
  40d244:	add    bl,BYTE PTR [ebp-0x3eafc5]
  40d24a:	pop    ebx
  40d24b:	cmp    cl,BYTE PTR [esi+0x66745fbd]
  40d251:	sbb    DWORD PTR [eax+edi*1-0x37],esi
  40d255:	or     DWORD PTR [ecx],ecx
  40d257:	cmp    eax,0x756bba96
  40d25c:	pop    ds
  40d25d:	mov    esi,0xcdd335b6
  40d262:	cli    
  40d263:	aaa    
  40d264:	mov    esp,ecx
  40d266:	jb     0x40d2aa
  40d268:	mov    WORD PTR [edi-0x48],ds
  40d26b:	cmp    eax,0xc8e9b59
  40d270:	mov    ebx,0xd05ff5c2
  40d275:	stc    
  40d276:	cmp    dh,BYTE PTR [eax]
  40d278:	or     ecx,DWORD PTR [ebx]
  40d27a:	jb     0x40d20f
  40d27c:	pop    ebp
  40d27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d27e:	xchg   ebp,eax
  40d27f:	jne    0x40d2d0
  40d281:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d283:	leave  
  40d284:	mov    esi,0xf57b89a9
  40d289:	int    0x6e
  40d28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d28c:	jmp    0x96811e46
  40d291:	push   es
  40d292:	xor    BYTE PTR [ebx+0x106850ff],al
  40d298:	pop    ds
  40d299:	jp     0x40d2ae
  40d29b:	sbb    eax,0xeefa1ff4
  40d2a0:	and    DWORD PTR [ecx+0x5],0x492e3da7
  40d2a7:	inc    esi
  40d2a8:	sub    ebp,DWORD PTR [ecx-0x9]
  40d2ab:	cdq    
  40d2ac:	std    
  40d2ad:	dec    edx
  40d2ae:	arpl   WORD PTR [eax],dx
  40d2b0:	leave  
  40d2b1:	inc    ecx
  40d2b2:	adc    BYTE PTR [edx],0x8b
  40d2b5:	adc    cl,BYTE PTR [edx]
  40d2b7:	lock sbb eax,DWORD PTR fs:[ebx+esi*4-0x20]
  40d2bd:	mov    esp,DWORD PTR [ebp+0xf945bb6]
  40d2c3:	test   al,0x69
  40d2c5:	push   ebx
  40d2c6:	test   DWORD PTR [edx+0x46],0x9828c701
  40d2cd:	push   0x5aa5eb34
  40d2d2:	inc    ecx
  40d2d3:	adc    BYTE PTR [esi+ecx*1],0x78
  40d2d7:	test   ah,0x17
  40d2da:	push   0xffffff80
  40d2dc:	lock cmp DWORD PTR [edi],eax
  40d2df:	mov    edx,0x587cb49e
  40d2e4:	test   al,0x39
  40d2e6:	pop    edi
  40d2e7:	mov    ch,0x12
  40d2e9:	mov    al,ds:0x99e6f07e
  40d2ee:	push   ebx
  40d2ef:	and    edi,0x58f11fa5
  40d2f5:	cs dec edx
  40d2f7:	jle    0x40d36f
  40d2f9:	xchg   BYTE PTR [esi],dl
  40d2fb:	xchg   esi,eax
  40d2fc:	push   edi
  40d2fd:	imul   cl
  40d2ff:	(bad)  
  40d300:	aam    0xe3
  40d302:	iret   
  40d303:	fisub  WORD PTR [ebx-0x5a4cbcaf]
  40d309:	out    0x6f,al
  40d30b:	test   BYTE PTR [ebp+ebx*8+0xf],al
  40d30f:	and    bl,BYTE PTR [edx-0x39c3348c]
  40d315:	loop   0x40d338
  40d317:	clc    
  40d318:	imul   edi,DWORD PTR [edi],0x4e
  40d31b:	out    dx,al
  40d31c:	or     bl,cl
  40d31e:	push   0xffffffbb
  40d320:	test   BYTE PTR [eax+eax*1],dh
  40d323:	adc    edi,DWORD PTR [edi]
  40d325:	push   eax
  40d326:	mov    es:0xb961f3b4,eax
  40d32c:	add    dh,BYTE PTR [edi-0x39ccacdb]
  40d332:	mov    WORD PTR [eax],?
  40d334:	ins    DWORD PTR es:[edi],dx
  40d335:	sbb    esi,DWORD PTR [edx+0x72049ddc]
  40d33b:	mov    esi,0xa0af2422
  40d340:	mov    ebp,DWORD PTR ds:0x85560d4d
  40d346:	scas   al,BYTE PTR es:[edi]
  40d347:	test   al,0x22
  40d349:	ins    DWORD PTR es:[edi],dx
  40d34a:	out    dx,al
  40d34b:	pusha  
  40d34c:	jae    0x40d3aa
  40d34e:	fsub   DWORD PTR [esi]
  40d350:	stc    
  40d351:	jb     0x40d3bf
  40d353:	cmp    BYTE PTR [ebp+0x28d6cc69],ch
  40d359:	fidivr DWORD PTR [edx+0x6b39c3c3]
  40d35f:	mov    edi,0xf0799414
  40d364:	jecxz  0x40d3c8
  40d366:	and    edi,DWORD PTR [ebp-0x279ee50b]
  40d36c:	stos   DWORD PTR es:[edi],eax
  40d36d:	pop    edi
  40d36e:	adc    DWORD PTR [esi],ebx
  40d370:	retf   
  40d371:	and    DWORD PTR [edi-0x1f205d98],0x1d3c9b1f
  40d37b:	xor    ebp,esp
  40d37d:	shl    ebx,cl
  40d37f:	(bad)  
  40d380:	mov    al,0x45
  40d382:	sbb    DWORD PTR [edx],ebp
  40d384:	sbb    eax,0xbcd4287b
  40d389:	push   esp
  40d38a:	add    BYTE PTR [edx+0x28f6e74b],cl
  40d390:	jae    0x40d3b7
  40d392:	sbb    DWORD PTR [ebp+0x3b80d2af],0xffffffde
  40d399:	ds jo  0x40d3c4
  40d39c:	lods   eax,DWORD PTR ds:[esi]
  40d39d:	xchg   ebp,eax
  40d39e:	rol    BYTE PTR [ebp+0x2b],cl
  40d3a1:	or     eax,esi
  40d3a3:	jb     0x40d3cd
  40d3a5:	dec    ebp
  40d3a6:	pushf  
  40d3a7:	and    ecx,DWORD PTR [edi]
  40d3a9:	(bad)  
  40d3ab:	cwde   
  40d3ac:	enter  0xed00,0xa2
  40d3b0:	sbb    eax,0xf8518d2c
  40d3b5:	pop    ss
  40d3b6:	xchg   esp,eax
  40d3b7:	pop    eax
  40d3b8:	leave  
  40d3b9:	xchg   esi,eax
  40d3ba:	push   ds
  40d3bb:	mov    dl,0xc8
  40d3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3be:	push   ebx
  40d3bf:	sub    eax,0x2a63618e
  40d3c4:	ficomp DWORD PTR [eax-0x70b6645f]
  40d3ca:	adc    ecx,esi
  40d3cc:	out    0xf6,al
  40d3ce:	xor    al,0x5c
  40d3d0:	inc    eax
  40d3d1:	pop    ds
  40d3d2:	push   ebp
  40d3d3:	mov    dl,0xa8
  40d3d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3d6:	test   al,0x4e
  40d3d8:	pop    ds
  40d3d9:	cmp    BYTE PTR ds:0x61444db,0xf8
  40d3e0:	idiv   BYTE PTR [ebx-0x34278901]
  40d3e6:	inc    ecx
  40d3e7:	push   ss
  40d3e8:	xchg   ebx,eax
  40d3e9:	ja     0x40d3ef
  40d3eb:	fstp   TBYTE PTR [edx-0x4b]
  40d3ee:	sar    BYTE PTR [eax-0x74c0ac09],1
  40d3f4:	inc    ecx
  40d3f5:	fcom   QWORD PTR [ecx-0x22]
  40d3f8:	sti    
  40d3f9:	fistp  QWORD PTR [ebx-0x49]
  40d3fc:	lds    edi,FWORD PTR es:[ebx+0x4b]
  40d400:	test   al,0x4c
  40d402:	mov    ecx,DWORD PTR [ebx-0x4c]
  40d405:	gs loope 0x40d46f
  40d408:	inc    ebx
  40d409:	mov    ah,0xd
  40d40b:	sub    BYTE PTR [ecx+eax*1-0x76],cl
  40d40f:	ss jl  0x40d3bb
  40d412:	into   
  40d413:	test   BYTE PTR [ebp-0x361883ca],bl
  40d419:	jns    0x40d3ea
  40d41b:	inc    edi
  40d41c:	mov    bl,0xf2
  40d41e:	push   ss
  40d41f:	dec    ecx
  40d420:	(bad)  
  40d421:	shr    BYTE PTR [ecx-0x38405f56],1
  40d427:	mov    BYTE PTR [esi-0x64d2e641],ch
  40d42d:	dec    esp
  40d42e:	pusha  
  40d42f:	inc    ebp
  40d430:	(bad)  
  40d431:	stc    
  40d432:	call   0x76b1:0xd3c00663
  40d439:	mov    eax,0x3fcf21b1
  40d43e:	xchg   edi,esi
  40d440:	sub    eax,0x5272bdee
  40d445:	mov    esp,0xfee66566
  40d44a:	xchg   esi,eax
  40d44b:	push   ss
  40d44c:	pop    esp
  40d44d:	cli    
  40d44e:	mov    al,ds:0x200902cb
  40d453:	les    eax,FWORD PTR [edx+0x123d3d40]
  40d459:	cmp    al,0x96
  40d45b:	shl    al,0x7e
  40d45e:	mov    cl,0xd4
  40d460:	jecxz  0x40d42c
  40d462:	ret    0x6277
  40d465:	pop    ss
  40d466:	jbe    0x40d42a
  40d468:	xor    al,0xab
  40d46a:	inc    ebx
  40d46b:	xor    DWORD PTR [ecx],0x18
  40d46e:	pushf  
  40d46f:	mov    ebp,0xca9f418
  40d474:	add    eax,0xa8d1b53b
  40d479:	aas    
  40d47a:	mov    ebp,0xbc3f0015
  40d47f:	lods   eax,DWORD PTR ds:[esi]
  40d480:	test   DWORD PTR [ebp+0x5],ebp
  40d483:	sub    eax,0x3bcea516
  40d488:	or     bl,ah
  40d48a:	ja     0x40d4ce
  40d48c:	and    ebx,DWORD PTR [edx-0x33cd58d1]
  40d492:	addr16 ss push edx
  40d495:	dec    esp
  40d496:	loope  0x40d464
  40d498:	jecxz  0x40d50c
  40d49a:	nop
  40d49b:	je     0x40d436
  40d49d:	cdq    
  40d49e:	sbb    BYTE PTR [eax-0x65],ah
  40d4a1:	(bad)  
  40d4a2:	push   ss
  40d4a3:	mov    esp,0xc002e019
  40d4a8:	cmp    edx,DWORD PTR [edi]
  40d4aa:	rcl    BYTE PTR [ebx-0x7f390df9],1
  40d4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4b1:	mov    bl,0xba
  40d4b3:	aam    0xc2
  40d4b5:	and    DWORD PTR [esi+0x7c4bbfbf],ebx
  40d4bb:	cmp    dl,BYTE PTR ss:[edi+0x6467218d]
  40d4c2:	inc    ecx
  40d4c3:	adc    eax,DWORD PTR [esi+0x603c5e90]
  40d4c9:	pop    esi
  40d4ca:	scas   al,BYTE PTR es:[edi]
  40d4cb:	call   0x5409:0xd02672f7
  40d4d2:	mov    eax,DWORD PTR [eax+0x44aa04ce]
  40d4d8:	pop    ss
  40d4d9:	xchg   ecx,eax
  40d4da:	je     0x40d4ff
  40d4dc:	add    eax,0xcb689c35
  40d4e1:	or     DWORD PTR [esi-0x65],esp
  40d4e4:	mov    bl,BYTE PTR ds:0xa883b673
  40d4ea:	add    al,0x2f
  40d4ec:	imul   ebp,DWORD PTR [eax+ebx*4+0x42c421b9],0x55
  40d4f4:	fdiv   st(6),st
  40d4f6:	sub    eax,DWORD PTR [ecx]
  40d4f8:	mov    eax,ebx
  40d4fa:	xor    al,0xbc
  40d4fc:	mov    dh,0xf0
  40d4fe:	ss push esp
  40d500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d501:	cmp    edx,esi
  40d503:	and    al,0x64
  40d505:	xor    ecx,edx
  40d507:	repz mov cl,0x89
  40d50a:	jnp    0x40d523
  40d50c:	sub    dh,ah
  40d50e:	mov    bl,BYTE PTR [eax]
  40d510:	mov    WORD PTR [esi+0x56577a29],cs
  40d516:	sbb    DWORD PTR [edi+esi*1-0x5d4279e],0x75bcba34
  40d521:	mov    ds:0x73f32544,al
  40d526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d527:	(bad)  
  40d52a:	cmp    BYTE PTR [eax-0x806153d],bh
  40d530:	ja     0x40d515
  40d532:	adc    BYTE PTR [ecx],0x50
  40d535:	mov    bh,ah
  40d537:	frstor [ebp+0x3831436c]
  40d53d:	xchg   ecx,eax
  40d53e:	jne    0x40d50d
  40d540:	xchg   edi,eax
  40d541:	jmp    0x11a3c026
  40d546:	jbe    0x40d4f1
  40d548:	call   0x13b6:0xc4cff960
  40d54f:	cwde   
  40d550:	mov    ds:0xa2421a74,eax
  40d555:	mov    bl,ch
  40d557:	cmp    bl,ch
  40d559:	push   edi
  40d55a:	jae    0x40d5d1
  40d55c:	ins    BYTE PTR es:[edi],dx
  40d55d:	ds pop esp
  40d55f:	jo     0x40d574
  40d561:	gs mov esi,0x74986fcf
  40d567:	in     eax,dx
  40d568:	jne    0x40d528
  40d56a:	scas   al,BYTE PTR es:[edi]
  40d56b:	jb     0x40d5c4
  40d56d:	push   cs
  40d56e:	adc    eax,DWORD PTR [edi-0x6c2a1404]
  40d574:	sub    ebx,ebx
  40d576:	seto   BYTE PTR [ebp+0x7140939a]
  40d57d:	mov    ecx,0x18865f65
  40d582:	fidiv  WORD PTR [edx+0x7c]
  40d585:	(bad)  
  40d586:	(bad)  
  40d588:	sar    DWORD PTR [edx],cl
  40d58a:	addr16 dec edi
  40d58c:	sub    bh,BYTE PTR [esi]
  40d58e:	pop    DWORD PTR [ecx+0x6871c5f5]
  40d594:	xor    eax,0x160cfb59
  40d599:	rcl    ebp,0xb5
  40d59c:	mov    ebp,0xa8c2a5e4
  40d5a1:	mov    edx,0x621bd6eb
  40d5a6:	jmp    0xc5a3:0xa7dabc68
  40d5ad:	mov    ?,WORD PTR [ebp-0x618e6900]
  40d5b3:	mov    ds:0xc6dd0bc6,al
  40d5b8:	jp     0x40d542
  40d5ba:	cmp    DWORD PTR [eax],ebp
  40d5bc:	push   edi
  40d5bd:	dec    edx
  40d5be:	mov    dh,0x81
  40d5c0:	push   0x7c6af6f1
  40d5c5:	scas   eax,DWORD PTR es:[edi]
  40d5c6:	push   esp
  40d5c7:	xor    bl,dl
  40d5c9:	das    
  40d5ca:	jg     0x40d5ae
  40d5cc:	arpl   WORD PTR [edx],di
  40d5ce:	xor    edx,eax
  40d5d0:	aad    0x18
  40d5d2:	pop    ds
  40d5d3:	pop    ecx
  40d5d4:	dec    eax
  40d5d5:	in     eax,dx
  40d5d6:	inc    eax
  40d5d7:	push   es
  40d5d8:	mov    ebp,0xeeddc246
  40d5dd:	rol    DWORD PTR [edx+0x4b],cl
  40d5e0:	jns    0x40d629
  40d5e2:	sbb    dh,BYTE PTR [eax+0x673a386]
  40d5e8:	ins    BYTE PTR es:[edi],dx
  40d5e9:	(bad)  
  40d5ea:	lea    edx,[ecx-0x6e604dbd]
  40d5f0:	mov    dh,0x96
  40d5f2:	cmc    
  40d5f3:	push   ds
  40d5f4:	pop    ecx
  40d5f5:	lods   eax,DWORD PTR ds:[esi]
  40d5f6:	mov    ebx,0xb09b16a2
  40d5fb:	mov    esp,0x24f1eee2
  40d600:	pop    ds
  40d601:	jmp    0x40d62f
  40d603:	push   es
  40d604:	xchg   ebx,eax
  40d605:	adc    bh,ch
  40d607:	mov    esp,0xd334be74
  40d60c:	mov    fs,WORD PTR [ecx-0x5859dd70]
  40d612:	adc    DWORD PTR [edx],esp
  40d614:	stos   BYTE PTR es:[edi],al
  40d615:	mov    ah,0x6d
  40d617:	mov    ch,0x5a
  40d619:	pop    ebp
  40d61a:	das    
  40d61b:	inc    esi
  40d61c:	cld    
  40d61d:	add    dh,BYTE PTR [esi-0x6e6868bb]
  40d623:	repnz sbb ah,BYTE PTR cs:[eax+0x67]
  40d628:	sbb    DWORD PTR [eax],eax
  40d62a:	(bad)  
  40d62b:	test   al,0x3
  40d62e:	adc    DWORD PTR [eax-0x1a],0xffffffa7
  40d632:	push   ecx
  40d633:	sub    ebx,DWORD PTR [ebp-0x7]
  40d636:	dec    esp
  40d637:	into   
  40d638:	fidiv  DWORD PTR [edx-0x68]
  40d63b:	or     al,0x24
  40d63d:	imul   ecx,DWORD PTR [edx+0x3f],0xffffff9a
  40d641:	xchg   edi,eax
  40d642:	and    ah,bh
  40d644:	aaa    
  40d645:	cmp    al,BYTE PTR [edx+eiz*2-0x47]
  40d649:	sar    DWORD PTR [esi+0x3e],cl
  40d64c:	fs jne 0x40d637
  40d64f:	cmp    eax,0xbf9f1d5
  40d654:	jmp    0x40d6c8
  40d656:	sub    al,dh
  40d658:	push   edx
  40d659:	and    eax,0x61ac7851
  40d65e:	lds    ebx,FWORD PTR [ebp-0x7b]
  40d661:	mov    esp,0x889aa384
  40d666:	and    al,0x9e
  40d668:	mov    esi,0xff6ead39
  40d66d:	rol    BYTE PTR [ecx-0x28],1
  40d670:	pop    ss
  40d671:	xchg   edx,eax
  40d672:	xchg   esp,eax
  40d673:	(bad)  
  40d675:	loopne 0x40d67a
  40d677:	cmp    ecx,ebx
  40d679:	imul   ecx,DWORD PTR [edi+0x6a],0xffffffbd
  40d67d:	dec    ebp
  40d67e:	inc    ebp
  40d67f:	xchg   edx,eax
  40d680:	push   ecx
  40d681:	sbb    dl,bl
  40d683:	dec    eax
  40d684:	add    DWORD PTR [edi-0x70],edi
  40d687:	or     BYTE PTR [eax],ah
  40d689:	mul    BYTE PTR [edx+ecx*1-0x286c26d2]
  40d690:	pop    ebp
  40d691:	inc    ebp
  40d692:	mov    ds:0xa84fdd25,ax
  40d698:	mov    eax,ds:0x1fe226df
  40d69d:	push   edi
  40d69e:	fisubr DWORD PTR [edx]
  40d6a0:	mov    dl,0x99
  40d6a2:	mov    al,0xbd
  40d6a4:	sbb    DWORD PTR [edx],0xffffff8d
  40d6a7:	gs dec esp
  40d6a9:	nop
  40d6aa:	dec    ebp
  40d6ab:	pop    edx
  40d6ac:	or     DWORD PTR [ebx+0x1b],esi
  40d6af:	in     al,0xf4
  40d6b1:	or     eax,0xe0655d8d
  40d6b6:	jg     0x40d697
  40d6b8:	push   0x6d
  40d6ba:	lea    eax,[edx-0x66]
  40d6bd:	fmul   QWORD PTR ds:0x6fa95085
  40d6c3:	sti    
  40d6c4:	dec    edx
  40d6c5:	(bad)  
  40d6c6:	xor    cl,al
  40d6c8:	cld    
  40d6c9:	pop    ebp
  40d6ca:	aam    0x2
  40d6cc:	ins    DWORD PTR es:[edi],dx
  40d6cd:	into   
  40d6ce:	mov    dl,0x70
  40d6d0:	pop    esi
  40d6d1:	inc    edx
  40d6d2:	ret    0x4de9
  40d6d5:	stos   DWORD PTR es:[edi],eax
  40d6d6:	dec    ebp
  40d6d7:	cld    
  40d6d8:	mov    esi,0xcd6a0575
  40d6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6de:	or     DWORD PTR [eax+0x23bdd9c0],eax
  40d6e4:	jne    0x40d72d
  40d6e6:	push   0xc
  40d6e8:	adc    al,BYTE PTR [ebx+0x31]
  40d6eb:	ret    0x2253
  40d6ee:	(bad)  
  40d6ef:	popa   
  40d6f0:	mov    ah,0xde
  40d6f2:	lods   al,BYTE PTR ds:[esi]
  40d6f3:	jnp    0x40d6db
  40d6f5:	lods   ax,WORD PTR ds:[esi]
  40d6f7:	adc    bl,ah
  40d6f9:	addr16 inc edi
  40d6fb:	leave  
  40d6fc:	leave  
  40d6fd:	mov    al,ds:0xc779050
  40d702:	(bad)  
  40d703:	xor    ebp,DWORD PTR [edx+0x6085e7ae]
  40d709:	ss call 0xd503:0x164c7987
  40d711:	push   esi
  40d712:	or     BYTE PTR [edx-0x50],ah
  40d715:	fist   DWORD PTR [eax-0x12]
  40d718:	mov    edx,esp
  40d71a:	sbb    BYTE PTR ds:0xc2932477,cl
  40d720:	fld    DWORD PTR ds:0x90ed845e
  40d726:	inc    eax
  40d727:	lock icebp 
  40d729:	and    edx,DWORD PTR [eax-0x5b6e6d01]
  40d72f:	push   ss
  40d730:	push   0xa2ae9a1f
  40d735:	adc    DWORD PTR [esi-0x77745ab9],ebx
  40d73b:	mov    eax,ds:0xb99af6fb
  40d740:	add    edx,DWORD PTR [ecx]
  40d742:	not    DWORD PTR [ebx-0x42]
  40d745:	inc    ebx
  40d746:	lock xchg esi,eax
  40d748:	out    dx,eax
  40d749:	add    DWORD PTR ds:0x1f8a6a54,ecx
  40d74f:	pop    es
  40d750:	dec    bp
  40d752:	ror    DWORD PTR [ebx+0x4d39430c],1
  40d758:	aas    
  40d759:	or     eax,0xbab2f700
  40d75e:	mov    ds:0xaaba5c02,eax
  40d763:	push   0x4822b378
  40d768:	fstp   DWORD PTR [esi+edi*4-0x6f]
  40d76c:	je     0x40d78b
  40d76e:	cmp    al,0x34
  40d770:	pop    ds
  40d771:	or     esp,DWORD PTR [ebx+0x15ad90b3]
  40d777:	jne    0x40d759
  40d779:	ds dec esi
  40d77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d77c:	stos   DWORD PTR es:[edi],eax
  40d77d:	(bad)  
  40d77e:	cmp    esp,DWORD PTR [esi+0x53]
  40d781:	sub    DWORD PTR [ebp-0x19],edi
  40d784:	push   ds
  40d785:	je     0x40d772
  40d787:	jg     0x40d802
  40d789:	pushf  
  40d78a:	sub    eax,0xa4ce47f2
  40d78f:	out    dx,al
  40d790:	sti    
  40d791:	(bad)  
  40d793:	mov    eax,ds:0xb0ea3824
  40d798:	cld    
  40d799:	fwait
  40d79a:	shl    BYTE PTR [ecx],1
  40d79c:	and    al,0x8f
  40d79e:	popa   
  40d79f:	gs jo  0x40d7f9
  40d7a2:	mov    ebx,0x42a36826
  40d7a7:	push   edi
  40d7a8:	(bad)  
  40d7a9:	mov    cl,0x3
  40d7ab:	jns    0x40d804
  40d7ad:	sti    
  40d7ae:	sub    DWORD PTR [ebx+0x36e7e2c1],ebx
  40d7b4:	es iret 
  40d7b6:	(bad)  
  40d7b7:	mov    eax,0x8ffd37ad
  40d7bc:	cmp    eax,0x8c8cd743
  40d7c1:	adc    al,0xf2
  40d7c3:	xchg   ebx,eax
  40d7c4:	fdivr  QWORD PTR [edx+0xb]
  40d7c7:	shl    DWORD PTR [ecx],0xf7
  40d7ca:	add    DWORD PTR [esi+0x69f61cd8],eax
  40d7d0:	pop    edx
  40d7d1:	es inc esp
  40d7d3:	test   DWORD PTR [edx-0x27bff1c3],esp
  40d7d9:	ret    0x2a6
  40d7dc:	cwde   
  40d7dd:	sbb    bl,BYTE PTR ds:0x8e6fee22
  40d7e3:	inc    esi
  40d7e4:	addr16 in al,0x3d
  40d7e7:	out    0xc1,eax
  40d7e9:	push   ss
  40d7ea:	fadd   QWORD PTR [ecx]
  40d7ec:	imul   eax,DWORD PTR [bx+si+0x3d],0x44481715
  40d7f4:	lahf   
  40d7f5:	test   DWORD PTR [ecx-0x4d],edi
  40d7f8:	icebp  
  40d7f9:	sbb    BYTE PTR [ecx],cl
  40d7fb:	retf   0xf983
  40d7fe:	xchg   edx,eax
  40d7ff:	int    0x9f
  40d801:	stos   BYTE PTR es:[edi],al
  40d802:	jae    0x40d849
  40d804:	add    eax,0xade70656
  40d809:	pop    ecx
  40d80a:	xchg   DWORD PTR ds:0x1218bf2b,ebp
  40d810:	mov    di,0x791
  40d814:	test   eax,0x54d42b72
  40d819:	addr16 mov dh,0x75
  40d81c:	and    DWORD PTR ss:[ebp-0x183a008f],esi
  40d823:	jge    0x40d7c8
  40d825:	push   ecx
  40d826:	xchg   esi,eax
  40d827:	lock clc 
  40d829:	fstp   TBYTE PTR [ebx]
  40d82b:	pop    esi
  40d82c:	ss adc al,0x1f
  40d82f:	jnp    0x40d881
  40d831:	js     0x40d7d5
  40d833:	fxch   st(4)
  40d835:	out    dx,al
  40d836:	rcl    BYTE PTR [eax+0x10c890ae],1
  40d83c:	aad    0xa
  40d83e:	mov    gs,ebp
  40d840:	lods   al,BYTE PTR ds:[esi]
  40d841:	or     eax,0xf1b7efc8
  40d846:	ret    
  40d847:	pop    ebx
  40d848:	(bad)  
  40d849:	mul    DWORD PTR [edi]
  40d84b:	inc    edx
  40d84c:	jge    0x40d829
  40d84e:	cmp    eax,0x6729d9ff
  40d853:	and    BYTE PTR [ebp-0x21d0cdab],0xc3
  40d85a:	xchg   ecx,eax
  40d85b:	push   esp
  40d85c:	sub    eax,0x718a62d1
  40d861:	sub    BYTE PTR [eax-0x3d],dl
  40d864:	add    dl,BYTE PTR [edx]
  40d866:	adc    ecx,DWORD PTR [ecx+esi*8-0x32c7959d]
  40d86d:	clc    
  40d86e:	xor    ah,BYTE PTR [ebp-0x74b89887]
  40d874:	sub    DWORD PTR [ebp+0xf658c85],eax
  40d87a:	dec    ebp
  40d87b:	scas   eax,DWORD PTR es:[edi]
  40d87c:	cmp    eax,0xe1d8de43
  40d881:	cmp    al,0x63
  40d883:	jb     0x40d8d1
  40d885:	je     0x40d8e8
  40d887:	jno    0x40d8e0
  40d889:	ret    
  40d88a:	imul   ebx,DWORD PTR [edx+0xb],0xffffffe2
  40d88e:	sbb    DWORD PTR [ecx],edx
  40d890:	sub    eax,0x784b4565
  40d895:	xchg   ecx,eax
  40d896:	sub    al,0xd5
  40d898:	pop    ebp
  40d899:	lods   al,BYTE PTR ds:[esi]
  40d89a:	cmc    
  40d89b:	fmul   QWORD PTR [edi]
  40d89d:	push   eax
  40d89e:	pop    ds
  40d89f:	adc    al,0x13
  40d8a1:	iret   
  40d8a2:	mov    eax,ebp
  40d8a4:	cld    
  40d8a5:	jns    0x40d91b
  40d8a7:	idiv   DWORD PTR ds:[edx-0x4c3a9cc5]
  40d8ae:	fucom  st(2)
  40d8b0:	pushf  
  40d8b1:	mov    BYTE PTR [ebx-0x2fb7176f],dh
  40d8b7:	fmul   st,st(0)
  40d8b9:	jmp    FWORD PTR [esp+ecx*8]
  40d8bc:	cmc    
  40d8bd:	jg     0x40d877
  40d8bf:	shl    DWORD PTR [ebp-0x4d],0x86
  40d8c3:	xor    DWORD PTR [ecx],eax
  40d8c5:	or     BYTE PTR [ecx],0x8c
  40d8c8:	int    0x93
  40d8ca:	adc    DWORD PTR [edx+ebp*4],ebx
  40d8cd:	inc    esp
  40d8ce:	mov    ds:0x8e8dbacb,al
  40d8d3:	mov    edi,0x40b080a3
  40d8d8:	jnp    0x40d8d0
  40d8da:	hlt    
  40d8db:	sbb    dl,BYTE PTR [eax+eiz*2+0x34]
  40d8df:	and    DWORD PTR [eax],edx
  40d8e1:	mov    al,0x63
  40d8e3:	dec    esi
  40d8e4:	cmp    BYTE PTR [ebx-0x5e],bl
  40d8e7:	and    al,0x37
  40d8e9:	scas   al,BYTE PTR es:[edi]
  40d8ea:	dec    ecx
  40d8eb:	sub    BYTE PTR [ebx-0x70ea96ab],0x9a
  40d8f2:	data16 sub dl,BYTE PTR [ebx+0x66]
  40d8f6:	dec    esp
  40d8f7:	shl    DWORD PTR [edi+ebx*8],cl
  40d8fa:	repnz mov al,0x35
  40d8fd:	sti    
  40d8fe:	rol    BYTE PTR [edx+0x124de8db],0x93
  40d905:	sar    BYTE PTR [ebx],0xe9
  40d908:	int    0x97
  40d90a:	rcl    eax,0x69
  40d90d:	xchg   ebp,eax
  40d90e:	fisubr DWORD PTR [edx+0x5f]
  40d911:	pop    es
  40d912:	push   ds
  40d913:	rcr    BYTE PTR [esi],1
  40d915:	ret    0x80be
  40d918:	inc    eax
  40d919:	not    DWORD PTR [ebx-0x478170c5]
  40d91f:	daa    
  40d920:	jnp    0x40d99b
  40d922:	(bad)  
  40d923:	call   0xe6daf4f6
  40d928:	cmp    al,0x8f
  40d92a:	xor    ebp,DWORD PTR [esi-0x30]
  40d92d:	in     al,dx
  40d92e:	dec    ebx
  40d92f:	loop   0x40d8f0
  40d931:	sti    
  40d932:	xor    DWORD PTR [ebp-0x74923a56],0xf86bd86e
  40d93c:	mov    bl,0xaf
  40d93e:	or     BYTE PTR es:[ecx+0x7cbc415e],dh
  40d945:	je     0x40d8eb
  40d947:	inc    esp
  40d948:	std    
  40d949:	mov    eax,ds:0x7dc49e0f
  40d94e:	jne    0x40d9c7
  40d950:	xchg   DWORD PTR [ebp+0x6eb0a3d0],ecx
  40d956:	and    bl,BYTE PTR [eax-0x26e1ca7c]
  40d95c:	xchg   esp,eax
  40d95d:	pusha  
  40d95e:	sbb    BYTE PTR ds:0x3c381146,cl
  40d964:	mov    eax,ss:0xe343f19e
  40d96a:	test   al,ch
  40d96c:	nop
  40d96d:	enter  0xa293,0x34
  40d971:	sbb    al,0x14
  40d973:	add    DWORD PTR [eax],esi
  40d975:	fidiv  WORD PTR [ecx+0x55f696c6]
  40d97b:	add    BYTE PTR [esi-0x53],0x8f
  40d97f:	mov    bh,0x70
  40d981:	adc    al,0xae
  40d983:	push   esp
  40d984:	cmp    bl,bh
  40d986:	cld    
  40d987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d988:	xchg   di,ax
  40d98a:	inc    edi
  40d98b:	dec    ecx
  40d98c:	jne    0x40d958
  40d98e:	mov    edx,0x57a06499
  40d993:	xchg   DWORD PTR [ebx+0x296abdc4],ecx
  40d999:	push   esi
  40d99a:	mov    ebp,0x803c7d36
  40d99f:	pop    ds
  40d9a0:	cmp    eax,0x21c4489d
  40d9a5:	loope  0x40d973
  40d9a7:	sbb    al,0x69
  40d9a9:	nop
  40d9aa:	and    ebx,DWORD PTR [esi]
  40d9ac:	mov    al,ds:0x5f4a58a
  40d9b1:	fsubr  QWORD PTR [ebx]
  40d9b3:	sbb    eax,0x47eaf6c0
  40d9b8:	xchg   ecx,eax
  40d9b9:	out    dx,al
  40d9ba:	stos   DWORD PTR es:[edi],eax
  40d9bb:	dec    ebx
  40d9bc:	jl     0x40d995
  40d9be:	cmp    ch,dl
  40d9c0:	test   DWORD PTR [ecx+0x4f],ebx
  40d9c3:	push   ds
  40d9c4:	jl     0x40da03
  40d9c6:	push   eax
  40d9c7:	xor    ecx,ebx
  40d9c9:	mov    dh,0x1b
  40d9cb:	scas   al,BYTE PTR es:[edi]
  40d9cc:	or     DWORD PTR [esi],ebx
  40d9ce:	add    cl,BYTE PTR [edi]
  40d9d0:	push   edx
  40d9d1:	xchg   ecx,eax
  40d9d2:	stos   DWORD PTR es:[edi],eax
  40d9d3:	aam    0x8
  40d9d5:	fsubr  DWORD PTR [eax+0x0]
  40d9d8:	shr    DWORD PTR [edi-0x6455e521],1
  40d9de:	fstp   TBYTE PTR [eax]
  40d9e0:	(bad)  
  40d9e1:	out    0xd0,al
  40d9e3:	hlt    
  40d9e4:	add    eax,0xfd5050fd
  40d9e9:	inc    ebx
  40d9ea:	push   ebx
  40d9eb:	dec    ebx
  40d9ec:	add    esi,eax
  40d9ee:	stos   DWORD PTR es:[edi],eax
  40d9ef:	dec    edx
  40d9f0:	dec    ebx
  40d9f1:	cwde   
  40d9f2:	sbb    cl,al
  40d9f4:	sbb    ebp,DWORD PTR [ecx-0xa]
  40d9f7:	call   0x649d1d76
  40d9fc:	fdivp  st(1),st
  40d9fe:	es add bl,0x55
  40da02:	jae    0x40da51
  40da04:	pop    cx
  40da06:	push   ebp
  40da07:	retf   
  40da08:	mov    edx,0xd6ce9868
  40da0d:	lods   eax,DWORD PTR ds:[esi]
  40da0e:	push   ebp
  40da0f:	jae    0x40d9a6
  40da11:	mov    ebx,0x1bfa0b5e
  40da16:	jae    0x40da13
  40da18:	call   0x7dcf:0xbedcfb22
  40da1f:	or     al,bl
  40da21:	imul   ecx,DWORD PTR [edx+eax*2],0xbca0813e
  40da28:	into   
  40da29:	jg     0x40da46
  40da2b:	dec    ebp
  40da2c:	mov    edx,0x7f5c98d9
  40da31:	in     eax,0x42
  40da33:	out    0x70,al
  40da35:	xor    ch,dl
  40da37:	and    BYTE PTR [ebx+0x1],0x5c
  40da3b:	loope  0x40da57
  40da3d:	stos   BYTE PTR es:[edi],al
  40da3e:	fmul   st,st(4)
  40da40:	les    ebp,FWORD PTR [ebx]
  40da42:	int3   
  40da43:	pop    eax
  40da44:	out    0x69,al
  40da46:	xor    ch,BYTE PTR [esi-0x72aadb5f]
  40da4c:	test   esi,ebx
  40da4e:	cwde   
  40da4f:	ret    
  40da50:	mov    BYTE PTR [edx],cl
  40da52:	fs inc edi
  40da54:	stos   BYTE PTR es:[edi],al
  40da55:	mov    eax,0xbfa885f2
  40da5a:	and    ch,dh
  40da5c:	dec    edx
  40da5d:	push   ecx
  40da5e:	mov    ds:0x382539f4,al
  40da63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da64:	adc    edx,eax
  40da66:	cld    
  40da67:	jae    0x40da34
  40da69:	and    esp,DWORD PTR fs:[edi-0x55]
  40da6d:	sub    esp,DWORD PTR [ecx]
  40da6f:	push   esi
  40da70:	icebp  
  40da71:	cwde   
  40da72:	xchg   edx,ecx
  40da74:	loopne 0x40daa5
  40da76:	adc    DWORD PTR [edi+0x30ead3e9],0xffffffde
  40da7d:	push   esp
  40da7e:	sbb    al,0x6d
  40da80:	xchg   ebp,eax
  40da81:	push   ds
  40da82:	or     BYTE PTR [esi],dh
  40da84:	(bad)  
  40da86:	(bad)  
  40da87:	lods   al,BYTE PTR ds:[esi]
  40da88:	aad    0x6f
  40da8a:	pop    ebp
  40da8b:	and    al,0x37
  40da8d:	imul   ecx,DWORD PTR [eax-0x1beb7a6c],0xb7fd3f02
  40da97:	dec    ebx
  40da98:	add    DWORD PTR [ecx+0x50],edi
  40da9b:	loopne 0x40da67
  40da9d:	jg     0x40da3b
  40da9f:	sub    al,0x10
  40daa1:	clc    
  40daa2:	dec    ebx
  40daa3:	fisub  WORD PTR [esi]
  40daa5:	dec    ecx
  40daa6:	inc    esi
  40daa7:	arpl   WORD PTR [ebp+ebp*1+0x31],bp
  40daab:	xor    DWORD PTR [ebx-0x64796c7c],eax
  40dab1:	mov    edx,0xf19b00a5
  40dab6:	(bad)
  40dab9:	push   0x7bbc8a
  40dabe:	add    dh,BYTE PTR [eax+0x44f1f0f7]
  40dac4:	push   0x72a01b56
  40dac9:	xchg   edi,eax
  40daca:	add    dh,BYTE PTR [edi-0x6146f6f8]
  40dad0:	sub    cl,BYTE PTR [esp+eiz*2+0x7e]
  40dad4:	pop    ebx
  40dad5:	ins    DWORD PTR es:[edi],dx
  40dad6:	mov    ah,0x3c
  40dad8:	dec    ebx
  40dad9:	push   ecx
  40dada:	shl    dl,0x8c
  40dadd:	mov    ch,0x35
  40dadf:	xchg   edx,eax
  40dae0:	jp     0x40db06
  40dae2:	mov    al,cs:0x53c24476
  40dae8:	inc    edx
  40dae9:	(bad)  
  40daea:	and    bh,BYTE PTR [esi-0x51]
  40daed:	repz and eax,0x96f262c7
  40daf3:	loopne 0x40db66
  40daf5:	mov    ax,WORD PTR [eax+ebx*1+0x46bebb48]
  40dafd:	shl    DWORD PTR [edi+0x2e],0x95
  40db01:	add    al,0xd3
  40db03:	call   0xdc340968
  40db08:	outs   dx,BYTE PTR ds:[esi]
  40db09:	xor    ah,BYTE PTR [ecx-0xe]
  40db0c:	xor    esp,DWORD PTR [eax-0x5]
  40db0f:	imul   BYTE PTR [esi+0x28521bf9]
  40db15:	mov    eax,0x540518b
  40db1a:	mov    al,BYTE PTR [ebx]
  40db1c:	push   edi
  40db1d:	mov    eax,ds:0x58901c74
  40db22:	in     al,0x5b
  40db24:	xor    DWORD PTR [eax-0x3c539cc2],esp
  40db2a:	sub    cl,BYTE PTR [edi-0x5e]
  40db2d:	aaa    
  40db2e:	sbb    eax,0xc57da13d
  40db33:	cld    
  40db34:	mov    ds,esi
  40db36:	aas    
  40db37:	and    al,0x21
  40db39:	(bad)  
  40db3a:	mov    edx,0x2725e945
  40db3f:	mov    ah,0x29
  40db41:	aaa    
  40db42:	xchg   edx,eax
  40db43:	pop    eax
  40db44:	retf   0x4b71
  40db47:	push   ecx
  40db48:	shl    BYTE PTR [edx],1
  40db4a:	js     0x40db30
  40db4c:	dec    eax
  40db4d:	or     BYTE PTR [edi+0x4],dh
  40db50:	jle    0x40daf5
  40db52:	adc    ah,ch
  40db54:	ins    BYTE PTR es:[edi],dx
  40db55:	sbb    eax,0xf028619f
  40db5a:	shr    BYTE PTR [ebp-0x6e48e755],cl
  40db60:	cs push 0xc029fd16
  40db66:	jl     0x40dafa
  40db68:	add    DWORD PTR [ecx+esi*2],ebp
  40db6b:	mov    WORD PTR [eax+0x43],ss
  40db6e:	ss mov dl,bl
  40db71:	cmp    DWORD PTR ds:0xfce9aeee,0x6f12e38d
  40db7b:	lea    ebx,[edx+ebp*2]
  40db7e:	dec    edx
  40db7f:	add    dl,cl
  40db81:	jecxz  0x40dbef
  40db83:	imul   eax,DWORD PTR ds:[edi+eiz*8-0x6d],0x6b
  40db89:	xchg   edx,eax
  40db8a:	out    0x72,al
  40db8c:	xchg   edx,eax
  40db8d:	arpl   WORD PTR [esi-0xb9131dc],bp
  40db93:	pop    edx
  40db94:	ror    ch,0xdd
  40db97:	pop    edx
  40db98:	test   BYTE PTR [edi+ecx*1-0x11827bc],cl
  40db9f:	test   al,0x1d
  40dba1:	and    DWORD PTR [eax+0x7b],0xffffffb4
  40dba5:	addr16 popa 
  40dba7:	pop    ebx
  40dba8:	jne    0x40dc14
  40dbaa:	test   BYTE PTR [eax+ecx*4],al
  40dbad:	add    eax,0xc2475e2
  40dbb2:	rol    BYTE PTR ds:[esi],1
  40dbb5:	data16 (bad) 
  40dbb7:	xlat   BYTE PTR ds:[ebx]
  40dbb8:	aam    0xe5
  40dbba:	xor    eax,0x1162e8f4
  40dbbf:	xor    al,0x66
  40dbc1:	pusha  
  40dbc2:	lods   eax,DWORD PTR ds:[esi]
  40dbc3:	push   es
  40dbc4:	mov    al,0xc2
  40dbc6:	sub    ah,cl
  40dbc8:	shl    DWORD PTR [eax+0x41bc64f0],1
  40dbce:	sub    dl,BYTE PTR [esi-0x57]
  40dbd1:	xor    BYTE PTR [eax],bl
  40dbd3:	mov    bh,0x98
  40dbd5:	std    
  40dbd6:	pusha  
  40dbd7:	scas   eax,DWORD PTR es:[edi]
  40dbd8:	inc    edi
  40dbd9:	pop    esp
  40dbda:	sbb    DWORD PTR [edi+0x52a0a634],0x8d521c5a
  40dbe4:	pop    eax
  40dbe5:	add    esp,esi
  40dbe7:	jg     0x40db9a
  40dbe9:	stos   DWORD PTR es:[edi],eax
  40dbea:	mov    ebx,0x4b183a17
  40dbef:	adc    ebx,DWORD PTR [ebp-0x1dd5d433]
  40dbf5:	in     al,dx
  40dbf6:	retf   
  40dbf7:	xor    al,0xc8
  40dbf9:	jmp    0x55fd:0x8c74a36e
  40dc00:	add    dh,ch
  40dc02:	arpl   dx,bp
  40dc04:	mov    dl,0x12
  40dc06:	push   esp
  40dc07:	fisubr DWORD PTR [ecx-0x71db6df3]
  40dc0d:	add    al,0xe9
  40dc0f:	inc    edi
  40dc10:	sub    DWORD PTR [edi],eax
  40dc12:	mul    DWORD PTR [ecx]
  40dc14:	mov    ebp,esp
  40dc16:	fst    DWORD PTR [ebx]
  40dc18:	leave  
  40dc19:	cmp    DWORD PTR [edi+edx*2+0xa863f81],edi
  40dc20:	mul    ch
  40dc22:	push   0xffffffdb
  40dc24:	ds and eax,0xb62d47d3
  40dc2a:	in     al,dx
  40dc2b:	test   al,0x25
  40dc2d:	mov    ebp,0x8977d99
  40dc32:	sub    dh,BYTE PTR [ebx-0x3656cee8]
  40dc38:	pop    es
  40dc39:	cs icebp 
  40dc3b:	pop    ss
  40dc3c:	push   esi
  40dc3d:	mov    ds:0x8d002e15,eax
  40dc42:	inc    eax
  40dc43:	(bad)  
  40dc44:	mov    ebp,0x65279931
  40dc49:	push   eax
  40dc4a:	push   edi
  40dc4b:	push   esi
  40dc4c:	push   cs
  40dc4d:	enter  0x7f5f,0xd2
  40dc51:	adc    bh,ch
  40dc53:	mov    cl,0x2d
  40dc55:	xchg   BYTE PTR [edi-0x1b],ah
  40dc58:	dec    eax
  40dc59:	pop    ebp
  40dc5a:	test   BYTE PTR [eax+0x50],al
  40dc5d:	jg     0x40dc7c
  40dc5f:	or     ebx,DWORD PTR [ebx-0x41]
  40dc62:	cmp    eax,0xde6854ef
  40dc67:	inc    esp
  40dc68:	add    eax,0x6c2abfdd
  40dc6d:	shl    edi,1
  40dc6f:	push   edi
  40dc70:	jmp    0xcd4:0x6598a29d
  40dc77:	jnp    0x40dc35
  40dc79:	ret    0x6e31
  40dc7c:	mov    BYTE PTR ds:0x2ae2fc8b,al
  40dc82:	je     0x40dd02
  40dc84:	fs rsm 
  40dc87:	mov    ch,0x7d
  40dc89:	(bad)  
  40dc8a:	mov    edi,0x159b748
  40dc8f:	xor    BYTE PTR [esi+0x642a7feb],bh
  40dc95:	pop    esi
  40dc96:	xor    eax,0xa724af2f
  40dc9b:	fistp  DWORD PTR [eax+edx*4-0x6e69f75d]
  40dca2:	mov    esp,0x6e324d3
  40dca7:	adc    bh,BYTE PTR [eax-0x79072bf4]
  40dcad:	out    dx,al
  40dcae:	repz sub DWORD PTR [edx],0xffffffad
  40dcb2:	cld    
  40dcb3:	mov    ds:0xd54a29ff,al
  40dcb8:	into   
  40dcb9:	jb     0x40dca8
  40dcbb:	shr    DWORD PTR [eax],1
  40dcbd:	mov    edx,0x1c2c370c
  40dcc2:	or     eax,0xbef1a525
  40dcc7:	call   FWORD PTR [eax+0x81f0046]
  40dccd:	or     ecx,ebp
  40dccf:	mov    ebx,0x252f7c60
  40dcd4:	sub    eax,0x4d1d8488
  40dcd9:	fs jno 0x40dd44
  40dcdc:	mov    ds:0xeb093267,eax
  40dce1:	jmp    0x40dd1e
  40dce3:	xor    eax,0xabdbf726
  40dce8:	cmp    DWORD PTR [ebp-0x6ca83e8d],eax
  40dcee:	cwde   
  40dcef:	push   ss
  40dcf0:	mov    es,WORD PTR [edx-0x38]
  40dcf3:	scas   eax,DWORD PTR es:[edi]
  40dcf4:	and    DWORD PTR ds:[edx],ebx
  40dcf7:	stos   DWORD PTR es:[edi],eax
  40dcf8:	pop    eax
  40dcf9:	repnz stos BYTE PTR es:[edi],al
  40dcfb:	jmp    0x40dc95
  40dcfd:	cwde   
  40dcfe:	scas   eax,DWORD PTR es:[edi]
  40dcff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd00:	enter  0x5949,0x51
  40dd04:	xor    al,0x81
  40dd06:	fisubr DWORD PTR [bp+0x12]
  40dd0a:	imul   edx,DWORD PTR [ebp-0x226486ff],0x7a3e3d90
  40dd14:	retf   
  40dd15:	mov    ch,bh
  40dd17:	mov    dl,0xce
  40dd19:	das    
  40dd1a:	shl    cl,0xad
  40dd1d:	push   edx
  40dd1e:	fxch   st(2)
  40dd20:	je     0x40dd94
  40dd22:	ja     0x40dd88
  40dd24:	xor    BYTE PTR [ecx+0x2e],0x2c
  40dd28:	cld    
  40dd29:	retf   0x85ab
  40dd2c:	xor    ch,bh
  40dd2e:	sub    eax,0x200159da
  40dd33:	ret    
  40dd34:	mov    ecx,0xf27c407f
  40dd39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3a:	dec    esp
  40dd3b:	add    eax,0x95da124a
  40dd40:	push   ecx
  40dd41:	sub    DWORD PTR [esi],ebp
  40dd43:	lock shr BYTE PTR [edi-0x63b9c63f],0x84
  40dd4b:	das    
  40dd4c:	fwait
  40dd4d:	push   DWORD PTR [ebx-0x7e]
  40dd50:	icebp  
  40dd51:	repz int 0x82
  40dd54:	inc    edx
  40dd55:	sub    cl,ch
  40dd57:	xor    BYTE PTR [ebp-0x73908042],dl
  40dd5d:	dec    esi
  40dd5e:	sbb    eax,0x808736b2
  40dd63:	fdiv   DWORD PTR [ebx+0x45]
  40dd66:	mov    esp,0x57c5d0e7
  40dd6b:	push   esp
  40dd6c:	out    0x68,al
  40dd6e:	push   es
  40dd6f:	test   eax,0x93565fb3
  40dd74:	imul   eax,DWORD PTR ds:0x7ff4038,0x7a
  40dd7b:	add    ah,bl
  40dd7d:	xchg   edx,eax
  40dd7e:	(bad)  
  40dd7f:	popa   
  40dd80:	ret    0x7dca
  40dd83:	pop    esp
  40dd84:	sbb    ebp,0xffffffdf
  40dd87:	add    BYTE PTR [ebx+0x6f],0x43
  40dd8b:	fidivr WORD PTR [ecx+0x180d865f]
  40dd91:	fidiv  WORD PTR [ebx]
  40dd93:	arpl   WORD PTR [edx+0x1e4b1e00],dx
  40dd99:	jo     0x40dd39
  40dd9b:	js     0x40dd23
  40dd9d:	mov    eax,gs
  40dd9f:	pop    ebx
  40dda0:	ja     0x40dde3
  40dda2:	mov    ecx,0xd81bdeee
  40dda7:	inc    ecx
  40dda8:	push   es
  40dda9:	mov    edx,0x7f118e67
  40ddae:	int    0xa4
  40ddb0:	pop    ebp
  40ddb1:	inc    ecx
  40ddb2:	popf   
  40ddb3:	(bad)  
  40ddb5:	ret    0x3dfb
  40ddb8:	mov    ah,0xf5
  40ddba:	icebp  
  40ddbb:	bound  ecx,QWORD PTR [edi]
  40ddbd:	pop    edx
  40ddbe:	sbb    al,0x83
  40ddc0:	ja     0x40de3d
  40ddc2:	jmp    0x62296113
  40ddc7:	cmp    BYTE PTR [edx+esi*4+0x34ba78e2],dl
  40ddce:	xor    ch,BYTE PTR [eax]
  40ddd0:	xchg   esp,eax
  40ddd1:	adc    ecx,esi
  40ddd3:	xor    DWORD PTR [bp+si+0x9a0],ebx
  40ddd8:	jl     0x40dde7
  40ddda:	push   edi
  40dddb:	pop    ebx
  40dddc:	idiv   DWORD PTR [edx]
  40ddde:	xor    DWORD PTR [ecx+0x4496ac08],ecx
  40dde4:	mov    DWORD PTR [edx],ebp
  40dde6:	cli    
  40dde7:	pop    edx
  40dde8:	jo     0x40dd87
  40ddea:	pop    ecx
  40ddeb:	xor    al,0x24
  40dded:	out    0x36,al
  40ddef:	ds mov esi,0xd035b9d3
  40ddf5:	xchg   esp,eax
  40ddf6:	in     al,0xcf
  40ddf8:	mov    edx,0xe802a36d
  40ddfd:	imul   edx,DWORD PTR [esi],0x92ed8493
  40de03:	xchg   edx,eax
  40de04:	xchg   ecx,eax
  40de05:	(bad)  
  40de06:	test   eax,0x4a590f86
  40de0b:	fnstenv [eax-0x73]
  40de0e:	xlat   BYTE PTR ds:[bx]
  40de10:	call   0x67cf:0x54c45fa5
  40de17:	xor    eax,0x8cb169a0
  40de1c:	int3   
  40de1d:	fdivr  QWORD PTR [edx+0x51]
  40de20:	sub    edx,ebp
  40de22:	lods   eax,DWORD PTR ds:[esi]
  40de23:	sahf   
  40de24:	xchg   ebx,eax
  40de25:	mov    ebp,0x29b030ca
  40de2a:	mov    bh,0xa3
  40de2c:	cmc    
  40de2d:	adc    eax,0x251de9a2
  40de32:	inc    esi
  40de33:	mov    bh,0xf1
  40de35:	mov    edx,0x4986cd3a
  40de3a:	mov    ds:0xc7dfd35f,eax
  40de3f:	sbb    esp,DWORD PTR [ebp+0x54]
  40de42:	sbb    al,0xae
  40de44:	jle    0x40de25
  40de46:	mov    edx,0xef4f5e29
  40de4b:	nop
  40de4c:	jle    0x40de69
  40de4e:	mov    edx,0x1d10b959
  40de53:	dec    edi
  40de54:	ret    0xd743
  40de57:	mov    ds:0x7f00128f,eax
  40de5c:	mov    DWORD PTR [ebx-0x690b1854],ebx
  40de62:	fimul  DWORD PTR gs:[edx+0x2cd380e7]
  40de69:	sahf   
  40de6a:	pop    ebp
  40de6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de6c:	ja     0x40decb
  40de6e:	into   
  40de6f:	add    al,0x9d
  40de71:	bnd cs jp 0x40de88
  40de75:	sub    dh,dh
  40de77:	(bad)  
  40de78:	call   0xd2cb:0x81d84625
  40de7f:	mov    ebx,0xbd8ccfb
  40de84:	fwait
  40de85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de86:	pop    ss
  40de87:	push   edi
  40de88:	inc    ebx
  40de89:	cdq    
  40de8a:	jnp    0x40de4c
  40de8c:	ins    BYTE PTR es:[edi],dx
  40de8d:	xor    eax,0x537aa059
  40de92:	sbb    ecx,DWORD PTR cs:[ecx-0x75]
  40de96:	sub    DWORD PTR [esi+0x357b91b2],esi
  40de9c:	enter  0x1ba6,0x2d
  40dea0:	jo     0x40de28
  40dea2:	mov    gs,WORD PTR [eax+edi*8]
  40dea5:	xor    esp,ebx
  40dea7:	imul   bh
  40dea9:	dec    ebx
  40deaa:	cmc    
  40deab:	inc    edx
  40deac:	call   0x1af24ab5
  40deb1:	cmp    al,0x86
  40deb3:	and    dh,BYTE PTR [ecx+0x57c919c9]
  40deb9:	jmp    0xdf23:0x347f6b23
  40dec0:	jp     0x40dec0
  40dec2:	or     DWORD PTR [eax],edx
  40dec4:	aad    0x13
  40dec6:	mov    edi,0xc4774a6f
  40decb:	and    bh,BYTE PTR [ecx+0x1c]
  40dece:	xor    DWORD PTR ds:0xbf20e5,edx
  40ded4:	popf   
  40ded5:	sbb    BYTE PTR [eax-0x6d],dh
  40ded8:	scas   eax,DWORD PTR es:[edi]
  40ded9:	mov    edi,0xd20f3d1e
  40dede:	sub    ch,bh
  40dee0:	psubq  mm7,QWORD PTR [ebp-0x52893637]
  40dee7:	stos   DWORD PTR es:[edi],eax
  40dee8:	mov    ecx,DWORD PTR [eax-0x5e]
  40deeb:	adc    eax,0x703d09ad
  40def0:	or     al,0x9f
  40def2:	mov    WORD PTR [ebp-0x66],gs
  40def5:	(bad)  
  40def6:	(bad)  
  40def7:	lock sbb eax,0xce592236
  40defd:	out    0xcc,eax
  40deff:	adc    eax,0x1d940e0b
  40df04:	ins    DWORD PTR es:[edi],dx
  40df05:	imul   DWORD PTR ds:0xa573e9c1
  40df0b:	test   BYTE PTR [eax],ch
  40df0d:	mov    ebp,ss
  40df0f:	shl    BYTE PTR [ecx+0x3310c220],1
  40df15:	cmpxchg DWORD PTR [edx],esp
  40df18:	mov    eax,ds:0x6f057380
  40df1d:	adc    DWORD PTR [eax-0x78],ebp
  40df20:	imul   BYTE PTR [ebx+eiz*4]
  40df23:	icebp  
  40df24:	push   0x182a32ef
  40df29:	mov    ecx,0xff29b483
  40df2e:	pop    eax
  40df2f:	cld    
  40df30:	mov    ah,0x18
  40df32:	repz dec edi
  40df34:	cwde   
  40df35:	adc    DWORD PTR [edi-0x25],ebx
  40df38:	ret    
  40df39:	push   ecx
  40df3a:	mov    ebp,0xec02dab
  40df3f:	into   
  40df40:	(bad)  
  40df41:	int    0xa2
  40df43:	inc    eax
  40df44:	out    dx,eax
  40df45:	into   
  40df46:	call   0x8efe:0xcb3ec638
  40df4d:	ja     0x40df94
  40df4f:	xchg   BYTE PTR [ecx-0x79],dh
  40df52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df53:	mov    al,ds:0xe705dec4
  40df58:	sub    ch,BYTE PTR [esi-0x353fbbe4]
  40df5e:	into   
  40df5f:	push   0xffffffce
  40df61:	dec    edx
  40df62:	das    
  40df63:	inc    esi
  40df64:	js     0x40df7a
  40df66:	add    al,0xe5
  40df68:	bswap  ecx
  40df6a:	jle    0x40dfaa
  40df6c:	push   ecx
  40df6d:	jmp    0x40df2f
  40df6f:	aam    0x62
  40df71:	imul   BYTE PTR [esi+esi*4+0x66]
  40df75:	xor    eax,DWORD PTR [edi-0x29]
  40df78:	jb     0x40dfa3
  40df7a:	inc    esp
  40df7b:	lea    edx,[ecx]
  40df7d:	add    dh,bl
  40df7f:	inc    eax
  40df80:	jg     0x40df9c
  40df82:	retf   
  40df83:	pushf  
  40df84:	dec    edi
  40df85:	cmp    al,0x7b
  40df87:	pop    ecx
  40df88:	aad    0x17
  40df8a:	mov    dl,BYTE PTR [ebx-0x4425464a]
  40df90:	aad    0x51
  40df92:	pop    es
  40df93:	aas    
  40df94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df95:	sti    
  40df96:	push   ebx
  40df97:	xchg   ebx,eax
  40df98:	in     al,dx
  40df99:	push   ds
  40df9a:	fdiv   DWORD PTR [edx-0x3f]
  40df9d:	push   esp
  40df9e:	mov    dh,0x4
  40dfa0:	mov    DWORD PTR [ecx+0x1],0xd19c16bd
  40dfa7:	jp     0x40df71
  40dfa9:	xchg   esi,eax
  40dfaa:	mov    bl,0xec
  40dfac:	aad    0x7f
  40dfae:	xchg   DWORD PTR [ebx-0x1c],ebp
  40dfb1:	sbb    DWORD PTR [ebx+eiz*4-0x45],esp
  40dfb5:	and    dl,BYTE PTR [ebp+0x60]
  40dfb8:	fmul   QWORD PTR es:[edi+0x7224eda9]
  40dfbf:	dec    eax
  40dfc0:	pop    edx
  40dfc1:	mov    cl,0x15
  40dfc3:	dec    ebp
  40dfc4:	(bad)  
  40dfc6:	fisub  WORD PTR [edx]
  40dfc8:	xchg   edx,eax
  40dfc9:	cmc    
  40dfca:	shr    BYTE PTR [ebx],0x8a
  40dfcd:	std    
  40dfce:	add    al,0xa4
  40dfd0:	fs cdq 
  40dfd2:	cdq    
  40dfd3:	enter  0xc1d,0x64
  40dfd7:	ins    DWORD PTR es:[edi],dx
  40dfd8:	fwait
  40dfd9:	aam    0x30
  40dfdb:	xor    BYTE PTR [esp+eax*1-0x69],0xa5
  40dfe0:	cwde   
  40dfe1:	enter  0xe361,0xac
  40dfe5:	call   0x5ef256d0
  40dfea:	(bad)  
  40dfeb:	test   DWORD PTR ds:[esi+eax*1],eax
  40dfef:	mov    cs:0x70aa7e37,al
  40dff5:	stc    
  40dff6:	jo     0x40e035
  40dff8:	addr16 adc eax,0x3780056c
  40dffe:	sbb    al,0xb5
  40e000:	call   0x691e95fe
  40e005:	imul   edi,DWORD PTR [ebx],0x20
  40e008:	push   cs
  40e009:	cmp    al,0xa7
  40e00b:	sar    DWORD PTR [eax+ebp*1-0x43],cl
  40e00f:	add    al,0x29
  40e011:	sub    BYTE PTR [bx+0x5f42],al
  40e016:	fs fs in eax,0x35
  40e01a:	jo     0x40dfaf
  40e01c:	cmp    DWORD PTR [ecx+eiz*1+0x41612ec3],esi
  40e023:	xchg   edx,eax
  40e024:	fisub  WORD PTR [edi+ecx*4]
  40e027:	xor    bh,ch
  40e029:	or     eax,0x91aab859
  40e02e:	(bad)  [ebp+0x72]
  40e031:	mov    edx,0xaa52ddb0
  40e036:	fstp   QWORD PTR [edi-0x5e]
  40e039:	outs   dx,DWORD PTR ds:[esi]
  40e03a:	mov    DWORD PTR [esi+ebp*1],edx
  40e03d:	mov    ah,BYTE PTR [esi+0x4e]
  40e040:	dec    ebp
  40e041:	xchg   edx,eax
  40e042:	xchg   esi,eax
  40e043:	and    al,0xe7
  40e045:	aad    0xbe
  40e047:	push   ds
  40e048:	cmp    BYTE PTR [esi],al
  40e04a:	(bad)  
  40e04b:	xchg   ebx,eax
  40e04c:	ret    
  40e04d:	sub    cl,BYTE PTR [ecx+0x13]
  40e050:	in     al,0xbd
  40e052:	jecxz  0x40dfe9
  40e054:	dec    edx
  40e055:	or     al,0xcd
  40e057:	out    0x64,al
  40e059:	xchg   DWORD PTR [eax-0x57],ecx
  40e05c:	xchg   BYTE PTR [ebx+0x49],ch
  40e05f:	mov    BYTE PTR [eax-0x6d3ca9cf],0x82
  40e066:	xchg   edx,eax
  40e067:	sbb    eax,0xd6a83c3a
  40e06c:	(bad)  
  40e06d:	mov    ebx,0x3b1db786
  40e072:	hlt    
  40e073:	imul   edx,eax,0xffffffb0
  40e076:	repz sbb DWORD PTR [edx],ecx
  40e079:	test   ebp,edi
  40e07b:	into   
  40e07c:	loope  0x40e010
  40e07e:	xchg   ebx,ecx
  40e080:	cld    
  40e081:	push   es
  40e082:	sub    eax,0x88d0a397
  40e087:	imul   esi,DWORD PTR [ebp-0x65],0x2d
  40e08b:	in     al,0xfd
  40e08d:	push   eax
  40e08e:	mov    WORD PTR [eax-0xfc50332],cs
  40e094:	inc    edx
  40e095:	push   ecx
  40e096:	mov    ss,WORD PTR [eax+ebp*2+0xa]
  40e09a:	mov    ds:0x2342ea75,al
  40e09f:	jbe    0x40e069
  40e0a1:	push   ecx
  40e0a2:	sbb    al,0xa3
  40e0a4:	aam    0xc7
  40e0a6:	nop
  40e0a7:	pop    bx
  40e0a9:	push   es
  40e0aa:	not    esi
  40e0ac:	push   es
  40e0ad:	push   cs
  40e0ae:	push   0xc50247f0
  40e0b3:	inc    ebp
  40e0b4:	(bad)  
  40e0b5:	push   ds
  40e0b6:	in     al,0xe8
  40e0b8:	pop    ss
  40e0b9:	aas    
  40e0ba:	into   
  40e0bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0bc:	inc    ecx
  40e0bd:	jge    0x40e054
  40e0bf:	add    esp,edi
  40e0c1:	xchg   esi,eax
  40e0c2:	test   eax,0xcf9b7dd7
  40e0c7:	sbb    ebp,DWORD PTR [eax]
  40e0c9:	cmp    bh,BYTE PTR [ebp+0x2bf4cfb0]
  40e0cf:	pop    ds
  40e0d0:	aaa    
  40e0d1:	(bad)  [eax+0x7fb84cf4]
  40e0d7:	cld    
  40e0d8:	dec    ebx
  40e0d9:	adc    eax,0xa65bc02e
  40e0de:	mov    edi,0x7b68358
  40e0e3:	popa   
  40e0e4:	jge    0x40e07e
  40e0e6:	repz jno 0x40e138
  40e0e9:	retf   0x5956
  40e0ec:	inc    eax
  40e0ed:	in     al,0x4
  40e0ef:	jl     0x40e099
  40e0f1:	adc    ebx,DWORD PTR [ecx+0x2b1c59f1]
  40e0f7:	xor    DWORD PTR [ebx+0x27],0x8b5a2bff
  40e0fe:	stos   BYTE PTR es:[edi],al
  40e0ff:	mov    ds:0x12fc0c1b,eax
  40e104:	cmp    BYTE PTR [ecx-0x1d],cl
  40e107:	jl     0x40e0bc
  40e109:	aas    
  40e10a:	ds adc dl,ch
  40e10d:	loopne 0x40e16f
  40e10f:	and    al,0xd4
  40e111:	or     ax,0x545c
  40e115:	popa   
  40e116:	xchg   esp,eax
  40e117:	and    bl,BYTE PTR [ecx-0x42e17bab]
  40e11d:	mov    WORD PTR [esi-0x6b7e0eb4],es
  40e123:	cmp    BYTE PTR [ecx+0x1a],al
  40e126:	scas   al,BYTE PTR es:[edi]
  40e127:	stos   BYTE PTR es:[edi],al
  40e128:	jl     0x40e127
  40e12a:	or     eax,edx
  40e12c:	xchg   dh,ah
  40e12e:	push   ebp
  40e12f:	adc    ah,BYTE PTR [eax-0x6c]
  40e132:	xor    eax,0xa0d87698
  40e137:	dec    eax
  40e138:	bound  esi,QWORD PTR [eax-0x3f0ba02c]
  40e13e:	pop    esp
  40e13f:	retf   
  40e140:	xchg   ebp,eax
  40e141:	retf   
  40e142:	mov    esi,0xcbd2ea94
  40e147:	out    dx,al
  40e148:	out    0xb4,al
  40e14a:	mov    gs,WORD PTR [eax]
  40e14c:	lock sbb BYTE PTR [ebp+ecx*2-0x34],bl
  40e151:	jo     0x40e12b
  40e153:	pop    esp
  40e154:	int3   
  40e155:	push   edx
  40e156:	out    dx,eax
  40e157:	jmp    0xfdea:0x64acbf05
  40e15e:	sbb    eax,0x94303c9c
  40e163:	fild   DWORD PTR [eax]
  40e165:	icebp  
  40e166:	test   BYTE PTR [ecx-0x2120ec7b],0x80
  40e16d:	mov    edx,0xae4610df
  40e172:	pop    ebx
  40e173:	pusha  
  40e174:	mov    ds:0x2baa7f7b,al
  40e179:	bound  esi,QWORD PTR [esi]
  40e17b:	xchg   ebx,eax
  40e17c:	jno    0x40e14f
  40e17e:	enter  0xc17b,0x82
  40e182:	inc    edx
  40e183:	mov    cs,WORD PTR [edi-0x18]
  40e186:	xchg   ebx,eax
  40e187:	mov    dh,0x61
  40e189:	repz pop edx
  40e18b:	ss push ss
  40e18d:	or     ecx,DWORD PTR [ecx-0x66]
  40e190:	les    esp,FWORD PTR [edi+0x2dae447f]
  40e196:	push   0xffffffe2
  40e198:	aam    0x6a
  40e19a:	arpl   WORD PTR ds:0x1c8898f1,ax
  40e1a0:	test   BYTE PTR [ecx],al
  40e1a2:	adc    BYTE PTR [edi+ecx*8+0x70108843],0xc4
  40e1aa:	or     DWORD PTR es:[ebx+0x63],ebx
  40e1ae:	mov    DWORD PTR [ebp+eax*4+0x1a],eax
  40e1b2:	mov    ?,WORD PTR [ecx+0x50]
  40e1b5:	cmp    al,0x21
  40e1b7:	lods   eax,DWORD PTR ds:[esi]
  40e1b8:	icebp  
  40e1b9:	xchg   ebx,eax
  40e1ba:	pop    ecx
  40e1bb:	xchg   ebx,eax
  40e1bc:	jle    0x40e1e2
  40e1be:	sti    
  40e1bf:	inc    esp
  40e1c0:	test   BYTE PTR [edi-0x31c6b687],bl
  40e1c6:	push   es
  40e1c7:	push   ecx
  40e1c8:	dec    ebx
  40e1c9:	sub    bh,dh
  40e1cb:	addr16 mov edi,0x9498342
  40e1d1:	addr16 test eax,0x9263b9f6
  40e1d7:	sti    
  40e1d8:	mov    ds:0x71b4cb3e,eax
  40e1dd:	mov    ds:0x47cf0eaf,al
  40e1e2:	mov    edx,0x6151e8b1
  40e1e7:	jle    0x40e1c1
  40e1e9:	sub    eax,0x3f0897f
  40e1ee:	jmp    FWORD PTR cs:[edx+0x58]
  40e1f2:	ins    DWORD PTR es:[edi],dx
  40e1f3:	or     BYTE PTR [esi-0xd],bl
  40e1f6:	add    cl,BYTE PTR [eax]
  40e1f8:	les    eax,FWORD PTR [ecx]
  40e1fa:	mov    ebp,0xc9f8d82d
  40e1ff:	jae    0x40e272
  40e201:	mov    edx,0x2fe83817
  40e206:	add    ah,BYTE PTR [ecx]
  40e208:	add    dl,BYTE PTR [eax+ebx*4+0x3849283f]
  40e20f:	jo     0x40e1f4
  40e211:	cmp    al,0x35
  40e213:	pop    ebx
  40e214:	jg     0x40e1b7
  40e216:	inc    esi
  40e217:	jecxz  0x40e289
  40e219:	je     0x40e1fe
  40e21b:	push   ebp
  40e21c:	(bad)  
  40e21d:	lods   al,BYTE PTR ds:[esi]
  40e21e:	mov    edx,0x1ae5fcd6
  40e223:	push   ss
  40e224:	shr    BYTE PTR [edx-0x3f7b803],1
  40e22a:	push   esi
  40e22b:	inc    esp
  40e22c:	jge    0x40e255
  40e22e:	int    0x86
  40e230:	xor    DWORD PTR [ecx-0x13],ecx
  40e233:	ins    BYTE PTR es:[edi],dx
  40e234:	loope  0x40e263
  40e236:	push   0xdbf8c65a
  40e23b:	cmp    DWORD PTR [ebx+0x55264779],eax
  40e241:	loope  0x40e1e3
  40e243:	cmp    ax,0x5424
  40e247:	fcomp  QWORD PTR [esi+ebx*4+0x3b]
  40e24b:	inc    esp
  40e24c:	jg     0x40e236
  40e24e:	lock imul eax,DWORD PTR [ecx],0x40
  40e252:	add    esp,DWORD PTR [ebx+0x6ff46126]
  40e258:	fiadd  WORD PTR [esi+0xd]
  40e25b:	sbb    ebx,DWORD PTR [ecx+0x7f]
  40e25e:	mov    esi,0x1e9f1031
  40e263:	mov    BYTE PTR [eax+ebx*8+0x5f948fd],dl
  40e26a:	aaa    
  40e26b:	and    al,0x4a
  40e26d:	imul   edx,DWORD PTR [edx+0x1ed4a70e],0xf4412a88
  40e277:	push   eax
  40e278:	out    0x5b,eax
  40e27a:	push   esp
  40e27b:	stos   DWORD PTR es:[di],eax
  40e27d:	rcr    BYTE PTR [ebx+0x7a],1
  40e280:	jns    0x40e29e
  40e282:	and    BYTE PTR [edx-0x33b52c56],ch
  40e288:	xchg   ebx,eax
  40e289:	lods   eax,DWORD PTR ds:[esi]
  40e28a:	fs mov ebx,0xd6cd2817
  40e290:	mov    eax,0xe843bed3
  40e295:	xchg   edi,eax
  40e296:	inc    ebx
  40e297:	mov    WORD PTR [ecx-0x80834a6],?
  40e29d:	sbb    cl,BYTE PTR [edx]
  40e29f:	adc    esi,DWORD PTR [esi-0x8271e4a]
  40e2a5:	push   ds
  40e2a6:	fs ins DWORD PTR es:[edi],dx
  40e2a8:	call   0xaa16dbb2
  40e2ad:	and    al,0xaf
  40e2af:	push   0x2d26afc1
  40e2b4:	mov    BYTE PTR ds:0xcbb27da9,cl
  40e2ba:	test   esi,0x7bcf5424
  40e2c0:	out    0x81,al
  40e2c2:	dec    edi
  40e2c3:	ins    BYTE PTR es:[edi],dx
  40e2c4:	and    al,BYTE PTR [eax-0xcf1374]
  40e2ca:	aaa    
  40e2cb:	fs cmc 
  40e2cd:	rcl    BYTE PTR [esi-0x2a],0x29
  40e2d1:	jno    0x40e306
  40e2d3:	ja     0x40e28b
  40e2d5:	les    edx,FWORD PTR [eax]
  40e2d7:	xchg   edi,eax
  40e2d8:	(bad)  
  40e2d9:	jmp    0x72602646
  40e2de:	gs mov dl,0xd7
  40e2e1:	cmp    al,bl
  40e2e3:	rol    DWORD PTR [esi+0x6765b72],cl
  40e2e9:	std    
  40e2ea:	sub    BYTE PTR [ecx],ah
  40e2ec:	pop    edi
  40e2ed:	mov    dl,0x57
  40e2ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2f0:	arpl   WORD PTR ds:[eax+ebx*2],si
  40e2f4:	in     al,0x1d
  40e2f6:	outs   dx,DWORD PTR ds:[esi]
  40e2f7:	jecxz  0x40e2a2
  40e2f9:	inc    eax
  40e2fa:	or     al,0xc9
  40e2fc:	mov    al,cs:0x3b00dfd0
  40e302:	js     0x40e376
  40e304:	mov    ah,0xbe
  40e306:	addps  xmm7,XMMWORD PTR [edx-0x2f]
  40e30a:	inc    ebp
  40e30b:	jg     0x40e298
  40e30d:	pop    ecx
  40e30e:	out    dx,al
  40e30f:	popa   
  40e310:	mov    al,gs:0xe88a54b0
  40e316:	mov    edi,0x336b5c7e
  40e31b:	mov    esp,0xd9680ed2
  40e320:	sub    esp,DWORD PTR [eax]
  40e322:	or     eax,0xdb1df10a
  40e327:	push   cs
  40e328:	(bad)  
  40e32a:	and    eax,0xc561a534
  40e32f:	xchg   BYTE PTR ds:0xacfd0219,dl
  40e335:	out    dx,al
  40e336:	or     BYTE PTR [edi],dh
  40e338:	adc    al,0xc1
  40e33a:	cmp    BYTE PTR [ebx-0x36],dh
  40e33d:	sbb    eax,0x25be67ec
  40e342:	rcl    BYTE PTR [ebx],cl
  40e344:	(bad)  [edi]
  40e346:	jmp    0x40e2ca
  40e348:	shr    DWORD PTR [esi+ebp*8],cl
  40e34b:	push   eax
  40e34c:	mov    al,0xe0
  40e34e:	mov    bh,0x5b
  40e350:	mov    ebp,DWORD PTR [eax]
  40e352:	ds dec esp
  40e354:	data16 jnp 0x40e370
  40e357:	cmp    BYTE PTR [edi+ecx*2+0xa],dl
  40e35b:	js     0x40e358
  40e35d:	stos   DWORD PTR es:[edi],eax
  40e35e:	mov    ebx,0xb5bc1eb3
  40e363:	jp     0x40e320
  40e365:	stc    
  40e366:	sbb    al,0x58
  40e368:	loope  0x40e396
  40e36a:	add    bl,BYTE PTR [edx+0x26]
  40e36d:	lods   al,BYTE PTR ds:[esi]
  40e36e:	jbe    0x40e341
  40e370:	aad    0x93
  40e372:	and    eax,0xc15e1e11
  40e377:	cmp    DWORD PTR [edx-0x5a281afc],0x7d
  40e37e:	mov    esi,0xba9d1b71
  40e383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e384:	adc    ebx,DWORD PTR [edi+0x56]
  40e387:	pop    esp
  40e388:	inc    ebx
  40e389:	jecxz  0x40e341
  40e38b:	jmp    0x40e3eb
  40e38d:	inc    esp
  40e38e:	xchg   esi,eax
  40e38f:	mov    bh,0x58
  40e391:	int    0x21
  40e393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e394:	cld    
  40e395:	sbb    DWORD PTR [ebp-0x32],ecx
  40e398:	nop
  40e399:	push   cs
  40e39a:	and    al,cl
  40e39c:	add    bh,dh
  40e39e:	mov    ch,0x31
  40e3a0:	std    
  40e3a1:	(bad)  
  40e3a2:	lock popf 
  40e3a4:	push   ss
  40e3a5:	add    esi,DWORD PTR [bp+0x4966]
  40e3aa:	cwde   
  40e3ab:	in     al,0x84
  40e3ad:	inc    esp
  40e3ae:	lods   al,BYTE PTR ds:[esi]
  40e3af:	sub    BYTE PTR [eax+0x683a319b],ch
  40e3b5:	lods   eax,DWORD PTR ds:[esi]
  40e3b6:	or     BYTE PTR [bp-0x6d54],bl
  40e3bb:	jnp    0x40e42e
  40e3bd:	inc    esp
  40e3be:	xor    eax,0x1189583b
  40e3c3:	jne    0x40e34e
  40e3c5:	add    eax,0xe25ae577
  40e3ca:	imul   ebp,DWORD PTR [ecx],0x2002e299
  40e3d0:	xchg   ebp,eax
  40e3d1:	mov    cs,WORD PTR [ebx+edx*4-0x4e0426a8]
  40e3d8:	dec    eax
  40e3d9:	adc    bl,ch
  40e3db:	sbb    al,0xd8
  40e3dd:	mov    ch,0x4b
  40e3df:	xor    ah,dl
  40e3e1:	test   BYTE PTR [edi+0x53],ch
  40e3e4:	adc    ebx,edi
  40e3e6:	out    0x93,al
  40e3e8:	pop    ecx
  40e3e9:	rcr    DWORD PTR ds:0x3e791713,cl
  40e3ef:	add    eax,0x68dabc6c
  40e3f4:	int3   
  40e3f5:	sbb    bl,BYTE PTR [edi-0x6625baaa]
  40e3fb:	lock cmp dl,BYTE PTR [eax+0x55d94df0]
  40e402:	lock xor al,0xf0
  40e405:	sti    
  40e406:	(bad)  
  40e407:	fisttp WORD PTR [esi+0x46]
  40e40a:	mov    ah,0x71
  40e40c:	bound  ebx,QWORD PTR [esi-0x2f]
  40e40f:	mov    DWORD PTR [esi],ebp
  40e411:	or     BYTE PTR [ebx+0x421a52fe],dl
  40e417:	retf   0xed9e
  40e41a:	mov    BYTE PTR [edi+eiz*8-0x46],bl
  40e41e:	rol    BYTE PTR [esi+0x4f],0x6
  40e422:	out    dx,eax
  40e423:	push   esi
  40e424:	repnz fdiv QWORD PTR [esi-0x2d]
  40e428:	loopne 0x40e3e2
  40e42a:	jg     0x40e3e1
  40e42c:	or     BYTE PTR [esi+eiz*4],0xb5
  40e430:	sub    ecx,DWORD PTR [eax]
  40e432:	stos   DWORD PTR es:[edi],eax
  40e433:	xchg   ebx,eax
  40e434:	call   0x545497d0
  40e439:	leave  
  40e43a:	dec    BYTE PTR [esi]
  40e43c:	jmp    FWORD PTR [eax]
  40e43e:	into   
  40e43f:	retf   0x80a6
  40e442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e443:	jle    0x40e455
  40e445:	aad    0x10
  40e447:	outs   dx,DWORD PTR ds:[esi]
  40e448:	mov    al,0x6c
  40e44a:	out    0xbf,eax
  40e44c:	jbe    0x40e492
  40e44e:	sbb    ebp,DWORD PTR [ebx+0x65]
  40e451:	mov    bh,0xa4
  40e453:	mov    bh,0xaa
  40e455:	dec    esi
  40e456:	adc    ch,0x17
  40e459:	mov    ebp,0x912cc6b1
  40e45e:	fyl2x  
  40e460:	popf   
  40e461:	adc    al,0x1e
  40e463:	pop    eax
  40e464:	sbb    dh,ah
  40e466:	(bad)  
  40e467:	push   ds
  40e468:	sbb    eax,esp
  40e46a:	ret    
  40e46b:	adc    ebx,DWORD PTR [ecx]
  40e46d:	(bad)  
  40e46e:	jle    0x40e4b3
  40e470:	outs   dx,BYTE PTR ds:[esi]
  40e471:	ret    0x971b
  40e474:	in     al,dx
  40e475:	out    dx,eax
  40e476:	push   esi
  40e477:	xchg   edx,eax
  40e478:	repz mov edi,0x91b8fef2
  40e47e:	sub    edx,ecx
  40e480:	leave  
  40e481:	stos   BYTE PTR es:[edi],al
  40e482:	push   eax
  40e483:	(bad)  
  40e484:	test   al,0x92
  40e486:	push   es
  40e487:	jg     0x40e508
  40e489:	or     DWORD PTR [ecx-0x9],edx
  40e48c:	pusha  
  40e48d:	jecxz  0x40e44f
  40e48f:	adc    cl,BYTE PTR [ebx-0x52]
  40e492:	xchg   edx,eax
  40e493:	dec    esi
  40e494:	dec    esp
  40e495:	das    
  40e496:	call   FWORD PTR ds:0x66911eb5
  40e49c:	loope  0x40e4b0
  40e49e:	rcr    ah,0x21
  40e4a1:	mov    BYTE PTR [ecx],ch
  40e4a3:	adc    esp,DWORD PTR [edi+0x65]
  40e4a6:	repnz pop esp
  40e4a8:	push   edi
  40e4a9:	nop
  40e4aa:	jg     0x40e483
  40e4ac:	imul   esp,DWORD PTR ds:0x87d48ae2,0x37
  40e4b3:	xor    DWORD PTR [edi],ecx
  40e4b5:	jae    0x40e466
  40e4b7:	pop    ebx
  40e4b8:	sub    DWORD PTR [edx+0x23],esp
  40e4bb:	push   ebp
  40e4bc:	je     0x40e47f
  40e4be:	hlt    
  40e4bf:	add    DWORD PTR [eax+0x1f],ebp
  40e4c2:	or     eax,0x13b05a04
  40e4c7:	cld    
  40e4c8:	mov    eax,ds:0xd26ae729
  40e4cd:	fnstenv [edx]
  40e4cf:	ja     0x40e532
  40e4d1:	test   ebx,ebx
  40e4d3:	scas   eax,DWORD PTR es:[edi]
  40e4d4:	call   0x86e534f
  40e4d9:	sub    al,0x68
  40e4db:	imul   edx,DWORD PTR [edx-0x1c],0x2fcd275b
  40e4e2:	shl    edx,0x6c
  40e4e5:	inc    edi
  40e4e6:	add    al,0x36
  40e4e8:	push   ebx
  40e4e9:	pop    esi
  40e4ea:	or     esp,DWORD PTR [ecx-0x2f]
  40e4ed:	mov    al,0x67
  40e4ef:	call   0xab7bbed3
  40e4f4:	cli    
  40e4f5:	shr    cl,cl
  40e4f7:	loope  0x40e492
  40e4f9:	inc    edx
  40e4fa:	xor    DWORD PTR [eax+0xe29cd7a],0xfffffffc
  40e501:	cmp    ebp,ecx
  40e503:	mov    esi,0x5ab1e1ea
  40e508:	pusha  
  40e509:	loop   0x40e519
  40e50b:	mov    bh,0x5f
  40e50d:	inc    esi
  40e50e:	xchg   esi,eax
  40e50f:	jno    0x40e492
  40e511:	sub    DWORD PTR [esp+esi*4],ebx
  40e514:	enter  0xd8bb,0xe3
  40e518:	cmp    ecx,esi
  40e51a:	push   ebx
  40e51b:	repnz inc ebp
  40e51d:	inc    ebx
  40e51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e51f:	inc    esi
  40e520:	fist   WORD PTR [ecx]
  40e522:	rcr    BYTE PTR ss:[ecx+edx*2-0x13],1
  40e527:	push   edi
  40e528:	test   al,0xc2
  40e52a:	pop    ebx
  40e52b:	hlt    
  40e52c:	in     al,dx
  40e52d:	aam    0x6f
  40e52f:	into   
  40e530:	mov    DWORD PTR [edi],ecx
  40e532:	mov    cl,BYTE PTR [ebp+eax*2-0x48]
  40e536:	mov    eax,0xc8c5961a
  40e53b:	jge    0x40e533
  40e53d:	add    BYTE PTR [ecx-0x5fa17b33],al
  40e543:	and    al,0x29
  40e545:	sub    edi,ecx
  40e547:	mov    al,0x88
  40e549:	fadd   QWORD PTR [edi-0x43]
  40e54c:	addr16 and esp,ebx
  40e54f:	pop    es
  40e550:	push   edx
  40e551:	xchg   esi,eax
  40e552:	xchg   ecx,eax
  40e553:	or     ah,ah
  40e555:	or     edx,edi
  40e557:	and    edi,DWORD PTR [ecx-0x77]
  40e55a:	inc    ebx
  40e55b:	add    eax,0x823c4e30
  40e560:	sbb    DWORD PTR [edx+0x16129f5a],0xffffffaa
  40e567:	adc    eax,DWORD PTR [esi]
  40e569:	mov    BYTE PTR [edi+0x57],al
  40e56c:	js     0x40e508
  40e56e:	jmp    0x8e1651f1
  40e573:	cmp    al,0xc9
  40e575:	sahf   
  40e576:	out    dx,eax
  40e577:	aas    
  40e578:	neg    DWORD PTR [ecx-0x4b3fbf1f]
  40e57e:	push   ecx
  40e57f:	inc    esp
  40e580:	std    
  40e581:	in     al,dx
  40e582:	push   ebp
  40e583:	outs   dx,BYTE PTR ds:[esi]
  40e584:	inc    eax
  40e585:	bound  ecx,QWORD PTR [edx+eax*2-0x3c]
  40e589:	cwde   
  40e58a:	test   eax,0x4e9769c5
  40e58f:	push   ebp
  40e590:	popf   
  40e591:	xchg   esi,eax
  40e592:	add    ebx,0x9
  40e595:	push   ds
  40e596:	mov    ah,BYTE PTR ds:0x3bd67efb
  40e59c:	and    al,0x27
  40e59e:	sbb    ch,al
  40e5a0:	out    dx,al
  40e5a1:	and    al,0x3d
  40e5a3:	push   ds
  40e5a4:	test   eax,0x30675af8
  40e5a9:	fidiv  WORD PTR [eax+0x40]
  40e5ac:	popf   
  40e5ad:	and    DWORD PTR [edi+0x428c4ee5],edi
  40e5b3:	jge    0x40e5be
  40e5b5:	fwait
  40e5b6:	sti    
  40e5b7:	stos   BYTE PTR es:[edi],al
  40e5b8:	shl    ebp,1
  40e5ba:	aam    0xc2
  40e5bc:	sub    BYTE PTR [eax-0x62],0x98
  40e5c0:	dec    eax
  40e5c1:	cmp    dl,cl
  40e5c3:	pop    edx
  40e5c4:	aam    0x13
  40e5c6:	xchg   ebp,eax
  40e5c7:	retf   
  40e5c8:	push   0x60
  40e5ca:	mov    ds:0x632bcf04,al
  40e5cf:	cs das 
  40e5d1:	imul   ebx,DWORD PTR [edx],0x44be0370
  40e5d7:	cli    
  40e5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5d9:	js     0x40e5da
  40e5db:	scas   eax,DWORD PTR es:[edi]
  40e5dc:	fcmovne st,st(5)
  40e5de:	cmp    edi,ecx
  40e5e0:	aaa    
  40e5e1:	or     DWORD PTR [ecx],ecx
  40e5e3:	inc    ebx
  40e5e4:	lock sub eax,DWORD PTR [ecx]
  40e5e7:	mov    ds,WORD PTR [edx+0x5b14c4ad]
  40e5ed:	jg     0x40e5df
  40e5ef:	(bad)  
  40e5f1:	jle    0x40e626
  40e5f3:	xchg   ecx,eax
  40e5f4:	shl    BYTE PTR [ecx],cl
  40e5f6:	push   ebp
  40e5f7:	in     eax,0x2f
  40e5f9:	cmp    ah,BYTE PTR [ebp+eax*1-0xa1c5c72]
  40e600:	inc    ebp
  40e601:	mov    al,ds:0x8dbcca25
  40e606:	arpl   WORD PTR [ebp+0x23],cx
  40e609:	(bad)  
  40e60a:	dec    BYTE PTR [ebx+0x2]
  40e60d:	xchg   ebp,eax
  40e60e:	ds xchg esi,eax
  40e610:	les    ecx,FWORD PTR [ebx]
  40e612:	bnd jmp 0x40e5ff
  40e615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e616:	cli    
  40e617:	push   eax
  40e618:	and    al,0x52
  40e61a:	aas    
  40e61b:	xchg   esi,eax
  40e61c:	push   ecx
  40e61d:	scas   al,BYTE PTR es:[edi]
  40e61e:	stos   DWORD PTR es:[edi],eax
  40e61f:	xor    ebx,DWORD PTR [eax]
  40e621:	out    dx,eax
  40e622:	inc    BYTE PTR [edi]
  40e624:	lahf   
  40e625:	jmp    0x8ce28b75
  40e62a:	ins    WORD PTR es:[edi],dx
  40e62c:	stos   DWORD PTR es:[edi],eax
  40e62d:	adc    al,0xad
  40e62f:	stc    
  40e630:	or     BYTE PTR [esi+0x1f],dh
  40e633:	jecxz  0x40e5b5
  40e635:	mov    dh,0xb5
  40e637:	ins    DWORD PTR es:[edi],dx
  40e638:	and    al,0x15
  40e63a:	jne    0x40e613
  40e63c:	adc    ah,ch
  40e63e:	or     cl,BYTE PTR [eax+edi*2]
  40e641:	sub    BYTE PTR [ebp+0xa4a8e74],dh
  40e647:	fcom   DWORD PTR [ebx]
  40e649:	cmp    eax,0x3f7791d8
  40e64e:	xor    dh,BYTE PTR [edx]
  40e650:	retf   
  40e651:	push   es
  40e652:	adc    esi,ecx
  40e654:	push   edx
  40e655:	(bad)  
  40e656:	or     BYTE PTR [ecx-0x4e2f4876],al
  40e65c:	pop    esp
  40e65d:	daa    
  40e65e:	fbld   TBYTE PTR [esi-0x17bfbe66]
  40e664:	ret    
  40e665:	pop    edx
  40e666:	mov    ebp,0xb1cc07e6
  40e66b:	dec    ecx
  40e66c:	cmp    al,0xad
  40e66e:	sbb    eax,0x35082de8
  40e673:	push   edi
  40e674:	adc    ebx,edi
  40e676:	aaa    
  40e677:	push   0x52
  40e679:	rcl    DWORD PTR [edx+esi*8-0x4d83ddfa],cl
  40e680:	jbe    0x40e684
  40e682:	rol    esp,0x66
  40e685:	add    bl,al
  40e687:	add    DWORD PTR [ebp-0x44],esi
  40e68a:	pusha  
  40e68b:	inc    eax
  40e68c:	call   0x862e1c22
  40e691:	dec    eax
  40e692:	rol    DWORD PTR [eax+0x41],cl
  40e695:	push   es
  40e696:	inc    esp
  40e697:	nop
  40e698:	or     al,0x3e
  40e69a:	xchg   DWORD PTR [eax-0x69],ebp
  40e69d:	je     0x40e694
  40e69f:	(bad)  
  40e6a0:	ins    BYTE PTR es:[edi],dx
  40e6a1:	mov    dl,0xdf
  40e6a3:	in     eax,dx
  40e6a4:	and    ah,dl
  40e6a6:	push   ebp
  40e6a7:	std    
  40e6a8:	test   DWORD PTR [esi],ebp
  40e6aa:	scas   al,BYTE PTR es:[edi]
  40e6ab:	jmp    0x50592377
  40e6b0:	cdq    
  40e6b1:	inc    edx
  40e6b2:	push   cs
  40e6b3:	fs loop 0x40e64f
  40e6b6:	mov    eax,ds:0xf5a99ea
  40e6bb:	xchg   esi,eax
  40e6bc:	test   DWORD PTR [ebp+0x79b72759],0x8f7e66b8
  40e6c6:	test   BYTE PTR [eax+0x3728a61f],ch
  40e6cc:	out    dx,eax
  40e6cd:	cmp    BYTE PTR [edx-0x16],bh
  40e6d0:	rcl    eax,1
  40e6d2:	xchg   edx,eax
  40e6d3:	mov    bl,0xfd
  40e6d5:	sti    
  40e6d6:	xchg   esp,eax
  40e6d7:	xchg   ebp,eax
  40e6d8:	adc    al,0x30
  40e6da:	inc    eax
  40e6db:	daa    
  40e6dc:	pop    esi
  40e6dd:	addr16 aas 
  40e6df:	fsubp  st(7),st
  40e6e1:	or     BYTE PTR [eax-0x509cbdff],cl
  40e6e7:	jmp    0x56d2:0xb4b4e1c9
  40e6ee:	push   ss
  40e6ef:	call   0xabaf3553
  40e6f4:	(bad)  
  40e6f5:	jmp    0xd720e1f9
  40e6fa:	mov    ds:0x7ba4fcfc,al
  40e6ff:	sub    eax,0x23df9036
  40e704:	ret    0x68bf
  40e707:	(bad)
  40e70b:	cwde   
  40e70c:	dec    edi
  40e70d:	in     eax,dx
  40e70e:	ja     0x40e754
  40e710:	cs mov ebp,0x133f83ab
  40e716:	jl     0x40e6f6
  40e718:	mov    ecx,0x39ee046c
  40e71d:	adc    eax,0x681cd18b
  40e722:	adc    BYTE PTR ds:[bp-0x5466],bl
  40e728:	ret    
  40e729:	(bad)  
  40e72a:	clc    
  40e72b:	or     al,BYTE PTR [eax]
  40e72d:	jno    0x40e6ce
  40e72f:	je     0x40e6c2
  40e731:	mov    eax,0xbe46a845
  40e736:	aaa    
  40e737:	mov    edi,0xc3b92779
  40e73c:	mov    bl,0xa6
  40e73e:	dec    esp
  40e73f:	frstor [ebp+0x7c]
  40e742:	test   eax,0x7f1476f6
  40e747:	adc    DWORD PTR [ebp+0x3e],ebx
  40e74a:	add    eax,0x43d32de8
  40e74f:	pop    ss
  40e750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e751:	push   ecx
  40e752:	repnz lahf 
  40e754:	or     eax,0x6ac972bd
  40e759:	imul   dl
  40e75b:	cmp    al,0xe6
  40e75d:	(bad)  [ebx+edx*2]
  40e760:	repz push esp
  40e762:	xchg   ebx,eax
  40e763:	xor    dh,BYTE PTR [ebx-0x690fae4b]
  40e769:	adc    ebx,DWORD PTR [edi+0x63]
  40e76c:	mov    esp,0x622e728c
  40e771:	pop    ss
  40e772:	jne    0x40e774
  40e774:	mov    dl,0x85
  40e776:	adc    BYTE PTR [esi],cl
  40e778:	cdq    
  40e779:	ds or  al,0x5e
  40e77c:	xor    ebx,DWORD PTR [edx]
  40e77e:	mov    ebp,0xf14c3824
  40e783:	ds xchg esi,eax
  40e785:	(bad)  
  40e787:	mov    ds:0xc8a853af,eax
  40e78c:	addr16 call 0xd536:0xd966efb0
  40e794:	sbb    eax,0x6306ed93
  40e799:	int3   
  40e79a:	call   0x8150:0x69f0f449
  40e7a1:	nop
  40e7a2:	jb     0x40e754
  40e7a4:	outs   dx,BYTE PTR ds:[esi]
  40e7a5:	pop    ss
  40e7a6:	xor    BYTE PTR [edx-0x2f],dh
  40e7a9:	fs pushf 
  40e7ab:	pop    ss
  40e7ac:	inc    ebx
  40e7ad:	mov    al,0x65
  40e7af:	inc    ebx
  40e7b0:	nop
  40e7b1:	pop    ebp
  40e7b2:	les    esp,FWORD PTR [eax]
  40e7b4:	or     DWORD PTR [edx+0x3e],0xe780f6d4
  40e7bb:	xchg   ebp,eax
  40e7bc:	in     eax,dx
  40e7bd:	add    edi,edi
  40e7bf:	add    al,0x8c
  40e7c1:	adc    al,0xd9
  40e7c3:	mov    edx,0xca06f74c
  40e7c8:	pushaw 
  40e7ca:	pop    esi
  40e7cb:	aas    
  40e7cc:	mov    edi,0xfec20157
  40e7d1:	dec    ecx
  40e7d2:	xchg   edi,eax
  40e7d3:	add    BYTE PTR [ecx+0x13],dh
  40e7d6:	shr    edi,1
  40e7d8:	pop    esp
  40e7d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7da:	lods   eax,DWORD PTR ds:[esi]
  40e7db:	xchg   ebx,edi
  40e7dd:	pop    eax
  40e7de:	jle    0x40e7e0
  40e7e0:	jns    0x40e7fe
  40e7e2:	xor    BYTE PTR [ebp-0x5c0a664d],ch
  40e7e8:	aad    0x4b
  40e7ea:	cdq    
  40e7eb:	test   BYTE PTR [edx+0x3f],ch
  40e7ee:	xchg   edx,eax
  40e7ef:	rcl    BYTE PTR [ecx+0x1467bd60],1
  40e7f5:	nop
  40e7f6:	jecxz  0x40e848
  40e7f8:	test   DWORD PTR [eax],ecx
  40e7fa:	idiv   DWORD PTR [ebp+0x68eba07f]
  40e800:	xor    ch,0x62
  40e803:	jg     0x40e856
  40e805:	inc    BYTE PTR [ebp+0x69771d4d]
  40e80b:	push   edx
  40e80c:	pop    ds
  40e80d:	dec    ebx
  40e80e:	jge    0x40e7fc
  40e810:	ret    0x5e03
  40e813:	scas   eax,DWORD PTR es:[edi]
  40e814:	int3   
  40e815:	fdiv   DWORD PTR [ebp-0x67d48ec0]
  40e81b:	lds    ecx,FWORD PTR [edi-0x72023dc4]
  40e821:	xchg   esp,eax
  40e822:	add    al,0xa3
  40e824:	inc    esi
  40e825:	fld    st(6)
  40e827:	sub    dh,BYTE PTR [ebx]
  40e829:	mov    DWORD PTR [edx],ebp
  40e82b:	lods   al,BYTE PTR ds:[esi]
  40e82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e82d:	fbld   TBYTE PTR [esi]
  40e82f:	les    esp,FWORD PTR [esi-0x74]
  40e832:	(bad)  
  40e833:	ins    BYTE PTR es:[edi],dx
  40e834:	jecxz  0x40e800
  40e836:	adc    al,0xa2
  40e838:	jnp    0x40e846
  40e83a:	sbb    al,0x49
  40e83c:	jbe    0x40e820
  40e83e:	loop   0x40e844
  40e840:	rcl    BYTE PTR [ebx-0x10e59405],1
  40e846:	stos   BYTE PTR es:[edi],al
  40e847:	xchg   esp,eax
  40e848:	mov    eax,DWORD PTR [ebx+edx*1]
  40e84b:	ins    DWORD PTR es:[edi],dx
  40e84c:	pop    eax
  40e84d:	sbb    al,0x44
  40e84f:	loop   0x40e84a
  40e851:	sbb    ah,BYTE PTR [eax+0x36c7eabb]
  40e857:	int3   
  40e858:	mov    bh,0xd9
  40e85a:	(bad)  
  40e85b:	pop    edx
  40e85c:	cmc    
  40e85d:	leave  
  40e85e:	jns    0x40e8ca
  40e860:	scas   al,BYTE PTR es:[edi]
  40e861:	ret    
  40e862:	mov    ss,WORD PTR [eax+0x29]
  40e865:	inc    ebx
  40e866:	test   esp,0xf0a54c62
  40e86c:	pop    edi
  40e86d:	mov    dh,dl
  40e86f:	inc    esp
  40e870:	and    al,0x6f
  40e872:	mov    WORD PTR [edi],?
  40e874:	mov    al,ds:0xab9221ce
  40e879:	pop    ecx
  40e87a:	aad    0xd0
  40e87c:	cmp    dh,BYTE PTR [ebp+0x318079e3]
  40e882:	or     DWORD PTR [edx-0xa6b87cc],eax
  40e888:	retf   0xd367
  40e88b:	sub    DWORD PTR [esp+edx*4],ecx
  40e88e:	das    
  40e88f:	and    dl,ah
  40e891:	cmp    eax,0x77602f2d
  40e896:	mov    dh,0xfc
  40e898:	mov    ds:0xa52b143e,eax
  40e89d:	icebp  
  40e89e:	or     eax,0x9460de24
  40e8a3:	push   0xd
  40e8a5:	hlt    
  40e8a6:	xchg   esp,eax
  40e8a7:	mov    cl,0xba
  40e8a9:	aam    0x9a
  40e8ab:	je     0x40e8a7
  40e8ad:	push   cs
  40e8ae:	and    ebx,edi
  40e8b0:	mov    eax,0x63d81db6
  40e8b5:	add    DWORD PTR [esp+ecx*1],esi
  40e8b8:	jg     0x40e87c
  40e8ba:	inc    ebp
  40e8bb:	imul   ecx,DWORD PTR [ecx-0x1f5e2027],0xffffffc9
  40e8c2:	and    dl,BYTE PTR [edi]
  40e8c4:	pop    edi
  40e8c5:	lds    ebx,FWORD PTR [edx]
  40e8c7:	nop    esp
  40e8ca:	arpl   WORD PTR ss:0xec992a51,cx
  40e8d1:	(bad)  
  40e8d2:	sti    
  40e8d3:	lock and BYTE PTR [eax],0xbe
  40e8d7:	pop    ecx
  40e8d8:	aaa    
  40e8d9:	jbe    0x40e8c3
  40e8db:	mov    ds:0x4ebcf864,eax
  40e8e0:	fsubrp st(4),st
  40e8e2:	or     eax,0xdeb85920
  40e8e7:	rcr    ebx,0x7a
  40e8ea:	push   edi
  40e8eb:	adc    eax,0xd0d943e9
  40e8f0:	test   BYTE PTR [ebx+0x51f3a7c3],ch
  40e8f6:	leave  
  40e8f7:	lods   al,BYTE PTR ds:[esi]
  40e8f8:	fwait
  40e8f9:	mov    eax,0x1d939fc5
  40e8fe:	mov    ah,BYTE PTR [ebp+0x7ef10a84]
  40e904:	(bad)  
  40e905:	pop    ds
  40e906:	fwait
  40e907:	adc    edx,eax
  40e909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e90a:	stc    
  40e90b:	daa    
  40e90c:	clc    
  40e90d:	dec    eax
  40e90e:	push   edx
  40e90f:	push   eax
  40e910:	adc    al,0xf3
  40e912:	(bad)  
  40e913:	jmp    0x40e8d3
  40e915:	call   DWORD PTR [esi]
  40e917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e918:	adc    eax,0x5883998
  40e91d:	xchg   esp,eax
  40e91e:	(bad)
  40e922:	popa   
  40e923:	dec    edi
  40e924:	cli    
  40e925:	sbb    bl,cl
  40e927:	dec    eax
  40e928:	jbe    0x40e982
  40e92a:	in     eax,0x58
  40e92c:	sbb    dl,BYTE PTR ds:0x7607adcd
  40e932:	and    edi,esp
  40e934:	popf   
  40e935:	dec    ebp
  40e936:	inc    ecx
  40e937:	adc    eax,0xff8c3eab
  40e93c:	xor    BYTE PTR [ebx+edi*2],0x5f
  40e940:	or     eax,0x58e2f61e
  40e945:	rol    esi,cl
  40e947:	inc    edx
  40e948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e949:	out    dx,al
  40e94a:	mov    edx,DWORD PTR [ecx+eiz*1+0x6b]
  40e94e:	mov    bp,ds
  40e951:	xor    DWORD PTR ss:[eax],0x75eb9cf4
  40e958:	xor    al,0xce
  40e95a:	sub    DWORD PTR [edi],edx
  40e95c:	jmp    0xca7cc2ad
  40e961:	pop    es
  40e962:	shl    BYTE PTR [ebx+0x31],1
  40e965:	mov    ds:0xcf31789,eax
  40e96a:	mov    ebx,0xafd5d271
  40e96f:	stos   DWORD PTR es:[edi],eax
  40e970:	mov    dl,al
  40e972:	mov    ecx,DWORD PTR [esi]
  40e974:	push   ecx
  40e975:	xor    eax,0x1dac16f8
  40e97a:	mov    BYTE PTR [edx+edi*4+0x1d499364],bh
  40e981:	mov    edi,ds
  40e983:	adc    ecx,DWORD PTR [ebp+0x7f]
  40e986:	les    esp,FWORD PTR [edx]
  40e988:	sahf   
  40e989:	jne    0x40e92c
  40e98b:	nop
  40e98c:	int3   
  40e98d:	mov    dh,BYTE PTR [edx]
  40e98f:	sub    al,0xda
  40e991:	adc    al,0xb5
  40e993:	mov    esp,0x3fc7b3c
  40e998:	mov    edi,DWORD PTR [eax+0x3c]
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	add    al,0xa1
  40ecee:	inc    eax
  40ecef:	dec    eax
  40ecf0:	jl     0x40ecbe
  40ecf2:	jl     0x40ed70
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	loope  0x40ec8e
  40ecfa:	ins    DWORD PTR es:[edi],dx
  40ecfb:	fwait
  40ecfc:	ret    
  40ecfd:	jno    0x40ec9a
  40ecff:	nop
  40ed00:	(bad)  
  40ed02:	inc    esi
  40ed03:	push   0xffffffd2
  40ed05:	pop    ds
  40ed06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed07:	mov    al,0x8e
  40ed09:	jnp    0x40ecb4
  40ed0b:	add    dh,BYTE PTR [edx+0x66]
  40ed0e:	leave  
  40ed0f:	and    al,0xdd
  40ed11:	push   edi
  40ed12:	inc    edi
  40ed13:	inc    esp
  40ed14:	arpl   WORD PTR [ecx+0x70],si
  40ed17:	sbb    al,0x68
  40ed19:	lock mov DWORD PTR [edi+0x2eb78cab],esp
  40ed20:	ficom  DWORD PTR [ebx+edx*8]
  40ed23:	js     0x40ecd6
  40ed25:	cvtpi2ps xmm6,mm5
  40ed28:	inc    ecx
  40ed29:	jnp    0x40ecda
  40ed2b:	popa   
  40ed2c:	push   ds
  40ed2d:	mov    al,0x91
  40ed2f:	retf   
  40ed30:	pop    edx
  40ed31:	pop    ebp
  40ed32:	mov    esi,0xe2109525
  40ed37:	shr    DWORD PTR [ecx+0x2c],0xe7
  40ed3b:	stc    
  40ed3c:	jp     0x40ed58
  40ed3e:	call   FWORD PTR [ebx+ebx*4]
  40ed41:	mov    bh,0x8
  40ed43:	xchg   esi,eax
  40ed44:	mov    ch,0x6
  40ed46:	mov    esi,DWORD PTR [edx+edx*1]
  40ed49:	dec    esi
  40ed4a:	xlat   BYTE PTR ds:[ebx]
  40ed4b:	jp     0x40ed79
  40ed4d:	rep lods eax,DWORD PTR ds:[esi]
  40ed4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed50:	fcom   st(3)
  40ed52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed53:	jge    0x40edca
  40ed55:	and    DWORD PTR [edx],0xe12c3d30
  40ed5b:	sbb    BYTE PTR [ebx+ebx*8],dl
  40ed5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed5f:	sti    
  40ed60:	or     cl,BYTE PTR [edx]
  40ed62:	dec    edx
  40ed63:	pusha  
  40ed64:	pop    edx
  40ed65:	xchg   edi,eax
  40ed66:	inc    ecx
  40ed67:	push   ebp
  40ed68:	sbb    dh,ah
  40ed6a:	adc    eax,0x8e154259
  40ed6f:	sbb    al,cl
  40ed71:	in     al,dx
  40ed72:	clc    
  40ed73:	inc    esi
  40ed74:	(bad)  
  40ed75:	in     al,0x97
  40ed77:	imul   ebx,ebp,0x65
  40ed7a:	or     DWORD PTR [eax+eiz*8+0x2],ecx
  40ed7e:	aaa    
  40ed7f:	pop    ecx
  40ed80:	pop    ecx
  40ed81:	in     al,0x9c
  40ed83:	shl    DWORD PTR [edx+0x79],1
  40ed86:	outs   dx,BYTE PTR ds:[esi]
  40ed87:	xor    al,0x53
  40ed89:	xor    BYTE PTR [ebx+0x15291581],0x2c
  40ed90:	imul   BYTE PTR [esi]
  40ed92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed93:	jg     0x40ed44
  40ed95:	repnz or ch,BYTE PTR [edx]
  40ed98:	jp     0x40edba
  40ed9a:	mov    bh,0x40
  40ed9c:	dec    edx
  40ed9d:	arpl   WORD PTR [ecx-0x59],cx
  40eda0:	jo     0x40ed9c
  40eda2:	cdq    
  40eda3:	sti    
  40eda4:	repz sbb BYTE PTR [esi+edi*8-0x281744ab],cl
  40edac:	push   0x2c
  40edae:	or     al,0x94
  40edb0:	adc    eax,0xae8876cd
  40edb5:	xor    edi,DWORD PTR [eax]
  40edb7:	mov    ?,WORD PTR ds:0x5111ce02
  40edbd:	test   BYTE PTR [esi-0x336c9a05],0x58
  40edc4:	fbstp  TBYTE PTR [esi+ecx*8]
  40edc7:	or     al,0x12
  40edc9:	outs   dx,BYTE PTR ds:[esi]
  40edca:	cmp    BYTE PTR [ebp+0x2b],dl
  40edcd:	mov    edx,?
  40edcf:	sub    eax,DWORD PTR [edi+0x4e]
  40edd2:	adc    BYTE PTR [ebx-0x77e05ce],al
  40edd8:	fstp   TBYTE PTR [edx+0x38]
  40eddb:	mov    BYTE PTR [ebx],bh
  40eddd:	lahf   
  40edde:	aad    0xec
  40ede0:	pop    edi
  40ede1:	(bad)
  40ede6:	test   al,0x77
  40ede8:	xchg   ebp,eax
  40ede9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edea:	arpl   WORD PTR [ebx+0x7e],sp
  40eded:	out    dx,al
  40edee:	mov    ah,0x4e
  40edf0:	or     BYTE PTR [ecx-0x18],dl
  40edf3:	lds    ecx,FWORD PTR ds:0x10cef3f7
  40edf9:	xchg   ebp,eax
  40edfa:	hlt    
  40edfb:	shl    BYTE PTR [esi-0x5f],cl
  40edfe:	dec    ebp
  40edff:	cdq    
  40ee00:	and    BYTE PTR [ebp+0x7f34f9e4],dl
  40ee06:	inc    esp
  40ee07:	(bad)  
  40ee08:	out    dx,eax
  40ee09:	mov    BYTE PTR [ebx-0x53a8db4e],cl
  40ee0f:	hlt    
  40ee10:	iret   
  40ee11:	iret   
  40ee12:	icebp  
  40ee13:	jle    0x40edf2
  40ee15:	stos   DWORD PTR es:[edi],eax
  40ee16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee17:	int    0x56
  40ee19:	adc    al,0x33
  40ee1b:	push   es
  40ee1c:	inc    ecx
  40ee1d:	into   
  40ee1e:	and    DWORD PTR [edi+0x53],ebx
  40ee21:	dec    DWORD PTR [ebp-0x723d4a9c]
  40ee27:	repnz push eax
  40ee29:	adc    BYTE PTR [eax+0x466187ab],bh
  40ee2f:	das    
  40ee30:	test   eax,0x953e65c4
  40ee35:	retf   
  40ee36:	sbb    eax,0x16caa570
  40ee3b:	inc    esp
  40ee3c:	mov    dl,0xac
  40ee3e:	or     ah,BYTE PTR [ebx]
  40ee40:	inc    ecx
  40ee41:	rol    BYTE PTR [ecx-0x65],0x29
  40ee45:	xchg   ecx,eax
  40ee46:	cs xchg edi,edi
  40ee49:	nop
  40ee4a:	scas   al,BYTE PTR es:[edi]
  40ee4b:	xor    esi,DWORD PTR [eax]
  40ee4d:	or     al,0xa0
  40ee4f:	add    dh,bh
  40ee51:	add    DWORD PTR [edx+eiz*8],0xa
  40ee55:	lods   eax,DWORD PTR ds:[esi]
  40ee56:	retf   
  40ee57:	popf   
  40ee58:	push   0x15
  40ee5a:	xor    al,al
  40ee5c:	cmp    al,BYTE PTR [edx+ebx*8-0x726624b]
  40ee63:	ins    BYTE PTR es:[edi],dx
  40ee64:	lea    edx,gs:[eax+0x26c75432]
  40ee6b:	add    al,0xc2
  40ee6d:	mov    eax,ds:0xffc1185
  40ee72:	dec    ebx
  40ee73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee74:	inc    eax
  40ee75:	call   0x4a70:0xbb369f14
  40ee7c:	mov    bl,0xd7
  40ee7e:	icebp  
  40ee7f:	adc    DWORD PTR [edi],0x77478f6f
  40ee85:	lods   al,BYTE PTR ds:[esi]
  40ee86:	sti    
  40ee87:	jmp    0xeadb:0xba2d9993
  40ee8e:	mov    BYTE PTR [esi],al
  40ee90:	inc    ebp
  40ee91:	mov    eax,ds:0xdfedcb49
  40ee96:	mov    cl,0xe4
  40ee98:	mov    ah,0xac
  40ee9a:	ror    DWORD PTR [ecx-0x40],cl
  40ee9d:	mov    al,ds:0xa80d2858
  40eea2:	push   ebp
  40eea3:	mov    ch,0xaf
  40eea5:	and    al,0x2e
  40eea7:	(bad)  
  40eea8:	imul   DWORD PTR [ecx-0x3ce41ada]
  40eeae:	aam    0xd8
  40eeb0:	mov    cl,al
  40eeb2:	arpl   WORD PTR [ebp+0x6c6e6c8d],sp
  40eeb8:	adc    BYTE PTR [ebx-0x29],0x8e
  40eebc:	les    ebp,FWORD PTR [ebx+0x4e]
  40eebf:	dec    esi
  40eec0:	mov    bl,0x6
  40eec2:	jns    0x40ef36
  40eec4:	jns    0x40eeea
  40eec6:	and    dh,bl
  40eec8:	call   DWORD PTR [edi+0x43]
  40eecb:	adc    bh,BYTE PTR [ecx]
  40eecd:	icebp  
  40eece:	cld    
  40eecf:	scas   al,BYTE PTR es:[edi]
  40eed0:	pop    eax
  40eed1:	cwde   
  40eed2:	push   ebp
  40eed3:	out    dx,al
  40eed4:	xor    BYTE PTR [esi-0x3b5d29ba],dl
  40eeda:	sti    
  40eedb:	mov    edi,0x9bc56028
  40eee0:	dec    ebx
  40eee1:	xlat   BYTE PTR ds:[ebx]
  40eee2:	sub    ebx,edx
  40eee4:	mov    ah,0xb2
  40eee6:	pop    ebp
  40eee7:	pop    esi
  40eee8:	jo     0x40ef03
  40eeea:	add    bh,bh
  40eeec:	cwde   
  40eeed:	mov    dh,0xee
  40eeef:	retf   
  40eef0:	jp     0x40ef70
  40eef2:	mov    ah,0x15
  40eef4:	cmp    eax,0x3f3a9a3e
  40eef9:	pop    eax
  40eefa:	sbb    eax,0xfde87bd
  40eeff:	sbb    al,0xd3
  40ef01:	push   esp
  40ef02:	xor    eax,0x73b19b83
  40ef07:	sub    BYTE PTR [esi+eax*2+0x7b],bh
  40ef0b:	pop    ebx
  40ef0c:	mov    esi,0x38f095c0
  40ef11:	int    0xd1
  40ef13:	sar    ebp,cl
  40ef15:	loopne 0x40ef96
  40ef17:	dec    edi
  40ef18:	jno    0x40ef58
  40ef1a:	and    BYTE PTR [edi],al
  40ef1c:	shl    BYTE PTR [edx],0x10
  40ef1f:	call   0x3e05:0x65249d44
  40ef26:	ret    0xe8e2
  40ef29:	push   ebx
  40ef2a:	xchg   ecx,eax
  40ef2b:	sbb    DWORD PTR [edx+0x1f8eda47],ebx
  40ef31:	loopne 0x40efad
  40ef33:	retf   0x50f3
  40ef36:	mov    ah,0x9
  40ef38:	cmp    DWORD PTR [ebp-0x5f403900],ebp
  40ef3e:	sub    edx,DWORD PTR [ebx+0x6666f592]
  40ef44:	lahf   
  40ef45:	fbstp  TBYTE PTR [ebp+0x1df280f5]
  40ef4b:	sub    DWORD PTR [edi+ecx*4],0xcebc404d
  40ef52:	jg     0x40ef1f
  40ef54:	xchg   esp,eax
  40ef55:	pop    ss
  40ef56:	mov    cs,WORD PTR [ebx-0x32]
  40ef59:	int    0xd3
  40ef5b:	mov    BYTE PTR [eax],dl
  40ef5d:	pop    ebp
  40ef5e:	stc    
  40ef5f:	bound  ebx,QWORD PTR [ebx-0x5ebd9b1e]
  40ef65:	jb     0x40efc0
  40ef67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef68:	mov    eax,0x64439375
  40ef6d:	int    0xb
  40ef6f:	rcl    BYTE PTR [ecx],cl
  40ef71:	xchg   edx,eax
  40ef72:	inc    eax
  40ef73:	mov    ch,0x5b
  40ef75:	inc    ecx
  40ef76:	xlat   BYTE PTR ds:[ebx]
  40ef77:	(bad)
  40ef7a:	int3   
  40ef7b:	jmp    0x714aabab
  40ef80:	fwait
  40ef81:	into   
  40ef82:	push   esp
  40ef83:	int3   
  40ef84:	into   
  40ef85:	pop    ss
  40ef86:	aaa    
  40ef87:	fucom  st(7)
  40ef89:	out    dx,eax
  40ef8a:	cmp    eax,0xadc24001
  40ef8f:	mov    fs,ebx
  40ef91:	pop    ebx
  40ef92:	sub    al,0x61
  40ef94:	sub    al,0xda
  40ef96:	aaa    
  40ef97:	aam    0x41
  40ef99:	mov    ss,WORD PTR cs:[esi+0x67]
  40ef9d:	jbe    0x40f01d
  40ef9f:	out    0x8,eax
  40efa1:	push   DWORD PTR [edi-0x5e5758f5]
  40efa7:	jl     0x40f01d
  40efa9:	arpl   WORD PTR [ebx-0x45940d95],bx
  40efaf:	and    edi,DWORD PTR [edx-0x73]
  40efb2:	jb     0x40f01b
  40efb4:	aaa    
  40efb5:	add    esp,0x67b719a5
  40efbb:	rcr    ebp,1
  40efbd:	xchg   ecx,eax
  40efbe:	aas    
  40efbf:	shr    DWORD PTR [eax],0x5b
  40efc2:	les    ecx,FWORD PTR [edi-0x6c2a1644]
  40efc8:	adc    DWORD PTR [eax-0x5f],edx
  40efcb:	sbb    DWORD PTR [edx+0x7e6dea54],ebp
  40efd1:	in     eax,0x13
  40efd3:	xor    eax,0x8e536193
  40efd8:	test   BYTE PTR [eax+ebp*8+0x28],dh
  40efdc:	cmp    al,0xad
  40efde:	cmp    BYTE PTR [edi],bh
  40efe0:	ss jecxz 0x40efc7
  40efe3:	mov    ecx,edx
  40efe5:	mov    ebx,0x463e1384
  40efea:	jge    0x40eff7
  40efec:	lods   eax,DWORD PTR ds:[esi]
  40efed:	cmp    ecx,eax
  40efef:	scas   al,BYTE PTR es:[edi]
  40eff0:	call   0x192fce45
  40eff5:	stos   BYTE PTR es:[edi],al
  40eff6:	xor    eax,0x693ef8fb
  40effb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40effc:	add    BYTE PTR [esi],ah
  40effe:	push   eax
  40efff:	shl    BYTE PTR [ebx+ebp*4+0x7817044b],1
  40f006:	pop    ebp
  40f007:	add    ebx,DWORD PTR [edx+0x60]
  40f00a:	sub    DWORD PTR es:[ecx-0x4ae80960],0xffffff8c
  40f012:	sbb    dh,BYTE PTR [esi+0x29]
  40f015:	pop    esp
  40f016:	clc    
  40f017:	jmp    FWORD PTR [ecx-0x24d75ad0]
  40f01d:	dec    esi
  40f01e:	sub    eax,0x4919f360
  40f023:	jo     0x40efe2
  40f025:	inc    edx
  40f026:	ror    DWORD PTR [ecx],1
  40f028:	shl    BYTE PTR ds:0x2cdba815,1
  40f02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f02f:	mov    ebx,0xc07e4559
  40f034:	sub    DWORD PTR [ecx],edx
  40f036:	add    ebx,DWORD PTR [edi]
  40f038:	fistp  DWORD PTR [ecx]
  40f03a:	std    
  40f03b:	lds    esi,FWORD PTR [esi-0x6cec9d2b]
  40f041:	jmp    0x40efe4
  40f043:	out    dx,al
  40f044:	stc    
  40f045:	cwde   
  40f046:	lock xor al,0x24
  40f049:	cdq    
  40f04a:	or     eax,ecx
  40f04c:	shl    BYTE PTR [eax+0x24589777],1
  40f052:	sbb    ah,ah
  40f054:	daa    
  40f055:	lea    eax,[edi-0x3d074e6f]
  40f05b:	aaa    
  40f05c:	xchg   edi,eax
  40f05d:	xchg   ebx,eax
  40f05e:	outs   dx,BYTE PTR ds:[esi]
  40f05f:	jne    0x40f023
  40f061:	retf   0x817c
  40f064:	mov    esi,0xe425f62b
  40f069:	xchg   edi,eax
  40f06a:	outs   dx,BYTE PTR ds:[esi]
  40f06b:	dec    edx
  40f06c:	inc    ebx
  40f06d:	sbb    BYTE PTR [ebx-0x61577db4],al
  40f073:	shl    BYTE PTR ds:0xaa69a88b,1
  40f079:	adc    al,BYTE PTR [ebx+0x77]
  40f07c:	dec    ebx
  40f07d:	je     0x40f076
  40f07f:	ins    DWORD PTR es:[edi],dx
  40f080:	push   esp
  40f081:	sbb    dl,BYTE PTR [edx]
  40f083:	mov    esi,DWORD PTR [ebx]
  40f085:	cmp    ebp,DWORD PTR ds:0x6b7e5c83
  40f08b:	push   edi
  40f08c:	mov    cl,0x73
  40f08e:	jae    0x40f103
  40f090:	sbb    eax,0x5629511b
  40f095:	mov    ds:0xf0a875cf,al
  40f09a:	adc    bh,BYTE PTR [edx+edi*2-0x18]
  40f09e:	sbb    eax,0xc5ecaf2f
  40f0a3:	sub    eax,edi
  40f0a5:	xor    ecx,edx
  40f0a7:	xchg   DWORD PTR [ebp-0x568b54f4],ebp
  40f0ad:	and    ah,bh
  40f0af:	imul   ecx,DWORD PTR [eax-0x5a],0x4f
  40f0b3:	or     DWORD PTR [ebp+0x61],ebx
  40f0b6:	push   esi
  40f0b7:	push   cs
  40f0b8:	daa    
  40f0b9:	mov    ?,WORD PTR [esi+0x75770d0a]
  40f0bf:	jle    0x40f0f6
  40f0c1:	inc    ebp
  40f0c2:	mov    ds:0x5415c718,al
  40f0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0c8:	pop    eax
  40f0c9:	mov    edx,fs
  40f0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0cc:	(bad)  
  40f0cd:	mul    DWORD PTR [ebp+0x60]
  40f0d0:	cmp    eax,0xd6840ea9
  40f0d5:	es call 0x991f8ce7
  40f0db:	or     bh,BYTE PTR [eax-0x4319267a]
  40f0e1:	push   ebx
  40f0e2:	js     0x40f0ab
  40f0e4:	jmp    0x40f157
  40f0e6:	jl     0x40f118
  40f0e8:	push   esi
  40f0e9:	jb     0x40f07d
  40f0eb:	jp     0x40f072
  40f0ed:	inc    esi
  40f0ee:	leave  
  40f0ef:	pop    ds
  40f0f0:	sub    eax,esi
  40f0f2:	(bad)  
  40f0f3:	push   eax
  40f0f4:	xchg   ebp,eax
  40f0f5:	out    dx,eax
  40f0f6:	(bad)  
  40f0f7:	or     al,0xf6
  40f0f9:	pop    ebp
  40f0fa:	ins    BYTE PTR es:[edi],dx
  40f0fb:	adc    dh,ah
  40f0fd:	push   0xccc25776
  40f102:	mov    DWORD PTR [edx+edi*2-0x166e11f5],edx
  40f109:	cmp    BYTE PTR [eax+edx*1],cl
  40f10c:	icebp  
  40f10d:	pop    ebx
  40f10e:	mov    esp,0xe6800cf
  40f113:	cli    
  40f114:	mov    bh,0x94
  40f116:	pop    ecx
  40f117:	and    eax,0xde836ac0
  40f11c:	lahf   
  40f11d:	mov    cl,0x6c
  40f11f:	repnz mov ds:0xb1b79653,al
  40f125:	xchg   edi,eax
  40f126:	scas   eax,DWORD PTR es:[edi]
  40f127:	or     ch,BYTE PTR [esi-0x2f575fbd]
  40f12d:	cmp    esi,eax
  40f12f:	daa    
  40f130:	mov    al,ds:0xa97eae39
  40f135:	xchg   BYTE PTR [eax-0x72],cl
  40f138:	or     ch,bh
  40f13a:	xor    BYTE PTR [ebp+0x40],dh
  40f13d:	sbb    BYTE PTR [esi+0x2],dh
  40f140:	jp     0x40f11f
  40f142:	add    eax,0x6a74ae4c
  40f147:	ret    0x46c
  40f14a:	jecxz  0x40f1b8
  40f14c:	or     DWORD PTR [ebx],ebp
  40f14e:	aas    
  40f14f:	call   0xd3c6:0x14bf7da2
  40f156:	shr    edx,1
  40f158:	push   ds
  40f159:	pop    ecx
  40f15a:	inc    edx
  40f15b:	mov    bh,0x54
  40f15d:	cwde   
  40f15e:	lock stos BYTE PTR es:[edi],al
  40f160:	test   eax,0x79b9cf06
  40f165:	cmp    al,0x98
  40f167:	cmp    ch,cl
  40f169:	xor    esp,DWORD PTR [edx+0x1]
  40f16c:	jge    0x40f1cd
  40f16e:	test   al,0xc4
  40f170:	cmp    BYTE PTR [ebp+0x3bf35f9a],bh
  40f176:	cmc    
  40f177:	xchg   edi,eax
  40f178:	into   
  40f179:	fild   DWORD PTR [edi]
  40f17b:	mov    edx,0x5e6a2ab7
  40f180:	sbb    ebp,DWORD PTR [esi-0x6ac7ac43]
  40f186:	stos   BYTE PTR es:[edi],al
  40f187:	sahf   
  40f188:	or     BYTE PTR [edx-0x40],0x1a
  40f18c:	mov    edi,0x5e53d44c
  40f191:	cmp    BYTE PTR [eax+0x4cbcb557],ch
  40f197:	sub    DWORD PTR [esi+0x75],0xffffffcd
  40f19b:	pushf  
  40f19c:	pop    ebx
  40f19d:	mov    ds:0x2e606c9e,al
  40f1a2:	cmp    ebp,DWORD PTR [esi-0x3b68d7b1]
  40f1a8:	jo     0x40f20a
  40f1aa:	ins    BYTE PTR es:[edi],dx
  40f1ab:	xchg   esi,eax
  40f1ac:	cmp    edx,0x73f4ff4f
  40f1b2:	push   esp
  40f1b3:	push   esp
  40f1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b5:	push   esp
  40f1b6:	mov    ecx,0x60508744
  40f1bb:	fld    st(3)
  40f1bd:	pop    edi
  40f1be:	adc    DWORD PTR [ebx],0xffffff91
  40f1c1:	or     eax,0x1f379dab
  40f1c6:	add    ecx,0x63
  40f1c9:	sub    eax,esp
  40f1cb:	test   eax,eax
  40f1cd:	add    DWORD PTR [ecx+0x72f5c774],esp
  40f1d3:	push   es
  40f1d4:	mov    ch,0x72
  40f1d6:	loope  0x40f245
  40f1d8:	push   edx
  40f1d9:	leave  
  40f1da:	out    dx,al
  40f1db:	sbb    eax,DWORD PTR [edi-0x6e]
  40f1de:	mov    dl,0x25
  40f1e0:	push   ebp
  40f1e1:	sti    
  40f1e2:	int3   
  40f1e3:	add    eax,0xa9eb9764
  40f1e8:	ins    DWORD PTR es:[edi],dx
  40f1e9:	fcom   QWORD PTR [esi]
  40f1eb:	ror    BYTE PTR [eax-0xa750b50],cl
  40f1f1:	jmp    FWORD PTR [eax+0x36]
  40f1f4:	pop    ebp
  40f1f5:	mov    ch,0xa9
  40f1f7:	rol    DWORD PTR [edi-0x622f6361],0x59
  40f1fe:	ficom  DWORD PTR fs:[edi]
  40f201:	movntq (bad),mm2
  40f202:	out    0xd3,eax
  40f204:	mov    eax,0x41cb6f0d
  40f209:	loope  0x40f1f3
  40f20b:	int3   
  40f20c:	mov    ebp,0xa1f6b2fa
  40f211:	in     al,0x40
  40f213:	clc    
  40f214:	inc    ecx
  40f215:	in     eax,0x6
  40f217:	das    
  40f218:	push   esi
  40f219:	test   al,0xc0
  40f21b:	jns    0x40f241
  40f21d:	stos   DWORD PTR es:[edi],eax
  40f21e:	stc    
  40f21f:	ret    0x5771
  40f222:	cmp    bh,ah
  40f224:	mov    ebx,0xc15d7bc8
  40f229:	or     DWORD PTR [ecx+edx*1-0x4c],ebp
  40f22d:	cmp    eax,DWORD PTR [eax]
  40f22f:	ret    0x7b08
  40f232:	pop    ss
  40f233:	vrsqrtss xmm4,xmm4,DWORD PTR [edi]
  40f237:	jle    0x40f1e1
  40f239:	aam    0x4
  40f23b:	sahf   
  40f23c:	inc    edi
  40f23d:	aam    0x4d
  40f23f:	inc    esp
  40f240:	icebp  
  40f241:	int    0x24
  40f243:	jo     0x40f270
  40f245:	or     eax,0x8f6435ce
  40f24a:	jmp    0x40f2b7
  40f24c:	push   cs
  40f24d:	mov    ah,0xe6
  40f24f:	aam    0x4e
  40f251:	sti    
  40f252:	pop    eax
  40f253:	push   0x8ded18a5
  40f258:	enter  0xbf79,0x58
  40f25c:	test   BYTE PTR [eax+0x77],bh
  40f25f:	mov    dh,0x1a
  40f261:	jge    0x40f276
  40f263:	into   
  40f264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f265:	shr    BYTE PTR [esi+ecx*8-0x57],0xc0
  40f26a:	xlat   BYTE PTR ds:[ebx]
  40f26b:	mov    dl,0x46
  40f26d:	enter  0xb97d,0xce
  40f271:	jp     0x40f25c
  40f273:	cmp    cl,0xdb
  40f276:	call   0x44a5:0x232dcaa1
  40f27d:	mov    eax,0x8c1bebe4
  40f282:	into   
  40f283:	loopne 0x40f23a
  40f285:	iret   
  40f286:	lods   eax,DWORD PTR ds:[esi]
  40f287:	pop    ds
  40f288:	ror    DWORD PTR [ecx-0x77],cl
  40f28b:	test   eax,0xb30889f5
  40f290:	aaa    
  40f291:	jle    0x40f231
  40f293:	pop    ebp
  40f294:	mov    eax,0xace621bc
  40f299:	mov    ah,BYTE PTR [ebx]
  40f29b:	push   esi
  40f29c:	dec    ebx
  40f29d:	and    al,0x9
  40f29f:	fdiv   DWORD PTR [esi]
  40f2a1:	pop    eax
  40f2a2:	pushf  
  40f2a3:	(bad)  
  40f2a4:	xchg   esi,eax
  40f2a5:	cld    
  40f2a6:	jg     0x40f325
  40f2a8:	aad    0x62
  40f2aa:	and    BYTE PTR [edi+0x455460a1],ah
  40f2b0:	jmp    0xb9bf:0x88ff3820
  40f2b7:	jb     0x40f335
  40f2b9:	push   es
  40f2ba:	bound  ebp,QWORD PTR [esi]
  40f2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2bd:	jmp    0xfbb8e120
  40f2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c3:	jmp    0xc7a:0xdbe03fdf
  40f2ca:	mov    dl,0xa4
  40f2cc:	imul   eax,esi,0x68
  40f2cf:	cmc    
  40f2d0:	data16 stc 
  40f2d2:	cdq    
  40f2d3:	arpl   WORD PTR [esi+0x501eb5e6],di
  40f2d9:	imul   esp,DWORD PTR [edx-0x7f],0xffffff80
  40f2dd:	and    ebp,DWORD PTR ds:0xc7e14de1
  40f2e3:	leave  
  40f2e4:	dec    ebp
  40f2e5:	pop    esp
  40f2e6:	mov    edi,0x14880a07
  40f2eb:	sub    bh,ah
  40f2ed:	outs   dx,BYTE PTR ds:[esi]
  40f2ee:	mov    bl,0xd6
  40f2f0:	and    eax,ebx
  40f2f2:	push   esp
  40f2f3:	inc    ebx
  40f2f4:	mov    esi,0xced2fc11
  40f2f9:	sbb    ch,BYTE PTR ds:0xfc0dc04b
  40f2ff:	loopne 0x40f376
  40f301:	inc    esp
  40f302:	jnp    0x40f2b5
  40f304:	into   
  40f305:	xchg   BYTE PTR [eax+ebx*4-0x2d9e823f],al
  40f30c:	ins    BYTE PTR es:[edi],dx
  40f30d:	jmp    0x40f2a8
  40f30f:	div    BYTE PTR ds:0xa7ef487c
  40f315:	add    BYTE PTR [edx],cl
  40f317:	(bad)  
  40f31a:	jmp    0x43b5:0x797397b7
  40f321:	test   BYTE PTR [esi+0x9d4a266],ah
  40f327:	add    DWORD PTR [edx-0x6ca8e079],esp
  40f32d:	lods   eax,DWORD PTR ds:[esi]
  40f32e:	arpl   bp,ax
  40f330:	mov    ds:0xc39644c0,eax
  40f335:	data16 loope 0x40f315
  40f338:	mov    al,ds:0x1dc56852
  40f33d:	pop    edx
  40f33e:	xchg   esp,eax
  40f33f:	push   ebx
  40f340:	mov    ah,0x79
  40f343:	sar    DWORD PTR [eax+0x51],0x91
  40f347:	sbb    al,0xe6
  40f349:	mov    esi,0xa54c01f
  40f34e:	cs or  ebp,eax
  40f351:	mov    al,0xe
  40f353:	and    DWORD PTR [esi-0x3e8c3159],0xffffffba
  40f35a:	mov    bh,BYTE PTR [eax]
  40f35c:	jbe    0x40f340
  40f35e:	xchg   edx,eax
  40f35f:	imul   esi,DWORD PTR [ecx],0x34
  40f362:	icebp  
  40f363:	fisttp WORD PTR [ebp+0x8]
  40f366:	dec    ebx
  40f367:	cmp    al,0xbf
  40f369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f36a:	(bad)  
  40f36b:	mov    esi,ss
  40f36d:	add    BYTE PTR [ecx-0x7e],ch
  40f370:	sbb    eax,0xfbcd62d2
  40f375:	ficom  WORD PTR [edx+0x10358921]
  40f37b:	sti    
  40f37c:	test   DWORD PTR [ecx-0x1a],esp
  40f37f:	outs   dx,DWORD PTR ds:[esi]
  40f380:	jl     0x40f3ef
  40f382:	add    ch,BYTE PTR ds:0x1a4b703a
  40f389:	add    dl,bl
  40f38b:	out    dx,al
  40f38c:	repz shr DWORD PTR [edi],1
  40f38f:	adc    esp,DWORD PTR [edi-0x3ec08be7]
  40f395:	retf   
  40f396:	(bad)  
  40f397:	dec    ebx
  40f398:	sub    DWORD PTR [ecx+eax*4+0x12fad51b],0x1cd338c7
  40f3a3:	rcl    bl,0x59
  40f3a6:	jae    0x40f3e7
  40f3a8:	clc    
  40f3a9:	fbstp  TBYTE PTR [ecx]
  40f3ab:	mov    al,0x51
  40f3ad:	push   ebx
  40f3ae:	outs   dx,BYTE PTR ds:[esi]
  40f3af:	jle    0x40f38d
  40f3b1:	or     ebx,DWORD PTR [edx-0x3c8e8d2]
  40f3b7:	into   
  40f3b8:	jecxz  0x40f41b
  40f3ba:	jmp    0x40f344
  40f3bc:	(bad)  
  40f3bd:	out    dx,eax
  40f3be:	in     al,0xbd
  40f3c0:	xor    DWORD PTR [edi+0x4a],edi
  40f3c3:	scas   eax,DWORD PTR es:[edi]
  40f3c4:	jmp    0x18b6:0xb9802be7
  40f3cb:	xchg   esp,eax
  40f3cc:	adc    ch,dh
  40f3ce:	fistp  QWORD PTR [ebx]
  40f3d0:	enter  0xebe9,0xcd
  40f3d4:	push   esp
  40f3d5:	das    
  40f3d6:	inc    ebp
  40f3d7:	and    DWORD PTR [esi+0x2aa8c05c],eax
  40f3dd:	dec    ecx
  40f3de:	cdq    
  40f3df:	inc    esp
  40f3e0:	push   eax
  40f3e1:	cdq    
  40f3e2:	ret    
  40f3e3:	int    0xec
  40f3e5:	mov    dh,0x64
  40f3e7:	ins    BYTE PTR es:[edi],dx
  40f3e8:	in     eax,dx
  40f3e9:	je     0x40f3a4
  40f3eb:	out    dx,al
  40f3ec:	hlt    
  40f3ed:	jle    0x40f3c5
  40f3ef:	popf   
  40f3f0:	dec    eax
  40f3f1:	inc    eax
  40f3f2:	aam    0x9e
  40f3f4:	hlt    
  40f3f5:	sbb    BYTE PTR [esi-0x5e],bl
  40f3f8:	shl    BYTE PTR [ecx-0xe34e1ad],0xe
  40f3ff:	test   BYTE PTR [edi],0x38
  40f402:	cli    
  40f403:	sub    edi,DWORD PTR [esi-0x2f]
  40f406:	(bad)  
  40f407:	mov    eax,ds:0xf6ec126
  40f40c:	mov    dh,BYTE PTR [esi+eax*8]
  40f40f:	fs ret 
  40f411:	xchg   ebp,eax
  40f412:	nop
  40f413:	push   es
  40f414:	test   DWORD PTR [edi+0xd286d1c],edi
  40f41a:	mov    al,ds:0xb460abce
  40f41f:	in     eax,dx
  40f420:	dec    ebp
  40f421:	mov    al,0xab
  40f423:	dec    ecx
  40f424:	push   ebp
  40f425:	or     eax,0xb4b8fc0b
  40f42a:	mov    dh,0xa5
  40f42c:	sub    DWORD PTR [eax*4+0x15d1307d],0x856eb799
  40f437:	stos   DWORD PTR es:[edi],eax
  40f438:	(bad)  
  40f439:	out    dx,eax
  40f43a:	imul   edx,DWORD PTR [esi+0x72],0x6095a116
  40f441:	neg    DWORD PTR [esi+0x7befa04e]
  40f447:	jg     0x40f460
  40f449:	or     ebx,0x32cbbdd6
  40f44f:	add    al,BYTE PTR [edi-0x80]
  40f452:	push   ecx
  40f453:	fbld   TBYTE PTR [ecx-0x3b317a33]
  40f459:	mov    cl,0x14
  40f45b:	dec    ecx
  40f45c:	inc    ebx
  40f45d:	adc    ecx,edi
  40f45f:	retf   0x4f12
  40f462:	icebp  
  40f463:	mov    ah,0x7c
  40f465:	aam    0xed
  40f467:	cmp    edi,DWORD PTR [edx-0x68]
  40f46a:	mov    ds:0xecc06cb3,eax
  40f46f:	scas   eax,DWORD PTR es:[edi]
  40f470:	popa   
  40f471:	inc    edi
  40f472:	popf   
  40f473:	loop   0x40f4f0
  40f475:	mov    ecx,0x5dfd1b9b
  40f47a:	pusha  
  40f47b:	push   ds
  40f47c:	inc    ecx
  40f47d:	stos   DWORD PTR es:[edi],eax
  40f47e:	dec    edx
  40f47f:	mov    edx,ebx
  40f481:	popa   
  40f482:	add    ebp,esi
  40f484:	mov    ds:0x854b72ac,al
  40f489:	jno    0x40f503
  40f48b:	pop    ss
  40f48c:	popa   
  40f48d:	dec    ebx
  40f48e:	bound  ebp,QWORD PTR ds:0xe01ce200
  40f494:	push   cs
  40f495:	dec    ebp
  40f496:	xor    al,0xdc
  40f498:	imul   esi,edx,0xaa6d6207
  40f49e:	inc    ecx
  40f49f:	xchg   edi,eax
  40f4a0:	push   0xb9c1592e
  40f4a5:	push   ebp
  40f4a6:	fadd   st(0),st
  40f4a8:	(bad)  
  40f4a9:	pop    ebp
  40f4aa:	rcr    DWORD PTR [edi],1
  40f4ac:	scas   al,BYTE PTR es:[edi]
  40f4ad:	xchg   esi,eax
  40f4ae:	inc    eax
  40f4af:	loopne 0x40f4b8
  40f4b1:	fs es push edx
  40f4b4:	jae    0x40f4f1
  40f4b6:	jecxz  0x40f512
  40f4b8:	int3   
  40f4b9:	push   ds
  40f4ba:	push   0xffffff9e
  40f4bc:	popf   
  40f4bd:	cmp    BYTE PTR [esi-0x36acec71],al
  40f4c3:	stos   BYTE PTR es:[edi],al
  40f4c4:	xchg   DWORD PTR [ebx],esp
  40f4c6:	call   0x3bd3:0x87ea5717
  40f4cd:	mov    esp,0x4b4a0a55
  40f4d2:	bound  ebx,QWORD PTR [eax-0x2d98dbc4]
  40f4d8:	test   BYTE PTR [esi],0xd9
  40f4db:	push   0x2840269d
  40f4e0:	in     eax,dx
  40f4e1:	ja     0x40f4d2
  40f4e3:	ja     0x40f4a1
  40f4e5:	out    dx,al
  40f4e6:	jae    0x40f4be
  40f4e8:	mov    ecx,0xc47d8830
  40f4ed:	and    al,0x52
  40f4ef:	into   
  40f4f0:	scas   eax,DWORD PTR es:[edi]
  40f4f1:	cmp    eax,0xd1391b4e
  40f4f6:	xchg   ecx,eax
  40f4f7:	ja     0x40f4b5
  40f4f9:	mov    edi,0xc992df1f
  40f4fe:	pop    ecx
  40f4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f500:	lahf   
  40f501:	repnz xchg ebx,eax
  40f503:	jg     0x40f49e
  40f505:	outs   dx,BYTE PTR ds:[esi]
  40f506:	add    ah,BYTE PTR [ecx+0x79]
  40f509:	sbb    ecx,DWORD PTR [eax+0x1a5ca14b]
  40f50f:	mov    ebp,eax
  40f511:	mov    WORD PTR [ecx],ss
  40f513:	out    0x4c,eax
  40f515:	xor    al,0xf3
  40f517:	int    0x2e
  40f519:	in     al,dx
  40f51a:	fcmovnbe st,st(2)
  40f51c:	lock pusha 
  40f51e:	push   ecx
  40f51f:	into   
  40f520:	inc    ebx
  40f521:	xchg   ecx,eax
  40f522:	mov    dl,0x36
  40f524:	mov    eax,ds:0xc4b07213
  40f529:	and    eax,ecx
  40f52b:	pop    edi
  40f52c:	jb     0x40f573
  40f52e:	cmp    al,0x4
  40f530:	cmp    BYTE PTR [edi],ah
  40f532:	jg     0x40f4cf
  40f534:	and    edx,DWORD PTR [ebx-0xb92875a]
  40f53a:	outs   dx,DWORD PTR ds:[esi]
  40f53b:	pop    ds
  40f53c:	cmc    
  40f53d:	call   0x38fa:0xd93db45a
  40f544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f545:	cwde   
  40f546:	pop    es
  40f547:	fimul  DWORD PTR [ecx-0x39]
  40f54a:	pop    esp
  40f54b:	das    
  40f54c:	xchg   ebp,eax
  40f54d:	xor    al,0xd5
  40f54f:	ret    0xcc2d
  40f552:	or     edi,ebp
  40f554:	test   BYTE PTR [edx+0x254af638],bh
  40f55a:	std    
  40f55b:	dec    ebp
  40f55c:	inc    edi
  40f55d:	xor    bh,cl
  40f55f:	sbb    al,0x92
  40f561:	adc    DWORD PTR [edx-0x606d2a8c],edi
  40f567:	xor    esi,DWORD PTR ds:0x925463b5
  40f56d:	mov    ebp,0x8c92cab2
  40f572:	xor    ah,BYTE PTR [ebx+0x65]
  40f575:	mov    cl,0xf3
  40f577:	test   DWORD PTR [ecx-0x4798efc4],0x8b8c1a89
  40f581:	std    
  40f582:	outs   dx,DWORD PTR ds:[esi]
  40f583:	aas    
  40f584:	jge    0x40f574
  40f586:	mov    edx,ebp
  40f588:	adc    DWORD PTR [ebx-0x3a3851be],edx
  40f58e:	push   ebp
  40f58f:	repnz fldenv [ecx]
  40f592:	mov    eax,0xd2ae2967
  40f597:	or     eax,0x5d590fae
  40f59c:	cli    
  40f59d:	out    0x2c,eax
  40f59f:	push   es
  40f5a0:	lock cmp ch,BYTE PTR [ecx]
  40f5a3:	fsubp  st(5),st
  40f5a5:	stos   BYTE PTR es:[edi],al
  40f5a6:	pushf  
  40f5a7:	dec    ecx
  40f5a8:	jmp    0x40f541
  40f5aa:	sti    
  40f5ab:	fsub   QWORD PTR [esi-0x1bf75814]
  40f5b1:	xchg   ecx,eax
  40f5b2:	xchg   BYTE PTR [edx],bh
  40f5b4:	mul    ebx
  40f5b6:	sub    BYTE PTR [edx+esi*1],al
  40f5b9:	imul   ecx,DWORD PTR [ecx],0x63
  40f5bc:	test   BYTE PTR [eax-0xb],0x81
  40f5c0:	ja     0x40f55b
  40f5c2:	pop    ss
  40f5c3:	cmp    ebp,edi
  40f5c5:	stos   DWORD PTR es:[edi],eax
  40f5c6:	ret    0x74e
  40f5c9:	mov    bl,0x3a
  40f5cb:	mov    cl,0x42
  40f5cd:	stc    
  40f5ce:	repz mov cl,0x62
  40f5d1:	pop    esp
  40f5d2:	(bad)  
  40f5d3:	cmp    eax,DWORD PTR [eax+0x11794822]
  40f5d9:	sbb    DWORD PTR [edi+0x60350a7d],ebp
  40f5df:	in     eax,0xf2
  40f5e1:	into   
  40f5e2:	stos   BYTE PTR es:[edi],al
  40f5e3:	outs   dx,DWORD PTR ds:[esi]
  40f5e4:	cmp    bh,ch
  40f5e6:	(bad)  
  40f5e7:	xor    eax,0x2d494654
  40f5ec:	sti    
  40f5ed:	sbb    eax,0x3566414a
  40f5f2:	loope  0x40f5a0
  40f5f4:	cmc    
  40f5f5:	(bad)  
  40f5f6:	in     eax,0xc9
  40f5f8:	mov    eax,0xdafced22
  40f5fd:	xchg   ebp,eax
  40f5fe:	out    dx,al
  40f5ff:	iret   
  40f600:	mov    edx,0xacf74c45
  40f605:	sub    edi,DWORD PTR [eax]
  40f607:	sar    BYTE PTR [ebx],1
  40f609:	cmp    dl,cl
  40f60b:	clc    
  40f60c:	ret    0xa407
  40f60f:	push   eax
  40f610:	iret   
  40f611:	arpl   WORD PTR [edi-0x95bcc47],cx
  40f617:	cli    
  40f618:	(bad)  
  40f619:	sub    eax,0x22bdac9c
  40f61e:	les    edx,FWORD PTR [edx-0xf1d09a8]
  40f624:	dec    ebp
  40f625:	imul   esp,DWORD PTR [edi+0x20],0x46
  40f629:	repnz push ebx
  40f62b:	test   al,0xe1
  40f62d:	cdq    
  40f62e:	fwait
  40f62f:	ror    BYTE PTR [edx-0x56bf67cc],0xb4
  40f636:	jne    0x40f699
  40f638:	aad    0x9d
  40f63a:	(bad)
  40f63d:	xchg   DWORD PTR [eax+0x77],edi
  40f640:	mov    al,0x1d
  40f642:	ja     0x40f687
  40f644:	(bad)  
  40f645:	hlt    
  40f646:	xlat   BYTE PTR ds:[ebx]
  40f647:	call   0xd48a:0x6ac486d1
  40f64e:	cmc    
  40f64f:	sbb    al,0x77
  40f651:	in     eax,dx
  40f652:	sbb    eax,0x17d0c52c
  40f657:	push   cs
  40f658:	es mov bl,0x33
  40f65b:	fst    QWORD PTR [ebp-0x2b]
  40f65e:	jno    0x40f5e3
  40f660:	cs pop ecx
  40f662:	dec    ecx
  40f663:	fnsave [ecx]
  40f665:	mul    DWORD PTR [edi+0x3b]
  40f668:	popf   
  40f669:	loopne 0x40f67d
  40f66b:	mov    cl,0x74
  40f66d:	pop    esp
  40f66f:	pop    es
  40f670:	icebp  
  40f671:	sbb    dl,BYTE PTR [ebp+0x2e]
  40f674:	loopne 0x40f6cd
  40f676:	pop    ss
  40f677:	mov    ds:0x2b4c14ad,al
  40f67c:	adc    ah,BYTE PTR [eax+edx*4-0x3a636d08]
  40f683:	int3   
  40f684:	lahf   
  40f685:	xor    DWORD PTR [edi-0x66],esi
  40f688:	aas    
  40f689:	add    esi,DWORD PTR [edi-0x53]
  40f68c:	leave  
  40f68d:	out    dx,eax
  40f68e:	int3   
  40f68f:	mov    edx,0x72841f28
  40f694:	les    eax,FWORD PTR [edx-0x23]
  40f697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f698:	or     DWORD PTR [ebp-0x3b0e91b4],ebx
  40f69e:	in     eax,dx
  40f69f:	lock enter 0x593e,0x36
  40f6a4:	sub    BYTE PTR [ecx],ah
  40f6a6:	jl     0x40f658
  40f6a8:	ds (bad) 
  40f6aa:	push   bx
  40f6ac:	hlt    
  40f6ad:	shr    DWORD PTR [eax-0xe],1
  40f6b0:	(bad)  
  40f6b1:	stos   BYTE PTR es:[edi],al
  40f6b2:	retf   0x5d0c
  40f6b5:	mov    ah,bh
  40f6b7:	push   edx
  40f6b8:	jae    0x40f6d2
  40f6ba:	test   al,0x7d
  40f6bc:	jge    0x40f73c
  40f6be:	mov    ch,BYTE PTR [ebx]
  40f6c0:	pop    esp
  40f6c1:	and    al,0xea
  40f6c3:	push   ds
  40f6c4:	xor    ecx,DWORD PTR [esp+ebx*2-0x53e74313]
  40f6cb:	mov    ebx,0x9f1aa6a4
  40f6d0:	mov    eax,0x22ee7413
  40f6d5:	fnsave [esi+0x776c8507]
  40f6db:	inc    esp
  40f6dc:	jne    0x40f6ee
  40f6de:	jnp    0x40f6fa
  40f6e0:	retf   
  40f6e1:	(bad)  
  40f6e2:	sub    DWORD PTR [eax-0x5d],esi
  40f6e5:	and    al,0xfe
  40f6e7:	xchg   esi,eax
  40f6e8:	popa   
  40f6e9:	cwde   
  40f6ea:	mov    al,ds:0x75379658
  40f6ef:	fistp  DWORD PTR [edi]
  40f6f1:	addr16 inc eax
  40f6f3:	in     eax,dx
  40f6f4:	lods   al,BYTE PTR ds:[esi]
  40f6f5:	push   0x3f4a9d56
  40f6fa:	ds inc ebp
  40f6fc:	call   0xc910:0x1ee9a8e2
  40f703:	xchg   edx,eax
  40f704:	mov    al,0x35
  40f706:	aaa    
  40f707:	xor    eax,0xf48e048a
  40f70c:	out    0x5c,al
  40f70e:	lods   eax,DWORD PTR ds:[esi]
  40f70f:	push   ebx
  40f710:	mov    DWORD PTR [esp+ecx*1-0x7b],esp
  40f714:	xchg   esp,eax
  40f715:	jp     0x40f765
  40f717:	call   0x3e690d32
  40f71c:	mov    dh,0x67
  40f71e:	pushf  
  40f71f:	rcl    BYTE PTR [edi+0x5],cl
  40f722:	inc    esp
  40f723:	cld    
  40f724:	add    BYTE PTR [eax],ch
  40f726:	add    esp,DWORD PTR [edx+0x4e]
  40f729:	loop   0x40f799
  40f72b:	(bad)  
  40f72c:	icebp  
  40f72d:	xlat   BYTE PTR ds:[ebx]
  40f72e:	push   esi
  40f72f:	addr16 push edx
  40f731:	pop    ebp
  40f732:	or     DWORD PTR [ebp-0x6e],ecx
  40f735:	pop    eax
  40f736:	mov    ch,0xf3
  40f738:	mov    ecx,0xead50cc8
  40f73d:	out    dx,eax
  40f73e:	clc    
  40f73f:	out    0xe,al
  40f741:	loop   0x40f72f
  40f743:	ret    0x997e
  40f746:	push   edx
  40f747:	scas   eax,DWORD PTR es:[edi]
  40f748:	and    al,0x8b
  40f74a:	cli    
  40f74b:	pop    ds
  40f74c:	out    dx,al
  40f74d:	push   edi
  40f74e:	add    edx,DWORD PTR [ecx+0x1859342c]
  40f754:	ins    BYTE PTR es:[edi],dx
  40f755:	xchg   edx,eax
  40f756:	push   ss
  40f757:	mov    ds:0x1770ce0a,eax
  40f75c:	imul   eax,DWORD PTR [eax],0x5d
  40f75f:	pop    ds
  40f760:	and    al,0x5a
  40f762:	xchg   esp,eax
  40f763:	mov    WORD PTR [eax],gs
  40f765:	ja     0x40f715
  40f767:	loopne 0x40f705
  40f769:	stos   DWORD PTR es:[edi],eax
  40f76a:	xchg   esi,eax
  40f76b:	call   DWORD PTR [ebp+0x74]
  40f76e:	js     0x40f7a1
  40f770:	cmp    esp,DWORD PTR [edx+eiz*8+0x6d3eb3f1]
  40f777:	pop    ss
  40f778:	imul   esi
  40f77a:	pop    ebp
  40f77b:	mov    dl,0x7b
  40f77d:	iret   
  40f77e:	stc    
  40f77f:	fs adc ebx,0x3e5e73
  40f786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f787:	retf   
  40f788:	cmp    esp,DWORD PTR [eax-0x9de3eb2]
  40f78e:	jecxz  0x40f78f
  40f790:	test   eax,0x31b46e52
  40f795:	dec    edx
  40f796:	mov    ah,0x19
  40f798:	stos   DWORD PTR es:[edi],eax
  40f799:	inc    esi
  40f79a:	ds test al,0xf4
  40f79d:	push   esp
  40f79e:	dec    ecx
  40f79f:	fcmovbe st,st(3)
  40f7a1:	rcl    cl,1
  40f7a3:	into   
  40f7a4:	inc    ecx
  40f7a5:	ds xchg ebx,eax
  40f7a7:	sub    al,0x5
  40f7a9:	pusha  
  40f7aa:	icebp  
  40f7ab:	bound  ecx,QWORD PTR [eax+edx*4]
  40f7ae:	inc    edi
  40f7af:	js     0x40f76c
  40f7b1:	push   ebp
  40f7b2:	jo     0x40f740
  40f7b4:	add    ebp,ecx
  40f7b6:	xchg   ebp,eax
  40f7b7:	jo     0x40f7fa
  40f7b9:	ss push 0x67
  40f7bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7bd:	pop    es
  40f7be:	and    al,0xf1
  40f7c0:	cld    
  40f7c1:	push   ebp
  40f7c2:	mov    ds:0xb8cecff5,al
  40f7c7:	repnz jecxz 0x40f80c
  40f7ca:	xlat   BYTE PTR ds:[ebx]
  40f7cb:	add    eax,0xcd7d3789
  40f7d0:	jae    0x40f817
  40f7d2:	pop    ds
  40f7d3:	aad    0x7b
  40f7d5:	sub    eax,DWORD PTR [edi-0x51370def]
  40f7db:	xchg   BYTE PTR ds:0x521627d0,ch
  40f7e1:	dec    BYTE PTR [bp+si]
  40f7e4:	jo     0x40f810
  40f7e6:	inc    edx
  40f7e7:	push   0x57
  40f7e9:	push   ss
  40f7ea:	and    bl,BYTE PTR [eax]
  40f7ec:	lods   eax,DWORD PTR ds:[esi]
  40f7ed:	int3   
  40f7ee:	push   esp
  40f7ef:	fistp  DWORD PTR [ebp-0x597c729f]
  40f7f5:	ret    
  40f7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7f7:	mov    al,ds:0x41abd5ff
  40f7fc:	sbb    al,0x80
  40f7fe:	sub    al,0x20
  40f800:	inc    sp
  40f802:	fidivr WORD PTR [edx]
  40f804:	std    
  40f805:	jnp    0x40f834
  40f807:	jp     0x40f83f
  40f809:	xchg   edx,eax
  40f80a:	jns    0x40f871
  40f80c:	push   ebx
  40f80d:	icebp  
  40f80e:	cmp    al,0x7b
  40f810:	ror    dl,1
  40f812:	mov    ch,0x95
  40f814:	jl     0x40f7ae
  40f816:	inc    eax
  40f817:	retf   0x1573
  40f81a:	stos   BYTE PTR es:[edi],al
  40f81b:	add    esp,DWORD PTR ss:[esp+esi*2+0x7f]
  40f820:	aas    
  40f821:	cdq    
  40f822:	inc    DWORD PTR [eax+0x21]
  40f825:	jmp    0x13f1:0xe3bc97c9
  40f82c:	ror    BYTE PTR [esi+0x51aa6379],cl
  40f832:	jmp    0x40f7c4
  40f834:	dec    bl
  40f836:	cmp    esi,edi
  40f838:	xchg   edi,eax
  40f839:	xchg   ebp,eax
  40f83a:	dec    edx
  40f83b:	test   DWORD PTR [edx+0x774e8828],esi
  40f841:	rol    BYTE PTR [ebx+0x482be5b0],cl
  40f847:	pushf  
  40f848:	js     0x40f7f5
  40f84a:	fst    QWORD PTR [edi]
  40f84c:	sti    
  40f84d:	sub    al,0xed
  40f84f:	ja     0x40f82a
  40f851:	call   0xc0e36d6e
  40f856:	imul   eax,DWORD PTR [eax-0x40],0x34
  40f85a:	aad    0xfa
  40f85c:	cwde   
  40f85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f85e:	fmulp  st(1),st
  40f860:	inc    ecx
  40f861:	and    BYTE PTR [eax+edx*8+0x4fa1bf84],dh
  40f868:	sub    eax,esi
  40f86a:	inc    edi
  40f86c:	(bad)  [ecx]
  40f86e:	int3   
  40f86f:	sub    al,0xb3
  40f871:	and    BYTE PTR [ebx-0x27ec11e1],ch
  40f877:	in     al,dx
  40f878:	fincstp 
  40f87a:	sar    DWORD PTR [edx+eiz*8],cl
  40f87d:	je     0x40f858
  40f87f:	aas    
  40f880:	xchg   BYTE PTR [edi+0x44bb4dbd],bl
  40f886:	inc    ebx
  40f887:	rcr    DWORD PTR [edx],1
  40f889:	xor    esp,DWORD PTR [ecx-0x2a]
  40f88c:	outs   dx,BYTE PTR ds:[esi]
  40f88d:	cmp    ecx,DWORD PTR ds:0xb3875b0e
  40f893:	sub    DWORD PTR [ecx+0x57],edx
  40f896:	fbstp  TBYTE PTR ds:0x5f616c93
  40f89c:	imul   ecx,DWORD PTR [ebx+edi*2+0x77],0xe037c0ad
  40f8a4:	jns    0x40f85d
  40f8a6:	imul   eax,DWORD PTR [edi-0x79],0x14
  40f8aa:	xchg   edi,eax
  40f8ab:	outs   dx,DWORD PTR ds:[esi]
  40f8ac:	arpl   WORD PTR [ebx-0x70],cx
  40f8af:	inc    ebx
  40f8b0:	fcomp  QWORD PTR [ecx+eax*1]
  40f8b3:	sbb    al,0xc7
  40f8b5:	mov    cs:0x32e598b9,al
  40f8bb:	(bad)  
  40f8bc:	mov    ebx,0xfd75d827
  40f8c1:	mov    edx,0x7d54ccfa
  40f8c6:	dec    ebx
  40f8c7:	test   DWORD PTR [edx+0x2a],0xa2ff057f
  40f8ce:	cld    
  40f8cf:	retf   0x57ba
  40f8d2:	imul   eax,DWORD PTR [edi+0x25ffd77c],0x19
  40f8d9:	sub    eax,DWORD PTR cs:0xa93b206a
  40f8e0:	(bad)  
  40f8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e3:	sub    edx,edx
  40f8e5:	in     eax,0x81
  40f8e7:	push   es
  40f8e8:	in     al,0x3
  40f8ea:	mov    eax,ds:0x4e2bac0f
  40f8ef:	fcmovb st,st(1)
  40f8f1:	jb     0x40f92e
  40f8f3:	adc    eax,0xda3c2001
  40f8f8:	inc    esp
  40f8f9:	push   cs
  40f8fa:	iret   
  40f8fb:	ja     0x40f971
  40f8fd:	fstp   QWORD PTR [ebp+0x972ab03]
  40f903:	ins    BYTE PTR es:[edi],dx
  40f904:	xchg   edx,eax
  40f905:	add    eax,0xf4a44e38
  40f90a:	call   0x5ce9:0xaf9153ee
  40f911:	dec    edx
  40f912:	push   0x343e0afc
  40f917:	or     al,0x10
  40f919:	pop    edx
  40f91a:	cmc    
  40f91b:	mov    ?,WORD PTR [edi-0x5034443d]
  40f921:	jbe    0x40f8f5
  40f923:	iret   
  40f924:	sbb    BYTE PTR [ebx],dh
  40f926:	sbb    ch,bh
  40f928:	jge    0x40f8be
  40f92a:	pop    esi
  40f92b:	inc    ebx
  40f92c:	push   ds
  40f92d:	dec    eax
  40f92e:	xchg   ebp,eax
  40f92f:	inc    ebp
  40f930:	sub    al,0x2f
  40f932:	sbb    BYTE PTR [ebp-0x2025c7c8],bl
  40f938:	test   al,0x15
  40f93a:	mov    esi,0x24454492
  40f93f:	adc    ebx,ebp
  40f941:	repz hlt 
  40f943:	mov    ds,eax
  40f945:	call   0x964d:0xfb8a78db
  40f94c:	jns    0x40f962
  40f94e:	dec    edx
  40f94f:	outs   dx,BYTE PTR ds:[esi]
  40f950:	push   ecx
  40f951:	or     eax,0x43db0835
  40f956:	daa    
  40f957:	pop    esp
  40f958:	popa   
  40f959:	adc    BYTE PTR [ebx],dl
  40f95b:	ror    eax,0xf9
  40f95e:	and    DWORD PTR [edi-0x61a22dee],0x961a02fe
  40f968:	xor    ch,al
  40f96a:	mov    dl,0xc
  40f96c:	cld    
  40f96d:	jns    0x40f989
  40f96f:	inc    esp
  40f970:	fsubr  DWORD PTR [esi]
  40f972:	xor    DWORD PTR [edx-0x5f92b5e6],eax
  40f978:	das    
  40f979:	int3   
  40f97a:	mov    ch,bl
  40f97c:	icebp  
  40f97d:	cmp    eax,0xa38bc07d
  40f982:	mov    DWORD PTR [edi+0x176e2612],edx
  40f988:	fbld   TBYTE PTR [esi]
  40f98a:	mov    eax,0x728e8d85
  40f98f:	adc    DWORD PTR [esi+esi*2],edx
  40f992:	jecxz  0x40f9db
  40f994:	push   edx
  40f995:	in     al,dx
  40f996:	pop    ecx
  40f997:	inc    ebx
  40f998:	imul   edx,DWORD PTR [edx+0x4004ecb9],0x1fd73987
  40f9a2:	aaa    
  40f9a3:	jno    0x40f97a
  40f9a5:	xchg   edx,eax
  40f9a6:	stos   BYTE PTR es:[edi],al
  40f9a7:	or     BYTE PTR [esi-0x1c3a9a3d],0xd3
  40f9ae:	lods   al,BYTE PTR ds:[esi]
  40f9af:	clc    
  40f9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9b1:	dec    ecx
  40f9b2:	or     dh,BYTE PTR [edi]
  40f9b4:	jl     0x40f9da
  40f9b6:	jp     0x40f966
  40f9b8:	ror    BYTE PTR [eax+eiz*2-0x36],1
  40f9bc:	aaa    
  40f9bd:	sub    esp,DWORD PTR [ecx+eax*2]
  40f9c0:	add    ecx,ecx
  40f9c2:	das    
  40f9c3:	or     eax,0xc474c24a
  40f9c8:	or     bh,BYTE PTR [edx]
  40f9ca:	icebp  
  40f9cb:	ins    BYTE PTR es:[edi],dx
  40f9cc:	lahf   
  40f9cd:	std    
  40f9ce:	sub    BYTE PTR [edi+0x15afeedf],dh
  40f9d4:	or     edx,DWORD PTR gs:[ebp+0x32]
  40f9d8:	out    dx,al
  40f9d9:	inc    eax
  40f9da:	mov    dh,0x63
  40f9dc:	cs sub dh,cl
  40f9df:	fisubr WORD PTR [ebx-0x2b]
  40f9e2:	(bad)  
  40f9e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e4:	pop    ebp
  40f9e5:	dec    edi
  40f9e6:	daa    
  40f9e7:	fwait
  40f9e8:	jnp    0x40f9c5
  40f9ea:	mov    edx,0x953861cd
  40f9ef:	loope  0x40fa2b
  40f9f1:	lods   al,BYTE PTR ds:[esi]
  40f9f2:	push   es
  40f9f3:	rcl    BYTE PTR [edx],0x27
  40f9f6:	mov    ds:0x3572dbe3,al
  40f9fb:	call   0xe2c18a17
  40fa00:	xor    edx,DWORD PTR [esi+0x482c15b6]
  40fa06:	and    ah,dl
  40fa08:	out    0x32,al
  40fa0a:	pop    esp
  40fa0b:	jmp    0x1f5f6424
  40fa10:	or     ah,BYTE PTR [edi+0x54]
  40fa13:	mov    cl,0xe0
  40fa15:	and    DWORD PTR [ebp+0x6],0xd35e2aa4
  40fa1c:	dec    ebx
  40fa1e:	dec    eax
  40fa1f:	dec    ebx
  40fa20:	cmp    bl,dh
  40fa22:	xchg   edi,eax
  40fa23:	aam    0x46
  40fa25:	pop    ds
  40fa26:	jae    0x40fa6a
  40fa28:	es jl  0x40f9c2
  40fa2b:	xchg   ebp,eax
  40fa2c:	mov    al,ds:0x175a3404
  40fa31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa32:	call   0x5e96:0x3cb75288
  40fa39:	outs   dx,DWORD PTR ds:[esi]
  40fa3a:	adc    BYTE PTR ds:0x3b4e710f,dl
  40fa40:	fnsave [ecx+0x10]
  40fa43:	out    dx,al
  40fa44:	sub    al,0xa0
  40fa46:	dec    ebp
  40fa47:	push   ds
  40fa48:	adc    eax,0xffd903af
  40fa4d:	xor    esi,DWORD PTR [ecx+ebp*4-0x7]
  40fa51:	lea    eax,[edx]
  40fa53:	adc    dh,BYTE PTR [ebx-0x46]
  40fa56:	mov    bh,ch
  40fa58:	jnp    0x40fa2e
  40fa5a:	push   ecx
  40fa5b:	and    ah,bl
  40fa5d:	jmp    0x40fa2a
  40fa5f:	repz push 0x2b91e10c
  40fa65:	cmc    
  40fa66:	scas   al,BYTE PTR es:[edi]
  40fa67:	push   ss
  40fa68:	fadd   st,st(5)
  40fa6a:	dec    edi
  40fa6b:	aad    0xe6
  40fa6d:	and    BYTE PTR [ebp+0x7d],ch
  40fa70:	xor    BYTE PTR ds:0x4fb46787,bh
  40fa76:	push   edx
  40fa77:	mov    DWORD PTR [ebx+0x58ddf022],0xf79b46ee
  40fa81:	test   eax,0x542da077
  40fa86:	call   0xff18:0x9e806bee
  40fa8d:	jmp    0x3b56:0x295e706d
  40fa94:	imul   ebp,ecx,0xe
  40fa97:	jae    0x40fa3b
  40fa99:	mov    ds:0x204a69cc,al
  40fa9e:	mov    eax,0xbd2abf4a
  40faa3:	pop    ebp
  40faa4:	into   
  40faa5:	leave  
  40faa6:	stos   BYTE PTR es:[edi],al
  40faa7:	ret    
  40faa8:	mov    edi,DWORD PTR [eax-0x180cb2fe]
  40faae:	sti    
  40faaf:	(bad)  
  40fab0:	xchg   edx,eax
  40fab1:	pop    es
  40fab2:	jnp    0x40fb02
  40fab4:	std    
  40fab5:	cmp    BYTE PTR [ecx+0x2],cl
  40fab8:	and    eax,0xb4b4dc81
  40fabd:	(bad)  
  40fabe:	aad    0xb7
  40fac0:	sub    esi,ecx
  40fac2:	mov    BYTE PTR [ebp-0x38],0xb3
  40fac6:	imul   esi,DWORD PTR [ebx-0x58],0xffffffde
  40faca:	jb     0x40fab7
  40facc:	ins    DWORD PTR es:[edi],dx
  40facd:	lds    ebx,FWORD PTR [esi]
  40facf:	imul   esi,esp,0xffffffbf
  40fad2:	and    BYTE PTR [eax-0x5786b8b1],ah
  40fad8:	and    BYTE PTR [edx-0x28],bh
  40fadb:	arpl   di,si
  40fadd:	add    al,0xeb
  40fadf:	int3   
  40fae0:	lods   al,BYTE PTR ds:[esi]
  40fae1:	add    DWORD PTR [eax],esi
  40fae3:	enter  0x4d04,0x85
  40fae7:	out    dx,al
  40fae8:	xlat   BYTE PTR ds:[ebx]
  40fae9:	iret   
  40faea:	jnp    0x40faac
  40faec:	iret   
  40faed:	dec    ebx
  40faee:	xchg   esp,eax
  40faef:	add    DWORD PTR [esi-0x6c],ebx
  40faf2:	icebp  
  40faf3:	lahf   
  40faf4:	jb     0x40fb50
  40faf6:	mov    ds:0xd2e292ed,al
  40fafb:	push   esi
  40fafc:	mov    DWORD PTR [edx],eax
  40fafe:	fist   WORD PTR [ebx+0x635f1d34]
  40fb04:	and    al,0x4a
  40fb06:	lods   eax,DWORD PTR ds:[esi]
  40fb07:	scas   eax,DWORD PTR es:[edi]
  40fb08:	xchg   ecx,eax
  40fb09:	mov    ch,0x95
  40fb0b:	icebp  
  40fb0c:	sbb    esp,DWORD PTR [ebp-0x44]
  40fb0f:	into   
  40fb10:	scas   al,BYTE PTR es:[edi]
  40fb11:	pop    ebx
  40fb12:	ja     0x40fb7b
  40fb14:	and    DWORD PTR [ecx-0x3f77d4f],edx
  40fb1a:	jb     0x40fad8
  40fb1c:	ins    BYTE PTR es:[edi],dx
  40fb1d:	mov    edx,ecx
  40fb1f:	imul   ebx,esi,0x5e32b7db
  40fb25:	cs sub eax,0xb69b62e7
  40fb2b:	push   ebx
  40fb2c:	lods   al,BYTE PTR ds:[esi]
  40fb2d:	or     al,0xa1
  40fb2f:	loopne 0x40faef
  40fb31:	dec    esp
  40fb32:	retf   
  40fb33:	inc    ebx
  40fb34:	and    edx,DWORD PTR ds:0xd0fb1a03
  40fb3a:	dec    esp
  40fb3b:	test   dl,bl
  40fb3d:	sar    DWORD PTR [eax+0x63923b42],0xbb
  40fb44:	mov    edi,0x3f807093
  40fb49:	outs   dx,BYTE PTR ds:[esi]
  40fb4a:	outs   dx,BYTE PTR ds:[esi]
  40fb4b:	mov    bl,0xc4
  40fb4d:	xor    ch,BYTE PTR gs:[edx-0x748de3b5]
  40fb54:	aad    0x28
  40fb56:	in     eax,dx
  40fb57:	scas   al,BYTE PTR es:[edi]
  40fb58:	fild   WORD PTR [ecx+0x43834a8b]
  40fb5e:	data16 mov ah,0x3c
  40fb61:	sbb    eax,0xff2258d1
  40fb66:	scas   al,BYTE PTR es:[edi]
  40fb67:	stos   BYTE PTR es:[edi],al
  40fb68:	xor    BYTE PTR [edx+0x2a],cl
  40fb6b:	jle    0x40fb00
  40fb6d:	pop    ds
  40fb6e:	mov    edi,0x60e243fa
  40fb73:	(bad)  
  40fb74:	rcr    BYTE PTR [edi],1
  40fb76:	xchg   ebx,eax
  40fb77:	loopne 0x40fb1c
  40fb79:	rol    BYTE PTR [ebx+0x52],1
  40fb7c:	xchg   esp,eax
  40fb7d:	icebp  
  40fb7e:	fcmovnu st,st(4)
  40fb80:	mov    ebp,0x1900129a
  40fb85:	jae    0x40fb61
  40fb87:	test   al,0xda
  40fb89:	cmp    ebp,DWORD PTR [eax]
  40fb8b:	in     eax,dx
  40fb8c:	add    eax,0x70f9a51a
  40fb91:	add    DWORD PTR [ebx+0x5199ca0a],eax
  40fb97:	mov    bh,0xda
  40fb99:	sbb    ebp,esp
  40fb9b:	dec    edx
  40fb9c:	outs   dx,BYTE PTR ds:[esi]
  40fb9d:	mov    edi,0xcc7c6d72
  40fba2:	sbb    al,0x93
  40fba4:	popf   
  40fba5:	jmp    0x40fba8
  40fba7:	pop    esp
  40fba8:	lods   eax,DWORD PTR ds:[esi]
  40fba9:	sar    cl,cl
  40fbab:	(bad)  
  40fbad:	sbb    esi,DWORD PTR [ebx+ecx*4]
  40fbb0:	jo     0x40fbf7
  40fbb2:	stos   BYTE PTR es:[edi],al
  40fbb3:	adc    al,0xc4
  40fbb5:	jmp    0xa9f0:0x47c6d2df
  40fbbc:	loopne 0x40fbaa
  40fbbe:	pop    es
  40fbbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc0:	xchg   ebp,eax
  40fbc1:	stc    
  40fbc2:	cwde   
  40fbc3:	jno    0x40fbc1
  40fbc5:	mov    esp,0xc1185588
  40fbca:	jmp    0xd08b:0xb1c4677b
  40fbd1:	lahf   
  40fbd2:	arpl   WORD PTR [edx+ecx*1],di
  40fbd5:	je     0x40fb5c
  40fbd7:	nop
  40fbd8:	cmp    ebx,DWORD PTR [ecx-0x1a]
  40fbdb:	mov    eax,DWORD PTR [ebx+0x5b39a59a]
  40fbe1:	in     al,dx
  40fbe2:	push   edx
  40fbe3:	pop    ds
  40fbe4:	pop    edx
  40fbe5:	xchg   BYTE PTR [ecx],ah
  40fbe7:	ror    BYTE PTR [ebx+0x552c1416],cl
  40fbed:	jmp    0x5faf:0x2708601a
  40fbf4:	xchg   esp,eax
  40fbf5:	lods   al,BYTE PTR ds:[esi]
  40fbf6:	ins    BYTE PTR es:[edi],dx
  40fbf7:	addr16 fwait
  40fbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbfa:	mov    eax,0x20f3b57
  40fbff:	outs   dx,BYTE PTR ds:[esi]
  40fc00:	imul   ebx,DWORD PTR [edi-0x14],0xffffffc7
  40fc04:	test   al,0x5b
  40fc06:	retf   
  40fc07:	gs mov esp,0x8f4ca83f
  40fc0d:	fstp   TBYTE PTR ds:0x2b46e6e6
  40fc13:	pop    ds
  40fc14:	jne    0x40fb9f
  40fc16:	xlat   BYTE PTR ds:[ebx]
  40fc17:	add    BYTE PTR [edx-0x56],dl
  40fc1a:	imul   esp,DWORD PTR [ecx],0x5b3a1b08
  40fc20:	fstp   TBYTE PTR [ebx]
  40fc22:	fisttp DWORD PTR [ebx-0x36]
  40fc25:	sbb    al,dl
  40fc27:	inc    ebx
  40fc28:	lock hlt 
  40fc2a:	mov    bh,0x60
  40fc2c:	xchg   DWORD PTR [ecx+0x76c97f8e],edi
  40fc32:	rol    bh,0x42
  40fc35:	fdiv   DWORD PTR [ebp+0x3320ef8b]
  40fc3b:	mov    WORD PTR [ebx+0x1792276e],?
  40fc41:	push   ebp
  40fc42:	shl    dh,0x57
  40fc45:	cmp    BYTE PTR [ecx-0x4d],al
  40fc48:	pop    ebp
  40fc49:	mov    esi,0x355bc61e
  40fc4f:	idiv   BYTE PTR [ebp-0x54]
  40fc52:	mov    DWORD PTR [ecx-0x27],0xe5e4887
  40fc59:	mov    ds:0x3d89e4c0,al
  40fc5e:	ret    
  40fc5f:	jl     0x40fcbe
  40fc61:	cmp    al,0x47
  40fc63:	sar    edi,1
  40fc65:	icebp  
  40fc66:	jne    0x40fc96
  40fc68:	jge    0x40fc2c
  40fc6a:	outs   dx,DWORD PTR ds:[esi]
  40fc6b:	add    al,0x21
  40fc6d:	xchg   ebx,eax
  40fc6e:	sub    eax,0xe9a96426
  40fc73:	into   
  40fc74:	mov    dh,0x19
  40fc76:	mov    ebx,0xdeca4b57
  40fc7b:	pop    edx
  40fc7c:	cmp    edx,edx
  40fc7e:	dec    eax
  40fc7f:	in     al,0x73
  40fc81:	sub    ebx,esp
  40fc83:	call   0x33adba68
  40fc88:	mov    esp,0x149ab7c6
  40fc8d:	sbb    DWORD PTR [esi+0x19],esi
  40fc90:	lea    edx,[ebx]
  40fc92:	cmp    ebp,DWORD PTR [edi+0x3b]
  40fc95:	pusha  
  40fc96:	pop    es
  40fc97:	add    ah,BYTE PTR ds:0x93f34b5f
  40fc9d:	(bad)  
  40fc9e:	out    0x88,eax
  40fca0:	dec    esi
  40fca1:	add    edx,0x1a
  40fca4:	je     0x40fcc8
  40fca6:	mov    al,ds:0x27502cc2
  40fcab:	add    BYTE PTR [ebx],0x26
  40fcae:	into   
  40fcaf:	ficomp DWORD PTR [esp+ecx*2-0x5db7f7c3]
  40fcb6:	sar    DWORD PTR [eax+ebx*8],cl
  40fcb9:	leave  
  40fcba:	add    eax,0x3ee7a1a3
  40fcbf:	dec    edx
  40fcc0:	mov    dl,0x60
  40fcc2:	fsubr  st(5),st
  40fcc4:	jg     0x40fd09
  40fcc6:	js     0x40fc62
  40fcc8:	outs   dx,BYTE PTR ds:[esi]
  40fcc9:	push   0xc659d63e
  40fcce:	lods   al,BYTE PTR fs:[esi]
  40fcd0:	in     al,0x60
  40fcd2:	(bad)  
  40fcd3:	pop    edx
  40fcd4:	icebp  
  40fcd5:	xor    BYTE PTR [esi-0xe29972f],dl
  40fcdb:	and    al,0xe8
  40fcdd:	jmp    0x5862:0x3bce6608
  40fce4:	icebp  
  40fce5:	pop    esi
  40fce6:	mov    al,ds:0xc197a37
  40fceb:	sahf   
  40fcec:	pusha  
  40fced:	pop    eax
  40fcee:	sbb    esp,ebx
  40fcf0:	adc    DWORD PTR [ecx-0x6d],ebp
  40fcf3:	ds in  al,dx
  40fcf5:	add    al,0x1e
  40fcf7:	cmp    edi,DWORD PTR [esi]
  40fcf9:	cmc    
  40fcfa:	add    al,BYTE PTR [edx]
  40fcfc:	scas   eax,DWORD PTR es:[edi]
  40fcfd:	xchg   edx,eax
  40fcfe:	rol    BYTE PTR [edi],0xe1
  40fd01:	inc    esp
  40fd02:	jg     0x40fcb9
  40fd04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd05:	cld    
  40fd06:	out    0x42,al
  40fd08:	jle    0x40fd51
  40fd0a:	stos   DWORD PTR es:[edi],eax
  40fd0b:	adc    BYTE PTR [ecx+0x45],0x8f
  40fd0f:	xchg   esi,ecx
  40fd11:	scas   eax,DWORD PTR es:[edi]
  40fd12:	adc    al,0x6f
  40fd14:	lods   al,BYTE PTR ds:[esi]
  40fd16:	nop
  40fd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd18:	cmp    bh,BYTE PTR [esi]
  40fd1a:	les    edx,FWORD PTR [esi-0x395c1fe1]
  40fd20:	repz push cs
  40fd22:	cmc    
  40fd23:	cld    
  40fd24:	scas   al,BYTE PTR es:[edi]
  40fd25:	mov    al,0x5b
  40fd27:	loopne 0x40fd9e
  40fd29:	bound  edx,QWORD PTR [edx-0x79c67a05]
  40fd2f:	cmc    
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   eax,0x4687ed53
  40fd36:	jmp    0x15f0f8e7
  40fd3b:	cmp    DWORD PTR [eax-0xe],edi
  40fd3e:	xchg   BYTE PTR [edi],al
  40fd40:	lds    esi,FWORD PTR [edi]
  40fd42:	add    DWORD PTR [eax],eax
  40fd44:	sub    DWORD PTR [eax-0x1d6116a5],ebp
  40fd4a:	lods   al,BYTE PTR ds:[esi]
  40fd4b:	fwait
  40fd4c:	pop    ds
  40fd4d:	cmp    DWORD PTR [eax+0x66b22e98],0x2a
  40fd54:	sbb    ecx,DWORD PTR ds:0xb40c6876
  40fd5a:	jbe    0x40fd3a
  40fd5c:	sub    bl,bh
  40fd5e:	jmp    0xad5353a7
  40fd63:	enter  0x86a8,0x2
  40fd67:	and    ch,BYTE PTR [eax+edx*2]
  40fd6a:	fnstsw ax
  40fd6c:	dec    esp
  40fd6d:	mov    ebx,0x25138cf3
  40fd72:	mov    eax,0x6aa39b47
  40fd77:	dec    ebp
  40fd78:	mov    ch,al
  40fd7a:	xor    dh,cl
  40fd7c:	cdq    
  40fd7d:	js     0x40fd9e
  40fd7f:	inc    ebp
  40fd80:	cwde   
  40fd81:	add    ah,BYTE PTR [ebp-0x41881560]
  40fd87:	cwde   
  40fd88:	jae    0x40fd45
  40fd8a:	jmp    0x2b20:0x37ccf43c
  40fd91:	es or  eax,0x32de7769
  40fd97:	aaa    
  40fd98:	mov    bh,0xcd
  40fd9a:	xorps  xmm0,XMMWORD PTR [edx+0x6ab0cbae]
  40fda1:	jle    0x40fdf6
  40fda3:	ret    
  40fda4:	xchg   esi,eax
  40fda5:	imul   edx,esp,0x7d
  40fda8:	rol    BYTE PTR es:[esi+0x1f],1
  40fdac:	cmp    al,BYTE PTR [edi]
  40fdae:	repz jle 0x40fd89
  40fdb1:	adc    al,0xc5
  40fdb3:	pop    edx
  40fdb5:	loope  0x40fd38
  40fdb7:	mov    esp,0xff4fc0ed
  40fdbc:	scas   eax,DWORD PTR es:[edi]
  40fdbd:	lea    esi,[esi+0x4337406]
  40fdc3:	pushf  
  40fdc4:	sti    
  40fdc5:	inc    edx
  40fdc6:	cmp    eax,0xede10c3d
  40fdcb:	xchg   BYTE PTR [ecx],dh
  40fdcd:	scas   al,BYTE PTR es:[edi]
  40fdce:	pop    DWORD PTR [edx]
  40fdd0:	out    dx,al
  40fdd1:	mov    al,0x19
  40fdd3:	jo     0x40fd75
  40fdd5:	and    al,0xcd
  40fdd7:	pop    esi
  40fdd8:	rcr    ch,1
  40fdda:	cmc    
  40fddb:	inc    edi
  40fddc:	inc    eax
  40fddd:	and    BYTE PTR [ebp-0x36],cl
  40fde0:	push   esi
  40fde1:	push   es
  40fde2:	mov    DWORD PTR [eax-0x65],edx
  40fde5:	in     eax,dx
  40fde6:	outs   dx,DWORD PTR ds:[esi]
  40fde7:	ror    DWORD PTR [edx-0x49],1
  40fdea:	xchg   edi,eax
  40fdeb:	ss xchg esi,eax
  40fded:	mov    bh,0x7e
  40fdef:	jo     0x40fdf7
  40fdf1:	xchg   DWORD PTR [edx+0x42],ebp
  40fdf4:	sub    bl,al
  40fdf6:	cmp    BYTE PTR [edi+0x7c284ab1],bh
  40fdfc:	xchg   ebp,eax
  40fdfd:	rcl    DWORD PTR [ebp-0x23],0x74
  40fe01:	nop
  40fe02:	lods   al,BYTE PTR ds:[esi]
  40fe03:	cs push edx
  40fe05:	push   ss
  40fe06:	push   edx
  40fe07:	pop    esi
  40fe08:	daa    
  40fe09:	cmp    dh,BYTE PTR [ebx]
  40fe0b:	or     DWORD PTR [edx],esi
  40fe0d:	and    DWORD PTR [ecx+ebp*2+0x345325bf],0xffffffb0
  40fe15:	sub    al,0x31
  40fe17:	jne    0x40fe35
  40fe19:	(bad)  
  40fe1a:	ds mov esp,0x16787518
  40fe20:	xor    al,0x60
  40fe22:	les    ebx,FWORD PTR ds:0x8f5adc8f
  40fe28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe29:	inc    ecx
  40fe2a:	pop    ebp
  40fe2b:	dec    edx
  40fe2c:	sub    BYTE PTR [esi],0xab
  40fe2f:	call   0x4145d2b1
  40fe34:	inc    edi
  40fe35:	and    al,0xf3
  40fe37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe38:	adc    dl,bl
  40fe3a:	scas   eax,DWORD PTR es:[edi]
  40fe3b:	push   esp
  40fe3c:	jge    0x40fe1b
  40fe3e:	jnp    0x40fe96
  40fe40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe41:	inc    eax
  40fe42:	and    ebp,ebp
  40fe44:	hlt    
  40fe45:	sbb    BYTE PTR [edx+0x5b],dh
  40fe48:	and    ebx,DWORD PTR [esi-0x69f70334]
  40fe4e:	addr16 icebp 
  40fe50:	push   esi
  40fe51:	hlt    
  40fe52:	mov    ebx,0x6faba7ae
  40fe57:	mov    WORD PTR [ebp+0x14],fs
  40fe5a:	aaa    
  40fe5b:	or     dl,BYTE PTR [edi]
  40fe5d:	mov    DWORD PTR [ebp-0x6d],ecx
  40fe60:	adc    BYTE PTR [edi-0x60],0xba
  40fe64:	push   ss
  40fe65:	into   
  40fe66:	push   0x5b0933dd
  40fe6b:	fild   DWORD PTR [edx+ebx*8+0x36]
  40fe6f:	nop
  40fe70:	jmp    0x40fe31
  40fe72:	es nop
  40fe74:	imul   edi,esp,0x58ce815c
  40fe7a:	jmp    0x9581:0xcfc9c60e
  40fe81:	into   
  40fe82:	call   0x80cc:0x2f4f5dc8
  40fe89:	push   ebp
  40fe8a:	xlat   BYTE PTR ds:[ebx]
  40fe8b:	(bad)  
  40fe8c:	xadd   DWORD PTR [edx+0x5f117cbe],edx
  40fe93:	fwait
  40fe94:	stos   DWORD PTR es:[edi],eax
  40fe95:	or     edx,DWORD PTR [esi-0x2bc518fc]
  40fe9b:	dec    ecx
  40fe9c:	dec    ebx
  40fe9d:	xor    eax,0x96fc329f
  40fea2:	bound  esp,QWORD PTR ds:0x7efd5b61
  40fea8:	xor    eax,0xeb5c84b2
  40fead:	cmc    
  40feae:	pop    esp
  40feaf:	xchg   DWORD PTR [ecx+0x25d9096f],ecx
  40feb5:	and    al,0x84
  40feb7:	mov    edi,0xb1276940
  40febc:	mov    ds,edi
  40febe:	retf   
  40febf:	xchg   DWORD PTR [ecx],edi
  40fec1:	mov    al,ds:0x6cfba79b
  40fec6:	ret    0xa2a4
  40fec9:	clc    
  40feca:	and    al,BYTE PTR [ecx-0x73c4b320]
  40fed0:	mov    ds:0xd5ed2ae7,eax
  40fed5:	mov    ecx,0x484bee23
  40feda:	(bad)  
  40fedb:	mov    edx,0xee2fe600
  40fee0:	pop    ebp
  40fee1:	jbe    0x40fedc
  40fee3:	fistp  QWORD PTR [ecx]
  40fee5:	ins    BYTE PTR es:[edi],dx
  40fee6:	sbb    bl,al
  40fee8:	pop    es
  40fee9:	stos   DWORD PTR es:[edi],eax
  40feea:	inc    DWORD PTR [ecx-0x27]
  40feed:	mov    ds:0xb6f177bc,al
  40fef2:	mov    dl,0x53
  40fef4:	(bad)  
  40fef5:	jecxz  0x40ff32
  40fef7:	xchg   edi,eax
  40fef8:	xor    cl,dh
  40fefa:	(bad)  
  40fefb:	mov    esi,0x94aa3a4
  40ff00:	jne    0x40feee
  40ff02:	sahf   
  40ff03:	mov    esp,0xacf7bf82
  40ff08:	std    
  40ff09:	test   BYTE PTR [ebx],0x65
  40ff0c:	inc    esi
  40ff0d:	inc    eax
  40ff0e:	into   
  40ff0f:	inc    edi
  40ff10:	cli    
  40ff11:	xor    bl,BYTE PTR [ebp+edi*8-0x41]
  40ff15:	cli    
  40ff16:	repnz sbb ah,ch
  40ff19:	or     al,0x76
  40ff1b:	aad    0xb7
  40ff1d:	push   edi
  40ff1e:	in     eax,dx
  40ff1f:	call   0xa9d0:0xbea0d850
  40ff26:	pusha  
  40ff27:	test   BYTE PTR [esi],0x5
  40ff2a:	cmc    
  40ff2b:	sbb    DWORD PTR [esi],0x32
  40ff2e:	jl     0x40ff07
  40ff30:	mov    esp,0x8c00bdee
  40ff35:	push   ebx
  40ff36:	jp     0x40ff54
  40ff38:	jae    0x40ff9c
  40ff3a:	arpl   WORD PTR [esi],di
  40ff3c:	pusha  
  40ff3d:	sbb    eax,DWORD PTR [edx-0x621b4b5b]
  40ff43:	cli    
  40ff44:	and    esi,DWORD PTR [edi+0x3f]
  40ff47:	xchg   esp,eax
  40ff48:	lock dec edx
  40ff4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff4b:	mov    eax,ds:0x319c265f
  40ff50:	pop    ss
  40ff51:	lea    esp,ds:0xb5309227
  40ff57:	xor    esi,DWORD PTR [ebx+0x555b6e50]
  40ff5d:	sub    al,0x71
  40ff5f:	popa   
  40ff60:	data16 cld 
  40ff62:	mov    ebx,0x4df51e7
  40ff67:	fstp   DWORD PTR [edi+0x64317684]
  40ff6d:	mov    ecx,0x7826e11f
  40ff72:	lahf   
  40ff73:	call   0x340f34c0
  40ff78:	pop    es
  40ff79:	arpl   WORD PTR [ebx],cx
  40ff7b:	sub    ebp,DWORD PTR [edx]
  40ff7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff7e:	dec    ebp
  40ff7f:	out    0x4c,al
  40ff81:	cmp    bl,al
  40ff83:	outs   dx,DWORD PTR ds:[esi]
  40ff84:	push   edx
  40ff85:	lahf   
  40ff86:	dec    edx
  40ff87:	in     al,0xa2
  40ff89:	pop    ebx
  40ff8a:	imul   BYTE PTR ds:0xb130e40b
  40ff90:	fadd   DWORD PTR [eax+0x4e]
  40ff93:	dec    ebx
  40ff94:	mov    edx,0xf6c6c65f
  40ff99:	add    al,0xf0
  40ff9b:	data16 sbb al,0xf3
  40ff9e:	ret    
  40ff9f:	xchg   edx,eax
  40ffa0:	jno    0x40ffcf
  40ffa2:	mov    ebx,0x75f909
  40ffa7:	push   ss
  40ffa8:	(bad)  
  40ffa9:	mov    edx,0x890c6ed8
  40ffae:	and    BYTE PTR [edx-0x48],bh
  40ffb1:	hlt    
  40ffb2:	pushf  
  40ffb3:	sbb    eax,0xb44464a2
  40ffb8:	pop    edi
  40ffb9:	xchg   edi,eax
  40ffba:	and    edi,DWORD PTR [esi-0x2198e480]
  40ffc0:	sub    al,0xf5
  40ffc2:	xchg   ebp,eax
  40ffc3:	mov    ss,WORD PTR [ebx-0x5d74cf0e]
  40ffc9:	aaa    
  40ffca:	lods   eax,DWORD PTR ds:[esi]
  40ffcb:	jae    0x40ffbc
  40ffcd:	mov    bl,0xeb
  40ffcf:	push   eax
  40ffd0:	sub    BYTE PTR ds:0x4b02831b,0x62
  40ffd7:	std    
  40ffd8:	das    
  40ffd9:	(bad)  
  40ffdb:	(bad)  
  40ffdc:	lea    ecx,[esi-0x1bf7d694]
  40ffe2:	clc    
  40ffe3:	sub    DWORD PTR [ebp+0x32],edx
  40ffe6:	int3   
  40ffe7:	sbb    BYTE PTR [edi-0x7a1802c1],0xbd
  40ffee:	lahf   
  40ffef:	cli    
  40fff0:	inc    esp
  40fff1:	inc    ecx
  40fff2:	les    edx,FWORD PTR [esi]
  40fff4:	ins    BYTE PTR es:[edi],dx
  40fff5:	or     eax,0x401e3274
  40fffa:	xor    bl,BYTE PTR [ebx-0x21]
  40fffd:	adc    al,0x9b
  40ffff:	jp     0x410036
  410001:	mov    ebp,0x2b3da021
  410006:	retf   0x1790
  410009:	shl    BYTE PTR [ebx+0x3d45a730],cl
  41000f:	sub    BYTE PTR gs:[ecx+edx*4],dh
  410013:	lahf   
  410014:	add    ah,BYTE PTR [ebx]
  410016:	aas    
  410017:	jle    0x410061
  410019:	and    eax,0x1341aed8
  41001e:	cs out 0x4e,eax
  410021:	jnp    0x410091
  410023:	scas   al,BYTE PTR es:[edi]
  410024:	lods   al,BYTE PTR ds:[esi]
  410025:	inc    edi
  410026:	mov    al,0xa4
  410028:	inc    edi
  410029:	repnz loop 0x410002
  41002c:	cmp    eax,0xdeab13f9
  410031:	inc    edx
  410032:	mov    bh,0x29
  410034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410035:	pop    ebp
  410036:	out    0x51,eax
  410038:	cli    
  410039:	ins    DWORD PTR es:[edi],dx
  41003a:	adc    DWORD PTR [ecx],edi
  41003c:	js     0x40fff6
  41003e:	nop
  41003f:	pop    edx
  410040:	in     al,0x68
  410042:	lods   al,BYTE PTR ds:[esi]
  410043:	mov    eax,ds:0x86c5ffa9
  410048:	jne    0x410085
  41004a:	imul   edx,DWORD PTR [eax+0x5a85495e],0x5a
  410051:	dec    ebp
  410052:	dec    eax
  410053:	jle    0x410032
  410055:	mov    ebp,DWORD PTR [edi+0x67]
  410058:	jge    0x41003d
  41005a:	hlt    
  41005b:	sub    al,0x37
  41005d:	dec    ebx
  41005e:	test   DWORD PTR [esi-0x380eb7a7],esi
  410064:	or     al,0xdf
  410066:	hlt    
  410067:	sbb    al,BYTE PTR [edi]
  410069:	(bad)  
  41006a:	fild   QWORD PTR [ebx-0x4150deab]
  410070:	and    esp,ebx
  410072:	and    al,0xfe
  410074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410075:	jmp    0x3488a1bf
  41007a:	lods   eax,DWORD PTR ds:[esi]
  41007b:	inc    ebp
  41007c:	push   ds
  41007d:	and    ebp,DWORD PTR [edx+0x46]
  410080:	imul   esi,DWORD PTR [edx],0x777c9c6c
  410086:	push   esp
  410087:	jmp    0x4100d9
  410089:	sub    esp,DWORD PTR cs:[edx+edi*4-0xc29f52]
  410091:	mov    cs,WORD PTR [eax]
  410093:	ss adc al,0x6
  410096:	sub    al,0xa2
  410098:	test   BYTE PTR [ecx-0x6f37bac3],dh
  41009e:	aaa    
  41009f:	test   al,0x97
  4100a1:	xchg   BYTE PTR [edx+0x72],bl
  4100a4:	dec    ebp
  4100a5:	test   eax,0x219e08ba
  4100aa:	aam    0xa5
  4100ac:	dec    ebp
  4100ad:	out    0x8a,eax
  4100af:	lods   al,BYTE PTR ds:[esi]
  4100b0:	lods   eax,DWORD PTR ds:[esi]
  4100b1:	adc    edi,DWORD PTR [ecx]
  4100b3:	les    ebp,FWORD PTR [eax+edx*1+0x12]
  4100b7:	mov    ds:0x2fd3c4b0,al
  4100bc:	test   BYTE PTR cs:[ebp+0x1dcba958],0x89
  4100c4:	mov    BYTE PTR ds:0x1211ea2e,bl
  4100ca:	inc    edx
  4100cb:	and    bh,cl
  4100cd:	aad    0xd6
  4100cf:	(bad)  
  4100d0:	loopne 0x410135
  4100d2:	push   es
  4100d3:	fdiv   DWORD PTR [ebx]
  4100d5:	xchg   edx,eax
  4100d6:	sbb    eax,0x3843ae3
  4100db:	sbb    ch,BYTE PTR [ebx+ebp*4]
  4100de:	lea    ebx,[ebp+0x63]
  4100e1:	mov    edx,0x633aaf38
  4100e6:	push   eax
  4100e7:	push   esp
  4100e8:	fcmovnb st,st(2)
  4100ea:	(bad)  
  4100eb:	data16 and BYTE PTR [ebx-0xd],al
  4100ef:	mov    dl,0x69
  4100f1:	push   ebx
  4100f2:	mov    ch,dl
  4100f4:	addr16 cli 
  4100f6:	mov    ebp,0x9a3ceae8
  4100fb:	jb     0x3d191754
  410101:	sub    dh,dl
  410103:	jge    0x4100f8
  410105:	mov    al,ds:0xc7d746cb
  41010a:	mov    dh,0xaa
  41010c:	(bad)  
  41010d:	ret    
  41010e:	ins    DWORD PTR es:[edi],dx
  41010f:	push   esi
  410110:	dec    esi
  410111:	mov    edx,0x4b18395
  410116:	fwait
  410117:	mov    ss,WORD PTR [edx]
  410119:	rcl    DWORD PTR [esi-0x9],1
  41011c:	repnz popf 
  41011e:	fadd   st(0),st
  410120:	or     eax,0x3f7fb021
  410125:	mov    cl,0x5b
  410127:	xchg   edi,eax
  410129:	inc    esi
  41012a:	mov    ch,0xbe
  41012c:	addr16 sahf 
  41012e:	xor    eax,0xdbe5e25a
  410133:	in     eax,dx
  410134:	mov    bl,0xd2
  410136:	in     al,dx
  410137:	mov    WORD PTR [edi-0x5a],?
  41013a:	mov    ebp,DWORD PTR [esi-0x2]
  41013d:	dec    ebp
  41013e:	mov    edi,0x523bd646
  410143:	mov    edx,0xa44cfbcd
  410148:	sub    bl,BYTE PTR [ecx+0x62]
  41014b:	sti    
  41014c:	add    esi,DWORD PTR [eax]
  41014e:	mov    ebp,0xa7624d6c
  410153:	call   DWORD PTR [ecx]
  410155:	dec    ebp
  410156:	xchg   ebx,eax
  410157:	xchg   edi,eax
  410158:	sub    BYTE PTR [edi+0x11],bh
  41015b:	jbe    0x41015c
  41015d:	fs pop edx
  41015f:	lock mov dl,0x84
  410162:	stc    
  410163:	or     eax,0xc5f81ea8
  410168:	pop    es
  410169:	or     DWORD PTR [eax-0x1f],0xffffffd8
  41016d:	out    0x92,al
  41016f:	arpl   bp,sp
  410171:	mov    esp,0x2820ecfc
  410176:	scas   al,BYTE PTR es:[edi]
  410177:	bound  eax,QWORD PTR [edx-0x38]
  41017a:	call   0x5c5d:0xf171f3cf
  410181:	jecxz  0x41014e
  410183:	(bad)  
  410184:	or     bl,BYTE PTR [edx+ebp*4+0x21]
  410188:	and    BYTE PTR [edx-0x3],al
  41018b:	dec    esi
  41018c:	sar    BYTE PTR [edi-0x5a],cl
  41018f:	mov    dh,0xc6
  410191:	ja     0x41018c
  410193:	fmulp  st(5),st
  410195:	test   BYTE PTR [edi],0x42
  410198:	pop    ss
  410199:	in     eax,dx
  41019a:	mov    dh,0x12
  41019c:	sub    DWORD PTR [eax-0x28],edx
  41019f:	out    0xed,eax
  4101a1:	stc    
  4101a2:	stc    
  4101a3:	cmp    BYTE PTR [ebx],ch
  4101a5:	call   0xd1d62d
  4101aa:	lods   al,BYTE PTR ds:[esi]
  4101ab:	iret   
  4101ac:	or     bl,0x81
  4101af:	add    bl,dh
  4101b1:	jmp    0x294f:0x4b71f198
  4101b8:	ins    BYTE PTR es:[edi],dx
  4101b9:	shl    edx,1
  4101bb:	call   0x1228472
  4101c0:	push   ebx
  4101c1:	test   al,0x8a
  4101c3:	fisubr DWORD PTR [edi+0x70]
  4101c6:	jge    0x410180
  4101c8:	lods   eax,DWORD PTR ds:[esi]
  4101c9:	repz sub bl,BYTE PTR ds:0xab04b938
  4101d0:	loop   0x410172
  4101d2:	mov    al,0x6d
  4101d4:	xchg   ecx,eax
  4101d5:	adc    DWORD PTR [esi+0x13676f41],ebp
  4101db:	and    al,0xaf
  4101dd:	scas   eax,DWORD PTR es:[edi]
  4101de:	or     edi,edi
  4101e0:	pop    ebp
  4101e1:	inc    edx
  4101e2:	fucomi st,st(6)
  4101e4:	and    edi,eax
  4101e6:	xchg   esp,eax
  4101e7:	cmp    al,0xba
  4101e9:	jmp    DWORD PTR [edi+0x2e]
  4101ec:	push   0xffffffe9
  4101ee:	call   0x831a4b75
  4101f3:	mov    edx,0xa5c486d6
  4101f8:	xchg   edi,eax
  4101f9:	lock sbb al,BYTE PTR [ecx-0x2b26db0f]
  410200:	ja     0x410252
  410202:	add    DWORD PTR [edi+0x63d2a672],0xffffffd0
  410209:	and    al,0x3
  41020b:	cwd    
  41020d:	mov    ds:0x2f041206,eax
  410212:	or     eax,ecx
  410214:	sub    BYTE PTR [ebx+0x48052104],bh
  41021a:	adc    edx,DWORD PTR [ebp-0x2897a533]
  410220:	pop    esp
  410221:	repnz stos DWORD PTR es:[edi],eax
  410223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410224:	(bad)  
  410225:	mov    ecx,0x3ae7d960
  41022a:	inc    ecx
  41022b:	retf   0x40fd
  41022e:	stos   BYTE PTR es:[edi],al
  41022f:	mov    edi,0x5b5843e6
  410234:	mov    dl,0xb3
  410236:	dec    ebp
  410237:	add    al,0x11
  410239:	gs int3 
  41023b:	stos   DWORD PTR es:[edi],eax
  41023c:	icebp  
  41023d:	jne    0x41024a
  41023f:	mov    dh,bh
  410241:	es xchg ebp,eax
  410243:	(bad)  
  410244:	in     eax,dx
  410245:	aad    0x85
  410247:	mov    ds:0x422f4c9f,al
  41024c:	mov    bl,0x90
  41024e:	fnstenv [eax-0x801b5b5]
  410254:	pop    edx
  410255:	repnz adc al,BYTE PTR [eax]
  410258:	je     0x410238
  41025a:	xchg   ecx,eax
  41025b:	push   eax
  41025c:	fdivr  st,st(0)
  41025e:	pop    ds
  41025f:	dec    edx
  410260:	mov    eax,ds:0x94727ae
  410265:	out    dx,eax
  410266:	push   0xffffffb2
  410268:	jmp    0x1075266
  41026d:	inc    ecx
  41026e:	mov    edx,0x61fb06c0
  410273:	out    0x3a,al
  410275:	inc    esi
  410276:	xchg   ebx,eax
  410277:	jmp    0x41027f
  410279:	add    cl,BYTE PTR [ebx+0x53f22f95]
  41027f:	jge    0x4102f4
  410281:	mov    bh,0xe2
  410283:	sub    eax,0x67e797c1
  410288:	mov    bl,0x20
  41028a:	push   edx
  41028b:	dec    edx
  41028c:	push   0xe1fb5bbf
  410291:	adc    al,0x77
  410293:	mov    ds:0x352dabb0,al
  410298:	(bad)  
  41029a:	sti    
  41029b:	in     eax,dx
  41029c:	mov    ebp,0x42e30f2f
  4102a1:	(bad)  
  4102a3:	jg     0x4102b1
  4102a5:	sti    
  4102a6:	into   
  4102a7:	xchg   ecx,eax
  4102a8:	retf   0x79ba
  4102ab:	(bad)  
  4102ac:	sub    al,al
  4102ae:	and    BYTE PTR [edx+edx*8+0xe791fb2],0x3c
  4102b6:	popf   
  4102b7:	jnp    0x4102b4
  4102b9:	sbb    DWORD PTR [ebp+0x6e1495b],0x3c7225db
  4102c3:	(bad)
  4102c7:	mov    edi,0x84fd097
  4102cc:	and    eax,eax
  4102ce:	sub    bh,ch
  4102d0:	mov    BYTE PTR [esi],dl
  4102d2:	inc    ebx
  4102d3:	xchg   ebx,eax
  4102d4:	rcl    ch,0x7d
  4102d7:	jae    0x4102bd
  4102d9:	loopne 0x4102cb
  4102db:	sub    al,0xbe
  4102dd:	mov    BYTE PTR [ebp+0x32],al
  4102e0:	and    BYTE PTR [ebp-0x1c],ch
  4102e3:	or     DWORD PTR [edx-0x3633cdab],0x19
  4102ea:	ds or  dl,bh
  4102ed:	mov    dh,0x4e
  4102ef:	pop    eax
  4102f1:	loopne 0x4102be
  4102f3:	mov    dh,0x64
  4102f5:	gs in  eax,0x80
  4102f8:	je     0x410315
  4102fa:	sti    
  4102fb:	sbb    eax,0xc36acb1b
  410300:	cmp    BYTE PTR [esp+ecx*1-0x6507c32],ah
  410307:	mov    dh,bl
  410309:	xor    DWORD PTR [ecx+0x527ae9ae],ebx
  41030f:	sbb    bl,BYTE PTR [ecx+0x415f752d]
  410315:	stos   DWORD PTR es:[edi],eax
  410316:	sub    eax,0x4d9f61b1
  41031b:	push   ebx
  41031c:	js     0x4102da
  41031e:	inc    ebx
  41031f:	push   es
  410320:	mov    eax,DWORD PTR [eax]
  410322:	xchg   ebp,eax
  410323:	xchg   esp,eax
  410324:	add    ecx,ecx
  410326:	cwde   
  410327:	data16 (bad) 
  410329:	test   eax,0xeb822421
  41032e:	jno    0x4102e3
  410330:	and    bl,dl
  410332:	arpl   WORD PTR ds:0xcbea282e,sp
  410338:	push   ebp
  410339:	mov    cl,0x2b
  41033b:	cmp    eax,0x33eadb8b
  410340:	and    al,0x5e
  410342:	out    0xe7,al
  410344:	aaa    
  410345:	mov    esp,0xb6c43ba
  41034a:	mov    ebp,DWORD PTR [eax-0x1d002f15]
  410350:	inc    DWORD PTR [ebx]
  410352:	inc    esp
  410353:	mov    edi,0x73ab9255
  410358:	xor    BYTE PTR [ebp-0x679e0b56],cl
  41035e:	in     eax,dx
  41035f:	sbb    edi,eax
  410361:	mov    eax,0xb7df4c4b
  410366:	dec    esi
  410367:	out    dx,eax
  410368:	sub    eax,DWORD PTR [edx]
  41036a:	pop    es
  41036b:	or     BYTE PTR ds:0x545ed871,al
  410371:	ins    BYTE PTR es:[edi],dx
  410372:	adc    al,0x97
  410374:	adc    al,0xa8
  410376:	add    DWORD PTR [eax],esi
  410378:	cwde   
  410379:	jbe    0x41033f
  41037b:	in     al,dx
  41037c:	mul    ecx
  41037e:	out    dx,al
  41037f:	shl    BYTE PTR [esi+eiz*4-0x7d043d54],cl
  410386:	push   0xffffffaf
  410388:	int    0x15
  41038a:	jg     0x410397
  41038c:	into   
  41038d:	sar    DWORD PTR [esp+ecx*2+0x2963d4a0],0x6
  410395:	mov    eax,DWORD PTR [ecx-0x69]
  410398:	(bad)  
  410399:	jle    0x4103e9
  41039b:	pop    esp
  41039c:	inc    ecx
  41039d:	stos   DWORD PTR es:[edi],eax
  41039e:	test   BYTE PTR cs:[edx+edx*1-0x12],0x2f
  4103a4:	pop    edi
  4103a5:	std    
  4103a6:	adc    bh,BYTE PTR [eax+eiz*1]
  4103a9:	pop    ecx
  4103aa:	xlat   BYTE PTR ds:[ebx]
  4103ab:	fimul  DWORD PTR [ecx]
  4103ad:	sti    
  4103ae:	in     eax,dx
  4103af:	push   ss
  4103b0:	sub    DWORD PTR [eax+0x7],ebx
  4103b3:	sbb    BYTE PTR [ebp+esi*1-0x3d],dl
  4103b7:	dec    ecx
  4103b8:	or     al,0xb8
  4103ba:	mov    cl,0x6e
  4103bc:	addr16 pop es
  4103be:	pop    esp
  4103bf:	aaa    
  4103c0:	push   ss
  4103c1:	mov    BYTE PTR [ecx+esi*2+0x2395478f],0xd6
  4103c9:	jmp    0xa21273d2
  4103ce:	jmp    0x4289:0xb2db50a7
  4103d5:	rol    ebx,0x9
  4103d8:	aam    0x4f
  4103da:	call   0x16b4:0x9087a14d
  4103e1:	mov    eax,0xfe817c0
  4103e6:	sub    dl,bh
  4103e8:	dec    edx
  4103e9:	push   cs
  4103ea:	outs   dx,DWORD PTR ds:[esi]
  4103eb:	adc    eax,0x5f14d998
  4103f0:	xchg   ebx,eax
  4103f1:	rcl    ebx,0x37
  4103f4:	jmp    0x4103aa
  4103f6:	xor    eax,0xbfc92d30
  4103fb:	iret   
  4103fc:	int3   
  4103fd:	cmp    dh,cl
  4103ff:	hlt    
  410400:	pop    edi
  410401:	test   eax,0x295c5338
  410406:	cmp    BYTE PTR [ecx+0x4d082794],bh
  41040c:	mov    eax,ds:0x518b6259
  410411:	cdq    
  410412:	push   ebp
  410413:	jnp    0x4103a3
  410415:	mov    edx,0x158db957
  41041a:	leave  
  41041b:	xlat   BYTE PTR ds:[ebx]
  41041c:	lods   eax,DWORD PTR ds:[esi]
  41041d:	ds jo  0x4103a5
  410420:	mov    ecx,0xc3b3fef1
  410425:	nop
  410426:	or     BYTE PTR [esi],bh
  410428:	(bad)  
  410429:	pop    ebx
  41042a:	clc    
  41042b:	push   edi
  41042c:	pop    esp
  41042d:	sub    eax,0x6420ec36
  410432:	dec    ebp
  410433:	mov    ebp,0x1befbf49
  410438:	jg     0x41044c
  41043a:	push   ebp
  41043b:	push   edi
  41043c:	fisub  DWORD PTR [esi+0x33a9554]
  410442:	mov    ?,WORD PTR ds:0x93683e33
  410448:	cli    
  410449:	repnz fucom st(6)
  41044c:	inc    eax
  41044d:	dec    edx
  41044e:	fucomp st(2)
  410450:	call   0xb4a4ea9d
  410455:	pop    ebx
  410456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410457:	pop    ss
  410458:	cmp    ebx,edi
  41045a:	xor    al,0x4e
  41045c:	sbb    bh,BYTE PTR [ebx+0x9]
  41045f:	dec    ebp
  410460:	std    
  410461:	outs   dx,BYTE PTR ds:[esi]
  410462:	push   ss
  410463:	cmp    DWORD PTR [edi-0x1670b2ed],ebx
  410469:	pop    ebx
  41046a:	mov    ds:0xb0d9d2c8,al
  41046f:	push   ebx
  410470:	jle    0x41043d
  410472:	mov    ebp,DWORD PTR [esi+0xa]
  410475:	push   es
  410476:	sub    DWORD PTR [ebp+0x5c],0x52
  41047a:	mov    edi,0xc1c290b0
  41047f:	iret   
  410480:	mov    bl,0x70
  410482:	mov    ds:0xe3c88b5d,al
  410487:	fdivr  st,st(6)
  410489:	div    DWORD PTR [esi+ebp*4+0x6a69e17d]
  410490:	mov    ah,0xf
  410492:	stc    
  410493:	scas   al,BYTE PTR es:[edi]
  410494:	mov    ebx,0xea5178a4
  410499:	repz mov esp,DWORD PTR [ebx-0x50]
  41049d:	push   edx
  41049e:	sbb    BYTE PTR [ebp+0x47],cl
  4104a1:	int    0xae
  4104a3:	fninit 
  4104a5:	jecxz  0x4104b1
  4104a7:	jg     0x4104da
  4104a9:	in     al,0x16
  4104ab:	les    eax,FWORD PTR [ebx-0x63861828]
  4104b1:	bound  ecx,QWORD PTR [eax]
  4104b3:	xchg   esi,eax
  4104b4:	pop    eax
  4104b5:	add    eax,0x97ceb6bd
  4104ba:	cli    
  4104bb:	sub    DWORD PTR [eax-0x10],0x4434aa44
  4104c2:	cwde   
  4104c3:	dec    eax
  4104c4:	push   DWORD PTR [ecx+edi*4+0x78409aba]
  4104cb:	data16 int 0xd1
  4104ce:	add    BYTE PTR [ecx],dl
  4104d0:	ds jmp 0x41046c
  4104d3:	ret    0x2440
  4104d6:	in     eax,dx
  4104d7:	or     BYTE PTR [esi-0x22],bl
  4104da:	jo     0x4104e5
  4104dc:	sub    ecx,DWORD PTR [edi-0x3c116c17]
  4104e2:	xchg   ebp,eax
  4104e3:	fidivr DWORD PTR [eax+0x711bfcd]
  4104e9:	cmp    BYTE PTR [esi],ch
  4104eb:	push   0xda17017a
  4104f0:	shr    edx,0x8b
  4104f3:	out    dx,eax
  4104f4:	pop    esi
  4104f5:	sbb    edx,DWORD PTR ds:0x54777bca
  4104fb:	mov    ds:0x57de1853,al
  410500:	cs iret 
  410502:	jnp    0x410487
  410504:	sbb    BYTE PTR [esi],bl
  410506:	shr    esi,cl
  410508:	mov    ah,BYTE PTR [esi-0x41cada2f]
  41050e:	sbb    DWORD PTR es:[ebx-0xf],edi
  410512:	xlat   BYTE PTR ds:[ebx]
  410513:	dec    esi
  410514:	cli    
  410515:	inc    esi
  410516:	fdivr  DWORD PTR [edi-0x5fafddcb]
  41051c:	jb     0x4104b1
  41051e:	mov    esp,0xbe87454a
  410523:	sbb    eax,0x30f5f146
  410528:	xor    eax,0x92cbabf5
  41052d:	fadd   QWORD PTR [ecx]
  41052f:	shl    DWORD PTR [edx-0x80],1
  410532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410533:	push   eax
  410534:	mov    esp,0x2a9d95c4
  410539:	push   esp
  41053a:	mov    edi,0x7a1419ff
  41053f:	push   0xffffffac
  410541:	pop    ebp
  410542:	aad    0x27
  410544:	or     eax,0xb6f2f8c9
  410549:	ss popa 
  41054b:	dec    esp
  41054c:	cmc    
  41054d:	ficomp DWORD PTR [eax]
  41054f:	and    al,0x36
  410551:	sub    eax,0x2157b19b
  410556:	jb     0x410565
  410558:	sbb    ah,ch
  41055a:	shr    BYTE PTR [edx+0x73],1
  41055d:	fimul  DWORD PTR [edi+0x48]
  410560:	sbb    BYTE PTR [eax-0x77bf39f7],cl
  410566:	mov    al,ds:0xd67ffd88
  41056b:	stos   BYTE PTR es:[edi],al
  41056c:	rcr    DWORD PTR [ebp-0x78a5597d],cl
  410572:	fldcw  WORD PTR [ebp+0x31]
  410575:	add    dl,BYTE PTR [edi+0x6a]
  410578:	test   DWORD PTR [ebp+0x2b],edx
  41057b:	jns    0x4105c9
  41057d:	and    al,0xb0
  41057f:	add    esp,edi
  410581:	inc    edi
  410582:	jo     0x410509
  410584:	pushf  
  410585:	inc    esi
  410586:	jno    0x4105d3
  410588:	jcxz   0x41051e
  41058b:	and    al,0xea
  41058d:	adc    eax,0xb9ef668b
  410592:	push   edx
  410593:	out    0xdb,eax
  410595:	sub    dh,bh
  410597:	xchg   DWORD PTR [ecx],eax
  410599:	xchg   esp,eax
  41059a:	js     0x410569
  41059c:	cmc    
  41059d:	fsub   QWORD PTR [edi+0x79]
  4105a0:	fisubr WORD PTR [ebp-0x45]
  4105a3:	inc    ecx
  4105a4:	in     eax,dx
  4105a5:	xor    eax,0xe4cafe22
  4105aa:	jnp    0x4105c3
  4105ac:	xor    ch,cl
  4105ae:	imul   ebx,ebp,0xffffffbc
  4105b1:	(bad)  
  4105b3:	sub    dh,BYTE PTR [edx]
  4105b5:	push   es
  4105b6:	aas    
  4105b7:	or     DWORD PTR [ebx+0x41],edi
  4105ba:	mov    ecx,0xbd30f3a9
  4105bf:	(bad)  
  4105c0:	clc    
  4105c1:	clc    
  4105c2:	test   BYTE PTR [esi+ebx*1],ch
  4105c5:	std    
  4105c6:	and    eax,0x2aa0a56c
  4105cb:	ja     0x410554
  4105cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ce:	pop    ebx
  4105cf:	cmc    
  4105d0:	or     al,0x5b
  4105d2:	push   esi
  4105d3:	in     eax,dx
  4105d4:	lahf   
  4105d5:	test   esp,0x10f164a0
  4105db:	mov    ds,WORD PTR [esi+0x445a2b5c]
  4105e1:	adc    ebx,DWORD PTR [ecx]
  4105e3:	js     0x410566
  4105e5:	nop
  4105e6:	lods   al,BYTE PTR ds:[esi]
  4105e7:	adc    al,0x9c
  4105e9:	pushf  
  4105ea:	jg     0x4105f8
  4105ec:	retfw  
  4105ee:	push   0x52757d6d
  4105f3:	cwde   
  4105f4:	pop    ecx
  4105f5:	cmp    ch,BYTE PTR [eax+0x32]
  4105f8:	add    eax,0xdc025bea
  4105fd:	jbe    0x410633
  4105ff:	jecxz  0x41062d
  410601:	and    eax,0xbf0e94b1
  410606:	and    eax,0xef4f2fd
  41060b:	xchg   edi,eax
  41060c:	jge    0x410657
  41060e:	stc    
  41060f:	mov    dh,0xac
  410611:	push   cs
  410612:	mov    ss,ecx
  410614:	sbb    eax,0x7c0db030
  410619:	jl     0x410635
  41061b:	clc    
  41061c:	or     BYTE PTR [ecx-0x65ceabfa],dh
  410622:	popa   
  410623:	pop    edi
  410624:	sbb    eax,0x8863907c
  410629:	test   BYTE PTR [ebp+edi*4+0x6634e58f],ah
  410630:	sub    BYTE PTR [ecx+0x3d],al
  410633:	pop    ebp
  410634:	sbb    DWORD PTR [ebp+0x66],esi
  410637:	outs   dx,DWORD PTR ds:[esi]
  410638:	outs   dx,DWORD PTR ds:[esi]
  410639:	fistp  QWORD PTR [ebp+0x89b0c29]
  41063f:	mov    esi,DWORD PTR [ebx]
  410641:	(bad)  
  410642:	test   bl,bl
  410644:	test   eax,0xb2f3b11e
  410649:	mov    edi,0x9af97eda
  41064e:	jecxz  0x410620
  410650:	std    
  410651:	inc    esi
  410652:	xchg   edx,eax
  410653:	or     dh,BYTE PTR [esi-0x22725f4a]
  410659:	inc    DWORD PTR [eax-0x24b2b78e]
  41065f:	hlt    
  410660:	hlt    
  410661:	cmc    
  410662:	fsubr  DWORD PTR [eax-0x4392b664]
  410668:	jo     0x410642
  41066a:	inc    edx
  41066b:	addr16 xchg edx,eax
  41066d:	int    0xd6
  41066f:	cmp    ebp,ebx
  410671:	mov    esp,0xe05a5170
  410676:	leave  
  410677:	aas    
  410678:	mov    bh,0x37
  41067a:	and    DWORD PTR [edi+eax*1+0x20],ebp
  41067e:	retf   0x9ec7
  410681:	add    DWORD PTR [edx+0x24e6176c],0xffffff84
  410688:	jae    0x410645
  41068a:	inc    eax
  41068b:	stos   BYTE PTR es:[edi],al
  41068c:	std    
  41068d:	das    
  41068e:	(bad)  
  41068f:	push   esp
  410690:	pop    eax
  410691:	das    
  410692:	sub    eax,0x41d6224e
  410697:	sub    DWORD PTR [edi-0x26],eax
  41069a:	and    cl,BYTE PTR ds:0x83d92c20
  4106a0:	pop    ds
  4106a1:	out    0x7d,eax
  4106a3:	loope  0x4106f5
  4106a5:	addr16 mov edi,0x9bd122c
  4106ab:	hlt    
  4106ac:	outs   dx,BYTE PTR ds:[esi]
  4106ad:	pop    ecx
  4106ae:	setne  dh
  4106b1:	daa    
  4106b2:	dec    ecx
  4106b3:	jg     0x410651
  4106b5:	jnp    0x410677
  4106b7:	and    edi,DWORD PTR [ebx-0x60]
  4106ba:	fs nop
  4106bc:	cmp    eax,0x1b7dd47a
  4106c1:	cmp    DWORD PTR [ebx+0x102d7fed],ebx
  4106c7:	dec    edi
  4106c8:	test   BYTE PTR [ebp-0x5e26bc54],cl
  4106ce:	and    BYTE PTR [eax],al
  4106d0:	fcom   QWORD PTR [ebx]
  4106d2:	pop    eax
  4106d3:	rcr    BYTE PTR [bx+di-0x25d2],cl
  4106d8:	fisub  WORD PTR [eax]
  4106da:	out    dx,eax
  4106db:	mov    edi,0xfde42161
  4106e0:	push   0x4d95dd3e
  4106e5:	fwait
  4106e6:	mov    eax,0xc53ccae7
  4106eb:	jp     0x410762
  4106ed:	std    
  4106ee:	ins    DWORD PTR es:[edi],dx
  4106ef:	jnp    0x410740
  4106f1:	leave  
  4106f2:	aaa    
  4106f3:	fcmovbe st,st(4)
  4106f5:	jmp    0xcc53:0x50fa6964
  4106fc:	adc    BYTE PTR [edx],dl
  4106fe:	addr16 pop ebp
  410700:	fild   QWORD PTR [esi]
  410702:	push   0x24
  410704:	inc    esp
  410705:	pushf  
  410706:	dec    esi
  410707:	push   es
  410708:	shl    BYTE PTR [ebp-0xf13e25a],0x8c
  41070f:	scas   eax,DWORD PTR es:[edi]
  410710:	jae    0x410755
  410712:	shl    cl,0x88
  410715:	jo     0x4106d5
  410717:	mov    gs,WORD PTR [eax]
  410719:	aas    
  41071a:	in     al,0xfc
  41071c:	in     eax,0xd5
  41071e:	xchg   dh,bh
  410720:	inc    ecx
  410721:	jo     0x4106e8
  410723:	retf   
  410724:	test   BYTE PTR [ecx],0x95
  410727:	fwait
  410728:	ins    BYTE PTR es:[edi],dx
  410729:	mov    esp,0x3540fdbe
  41072e:	sub    al,bl
  410730:	jbe    0x410720
  410732:	int    0x55
  410734:	jp     0x41078d
  410736:	dec    esi
  410737:	push   eax
  410738:	xor    esp,esp
  41073a:	in     eax,dx
  41073b:	mov    cl,BYTE PTR [eax-0x34]
  41073e:	arpl   bx,di
  410740:	inc    eax
  410741:	or     al,0xd4
  410743:	mov    ecx,0x9c7a29c6
  410748:	add    al,0x3e
  41074a:	push   esi
  41074b:	adc    dh,al
  41074d:	xor    DWORD PTR [edx],edx
  41074f:	mov    BYTE PTR [ebx-0x6917f320],dh
  410755:	sti    
  410756:	adc    eax,0x2741763
  41075b:	int3   
  41075c:	test   BYTE PTR [ebx],bh
  41075e:	stos   BYTE PTR es:[edi],al
  41075f:	and    al,0xff
  410761:	dec    esp
  410762:	xchg   ebp,eax
  410763:	mov    edx,0x7349c949
  410768:	mov    edi,0xc900542b
  41076d:	in     al,dx
  41076e:	and    al,0x28
  410770:	dec    edi
  410771:	inc    esp
  410772:	push   es
  410773:	mov    dh,0xb1
  410775:	gs (bad) 
  410777:	xor    DWORD PTR [edx],esi
  410779:	data16 (bad) 
  41077b:	arpl   WORD PTR [edi],si
  41077d:	cld    
  41077e:	cwde   
  41077f:	add    eax,0x96c3d5f2
  410784:	dec    ecx
  410785:	cwde   
  410786:	xchg   ecx,eax
  410787:	xchg   BYTE PTR [ecx-0x2b4f38d9],dl
  41078d:	test   eax,0x58ffe5f5
  410792:	dec    esi
  410793:	cmp    ch,ah
  410795:	pop    edx
  410796:	int3   
  410797:	out    dx,eax
  410798:	or     esp,ecx
  41079a:	sub    BYTE PTR [esi+0x31],0xf1
  41079e:	sub    ecx,DWORD PTR [ebp+0x60]
  4107a1:	in     al,0x3d
  4107a3:	retf   0x3e8c
  4107a6:	int    0x5
  4107a8:	sbb    ah,BYTE PTR [eax+0x77]
  4107ab:	pop    eax
  4107ac:	pop    edx
  4107ad:	int    0xe6
  4107af:	push   0x7f
  4107b1:	fnstcw WORD PTR [edi-0x38f18183]
  4107b7:	hlt    
  4107b8:	sub    edx,DWORD PTR [ebp+0x2]
  4107bb:	push   eax
  4107bc:	lahf   
  4107bd:	je     0x4107ab
  4107bf:	mov    ah,0xae
  4107c1:	in     eax,dx
  4107c2:	inc    edi
  4107c3:	aaa    
  4107c4:	mov    BYTE PTR [eax-0x458d814e],0xdd
  4107cb:	daa    
  4107cc:	pop    esi
  4107cd:	in     eax,dx
  4107ce:	xlat   BYTE PTR ds:[ebx]
  4107cf:	or     ebx,esi
  4107d1:	mov    esp,0x4fed92bc
  4107d6:	lea    esp,[eax+esi*4+0x41]
  4107da:	mov    edi,0x5101ea4d
  4107df:	jnp    0x410786
  4107e1:	cmp    al,bl
  4107e3:	cmp    al,0x4b
  4107e5:	in     al,dx
  4107e6:	inc    ecx
  4107e7:	inc    ebx
  4107e8:	dec    BYTE PTR [ecx-0x24ae9855]
  4107ee:	(bad)  [ebp+0x4e]
  4107f1:	push   esp
  4107f2:	clc    
  4107f3:	pushf  
  4107f4:	jb     0x4107c5
  4107f6:	add    ebx,DWORD PTR [edx+edx*1-0x33cccf5d]
  4107fd:	inc    ebx
  4107fe:	out    0xd7,eax
  410800:	push   edx
  410801:	pop    es
  410802:	out    0xd7,eax
  410804:	fdiv   DWORD PTR [edx+edx*4+0x1e]
  410808:	test   edx,edx
  41080a:	pop    edi
  41080b:	push   0x6
  41080d:	pop    ss
  41080e:	fsubr  st,st(2)
  410810:	sub    dl,dh
  410812:	gs sub eax,0xcf9c60fa
  410818:	inc    edi
  410819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41081a:	cmp    eax,0x34dca377
  41081f:	out    dx,al
  410820:	sbb    DWORD PTR [ecx-0x7e94ced6],esp
  410826:	adc    cl,BYTE PTR [ebx-0x77]
  410829:	fnstsw WORD PTR [ecx+0x11952b54]
  41082f:	sub    ebp,edx
  410831:	sbb    eax,0xe5e04f4b
  410836:	inc    ecx
  410837:	inc    edx
  410838:	cmp    al,BYTE PTR [eax+edx*8-0x78]
  41083c:	and    al,0x6a
  41083e:	push   ds
  41083f:	inc    edx
  410840:	icebp  
  410841:	mov    dh,0x9e
  410843:	retf   0x314e
  410846:	mov    ds:0xc158587e,eax
  41084b:	push   ds
  41084c:	jp     0x410866
  41084e:	pop    es
  41084f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410850:	(bad)  
  410851:	and    eax,0xd9506ce0
  410856:	xchg   ecx,eax
  410857:	int    0x75
  410859:	or     DWORD PTR [edi+0x2b98e03d],ebx
  41085f:	pop    ecx
  410860:	sbb    bl,ah
  410862:	cmp    edi,edi
  410864:	sbb    ebx,DWORD PTR [ecx*1+0xc3c26fb]
  41086b:	and    BYTE PTR [ebp+0x473e3d84],ch
  410871:	dec    eax
  410872:	mov    eax,ds:0xc8bdb135
  410877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410878:	cli    
  410879:	retf   0xcfe7
  41087c:	sti    
  41087d:	inc    esi
  41087e:	(bad)  
  41087f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410880:	ret    
  410881:	test   eax,0x60e4cc77
  410886:	cmp    DWORD PTR [esi+0x72b75827],0x405d8d09
  410890:	test   al,0x24
  410892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410893:	dec    edx
  410894:	shl    BYTE PTR [esi-0x74],1
  410897:	int3   
  410898:	ds jno 0x41082d
  41089b:	ror    BYTE PTR [eax+0xa682fa3],0x41
  4108a2:	sub    al,0xbe
  4108a4:	mov    ?,WORD PTR [esi]
  4108a6:	out    dx,eax
  4108a7:	gs mov ecx,ecx
  4108aa:	lods   eax,DWORD PTR ds:[esi]
  4108ab:	jg     0x410836
  4108ad:	cmc    
  4108ae:	in     al,dx
  4108af:	mov    ebx,0x12807b1d
  4108b4:	clc    
  4108b5:	sub    DWORD PTR [ecx+0x76],0xdd69783f
  4108bc:	jb     0x410869
  4108be:	ja     0x41093e
  4108c0:	and    DWORD PTR [edx-0x43],ebp
  4108c3:	fbld   TBYTE PTR [ecx+0x7d]
  4108c6:	xor    ch,BYTE PTR [edi-0x52]
  4108c9:	and    ebp,DWORD PTR [esi-0x30]
  4108cc:	ss or  bh,cl
  4108cf:	jge    0x410941
  4108d1:	adc    DWORD PTR [ebx],edi
  4108d3:	pushf  
  4108d4:	sub    eax,0x347c869d
  4108d9:	add    esp,DWORD PTR [ecx-0x7462d01b]
  4108df:	inc    ecx
  4108e0:	push   ecx
  4108e1:	inc    edx
  4108e2:	stc    
  4108e3:	push   ebx
  4108e4:	popa   
  4108e5:	add    ecx,edx
  4108e7:	xor    ebx,DWORD PTR ds:0x3e1f3859
  4108ed:	push   cs
  4108ee:	stos   BYTE PTR es:[edi],al
  4108ef:	push   0x5c2531c2
  4108f4:	data16 mov dl,0x5d
  4108f7:	xchg   DWORD PTR [eax],edi
  4108f9:	jmp    0x410934
  4108fb:	mov    edx,0x40bfc0cf
  410900:	add    DWORD PTR [edi-0x3f],0xffffffbf
  410904:	xchg   ebp,eax
  410905:	xor    eax,0x9ff7493e
  41090a:	dec    ebp
  41090b:	ja     0x4108c6
  41090d:	adc    BYTE PTR [ebx-0x3c54622f],bh
  410913:	neg    DWORD PTR [ebp+0x7f]
  410916:	ss ins BYTE PTR es:[edi],dx
  410918:	dec    edx
  410919:	xchg   esi,eax
  41091a:	push   ecx
  41091b:	outs   dx,DWORD PTR ds:[esi]
  41091c:	mov    dl,0xb0
  41091e:	cmp    BYTE PTR ds:0xd70ecbb6,0x6e
  410925:	and    ebx,0xdf3c918c
  41092b:	add    dl,bl
  41092d:	dec    esp
  41092e:	(bad)  
  41092f:	push   ecx
  410930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410931:	bound  esi,QWORD PTR [edi-0x4f]
  410934:	xor    esp,ebx
  410936:	iret   
  410937:	ret    
  410938:	and    al,0x88
  41093a:	or     ebx,DWORD PTR [eax]
  41093c:	imul   esi,DWORD PTR [edi+0x61316bfd],0x48
  410943:	or     eax,esi
  410945:	jne    0x4109b8
  410947:	add    al,0x42
  410949:	pop    edi
  41094a:	xchg   ecx,eax
  41094b:	push   edx
  41094c:	jnp    0x4109ca
  41094e:	and    al,0x83
  410950:	call   0xefd44a5
  410955:	dec    esp
  410956:	jbe    0x41093a
  410958:	inc    edx
  410959:	ret    0x2491
  41095c:	inc    esp
  41095d:	pop    edi
  41095e:	or     ah,BYTE PTR [ecx]
  410960:	fwait
  410961:	cmc    
  410962:	xor    ch,BYTE PTR cs:[ecx]
  410965:	out    0xbc,al
  410967:	xchg   esi,eax
  410968:	push   esi
  410969:	inc    ebp
  41096a:	push   0x4ae95c9e
  41096f:	out    0x65,eax
  410971:	sahf   
  410972:	popf   
  410973:	and    esi,DWORD PTR [edi-0x23]
  410976:	aam    0xf8
  410978:	pusha  
  410979:	sbb    al,BYTE PTR [edx-0x34]
  41097c:	scas   eax,DWORD PTR es:[edi]
  41097d:	js     0x410926
  41097f:	and    ch,BYTE PTR [edi+0x55]
  410982:	jl     0x4109f5
  410984:	pop    esi
  410985:	dec    eax
  410986:	(bad)  
  410987:	out    0x27,al
  410989:	je     0x410924
  41098b:	cwde   
  41098c:	or     DWORD PTR [edx+eiz*2-0x5223aacf],eax
  410993:	mov    eax,ds:0x28795d62
  410998:	out    0xf6,eax
  41099a:	jge    0x4109c7
  41099c:	add    ebx,DWORD PTR [eax]
  41099e:	xchg   DWORD PTR [esi+0x75],edx
  4109a1:	es test eax,0xb912359e
  4109a7:	repnz sub ebx,edx
  4109aa:	adc    eax,DWORD PTR [edi+0x3ca2fcb4]
  4109b0:	arpl   WORD PTR [ebx-0x3c],sp
  4109b3:	cmp    al,0xa6
  4109b5:	jg     0x410a36
  4109b7:	stc    
  4109b8:	adc    BYTE PTR [ecx],al
  4109ba:	leave  
  4109bb:	push   0x30
  4109bd:	pop    edi
  4109be:	cmp    DWORD PTR [edx+0x2a],0x8c21f7ce
  4109c5:	fdivr  st,st(7)
  4109c7:	sbb    BYTE PTR [edx],dh
  4109c9:	ret    0x2924
  4109cc:	mov    al,ds:0x4396dbba
  4109d1:	adc    eax,0xa145e8d
  4109d6:	mov    ebp,0x99d84cf5
  4109db:	pop    edx
  4109dc:	ja     0x4109d2
  4109de:	mov    cl,0x18
  4109e0:	adc    al,0x1e
  4109e2:	ja     0x410a24
  4109e4:	mov    ah,bl
  4109e6:	mov    bh,0x5b
  4109e8:	or     esp,DWORD PTR [ebp+0x41cd352b]
  4109ee:	cs adc eax,0xe26f5c15
  4109f4:	xor    dh,dh
  4109f6:	sub    bh,cl
  4109f8:	loop   0x4109e4
  4109fa:	push   edx
  4109fb:	mov    edx,0x4a985cfd
  410a00:	and    ch,BYTE PTR [ebx+0x44]
  410a03:	leave  
  410a04:	dec    esi
  410a05:	xor    DWORD PTR [edx],edi
  410a07:	cmp    al,0xbd
  410a09:	pop    esi
  410a0a:	pop    edx
  410a0b:	ins    BYTE PTR es:[edi],dx
  410a0c:	mov    BYTE PTR [ebx-0x52],ah
  410a0f:	jmp    0x410a0d
  410a11:	ficomp DWORD PTR [esi+edi*4-0x403a3512]
  410a18:	push   0x8bfae4bf
  410a1d:	inc    edx
  410a1e:	scas   al,BYTE PTR es:[edi]
  410a1f:	int    0x4d
  410a21:	jo     0x4109ef
  410a23:	clc    
  410a24:	cld    
  410a25:	cmovge esi,eax
  410a28:	adc    al,0xf5
  410a2a:	mov    edi,0xad30c662
  410a2f:	aas    
  410a30:	int3   
  410a31:	ja     0x410a7a
  410a33:	xchg   ebp,eax
  410a34:	lods   al,BYTE PTR ds:[esi]
  410a35:	outs   dx,DWORD PTR ds:[esi]
  410a36:	jae    0x4109f1
  410a38:	push   eax
  410a39:	push   ecx
  410a3a:	out    dx,eax
  410a3b:	mul    eax
  410a3d:	jecxz  0x4109e6
  410a3f:	jmp    0x4109e8
  410a41:	cli    
  410a42:	push   ebp
  410a43:	pop    esi
  410a44:	xchg   ebp,eax
  410a45:	lea    esi,[esi+0x18]
  410a48:	fsubrp st(6),st
  410a4a:	sub    BYTE PTR [eax],al
  410a4c:	mov    BYTE PTR [edi+0x72],dl
  410a4f:	push   es
  410a50:	sbb    al,BYTE PTR [eax+0x18bab0b8]
  410a56:	pop    ss
  410a57:	nop    esp
  410a5a:	ds push esp
  410a5c:	mov    dl,0xdf
  410a5e:	mov    dl,0xf2
  410a60:	xchg   DWORD PTR [edi],eax
  410a62:	xor    dl,BYTE PTR [ecx+0x23]
  410a65:	rcl    BYTE PTR [ebx+eax*1-0x3d7a92af],0xf0
  410a6d:	popa   
  410a6e:	pop    esi
  410a6f:	cdq    
  410a70:	addr16 push esp
  410a72:	jns    0x410a12
  410a74:	aaa    
  410a75:	inc    edx
  410a76:	shl    DWORD PTR [ebp-0x2bdd1de0],0xe6
  410a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a7e:	cdq    
  410a7f:	fisub  WORD PTR [esi-0x47]
  410a82:	retf   0x72ae
  410a85:	loop   0x410a99
  410a87:	xor    eax,0x1c723ee
  410a8c:	sbb    DWORD PTR [esi],0x6d
  410a8f:	fsub   QWORD PTR [esi+0x4a5fbcfa]
  410a95:	or     al,0xe6
  410a97:	pop    ebp
  410a98:	cs in  al,dx
  410a9a:	pop    es
  410a9b:	daa    
  410a9c:	sbb    BYTE PTR [esi-0xde22186],ah
  410aa2:	mov    eax,0x8af1e7c5
  410aa7:	mov    ds:0x87f98be7,al
  410aac:	sti    
  410aad:	jo     0x410aa3
  410aaf:	sbb    edx,DWORD PTR [eax]
  410ab1:	dec    esi
  410ab2:	repnz rol BYTE PTR [ebx+0x27],0xdd
  410ab7:	jnp    0x410af0
  410ab9:	cmp    DWORD PTR [esp+edi*2+0x7259f25d],ecx
  410ac0:	cdq    
  410ac1:	imul   eax,DWORD PTR [esi],0xffffffb1
  410ac4:	pop    eax
  410ac5:	lds    ebx,FWORD PTR [ecx]
  410ac7:	dec    edi
  410ac8:	aas    
  410ac9:	sub    al,0x27
  410acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410acc:	and    eax,0x5aebb2
  410ad1:	and    dh,bl
  410ad3:	fwait
  410ad4:	dec    edi
  410ad5:	inc    ebp
  410ad6:	sub    eax,0xfc35f9a4
  410adb:	call   0xf3ba:0xfc43d87
  410ae2:	add    eax,ecx
  410ae4:	call   0x6c71:0x8b8307a3
  410aeb:	push   edi
  410aec:	lods   eax,DWORD PTR ds:[esi]
  410aed:	mov    ebx,0xfd9fa993
  410af2:	push   ebx
  410af3:	imul   ebx,DWORD PTR [eax],0x14
  410af6:	ror    BYTE PTR [edi],1
  410af8:	xchg   esi,eax
  410af9:	jb     0x410ae0
  410afb:	sar    DWORD PTR [ebp-0x4dfb2d86],0xb4
  410b02:	gs jmp 0xe9ecb933
  410b08:	sbb    eax,0x61a05927
  410b0d:	adc    BYTE PTR [edi+edi*8+0x1e],bl
  410b11:	xchg   ebx,eax
  410b12:	or     al,0x76
  410b14:	mov    ch,0x14
  410b16:	mov    ds:0x1b80c8e0,al
  410b1b:	adc    eax,0x1b8273c7
  410b20:	mov    esi,0xeeb70432
  410b25:	dec    ebp
  410b26:	push   0xf2f99269
  410b2b:	in     eax,0x49
  410b2d:	xchg   edi,eax
  410b2e:	fwait
  410b2f:	adc    esi,DWORD PTR [ebp+0x51]
  410b32:	ins    DWORD PTR es:[edi],dx
  410b33:	(bad)  
  410b34:	or     eax,0x46ca9eff
  410b39:	lahf   
  410b3a:	rol    DWORD PTR ds:0xf3e4a54f,1
  410b40:	pop    ecx
  410b41:	xor    al,0x39
  410b43:	retf   0xec87
  410b46:	jae    0x410bb5
  410b48:	cmp    eax,0x6d506b2c
  410b4d:	and    al,0x18
  410b4f:	jo     0x410b84
  410b51:	mov    WORD PTR [edx+0x758d625b],cs
  410b57:	ret    
  410b58:	nop
  410b59:	or     BYTE PTR [ebx-0x5f88c992],cl
  410b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b60:	popa   
  410b61:	mov    bl,0x3
  410b63:	pop    edx
  410b64:	mov    fs,WORD PTR es:[edx]
  410b67:	inc    ebx
  410b68:	jmp    0x5b16:0xc23a4eb
  410b6f:	jg     0x410b66
  410b71:	inc    ebp
  410b72:	retf   
  410b73:	fsubr  DWORD PTR [ecx]
  410b75:	popf   
  410b76:	push   es
  410b77:	jle    0x410bc8
  410b79:	xor    eax,0xf990495a
  410b7e:	lea    esp,[ebx]
  410b80:	jge    0x410b93
  410b82:	mov    cl,0x33
  410b84:	loopne 0x410b96
  410b86:	scas   eax,DWORD PTR es:[edi]
  410b87:	lea    edx,[ecx+0xe430c8a]
  410b8d:	ins    DWORD PTR es:[edi],dx
  410b8e:	xor    DWORD PTR [edx+0x44],ebx
  410b91:	jl     0x410b60
  410b93:	lods   al,BYTE PTR ds:[esi]
  410b94:	push   esi
  410b95:	outs   dx,DWORD PTR ds:[esi]
  410b96:	aad    0x2a
  410b98:	outs   dx,BYTE PTR ds:[esi]
  410b99:	cs scas al,BYTE PTR es:[edi]
  410b9b:	test   cl,bl
  410b9d:	pop    ebp
  410b9e:	xchg   esi,eax
  410b9f:	mov    ds:0xb3c21ead,al
  410ba4:	ins    BYTE PTR es:[edi],dx
  410ba5:	das    
  410ba6:	sbb    ch,dh
  410ba8:	imul   ebx,DWORD PTR [edi],0x31
  410bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bac:	xchg   ecx,eax
  410bad:	inc    esi
  410bae:	jmp    0x410c0a
  410bb0:	fs xchg esi,eax
  410bb2:	rcl    BYTE PTR gs:[edx-0x1e],0xb3
  410bb7:	jne    0x410c08
  410bb9:	or     ch,BYTE PTR [edi]
  410bbb:	mov    ch,0xd6
  410bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bbe:	pop    ebx
  410bbf:	mov    esi,0x7698474c
  410bc4:	shl    BYTE PTR ds:0x74d04c86,cl
  410bca:	inc    edx
  410bcb:	sbb    BYTE PTR [ebx+0x3f],bl
  410bce:	pop    edi
  410bcf:	jmp    FWORD PTR [edx-0x33]
  410bd2:	sub    BYTE PTR [ebx+0x57865d2b],ah
  410bd8:	adc    ecx,edi
  410bda:	mov    eax,0x7850d528
  410bdf:	or     BYTE PTR [esi+edi*4+0x52],0xe6
  410be4:	ds jecxz 0x410ba5
  410be7:	sbb    edi,DWORD PTR [ebx-0x9f6cdb]
  410bed:	adc    DWORD PTR [edx-0x65],ecx
  410bf0:	into   
  410bf1:	lock ins BYTE PTR es:[edi],dx
  410bf3:	or     BYTE PTR [edi+0x2d],dh
  410bf6:	sbb    bh,BYTE PTR [eax]
  410bf8:	mov    DWORD PTR [ebp-0x27095802],ecx
  410bfe:	jo     0x410c5d
  410c00:	ss in  eax,dx
  410c02:	std    
  410c03:	dec    edx
  410c04:	xlat   BYTE PTR ds:[ebx]
  410c05:	add    ch,BYTE PTR [edi]
  410c07:	mov    ebx,0x69142470
  410c0c:	jmp    0x7112:0x21c7e588
  410c13:	std    
  410c14:	mov    edi,0x9b48b5e3
  410c19:	jmp    0x410bc9
  410c1b:	in     al,0xdf
  410c1d:	out    0x98,al
  410c1f:	fs mov eax,0x2b0e721e
  410c25:	loope  0x410c82
  410c27:	sti    
  410c28:	adc    al,0xb6
  410c2a:	add    esp,edi
  410c2c:	retf   
  410c2d:	frstor gs:[eax]
  410c30:	lar    ebp,WORD PTR [eax]
  410c33:	xor    cl,ah
  410c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c36:	test   al,0xf8
  410c38:	mov    eax,0x5a6b6155
  410c3d:	aam    0xae
  410c3f:	adc    BYTE PTR ds:0x117ab4ce,cl
  410c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c46:	cmp    al,0x38
  410c48:	pushf  
  410c49:	mov    ebx,0x26303db1
  410c4e:	dec    ebp
  410c4f:	sub    BYTE PTR [esi+0x5567c53],bh
  410c55:	add    edx,DWORD PTR [ebp-0x61]
  410c58:	pop    eax
  410c59:	cwde   
  410c5a:	out    dx,eax
  410c5b:	or     BYTE PTR [esi+0xfc3128],dh
  410c61:	or     bh,BYTE PTR [eax]
  410c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c64:	sub    BYTE PTR [edi+0x6911eee9],0x56
  410c6b:	dec    edi
  410c6c:	retf   0xd302
  410c6f:	cmp    al,BYTE PTR ds:0x4e02bbbd
  410c75:	jle    0x410cf4
  410c77:	or     al,0x83
  410c79:	iret   
  410c7a:	xor    eax,ecx
  410c7c:	mov    ebp,0x2cd24ae6
  410c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c82:	stc    
  410c83:	(bad)  
  410c84:	stc    
  410c85:	inc    ebp
  410c86:	inc    ebx
  410c87:	sub    DWORD PTR [edx+ecx*8],eax
  410c8a:	pusha  
  410c8b:	lea    edi,[edi+0x5e]
  410c8e:	push   0x57e3b8fa
  410c93:	mov    esp,DWORD PTR [eax+0x5438bc02]
  410c99:	hlt    
  410c9a:	jo     0x410c9e
  410c9c:	jp     0x410ce5
  410c9e:	dec    eax
  410c9f:	ja     0x410d16
  410ca1:	sahf   
  410ca2:	nop
  410ca3:	out    dx,al
  410ca4:	ret    0xfa00
  410ca7:	cmp    ah,BYTE PTR [edx-0x17]
  410caa:	xor    al,0x90
  410cac:	xor    esp,0x46d1c0bc
  410cb2:	fs mov esi,0xd2bc39a0
  410cb8:	into   
  410cb9:	xor    dl,dh
  410cbb:	in     eax,0x80
  410cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cbe:	ds daa 
  410cc0:	lea    ecx,[esp+eiz*4-0x9521fd2]
  410cc7:	mov    edx,0xfaef5507
  410ccc:	jne    0x410c86
  410cce:	pusha  
  410ccf:	nop
  410cd0:	jp     0x410d20
  410cd2:	into   
  410cd3:	xor    DWORD PTR [ecx+0x5d37aa06],esi
  410cd9:	jge    0x410c88
  410cdb:	push   eax
  410cdc:	test   eax,0x33c7bf85
  410ce1:	shl    BYTE PTR [edi],cl
  410ce3:	xchg   ecx,eax
  410ce4:	retf   0x709c
  410ce7:	fwait
  410ce8:	add    eax,0xbc70a114
  410ced:	iret   
  410cee:	das    
  410cef:	aam    0xd1
  410cf1:	cwde   
  410cf2:	adc    ebx,DWORD PTR [eax]
  410cf4:	lods   eax,DWORD PTR ds:[esi]
  410cf5:	loope  0x410cdd
  410cf7:	in     eax,0xdd
  410cf9:	out    dx,al
  410cfa:	mov    dh,0xce
  410cfc:	add    dh,BYTE PTR [ebx+0x41b40fbe]
  410d02:	aad    0x3d
  410d04:	icebp  
  410d05:	sbb    dl,BYTE PTR [eax]
  410d07:	mov    ds:0x358f2496,al
  410d0c:	mov    esp,ds
  410d0e:	(bad)  
  410d0f:	out    0x10,eax
  410d11:	mov    ebp,0x1810f437
  410d16:	and    DWORD PTR [ebp-0x13f519cc],esp
  410d1c:	aaa    
  410d1d:	jp     0x410cac
  410d1f:	pop    ecx
  410d20:	rcl    BYTE PTR [edx+0x73cbf080],cl
  410d26:	sub    al,ah
  410d28:	add    ax,0xc981
  410d2c:	inc    esi
  410d2d:	rcl    DWORD PTR [ecx+ecx*4-0x1ddc8636],0x93
  410d35:	mov    al,ds:0x8d08505d
  410d3a:	repnz mov BYTE PTR [esi+ecx*1+0x7115a142],bh
  410d42:	sar    cl,cl
  410d44:	push   es
  410d45:	inc    ebx
  410d46:	sub    edx,DWORD PTR [esi-0x27d22a46]
  410d4c:	push   ebp
  410d4d:	add    BYTE PTR [ecx-0x43dfab74],dh
  410d53:	sub    bl,bh
  410d55:	sub    DWORD PTR [esi],ebp
  410d57:	mov    edx,0x8829882d
  410d5c:	dec    esp
  410d5d:	arpl   WORD PTR [ebx],bp
  410d5f:	jle    0x410da4
  410d61:	out    0x5d,eax
  410d63:	lahf   
  410d64:	sbb    BYTE PTR ds:0x23fefcee,dl
  410d6a:	pop    edx
  410d6b:	leave  
  410d6c:	mov    cl,bl
  410d6e:	mov    cx,0x1c5
  410d72:	repnz outs dx,BYTE PTR ds:[esi]
  410d74:	xchg   edx,eax
  410d75:	sbb    edx,DWORD PTR [edi+0x28c773f5]
  410d7b:	ds call 0xe4f9fced
  410d81:	iret   
  410d82:	jo     0x410d65
  410d84:	jle    0x410d21
  410d86:	outs   dx,BYTE PTR ds:[esi]
  410d87:	(bad)  
  410d88:	mov    edx,0x1a453846
  410d8d:	adc    DWORD PTR [edx-0x44934661],ecx
  410d93:	dec    edx
  410d94:	out    0x5c,eax
  410d96:	and    al,0x4d
  410d98:	je     0x410d97
  410d9a:	add    ebp,DWORD PTR [edx+0x40]
  410d9d:	mov    edi,0x5a8a3d3
  410da2:	xchg   edx,eax
  410da3:	sbb    DWORD PTR [edx-0x44],ecx
  410da6:	ins    DWORD PTR es:[edi],dx
  410da7:	lods   eax,DWORD PTR ds:[esi]
  410da8:	(bad)  
  410daa:	call   0x20bb24e9
  410daf:	pop    ds
  410db0:	retf   
  410db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db2:	scas   eax,DWORD PTR es:[edi]
  410db3:	push   0xffffff82
  410db5:	add    al,0x1b
  410db7:	int3   
  410db8:	mov    bl,0x7f
  410dba:	rol    bh,cl
  410dbc:	pusha  
  410dbd:	inc    esi
  410dbe:	jno    0x410dd5
  410dc0:	in     eax,0xd7
  410dc2:	aaa    
  410dc3:	mov    eax,0x1d0c253c
  410dc8:	call   0xfdd1:0xde853bea
  410dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dd0:	xchg   BYTE PTR [eax+0x59e65ef1],ch
  410dd6:	sub    DWORD PTR [ecx+ebx*8+0x45846f76],ecx
  410ddd:	push   cs
  410dde:	pop    ebp
  410ddf:	ror    BYTE PTR [ebp+0x5c917707],cl
  410de5:	sbb    DWORD PTR [esi+0x6d61477d],edx
  410deb:	push   eax
  410dec:	outs   dx,DWORD PTR ds:[esi]
  410ded:	popa   
  410dee:	pop    edx
  410def:	sub    DWORD PTR [edi+0xd],eax
  410df2:	shl    bl,cl
  410df4:	jle    0x410e66
  410df6:	or     DWORD PTR [esi+eiz*8],esi
  410df9:	adc    edi,edx
  410dfb:	inc    ebp
  410dfc:	push   ds
  410dfd:	fisttp WORD PTR [eax]
  410dff:	pop    edi
  410e00:	jl     0x410d8e
  410e02:	cmp    edx,DWORD PTR fs:[edx+0x8870755]
  410e09:	pusha  
  410e0a:	mov    ds:0xfce8c82c,eax
  410e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e10:	rcl    DWORD PTR [eax-0x10],cl
  410e13:	cld    
  410e14:	sbb    BYTE PTR [edi-0x16],bl
  410e17:	cmp    edi,0xffffffed
  410e1a:	mov    al,ds:0x5f65c6ff
  410e1f:	fs (bad) 
  410e21:	sub    dh,BYTE PTR ds:0x3862be1b
  410e27:	imul   ebx,DWORD PTR [eax],0x960a5afb
  410e2d:	shl    ebx,1
  410e2f:	aaa    
  410e30:	mov    al,ds:0xe602d8ba
  410e35:	fist   WORD PTR [esi-0x16c7c2bb]
  410e3b:	out    0x28,eax
  410e3d:	adc    dl,BYTE PTR ss:[esi]
  410e40:	inc    ebp
  410e41:	jo     0x410df7
  410e43:	dec    eax
  410e44:	add    al,bh
  410e46:	push   ecx
  410e47:	out    dx,eax
  410e48:	mov    bh,0xa5
  410e4a:	mov    ecx,0x1355e12a
  410e4f:	inc    ecx
  410e50:	inc    ebp
  410e51:	jne    0x410de9
  410e53:	inc    esp
  410e54:	mov    eax,ds:0xf89cab5e
  410e59:	jo     0x410eb6
  410e5b:	pop    ebx
  410e5c:	or     dh,bh
  410e5e:	dec    ebp
  410e5f:	adc    al,0xb0
  410e61:	adc    al,0x1
  410e63:	test   BYTE PTR [edx],bl
  410e65:	jge    0x410ee1
  410e67:	cmc    
  410e68:	xchg   DWORD PTR [eax+0x27],esi
  410e6b:	daa    
  410e6c:	into   
  410e6d:	cld    
  410e6e:	(bad)  
  410e6f:	stos   BYTE PTR es:[edi],al
  410e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e71:	push   ebx
  410e72:	inc    eax
  410e74:	repnz push ss
  410e76:	inc    ebp
  410e77:	cwde   
  410e78:	outs   dx,BYTE PTR ds:[esi]
  410e79:	mov    eax,ds:0x5eb6aa35
  410e7e:	pop    eax
  410e7f:	mov    dh,0x25
  410e81:	xchg   edx,eax
  410e82:	mov    esp,0xa8569388
  410e87:	out    0xbb,al
  410e89:	inc    ecx
  410e8a:	popf   
  410e8b:	mov    al,ds:0xfd7183cf
  410e90:	enter  0xa648,0xef
  410e94:	and    DWORD PTR ss:[ecx-0x714dec7d],0x4a0b65c
  410e9f:	in     al,dx
  410ea0:	std    
  410ea1:	pop    edx
  410ea2:	mov    ss:0xe0517191,al
  410ea8:	or     al,0xca
  410eaa:	add    eax,0xae0cd269
  410eaf:	and    eax,0xa0b5e169
  410eb4:	pop    ebx
  410eb5:	shl    DWORD PTR [ebp+0x18ca5e12],cl
  410ebb:	rol    DWORD PTR [edi+0x1f],cl
  410ebe:	jp     0x410f15
  410ec0:	ror    BYTE PTR [ebx-0x78],cl
  410ec3:	and    al,0x96
  410ec5:	adc    al,0x5e
  410ec7:	fwait
  410ec8:	add    bh,ah
  410eca:	pop    ds
  410ecb:	sub    eax,0xe8723d2e
  410ed0:	retf   
  410ed1:	and    esp,esi
  410ed3:	std    
  410ed4:	push   ds
  410ed5:	sti    
  410ed6:	pop    ecx
  410ed7:	out    dx,al
  410ed8:	jp     0x410ead
  410eda:	jg     0x410efe
  410edc:	scas   al,BYTE PTR es:[edi]
  410edd:	xchg   edi,eax
  410ede:	push   edx
  410edf:	retf   
  410ee0:	popf   
  410ee1:	(bad)  
  410ee2:	retf   
  410ee3:	dec    edi
  410ee4:	jmp    0x410ed5
  410ee6:	or     DWORD PTR [edi+0xd8f2be8],eax
  410eec:	dec    edx
  410eed:	and    ebx,DWORD PTR [edi]
  410eef:	mov    ecx,DWORD PTR ds:0x5147b301
  410ef5:	xor    ebx,DWORD PTR [eax+0x5f]
  410ef8:	ss mov ?,ecx
  410efb:	adc    edi,DWORD PTR [eax]
  410efd:	dec    ebp
  410efe:	mov    esp,0x9a4d3667
  410f03:	(bad)  
  410f05:	iret   
  410f06:	pop    ebx
  410f07:	test   eax,0xe7c4b5c5
  410f0c:	pop    edx
  410f0d:	clc    
  410f0e:	and    al,0x26
  410f10:	jmp    0xe1c1a87d
  410f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f16:	mov    cs:0x7edb5840,eax
  410f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f1d:	test   al,0x7c
  410f1f:	ins    BYTE PTR es:[edi],dx
  410f20:	or     BYTE PTR [esi-0x6bc4e1a4],ah
  410f26:	ds mov eax,0x9237d385
  410f2c:	sbb    BYTE PTR [ebx+0x7575df0f],ah
  410f32:	sub    DWORD PTR [ecx],edx
  410f34:	repnz iret 
  410f36:	(bad)  
  410f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f38:	sub    ah,bl
  410f3a:	sbb    DWORD PTR [ebp+0x72760ebe],0xffffffb8
  410f41:	div    DWORD PTR ds:0xe223c6e7
  410f47:	sub    eax,DWORD PTR [eax+0x1b820983]
  410f4d:	lea    eax,es:[esi]
  410f50:	nop
  410f51:	call   0x1b1a47c0
  410f56:	in     eax,dx
  410f57:	adc    DWORD PTR [edi],esp
  410f59:	dec    edx
  410f5a:	clc    
  410f5b:	add    BYTE PTR [edx-0x5c],0xef
  410f5f:	cmp    eax,DWORD PTR [esi-0x49334f5e]
  410f65:	add    BYTE PTR [edi+0x6d],dl
  410f68:	mov    esi,0xaeef2605
  410f6d:	or     DWORD PTR [ebx-0x281c4eef],esi
  410f73:	sbb    DWORD PTR [esi+ebx*4+0x10e750a4],eax
  410f7a:	iret   
  410f7b:	das    
  410f7c:	dec    edx
  410f7d:	mov    ds:0xae37ae39,al
  410f82:	mov    edx,0x2ba3562d
  410f87:	iret   
  410f88:	push   edx
  410f89:	dec    edi
  410f8a:	dec    edi
  410f8b:	sahf   
  410f8c:	out    0x87,al
  410f8e:	cmp    ch,ah
  410f90:	fs inc edi
  410f92:	cmp    BYTE PTR [esi+ebp*4],bl
  410f95:	mov    ?,ebp
  410f97:	jae    0x410f2d
  410f99:	jo     0x411004
  410f9b:	xlat   BYTE PTR ds:[ebx]
  410f9c:	push   0x954ebb5f
  410fa1:	cmova  esp,DWORD PTR [edx+0x13]
  410fa5:	jl     0x410fe1
  410fa7:	sub    al,0xd3
  410fa9:	or     edx,DWORD PTR [esi+0x7150be86]
  410faf:	iret   
  410fb0:	fadd   DWORD PTR [edx]
  410fb2:	push   ebp
  410fb3:	xor    ecx,DWORD PTR [ebx-0x6c]
  410fb6:	fisttp QWORD PTR [ecx-0x59]
  410fb9:	push   ds
  410fba:	mov    cl,0xf7
  410fbc:	imul   ebp,DWORD PTR [ebx+esi*2+0x3039661c],0x764426f7
  410fc7:	mov    WORD PTR [ecx-0x69],?
  410fca:	out    0x98,al
  410fcc:	adc    ah,ah
  410fce:	fcomp  QWORD PTR [ebx]
  410fd0:	adc    DWORD PTR [edi],ebp
  410fd2:	inc    eax
  410fd3:	mov    DWORD PTR ds:0x40da51e7,ebp
  410fd9:	pop    ss
  410fda:	cmp    ah,ah
  410fdc:	mov    esi,0xcc080d79
  410fe1:	sub    eax,0x3149d9ff
  410fe6:	mov    ch,0x28
  410fe8:	and    al,0x29
  410fea:	mov    cl,0xa8
  410fec:	mov    eax,DWORD PTR [ebp-0x1ac66c59]
  410ff2:	stos   BYTE PTR es:[edi],al
  410ff3:	hlt    
  410ff4:	fwait
  410ff5:	sub    al,0x9a
  410ff7:	and    edx,0xffffffb5
  410ffa:	push   cs
  410ffb:	mov    ebx,0xbbfc2463
  411000:	(bad)  
  411001:	mov    ah,0xb5
  411003:	arpl   WORD PTR [ebp-0x78],ax
  411006:	push   eax
  411007:	and    ebp,DWORD PTR [eax]
  411009:	loop   0x411022
  41100b:	stos   BYTE PTR es:[edi],al
  41100c:	pop    ecx
  41100d:	add    BYTE PTR [eax+0x64f255e7],ch
  411013:	inc    esi
  411014:	stos   DWORD PTR es:[edi],eax
  411015:	test   al,0x2d
  411017:	mov    edi,0xdd996d95
  41101c:	repz fdivr QWORD PTR [esi]
  41101f:	arpl   WORD PTR [ebx-0x749d2afa],si
  411025:	dec    ebp
  411026:	or     BYTE PTR [eax+0x8a8d],bh
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	or     DWORD PTR [esi+ecx*1-0x23],ebx
  4115af:	inc    eax
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	iret   
  4115b8:	(bad)  
  4115b9:	dec    edi
  4115ba:	xor    BYTE PTR [ecx+0x60],al
  4115bd:	pop    ss
  4115be:	or     eax,0x2b78a68
  4115c3:	cmp    al,0x6d
  4115c5:	pop    ecx
  4115c6:	jl     0x41162c
  4115c8:	mov    edi,0x8f2f73dc
  4115cd:	lea    esp,[eax-0xc]
  4115d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d1:	nop
  4115d2:	inc    BYTE PTR [ebx-0x45]
  4115d5:	dec    ebx
  4115d6:	aam    0xa9
  4115d8:	out    dx,al
  4115d9:	add    DWORD PTR [esi+0x1e],0x5c
  4115dd:	add    al,0x3a
  4115df:	jmp    0x41156a
  4115e1:	mov    al,0x85
  4115e3:	xor    eax,0xc58163ce
  4115e8:	inc    ebx
  4115e9:	in     eax,dx
  4115ea:	in     eax,dx
  4115eb:	iret   
  4115ec:	shl    DWORD PTR [esi+0x50],0xfa
  4115f0:	jecxz  0x411595
  4115f2:	inc    edi
  4115f3:	arpl   WORD PTR [eax-0x4c],si
  4115f6:	dec    esp
  4115f7:	(bad)  
  4115f8:	hlt    
  4115f9:	add    DWORD PTR [esi],ecx
  4115fb:	sbb    ah,al
  4115fd:	push   0xd1b365d3
  411602:	loope  0x41165e
  411604:	out    0xbf,al
  411606:	xor    ecx,DWORD PTR [esi]
  411608:	mov    ebx,esp
  41160a:	and    al,0xe8
  41160d:	inc    ecx
  41160e:	sbb    DWORD PTR [eax],0x1c
  411611:	jae    0x411666
  411613:	bound  esi,QWORD PTR ds:0x9567c1d5
  411619:	imul   edi,DWORD PTR [esi+0x6c],0x22067302
  411620:	leave  
  411621:	jle    0x411670
  411623:	lods   al,BYTE PTR ds:[esi]
  411624:	int3   
  411625:	out    dx,eax
  411626:	cs jne 0x411671
  411629:	xchg   ebx,eax
  41162a:	xchg   esp,eax
  41162b:	pop    ebp
  41162c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41162d:	pop    es
  41162e:	sbb    DWORD PTR [ebx-0x3],ebx
  411631:	lock mov ebp,0xb2e216b6
  411637:	mov    ds:0x7b966e06,eax
  41163c:	fucomp st(2)
  41163e:	fnsave [eax-0x1c92aac5]
  411644:	jns    0x41166a
  411646:	in     al,0x57
  411648:	shl    DWORD PTR [eax+0x50],cl
  41164b:	sbb    DWORD PTR [edx-0x6e06bf4d],ebx
  411651:	jnp    0x411670
  411653:	les    ebx,FWORD PTR [ebp+0x7f]
  411656:	mov    dh,BYTE PTR [esi+0x6e]
  411659:	in     eax,0x42
  41165b:	fisub  DWORD PTR [ebx]
  41165d:	sub    BYTE PTR fs:[ebx-0x1],0xd7
  411662:	add    DWORD PTR [esi+0x7d62f2dc],0xffffff97
  411669:	jp     0x411615
  41166b:	push   esp
  41166c:	call   0x4f99c09b
  411671:	outs   dx,DWORD PTR ds:[esi]
  411672:	push   esi
  411673:	adc    eax,0xb107b0b3
  411678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411679:	xchg   ebp,eax
  41167a:	mov    edx,0x22071d2f
  41167f:	dec    ecx
  411680:	or     dl,BYTE PTR [ebp+0x2f]
  411683:	dec    edx
  411684:	in     eax,dx
  411685:	xchg   edi,eax
  411686:	in     eax,0x33
  411688:	inc    ebx
  411689:	lods   eax,DWORD PTR ds:[esi]
  41168a:	cld    
  41168b:	ror    DWORD PTR [eax+0x54],1
  41168e:	mov    eax,esp
  411690:	xchg   esi,eax
  411691:	pop    esp
  411692:	or     al,0x8a
  411694:	cmp    eax,0xc61c9fc7
  411699:	fwait
  41169a:	mov    WORD PTR [ecx-0x58],cs
  41169d:	jmp    0x41171e
  41169f:	mov    ?,ebx
  4116a1:	(bad)  
  4116a3:	cld    
  4116a4:	addr16 inc ebx
  4116a6:	lods   al,BYTE PTR ds:[esi]
  4116a7:	pop    edx
  4116a8:	dec    ebp
  4116a9:	and    al,0xbd
  4116ab:	lock inc eax
  4116ad:	mov    ecx,0xb26cc872
  4116b2:	jnp    0xd97ce2f0
  4116b8:	jmp    0x392a34a1
  4116bd:	or     DWORD PTR [esi-0x4b507eca],edx
  4116c3:	dec    eax
  4116c4:	xor    DWORD PTR [ebx],edx
  4116c6:	aam    0x7c
  4116c8:	sub    al,0x2
  4116ca:	dec    ebx
  4116cb:	ret    
  4116cc:	jae    0x411677
  4116ce:	test   eax,0x304688c9
  4116d3:	mov    esi,0x932c9b61
  4116d8:	mov    dl,0xce
  4116da:	js     0x4116bf
  4116dc:	jns    0x411740
  4116de:	mov    esi,0x2af75d39
  4116e3:	fdiv   st,st(5)
  4116e5:	in     eax,dx
  4116e6:	cmp    al,0xa6
  4116e8:	sub    eax,0x27de72ca
  4116ed:	pop    es
  4116ee:	call   0xdfba795c
  4116f3:	push   eax
  4116f4:	or     dl,BYTE PTR [esi+ecx*2]
  4116f7:	popf   
  4116f8:	xor    esp,ebx
  4116fa:	sub    BYTE PTR [edx+0x234fc20e],0xbf
  411701:	je     0x4116a8
  411703:	sbb    dh,dh
  411705:	and    cl,BYTE PTR [ebx-0x13b453f3]
  41170b:	xchg   DWORD PTR [ecx],esp
  41170d:	mov    cl,0xb5
  41170f:	fild   QWORD PTR [esi+0x28892984]
  411715:	xor    ebp,edi
  411717:	mov    ecx,0x970a4388
  41171c:	mov    bl,0xe4
  41171e:	rcr    BYTE PTR [eax],0xad
  411721:	jl     0x411797
  411723:	adc    eax,0x76835441
  411728:	mov    ecx,0xbbde5eef
  41172d:	call   0x8864:0x463a45f5
  411734:	scas   al,BYTE PTR es:[edi]
  411735:	pop    edi
  411736:	xchg   edi,eax
  411737:	(bad)  
  411738:	(bad)  
  41173a:	adc    dh,bl
  41173c:	inc    ebp
  41173d:	pop    ss
  41173e:	push   ss
  41173f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411740:	sbb    al,BYTE PTR [ebp+0xe64ea41]
  411746:	pop    ds
  411747:	test   DWORD PTR [edi-0x5f],ecx
  41174a:	lahf   
  41174b:	push   ebx
  41174c:	das    
  41174d:	retf   
  41174e:	mov    ebp,DWORD PTR [ebp+ecx*8+0x294bbc08]
  411755:	hlt    
  411756:	push   cs
  411757:	push   edx
  411758:	mov    eax,0x2a2f93ac
  41175d:	pop    ebp
  41175e:	add    BYTE PTR [ebp+eax*4-0x46],cl
  411762:	aad    0xb4
  411764:	stos   BYTE PTR es:[edi],al
  411765:	mov    ebx,0x3f225664
  41176a:	pop    ebx
  41176b:	(bad)  
  41176d:	pop    ss
  41176e:	inc    ecx
  41176f:	push   esp
  411770:	jne    0x4117b2
  411772:	jg     0x4117b2
  411774:	push   edx
  411775:	das    
  411776:	jbe    0x4117ed
  411778:	cmc    
  411779:	push   eax
  41177a:	not    bl
  41177c:	inc    ecx
  41177d:	or     bl,dl
  41177f:	sub    al,0x21
  411781:	inc    esi
  411782:	arpl   WORD PTR [edx],sp
  411784:	xchg   ebx,eax
  411785:	in     eax,0x34
  411787:	fdiv   st(1),st
  411789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41178a:	xor    BYTE PTR [edi+0x1a],0xbe
  41178e:	psubsw mm4,QWORD PTR [edi+esi*8+0x381f1e94]
  411796:	or     eax,0x4d9578a5
  41179b:	clc    
  41179c:	aam    0xbd
  41179e:	or     al,0xc1
  4117a0:	pop    esp
  4117a1:	fs addr16 loop 0x41176b
  4117a5:	pop    ebp
  4117a6:	inc    esi
  4117a7:	mov    edx,0x7c0385f9
  4117ac:	lods   eax,DWORD PTR ds:[esi]
  4117ad:	adc    DWORD PTR [edx+0x5],0xec000416
  4117b4:	and    al,0x7d
  4117b6:	adc    esi,0x92f5c046
  4117bc:	arpl   si,dx
  4117be:	in     eax,0x7
  4117c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c1:	scas   al,BYTE PTR es:[edi]
  4117c2:	cwde   
  4117c3:	jbe    0x4117de
  4117c5:	adc    eax,0x3349cf2
  4117ca:	inc    esi
  4117cb:	inc    ecx
  4117cc:	icebp  
  4117cd:	xchg   esi,eax
  4117ce:	sbb    DWORD PTR [edi],0xa0c58ef6
  4117d4:	cdq    
  4117d5:	jle    0x411848
  4117d7:	shr    BYTE PTR [edx+0x61],0x18
  4117db:	and    al,0x22
  4117dd:	add    DWORD PTR [eax],ebx
  4117df:	pop    eax
  4117e0:	cli    
  4117e1:	inc    eax
  4117e2:	inc    eax
  4117e3:	inc    ebp
  4117e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e5:	xor    bh,BYTE PTR [eax+0x70ad701d]
  4117eb:	jns    0x41184b
  4117ed:	scas   al,BYTE PTR es:[edi]
  4117ee:	sbb    eax,0x5730809e
  4117f3:	pop    ss
  4117f4:	xor    BYTE PTR [ecx],cl
  4117f6:	xchg   edx,eax
  4117f7:	(bad)  
  4117f9:	outs   dx,BYTE PTR ds:[esi]
  4117fa:	bound  esi,QWORD PTR [esi]
  4117fc:	add    DWORD PTR [ecx+0x5c3e1df],esp
  411802:	repnz pop ebx
  411804:	leave  
  411805:	xor    al,0x8d
  411807:	les    eax,FWORD PTR ds:0x6547c01c
  41180d:	loop   0x41187b
  41180f:	fwait
  411810:	xor    dh,BYTE PTR ds:0x17e5341a
  411816:	dec    ebx
  411817:	xchg   ebx,esp
  411819:	outs   dx,BYTE PTR ds:[esi]
  41181a:	imul   esp,DWORD PTR [edi+0x41],0xd22abd79
  411821:	icebp  
  411822:	adc    ecx,ecx
  411824:	add    BYTE PTR [edx+0x6b],dh
  411827:	cmp    edx,DWORD PTR [esi-0x57b4cce1]
  41182d:	rcl    BYTE PTR [ebx],0x8e
  411830:	clc    
  411831:	xchg   ebx,eax
  411832:	cwde   
  411833:	pusha  
  411834:	fwait
  411835:	movsx  eax,bh
  411838:	dec    edi
  411839:	pop    esi
  41183a:	cmp    eax,0x9b25f11d
  41183f:	cmp    BYTE PTR [ebx-0x376979db],ch
  411845:	ds ret 0xa8d
  411849:	stc    
  41184a:	arpl   WORD PTR [ecx-0x224d45f],di
  411850:	mov    edi,0xa2144d1a
  411855:	int3   
  411856:	rcl    BYTE PTR [ebp-0x542a5a7b],1
  41185c:	or     eax,0xe34dc589
  411861:	aam    0x7d
  411863:	lock popa 
  411865:	clc    
  411866:	(bad)  
  411867:	in     eax,dx
  411868:	les    ebp,FWORD PTR [ebp+0x21]
  41186b:	mov    edx,0x1f45e18
  411870:	fdivrp st(0),st
  411872:	aam    0x8b
  411874:	std    
  411875:	push   ebx
  411876:	xchg   ecx,eax
  411877:	push   ecx
  411878:	sub    BYTE PTR [edx+0x697f705b],ch
  41187e:	inc    DWORD PTR ds:0x7902aa9c
  411884:	and    eax,0x21854201
  411889:	cmc    
  41188a:	ins    BYTE PTR es:[edi],dx
  41188b:	mov    bh,0x8f
  41188d:	add    esp,0x290d6ad5
  411893:	mov    bh,0x74
  411895:	xchg   DWORD PTR [edx+ecx*2],ebp
  411898:	jne    0x411844
  41189a:	out    dx,eax
  41189b:	adc    eax,0x860c16cd
  4118a0:	clc    
  4118a1:	pop    ds
  4118a2:	clc    
  4118a3:	fisttp DWORD PTR [edx-0x74]
  4118a6:	push   eax
  4118a7:	(bad)
  4118aa:	push   ecx
  4118ab:	sbb    DWORD PTR [ebp-0x3db11cc],ecx
  4118b1:	pop    ebp
  4118b2:	mov    ds:0xc4238d91,al
  4118b7:	push   es
  4118b8:	or     dh,BYTE PTR [ebx]
  4118ba:	inc    DWORD PTR ds:0xc5b5a1e6
  4118c0:	mov    eax,0x3e0101f6
  4118c5:	mov    dh,BYTE PTR [eax]
  4118c7:	or     ch,dh
  4118c9:	mov    ds:0x4e14fc4f,eax
  4118ce:	and    bh,BYTE PTR [edi-0x6e]
  4118d1:	imul   esp,DWORD PTR [edi+0x36],0xbf998305
  4118d8:	dec    esp
  4118d9:	pushf  
  4118da:	mov    edx,?
  4118dc:	scas   al,BYTE PTR es:[edi]
  4118dd:	dec    ebx
  4118de:	inc    ecx
  4118df:	jge    0x411955
  4118e1:	lock ror BYTE PTR [ebx+eiz*8+0x4e],1
  4118e6:	or     eax,0x3dea644f
  4118eb:	push   esi
  4118ec:	sub    bh,BYTE PTR [ebp+0x39]
  4118ef:	lds    ebp,FWORD PTR [ebx]
  4118f1:	cdq    
  4118f2:	mov    eax,ds:0x2a850530
  4118f7:	pop    eax
  4118f8:	push   es
  4118f9:	mov    ebp,0xf35ce908
  4118fe:	and    DWORD PTR [edx+0x53],eax
  411901:	addr16 push ecx
  411903:	jl     0x411983
  411905:	xchg   esp,eax
  411906:	in     al,0x22
  411908:	in     eax,0xdf
  41190a:	fcmovnb st,st(3)
  41190c:	sub    eax,0x965ca4d2
  411911:	mov    esp,0xcc9bd36b
  411916:	adc    cl,BYTE PTR [ebx-0x672cbbcc]
  41191c:	xchg   edx,eax
  41191d:	stos   BYTE PTR es:[edi],al
  41191e:	and    BYTE PTR [edi+eax*4-0x5f0978b4],ah
  411925:	out    dx,eax
  411926:	mov    al,ds:0x57d29aba
  41192b:	push   ebx
  41192c:	fucom  st(3)
  41192e:	pusha  
  41192f:	scas   eax,DWORD PTR es:[edi]
  411930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411931:	sbb    DWORD PTR [ecx-0x77a36e11],ebp
  411937:	pop    ebp
  411938:	push   ebx
  411939:	rol    DWORD PTR [ebx+0x5e],1
  41193c:	call   0xedc4:0xc2b0d51e
  411943:	mov    bh,0xcb
  411945:	inc    eax
  411946:	sub    DWORD PTR [ecx+0x23],esp
  411949:	scas   al,BYTE PTR es:[edi]
  41194a:	shr    cl,0x69
  41194d:	pop    edx
  41194e:	dec    ebx
  41194f:	jb     0x411976
  411951:	xchg   esi,eax
  411952:	outs   dx,BYTE PTR ds:[esi]
  411953:	in     eax,0xd1
  411955:	loop   0x4119ad
  411957:	outs   dx,BYTE PTR ds:[esi]
  411958:	inc    ebp
  411959:	mov    ch,0xc6
  41195b:	xor    ch,BYTE PTR [ecx+0x650ec422]
  411961:	psadbw mm1,QWORD PTR [ebx]
  411964:	in     al,0x78
  411966:	mov    dl,BYTE PTR [edx+esi*2+0x14708a57]
  41196d:	xchg   ebx,eax
  41196e:	or     DWORD PTR [esi-0x24],esp
  411971:	into   
  411972:	dec    esi
  411973:	dec    BYTE PTR [eax]
  411975:	mov    cl,0xc6
  411977:	pop    esi
  411978:	add    al,0xc8
  41197a:	lods   eax,DWORD PTR ds:[esi]
  41197b:	push   eax
  41197c:	addr16 jmp 0x4119a8
  41197f:	add    DWORD PTR [ecx+0x6b],ebp
  411982:	jecxz  0x41198a
  411984:	mov    cl,0xe5
  411986:	leave  
  411987:	push   es
  411988:	fld    st(0)
  41198a:	adc    eax,0x74098c10
  41198f:	or     DWORD PTR [ebp+edx*1+0x149eda96],esi
  411996:	mov    bl,0xbc
  411998:	push   esi
  411999:	cs push edi
  41199b:	or     al,0x8f
  41199d:	sti    
  41199e:	mov    ah,0x94
  4119a0:	mov    cl,0x9e
  4119a2:	mov    bh,0x43
  4119a4:	imul   edx,ebp,0x20
  4119a7:	dec    edx
  4119a8:	xchg   edi,eax
  4119a9:	jb     0x411981
  4119ab:	mov    dl,0x12
  4119ad:	test   eax,0x8751e7a7
  4119b2:	xchg   ecx,eax
  4119b3:	add    al,0x7f
  4119b5:	jp     0x4119c6
  4119b7:	adc    BYTE PTR [ecx+ecx*2+0x64],0xdb
  4119bc:	jae    0x411a28
  4119be:	mov    edx,0x9ed7ebb3
  4119c3:	adc    al,BYTE PTR [ebx]
  4119c5:	test   eax,0x33291981
  4119ca:	bound  eax,QWORD PTR [edx-0x572c4f5e]
  4119d0:	sbb    al,0x12
  4119d2:	test   eax,0xa79b9e57
  4119d7:	add    DWORD PTR [edx],ecx
  4119d9:	(bad)  
  4119da:	jmp    0x411a00
  4119dc:	xor    al,0x93
  4119de:	jb     0x411967
  4119e0:	xor    dl,BYTE PTR [ebp+eiz*2+0x25]
  4119e4:	jb     0x4119ab
  4119e6:	dec    ebp
  4119e7:	xor    DWORD PTR [edi],ebp
  4119e9:	jo     0x4119b3
  4119eb:	(bad)  
  4119ec:	aad    0xc7
  4119ee:	loope  0x411a6a
  4119f0:	mov    ds:0xefcb15a6,eax
  4119f5:	idiv   dl
  4119f7:	aas    
  4119f8:	xchg   esp,eax
  4119fa:	jbe    0x411a5b
  4119fc:	adc    eax,0x3c24e240
  411a01:	xchg   esi,eax
  411a02:	arpl   WORD PTR ds:0x88510159,bx
  411a08:	ins    DWORD PTR es:[edi],dx
  411a09:	sub    BYTE PTR ds:0xa42d74b8,al
  411a0f:	rcr    DWORD PTR [edx+0x19],1
  411a12:	mov    edi,0xf5715cda
  411a17:	mov    ds:0xef31beba,al
  411a1c:	(bad)  
  411a1d:	imul   edi,DWORD PTR [ebp+0x6e],0x31
  411a21:	jae    0x4119e2
  411a23:	jae    0x411a1b
  411a25:	or     dh,bl
  411a27:	ins    DWORD PTR es:[edi],dx
  411a28:	and    edi,0x450c2b05
  411a2e:	sbb    BYTE PTR [ebx+ecx*2-0x7a],ch
  411a32:	int3   
  411a33:	and    dl,BYTE PTR [esi+0x12]
  411a36:	fst    QWORD PTR [ebx]
  411a38:	mov    ebp,0xad765a4c
  411a3d:	js     0x4119f0
  411a3f:	loope  0x411a19
  411a41:	sbb    ah,cl
  411a43:	adc    DWORD PTR [ebx],ebp
  411a45:	xlat   BYTE PTR ds:[ebx]
  411a46:	gs aad 0x35
  411a49:	mov    ecx,0x5f58211
  411a4e:	cmp    al,0xbd
  411a50:	inc    eax
  411a51:	arpl   WORD PTR [eax+0x46af6d0a],bx
  411a57:	ss mov edi,0x5ee7d9f9
  411a5d:	es loope 0x4119fc
  411a60:	ror    BYTE PTR [ebp+0x7de0753b],0xa3
  411a67:	cmp    BYTE PTR [eax-0x30],cl
  411a6a:	repz mov ds:0x4401be47,eax
  411a70:	xor    DWORD PTR [ebp-0x6e],ecx
  411a73:	jl     0x411a42
  411a75:	(bad)  
  411a76:	sahf   
  411a77:	sahf   
  411a78:	dec    ecx
  411a79:	in     eax,0xe9
  411a7b:	ficom  DWORD PTR [ebx]
  411a7d:	jecxz  0x411a84
  411a7f:	daa    
  411a80:	adc    BYTE PTR [edi],ch
  411a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a83:	shl    cl,cl
  411a85:	imul   eax,DWORD PTR [edx-0x6c],0xffffffc2
  411a89:	xchg   esi,eax
  411a8a:	adc    eax,0xc07c9db2
  411a8f:	xchg   esi,eax
  411a90:	mov    WORD PTR [eax+edi*1+0x164595b0],?
  411a97:	xlat   BYTE PTR ds:[ebx]
  411a98:	pushf  
  411a99:	push   ss
  411a9a:	mov    dl,0xa2
  411a9c:	sbb    al,0xd7
  411a9e:	jle    0x411aff
  411aa0:	fsub   QWORD PTR [ebp+edx*2+0x1787efcd]
  411aa7:	sub    al,0x76
  411aa9:	mov    eax,0xa7bc8eac
  411aae:	iret   
  411aaf:	popf   
  411ab0:	repz cmp eax,0xd2546e8b
  411ab6:	mov    bl,0x1
  411ab8:	(bad)  
  411ab9:	xor    edx,DWORD PTR [ecx+0x56]
  411abc:	ja     0x411afc
  411abe:	sbb    dh,al
  411ac0:	cs sub eax,0x8a5556fd
  411ac6:	sub    eax,0x9e89ff4e
  411acb:	arpl   WORD PTR [ebx+0x3a],si
  411ace:	or     eax,0x8475cf4d
  411ad3:	push   esi
  411ad4:	out    dx,al
  411ad5:	retf   0xa4fd
  411ad8:	(bad)  
  411ad9:	pop    edx
  411ada:	or     DWORD PTR ds:0x564bca2c,edi
  411ae0:	fisub  WORD PTR es:[esi]
  411ae3:	icebp  
  411ae4:	pop    ds
  411ae5:	cwde   
  411ae6:	jb     0x411b46
  411ae8:	jne    0x411b43
  411aea:	cs es jb 0x411b20
  411aee:	mov    cl,bh
  411af0:	jmp    0x61d67b50
  411af5:	mov    ch,0x67
  411af7:	(bad)  
  411af9:	xor    DWORD PTR [esi-0x56d13b7e],ebp
  411aff:	ret    0x73a6
  411b02:	popf   
  411b03:	addr16 mov ebp,0xd879957d
  411b09:	ds ret 
  411b0b:	stos   BYTE PTR es:[edi],al
  411b0c:	and    DWORD PTR [ecx+edx*8+0x7d8cba3c],ebp
  411b13:	and    ch,dl
  411b15:	push   ss
  411b16:	dec    edx
  411b17:	and    al,0x67
  411b19:	pop    edi
  411b1a:	shr    DWORD PTR [eax],cl
  411b1c:	jnp    0x411b1e
  411b1e:	add    eax,0xd6f4244b
  411b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b24:	mov    ch,0x83
  411b26:	sbb    ebp,DWORD PTR [ebx-0x47855e76]
  411b2c:	push   ebp
  411b2d:	sbb    eax,0xdbf1e4
  411b32:	push   esp
  411b33:	push   es
  411b34:	sbb    al,0x9d
  411b37:	ss (bad) 
  411b39:	fstp   TBYTE PTR [eax-0x2c5b079f]
  411b3f:	mov    ch,0x25
  411b41:	xchg   esi,eax
  411b42:	jmp    0x411b38
  411b44:	and    DWORD PTR [eax-0x5d2d4d66],esp
  411b4a:	mov    ecx,0xb9ae3a95
  411b4f:	das    
  411b50:	cli    
  411b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b52:	int3   
  411b53:	inc    ebp
  411b54:	stos   DWORD PTR es:[edi],eax
  411b55:	jne    0x411ae7
  411b57:	neg    BYTE PTR [ecx+0x5b]
  411b5a:	or     DWORD PTR [ebx+0x6f],ecx
  411b5d:	jno    0x411bb7
  411b5f:	jo     0x411bb8
  411b61:	cmp    edx,DWORD PTR [ebx+ecx*2-0x649686c1]
  411b68:	jg     0x411baf
  411b6a:	pushf  
  411b6b:	jl     0x411b4c
  411b6d:	cdq    
  411b6e:	cmp    BYTE PTR [ecx+0x2acf025b],dl
  411b74:	cmp    al,0x69
  411b76:	pop    eax
  411b77:	enter  0xbca8,0x45
  411b7b:	fidivr WORD PTR [ecx-0x445f31ea]
  411b81:	(bad)  
  411b82:	stc    
  411b83:	(bad)  
  411b84:	mov    esi,0xd9f7d798
  411b89:	dec    esp
  411b8a:	add    BYTE PTR [esi-0x7d],0x49
  411b8e:	bound  esi,QWORD PTR [edx-0x26]
  411b91:	sub    DWORD PTR [esi+0x2803d3d9],eax
  411b97:	sar    BYTE PTR [ebp-0x58],1
  411b9a:	mov    BYTE PTR [edi],ch
  411b9c:	push   es
  411b9d:	add    ch,dl
  411b9f:	xchg   edx,eax
  411ba0:	xor    bl,al
  411ba2:	and    DWORD PTR [eax+0x7f9c4d5e],ebx
  411ba8:	mov    esi,DWORD PTR [ecx+eiz*2]
  411bab:	adc    eax,0x2e93efa
  411bb0:	jo     0x411b3b
  411bb2:	adc    BYTE PTR [ebp-0x681b3d90],0xc0
  411bb9:	dec    edi
  411bba:	cmp    BYTE PTR [esi+esi*2-0x13],cl
  411bbe:	(bad)  
  411bbf:	in     eax,dx
  411bc0:	iret   
  411bc1:	je     0x411b7a
  411bc3:	mov    bh,0x23
  411bc5:	cmp    al,0x3
  411bc7:	int3   
  411bc8:	or     ebx,esi
  411bca:	sub    BYTE PTR [ebx-0x2d7673ea],bl
  411bd0:	pop    ds
  411bd1:	cli    
  411bd2:	push   ds
  411bd3:	add    eax,0xb937159b
  411bd8:	xor    edi,DWORD PTR [esp+ebx*1+0x5b673d5b]
  411bdf:	into   
  411be0:	sbb    DWORD PTR [ebp+ecx*1+0xf6313c6],ebp
  411be7:	push   edx
  411be8:	(bad)  
  411be9:	jmp    0x8626:0x1caf26ef
  411bf0:	push   ss
  411bf1:	xchg   cl,bl
  411bf3:	lock pop ss
  411bf5:	sti    
  411bf6:	outs   dx,BYTE PTR ds:[esi]
  411bf7:	and    al,0xae
  411bf9:	sbb    eax,edi
  411bfb:	cmp    eax,0x71e51771
  411c00:	dec    ebp
  411c01:	adc    eax,ebx
  411c03:	adc    BYTE PTR [esi+0x31],dl
  411c06:	mov    WORD PTR cs:[edi-0x51b9277e],?
  411c0d:	je     0x411bdd
  411c0f:	fist   WORD PTR [ecx]
  411c11:	pop    edi
  411c12:	(bad)  
  411c13:	in     eax,dx
  411c14:	add    ebx,esp
  411c16:	cmc    
  411c17:	cli    
  411c18:	gs imul esp,ebp,0xf26b08fa
  411c1f:	out    dx,al
  411c20:	pop    esp
  411c21:	and    bl,ch
  411c23:	or     bh,BYTE PTR [ebp-0x6c]
  411c26:	pop    ebp
  411c27:	xor    ebp,DWORD PTR [edi+0x3448282b]
  411c2d:	bound  ecx,QWORD PTR [edx+0xc]
  411c30:	gs test esp,esi
  411c33:	mov    eax,0xe2ecfcc1
  411c38:	adc    eax,0x3a1f96ab
  411c3d:	ja     0x411c94
  411c3f:	and    ebx,DWORD PTR [ebx+0x72]
  411c42:	loop   0x411beb
  411c44:	jge    0x411bdf
  411c46:	sub    esp,esi
  411c48:	lds    ecx,FWORD PTR [ecx*1+0x5053ebd]
  411c4f:	or     dl,BYTE PTR [ecx]
  411c51:	daa    
  411c52:	(bad)  
  411c53:	pop    edx
  411c54:	pop    esi
  411c55:	les    edi,FWORD PTR [edx-0x6de19f68]
  411c5b:	sbb    al,0x1
  411c5d:	mov    cl,0x35
  411c5f:	or     cl,bl
  411c61:	nop
  411c62:	cdq    
  411c63:	mov    bh,0xfc
  411c65:	lock mov ds:0x1367ecaf,eax
  411c6b:	pop    ds
  411c6c:	xchg   BYTE PTR [esi-0xd],ah
  411c6f:	cmp    BYTE PTR ds:0x334679ec,bh
  411c75:	or     BYTE PTR [edi-0x2e],ah
  411c78:	pop    ds
  411c79:	std    
  411c7a:	mov    al,0x27
  411c7c:	ss or  al,0x9a
  411c7f:	retf   
  411c80:	xor    eax,0x24bc9806
  411c85:	out    0x42,al
  411c87:	add    al,0xa7
  411c89:	stc    
  411c8a:	mov    dh,0x90
  411c8c:	test   bh,dl
  411c8e:	fiadd  DWORD PTR [esi]
  411c90:	sbb    ebx,DWORD PTR [ebp-0x3c507dd3]
  411c96:	pop    edx
  411c97:	cmp    DWORD PTR [ebp+ebx*2+0x4f],eax
  411c9b:	aaa    
  411c9c:	call   0x499d:0x9364f8b3
  411ca3:	jbe    0x411c3f
  411ca5:	push   esp
  411ca6:	push   esp
  411ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ca8:	sti    
  411ca9:	shl    ch,1
  411cab:	inc    edx
  411cac:	pop    ss
  411cad:	inc    ebx
  411cae:	fwait
  411caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cb0:	xchg   edx,eax
  411cb1:	adc    eax,0xb30dcbf9
  411cb6:	dec    ecx
  411cb7:	jge    0x411c5e
  411cb9:	loope  0x411c69
  411cbb:	sti    
  411cbc:	xchg   BYTE PTR [eax-0xcfa3ad8],cl
  411cc2:	and    DWORD PTR [ecx-0x1d],ebx
  411cc5:	dec    eax
  411cc6:	or     al,0x74
  411cc8:	xor    eax,0x34d2340b
  411ccd:	into   
  411cce:	mov    ebp,0xeecd09ed
  411cd3:	mov    DWORD PTR [edx+esi*8+0x58],ecx
  411cd7:	fdivrp st(1),st
  411cd9:	test   DWORD PTR [ebx+0x27],edx
  411cdc:	push   ebx
  411cdd:	dec    edi
  411cde:	ja     0x411c75
  411ce0:	mov    ds:0x8292a0a9,eax
  411ce5:	or     edx,DWORD PTR [edi]
  411ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce9:	add    cl,al
  411ceb:	daa    
  411cec:	push   ds
  411ced:	dec    edx
  411cee:	xor    eax,0x8cc565cf
  411cf3:	in     eax,0x52
  411cf5:	xlat   BYTE PTR ds:[ebx]
  411cf6:	in     eax,dx
  411cf7:	adc    eax,0x7e611d35
  411cfc:	mov    esi,0x49884e31
  411d01:	and    ebx,DWORD PTR [edi+0x4c051775]
  411d07:	test   DWORD PTR [eax],eax
  411d09:	pop    esp
  411d0a:	cmp    BYTE PTR [edi-0x38],bh
  411d0d:	or     al,0xc8
  411d0f:	push   0x3dbae271
  411d14:	jmp    0x67920f92
  411d19:	aam    0xb3
  411d1b:	jne    0x411d8f
  411d1d:	aad    0xe6
  411d1f:	call   0x1b70:0x367e71ac
  411d26:	loop   0x411cf7
  411d28:	in     al,0x85
  411d2a:	push   esi
  411d2b:	test   eax,0xfd97a827
  411d30:	or     al,0xac
  411d32:	cmp    al,0xbd
  411d34:	data16 and BYTE PTR [ecx],dl
  411d37:	add    BYTE PTR [esi-0x70],0xe
  411d3b:	clc    
  411d3c:	int3   
  411d3d:	add    ebx,edi
  411d3f:	(bad)  
  411d40:	ror    BYTE PTR [edi-0x4efc17d1],1
  411d46:	mov    ch,0xbc
  411d48:	in     al,dx
  411d49:	or     DWORD PTR [ebp+edx*4+0x46],esi
  411d4d:	fistp  DWORD PTR [ebx+eax*2+0x6e]
  411d51:	jb     0x411cd3
  411d53:	sub    esp,DWORD PTR [edx+0x4ccb593a]
  411d59:	mov    bl,0xeb
  411d5b:	dec    esi
  411d5c:	mov    ds:0x9da87c6c,eax
  411d61:	imul   edi,DWORD PTR [eax-0x64],0xd63145d3
  411d68:	sub    cl,BYTE PTR [edi-0x4]
  411d6b:	stos   BYTE PTR es:[edi],al
  411d6c:	mov    ds:0x51cb14c3,al
  411d71:	sahf   
  411d72:	shl    DWORD PTR [eax+0x22],cl
  411d75:	mov    ch,0xb0
  411d77:	lock sbb al,0x80
  411d7a:	mov    ?,WORD PTR [edx+0x689b893e]
  411d80:	in     eax,dx
  411d81:	xor    dh,bl
  411d83:	or     eax,0xffc10c7c
  411d88:	mov    ds:0xd1740f6a,al
  411d8d:	mov    ebp,DWORD PTR [ecx]
  411d8f:	mov    dh,0x12
  411d91:	clc    
  411d92:	fild   DWORD PTR [ebp-0x1d]
  411d95:	jp     0x411e14
  411d97:	in     al,dx
  411d98:	push   ebx
  411d99:	jg     0x411d69
  411d9b:	dec    esp
  411d9c:	sbb    al,0x54
  411d9e:	jmp    0x411e09
  411da0:	mov    ds:0x9e5057d4,eax
  411da5:	push   cs
  411da6:	or     BYTE PTR [eax-0x256888e7],0xca
  411dad:	or     dh,cl
  411daf:	stos   DWORD PTR es:[edi],eax
  411db0:	js     0x411dca
  411db2:	stos   DWORD PTR es:[edi],eax
  411db3:	add    cl,BYTE PTR ds:0x59d5ac1b
  411db9:	shl    BYTE PTR [ecx],0x30
  411dbc:	test   BYTE PTR [edi-0x40],al
  411dbf:	sahf   
  411dc0:	cld    
  411dc1:	or     al,0xff
  411dc3:	dec    edx
  411dc5:	adc    ecx,ebx
  411dc7:	xchg   edx,edx
  411dc9:	sub    bl,dl
  411dcb:	mov    dl,0x3d
  411dcd:	and    dh,bl
  411dcf:	addr16 rol ecx,cl
  411dd2:	and    DWORD PTR [ecx+0x17ed18cf],ecx
  411dd8:	fcomp  QWORD PTR [edi+0x7426ce40]
  411dde:	and    eax,0xdc73875e
  411de3:	stc    
  411de4:	add    eax,0x539c3f8
  411de9:	test   DWORD PTR [ebx+0x709e86ce],ecx
  411def:	mov    edx,0x9bf45760
  411df4:	add    DWORD PTR [esp+eax*1-0x4849193],ebx
  411dfb:	pusha  
  411dfc:	or     eax,0xc684c7
  411e01:	imul   eax,DWORD PTR [edx+0xd540f48],0x65
  411e08:	and    ecx,DWORD PTR [edi+0x57]
  411e0b:	pop    ecx
  411e0c:	call   0xaf0b:0xea11fcd0
  411e13:	ins    BYTE PTR es:[edi],dx
  411e14:	or     ebp,DWORD PTR [eax]
  411e16:	int    0x7b
  411e18:	ss xchg ebx,eax
  411e1a:	scas   al,BYTE PTR es:[edi]
  411e1b:	aas    
  411e1c:	fimul  DWORD PTR ds:0x660c029a
  411e22:	pusha  
  411e23:	imul   eax,eax,0x19
  411e26:	ja     0x411e50
  411e28:	dec    esi
  411e29:	cmp    eax,0x3c591331
  411e2e:	pop    eax
  411e2f:	loope  0x411e6e
  411e31:	es sbb edx,esi
  411e34:	jp     0x411dca
  411e36:	sub    bl,bl
  411e38:	sbb    dl,BYTE PTR [ebp+0x3703fbd2]
  411e3e:	push   ds
  411e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e40:	das    
  411e41:	sbb    al,0x3
  411e43:	lea    edi,[ebx+0x1d6a04b0]
  411e49:	mov    ah,0xdc
  411e4b:	mov    cl,0x3f
  411e4d:	adc    al,BYTE PTR [esi]
  411e4f:	inc    ebp
  411e50:	add    cl,dl
  411e52:	pusha  
  411e53:	jb     0x411e2a
  411e55:	shl    BYTE PTR [ecx+0x79f9ac97],0x63
  411e5c:	xor    DWORD PTR [ebp+edx*8+0x4c],esi
  411e60:	frstor [edx+0x2564aee]
  411e66:	and    BYTE PTR [eax-0x64fe9ec3],ch
  411e6c:	mov    bh,0x4d
  411e6e:	cmc    
  411e6f:	rol    BYTE PTR [ecx+0x3],cl
  411e72:	xor    esp,ebx
  411e74:	(bad)  
  411e75:	push   ss
  411e76:	faddp  st(7),st
  411e78:	lock push edx
  411e7a:	xor    ebx,DWORD PTR [esi-0x69]
  411e7d:	jno    0x411e86
  411e7f:	jne    0x411e8c
  411e81:	jp     0x411e04
  411e83:	in     al,dx
  411e84:	in     al,dx
  411e85:	fxch   st(7)
  411e87:	ret    
  411e88:	mov    eax,ds:0xb403ba2c
  411e8d:	ins    DWORD PTR es:[edi],dx
  411e8e:	aad    0xd4
  411e90:	jmp    0x760e:0x9ea31cf
  411e97:	mov    esi,0xa13e09e8
  411e9c:	loope  0x411e3e
  411e9e:	sub    eax,0x51e160ea
  411ea3:	pop    ss
  411ea4:	sub    BYTE PTR gs:[esi],bh
  411ea7:	cs jb  0x411f0c
  411eaa:	adc    eax,DWORD PTR [eax]
  411eac:	jg     0x411ebc
  411eae:	lds    edi,FWORD PTR [ecx-0x4d]
  411eb1:	xchg   edi,eax
  411eb2:	adc    DWORD PTR [ebx-0x414a77ff],edi
  411eb8:	and    eax,0x3ca912f1
  411ebd:	ins    DWORD PTR es:[edi],dx
  411ebe:	aam    0xe1
  411ec0:	add    eax,0xae0f968a
  411ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec6:	ja     0x411ec0
  411ec8:	ret    
  411ec9:	pop    esi
  411eca:	idiv   BYTE PTR [ebp-0x22]
  411ecd:	and    bh,ah
  411ecf:	stos   BYTE PTR es:[edi],al
  411ed0:	jl     0x411f1a
  411ed2:	(bad)  
  411ed3:	rol    DWORD PTR [esi-0x5422b911],1
  411ed9:	pop    es
  411eda:	inc    esi
  411edb:	add    BYTE PTR [eax],0xcd
  411ede:	out    dx,al
  411edf:	stos   BYTE PTR es:[edi],al
  411ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee1:	test   al,0x22
  411ee3:	sbb    edi,DWORD PTR [ebp+0x7a]
  411ee6:	mov    edi,DWORD PTR [esi+eax*2]
  411ee9:	scas   eax,DWORD PTR es:[edi]
  411eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eeb:	pop    edi
  411eec:	xchg   edi,eax
  411eed:	or     DWORD PTR [edi-0x2982b5b8],ecx
  411ef3:	std    
  411ef4:	sahf   
  411ef5:	jle    0x411f1c
  411ef7:	test   eax,0xcddedac6
  411efc:	cmp    BYTE PTR [esi],dl
  411efe:	hlt    
  411eff:	es xchg ebp,eax
  411f01:	pop    esp
  411f02:	not    BYTE PTR [ebx]
  411f04:	aaa    
  411f05:	adc    al,0x4
  411f07:	shr    eax,1
  411f09:	mov    esp,cs
  411f0b:	test   al,0xce
  411f0d:	test   DWORD PTR [ebx-0x67],esi
  411f10:	jnp    0x411f4c
  411f12:	jno    0x411f91
  411f14:	shl    BYTE PTR [eax+0x6d9f0302],0xc8
  411f1b:	xor    bh,BYTE PTR [edx-0xf0d9034]
  411f21:	sub    eax,0xc4bcf2fd
  411f26:	ret    0xca87
  411f29:	and    DWORD PTR [ecx],ebp
  411f2b:	mov    cl,0x37
  411f2d:	cmp    esi,ecx
  411f2f:	rol    BYTE PTR [esi],0x45
  411f32:	clc    
  411f33:	rcl    dh,1
  411f35:	out    dx,eax
  411f36:	jge    0x411fa1
  411f38:	jmp    0xb83907f7
  411f3d:	inc    sp
  411f3f:	or     eax,0x167f9a3
  411f44:	(bad)  
  411f45:	mov    ds:0x73d19828,eax
  411f4a:	fnstcw WORD PTR [eax]
  411f4c:	or     dl,bl
  411f4e:	inc    edi
  411f4f:	and    eax,0x2cc4c523
  411f54:	test   eax,0x28916a00
  411f59:	sub    eax,0xb2c36161
  411f5e:	scas   al,BYTE PTR es:[edi]
  411f5f:	cmc    
  411f60:	cmp    al,0x7e
  411f62:	dec    esi
  411f63:	mov    bh,0xcc
  411f65:	push   edx
  411f66:	test   BYTE PTR [ebx+0x31],ch
  411f69:	out    dx,al
  411f6a:	jmp    0xd1f05aa9
  411f6f:	stc    
  411f70:	dec    edi
  411f71:	add    BYTE PTR [eax],dh
  411f73:	cld    
  411f74:	push   ds
  411f75:	int    0xdb
  411f77:	call   0xde8:0xcb708435
  411f7e:	clc    
  411f7f:	or     al,0xc2
  411f81:	mov    ebp,0x850573de
  411f86:	inc    ebx
  411f87:	mov    dl,0x2f
  411f89:	fstp   st(1)
  411f8b:	in     eax,0x39
  411f8d:	sbb    BYTE PTR [edx+0x3c84594f],bl
  411f93:	call   FWORD PTR [edi+ecx*2]
  411f96:	dec    ebp
  411f97:	dec    eax
  411f98:	cmp    esp,0xffffffdd
  411f9b:	adc    BYTE PTR [esi+0x2e],0xed
  411f9f:	pop    ebp
  411fa0:	pusha  
  411fa1:	lahf   
  411fa2:	loope  0x411f6f
  411fa4:	jnp    0x411f63
  411fa6:	cs xchg edx,eax
  411fa8:	mov    eax,0x6e1a4ca2
  411fad:	xchg   ecx,eax
  411fae:	jmp    0xd6fc:0xf0b05275
  411fb5:	or     DWORD PTR [ebp-0x78e4bca6],ecx
  411fbb:	fild   DWORD PTR [ebx+ebp*1-0x53]
  411fbf:	dec    ebx
  411fc0:	jne    0x411f8b
  411fc2:	in     eax,dx
  411fc3:	cdq    
  411fc4:	pop    ss
  411fc5:	les    esp,FWORD PTR [edi]
  411fc7:	pop    ss
  411fc8:	in     al,0x20
  411fca:	gs jne 0x411f75
  411fcd:	mov    ds:0x11af86a0,al
  411fd2:	fisub  DWORD PTR [edi]
  411fd4:	mov    cl,0x22
  411fd6:	sbb    DWORD PTR [eax+0xbb7b1ed],edi
  411fdc:	test   al,0xe2
  411fde:	call   0x5c0d997
  411fe3:	inc    ecx
  411fe4:	pop    eax
  411fe5:	add    cl,BYTE PTR ds:0xea22ef08
  411feb:	xchg   edi,eax
  411fec:	sub    eax,0xb6c3ffc6
  411ff1:	and    al,0x30
  411ff3:	jns    0x412001
  411ff5:	fmul   st,st(7)
  411ff7:	out    dx,al
  411ff8:	sub    ch,dl
  411ffa:	mov    bh,0x25
  411ffc:	push   es
  411ffd:	mov    bl,0x8f
  411fff:	iret   
  412000:	jle    0x411fe9
  412002:	jno    0x412038
  412004:	scas   al,BYTE PTR es:[edi]
  412005:	push   0xffffffcf
  412007:	neg    DWORD PTR [esi+ecx*8+0x1a411bf6]
  41200e:	mov    bl,0xec
  412010:	and    eax,eax
  412012:	xchg   esp,eax
  412013:	pop    ecx
  412014:	sar    DWORD PTR [eax],0xc9
  412017:	xchg   BYTE PTR [ebx+0x61],ah
  41201a:	(bad)  
  41201c:	lock dec esi
  41201e:	adc    eax,0x2025eeb6
  412023:	add    al,0x7b
  412025:	xor    DWORD PTR [ecx+0x17],0x273071bf
  41202c:	sar    BYTE PTR [eax],cl
  41202e:	scas   al,BYTE PTR es:[edi]
  41202f:	push   esi
  412030:	jne    0x412054
  412032:	lds    ecx,FWORD PTR [edx-0x24]
  412035:	sbb    cl,BYTE PTR [edi]
  412037:	addr16 xchg ebx,eax
  412039:	xchg   ebx,eax
  41203a:	jge    0x412081
  41203c:	test   BYTE PTR [esi],ch
  41203e:	add    eax,0xa27980fa
  412043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412044:	fist   WORD PTR [ebx+0x70f445b8]
  41204a:	ss jl  0x412004
  41204d:	call   0xb77e:0xae26f55e
  412054:	jne    0x411fe2
  412056:	mov    ebx,0x7341a445
  41205b:	popa   
  41205c:	jnp    0x41200f
  41205e:	mov    ebx,0xd8c68151
  412063:	je     0x411ffb
  412065:	adc    DWORD PTR [ebx],0xb3ec3d4b
  41206b:	jl     0x41200a
  41206d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41206e:	in     al,0x81
  412070:	sub    edi,DWORD PTR [ecx+0x4b0f7731]
  412076:	popf   
  412077:	mov    ah,0x2d
  412079:	cwde   
  41207a:	xchg   DWORD PTR [ebx-0x6ea64983],edi
  412080:	sub    al,0x2e
  412082:	or     al,0xd1
  412084:	sub    ecx,DWORD PTR [ebx]
  412086:	lahf   
  412087:	xor    DWORD PTR [ecx],eax
  412089:	into   
  41208a:	sbb    al,0xa4
  41208c:	add    eax,0x550c1fa
  412091:	int3   
  412092:	jp     0x412102
  412094:	inc    ebx
  412095:	les    ebx,FWORD PTR [edx-0x51350b05]
  41209b:	ss out 0xd4,al
  41209e:	cmp    DWORD PTR [ecx-0x80],eax
  4120a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a2:	lods   eax,DWORD PTR ds:[esi]
  4120a3:	dec    esi
  4120a4:	mov    ?,esi
  4120a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a7:	mov    edx,0x96ec90c5
  4120ac:	or     eax,0x6208c7f2
  4120b1:	xchg   ecx,ebx
  4120b3:	push   edx
  4120b4:	lods   eax,DWORD PTR ds:[esi]
  4120b5:	lods   eax,DWORD PTR ds:[esi]
  4120b6:	adc    BYTE PTR [ecx+0x6ef25a67],bl
  4120bc:	mov    eax,0x383c3c1c
  4120c1:	loop   0x4120d2
  4120c3:	pmaxsw mm7,mm1
  4120c6:	and    eax,0x67fa7d2a
  4120cb:	dec    esi
  4120cc:	push   ebx
  4120cd:	dec    edi
  4120ce:	xchg   DWORD PTR [esi+0x7c7576e1],edx
  4120d4:	mov    ds:0x950f2655,al
  4120d9:	push   ds
  4120da:	jb     0x4120d0
  4120dc:	ss fs cdq 
  4120df:	fwait
  4120e0:	test   BYTE PTR [ecx+0xfd711be],0xe0
  4120e7:	fcomi  st,st(2)
  4120e9:	(bad)  
  4120ea:	pop    edi
  4120eb:	push   esi
  4120ec:	jg     0x41208b
  4120ee:	push   cs
  4120ef:	out    dx,al
  4120f0:	pop    esp
  4120f1:	pop    esp
  4120f2:	clc    
  4120f3:	and    eax,0x81902b27
  4120f8:	jmp    0x5a35c14b
  4120fd:	mov    edi,0x4dbcf7ed
  412102:	mov    ecx,0x5c265b40
  412107:	push   0xd1cc2370
  41210c:	lock sahf 
  41210e:	jbe    0x412101
  412110:	pop    edx
  412111:	mov    ebp,0x2694df2f
  412116:	add    dl,bh
  412118:	xchg   esi,eax
  412119:	mov    ds:0xd7f6d6f4,al
  41211e:	cmp    DWORD PTR [esi+0x6b],ebx
  412121:	dec    edx
  412122:	push   esi
  412123:	pop    edx
  412124:	inc    ebx
  412125:	int    0x17
  412127:	and    cl,0x99
  41212a:	aas    
  41212b:	mov    ch,0xd1
  41212d:	mov    DWORD PTR [ecx],edx
  41212f:	jle    0x412188
  412131:	push   eax
  412132:	inc    ebp
  412133:	fimul  DWORD PTR ds:0xe38ace21
  412139:	fsubr  DWORD PTR [ebx-0x749e70bc]
  41213f:	mov    eax,ds:0xa5143ad3
  412144:	push   eax
  412145:	(bad)
  41214a:	pop    es
  41214b:	js     0x4121a7
  41214d:	leave  
  41214e:	ret    0xdd82
  412151:	and    BYTE PTR [esi-0x48],0x46
  412155:	pop    eax
  412156:	(bad)  
  412157:	and    edx,ebp
  412159:	push   edi
  41215a:	add    esi,DWORD PTR [ebx+0x7d18d417]
  412160:	les    edx,FWORD PTR [ebp-0x4e]
  412163:	fs in  al,0xc2
  412166:	in     al,0x9c
  412168:	xchg   edi,eax
  412169:	retf   
  41216a:	in     eax,0x7f
  41216c:	sbb    al,0x34
  41216e:	(bad)  
  41216f:	pop    eax
  412170:	fld    DWORD PTR [ebx-0x2d]
  412173:	and    eax,0x8a7b4602
  412178:	std    
  412179:	mov    dl,0x8d
  41217b:	pop    edx
  41217c:	ret    0xb7cd
  41217f:	in     al,dx
  412180:	stos   BYTE PTR es:[edi],al
  412181:	xchg   esi,eax
  412182:	fstp   TBYTE PTR [ecx+0x4c18fa4d]
  412188:	fistp  QWORD PTR [eax+eiz*4]
  41218b:	je     0x412194
  41218d:	rcr    BYTE PTR [edx+0x65786483],1
  412193:	fisubr DWORD PTR [eax-0x67fff01e]
  412199:	mov    edx,0x1c921dc9
  41219e:	or     eax,0x8dd56b3a
  4121a3:	in     eax,dx
  4121a4:	and    edx,ebp
  4121a6:	mov    DWORD PTR [eax+0x5c],esi
  4121a9:	lds    ebp,FWORD PTR [edx]
  4121ab:	sub    al,0xb4
  4121ad:	jge    0x412206
  4121af:	in     al,0x9e
  4121b1:	das    
  4121b2:	retf   0xf58c
  4121b5:	out    0x9e,eax
  4121b7:	lods   eax,DWORD PTR ds:[esi]
  4121b8:	adc    ebp,DWORD PTR [esi+0x21]
  4121bb:	pop    esp
  4121bc:	test   DWORD PTR [ebp+0x4e],edx
  4121bf:	sbb    DWORD PTR [ecx+0x64],0xfffffff3
  4121c3:	sahf   
  4121c4:	xchg   ecx,eax
  4121c5:	adc    ch,dl
  4121c7:	pop    es
  4121c8:	mov    ah,0x74
  4121ca:	pop    esi
  4121cb:	call   0x5f07:0x7be5956f
  4121d2:	aad    0x8e
  4121d4:	ins    BYTE PTR es:[edi],dx
  4121d5:	es pusha 
  4121d7:	jnp    0x412192
  4121d9:	xlat   BYTE PTR ds:[ebx]
  4121da:	inc    esi
  4121db:	push   0xefcaf7ff
  4121e0:	pop    edi
  4121e1:	or     esi,esp
  4121e3:	pop    esp
  4121e4:	mov    ds:0xfb8ba0c5,eax
  4121e9:	push   0x7ec4f26e
  4121ee:	xor    ecx,DWORD PTR [edi+ebp*2+0x28a60a24]
  4121f5:	jbe    0x4121f1
  4121f7:	in     al,0x6d
  4121f9:	jl     0x412200
  4121fb:	outs   dx,DWORD PTR ds:[esi]
  4121fc:	jne    0x41222b
  4121fe:	loop   0x4121e2
  412200:	cmp    al,0x7d
  412202:	clc    
  412203:	xchg   BYTE PTR [edi+eax*1+0x13d127e1],cl
  41220a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41220b:	repz loope 0x412206
  41220e:	xor    DWORD PTR [ecx+0x42af06b2],esp
  412214:	pop    esi
  412215:	and    eax,0x8c03079c
  41221a:	les    edi,FWORD PTR [eax-0x46]
  41221d:	jo     0x412233
  41221f:	addr16 and dh,0xa3
  412223:	test   BYTE PTR [ecx+0x33ec0892],ah
  412229:	(bad)  
  41222a:	ss pushf 
  41222c:	push   cs
  41222d:	mov    dl,0xcb
  41222f:	push   ecx
  412230:	push   esp
  412231:	ds stos BYTE PTR es:[edi],al
  412233:	xchg   ecx,eax
  412234:	loope  0x41224c
  412236:	das    
  412237:	ror    DWORD PTR [ecx],0xd
  41223a:	neg    dh
  41223c:	jns    0x412250
  41223e:	rol    BYTE PTR [ebp-0x1b],cl
  412241:	fbld   TBYTE PTR [edx+0x4c]
  412244:	or     al,0x4c
  412246:	sub    edi,edi
  412248:	xor    esp,DWORD PTR [ecx+edi*4-0x52]
  41224c:	pop    ds
  41224d:	push   ss
  41224e:	or     eax,0xfd41520c
  412253:	push   ebx
  412254:	mov    ah,0x20
  412256:	pop    ds
  412257:	inc    edi
  412258:	adc    BYTE PTR [edx],cl
  41225a:	mov    al,BYTE PTR [edi+0x56288a60]
  412260:	mov    ds,WORD PTR [ecx]
  412262:	sbb    ebx,edx
  412264:	ret    0x4fec
  412267:	in     eax,0x64
  412269:	pop    ds
  41226a:	cwde   
  41226b:	cmp    BYTE PTR [edx],0x71
  41226e:	push   ebx
  41226f:	leave  
  412270:	add    DWORD PTR [eax+0x5b],esp
  412273:	jbe    0x412281
  412275:	sti    
  412276:	mov    esp,0xe2fcfc9a
  41227b:	es sbb eax,0x60b4f209
  412281:	pop    esp
  412282:	repnz iret 
  412284:	fsubr  st,st(4)
  412286:	sbb    ch,BYTE PTR [ebx]
  412288:	jns    0x4122a7
  41228a:	or     BYTE PTR [ebp-0x7eaff24b],al
  412290:	dec    edi
  412291:	mov    cl,0xb3
  412293:	fadd   DWORD PTR [eax-0x40ed20e7]
  412299:	or     BYTE PTR [edi],bl
  41229b:	addr16 cs jno 0x4122f9
  41229f:	push   ebp
  4122a0:	(bad)  
  4122a1:	aaa    
  4122a2:	xor    eax,0xac2284d7
  4122a7:	mov    eax,DWORD PTR [edx]
  4122a9:	mov    gs,WORD PTR [ebx-0x459d49df]
  4122af:	xchg   DWORD PTR [edx],ecx
  4122b1:	cs pop edi
  4122b3:	inc    edx
  4122b4:	ins    BYTE PTR es:[edi],dx
  4122b5:	push   ecx
  4122b6:	sub    eax,DWORD PTR [ecx-0x2e]
  4122b9:	imul   BYTE PTR [ebp+0x2e]
  4122bc:	in     al,0x47
  4122be:	sub    dh,BYTE PTR [edi+0x66]
  4122c1:	jbe    0x41227e
  4122c3:	inc    ebp
  4122c4:	dec    ebp
  4122c5:	and    BYTE PTR [esi],bh
  4122c7:	dec    ebp
  4122c8:	ds stos DWORD PTR es:[edi],eax
  4122ca:	in     al,dx
  4122cb:	inc    esp
  4122cc:	sbb    eax,0xce9b8935
  4122d1:	sbb    bl,BYTE PTR [edi]
  4122d3:	and    ebp,ebp
  4122d5:	xchg   esp,eax
  4122d6:	into   
  4122d7:	jbe    0x412260
  4122d9:	xor    edi,ebp
  4122db:	ja     0x412311
  4122dd:	and    al,0xeb
  4122df:	nop
  4122e0:	(bad)  
  4122e1:	mov    DWORD PTR [ebx-0x60a859b8],0x4fb35ddf
  4122eb:	cli    
  4122ec:	sub    al,0xa6
  4122ee:	xor    eax,0x9b333d36
  4122f3:	popf   
  4122f4:	jno    0x412311
  4122f6:	popf   
  4122f7:	cmp    eax,ebx
  4122f9:	out    0x79,al
  4122fb:	push   edx
  4122fc:	jle    0x4122ef
  4122fe:	pop    ebx
  4122ff:	mov    eax,0x960f254f
  412304:	jge    0x4122f8
  412306:	push   eax
  412307:	scas   eax,DWORD PTR es:[edi]
  412308:	mov    ds:0x7a9fc1ca,eax
  41230d:	fstp   TBYTE PTR [ecx-0x5]
  412310:	push   edi
  412311:	mov    esp,0x55baac64
  412316:	leave  
  412317:	jbe    0x4122b3
  412319:	mov    ebx,0xf33d5071
  41231e:	adc    ebp,eax
  412320:	outs   dx,BYTE PTR ds:[esi]
  412321:	jge    0x4123a2
  412323:	sbb    bh,cl
  412325:	jl     0x412395
  412327:	nop
  412328:	add    cl,dl
  41232a:	sub    eax,0x9628dd3e
  41232f:	test   DWORD PTR [ecx-0x1b76095c],0xbbdbb095
  412339:	mov    BYTE PTR [esi+0x3a],ch
  41233c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41233d:	xor    ecx,edi
  41233f:	dec    DWORD PTR [edi+0x78]
  412342:	pusha  
  412343:	outs   dx,BYTE PTR ds:[esi]
  412344:	sub    eax,0xfef26f4
  412349:	lds    sp,DWORD PTR [ecx-0x4d]
  41234d:	pop    ss
  41234e:	adc    bl,BYTE PTR [edx]
  412350:	add    DWORD PTR [edx+0x2fc6e8f],esp
  412356:	(bad)  
  412357:	nop
  412358:	dec    eax
  412359:	add    BYTE PTR [esi+edx*1+0x6de69566],ah
  412360:	sar    bl,1
  412362:	lods   al,BYTE PTR ds:[esi]
  412363:	cmp    al,0x61
  412365:	das    
  412366:	mov    eax,0x7462c7e
  41236b:	jo     0x412347
  41236d:	mov    al,ds:0x69200a35
  412372:	cmc    
  412373:	adc    al,0xb5
  412375:	outs   dx,BYTE PTR ds:[esi]
  412376:	add    BYTE PTR [edx],bl
  412378:	push   esi
  412379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237a:	jbe    0x4123c8
  41237c:	adc    DWORD PTR [eax+0x1cc80e7d],0xffffffb1
  412383:	push   ds
  412384:	sbb    eax,DWORD PTR [esi+0x52]
  412387:	dec    edi
  412388:	lea    esi,[edi+0x4ad3df6d]
  41238e:	dec    esi
  41238f:	int    0xad
  412391:	bound  ebp,QWORD PTR [ebp+0x21544961]
  412397:	or     eax,0x46bfb18b
  41239c:	cs inc ecx
  41239e:	mov    BYTE PTR es:[edx],ch
  4123a1:	shl    DWORD PTR [edx-0x108066a1],0xc
  4123a8:	lods   eax,DWORD PTR ds:[esi]
  4123a9:	pop    ds
  4123aa:	aaa    
  4123ab:	push   edx
  4123ac:	or     al,0x72
  4123ae:	fsub   DWORD PTR [esi-0x2780c739]
  4123b4:	retf   0x21e
  4123b7:	cs fwait
  4123b9:	mov    ss,WORD PTR [ebx-0x1e932817]
  4123bf:	into   
  4123c0:	dec    esi
  4123c1:	lods   al,BYTE PTR ds:[esi]
  4123c2:	push   0xffffff92
  4123c4:	retf   0xccb5
  4123c7:	popf   
  4123c8:	aaa    
  4123c9:	and    eax,0x545b752f
  4123ce:	dec    ecx
  4123cf:	pushf  
  4123d0:	test   eax,0xfb81e067
  4123d5:	cmp    eax,0x67c68fb2
  4123da:	dec    esp
  4123db:	sti    
  4123dc:	jl     0x412366
  4123de:	cmp    al,0x92
  4123e0:	shr    ebp,0x80
  4123e3:	scas   eax,DWORD PTR es:[edi]
  4123e4:	push   0xf416dcee
  4123e9:	cdq    
  4123ea:	xchg   BYTE PTR [ebp+edx*4-0x5b21443],al
  4123f1:	sub    edx,DWORD PTR [ebx-0xbfba5a4]
  4123f7:	or     eax,edi
  4123f9:	cmp    al,0x5e
  4123fb:	pushf  
  4123fc:	(bad)  
  4123fd:	gs pop eax
  4123ff:	or     DWORD PTR [edi-0x65],esp
  412402:	sub    bh,BYTE PTR [edx-0x54d7650d]
  412408:	call   0x616f3f7a
  41240d:	cmp    edi,DWORD PTR [edi+0x488ce905]
  412413:	outs   dx,DWORD PTR ds:[esi]
  412414:	popa   
  412415:	adc    al,0x65
  412417:	pusha  
  412418:	stos   DWORD PTR es:[edi],eax
  412419:	push   esp
  41241a:	test   DWORD PTR [edi+0x44],0x6d5eccf3
  412421:	int    0xe
  412423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412424:	das    
  412425:	inc    edi
  412426:	lock fisttp DWORD PTR [eax-0x7e]
  41242a:	and    DWORD PTR [ebp-0x65],ebp
  41242d:	out    dx,eax
  41242e:	lahf   
  41242f:	mov    esp,0xd0fe2a7b
  412434:	pop    edi
  412435:	adc    dl,ch
  412437:	fnstenv [edx-0x658ca3fe]
  41243d:	(bad)  
  41243e:	jmp    0x4123f2
  412440:	adc    ebp,edi
  412442:	jmp    0xabf693d7
  412447:	fwait
  412448:	ins    DWORD PTR es:[edi],dx
  412449:	and    cl,BYTE PTR [esi]
  41244b:	in     eax,dx
  41244c:	inc    edi
  41244d:	cmp    BYTE PTR [esi+0x75364396],cl
  412453:	xchg   ecx,eax
  412454:	cmp    DWORD PTR [ebx+0x7dbada6e],edx
  41245a:	ss in  eax,0x12
  41245d:	dec    esp
  41245e:	pop    ebx
  41245f:	retf   
  412460:	je     0x4124d9
  412462:	pop    ebp
  412463:	ja     0x412445
  412465:	jb     0x4123ef
  412467:	(bad)  
  412468:	mov    edx,DWORD PTR [edi-0xf500575]
  41246e:	push   ebp
  41246f:	inc    ecx
  412470:	(bad)  
  412472:	daa    
  412473:	es inc esp
  412475:	mov    ebp,0x1cfd737e
  41247a:	je     0x412416
  41247c:	dec    edx
  41247d:	jne    0x412498
  41247f:	rcl    ch,cl
  412481:	scas   eax,DWORD PTR es:[edi]
  412482:	fld    TBYTE PTR [ebp+0x62fcd37a]
  412488:	adc    bl,BYTE PTR [esi]
  41248a:	stos   DWORD PTR es:[edi],eax
  41248b:	loop   0x41248f
  41248d:	gs inc ebp
  41248f:	sar    DWORD PTR [esi+edx*4+0x2f],cl
  412493:	xor    ah,BYTE PTR [edx]
  412495:	or     al,0x71
  412497:	jns    0x41243c
  412499:	mov    bl,0xd6
  41249b:	mov    ds:0xb7f49e5,al
  4124a0:	xor    eax,0x8285a759
  4124a5:	rcr    dl,0x7d
  4124a8:	xchg   edx,eax
  4124a9:	jnp    0x4124cc
  4124ab:	out    0x5c,eax
  4124ad:	push   ss
  4124ae:	jp     0x412501
  4124b0:	pmulhuw mm6,QWORD PTR [esi]
  4124b3:	push   cs
  4124b4:	inc    esi
  4124b5:	xchg   ecx,eax
  4124b6:	fidivr DWORD PTR [esi]
  4124b8:	cli    
  4124b9:	mov    ecx,DWORD PTR [edx+0x380d238f]
  4124bf:	xor    BYTE PTR [edx],al
  4124c1:	sbb    eax,0xa678e99a
  4124c6:	dec    al
  4124c8:	cmp    edx,esp
  4124ca:	dec    ebp
  4124cb:	or     BYTE PTR [edi],bh
  4124cd:	das    
  4124ce:	mov    ds:0x8a7c9a5e,eax
  4124d3:	add    bl,al
  4124d5:	jbe    0x4124e5
  4124d7:	sub    ah,BYTE PTR [ecx]
  4124d9:	outs   dx,DWORD PTR ds:[esi]
  4124da:	mov    esp,0xa72e3444
  4124df:	fst    QWORD PTR [ecx]
  4124e1:	jge    0x4124b8
  4124e3:	push   eax
  4124e4:	add    DWORD PTR [eax+ebx*1-0x55],ebp
  4124e8:	jg     0x4124ad
  4124ea:	sti    
  4124eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ec:	std    
  4124ed:	mov    ds:0xfd084784,al
  4124f2:	fcomip st,st(0)
  4124f4:	mov    edi,?
  4124f6:	ret    0x5e84
  4124f9:	pop    ss
  4124fa:	ja     0x41252d
  4124fc:	push   ebx
  4124fd:	daa    
  4124fe:	mov    dl,0xe2
  412500:	xor    al,0xb4
  412502:	mov    cl,0x1f
  412504:	dec    ecx
  412505:	int3   
  412506:	mov    cl,0x42
  412508:	mov    ch,0x51
  41250a:	cmp    ecx,DWORD PTR [edx]
  41250c:	outs   dx,DWORD PTR ds:[esi]
  41250d:	jbe    0x412555
  41250f:	mov    esp,DWORD PTR [ebp+0x44c13938]
  412515:	mov    BYTE PTR [eax],dl
  412517:	dec    ecx
  412518:	xchg   esi,eax
  412519:	inc    ebp
  41251a:	aas    
  41251b:	rol    esi,0x8f
  41251e:	cmp    BYTE PTR [eax],0x5
  412521:	sub    cl,BYTE PTR [eax+0x42]
  412524:	push   cs
  412525:	push   es
  412526:	inc    esp
  412527:	(bad)  
  412528:	inc    ecx
  412529:	addr16 std 
  41252b:	mov    ah,0x27
  41252d:	sub    eax,DWORD PTR [ecx]
  41252f:	xchg   ecx,eax
  412530:	xor    ecx,0xffffffae
  412533:	and    DWORD PTR [eax-0x4e],esi
  412536:	jge    0x412580
  412538:	or     eax,DWORD PTR ds:[esi-0xf]
  41253c:	mov    edi,0x7d9d72e4
  412541:	ja     0x4124ce
  412543:	pop    eax
  412544:	or     eax,0x4607d483
  412549:	popf   
  41254a:	and    al,0x5f
  41254c:	out    0xe5,al
  41254e:	fs leave 
  412550:	daa    
  412551:	jae    0x412534
  412553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412554:	fisttp QWORD PTR [ebp-0x3f6ac69a]
  41255a:	mov    bh,0x59
  41255c:	enter  0x7818,0xbb
  412560:	stc    
  412561:	add    al,0x9
  412563:	dec    edi
  412564:	inc    esp
  412565:	pop    esi
  412566:	stc    
  412567:	push   ecx
  412568:	pop    edx
  412569:	mov    edi,eax
  41256b:	loopne 0x4125c2
  41256d:	inc    esp
  41256e:	jmp    0xc286d0ae
  412573:	inc    eax
  412574:	fild   QWORD PTR [edx+eiz*8]
  412577:	xchg   BYTE PTR [eax-0x24],bh
  41257a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41257b:	and    BYTE PTR [ebp+ebp*8+0x60193825],al
  412582:	jb     0x4125ea
  412584:	pop    edi
  412585:	test   ch,0xd5
  412588:	out    dx,al
  412589:	int3   
  41258a:	pop    ebx
  41258b:	cmp    ebx,DWORD PTR ss:[edi]
  41258e:	mov    ch,0xdf
  412590:	add    dl,dh
  412592:	xor    ch,BYTE PTR [ecx-0x75]
  412595:	aas    
  412596:	push   edx
  412597:	enterw 0x7058,0xce
  41259c:	mov    ebx,0x5c3e8b46
  4125a1:	mov    ds:0x6f5a9017,eax
  4125a6:	sahf   
  4125a7:	add    bh,BYTE PTR [eax+0x6052469f]
  4125ad:	mov    ds:0x8942b5e7,eax
  4125b2:	xor    al,0x4d
  4125b4:	popf   
  4125b5:	nop
  4125b6:	les    ebp,FWORD PTR [ebx]
  4125b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b9:	das    
  4125ba:	fucomip st,st(1)
  4125bc:	adc    DWORD PTR [ebp+0x77164779],ecx
  4125c2:	sbb    cl,al
  4125c4:	repz xor ebp,ebp
  4125c7:	je     0x41255c
  4125c9:	call   0xdaec:0xd6190622
  4125d0:	nop
  4125d1:	adc    BYTE PTR [ecx+0x43],ah
  4125d4:	scas   eax,DWORD PTR es:[edi]
  4125d5:	sahf   
  4125d6:	(bad)  
  4125d7:	aad    0xeb
  4125d9:	ret    0xfb83
  4125dc:	in     eax,0xb5
  4125de:	add    bl,BYTE PTR [esi+0xb]
  4125e1:	shl    DWORD PTR [ebx+0x25],0xf
  4125e5:	clc    
  4125e6:	lock sub DWORD PTR [ecx+0x26],eax
  4125ea:	shl    cl,1
  4125ec:	jno    0x4d026e7a
  4125f2:	call   FWORD PTR [ebx]
  4125f4:	adc    dl,al
  4125f6:	mov    fs:0x1939c471,al
  4125fc:	xchg   DWORD PTR [edi],eax
  4125fe:	jno    0x41264a
  412600:	(bad)  
  412601:	jmp    0x41265e
  412603:	xchg   ecx,eax
  412604:	or     esi,0xa8f49be3
  41260a:	jg     0x4125ee
  41260c:	add    DWORD PTR [ebx-0x57],esp
  41260f:	xchg   DWORD PTR [ebx+0x6e],ebp
  412612:	cmp    edx,DWORD PTR [ecx]
  412614:	test   eax,0xee2a6f3d
  412619:	enter  0xf757,0xee
  41261d:	mov    cl,0x29
  41261f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412620:	test   al,0x52
  412622:	pop    es
  412623:	iret   
  412624:	shl    DWORD PTR [edx+0x1252878e],1
  41262a:	stos   DWORD PTR es:[edi],eax
  41262b:	sbb    eax,0xeed93dd8
  412630:	loope  0x412665
  412632:	test   bl,0xf6
  412635:	arpl   WORD PTR [edi],ax
  412637:	mov    dl,BYTE PTR ds:0x237099ea
  41263d:	adc    al,BYTE PTR [edx+esi*1-0x40]
  412641:	test   al,0x43
  412643:	sbb    ebx,ebp
  412645:	ficom  DWORD PTR [edi]
  412647:	je     0x41263d
  412649:	clc    
  41264a:	rcl    DWORD PTR [ecx-0x25],cl
  41264d:	daa    
  41264e:	push   ebp
  41264f:	fidivr WORD PTR [ecx-0x75d043c9]
  412655:	stos   DWORD PTR es:[edi],eax
  412656:	daa    
  412657:	sbb    esp,ebx
  412659:	xchg   esi,eax
  41265a:	push   edi
  41265b:	and    ebp,DWORD PTR [ebp+0x7d]
  41265e:	pusha  
  41265f:	aaa    
  412660:	xor    DWORD PTR [ebx+0x679fde3a],edi
  412666:	dec    ebx
  412667:	and    eax,0x81279187
  41266c:	pop    eax
  41266d:	and    esp,eax
  41266f:	fs jb  0x4126a4
  412672:	ds pop ebp
  412674:	mov    edi,0x71161f3b
  412679:	push   ebx
  41267a:	pop    ss
  41267b:	hlt    
  41267c:	jmp    0xac92:0xbcd92f05
  412683:	push   ecx
  412684:	sbb    al,0xf6
  412686:	arpl   WORD PTR [esi+eiz*2+0x19],si
  41268a:	or     dl,dl
  41268c:	int3   
  41268d:	fld    DWORD PTR [esi-0x5a]
  412690:	sub    al,0x3d
  412692:	sbb    esp,eax
  412694:	mov    bl,0xf0
  412696:	out    0x24,eax
  412698:	inc    ebp
  412699:	icebp  
  41269a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41269b:	mov    edx,0xa03f291e
  4126a0:	push   edx
  4126a1:	xchg   ecx,eax
  4126a2:	mov    WORD PTR fs:[eax-0x48b6bebf],ss
  4126a9:	jo     0x412631
  4126ab:	daa    
  4126ac:	adc    al,0x9a
  4126ae:	mov    ch,0x11
  4126b0:	xchg   ebp,eax
  4126b1:	cld    
  4126b2:	shl    BYTE PTR [eax+0x6624e817],1
  4126b8:	jmp    0x4126cb
  4126ba:	(bad)  [edi-0x2c]
  4126bd:	sub    DWORD PTR [ecx],ebp
  4126bf:	push   eax
  4126c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c1:	mov    edi,0xd3bb7705
  4126c6:	idiv   BYTE PTR ds:0x6bf2
  4126cb:	mov    edx,0xf77ee0c0
  4126d0:	mov    bl,0x5a
  4126d2:	mov    cl,0x92
  4126d4:	adc    dl,al
  4126d6:	sar    bl,0x27
  4126d9:	dec    ebx
  4126da:	hlt    
  4126db:	push   es
  4126dc:	sub    eax,0xe7e878b2
  4126e1:	daa    
  4126e2:	xchg   esp,eax
  4126e3:	mul    DWORD PTR [esi+0x6b86c35]
  4126e9:	stos   DWORD PTR es:[edi],eax
  4126ea:	sbb    edx,DWORD PTR [ecx-0x148564b]
  4126f0:	mov    eax,0x7770dec2
  4126f5:	imul   ebx,DWORD PTR [ecx+0x7f],0x40
  4126f9:	scas   eax,DWORD PTR es:[edi]
  4126fa:	daa    
  4126fb:	ret    
  4126fc:	repnz test BYTE PTR [ebx],cl
  4126ff:	sti    
  412700:	fadd   DWORD PTR [eax-0x80]
  412703:	loope  0x41271f
  412705:	mov    dh,0x62
  412707:	mov    ah,0xd6
  412709:	dec    ebx
  41270a:	jg     0x4126ee
  41270c:	out    0x3c,eax
  41270e:	out    dx,eax
  41270f:	std    
  412710:	or     esp,esp
  412712:	fnsave [eax+0x48]
  412715:	nop
  412716:	xchg   ecx,eax
  412717:	(bad)  
  412718:	in     al,0x5f
  41271a:	mov    edi,0xf566a217
  41271f:	inc    ebx
  412720:	fcomp  st(1)
  412722:	pop    edi
  412723:	test   al,0xb3
  412725:	scas   eax,DWORD PTR es:[edi]
  412726:	test   eax,0x5de5d3d3
  41272b:	repnz add si,WORD PTR ds:0x2e7971df
  412733:	adc    DWORD PTR [ecx],edi
  412735:	xchg   esp,eax
  412736:	lea    ebx,[ebx-0x47]
  412739:	or     DWORD PTR [ecx+0xf],ebp
  41273c:	push   esp
  41273d:	sbb    al,0xbb
  41273f:	pop    ebp
  412740:	lds    eax,FWORD PTR [edx]
  412742:	pusha  
  412743:	jns    0x41278e
  412745:	dec    ebp
  412746:	js     0x4127ab
  412748:	rcl    BYTE PTR [ebp-0x59],0xbe
  41274c:	fdivr  DWORD PTR [edi]
  41274e:	push   esi
  41274f:	jmp    0x4127b6
  412751:	xor    ah,BYTE PTR [ebx]
  412753:	inc    esi
  412754:	in     eax,0xd3
  412756:	ret    0x9711
  412759:	ins    DWORD PTR es:[edi],dx
  41275a:	adc    eax,ebp
  41275c:	das    
  41275d:	test   DWORD PTR [ecx+0x40],0x2f4bcc02
  412764:	(bad)  
  412765:	ror    DWORD PTR [edx-0x3886a520],1
  41276b:	(bad)  [edx-0x33]
  41276e:	sub    bh,BYTE PTR [esi+0x5e21627a]
  412774:	dec    ebp
  412775:	dec    ebp
  412776:	(bad)  
  412777:	loope  0x4127a9
  412779:	or     BYTE PTR [edx+0x4a],al
  41277c:	ja     0x4127c8
  41277e:	arpl   WORD PTR ss:[ebx+0x5c980e60],di
  412785:	pop    esp
  412786:	dec    edx
  412787:	mov    ah,0xe
  412789:	test   BYTE PTR [esi-0x14817e20],cl
  41278f:	loopne 0x412790
  412791:	test   al,0x9b
  412793:	pop    eax
  412794:	fucomip st,st(2)
  412796:	or     bl,bl
  412798:	cmp    edx,DWORD PTR [ebp+0x5be6607]
  41279e:	mov    eax,0xc29c1c4f
  4127a3:	call   FWORD PTR [ecx-0x7a]
  4127a6:	out    0xf8,eax
  4127a8:	mov    BYTE PTR [ecx-0x176a2fdf],ah
  4127ae:	sti    
  4127af:	mov    esi,0x7e658eba
  4127b4:	out    dx,al
  4127b5:	mov    al,0x97
  4127b7:	add    BYTE PTR [edx-0x53a92734],dh
  4127bd:	mov    dl,0xf4
  4127bf:	retf   0x629d
  4127c2:	mov    esi,0x8793542b
  4127c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c8:	add    BYTE PTR [esi+0x60dd29a6],bl
  4127ce:	inc    esp
  4127cf:	icebp  
  4127d0:	xchg   ah,bh
  4127d2:	mov    ds:0xafbe42a4,eax
  4127d7:	imul   edx,ebp,0xffffffcc
  4127da:	mov    ecx,0xb68995c1
  4127df:	nop/reserved BYTE PTR [ecx+0x2cdde8a4]
  4127e6:	ficomp WORD PTR [edi+0x7f92095]
  4127ec:	das    
  4127ed:	call   0xf7f5fd6c
  4127f2:	mov    eax,0xb98f65a8
  4127f7:	icebp  
  4127f8:	out    dx,eax
  4127f9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4127fb:	pop    esp
  4127fc:	pop    ecx
  4127fd:	aam    0xf3
  4127ff:	mov    ds,WORD PTR [ebx-0x64]
  412802:	adc    eax,0x10c11d9
  412807:	fcom   st(1)
  412809:	ror    DWORD PTR [ecx+0x69a231f8],0x9c
  412810:	(bad)  
  412811:	mov    ch,0xf8
  412813:	js     0x41287c
  412815:	in     eax,dx
  412816:	jmp    0xc9239774
  41281b:	sub    eax,0x9a419e07
  412820:	out    dx,al
  412821:	inc    ecx
  412822:	jno    0x4127e5
  412824:	mov    DWORD PTR [ebx+ebx*2],edx
  412827:	jns    0x41284d
  412829:	mul    DWORD PTR [edx+0x44]
  41282c:	pop    ebp
  41282d:	pop    edi
  41282e:	or     bl,dh
  412830:	jno    0x41287f
  412832:	test   DWORD PTR [esi-0x662d2f7c],eax
  412838:	popf   
  412839:	aam    0xce
  41283b:	sbb    ch,0x20
  41283e:	and    BYTE PTR [ecx+0x6130b5ef],ah
  412844:	jns    0x41287b
  412846:	xchg   ecx,eax
  412847:	jecxz  0x412803
  412849:	push   ebp
  41284a:	xchg   ebx,eax
  41284b:	mov    eax,0x176068d7
  412850:	pushf  
  412851:	jnp    0x4128cb
  412853:	sbb    esi,DWORD PTR [ebp+edi*1+0x73]
  412857:	push   esi
  412858:	xor    BYTE PTR [edi-0x43],cl
  41285b:	sub    BYTE PTR [esp+esi*4-0x3a],dl
  41285f:	mov    eax,ds:0x7f6e295e
  412864:	dec    eax
  412865:	mov    ebx,eax
  412867:	rcl    DWORD PTR [edi-0x70],0x24
  41286b:	mov    dh,0xb2
  41286d:	lods   eax,DWORD PTR ds:[esi]
  41286e:	adc    al,0xab
  412870:	neg    BYTE PTR [edx-0x1cb88e20]
  412876:	std    
  412877:	test   al,0x40
  412879:	and    cl,dh
  41287b:	or     al,0xbb
  41287d:	sbb    DWORD PTR [esi-0x6a],esp
  412880:	mov    dl,BYTE PTR [ecx]
  412882:	fbld   TBYTE PTR ds:0x5cf38798
  412888:	fsub   DWORD PTR [esi+0x6f]
  41288b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41288c:	fdivr  DWORD PTR [eax-0x34b98c85]
  412892:	test   al,0x3f
  412894:	jmp    0x94cc5646
  412899:	lahf   
  41289a:	cs or  edx,eax
  41289d:	sti    
  41289e:	ins    BYTE PTR es:[edi],dx
  41289f:	jl     0x412893
  4128a1:	add    DWORD PTR [edi-0x7c6cc5c9],ebp
  4128a7:	dec    ebx
  4128a8:	in     eax,0xfd
  4128aa:	jge    0x412889
  4128ac:	push   edi
  4128ad:	or     dh,BYTE PTR [eax-0x65]
  4128b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b1:	adc    al,ch
  4128b3:	or     bh,dl
  4128b5:	inc    edi
  4128b6:	and    edx,DWORD PTR [ecx-0x6948ca70]
  4128bc:	add    eax,0x4c6e4313
  4128c1:	nop
  4128c2:	and    DWORD PTR [edx+0x4a],eax
  4128c5:	rol    al,cl
  4128c7:	xlat   BYTE PTR ds:[ebx]
  4128c8:	mov    eax,ds:0x3ae5acd
  4128cd:	ret    0xd11d
  4128d0:	pop    ebp
  4128d1:	out    0xdb,eax
  4128d3:	xchg   edi,eax
  4128d4:	and    cl,BYTE PTR ds:0x2e8160d
  4128da:	mov    bl,0x4d
  4128dc:	push   edi
  4128dd:	aas    
  4128de:	(bad)  
  4128df:	or     cl,dl
  4128e1:	nop
  4128e2:	nop
  4128e3:	call   0x13afb90c
  4128e8:	xor    al,0xf
  4128ea:	retf   0x396
  4128ed:	fistp  WORD PTR [esi]
  4128ef:	add    al,0x9c
  4128f1:	xor    dh,BYTE PTR [esi]
  4128f3:	mov    bl,0x53
  4128f5:	adc    al,0xb3
  4128f7:	rol    DWORD PTR [ebx],cl
  4128f9:	add    bh,BYTE PTR [ebx+0x45]
  4128fc:	dec    esp
  4128fd:	out    0xa6,eax
  4128ff:	push   eax
  412900:	shl    DWORD PTR [edx-0x5c],1
  412903:	pop    es
  412904:	call   0x29db:0xe770efb4
  41290b:	stos   DWORD PTR es:[edi],eax
  41290c:	pop    ebp
  41290d:	pop    eax
  41290e:	push   ss
  41290f:	test   al,0x12
  412911:	into   
  412912:	jecxz  0x412948
  412914:	jmp    0x8c40:0x47f1cb4b
  41291b:	xchg   ecx,eax
  41291c:	push   ecx
  41291d:	dec    eax
  41291e:	mov    WORD PTR [edx],fs
  412920:	mov    cl,0xf6
  412922:	in     al,0x35
  412924:	pop    ds
  412925:	stos   DWORD PTR es:[edi],eax
  412926:	or     eax,0x805ca124
  41292b:	fwait
  41292c:	ja     0x41298d
  41292e:	mov    ds:0xc310219d,eax
  412933:	pop    esi
  412934:	cmp    DWORD PTR [edi-0x32],0x62
  412938:	fsub   DWORD PTR [edx+0x3887bcf3]
  41293e:	mov    edi,edi
  412940:	adc    esi,DWORD PTR [edx+0x489dc470]
  412946:	jae    0x41291f
  412948:	add    al,0xa6
  41294a:	pushf  
  41294b:	(bad)  
  41294c:	push   ss
  41294d:	sti    
  41294e:	mov    ah,0x93
  412950:	into   
  412951:	pushf  
  412952:	and    eax,0xf0231a4f
  412957:	test   BYTE PTR [eax-0x4b],0x24
  41295b:	pop    esp
  41295c:	fild   DWORD PTR [ebp+0x2d3ffbb8]
  412962:	push   ds
  412963:	adc    DWORD PTR [eax],0xd99ee9c1
  412969:	loope  0x412924
  41296b:	mov    ds:0x6ddbf424,eax
  412970:	xchg   edx,eax
  412971:	push   es
  412972:	jp     0x41291e
  412974:	mov    ebx,0xa79d1638
  412979:	adc    eax,0x46757c84
  41297e:	mov    esi,0xb26bcbf5
  412983:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412985:	adc    eax,0x40f6126c
  41298a:	test   DWORD PTR [edx-0x1],0xcd6ea706
  412991:	aas    
  412992:	repz sbb DWORD PTR [edi+0x3e],ebx
  412996:	push   ss
  412997:	(bad)  
  412998:	jecxz  0x412940
  41299a:	push   ds
  41299b:	sub    BYTE PTR [edx],bl
  41299d:	xor    eax,0xd59b732a
  4129a2:	in     al,0xcb
  4129a4:	jo     0x412983
  4129a6:	nop
  4129a7:	and    eax,0x10270c43
  4129ac:	push   cs
  4129ad:	mov    ?,ebx
  4129af:	ret    
  4129b0:	jo     0x41293e
  4129b2:	cwde   
  4129b3:	push   0x11bc18e4
  4129b8:	and    al,0xad
  4129ba:	xlat   BYTE PTR ds:[ebx]
  4129bb:	or     al,0x3c
  4129bd:	and    ah,0x14
  4129c0:	int    0xeb
  4129c2:	test   DWORD PTR [eax-0x18249ce8],esi
  4129c8:	enter  0x75b5,0x38
  4129cc:	jbe    0x41298c
  4129ce:	mov    al,ds:0x749c7b38
  4129d3:	shl    BYTE PTR [eax+0x4e],1
  4129d6:	sbb    eax,0x726c1bc2
  4129db:	jmp    0xa08d:0xcc959804
  4129e2:	les    eax,FWORD PTR [ebx+esi*8-0x56]
  4129e6:	lods   eax,DWORD PTR ds:[esi]
  4129e7:	mov    bh,0x2d
  4129e9:	lods   al,BYTE PTR ds:[esi]
  4129ea:	das    
  4129eb:	(bad)  
  4129ec:	pop    edx
  4129ed:	push   ebx
  4129ee:	iret   
  4129ef:	or     eax,0x625cb2f3
  4129f4:	pushf  
  4129f5:	lods   eax,DWORD PTR ds:[esi]
  4129f6:	rol    BYTE PTR [edx],0xa0
  4129f9:	pop    edx
  4129fa:	repnz cmc 
  4129fc:	xchg   edi,eax
  4129fd:	das    
  4129fe:	xchg   BYTE PTR [ecx-0x5f],dh
  412a01:	mov    dl,0x1
  412a03:	aad    0x47
  412a05:	popa   
  412a06:	sub    eax,0x1896b1e8
  412a0b:	push   eax
  412a0c:	mov    al,ds:0xbd835a19
  412a11:	xor    dh,BYTE PTR [edi+0x7e2d15b0]
  412a17:	sbb    DWORD PTR [esi],0x69
  412a1a:	push   es
  412a1b:	(bad)  
  412a1d:	out    dx,al
  412a1e:	stc    
  412a1f:	sub    eax,0x6997e200
  412a24:	or     al,0xe3
  412a26:	aam    0xa7
  412a28:	pushf  
  412a29:	adc    edi,eax
  412a2b:	rcr    DWORD PTR [ebx+0x25dc535e],cl
  412a31:	(bad)  
  412a32:	sbb    bh,ch
  412a34:	pushf  
  412a35:	rol    BYTE PTR [edx],0x8
  412a38:	jecxz  0x412aae
  412a3a:	mov    eax,ds:0xaf5276fc
  412a3f:	imul   eax,DWORD PTR [eax-0x789b1550],0xd577d970
  412a49:	and    eax,ecx
  412a4b:	inc    esi
  412a4c:	inc    ebx
  412a4d:	popf   
  412a4e:	pop    es
  412a4f:	jnp    0x412a18
  412a51:	xor    al,BYTE PTR cs:[ebp-0x5e7b69f2]
  412a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a59:	pop    edx
  412a5a:	xchg   edi,eax
  412a5b:	imul   edi,DWORD PTR [ecx],0x867a580
  412a61:	sbb    BYTE PTR [ebx],0x10
  412a64:	dec    ebp
  412a65:	ins    BYTE PTR es:[edi],dx
  412a66:	dec    edi
  412a67:	(bad)  
  412a68:	hlt    
  412a69:	int    0x47
  412a6b:	and    BYTE PTR [edi+0x361165f6],0x19
  412a72:	push   cs
  412a73:	dec    edx
  412a74:	jb     0x412a15
  412a76:	(bad)  
  412a78:	(bad)  
  412a79:	outs   dx,BYTE PTR ds:[esi]
  412a7a:	mov    ds:0x61018033,eax
  412a7f:	add    eax,0xc4776480
  412a84:	rcl    esi,cl
  412a86:	push   esi
  412a87:	push   edx
  412a88:	and    ebp,DWORD PTR [ecx]
  412a8a:	ret    0x9ae8
  412a8d:	js     0x412a16
  412a8f:	out    dx,al
  412a90:	mulps  xmm7,xmm4
  412a93:	inc    edi
  412a94:	mov    cl,0xeb
  412a96:	inc    edx
  412a97:	(bad)  
  412a98:	push   ebp
  412a99:	out    dx,eax
  412a9a:	das    
  412a9b:	int    0x75
  412a9d:	dec    ecx
  412a9e:	sbb    edx,DWORD PTR [edi]
  412aa0:	int    0x88
  412aa2:	mov    esp,0xa49207f3
  412aa7:	pop    ebx
  412aa8:	js     0x412a30
  412aaa:	sbb    cl,BYTE PTR [esi]
  412aac:	ret    0x911f
  412aaf:	test   eax,0xd712c4ef
  412ab4:	jno    0x412a62
  412ab6:	jmp    0xa4695018
  412abb:	sub    al,bh
  412abd:	or     esi,esp
  412abf:	leave  
  412ac0:	loopne 0x412b08
  412ac2:	jne    0x412b00
  412ac4:	je     0x412a9c
  412ac6:	cmp    al,0xe0
  412ac8:	rcr    DWORD PTR [ecx*1+0x687b4c2a],0xf9
  412ad0:	lea    edi,[ecx-0x171eff8]
  412ad6:	pop    ebp
  412ad7:	rol    BYTE PTR [ebp+0x1d],0xc6
  412adb:	jmp    0x412af2
  412add:	xchg   edi,eax
  412ade:	xchg   ebx,eax
  412adf:	xchg   DWORD PTR [edx+0x43b82648],eax
  412ae5:	adc    eax,0x41ae1507
  412aea:	or     BYTE PTR [edx+0x26],0x2c
  412aee:	cli    
  412aef:	adc    ebx,DWORD PTR [edi-0x1166a7fd]
  412af5:	xchg   esp,eax
  412af6:	xor    eax,0x5078f202
  412afb:	out    0xb0,al
  412afd:	sub    DWORD PTR [eax+0x3ae836db],esi
  412b03:	shl    DWORD PTR [edi+0x5c6c59f3],cl
  412b09:	inc    ecx
  412b0a:	dec    ebp
  412b0b:	sub    edi,DWORD PTR [ebp-0x2f24ba2b]
  412b11:	sub    al,0xa1
  412b13:	in     al,dx
  412b14:	(bad)  
  412b15:	mov    bl,0x88
  412b17:	jbe    0x412b72
  412b19:	push   edx
  412b1a:	cwde   
  412b1b:	mov    ds:0x24d3f1ea,eax
  412b20:	or     BYTE PTR [ecx-0x5b250c3b],bl
  412b26:	jbe    0x412aeb
  412b28:	pop    edi
  412b29:	mov    ds:0x69358e4e,eax
  412b2e:	addr16 push cs
  412b30:	lods   eax,DWORD PTR ds:[esi]
  412b31:	mov    WORD PTR [ecx],ds
  412b33:	iret   
  412b34:	in     eax,0xcf
  412b36:	lds    ecx,FWORD PTR ds:0x7420b0b6
  412b3c:	stos   BYTE PTR es:[edi],al
  412b3d:	sub    dh,BYTE PTR [eax+eax*1-0x239cc7c3]
  412b44:	gs mov ch,0xba
  412b47:	xor    cl,BYTE PTR [ecx-0x18]
  412b4a:	mov    edx,?
  412b4c:	dec    ebp
  412b4d:	adc    ch,ch
  412b4f:	not    DWORD PTR [ebx+edx*4]
  412b52:	outs   dx,DWORD PTR ds:[esi]
  412b53:	sahf   
  412b54:	sbb    DWORD PTR [edx-0x7814eafc],ebp
  412b5a:	mov    al,0xeb
  412b5c:	enter  0x93d7,0xfe
  412b60:	xchg   edi,eax
  412b61:	inc    ebp
  412b62:	mov    bl,0xc9
  412b64:	(bad)  
  412b65:	out    dx,al
  412b66:	sbb    al,0xde
  412b68:	mov    ecx,0xac5f3cb2
  412b6d:	fnop   
  412b6f:	sbb    eax,0xb7a947e0
  412b74:	sub    eax,0xf28422e2
  412b79:	inc    ebx
  412b7a:	push   ss
  412b7b:	sbb    esi,DWORD PTR [ebp-0x75a08490]
  412b81:	xor    al,0x36
  412b83:	icebp  
  412b84:	out    0x85,eax
  412b86:	xchg   ebx,eax
  412b87:	mov    esi,0x11ba6758
  412b8c:	arpl   WORD PTR [ebx],dx
  412b8e:	ss dec ebp
  412b90:	cmp    al,0x8
  412b92:	mov    al,ds:0x7019cc5f
  412b97:	loope  0x412b7a
  412b99:	dec    ebx
  412b9a:	iret   
  412b9b:	sub    bh,BYTE PTR [ebx-0x10]
  412b9e:	push   esp
  412b9f:	shl    DWORD PTR [eax],cl
  412ba1:	inc    ebx
  412ba2:	(bad)  
  412ba3:	fsubr  st,st(2)
  412ba5:	mov    esp,DWORD PTR [ecx+eax*1-0x3d]
  412ba9:	add    ebp,ecx
  412bab:	js     0x412b56
  412bad:	xor    dl,dl
  412baf:	xchg   esp,eax
  412bb0:	mov    gs,WORD PTR [eax-0xd1fcc0b]
  412bb6:	xor    esp,DWORD PTR [ebp-0x32]
  412bb9:	push   esi
  412bba:	or     al,0xd0
  412bbc:	aam    0xab
  412bbe:	ret    
  412bbf:	push   0x591317ce
  412bc4:	les    edi,FWORD PTR [eax+0xba362da]
  412bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bcb:	fcmovnb st,st(6)
  412bcd:	repnz popf 
  412bcf:	dec    esp
  412bd0:	jge    0x412b79
  412bd2:	mov    BYTE PTR [edx+edi*4-0x77],0xc1
  412bd7:	in     eax,dx
  412bd8:	test   al,0x1a
  412bda:	add    ebx,DWORD PTR [ecx-0x74]
  412bdd:	(bad)  
  412bde:	push   ecx
  412bdf:	or     ebx,DWORD PTR ds:0x8d4e5988
  412be5:	bound  edx,QWORD PTR [ebp-0x49a2a09a]
  412beb:	mov    cl,ch
  412bed:	mov    ds:0xca167a36,al
  412bf2:	sbb    BYTE PTR [ebp-0x2d1b6b4a],ch
  412bf8:	popa   
  412bf9:	inc    ebx
  412bfa:	ins    DWORD PTR es:[edi],dx
  412bfb:	dec    ecx
  412bfc:	popf   
  412bfd:	cmp    DWORD PTR [ecx],0xabdbe16
  412c03:	retf   0x5814
  412c06:	call   0xf13c001
  412c0b:	test   eax,0x84c38858
  412c10:	repz mov dh,0xd7
  412c13:	cld    
  412c14:	call   0xf26c:0xbcc39a70
  412c1b:	jo     0x412c89
  412c1d:	push   edi
  412c1e:	lods   eax,DWORD PTR ds:[esi]
  412c1f:	pop    ebp
  412c20:	dec    esi
  412c21:	adc    DWORD PTR [esi-0x1188c92b],esi
  412c27:	or     ah,BYTE PTR [ebx]
  412c29:	sub    eax,0xb15c5186
  412c2e:	sub    BYTE PTR [esi+0x69078331],0xc1
  412c35:	aaa    
  412c36:	sub    al,0x8a
  412c38:	xchg   ebp,eax
  412c39:	sub    BYTE PTR [ebx+esi*2],bl
  412c3c:	push   edx
  412c3d:	inc    esi
  412c3e:	retf   0x14e8
  412c41:	daa    
  412c42:	adc    eax,0x7652c316
  412c47:	jb     0x412c04
  412c49:	leave  
  412c4a:	or     BYTE PTR [ecx+0x3300231a],ch
  412c50:	std    
  412c51:	dec    ebx
  412c52:	retf   
  412c53:	dec    ebp
  412c54:	aaa    
  412c55:	stc    
  412c56:	aam    0x98
  412c58:	scas   eax,DWORD PTR es:[edi]
  412c59:	loopne 0x412cd8
  412c5b:	push   esi
  412c5c:	jmp    0x412cc3
  412c5e:	lods   al,BYTE PTR ds:[esi]
  412c5f:	fidivr WORD PTR [eax]
  412c61:	retf   
  412c62:	inc    edx
  412c63:	add    DWORD PTR [ecx],esi
  412c65:	add    al,0x80
  412c67:	je     0x412cbe
  412c69:	xor    DWORD PTR [esi-0x56739041],ebx
  412c6f:	fdivr  DWORD PTR [edx+ecx*4-0x6f6e929]
  412c76:	aas    
  412c77:	mov    bh,0xa4
  412c79:	inc    edx
  412c7a:	cmc    
  412c7b:	push   ds
  412c7c:	das    
  412c7d:	jnp    0x412c58
  412c7f:	adc    esp,eax
  412c81:	xlat   BYTE PTR ds:[ebx]
  412c82:	or     eax,0x6e98d549
  412c87:	or     esp,DWORD PTR [esi+edi*2]
  412c8a:	sub    al,0x66
  412c8c:	jb     0x412c29
  412c8e:	std    
  412c8f:	jp     0x412c19
  412c91:	push   edi
  412c92:	jg     0x412cea
  412c94:	push   DWORD PTR [edi-0xada28d2]
  412c9a:	sub    DWORD PTR [edx],eax
  412c9c:	mov    ah,0x14
  412c9e:	mov    cl,0xcb
  412ca0:	cwde   
  412ca1:	sbb    eax,0x329ac386
  412ca6:	add    al,0x1c
  412ca8:	fs inc esi
  412caa:	dec    ebp
  412cab:	pop    ds
  412cac:	call   0x506e6d5e
  412cb1:	mov    ch,0xac
  412cb3:	mov    edx,0xe31f16c4
  412cb8:	and    eax,0xcfe31908
  412cbd:	pushf  
  412cbe:	pop    ds
  412cbf:	pop    esp
  412cc0:	xchg   edi,eax
  412cc1:	sub    eax,0x9f459794
  412cc6:	push   cs
  412cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc8:	ret    
  412cc9:	dec    ebp
  412cca:	inc    BYTE PTR [eax-0x3238c70b]
  412cd0:	xchg   DWORD PTR [eax-0x72a1bdd5],ecx
  412cd6:	push   ecx
  412cd7:	pusha  
  412cd8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  412cda:	and    DWORD PTR [ebx],ebp
  412cdc:	shl    bh,0x2c
  412cdf:	ja     0x412cf0
  412ce1:	or     edx,ecx
  412ce3:	pop    ebp
  412ce4:	mov    al,ds:0x1ea1b77e
  412ce9:	sbb    eax,0xad442ec1
  412cee:	push   edx
  412cef:	pop    edi
  412cf0:	mov    ds:0xb29b1b0e,al
  412cf5:	cs dec eax
  412cf8:	getsec 
  412cfa:	mov    esi,0xdb9cb54c
  412cff:	push   edx
  412d00:	lods   al,BYTE PTR ds:[esi]
  412d01:	pusha  
  412d02:	(bad)  
  412d03:	nop
  412d04:	xchg   esp,eax
  412d05:	or     ebp,DWORD PTR [ebx]
  412d07:	xchg   edi,eax
  412d08:	daa    
  412d09:	xlat   BYTE PTR ds:[ebx]
  412d0a:	add    eax,0xac38946b
  412d0f:	outs   dx,DWORD PTR ss:[esi]
  412d11:	and    al,0x66
  412d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d14:	cdq    
  412d15:	push   es
  412d16:	mov    ah,0x6c
  412d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d19:	mov    eax,DWORD PTR [ebp-0x69e42db1]
  412d1f:	ins    BYTE PTR es:[edi],dx
  412d20:	lods   eax,DWORD PTR ds:[esi]
  412d21:	nop
  412d22:	sbb    BYTE PTR [ecx-0x2a],al
  412d25:	lahf   
  412d26:	xor    eax,DWORD PTR [ecx+0x19]
  412d29:	cli    
  412d2a:	outs   dx,BYTE PTR ds:[esi]
  412d2b:	out    0xe0,al
  412d2d:	je     0x412cd0
  412d2f:	inc    ebp
  412d30:	xchg   edi,eax
  412d31:	inc    esp
  412d32:	jmp    0x412cdc
  412d34:	enter  0xc8a7,0x2a
  412d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d39:	lahf   
  412d3a:	mov    edi,?
  412d3c:	stos   DWORD PTR es:[edi],eax
  412d3d:	push   edx
  412d3e:	pop    es
  412d3f:	push   esp
  412d40:	jo     0x412d53
  412d42:	dec    eax
  412d43:	sub    eax,0x4b80f349
  412d48:	out    dx,eax
  412d49:	shl    BYTE PTR ds:0x39ac801f,cl
  412d4f:	xchg   edx,eax
  412d50:	mov    esp,0x50778e40
  412d55:	add    BYTE PTR [edi-0x10b5a4d5],cl
  412d5b:	push   edx
  412d5c:	sub    DWORD PTR [esi-0x6a],edx
  412d5f:	cmp    cl,BYTE PTR [esi+0xb5ddb32]
  412d65:	ins    DWORD PTR es:[edi],dx
  412d66:	mov    edx,DWORD PTR [edx+0x50]
  412d69:	loopne 0x412de4
  412d6b:	inc    ebx
  412d6c:	add    eax,0x662012b4
  412d71:	jbe    0x412d42
  412d73:	xor    DWORD PTR [eax],eax
  412d75:	mov    bh,0xd8
  412d77:	xor    eax,0x559d1a4c
  412d7c:	in     eax,dx
  412d7d:	push   0xffffffab
  412d7f:	out    0x5e,al
  412d81:	jbe    0x412d64
  412d83:	inc    edi
  412d84:	and    ah,BYTE PTR [edx-0x5b]
  412d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d88:	dec    ebx
  412d89:	xor    eax,0x4f8e8d57
  412d8e:	in     eax,0xb6
  412d90:	mov    ds:0xbb6ee3b2,al
  412d95:	xor    al,0x94
  412d97:	stos   DWORD PTR es:[edi],eax
  412d98:	xchg   ebx,eax
  412d99:	mov    esi,0x1a6b482f
  412d9e:	popf   
  412d9f:	inc    edx
  412da0:	loopne 0x412dfb
  412da2:	push   ecx
  412da3:	ret    0xa01c
  412da6:	push   0x40a35b
  412dab:	cld    
  412dac:	xchg   BYTE PTR [ecx-0x45],al
  412daf:	mov    eax,0x894a4655
  412db4:	sti    
  412db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db6:	mov    WORD PTR ds:0xee29f1ba,ds
  412dbc:	inc    ebx
  412dbd:	push   ebx
  412dbe:	pop    eax
  412dbf:	(bad)  
  412dc0:	dec    esi
  412dc1:	inc    ecx
  412dc2:	adc    BYTE PTR [esi-0x4b94d68e],0x9
  412dc9:	sbb    BYTE PTR [eax+0x31c4bf0e],0x69
  412dd0:	loopne 0x412e2c
  412dd2:	lea    ebp,[ebx]
  412dd4:	push   0x3b
  412dd6:	aaa    
  412dd7:	fmul   QWORD PTR [esi]
  412dd9:	jle    0x412d88
  412ddb:	(bad)  
  412ddd:	or     eax,0xc57f201e
  412de2:	jge    0x412e4c
  412de4:	loope  0x412e26
  412de6:	aam    0xdc
  412de8:	int3   
  412de9:	mov    ebx,0x48b78c06
  412dee:	popf   
  412def:	and    bh,BYTE PTR [edx+edx*4-0x36]
  412df3:	ror    DWORD PTR [edi+0x13698008],0x53
  412dfa:	and    eax,0x6b930ba1
  412dff:	out    0x45,eax
  412e01:	(bad)
  412e07:	sbb    BYTE PTR [edi-0x2108d15],bh
  412e0d:	inc    ecx
  412e0e:	xchg   ebx,eax
  412e0f:	stos   DWORD PTR es:[edi],eax
  412e10:	pop    es
  412e11:	xchg   ecx,eax
  412e12:	and    bl,dl
  412e14:	sbb    ebp,esp
  412e16:	or     BYTE PTR [edx],dl
  412e18:	nop
  412e19:	mov    ds,WORD PTR [ebp+0x5b5c6119]
  412e1f:	lods   al,BYTE PTR ds:[esi]
  412e20:	hlt    
  412e21:	bound  ebp,QWORD PTR [ecx]
  412e23:	retf   
  412e24:	repz mov edi,0xabd0f6c6
  412e2a:	pop    esp
  412e2b:	xor    DWORD PTR [ebx+0x6872972],esi
  412e31:	mov    DWORD PTR [ecx],esi
  412e33:	in     al,0x22
  412e35:	mov    ebp,fs
  412e37:	xlat   BYTE PTR fs:[ebx]
  412e39:	push   esp
  412e3a:	bt     DWORD PTR es:[edi-0x72],ebx
  412e3f:	iret   
  412e40:	mov    bh,0x88
  412e42:	(bad)  
  412e43:	adc    eax,0xadd69c46
  412e48:	xor    eax,0x5b1ed0b0
  412e4d:	(bad)  
  412e4e:	(bad)  
  412e4f:	pop    ebx
  412e50:	adc    ebx,DWORD PTR [eax]
  412e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e53:	push   eax
  412e55:	cld    
  412e56:	out    dx,al
  412e57:	push   eax
  412e58:	mov    al,ds:0x2ef9932c
  412e5d:	dec    esp
  412e5e:	dec    ebp
  412e5f:	xor    eax,0x1bf8ca50
  412e64:	jg     0x412dfd
  412e66:	pop    edi
  412e67:	mov    ebx,0x485fcafb
  412e6c:	push   ecx
  412e6d:	ds xor ecx,ecx
  412e70:	cmp    ecx,DWORD PTR [edx]
  412e72:	outs   dx,DWORD PTR ds:[esi]
  412e73:	jne    0x412e60
  412e75:	mov    bh,0xfe
  412e77:	aaa    
  412e78:	sahf   
  412e79:	xchg   BYTE PTR [ecx+0x66e804f2],bh
  412e7f:	sub    DWORD PTR [edi-0x6d9fab19],edx
  412e85:	push   edi
  412e86:	out    0xaa,al
  412e88:	enter  0x2999,0x98
  412e8c:	fidiv  DWORD PTR [esi+0x7e]
  412e8f:	popa   
  412e90:	push   ebp
  412e91:	jge    0x412ea1
  412e93:	popf   
  412e94:	shl    esp,cl
  412e96:	adc    ecx,DWORD PTR ds:0x54c1e91c
  412e9c:	xchg   esi,eax
  412e9d:	jecxz  0x412e28
  412e9f:	dec    ebp
  412ea0:	rcl    ebx,0xaa
  412ea3:	(bad)  
  412ea4:	arpl   WORD PTR [ebp+0x737c47d3],bp
  412eaa:	sbb    BYTE PTR [edi+0x2d],ah
  412ead:	fdiv   st(3),st
  412eaf:	fsub   QWORD PTR [ecx+0x1a34171c]
  412eb5:	push   0xc21df3c7
  412eba:	les    ebx,FWORD PTR [ecx-0x21]
  412ebd:	pop    edx
  412ebe:	mov    eax,ds:0x7ec5650
  412ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec4:	popa   
  412ec5:	jle    0x412f2e
  412ec7:	push   0xffffffc7
  412ec9:	sbb    bl,BYTE PTR [edi-0x3e]
  412ecc:	xchg   edx,eax
  412ecd:	addr16 mov bh,0x75
  412ed0:	inc    ebx
  412ed1:	div    ah
  412ed3:	jmp    0x412f17
  412ed5:	lea    edi,[ecx-0x7b]
  412ed8:	std    
  412ed9:	rcr    ebp,1
  412edb:	out    dx,eax
  412edc:	pop    ebp
  412edd:	out    0x71,eax
  412edf:	mov    eax,0x171b7e58
  412ee4:	push   ebx
  412ee5:	adc    DWORD PTR [edi-0x16ca7784],ebp
  412eeb:	std    
  412eec:	sub    BYTE PTR [ecx+0x45],bl
  412eef:	push   0x46e29c06
  412ef4:	pushf  
  412ef5:	xchg   esi,eax
  412ef6:	int    0x17
  412ef8:	sub    DWORD PTR [eax+0x969a026],eax
  412efe:	sbb    DWORD PTR [ebx-0x23855479],0x2b63ccdc
  412f08:	sti    
  412f09:	adc    al,0x49
  412f0b:	lahf   
  412f0c:	xor    cl,ah
  412f0e:	mov    DWORD PTR [ebx+ebp*8+0x57],esi
  412f12:	fadd   st,st(0)
  412f14:	pushw  ds
  412f16:	(bad)  
  412f17:	jmp    FWORD PTR [ecx+edx*2+0x6f863811]
  412f1e:	cmp    dh,cl
  412f20:	repnz xlat BYTE PTR ds:[ebx]
  412f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f23:	mov    ch,0xe8
  412f25:	inc    esi
  412f26:	dec    edx
  412f27:	mov    bh,0x9e
  412f29:	pop    ss
  412f2a:	call   0xb01c6393
  412f2f:	lods   eax,DWORD PTR ds:[esi]
  412f30:	jne    0x412ee8
  412f32:	imul   esi,esp,0xb2d64cbe
  412f38:	std    
  412f39:	sbb    al,0x2a
  412f3b:	mov    ah,0xb2
  412f3d:	xor    dl,al
  412f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f40:	in     al,dx
  412f41:	push   ss
  412f42:	data16 sub al,0x17
  412f45:	lock das 
  412f47:	iret   
  412f48:	and    al,0x74
  412f4a:	ins    DWORD PTR es:[edi],dx
  412f4b:	je     0x412f32
  412f4d:	cwde   
  412f4e:	and    eax,0xa25cc97f
  412f53:	outs   dx,DWORD PTR ds:[esi]
  412f54:	nop
  412f55:	jl     0x412f76
  412f57:	(bad)  
  412f58:	xchg   ebx,eax
  412f59:	fidiv  DWORD PTR [eax]
  412f5b:	push   ebx
  412f5c:	jmp    0x22d4:0x3ab1d4ec
  412f63:	cmp    BYTE PTR [ecx],0x6e
  412f66:	jp     0x412eed
  412f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f6a:	dec    edx
  412f6b:	pushfw 
  412f6d:	jle    0x412fa0
  412f6f:	je     0x412f5f
  412f71:	push   ecx
  412f72:	pop    ds
  412f73:	out    0xd5,eax
  412f75:	call   0xfc85:0xdd7780ff
  412f7c:	jbe    0x412f4c
  412f7e:	shl    DWORD PTR ds:0xf0d1eae6,0xce
  412f85:	sub    eax,0x82501cec
  412f8a:	retf   
  412f8b:	aam    0x1c
  412f8d:	add    al,0x57
  412f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f91:	mov    ecx,0x600a594e
  412f96:	pop    ss
  412f97:	imul   edx,DWORD PTR [ebp+edi*2+0x4a],0xc
  412f9c:	mov    dl,0x1b
  412f9e:	dec    edx
  412f9f:	add    DWORD PTR [esi+0x310dec46],edi
  412fa5:	jmp    0xb27c2878
  412faa:	in     al,0x73
  412fac:	shr    ah,1
  412fae:	cmp    ebx,edx
  412fb0:	dec    ebx
  412fb1:	pop    ss
  412fb2:	dec    esp
  412fb3:	(bad)  
  412fb4:	xchg   edi,eax
  412fb5:	adc    BYTE PTR [edx+0x74],cl
  412fb8:	xchg   esp,eax
  412fb9:	xor    BYTE PTR [ebx+0x65],dh
  412fbc:	mov    ebp,0x9fdd7a54
  412fc1:	test   BYTE PTR [ebp-0x64],bh
  412fc4:	mov    al,0x7a
  412fc6:	xchg   esi,eax
  412fc7:	push   ss
  412fc8:	jbe    0x412f71
  412fca:	scas   al,BYTE PTR es:[edi]
  412fcb:	call   0x9f89:0x8e7d5c83
  412fd2:	sub    BYTE PTR [esi+ebx*1+0x36],cl
  412fd6:	and    esi,eax
  412fd8:	dec    BYTE PTR [edx+0x3a]
  412fdb:	mov    dl,al
  412fdd:	push   ss
  412fde:	call   0x7fe84dba
  412fe3:	enter  0x70d4,0xe7
  412fe7:	dec    esp
  412fe8:	stos   BYTE PTR es:[edi],al
  412fe9:	sbb    BYTE PTR ss:[eax+0x35],cl
  412fed:	xor    esi,esp
  412fef:	xchg   ecx,eax
  412ff0:	mov    eax,0x6e99c293
  412ff5:	imul   ebx,DWORD PTR [eax],0xffffff9f
  412ff8:	pop    esi
  412ff9:	xchg   ecx,eax
  412ffa:	daa    
  412ffb:	sub    dl,BYTE PTR [edi+esi*2]
  412ffe:	fstp   TBYTE PTR [ebx]
  413000:	inc    esi
  413001:	xchg   edi,eax
  413002:	push   ds
  413003:	sbb    al,0xd3
  413005:	sub    edx,DWORD PTR [ebp-0x4ed5fdcb]
  41300b:	ror    DWORD PTR [ecx],cl
  41300d:	jle    0x413004
  41300f:	cld    
  413010:	popf   
  413011:	mov    eax,0xecaf6acd
  413016:	clc    
  413017:	push   ss
  413018:	sub    BYTE PTR ds:0x617eae26,dh
  41301e:	pop    es
  41301f:	mov    bl,0x84
  413021:	es div ah
  413024:	dec    ebp
  413025:	neg    dl
  413027:	aaa    
  413028:	in     al,0xaa
  41302a:	mov    esi,eax
  41302c:	mov    bh,0x8a
  41302e:	inc    eax
  41302f:	jno    0x413064
  413031:	mov    bh,0xce
  413033:	sbb    eax,0x11444329
  413038:	icebp  
  413039:	mov    esi,0x5a67a89f
  41303e:	xchg   ebx,eax
  41303f:	pop    esp
  413040:	push   edi
  413041:	adc    DWORD PTR [ebp+0x3bb11520],esp
  413047:	push   ecx
  413048:	add    bh,BYTE PTR [ebp+eiz*4+0x18d80ab8]
  41304f:	mov    WORD PTR [eax+0x183462c8],?
  413055:	les    edi,FWORD PTR [edx+0x42]
  413058:	xchg   BYTE PTR [edx+edx*2-0x44],ch
  41305c:	and    DWORD PTR [ecx],edi
  41305e:	mov    ch,0x7d
  413060:	ja     0x412ff7
  413062:	clc    
  413063:	cld    
  413064:	es es jg 0x4130e6
  413068:	pusha  
  413069:	in     eax,0xe1
  41306b:	adc    eax,0x6768947e
  413070:	daa    
  413071:	repz pop es
  413073:	push   es
  413074:	jnp    0x41302e
  413076:	push   eax
  413077:	daa    
  413078:	rcr    BYTE PTR [ebp+0x56],1
  41307b:	fld    DWORD PTR gs:[esi+0x29]
  41307f:	(bad)  
  413080:	imul   esi,DWORD PTR [eax+edx*4+0x9],0xffffffb3
  413085:	outs   dx,DWORD PTR ds:[esi]
  413086:	add    ah,bl
  413088:	adc    eax,0x4073499d
  41308d:	inc    esp
  41308e:	cmp    eax,0xb7cf578c
  413093:	nop
  413094:	pop    ss
  413095:	dec    esi
  413096:	aaa    
  413097:	mov    eax,0x91f10a93
  41309c:	retf   
  41309d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41309e:	mov    ebx,DWORD PTR [edi-0x80]
  4130a1:	xlat   BYTE PTR ds:[ebx]
  4130a2:	inc    eax
  4130a3:	xor    DWORD PTR [edi-0x756851c1],edx
  4130a9:	les    ecx,FWORD PTR [ecx-0x68]
  4130ac:	inc    ecx
  4130ad:	pop    ss
  4130ae:	std    
  4130af:	in     al,0xd8
  4130b1:	(bad)  
  4130b3:	mov    ebx,0x243e7cb5
  4130b8:	adc    esp,esp
  4130ba:	std    
  4130bb:	add    BYTE PTR [ebp-0x44],ah
  4130be:	push   es
  4130bf:	imul   ecx,DWORD PTR [ecx-0x9],0xfffffff8
  4130c3:	lea    eax,[edx-0x3c1701e0]
  4130c9:	cmp    ecx,edi
  4130cb:	xor    ch,BYTE PTR [ebx-0x367663f9]
  4130d1:	cmp    BYTE PTR [ecx+0x3b],0x7a
  4130d5:	jnp    0x413142
  4130d7:	pop    ebx
  4130d8:	retf   
  4130d9:	cs enter 0xf385,0xc7
  4130de:	mov    bl,0x75
  4130e0:	out    dx,al
  4130e1:	sti    
  4130e2:	inc    esp
  4130e3:	push   ds
  4130e4:	sar    BYTE PTR ds:0xe15c7bcd,1
  4130ea:	cld    
  4130eb:	idiv   dh
  4130ed:	cs dec esp
  4130ef:	and    BYTE PTR [ecx],bh
  4130f1:	stos   DWORD PTR es:[edi],eax
  4130f2:	ret    0x59a1
  4130f5:	aam    0x8b
  4130f7:	jecxz  0x413163
  4130f9:	add    BYTE PTR [edi],cl
  4130fb:	adc    eax,0x9a017b6c
  413100:	pop    eax
  413101:	(bad)  
  413102:	jle    0x413090
  413104:	ret    
  413105:	ss scas eax,DWORD PTR es:[edi]
  413107:	lds    eax,FWORD PTR [ebx+0x2ef4ab93]
  41310d:	pusha  
  41310e:	cmp    ebp,eax
  413110:	test   al,0xc5
  413112:	mov    edi,edi
  413114:	popa   
  413115:	pop    es
  413116:	pop    esp
  413117:	in     al,dx
  413118:	adc    eax,0x59301c6b
  41311d:	mov    cl,0x4
  41311f:	sbb    eax,0xb62b09bf
  413124:	mov    DWORD PTR [esi],eax
  413126:	xchg   DWORD PTR [ecx-0x5c010b74],esi
  41312c:	retf   
  41312d:	add    DWORD PTR [eax-0xc4ef01],edi
  413133:	inc    edi
  413134:	mov    ds:0x7357bb7e,eax
  413139:	mov    WORD PTR [edx+0x78cd933a],cs
  41313f:	inc    BYTE PTR [edx]
  413141:	inc    ecx
  413142:	not    BYTE PTR [edi]
  413144:	push   ebp
  413145:	loop   0x4130d6
  413147:	test   BYTE PTR [eax+0x65],dh
  41314a:	adc    esi,ebp
  41314c:	push   ecx
  41314d:	jns    0x41316c
  41314f:	test   ebp,0x3cd64887
  413155:	mov    WORD PTR [edi],cs
  413157:	jg     0x41315c
  413159:	fisttp DWORD PTR [esi+0x6d]
  41315c:	push   ds
  41315d:	jno    0x413162
  41315f:	adc    ecx,edi
  413161:	inc    edx
  413162:	or     edx,DWORD PTR [edi-0x49]
  413165:	mov    edx,0x2ce2f10b
  41316a:	imul   ecx,DWORD PTR [ecx+0x1],0xffffffe3
  41316e:	jns    0x41314f
  413170:	les    ebx,FWORD PTR [edi-0x4819a685]
  413176:	mov    WORD PTR [ecx+0x2b],ss
  413179:	or     ebx,edi
  41317b:	je     0x413164
  41317d:	cs repz int3 
  413180:	mov    BYTE PTR [eax+edx*8+0x46],dl
  413184:	sar    BYTE PTR [ecx-0x4b539a9b],cl
  41318a:	aam    0x2c
  41318c:	nop
  41318d:	and    ebx,esi
  41318f:	push   ds
  413190:	int3   
  413191:	mov    ebp,0x8dd57c5b
  413196:	ins    BYTE PTR es:[edi],dx
  413197:	in     eax,0x38
  413199:	cmp    BYTE PTR [edx-0x4a],cl
  41319c:	popf   
  41319d:	jecxz  0x413145
  41319f:	pop    ebp
  4131a0:	fistp  DWORD PTR [edx+0x37]
  4131a3:	dec    edx
  4131a4:	mov    esi,DWORD PTR [edx+0x13c11561]
  4131aa:	jle    0x413136
  4131ac:	jecxz  0x413173
  4131ae:	es pop ebp
  4131b0:	xlat   BYTE PTR ds:[ebx]
  4131b1:	xor    BYTE PTR [ecx],cl
  4131b3:	out    dx,al
  4131b4:	jecxz  0x413213
  4131b6:	icebp  
  4131b7:	dec    ebp
  4131b8:	js     0x4131ac
  4131ba:	push   0xffffffe5
  4131bc:	ja     0x413163
  4131be:	shl    bh,0x45
  4131c1:	xlat   BYTE PTR ds:[ebx]
  4131c2:	loopne 0x4131e7
  4131c4:	repnz cmp esi,DWORD PTR [esp+ebp*8]
  4131c8:	aas    
  4131c9:	xlat   BYTE PTR ds:[ebx]
  4131ca:	bound  esi,QWORD PTR [ebx+eax*8]
  4131cd:	(bad)  
  4131ce:	addr16 iret 
  4131d0:	jo     0x41321f
  4131d2:	mov    cl,0x69
  4131d4:	pop    edi
  4131d5:	loope  0x4131c6
  4131d7:	imul   esp,DWORD PTR [ebx+0x765880be],0x73fed7ab
  4131e1:	in     al,0xbc
  4131e3:	rol    DWORD PTR [edx-0x61],cl
  4131e6:	aaa    
  4131e7:	(bad)  
  4131e8:	imul   edi,DWORD PTR [ebp+0x3e138ace],0x46
  4131ef:	sub    al,0xca
  4131f1:	test   eax,0xc8d8b2d9
  4131f6:	stc    
  4131f7:	imul   esp,ebp,0xffffffaf
  4131fa:	mov    dh,0x2b
  4131fc:	cmp    BYTE PTR [edx-0x42],al
  4131ff:	sti    
  413200:	add    edx,DWORD PTR es:[esi]
  413203:	scas   al,BYTE PTR es:[edi]
  413204:	jmp    0x7c9c09f0
  413209:	daa    
  41320a:	sub    ebx,DWORD PTR [esi-0x76f9070e]
  413210:	or     BYTE PTR [edx],cl
  413212:	sahf   
  413213:	loopne 0x4131e7
  413215:	retf   
  413216:	rcl    BYTE PTR [ebx-0x14],0x28
  41321a:	pop    eax
  41321b:	lea    ebx,[edx+edi*4-0x48dd4eb5]
  413222:	aas    
  413223:	sahf   
  413224:	adc    al,0xed
  413226:	gs pop eax
  413228:	xchg   DWORD PTR [ecx],eax
  41322a:	add    cl,al
  41322c:	mov    ebx,0xd9d5e288
  413231:	mov    edx,0x914c98a6
  413236:	pop    esp
  413237:	jge    0x4131cb
  413239:	pop    ebx
  41323a:	jle    0x4131bc
  41323c:	jle    0x4131fb
  41323e:	xlat   BYTE PTR ds:[ebx]
  41323f:	and    DWORD PTR [edi],ebp
  413241:	mov    dh,0x9a
  413243:	xchg   DWORD PTR [esi+0x16],edi
  413246:	enter  0x2e87,0xfe
  41324a:	jle    0x413205
  41324c:	ds dec edx
  41324e:	cmc    
  41324f:	mov    edi,DWORD PTR [edx+0x75a2860a]
  413255:	fisttp DWORD PTR [edx+eiz*2+0x7a]
  413259:	xor    BYTE PTR [edi+0x79682df2],dh
  41325f:	sbb    DWORD PTR [edx],0x5f
  413262:	jmp    0x413250
  413264:	or     al,0xac
  413266:	lock ss out 0x49,eax
  41326a:	retf   
  41326b:	mov    BYTE PTR [esi-0x28ba53dd],dh
  413271:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413273:	idiv   BYTE PTR [ebx+0x1a9aa2d3]
  413279:	mov    ebx,db7
  41327c:	sbb    eax,0x95e6a35
  413281:	add    eax,eax
  413283:	or     esi,0xffffff98
  413286:	sub    eax,0x934568a3
  41328b:	cmp    al,0x77
  41328d:	imul   BYTE PTR [ebx-0x531746bc]
  413293:	cmp    eax,0xe3306931
  413298:	test   DWORD PTR [edx],0xd4437d37
  41329e:	and    DWORD PTR [ecx+esi*4-0x7acc2057],esi
  4132a5:	out    dx,eax
  4132a6:	lahf   
  4132a7:	(bad)  
  4132a8:	mov    dl,0x3
  4132aa:	scas   eax,DWORD PTR es:[edi]
  4132ab:	mov    dl,0xa3
  4132ad:	cmp    cl,BYTE PTR [esi-0x6f]
  4132b0:	cli    
  4132b1:	jae    0x41332e
  4132b3:	fidiv  WORD PTR [eax+eax*1-0x25]
  4132b7:	fcom   QWORD PTR [esi+0x66eca972]
  4132bd:	dec    ecx
  4132be:	lock jb 0x413244
  4132c1:	cmp    eax,0xcbe38469
  4132c6:	mov    esi,DWORD PTR [edi+0x6f]
  4132c9:	into   
  4132ca:	loop   0x41330b
  4132cc:	retf   
  4132cd:	imul   esp,DWORD PTR [edi+0x19],0x47003ca3
  4132d4:	mov    cs:0x12b3fe59,al
  4132da:	scas   al,BYTE PTR es:[edi]
  4132db:	push   ebp
  4132dc:	loopne 0x413294
  4132de:	loop   0x4132ba
  4132e0:	je     0x4132a4
  4132e2:	call   0xee5f:0x2db3d854
  4132e9:	dec    edi
  4132ea:	mov    esi,0xf33653a4
  4132ef:	inc    esp
  4132f0:	ja     0x413366
  4132f2:	fsub   DWORD PTR [edx+0x7dbaaedc]
  4132f8:	mov    dh,0x15
  4132fa:	jbe    0x413331
  4132fc:	cmp    edi,DWORD PTR es:[ebx+0x625b6bbe]
  413303:	es xchg esi,eax
  413305:	clc    
  413306:	cmp    ecx,DWORD PTR [ebx]
  413308:	mov    ah,0x22
  41330a:	adc    BYTE PTR [edx],dh
  41330c:	lds    edi,FWORD PTR [ebp+edi*8-0x6387ad78]
  413313:	mov    ch,0x55
  413315:	ja     0x41329c
  413317:	pop    ss
  413318:	mov    ebp,0xcb2e043d
  41331d:	and    DWORD PTR [ecx-0x5ed3e549],edi
  413323:	(bad)  
  413324:	arpl   ax,bp
  413326:	das    
  413327:	or     edx,DWORD PTR [edx+0x1c]
  41332a:	aas    
  41332b:	inc    edx
  41332c:	mov    ebp,DWORD PTR [esi-0xce12bf1]
  413332:	je     0x4133ab
  413334:	repz pop esp
  413336:	(bad)  
  413337:	or     esi,edi
  413339:	dec    esp
  41333a:	cmp    DWORD PTR [eax+esi*8-0x1d],eax
  41333e:	inc    edx
  41333f:	cmp    DWORD PTR [edi],ebp
  413341:	mov    ecx,0x68a29d40
  413346:	icebp  
  413347:	pusha  
  413348:	cld    
  413349:	dec    eax
  41334a:	call   FWORD PTR [edx-0x532b4d76]
  413350:	mov    esi,0xfbe23100
  413355:	add    BYTE PTR [eax+0x33],dh
  413358:	mov    bh,0x2d
  41335a:	or     BYTE PTR [edi+0x55b9eb87],dh
  413360:	fwait
  413361:	loop   0x4133c0
  413363:	fwait
  413364:	push   es
  413365:	add    dl,BYTE PTR [ebx]
  413367:	inc    esi
  413368:	inc    edx
  413369:	aad    0x9f
  41336b:	sbb    eax,0x23d594a5
  413370:	in     al,dx
  413371:	jno    0x413317
  413373:	add    esi,DWORD PTR [ebx+0x6b5777e0]
  413379:	push   0x812b8779
  41337e:	div    ch
  413380:	fcomp  st(3)
  413382:	mov    cl,0x26
  413384:	adc    al,0x31
  413386:	mov    edx,0x8539c655
  41338b:	nop
  41338c:	sbb    al,0xa1
  41338e:	test   al,0x26
  413390:	mov    ch,0x44
  413392:	dec    ebx
  413393:	repz and DWORD PTR [edi],esi
  413396:	call   0x26bc177b
  41339b:	fild   DWORD PTR [eax-0x57734552]
  4133a1:	retf   0xb823
  4133a4:	leave  
  4133a5:	aad    0xaa
  4133a7:	cmp    al,0x13
  4133a9:	mov    ds:0x347f5bec,al
  4133ae:	scas   al,BYTE PTR es:[edi]
  4133af:	ja     0x413383
  4133b1:	ffree  st(7)
  4133b3:	mov    al,BYTE PTR [ebp-0x23]
  4133b6:	add    ah,BYTE PTR [eax+0x9]
  4133b9:	clc    
  4133ba:	sbb    eax,0x6dfbcb1
  4133bf:	push   esi
  4133c0:	sbb    eax,0xc69ff3e8
  4133c5:	in     eax,dx
  4133c6:	(bad)  
  4133c7:	and    DWORD PTR [esi+edx*1-0x7f],ebx
  4133cb:	jno    0x413377
  4133cd:	ret    0xc472
  4133d0:	inc    edi
  4133d1:	out    0x65,eax
  4133d3:	jbe    0x413391
  4133d5:	jp     0x4133b5
  4133d7:	push   ebx
  4133d8:	add    al,0x55
  4133da:	or     al,BYTE PTR [ebx-0x4761f82e]
  4133e0:	and    edx,DWORD PTR [edx-0x1f]
  4133e3:	in     eax,0xe6
  4133e5:	sahf   
  4133e6:	and    dl,0x5
  4133e9:	xor    bh,BYTE PTR [ebp+ebp*4-0x529eb38c]
  4133f0:	xchg   esp,eax
  4133f1:	loop   0x41341a
  4133f3:	cmc    
  4133f4:	and    BYTE PTR [esi+0x2386593],0x2a
  4133fb:	pusha  
  4133fc:	push   esi
  4133fd:	dec    ebx
  4133fe:	xor    eax,ecx
  413400:	loop   0x4133b3
  413402:	sti    
  413403:	cmc    
  413404:	mov    ebp,0x4cccd1f5
  413409:	rol    BYTE PTR [ecx+0x3de27e76],0xfd
  413410:	inc    esp
  413411:	pop    edi
  413412:	mov    dl,0xb5
  413414:	stos   DWORD PTR es:[edi],eax
  413415:	push   edi
  413416:	or     eax,0x3b432159
  41341b:	mov    WORD PTR [eax-0x60d4405],cs
  413421:	pop    ds
  413422:	scas   al,BYTE PTR es:[edi]
  413423:	mov    WORD PTR [ecx-0x61a081ab],ds
  413429:	cmp    dl,BYTE PTR [edi-0x9]
  41342c:	(bad)  
  41342d:	push   edi
  41342e:	test   al,0x1a
  413430:	retf   
  413431:	pusha  
  413432:	into   
  413433:	adc    BYTE PTR [ebp+0xf5fc1f],bh
  413439:	ret    
  41343a:	es aaa 
  41343c:	fadd   DWORD PTR ds:0xc44502ea
  413442:	dec    ebp
  413443:	pop    ss
  413444:	xor    cl,BYTE PTR [ecx]
  413446:	clc    
  413447:	push   esp
  413448:	shr    dh,0x71
  41344b:	xchg   edx,eax
  41344c:	ds push 0x10
  41344f:	gs pop edi
  413451:	hlt    
  413452:	cs cwde 
  413454:	dec    ebx
  413455:	mov    edx,0xde40b629
  41345a:	or     eax,esp
  41345c:	mov    ecx,0xdc709ae1
  413461:	sbb    DWORD PTR [ecx+0x68],0xfd53fc2a
  413468:	es popf 
  41346a:	je     0x413402
  41346c:	mov    eax,0xb17cc1c6
  413471:	xor    DWORD PTR [edx],eax
  413473:	(bad)  
  413474:	pop    es
  413475:	mov    ebx,?
  413477:	push   esp
  413478:	push   edi
  413479:	fisttp DWORD PTR [edi]
  41347b:	daa    
  41347c:	lock sub al,0xa6
  41347f:	push   cs
  413480:	das    
  413481:	pop    ebx
  413482:	loop   0x413465
  413484:	int3   
  413485:	sbb    DWORD PTR [edx],ebp
  413487:	xor    eax,0xaee5b690
  41348c:	cmp    dh,BYTE PTR [edx]
  41348e:	fs fwait
  413490:	mov    dl,0xa9
  413492:	xchg   edi,eax
  413493:	outs   dx,BYTE PTR ds:[esi]
  413494:	fcom   DWORD PTR [esi]
  413496:	jnp    0x413498
  413498:	lods   eax,DWORD PTR ds:[esi]
  413499:	sub    al,0x35
  41349b:	push   ebp
  41349c:	test   BYTE PTR [esi],0x15
  41349f:	xchg   ch,bh
  4134a1:	(bad)  
  4134a3:	mov    dl,0xff
  4134a5:	xor    eax,0xfc13baa8
  4134aa:	std    
  4134ab:	cs mov dh,0x8d
  4134ae:	inc    ebx
  4134af:	jl     0x41343e
  4134b1:	imul   ebx,ebx,0xffffff8c
  4134b4:	xor    DWORD PTR [esi-0x7a8bc763],esp
  4134ba:	jmp    0x90e99506
  4134bf:	sub    al,0x68
  4134c1:	test   eax,0xd0f3b032
  4134c6:	outs   dx,DWORD PTR ds:[esi]
  4134c7:	or     eax,0xd905c0ed
  4134cc:	xchg   edx,eax
  4134cd:	repz adc DWORD PTR [esi-0x33939841],ebp
  4134d4:	xor    BYTE PTR [ebx+esi*1+0x1a],0xfe
  4134d9:	xchg   DWORD PTR [edi+0x1d],esi
  4134dc:	pop    ebp
  4134dd:	or     ch,BYTE PTR [ebp+0x2e018c6f]
  4134e3:	outs   dx,BYTE PTR ds:[esi]
  4134e4:	into   
  4134e5:	jecxz  0x41352d
  4134e7:	mov    ebp,0x5482459d
  4134ec:	xchg   ebp,eax
  4134ed:	int    0xd8
  4134ef:	jp     0x413527
  4134f1:	hlt    
  4134f2:	fwait
  4134f3:	jne    0x413549
  4134f5:	cmp    bh,BYTE PTR [eax-0x7f5a21ca]
  4134fb:	mov    al,0x67
  4134fd:	fld    TBYTE PTR [esi+0x46]
  413500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413501:	jo     0x41352b
  413503:	xchg   ecx,eax
  413504:	jge    0x413560
  413506:	fs jge 0x41351a
  413509:	das    
  41350a:	ss inc ecx
  41350c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41350d:	jmp    0x4134f7
  41350f:	sbb    BYTE PTR ds:0xbb5aff40,al
  413515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413516:	sti    
  413517:	aaa    
  413518:	fnsave [ecx]
  41351a:	sti    
  41351b:	add    esi,0x71057fa7
  413521:	xchg   ebp,eax
  413522:	jmp    0x8cab8ff2
  413527:	shl    di,0x85
  41352b:	jecxz  0x4135ac
  41352d:	lahf   
  41352e:	mov    dh,0x1c
  413530:	pop    ebp
  413531:	out    0x5b,eax
  413533:	fwait
  413534:	sbb    BYTE PTR [edx],bl
  413536:	not    edx
  413538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413539:	lea    esi,[ebx-0x409f6e12]
  41353f:	xchg   BYTE PTR [ecx],dh
  413541:	fidivr DWORD PTR [ebx+edx*8+0x47]
  413545:	or     edx,DWORD PTR [eax-0x45]
  413548:	js     0x4135a0
  41354a:	jbe    0x413559
  41354c:	ret    0x4034
  41354f:	sub    DWORD PTR [ebx+0x492fc960],esi
  413555:	loop   0x413507
  413557:	sar    BYTE PTR [edi-0x73],1
  41355a:	push   esi
  41355b:	pop    ss
  41355c:	cmp    BYTE PTR [ebx],bh
  41355e:	and    BYTE PTR [eax],dh
  413560:	inc    esi
  413561:	dec    esp
  413562:	(bad)  
  413563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413564:	sub    BYTE PTR [esi],bl
  413566:	scas   al,BYTE PTR es:[edi]
  413567:	xchg   ecx,eax
  413568:	fnstenv [ebp-0x3f91c4a9]
  41356e:	or     esi,esp
  413570:	les    ecx,FWORD PTR [esi+0x24]
  413573:	mov    edi,0xe634f671
  413578:	pop    eax
  413579:	xor    al,al
  41357b:	ins    BYTE PTR es:[edi],dx
  41357c:	inc    ebx
  41357d:	pop    esp
  41357e:	stos   DWORD PTR es:[edi],eax
  41357f:	adc    dl,BYTE PTR [esi-0x2f]
  413582:	rcl    DWORD PTR [ebp+0xb92b2b3],0x37
  413589:	push   es
  41358a:	daa    
  41358b:	cld    
  41358c:	cwde   
  41358d:	jg     0x41360e
  41358f:	leave  
  413590:	je     0x413557
  413592:	cmp    DWORD PTR [ecx],ecx
  413594:	mov    ebp,0x3781e4cc
  413599:	data16 cli 
  41359b:	pop    ecx
  41359c:	mov    DWORD PTR [edi-0x60],edi
  41359f:	(bad)  
  4135a0:	fsub   DWORD PTR [ebp+eax*4-0x5d]
  4135a4:	gs push esi
  4135a6:	lods   eax,DWORD PTR ds:[esi]
  4135a7:	and    DWORD PTR [ecx-0x1f],eax
  4135aa:	or     al,0x55
  4135ac:	cmp    al,0x1c
  4135ae:	in     al,0x7c
  4135b0:	ins    DWORD PTR es:[edi],dx
  4135b1:	xor    DWORD PTR [edx-0x1e],ebp
  4135b4:	pop    edi
  4135b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135b6:	clc    
  4135b7:	repz jnp 0x413619
  4135ba:	inc    edi
  4135bb:	push   0x709b781c
  4135c0:	pop    ecx
  4135c1:	adc    ebx,DWORD PTR [edi+eiz*1+0xf]
  4135c5:	aaa    
  4135c6:	push   eax
  4135c7:	fbstp  TBYTE PTR [ebx]
  4135c9:	inc    edi
  4135ca:	and    esp,esp
  4135cc:	and    ebx,DWORD PTR ds:0x7355049d
  4135d2:	popf   
  4135d3:	push   es
  4135d4:	mov    ebx,0x5b2267d9
  4135d9:	jae    0x4135e6
  4135db:	shr    DWORD PTR [ebp-0x5e],cl
  4135de:	xor    al,al
  4135e0:	stos   BYTE PTR es:[edi],al
  4135e1:	sbb    dh,BYTE PTR [ebx+0x71]
  4135e4:	push   ecx
  4135e5:	fidivr WORD PTR [ebp+0x56e53519]
  4135eb:	fdivr  QWORD PTR [eax-0x4e]
  4135ee:	mov    ebx,DWORD PTR ds:0x26188e2a
  4135f4:	daa    
  4135f5:	js     0x413610
  4135f7:	pop    edi
  4135f8:	and    al,0x48
  4135fa:	push   ebp
  4135fb:	sub    DWORD PTR [eax*4-0x6c610bbc],ebx
  413602:	shr    esp,0x2d
  413605:	ret    0x23e5
  413608:	pop    esi
  413609:	jmp    0x413614
  41360b:	out    dx,al
  41360c:	repz pop eax
  41360e:	mov    esp,0x81e6255f
  413613:	xor    BYTE PTR [edx-0x1c],dl
  413616:	or     eax,0xe1b34d8b
  41361b:	inc    eax
  41361c:	jns    0x4135b0
  41361e:	add    al,bh
  413620:	mov    DWORD PTR [ebx+ebp*2+0x497f1780],ebp
  413627:	mov    ds:0xe52e851e,eax
  41362c:	add    cl,bl
  41362e:	pushf  
  41362f:	mov    ah,0x3c
  413631:	cs daa 
  413633:	or     bl,BYTE PTR [edx+0x3237ef41]
  413639:	inc    DWORD PTR ds:0x1c52266c
  41363f:	(bad)  
  413640:	lock out 0x48,al
  413643:	sub    eax,0x704e26b7
  413648:	or     ah,BYTE PTR [edi-0x1996e688]
  41364e:	dec    esp
  41364f:	(bad)  
  413650:	ins    DWORD PTR es:[edi],dx
  413651:	jmp    0x842e:0x73bc2456
  413658:	pop    ss
  413659:	lahf   
  41365a:	jmp    0x41364e
  41365c:	daa    
  41365d:	xchg   esi,eax
  41365e:	xor    DWORD PTR [ecx+0x32466964],esp
  413664:	in     al,dx
  413665:	popf   
  413666:	cs aaa 
  413668:	(bad)  
  413669:	mov    edi,0xf8d9110f
  41366e:	add    BYTE PTR [edi-0x2cc554a7],bl
  413674:	cs mov esp,0xf8c1ef2e
  41367a:	mov    eax,ds:0x4dc2b6d8
  41367f:	sbb    DWORD PTR [edi],edx
  413681:	xor    ecx,ebp
  413683:	mov    al,0xd7
  413685:	push   ecx
  413686:	cld    
  413687:	sub    al,dh
  413689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41368a:	rcl    ecx,0x5
  41368d:	mov    cl,BYTE PTR [ebx-0x16]
  413690:	xchg   edi,eax
  413691:	and    edx,DWORD PTR [esi-0x5bb47ce0]
  413697:	mov    eax,ds:0x53af2096
  41369c:	push   ebx
  41369d:	pop    edx
  41369e:	out    dx,al
  41369f:	xchg   edi,eax
  4136a0:	rcl    BYTE PTR [edx-0x6],cl
  4136a3:	fisttp QWORD PTR [ecx]
  4136a5:	xchg   esp,eax
  4136a6:	bound  ecx,QWORD PTR [ecx]
  4136a8:	jp     0x413721
  4136aa:	sbb    bl,BYTE PTR [edi+0x70]
  4136ad:	cmp    DWORD PTR ds:0x37d2777,edi
  4136b3:	enter  0x8164,0x25
  4136b7:	fadd   DWORD PTR [edx]
  4136b9:	xchg   ebx,eax
  4136ba:	inc    ebx
  4136bb:	push   esp
  4136bc:	aad    0x85
  4136be:	xchg   edx,eax
  4136bf:	test   DWORD PTR [esi],ebx
  4136c1:	mov    eax,ds:0xa5069f95
  4136c6:	(bad)  
  4136c7:	and    DWORD PTR [esi+ebx*2+0x555e426c],ebx
  4136ce:	mov    ch,0x7e
  4136d0:	lods   eax,DWORD PTR ds:[esi]
  4136d1:	rcl    dh,0xa7
  4136d4:	sub    ecx,DWORD PTR [esi+eax*2-0x77e5edea]
  4136db:	sbb    DWORD PTR ds:0x96671d25,0xffffffaf
  4136e2:	sbb    ebp,DWORD PTR [eax]
  4136e4:	das    
  4136e5:	iret   
  4136e6:	loop   0x4136bf
  4136e8:	and    al,0xc4
  4136ea:	xchg   ecx,eax
  4136eb:	cmp    ch,dl
  4136ed:	pushf  
  4136ee:	js     0x4136b0
  4136f0:	push   edx
  4136f1:	bound  esi,QWORD PTR [esi+0x2728e27a]
  4136f7:	cmp    BYTE PTR ds:0x94ddc2b3,0xce
  4136fe:	mov    cs,WORD PTR [eax+0x32]
  413701:	jae    0x4136f7
  413703:	popf   
  413704:	mov    bl,0xf4
  413706:	mov    al,ds:0x8c5e819c
  41370b:	and    esp,DWORD PTR [edx]
  41370d:	test   dl,cl
  41370f:	int3   
  413710:	dec    ebp
  413711:	and    esi,DWORD PTR ds:0xe7c4b435
  413717:	cwd    
  413719:	pop    esi
  41371a:	fidivr WORD PTR [eax]
  41371c:	jb     0x4136df
  41371e:	fidivr DWORD PTR [edi+0x67]
  413721:	jmp    0x4136b2
  413723:	and    esp,ebx
  413725:	xchg   BYTE PTR [eax],ah
  413727:	je     0x413755
  413729:	scas   eax,DWORD PTR es:[edi]
  41372a:	add    DWORD PTR [ecx-0x3e],esi
  41372d:	out    0x49,al
  41372f:	imul   esi,DWORD PTR [eax+edx*8],0xffffff97
  413733:	inc    esi
  413734:	xor    BYTE PTR [esp+edx*4],bl
  413737:	pop    ecx
  413738:	pop    esp
  413739:	fucomp st(0)
  41373b:	scas   al,BYTE PTR es:[edi]
  41373c:	test   DWORD PTR [ecx-0x58],esp
  41373f:	lods   al,BYTE PTR ds:[esi]
  413740:	jae    0x4136c9
  413742:	imul   ebp,esi,0xe542ef11
  413748:	cmp    ebx,DWORD PTR [ecx]
  41374a:	add    dl,cl
  41374c:	xchg   DWORD PTR [eax-0x2b10dc1],ecx
  413752:	out    0x3d,al
  413754:	cmp    DWORD PTR [ebx-0x527d161f],0x493ab52b
  41375e:	adc    al,0xe5
  413760:	add    bl,dh
  413762:	sti    
  413763:	mov    dh,BYTE PTR [eax+0x277eecb5]
  413769:	imul   ebp,eax,0xf0751630
  41376f:	inc    ebp
  413770:	loop   0x41373a
  413772:	push   ds
  413773:	shl    DWORD PTR [ebx+edi*2],0x34
  413777:	mov    esp,0xe30fe22c
  41377c:	outs   dx,DWORD PTR ds:[esi]
  41377d:	jae    0x413740
  41377f:	inc    eax
  413780:	inc    ecx
  413781:	xor    cl,BYTE PTR [edi]
  413783:	jns    0x41377a
  413785:	shl    BYTE PTR [ebx+0x5c],cl
  413788:	push   0x3ad724fa
  41378d:	(bad)  
  41378e:	cmp    al,0xe7
  413790:	cli    
  413791:	es clc 
  413793:	mov    dl,0xe
  413795:	sti    
  413796:	push   esp
  413797:	iret   
  413798:	cmp    edi,DWORD PTR [edi+0x3b8ce6e3]
  41379e:	test   al,0xf6
  4137a0:	in     eax,0x58
  4137a2:	lock fcomp st(2)
  4137a5:	mov    eax,ds:0x706c78d4
  4137aa:	mov    dh,0xa2
  4137ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ad:	test   BYTE PTR [ebx+0x48ac489d],ch
  4137b3:	add    al,0x83
  4137b5:	mov    ds:0x80203a83,eax
  4137ba:	(bad)  
  4137bc:	not    DWORD PTR [edx-0x61]
  4137bf:	mov    ds:0xf7d5a7d3,al
  4137c4:	pop    ss
  4137c5:	sbb    al,BYTE PTR [ecx-0x9]
  4137c8:	mov    edx,0x5d492863
  4137cd:	adc    eax,0xfc4831f0
  4137d2:	test   DWORD PTR ds:[esi],edi
  4137d5:	stc    
  4137d6:	pop    edx
  4137d7:	test   cl,ch
  4137d9:	btr    edi,0xdc
  4137dd:	add    al,0xbb
  4137df:	and    al,0x2b
  4137e1:	pop    ebp
  4137e2:	shl    DWORD PTR [ebx-0x3b143786],1
  4137e8:	cmp    BYTE PTR [edx+0x30c68695],al
  4137ee:	gs pusha 
  4137f0:	push   ss
  4137f1:	retf   0xff3b
  4137f4:	adc    BYTE PTR [eax],cl
  4137f6:	dec    edx
  4137f7:	pop    edx
  4137f8:	jge    0x41379a
  4137fa:	aam    0xfd
  4137fc:	or     al,0xde
  4137fe:	or     esi,eax
  413800:	cmp    BYTE PTR [esi+0x59],al
  413803:	mov    bl,0xa0
  413805:	enter  0x419b,0xe0
  413809:	lods   eax,DWORD PTR es:[esi]
  41380b:	pop    eax
  41380c:	scas   eax,DWORD PTR es:[edi]
  41380d:	neg    BYTE PTR [ecx+0x25]
  413810:	adc    al,0x8c
  413812:	xchg   esp,eax
  413813:	not    ecx
  413815:	lock hlt 
  413817:	xrelease xchg BYTE PTR [esp+esi*1+0x66],bl
  41381c:	retf   
  41381d:	aad    0xc2
  41381f:	jecxz  0x41384e
  413821:	out    dx,eax
  413822:	mov    ah,0x57
  413824:	int3   
  413825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413826:	fs out 0x68,al
  413829:	push   ecx
  41382a:	call   0xa307:0x5bc54ada
  413831:	xchg   edx,eax
  413832:	sbb    al,0x8f
  413834:	push   ebx
  413835:	addr16 push edi
  413837:	pop    ebp
  413838:	pusha  
  413839:	out    dx,eax
  41383a:	scas   al,BYTE PTR es:[edi]
  41383b:	fsubr  DWORD PTR [ebx-0x4e]
  41383e:	std    
  41383f:	jg     0x4137fb
  413841:	scas   eax,DWORD PTR es:[edi]
  413842:	imul   ebx,DWORD PTR [edx],0xd30e3c07
  413848:	dec    ecx
  413849:	push   edi
  41384a:	mov    WORD PTR [esi],gs
  41384c:	pop    esp
  41384d:	or     BYTE PTR [esi],dl
  41384f:	mov    al,ds:0x859f17db
  413854:	(bad)  
  413855:	jecxz  0x413883
  413857:	lods   eax,DWORD PTR ds:[esi]
  413858:	shr    BYTE PTR ds:[eax+0x53],1
  41385c:	pop    ds
  41385d:	sub    al,BYTE PTR [ebp+0x4cd79b86]
  413863:	retf   0x3bcb
  413866:	not    DWORD PTR [ebx-0x1984834b]
  41386c:	sar    BYTE PTR [edi-0x2eb46d92],0x2c
  413873:	les    edi,FWORD PTR [ecx+ebx*2]
  413876:	inc    ebp
  413877:	stos   BYTE PTR es:[di],al
  413879:	enter  0xef75,0x84
  41387d:	mov    ds:0x6d15e1e6,al
  413882:	ret    
  413883:	fild   WORD PTR ds:0xa8798ae1
  413889:	jle    0x413848
  41388b:	repnz inc eax
  41388d:	sub    DWORD PTR [esp+ebp*4-0x51ae4772],ecx
  413894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413895:	outs   dx,DWORD PTR ds:[esi]
  413896:	xor    eax,edi
  413898:	add    DWORD PTR [ecx+0x4a],edi
  41389b:	mov    dl,0xe3
  41389d:	fs dec edx
  41389f:	xchg   ebp,eax
  4138a0:	or     al,0xe1
  4138a2:	sub    dl,dh
  4138a4:	xchg   esi,eax
  4138a5:	in     eax,0xfb
  4138a7:	shl    BYTE PTR [eax],1
  4138a9:	mov    al,ds:0xd9178d4d
  4138ae:	aas    
  4138af:	and    BYTE PTR [ecx-0x6d],bl
  4138b2:	fsub   st,st(2)
  4138b4:	cdq    
  4138b5:	dec    DWORD PTR ds:0x234397bc
  4138bb:	iret   
  4138bc:	aad    0x57
  4138be:	sub    al,0x8
  4138c0:	mov    edx,0x8af7b1a3
  4138c5:	mov    BYTE PTR [eax-0x33],dl
  4138c8:	add    eax,0x15faa735
  4138cd:	mov    ds,ecx
  4138cf:	pop    eax
  4138d1:	imul   eax,ebx,0x129f441f
  4138d7:	and    al,0xf9
  4138d9:	fisubr DWORD PTR [ecx+0x51]
  4138dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138dd:	out    dx,eax
  4138de:	mov    edx,DWORD PTR [edx]
  4138e0:	in     al,dx
  4138e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e2:	cmp    esi,DWORD PTR [ebx]
  4138e4:	fadd   DWORD PTR [ecx+0x42b01c25]
  4138ea:	add    BYTE PTR [esi+0x4e],ah
  4138ed:	add    BYTE PTR [eax],al
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413ce1
  413cce:	fsub   DWORD PTR [esi+0x7c8a1437]
  413cd4:	jl     0x413d16
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	adc    BYTE PTR [esi+eiz*4+0x1d],0x1d
  413cde:	es leave 
  413ce0:	sub    bl,BYTE PTR [eax+0x42fc0c9e]
  413ce6:	mov    ch,0x61
  413ce8:	or     BYTE PTR [edi-0xd],ah
  413ceb:	mov    BYTE PTR [edx],ch
  413ced:	mov    ds:0x3f02c06f,al
  413cf2:	jmp    DWORD PTR [ebp+0x73]
  413cf5:	xor    DWORD PTR [edi],edi
  413cf7:	pop    edi
  413cf8:	das    
  413cf9:	jmp    0x413cb3
  413cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cfc:	mov    ecx,0x2f8960eb
  413d01:	pop    es
  413d02:	or     eax,DWORD PTR ds:0x7435c641
  413d08:	into   
  413d09:	test   al,0x9
  413d0b:	std    
  413d0c:	mov    edi,0xe1d7cc08
  413d11:	daa    
  413d12:	popw   ds
  413d14:	push   ds
  413d15:	or     ch,BYTE PTR [edi+0x6c]
  413d18:	inc    eax
  413d19:	pop    ecx
  413d1a:	stos   DWORD PTR es:[edi],eax
  413d1b:	sub    al,0xf8
  413d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1e:	or     ecx,DWORD PTR ds:0x922c52d8
  413d24:	adc    eax,0x866bec47
  413d29:	mov    BYTE PTR [esi+eax*2+0xf],dl
  413d2d:	mov    WORD PTR [esi+0x36],ss
  413d30:	inc    edx
  413d31:	push   ecx
  413d32:	or     ebp,DWORD PTR [edi-0x13]
  413d35:	xchg   ecx,eax
  413d36:	in     eax,dx
  413d37:	clc    
  413d38:	pop    es
  413d39:	not    DWORD PTR [ebp-0x621e07c]
  413d3f:	cmp    al,0x90
  413d41:	fadd   DWORD PTR [ecx+ecx*8+0x757cdb3f]
  413d48:	(bad)  
  413d49:	test   al,0xe2
  413d4b:	pop    esi
  413d4c:	stc    
  413d4d:	mov    edx,0x380682b0
  413d53:	jp     0x413ce3
  413d55:	xor    edx,DWORD PTR ds:0xce5eb456
  413d5b:	cmc    
  413d5c:	fisttp QWORD PTR [ebp+0x13]
  413d5f:	outs   dx,DWORD PTR ds:[esi]
  413d60:	inc    ebp
  413d61:	mov    ch,0x9d
  413d63:	and    ch,BYTE PTR [esp+ebx*2+0x2840a09f]
  413d6a:	inc    ecx
  413d6b:	test   eax,0xbd777309
  413d70:	repz pop ss
  413d72:	shl    edi,cl
  413d74:	inc    ecx
  413d75:	inc    edi
  413d76:	push   ss
  413d77:	repz in al,0x6b
  413d7a:	xchg   ebx,eax
  413d7b:	jbe    0x413dce
  413d7d:	loope  0x413df8
  413d7f:	add    eax,0x65d98bf1
  413d84:	mov    ebx,0x1d4443c3
  413d89:	dec    edx
  413d8a:	sub    DWORD PTR [esi-0x79],0xb6c3ecaa
  413d91:	jns    0x413dba
  413d93:	jmp    0xb9caf8c9
  413d98:	jg     0x413d86
  413d9a:	outs   dx,DWORD PTR ds:[esi]
  413d9b:	rol    BYTE PTR [eax-0x20],1
  413d9e:	cmp    BYTE PTR [eax-0x2c],al
  413da1:	pop    eax
  413da2:	addr16 cmp al,0x5b
  413da5:	sbb    dh,BYTE PTR [eax]
  413da7:	jle    0x413dcd
  413da9:	fidivr WORD PTR [ebx]
  413dab:	cmp    al,0xdb
  413dad:	lods   eax,DWORD PTR ds:[esi]
  413dae:	(bad)  
  413daf:	push   0x20
  413db1:	lock fbstp TBYTE PTR [ebx-0x7fdb211e]
  413db8:	dec    edi
  413db9:	ins    BYTE PTR es:[edi],dx
  413dba:	ss mov edx,0xc9f8bf8
  413dc0:	mov    edi,0x374131c3
  413dc5:	cmc    
  413dc6:	mov    ebx,0x80aeda27
  413dcb:	jnp    0x413e1e
  413dcd:	fsub   DWORD PTR [ebp+0x3f]
  413dd0:	lods   eax,DWORD PTR ds:[esi]
  413dd1:	rol    cl,1
  413dd3:	jp     0x413da0
  413dd5:	fwait
  413dd6:	icebp  
  413dd7:	mov    esp,0xaf1d5a6b
  413ddc:	dec    esi
  413ddd:	retf   0xdbbf
  413de0:	cmc    
  413de1:	mov    al,0x87
  413de3:	add    eax,0xec9226f2
  413de8:	mov    eax,ds:0x5f4b2325
  413ded:	iret   
  413dee:	mov    eax,ds:0x4c205446
  413df3:	fimul  WORD PTR [eax+edi*2-0x3f741f3e]
  413dfa:	(bad)  
  413dfb:	jmp    0x475fee0b
  413e00:	push   ss
  413e01:	std    
  413e02:	es (bad) 
  413e04:	(bad)  
  413e05:	sbb    DWORD PTR [esi-0x1ebe08a],eax
  413e0b:	hlt    
  413e0c:	ins    DWORD PTR es:[edi],dx
  413e0d:	js     0x413da6
  413e0f:	test   BYTE PTR [edi+esi*8],bh
  413e12:	push   ss
  413e13:	mov    ds:0x7679b8e4,eax
  413e18:	lock xor bh,al
  413e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1c:	(bad)  
  413e1d:	imul   esi,ecx,0x4853756a
  413e23:	xor    bl,dh
  413e25:	lods   eax,DWORD PTR ds:[esi]
  413e26:	pop    ss
  413e27:	and    edx,DWORD PTR [eax-0x3a]
  413e2a:	push   ss
  413e2b:	mov    al,ds:0x76173a3c
  413e30:	dec    eax
  413e31:	mov    ecx,0xb361bf7
  413e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e37:	(bad)  
  413e39:	shr    BYTE PTR [bx+di-0x4ea8],1
  413e3e:	or     BYTE PTR [eax],dl
  413e40:	jno    0x413e43
  413e42:	jns    0x413e4a
  413e44:	sub    cl,bl
  413e46:	pop    ecx
  413e47:	(bad)  
  413e48:	(bad)  
  413e4a:	sbb    BYTE PTR [ebx-0x7d37fbd8],0x5f
  413e51:	rcl    DWORD PTR [ebx+0x57beb928],1
  413e57:	and    eax,0xb08cf395
  413e5c:	push   ebp
  413e5d:	clc    
  413e5e:	imul   esp,DWORD PTR [eax-0x56],0x32ac9e53
  413e65:	clc    
  413e66:	add    edx,0x65
  413e69:	call   0xefb007c2
  413e6e:	mov    ds:0xdef87ffc,al
  413e73:	mov    ecx,0x8b7b989a
  413e78:	jno    0x413e0d
  413e7a:	leave  
  413e7b:	sbb    cl,bl
  413e7d:	ret    
  413e7e:	repnz push eax
  413e80:	and    ah,BYTE PTR [eax+0x5d5a0aa7]
  413e86:	leave  
  413e87:	fs pop es
  413e89:	sub    cl,dh
  413e8b:	dec    bp
  413e8d:	xchg   DWORD PTR [eax-0x7c592808],ecx
  413e93:	dec    esp
  413e94:	pop    edi
  413e95:	xlat   BYTE PTR ds:[ebx]
  413e96:	ret    0x912b
  413e99:	push   ecx
  413e9a:	and    eax,0xc15f4974
  413e9f:	pop    esi
  413ea0:	mov    bl,0x25
  413ea2:	lods   eax,DWORD PTR ds:[esi]
  413ea3:	push   ebx
  413ea4:	xrelease xchg BYTE PTR [eax+edi*1],dl
  413ea8:	cmp    edx,DWORD PTR cs:[eax-0x8]
  413eac:	(bad)  
  413eae:	xor    ebp,DWORD PTR [ebx+0x78]
  413eb1:	(bad)  
  413eb3:	int3   
  413eb4:	sub    BYTE PTR [ecx+0x2f1cfc10],dl
  413eba:	adc    bl,BYTE PTR [esi]
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jns    0x413ed8
  413ebf:	(bad)  
  413ec0:	push   edx
  413ec1:	mov    esi,0x6c2a7d52
  413ec6:	loopne 0x413e72
  413ec8:	sbb    ebx,DWORD PTR [edx+0x333dbb2c]
  413ece:	or     al,0x2e
  413ed0:	das    
  413ed1:	sahf   
  413ed2:	or     BYTE PTR [edi+0x1b625152],bl
  413ed8:	cmp    DWORD PTR [ebp-0x4d777e6d],ebp
  413ede:	inc    esp
  413edf:	mov    bl,0xa5
  413ee1:	jmp    DWORD PTR [esi-0x199f132b]
  413ee7:	xor    edx,DWORD PTR [ecx]
  413ee9:	bound  ebp,QWORD PTR [ebp-0x7bd06aec]
  413eef:	cmp    eax,0x65f2250b
  413ef4:	(bad)  
  413ef5:	popf   
  413ef6:	jnp    0x413f73
  413ef8:	or     eax,0x65a8dfda
  413efd:	(bad)  
  413eff:	xchg   esp,eax
  413f00:	inc    edx
  413f01:	inc    edx
  413f02:	sbb    BYTE PTR [ebp+0x121fb07],bh
  413f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f09:	inc    edi
  413f0a:	and    BYTE PTR [edi],bh
  413f0c:	and    ch,BYTE PTR [ebp-0x6d]
  413f0f:	in     eax,dx
  413f10:	js     0x413f01
  413f12:	adc    BYTE PTR [eax],cl
  413f14:	mov    edi,0xe5860777
  413f19:	mov    BYTE PTR [ebx+ebp*4],dh
  413f1c:	cmp    ah,bh
  413f1e:	push   es
  413f1f:	popf   
  413f20:	out    0x40,al
  413f22:	sar    BYTE PTR [edi-0x3832a5d9],0x55
  413f29:	sbb    dh,BYTE PTR [ecx-0x5293e0c7]
  413f2f:	and    al,BYTE PTR [eax+0x24ff1dbe]
  413f35:	add    ecx,edi
  413f37:	jecxz  0x413f12
  413f39:	loope  0x413f2c
  413f3b:	lahf   
  413f3c:	arpl   si,bp
  413f3e:	clc    
  413f3f:	jae    0x413f4b
  413f41:	enter  0x3fc1,0x2f
  413f45:	mov    BYTE PTR [edx-0x2a61a627],bl
  413f4b:	push   ebx
  413f4c:	loopne 0x413fbb
  413f4e:	or     esi,DWORD PTR [edx-0x76]
  413f51:	xchg   edi,eax
  413f52:	clc    
  413f53:	inc    esp
  413f54:	sbb    ch,0x80
  413f57:	xchg   DWORD PTR [esi+eax*1-0x5c],edi
  413f5b:	cmp    eax,0x40af47f6
  413f60:	xchg   ebx,eax
  413f61:	mov    ecx,0x9ff305f9
  413f66:	jno    0x413f56
  413f68:	ins    DWORD PTR es:[edi],dx
  413f69:	rcr    BYTE PTR [eax],1
  413f6b:	mov    DWORD PTR [ebp+0x3cdeea5c],esp
  413f71:	xor    al,0x12
  413f73:	sub    cl,BYTE PTR [esi]
  413f75:	jmp    0x8207ed15
  413f7a:	es dec esp
  413f7c:	ds inc esi
  413f7e:	mov    cl,0x72
  413f80:	call   DWORD PTR [esi+0x37225059]
  413f86:	adc    al,BYTE PTR cs:[edi+0x64]
  413f8a:	aam    0xe4
  413f8c:	stos   BYTE PTR es:[edi],al
  413f8d:	dec    edi
  413f8e:	dec    edx
  413f8f:	mov    bh,0xa
  413f91:	dec    eax
  413f92:	add    DWORD PTR ds:0x4254a22c,edx
  413f98:	jmp    0x77c7e186
  413f9d:	out    0x71,al
  413f9f:	ins    BYTE PTR es:[edi],dx
  413fa0:	adc    eax,0xa21e8ac8
  413fa5:	jecxz  0x413fa1
  413fa7:	mov    esi,0xf7e31c62
  413fac:	daa    
  413fad:	jns    0x413f8b
  413faf:	int3   
  413fb0:	sbb    eax,DWORD PTR [eax+0x3d41e799]
  413fb6:	mov    eax,0xf6719fac
  413fbb:	inc    edx
  413fbc:	retf   0x8c93
  413fbf:	or     DWORD PTR [ebp-0x5bacd4c6],edx
  413fc5:	mov    ebx,0xa95b2b04
  413fca:	aam    0xb0
  413fcc:	pop    es
  413fcd:	sub    BYTE PTR [ebx+0x27],ah
  413fd0:	fwait
  413fd1:	xchg   ecx,eax
  413fd2:	xchg   ecx,eax
  413fd3:	xor    al,dl
  413fd5:	cwde   
  413fd6:	jae    0x413f5f
  413fd8:	pushf  
  413fd9:	sti    
  413fda:	inc    esi
  413fdb:	push   esi
  413fdc:	sti    
  413fdd:	xor    ecx,DWORD PTR [edi-0x2b]
  413fe0:	cmp    eax,0x5d752724
  413fe5:	xchg   BYTE PTR [edi],cl
  413fe7:	(bad)  
  413fe8:	mov    DWORD PTR ds:[ecx+0x3471bed6],esi
  413fef:	add    DWORD PTR [ebx+0x44fbb1f3],ebp
  413ff5:	and    BYTE PTR [ebp+0x15],ch
  413ff8:	sub    al,0xf8
  413ffa:	jbe    0x41402a
  413ffc:	or     al,0x12
  413ffe:	pop    eax
  413fff:	xor    DWORD PTR [ebx-0x10],edi
  414002:	jecxz  0x413ffc
  414004:	jp     0x413fba
  414006:	in     eax,0x70
  414008:	pushf  
  414009:	pop    ebx
  41400a:	pushf  
  41400b:	and    ch,bh
  41400d:	push   ds
  41400e:	push   esi
  41400f:	sar    DWORD PTR [ecx],cl
  414011:	add    cl,BYTE PTR [eax]
  414013:	push   ebp
  414014:	jp     0x413fb0
  414016:	lods   al,BYTE PTR ds:[esi]
  414017:	aad    0x4
  414019:	xchg   ebx,eax
  41401a:	int    0x71
  41401c:	inc    eax
  41401d:	xchg   esi,eax
  41401e:	lods   al,BYTE PTR ds:[esi]
  41401f:	xchg   ebx,eax
  414020:	xchg   BYTE PTR [esi+0x64],al
  414023:	xor    bl,BYTE PTR [edx-0x4536868c]
  414029:	into   
  41402a:	aas    
  41402b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41402c:	jnp    0x414048
  41402e:	mov    dh,0xc
  414030:	pop    esi
  414031:	gs dec esi
  414033:	js     0x413fe8
  414035:	ret    
  414036:	out    0x13,al
  414038:	push   0x7f
  41403a:	out    0x94,eax
  41403c:	cwde   
  41403d:	inc    edx
  41403e:	clts   
  414040:	popf   
  414041:	sbb    al,0x82
  414043:	xlat   BYTE PTR ds:[ebx]
  414044:	mov    ch,0x4e
  414046:	mov    cl,0xe8
  414048:	pop    ds
  414049:	(bad)  
  41404a:	test   eax,0x18c999a3
  41404f:	jnp    0x41405f
  414051:	sbb    eax,0xd84e49eb
  414056:	call   edx
  414058:	jno    0x413fe7
  41405a:	lea    esp,ds:0x164c5531
  414060:	test   bl,dl
  414062:	lods   al,BYTE PTR ds:[esi]
  414063:	push   ds
  414064:	xchg   ebx,eax
  414065:	imul   esp,DWORD PTR [edx-0x23],0x12f3c52e
  41406c:	ins    DWORD PTR es:[edi],dx
  41406d:	mov    al,0xa2
  41406f:	(bad)  
  414070:	jae    0x414023
  414072:	or     dl,BYTE PTR [ebx-0x30d7bb5b]
  414078:	mov    ds:0x2af0699,eax
  41407d:	and    ebp,DWORD PTR [ebx+0x5e]
  414080:	pop    ebp
  414081:	inc    edx
  414082:	mul    ebp
  414084:	loope  0x414045
  414086:	cmc    
  414087:	sub    al,0x2a
  414089:	sub    DWORD PTR [edx-0xf86d26c],ecx
  41408f:	xor    DWORD PTR [ebp*8+0x3fa0ea7e],edx
  414096:	mov    ds:0xadc7978,eax
  41409b:	xchg   BYTE PTR [ecx+edx*8],bh
  41409e:	lods   eax,DWORD PTR ds:[esi]
  41409f:	in     al,dx
  4140a0:	mov    edx,esi
  4140a2:	sub    eax,esi
  4140a4:	(bad)  
  4140a6:	fdivr  DWORD PTR [ecx*8+0x5ddfb913]
  4140ad:	ret    0xc923
  4140b0:	and    edx,DWORD PTR [ebx]
  4140b2:	ret    0xefc3
  4140b5:	adc    al,0xec
  4140b7:	push   edx
  4140b8:	in     eax,dx
  4140b9:	int3   
  4140ba:	jno    0x414076
  4140bc:	retf   
  4140bd:	jmp    0x414075
  4140bf:	lods   al,BYTE PTR ds:[esi]
  4140c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c1:	xchg   esp,eax
  4140c2:	call   0x94fb:0xf4d9f9ed
  4140c9:	das    
  4140ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140cb:	hlt    
  4140cc:	shl    DWORD PTR [ecx-0x7476a54e],1
  4140d2:	rcr    dl,cl
  4140d4:	addr16 dec edx
  4140d6:	mov    esp,0xcf8e7477
  4140db:	push   0x3fd12f00
  4140e0:	ret    
  4140e1:	loop   0x414083
  4140e3:	(bad)  
  4140e4:	or     al,0xa2
  4140e6:	std    
  4140e7:	les    eax,FWORD PTR [ecx-0x62]
  4140ea:	xchg   ebx,eax
  4140eb:	das    
  4140ec:	mul    BYTE PTR [ecx]
  4140ee:	std    
  4140ef:	test   ah,dh
  4140f1:	ret    0x7df6
  4140f4:	mov    ebp,0x16a624fe
  4140f9:	fwait
  4140fa:	mov    ecx,0x3fe617de
  4140ff:	(bad)  
  414100:	sbb    eax,0x7f64fad5
  414105:	rcl    BYTE PTR [eax+0x7d618de2],1
  41410b:	lods   al,BYTE PTR ds:[esi]
  41410c:	xchg   ebx,eax
  41410d:	or     ebp,DWORD PTR [eax]
  41410f:	mov    esp,0xe4467d9a
  414114:	lods   eax,DWORD PTR ds:[esi]
  414115:	sbb    DWORD PTR [edx],0xc1577852
  41411b:	or     al,0xb2
  41411d:	jb     0x4140d4
  41411f:	icebp  
  414120:	call   0xf0eb8146
  414125:	push   esp
  414126:	cmp    ebx,DWORD PTR [edx]
  414128:	mov    eax,0x3ef2191c
  41412d:	rol    DWORD PTR [edi],0x7d
  414130:	cmp    eax,0xb398fb17
  414136:	cli    
  414137:	sbb    eax,0xa72ed812
  41413c:	or     ebx,DWORD PTR [esi-0x51]
  41413f:	inc    esi
  414140:	(bad)  
  414142:	ins    BYTE PTR es:[edi],dx
  414143:	retf   
  414144:	jp     0x41418c
  414146:	dec    edi
  414147:	aam    0xc8
  414149:	pop    eax
  41414a:	sbb    BYTE PTR [edi],ah
  41414c:	(bad)
  41414f:	popa   
  414150:	xchg   esp,eax
  414151:	xchg   ecx,eax
  414152:	mul    BYTE PTR [ebp+0x7dc1eddc]
  414158:	jle    0x414194
  41415a:	neg    DWORD PTR [ebp+0x75]
  41415d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415e:	fs and al,0xbc
  414161:	ins    BYTE PTR es:[edi],dx
  414162:	ds mov dh,0x58
  414165:	inc    ecx
  414166:	mov    cl,0x10
  414168:	les    ecx,FWORD PTR [edi+0xa]
  41416b:	fisubr WORD PTR [eax+0x6c8cc2c1]
  414171:	xor    eax,0x87a5b024
  414176:	mov    bl,0x53
  414178:	(bad)  
  414179:	stc    
  41417a:	push   es
  41417b:	mov    DWORD PTR [ebp-0x49234d78],edi
  414181:	stc    
  414182:	add    eax,0x36ee20d2
  414187:	iret   
  414188:	dec    esi
  414189:	xchg   BYTE PTR [ecx-0x453b17f],cl
  41418f:	neg    ebp
  414191:	push   0xffffffb7
  414193:	jecxz  0x4141d9
  414195:	inc    ecx
  414196:	pop    ecx
  414197:	xor    DWORD PTR [esi],0xffffffa4
  41419a:	and    bh,BYTE PTR [ebx-0x5f]
  41419d:	xchg   edx,eax
  41419e:	xor    ah,BYTE PTR [eax+0x1907ab95]
  4141a4:	add    ch,BYTE PTR [ebx+0x65a384f8]
  4141aa:	popa   
  4141ab:	mov    ah,0xe1
  4141ad:	popf   
  4141ae:	in     al,dx
  4141af:	fisttp QWORD PTR [esi-0x4d]
  4141b2:	xor    DWORD PTR [ecx+0x62],eax
  4141b5:	cmp    al,0x63
  4141b7:	mov    bh,BYTE PTR [esi+0x68]
  4141ba:	ja     0x41415f
  4141bc:	in     al,dx
  4141bd:	lahf   
  4141be:	shl    BYTE PTR fs:[ebp+ebp*4+0x4b1d0dba],cl
  4141c6:	pushf  
  4141c7:	jne    0x4141d1
  4141c9:	repnz jecxz 0x414184
  4141cc:	cdq    
  4141cd:	pop    esi
  4141ce:	into   
  4141cf:	dec    esp
  4141d0:	cli    
  4141d1:	ret    0xa83b
  4141d4:	mov    eax,ds:0x461bbf72
  4141d9:	ffreep st(6)
  4141db:	mov    edi,0x8d72286
  4141e0:	outs   dx,DWORD PTR ds:[esi]
  4141e1:	xor    bl,BYTE PTR [ecx]
  4141e3:	dec    eax
  4141e4:	add    ebx,ecx
  4141e6:	push   ebx
  4141e7:	inc    esp
  4141e8:	call   0x1d0e:0xfa1685da
  4141ef:	cwde   
  4141f0:	mov    esp,0x70e49ff4
  4141f5:	add    esp,edx
  4141f7:	dec    eax
  4141f8:	xor    DWORD PTR [edi+0x4601f5c7],0x2c2c57d9
  414202:	mov    ecx,0xf9f04a6c
  414207:	ror    DWORD PTR [ebx+0x21f63cfa],1
  41420d:	jnp    0x414221
  41420f:	repz retf 0x2118
  414213:	sahf   
  414214:	lds    edi,FWORD PTR ds:0x9a24c7fa
  41421a:	xchg   ebp,eax
  41421b:	mov    eax,0xb9b4e4db
  414220:	and    eax,0x7b5e15a3
  414225:	pop    edx
  414226:	ret    0x65b8
  414229:	pushf  
  41422a:	lea    ecx,[edi+0x5e]
  41422d:	imul   DWORD PTR [edi+eax*2]
  414230:	fbstp  TBYTE PTR [ebx]
  414232:	inc    edi
  414233:	cwde   
  414234:	jmp    0x41426f
  414236:	ins    BYTE PTR es:[edi],dx
  414237:	xchg   esi,eax
  414238:	test   eax,0x4fbea829
  41423d:	push   0x2f309278
  414242:	and    DWORD PTR [ecx],ebx
  414244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414245:	mov    bh,0xbc
  414247:	sar    edx,cl
  414249:	mov    edx,0x61439ef9
  41424e:	ret    
  41424f:	sahf   
  414250:	and    edx,DWORD PTR [ebp+ebp*1-0x6e32b9fa]
  414257:	aas    
  414258:	jb     0x414248
  41425a:	cmp    bh,al
  41425c:	xor    al,0xd7
  41425e:	mov    ah,0x65
  414260:	call   0xcfc1:0x2d8c0b
  414267:	jbe    0x4142b2
  414269:	mov    edi,0x80d9c0d8
  41426e:	or     bl,BYTE PTR [ebp+0x7d]
  414271:	jl     0x4142df
  414273:	dec    ebp
  414274:	and    eax,0x7fbe614c
  414279:	fdivr  st,st(4)
  41427b:	fcmove st,st(5)
  41427d:	and    eax,0xdd35f911
  414282:	movups xmm7,xmm0
  414285:	dec    ebp
  414286:	out    0xfd,eax
  414288:	(bad)
  41428c:	push   ecx
  41428d:	add    BYTE PTR [ebp-0xf],bh
  414290:	imul   esp,DWORD PTR ds:0x8918fb6c,0x925f4254
  41429a:	enter  0xa71,0x88
  41429e:	add    esp,0xffffffe7
  4142a1:	push   es
  4142a2:	or     eax,0x60bd0ba7
  4142a7:	push   0xcbd39d94
  4142ac:	mov    bh,0xcc
  4142ae:	jnp    0x4142cc
  4142b0:	mov    eax,0xf4c580ed
  4142b5:	out    0xb4,al
  4142b7:	and    BYTE PTR [edx+0x0],0x20
  4142bb:	call   0x9c08bc23
  4142c0:	out    dx,eax
  4142c1:	sub    al,al
  4142c3:	test   BYTE PTR [ebx],0x93
  4142c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c7:	xchg   ebx,eax
  4142c8:	imul   esp,esp,0xffffffda
  4142cb:	std    
  4142cc:	ret    
  4142cd:	(bad)  
  4142ce:	mov    ebx,0x990b0de0
  4142d3:	adc    ecx,eax
  4142d5:	shr    BYTE PTR [ebp-0x4fb7b395],1
  4142db:	lods   eax,DWORD PTR ds:[esi]
  4142dc:	sbb    eax,0x4496cadb
  4142e1:	pop    ebp
  4142e2:	mov    ds:0x40fb214e,eax
  4142e7:	pop    ecx
  4142e8:	sbb    edi,DWORD PTR [ecx]
  4142ea:	sbb    ecx,edx
  4142ec:	mov    dh,0x15
  4142ee:	js     0x4142b0
  4142f0:	add    BYTE PTR [ebp+edi*2+0x658238c0],cl
  4142f7:	mov    ds:0xbc81f10c,al
  4142fc:	mov    ecx,0x88c0e952
  414301:	loopne 0x4142cc
  414303:	mov    ?,esp
  414305:	sub    cl,BYTE PTR [edx+0x3e]
  414308:	leave  
  414309:	or     ebx,edx
  41430b:	cmp    bl,BYTE PTR [ecx]
  41430d:	pop    es
  41430e:	adc    eax,0xe2eecfef
  414313:	push   DWORD PTR gs:[esi]
  414316:	pop    ss
  414317:	out    dx,al
  414318:	repz add ebp,DWORD PTR [esi-0x65e39e02]
  41431f:	push   0xf8c570db
  414324:	and    eax,eax
  414326:	cmp    cl,dl
  414328:	pusha  
  414329:	push   ds
  41432a:	xor    al,cl
  41432c:	aas    
  41432d:	push   cs
  41432e:	pop    ebp
  41432f:	push   esi
  414330:	inc    edi
  414331:	and    al,0xda
  414333:	sub    BYTE PTR [edx+ebp*2-0x4b],dh
  414337:	and    al,0xb6
  414339:	fisttp DWORD PTR [ebx-0x3f161613]
  41433f:	jg     0x41433f
  414341:	push   ebx
  414342:	ja     0x41437d
  414344:	outs   dx,BYTE PTR ds:[esi]
  414345:	fsub   QWORD PTR [ecx+0x66fcf660]
  41434b:	test   al,0xfe
  41434d:	mov    esp,0x9a72a640
  414352:	or     DWORD PTR [ebp+0x52],0x49
  414356:	scas   eax,DWORD PTR es:[edi]
  414357:	dec    ebx
  414358:	(bad)  
  414359:	idiv   BYTE PTR [ebp+0x7a6fbc39]
  41435f:	loopne 0x41437d
  414361:	loope  0x41434b
  414363:	xor    BYTE PTR [edi+0x6f4c4df6],0xf2
  41436a:	cmp    al,0xa8
  41436c:	pop    DWORD PTR [edx+0x4c]
  41436f:	or     ch,ch
  414371:	into   
  414372:	out    0x74,al
  414374:	xor    al,0xf6
  414376:	mov    edi,0xe59fa190
  41437b:	mov    dh,0x59
  41437d:	lock pop ss
  41437f:	xor    BYTE PTR [esi-0x7f],ah
  414382:	(bad)  
  414383:	js     0x4143f4
  414385:	enter  0xd74c,0x1c
  414389:	mov    ebp,0x21151c1c
  41438e:	xor    al,0x4a
  414390:	and    eax,0xf64b4aeb
  414395:	add    al,0x49
  414397:	or     al,0x35
  414399:	ins    BYTE PTR es:[edi],dx
  41439a:	push   edx
  41439b:	ja     0x4143f2
  41439d:	xchg   esi,eax
  41439e:	cdq    
  41439f:	mov    dh,0x71
  4143a1:	in     al,dx
  4143a2:	or     DWORD PTR [eax-0x2fec7199],edi
  4143a8:	ret    
  4143a9:	adc    al,0xe1
  4143ab:	std    
  4143ac:	push   eax
  4143ad:	push   cs
  4143ae:	jno    0x41435d
  4143b0:	jp     0x4143f2
  4143b2:	cmp    bh,BYTE PTR [ecx-0x8]
  4143b5:	mov    ebp,0x7f993f9d
  4143ba:	add    ch,BYTE PTR [edx-0x18f4c411]
  4143c0:	imul   edx,DWORD PTR ds:0x7e7028f,0xfffffffc
  4143c7:	loopne 0x414367
  4143c9:	sub    cl,BYTE PTR [ecx-0x296cbebe]
  4143cf:	and    bl,bl
  4143d1:	cmp    BYTE PTR [ecx],0xf0
  4143d4:	add    dl,0xc9
  4143d7:	pop    es
  4143d8:	cmc    
  4143d9:	cmp    dl,BYTE PTR [ebx+0x6423eb10]
  4143df:	jecxz  0x4143f1
  4143e1:	push   ss
  4143e2:	das    
  4143e3:	pop    edx
  4143e4:	inc    ecx
  4143e5:	sbb    dl,bh
  4143e7:	add    BYTE PTR [edx-0x6f],0x59
  4143eb:	jo     0x414409
  4143ed:	xchg   ebp,eax
  4143ee:	cmp    BYTE PTR [ebp+0x27723acf],ah
  4143f4:	inc    edi
  4143f5:	ret    0x2ad8
  4143f8:	mov    BYTE PTR [ecx],bh
  4143fa:	add    al,0xd0
  4143fc:	or     bl,0xf0
  4143ff:	stos   DWORD PTR es:[edi],eax
  414400:	push   ebx
  414401:	dec    ebx
  414402:	enter  0x2712,0x94
  414406:	pusha  
  414407:	pop    es
  414408:	out    dx,al
  414409:	add    ah,BYTE PTR [edx]
  41440b:	inc    eax
  41440c:	xor    al,0x79
  41440e:	retf   
  41440f:	lods   eax,DWORD PTR ds:[esi]
  414410:	dec    ebx
  414411:	pop    ss
  414412:	aas    
  414413:	mov    ebx,0xfde1f0f5
  414418:	(bad)  
  414419:	mov    al,ds:0x6188f01e
  41441e:	data16 cmp BYTE PTR [ebp+0x43],ah
  414422:	or     DWORD PTR [eax],edi
  414424:	adc    dh,BYTE PTR [ebp-0x7285cd32]
  41442a:	outs   dx,BYTE PTR ds:[esi]
  41442b:	jne    0x414453
  41442d:	(bad)  
  41442e:	loope  0x414484
  414430:	rcr    edi,0x31
  414433:	hlt    
  414434:	jb     0x4143ea
  414436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414437:	mov    ebx,0xf3f795a6
  41443c:	fst    QWORD PTR [esi]
  41443e:	add    BYTE PTR [edx+ebx*2+0x11],dh
  414442:	inc    ebx
  414443:	(bad)  
  414444:	jb     0x41442f
  414446:	push   ds
  414447:	imul   esp,DWORD PTR [eax],0x7
  41444a:	mov    edx,0x87b346c9
  41444f:	lea    edi,ds:0x5078d72
  414455:	test   al,0x8b
  414457:	fcmove st,st(5)
  414459:	pushf  
  41445a:	push   edx
  41445b:	adc    edi,DWORD PTR [edi+esi*1-0x2b]
  41445f:	add    eax,0xbb0f710d
  414464:	sub    al,0xf9
  414466:	mov    eax,ds:0x120787e5
  41446b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446c:	div    BYTE PTR [edi+0x6d1c19b5]
  414472:	js     0x414403
  414474:	xchg   dl,ah
  414476:	jbe    0x414418
  414478:	xchg   DWORD PTR [edi+0x74dc874b],eax
  41447e:	inc    ecx
  41447f:	rcr    BYTE PTR [ebx],0x8b
  414482:	dec    edi
  414483:	inc    ebx
  414484:	iret   
  414485:	shl    ecx,0xd0
  414488:	das    
  414489:	xchg   dh,cl
  41448b:	dec    edi
  41448c:	sahf   
  41448d:	call   0x23fcba79
  414492:	mov    WORD PTR [edx+ebx*2+0x3be07828],es
  414499:	dec    eax
  41449a:	ins    BYTE PTR es:[edi],dx
  41449b:	pusha  
  41449c:	out    dx,ax
  41449e:	xor    dh,BYTE PTR [ecx+0x2a18d65]
  4144a4:	jno    0x4144e2
  4144a6:	mov    edx,0x61804f52
  4144ab:	jns    0x414480
  4144ad:	dec    ebx
  4144ae:	mov    ch,0x20
  4144b0:	cdq    
  4144b1:	mov    eax,ds:0x5a774ea
  4144b6:	(bad)  
  4144b7:	or     eax,0x79e76ee3
  4144bc:	or     ebx,0xefc8fe84
  4144c2:	pop    ebx
  4144c3:	add    DWORD PTR ds:0x27a8123,ebp
  4144c9:	mov    ch,0xe8
  4144cb:	or     DWORD PTR [esi+0x7],0x57
  4144cf:	frstor [ecx+edi*8-0x3fcb7dd2]
  4144d6:	inc    ebp
  4144d7:	mov    ebx,0x18b9ee9c
  4144dc:	xlat   BYTE PTR ds:[ebx]
  4144dd:	mov    al,BYTE PTR [esi+0x52]
  4144e0:	sbb    eax,0x91d39004
  4144e5:	clc    
  4144e6:	ins    DWORD PTR es:[edi],dx
  4144e7:	or     esp,eax
  4144e9:	ja     0x41454e
  4144eb:	xor    al,0x69
  4144ed:	push   esi
  4144ee:	cmp    al,0x8f
  4144f0:	clc    
  4144f1:	fbld   TBYTE PTR [ebx+eiz*4-0x2f]
  4144f5:	xor    al,0xf1
  4144f7:	lds    ecx,FWORD PTR [eax-0x2b]
  4144fa:	scas   al,BYTE PTR es:[edi]
  4144fb:	hlt    
  4144fc:	mov    ds:0x490e6ab4,al
  414501:	mov    DWORD PTR [edx+0xf],eax
  414504:	adc    dh,BYTE PTR [ebx-0x5e]
  414507:	sbb    DWORD PTR [edx-0x7f],esi
  41450a:	add    ebp,0x77
  41450d:	std    
  41450e:	mov    al,0xd7
  414510:	popf   
  414511:	outs   dx,DWORD PTR ds:[esi]
  414512:	push   eax
  414513:	pop    es
  414514:	pushf  
  414515:	nop
  414516:	pop    ebx
  414517:	loop   0x4144aa
  414519:	sar    BYTE PTR [edx-0x66facccb],0xb
  414520:	jbe    0x41459a
  414522:	jge    0x414549
  414524:	and    ah,dh
  414526:	sbb    eax,0x14d588f4
  41452b:	mov    ebx,ebx
  41452d:	inc    ebx
  41452e:	in     eax,dx
  41452f:	jno    0x414579
  414531:	sahf   
  414532:	jecxz  0x4144d3
  414534:	mov    al,ds:0x2ce74012
  414539:	mov    edx,0x25d7509d
  41453e:	retf   
  41453f:	aaa    
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	jnp    0x41454a
  414543:	iret   
  414544:	call   0x91f2:0x8b7b9fdd
  41454b:	mov    ebp,0x7af51cd6
  414550:	cmp    DWORD PTR [ecx],ecx
  414552:	sub    al,0xc4
  414554:	in     al,dx
  414555:	fwait
  414556:	mov    edx,0x6c03ca9b
  41455b:	jecxz  0x4145b9
  41455d:	mov    edx,0x5b767a17
  414562:	sbb    edi,edi
  414564:	jge    0x4145c7
  414566:	xchg   ecx,eax
  414567:	and    BYTE PTR [edi+0x58d3894b],0x7e
  41456e:	sub    eax,DWORD PTR [ebx]
  414570:	outs   dx,DWORD PTR ds:[esi]
  414571:	pop    ebp
  414572:	ja     0x41458e
  414574:	or     edx,DWORD PTR [ecx+0xb8701fb]
  41457a:	add    DWORD PTR [esi],0x70
  41457d:	ja     0x4145b4
  41457f:	aas    
  414580:	data16 jg 0x414527
  414583:	ret    
  414584:	jl     0x41450d
  414586:	inc    ax
  414588:	popf   
  414589:	xchg   ebx,eax
  41458a:	shl    DWORD PTR [ecx+0x151a305e],1
  414590:	(bad)  
  414592:	fwait
  414593:	cdq    
  414594:	(bad)  
  414595:	imul   ebx,DWORD PTR [ebx+0x15575a7a],0x6e
  41459c:	pop    ebx
  41459d:	(bad)  [ebx-0x38]
  4145a0:	mov    eax,0xd6a8be1b
  4145a5:	jmp    0x4145a8
  4145a7:	jmp    0x22411f2b
  4145ac:	mov    dl,BYTE PTR [eax+0x71]
  4145af:	pop    ebx
  4145b0:	ret    
  4145b1:	out    0x7a,al
  4145b3:	pop    esp
  4145b4:	cmp    ebp,ebp
  4145b6:	cs fs push cs
  4145b9:	idiv   al
  4145bb:	fs adc edi,esi
  4145be:	sbb    BYTE PTR [ebx-0x38a7de7a],0x5f
  4145c5:	jne    0x41460f
  4145c7:	add    DWORD PTR [ebx-0xa],ecx
  4145ca:	stos   BYTE PTR es:[edi],al
  4145cb:	or     edx,esi
  4145cd:	data16 adc BYTE PTR [eax+0x14],0x4f
  4145d2:	into   
  4145d3:	popa   
  4145d4:	xchg   edi,eax
  4145d5:	push   edx
  4145d6:	mov    bl,0x29
  4145d8:	push   esi
  4145d9:	stc    
  4145da:	loop   0x41458f
  4145dc:	or     al,0x6e
  4145de:	mov    ds:0x8d8f8031,eax
  4145e3:	pusha  
  4145e4:	xchg   cl,bl
  4145e6:	mov    dl,0xf5
  4145e8:	xlat   BYTE PTR ds:[ebx]
  4145e9:	mov    dl,0x5d
  4145eb:	inc    eax
  4145ec:	and    ebp,ebx
  4145ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ef:	ins    DWORD PTR es:[edi],dx
  4145f0:	push   ds
  4145f1:	ds jne 0x414607
  4145f4:	dec    eax
  4145f5:	xchg   edx,eax
  4145f6:	inc    ebx
  4145f7:	mov    esi,0x329ade11
  4145fc:	mov    ecx,0x32bf2ed8
  414601:	or     eax,0xccd63cfb
  414606:	imul   edx,DWORD PTR [ebp-0x1832a359],0x81909966
  414610:	sub    esp,DWORD PTR [eax+edi*2+0x49ffe293]
  414617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414618:	and    BYTE PTR [ecx],bh
  41461a:	out    dx,eax
  41461b:	loop   0x41462f
  41461d:	(bad)  
  41461e:	sbb    esp,DWORD PTR [ebp-0x402d39e7]
  414624:	ja     0x4145a9
  414626:	nop
  414627:	jne    0x414689
  414629:	push   0xf4117151
  41462e:	or     DWORD PTR [esi-0x54],ecx
  414631:	inc    edi
  414632:	xchg   ecx,eax
  414633:	mov    cl,0x12
  414635:	jecxz  0x414670
  414637:	or     eax,0xeba34bf6
  41463c:	int3   
  41463d:	(bad)  
  41463e:	lock mov ah,0x39
  414641:	jae    0x41469d
  414643:	lea    eax,[esi-0x48]
  414646:	arpl   WORD PTR [edx],dx
  414648:	jecxz  0x4145f1
  41464a:	ffree  st(2)
  41464c:	cld    
  41464d:	inc    ebx
  41464e:	xor    eax,0xc15e8e3
  414653:	fist   DWORD PTR [edx-0x59a3c197]
  414659:	out    dx,eax
  41465a:	dec    esi
  41465b:	gs jecxz 0x414641
  41465e:	push   edi
  41465f:	mov    edx,0x2ef91110
  414664:	mov    edi,0xfbdec3c
  414669:	mov    al,0x51
  41466b:	or     BYTE PTR [eax],dl
  41466d:	shr    BYTE PTR [ebp+0xa],1
  414670:	push   0xffffffad
  414672:	mov    ebp,0xa67ef01f
  414678:	call   0xaf6d:0x8a9ba3ea
  41467f:	push   eax
  414680:	lock sbb DWORD PTR [ebp-0x15cda22f],eax
  414687:	cmp    ecx,edx
  414689:	lahf   
  41468a:	inc    ecx
  41468b:	dec    esi
  41468c:	sbb    ebx,eax
  41468e:	test   DWORD PTR [edx+0x1f],0xe5f48023
  414695:	mov    eax,0x166338cd
  41469a:	pop    esi
  41469b:	jge    0x41466d
  41469d:	test   eax,0xb7a160ab
  4146a2:	adc    eax,0x2c6f9c64
  4146a7:	fcmovbe st,st(7)
  4146a9:	scas   eax,DWORD PTR es:[edi]
  4146aa:	stos   BYTE PTR es:[edi],al
  4146ab:	sub    ah,BYTE PTR [edx+0x67eda4e0]
  4146b1:	inc    ebx
  4146b2:	xlat   BYTE PTR gs:[ebx]
  4146b4:	cdq    
  4146b5:	mov    bl,0xad
  4146b7:	mov    ecx,gs
  4146b9:	daa    
  4146ba:	aam    0xf6
  4146bc:	pop    ebp
  4146bd:	or     al,0x92
  4146bf:	and    eax,0xbdc2d206
  4146c4:	xlat   BYTE PTR ds:[ebx]
  4146c5:	shl    BYTE PTR [edx],0x24
  4146c8:	clc    
  4146c9:	ss jbe 0x414691
  4146cc:	xor    BYTE PTR [ebp+0x3acf8f65],bh
  4146d2:	(bad)  
  4146d4:	mov    esp,0x327fb4fd
  4146d9:	out    0x2c,al
  4146db:	ror    DWORD PTR [edx-0x9a14f05],1
  4146e1:	rcl    DWORD PTR [ecx+0x15],0xc4
  4146e5:	(bad)  
  4146e6:	lods   al,BYTE PTR ds:[esi]
  4146e7:	test   al,0xee
  4146e9:	daa    
  4146ea:	cmp    ch,BYTE PTR [eax+ecx*4]
  4146ed:	push   ds
  4146ee:	push   ecx
  4146ef:	sbb    bl,bh
  4146f1:	(bad)  
  4146f2:	xchg   ecx,eax
  4146f3:	mov    ?,WORD PTR [esi+ebp*4+0xe]
  4146f7:	xchg   esp,eax
  4146f8:	shrd   DWORD PTR [ebx],ecx,0x32
  4146fc:	call   0x409087a9
  414701:	mov    esi,0x6bcb51b3
  414706:	xchg   esp,eax
  414707:	daa    
  414708:	lea    ebp,[ecx-0x5f]
  41470b:	mov    DWORD PTR [edx-0x573cb335],ebp
  414711:	mov    bh,0x11
  414713:	push   0x56
  414715:	repz fistp WORD PTR [eax-0x7a0ee721]
  41471c:	pop    ds
  41471d:	fwait
  41471e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41471f:	dec    ebx
  414720:	stc    
  414721:	dec    ebx
  414722:	sub    ebx,DWORD PTR [ebp+0x630664b3]
  414728:	stos   BYTE PTR es:[edi],al
  414729:	(bad)  
  41472a:	hlt    
  41472b:	(bad)  
  41472c:	std    
  41472d:	(bad)  
  41472e:	and    dh,BYTE PTR [ecx+0x1b]
  414731:	jmp    0xb268:0x6e59fba6
  414738:	out    dx,al
  414739:	dec    ebp
  41473a:	aaa    
  41473b:	sub    al,0x1b
  41473d:	adc    DWORD PTR [esi+0x31424c67],edi
  414743:	mov    WORD PTR [eax+ecx*4-0x52],cs
  414747:	dec    edx
  414748:	in     eax,dx
  414749:	xchg   BYTE PTR ds:0x2f8127c2,cl
  41474f:	cdq    
  414750:	adc    BYTE PTR [esi+0x34],cl
  414753:	sbb    bh,BYTE PTR [esi-0x66]
  414756:	out    0x4c,al
  414758:	stos   BYTE PTR es:[edi],al
  414759:	and    al,ch
  41475b:	ficom  WORD PTR [ebx-0x6c]
  41475e:	mov    eax,ds:0x85019dd1
  414763:	cmp    BYTE PTR [eax],bl
  414765:	pop    ebx
  414766:	sub    BYTE PTR [ebx],bh
  414768:	pop    esi
  414769:	add    dh,al
  41476b:	or     cl,BYTE PTR [eax+0x3229d6f5]
  414771:	fild   DWORD PTR [eax-0x28]
  414774:	call   0x9cbc32ca
  414779:	ja     0x41472c
  41477b:	(bad)  
  41477d:	and    eax,0xc8d11a48
  414782:	imul   eax,esi,0x20
  414785:	icebp  
  414786:	cwde   
  414787:	or     bl,bl
  414789:	xor    dh,ch
  41478b:	push   cs
  41478c:	lods   al,BYTE PTR ds:[esi]
  41478d:	fisubr DWORD PTR [ebx-0x7b]
  414790:	sub    eax,0x3ee32cf9
  414795:	push   esp
  414796:	ret    0x2ccc
  414799:	sbb    al,bl
  41479b:	xlat   BYTE PTR ds:[ebx]
  41479c:	adc    al,0x24
  41479e:	mov    eax,DWORD PTR [edx+0x4c]
  4147a1:	outs   dx,BYTE PTR ds:[esi]
  4147a2:	ret    
  4147a3:	add    DWORD PTR [esi],esi
  4147a5:	push   ecx
  4147a6:	jp     0x41478d
  4147a8:	aad    0xb2
  4147aa:	mov    esp,0xa7325fb
  4147af:	out    0x67,eax
  4147b1:	scas   al,BYTE PTR es:[edi]
  4147b2:	jae    0x41479a
  4147b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147b6:	sar    DWORD PTR cs:[esp+eax*1],1
  4147ba:	leave  
  4147bb:	in     al,0x8e
  4147bd:	(bad)  
  4147be:	jno    0x41482f
  4147c0:	add    al,0x3b
  4147c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c3:	fucom  st(2)
  4147c5:	ins    BYTE PTR es:[edi],dx
  4147c6:	jbe    0x414810
  4147c8:	adc    eax,0x315ed8df
  4147cd:	ret    0xc127
  4147d0:	xchg   ecx,eax
  4147d1:	jl     0x4147c1
  4147d3:	xor    dh,BYTE PTR [edi-0x24]
  4147d6:	loope  0x4147bb
  4147d8:	pop    ds
  4147d9:	pop    ss
  4147da:	mov    BYTE PTR [ecx-0x2c],dh
  4147dd:	les    ebp,FWORD PTR [edx+edi*4+0x7b]
  4147e1:	ret    
  4147e2:	jecxz  0x414835
  4147e4:	stos   DWORD PTR es:[edi],eax
  4147e5:	sub    cl,bl
  4147e7:	inc    ecx
  4147e8:	sbb    cl,bl
  4147ea:	jne    0x4147e2
  4147ec:	adc    DWORD PTR [edi+0x78],ebx
  4147ef:	js     0x4147f4
  4147f1:	std    
  4147f2:	cmp    al,0x81
  4147f4:	popf   
  4147f5:	mov    bl,0x88
  4147f7:	mov    ds:0x5eb19445,eax
  4147fc:	icebp  
  4147fd:	addr16 retf 
  4147ff:	mov    DWORD PTR [edi],esi
  414801:	call   0x61b0:0xa2e0c856
  414808:	nop
  414809:	data16 lahf 
  41480b:	add    ebx,esp
  41480d:	loop   0x41483e
  41480f:	adc    al,0x9b
  414811:	div    al
  414813:	cmp    BYTE PTR [edi+0x19],bl
  414816:	loope  0x4147c3
  414818:	mov    bh,0x53
  41481a:	ss jg  0x4147be
  41481d:	adc    ecx,DWORD PTR [ebx-0x4f83e5d5]
  414823:	xchg   BYTE PTR [edi+0x53],dl
  414826:	jno    0x4147eb
  414828:	ins    DWORD PTR es:[edi],dx
  414829:	sti    
  41482a:	xor    eax,esi
  41482c:	push   edi
  41482d:	fild   QWORD PTR [ebp-0x2d8189e5]
  414833:	mov    bh,0xcc
  414835:	cmc    
  414836:	sbb    eax,0xeb589191
  41483b:	xor    al,0x80
  41483d:	pop    eax
  41483e:	pop    edx
  41483f:	out    dx,al
  414840:	pop    esp
  414841:	push   0xffffffc5
  414843:	repnz sub ch,BYTE PTR [eax]
  414846:	push   ecx
  414847:	addr16 xchg esi,eax
  414849:	adc    esi,DWORD PTR [ebx-0x336fc1cb]
  41484f:	push   ss
  414850:	rcr    DWORD PTR [esi],1
  414852:	pop    ebx
  414853:	lea    ecx,[esi-0x55]
  414856:	jae    0x414878
  414858:	mov    bl,ah
  41485a:	daa    
  41485b:	dec    esi
  41485c:	add    dl,BYTE PTR [ebx-0x9c5fd19]
  414862:	mov    cl,0xa2
  414864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414865:	ins    BYTE PTR es:[edi],dx
  414866:	and    cl,0xa1
  414869:	jne    0x414864
  41486b:	fs xchg ebp,eax
  41486d:	or     DWORD PTR [ebx+0x6a899d77],0x5f
  414874:	pop    ebp
  414875:	add    eax,0xea2ae994
  41487a:	lds    esp,FWORD PTR [ebp+0x5b]
  41487d:	lods   al,BYTE PTR ds:[esi]
  41487e:	mov    edx,fs
  414880:	adc    DWORD PTR [ecx+0x3c2faf1f],0x61fa60f8
  41488a:	pop    esi
  41488b:	int    0x4c
  41488d:	push   ss
  41488e:	ret    
  41488f:	mov    bh,0xe3
  414891:	aam    0xa3
  414893:	sbb    bl,ah
  414895:	pusha  
  414896:	popa   
  414897:	mov    edi,0x640df0fe
  41489c:	shl    DWORD PTR [edx],cl
  41489e:	sar    al,0x79
  4148a1:	sbb    bl,dl
  4148a3:	jp     0x4148fa
  4148a5:	fdiv   DWORD PTR [ebx]
  4148a7:	popf   
  4148a8:	adc    esp,DWORD PTR [edx]
  4148aa:	aas    
  4148ab:	sub    BYTE PTR [ebx],bl
  4148ad:	das    
  4148ae:	pop    edx
  4148af:	pop    esi
  4148b0:	out    dx,eax
  4148b1:	outs   dx,BYTE PTR ds:[esi]
  4148b2:	xchg   DWORD PTR [ebx+0x6b7e549d],ebx
  4148b8:	push   edx
  4148b9:	jmp    0xa6e6:0x8217865a
  4148c0:	mov    ds:0xab6572eb,al
  4148c5:	xor    BYTE PTR [edi-0x22038fad],ah
  4148cb:	ds jecxz 0x4148b0
  4148ce:	aaa    
  4148cf:	push   edx
  4148d0:	cmp    DWORD PTR [ecx+ebx*4+0x546ba59d],esp
  4148d7:	add    BYTE PTR [eax+0x4],cl
  4148da:	clc    
  4148db:	leave  
  4148dc:	gs sbb al,dh
  4148df:	ss pop edx
  4148e1:	cli    
  4148e2:	mov    esp,0xb602102
  4148e7:	or     BYTE PTR [esi],ch
  4148e9:	leave  
  4148ea:	outs   dx,DWORD PTR ds:[esi]
  4148eb:	or     BYTE PTR [esi-0xe],al
  4148ee:	rol    DWORD PTR [ecx+0x602fdc41],0x90
  4148f5:	sbb    eax,0xb082f3bf
  4148fa:	inc    esi
  4148fb:	mov    esp,0xf7d43f13
  414900:	(bad)  
  414901:	mov    ebp,0x3a77e46c
  414906:	call   0xb201ce60
  41490b:	sub    dh,BYTE PTR [ecx+0x72078686]
  414911:	pop    ds
  414912:	jo     0x4148a9
  414914:	adc    bh,ch
  414916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414917:	in     eax,dx
  414918:	cmp    edx,DWORD PTR [ebx-0x72cbc2ca]
  41491e:	cmp    eax,0x74a69276
  414923:	add    edx,edx
  414925:	addr16 jmp 0x4148ee
  414928:	push   esi
  414929:	retf   0xa04e
  41492c:	sub    bl,BYTE PTR [ecx-0x1f595abb]
  414932:	dec    ecx
  414933:	add    eax,0xeb1860a
  414938:	(bad)  
  414939:	sub    al,0xab
  41493b:	xor    al,0x57
  41493d:	xchg   esi,eax
  41493e:	sub    DWORD PTR [ecx+0x2a2cba6b],esp
  414944:	mov    esi,0x3ca045f0
  414949:	jo     0x4148db
  41494b:	dec    esi
  41494c:	or     esi,edi
  41494e:	imul   edx,esp,0xa9d96de8
  414954:	leave  
  414955:	stos   BYTE PTR es:[edi],al
  414956:	dec    eax
  414957:	fstp   QWORD PTR [esi-0x29bd107a]
  41495d:	mov    ebp,0x6367f466
  414962:	add    BYTE PTR [ebx],dh
  414964:	leave  
  414965:	ds xchg ebx,eax
  414967:	pop    ecx
  414968:	mov    al,0x73
  41496a:	pop    esi
  41496b:	int3   
  41496c:	sbb    cl,ch
  41496e:	inc    esp
  41496f:	enter  0xee8a,0x5b
  414973:	dec    ebx
  414974:	lods   al,BYTE PTR ds:[esi]
  414975:	or     esp,DWORD PTR [edx]
  414977:	or     BYTE PTR [edx-0x1e],dh
  41497a:	(bad)  
  41497c:	pop    esi
  41497d:	into   
  41497e:	lds    edi,FWORD PTR [edx-0x495efab7]
  414984:	cmp    ecx,DWORD PTR ds:0xd37cb51f
  41498a:	xor    ah,BYTE PTR [edi]
  41498c:	or     eax,0x82cc50a
  414991:	retf   
  414992:	dec    esp
  414993:	jne    0x41498f
  414995:	pop    esp
  414996:	pop    edx
  414997:	mov    bl,0x3f
  414999:	push   0xffffffa1
  41499b:	clc    
  41499c:	leave  
  41499d:	xor    bl,BYTE PTR [ebx]
  41499f:	xchg   edx,eax
  4149a0:	pop    eax
  4149a1:	push   0x78bc92d6
  4149a6:	faddp  st(6),st
  4149a8:	or     dl,ch
  4149aa:	inc    edi
  4149ab:	mov    bl,0xd4
  4149ad:	dec    ecx
  4149ae:	dec    esp
  4149af:	adc    ecx,edi
  4149b1:	xlat   BYTE PTR ds:[ebx]
  4149b2:	sub    ah,BYTE PTR [esi]
  4149b4:	mov    ah,0x1a
  4149b6:	mov    cl,0x3b
  4149b8:	pop    edi
  4149b9:	jl     0x4149d1
  4149bb:	xor    bh,BYTE PTR ds:0x8468b206
  4149c1:	xor    cl,bh
  4149c3:	pop    esi
  4149c4:	mov    ds:0xb0e50fab,al
  4149c9:	shr    bh,0x63
  4149cc:	adc    al,0x91
  4149ce:	push   esi
  4149cf:	adc    esi,DWORD PTR [edx]
  4149d1:	add    dl,dl
  4149d3:	jns    0x4149b7
  4149d5:	push   cs
  4149d6:	mov    cs,WORD PTR fs:[edx]
  4149d9:	lods   al,BYTE PTR ds:[esi]
  4149da:	repnz hlt 
  4149dc:	add    DWORD PTR [edi],ebx
  4149de:	jns    0x4149d2
  4149e0:	adc    edx,DWORD PTR [esi+0x44c782f5]
  4149e6:	mov    WORD PTR [edi-0x23120121],es
  4149ec:	lock and al,0xd3
  4149ef:	fisttp WORD PTR [ebp-0x1a4519c2]
  4149f5:	call   0x5177:0xb22c77b2
  4149fc:	or     BYTE PTR [esi-0x7f1bce8],cl
  414a02:	jne    0x4149e3
  414a04:	push   eax
  414a05:	lock in eax,0xed
  414a08:	jmp    0xbd0b:0x58ad639b
  414a0f:	lds    edx,FWORD PTR [edi+0x56be0a86]
  414a15:	jns    0x414a96
  414a17:	pop    ecx
  414a18:	fsubrp st(6),st
  414a1a:	mov    ch,0x99
  414a1c:	pop    ecx
  414a1d:	push   eax
  414a1e:	hlt    
  414a1f:	loop   0x414a68
  414a21:	test   eax,0x2fa364e4
  414a26:	pop    esp
  414a27:	ret    
  414a28:	enter  0x9418,0x92
  414a2c:	jg     0x414a0a
  414a2e:	es lock cmp ecx,ebx
  414a32:	fsub   DWORD PTR [esi-0x723293b4]
  414a38:	dec    ebp
  414a39:	outs   dx,BYTE PTR ds:[esi]
  414a3a:	push   0xe80a8220
  414a3f:	or     DWORD PTR [esi+0x7d],edx
  414a42:	mov    ecx,0x75597274
  414a47:	and    ebp,0x5d
  414a4a:	xchg   esp,eax
  414a4b:	push   esp
  414a4c:	push   ss
  414a4d:	cmp    BYTE PTR [edi-0x2f],ah
  414a50:	or     dh,bh
  414a52:	sub    ebp,DWORD PTR [eax+0xee34a48]
  414a58:	mov    ch,0x2b
  414a5a:	stos   DWORD PTR es:[edi],eax
  414a5b:	(bad)  
  414a5c:	das    
  414a5d:	jg     0x414a31
  414a5f:	(bad)  
  414a60:	in     al,0x7c
  414a62:	fwait
  414a63:	xor    edx,esi
  414a65:	shl    BYTE PTR [ecx],1
  414a67:	stos   DWORD PTR es:[edi],eax
  414a68:	in     al,0xcb
  414a6a:	dec    edi
  414a6b:	dec    esp
  414a6c:	inc    esi
  414a6d:	mov    ebp,0xb1b4eea0
  414a72:	icebp  
  414a73:	cmovge ecx,DWORD PTR [edi+edx*8+0xf546a72]
  414a7b:	retf   0xfd0d
  414a7e:	in     al,dx
  414a7f:	xchg   esi,eax
  414a80:	jle    0x414a8d
  414a82:	es cwde 
  414a84:	repz xlat BYTE PTR ds:[ebx]
  414a86:	sbb    DWORD PTR [ebp-0x28],esp
  414a89:	mov    esi,0x7c032e05
  414a8e:	push   edi
  414a8f:	mov    dh,0x93
  414a91:	jns    0x414a70
  414a93:	enter  0x1b57,0xce
  414a97:	adc    DWORD PTR [ebx],0x27ced36e
  414a9d:	in     al,0xb9
  414a9f:	pop    ebp
  414aa0:	push   es
  414aa1:	dec    ebx
  414aa2:	cmp    edi,DWORD PTR [ebx+0x2385315d]
  414aa8:	in     eax,dx
  414aa9:	add    BYTE PTR [ecx],ch
  414aab:	fcomp  QWORD PTR [edi]
  414aad:	cmc    
  414aae:	xchg   DWORD PTR [ecx+0x5b],ebx
  414ab1:	sti    
  414ab2:	mov    ds:0x1a1d921d,eax
  414ab7:	or     ecx,ebp
  414ab9:	fld    QWORD PTR [ebx]
  414abb:	mov    bl,0x50
  414abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414abe:	stc    
  414abf:	xchg   bh,bl
  414ac1:	jg     0x414b06
  414ac3:	fimul  WORD PTR [ecx-0x76]
  414ac6:	loope  0x414aae
  414ac8:	repz int 0x92
  414acb:	mov    ?,WORD PTR [ecx]
  414acd:	sbb    BYTE PTR [ebp-0x1c],cl
  414ad0:	enter  0xde0e,0x58
  414ad4:	push   0x114a12b6
  414ad9:	data16 (bad) 
  414adb:	div    BYTE PTR [esi-0x4209a479]
  414ae1:	cld    
  414ae2:	loope  0x414a89
  414ae4:	call   0x6c66:0xec141f71
  414aeb:	pop    edi
  414aec:	js     0x414aa9
  414aee:	push   ebx
  414aef:	dec    ebx
  414af0:	sub    al,0xd2
  414af2:	or     eax,0xfe078bce
  414af7:	std    
  414af8:	sbb    DWORD PTR [ebx],eax
  414afa:	repz js 0x414b1e
  414afd:	sbb    al,0x8f
  414aff:	dec    eax
  414b00:	call   0x5ebd0640
  414b05:	sahf   
  414b06:	push   ebp
  414b07:	cmp    edx,eax
  414b09:	std    
  414b0a:	mov    cl,0x1a
  414b0c:	mov    ch,0xc
  414b0e:	scas   eax,DWORD PTR es:[edi]
  414b0f:	xor    DWORD PTR [ebp+0x7a7a49bb],0xc2aef610
  414b19:	jmp    0x7be1eb2f
  414b1e:	mov    ch,0x77
  414b20:	(bad)  
  414b21:	mov    DWORD PTR [edi-0x56],0x38a91c5e
  414b28:	aad    0xaa
  414b2a:	out    0x10,al
  414b2c:	adc    esp,DWORD PTR [edi+0xa]
  414b2f:	mov    ebp,0xcffe64d5
  414b34:	dec    edx
  414b35:	dec    ebx
  414b36:	cdq    
  414b37:	jo     0x414bb4
  414b39:	mov    bl,0x92
  414b3b:	iret   
  414b3c:	aaa    
  414b3d:	les    edi,FWORD PTR [ecx+0x706b6d4a]
  414b43:	adc    DWORD PTR [ebx+eiz*1-0x5e],esp
  414b47:	(bad)  
  414b48:	xor    BYTE PTR [esi+0x6e],dl
  414b4b:	fdiv   DWORD PTR [edi+ebp*1]
  414b4e:	xchg   bl,cl
  414b50:	loopne 0x414b8a
  414b52:	push   0x8a1b4f89
  414b57:	xlat   BYTE PTR ds:[ebx]
  414b58:	sub    eax,0x1f63ce3
  414b5d:	bound  ecx,QWORD PTR [eax+edx*4+0x5e]
  414b61:	xor    al,0xad
  414b63:	clc    
  414b64:	pop    ebp
  414b65:	pop    eax
  414b66:	mov    cl,0xab
  414b68:	je     0x414bb3
  414b6a:	mov    edi,0x3eeaa209
  414b6f:	add    eax,ecx
  414b71:	push   es
  414b72:	or     al,0x44
  414b74:	sub    bl,BYTE PTR [esi-0x64850c8c]
  414b7a:	push   esp
  414b7b:	cmp    esp,ebx
  414b7d:	xchg   edx,eax
  414b7e:	add    DWORD PTR [ebx+0x228cebac],ebp
  414b84:	imul   ecx,DWORD PTR [edx+0x0],0x25354ace
  414b8b:	xchg   dh,bh
  414b8d:	in     eax,dx
  414b8e:	push   edi
  414b8f:	mov    al,ds:0x32ed32b6
  414b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b95:	pop    ebx
  414b96:	out    0xc4,al
  414b98:	(bad)
  414b9c:	ins    BYTE PTR es:[edi],dx
  414b9d:	and    edi,ebp
  414b9f:	mov    ecx,0xe49f48e0
  414ba4:	mov    cl,0x83
  414ba6:	push   0x6d938625
  414bab:	mov    al,ds:0x976b9e14
  414bb0:	jne    0x414b87
  414bb2:	pop    edx
  414bb3:	out    0x89,eax
  414bb5:	sub    eax,0x77a9ed22
  414bba:	jmp    0x7b05:0xa4150380
  414bc1:	push   eax
  414bc2:	mov    al,ds:0x13dfaee9
  414bc7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc9:	xor    al,0x1f
  414bcb:	push   ecx
  414bcc:	sub    BYTE PTR [esi-0xa],dl
  414bcf:	dec    edx
  414bd0:	scas   eax,DWORD PTR es:[edi]
  414bd1:	out    0x26,al
  414bd3:	icebp  
  414bd4:	mov    bh,0x0
  414bd6:	or     eax,0x7b3cff07
  414bdb:	loope  0x414c0a
  414bdd:	add    al,0x11
  414bdf:	and    BYTE PTR [edi*8-0x7775ddb],bh
  414be6:	jns    0x414b7b
  414be8:	adc    BYTE PTR [esi-0x28],cl
  414beb:	cld    
  414bec:	ss pop ebp
  414bee:	add    eax,0xabf9a613
  414bf3:	stos   DWORD PTR es:[edi],eax
  414bf4:	mov    edi,0xcecf375e
  414bf9:	iret   
  414bfa:	lods   eax,DWORD PTR ds:[esi]
  414bfb:	pop    ss
  414bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bfd:	pop    eax
  414bfe:	sub    al,0x9c
  414c00:	in     eax,dx
  414c01:	inc    edi
  414c02:	fcom   DWORD PTR [ebp+eiz*4-0x28]
  414c06:	cmp    eax,0x2830f5a7
  414c0b:	imul   edi,esp,0x50c23479
  414c11:	iret   
  414c12:	mov    BYTE PTR [edi],al
  414c14:	imul   ecx,eax,0xffffffa0
  414c17:	test   DWORD PTR [eax],edx
  414c19:	push   0x27
  414c1b:	shl    BYTE PTR [ecx+ebx*2],0xd5
  414c1f:	jne    0x414bdb
  414c21:	jo     0x414c0d
  414c23:	pop    ds
  414c24:	jno    0x414c06
  414c26:	retf   
  414c27:	mov    al,ds:0x23ce9bd2
  414c2c:	je     0x414c19
  414c2e:	jp     0x414bc4
  414c30:	cmp    al,0xc7
  414c32:	imul   edx,DWORD PTR [eax+0x19aca941],0xfffffffa
  414c39:	shr    esp,1
  414c3b:	pop    edx
  414c3c:	call   0x2aa593ee
  414c41:	lock xor ebx,DWORD PTR [ebx]
  414c44:	fwait
  414c45:	jnp    0x414cb2
  414c47:	and    ch,BYTE PTR [esp+ecx*1-0x5e]
  414c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c4c:	sbb    eax,0x39056013
  414c51:	and    esp,DWORD PTR [eax+ebp*1]
  414c54:	push   esi
  414c55:	and    DWORD PTR [edi+eax*1],edx
  414c58:	xchg   BYTE PTR [edx+edi*2-0x6d62cbf],ah
  414c5f:	adc    DWORD PTR [ebp+0x764ac4a6],eax
  414c65:	pop    ebp
  414c66:	or     al,0x49
  414c68:	xor    eax,0x5d1640fe
  414c6d:	call   0xbd7b:0x6492d02
  414c74:	cdq    
  414c75:	or     al,0x7f
  414c77:	scas   eax,DWORD PTR es:[edi]
  414c78:	mov    eax,0xf2f386ac
  414c7d:	stos   DWORD PTR es:[edi],eax
  414c7e:	call   0x9ce77d75
  414c83:	sbb    DWORD PTR [ebx-0x58],ebx
  414c86:	xor    al,0xb4
  414c88:	or     eax,0xad66615f
  414c8d:	mov    ecx,0xad43bd99
  414c92:	and    ebx,DWORD PTR [edx-0x4d]
  414c95:	xor    DWORD PTR [ecx+eax*4],ebx
  414c98:	(bad)  
  414c99:	pop    edx
  414c9a:	xor    dh,dl
  414c9c:	mov    ah,0xdd
  414c9e:	push   ecx
  414c9f:	push   0xec0b07a6
  414ca4:	clc    
  414ca5:	test   BYTE PTR [ebx-0x2cea40ca],bh
  414cab:	(bad)  
  414cae:	mov    ah,0xaf
  414cb0:	comiss xmm0,xmm0
  414cb3:	ret    
  414cb4:	push   eax
  414cb5:	dec    esi
  414cb6:	cs nop
  414cb8:	adc    eax,ebx
  414cba:	xchg   BYTE PTR [eax+0x73],ch
  414cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cbe:	dec    esp
  414cbf:	xor    DWORD PTR [edx+ecx*8],0xffffffe6
  414cc3:	arpl   WORD PTR ds:0x2770f12f,di
  414cc9:	aam    0x5e
  414ccb:	lahf   
  414ccc:	fmul   QWORD PTR [esi+0x65c331d9]
  414cd2:	sar    al,cl
  414cd4:	inc    eax
  414cd5:	(bad)  [edi]
  414cd7:	xchg   BYTE PTR [eax-0x59],dl
  414cda:	and    esp,ecx
  414cdc:	add    eax,0x11e41dd1
  414ce1:	xchg   ebx,eax
  414ce2:	cmp    eax,DWORD PTR [ecx-0x4185ab98]
  414ce8:	jmp    0x414d49
  414cea:	adc    BYTE PTR [edi+esi*8-0xe],ch
  414cee:	mov    esp,0x5003d641
  414cf3:	out    dx,al
  414cf4:	fdivr  st,st(7)
  414cf6:	pop    ebx
  414cf7:	das    
  414cf8:	cmp    cl,BYTE PTR [esi-0x4]
  414cfb:	adc    bl,ch
  414cfd:	add    al,0x54
  414cff:	cmp    BYTE PTR [edx],0xa9
  414d02:	out    dx,al
  414d03:	imul   edi,DWORD PTR [eax+0x12],0xffffffdb
  414d07:	add    ch,BYTE PTR [ebp-0x14ef6b65]
  414d0d:	and    eax,0xd9a0ae33
  414d12:	outs   dx,BYTE PTR ds:[esi]
  414d13:	pop    eax
  414d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d15:	xchg   edi,eax
  414d16:	js     0x414d1c
  414d18:	int    0x77
  414d1a:	xor    DWORD PTR [esi-0x58],ecx
  414d1d:	jno    0x414d8a
  414d1f:	imul   esp,DWORD PTR [ecx-0x6],0xffffffb7
  414d23:	mov    ds:0xe51c2de3,eax
  414d28:	out    dx,eax
  414d29:	sub    eax,0xc297d672
  414d2e:	ror    DWORD PTR [eax+0x4f],cl
  414d31:	ds call 0xf35b8270
  414d37:	mov    bl,bl
  414d39:	mov    ds:0x37952e59,al
  414d3e:	iret   
  414d3f:	jae    0x414d35
  414d41:	xlat   BYTE PTR ds:[ebx]
  414d42:	mov    ah,cl
  414d44:	mov    al,ds:0xb202a27c
  414d49:	and    dh,BYTE PTR [ebx]
  414d4b:	mov    esi,DWORD PTR [edi+0x1c700ac]
  414d51:	push   ss
  414d52:	add    dh,BYTE PTR [ebp+0x3b25abcc]
  414d58:	in     al,0xd0
  414d5a:	adc    BYTE PTR [edi-0xa],dl
  414d5d:	sub    dh,cl
  414d5f:	cmp    esi,ebx
  414d61:	push   ecx
  414d62:	push   esi
  414d63:	jmp    0x362d:0x71985dbd
  414d6a:	jo     0x414da9
  414d6c:	xor    ebp,ecx
  414d6e:	in     eax,0xd7
  414d70:	jle    0x414dec
  414d72:	or     BYTE PTR [ebp-0x3d45c75c],bl
  414d78:	xchg   BYTE PTR [edx],dl
  414d7a:	lahf   
  414d7b:	pusha  
  414d7c:	cmp    ecx,DWORD PTR [edi-0x182ae3e5]
  414d82:	pop    esi
  414d83:	data16 fcom QWORD PTR [esi+0x3c]
  414d87:	pushf  
  414d88:	dec    edi
  414d89:	jl     0x414df2
  414d8b:	xchg   esp,eax
  414d8c:	cld    
  414d8d:	(bad)
  414d91:	push   ss
  414d92:	add    BYTE PTR [edx],0xea
  414d95:	pop    es
  414d96:	jge    0x414d7b
  414d98:	lods   al,BYTE PTR ds:[esi]
  414d99:	std    
  414d9a:	mov    edi,0xf65e54ec
  414d9f:	ds popf 
  414da1:	outs   dx,DWORD PTR ds:[esi]
  414da2:	inc    esi
  414da3:	jns    0x414d46
  414da5:	(bad)  
  414da6:	pop    ds
  414da7:	mov    BYTE PTR [ecx-0x5862511d],dh
  414dad:	in     eax,0x18
  414daf:	mov    ch,0xc9
  414db1:	sahf   
  414db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db3:	in     al,0xd5
  414db5:	push   0x9ae891c7
  414dba:	jecxz  0x414db3
  414dbc:	aam    0xfe
  414dbe:	fsub   QWORD PTR [edi-0x4ad6f0e7]
  414dc4:	dec    esp
  414dc5:	mov    esp,0x8afa94d1
  414dca:	outs   dx,DWORD PTR ds:[esi]
  414dcb:	das    
  414dcc:	jae    0x414dd1
  414dce:	loop   0x414dff
  414dd0:	add    bh,bh
  414dd2:	xchg   ecx,eax
  414dd3:	mov    ah,0x7f
  414dd5:	call   0x1bbf7a70
  414dda:	sar    BYTE PTR [ebx+0x55378583],1
  414de0:	and    edx,DWORD PTR ds:0x90a3f190
  414de6:	dec    esi
  414de7:	and    DWORD PTR [ecx],ebp
  414de9:	das    
  414dea:	lods   al,BYTE PTR ds:[esi]
  414deb:	rcl    cl,cl
  414ded:	test   DWORD PTR [eax+eax*1+0x62a7b152],0xffbe75a1
  414df8:	mov    al,ds:0x15fb3fd9
  414dfd:	jne    0x414de2
  414dff:	bnd jbe 0x414e0f
  414e02:	aad    0xab
  414e04:	(bad)  
  414e05:	and    BYTE PTR [eax],cl
  414e07:	pop    ds
  414e08:	sbb    eax,0xd15cda2d
  414e0d:	pusha  
  414e0e:	test   eax,0xa7f596f0
  414e13:	jp     0x414e38
  414e15:	aaa    
  414e16:	test   BYTE PTR [eax],dl
  414e18:	clc    
  414e19:	or     al,0x1f
  414e1b:	sar    ebp,0x52
  414e1e:	sbb    eax,DWORD PTR [edx+0x1b]
  414e21:	fdiv   QWORD PTR [ecx+0x32]
  414e24:	lock mov ecx,0xdd8fab76
  414e2a:	arpl   WORD PTR [ebx+edi*2+0x3f],bx
  414e2e:	lds    esp,FWORD PTR [edi+0xd7b2856]
  414e34:	inc    edx
  414e35:	stc    
  414e36:	fisubr WORD PTR [esi-0x6b14fe31]
  414e3c:	pop    edi
  414e3d:	inc    edx
  414e3e:	mov    eax,0x9f06c5cb
  414e43:	ja     0x414e31
  414e45:	cli    
  414e46:	xchg   ebx,eax
  414e47:	mov    cl,0xf1
  414e49:	or     DWORD PTR [ebx],ebp
  414e4b:	jmp    0xe1e92eec
  414e50:	sub    dl,al
  414e52:	out    0x3b,eax
  414e54:	or     ecx,0x69
  414e57:	enter  0x2162,0x11
  414e5b:	xchg   ebx,eax
  414e5c:	ins    BYTE PTR es:[edi],dx
  414e5d:	not    BYTE PTR [esi+eax*4-0x50486b0c]
  414e64:	aaa    
  414e65:	arpl   WORD PTR [ebx-0x1ef10fec],dx
  414e6b:	icebp  
  414e6c:	add    cl,BYTE PTR [ebx-0x23266ac4]
  414e72:	into   
  414e73:	mov    al,ds:0xd9f885f8
  414e78:	adc    ch,cl
  414e7a:	idiv   BYTE PTR [ebp-0x22]
  414e7d:	icebp  
  414e7e:	sahf   
  414e7f:	hlt    
  414e80:	and    esi,esp
  414e82:	test   al,0xb4
  414e84:	fisttp QWORD PTR ds:0xd7a92a6a
  414e8a:	inc    esp
  414e8b:	and    eax,0x5fbeba20
  414e90:	(bad)  
  414e91:	pop    ss
  414e92:	push   0x497313ec
  414e97:	out    dx,al
  414e98:	loope  0x414f05
  414e9a:	or     al,0x82
  414e9c:	mov    ebp,DWORD PTR [ecx]
  414e9e:	repz jecxz 0x414e44
  414ea1:	test   eax,edi
  414ea3:	les    ebx,FWORD PTR [edi+0x5b]
  414ea6:	ja     0x414e77
  414ea8:	sub    bl,BYTE PTR [ebp+0x26]
  414eab:	jecxz  0x414f20
  414ead:	sub    DWORD PTR [ebx+eiz*2-0x1e],esp
  414eb1:	shl    BYTE PTR [ecx+eax*1-0x304d7f0],cl
  414eb8:	mov    esp,ebx
  414eba:	dec    esp
  414ebb:	xor    BYTE PTR [eax],0x2f
  414ebe:	pop    esp
  414ebf:	and    BYTE PTR [eax+eax*2-0x58360333],cl
  414ec6:	xor    ecx,ecx
  414ec8:	popa   
  414ec9:	rol    BYTE PTR [esi-0x64],0x52
  414ecd:	and    eax,0x1cf9c3da
  414ed2:	in     eax,dx
  414ed3:	aaa    
  414ed4:	jl     0x414f2d
  414ed6:	aas    
  414ed7:	push   0xaaa7c720
  414edc:	sbb    ebp,esp
  414ede:	jmp    0xde7c3c5c
  414ee3:	mov    esp,0x67538402
  414ee8:	push   ecx
  414ee9:	xchg   BYTE PTR [ebx-0x5fc4440],ah
  414eef:	fucom  st(3)
  414ef1:	mov    ds:0xb0fd5344,al
  414ef6:	sub    cl,ah
  414ef8:	pop    ss
  414ef9:	es sahf 
  414efb:	xchg   BYTE PTR [edx-0x6da97c4],bh
  414f01:	nop    DWORD PTR [edi+esi*8+0x10527613]
  414f09:	lods   eax,DWORD PTR ds:[esi]
  414f0a:	push   ds
  414f0b:	ins    DWORD PTR es:[edi],dx
  414f0c:	call   0x6cb11c09
  414f11:	in     eax,0x6b
  414f13:	aam    0x9b
  414f15:	sbb    esi,DWORD PTR [edi]
  414f17:	push   eax
  414f18:	outs   dx,BYTE PTR ds:[esi]
  414f19:	and    al,0xa7
  414f1b:	shr    BYTE PTR [edx+ebx*8-0x3b],1
  414f1f:	xchg   ecx,eax
  414f20:	loopne 0x414f3f
  414f22:	inc    ebx
  414f23:	call   0xaa9a:0x9a576225
  414f2a:	test   al,0xb4
  414f2c:	inc    ebx
  414f2d:	je     0x414ef9
  414f2f:	sbb    eax,0x406a6b29
  414f34:	pushf  
  414f35:	add    edi,DWORD PTR [ebx]
  414f37:	mov    ah,0xb8
  414f39:	loope  0x414fa1
  414f3b:	xchg   dl,al
  414f3d:	jmp    0x414ec1
  414f3f:	aad    0x75
  414f41:	mov    ch,0xf
  414f43:	dec    edi
  414f44:	cs clc 
  414f46:	jo     0x414ede
  414f48:	push   es
  414f49:	and    DWORD PTR [ebx-0x62b387bc],esi
  414f4f:	push   esi
  414f50:	pusha  
  414f51:	pop    es
  414f52:	jno    0x414f01
  414f54:	pop    es
  414f55:	fdivr  DWORD PTR [edx+0x77c6f082]
  414f5b:	das    
  414f5c:	push   0xe4cf84aa
  414f61:	push   ecx
  414f62:	sbb    dl,ch
  414f64:	mov    esp,0xfac6b4b3
  414f69:	mov    esi,0x79da8786
  414f6e:	jbe    0x414f83
  414f70:	add    al,0x31
  414f72:	test   al,0x45
  414f74:	jg     0x414f46
  414f76:	retf   0xeaf2
  414f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f7a:	icebp  
  414f7b:	xchg   ecx,eax
  414f7c:	loopne 0x414eff
  414f7e:	xlat   BYTE PTR ds:[ebx]
  414f7f:	mov    edi,0x4ae4a80a
  414f84:	mov    DWORD PTR [ebx+esi*1-0x12],0x93cecf5d
  414f8c:	js     0x414f9a
  414f8e:	retf   0xdc53
  414f91:	(bad)  
  414f93:	jns    0x415006
  414f95:	jge    0x415002
  414f97:	outs   dx,DWORD PTR ds:[esi]
  414f98:	sub    al,0xe1
  414f9a:	jge    0x414ff1
  414f9c:	pop    esp
  414f9d:	xor    ecx,DWORD PTR [esi-0x70]
  414fa0:	int    0x43
  414fa2:	add    eax,0xceec948
  414fa7:	lods   eax,DWORD PTR gs:[esi]
  414fa9:	jp     0x415027
  414fab:	xor    esp,esp
  414fad:	xchg   edi,eax
  414fae:	ret    
  414faf:	add    dh,BYTE PTR [edi-0x19c9dc10]
  414fb5:	lods   al,BYTE PTR ds:[esi]
  414fb6:	or     al,0x65
  414fb8:	ins    DWORD PTR es:[edi],dx
  414fb9:	nop
  414fba:	lea    ebx,[ebx]
  414fbc:	out    dx,eax
  414fbd:	loopne 0x414f49
  414fbf:	mov    edi,0x201d9e5f
  414fc4:	mov    bh,BYTE PTR [edx-0xaf98424]
  414fca:	test   al,0x9f
  414fcc:	test   DWORD PTR [edx-0x5d],ecx
  414fcf:	inc    eax
  414fd0:	mov    dh,0x51
  414fd2:	xchg   DWORD PTR [ebx-0x1d],edx
  414fd5:	lods   al,BYTE PTR ds:[esi]
  414fd6:	sub    eax,DWORD PTR [eax-0x6e]
  414fd9:	mov    ds:0xfd01b264,al
  414fde:	shl    BYTE PTR [eax-0x73],cl
  414fe1:	push   es
  414fe2:	or     BYTE PTR ss:0x3855fe77,0x7
  414fea:	stc    
  414feb:	add    al,0x8
  414fed:	push   esi
  414fee:	ja     0x415026
  414ff0:	shl    DWORD PTR [ebp-0x34],cl
  414ff3:	arpl   WORD PTR [edi-0x2c560f52],bx
  414ff9:	ins    BYTE PTR es:[edi],dx
  414ffa:	cwde   
  414ffb:	fbstp  TBYTE PTR [edi]
  414ffd:	adc    BYTE PTR [ebp-0x11c5a422],al
  415003:	bound  edx,QWORD PTR [ebx-0x4659dd09]
  415009:	cli    
  41500a:	test   DWORD PTR [ecx-0x384f644c],esi
  415010:	jb     0x414ff9
  415012:	popf   
  415013:	inc    esi
  415014:	mov    edi,0xa1212bdb
  415019:	xlat   BYTE PTR ds:[ebx]
  41501a:	or     ch,BYTE PTR [ecx-0x23f6b60]
  415020:	jmp    0x4398:0x5f76f144
  415027:	xor    ecx,DWORD PTR [eax-0x58]
  41502a:	push   edx
  41502b:	push   edx
  41502c:	sti    
  41502d:	clc    
  41502e:	and    cl,dh
  415030:	gs push edx
  415032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415033:	leave  
  415034:	arpl   WORD PTR [ecx-0x68565b68],sp
  41503a:	adc    DWORD PTR [edi+0x384f98d3],edi
  415040:	idiv   cl
  415042:	loopne 0x415020
  415044:	inc    esi
  415045:	adc    al,0x7a
  415047:	jo     0x41507e
  415049:	xchg   ecx,eax
  41504a:	repnz sub eax,0x134f7a5b
  415050:	(bad)  
  415051:	xchg   edi,eax
  415052:	div    DWORD PTR [ebp-0x58]
  415055:	call   0x5840:0xf3962e60
  41505c:	call   0xcdaa:0x40902757
  415063:	stc    
  415064:	jnp    0x415067
  415066:	jg     0x4150b9
  415068:	lods   eax,DWORD PTR ds:[esi]
  415069:	push   eax
  41506a:	mov    edi,0xd0b93adb
  41506f:	dec    esi
  415070:	in     eax,dx
  415071:	pop    edx
  415072:	cmove  edx,DWORD PTR [esi+edx*1-0x20685679]
  41507a:	mov    ds:0xa270ca28,al
  41507f:	daa    
  415080:	out    0x1d,al
  415082:	push   ds
  415083:	sub    edi,eax
  415085:	(bad)  
  415086:	mov    ebp,0xe8443451
  41508b:	(bad)  
  41508c:	sti    
  41508d:	out    0xf3,al
  41508f:	repnz cmp eax,0x2ee98e63
  415095:	cmp    bh,BYTE PTR [eax+0x1aeb9bf4]
  41509b:	ret    0x3e8b
  41509e:	sar    ebp,1
  4150a0:	add    dl,BYTE PTR [edi]
  4150a2:	std    
  4150a3:	(bad)  
  4150a5:	sub    dl,BYTE PTR [esi-0x8]
  4150a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a9:	or     eax,0x7e017ae4
  4150ae:	mov    eax,0x79d2c121
  4150b3:	seta   cl
  4150b6:	leave  
  4150b7:	aaa    
  4150b8:	test   BYTE PTR [bp+di-0x3],cl
  4150bc:	inc    edi
  4150bd:	xchg   esi,eax
  4150be:	aas    
  4150bf:	daa    
  4150c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c1:	mov    dh,0xf3
  4150c3:	icebp  
  4150c4:	stc    
  4150c5:	jle    0x415133
  4150c7:	js     0x415086
  4150c9:	and    edi,ecx
  4150cb:	jle    0x4150ef
  4150cd:	sbb    eax,0x60586f51
  4150d2:	out    dx,eax
  4150d3:	neg    edi
  4150d5:	in     al,0xd6
  4150d7:	add    ebp,DWORD PTR [ebx+edx*2-0x615ce725]
  4150de:	mov    ch,0x89
  4150e0:	or     ch,BYTE PTR [eax+ecx*8+0x539185af]
  4150e7:	mov    ecx,0xc62cdf33
  4150ec:	in     eax,dx
  4150ed:	in     eax,dx
  4150ee:	sbb    eax,0x42a8e42
  4150f3:	dec    esi
  4150f4:	pop    ds
  4150f5:	shl    DWORD PTR [ecx-0x78],cl
  4150f8:	cmp    eax,DWORD PTR [eax+0x44]
  4150fb:	fist   WORD PTR [edi+0x495b68d2]
  415101:	mov    ch,0x1f
  415103:	push   ss
  415104:	cmp    BYTE PTR ds:0xeb3c6483,al
  41510a:	daa    
  41510b:	push   edi
  41510c:	and    DWORD PTR [ebx-0x6fbf51da],eax
  415112:	jmp    0x414a:0xa6c7c431
  415119:	mov    edx,0x9432689b
  41511e:	ins    DWORD PTR es:[edi],dx
  41511f:	mov    ch,0x3e
  415121:	and    al,0xc7
  415123:	call   0x19d5:0xa1618ad2
  41512a:	ins    BYTE PTR es:[edi],dx
  41512b:	icebp  
  41512c:	or     BYTE PTR [edx+0x73ef5cad],0x6a
  415133:	and    al,0xda
  415135:	add    al,0xfa
  415137:	in     al,0x19
  415139:	shr    BYTE PTR [ebx],1
  41513b:	rcr    BYTE PTR ds:0x7170c29f,0xfa
  415142:	pop    eax
  415143:	push   esp
  415144:	lods   eax,DWORD PTR ds:[esi]
  415145:	fdivr  st(7),st
  415147:	ret    
  415148:	adc    eax,0x48150a18
  41514d:	sbb    BYTE PTR [edi-0x41],bl
  415150:	call   0x8661:0x887c01c2
  415157:	out    dx,al
  415158:	push   ecx
  415159:	repnz sbb BYTE PTR [edi+0x70],bh
  41515d:	pop    ebx
  41515e:	mov    ds:0x3d8f3475,eax
  415163:	mov    dh,0xb3
  415165:	bound  ecx,QWORD PTR [edx-0x78530f02]
  41516b:	pusha  
  41516c:	mov    ebp,0xf4c6b419
  415171:	xchg   esp,eax
  415172:	je     0x4151d4
  415174:	js     0x41517f
  415176:	jnp    0x415110
  415178:	cdq    
  415179:	xchg   edi,eax
  41517a:	out    0x5,eax
  41517c:	aaa    
  41517d:	test   BYTE PTR [ecx+0x23bcc718],dh
  415183:	ds or  eax,0xa6ea0972
  415189:	cmp    DWORD PTR [ebp+0x6b],eax
  41518c:	mov    ch,0x2a
  41518e:	mov    WORD PTR [ecx+0x5cc93999],ss
  415194:	out    dx,al
  415195:	in     al,dx
  415196:	sbb    DWORD PTR [bx],0x14
  41519a:	push   ebx
  41519b:	fcom   QWORD PTR [edx+0x10]
  41519e:	adc    eax,0x31b0eda9
  4151a3:	rcl    cl,0x66
  4151a6:	adc    al,0x9a
  4151a8:	sub    eax,DWORD PTR [esi-0x11]
  4151ab:	sbb    ch,BYTE PTR [ebx]
  4151ad:	mov    al,0xa
  4151af:	mov    ds:0x20497d26,al
  4151b4:	les    edx,FWORD PTR [ebx+esi*1-0x5e]
  4151b8:	jae    0x415230
  4151ba:	cmp    DWORD PTR [esi+edi*2-0x5410afbf],edi
  4151c1:	adc    edi,DWORD PTR [eax]
  4151c3:	sbb    ebx,eax
  4151c5:	and    al,0x3d
  4151c7:	inc    ebp
  4151c8:	mov    fs:0xdd732fa1,eax
  4151ce:	aaa    
  4151cf:	pop    ss
  4151d0:	lds    edx,FWORD PTR [edi+0x72]
  4151d3:	cmp    esi,DWORD PTR [edx-0x7efe230c]
  4151d9:	inc    ebp
  4151da:	rol    BYTE PTR [eax-0x189a7fd4],0xf3
  4151e1:	inc    ebp
  4151e2:	inc    BYTE PTR [ebx]
  4151e4:	shr    cl,1
  4151e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e7:	fadd   QWORD PTR ds:0xb1e97ecb
  4151ed:	ins    DWORD PTR es:[edi],dx
  4151ee:	sbb    BYTE PTR [eax],bl
  4151f0:	pop    ss
  4151f1:	lods   al,BYTE PTR ds:[esi]
  4151f2:	mov    ch,0x2f
  4151f4:	stos   BYTE PTR es:[edi],al
  4151f5:	sti    
  4151f6:	mov    WORD PTR [ebp+0x5ed57351],?
  4151fc:	push   ecx
  4151fd:	push   ds
  4151fe:	jb     0x415255
  415200:	in     al,0x9c
  415202:	sub    bh,ch
  415204:	mov    ebp,0xf160c3ba
  415209:	loope  0x4151ff
  41520b:	hlt    
  41520c:	mov    ds:0x624824e6,eax
  415211:	cmp    ecx,DWORD PTR [ebx+0x2e]
  415214:	in     al,0x67
  415216:	dec    ebp
  415217:	ret    0xfc26
  41521a:	jl     0x415247
  41521c:	aaa    
  41521d:	push   esi
  41521e:	aas    
  41521f:	jmp    FWORD PTR [bp+di+0x4b5]
  415224:	sub    eax,0x77aa3526
  415229:	pop    edi
  41522a:	cmp    edx,DWORD PTR [eax+0x49]
  41522d:	sahf   
  41522e:	or     esi,esi
  415230:	xor    al,0x94
  415232:	cmp    ebp,DWORD PTR ds:0xac8b6c47
  415238:	pop    ebx
  415239:	jmp    0x415250
  41523b:	jmp    0x4151fc
  41523d:	sar    DWORD PTR [esi-0x45],0xb7
  415241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415242:	pop    esp
  415243:	and    dh,BYTE PTR [ebx+0x7239e05c]
  415249:	and    eax,0x6436320b
  41524e:	mov    bl,0x63
  415250:	push   ds
  415251:	(bad)  
  415252:	js     0x415288
  415254:	push   0x67
  415256:	pop    ecx
  415257:	ret    0xa996
  41525a:	push   edi
  41525b:	jo     0x4152cb
  41525d:	dec    esp
  41525e:	out    0x49,al
  415260:	jmp    0xf39b:0x1b373e2
  415267:	sub    eax,0x6609042c
  41526c:	cmp    eax,0xcdd02e
  415271:	loopne 0x41529f
  415273:	shr    BYTE PTR [edi+ebp*4-0x5a],cl
  415277:	hlt    
  415278:	in     eax,0xdd
  41527a:	push   edx
  41527b:	xchg   edx,eax
  41527c:	jae    0x415278
  41527e:	dec    esp
  41527f:	jb     0x4152dd
  415281:	(bad)  
  415282:	lods   al,BYTE PTR ds:[esi]
  415283:	cwde   
  415284:	popf   
  415285:	add    cl,BYTE PTR [ebx+eiz*2]
  415288:	mov    ah,0x5
  41528a:	scas   al,BYTE PTR es:[edi]
  41528b:	cmp    al,0x7f
  41528d:	scas   eax,DWORD PTR es:[edi]
  41528e:	or     cl,cl
  415290:	int    0x9c
  415292:	dec    edi
  415293:	mov    bh,0x71
  415295:	adc    al,0xde
  415297:	stos   DWORD PTR es:[edi],eax
  415298:	cdq    
  415299:	push   ebx
  41529a:	sti    
  41529b:	mov    cs,ebx
  41529d:	bnd jg 0x415270
  4152a0:	dec    ebx
  4152a1:	test   al,0xb9
  4152a3:	sbb    eax,0x2ccc8d37
  4152a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a9:	fwait
  4152aa:	daa    
  4152ab:	push   ecx
  4152ac:	sbb    BYTE PTR [edx+0x47c222e1],dl
  4152b2:	add    BYTE PTR [edx-0x2b],dh
  4152b5:	dec    edi
  4152b6:	mov    ecx,DWORD PTR [edi-0x42]
  4152b9:	and    al,0xae
  4152bb:	das    
  4152bc:	sub    DWORD PTR [esi],ebp
  4152be:	jmp    DWORD PTR fs:[ebp-0x619af323]
  4152c5:	je     0x415324
  4152c7:	adc    dl,BYTE PTR [ebx]
  4152c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152ca:	out    0xba,eax
  4152cc:	lods   al,BYTE PTR ds:[esi]
  4152cd:	cwde   
  4152ce:	fild   WORD PTR [ecx-0x74]
  4152d1:	repz sbb al,0xbe
  4152d4:	in     eax,dx
  4152d5:	imul   esi,DWORD PTR [eax+ebp*2],0x34
  4152d9:	mov    dh,0xc6
  4152db:	enter  0xf17a,0x4d
  4152df:	jbe    0x4152fc
  4152e1:	jmp    0x41528f
  4152e3:	xchg   ecx,eax
  4152e4:	into   
  4152e5:	jp     0x4152cf
  4152e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152e8:	(bad)
  4152eb:	jne    0x4152d8
  4152ed:	push   cs
  4152ee:	xor    bh,BYTE PTR [ebx+0x1ebc9140]
  4152f4:	repnz int 0x45
  4152f7:	sub    eax,0xd58dece9
  4152fc:	cmp    ebp,esp
  4152fe:	out    dx,al
  4152ff:	xor    eax,DWORD PTR [edx+0x34]
  415302:	js     0x4152b7
  415304:	cdq    
  415305:	mov    gs,WORD PTR [esi+0x6518296e]
  41530b:	xor    dh,0x59
  41530e:	cmp    dh,BYTE PTR [ecx+0x1]
  415311:	ds xchg ebp,eax
  415313:	xchg   edx,eax
  415314:	xchg   esp,eax
  415315:	dec    esi
  415316:	in     eax,dx
  415317:	inc    edx
  415318:	xchg   edx,eax
  415319:	leave  
  41531a:	aam    0x58
  41531c:	outs   dx,DWORD PTR ds:[esi]
  41531d:	sub    DWORD PTR [ebx-0x11],eax
  415320:	pop    ss
  415321:	adc    BYTE PTR ds:0xa17c8e40,0xfa
  415328:	aas    
  415329:	and    DWORD PTR [esi],ecx
  41532b:	xchg   esp,eax
  41532c:	into   
  41532d:	and    DWORD PTR [edi+0x17797f56],ecx
  415333:	adc    eax,0x25d264ae
  415338:	addr16 cmc 
  41533a:	fdivr  st,st(7)
  41533c:	mov    cl,0x16
  41533e:	fisubr DWORD PTR [esi+eiz*2+0x13bce686]
  415345:	or     al,0x82
  415347:	out    0xa8,eax
  415349:	and    ch,BYTE PTR [edi+0x7f99bc91]
  41534f:	cs jo  0x4152f5
  415352:	add    eax,0x1120b1cc
  415357:	out    dx,eax
  415358:	xor    DWORD PTR [ebp+0x18],edx
  41535b:	inc    edx
  41535c:	stos   DWORD PTR es:[edi],eax
  41535d:	data16 cmc 
  41535f:	shl    BYTE PTR [ebx],cl
  415361:	xor    esi,0x556155fc
  415367:	add    DWORD PTR [edx],0x4a
  41536a:	jno    0x41535d
  41536c:	iret   
  41536d:	fisttp WORD PTR [eax-0x65]
  415370:	add    al,0x59
  415372:	ins    BYTE PTR es:[edi],dx
  415373:	out    0x7b,al
  415375:	dec    edi
  415376:	ins    DWORD PTR es:[edi],dx
  415377:	push   esi
  415378:	xlat   BYTE PTR ds:[ebx]
  415379:	lea    eax,[edi+ebx*1+0x5e62c7d]
  415380:	mov    bl,0xe
  415382:	dec    ebp
  415383:	dec    eax
  415384:	xchg   DWORD PTR [eax-0x6c],ebp
  415387:	xor    al,0x54
  415389:	inc    edi
  41538a:	jp     0x415312
  41538c:	adc    edi,DWORD PTR [edx-0x29]
  41538f:	sub    ecx,DWORD PTR [edi-0x72701309]
  415395:	ds stos DWORD PTR es:[edi],eax
  415397:	and    BYTE PTR [esi+0x63],al
  41539a:	dec    ebp
  41539b:	jns    0x41538d
  41539d:	repz push ebx
  41539f:	push   ecx
  4153a0:	sbb    ch,BYTE PTR [edx+0x12]
  4153a3:	mov    al,0x89
  4153a5:	sub    al,0x63
  4153a7:	mov    ebp,0x4fc2fe3a
  4153ac:	cmp    DWORD PTR [esi+eax*4],0x17
  4153b0:	sub    eax,0x82cd18fb
  4153b5:	push   esi
  4153b6:	lock int 0xfa
  4153b9:	int3   
  4153ba:	ins    DWORD PTR es:[edi],dx
  4153bb:	and    esi,0x2d686d0e
  4153c1:	lahf   
  4153c2:	push   es
  4153c3:	mov    ecx,0x77f5d517
  4153c8:	hlt    
  4153c9:	jns    0x415426
  4153cb:	imul   ebp,DWORD PTR [eax-0x7c1caf0e],0xdc5a97b9
  4153d5:	xor    BYTE PTR [eax+eiz*4-0x70],0xcd
  4153da:	jae    0x4153f0
  4153dc:	fs aas 
  4153de:	lds    ebx,FWORD PTR [esp+edi*1-0x9a11d2]
  4153e5:	ret    0x144c
  4153e8:	or     ecx,eax
  4153ea:	js     0x415379
  4153ec:	call   0x8b25a4e7
  4153f1:	addr16 jl 0x4153b1
  4153f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f5:	jge    0x4153ee
  4153f7:	mov    esi,0x73f1fe80
  4153fc:	pop    sp
  4153fe:	jp     0x415440
  415400:	xor    al,0xc7
  415402:	sbb    DWORD PTR [edx-0xe],ebx
  415405:	cwde   
  415406:	adc    eax,DWORD PTR [esi-0x38]
  415409:	hlt    
  41540a:	cs popa 
  41540c:	mov    esi,0xf0d1e772
  415411:	add    eax,0x4fabbfdf
  415416:	std    
  415417:	sti    
  415418:	add    al,BYTE PTR [ebp+0x5e59647b]
  41541e:	retf   0xa821
  415421:	mov    ds:0x9ff69ec9,al
  415426:	mov    ds:0x2b0c709c,al
  41542b:	adc    al,0xab
  41542d:	mov    edx,0x45916d1c
  415432:	stos   DWORD PTR es:[edi],eax
  415433:	fld    DWORD PTR [eax-0x7419bca1]
  415439:	inc    eax
  41543a:	or     ecx,DWORD PTR ds:0xef529165
  415440:	out    dx,eax
  415441:	adc    ah,BYTE PTR [ebx+0x55]
  415444:	push   0x70
  415446:	jne    0x4154b6
  415448:	mov    ds:0xdb629849,al
  41544d:	shl    ecx,0x4e
  415450:	push   ecx
  415451:	sub    DWORD PTR [eax+0x18],eax
  415454:	add    BYTE PTR ds:0xfcfb719b,dh
  41545a:	push   esp
  41545b:	addr16 jmp 0x86c295b0
  415461:	(bad)  
  415463:	mov    ecx,0xd90d6864
  415468:	adc    eax,0x1ae21e66
  41546d:	inc    eax
  41546e:	mov    ebp,0xb4888e39
  415473:	nop
  415474:	cdq    
  415475:	push   eax
  415476:	sub    ah,BYTE PTR [ebx+0x11]
  415479:	(bad)  [edi-0x1c]
  41547c:	cwde   
  41547d:	retf   0xcbaa
  415480:	xor    eax,0xb7210a6a
  415485:	sub    ebx,esi
  415487:	es push eax
  415489:	dec    ebp
  41548a:	aas    
  41548b:	pushf  
  41548c:	prefetch BYTE PTR [esi+0x6]
  415490:	mov    edi,0xbe4f072f
  415495:	dec    edi
  415496:	cmc    
  415497:	push   edx
  415498:	ja     0x41543e
  41549a:	ret    
  41549b:	and    dl,BYTE PTR [eax+0x3d]
  41549e:	repnz sbb al,0xd2
  4154a1:	jnp    0x4154e1
  4154a3:	lods   al,BYTE PTR ds:[esi]
  4154a4:	lahf   
  4154a5:	retf   
  4154a6:	inc    eax
  4154a7:	sub    BYTE PTR ds:0x2f2b7300,al
  4154ad:	push   edx
  4154ae:	add    ch,BYTE PTR [ebp-0x3aa75323]
  4154b4:	xor    ebx,DWORD PTR [ebp-0x3f7e35f0]
  4154ba:	(bad)  
  4154bb:	jg     0x415501
  4154bd:	hlt    
  4154be:	inc    esp
  4154bf:	lods   eax,DWORD PTR ds:[esi]
  4154c0:	cmp    al,0xb
  4154c2:	in     eax,dx
  4154c3:	xchg   DWORD PTR [ecx-0x11],eax
  4154c6:	mov    BYTE PTR [edx-0x5a],dl
  4154c9:	jecxz  0x415468
  4154cb:	imul   ebp,DWORD PTR [edi+0x66],0xd6610a90
  4154d2:	mov    ah,0xaf
  4154d4:	fdiv   DWORD PTR [ebx+ebp*4]
  4154d7:	ror    DWORD PTR [esp+ebx*8],0xcb
  4154db:	xchg   esp,eax
  4154dc:	mov    dx,0x4b04
  4154e0:	outs   dx,DWORD PTR ds:[esi]
  4154e1:	mov    ch,0x7e
  4154e3:	imul   ebx,edi,0xffffffc7
  4154e6:	xor    BYTE PTR [esi+0x4b],al
  4154e9:	mov    ecx,0x5ba5f57e
  4154ee:	ins    DWORD PTR es:[edi],dx
  4154ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154f0:	jns    0x415541
  4154f2:	dec    ebp
  4154f3:	jb     0x415550
  4154f5:	rcr    BYTE PTR [eax],1
  4154f7:	mov    BYTE PTR [ecx+ebp*8-0x3fd0acf3],ah
  4154fe:	fs pop esi
  415500:	jmp    eax
  415502:	fisttp WORD PTR [esi]
  415504:	cld    
  415505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415506:	dec    edi
  415507:	dec    ebp
  415508:	(bad)
  41550c:	daa    
  41550d:	stos   BYTE PTR es:[edi],al
  41550e:	xchg   edi,eax
  41550f:	shl    DWORD PTR [ebp-0x68],1
  415512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415513:	sub    eax,0x9567e880
  415518:	and    BYTE PTR [ebp+edx*4-0x50002237],bl
  41551f:	stos   DWORD PTR es:[edi],eax
  415520:	xor    DWORD PTR [eax],edi
  415522:	fcmovnu st,st(4)
  415524:	(bad)
  415528:	jp     0x4155a8
  41552a:	sti    
  41552b:	mov    ecx,0xc8e63978
  415530:	jns    0x41553c
  415532:	mov    bl,0xdc
  415534:	mov    bl,0x22
  415536:	jo     0x4154f4
  415538:	sub    eax,0x4c020ae5
  41553d:	retf   0x50a8
  415540:	test   eax,0x6962bed9
  415545:	hlt    
  415546:	call   0x2181:0x6d7fb57e
  41554d:	lds    eax,FWORD PTR es:[ebp-0x41]
  415551:	fist   WORD PTR [edx-0x6]
  415554:	xor    BYTE PTR [edi+0x3ac4f33a],dh
  41555a:	test   DWORD PTR [edx+0x45af70ad],esp
  415560:	push   esp
  415561:	mov    edi,0x7842ef67
  415566:	retf   
  415567:	dec    ecx
  415568:	mov    DWORD PTR [ebp+0x5bf1ad7c],0xde721ff6
  415572:	scas   eax,DWORD PTR es:[edi]
  415573:	xlat   BYTE PTR ds:[ebx]
  415574:	repz out 0x68,eax
  415577:	push   eax
  415578:	xchg   ebx,eax
  415579:	jns    0x4155ee
  41557b:	sub    DWORD PTR [eax-0x18],edx
  41557e:	stos   DWORD PTR es:[edi],eax
  41557f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415580:	mov    ah,0xd
  415582:	and    DWORD PTR [edx-0x2f],ecx
  415585:	inc    esi
  415586:	mov    eax,0xc1ccd45
  41558b:	cmp    DWORD PTR [edx],esi
  41558d:	leave  
  41558e:	leave  
  41558f:	cdq    
  415590:	xlat   BYTE PTR ds:[ebx]
  415591:	and    BYTE PTR [ecx+eiz*1],al
  415594:	xchg   ecx,eax
  415595:	sahf   
  415596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415597:	dec    edi
  415598:	rdtsc  
  41559a:	cmp    edi,esi
  41559c:	jge    0x41558e
  41559e:	adc    eax,0xeec38dd4
  4155a3:	cli    
  4155a4:	(bad)  
  4155a5:	stos   BYTE PTR es:[edi],al
  4155a6:	out    dx,eax
  4155a7:	pushf  
  4155a8:	pop    ss
  4155a9:	push   es
  4155aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ab:	dec    edi
  4155ac:	test   DWORD PTR [ebp-0x35020fe5],ebp
  4155b2:	dec    esi
  4155b3:	dec    ebx
  4155b4:	scas   eax,DWORD PTR es:[edi]
  4155b5:	jo     0x4155c4
  4155b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155b8:	xor    ch,BYTE PTR [edx-0x2a]
  4155bb:	pop    ds
  4155bc:	pop    edx
  4155bd:	add    dh,ch
  4155bf:	mov    ah,0x12
  4155c1:	stos   DWORD PTR es:[edi],eax
  4155c2:	xor    al,0x4e
  4155c4:	xor    dl,BYTE PTR [eax-0x7b]
  4155c7:	daa    
  4155c8:	and    al,0xfa
  4155ca:	adc    BYTE PTR [esi-0x60e8634b],ch
  4155d0:	and    al,BYTE PTR [edi]
  4155d2:	fidivr WORD PTR [eax+edx*8]
  4155d5:	push   es
  4155d6:	adc    BYTE PTR [edi+0x70],dh
  4155d9:	mov    ds:0x23c474df,al
  4155de:	pushf  
  4155df:	cmp    al,al
  4155e1:	inc    ebx
  4155e2:	sbb    eax,0x8dce10dd
  4155e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e8:	mov    bl,BYTE PTR [edx+0x421f5a1d]
  4155ee:	inc    ebp
  4155ef:	mov    ds:0x6e1ba0b5,al
  4155f4:	push   edx
  4155f5:	retf   0x29fc
  4155f8:	mov    ebp,0xeb247d18
  4155fd:	mov    ds:0x59dc78e4,eax
  415602:	cdq    
  415603:	xlat   BYTE PTR fs:[ebx]
  415605:	ficomp WORD PTR [eax-0x2761641]
  41560b:	mov    ch,0x36
  41560d:	jmp    DWORD PTR [ebx-0x49]
  415610:	mov    WORD PTR [ebp+0x4d],?
  415613:	pop    ecx
  415614:	bound  edi,QWORD PTR ds:0x9efa88a2
  41561a:	sar    BYTE PTR [ecx],cl
  41561c:	jbe    0x41568a
  41561e:	pop    esi
  41561f:	repz jbe 0x41569c
  415622:	add    BYTE PTR [edx],dl
  415624:	mov    dl,0xb4
  415626:	test   DWORD PTR [ebp+0x3e],ebp
  415629:	aas    
  41562a:	int    0xaf
  41562c:	mov    DWORD PTR [esi+0x61c521ad],edx
  415632:	hlt    
  415633:	push   ss
  415634:	push   cs
  415635:	jbe    0x41565a
  415637:	(bad)  
  415638:	loop   0x415657
  41563a:	mov    cl,0x84
  41563c:	jnp    0x415688
  41563e:	pop    edx
  41563f:	jmp    0xd406:0xc260cd43
  415646:	mov    al,ah
  415648:	lods   eax,DWORD PTR ds:[esi]
  415649:	push   ebx
  41564a:	jecxz  0x41569f
  41564c:	and    ah,cl
  41564e:	scas   al,BYTE PTR es:[edi]
  41564f:	clc    
  415650:	fwait
  415651:	leave  
  415652:	sub    eax,0xdb93754d
  415657:	fisttp WORD PTR [esi+eiz*2-0x3dbdf9f5]
  41565e:	mov    ch,0xa8
  415660:	adc    cl,dh
  415662:	shl    dh,cl
  415664:	pop    ebx
  415665:	rcl    edx,cl
  415667:	call   0xb446:0xd1b92bda
  41566e:	push   ds
  41566f:	popa   
  415670:	and    ebp,ebx
  415672:	mov    ebp,0xf5454ec2
  415677:	pop    eax
  415678:	or     dh,dh
  41567a:	fadd   QWORD PTR [ecx-0x10]
  41567e:	mov    ds:0x7f179be4,al
  415683:	imul   edi,edx,0x42
  415686:	es jmp 0xabb006ae
  41568c:	pop    esp
  41568d:	cmp    eax,0x6da564bb
  415692:	lahf   
  415693:	mov    eax,ds:0xbca72e1
  415698:	retf   0x9f40
  41569b:	sbb    BYTE PTR [ebx-0x16],dl
  41569e:	(bad)  
  41569f:	scas   al,BYTE PTR es:[edi]
  4156a0:	ins    BYTE PTR es:[edi],dx
  4156a1:	js     0x41570c
  4156a3:	push   ebp
  4156a4:	sbb    al,BYTE PTR [esi-0x175107c9]
  4156aa:	pop    es
  4156ab:	repz ret 0xcd66
  4156af:	test   al,0x6d
  4156b1:	adc    dh,BYTE PTR [ecx-0x22]
  4156b4:	repz push ecx
  4156b6:	push   esp
  4156b7:	call   0x923f:0x2ca4810
  4156be:	shl    DWORD PTR [edx-0x5e],1
  4156c1:	in     eax,0xba
  4156c3:	cmp    al,0xd9
  4156c5:	and    al,0x54
  4156c7:	mov    dh,0x98
  4156c9:	add    BYTE PTR [ecx],ch
  4156cb:	inc    ebp
  4156cc:	(bad)  
  4156ce:	sbb    esi,0x34
  4156d1:	ror    ebp,1
  4156d3:	dec    ecx
  4156d4:	fwait
  4156d5:	inc    eax
  4156d6:	fnstenv [esi]
  4156d8:	mul    BYTE PTR [edi+0x6fd1d78e]
  4156de:	push   esp
  4156df:	sbb    DWORD PTR [si-0x31],0x1590bef4
  4156e7:	stc    
  4156e8:	je     0x41567e
  4156ea:	push   es
  4156eb:	neg    BYTE PTR [edi-0x1f]
  4156ee:	dec    edi
  4156ef:	mov    ?,WORD PTR [ebp+ebp*8-0xa]
  4156f3:	xor    ah,BYTE PTR [esp+ecx*8-0x73]
  4156f7:	icebp  
  4156f8:	fnstsw WORD PTR [ebx-0x31]
  4156fb:	xlat   BYTE PTR ds:[ebx]
  4156fc:	sbb    eax,0x2229e6f
  415701:	loopne 0x415749
  415703:	xchg   edx,eax
  415704:	or     eax,0xd703bddb
  415709:	pop    ebx
  41570a:	pop    ds
  41570b:	inc    esi
  41570c:	ret    0x8fcb
  41570f:	call   0x562a80ef
  415714:	ds sti 
  415716:	sbb    eax,0xf5eeb54a
  41571b:	jmp    0xe421:0xcc23b06b
  415722:	fs mov esi,0x619d6c4a
  415728:	jae    0x4156aa
  41572a:	xor    DWORD PTR [edi],edi
  41572c:	add    dl,cl
  41572e:	mov    eax,0xd57d1be9
  415733:	cmp    esp,DWORD PTR [edx-0x51]
  415736:	dec    ebp
  415737:	add    eax,0x491d5f4b
  41573c:	xchg   esi,eax
  41573d:	and    ebx,edx
  41573f:	inc    esp
  415740:	jmp    0x41578a
  415742:	or     BYTE PTR [eax+0x5],0x9d
  415746:	leave  
  415747:	test   DWORD PTR [eax+0x4c],0x6de17436
  41574e:	dec    esp
  41574f:	add    cl,al
  415751:	adc    al,ch
  415753:	pop    ebx
  415754:	aad    0x8c
  415756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415757:	mov    WORD PTR [esp+eiz*8+0x7db9294],ds
  41575e:	adc    BYTE PTR [ebx+0x13],dh
  415761:	call   FWORD PTR [esi+edi*1+0x5e332a64]
  415768:	fnsave [eax+0x10a2023a]
  41576e:	std    
  41576f:	clc    
  415770:	fldenv [ebp+0x2a]
  415773:	clc    
  415774:	dec    esp
  415775:	sbb    BYTE PTR [eax+eiz*8-0x7f],cl
  415779:	inc    esi
  41577a:	push   eax
  41577b:	xchg   ebx,eax
  41577c:	(bad)
  41577f:	xor    BYTE PTR [eax+0x57],bl
  415782:	sub    esp,esp
  415784:	test   edx,0x8c5fd670
  41578a:	push   eax
  41578b:	outs   dx,DWORD PTR ds:[esi]
  41578c:	jle    0x41574f
  41578e:	add    BYTE PTR [ecx+0x27c48443],ah
  415794:	arpl   WORD PTR es:[edi+0x19],bp
  415798:	lds    esi,FWORD PTR [ecx+0x62d88675]
  41579e:	call   0x6649:0x3822d221
  4157a5:	in     eax,dx
  4157a6:	lods   al,BYTE PTR ds:[esi]
  4157a7:	ja     0x415781
  4157a9:	pop    edx
  4157aa:	mov    bh,0xd8
  4157ac:	mov    dh,0x9f
  4157ae:	xchg   ecx,eax
  4157af:	in     eax,dx
  4157b0:	imul   edx,DWORD PTR [ebp+edx*2+0x5b],0x5a
  4157b5:	xchg   esp,eax
  4157b6:	jl     0x415807
  4157b8:	lahf   
  4157b9:	and    edi,edx
  4157bb:	mov    DWORD PTR [ebx+0x3d],eax
  4157be:	addr16 dec ebp
  4157c0:	retf   
  4157c1:	pop    eax
  4157c2:	mov    esi,0xd766af04
  4157c7:	xchg   esi,eax
  4157c8:	hlt    
  4157c9:	clc    
  4157ca:	retf   0x125d
  4157cd:	dec    ecx
  4157ce:	lock arpl WORD PTR [ecx],bx
  4157d1:	lds    esp,FWORD PTR [edx+0x3c9cc473]
  4157d7:	in     al,0x29
  4157d9:	dec    edx
  4157da:	sub    esp,DWORD PTR [ecx-0x5f]
  4157dd:	aaa    
  4157de:	or     cl,al
  4157e0:	cs jge 0x4157d3
  4157e3:	rcl    DWORD PTR [esi+0x7462bd16],cl
  4157e9:	and    dh,ch
  4157eb:	push   ds
  4157ec:	cdq    
  4157ed:	iret   
  4157ee:	mov    DWORD PTR [ecx+0x404d6472],esi
  4157f4:	jmp    0x9a589e95
  4157f9:	das    
  4157fa:	int    0x20
  4157fc:	dec    edi
  4157fd:	(bad)  
  4157fe:	out    dx,al
  4157ff:	mov    edx,0xdb3acf74
  415804:	icebp  
  415805:	jmp    0x42c4319
  41580a:	pop    ebp
  41580b:	scas   al,BYTE PTR es:[edi]
  41580c:	retf   0xa7cf
  41580f:	dec    edi
  415810:	inc    eax
  415811:	mov    ah,BYTE PTR [edi-0x7b3d37b1]
  415817:	push   ss
  415818:	adc    ah,ch
  41581a:	dec    edi
  41581b:	inc    edx
  41581c:	daa    
  41581d:	rol    BYTE PTR [edi-0x5acc01c2],1
  415823:	mov    al,ds:0xc671eca
  415828:	mov    ebx,0x1fbd7745
  41582d:	jge    0x415815
  41582f:	xchg   esi,eax
  415830:	pop    esi
  415831:	cmp    eax,0x9208793d
  415836:	dec    ebx
  415837:	into   
  415838:	and    esp,0xffffffdd
  41583b:	mov    esi,0x7dd0995f
  415840:	(bad)  
  415841:	mov    esp,0xa8f85675
  415846:	push   ds
  415847:	scas   al,BYTE PTR es:[edi]
  415848:	sbb    DWORD PTR [edx+0x48],edi
  41584b:	push   edi
  41584c:	pop    eax
  41584d:	daa    
  41584e:	jo     0x4157f6
  415850:	xchg   edi,eax
  415851:	rcl    BYTE PTR [edx-0x58fccf69],0x6a
  415858:	add    eax,0x50c4a14
  41585d:	popa   
  41585e:	add    dl,cl
  415860:	sbb    cl,BYTE PTR ds:0x6427bcb9
  415866:	stc    
  415867:	ret    0xc6b7
  41586a:	gs pop edi
  41586c:	dec    DWORD PTR [ebx]
  41586e:	repz in eax,dx
  415870:	cwde   
  415871:	push   0x7c
  415873:	(bad)  
  415874:	dec    ebp
  415875:	(bad)  
  415876:	in     al,0x87
  415878:	jns    0x41588a
  41587a:	cmp    DWORD PTR [esp+ecx*1],ebp
  41587d:	dec    ebp
  41587e:	mov    esi,edi
  415880:	adc    eax,0x5efa9253
  415885:	fsub   QWORD PTR [ebx-0xd]
  415888:	ss imul ebx,edi,0xf4bf7112
  41588f:	jmp    0x72b31fb8
  415894:	add    BYTE PTR [ecx-0x38d81768],ah
  41589a:	aaa    
  41589b:	cmp    al,0x1
  41589d:	rcl    DWORD PTR [esi+0x5b],1
  4158a0:	dec    esi
  4158a1:	repnz cmp bl,BYTE PTR [edx]
  4158a4:	dec    ebx
  4158a5:	ftst   
  4158a7:	shl    BYTE PTR [eax-0x66],cl
  4158aa:	(bad)  
  4158ab:	dec    ecx
  4158ac:	test   BYTE PTR [ebx+0x78f020b2],dl
  4158b2:	dec    edi
  4158b3:	cdq    
  4158b4:	repz and eax,0x1de6d8ce
  4158ba:	pushf  
  4158bb:	lods   eax,DWORD PTR ds:[esi]
  4158bc:	and    ebp,DWORD PTR [esi]
  4158be:	xor    DWORD PTR [eax-0x61],0x4b092f05
  4158c5:	pop    esp
  4158c6:	sbb    dl,BYTE PTR [eax+0x12]
  4158c9:	jae    0x41587a
  4158cb:	pop    esi
  4158cc:	push   esi
  4158cd:	dec    edx
  4158ce:	sub    eax,0xd67c1f7b
  4158d3:	lahf   
  4158d4:	inc    esp
  4158d5:	jp     0x41589f
  4158d7:	push   edx
  4158d8:	mov    esp,0xe77abefc
  4158dd:	mov    edi,0x22ea592
  4158e2:	sub    DWORD PTR [esi-0x49bc2c0b],0xffd4837b
  4158ec:	jne    0x41595f
  4158ee:	ret    
  4158ef:	sub    eax,0x7ef374ad
  4158f4:	test   BYTE PTR ds:0x89f9309e,0x67
  4158fb:	cmp    dl,BYTE PTR [edx]
  4158fd:	dec    esi
  4158fe:	iret   
  4158ff:	add    eax,0xd3a1fcdf
  415904:	fwait
  415905:	jbe    0x4158c7
  415907:	inc    edi
  415908:	push   ds
  415909:	in     eax,dx
  41590a:	aam    0xa7
  41590c:	mov    ds:0xeb186ee2,al
  415911:	ror    BYTE PTR [ebx-0x1ce28df9],1
  415917:	or     ah,BYTE PTR [eax-0x19]
  41591a:	test   bh,dl
  41591c:	inc    ebp
  41591d:	pusha  
  41591e:	dec    esi
  41591f:	cmp    eax,0xaf8df912
  415924:	in     eax,dx
  415925:	mov    ah,0xd
  415927:	add    DWORD PTR [edi],ebp
  415929:	xlat   BYTE PTR ds:[ebx]
  41592a:	cmp    edx,DWORD PTR [esi]
  41592c:	mov    dh,0xd7
  41592e:	and    eax,0x22dada36
  415933:	pop    ebx
  415934:	inc    esi
  415935:	push   ebp
  415936:	fbstp  TBYTE PTR [esi]
  415938:	sahf   
  415939:	adc    dl,BYTE PTR [ecx+0x10]
  41593c:	popf   
  41593d:	adc    edx,DWORD PTR [ebp-0x45]
  415940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415941:	and    BYTE PTR [eax-0xd],dl
  415944:	mov    cl,0xc7
  415946:	sbb    BYTE PTR ds:[edx+ebx*1+0x7d3bbd8],dh
  41594e:	lahf   
  41594f:	pop    eax
  415950:	or     BYTE PTR [edi+ebp*8],ah
  415953:	push   ds
  415954:	pushf  
  415955:	and    BYTE PTR [si-0x4888],dh
  41595a:	xchg   ebp,eax
  41595b:	and    BYTE PTR [ebx],cl
  41595d:	test   DWORD PTR [eax+edi*2-0x41f2e93f],esp
  415964:	jecxz  0x4159cd
  415966:	mov    BYTE PTR [ebx-0x1f6050e2],cl
  41596c:	or     eax,0xad6cdd18
  415971:	aaa    
  415972:	in     eax,dx
  415973:	xor    edi,eax
  415975:	xchg   ebx,eax
  415976:	dec    esp
  415977:	int    0x64
  415979:	dec    ecx
  41597a:	jmp    0xdde77007
  41597f:	mov    eax,ecx
  415981:	xchg   edx,eax
  415982:	and    eax,DWORD PTR [eax+0x32]
  415985:	(bad)  
  415986:	adc    DWORD PTR [edx-0x5c267dee],ecx
  41598c:	inc    ecx
  41598d:	repnz cmp eax,0xdeb03a82
  415993:	test   eax,0x6f9f420d
  415998:	and    eax,0x4566451d
  41599d:	ja     0x4159b7
  41599f:	pop    ebp
  4159a0:	cwde   
  4159a1:	mov    esp,0x58ca7a14
  4159a6:	ss jecxz 0x4159a3
  4159a9:	mov    bl,0x7b
  4159ab:	sar    DWORD PTR [esi-0x7c],0x24
  4159af:	ins    BYTE PTR es:[edi],dx
  4159b0:	hlt    
  4159b1:	or     al,0x0
  4159b3:	cmp    BYTE PTR [ebp+0x38],bl
  4159b6:	in     eax,dx
  4159b7:	push   ax
  4159b9:	xor    DWORD PTR [edx],esp
  4159bb:	call   0x75daa901
  4159c0:	sub    eax,0xcd783dd8
  4159c5:	imul   DWORD PTR [ebp+0x2243d5b0]
  4159cb:	cwde   
  4159cc:	push   ecx
  4159cd:	ins    BYTE PTR es:[edi],dx
  4159ce:	in     eax,0xa8
  4159d0:	xchg   esp,eax
  4159d1:	cld    
  4159d2:	inc    esp
  4159d3:	jp     0x415a15
  4159d5:	cli    
  4159d6:	push   0x2561aec3
  4159db:	pop    es
  4159dc:	inc    esp
  4159dd:	inc    ecx
  4159de:	add    eax,0xa4eafbb
  4159e3:	jecxz  0x415965
  4159e5:	stc    
  4159e6:	fadd   QWORD PTR [esi+ecx*1-0x43e36c94]
  4159ed:	in     al,0x6e
  4159ef:	sbb    DWORD PTR [ecx+0x3],ebx
  4159f2:	mov    al,0x34
  4159f4:	push   ss
  4159f5:	mov    eax,0x63efb8f6
  4159fa:	add    DWORD PTR ds:0xbcf0c77a,ebx
  415a00:	jmp    0x415a16
  415a02:	jno    0x415a33
  415a04:	xchg   esp,eax
  415a05:	push   es
  415a06:	repnz test BYTE PTR [ecx],0x77
  415a0a:	jnp    0x4159c8
  415a0c:	mov    ah,0xf8
  415a0e:	or     DWORD PTR [edi+0x7a],edi
  415a11:	rcr    DWORD PTR [ecx],cl
  415a13:	xchg   ebx,eax
  415a14:	gs pop edx
  415a16:	aas    
  415a17:	inc    esi
  415a18:	or     esp,edx
  415a1a:	lock je 0x4159ad
  415a1d:	dec    ebp
  415a1e:	stos   DWORD PTR es:[edi],eax
  415a1f:	adc    BYTE PTR [esp+ebx*2+0xb],al
  415a23:	pop    ebp
  415a24:	lods   al,BYTE PTR ds:[esi]
  415a25:	std    
  415a26:	push   cs
  415a27:	sbb    ebx,DWORD PTR [esi]
  415a29:	enter  0xe0ef,0x2f
  415a2d:	push   ss
  415a2e:	out    dx,eax
  415a2f:	lods   eax,DWORD PTR ds:[esi]
  415a30:	adc    dl,BYTE PTR [edx]
  415a32:	mov    dl,0xa4
  415a34:	ds imul edi,esp,0xfbf95756
  415a3b:	push   ds
  415a3c:	sub    BYTE PTR [edx],cl
  415a3e:	or     ebx,0x2cfac9f0
  415a44:	jecxz  0x4159f6
  415a46:	dec    esi
  415a47:	out    dx,al
  415a48:	adc    bh,dh
  415a4a:	out    dx,al
  415a4b:	retf   
  415a4c:	loope  0x4159e8
  415a4e:	jo     0x415a72
  415a50:	dec    esi
  415a51:	xlat   BYTE PTR ds:[ebx]
  415a52:	mov    ebp,0xcd243113
  415a57:	popa   
  415a58:	dec    eax
  415a59:	ret    
  415a5a:	js     0x415ac7
  415a5c:	lods   eax,DWORD PTR ds:[esi]
  415a5d:	xchg   ebx,eax
  415a5e:	or     bh,BYTE PTR [esi+0x246edbe1]
  415a64:	retf   0xf4ff
  415a67:	leave  
  415a68:	and    dh,bl
  415a6a:	inc    ebx
  415a6b:	mov    edx,0xe1a333d5
  415a70:	mov    esi,ebp
  415a72:	dec    esp
  415a73:	mov    ds:0xabac2eb6,al
  415a78:	mov    eax,ds:0x3016e63f
  415a7d:	call   0x770911b5
  415a82:	shl    DWORD PTR [esi-0x1ce32c47],1
  415a88:	mov    cl,0xd1
  415a8a:	sub    DWORD PTR [ecx-0x35],0xbe95ad79
  415a91:	out    0xef,eax
  415a93:	or     ebp,edx
  415a95:	out    dx,eax
  415a96:	test   BYTE PTR [ebp+0x73410fc4],bl
  415a9c:	ret    
  415a9d:	sahf   
  415a9e:	pop    ecx
  415a9f:	(bad)  
  415aa0:	aam    0x4d
  415aa2:	cmp    ecx,esi
  415aa4:	jnp    0x415ab1
  415aa6:	hlt    
  415aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa8:	add    BYTE PTR [ecx+ecx*4-0x2949eb69],dl
  415aaf:	jae    0x415afc
  415ab1:	jmp    0x415ab9
  415ab3:	mov    al,0x77
  415ab5:	pop    esi
  415ab6:	aaa    
  415ab7:	xor    DWORD PTR [ecx-0x367eb46f],ecx
  415abd:	jo     0x415aed
  415abf:	dec    ebx
  415ac0:	or     al,0xd8
  415ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac3:	popa   
  415ac4:	sub    eax,0x42b29155
  415ac9:	inc    ecx
  415aca:	(bad)  
  415acb:	lea    ebx,[ebx-0x648459e1]
  415ad1:	push   esi
  415ad2:	mov    ds:0x18d35b81,eax
  415ad7:	sbb    BYTE PTR ds:[edx-0x6e],0x2d
  415adc:	aas    
  415add:	clc    
  415ade:	std    
  415adf:	xor    cl,BYTE PTR [eax+ebx*2]
  415ae2:	xchg   ebx,eax
  415ae3:	cmp    ebp,DWORD PTR [ebx+0x51]
  415ae6:	ja     0x415b43
  415ae8:	mov    edx,0x4d1ae6e
  415aed:	xor    dl,BYTE PTR ds:0xcf30cf3f
  415af3:	lods   al,BYTE PTR ds:[esi]
  415af4:	xchg   ebp,ecx
  415af6:	lds    edi,FWORD PTR ds:0x573196a5
  415afc:	cmp    al,BYTE PTR [edi]
  415afe:	mov    ebx,0xb98fd365
  415b03:	dec    esi
  415b04:	(bad)  [ebp-0x42]
  415b07:	pop    ebp
  415b08:	add    DWORD PTR [ebx],ebp
  415b0a:	and    BYTE PTR [ecx+0x103ea33d],dh
  415b10:	or     cl,BYTE PTR ds:0x5551ee82
  415b16:	mov    ah,0xc9
  415b18:	push   cs
  415b19:	inc    esi
  415b1a:	mov    edi,0x865525d7
  415b1f:	push   es
  415b20:	push   edx
  415b21:	xchg   ebp,eax
  415b22:	pusha  
  415b23:	add    DWORD PTR [ecx+0x41579d71],edi
  415b29:	imul   ebp,ecx,0xffffffee
  415b2c:	lock gs scas eax,DWORD PTR es:[edi]
  415b2f:	lock jno 0x415b1c
  415b32:	(bad)  
  415b33:	(bad)  
  415b34:	and    cl,BYTE PTR [esi+edi*1-0x215a2ed1]
  415b3b:	pop    edx
  415b3c:	xchg   ebx,eax
  415b3d:	or     BYTE PTR [ebp-0x56],dh
  415b40:	and    bh,bl
  415b42:	test   eax,0xb0d725aa
  415b47:	sbb    al,0x1c
  415b49:	jp     0x415b3a
  415b4b:	mov    al,0xe
  415b4d:	push   edx
  415b4e:	bound  ebp,QWORD PTR [edx+0x1019b8ce]
  415b54:	xchg   DWORD PTR [eax-0x5a],esi
  415b57:	in     al,0xfd
  415b59:	mov    WORD PTR gs:[ebx+0x5d],es
  415b5d:	ins    DWORD PTR es:[edi],dx
  415b5e:	(bad)  
  415b5f:	pause  
  415b61:	aam    0x47
  415b63:	pop    es
  415b64:	cmp    al,0x3d
  415b66:	mov    edi,0xd41ed128
  415b6b:	inc    ecx
  415b6c:	imul   ebp,DWORD PTR [eax+0x5d0b683c],0x3ddb6d8e
  415b76:	adc    BYTE PTR [esi],0xc
  415b79:	cdq    
  415b7a:	jl     0x415b7d
  415b7c:	jle    0x415b15
  415b7e:	lds    edi,FWORD PTR [ecx+0x454aa716]
  415b84:	mov    esi,edi
  415b86:	push   esp
  415b87:	mov    ecx,0xe69b2d2
  415b8c:	jno    0x415bb7
  415b8e:	sahf   
  415b8f:	and    eax,0x6aa9ae32
  415b94:	mov    ch,0x34
  415b96:	pop    esi
  415b97:	xchg   bh,dl
  415b99:	ficomp WORD PTR [eax]
  415b9b:	cli    
  415b9c:	jge    0x415b43
  415b9e:	inc    esp
  415b9f:	data16 adc al,0x6
  415ba2:	and    al,0xbd
  415ba4:	jle    0x415b84
  415ba6:	mov    al,0xe1
  415ba8:	mov    ebx,0x329df458
  415bad:	out    dx,al
  415bae:	xchg   edx,eax
  415baf:	dec    ebx
  415bb0:	jns    0x415b81
  415bb2:	mov    dl,0xf6
  415bb4:	and    DWORD PTR [ebp-0x5f],ebp
  415bb7:	js     0x415baa
  415bb9:	in     al,0x55
  415bbb:	ror    DWORD PTR [esi+0x16e45f8f],cl
  415bc1:	cmp    dh,0x75
  415bc4:	repz (bad) 
  415bc6:	scas   eax,DWORD PTR es:[edi]
  415bc7:	or     cl,ch
  415bc9:	rcr    esp,0xb0
  415bcc:	daa    
  415bcd:	sbb    eax,0x512943bf
  415bd2:	int    0x38
  415bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bd5:	out    dx,al
  415bd6:	dec    esi
  415bd7:	or     eax,0x1314fb03
  415bdc:	test   BYTE PTR [eax+0x5a],bl
  415bdf:	retf   
  415be0:	sub    BYTE PTR [edx+0x6f],0x9b
  415be4:	inc    esp
  415be5:	stos   BYTE PTR es:[edi],al
  415be6:	rol    edx,cl
  415be8:	xchg   BYTE PTR [ebp+0x6c],ah
  415beb:	pop    ebp
  415bec:	add    al,0xde
  415bee:	test   DWORD PTR [ebp-0xae75cd],eax
  415bf4:	jne    0x415c31
  415bf6:	loop   0x415c1c
  415bf8:	in     eax,dx
  415bf9:	mov    ss,esp
  415bfb:	add    ebp,DWORD PTR ds:0xcbd5d7a6
  415c01:	in     eax,0xf
  415c03:	jecxz  0x415c6c
  415c05:	js     0x415bf6
  415c07:	adc    eax,DWORD PTR [edx+0x23]
  415c0a:	jmp    0xc2da:0x71a56b62
  415c11:	dec    ecx
  415c12:	pop    eax
  415c13:	add    BYTE PTR [ebp+0x332d241b],bh
  415c19:	stos   DWORD PTR es:[edi],eax
  415c1a:	push   0x57
  415c1c:	mov    bl,0xf7
  415c1e:	lldt   WORD PTR [eax+0x2e]
  415c22:	mov    ds:0xbc0d6a14,eax
  415c27:	or     DWORD PTR [eax],edx
  415c29:	sbb    DWORD PTR [edi+0x16bac542],0x198b758b
  415c33:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c35:	mov    gs,WORD PTR [ebx+0x6f372020]
  415c3b:	sub    BYTE PTR [edi],0x43
  415c3e:	inc    esp
  415c3f:	repnz cmc 
  415c41:	(bad)  [edx-0x3bb03f85]
  415c47:	cmp    BYTE PTR [edx-0x2dd921e3],cl
  415c4d:	push   ebp
  415c4e:	push   ebx
  415c4f:	les    esp,FWORD PTR [edi-0x3afa2ec2]
  415c55:	cmp    esi,esi
  415c57:	mov    ds:0x9b02a5a3,eax
  415c5c:	call   edx
  415c5e:	out    dx,al
  415c5f:	leave  
  415c60:	fnstcw WORD PTR [edi-0x212abdd7]
  415c66:	fxch   st(5)
  415c68:	inc    esp
  415c69:	add    eax,0xb469bea
  415c6e:	sbb    al,0xb0
  415c70:	fisttp QWORD PTR [eax]
  415c72:	rol    DWORD PTR [ebx+0x76637342],1
  415c78:	add    ebp,DWORD PTR [ecx-0x18a07339]
  415c7e:	jo     0x415caa
  415c80:	mov    eax,ds:0xe2d8b0f
  415c85:	gs add bh,cl
  415c88:	mov    BYTE PTR [esp+edx*4-0x80],dh
  415c8c:	xor    al,0x43
  415c8e:	(bad)  
  415c8f:	cmovae edx,DWORD PTR [esi]
  415c92:	jae    0x415c9e
  415c94:	fdiv   st(0),st
  415c96:	and    BYTE PTR [ebx+0x40ce3033],0xf2
  415c9d:	shl    DWORD PTR ds:0xd129dee5,cl
  415ca3:	daa    
  415ca4:	call   0x651c5287
  415ca9:	jno    0x415cce
  415cab:	mov    WORD PTR [ecx+eax*4],es
  415cae:	js     0x415cde
  415cb0:	xchg   esi,eax
  415cb1:	sub    DWORD PTR gs:[ebx+0x6680f7c0],esi
  415cb8:	and    al,0xa5
  415cbb:	loopne 0x415cd2
  415cbd:	rcl    DWORD PTR [edi-0x26e72444],1
  415cc3:	mov    eax,ds:0x8a65b55
  415cc8:	ins    DWORD PTR es:[edi],dx
  415cc9:	push   ebp
  415cca:	add    esp,DWORD PTR [edx+0x54300f9b]
  415cd0:	inc    edi
  415cd1:	jmp    0x2241636c
  415cd6:	jo     0x415d13
  415cd8:	lock xor cl,BYTE PTR [edi]
  415cdb:	nop
  415cdc:	pop    ss
  415cdd:	mov    cs:0x58874dfc,al
  415ce3:	nop
  415ce4:	xor    eax,0x788e227b
  415ce9:	cs dec ebx
  415ceb:	inc    ebp
  415cec:	mov    ebx,0x9126bd19
  415cf1:	aad    0x3e
  415cf3:	inc    edi
  415cf4:	sub    ecx,DWORD PTR [ebp-0x4]
  415cf7:	scas   eax,DWORD PTR es:[edi]
  415cf8:	data16 sub al,0x3
  415cfb:	inc    edi
  415cfc:	in     al,0x50
  415cfe:	iret   
  415cff:	mov    DWORD PTR [ebx],esp
  415d01:	retf   
  415d02:	in     al,0x71
  415d04:	sub    al,ah
  415d06:	sbb    eax,0x4ea20547
  415d0b:	cld    
  415d0c:	jnp    0x415c9c
  415d0e:	loope  0x415d85
  415d10:	lock je 0x415cc0
  415d13:	mov    ds:0x8480f026,al
  415d18:	xor    ah,BYTE PTR [esi+0x3f679d3d]
  415d1e:	push   esp
  415d1f:	push   ebp
  415d20:	ficom  WORD PTR [edx+edi*4+0x381d280f]
  415d27:	jecxz  0x415d3c
  415d29:	add    bl,BYTE PTR [esi-0x6e]
  415d2c:	arpl   WORD PTR [ecx-0x1d],sp
  415d2f:	popf   
  415d30:	ins    BYTE PTR es:[edi],dx
  415d31:	and    eax,0x439b1f93
  415d36:	nop
  415d37:	es or  eax,0x468df4cd
  415d3d:	rcl    BYTE PTR [esi+0xe],1
  415d40:	retf   0xed5e
  415d43:	ret    
  415d44:	push   ds
  415d45:	adc    edx,DWORD PTR [ecx+ecx*4-0x66]
  415d49:	sbb    al,0x72
  415d4b:	push   eax
  415d4c:	jle    0x415cd7
  415d4e:	jmp    0xf50e9126
  415d53:	stc    
  415d54:	mov    al,0x87
  415d56:	mov    al,ds:0xc0ef1267
  415d5b:	into   
  415d5c:	aam    0xfc
  415d5e:	pop    ebx
  415d5f:	sti    
  415d60:	pop    edx
  415d61:	clc    
  415d62:	ins    BYTE PTR es:[edi],dx
  415d63:	(bad)  
  415d64:	(bad)  
  415d66:	aaa    
  415d67:	push   edi
  415d68:	retf   0xac9c
  415d6b:	or     al,0x86
  415d6d:	imul   ecx,DWORD PTR [ecx-0x3b2beb73],0x17
  415d74:	jg     0x415d44
  415d76:	inc    edi
  415d77:	outs   dx,BYTE PTR ds:[esi]
  415d78:	ja     0x415d22
  415d7a:	jns    0x415d73
  415d7c:	jne    0x415d72
  415d7e:	out    0xa7,eax
  415d80:	xor    eax,0xfcd2e668
  415d85:	shl    DWORD PTR [edx],cl
  415d87:	(bad)  
  415d89:	adc    cl,BYTE PTR [eax]
  415d8b:	pushf  
  415d8c:	pop    es
  415d8d:	fmul   QWORD PTR [edx+0x20ef309c]
  415d93:	inc    ebp
  415d94:	loop   0x415da8
  415d96:	fnstcw WORD PTR [edi-0x13]
  415d99:	sub    eax,0xd0238853
  415d9e:	fs xchg esi,eax
  415da0:	adc    eax,ebp
  415da2:	add    eax,0x2bc874d1
  415da7:	push   cs
  415da8:	or     DWORD PTR [ebp-0x4252497a],ebp
  415dae:	jbe    0x415dd2
  415db0:	rol    DWORD PTR [ecx+0x37],cl
  415db3:	call   0xea063682
  415db8:	in     al,dx
  415db9:	jmp    0x3372e7df
  415dbe:	xor    BYTE PTR [ebx+0x58c6a476],ah
  415dc4:	jg     0x415dc6
  415dc6:	call   0xe58:0x89c4cfab
  415dcd:	mov    ch,0x15
  415dcf:	dec    ecx
  415dd0:	inc    esp
  415dd1:	and    edx,eax
  415dd3:	and    al,0x9
  415dd5:	adc    esp,ecx
  415dd7:	(bad)  [edi-0x28]
  415dda:	cmp    DWORD PTR [esi],esp
  415ddc:	fwait
  415ddd:	sbb    al,0xd4
  415ddf:	out    dx,al
  415de0:	test   BYTE PTR [eax-0x269dcead],dh
  415de6:	fidiv  WORD PTR ds:[edi+0x2a8d6567]
  415ded:	mov    ah,cl
  415def:	dec    ecx
  415df0:	jl     0x415d72
  415df2:	push   ebx
  415df3:	pop    es
  415df4:	test   al,0xbc
  415df6:	pop    esi
  415df7:	add    al,0xa
  415df9:	sbb    BYTE PTR [esi-0x782575cd],dl
  415dff:	(bad)  
  415e00:	and    ch,BYTE PTR ds:0xb9968638
  415e06:	int    0xac
  415e08:	and    DWORD PTR [esp+eiz*2],0x63a19405
  415e0f:	cmp    BYTE PTR ds:0xeb21fffc,bl
  415e15:	xchg   DWORD PTR [ecx-0x26254510],edx
  415e1b:	jbe    0x415db9
  415e1d:	lods   eax,DWORD PTR ds:[esi]
  415e1e:	in     al,dx
  415e1f:	pop    es
  415e20:	gs pop esp
  415e22:	es jbe 0x415dd0
  415e25:	in     eax,dx
  415e26:	call   FWORD PTR [edi]
  415e28:	xor    ebp,edi
  415e2a:	stc    
  415e2b:	fidivr WORD PTR [edi+0x18deac77]
  415e31:	inc    edx
  415e32:	retf   0x3578
  415e35:	mov    dl,bl
  415e37:	mov    ds:0x8ece4957,eax
  415e3c:	outs   dx,BYTE PTR ds:[esi]
  415e3d:	jno    0x415dc9
  415e3f:	add    esi,edi
  415e41:	cwde   
  415e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e43:	cmp    DWORD PTR [ebx],ecx
  415e45:	sahf   
  415e46:	cmc    
  415e47:	push   cs
  415e48:	pop    eax
  415e49:	bound  esp,QWORD PTR [eax]
  415e4b:	jmp    0xe13ce86f
  415e50:	aad    0xd4
  415e52:	dec    edi
  415e53:	(bad)  
  415e56:	mov    eax,ds:0x466c0a84
  415e5b:	or     edx,ebp
  415e5d:	(bad)  
  415e5e:	sub    dh,BYTE PTR [esi-0x6c]
  415e61:	dec    ebp
  415e62:	sbb    edx,DWORD PTR [eax-0x65]
  415e65:	in     eax,0x6
  415e67:	inc    DWORD PTR [esi-0x46]
  415e6a:	mov    ecx,0x154b9940
  415e6f:	push   0x2f
  415e71:	mov    dh,0xd
  415e73:	and    al,0xad
  415e75:	push   cs
  415e76:	rol    BYTE PTR [eax],1
  415e78:	gs es push edi
  415e7b:	mov    al,0x6d
  415e7d:	int3   
  415e7e:	or     eax,0x8d6c42a0
  415e83:	ret    0x1e06
  415e86:	adc    ebx,DWORD PTR [eax-0x7aa6a755]
  415e8c:	fimul  DWORD PTR ds:0x61095afe
  415e92:	lods   eax,DWORD PTR ds:[esi]
  415e93:	inc    ebp
  415e94:	pop    ebx
  415e95:	fisub  WORD PTR [edx+0x59867566]
  415e9b:	or     cl,al
  415e9d:	cld    
  415e9e:	mov    ds:0x92bd5b52,eax
  415ea3:	pop    ebx
  415ea4:	retf   
  415ea5:	xor    eax,0xaf85901d
  415eaa:	sahf   
  415eab:	imul   edi,eax,0x45
  415eae:	aas    
  415eaf:	mov    ds:0xbae72ede,al
  415eb4:	jae    0x415ebc
  415eb6:	cli    
  415eb7:	jmp    0x1a6a:0xef0b8cd2
  415ebe:	cld    
  415ebf:	and    bh,bh
  415ec1:	loope  0x415e79
  415ec3:	les    eax,FWORD PTR [edx+0x60]
  415ec6:	xchg   esi,eax
  415ec7:	and    al,0xf0
  415ec9:	js     0x415f16
  415ecb:	add    al,BYTE PTR gs:[esi-0x3b]
  415ecf:	mov    esi,0x4dc65f65
  415ed4:	add    cl,ah
  415ed6:	je     0x415f46
  415ed8:	mov    ch,0x3d
  415eda:	jmp    0x415f43
  415edc:	add    BYTE PTR [ecx-0x1],0xc2
  415ee0:	inc    ebx
  415ee1:	xchg   edx,esp
  415ee3:	mov    ds:0xf4c51b8d,eax
  415ee8:	add    eax,0x37e4b55f
  415eed:	pop    eax
  415eee:	aad    0xf6
  415ef0:	inc    eax
  415ef1:	mov    bl,0xa5
  415ef3:	sbb    DWORD PTR [edx+0x39],esi
  415ef6:	rcr    BYTE PTR [edi],1
  415ef8:	test   BYTE PTR [esi-0x13],dh
  415efb:	xor    ch,BYTE PTR [ecx+0x59adbc67]
  415f01:	lods   eax,DWORD PTR ds:[esi]
  415f02:	ds adc al,0x7f
  415f05:	shl    ah,cl
  415f07:	jmp    0x415edb
  415f09:	(bad)  
  415f0b:	imul   DWORD PTR [edx-0x12]
  415f0e:	iret   
  415f0f:	jne    0x415ee4
  415f11:	repnz pop esi
  415f13:	mov    ebx,0x1dec2350
  415f18:	sbb    eax,0xbcfafd0b
  415f1d:	and    esp,eax
  415f1f:	jo     0x415f83
  415f21:	scas   eax,DWORD PTR es:[edi]
  415f22:	in     al,dx
  415f23:	ds mov ah,0x7c
  415f26:	sub    BYTE PTR ds:0xc7b0bef,bh
  415f2c:	enter  0x5d9,0x82
  415f30:	cmp    BYTE PTR [ecx],bl
  415f32:	das    
  415f33:	xchg   esp,eax
  415f34:	loop   0x415ebc
  415f36:	xlat   BYTE PTR ds:[ebx]
  415f37:	ss cmp al,0xc0
  415f3a:	hlt    
  415f3b:	cdq    
  415f3c:	xchg   esi,eax
  415f3d:	inc    edi
  415f3e:	fsubp  st(5),st
  415f40:	(bad)  
  415f41:	xchg   ebx,eax
  415f42:	xchg   edi,eax
  415f43:	push   0x48
  415f45:	(bad)  
  415f46:	neg    bl
  415f48:	das    
  415f49:	pop    edi
  415f4a:	scas   al,BYTE PTR es:[edi]
  415f4b:	dec    esp
  415f4c:	xchg   ecx,eax
  415f4d:	fcomp  DWORD PTR [esi+0x6f17c150]
  415f53:	jp     0x415f64
  415f55:	add    ah,BYTE PTR [esi]
  415f57:	fiadd  WORD PTR [eax-0x30]
  415f5a:	adc    DWORD PTR [ebx],ecx
  415f5c:	jle    0x415eff
  415f5e:	xchg   esp,eax
  415f5f:	ja     0x415f6e
  415f61:	pop    es
  415f62:	ror    DWORD PTR [ebx-0x6911dfa5],0xfc
  415f69:	je     0x415fc5
  415f6b:	dec    edi
  415f6c:	(bad)  [ebx]
  415f6e:	mov    eax,0xad5795e5
  415f73:	(bad)  
  415f74:	sub    al,0x73
  415f76:	adc    eax,0x6d8b79fe
  415f7b:	push   eax
  415f7c:	dec    esi
  415f7d:	mov    dh,0x75
  415f7f:	adc    bh,BYTE PTR [ebp-0x7e]
  415f82:	jmp    0x513f556f
  415f87:	cwde   
  415f88:	jmp    0x415fbf
  415f8a:	lfs    esp,FWORD PTR [ecx]
  415f8d:	xor    al,0x75
  415f8f:	sahf   
  415f90:	dec    edi
  415f91:	xor    al,0x5a
  415f93:	xchg   esi,eax
  415f94:	ret    
  415f95:	mov    ebp,DWORD PTR [eax]
  415f97:	mov    ah,0xc8
  415f99:	jae    0x415f72
  415f9b:	sub    DWORD PTR [ebx],0x29
  415f9e:	loop   0x415f7d
  415fa0:	mul    DWORD PTR [esi+0x55bcc5b1]
  415fa6:	mov    edi,0x75dd8557
  415fab:	or     bh,dh
  415fad:	enter  0x587b,0x3a
  415fb1:	pusha  
  415fb2:	arpl   ax,si
  415fb4:	pop    ebx
  415fb5:	pop    esp
  415fb6:	stos   DWORD PTR es:[edi],eax
  415fb7:	sub    edi,edi
  415fb9:	ins    DWORD PTR es:[edi],dx
  415fba:	push   0xffffff81
  415fbc:	mov    ebp,0x751444a3
  415fc1:	lea    ecx,[eax+esi*8+0x6ee95ce9]
  415fc8:	retf   
  415fc9:	mov    al,ds:0xd9b34d58
  415fce:	sub    eax,0x3afa400a
  415fd3:	push   esp
  415fd4:	retf   0x6590
  415fd7:	test   DWORD PTR [edx+edx*2+0x3a],0xf36220ae
  415fdf:	gs push edx
  415fe1:	mov    ebp,0x8875e036
  415fe6:	in     al,dx
  415fe7:	lds    ebp,FWORD PTR [eax+0x99069c8]
  415fed:	xchg   edx,eax
  415fee:	andps  xmm7,XMMWORD PTR [ebx]
  415ff1:	loopne 0x416051
  415ff3:	(bad)  
  415ff4:	imul   ecx,DWORD PTR [ecx-0xf3a3663],0xffffffc6
  415ffb:	xchg   DWORD PTR [edi-0x34],ebx
  415ffe:	mov    ch,0x1
  416000:	jo     0x41602a
  416002:	or     DWORD PTR [ebp-0x762cccb5],ebp
  416008:	push   ebp
  416009:	mov    al,0x8b
  41600b:	push   ebp
  41600c:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x7e9bb480
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	mov    ch,0xeb
  41605d:	jnp    0x4160d7
  41605f:	fnstsw WORD PTR [eax+esi*2]
  416062:	mov    ebx,0x2fa53d41
  416067:	cmp    ebp,DWORD PTR [esi-0x65]
  41606a:	xor    DWORD PTR [ebx],ebx
  41606c:	jmp    0x41604d
  41606e:	fsubr  DWORD PTR [ecx-0x54]
  416071:	mov    dh,0xee
  416073:	popa   
  416074:	jmp    0x98010fc
  416079:	int3   
  41607a:	dec    ebp
  41607b:	loopne 0x416080
  41607d:	gs stos DWORD PTR es:[edi],eax
  41607f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416080:	adc    BYTE PTR [esi-0x6d],cl
  416083:	icebp  
  416084:	dec    esi
  416085:	addr16 sbb esp,edi
  416088:	scas   eax,DWORD PTR es:[edi]
  416089:	out    dx,eax
  41608a:	cmp    esi,DWORD PTR ds:0xc2d53aed
  416090:	nop
  416091:	inc    esp
  416092:	aaa    
  416093:	aad    0x3f
  416095:	inc    edx
  416096:	mov    ebp,0xe4ef7a58
  41609b:	cmp    DWORD PTR ds:0x583c9964,eax
  4160a1:	and    eax,0x6e30c37a
  4160a6:	aad    0x39
  4160a8:	js     0x4160a3
  4160aa:	push   es
  4160ab:	lds    eax,FWORD PTR [edi]
  4160ad:	jl     0x4160e5
  4160af:	xchg   BYTE PTR [ebx+0x5f],al
  4160b2:	mov    ah,0x24
  4160b4:	push   eax
  4160b5:	int3   
  4160b6:	jb     0x416102
  4160b8:	push   ds
  4160b9:	cld    
  4160ba:	cmc    
  4160bb:	inc    edi
  4160bc:	je     0x4160e7
  4160be:	mov    ds:0x5e8d58c1,al
  4160c3:	adc    cl,dl
  4160c5:	sbb    ebp,DWORD PTR [esp-0x4c57154]
  4160cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160cd:	and    dl,BYTE PTR ds:0xd8f5756d
  4160d3:	mov    eax,ds:0xb5b42967
  4160d8:	sti    
  4160d9:	pop    edi
  4160da:	add    edi,ecx
  4160dc:	stc    
  4160dd:	cld    
  4160de:	in     eax,dx
  4160df:	mov    WORD PTR [eax],cs
  4160e1:	inc    ebx
  4160e2:	cmp    al,0x87
  4160e4:	retf   0x2233
  4160e7:	push   eax
  4160e8:	js     0x4160a1
  4160ea:	xchg   esp,eax
  4160eb:	in     al,0x7d
  4160ed:	or     DWORD PTR [edx-0x1587c446],eax
  4160f3:	pop    esi
  4160f4:	fcomp  st(2)
  4160f6:	sbb    ecx,ebx
  4160f8:	fcom   DWORD PTR [ebp+0x6f]
  4160fb:	ret    
  4160fc:	aam    0xd
  4160fe:	mov    dl,0x32
  416100:	in     eax,dx
  416101:	add    dh,BYTE PTR [ebp-0x28]
  416104:	aaa    
  416105:	xchg   ebp,eax
  416106:	sbb    BYTE PTR [ebp+0x67],ah
  416109:	add    al,0xfb
  41610b:	retf   0xd83c
  41610e:	fnsave [edx]
  416110:	popa   
  416111:	sti    
  416112:	inc    esi
  416113:	out    0x9d,al
  416115:	rcr    cl,1
  416117:	sub    al,0xce
  416119:	adc    al,0xb0
  41611b:	ss retf 0x48fb
  41611f:	imul   edi,DWORD PTR [eax],0x166ff59e
  416125:	sub    ecx,DWORD PTR [ebx+edx*2]
  416128:	arpl   WORD PTR [eax],bx
  41612a:	jmp    FWORD PTR [eax-0x38]
  41612d:	sbb    DWORD PTR ds:0xc2655f5e,ecx
  416133:	xchg   esi,eax
  416134:	xor    DWORD PTR [edx+ebx*4],esp
  416137:	pop    ebp
  416138:	ins    DWORD PTR es:[edi],dx
  416139:	inc    edi
  41613a:	out    0x25,al
  41613c:	(bad)  
  41613d:	dec    edi
  41613e:	xlat   BYTE PTR ds:[ebx]
  41613f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416140:	pop    ebp
  416141:	cmpxchg BYTE PTR [ebp-0x2ccf272e],dh
  416148:	inc    ebx
  416149:	xor    cl,BYTE PTR [ecx-0x54076f64]
  41614f:	dec    edi
  416150:	sub    edi,DWORD PTR fs:[ebx-0x3b]
  416154:	or     DWORD PTR cs:[ebp+edi*2+0x3b],edi
  416159:	mov    edx,0x3538cbdf
  41615e:	mov    eax,0x2a6dc529
  416163:	inc    edi
  416164:	repnz push edx
  416166:	(bad)  
  416167:	scas   eax,DWORD PTR es:[edi]
  416168:	xchg   edx,eax
  416169:	sub    dh,BYTE PTR [eax+0x63]
  41616c:	aas    
  41616d:	fdivr  QWORD PTR ds:0x866c31cf
  416173:	xor    DWORD PTR [eax-0x317d7448],esi
  416179:	test   eax,0xece37124
  41617e:	push   0xffffffe8
  416180:	add    dl,dl
  416182:	aas    
  416183:	sbb    al,0xc2
  416185:	mov    edx,0x7b5bb9ba
  41618a:	sti    
  41618b:	test   DWORD PTR [eax+0x61cacc2f],esi
  416191:	jecxz  0x41612a
  416193:	test   al,0x3f
  416195:	push   es
  416196:	fst    DWORD PTR [ebx]
  416198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416199:	call   0x3e9b:0x616afd4b
  4161a0:	pop    es
  4161a1:	adc    BYTE PTR [edx+0x63],bh
  4161a4:	in     al,dx
  4161a5:	push   esi
  4161a6:	cld    
  4161a7:	std    
  4161a8:	(bad)  
  4161aa:	(bad)  
  4161ab:	and    esp,DWORD PTR [esp+esi*2+0x55659a0d]
  4161b2:	daa    
  4161b3:	ficomp DWORD PTR [edx]
  4161b5:	(bad)  
  4161b7:	jl     0x4161c9
  4161b9:	add    al,0xaa
  4161bb:	rol    BYTE PTR [edi-0x397a22ca],cl
  4161c1:	mov    dh,0xeb
  4161c3:	sbb    cl,BYTE PTR [eax]
  4161c5:	gs and cl,0x93
  4161c9:	mov    ch,0x5b
  4161cb:	sbb    BYTE PTR [edx-0x54],dh
  4161ce:	lods   eax,DWORD PTR ds:[esi]
  4161cf:	push   ebx
  4161d0:	mov    ebp,0x68cbb643
  4161d5:	add    bl,0xf6
  4161d8:	pop    esp
  4161d9:	dec    al
  4161db:	rcl    BYTE PTR [ebx+0x4170725],1
  4161e1:	adc    eax,0xf126dfe8
  4161e6:	sub    BYTE PTR [edx+0x7dfa136b],al
  4161ec:	mov    ebx,edx
  4161ee:	add    DWORD PTR [eax+0x4],0xf065df82
  4161f5:	xchg   esi,eax
  4161f6:	lods   eax,DWORD PTR ds:[esi]
  4161f7:	add    ecx,esi
  4161f9:	inc    esi
  4161fa:	inc    edi
  4161fb:	lods   al,BYTE PTR ds:[esi]
  4161fc:	cmp    eax,0xe08056f0
  416201:	retf   
  416202:	stc    
  416203:	dec    edx
  416204:	xchg   edi,eax
  416205:	sub    DWORD PTR [esi-0x5ce58c32],0x4e
  41620c:	and    ch,BYTE PTR [ebp+0x1568ebfc]
  416212:	push   ds
  416213:	in     eax,dx
  416214:	jl     0x4161f1
  416216:	push   esp
  416217:	add    DWORD PTR [ecx+0x18],esp
  41621a:	jae    0x41621a
  41621c:	pop    ebx
  41621d:	std    
  41621e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41621f:	pop    edi
  416220:	mov    DWORD PTR ds:0xf23b7132,0x95571d75
  41622a:	dec    esp
  41622b:	pop    edi
  41622c:	fst    DWORD PTR [ebp-0x8]
  41622f:	rcl    BYTE PTR [ecx+0x26],1
  416232:	cmp    al,0x59
  416234:	dec    eax
  416235:	jmp    0x416220
  416237:	in     eax,0x85
  416239:	ret    0xeb75
  41623c:	push   ecx
  41623d:	std    
  41623e:	daa    
  41623f:	fnstsw WORD PTR [edi]
  416241:	outs   dx,BYTE PTR ds:[si]
  416243:	mov    ecx,0xcd28316
  416248:	mov    ebp,0x148aa28b
  41624d:	sub    eax,0x4cc04354
  416252:	dec    ecx
  416253:	xchg   ecx,ebx
  416255:	(bad)  
  416256:	sbb    DWORD PTR [eax+0x5e],ebp
  416259:	jle    0x41628d
  41625b:	test   BYTE PTR [eax],0xc7
  41625e:	clc    
  41625f:	and    eax,0xf019c885
  416264:	leave  
  416265:	push   ecx
  416266:	aam    0x6a
  416268:	xchg   edi,eax
  416269:	out    0x36,eax
  41626b:	dec    ecx
  41626c:	jns    0x416264
  41626e:	xchg   ebx,eax
  41626f:	adc    dl,cl
  416271:	fdivr  QWORD PTR [eax-0x460dd583]
  416277:	adc    cl,al
  416279:	repnz inc eax
  41627b:	pop    edx
  41627c:	ror    DWORD PTR [esi],0x8c
  41627f:	and    DWORD PTR [eax-0x5be571],0x16
  416286:	popf   
  416287:	pusha  
  416288:	jecxz  0x416303
  41628a:	xchg   ecx,eax
  41628b:	ror    BYTE PTR [esi+0xf039323],1
  416291:	mov    edx,0x98071197
  416296:	cmp    ebp,esi
  416298:	pop    esi
  416299:	dec    eax
  41629a:	mov    cl,BYTE PTR [eax+0x2e3d26cc]
  4162a0:	js     0x416253
  4162a2:	push   esp
  4162a3:	xchg   DWORD PTR fs:[ecx],eax
  4162a6:	pop    ecx
  4162a7:	stc    
  4162a8:	cmp    al,0xeb
  4162aa:	inc    eax
  4162ab:	data16 cld 
  4162ad:	push   esp
  4162ae:	popa   
  4162af:	inc    esi
  4162b0:	xchg   BYTE PTR [edi-0x7b],cl
  4162b3:	or     ebp,esp
  4162b5:	in     al,0x91
  4162b7:	repnz test BYTE PTR [edx-0xd],bl
  4162bb:	adc    DWORD PTR [ecx],edi
  4162bd:	shr    BYTE PTR [ebx+0x27],cl
  4162c0:	das    
  4162c1:	xchg   edx,eax
  4162c2:	mov    eax,0xd01be7b8
  4162c7:	mov    ebx,0x92c52603
  4162cc:	inc    ebx
  4162cd:	icebp  
  4162ce:	out    dx,eax
  4162cf:	addr16 inc edi
  4162d1:	sahf   
  4162d2:	pop    es
  4162d3:	dec    edx
  4162d4:	mov    cl,0xac
  4162d6:	sub    esi,DWORD PTR [edi]
  4162d8:	cli    
  4162d9:	rcl    BYTE PTR [ecx],1
  4162db:	sub    al,0xfa
  4162dd:	and    eax,0x4d39e207
  4162e2:	fisubr DWORD PTR [edi+0x79]
  4162e5:	add    BYTE PTR [ebx-0x13],ah
  4162e8:	mov    ebp,0x54efafb3
  4162ed:	sub    esi,DWORD PTR [esp+edi*1-0x2ed0bdd2]
  4162f4:	pop    edi
  4162f5:	mov    esi,0x31310f45
  4162fa:	jns    0x4162e0
  4162fc:	lods   al,BYTE PTR ds:[esi]
  4162fd:	xchg   ebx,eax
  4162fe:	xor    dh,0xa8
  416301:	popf   
  416302:	mov    eax,ds:0x3774def2
  416307:	push   ebp
  416308:	pop    eax
  416309:	pop    ds
  41630a:	inc    esp
  41630b:	shl    cl,cl
  41630d:	pop    ebx
  41630e:	mov    eax,0x220bfdb4
  416313:	adc    BYTE PTR [ebp-0x76],0xa
  416317:	iret   
  416318:	popa   
  416319:	cdq    
  41631a:	lahf   
  41631b:	jns    0x416309
  41631d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41631e:	inc    edx
  41631f:	inc    edx
  416320:	pusha  
  416321:	add    ebx,DWORD PTR [edx+0x74ca2361]
  416327:	push   eax
  416328:	mov    ds:0x5e73cd8,al
  41632d:	sahf   
  41632e:	jmp    0xf4e01da1
  416333:	adc    esi,esi
  416335:	pushf  
  416336:	add    eax,0x721ea636
  41633b:	sub    eax,0x9064863d
  416340:	and    al,0x53
  416342:	dec    ecx
  416343:	cs mov ch,0x6c
  416346:	and    ebp,esp
  416348:	rcl    DWORD PTR ds:0x2c84e968,1
  41634e:	pop    ebp
  41634f:	mov    esi,0xd9afeb63
  416354:	add    eax,0x9eeb85d8
  416359:	sub    ebp,DWORD PTR [esi-0x1a2d53d1]
  41635f:	cmp    DWORD PTR [eax-0x3],esi
  416362:	mov    eax,0x5f7bd8b2
  416367:	lea    ecx,[edi+ebp*2+0x3a]
  41636b:	(bad)  
  41636c:	push   ebx
  41636d:	cwde   
  41636e:	and    al,0x40
  416370:	mov    esp,0xdaec2470
  416375:	jns    0x416345
  416377:	add    ebx,DWORD PTR [esi]
  416379:	popf   
  41637a:	shufps xmm1,XMMWORD PTR [eax-0x69b04cb5],0xe7
  416382:	out    0xbe,al
  416384:	push   esi
  416385:	es call 0x562c:0x8d218d17
  41638d:	into   
  41638e:	sbb    BYTE PTR [edx+0x1999d49c],0xe3
  416395:	sahf   
  416396:	jnp    0x416398
  416398:	and    eax,0x14f2fd9c
  41639d:	xchg   edi,eax
  41639e:	daa    
  41639f:	mov    bl,0x6c
  4163a1:	in     al,0x38
  4163a3:	adc    esi,DWORD PTR [edi+0x685d736]
  4163a9:	mov    DWORD PTR [esi-0x41],edx
  4163ac:	sti    
  4163ad:	and    bl,cl
  4163af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163b0:	pop    edi
  4163b1:	ds xor eax,0x851a8da7
  4163b7:	mov    edi,0xacf86e75
  4163bc:	gs jnp 0x41634a
  4163bf:	dec    esi
  4163c0:	or     dl,0x86
  4163c3:	xchg   edx,eax
  4163c4:	rcl    DWORD PTR [ecx-0x45b9f457],cl
  4163ca:	fcmovu st,st(2)
  4163cc:	mov    ecx,0x1f624b19
  4163d1:	xchg   ebp,eax
  4163d2:	push   ebp
  4163d3:	cmc    
  4163d4:	in     al,0xbc
  4163d6:	ret    0x81f5
  4163d9:	push   esp
  4163da:	fwait
  4163db:	clc    
  4163dc:	push   edx
  4163dd:	mov    ebp,0x7e59e654
  4163e2:	dec    ecx
  4163e3:	pop    esp
  4163e4:	xlat   BYTE PTR ds:[ebx]
  4163e5:	push   ds
  4163e6:	mov    WORD PTR [ecx],ds
  4163e8:	out    dx,eax
  4163e9:	dec    ecx
  4163ea:	sahf   
  4163eb:	lds    ebx,FWORD PTR [eax]
  4163ed:	inc    edx
  4163ee:	dec    ecx
  4163ef:	sub    ebx,DWORD PTR [edx]
  4163f1:	add    eax,0x98e249ad
  4163f6:	(bad)  
  4163f7:	test   al,0x50
  4163f9:	ja     0x416380
  4163fb:	dec    esp
  4163fc:	inc    eax
  4163fd:	jmp    0x27265ecf
  416402:	outs   dx,BYTE PTR ds:[esi]
  416403:	mov    ebx,DWORD PTR [edx]
  416405:	and    eax,0x511b7bb2
  41640a:	dec    eax
  41640b:	cli    
  41640c:	stc    
  41640d:	stc    
  41640e:	inc    edi
  41640f:	test   eax,0x4f00024a
  416414:	gs jp  0x41648c
  416417:	in     eax,0x93
  416419:	mov    ebp,0xe141fe47
  41641e:	cmp    eax,0x15322fe6
  416423:	inc    eax
  416424:	push   cs
  416425:	xchg   edi,eax
  416426:	pop    ds
  416427:	dec    esi
  416428:	in     eax,dx
  416429:	int3   
  41642a:	mov    ch,0x47
  41642c:	dec    eax
  41642d:	cmp    DWORD PTR [ecx],0xc
  416430:	cmc    
  416431:	jo     0x71362b1d
  416437:	inc    esi
  416438:	ror    DWORD PTR [eax-0x7b],cl
  41643b:	in     eax,dx
  41643c:	mov    ds:0x541b9126,eax
  416441:	int3   
  416442:	jbe    0x4163c8
  416444:	mul    BYTE PTR [ebp-0x5aa3d90d]
  41644a:	jbe    0x41641e
  41644c:	out    0x52,eax
  41644e:	xchg   ebx,eax
  41644f:	jg     0x416475
  416451:	add    dh,BYTE PTR [edx-0x7dc57ce7]
  416457:	repz adc eax,0x6577ed42
  41645d:	sub    al,0xfc
  41645f:	pusha  
  416460:	pop    ds
  416461:	xor    al,0xcf
  416463:	fstp   QWORD PTR [edi+esi*4+0x3b]
  416467:	push   0xf7795d0
  41646c:	push   ecx
  41646d:	jmp    0x416435
  41646f:	jne    0x41649e
  416471:	mov    ah,0xe0
  416473:	sub    al,0xbc
  416475:	sbb    ecx,DWORD PTR [ecx]
  416477:	test   al,0xc3
  416479:	mov    BYTE PTR [esi],ch
  41647b:	int    0xc1
  41647d:	xchg   esp,eax
  41647e:	arpl   WORD PTR [edi+ebx*4+0x37],cx
  416482:	xchg   esp,eax
  416483:	sub    eax,0x62eb88e8
  416488:	or     bh,BYTE PTR [esi+0x2]
  41648b:	mov    gs,WORD PTR [eax]
  41648d:	mov    al,ds:0x45f4f4b
  416492:	mov    eax,ds:0x5bad157f
  416497:	pop    ds
  416498:	sub    ah,BYTE PTR [eax]
  41649a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41649b:	(bad)  
  41649c:	adc    eax,DWORD PTR [edi]
  41649e:	lock ds jno 0x4164ff
  4164a2:	into   
  4164a3:	pop    eax
  4164a4:	loopne 0x416473
  4164a6:	cdq    
  4164a7:	adc    BYTE PTR [esi+0xb],ch
  4164aa:	xor    BYTE PTR [edx-0x1],0xf7
  4164ae:	push   ebx
  4164af:	mov    BYTE PTR [edi+0x76],dh
  4164b2:	retf   
  4164b3:	pusha  
  4164b4:	stc    
  4164b5:	dec    ecx
  4164b6:	dec    ebp
  4164b7:	mov    esi,0x304ba272
  4164bc:	mov    eax,ds:0xe7378f86
  4164c1:	and    eax,0x45c2a79
  4164c6:	repnz adc edx,DWORD PTR [esi+0x2f]
  4164ca:	int    0xb4
  4164cc:	mov    edi,0xbd6b20db
  4164d1:	sti    
  4164d2:	dec    esi
  4164d3:	retf   0x1a08
  4164d6:	or     al,0x9c
  4164d9:	repnz arpl WORD PTR ss:[ecx],bx
  4164dd:	jo     0x416544
  4164df:	fcmovnbe st,st(3)
  4164e1:	aaa    
  4164e2:	jl     0x416467
  4164e4:	(bad)  
  4164e5:	aam    0xa2
  4164e7:	pop    ebp
  4164e8:	or     ebx,DWORD PTR [ebx-0x4e]
  4164eb:	dec    eax
  4164ec:	in     eax,0x76
  4164ee:	sub    ebx,0xbb746dec
  4164f4:	adc    ch,BYTE PTR cs:[ebx+0x7e]
  4164f8:	fisub  DWORD PTR [eax]
  4164fa:	in     eax,dx
  4164fb:	pop    es
  4164fc:	and    eax,0x22b3ed2a
  416502:	xlat   BYTE PTR ds:[ebx]
  416503:	sub    BYTE PTR [edi+eax*2],dh
  416506:	cmp    al,0xd8
  416508:	jne    0x4164ea
  41650a:	pusha  
  41650b:	cdq    
  41650c:	pop    esp
  41650d:	out    dx,al
  41650e:	push   ecx
  41650f:	test   BYTE PTR [ebp-0x72],dh
  416512:	inc    ebx
  416513:	aas    
  416514:	fmul   DWORD PTR ds:0x27970739
  41651a:	loopne 0x41657b
  41651c:	ins    BYTE PTR es:[edi],dx
  41651d:	sti    
  41651e:	sahf   
  41651f:	(bad)  
  416520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416521:	pop    ecx
  416522:	imul   esp,eax,0x94c4b2bd
  416528:	mov    bh,0xf6
  41652a:	shr    BYTE PTR [esi],0x44
  41652d:	fild   DWORD PTR [edx+0x3ade1d60]
  416533:	out    0x8f,eax
  416535:	popa   
  416536:	not    BYTE PTR [esi+0xd]
  416539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41653a:	arpl   WORD PTR [eax],di
  41653c:	xchg   edi,eax
  41653d:	xchg   esi,eax
  41653e:	nop
  41653f:	in     al,dx
  416540:	popf   
  416541:	mov    ds:0x2dfba786,al
  416546:	pop    es
  416547:	jnp    0x416548
  416549:	(bad)  
  41654a:	cmp    DWORD PTR [eax-0x1f0d4aa],ecx
  416550:	xchg   edx,eax
  416551:	and    al,0xfa
  416553:	dec    eax
  416554:	mov    WORD PTR [ecx+eax*4+0x625e771],fs
  41655b:	mov    ah,0x41
  41655d:	retf   0x24f6
  416560:	in     al,0x89
  416562:	icebp  
  416563:	dec    edi
  416565:	push   eax
  416566:	pushf  
  416567:	xor    BYTE PTR [ebp+0x30594307],bl
  41656d:	and    edx,DWORD PTR [eax+0x6]
  416570:	and    DWORD PTR [edi+0x57527e24],edx
  416576:	mov    ds:0x541f357c,al
  41657b:	call   0x8c567b1a
  416580:	enter  0xbeb,0xa
  416584:	xchg   esp,eax
  416585:	lods   eax,DWORD PTR ds:[esi]
  416586:	add    cl,dh
  416588:	dec    eax
  416589:	test   al,0x9
  41658b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41658c:	sbb    edx,ebp
  41658e:	adc    DWORD PTR [ecx+ecx*8],edi
  416591:	sti    
  416592:	iret   
  416593:	cld    
  416594:	jmp    0xb3cc:0x201fd2bf
  41659b:	mov    ds:0x8200753,al
  4165a0:	adc    DWORD PTR [ecx],ebx
  4165a2:	scas   al,BYTE PTR es:[edi]
  4165a3:	iret   
  4165a4:	dec    ebp
  4165a5:	inc    esp
  4165a6:	or     BYTE PTR [ebx],0x28
  4165a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165aa:	lods   al,BYTE PTR ds:[esi]
  4165ab:	mov    dh,0xe5
  4165ad:	or     eax,0xe916dfd0
  4165b2:	pushf  
  4165b3:	add    bl,BYTE PTR [ecx]
  4165b5:	lahf   
  4165b6:	outs   dx,BYTE PTR ds:[esi]
  4165b7:	out    0x22,eax
  4165b9:	and    al,0x20
  4165bb:	lock dec ebx
  4165bd:	sbb    al,0x24
  4165bf:	add    esi,DWORD PTR [edi]
  4165c1:	mov    eax,0xcbc1e500
  4165c6:	mov    esi,0x67e9b372
  4165cb:	(bad)  
  4165cd:	sbb    ecx,edx
  4165cf:	out    0xdd,al
  4165d1:	push   eax
  4165d2:	inc    ebp
  4165d3:	sar    BYTE PTR [eax-0x34],0xfe
  4165d7:	pop    eax
  4165d8:	arpl   WORD PTR [edi+0x66],bp
  4165db:	ret    0xd53e
  4165de:	lahf   
  4165df:	inc    eax
  4165e0:	jae    0x41658e
  4165e2:	retf   
  4165e3:	les    edx,FWORD PTR [edi+edx*2-0x1f4d39c2]
  4165ea:	cmp    al,0x2d
  4165ec:	and    al,0x5b
  4165ee:	lods   al,BYTE PTR ds:[esi]
  4165ef:	lods   eax,DWORD PTR ds:[esi]
  4165f0:	scas   al,BYTE PTR es:[edi]
  4165f1:	aam    0x70
  4165f3:	stos   BYTE PTR es:[edi],al
  4165f4:	retf   0xa54c
  4165f7:	sbb    al,BYTE PTR [ebp+0xcd9bb40]
  4165fd:	jp     0x416663
  4165ff:	pop    eax
  416600:	lods   al,BYTE PTR ds:[esi]
  416601:	dec    edx
  416602:	pop    edx
  416603:	(bad)  
  416604:	cmp    edx,DWORD PTR [edi+0xbff7204]
  41660a:	aas    
  41660b:	scas   al,BYTE PTR es:[edi]
  41660c:	mov    cl,0x7f
  41660e:	sbb    DWORD PTR [ebp-0x6c],eax
  416611:	adc    ch,bh
  416613:	mov    BYTE PTR [esi-0x1a],dh
  416616:	ds push ebp
  416618:	cmp    bh,BYTE PTR ds:0x9e51aa7f
  41661e:	enter  0x24d7,0xc2
  416622:	outs   dx,BYTE PTR ds:[esi]
  416623:	scas   eax,DWORD PTR es:[edi]
  416624:	mov    ebx,0xece1874b
  416629:	out    dx,eax
  41662a:	je     0x4165d9
  41662c:	(bad)  
  41662d:	xchg   ebp,eax
  41662e:	lods   eax,DWORD PTR ds:[esi]
  41662f:	bound  eax,QWORD PTR [ebp-0x47c5a7bf]
  416635:	je     0x416602
  416637:	je     0x4165c8
  416639:	repnz rcr DWORD PTR [edx],cl
  41663c:	repnz mov edi,cs
  41663f:	mov    esi,gs
  416641:	stc    
  416642:	sbb    al,0xe2
  416644:	push   eax
  416645:	xchg   edx,eax
  416646:	cwde   
  416647:	xchg   esi,eax
  416648:	adc    eax,0x8b89716a
  41664d:	mov    ss,WORD PTR [eax]
  41664f:	sbb    eax,0xef6c1908
  416654:	jecxz  0x41665d
  416656:	push   0xb554dadb
  41665b:	or     bh,ch
  41665d:	loop   0x416622
  41665f:	std    
  416660:	lahf   
  416661:	ss jg  0x4165ee
  416664:	mov    esi,0x2642b9a9
  416669:	rol    DWORD PTR [esi],1
  41666b:	mov    esp,0xfe94c8a0
  416670:	or     DWORD PTR [eax+0x38],0xe860fb7f
  416677:	retf   0x63cc
  41667a:	sub    al,0xc6
  41667c:	daa    
  41667d:	dec    esi
  41667e:	enter  0x78a2,0x22
  416682:	int    0x6f
  416684:	xchg   ebp,eax
  416685:	push   ds
  416686:	or     ecx,DWORD PTR [edx+0x6f]
  416689:	loop   0x41664a
  41668b:	shl    BYTE PTR [edx],1
  41668d:	mov    ecx,DWORD PTR [ebp+0x761d3a4d]
  416693:	mov    bl,0x64
  416695:	loop   0x416634
  416697:	push   ebx
  416698:	jg     0x4166fa
  41669a:	repnz in al,0x9
  41669d:	inc    ecx
  41669e:	pop    edi
  41669f:	enter  0x451f,0xfa
  4166a3:	ins    BYTE PTR es:[edi],dx
  4166a4:	(bad)  
  4166a5:	xchg   esi,eax
  4166a6:	test   eax,0x8400e4b4
  4166ab:	gs jg  0x4166b6
  4166ae:	mov    dh,0xe7
  4166b0:	shr    DWORD PTR [esi+edi*8],0x39
  4166b4:	fwait
  4166b5:	aas    
  4166b6:	adc    ah,BYTE PTR [ecx]
  4166b8:	pop    esi
  4166b9:	ins    BYTE PTR es:[edi],dx
  4166ba:	mov    cl,0x65
  4166bc:	add    BYTE PTR ds:0x16b5da6e,bl
  4166c2:	jecxz  0x416673
  4166c4:	test   al,0x19
  4166c6:	loopne 0x41673e
  4166c8:	imul   edi,DWORD PTR [eax],0xffffff9e
  4166cb:	cwde   
  4166cc:	bound  ecx,QWORD PTR [ecx-0x8]
  4166cf:	adc    DWORD PTR [ebx-0x305a7371],esi
  4166d5:	mov    dl,0xc3
  4166d7:	leave  
  4166d8:	lods   al,BYTE PTR ss:[esi]
  4166da:	push   es
  4166db:	pop    esi
  4166dc:	lods   al,BYTE PTR ds:[esi]
  4166dd:	es jno 0x416684
  4166e0:	mov    eax,0x9571a193
  4166e5:	stc    
  4166e6:	sbb    bh,BYTE PTR ds:0x297f01c
  4166ec:	push   esp
  4166ed:	pop    esi
  4166ee:	push   ebp
  4166ef:	or     al,0x20
  4166f1:	jne    0x416752
  4166f3:	data16 xchg BYTE PTR [eax+0x3f],bl
  4166f7:	adc    edi,ebx
  4166f9:	test   DWORD PTR [ebp-0x7e],ecx
  4166fc:	mov    ecx,0x511ea82c
  416701:	lea    ebx,[esp+esi*1+0x787aa61b]
  416708:	dec    eax
  416709:	dec    ecx
  41670a:	push   0xf6c42b8a
  41670f:	loope  0x4166da
  416711:	cmp    BYTE PTR [edi+eiz*8-0x87d0fb7],dl
  416718:	adc    bh,BYTE PTR [ecx+edi*1-0x1e3da37d]
  41671f:	push   cs
  416720:	int3   
  416721:	or     al,0xcb
  416723:	sbb    al,0x76
  416725:	jnp    0x41672d
  416727:	das    
  416728:	pop    esp
  416729:	push   ds
  41672a:	js     0x4167a7
  41672c:	sahf   
  41672d:	inc    eax
  41672e:	mov    WORD PTR [ecx+edi*2],cs
  416731:	ds dec ecx
  416733:	retf   
  416734:	push   ds
  416735:	pop    ebx
  416736:	push   0x288bdc98
  41673b:	xlat   BYTE PTR ds:[ebx]
  41673c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41673d:	cwde   
  41673e:	inc    edi
  41673f:	ja     0x4166ef
  416741:	mov    ds:0x551ae6a,al
  416746:	mov    dh,0x97
  416748:	mov    bl,0x49
  41674a:	outs   dx,DWORD PTR ds:[esi]
  41674b:	mov    eax,ds:0x804a2b29
  416750:	push   ebx
  416751:	cmp    BYTE PTR ds:0x63b28337,0x8a
  416758:	sub    BYTE PTR [edx],al
  41675a:	and    ebx,ebx
  41675c:	push   ebp
  41675d:	outs   dx,BYTE PTR ds:[esi]
  41675e:	jmp    0xc9f5:0xc6f23c7d
  416765:	ss loope 0x416714
  416768:	add    esp,DWORD PTR [esi-0x951aa10]
  41676e:	push   ebp
  41676f:	push   ecx
  416770:	inc    edx
  416771:	and    ah,dl
  416773:	sub    BYTE PTR [eax+0x59a66360],ch
  416779:	xchg   esi,eax
  41677a:	mov    esi,DWORD PTR [ebx]
  41677c:	les    edx,FWORD PTR [edx+0x3043430f]
  416782:	pop    eax
  416783:	mov    bl,0x3d
  416785:	push   esp
  416786:	lds    ebx,FWORD PTR [edi]
  416788:	scas   eax,DWORD PTR es:[edi]
  416789:	mov    ebx,ebx
  41678b:	in     al,dx
  41678c:	ror    BYTE PTR [ecx-0x32],1
  41678f:	mov    DWORD PTR [ebx-0x4af09081],edx
  416795:	shl    bl,cl
  416797:	or     BYTE PTR [ebx-0x27],0x2
  41679b:	mov    DWORD PTR [edx+ebp*1],0xe4b5d5a2
  4167a2:	imul   DWORD PTR [edi]
  4167a4:	fs xchg edi,eax
  4167a6:	popf   
  4167a7:	mov    ch,0xab
  4167a9:	jmp    0x9b8d:0x97a17db1
  4167b0:	and    eax,0xed437f7d
  4167b5:	shl    DWORD PTR [edi+edx*1+0x62],1
  4167b9:	dec    ecx
  4167ba:	dec    edx
  4167bb:	xchg   edi,eax
  4167bc:	pushf  
  4167bd:	ins    BYTE PTR es:[edi],dx
  4167be:	inc    ecx
  4167bf:	addr16 inc edx
  4167c1:	or     DWORD PTR [eax+esi*4-0x7450ed3b],0x5d
  4167c9:	pusha  
  4167ca:	mov    dh,0x3e
  4167cc:	test   BYTE PTR [ebp+0x74],ch
  4167cf:	imul   ecx
  4167d1:	mov    edx,0xe9941ba7
  4167d6:	inc    eax
  4167d7:	repnz stos BYTE PTR es:[edi],al
  4167d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167da:	jmp    0x4167e5
  4167dc:	fs pop ebx
  4167de:	ret    
  4167df:	ficom  WORD PTR [esi]
  4167e1:	fdiv   QWORD PTR [ebp+eiz*1+0x4b]
  4167e5:	mov    bh,cl
  4167e7:	jbe    0x4167ca
  4167e9:	add    eax,0x6cbb8dae
  4167ee:	cmp    cl,al
  4167f0:	mov    dh,0x2b
  4167f2:	mov    ch,0x6c
  4167f4:	paddd  mm3,mm1
  4167f7:	call   0xa6404ae0
  4167fc:	jae    0x41681d
  4167fe:	or     ch,BYTE PTR [eax-0x4a019aa5]
  416804:	pop    es
  416805:	pop    eax
  416806:	daa    
  416807:	jne    0x4167a7
  416809:	sar    DWORD PTR [eax],cl
  41680b:	mov    edi,0xd851dc2f
  416810:	or     edx,ebp
  416812:	outs   dx,BYTE PTR ds:[esi]
  416813:	pushf  
  416814:	leave  
  416815:	out    dx,al
  416816:	into   
  416817:	jl     0x4167ea
  416819:	jmp    0x4167ff
  41681b:	inc    ebx
  41681c:	pusha  
  41681d:	jnp    0x4167d0
  41681f:	out    0x6b,eax
  416821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416822:	popf   
  416823:	or     DWORD PTR [esi],ecx
  416825:	inc    eax
  416826:	ret    0x4e90
  416829:	repnz lahf 
  41682b:	inc    edx
  41682c:	rcl    DWORD PTR [edi-0x69dcd242],1
  416832:	mov    ebx,DWORD PTR [ecx+0x74]
  416835:	jo     0x4167f4
  416837:	lea    esi,[esi]
  416839:	pop    edx
  41683a:	push   cs
  41683b:	cmp    al,0x38
  41683d:	jmp    0x5a1b:0xb8841aaa
  416844:	cmp    eax,0x55612924
  416849:	mov    ebx,0x7bd8bea5
  41684e:	mov    edi,0x1f97a90c
  416853:	call   0xe08b8c2d
  416858:	jg     0x416883
  41685a:	dec    edx
  41685b:	outs   dx,DWORD PTR ds:[esi]
  41685c:	mov    esi,edx
  41685e:	aaa    
  41685f:	mov    al,0x42
  416861:	pushf  
  416862:	and    BYTE PTR [eax+ebp*1-0x3f],bl
  416866:	mov    esp,0xe940ec10
  41686b:	ss retf 
  41686d:	repnz stc 
  41686f:	and    al,0x2d
  416871:	inc    edi
  416872:	loope  0x416824
  416874:	popa   
  416875:	fldl2e 
  416877:	pop    eax
  416878:	xor    ebx,esp
  41687a:	lahf   
  41687b:	lds    eax,FWORD PTR [ecx]
  41687d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41687e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416880:	cli    
  416881:	test   DWORD PTR [edi+0x2d30121b],ecx
  416887:	sbb    al,0xba
  416889:	or     esp,DWORD PTR [esi+edx*2]
  41688c:	fmul   QWORD PTR [ebx]
  41688e:	enter  0x8de2,0xcb
  416892:	fidiv  WORD PTR ds:0xd9d12854
  416898:	jmp    0x416852
  41689a:	jge    0x4168e3
  41689c:	xor    edx,0xffffff97
  41689f:	push   ebx
  4168a0:	hlt    
  4168a1:	dec    edi
  4168a2:	fidivr WORD PTR ss:[ecx-0x75d91b27]
  4168a9:	pop    esi
  4168aa:	ins    BYTE PTR es:[edi],dx
  4168ab:	cmp    edx,0xb0b89b5d
  4168b1:	gs jmp 0x416837
  4168b4:	dec    ebx
  4168b5:	pusha  
  4168b6:	fmul   QWORD PTR [esi]
  4168b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b9:	sbb    eax,0xabc6ad00
  4168be:	sub    DWORD PTR [eax+0x12],esi
  4168c1:	mov    esi,0x69bf2959
  4168c6:	daa    
  4168c7:	and    al,0xda
  4168c9:	cmovne esp,DWORD PTR [edx-0x61]
  4168cd:	cmp    al,0x2b
  4168cf:	scas   eax,DWORD PTR es:[edi]
  4168d0:	xchg   ecx,eax
  4168d1:	jle    0x4168ca
  4168d3:	pop    esi
  4168d4:	aam    0x57
  4168d6:	xchg   edx,eax
  4168d7:	push   ds
  4168d8:	lods   al,BYTE PTR ds:[esi]
  4168d9:	fld    TBYTE PTR [ebx]
  4168db:	pop    esp
  4168dc:	lds    ecx,FWORD PTR [ebx+esi*2+0x6f]
  4168e0:	cmp    al,0x35
  4168e2:	cmp    ebp,DWORD PTR [esi+0x77d6ac00]
  4168e8:	sub    al,0x4d
  4168ea:	add    BYTE PTR [esi+edi*2-0x55],bl
  4168ee:	inc    edi
  4168ef:	pop    ecx
  4168f0:	test   al,0x4e
  4168f2:	pop    ss
  4168f3:	cmc    
  4168f4:	shr    edi,1
  4168f6:	(bad)  
  4168f7:	fst    QWORD PTR es:[edi]
  4168fa:	aaa    
  4168fb:	test   BYTE PTR [eax-0x1a],0x3c
  4168ff:	jns    0x416903
  416901:	mov    ebp,DWORD PTR [ebx+esi*8-0x507e9ad7]
  416908:	mov    al,ds:0x5ac15c47
  41690d:	scas   al,BYTE PTR es:[edi]
  41690e:	and    DWORD PTR [ebx-0x752a1764],ebp
  416914:	mov    esi,0x9acc7429
  416919:	push   ebx
  41691a:	and    BYTE PTR [ebx-0x38],0x51
  41691e:	sbb    al,0x42
  416920:	jne    0x416922
  416922:	mov    al,BYTE PTR [eax]
  416924:	push   eax
  416925:	cli    
  416926:	lock inc esi
  416928:	icebp  
  416929:	mov    BYTE PTR [edi+0x5f981efb],0xbb
  416930:	scas   eax,DWORD PTR es:[edi]
  416931:	mov    al,bl
  416933:	in     eax,0xb3
  416935:	jmp    0x416960
  416937:	inc    edi
  416938:	mov    ds:0x75e9f7ef,eax
  41693d:	jmp    0xc047391f
  416942:	and    DWORD PTR [esi],edi
  416944:	lds    ecx,FWORD PTR [edx]
  416946:	ret    
  416947:	jae    0x4168cd
  416949:	jb     0x416970
  41694b:	add    cl,BYTE PTR [ebx-0x48376282]
  416951:	fdivr  st(3),st
  416953:	mov    bl,0x23
  416955:	jp     0x416954
  416957:	ins    BYTE PTR es:[edi],dx
  416958:	push   edx
  416959:	jns    0x416969
  41695b:	js     0x416959
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	cmp    eax,0xcb10fd2e
  416963:	xchg   dl,ah
  416965:	or     DWORD PTR [esi+eax*2-0x46a69899],ebx
  41696c:	sar    DWORD PTR [edx+0x691b8799],cl
  416972:	xchg   edi,eax
  416973:	inc    ebp
  416974:	retf   
  416975:	mov    edi,0xcd991018
  41697a:	jmp    FWORD PTR [edx-0x3b44f469]
  416980:	sbb    BYTE PTR [edx-0x456f4dc2],dh
  416986:	(bad)  
  416987:	sub    edi,DWORD PTR ds:0xb2017043
  41698d:	ss jle 0x416931
  416990:	sbb    al,0x12
  416992:	xchg   ebx,eax
  416993:	inc    edi
  416994:	push   edi
  416995:	in     al,dx
  416996:	xor    BYTE PTR [esi-0x1c9747a],0x8b
  41699d:	xor    bl,BYTE PTR [ebx]
  41699f:	cli    
  4169a0:	sub    dh,BYTE PTR [edx+0x621625fe]
  4169a6:	adc    BYTE PTR [esi+0x5a],dh
  4169a9:	jnp    0x4169ae
  4169ab:	push   esp
  4169ac:	shr    DWORD PTR [esi+0x64faa1a],0x2c
  4169b3:	or     DWORD PTR [eax+0x33],0xffffffb6
  4169b7:	dec    eax
  4169b8:	and    al,0xbd
  4169ba:	mov    ebp,0x199b5fac
  4169bf:	cmp    al,0x5c
  4169c1:	(bad)  
  4169c2:	push   edx
  4169c3:	cmp    DWORD PTR [ebp-0x1a150c7f],eax
  4169c9:	outs   dx,DWORD PTR ds:[esi]
  4169ca:	or     al,0x53
  4169cc:	jle    0x4169dc
  4169ce:	fsubp  st(6),st
  4169d0:	bound  ecx,QWORD PTR [ebx+0x6811c035]
  4169d6:	(bad)  
  4169d7:	mov    eax,0x336f38ac
  4169dc:	xlat   BYTE PTR ds:[ebx]
  4169dd:	mov    ah,0xe5
  4169df:	(bad)  
  4169e0:	lahf   
  4169e1:	add    al,0x4e
  4169e3:	and    DWORD PTR [edx-0x63],esi
  4169e6:	enter  0xd8cd,0x77
  4169ea:	push   es
  4169eb:	and    eax,0x269e9a4a
  4169f0:	(bad)  
  4169f1:	sub    DWORD PTR [esi+0x78b9bf13],ebp
  4169f7:	outs   dx,BYTE PTR ds:[esi]
  4169f8:	gs mov bh,0xe
  4169fb:	mov    ds:0x6dc6d4a7,al
  416a00:	mov    ebx,0xde4fddc9
  416a05:	push   esi
  416a06:	adc    ah,BYTE PTR [edx+0x4f6e84fe]
  416a0c:	or     eax,0xeeacba4b
  416a11:	xchg   ebp,eax
  416a12:	fstp   QWORD PTR [ebx+edi*8+0x58]
  416a16:	mov    eax,ds:0x2590d754
  416a1b:	jno    0x416a4f
  416a1d:	fimul  DWORD PTR [ecx-0x1]
  416a20:	les    ebx,FWORD PTR [ebx-0x787307e8]
  416a26:	cwde   
  416a27:	mov    ah,0x35
  416a29:	jle    0x4169d7
  416a2b:	idiv   BYTE PTR [esi-0x6d]
  416a2e:	test   al,0x4a
  416a30:	mov    bh,BYTE PTR [edi+0x72c20afb]
  416a36:	scas   al,BYTE PTR es:[edi]
  416a37:	dec    ebp
  416a38:	lea    ebp,ds:0x17b4d75b
  416a3e:	fstp   DWORD PTR [eax+0x2ecd4cd6]
  416a44:	pop    ebp
  416a45:	pushf  
  416a46:	xor    esp,DWORD PTR ds:0x2d403b5a
  416a4c:	push   cs
  416a4d:	cmc    
  416a4e:	cli    
  416a4f:	inc    eax
  416a50:	mov    ch,0x12
  416a52:	jmp    0x5744:0x8620c0f6
  416a59:	rol    DWORD PTR [ebx+0x7f54a887],cl
  416a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a60:	jae    0x416a0e
  416a62:	cdq    
  416a63:	aas    
  416a64:	and    al,0xa9
  416a66:	jae    0x416a04
  416a68:	nop
  416a69:	cli    
  416a6a:	and    BYTE PTR [ebx+0x3b2ff20d],al
  416a70:	pop    edx
  416a71:	icebp  
  416a72:	lods   eax,DWORD PTR ds:[esi]
  416a73:	scas   eax,DWORD PTR es:[edi]
  416a74:	dec    BYTE PTR [ebx]
  416a76:	icebp  
  416a77:	cmp    DWORD PTR [ebp+ebx*4+0x61d0142b],esp
  416a7e:	jecxz  0x416a3a
  416a80:	xor    DWORD PTR [esi+0x4a637df2],ebx
  416a86:	sub    DWORD PTR [edx-0x5],0xffffff8d
  416a8a:	push   ds
  416a8b:	stos   BYTE PTR es:[edi],al
  416a8c:	jno    0x416acf
  416a8e:	(bad)  
  416a8f:	push   ecx
  416a90:	stc    
  416a91:	push   ss
  416a92:	add    BYTE PTR [ecx+eax*2+0x61],ah
  416a96:	cmp    DWORD PTR [ebx+ebx*8+0x43e31c23],eax
  416a9d:	scas   eax,DWORD PTR es:[edi]
  416a9e:	jge    0x416a53
  416aa0:	mov    edx,0x694e115
  416aa5:	jp     0x416ac5
  416aa7:	dec    esp
  416aa8:	mov    dh,0x95
  416aaa:	popf   
  416aab:	iret   
  416aac:	aaa    
  416aad:	icebp  
  416aae:	repz test eax,0x8d89fee2
  416ab4:	out    0xb0,eax
  416ab6:	aaa    
  416ab7:	call   0x1f4b2c84
  416abc:	sub    cl,BYTE PTR [ebx]
  416abe:	adc    al,0x9a
  416ac0:	jl     0x416af7
  416ac2:	out    0x5e,al
  416ac4:	inc    esi
  416ac5:	inc    edi
  416ac6:	mov    cl,0xd2
  416ac8:	inc    ecx
  416ac9:	and    bh,ah
  416acb:	adc    esi,DWORD PTR [ebx]
  416acd:	add    DWORD PTR [edx],esp
  416acf:	and    DWORD PTR [edi-0x575ffc28],edx
  416ad5:	cmp    al,0x6e
  416ad7:	cmp    al,0x4e
  416ad9:	xchg   esp,eax
  416ada:	mov    bh,0x7
  416adc:	jmp    0xb61e:0x10b15248
  416ae3:	sbb    edi,ecx
  416ae5:	scas   eax,DWORD PTR es:[edi]
  416ae6:	lea    ecx,[eax-0x17]
  416ae9:	in     eax,dx
  416aea:	push   es
  416aeb:	dec    esp
  416aec:	fld    st(5)
  416aee:	retf   0xfacd
  416af1:	pop    esp
  416af2:	push   ds
  416af3:	cmp    BYTE PTR [eax+ecx*1-0x4d],bh
  416af7:	imul   esi,edi,0x929fddff
  416afd:	inc    ebx
  416afe:	inc    eax
  416aff:	pop    edx
  416b00:	xchg   edx,eax
  416b01:	add    al,0x29
  416b03:	jecxz  0x416b41
  416b05:	std    
  416b06:	and    eax,0x7d1bd164
  416b0b:	or     ebp,DWORD PTR [eax+edx*8-0x3e78d5db]
  416b12:	mov    al,0x70
  416b14:	in     eax,dx
  416b15:	sbb    ebp,DWORD PTR [esi+0x7b]
  416b18:	inc    eax
  416b19:	mov    edi,0xe30b647a
  416b1e:	inc    eax
  416b1f:	adc    BYTE PTR [ebp-0x6602e72f],0xe9
  416b26:	retf   0xa99b
  416b29:	(bad)  
  416b2a:	idiv   BYTE PTR [edi+0x28]
  416b2d:	jmp    0x8891:0xa6137b9b
  416b34:	aam    0xc6
  416b36:	inc    eax
  416b37:	out    0x25,al
  416b39:	cmp    eax,DWORD PTR [ebp+0x2c]
  416b3c:	mov    esi,0x60071f8f
  416b41:	add    al,BYTE PTR [edi+ebp*2-0x57]
  416b45:	xor    al,0x3d
  416b47:	xchg   ebx,eax
  416b48:	test   BYTE PTR [ecx+0x25e58dde],ch
  416b4e:	mov    ds:0xe35e627a,al
  416b53:	sbb    eax,0xa1ede97
  416b58:	and    BYTE PTR [esi-0x19f99cbd],0x12
  416b5f:	imul   ebp,DWORD PTR [edi],0xa90f79b1
  416b65:	and    ch,BYTE PTR [ebp+eax*8+0x4e431e89]
  416b6c:	xchg   BYTE PTR [edi+ebx*8],ah
  416b6f:	popf   
  416b70:	ins    DWORD PTR es:[edi],dx
  416b71:	in     eax,0xec
  416b73:	pushf  
  416b74:	pop    esp
  416b75:	adc    bl,dh
  416b77:	clc    
  416b78:	sbb    esp,DWORD PTR [edx]
  416b7a:	jge    0x416bd5
  416b7c:	jae    0x416b54
  416b7e:	adc    DWORD PTR ds:0xf1ba5cfa,eax
  416b84:	dec    edx
  416b85:	bound  ebx,QWORD PTR [ebx-0x3d2e3ca4]
  416b8b:	cmp    ch,bl
  416b8d:	push   edx
  416b8e:	mov    bl,BYTE PTR [edx+0x710bbb87]
  416b94:	mov    eax,0x6afe65f
  416b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b9a:	or     eax,0xf8465707
  416b9f:	aad    0x25
  416ba1:	lds    edi,FWORD PTR [eax-0x768a5fcf]
  416ba7:	add    BYTE PTR [ecx+0x187de992],bl
  416bad:	(bad)  
  416bae:	shl    dh,cl
  416bb0:	in     eax,dx
  416bb1:	pop    edx
  416bb2:	sub    bl,BYTE PTR [ecx-0x28]
  416bb5:	int    0x1d
  416bb7:	cwde   
  416bb8:	adc    al,0x65
  416bba:	lds    esi,FWORD PTR [ebp-0x35]
  416bbd:	push   esp
  416bbe:	xchg   ecx,eax
  416bbf:	xor    ebx,ebx
  416bc1:	add    al,0x50
  416bc4:	mov    dh,0xfb
  416bc6:	into   
  416bc7:	ja     0x416b7e
  416bc9:	retf   0x93ef
  416bcc:	clc    
  416bcd:	or     BYTE PTR [esi+0x73],al
  416bd0:	dec    eax
  416bd1:	jp     0x416b7b
  416bd3:	jle    0x416b72
  416bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd6:	shl    DWORD PTR [ebx+eiz*8-0x6c],0x61
  416bdb:	call   0x1d30f1f1
  416be0:	fisubr DWORD PTR [eax+ebx*8]
  416be3:	cs push esp
  416be5:	jno    0x416bc8
  416be7:	pop    esi
  416be8:	xchg   esi,eax
  416be9:	or     DWORD PTR [edi-0x23],edi
  416bec:	mov    eax,ds:0xcab440fa
  416bf1:	or     al,0xff
  416bf3:	jmp    0x416ba0
  416bf5:	test   bh,cl
  416bf7:	jae    0x416bba
  416bf9:	jns    0x416ba1
  416bfb:	mov    al,ds:0xce28485e
  416c00:	mov    esp,0x5756a6cc
  416c05:	jg     0x416c1e
  416c07:	dec    esi
  416c08:	dec    esp
  416c09:	add    eax,0x8b638b17
  416c0e:	push   0x46
  416c10:	in     al,dx
  416c11:	sbb    ch,ch
  416c13:	and    BYTE PTR [ebx+0x42102fc6],0x60
  416c1a:	cmp    edi,0xafe4179c
  416c20:	ror    DWORD PTR [ebx+0x638c1634],cl
  416c26:	outs   dx,BYTE PTR ds:[esi]
  416c27:	hlt    
  416c28:	mov    esp,0xf67917dd
  416c2d:	sar    BYTE PTR [ecx+0x75b5b26c],0x6f
  416c34:	dec    edx
  416c35:	jge    0x416be6
  416c37:	xchg   esi,eax
  416c38:	int3   
  416c39:	pusha  
  416c3a:	rol    BYTE PTR [ecx],cl
  416c3c:	jle    0x416c5e
  416c3e:	cli    
  416c3f:	pop    es
  416c40:	pop    ds
  416c41:	sbb    al,BYTE PTR [eax+0x62ff1bbe]
  416c47:	jmp    DWORD PTR [ebp+0x2d65806e]
  416c4d:	in     eax,dx
  416c4e:	fisttp DWORD PTR [edx-0x26]
  416c51:	stos   BYTE PTR es:[edi],al
  416c52:	ror    edi,1
  416c54:	aaa    
  416c55:	imul   edi,DWORD PTR [edi+0x26],0x22
  416c59:	je     0x416c0b
  416c5b:	in     al,dx
  416c5c:	or     al,0xe1
  416c5e:	and    DWORD PTR [edx+0x2eecaf8c],edx
  416c64:	push   es
  416c65:	or     ebx,ecx
  416c67:	mov    esp,0xbb424588
  416c6c:	sub    eax,0x41ff03fc
  416c71:	daa    
  416c72:	fwait
  416c73:	retf   
  416c74:	pusha  
  416c75:	call   0x46c5cbf9
  416c7a:	arpl   WORD PTR [eax+0x37d93152],bx
  416c80:	inc    ebx
  416c81:	pop    ebp
  416c82:	mov    edi,0x16673636
  416c87:	cli    
  416c88:	(bad)  
  416c89:	pop    eax
  416c8a:	ror    DWORD PTR [ecx],cl
  416c8c:	mov    dh,0xb4
  416c8e:	into   
  416c8f:	or     al,0x48
  416c91:	xor    esp,eax
  416c93:	mov    ch,0xfa
  416c95:	rcl    ebx,0x94
  416c98:	addr16 mov cl,0x64
  416c9b:	shl    BYTE PTR [eax+ecx*4-0x7a287814],0x6b
  416ca3:	push   es
  416ca4:	push   ss
  416ca5:	sub    esi,edi
  416ca7:	popf   
  416ca8:	arpl   WORD PTR [esi+0x50],si
  416cab:	bound  edx,QWORD PTR [edi-0x73]
  416cae:	add    al,0xc3
  416cb0:	jbe    0x416c3f
  416cb2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  416cb4:	and    dl,al
  416cb6:	aas    
  416cb7:	pusha  
  416cb8:	xor    ecx,DWORD PTR [edi+0x1831e64d]
  416cbe:	or     eax,0x98f42e78
  416cc3:	inc    ebp
  416cc4:	vmulsd xmm7,xmm2,xmm5
  416cc8:	adc    eax,0x46f39e50
  416ccd:	rcr    dl,0x0
  416cd0:	mov    dl,0x25
  416cd2:	add    al,0xd5
  416cd4:	(bad)  
  416cd5:	jb     0x416c5f
  416cd7:	cdq    
  416cd8:	rcr    BYTE PTR [eax-0x6d],cl
  416cdb:	push   0xfe88a0a3
  416ce0:	(bad)  
  416ce1:	ss pop esp
  416ce3:	(bad)  
  416ce4:	pop    edx
  416ce5:	fnsave [esi-0x23]
  416ce8:	scas   al,BYTE PTR es:[edi]
  416ce9:	pop    edx
  416cea:	cld    
  416ceb:	push   cs
  416cec:	dec    eax
  416ced:	pop    esi
  416cee:	and    DWORD PTR [eax+0x49],eax
  416cf1:	and    DWORD PTR [eax],0x18c60e42
  416cf7:	sbb    ecx,DWORD PTR [ebp+0x1c]
  416cfa:	mov    WORD PTR [edi+0xe],gs
  416cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cfe:	mov    edi,0x6332d03
  416d03:	or     cl,BYTE PTR [ebx+0x5e45eab2]
  416d09:	inc    edi
  416d0a:	inc    ebp
  416d0b:	sub    BYTE PTR [ecx],ch
  416d0d:	sbb    BYTE PTR [eax-0x6c7137a0],ah
  416d13:	jl     0x416d24
  416d15:	add    eax,0x9fec8c2c
  416d1a:	xchg   edx,eax
  416d1b:	xor    DWORD PTR [ebx+0x71],ecx
  416d1e:	frstor [edx]
  416d20:	mov    ecx,0xdc485c82
  416d25:	and    DWORD PTR [edi-0x3b],edx
  416d28:	cmp    eax,0xc9b4ed15
  416d2d:	test   DWORD PTR [eax+edi*1],eax
  416d30:	mov    cl,0x83
  416d32:	adc    BYTE PTR [ebx+ecx*4+0x699235cf],0x72
  416d3a:	aas    
  416d3b:	ds dec eax
  416d3d:	xor    al,0x2
  416d3f:	pop    esi
  416d40:	std    
  416d41:	nop
  416d42:	hlt    
  416d43:	mov    esp,0x53bf991d
  416d48:	inc    edx
  416d49:	mov    edi,0x1062fa5
  416d4e:	ds or  edx,edi
  416d51:	push   ds
  416d52:	mov    edi,DWORD PTR [ecx]
  416d54:	fistp  QWORD PTR [edx+esi*8-0x45af600c]
  416d5b:	mov    bl,BYTE PTR [ebx+0x7d7cf8a8]
  416d61:	mov    dh,0x31
  416d63:	ss or  al,0x21
  416d66:	sbb    al,0x53
  416d68:	into   
  416d69:	ror    BYTE PTR [edi+0x26],1
  416d6c:	(bad)  
  416d6e:	sbb    DWORD PTR [eax],0x1d1a8db5
  416d74:	xchg   ecx,eax
  416d75:	nop
  416d76:	test   BYTE PTR [ebx+edi*4],0xd3
  416d7a:	clc    
  416d7b:	push   esi
  416d7c:	xchg   esp,eax
  416d7d:	mov    esp,0x34e8a55b
  416d82:	rcl    DWORD PTR [edi],cl
  416d84:	arpl   WORD PTR [eax],cx
  416d86:	sub    ch,BYTE PTR [edi+0x20ec1e06]
  416d8c:	push   esi
  416d8d:	sbb    DWORD PTR [eax-0x2a],ecx
  416d90:	jmp    0x2c6:0x7ccb6575
  416d97:	sbb    eax,0x7b5ab3df
  416d9c:	lahf   
  416d9d:	xor    DWORD PTR [eax-0x58],ebx
  416da0:	out    dx,al
  416da1:	ret    
  416da2:	cmp    BYTE PTR [edi-0x645cbb78],0x41
  416da9:	inc    esp
  416daa:	add    eax,0xc7c967bb
  416daf:	stc    
  416db0:	sahf   
  416db1:	dec    edi
  416db2:	xor    al,BYTE PTR [esi+0x6f]
  416db5:	xlat   BYTE PTR ds:[ebx]
  416db6:	add    edi,DWORD PTR [ebx]
  416db8:	and    ch,al
  416dba:	imul   ebx,DWORD PTR [eax+0x34],0xffffffe0
  416dbe:	ficomp WORD PTR [ecx+edx*2+0x17075553]
  416dc5:	cs sti 
  416dc7:	daa    
  416dc8:	loope  0x416d5d
  416dca:	jns    0x416dfb
  416dcc:	xor    ah,cl
  416dce:	imul   ecx,DWORD PTR ds:[edx+0x44],0x82a60707
  416dd6:	sahf   
  416dd7:	ins    BYTE PTR es:[edi],dx
  416dd8:	sub    BYTE PTR [ebx],ah
  416dda:	jecxz  0x416db6
  416ddc:	scas   eax,DWORD PTR es:[edi]
  416ddd:	xchg   edx,eax
  416dde:	dec    eax
  416ddf:	push   ds
  416de0:	mov    cl,0x81
  416de2:	push   ebx
  416de3:	xor    DWORD PTR [edi],esp
  416de5:	enter  0x9a51,0x39
  416de9:	pop    eax
  416dea:	lock je 0x416dfe
  416ded:	pop    esp
  416dee:	xchg   esp,eax
  416def:	jns    0x416e34
  416df1:	dec    esp
  416df2:	push   0xffffffcb
  416df4:	pop    eax
  416df5:	(bad)  
  416df6:	call   0x1adf3764
  416dfb:	mov    DWORD PTR [eax-0x10],edx
  416dfe:	lock xchg ebp,eax
  416e00:	or     ch,cl
  416e02:	shl    ch,0x23
  416e05:	test   eax,0xc86a1fb2
  416e0a:	sti    
  416e0b:	loope  0x416e2d
  416e0d:	iret   
  416e0e:	sub    al,0xd1
  416e10:	inc    esp
  416e11:	fdiv   QWORD PTR [eax-0x80]
  416e14:	cmp    eax,0x58eec96f
  416e19:	stos   DWORD PTR es:[edi],eax
  416e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e1b:	push   es
  416e1c:	popf   
  416e1d:	fidiv  DWORD PTR [edi-0x2e]
  416e20:	jns    0x416e07
  416e22:	gs cli 
  416e24:	repnz test eax,0x275acf3a
  416e2a:	and    eax,eax
  416e2c:	pop    ebp
  416e2d:	aam    0xb2
  416e2f:	dec    ecx
  416e30:	popf   
  416e31:	jmp    0xce585168
  416e36:	jp     0x416df2
  416e38:	(bad)  
  416e39:	and    cl,BYTE PTR [ecx]
  416e3b:	add    al,0x61
  416e3d:	inc    ecx
  416e3e:	jnp    0x416e74
  416e40:	cs cmp dl,dh
  416e43:	in     eax,0x35
  416e45:	sbb    bl,ah
  416e47:	ins    DWORD PTR es:[edi],dx
  416e48:	pushf  
  416e49:	jns    0x416ea2
  416e4b:	fisub  DWORD PTR [eax-0x7555f2]
  416e51:	push   cs
  416e52:	sbb    DWORD PTR [edx+edx*4+0x3035c9d5],esp
  416e59:	and    BYTE PTR [ebp+0x7f],ah
  416e5c:	fstp   TBYTE PTR [esi+0x29af2de8]
  416e62:	int3   
  416e63:	sahf   
  416e64:	jns    0x416e12
  416e66:	fidiv  DWORD PTR ds:0x86dc7174
  416e6c:	in     al,0x9a
  416e6e:	clc    
  416e6f:	jns    0x416ebc
  416e71:	push   ebp
  416e72:	and    DWORD PTR [eax],esp
  416e74:	shl    esi,1
  416e76:	(bad)  
  416e77:	cdq    
  416e78:	xlat   BYTE PTR ds:[ebx]
  416e79:	adc    DWORD PTR [bx+si],ebp
  416e7c:	sub    eax,0x88a24467
  416e81:	mov    edx,0x95355695
  416e86:	fistp  WORD PTR [ebx+0x2b]
  416e89:	neg    DWORD PTR [ebx]
  416e8b:	or     bl,0x49
  416e8e:	outs   dx,DWORD PTR ds:[esi]
  416e8f:	mov    ds,WORD PTR [ecx]
  416e91:	cmc    
  416e92:	retf   
  416e93:	cmp    dh,BYTE PTR [edx+eiz*1+0x4f]
  416e97:	test   al,0x55
  416e99:	sub    al,0xe1
  416e9b:	int    0xe1
  416e9d:	jg     0x416e3a
  416e9f:	xor    DWORD PTR [edx],ebx
  416ea1:	and    cl,bl
  416ea3:	arpl   WORD PTR [esi-0x18],ax
  416ea6:	mov    BYTE PTR [edx+0x54a25302],dl
  416eac:	jp     0x416f01
  416eae:	lahf   
  416eaf:	mov    ch,BYTE PTR [edx]
  416eb1:	and    edi,0xd4aa2e54
  416eb7:	lds    esi,FWORD PTR [esi+0x35]
  416eba:	test   eax,0xaf208c0c
  416ebf:	nop
  416ec0:	dec    edx
  416ec1:	push   edx
  416ec2:	int3   
  416ec3:	jle    0x416ea8
  416ec5:	scas   al,BYTE PTR es:[edi]
  416ec6:	adc    BYTE PTR ds:0x687fa8b8,0x9c
  416ecd:	das    
  416ece:	cwde   
  416ecf:	sub    DWORD PTR [edx],esi
  416ed1:	ret    0x1505
  416ed4:	ja     0x416edc
  416ed6:	nop
  416ed7:	dec    ebx
  416ed8:	pop    edx
  416ed9:	xor    edi,DWORD PTR [edi-0x4b]
  416edc:	cmp    eax,0xf961600d
  416ee1:	idiv   BYTE PTR [eax-0x2c]
  416ee4:	sub    al,0x79
  416ee6:	mov    esi,0x80499c83
  416eeb:	sahf   
  416eec:	add    DWORD PTR [edx+0x6a],ebx
  416eef:	mov    ecx,gs
  416ef1:	loop   0x416e9f
  416ef3:	in     eax,dx
  416ef4:	scas   al,BYTE PTR es:[edi]
  416ef5:	jbe    0x416ea3
  416ef7:	ror    DWORD PTR [ecx],cl
  416ef9:	jecxz  0x416ed6
  416efb:	in     al,dx
  416efc:	shl    DWORD PTR [ecx-0x57c067c4],cl
  416f02:	and    al,0xbe
  416f04:	mov    esi,0x93d96e81
  416f09:	or     eax,0x9a25d355
  416f0e:	adc    al,0xbb
  416f10:	xchg   edi,eax
  416f11:	fisttp WORD PTR [ecx+esi*1-0x11]
  416f15:	ins    BYTE PTR es:[edi],dx
  416f16:	xor    edx,esp
  416f18:	out    0xb,eax
  416f1a:	scas   eax,DWORD PTR es:[edi]
  416f1b:	adc    ecx,edx
  416f1d:	or     dh,BYTE PTR [bx]
  416f20:	pop    ss
  416f21:	(bad)  
  416f22:	out    dx,al
  416f23:	cli    
  416f24:	js     0x416eeb
  416f26:	push   eax
  416f27:	arpl   dx,ax
  416f29:	dec    ecx
  416f2a:	mov    bl,al
  416f2c:	hlt    
  416f2d:	test   DWORD PTR [eax],edi
  416f2f:	mov    cl,bl
  416f31:	add    al,0x59
  416f33:	sub    eax,0x5ca9ff62
  416f38:	js     0x416fac
  416f3a:	sbb    al,0xa3
  416f3c:	out    dx,al
  416f3d:	(bad)  
  416f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f3f:	dec    ecx
  416f40:	ins    DWORD PTR es:[edi],dx
  416f41:	inc    ebp
  416f42:	gs test eax,0x8e9e1aa6
  416f48:	ret    
  416f49:	je     0x416f7a
  416f4b:	dec    ebp
  416f4c:	ds imul esp,edi,0x606ad1d3
  416f53:	xchg   esi,eax
  416f54:	sar    DWORD PTR [edx],cl
  416f56:	xchg   DWORD PTR [eax-0x3e],edi
  416f59:	aas    
  416f5a:	mov    ah,0x5b
  416f5c:	idiv   ah
  416f5e:	mov    edx,0x4c6edbdb
  416f63:	popf   
  416f64:	fimul  WORD PTR [edi+0x6b]
  416f67:	stc    
  416f68:	sahf   
  416f69:	pop    es
  416f6a:	(bad)  
  416f6b:	jno    0x416f49
  416f6d:	jns    0x416fa6
  416f6f:	aas    
  416f70:	jns    0x416fde
  416f72:	retf   0xc716
  416f75:	or     BYTE PTR [edi+eiz*8-0x388b3ba0],al
  416f7c:	cmp    esp,DWORD PTR [edx-0x1fa3a564]
  416f82:	dec    ebx
  416f83:	js     0x416f33
  416f85:	popf   
  416f86:	pop    ebx
  416f87:	mov    cl,0x98
  416f89:	mov    dl,0xaa
  416f8b:	(bad)  
  416f8c:	xlat   BYTE PTR ds:[ebx]
  416f8d:	mov    al,0x4e
  416f8f:	inc    ebp
  416f90:	sub    edx,DWORD PTR [eax+0x67913868]
  416f96:	mov    dh,0x7a
  416f98:	push   esi
  416f99:	add    BYTE PTR [ebx],al
  416f9b:	sub    BYTE PTR [eax-0x29a08593],0x58
  416fa2:	sti    
  416fa3:	pop    eax
  416fa4:	pushf  
  416fa5:	cmp    DWORD PTR [ecx+0xa679436],ebp
  416fab:	ror    DWORD PTR [ebp+0x1a51bdfa],1
  416fb1:	cs xor al,0xc7
  416fb4:	sub    DWORD PTR [eax+0x63],esi
  416fb7:	pop    ecx
  416fb8:	push   0x9
  416fba:	inc    ebp
  416fbb:	mov    dl,0x7f
  416fbd:	rcr    BYTE PTR [ebp-0x2],cl
  416fc0:	mov    WORD PTR [edi],es
  416fc2:	mov    dl,0xc8
  416fc4:	lahf   
  416fc5:	scas   al,BYTE PTR es:[edi]
  416fc6:	scas   eax,DWORD PTR es:[edi]
  416fc7:	fdiv   st(3),st
  416fc9:	lea    ebx,[eax+0x3]
  416fcc:	scas   eax,DWORD PTR es:[edi]
  416fcd:	(bad)  
  416fce:	loop   0x416ff8
  416fd0:	push   esp
  416fd1:	(bad)  
  416fd2:	inc    esi
  416fd3:	jl     0x417022
  416fd5:	(bad)  
  416fd6:	pop    ebp
  416fd7:	and    BYTE PTR [edi],0xed
  416fda:	push   0xffffffb7
  416fdc:	pop    ss
  416fdd:	add    al,0xd8
  416fdf:	adc    eax,0x969028b9
  416fe4:	xchg   ecx,eax
  416fe5:	loope  0x417004
  416fe7:	repz retf 
  416fe9:	push   eax
  416fea:	mov    eax,DWORD PTR [edi]
  416fec:	sub    BYTE PTR [edi-0x16],al
  416fef:	inc    edx
  416ff0:	and    DWORD PTR [ebp-0x4d],0x2d
  416ff4:	sbb    DWORD PTR [eax+0x15],edi
  416ff7:	test   BYTE PTR [esi],ch
  416ff9:	sar    BYTE PTR [ebx-0x231313ed],0xf9
  417000:	sub    eax,0x74e30009
  417005:	push   cs
  417006:	add    eax,0x372f5c20
  41700b:	push   esp
  41700c:	jmp    0xd1b812c3
  417011:	loope  0x416f94
  417013:	xor    eax,0x64d186ad
  417018:	int3   
  417019:	mov    DWORD PTR [edi+0x1f372292],esi
  41701f:	into   
  417020:	arpl   WORD PTR [esp+ebp*8],cx
  417023:	or     edi,eax
  417025:	int    0x5c
  417027:	add    BYTE PTR [ebp+0x653c177],0xe4
  41702e:	inc    edi
  41702f:	jmp    0x6c01:0xba9feb5e
  417036:	ror    BYTE PTR [ebx],1
  417038:	mov    al,0x63
  41703a:	dec    ecx
  41703b:	dec    eax
  41703c:	xchg   esp,eax
  41703d:	adc    al,0x40
  41703f:	inc    esp
  417040:	dec    eax
  417041:	sub    esi,DWORD PTR [ebx+0x3c7537b8]
  417047:	cmp    edx,DWORD PTR [esi]
  417049:	push   eax
  41704a:	scas   eax,DWORD PTR es:[edi]
  41704b:	mov    ds:0x3de7909b,al
  417050:	lods   eax,DWORD PTR ds:[esi]
  417051:	add    eax,0x14a41f19
  417056:	in     eax,0x7
  417058:	mov    bl,0x6d
  41705a:	daa    
  41705b:	xchg   edx,eax
  41705c:	mov    ebp,DWORD PTR [edi+esi*2-0x3]
  417060:	pop    edi
  417061:	or     bl,0xd7
  417064:	ss or  eax,0x83346c4
  41706a:	or     DWORD PTR [edx],0xffffffe2
  41706d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41706e:	and    al,0x7f
  417070:	sbb    al,0x4a
  417072:	clc    
  417073:	div    eax
  417075:	push   edi
  417076:	push   cs
  417077:	fxch   st(3)
  417079:	xchg   BYTE PTR [ebx],ah
  41707b:	ficom  DWORD PTR [ebx+0x4a]
  41707e:	and    edx,DWORD PTR [esi+eiz*4+0x68]
  417082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417083:	jl     0x417049
  417085:	popf   
  417086:	ja     0x4170f8
  417088:	dec    edi
  417089:	pop    edi
  41708a:	(bad)  
  41708b:	adc    al,0x37
  41708d:	(bad)  
  41708e:	add    DWORD PTR [ecx-0x56],eax
  417091:	dec    edx
  417092:	push   edx
  417093:	jne    0x417018
  417095:	cmp    DWORD PTR [ebx],esi
  417097:	popf   
  417098:	and    al,0x36
  41709a:	cld    
  41709b:	sbb    BYTE PTR [edx+0x12],0xce
  41709f:	xchg   BYTE PTR fs:[ebx-0x3b],ah
  4170a3:	enter  0xc116,0x82
  4170a7:	pop    ecx
  4170a8:	ficom  WORD PTR [ebx]
  4170aa:	in     al,dx
  4170ab:	repz jbe 0x41707f
  4170ae:	and    edi,DWORD PTR [eax+0x25ee2818]
  4170b4:	xchg   ecx,eax
  4170b5:	ret    
  4170b6:	adc    al,0x4d
  4170b8:	lahf   
  4170b9:	and    BYTE PTR [eax+0x4e],bl
  4170bc:	xchg   BYTE PTR [ebx-0xe],cl
  4170bf:	cli    
  4170c0:	dec    ebx
  4170c1:	sti    
  4170c2:	xor    eax,0xfdcec4ec
  4170c7:	sub    DWORD PTR [ebx+0xf],ecx
  4170ca:	pop    eax
  4170cb:	aam    0xa4
  4170cd:	repz sub esi,0x2e
  4170d1:	pop    edi
  4170d2:	inc    esp
  4170d3:	ins    BYTE PTR es:[edi],dx
  4170d4:	jno    0x4170f2
  4170d6:	sub    cl,bh
  4170d8:	aad    0xb6
  4170da:	inc    DWORD PTR [eax+0x67]
  4170dd:	fild   WORD PTR [edi-0x20d10de4]
  4170e3:	popa   
  4170e4:	or     al,0xf6
  4170e6:	fs mov dh,0xfd
  4170e9:	dec    esi
  4170ea:	scas   al,BYTE PTR es:[edi]
  4170eb:	imul   ecx,DWORD PTR gs:[edi-0x87fdb3b],0xffffffb3
  4170f3:	loopne 0x417094
  4170f5:	dec    esi
  4170f6:	sbb    esp,DWORD PTR [ebp+ebp*8+0x10]
  4170fa:	jnp    0x417116
  4170fc:	stos   DWORD PTR es:[edi],eax
  4170fd:	mov    ds:0x13c6929a,eax
  417102:	imul   edx,eax,0x4e17726a
  417108:	enter  0xd0e,0x2e
  41710c:	punpckhbw mm3,mm4
  41710f:	test   al,0x93
  417111:	mov    bl,0xf3
  417113:	imul   esp,DWORD PTR [edi-0x72],0x6fc3d167
  41711a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41711b:	les    esi,FWORD PTR [edx+0x7690d211]
  417121:	lods   eax,DWORD PTR ds:[esi]
  417122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417123:	push   es
  417124:	sub    DWORD PTR [ecx-0x7c],ecx
  417127:	add    eax,0x26352c70
  41712c:	stos   DWORD PTR es:[edi],eax
  41712d:	imul   ebx,ebx,0xffffffe0
  417130:	fs enter 0x6211,0x95
  417135:	adc    DWORD PTR [eax],esi
  417137:	std    
  417138:	inc    BYTE PTR [ebp+ebx*4+0x55]
  41713c:	mov    bh,0x69
  41713e:	cld    
  41713f:	dec    edi
  417140:	sub    bh,BYTE PTR [edx+0x5e32d036]
  417146:	test   al,0x8b
  417148:	push   ecx
  417149:	stos   BYTE PTR es:[edi],al
  41714a:	int    0xd9
  41714c:	xchg   esp,eax
  41714d:	in     eax,0xa0
  41714f:	shr    dh,1
  417151:	sbb    esi,DWORD PTR [edi+0x7f701960]
  417157:	pop    ecx
  417158:	outs   dx,DWORD PTR ss:[esi]
  41715a:	mov    bh,0x96
  41715c:	in     eax,0xe3
  41715e:	imul   eax,DWORD PTR [ebx],0xe3a638ea
  417164:	sub    eax,0x64635769
  417169:	lods   eax,DWORD PTR ds:[esi]
  41716a:	arpl   di,sp
  41716c:	jbe    0x4170f7
  41716e:	xchg   edi,eax
  41716f:	sbb    al,0x37
  417171:	adc    DWORD PTR [eax],ebp
  417173:	or     eax,0xa945c12d
  417178:	xor    BYTE PTR [ebx],bh
  41717a:	iret   
  41717b:	sub    ecx,DWORD PTR [ebx+0x5a]
  41717e:	cmp    al,0x40
  417180:	imul   ecx,ebx,0xd9554cfb
  417186:	scas   al,BYTE PTR es:[edi]
  417187:	and    eax,esi
  417189:	mov    bl,0x12
  41718b:	dec    edi
  41718c:	aaa    
  41718d:	dec    ebx
  41718e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41718f:	xchg   ebx,eax
  417190:	pop    ebp
  417191:	(bad)  
  417192:	sti    
  417193:	mov    bh,0x49
  417195:	inc    esi
  417196:	out    0x76,al
  417198:	nop    DWORD PTR [ebp+0x2573c59]
  41719f:	into   
  4171a0:	sub    bh,BYTE PTR [edi-0x58704be2]
  4171a6:	xor    al,ah
  4171a8:	mov    eax,es:0x73a89b3e
  4171ae:	xor    ebp,DWORD PTR [ebx-0x1]
  4171b1:	pop    esi
  4171b2:	xchg   DWORD PTR [ebp+0x1c],edi
  4171b5:	mov    dh,0x15
  4171b7:	cwde   
  4171b8:	pop    es
  4171b9:	dec    ecx
  4171ba:	and    al,0x46
  4171bc:	int    0x34
  4171be:	aam    0xc4
  4171c0:	mov    ecx,DWORD PTR [edx+0x23]
  4171c3:	dec    ebp
  4171c4:	push   edi
  4171c5:	imul   DWORD PTR [edi+0x1e]
  4171c8:	adc    esp,eax
  4171ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171cb:	mov    edx,0x97a4acdb
  4171d0:	sub    ebp,edx
  4171d2:	aad    0x9a
  4171d4:	pushw  ss
  4171d6:	je     0x4171a9
  4171d8:	jnp    0x41717b
  4171da:	pop    ss
  4171db:	mov    ebx,0xae8d82b2
  4171e0:	push   0xffffffe3
  4171e2:	sahf   
  4171e3:	xchg   dh,bl
  4171e5:	ret    0xb2c
  4171e8:	mov    ecx,0xf9b1c39
  4171ed:	sbb    ebp,DWORD PTR [esi+eax*2-0x68]
  4171f1:	retf   0x342
  4171f4:	in     eax,0xde
  4171f6:	xchg   esi,eax
  4171f7:	lods   al,BYTE PTR ds:[esi]
  4171f8:	test   al,0xda
  4171fa:	imul   edi,eax,0x71
  4171fd:	jge    0x4171f4
  4171ff:	cld    
  417200:	inc    edx
  417201:	stc    
  417202:	aad    0x3b
  417204:	imul   edi,DWORD PTR [ebp+0x3654bd5f],0x799beefd
  41720e:	ror    BYTE PTR [ecx],0xcf
  417211:	add    DWORD PTR ds:0xdc0c69cb,ecx
  417217:	inc    esi
  417218:	add    ecx,DWORD PTR es:[edi-0x53]
  41721c:	mov    esp,0x9a8f64c5
  417221:	add    bl,bl
  417223:	out    dx,eax
  417224:	loope  0x417258
  417226:	ret    0x6a9e
  417229:	cmp    BYTE PTR [edi+0x2760724a],dl
  41722f:	cs dec ebp
  417231:	rcr    DWORD PTR ds:0x35077cc6,cl
  417237:	pop    ebp
  417238:	sub    al,BYTE PTR [ebp+ebp*2+0x3d]
  41723c:	daa    
  41723d:	jmp    0x76ec:0x1e7dd8be
  417244:	or     al,0xe7
  417246:	(bad)  
  417248:	aad    0x6
  41724a:	mov    cl,al
  41724c:	adc    al,0x75
  41724e:	sub    DWORD PTR [edx-0x7a],ecx
  417251:	std    
  417252:	sbb    BYTE PTR [edx],dh
  417254:	mov    fs,ebx
  417256:	and    ch,BYTE PTR [eax+0xd756a07]
  41725c:	stc    
  41725d:	jmp    0xa10c9039
  417262:	test   bh,0xcd
  417265:	and    ah,BYTE PTR [eax-0x10]
  417268:	repnz dec esi
  41726a:	dec    ecx
  41726b:	mov    cl,0x1b
  41726d:	xor    bl,al
  41726f:	jg     0x417244
  417271:	std    
  417272:	gs jns 0x417291
  417275:	loopne 0x4172c8
  417277:	fdiv   DWORD PTR [eax+ecx*8]
  41727a:	hlt    
  41727b:	shl    BYTE PTR ds:0xc0dea7be,cl
  417281:	syscall 
  417283:	xchg   BYTE PTR [edx+0x3e2229ad],bh
  417289:	out    dx,eax
  41728a:	ins    BYTE PTR es:[edi],dx
  41728b:	jbe    0x4172b3
  41728d:	xchg   ecx,eax
  41728e:	mov    esi,0x636df083
  417293:	retf   
  417294:	(bad)  
  417295:	or     al,0x41
  417297:	retf   0x4126
  41729a:	(bad)  
  41729b:	xor    DWORD PTR [edi-0x7a],ebx
  41729e:	sbb    eax,0xec5c37bb
  4172a3:	adc    bl,BYTE PTR [esi+0x44973ebd]
  4172a9:	dec    edi
  4172aa:	mov    eax,ds:0x50471deb
  4172af:	push   ecx
  4172b0:	mov    DWORD PTR [ecx],0x73c45f05
  4172b6:	mov    eax,ds:0xff41e88d
  4172bb:	int3   
  4172bc:	push   ds
  4172bd:	cmp    cl,BYTE PTR [esi-0x9]
  4172c0:	les    ebx,FWORD PTR [eax-0xcfc5f6f]
  4172c6:	(bad)
  4172ca:	adc    ebx,esi
  4172cc:	(bad)  
  4172cd:	fst    st(3)
  4172cf:	push   es
  4172d0:	xchg   ebp,eax
  4172d1:	adc    BYTE PTR [edx+ecx*1],bl
  4172d4:	cld    
  4172d5:	or     cl,BYTE PTR [esi]
  4172d7:	lds    esi,FWORD PTR [ebx]
  4172d9:	aas    
  4172da:	push   ds
  4172db:	or     al,0x6
  4172dd:	jecxz  0x4172b2
  4172df:	int    0x53
  4172e1:	int3   
  4172e2:	gs movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e5:	dec    edi
  4172e6:	ret    
  4172e7:	pop    esi
  4172e8:	fld    DWORD PTR [edi-0x18]
  4172eb:	and    DWORD PTR [eax-0x4d4009f1],ebx
  4172f1:	xchg   BYTE PTR [edx+0xca95ed7],cl
  4172f7:	loopne 0x41727d
  4172f9:	add    DWORD PTR [eax-0x1e],esi
  4172fc:	(bad)  [eax+0x70]
  4172ff:	cld    
  417300:	sub    ebp,DWORD PTR [eax]
  417302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417303:	adc    DWORD PTR ss:[ecx-0x2e341bd],ebx
  41730a:	push   ds
  41730b:	sbb    bh,BYTE PTR [eax+ecx*2-0x6e3ff282]
  417312:	clc    
  417313:	scas   eax,DWORD PTR es:[edi]
  417314:	pop    esi
  417315:	sar    dh,0x9e
  417318:	mov    eax,0x3dac0d4b
  41731d:	dec    esp
  41731e:	mov    bl,0xad
  417320:	add    esi,ecx
  417322:	push   ds
  417323:	mov    esp,0x494ba6f2
  417328:	jmp    0x91f:0x7edc3281
  41732f:	js     0x4172dd
  417331:	xor    al,BYTE PTR [edx+0x44840e02]
  417337:	or     eax,0x37ddb79d
  41733c:	fwait
  41733d:	sub    ah,BYTE PTR [ebp+0x5a]
  417340:	xchg   esp,eax
  417341:	dec    edi
  417342:	push   es
  417343:	bound  edi,QWORD PTR [eax+eax*1-0x11]
  417347:	sti    
  417348:	inc    eax
  417349:	rol    DWORD PTR ds:0xb54defd1,1
  41734f:	pop    ss
  417350:	ins    BYTE PTR es:[edi],dx
  417351:	adc    DWORD PTR [eax-0x63],esi
  417354:	xchg   ebx,eax
  417355:	lods   eax,DWORD PTR ds:[esi]
  417356:	repnz dec esp
  417358:	aaa    
  417359:	sbb    DWORD PTR ds:0x9c79d66e,ecx
  41735f:	sub    eax,0x6f2f0ae5
  417364:	js     0x417379
  417366:	xlat   BYTE PTR ds:[ebx]
  417367:	rcr    ah,cl
  417369:	daa    
  41736a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41736b:	sar    DWORD PTR [edi*4+0x57fd54ee],0x77
  417373:	xchg   esi,eax
  417374:	xchg   esp,eax
  417375:	aaa    
  417376:	push   0x4
  417378:	mov    cl,0xfd
  41737a:	mov    ebx,0xd54dd68
  41737f:	(bad)  
  417380:	retf   0x5ca
  417383:	daa    
  417384:	dec    esi
  417385:	sbb    DWORD PTR [eax],eax
  417387:	sar    dl,0xf9
  41738a:	inc    ecx
  41738b:	rcl    BYTE PTR [esi+eax*8-0x60],cl
  41738f:	fninit 
  417391:	sbb    esi,DWORD PTR [eax-0x5c]
  417394:	in     al,0x21
  417396:	mov    ebp,esi
  417398:	cld    
  417399:	or     esp,DWORD PTR [eax-0x1f435b9c]
  41739f:	cli    
  4173a0:	xor    dh,dh
  4173a2:	push   ebx
  4173a3:	push   esi
  4173a4:	dec    esi
  4173a5:	mov    ebp,0xa3d56012
  4173aa:	xchg   esp,eax
  4173ab:	cmp    BYTE PTR [esp+eax*8-0x2],dl
  4173af:	into   
  4173b0:	xchg   BYTE PTR [edx+edi*8-0x38],cl
  4173b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173b5:	icebp  
  4173b6:	rol    edi,0xbb
  4173b9:	mov    ecx,0x60968a41
  4173be:	sbb    al,0xc8
  4173c0:	popa   
  4173c1:	push   cs
  4173c2:	add    DWORD PTR [esi+0x39],esp
  4173c5:	sbb    bh,BYTE PTR [esi+ecx*8+0x34]
  4173c9:	xchg   esi,eax
  4173ca:	iret   
  4173cb:	push   0x43
  4173cd:	clc    
  4173ce:	(bad)  
  4173cf:	sub    eax,0x3da4d52b
  4173d4:	fdiv   DWORD PTR [ebp-0xc]
  4173d7:	sub    bh,BYTE PTR [ebp-0x76302970]
  4173dd:	mov    ebp,0x17d87067
  4173e2:	dec    esp
  4173e3:	and    esp,DWORD PTR [esi]
  4173e5:	aam    0x8d
  4173e7:	ja     0x41743f
  4173e9:	retf   
  4173ea:	outs   dx,DWORD PTR ds:[esi]
  4173eb:	addr16 sahf 
  4173ed:	popf   
  4173ee:	jle    0x4173b3
  4173f0:	mov    WORD PTR [ebx-0x1e89f6bd],?
  4173f6:	out    0xed,al
  4173f8:	repz shl BYTE PTR [ebx+edx*4-0x3a],0xa
  4173fe:	pop    ecx
  4173ff:	pop    esp
  417400:	aas    
  417401:	push   ds
  417402:	aad    0x6e
  417404:	sar    BYTE PTR [esi],cl
  417406:	adc    BYTE PTR [edx-0x1c9ca28],al
  41740c:	mov    ecx,0x5450d8be
  417411:	(bad)  
  417413:	mov    esp,0x8655e901
  417418:	mov    ds:0x16ed3c36,al
  41741d:	scas   al,BYTE PTR es:[edi]
  41741e:	inc    edi
  41741f:	jp     0x417419
  417421:	xor    ecx,DWORD PTR [ebx+0x74]
  417424:	mov    bl,0x67
  417426:	xor    eax,0x128372be
  41742b:	stc    
  41742c:	sub    ch,dh
  41742e:	xchg   ecx,eax
  41742f:	pop    ebx
  417430:	(bad)  
  417432:	push   edi
  417433:	and    dh,bh
  417435:	sub    eax,0xd941efdb
  41743a:	pop    es
  41743b:	adc    ecx,ebx
  41743d:	xchg   edi,eax
  41743e:	mov    ds:0x68052ce,eax
  417443:	push   cs
  417444:	(bad)  
  417445:	leave  
  417446:	es or  al,0x84
  417449:	pop    ss
  41744a:	adc    BYTE PTR [si+0x2c08],ch
  41744f:	cmp    ch,dl
  417451:	ror    esp,1
  417453:	mov    esp,0x7ff2220d
  417458:	bound  eax,QWORD PTR [ebx]
  41745a:	aaa    
  41745b:	ins    BYTE PTR es:[edi],dx
  41745c:	inc    eax
  41745d:	or     dx,si
  417460:	in     al,dx
  417461:	(bad)  
  417462:	xchg   ebx,eax
  417463:	repnz push eax
  417465:	sub    ch,BYTE PTR [ebx-0x7dddc832]
  41746b:	dec    esp
  41746c:	int3   
  41746d:	repnz mov edi,0x342cb971
  417473:	add    DWORD PTR [eax+0x28],ebx
  417476:	jmp    0x10db3f9a
  41747b:	fimul  DWORD PTR [eax+0x77]
  41747e:	sub    al,0x4d
  417480:	and    esp,DWORD PTR [edx+0x3fc07426]
  417486:	mov    bl,dh
  417488:	ret    
  417489:	inc    ebx
  41748a:	lock test al,0x9e
  41748d:	inc    edi
  41748e:	and    DWORD PTR [esi-0x256743c2],ebx
  417494:	push   ebp
  417495:	mov    edi,0x2cf7f5c
  41749a:	mov    esi,DWORD PTR [edi+0x2f]
  41749d:	fnstsw WORD PTR [esi+0x41]
  4174a0:	inc    esp
  4174a1:	cmp    al,0xae
  4174a3:	in     eax,0xf5
  4174a5:	out    dx,al
  4174a6:	fs cs das 
  4174a9:	retf   
  4174aa:	out    0xc,al
  4174ac:	pop    esp
  4174ad:	mov    eax,ds:0xd0478b88
  4174b2:	inc    eax
  4174b3:	sbb    eax,0x67f1c13b
  4174b8:	adc    DWORD PTR [edx+0x1c365cb1],ebx
  4174be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174bf:	enter  0xc9c1,0x59
  4174c3:	jge    0x4174d9
  4174c5:	push   edx
  4174c6:	in     eax,dx
  4174c7:	popa   
  4174c8:	inc    esi
  4174c9:	ss (bad) 
  4174cb:	addr16 mov al,ds:0xba4c
  4174cf:	sub    DWORD PTR [ecx+0x767ac557],ebx
  4174d5:	ret    
  4174d6:	dec    eax
  4174d7:	sub    ebx,DWORD PTR [ebx+eax*1]
  4174da:	cli    
  4174db:	adc    bl,BYTE PTR [esi-0x26]
  4174de:	out    0xbd,eax
  4174e0:	rol    BYTE PTR ds:[ecx-0x7a379b87],1
  4174e7:	imul   edx,DWORD PTR [esi-0x6e],0xffffffb6
  4174eb:	shr    DWORD PTR [ebx],cl
  4174ed:	mov    ebp,0xa01e6bcb
  4174f2:	mov    edx,0xcc8038a8
  4174f7:	nop
  4174f8:	push   ss
  4174f9:	int3   
  4174fa:	(bad)  
  4174fb:	lock cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4174fe:	ins    DWORD PTR es:[edi],dx
  4174ff:	push   ebp
  417500:	pop    ds
  417501:	stos   BYTE PTR es:[edi],al
  417502:	lods   al,BYTE PTR ds:[esi]
  417503:	cmp    eax,0x73b80e36
  417508:	mov    bh,0xbd
  41750a:	dec    esi
  41750b:	pop    esp
  41750c:	jl     0x417565
  41750e:	adc    al,ah
  417510:	inc    esp
  417511:	mov    edi,0x5b6ab5fa
  417516:	cmp    DWORD PTR [edi-0x53b7f728],ecx
  41751c:	ins    DWORD PTR es:[edi],dx
  41751d:	mov    al,0xee
  41751f:	leave  
  417520:	into   
  417521:	push   es
  417522:	xchg   BYTE PTR [ebp-0x4a60b452],dl
  417528:	xchg   esp,eax
  417529:	dec    ebp
  41752a:	mov    esp,esp
  41752c:	mov    bl,0x1c
  41752e:	jne    0x41757c
  417530:	push   ss
  417531:	lock xchg DWORD PTR [edx],eax
  417534:	mov    ecx,0xad3960d4
  417539:	icebp  
  41753a:	js     0x417581
  41753c:	mov    dh,ch
  41753e:	inc    ebx
  41753f:	into   
  417540:	inc    edi
  417541:	and    al,0x10
  417543:	repz shl BYTE PTR [esp+edx*4+0x4c],1
  417548:	pop    ecx
  417549:	test   DWORD PTR [eax-0x7854afcc],ecx
  41754f:	outs   dx,BYTE PTR ds:[esi]
  417550:	addr16 jo 0x41753f
  417553:	arpl   WORD PTR [ebx],cx
  417555:	shl    DWORD PTR [ecx-0x3c],cl
  417558:	stc    
  417559:	cmc    
  41755a:	sub    BYTE PTR [ebp-0x51e72808],al
  417560:	pop    ebp
  417561:	es ss push 0xbe799f99
  417568:	jne    0x4174f3
  41756a:	stos   BYTE PTR es:[edi],al
  41756b:	and    eax,0xe49bbe5a
  417570:	pop    ebx
  417571:	mov    esp,0xca7bb398
  417576:	sbb    eax,0x32fb0c44
  41757b:	scas   al,BYTE PTR es:[edi]
  41757c:	fwait
  41757d:	xchg   BYTE PTR [edx+0x7e],bl
  417580:	mov    gs,WORD PTR [edx+0x4ab8ce95]
  417586:	sub    eax,0x9dbd1990
  41758b:	add    al,0x47
  41758d:	ins    BYTE PTR es:[edi],dx
  41758e:	mov    ecx,0x77a939c
  417593:	cmp    DWORD PTR [edx+esi*8],eax
  417596:	jmp    0x41759e
  417598:	aam    0xfd
  41759a:	inc    esp
  41759b:	add    DWORD PTR [edx+0x26],0xffffffa8
  41759f:	xchg   esp,eax
  4175a0:	sahf   
  4175a1:	dec    esi
  4175a2:	pop    edx
  4175a3:	jl     0x417551
  4175a5:	iret   
  4175a6:	mov    eax,ds:0x482ba5da
  4175ab:	cmp    eax,0x978131ce
  4175b0:	cmp    al,0xe5
  4175b2:	test   edx,0x6dabfb99
  4175b8:	dec    ebp
  4175b9:	in     al,0xeb
  4175bb:	mov    cl,BYTE PTR [esp+edi*8]
  4175be:	sahf   
  4175bf:	repnz pop ebp
  4175c1:	call   0xa7f79694
  4175c6:	es ret 0xc1b0
  4175ca:	push   ecx
  4175cb:	or     eax,0xe0c50367
  4175d0:	nop
  4175d1:	mov    ah,0xc9
  4175d3:	test   DWORD PTR [eax],ebp
  4175d5:	mov    al,ds:0xa1715543
  4175da:	jp     0x41757d
  4175dc:	ja     0x4175d3
  4175de:	(bad)  
  4175df:	push   0xffffffff
  4175e1:	popa   
  4175e2:	inc    ecx
  4175e3:	inc    ebx
  4175e4:	xor    cl,0x58
  4175e7:	xchg   ebx,eax
  4175e8:	sbb    ch,BYTE PTR [ebx-0x2fe9381]
  4175ee:	sbb    ah,0x3
  4175f1:	xor    al,0x50
  4175f3:	sbb    DWORD PTR [edx-0x45],0x5e
  4175f7:	adc    eax,0x12990c8
  4175fc:	ret    
  4175fd:	jb     0x417603
  4175ff:	ror    DWORD PTR [esi+0x5b4bef68],0xc0
  417606:	loopne 0x4175eb
  417608:	pop    ds
  417609:	shl    BYTE PTR [eax+0x764bb589],cl
  41760f:	shr    DWORD PTR [esi+esi*8],0x9d
  417613:	jo     0x4175b0
  417615:	fistp  QWORD PTR [ecx-0x632c9b66]
  41761b:	push   es
  41761c:	or     DWORD PTR [eax+0x6d],eax
  41761f:	push   edi
  417620:	cmc    
  417621:	or     al,0x37
  417623:	dec    ebp
  417624:	adc    ebp,esp
  417626:	mov    esp,0x48fc19d
  41762b:	addr16 push edi
  41762d:	aas    
  41762e:	jmp    0x4175f4
  417630:	inc    eax
  417631:	adc    edx,DWORD PTR [ecx-0x47320cf0]
  417637:	test   al,0xb9
  417639:	ds mov cl,0x7b
  41763c:	adc    al,0x76
  41763e:	push   sp
  417640:	nop
  417641:	enter  0x742d,0xf1
  417645:	jmp    esp
  417647:	mov    cl,0xa5
  417649:	(bad)  
  41764a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41764c:	xchg   DWORD PTR [ecx],eax
  41764e:	push   0x1b
  417650:	adc    ah,0xc8
  417653:	cwde   
  417654:	loopne 0x4176a1
  417656:	mov    al,ds:0x851f58f5
  41765b:	fist   WORD PTR [ecx-0x40]
  41765e:	les    esi,FWORD PTR [ecx+0x2d505080]
  417664:	or     BYTE PTR [ebx+0x1812024e],0xa3
  41766b:	mov    ch,0x75
  41766d:	and    edi,DWORD PTR [ebp+0xf]
  417670:	xchg   edx,eax
  417671:	mov    edx,0xbd26be47
  417676:	jbe    0x417634
  417678:	cmp    DWORD PTR [eax],ebp
  41767a:	(bad)  
  41767b:	mov    ds:0xd8c19650,al
  417680:	push   es
  417681:	outs   dx,BYTE PTR ds:[esi]
  417682:	hlt    
  417683:	push   esi
  417684:	das    
  417685:	into   
  417686:	popf   
  417687:	sbb    BYTE PTR [ebx],bh
  417689:	adc    eax,0x7faa82bd
  41768e:	xchg   ecx,eax
  41768f:	stos   BYTE PTR es:[edi],al
  417690:	jns    0x4176e1
  417692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417693:	pop    cx
  417695:	cwde   
  417696:	jle    0x41768b
  417698:	jmp    DWORD PTR [ecx+0x308ea8d6]
  41769e:	mov    ebp,0x7759e31d
  4176a3:	xchg   ecx,eax
  4176a4:	cmp    esi,DWORD PTR [edx+0x6]
  4176a7:	pop    esp
  4176a8:	cs jns 0x4176d4
  4176ab:	sahf   
  4176ac:	loope  0x417674
  4176ae:	cmp    al,0x56
  4176b0:	arpl   WORD PTR [ecx-0x31817b39],cx
  4176b6:	pop    ss
  4176b7:	out    dx,al
  4176b8:	loope  0x417671
  4176ba:	or     ecx,DWORD PTR [edi-0x26512b06]
  4176c0:	xor    BYTE PTR [eax],ch
  4176c2:	mov    ebx,0x6f429e8b
  4176c7:	xor    eax,0x66576120
  4176cc:	mov    bl,0xf0
  4176ce:	aam    0x56
  4176d0:	mov    eax,0x4f14b18d
  4176d5:	mov    al,ds:0xeeb88ca
  4176da:	and    edi,ebp
  4176dc:	pop    ebp
  4176dd:	scas   al,BYTE PTR es:[edi]
  4176de:	call   0xb248ebcb
  4176e3:	mov    bl,0xf0
  4176e5:	pop    es
  4176e6:	mov    ?,WORD PTR [ebx-0x1c]
  4176e9:	mov    ds:0x8c6feeb2,al
  4176ee:	(bad)  
  4176f0:	jb     0x417738
  4176f2:	sub    BYTE PTR [edx],ah
  4176f4:	sbb    eax,0x3a2bc8aa
  4176f9:	rcr    DWORD PTR [ebx+0x16],1
  4176fc:	cmp    BYTE PTR [ecx-0x58],al
  4176ff:	cmp    al,0xe5
  417701:	xor    bl,dh
  417703:	pop    esi
  417704:	ret    
  417705:	call   DWORD PTR [esi-0x4eb11af5]
  41770b:	mov    ecx,0x2fffb700
  417710:	cld    
  417711:	test   eax,0xb8f4b973
  417716:	addr16 ret 0xbd81
  41771a:	or     BYTE PTR [ebp-0x9cb228d],0x1
  417721:	fcomp  DWORD PTR [ecx+0x66c923cb]
  417727:	xchg   edx,eax
  417728:	xor    DWORD PTR [ebp+0x1d376619],esi
  41772e:	or     DWORD PTR [edi-0x234f97a7],ebx
  417734:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417736:	mov    dh,0xb1
  417738:	es loopne 0x4176cc
  41773b:	or     al,BYTE PTR [esi+0x7c586d9d]
  417741:	adc    BYTE PTR [ecx-0x7],al
  417744:	mov    ds:0x74f05093,al
  417749:	push   eax
  41774a:	(bad)  
  41774c:	xor    DWORD PTR [edx],edx
  41774e:	adc    al,0xb5
  417750:	cmp    ch,BYTE PTR [esp+ebx*1-0x5e7e6a2f]
  417757:	popa   
  417758:	lds    ebx,FWORD PTR [edx-0x70eb2c47]
  41775e:	iret   
  41775f:	in     eax,dx
  417760:	mov    ds:0xd7a328b3,al
  417765:	dec    ebx
  417766:	(bad)  
  417767:	imul   edi,DWORD PTR [ebx],0xffffff8e
  41776a:	aas    
  41776b:	jbe    0x41771f
  41776d:	adc    bh,ch
  41776f:	int    0x6a
  417771:	and    BYTE PTR [ebx+ecx*1],0xd4
  417775:	retf   
  417776:	cmc    
  417777:	sbb    DWORD PTR [ecx],edi
  417779:	fst    DWORD PTR [edx-0x129aa838]
  41777f:	xchg   esp,eax
  417780:	cmp    dl,BYTE PTR [edi+0x62a375af]
  417786:	mov    edx,0xc347f786
  41778b:	leave  
  41778c:	fistp  QWORD PTR [eax]
  41778e:	push   esp
  41778f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417790:	shl    DWORD PTR [esi],cl
  417792:	nop
  417793:	daa    
  417794:	imul   edi,esp,0x42
  417797:	frstor [ecx+edi*4]
  41779a:	popa   
  41779b:	mov    edi,DWORD PTR [eax+0x55b3d3c]
  4177a1:	sahf   
  4177a2:	fs sahf 
  4177a4:	jmp    0x67a5:0xf8dd6b6c
  4177ab:	out    dx,eax
  4177ac:	in     al,dx
  4177ad:	xchg   edx,eax
  4177ae:	pop    esi
  4177af:	fiadd  DWORD PTR [ebx-0x5d2597f0]
  4177b5:	mov    al,0xf4
  4177b7:	mov    eax,ds:0x4ed32474
  4177bc:	pop    ss
  4177bd:	adc    eax,0xf2ff8185
  4177c2:	xor    eax,0x2950c9e5
  4177c7:	add    ebx,0xffffffbf
  4177ca:	hlt    
  4177cb:	adc    bl,BYTE PTR [esi+0x75]
  4177ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177cf:	fiadd  DWORD PTR [edx+0x57806cd2]
  4177d5:	retf   0x7447
  4177d8:	(bad)  
  4177d9:	ficom  WORD PTR [eax]
  4177db:	es dec esi
  4177dd:	inc    ebp
  4177de:	ds aam 0xe
  4177e1:	loop   0x417791
  4177e3:	call   0x227d0e83
  4177e8:	mov    eax,0x53fdaff2
  4177ed:	push   edi
  4177ee:	jecxz  0x417809
  4177f0:	mov    ebp,0x69bf155d
  4177f5:	mov    bh,0xeb
  4177f7:	retf   
  4177f8:	jecxz  0x4177cb
  4177fa:	aaa    
  4177fb:	ja     0x417860
  4177fd:	lahf   
  4177fe:	mov    ds:0x58c4f302,eax
  417803:	outs   dx,BYTE PTR ds:[esi]
  417804:	sub    al,0xef
  417806:	sbb    edx,DWORD PTR [eiz*2-0x5b7aee45]
  41780d:	sbb    esp,0x2b
  417810:	into   
  417811:	out    0xae,eax
  417813:	mov    ebp,0xcfc0ee4
  417818:	ret    
  417819:	das    
  41781a:	pop    edi
  41781b:	mov    dh,0xbc
  41781d:	pmulhw mm2,QWORD PTR [ecx]
  417820:	pop    eax
  417821:	pop    es
  417822:	leave  
  417823:	sbb    DWORD PTR [ebx],esp
  417825:	mov    al,ds:0xd148fe5c
  41782a:	dec    ebp
  41782b:	arpl   WORD PTR [ebx],dx
  41782d:	sbb    eax,0xb1ca7514
  417832:	inc    eax
  417833:	mov    dh,0xe5
  417835:	aas    
  417836:	je     0x41786f
  417838:	cmp    al,0xef
  41783a:	jns    0xebef7c2
  417840:	and    DWORD PTR [edx-0x56a104ec],edi
  417846:	sub    al,0x77
  417848:	dec    edi
  417849:	add    BYTE PTR [edx+ecx*1+0x6c791f15],0xfb
  417851:	mov    edx,0x5a99b848
  417856:	jnp    0x417891
  417858:	cli    
  417859:	jl     0x417886
  41785b:	pop    ebp
  41785c:	inc    edx
  41785d:	pop    ds
  41785e:	push   eax
  41785f:	ret    
  417860:	gs js  0x417884
  417863:	outs   dx,DWORD PTR ds:[esi]
  417864:	sbb    ch,dh
  417866:	(bad)
  417869:	sbb    edx,eax
  41786b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41786c:	stc    
  41786d:	cs adc al,0xfe
  417870:	ds pop ss
  417872:	fnstcw WORD PTR [edx]
  417874:	push   cs
  417875:	fst    QWORD PTR [ecx]
  417877:	out    0xdb,al
  417879:	pop    edi
  41787a:	pop    ds
  41787b:	stos   DWORD PTR es:[edi],eax
  41787c:	jl     0x417845
  41787e:	pop    ds
  41787f:	ret    0x9a3b
  417882:	shr    BYTE PTR [eax-0x18],0x1e
  417886:	push   ecx
  417887:	push   0xffffffcc
  417889:	sub    DWORD PTR [edi-0x20],ecx
  41788c:	mov    dl,0x7f
  41788e:	push   edx
  41788f:	pop    esp
  417890:	push   esp
  417891:	adc    DWORD PTR [ecx],ebx
  417893:	xchg   bl,bl
  417895:	xchg   ecx,eax
  417896:	(bad)  
  417897:	mov    ds,WORD PTR [ebx]
  417899:	(bad)  
  41789a:	outs   dx,BYTE PTR ds:[esi]
  41789b:	call   DWORD PTR [ecx+0x44e6e95a]
  4178a1:	shl    DWORD PTR [ebp-0xbbb0ba0],0xe0
  4178a8:	popf   
  4178a9:	jmp    0x4178a9
  4178ab:	sbb    al,0xc6
  4178ad:	in     al,dx
  4178ae:	pop    esp
  4178af:	mov    bl,BYTE PTR [edx-0x2c]
  4178b2:	rcr    DWORD PTR [ecx+0x55c15376],1
  4178b8:	shr    DWORD PTR [esi],1
  4178ba:	or     BYTE PTR [edx-0x65e0b813],0x49
  4178c1:	rcr    BYTE PTR [ebp+0x10],1
  4178c4:	add    ebp,DWORD PTR [eax-0x51]
  4178c7:	adc    BYTE PTR [ecx-0x49d4d3e4],0x20
  4178ce:	leave  
  4178cf:	xchg   esp,eax
  4178d0:	inc    ecx
  4178d1:	shr    BYTE PTR [ebx],cl
  4178d3:	in     eax,0x21
  4178d5:	ror    BYTE PTR [edi],0xbf
  4178d8:	mov    eax,0xa9910820
  4178dd:	rol    DWORD PTR [eax+0x36043941],cl
  4178e3:	(bad)  
  4178e4:	imul   ecx,ebx,0xffffffce
  4178e7:	loopne 0x41792f
  4178e9:	xchg   edi,eax
  4178ea:	sub    esi,esp
  4178ec:	mov    edi,0xccda9b02
  4178f1:	pop    edx
  4178f2:	sub    esi,DWORD PTR [esi-0x31]
  4178f5:	xor    al,0x88
  4178f7:	dec    eax
  4178f8:	mov    BYTE PTR [ecx+0x74b700e3],al
  4178fe:	daa    
  4178ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417900:	push   edx
  417901:	sbb    edx,DWORD PTR [eax]
  417903:	mov    bl,0x21
  417905:	adc    al,0xfa
  417907:	sub    BYTE PTR [ebp-0x44],0xbf
  41790b:	xchg   ebp,eax
  41790c:	lock dec eax
  41790e:	(bad)  
  41790f:	aad    0xb3
  417911:	outs   dx,BYTE PTR ds:[esi]
  417912:	dec    esi
  417913:	jae    0x41790d
  417915:	repz test al,ah
  417918:	cs mov bl,0x64
  41791b:	dec    esp
  41791c:	cli    
  41791d:	inc    edi
  41791e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41791f:	mov    cl,0x73
  417921:	xchg   ebx,eax
  417922:	mov    cl,dh
  417924:	and    BYTE PTR [ebp+0x5a],bl
  417927:	mov    edi,0xdef88849
  41792c:	loop   0x417918
  41792e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41792f:	test   BYTE PTR [ebp-0x70129328],bh
  417935:	push   cs
  417936:	sbb    DWORD PTR [edi],esp
  417938:	inc    ebp
  417939:	add    BYTE PTR [esi+0xef0ac55],cl
  41793f:	push   es
  417940:	dec    DWORD PTR [eax+0x5c]
  417943:	mov    edi,DWORD PTR [ecx+0x42139084]
  417949:	push   0xffffff9f
  41794b:	dec    esp
  41794c:	shr    DWORD PTR [eax+0x3d],cl
  41794f:	sub    dl,BYTE PTR [eax]
  417951:	add    DWORD PTR [eax+0x745e02f1],eax
  417957:	xor    BYTE PTR [eax-0x5],0x16
  41795b:	aaa    
  41795c:	mov    eax,ds:0x80fca823
  417961:	jno    0x4178f1
  417963:	dec    edx
  417964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417965:	adc    DWORD PTR [ecx+0x26348aa4],eax
  41796b:	pop    ecx
  41796c:	add    DWORD PTR [ebx],ebp
  41796e:	fidivr DWORD PTR [esi-0x43]
  417971:	das    
  417972:	in     al,0x6
  417974:	push   ds
  417975:	inc    esp
  417976:	xchg   ebp,eax
  417977:	ins    DWORD PTR es:[edi],dx
  417978:	fdivr  QWORD PTR [ebp-0x29]
  41797b:	sbb    al,0xa8
  41797d:	mov    dh,0x5
  41797f:	pushf  
  417980:	mov    esp,0xfc8bfdab
  417985:	arpl   WORD PTR [ecx],cx
  417987:	inc    edx
  417988:	or     cl,BYTE PTR [ebx-0x427980ce]
  41798e:	mov    bh,0x9a
  417990:	addr16 jne 0x4179db
  417993:	mov    eax,0x7e0728ae
  417998:	or     al,0x49
  41799a:	fwait
  41799b:	hlt    
  41799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41799d:	ror    edx,cl
  41799f:	mov    esp,DWORD PTR [edx+0x2a2a5540]
  4179a5:	mov    ch,0x94
  4179a7:	enter  0xa7cc,0x0
  4179ab:	(bad)  
  4179ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179ad:	xor    esi,esi
  4179af:	lods   eax,DWORD PTR ds:[esi]
  4179b0:	xchg   ebp,eax
  4179b1:	cld    
  4179b2:	push   cs
  4179b3:	(bad)  
  4179b4:	xchg   esp,eax
  4179b5:	inc    edx
  4179b6:	add    al,0x61
  4179b8:	mov    eax,ds:0xcd463555
  4179bd:	inc    edx
  4179be:	cdq    
  4179bf:	in     eax,0x54
  4179c1:	push   0x5
  4179c3:	test   al,0xc3
  4179c5:	out    0x90,eax
  4179c7:	fisttp WORD PTR [ecx-0x133b8e1a]
  4179cd:	loopne 0x417960
  4179cf:	hlt    
  4179d0:	mov    ds:0xba6ca30c,eax
  4179d5:	xchg   BYTE PTR [edx],dl
  4179d7:	sahf   
  4179d8:	imul   eax,DWORD PTR [edx+0x4b7edc91],0xb8c8774f
  4179e2:	out    dx,al
  4179e3:	mov    cl,0x4a
  4179e5:	and    ah,cl
  4179e7:	aas    
  4179e8:	std    
  4179e9:	rcr    BYTE PTR [esi-0x53],cl
  4179ec:	xor    BYTE PTR [ebx-0x17],bl
  4179ef:	add    DWORD PTR [ebp*4+0x6232b3da],0x20d8a022
  4179fa:	mov    esi,DWORD PTR [ecx+edi*8]
  4179fd:	sbb    BYTE PTR [ebp+0x1a603e5c],0xf0
  417a04:	js     0x4179eb
  417a06:	and    ch,BYTE PTR [ebx+esi*4-0x33f474cc]
  417a0d:	xchg   BYTE PTR [ebp+0x596eea12],ch
  417a13:	test   DWORD PTR [esi-0x1f29e577],esp
  417a19:	sub    eax,0xac8c2bc2
  417a1e:	shl    DWORD PTR [esi+0x1e],cl
  417a21:	jne    0x4179ca
  417a23:	mov    edi,0xec984009
  417a28:	cdq    
  417a29:	sub    edx,DWORD PTR [ebx]
  417a2b:	inc    edi
  417a2c:	jmp    0xc0db:0x1b4fb4ba
  417a33:	clc    
  417a34:	popa   
  417a35:	retf   
  417a36:	or     eax,0xb896c37e
  417a3b:	or     eax,0xbbebde72
  417a40:	dec    esp
  417a41:	in     al,0x87
  417a43:	popf   
  417a44:	mov    bl,0xe3
  417a46:	xor    BYTE PTR [eax+0x4d059680],bl
  417a4c:	push   esp
  417a4d:	gs leave 
  417a4f:	jmp    0x417a8c
  417a51:	pop    esp
  417a52:	sbb    DWORD PTR ds:0x77ae7a61,esp
  417a58:	dec    edi
  417a59:	into   
  417a5a:	fmul   QWORD PTR [edx-0x23be659e]
  417a60:	cmp    eax,0x632aca51
  417a65:	aas    
  417a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a67:	ja     0x417aae
  417a69:	jmp    0x417a02
  417a6b:	cmp    eax,0x5b073907
  417a70:	lea    esp,[eax+edi*1]
  417a73:	dec    edx
  417a74:	test   BYTE PTR fs:[edx-0x1a],bh
  417a78:	jg     0x417a96
  417a7a:	cmp    al,0xa1
  417a7c:	pop    ss
  417a7d:	ins    DWORD PTR es:[edi],dx
  417a7e:	mov    BYTE PTR [edi-0x3a],dl
  417a81:	sub    eax,0x30fc1263
  417a86:	mov    ch,0xfb
  417a88:	push   cs
  417a89:	xlat   BYTE PTR ds:[ebx]
  417a8a:	cmp    eax,0x7ba9e3e5
  417a8f:	pop    ds
  417a90:	adc    al,0xe0
  417a92:	xor    BYTE PTR [eax-0x7f],0xb1
  417a96:	adc    BYTE PTR [esi-0x3a],cl
  417a99:	loopne 0x417adf
  417a9b:	dec    ecx
  417a9c:	fstp   DWORD PTR [ebx+0x2b]
  417a9f:	bndstx [ecx+ecx*8-0x25],bnd2
  417aa4:	push   cs
  417aa5:	adc    esi,eax
  417aa7:	(bad)
  417aaa:	mov    WORD PTR [ecx+0x7da62c2d],es
  417ab0:	aam    0xb6
  417ab2:	clc    
  417ab3:	ret    
  417ab4:	push   edx
  417ab5:	in     eax,dx
  417ab6:	or     al,0x4c
  417ab8:	rcl    DWORD PTR [eax],cl
  417aba:	and    al,BYTE PTR [eax]
  417abc:	xchg   ecx,eax
  417abd:	retf   0x98af
  417ac0:	scas   al,BYTE PTR es:[edi]
  417ac1:	mov    dh,0xda
  417ac3:	xchg   ebx,eax
  417ac4:	repnz cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  417ac7:	mov    al,ds:0xfccd7958
  417acc:	push   eax
  417acd:	cmp    edi,0xa46084ae
  417ad3:	push   esp
  417ad4:	ins    DWORD PTR es:[edi],dx
  417ad5:	and    bh,BYTE PTR [eax]
  417ad7:	jbe    0x417a97
  417ad9:	je     0x417a7e
  417adb:	jmp    0x417b22
  417add:	jecxz  0x417adb
  417adf:	stos   DWORD PTR es:[edi],eax
  417ae0:	push   esi
  417ae1:	jne    0x417a9f
  417ae3:	sahf   
  417ae4:	sub    ebp,ecx
  417ae6:	fnsave [ebx+0x7ba38c6b]
  417aec:	add    BYTE PTR [ebx],bl
  417aee:	out    dx,eax
  417aef:	pushf  
  417af0:	rcr    dh,0xaf
  417af3:	inc    ebx
  417af4:	(bad)  
  417af5:	ins    BYTE PTR es:[edi],dx
  417af6:	cmp    DWORD PTR [ecx-0x433f9dba],edi
  417afc:	pop    es
  417afd:	(bad)  
  417afe:	lock push ecx
  417b00:	push   ss
  417b01:	pop    esp
  417b02:	pop    eax
  417b03:	es shl ebx,1
  417b06:	pop    ds
  417b07:	mov    eax,ds:0x3c4f241
  417b0c:	iret   
  417b0d:	push   ecx
  417b0e:	dec    ebp
  417b0f:	(bad)  
  417b10:	shr    DWORD PTR [ecx-0x7fadb855],cl
  417b16:	xor    edi,eax
  417b18:	daa    
  417b19:	cdq    
  417b1a:	popa   
  417b1b:	rcl    dl,cl
  417b1d:	repnz test eax,0x47d3d336
  417b23:	mov    esi,0xb55f6360
  417b28:	popf   
  417b29:	retf   
  417b2a:	(bad)  
  417b2b:	mov    edx,0x1a7a6e55
  417b30:	mov    ebx,0xf091d5e8
  417b35:	cmp    DWORD PTR [eax],esi
  417b37:	out    0x18,al
  417b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b3a:	iret   
  417b3b:	adc    dh,dl
  417b3d:	inc    edi
  417b3e:	mov    esp,0x21d86a80
  417b43:	pop    eax
  417b44:	mov    al,ds:0x4ccda2be
  417b49:	pop    es
  417b4a:	addr16 push ss
  417b4c:	mov    esi,DWORD PTR [ecx-0x74]
  417b4f:	mov    fs,eax
  417b51:	xor    DWORD PTR [edx-0x1c1e8592],ecx
  417b57:	pop    edx
  417b58:	mov    al,ds:0xf18c7fd7
  417b5d:	mov    eax,0xece3f0fd
  417b62:	xchg   edx,eax
  417b63:	or     BYTE PTR [ebx+0xca3916c],0xbf
  417b6a:	imul   ecx,esi,0xf386fb74
  417b70:	gs and al,0xe2
  417b73:	mov    BYTE PTR [ebp+esi*1-0x31],ch
  417b77:	loopne 0x417b8f
  417b79:	cmp    DWORD PTR [ebx-0x7da961e9],esi
  417b7f:	dec    ebp
  417b80:	aad    0x71
  417b82:	add    BYTE PTR [edx],ch
  417b84:	int3   
  417b85:	ins    BYTE PTR es:[edi],dx
  417b86:	add    ecx,DWORD PTR [ebp-0x2db30238]
  417b8c:	mov    esp,0x41a69e76
  417b91:	xchg   ch,ch
  417b93:	sbb    al,0x58
  417b95:	ins    BYTE PTR es:[edi],dx
  417b96:	push   edi
  417b97:	mov    ch,0x35
  417b99:	jns    0x417c19
  417b9b:	repnz iret 
  417b9d:	ss or  esp,eax
  417ba0:	xchg   ebp,eax
  417ba1:	jb     0x417b27
  417ba3:	push   0xffffffd9
  417ba5:	pop    esp
  417ba6:	jne    0x417b94
  417ba8:	fcmovu st,st(3)
  417baa:	int    0x2c
  417bac:	and    eax,0x632f1eba
  417bb1:	enter  0xb539,0x88
  417bb5:	ins    DWORD PTR es:[edi],dx
  417bb6:	in     al,0xda
  417bb8:	push   edx
  417bb9:	inc    eax
  417bba:	mov    eax,DWORD PTR [ebx]
  417bbc:	scas   eax,DWORD PTR es:[edi]
  417bbd:	and    esp,DWORD PTR [edx+0x3d]
  417bc0:	pop    eax
  417bc1:	xor    eax,0x4fea98be
  417bc6:	lea    edx,[edx-0x6f507af0]
  417bcc:	es dec ebx
  417bce:	in     al,0xb8
  417bd0:	xchg   ebp,eax
  417bd1:	shl    DWORD PTR [ecx+eiz*4-0x6c],0x3a
  417bd6:	bound  esi,QWORD PTR [ebx+0x3abac9bc]
  417bdc:	hlt    
  417bdd:	add    BYTE PTR [ecx-0x58365f0a],bl
  417be3:	daa    
  417be4:	pop    ebp
  417be5:	pop    ds
  417be6:	cmc    
  417be7:	mov    dl,0x19
  417be9:	ja     0x417bff
  417beb:	ret    0x1171
  417bee:	(bad)  
  417bf0:	vpmulhuw xmm1,xmm6,XMMWORD PTR [esi-0x23]
  417bf5:	xchg   ecx,eax
  417bf6:	hlt    
  417bf7:	mov    esi,0x9c06bf97
  417bfc:	add    al,BYTE PTR [ebx+ebx*2]
  417bff:	aam    0x3e
  417c01:	stc    
  417c02:	hlt    
  417c03:	pushf  
  417c04:	imul   ecx,DWORD PTR [edx+edx*8+0x43],0xffffffa4
  417c09:	mov    WORD PTR [eax-0x6543ecef],ss
  417c0f:	das    
  417c10:	sub    eax,eax
  417c12:	push   edi
  417c13:	and    cl,dh
  417c15:	test   DWORD PTR [edi-0x72b42b2a],0xff504c2d
  417c1f:	push   esi
  417c20:	xchg   ebx,eax
  417c21:	outs   dx,BYTE PTR gs:[esi]
  417c23:	das    
  417c24:	and    eax,0xc456ed40
  417c29:	cmp    esi,DWORD PTR [edi+0x1b]
  417c2c:	les    edx,FWORD PTR [ecx]
  417c2e:	aad    0x5
  417c30:	jae    0x417c22
  417c32:	int    0x48
  417c34:	jns    0x417c33
  417c36:	psraw  mm0,mm2
  417c39:	pop    ds
  417c3a:	not    ebp
  417c3c:	inc    edi
  417c3d:	pop    edi
  417c3e:	dec    edx
  417c3f:	lods   eax,DWORD PTR ds:[esi]
  417c40:	lods   eax,DWORD PTR ds:[esi]
  417c41:	aam    0x8d
  417c43:	push   ebx
  417c44:	xor    dh,BYTE PTR [edx-0x65]
  417c47:	nop
  417c48:	xor    al,0xdc
  417c4a:	loope  0x417c81
  417c4c:	lods   eax,DWORD PTR ds:[esi]
  417c4d:	bound  esp,QWORD PTR [eax+0x17735d5]
  417c53:	in     eax,0x63
  417c55:	jecxz  0x417c0b
  417c57:	dec    esi
  417c58:	mov    ebx,0xcf40da53
  417c5d:	adc    dh,BYTE PTR [ebx+0x66]
  417c60:	aad    0x22
  417c62:	aam    0x80
  417c64:	arpl   di,dx
  417c66:	fs aam 0x9
  417c69:	or     edx,DWORD PTR [esp+ebp*8+0xf334576]
  417c70:	repnz pushf 
  417c72:	mov    esp,0xdeae4524
  417c77:	push   ecx
  417c78:	pushf  
  417c79:	jge    0x417cb4
  417c7b:	xchg   ecx,eax
  417c7c:	dec    ecx
  417c7d:	jg     0x417c8d
  417c7f:	(bad)  
  417c80:	es out dx,eax
  417c82:	pop    ebp
  417c83:	daa    
  417c84:	out    dx,al
  417c85:	pusha  
  417c86:	ret    
  417c87:	mul    BYTE PTR [edi+0xd]
  417c8a:	adc    BYTE PTR [ebp+0x30],cl
  417c8d:	sub    eax,0x580cbae8
  417c92:	pushw  ds
  417c94:	cmp    ebx,ebx
  417c96:	js     0x417c3e
  417c98:	cmc    
  417c99:	mov    bl,BYTE PTR [eax]
  417c9b:	push   cs
  417c9c:	pop    eax
  417c9d:	fnsave [ebp-0x38726659]
  417ca3:	cmp    esp,DWORD PTR [edx-0x39a46a03]
  417ca9:	jle    0x417d23
  417cab:	jns    0x417ce1
  417cad:	and    eax,0xf5d12028
  417cb2:	addr16 or al,0x33
  417cb5:	ret    
  417cb6:	inc    eax
  417cb7:	mov    al,0xd4
  417cb9:	rol    DWORD PTR [ebx],cl
  417cbb:	jns    0x417d2d
  417cbd:	sub    edx,DWORD PTR [edi+ebp*2+0x57]
  417cc1:	fdivr  QWORD PTR [edx+esi*8-0x4c]
  417cc5:	cmp    eax,DWORD PTR [ebp+ebp*8-0x64bc5114]
  417ccc:	mov    al,0x31
  417cce:	icebp  
  417ccf:	or     al,ah
  417cd1:	daa    
  417cd2:	(bad)  
  417cd3:	int    0xb0
  417cd5:	fwait
  417cd6:	shl    BYTE PTR [edi+0x59],0xa3
  417cda:	call   0x1ba4ed94
  417cdf:	in     eax,0x60
  417ce1:	jg     0x417d4b
  417ce3:	icebp  
  417ce4:	dec    ebx
  417ce5:	icebp  
  417ce6:	pop    edx
  417ce7:	or     BYTE PTR [eax-0x54ee9011],dl
  417ced:	xchg   ecx,eax
  417cee:	mov    al,0x8a
  417cf0:	or     bl,BYTE PTR [edi]
  417cf2:	adc    eax,0x92a0aff6
  417cf7:	loope  0x417ca5
  417cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cfa:	xchg   ebp,eax
  417cfb:	or     edi,DWORD PTR [ebp+0x51]
  417cfe:	div    ebp
  417d00:	call   0x6c74:0xc1a57f17
  417d07:	pop    esp
  417d08:	fnstenv es:[edi]
  417d0b:	mov    dh,0x8f
  417d0d:	mov    bl,0x5b
  417d0f:	or     DWORD PTR [ebx-0x9],esi
  417d12:	icebp  
  417d13:	sbb    BYTE PTR [eax+0x422a5c98],cl
  417d19:	cmc    
  417d1a:	mov    al,0x1a
  417d1c:	sbb    eax,0xfee5ec54
  417d21:	outs   dx,BYTE PTR ds:[esi]
  417d22:	out    dx,al
  417d23:	jnp    0x417d9d
  417d25:	and    DWORD PTR [ebp+0x2],esp
  417d28:	push   ss
  417d29:	aam    0x80
  417d2b:	fucomp st(3)
  417d2d:	cs pushf 
  417d2f:	es nop
  417d31:	mov    esp,0x5cbcaa0b
  417d36:	out    0x14,eax
  417d38:	jbe    0x417d9c
  417d3a:	loop   0x417ceb
  417d3c:	out    0xf7,eax
  417d3e:	out    dx,eax
  417d3f:	mov    eax,0x4144ef3
  417d44:	add    eax,0xcb05ffde
  417d49:	gs cmp eax,0x63a3d42d
  417d4f:	inc    esi
  417d50:	mov    fs,WORD PTR [edx+ebp*1-0x1c]
  417d54:	aad    0x99
  417d56:	xchg   DWORD PTR [edx],eax
  417d58:	cmp    DWORD PTR [ebp+0x79],0x10bccb81
  417d5f:	pop    ss
  417d60:	arpl   WORD PTR [eax],cx
  417d62:	scas   eax,DWORD PTR es:[edi]
  417d63:	push   ebx
  417d64:	inc    esp
  417d65:	lods   al,BYTE PTR ds:[esi]
  417d66:	push   0xf33eb5fc
  417d6b:	lahf   
  417d6c:	aam    0x89
  417d6e:	ins    BYTE PTR es:[edi],dx
  417d6f:	or     al,0xc5
  417d71:	out    dx,eax
  417d72:	mov    al,ds:0x8415b9a8
  417d77:	inc    edi
  417d78:	and    eax,0x82106dec
  417d7d:	xchg   ch,ch
  417d7f:	push   eax
  417d80:	jmp    0x12577bd4
  417d85:	adc    eax,0x303ec0cb
  417d8a:	mov    eax,0x6128716d
  417d8f:	imul   eax,esp,0x971174b1
  417d95:	repnz dec ecx
  417d97:	cmp    eax,0x883a68dc
  417d9c:	mov    ch,0xc2
  417d9e:	cmc    
  417d9f:	imul   ebp,DWORD PTR [edi+0x15],0xfa403b94
  417da6:	pop    ebx
  417da7:	sbb    eax,0x6106858b
  417dac:	lds    ecx,FWORD PTR [ebx-0x25f1a78c]
  417db2:	sub    cl,bl
  417db4:	xor    esp,DWORD PTR [eax+0x5a]
  417db7:	add    DWORD PTR [edi-0x24],ebp
  417dba:	jns    0x417dff
  417dbc:	ja     0x417da8
  417dbe:	add    eax,0x4701f9b9
  417dc3:	leave  
  417dc4:	sub    cl,ch
  417dc6:	push   0xbfee3adc
  417dcb:	int    0xea
  417dcd:	lar    esp,WORD PTR [edx+esi*8+0x3516784d]
  417dd5:	push   esi
  417dd6:	inc    eax
  417dd7:	je     0x417e3a
  417dd9:	jmp    0xeebd:0xaeb0e61f
  417de0:	inc    esi
  417de1:	mov    ss,WORD PTR ds:0x89c39da
  417de7:	xchg   edi,eax
  417de8:	and    eax,0xf471130e
  417ded:	pop    ds
  417dee:	push   0x1b
  417df0:	and    eax,0x32ec132c
  417df5:	and    BYTE PTR [eax],bh
  417df7:	loope  0x417db3
  417df9:	or     dl,BYTE PTR [eax-0x37]
  417dfc:	addr16 push 0xf1232f5d
  417e02:	dec    esp
  417e03:	xor    esi,DWORD PTR [edx-0x31]
  417e06:	jb     0x9a950431
  417e0c:	sbb    DWORD PTR ds:0x45561c6f,esp
  417e12:	fs and al,ch
  417e15:	out    dx,eax
  417e16:	in     al,0xe1
  417e18:	cmp    ch,BYTE PTR [eax]
  417e1a:	int    0x73
  417e1c:	or     eax,0xbf468023
  417e21:	or     ebp,DWORD PTR [eax-0x2f]
  417e24:	je     0x417dcc
  417e26:	out    0x26,al
  417e28:	sub    edi,edi
  417e2a:	sub    eax,DWORD PTR [eax+0x6854ef93]
  417e30:	mov    cl,0xd9
  417e32:	push   ss
  417e33:	mov    ch,0x9e
  417e35:	or     al,al
  417e37:	loop   0x417e11
  417e39:	enter  0x156b,0x92
  417e3d:	mov    esp,DWORD PTR [ebx-0x6a60eef3]
  417e43:	out    dx,eax
  417e44:	inc    edi
  417e45:	sub    bl,BYTE PTR [esi+0x51]
  417e48:	loope  0x417e29
  417e4a:	mov    cl,ch
  417e4c:	fbld   TBYTE PTR [ebx+0x3d]
  417e4f:	mov    esi,DWORD PTR [ebx-0x28]
  417e52:	sbb    eax,0x2885e762
  417e57:	out    dx,eax
  417e58:	push   ebp
  417e59:	aaa    
  417e5a:	js     0x417e5b
  417e5c:	int3   
  417e5d:	mov    ecx,0x12588b4
  417e62:	into   
  417e63:	adc    BYTE PTR [ecx-0x9],cl
  417e66:	sti    
  417e67:	add    dl,BYTE PTR [eax+0x5a]
  417e6a:	inc    eax
  417e6b:	pop    esi
  417e6c:	sub    BYTE PTR [eax+0x1d8b7eb4],bh
  417e72:	cmp    DWORD PTR [ebx+0xa],edx
  417e75:	sar    BYTE PTR [edx+0x153def29],0x31
  417e7c:	popf   
  417e7d:	repz add eax,0x38022baa
  417e83:	add    edi,DWORD PTR [ebx]
  417e85:	xor    al,0x31
  417e87:	adc    dh,al
  417e89:	cs in  al,0xb6
  417e8c:	or     eax,0xee152943
  417e91:	pop    es
  417e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e93:	pop    ds
  417e94:	leave  
  417e95:	cmp    eax,0xcfd9031e
  417e9a:	pop    es
  417e9b:	xchg   ecx,eax
  417e9c:	cmp    DWORD PTR [esi],edi
  417e9e:	outs   dx,DWORD PTR ds:[esi]
  417e9f:	pop    eax
  417ea0:	jbe    0x417ef3
  417ea2:	mov    esp,edx
  417ea4:	xchg   esp,eax
  417ea5:	ror    DWORD PTR [eax],1
  417ea7:	retf   
  417ea8:	cdq    
  417ea9:	mov    ecx,0x8371f66e
  417eae:	call   0xfc81de7d
  417eb3:	je     0x417e74
  417eb5:	popa   
  417eb6:	addr16 push ds
  417eb8:	into   
  417eb9:	cmp    BYTE PTR [esi+eax*1+0x39e88a16],dh
  417ec0:	sti    
  417ec1:	push   ebx
  417ec2:	and    BYTE PTR [edi],al
  417ec4:	shr    DWORD PTR [eax+0x4086fb4b],1
  417eca:	xor    DWORD PTR [edi+0x6eabe7d5],edx
  417ed0:	inc    ecx
  417ed1:	push   ss
  417ed2:	gs add edi,edi
  417ed5:	clc    
  417ed6:	out    0xbd,eax
  417ed8:	cmp    eax,0xb93a85db
  417edd:	gs push ebx
  417edf:	mov    ds:0xa973b1a1,eax
  417ee4:	pop    eax
  417ee5:	dec    ebp
  417ee6:	loope  0x417e9a
  417ee8:	out    dx,eax
  417ee9:	int    0xcf
  417eeb:	scas   al,BYTE PTR es:[edi]
  417eec:	cmp    DWORD PTR [ebx+0x82605ea],eax
  417ef2:	fistp  WORD PTR ds:0x7a934366
  417ef8:	lds    edx,FWORD PTR [ecx]
  417efa:	add    BYTE PTR [edx],bl
  417efc:	rol    BYTE PTR [esi-0xf574c7d],cl
  417f02:	xor    al,BYTE PTR [eax-0x21]
  417f05:	mov    dl,0x45
  417f07:	out    0xec,eax
  417f09:	loop   0x417e99
  417f0b:	mov    dl,BYTE PTR [edx]
  417f0d:	dec    ecx
  417f0e:	leave  
  417f0f:	lock sbb ch,BYTE PTR [edx+0x22d9864a]
  417f16:	(bad)  
  417f17:	outs   dx,BYTE PTR ds:[esi]
  417f18:	jge    0x417f6c
  417f1a:	dec    edi
  417f1b:	hlt    
  417f1c:	lea    esp,[eax-0x28]
  417f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f20:	xor    BYTE PTR [esi-0x3785af7e],0x46
  417f27:	pop    ss
  417f28:	stos   DWORD PTR es:[edi],eax
  417f29:	dec    ebp
  417f2a:	jns    0x417f1c
  417f2c:	fild   QWORD PTR [eax-0x77]
  417f2f:	inc    edx
  417f30:	push   eax
  417f31:	xor    DWORD PTR [edi+edi*4-0x6497fdc3],edx
  417f38:	scas   al,BYTE PTR es:[edi]
  417f39:	xor    dl,BYTE PTR [ebp+0x28]
  417f3c:	jb     0x417f71
  417f3e:	mov    cl,0x68
  417f40:	bound  ecx,QWORD PTR ds:[edi+eiz*1-0xa21cb25]
  417f48:	push   0x3ea96b00
  417f4d:	iret   
  417f4e:	inc    edx
  417f4f:	add    esp,0x50
  417f52:	xor    eax,0x73af752b
  417f57:	scas   al,BYTE PTR es:[edi]
  417f58:	call   0xe492:0xa52de2c1
  417f5f:	(bad)  
  417f60:	jns    0x417ef4
  417f62:	pop    ebp
  417f63:	sub    BYTE PTR [edx+0x439aa194],dl
  417f69:	xor    esi,DWORD PTR [ebx-0x7cf53faf]
  417f6f:	rol    ebx,cl
  417f71:	repnz rol DWORD PTR [esi],1
  417f74:	addr16 cld 
  417f76:	xchg   edi,eax
  417f77:	xor    DWORD PTR [eax],eax
  417f79:	pop    edi
  417f7a:	jb     0x417f45
  417f7c:	in     al,dx
  417f7d:	xor    DWORD PTR [esi+0x56],edx
  417f80:	loope  0x417fc8
  417f82:	cmp    eax,0x3e78fa95
  417f87:	mov    bl,0x80
  417f89:	in     al,0xbf
  417f8b:	aam    0xcc
  417f8d:	rcl    dh,cl
  417f8f:	fimul  WORD PTR [ecx-0x40487d1]
  417f95:	pop    ds
  417f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f97:	test   DWORD PTR [ecx-0x32],ebp
  417f9a:	mov    ebp,0xc9c00b1d
  417f9f:	ds out dx,eax
  417fa1:	lahf   
  417fa2:	jno    0x417f29
  417fa4:	inc    esi
  417fa5:	imul   ecx,DWORD PTR [ebx],0x7f5adfb7
  417fab:	xchg   esi,eax
  417fac:	cmp    DWORD PTR [ebp-0x76b9eda7],0xffffffab
  417fb3:	fwait
  417fb4:	std    
  417fb5:	ins    BYTE PTR es:[edi],dx
  417fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb7:	push   ss
  417fb8:	jne    0x417fd7
  417fba:	or     DWORD PTR [edx-0xf],0x40
  417fbe:	jmp    0xf1052967
  417fc3:	(bad)  
  417fc5:	pusha  
  417fc6:	or     al,0xa3
  417fc8:	test   eax,0xd4a1b182
  417fcd:	cmp    eax,0x22a0293a
  417fd2:	rcl    dh,cl
  417fd4:	push   0x10
  417fd6:	and    cl,bh
  417fd8:	mov    ebp,0x6c8f2214
  417fdd:	loopne 0x417f8e
  417fdf:	(bad)  
  417fe0:	cs mov cl,0x15
  417fe3:	sub    al,0xfc
  417fe5:	sahf   
  417fe6:	movq   mm0,mm3
  417fe9:	out    0x3,al
  417feb:	jmp    0x417fc7
  417fed:	in     eax,0x0
  417fef:	pop    ebp
  417ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ff1:	stos   DWORD PTR es:[edi],eax
  417ff2:	popa   
  417ff3:	js     0x417fff
  417ff5:	or     DWORD PTR [esi+0x6b4d8ab9],ebx
  417ffb:	mov    bh,BYTE PTR [edi+0x601129a7]
  418001:	cmp    al,0x53
  418003:	(bad)  
  418004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418005:	adc    DWORD PTR fs:[ebx-0x1eb3c890],edi
  41800c:	inc    ebp
  41800d:	aas    
  41800e:	(bad)  
  41800f:	and    eax,0xde03ada
  418014:	addr16 jmpw 0x8fd6
  418019:	push   ebp
  41801a:	fwait
  41801b:	jb     0x417fde
  41801d:	(bad)  
  41801e:	mov    dh,0x74
  418020:	outs   dx,BYTE PTR ds:[esi]
  418021:	fst    DWORD PTR [ecx-0x47]
  418024:	dec    esi
  418025:	and    eax,eax
  418027:	ror    BYTE PTR [eax+0x30],cl
  41802a:	push   ds
  41802b:	xor    BYTE PTR [ebx+ecx*2],dl
  41802e:	gs pushf 
  418030:	jmp    0x418076
  418032:	sbb    ebp,DWORD PTR [eax]
  418034:	fnstenv [esi+0x402c2af1]
  41803a:	pop    esi
  41803b:	gs inc ecx
  41803d:	call   0x88926ac
  418042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418043:	or     eax,0x3fe6343e
  418048:	add    ch,cl
  41804a:	neg    esi
  41804c:	je     0x4180c2
  41804e:	daa    
  41804f:	xchg   edi,eax
  418050:	stos   DWORD PTR es:[edi],eax
  418051:	and    BYTE PTR [ecx-0x7fd8de2],0x5a
  418058:	inc    ebx
  418059:	push   ebp
  41805a:	scas   eax,DWORD PTR es:[edi]
  41805b:	sbb    BYTE PTR [edx],dl
  41805d:	add    BYTE PTR [edx-0xfa981fb],bl
  418063:	pushf  
  418064:	sbb    DWORD PTR [edx],ebx
  418066:	push   cs
  418067:	gs call 0x3b:0xfd19d90a
  41806f:	add    BYTE PTR [esi-0x7a],0xdf
  418073:	rol    DWORD PTR [ebx+0x28],0xc
  418077:	mov    eax,DWORD PTR [ebp+0x76]
  41807a:	lock cs xchg edx,eax
  41807d:	jnp    0x418014
  41807f:	retf   0x63f9
  418082:	aas    
  418083:	imul   BYTE PTR [ecx]
  418085:	arpl   WORD PTR [esi+ebp*1+0x4d4218f5],cx
  41808c:	mov    ebp,0xc8392ce5
  418091:	imul   eax,esp,0x5d
  418094:	add    BYTE PTR [edx],dl
  418096:	adc    eax,0x11e44647
  41809b:	sbb    BYTE PTR [eax+0xf],cl
  41809e:	mov    esp,0xaae57766
  4180a3:	aaa    
  4180a4:	jecxz  0x418029
  4180a6:	js     0x41810c
  4180a8:	nop
  4180a9:	ror    BYTE PTR [ebx-0x59e7d83c],1
  4180af:	nop
  4180b0:	and    al,0xeb
  4180b2:	sbb    eax,0x7cddd5c5
  4180b7:	outs   dx,DWORD PTR ds:[esi]
  4180b8:	cmp    dh,cl
  4180ba:	cwde   
  4180bb:	push   ss
  4180bc:	jl     0x4180a8
  4180be:	dec    ebx
  4180bf:	cmc    
  4180c0:	add    DWORD PTR [edi-0x6c],esp
  4180c3:	or     al,0x86
  4180c5:	mov    bl,0x1f
  4180c7:	cdq    
  4180c8:	push   ss
  4180c9:	adc    eax,0x3c279427
  4180ce:	ins    BYTE PTR es:[edi],dx
  4180cf:	loop   0x4180a4
  4180d1:	test   esi,edx
  4180d3:	outs   dx,BYTE PTR ds:[esi]
  4180d4:	jmp    0x54131716
  4180d9:	jecxz  0x4180d8
  4180db:	push   ecx
  4180dc:	dec    edx
  4180dd:	popa   
  4180de:	cdq    
  4180df:	hlt    
  4180e0:	adc    BYTE PTR [ebx],dh
  4180e2:	psrlw  mm7,mm5
  4180e5:	sub    dl,al
  4180e7:	daa    
  4180e8:	pop    ebp
  4180e9:	daa    
  4180ea:	mov    bh,0x6d
  4180ec:	jae    0x41811a
  4180ee:	rol    BYTE PTR [eax+0x709c6ec9],1
  4180f4:	pop    esi
  4180f5:	inc    ecx
  4180f6:	sbb    bl,dl
  4180f8:	cmp    dh,BYTE PTR [ebp+0x5786f3e6]
  4180fe:	add    BYTE PTR [eax],0xf0
  418101:	add    al,0xa2
  418103:	cld    
  418104:	ror    ebx,1
  418106:	repnz mov bx,0x6588
  41810b:	or     dl,BYTE PTR [eax]
  41810d:	pusha  
  41810e:	mov    ecx,0x2a697fef
  418113:	jmp    0x4180cf
  418115:	imul   esi,DWORD PTR [esi],0xffffff8c
  418118:	fwait
  418119:	dec    eax
  41811a:	mov    ebx,0xf593429d
  41811f:	sbb    al,0x63
  418121:	sub    DWORD PTR [ecx-0x7b117e93],esp
  418127:	or     DWORD PTR [eax-0xb],0xfd12f8f5
  41812e:	push   ss
  41812f:	cmp    ch,cl
  418131:	out    dx,eax
  418132:	jbe    0x4180cf
  418134:	adc    ebp,DWORD PTR [edx-0x6693a64d]
  41813a:	into   
  41813b:	adc    dl,BYTE PTR [edx-0x6d7736de]
  418141:	cmp    ah,BYTE PTR [ecx]
  418143:	mov    gs,WORD PTR [ebp+0x7a]
  418146:	mov    al,0xf4
  418148:	and    cl,BYTE PTR [ebx+0x1db7efce]
  41814e:	scas   eax,DWORD PTR es:[edi]
  41814f:	mov    esp,0x3c0076e0
  418154:	pcmpgtb mm7,QWORD PTR [ebp-0x51625b25]
  41815b:	lds    edi,FWORD PTR [ebx+0x57]
  41815e:	or     al,0xcc
  418160:	pop    es
  418161:	push   ecx
  418162:	inc    edi
  418163:	pop    ebx
  418164:	outs   dx,BYTE PTR ds:[esi]
  418165:	call   0x946edbc
  41816a:	adc    eax,0xaa3cb37e
  41816f:	retf   
  418170:	lock push eax
  418172:	les    edi,FWORD PTR ds:0x4c3fc981
  418178:	aam    0x74
  41817a:	sti    
  41817b:	xor    ah,BYTE PTR [ebp+0x4d]
  41817e:	pushf  
  41817f:	lea    ebx,[ecx-0x72]
  418182:	adc    al,0xbc
  418184:	xchg   ebp,eax
  418185:	xor    DWORD PTR [esi],0xcbfd61f5
  41818b:	pop    ss
  41818c:	or     bl,BYTE PTR [ebp+0x16]
  41818f:	mov    ds:0xb4a24e4c,eax
  418194:	lods   eax,DWORD PTR ds:[esi]
  418195:	sbb    DWORD PTR [esi+0x69],edi
  418198:	xor    esi,DWORD PTR [ecx+0x5a83323e]
  41819e:	retf   0x83a7
  4181a1:	adc    ah,BYTE PTR [ecx]
  4181a3:	mov    ebx,0x739a9f0c
  4181a8:	add    edx,DWORD PTR [eax-0x3c]
  4181ab:	dec    ebx
  4181ac:	jge    0x4181bb
  4181ae:	mov    eax,ds:0x48cd5d6
  4181b3:	int3   
  4181b4:	(bad)
  4181b7:	sbb    al,0xe7
  4181b9:	and    esp,DWORD PTR ds:[edx-0x52]
  4181bd:	mov    eax,0xa355ec49
  4181c2:	sbb    eax,0x33f828bb
  4181c7:	mov    al,ds:0xaac95b20
  4181cc:	fwait
  4181cd:	push   0x30990a95
  4181d2:	aad    0x2e
  4181d4:	pop    edx
  4181d5:	jge    0x4181c7
  4181d7:	retf   0xbf50
  4181da:	bound  edi,QWORD PTR [ebx]
  4181dc:	or     esp,DWORD PTR [edi]
  4181de:	stos   DWORD PTR es:[edi],eax
  4181df:	stc    
  4181e0:	lock jge 0x4181bb
  4181e3:	enter  0x3a6d,0xb5
  4181e7:	sub    bl,BYTE PTR [edx-0x61b6f0ec]
  4181ed:	or     cl,BYTE PTR [ebp+edi*1-0x1ee75a95]
  4181f4:	mov    ch,0xf
  4181f6:	xor    al,0x3
  4181f8:	fucomp st(0)
  4181fa:	ss inc esp
  4181fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181fd:	pop    ss
  4181fe:	(bad)  
  4181ff:	iret   
  418200:	mov    esp,0x3c0457d7
  418205:	shr    BYTE PTR [edi+0x151d5d50],cl
  41820b:	js     0x4181d3
  41820d:	icebp  
  41820e:	pop    ebp
  41820f:	stc    
  418210:	jp     0x418208
  418212:	out    0x10,eax
  418214:	arpl   WORD PTR [edi],cx
  418216:	int3   
  418217:	push   ss
  418218:	jno    0x41826f
  41821a:	fcmovne st,st(4)
  41821c:	ror    DWORD PTR [eax-0x6c],0x9d
  418220:	adc    ebx,DWORD PTR [ecx-0xa]
  418223:	jns    0x418273
  418225:	jmp    0x418285
  418227:	mov    ?,WORD PTR [edx-0x3ef41393]
  41822d:	sbb    ecx,esi
  41822f:	push   esp
  418230:	adc    eax,0x1c11ab80
  418235:	sti    
  418236:	jne    0x41828b
  418238:	das    
  418239:	mov    edi,0x1d201070
  41823e:	sbb    ch,BYTE PTR [ebx+0x35]
  418241:	fistp  QWORD PTR [esi+0x12]
  418244:	mov    ecx,0xf4346f1a
  418249:	mov    ebp,0x5ecf638d
  41824e:	shl    DWORD PTR [ebx],0xdc
  418251:	cmp    edi,esi
  418253:	jge    0x4181eb
  418255:	or     DWORD PTR [edx],esi
  418257:	cmp    eax,edi
  418259:	adc    al,0x89
  41825b:	and    ch,dh
  41825d:	push   edi
  41825e:	mov    ecx,0x359255e1
  418263:	sub    BYTE PTR [ebp-0x16],cl
  418266:	div    DWORD PTR [ebx+ecx*8-0x5a]
  41826a:	inc    eax
  41826b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41826c:	dec    eax
  41826d:	push   es
  41826e:	push   esi
  41826f:	cs jmp 0x41820c
  418272:	outs   dx,DWORD PTR ds:[esi]
  418273:	(bad)  
  418274:	pop    ebx
  418275:	fnsave [eiz*4+0x79e82399]
  41827c:	fadd   QWORD PTR [ebx+0x7bd91bd0]
  418282:	imul   esp,DWORD PTR [esi+edx*8-0x2b75f2bb],0x4f67bf0c
  41828d:	pop    esi
  41828e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41828f:	push   0x4e91ceb4
  418294:	xor    al,0x5b
  418296:	lea    ebp,[ecx]
  418298:	ficomp DWORD PTR [ecx+0x24]
  41829b:	lea    ebx,[edi+ebx*1-0x32]
  41829f:	sbb    BYTE PTR [ebp+esi*1+0x2ff6880c],dh
  4182a6:	dec    esi
  4182a7:	push   es
  4182a8:	rcl    eax,1
  4182aa:	xchg   dh,ah
  4182ac:	retf   0x17b0
  4182af:	pop    es
  4182b0:	(bad)  
  4182b1:	outs   dx,BYTE PTR ds:[esi]
  4182b2:	mov    eax,0x1fd26044
  4182b7:	jp     0x4182e9
  4182b9:	adc    DWORD PTR [eax],edi
  4182bb:	add    eax,0xcc9a3b44
  4182c0:	pop    eax
  4182c1:	add    eax,0xa94939c1
  4182c6:	sub    al,0x6a
  4182c8:	jmp    0x4f45:0x4c6e7b21
  4182cf:	outs   dx,BYTE PTR ds:[esi]
  4182d0:	xor    ebp,ebp
  4182d2:	loopne 0x418276
  4182d4:	leave  
  4182d5:	sbb    cl,dl
  4182d7:	jg     0x4182d9
  4182d9:	imul   edx,DWORD PTR [ebx-0x1d],0xa5f16be9
  4182e0:	dec    esp
  4182e1:	push   ebp
  4182e2:	sti    
  4182e3:	loope  0x4182b8
  4182e5:	adc    BYTE PTR [ecx+0x9],ch
  4182e8:	jmp    0x418333
  4182ea:	cmp    DWORD PTR [edx+0x74],ebp
  4182ed:	jmp    0xa8bcc9e5
  4182f2:	fcomip st,st(1)
  4182f4:	xor    edi,DWORD PTR [edi+ecx*8-0xc]
  4182f8:	push   edi
  4182f9:	dec    ebp
  4182fa:	mov    dl,0x67
  4182fc:	sbb    bh,BYTE PTR [eax-0xa]
  4182ff:	mov    bl,BYTE PTR [edi]
  418301:	dec    ebp
  418302:	jbe    0x41836d
  418304:	(bad)  
  418305:	outs   dx,BYTE PTR ds:[esi]
  418306:	(bad)  
  418307:	les    ebp,FWORD PTR [ebx+0x46]
  41830a:	cmp    BYTE PTR [ecx+0x69e5291c],bh
  418310:	sbb    al,0xf1
  418312:	test   al,0xd4
  418314:	out    dx,eax
  418315:	add    eax,0x81eb0033
  41831a:	out    dx,eax
  41831b:	fs or  eax,ebp
  41831e:	cmp    ah,ah
  418320:	sbb    ah,BYTE PTR [edi-0x356db545]
  418326:	dec    ebx
  418327:	rol    BYTE PTR [edx-0x45d28d13],1
  41832d:	inc    ebx
  41832e:	retf   0x1426
  418331:	ja     0x418369
  418333:	xchg   esi,eax
  418334:	jmp    0xb7b11424
  418339:	sub    edx,DWORD PTR [eax+edi*8-0x771b7c7]
  418340:	mov    eax,ds:0xc3d39920
  418345:	and    ebx,DWORD PTR [esi+ebp*1]
  418348:	cmp    bl,BYTE PTR [edi]
  41834a:	xchg   ebx,eax
  41834b:	test   DWORD PTR [eax],eax
  41834d:	test   BYTE PTR [ebx+esi*4-0xa73f6cd],0x33
  418355:	push   esp
  418356:	adc    eax,0x749b9e6b
  41835b:	ds mov dl,dh
  41835e:	or     al,0x6f
  418360:	outs   dx,DWORD PTR ds:[esi]
  418361:	scas   al,BYTE PTR es:[edi]
  418362:	mov    dh,0x1c
  418364:	mov    DWORD PTR ds:0xd5a53cf3,edx
  41836a:	cmp    dh,BYTE PTR [ecx-0x4eb819a6]
  418370:	jbe    0x41830d
  418372:	jne    0x41831d
  418374:	pop    esp
  418375:	push   0x123b1b75
  41837a:	pop    esp
  41837b:	push   esp
  41837c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41837d:	adc    eax,0xecc832be
  418382:	sub    dh,BYTE PTR [ebp-0x2d]
  418385:	gs add al,0xf
  418388:	test   ecx,esi
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	dec    esi
  41848c:	xchg   DWORD PTR [ebp+esi*2+0x7c7d30cc],ebx
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	jmp    0x57bb:0x3909aaca
  41849e:	iret   
  41849f:	pop    esi
  4184a0:	cld    
  4184a1:	mov    ebx,0x5d9a8ed5
  4184a6:	sbb    ecx,0x46
  4184a9:	adc    al,BYTE PTR [eax-0x6b]
  4184ac:	dec    esp
  4184ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184ae:	dec    ecx
  4184af:	sbb    esp,ebx
  4184b1:	(bad)  [ecx-0x205719be]
  4184b7:	fstp   DWORD PTR [edx]
  4184b9:	in     eax,dx
  4184ba:	cmp    eax,0xe85bfd50
  4184bf:	popf   
  4184c0:	mov    ch,0x3
  4184c2:	fsubr  QWORD PTR [ebp+eiz*2-0x38]
  4184c6:	loope  0x418534
  4184c8:	lss    ebp,FWORD PTR [edi]
  4184cb:	add    edi,DWORD PTR [ebx-0xb]
  4184ce:	mov    edi,0x82493331
  4184d3:	(bad)  
  4184d4:	mov    dl,0x70
  4184d6:	scas   eax,DWORD PTR es:[edi]
  4184d7:	xchg   BYTE PTR [esi],al
  4184d9:	data16 cmp al,BYTE PTR es:[esi+eax*4-0x188b6fdb]
  4184e2:	jmp    0x4184a2
  4184e4:	(bad)  
  4184e5:	out    dx,al
  4184e6:	ds pop ss
  4184e8:	pop    ebp
  4184e9:	xchg   esi,eax
  4184ea:	mov    cl,dl
  4184ec:	cld    
  4184ed:	in     al,dx
  4184ee:	jb     0x4184b0
  4184f0:	iret   
  4184f1:	aas    
  4184f2:	pop    ebp
  4184f3:	arpl   WORD PTR [edx+0x7514366c],cx
  4184f9:	sti    
  4184fa:	(bad)  
  4184fb:	mov    edi,0xd45e43c3
  418500:	pop    ebx
  418501:	sbb    eax,0x85228f12
  418506:	push   es
  418507:	mov    eax,0x1381a85
  41850c:	mov    al,0x9b
  41850e:	mov    ax,0xbfc3
  418512:	imul   ebp,DWORD PTR [edi],0x353b2f1b
  418518:	adc    al,cl
  41851a:	sub    DWORD PTR [edx+0x35],eax
  41851d:	sbb    al,0x1e
  41851f:	mov    eax,?
  418521:	dec    esp
  418522:	and    bh,BYTE PTR [esi+ebp*2+0x2a]
  418526:	jbe    0x418514
  418528:	ins    DWORD PTR es:[edi],dx
  418529:	lds    esi,FWORD PTR [ebx+0x41]
  41852c:	loop   0x41852b
  41852e:	lods   al,BYTE PTR ds:[esi]
  41852f:	jae    0x418505
  418531:	xchg   edi,eax
  418532:	push   0xfffffff9
  418534:	mov    bl,0x2c
  418536:	xor    BYTE PTR [ebx],0xfb
  418539:	or     ch,BYTE PTR [ebp+0x3]
  41853c:	cld    
  41853d:	or     BYTE PTR [edx],dl
  41853f:	dec    ecx
  418540:	mov    ch,0x1f
  418542:	nop
  418543:	mov    ds:0x15a6ed6a,eax
  418548:	fistp  DWORD PTR [ecx-0x6a7e191a]
  41854e:	push   ecx
  41854f:	cmc    
  418550:	(bad)  
  418551:	stos   BYTE PTR es:[edi],al
  418552:	mov    edx,0xdfec25cf
  418557:	loope  0x4184e5
  418559:	cmp    DWORD PTR [edi+0x1e9a4cc4],0xbd7442c
  418563:	pop    ss
  418564:	ins    DWORD PTR es:[edi],dx
  418565:	enter  0x6b3,0x2c
  418569:	sub    BYTE PTR [edx-0x3d],dl
  41856c:	sub    cl,BYTE PTR [ebp+0x63c29534]
  418572:	ds jbe 0x4185dc
  418575:	cmp    dl,BYTE PTR [edx]
  418577:	push   edx
  418578:	and    BYTE PTR [ebx],0x83
  41857b:	pop    esi
  41857c:	and    DWORD PTR [eax+0x296b364a],edi
  418582:	pop    edx
  418583:	ins    BYTE PTR es:[edi],dx
  418584:	lahf   
  418585:	std    
  418586:	rcr    BYTE PTR [edx],0x8a
  418589:	clc    
  41858a:	inc    ecx
  41858b:	mov    ch,0xd8
  41858d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41858f:	push   esp
  418590:	aam    0x12
  418592:	shr    BYTE PTR [esi],cl
  418594:	xor    ebx,ebp
  418596:	call   0x6e482b85
  41859b:	arpl   bp,bx
  41859d:	xor    al,0x94
  41859f:	or     dl,al
  4185a1:	mov    cl,0x5
  4185a3:	(bad)  
  4185a4:	cmc    
  4185a5:	(bad)  
  4185a6:	push   esi
  4185a7:	sub    BYTE PTR [edx+0x2d],0x12
  4185ab:	loope  0x4185c4
  4185ad:	ret    
  4185ae:	xchg   edx,eax
  4185af:	jns    0x4185b7
  4185b1:	mov    ds:0x9183b160,al
  4185b6:	dec    ebp
  4185b7:	leave  
  4185b8:	pop    es
  4185b9:	clc    
  4185ba:	jae    0x418631
  4185bc:	xchg   ecx,eax
  4185bd:	(bad)  
  4185be:	in     al,dx
  4185bf:	or     DWORD PTR [esi],edi
  4185c1:	sub    ecx,DWORD PTR [ecx]
  4185c3:	popf   
  4185c4:	pop    ds
  4185c5:	and    bh,BYTE PTR [edi]
  4185c7:	je     0x41856b
  4185c9:	nop
  4185ca:	pop    eax
  4185cb:	and    ebx,DWORD PTR [esi+0x2ce50f27]
  4185d1:	nop
  4185d2:	fcom   QWORD PTR [eax+0x3b]
  4185d5:	jg     0x418563
  4185d7:	jp     0x4185e3
  4185d9:	fimul  WORD PTR [eax-0x58f71ba5]
  4185df:	xchg   esp,eax
  4185e0:	js     0x41860d
  4185e2:	outs   dx,DWORD PTR ds:[esi]
  4185e3:	xor    al,BYTE PTR [edx]
  4185e5:	lock sbb ch,BYTE PTR [ebx]
  4185e8:	or     BYTE PTR [eax],0x62
  4185eb:	xor    eax,0x859e72fb
  4185f0:	pop    ss
  4185f1:	cli    
  4185f2:	xlat   BYTE PTR ds:[ebx]
  4185f3:	or     BYTE PTR [ebp-0x5c],cl
  4185f6:	les    ecx,FWORD PTR [esi]
  4185f8:	(bad)  
  4185f9:	jmp    0xe115:0x2b64d180
  418600:	stc    
  418601:	cwde   
  418602:	ins    DWORD PTR es:[edi],dx
  418603:	mov    al,0xcd
  418605:	(bad)  
  418606:	daa    
  418607:	sub    ecx,ecx
  418609:	push   0xffffffb5
  41860b:	sub    al,0xe8
  41860d:	fs out 0x6f,eax
  418610:	jnp    0x41867c
  418612:	stos   BYTE PTR es:[edi],al
  418613:	aad    0x7
  418615:	stos   DWORD PTR es:[edi],eax
  418616:	jb     0x418602
  418618:	sbb    DWORD PTR [edx+0x4ece4e30],0xec488b01
  418622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418623:	mov    bl,0x52
  418625:	fdiv   DWORD PTR [edi-0x60d68d1c]
  41862b:	lods   al,BYTE PTR ds:[esi]
  41862c:	mov    eax,0xf6054fe2
  418631:	add    ch,bh
  418633:	sbb    BYTE PTR [ecx-0x3],cl
  418636:	and    al,0xf3
  418638:	xor    al,0xc
  41863a:	inc    ecx
  41863b:	cmp    eax,0xde3129a3
  418640:	popf   
  418641:	repnz xchg ebp,eax
  418643:	mov    edi,0xa6d6d9fc
  418648:	dec    ecx
  418649:	sbb    BYTE PTR [eax],cl
  41864b:	cmp    eax,0xf142c225
  418650:	sub    ch,BYTE PTR [ebp-0x48]
  418653:	fidiv  WORD PTR [edx+0x5a]
  418656:	sbb    eax,0x2e635e99
  41865b:	jnp    0x418692
  41865d:	lahf   
  41865e:	dec    esi
  41865f:	sbb    al,0xe8
  418661:	stos   DWORD PTR es:[edi],eax
  418662:	pushf  
  418663:	call   DWORD PTR [edi]
  418665:	push   ebp
  418666:	inc    ebx
  418667:	add    eax,0x299fe92a
  41866c:	cmp    al,bh
  41866e:	pop    edi
  41866f:	sub    BYTE PTR [edx+0x5f5ca2b7],bh
  418675:	jno    0x4186c4
  418677:	in     eax,0xb9
  418679:	pop    es
  41867a:	out    dx,eax
  41867b:	test   DWORD PTR [edx+eiz*4-0x13],0x714e0934
  418683:	aaa    
  418684:	(bad)  
  418685:	sbb    BYTE PTR [eax+0x1e],ah
  418688:	stc    
  418689:	js     0x418647
  41868b:	dec    edi
  41868c:	addr16 aaa 
  41868e:	sub    bl,0x5b
  418691:	test   DWORD PTR [edx+0x3b28c65a],ebx
  418697:	popa   
  418698:	sbb    ch,dl
  41869a:	push   ebx
  41869b:	cmp    ebp,ebx
  41869d:	pop    ebx
  41869e:	rcl    DWORD PTR [ebp-0x389590b9],cl
  4186a4:	mov    ds:0x6cf6c0e6,al
  4186a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186aa:	in     al,0x71
  4186ac:	mov    eax,0xfb1e369b
  4186b1:	icebp  
  4186b2:	add    eax,0xa9e73c82
  4186b7:	xor    al,0x1
  4186b9:	and    dh,dl
  4186bb:	push   edx
  4186bc:	ds test eax,0x58111ef3
  4186c2:	or     dl,ch
  4186c4:	je     0x418677
  4186c6:	mov    dl,0xe0
  4186c8:	inc    ebp
  4186c9:	jmp    0x79b25319
  4186ce:	push   0xffffff94
  4186d0:	in     al,0x4e
  4186d2:	js     0x418697
  4186d4:	mov    eax,0xe2a2aa8a
  4186d9:	(bad)  
  4186da:	sub    ch,BYTE PTR [eax+0x2c]
  4186dd:	nop
  4186de:	push   0x7254c666
  4186e3:	hlt    
  4186e4:	xchg   cl,dh
  4186e6:	pop    ebp
  4186e7:	(bad)  
  4186e8:	ret    
  4186e9:	jbe    0x41875d
  4186eb:	mov    edi,edi
  4186ed:	jbe    0x418749
  4186ef:	cmp    al,0xc6
  4186f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f2:	shr    BYTE PTR [edi-0xa],0xa2
  4186f6:	add    al,0xb4
  4186f8:	sub    al,0x80
  4186fa:	sbb    eax,0x5fe570f8
  4186ff:	ja     0x4186f2
  418701:	adc    eax,0x4fd56306
  418706:	xlat   BYTE PTR ds:[ebx]
  418707:	dec    esp
  418708:	shl    BYTE PTR [esi-0x4b6c4984],0xb1
  41870f:	fcomp  DWORD PTR [edx]
  418711:	inc    esi
  418712:	pop    ss
  418713:	inc    ebp
  418714:	or     eax,0x7c795ed5
  418719:	minps  xmm2,xmm3
  41871c:	mov    ebx,0xcf671fc
  418721:	and    dh,0x92
  418724:	arpl   WORD PTR [ebx+0x1c],dx
  418727:	ds cmc 
  418729:	cwde   
  41872a:	jns    0x418714
  41872c:	loope  0x418779
  41872e:	mov    cl,0x8d
  418730:	jmp    0x4186c8
  418732:	and    al,0x33
  418734:	mov    bh,BYTE PTR [esi]
  418736:	sbb    BYTE PTR [edx],al
  418738:	xor    eax,DWORD PTR [edx+0x28]
  41873b:	cdq    
  41873c:	inc    edi
  41873d:	(bad)  
  41873e:	in     eax,dx
  41873f:	push   ebp
  418740:	sbb    al,0xa7
  418742:	jns    0x418706
  418744:	out    dx,eax
  418745:	push   cs
  418746:	cmp    ebp,ebp
  418748:	retfw  0x27d0
  41874c:	inc    edx
  41874d:	jo     0x418709
  41874f:	pusha  
  418750:	lods   al,BYTE PTR ds:[esi]
  418751:	add    DWORD PTR [ebx*2-0x2b88a322],ebx
  418758:	inc    esp
  418759:	std    
  41875a:	mov    dl,0x4
  41875c:	dec    esi
  41875d:	rcl    DWORD PTR [edx],cl
  41875f:	leave  
  418760:	sub    DWORD PTR [ebx+0x758e89fe],0x4a43a141
  41876a:	(bad)
  41876d:	dec    DWORD PTR [esi+0x4f51c0d0]
  418773:	ror    BYTE PTR [ecx-0x7cb53483],0x21
  41877a:	ja     0x4187f4
  41877c:	sub    al,0x73
  41877e:	sbb    al,0xdd
  418780:	push   esp
  418781:	lock out dx,al
  418783:	xchg   esp,eax
  418784:	cmp    esp,DWORD PTR [ebx]
  418786:	shr    DWORD PTR [esi+eiz*4],cl
  418789:	dec    ebp
  41878a:	pusha  
  41878b:	add    ah,BYTE PTR [ebx+0x19be4050]
  418791:	out    dx,eax
  418792:	mov    cl,0xfc
  418794:	data16 stc 
  418796:	mov    BYTE PTR [ebp+0x66],ch
  418799:	pushf  
  41879a:	pop    ecx
  41879b:	scas   eax,DWORD PTR es:[edi]
  41879c:	test   BYTE PTR [ebx+0x7d],0xbb
  4187a0:	push   cs
  4187a1:	jno    0x4187ef
  4187a3:	xor    DWORD PTR [ebp+ecx*2-0x796740fb],0xbe09410e
  4187ae:	lock cdq 
  4187b0:	fld    QWORD PTR [ecx]
  4187b2:	imul   ebp,DWORD PTR [esi-0x3e],0xffffffb9
  4187b6:	mov    edi,0x1a923065
  4187bb:	adc    ah,al
  4187bd:	je     0x4187fc
  4187bf:	aaa    
  4187c0:	xchg   ebx,eax
  4187c1:	mov    eax,0xeca4e44
  4187c6:	and    al,0xe
  4187c8:	or     eax,0x362ad674
  4187cd:	stos   BYTE PTR es:[edi],al
  4187ce:	jp     0x418759
  4187d0:	(bad)  
  4187d1:	in     eax,dx
  4187d2:	sbb    esi,ebp
  4187d4:	cmp    BYTE PTR [edi+0x1d05a40b],ch
  4187da:	loope  0x418785
  4187dc:	mov    al,ds:0x483a7a83
  4187e1:	jg     0x418830
  4187e3:	jecxz  0x41885f
  4187e5:	inc    esp
  4187e6:	jbe    0x41882a
  4187e8:	sbb    al,0x84
  4187ea:	mov    dl,0x5
  4187ec:	daa    
  4187ed:	aad    0xf7
  4187ef:	cli    
  4187f0:	cwde   
  4187f1:	es sbb eax,0xb2980f8b
  4187f7:	sub    BYTE PTR [ebp+eiz*1+0xef2408f],0x1f
  4187ff:	mov    ch,0xad
  418801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418802:	ss scas al,BYTE PTR es:[edi]
  418804:	leave  
  418805:	ror    bl,cl
  418807:	xchg   ebp,eax
  418808:	xor    al,0x51
  41880a:	xor    eax,0x2656003
  41880f:	aam    0x1e
  418811:	mov    edx,DWORD PTR [ecx+edx*1-0x56]
  418815:	pop    ebp
  418816:	xor    ch,BYTE PTR [ebx]
  418818:	lea    ebp,[eax+0x2f]
  41881b:	inc    edi
  41881c:	jmp    0x7e64:0x18df4d95
  418823:	mov    ebx,0x9acda9db
  418828:	jge    0x4187e3
  41882a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41882b:	and    eax,0x8e4d30e6
  418830:	fcom   QWORD PTR [edi]
  418832:	xor    al,BYTE PTR [edi]
  418834:	in     al,dx
  418835:	stc    
  418836:	cmp    BYTE PTR [ebp-0x49e9d990],ch
  41883c:	cli    
  41883d:	inc    edx
  41883e:	or     DWORD PTR ds:0xf06559ca,edx
  418844:	enter  0x5cfb,0x48
  418848:	loope  0x4188b2
  41884a:	scas   al,BYTE PTR es:[edi]
  41884b:	dec    ebx
  41884c:	aas    
  41884d:	adc    al,BYTE PTR [edx+ebx*4+0x3a23c51f]
  418854:	mov    BYTE PTR [esi+0x4d],ah
  418857:	(bad)  
  418858:	ins    BYTE PTR es:[edi],dx
  418859:	icebp  
  41885a:	pop    edx
  41885b:	adc    BYTE PTR [edi-0x364ed3d7],cl
  418861:	ss jg  0x4188ce
  418864:	dec    ebx
  418865:	ins    DWORD PTR es:[edi],dx
  418866:	dec    edx
  418867:	and    DWORD PTR [edi+ecx*1],esp
  41886a:	jno    0x4188a6
  41886c:	jne    0x41888f
  41886e:	fwait
  41886f:	and    DWORD PTR [ecx+0x12],ebp
  418872:	stos   DWORD PTR es:[edi],eax
  418873:	cmc    
  418874:	adc    eax,0xce7b013e
  418879:	mov    DWORD PTR [edi],eax
  41887b:	jae    0x4188a4
  41887d:	jp     0x418800
  41887f:	xor    al,0x74
  418881:	adc    eax,DWORD PTR [edx]
  418883:	xchg   esi,eax
  418884:	(bad)  
  418885:	sbb    DWORD PTR [ecx-0x7d9a359c],ecx
  41888b:	pop    edx
  41888c:	outs   dx,DWORD PTR ds:[esi]
  41888d:	int    0x8
  41888f:	enter  0x3698,0x44
  418893:	gs in  al,0xf0
  418896:	add    BYTE PTR [edi-0x7c],ah
  418899:	cmp    BYTE PTR [ecx],dh
  41889b:	xor    al,0x9c
  41889d:	pop    es
  41889e:	xchg   ebx,eax
  41889f:	and    edi,DWORD PTR [ebp-0x1301b10a]
  4188a5:	scas   al,BYTE PTR es:[edi]
  4188a6:	adc    edx,0x1
  4188a9:	jbe    0x4188f0
  4188ab:	out    0xff,eax
  4188ad:	mov    dl,0x4c
  4188af:	sahf   
  4188b0:	mov    bl,0xde
  4188b2:	jns    0x418855
  4188b4:	xchg   ax,ax
  4188b6:	jnp    0x41887d
  4188b8:	in     al,dx
  4188b9:	push   edx
  4188ba:	es loope 0x418931
  4188bd:	cmp    esi,DWORD PTR [ecx+0x3325e734]
  4188c3:	cdq    
  4188c4:	dec    ebp
  4188c5:	jmp    0x4188d5
  4188c7:	sub    bh,BYTE PTR [eax]
  4188c9:	jbe    0x418891
  4188cb:	div    BYTE PTR [esi-0x37b728bb]
  4188d1:	dec    esi
  4188d2:	call   0x62c4:0x8212d41b
  4188d9:	pop    ds
  4188da:	sbb    esp,esp
  4188dc:	mov    dl,0xc4
  4188de:	clc    
  4188df:	(bad)  
  4188e0:	aad    0xe9
  4188e2:	lds    eax,FWORD PTR [esi-0x2a]
  4188e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e6:	sbb    ah,BYTE PTR [ebx+eax*4+0x60d9b517]
  4188ed:	retf   0xff33
  4188f0:	imul   esi,DWORD PTR [esi],0xed06811a
  4188f6:	outs   dx,DWORD PTR ds:[esi]
  4188f7:	sub    ebx,DWORD PTR [esi+eiz*8-0x70]
  4188fb:	pop    edx
  4188fc:	nop
  4188fd:	sub    BYTE PTR ds:0x69fd6b64,bl
  418903:	daa    
  418904:	jb     0x4188c9
  418906:	xlat   BYTE PTR ds:[ebx]
  418907:	mul    DWORD PTR [ebp-0x3889691d]
  41890d:	push   0xb60601c9
  418912:	add    cl,bh
  418914:	jbe    0x4188d5
  418916:	xchg   DWORD PTR [ecx],ebx
  418918:	sub    DWORD PTR [esi+ebp*2+0x37],ecx
  41891c:	ins    DWORD PTR es:[edi],dx
  41891d:	and    ch,BYTE PTR [edx]
  41891f:	shl    esp,cl
  418921:	mov    esi,DWORD PTR [ebp+0xb]
  418924:	xor    eax,0x36202b03
  418929:	aad    0xa2
  41892b:	(bad)  
  41892d:	lods   eax,DWORD PTR ds:[esi]
  41892e:	jg     0x418900
  418930:	xchg   edi,eax
  418931:	cmp    ebx,DWORD PTR [eax]
  418933:	daa    
  418934:	push   es
  418935:	fiadd  DWORD PTR [esi+0x3b3deb36]
  41893b:	and    eax,0x2d3e90ef
  418940:	xchg   ebx,eax
  418941:	imul   BYTE PTR [ebx]
  418943:	dec    edi
  418944:	pop    ebx
  418945:	rol    DWORD PTR [esi+0xf],0xf2
  418949:	imul   esi,DWORD PTR [edi+0x9],0xf30e99b
  418950:	pop    ebp
  418951:	mov    cl,0xde
  418953:	push   ecx
  418954:	lods   eax,DWORD PTR ds:[esi]
  418955:	xchg   edx,eax
  418956:	mov    bl,0xd9
  418958:	int    0x73
  41895a:	push   eax
  41895b:	mov    ebx,0xd6d7addc
  418960:	xchg   bh,cl
  418962:	outs   dx,DWORD PTR ds:[esi]
  418963:	shl    DWORD PTR [ecx-0x2da5ca7d],1
  418969:	in     eax,dx
  41896a:	xchg   ecx,eax
  41896b:	add    eax,0xe124e40
  418970:	xor    BYTE PTR [ebx],bh
  418972:	dec    edx
  418973:	mov    esp,0xb59d33ec
  418978:	cmp    al,0x5a
  41897a:	add    cl,bh
  41897c:	inc    ecx
  41897d:	leave  
  41897e:	push   cs
  41897f:	inc    ebp
  418980:	mov    ah,0x16
  418982:	pop    ss
  418983:	mov    al,ds:0xa80ad0
  418988:	or     eax,0x6d633606
  41898d:	mov    ecx,0xf898c170
  418992:	pop    edx
  418993:	inc    edx
  418994:	inc    ecx
  418995:	into   
  418996:	scas   al,BYTE PTR es:[edi]
  418997:	mov    ch,0xec
  418999:	pop    ecx
  41899a:	sub    esp,DWORD PTR [edi]
  41899c:	or     eax,0x43fbf6b4
  4189a1:	dec    ecx
  4189a2:	sbb    BYTE PTR ds:0x9e481875,0xf0
  4189a9:	xchg   ebx,eax
  4189aa:	mov    al,ds:0x79600529
  4189af:	push   0x26aa0469
  4189b4:	and    BYTE PTR [esi+edi*2+0x14],dl
  4189b8:	adc    eax,0x6b11e3f6
  4189bd:	mov    WORD PTR [edi],es
  4189bf:	inc    BYTE PTR [ecx+0xe]
  4189c2:	repz jb 0x4189b3
  4189c5:	adc    esi,DWORD PTR [ebx-0x698aa2f4]
  4189cb:	repnz loope 0x418976
  4189ce:	adc    edi,ebp
  4189d0:	int3   
  4189d1:	mov    bl,0x70
  4189d3:	fisubr DWORD PTR [eax+0x17]
  4189d6:	arpl   WORD PTR [ecx-0x76d88dd8],bp
  4189dc:	inc    ebp
  4189dd:	adc    BYTE PTR [ebp-0x3b37ea52],bh
  4189e3:	and    edx,DWORD PTR [edi+0x51]
  4189e6:	ror    DWORD PTR [edi+0x1],cl
  4189e9:	jno    0x4189f9
  4189eb:	fadd   QWORD PTR [esi]
  4189ed:	mov    esi,0x8f9b3c07
  4189f2:	hlt    
  4189f3:	scas   al,BYTE PTR es:[edi]
  4189f4:	rcr    ebx,cl
  4189f6:	repnz push esp
  4189f8:	mov    dh,0x2a
  4189fa:	pop    eax
  4189fb:	jl     0x4189ce
  4189fd:	fdivr  DWORD PTR [edi+0x63]
  418a00:	pop    edi
  418a01:	imul   ebx,DWORD PTR [ecx-0x596a817],0x16fef475
  418a0b:	je     0x418a23
  418a0d:	lods   eax,DWORD PTR ds:[esi]
  418a0e:	dec    ebp
  418a0f:	xchg   ecx,eax
  418a10:	pop    ebp
  418a11:	out    dx,eax
  418a12:	push   eax
  418a13:	out    0x95,al
  418a15:	adc    BYTE PTR [ebx],ah
  418a17:	shl    BYTE PTR [eax],cl
  418a19:	jae    0x4189f5
  418a1b:	lods   eax,DWORD PTR ds:[esi]
  418a1c:	mov    ch,BYTE PTR [ebx]
  418a1e:	ins    DWORD PTR es:[edi],dx
  418a1f:	push   edi
  418a20:	in     eax,0xfc
  418a22:	sar    DWORD PTR [ebp-0x74],cl
  418a25:	sti    
  418a26:	sub    BYTE PTR [esi],bl
  418a28:	into   
  418a29:	sbb    ch,ch
  418a2b:	ins    DWORD PTR es:[edi],dx
  418a2c:	imul   eax,eax,0xc5f2e85f
  418a32:	mov    ebx,0xd42c848c
  418a37:	push   eax
  418a38:	test   cl,al
  418a3a:	dec    edi
  418a3b:	mov    ebp,DWORD PTR [ecx]
  418a3d:	pop    edi
  418a3e:	mov    edi,0x9461b336
  418a43:	hlt    
  418a44:	adc    al,0x45
  418a46:	ror    DWORD PTR [edi],0xe7
  418a49:	push   0x3609d654
  418a4e:	mov    esp,0x93da7575
  418a53:	jnp    0x418a4a
  418a55:	sar    bl,1
  418a57:	push   ebx
  418a58:	xchg   esp,eax
  418a59:	dec    esp
  418a5a:	loop   0x418a5d
  418a5c:	ss sahf 
  418a5e:	int3   
  418a5f:	xor    eax,DWORD PTR [ecx-0x4214eafc]
  418a65:	arpl   WORD PTR [ebx+0x1dfbb19d],si
  418a6b:	daa    
  418a6c:	mov    al,0x68
  418a6e:	dec    eax
  418a6f:	lds    esp,FWORD PTR [ebp+0x26]
  418a72:	lods   al,BYTE PTR ds:[esi]
  418a73:	call   0x7d7eb4b7
  418a78:	fidivr DWORD PTR [ebx+0x10]
  418a7b:	pop    edi
  418a7c:	pop    ebp
  418a7d:	or     esp,esp
  418a7f:	in     eax,dx
  418a80:	popf   
  418a81:	cmp    eax,ebx
  418a83:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  418a85:	fist   DWORD PTR [edx+0x5e5c69c6]
  418a8b:	fs push ebx
  418a8d:	push   esi
  418a8e:	jne    0x418ad5
  418a90:	pop    eax
  418a91:	or     dh,cl
  418a93:	inc    esi
  418a94:	mov    DWORD PTR [ebp+0x2cf51226],ebp
  418a9a:	mov    eax,0x6a53ad5f
  418a9f:	xchg   ebp,eax
  418aa0:	mov    DWORD PTR [edx+0x5e],esi
  418aa3:	rcl    BYTE PTR [eax-0x40],1
  418aa6:	xchg   edx,eax
  418aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa8:	leave  
  418aa9:	stos   DWORD PTR es:[edi],eax
  418aaa:	or     eax,esp
  418aac:	mov    ?,ecx
  418aae:	jbe    0x418aed
  418ab0:	sti    
  418ab1:	jo     0x418ac2
  418ab3:	data16 (bad) 
  418ab5:	(bad)  
  418ab6:	arpl   WORD PTR ds:0x1d64bde7,ax
  418abc:	and    esp,esi
  418abe:	dec    edi
  418abf:	fbld   TBYTE PTR [ebp+0x151b125b]
  418ac5:	push   edx
  418ac6:	loope  0x418a93
  418ac8:	cmc    
  418ac9:	xchg   DWORD PTR [esi],ebp
  418acb:	lahf   
  418acc:	int3   
  418acd:	and    eax,0x7f578f4
  418ad2:	retf   0x6cc2
  418ad5:	popa   
  418ad6:	jmp    0x418b37
  418ad8:	cmp    eax,0x59291057
  418add:	add    dl,ah
  418adf:	rcr    DWORD PTR [edi+eiz*2+0x62],1
  418ae3:	jle    0x418ade
  418ae5:	sbb    ebx,DWORD PTR [esp+ebp*4-0x1b]
  418ae9:	aad    0x17
  418aeb:	sahf   
  418aec:	nop
  418aed:	add    eax,DWORD PTR [eax]
  418aef:	shr    cl,cl
  418af1:	les    edi,FWORD PTR [edx-0x54fe6b32]
  418af7:	aad    0xf7
  418af9:	cld    
  418afa:	out    dx,al
  418afb:	push   0x87eab58e
  418b00:	or     DWORD PTR [eax+0x33],edx
  418b03:	retf   
  418b04:	gs mov dh,0xa6
  418b07:	jno    0x418b30
  418b09:	outs   dx,BYTE PTR ds:[esi]
  418b0a:	cmp    dl,ch
  418b0c:	sub    eax,0x21860260
  418b11:	mov    ebp,0x39908111
  418b16:	mov    edi,0xdb4d9b54
  418b1b:	mov    al,ds:0x89c71e75
  418b20:	xchg   edi,eax
  418b21:	xor    al,0xeb
  418b23:	sub    al,BYTE PTR [ecx+0x6e]
  418b26:	cmp    esp,DWORD PTR [ecx+0x61]
  418b29:	js     0x418af1
  418b2b:	push   eax
  418b2c:	fs jo  0x418b43
  418b2f:	test   eax,0xe27cfa77
  418b34:	sub    eax,0x7118c34d
  418b39:	sub    eax,0xc5a707e
  418b3e:	stos   BYTE PTR es:[edi],al
  418b3f:	fnstenv [ecx+0x6a]
  418b42:	es jg  0x418baa
  418b45:	in     eax,dx
  418b46:	xor    DWORD PTR [edx-0x576955ed],0x45
  418b4d:	xchg   BYTE PTR [ebx+0x7e],bh
  418b50:	push   0x5d05c07f
  418b55:	inc    edx
  418b56:	loope  0x418b4f
  418b58:	popf   
  418b59:	xlat   BYTE PTR ds:[ebx]
  418b5a:	ret    
  418b5b:	fcmovnbe st,st(5)
  418b5d:	outs   dx,DWORD PTR ds:[esi]
  418b5e:	push   cs
  418b5f:	into   
  418b60:	fcmovb st,st(6)
  418b62:	iret   
  418b63:	and    al,0xe1
  418b65:	add    ch,BYTE PTR [ebp-0x38]
  418b68:	lds    esp,FWORD PTR [edi+0x12]
  418b6b:	sub    ecx,ecx
  418b6d:	or     BYTE PTR [edx],ch
  418b6f:	ror    edx,cl
  418b71:	popf   
  418b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b73:	push   edi
  418b74:	xchg   esp,eax
  418b75:	psrad  mm2,QWORD PTR [ebx-0x2]
  418b79:	inc    ecx
  418b7a:	add    al,0x36
  418b7c:	stos   BYTE PTR es:[edi],al
  418b7d:	mul    bl
  418b7f:	and    DWORD PTR [edx-0x2d],esi
  418b82:	test   al,0xbe
  418b84:	pop    ss
  418b85:	hlt    
  418b86:	jmp    0xf5d273b1
  418b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b8c:	retf   
  418b8d:	cwde   
  418b8e:	cmp    ecx,esi
  418b90:	or     eax,0x59056ade
  418b95:	lds    ebp,FWORD PTR [ebx-0x5d14cfad]
  418b9b:	pop    ebx
  418b9c:	stc    
  418b9d:	(bad)  
  418b9e:	(bad)  
  418b9f:	mov    esi,0x713e3782
  418ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba5:	mov    ecx,0x33d24d24
  418baa:	jmp    0x2b150f00
  418baf:	jecxz  0x418b53
  418bb1:	jne    0x418b86
  418bb3:	stc    
  418bb4:	out    0xf4,al
  418bb6:	and    eax,0x49ba325c
  418bbb:	cmp    DWORD PTR [ebp-0x1ec389b5],ebx
  418bc1:	push   esp
  418bc2:	ret    0x73c0
  418bc5:	or     eax,0x2c37086a
  418bca:	nop
  418bcb:	out    0x1e,eax
  418bcd:	and    dl,bl
  418bcf:	and    al,0x9b
  418bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd2:	and    BYTE PTR [edi+eiz*1],dl
  418bd5:	(bad)  
  418bd6:	dec    ebp
  418bd7:	mov    esp,0x3e2a8245
  418bdc:	outs   dx,BYTE PTR ds:[esi]
  418bdd:	mov    cl,0xff
  418bdf:	jmp    0x744c:0xc440b758
  418be6:	adc    BYTE PTR ds:0x244db8f3,bh
  418bec:	enter  0xc212,0x42
  418bf0:	xor    dl,0x19
  418bf3:	fstp   DWORD PTR [edx+ecx*8+0x69]
  418bf7:	enter  0xf18,0xc2
  418bfb:	sub    DWORD PTR [eax-0x3e],esp
  418bfe:	sbb    dl,BYTE PTR [eax]
  418c00:	mov    ah,cl
  418c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c03:	psrlq  mm3,mm6
  418c06:	cdq    
  418c07:	stos   BYTE PTR es:[edi],al
  418c08:	sbb    BYTE PTR [eax-0x20],0x1f
  418c0c:	sub    dh,cl
  418c0e:	adc    ebp,DWORD PTR [edi+0x54]
  418c11:	cwde   
  418c12:	imul   eax,eax,0x315cd058
  418c18:	shr    DWORD PTR [esi+0x3ec57215],1
  418c1e:	mov    ch,0x3b
  418c20:	push   eax
  418c21:	inc    edi
  418c22:	mov    ebp,0xf0661f12
  418c27:	jae    0x418bd8
  418c29:	mov    bl,0x32
  418c2b:	xor    dl,BYTE PTR [esi]
  418c2d:	add    edx,ebp
  418c2f:	add    BYTE PTR [ecx-0x23f711ab],ah
  418c35:	mov    dh,0xb7
  418c37:	in     al,dx
  418c38:	fld    QWORD PTR [ebx+0x3c]
  418c3b:	rcl    dl,1
  418c3d:	scas   al,BYTE PTR es:[edi]
  418c3e:	das    
  418c3f:	or     eax,0xce96c398
  418c44:	dec    edi
  418c45:	mov    WORD PTR [esi-0x30],es
  418c48:	rcl    DWORD PTR [edi+0x4d58c7e5],1
  418c4e:	inc    edi
  418c4f:	sbb    DWORD PTR [ebx+edi*2-0x5075e47e],ebp
  418c56:	imul   ecx,DWORD PTR [ebx-0x6358c76b],0xc9a1b94b
  418c60:	sub    dl,BYTE PTR [ebx+0xa53a052]
  418c66:	xchg   DWORD PTR [edi],eax
  418c68:	ds ja  0x418bf2
  418c6b:	stc    
  418c6c:	pop    ebp
  418c6d:	cmp    eax,DWORD PTR [edi+ecx*1-0x48]
  418c71:	int3   
  418c72:	repz jne 0x418c0a
  418c75:	mov    DWORD PTR [edi+0x56],ebx
  418c78:	and    ah,BYTE PTR [esi]
  418c7a:	or     al,0x80
  418c7c:	(bad)  
  418c7d:	aad    0x95
  418c7f:	imul   esi,ebx,0x223b3faa
  418c85:	repz and DWORD PTR [edi],0xffffffda
  418c89:	push   esi
  418c8a:	mov    BYTE PTR fs:[eax-0x4b],bh
  418c8e:	pop    edi
  418c8f:	adc    eax,0xe21f4370
  418c94:	and    ch,BYTE PTR [esp+esi*4+0x4da7cfd3]
  418c9b:	shl    DWORD PTR [ecx],0x46
  418c9e:	xchg   esp,eax
  418c9f:	jg     0x418c99
  418ca1:	lock mov DWORD PTR [esi+0x32],ebx
  418ca5:	push   ebp
  418ca6:	mov    bh,0x5d
  418ca8:	inc    esp
  418ca9:	add    dh,0x5e
  418cac:	out    dx,al
  418cad:	adc    esp,0xffffffd6
  418cb0:	or     eax,0xb3dab95c
  418cb5:	cmp    BYTE PTR [eax],cl
  418cb7:	mov    ecx,edx
  418cb9:	out    dx,al
  418cba:	cmp    BYTE PTR [ecx+0x75],ch
  418cbd:	(bad)  [ecx-0x6c41664e]
  418cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc4:	in     al,0x2b
  418cc6:	pop    ebp
  418cc7:	jae    0x418c87
  418cc9:	mov    esi,DWORD PTR [ebp+0x5409ca3b]
  418ccf:	xchg   ebx,eax
  418cd0:	mov    WORD PTR [ebp-0x58b4f5eb],gs
  418cd6:	ds clc 
  418cd8:	push   0xffffffcd
  418cda:	faddp  st(5),st
  418cdc:	xor    BYTE PTR [eax-0x4d38b425],0xe0
  418ce3:	sub    ebx,esi
  418ce5:	stc    
  418ce6:	pop    ss
  418ce7:	push   ecx
  418ce8:	icebp  
  418ce9:	cmp    BYTE PTR [ebx],bh
  418ceb:	pop    ebx
  418cec:	ja     0x418cb4
  418cee:	arpl   WORD PTR [ebx],dx
  418cf0:	jmp    0x418d47
  418cf2:	mov    dl,0x17
  418cf4:	mov    ebx,0xd19abd18
  418cf9:	add    BYTE PTR ds:0xd2e1618b,al
  418cff:	push   ebp
  418d00:	popf   
  418d01:	pop    ebp
  418d02:	jmp    0xead3:0x6480e7a9
  418d09:	int    0x52
  418d0b:	mov    ecx,0x96f5853c
  418d10:	mov    esp,0xa7354107
  418d15:	cmp    al,0x28
  418d17:	jg     0x418cd8
  418d19:	sbb    bl,cl
  418d1b:	push   esi
  418d1c:	push   ds
  418d1d:	xor    ah,BYTE PTR [edx+0x12]
  418d20:	loope  0x418d78
  418d22:	loope  0x418d78
  418d24:	in     eax,0xf7
  418d26:	lds    ecx,FWORD PTR [esi-0x43]
  418d29:	out    dx,eax
  418d2a:	cld    
  418d2b:	mov    ch,0xb0
  418d2d:	jo     0x418cb1
  418d2f:	push   0x892bab11
  418d34:	dec    edi
  418d35:	jae    0x418d01
  418d37:	xor    eax,0xb623b2c
  418d3c:	mov    edi,0x44d5287a
  418d41:	test   bx,bp
  418d44:	pop    ecx
  418d45:	imul   edi,DWORD PTR [edx],0x6
  418d48:	pusha  
  418d49:	xor    DWORD PTR [ecx+0x39],esi
  418d4c:	loop   0x418d95
  418d4e:	mov    al,0x37
  418d50:	and    al,0x3b
  418d52:	or     al,0xfa
  418d54:	jle    0x418dc7
  418d56:	pusha  
  418d57:	aad    0xc
  418d59:	and    bh,BYTE PTR [edx+0x425c4716]
  418d5f:	stos   DWORD PTR es:[edi],eax
  418d60:	dec    edi
  418d61:	cmc    
  418d62:	or     al,0xad
  418d64:	out    0x2e,al
  418d66:	lods   al,BYTE PTR ds:[esi]
  418d67:	data16 adc al,0x5
  418d6a:	lods   eax,DWORD PTR ds:[esi]
  418d6b:	xchg   edx,eax
  418d6c:	mov    ebp,0x9043150f
  418d71:	mov    ds:0x5b27cee1,al
  418d76:	inc    esp
  418d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d78:	fsubr  DWORD PTR [eax-0x45]
  418d7b:	push   0x1883d206
  418d80:	and    eax,0x8853fde0
  418d85:	aam    0x9f
  418d87:	data16 mov ds:0xe89015a,al
  418d8d:	call   0xd8bcdc6f
  418d92:	xor    DWORD PTR [ebx+esi*4-0x1cde0a54],ecx
  418d99:	gs jns 0x418dd2
  418d9c:	and    edx,DWORD PTR [edx]
  418d9e:	mov    ds:0x7fad3d74,eax
  418da3:	test   ecx,0xe1b86bd5
  418da9:	inc    ebx
  418daa:	jp     0x418dac
  418dac:	mov    BYTE PTR [ebp-0x73e5b38c],0xc
  418db3:	outs   dx,DWORD PTR ds:[esi]
  418db4:	outs   dx,DWORD PTR ds:[esi]
  418db5:	out    0x21,eax
  418db7:	mov    al,ds:0x9d3301c3
  418dbc:	pop    ecx
  418dbd:	dec    edx
  418dbe:	mov    ebp,0x47fa077e
  418dc3:	dec    edi
  418dc4:	out    0x4c,eax
  418dc6:	jno    0x418db4
  418dc8:	inc    ebp
  418dc9:	xchg   DWORD PTR [eax+0x49ec9b0],ecx
  418dcf:	ret    0xa671
  418dd2:	xchg   esp,eax
  418dd3:	mov    bl,0x6f
  418dd5:	cdq    
  418dd6:	pusha  
  418dd7:	enter  0x46e8,0x22
  418ddb:	loop   0x418dd0
  418ddd:	jo     0x418dd9
  418ddf:	fcom   DWORD PTR [edi+0x1fea1e3e]
  418de5:	pop    edx
  418de6:	fiadd  WORD PTR [edx]
  418de8:	das    
  418de9:	and    DWORD PTR [ecx],edi
  418deb:	(bad)  
  418dec:	mov    ebx,0xc80c3a36
  418df1:	push   ds
  418df2:	or     eax,0x665c5c4
  418df7:	inc    esp
  418df8:	pop    ds
  418df9:	xchg   esp,eax
  418dfa:	retf   
  418dfb:	ss inc esp
  418dfd:	nop
  418dfe:	in     al,dx
  418dff:	mov    ch,ch
  418e01:	scas   eax,DWORD PTR es:[edi]
  418e02:	ror    BYTE PTR [esi+esi*8-0x5b1a6df3],1
  418e09:	test   BYTE PTR [edx-0x795160ff],ch
  418e0f:	cmp    eax,0x7293ccdc
  418e14:	push   ecx
  418e15:	push   edi
  418e16:	mov    cl,0x4
  418e18:	push   DWORD PTR [eax]
  418e1a:	xor    al,dl
  418e1c:	sub    edi,DWORD PTR [ebx]
  418e1e:	mov    eax,0x443b3afc
  418e23:	and    cl,dl
  418e25:	or     BYTE PTR [eax+0xc],ch
  418e28:	add    al,0xfa
  418e2a:	mov    al,0xa5
  418e2c:	test   eax,0xfd98982f
  418e31:	clc    
  418e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e33:	dec    ebp
  418e34:	rcl    ecx,cl
  418e36:	mov    eax,0xfdcfd79d
  418e3b:	cs sbb al,0x14
  418e3e:	and    BYTE PTR [edi-0x794338a4],dh
  418e44:	or     ch,dl
  418e46:	fst    DWORD PTR [edx+esi*8]
  418e49:	adc    ebx,0xe3a796a7
  418e4f:	jmp    0x9917:0x34024687
  418e56:	xchg   ebx,eax
  418e57:	inc    eax
  418e58:	scas   eax,DWORD PTR es:[edi]
  418e59:	nop
  418e5a:	jb     0x418e22
  418e5c:	dec    edx
  418e5d:	xor    ecx,esp
  418e5f:	adc    dl,BYTE PTR [ebp-0x24]
  418e62:	fdiv   DWORD PTR [esi]
  418e64:	call   0x6cf0a924
  418e69:	adc    bl,BYTE PTR [ebp-0x38]
  418e6c:	sahf   
  418e6d:	fstp   DWORD PTR [edx]
  418e6f:	shl    DWORD PTR [edi-0x3a],1
  418e72:	in     eax,dx
  418e73:	or     al,0xb
  418e75:	mov    ah,0x37
  418e77:	aaa    
  418e78:	int    0x43
  418e7a:	inc    ebp
  418e7b:	out    0x5e,eax
  418e7d:	add    DWORD PTR [esi+0x7e],ecx
  418e80:	mov    ?,ecx
  418e82:	xchg   ebx,eax
  418e83:	xlat   BYTE PTR ds:[ebx]
  418e84:	jg     0x418e7b
  418e86:	jae    0x418eba
  418e88:	imul   ah
  418e8a:	jmp    0x418e52
  418e8c:	push   edi
  418e8d:	push   ebp
  418e8e:	dec    esi
  418e8f:	rcl    BYTE PTR [eax+0x30],1
  418e92:	lock push edi
  418e94:	push   es
  418e95:	aam    0x75
  418e97:	stos   BYTE PTR es:[edi],al
  418e98:	pushf  
  418e99:	sub    edx,DWORD PTR [esp+ecx*1+0x3b]
  418e9d:	and    BYTE PTR [eax+0x58989c85],al
  418ea3:	fwait
  418ea4:	ins    DWORD PTR es:[edi],dx
  418ea5:	or     eax,0x6d167b8
  418eaa:	xor    eax,0x2bdf479d
  418eaf:	dec    esp
  418eb0:	ror    BYTE PTR ds:0xffcc3957,cl
  418eb6:	or     ebp,DWORD PTR ds:0x40250c2f
  418ebc:	stos   BYTE PTR es:[edi],al
  418ebd:	or     bl,dl
  418ebf:	dec    ebp
  418ec0:	mov    al,0xc3
  418ec2:	cs mov ecx,edi
  418ec5:	pop    edi
  418ec6:	or     edx,edi
  418ec8:	adc    eax,0xfaccd19e
  418ecd:	mov    dl,BYTE PTR [ebx-0x3c]
  418ed0:	cwde   
  418ed1:	out    dx,eax
  418ed2:	pop    esp
  418ed3:	mov    esi,0xb635de0d
  418ed8:	js     0x418f31
  418eda:	rcr    DWORD PTR [ebp-0x14],1
  418edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ede:	iret   
  418edf:	call   FWORD PTR [ebp+0x4e]
  418ee2:	daa    
  418ee3:	addr16 ja 0x418f5b
  418ee6:	ins    DWORD PTR es:[edi],dx
  418ee7:	push   ecx
  418ee8:	sahf   
  418ee9:	push   eax
  418eea:	adc    al,0x2e
  418eec:	out    0x6b,al
  418eee:	cs ins BYTE PTR es:[edi],dx
  418ef0:	sbb    ah,BYTE PTR [ecx]
  418ef2:	add    BYTE PTR [esi+0x22],dl
  418ef5:	xchg   ebp,eax
  418ef6:	or     al,dl
  418ef8:	loop   0x418efa
  418efa:	aam    0x1
  418efc:	arpl   WORD PTR [ebx-0x3b0373e9],bp
  418f02:	pusha  
  418f03:	aad    0xc7
  418f05:	mov    ecx,0xd85c69c1
  418f0a:	and    DWORD PTR [eax-0x70],esi
  418f0d:	daa    
  418f0e:	lock jle 0x418ec2
  418f11:	inc    esi
  418f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f13:	out    0x96,eax
  418f15:	add    al,0xc8
  418f17:	mov    ecx,DWORD PTR [edi-0x3b]
  418f1a:	jg     0x418ed0
  418f1c:	scas   eax,DWORD PTR es:[edi]
  418f1d:	fs xchg edx,eax
  418f1f:	imul   edi,DWORD PTR ds:0xb6306682,0x9ba4b114
  418f29:	mov    bl,0xc8
  418f2b:	mov    ds:0x14a69c1d,eax
  418f30:	outs   dx,DWORD PTR ds:[esi]
  418f31:	pop    ds
  418f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f33:	push   edx
  418f34:	pop    ecx
  418f35:	and    DWORD PTR [ecx+0x4c],edx
  418f38:	xchg   esp,eax
  418f39:	add    al,0x86
  418f3b:	add    bl,dh
  418f3d:	scas   al,BYTE PTR es:[edi]
  418f3e:	addr16 push gs
  418f41:	popa   
  418f42:	push   ebp
  418f43:	adc    BYTE PTR [eax-0x8],al
  418f46:	adc    BYTE PTR [ebp+0x2f],dl
  418f49:	pop    es
  418f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f4b:	pushf  
  418f4c:	add    ebp,ebp
  418f4e:	adc    al,0x95
  418f50:	push   esp
  418f51:	push   0x1a475dc3
  418f56:	ins    BYTE PTR es:[edi],dx
  418f57:	imul   eax,DWORD PTR [di-0x8bf],0x71991d68
  418f60:	dec    ecx
  418f61:	pop    ss
  418f62:	mov    esp,0xe543942d
  418f67:	mov    eax,0xe4c75b09
  418f6c:	test   al,0xde
  418f6e:	call   0xc63d:0x5b5e959e
  418f75:	inc    edi
  418f76:	mov    edi,0x7da27d62
  418f7b:	adc    eax,0xe46ab5fc
  418f80:	adc    al,dl
  418f82:	pop    ecx
  418f83:	mov    cl,0x60
  418f85:	jmp    0x751:0x3e57168c
  418f8c:	push   ds
  418f8d:	mov    es,WORD PTR [ebp+0x3071b32b]
  418f93:	jge    0x418fb9
  418f95:	loopne 0x418f4f
  418f97:	idiv   ch
  418f99:	mov    eax,ds:0xa25c3ec
  418f9e:	lahf   
  418f9f:	adc    eax,0x2e9b35d4
  418fa4:	int3   
  418fa5:	add    esi,DWORD PTR [esi-0x6e]
  418fa8:	jp     0x419010
  418faa:	inc    ebp
  418fab:	sar    edx,0xe2
  418fae:	mov    ah,0xa4
  418fb0:	xor    al,0xf3
  418fb2:	mov    eax,0x508a9c0b
  418fb7:	je     0x419020
  418fb9:	jl     0x418fc9
  418fbb:	out    0xa5,eax
  418fbd:	push   ss
  418fbe:	sbb    al,0x63
  418fc0:	mov    ch,0x85
  418fc2:	lds    edi,FWORD PTR ds:0x55eab382
  418fc8:	ins    DWORD PTR es:[edi],dx
  418fc9:	leave  
  418fca:	jg     0x418fb3
  418fcc:	setbe  BYTE PTR [ebx-0x22]
  418fd0:	mov    ds:0x1144de31,eax
  418fd5:	or     al,al
  418fd7:	xor    BYTE PTR [eax+0x737c3f24],ah
  418fdd:	xchg   ecx,eax
  418fde:	fbld   TBYTE PTR [ebx+0x2daafa3]
  418fe4:	dec    ebp
  418fe5:	pop    ds
  418fe6:	and    ecx,edx
  418fe8:	jbe    0x41904c
  418fea:	xor    bh,bh
  418fec:	idiv   BYTE PTR [edx-0x30ec42e4]
  418ff2:	(bad)  
  418ff3:	mov    ah,0xdd
  418ff5:	jle    0x418ff8
  418ff7:	dec    edi
  418ff8:	and    esp,eax
  418ffa:	xchg   ecx,eax
  418ffb:	aam    0xf
  418ffd:	test   BYTE PTR [esi-0x74],0xe9
  419001:	push   edi
  419002:	rcl    DWORD PTR [ebx+0x2a],1
  419005:	les    esp,FWORD PTR [edi]
  419007:	mov    cl,BYTE PTR [ecx+0x527a8e84]
  41900d:	xor    DWORD PTR [eax+0x49],esi
  419010:	std    
  419011:	xchg   esp,eax
  419012:	mov    bl,0xd9
  419014:	mov    edi,0xb023888d
  419019:	ss test eax,0x94109bee
  41901f:	and    bl,BYTE PTR [ebp-0x321105b9]
  419025:	(bad)  
  419027:	sbb    ecx,ebp
  419029:	adc    DWORD PTR [ebx],0x7bc85507
  41902f:	xor    eax,0x85e156d2
  419034:	add    bh,BYTE PTR [ebp+0x6576de31]
  41903a:	pop    edx
  41903b:	and    eax,0x3d2d0384
  419040:	fisttp DWORD PTR [edx*1+0x45d2e3c5]
  419047:	daa    
  419048:	or     al,0xdf
  41904a:	lock mov ah,BYTE PTR [esi-0x675b95ae]
  419051:	dec    esp
  419052:	int3   
  419053:	dec    ecx
  419054:	mov    esi,0x9f345db2
  419059:	fld    DWORD PTR [edi+0x77b01f94]
  41905f:	inc    ebx
  419060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419061:	icebp  
  419062:	xlat   BYTE PTR ds:[ebx]
  419063:	sar    BYTE PTR [ebp-0x2de58dc1],cl
  419069:	pop    ds
  41906a:	das    
  41906b:	fs call 0xe63c:0xa260d8d8
  419073:	cmc    
  419074:	mov    ebp,0xe83e2cd7
  419079:	jl     0x4190ea
  41907b:	std    
  41907c:	cmc    
  41907d:	cmp    bh,ch
  41907f:	ins    BYTE PTR es:[edi],dx
  419080:	xchg   BYTE PTR [esi+0x11],bl
  419083:	nop
  419084:	lods   eax,DWORD PTR ds:[esi]
  419085:	push   ecx
  419086:	pop    ecx
  419087:	mov    dl,BYTE PTR [edx+0x54]
  41908a:	fadd   st(3),st
  41908c:	clc    
  41908d:	sbb    BYTE PTR [eax],al
  41908f:	jg     0x419073
  419091:	stos   BYTE PTR es:[edi],al
  419092:	mov    ah,0x2b
  419094:	ja     0x4190c4
  419096:	ror    BYTE PTR [eax],0x1b
  419099:	mov    ecx,0xeeba899e
  41909e:	bound  edi,QWORD PTR [ebx]
  4190a0:	pop    ebp
  4190a1:	fnsave [edi]
  4190a3:	inc    edi
  4190a4:	or     BYTE PTR [eax-0x34],dl
  4190a7:	es push eax
  4190a9:	mov    esp,0x2fea1fbd
  4190ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190af:	cmp    ecx,DWORD PTR [eax]
  4190b1:	mov    ah,0xd9
  4190b3:	fdivr  st,st(0)
  4190b5:	sub    DWORD PTR [edi-0x18aebadb],0x25
  4190bc:	mov    ecx,0xf049550d
  4190c1:	jg     0x419084
  4190c3:	push   ds
  4190c4:	jge    0x419106
  4190c6:	pop    eax
  4190c7:	add    BYTE PTR [ebp-0x7be663b5],dl
  4190cd:	or     edx,eax
  4190cf:	sub    ebx,DWORD PTR [esi]
  4190d1:	bound  ecx,QWORD PTR [ebx+0x33]
  4190d4:	aam    0x5d
  4190d6:	sub    BYTE PTR [eax+ebx*2+0x24b9ebc],0xd0
  4190de:	ret    
  4190df:	imul   DWORD PTR [edi]
  4190e1:	fwait
  4190e2:	mov    eax,ds:0x8144ded4
  4190e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e8:	jae    0x41907d
  4190ea:	test   eax,0x88830db
  4190ef:	mov    dl,0x3b
  4190f1:	inc    ebx
  4190f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f3:	(bad)  
  4190f5:	fiadd  DWORD PTR [edi-0x4d]
  4190f8:	pushf  
  4190f9:	fcomp  DWORD PTR [ebx+0x527c7b5b]
  4190ff:	jle    0x41913b
  419101:	lods   al,BYTE PTR ds:[esi]
  419102:	jmp    0x4190ca
  419104:	add    ch,0xa
  419107:	push   cs
  419108:	pop    es
  419109:	pushf  
  41910a:	jl     0x4190f2
  41910c:	push   ebx
  41910d:	jmp    0x41909e
  41910f:	sub    eax,0x6b6846a8
  419114:	into   
  419115:	mov    ch,0x5e
  419117:	sbb    al,al
  419119:	cmp    eax,0xc0cb1a65
  41911e:	mov    dh,0x3
  419120:	cli    
  419121:	add    DWORD PTR [esi+0x14be1dbf],ebp
  419127:	imul   ecx,DWORD PTR [ecx],0x18
  41912a:	dec    ebx
  41912b:	out    0x24,eax
  41912d:	jae    0x41916c
  41912f:	sub    esi,ebx
  419131:	(bad)  
  419132:	loop   0x41918f
  419134:	xlat   BYTE PTR ds:[ebx]
  419135:	sbb    BYTE PTR [esi+0x2e596d2e],0x24
  41913c:	shl    eax,1
  41913e:	and    BYTE PTR [esi-0x4b],dh
  419141:	mov    ds:0x13820455,eax
  419146:	push   ds
  419147:	leave  
  419148:	xlat   BYTE PTR ds:[ebx]
  419149:	lock es push cs
  41914c:	bound  ebp,QWORD PTR [edi]
  41914e:	push   ds
  41914f:	fist   DWORD PTR [ebx]
  419151:	lahf   
  419152:	adc    al,0x61
  419154:	ret    
  419155:	inc    ecx
  419156:	out    0x16,al
  419158:	dec    ebp
  419159:	shr    BYTE PTR [edx+esi*2-0x36],1
  41915d:	mov    dl,0xe6
  41915f:	sub    eax,0x43d798c6
  419164:	cmc    
  419165:	sbb    DWORD PTR [ecx],esp
  419167:	stos   DWORD PTR es:[edi],eax
  419168:	popa   
  419169:	pop    edi
  41916a:	sar    DWORD PTR [esp+esi*8-0x177ce830],0xe9
  419172:	sub    eax,0x1f466b64
  419177:	or     al,0xf6
  419179:	inc    eax
  41917a:	cmp    eax,0x7d8ece38
  41917f:	(bad)  
  419180:	in     eax,dx
  419181:	dec    eax
  419182:	test   al,0x82
  419184:	jmp    0x41915f
  419186:	dec    eax
  419187:	mov    ch,0xa2
  419189:	inc    eax
  41918a:	iret   
  41918b:	or     al,0x0
  41918d:	fmul   DWORD PTR [edi+0x14]
  419190:	cld    
  419191:	cmp    DWORD PTR [edx+0x62],edx
  419194:	mov    dh,0x7e
  419196:	loop   0x4191bb
  419198:	mov    ds:0xdd1d3b47,al
  41919d:	pop    edi
  41919e:	lock inc ebx
  4191a0:	add    eax,0x3f66ffa1
  4191a5:	xor    BYTE PTR [eax-0x18],0xc7
  4191a9:	aam    0x3c
  4191ab:	test   DWORD PTR [ecx+0x2751f4b6],0xcf75d0de
  4191b5:	xchg   esi,eax
  4191b6:	ficomp DWORD PTR [ebx+edi*2-0x1a]
  4191ba:	push   es
  4191bb:	jnp    0x4191bc
  4191bd:	aas    
  4191be:	fmul   QWORD PTR [eax-0x64]
  4191c1:	jnp    0x419161
  4191c3:	sti    
  4191c4:	xchg   edi,eax
  4191c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c6:	push   edi
  4191c7:	mov    ebx,DWORD PTR [esp+ebx*8+0x69]
  4191cb:	out    dx,al
  4191cc:	adc    al,bh
  4191ce:	div    BYTE PTR [eax]
  4191d0:	mov    ds,WORD PTR [edi-0x4ba09fe3]
  4191d6:	xchg   ebp,eax
  4191d7:	cmp    al,0xec
  4191d9:	lahf   
  4191da:	pop    eax
  4191db:	push   ebp
  4191dc:	ret    0xb920
  4191df:	cmp    al,0xc4
  4191e1:	stos   BYTE PTR es:[edi],al
  4191e2:	retf   
  4191e3:	rcr    BYTE PTR [ebp+0x7c0486d1],cl
  4191e9:	inc    edx
  4191ea:	mov    bl,0xdf
  4191ec:	xchg   ebx,eax
  4191ed:	mov    BYTE PTR [eax+0x66],al
  4191f0:	(bad)  
  4191f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191f2:	arpl   bx,bp
  4191f4:	mov    al,0x4b
  4191f6:	es xchg ecx,eax
  4191f8:	je     0x4191fc
  4191fa:	sbb    DWORD PTR [esi-0x55a19c45],0x23
  419201:	arpl   sp,si
  419203:	inc    DWORD PTR [edi-0x3b]
  419206:	inc    edx
  419207:	in     al,dx
  419208:	adc    edi,eax
  41920a:	imul   eax,DWORD PTR [ebx-0x36e2aaa3],0xffffffdf
  419211:	outs   dx,BYTE PTR ds:[esi]
  419212:	lock cmp al,0xf5
  419215:	fisttp WORD PTR [ecx-0x3c37a521]
  41921b:	push   esi
  41921c:	sub    ebx,DWORD PTR [esi]
  41921e:	jbe    0x41924b
  419220:	jmp    0xdae2c322
  419225:	lds    edx,FWORD PTR [eax-0x16]
  419228:	or     eax,0x665e533e
  41922d:	test   DWORD PTR [ebx+0x46],0x11ce82b8
  419234:	int3   
  419235:	cwde   
  419236:	shr    BYTE PTR [esi-0xa],0x2
  41923a:	mov    al,0xee
  41923c:	pop    ss
  41923d:	xchg   ebx,eax
  41923e:	les    ecx,FWORD PTR [edi]
  419240:	gs arpl bx,bx
  419243:	pop    esi
  419244:	loope  0x4192be
  419246:	cmp    ebp,eax
  419248:	loop   0x4192c5
  41924a:	dec    ebp
  41924b:	les    edi,FWORD PTR [edi]
  41924d:	pop    ds
  41924e:	pop    esi
  41924f:	add    eax,0x5cb3e5b3
  419254:	gs push ds
  419256:	push   eax
  419257:	popa   
  419258:	or     BYTE PTR [esi],cl
  41925a:	pop    esi
  41925b:	jg     0x41924e
  41925d:	inc    ebp
  41925e:	or     eax,0xdfefc9fd
  419263:	fst    st(2)
  419265:	popf   
  419266:	inc    esi
  419267:	repnz fadd st(3),st
  41926a:	fld    QWORD PTR [ecx-0x4d6611f9]
  419270:	repnz adc BYTE PTR [eax+0x311eeaa9],ah
  419277:	cli    
  419278:	add    al,0x93
  41927a:	(bad)  
  41927b:	mov    WORD PTR [esi+0x342da690],?
  419281:	adc    al,0x25
  419283:	mov    edx,0xfe730e79
  419288:	les    ecx,FWORD PTR [ecx+0x271c7c0]
  41928e:	ins    BYTE PTR es:[edi],dx
  41928f:	xor    eax,DWORD PTR [ebx]
  419291:	xor    BYTE PTR [esi+0x8],bh
  419294:	ret    0xa86f
  419297:	iret   
  419298:	outs   dx,DWORD PTR ds:[esi]
  419299:	(bad)  
  41929a:	fnsave [edx]
  41929c:	mov    ecx,DWORD PTR [edi]
  41929e:	push   esi
  41929f:	rcr    DWORD PTR [eax-0x70],0xf
  4192a3:	or     al,al
  4192a5:	mov    ebx,0xe68ba618
  4192aa:	in     al,0x37
  4192ac:	ins    BYTE PTR es:[edi],dx
  4192ad:	sub    eax,0xfb7b8ed4
  4192b2:	mov    ebx,0xc6dfc975
  4192b7:	aad    0xc2
  4192b9:	xor    eax,0xdd7b17c6
  4192be:	mov    al,0xdd
  4192c0:	add    BYTE PTR [ebx],ah
  4192c2:	xor    eax,0xca0d9929
  4192c7:	stos   DWORD PTR es:[edi],eax
  4192c8:	loop   0x419284
  4192ca:	add    dh,BYTE PTR [edx+0x31807513]
  4192d0:	rcr    DWORD PTR [ecx-0xf33cf35],1
  4192d6:	adc    al,0xcc
  4192d8:	xchg   ebp,eax
  4192d9:	sahf   
  4192da:	loop   0x419323
  4192dc:	div    DWORD PTR [ebp+0x2f]
  4192df:	add    eax,0xab557bfc
  4192e4:	test   al,0x34
  4192e6:	sub    ch,0xa6
  4192e9:	fst    DWORD PTR [eax+0xfe17c75]
  4192ef:	add    esp,eax
  4192f1:	mov    ch,BYTE PTR [edi]
  4192f3:	adc    cl,al
  4192f5:	cmp    al,0x77
  4192f7:	push   ebx
  4192f8:	or     DWORD PTR [ebp-0x43],esi
  4192fb:	(bad)  
  4192fc:	ins    DWORD PTR es:[edi],dx
  4192fd:	(bad)  
  4192fe:	sub    ch,BYTE PTR [esi-0x11]
  419301:	mov    esp,0x1e4ee37f
  419306:	pop    ds
  419307:	stos   BYTE PTR es:[edi],al
  419308:	cdq    
  419309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41930a:	xchg   ecx,eax
  41930b:	test   al,0xc8
  41930d:	les    edx,FWORD PTR [edx]
  41930f:	dec    ebx
  419310:	(bad)  
  419311:	push   ebp
  419312:	repz shl cl,0x73
  419316:	test   al,0x40
  419318:	in     eax,0xea
  41931a:	add    BYTE PTR [edi-0x16],cl
  41931d:	lods   eax,DWORD PTR ds:[esi]
  41931e:	xor    eax,DWORD PTR [esi+ecx*8]
  419321:	ret    
  419322:	inc    ebp
  419323:	gs jno 0x41939c
  419326:	clc    
  419327:	pop    ds
  419328:	out    0xc8,eax
  41932a:	add    bl,dh
  41932c:	icebp  
  41932d:	mov    ah,0xc2
  41932f:	iret   
  419330:	xchg   dh,bl
  419332:	add    DWORD PTR [ebx-0x6f96e54f],0x7d9eee86
  41933c:	or     al,0x78
  41933e:	sub    DWORD PTR [edx-0x65],esi
  419341:	xor    eax,DWORD PTR [ecx]
  419343:	jnp    0x41932d
  419345:	mov    ah,BYTE PTR [edi]
  419347:	mov    al,ds:0xa38b6f2d
  41934c:	loop   0x4193b1
  41934e:	outs   dx,BYTE PTR ds:[esi]
  41934f:	lds    ebx,FWORD PTR [ecx]
  419351:	outs   dx,DWORD PTR ds:[esi]
  419352:	mov    esp,ebp
  419354:	das    
  419355:	or     al,0x88
  419357:	cwde   
  419358:	retf   0x8980
  41935b:	imul   edi,DWORD PTR [edi+0x2166ed0a],0x72
  419362:	(bad)  
  419363:	pusha  
  419364:	nop
  419365:	dec    edi
  419366:	out    dx,al
  419367:	and    DWORD PTR es:[esi-0x1a],ecx
  41936b:	adc    al,BYTE PTR [ebx+0x5f]
  41936e:	fstp   QWORD PTR [esi-0x9]
  419371:	pushf  
  419372:	sub    DWORD PTR [edi],esp
  419374:	mov    BYTE PTR [esi+0x59],bh
  419377:	or     DWORD PTR [edx],0xfffffff9
  41937a:	neg    ch
  41937c:	lahf   
  41937d:	cmp    DWORD PTR [edi+ebp*1+0x5d00ad4f],0x5e4c63ac
  419388:	js     0x4193ca
  41938a:	xchg   ecx,eax
  41938b:	sahf   
  41938c:	mov    al,ds:0xd4d09bc2
  419391:	out    dx,eax
  419392:	stos   DWORD PTR es:[edi],eax
  419393:	push   eax
  419394:	push   edi
  419395:	lea    esi,[ebx+0x18]
  419398:	sub    bh,0x2
  41939b:	mov    ebp,0xdbe74019
  4193a0:	fsub   st(5),st
  4193a2:	mov    BYTE PTR [edx-0x6d],dh
  4193a5:	dec    edi
  4193a6:	xor    al,0x25
  4193a8:	fcom   DWORD PTR [eax]
  4193aa:	pop    esi
  4193ab:	add    ch,bh
  4193ad:	push   ebx
  4193ae:	jg     0x4193e4
  4193b0:	mov    eax,0x6ec4a82d
  4193b5:	mov    eax,0x58deba41
  4193ba:	arpl   WORD PTR [ebp+0x67],cx
  4193bd:	dec    ebx
  4193be:	enter  0xa5a4,0xe5
  4193c2:	aad    0x1f
  4193c4:	cmp    ecx,esp
  4193c6:	sar    BYTE PTR [edi+0x48],0x74
  4193ca:	push   ds
  4193cb:	pop    ebx
  4193cc:	leave  
  4193cd:	not    DWORD PTR [ebp-0x78]
  4193d0:	jns    0x41940f
  4193d2:	pop    edx
  4193d3:	sbb    BYTE PTR [edi],ah
  4193d5:	repz aam 0x50
  4193d8:	sbb    ecx,DWORD PTR [edx+0x4a8285de]
  4193de:	sub    BYTE PTR [edx+0x6a767f8b],dl
  4193e4:	daa    
  4193e5:	fld    QWORD PTR [esi-0x4c]
  4193e8:	jle    0x419370
  4193ea:	scas   al,BYTE PTR es:[edi]
  4193eb:	dec    esi
  4193ec:	js     0x419411
  4193ee:	xchg   ecx,eax
  4193ef:	push   ecx
  4193f0:	(bad)  
  4193f1:	outs   dx,DWORD PTR ds:[esi]
  4193f2:	xor    edx,ebp
  4193f4:	aaa    
  4193f5:	cmc    
  4193f6:	or     esi,DWORD PTR [esi+0x76]
  4193f9:	das    
  4193fa:	push   esi
  4193fb:	leave  
  4193fc:	lahf   
  4193fd:	adc    eax,0xf8e4a5c6
  419402:	cmc    
  419403:	loop   0x4193e1
  419405:	lock lahf 
  419407:	loope  0x41945a
  419409:	mov    al,ds:0x78d6b7cf
  41940e:	sub    bh,BYTE PTR [eax+0xd]
  419411:	aas    
  419412:	lock clc 
  419414:	stos   BYTE PTR es:[edi],al
  419415:	mov    ebp,DWORD PTR [ecx]
  419417:	in     al,0x3e
  419419:	inc    esp
  41941a:	xchg   edi,eax
  41941b:	push   ds
  41941c:	jo     0x4193aa
  41941e:	jl     0x41944f
  419420:	pop    edx
  419421:	add    ebp,DWORD PTR [esi]
  419423:	mov    edi,0x1ec9b12d
  419428:	lods   eax,DWORD PTR ds:[esi]
  419429:	(bad)  
  41942a:	in     eax,0xc8
  41942c:	clc    
  41942d:	sbb    eax,DWORD PTR [edx+0x23f23c8a]
  419433:	mov    bh,0xe3
  419435:	ror    DWORD PTR [esi+0x2435f1f7],1
  41943b:	xlat   BYTE PTR ds:[ebx]
  41943c:	aaa    
  41943d:	sub    BYTE PTR [edx+0x38019a04],dh
  419443:	push   0xeff16c55
  419448:	dec    eax
  419449:	jbe    0x4194c9
  41944b:	repnz add edx,DWORD PTR [edi]
  41944e:	push   ss
  41944f:	ret    
  419450:	mov    cl,0x28
  419452:	cmp    al,0x3f
  419454:	adc    ah,BYTE PTR ds:0xc9f5ac9f
  41945a:	stos   BYTE PTR es:[edi],al
  41945b:	xor    eax,0xdb5a201d
  419460:	push   ss
  419461:	jae    0x4194c3
  419463:	xchg   ecx,eax
  419464:	and    DWORD PTR [edx],0x50
  419467:	mov    bl,0x1b
  419469:	sbb    esp,ebx
  41946b:	shl    DWORD PTR [esi*4+0x1d1f9164],cl
  419472:	(bad)  
  419473:	push   ebx
  419474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419475:	mov    al,0xe
  419477:	jae    0x41947b
  419479:	push   ecx
  41947a:	lods   al,BYTE PTR ds:[esi]
  41947b:	aad    0x59
  41947d:	pushf  
  41947e:	add    al,0x54
  419480:	xor    ch,0xab
  419483:	sub    cl,cl
  419485:	mov    ah,0x2f
  419487:	fcomp  QWORD PTR [esi+0x29]
  41948a:	mov    esi,DWORD PTR [esi-0x4fad7f48]
  419490:	test   DWORD PTR [edi],ebx
  419492:	pop    eax
  419493:	xor    al,0xff
  419495:	call   0x7423:0x430d7e09
  41949c:	or     DWORD PTR [edi-0x7b],esi
  41949f:	cs pop ebx
  4194a2:	xchg   DWORD PTR [esp+edx*8-0x8],ebx
  4194a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194a7:	xor    dl,bh
  4194a9:	out    0x96,eax
  4194ab:	pop    edx
  4194ac:	jmp    0x4194c6
  4194ae:	pop    esi
  4194af:	jne    0x4194e6
  4194b1:	jg     0x4194b9
  4194b3:	cmp    dl,ch
  4194b5:	jg     0x4194ca
  4194b7:	inc    edi
  4194b8:	mov    edx,0xa08dade1
  4194bd:	and    eax,0xdf3b61c
  4194c2:	int3   
  4194c3:	fsub   QWORD PTR [edx+0x320738eb]
  4194c9:	push   esi
  4194ca:	or     DWORD PTR [ebp-0x301bf761],ecx
  4194d0:	and    al,0x52
  4194d2:	xchg   esi,eax
  4194d3:	mov    BYTE PTR [edx-0x751495d4],bl
  4194d9:	int3   
  4194da:	jmp    0x1f51:0x6dd881dc
  4194e1:	(bad)  
  4194e2:	jb     0x419554
  4194e4:	inc    ebp
  4194e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e6:	fldl2e 
  4194e8:	jmp    0x41946e
  4194ea:	mov    ebp,ebx
  4194ec:	adc    eax,0x391c7f80
  4194f1:	pop    edi
  4194f2:	mov    ds:0x4a0accf0,al
  4194f7:	push   ebp
  4194f8:	xchg   DWORD PTR [ebx+0xefc4831],edi
  4194fe:	shl    DWORD PTR [edi],cl
  419500:	test   BYTE PTR [ecx],al
  419502:	dec    edi
  419503:	fst    QWORD PTR [ecx-0x3a]
  419506:	int3   
  419507:	hlt    
  419508:	les    edi,FWORD PTR [ebx+eax*1]
  41950b:	mov    BYTE PTR [eax+0xb],ch
  41950e:	mov    esp,0x39e5c07d
  419513:	inc    ebp
  419514:	push   esp
  419515:	out    dx,al
  419516:	loope  0x41953b
  419518:	nop
  419519:	fs dec ecx
  41951b:	stos   DWORD PTR es:[edi],eax
  41951c:	je     0x41957d
  41951e:	jae    0x419536
  419520:	stos   BYTE PTR es:[edi],al
  419521:	jmp    0xf021684d
  419526:	les    edx,FWORD PTR [edx-0x77e11d46]
  41952c:	dec    ebp
  41952d:	adc    ebp,DWORD PTR [ebp+0x36f8fd6e]
  419533:	repz xchg edi,eax
  419535:	stc    
  419536:	(bad)  
  419537:	and    ebx,esp
  419539:	fdiv   st(7),st
  41953b:	xchg   edx,eax
  41953c:	or     eax,0xb379c7cc
  419541:	and    ebx,0xca5a6ff
  419547:	popf   
  419548:	mov    ds:0xb03da103,al
  41954d:	jecxz  0x4194f5
  41954f:	xor    BYTE PTR [edx+0x28],0x3a
  419553:	inc    ecx
  419554:	mov    esi,0x1d53d5bb
  419559:	mov    esp,0xc1a972d
  41955e:	mov    ds:0xb1f5dbbf,al
  419563:	inc    esi
  419564:	out    0xac,eax
  419566:	test   ebp,ebp
  419568:	aad    0x6
  41956a:	in     al,dx
  41956b:	pop    edx
  41956c:	jbe    0x4195e5
  41956e:	les    edx,FWORD PTR [bp-0x22]
  419572:	(bad)  
  419573:	ret    0x37bf
  419576:	nop
  419577:	cwde   
  419578:	js     0x419587
  41957a:	push   ss
  41957b:	xchg   DWORD PTR [edi-0x58],eax
  41957e:	stos   BYTE PTR es:[edi],al
  41957f:	xor    al,0x92
  419581:	inc    eax
  419582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419583:	adc    ch,ah
  419585:	xlat   BYTE PTR ds:[ebx]
  419586:	sbb    DWORD PTR [edi-0x78],0x8c4f7e2e
  41958d:	imul   ebp,DWORD PTR [eax+0x2d2598f8],0x11
  419594:	jb     0x4195e1
  419596:	test   al,0xef
  419598:	out    dx,eax
  419599:	fst    QWORD PTR [esi+eax*4-0x78c0d607]
  4195a0:	in     eax,dx
  4195a1:	sbb    al,0x23
  4195a3:	cmp    al,0x9b
  4195a5:	mov    ecx,0x248f703f
  4195aa:	shl    DWORD PTR [edi],cl
  4195ac:	pop    ebp
  4195ad:	outs   dx,BYTE PTR ds:[esi]
  4195ae:	or     DWORD PTR [edx],0x43
  4195b1:	push   es
  4195b2:	jmp    0x41960b
  4195b4:	adc    al,0x14
  4195b6:	scas   eax,DWORD PTR es:[edi]
  4195b7:	cli    
  4195b8:	aas    
  4195b9:	je     0x419634
  4195bb:	push   ecx
  4195bc:	sub    eax,0x46dd835c
  4195c1:	mov    eax,ds:0xe825da34
  4195c6:	js     0x41958d
  4195c8:	push   esp
  4195c9:	jmp    0xa8de:0x47de94f6
  4195d0:	cmovne esp,DWORD PTR [edi+0x2]
  4195d4:	stos   DWORD PTR es:[edi],eax
  4195d5:	stos   DWORD PTR es:[edi],eax
  4195d6:	int    0x32
  4195d8:	mov    eax,0xc92d6ade
  4195dd:	jae    0x41964c
  4195df:	dec    esi
  4195e0:	retf   0x9cda
  4195e3:	inc    ebx
  4195e4:	fwait
  4195e5:	and    DWORD PTR [eax],ebx
  4195e7:	rcr    al,cl
  4195e9:	mov    ch,dh
  4195eb:	imul   edx,ebx,0x70
  4195ee:	push   eax
  4195ef:	xlat   BYTE PTR ds:[ebx]
  4195f0:	stos   BYTE PTR es:[edi],al
  4195f1:	and    BYTE PTR [eax-0x5d],0xb6
  4195f5:	aam    0x46
  4195f7:	stos   DWORD PTR es:[edi],eax
  4195f8:	or     edx,DWORD PTR [ecx+0x34]
  4195fb:	push   esp
  4195fc:	sbb    dh,BYTE PTR [eax-0x2429373b]
  419602:	aad    0xe7
  419604:	outs   dx,DWORD PTR ds:[esi]
  419605:	mov    ebp,0x531c716
  41960a:	cdq    
  41960b:	or     BYTE PTR [ebx+0xd09fe89],al
  419611:	jne    0x41966f
  419613:	test   DWORD PTR [ebx],esi
  419615:	outs   dx,BYTE PTR ds:[esi]
  419616:	outs   dx,BYTE PTR ds:[esi]
  419617:	add    eax,0x5e0db0d6
  41961c:	adc    BYTE PTR [edx],dh
  41961e:	pop    es
  41961f:	push   esp
  419620:	xchg   ebp,eax
  419621:	cli    
  419622:	std    
  419623:	ret    
  419624:	xor    BYTE PTR es:[edx+0x5c],al
  419628:	or     edx,ecx
  41962a:	mov    dl,bh
  41962c:	fs mov esi,0xbb75bea7
  419632:	adc    ecx,eax
  419634:	push   es
  419635:	shl    BYTE PTR [ecx],0x54
  419638:	lahf   
  419639:	repz adc al,BYTE PTR [edi-0x6d8c41d6]
  419640:	sbb    ch,BYTE PTR [ebx+0x192416fe]
  419646:	jle    0x4195cb
  419648:	stc    
  419649:	fsubr  DWORD PTR [ecx]
  41964b:	jg     0x41968e
  41964d:	aas    
  41964e:	icebp  
  41964f:	mov    bh,ch
  419651:	(bad)  
  419652:	enter  0x465f,0xa1
  419656:	dec    ebx
  419657:	ret    
  419658:	popa   
  419659:	cmp    ah,bl
  41965b:	mov    edx,0x70957f9d
  419660:	cmp    ecx,DWORD PTR [edi+ebx*4+0xe]
  419664:	addr16 cli 
  419666:	ret    0xf6ef
  419669:	retf   0x87b2
  41966c:	daa    
  41966d:	cli    
  41966e:	pop    ecx
  41966f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419670:	xor    DWORD PTR [edi+0x56bc69c3],0xfb1991ea
  41967a:	jle    0x4196c5
  41967c:	and    ecx,esp
  41967e:	push   0x5
  419680:	sti    
  419681:	xchg   ecx,eax
  419682:	fbstp  TBYTE PTR [esp+ecx*4]
  419685:	jl     0x4196ed
  419687:	push   es
  419688:	(bad)  
  419689:	xchg   edi,eax
  41968a:	adc    BYTE PTR [edi+0x1c998d2a],cl
  419690:	cmp    ah,BYTE PTR [ebx]
  419692:	retf   
  419693:	pop    edx
  419694:	xor    al,BYTE PTR [edx-0x32c9dc62]
  41969a:	pop    edi
  41969b:	cmp    eax,0x4415aa01
  4196a0:	jbe    0x4196f2
  4196a2:	call   0xc24c87ae
  4196a7:	sub    ecx,DWORD PTR [eax-0x7b]
  4196aa:	inc    ecx
  4196ab:	outs   dx,DWORD PTR ds:[esi]
  4196ac:	cmp    eax,0xfc63b5f4
  4196b1:	sar    BYTE PTR [esi-0x1acd6097],1
  4196b7:	leave  
  4196b8:	icebp  
  4196b9:	jmp    0x4196c3
  4196bb:	dec    eax
  4196bc:	mov    ds:0xe7a41f93,al
  4196c1:	(bad)  
  4196c2:	cld    
  4196c3:	mov    ah,0x2c
  4196c5:	and    eax,0x1dfef69e
  4196ca:	add    ah,BYTE PTR [eax+0x42]
  4196cd:	repnz mov ebx,0x23ef6951
  4196d3:	sbb    DWORD PTR [ebx+0x2c46973f],esp
  4196d9:	iret   
  4196da:	int3   
  4196db:	cmp    ch,BYTE PTR [edi+ebp*1+0x4f]
  4196df:	cmp    BYTE PTR [edx],cl
  4196e1:	in     eax,0xd0
  4196e3:	add    edi,edi
  4196e5:	pusha  
  4196e6:	call   0xdf20d83c
  4196eb:	stc    
  4196ec:	test   BYTE PTR [esi],ah
  4196ee:	daa    
  4196ef:	mov    bh,0x37
  4196f1:	mul    DWORD PTR [edx]
  4196f3:	pop    edx
  4196f4:	loope  0x419722
  4196f6:	lods   al,BYTE PTR ds:[esi]
  4196f7:	inc    esi
  4196f8:	pop    esi
  4196f9:	pop    esi
  4196fa:	retf   
  4196fb:	adc    eax,0x31e8af9f
  419700:	dec    eax
  419701:	leave  
  419702:	inc    ebx
  419703:	cmp    DWORD PTR ss:[eax+ebx*1-0x1e],ebp
  419708:	dec    ecx
  419709:	xchg   BYTE PTR [eax-0x69bd4856],ah
  41970f:	pusha  
  419710:	test   BYTE PTR [eax+0x746b2f78],0xcf
  419717:	adc    BYTE PTR [ebx],dh
  419719:	ins    BYTE PTR es:[edi],dx
  41971a:	pop    edi
  41971b:	pop    ds
  41971c:	popw   ds
  41971e:	std    
  41971f:	push   0xffffffa3
  419721:	inc    ebp
  419722:	xchg   ebx,eax
  419723:	ja     0x4196ee
  419725:	fwait
  419726:	(bad)  
  419727:	mov    eax,0x954604dc
  41972c:	ss jno 0x41976e
  41972f:	mov    edx,0x64ab34ef
  419734:	stos   BYTE PTR es:[edi],al
  419735:	xchg   ecx,eax
  419736:	ins    BYTE PTR es:[edi],dx
  419737:	imul   ebx,DWORD PTR [ebx+ebp*1+0x1a8e4be1],0xffffff98
  41973f:	xor    eax,0xf6a98dc7
  419744:	(bad)  
  419745:	js     0x41976b
  419747:	mov    cl,0x2c
  419749:	mov    ds:0x49639f19,al
  41974e:	cs jne 0x41972b
  419751:	sub    eax,eax
  419753:	bound  ecx,QWORD PTR ds:0x1d09e787
  419759:	push   es
  41975a:	push   0x2e
  41975c:	jo     0x4196f3
  41975e:	test   BYTE PTR [esi-0x298d5a09],ch
  419764:	(bad)  
  419766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419767:	mov    dh,0x26
  419769:	add    dh,BYTE PTR [ebx+0x6a]
  41976c:	and    dl,BYTE PTR [edi-0xa5e4b93]
  419772:	icebp  
  419773:	cld    
  419774:	cmp    edi,eax
  419776:	cmp    al,bh
  419778:	and    BYTE PTR [esi+0x7e],ch
  41977b:	and    al,BYTE PTR [ecx-0x2a]
  41977e:	or     BYTE PTR [eax-0xa6857f9],bl
  419784:	stc    
  419785:	loope  0x41978d
  419787:	jge    0x4197fe
  419789:	add    eax,0x82d21fe0
  41978e:	and    al,0x93
  419790:	fcmovnu st,st(3)
  419792:	fs sahf 
  419794:	cmovnp esp,DWORD PTR [edx-0x7e]
  419798:	sub    eax,0x153d2059
  41979d:	imul   esp,DWORD PTR [edx+0x499a82a5],0xc40bef88
  4197a7:	loope  0x41973b
  4197a9:	and    BYTE PTR ds:0x134a092c,ch
  4197af:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4197b1:	push   esi
  4197b2:	push   ecx
  4197b3:	ss jg  0x419800
  4197b6:	mov    esi,0x86ac0368
  4197bb:	mov    ecx,0xbbb38aa9
  4197c0:	cdq    
  4197c1:	jecxz  0x4197e4
  4197c3:	mov    al,0xc8
  4197c5:	xor    BYTE PTR [eax+0x11],0x36
  4197c9:	xor    DWORD PTR [ebx],esp
  4197cb:	dec    edi
  4197cc:	ins    DWORD PTR es:[edi],dx
  4197cd:	cli    
  4197ce:	sub    DWORD PTR [edi],esp
  4197d0:	shl    DWORD PTR [edx-0x314fa1d],cl
  4197d6:	add    al,BYTE PTR [ebx+0x1c7aee7d]
  4197dc:	ins    BYTE PTR es:[edi],dx
  4197dd:	je     0x419810
  4197df:	jbe    0x4197f8
  4197e1:	addr16 rcr ch,cl
  4197e4:	pop    ds
  4197e5:	dec    esi
  4197e6:	int3   
  4197e7:	pop    esp
  4197e8:	dec    ebx
  4197e9:	jno    0x419827
  4197eb:	xlat   BYTE PTR ds:[ebx]
  4197ed:	test   eax,0x97cd24ce
  4197f2:	test   BYTE PTR [eax],0x1
  4197f5:	hlt    
  4197f6:	add    BYTE PTR [edx],cl
  4197f8:	inc    ebx
  4197f9:	aad    0xa7
  4197fb:	cld    
  4197fc:	add    dh,BYTE PTR [ebp+0x45]
  4197ff:	test   BYTE PTR [ebx+esi*8-0x4f4bebcf],ah
  419806:	imul   ecx,DWORD PTR [edx-0x268833e2],0xa6394508
  419810:	ja     0x419868
  419812:	fcomp  QWORD PTR [ebp-0xe]
  419815:	pop    ebp
  419816:	adc    al,0xd9
  419818:	mov    esp,0xc8d1289a
  41981d:	leave  
  41981e:	mov    al,ds:0x96d47e85
  419823:	jb     0x419895
  419825:	inc    ebp
  419826:	je     0x41985c
  419828:	mov    DWORD PTR [edi+ebp*1-0x5b7318d2],0xaf092862
  419833:	retf   0xbf6e
  419836:	sub    DWORD PTR [ebx],0x32
  419839:	aas    
  41983a:	and    al,0xc7
  41983c:	in     al,0x1c
  41983e:	(bad)  
  41983f:	inc    ebp
  419840:	in     eax,0x5f
  419842:	sub    al,0xe8
  419844:	fcmovne st,st(7)
  419846:	xor    al,0x9e
  419848:	add    eax,0x5df1f4a5
  41984d:	jge    0x41984d
  41984f:	pushf  
  419850:	and    DWORD PTR [edi],ecx
  419852:	rcr    dl,0xbb
  419855:	push   0x6d
  419857:	and    al,0x53
  419859:	xchg   esi,ebp
  41985b:	inc    ecx
  41985c:	iret   
  41985d:	pop    esi
  41985e:	xchg   ebx,eax
  41985f:	gs adc edx,edi
  419862:	push   ss
  419863:	cmc    
  419864:	pop    ebp
  419865:	jmp    0x4198e2
  419867:	pop    ebp
  419868:	xchg   edi,eax
  419869:	sbb    BYTE PTR [esi],0x21
  41986c:	mov    esi,0x669e6887
  419871:	jmp    0xca91:0xe91be54e
  419878:	push   ds
  419879:	ss es mov ebx,0xa496321f
  419880:	lods   al,BYTE PTR ds:[esi]
  419881:	cmp    eax,0xe4c0a972
  419886:	out    0x96,eax
  419888:	jle    0x4198be
  41988a:	int3   
  41988b:	add    eax,ecx
  41988d:	mov    al,ds:0xa56ee885
  419892:	ins    DWORD PTR es:[edi],dx
  419893:	imul   eax,DWORD PTR [esi-0x2b117bc],0x82cdc7dc
  41989d:	into   
  41989e:	pop    ecx
  41989f:	pop    eax
  4198a0:	int    0x8f
  4198a2:	mov    ebx,0x584f96b9
  4198a7:	stos   DWORD PTR es:[edi],eax
  4198a8:	adc    esp,DWORD PTR [edx+0x3c]
  4198ab:	add    BYTE PTR [eax],cl
  4198ad:	call   0x15e8:0xb1e07eae
  4198b4:	outs   dx,BYTE PTR ds:[esi]
  4198b5:	inc    edx
  4198b6:	add    ch,al
  4198b8:	add    DWORD PTR [ebx],eax
  4198ba:	js     0x41989a
  4198bc:	jp     0x4198d7
  4198be:	ss ret 
  4198c0:	sti    
  4198c1:	test   ebp,ebx
  4198c3:	mov    dl,0xdd
  4198c5:	mov    ecx,0x61f1b44d
  4198ca:	imul   esi,DWORD PTR [edx],0xfffffffd
  4198cd:	pusha  
  4198ce:	inc    eax
  4198cf:	push   ebp
  4198d0:	xchg   ebp,eax
  4198d1:	adc    edx,DWORD PTR [edx-0x55]
  4198d4:	int3   
  4198d5:	and    esi,edi
  4198d7:	pusha  
  4198d8:	mov    ah,0x2b
  4198da:	add    eax,0x457491fa
  4198df:	jp     0x4198ca
  4198e1:	call   0x392af152
  4198e6:	adc    edx,DWORD PTR [esi-0x23]
  4198e9:	js     0x41988f
  4198eb:	addr16 push 0x18
  4198ee:	cmp    dh,0x73
  4198f1:	inc    ebp
  4198f2:	mov    dl,0xb9
  4198f4:	jbe    0x419968
  4198f6:	jp     0x4198b3
  4198f8:	adc    cl,dl
  4198fa:	mov    dl,0x51
  4198fc:	xor    eax,0xc7717e47
  419901:	loopne 0x419911
  419903:	cli    
  419904:	test   al,0x22
  419906:	(bad)  
  419907:	(bad)  
  419908:	aam    0xa7
  41990a:	xor    dh,BYTE PTR [edx-0xa6cc52f]
  419910:	in     eax,dx
  419911:	and    BYTE PTR fs:[eax],bl
  419914:	clc    
  419915:	add    BYTE PTR [ebx+0x0],al
  419918:	inc    esp
  419919:	pop    ecx
  41991a:	pop    ss
  41991b:	(bad)  
  41991c:	jns    0x4198da
  41991e:	arpl   cx,ax
  419920:	dec    ecx
  419921:	mov    al,0x5d
  419923:	cs hlt 
  419925:	and    bl,BYTE PTR ds:0x6b3f16b3
  41992b:	lahf   
  41992c:	mov    al,ds:0x9ebec9c9
  419931:	ret    
  419932:	pop    ebx
  419933:	ins    BYTE PTR es:[edi],dx
  419934:	fcomp  QWORD PTR [edi+edi*1+0x60]
  419938:	or     edx,ebx
  41993a:	call   FWORD PTR [edi]
  41993c:	or     al,0x9e
  41993e:	pushf  
  41993f:	fmul   DWORD PTR [edx+edi*4]
  419942:	fnstenv [edx+0x50]
  419945:	mov    edi,0xd1740f48
  41994a:	sbb    ebp,DWORD PTR [ebx]
  41994c:	push   ds
  41994d:	fmulp  st(0),st
  41994f:	push   edi
  419950:	shr    dl,1
  419952:	push   esi
  419953:	pushf  
  419954:	mov    ecx,0x94640234
  419959:	mov    ebp,0x3e170bfc
  41995e:	adc    eax,0x5e78a3b3
  419963:	cmp    ch,BYTE PTR [edi+0x66dc7f76]
  419969:	mov    dh,dh
  41996b:	xlat   BYTE PTR ds:[ebx]
  41996c:	sub    ecx,esp
  41996e:	sub    BYTE PTR [ecx+edi*1-0x9],bl
  419972:	mov    al,0xb2
  419974:	call   0xc64cd013
  419979:	(bad)  [eax+0x48343991]
  41997f:	add    al,0x27
  419981:	push   edi
  419982:	data16 jge 0x419916
  419985:	push   esi
  419986:	dec    esp
  419987:	popf   
  419988:	pop    es
  419989:	lods   al,BYTE PTR ds:[esi]
  41998a:	pop    ss
  41998b:	mov    edi,0xacb8a443
  419990:	(bad)  
  419991:	push   ss
  419992:	jae    0x419a00
  419994:	add    cl,0xf9
  419997:	push   ecx
  419998:	pop    ss
  419999:	push   0x2f
  41999b:	jge    0x4199d8
  41999d:	inc    esp
  41999e:	push   ebp
  41999f:	push   esi
  4199a0:	jge    0x419932
  4199a2:	popf   
  4199a3:	xor    eax,0x3108002
  4199a8:	ds sub al,0x5a
  4199ab:	ret    0x421e
  4199ae:	pop    edi
  4199af:	xchg   esp,eax
  4199b0:	addr16 mov ds:0xdffb,eax
  4199b4:	jnp    0x4199e3
  4199b6:	dec    esi
  4199b7:	sub    BYTE PTR [eax],0xe4
  4199ba:	or     edi,eax
  4199bc:	dec    eax
  4199bd:	cli    
  4199be:	aas    
  4199bf:	mov    ch,0xd7
  4199c1:	jp     0x4199eb
  4199c3:	lahf   
  4199c4:	mov    edi,0x3acc05f5
  4199c9:	lock mov bl,0x95
  4199cc:	cmp    eax,0x7f2aba2b
  4199d1:	call   0xbbb9:0x7b53e846
  4199d8:	adc    eax,0x963b465a
  4199dd:	dec    eax
  4199de:	rcr    BYTE PTR [edx+0xf],1
  4199e1:	cmp    al,0x31
  4199e3:	jp     0x419a5f
  4199e5:	xor    eax,0x94a67a44
  4199ea:	jno    0x419a13
  4199ec:	xor    eax,0xbbdce74a
  4199f1:	xchg   cl,bl
  4199f3:	mov    bh,0x9d
  4199f5:	daa    
  4199f6:	mov    dh,0x3b
  4199f8:	push   ss
  4199f9:	bsf    ecx,DWORD PTR [ebp+0x7317a038]
  419a00:	popf   
  419a01:	cmp    BYTE PTR [edi+esi*8+0x11],0x1c
  419a06:	mov    dh,0x7e
  419a08:	inc    edx
  419a09:	in     al,0xe0
  419a0b:	rcr    bl,1
  419a0d:	or     DWORD PTR [edx-0x234e8aa5],eax
  419a13:	sbb    eax,0x4e07225d
  419a18:	xchg   edx,eax
  419a19:	mov    ebx,0x65e86f83
  419a1e:	dec    ecx
  419a1f:	mov    ebx,DWORD PTR [eax-0x16157ffb]
  419a25:	and    cl,BYTE PTR [ebp+esi*8+0x304cb013]
  419a2c:	xor    cl,BYTE PTR [eax+esi*1+0x9]
  419a30:	mov    eax,0x60468a91
  419a35:	xor    esi,ebp
  419a37:	mov    ebp,0xb00b8929
  419a3c:	jl     0x22f8dcb6
  419a42:	pusha  
  419a43:	arpl   WORD PTR [edi],di
  419a45:	fmul   st(5),st
  419a47:	xchg   edx,eax
  419a48:	data16 add BYTE PTR [ecx+0x1de820b4],al
  419a4f:	cld    
  419a50:	outs   dx,DWORD PTR ds:[esi]
  419a51:	and    ch,ah
  419a53:	push   eax
  419a54:	sbb    eax,0xde3cecb6
  419a59:	ret    0x26ce
  419a5c:	cmp    eax,0xc5329e1e
  419a61:	outs   dx,DWORD PTR ds:[esi]
  419a62:	stos   DWORD PTR es:[edi],eax
  419a63:	cmp    al,0xc1
  419a65:	sbb    al,ah
  419a67:	add    BYTE PTR [esi+0x64],ch
  419a6a:	xor    al,0x5b
  419a6c:	push   0x6ab1533c
  419a71:	mov    dl,0xa7
  419a73:	ds and al,0x3a
  419a76:	pop    edi
  419a77:	int    0x5
  419a79:	mov    ch,BYTE PTR gs:[edi]
  419a7c:	inc    ecx
  419a7d:	mov    DWORD PTR [esi-0x50],ecx
  419a80:	dec    ebp
  419a81:	cmp    eax,eax
  419a83:	xor    BYTE PTR [eax-0x4015e001],ah
  419a89:	push   esp
  419a8a:	imul   ebp,DWORD PTR [edx+0x95f093f],0xffffffef
  419a91:	mov    ch,0x65
  419a93:	pop    eax
  419a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a95:	sub    al,BYTE PTR [edx-0x424e51a1]
  419a9b:	jbe    0x419b19
  419a9d:	mov    al,ds:0x996f34d9
  419aa2:	push   0xffffffc9
  419aa4:	or     al,0x32
  419aa6:	xchg   edi,eax
  419aa7:	out    0x6d,eax
  419aa9:	xchg   ecx,eax
  419aaa:	fs iret 
  419aac:	sbb    dh,BYTE PTR [edi-0x5fa20ad8]
  419ab2:	push   edi
  419ab3:	test   DWORD PTR [ebx+eiz*1-0x50],esi
  419ab7:	stos   DWORD PTR es:[edi],eax
  419ab8:	xor    esi,ecx
  419aba:	ins    BYTE PTR es:[edi],dx
  419abb:	es jmp 0x95a4367a
  419ac1:	lods   eax,DWORD PTR ds:[esi]
  419ac2:	mov    ah,0x84
  419ac4:	in     al,dx
  419ac5:	pop    edx
  419ac6:	gs push ecx
  419ac8:	and    esi,DWORD PTR [edx+0x2b737249]
  419ace:	in     eax,dx
  419acf:	(bad)  
  419ad0:	sub    eax,0x2652c4a6
  419ad5:	add    al,0x48
  419ad7:	fwait
  419ad8:	ja     0x419a87
  419ada:	jnp    0x419af6
  419adc:	pop    ebp
  419ade:	lods   al,BYTE PTR ds:[esi]
  419adf:	xchg   esp,eax
  419ae0:	jmp    0x419a99
  419ae2:	dec    eax
  419ae3:	or     BYTE PTR [esi],al
  419ae5:	and    al,0x79
  419ae7:	mov    eax,ds:0x2bc9c0c8
  419aec:	pop    ds
  419aed:	xchg   DWORD PTR [esi],eax
  419aef:	mov    dx,0x1f81
  419af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af4:	nop
  419af5:	pop    ebp
  419af6:	or     dl,BYTE PTR [edx-0x37]
  419af9:	retf   
  419afa:	nop
  419afb:	das    
  419afc:	sub    al,0xc2
  419afe:	adc    DWORD PTR [esi+ebp*4+0x383b14b1],ebx
  419b05:	out    dx,eax
  419b06:	ins    DWORD PTR es:[edi],dx
  419b07:	add    al,0x9c
  419b09:	and    BYTE PTR [edi-0x30c44da0],dh
  419b0f:	dec    eax
  419b10:	push   edi
  419b11:	adc    al,bh
  419b13:	cs pop edi
  419b15:	scas   al,BYTE PTR es:[edi]
  419b16:	pop    esp
  419b17:	sub    al,0xf2
  419b19:	cld    
  419b1a:	scas   eax,DWORD PTR es:[edi]
  419b1b:	stos   DWORD PTR es:[edi],eax
  419b1c:	xchg   ecx,eax
  419b1d:	nop
  419b1e:	retf   
  419b1f:	mov    ds,WORD PTR [eax+0x7f]
  419b22:	cld    
  419b23:	sbb    eax,0xb58c7ef2
  419b28:	sub    ebp,edx
  419b2a:	jne    0x419af0
  419b2c:	mov    al,ds:0x5da576d
  419b31:	xor    ch,dh
  419b33:	jbe    0x419b18
  419b35:	sbb    DWORD PTR [ebx+ecx*8-0x69],esp
  419b39:	pop    ecx
  419b3a:	cmp    eax,0x91629f74
  419b3f:	jb     0x419b5c
  419b41:	repz inc ebx
  419b43:	add    eax,DWORD PTR [eax]
  419b45:	sbb    al,0xcc
  419b47:	pusha  
  419b48:	out    0x6c,al
  419b4a:	push   es
  419b4b:	out    dx,al
  419b4c:	es xor eax,0x4162a2f
  419b52:	inc    ecx
  419b53:	in     eax,dx
  419b54:	adc    ch,BYTE PTR [ecx-0x6e0e05b7]
  419b5a:	cmp    al,0x50
  419b5c:	add    al,0x64
  419b5e:	jp     0x419af2
  419b60:	mov    ds:0xfa35ab77,al
  419b65:	jne    0x419be3
  419b67:	sbb    al,0xe8
  419b69:	mov    cs,WORD PTR [ebx]
  419b6b:	frstor [eax]
  419b6d:	xor    DWORD PTR [ebx-0x1e],esi
  419b70:	jae    0x419b09
  419b72:	mov    ebp,0x33f9de11
  419b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b78:	aaa    
  419b79:	adc    dh,BYTE PTR [edx]
  419b7b:	test   eax,0x9a4a6c0d
  419b80:	cli    
  419b81:	fcom   DWORD PTR [edi+0x3786a869]
  419b87:	sti    
  419b88:	call   0x986fd67c
  419b8d:	test   eax,0x3d58e82b
  419b92:	fwait
  419b93:	xchg   ebp,eax
  419b94:	jnp    0x419c0b
  419b96:	data16 cld 
  419b98:	mov    edi,0x841a2783
  419b9d:	mov    esi,0xdabd8358
  419ba2:	pop    ecx
  419ba3:	adc    eax,0x83f5305d
  419ba8:	pop    ebp
  419ba9:	mov    ebp,cs
  419bab:	in     al,0xb2
  419bad:	enter  0x1ed5,0x94
  419bb1:	pushf  
  419bb2:	push   ebp
  419bb3:	stc    
  419bb4:	icebp  
  419bb5:	scas   eax,DWORD PTR es:[edi]
  419bb6:	push   esp
  419bb7:	test   eax,0x76c57b17
  419bbc:	fcom   DWORD PTR [ecx-0x1f]
  419bbf:	bound  ebp,QWORD PTR [edx]
  419bc1:	(bad)  
  419bc3:	push   eax
  419bc4:	jno    0x419b4e
  419bc6:	dec    edi
  419bc7:	sbb    eax,ecx
  419bc9:	in     al,0x61
  419bcb:	dec    esp
  419bcc:	ss in  eax,0x3f
  419bcf:	shr    BYTE PTR [esi-0x78],1
  419bd2:	dec    edi
  419bd3:	nop
  419bd4:	inc    edx
  419bd5:	aam    0x4a
  419bd7:	add    ch,ah
  419bd9:	dec    edi
  419bda:	loopne 0x419bd0
  419bdc:	das    
  419bdd:	cmp    eax,DWORD PTR [ecx+0x15]
  419be0:	push   es
  419be1:	out    0x63,eax
  419be3:	xor    ebp,edi
  419be5:	push   0x7a6277bf
  419bea:	pop    es
  419beb:	cmp    al,0x7f
  419bed:	fs jnp 0x419c44
  419bf0:	addr16 jo 0x419bf8
  419bf3:	cld    
  419bf4:	std    
  419bf5:	inc    ecx
  419bf6:	lods   al,BYTE PTR ds:[esi]
  419bf7:	mov    ds:0x17f2eb7b,al
  419bfc:	cmp    esi,DWORD PTR [ebp+0x77]
  419bff:	repnz xor al,0xd
  419c02:	aam    0xcd
  419c04:	sbb    eax,0x80322d52
  419c09:	jno    0x419bb1
  419c0b:	int3   
  419c0c:	jbe    0x419c0a
  419c0e:	ret    
  419c0f:	fnstsw WORD PTR [esi]
  419c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c12:	ss aas 
  419c14:	cwde   
  419c15:	in     eax,0x8a
  419c17:	sbb    BYTE PTR [ecx],ah
  419c19:	cdq    
  419c1a:	jmp    FWORD PTR [edi+0x44]
  419c1d:	cli    
  419c1e:	xor    al,0x3f
  419c20:	cmc    
  419c21:	jmp    0x419bb5
  419c23:	in     al,0x84
  419c25:	mov    ch,0x3f
  419c27:	lock pop ss
  419c29:	push   DWORD PTR [ecx-0x7d]
  419c2c:	mov    cs,WORD PTR [edx-0x73797f27]
  419c32:	pop    ebx
  419c33:	imul   esp,esp,0x2164b881
  419c39:	outs   dx,BYTE PTR ds:[esi]
  419c3a:	mov    DWORD PTR [ecx],edx
  419c3c:	nop
  419c3d:	ins    BYTE PTR es:[edi],dx
  419c3e:	fmul   DWORD PTR [edi-0x6d]
  419c41:	mov    WORD PTR [ecx+edx*4+0x5edeeac],ds
  419c48:	dec    edx
  419c49:	jge    0x419c7c
  419c4b:	into   
  419c4c:	add    BYTE PTR [ecx],0x68
  419c4f:	aad    0x4b
  419c51:	and    BYTE PTR [esi+ebx*2],0xc1
  419c55:	push   0x12
  419c57:	je     0x419c65
  419c59:	push   es
  419c5a:	in     al,0x9f
  419c5c:	je     0x419cca
  419c5e:	aad    0x4f
  419c60:	inc    esp
  419c61:	(bad)  
  419c62:	ficom  WORD PTR [ebp+0x72]
  419c65:	in     al,0x41
  419c67:	push   ss
  419c68:	jbe    0x419c23
  419c6a:	push   es
  419c6b:	(bad)  
  419c6c:	enter  0xab03,0x2d
  419c70:	call   0x4757669e
  419c75:	aaa    
  419c76:	or     eax,0x6b1157cb
  419c7b:	shrd   DWORD PTR [edi+0x4b],esp,0xb3
  419c80:	sahf   
  419c81:	stos   BYTE PTR es:[edi],al
  419c82:	(bad)  
  419c83:	dec    ebp
  419c84:	je     0x419c4d
  419c86:	out    0xca,eax
  419c88:	dec    eax
  419c89:	dec    edx
  419c8a:	mov    dl,0xf4
  419c8c:	xlat   BYTE PTR ds:[ebx]
  419c8d:	mov    eax,0x3ffce797
  419c92:	popf   
  419c93:	cmp    eax,0x30aaed15
  419c98:	arpl   WORD PTR [ebp-0x5681232],bx
  419c9e:	popf   
  419c9f:	xor    cl,ah
  419ca1:	fldcw  WORD PTR [ebx]
  419ca3:	sahf   
  419ca4:	pop    edx
  419ca5:	adc    eax,0xfabbfb13
  419caa:	shr    bh,0xf7
  419cad:	test   al,0x2
  419caf:	rol    DWORD PTR [edx],0xd1
  419cb2:	pop    ds
  419cb3:	jbe    0x419d00
  419cb5:	pop    ebx
  419cb6:	jg     0x419d0a
  419cb8:	cld    
  419cb9:	test   BYTE PTR [ebp-0x34c94ce7],dh
  419cbf:	mov    eax,ds:0x1fc2ed1e
  419cc4:	xchg   ebx,eax
  419cc5:	push   0xd508806f
  419cca:	xor    BYTE PTR [edx],bh
  419ccc:	cdq    
  419ccd:	mov    ds:0x7c98acfe,eax
  419cd2:	imul   BYTE PTR [ebp+0x111b4c7b]
  419cd8:	(bad)  
  419cd9:	aad    0xfb
  419cdb:	xor    BYTE PTR ds:0x4aa0539e,dh
  419ce1:	pop    ds
  419ce2:	push   ss
  419ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce4:	sub    ecx,DWORD PTR [esi-0x49]
  419ce7:	add    al,0x2a
  419ce9:	dec    ecx
  419cea:	repnz bound ebx,QWORD PTR [esi-0x78d267a9]
  419cf1:	cwde   
  419cf2:	popf   
  419cf3:	into   
  419cf4:	repz push es
  419cf6:	test   al,0x60
  419cf8:	push   0x5258ef35
  419cfd:	das    
  419cfe:	pop    esi
  419cff:	cmp    BYTE PTR [ebx+0x39f926bf],al
  419d05:	dec    edi
  419d06:	gs loopne 0x419ccf
  419d09:	sub    eax,edi
  419d0b:	sbb    eax,0xff06c68a
  419d10:	inc    esp
  419d11:	retf   0x8d8f
  419d14:	aaa    
  419d15:	cli    
  419d16:	push   esp
  419d18:	fld    TBYTE PTR [ebx+esi*2-0x74c5585f]
  419d1f:	out    0xcd,al
  419d21:	sbb    cl,BYTE PTR [ebx+0x6c]
  419d24:	inc    ebp
  419d25:	jmp    0x50a33787
  419d2a:	push   es
  419d2b:	jne    0x419d8c
  419d2d:	adc    esp,DWORD PTR [edx+0x69]
  419d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d31:	sub    eax,0x4b611c10
  419d36:	adc    DWORD PTR ds:0x295f5993,eax
  419d3c:	xchg   ebp,eax
  419d3d:	out    dx,al
  419d3e:	lahf   
  419d3f:	sub    BYTE PTR [ecx+ebx*2],0xb2
  419d43:	dec    ebx
  419d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d45:	addr16 test al,0xc
  419d48:	or     dl,ch
  419d4a:	fild   DWORD PTR [edx]
  419d4c:	mov    bh,0xca
  419d4e:	int    0x74
  419d50:	clc    
  419d51:	adc    al,0x11
  419d53:	call   0xbdb8:0xf235de66
  419d5a:	mov    esi,0x703b5616
  419d5f:	imul   esp,DWORD PTR [edx+eax*1+0x34],0x41
  419d64:	sbb    ah,BYTE PTR [ebx]
  419d66:	jbe    0x419db9
  419d68:	stc    
  419d69:	sahf   
  419d6a:	aaa    
  419d6b:	fsubr  DWORD PTR [esi+0x7f]
  419d6e:	dec    edx
  419d6f:	in     al,dx
  419d70:	idiv   ch
  419d72:	mul    DWORD PTR [edx+edi*8]
  419d75:	mov    esp,0xf260c85
  419d7a:	pop    eax
  419d7b:	dec    ebx
  419d7c:	mov    esp,0x7c772dc4
  419d81:	sbb    ah,BYTE PTR [edi]
  419d83:	and    eax,0xf8cf1a29
  419d88:	lds    eax,FWORD PTR [ecx-0xe]
  419d8b:	inc    esi
  419d8c:	sub    esp,DWORD PTR [edx+ebx*4-0x26]
  419d90:	inc    edi
  419d91:	popa   
  419d92:	cmp    DWORD PTR ss:[esp+ebp*4-0x4bbf5feb],esi
  419d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d9b:	ins    BYTE PTR es:[edi],dx
  419d9c:	add    DWORD PTR [eax+0x3dfe389b],0xfffffff0
  419da3:	mov    bh,0x43
  419da5:	xchg   DWORD PTR [esi],esp
  419da7:	shl    ebp,0xd5
  419daa:	pop    eax
  419dab:	inc    eax
  419dac:	xchg   ecx,eax
  419dad:	out    dx,eax
  419dae:	and    bl,ch
  419db0:	gs cmp eax,0xee123a62
  419db6:	icebp  
  419db7:	ret    
  419db8:	shr    cl,cl
  419dba:	movups XMMWORD PTR [esi-0x5],xmm1
  419dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dbf:	adc    ecx,DWORD PTR [edi]
  419dc1:	pop    es
  419dc2:	fistp  DWORD PTR [edx]
  419dc4:	inc    edi
  419dc5:	adc    al,0xa8
  419dc7:	repz pop ds
  419dc9:	or     BYTE PTR [ecx-0x5ba2ad1],al
  419dcf:	xchg   ebx,eax
  419dd0:	cmc    
  419dd1:	fmul   QWORD PTR [ecx]
  419dd3:	dec    edi
  419dd4:	inc    edx
  419dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd6:	pop    eax
  419dd7:	cld    
  419dd8:	pop    eax
  419dd9:	cmp    eax,0x53691a18
  419dde:	imul   ebp,DWORD PTR [eax-0x56],0x76479703
  419de5:	hlt    
  419de6:	lods   al,BYTE PTR ds:[esi]
  419de7:	jecxz  0x419e4e
  419de9:	mov    bh,0x99
  419deb:	pop    ebx
  419dec:	add    eax,DWORD PTR [edi-0x38]
  419def:	pop    ds
  419df0:	aas    
  419df1:	repnz fist DWORD PTR ds:0xad2fe926
  419df8:	xor    esi,DWORD PTR [ebp-0x676d5c7f]
  419dfe:	cli    
  419dff:	in     al,0xad
  419e01:	outs   dx,DWORD PTR ds:[esi]
  419e02:	clc    
  419e03:	cmp    eax,0xb46c5f83
  419e08:	and    eax,0xaed6978
  419e0d:	cmp    bh,BYTE PTR [edi]
  419e0f:	jp     0x419d9f
  419e11:	xor    al,0xe9
  419e13:	cmc    
  419e14:	pop    ebp
  419e15:	sub    DWORD PTR [esi+0x1a],ebp
  419e18:	test   al,0x6c
  419e1a:	and    ch,dh
  419e1c:	aam    0x5f
  419e1e:	retf   
  419e1f:	imul   eax
  419e21:	mov    dh,0xca
  419e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e24:	call   0xc68a:0xa96fd5c1
  419e2b:	sbb    BYTE PTR [esi-0x56],0xc7
  419e2f:	or     DWORD PTR [ecx-0x26b02623],edx
  419e35:	sbb    BYTE PTR [edi+0x698a2dbd],bh
  419e3b:	out    dx,al
  419e3c:	enter  0xbfb1,0x93
  419e40:	jne    0x419e70
  419e42:	inc    ecx
  419e43:	sbb    BYTE PTR [edx+0x74],dl
  419e46:	fdiv   QWORD PTR [ebx-0x5a2cea2c]
  419e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e4d:	pop    ebp
  419e4e:	mov    esp,0xbf88d65e
  419e53:	pop    es
  419e54:	in     al,dx
  419e55:	pusha  
  419e56:	xor    BYTE PTR [ebx+0xbeec524],dh
  419e5c:	ja     0x419e9b
  419e5e:	aad    0xa4
  419e60:	pushf  
  419e61:	bound  edx,QWORD PTR [ecx]
  419e63:	or     al,0x56
  419e65:	loop   0x419e11
  419e67:	jmp    0x4cd8fc3f
  419e6c:	(bad)  
  419e6d:	dec    edx
  419e6e:	fld    DWORD PTR [ecx-0x2dc8e49a]
  419e74:	dec    esp
  419e75:	jmp    0x419e19
  419e77:	stos   DWORD PTR es:[edi],eax
  419e78:	fcomip st,st(4)
  419e7a:	arpl   cx,dx
  419e7c:	push   ecx
  419e7d:	nop
  419e7e:	test   edx,0x8cffd076
  419e84:	ins    DWORD PTR es:[edi],dx
  419e85:	scas   al,BYTE PTR es:[edi]
  419e86:	lds    esi,FWORD PTR [esi+0xf]
  419e89:	scas   al,BYTE PTR es:[edi]
  419e8a:	in     al,0xee
  419e8c:	inc    ebp
  419e8d:	popf   
  419e8e:	jb     0x419e5a
  419e90:	test   BYTE PTR [esi+eiz*2],al
  419e93:	nop
  419e94:	out    dx,eax
  419e95:	(bad)  
  419e96:	imul   edi,ebx,0xbf9326b5
  419e9c:	(bad)  [edi-0x74]
  419e9f:	loop   0x419eb8
  419ea1:	adc    al,0x0
  419ea3:	push   edi
  419ea4:	das    
  419ea5:	dec    eax
  419ea6:	pop    ecx
  419ea7:	stos   DWORD PTR es:[edi],eax
  419ea8:	push   ebp
  419ea9:	or     ebp,DWORD PTR [eax+0x52]
  419eac:	xchg   edx,eax
  419ead:	sub    DWORD PTR [edi],0xfa890baf
  419eb3:	scas   al,BYTE PTR es:[edi]
  419eb4:	cld    
  419eb5:	repz xchg esp,eax
  419eb7:	xlat   BYTE PTR ds:[ebx]
  419eb8:	aad    0xc9
  419eba:	enter  0xb82c,0x44
  419ebe:	xchg   edi,eax
  419ebf:	inc    esi
  419ec0:	mov    bl,0x98
  419ec2:	and    edx,eax
  419ec4:	out    dx,al
  419ec5:	mov    ds:0x4357e4e2,al
  419eca:	push   esi
  419ecb:	inc    edi
  419ecc:	fdivr  DWORD PTR [eax-0x7dec3610]
  419ed2:	sub    DWORD PTR [edx-0xe026119],ebx
  419ed8:	pushf  
  419ed9:	cmp    eax,0xceb57e5c
  419ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419edf:	fmul   DWORD PTR [esi-0x50e38d95]
  419ee5:	xchg   edi,eax
  419ee6:	test   eax,0x49d175f3
  419eeb:	addr16 sub esi,ebx
  419eee:	jecxz  0x419f0b
  419ef0:	out    0xd8,al
  419ef2:	lock xchg edi,eax
  419ef4:	jno    0x419f0c
  419ef6:	or     BYTE PTR [edi-0x32],0x90
  419efa:	jp     0x419f3d
  419efc:	cwde   
  419efd:	call   0x23d76a7e
  419f02:	inc    ebx
  419f03:	xchg   ebp,eax
  419f04:	into   
  419f05:	jno    0x419eec
  419f07:	jge    0x419f70
  419f09:	stos   DWORD PTR es:[edi],eax
  419f0a:	pop    ecx
  419f0b:	mov    ah,0x33
  419f0d:	pop    esi
  419f0e:	add    eax,0xf58c0d9b
  419f13:	xchg   esi,eax
  419f14:	inc    eax
  419f15:	jg     0x419f5a
  419f17:	rol    BYTE PTR [ebp-0x4d],1
  419f1a:	pusha  
  419f1b:	inc    ebp
  419f1c:	inc    esi
  419f1d:	jae    0x419f9b
  419f1f:	xlat   BYTE PTR ds:[ebx]
  419f20:	jbe    0x419f84
  419f22:	into   
  419f23:	jbe    0x419f81
  419f25:	mov    ds:0xbf2e7c4d,al
  419f2a:	out    dx,eax
  419f2b:	out    0xe5,al
  419f2d:	push   eax
  419f2e:	cmp    bh,BYTE PTR cs:0x9323bbd2
  419f35:	or     BYTE PTR [edi+0x12],bl
  419f38:	out    0x3e,al
  419f3a:	push   es
  419f3b:	sar    BYTE PTR [eax+0x1c31a3fa],1
  419f41:	adc    cl,ah
  419f43:	push   es
  419f44:	xadd   edi,edi
  419f47:	push   ss
  419f48:	cmp    BYTE PTR [ebp+0x37],bl
  419f4b:	pop    esp
  419f4c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419f4e:	mov    al,0x37
  419f50:	cmp    DWORD PTR [ebx],edi
  419f52:	ficomp DWORD PTR [eax+0x3123ceda]
  419f58:	xchg   esp,eax
  419f59:	push   cs
  419f5a:	jo     0x419fd9
  419f5c:	mov    cl,0x36
  419f5e:	call   FWORD PTR [eax+ebx*8]
  419f61:	push   ecx
  419f62:	(bad)  
  419f63:	push   edi
  419f64:	jbe    0x419f23
  419f66:	jo     0x419fda
  419f68:	sbb    edi,ebp
  419f6a:	popa   
  419f6b:	jl     0x419f18
  419f6d:	retf   0xbc00
  419f70:	das    
  419f71:	sbb    ah,BYTE PTR [edi-0x64138a0b]
  419f77:	(bad)  
  419f78:	jle    0x419f8c
  419f7a:	jmp    0x3bcd008c
  419f7f:	or     DWORD PTR [esi+0x2a71f3c5],edi
  419f85:	dec    esi
  419f86:	sub    eax,0xc63a52f2
  419f8b:	lods   eax,DWORD PTR ds:[esi]
  419f8c:	ss or  eax,0xf67301d5
  419f92:	fwait
  419f93:	pop    edx
  419f94:	sti    
  419f95:	or     BYTE PTR [edi-0x5a],bh
  419f98:	inc    ebp
  419f99:	out    dx,eax
  419f9a:	jge    0x419fef
  419f9c:	pop    es
  419f9d:	add    esi,DWORD PTR [edx+0x27]
  419fa0:	mov    dh,0x4a
  419fa2:	cwde   
  419fa3:	pop    ss
  419fa4:	(bad)  
  419fa5:	data16 fsub QWORD PTR [edx-0x5d8f1896]
  419fac:	icebp  
  419fad:	jmp    0x41a010
  419faf:	(bad)  
  419fb0:	push   ebp
  419fb1:	jbe    0x419f51
  419fb3:	xor    eax,0x4dec2fc2
  419fb8:	imul   BYTE PTR [ebp+0x7c]
  419fbb:	mov    ch,0x93
  419fbd:	push   ecx
  419fbe:	cmp    eax,0x18010427
  419fc3:	(bad)  
  419fc4:	jecxz  0x419f57
  419fc6:	(bad)  
  419fc7:	push   ss
  419fc8:	dec    ecx
  419fc9:	scas   al,BYTE PTR es:[edi]
  419fca:	test   al,0x63
  419fcc:	add    al,0x9
  419fce:	outs   dx,DWORD PTR ds:[esi]
  419fcf:	dec    edi
  419fd0:	mov    cl,BYTE PTR [ebp-0x6298d944]
  419fd6:	push   es
  419fd7:	push   0x87b99eb3
  419fdc:	stos   BYTE PTR es:[edi],al
  419fdd:	in     al,dx
  419fde:	xor    al,0xb5
  419fe0:	js     0x419fe4
  419fe2:	xor    eax,0x6763d0a3
  419fe7:	clc    
  419fe8:	and    DWORD PTR [esi],edx
  419fea:	or     al,bl
  419fec:	mov    al,ds:0xb8ea7f04
  419ff1:	inc    ebx
  419ff2:	mov    ds:0x292a1323,eax
  419ff7:	and    DWORD PTR [ebx-0x1],ecx
  419ffa:	out    0x31,eax
  419ffc:	enter  0xb5ff,0x7
  41a000:	pop    edx
  41a001:	inc    ecx
  41a002:	sub    ebx,DWORD PTR [ebp+0x23735f6a]
  41a008:	fs dec esp
  41a00a:	mov    DWORD PTR [eax+0x75],ebp
  41a00d:	imul   esi,DWORD PTR ds:0x8bf1c1b9,0x83acf31f
  41a017:	fwait
  41a018:	repnz pop es
  41a01a:	int    0x64
  41a01c:	test   ah,al
  41a01e:	fcomp  DWORD PTR [esi]
  41a020:	xchg   DWORD PTR [ebp-0x6],esp
  41a023:	dec    ebx
  41a024:	addr16 pop edi
  41a026:	inc    edi
  41a027:	adc    edx,ecx
  41a029:	test   al,0x4d
  41a02b:	mul    DWORD PTR [edi+0x35]
  41a02e:	xor    DWORD PTR [esi-0xbdb4c24],edx
  41a034:	(bad)  
  41a035:	inc    DWORD PTR [edi+0x7d]
  41a038:	inc    edi
  41a039:	mov    ebx,ebx
  41a03b:	jl     0x41a069
  41a03d:	(bad)  
  41a03e:	aad    0x61
  41a040:	cmp    eax,0xa70ef8d3
  41a045:	sbb    al,BYTE PTR [ebp+edi*2-0x34]
  41a049:	add    al,0x67
  41a04b:	cmp    al,0x74
  41a04d:	call   0xab16b0bb
  41a052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a053:	fisttp DWORD PTR [ebp+0x36]
  41a056:	or     eax,0xffffffcc
  41a059:	mov    al,0x24
  41a05b:	stc    
  41a05c:	hlt    
  41a05d:	fidivr DWORD PTR [bp+si+0x36]
  41a061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a062:	cmp    edi,ecx
  41a064:	ret    0x326a
  41a067:	sahf   
  41a068:	ret    0xfd9f
  41a06b:	outs   dx,BYTE PTR ds:[esi]
  41a06c:	in     al,dx
  41a06d:	add    al,0xda
  41a06f:	inc    esp
  41a070:	jno    0x419ff5
  41a072:	(bad)  
  41a073:	xor    ch,BYTE PTR [ebx]
  41a075:	(bad)  
  41a076:	adc    edi,esi
  41a078:	inc    ebp
  41a079:	and    ecx,edx
  41a07b:	xlat   BYTE PTR ds:[ebx]
  41a07c:	or     eax,0xc7742f95
  41a081:	bound  eax,QWORD PTR [edi]
  41a083:	push   esi
  41a084:	cs nop
  41a086:	jle    0x41a0cc
  41a088:	xchg   ebx,eax
  41a089:	pop    ebp
  41a08a:	lock pop ss
  41a08c:	jb     0x41a06e
  41a08e:	popf   
  41a08f:	(bad)  
  41a090:	popf   
  41a091:	mov    cl,0x93
  41a093:	add    eax,0x61b1f3da
  41a098:	cmp    al,0xf1
  41a09a:	sbb    al,0x6f
  41a09c:	mov    ds:0xf89f7e23,al
  41a0a1:	push   DWORD PTR [ebx+0x1395fd2e]
  41a0a7:	cli    
  41a0a8:	out    0x91,al
  41a0aa:	xchg   edx,eax
  41a0ab:	rcr    DWORD PTR [esi],1
  41a0ad:	not    eax
  41a0af:	xor    esi,DWORD PTR [edi]
  41a0b1:	test   DWORD PTR [eax],ebx
  41a0b3:	ret    0x52a4
  41a0b6:	out    dx,al
  41a0b7:	in     al,dx
  41a0b8:	push   ds
  41a0b9:	jmp    0x68e0:0x5bba4aec
  41a0c0:	xchg   DWORD PTR [ebp+0x64df2fc3],edi
  41a0c6:	bound  edx,QWORD PTR [bp-0x55c7]
  41a0cb:	or     eax,0xc7270e52
  41a0d0:	cmp    BYTE PTR [eax],ch
  41a0d2:	dec    esp
  41a0d3:	ret    0x6cc1
  41a0d6:	(bad)  
  41a0d7:	xor    DWORD PTR [esi],0x74
  41a0da:	pop    ss
  41a0db:	inc    esp
  41a0dc:	sbb    eax,0x9c79a544
  41a0e1:	stos   DWORD PTR es:[edi],eax
  41a0e2:	push   eax
  41a0e3:	xor    DWORD PTR [ecx+0x3cdd2b92],ecx
  41a0e9:	jns    0x41a0ea
  41a0eb:	nop
  41a0ec:	jmp    DWORD PTR [ebx]
  41a0ee:	dec    eax
  41a0ef:	stc    
  41a0f0:	mov    ah,0x90
  41a0f2:	jbe    0x41a0f0
  41a0f4:	add    DWORD PTR [eax-0x239cf7a],eax
  41a0fa:	or     al,0xae
  41a0fc:	dec    ebx
  41a0fd:	sub    eax,0xcce51dda
  41a102:	inc    BYTE PTR [ebx+edx*2+0x52dbc960]
  41a109:	ja     0x41a17a
  41a10b:	cmp    ah,BYTE PTR [ebx-0x17bf4ed3]
  41a111:	je     0x41a15f
  41a113:	jne    0x41a0f0
  41a115:	lods   al,BYTE PTR ds:[esi]
  41a116:	xor    al,dl
  41a118:	test   al,0xc9
  41a11a:	dec    esi
  41a11b:	aaa    
  41a11c:	pop    ss
  41a11d:	js     0x41a126
  41a11f:	fidivr WORD PTR [eax+0x25]
  41a122:	xchg   esp,eax
  41a123:	dec    edi
  41a124:	inc    edi
  41a125:	mov    eax,0x72ba4761
  41a12a:	je     0x41a0ea
  41a12c:	pop    ecx
  41a12d:	jo     0x41a1a7
  41a12f:	pop    ss
  41a130:	clc    
  41a131:	pushf  
  41a132:	sub    DWORD PTR [ebp+0x74066261],0x74
  41a139:	jge    0x41a0ea
  41a13b:	scas   al,BYTE PTR es:[edi]
  41a13c:	pop    ebx
  41a13d:	ret    0x7df9
  41a140:	sbb    eax,0x3f07b3f0
  41a145:	push   cs
  41a146:	push   ecx
  41a147:	mov    al,0x53
  41a149:	dec    edx
  41a14a:	in     al,dx
  41a14b:	pop    edi
  41a14c:	xor    al,0xfc
  41a14e:	fsubr  QWORD PTR [edi-0x64bb7ac6]
  41a154:	ins    DWORD PTR es:[edi],dx
  41a155:	mov    esi,0x36a213a8
  41a15a:	retf   
  41a15b:	enter  0xc31d,0xa8
  41a15f:	or     edi,edx
  41a161:	mov    BYTE PTR [ecx-0x6b],cl
  41a164:	fiadd  DWORD PTR [edi+0x7c8f084e]
  41a16a:	fcom   QWORD PTR [ebx+0x10]
  41a16d:	and    ah,dl
  41a16f:	jmp    0xfc07:0xde6a06f8
  41a176:	adc    ch,cl
  41a178:	mov    edx,0x638fcc22
  41a17d:	cmp    al,0x53
  41a17f:	jbe    0x41a14b
  41a181:	or     esi,ebp
  41a183:	xlat   BYTE PTR ds:[ebx]
  41a184:	xor    al,0x30
  41a186:	int    0xd1
  41a188:	push   eax
  41a189:	mov    ecx,0x1fc84d8b
  41a18e:	jbe    0x41a1e2
  41a190:	jg     0x41a11a
  41a192:	pop    edi
  41a193:	push   edi
  41a194:	out    dx,al
  41a195:	les    esi,FWORD PTR [ebx+0x4a]
  41a198:	mov    ds:0x1a61754a,eax
  41a19d:	(bad)  [ecx]
  41a19f:	sbb    BYTE PTR [ecx+0x40],al
  41a1a2:	ret    
  41a1a3:	xchg   esi,eax
  41a1a4:	repz sti 
  41a1a6:	fisubr DWORD PTR [edi-0x56]
  41a1a9:	pop    edx
  41a1aa:	jo     0x41a16a
  41a1ac:	repz inc esi
  41a1ae:	sbb    al,0xfc
  41a1b0:	enter  0x3d02,0x3e
  41a1b4:	mov    al,ds:0x68e62383
  41a1b9:	xor    eax,0x77af3aca
  41a1be:	sar    DWORD PTR [esi],1
  41a1c0:	jb     0x41a1cf
  41a1c2:	jne    0x41a23c
  41a1c4:	and    eax,0xba2ac07f
  41a1c9:	hlt    
  41a1ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1cb:	inc    ebp
  41a1cc:	sub    BYTE PTR [ebp+ebx*1+0xa03d955],bh
  41a1d3:	outs   dx,BYTE PTR ds:[esi]
  41a1d4:	test   DWORD PTR [ebx+0x41],edi
  41a1d7:	ret    0xf72d
  41a1da:	jmp    0x41a1e3
  41a1dc:	retf   
  41a1dd:	and    DWORD PTR [edx-0x671ddcdb],0xc45dc902
  41a1e7:	xchg   edx,eax
  41a1e8:	cmp    BYTE PTR [ebx-0x48fbdca5],bl
  41a1ee:	shl    DWORD PTR [edi+0x25],1
  41a1f1:	jae    0x41a215
  41a1f3:	and    BYTE PTR [eax+0x5cf19dc6],al
  41a1f9:	in     eax,0xaa
  41a1fb:	shr    esi,0x36
  41a1fe:	sub    eax,DWORD PTR [eax+ebp*8+0x19]
  41a202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a203:	cli    
  41a204:	gs jbe 0x41a1cd
  41a207:	rcr    BYTE PTR [ecx-0x15f1da09],1
  41a20d:	mov    esi,0x84ad3564
  41a212:	scas   al,BYTE PTR es:[edi]
  41a213:	push   esp
  41a214:	cmp    dl,ch
  41a216:	sbb    cl,bl
  41a218:	jecxz  0x41a240
  41a21a:	push   cs
  41a21b:	sbb    DWORD PTR [eax+eax*8],esp
  41a21e:	cmp    BYTE PTR [ebp+0x19d4df05],cl
  41a224:	or     BYTE PTR [ecx-0x130eb7b],al
  41a22a:	cmc    
  41a22b:	gs mov ah,0xa
  41a22e:	push   ss
  41a22f:	and    DWORD PTR [eax+esi*8+0x1b],edx
  41a233:	add    dl,BYTE PTR [eax+0x7e6c7703]
  41a239:	imul   eax,DWORD PTR [esi+ebx*2-0x24],0x5b07ecb7
  41a241:	mov    esi,0x6964be5f
  41a246:	pop    edx
  41a247:	cmp    ebp,DWORD PTR [esi-0x304fb1a7]
  41a24d:	push   0xfffffff0
  41a24f:	pop    es
  41a250:	(bad)  
  41a252:	mov    bh,0xf6
  41a254:	pop    ebp
  41a255:	mov    ecx,0x8e9aeaa0
  41a25a:	jo     0x41a262
  41a25c:	loope  0x41a232
  41a25e:	adc    edx,esp
  41a260:	inc    esi
  41a261:	push   ds
  41a262:	shl    DWORD PTR [ebp-0x1a956fcd],0xf0
  41a269:	mov    bh,0x26
  41a26b:	lods   al,BYTE PTR ds:[esi]
  41a26c:	mov    cl,0xd
  41a26e:	add    DWORD PTR [edx+0xa6374fd],eax
  41a274:	mov    dl,0x88
  41a276:	sahf   
  41a277:	push   es
  41a278:	mov    bl,0xd3
  41a27a:	lock dec esp
  41a27c:	inc    ebp
  41a27d:	add    eax,0xc4a88787
  41a282:	mov    edi,0x80a2f142
  41a287:	mov    ah,0xe
  41a289:	lahf   
  41a28a:	jp     0x41a284
  41a28c:	stos   DWORD PTR es:[edi],eax
  41a28d:	stc    
  41a28e:	repnz mov esp,DWORD PTR [esi]
  41a291:	sub    eax,0x54f0d0dc
  41a296:	xchg   esi,eax
  41a297:	mov    ch,dh
  41a299:	adc    eax,DWORD PTR [edx-0x29eae37a]
  41a29f:	xchg   ecx,eax
  41a2a0:	(bad)
  41a2a3:	dec    edi
  41a2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a5:	add    al,0xd1
  41a2a7:	lahf   
  41a2a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a9:	cwde   
  41a2aa:	das    
  41a2ab:	xchg   esp,eax
  41a2ac:	int    0x71
  41a2ae:	sub    al,0x99
  41a2b0:	xchg   esp,eax
  41a2b1:	fisubr WORD PTR [edx-0x1a]
  41a2b4:	(bad)  
  41a2b5:	pop    ds
  41a2b6:	pop    edx
  41a2b7:	and    eax,0x89aad1af
  41a2bc:	jne    0x41a32a
  41a2be:	jg     0x41a33d
  41a2c0:	sar    DWORD PTR [edx+eiz*2-0x2f],0xb6
  41a2c5:	lods   al,BYTE PTR ds:[esi]
  41a2c6:	mov    edi,0x53e84160
  41a2cb:	jg     0x41a315
  41a2cd:	push   es
  41a2ce:	xor    eax,0x9f89e72
  41a2d3:	je     0x41a277
  41a2d5:	pop    eax
  41a2d6:	retf   
  41a2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2d8:	jmp    0x41a2ac
  41a2da:	and    al,0xdf
  41a2dc:	popf   
  41a2dd:	lds    ebx,FWORD PTR [ebp-0x55]
  41a2e0:	and    eax,0xcbeaffec
  41a2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e6:	sub    DWORD PTR [edx+ecx*1-0x72],esi
  41a2ea:	pop    ss
  41a2eb:	pop    es
  41a2ec:	shr    DWORD PTR [edi-0x522f42f1],1
  41a2f2:	push   ebx
  41a2f3:	lock fwait
  41a2f5:	or     BYTE PTR [ebp-0x19],ch
  41a2f8:	je     0x41a2a4
  41a2fa:	xlat   BYTE PTR ds:[ebx]
  41a2fb:	add    eax,0x9d37990b
  41a300:	(bad)  
  41a301:	stc    
  41a302:	js     0x41a2ad
  41a304:	out    0xcd,al
  41a306:	or     DWORD PTR [esi],eax
  41a308:	push   edx
  41a309:	outs   dx,DWORD PTR ds:[esi]
  41a30a:	fldenv [edx+eiz*2]
  41a30d:	aaa    
  41a30e:	adc    bh,BYTE PTR [eax]
  41a310:	jne    0x41a31a
  41a312:	xchg   ebx,eax
  41a313:	xchg   esi,eax
  41a314:	scas   eax,DWORD PTR es:[edi]
  41a315:	lods   eax,DWORD PTR ds:[esi]
  41a316:	and    edi,esi
  41a318:	addr16 call 0x8fa8ea44
  41a31e:	inc    ecx
  41a31f:	dec    ebp
  41a320:	(bad)  
  41a321:	fnstenv [ebx-0x5ae6a068]
  41a327:	lds    esp,FWORD PTR [ebx+0x5cb01faf]
  41a32d:	pop    ecx
  41a32e:	jbe    0x41a2f4
  41a330:	push   edi
  41a331:	mov    ebp,0x8146c3b3
  41a336:	xchg   edx,ebp
  41a338:	mov    bh,0xad
  41a33a:	sub    al,0x3c
  41a33c:	mov    dl,ch
  41a33e:	mov    BYTE PTR [eax],ch
  41a340:	mov    ebp,0x70fd5568
  41a345:	(bad)  
  41a346:	push   ebx
  41a347:	mul    BYTE PTR [eax]
  41a349:	(bad)
  41a34c:	popa   
  41a34d:	outs   dx,BYTE PTR ds:[esi]
  41a34e:	popa   
  41a34f:	lods   eax,DWORD PTR ds:[esi]
  41a350:	dec    ecx
  41a351:	jmp    0x41a319
  41a353:	and    al,0xb8
  41a355:	inc    ebx
  41a356:	and    BYTE PTR [esi+0x7579217],dl
  41a35c:	sub    al,0x62
  41a35e:	(bad)  
  41a35f:	cwde   
  41a360:	xor    eax,0xebe843ae
  41a365:	sub    al,0xba
  41a367:	js     0x41a373
  41a369:	outs   dx,BYTE PTR ds:[esi]
  41a36a:	mov    al,0x4a
  41a36c:	mov    esp,0xd1ba96e0
  41a371:	ja     0x41a32e
  41a373:	rcr    BYTE PTR [edx-0x1a080373],cl
  41a379:	fld    QWORD PTR [ebp+0x1c]
  41a37c:	push   es
  41a37d:	sti    
  41a37e:	cwde   
  41a37f:	sub    BYTE PTR [ecx+0x43ce31ad],0x25
  41a386:	jle    0x41a3d4
  41a388:	jecxz  0x41a408
  41a38a:	sar    DWORD PTR [edi+esi*4+0x604437c4],0xb0
  41a392:	sub    esp,DWORD PTR [edx-0x2b]
  41a395:	pop    ebx
  41a396:	inc    ebx
  41a397:	retf   
  41a398:	pop    ebp
  41a399:	test   eax,0x6fb39ecb
  41a39e:	cmp    ebx,ebx
  41a3a0:	mov    ecx,0x104a3e4
  41a3a5:	sub    DWORD PTR [esi-0x4d],esp
  41a3a8:	je     0x41a35a
  41a3aa:	and    BYTE PTR [edx-0x7],dh
  41a3ad:	and    edx,DWORD PTR [esi]
  41a3af:	arpl   WORD PTR [eax],bx
  41a3b1:	jmp    0x4d06dbb6
  41a3b6:	pop    edi
  41a3b7:	or     al,0x49
  41a3b9:	add    al,0xc8
  41a3bb:	inc    ebp
  41a3bc:	outs   dx,DWORD PTR ds:[esi]
  41a3bd:	dec    edx
  41a3be:	cmp    edi,DWORD PTR [edi+ebp*2]
  41a3c1:	bound  ecx,QWORD PTR [edx+0x76]
  41a3c4:	loopne 0x41a425
  41a3c6:	xor    bl,BYTE PTR [ebx-0x38022f18]
  41a3cc:	iret   
  41a3cd:	and    cl,BYTE PTR [edi]
  41a3cf:	shl    al,cl
  41a3d1:	ret    
  41a3d2:	test   DWORD PTR [edx-0x79],0xfafc88b3
  41a3d9:	xor    DWORD PTR [esi-0x4b],ebp
  41a3dc:	mov    WORD PTR [eax],fs
  41a3de:	stc    
  41a3df:	push   edx
  41a3e0:	aam    0xba
  41a3e2:	hlt    
  41a3e3:	xchg   ebp,eax
  41a3e4:	cmp    BYTE PTR [edi],al
  41a3e6:	mov    ebx,0xfc45830
  41a3eb:	ficomp DWORD PTR [esi+esi*4-0x50]
  41a3ef:	leave  
  41a3f0:	retf   
  41a3f1:	mov    es,esi
  41a3f3:	fsin   
  41a3f5:	scas   eax,DWORD PTR es:[edi]
  41a3f6:	push   es
  41a3f7:	adc    ebp,DWORD PTR [eax]
  41a3f9:	clc    
  41a3fa:	push   edx
  41a3fb:	cmp    cl,BYTE PTR [ebp-0x59]
  41a3fe:	sub    eax,0xd6b91d5e
  41a404:	mov    WORD PTR [esi],fs
  41a406:	arpl   WORD PTR [edi],ax
  41a408:	fmul   st,st(4)
  41a40a:	mov    ch,0x7b
  41a40c:	mov    dh,0xd6
  41a40e:	idiv   BYTE PTR [eax+0x10]
  41a411:	cwde   
  41a412:	xor    BYTE PTR [edi-0x7e51990c],al
  41a418:	stos   DWORD PTR es:[edi],eax
  41a419:	add    ebp,DWORD PTR [ebp-0x48]
  41a41c:	dec    esp
  41a41d:	lahf   
  41a41e:	dec    edx
  41a41f:	js     0x41a441
  41a421:	cdq    
  41a422:	mov    esi,0xc004b39d
  41a427:	hlt    
  41a428:	and    eax,edi
  41a42a:	cmp    al,0x88
  41a42c:	pushf  
  41a42d:	add    ebp,DWORD PTR [eax-0x6a]
  41a430:	xchg   ebp,eax
  41a431:	jb     0x41a42c
  41a433:	push   ss
  41a434:	outs   dx,BYTE PTR ds:[esi]
  41a435:	mov    al,0xf5
  41a437:	fidiv  WORD PTR [ecx-0x3d]
  41a43a:	add    DWORD PTR [esi+esi*1+0x7a],ecx
  41a43e:	xor    eax,0xc0d04974
  41a443:	dec    ebp
  41a444:	imul   ecx,DWORD PTR [eax+0x1c],0x13
  41a448:	loopne 0x41a49a
  41a44a:	aaa    
  41a44b:	sbb    DWORD PTR [eax+0xf],0xfffffffd
  41a44f:	push   es
  41a450:	outs   dx,DWORD PTR ds:[esi]
  41a451:	adc    al,0xaa
  41a453:	cmp    al,BYTE PTR [eax+0xe3721aa]
  41a459:	das    
  41a45a:	aad    0x9e
  41a45c:	mov    bl,0x4a
  41a45e:	pop    ds
  41a45f:	xchg   DWORD PTR [eax+0x38d5d2a9],esp
  41a465:	outs   dx,DWORD PTR ds:[esi]
  41a466:	shl    DWORD PTR [ebx-0xb646107],0x2b
  41a46d:	pop    ss
  41a46e:	dec    esi
  41a46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a470:	sub    eax,0x33c6de55
  41a475:	mov    esi,es
  41a477:	stos   BYTE PTR es:[edi],al
  41a478:	jl     0x41a424
  41a47a:	iret   
  41a47b:	sub    bx,WORD PTR [ebx]
  41a47e:	pop    edx
  41a47f:	cmp    ch,0x97
  41a482:	(bad)  
  41a483:	pop    esp
  41a484:	loop   0x41a437
  41a486:	pop    ebx
  41a487:	mov    bl,0xb1
  41a489:	nop
  41a48a:	push   0x12
  41a48c:	inc    esi
  41a48d:	scas   al,BYTE PTR es:[edi]
  41a48e:	mov    eax,0x338dbb32
  41a493:	mov    al,bl
  41a495:	mov    bl,0xb7
  41a497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a498:	stc    
  41a499:	xchg   esp,eax
  41a49a:	aam    0x19
  41a49c:	(bad)  
  41a49d:	sub    eax,0xa03c68c7
  41a4a2:	js     0x41a43e
  41a4a4:	loope  0x41a445
  41a4a6:	lahf   
  41a4a7:	fdiv   QWORD PTR [eax-0x62]
  41a4aa:	das    
  41a4ab:	imul   ebp,DWORD PTR [ebx-0x502b9abd],0xffffffd4
  41a4b2:	xchg   ebp,eax
  41a4b3:	fistp  DWORD PTR [ecx+0x7147e993]
  41a4b9:	leave  
  41a4ba:	pop    eax
  41a4bb:	iret   
  41a4bc:	out    0x34,eax
  41a4be:	mov    ch,0xc1
  41a4c0:	in     eax,0x3b
  41a4c2:	sub    eax,0x6c47b753
  41a4c7:	imul   ebx,DWORD PTR [ecx-0x79],0x6041d9d7
  41a4ce:	fcomi  st,st(6)
  41a4d0:	std    
  41a4d1:	aas    
  41a4d2:	jns    0x41a45a
  41a4d4:	inc    esp
  41a4d5:	rcl    DWORD PTR [esi+esi*8],1
  41a4d8:	je     0x41a50b
  41a4da:	adc    ebp,DWORD PTR [ebx]
  41a4dc:	lock sub ch,BYTE PTR [ebp-0x129fa490]
  41a4e3:	daa    
  41a4e4:	lock loopne 0x41a4e3
  41a4e7:	rcr    ch,0xd7
  41a4ea:	mov    ecx,0x3e9d8b1e
  41a4ef:	idiv   DWORD PTR [ecx-0x5ceb7783]
  41a4f5:	inc    esi
  41a4f6:	sub    ah,BYTE PTR [esi+0x258538ff]
  41a4fc:	repz aam 0xed
  41a4ff:	lock xchg edi,eax
  41a501:	call   0x2446:0x77cc4226
  41a508:	xchg   ebp,eax
  41a509:	mov    bh,0x8b
  41a50b:	xlat   BYTE PTR ds:[ebx]
  41a50c:	push   esi
  41a50d:	inc    di
  41a50f:	sbb    eax,0x25b8b28d
  41a514:	push   ebp
  41a515:	xor    BYTE PTR [ebp-0x4e],dh
  41a518:	mov    ebx,0x283252ec
  41a51d:	or     DWORD PTR [edx*2+0x1d96e59a],eax
  41a524:	xor    al,0xb6
  41a526:	or     al,0xc
  41a528:	xor    esi,DWORD PTR [edi+0xbb30e49]
  41a52e:	and    BYTE PTR [ebp+0x350f8ff0],dh
  41a534:	(bad)  
  41a535:	mov    edx,ebx
  41a537:	xor    DWORD PTR [ebx],esp
  41a539:	inc    edi
  41a53a:	cmp    bh,bl
  41a53c:	pop    edi
  41a53d:	lahf   
  41a53e:	add    ecx,DWORD PTR [ebp+eax*2+0x4f08082]
  41a545:	js     0x41a538
  41a547:	pop    esp
  41a548:	sahf   
  41a549:	or     eax,0x557f4a80
  41a54e:	adc    eax,0xaf7eda0
  41a553:	cli    
  41a554:	adc    DWORD PTR [edi],edi
  41a556:	jmp    0xeeeb:0x61897be3
  41a55d:	add    al,BYTE PTR [edi+0x37]
  41a560:	or     BYTE PTR [eax],dh
  41a562:	ja     0x41a4f5
  41a564:	adc    ebx,DWORD PTR [ebp-0x194fd13f]
  41a56a:	dec    ebp
  41a56b:	mov    dl,BYTE PTR [ecx-0x7cbafe4c]
  41a571:	cmp    edi,DWORD PTR [esi-0x3edb461f]
  41a577:	xor    DWORD PTR [edi-0x43],edi
  41a57a:	fsub   DWORD PTR [edx+eiz*1+0x25b48fe4]
  41a581:	push   edi
  41a582:	test   BYTE PTR [ecx+0x1a],bh
  41a585:	cld    
  41a586:	dec    ebp
  41a587:	mov    esp,0xfee0441c
  41a58c:	stc    
  41a58d:	out    dx,al
  41a58e:	push   edx
  41a58f:	stos   BYTE PTR es:[edi],al
  41a590:	daa    
  41a591:	and    eax,0xdb3a1927
  41a596:	fwait
  41a597:	js     0x41a5a6
  41a599:	stc    
  41a59a:	sub    esi,edx
  41a59c:	data16 loope 0x41a5fe
  41a59f:	scas   eax,DWORD PTR es:[edi]
  41a5a0:	dec    esi
  41a5a1:	jb     0x41a5f1
  41a5a3:	loope  0x41a595
  41a5a5:	adc    BYTE PTR [eax-0x4],bh
  41a5a8:	hlt    
  41a5a9:	dec    esi
  41a5aa:	es scas eax,DWORD PTR es:[edi]
  41a5ac:	call   0xc055:0x859d7638
  41a5b3:	lea    ecx,[eax]
  41a5b5:	jmp    0xdd7452d4
  41a5ba:	sbb    eax,0x323d8778
  41a5bf:	aad    0x97
  41a5c1:	xchg   ecx,eax
  41a5c2:	adc    eax,esp
  41a5c4:	jg     0x41a577
  41a5c6:	dec    ebx
  41a5c7:	mov    eax,0x415a0051
  41a5cc:	inc    edx
  41a5cd:	enter  0xdfb,0xc3
  41a5d1:	cmp    DWORD PTR [esi],esi
  41a5d3:	adc    eax,0xdf72f7e1
  41a5d8:	data16 aad 0xe0
  41a5db:	xchg   ebp,eax
  41a5dc:	mov    edi,0x54dae3ba
  41a5e1:	pop    es
  41a5e2:	(bad)  
  41a5e4:	xchg   ecx,eax
  41a5e5:	cmp    dh,dl
  41a5e7:	repz xchg esi,eax
  41a5e9:	mov    ds:0x1489e085,al
  41a5ee:	in     al,0xa4
  41a5f0:	xchg   ebx,eax
  41a5f1:	pop    es
  41a5f2:	dec    esi
  41a5f3:	jl     0x41a657
  41a5f5:	push   ebx
  41a5f6:	or     esi,esp
  41a5f8:	pop    esi
  41a5f9:	test   eax,0xd524dea2
  41a5fe:	mov    esp,0x3c0a81ed
  41a603:	test   al,0xba
  41a605:	jp     0x41a616
  41a607:	in     eax,0x5a
  41a609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a60a:	sub    eax,esp
  41a60c:	fisttp QWORD PTR [edi-0x31]
  41a60f:	xor    al,0xfc
  41a611:	mov    dh,0x68
  41a613:	dec    ebp
  41a614:	xchg   edx,eax
  41a615:	pop    ecx
  41a616:	push   es
  41a617:	icebp  
  41a618:	xor    BYTE PTR [edx],ah
  41a61a:	call   DWORD PTR [edi]
  41a61c:	adc    al,0xa2
  41a61e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a61f:	inc    esp
  41a620:	xor    BYTE PTR [ebx+edx*8-0x6a576009],0x46
  41a628:	and    al,BYTE PTR [edx+eax*2+0x1754f5f6]
  41a62f:	ss xchg esp,eax
  41a632:	mov    ds:0xe51c7afe,eax
  41a637:	dec    eax
  41a638:	sbb    eax,0x55213993
  41a63d:	shl    DWORD PTR [ecx],0x63
  41a640:	fcomip st,st(4)
  41a642:	mov    ebx,0xb6ea812e
  41a647:	(bad)  
  41a649:	mov    esp,0xdb7fe8c4
  41a64e:	addr16 xor eax,0x20e7b8d5
  41a654:	sub    dh,BYTE PTR [eax]
  41a656:	push   ebx
  41a657:	dec    edi
  41a658:	rol    al,1
  41a65a:	repnz pop ss
  41a65c:	adc    DWORD PTR [esi+edi*4],esp
  41a65f:	jnp    0x41a628
  41a661:	outs   dx,BYTE PTR ds:[esi]
  41a662:	cmp    dh,BYTE PTR [ebx+0x23]
  41a665:	scas   eax,DWORD PTR es:[edi]
  41a666:	jbe    0x41a67f
  41a668:	or     eax,0xe1c8cccc
  41a66d:	xor    BYTE PTR [ebp+ebx*8+0x6e9b9ac2],dl
  41a674:	ins    DWORD PTR es:[edi],dx
  41a675:	and    DWORD PTR [ecx+0x463948b4],ebp
  41a67b:	icebp  
  41a67c:	adc    DWORD PTR [ebx+0x38],edx
  41a67f:	outs   dx,DWORD PTR ds:[esi]
  41a680:	mov    eax,0x3e0d4529
  41a685:	add    eax,0xdb460a9a
  41a68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a68b:	out    0x68,eax
  41a68d:	lds    esp,FWORD PTR [edx-0x6079e3f]
  41a693:	ret    
  41a694:	hlt    
  41a695:	add    edi,ebx
  41a697:	int    0xd3
  41a699:	outs   dx,DWORD PTR ds:[esi]
  41a69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a69b:	add    BYTE PTR [edx+0x7d7ba0a9],ah
  41a6a1:	mov    ah,0x30
  41a6a3:	fldln2 
  41a6a5:	je     0x41a6cf
  41a6a7:	jmp    DWORD PTR [ecx+eax*1-0x5d]
  41a6ab:	call   0xa986:0x7b2e6fd6
  41a6b2:	sbb    al,0xf4
  41a6b4:	xchg   BYTE PTR [edi-0x6782bce],ah
  41a6ba:	je     0x41a718
  41a6bc:	lds    ebp,FWORD PTR [ecx]
  41a6be:	lea    esp,[edi]
  41a6c0:	cdq    
  41a6c1:	mov    bl,0x6c
  41a6c3:	sar    BYTE PTR [edi+eax*2-0x4c],cl
  41a6c7:	cmp    ch,BYTE PTR [eax-0x4]
  41a6ca:	sahf   
  41a6cb:	jecxz  0x41a691
  41a6cd:	mov    ds:0x7dfcee61,eax
  41a6d2:	push   esi
  41a6d3:	adc    eax,0x68afe1fa
  41a6d8:	fwait
  41a6d9:	not    BYTE PTR ds:0xd365672c
  41a6df:	loop   0x41a6f5
  41a6e1:	inc    esp
  41a6e2:	sar    BYTE PTR [ebx],1
  41a6e4:	adc    ebx,DWORD PTR [ecx+0x29]
  41a6e7:	pop    ebp
  41a6e8:	xchg   dl,al
  41a6ea:	jecxz  0x41a6d7
  41a6ec:	pop    ebp
  41a6ed:	jl     0x41a6a9
  41a6ef:	aam    0x86
  41a6f1:	leave  
  41a6f2:	sbb    eax,0xe0d81aa7
  41a6f7:	push   0xffffff91
  41a6f9:	outs   dx,BYTE PTR ds:[esi]
  41a6fa:	push   ss
  41a6fb:	aas    
  41a6fc:	xor    eax,0xf25c6b65
  41a701:	bound  ebp,QWORD PTR [eax+edi*4-0x1e]
  41a705:	jns    0x41a6c4
  41a707:	je     0x41a6bb
  41a709:	repnz add DWORD PTR [edi],ecx
  41a70c:	jmp    0x91bf:0x3724ecb8
  41a713:	push   cs
  41a714:	mov    bl,BYTE PTR [ebp-0x6e]
  41a717:	sbb    ah,al
  41a719:	mov    esi,0xdf3b1f98
  41a71e:	mov    ecx,0xe64dac67
  41a723:	jne    0x41a713
  41a725:	cmp    al,0xf8
  41a727:	call   0x11f1ef25
  41a72c:	lock ja 0x41a75b
  41a72f:	ret    0xd282
  41a732:	ret    
  41a733:	lahf   
  41a734:	push   es
  41a735:	jge    0x41a726
  41a737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a738:	push   edi
  41a739:	push   cs
  41a73a:	jg     0x41a761
  41a73c:	shl    edi,0x4a
  41a73f:	sbb    DWORD PTR [ebp+0x71bbc307],0x65caa357
  41a749:	loopne 0x41a71f
  41a74b:	lods   al,BYTE PTR ds:[esi]
  41a74c:	enter  0xb2c4,0x4a
  41a750:	mov    eax,cs
  41a752:	pop    es
  41a753:	mov    al,ds:0x9b4bd7cc
  41a758:	sbb    ah,BYTE PTR [ebx]
  41a75a:	lahf   
  41a75b:	sbb    cl,BYTE PTR gs:[edi+0xd]
  41a75f:	mov    dl,0xfd
  41a761:	sub    al,dh
  41a763:	gs inc edi
  41a765:	sub    esi,DWORD PTR [ebp-0x1e7b0a85]
  41a76b:	in     al,0x2d
  41a76d:	je     0x41a70b
  41a76f:	jno    0x41a78b
  41a771:	fadd   QWORD PTR [edi+ebp*2+0x16]
  41a775:	cld    
  41a776:	adc    esp,DWORD PTR [eax-0x1a]
  41a779:	loope  0x41a774
  41a77b:	fidiv  DWORD PTR [esi-0x22b0667d]
  41a781:	ja     0x41a7a9
  41a783:	xor    DWORD PTR [ebx+0x6371825f],edx
  41a789:	shr    BYTE PTR ds:0xba229e6f,cl
  41a78f:	cs or  bl,bl
  41a792:	mov    bl,0x28
  41a794:	neg    DWORD PTR [edx-0x75a6a41d]
  41a79a:	adc    esi,ecx
  41a79c:	retf   0x86df
  41a79f:	rcr    edi,0xe5
  41a7a2:	test   BYTE PTR ds:0xa1dda497,al
  41a7a8:	inc    ebx
  41a7a9:	cmp    ebx,DWORD PTR [ebp+0x7055919d]
  41a7af:	cdq    
  41a7b0:	ret    
  41a7b1:	mov    cl,0x90
  41a7b3:	mov    ds:0x5f95844a,al
  41a7b8:	jecxz  0x41a7cf
  41a7ba:	jp     0x41a780
  41a7bc:	add    ebx,DWORD PTR [edx+0x5a4694ed]
  41a7c2:	or     cl,BYTE PTR [ebx+0x5589ec55]
  41a7c8:	or     cl,ch
  41a7ca:	mov    ecx,0x8b000023
  41a7cf:	push   ebp
  41a7d0:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x37b06bd2]
  41a82d:	call   DWORD PTR [eax+0x407c7d13]
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	js     0x41a7da
  41a838:	sbb    BYTE PTR [esi+0x4fcaa940],cl
  41a83e:	ins    BYTE PTR es:[edi],dx
  41a83f:	xchg   esp,eax
  41a840:	in     al,0xcc
  41a842:	stc    
  41a843:	xchg   ebx,eax
  41a844:	push   0x3b
  41a846:	shl    esi,1
  41a848:	pushf  
  41a849:	mov    ebp,0xcff803f4
  41a84e:	adc    eax,0xe746dfd5
  41a853:	jecxz  0x41a81d
  41a855:	cmp    DWORD PTR [esp+ebx*1+0x35],0xffffff85
  41a85a:	ror    esp,1
  41a85c:	cwde   
  41a85d:	cmp    edx,DWORD PTR ds:0x7f1bfbb6
  41a863:	xchg   BYTE PTR [ebx],bh
  41a865:	in     eax,0x94
  41a867:	dec    esp
  41a868:	mov    DWORD PTR [eax+0x49],esp
  41a86b:	and    DWORD PTR [esi],esp
  41a86d:	shl    BYTE PTR fs:[eax-0x66],0x41
  41a872:	sbb    al,0x40
  41a874:	pop    esp
  41a875:	out    0x63,al
  41a877:	arpl   WORD PTR [edx],sp
  41a879:	popa   
  41a87a:	or     DWORD PTR [edi+eiz*8-0x75],ecx
  41a87e:	out    dx,eax
  41a87f:	sahf   
  41a880:	(bad)  
  41a881:	bound  edi,QWORD PTR [esi+0x49746d93]
  41a887:	or     cl,BYTE PTR [esi+eiz*2+0xd]
  41a88b:	mov    esp,0x85336027
  41a890:	adc    ecx,esp
  41a892:	pop    ds
  41a893:	push   edi
  41a894:	add    eax,0x2ef541f4
  41a899:	inc    esp
  41a89a:	mov    DWORD PTR [edx-0x1970e837],0x3fd0218f
  41a8a4:	xchg   esp,eax
  41a8a5:	and    eax,0xc8e1d275
  41a8aa:	outs   dx,BYTE PTR es:[esi]
  41a8ac:	cwde   
  41a8ad:	and    al,0xdf
  41a8af:	jp     0x41a8f5
  41a8b1:	sbb    BYTE PTR [esi*4+0x782402e4],ah
  41a8b8:	test   DWORD PTR [edx-0x4c],ebx
  41a8bb:	cmp    BYTE PTR [edi-0x47f81bfe],bh
  41a8c1:	cmp    ah,al
  41a8c3:	in     eax,dx
  41a8c4:	nop
  41a8c5:	mov    al,0xa0
  41a8c7:	ins    BYTE PTR es:[edi],dx
  41a8c8:	add    ebx,DWORD PTR [esi+0xe]
  41a8cb:	inc    esp
  41a8cc:	dec    eax
  41a8cd:	(bad)  
  41a8ce:	jge    0x41a85c
  41a8d0:	cs stc 
  41a8d2:	xor    BYTE PTR [eax],ch
  41a8d4:	lahf   
  41a8d5:	push   edx
  41a8d6:	and    DWORD PTR [esi-0x2e],0xffffffbe
  41a8da:	sbb    bh,BYTE PTR [edi+ecx*8]
  41a8dd:	imul   ebp,DWORD PTR [ecx+ebp*2-0x649c7357],0xffffffb4
  41a8e5:	mov    edx,0x647b51a0
  41a8ea:	push   edi
  41a8eb:	mov    esp,esp
  41a8ed:	jmp    0x8407:0x6b5bddd0
  41a8f4:	adc    ecx,ecx
  41a8f6:	ja     0x41a8de
  41a8f8:	rcl    bh,1
  41a8fa:	cld    
  41a8fb:	scas   al,BYTE PTR es:[edi]
  41a8fc:	jnp    0x41a88c
  41a8fe:	repz test bh,al
  41a901:	dec    edx
  41a902:	xchg   edx,eax
  41a903:	das    
  41a904:	mov    ecx,0xa0754fdd
  41a909:	jae    0x41a8a7
  41a90b:	fsub   DWORD PTR [esp+ebp*4+0x4ff6c9f5]
  41a912:	mov    ecx,0x9fd48216
  41a917:	iret   
  41a918:	test   DWORD PTR [esp+esi*4+0x4d],0x4dc500cd
  41a920:	(bad)  
  41a921:	jnp    0x41a8fe
  41a923:	mul    BYTE PTR [esi+ebx*4-0x2f]
  41a927:	imul   eax,DWORD PTR [ecx-0x1ca4319f],0x58fcb127
  41a931:	sub    bl,BYTE PTR [eax-0x37fea61]
  41a937:	inc    edx
  41a938:	sbb    BYTE PTR [esp+ebx*4],ch
  41a93b:	jae    0x41a8ee
  41a93d:	pop    esp
  41a93e:	cmp    ch,ah
  41a940:	add    al,0x8e
  41a942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a943:	pop    eax
  41a944:	loope  0x41a94a
  41a946:	jnp    0x41a971
  41a948:	push   cs
  41a949:	imul   DWORD PTR [edx-0x49]
  41a94c:	xchg   edi,eax
  41a94d:	in     al,dx
  41a94e:	out    dx,al
  41a94f:	outs   dx,DWORD PTR ds:[esi]
  41a950:	xchg   cl,bh
  41a952:	push   edi
  41a953:	lahf   
  41a954:	mov    esp,0x26419974
  41a959:	pop    edi
  41a95a:	sbb    dl,dh
  41a95c:	add    ebp,DWORD PTR [ebp+esi*1-0x256b7103]
  41a963:	jmp    DWORD PTR [ebx+0x2d361e8e]
  41a969:	jno    0x41a954
  41a96b:	sbb    esp,DWORD PTR [ebx-0x66]
  41a96e:	adc    ch,BYTE PTR [edx+ebp*8]
  41a971:	pop    esp
  41a972:	iret   
  41a973:	out    dx,al
  41a974:	inc    edi
  41a975:	xor    cl,BYTE PTR [ebx+0x56]
  41a978:	push   edi
  41a979:	fnsave [edi]
  41a97b:	lahf   
  41a97c:	jae    0x41a9f4
  41a97e:	xor    BYTE PTR [edi],bl
  41a980:	or     ebx,ecx
  41a982:	retf   
  41a983:	sub    DWORD PTR [eax+0x1d],edi
  41a986:	add    al,0x50
  41a988:	mov    eax,0xe18fcb72
  41a98d:	jmp    0xb792b4a
  41a992:	xor    BYTE PTR [ebx+edi*8+0x7],dh
  41a996:	clc    
  41a997:	ficom  WORD PTR ds:0xe3adf820
  41a99d:	(bad)  
  41a99e:	and    dl,al
  41a9a0:	push   esp
  41a9a1:	mov    edi,0x7f811353
  41a9a6:	inc    eax
  41a9a7:	xchg   edx,eax
  41a9a8:	lea    ecx,[ebx+0x59689f99]
  41a9ae:	clc    
  41a9af:	push   es
  41a9b0:	pop    es
  41a9b1:	inc    edi
  41a9b2:	mov    ch,0x35
  41a9b4:	out    0xaf,eax
  41a9b6:	mov    ebx,DWORD PTR [ebx-0x4d]
  41a9b9:	ret    
  41a9ba:	jecxz  0x41aa15
  41a9bc:	pop    esi
  41a9bd:	mov    ds,edx
  41a9bf:	or     dl,dh
  41a9c1:	mov    esi,0x5cf86599
  41a9c6:	push   eax
  41a9c7:	out    0xe9,al
  41a9c9:	call   0xc890:0xf2de3c0b
  41a9d0:	ret    0xfc43
  41a9d3:	mov    al,0x81
  41a9d5:	dec    esp
  41a9d6:	pop    ss
  41a9d7:	push   ecx
  41a9d8:	inc    ebp
  41a9d9:	xor    DWORD PTR [eax+0x2],ecx
  41a9dc:	ret    0x1517
  41a9df:	jg     0x41a9c1
  41a9e1:	cs inc ecx
  41a9e3:	cmp    BYTE PTR [esi+0x300f2e5c],0xcc
  41a9ea:	inc    edi
  41a9eb:	jge    0x41a98d
  41a9ed:	loop   0x41a9c6
  41a9ef:	mov    edi,0x1d88f041
  41a9f4:	fs dec esp
  41a9f6:	pop    bx
  41a9f8:	hlt    
  41a9f9:	iret   
  41a9fa:	out    0xcf,al
  41a9fc:	cld    
  41a9fd:	xor    esp,DWORD PTR [esi+0x29e6433e]
  41aa03:	push   ebp
  41aa04:	pop    edi
  41aa05:	out    dx,eax
  41aa06:	(bad)  [edi-0x6a]
  41aa09:	ds mov cl,0x86
  41aa0c:	hlt    
  41aa0d:	pop    edx
  41aa0e:	push   edi
  41aa0f:	push   ecx
  41aa10:	imul   eax,esp,0xffffffb9
  41aa13:	ins    BYTE PTR es:[edi],dx
  41aa14:	cli    
  41aa15:	mov    cl,0x5
  41aa17:	dec    eax
  41aa18:	sbb    al,0xcf
  41aa1a:	push   esp
  41aa1b:	fsub   DWORD PTR [edx]
  41aa1d:	mov    ds:0x8110762c,al
  41aa22:	jo     0x41aa8b
  41aa24:	jo     0x41aa06
  41aa26:	or     eax,0x46fc6b3
  41aa2b:	out    0x0,eax
  41aa2d:	not    DWORD PTR fs:[edi]
  41aa30:	in     eax,dx
  41aa31:	outs   dx,DWORD PTR ds:[esi]
  41aa32:	jb     0x41a9ce
  41aa34:	sub    al,0x67
  41aa36:	ja     0x41a9fa
  41aa38:	cmp    ah,BYTE PTR [eax+0x77]
  41aa3b:	enter  0x48db,0x28
  41aa3f:	adc    DWORD PTR [eax],ebx
  41aa41:	repnz push esp
  41aa43:	loope  0x41aa1b
  41aa45:	rcl    edi,1
  41aa47:	and    eax,0x17347b33
  41aa4c:	fwait
  41aa4d:	jg     0x41aa82
  41aa4f:	nop
  41aa50:	jg     0x41aa07
  41aa52:	push   ebp
  41aa53:	sbb    ecx,DWORD PTR [edx+ebx*4+0x24]
  41aa57:	les    esp,FWORD PTR [eax-0x6e]
  41aa5a:	and    bl,BYTE PTR [edi]
  41aa5c:	add    ebp,ecx
  41aa5e:	dec    ecx
  41aa5f:	push   ss
  41aa60:	xchg   edi,eax
  41aa61:	push   es
  41aa62:	call   0x6bc42d1d
  41aa67:	jg     0x41a9ee
  41aa69:	shl    DWORD PTR [ecx+0x494e94df],cl
  41aa6f:	adc    eax,0x8f8afae0
  41aa74:	mov    edx,0xf8b974b2
  41aa79:	jns    0x41aaa9
  41aa7b:	fdivr  QWORD PTR [ebx+0x73]
  41aa7e:	jg     0x41aaff
  41aa80:	inc    edi
  41aa81:	xlat   BYTE PTR ds:[ebx]
  41aa82:	jns    0x41aa2b
  41aa84:	inc    ebx
  41aa85:	and    bh,ah
  41aa87:	push   0xf2daff57
  41aa8c:	and    bl,bh
  41aa8e:	jmp    0x5b4309d8
  41aa93:	jb     0x41aa28
  41aa95:	fwait
  41aa96:	jle    0x41aa85
  41aa98:	dec    esp
  41aa99:	repz fsubp st(6),st
  41aa9c:	clc    
  41aa9d:	push   ebx
  41aa9e:	loop   0x41aab0
  41aaa0:	sub    BYTE PTR [edx],al
  41aaa2:	adc    DWORD PTR ds:0xc6f18cbf,ebp
  41aaa8:	cmp    DWORD PTR [ebp+0x7c2f2cb0],ebx
  41aaae:	inc    ebx
  41aaaf:	dec    ebp
  41aab0:	push   esp
  41aab1:	retf   0x3dd7
  41aab4:	push   edi
  41aab5:	ds pop eax
  41aab7:	(bad)  
  41aab9:	aaa    
  41aaba:	(bad)  
  41aabb:	ds hlt 
  41aabd:	and    ebp,ebx
  41aabf:	mov    ah,0xa8
  41aac1:	stos   DWORD PTR es:[edi],eax
  41aac2:	js     0x41aa4b
  41aac4:	data16 jnp 0x41aa79
  41aac7:	popf   
  41aac8:	jne    0x41aa6b
  41aaca:	jp     0x41aacc
  41aacc:	leave  
  41aacd:	cmp    eax,0xd184a4f
  41aad2:	dec    ebp
  41aad3:	inc    eax
  41aad4:	add    eax,0x7dd0ee78
  41aad9:	jno    0x41aab8
  41aadb:	sbb    edi,0x2
  41aade:	fs pop esp
  41aae0:	push   eax
  41aae1:	addr16 loope 0x41aa7a
  41aae4:	outs   dx,DWORD PTR ds:[esi]
  41aae5:	cwde   
  41aae6:	or     al,0xa6
  41aae8:	jb     0x41aa9d
  41aaea:	mov    ebp,0x84cb9685
  41aaef:	sbb    edi,DWORD PTR [edx-0x19]
  41aaf2:	jb     0x41aaf3
  41aaf4:	xchg   DWORD PTR [ebp-0x498ca427],edx
  41aafa:	ins    DWORD PTR es:[edi],dx
  41aafb:	mov    ecx,0xee074ab4
  41ab00:	icebp  
  41ab01:	ins    BYTE PTR es:[edi],dx
  41ab02:	js     0x41ab0d
  41ab04:	fidivr DWORD PTR [edi]
  41ab06:	test   eax,0x633ffdd5
  41ab0b:	mov    ebx,0x67acb2b9
  41ab10:	push   0x1eabb6cc
  41ab15:	scas   al,BYTE PTR es:[edi]
  41ab16:	int3   
  41ab17:	sub    eax,0x30501a0
  41ab1c:	push   ss
  41ab1d:	xlat   BYTE PTR ds:[ebx]
  41ab1e:	xor    bl,BYTE PTR [edi-0x673fa82]
  41ab24:	dec    eax
  41ab25:	jmp    0x7d89b4c0
  41ab2a:	add    al,0xd6
  41ab2c:	jle    0x41ab7b
  41ab2e:	mov    ebx,0x3a26075f
  41ab33:	shrd   DWORD PTR [edx-0x7e4c2a40],edi,cl
  41ab3a:	adc    bh,BYTE PTR ds:0xcfeb28b5
  41ab40:	mov    eax,ds:0x491f7d5c
  41ab45:	jb     0x41ab26
  41ab47:	scas   eax,DWORD PTR es:[edi]
  41ab48:	aaa    
  41ab49:	mov    ds:0xfb1232ad,al
  41ab4e:	mov    al,ds:0x619f496f
  41ab53:	cdq    
  41ab54:	mov    DWORD PTR [eax+eax*2+0x4a9d063e],ecx
  41ab5b:	xor    ebp,DWORD PTR [ecx+0x33c9a949]
  41ab61:	fstp   DWORD PTR [ebp-0x39]
  41ab64:	fstp   st(2)
  41ab66:	in     al,dx
  41ab67:	pop    ebp
  41ab68:	loop   0x41ab64
  41ab6a:	push   edi
  41ab6b:	adc    al,0xb1
  41ab6d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab6f:	inc    eax
  41ab70:	(bad)  
  41ab71:	aad    0xd0
  41ab73:	add    DWORD PTR [ebx+0x39],ecx
  41ab76:	aas    
  41ab77:	cmp    ebp,ebp
  41ab79:	mov    ebp,0x41adf3f4
  41ab7e:	push   ebp
  41ab7f:	or     BYTE PTR [ecx-0x3],ah
  41ab82:	jmp    0x8a16bc9f
  41ab87:	shl    BYTE PTR [ecx-0x2216a790],0x2a
  41ab8e:	test   al,0x82
  41ab90:	cmp    dh,BYTE PTR [ebx-0x5296a008]
  41ab96:	into   
  41ab97:	push   eax
  41ab98:	out    0x47,al
  41ab9a:	adc    DWORD PTR [ecx+0x43],eax
  41ab9d:	(bad)  
  41ab9e:	and    edx,ebx
  41aba0:	jecxz  0x41abb3
  41aba2:	ins    DWORD PTR es:[edi],dx
  41aba3:	lock in eax,0x7a
  41aba6:	test   al,0x63
  41aba8:	and    DWORD PTR [esp+ebx*4-0x1823f8ad],edi
  41abaf:	enter  0xce47,0xe7
  41abb3:	(bad)  
  41abb5:	mov    al,ds:0x1b7c878
  41abba:	xor    DWORD PTR [edx+eiz*8+0x35b3b29f],eax
  41abc1:	sub    al,0x49
  41abc3:	shr    BYTE PTR [edi+0x54c03ed0],1
  41abc9:	dec    edx
  41abca:	or     al,0x9
  41abcc:	call   FWORD PTR [edx+0x19f2d443]
  41abd2:	jae    0x41ab71
  41abd4:	out    dx,eax
  41abd5:	stc    
  41abd6:	test   eax,0x996e5f7
  41abdb:	xchg   DWORD PTR [esi],ebx
  41abdd:	push   eax
  41abde:	xchg   esi,eax
  41abdf:	repnz into 
  41abe1:	in     al,dx
  41abe2:	dec    esi
  41abe3:	in     eax,dx
  41abe4:	xor    DWORD PTR [ebx+0x47],0xaeea9243
  41abeb:	iret   
  41abec:	jg     0x41abdc
  41abee:	inc    esi
  41abef:	mov    dl,0xaf
  41abf1:	xchg   ecx,eax
  41abf2:	pushf  
  41abf3:	push   ss
  41abf4:	or     cl,bh
  41abf6:	cdq    
  41abf7:	std    
  41abf8:	xlat   BYTE PTR ds:[ebx]
  41abf9:	pop    ebp
  41abfa:	adc    BYTE PTR [esi+0x69],bh
  41abfd:	repnz xchg esi,eax
  41abff:	sub    DWORD PTR [esp+edi*2-0x1149e8fe],eax
  41ac06:	neg    BYTE PTR [esi]
  41ac08:	sti    
  41ac09:	loope  0x41ac69
  41ac0b:	jge    0x41ac84
  41ac0d:	sub    DWORD PTR [eax-0x4d],eax
  41ac10:	data16 cli 
  41ac12:	adc    esp,esp
  41ac14:	daa    
  41ac15:	(bad)  
  41ac17:	sbb    DWORD PTR [eax-0x76],edi
  41ac1a:	out    dx,eax
  41ac1b:	out    dx,eax
  41ac1c:	ds je  0x41abd9
  41ac1f:	stos   DWORD PTR es:[edi],eax
  41ac20:	stos   DWORD PTR es:[edi],eax
  41ac21:	leave  
  41ac22:	repz (bad) 
  41ac24:	pop    esp
  41ac25:	sub    BYTE PTR [ebx],al
  41ac27:	fwait
  41ac28:	popf   
  41ac29:	out    0x98,al
  41ac2b:	test   esi,0x2cc4669
  41ac31:	and    BYTE PTR [edx+ebx*8+0x5868d7b7],al
  41ac38:	adc    ah,BYTE PTR [edi]
  41ac3a:	and    BYTE PTR [edx+0x3],ah
  41ac3d:	(bad)  
  41ac3e:	lods   eax,DWORD PTR ds:[esi]
  41ac3f:	fnstenv [esi]
  41ac41:	jg     0x41ac30
  41ac43:	xor    ecx,edi
  41ac45:	dec    eax
  41ac46:	cwde   
  41ac47:	sub    BYTE PTR [edx],ch
  41ac49:	jae    0x41ac3e
  41ac4b:	es (bad) 
  41ac4d:	xor    DWORD PTR [ebx],ebx
  41ac4f:	sub    eax,0x41659e2
  41ac54:	(bad)  
  41ac55:	fadd   DWORD PTR [ebx-0x3]
  41ac58:	jge    0x41ac66
  41ac5a:	pop    ss
  41ac5b:	(bad)  
  41ac5c:	xchg   ecx,eax
  41ac5d:	ja     0x41ac18
  41ac5f:	dec    ebx
  41ac60:	outs   dx,DWORD PTR ds:[esi]
  41ac61:	(bad)  
  41ac63:	int    0x1a
  41ac65:	pop    esi
  41ac66:	adc    al,0xf8
  41ac68:	es push edi
  41ac6a:	and    ebx,ebx
  41ac6c:	sbb    edx,esi
  41ac6e:	mov    esi,0x65c639e2
  41ac73:	(bad)  
  41ac74:	(bad)  
  41ac75:	cld    
  41ac76:	popf   
  41ac77:	jl     0x41ac3a
  41ac79:	mov    cl,0x14
  41ac7b:	inc    ebx
  41ac7c:	xchg   bx,ax
  41ac7e:	mov    ds:0x1d4dc335,eax
  41ac83:	jg     0x41ac29
  41ac85:	out    0xc1,al
  41ac87:	push   ss
  41ac88:	xchg   esp,eax
  41ac89:	in     eax,dx
  41ac8a:	fwait
  41ac8b:	popa   
  41ac8c:	addr16 pop edx
  41ac8e:	cdq    
  41ac8f:	add    al,0x7c
  41ac91:	push   edx
  41ac92:	scas   eax,DWORD PTR es:[edi]
  41ac93:	jecxz  0x41ac23
  41ac95:	mov    bl,0x65
  41ac97:	sub    dl,BYTE PTR [ebp-0x40]
  41ac9a:	clc    
  41ac9b:	test   dl,ch
  41ac9d:	xchg   esp,eax
  41ac9e:	sbb    ah,0x81
  41aca1:	mov    dh,0x37
  41aca3:	aad    0x3e
  41aca5:	outs   dx,DWORD PTR ds:[esi]
  41aca6:	inc    edx
  41aca7:	shl    BYTE PTR [edi-0x32623480],cl
  41acad:	nop
  41acae:	adc    al,0x5b
  41acb0:	push   ebp
  41acb1:	jle    0x41ac52
  41acb3:	daa    
  41acb4:	jle    0x41ac9b
  41acb6:	add    eax,DWORD PTR [edi-0x9]
  41acb9:	lahf   
  41acba:	inc    ecx
  41acbb:	pop    es
  41acbc:	idiv   BYTE PTR [edx+0x2896819c]
  41acc2:	dec    ebp
  41acc3:	fistp  QWORD PTR [ebp-0x5d497435]
  41acc9:	add    DWORD PTR [ecx],edi
  41accb:	push   edi
  41accc:	sbb    BYTE PTR [edi-0x563e0f3],cl
  41acd2:	mul    DWORD PTR [ebp+0x1bca6130]
  41acd8:	jnp    0x41ac7b
  41acda:	daa    
  41acdb:	push   eax
  41acdc:	leave  
  41acdd:	jmp    0x200ecc9d
  41ace2:	(bad)  
  41ace3:	out    dx,eax
  41ace4:	jmp    0x49c4:0x75ce414d
  41aceb:	test   al,0x70
  41aced:	call   0xf0206be8
  41acf2:	jp     0x41ace0
  41acf4:	push   es
  41acf5:	sbb    BYTE PTR [esi],ah
  41acf7:	or     dh,0x5f
  41acfa:	mov    al,ds:0x20fdfaf2
  41acff:	mul    dh
  41ad01:	jbe    0x41ad3c
  41ad03:	(bad)  
  41ad04:	shr    DWORD PTR [esi],cl
  41ad06:	es push ds
  41ad08:	addr16 jp 0x41acea
  41ad0b:	dec    ebx
  41ad0c:	not    DWORD PTR [edx+0x60]
  41ad0f:	pushf  
  41ad10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad11:	or     DWORD PTR [ecx-0x3500930f],esp
  41ad17:	outs   dx,BYTE PTR ds:[esi]
  41ad18:	mul    DWORD PTR [ebx+ecx*4]
  41ad1b:	xchg   edx,eax
  41ad1c:	mov    ebp,0xdea0a595
  41ad21:	xchg   esi,eax
  41ad22:	ja     0x41acc8
  41ad24:	stc    
  41ad25:	mov    ch,0x57
  41ad27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad28:	mov    edx,esp
  41ad2a:	jle    0x41acc6
  41ad2c:	sub    DWORD PTR [ebp+0x4f],ebp
  41ad2f:	mov    cl,0xfd
  41ad31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad32:	sbb    BYTE PTR [edx],bl
  41ad34:	rcr    BYTE PTR [ebp+0x18b67e4],cl
  41ad3a:	stos   DWORD PTR es:[edi],eax
  41ad3b:	cld    
  41ad3c:	or     edx,ebp
  41ad3e:	or     al,0xff
  41ad40:	push   esi
  41ad41:	cmp    DWORD PTR [ebx-0x24],esp
  41ad44:	cmc    
  41ad45:	jge    0x41adb4
  41ad47:	ja     0x41acea
  41ad49:	jmp    0xfa91f55
  41ad4e:	xchg   ebp,eax
  41ad4f:	xor    DWORD PTR [eax-0x13],eax
  41ad52:	push   ss
  41ad53:	mov    ecx,0x60db1c3
  41ad58:	dec    edi
  41ad59:	push   esp
  41ad5a:	lods   al,BYTE PTR ds:[esi]
  41ad5b:	push   edi
  41ad5c:	icebp  
  41ad5d:	dec    edx
  41ad5e:	and    DWORD PTR [eax],ebx
  41ad60:	jns    0x41ad26
  41ad62:	ror    BYTE PTR [ecx+0x18],0x5
  41ad66:	add    DWORD PTR [ebp-0x7],esp
  41ad69:	mov    edx,0xeee023e4
  41ad6e:	sub    BYTE PTR [ebx],bl
  41ad70:	jne    0x41ad6a
  41ad72:	jae    0x41ad90
  41ad74:	in     eax,dx
  41ad75:	jno    0x41ade4
  41ad77:	dec    esp
  41ad78:	cwde   
  41ad79:	inc    eax
  41ad7a:	fistp  DWORD PTR [ebx]
  41ad7c:	test   DWORD PTR [ecx],esp
  41ad7e:	jg     0x41ad88
  41ad80:	dec    esp
  41ad81:	sti    
  41ad82:	push   cs
  41ad83:	out    0xe3,al
  41ad85:	and    eax,0xf92f22fb
  41ad8a:	mov    al,0x29
  41ad8c:	es xor eax,0x1d4516a2
  41ad92:	ror    DWORD PTR [edi],0x2c
  41ad95:	hlt    
  41ad96:	into   
  41ad97:	push   cs
  41ad98:	mov    al,0x6
  41ad9a:	sbb    DWORD PTR [ebx],eax
  41ad9c:	fild   QWORD PTR [edi]
  41ad9e:	les    esi,FWORD PTR [ebp-0x2d146a90]
  41ada4:	cmp    dl,BYTE PTR [esi+edx*1+0x3b75b1de]
  41adab:	lods   eax,DWORD PTR ds:[esi]
  41adac:	push   eax
  41adad:	sbb    eax,0x608b716
  41adb2:	daa    
  41adb3:	mov    ebp,0x4e79c07e
  41adb8:	jnp    0x41adbb
  41adba:	inc    ebx
  41adbb:	jecxz  0x41ae28
  41adbd:	push   ebp
  41adbe:	pop    esi
  41adbf:	stc    
  41adc0:	pusha  
  41adc1:	mov    ds,WORD PTR ds:0x9ba3c4a6
  41adc7:	(bad)  
  41adc8:	xchg   esi,eax
  41adc9:	fdivr  QWORD PTR [esp+ebp*8]
  41adcc:	pop    eax
  41adcd:	cwde   
  41adce:	sub    eax,ecx
  41add0:	es jne 0x41ade0
  41add3:	push   cs
  41add4:	xchg   esp,eax
  41add5:	xchg   ecx,eax
  41add6:	add    al,0xc5
  41add9:	mov    ebx,0x89c194b4
  41adde:	push   eax
  41addf:	dec    esp
  41ade0:	mov    eax,0x7b209aa1
  41ade5:	or     DWORD PTR [ebp+0x41677fdb],ebp
  41adeb:	or     eax,0x69fe5a2d
  41adf0:	jns    0x41ad72
  41adf2:	adc    ebx,DWORD PTR [ebp+0x6724e2e]
  41adf8:	je     0x41ade2
  41adfa:	call   0x531f587
  41adff:	pop    ecx
  41ae00:	push   esi
  41ae01:	xlat   BYTE PTR ds:[ebx]
  41ae02:	leave  
  41ae03:	jo     0x41adc0
  41ae05:	jge    0x41adf7
  41ae07:	push   eax
  41ae08:	or     al,0x23
  41ae0a:	test   DWORD PTR [edx],esp
  41ae0c:	cmp    BYTE PTR [esi+0x194bb24a],al
  41ae12:	out    0x16,al
  41ae14:	pop    esp
  41ae15:	out    0x95,al
  41ae17:	cdq    
  41ae18:	das    
  41ae19:	loopne 0x41ae60
  41ae1b:	data16 fldcw WORD PTR [edx-0x15]
  41ae1f:	mov    WORD PTR [eax-0x20ba07d3],gs
  41ae25:	or     ah,dl
  41ae27:	cli    
  41ae28:	int3   
  41ae29:	pop    edi
  41ae2a:	(bad)  
  41ae2b:	push   ds
  41ae2c:	out    dx,al
  41ae2d:	adc    BYTE PTR [ecx],ah
  41ae2f:	and    bl,BYTE PTR [ebp-0x37195517]
  41ae35:	mov    edx,0xfaac9220
  41ae3a:	hlt    
  41ae3b:	mov    dh,0x91
  41ae3d:	dec    esp
  41ae3e:	jns    0xb928af6c
  41ae44:	mov    dl,0x23
  41ae46:	fwait
  41ae47:	mov    dh,BYTE PTR [edx+ebx*1]
  41ae4a:	xchg   edx,eax
  41ae4b:	cli    
  41ae4c:	mov    edi,0x90307dab
  41ae51:	scas   al,BYTE PTR es:[edi]
  41ae52:	sub    esi,DWORD PTR [ebx-0x65dbf633]
  41ae58:	and    al,0xd8
  41ae5a:	inc    ebx
  41ae5b:	cmp    al,0xe2
  41ae5d:	ret    
  41ae5e:	aam    0x68
  41ae60:	dec    esp
  41ae61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae62:	aas    
  41ae63:	aaa    
  41ae64:	je     0x41ae81
  41ae66:	inc    edx
  41ae67:	xchg   esp,eax
  41ae68:	and    DWORD PTR [edi+0x169321be],edi
  41ae6e:	sub    BYTE PTR [esi],ah
  41ae70:	out    dx,al
  41ae71:	test   eax,0xede510f1
  41ae76:	scas   eax,DWORD PTR es:[edi]
  41ae77:	inc    esp
  41ae78:	jb     0x41ae48
  41ae7a:	stos   BYTE PTR es:[edi],al
  41ae7b:	pop    esp
  41ae7c:	enter  0xc031,0x6c
  41ae80:	stos   BYTE PTR es:[edi],al
  41ae81:	sbb    BYTE PTR [esi-0x54],cl
  41ae84:	je     0x41ae25
  41ae86:	mov    ch,0xee
  41ae88:	arpl   bx,si
  41ae8a:	aad    0x41
  41ae8c:	xor    ecx,DWORD PTR [eax]
  41ae8e:	or     edi,DWORD PTR [ebp-0x1982a512]
  41ae94:	(bad)  [esi+ecx*4]
  41ae97:	inc    ebx
  41ae98:	adc    BYTE PTR [edi],0x3a
  41ae9b:	xchg   esi,eax
  41ae9c:	mov    ah,dh
  41ae9e:	xor    al,0x40
  41aea0:	pop    eax
  41aea1:	and    eax,0xbfad29e1
  41aea6:	jp     0x41aef2
  41aea8:	pop    ebp
  41aea9:	test   al,0x7e
  41aeab:	jmp    0x5b90:0xc82a65d8
  41aeb2:	retf   0x4bc6
  41aeb5:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41aeb7:	and    BYTE PTR [edi+0x3],dl
  41aeba:	jp     0x41ae53
  41aebc:	nop
  41aebd:	das    
  41aebe:	in     eax,0xcb
  41aec0:	mov    ebx,0xa25f829a
  41aec5:	xchg   esp,eax
  41aec6:	sbb    ebx,0xffffffd2
  41aec9:	dec    ebp
  41aeca:	pop    edx
  41aecb:	adc    bh,al
  41aecd:	pop    eax
  41aece:	mov    esp,0x610f52cb
  41aed3:	inc    edi
  41aed4:	fmul   QWORD PTR [edi-0x2382ba1d]
  41aeda:	shl    BYTE PTR [ebp-0x2e],cl
  41aedd:	test   BYTE PTR [ebx],bl
  41aedf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aee0:	lods   eax,DWORD PTR ds:[esi]
  41aee1:	xchg   dh,bl
  41aee3:	call   0x78df:0xadb12759
  41aeea:	imul   ebx,DWORD PTR [edx+0x68c3ee21],0xec67791a
  41aef4:	pop    esi
  41aef5:	retf   
  41aef6:	inc    ecx
  41aef7:	jecxz  0x41af2b
  41aef9:	jmp    0xd4ea9402
  41aefe:	ficomp DWORD PTR [edi-0x28]
  41af01:	push   0x9321439b
  41af06:	add    dh,BYTE PTR [edx]
  41af08:	sahf   
  41af09:	and    eax,DWORD PTR [edx]
  41af0b:	or     ch,BYTE PTR [eax+ebp*1-0x3b8b71f]
  41af12:	pusha  
  41af13:	iret   
  41af14:	pop    eax
  41af15:	or     eax,0x653ce1db
  41af1a:	mov    esi,0x128b6342
  41af1f:	fs jmp 0x28ae:0x5fa9ad55
  41af27:	jmp    FWORD PTR [ecx+ebp*2-0xc]
  41af2b:	push   ecx
  41af2c:	xor    eax,0xb221b6b7
  41af31:	pop    ebp
  41af32:	shl    BYTE PTR [eax+edx*1+0x2f],cl
  41af36:	aam    0xe4
  41af38:	inc    ebx
  41af39:	xchg   BYTE PTR [ecx-0x6f],bh
  41af3c:	jmp    0xe8cf:0x68ce0c07
  41af43:	ss pop edx
  41af45:	mov    ds:0xe1d7eb1a,eax
  41af4a:	cmp    eax,0x6bf0c601
  41af4f:	fadd   DWORD PTR [ebx+0x5e530504]
  41af55:	popa   
  41af56:	mov    dl,0x2e
  41af58:	and    eax,0x78c6e0d2
  41af5d:	stc    
  41af5e:	push   ecx
  41af5f:	jbe    0x41af1b
  41af61:	push   cs
  41af62:	dec    eax
  41af63:	add    DWORD PTR [ebp+0x51a7fd19],ebp
  41af69:	test   eax,0x38fff7ed
  41af6e:	adc    DWORD PTR [edi-0x5a],esp
  41af71:	cmp    eax,0xaa14a62c
  41af76:	xor    ecx,DWORD PTR [esi+0x73]
  41af79:	aaa    
  41af7a:	fs cld 
  41af7c:	popa   
  41af7d:	aam    0xf
  41af7f:	or     eax,0xa5d95eb4
  41af84:	mov    eax,0x951fcc47
  41af89:	inc    ebx
  41af8a:	ins    BYTE PTR es:[edi],dx
  41af8b:	dec    esp
  41af8c:	in     eax,dx
  41af8d:	(bad)  
  41af8e:	retf   0x8a21
  41af91:	mov    DWORD PTR [esi-0x3df5823d],esp
  41af97:	pusha  
  41af98:	mov    dl,bl
  41af9a:	or     ecx,DWORD PTR [ebp+0x5b]
  41af9d:	clc    
  41af9e:	(bad)  
  41af9f:	sbb    al,0xc1
  41afa1:	sub    al,0x52
  41afa3:	inc    edi
  41afa4:	pop    ebp
  41afa5:	jne    0x41af27
  41afa7:	aad    0xec
  41afa9:	in     eax,dx
  41afaa:	jp     0x41afbb
  41afac:	dec    esi
  41afad:	sahf   
  41afae:	into   
  41afaf:	imul   edx,DWORD PTR [edx+0x59],0x61
  41afb3:	add    bl,cl
  41afb5:	nop    DWORD PTR [ebp-0x7ee48433]
  41afbc:	(bad)  
  41afbd:	loop   0x41af47
  41afbf:	pop    ebx
  41afc0:	xchg   edi,eax
  41afc1:	xchg   DWORD PTR [esi+0x38e944ac],ebp
  41afc7:	bound  edi,QWORD PTR [edi-0x3cb3e647]
  41afcd:	pop    ds
  41afce:	je     0x41af8f
  41afd0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd2:	loopne 0x41af76
  41afd4:	mov    bl,0x8a
  41afd6:	in     al,dx
  41afd7:	loop   0x41afc5
  41afd9:	or     bl,BYTE PTR [ebx]
  41afdb:	xor    al,0xde
  41afdd:	xchg   edx,eax
  41afde:	nop    edi
  41afe1:	(bad)  ds:0xcfe249e
  41afe7:	push   ds
  41afe8:	mov    dl,0x2e
  41afea:	das    
  41afeb:	js     0x41afbd
  41afed:	cld    
  41afee:	test   al,0xd9
  41aff0:	sbb    edi,DWORD PTR [ecx+0x38]
  41aff3:	inc    ebx
  41aff4:	push   es
  41aff5:	out    dx,al
  41aff6:	lods   al,BYTE PTR ds:[esi]
  41aff7:	loope  0x41aff2
  41aff9:	popa   
  41affa:	push   edx
  41affb:	stos   DWORD PTR es:[edi],eax
  41affc:	mov    DWORD PTR [ecx-0x6f],0x6b4cd317
  41b003:	jg     0x41afe1
  41b005:	fwait
  41b006:	std    
  41b007:	loop   0x41af93
  41b009:	sbb    BYTE PTR [eax-0x71],ah
  41b00c:	ins    DWORD PTR es:[edi],dx
  41b00d:	push   ds
  41b00e:	sbb    dl,BYTE PTR [ecx]
  41b010:	lods   al,BYTE PTR ds:[esi]
  41b011:	jne    0x41afa1
  41b013:	jg     0x41b07f
  41b015:	mov    bl,0xc4
  41b017:	mov    ds:0x46209f6,eax
  41b01c:	sbb    BYTE PTR [ebp-0x55],ah
  41b01f:	xor    al,BYTE PTR [ecx+0x49]
  41b022:	test   al,0xb3
  41b024:	xchg   esp,eax
  41b025:	push   cs
  41b026:	xor    dh,al
  41b028:	inc    esi
  41b029:	xor    al,0x2
  41b02b:	mov    edx,0xefbb4c8f
  41b030:	and    WORD PTR [eax+0x6c],0x1c30
  41b036:	loop   0x41b067
  41b038:	inc    ebp
  41b039:	sub    bl,bh
  41b03b:	xchg   edi,eax
  41b03c:	gs repz ret 0x8d6e
  41b041:	pop    ecx
  41b042:	sahf   
  41b043:	dec    ebx
  41b044:	fadd   DWORD PTR [ebp+0xbaf146e]
  41b04a:	fs dec esi
  41b04c:	test   ch,ch
  41b04e:	xor    BYTE PTR [edi-0x5d],dl
  41b051:	pop    ss
  41b052:	push   esp
  41b053:	push   0xffffffb1
  41b055:	mov    ds:0x10a5d54d,eax
  41b05a:	dec    ecx
  41b05b:	jp     0x41b003
  41b05d:	jmp    0xfbca:0xc85594af
  41b064:	fcmovb st,st(3)
  41b066:	nop
  41b067:	shr    DWORD PTR [esi-0x59070226],0xb8
  41b06e:	cmp    DWORD PTR [edx+0x13c1fd6c],ebx
  41b074:	out    0x87,eax
  41b076:	adc    al,0xb9
  41b078:	aad    0x38
  41b07a:	push   ds
  41b07b:	add    eax,0xccfd7130
  41b080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b081:	pop    ds
  41b082:	aas    
  41b083:	cmp    al,0x82
  41b085:	out    dx,eax
  41b086:	xchg   ecx,eax
  41b087:	enter  0x8540,0xa0
  41b08b:	push   esp
  41b08c:	test   ebp,esi
  41b08e:	mov    edi,0x2a81a528
  41b093:	add    ebp,DWORD PTR [ebp-0x18965d95]
  41b099:	cmp    eax,0x4f9980a9
  41b09e:	mov    bl,0x9a
  41b0a0:	fs js  0x41b05d
  41b0a3:	push   eax
  41b0a4:	pop    DWORD PTR [esi-0x58ca93dd]
  41b0aa:	ret    0x9212
  41b0ad:	test   DWORD PTR [edx-0x2cafcb04],ebx
  41b0b3:	mov    ebp,0x6ddff13b
  41b0b8:	sar    edx,1
  41b0ba:	ror    BYTE PTR [edi+ebx*1-0x1d],cl
  41b0be:	inc    ebx
  41b0bf:	xchg   ebx,eax
  41b0c0:	scas   eax,DWORD PTR es:[edi]
  41b0c1:	stos   BYTE PTR es:[edi],al
  41b0c2:	loopne 0x41b0cd
  41b0c4:	dec    edx
  41b0c5:	in     al,dx
  41b0c6:	stc    
  41b0c7:	mov    dh,0x6c
  41b0c9:	rcl    BYTE PTR [ecx+eax*1+0x2fd7dc12],1
  41b0d0:	(bad)  
  41b0d1:	sub    edi,esp
  41b0d3:	in     al,dx
  41b0d4:	in     eax,dx
  41b0d5:	mov    bl,0xf
  41b0d7:	xor    al,0x87
  41b0d9:	cmp    eax,0x548ea18f
  41b0de:	fisubr WORD PTR [eax-0xe]
  41b0e1:	scas   al,BYTE PTR es:[edi]
  41b0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0e3:	mov    eax,ds:0x5a1c729b
  41b0e8:	es mov edx,0x2d46fec3
  41b0ee:	pop    es
  41b0ef:	lds    ebx,FWORD PTR [ebx-0x63]
  41b0f2:	push   ds
  41b0f3:	sub    al,0xd9
  41b0f5:	in     al,0x66
  41b0f7:	in     al,0x9b
  41b0f9:	inc    ebp
  41b0fa:	inc    edx
  41b0fb:	ja     0x41b128
  41b0fd:	out    0x65,al
  41b0ff:	inc    ebx
  41b100:	fmul   DWORD PTR [eax+0x6fb57503]
  41b106:	dec    ebx
  41b107:	fdivr  st,st(3)
  41b109:	dec    eax
  41b10a:	into   
  41b10b:	jmp    0x8a91b921
  41b110:	lea    esp,[ebx+0x2e1f3b53]
  41b116:	xchg   ebx,eax
  41b117:	test   eax,0x5ddb5fd1
  41b11c:	pop    ebx
  41b11d:	ret    0x2255
  41b120:	fdivr  QWORD PTR [ebx+ebx*4-0x32]
  41b124:	sub    edx,DWORD PTR [eax+0x68fd6920]
  41b12a:	mov    eax,ds:0xc49b52cb
  41b12f:	mov    ecx,esi
  41b131:	sbb    DWORD PTR [esi+0x60],ebx
  41b134:	(bad)  
  41b135:	pop    ss
  41b136:	rol    DWORD PTR [ebx+0x7e0f27c],cl
  41b13c:	adc    dh,BYTE PTR [esi]
  41b13e:	mov    ch,BYTE PTR [ecx-0x4d3e4e18]
  41b144:	test   DWORD PTR [edi+eiz*8+0x595f84f4],ecx
  41b14b:	leave  
  41b14c:	sub    esp,DWORD PTR [edi-0x28]
  41b14f:	aas    
  41b150:	jge    0x41b159
  41b152:	test   BYTE PTR fs:[edx+0x73],ah
  41b156:	das    
  41b157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b158:	mov    eax,0x73ae5909
  41b15d:	imul   ebp,edx,0x35b2c1d8
  41b163:	mov    al,ds:0xfab7d6e1
  41b168:	fidivr WORD PTR [eax]
  41b16a:	xchg   eax,ecx
  41b16c:	push   edx
  41b16d:	hlt    
  41b16e:	adc    cl,BYTE PTR [ebp+0x5e823c36]
  41b174:	sub    cl,BYTE PTR [ebx-0x54]
  41b177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b178:	clc    
  41b179:	mov    ch,BYTE PTR ds:0x7ec90aeb
  41b17f:	cmp    DWORD PTR [ebp-0x3e],esp
  41b182:	(bad)  [edi]
  41b184:	scas   al,BYTE PTR es:[edi]
  41b185:	inc    ebx
  41b186:	cdq    
  41b187:	sub    BYTE PTR [eax-0x624706c7],bl
  41b18d:	push   cs
  41b18e:	jnp    0x41b1a3
  41b190:	es push edi
  41b192:	xor    BYTE PTR [ebx],0xe0
  41b195:	loopne 0x41b197
  41b197:	cld    
  41b198:	jmp    0xe352cb82
  41b19d:	sub    al,0xec
  41b19f:	loop   0x41b1e1
  41b1a1:	mov    eax,ds:0x8dc71ea9
  41b1a6:	fiadd  WORD PTR [ebp-0x41]
  41b1a9:	mov    al,0xee
  41b1ab:	ins    DWORD PTR es:[edi],dx
  41b1ac:	pop    eax
  41b1ad:	sbb    ebp,DWORD PTR [edx]
  41b1af:	sbb    eax,0x39102be4
  41b1b4:	call   0xced9d198
  41b1b9:	sub    DWORD PTR [edi-0x21],edx
  41b1bc:	jg     0x41b1f1
  41b1be:	mov    al,ds:0x5d96bbc3
  41b1c3:	push   esp
  41b1c4:	mov    dh,0xec
  41b1c6:	std    
  41b1c7:	dec    esi
  41b1c8:	pop    esi
  41b1c9:	inc    ebp
  41b1ca:	dec    edx
  41b1cb:	xor    cl,0x8a
  41b1ce:	push   ss
  41b1cf:	clc    
  41b1d0:	push   ds
  41b1d1:	into   
  41b1d2:	rcr    edx,0x97
  41b1d5:	inc    esi
  41b1d6:	jns    0x41b1d9
  41b1d8:	add    DWORD PTR [edx-0x6d],esp
  41b1db:	push   edi
  41b1dc:	int    0x87
  41b1de:	jnp    0x41b252
  41b1e0:	or     eax,0x2a1a51cd
  41b1e5:	inc    esi
  41b1e6:	add    BYTE PTR gs:[edi],dh
  41b1e9:	and    ah,cl
  41b1eb:	jb     0x41b25b
  41b1ed:	call   ecx
  41b1ef:	(bad)  
  41b1f0:	xor    eax,0x15159f9c
  41b1f5:	mov    edi,0x6d7e9d3a
  41b1fa:	xor    DWORD PTR [ebx-0x37],ecx
  41b1fd:	jae    0x41b26f
  41b1ff:	stc    
  41b200:	lods   al,BYTE PTR ds:[esi]
  41b201:	jle    0x41b20f
  41b203:	in     eax,dx
  41b204:	cmc    
  41b205:	(bad)  
  41b206:	mov    esi,DWORD PTR [ebp-0x58bbb4b9]
  41b20c:	mov    edi,0xd7fb9019
  41b211:	xor    DWORD PTR [ecx+ecx*1-0x74],eax
  41b215:	mov    esi,0x19627248
  41b21a:	sbb    ebp,eax
  41b21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b21d:	cli    
  41b21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b21f:	ins    DWORD PTR es:[edi],dx
  41b220:	outs   dx,DWORD PTR ds:[esi]
  41b221:	lock adc eax,0x42382cea
  41b227:	dec    ebp
  41b228:	inc    edx
  41b229:	sar    BYTE PTR [ebp+0x3e63b0b5],1
  41b22f:	aas    
  41b230:	in     al,0x9e
  41b232:	xchg   BYTE PTR [eax],dl
  41b234:	loop   0x41b280
  41b236:	iret   
  41b237:	lock into 
  41b239:	xor    al,0x61
  41b23b:	shl    BYTE PTR [edx-0x5e],0x69
  41b23f:	cmp    bh,ah
  41b241:	sahf   
  41b242:	push   0x54
  41b244:	out    dx,al
  41b245:	inc    esi
  41b246:	pop    ecx
  41b247:	popa   
  41b248:	mov    ecx,0x8f55bba2
  41b24d:	add    al,ah
  41b24f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b250:	mov    edx,0x1c56c13f
  41b255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b256:	pop    esi
  41b257:	pop    edx
  41b258:	lahf   
  41b259:	inc    esp
  41b25a:	add    BYTE PTR [edx+0x44],al
  41b25d:	xchg   DWORD PTR [esi-0x51],eax
  41b260:	and    ebx,edi
  41b262:	inc    edx
  41b263:	ins    BYTE PTR es:[edi],dx
  41b264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b265:	mov    al,ds:0x22a0301e
  41b26a:	scas   eax,DWORD PTR es:[edi]
  41b26b:	shl    ah,0x32
  41b26e:	push   0x46
  41b270:	outs   dx,BYTE PTR ds:[esi]
  41b271:	push   ss
  41b272:	stc    
  41b273:	popa   
  41b274:	fdiv   QWORD PTR [ecx-0x6fb7939a]
  41b27a:	aas    
  41b27b:	sbb    DWORD PTR [ebx-0x40b42650],esi
  41b281:	sub    cl,al
  41b283:	loope  0x41b297
  41b285:	add    DWORD PTR [ebp+0x3fa7c995],esp
  41b28b:	imul   ebx,DWORD PTR [eax],0x83d5bd2a
  41b291:	mov    ah,0xc9
  41b293:	mov    WORD PTR [esi-0x59],es
  41b296:	in     al,dx
  41b297:	or     ah,BYTE PTR [esi-0x12]
  41b29a:	test   DWORD PTR [esi+0x4640b17a],esp
  41b2a0:	shr    DWORD PTR [esp+eax*8],1
  41b2a3:	xor    BYTE PTR [edx],ah
  41b2a5:	cmc    
  41b2a6:	in     al,dx
  41b2a7:	fmul   QWORD PTR [ecx+0x3b]
  41b2aa:	xchg   BYTE PTR [ebx],al
  41b2ac:	cmp    al,0x55
  41b2ae:	mov    ecx,0x33cb0496
  41b2b3:	jae    0x41b2ef
  41b2b5:	jns    0x41b2f3
  41b2b7:	xchg   edx,eax
  41b2b8:	fsubr  QWORD PTR [edx]
  41b2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bb:	sub    eax,0x49573b36
  41b2c0:	jno    0x41b332
  41b2c2:	mov    bl,0x18
  41b2c4:	lods   eax,DWORD PTR ds:[esi]
  41b2c5:	in     eax,0xdc
  41b2c7:	inc    ebp
  41b2c8:	in     al,0xc4
  41b2ca:	add    esi,DWORD PTR [esp+esi*2]
  41b2cd:	les    edx,FWORD PTR [edx+0x29]
  41b2d0:	dec    ecx
  41b2d1:	imul   ebx,DWORD PTR [esi],0x3da778ba
  41b2d7:	aam    0x3c
  41b2d9:	das    
  41b2da:	pop    es
  41b2db:	add    dl,BYTE PTR [edx-0x6e33c0e0]
  41b2e1:	(bad)  
  41b2e2:	adc    eax,0x86de51a9
  41b2e7:	rcr    esi,1
  41b2e9:	pop    edx
  41b2ea:	jmp    0x41b2cd
  41b2ec:	xchg   edx,eax
  41b2ed:	and    DWORD PTR [ebp-0x4ba6403c],ebx
  41b2f3:	jge    0x41b314
  41b2f5:	cwde   
  41b2f6:	mov    bh,0xad
  41b2f8:	mov    edi,edi
  41b2fa:	fwait
  41b2fb:	inc    esp
  41b2fc:	pop    edx
  41b2fd:	xor    edx,DWORD PTR [edx-0x2]
  41b300:	jmp    0x41b2f2
  41b302:	sub    DWORD PTR [ecx-0x3d],ebx
  41b305:	retf   0x479c
  41b308:	scas   al,BYTE PTR es:[edi]
  41b309:	out    dx,eax
  41b30a:	xor    al,al
  41b30c:	loopne 0x41b2b3
  41b30e:	pushf  
  41b30f:	or     al,0x85
  41b311:	mov    ds:0xca118876,al
  41b316:	sbb    bl,BYTE PTR [ebp-0x28]
  41b319:	cmp    eax,0x2bdba838
  41b31e:	pop    ss
  41b31f:	sbb    dh,BYTE PTR [ebx]
  41b321:	sub    eax,0x7c4cb4ec
  41b326:	and    BYTE PTR [eax+edi*4-0x3660492c],ah
  41b32d:	add    eax,0x7f3274f
  41b332:	pop    edi
  41b333:	call   0x170b:0x603da4a5
  41b33a:	push   cs
  41b33b:	scas   al,BYTE PTR es:[edi]
  41b33c:	xor    bl,BYTE PTR [edi+ebx*2+0x75d8fe96]
  41b343:	test   dh,al
  41b345:	jge    0x41b358
  41b347:	iret   
  41b348:	inc    eax
  41b349:	add    dl,ah
  41b34b:	inc    edi
  41b34c:	mov    esi,0x6bddba04
  41b351:	cdq    
  41b352:	push   ebp
  41b353:	sub    ebp,esi
  41b355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b356:	add    bl,dh
  41b358:	ffree  st(5)
  41b35a:	push   ecx
  41b35b:	sbb    al,0x26
  41b35d:	xor    bh,BYTE PTR [ecx+0x44]
  41b360:	cmp    ah,dl
  41b362:	jl     0x41b3ad
  41b364:	cmp    al,0xd8
  41b366:	and    ecx,0x8aa7891a
  41b36c:	jecxz  0x41b303
  41b36e:	push   ecx
  41b36f:	mov    eax,ds:0xf0d54dea
  41b374:	cmp    eax,DWORD PTR [edi-0x199ff4fe]
  41b37a:	cmp    ebp,DWORD PTR ds:0x53264439
  41b380:	test   BYTE PTR [ecx+0x28683770],ch
  41b386:	ja     0x41b404
  41b388:	inc    ebx
  41b389:	add    BYTE PTR [edx],ah
  41b38b:	cwde   
  41b38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b38d:	sbb    edx,edx
  41b38f:	and    esp,DWORD PTR [esi+0x19]
  41b392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b393:	adc    al,dl
  41b395:	imul   ecx,DWORD PTR fs:[eax-0x63],0xffffffc3
  41b39a:	jne    0x41b3f3
  41b39c:	inc    esp
  41b39d:	jecxz  0x41b3f5
  41b39f:	dec    edx
  41b3a0:	dec    edx
  41b3a1:	or     dl,dl
  41b3a3:	push   edx
  41b3a4:	ror    BYTE PTR [ecx-0x320671f8],cl
  41b3aa:	(bad)  
  41b3ab:	enter  0x15fd,0xbd
  41b3af:	retf   
  41b3b0:	(bad)  
  41b3b1:	int    0x96
  41b3b3:	sbb    eax,0xe85ca3f8
  41b3b8:	enter  0x7998,0x79
  41b3bc:	push   esi
  41b3bd:	add    BYTE PTR [edi-0x11],bl
  41b3c0:	or     dl,BYTE PTR [edx-0x5b73e6a]
  41b3c6:	mov    esp,edx
  41b3c8:	scas   al,BYTE PTR es:[edi]
  41b3c9:	inc    ebx
  41b3ca:	mov    cl,0x2c
  41b3cc:	push   esi
  41b3cd:	xchg   ebp,eax
  41b3ce:	jne    0x41b3e1
  41b3d0:	mov    cl,ah
  41b3d2:	mov    esi,esi
  41b3d4:	push   ds
  41b3d5:	fs xchg edx,eax
  41b3d7:	jl     0x41b3ed
  41b3d9:	repnz mov eax,0xaf1c8c6f
  41b3df:	xor    cl,0x51
  41b3e2:	arpl   WORD PTR [esi-0x78847990],di
  41b3e8:	or     esi,eax
  41b3ea:	mov    ecx,DWORD PTR ds:[edx+0x6185980d]
  41b3f1:	aaa    
  41b3f2:	mov    esi,0x46684866
  41b3f7:	and    cl,BYTE PTR [edx+ecx*4+0x57b126f]
  41b3fe:	pop    esp
  41b3ff:	iret   
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	or     ch,BYTE PTR [eax]
  41b403:	in     al,dx
  41b404:	enter  0x5b90,0xb3
  41b408:	(bad)  
  41b40a:	(bad)  
  41b40b:	sbb    al,0xb7
  41b40d:	loopne 0x41b44b
  41b40f:	sub    bl,al
  41b411:	xchg   di,ax
  41b413:	lahf   
  41b414:	jb     0x41b43a
  41b416:	or     esi,DWORD PTR [eax]
  41b418:	int    0xc0
  41b41a:	and    bh,ah
  41b41c:	dec    esp
  41b41d:	xor    esp,DWORD PTR [edi-0x190c18dd]
  41b423:	mov    eax,ds:0xcebde7b4
  41b428:	mov    edx,0xd3b85ff3
  41b42d:	fs into 
  41b42f:	push   cs
  41b430:	push   esp
  41b431:	out    0x53,al
  41b433:	push   es
  41b434:	(bad)  [edi+edx*2]
  41b437:	pop    ebp
  41b438:	mov    ds:0xd0d2f47b,eax
  41b43d:	lds    esp,FWORD PTR [eax-0x70]
  41b440:	dec    eax
  41b441:	jp     0x41b43b
  41b443:	dec    esp
  41b444:	outs   dx,BYTE PTR ds:[esi]
  41b445:	ins    BYTE PTR es:[edi],dx
  41b446:	dec    ecx
  41b447:	out    0x4e,eax
  41b449:	ror    DWORD PTR fs:[esp+ecx*1],1
  41b44d:	aad    0xb4
  41b44f:	sar    bh,1
  41b451:	sbb    eax,0x5bfc9880
  41b456:	xchg   DWORD PTR [esp+eax*2-0x55bb524b],eax
  41b45d:	ds dec eax
  41b45f:	mov    eax,0x437bce42
  41b464:	mov    edi,0xb1f4eae9
  41b469:	sbb    eax,DWORD PTR [esi]
  41b46b:	mov    ds,WORD PTR [ebx+0x771e184b]
  41b471:	fidivr DWORD PTR [edx+0x21c5e977]
  41b477:	jns    0x41b4f1
  41b479:	add    dl,dl
  41b47b:	ins    BYTE PTR es:[edi],dx
  41b47c:	or     DWORD PTR [edx-0x26],0xffffffc0
  41b480:	jecxz  0x41b442
  41b482:	mov    ch,al
  41b484:	popa   
  41b485:	and    eax,esi
  41b487:	fcom   QWORD PTR [ebx+0x76]
  41b48a:	jecxz  0x41b44b
  41b48c:	outs   dx,BYTE PTR ds:[esi]
  41b48d:	add    dh,BYTE PTR [edx]
  41b48f:	addr16 ds mov ah,0x35
  41b493:	cs push ebp
  41b495:	or     eax,0xf16d56ec
  41b49a:	adc    DWORD PTR [ecx],0xffffff98
  41b49d:	sar    bl,cl
  41b49f:	jg     0x41b508
  41b4a1:	(bad)  
  41b4a2:	mov    bh,0xb6
  41b4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4a5:	rcl    edi,0x95
  41b4a8:	jge    0x41b4d8
  41b4aa:	imul   ebp,DWORD PTR [eax-0x45],0x4ae8114e
  41b4b1:	cmc    
  41b4b2:	jmp    0x41b4bd
  41b4b4:	or     DWORD PTR [edi],ecx
  41b4b6:	scas   eax,DWORD PTR es:[edi]
  41b4b7:	pusha  
  41b4b8:	xchg   al,dh
  41b4ba:	push   ebx
  41b4bb:	add    BYTE PTR [ebp-0x65d0e3],bh
  41b4c1:	fsub   QWORD PTR ds:0xb5bb7e46
  41b4c7:	pop    esp
  41b4c8:	mov    dh,ch
  41b4ca:	test   dl,cl
  41b4cc:	fld    st(2)
  41b4ce:	aam    0x32
  41b4d0:	sbb    eax,0xdfc0658c
  41b4d5:	fdivr  DWORD PTR [edx]
  41b4d7:	lods   al,BYTE PTR ds:[esi]
  41b4d8:	rcl    BYTE PTR [eax+0x5c],1
  41b4db:	aaa    
  41b4dc:	add    eax,0xce9e1ece
  41b4e1:	popf   
  41b4e2:	out    0x78,al
  41b4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4e5:	outs   dx,DWORD PTR ds:[esi]
  41b4e6:	out    0xbf,eax
  41b4e8:	popf   
  41b4e9:	pop    esi
  41b4ea:	cmp    DWORD PTR [esi+0x1f08d264],edi
  41b4f0:	fmul   DWORD PTR [ebx]
  41b4f2:	mov    bh,0x89
  41b4f4:	gs out dx,al
  41b4f6:	mov    eax,0x60371c48
  41b4fb:	sbb    al,0x59
  41b4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4fe:	mov    cl,0x46
  41b500:	out    dx,al
  41b501:	mov    ds:0x43103b6a,eax
  41b506:	mov    esp,0x3455394d
  41b50b:	cwde   
  41b50c:	les    esi,FWORD PTR [edx+ebx*1-0x45]
  41b510:	loop   0x41b519
  41b512:	std    
  41b513:	mov    ds:0xeed13d68,eax
  41b518:	scas   eax,DWORD PTR es:[edi]
  41b519:	and    esi,DWORD PTR [edi-0x57]
  41b51c:	daa    
  41b51d:	inc    esp
  41b51e:	test   BYTE PTR [edx+0x75ae889f],bh
  41b524:	jecxz  0x41b526
  41b526:	xor    bl,ah
  41b528:	mov    al,ds:0x1da8896b
  41b52d:	ficom  WORD PTR [edi-0x31163abc]
  41b533:	fcomp  QWORD PTR [edx+0x68]
  41b536:	pop    esp
  41b537:	mov    bl,0x14
  41b539:	adc    eax,0x95173ca
  41b53e:	inc    esp
  41b53f:	mov    BYTE PTR [esi],0xd6
  41b542:	xor    eax,0x68be53ef
  41b547:	call   0xdcd9:0x8450a45e
  41b54e:	dec    ebx
  41b54f:	xchg   ebp,eax
  41b550:	inc    edx
  41b551:	jecxz  0x41b57b
  41b553:	popa   
  41b554:	sub    al,0x79
  41b556:	out    dx,eax
  41b557:	icebp  
  41b558:	jmp    0xc901:0x59e7295c
  41b55f:	xchg   edi,eax
  41b560:	lods   al,BYTE PTR ds:[esi]
  41b561:	push   ebx
  41b562:	sub    DWORD PTR [eax-0x5b120b12],edx
  41b568:	inc    ebp
  41b569:	les    ecx,FWORD PTR [eax]
  41b56b:	in     eax,0x89
  41b56d:	scas   eax,DWORD PTR es:[edi]
  41b56e:	stc    
  41b56f:	outs   dx,DWORD PTR ds:[esi]
  41b570:	mov    ds,WORD PTR [ebp+ebp*1+0x78861b50]
  41b577:	pop    ds
  41b578:	fild   WORD PTR [eax+eax*8]
  41b57b:	(bad)
  41b57e:	pusha  
  41b57f:	xor    BYTE PTR [edi+0x39],cl
  41b582:	lahf   
  41b583:	lahf   
  41b584:	add    al,0x34
  41b586:	cmp    eax,DWORD PTR [eax-0x7d]
  41b589:	in     al,dx
  41b58a:	cmp    al,0x32
  41b58c:	aas    
  41b58d:	sbb    al,0x38
  41b58f:	jge    0x41b579
  41b591:	dec    esp
  41b592:	shr    BYTE PTR [esi+0x33],1
  41b595:	adc    eax,0x1342e624
  41b59a:	(bad)
  41b59f:	pop    eax
  41b5a0:	aad    0x63
  41b5a2:	cmp    esp,esp
  41b5a4:	inc    esp
  41b5a5:	pop    es
  41b5a6:	pusha  
  41b5a7:	cmp    DWORD PTR [esi+eiz*4],edi
  41b5aa:	xchg   BYTE PTR ds:0x8e3053df,dh
  41b5b0:	div    BYTE PTR [eax+0x6e]
  41b5b3:	jb     0x41b5bf
  41b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b6:	pushf  
  41b5b7:	shr    bl,1
  41b5b9:	pop    esi
  41b5ba:	fst    DWORD PTR [edx+edi*4-0x119cc20b]
  41b5c1:	aam    0xc5
  41b5c3:	push   esi
  41b5c4:	dec    edi
  41b5c5:	inc    esp
  41b5c6:	fcomi  st,st(2)
  41b5c8:	hlt    
  41b5c9:	sar    eax,1
  41b5cb:	inc    BYTE PTR [edi]
  41b5cd:	test   BYTE PTR [esi+eiz*2-0x41],0x75
  41b5d2:	push   ebx
  41b5d3:	test   al,0xab
  41b5d5:	cld    
  41b5d6:	loop   0x41b5e6
  41b5d8:	ret    
  41b5d9:	inc    ecx
  41b5da:	xchg   ecx,eax
  41b5db:	lahf   
  41b5dc:	and    al,BYTE PTR [ebp+0x48]
  41b5df:	fmul   DWORD PTR [esi-0x13741db0]
  41b5e5:	mov    edx,0x2a3944ff
  41b5ea:	fcomp  QWORD PTR [esi+ebp*8-0x42c078f0]
  41b5f1:	retf   0xce62
  41b5f4:	inc    edi
  41b5f5:	mov    eax,ds:0x2a02cbed
  41b5fa:	and    ch,dl
  41b5fc:	adc    esi,DWORD PTR [esi+0x1]
  41b5ff:	nop
  41b600:	lahf   
  41b601:	fsubr  DWORD PTR [edi]
  41b603:	jae    0x41b67c
  41b605:	jmp    0x41b64c
  41b607:	loopne 0x41b5ae
  41b609:	test   eax,0x7690c374
  41b60e:	push   eax
  41b60f:	mov    ch,dh
  41b611:	push   0x1c
  41b613:	dec    edx
  41b614:	adc    BYTE PTR [esi-0x7f0e444a],cl
  41b61a:	fidiv  DWORD PTR [esp+edx*4+0x52de714]
  41b621:	inc    eax
  41b622:	clc    
  41b623:	bound  ebx,QWORD PTR [ebp-0x57fa71ba]
  41b629:	out    0xc1,al
  41b62b:	and    cl,BYTE PTR [edx+0x59]
  41b62e:	cmp    bh,BYTE PTR [edi+esi*1-0x63]
  41b632:	test   DWORD PTR [esi+0x5f17c048],0x29f852fa
  41b63c:	push   ds
  41b63d:	add    edi,esi
  41b63f:	jnp    0x41b65d
  41b641:	mov    eax,0x7aec6f53
  41b646:	jbe    0x41b6b7
  41b648:	out    0xc8,al
  41b64a:	and    eax,0xdd4e0fe8
  41b64f:	jge    0x41b5d2
  41b651:	sbb    DWORD PTR [ebx-0x3342ece1],ebx
  41b657:	sahf   
  41b658:	mov    al,ds:0x4a1346d
  41b65d:	pop    ecx
  41b65e:	arpl   WORD PTR [ecx],cx
  41b660:	pushf  
  41b661:	and    ecx,eax
  41b663:	stos   DWORD PTR es:[edi],eax
  41b664:	sbb    eax,0x132f2890
  41b669:	nop
  41b66a:	imul   ecx,ebx,0x39d3ba7f
  41b670:	imul   BYTE PTR ds:0x43f8f388
  41b676:	(bad)  
  41b677:	loopne 0x41b631
  41b679:	ret    
  41b67a:	pop    ebx
  41b67b:	outs   dx,BYTE PTR ds:[esi]
  41b67c:	les    esi,FWORD PTR [esi*8+0x24bd85eb]
  41b683:	xlat   BYTE PTR ds:[ebx]
  41b684:	push   edi
  41b685:	xabort 0x44
  41b688:	push   ds
  41b689:	mov    cs,esi
  41b68b:	fisttp WORD PTR [edx]
  41b68d:	and    al,BYTE PTR [ecx]
  41b68f:	push   edx
  41b690:	pop    es
  41b691:	add    al,al
  41b693:	sub    eax,DWORD PTR [eax]
  41b695:	rol    BYTE PTR [ebx-0x1d],cl
  41b698:	mov    esi,0xd5ed133c
  41b69d:	inc    edx
  41b69e:	call   0x46b1:0x5085af82
  41b6a5:	lea    ecx,[eax+0x61a6d9a2]
  41b6ab:	(bad)  
  41b6ac:	cwde   
  41b6ad:	loop   0x41b667
  41b6af:	fadd   st,st(3)
  41b6b1:	mov    eax,0xb76dee02
  41b6b6:	test   eax,0x5eaede65
  41b6bb:	aad    0x4c
  41b6bd:	das    
  41b6be:	jmp    0x41b710
  41b6c0:	jecxz  0x41b6a7
  41b6c2:	fld    DWORD PTR [ebx]
  41b6c4:	sub    DWORD PTR [esi-0x6e],eax
  41b6c7:	mov    bl,0xfe
  41b6c9:	add    DWORD PTR [ebx-0x3a],edi
  41b6cc:	scas   eax,DWORD PTR es:[edi]
  41b6cd:	dec    edx
  41b6ce:	(bad)  
  41b6d0:	(bad)  
  41b6d1:	pop    edi
  41b6d2:	xchg   ebx,eax
  41b6d3:	inc    edx
  41b6d4:	mov    esi,0xb124a823
  41b6d9:	or     eax,0x62d7a273
  41b6de:	xchg   esp,eax
  41b6df:	ins    DWORD PTR es:[edi],dx
  41b6e0:	test   ebx,ebx
  41b6e2:	lods   eax,DWORD PTR ds:[esi]
  41b6e3:	push   ebx
  41b6e4:	(bad)  
  41b6e5:	and    edi,eax
  41b6e7:	clc    
  41b6e8:	jl     0x41b704
  41b6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6eb:	ret    0xcbeb
  41b6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6ef:	jns    0x41b715
  41b6f1:	shr    BYTE PTR [ebp-0x67],cl
  41b6f4:	shl    ah,0xcf
  41b6f7:	js     0x41b6fc
  41b6f9:	inc    ebp
  41b6fa:	(bad)  
  41b6fb:	retf   0xf229
  41b6fe:	mov    bl,0xc
  41b700:	mul    DWORD PTR [edx]
  41b702:	adc    DWORD PTR [eax+0x74],ebx
  41b705:	adc    eax,0x249b0c01
  41b70a:	mov    dl,0x6
  41b70c:	jmp    0xfff1:0x5a7a9df7
  41b713:	outs   dx,DWORD PTR ds:[esi]
  41b714:	or     al,BYTE PTR [edx+esi*1-0x2a7a1fad]
  41b71b:	sbb    dh,bh
  41b71d:	sti    
  41b71e:	test   BYTE PTR [ebx],ah
  41b720:	call   0x1d00:0xbd910d9b
  41b727:	sahf   
  41b728:	je     0x41b71f
  41b72a:	jmp    0x1bff:0xc488dacc
  41b731:	test   DWORD PTR ds:0xf90db8e4,esp
  41b737:	rcr    BYTE PTR [eax+0x42],0x89
  41b73b:	imul   esi,DWORD PTR [ebx+0x7],0xffffffda
  41b73f:	cli    
  41b740:	pop    ax
  41b742:	jbe    0x41b7a5
  41b744:	xchg   esi,eax
  41b745:	cmp    dh,dl
  41b747:	push   ss
  41b748:	adc    DWORD PTR ss:[ecx-0x67],0xe0fa6b75
  41b750:	arpl   WORD PTR [ebp-0x1fb8c1f4],cx
  41b756:	nop
  41b757:	push   ecx
  41b758:	lahf   
  41b759:	xchg   esi,eax
  41b75a:	or     DWORD PTR [eax],ebp
  41b75c:	mov    ds:0x7257ca39,al
  41b761:	lods   eax,DWORD PTR ds:[esi]
  41b762:	adc    al,0xd2
  41b764:	pusha  
  41b765:	mov    DWORD PTR [edi+ebp*1+0x631dc3a9],ecx
  41b76c:	mov    esi,es
  41b76e:	xchg   ecx,eax
  41b76f:	test   DWORD PTR [eax],0x227e426c
  41b775:	sub    al,0x2f
  41b777:	imul   edx,DWORD PTR [ebp+0x5e3f1f82],0x79c4d968
  41b781:	outs   dx,DWORD PTR ds:[esi]
  41b782:	or     al,0xa1
  41b784:	(bad)  
  41b785:	pop    edx
  41b786:	cmp    al,0xdf
  41b788:	fstp   DWORD PTR [edi-0x340275b7]
  41b78e:	jo     0x41b7d1
  41b790:	mov    ds:0xed9f0b97,eax
  41b795:	loope  0x41b763
  41b797:	adc    DWORD PTR [edi-0x69cb18ff],esp
  41b79d:	or     BYTE PTR [edx+0x7e],al
  41b7a0:	pop    esi
  41b7a1:	popf   
  41b7a2:	mov    eax,0xec9fed92
  41b7a7:	js     0x41b7ec
  41b7a9:	jno    0x41b75c
  41b7ab:	pop    edi
  41b7ac:	jl     0x41b7b1
  41b7ae:	xor    BYTE PTR [ecx],ch
  41b7b0:	adc    esp,DWORD PTR [ebx]
  41b7b2:	xor    DWORD PTR ds:0x37893b24,ebp
  41b7b8:	sar    esi,1
  41b7ba:	inc    ebx
  41b7bb:	jno    0x41b829
  41b7bd:	cld    
  41b7be:	mov    al,0xb0
  41b7c0:	inc    esi
  41b7c1:	aad    0x92
  41b7c3:	mov    ah,BYTE PTR [eax]
  41b7c5:	mov    esi,0x799e33e8
  41b7ca:	in     eax,0xa5
  41b7cc:	mov    WORD PTR [esi-0x4],fs
  41b7cf:	sub    eax,0x1e3510e5
  41b7d4:	sub    DWORD PTR [ebx+0x0],edi
  41b7d7:	cli    
  41b7d8:	sub    al,0x3
  41b7da:	sub    eax,0x965af65d
  41b7df:	xchg   edx,eax
  41b7e0:	push   ss
  41b7e1:	fbld   TBYTE PTR [ecx+ebx*4]
  41b7e4:	push   cs
  41b7e5:	in     al,dx
  41b7e6:	add    BYTE PTR [ebp+0x63],ch
  41b7e9:	ret    0x4dd7
  41b7ec:	adc    DWORD PTR [edi],eax
  41b7ee:	hlt    
  41b7ef:	adc    BYTE PTR [ebp+0x21],al
  41b7f2:	add    al,0xdf
  41b7f4:	mov    ch,0xdc
  41b7f6:	push   edi
  41b7f7:	test   BYTE PTR [edi-0x51d85356],bl
  41b7fd:	dec    ebp
  41b7fe:	inc    ebx
  41b7ff:	aad    0x4a
  41b801:	jb     0x41b855
  41b803:	xor    dh,dl
  41b805:	shr    BYTE PTR [ebx-0x3fd076a1],1
  41b80b:	adc    esi,DWORD PTR ss:[esi-0x5e7eb7cb]
  41b812:	push   0x3f2b57ff
  41b817:	inc    edi
  41b818:	arpl   WORD PTR [ebx-0x2e],bx
  41b81b:	xchg   DWORD PTR [ebp+edx*8+0x8],eax
  41b81f:	jae    0x41b836
  41b821:	rcl    BYTE PTR [ecx],0xd2
  41b824:	xor    ebx,0x24
  41b827:	xchg   ebx,eax
  41b828:	dec    esi
  41b829:	sub    al,0x44
  41b82b:	fidiv  DWORD PTR [ebx+0x5f]
  41b82e:	jmp    0x41b84d
  41b830:	shr    DWORD PTR [ecx+0xab92422],1
  41b836:	push   esi
  41b837:	lea    eax,[eax]
  41b839:	push   esi
  41b83a:	sar    BYTE PTR [esi],1
  41b83c:	jle    0x41b889
  41b83e:	jecxz  0x41b8a5
  41b840:	mov    dl,0x62
  41b842:	imul   edi,ebx,0x45
  41b845:	push   edx
  41b846:	or     BYTE PTR [edx-0x6b8241b0],0xcb
  41b84d:	test   BYTE PTR [esi],bl
  41b84f:	jbe    0x41b8c5
  41b851:	or     al,0x2d
  41b853:	retf   
  41b854:	mov    esp,0x4584226e
  41b859:	outs   dx,DWORD PTR ds:[esi]
  41b85a:	adc    eax,0x4fb5b42e
  41b85f:	repnz push eax
  41b861:	cmp    BYTE PTR [ebp-0x6a],cl
  41b864:	add    al,0x6e
  41b866:	lahf   
  41b867:	loopne 0x41b8ab
  41b869:	xchg   esp,eax
  41b86a:	outs   dx,BYTE PTR ds:[esi]
  41b86b:	inc    edx
  41b86c:	mov    ecx,ebx
  41b86e:	ret    
  41b86f:	fcomp  QWORD PTR [ecx]
  41b871:	mov    ss,WORD PTR [eax*4+0x6314da40]
  41b878:	out    dx,eax
  41b879:	push   ebx
  41b87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b87b:	les    ecx,FWORD PTR [edx+0x28]
  41b87e:	adc    bl,ah
  41b880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b881:	das    
  41b882:	(bad)  
  41b883:	scas   eax,DWORD PTR es:[edi]
  41b884:	sti    
  41b885:	in     al,0x73
  41b887:	data16 in al,0x4d
  41b88a:	(bad)  
  41b88c:	add    ebp,edx
  41b88e:	sti    
  41b88f:	mov    esi,esp
  41b891:	ins    DWORD PTR es:[edi],dx
  41b892:	mov    DWORD PTR [edx+0x1f],esi
  41b895:	jmp    0x6623:0x542aec12
  41b89c:	ret    0xf53e
  41b89f:	pop    esp
  41b8a0:	(bad)  
  41b8a1:	mov    esi,DWORD PTR ds:0x99b44088
  41b8a7:	jmp    0x8c23:0xc129e1a4
  41b8ae:	lds    ebp,FWORD PTR [esi+0x2e85ca56]
  41b8b4:	fistp  WORD PTR [ecx]
  41b8b6:	mov    edx,0xd3644b00
  41b8bb:	lods   al,BYTE PTR ds:[esi]
  41b8bc:	fsub   DWORD PTR [ebp-0x2b49079]
  41b8c2:	ret    
  41b8c3:	mov    dl,BYTE PTR [ebp+0x29]
  41b8c6:	pop    ebx
  41b8c7:	pop    edx
  41b8c8:	retf   0x899f
  41b8cb:	sub    ebp,DWORD PTR [edx+0x1866ad12]
  41b8d1:	mov    cl,0x69
  41b8d3:	xlat   BYTE PTR ds:[ebx]
  41b8d4:	pop    ebp
  41b8d5:	das    
  41b8d6:	daa    
  41b8d7:	mov    ah,0x17
  41b8d9:	ror    BYTE PTR [edi-0x18],cl
  41b8dc:	fpatan 
  41b8de:	xchg   ebx,eax
  41b8df:	stos   DWORD PTR es:[edi],eax
  41b8e0:	jo     0x41b8d6
  41b8e2:	adc    dl,BYTE PTR [edx]
  41b8e4:	push   edx
  41b8e5:	ret    0x4b38
  41b8e8:	sub    al,BYTE PTR [ebx-0x62]
  41b8eb:	imul   edi,DWORD PTR [esi+0x27cad2e1],0x6cee923b
  41b8f5:	cmc    
  41b8f6:	mov    bh,0xd2
  41b8f8:	jg     0x41b8c5
  41b8fa:	pop    ebp
  41b8fb:	or     eax,DWORD PTR [ebp-0x7a]
  41b8fe:	or     BYTE PTR [ebx+esi*4-0x2f],cl
  41b902:	cwde   
  41b903:	sbb    cl,BYTE PTR [ecx+0x6508b737]
  41b909:	xchg   ebx,eax
  41b90a:	sbb    dl,BYTE PTR [ebx-0x68ec9a79]
  41b910:	adc    cl,al
  41b912:	nop
  41b913:	dec    ebx
  41b914:	pop    eax
  41b915:	fnstenv [ebx]
  41b917:	in     al,0x40
  41b919:	adc    edx,eax
  41b91b:	push   ebp
  41b91c:	dec    edx
  41b91d:	inc    edi
  41b91e:	mov    esi,DWORD PTR [edi-0x7256020a]
  41b924:	dec    eax
  41b925:	or     BYTE PTR [edx+0x51],dh
  41b928:	push   edx
  41b929:	test   DWORD PTR [eax],edx
  41b92b:	xor    BYTE PTR [ebp-0x6f],cl
  41b92e:	cwde   
  41b92f:	mov    edx,0x2ba2987c
  41b934:	je     0x41b98a
  41b936:	mov    ds:0xd34a495c,al
  41b93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b93c:	mov    cl,0x4
  41b93e:	outs   dx,DWORD PTR ds:[esi]
  41b93f:	fsubr  DWORD PTR [edx-0x36]
  41b942:	xchg   edx,eax
  41b943:	repz adc eax,DWORD PTR ss:[ecx-0x7d]
  41b948:	inc    ebx
  41b949:	scas   eax,DWORD PTR es:[edi]
  41b94a:	fisubr DWORD PTR [ebx]
  41b94c:	lods   eax,DWORD PTR ds:[esi]
  41b94d:	clc    
  41b94e:	and    al,0x8e
  41b950:	sub    DWORD PTR [edx-0x15a38c7b],ecx
  41b956:	lods   eax,DWORD PTR ds:[esi]
  41b957:	test   eax,0xf63f2703
  41b95c:	mov    esi,0x4a4b8a58
  41b961:	or     BYTE PTR [eax+0x68d17812],ch
  41b967:	sub    BYTE PTR [ebp+edx*8-0x4a8be3ce],ch
  41b96e:	xor    bl,BYTE PTR [edx+0x6f5e3f58]
  41b974:	and    dl,BYTE PTR [esi+esi*2-0x6e]
  41b978:	sbb    al,0x1c
  41b97a:	cld    
  41b97b:	adc    esi,0x59d770f
  41b981:	imul   ecx,DWORD PTR [esi],0xffffff94
  41b984:	addr16 (bad) 
  41b986:	xor    DWORD PTR ss:[eax],ebx
  41b989:	aas    
  41b98a:	mov    eax,0xf4ae451
  41b98f:	fdivr  DWORD PTR [edx+0x2ae217e]
  41b995:	xor    BYTE PTR [edi+0x53491fbc],al
  41b99b:	popa   
  41b99c:	cmp    eax,0x66c9201f
  41b9a1:	dec    eax
  41b9a2:	push   cs
  41b9a3:	add    DWORD PTR [edx-0x60],0xc7a61e91
  41b9aa:	add    BYTE PTR [edi+0x66414843],al
  41b9b0:	fisttp WORD PTR [edx]
  41b9b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9b3:	scas   al,BYTE PTR es:[edi]
  41b9b4:	mov    ch,BYTE PTR [esi+0x3b]
  41b9b7:	jecxz  0x41ba2e
  41b9b9:	gs add eax,0x79689928
  41b9bf:	retf   
  41b9c0:	out    0x71,al
  41b9c2:	hlt    
  41b9c3:	push   esp
  41b9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9c6:	add    eax,0x593d1068
  41b9cb:	pop    es
  41b9cc:	and    dl,BYTE PTR gs:[eax+0x38]
  41b9d0:	inc    ecx
  41b9d1:	imul   ebx,DWORD PTR [edi+0x3fe02fbe],0x5987c2bd
  41b9db:	and    ah,BYTE PTR [ebx-0x5f27b26f]
  41b9e1:	cmp    edi,edx
  41b9e3:	pop    esp
  41b9e4:	aas    
  41b9e5:	pop    ecx
  41b9e6:	ds cmc 
  41b9e8:	jno    0x41b972
  41b9ea:	push   es
  41b9eb:	push   0x8733239d
  41b9f0:	mov    ecx,0x5d82b107
  41b9f5:	inc    esi
  41b9f6:	cli    
  41b9f7:	jg     0x41ba37
  41b9f9:	call   0x9004:0x5866029e
  41ba00:	xchg   esp,eax
  41ba01:	call   0x87be:0xc1427075
  41ba08:	sbb    eax,0x348b1022
  41ba0d:	xchg   ebp,eax
  41ba0e:	popf   
  41ba0f:	push   es
  41ba10:	dec    esp
  41ba11:	call   0x1b01fc56
  41ba16:	pop    ss
  41ba17:	dec    esi
  41ba18:	sbb    bl,al
  41ba1a:	push   ebx
  41ba1b:	cdq    
  41ba1c:	aaa    
  41ba1d:	cmp    ecx,DWORD PTR [esi-0x22]
  41ba20:	xor    al,0x2e
  41ba22:	out    0x47,eax
  41ba24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba25:	mov    dh,0xd
  41ba27:	(bad)  
  41ba29:	adc    bl,cl
  41ba2b:	jne    0x41b9fc
  41ba2d:	loope  0x41ba66
  41ba2f:	fsub   st(5),st
  41ba31:	sub    al,0xd8
  41ba33:	push   0x37d60f7a
  41ba38:	mov    DWORD PTR [edi-0x4c14bf81],edx
  41ba3e:	sahf   
  41ba3f:	xchg   BYTE PTR [ebp+0x65],dl
  41ba42:	(bad)  
  41ba43:	iret   
  41ba44:	loopne 0x41ba9a
  41ba46:	out    dx,eax
  41ba47:	pop    ebp
  41ba48:	xchg   edi,eax
  41ba49:	dec    ebp
  41ba4a:	jge    0x41ba63
  41ba4c:	mov    ecx,0x81c6ce06
  41ba51:	test   eax,0x6d419040
  41ba56:	sar    ecx,cl
  41ba58:	xor    BYTE PTR [edi-0xb],dh
  41ba5b:	jge    0x41b9ea
  41ba5d:	push   es
  41ba5e:	and    eax,0x1fd5c75a
  41ba63:	jl     0x41ba59
  41ba65:	adc    cl,BYTE PTR [edi-0x64385240]
  41ba6b:	or     al,0x16
  41ba6d:	cmp    ah,BYTE PTR [esi]
  41ba6f:	push   esp
  41ba70:	fimul  DWORD PTR [ebx-0x7e]
  41ba73:	cmp    dh,BYTE PTR [eax-0x19]
  41ba76:	daa    
  41ba77:	enter  0xc47c,0x39
  41ba7b:	jg     0x41ba88
  41ba7d:	jg     0x41ba51
  41ba7f:	jo     0x41baae
  41ba81:	cmp    bh,cl
  41ba83:	repz rcr ebp,cl
  41ba86:	cmp    DWORD PTR [edx-0x26],esi
  41ba89:	rol    DWORD PTR [edx+0x7589410c],0xe3
  41ba90:	je     0x41bad2
  41ba92:	mov    ds:0x7e05a390,al
  41ba97:	adc    bh,BYTE PTR [eax+0x20]
  41ba9a:	xchg   esp,eax
  41ba9b:	aaa    
  41ba9c:	lods   al,BYTE PTR ds:[esi]
  41ba9d:	cmp    DWORD PTR [ecx-0x69],0xf8cb82b8
  41baa4:	xchg   edx,eax
  41baa5:	(bad)  
  41baa6:	call   0x354b:0x93444970
  41baad:	les    esp,FWORD PTR [bp+di-0x6f7e]
  41bab2:	push   esi
  41bab3:	mov    ebp,0xb72d7573
  41bab8:	jg     0x41baaa
  41baba:	test   al,0xe1
  41babc:	shr    dl,1
  41babe:	cmp    ebx,DWORD PTR [ebp+0x391f1a92]
  41bac4:	gs ins BYTE PTR es:[edi],dx
  41bac6:	sub    esp,DWORD PTR [ebx+0x72]
  41bac9:	push   ds
  41baca:	fidivr WORD PTR [ecx+0x24]
  41bacd:	fsub   QWORD PTR [ebx-0x58de73e5]
  41bad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad4:	mov    BYTE PTR [esi],bl
  41bad6:	xchg   ebx,eax
  41bad7:	scas   al,BYTE PTR es:[edi]
  41bad8:	and    eax,0x45021502
  41badd:	mov    ds:0xa47de7ab,al
  41bae2:	inc    edx
  41bae3:	dec    esi
  41bae4:	cmp    dh,BYTE PTR [edi-0x7b]
  41bae7:	push   DWORD PTR [ecx+eiz*2]
  41baea:	push   ds
  41baeb:	jne    0x41bb2a
  41baed:	push   esi
  41baee:	test   eax,0x4dcfcd4b
  41baf3:	dec    eax
  41baf4:	lea    eax,[edi+0x1c]
  41baf7:	retf   
  41baf8:	jg     0x41ba7b
  41bafa:	xchg   ebx,eax
  41bafb:	rcr    DWORD PTR [edx],cl
  41bafd:	out    dx,al
  41bafe:	jp     0x41bb1f
  41bb00:	or     BYTE PTR [esi],cl
  41bb02:	test   BYTE PTR [edx+0x69],0x58
  41bb06:	dec    ebx
  41bb07:	jmp    0x6f1efed9
  41bb0c:	jp     0x41bb21
  41bb0e:	or     DWORD PTR [ebx+eiz*1],edi
  41bb11:	xchg   DWORD PTR [edi+0x14754fce],ebx
  41bb17:	xlat   BYTE PTR ds:[ebx]
  41bb18:	dec    edi
  41bb19:	inc    esi
  41bb1a:	mov    ebx,0x363903e4
  41bb1f:	push   es
  41bb20:	pop    ecx
  41bb21:	mov    ss,WORD PTR [edi+edi*1-0x46]
  41bb25:	mov    dl,0xde
  41bb27:	mov    cs,WORD PTR [eax+0xa524889]
  41bb2d:	xor    ah,BYTE PTR [ebp+0x4cac6fec]
  41bb33:	in     al,dx
  41bb34:	or     esp,DWORD PTR [eax+ecx*4+0x1d]
  41bb38:	fs enter 0xff4a,0x5e
  41bb3d:	dec    eax
  41bb3e:	push   0xffffffcf
  41bb40:	scas   eax,DWORD PTR es:[edi]
  41bb41:	cmc    
  41bb42:	fwait
  41bb43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb44:	aad    0x4a
  41bb46:	in     eax,0x75
  41bb48:	les    edi,FWORD PTR [eax]
  41bb4a:	into   
  41bb4b:	xchg   esp,eax
  41bb4c:	mov    dl,0x0
  41bb4e:	add    ah,BYTE PTR [esp+eiz*2+0x1520dcd7]
  41bb55:	mov    WORD PTR [eax-0x36],?
  41bb58:	rcr    BYTE PTR [esi],cl
  41bb5a:	xchg   esp,eax
  41bb5b:	push   ds
  41bb5c:	adc    DWORD PTR [ebx],esp
  41bb5e:	push   edi
  41bb5f:	loop   0x41bbaa
  41bb61:	inc    ebp
  41bb62:	add    ecx,DWORD PTR [ebx]
  41bb64:	sahf   
  41bb65:	in     al,dx
  41bb66:	xchg   esi,eax
  41bb67:	dec    ebp
  41bb68:	ret    
  41bb69:	imul   eax,ebp,0x56f97107
  41bb6f:	sbb    DWORD PTR [ebx+0x1fa2e8fc],0xffffff88
  41bb76:	outs   dx,DWORD PTR ds:[esi]
  41bb77:	sub    eax,DWORD PTR [ebp+0x6d]
  41bb7a:	jg     0x41bb26
  41bb7c:	mov    ah,0x8b
  41bb7e:	adc    eax,0xcc56888d
  41bb83:	and    BYTE PTR [edx],dh
  41bb85:	scas   eax,DWORD PTR es:[edi]
  41bb86:	popf   
  41bb87:	cmp    al,BYTE PTR ds:0x858f673b
  41bb8d:	invd   
  41bb8f:	fidivr WORD PTR [ecx+ebp*1-0x376c0fd]
  41bb96:	into   
  41bb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb98:	push   eax
  41bb99:	pop    ebx
  41bb9a:	add    DWORD PTR ds:0xf142bdf6,edx
  41bba0:	pop    edx
  41bba1:	xchg   edx,eax
  41bba2:	aas    
  41bba3:	sub    BYTE PTR [edx-0x5918eb0b],bl
  41bba9:	push   ds
  41bbaa:	test   eax,0x915bc15c
  41bbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbb0:	inc    ebx
  41bbb1:	jns    0x41bc0c
  41bbb3:	xor    cl,ch
  41bbb5:	cwde   
  41bbb6:	sbb    eax,0x5c8f5750
  41bbbb:	pop    esp
  41bbbc:	mov    bl,0xf3
  41bbbe:	ds dec esp
  41bbc0:	lds    ebp,FWORD PTR [eax+0x5a157e12]
  41bbc6:	inc    esp
  41bbc7:	(bad)  
  41bbc8:	sti    
  41bbc9:	xchg   esp,eax
  41bbca:	lahf   
  41bbcb:	push   ecx
  41bbcc:	pop    esp
  41bbcd:	or     dl,BYTE PTR [edx]
  41bbcf:	mov    edi,0x642f7a40
  41bbd4:	outs   dx,BYTE PTR ds:[esi]
  41bbd5:	pop    edi
  41bbd6:	push   ss
  41bbd7:	jmp    0x1ba7:0xe9e5ffec
  41bbde:	test   edx,edi
  41bbe0:	ror    BYTE PTR [edx+0x79ea442d],0x20
  41bbe7:	inc    ecx
  41bbe8:	xor    eax,0x1215f16f
  41bbed:	jno    0x41bb70
  41bbef:	cmp    dh,ch
  41bbf1:	xor    DWORD PTR [ebx],eax
  41bbf3:	pop    esi
  41bbf4:	repz cs mov al,0x7e
  41bbf8:	icebp  
  41bbf9:	aad    0x16
  41bbfb:	push   esi
  41bbfc:	popf   
  41bbfd:	test   bl,dh
  41bbff:	add    eax,0x9a194104
  41bc04:	inc    eax
  41bc05:	mov    ebx,0x35e87827
  41bc0a:	mov    DWORD PTR [edi-0x38],edx
  41bc0d:	popa   
  41bc0e:	jae    0x41bbf8
  41bc10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc12:	(bad)  
  41bc13:	ins    BYTE PTR es:[edi],dx
  41bc14:	ins    DWORD PTR es:[edi],dx
  41bc15:	or     ebx,DWORD PTR [ebx+0x35c4b7f1]
  41bc1b:	mov    bh,0xdf
  41bc1d:	cmpps  xmm7,XMMWORD PTR [edi],0xb7
  41bc21:	jmp    0x30cd:0xa3f98ed2
  41bc28:	pop    eax
  41bc29:	fiadd  DWORD PTR [ebx]
  41bc2b:	cli    
  41bc2c:	hlt    
  41bc2d:	nop
  41bc2e:	inc    bx
  41bc30:	iret   
  41bc31:	sbb    eax,0x905e89bb
  41bc36:	mov    eax,ds:0x33d6db6c
  41bc3b:	dec    ebx
  41bc3c:	xchg   edx,eax
  41bc3d:	push   0x1c45eab7
  41bc42:	jno    0x41bbff
  41bc44:	sub    ecx,edx
  41bc46:	imul   esi,DWORD PTR gs:[edx],0xfffffffc
  41bc4a:	lds    ecx,FWORD PTR ds:0xeef00c0d
  41bc50:	push   esp
  41bc51:	add    ebp,ebp
  41bc53:	std    
  41bc54:	and    ebp,eax
  41bc56:	xchg   ebx,eax
  41bc57:	ror    dh,0xc6
  41bc5a:	call   0x77a81dc5
  41bc5f:	aam    0xb2
  41bc61:	inc    eax
  41bc62:	fimul  WORD PTR [esp+eax*8+0x3ff72b8c]
  41bc69:	cs js  0x41bcac
  41bc6c:	mov    esi,0x340c04a5
  41bc71:	nop
  41bc72:	in     eax,0xc9
  41bc74:	jmp    0x6c8a:0x770c511c
  41bc7b:	retf   
  41bc7c:	inc    edi
  41bc7d:	and    bh,dl
  41bc7f:	fdivr  st,st(0)
  41bc81:	adc    BYTE PTR [ecx+0x19a67c72],ah
  41bc87:	stos   DWORD PTR es:[edi],eax
  41bc88:	sahf   
  41bc89:	je     0x41bca6
  41bc8b:	test   DWORD PTR [ebx],0xcb504fa4
  41bc91:	fldz   
  41bc93:	ss xor al,0x3
  41bc96:	shl    BYTE PTR ss:[edi-0x7304e75],1
  41bc9d:	sbb    al,0x92
  41bc9f:	lock or ax,0x8a60
  41bca4:	cmc    
  41bca5:	hlt    
  41bca6:	adc    edx,edi
  41bca8:	sub    eax,0xb5bbd2ab
  41bcad:	mov    dh,0xba
  41bcaf:	xchg   esp,eax
  41bcb0:	and    eax,0x1e9289fa
  41bcb5:	mul    ebp
  41bcb7:	hlt    
  41bcb8:	mov    bh,0x15
  41bcba:	or     eax,0x5b91b9bd
  41bcbf:	or     BYTE PTR [ebx+ebx*1],dh
  41bcc2:	int    0x88
  41bcc4:	lock sub eax,0x566f4414
  41bcca:	mov    bl,0xec
  41bccc:	pop    ebp
  41bccd:	mov    DWORD PTR [ebp-0x51699ae6],ebp
  41bcd3:	aaa    
  41bcd4:	cmp    cl,BYTE PTR [esi+0xb6ef75b]
  41bcda:	aas    
  41bcdb:	adc    ah,cl
  41bcdd:	xchg   DWORD PTR [ecx],eax
  41bcdf:	fisub  DWORD PTR [edx-0x3]
  41bce2:	in     eax,dx
  41bce3:	(bad)  
  41bce4:	cmp    eax,0x28d2521a
  41bce9:	adc    esi,DWORD PTR [ebx+eiz*1-0xde3f745]
  41bcf0:	retf   0x8778
  41bcf3:	dec    edi
  41bcf4:	js     0x41bca3
  41bcf6:	lods   eax,DWORD PTR ds:[esi]
  41bcf7:	jnp    0x41bd35
  41bcf9:	cmp    bl,BYTE PTR [edx]
  41bcfb:	fcom   QWORD PTR [edi+ebp*4]
  41bcfe:	aad    0x82
  41bd00:	sahf   
  41bd01:	out    dx,eax
  41bd02:	dec    esp
  41bd03:	test   DWORD PTR [ecx+0x5d],ebp
  41bd06:	mov    DWORD PTR [eax],esi
  41bd08:	sub    bh,BYTE PTR [edi]
  41bd0a:	dec    ebx
  41bd0b:	rcl    BYTE PTR [esi+0x44],0xdd
  41bd0f:	mov    ecx,0x16ee427d
  41bd14:	sub    BYTE PTR [ecx+ebp*1-0x9],0x66
  41bd19:	repnz out dx,eax
  41bd1b:	jns    0x41bd05
  41bd1d:	ret    0x2376
  41bd20:	inc    edx
  41bd21:	sbb    DWORD PTR [ebx],ebp
  41bd23:	daa    
  41bd24:	(bad)  
  41bd25:	arpl   WORD PTR [edx+0x7d],ax
  41bd28:	and    eax,0x91ed5fa1
  41bd2d:	ja     0x41bd96
  41bd2f:	rcl    dl,cl
  41bd31:	mov    dl,0x31
  41bd33:	mov    ebx,0x2dc08023
  41bd38:	out    dx,eax
  41bd39:	fidivr DWORD PTR [ecx]
  41bd3b:	pop    esp
  41bd3c:	daa    
  41bd3d:	adc    bl,BYTE PTR [edi-0x6912021f]
  41bd43:	popf   
  41bd44:	pop    ebp
  41bd45:	jge    0x41bcee
  41bd47:	push   ebp
  41bd48:	lock push eax
  41bd4a:	aad    0x3a
  41bd4c:	dec    esp
  41bd4d:	add    BYTE PTR [edi+0x72],dh
  41bd50:	(bad)  
  41bd51:	and    al,0x4b
  41bd53:	mov    al,0xb1
  41bd55:	push   esi
  41bd56:	inc    ebp
  41bd57:	add    cl,BYTE PTR [esi+0x755cdcb9]
  41bd5d:	push   es
  41bd5e:	in     al,0x2a
  41bd60:	out    dx,eax
  41bd61:	jecxz  0x41bda2
  41bd63:	push   ebx
  41bd64:	fwait
  41bd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd66:	mov    ebx,0x4ca6495f
  41bd6b:	mov    dh,0x16
  41bd6d:	je     0x41bd36
  41bd6f:	shl    BYTE PTR [edi],0xb9
  41bd72:	test   eax,0xf7b2fcee
  41bd77:	nop
  41bd78:	lods   eax,DWORD PTR ds:[esi]
  41bd79:	push   edx
  41bd7a:	xchg   edx,eax
  41bd7b:	jae    0x41bd22
  41bd7d:	mov    WORD PTR [ebx+0x2b9432d3],?
  41bd83:	adc    BYTE PTR [esp+edi*4+0x634ea799],bl
  41bd8a:	in     eax,dx
  41bd8b:	call   0x87b1a3c4
  41bd90:	push   esp
  41bd91:	neg    cl
  41bd93:	cwde   
  41bd94:	daa    
  41bd95:	or     DWORD PTR [edx],esp
  41bd97:	inc    eax
  41bd99:	pop    eax
  41bd9a:	xchg   ecx,eax
  41bd9b:	test   al,0xf0
  41bd9d:	cmp    eax,0x522ef6d9
  41bda2:	jbe    0x41bdd3
  41bda4:	push   es
  41bda5:	inc    edx
  41bda6:	add    al,0x73
  41bda8:	xchg   ebx,ebx
  41bdaa:	mov    ecx,es
  41bdac:	sbb    bh,BYTE PTR [ebp+0x46]
  41bdaf:	mov    esi,0xf2cf3bff
  41bdb4:	add    esi,esp
  41bdb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdb7:	aad    0xfc
  41bdb9:	mov    esp,0x20eaad87
  41bdbe:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41bdc1:	gs sbb bh,bl
  41bdc4:	fs out 0x56,al
  41bdc7:	jb     0x41be35
  41bdc9:	fs xchg esi,eax
  41bdcb:	popa   
  41bdcc:	stos   DWORD PTR es:[edi],eax
  41bdcd:	stos   BYTE PTR es:[edi],al
  41bdce:	pop    esi
  41bdcf:	and    ecx,DWORD PTR [eax]
  41bdd1:	xor    BYTE PTR ds:0x994d23f7,dh
  41bdd7:	test   eax,0xd3714ab6
  41bddc:	loope  0x41bdc5
  41bdde:	loope  0x41be2b
  41bde0:	pop    ebp
  41bde1:	dec    ecx
  41bde2:	lds    esi,FWORD PTR [edi]
  41bde4:	mul    DWORD PTR [ebx-0x73]
  41bde7:	outs   dx,DWORD PTR ds:[esi]
  41bde8:	imul   ebp,DWORD PTR [ebp+0x63],0xffffffa5
  41bdec:	mov    esi,0x796c42cb
  41bdf1:	imul   esp,DWORD PTR [esi],0xdc639754
  41bdf7:	cmp    BYTE PTR [ebp-0x4d],ah
  41bdfa:	outs   dx,DWORD PTR ds:[esi]
  41bdfb:	mov    eax,0x1f617b9a
  41be00:	mov    DWORD PTR [eax+0x2ee2793b],esi
  41be06:	lods   al,BYTE PTR ds:[esi]
  41be07:	jmp    0x79dc7d44
  41be0c:	fidiv  DWORD PTR [edx]
  41be0e:	ja     0x41bddd
  41be10:	lods   eax,DWORD PTR ds:[esi]
  41be11:	dec    ebp
  41be12:	jno    0x41be67
  41be14:	xor    al,0xe5
  41be16:	out    0xd9,al
  41be18:	loope  0x41be3f
  41be1a:	push   ss
  41be1b:	cli    
  41be1c:	sbb    ecx,ebx
  41be1e:	jl     0x41bda6
  41be20:	inc    edi
  41be21:	cs out 0x4b,al
  41be24:	adc    eax,0x10976905
  41be29:	cmp    DWORD PTR [ebx-0x2f3122ce],ebx
  41be2f:	test   al,0x31
  41be31:	adc    eax,0xa29be530
  41be36:	xchg   edx,eax
  41be37:	dec    edx
  41be38:	aad    0x9c
  41be3a:	das    
  41be3b:	inc    ebp
  41be3c:	aam    0xdd
  41be3e:	mov    WORD PTR [ebx+0x29fa6c91],fs
  41be44:	push   ecx
  41be45:	lea    esp,[edx+0x2d]
  41be48:	fild   QWORD PTR [esi+0x31]
  41be4b:	xchg   edi,eax
  41be4c:	in     al,dx
  41be4d:	cmp    al,0xe0
  41be4f:	repnz fucomp st(1)
  41be52:	xchg   ebx,eax
  41be53:	push   ebp
  41be54:	or     al,0x42
  41be56:	jae    0x41be0a
  41be58:	xchg   edx,eax
  41be59:	icebp  
  41be5a:	push   ebx
  41be5b:	retf   0x7b
  41be5e:	push   ss
  41be5f:	aaa    
  41be60:	jns    0x41bdf1
  41be62:	jge    0x41be06
  41be64:	ins    DWORD PTR es:[edi],dx
  41be65:	or     al,0xb2
  41be67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be68:	add    al,0x3
  41be6a:	and    eax,0xe0ea38ae
  41be6f:	dec    esp
  41be70:	fidivr DWORD PTR [ebp-0x5369608c]
  41be76:	ret    0x7efa
  41be79:	xor    ch,ah
  41be7b:	xchg   ecx,eax
  41be7d:	adc    ebp,DWORD PTR [esi+0x4f]
  41be80:	mov    ah,BYTE PTR [ebx+0x21626980]
  41be86:	inc    edx
  41be87:	mov    ecx,0xe16f288d
  41be8c:	sbb    al,0x41
  41be8e:	dec    edx
  41be8f:	xchg   esp,eax
  41be90:	ins    DWORD PTR es:[edi],dx
  41be91:	in     eax,0x33
  41be93:	lds    ecx,FWORD PTR ds:[ebp-0x38088dc7]
  41be9a:	mov    BYTE PTR [ecx],dh
  41be9c:	push   esi
  41be9d:	xor    ecx,edx
  41be9f:	aad    0xbf
  41bea1:	pop    ecx
  41bea2:	es out 0xfb,eax
  41bea5:	xchg   ecx,eax
  41bea6:	fstp   TBYTE PTR [edi]
  41bea8:	and    BYTE PTR [edx+0x55d4ea32],cl
  41beae:	(bad)  
  41beb0:	cld    
  41beb1:	out    dx,eax
  41beb2:	adc    DWORD PTR [ebp-0x61f045b5],edx
  41beb8:	sub    esi,DWORD PTR [edx]
  41beba:	dec    edx
  41bebb:	jecxz  0x41be59
  41bebd:	fbld   TBYTE PTR [eax+0x24]
  41bec0:	in     eax,0xfa
  41bec2:	dec    ebx
  41bec3:	xchg   ah,bh
  41bec5:	jmp    0xa9a8:0x630a1c28
  41becc:	jns    0x41be54
  41bece:	scas   al,BYTE PTR es:[edi]
  41becf:	xchg   ebp,eax
  41bed0:	(bad)  
  41bed1:	pop    edx
  41bed2:	push   DWORD PTR [ebp+0x3509eb58]
  41bed8:	xchg   ebx,eax
  41bed9:	retf   
  41beda:	adc    edi,eax
  41bedc:	xchg   edi,eax
  41bedd:	adc    BYTE PTR [edx-0x798cc171],ch
  41bee3:	xchg   edx,eax
  41bee4:	xor    eax,0x303659d4
  41bee9:	xor    al,0xa1
  41beeb:	pop    eax
  41beec:	push   cs
  41beed:	fist   WORD PTR [edi-0x72]
  41bef0:	mov    cl,0x2e
  41bef2:	ins    BYTE PTR es:[edi],dx
  41bef3:	push   0x2a09af09
  41bef8:	in     al,0x51
  41befa:	in     eax,dx
  41befb:	push   ecx
  41befc:	imul   edx,DWORD PTR [edi-0x308a5228],0xe606a8ea
  41bf06:	imul   ecx,ebp,0xffffffd9
  41bf09:	mov    al,ds:0x840bdb65
  41bf0e:	fnsave [esi-0x1d]
  41bf11:	push   edi
  41bf12:	cmp    DWORD PTR [esi-0x17],esi
  41bf15:	cmc    
  41bf16:	mov    edi,0xf03c6cf7
  41bf1b:	popf   
  41bf1c:	mov    bh,0x14
  41bf1e:	in     eax,0xb4
  41bf20:	sbb    al,0xc6
  41bf22:	(bad)  
  41bf23:	xlat   BYTE PTR ds:[ebx]
  41bf24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf25:	in     eax,dx
  41bf26:	pop    edi
  41bf27:	sbb    eax,0x6fcba4f
  41bf2c:	push   ebp
  41bf2d:	sbb    eax,0x6f8adb4c
  41bf32:	xor    DWORD PTR [ecx+0x6c56a97e],eax
  41bf38:	jmp    0x495e414b
  41bf3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3e:	pop    edx
  41bf3f:	sbb    BYTE PTR [eax+edi*2+0x59],0x7c
  41bf44:	jo     0x41bf6d
  41bf46:	in     al,0x12
  41bf48:	cmp    DWORD PTR [eax],ecx
  41bf4a:	inc    esp
  41bf4b:	push   es
  41bf4c:	mov    edi,0xc6591b27
  41bf51:	sub    ebx,ebp
  41bf53:	cs mov edx,0x53384238
  41bf59:	lea    edx,[ebp-0x58]
  41bf5c:	jbe    0x41bf06
  41bf5e:	or     BYTE PTR [eax],bh
  41bf60:	(bad)  
  41bf61:	es or  al,ah
  41bf64:	js     0x41bf29
  41bf66:	icebp  
  41bf67:	pop    edx
  41bf68:	or     bl,BYTE PTR [ecx+0x1d]
  41bf6b:	std    
  41bf6c:	sub    al,0x99
  41bf6e:	adc    BYTE PTR [ebp+0x67],dh
  41bf71:	outs   dx,BYTE PTR ds:[esi]
  41bf72:	xchg   esi,eax
  41bf73:	mov    esi,0x9abf15ad
  41bf78:	sti    
  41bf79:	or     BYTE PTR [ebx-0x73],ch
  41bf7c:	out    0xe2,al
  41bf7e:	jle    0x41bfff
  41bf80:	aas    
  41bf81:	leave  
  41bf82:	mov    ebp,0xe556f248
  41bf87:	aaa    
  41bf88:	loop   0x41bf95
  41bf8a:	(bad)  
  41bf8b:	mov    edx,0x7d8ef805
  41bf90:	(bad)
  41bf93:	es out dx,al
  41bf95:	out    0xc6,eax
  41bf97:	in     eax,dx
  41bf98:	add    BYTE PTR [ecx],ah
  41bf9a:	mov    edx,0xf6e6c947
  41bf9f:	gs pop ebp
  41bfa1:	push   0x41
  41bfa3:	sahf   
  41bfa4:	(bad)  
  41bfa5:	and    BYTE PTR [ebx+0x51c0e3f5],0xb6
  41bfac:	into   
  41bfad:	shr    BYTE PTR [esi+edi*8],0xce
  41bfb1:	add    bl,dh
  41bfb3:	mov    DWORD PTR ss:[ebx+0x72],ebp
  41bfb7:	cmc    
  41bfb8:	fwait
  41bfb9:	std    
  41bfba:	xor    bl,BYTE PTR [ebx]
  41bfbc:	in     al,0x21
  41bfbe:	xchg   ebp,eax
  41bfbf:	or     esi,DWORD PTR [ecx]
  41bfc1:	mov    esi,0x39f87b77
  41bfc6:	cmp    ebp,DWORD PTR ds:0x9247bd51
  41bfcc:	mov    cs,esp
  41bfce:	mov    ch,BYTE PTR [eax]
  41bfd0:	mov    edi,cs
  41bfd2:	inc    ecx
  41bfd3:	push   ebp
  41bfd4:	fwait
  41bfd5:	lods   eax,DWORD PTR ds:[esi]
  41bfd6:	into   
  41bfd7:	(bad)  
  41bfdc:	sbb    eax,DWORD PTR [ebp-0x2a9eb29c]
  41bfe2:	pop    ebx
  41bfe3:	add    bh,BYTE PTR [ecx]
  41bfe5:	pop    ecx
  41bfe6:	sbb    bl,BYTE PTR [ebp-0x7641c8e5]
  41bfec:	or     al,0x8a
  41bfee:	lds    ebx,FWORD PTR [eax+edi*1-0x1a]
  41bff2:	leave  
  41bff3:	repnz and al,0x24
  41bff6:	mov    eax,ds:0xa418e1ac
  41bffb:	mov    ebx,0x79332cb0
  41c000:	inc    edx
  41c001:	mov    esp,0x4d63b1df
  41c006:	cli    
  41c007:	cmc    
  41c008:	stos   DWORD PTR es:[edi],eax
  41c009:	pushf  
  41c00a:	jg     0x41c046
  41c00c:	jo     0x41c046
  41c00e:	call   0x1a01:0x8d9c3a64
  41c015:	jp     0x41bfa4
  41c017:	frstpm(287 only) 
  41c019:	adc    ecx,eax
  41c01b:	push   ebp
  41c01c:	test   esi,ecx
  41c01e:	pop    ecx
  41c01f:	mov    ds,WORD PTR [ebp-0x49]
  41c022:	imul   edi,esp,0xe153a1fa
  41c028:	imul   edx,edi,0x59
  41c02b:	pushf  
  41c02c:	out    dx,al
  41c02d:	mov    dh,0x85
  41c02f:	xchg   edx,eax
  41c030:	push   es
  41c031:	jns    0x41c055
  41c033:	popf   
  41c034:	jmp    0xff2adae3
  41c039:	out    0xc3,al
  41c03b:	cmp    al,0xe9
  41c03d:	scas   al,BYTE PTR es:[edi]
  41c03e:	mov    al,0xee
  41c040:	and    eax,0x77dc3f42
  41c045:	jbe    0x41c06e
  41c047:	clc    
  41c048:	icebp  
  41c049:	(bad)  
  41c04a:	lock loope 0x41c0b8
  41c04d:	je     0x41bfe1
  41c04f:	add    ebp,esp
  41c051:	mov    eax,0x7aea11d7
  41c056:	jg     0x41c04f
  41c058:	jle    0x41c030
  41c05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c05b:	cmp    DWORD PTR [ecx],esi
  41c05d:	sub    eax,0xf141c1a8
  41c062:	sbb    eax,0xe5cd9efa
  41c067:	dec    esi
  41c068:	pop    edi
  41c069:	mov    bl,0xde
  41c06b:	inc    edi
  41c06c:	pop    es
  41c06d:	data16 xlat BYTE PTR ds:[ebx]
  41c06f:	dec    edi
  41c070:	inc    edi
  41c071:	fcomp  QWORD PTR [ebx-0x63261082]
  41c077:	xlat   BYTE PTR cs:[ebx]
  41c079:	ins    BYTE PTR es:[edi],dx
  41c07a:	scas   al,BYTE PTR es:[edi]
  41c07b:	adc    ecx,DWORD PTR ds:0x32175d06
  41c081:	jns    0x41c017
  41c083:	lahf   
  41c084:	jmp    0x41c034
  41c086:	push   ecx
  41c087:	jne    0x41c030
  41c089:	fimul  DWORD PTR [ebp-0x28]
  41c08c:	sahf   
  41c08d:	jae    0x41c099
  41c08f:	ins    DWORD PTR es:[edi],dx
  41c090:	and    BYTE PTR [ebx],dl
  41c092:	jmp    0x41c057
  41c094:	jns    0x41c060
  41c096:	(bad)  
  41c097:	aam    0x41
  41c099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c09a:	cmp    DWORD PTR [edx-0x7f1e5e9e],ebx
  41c0a0:	into   
  41c0a1:	addr16 xor bl,ah
  41c0a4:	stc    
  41c0a5:	ret    0x75ce
  41c0a8:	stos   BYTE PTR es:[edi],al
  41c0a9:	or     ch,BYTE PTR [ebx-0x11]
  41c0ac:	lock mov bh,0x6a
  41c0af:	xchg   DWORD PTR es:[ebx+esi*4+0x62],esp
  41c0b4:	inc    ebp
  41c0b5:	repnz ins BYTE PTR es:[edi],dx
  41c0b7:	loope  0x41c121
  41c0b9:	popf   
  41c0ba:	cdq    
  41c0bb:	jae    0x41c11e
  41c0bd:	shl    DWORD PTR [edi-0x5dfccee0],0x52
  41c0c4:	call   0xc166:0xd36194db
  41c0cb:	fld    DWORD PTR [eax+0x129400d0]
  41c0d1:	xchg   esp,eax
  41c0d2:	mov    ecx,0x27a010bb
  41c0d7:	inc    ebp
  41c0d8:	mov    al,0xd0
  41c0da:	pop    ecx
  41c0db:	pop    ebp
  41c0dc:	(bad)  
  41c0de:	repz mov esi,edx
  41c0e1:	pop    ss
  41c0e2:	fs mov edx,0xca5f75b5
  41c0e8:	leave  
  41c0e9:	xor    DWORD PTR [edi],0xc3d61379
  41c0ef:	lock aas 
  41c0f1:	(bad)  
  41c0f2:	push   edi
  41c0f3:	add    eax,DWORD PTR [ebx]
  41c0f5:	cs dec eax
  41c0f7:	push   esi
  41c0f8:	cmp    BYTE PTR [edi+0x65118b22],cl
  41c0fe:	push   esp
  41c0ff:	or     al,bh
  41c101:	aas    
  41c102:	mov    eax,DWORD PTR [eax+0x36]
  41c105:	test   DWORD PTR [edx+0x6f],0x8d7bd6da
  41c10c:	fmul   DWORD PTR [edx]
  41c10e:	inc    ecx
  41c10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c110:	popf   
  41c111:	mov    ch,0x31
  41c113:	sbb    eax,0x995f124c
  41c118:	sbb    edx,DWORD PTR [ebp-0x80]
  41c11b:	and    BYTE PTR [edx+0x3a],0x2b
  41c11f:	data16 arpl WORD PTR [esp+ecx*8-0x4eb29bdd],di
  41c127:	adc    WORD PTR [edx],sp
  41c12a:	push   esi
  41c12b:	loope  0x41c193
  41c12d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c12e:	in     eax,dx
  41c12f:	sub    esi,ebx
  41c131:	mov    esi,0x35484c65
  41c136:	pop    eax
  41c137:	in     eax,0x7a
  41c139:	xlat   BYTE PTR ds:[ebx]
  41c13a:	es cld 
  41c13c:	pop    ds
  41c13d:	jbe    0x41c167
  41c13f:	xchg   BYTE PTR ds:0x2e31e8f6,dl
  41c145:	push   ebx
  41c146:	mov    cl,0x16
  41c148:	inc    edi
  41c149:	popf   
  41c14a:	outs   dx,DWORD PTR ds:[esi]
  41c14b:	pushf  
  41c14c:	(bad)  
  41c14d:	cmp    DWORD PTR [ecx-0x101a490e],esi
  41c153:	call   0xe121:0x9f28ed9c
  41c15a:	jb     0x41c109
  41c15c:	bound  ecx,QWORD PTR [eax-0x73]
  41c15f:	lods   eax,DWORD PTR ds:[esi]
  41c160:	mov    bh,0x55
  41c162:	aam    0xe8
  41c164:	mov    edi,?
  41c166:	push   ecx
  41c167:	add    DWORD PTR [ecx+eax*4+0x5e],0x74
  41c16c:	test   BYTE PTR [esi+0xb],bl
  41c16f:	mov    ds:0x92cf51da,eax
  41c174:	fwait
  41c175:	jmp    0x41c140
  41c177:	adc    eax,0xdb70bb10
  41c17c:	xor    BYTE PTR [ebp+ebx*4+0x3b],ch
  41c180:	loop   0x41c1fd
  41c182:	or     BYTE PTR fs:[esi+0x4d],bl
  41c186:	cli    
  41c187:	pop    es
  41c188:	(bad)  
  41c189:	sbb    eax,0x4f9374b8
  41c18e:	arpl   WORD PTR [edx+0x3a74ae89],sp
  41c194:	inc    edi
  41c195:	shl    DWORD PTR ds:0xcf4bcec6,1
  41c19b:	out    dx,al
  41c19c:	dec    esi
  41c19d:	mov    esi,0xaf356069
  41c1a2:	sub    bl,0x64
  41c1a5:	in     al,dx
  41c1a6:	pop    ss
  41c1a7:	sub    BYTE PTR [ebp+esi*8-0x232d9c07],bl
  41c1ae:	lods   al,BYTE PTR ds:[esi]
  41c1af:	imul   esi,DWORD PTR [ebp+edx*8-0x52a7c8a9],0xd9cb176e
  41c1ba:	and    dh,ch
  41c1bc:	cmp    eax,0x7385f3f6
  41c1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c3:	jo     0x41c16b
  41c1c5:	addr16 adc eax,0x22300d9c
  41c1cb:	out    dx,al
  41c1cc:	jmp    0x41c1dc
  41c1ce:	(bad)  
  41c1cf:	loopne 0x41c21b
  41c1d1:	push   0x20
  41c1d3:	dec    esi
  41c1d4:	int    0xa7
  41c1d6:	out    dx,al
  41c1d7:	cs out 0x28,al
  41c1da:	lods   eax,DWORD PTR ds:[esi]
  41c1db:	adc    BYTE PTR [ecx+0x56],al
  41c1de:	lea    edi,[ecx+0x53ecd1a7]
  41c1e4:	jl     0x41c17d
  41c1e6:	jle    0x41c250
  41c1e8:	mov    WORD PTR [ecx+0x1b],gs
  41c1eb:	outs   dx,DWORD PTR ds:[esi]
  41c1ec:	(bad)  [ebx]
  41c1ee:	sbb    BYTE PTR [eax],bh
  41c1f0:	xchg   edx,eax
  41c1f1:	ret    0x2d86
  41c1f4:	jecxz  0x41c220
  41c1f6:	cmp    eax,DWORD PTR [eax-0x59]
  41c1f9:	cmp    edx,DWORD PTR [edi]
  41c1fb:	(bad)  
  41c1fc:	mov    BYTE PTR [esi-0x70dbc7f8],0x5c
  41c203:	(bad)  
  41c204:	out    0x49,al
  41c206:	sub    eax,0x56e3aeca
  41c20b:	sbb    al,0x36
  41c20d:	xchg   ebp,eax
  41c20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c20f:	cwde   
  41c210:	test   eax,0x7fdd174b
  41c215:	out    dx,al
  41c216:	xor    ah,dl
  41c218:	mov    esi,0x1947d179
  41c21d:	add    al,0xa3
  41c21f:	imul   eax,DWORD PTR [ebx+0x42],0x75b1b66b
  41c226:	pop    ss
  41c227:	(bad)  
  41c229:	fwait
  41c22a:	push   ecx
  41c22b:	cld    
  41c22c:	pop    ecx
  41c22d:	addr16 pop ds
  41c22f:	mov    ebx,0x6fbf3958
  41c234:	add    bl,BYTE PTR [edi+0x44]
  41c237:	xlat   BYTE PTR ds:[ebx]
  41c238:	in     eax,0x46
  41c23a:	adc    bh,dh
  41c23c:	xchg   ebp,eax
  41c23d:	inc    edi
  41c23e:	rol    DWORD PTR [ebx-0x5f4cd711],1
  41c244:	pop    edx
  41c245:	ins    BYTE PTR es:[edi],dx
  41c246:	jecxz  0x41c27c
  41c248:	ja     0x41c26c
  41c24a:	push   ebp
  41c24b:	fidiv  DWORD PTR [ecx+0x51]
  41c24e:	pop    eax
  41c24f:	es pop ebp
  41c251:	add    BYTE PTR [eax],bl
  41c253:	mov    edi,0x4ee16bc0
  41c258:	adc    eax,0xca9b3767
  41c25d:	sub    dl,BYTE PTR [ebp-0x3e]
  41c260:	leave  
  41c261:	ret    0x1b8a
  41c264:	cld    
  41c265:	add    BYTE PTR [ecx+edi*8+0x274de6db],bh
  41c26c:	inc    eax
  41c26d:	xchg   edi,eax
  41c26e:	mov    ebx,0xccc4527e
  41c273:	push   0x84f91d4d
  41c278:	ret    
  41c279:	or     al,0x9f
  41c27b:	sub    eax,DWORD PTR [ecx]
  41c27d:	pop    ebp
  41c27e:	cmp    ecx,DWORD PTR [edi+ecx*1+0x1a]
  41c282:	mov    ds:0xcb9c5b5e,al
  41c287:	mov    ds:0xf45c74eb,eax
  41c28c:	pop    eax
  41c28d:	test   DWORD PTR [ebx],ebx
  41c28f:	mov    eax,0x130d111b
  41c294:	adc    ecx,DWORD PTR [edi-0x3aad51c1]
  41c29a:	jb     0x41c312
  41c29c:	adc    BYTE PTR [ebp-0x308222da],bh
  41c2a2:	jno    0x41c261
  41c2a4:	sub    edx,DWORD PTR [ebx+0x5ea18d08]
  41c2aa:	and    dl,BYTE PTR [edi]
  41c2ac:	dec    esi
  41c2ad:	retf   
  41c2ae:	mov    eax,ds:0xceb8f5de
  41c2b3:	out    0x3,al
  41c2b5:	out    dx,al
  41c2b6:	mov    ds:0x9202bc93,al
  41c2bb:	pop    esp
  41c2bc:	cs xor al,0xae
  41c2bf:	ja     0x41c2fd
  41c2c1:	ss fisubr WORD PTR cs:[edx]
  41c2c5:	frstor [ebx+0x2a9c048]
  41c2cb:	push   ecx
  41c2cc:	or     eax,0x7926e9e2
  41c2d1:	dec    ebp
  41c2d2:	out    dx,al
  41c2d3:	pop    esi
  41c2d4:	ret    0x136e
  41c2d7:	xor    BYTE PTR [ebx],0x57
  41c2da:	daa    
  41c2db:	mov    es,edi
  41c2dd:	jno    0x41c354
  41c2df:	adc    al,0xbb
  41c2e1:	adc    esi,edi
  41c2e3:	rcr    BYTE PTR [esi-0x6f16e7da],1
  41c2e9:	jae    0x41c2dd
  41c2eb:	pop    ebp
  41c2ec:	or     ch,ch
  41c2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2ef:	inc    BYTE PTR [esi-0x6c]
  41c2f2:	mov    edx,esp
  41c2f4:	fist   DWORD PTR [eax+0x7caac8ac]
  41c2fa:	adc    eax,0xa762cc42
  41c2ff:	adc    eax,0x1040810
  41c304:	outs   dx,BYTE PTR ds:[esi]
  41c305:	push   esp
  41c306:	lods   al,BYTE PTR ds:[esi]
  41c307:	sub    eax,0x97b9db1e
  41c30c:	(bad)  
  41c30d:	aad    0x75
  41c30f:	sub    al,0xb2
  41c311:	imul   eax,DWORD PTR [edi],0xffffffee
  41c314:	sub    BYTE PTR [ecx],cl
  41c316:	(bad)
  41c319:	test   BYTE PTR [edi-0x2669f73e],0x78
  41c320:	popf   
  41c321:	loope  0x41c33e
  41c323:	or     al,0x12
  41c325:	xlat   BYTE PTR ds:[ebx]
  41c326:	mov    eax,ds:0xa1a21211
  41c32b:	pop    ebp
  41c32c:	xchg   esi,eax
  41c32d:	and    BYTE PTR [ebx+0x49],bh
  41c330:	loop   0x41c39f
  41c332:	bswap  esp
  41c334:	mov    ebp,0xbe9ee365
  41c339:	sub    eax,0x1e90737d
  41c33e:	and    DWORD PTR [eax-0x2c9cb2ad],ebx
  41c344:	popa   
  41c345:	pop    esi
  41c346:	mov    ah,BYTE PTR [edi-0x6f]
  41c349:	sbb    al,0x80
  41c34b:	sahf   
  41c34c:	pop    ebp
  41c34d:	dec    ebx
  41c34e:	cdq    
  41c34f:	cmp    al,0xb2
  41c351:	icebp  
  41c352:	in     al,dx
  41c353:	js     0x41c364
  41c355:	xchg   ecx,eax
  41c356:	jmp    0x41c355
  41c358:	cmp    dl,ah
  41c35a:	icebp  
  41c35b:	push   es
  41c35c:	sbb    DWORD PTR [eax+0x2a],esp
  41c35f:	xchg   ebx,eax
  41c360:	fimul  WORD PTR [esi+0x7aef218e]
  41c366:	lds    ecx,FWORD PTR [ebp+0x7]
  41c369:	stos   BYTE PTR es:[edi],al
  41c36a:	pusha  
  41c36b:	stos   BYTE PTR es:[edi],al
  41c36c:	inc    ebp
  41c36d:	out    dx,al
  41c36e:	neg    BYTE PTR [ebp+0x123871c6]
  41c374:	jns    0x41c3b3
  41c376:	pop    ds
  41c377:	fdivr  DWORD PTR [ebx]
  41c379:	test   DWORD PTR [esi+0x3b186621],edx
  41c37f:	pop    ebp
  41c380:	adc    dh,bh
  41c382:	(bad)  
  41c383:	xchg   edx,eax
  41c384:	cmp    bh,BYTE PTR fs:[ebp+0x73]
  41c388:	xchg   ecx,eax
  41c389:	fild   WORD PTR [esi+0xf5ac2f4]
  41c38f:	dec    edi
  41c390:	mov    ds:0xb22f91d7,al
  41c395:	fimul  DWORD PTR [eax+ebx*8]
  41c398:	in     al,dx
  41c399:	bound  esi,QWORD PTR [ecx]
  41c39b:	out    0xa4,eax
  41c39d:	test   BYTE PTR [ebp-0x1d6f04d9],bh
  41c3a3:	repnz dec edx
  41c3a5:	outs   dx,BYTE PTR ds:[esi]
  41c3a6:	jmp    0x41c353
  41c3a8:	test   al,0x3e
  41c3aa:	xchg   ecx,eax
  41c3ab:	mov    eax,0xe3e83d5a
  41c3b0:	xchg   esp,eax
  41c3b1:	cmp    ah,dl
  41c3b3:	pop    eax
  41c3b4:	(bad)  
  41c3b5:	mov    bl,0x7f
  41c3b7:	inc    esi
  41c3b8:	pushf  
  41c3b9:	retf   0xcad5
  41c3bc:	adc    ecx,eax
  41c3be:	into   
  41c3bf:	add    BYTE PTR [edi-0x2f],ah
  41c3c2:	call   DWORD PTR [eax+0x79f068a0]
  41c3c8:	jnp    0x41c36e
  41c3ca:	mov    gs,WORD PTR [ebp+0x48e71ed0]
  41c3d0:	adc    al,0xfe
  41c3d2:	inc    ebp
  41c3d3:	mov    bl,0x4a
  41c3d5:	add    eax,DWORD PTR [eax]
  41c3d7:	scas   eax,DWORD PTR es:[edi]
  41c3d8:	jo     0x41c405
  41c3da:	dec    eax
  41c3db:	pushf  
  41c3dc:	and    edi,DWORD PTR [esi+0x5e]
  41c3df:	sbb    bl,bh
  41c3e1:	out    0x20,eax
  41c3e3:	(bad)  
  41c3e4:	mov    edx,ss
  41c3e6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3e8:	xlat   BYTE PTR ds:[ebx]
  41c3e9:	cmp    al,0x38
  41c3eb:	adc    al,0x43
  41c3ed:	into   
  41c3ee:	pusha  
  41c3ef:	sbb    esi,DWORD PTR [esi+0x60]
  41c3f2:	cwde   
  41c3f3:	popf   
  41c3f4:	jmp    0x9f8e:0xf0f37563
  41c3fb:	jns    0x41c3f8
  41c3fd:	dec    esp
  41c3fe:	retf   
  41c3ff:	push   cs
  41c400:	xor    eax,0x3872219b
  41c405:	stos   BYTE PTR es:[edi],al
  41c406:	mov    DWORD PTR [edx-0x510f7fb2],eax
  41c40c:	dec    ebx
  41c40d:	mov    ecx,0x7b88b973
  41c412:	or     ebx,DWORD PTR [ebx]
  41c414:	pop    ebp
  41c415:	or     cl,bh
  41c417:	fild   WORD PTR [esi-0x17d1989c]
  41c41d:	mov    ch,BYTE PTR [edi+0x78]
  41c420:	mov    esp,0xe0dc1f2
  41c425:	dec    edx
  41c426:	cmp    DWORD PTR [ecx+0x33508975],eax
  41c42c:	xor    al,0x7f
  41c42e:	lods   eax,DWORD PTR ds:[esi]
  41c42f:	icebp  
  41c430:	xor    esp,DWORD PTR [edi-0x24]
  41c433:	add    eax,0x3f9e4952
  41c438:	fimul  DWORD PTR [ebx]
  41c43a:	sub    esi,0x34
  41c43d:	ja     0x41c439
  41c43f:	ja     0x41c441
  41c441:	aas    
  41c442:	(bad)  
  41c443:	aam    0x6a
  41c445:	pusha  
  41c446:	stos   DWORD PTR es:[edi],eax
  41c447:	test   dl,dl
  41c449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44a:	adc    edi,ebx
  41c44c:	add    bh,BYTE PTR [esi+ebp*2+0x50]
  41c450:	cmp    eax,0x4ab56178
  41c455:	cmp    al,BYTE PTR [edx-0x68]
  41c458:	push   0x6fe8ec6a
  41c45d:	jne    0x41c3e2
  41c45f:	dec    ebx
  41c460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c461:	popf   
  41c462:	pop    ecx
  41c463:	add    DWORD PTR [edi],ecx
  41c465:	jb     0x41c4b3
  41c467:	loop   0x41c456
  41c469:	or     ebp,ebx
  41c46b:	leave  
  41c46c:	je     0x41c45a
  41c46e:	mov    ds:0x4d8d3a51,al
  41c473:	adc    BYTE PTR [eax-0x14],ch
  41c476:	or     dl,ch
  41c478:	call   0x8ea3:0xd1abc85e
  41c47f:	mov    edx,0x4913fbba
  41c484:	lock cld 
  41c486:	mov    ds:0xf7458337,eax
  41c48b:	arpl   di,dx
  41c48d:	jg     0x41c4b3
  41c48f:	(bad)  
  41c490:	jbe    0x41c439
  41c492:	mov    ah,0x65
  41c494:	in     al,dx
  41c495:	pop    es
  41c496:	lds    edi,FWORD PTR [ebp+0x5a]
  41c499:	sbb    esi,DWORD PTR [esi-0x55]
  41c49c:	(bad)  
  41c49d:	or     dh,ch
  41c49f:	pop    eax
  41c4a0:	(bad)  
  41c4a1:	out    0x93,eax
  41c4a3:	cmp    eax,0x58f3e2f1
  41c4a8:	add    eax,esp
  41c4aa:	rol    BYTE PTR [ebx-0x6e],0x73
  41c4ae:	mov    gs,WORD PTR [ecx]
  41c4b0:	mov    edi,0xb18c5ad4
  41c4b5:	leave  
  41c4b6:	mov    dl,0x77
  41c4b8:	sti    
  41c4b9:	(bad)  
  41c4ba:	sahf   
  41c4bb:	pop    eax
  41c4bc:	mov    al,ds:0x802df3bf
  41c4c1:	call   0xebc79781
  41c4c6:	out    dx,al
  41c4c7:	add    DWORD PTR [ecx],ebx
  41c4c9:	push   cs
  41c4ca:	test   eax,0xa8a691fe
  41c4cf:	ja     0x41c4c9
  41c4d1:	scas   eax,DWORD PTR es:[edi]
  41c4d2:	jecxz  0x41c4be
  41c4d4:	mov    ebp,DWORD PTR [ecx]
  41c4d6:	adc    ebp,edi
  41c4d8:	test   BYTE PTR [edi+0x7e],al
  41c4db:	cmp    BYTE PTR [edi-0x4e],bl
  41c4de:	or     esp,DWORD PTR [esi+0x24849b86]
  41c4e4:	outs   dx,BYTE PTR ds:[esi]
  41c4e5:	xchg   edx,eax
  41c4e6:	cmp    eax,0x95945513
  41c4eb:	cdq    
  41c4ec:	sub    edx,DWORD PTR [edx-0x7d]
  41c4ef:	mov    BYTE PTR [esi-0x5a],ah
  41c4f2:	pop    es
  41c4f3:	push   edx
  41c4f4:	push   ds
  41c4f5:	sti    
  41c4f6:	inc    ecx
  41c4f7:	arpl   WORD PTR [edi],sp
  41c4f9:	ret    
  41c4fa:	iret   
  41c4fb:	stos   DWORD PTR es:[edi],eax
  41c4fc:	call   0xc4bf89da
  41c501:	scas   eax,DWORD PTR es:[edi]
  41c502:	std    
  41c503:	outs   dx,DWORD PTR ds:[esi]
  41c504:	adc    eax,0x58a16157
  41c509:	cmp    DWORD PTR [ecx-0x6d48af06],ecx
  41c50f:	push   ebp
  41c510:	sbb    dl,dh
  41c512:	loope  0x41c574
  41c514:	into   
  41c515:	and    BYTE PTR [eax],dl
  41c517:	test   cl,dh
  41c519:	jmp    0x78b567f9
  41c51e:	push   es
  41c51f:	xchg   ebp,eax
  41c520:	mov    bh,0xb3
  41c522:	adc    BYTE PTR [ebx-0x79],ch
  41c525:	shl    ah,0xc0
  41c528:	add    eax,0xb6938ef3
  41c52d:	mov    ds:0x3028c96f,eax
  41c532:	mov    al,ds:0xe7dc011c
  41c537:	dec    esp
  41c538:	popa   
  41c539:	mov    ebx,0x7b97b918
  41c53e:	dec    ebx
  41c53f:	and    esi,DWORD PTR [edi-0x60]
  41c542:	mov    dh,0x84
  41c544:	aam    0x76
  41c546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c547:	add    al,0xde
  41c549:	xchg   edx,eax
  41c54a:	pusha  
  41c54b:	cmc    
  41c54c:	sub    BYTE PTR [eax-0x5d],0xa
  41c550:	jl     0x41c5cd
  41c552:	shr    DWORD PTR [ebp+0xd],cl
  41c555:	xchg   ecx,eax
  41c556:	sbb    DWORD PTR [esi],ebp
  41c558:	jne    0x41c4e3
  41c55a:	js     0x41c4e9
  41c55c:	rcl    ch,0x31
  41c55f:	das    
  41c560:	(bad)  
  41c561:	sub    BYTE PTR [esi],ch
  41c563:	cli    
  41c564:	adc    edx,DWORD PTR [edx+0x45a15cc5]
  41c56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c56b:	push   ebp
  41c56c:	clc    
  41c56d:	add    DWORD PTR [ebp+0x3b],ebp
  41c570:	push   esp
  41c571:	xchg   esp,eax
  41c572:	mov    DWORD PTR ds:[edx],edi
  41c575:	sbb    bh,BYTE PTR [ebx-0x5b4ad00]
  41c57b:	and    BYTE PTR ds:0x2dafaf23,bl
  41c581:	jmp    0xb7a8:0xd6a88344
  41c588:	stc    
  41c589:	dec    eax
  41c58a:	out    0xb4,eax
  41c58c:	push   esi
  41c58d:	in     eax,0x3b
  41c58f:	loope  0x41c5f8
  41c591:	mov    eax,0x7eff84d5
  41c596:	not    BYTE PTR [esi]
  41c598:	pop    ss
  41c599:	push   ss
  41c59a:	bnd jne 0x41c560
  41c59d:	ins    DWORD PTR es:[edi],dx
  41c59e:	mov    dl,0x35
  41c5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a1:	and    BYTE PTR [ecx-0x7f],0x8b
  41c5a5:	mov    edi,DWORD PTR [esi-0x4cf5a92e]
  41c5ab:	cwde   
  41c5ac:	stos   BYTE PTR es:[edi],al
  41c5ad:	jno    0x41c5bd
  41c5af:	mov    ebx,0x7a5a0e93
  41c5b4:	aas    
  41c5b5:	dec    edx
  41c5b6:	test   DWORD PTR [esp+edx*8],ebp
  41c5b9:	aas    
  41c5ba:	and    ah,dh
  41c5bc:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c5bf:	inc    edi
  41c5c0:	sub    dl,BYTE PTR [ebx]
  41c5c2:	jle    0x41c5cb
  41c5c4:	data16 in al,0x86
  41c5c7:	repnz imul BYTE PTR [ecx+ecx*8+0x7f0717ce]
  41c5cf:	xor    BYTE PTR ds:0xe0ef109b,0xab
  41c5d6:	dec    ebp
  41c5d7:	fs push edx
  41c5d9:	or     ah,al
  41c5db:	pop    ebx
  41c5dc:	(bad)  
  41c5dd:	psrld  mm0,QWORD PTR [esi+0x11b81983]
  41c5e4:	or     al,0xe0
  41c5e6:	popa   
  41c5e7:	(bad)  
  41c5e8:	stos   DWORD PTR es:[edi],eax
  41c5e9:	and    BYTE PTR [esi-0x72],dh
  41c5ec:	add    al,0x33
  41c5ee:	dec    eax
  41c5ef:	jae    0x41c61a
  41c5f1:	mov    al,ds:0xdc6298c9
  41c5f6:	cs adc eax,0x35b21b1b
  41c5fc:	adc    bh,BYTE PTR [ebx]
  41c5fe:	add    eax,0x66e4e36f
  41c603:	inc    ebp
  41c604:	push   eax
  41c605:	and    dl,BYTE PTR [ecx-0x5]
  41c608:	inc    edx
  41c609:	mov    al,ds:0xdc47a22a
  41c60e:	imul   edx,DWORD PTR [esi-0x54],0xf24fa4
  41c615:	lds    edx,FWORD PTR ds:0xe0dd6f8f
  41c61b:	js     0x41c5dd
  41c61d:	(bad)
  41c620:	mov    eax,0x8813aec6
  41c625:	cmp    DWORD PTR [ebp+0x48313f39],0x222eb01f
  41c62f:	push   esi
  41c630:	mov    ebx,0x9c415d1c
  41c635:	inc    esi
  41c636:	inc    ecx
  41c637:	in     al,dx
  41c638:	add    BYTE PTR [esi],al
  41c63a:	dec    edx
  41c63b:	sbb    al,0x6d
  41c63d:	mov    DWORD PTR [eax],esp
  41c63f:	or     BYTE PTR [ecx+0x54],ah
  41c642:	jmp    0x94b3:0x840f4014
  41c649:	daa    
  41c64a:	add    cl,dh
  41c64c:	push   eax
  41c64d:	gs (bad) 
  41c64f:	jmp    0x41c5dc
  41c651:	mov    ebp,0xbc76468b
  41c656:	push   ebp
  41c657:	mov    ebx,0x97951249
  41c65c:	loope  0x41c6bc
  41c65e:	or     eax,0x5b1b3415
  41c663:	jge    0x41c62f
  41c665:	jg     0x41c5f1
  41c667:	aad    0x85
  41c669:	sub    eax,0xa01f9309
  41c66e:	fldenv [ecx-0x4c]
  41c671:	push   edx
  41c672:	dec    BYTE PTR [ecx+eiz*2-0x3221b286]
  41c679:	js     0x41c6d6
  41c67b:	and    cl,BYTE PTR [edi]
  41c67d:	test   esi,0x7529a1fd
  41c683:	cmp    edi,DWORD PTR [eax-0x36]
  41c686:	fcmovnb st,st(3)
  41c688:	mov    ds:0x9d67f354,al
  41c68d:	aas    
  41c68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c68f:	sbb    eax,0xd39b36ad
  41c694:	(bad)  
  41c695:	enter  0xff37,0x95
  41c699:	cmp    DWORD PTR [ebp+0x60f3763d],eax
  41c69f:	test   BYTE PTR [esi+0x1f],bl
  41c6a2:	test   BYTE PTR [ebx+0x13],0xe9
  41c6a6:	or     DWORD PTR [ebx],edx
  41c6a8:	adc    DWORD PTR [ebx],ecx
  41c6aa:	mov    esi,0xa7703d19
  41c6af:	sub    eax,0x7450a289
  41c6b4:	mov    eax,0xde9e829f
  41c6b9:	sub    dh,BYTE PTR ss:[edi]
  41c6bc:	mov    ebx,0x88d0a9af
  41c6c1:	fdivrp st(1),st
  41c6c3:	mov    ds:0xa44ba8b1,eax
  41c6c8:	mov    dl,bh
  41c6ca:	test   BYTE PTR [esi],al
  41c6cc:	(bad)  
  41c6cd:	hlt    
  41c6ce:	and    bl,BYTE PTR [ebx-0xc]
  41c6d1:	gs scas eax,DWORD PTR es:[edi]
  41c6d3:	test   eax,0xe8d3b09a
  41c6d8:	out    0xbd,eax
  41c6da:	jns    0x41c6a1
  41c6dc:	cs jns 0x41c68c
  41c6df:	pop    ecx
  41c6e0:	imul   esi,DWORD PTR [ebp+0x1d],0xffffffb7
  41c6e4:	mov    ch,BYTE PTR ds:0x6445d547
  41c6ea:	push   edi
  41c6eb:	or     ch,bh
  41c6ed:	mov    ecx,0xf2aec553
  41c6f2:	or     eax,0xe466607e
  41c6f7:	and    edx,DWORD PTR ds:0x9a0dd2bf
  41c6fd:	pusha  
  41c6fe:	fnstsw WORD PTR [ebx+0x3d]
  41c701:	(bad)  
  41c703:	add    dl,BYTE PTR [eax]
  41c705:	adc    ebp,ecx
  41c707:	xor    eax,0x64da424c
  41c70c:	leave  
  41c70d:	or     eax,DWORD PTR [eax]
  41c70f:	das    
  41c710:	dec    edi
  41c711:	adc    DWORD PTR [edx-0x352e661b],ebx
  41c717:	test   eax,0xbbb4dc67
  41c71c:	sub    edx,DWORD PTR [ebp-0x2]
  41c71f:	scas   al,BYTE PTR es:[edi]
  41c720:	test   BYTE PTR [ecx+0x67],ah
  41c723:	cs mov bl,0xe4
  41c726:	mov    ?,WORD PTR [edx+0x7903aec7]
  41c72c:	test   eax,0xa9d50b4
  41c731:	mov    bh,0x4f
  41c733:	mov    esp,0xdba7c92f
  41c738:	pop    ss
  41c739:	mov    ecx,0x60225887
  41c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73f:	pop    eax
  41c740:	(bad)  
  41c741:	hlt    
  41c742:	or     eax,0x4bea65cd
  41c747:	enter  0x140e,0x64
  41c74b:	push   es
  41c74c:	frstor [ebx+0x2c84b6c1]
  41c752:	pushf  
  41c753:	add    al,0xf4
  41c755:	enter  0x28b8,0x69
  41c759:	add    dh,0x19
  41c75c:	lods   eax,DWORD PTR ds:[esi]
  41c75d:	outs   dx,DWORD PTR ds:[esi]
  41c75e:	or     BYTE PTR [edi],bh
  41c760:	pop    ds
  41c761:	mov    bh,0xd5
  41c763:	fmul   DWORD PTR [eax]
  41c765:	std    
  41c766:	adc    BYTE PTR [edi+0x699b06df],bl
  41c76c:	test   BYTE PTR [ebx],ch
  41c76e:	adc    ebx,DWORD PTR [edi-0x7489c4c2]
  41c774:	and    bl,BYTE PTR gs:[edi]
  41c777:	sub    al,BYTE PTR [ebp+eiz*8+0x6e1d2603]
  41c77e:	clc    
  41c77f:	(bad)
  41c782:	xor    BYTE PTR [eax+0x12],ah
  41c785:	aam    0xa6
  41c787:	push   ds
  41c788:	cwde   
  41c789:	mov    edx,DWORD PTR [esi]
  41c78b:	push   ebp
  41c78c:	stos   BYTE PTR es:[edi],al
  41c78d:	push   DWORD PTR [eax-0x3]
  41c790:	xlat   BYTE PTR ds:[ebx]
  41c791:	jne    0x41c768
  41c793:	cwde   
  41c794:	push   0x4433ab0b
  41c799:	lods   eax,DWORD PTR ds:[esi]
  41c79a:	mov    WORD PTR [ebp+0x17733b98],fs
  41c7a0:	test   DWORD PTR [eax+0x34],esp
  41c7a3:	sbb    edx,DWORD PTR [edi+ebp*4+0x3f41921]
  41c7aa:	sub    al,BYTE PTR [eax]
  41c7ac:	cld    
  41c7ad:	popf   
  41c7ae:	dec    ebp
  41c7af:	(bad)
  41c7b3:	pushf  
  41c7b4:	fwait
  41c7b5:	inc    edi
  41c7b6:	js     0x41c808
  41c7b8:	out    dx,eax
  41c7b9:	stos   DWORD PTR es:[edi],eax
  41c7ba:	cli    
  41c7bb:	sbb    DWORD PTR [esp+edi*1],esi
  41c7be:	pop    esi
  41c7bf:	jp     0x41c78b
  41c7c1:	inc    eax
  41c7c2:	cmp    esi,esp
  41c7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7c5:	iret   
  41c7c6:	in     al,0xf4
  41c7c8:	dec    ebp
  41c7c9:	and    DWORD PTR [edx+eiz*2+0x22],ebx
  41c7cd:	and    al,bl
  41c7cf:	jbe    0x41c7fd
  41c7d1:	mov    ds:0x3e2f4ad1,al
  41c7d6:	das    
  41c7d7:	lds    esp,FWORD PTR [esi+0x14845dca]
  41c7dd:	pop    ebx
  41c7de:	xchg   esp,eax
  41c7df:	push   0xc
  41c7e1:	pop    eax
  41c7e2:	or     al,0xe
  41c7e4:	pop    ss
  41c7e5:	js     0x41c853
  41c7e7:	in     eax,dx
  41c7e8:	arpl   WORD PTR [edx-0x64],sp
  41c7eb:	xor    al,0x27
  41c7ed:	push   ss
  41c7ee:	sub    esi,DWORD PTR [esi]
  41c7f0:	imul   ecx,DWORD PTR [ecx+0x36],0xa6748576
  41c7f7:	ret    
  41c7f8:	jns    0x41c7ce
  41c7fa:	xchg   ebp,eax
  41c7fb:	mov    eax,ds:0xd3531629
  41c800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c801:	cmc    
  41c802:	adc    eax,0x919471d1
  41c807:	mov    edi,0xedc8ab7c
  41c80c:	xchg   cl,cl
  41c80e:	cwde   
  41c80f:	fwait
  41c810:	xchg   ebp,eax
  41c811:	mov    bh,0xc7
  41c813:	xchg   BYTE PTR [edx+edi*2+0x1b9824ff],bl
  41c81a:	add    eax,0x255ba6e2
  41c81f:	int    0x98
  41c821:	ss shl ebp,0xe5
  41c825:	icebp  
  41c826:	and    al,0x4
  41c828:	inc    esi
  41c829:	enter  0x8b74,0xb0
  41c82d:	dec    eax
  41c82e:	cdq    
  41c82f:	int3   
  41c830:	out    dx,eax
  41c831:	shl    DWORD PTR [ebp+0x7c],0xb
  41c835:	mov    cl,BYTE PTR [eax-0x26f72962]
  41c83b:	sub    BYTE PTR [esi+0x6a68f929],cl
  41c841:	push   ebp
  41c842:	stos   DWORD PTR es:[edi],eax
  41c843:	xchg   ch,bh
  41c845:	inc    esp
  41c846:	add    bh,dl
  41c848:	pop    es
  41c849:	cld    
  41c84a:	dec    edi
  41c84b:	jbe    0x41c8bb
  41c84d:	outs   dx,BYTE PTR ds:[esi]
  41c84e:	cld    
  41c84f:	xchg   edi,eax
  41c850:	push   ss
  41c851:	xchg   BYTE PTR [edi+0x448eb5d],bh
  41c857:	shl    BYTE PTR ds:0xcffef0b3,0x1d
  41c85e:	pop    esp
  41c85f:	dec    edi
  41c860:	xor    edx,0x6f
  41c863:	and    al,0x4c
  41c865:	fmul   DWORD PTR [esi]
  41c867:	fistp  DWORD PTR [ecx+eax*8]
  41c86a:	inc    esp
  41c86b:	pusha  
  41c86c:	fist   WORD PTR [edi-0x2c]
  41c86f:	retf   0xd24e
  41c872:	gs cwde 
  41c874:	xor    DWORD PTR ds:[ebx],esp
  41c877:	inc    esi
  41c878:	jge    0x41c8be
  41c87a:	jns    0x41c85f
  41c87c:	xor    ecx,DWORD PTR [ecx]
  41c87e:	adc    ch,BYTE PTR [esi]
  41c880:	lods   eax,DWORD PTR ds:[esi]
  41c881:	xlat   BYTE PTR ds:[ebx]
  41c882:	mov    ebp,0x5df22028
  41c887:	int3   
  41c888:	or     bh,dh
  41c88a:	daa    
  41c88b:	scas   eax,DWORD PTR es:[edi]
  41c88c:	dec    esi
  41c88d:	mov    edx,0xdf84bb58
  41c892:	fbld   TBYTE PTR [ebp+0xed7b915]
  41c898:	add    al,0xf1
  41c89a:	sbb    BYTE PTR [eax],al
  41c89c:	mov    dh,0x70
  41c89e:	dec    ebp
  41c89f:	pop    edi
  41c8a0:	nop
  41c8a1:	sub    esp,DWORD PTR [ecx+edi*8+0x5d]
  41c8a5:	(bad)  
  41c8a6:	(bad)  
  41c8a7:	in     eax,dx
  41c8a8:	mov    cl,0xb0
  41c8aa:	jmp    0xebda1702
  41c8af:	out    0x21,al
  41c8b1:	pop    esi
  41c8b2:	(bad)  
  41c8b3:	cmc    
  41c8b4:	rol    BYTE PTR [ecx],1
  41c8b6:	jmp    0x84f6a461
  41c8bb:	push   esp
  41c8bc:	outs   dx,DWORD PTR ds:[esi]
  41c8bd:	test   DWORD PTR [ecx+0x53],edx
  41c8c0:	mov    cl,0xeb
  41c8c2:	inc    ebx
  41c8c3:	xchg   esi,eax
  41c8c4:	mov    eax,ds:0xfe428480
  41c8c9:	out    dx,al
  41c8ca:	lds    edi,FWORD PTR [eiz*2+0x2d98f9c7]
  41c8d1:	adc    dh,al
  41c8d3:	push   ss
  41c8d4:	and    al,0x9
  41c8d6:	dec    ebp
  41c8d7:	push   ds
  41c8d8:	dec    edi
  41c8d9:	test   BYTE PTR [eax],dh
  41c8db:	cwde   
  41c8dc:	mov    cl,0xcc
  41c8de:	out    0xbf,al
  41c8e0:	mov    ah,0x33
  41c8e2:	xchg   ebp,eax
  41c8e3:	inc    ebx
  41c8e4:	(bad)  
  41c8e5:	neg    DWORD PTR [esp+eax*2]
  41c8e8:	mov    ch,BYTE PTR [eax+0x5c6c5089]
  41c8ee:	repnz or BYTE PTR [edx],0x14
  41c8f2:	mov    al,ds:0xf2afc7d6
  41c8f7:	xchg   edi,eax
  41c8f8:	xlat   BYTE PTR ds:[ebx]
  41c8f9:	ins    BYTE PTR es:[edi],dx
  41c8fa:	aaa    
  41c8fb:	lea    ebp,[edx+0x3a]
  41c8fe:	mov    bh,0x5b
  41c900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c901:	jge    0x41c8b8
  41c903:	hlt    
  41c904:	jnp    0x41c913
  41c906:	sub    al,0xf1
  41c908:	cmp    edi,DWORD PTR [ebx+0x1b]
  41c90b:	mov    al,ds:0xe5b0d9f9
  41c910:	xor    DWORD PTR [edi],ecx
  41c912:	xor    ebp,DWORD PTR ds:0xa518caa9
  41c918:	test   eax,0x932bcfa6
  41c91d:	dec    edx
  41c91e:	pop    ebx
  41c91f:	stos   DWORD PTR es:[edi],eax
  41c920:	xchg   ebx,eax
  41c921:	or     ebp,ebp
  41c923:	sar    DWORD PTR [esi-0x7d],cl
  41c926:	push   ebp
  41c927:	in     eax,dx
  41c928:	pushf  
  41c929:	aad    0xb1
  41c92b:	lods   al,BYTE PTR ds:[esi]
  41c92c:	xchg   edi,eax
  41c92d:	sbb    al,0xef
  41c92f:	loope  0x41c915
  41c931:	not    DWORD PTR [ecx-0x3b]
  41c934:	xchg   ebp,eax
  41c935:	jmp    0xb4f0:0x87687d6a
  41c93c:	out    0xf6,eax
  41c93e:	scas   al,BYTE PTR es:[edi]
  41c93f:	push   es
  41c940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c941:	mov    dh,0x8e
  41c943:	mov    ch,0x77
  41c945:	and    bl,cl
  41c947:	addr16 push ebx
  41c949:	push   ebx
  41c94a:	push   ds
  41c94b:	add    al,0xb1
  41c94d:	xor    ecx,edi
  41c94f:	in     al,0xf0
  41c951:	dec    edx
  41c952:	out    dx,al
  41c953:	xor    BYTE PTR [eax],ch
  41c955:	mov    dh,0x4a
  41c957:	jp     0x41c910
  41c959:	das    
  41c95a:	outs   dx,BYTE PTR ds:[esi]
  41c95b:	push   edx
  41c95c:	jg     0x41c96f
  41c95e:	jnp    0x41c979
  41c960:	xchg   esi,eax
  41c961:	aas    
  41c962:	xchg   ebx,eax
  41c963:	into   
  41c964:	inc    ebp
  41c965:	mov    DWORD PTR [esi],esi
  41c967:	jne    0x41c9c4
  41c969:	cld    
  41c96a:	out    dx,al
  41c96b:	outs   dx,DWORD PTR ds:[esi]
  41c96c:	gs or  eax,0xa21f6b67
  41c972:	inc    ebx
  41c973:	add    esp,DWORD PTR [ebx-0x14bd2763]
  41c979:	loopne 0x41c944
  41c97b:	ins    BYTE PTR es:[edi],dx
  41c97c:	fimul  DWORD PTR [eax]
  41c97e:	sbb    al,0x91
  41c980:	add    bl,dh
  41c982:	loope  0x41c916
  41c984:	sub    al,0x74
  41c986:	nop
  41c987:	nop
  41c988:	rcl    BYTE PTR [edx+0x6e],1
  41c98b:	lea    ebx,[esi]
  41c98d:	dec    ecx
  41c98e:	mov    ch,0x8e
  41c990:	add    dl,dl
  41c992:	mov    al,0x85
  41c994:	jmp    0x5a00:0xb80904f6
  41c99b:	sub    BYTE PTR [bx+si+0x4976],bl
  41c9a0:	out    dx,eax
  41c9a1:	in     eax,dx
  41c9a2:	dec    esp
  41c9a3:	mov    edx,0xa764c894
  41c9a8:	push   0x1b250ac1
  41c9ad:	sbb    esp,DWORD PTR ds:0xef300e97
  41c9b3:	mov    ch,0xd0
  41c9b5:	scas   eax,DWORD PTR es:[edi]
  41c9b6:	sub    DWORD PTR [edi+0x58ad9967],eax
  41c9bc:	imul   esp,DWORD PTR es:[esp+eiz*8],0x5d814f52
  41c9c4:	sbb    al,0xc9
  41c9c6:	or     al,0x16
  41c9c8:	out    dx,eax
  41c9c9:	(bad)  
  41c9ca:	adc    bl,BYTE PTR [ebp+ecx*4+0x24]
  41c9ce:	pop    esp
  41c9cf:	in     al,0x1f
  41c9d1:	add    eax,0x9f6d088e
  41c9d6:	dec    ebx
  41c9d7:	xor    ebp,0xfffffffd
  41c9da:	mov    ch,0xb7
  41c9dd:	fdivp  st(0),st
  41c9df:	fdivr  QWORD PTR [esi]
  41c9e1:	lock sbb edx,DWORD PTR [esi+0x3b]
  41c9e5:	ins    BYTE PTR es:[edi],dx
  41c9e6:	sbb    eax,0x612feb0
  41c9eb:	jnp    0x41c9f8
  41c9ed:	mov    al,ds:0x83b521a
  41c9f2:	xor    ecx,DWORD PTR gs:0xf65eccc5
  41c9f9:	push   esi
  41c9fa:	jo     0x41ca30
  41c9fc:	out    0x4e,al
  41c9fe:	adc    cl,BYTE PTR [ebx+eax*8+0xd89a086]
  41ca05:	test   DWORD PTR [esi+0x47e6765],eax
  41ca0b:	pop    ds
  41ca0c:	or     BYTE PTR [esi+eiz*8+0x6b],al
  41ca10:	test   al,0xd5
  41ca12:	aas    
  41ca13:	pop    ecx
  41ca14:	mov    BYTE PTR [esi+0x6b],al
  41ca17:	xchg   ebp,eax
  41ca18:	dec    ecx
  41ca19:	loop   0x41c9ac
  41ca1b:	fld    st(5)
  41ca1d:	popa   
  41ca1e:	aaa    
  41ca1f:	lea    edx,[ebx-0x6b]
  41ca22:	clc    
  41ca23:	fs jnp 0x41ca64
  41ca26:	lods   eax,DWORD PTR ds:[esi]
  41ca27:	xchg   DWORD PTR gs:[esi-0x5481da6b],edx
  41ca2e:	shr    BYTE PTR [edi+0x55],0xb9
  41ca32:	mov    esi,0xe8787edd
  41ca37:	aaa    
  41ca38:	xchg   edx,eax
  41ca39:	popf   
  41ca3a:	or     BYTE PTR [edx-0x67],0x73
  41ca3e:	inc    ecx
  41ca3f:	fsubr  QWORD PTR [ebp-0x2a0c63e4]
  41ca45:	fist   DWORD PTR [esi]
  41ca47:	sbb    DWORD PTR [eax+0x5e4aa60f],0x19e79270
  41ca51:	mov    DWORD PTR [edx-0x1c],ecx
  41ca54:	out    dx,al
  41ca55:	and    eax,0x27c6a30d
  41ca5a:	add    al,0xb8
  41ca5c:	mov    ebp,0xe99debb7
  41ca61:	mov    dh,0x13
  41ca63:	rcr    edi,0xf9
  41ca66:	pop    ecx
  41ca67:	jae    0x41cab5
  41ca69:	push   esi
  41ca6a:	test   DWORD PTR ss:[eax+ecx*2-0x46aaba04],edx
  41ca72:	loopne 0x41caef
  41ca74:	xchg   edx,eax
  41ca75:	test   ch,cl
  41ca77:	ss ins DWORD PTR es:[edi],dx
  41ca79:	mov    dh,0x6
  41ca7b:	in     al,dx
  41ca7c:	jo     0x41ca5d
  41ca7e:	addr16 pop esp
  41ca80:	sti    
  41ca81:	jb     0x41ca3c
  41ca83:	push   edi
  41ca84:	les    ebp,FWORD PTR [edi-0x7c8dc188]
  41ca8a:	jo     0x41cb06
  41ca8c:	cmp    bl,ah
  41ca8e:	inc    eax
  41ca8f:	pop    edi
  41ca90:	xchg   edx,eax
  41ca91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca92:	push   ebx
  41ca93:	cli    
  41ca94:	in     eax,dx
  41ca95:	xchg   esi,eax
  41ca96:	xchg   esi,eax
  41ca97:	and    BYTE PTR [ebx-0x63],bl
  41ca9a:	fisub  DWORD PTR [esi-0x76cfbe51]
  41caa0:	cmp    dl,cl
  41caa2:	clc    
  41caa3:	and    eax,0xa3865fc4
  41caa8:	loope  0x41ca90
  41caaa:	dec    eax
  41caab:	les    esi,FWORD PTR [ebp-0x4e]
  41caae:	xchg   edi,eax
  41caaf:	xor    DWORD PTR [eax-0x1e8b422f],edx
  41cab5:	jne    0x41cb1b
  41cab7:	dec    ecx
  41cab8:	shl    BYTE PTR [esi+edx*1-0x57],0xbc
  41cabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cabe:	bound  esp,QWORD PTR [ebp+0x72]
  41cac1:	das    
  41cac2:	aaa    
  41cac3:	pop    esp
  41cac4:	sbb    DWORD PTR [ecx+0x50c762bb],ecx
  41caca:	loop   0x41ca4f
  41cacc:	inc    edi
  41cacd:	stc    
  41cace:	mov    dh,ah
  41cad0:	cld    
  41cad1:	fimul  WORD PTR [edi-0x28]
  41cad4:	jne    0x41caf9
  41cad6:	fwait
  41cad7:	sbb    esp,esi
  41cad9:	bound  esp,QWORD PTR [ecx]
  41cadb:	sbb    DWORD PTR [bx+si],edx
  41cade:	xlat   BYTE PTR ds:[ebx]
  41cadf:	cmp    esi,DWORD PTR [ebp+0x40]
  41cae2:	and    ebp,DWORD PTR [edi-0x5c]
  41cae5:	cli    
  41cae6:	pushf  
  41cae7:	mov    edx,0x840b70e3
  41caec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caed:	aas    
  41caee:	repz fcomp QWORD PTR [ebx-0x48]
  41caf2:	imul   esi,DWORD PTR ds:0xe6b34039,0xffffffba
  41caf9:	inc    edx
  41cafa:	xor    DWORD PTR [edx-0x1f],ebp
  41cafd:	lods   al,BYTE PTR ds:[esi]
  41cafe:	jl     0x41cb63
  41cb00:	xchg   DWORD PTR [esi-0x34],edx
  41cb03:	push   ss
  41cb04:	(bad)  
  41cb05:	aam    0x47
  41cb07:	retf   0xb6b
  41cb0a:	stos   DWORD PTR es:[edi],eax
  41cb0b:	xchg   esp,eax
  41cb0c:	push   edi
  41cb0d:	xchg   ecx,eax
  41cb0e:	add    DWORD PTR [edi-0x7f9a363a],edi
  41cb14:	mov    DWORD PTR [ecx+0x1658fe1],esp
  41cb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb1b:	sub    al,0xaa
  41cb1d:	inc    esi
  41cb1e:	push   es
  41cb1f:	call   FWORD PTR [di]
  41cb22:	sub    DWORD PTR [edx],eax
  41cb24:	cmp    eax,0x15fe263c
  41cb29:	in     al,dx
  41cb2a:	mov    ?,edi
  41cb2c:	mov    al,0x9f
  41cb2e:	ror    BYTE PTR [esi-0x3d],1
  41cb31:	mov    ch,0x4d
  41cb33:	cmp    al,0xa0
  41cb35:	push   ds
  41cb36:	mov    cl,0x73
  41cb38:	adc    bl,BYTE PTR [ebx-0x2849dc72]
  41cb3e:	pop    esi
  41cb3f:	inc    edi
  41cb41:	loop   0x41cb8d
  41cb43:	cmp    BYTE PTR [edi-0x58cdd8e2],al
  41cb49:	ss aas 
  41cb4b:	dec    edx
  41cb4c:	jns    0x41caf2
  41cb4e:	pop    eax
  41cb4f:	jbe    0x41caf6
  41cb51:	lods   al,BYTE PTR ds:[esi]
  41cb52:	not    dh
  41cb54:	jnp    0x41cb31
  41cb56:	jnp    0x41cb72
  41cb58:	pop    esi
  41cb59:	sub    DWORD PTR [ebx],ecx
  41cb5b:	fcomp  DWORD PTR [eax]
  41cb5d:	inc    edx
  41cb5e:	push   ecx
  41cb5f:	not    dl
  41cb61:	add    eax,0x5589d323
  41cb66:	mov    ah,0x8b
  41cb68:	push   ebp
  41cb69:	or     BYTE PTR [ebx-0x6b7247a3],cl
  41cb6f:	adc    ebx,DWORD PTR [edi]
  41cb71:	cld    
  41cb72:	inc    ecx
  41cb73:	add    cl,BYTE PTR [ecx+0x558bb855]
  41cb79:	or     BYTE PTR [ebx-0x5a1ea1e],bh
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	xchg   esp,eax
  41ce45:	aaa    
  41ce46:	(bad)  
  41ce47:	adc    eax,0x44401ed0
  41ce4c:	mov    edx,0xaced2328
  41ce51:	popf   
  41ce52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce53:	mov    cl,0x1
  41ce55:	add    BYTE PTR [eax],al
  41ce57:	add    BYTE PTR [ebx+0x3a],al
  41ce5a:	pop    esp
  41ce5b:	inc    ebx
  41ce5c:	jne    0x41ced0
  41ce5e:	jb     0x41cec5
  41ce60:	outs   dx,BYTE PTR ds:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	adc    cx,bp
  420608:	sbb    al,0xd
  42060a:	or     BYTE PTR [ebx+0x1fb0001],al
  420610:	add    BYTE PTR [eax],al
  420612:	les    esp,FWORD PTR [edx-0x25296d3c]
  420618:	mov    esp,0x2decca39
  42061d:	pop    ebx
  42061e:	pop    edx
  42061f:	mov    cl,0xf
  420621:	push   es
  420622:	stos   BYTE PTR es:[edi],al
  420623:	jg     0x42061a
  420625:	in     eax,dx
  420626:	xor    esp,DWORD PTR [ebp+0x6b]
  420629:	sbb    eax,0xbc457421
  42062e:	jle    0x42065f
  420630:	pop    ecx
  420631:	or     eax,0xe14f3be0
  420636:	jo     0x420690
  420638:	push   ecx
  420639:	mov    eax,ds:0xce03b972
  42063e:	jbe    0x4205d8
  420640:	jnp    0x420635
  420642:	in     al,dx
  420643:	xlat   BYTE PTR ds:[ebx]
  420644:	aam    0x75
  420646:	(bad)  
  420647:	push   esp
  420648:	test   dh,bl
  42064a:	inc    ecx
  42064b:	ret    0xedd6
  42064e:	daa    
  42064f:	js     0x420624
  420651:	dec    ecx
  420652:	xor    al,0x44
  420654:	dec    ebx
  420655:	jo     0x4206ae
  420657:	mov    edi,DWORD PTR [eax+ebp*8-0x350c0f3e]
  42065e:	mov    eax,ds:0xc7701236
  420663:	push   ebp
  420664:	mov    bh,0x58
  420666:	push   ebx
  420667:	out    0x2c,al
  420669:	in     al,0x10
  42066b:	imul   esi,DWORD PTR [esi+0x7d],0x7a3709d1
  420672:	push   0xe567b5a
  420677:	inc    ebp
  420678:	cmp    BYTE PTR [esi],bh
  42067a:	dec    ecx
  42067b:	jp     0x42067c
  42067d:	mov    DWORD PTR ds:0x92adaac2,ebx
  420683:	(bad)  
  420685:	dec    ebp
  420686:	aaa    
  420687:	aam    0x79
  420689:	mov    dh,0x7d
  42068b:	adc    ebp,DWORD PTR [edx-0x71]
  42068e:	xchg   ebx,eax
  42068f:	push   0xca3c460
  420694:	dec    eax
  420695:	rol    DWORD PTR [esi-0x40f38cb6],cl
  42069b:	jae    0x4206dd
  42069d:	pop    ds
  42069e:	xor    BYTE PTR [esi+0x79],cl
  4206a1:	adc    al,0x7f
  4206a3:	pop    ebx
  4206a4:	in     eax,0xab
  4206a6:	mov    ch,0xc5
  4206a8:	sar    BYTE PTR [ecx+0x118adbac],1
  4206ae:	ins    DWORD PTR es:[edi],dx
  4206af:	mov    edx,0xe3d35012
  4206b4:	xchg   edi,eax
  4206b5:	arpl   sp,si
  4206b7:	(bad)  
  4206b8:	xchg   ebx,eax
  4206b9:	mov    ah,ch
  4206bb:	call   0x8bcd5c53
  4206c0:	xchg   esi,eax
  4206c1:	inc    edx
  4206c2:	test   edx,ecx
  4206c4:	imul   edi,ebx,0x3a4abd2
  4206ca:	cmp    eax,0xa1633d9d
  4206cf:	nop
  4206d0:	in     al,dx
  4206d1:	(bad)  
  4206d3:	mov    BYTE PTR [ecx+0x5],cl
  4206d6:	outs   dx,BYTE PTR es:[esi]
  4206d8:	aaa    
  4206d9:	in     eax,0x5a
  4206db:	push   0x30
  4206dd:	out    0x50,eax
  4206df:	mov    eax,ds:0xa582d791
  4206e4:	leavew 
  4206e6:	cmp    eax,0xe84fcc6c
  4206eb:	fiadd  WORD PTR [edi-0x53]
  4206ee:	fcom   DWORD PTR [ebx]
  4206f0:	mov    ?,WORD PTR [edx]
  4206f2:	mov    eax,0x10767e43
  4206f7:	mov    edi,esp
  4206f9:	pushf  
  4206fa:	ins    BYTE PTR es:[edi],dx
  4206fb:	pushf  
  4206fc:	outs   dx,DWORD PTR ds:[esi]
  4206fd:	xchg   ebx,eax
  4206fe:	mov    ebx,0x71649b19
  420703:	mov    ebp,0xccdbb1cb
  420708:	int    0xd9
  42070a:	push   esi
  42070b:	mov    bl,0xac
  42070d:	fimul  DWORD PTR [eax]
  42070f:	add    al,0xb6
  420711:	or     BYTE PTR [ebp+0x46],bh
  420714:	(bad)  
  420715:	sbb    bh,BYTE PTR [edx-0x6c]
  420718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420719:	lahf   
  42071a:	or     BYTE PTR [edx],ch
  42071c:	mov    ecx,0xc019981a
  420721:	jmp    0xda0b:0xaed39ea6
  420728:	xor    esi,0xffffffa3
  42072b:	outs   dx,DWORD PTR ds:[esi]
  42072c:	inc    esi
  42072d:	(bad)  
  42072e:	imul   eax,ebx,0xfffffffc
  420731:	mov    es,WORD PTR [bp+di]
  420734:	out    0xb0,al
  420736:	push   ecx
  420737:	scas   al,BYTE PTR es:[edi]
  420738:	sbb    eax,0x129332d2
  42073d:	nop
  42073e:	dec    ecx
  42073f:	popf   
  420740:	leave  
  420741:	scas   al,BYTE PTR es:[edi]
  420742:	adc    cl,BYTE PTR [esi-0x69d94588]
  420748:	adc    BYTE PTR [ebx+0x29],0xcf
  42074c:	xor    eax,0xadfe6c07
  420751:	or     eax,0x9abeb0eb
  420756:	sub    DWORD PTR [eax],ebx
  420758:	inc    esi
  420759:	xrelease mov BYTE PTR [edx],al
  42075c:	inc    ebp
  42075d:	sub    ebx,eax
  42075f:	sbb    esp,0xffffff9e
  420762:	mov    ebp,0xc856019
  420767:	std    
  420768:	addr16 pushf 
  42076a:	jl     0x420747
  42076c:	enter  0x205d,0xa5
  420770:	push   ss
  420771:	cmp    DWORD PTR [esi-0xc],ebp
  420774:	sub    eax,0x98f6b52e
  420779:	out    dx,al
  42077a:	sub    edx,ecx
  42077c:	(bad)  
  42077d:	push   ecx
  42077e:	jecxz  0x4207ad
  420780:	mov    ds:0xb67b7219,al
  420785:	dec    ebx
  420786:	jns    0x42079c
  420788:	cs cld 
  42078a:	jno    0x4207f5
  42078c:	jbe    0x4207da
  42078e:	pop    es
  42078f:	sbb    al,0x57
  420791:	repnz cs pop ebx
  420794:	adc    BYTE PTR [esi+0x15cc4646],bh
  42079a:	xlat   BYTE PTR ds:[ebx]
  42079b:	jmp    FWORD PTR [edx]
  42079d:	sub    al,bl
  42079f:	or     eax,0x23ad111b
  4207a4:	test   eax,0x65d24de1
  4207a9:	lods   al,BYTE PTR ds:[esi]
  4207aa:	imul   eax,esi,0x2d
  4207ad:	mov    ah,0x1c
  4207af:	inc    esp
  4207b0:	mov    DWORD PTR [ebp+0x59449598],edx
  4207b6:	add    eax,0x4a65706d
  4207bb:	jmp    FWORD PTR [esi+edx*8-0x5d96ecc5]
  4207c2:	(bad)  [edx]
  4207c4:	pop    ds
  4207c5:	hlt    
  4207c6:	xchg   ecx,eax
  4207c7:	loop   0x4207ed
  4207c9:	jb     0x4207fb
  4207cb:	ret    
  4207cc:	out    dx,al
  4207cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ce:	jo     0x4207c2
  4207d0:	(bad)  
  4207d1:	or     al,0x7d
  4207d3:	sahf   
  4207d4:	mov    dl,0xef
  4207d6:	shr    edx,cl
  4207d8:	push   cs
  4207d9:	xchg   ebp,eax
  4207da:	push   ss
  4207db:	or     cl,bh
  4207dd:	xchg   esp,eax
  4207de:	sub    al,0x99
  4207e0:	push   edi
  4207e1:	shr    BYTE PTR [ebx-0x37],0xf1
  4207e5:	(bad)  
  4207e6:	retf   
  4207e7:	pop    eax
  4207e8:	xchg   edx,eax
  4207e9:	scas   eax,DWORD PTR es:[edi]
  4207ea:	mov    WORD PTR [edi+0x2834f39],gs
  4207f0:	push   ds
  4207f1:	and    DWORD PTR [ebx],esi
  4207f3:	ret    
  4207f4:	mov    edi,0x510a82dc
  4207f9:	xchg   ecx,eax
  4207fa:	mov    ebp,0x6a43152c
  4207ff:	jle    0x420784
  420801:	aaa    
  420802:	pop    eax
  420803:	std    
  420804:	aam    0xb0
  420806:	pop    edi
  420807:	ins    BYTE PTR es:[edi],dx
  420808:	in     eax,0x28
  42080a:	fidivr DWORD PTR [ebp+0xfa]
	...
  420818:	add    BYTE PTR [eax],al
  42081a:	ja     0x420868
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx+0x3dad2ffd]
  420828:	cmp    bh,cl
  42082a:	add    eax,DWORD PTR [ebp+0x1fb0001]
  420830:	add    BYTE PTR [eax],al
  420832:	scas   al,BYTE PTR es:[edi]
  420833:	push   0x12
  420835:	das    
  420836:	push   cs
  420837:	test   DWORD PTR [ebx-0x3c],edx
  42083a:	mov    ecx,0x6be26bb9
  42083f:	jae    0x4207d3
  420841:	mov    al,ds:0x9fc3860
  420846:	xchg   esi,eax
  420847:	fimul  WORD PTR [ebx+ebx*2+0x3d]
  42084b:	add    DWORD PTR [ebx+0x66],0x74b19b8b
  420852:	mov    ch,0xf8
  420854:	mov    dl,0xf7
  420856:	xchg   esi,eax
  420857:	pop    ebp
  420858:	es or  al,0x6b
  42085b:	jmp    0x42089e
  42085d:	fld    DWORD PTR [esp+edx*4+0x5dbb8d93]
  420864:	out    dx,eax
  420865:	(bad)  
  420866:	aad    0x9a
  420868:	loope  0x420895
  42086a:	dec    bx
  42086c:	mov    ah,BYTE PTR [eax]
  42086e:	loop   0x420814
  420870:	fcomp  QWORD PTR [ebp+0x45cbc3e3]
  420876:	jns    0x42088a
  420878:	(bad)  
  42087a:	gs xchg edx,eax
  42087c:	cmp    eax,0xd1b97ce4
  420881:	mov    ebx,0xefc4dcf9
  420886:	adc    ebx,edi
  420888:	mov    dh,0x7a
  42088a:	popf   
  42088b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088c:	clc    
  42088d:	cmp    ebp,DWORD PTR [ebx+0x58]
  420890:	out    dx,al
  420891:	sahf   
  420892:	inc    esi
  420893:	sub    edi,DWORD PTR [ecx+0x7af5bde5]
  420899:	adc    BYTE PTR [eax-0x3],dl
  42089c:	mov    ebp,0xb36c0406
  4208a1:	push   ecx
  4208a2:	jae    0x4208ce
  4208a4:	sub    eax,0xac606fbf
  4208a9:	cmp    ebx,DWORD PTR [esi+edx*4+0x62]
  4208ad:	sub    esi,DWORD PTR [esi]
  4208af:	(bad)  
  4208b0:	mov    ebp,0x4a940b32
  4208b5:	mov    al,0xa3
  4208b7:	pop    ebp
  4208b8:	test   DWORD PTR [ecx-0x41],0xac89546f
  4208bf:	or     esp,DWORD PTR [eax]
  4208c1:	scas   al,BYTE PTR es:[edi]
  4208c2:	mov    ?,WORD PTR ds:0x4f30b748
  4208c8:	add    ch,cl
  4208ca:	lds    edx,FWORD PTR [ecx+0x77dced59]
  4208d0:	sbb    ebp,DWORD PTR [esi]
  4208d2:	xor    DWORD PTR [eax],ecx
  4208d4:	div    ah
  4208d6:	repnz or edi,DWORD PTR [ebx*4-0x20108cf8]
  4208de:	imul   esi,DWORD PTR [ecx+edx*1-0x35],0xffffffe4
  4208e3:	stos   BYTE PTR es:[edi],al
  4208e4:	cmp    eax,0x8ecb043e
  4208e9:	retf   
  4208ea:	scas   al,BYTE PTR es:[edi]
  4208eb:	int    0x68
  4208ed:	sar    DWORD PTR [edx+edx*8+0x16],cl
  4208f1:	adc    al,0x11
  4208f3:	stos   BYTE PTR es:[edi],al
  4208f4:	loopne 0x420958
  4208f6:	mov    ebx,0x3bb58ef7
  4208fb:	ja     0x420975
  4208fd:	push   ss
  4208fe:	sub    bh,bh
  420900:	(bad)  
  420901:	and    cl,BYTE PTR [ebp-0x5f]
  420904:	pop    edx
  420905:	cdq    
  420906:	xchg   esi,eax
  420907:	and    eax,0xf7b82c80
  42090c:	mov    bh,0x7
  42090e:	mov    dl,0xfe
  420910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420911:	retf   0x8f81
  420914:	jl     0x420958
  420916:	(bad)  
  420917:	out    0x27,al
  420919:	jle    0x42093a
  42091b:	mov    gs,WORD PTR [ecx-0x47f5ff40]
  420921:	sbb    eax,0xb0e8f5c1
  420926:	mov    dl,0x67
  420928:	(bad)  
  420929:	pop    edi
  42092a:	sub    al,0xba
  42092c:	jg     0x42099a
  42092e:	mov    al,0xb5
  420930:	ss cld 
  420932:	aaa    
  420933:	lock xor BYTE PTR [ebx-0x5e],ch
  420937:	push   ds
  420938:	scas   eax,DWORD PTR es:[edi]
  420939:	and    edi,DWORD PTR [ebx-0x51]
  42093c:	ror    BYTE PTR [eax-0x30],cl
  42093f:	jecxz  0x420993
  420941:	int    0x80
  420943:	push   esi
  420944:	dec    esi
  420945:	xchg   ebp,eax
  420946:	gs xor ebp,esp
  420949:	xor    eax,0x1111cd6b
  42094e:	fild   DWORD PTR [ecx+0x5a3ca205]
  420954:	and    DWORD PTR [ebp-0x6d],ebp
  420957:	adc    eax,0x5f364f26
  42095c:	inc    ecx
  42095d:	xchg   cl,al
  42095f:	pusha  
  420960:	jg     0x42092a
  420962:	aam    0xd9
  420964:	(bad)
  420968:	lods   al,BYTE PTR ds:[esi]
  420969:	into   
  42096a:	adc    al,0x20
  42096c:	xor    bl,BYTE PTR [edx+0x42]
  42096f:	and    dl,BYTE PTR [ebp-0x7cabfc8]
  420975:	adc    bl,BYTE PTR [esi-0x66dd0f20]
  42097b:	ins    DWORD PTR es:[edi],dx
  42097c:	(bad)  
  42097e:	and    DWORD PTR [edx+0x17],ecx
  420981:	fild   DWORD PTR [ebp+0x5abf7fe3]
  420987:	inc    esi
  420988:	mov    edx,0x7746286d
  42098d:	pop    ebx
  42098e:	scas   al,BYTE PTR es:[edi]
  42098f:	lock sbb DWORD PTR [eax-0x4e0fc85f],esp
  420996:	test   DWORD PTR ds:0x668d2a59,ebx
  42099c:	mov    bh,0x76
  42099e:	aad    0x3d
  4209a0:	mov    al,cl
  4209a2:	push   0x8c8abfa0
  4209a7:	jns    0x420943
  4209a9:	jne    0x420963
  4209ab:	sahf   
  4209ac:	jnp    0x420a19
  4209ae:	jns    0x4209a7
  4209b0:	xchg   edx,eax
  4209b1:	clc    
  4209b2:	push   cs
  4209b3:	mov    ebx,0xff8a5d3e
  4209b8:	scas   al,BYTE PTR es:[edi]
  4209b9:	loopne 0x420a1c
  4209bb:	sbb    BYTE PTR [edi-0xef30097],bh
  4209c1:	popf   
  4209c2:	and    BYTE PTR [esi],bl
  4209c4:	xchg   ebx,eax
  4209c5:	inc    eax
  4209c6:	mov    ds:0x877842b5,eax
  4209cb:	pusha  
  4209cc:	test   eax,0xa309b191
  4209d1:	jg     0x420978
  4209d3:	mov    bh,0x1
  4209d5:	sub    eax,0x20da7cfa
  4209da:	lock repnz leave 
  4209dd:	and    ch,BYTE PTR [esi+edi*2-0x6e]
  4209e1:	jecxz  0x420992
  4209e3:	jne    0x420968
  4209e5:	pop    ebx
  4209e6:	aaa    
  4209e7:	ror    DWORD PTR [edi+ebx*4-0xb],1
  4209eb:	add    ebp,edx
  4209ed:	jno    0x420a57
  4209ef:	aad    0x3c
  4209f1:	rcl    BYTE PTR [ecx+0x51],1
  4209f4:	xor    eax,0xe02f2188
  4209f9:	out    0x2f,al
  4209fb:	jmp    0x7c7a:0xeba33665
  420a02:	cld    
  420a03:	scas   al,BYTE PTR es:[edi]
  420a04:	iret   
  420a05:	mov    ds:0xbaf0bb63,al
  420a0a:	jle    0x420a07
  420a0c:	jo     0x420a7d
  420a0e:	sbb    eax,0x4335c58d
  420a13:	adc    DWORD PTR [ebp+0x47],ecx
  420a16:	daa    
  420a17:	adc    dl,BYTE PTR [edx+0x1d]
  420a1a:	ja     0x4209a7
  420a1c:	js     0x4209f1
  420a1e:	or     edx,DWORD PTR [eax+0x48f42592]
  420a24:	push   es
  420a25:	popa   
  420a26:	fnsave [eax]
  420a28:	xchg   BYTE PTR [edi+0xf2dac2],dh
	...
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x420a6a
  420a47:	inc    esi
  420a48:	das    
  420a49:	(bad)  
  420a4a:	inc    BYTE PTR [esi+0x1fb0001]
  420a50:	add    BYTE PTR [eax],al
  420a52:	lods   eax,DWORD PTR ds:[esi]
  420a53:	push   edi
  420a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a55:	ins    DWORD PTR es:[edi],dx
  420a56:	push   edx
  420a57:	(bad)  
  420a58:	aad    0xc
  420a5a:	icebp  
  420a5b:	and    al,0x9d
  420a5d:	add    al,BYTE PTR [edi+0x8]
  420a60:	xchg   DWORD PTR [esi],edx
  420a62:	cwde   
  420a63:	sbb    dh,cl
  420a65:	pop    es
  420a66:	push   ecx
  420a67:	cdq    
  420a68:	mov    ebx,edi
  420a6a:	and    dh,BYTE PTR [ecx+eiz*2+0x6501bfee]
  420a71:	shl    BYTE PTR ds:0xb451c132,0x6a
  420a78:	adc    DWORD PTR [esi],ebx
  420a7a:	fs mov bh,0x14
  420a7d:	outs   dx,BYTE PTR ds:[esi]
  420a7e:	scas   al,BYTE PTR es:[edi]
  420a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a80:	pop    ecx
  420a81:	push   0xffffffff
  420a83:	or     DWORD PTR [ebx-0x66],0x58730eb8
  420a8a:	mov    bp,0x67f2
  420a8e:	(bad)  
  420a8f:	retf   
  420a90:	nop
  420a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a92:	mov    eax,ds:0xc60db44c
  420a97:	aad    0x88
  420a99:	shl    DWORD PTR es:[edi],cl
  420a9c:	pop    es
  420a9d:	and    eax,0x402ca5a7
  420aa2:	mov    es,WORD PTR [esi-0x7c34ba41]
  420aa8:	adc    BYTE PTR [edi-0x6f],bl
  420aab:	mov    DWORD PTR [ebx-0x6266e6c1],esp
  420ab1:	dec    ecx
  420ab2:	push   ss
  420ab3:	xchg   ch,dh
  420ab5:	in     al,dx
  420ab6:	not    BYTE PTR [ecx-0x70ebaa7b]
  420abc:	scas   al,BYTE PTR es:[edi]
  420abd:	inc    eax
  420abe:	push   esi
  420abf:	sub    ecx,eax
  420ac1:	popa   
  420ac2:	into   
  420ac3:	iret   
  420ac4:	or     DWORD PTR [ebp+0x5d],edi
  420ac7:	call   0x7bca:0x1493b7b2
  420ace:	mov    bl,0x66
  420ad0:	ins    DWORD PTR es:[edi],dx
  420ad1:	mov    edi,0x79fe0be6
  420ad6:	adc    BYTE PTR [ecx],ah
  420ad8:	mov    ebx,0xd51e7431
  420add:	ins    BYTE PTR es:[edi],dx
  420ade:	outs   dx,DWORD PTR ds:[esi]
  420adf:	js     0x420adc
  420ae1:	xor    esp,ebx
  420ae3:	mov    eax,DWORD PTR [eax-0x6a865dc4]
  420ae9:	dec    eax
  420aea:	ror    DWORD PTR [ecx],0xe1
  420aed:	call   0x51a3:0x9387f5ed
  420af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af5:	rcl    BYTE PTR [ebx+ebx*2+0x70],cl
  420af9:	xchg   ecx,eax
  420afa:	scas   eax,DWORD PTR es:[edi]
  420afb:	xchg   ecx,eax
  420afc:	push   ds
  420afd:	test   BYTE PTR [eax],dl
  420aff:	daa    
  420b00:	add    al,0x4
  420b02:	jp     0x420b22
  420b04:	xchg   ah,dh
  420b06:	(bad)  
  420b07:	arpl   WORD PTR [eax],ax
  420b09:	xor    eax,esp
  420b0b:	stos   DWORD PTR es:[edi],eax
  420b0c:	lods   al,BYTE PTR ds:[esi]
  420b0d:	in     al,dx
  420b0e:	jb     0x420b0a
  420b10:	gs mov esi,0x44a19f8
  420b16:	mov    ah,0xe4
  420b18:	inc    edx
  420b19:	adc    eax,DWORD PTR [edx]
  420b1b:	(bad)  
  420b1d:	add    esp,DWORD PTR [eax]
  420b1f:	push   esp
  420b20:	in     al,dx
  420b21:	cmp    eax,0xb37a40cd
  420b26:	in     al,dx
  420b27:	sbb    bh,BYTE PTR [ebx+0x73161d77]
  420b2d:	shl    BYTE PTR [edi],0xa2
  420b30:	lahf   
  420b31:	pusha  
  420b32:	sar    DWORD PTR [edi-0xa431b82],1
  420b38:	push   ecx
  420b39:	jb     0x420acb
  420b3b:	fs mov ah,0x61
  420b3e:	dec    ebp
  420b3f:	arpl   WORD PTR ds:0x82b5422b,bx
  420b45:	lahf   
  420b46:	aam    0x31
  420b48:	or     eax,0x1c7163db
  420b4d:	test   DWORD PTR [ebp+0x2],esi
  420b50:	imul   esp,DWORD PTR [ecx-0x33ce2c76],0xbb11f7f1
  420b5a:	stc    
  420b5b:	fnstcw WORD PTR [eax]
  420b5d:	xchg   edi,eax
  420b5e:	xchg   esp,eax
  420b5f:	push   edx
  420b60:	scas   al,BYTE PTR es:[edi]
  420b61:	data16 arpl ax,cx
  420b64:	cmp    eax,0x1a8cefe4
  420b69:	jecxz  0x420b50
  420b6b:	dec    ebx
  420b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b6d:	out    dx,eax
  420b6e:	fwait
  420b6f:	xor    edi,DWORD PTR [ecx]
  420b71:	sbb    dl,BYTE PTR es:[ecx+0xe]
  420b75:	push   esp
  420b76:	push   0x55
  420b78:	lea    esp,[ebp+0x38]
  420b7b:	xchg   DWORD PTR [ecx+0xb],eax
  420b7e:	xlat   BYTE PTR ds:[ebx]
  420b7f:	xchg   edi,eax
  420b80:	push   edi
  420b81:	je     0x420b33
  420b83:	inc    edi
  420b84:	inc    esi
  420b85:	jns    0x420b3c
  420b87:	adc    al,0xb6
  420b89:	shl    ebx,cl
  420b8b:	es sbb eax,0x5058b0ec
  420b91:	pop    es
  420b92:	imul   DWORD PTR [edx+edi*1-0x1d]
  420b96:	(bad)  
  420b97:	xor    DWORD PTR [ebp-0x4ed58e75],esp
  420b9d:	imul   edi,DWORD PTR [ecx],0xa
  420ba0:	and    al,0x6
  420ba2:	xor    ecx,DWORD PTR [ebp-0x7e]
  420ba5:	int3   
  420ba6:	scas   eax,DWORD PTR es:[edi]
  420ba7:	mov    esp,0x32785ad3
  420bac:	(bad)  
  420bad:	fwait
  420bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420baf:	xchg   DWORD PTR [esi+esi*8],ecx
  420bb2:	cmp    al,0x64
  420bb4:	cmp    ah,BYTE PTR [ebx-0x26255979]
  420bba:	ds (bad) 
  420bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bbe:	loop   0x420b43
  420bc0:	out    dx,al
  420bc1:	je     0x420c3a
  420bc3:	aaa    
  420bc4:	arpl   WORD PTR [edx],bp
  420bc6:	test   DWORD PTR [eax+0x67],0xe14690ca
  420bcd:	push   esi
  420bce:	jg     0x420ba8
  420bd0:	jg     0x420c2e
  420bd2:	jg     0x420b6b
  420bd4:	lea    ecx,[ecx+0xf8845d8]
  420bda:	xchg   esi,eax
  420bdb:	cmp    al,0xb0
  420bdd:	adc    eax,0xb1faa1d6
  420be2:	push   0x28c96c64
  420be7:	ror    DWORD PTR [esi+0x2bff68b1],cl
  420bed:	push   ebp
  420bee:	cdq    
  420bef:	cld    
  420bf0:	rol    DWORD PTR [esi],cl
  420bf2:	and    eax,0xa8a543b8
  420bf7:	adc    BYTE PTR [ebx+0x2c],ch
  420bfa:	inc    esp
  420bfb:	push   ds
  420bfc:	mov    ds:0x97e00fa5,eax
  420c01:	dec    ebp
  420c02:	dec    edx
  420c03:	push   edx
  420c04:	(bad)  
  420c05:	push   esp
  420c06:	sub    DWORD PTR [esi],edx
  420c08:	cs es out 0x7f,al
  420c0c:	inc    edi
  420c0d:	leave  
  420c0e:	mov    es,WORD PTR [ebp+0x4f]
  420c11:	cmp    esp,ebx
  420c13:	xor    DWORD PTR [esi+edi*1-0x38d14b84],ebp
  420c1a:	std    
  420c1b:	add    al,0x85
  420c1d:	xchg   DWORD PTR [ebx],esp
  420c1f:	xchg   edi,eax
  420c20:	loopne 0x420c48
  420c22:	pushf  
  420c23:	or     dh,BYTE PTR [edx+0x31]
  420c26:	adc    dl,0xd6
  420c29:	dec    edi
  420c2a:	push   eax
  420c2b:	adc    al,0x2d
  420c2d:	imul   ecx,esp,0xae895ca4
  420c33:	xchg   ebx,eax
  420c34:	mov    BYTE PTR [ebp+0x6e],dh
  420c37:	lock inc edx
  420c39:	xor    al,0x5d
  420c3b:	outs   dx,BYTE PTR ds:[esi]
  420c3c:	xchg   DWORD PTR [eax+0x1d],edx
  420c3f:	add    al,0x1f
  420c41:	inc    ebx
  420c42:	aad    0xd8
  420c44:	stc    
  420c45:	adc    edx,DWORD PTR [esi]
  420c47:	int3   
  420c48:	pop    eax
  420c49:	jbe    0x420bde
  420c4b:	jmp    0x420c73
	...
  420c58:	add    BYTE PTR [eax],al
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [eax+0x61],gs
  420c68:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c6a:	stc    
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    bl,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [ebp-0x3acdcfd3],dl
  420c77:	stc    
  420c78:	call   0x5dee:0x8c97db29
  420c7f:	dec    ebx
  420c80:	in     al,0x50
  420c82:	jno    0x420ccd
  420c84:	jbe    0x420ce8
  420c86:	push   eax
  420c87:	ret    0x1241
  420c8a:	jg     0x420c3a
  420c8c:	push   esp
  420c8d:	pop    ebx
  420c8e:	push   ecx
  420c8f:	sbb    DWORD PTR [ecx+ebx*4-0x5e],ebp
  420c93:	retf   0x78c0
  420c96:	xor    eax,0x112cc29f
  420c9b:	dec    ebp
  420c9c:	stos   BYTE PTR es:[edi],al
  420c9d:	mov    ss,edx
  420c9f:	not    DWORD PTR [edx]
  420ca1:	xor    ebp,eax
  420ca3:	test   eax,0xde0a32eb
  420ca8:	push   ebp
  420ca9:	xlat   BYTE PTR ds:[ebx]
  420caa:	es pop edx
  420cac:	dec    esp
  420cad:	jne    0x420d07
  420caf:	push   es
  420cb0:	and    DWORD PTR [edx-0x781ea3bf],0x26315db4
  420cba:	sbb    eax,0x7106a87b
  420cbf:	sub    eax,0xf76f1584
  420cc4:	out    dx,eax
  420cc5:	lahf   
  420cc6:	dec    ebp
  420cc7:	inc    edi
  420cc8:	jp     0x420c5f
  420cca:	ds jmp 0xf10cddff
  420cd0:	inc    eax
  420cd1:	push   ds
  420cd2:	fmul   DWORD PTR [esi-0x1]
  420cd5:	cmp    eax,DWORD PTR [edx-0x42]
  420cd8:	mov    ebx,0xe2f38b20
  420cdd:	int3   
  420cde:	cmp    ebx,DWORD PTR [eax]
  420ce0:	sar    BYTE PTR [ebx],1
  420ce2:	call   0xcbab:0xa9b310f5
  420ce9:	pop    esp
  420cea:	add    DWORD PTR [ebx+edx*1-0x5e9978ce],ebp
  420cf1:	dec    edx
  420cf2:	and    BYTE PTR [eax-0x12],ch
  420cf5:	and    BYTE PTR ds:0xa57b09e7,ch
  420cfb:	xchg   esp,eax
  420cfc:	sub    eax,DWORD PTR [edi]
  420cfe:	lahf   
  420cff:	sub    bh,BYTE PTR [edx]
  420d01:	leave  
  420d02:	out    dx,eax
  420d03:	out    dx,al
  420d04:	xor    bh,BYTE PTR [ecx+eax*1+0x662ac0ad]
  420d0b:	(bad)  
  420d0c:	pop    esi
  420d0d:	arpl   WORD PTR [ecx+edx*4+0x0],si
  420d11:	test   BYTE PTR [eax-0x469fbc0a],bl
  420d17:	std    
  420d18:	sbb    eax,0xbe5bd411
  420d1d:	or     al,0xfa
  420d1f:	sub    DWORD PTR [edi],ebx
  420d21:	mov    eax,0x839f1894
  420d26:	lock js 0x420d03
  420d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d2a:	mov    ebp,0xa5f8a4b8
  420d2f:	aad    0x13
  420d31:	cld    
  420d32:	popf   
  420d33:	popf   
  420d34:	or     eax,0xd7602e6a
  420d39:	out    0x52,al
  420d3b:	mov    DWORD PTR [ecx+0x776d269a],esi
  420d41:	push   esi
  420d42:	fsub   st(1),st
  420d44:	mov    edi,DWORD PTR [edi-0x5c]
  420d47:	pop    ds
  420d48:	loope  0x420dab
  420d4a:	(bad)  
  420d4c:	or     DWORD PTR [edx-0x5e0a87c2],edx
  420d52:	xchg   ebx,eax
  420d53:	ins    DWORD PTR es:[edi],dx
  420d54:	ret    
  420d55:	push   esp
  420d56:	test   al,0xc6
  420d58:	jge    0x420ceb
  420d5a:	cmp    cl,bh
  420d5c:	fiadd  WORD PTR ds:0xf8641773
  420d62:	lock dec ebx
  420d64:	jno    0x420dd4
  420d66:	fild   WORD PTR [ecx-0x48]
  420d69:	or     DWORD PTR [ebx-0x3a],edi
  420d6c:	cmc    
  420d6d:	push   cs
  420d6e:	scas   al,BYTE PTR es:[edi]
  420d6f:	cmp    al,0x72
  420d71:	imul   eax,edi,0x76
  420d74:	clc    
  420d75:	add    DWORD PTR [ebp-0x5f638e39],ecx
  420d7b:	and    ah,BYTE PTR [ecx-0x1a1cefab]
  420d81:	sbb    al,0x52
  420d83:	ss push eax
  420d85:	cmp    DWORD PTR [edx-0x3d745233],ecx
  420d8b:	cs push esi
  420d8d:	sub    BYTE PTR [eax+esi*1-0x59],ch
  420d91:	lods   al,BYTE PTR ds:[esi]
  420d92:	and    eax,0x3f6d7da1
  420d97:	test   al,0xf1
  420d99:	and    eax,0x689dd4fc
  420d9e:	ins    BYTE PTR es:[edi],dx
  420d9f:	test   DWORD PTR [ebp+0x7b53bdff],0x17568486
  420da9:	into   
  420daa:	iret   
  420dab:	ret    0xbbce
  420dae:	sub    dh,BYTE PTR [ebp-0x20]
  420db1:	lock adc ah,BYTE PTR [esi+0x6e]
  420db5:	das    
  420db6:	nop
  420db7:	jl     0x420e15
  420db9:	add    BYTE PTR ds:0x9b98824,ah
  420dbf:	jns    0x420e39
  420dc1:	mov    dh,0x14
  420dc3:	and    DWORD PTR cs:[ebx],eax
  420dc6:	dec    ebp
  420dc7:	in     al,0x96
  420dc9:	retf   
  420dca:	icebp  
  420dcb:	ror    DWORD PTR [ecx-0x1052e367],0x26
  420dd2:	ins    BYTE PTR es:[edi],dx
  420dd3:	aaa    
  420dd4:	in     al,dx
  420dd5:	mov    dh,0xe8
  420dd7:	outs   dx,DWORD PTR ds:[esi]
  420dd8:	jmp    0x6563e1c0
  420ddd:	xchg   ebp,eax
  420dde:	xor    dl,BYTE PTR [edx]
  420de0:	test   DWORD PTR [edx-0x51],edi
  420de3:	dec    ebx
  420de4:	adc    dl,BYTE PTR [eax]
  420de6:	imul   bl
  420de8:	adc    BYTE PTR [esi],ah
  420dea:	cwde   
  420deb:	mov    ebp,0x7838d72b
  420df0:	pop    edi
  420df1:	out    dx,eax
  420df2:	xor    al,ch
  420df4:	xor    eax,0x16d7ad84
  420df9:	sub    eax,0x918bcb64
  420dfe:	sbb    al,0x65
  420e00:	outs   dx,BYTE PTR ds:[esi]
  420e01:	pop    es
  420e02:	loope  0x420dea
  420e04:	fimul  WORD PTR [esi-0x2e]
  420e07:	imul   eax,DWORD PTR [edx],0x6c
  420e0a:	loope  0x420de2
  420e0c:	int    0xf8
  420e0e:	test   eax,0xac026bc
  420e13:	inc    edi
  420e14:	outs   dx,DWORD PTR ds:[esi]
  420e15:	jge    0x420e65
  420e17:	sti    
  420e18:	test   eax,0x75b39890
  420e1d:	sti    
  420e1e:	(bad)  
  420e1f:	imul   eax,DWORD PTR [edx-0xe],0x1f
  420e23:	sub    dl,BYTE PTR [ebx-0x7290d60f]
  420e29:	pop    es
  420e2a:	adc    DWORD PTR [esp+ebx*4+0x3635596a],esp
  420e31:	aaa    
  420e32:	adc    eax,0x30b3a77d
  420e37:	adc    BYTE PTR [eax],dh
  420e39:	out    0xa3,al
  420e3b:	mov    bh,0x18
  420e3d:	stos   BYTE PTR es:[edi],al
  420e3e:	lods   al,BYTE PTR ds:[esi]
  420e3f:	(bad)  
  420e40:	and    eax,0x6b1e4a24
  420e45:	out    0xdf,eax
  420e47:	mov    ds:0x49aff715,eax
  420e4c:	fstp   TBYTE PTR [edi+0x72d418f5]
  420e52:	std    
  420e53:	mov    eax,ebx
  420e55:	mov    ?,WORD PTR [ecx+0x291df875]
  420e5b:	stos   DWORD PTR es:[edi],eax
  420e5c:	xchg   ebx,eax
  420e5d:	xor    al,0x89
  420e5f:	and    DWORD PTR [ecx-0x7e26581c],ebx
  420e65:	in     eax,dx
  420e66:	ja     0x420dfb
  420e68:	xchg   esp,eax
  420e69:	pop    ebp
  420e6a:	pop    ebx
  420e6b:	std    
  420e6c:	pop    DWORD PTR [eax]
	...
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420e7a
  420e87:	pop    esp
  420e88:	int3   
  420e89:	sahf   
  420e8a:	hlt    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    bl,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [edx],bl
  420e93:	sub    al,0xfe
  420e95:	add    BYTE PTR ds:[edi+0x32],cl
  420e99:	xchg   esi,eax
  420e9a:	sahf   
  420e9b:	sbb    eax,0xa43e7926
  420ea0:	xchg   ebp,eax
  420ea1:	test   eax,0x5148a12c
  420ea6:	sub    al,0xaa
  420ea8:	clc    
  420ea9:	mov    esp,ebx
  420eab:	rcl    edx,cl
  420ead:	aaa    
  420eae:	pop    ss
  420eaf:	jno    0x420f16
  420eb1:	mov    esi,0xdc71b495
  420eb6:	mov    fs,ebx
  420eb8:	es jle 0x420f04
  420ebb:	inc    eax
  420ebc:	lods   eax,DWORD PTR ds:[esi]
  420ebd:	or     eax,0x79953525
  420ec2:	pop    ecx
  420ec3:	(bad)  
  420ec4:	std    
  420ec5:	(bad)  
  420ec6:	push   edx
  420ec7:	or     BYTE PTR ds:0xe7d39489,ch
  420ecd:	mov    ebx,0xcbc0071d
  420ed2:	dec    esi
  420ed3:	dec    edi
  420ed4:	xchg   ebx,eax
  420ed5:	fadd   DWORD PTR [eax-0x73]
  420ed8:	cli    
  420ed9:	cmp    edx,eax
  420edb:	sub    BYTE PTR [esi+0x41],ch
  420ede:	lods   eax,DWORD PTR ds:[esi]
  420edf:	sub    eax,DWORD PTR [eax-0x3b7aa5ac]
  420ee5:	and    al,BYTE PTR [edx]
  420ee7:	dec    esi
  420ee8:	ret    
  420ee9:	jmp    0x901a:0x42878207
  420ef0:	les    ecx,FWORD PTR [ebx+0x46030382]
  420ef6:	or     ebx,0x5f
  420ef9:	add    edx,DWORD PTR [edx+0x75]
  420efc:	dec    edi
  420efd:	mov    ecx,0xc4ffe93c
  420f02:	jmp    0x420e9d
  420f04:	mov    ds:0x7ecb794d,al
  420f09:	or     ecx,DWORD PTR [ecx]
  420f0b:	repnz sbb dh,BYTE PTR [esp+esi*2]
  420f0f:	ja     0x420f0b
  420f11:	loop   0x420ef0
  420f13:	out    dx,al
  420f14:	add    eax,0xc57d7a8e
  420f19:	into   
  420f1a:	mov    ds:0xd9eae3cd,eax
  420f1f:	mov    ebx,0xd5789a6f
  420f24:	(bad)  
  420f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f26:	mov    BYTE PTR [edx+0x69fa8f03],al
  420f2c:	bound  eax,QWORD PTR [ecx]
  420f2e:	mov    ebx,0x282a5f66
  420f33:	pop    eax
  420f34:	ja     0x420ef4
  420f36:	mov    eax,ds:0x71612abc
  420f3b:	push   ebp
  420f3c:	inc    ebx
  420f3d:	dec    edx
  420f3e:	mov    eax,0xb9fd4206
  420f43:	mov    ebp,0xd469a930
  420f48:	pop    es
  420f49:	push   ebp
  420f4a:	xchg   edi,eax
  420f4b:	mov    dh,0xb1
  420f4d:	shl    DWORD PTR [ebx],0x9a
  420f50:	push   esi
  420f51:	cld    
  420f52:	mov    edx,DWORD PTR [ecx-0x35f65dcd]
  420f58:	mov    eax,ds:0xfa4acfe8
  420f5d:	jge    0x420ef3
  420f5f:	test   DWORD PTR [ebx],edi
  420f61:	xchg   esi,eax
  420f62:	push   0xf6d6ec1b
  420f67:	adc    ch,BYTE PTR [ebx]
  420f69:	mov    ebx,DWORD PTR [ecx]
  420f6b:	test   al,0xc2
  420f6d:	clc    
  420f6e:	aas    
  420f6f:	push   ds
  420f70:	repnz pop ecx
  420f72:	jl     0x420fe7
  420f74:	xchg   edi,eax
  420f75:	push   edi
  420f76:	pop    edi
  420f77:	pop    esi
  420f78:	rcl    DWORD PTR ds:0xce4f026c,cl
  420f7e:	and    eax,0x71cc958a
  420f83:	dec    ebp
  420f84:	mov    esp,edx
  420f86:	das    
  420f87:	aam    0x16
  420f89:	inc    ebx
  420f8a:	push   edx
  420f8b:	test   eax,0xf7e89b6b
  420f90:	stos   DWORD PTR es:[edi],eax
  420f91:	int3   
  420f92:	push   DWORD PTR [ecx]
  420f94:	sbb    eax,0xe7247eeb
  420f99:	enter  0xeed0,0x9
  420f9d:	fsubr  QWORD PTR ds:0x2c909a20
  420fa3:	jo     0x420fd5
  420fa5:	aam    0x70
  420fa7:	mov    bl,0xee
  420fa9:	mov    ?,WORD PTR [edx-0x1d0df1d0]
  420faf:	jns    0x420fdc
  420fb1:	mov    ah,0xfa
  420fb3:	mov    dh,0xb1
  420fb5:	sub    eax,0xf2b8f4ed
  420fba:	mov    edi,0x2eb87460
  420fbf:	mov    eax,ds:0x28e53f65
  420fc5:	push   esi
  420fc6:	push   cs
  420fc7:	jg     0x420f7f
  420fc9:	mov    cl,0x2
  420fcb:	mov    dl,0x49
  420fcd:	(bad)  
  420fcf:	repz mov edi,0x6b26c724
  420fd5:	sahf   
  420fd6:	xchg   ebx,eax
  420fd7:	dec    ebp
  420fd8:	and    ch,BYTE PTR [ecx+0x2f]
  420fdb:	jecxz  0x42105b
  420fdd:	inc    ecx
  420fde:	ds inc esi
  420fe0:	xor    bl,BYTE PTR [eax-0x115d36a7]
  420fe6:	bnd je 0x421061
  420fe9:	cwde   
  420fea:	outs   dx,BYTE PTR ds:[esi]
  420feb:	dec    ebx
  420fec:	push   es
  420fed:	(bad)  
  420fee:	sbb    DWORD PTR [esi+0xd462162],edi
  420ff4:	dec    edi
  420ff5:	cs es pop ebx
  420ff8:	fiadd  WORD PTR [ebp-0x271ed428]
  420ffe:	bound  esi,QWORD PTR [edx+0x8]
  421001:	iret   
  421002:	(bad)  
  421003:	cmp    al,BYTE PTR [edx]
  421005:	retf   
  421006:	xchg   ecx,eax
  421007:	outs   dx,BYTE PTR ds:[esi]
  421008:	pop    eax
  421009:	push   edi
  42100a:	test   edx,eax
  42100c:	ins    DWORD PTR es:[edi],dx
  42100d:	xor    eax,0xf2464c5d
  421012:	push   ss
  421013:	stos   DWORD PTR es:[edi],eax
  421014:	lahf   
  421015:	cmp    al,0x37
  421017:	inc    eax
  421018:	loop   0x420fca
  42101a:	jno    0x420fc4
  42101c:	push   DWORD PTR [esi]
  42101e:	mov    bh,0xf0
  421020:	std    
  421021:	shl    BYTE PTR [eax+esi*2+0x7f],0x15
  421026:	mov    bh,0x7a
  421028:	lahf   
  421029:	xchg   BYTE PTR [edx+edx*4+0x7a],dl
  42102d:	call   0x40d1:0xddea0b84
  421034:	das    
  421035:	pop    esi
  421036:	ds cmp ch,ah
  421039:	push   ds
  42103a:	pop    ebx
  42103b:	sbb    BYTE PTR [ebp-0x27],bh
  42103e:	loop   0x421070
  421040:	repnz das 
  421042:	stos   BYTE PTR es:[edi],al
  421043:	enter  0x5cf3,0xef
  421047:	sbb    edx,DWORD PTR cs:[eax+eax*8]
  42104b:	es inc ebx
  42104d:	pop    ds
  42104e:	mov    eax,0xce60db1f
  421053:	pop    edi
  421054:	mov    ebx,0x2ceff17b
  421059:	repz jbe 0x42109e
  42105c:	add    BYTE PTR [edi+0x6482075d],0xf7
  421063:	popa   
  421064:	out    dx,al
  421065:	fs fdivr st(2),st
  421068:	in     al,0xc6
  42106a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106b:	mov    al,ds:0xbbbbf916
  421070:	ds adc eax,edx
  421073:	in     eax,0x30
  421075:	mov    edx,0xced5da76
  42107a:	xor    esp,DWORD PTR [eax-0x80]
  42107d:	fnsave [edi+0x66]
  421080:	sbb    esp,eax
  421082:	mov    DWORD PTR [esi-0x5e],edx
  421085:	add    cl,ch
  421087:	cmc    
  421088:	js     0x421063
  42108a:	sbb    cl,BYTE PTR [edi+0xa1]
	...
  421098:	add    BYTE PTR [eax],al
  42109a:	pop    esp
  42109b:	mov    dh,BYTE PTR [edi-0x23800895]
  4210a1:	mov    edi,0x2b60ebfc
  4210a6:	ins    DWORD PTR es:[edi],dx
  4210a7:	ret    0xaa9c
  4210aa:	out    dx,eax
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    bl,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    cl,dh
  4210b3:	test   eax,0x35069038
  4210b8:	rcl    ah,1
  4210ba:	jnp    0x421080
  4210bc:	out    dx,al
  4210bd:	fs jmp 0x3f17758d
  4210c3:	mov    BYTE PTR [ebp+0x4abb8859],ch
  4210c9:	mov    ebp,0xe5212fee
  4210ce:	scas   al,BYTE PTR es:[edi]
  4210cf:	(bad)  
  4210d1:	cld    
  4210d2:	mov    bh,0xca
  4210d4:	pushf  
  4210d5:	out    0xbf,al
  4210d7:	cmp    BYTE PTR [esi-0x3b],0x78
  4210db:	cmp    eax,0xed5f6904
  4210e0:	push   0xffffffc2
  4210e2:	in     eax,dx
  4210e3:	xchg   esp,eax
  4210e4:	sahf   
  4210e5:	sub    bl,ah
  4210e7:	dec    esp
  4210e8:	jbe    0x421108
  4210ea:	std    
  4210eb:	mov    bh,0x7d
  4210ed:	test   BYTE PTR [ebp-0x4c],ah
  4210f0:	or     DWORD PTR es:[ecx+0x75a2f31c],ecx
  4210f7:	cmp    al,0xaf
  4210f9:	fcom   DWORD PTR [ecx]
  4210fb:	dec    eax
  4210fc:	pop    ecx
  4210fd:	in     eax,dx
  4210fe:	js     0x4210bf
  421100:	in     al,dx
  421101:	hlt    
  421102:	(bad)  
  421104:	pop    ss
  421105:	cli    
  421106:	sub    ebx,DWORD PTR [esi]
  421108:	mov    eax,ds:0xc06f1d6f
  42110d:	jb     0x42113e
  42110f:	pop    edi
  421110:	rcr    BYTE PTR [bx+si-0x208c],0x6f
  421116:	adc    ebp,ebx
  421118:	mov    cl,0x48
  42111a:	and    al,BYTE PTR [ecx-0x68]
  42111d:	mov    ds:0xc07124f7,al
  421122:	test   BYTE PTR [edx+0x5603509f],dl
  421128:	mov    bl,0xaf
  42112a:	sbb    eax,0x39829bd9
  42112f:	jno    0x42115d
  421131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421132:	movq   QWORD PTR [ecx],mm7
  421135:	xor    ebp,DWORD PTR [eax+0x6ad49fcf]
  42113b:	test   al,0x9c
  42113d:	fist   DWORD PTR [edi-0x68463a19]
  421143:	pusha  
  421144:	xchg   DWORD PTR [ebp-0x4f],eax
  421147:	pop    esi
  421148:	leave  
  421149:	sub    al,ah
  42114b:	ss cld 
  42114d:	jp     0x42115a
  42114f:	mov    ebp,0x4d93087
  421154:	fs ss jp 0x421157
  421158:	push   esp
  421159:	xor    al,0x57
  42115b:	push   ss
  42115c:	std    
  42115d:	xor    al,cl
  42115f:	mov    bh,0x94
  421161:	jle    0x4211af
  421163:	jnp    0x42111e
  421165:	clc    
  421166:	ins    BYTE PTR es:[edi],dx
  421167:	jmp    0x421101
  421169:	out    0x4d,al
  42116b:	aad    0xf5
  42116d:	xor    DWORD PTR [edi+0x78],ebp
  421170:	sub    eax,0x21763a0e
  421175:	cmp    esp,esi
  421177:	out    dx,al
  421178:	adc    al,0x77
  42117a:	push   cs
  42117b:	test   al,0x22
  42117d:	mov    bl,0xf
  42117f:	(bad)  
  421181:	mov    BYTE PTR ds:[eax+0x33a39a3],dl
  421188:	not    BYTE PTR [edx]
  42118a:	xor    eax,ebp
  42118c:	adc    BYTE PTR [eax],0xda
  42118f:	dec    eax
  421190:	aas    
  421191:	aas    
  421192:	scas   eax,DWORD PTR es:[edi]
  421193:	cmp    BYTE PTR [ebp+0x7586cd89],bl
  421199:	dec    edi
  42119a:	aam    0x0
  42119c:	jae    0x4211e6
  42119e:	xor    ah,BYTE PTR [edi]
  4211a0:	scas   eax,DWORD PTR es:[edi]
  4211a1:	xor    BYTE PTR [esi-0x5d5dc79e],bl
  4211a7:	xor    eax,0x9c2c5294
  4211ac:	jmp    0x8d1a9a96
  4211b1:	pop    ss
  4211b2:	inc    ecx
  4211b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211b4:	or     bl,BYTE PTR [eax+0x1aa7a139]
  4211ba:	stos   DWORD PTR es:[edi],eax
  4211bb:	aam    0x3d
  4211bd:	adc    al,0x77
  4211bf:	adc    eax,0xc45cd717
  4211c4:	xor    al,BYTE PTR [ebp+0x663091a9]
  4211ca:	mov    BYTE PTR [edi],dh
  4211cc:	mov    edi,DWORD PTR [esi-0x3e28d240]
  4211d2:	add    ah,ch
  4211d4:	imul   esi,esi,0x37
  4211d7:	rol    DWORD PTR [ebp+0x7c],cl
  4211da:	(bad)  
  4211db:	in     al,dx
  4211dc:	inc    eax
  4211dd:	repnz mov ch,0x18
  4211e0:	dec    esp
  4211e1:	(bad)
  4211e5:	xchg   BYTE PTR [bx-0x19],bh
  4211e9:	add    ch,BYTE PTR [ebp+0x49]
  4211ec:	je     0x4211b2
  4211ee:	es jge 0x4211eb
  4211f1:	mov    ebx,0x78398345
  4211f6:	add    esi,DWORD PTR [edx]
  4211f8:	push   esi
  4211f9:	and    eax,0xd1c18ab8
  4211fe:	pusha  
  4211ff:	pop    ss
  421200:	repnz xor BYTE PTR [edi+0x6b],cl
  421204:	cmp    bh,BYTE PTR es:[esi+0x1f]
  421208:	stos   BYTE PTR es:[edi],al
  421209:	cmp    ah,BYTE PTR [edx-0x212bdb61]
  42120f:	out    dx,eax
  421210:	data16 mov al,0x37
  421213:	sbb    dh,BYTE PTR [esi+ebx*1]
  421216:	mov    ebx,0x2abd1a7a
  42121b:	push   0xffffffcf
  42121d:	leave  
  42121e:	sar    BYTE PTR [esi],1
  421220:	jmp    0x421208
  421222:	les    esp,FWORD PTR [eax+0x52]
  421225:	jecxz  0x421233
  421227:	int    0x55
  421229:	push   eax
  42122a:	push   esp
  42122b:	sub    ch,dl
  42122d:	dec    ecx
  42122e:	sti    
  42122f:	mov    bh,0x97
  421231:	jbe    0x42127a
  421233:	aas    
  421234:	push   DWORD PTR [esi+eiz*2-0x480e28c4]
  42123b:	jo     0x421262
  42123d:	or     BYTE PTR [ecx+0x6d0b932b],dl
  421243:	pushf  
  421244:	mov    ds:0x1120785b,al
  421249:	sbb    DWORD PTR ds:0x92acad9d,0xe4a3e9c1
  421253:	mov    bh,BYTE PTR [edx+0x1903053c]
  421259:	int3   
  42125a:	push   0x71
  42125c:	cmp    al,0xb9
  42125e:	mov    ch,0x2f
  421260:	pop    esp
  421261:	icebp  
  421262:	std    
  421263:	sahf   
  421264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421265:	xor    BYTE PTR [ebx-0x6556561a],ah
  42126b:	adc    edi,DWORD PTR [ecx+0x42]
  42126e:	dec    esi
  42126f:	push   ds
  421270:	mov    dh,0x81
  421272:	sahf   
  421273:	cmp    al,0x68
  421275:	jmp    0x4212c6
  421277:	aad    0xe3
  421279:	dec    esp
  42127a:	cld    
  42127b:	ins    DWORD PTR es:[edi],dx
  42127c:	mov    dh,0x3a
  42127e:	lahf   
  42127f:	gs or  eax,0x46836b38
  421285:	jns    0x4212f0
  421287:	inc    ecx
  421288:	mov    edi,0x26a9f642
  42128d:	sbb    ah,al
  42128f:	push   eax
  421290:	inc    esp
  421291:	js     0x421259
  421293:	mov    dh,BYTE PTR [ebp-0x5b0b086b]
  421299:	or     BYTE PTR [esi],ch
  42129b:	add    dl,ch
  42129d:	ficom  WORD PTR [ecx-0x19]
  4212a0:	dec    edi
  4212a1:	cmp    edi,0xffffff90
  4212a4:	jae    0x42123c
  4212a6:	jmp    0xc636ef97
  4212ab:	and    BYTE PTR [eax],cl
	...
  4212b9:	add    BYTE PTR [edi-0x402578e6],ah
  4212bf:	(bad)  
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x31dbc426]
  4212ca:	jmp    0x1:0xfb00018e
  4212d1:	add    BYTE PTR [eax+0x23d7b0e3],ch
  4212d7:	scas   eax,DWORD PTR es:[edi]
  4212d8:	push   ds
  4212d9:	add    eax,0xfa609a49
  4212df:	pushf  
  4212e0:	mov    ah,0x1b
  4212e2:	jno    0x421352
  4212e4:	push   esi
  4212e5:	mov    edi,0xc8b1cab4
  4212ea:	pushf  
  4212eb:	mov    ecx,0xbf2f3244
  4212f0:	adc    eax,DWORD PTR [esi]
  4212f2:	add    ebx,DWORD PTR [eax]
  4212f4:	mov    ?,WORD PTR [esi+0x67]
  4212f7:	fisub  DWORD PTR [ebx+0xdfe1f33]
  4212fd:	jno    0x4212ad
  4212ff:	and    DWORD PTR [ebp+0x66],0xfdfbc8a5
  421306:	test   eax,0x4597db2
  42130b:	nop
  42130c:	dec    edx
  42130d:	out    dx,al
  42130e:	add    eax,DWORD PTR [edx]
  421310:	mov    bl,0x6a
  421312:	push   ecx
  421313:	mul    BYTE PTR ss:[ebp+0x6400290d]
  42131a:	sahf   
  42131b:	cmp    DWORD PTR [ecx],0x1b5f05c6
  421321:	push   cs
  421322:	jecxz  0x4212db
  421324:	jne    0x42130d
  421326:	sub    eax,DWORD PTR [ebp-0x4b109bd4]
  42132c:	push   ecx
  42132d:	outs   dx,BYTE PTR ds:[esi]
  42132e:	add    dh,0x83
  421331:	mov    ah,0x67
  421333:	mov    dl,0x2
  421335:	inc    ecx
  421336:	xor    edi,eax
  421338:	mul    DWORD PTR [edi-0x55]
  42133b:	and    al,al
  42133d:	mov    DWORD PTR [ebp+0x73],ebx
  421340:	add    edi,esi
  421342:	mov    esp,0x98a1324d
  421347:	or     eax,0x7c951710
  42134c:	rcl    DWORD PTR [edi+0x668879d9],1
  421352:	loope  0x421378
  421354:	bnd jnp 0x421392
  421357:	rcr    bh,cl
  421359:	cmp    BYTE PTR [ebx+0x2714ded7],cl
  42135f:	mov    edx,0xeab18af4
  421364:	fist   WORD PTR [edx+ebp*2]
  421367:	adc    DWORD PTR [ebx+0x31],ebp
  42136a:	call   FWORD PTR [esi+0x50]
  42136d:	sbb    ebp,ecx
  42136f:	mov    ecx,0x8f3e7b05
  421374:	push   es
  421375:	inc    edx
  421376:	mov    esi,0xd52c2621
  42137b:	int3   
  42137c:	sbb    dh,BYTE PTR [eax+ebx*1+0x3f7ebcc3]
  421383:	sahf   
  421384:	daa    
  421385:	fisubr WORD PTR [ecx+eax*2]
  421388:	xchg   edi,esi
  42138a:	(bad)
  42138e:	les    esp,FWORD PTR [edi]
  421390:	and    eax,0xbca44f9d
  421395:	xor    DWORD PTR [ecx],0x52
  421398:	or     ebx,edx
  42139a:	xchg   esp,eax
  42139b:	sar    BYTE PTR [eax],cl
  42139d:	add    DWORD PTR [edx+0x7e],esi
  4213a0:	loopne 0x42138a
  4213a2:	inc    edi
  4213a3:	test   BYTE PTR [ecx-0x180351ce],dl
  4213a9:	mov    bl,al
  4213ab:	adc    eax,0x1712022
  4213b0:	sbb    al,0x20
  4213b2:	dec    ebx
  4213b3:	jne    0x4213d8
  4213b5:	mov    ecx,DWORD PTR [ecx-0x11c40874]
  4213bb:	call   0x673eaa62
  4213c0:	mov    bl,0x3a
  4213c2:	ds pop esp
  4213c4:	ror    BYTE PTR [edx+0x65],cl
  4213c7:	ficomp DWORD PTR [eax+0x4d]
  4213ca:	popf   
  4213cb:	jno    0x421435
  4213cd:	test   eax,0x95c6deba
  4213d2:	jg     0x4213c6
  4213d4:	inc    ebp
  4213d5:	stos   DWORD PTR es:[edi],eax
  4213d6:	mov    ah,0x82
  4213d8:	test   BYTE PTR [ebx+edx*8-0x26e79b71],0xe9
  4213e0:	imul   eax,DWORD PTR [ecx],0x433978e2
  4213e6:	aad    0xe9
  4213e8:	ret    
  4213e9:	mov    edx,DWORD PTR [ebx]
  4213eb:	outs   dx,DWORD PTR ds:[esi]
  4213ec:	(bad)  [ecx+0x634ea884]
  4213f2:	pop    ss
  4213f3:	xor    DWORD PTR [edx+0x78b0e8cc],0x44
  4213fa:	sbb    cl,0x54
  4213fd:	pop    edx
  4213fe:	leave  
  4213ff:	ins    DWORD PTR es:[edi],dx
  421400:	xchg   BYTE PTR es:[esi+0x65e61719],cl
  421407:	mov    esp,0x7e60a10b
  42140c:	enter  0x34cb,0xef
  421410:	out    dx,eax
  421411:	push   edx
  421412:	xchg   DWORD PTR [ebp+0x497cc3cd],esi
  421418:	inc    ecx
  421419:	fwait
  42141a:	pop    ebp
  42141b:	cmp    eax,0xdc28df6e
  421420:	ret    
  421421:	mov    eax,0x25f7ea1b
  421426:	lock mov ds,WORD PTR [ebp-0x267275ab]
  42142d:	cmc    
  42142e:	je     0x4213b2
  421430:	div    BYTE PTR [edi]
  421432:	sub    ebp,DWORD PTR [ecx]
  421434:	pop    ebx
  421435:	loope  0x4213d5
  421437:	out    0x59,eax
  421439:	jbe    0x421435
  42143b:	sahf   
  42143c:	enter  0x820c,0x76
  421440:	aam    0xd4
  421442:	arpl   WORD PTR [eax-0x7a],bp
  421445:	sub    bl,BYTE PTR [esi+0x7b]
  421448:	sub    eax,0x4a348ad1
  42144d:	jmp    0x421484
  42144f:	mul    dl
  421451:	add    DWORD PTR [ebx+esi*4],ebx
  421454:	sbb    DWORD PTR [esi+ecx*8-0x71],esi
  421458:	cli    
  421459:	inc    esi
  42145a:	push   ss
  42145b:	cdq    
  42145c:	in     eax,0xba
  42145e:	mov    ebx,0x7622e15
  421463:	imul   edi,DWORD PTR ds:0x3995205e,0x52
  42146a:	push   esp
  42146b:	fsubr  QWORD PTR ss:[edi-0x4a]
  42146f:	sub    BYTE PTR [edx-0x41],bh
  421472:	or     ch,BYTE PTR [esi]
  421474:	cmp    BYTE PTR [esi+0x689d176a],0x10
  42147b:	sbb    DWORD PTR [edx-0x3e],edx
  42147e:	je     0x42143b
  421480:	fwait
  421481:	cmp    BYTE PTR [esp+edi*2-0x5018fa14],ah
  421488:	lea    eax,[ecx]
  42148a:	xor    BYTE PTR [esi],dh
  42148c:	adc    eax,0x61c731db
  421491:	inc    ebp
  421492:	leave  
  421493:	xchg   ebx,eax
  421494:	mov    edi,DWORD PTR ds:0xe2707536
  42149a:	mov    fs,WORD PTR [esp+edx*2]
  42149d:	retf   0x97da
  4214a0:	fstp   TBYTE PTR [ebx]
  4214a2:	(bad)  [ebp*2-0x1d412728]
  4214a9:	mov    esi,0xbcb5b1e0
  4214ae:	mov    dl,0x43
  4214b0:	fdiv   DWORD PTR [eax-0x78510487]
  4214b6:	sub    ch,ah
  4214b8:	clc    
  4214b9:	xlat   BYTE PTR ds:[ebx]
  4214ba:	or     al,0x23
  4214bc:	mov    eax,0x8436b28b
  4214c1:	adc    dl,BYTE PTR [ecx]
  4214c3:	sar    DWORD PTR [ecx+0x4d],cl
  4214c6:	cmc    
  4214c7:	xor    esp,edx
  4214c9:	outs   dx,DWORD PTR ds:[esi]
  4214ca:	push   edx
  4214cb:	or     eax,DWORD PTR ss:[eax]
	...
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	add    eax,0xe54970fe
  4214eb:	nop
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	sti    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [edi+0x18fcf507],bh
  4214f7:	push   es
  4214f8:	daa    
  4214f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214fa:	adc    esp,ebp
  4214fc:	icebp  
  4214fd:	or     bh,al
  4214ff:	cmp    DWORD PTR [esi-0xc],ebp
  421502:	jb     0x4214f9
  421504:	mov    ch,al
  421506:	repnz pop eax
  421508:	out    0x4d,al
  42150a:	leave  
  42150b:	js     0x4214f8
  42150d:	mov    esi,0x41184d86
  421512:	pop    ds
  421513:	mov    bl,0x71
  421515:	xchg   esi,eax
  421516:	jecxz  0x421580
  421518:	xlat   BYTE PTR ds:[ebx]
  421519:	daa    
  42151a:	fisub  WORD PTR [edx+0x5c]
  42151d:	aas    
  42151e:	dec    edx
  42151f:	mov    al,0x49
  421521:	or     DWORD PTR [ebx+edx*2+0x7532aa66],0xe2292017
  42152c:	mov    edx,0x7987c4bb
  421531:	push   0x8f79ecaf
  421536:	dec    esi
  421537:	pusha  
  421538:	test   BYTE PTR [eax],al
  42153a:	lods   al,BYTE PTR ds:[esi]
  42153b:	mov    ds:0x56c4e4d7,al
  421540:	jge    0x421512
  421542:	mov    ebp,0xcd0cbe60
  421547:	add    bl,bh
  421549:	fucomp st(3)
  42154b:	xchg   ecx,eax
  42154c:	(bad)  
  42154d:	ficomp WORD PTR [esi-0x27e74ec8]
  421553:	jg     0x42150a
  421555:	sbb    al,0x30
  421557:	inc    ebx
  421558:	xor    DWORD PTR [ebp+0x99e0a91],edi
  42155e:	outs   dx,BYTE PTR ds:[esi]
  42155f:	inc    ecx
  421560:	cmc    
  421561:	adc    DWORD PTR [edi],esi
  421563:	xchg   edx,eax
  421564:	sub    eax,0xa27bd5be
  421569:	ucomiss xmm1,DWORD PTR [ebx]
  42156c:	shr    DWORD PTR [edi+0x2ad884e5],0xd2
  421573:	mov    esi,0x1719a0cf
  421578:	fucomp st(6)
  42157a:	aad    0xff
  42157c:	push   ss
  42157d:	bound  eax,QWORD PTR [ecx]
  42157f:	jmp    0x6dd0:0x3f46a41c
  421586:	in     al,0xae
  421588:	aam    0xa4
  42158a:	shl    BYTE PTR [esi],0x40
  42158d:	in     eax,0xec
  42158f:	mov    ds:0x4c001359,eax
  421594:	cld    
  421595:	jl     0x4215d5
  421597:	mov    dh,0x86
  421599:	shl    BYTE PTR ds:0xe311ccc5,1
  42159f:	sub    BYTE PTR [ebp+0x23d178bc],cl
  4215a5:	mov    BYTE PTR [ebx+0x37c5ee0],ah
  4215ab:	xor    dh,dh
  4215ad:	cli    
  4215ae:	test   DWORD PTR [ebx-0x4f],ebp
  4215b1:	fsubr  st(4),st
  4215b3:	mov    WORD PTR [esi-0x7853f35b],ss
  4215b9:	xchg   ebp,eax
  4215ba:	push   cs
  4215bb:	mov    ds:0xe0816bc2,eax
  4215c0:	push   esp
  4215c1:	cmp    BYTE PTR [edx+0x507a3aae],bh
  4215c7:	add    BYTE PTR [edx+0x12fec2d6],bl
  4215cd:	retf   
  4215ce:	out    0xeb,eax
  4215d0:	xor    al,0xb1
  4215d2:	mov    eax,eax
  4215d4:	(bad)  
  4215d5:	ja     0x42164d
  4215d7:	or     al,0xcc
  4215d9:	mov    al,0x28
  4215db:	ror    BYTE PTR [edx-0x5],cl
  4215de:	retf   
  4215df:	iret   
  4215e0:	ds (bad) 
  4215e2:	fstp   QWORD PTR cs:0x7cefbe2
  4215ea:	in     al,0x6e
  4215ec:	imul   edx,DWORD PTR [esi+ebp*2],0xffffff96
  4215f0:	dec    edx
  4215f1:	mov    ah,0x2d
  4215f3:	jp     0x42162b
  4215f5:	std    
  4215f6:	mov    ebx,0x5a355067
  4215fb:	sub    BYTE PTR [edx+0x6d30818f],dl
  421601:	ss ret 0x69b1
  421605:	in     al,0x4e
  421607:	or     al,0x6f
  421609:	inc    BYTE PTR [ecx-0x3237c6e1]
  42160f:	jno    0x421607
  421611:	sub    BYTE PTR [edi+0x45726eb2],0x56
  421618:	jg     0x421696
  42161a:	jbe    0x4215c2
  42161c:	jle    0x4215e5
  42161e:	(bad)  
  42161f:	bound  eax,QWORD PTR [edi-0x5ed1aad3]
  421625:	mov    dl,0x2a
  421627:	jno    0x42167d
  421629:	ret    0x2fa4
  42162c:	or     eax,0x724e1ebf
  421631:	inc    esi
  421632:	out    0x2a,al
  421634:	imul   edi,DWORD PTR [ecx],0xffffffbe
  421637:	in     al,dx
  421638:	pop    ebx
  421639:	mov    ch,0xc2
  42163c:	icebp  
  42163d:	and    DWORD PTR [esi-0x4b340f22],esi
  421643:	mov    esp,0xf0ea2d2f
  421648:	cdq    
  421649:	in     eax,0xae
  42164b:	mov    es,WORD PTR [esi-0x1d2254ab]
  421651:	popf   
  421652:	jno    0x421613
  421654:	cld    
  421655:	sub    ecx,DWORD PTR [ebx+ecx*8]
  421658:	sbb    DWORD PTR [edi-0xe658f59],edi
  42165e:	test   eax,0x27fc285f
  421663:	adc    al,0x4e
  421665:	or     bh,al
  421667:	jle    0x421618
  421669:	test   al,0x49
  42166b:	scas   eax,DWORD PTR es:[edi]
  42166c:	loope  0x4216cb
  42166e:	add    eax,0x33e7457a
  421673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421674:	mov    ebx,0x98d1d62d
  421679:	in     al,dx
  42167a:	mov    BYTE PTR [edx+0x7597a274],ch
  421680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421681:	les    ecx,FWORD PTR [ebx-0x6a]
  421684:	xor    cl,BYTE PTR [ebx+edx*2+0x5c9f2366]
  42168b:	shl    BYTE PTR [edx+0x36981078],0x4c
  421692:	test   al,0x77
  421694:	inc    ecx
  421695:	push   ebp
  421696:	dec    ebx
  421697:	xchg   BYTE PTR [eax],bh
  421699:	nop    DWORD PTR [ebx-0x1b77ddd8]
  4216a0:	stos   DWORD PTR es:[edi],eax
  4216a1:	test   BYTE PTR [esi],bh
  4216a3:	test   al,0x31
  4216a5:	stos   DWORD PTR es:[edi],eax
  4216a6:	stos   BYTE PTR es:[edi],al
  4216a7:	icebp  
  4216a8:	cld    
  4216a9:	aas    
  4216aa:	and    ebp,0xffffffff
  4216ad:	repz inc edi
  4216af:	(bad)  
  4216b0:	fist   DWORD PTR [ecx-0x5b]
  4216b3:	push   0x5b
  4216b5:	xor    dl,dl
  4216b7:	mov    eax,ds:0x445e70b4
  4216bc:	ja     0x42169c
  4216be:	test   al,0x15
  4216c0:	mov    eax,0x903217ae
  4216c5:	xchg   ecx,eax
  4216c6:	inc    edx
  4216c7:	in     al,0x56
  4216c9:	pop    ebp
  4216ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216cb:	(bad)  
  4216cc:	mov    DWORD PTR [ebx-0xe16e2a0],ebx
  4216d2:	lods   al,BYTE PTR ds:[esi]
  4216d3:	pop    eax
  4216d4:	mov    esi,0xa7e508b6
  4216d9:	fst    st(3)
  4216db:	test   eax,0x9230932c
  4216e0:	xchg   edi,eax
  4216e1:	sbb    esi,esp
  4216e3:	scas   eax,DWORD PTR es:[edi]
  4216e4:	jne    0x4216c2
  4216e6:	jmp    0x42170e
  4216e8:	daa    
  4216e9:	xchg   DWORD PTR [edi+0x30c4],esp
	...
  4216f7:	add    BYTE PTR [eax],al
  4216f9:	add    BYTE PTR [eax],ah
  4216fb:	push   ss
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	not    dl
  421707:	ret    
  421708:	mov    esp,0x192e0d6
  42170d:	add    bl,bh
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [edi+0x72e666ea],al
  421717:	outs   dx,DWORD PTR ds:[esi]
  421718:	jg     0x421759
  42171a:	icebp  
  42171b:	lods   al,BYTE PTR ds:[esi]
  42171c:	mov    esp,DWORD PTR [esi]
  42171e:	(bad)  
  42171f:	cwde   
  421720:	adc    BYTE PTR [eax+0x5ed1c420],al
  421726:	aas    
  421727:	sub    DWORD PTR [edi-0xb],0xffffffce
  42172b:	sti    
  42172c:	arpl   WORD PTR [eax],dx
  42172e:	pushf  
  42172f:	adc    BYTE PTR [esp],ah
  421732:	(bad)  
  421733:	push   eax
  421734:	test   BYTE PTR [esi+ebx*2+0x35c3f057],ah
  42173b:	push   ebx
  42173c:	or     edx,0xff984a29
  421742:	lds    ebx,FWORD PTR [edi+0x69716db8]
  421748:	data16 and BYTE PTR [edi-0x57],dl
  42174c:	sbb    DWORD PTR [ebx-0x836fbe3],esi
  421752:	mov    bh,0xcd
  421754:	test   BYTE PTR [ecx+0x1c],dh
  421757:	lods   al,BYTE PTR ds:[esi]
  421758:	adc    ch,BYTE PTR fs:[esi+esi*1-0x114a00cd]
  421760:	mov    bl,0x14
  421762:	inc    ebp
  421763:	je     0x421711
  421765:	xchg   edi,eax
  421766:	mov    ?,WORD PTR [ebx+0x5d]
  421769:	stc    
  42176a:	pop    ecx
  42176b:	(bad)  
  42176c:	cli    
  42176d:	mov    eax,ds:0x96d2a611
  421772:	jmp    0x6e81:0x407d8a33
  421779:	dec    ebp
  42177a:	(bad)  [eax+0x5d76adf8]
  421780:	inc    edx
  421781:	pop    ecx
  421782:	inc    edi
  421783:	xchg   ecx,eax
  421784:	sti    
  421785:	push   eax
  421786:	mov    ecx,0xb105072b
  42178b:	sub    al,0x65
  42178d:	gs or  eax,0xde251bee
  421793:	jae    0x42175c
  421795:	jb     0x421735
  421797:	dec    edx
  421798:	in     eax,dx
  421799:	ror    DWORD PTR [esi-0x3c],cl
  42179c:	dec    edx
  42179d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42179e:	daa    
  42179f:	jecxz  0x42179d
  4217a1:	and    cl,0xdb
  4217a4:	inc    edi
  4217a5:	pop    edx
  4217a6:	iret   
  4217a7:	test   al,0x3b
  4217a9:	aaa    
  4217aa:	lock leave 
  4217ac:	pop    edx
  4217ad:	sub    ch,dl
  4217af:	pop    esi
  4217b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217b1:	jo     0x421742
  4217b3:	(bad)  
  4217b4:	in     al,0x9f
  4217b6:	sti    
  4217b7:	xor    bh,BYTE PTR [edi+ebp*2-0x1]
  4217bb:	mov    ds:0xefe1a75a,al
  4217c0:	sub    BYTE PTR [eax-0x31f99503],ch
  4217c6:	or     ebx,DWORD PTR [edi-0x15]
  4217c9:	js     0x42177b
  4217cb:	inc    esp
  4217cc:	fwait
  4217cd:	test   eax,0x4aba0eec
  4217d2:	or     ebp,DWORD PTR [edx+edx*4+0x8]
  4217d6:	test   ecx,0x66cd3b9b
  4217dc:	sbb    ebx,DWORD PTR [ecx+0x6c]
  4217df:	xor    al,0x27
  4217e1:	ret    
  4217e2:	xchg   edi,eax
  4217e3:	dec    ebp
  4217e4:	mov    esi,ebx
  4217e6:	sbb    cl,BYTE PTR [ebp-0x4f]
  4217e9:	sti    
  4217ea:	aas    
  4217eb:	ret    0xde5c
  4217ee:	inc    edi
  4217ef:	push   ecx
  4217f0:	sbb    DWORD PTR [edi-0x7223e875],ebp
  4217f6:	dec    edx
  4217f7:	mov    eax,ds:0xe0bc723d
  4217fc:	(bad)  
  4217fd:	push   ebp
  4217fe:	imul   esi,DWORD PTR [ebx],0xffffffab
  421801:	pop    ds
  421802:	cmp    al,0xa2
  421804:	mov    edx,DWORD PTR [eax-0x7da28508]
  42180a:	mov    ch,bl
  42180c:	xlat   BYTE PTR ds:[ebx]
  42180d:	push   ecx
  42180e:	add    DWORD PTR [ebx+0x1b],0x6ee8c789
  421815:	mov    ch,0xe6
  421817:	mov    esi,edx
  421819:	arpl   WORD PTR [ebp-0x2c],bp
  42181c:	cli    
  42181d:	repnz xchg esi,eax
  42181f:	jg     0x421853
  421821:	cmp    DWORD PTR [ebx],edx
  421823:	pop    edx
  421824:	shl    ecx,1
  421826:	fcomp  QWORD PTR ds:0xb4b07e71
  42182c:	movnti DWORD PTR [eax],edi
  42182f:	sbb    ecx,edi
  421831:	mov    ds:0x6ec1b82,eax
  421836:	outs   dx,DWORD PTR ds:[esi]
  421837:	and    al,0xf9
  421839:	jge    0x421882
  42183b:	rol    edx,1
  42183d:	jbe    0x42189a
  42183f:	les    ebp,FWORD PTR [ebx+0x65]
  421842:	mov    esi,0x9e973b80
  421847:	test   al,0x73
  421849:	or     BYTE PTR [edi-0x1396669b],dh
  42184f:	mov    al,0xe9
  421851:	popa   
  421852:	xor    bl,bl
  421854:	jmp    0x204d6348
  421859:	mov    esp,0xf0f16427
  42185e:	(bad)  
  421861:	mov    bh,0xfb
  421863:	adc    bh,dl
  421865:	stos   BYTE PTR es:[edi],al
  421866:	adc    al,0xd0
  421868:	call   0xdf50:0xcc213d85
  42186f:	mov    ds:0x5586380f,al
  421874:	dec    ebx
  421875:	dec    ecx
  421876:	outs   dx,BYTE PTR ds:[esi]
  421877:	ret    
  421878:	call   0xae4bef82
  42187d:	imul   ecx,edi,0xfffffff1
  421880:	jge    0x4218f9
  421882:	bound  ebx,QWORD PTR [eax-0x1e29d101]
  421888:	inc    eax
  421889:	inc    ebx
  42188a:	dec    esi
  42188b:	clc    
  42188c:	test   BYTE PTR [ebx-0x50],0xf2
  421890:	mov    WORD PTR [esi],ds
  421892:	xor    BYTE PTR [ebx-0x515b9c2],bh
  421898:	or     al,0x6c
  42189a:	bound  esi,QWORD PTR [ebp+esi*1-0x5ccb88fc]
  4218a1:	pop    eax
  4218a2:	test   esi,ecx
  4218a4:	mov    bh,0x98
  4218a6:	inc    ebp
  4218a7:	enter  0xc85e,0x80
  4218ab:	in     eax,0x43
  4218ad:	adc    bh,BYTE PTR [edx+0x250492ba]
  4218b3:	inc    edi
  4218b4:	xor    dh,BYTE PTR [ecx-0x1d]
  4218b7:	hlt    
  4218b8:	push   0xffffffe7
  4218ba:	xlat   BYTE PTR ds:[ebx]
  4218bb:	ja     0x4218ae
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	sub    eax,ecx
  4218c0:	loop   0x421857
  4218c2:	mov    cl,0x6
  4218c4:	xchg   ebx,eax
  4218c5:	mov    cl,0xcb
  4218c7:	loop   0x421868
  4218c9:	sti    
  4218ca:	pop    edx
  4218cb:	in     al,dx
  4218cc:	jl     0x4218c9
  4218ce:	mov    eax,0x9a2ea67c
  4218d3:	sub    bl,bl
  4218d5:	push   eax
  4218d6:	push   edi
  4218d7:	mov    esp,?
  4218d9:	imul   edi,DWORD PTR [esi+edx*8+0x8],0xffffff93
  4218de:	cld    
  4218df:	add    DWORD PTR [edi-0x1f655d6f],eax
  4218e5:	push   ss
  4218e6:	inc    ebx
  4218e7:	cmp    al,0xc9
  4218e9:	mov    bl,0xb
  4218eb:	cs cli 
  4218ed:	(bad)  
  4218ee:	fisttp WORD PTR [edx-0x57]
  4218f1:	pop    edx
  4218f2:	(bad)  [edx-0x7f]
  4218f5:	or     bl,BYTE PTR [ebx+0x71]
  4218f8:	xlat   BYTE PTR ds:[ebx]
  4218f9:	or     esp,eax
  4218fb:	mov    BYTE PTR [ecx-0x459f3690],ah
  421901:	mov    ch,0xf4
  421903:	inc    eax
  421904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421905:	inc    edx
  421906:	sbb    eax,0xf06e3dd6
  42190b:	push   cs
  42190c:	iret   
	...
  421919:	add    BYTE PTR [eax-0x4456c5cd],dh
  42191f:	test   eax,0x428f3bb3
  421924:	mov    esp,0xb416c48a
  421929:	out    0xdb,al
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	sti    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    bl,dl
  421933:	pop    ss
  421934:	out    dx,al
  421935:	jb     0x4218ce
  421937:	aas    
  421938:	fdiv   DWORD PTR [ecx-0x1c]
  42193b:	sbb    eax,0x17871016
  421940:	sub    BYTE PTR [edi],dh
  421942:	sbb    BYTE PTR [ebx+0x21],dl
  421945:	out    0xac,eax
  421947:	xchg   edi,eax
  421948:	cmp    DWORD PTR [ebx+0x792f45c6],edi
  42194e:	xor    eax,0x265750d5
  421953:	inc    eax
  421954:	xchg   esp,eax
  421955:	loopne 0x4219b4
  421957:	inc    esi
  421958:	int3   
  421959:	mov    bh,BYTE PTR [eax-0x2a]
  42195c:	pop    edi
  42195d:	ja     0x4218ea
  42195f:	ror    DWORD PTR [ecx+0xc],1
  421962:	adc    al,0x79
  421964:	mov    al,0xbe
  421966:	inc    esi
  421967:	pop    eax
  421968:	cmp    edx,DWORD PTR [ebp+0x7a0c19e9]
  42196e:	xchg   ebp,eax
  42196f:	push   0x6
  421971:	pop    ds
  421972:	sbb    al,ch
  421974:	in     al,0xab
  421976:	cmp    BYTE PTR [ebp-0x21],bh
  421979:	mov    ds:0x6999d6ff,al
  42197e:	stos   BYTE PTR es:[edi],al
  42197f:	jg     0x421911
  421981:	pop    esp
  421982:	sbb    WORD PTR [edi+0x60baa136],si
  421989:	add    ah,bh
  42198b:	mov    edx,0x80070bbd
  421990:	rcl    ah,cl
  421992:	shl    DWORD PTR [eax+esi*1],cl
  421995:	and    BYTE PTR [esi-0x12],ch
  421998:	ret    0x74f
  42199b:	mov    esi,0xba7e258
  4219a0:	fldenv [esi]
  4219a2:	mul    DWORD PTR ds:0xd89ff1a3
  4219a8:	and    DWORD PTR [ebp+0x47b0bd80],ebp
  4219ae:	xchg   ebx,eax
  4219af:	cs jecxz 0x421a28
  4219b2:	push   ebp
  4219b3:	mov    cl,0x1
  4219b5:	pop    ecx
  4219b6:	dec    esi
  4219b7:	xor    BYTE PTR [edx+0x20b17bb7],ch
  4219bd:	mov    cl,0xeb
  4219bf:	jno    0x421994
  4219c1:	or     eax,0x95d534fc
  4219c6:	mov    cl,0xd
  4219c8:	pop    ecx
  4219c9:	imul   eax,ebx,0xb7a45626
  4219cf:	(bad)  
  4219d0:	sbb    al,0x43
  4219d2:	xchg   edx,eax
  4219d3:	mov    BYTE PTR [eax+0x72],ah
  4219d6:	out    0x47,al
  4219d8:	cmp    al,0x89
  4219da:	call   0x214f:0xb65b9532
  4219e1:	out    dx,eax
  4219e2:	addr16 push 0x38
  4219e5:	dec    esi
  4219e6:	repnz pop esi
  4219e8:	jae    0x421986
  4219ea:	lods   eax,DWORD PTR ds:[esi]
  4219eb:	clc    
  4219ec:	mov    edi,0xb828f220
  4219f1:	cmp    al,0x5f
  4219f3:	jmp    0x42199d
  4219f5:	das    
  4219f6:	lahf   
  4219f7:	adc    dl,BYTE PTR [ecx+0x4b]
  4219fa:	into   
  4219fb:	outs   dx,DWORD PTR ds:[esi]
  4219fc:	test   eax,0xb4eb0281
  421a01:	dec    ebx
  421a02:	add    DWORD PTR [eax+0x49],esp
  421a05:	stos   BYTE PTR es:[edi],al
  421a06:	mov    ecx,edi
  421a08:	aas    
  421a09:	inc    esi
  421a0a:	jne    0x421a77
  421a0c:	(bad)  
  421a0d:	out    0x1f,eax
  421a0f:	sbb    esi,ebx
  421a11:	in     eax,dx
  421a12:	into   
  421a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a14:	and    DWORD PTR [edx],esi
  421a16:	arpl   WORD PTR [esi-0x26],di
  421a19:	add    DWORD PTR [ebp+0x10],edx
  421a1c:	dec    edx
  421a1d:	dec    ebx
  421a1e:	aam    0xc8
  421a20:	cmp    dl,BYTE PTR [edx-0x2c183b4c]
  421a26:	lds    eax,FWORD PTR [edx-0x1c]
  421a29:	add    edi,DWORD PTR [edx+0x28bbaa3f]
  421a2f:	pop    edi
  421a30:	arpl   bp,di
  421a32:	hlt    
  421a33:	ret    0xcf98
  421a36:	push   ss
  421a37:	sub    eax,0x5f5e6759
  421a3c:	inc    ebx
  421a3d:	aam    0xba
  421a3f:	or     al,0x7d
  421a41:	mov    ebp,0x11cdc84e
  421a46:	test   eax,0x39bcafc
  421a4b:	icebp  
  421a4c:	dec    edx
  421a4d:	push   eax
  421a4e:	cwde   
  421a4f:	aad    0x80
  421a51:	pop    ss
  421a52:	dec    ebp
  421a53:	push   ebp
  421a54:	data16 int3 
  421a56:	enter  0x1b97,0x43
  421a5a:	or     DWORD PTR [edi],ebp
  421a5c:	mov    edx,0x364aa5e5
  421a61:	or     ah,bl
  421a63:	pop    ds
  421a64:	repz imul ebx,DWORD PTR cs:[esi],0xa6ee1614
  421a6c:	out    dx,eax
  421a6d:	push   ss
  421a6e:	dec    ebx
  421a6f:	and    BYTE PTR [eax+0x3451947f],bh
  421a75:	call   0xaf0210b1
  421a7a:	aam    0x6b
  421a7c:	push   edi
  421a7d:	jmp    0x421af0
  421a7f:	ins    DWORD PTR es:[edi],dx
  421a80:	clc    
  421a81:	and    eax,0xef76738e
  421a86:	push   esp
  421a87:	shl    DWORD PTR [esi-0x39],0xfc
  421a8b:	(bad)  
  421a8c:	cmp    DWORD PTR [ebx],ebp
  421a8e:	xor    ebp,DWORD PTR [ebx]
  421a90:	adc    ebp,DWORD PTR [eax+0x55]
  421a93:	imul   esp,eax,0xffffff8d
  421a96:	js     0x421afd
  421a98:	xor    eax,DWORD PTR [edi-0x1052617e]
  421a9e:	test   al,0x5
  421aa0:	repz imul edx,edx,0x80c57837
  421aa7:	sub    ah,al
  421aa9:	push   es
  421aaa:	xor    al,0xd3
  421aac:	cmp    ebx,DWORD PTR fs:[ecx-0x3b]
  421ab0:	shl    dh,0x79
  421ab3:	js     0x421ad8
  421ab5:	pop    ds
  421ab6:	js     0x421ac2
  421ab8:	add    esp,DWORD PTR [ebx+0x7c]
  421abb:	clc    
  421abc:	pop    ebx
  421abd:	outs   dx,DWORD PTR ds:[esi]
  421abe:	adc    edi,edi
  421ac0:	jecxz  0x421aff
  421ac2:	xor    DWORD PTR [ebx-0x1f],eax
  421ac5:	xor    al,0x17
  421ac7:	stc    
  421ac8:	fmul   QWORD PTR [edi-0x80]
  421acb:	fptan  
  421acd:	jno    0x421a77
  421acf:	push   esp
  421ad0:	ret    0x979
  421ad3:	inc    ecx
  421ad4:	push   esp
  421ad5:	cli    
  421ad6:	xor    eax,0xc888ca9c
  421adb:	idiv   DWORD PTR [ecx]
  421add:	test   al,0x22
  421adf:	fsub   DWORD PTR [esi-0x31]
  421ae2:	sahf   
  421ae3:	in     eax,dx
  421ae4:	and    eax,0x2bb09ff3
  421ae9:	xor    DWORD PTR [eax],edx
  421aeb:	rcl    bl,0xd8
  421aee:	js     0x421b5d
  421af0:	inc    edx
  421af1:	jnp    0x421b3f
  421af3:	ret    0xfff8
  421af6:	aad    0x83
  421af8:	jl     0x421a8d
  421afa:	imul   cl
  421afc:	lsl    ebp,WORD PTR [eax-0x2b]
  421b00:	lods   eax,DWORD PTR ds:[esi]
  421b01:	inc    ecx
  421b02:	sahf   
  421b03:	inc    edx
  421b04:	gs ss leave 
  421b07:	daa    
  421b08:	jbe    0x421b4f
  421b0a:	dec    eax
  421b0b:	fcmovnu st,st(2)
  421b0d:	stos   DWORD PTR es:[edi],eax
  421b0e:	lods   al,BYTE PTR ds:[esi]
  421b0f:	test   al,0x5c
  421b11:	and    DWORD PTR [edx-0x20],ebx
  421b14:	fisubr WORD PTR [edi+0x14]
  421b17:	mov    edi,0xf005d65d
  421b1c:	mov    dl,0xfe
  421b1e:	cmp    al,0xe2
  421b20:	mov    cl,0xde
  421b22:	pop    edx
  421b23:	adc    BYTE PTR [ecx+0x469554cd],0x1
  421b2a:	loopne 0x421afc
  421b2c:	mov    al,BYTE PTR [eax]
	...
  421b3a:	test   eax,0xff94c95e
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x6c86f8f7
  421b48:	into   
  421b49:	lock (bad) 
  421b4b:	xchg   esi,eax
  421b4c:	add    DWORD PTR [eax],eax
  421b4e:	sti    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [ebp-0x18],cl
  421b54:	data16 fdivr QWORD PTR [edi+0x6338793c]
  421b5b:	outs   dx,BYTE PTR ds:[esi]
  421b5c:	push   es
  421b5d:	and    DWORD PTR [ebx-0x20],ebx
  421b60:	sub    al,0x8e
  421b62:	xor    BYTE PTR [eax],ch
  421b64:	call   0x31fd8f22
  421b69:	inc    ebp
  421b6a:	add    ch,BYTE PTR [ebx]
  421b6c:	jge    0x421af7
  421b6e:	sahf   
  421b6f:	push   esp
  421b70:	out    dx,al
  421b71:	jo     0x421afc
  421b73:	out    0x64,eax
  421b75:	mov    al,0x35
  421b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b78:	jecxz  0x421b94
  421b7a:	or     edi,ebp
  421b7c:	xor    edi,DWORD PTR [ecx]
  421b7e:	pop    es
  421b7f:	add    ah,BYTE PTR [ecx]
  421b81:	jecxz  0x421bdd
  421b83:	cmp    ebp,esi
  421b85:	(bad)  
  421b86:	mov    eax,0x89e28dc1
  421b8b:	add    dl,BYTE PTR [edi]
  421b8d:	and    DWORD PTR [edx-0x74417f5c],esp
  421b93:	(bad)  [edx+0x48]
  421b96:	js     0x421bd2
  421b98:	inc    BYTE PTR [ecx+0x56b7dab5]
  421b9e:	lds    eax,FWORD PTR [ecx+0x17]
  421ba1:	iret   
  421ba2:	imul   DWORD PTR [eax-0x12884257]
  421ba8:	pop    ss
  421ba9:	nop
  421baa:	sub    DWORD PTR [ebp-0x13],ebp
  421bad:	lock dec edi
  421baf:	push   es
  421bb0:	imul   BYTE PTR [eax+0x6d]
  421bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bb4:	daa    
  421bb5:	shr    DWORD PTR [ebx-0x147bdddd],1
  421bbb:	les    edx,FWORD PTR fs:[esi+0x3c]
  421bbf:	imul   esi,eax,0xfacbe4f3
  421bc5:	cmc    
  421bc6:	push   0x17
  421bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bc9:	xor    cl,ch
  421bcb:	mov    esi,0x957b5487
  421bd0:	mov    dh,0x15
  421bd2:	scas   eax,DWORD PTR es:[edi]
  421bd3:	scas   al,BYTE PTR es:[edi]
  421bd4:	das    
  421bd5:	mov    bl,0xbb
  421bd7:	iret   
  421bd8:	mov    dl,0x52
  421bda:	or     BYTE PTR [ecx+0xc7b4b9d],0xe1
  421be1:	pop    edi
  421be2:	into   
  421be3:	jns    0x421b93
  421be5:	and    al,0x2
  421be7:	popf   
  421be8:	mov    edx,0x754d5429
  421bed:	imul   ebp,DWORD PTR [edi+ecx*2-0x9],0x6ad30b6
  421bf5:	gs ja  0x421bb5
  421bf8:	xlat   BYTE PTR ds:[ebx]
  421bf9:	mov    ah,0x9a
  421bfb:	shl    DWORD PTR [edx+ebx*8-0x3c85a828],cl
  421c02:	adc    DWORD PTR [ebx-0x51],0xffffffaa
  421c06:	in     al,0xc7
  421c08:	lock fs out 0x18,al
  421c0c:	or     ebx,DWORD PTR [ebp-0x4d56812b]
  421c12:	repnz bswap esp
  421c15:	jbe    0x421c20
  421c17:	lods   al,BYTE PTR ds:[esi]
  421c18:	fwait
  421c19:	pextrw ebp,(bad),0xc5
  421c1b:	ins    BYTE PTR es:[edi],dx
  421c1c:	out    0xd9,eax
  421c1e:	and    edx,DWORD PTR [esi+0x784884f9]
  421c24:	(bad)  
  421c26:	or     cl,BYTE PTR [edi+0x7db1f4b1]
  421c2c:	inc    ebx
  421c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c2e:	dec    ecx
  421c2f:	inc    ebp
  421c30:	mov    edi,DWORD PTR [eax+0x6e]
  421c33:	xchg   ebx,eax
  421c34:	ja     0x421cac
  421c36:	pop    ecx
  421c37:	jecxz  0x421c5b
  421c39:	inc    ecx
  421c3a:	xchg   ebx,eax
  421c3b:	xchg   edi,eax
  421c3c:	pop    ecx
  421c3d:	mov    WORD PTR ds:0x5520b345,ds
  421c43:	(bad)  
  421c44:	fwait
  421c45:	mov    esi,0x93b9575f
  421c4a:	ins    BYTE PTR es:[edi],dx
  421c4b:	mov    ch,bl
  421c4d:	iret   
  421c4e:	sbb    edi,DWORD PTR [esi]
  421c50:	adc    edi,DWORD PTR [ecx+0x1f788230]
  421c56:	mov    dh,0x82
  421c58:	fcmove st,st(3)
  421c5a:	stos   BYTE PTR es:[edi],al
  421c5b:	(bad)  
  421c5d:	sahf   
  421c5e:	or     eax,0xe553841e
  421c63:	pusha  
  421c64:	jnp    0x421cae
  421c66:	or     eax,0x46dd4c0a
  421c6b:	push   esi
  421c6c:	aam    0xd6
  421c6e:	sbb    ecx,DWORD PTR ds:0xa0ef2a66
  421c74:	and    al,0x27
  421c76:	push   edx
  421c77:	inc    ebx
  421c78:	or     dl,BYTE PTR [esp+ecx*4]
  421c7b:	pop    esp
  421c7c:	or     BYTE PTR [ebp+edi*2-0x37],cl
  421c80:	test   edi,esp
  421c82:	jns    0x421c12
  421c84:	popa   
  421c85:	imul   ebp,DWORD PTR [edi+ebx*1+0xf],0xf31d51b3
  421c8d:	jp     0x421cf8
  421c8f:	xchg   esi,eax
  421c90:	jmp    0x421c8e
  421c92:	outs   dx,DWORD PTR ds:[esi]
  421c93:	in     al,0x3d
  421c95:	leave  
  421c96:	cwde   
  421c97:	gs popf 
  421c99:	int    0x7e
  421c9b:	out    0x24,al
  421c9d:	and    al,BYTE PTR [ebx-0x6ff4e6d2]
  421ca3:	cmp    eax,0x5e7e5c15
  421ca8:	or     al,0xdb
  421caa:	jb     0x421c32
  421cac:	inc    esi
  421cad:	push   es
  421cae:	inc    edx
  421caf:	int3   
  421cb0:	pushf  
  421cb1:	jmp    0x1de6fe90
  421cb6:	add    eax,ecx
  421cb8:	rcl    DWORD PTR [edi+0x792923ba],1
  421cbe:	leave  
  421cbf:	(bad)  
  421cc0:	or     al,0x5f
  421cc2:	fwait
  421cc3:	add    BYTE PTR [edx+0x1a5338ea],0x1f
  421cca:	int    0xfa
  421ccc:	cmp    BYTE PTR [edx-0x5f9685a2],0x9f
  421cd3:	fbld   TBYTE PTR [edi-0x60]
  421cd6:	sar    DWORD PTR ds:0x3ca76968,cl
  421cdc:	jne    0x421c6e
  421cde:	mov    bh,0xb6
  421ce0:	xchg   esi,eax
  421ce1:	outs   dx,DWORD PTR ds:[esi]
  421ce2:	sub    ecx,DWORD PTR [esp+esi*8]
  421ce5:	jp     0x421d2e
  421ce7:	inc    esi
  421ce8:	ins    DWORD PTR es:[edi],dx
  421ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cea:	xchg   dx,ax
  421cec:	test   BYTE PTR [eax+0x33474c90],ch
  421cf2:	mov    gs,eax
  421cf4:	pop    esp
  421cf5:	jbe    0x421d0c
  421cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cf8:	cs cmp dl,dl
  421cfb:	and    al,0xea
  421cfd:	int3   
  421cfe:	push   es
  421cff:	xchg   edi,eax
  421d00:	sbb    DWORD PTR [esi-0x604dee72],esp
  421d06:	xchg   ebp,eax
  421d07:	daa    
  421d08:	(bad)
  421d0b:	inc    ebx
  421d0c:	pop    es
  421d0d:	sbb    al,0x6c
  421d0f:	je     0x421cb2
  421d11:	or     BYTE PTR [ecx+0x200bf61c],al
  421d17:	push   ds
  421d18:	fild   QWORD PTR [eax-0x55]
  421d1b:	mov    ah,0xc9
  421d1d:	mov    ch,0xe
  421d1f:	gs scas eax,DWORD PTR es:[edi]
  421d21:	loop   0x421cb4
  421d23:	push   0x2b
  421d25:	pushaw 
  421d27:	push   es
  421d28:	mov    edx,eax
  421d2a:	push   eax
  421d2b:	(bad)  
  421d2c:	mov    ebp,0x92b49d58
  421d31:	icebp  
  421d32:	int3   
  421d33:	mov    gs,WORD PTR ds:0x43ab45a5
  421d39:	adc    al,0x8f
  421d3b:	fld    QWORD PTR [edx+ebx*8-0x16]
  421d3f:	and    BYTE PTR [ebx+ecx*1-0x6bff6a67],bl
  421d46:	cli    
  421d47:	dec    esp
  421d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d49:	fs jl  0x421d30
  421d4c:	test   DWORD PTR [eax],eax
	...
  421d5a:	mov    ebx,0x7d7539cf
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	mov    edx,0xd101a092
  421d6b:	cwde   
  421d6c:	add    DWORD PTR [eax],eax
  421d6e:	sti    
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    BYTE PTR [eax+0x5d],ah
  421d74:	mov    edx,0x482ec9dd
  421d79:	sbb    DWORD PTR [eax+0x6],edx
  421d7c:	dec    eax
  421d7d:	pop    ebx
  421d7e:	sbb    ebp,DWORD PTR [ebx-0x11d86a2e]
  421d84:	xchg   ebx,eax
  421d85:	jns    0x421db8
  421d87:	mov    esi,0xebbe8297
  421d8c:	mov    al,dl
  421d8e:	fistp  QWORD PTR [esi+0x1b]
  421d91:	xor    al,0xaa
  421d93:	rol    DWORD PTR [ebp-0x4f6186f],1
  421d99:	pop    ebp
  421d9a:	xchg   esp,eax
  421d9b:	mov    edi,0x7a051350
  421da0:	or     al,0x46
  421da2:	or     DWORD PTR [ecx+0x3c],esp
  421da5:	xor    al,0x51
  421da7:	outs   dx,DWORD PTR ds:[esi]
  421da8:	cli    
  421da9:	or     eax,DWORD PTR [esi+0x45982e22]
  421daf:	or     eax,0xd5ae4cce
  421db4:	mov    ?,WORD PTR [eax+0x3b359c1]
  421dba:	pop    ebp
  421dbb:	mov    bh,0xb7
  421dbd:	stos   BYTE PTR es:[edi],al
  421dbe:	into   
  421dbf:	ret    0x8a57
  421dc2:	adc    ebx,eax
  421dc4:	scas   eax,DWORD PTR es:[edi]
  421dc5:	test   BYTE PTR [ecx+0x4d],ch
  421dc8:	arpl   WORD PTR [edi-0x4c],si
  421dcb:	or     ebx,esp
  421dcd:	dec    ebp
  421dce:	inc    esi
  421dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dd0:	(bad)  
  421dd1:	iret   
  421dd2:	push   0x77
  421dd4:	scas   eax,DWORD PTR es:[edi]
  421dd5:	int    0x5c
  421dd7:	xchg   BYTE PTR [edx],ch
  421dd9:	sbb    eax,0x8951477a
  421dde:	push   eax
  421ddf:	mov    ch,0xb4
  421de1:	sbb    BYTE PTR [esp+ebp*8],0x9a
  421de5:	and    al,0xe
  421de7:	jle    0x421dfa
  421de9:	test   eax,0x173cd4a6
  421dee:	dec    ebx
  421def:	jp     0x421e2e
  421df1:	jl     0x421e4f
  421df3:	mov    ds:0xeab53f5c,eax
  421df8:	mov    eax,ds:0xc799c629
  421dfd:	mov    ah,0x8b
  421dff:	stos   DWORD PTR es:[edi],eax
  421e00:	or     dl,bl
  421e02:	jmp    0x421e4f
  421e04:	fimul  DWORD PTR [edi-0x60]
  421e07:	pop    ebp
  421e08:	cmp    al,BYTE PTR [ebx-0x6e]
  421e0b:	gs push 0x92faf638
  421e11:	bound  esp,QWORD PTR [ebp+0x12]
  421e14:	ins    DWORD PTR es:[edi],dx
  421e15:	jle    0x421dfc
  421e17:	mov    al,ds:0x58cde18c
  421e1c:	dec    ebp
  421e1d:	mov    eax,0xa1296c99
  421e22:	sti    
  421e23:	sub    al,0x5b
  421e25:	push   ebp
  421e26:	lods   al,BYTE PTR ds:[esi]
  421e27:	bound  eax,QWORD PTR [ebp+eax*1+0xc84e83d]
  421e2e:	and    al,0x0
  421e30:	in     al,0x9
  421e32:	int3   
  421e33:	ja     0x421e8f
  421e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e36:	mov    ebx,0x18e10e3f
  421e3b:	lods   ax,WORD PTR ds:[esi]
  421e3d:	popa   
  421e3e:	or     ebp,DWORD PTR [ecx+0x7d]
  421e41:	sti    
  421e42:	add    bl,BYTE PTR [ecx+esi*1]
  421e45:	cmc    
  421e46:	mov    ch,ch
  421e48:	and    al,0x30
  421e4a:	pop    esp
  421e4b:	xchg   DWORD PTR [ebx+0x45206c86],ecx
  421e51:	sub    eax,0x5f4a6417
  421e56:	repz inc edi
  421e58:	mov    eax,0x28814ee3
  421e5d:	call   0xa0ad4958
  421e62:	ret    
  421e63:	push   es
  421e64:	int3   
  421e65:	scas   eax,DWORD PTR es:[edi]
  421e66:	add    al,0x3a
  421e68:	mov    esi,0x80d2834a
  421e6d:	xchg   ebp,eax
  421e6e:	data16 xchg BYTE PTR [edx],dh
  421e71:	jbe    0x421eae
  421e73:	mov    esp,0x763ddc92
  421e78:	retf   0xb74e
  421e7b:	mov    BYTE PTR [edi-0x389e03f4],dh
  421e81:	jp     0x421eed
  421e83:	sbb    dl,dh
  421e85:	neg    DWORD PTR [ecx+0x2b]
  421e88:	scas   eax,DWORD PTR es:[edi]
  421e89:	jns    0x421eaa
  421e8b:	daa    
  421e8c:	fisubr DWORD PTR [eax+0xf86f819]
  421e92:	(bad)  
  421e93:	and    eax,0xc101a722
  421e98:	jb     0x421e83
  421e9a:	mov    ecx,0x1b2f7e43
  421e9f:	jg     0x421e42
  421ea1:	jbe    0x421eac
  421ea3:	out    0xd1,eax
  421ea5:	jbe    0x421f26
  421ea7:	hlt    
  421ea8:	(bad)  
  421ea9:	push   ss
  421eaa:	and    al,0x77
  421eac:	xchg   esp,eax
  421ead:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eaf:	fcomp  DWORD PTR [eax+ebx*2-0x76f440a2]
  421eb6:	inc    esp
  421eb7:	lock xor eax,0x9d2819b1
  421ebd:	dec    ebx
  421ebe:	xor    eax,0xa6a41b9f
  421ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ec4:	adc    al,0xfa
  421ec6:	out    dx,al
  421ec7:	add    ebp,DWORD PTR [esi]
  421ec9:	lock inc eax
  421ecb:	lods   eax,DWORD PTR ds:[esi]
  421ecc:	mov    dl,0x4c
  421ece:	mov    ebp,0x82fd395f
  421ed3:	push   ebx
  421ed4:	(bad)  
  421ed5:	(bad)  
  421ed7:	pushf  
  421ed8:	inc    eax
  421ed9:	sub    al,0x5d
  421edb:	inc    edi
  421edc:	add    BYTE PTR [ecx-0x25],al
  421edf:	xchg   esp,eax
  421ee0:	xor    eax,ecx
  421ee2:	shl    dh,0x85
  421ee5:	ins    BYTE PTR es:[edi],dx
  421ee6:	adc    bh,BYTE PTR [edx]
  421ee8:	mov    cl,0xfc
  421eea:	mov    BYTE PTR [edi],dh
  421eec:	sbb    al,0xf9
  421eee:	mov    BYTE PTR [ecx+0x48],al
  421ef1:	pop    ecx
  421ef2:	jp     0x421f0a
  421ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ef5:	std    
  421ef6:	xor    eax,edi
  421ef8:	je     0x421ef0
  421efa:	pusha  
  421efb:	shr    DWORD PTR [edi],1
  421efd:	push   ebx
  421efe:	scas   eax,DWORD PTR es:[edi]
  421eff:	and    edi,ecx
  421f01:	call   0x5653dc9e
  421f06:	mov    es,WORD PTR [ebp-0x4b4e4aef]
  421f0c:	das    
  421f0d:	mov    esp,0x406852e
  421f12:	shr    ah,0xaa
  421f15:	pop    edi
  421f16:	pop    ss
  421f17:	jns    0x421ee0
  421f19:	fsub   DWORD PTR [ebp-0x20dda720]
  421f1f:	repnz jmp 0x9379:0x98e7249a
  421f27:	stos   DWORD PTR es:[edi],eax
  421f28:	inc    eax
  421f29:	pop    ss
  421f2a:	clc    
  421f2b:	mov    eax,0xf5d52da6
  421f30:	(bad)  
  421f32:	pushf  
  421f33:	pop    ss
  421f34:	mov    ebp,DWORD PTR [edi+ebx*1-0x4652fc46]
  421f3b:	push   edi
  421f3c:	pushf  
  421f3d:	dec    edx
  421f3e:	mov    cl,0x41
  421f40:	nop
  421f41:	mov    BYTE PTR [esp+eax*1],ah
  421f44:	mov    ds:0x8b43d9bc,eax
  421f49:	inc    eax
  421f4a:	call   0xa76c9090
  421f4f:	(bad)  
  421f50:	neg    DWORD PTR [edi+esi*8-0x1695288b]
  421f57:	fwait
  421f58:	cdq    
  421f59:	ins    BYTE PTR es:[edi],dx
  421f5a:	imul   ebp,DWORD PTR [edx],0x839048f2
  421f60:	fld    QWORD PTR [esi+0x3e]
  421f63:	pop    eax
  421f64:	pop    edx
  421f65:	jbe    0x421f15
  421f67:	repz retf 0x6809
  421f6b:	imul   esi,DWORD PTR [esi+0x0],0x0
	...
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     ah,bh
  421f87:	enter  0xbe7e,0xcc
  421f8b:	call   0x0:0x1fb0001
  421f92:	shl    edx,cl
  421f94:	(bad)  
  421f95:	adc    al,0x4c
  421f97:	jp     0x421fa8
  421f99:	lock mov ecx,0x12291a26
  421f9f:	fidiv  WORD PTR [edi-0x40]
  421fa2:	pushf  
  421fa3:	dec    esp
  421fa4:	popa   
  421fa5:	mov    edx,0x4fcd8ad6
  421faa:	jmp    0xee777de7
  421faf:	pusha  
  421fb0:	in     eax,0x73
  421fb2:	in     al,0xd6
  421fb4:	mov    ebx,esp
  421fb6:	push   cs
  421fb7:	xor    al,0x26
  421fb9:	mov    ah,0x99
  421fbb:	jbe    0x421f8f
  421fbd:	in     al,0x49
  421fbf:	les    esi,FWORD PTR [ecx-0x6f29a991]
  421fc5:	jmp    0x8a7e:0x50ca164
  421fcc:	shl    BYTE PTR [esi+eax*2-0x11],1
  421fd0:	push   es
  421fd1:	xor    esp,esp
  421fd3:	cli    
  421fd4:	enter  0xed69,0x98
  421fd8:	fadd   DWORD PTR [edx]
  421fda:	pop    esi
  421fdb:	inc    ebp
  421fdc:	in     al,dx
  421fdd:	mov    edi,0x87731634
  421fe2:	leave  
  421fe3:	xrelease xchg BYTE PTR [edi+eax*2-0x58],dl
  421fe8:	into   
  421fe9:	minps  xmm6,XMMWORD PTR [eax]
  421fec:	push   es
  421fed:	lock ja 0x422021
  421ff0:	mov    bl,0x7e
  421ff2:	mov    ds:0xcc94740c,al
  421ff7:	push   0x22
  421ff9:	into   
  421ffa:	adc    eax,0x499c44a3
  421fff:	push   edx
  422000:	packsswb mm2,QWORD PTR [esi+0x5b]
  422004:	gs pop eax
  422006:	and    al,0xb2
  422008:	pop    ds
  422009:	cld    
  42200a:	imul   ecx,DWORD PTR [ecx+ebp*1],0x51
  42200e:	mov    esp,0x6632209c
  422013:	rol    BYTE PTR [ebp-0x442d7706],0xe6
  42201a:	dec    edx
  42201b:	call   0x9cb:0x5d3d2af
  422022:	xchg   DWORD PTR [ebx],ebp
  422024:	push   ebx
  422025:	shr    DWORD PTR [ebx],cl
  422027:	adc    al,0x20
  422029:	mov    ds:0xd2a94097,eax
  42202e:	pusha  
  42202f:	or     bl,BYTE PTR [esi-0x24]
  422032:	mov    dl,0xa1
  422034:	mov    bh,0x6d
  422036:	lods   eax,DWORD PTR ds:[esi]
  422037:	and    dh,BYTE PTR [eax]
  422039:	shr    DWORD PTR [edi-0x35],1
  42203c:	xchg   edi,eax
  42203d:	data16 aaa 
  42203f:	sbb    eax,DWORD PTR [edx]
  422041:	xor    edx,DWORD PTR [edx+eax*2+0x2e]
  422045:	adc    cl,ah
  422047:	cld    
  422048:	adc    eax,0x3abd1b4d
  42204d:	jle    0x4220be
  42204f:	and    esp,DWORD PTR ds:0x50a6a769
  422055:	clc    
  422056:	xchg   esi,esi
  422058:	adc    edi,DWORD PTR [eax+0x347cab91]
  42205e:	sbb    ebp,eax
  422060:	call   0x5ef4e932
  422065:	cmp    edx,ecx
  422067:	xchg   ebp,eax
  422068:	inc    ebp
  422069:	inc    edx
  42206a:	retf   
  42206b:	adc    esp,DWORD PTR [esi]
  42206d:	mov    dh,0x6e
  42206f:	pusha  
  422070:	add    dh,dl
  422072:	and    ebx,esp
  422074:	dec    ebp
  422075:	push   esp
  422076:	adc    al,0x43
  422078:	sbb    BYTE PTR [eax-0x5647e5],cl
  42207e:	out    0xd,eax
  422080:	mov    DWORD PTR [ecx],edi
  422082:	adc    ebx,esp
  422084:	pop    edx
  422085:	add    eax,ebx
  422087:	pop    ebp
  422088:	jne    0x422091
  42208a:	mov    esi,DWORD PTR [esi-0x6b]
  42208d:	or     eax,DWORD PTR [edx-0x40b65ace]
  422093:	xchg   edi,eax
  422094:	imul   ebx,esi,0x1a
  422097:	lds    edx,FWORD PTR [edx+ebp*2+0x1d]
  42209b:	cs inc eax
  42209d:	jle    0x4220c9
  42209f:	xor    al,0xde
  4220a1:	xor    ebp,ebx
  4220a3:	jnp    0x422040
  4220a5:	mov    ah,0xef
  4220a7:	ret    0x4886
  4220aa:	fld    TBYTE PTR [esi+0x75b89abb]
  4220b0:	retf   0x4021
  4220b3:	xchg   ebx,eax
  4220b4:	rol    BYTE PTR [edx],cl
  4220b6:	jmp    0x42204d
  4220b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220b9:	out    0x98,eax
  4220bb:	adc    esp,DWORD PTR [edi-0x71]
  4220be:	aam    0x45
  4220c0:	std    
  4220c1:	pop    ebx
  4220c2:	test   BYTE PTR [esi+0x2e],cl
  4220c5:	jg     0x422131
  4220c7:	adc    ah,BYTE PTR [ecx+0x663cf843]
  4220cd:	hlt    
  4220ce:	(bad)  
  4220cf:	retf   
  4220d0:	inc    edx
  4220d1:	retf   0xe8ac
  4220d4:	imul   edx,DWORD PTR [eax-0x34],0x7f4264e1
  4220db:	xchg   BYTE PTR [esi+ecx*4],cl
  4220de:	jge    0x4220a6
  4220e0:	inc    esp
  4220e1:	shl    dh,1
  4220e3:	sbb    DWORD PTR [esp+ebp*1+0x1cf2472e],esp
  4220ea:	sahf   
  4220eb:	jae    0x422115
  4220ed:	mov    edx,0x7910f44c
  4220f2:	mov    al,0x16
  4220f4:	arpl   WORD PTR [eax-0x6f],di
  4220f7:	push   edi
  4220f8:	loope  0x4220ea
  4220fa:	pop    esi
  4220fb:	add    dh,BYTE PTR [esi+ebx*2-0x323638e3]
  422102:	dec    ebp
  422103:	pop    esi
  422104:	das    
  422105:	les    esi,FWORD PTR [ecx]
  422107:	(bad)  
  422108:	call   0xc5dc18e2
  42210d:	jo     0x4220c4
  42210f:	xchg   ebp,eax
  422110:	or     BYTE PTR [edx+0x40],dh
  422113:	imul   esi,DWORD PTR [eax+0x4e],0x6d
  422117:	inc    eax
  422118:	push   cs
  422119:	inc    ebp
  42211a:	push   es
  42211b:	out    dx,eax
  42211c:	aaa    
  42211d:	call   0x754fedcd
  422122:	or     BYTE PTR [eax-0x6b73b395],al
  422128:	rcr    BYTE PTR [ecx-0x4d],0xcb
  42212c:	lahf   
  42212d:	test   eax,0xc6f7015b
  422132:	push   ds
  422133:	sbb    dl,bl
  422135:	lea    edi,[eax+0x31]
  422138:	cmc    
  422139:	and    eax,ebp
  42213b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42213c:	(bad)  
  42213d:	adc    edx,DWORD PTR [eax-0x169aefa0]
  422143:	mov    bl,0xdd
  422145:	sar    ah,0x42
  422148:	js     0x422191
  42214a:	push   cs
  42214b:	nop
  42214c:	out    0x61,al
  42214e:	cdq    
  42214f:	enter  0xb487,0x8a
  422153:	jecxz  0x422183
  422155:	mov    eax,0xdbed3521
  42215a:	inc    ecx
  42215b:	ror    BYTE PTR [edx+ebx*4+0x7d],cl
  42215f:	sti    
  422160:	jbe    0x42217d
  422162:	fdivp  st(4),st
  422164:	mov    eax,ds:0xe1e706f7
  422169:	cmp    DWORD PTR [edx],ebp
  42216b:	mov    ch,0xe4
  42216d:	in     al,0x8c
  42216f:	fcom   DWORD PTR [esi+0x4af75d8a]
  422175:	ds adc al,0x44
  422178:	test   al,0xe8
  42217a:	sub    dl,al
  42217c:	push   ebx
  42217d:	lahf   
  42217e:	js     0x42212d
  422180:	clc    
  422181:	adc    BYTE PTR ds:0xd0b9a27b,dh
  422187:	adc    ebx,eax
  422189:	rcr    cl,0x79
  42218c:	out    dx,eax
	...
  422199:	add    BYTE PTR [ebx-0x2a],dl
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0x54],0xc7b11206
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	sti    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [ebx+eiz*1],bh
  4221b4:	inc    edi
  4221b5:	or     BYTE PTR [ebp+0x58],ah
  4221b8:	stos   DWORD PTR es:[edi],eax
  4221b9:	loope  0x422183
  4221bb:	(bad)  
  4221bd:	stc    
  4221be:	mov    bh,0x7d
  4221c0:	fbld   TBYTE PTR [edx-0x2b1087bb]
  4221c6:	push   esi
  4221c7:	pop    ss
  4221c8:	mov    ecx,0xd2b701b4
  4221cd:	push   es
  4221ce:	xchg   edx,eax
  4221cf:	dec    eax
  4221d0:	(bad)  
  4221d1:	sub    BYTE PTR [edi+0x72282140],dl
  4221d7:	mov    esp,esi
  4221d9:	cmp    ecx,edi
  4221db:	aas    
  4221dc:	add    al,0xe1
  4221de:	pop    eax
  4221df:	stos   BYTE PTR es:[edi],al
  4221e0:	xor    DWORD PTR [ebp+esi*4-0x3e],esi
  4221e4:	and    BYTE PTR [edi],0x33
  4221e7:	sahf   
  4221e8:	outs   dx,DWORD PTR ds:[esi]
  4221e9:	cdq    
  4221ea:	adc    al,0x11
  4221ec:	or     eax,0x9606e7c7
  4221f1:	sub    al,0xb1
  4221f3:	mov    edi,0x563c540
  4221f8:	cmp    al,0x95
  4221fa:	mov    ds:0x56305941,al
  4221ff:	les    esi,FWORD PTR [esi]
  422201:	std    
  422202:	repz call 0x3094a092
  422208:	sbb    al,0x12
  42220a:	push   eax
  42220b:	sbb    eax,0xf41bcf03
  422210:	add    DWORD PTR [ebx+0x67ed5805],edi
  422216:	pop    esp
  422217:	pusha  
  422218:	data16 jae 0x42227f
  42221b:	xchg   esi,eax
  42221c:	or     bl,BYTE PTR [eax+edx*1]
  42221f:	pop    es
  422220:	inc    edi
  422221:	mov    eax,0xe6f3a3f2
  422226:	xchg   esi,eax
  422227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422228:	xchg   esi,eax
  422229:	iret   
  42222a:	cmp    dh,bh
  42222c:	stos   DWORD PTR es:[edi],eax
  42222d:	add    bl,dh
  42222f:	inc    esi
  422230:	adc    edi,DWORD PTR [ebx+0x65]
  422233:	and    BYTE PTR [esi],dl
  422235:	(bad)  
  422236:	jnp    0x4221c7
  422238:	mov    ds:0x1d31ffd,al
  42223d:	inc    esp
  42223e:	out    dx,al
  42223f:	int    0x9b
  422241:	or     esi,DWORD PTR [edx+0x3a]
  422244:	and    edi,DWORD PTR [edi+0x24]
  422247:	pop    ebx
  422248:	out    dx,eax
  422249:	jp     0x4221fe
  42224b:	int3   
  42224c:	mov    esi,0xfe0ae322
  422251:	add    ebx,DWORD PTR [ebp+ebp*4-0x3b]
  422255:	adc    BYTE PTR [esi+0x6e],ch
  422258:	pop    ebx
  422259:	aam    0x5c
  42225b:	adc    BYTE PTR [ecx-0x9],0x34
  42225f:	jmp    0x4221e8
  422261:	fnstenv [edi]
  422263:	outs   dx,DWORD PTR ds:[esi]
  422264:	inc    ebx
  422265:	bnd jg 0x422275
  422268:	iret   
  422269:	push   edi
  42226a:	xor    ecx,DWORD PTR [ebx-0x36]
  42226d:	pushf  
  42226e:	sbb    dl,bh
  422270:	sbb    dl,0xfe
  422273:	xchg   DWORD PTR [ebx-0x6c],esi
  422276:	fdivp  st(3),st
  422278:	xchg   edi,eax
  422279:	iret   
  42227a:	rol    BYTE PTR [eax-0xc61f0d5],1
  422280:	pop    es
  422281:	stos   BYTE PTR es:[edi],al
  422282:	or     eax,0x84312c5a
  422287:	shl    BYTE PTR [edi+0x35],0x13
  42228b:	cdq    
  42228c:	xchg   edx,eax
  42228d:	iret   
  42228e:	xor    DWORD PTR [ebp-0x67],edi
  422291:	popf   
  422292:	or     DWORD PTR [ebp+0x7e5b336a],ebp
  422298:	push   0x2d0d5dce
  42229d:	xor    al,0x7f
  42229f:	ret    
  4222a0:	pop    ss
  4222a1:	stos   BYTE PTR es:[edi],al
  4222a2:	pushf  
  4222a3:	popa   
  4222a4:	rcr    ebp,1
  4222a6:	sbb    BYTE PTR [ecx+eax*2],0x81
  4222aa:	inc    ecx
  4222ab:	cmp    al,0x59
  4222ad:	repnz or bl,ch
  4222b0:	mov    al,0xf
  4222b2:	mov    DWORD PTR [eax-0x55f7ce3],0x17a9926d
  4222bc:	jns    0x422268
  4222be:	sbb    eax,0xf8f4b4b6
  4222c3:	stos   BYTE PTR es:[edi],al
  4222c4:	adc    BYTE PTR [bx],0x5b
  4222c8:	cmp    BYTE PTR [ebx-0x4b],bh
  4222cb:	jp     0x42231a
  4222cd:	jbe    0x422265
  4222cf:	daa    
  4222d0:	push   0x3e
  4222d2:	push   edx
  4222d3:	dec    ebx
  4222d4:	mov    bl,0x7e
  4222d6:	pop    esp
  4222d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222d8:	mov    bl,0xc5
  4222da:	retf   
  4222db:	dec    edx
  4222dc:	call   0x66de1a22
  4222e1:	shr    DWORD PTR ds:0xa9b058f2,cl
  4222e7:	nop
  4222e8:	pushf  
  4222e9:	jns    0x4222b7
  4222eb:	mov    ch,0x17
  4222ed:	fnsave [ebp+0x49]
  4222f0:	mov    al,0x25
  4222f2:	mov    ebx,0x52ea36c3
  4222f7:	in     eax,dx
  4222f8:	mov    edi,0x935a9aeb
  4222fd:	mov    al,0xd2
  4222ff:	pop    esi
  422300:	mov    ecx,0x3fe53c3a
  422305:	clc    
  422306:	div    BYTE PTR [eax]
  422308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422309:	sar    BYTE PTR [ebx-0x1b],1
  42230c:	aaa    
  42230d:	loopne 0x422381
  42230f:	aam    0x5f
  422311:	inc    ebp
  422312:	hlt    
  422313:	xor    ah,BYTE PTR ds:0xa6551618
  422319:	shl    BYTE PTR [edi],1
  42231b:	push   edx
  42231c:	mov    ch,0xe4
  42231e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42231f:	cmp    DWORD PTR ds:0x15dd3124,esp
  422325:	daa    
  422326:	inc    ebx
  422327:	hlt    
  422328:	hlt    
  422329:	push   edx
  42232a:	dec    ecx
  42232b:	hlt    
  42232c:	fwait
  42232d:	adc    ebp,ebx
  42232f:	add    eax,0xf76818d7
  422334:	ror    dl,0xc8
  422337:	fdivr  st(4),st
  422339:	jnp    0x42235b
  42233b:	lock mov ebp,DWORD PTR [edx+0x4c7161a5]
  422342:	fsub   QWORD PTR [ebx+0x6fbf0b8e]
  422348:	popa   
  422349:	scas   al,BYTE PTR es:[edi]
  42234a:	sbb    al,0x1d
  42234c:	cs cs iret 
  42234f:	sbb    BYTE PTR [edx],ch
  422351:	in     eax,dx
  422352:	add    DWORD PTR [ecx+0x49],edi
  422355:	mov    DWORD PTR [ecx+0x4c],ebp
  422358:	std    
  422359:	shr    ah,cl
  42235b:	arpl   WORD PTR [ecx+0x9],cx
  42235e:	cld    
  42235f:	cmp    BYTE PTR [edx-0x46df6170],al
  422365:	cmp    al,0x8e
  422367:	inc    ebp
  422368:	mov    eax,0x8fe5cea9
  42236d:	pop    ebx
  42236e:	rcl    ah,0x25
  422371:	cmp    dl,BYTE PTR [ebp-0x6]
  422374:	mov    ah,0xe7
  422376:	(bad)  [edi+0x5f]
  422379:	dec    edx
  42237a:	imul   eax,DWORD PTR [edi+0x2e6837c2],0x70
  422381:	jmp    0xa237:0xfb5b9442
  422388:	push   edi
  422389:	imul   BYTE PTR [esi+edi*4-0x1524836a]
  422390:	scas   eax,DWORD PTR es:[edi]
  422391:	inc    ebx
  422392:	(bad)  
  422393:	jne    0x422401
  422395:	jb     0x42233c
  422397:	pop    ebx
  422398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422399:	add    DWORD PTR [eax],esi
  42239b:	rol    BYTE PTR [edi],cl
  42239d:	imul   esi,DWORD PTR [ecx+eax*2-0x4a283a46],0x5d
  4223a5:	inc    ebx
  4223a6:	mov    bl,0x3e
  4223a8:	ins    BYTE PTR es:[edi],dx
  4223a9:	cmp    al,0x77
  4223ab:	scas   al,BYTE PTR es:[edi]
  4223ac:	and    eax,DWORD PTR [eax]
	...
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	lods   al,BYTE PTR ds:[esi]
  4223c7:	enter  0x5aea,0xc2
  4223cb:	sahf   
  4223cc:	add    DWORD PTR [eax],eax
  4223ce:	sti    
  4223cf:	add    DWORD PTR [eax],eax
  4223d1:	add    BYTE PTR [esi+ecx*1-0x1c4749d],bl
  4223d8:	fld    QWORD PTR [eax-0x5b7561cf]
  4223de:	stos   DWORD PTR es:[edi],eax
  4223df:	mov    ah,0x34
  4223e1:	sub    eax,0xab317a40
  4223e6:	adc    bh,BYTE PTR [ebx+0x20e2c922]
  4223ec:	sbb    BYTE PTR [eax+0x1fe5db24],al
  4223f2:	mov    al,bh
  4223f4:	stos   DWORD PTR es:[edi],eax
  4223f5:	xor    al,0x75
  4223f7:	xor    al,0xd2
  4223f9:	repz xchg edx,eax
  4223fb:	ja     0x4223a2
  4223fd:	scas   eax,DWORD PTR es:[edi]
  4223fe:	out    dx,al
  4223ff:	test   al,0x7e
  422401:	and    BYTE PTR cs:[ebx],ch
  422404:	pop    ds
  422405:	(bad)  [edx-0x41499958]
  42240b:	adc    BYTE PTR [edi],bh
  42240d:	mov    bh,0x91
  42240f:	mov    eax,0x77f6add0
  422415:	arpl   WORD PTR [ebp+edx*8+0x36],di
  422419:	pop    ss
  42241a:	inc    ebx
  42241b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241c:	adc    edx,esp
  42241e:	cmp    BYTE PTR [ebx-0x12e82ef5],ah
  422424:	rcr    BYTE PTR [edx+ebp*1-0x46],0xd0
  422429:	mov    ebx,0x96cea485
  42242e:	popa   
  42242f:	sub    eax,0x419a1a
  422434:	lea    ebx,ds:0xb7bc758c
  42243a:	mov    ecx,DWORD PTR [ebp+0x77af7271]
  422440:	sub    eax,0xef5b3cd5
  422445:	and    dh,BYTE PTR [esi]
  422447:	adc    al,bh
  422449:	lds    esp,FWORD PTR [eax+ebx*2-0x1a2cee94]
  422450:	adc    al,ah
  422452:	into   
  422453:	out    dx,al
  422454:	out    0xc6,eax
  422456:	pop    ss
  422457:	cmp    DWORD PTR [ecx-0x6f],ecx
  42245a:	add    ah,BYTE PTR [ebp+0x60714c6f]
  422460:	adc    eax,0xd0b1646a
  422465:	(bad)
  422468:	mov    BYTE PTR [eax+0x25],ch
  42246b:	mov    ebx,0x5ea2a53a
  422470:	ret    0xd637
  422473:	imul   ebx,DWORD PTR [ecx+ebx*2],0xffffffd9
  422477:	bound  ecx,QWORD PTR [edx]
  422479:	sub    eax,0x8167a581
  42247e:	xchg   esp,eax
  42247f:	das    
  422480:	jge    0x422441
  422482:	or     BYTE PTR [esi+0x70],bl
  422485:	int    0xae
  422487:	fdiv   st,st(2)
  422489:	push   ebp
  42248a:	push   0x6f
  42248c:	jbe    0x422443
  42248e:	adc    DWORD PTR [eax],ebp
  422490:	sub    ah,BYTE PTR [ecx+0x365be697]
  422496:	jmp    0x6443e548
  42249b:	fnsave [edi+eax*2+0x22c19b1c]
  4224a2:	sub    esp,DWORD PTR [ebx]
  4224a4:	call   0x2f9e5b5e
  4224a9:	push   0xf34838e8
  4224ae:	mov    edx,0x9ffa878d
  4224b3:	pop    ss
  4224b4:	gs pop esi
  4224b6:	aam    0xdf
  4224b8:	mov    DWORD PTR [ecx],edx
  4224ba:	fadd   DWORD PTR [esi+0x46]
  4224bd:	scas   eax,DWORD PTR es:[edi]
  4224be:	push   edx
  4224bf:	ss push eax
  4224c1:	add    al,0x2
  4224c3:	dec    ecx
  4224c4:	mul    DWORD PTR [ecx]
  4224c6:	test   al,0xf2
  4224c8:	scas   al,BYTE PTR es:[edi]
  4224c9:	or     al,0xc
  4224cb:	addr16 cli 
  4224cd:	arpl   WORD PTR [edx+edi*2],ax
  4224d0:	cs out dx,al
  4224d2:	cmp    esi,DWORD PTR [ebp-0x68]
  4224d5:	xor    al,0xd3
  4224d7:	sbb    al,dh
  4224d9:	dec    edi
  4224da:	int3   
  4224db:	inc    ebp
  4224dc:	test   al,0xf8
  4224de:	fs pushf 
  4224e0:	arpl   WORD PTR [esi],bx
  4224e2:	fmul   QWORD PTR [ebx-0x573dda34]
  4224e8:	sbb    ebp,DWORD PTR [ecx-0x72fdf8a6]
  4224ee:	mov    eax,edx
  4224f0:	xlat   BYTE PTR ds:[ebx]
  4224f1:	jo     0x422484
  4224f3:	mov    ch,0xae
  4224f5:	jge    0x4224f9
  4224f7:	mov    ss,WORD PTR [esi+edi*8]
  4224fa:	arpl   WORD PTR [edi-0x42e2fa43],cx
  422500:	pop    edx
  422501:	fnstenv [ebx-0x77]
  422504:	dec    esi
  422505:	(bad)  
  422506:	(bad)  
  422507:	adc    eax,DWORD PTR [esi-0x6b]
  42250a:	inc    ecx
  42250b:	xor    al,0xd9
  42250d:	int    0xa6
  42250f:	hlt    
  422510:	dec    ebx
  422511:	ds push ss
  422513:	pop    ebx
  422514:	retf   
  422515:	fisubr DWORD PTR [eax-0x6d]
  422518:	xlat   BYTE PTR ds:[ebx]
  422519:	vmread DWORD PTR [esi+0x1afee920],ebp
  422520:	outs   dx,BYTE PTR ds:[esi]
  422521:	xchg   esi,eax
  422522:	mov    bh,0x53
  422524:	mov    WORD PTR [ebp+eax*1+0x41d7daa],cs
  42252b:	pop    es
  42252c:	pop    ecx
  42252d:	xor    bl,BYTE PTR [ecx-0x1b76aad5]
  422533:	mov    esp,0xf042f1a1
  422538:	js     0x42257d
  42253a:	pop    esp
  42253b:	adc    eax,0xc67ff529
  422540:	xor    ch,al
  422542:	fsubr  QWORD PTR [edi]
  422544:	in     eax,dx
  422545:	xchg   ebx,eax
  422546:	mov    edx,gs
  422548:	aaa    
  422549:	lock push cs
  42254b:	sub    BYTE PTR [edx-0x55c3ff89],ah
  422551:	repnz cwde 
  422553:	mov    cs,WORD PTR [ecx-0x5d9855a]
  422559:	je     0x422534
  42255b:	mov    edx,0x3745e395
  422560:	and    ch,BYTE PTR [edi]
  422562:	leave  
  422563:	aam    0xd3
  422565:	repnz (bad) [edi+0x6a]
  422569:	add    DWORD PTR [edi-0x19],edi
  42256c:	adc    BYTE PTR [ecx+0x24],bl
  42256f:	xor    eax,0x8c24a69b
  422574:	in     eax,dx
  422575:	inc    edi
  422576:	mov    bh,0xcb
  422578:	fidiv  DWORD PTR [esi-0x540ec30a]
  42257e:	or     DWORD PTR [edi-0x15],ebp
  422581:	sar    DWORD PTR [eax+0x62],0x97
  422585:	imul   esp,edi,0xffffff9c
  422588:	faddp  st(0),st
  42258a:	aaa    
  42258b:	cpuid  
  42258d:	jle    0x42255f
  42258f:	and    eax,0xc4aab817
  422594:	pop    DWORD PTR ds:[edi-0xae77c6c]
  42259b:	fwait
  42259c:	hlt    
  42259d:	stos   BYTE PTR es:[edi],al
  42259e:	out    dx,eax
  42259f:	jmp    0x53841225
  4225a4:	out    dx,eax
  4225a5:	shr    BYTE PTR es:[ebp-0x1dd63fe1],cl
  4225ac:	push   ecx
  4225ad:	pop    ecx
  4225ae:	xchg   esp,eax
  4225af:	jbe    0x42256c
  4225b1:	dec    ecx
  4225b2:	add    eax,0x27e84d89
  4225b7:	mov    esp,0x4c04b7ff
  4225bc:	sub    ch,dl
  4225be:	in     al,dx
  4225bf:	and    dl,bh
  4225c1:	aas    
  4225c2:	rcl    DWORD PTR [edx-0x5a],1
  4225c5:	call   0xe15c:0x800cb91c
  4225cc:	test   BYTE PTR [eax],al
	...
  4225da:	leave  
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    ebp,DWORD PTR [esi-0x421ab08c]
  4225eb:	mov    al,ds:0x1fb0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	loop   0x4225b1
  4225f4:	cwde   
  4225f5:	mov    ah,ah
  4225f7:	inc    esi
  4225f8:	ror    DWORD PTR [ebx+0x34be61bb],0x17
  4225ff:	mov    eax,ds:0xb345dd3a
  422604:	mov    ebp,0x1cd22e0a
  422609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260a:	addr16 mov ebp,0xc3053c09
  422610:	mov    DWORD PTR [ecx-0x633a5dbe],ecx
  422616:	jecxz  0x4225ac
  422618:	nop
  422619:	xor    dl,BYTE PTR [edi+0x4d]
  42261c:	dec    ebp
  42261d:	push   ecx
  42261e:	sbb    al,0x23
  422620:	out    0x35,al
  422622:	add    edx,edi
  422624:	lahf   
  422625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422626:	ret    
  422627:	ret    
  422628:	adc    BYTE PTR [edi],0xa4
  42262b:	call   0x2836:0x7865cc9e
  422632:	outs   dx,BYTE PTR ds:[esi]
  422633:	add    BYTE PTR [edi],al
  422635:	sti    
  422636:	push   ebp
  422637:	sub    BYTE PTR [ebx],bl
  422639:	std    
  42263a:	jne    0x4225cb
  42263c:	and    dh,BYTE PTR [eax-0x28]
  42263f:	jne    0x4226a7
  422641:	sbb    eax,0x29452df
  422646:	scas   eax,DWORD PTR es:[edi]
  422647:	pop    ecx
  422648:	adc    dh,bh
  42264a:	das    
  42264b:	jmp    0x422669
  42264d:	retf   0xe245
  422650:	fs sti 
  422652:	test   ch,0x63
  422655:	dec    ebp
  422656:	xor    bl,al
  422658:	test   BYTE PTR [ebx-0x7f],al
  42265b:	clc    
  42265c:	sbb    DWORD PTR [ebp-0x6ed41e99],esi
  422662:	ja     0x4226b7
  422664:	jmp    0xd7edf9b2
  422669:	sub    al,0x32
  42266b:	mov    al,0xe3
  42266d:	mov    BYTE PTR [eax],0xe9
  422670:	jbe    0x42261a
  422672:	inc    esi
  422673:	or     eax,0x334637bf
  422678:	mov    BYTE PTR [eax],ch
  42267a:	ss stc 
  42267c:	test   al,0xd6
  42267e:	inc    ebp
  42267f:	lock ins BYTE PTR es:[edi],dx
  422681:	aaa    
  422682:	dec    ebx
  422683:	arpl   bx,sp
  422685:	sbb    ah,BYTE PTR [eax+edx*8+0x16]
  422689:	test   al,0xfb
  42268b:	call   0x58b8f0d3
  422690:	lock out dx,al
  422692:	std    
  422693:	(bad)  
  422694:	mov    ds:0xe456d624,al
  42269a:	mov    DWORD PTR [ebx+edi*8+0x19],ecx
  42269e:	inc    ebx
  42269f:	mov    ebx,DWORD PTR [edx]
  4226a1:	mov    ds:0xf4fb9316,al
  4226a6:	fadd   DWORD PTR [edx]
  4226a8:	cld    
  4226a9:	dec    ebx
  4226aa:	call   0x8642:0x7902947
  4226b1:	dec    ecx
  4226b2:	rol    cl,1
  4226b4:	das    
  4226b5:	add    DWORD PTR [eax],eax
  4226b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b8:	(bad)  
  4226b9:	popf   
  4226ba:	pop    es
  4226bb:	cmp    al,0x56
  4226bd:	and    DWORD PTR [esi-0x62],ebp
  4226c0:	jecxz  0x4226b1
  4226c2:	aaa    
  4226c3:	pop    ebx
  4226c4:	sub    ah,BYTE PTR ds:0x6c430e43
  4226ca:	fmul   st,st(2)
  4226cc:	cmp    edx,DWORD PTR [eax+ebx*4]
  4226cf:	mov    edi,0x4e79187f
  4226d4:	sub    edx,esp
  4226d6:	ss call 0xb002e5f3
  4226dc:	sbb    al,0xad
  4226de:	lahf   
  4226df:	and    esp,ebx
  4226e1:	sub    DWORD PTR [esi+0x15],esp
  4226e4:	pop    ds
  4226e5:	xlat   BYTE PTR ds:[ebx]
  4226e6:	inc    ebx
  4226e7:	sub    ah,BYTE PTR ds:0x1697faf3
  4226ed:	nop
  4226ee:	in     eax,dx
  4226ef:	xchg   ebp,eax
  4226f0:	mov    al,ds:0xf5d9ae37
  4226f5:	xchg   esi,eax
  4226f6:	into   
  4226f7:	xchg   DWORD PTR [esi-0x1f2fda89],esp
  4226fd:	test   edx,eax
  4226ff:	jns    0x422756
  422701:	xchg   esi,eax
  422702:	inc    edx
  422703:	adc    DWORD PTR [ebx-0x124da876],edx
  422709:	popf   
  42270a:	dec    esp
  42270b:	mov    eax,ds:0x7a1f6e94
  422710:	mov    edi,0xe7b54304
  422715:	loope  0x422743
  422717:	sbb    al,0x22
  422719:	push   ebx
  42271a:	in     al,0xf0
  42271c:	push   ds
  42271d:	ss dec esi
  42271f:	das    
  422720:	retf   0x5aba
  422723:	cmp    DWORD PTR [ebp+0x6950d750],ebx
  422729:	(bad)  
  42272a:	test   eax,0xeed90e62
  42272f:	bnd jbe 0x4227a1
  422732:	das    
  422733:	clc    
  422734:	ins    WORD PTR es:[edi],dx
  422736:	loope  0x4226ee
  422738:	mov    ds:0xdc33a801,eax
  42273d:	hlt    
  42273e:	mov    ds:0xdb3cd374,al
  422743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422744:	js     0x4226e6
  422746:	jne    0x4227be
  422748:	test   al,0x55
  42274a:	jmp    0xe2848663
  42274f:	scas   eax,DWORD PTR es:[edi]
  422750:	or     BYTE PTR [ecx-0x2],0x66
  422754:	in     al,dx
  422755:	adc    BYTE PTR [edx-0x3b],dh
  422758:	jne    0x422706
  42275a:	mov    bl,0xcf
  42275c:	rcr    BYTE PTR [ebx+0x32b3e4ae],0xa8
  422763:	fs stos DWORD PTR es:[edi],eax
  422765:	cmp    DWORD PTR [ebx-0x215a8271],0x4a
  42276c:	mov    ds:0x110204cf,al
  422771:	in     eax,dx
  422772:	and    DWORD PTR ds:[edx-0x39e120c1],esp
  422779:	xor    BYTE PTR [edi],bl
  42277b:	jmp    0x422733
  42277d:	jge    0x422720
  42277f:	std    
  422780:	add    BYTE PTR [eax+0x42],ch
  422783:	and    al,0x7d
  422785:	lahf   
  422786:	leave  
  422787:	xor    al,0x48
  422789:	shl    BYTE PTR [ebx+0x6],1
  42278c:	je     0x42279e
  42278e:	out    0x45,al
  422790:	xor    eax,0x90e5442d
  422795:	shl    DWORD PTR [ebx+0x17],0x87
  422799:	mov    edi,DWORD PTR [esi+esi*4-0x3b]
  42279d:	mul    BYTE PTR [ebx-0x1d]
  4227a0:	(bad)  
  4227a1:	sti    
  4227a2:	test   eax,0xd8769a4b
  4227a7:	leave  
  4227a8:	dec    eax
  4227a9:	or     ecx,0x87c73c47
  4227af:	cdq    
  4227b0:	sahf   
  4227b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227b2:	or     edx,ebx
  4227b4:	lahf   
  4227b5:	fidivr WORD PTR [eax-0x4f]
  4227b8:	sbb    ecx,0x56
  4227bb:	ds dec edi
  4227bd:	sbb    DWORD PTR [ecx+esi*8+0x14],ecx
  4227c1:	dec    eax
  4227c2:	sbb    ebx,DWORD PTR [edx+0xe]
  4227c5:	outs   dx,DWORD PTR ds:[esi]
  4227c6:	jae    0x4227d7
  4227c8:	rcr    BYTE PTR [ecx],cl
  4227ca:	(bad)  
  4227cb:	xchg   edx,eax
  4227cc:	outs   dx,DWORD PTR ds:[esi]
  4227cd:	cld    
  4227ce:	aam    0xbd
  4227d0:	dec    ecx
  4227d1:	int    0x70
  4227d3:	fimul  DWORD PTR [ecx]
  4227d5:	cs not cl
  4227d8:	jno    0x422768
  4227da:	ffreep st(5)
  4227dc:	out    0xff,al
  4227de:	cmp    bl,cl
  4227e0:	push   cs
  4227e1:	inc    edi
  4227e2:	iret   
  4227e3:	test   BYTE PTR [ecx-0x531f4b9d],ch
  4227e9:	retf   0x5bf8
  4227ec:	in     al,dx
	...
  4227f9:	add    BYTE PTR [eax-0x11],cl
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx+0x4c53e210],ebx
  422808:	inc    esp
  422809:	enter  0xa2b8,0x1
  42280d:	add    bl,bh
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR [ebx],dl
  422813:	ret    0xee7a
  422816:	fninit 
  422818:	xchg   esp,eax
  422819:	div    BYTE PTR [ebx]
  42281b:	pop    ds
  42281c:	xchg   ebx,eax
  42281d:	icebp  
  42281e:	xor    ebx,edi
  422820:	inc    eax
  422821:	push   esp
  422822:	and    ecx,ebp
  422824:	out    0x8b,al
  422826:	dec    ebp
  422827:	adc    al,0x91
  422829:	ja     0x422838
  42282b:	and    DWORD PTR [edx-0x65df5689],edx
  422831:	in     eax,0xe6
  422833:	push   ecx
  422834:	mov    esi,0x9fa3de8b
  422839:	(bad)  
  42283a:	jp     0x4227f7
  42283c:	test   DWORD PTR [esi],esi
  42283e:	push   ebx
  42283f:	int    0x9f
  422841:	mov    bh,0x9c
  422843:	dec    ebx
  422844:	loopne 0x4228b3
  422846:	or     BYTE PTR [edi],0xcd
  422849:	jne    0x42284a
  42284b:	xchg   ebp,eax
  42284c:	movups XMMWORD PTR [edx+0x7185f040],xmm7
  422853:	push   edi
  422854:	loope  0x422878
  422856:	pop    esp
  422857:	xor    BYTE PTR [esi+esi*4+0x6681219a],0x65
  42285f:	adc    ah,BYTE PTR [esi]
  422861:	fwait
  422862:	and    al,cl
  422864:	repnz in al,0xeb
  422867:	int3   
  422868:	ja     0x422871
  42286a:	dec    ecx
  42286b:	or     DWORD PTR [edi+0x53],ecx
  42286e:	addr16 ret 0x61c4
  422872:	jo     0x422885
  422874:	jle    0x4228ca
  422876:	lods   eax,DWORD PTR ds:[esi]
  422877:	fistp  WORD PTR [esp+ecx*1-0xe81e2c7]
  42287e:	jmp    FWORD PTR [esi]
  422880:	(bad)  [eax+0x7a273eb1]
  422886:	aam    0x13
  422888:	out    0x44,eax
  42288a:	and    dh,cl
  42288c:	fwait
  42288d:	in     eax,0x5c
  42288f:	es xchg edx,eax
  422891:	gs scas al,BYTE PTR es:[edi]
  422893:	mov    WORD PTR [ecx+0x52],gs
  422896:	xchg   ecx,eax
  422897:	mov    ebp,0xf375644c
  42289c:	add    DWORD PTR [esi+ebx*2-0x3f],ecx
  4228a0:	adc    eax,0xcc38fcca
  4228a5:	add    eax,esp
  4228a7:	ret    0x7abf
  4228aa:	ss in  eax,dx
  4228ac:	jg     0x42291b
  4228ae:	imul   BYTE PTR [ebx+eiz*8+0x476e961f]
  4228b5:	push   eax
  4228b6:	pop    es
  4228b7:	mov    dl,BYTE PTR [edi]
  4228b9:	lahf   
  4228ba:	xchg   bl,ah
  4228bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228bd:	xchg   edi,eax
  4228be:	daa    
  4228bf:	jns    0x4228b5
  4228c1:	fwait
  4228c2:	cmc    
  4228c3:	dec    ecx
  4228c4:	add    ch,ch
  4228c6:	shl    BYTE PTR [ebx],0x67
  4228c9:	outs   dx,BYTE PTR ds:[esi]
  4228ca:	add    al,0xb0
  4228cc:	cwde   
  4228cd:	or     BYTE PTR [ecx],bh
  4228cf:	retf   0xf76e
  4228d2:	ds xor cl,0x4a
  4228d6:	loop   0x42289a
  4228d8:	fs (bad) 
  4228da:	sahf   
  4228db:	or     DWORD PTR [edx+0x6a],0x68
  4228df:	aas    
  4228e0:	aam    0x10
  4228e2:	adc    bh,al
  4228e4:	sub    al,0x48
  4228e6:	es jecxz 0x4228e5
  4228e9:	pop    esi
  4228ea:	(bad)  [ebx]
  4228ec:	ror    DWORD PTR [eax-0x2ee472b2],cl
  4228f2:	rcl    DWORD PTR [esi],1
  4228f4:	mov    ecx,0x461f79b1
  4228f9:	add    al,0xef
  4228fb:	(bad)  
  4228fc:	sbb    eax,esi
  4228fe:	pop    eax
  4228ff:	jo     0x422884
  422901:	jl     0x422973
  422903:	sub    esp,DWORD PTR [ebx+edx*8]
  422906:	in     eax,0x6f
  422908:	jle    0x422931
  42290a:	pop    ebp
  42290b:	pop    esi
  42290c:	in     al,0xbb
  42290e:	jecxz  0x4228af
  422910:	imul   esi,DWORD PTR [edx-0x36],0x9f6b3c38
  422917:	dec    edx
  422918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422919:	in     al,dx
  42291a:	adc    esi,DWORD PTR [esi-0x4c]
  42291d:	mov    edx,0x483b6ade
  422922:	scas   eax,DWORD PTR es:[edi]
  422923:	nop
  422924:	push   es
  422925:	cmp    eax,0xa92475a8
  42292a:	dec    edi
  42292b:	push   ds
  42292c:	fimul  DWORD PTR [esi+0x2c]
  42292f:	push   ecx
  422930:	jmp    0x422913
  422932:	fcomp  QWORD PTR [ebx-0x45137ec]
  422938:	xor    BYTE PTR [ecx],ch
  42293a:	jmp    0xaf0e69a3
  42293f:	neg    ah
  422941:	dec    ebp
  422942:	imul   ecx,DWORD PTR [ecx],0x4a3907ed
  422948:	sub    ch,dl
  42294a:	and    al,0xb
  42294c:	fistp  WORD PTR [ebp+ecx*1-0x657073da]
  422953:	loope  0x42290b
  422955:	jo     0x4229d6
  422957:	fwait
  422958:	xor    al,BYTE PTR [eax-0x4b441546]
  42295e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42295f:	mov    edx,0xa39bf1e5
  422964:	push   ebp
  422965:	ret    
  422966:	mov    eax,ds:0xd1fb2a11
  42296b:	mov    dl,0xd7
  42296d:	mov    eax,0x134c0764
  422972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422973:	fcom   DWORD PTR [ebx-0x191428de]
  422979:	outs   dx,BYTE PTR ds:[esi]
  42297a:	mov    dl,0xd3
  42297c:	and    al,0x81
  42297e:	daa    
  42297f:	dec    ebp
  422980:	jo     0x42298f
  422982:	mov    bh,0xbb
  422984:	and    ch,BYTE PTR [edi]
  422986:	mov    dl,0xf8
  422988:	sub    al,0x9b
  42298a:	sbb    eax,0xf911e1c1
  42298f:	aam    0xd1
  422991:	xchg   edi,eax
  422992:	cmp    cl,BYTE PTR [ecx+0x5ee72647]
  422998:	(bad)  
  422999:	stc    
  42299a:	fild   WORD PTR [edx-0x54]
  42299d:	out    0x18,al
  42299f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229a0:	sub    esp,DWORD PTR [ebx+esi*4]
  4229a3:	int    0x5c
  4229a5:	sbb    BYTE PTR [edi-0x76553cdb],al
  4229ab:	xor    ch,dh
  4229ad:	pusha  
  4229ae:	jo     0x4229bd
  4229b0:	fld    TBYTE PTR [esi-0x3b]
  4229b3:	leave  
  4229b4:	div    BYTE PTR [eax+0x7f]
  4229b7:	push   esi
  4229b8:	bound  esp,QWORD PTR [edi]
  4229ba:	out    dx,al
  4229bb:	pop    ebx
  4229bc:	mov    ebx,0x11ffbb00
  4229c1:	mov    ebp,0x11f632d5
  4229c6:	fmul   st(0),st
  4229c8:	out    0x22,al
  4229ca:	popf   
  4229cb:	sbb    DWORD PTR [ebp+0x1984ac53],0xbff0f46e
  4229d5:	push   ebp
  4229d6:	inc    eax
  4229d7:	mov    ds:0x2d196f87,al
  4229dc:	pop    edi
  4229dd:	repnz add al,0x94
  4229e0:	addr16 repnz hlt 
  4229e3:	sub    BYTE PTR [edi],al
  4229e5:	inc    esp
  4229e6:	scas   al,BYTE PTR es:[edi]
  4229e7:	jle    0x422a45
  4229e9:	nop
  4229ea:	mov    al,ds:0xfafddc14
  4229ef:	xor    eax,DWORD PTR [ebx]
  4229f1:	jp     0x422a5e
  4229f3:	dec    ebp
  4229f4:	adc    al,0xc6
  4229f6:	in     eax,dx
  4229f7:	ins    BYTE PTR es:[edi],dx
  4229f8:	push   ebp
  4229f9:	sub    eax,0xab278156
  4229fe:	inc    edx
  4229ff:	sbb    al,0x7c
  422a01:	call   0x91707b74
  422a06:	jmp    0x422a30
  422a08:	cmp    DWORD PTR [ebx],edi
  422a0a:	xchg   BYTE PTR [ebp+0x58],al
	...
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	sar    DWORD PTR [eax+esi*8+0x1a4b350],0x0
  422a2e:	sti    
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [ebx+0x21cc302c],ch
  422a37:	inc    esp
  422a38:	lock mov al,0x62
  422a3b:	repz xchg esp,eax
  422a3d:	jae    0x422aab
  422a3f:	ja     0x422a37
  422a41:	and    BYTE PTR [ebx-0x40],bh
  422a44:	rcr    dl,cl
  422a46:	out    0xa7,al
  422a48:	inc    edi
  422a49:	sub    DWORD PTR [ebp+0x65768aa6],edi
  422a4f:	(bad)  
  422a50:	and    al,0x58
  422a52:	pop    eax
  422a53:	mov    esi,0x56949386
  422a58:	aaa    
  422a59:	retf   0x6ec8
  422a5c:	repz ja 0x422a7c
  422a5f:	jle    0x422aae
  422a61:	dec    edx
  422a62:	sti    
  422a63:	mov    ebp,0xbd6cdbeb
  422a68:	test   BYTE PTR [esp+eiz*2],bl
  422a6b:	(bad)  [esi]
  422a6d:	scas   al,BYTE PTR es:[edi]
  422a6e:	xchg   ebx,eax
  422a6f:	imul   eax,DWORD PTR [ecx+0x335eccf4],0x32
  422a76:	mov    ebx,0xd41ac8
  422a7b:	(bad)  
  422a7c:	jmp    0x422ad3
  422a7e:	adc    BYTE PTR [ecx-0x13],0xab
  422a82:	cmp    eax,0xcdba1762
  422a87:	or     eax,0xd79437a5
  422a8c:	and    ebx,ebx
  422a8e:	xor    DWORD PTR [bp+di+0x55b4],ebx
  422a93:	inc    ebp
  422a94:	shl    eax,cl
  422a96:	mul    DWORD PTR [esi+ebp*1]
  422a99:	mov    ch,0x35
  422a9b:	pop    ebx
  422a9c:	jne    0x422a77
  422a9e:	sub    BYTE PTR [esi+ebx*8+0x18],0x78
  422aa3:	mov    ebx,eax
  422aa5:	inc    esp
  422aa6:	dec    eax
  422aa7:	mov    eax,ds:0x6c8c045a
  422aac:	sub    dl,ch
  422aae:	sbb    bl,BYTE PTR ds:0xb3df80c0
  422ab4:	aad    0x0
  422ab6:	inc    esi
  422ab7:	leave  
  422ab8:	dec    edx
  422ab9:	shl    BYTE PTR [edx+0x48],cl
  422abc:	dec    ecx
  422abd:	ss or  al,0xcc
  422ac0:	jecxz  0x422b25
  422ac2:	or     eax,0x9e8297ac
  422ac7:	lods   al,BYTE PTR ds:[esi]
  422ac8:	push   eax
  422ac9:	repz adc DWORD PTR [edi-0x2df1485a],eax
  422ad0:	call   0x10e14c93
  422ad5:	mov    eax,ds:0x119fe4b0
  422ada:	sbb    cl,dl
  422adc:	and    ax,0xa877
  422ae0:	jge    0x422b07
  422ae2:	mov    ds:0xaa200e38,eax
  422ae7:	cmp    al,0xb7
  422ae9:	in     al,dx
  422aea:	sar    dl,1
  422aec:	xlat   BYTE PTR ds:[ebx]
  422aed:	shl    BYTE PTR [esi+ebx*8-0x35],1
  422af1:	push   esi
  422af2:	fidivr WORD PTR [esi-0x323134e2]
  422af8:	mov    edi,0x8a7e4e80
  422afd:	jge    0x422aa0
  422aff:	or     BYTE PTR [eax-0x6460ce52],cl
  422b05:	or     eax,0xc18ee33b
  422b0a:	sbb    bh,ch
  422b0c:	xchg   esp,eax
  422b0d:	push   eax
  422b0e:	ins    DWORD PTR es:[edi],dx
  422b0f:	(bad)  
  422b11:	iret   
  422b12:	dec    ebx
  422b13:	div    BYTE PTR [ecx+0x3fc46dc9]
  422b19:	nop
  422b1a:	mov    al,ds:0xfd8d88b0
  422b1f:	cmp    bl,BYTE PTR [ebp+0x695d2853]
  422b25:	test   al,0x98
  422b27:	daa    
  422b28:	(bad)  
  422b29:	cmp    ebp,DWORD PTR [ecx]
  422b2b:	imul   esi,DWORD PTR [ecx+eax*1+0x2260fecf],0xe6fb2b3a
  422b36:	daa    
  422b37:	or     bh,BYTE PTR [esi+0x64]
  422b3a:	into   
  422b3b:	dec    edx
  422b3c:	shl    BYTE PTR fs:[esi],0x1c
  422b40:	and    al,0x12
  422b42:	cmp    edx,ebp
  422b44:	pop    ecx
  422b45:	inc    eax
  422b46:	adc    dl,BYTE PTR ds:0x91e017e6
  422b4c:	popf   
  422b4d:	xor    dh,bh
  422b4f:	fstp   DWORD PTR [edx-0x79f2b7d7]
  422b55:	int    0xbb
  422b57:	scas   eax,DWORD PTR es:[edi]
  422b58:	gs cdq 
  422b5a:	xchg   edi,eax
  422b5b:	sub    al,BYTE PTR [edi]
  422b5d:	pop    ds
  422b5e:	or     cl,BYTE PTR [esi-0x1e725c23]
  422b64:	or     al,0x5
  422b66:	jmp    0xa3879b38
  422b6b:	mov    eax,ds:0xe916a75e
  422b70:	mov    eax,0xe536368d
  422b75:	aas    
  422b76:	xor    eax,0x41e72824
  422b7b:	data16 sbb al,BYTE PTR [edi]
  422b7e:	cmc    
  422b7f:	mov    bl,0x2e
  422b81:	pop    ds
  422b82:	jp     0x422b1d
  422b84:	es js  0x422be3
  422b87:	into   
  422b88:	mov    WORD PTR [edx-0x3fa74f1c],?
  422b8e:	fnstsw WORD PTR [esi]
  422b90:	loop   0x422bdf
  422b92:	inc    DWORD PTR [edx+ecx*8]
  422b95:	(bad)  
  422b96:	icebp  
  422b97:	lock in eax,0xca
  422b9a:	dec    ebx
  422b9b:	cmc    
  422b9c:	and    eax,0xf0bfa030
  422ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ba3:	outs   dx,DWORD PTR ds:[esi]
  422ba4:	jmp    0x422b71
  422ba6:	push   ecx
  422ba7:	sti    
  422ba8:	leave  
  422ba9:	jno    0x422b51
  422bab:	scas   eax,DWORD PTR es:[edi]
  422bac:	leave  
  422bad:	mov    dh,0x2d
  422baf:	retf   0x53f6
  422bb2:	sbb    al,0x41
  422bb4:	(bad)  
  422bb5:	retf   
  422bb6:	fstp   DWORD PTR [edi]
  422bb8:	pop    ecx
  422bb9:	lods   al,BYTE PTR ds:[esi]
  422bba:	mov    edi,ebx
  422bbc:	adc    BYTE PTR [edx],cl
  422bbe:	pushf  
  422bbf:	mov    BYTE PTR [edi+edx*8-0x6c1b22fd],bh
  422bc6:	into   
  422bc7:	ja     0x422b5b
  422bc9:	repz mov eax,ds:0xbc565792
  422bcf:	in     eax,0xf5
  422bd1:	fcmovnb st,st(1)
  422bd3:	jb     0x422baa
  422bd5:	fcomp  QWORD PTR [eax+0x37fbdbb9]
  422bdb:	ss in  al,dx
  422bdd:	or     eax,0x6e56fca8
  422be2:	xchg   ebx,eax
  422be3:	jmp    0x7834:0xd937cbd5
  422bea:	or     ecx,DWORD PTR [eax]
  422bec:	and    al,0x2
  422bee:	outs   dx,BYTE PTR ds:[esi]
  422bef:	pop    es
  422bf0:	mov    ebp,0x741c130
  422bf5:	mov    esi,0x17bd8627
  422bfa:	pop    esp
  422bfb:	xor    al,0x73
  422bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bfe:	pop    edi
  422bff:	loopne 0x422bb3
  422c01:	test   al,0x6
  422c03:	inc    ebp
  422c04:	int    0xce
  422c06:	xchg   DWORD PTR [edx-0x7e],edx
  422c09:	inc    esi
  422c0a:	int    0xa3
  422c0c:	das    
  422c0d:	fs mov edi,0xf3f9fae6
  422c13:	data16 ja 0x422bff
  422c16:	jns    0x422c6f
  422c18:	mov    esp,0x7ee714c5
  422c1d:	xor    dh,BYTE PTR [edx]
  422c1f:	push   eax
  422c20:	popf   
  422c21:	jg     0x422c39
  422c23:	xor    ecx,DWORD PTR [edx]
  422c25:	jmp    0x80e0:0xce509fdf
  422c2c:	inc    DWORD PTR [eax]
	...
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    edx,DWORD PTR ds:0xae5125b6
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	sti    
  422c4f:	add    DWORD PTR [eax],eax
  422c51:	add    bl,ch
  422c53:	pop    edx
  422c54:	rcl    BYTE PTR ds:0x2a0d6c21,cl
  422c5a:	(bad)  
  422c5b:	xlat   BYTE PTR ds:[ebx]
  422c5c:	and    DWORD PTR [ebx+0x16],ebp
  422c5f:	push   ss
  422c60:	add    DWORD PTR [edi+0x56],ebx
  422c63:	hlt    
  422c64:	pop    edx
  422c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c66:	hlt    
  422c67:	cs (bad) 
  422c69:	sub    BYTE PTR [edx],bh
  422c6b:	test   eax,0xacaa8c06
  422c70:	ficom  DWORD PTR [edx]
  422c72:	imul   DWORD PTR cs:[esi+0x56b5c31c]
  422c79:	cdq    
  422c7a:	adc    eax,0xa7da82f5
  422c7f:	jmp    0xf9a444e4
  422c84:	js     0x422cea
  422c86:	mov    cl,0xab
  422c88:	mov    ebx,ecx
  422c8a:	test   eax,0x2d091b9d
  422c8f:	jno    0x422c78
  422c91:	das    
  422c92:	pop    es
  422c93:	cmp    ebp,ebx
  422c95:	in     al,0x42
  422c97:	lahf   
  422c98:	sti    
  422c99:	jnp    0x422ccf
  422c9b:	lea    edi,[esi+0x38]
  422c9e:	pop    eax
  422c9f:	or     DWORD PTR [ebp-0x59],ebx
  422ca2:	fistp  DWORD PTR [ebp+0x48]
  422ca5:	lea    ecx,ss:[ebx]
  422ca8:	jg     0x422d29
  422caa:	add    esp,0x14e16971
  422cb0:	jecxz  0x422d25
  422cb2:	fcom   QWORD PTR [ebx+0x59]
  422cb5:	out    0xc9,eax
  422cb7:	call   0xb9440857
  422cbc:	push   0x28
  422cbe:	les    esi,FWORD PTR [edx]
  422cc0:	or     DWORD PTR [edx+0xa],0xffffffb4
  422cc4:	jb     0x422d32
  422cc6:	sub    esp,DWORD PTR ds:0x5260785e
  422ccc:	push   eax
  422ccd:	aad    0x8e
  422ccf:	pushf  
  422cd0:	neg    DWORD PTR [ecx]
  422cd2:	sar    BYTE PTR ds:0xd720307c,1
  422cd8:	in     al,dx
  422cd9:	aad    0x1d
  422cdb:	in     eax,0x5d
  422cdd:	xchg   edi,eax
  422cde:	sti    
  422cdf:	ret    0xe068
  422ce2:	adc    edx,DWORD PTR [edi+0x558e8cfb]
  422ce8:	or     BYTE PTR [ebx-0x33555bbb],ch
  422cee:	dec    esi
  422cef:	add    BYTE PTR [edx+0x6d],bh
  422cf2:	xchg   ecx,eax
  422cf3:	add    al,0x92
  422cf5:	aad    0x2e
  422cf7:	daa    
  422cf8:	push   cs
  422cf9:	push   ecx
  422cfa:	xor    eax,DWORD PTR [ebx]
  422cfc:	xchg   edi,eax
  422cfd:	jecxz  0x422d2d
  422cff:	add    al,BYTE PTR [ebp-0x58]
  422d02:	jno    0x422d0c
  422d04:	test   ah,0xf5
  422d07:	dec    ebx
  422d08:	mov    edx,0xf9c23ffd
  422d0d:	(bad)  
  422d0e:	icebp  
  422d0f:	shl    BYTE PTR [edx-0x6bbbb6fc],cl
  422d15:	fldcw  WORD PTR [esi-0x7b]
  422d18:	push   eax
  422d19:	mov    ebx,0xd797ed39
  422d1e:	pop    es
  422d1f:	dec    ebp
  422d20:	pop    ecx
  422d21:	rcr    BYTE PTR [edx],0xbb
  422d24:	jmp    0x422cd8
  422d26:	arpl   di,sp
  422d28:	dec    edx
  422d29:	sub    ah,BYTE PTR [ebx+0x93f67f8]
  422d2f:	inc    eax
  422d30:	int    0x9
  422d32:	mov    al,ds:0x94d92b59
  422d37:	into   
  422d38:	sahf   
  422d39:	mov    esi,0x39fe1012
  422d3e:	jmp    0x6f68:0x6e70ca9e
  422d45:	xchg   esi,eax
  422d46:	stc    
  422d47:	push   ss
  422d48:	adc    edi,DWORD PTR [ebx+0x7fd21c12]
  422d4e:	imul   edx,DWORD PTR [eax-0x533e032],0xffffffb0
  422d55:	lea    edx,[edi]
  422d57:	data16 fsub QWORD PTR [eax-0x21]
  422d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d5c:	imul   ebp,DWORD PTR ds:0x9ce48bcb,0xffffffd6
  422d63:	dec    ecx
  422d64:	ss int3 
  422d66:	das    
  422d67:	add    eax,0xf5ce9f26
  422d6c:	jle    0x422dd0
  422d6e:	ret    
  422d6f:	mov    eax,esp
  422d71:	loop   0x422d8a
  422d73:	ja     0x422d05
  422d75:	std    
  422d76:	bnd jne 0x422d0e
  422d79:	add    esp,DWORD PTR [edi-0x36]
  422d7c:	pop    eax
  422d7d:	xor    bl,al
  422d7f:	sbb    eax,0x54a35066
  422d84:	xchg   DWORD PTR [esi],edi
  422d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d87:	(bad)  
  422d88:	push   edi
  422d89:	xor    esi,DWORD PTR [ebp+0x9af4d85]
  422d8f:	mov    bl,0x15
  422d91:	daa    
  422d92:	add    al,0x14
  422d94:	loop   0x422de6
  422d96:	jnp    0x422e00
  422d98:	(bad)  
  422d9a:	or     DWORD PTR [ebp+0x315e69a9],edx
  422da0:	call   0xb7c59aba
  422da5:	addr16 dec ebp
  422da7:	iret   
  422da8:	imul   ebp,ebp,0xe7ace150
  422dae:	cwde   
  422daf:	xchg   esp,eax
  422db0:	push   edx
  422db1:	aas    
  422db2:	cmp    eax,0xa12e52e9
  422db7:	repz or edx,edi
  422dba:	pop    ebx
  422dbb:	pop    edi
  422dbc:	gs add eax,0x6f0e526f
  422dc2:	mov    eax,ds:0xf1295deb
  422dc7:	mov    ebx,0xbf680024
  422dcc:	pop    ss
  422dcd:	sbb    al,0x48
  422dcf:	or     edi,DWORD PTR [eax]
  422dd1:	mov    eax,0x9b4e0b78
  422dd6:	fld    TBYTE PTR [esi]
  422dd8:	push   0x11ad6929
  422ddd:	retf   
  422dde:	cli    
  422ddf:	iret   
  422de0:	scas   eax,DWORD PTR es:[edi]
  422de1:	jle    0x422dca
  422de3:	scas   eax,DWORD PTR es:[edi]
  422de4:	or     cl,BYTE PTR [ebx]
  422de6:	fldcw  WORD PTR [edi-0x14]
  422de9:	lds    esp,FWORD PTR [ebx+0x3b]
  422dec:	out    dx,al
  422ded:	dec    edx
  422dee:	mov    cl,0xa3
  422df0:	mov    dl,0x71
  422df2:	ficomp WORD PTR [ebp+0x64]
  422df5:	scas   eax,DWORD PTR es:[edi]
  422df6:	jg     0x422e5c
  422df8:	or     bl,ah
  422dfa:	out    dx,al
  422dfb:	dec    ecx
  422dfc:	call   0xb5f3:0xe805638e
  422e03:	leave  
  422e04:	scas   eax,DWORD PTR es:[edi]
  422e05:	test   DWORD PTR [edi],esp
  422e07:	sti    
  422e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e09:	mov    dh,0xa7
  422e0b:	fistp  WORD PTR [edx-0x53]
  422e0e:	jle    0x422dbe
  422e10:	test   DWORD PTR [ebx],eax
  422e12:	daa    
  422e13:	int3   
  422e14:	xchg   esi,eax
  422e15:	cld    
  422e16:	jg     0x422e71
  422e18:	dec    ebp
  422e19:	add    al,0xee
  422e1b:	xchg   edx,eax
  422e1c:	pushf  
  422e1d:	mov    ah,0x79
  422e1f:	fwait
  422e20:	aas    
  422e21:	shl    BYTE PTR [ecx],0xdd
  422e24:	xchg   BYTE PTR [ebx-0x24],ch
  422e27:	pop    ds
  422e28:	and    BYTE PTR [eax],dl
  422e2a:	out    0x5f,eax
  422e2c:	xchg   ebp,eax
  422e2d:	push   esi
  422e2e:	sar    DWORD PTR [esi-0x10],cl
  422e31:	(bad)  
  422e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e33:	jle    0x422e7d
  422e35:	xchg   esp,eax
  422e36:	loope  0x422e03
  422e38:	mov    al,0xd5
  422e3a:	adc    edi,DWORD PTR [ecx]
  422e3c:	push   esi
  422e3d:	hlt    
  422e3e:	addr16 popa 
  422e40:	cmp    al,dh
  422e42:	inc    esp
  422e43:	mov    ah,0x5a
  422e45:	arpl   WORD PTR [eax+0xefe5b18],bx
  422e4b:	test   eax,0x68
	...
  422e58:	add    BYTE PTR [eax],al
  422e5a:	stc    
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x5a2dfec4]
  422e68:	adc    al,BYTE PTR [ebx+0x1a8a9]
  422e6e:	sti    
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [esp+ecx*4],ch
  422e74:	mov    dl,0x35
  422e76:	scas   al,BYTE PTR es:[edi]
  422e77:	jne    0x422e2a
  422e79:	leave  
  422e7a:	mov    cl,bh
  422e7c:	sub    eax,0x690f3581
  422e81:	int    0xf3
  422e83:	sub    eax,eax
  422e85:	mov    ah,0xf5
  422e87:	sub    dl,BYTE PTR [edi-0x4c]
  422e8a:	aas    
  422e8b:	enter  0x8fc2,0xa4
  422e8f:	sbb    BYTE PTR [eax-0x31],ch
  422e92:	push   ebx
  422e93:	mov    ecx,0xf0da9f13
  422e98:	outs   dx,DWORD PTR ds:[esi]
  422e99:	loope  0x422e54
  422e9b:	call   0xa0ae7c30
  422ea0:	dec    ebp
  422ea1:	add    dh,0xf7
  422ea4:	xchg   esi,eax
  422ea5:	repz xchg esi,eax
  422ea7:	xchg   ebx,eax
  422ea8:	loope  0x422e38
  422eaa:	mov    BYTE PTR es:[ecx-0x74],ch
  422eae:	in     eax,0x32
  422eb0:	xchg   DWORD PTR [ecx],edi
  422eb2:	call   0xa211:0xd61c5e45
  422eb9:	cwde   
  422eba:	pop    edi
  422ebb:	xchg   esi,eax
  422ebc:	sub    DWORD PTR [esi-0x69288794],edx
  422ec2:	outs   dx,DWORD PTR ds:[esi]
  422ec3:	aad    0x39
  422ec5:	jmp    0xd356efdf
  422eca:	xor    BYTE PTR [edi-0xb0c77d],ah
  422ed0:	(bad)  
  422ed1:	inc    si
  422ed3:	xor    eax,0x5265d79a
  422ed8:	sbb    BYTE PTR [edx-0x3c],cl
  422edb:	call   0xd7d1:0x53ad5c19
  422ee2:	add    ah,BYTE PTR [ecx-0x40]
  422ee5:	jg     0x422eb6
  422ee7:	push   ecx
  422ee8:	or     eax,0x9d168174
  422eed:	nop
  422eee:	add    BYTE PTR [eax],bl
  422ef0:	imul   ecx,DWORD PTR [ebx+0x333fd57f],0xd
  422ef7:	inc    ecx
  422ef8:	aam    0x53
  422efa:	mov    ds:0x8103cbd5,eax
  422eff:	and    BYTE PTR [eax+0x3e725359],bl
  422f05:	scas   al,BYTE PTR es:[edi]
  422f06:	mov    BYTE PTR [edi],bl
  422f08:	or     al,0x1a
  422f0a:	retf   
  422f0b:	mov    bl,0x4d
  422f0d:	and    eax,0xc34ac843
  422f12:	lds    ecx,FWORD PTR [esi-0x2ef8618f]
  422f18:	push   esi
  422f19:	xlat   BYTE PTR ds:[ebx]
  422f1a:	dec    esp
  422f1b:	retf   
  422f1c:	ja     0x422f68
  422f1e:	ror    BYTE PTR [ecx+0x2c9058bb],1
  422f24:	ftst   
  422f26:	mov    DWORD PTR [ebp+0x3f],esi
  422f29:	pusha  
  422f2a:	jno    0x422f4e
  422f2c:	out    0xff,eax
  422f2e:	jmp    0x422fa3
  422f30:	and    DWORD PTR [edx-0x72d112ab],ebx
  422f36:	inc    edi
  422f37:	shl    DWORD PTR [edi-0x6e],1
  422f3a:	(bad)  
  422f3c:	shl    BYTE PTR gs:[eax-0x54],cl
  422f40:	stc    
  422f41:	idiv   ecx
  422f43:	out    dx,al
  422f44:	push   ebp
  422f45:	arpl   cx,sp
  422f47:	sahf   
  422f48:	cmp    bh,BYTE PTR [ecx+0x44]
  422f4b:	and    dh,cl
  422f4d:	push   ss
  422f4e:	out    dx,eax
  422f4f:	xlat   BYTE PTR ds:[ebx]
  422f50:	sahf   
  422f51:	(bad)  
  422f52:	(bad)  
  422f53:	inc    esp
  422f54:	and    BYTE PTR [ebx],ah
  422f56:	pop    esi
  422f57:	in     al,dx
  422f58:	pop    ecx
  422f59:	mov    esi,0xfe847858
  422f5e:	cmp    esi,DWORD PTR [eax-0x30]
  422f61:	(bad)  
  422f62:	cmp    ebx,DWORD PTR [ebp+0x9]
  422f65:	push   edx
  422f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f67:	jb     0x422f58
  422f69:	(bad)  
  422f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6b:	xchg   BYTE PTR [ebx+0x3e],bl
  422f6e:	inc    ebx
  422f6f:	push   ss
  422f70:	cdq    
  422f71:	gs aad 0xd7
  422f74:	jecxz  0x422f21
  422f76:	sub    edi,DWORD PTR [ebx-0x18c57dbb]
  422f7c:	mov    ch,0xc5
  422f7e:	je     0x422f80
  422f80:	cmc    
  422f81:	aas    
  422f82:	fisttp DWORD PTR [esi-0x43be5166]
  422f88:	call   0x8322dfe6
  422f8d:	(bad)  
  422f8f:	loopne 0x422fc0
  422f91:	inc    esp
  422f92:	and    ebp,eax
  422f94:	push   ecx
  422f95:	out    0x1d,al
  422f97:	mov    ecx,0x3d2ea40a
  422f9c:	shr    BYTE PTR [ecx+edx*1-0x77fd94f2],0x51
  422fa4:	imul   ecx,DWORD PTR [eax+ecx*8+0xa],0x6e
  422fa9:	or     dh,ch
  422fab:	jns    0x422fcf
  422fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fae:	xor    eax,DWORD PTR [esi-0x7b28c5cf]
  422fb4:	arpl   WORD PTR [ebp+0x79fafda9],sp
  422fba:	imul   edx,DWORD PTR [edi-0x35],0xffffffd9
  422fbe:	cdq    
  422fbf:	xchg   esp,eax
  422fc0:	xchg   BYTE PTR [esi],ch
  422fc2:	adc    eax,0xe95fe6c1
  422fc7:	cwde   
  422fc8:	jecxz  0x422f56
  422fca:	mov    bh,BYTE PTR [eax+0x391112bb]
  422fd0:	mov    ebp,0xb88281b6
  422fd5:	arpl   WORD PTR [esi+ecx*4-0x2349a74],si
  422fdc:	push   es
  422fdd:	adc    BYTE PTR [ecx+ebx*1-0x24],ch
  422fe1:	cmp    eax,0x25c2ad7c
  422fe6:	aaa    
  422fe7:	out    0x62,al
  422fe9:	mov    edi,0xb0c602bf
  422fee:	in     eax,dx
  422fef:	and    al,0xab
  422ff1:	shl    DWORD PTR [ebx+0x63],cl
  422ff4:	mov    BYTE PTR [ecx+0x38],ah
  422ff7:	retf   0xa9ee
  422ffa:	or     bh,BYTE PTR [edx-0x39]
  422ffd:	jle    0x423072
  422fff:	dec    eax
  423000:	xchg   edx,eax
  423001:	cmp    DWORD PTR [ecx+0x6adab361],eax
  423007:	cmp    eax,0x1a4cc8e
  42300c:	mul    DWORD PTR [ebx-0x63]
  42300f:	scas   al,BYTE PTR es:[edi]
  423010:	fadd   DWORD PTR [edi]
  423012:	hlt    
  423013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423014:	jnp    0x422ffa
  423016:	add    eax,0xa124edad
  42301b:	stos   BYTE PTR es:[edi],al
  42301c:	push   ss
  42301d:	stc    
  42301e:	fwait
  42301f:	inc    ebp
  423020:	(bad)  [ecx]
  423022:	retf   
  423023:	ficomp WORD PTR [esi-0x21]
  423026:	ret    0x7107
  423029:	in     eax,0xa3
  42302b:	push   eax
  42302c:	jno    0x423052
  42302e:	dec    edi
  42302f:	(bad)  
  423030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423031:	add    dl,ch
  423033:	inc    eax
  423034:	inc    eax
  423035:	jns    0x423022
  423037:	add    al,0xbf
  423039:	sub    al,0xc7
  42303b:	and    bl,BYTE PTR [edi+0x13]
  42303e:	inc    ebp
  42303f:	xchg   BYTE PTR [esi-0x5b],cl
  423042:	sub    al,0x5e
  423044:	xchg   DWORD PTR [edi],edx
  423046:	sti    
  423047:	adc    eax,0xf0f27ba3
  42304c:	scas   eax,DWORD PTR es:[edi]
  42304d:	sahf   
  42304e:	mov    dh,BYTE PTR [eax-0x1a]
  423051:	and    ebx,esp
  423053:	shr    DWORD PTR [esp+ebp*2],1
  423056:	loope  0x422ff2
  423058:	int    0xde
  42305a:	(bad)  
  42305b:	addr16 cwde 
  42305d:	sbb    BYTE PTR [edi+0x25],ah
  423060:	cmp    eax,0x52e8e6c2
  423065:	xchg   ecx,eax
  423067:	imul   eax,DWORD PTR [ebx+0x186ab686],0x0
	...
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	cmp    dh,BYTE PTR [ebx+0x7a]
  423089:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42308b:	stos   BYTE PTR es:[edi],al
  42308c:	add    DWORD PTR [eax],eax
  42308e:	sti    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [eax],dl
  423093:	cld    
  423094:	adc    DWORD PTR [ecx-0x31422a67],ebp
  42309a:	adc    BYTE PTR [ebx],0x5a
  42309d:	test   DWORD PTR [esi+0x4f],ecx
  4230a0:	mov    dh,0x91
  4230a2:	and    esi,eax
  4230a4:	sub    ebp,DWORD PTR ds:0x676f2653
  4230aa:	aam    0x4a
  4230ac:	cmc    
  4230ad:	arpl   WORD PTR [edi+0x6ed4e1bf],di
  4230b3:	and    BYTE PTR [esi],dl
  4230b5:	adc    al,0xf1
  4230b7:	in     al,0xb1
  4230b9:	repnz inc esi
  4230bb:	fs adc dl,dh
  4230be:	add    BYTE PTR [ecx],0xf8
  4230c1:	xor    DWORD PTR [edx-0x2478ae26],eax
  4230c7:	lods   al,BYTE PTR ds:[esi]
  4230c8:	inc    esi
  4230c9:	fs mov bl,0xa1
  4230cc:	(bad)  
  4230cd:	nop
  4230ce:	dec    edi
  4230cf:	fwait
  4230d0:	(bad)  
  4230d1:	ficom  WORD PTR [edi-0x1e]
  4230d4:	cwde   
  4230d5:	cmp    DWORD PTR [ebx+0xc315f0c],esp
  4230db:	jmp    0x423086
  4230dd:	xchg   ecx,eax
  4230de:	jns    0x423154
  4230e0:	sbb    ch,BYTE PTR [edx+0x7be42465]
  4230e6:	jmp    0x5f81525d
  4230eb:	mov    BYTE PTR ss:[edi+eax*2-0xe7740b7],dl
  4230f3:	jb     0x4230d9
  4230f5:	and    esp,DWORD PTR [eax-0x5a4c3df9]
  4230fb:	inc    ecx
  4230fc:	test   DWORD PTR [ebx],ebx
  4230fe:	mov    BYTE PTR [edi-0x59],bh
  423101:	sbb    ah,bh
  423103:	(bad)  
  423104:	mov    ebx,0x99509785
  423109:	add    eax,0xf99894c4
  42310e:	and    BYTE PTR [ecx],bl
  423110:	cli    
  423111:	in     al,dx
  423112:	pop    edi
  423113:	sti    
  423114:	ret    0x8bf1
  423117:	fwait
  423118:	mov    ds:0x960dcc1,al
  42311d:	lods   eax,DWORD PTR ds:[esi]
  42311e:	aaa    
  42311f:	popf   
  423120:	or     eax,0x9688ab7c
  423125:	xchg   ecx,eax
  423126:	dec    ecx
  423127:	test   DWORD PTR [eax-0x5b],0xbdfe5ef5
  42312e:	push   cs
  42312f:	dec    esi
  423130:	xchg   esi,eax
  423131:	aad    0xca
  423133:	ror    ecx,0x11
  423136:	mov    al,ds:0x6ddb49fc
  42313b:	rcr    DWORD PTR [ebx+0x2916f638],0xb2
  423142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423143:	mov    BYTE PTR [esi],dl
  423145:	xor    esi,0x44
  423148:	push   ds
  423149:	pop    ebp
  42314a:	mov    edx,0x4b2918a6
  42314f:	rcr    BYTE PTR [ebp+0x7533af6c],cl
  423155:	mov    DWORD PTR [edx+ebp*1-0x22],esi
  423159:	or     edx,DWORD PTR [ebp-0x4e0960c5]
  42315f:	mov    ch,0x4a
  423161:	mov    eax,ds:0x40043de9
  423166:	pop    ss
  423167:	xor    al,0x2c
  42316a:	lods   eax,DWORD PTR ds:[esi]
  42316b:	lahf   
  42316c:	pinsrw mm0,WORD PTR [edi+0x1c],0x5
  423171:	sbb    edi,DWORD PTR [ecx-0x7b8838dd]
  423177:	psubb  mm5,QWORD PTR [eax]
  42317a:	rcl    DWORD PTR [ecx],cl
  42317c:	daa    
  42317d:	out    dx,eax
  42317e:	xor    BYTE PTR [ecx+0x7f],bh
  423181:	arpl   WORD PTR [ecx-0x13],ax
  423184:	fidiv  WORD PTR [ecx+0x3c]
  423187:	xchg   edi,eax
  423188:	ret    0xdd1c
  42318b:	sbb    eax,0x4389f413
  423190:	cld    
  423191:	and    eax,0xab19c15b
  423196:	pop    esi
  423197:	push   ebp
  423198:	inc    eax
  423199:	je     0x423199
  42319b:	das    
  42319c:	iret   
  42319d:	(bad)  
  42319e:	fs pop eax
  4231a0:	sub    ch,BYTE PTR [ecx]
  4231a2:	push   edi
  4231a3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231a5:	test   BYTE PTR [esi+0xa],cl
  4231a8:	int3   
  4231a9:	test   al,0xeb
  4231ab:	scas   eax,DWORD PTR es:[edi]
  4231ac:	push   ecx
  4231ad:	in     al,dx
  4231ae:	add    al,0x7
  4231b0:	push   ebp
  4231b1:	repnz cld 
  4231b3:	ins    DWORD PTR es:[edi],dx
  4231b4:	xor    al,0x64
  4231b6:	add    BYTE PTR [ebx-0x52],cl
  4231b9:	cdq    
  4231ba:	aad    0x4d
  4231bc:	jmp    0xe38a:0x24edf19e
  4231c3:	and    eax,0x53ffeb77
  4231c8:	es inc ebx
  4231ca:	in     al,dx
  4231cb:	iret   
  4231cc:	xchg   BYTE PTR [ebx],ch
  4231ce:	call   0xae685bc3
  4231d3:	jp     0x423241
  4231d5:	mov    al,ds:0x904c488c
  4231da:	mov    bl,0xaa
  4231dc:	(bad)  
  4231dd:	xchg   edx,eax
  4231de:	repnz xor al,0x22
  4231e1:	stos   BYTE PTR es:[edi],al
  4231e2:	mov    BYTE PTR [edx-0x30cd027],cl
  4231e8:	lods   al,BYTE PTR ds:[esi]
  4231e9:	pop    eax
  4231ea:	mov    ah,0xd6
  4231ec:	dec    ecx
  4231ed:	adc    dh,BYTE PTR [edi]
  4231ef:	es cld 
  4231f1:	add    DWORD PTR [ebp+ecx*4-0x73c7d1d1],ebx
  4231f8:	inc    edi
  4231f9:	int    0x58
  4231fb:	xchg   DWORD PTR [ecx-0x3c],ecx
  4231fe:	push   ss
  4231ff:	push   ds
  423200:	sub    al,0xce
  423202:	mov    edx,0xf66d181b
  423207:	and    ebp,DWORD PTR [ebp+0x3b]
  42320a:	in     al,dx
  42320b:	outs   dx,DWORD PTR ds:[esi]
  42320c:	cmp    DWORD PTR [eax-0x5a7face8],ebp
  423212:	xchg   esp,eax
  423213:	sbb    DWORD PTR [ecx+eiz*4-0x14],ebx
  423217:	xor    ebx,esp
  423219:	aaa    
  42321a:	hlt    
  42321b:	mov    DWORD PTR [esi+0x119468db],eax
  423221:	psrlq  mm1,QWORD PTR [ebp+0x3fce9f60]
  423228:	dec    edi
  423229:	rol    BYTE PTR [eax+0x154dd0ef],0x57
  423230:	dec    ebp
  423231:	and    al,0x4
  423233:	dec    esi
  423234:	fsub   DWORD PTR [ebx-0xc858367]
  42323a:	cs out 0xd,eax
  42323d:	and    esp,ebx
  42323f:	mov    edi,DWORD PTR [ecx]
  423241:	scas   al,BYTE PTR es:[edi]
  423242:	jbe    0x423297
  423244:	inc    edi
  423245:	rcr    DWORD PTR [ebx],cl
  423247:	jne    0x423216
  423249:	retf   
  42324a:	jne    0x423229
  42324c:	xor    BYTE PTR [ecx-0x243fc914],bl
  423252:	lea    edx,ds:0x46306ae6
  423258:	jle    0x4231de
  42325a:	int    0xab
  42325c:	xchg   edx,eax
  42325d:	dec    edx
  42325e:	das    
  42325f:	push   cs
  423260:	adc    eax,ebp
  423262:	add    al,0xf9
  423264:	jp     0x4232c6
  423266:	sbb    ecx,ecx
  423268:	cli    
  423269:	and    dh,BYTE PTR [eax]
  42326b:	ss ds mov di,0xeecb
  423271:	dec    DWORD PTR [esi]
  423273:	ror    DWORD PTR [esp+eax*4-0x18],cl
  423277:	pop    edx
  423278:	aas    
  423279:	pop    esp
  42327a:	add    DWORD PTR [esi+edi*8],ebp
  42327d:	fldcw  WORD PTR [edx]
  42327f:	sub    al,0x6c
  423281:	push   ebp
  423282:	aad    0x12
  423284:	cmp    DWORD PTR [edx-0x5d],edx
  423287:	or     al,0xb5
  423289:	pop    ebp
  42328a:	xor    eax,0xb3b2
	...
  423297:	add    BYTE PTR [eax],al
  423299:	add    BYTE PTR [ebx+0x41],al
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	push   edx
  4232a7:	jmp    0x1:0xac9f664c
  4232ae:	sti    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    BYTE PTR [edx+0x12eb831a],ch
  4232b7:	rol    BYTE PTR ds:0x395e5401,1
  4232bd:	lds    edx,FWORD PTR [esi]
  4232bf:	ficom  DWORD PTR [ecx-0x47aa1812]
  4232c5:	int    0xb6
  4232c7:	adc    DWORD PTR [edi],esi
  4232c9:	je     0x4232d2
  4232cb:	call   0xa9961347
  4232d0:	jmp    0xb48cab4
  4232d5:	or     edi,DWORD PTR [ecx+0x49c3db2d]
  4232db:	stos   BYTE PTR es:[edi],al
  4232dc:	aam    0xe0
  4232de:	fs xchg esp,eax
  4232e0:	stos   DWORD PTR es:[edi],eax
  4232e1:	cmp    esi,DWORD PTR [edi-0x21d960e3]
  4232e7:	ja     0x4232e7
  4232e9:	mov    ch,0xee
  4232eb:	mov    gs,WORD PTR [edx]
  4232ed:	xchg   edi,eax
  4232ee:	fs mov esi,0xde244fcf
  4232f4:	lahf   
  4232f5:	gs inc eax
  4232f7:	push   edi
  4232f8:	dec    ebx
  4232f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232fa:	cmc    
  4232fb:	add    DWORD PTR [edi],eax
  4232fd:	adc    DWORD PTR [esi+eiz*2+0x5d6b6d1],eax
  423304:	or     dl,BYTE PTR [ecx*2+0x2decd553]
  42330b:	xchg   ebp,eax
  42330c:	add    al,ch
  42330e:	xchg   edi,eax
  42330f:	or     BYTE PTR [ecx+0x68da4ac5],ch
  423315:	loop   0x4232dd
  423317:	psubusb mm2,QWORD PTR [esi+0x37]
  42331b:	jp     0x423385
  42331d:	push   cs
  42331e:	mov    edx,ebp
  423320:	in     eax,0x6d
  423322:	inc    ecx
  423323:	push   edi
  423324:	dec    ecx
  423325:	pop    ebx
  423326:	mov    dh,dh
  423328:	jno    0x4232e9
  42332a:	outs   dx,BYTE PTR ds:[esi]
  42332b:	mov    WORD PTR [esi],?
  42332d:	popa   
  42332e:	or     BYTE PTR [edx+0x25e4cd26],cl
  423334:	push   DWORD PTR [ebx-0x2c]
  423337:	mov    esi,0xf73784b2
  42333c:	stc    
  42333d:	pop    eax
  42333e:	xchg   ebx,eax
  42333f:	imul   edi,edx
  423342:	adc    BYTE PTR [edi],dl
  423344:	test   esp,esi
  423346:	fisubr WORD PTR [ecx]
  423348:	jmp    0x423376
  42334a:	mov    dh,0x18
  42334c:	les    edx,FWORD PTR [edx-0x57]
  42334f:	sub    bh,BYTE PTR [ebp+ebp*1-0x6f]
  423353:	pushf  
  423354:	retf   
  423355:	fxtract 
  423357:	sub    bh,cl
  423359:	addr16 cs adc al,0x6d
  42335d:	xor    eax,0xda7fc069
  423362:	sub    al,0x74
  423364:	sti    
  423365:	jae    0x42335c
  423367:	or     DWORD PTR [ecx],ebx
  423369:	out    0x69,eax
  42336b:	ret    0x73d7
  42336e:	sub    al,0xec
  423370:	mov    eax,0x860a7730
  423375:	push   edi
  423376:	and    bl,BYTE PTR [eax-0x60]
  423379:	add    ebx,DWORD PTR [ecx+0x63]
  42337c:	xor    edi,DWORD PTR [ebx]
  42337e:	repnz lods eax,DWORD PTR ds:[esi]
  423380:	ins    BYTE PTR es:[edi],dx
  423381:	sbb    eax,0xd0daea22
  423386:	push   ecx
  423387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423388:	add    eax,0x14a5f2f5
  42338d:	jo     0x423371
  42338f:	paddusb mm0,mm3
  423392:	mov    esi,0x94c951be
  423397:	hlt    
  423398:	jne    0x423348
  42339a:	or     ebx,esi
  42339c:	push   ebp
  42339d:	neg    DWORD PTR [edx+edx*1]
  4233a0:	sub    DWORD PTR [eax-0x27],ecx
  4233a3:	add    al,0xfc
  4233a5:	mov    edi,0x25cc4b6b
  4233aa:	ret    
  4233ab:	outs   dx,BYTE PTR ds:[esi]
  4233ac:	dec    ecx
  4233ad:	cmp    dl,ch
  4233af:	mov    ebp,0x419a2262
  4233b4:	nop
  4233b5:	adc    BYTE PTR [edx+0x4],0xcb
  4233b9:	je     0x4233cd
  4233bb:	mov    cl,0x51
  4233bd:	pop    ebp
  4233be:	jno    0x423343
  4233c0:	jle    0x4233da
  4233c2:	cld    
  4233c3:	sbb    ebp,DWORD PTR [esi]
  4233c5:	mov    eax,ds:0x2c723663
  4233ca:	mov    ch,0xa5
  4233cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233cd:	jb     0x42342e
  4233cf:	mov    ebp,0xf9acb4e8
  4233d4:	push   ss
  4233d5:	xchg   esp,eax
  4233d6:	jg     0x423363
  4233d8:	in     al,0x4f
  4233da:	adc    DWORD PTR [edi+0x3c],esp
  4233dd:	shl    dh,1
  4233df:	xchg   edx,eax
  4233e0:	ins    DWORD PTR es:[edi],dx
  4233e1:	test   eax,0x35bff4ec
  4233e6:	and    DWORD PTR [ebp-0x7a],edi
  4233e9:	add    cl,cl
  4233eb:	adc    cl,BYTE PTR [ebx-0x71]
  4233ee:	ds sahf 
  4233f0:	xor    al,0x4f
  4233f2:	push   ss
  4233f3:	mov    al,ds:0xf07319fb
  4233f8:	stc    
  4233f9:	out    0x3f,al
  4233fb:	mov    al,ds:0xf35f4aff
  423400:	dec    esp
  423401:	jbe    0x423411
  423403:	in     al,0xf8
  423405:	xchg   ebx,eax
  423406:	xchg   esp,eax
  423407:	hlt    
  423408:	push   edx
  423409:	mov    dl,BYTE PTR [edi-0x113048a4]
  42340f:	(bad)  
  423410:	(bad)  
  423411:	dec    eax
  423412:	imul   BYTE PTR [edx+0x53]
  423415:	iret   
  423416:	icebp  
  423417:	and    DWORD PTR [edi+0x6c3b71ca],eax
  42341d:	push   edx
  42341e:	cli    
  42341f:	mov    ebp,0x998dc7d
  423424:	aaa    
  423425:	rcr    BYTE PTR ds:0x7475ab25,1
  42342b:	mov    dl,bl
  42342d:	retf   0x926d
  423430:	cld    
  423431:	es ret 0x4d09
  423435:	jecxz  0x42340e
  423437:	xchg   BYTE PTR [edx-0x10456962],al
  42343d:	and    al,0x9c
  42343f:	lock leave 
  423441:	je     0x4234bb
  423443:	es dec ecx
  423445:	or     edi,eax
  423447:	xor    ebx,DWORD PTR [edx]
  423449:	mov    dh,0x11
  42344b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42344c:	call   0x524e:0xe61974d8
  423453:	shl    BYTE PTR [ecx+0x3518cb78],cl
  423459:	pop    es
  42345a:	fist   WORD PTR [ebp-0x1dc2f001]
  423460:	push   ecx
  423461:	pop    ebx
  423462:	dec    eax
  423463:	jg     0x423489
  423465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423466:	test   eax,0x40ec1a8
  42346b:	dec    ecx
  42346c:	popa   
  42346d:	lods   al,BYTE PTR ds:[esi]
  42346e:	jecxz  0x4234ef
  423470:	dec    edi
  423471:	in     al,0xba
  423473:	pop    edi
  423474:	lds    esi,FWORD PTR [edi]
  423476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423477:	jecxz  0x42345f
  423479:	xchg   edi,eax
  42347a:	fcomp  DWORD PTR [edi+0x3af83bf4]
  423480:	(bad)  
  423481:	pop    esi
  423482:	in     eax,dx
  423483:	outs   dx,BYTE PTR ds:[esi]
  423484:	and    DWORD PTR [esi],ecx
  423486:	(bad)  
  423487:	xor    BYTE PTR [eax-0x5d],ah
  42348a:	xor    DWORD PTR [esi+0x60d1ca58],0x7b
  423491:	in     eax,0xe2
  423493:	xor    DWORD PTR [esi+0x165fddb],edi
  423499:	loopne 0x4234c8
  42349b:	push   ebx
  42349c:	loop   0x423426
  42349e:	mov    ecx,edi
  4234a0:	imul   ebx,DWORD PTR [esi],0x2353431c
  4234a6:	mov    dh,0x42
  4234a8:	in     al,dx
  4234a9:	or     BYTE PTR [eax],0xa
  4234ac:	add    al,0x0
	...
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	push   esi
  4234c7:	ss dec eax
  4234c9:	aam    0x9a
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	sti    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [ebx],ch
  4234d3:	push   edi
  4234d4:	sbb    bh,dl
  4234d6:	sahf   
  4234d7:	jae    0x91573c41
  4234dd:	outs   dx,BYTE PTR ds:[esi]
  4234de:	push   es
  4234df:	add    eax,0xef4724b8
  4234e4:	jecxz  0x423475
  4234e6:	les    ebp,FWORD PTR [esi-0x1]
  4234e9:	jo     0x42354e
  4234eb:	es retf 0xeb24
  4234ef:	mov    dh,0xa0
  4234f1:	lods   al,BYTE PTR ds:[esi]
  4234f2:	inc    ebx
  4234f3:	bound  edx,QWORD PTR [eax+ecx*2]
  4234f6:	das    
  4234f7:	out    0xda,eax
  4234f9:	scas   al,BYTE PTR es:[edi]
  4234fa:	xchg   esp,eax
  4234fb:	mov    edi,0xb74a6810
  423500:	loope  0x42352e
  423502:	sbb    BYTE PTR [esi-0x78dba285],0xbe
  423509:	xor    DWORD PTR [esi-0x5c],0x6f635e1d
  423510:	xlat   BYTE PTR ds:[ebx]
  423511:	inc    DWORD PTR [ebp+0x56a238b7]
  423517:	lock dec esp
  423519:	inc    esp
  42351a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42351b:	into   
  42351c:	xor    ah,bl
  42351e:	push   0x53f0fba2
  423523:	mov    edx,DWORD PTR ds:0x711a8140
  423529:	ins    BYTE PTR es:[edi],dx
  42352a:	hlt    
  42352b:	sahf   
  42352c:	sbb    eax,DWORD PTR [ecx+edi*1+0x38]
  423530:	xor    eax,0x8da1c02a
  423535:	addr16 jno 0x423543
  423538:	lahf   
  423539:	adc    eax,0xbf513cf6
  42353e:	jbe    0x4234c1
  423540:	(bad)  
  423541:	int    0x51
  423543:	(bad)  
  423544:	out    0x90,al
  423546:	stc    
  423547:	sub    cl,BYTE PTR [edx-0x43]
  42354a:	ss mov ecx,0x113deca3
  423550:	and    DWORD PTR [edi],edx
  423552:	mov    ecx,0xf249aa1e
  423557:	ins    DWORD PTR es:[edi],dx
  423558:	retf   
  423559:	inc    ebx
  42355a:	retf   
  42355b:	hlt    
  42355c:	and    bh,0xd9
  42355f:	imul   esi,DWORD PTR [ebp-0x72],0xb86f3641
  423566:	fisttp QWORD PTR [edi-0x50]
  423569:	dec    edx
  42356a:	(bad)  
  42356b:	cs bound edi,QWORD PTR es:0x19c030e2
  423573:	push   edi
  423574:	cmp    al,0x94
  423576:	mov    WORD PTR [ebx+edi*1],?
  423579:	stos   BYTE PTR es:[edi],al
  42357a:	add    eax,0xa3bd3e9b
  42357f:	jp     0x4235f9
  423581:	jge    0x4235fa
  423583:	adc    eax,0xe5132eab
  423588:	mov    DWORD PTR [eax+0x3f61be13],edi
  42358e:	push   cs
  42358f:	enter  0x16c1,0xb9
  423593:	fild   QWORD PTR [eax+0x3b4957f2]
  423599:	push   esi
  42359a:	nop
  42359b:	xchg   ecx,eax
  42359c:	mov    edx,0x9e69d44f
  4235a1:	pusha  
  4235a2:	adc    eax,0xe9257fb4
  4235a7:	push   ebp
  4235a8:	fs pop eax
  4235aa:	push   ebx
  4235ab:	sahf   
  4235ac:	mov    dh,0x19
  4235ae:	or     ebp,DWORD PTR [esi+eiz*4-0x4b]
  4235b2:	aas    
  4235b3:	clc    
  4235b4:	and    BYTE PTR [esi+0x686320fb],dl
  4235ba:	std    
  4235bb:	repnz sub esi,DWORD PTR [edi-0x2eeb612]
  4235c2:	push   cs
  4235c3:	dec    edx
  4235c4:	stc    
  4235c5:	cwde   
  4235c6:	ror    DWORD PTR [edx-0x77],0xe2
  4235ca:	adc    bh,dh
  4235cc:	add    DWORD PTR [edi-0x32],edx
  4235cf:	xchg   ecx,eax
  4235d0:	xchg   dl,ch
  4235d2:	daa    
  4235d3:	pushf  
  4235d4:	inc    esp
  4235d5:	fcomip st,st(6)
  4235d7:	pop    ss
  4235d8:	outs   dx,BYTE PTR ds:[esi]
  4235d9:	push   0x163289b6
  4235de:	and    eax,0x2f3889fd
  4235e3:	sub    DWORD PTR [ebx],ecx
  4235e5:	sbb    dh,ah
  4235e7:	test   al,0xcf
  4235e9:	mov    ds:0x409dfcd4,eax
  4235ee:	rol    BYTE PTR [eax],1
  4235f0:	cs mov ch,0x94
  4235f3:	loope  0x423619
  4235f5:	in     al,0x34
  4235f7:	data16 cmp al,0x20
  4235fa:	out    0xa7,al
  4235fc:	ror    BYTE PTR [edi+ecx*8-0x71e759cf],cl
  423603:	outs   dx,BYTE PTR ds:[esi]
  423604:	push   ss
  423605:	cwde   
  423606:	stc    
  423607:	(bad)  
  423608:	sti    
  423609:	mov    esp,DWORD PTR [ebx+0x3b]
  42360c:	sbb    BYTE PTR [edi-0x6a839e99],0xdb
  423613:	and    BYTE PTR ds:0x11d01d47,ch
  423619:	jns    0x423654
  42361b:	in     eax,dx
  42361c:	(bad)  
  42361e:	(bad)  
  42361f:	mov    al,0x20
  423621:	sbb    edi,edx
  423623:	pop    eax
  423624:	aad    0x72
  423626:	mov    al,ds:0xb638001e
  42362b:	adc    bh,BYTE PTR [edi+0x5a]
  42362e:	jmp    0xb4f3:0xf9931125
  423635:	sub    DWORD PTR [ecx+0x7f],0x20
  423639:	jns    0x42360c
  42363b:	ds mov cl,0xcf
  42363e:	aam    0x95
  423640:	stc    
  423641:	mov    dh,0x95
  423643:	dec    eax
  423644:	add    DWORD PTR [edi+0x5a47b2c6],eax
  42364a:	and    eax,0x69916848
  42364f:	jmp    0x871a:0x4fc84d5
  423656:	xchg   esi,eax
  423657:	fmul   QWORD PTR [esi-0x21]
  42365a:	pop    ebp
  42365b:	jg     0x4236b9
  42365d:	sub    BYTE PTR [ecx-0x44],ch
  423660:	ins    DWORD PTR es:[edi],dx
  423661:	sub    cl,BYTE PTR [edi-0x2c8da1c7]
  423667:	pop    ebx
  423668:	xchg   edi,eax
  423669:	rcr    BYTE PTR [esi+eiz*4-0xa],cl
  42366d:	adc    BYTE PTR [edi+0x34],bh
  423670:	sbb    esp,DWORD PTR [ebx+0x1e]
  423673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423674:	leave  
  423675:	lock mov al,ds:0x752357bf
  42367b:	mov    al,ds:0xf0a7723a
  423680:	test   eax,0x548bfe5d
  423685:	das    
  423686:	int3   
  423687:	push   ebx
  423688:	cwde   
  423689:	or     esp,DWORD PTR [eax-0x595e10b5]
  42368f:	outs   dx,DWORD PTR ds:[esi]
  423690:	inc    esp
  423691:	mov    al,0xee
  423693:	pop    ebx
  423694:	mov    eax,0xecf29ec9
  423699:	mov    bl,0x48
  42369b:	(bad)  
  42369c:	xor    al,0x33
  42369e:	inc    esi
  42369f:	test   eax,esi
  4236a1:	ins    DWORD PTR es:[edi],dx
  4236a2:	push   edx
  4236a3:	mov    DWORD PTR [ebx-0x39537dc4],edi
  4236a9:	inc    ebp
  4236aa:	fwait
  4236ab:	pop    edx
  4236ac:	push   eax
  4236ad:	pop    es
  4236ae:	outs   dx,BYTE PTR ds:[esi]
  4236af:	pop    ebp
  4236b0:	dec    edx
  4236b1:	fbstp  TBYTE PTR [edx-0x45]
  4236b4:	xchg   ebx,eax
  4236b5:	adc    esp,ebp
  4236b7:	sbb    BYTE PTR [esi],ah
  4236b9:	shl    eax,0x15
  4236bc:	shr    ah,0x4e
  4236bf:	jno    0x4236c6
  4236c1:	push   0x1b
  4236c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c4:	push   eax
  4236c5:	mov    eax,ds:0xe9eb7697
  4236ca:	mov    edi,0xb1f9
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	adc    eax,0x95cafa8b
  4236eb:	mov    al,0x1
  4236ed:	add    bl,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    BYTE PTR [esi],ch
  4236f3:	ins    DWORD PTR es:[edi],dx
  4236f4:	test   DWORD PTR [esi+0x4d],eax
  4236f7:	add    eax,0x8cc5db00
  4236fc:	cdq    
  4236fd:	pop    edx
  4236fe:	dec    ebp
  4236ff:	mov    bh,0x4c
  423701:	stc    
  423702:	std    
  423703:	xor    dh,BYTE PTR [edx]
  423705:	cmp    al,0x6
  423707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423708:	sbb    al,0x7b
  42370a:	xor    DWORD PTR [eax],edi
  42370c:	fldcw  WORD PTR [ecx]
  42370e:	push   es
  42370f:	nop
  423710:	ret    0x84d4
  423713:	in     eax,dx
  423714:	jo     0x42376f
  423716:	lods   eax,DWORD PTR ds:[esi]
  423717:	pusha  
  423718:	mov    ebp,0x6f5fed36
  42371d:	dec    edx
  42371e:	cdq    
  42371f:	test   BYTE PTR [edi+ebx*8+0xf],al
  423723:	out    0x66,eax
  423725:	cmc    
  423726:	in     eax,dx
  423727:	(bad)  
  423728:	cmp    al,0x61
  42372a:	push   cs
  42372b:	push   0xff4ef8d0
  423730:	in     al,dx
  423731:	or     dh,al
  423733:	dec    ebp
  423734:	jns    0x423752
  423736:	xor    ah,dh
  423738:	push   es
  423739:	xchg   esi,eax
  42373a:	lods   al,BYTE PTR ds:[esi]
  42373b:	mov    ds:0xe53ab2d7,eax
  423740:	jp     0x4237b4
  423742:	stos   BYTE PTR es:[edi],al
  423743:	ror    DWORD PTR [ebp+0x24],1
  423746:	fdivr  st,st(0)
  423748:	jp     0x423722
  42374a:	xor    al,0xe4
  42374c:	out    dx,al
  42374d:	js     0x423755
  42374f:	xchg   edx,eax
  423750:	dec    esi
  423751:	test   BYTE PTR [eax+ebp*2+0x23],al
  423755:	inc    esp
  423756:	xor    eax,0x6a65b610
  42375b:	mov    ds:0xa3e34499,al
  423760:	jp     0x42379d
  423762:	pusha  
  423763:	inc    ebx
  423764:	ja     0x4236f1
  423766:	xchg   esp,eax
  423767:	jecxz  0x4236ef
  423769:	es in  al,dx
  42376b:	outs   dx,BYTE PTR ds:[esi]
  42376c:	and    ah,BYTE PTR [edi]
  42376e:	jge    0x4237e9
  423770:	(bad)  
  423772:	cmp    eax,0xfd7a2450
  423777:	outs   dx,BYTE PTR ds:[esi]
  423778:	mov    ebx,0x7df2fb71
  42377d:	mov    cl,0x6d
  42377f:	(bad)  
  423780:	js     0x423756
  423782:	jg     0x423794
  423784:	mov    eax,0x91ac633a
  423789:	fild   WORD PTR [eax-0x11]
  42378c:	popa   
  42378d:	sub    eax,0xdec35658
  423792:	popa   
  423793:	gs retf 
  423795:	lds    edi,FWORD PTR [edx]
  423797:	sub    eax,0xf766b91f
  42379c:	out    dx,eax
  42379d:	dec    esp
  42379e:	push   es
  42379f:	inc    ecx
  4237a0:	mov    cl,0x24
  4237a2:	cmc    
  4237a3:	ja     0x4237ee
  4237a5:	shl    DWORD PTR [ebp+0x7f33a27a],1
  4237ab:	rcl    BYTE PTR [ecx+0x2e],1
  4237ae:	(bad)  
  4237af:	mov    cl,0x51
  4237b1:	jb     0x423757
  4237b3:	les    esp,FWORD PTR [esi]
  4237b5:	push   0xcd2c9e20
  4237ba:	add    ch,BYTE PTR [ecx+0x23385e2f]
  4237c0:	sar    BYTE PTR [ebx],0xc0
  4237c3:	fxch   st(0)
  4237c5:	jno    0x4237cb
  4237c7:	lea    edx,[esi-0x20d937a]
  4237cd:	xor    bh,dl
  4237cf:	das    
  4237d0:	and    BYTE PTR [edx],cl
  4237d2:	dec    esi
  4237d3:	mov    ecx,0xe4653a7f
  4237d8:	fcomp  QWORD PTR [edi]
  4237da:	xchg   ecx,eax
  4237db:	into   
  4237dc:	mov    es,edx
  4237de:	sbb    al,ch
  4237e0:	mov    WORD PTR [ebx+0x30],fs
  4237e3:	sub    DWORD PTR [ecx-0x1e],ebp
  4237e6:	xlat   BYTE PTR ds:[ebx]
  4237e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237e8:	dec    ebx
  4237e9:	xor    BYTE PTR [esi+0x2cbd2f5],0x1f
  4237f0:	jg     0x423781
  4237f2:	(bad)  
  4237f3:	sbb    eax,0x1c5e8cca
  4237f8:	mov    ebp,0x3b24ad0
  4237fd:	jle    0x4237c3
  4237ff:	and    eax,0x7888e0d3
  423804:	sbb    eax,0x6f72e6b6
  423809:	iret   
  42380a:	xlat   BYTE PTR ds:[ebx]
  42380b:	jmp    0x2d7d:0xe473fcba
  423812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423813:	and    al,dh
  423815:	mov    bh,0x56
  423817:	xchg   DWORD PTR [ebx+ebp*4-0x2a],ebp
  42381b:	adc    al,0x26
  42381d:	sub    al,0x65
  42381f:	out    0x9b,eax
  423821:	inc    cx
  423823:	adc    BYTE PTR [edx-0x52],bh
  423826:	popf   
  423827:	je     0x4238a3
  423829:	mov    al,0x63
  42382b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42382c:	jbe    0x4237c7
  42382e:	inc    eax
  42382f:	mov    ds:0xb03f203b,al
  423834:	mov    al,0x45
  423836:	int3   
  423837:	out    0xf4,al
  423839:	mov    dl,0xee
  42383b:	icebp  
  42383c:	jmp    0x4238b2
  42383e:	or     edx,eax
  423840:	shl    dh,0x22
  423843:	mov    dh,BYTE PTR [ecx+0x16]
  423846:	and    eax,0xb48db3ab
  42384b:	push   eax
  42384c:	push   ss
  42384d:	in     eax,dx
  42384e:	or     ch,BYTE PTR [edi+0x39]
  423851:	and    ebx,DWORD PTR [eax-0x6d]
  423854:	mov    ebx,0x2f839144
  423859:	into   
  42385a:	jbe    0x42387f
  42385c:	and    BYTE PTR [ebp-0x4d],al
  42385f:	inc    eax
  423860:	(bad)
  423864:	adc    al,BYTE PTR [edx+edi*8+0x44]
  423868:	data16 jecxz 0x423895
  42386b:	mov    edx,0xe6bfb59
  423870:	pop    ss
  423871:	jmp    0x85ce:0x404cad48
  423878:	paddusw mm5,QWORD PTR [ebp-0xcf4a2a]
  42387f:	mov    gs,WORD PTR [esi]
  423881:	pusha  
  423882:	int3   
  423883:	inc    edx
  423884:	test   edi,ebx
  423886:	mov    ebx,0x89c0f228
  42388b:	icebp  
  42388c:	shr    DWORD PTR [esi-0x5d],0xb0
  423890:	sub    eax,0x31ce471d
  423895:	inc    esp
  423896:	inc    edx
  423897:	cmp    DWORD PTR [ebp-0x69],esp
  42389a:	xor    edx,ebp
  42389c:	mov    DWORD PTR [edi],ecx
  42389e:	add    BYTE PTR [esp+ecx*4],ch
  4238a1:	test   BYTE PTR [ebx+0x79292c1b],bl
  4238a7:	adc    BYTE PTR [edi],bl
  4238a9:	es mov ecx,0x4ccda0e2
  4238af:	stos   DWORD PTR es:[edi],eax
  4238b0:	addr16 mov cl,0x2c
  4238b3:	stos   BYTE PTR es:[edi],al
  4238b4:	add    eax,0x79d8aaf2
  4238b9:	sub    DWORD PTR [esi-0x3da94a09],esi
  4238bf:	jno    0x4238e9
  4238c1:	into   
  4238c2:	out    0x3e,eax
  4238c4:	imul   esp,DWORD PTR [ebx+0x41d44855],0x67c290d9
  4238ce:	les    ebx,FWORD PTR [ecx-0x56]
  4238d1:	adc    al,0x41
  4238d3:	mov    cl,0xf8
  4238d5:	sahf   
  4238d6:	xchg   DWORD PTR [edx+0x5909e58d],ebx
  4238dc:	jmp    0xfb2693fd
  4238e1:	shl    BYTE PTR [ebx-0x39],1
  4238e4:	mov    ds:0xd47449ba,al
  4238e9:	fcom   st(2)
  4238eb:	outs   dx,DWORD PTR ds:[esi]
  4238ec:	(bad)  
	...
  4238f9:	add    ch,bl
  4238fb:	cmp    al,0x8f
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	std    
  423907:	jl     0x423936
  423909:	ja     0x42389b
  42390b:	mov    dl,0x1
  42390d:	add    bl,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    ah,bh
  423913:	outs   dx,DWORD PTR ds:[esi]
  423914:	mov    ds:0xf614c1ca,eax
  423919:	jp     0x4238f0
  42391b:	lock xor edi,DWORD PTR [ebx-0x6b]
  42391f:	stc    
  423920:	dec    ebx
  423921:	gs jmp 0x4238c5
  423924:	dec    edi
  423925:	ficom  DWORD PTR [bx+di+0x4764]
  42392a:	lea    esi,[esi+eiz*8-0x11]
  42392e:	sbb    ch,BYTE PTR [edi+0x5b]
  423931:	stos   DWORD PTR es:[edi],eax
  423932:	in     eax,dx
  423933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423934:	adc    al,BYTE PTR [ebp-0x5e7fd195]
  42393a:	in     al,dx
  42393b:	cs mov edi,0xe6680b89
  423941:	test   DWORD PTR [edi],eax
  423943:	dec    ecx
  423944:	sbb    edx,DWORD PTR [ebp+0x3f598e35]
  42394a:	outs   dx,BYTE PTR ds:[esi]
  42394b:	js     0x4238d1
  42394d:	aad    0xf
  42394f:	or     ch,BYTE PTR [eax+0x17]
  423952:	fst    DWORD PTR ds:0x421fade4
  423958:	daa    
  423959:	aaa    
  42395a:	dec    esi
  42395b:	bound  eax,QWORD PTR [ebp+0x70]
  42395e:	fmul   DWORD PTR [ecx]
  423960:	into   
  423961:	cmp    esp,esi
  423963:	xor    BYTE PTR fs:[edx],ah
  423966:	ret    
  423967:	jbe    0x4239ca
  423969:	aas    
  42396a:	push   esi
  42396b:	std    
  42396c:	addr16 mov ds:0xe071,al
  423970:	mov    ecx,0x5eea9a11
  423975:	pop    eax
  423976:	sahf   
  423977:	loope  0x423920
  423979:	hlt    
  42397a:	jae    0x423986
  42397c:	cmc    
  42397d:	fidivr WORD PTR [edx-0x74819b0b]
  423983:	pushf  
  423984:	sub    ebp,edx
  423986:	jle    0x423932
  423988:	(bad)  
  423989:	out    0xf5,al
  42398b:	add    DWORD PTR [ebx+0x4c82d90c],esi
  423991:	sti    
  423992:	xor    bl,dl
  423994:	jl     0x423955
  423996:	bnd jb 0x42391c
  423999:	jmp    FWORD PTR [ebp+edi*2-0x22cccd6d]
  4239a0:	cmp    DWORD PTR [eax],ecx
  4239a2:	repnz add eax,edx
  4239a5:	shr    BYTE PTR [edi-0x4c],cl
  4239a8:	nop
  4239a9:	fsubr  DWORD PTR [eax+ebx*1]
  4239ac:	sbb    edx,ebx
  4239ae:	mov    esp,0x72c981eb
  4239b3:	pop    ecx
  4239b4:	in     eax,0xe6
  4239b6:	adc    al,0xb0
  4239b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239b9:	rcl    ebp,0x9d
  4239bc:	sbb    bh,BYTE PTR [edi+esi*8-0x3208f162]
  4239c3:	int3   
  4239c4:	les    ebx,FWORD PTR [ebx-0x3bd5754a]
  4239ca:	repz fnstenv [ecx-0x4cfc6cbf]
  4239d1:	mov    dh,0x8c
  4239d3:	retf   
  4239d4:	arpl   di,ax
  4239d6:	cld    
  4239d7:	clc    
  4239d8:	test   al,0xd6
  4239da:	jg     0x423a2b
  4239dc:	stos   BYTE PTR es:[edi],al
  4239dd:	js     0x4239db
  4239df:	xchg   BYTE PTR [eax-0x56],dh
  4239e2:	in     al,0x7e
  4239e4:	push   sp
  4239e6:	stos   DWORD PTR es:[edi],eax
  4239e7:	jb     0x4239ca
  4239e9:	fs jae 0x4239d8
  4239ec:	shl    DWORD PTR [ebp+0x680d436],0x7d
  4239f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239f4:	push   es
  4239f5:	sbb    BYTE PTR [esi-0x2c],bh
  4239f8:	arpl   WORD PTR [edi+0x31],sp
  4239fb:	push   ds
  4239fc:	add    al,0xb0
  4239fe:	push   ebx
  4239ff:	shl    BYTE PTR [eax-0x4323199c],0xcc
  423a06:	out    dx,al
  423a07:	imul   ecx,DWORD PTR [ecx*8-0xdaeee66],0x98430fa3
  423a12:	(bad)  
  423a13:	or     al,0x9a
  423a15:	loopne 0x423a47
  423a17:	loop   0x4239fe
  423a19:	xor    bh,BYTE PTR ds:0x9137d7f7
  423a1f:	jle    0x423a04
  423a21:	sub    DWORD PTR [eax-0x515d380f],edi
  423a27:	js     0x423a97
  423a29:	sub    DWORD PTR [ebx],edi
  423a2b:	in     al,0x8c
  423a2d:	pop    eax
  423a2e:	pop    esi
  423a2f:	fld    DWORD PTR ds:0x779aa88c
  423a35:	add    DWORD PTR [esi+0x72e838ef],edi
  423a3b:	push   eax
  423a3c:	push   ebx
  423a3d:	(bad)  
  423a3e:	fidiv  DWORD PTR [ecx]
  423a40:	adc    esi,DWORD PTR [esi+0x1c]
  423a43:	test   BYTE PTR [edx],bh
  423a45:	or     DWORD PTR [ebx],0x19
  423a48:	sahf   
  423a49:	sub    dh,BYTE PTR [edx+ebp*4+0x62]
  423a4d:	xor    bl,BYTE PTR [ebx+0x6a]
  423a50:	pop    ebp
  423a51:	xchg   ebp,eax
  423a52:	mov    eax,0xb6a5fc39
  423a57:	dec    esp
  423a58:	cmp    ebp,DWORD PTR [esi]
  423a5a:	and    eax,0x1958425f
  423a5f:	mov    bh,0x90
  423a61:	mov    bh,0x21
  423a63:	xlat   BYTE PTR ds:[ebx]
  423a64:	dec    edx
  423a65:	adc    edi,edx
  423a67:	push   edx
  423a68:	xor    esi,DWORD PTR [edi+0x537c0a61]
  423a6e:	or     ah,BYTE PTR [edi]
  423a70:	clc    
  423a71:	outs   dx,DWORD PTR ds:[esi]
  423a72:	sbb    al,0x72
  423a74:	pop    ebp
  423a75:	jns    0x423a35
  423a77:	push   edx
  423a78:	outs   dx,DWORD PTR ds:[esi]
  423a79:	hlt    
  423a7a:	aad    0xb3
  423a7c:	into   
  423a7d:	mov    ch,0xac
  423a7f:	int3   
  423a80:	push   ds
  423a81:	sub    cl,ah
  423a83:	call   edi
  423a85:	mov    esp,0x4e1424bd
  423a8a:	adc    edx,esp
  423a8c:	inc    eax
  423a8d:	cmp    ebx,ebx
  423a8f:	xchg   DWORD PTR [ecx],edi
  423a91:	jl     0x423ab0
  423a93:	test   eax,0x24508f68
  423a98:	pop    edx
  423a99:	test   DWORD PTR ds:0x4cbc8ec5,edx
  423a9f:	dec    esp
  423aa0:	lods   eax,DWORD PTR ds:[esi]
  423aa1:	mov    ecx,0x516c57df
  423aa6:	pop    esp
  423aa7:	sbb    bh,BYTE PTR [edx+edi*8-0x73c32698]
  423aae:	jb     0x423b0b
  423ab0:	fcomp  QWORD PTR [eax+ebp*4-0x3f]
  423ab4:	and    eax,0xff7d3b6b
  423ab9:	add    edx,edi
  423abb:	fnstenv [edi]
  423abd:	pushf  
  423abe:	xor    al,0x98
  423ac0:	sub    al,0xe6
  423ac2:	add    DWORD PTR [ebp+0x57],0x8a6e5bfd
  423ac9:	int    0x4a
  423acb:	aam    0xce
  423acd:	adc    ch,BYTE PTR [eax-0x68]
  423ad0:	dec    esp
  423ad1:	js     0x423a70
  423ad3:	push   DWORD PTR [ebx-0x62709071]
  423ad9:	and    al,0x13
  423adb:	xchg   bh,ah
  423add:	push   ebp
  423ade:	in     eax,0xc8
  423ae0:	inc    esp
  423ae1:	jo     0x423ab3
  423ae3:	sbb    eax,0x509d0852
  423ae8:	xor    al,cl
  423aea:	and    al,0xf7
  423aec:	jge    0x423b3f
  423aee:	xor    BYTE PTR [edi-0x42],ah
  423af1:	mov    eax,0x1db94997
  423af6:	retf   0x30ff
  423af9:	mov    bl,0xa3
  423afb:	out    0xe8,eax
  423afd:	jnp    0x423b74
  423aff:	hlt    
  423b00:	sbb    DWORD PTR [eax],esp
  423b02:	cmp    al,0x49
  423b04:	arpl   WORD PTR [esi],bp
  423b06:	mov    ecx,0x754e8dd1
  423b0b:	xchg   ecx,eax
  423b0c:	mov    eax,ds:0x0
	...
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423af6
  423b27:	int3   
  423b28:	(bad)  
  423b29:	loop   0x423ab6
  423b2b:	mov    ah,0x1
  423b2d:	add    bl,bh
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    ah,al
  423b33:	(bad)  
  423b34:	int    0xb7
  423b36:	test   eax,0xb2c5853
  423b3b:	mul    DWORD PTR [esi+0x74fc205e]
  423b41:	fucomip st,st(6)
  423b43:	and    ecx,ebx
  423b45:	cld    
  423b46:	cmp    BYTE PTR [ecx],0x34
  423b49:	add    bl,BYTE PTR [ecx-0xe6bd2f8]
  423b4f:	xchg   ecx,eax
  423b50:	(bad)  
  423b51:	sbb    al,0x76
  423b53:	(bad)  
  423b54:	mov    dl,0x2
  423b56:	cmp    ecx,edx
  423b58:	mov    bl,0xed
  423b5b:	cwde   
  423b5c:	scas   al,BYTE PTR es:[edi]
  423b5d:	test   eax,0x389b4984
  423b62:	and    cl,ah
  423b64:	add    BYTE PTR ds:[ebx+0x70],cl
  423b68:	or     eax,0x91d8bb04
  423b6d:	sti    
  423b6e:	ins    BYTE PTR es:[edi],dx
  423b6f:	push   cs
  423b70:	mov    ?,WORD PTR [esi-0x6b019407]
  423b76:	and    bl,BYTE PTR [ecx-0x1b]
  423b79:	imul   ebx,DWORD PTR ds:0xa651b145,0x8acb2d88
  423b83:	nop
  423b84:	aas    
  423b85:	nop
  423b86:	add    BYTE PTR [edx-0x653f330a],0xc7
  423b8d:	repz test DWORD PTR [ebx-0x65],edi
  423b91:	push   ebx
  423b92:	(bad)  
  423b93:	mov    cl,0xce
  423b95:	loopne 0x423b6b
  423b97:	aad    0xc6
  423b99:	adc    DWORD PTR [ebx-0x67],0xffffffe0
  423b9d:	adc    edx,DWORD PTR [ebp-0x52e81a7]
  423ba3:	pop    es
  423ba4:	gs jmp 0x159dd28f
  423baa:	pop    ebx
  423bab:	in     eax,0x99
  423bad:	enter  0x18ba,0x5
  423bb1:	adc    ah,BYTE PTR [ecx+0x30b9ad9f]
  423bb7:	aaa    
  423bb8:	xchg   ebp,eax
  423bb9:	ret    
  423bba:	mov    bh,0x96
  423bbc:	and    BYTE PTR [esi],ch
  423bbe:	adc    BYTE PTR [ebp-0x4b10b5e6],0x1c
  423bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bc6:	sub    edi,DWORD PTR ds:0xe6333fa3
  423bcc:	inc    ebp
  423bcd:	addr16 inc ebp
  423bcf:	mov    al,0x3b
  423bd1:	dec    esi
  423bd2:	xor    esp,DWORD PTR [eax-0x3b]
  423bd5:	cmp    DWORD PTR [ebx],ebx
  423bd7:	inc    edx
  423bd8:	loope  0x423c2e
  423bda:	xchg   esp,eax
  423bdb:	push   es
  423bdc:	(bad)  
  423bdd:	ss push edi
  423bdf:	int    0xe9
  423be1:	and    eax,0xbf32e661
  423be6:	mov    eax,0xff96a33c
  423beb:	sbb    cl,dl
  423bed:	ins    DWORD PTR es:[edi],dx
  423bee:	test   esp,ebx
  423bf0:	hlt    
  423bf1:	pop    ss
  423bf2:	bound  edx,QWORD PTR [ebx-0x7bbeb21]
  423bf8:	inc    esi
  423bf9:	dec    ebp
  423bfa:	ss jae 0x423c50
  423bfd:	jne    0x423c34
  423bff:	fstp   DWORD PTR [ebp+0x21]
  423c02:	push   es
  423c03:	rol    DWORD PTR [edi+esi*2],1
  423c06:	mov    bh,0x25
  423c08:	or     cl,BYTE PTR ds:[edi+0x42a65b25]
  423c0f:	mov    ebp,0x54eec765
  423c14:	sbb    esi,DWORD PTR [edi-0x6846ae2f]
  423c1a:	aad    0x61
  423c1c:	or     dh,BYTE PTR [edi+0x1b]
  423c1f:	jl     0x423c52
  423c21:	nop
  423c22:	lods   al,BYTE PTR ds:[esi]
  423c23:	mov    cl,0x1f
  423c25:	xor    eax,0x2e068ab1
  423c2a:	leave  
  423c2b:	lahf   
  423c2c:	scas   al,BYTE PTR es:[edi]
  423c2d:	test   DWORD PTR [ebx+esi*4+0x404c8d8],ecx
  423c34:	fst    st(0)
  423c36:	push   edx
  423c37:	push   esi
  423c38:	clc    
  423c39:	or     al,0x52
  423c3b:	add    edi,DWORD PTR [eax+0x20]
  423c3e:	sub    bh,BYTE PTR [ebx-0x7d]
  423c41:	pop    ebx
  423c42:	call   0x56ca762a
  423c47:	inc    esi
  423c48:	jl     0x423cba
  423c4a:	std    
  423c4b:	bound  esi,QWORD PTR [edi]
  423c4d:	jle    0x423c91
  423c4f:	arpl   WORD PTR [edx+0x3a],dx
  423c52:	aaa    
  423c53:	pop    ss
  423c54:	pop    eax
  423c56:	or     BYTE PTR [esi+0x160c30d3],ah
  423c5c:	jmp    0x2e96f52d
  423c61:	jl     0x423cc9
  423c63:	cwde   
  423c64:	shl    esi,0xf4
  423c67:	mov    fs,edi
  423c69:	enter  0x7b1,0xd4
  423c6d:	(bad)  
  423c6f:	jle    0x423c40
  423c71:	loope  0x423cc1
  423c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c74:	xchg   esi,eax
  423c75:	sbb    eax,0x4bde8041
  423c7a:	mov    edi,0x309b0bce
  423c7f:	mov    esp,0xfd3e81bd
  423c84:	sub    DWORD PTR [ebp-0x185f33e3],ebx
  423c8a:	add    al,0x6b
  423c8c:	gs out dx,eax
  423c8e:	sub    BYTE PTR [ebp-0xe],bh
  423c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c92:	pop    esp
  423c93:	pop    edx
  423c94:	addr16 test eax,0xfe5f87b4
  423c9a:	leave  
  423c9b:	push   edi
  423c9c:	in     al,0xea
  423c9e:	adc    DWORD PTR [ebx-0x10],eax
  423ca1:	cmp    esi,edx
  423ca3:	jb     0x423caf
  423ca5:	int    0x74
  423ca7:	and    BYTE PTR [esi],dl
  423ca9:	mov    ds:0x9cf50cce,eax
  423cae:	loope  0x423cac
  423cb0:	cmp    al,0xb4
  423cb2:	pusha  
  423cb3:	dec    esi
  423cb4:	data16 js 0x423c77
  423cb7:	clc    
  423cb8:	out    dx,eax
  423cb9:	(bad)  [eax+0xb9c5c3f]
  423cbf:	mov    ds:0x88b9c466,al
  423cc4:	je     0x423cc4
  423cc6:	in     eax,0x92
  423cc8:	popf   
  423cc9:	sar    BYTE PTR [edx-0x3fad54d6],cl
  423ccf:	ds aam 0x5c
  423cd2:	add    edx,ebp
  423cd4:	rcl    bl,1
  423cd6:	mov    ds:0x57fbdd3,al
  423cdb:	inc    edx
  423cdc:	pop    ebp
  423cdd:	(bad)  
  423cde:	loopne 0x423c61
  423ce0:	lahf   
  423ce1:	push   eax
  423ce2:	add    al,0xba
  423ce4:	test   dl,cl
  423ce6:	hlt    
  423ce7:	adc    BYTE PTR [eax-0x7],dh
  423cea:	icebp  
  423ceb:	dec    esp
  423cec:	sti    
  423ced:	loope  0x423cdd
  423cef:	call   0xc0eefcca
  423cf4:	mov    al,ds:0x2175317e
  423cf9:	push   ebp
  423cfa:	adc    dl,dl
  423cfc:	fs jae 0x423cc7
  423cff:	das    
  423d00:	sar    BYTE PTR [eax],cl
  423d02:	and    eax,0xca950823
  423d07:	xchg   ebp,eax
  423d08:	jo     0x423cdf
  423d0a:	aad    0x54
  423d0c:	loop   0x423d00
  423d0e:	je     0x423cd6
  423d10:	adc    eax,0x97070619
  423d16:	xchg   esp,eax
  423d17:	inc    esi
  423d18:	sub    esi,DWORD PTR [esi]
  423d1a:	xchg   DWORD PTR [ebx-0x5],ebp
  423d1d:	iret   
  423d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d1f:	aam    0xc4
  423d21:	mov    ebx,0x83391dda
  423d26:	push   0x1e249035
  423d2b:	jg     0x423d6c
	...
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0xbc57ffb2
  423d47:	push   cs
  423d48:	xchg   ebp,eax
  423d49:	mov    eax,ds:0x1b686
  423d4e:	sti    
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [ecx+edx*8],ah
  423d54:	sti    
  423d55:	cmc    
  423d56:	out    dx,al
  423d57:	test   eax,0x64c5a631
  423d5c:	jbe    0x423dae
  423d5e:	rol    BYTE PTR [esi-0x5aff9abf],1
  423d64:	ins    DWORD PTR es:[edi],dx
  423d65:	iret   
  423d66:	adc    eax,0xb906f7e1
  423d6b:	pushf  
  423d6c:	retf   0xd6b3
  423d6f:	push   edi
  423d70:	fs out dx,al
  423d72:	es jb  0x423ddb
  423d75:	shr    DWORD PTR [esi+esi*4-0x5931f1d5],cl
  423d7c:	mov    ah,0x87
  423d7e:	inc    ebp
  423d7f:	repnz out dx,eax
  423d81:	out    0x70,al
  423d83:	fbstp  TBYTE PTR [ecx-0x1b]
  423d86:	(bad)  
  423d87:	stc    
  423d88:	das    
  423d89:	fidivr WORD PTR [ecx+0x57c92624]
  423d8f:	sar    BYTE PTR ds:0x2f5d9529,0xdf
  423d96:	test   DWORD PTR [edx],ecx
  423d98:	(bad)  
  423d9a:	cli    
  423d9b:	imul   ebp,DWORD PTR [ebx-0x37],0x7a151375
  423da2:	xor    dh,BYTE PTR [esi+0xd]
  423da5:	and    al,0x3a
  423da7:	jge    0x423dce
  423da9:	pusha  
  423daa:	ja     0x423ddd
  423dac:	pop    ebx
  423dad:	(bad)  
  423dae:	std    
  423daf:	outs   dx,DWORD PTR ds:[esi]
  423db0:	fld    QWORD PTR ds:0x160c6adf
  423db6:	fwait
  423db7:	sub    edx,DWORD PTR [edx+0x12]
  423dba:	ret    0x824b
  423dbd:	jl     0x423d79
  423dbf:	iret   
  423dc0:	mov    edi,DWORD PTR [edx-0x53]
  423dc3:	cmp    bl,BYTE PTR [edx-0x74]
  423dc6:	cmp    DWORD PTR [edi-0x5],ecx
  423dc9:	fdivr  QWORD PTR [ebp+0x45]
  423dcc:	pop    ebp
  423dcd:	add    al,0x9f
  423dcf:	loop   0x423e4a
  423dd1:	fild   DWORD PTR [eax]
  423dd3:	dec    ebx
  423dd4:	pop    edx
  423dd5:	sub    DWORD PTR [esi],ebp
  423dd7:	dec    ecx
  423dd8:	fidiv  WORD PTR ds:0x572340ee
  423dde:	mov    edi,0xb80cec54
  423de3:	mov    DWORD PTR [ebx+ebp*1-0x80],edi
  423de7:	out    dx,eax
  423de8:	and    BYTE PTR [eax+0x60],0x31
  423dec:	jmp    0x423e24
  423dee:	xchg   edi,eax
  423def:	ror    DWORD PTR [edx-0xf],0xb4
  423df3:	data16 sbb ch,dl
  423df6:	jecxz  0x423e38
  423df8:	sub    al,0xc0
  423dfa:	xchg   DWORD PTR [ebx],esi
  423dfc:	rcl    DWORD PTR [eax+0x12],0x27
  423e00:	nop
  423e01:	add    ch,al
  423e03:	mov    bh,0xd6
  423e05:	js     0x423e57
  423e07:	sub    dl,BYTE PTR [esi+0x2e]
  423e0a:	mov    ch,0xf6
  423e0c:	pmovmskb ecx,mm1
  423e0f:	(bad)  
  423e10:	in     eax,0x1f
  423e12:	pushf  
  423e13:	mov    eax,0xfde7a3af
  423e18:	mov    ebp,0x270d9260
  423e1d:	sub    DWORD PTR [ecx-0x16],esp
  423e20:	xchg   esi,eax
  423e21:	int3   
  423e22:	xor    ebp,ebp
  423e24:	in     al,dx
  423e25:	jl     0x423df0
  423e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e28:	dec    esi
  423e29:	aam    0x3d
  423e2b:	sbb    BYTE PTR [esi+ebx*1],cl
  423e2e:	or     ecx,DWORD PTR [edx-0x2e]
  423e31:	push   eax
  423e32:	stos   BYTE PTR es:[edi],al
  423e33:	icebp  
  423e34:	ins    BYTE PTR es:[edi],dx
  423e35:	test   ah,0xf4
  423e38:	sbb    eax,0x5dae4e80
  423e3d:	fisttp DWORD PTR [edi-0x54]
  423e40:	rcr    esp,1
  423e42:	xor    esi,DWORD PTR [edx+eax*2+0x3a]
  423e46:	mov    al,ds:0x606c626f
  423e4b:	push   es
  423e4c:	inc    ebp
  423e4d:	cmp    DWORD PTR ds:0x1257f34e,esp
  423e53:	xor    bl,BYTE PTR [esp+edi*4-0x55efba60]
  423e5a:	(bad)  
  423e5b:	clc    
  423e5c:	int    0x1e
  423e5e:	in     al,0xf8
  423e60:	data16 and dh,al
  423e63:	inc    edx
  423e64:	sbb    al,0xd9
  423e66:	aad    0x38
  423e68:	mov    al,0xd7
  423e6a:	push   cs
  423e6b:	pusha  
  423e6c:	push   ebp
  423e6d:	push   0x615114c4
  423e72:	fdivr  QWORD PTR [ebp+0x26]
  423e75:	scas   al,BYTE PTR es:[edi]
  423e76:	jns    0x423eb5
  423e78:	in     al,dx
  423e79:	mov    ss,WORD PTR [edx-0xa404ac8]
  423e7f:	jp     0x423eb0
  423e81:	jb     0x423ea8
  423e83:	add    esi,DWORD PTR [ebx-0x331dcc3a]
  423e89:	inc    eax
  423e8a:	mov    eax,0x8030b19b
  423e8f:	imul   ecx,DWORD PTR [bx+si],0xffffffd3
  423e93:	inc    eax
  423e94:	clc    
  423e95:	sub    al,0x47
  423e97:	into   
  423e98:	shl    BYTE PTR [esi-0x2f],0xc6
  423e9c:	call   0x1f39:0xcb2f84f3
  423ea3:	push   ss
  423ea4:	or     DWORD PTR [ebx+0x4e],0x43cb9575
  423eab:	aam    0x11
  423ead:	arpl   cx,bp
  423eaf:	mov    esi,0x50ffcd9c
  423eb4:	ret    0x6eb9
  423eb7:	or     cl,dh
  423eb9:	and    esp,DWORD PTR [edi-0x1e192c9a]
  423ebf:	gs sbb esi,0xffffffef
  423ec3:	fdivr  DWORD PTR [eax]
  423ec5:	ins    BYTE PTR es:[edi],dx
  423ec6:	push   0xffffffb0
  423ec8:	xchg   edi,eax
  423ec9:	fwait
  423eca:	xor    dl,BYTE PTR [ecx+edx*1]
  423ecd:	nop
  423ece:	adc    esp,DWORD PTR [esi-0x7e]
  423ed1:	adc    al,0x54
  423ed3:	cld    
  423ed4:	pushf  
  423ed5:	mov    eax,0xadb7ad45
  423eda:	pop    ss
  423edb:	jbe    0x423e97
  423edd:	xchg   esp,eax
  423ede:	fsub   QWORD PTR [ecx-0x33e95630]
  423ee4:	xchg   esi,eax
  423ee5:	fdivr  st,st(5)
  423ee7:	sti    
  423ee8:	lock sbb ah,bh
  423eeb:	(bad)  
  423eed:	fimul  DWORD PTR [esp+esi*2]
  423ef0:	mov    WORD PTR [edi+0x584b2a5b],ds
  423ef6:	test   esi,edx
  423ef8:	pop    edx
  423ef9:	outs   dx,DWORD PTR ds:[esi]
  423efa:	push   0x2515660f
  423eff:	arpl   cx,bp
  423f01:	and    ebx,DWORD PTR [esi+0x64]
  423f04:	adc    BYTE PTR [edi-0x50c19cd9],al
  423f0a:	es mov dl,0xfe
  423f0d:	(bad)  
  423f0e:	sti    
  423f0f:	lods   eax,DWORD PTR ds:[esi]
  423f10:	jnp    0x423f4a
  423f12:	hlt    
  423f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f14:	cmp    eax,0xa73f6591
  423f19:	out    dx,al
  423f1a:	aam    0x67
  423f1c:	cmp    al,0xc
  423f1e:	lock fidivr DWORD PTR [ebp-0x6e]
  423f22:	or     DWORD PTR ds:0x745921c0,edi
  423f28:	not    DWORD PTR [esi+0x3f]
  423f2b:	call   0x1735:0xe56d
  423f31:	cld    
  423f32:	leave  
  423f33:	retf   0xc9aa
  423f36:	test   al,0x90
  423f38:	inc    esi
  423f39:	fsubr  DWORD PTR [edx-0x66a99f20]
  423f3f:	mov    dh,0xd7
  423f41:	loopne 0x423ef6
  423f43:	mov    ebx,0x1c5de974
  423f48:	mov    esi,0x93afe8f5
	...
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0xc6e902b9
  423f67:	sub    ch,BYTE PTR [edx+0x75]
  423f6a:	cmp    DWORD PTR [eax+0x1fb0001],0x19100000
  423f74:	(bad)  
  423f76:	mul    BYTE PTR [eax-0xdf9f8e5]
  423f7c:	mov    ah,0xf9
  423f7e:	mov    esp,0x19d1fd29
  423f83:	test   BYTE PTR [eax-0x3f2097dd],0x6d
  423f8a:	push   ebx
  423f8b:	loope  0x423f97
  423f8d:	(bad)  
  423f8e:	out    dx,eax
  423f8f:	fwait
  423f90:	std    
  423f91:	bound  ebx,QWORD PTR [eax]
  423f93:	fisubr DWORD PTR [edi-0x4e]
  423f96:	mov    al,ds:0x4f9f8268
  423f9b:	pop    esp
  423f9c:	jo     0x423fe6
  423f9e:	pop    ecx
  423f9f:	xor    bh,BYTE PTR [ecx]
  423fa1:	je     0x423f23
  423fa3:	jne    0x423fa4
  423fa5:	jmp    0x423f3c
  423fa7:	dec    eax
  423fa8:	and    al,0xf
  423faa:	pop    ebx
  423fab:	mov    ebp,0xa486d2d9
  423fb0:	out    dx,al
  423fb1:	mov    bl,0x21
  423fb3:	mov    ds,ebp
  423fb5:	hlt    
  423fb6:	cs add eax,0x6a3cf64c
  423fbc:	jbe    0x423f44
  423fbe:	(bad)  
  423fbf:	mov    eax,0x233f522b
  423fc4:	(bad)  
  423fc5:	mov    al,ds:0xd6684cbb
  423fca:	or     eax,0x38
  423fcd:	out    dx,eax
  423fce:	sub    ecx,DWORD PTR [eax]
  423fd0:	dec    ecx
  423fd1:	xchg   edi,eax
  423fd2:	(bad)
  423fd6:	aaa    
  423fd7:	std    
  423fd8:	gs jbe 0x423fe3
  423fdb:	arpl   cx,ax
  423fdd:	xchg   DWORD PTR [eax],ecx
  423fdf:	loope  0x423ffd
  423fe1:	sbb    BYTE PTR [ebx],bl
  423fe3:	jbe    0x42400e
  423fe5:	xor    eax,0x8345115c
  423fea:	into   
  423feb:	push   ebp
  423fec:	push   ebx
  423fed:	int    0x7a
  423fef:	push   ebp
  423ff0:	fistp  DWORD PTR [ecx-0x9]
  423ff3:	bound  esi,QWORD PTR [edx+0x5ea7a9db]
  423ff9:	rcr    DWORD PTR [ebp+0x72],cl
  423ffc:	dec    edi
  423ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ffe:	fimul  DWORD PTR [edx+0xbd9109b]
  424004:	pushf  
  424005:	lods   al,BYTE PTR ds:[esi]
  424006:	pop    edx
  424007:	adc    al,0x88
  424009:	jmp    0x24cb:0xdb5dd2ec
  424010:	enter  0x2811,0xc3
  424014:	sub    eax,0xd7f6d317
  424019:	jb     0x424064
  42401b:	xchg   ecx,eax
  42401c:	xchg   edx,eax
  42401d:	ja     0x423fde
  42401f:	jns    0x423fcc
  424021:	and    BYTE PTR [ecx-0x27d1919d],0xef
  424028:	sub    al,0x6d
  42402a:	pop    ebp
  42402b:	add    dl,0x34
  42402e:	ds mov cl,0x36
  424031:	arpl   WORD PTR [edi-0x61],di
  424034:	dec    edx
  424035:	jnp    0x424074
  424037:	inc    edi
  424038:	sbb    BYTE PTR [ecx],0xb4
  42403b:	or     eax,0xd8c0ff7a
  424040:	push   edi
  424041:	sahf   
  424042:	add    BYTE PTR [edi-0x53d991dd],ch
  424048:	shl    DWORD PTR [ecx+eax*1],0x46
  42404c:	inc    esi
  42404d:	loopne 0x424086
  42404f:	sub    edx,DWORD PTR [ebx-0x67]
  424052:	xor    eax,0x1cdec80e
  424057:	daa    
  424058:	adc    al,0xa5
  42405a:	jg     0x4240da
  42405c:	mov    gs,WORD PTR [ebp-0x4d]
  42405f:	xor    al,0x5f
  424061:	dec    esi
  424062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424063:	inc    ebp
  424064:	xchg   edi,eax
  424065:	imul   esp,edx,0x54
  424068:	inc    edi
  424069:	jmp    0x423ff4
  42406b:	add    dl,BYTE PTR [esi-0x22fb5f93]
  424071:	jmp    DWORD PTR [esi-0x58]
  424074:	jmp    0xb00566c7
  424079:	sub    BYTE PTR [edi-0x74],cl
  42407c:	dec    esp
  42407d:	push   0xffffffec
  42407f:	mov    ah,0xfe
  424081:	enterw 0x3949,0x35
  424086:	jecxz  0x42403b
  424088:	push   edx
  424089:	fist   WORD PTR [ebx+ecx*4+0x40]
  42408d:	push   edi
  42408e:	les    ebx,FWORD PTR [ebx+0x65]
  424091:	xchg   esp,eax
  424092:	shl    DWORD PTR [eax-0x53224eed],1
  424098:	mov    al,BYTE PTR [ecx-0x365d95a9]
  42409e:	aad    0xb4
  4240a0:	pop    es
  4240a1:	(bad)  
  4240a2:	dec    esp
  4240a3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240a5:	xor    bh,bh
  4240a7:	sub    eax,0xd23151f6
  4240ac:	jl     0x424127
  4240ae:	test   BYTE PTR [ecx-0x2561d34f],ah
  4240b4:	(bad)  
  4240b5:	jo     0x42408a
  4240b7:	dec    ebx
  4240b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240b9:	lods   al,BYTE PTR ds:[esi]
  4240ba:	mul    BYTE PTR [ebx-0x1]
  4240bd:	add    BYTE PTR [edi],dl
  4240bf:	cwde   
  4240c0:	sbb    eax,0x90602a5b
  4240c5:	sub    ebx,DWORD PTR [edi+0x65dc41b]
  4240cb:	jmp    0x4329:0xe859713b
  4240d2:	pop    es
  4240d3:	fwait
  4240d4:	int3   
  4240d5:	je     0x4240f3
  4240d7:	jp     0x424071
  4240d9:	shr    BYTE PTR ds:0x2a8045d1,1
  4240df:	dec    eax
  4240e0:	xor    dl,cl
  4240e2:	les    ecx,FWORD PTR [ecx+0x27]
  4240e5:	jmp    0x5126:0xe5389ab7
  4240ec:	mov    dh,0xb5
  4240ee:	jp     0x424121
  4240f0:	sub    dh,ah
  4240f2:	repz je 0x4240e2
  4240f5:	mov    edx,0xf6d30a63
  4240fa:	mov    edx,DWORD PTR [edx+0x58]
  4240fd:	loopne 0x4240fd
  4240ff:	lods   eax,DWORD PTR ds:[esi]
  424100:	cmp    BYTE PTR [ebx+0x63],al
  424103:	in     eax,dx
  424104:	cmc    
  424105:	xlat   BYTE PTR ds:[ebx]
  424106:	daa    
  424107:	add    al,0x55
  424109:	xchg   dl,bh
  42410b:	int    0xf0
  42410d:	push   ds
  42410e:	mov    dl,0xcc
  424110:	lock rcr DWORD PTR [ebp+0x2d],0x23
  424115:	addr16 rol dh,1
  424118:	jno    0x424199
  42411a:	stc    
  42411b:	xchg   ebp,eax
  42411c:	jo     0x4240ac
  42411e:	push   es
  42411f:	fistp  DWORD PTR [esi+0x524f3e54]
  424125:	mov    DWORD PTR [edx],ebx
  424127:	mov    al,ds:0x498c9695
  42412c:	inc    esp
  42412d:	mov    eax,ds:0x5e36658d
  424132:	ins    DWORD PTR es:[edi],dx
  424133:	cdq    
  424134:	dec    ebx
  424135:	add    DWORD PTR [edi-0x1e898de7],edi
  42413b:	adc    bh,BYTE PTR [esi]
  42413d:	fisttp DWORD PTR [edx]
  42413f:	sbb    bh,BYTE PTR [edx+0x6c]
  424142:	test   BYTE PTR [ebp+0x57],al
  424145:	pop    ebp
  424146:	add    DWORD PTR [ebp+0x12],esi
  424149:	jg     0x4241c8
  42414b:	sbb    cl,dh
  42414d:	xor    ebx,DWORD PTR [esi+0xf]
  424150:	aam    0xb9
  424152:	and    edx,ebx
  424154:	jle    0x424104
  424156:	pop    edi
  424157:	xor    BYTE PTR [esi+0xafff7b7],ah
  42415d:	lods   eax,DWORD PTR ds:[esi]
  42415e:	mov    BYTE PTR [eax],ah
  424160:	push   esp
  424161:	or     BYTE PTR [eax-0x4570b606],al
  424167:	mov    BYTE PTR [edi+0x38],cl
  42416a:	mov    al,0xfe
  42416c:	fadd   QWORD PTR [eax]
	...
  42417a:	gs mov ah,0x18
  42417d:	fcompp 
  42417f:	(bad)  
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	shr    DWORD PTR [edx+esi*1],0xa0
  42418a:	jl     0x424146
  42418c:	add    DWORD PTR [eax],eax
  42418e:	sti    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [edx-0x488d2b63],al
  424197:	retf   
  424198:	pmulhuw mm2,mm5
  42419b:	jne    0x4241ef
  42419d:	xor    BYTE PTR [esi+0x4b],cl
  4241a0:	scas   eax,DWORD PTR es:[edi]
  4241a1:	stos   DWORD PTR es:[edi],eax
  4241a2:	mov    ecx,0xe1d2add
  4241a7:	dec    ebx
  4241a8:	call   FWORD PTR [esi+ebp*4]
  4241ab:	push   eax
  4241ac:	xchg   ebp,eax
  4241ad:	test   edi,0xbe98f447
  4241b3:	mov    bh,0x6
  4241b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b6:	stos   BYTE PTR es:[edi],al
  4241b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b8:	rcr    BYTE PTR [ebx-0x53],0x2
  4241bc:	xor    edi,DWORD PTR gs:[ebp-0x67d30ee1]
  4241c3:	jno    0x42423b
  4241c5:	jns    0x4241b5
  4241c7:	rcr    ebp,0x87
  4241ca:	sub    al,0xb1
  4241cc:	push   ss
  4241cd:	ds push eax
  4241cf:	pop    ss
  4241d0:	jmp    0x68d3:0xfd28d55
  4241d7:	pop    esp
  4241d8:	pop    ss
  4241d9:	inc    edx
  4241da:	and    al,0x86
  4241dc:	xchg   edi,eax
  4241dd:	mov    cl,0xb7
  4241df:	mov    ah,0x5a
  4241e1:	iret   
  4241e2:	sub    al,0x7f
  4241e4:	inc    edx
  4241e5:	mov    al,ds:0x2edcf7cf
  4241ea:	nop
  4241eb:	sub    ecx,ebx
  4241ed:	or     al,0xac
  4241ef:	mov    ebx,DWORD PTR [ecx]
  4241f1:	ins    DWORD PTR es:[edi],dx
  4241f2:	cmp    DWORD PTR [ecx+0x14],esi
  4241f5:	lock les ebp,FWORD PTR [eax+0x11bb94c]
  4241fc:	popf   
  4241fd:	sub    edi,ebp
  4241ff:	cmp    edi,DWORD PTR [edx+0x2606c527]
  424205:	in     al,dx
  424206:	push   ss
  424207:	and    eax,0x39183d95
  42420c:	sub    dl,BYTE PTR ds:0x50b3a7ce
  424212:	outs   dx,BYTE PTR ds:[esi]
  424213:	pop    es
  424214:	pop    edx
  424215:	sahf   
  424216:	mov    WORD PTR [eax-0x7e],es
  424219:	shr    BYTE PTR [edi],0x9
  42421c:	adc    DWORD PTR [ebp+ebx*2+0x4b],esp
  424220:	cdq    
  424221:	mov    ds:0x25811f88,eax
  424226:	add    eax,0x60e41827
  42422b:	push   ebp
  42422c:	(bad)  
  42422d:	enter  0x88bd,0x4
  424231:	sub    BYTE PTR [edi],cl
  424233:	adc    esi,DWORD PTR [edx+0x44aebf1f]
  424239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42423a:	add    dl,BYTE PTR [ecx+0x39]
  42423d:	mov    bh,0x38
  42423f:	shl    DWORD PTR [edx],0x8a
  424242:	pop    edx
  424243:	sbb    dl,BYTE PTR [edi]
  424245:	xor    al,0xff
  424247:	pop    ecx
  424248:	fld    TBYTE PTR [eax+0x5a]
  42424b:	repz mov ds:0x9d1b7a87,eax
  424251:	test   al,0xc7
  424253:	push   esp
  424254:	leave  
  424255:	pop    ebp
  424256:	xchg   esp,eax
  424257:	jmp    0x4242a3
  424259:	push   0xb7ae9f26
  42425e:	popa   
  42425f:	call   0xae71:0xf7377579
  424266:	sub    al,0xc8
  424268:	mov    DWORD PTR [eax-0x44],ebx
  42426b:	jbe    0x42427e
  42426d:	sbb    BYTE PTR [edx],0xbb
  424270:	mov    WORD PTR [ebx+edi*4+0x2a],?
  424274:	(bad)  
  424275:	jmp    0xa62e:0x8fbe2833
  42427c:	and    al,ah
  42427e:	push   0x2b4615a2
  424283:	add    al,0x4d
  424285:	push   ecx
  424286:	mov    ah,BYTE PTR [ebx]
  424288:	inc    esi
  424289:	(bad)  
  42428a:	cli    
  42428b:	outs   dx,BYTE PTR ds:[esi]
  42428c:	(bad)  
  42428d:	cmc    
  42428e:	stc    
  42428f:	jmp    0x7928:0xdeed4437
  424296:	mov    cl,0x1a
  424298:	sti    
  424299:	jne    0x424232
  42429b:	mov    BYTE PTR [edi],dl
  42429d:	push   eax
  42429e:	sub    DWORD PTR [ebp-0x43],esi
  4242a1:	push   0x5b
  4242a3:	fwait
  4242a4:	jmp    0x5d1608f9
  4242a9:	mov    eax,ds:0x7d6f3c4e
  4242ae:	ds ss cs inc edx
  4242b2:	dec    esi
  4242b3:	pop    ebx
  4242b4:	(bad)  
  4242b5:	adc    DWORD PTR [edi-0x43],eax
  4242b8:	and    cl,BYTE PTR [ecx+eax*4]
  4242bb:	fisubr WORD PTR [esi+ebp*1]
  4242be:	mov    edx,0xd1df78ea
  4242c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242c4:	pop    edx
  4242c5:	sbb    al,0xc2
  4242c7:	loop   0x42427a
  4242c9:	sbb    eax,0x2b5cd0e3
  4242ce:	xchg   DWORD PTR ds:0xd5fa1a04,ecx
  4242d4:	sub    eax,0x9f8d2e2d
  4242d9:	jno    0x424299
  4242db:	add    DWORD PTR [ecx-0x7a],esp
  4242de:	mov    ebp,ebx
  4242e0:	sbb    al,0x8a
  4242e2:	faddp  st(7),st
  4242e4:	adc    al,0x20
  4242e6:	loope  0x424338
  4242e8:	push   ecx
  4242e9:	in     al,dx
  4242ea:	(bad)  
  4242eb:	jp     0x424323
  4242ed:	fild   WORD PTR [eax]
  4242ef:	rol    DWORD PTR [edx-0xb],0x23
  4242f3:	loop   0x4242e5
  4242f5:	sbb    DWORD PTR [ecx],esp
  4242f7:	push   ds
  4242f8:	popf   
  4242f9:	fldcw  WORD PTR [si+0x60]
  4242fd:	je     0x42436e
  4242ff:	or     BYTE PTR [ebx-0x1d61b9f3],dh
  424305:	push   edx
  424306:	in     al,0xfb
  424308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42430a:	js     0x424354
  42430c:	xchg   ebx,eax
  42430d:	mov    al,0xda
  42430f:	adc    eax,0xac8958c3
  424314:	or     bl,cl
  424316:	retf   
  424317:	jle    0x42430f
  424319:	dec    ebx
  42431a:	loop   0x42434e
  42431c:	cmp    edi,esi
  42431e:	jne    0x42435a
  424320:	jmp    0xe012a20b
  424325:	jmp    0x6164f54f
  42432a:	iret   
  42432b:	inc    ecx
  42432c:	cld    
  42432d:	mov    al,0x7d
  42432f:	sbb    DWORD PTR [eax],ebp
  424331:	push   0x24
  424333:	lods   eax,DWORD PTR ds:[esi]
  424334:	sub    ah,dh
  424336:	jecxz  0x42430a
  424338:	loop   0x424367
  42433a:	xchg   ecx,eax
  42433b:	gs in  al,0x31
  42433e:	xor    ah,BYTE PTR [edi+0x361690f4]
  424344:	pop    ds
  424345:	push   ebp
  424346:	sbb    DWORD PTR [ebp+0x28],0xffffff8c
  42434a:	call   0x8fadcc0b
  42434f:	mov    ecx,0x39f4ae33
  424354:	and    al,0xca
  424356:	retf   0x2d99
  424359:	inc    esp
  42435a:	or     bl,ah
  42435c:	push   0x80cead1e
  424361:	iret   
  424362:	jg     0x42432e
  424364:	push   esi
  424365:	data16 cld 
  424367:	das    
  424368:	dec    edx
  424369:	push   ds
  42436a:	sar    BYTE PTR [edx],0xf1
  42436d:	int    0xe1
  42436f:	(bad)  
  424371:	mov    ds:0x9f2370bc,al
  424376:	mov    ecx,0x6bab5492
  42437b:	pop    eax
  42437c:	add    bl,al
  42437e:	and    DWORD PTR [esi+0x63],esi
  424381:	repnz test BYTE PTR [eax-0x199a3940],dl
  424388:	mov    al,ds:0x73393543
	...
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	and    DWORD PTR [eax-0x4388f2bc],ebp
  4243ac:	add    DWORD PTR [eax],eax
  4243ae:	sti    
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    BYTE PTR [eax],ch
  4243b3:	rol    BYTE PTR [eax],0x94
  4243b6:	outs   dx,BYTE PTR ds:[esi]
  4243b7:	clc    
  4243b8:	inc    ebx
  4243b9:	push   esi
  4243ba:	fwait
  4243bb:	sub    ch,BYTE PTR [esi]
  4243bd:	ins    DWORD PTR es:[edi],dx
  4243be:	loope  0x42442a
  4243c0:	xchg   DWORD PTR [edi],ebp
  4243c2:	jno    0x424437
  4243c4:	repnz (bad) 
  4243c6:	lds    dx,DWORD PTR [eax-0x6d]
  4243ca:	bound  ecx,QWORD PTR [edi]
  4243cc:	inc    DWORD PTR [edx-0x765c15d6]
  4243d2:	jns    0x4243a2
  4243d4:	std    
  4243d5:	mov    bh,0x45
  4243d7:	jnp    0x4243aa
  4243d9:	lods   eax,DWORD PTR ds:[esi]
  4243da:	repnz fs addr16 push ecx
  4243de:	test   eax,0x6cdb63b0
  4243e3:	inc    eax
  4243e4:	daa    
  4243e5:	std    
  4243e6:	imul   ecx,DWORD PTR [esi+0x49],0xa27de0ba
  4243ed:	fisub  WORD PTR [edi+0x3d]
  4243f0:	mov    dl,0x4d
  4243f2:	test   BYTE PTR [ebp+0x38d37ad0],dl
  4243f8:	or     eax,esp
  4243fa:	and    DWORD PTR [esi],0xffffffe4
  4243fd:	bound  ecx,QWORD PTR [ebp+0x3e]
  424400:	add    cl,BYTE PTR [ecx+0x5f]
  424403:	adc    DWORD PTR [ebx-0x10],ebx
  424406:	cmp    DWORD PTR [edi-0x3d0955c7],edx
  42440c:	cmp    BYTE PTR [ebp+0x7241028b],dh
  424412:	sub    dl,BYTE PTR [ebx+eiz*8+0x6]
  424416:	ins    BYTE PTR es:[edi],dx
  424417:	adc    al,bl
  424419:	sbb    ch,BYTE PTR [edi]
  42441b:	mov    eax,ds:0xd90ce643
  424420:	shr    ecx,0x92
  424423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424424:	fiadd  WORD PTR [edx+eax*8]
  424427:	daa    
  424428:	push   esi
  424429:	mov    ?,WORD PTR [ecx+0x0]
  42442c:	add    eax,0x963fd24e
  424431:	lods   eax,DWORD PTR ds:[esi]
  424432:	int3   
  424433:	fdiv   QWORD PTR [ebp-0x3b]
  424436:	sub    dh,ch
  424438:	mov    dl,0x7b
  42443a:	push   es
  42443b:	add    eax,0x2dd0ad2e
  424440:	call   FWORD PTR [esi]
  424442:	push   ebp
  424443:	in     eax,0x29
  424445:	mov    esp,ss
  424447:	jo     0x424418
  424449:	rcl    DWORD PTR [ecx],1
  42444b:	adc    eax,edi
  42444d:	cmp    eax,0x5971eb77
  424452:	push   ss
  424453:	test   BYTE PTR [ecx],al
  424455:	push   edx
  424456:	shr    DWORD PTR [ecx],1
  424458:	mov    ecx,0x251fc43f
  42445d:	pop    edi
  42445e:	mov    ecx,0xf2878d5b
  424463:	scas   eax,DWORD PTR es:[edi]
  424464:	sbb    al,0x72
  424466:	push   esi
  424467:	ins    BYTE PTR es:[edi],dx
  424468:	(bad)  
  424469:	enter  0xee0a,0x36
  42446d:	rcl    DWORD PTR [ebp+edx*8-0x6e],0xe7
  424472:	sub    edx,edi
  424474:	push   ebx
  424475:	xchg   esi,eax
  424476:	push   0xb97ba146
  42447b:	in     eax,0xf7
  42447d:	(bad)  [edx+eax*1+0x1c]
  424481:	mov    ecx,ebx
  424483:	lods   eax,DWORD PTR ds:[esi]
  424484:	or     al,0x5a
  424486:	pop    edi
  424487:	es stos DWORD PTR es:[edi],eax
  424489:	mov    esi,DWORD PTR [ebp+0xbbafed]
  42448f:	adc    ch,BYTE PTR [eax+0x4b]
  424492:	push   ebp
  424493:	inc    ecx
  424494:	cld    
  424495:	push   eax
  424496:	ja     0x4244fb
  424498:	cmp    DWORD PTR [edi-0x7dd70853],edi
  42449e:	in     eax,0xd8
  4244a0:	je     0x4244ee
  4244a2:	(bad)
  4244a6:	dec    ebp
  4244a7:	jle    0x42449e
  4244a9:	jl     0x424471
  4244ab:	rcl    BYTE PTR [esi-0x5eaadfda],1
  4244b1:	and    eax,0x1b7eb10
  4244b6:	and    dh,BYTE PTR [edx+ebx*4]
  4244b9:	dec    edx
  4244ba:	pop    ecx
  4244bb:	pop    ebx
  4244bc:	lock scas al,BYTE PTR es:[edi]
  4244be:	lahf   
  4244bf:	mov    eax,0x409051be
  4244c4:	pop    edx
  4244c5:	or     al,0x58
  4244c7:	bound  ecx,QWORD PTR [ecx+0xb]
  4244ca:	jmp    0x4244d9
  4244cc:	jmp    0x4244c4
  4244ce:	mov    es,WORD PTR [esi]
  4244d0:	out    dx,eax
  4244d1:	sub    BYTE PTR [ecx],dh
  4244d3:	aam    0x92
  4244d5:	pop    esi
  4244d6:	test   DWORD PTR [ecx-0x741317aa],ebx
  4244dc:	xor    ebp,DWORD PTR [ebx]
  4244de:	nop
  4244df:	out    0xe2,eax
  4244e1:	add    al,0xa1
  4244e3:	out    0xc4,eax
  4244e5:	out    0x87,eax
  4244e7:	push   eax
  4244e8:	push   edi
  4244e9:	mov    ebp,0x34d404ab
  4244ee:	jae    0x424554
  4244f0:	jg     0x424565
  4244f2:	rcl    DWORD PTR [esi+0x63],0x60
  4244f6:	mov    al,ds:0xc1a36bd7
  4244fb:	sar    BYTE PTR [edi-0x19],cl
  4244fe:	bound  esp,QWORD PTR [ecx]
  424500:	mov    edx,0x3566ce95
  424505:	mov    cl,0x1c
  424507:	inc    edi
  424508:	repz neg DWORD PTR [edi+0x70b4a2a2]
  42450f:	mov    ch,0x8c
  424511:	lea    ebx,[eax]
  424513:	maskmovq mm5,(bad)
  424514:	imul   DWORD PTR [eax+eax*2+0x4]
  424518:	fnsave [ebx+ecx*2-0x5f45b4fc]
  42451f:	cmp    edi,edx
  424521:	aas    
  424522:	pusha  
  424523:	and    ah,BYTE PTR [edx+0x514136e2]
  424529:	sbb    BYTE PTR [esi-0x561f6c51],ah
  42452f:	mov    cl,0x5d
  424531:	fs mov ah,0x85
  424534:	clc    
  424535:	or     ecx,DWORD PTR [ebp-0x6dc3b8ff]
  42453b:	fdiv   DWORD PTR [edi-0xc]
  42453e:	push   cs
  42453f:	out    0xb7,eax
  424541:	mov    ch,0xc7
  424543:	inc    esp
  424544:	outs   dx,BYTE PTR ds:[esi]
  424545:	arpl   WORD PTR [edi-0x37],si
  424548:	xchg   edi,eax
  424549:	sbb    eax,0x20dbb5f
  42454e:	test   bh,0xb5
  424551:	push   0xffffffc5
  424553:	loop   0x424590
  424555:	lahf   
  424556:	dec    esi
  424557:	dec    ebp
  424558:	push   ecx
  424559:	inc    ecx
  42455a:	mov    eax,0xbe5d26b7
  42455f:	cld    
  424560:	mov    bh,0xcb
  424562:	stos   DWORD PTR es:[edi],eax
  424563:	jmp    0x6ae7:0xdcdb139f
  42456a:	and    edi,DWORD PTR fs:[ecx+ebp*8]
  42456e:	into   
  42456f:	jns    0x4244f5
  424571:	fstp   TBYTE PTR [ebx+0x35]
  424574:	push   esi
  424575:	pop    ebp
  424576:	xchg   edx,eax
  424577:	pop    ds
  424578:	das    
  424579:	jns    0x4245cf
  42457b:	dec    ecx
  42457c:	cmc    
  42457d:	jge    0x424506
  42457f:	dec    edi
  424580:	aad    0xde
  424582:	push   0xffffffd6
  424584:	mov    WORD PTR [eax-0x65],gs
  424587:	sub    DWORD PTR [edx-0x3e],esi
  42458a:	call   FWORD PTR [ecx]
  42458c:	popf   
  42458d:	bound  edx,QWORD PTR [eax]
  42458f:	mov    esi,DWORD PTR [edx+0x6]
  424592:	clc    
  424593:	outs   dx,BYTE PTR ds:[esi]
  424594:	xchg   ebx,eax
  424595:	cmp    ecx,esi
  424597:	inc    ecx
  424598:	dec    ebp
  424599:	stc    
  42459a:	pop    edi
  42459b:	es add cl,dh
  42459e:	push   0x7b
  4245a0:	mov    bh,0x81
  4245a2:	sbb    bl,bh
  4245a4:	pop    eax
  4245a5:	dec    edx
  4245a6:	ins    DWORD PTR es:[edi],dx
  4245a7:	shr    DWORD PTR [ecx+0x14],1
  4245aa:	jb     0x4245aa
  4245ac:	call   0x0:0x0
  4245b3:	add    BYTE PTR [eax],al
  4245b5:	add    BYTE PTR [eax],al
  4245b7:	add    BYTE PTR [eax],al
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x717b20b7]
  4245c9:	or     eax,0x1be72
  4245ce:	sti    
  4245cf:	add    DWORD PTR [eax],eax
  4245d1:	add    BYTE PTR [eax+eax*2+0x35],dl
  4245d5:	xchg   esi,eax
  4245d6:	xchg   edx,eax
  4245d7:	pop    ebx
  4245d8:	add    esi,DWORD PTR [esi+0x65]
  4245db:	cli    
  4245dc:	scas   al,BYTE PTR es:[edi]
  4245dd:	adc    ecx,DWORD PTR [ebx+0x768e4514]
  4245e3:	xor    dh,ah
  4245e5:	pusha  
  4245e6:	xor    DWORD PTR [ebp+0x38],edi
  4245e9:	arpl   WORD PTR [esi+0x19f3dc08],bx
  4245ef:	fs jl  0x424626
  4245f2:	ret    
  4245f3:	nop
  4245f4:	in     eax,dx
  4245f5:	cvtdq2ps xmm3,XMMWORD PTR [edx-0x2a407c13]
  4245fc:	xchg   DWORD PTR [esi+0x4b8bdf32],edi
  424602:	add    ebx,DWORD PTR [eax-0x6e]
  424605:	mov    ebx,fs
  424607:	inc    eax
  424608:	add    DWORD PTR [esi],0x9e320bde
  42460e:	sti    
  42460f:	dec    ebp
  424610:	in     eax,dx
  424611:	je     0x424618
  424613:	scas   eax,DWORD PTR es:[edi]
  424614:	and    edi,DWORD PTR [ecx+0x8]
  424617:	gs arpl bx,bp
  42461a:	lea    eax,[esi]
  42461c:	jno    0x424690
  42461e:	inc    esi
  42461f:	xor    ebx,eax
  424621:	add    al,BYTE PTR [eax]
  424623:	lods   eax,DWORD PTR ds:[esi]
  424624:	int3   
  424625:	jns    0x4245b0
  424627:	cs scas eax,DWORD PTR es:[edi]
  424629:	call   0xca32a6e8
  42462e:	stos   DWORD PTR es:[edi],eax
  42462f:	push   DWORD PTR [edi-0x5f5ccedb]
  424635:	fnsetpm(287 only) 
  424637:	jns    0x424669
  424639:	stc    
  42463a:	nop
  42463b:	aad    0xe8
  42463d:	shl    BYTE PTR [ebp-0x3f],1
  424640:	sbb    eax,0x30a5b3ae
  424645:	call   0xf432:0xdb688864
  42464c:	lds    esp,FWORD PTR [ecx]
  42464e:	xor    ebx,DWORD PTR [esi-0x37]
  424651:	mov    bh,0x19
  424653:	push   ebx
  424654:	sub    edx,esp
  424656:	sub    BYTE PTR [eax-0x610f678a],dh
  42465c:	push   0x760bf451
  424661:	(bad)  
  424662:	in     al,dx
  424663:	xchg   edi,eax
  424664:	leave  
  424665:	fisttp QWORD PTR [edi+0x4b]
  424668:	mov    ch,0x38
  42466a:	jecxz  0x4246c4
  42466c:	cwde   
  42466d:	push   ecx
  42466e:	adc    al,0x71
  424670:	sbb    DWORD PTR [eax+0x52],esi
  424673:	call   DWORD PTR [ebx-0x72]
  424676:	fimul  WORD PTR [ebp+0x40]
  424679:	or     eax,0x1b2b98ae
  42467e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42467f:	cld    
  424680:	inc    ecx
  424681:	xor    cl,BYTE PTR [esi+0x25]
  424684:	cwde   
  424685:	mov    bl,0xa9
  424687:	cmp    dl,bl
  424689:	repz fisttp WORD PTR [edx-0x7e1ead7e]
  424690:	adc    eax,0x7ec3cc5e
  424695:	sub    al,0xe1
  424697:	test   eax,0x8bc2a3c0
  42469c:	mov    eax,0x93753a
  4246a1:	call   DWORD PTR [edx+0x5b]
  4246a4:	dec    esp
  4246a5:	je     0x424655
  4246a7:	pop    ecx
  4246a8:	push   esi
  4246a9:	cmp    eax,0x8455832b
  4246ae:	adc    eax,0xf88481ba
  4246b3:	pop    ds
  4246b4:	mov    DWORD PTR [edx],ebp
  4246b6:	dec    esp
  4246b7:	leave  
  4246b8:	cmp    eax,DWORD PTR [ecx+0x39a3af4a]
  4246be:	fnstsw WORD PTR [ecx]
  4246c0:	dec    ecx
  4246c1:	push   esp
  4246c2:	std    
  4246c3:	mov    ebx,esp
  4246c5:	cmc    
  4246c6:	jmp    0x424653
  4246c8:	xchg   ebx,eax
  4246c9:	clc    
  4246ca:	scas   al,BYTE PTR es:[edi]
  4246cb:	inc    ebx
  4246cc:	xchg   ebx,eax
  4246cd:	pop    edi
  4246ce:	imul   eax,esp,0xffffffd7
  4246d1:	jns    0x4246c8
  4246d3:	push   0x16
  4246d5:	sbb    eax,DWORD PTR [ebx+0x6d]
  4246d8:	sub    DWORD PTR [ebx+edx*8-0x3b13f1fd],edx
  4246df:	push   es
  4246e0:	mov    cs,WORD PTR [ebx]
  4246e2:	outs   dx,BYTE PTR ds:[esi]
  4246e3:	push   ecx
  4246e4:	lods   eax,DWORD PTR ds:[esi]
  4246e5:	mov    eax,0xb53c834b
  4246ea:	inc    edx
  4246eb:	xor    esp,esi
  4246ed:	out    dx,eax
  4246ee:	jb     0x424766
  4246f0:	leave  
  4246f1:	inc    ecx
  4246f2:	mov    bl,0x28
  4246f4:	lods   eax,DWORD PTR ds:[esi]
  4246f5:	ss iret 
  4246f7:	xchg   ebx,eax
  4246f8:	xchg   ebx,eax
  4246f9:	dec    esi
  4246fa:	call   0x91bc:0xff1624d1
  424701:	adc    al,0x82
  424703:	lods   al,BYTE PTR ds:[esi]
  424704:	adc    eax,0xfc53d9c5
  424709:	mov    bh,0x25
  42470b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42470c:	push   edi
  42470d:	pop    esi
  42470e:	ds mov dl,0xf1
  424711:	pop    ecx
  424712:	shr    DWORD PTR ds:0xd1b6be5d,1
  424718:	and    al,0x57
  42471b:	jmp    0x5b35:0xbc119427
  424722:	in     al,0x3d
  424724:	add    eax,DWORD PTR [ecx+eiz*8]
  424727:	mov    ch,0xd0
  424729:	xor    ebp,DWORD PTR [esi+0x6c010672]
  42472f:	push   es
  424730:	push   edx
  424731:	cwde   
  424732:	paddsb mm7,QWORD PTR [ebx]
  424735:	jmp    0xec00:0x601798fb
  42473c:	arpl   WORD PTR [ebx+0x3e],si
  42473f:	call   0x5be4:0x4d429a64
  424746:	scas   al,BYTE PTR es:[edi]
  424747:	pop    ss
  424748:	fcomi  st,st(6)
  42474a:	jg     0x424787
  42474c:	inc    edi
  42474d:	je     0x4246ed
  42474f:	lods   al,BYTE PTR ds:[esi]
  424750:	pop    DWORD PTR [edi+ebx*1-0x5ee31800]
  424757:	sbb    bh,BYTE PTR [edx]
  424759:	sbb    ah,BYTE PTR [ecx]
  42475b:	push   eax
  42475c:	jl     0x424796
  42475e:	and    edi,DWORD PTR [ecx]
  424760:	fcmovnbe st,st(6)
  424762:	sbb    eax,0x896341de
  424767:	sahf   
  424768:	cli    
  424769:	pop    es
  42476a:	add    DWORD PTR [ecx],esi
  42476c:	scas   al,BYTE PTR es:[edi]
  42476d:	adc    al,BYTE PTR [edi-0x4a]
  424770:	shr    DWORD PTR [edi+eiz*8],1
  424773:	sub    ch,BYTE PTR [eax]
  424775:	gs mov esp,0x497fbc6d
  42477b:	pop    edx
  42477c:	ss out 0x44,eax
  42477f:	push   ecx
  424780:	ss shl ecx,1
  424783:	or     ecx,edx
  424785:	push   edi
  424786:	cmp    BYTE PTR [ecx+0x4d],0xb1
  42478a:	adc    DWORD PTR [ebp+0x65e454c1],0x33d8e232
  424794:	sub    DWORD PTR [ebp-0x1f91e133],ebx
  42479a:	fs jb  0x42472a
  42479d:	call   0xa9a8:0xe002e611
  4247a4:	mov    ch,0xa
  4247a6:	mov    bh,0x95
  4247a8:	inc    edi
  4247a9:	rol    BYTE PTR [ecx],cl
  4247ab:	push   es
  4247ac:	pusha  
  4247ad:	sahf   
  4247ae:	cmp    eax,0x1fec20b2
  4247b3:	std    
  4247b4:	jb     0x4247ca
  4247b6:	gs ins BYTE PTR es:[edi],dx
  4247b8:	lods   al,BYTE PTR ds:[esi]
  4247b9:	or     BYTE PTR [edx+0x8],bh
  4247bc:	(bad)  
  4247bd:	jmp    0x49a1:0x955d2980
  4247c4:	pop    eax
  4247c5:	mov    esp,0xe9940987
  4247ca:	loop   0x42476d
  4247cc:	ins    DWORD PTR es:[edi],dx
	...
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0xe5
  4247e7:	adc    BYTE PTR [eax],0x73
  4247ea:	ins    DWORD PTR es:[edi],dx
  4247eb:	rol    BYTE PTR [ecx],0x0
  4247ee:	sti    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [ebx+0x4d8fb3eb],bl
  4247f7:	mov    dh,BYTE PTR [esi+ecx*8-0x7c]
  4247fb:	push   ecx
  4247fc:	jmp    0xaee5:0xb3c3fa77
  424803:	enter  0x257f,0x2e
  424807:	fstp   DWORD PTR [edx-0x5c]
  42480a:	sub    eax,0x52f2159f
  42480f:	dec    edi
  424810:	add    DWORD PTR [edi],edi
  424812:	mov    BYTE PTR [ebp+0x2e],ah
  424815:	mov    es,WORD PTR [edx]
  424817:	or     al,0x20
  424819:	and    al,0x99
  42481b:	jnp    0x424832
  42481d:	mov    edx,0x14157a05
  424822:	neg    BYTE PTR [edx-0x64]
  424825:	dec    BYTE PTR ds:0x3c658577
  42482b:	mul    ebp
  42482d:	ret    0x838
  424830:	or     BYTE PTR [esi-0x5a1b62d7],ah
  424836:	stos   BYTE PTR es:[edi],al
  424837:	push   esp
  424838:	arpl   WORD PTR [ebp+0x3e761b87],bp
  42483e:	in     eax,0xf5
  424840:	pop    ebp
  424841:	into   
  424842:	fucomp st(6)
  424844:	inc    ebx
  424845:	js     0x4247fc
  424847:	fsubr  DWORD PTR [ebx]
  424849:	mov    ?,WORD PTR [edi-0x473e3138]
  42484f:	adc    al,BYTE PTR [ecx-0x1a29ab4f]
  424855:	and    al,0x17
  424857:	ja     0x4247f1
  424859:	or     esp,0xffffff94
  42485c:	sahf   
  42485d:	cmc    
  42485e:	fisttp QWORD PTR [esi+eiz*4-0x78]
  424862:	leave  
  424863:	inc    esi
  424864:	mov    ecx,DWORD PTR [edi-0x43b7c62]
  42486a:	clc    
  42486b:	and    eax,0xe418d0ff
  424870:	sbb    ebp,ebp
  424872:	push   esi
  424873:	lods   eax,DWORD PTR ds:[esi]
  424874:	jge    0x424869
  424876:	or     DWORD PTR [ecx],ecx
  424878:	aaa    
  424879:	fst    QWORD PTR [esi+ebp*2+0x0]
  42487d:	lsl    edx,si
  424880:	jmp    0x2cdc:0x43c9dbc0
  424887:	sti    
  424888:	adc    eax,0xfe47a81d
  42488d:	pop    edx
  42488e:	popf   
  42488f:	adc    al,0x89
  424891:	(bad)  
  424892:	fs cmp edi,edi
  424895:	cmp    eax,0x3fe6842c
  42489a:	mov    ds:0xbf5c9cb5,eax
  42489f:	loopne 0x424862
  4248a1:	les    ebx,FWORD PTR [edx]
  4248a3:	inc    edx
  4248a4:	test   eax,0x77f52ed
  4248a9:	ins    DWORD PTR es:[edi],dx
  4248aa:	adc    DWORD PTR [ecx],eax
  4248ac:	lods   al,BYTE PTR ds:[esi]
  4248ad:	xchg   BYTE PTR [ecx],ah
  4248af:	ins    BYTE PTR es:[edi],dx
  4248b0:	jle    0x424896
  4248b2:	adc    eax,0x201c86c8
  4248b7:	rcr    DWORD PTR [ebx-0x53],cl
  4248ba:	push   edx
  4248bb:	ins    BYTE PTR es:[edi],dx
  4248bc:	adc    DWORD PTR [edi-0x76],edx
  4248bf:	cmp    dh,al
  4248c1:	xor    BYTE PTR [edi],dl
  4248c3:	imul   esp,DWORD PTR [edi+0xf32a952],0xae5737b5
  4248cd:	sub    esi,DWORD PTR ds:0x31cb4bab
  4248d3:	mov    esp,?
  4248d5:	shl    BYTE PTR [esi-0x4b],1
  4248d8:	lock push edx
  4248da:	mov    al,0x9c
  4248dc:	mov    al,ds:0xfd4b1e62
  4248e1:	fst    DWORD PTR ds:0xacfb40ab
  4248e7:	mov    esp,0xed6f8d17
  4248ec:	imul   esp,DWORD PTR [edi+0x67],0xffffffcb
  4248f0:	mov    ds:0xd9c1e987,al
  4248f5:	adc    dh,BYTE PTR [ecx]
  4248f7:	add    DWORD PTR [edx+0x3b],esp
  4248fa:	test   al,0x77
  4248fc:	mov    al,0xc4
  4248fe:	xchg   ebx,eax
  4248ff:	ficomp DWORD PTR [ecx+0x2f88cf94]
  424905:	or     edi,esi
  424907:	pop    ss
  424908:	pusha  
  424909:	popf   
  42490a:	inc    esp
  42490b:	pop    ecx
  42490c:	fs ins BYTE PTR es:[edi],dx
  42490e:	pop    ebx
  42490f:	out    0xae,eax
  424911:	mov    eax,0x66bff4bf
  424916:	push   es
  424917:	dec    edx
  424918:	jno    0x4248f5
  42491a:	mov    cs,WORD PTR [edi+ebp*1]
  42491d:	or     al,0xaa
  42491f:	in     al,0x5
  424921:	pop    ecx
  424922:	sub    al,0xe9
  424924:	shl    DWORD PTR [edx+0x49],1
  424927:	adc    BYTE PTR [edx+esi*4-0x58f3eda1],bl
  42492e:	and    bl,cl
  424930:	pop    ss
  424931:	mov    esp,0x480ad6c9
  424936:	push   ebx
  424937:	xor    al,0xf8
  424939:	xor    DWORD PTR [edx+0x2902452],edx
  42493f:	aaa    
  424940:	sbb    al,0x8c
  424942:	lock pop edx
  424944:	int3   
  424945:	push   edx
  424946:	add    BYTE PTR [ecx],al
  424948:	pushf  
  424949:	mov    ds:0x768ee530,al
  42494e:	fld    QWORD PTR [eax-0x25]
  424951:	aas    
  424952:	and    bl,bl
  424954:	shr    BYTE PTR [edx+0x6b],cl
  424957:	cmp    DWORD PTR [ebx-0x7e77d6b5],ecx
  42495d:	add    ebp,ecx
  42495f:	pop    esi
  424960:	iret   
  424961:	cli    
  424962:	mov    ch,0x3a
  424964:	call   0x64:0xc1726c1
  42496b:	sbb    DWORD PTR [ebx+ebp*1+0x669de9fc],ecx
  424972:	add    bl,al
  424974:	dec    ebp
  424975:	out    0x42,al
  424977:	jno    0x424941
  424979:	fbstp  TBYTE PTR [ecx-0x7a]
  42497c:	push   ebx
  42497d:	jb     0x42498b
  42497f:	imul   edx,DWORD PTR [edx+0x45],0x64
  424983:	bound  esi,QWORD PTR [esi+0x14]
  424986:	mov    edx,0x4e8c18d5
  42498b:	push   ebp
  42498c:	stos   BYTE PTR es:[edi],al
  42498d:	or     eax,0xf2cdda6c
  424992:	shl    DWORD PTR ds:0xcb27f2a6,cl
  424998:	inc    esi
  424999:	jno    0x4249ba
  42499b:	(bad)  
  42499c:	and    esp,esi
  42499e:	jne    0x424951
  4249a0:	(bad)  
  4249a1:	ins    DWORD PTR es:[edi],dx
  4249a2:	dec    ebp
  4249a3:	out    dx,al
  4249a4:	out    0x52,eax
  4249a6:	xchg   ecx,eax
  4249a7:	fisub  WORD PTR [eax]
  4249a9:	shl    BYTE PTR [ebp+0x1b],cl
  4249ac:	sti    
  4249ad:	retf   0xbf7
  4249b0:	cdq    
  4249b1:	repz and eax,0xeb31cf57
  4249b7:	ins    BYTE PTR es:[edi],dx
  4249b8:	(bad)  
  4249b9:	fst    DWORD PTR [ecx-0x6115a5d5]
  4249bf:	dec    edx
  4249c0:	mov    cl,0x54
  4249c2:	retf   0x22aa
  4249c5:	or     al,0x38
  4249c7:	jno    0x424a47
  4249c9:	loop   0x4249a0
  4249cb:	inc    esi
  4249cc:	xchg   DWORD PTR [edx+edi*8-0x39],ecx
  4249d0:	repnz sub BYTE PTR [edi],dl
  4249d3:	inc    esp
  4249d4:	ror    DWORD PTR [edx-0xfa9ff77],1
  4249da:	xchg   DWORD PTR [ebp-0x6c],ecx
  4249dd:	sbb    esi,eax
  4249df:	mov    ah,BYTE PTR [edi]
  4249e1:	ins    BYTE PTR es:[edi],dx
  4249e2:	mov    cl,0x21
  4249e4:	xchg   esi,eax
  4249e5:	jns    0x4249d4
  4249e7:	lahf   
  4249e8:	mov    ebp,0x6bac0fa3
	...
  4249f9:	add    BYTE PTR [ebx+0x55],al
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	std    
  424a07:	and    eax,0xc268f6bb
  424a0c:	add    DWORD PTR [eax],eax
  424a0e:	sti    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [esi+edi*2],dl
  424a14:	inc    esp
  424a15:	cmp    al,0x73
  424a17:	cmp    eax,0x35319193
  424a1c:	aad    0x6c
  424a1e:	pushf  
  424a1f:	adc    eax,0xb6b41d23
  424a24:	cld    
  424a25:	adc    esi,DWORD PTR [edi+0x53]
  424a28:	fiadd  WORD PTR [edx-0x50]
  424a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a2c:	push   0x42
  424a2e:	rcr    DWORD PTR [ebx+0x9abf247],1
  424a34:	(bad)  
  424a35:	retf   0x9875
  424a38:	outs   dx,DWORD PTR ds:[esi]
  424a39:	scas   al,BYTE PTR es:[edi]
  424a3a:	and    ch,bh
  424a3c:	add    al,0x44
  424a3e:	sub    DWORD PTR [edx],0xffffffe1
  424a41:	clc    
  424a42:	dec    esp
  424a43:	sub    dl,cl
  424a45:	hlt    
  424a46:	xchg   DWORD PTR [esi],esp
  424a48:	mov    DWORD PTR [edx],edi
  424a4a:	out    dx,eax
  424a4b:	pushf  
  424a4c:	fdiv   QWORD PTR [esi]
  424a4e:	std    
  424a4f:	push   esi
  424a50:	add    eax,0x4752532a
  424a55:	sub    eax,0xe48b71dc
  424a5a:	xchg   DWORD PTR [ebp-0x26f0f6b5],eax
  424a60:	jb     0x424a98
  424a62:	jnp    0x424a05
  424a64:	ss push esp
  424a66:	int    0x4
  424a68:	call   0x83a5efdc
  424a6d:	scas   al,BYTE PTR es:[edi]
  424a6e:	or     BYTE PTR [eax-0x34],bh
  424a71:	test   DWORD PTR [ebp-0x58],edi
  424a74:	push   eax
  424a75:	es aaa 
  424a77:	std    
  424a78:	xor    ah,BYTE PTR [ebx]
  424a7a:	mov    esp,0x3b02ceb9
  424a7f:	jp     0x424afd
  424a81:	push   esp
  424a82:	mov    BYTE PTR [eax+0x7b],bl
  424a85:	jne    0x424a92
  424a87:	mov    bl,0x34
  424a89:	dec    esi
  424a8a:	jnp    0x424a0e
  424a8c:	repz dec edx
  424a8e:	dec    eax
  424a8f:	mov    ch,0xf0
  424a91:	fs call 0x9c63:0x9432bb9b
  424a99:	outs   dx,BYTE PTR ds:[esi]
  424a9a:	push   ds
  424a9b:	addr16 out dx,eax
  424a9d:	xor    al,BYTE PTR [edx]
  424a9f:	push   edi
  424aa0:	push   ebx
  424aa1:	mov    al,BYTE PTR [ecx+0x4bd4f7e7]
  424aa7:	repz mov ebx,0x6b96fa06
  424aad:	mov    dl,0xeb
  424aaf:	sbb    eax,0x3ee6aec2
  424ab4:	imul   ebx,DWORD PTR [edx-0x4981b02a],0x72f891b1
  424abe:	jmp    0x28a2:0xd9feb7a0
  424ac5:	repnz ins BYTE PTR es:[edi],dx
  424ac7:	dec    edi
  424ac8:	add    eax,0x7fd0ddba
  424acd:	sbb    BYTE PTR [ebx+0x2a6d4d7a],bl
  424ad3:	cmp    ah,al
  424ad5:	add    esi,DWORD PTR [eax+ecx*1-0x4eafee44]
  424adc:	js     0x424abc
  424ade:	inc    ecx
  424adf:	out    0x43,al
  424ae1:	add    ah,BYTE PTR [esi]
  424ae3:	pop    ecx
  424ae4:	rol    DWORD PTR [ebx],cl
  424ae6:	iret   
  424ae7:	mov    esp,0xff0d5cad
  424aec:	repz in al,0x6e
  424aef:	mov    dh,0x44
  424af1:	gs cwde 
  424af3:	add    BYTE PTR [esi-0x1c],ch
  424af6:	cli    
  424af7:	retf   0x3a17
  424afa:	test   dl,dl
  424afc:	dec    ebp
  424afd:	push   ebp
  424afe:	inc    edx
  424aff:	mov    WORD PTR [edi],fs
  424b01:	in     eax,dx
  424b02:	xchg   BYTE PTR [eax],dh
  424b04:	ret    
  424b05:	call   0xf236:0x407d9981
  424b0c:	add    ch,BYTE PTR [esi+ecx*2+0x30566f8a]
  424b13:	mov    ebp,0xf812d5e0
  424b18:	jl     0x424b25
  424b1a:	push   ecx
  424b1b:	and    eax,0x23bb2836
  424b20:	mov    dl,0x71
  424b22:	(bad)  
  424b23:	xchg   edi,eax
  424b24:	inc    ebx
  424b26:	sbb    al,0xc1
  424b28:	mov    WORD PTR [esi+0x232760c3],ss
  424b2e:	add    eax,0x4985856c
  424b33:	mov    edi,0xb46031b7
  424b38:	pop    ss
  424b39:	sbb    ebx,DWORD PTR [esi+0x3ecd7fc3]
  424b3f:	or     DWORD PTR [edx],esp
  424b41:	iret   
  424b42:	mov    ch,0xf3
  424b44:	push   ebp
  424b45:	mov    ah,0xab
  424b47:	sub    dl,bl
  424b49:	mov    ch,0xf8
  424b4b:	xchg   DWORD PTR [eax+0x10],ebp
  424b4e:	jbe    0x424aee
  424b50:	les    eax,FWORD PTR [eax+0x7c]
  424b53:	not    BYTE PTR [ebp+0x10c6112c]
  424b59:	add    ah,BYTE PTR [ecx+0xf]
  424b5c:	js     0x424b35
  424b5e:	outs   dx,DWORD PTR ds:[esi]
  424b5f:	mov    ah,0x35
  424b61:	icebp  
  424b62:	stos   BYTE PTR es:[edi],al
  424b63:	mov    ds:0x728e8f5c,al
  424b68:	xchg   edi,ebp
  424b6a:	mov    edx,0x45c7918b
  424b6f:	fcom   QWORD PTR [ebp+0x6154bec6]
  424b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b76:	push   edx
  424b77:	sub    eax,0x31f5389
  424b7c:	jmp    0x424b53
  424b7e:	arpl   WORD PTR [edi+0x5e],sp
  424b81:	scas   eax,DWORD PTR es:[edi]
  424b82:	aad    0x9b
  424b84:	sbb    eax,0xaf5d87b8
  424b89:	in     eax,0x2a
  424b8b:	fnsave [edi-0x4f]
  424b8e:	lahf   
  424b8f:	or     eax,0x642e7172
  424b94:	addr16 aad 0x52
  424b97:	push   0x4f870b2b
  424b9c:	xor    al,0x19
  424b9e:	inc    edi
  424b9f:	pop    ss
  424ba0:	cmp    al,0x8d
  424ba2:	ins    BYTE PTR es:[edi],dx
  424ba3:	cdq    
  424ba4:	xchg   esp,eax
  424ba5:	mov    WORD PTR [ebx+0x76],ss
  424ba8:	sbb    al,0x6a
  424baa:	xor    al,0xb3
  424bac:	mov    ds:0x1e4a5fa5,al
  424bb1:	enter  0x1428,0x4a
  424bb5:	jp     0x424bb5
  424bb7:	fwait
  424bb8:	int3   
  424bb9:	pop    ss
  424bba:	adc    al,0x69
  424bbc:	push   edx
  424bbd:	mov    ebp,0xc2d1c71f
  424bc2:	sub    eax,0xc1c75e54
  424bc7:	jmp    0xc07b:0x91b3692d
  424bce:	fcmovnu st,st(4)
  424bd0:	xchg   BYTE PTR [edi],bh
  424bd2:	or     dl,0x0
  424bd5:	mov    bl,0x76
  424bd7:	in     eax,0x2c
  424bd9:	rcl    ecx,0x1e
  424bdc:	jg     0x424c3b
  424bde:	pop    esi
  424bdf:	mov    ecx,0x7e9fdab7
  424be4:	test   al,0x37
  424be6:	je     0x424bd9
  424be8:	push   DWORD PTR [esi]
  424bea:	pop    ds
  424beb:	pushf  
  424bec:	stc    
  424bed:	ins    BYTE PTR es:[edi],dx
  424bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bef:	jl     0x424bf2
  424bf1:	mov    bh,0x45
  424bf3:	clc    
  424bf4:	popa   
  424bf5:	cmc    
  424bf6:	in     al,0x8f
  424bf8:	mov    edi,0xd71a0aba
  424bfd:	retf   
  424bfe:	test   DWORD PTR ds:0x7b6a37e8,0x1bf94cdf
  424c08:	mul    BYTE PTR [ebp-0x78]
  424c0b:	inc    eax
  424c0c:	repz add BYTE PTR [eax],al
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0xb3
  424c27:	dec    eax
  424c28:	loopne 0x424bce
  424c2a:	arpl   sp,ax
  424c2c:	add    DWORD PTR [eax],eax
  424c2e:	sti    
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [ecx+0x3edf96f4],ch
  424c37:	mov    al,ds:0xaf03cb67
  424c3c:	retf   
  424c3d:	inc    esi
  424c3e:	xchg   ebx,eax
  424c3f:	enter  0xc382,0xf1
  424c43:	pop    edx
  424c44:	frstor [edx-0x1d]
  424c47:	aaa    
  424c48:	or     DWORD PTR cs:[ebx+ebx*2],ebx
  424c4c:	sbb    BYTE PTR [ebx+esi*2-0x78],al
  424c50:	enter  0xa0d0,0x67
  424c54:	and    esi,DWORD PTR [edi]
  424c56:	int    0x62
  424c58:	lahf   
  424c59:	xchg   ebp,eax
  424c5a:	xor    bh,dh
  424c5c:	sbb    ebx,DWORD PTR [eax+0x67]
  424c5f:	push   edx
  424c60:	jno    0x424c01
  424c62:	loopne 0x424c63
  424c64:	cld    
  424c65:	xchg   esi,eax
  424c66:	or     al,0xd2
  424c68:	jb     0x424c30
  424c6a:	pop    edi
  424c6b:	je     0x424c02
  424c6d:	adc    al,0x5f
  424c6f:	mov    dl,BYTE PTR [edx]
  424c71:	inc    ebp
  424c72:	pushf  
  424c73:	cmp    DWORD PTR [esi-0x64],edi
  424c76:	sahf   
  424c77:	xchg   esi,eax
  424c78:	test   BYTE PTR [edi+esi*4+0x26],al
  424c7c:	std    
  424c7d:	lock pop esi
  424c7f:	jecxz  0x424c09
  424c81:	aaa    
  424c82:	and    DWORD PTR [eax+0x5c],0xa69be102
  424c89:	pop    es
  424c8a:	mov    esp,0x750917a2
  424c8f:	int3   
  424c90:	push   eax
  424c91:	inc    DWORD PTR [ecx]
  424c93:	cmp    DWORD PTR [ecx+0x5f],0x51
  424c97:	or     esp,eax
  424c99:	les    ebx,FWORD PTR [eax+0x3a]
  424c9c:	call   0x5fb07414
  424ca1:	and    DWORD PTR [ebp-0x73d9a29a],edx
  424ca7:	inc    esp
  424ca8:	gs int 0xf1
  424cab:	not    DWORD PTR [eax+0x30]
  424cae:	shl    BYTE PTR [ecx-0x2],1
  424cb1:	hlt    
  424cb2:	out    0x47,eax
  424cb4:	jl     0x424c4a
  424cb6:	pop    ebp
  424cb7:	jb     0x424cdd
  424cb9:	fcmove st,st(1)
  424cbb:	mov    esi,0xd9f5adb7
  424cc0:	das    
  424cc1:	pop    ds
  424cc2:	sar    DWORD PTR [ebp-0x21],0x6d
  424cc6:	xor    bl,BYTE PTR [eax+0x3bf45ad6]
  424ccc:	jmp    0x424c89
  424cce:	(bad)  
  424ccf:	bound  edi,QWORD PTR [eax+eiz*1+0x72d7e84]
  424cd6:	cmp    al,0x9
  424cd8:	mov    dh,0x26
  424cda:	fwait
  424cdb:	adc    DWORD PTR [edx-0x3e],0x1fe93df8
  424ce2:	sbb    bh,dh
  424ce4:	das    
  424ce5:	in     al,0x65
  424ce7:	sbb    edi,DWORD PTR [edx+ebx*1]
  424cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ceb:	sub    DWORD PTR [ebx+0xa5af1d5],ecx
  424cf1:	pop    esp
  424cf2:	clc    
  424cf3:	nop
  424cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cf5:	xchg   ebx,eax
  424cf6:	push   edi
  424cf7:	call   0xf301:0xc2fc043e
  424cfe:	pop    eax
  424cff:	ds mov eax,0x7ac6d4fb
  424d05:	scas   al,BYTE PTR es:[edi]
  424d06:	and    BYTE PTR [esi+0x168f7bcc],0xfc
  424d0d:	test   dl,bh
  424d0f:	inc    ecx
  424d10:	(bad)  
  424d11:	pop    ebp
  424d12:	inc    ebp
  424d13:	std    
  424d14:	push   esi
  424d15:	mov    esi,0x201969c
  424d1b:	mov    BYTE PTR [ebx+0x6d88e72a],ch
  424d21:	push   ds
  424d22:	mov    edi,DWORD PTR [ebp+0x74]
  424d25:	cmp    esi,DWORD PTR [eax]
  424d27:	leave  
  424d28:	or     eax,0x10af0704
  424d2d:	push   eax
  424d2e:	loop   0x424d03
  424d30:	dec    edx
  424d31:	jl     0x424d21
  424d33:	adc    al,0xf7
  424d35:	push   esp
  424d36:	xor    eax,0xdbb9168
  424d3b:	pushf  
  424d3c:	(bad)  
  424d3d:	rcl    bl,1
  424d3f:	mov    edi,DWORD PTR [edx+0x6a]
  424d42:	push   0xffffff91
  424d44:	stos   BYTE PTR es:[edi],al
  424d45:	mov    BYTE PTR [eax+0x33],cl
  424d48:	xchg   edx,eax
  424d49:	jl     0x424dab
  424d4b:	dec    esp
  424d4c:	loop   0x424d85
  424d4e:	pop    es
  424d4f:	inc    ebp
  424d50:	ror    DWORD PTR [esi-0x5430ece0],1
  424d56:	cdq    
  424d57:	je     0x424db5
  424d59:	pop    es
  424d5a:	mov    eax,ds:0x4ca8a31f
  424d5f:	cli    
  424d60:	add    BYTE PTR [edi+0x5d9d32b3],dh
  424d66:	dec    edx
  424d67:	ins    DWORD PTR es:[edi],dx
  424d68:	(bad)  
  424d69:	loopne 0x424dd6
  424d6b:	sti    
  424d6c:	xor    BYTE PTR [ebx+edi*2+0x14c51475],dh
  424d73:	xor    eax,0x5b5c49e2
  424d78:	iret   
  424d79:	pop    ss
  424d7a:	rcr    BYTE PTR [edi+eiz*4],0x3d
  424d7e:	gs int 0x7b
  424d81:	sbb    bh,0xad
  424d84:	test   BYTE PTR [edx+0x26fefb23],al
  424d8a:	adc    eax,0x62423302
  424d8f:	jmp    0xe27e:0xa1f39c1d
  424d96:	push   es
  424d97:	lods   eax,DWORD PTR ds:[esi]
  424d98:	mov    cl,0xf6
  424d9a:	cmp    eax,DWORD PTR [esi+esi*8]
  424d9d:	mov    eax,0x4b09a2a8
  424da2:	xor    bh,BYTE PTR [edi]
  424da4:	jno    0x424db1
  424da6:	or     ah,bh
  424da8:	jae    0x424e1e
  424daa:	pop    edx
  424dab:	inc    esp
  424dac:	cmp    dh,BYTE PTR [ebx+ebx*2-0x5191ce24]
  424db3:	jp     0x424dbc
  424db5:	stos   BYTE PTR es:[edi],al
  424db6:	addr16 push esi
  424db8:	test   DWORD PTR [eax],esp
  424dba:	or     DWORD PTR ds:[esi],edx
  424dbd:	cmp    al,0x6f
  424dbf:	sti    
  424dc0:	xor    cl,dl
  424dc2:	adc    DWORD PTR [ebp-0x7c],esp
  424dc5:	repnz sar BYTE PTR [ecx],cl
  424dc8:	scas   al,BYTE PTR es:[edi]
  424dc9:	cdq    
  424dca:	mov    bh,0x36
  424dcc:	std    
  424dcd:	rcl    BYTE PTR [esi+0x75],cl
  424dd0:	pop    ebp
  424dd1:	sbb    BYTE PTR ds:0x9264f280,ch
  424dd7:	retf   
  424dd8:	pop    esi
  424dd9:	ror    BYTE PTR [edi+ebx*2-0x7f],cl
  424ddd:	es inc ecx
  424ddf:	(bad)  
  424de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424de1:	call   ecx
  424de3:	pop    esp
  424de4:	lds    ebx,FWORD PTR ds:0x70465ff7
  424dea:	mov    cl,0x6c
  424dec:	and    cl,bl
  424dee:	jmp    0xd5e4:0xb94a950c
  424df5:	call   0xd76a:0x4eb80514
  424dfc:	scas   eax,DWORD PTR es:[edi]
  424dfd:	or     DWORD PTR [eax],esi
  424dff:	dec    edx
  424e00:	je     0x424e11
  424e02:	sbb    al,0x26
  424e04:	mov    al,ds:0x2b4de1ed
  424e09:	add    cl,dh
  424e0b:	or     bl,BYTE PTR [edx+ebp*2]
  424e0e:	add    bl,BYTE PTR [ebp-0x16]
  424e11:	xchg   al,dl
  424e13:	lods   al,BYTE PTR ds:[esi]
  424e14:	je     0x424d9c
  424e16:	lds    ebx,FWORD PTR [esi-0x6d6f5126]
  424e1c:	mov    dl,BYTE PTR [ecx]
  424e1e:	lock and BYTE PTR [ebp-0x51],bh
  424e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e23:	shl    esp,0xc8
  424e26:	jne    0x424e64
  424e28:	sbb    BYTE PTR [esi],0xca
  424e2b:	mov    eax,ds:0x95
	...
  424e38:	add    BYTE PTR [eax],al
  424e3a:	ins    BYTE PTR es:[edi],dx
  424e3b:	sub    ch,BYTE PTR [ebx]
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	(bad)  
  424e47:	jae    0x424dc9
  424e49:	jns    0x424ea9
  424e4b:	mov    BYTE PTR [ecx],0x0
  424e4e:	sti    
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    dl,cl
  424e53:	lock jne 0x424df6
  424e56:	sub    bh,BYTE PTR [esi]
  424e58:	push   edx
  424e59:	retf   0x6c16
  424e5c:	mov    ecx,0xeb1b15d8
  424e61:	jmp    0x424e08
  424e63:	in     eax,0xbe
  424e65:	js     0x424e5a
  424e67:	add    cl,bh
  424e69:	out    dx,al
  424e6a:	aas    
  424e6b:	sbb    al,0x44
  424e6d:	pusha  
  424e6e:	stos   BYTE PTR es:[edi],al
  424e6f:	dec    ecx
  424e70:	sub    BYTE PTR [edx],bl
  424e72:	adc    eax,esp
  424e74:	xchg   ebx,eax
  424e75:	loopne 0x424e9b
  424e77:	loopne 0x424ed0
  424e79:	dec    eax
  424e7a:	or     eax,0x149f47e8
  424e7f:	imul   ebx,DWORD PTR [edx],0x9bb0b000
  424e85:	cmp    al,0x3f
  424e87:	idiv   BYTE PTR [ebx]
  424e89:	pusha  
  424e8a:	pop    ss
  424e8b:	dec    esi
  424e8c:	cli    
  424e8d:	xchg   edx,eax
  424e8e:	out    0xd1,eax
  424e90:	sub    eax,0xb3d3336c
  424e95:	pop    ecx
  424e96:	jecxz  0x424efe
  424e98:	data16 loope 0x424e38
  424e9b:	inc    ebp
  424e9c:	loope  0x424e1e
  424e9e:	fbld   TBYTE PTR [ecx]
  424ea0:	dec    BYTE PTR [ebx-0x7c]
  424ea3:	xchg   esi,eax
  424ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ea5:	icebp  
  424ea6:	pop    edx
  424ea7:	fcomp  QWORD PTR [ebp-0x5ee0421d]
  424ead:	push   edi
  424eae:	inc    edx
  424eaf:	sbb    al,0xac
  424eb1:	xchg   eax,edx
  424eb3:	add    DWORD PTR [edi-0x49],esp
  424eb6:	jp     0x424ec1
  424eb8:	jmp    0x424f2a
  424eba:	ret    0x7386
  424ebd:	pop    DWORD PTR [eax-0x60155bad]
  424ec3:	xchg   ebx,eax
  424ec4:	je     0x424f3c
  424ec6:	aas    
  424ec7:	cwde   
  424ec8:	mov    dl,0xf9
  424eca:	mov    WORD PTR [ecx-0x34],cs
  424ecd:	in     eax,0x2c
  424ecf:	mov    ds:0x7a554c7a,al
  424ed4:	fisttp DWORD PTR [eax]
  424ed6:	mov    ?,WORD PTR [ebx]
  424ed8:	ins    DWORD PTR es:[edi],dx
  424ed9:	faddp  st(2),st
  424edb:	lahf   
  424edc:	mov    dh,0x8f
  424ede:	loop   0x424f16
  424ee0:	inc    esp
  424ee1:	mov    WORD PTR ds:0x3e084159,es
  424ee7:	sub    ebp,DWORD PTR [edx+eax*2-0x7349dcee]
  424eee:	mov    eax,DWORD PTR [ecx-0x2b534f45]
  424ef4:	inc    edi
  424ef5:	mov    ebp,0x135fc6d6
  424efa:	js     0x424f6c
  424efc:	mov    bl,0x74
  424efe:	ss sbb eax,0x177e02bd
  424f04:	pusha  
  424f05:	inc    esi
  424f06:	or     DWORD PTR [esi+0xb],0x69616753
  424f0d:	xchg   ecx,eax
  424f0e:	fst    st(1)
  424f10:	lods   al,BYTE PTR ds:[esi]
  424f11:	add    BYTE PTR [edi+ecx*4+0x2b],dh
  424f15:	popa   
  424f16:	loope  0x424f4f
  424f18:	or     dl,BYTE PTR [edx]
  424f1a:	sub    ebx,DWORD PTR [edx+0x79]
  424f1d:	stc    
  424f1e:	xor    BYTE PTR [eax-0x193c0f7f],al
  424f24:	dec    DWORD PTR [edi+0x3d]
  424f27:	xchg   DWORD PTR [edi+0x51560912],ebx
  424f2d:	mov    ebx,0x741d4a3f
  424f32:	mov    esi,0xdfa09b6c
  424f37:	dec    edi
  424f38:	std    
  424f39:	pop    ebx
  424f3a:	xor    eax,0x84708d4f
  424f3f:	popf   
  424f40:	ss loope 0x424f94
  424f43:	sub    al,0x80
  424f45:	mov    ds:0xddd13e1d,eax
  424f4a:	mov    ds:0x5b857962,eax
  424f4f:	int3   
  424f50:	or     cl,dl
  424f52:	shl    eax,0x8d
  424f55:	sbb    al,0x95
  424f57:	lds    eax,FWORD PTR [ebx+0x40]
  424f5a:	sub    edi,DWORD PTR [ebp-0x31e4733c]
  424f60:	jge    0x424f80
  424f62:	mov    edx,0x3fe2138b
  424f67:	out    dx,eax
  424f68:	jb     0x424fd6
  424f6a:	push   ebx
  424f6b:	mov    cl,0x14
  424f6d:	in     eax,dx
  424f6e:	sbb    BYTE PTR ds:0x5e01f6fa,al
  424f74:	scas   eax,DWORD PTR es:[edi]
  424f75:	stos   BYTE PTR es:[edi],al
  424f76:	ror    BYTE PTR [ecx+0x6e],0x5e
  424f7a:	push   ds
  424f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f7c:	or     esi,DWORD PTR [ecx+edi*1+0x16]
  424f80:	cdq    
  424f81:	out    0xa,eax
  424f83:	inc    BYTE PTR [ebx+0x5372bd9a]
  424f89:	dec    esp
  424f8a:	call   0xbd96:0x73426235
  424f91:	fdiv   QWORD PTR [edx-0x11]
  424f94:	sub    ebx,esp
  424f96:	dec    ebx
  424f97:	gs mov ebx,0xca863ddc
  424f9d:	xchg   edi,eax
  424f9e:	lock (bad) 
  424fa0:	shr    DWORD PTR [edi],1
  424fa2:	mov    edx,0x62d08e2
  424fa7:	nop
  424fa8:	xchg   esi,eax
  424fa9:	add    BYTE PTR [edi+0x2b],ch
  424fac:	(bad)
  424faf:	ins    BYTE PTR es:[edi],dx
  424fb0:	add    BYTE PTR [edi+0x6e],dh
  424fb3:	mov    edi,0xc2547002
  424fb8:	lds    ebp,FWORD PTR [ebx+0x60]
  424fbb:	ins    BYTE PTR es:[edi],dx
  424fbc:	jb     0x424f9b
  424fbe:	sar    edi,0xf9
  424fc1:	(bad)  
  424fc3:	enter  0x2b68,0x45
  424fc7:	ins    BYTE PTR es:[edi],dx
  424fc8:	sbb    BYTE PTR [esp+ebp*2],0xb7
  424fcc:	icebp  
  424fcd:	xlat   BYTE PTR ds:[ebx]
  424fce:	pop    eax
  424fcf:	icebp  
  424fd0:	inc    ebp
  424fd1:	or     al,0xf1
  424fd3:	pusha  
  424fd4:	(bad)  
  424fd5:	cmc    
  424fd6:	add    ebp,DWORD PTR [ebx-0x6f]
  424fd9:	call   0x9931:0xa372973f
  424fe0:	aaa    
  424fe1:	lahf   
  424fe2:	dec    edi
  424fe3:	lds    ecx,FWORD PTR [eax+0x2e59541e]
  424fe9:	in     al,0x19
  424feb:	mov    ds:0xcfc666ad,al
  424ff0:	inc    ebp
  424ff1:	outs   dx,BYTE PTR ds:[esi]
  424ff2:	fisttp DWORD PTR [edi]
  424ff4:	adc    BYTE PTR [edx+0x5d49673f],al
  424ffa:	sub    eax,0x8f3f8b4b
  424fff:	cmp    BYTE PTR [edi+0x250e86f5],0x12
  425006:	jb     0x425002
  425008:	fidiv  WORD PTR [esi]
  42500a:	cmp    al,0x6
  42500c:	mov    ds:0x57c01f68,eax
  425011:	in     eax,0x1f
  425013:	(bad)  
  425014:	sar    BYTE PTR [edi-0x7b],0xe
  425018:	inc    di
  42501a:	(bad)  
  42501b:	and    eax,0x9bc36368
  425020:	sbb    BYTE PTR [ebx-0x65630f95],dl
  425026:	xor    DWORD PTR [eax-0x15a48bb9],ebx
  42502c:	(bad)  
  42502e:	jnp    0x424ffe
  425030:	stos   BYTE PTR es:[edi],al
  425031:	in     eax,0x2c
  425033:	ret    0x61d4
  425036:	retf   
  425037:	pop    esi
  425038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425039:	mov    esp,0x7057a9ce
  42503e:	das    
  42503f:	test   al,0x46
  425041:	jg     0x425007
  425043:	mov    ah,0xdd
  425045:	pop    ebp
  425046:	int    0xc1
  425048:	xchg   ebx,eax
  425049:	jae    0x4250a7
  42504b:	or     bl,BYTE PTR [eax+0x0]
	...
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x3b
  425067:	jl     0x425034
  425069:	out    dx,al
  42506a:	pop    ecx
  42506b:	enter  0x1,0xfb
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    cl,al
  425073:	mov    ebp,0xf677ca45
  425078:	cmp    eax,0x5b35ad6c
  42507d:	mov    cl,0xcd
  42507f:	adc    eax,0x6be2d194
  425084:	sub    bl,ch
  425086:	mov    WORD PTR [edi-0x2387ba6e],es
  42508c:	imul   edx,DWORD PTR [esi+0x4084e3b7],0x3a
  425093:	jbe    0x425062
  425095:	dec    ebx
  425096:	pushf  
  425097:	xchg   cl,ch
  425099:	sbb    al,0xc8
  42509c:	adc    edi,DWORD PTR [ebp+esi*8-0x7b]
  4250a0:	dec    esi
  4250a1:	cmp    ebp,ebx
  4250a3:	ins    DWORD PTR es:[edi],dx
  4250a4:	mov    eax,ds:0xa86ad0bc
  4250a9:	jmp    0x425086
  4250ab:	jnp    0x42504e
  4250ad:	ror    BYTE PTR [ebp+0x1f],cl
  4250b0:	push   ebx
  4250b1:	xchg   ebx,eax
  4250b2:	push   ebp
  4250b3:	out    dx,al
  4250b4:	into   
  4250b5:	cmp    bl,BYTE PTR [ebx+0x7cd4e4a4]
  4250bb:	mov    al,ds:0xe538ac02
  4250c0:	fst    st(7)
  4250c2:	mov    esi,0xbb276e4
  4250c7:	cmc    
  4250c8:	(bad)  
  4250c9:	adc    al,0x11
  4250cb:	pop    eax
  4250cc:	dec    edx
  4250cd:	or     ebx,DWORD PTR [edi+0x42d4639d]
  4250d3:	pushf  
  4250d4:	aad    0x80
  4250d6:	mov    bh,0x40
  4250d8:	in     al,dx
  4250d9:	(bad)  
  4250da:	in     al,dx
  4250db:	dec    ecx
  4250dc:	iret   
  4250dd:	mov    eax,0x1088331
  4250e2:	pop    ds
  4250e3:	or     dh,BYTE PTR [ebp-0x3a9d73e2]
  4250e9:	push   ecx
  4250ea:	jmp    0x799d:0xea05cc46
  4250f1:	or     bl,al
  4250f3:	into   
  4250f4:	ds dec ebp
  4250f6:	sti    
  4250f7:	push   ds
  4250f8:	popf   
  4250f9:	cmp    ebx,ecx
  4250fb:	mov    esi,0x4f974626
  425100:	sar    BYTE PTR [ecx+0x38],cl
  425103:	push   ecx
  425104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425105:	xchg   ebp,eax
  425106:	mov    dh,0xe2
  425108:	add    ebp,ebx
  42510a:	mov    dl,0xa7
  42510c:	fwait
  42510d:	ja     0x42515b
  42510f:	test   eax,0xdabbd12
  425114:	mov    ds:0x761cf548,eax
  425119:	arpl   WORD PTR [eax+0x47],cx
  42511c:	xor    dh,bl
  42511e:	cmp    DWORD PTR [ebx+0x3857aa58],ebp
  425124:	shl    DWORD PTR [ebp+0x6e5f6185],1
  42512a:	push   es
  42512b:	push   ds
  42512c:	mov    eax,0xe7393952
  425131:	int3   
  425132:	xor    al,0xce
  425134:	mov    dl,0x6c
  425136:	ret    0x3736
  425139:	std    
  42513a:	inc    edi
  42513b:	or     eax,DWORD PTR [esi-0x4572e624]
  425141:	mov    WORD PTR [ebx+ebp*4-0x22],gs
  425145:	dec    edx
  425146:	and    eax,0xd7dbb01a
  42514b:	(bad)  
  42514c:	fsubr  st,st(2)
  42514e:	sbb    al,0xb6
  425150:	repz and DWORD PTR [ecx],ecx
  425153:	mov    esi,0x75ccdf9c
  425158:	inc    eax
  425159:	test   al,0x7d
  42515b:	push   edx
  42515c:	sub    edi,esp
  42515e:	mov    ds:0x78d8435d,eax
  425163:	ficomp WORD PTR [ebp+edi*4-0x53]
  425167:	dec    eax
  425168:	cli    
  425169:	ja     0x425179
  42516b:	scas   eax,DWORD PTR es:[edi]
  42516c:	lea    eax,[ebx]
  42516e:	popf   
  42516f:	xor    al,BYTE PTR [edx]
  425171:	and    DWORD PTR [esi-0x42],esp
  425174:	imul   ecx,DWORD PTR [edx+0x7a1fb890],0x5b159983
  42517e:	adc    al,0xe
  425180:	clc    
  425181:	jp     0x425130
  425183:	mov    dh,0xb7
  425185:	add    al,0x5f
  425187:	outs   dx,DWORD PTR ds:[esi]
  425188:	xchg   BYTE PTR [ebx],cl
  42518a:	inc    ebx
  42518b:	fwait
  42518c:	aad    0x8e
  42518e:	fdiv   QWORD PTR [ecx+0xd]
  425191:	shl    BYTE PTR [esi+eiz*1],0x87
  425195:	pop    ebp
  425196:	jg     0x4251a4
  425198:	les    ecx,FWORD PTR [esp+ecx*8-0x79]
  42519c:	cli    
  42519d:	add    eax,0xee39309d
  4251a2:	ret    
  4251a3:	cmp    al,dh
  4251a5:	jecxz  0x4251d9
  4251a7:	int3   
  4251a8:	inc    esi
  4251a9:	and    BYTE PTR [esi-0x2790c86b],dl
  4251af:	js     0x42522b
  4251b1:	into   
  4251b2:	sub    esi,ebp
  4251b4:	lods   al,BYTE PTR ds:[esi]
  4251b5:	out    dx,al
  4251b6:	cmp    cl,BYTE PTR [edx+0xb09dc9c]
  4251bc:	ret    0x33f
  4251bf:	mov    ds:0xe7c49a0b,eax
  4251c4:	push   cs
  4251c5:	imul   ebx,DWORD PTR [ebp-0x4a],0x63
  4251c9:	add    al,0x46
  4251cb:	xor    BYTE PTR [ebx+0x4a9be971],dh
  4251d1:	cmp    esp,DWORD PTR [ecx+0x1d33e925]
  4251d7:	cld    
  4251d8:	lods   eax,DWORD PTR ds:[esi]
  4251d9:	cmp    eax,0x4b8a461
  4251de:	sbb    BYTE PTR [edx+ecx*8+0x14],0x5a
  4251e3:	sub    cl,BYTE PTR [eax+0x14203930]
  4251e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251ea:	mov    dh,0x24
  4251ec:	pop    edx
  4251ed:	jae    0x4251bf
  4251ef:	jno    0x4251e5
  4251f1:	lock add BYTE PTR [esp+ecx*1-0x7131ee67],0xd5
  4251fa:	pop    esp
  4251fb:	out    dx,eax
  4251fc:	popa   
  4251fd:	int    0xed
  4251ff:	add    DWORD PTR [ebx+ecx*2+0x6755ad2b],edx
  425206:	(bad)  
  425207:	cmp    al,0x58
  425209:	xor    DWORD PTR [ecx-0x44],0x3a475901
  425210:	jne    0x4251d4
  425212:	pop    esi
  425213:	mov    eax,ds:0x3fde7e58
  425218:	and    al,0xc5
  42521a:	mov    esp,ecx
  42521c:	xchg   edx,eax
  42521d:	inc    ecx
  42521e:	iret   
  42521f:	and    edi,esp
  425221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425222:	lock test al,0xf1
  425225:	repnz ficomp WORD PTR [ecx-0x7f]
  425229:	dec    edx
  42522a:	neg    BYTE PTR [ebx+0x15649574]
  425230:	xchg   ecx,eax
  425231:	dec    esp
  425232:	push   esp
  425233:	xchg   esi,eax
  425234:	dec    edi
  425235:	and    DWORD PTR [eax+0x5b2b2a2f],ecx
  42523b:	add    BYTE PTR [esi-0x44],0xa8
  42523f:	jbe    0x4252a5
  425241:	push   cs
  425242:	fs jns 0x4252af
  425245:	ins    BYTE PTR es:[edi],dx
  425246:	es sbb al,0x74
  425249:	test   dl,ah
  42524b:	add    ebx,DWORD PTR [edi+0x2e4ea759]
  425251:	sub    cl,bh
  425253:	fidiv  DWORD PTR [eax]
  425255:	pop    eax
  425256:	or     DWORD PTR [edi+0x2724cb13],edi
  42525c:	fstp   DWORD PTR [edi-0x38663b2d]
  425262:	mov    ch,0xff
  425264:	sub    eax,0xfcd2f060
  425269:	int3   
  42526a:	pop    ss
  42526b:	int    0x8d
	...
  425279:	add    ah,dh
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	sbb    al,0xc6
  425288:	(bad)  
  425289:	ds push esp
  42528b:	retf   0x1
  42528e:	sti    
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    dh,bl
  425293:	fsub   DWORD PTR [edx-0x5e]
  425296:	xchg   ebp,eax
  425297:	sbb    eax,DWORD PTR [eax+0x7f]
  42529a:	mov    dh,0x85
  42529c:	mov    ecx,0x3bd89368
  4252a1:	mov    DWORD PTR [edx+edx*8+0x5e],esp
  4252a5:	push   esi
  4252a6:	jg     0x425256
  4252a8:	call   0x838a:0xf518b7bf
  4252af:	je     0x4252e4
  4252b1:	in     al,0x86
  4252b3:	mov    al,0x96
  4252b5:	pusha  
  4252b6:	jge    0x425250
  4252b8:	and    DWORD PTR [eax-0x49],esi
  4252bb:	fdiv   DWORD PTR [eax]
  4252bd:	cmp    dl,BYTE PTR [ebx+0x77]
  4252c0:	jmp    0x4252d7
  4252c2:	pop    ebx
  4252c3:	stc    
  4252c4:	call   0xfd652c5a
  4252c9:	mov    edx,0x8454aed6
  4252ce:	(bad)  
  4252cf:	(bad)  
  4252d0:	ffreep st(0)
  4252d2:	ds pop ss
  4252d4:	sub    eax,0x4132f136
  4252d9:	add    bh,dl
  4252db:	mov    edi,0xfa287ee9
  4252e0:	inc    ebp
  4252e1:	out    0x67,eax
  4252e3:	add    edi,DWORD PTR [ebp+0x12]
  4252e6:	cdq    
  4252e7:	dec    edi
  4252e8:	int3   
  4252e9:	xchg   edi,eax
  4252ea:	jo     0x425339
  4252ec:	mov    cl,0xba
  4252ee:	pop    es
  4252ef:	and    eax,0x7954351f
  4252f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252f5:	dec    esi
  4252f6:	jmp    0x3bea:0xc4a336c0
  4252fd:	and    al,0x3b
  4252ff:	pop    edi
  425300:	jb     0x42537f
  425302:	pop    edx
  425303:	adc    al,0xd8
  425305:	test   DWORD PTR [edi-0x13c5bc0f],eax
  42530b:	xchg   edx,eax
  42530c:	dec    esi
  42530d:	out    dx,al
  42530e:	mov    bl,0x39
  425310:	jo     0x4252a6
  425312:	enter  0x383,0x9c
  425316:	and    edx,DWORD PTR [ecx-0x80]
  425319:	addr16 push edx
  42531b:	(bad)  
  42531c:	nop
  42531d:	(bad)  
  42531e:	call   0x2f10514e
  425323:	(bad)  
  425324:	call   0x58a7553e
  425329:	out    dx,al
  42532a:	ret    
  42532b:	jge    0x42536e
  42532d:	mov    esi,0x6de609fb
  425332:	jno    0x4253b0
  425334:	push   edx
  425335:	xchg   esi,eax
  425336:	pushf  
  425337:	push   esi
  425338:	nop
  425339:	push   ebp
  42533a:	mov    ds:0x10f0e564,al
  42533f:	push   esp
  425340:	ss inc BYTE PTR es:[ebx]
  425344:	dec    esi
  425345:	aas    
  425346:	jg     0x4253a9
  425348:	dec    edx
  425349:	sbb    DWORD PTR ds:0x2baedb90,edi
  42534f:	fnstcw WORD PTR [ebx+esi*2]
  425352:	aaa    
  425353:	mov    esp,0x3927b846
  425358:	lods   al,BYTE PTR ds:[esi]
  425359:	ret    
  42535a:	in     eax,0x7f
  42535c:	mov    ss:0x901927e1,al
  425362:	test   DWORD PTR [eax],0xea9aa79e
  425368:	imul   esi,DWORD PTR [edx-0x36],0x5b8eb71e
  42536f:	mov    eax,ds:0x5e953c58
  425374:	cdq    
  425375:	jne    0x4252fe
  425377:	mov    edi,0xb5e20a5d
  42537c:	ret    
  42537d:	add    eax,DWORD PTR [edi+0xc]
  425380:	inc    edi
  425381:	cmp    DWORD PTR [esi+edx*1+0x46],ebp
  425385:	sar    BYTE PTR [esi],1
  425387:	sub    al,0x69
  425389:	sub    al,0xc7
  42538b:	add    dh,ah
  42538d:	push   ecx
  42538e:	jae    0x425369
  425390:	imul   edx,edx,0xe41ead33
  425396:	ins    BYTE PTR es:[edi],dx
  425397:	xchg   ebx,eax
  425398:	call   0x19d8:0xe16bc719
  42539f:	mov    WORD PTR ds:0x9edebe96,es
  4253a5:	clflush BYTE PTR [ecx]
  4253a8:	pop    esi
  4253a9:	pop    ebx
  4253aa:	inc    edi
  4253ab:	inc    ecx
  4253ac:	sub    al,0xb2
  4253ae:	pop    esp
  4253af:	es (bad) 
  4253b1:	(bad)  
  4253b2:	rol    BYTE PTR [edi-0x7f],0x40
  4253b6:	pop    ss
  4253b7:	pop    ds
  4253b8:	retf   0x8e64
  4253bb:	dec    ecx
  4253bc:	int3   
  4253bd:	ret    0xb91c
  4253c0:	mov    esi,0x80c900f1
  4253c5:	adc    edi,eax
  4253c7:	jns    0x425386
  4253c9:	pop    edi
  4253ca:	clc    
  4253cb:	and    ah,0xdd
  4253ce:	pushf  
  4253cf:	push   edx
  4253d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253d1:	test   DWORD PTR [ecx],0x68774cec
  4253d7:	mov    eax,fs:0x388686e
  4253dd:	push   ebp
  4253de:	dec    edi
  4253df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253e0:	ror    bl,cl
  4253e2:	xor    BYTE PTR [eax-0x40945479],dl
  4253e8:	ss pop edx
  4253ea:	jbe    0x4253f4
  4253ec:	mov    ecx,DWORD PTR [edi-0x77b32b3d]
  4253f2:	xchg   DWORD PTR [ebp+0xed5f612],edi
  4253f8:	rol    BYTE PTR [edx],1
  4253fa:	cmp    ebx,DWORD PTR [eax+0x73]
  4253fd:	inc    esi
  4253fe:	ins    DWORD PTR es:[edi],dx
  4253ff:	sbb    BYTE PTR [edx+0x565ee7cf],cl
  425405:	adc    eax,0xbccb5a53
  42540a:	pop    esi
  42540b:	jae    0x425420
  42540d:	xlat   BYTE PTR ds:[ebx]
  42540e:	jmp    0x451a:0x87f39b48
  425415:	jbe    0x42539a
  425417:	hlt    
  425418:	mov    ah,0x31
  42541a:	pop    edi
  42541b:	mov    dh,0x81
  42541d:	jb     0x42541d
  42541f:	in     eax,dx
  425420:	ss (bad) 
  425422:	(bad)  
  425423:	imul   eax,DWORD PTR [ebp+eiz*8+0x43],0x2d
  425428:	(bad)  
  425429:	int    0x90
  42542b:	mov    dl,0x40
  42542d:	sti    
  42542e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42542f:	pop    ecx
  425430:	dec    ebp
  425431:	push   esp
  425432:	mov    es,WORD PTR [ebx+ebp*4+0x79]
  425436:	mov    al,0x6c
  425438:	sub    eax,0x14dfb7d7
  42543d:	ds inc edx
  42543f:	and    BYTE PTR [esi+0x1e75e4f5],dh
  425445:	jge    0x42545b
  425447:	lods   eax,DWORD PTR ds:[esi]
  425448:	aaa    
  425449:	sbb    BYTE PTR [edx+0x41],dh
  42544c:	mov    bh,0x15
  42544e:	mov    al,0x36
  425450:	test   BYTE PTR [edi],0xef
  425453:	xchg   ecx,eax
  425454:	mov    bh,0xbc
  425456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425457:	shl    ah,cl
  425459:	mov    WORD PTR [edi],ds
  42545b:	arpl   WORD PTR [esi-0x15],bx
  42545e:	imul   edx,DWORD PTR [ebp-0x75],0xffffffea
  425462:	mov    ah,0x22
  425464:	hlt    
  425465:	lock dec ebp
  425467:	fadd   QWORD PTR [edx+0xf]
  42546a:	(bad)  
  42546b:	fistp  QWORD PTR [ebp+0x27]
  42546e:	jnp    0x425447
  425470:	pop    ecx
  425471:	push   ecx
  425472:	scas   eax,DWORD PTR es:[edi]
  425473:	push   ds
  425474:	in     al,dx
  425475:	lods   al,BYTE PTR ds:[esi]
  425476:	or     cl,BYTE PTR [ebp+0x6a]
  425479:	xchg   ecx,eax
  42547a:	adc    ebx,esi
  42547c:	cmp    esi,edx
  42547e:	pop    ebp
  42547f:	and    eax,0x2c9dcccf
  425484:	fs popf 
  425486:	int3   
  425487:	fsub   DWORD PTR [ebx-0x343ba901]
	...
  425499:	add    BYTE PTR [esi+edi*1+0x24],dl
  42549d:	sbb    DWORD PTR [esi+0x1b],ebp
  4254a0:	jge    0x425521
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	adc    al,0xa0
  4254a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254a9:	aam    0x4f
  4254ab:	int3   
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	sti    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    cl,bh
  4254b3:	mov    al,bl
  4254b5:	jmp    DWORD PTR [edi+0x32103f5b]
  4254bb:	retf   
  4254bc:	fidivr DWORD PTR [ebp+0x16]
  4254bf:	sbb    eax,0x6a727ad2
  4254c4:	inc    ebp
  4254c5:	mov    gs,WORD PTR [ecx]
  4254c7:	jae    0x4254eb
  4254c9:	out    dx,al
  4254ca:	add    al,BYTE PTR [esi]
  4254cc:	pusha  
  4254cd:	sar    BYTE PTR [edi-0x2],0x89
  4254d1:	js     0x425485
  4254d3:	repz inc esi
  4254d5:	mov    BYTE PTR [ecx+esi*1-0x4422a205],dl
  4254dc:	stos   DWORD PTR es:[edi],eax
  4254dd:	clc    
  4254de:	pop    esp
  4254df:	retf   0x378e
  4254e2:	daa    
  4254e3:	fmul   QWORD PTR [ebx-0x64]
  4254e6:	inc    esi
  4254e7:	mov    ds:0x1dfee9ff,al
  4254ec:	mov    ecx,0x5a4412ab
  4254f1:	cld    
  4254f2:	xchg   edx,eax
  4254f3:	adc    ah,BYTE PTR [eax+0x2]
  4254f6:	lods   al,BYTE PTR ds:[esi]
  4254f7:	cmp    BYTE PTR [edi+ecx*8],ch
  4254fa:	sbb    BYTE PTR [ebx-0x13],dl
  4254fd:	adc    eax,edi
  4254ff:	sbb    DWORD PTR [edi],esi
  425501:	push   eax
  425502:	icebp  
  425503:	or     ecx,ebx
  425505:	dec    esi
  425506:	cdq    
  425507:	test   DWORD PTR [ecx],esp
  425509:	mov    edx,0xcc0465b2
  42550e:	stos   BYTE PTR es:[edi],al
  42550f:	sub    dl,BYTE PTR [edx+ebp*4]
  425512:	call   0xe8ad:0x47933b17
  425519:	ror    BYTE PTR [esi+esi*1],1
  42551c:	and    DWORD PTR [ebp-0x1c7447b0],eax
  425522:	xchg   bh,cl
  425524:	in     al,dx
  425525:	mov    al,bh
  425527:	jae    0x425514
  425529:	inc    eax
  42552a:	out    0x31,al
  42552c:	push   0xffffffb5
  42552e:	or     cl,BYTE PTR [edx+0x1f7bb8c2]
  425534:	std    
  425535:	mov    ah,0x50
  425537:	pop    edx
  425538:	stc    
  425539:	and    eax,0x27b6d7
  42553e:	push   ecx
  42553f:	jne    0x425529
  425541:	add    bl,BYTE PTR [esi]
  425543:	leave  
  425544:	pop    edi
  425545:	test   al,0xe8
  425547:	cmp    dh,BYTE PTR [edi+0x57]
  42554a:	xor    eax,0x41e2f16b
  42554f:	gs fwait
  425551:	or     al,0x50
  425553:	repnz stos BYTE PTR es:[edi],al
  425555:	cs in  al,0x7e
  425558:	into   
  425559:	fldlg2 
  42555b:	sbb    eax,0xe883ad38
  425560:	out    0xaa,al
  425562:	fadd   DWORD PTR [edi-0x7eaf69ea]
  425568:	adc    al,BYTE PTR [edi]
  42556a:	popa   
  42556b:	adc    al,0x17
  42556d:	dec    DWORD PTR [edx-0x65]
  425570:	call   0x8014:0x4844be8f
  425577:	lods   eax,DWORD PTR ds:[esi]
  425578:	(bad)  
  425579:	out    0x81,al
  42557b:	dec    eax
  42557c:	out    dx,eax
  42557d:	sub    al,0x0
  42557f:	fld    DWORD PTR [edi+0x119e9da6]
  425585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425586:	mov    edi,DWORD PTR [esp+eiz*4+0x7ed086d8]
  42558d:	repz ficomp DWORD PTR [ebp+0x7132ec4a]
  425594:	data16 lods al,BYTE PTR ds:[esi]
  425596:	ret    0x4842
  425599:	pop    esp
  42559a:	js     0x42555b
  42559c:	jno    0x425560
  42559e:	bound  esp,QWORD PTR [esi]
  4255a0:	pop    DWORD PTR [eax]
  4255a2:	mov    ecx,0xd51a6b00
  4255a7:	stos   BYTE PTR es:[edi],al
  4255a8:	sbb    BYTE PTR [ecx+0x48c8a023],ah
  4255ae:	xchg   ecx,eax
  4255af:	shufps xmm4,XMMWORD PTR [esi+ebp*4+0x1],0x6c
  4255b5:	nop
  4255b6:	xor    dh,BYTE PTR [ecx]
  4255b8:	enter  0x9bf8,0x2
  4255bc:	mov    bl,0x29
  4255be:	mov    ds:0xab5de4d5,eax
  4255c3:	adc    al,0x4d
  4255c5:	inc    edx
  4255c6:	and    eax,0x367de2b8
  4255cb:	sbb    eax,0x256a567e
  4255d0:	lock xor bh,BYTE PTR [ebx+0x1257aaa7]
  4255d7:	sti    
  4255d8:	test   eax,0x88646e44
  4255dd:	add    BYTE PTR [ebx],0x84
  4255e0:	and    dh,BYTE PTR [edx]
  4255e2:	and    al,0x19
  4255e4:	and    BYTE PTR [edi+0x52],dh
  4255e7:	jmp    0xc77c2d
  4255ec:	ret    0x9eb4
  4255ef:	ds pop edi
  4255f1:	xlat   BYTE PTR ds:[ebx]
  4255f2:	xlat   BYTE PTR es:[ebx]
  4255f4:	mov    ecx,0xf4b5590b
  4255f9:	xor    BYTE PTR [ebx+edi*8-0x6ebb3c3c],dl
  425600:	test   BYTE PTR [ecx-0x67],dl
  425603:	pop    esp
  425604:	in     eax,0x31
  425606:	jae    0x4255eb
  425608:	adc    eax,0xf03fd7e4
  42560d:	out    0xa9,al
  42560f:	and    DWORD PTR [edx-0xf],edx
  425612:	mov    dl,0x34
  425614:	sti    
  425615:	sub    eax,0xf8dd9632
  42561a:	pop    es
  42561b:	jae    0x42559f
  42561d:	fnstenv [ecx]
  42561f:	jg     0x42561e
  425621:	daa    
  425622:	mov    ebp,0xd3ec3ee7
  425627:	jp     0x42568c
  425629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42562a:	fwait
  42562b:	aas    
  42562c:	cmp    BYTE PTR [edi+edx*8+0xd51298],ah
  425633:	test   BYTE PTR ds:0x8941ad4d,bl
  425639:	lods   eax,DWORD PTR ds:[esi]
  42563a:	(bad)  
  42563b:	sbb    BYTE PTR [esi+0x62],bl
  42563e:	pop    esp
  42563f:	mov    ch,ah
  425641:	into   
  425642:	in     eax,0x9c
  425644:	sbb    ah,BYTE PTR [edx+ebx*4-0x10a02e1d]
  42564b:	test   BYTE PTR [edi+0x406a3e86],0xf
  425652:	mov    edi,0x171014d3
  425657:	fcomp  QWORD PTR [ebx]
  425659:	pop    esp
  42565a:	cmp    bh,BYTE PTR [edx*1+0x459333db]
  425661:	mov    dl,bl
  425663:	retf   0xb9d8
  425666:	leave  
  425667:	cmp    al,0x6f
  425669:	mov    ebp,0xd68649aa
  42566e:	add    DWORD PTR ds:0x6e4487d8,0x1aa84cac
  425678:	scas   al,BYTE PTR es:[edi]
  425679:	fld    DWORD PTR [ecx-0x6b]
  42567c:	dec    ebx
  42567d:	adc    eax,0x181bd6ee
  425682:	add    ebx,DWORD PTR [edx+ebp*2]
  425685:	jne    0x425633
  425687:	dec    edx
  425688:	sti    
  425689:	aam    0x15
  42568b:	pop    esp
  42568c:	mov    cl,0xa5
  42568e:	iret   
  42568f:	pusha  
  425690:	lods   al,BYTE PTR ds:[esi]
  425691:	les    ebx,FWORD PTR [edx+0x64]
  425694:	inc    edi
  425695:	adc    eax,0x6e73eecd
  42569a:	shl    DWORD PTR [esi],0xdf
  42569d:	popf   
  42569e:	out    0xbf,al
  4256a0:	push   edi
  4256a1:	out    dx,al
  4256a2:	push   cs
  4256a3:	outs   dx,BYTE PTR ds:[esi]
  4256a4:	dec    eax
  4256a5:	je     0x425699
  4256a7:	inc    ebx
  4256a8:	fs xchg si,ax
  4256ab:	pop    edx
  4256ac:	lods   eax,DWORD PTR ds:[esi]
	...
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	and    eax,0x4aeec6ee
  4256cb:	into   
  4256cc:	add    DWORD PTR [eax],eax
  4256ce:	sti    
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR [esi+0x17cd98b0],bh
  4256d7:	push   es
  4256d8:	pop    edx
  4256d9:	ss jae 0x4256b4
  4256dc:	leave  
  4256dd:	sbb    eax,0x9
  4256e0:	push   edi
  4256e1:	and    edi,0x21fe8c9c
  4256e7:	fdivr  DWORD PTR [ecx]
  4256e9:	pop    edx
  4256ea:	cli    
  4256eb:	adc    eax,0xc59cc14
  4256f1:	lods   eax,DWORD PTR ds:[esi]
  4256f2:	repz rcr BYTE PTR [ecx+0x5c143465],cl
  4256f9:	(bad)  
  4256fa:	jg     0x4256c1
  4256fc:	and    cl,BYTE PTR [ebx-0x2bb3e8c8]
  425702:	mov    bh,0x1f
  425704:	rcr    BYTE PTR [esi-0x7faefd88],cl
  42570a:	mov    bl,0xf
  42570c:	lahf   
  42570d:	jbe    0x425730
  42570f:	mov    al,0x8d
  425711:	clc    
  425712:	mov    esp,0xd36e5fdf
  425717:	stos   BYTE PTR es:[edi],al
  425718:	leave  
  425719:	ror    DWORD PTR [edx+0x648e2030],1
  42571f:	mov    cl,0x72
  425722:	dec    eax
  425723:	call   0x3c44:0x7e57eb6f
  42572a:	sar    DWORD PTR [ebx],0xae
  42572d:	sbb    DWORD PTR [ebx*8+0xfd21629],ecx
  425734:	mov    ecx,0xc1efddfb
  425739:	sbb    al,ch
  42573b:	pushf  
  42573c:	sub    DWORD PTR [edi+eax*1],ebx
  42573f:	mov    ebx,0x57023dac
  425744:	add    BYTE PTR [ecx+edi*1],0x94
  425748:	xchg   ebx,eax
  425749:	or     ebx,DWORD PTR ds:0x2ca3b548
  42574f:	cdq    
  425750:	cmc    
  425751:	sub    al,0x23
  425753:	dec    edx
  425754:	iret   
  425755:	or     BYTE PTR ds:[edi],ch
  425758:	js     0x42577a
  42575a:	xor    DWORD PTR [esi+edi*8],edi
  42575d:	mov    ecx,0xfe052d07
  425762:	gs pop esi
  425764:	add    esp,edi
  425766:	mov    ebp,0xb9adb63b
  42576b:	cmp    esi,ebp
  42576d:	retf   
  42576e:	stos   BYTE PTR es:[edi],al
  42576f:	sub    al,0x3c
  425771:	(bad)  
  425772:	cmp    eax,0x672a10eb
  425777:	out    dx,eax
  425778:	int    0x85
  42577a:	dec    ebp
  42577b:	mov    DWORD PTR [edx+eiz*4-0x7d0a194e],ecx
  425782:	js     0x4257a2
  425784:	ins    BYTE PTR es:[edi],dx
  425785:	das    
  425786:	mov    eax,0x4fd29874
  42578b:	pop    edx
  42578c:	aam    0x2f
  42578e:	mov    bh,0x9e
  425790:	ret    0x546
  425793:	mov    BYTE PTR [edx],cl
  425795:	sub    eax,0xbf5a5951
  42579a:	adc    DWORD PTR [ebx+ecx*8+0x6d7e952],ebp
  4257a1:	shr    DWORD PTR [esi-0x7684ac41],0x5f
  4257a8:	test   eax,0x8252127a
  4257ad:	inc    DWORD PTR [ecx+eax*2]
  4257b0:	sti    
  4257b1:	xor    eax,0x218401de
  4257b6:	fwait
  4257b7:	in     al,0xf5
  4257b9:	cmp    esp,DWORD PTR [edx]
  4257bb:	aaa    
  4257bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257bd:	in     eax,0x55
  4257bf:	(bad)  
  4257c0:	lock xor BYTE PTR [esp+edi*2+0x72e47a40],0x6a
  4257c9:	or     BYTE PTR [esi+0x35],dl
  4257cc:	daa    
  4257cd:	lods   al,BYTE PTR ds:[esi]
  4257ce:	es cli 
  4257d0:	pop    ecx
  4257d1:	mov    ebx,0xdb04ec79
  4257d6:	jge    0x425842
  4257d8:	addr16 push cs
  4257da:	push   esi
  4257db:	bound  edi,QWORD PTR [edx]
  4257dd:	and    ah,BYTE PTR [esi+0x7a]
  4257e0:	sbb    BYTE PTR [ecx+0x6d712c4c],0x6e
  4257e7:	rcr    BYTE PTR [edx-0x44],cl
  4257ea:	or     DWORD PTR [eax+0x3e97814d],0x3b925e60
  4257f4:	ins    DWORD PTR es:[edi],dx
  4257f5:	push   ds
  4257f6:	mov    dl,0x2c
  4257f8:	inc    esp
  4257f9:	sahf   
  4257fa:	out    0x21,al
  4257fc:	mov    ecx,0x99e4872a
  425801:	push   eax
  425802:	fisub  WORD PTR [edx]
  425804:	and    BYTE PTR [bx+si+0x7b12],cl
  425809:	jb     0x425863
  42580b:	or     BYTE PTR [ecx-0x5d],bl
  42580e:	adc    ch,BYTE PTR [ebp+0x4e]
  425811:	jmp    0x4257ef
  425813:	push   esp
  425814:	inc    edx
  425815:	cwde   
  425816:	adc    al,0xf8
  425818:	mov    dh,0x78
  42581a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42581b:	out    dx,al
  42581c:	cmc    
  42581d:	sub    esi,esp
  42581f:	and    al,0x50
  425821:	mov    al,ds:0xc4fe1c9c
  425826:	rol    DWORD PTR [eax+0x7e33560e],1
  42582c:	sbb    edx,edx
  42582e:	jno    0x42588f
  425830:	jg     0x4257df
  425832:	mov    ebp,0xc7834cf6
  425837:	out    dx,eax
  425838:	fsubr  DWORD PTR [esi-0xa05ef1f]
  42583e:	dec    edi
  42583f:	jp     0x425814
  425841:	and    BYTE PTR [edi-0x3ce1dd56],ch
  425847:	mov    esp,0x9f779f29
  42584c:	jmp    0x425855
  42584e:	out    dx,eax
  42584f:	lahf   
  425850:	sub    esp,DWORD PTR [ebx]
  425852:	adc    bh,dl
  425854:	in     al,dx
  425855:	arpl   cx,bp
  425857:	ja     0x425878
  425859:	retf   
  42585a:	(bad)  
  42585b:	fmul   DWORD PTR [edi-0x1d]
  42585e:	scas   al,BYTE PTR es:[edi]
  42585f:	(bad)  
  425860:	sub    DWORD PTR [ebp+0x23],edi
  425863:	xor    ebp,DWORD PTR [ebp+0xd286071]
  425869:	les    ecx,FWORD PTR [eax]
  42586b:	adc    bh,ch
  42586d:	cmp    eax,0x2c89d442
  425872:	xor    bl,dl
  425874:	les    edx,FWORD PTR [ecx]
  425876:	gs out dx,eax
  425878:	mov    cl,0xd9
  42587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42587b:	lock cmp BYTE PTR [edi],dh
  42587e:	arpl   WORD PTR [ecx+0x2c71985c],dx
  425884:	pop    edi
  425885:	retf   0xde79
  425888:	ficomp WORD PTR [ecx+0x2]
  42588b:	ret    
  42588c:	sbb    edx,edx
  42588e:	out    dx,al
  42588f:	mov    al,ds:0x79fe8d52
  425894:	or     BYTE PTR [edx],dl
  425896:	bound  ebp,QWORD PTR [esi+edi*2-0x3d718916]
  42589d:	xor    eax,0x8d9cb5f2
  4258a2:	out    0xbb,al
  4258a4:	adc    al,0xc9
  4258a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a7:	cmp    esp,ecx
  4258a9:	xchg   edi,eax
  4258aa:	ror    DWORD PTR [esi-0x29],1
  4258ad:	enter  0x3f53,0xa
  4258b1:	push   ecx
  4258b2:	call   0xddcf7ffb
  4258b7:	pusha  
  4258b8:	scas   eax,DWORD PTR es:[edi]
  4258b9:	ror    BYTE PTR [ebp+0x14],cl
  4258bc:	jecxz  0x4258c9
  4258be:	div    DWORD PTR [edi+0x38]
  4258c1:	inc    ebx
  4258c3:	pop    es
  4258c4:	xor    eax,0xc2845bcf
  4258c9:	les    eax,FWORD PTR [ecx]
  4258cb:	ret    
  4258cc:	inc    BYTE PTR [eax]
	...
  4258da:	dec    ebx
  4258db:	inc    ebp
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	cmp    al,0xf0
  4258e8:	(bad)
  4258ec:	add    DWORD PTR [eax],eax
  4258ee:	sti    
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [ebx-0x62],dl
  4258f4:	lahf   
  4258f5:	xchg   DWORD PTR [edx-0x94e4ce7],esi
  4258fb:	ds ret 0x3001
  4258ff:	cmp    BYTE PTR [ebx+0x67],ch
  425902:	ja     0x42588c
  425904:	xor    DWORD PTR [eax+0x23f59093],edx
  42590a:	pop    ebx
  42590b:	cs sub esi,esi
  42590e:	scas   eax,DWORD PTR es:[edi]
  42590f:	fmul   st,st(5)
  425911:	pop    ss
  425912:	lods   al,BYTE PTR ds:[esi]
  425913:	cmp    BYTE PTR [edi],0x2d
  425916:	outs   dx,BYTE PTR ds:[esi]
  425917:	xor    DWORD PTR [edi-0x43a61d8f],esp
  42591d:	enter  0xb999,0xb6
  425921:	adc    eax,0x11bf2008
  425926:	xlat   BYTE PTR ds:[ebx]
  425927:	pop    edx
  425928:	xor    BYTE PTR [ebp+0x1b91211c],0x31
  42592f:	dec    ebp
  425930:	add    eax,0x1ea3e7c9
  425935:	pop    esi
  425936:	push   ebx
  425937:	into   
  425938:	mov    ecx,0xcc74868d
  42593d:	mov    bh,BYTE PTR [esp+esi*1]
  425940:	mov    ds:0x8bf09248,al
  425945:	adc    dh,BYTE PTR [esi+0x4e]
  425948:	(bad)  
  425949:	dec    ebp
  42594a:	bound  esi,QWORD PTR [ecx-0x57e0d772]
  425950:	jg     0x42595e
  425952:	push   ds
  425953:	fidivr WORD PTR [edx+0x77cf9f6a]
  425959:	push   eax
  42595a:	fwait
  42595b:	xchg   BYTE PTR [ecx],ch
  42595d:	cmp    edi,edi
  42595f:	sbb    eax,0xd388cb6e
  425964:	xchg   edi,eax
  425965:	pop    eax
  425966:	adc    BYTE PTR [esi],0x35
  425969:	mov    esi,fs
  42596b:	jno    0x4259db
  42596d:	jge    0x4259bb
  42596f:	sbb    eax,0x468679e2
  425974:	fwait
  425975:	sub    DWORD PTR [eax],esi
  425977:	int    0xc1
  425979:	xchg   ecx,eax
  42597a:	and    DWORD PTR [edi+eiz*8-0x37],edi
  42597e:	push   eax
  42597f:	push   ebp
  425980:	loopne 0x42592d
  425982:	repnz mov WORD PTR [ecx-0x2c],fs
  425986:	jge    0x425936
  425988:	push   esi
  425989:	mov    ah,BYTE PTR [ecx+0x43]
  42598c:	add    BYTE PTR [edx],cl
  42598e:	inc    esi
  42598f:	neg    BYTE PTR [edi]
  425991:	(bad)  
  425992:	loopne 0x425974
  425994:	loop   0x425959
  425996:	imul   ebx,DWORD PTR ds:0x4b7d2a7e,0xfa6aabc6
  4259a0:	mov    eax,ds:0x31ed34d1
  4259a5:	dec    ebp
  4259a6:	call   0x329eaeaf
  4259ab:	shl    BYTE PTR [eax-0x1],0xaa
  4259af:	mov    ds:0x3fa2e75f,al
  4259b4:	mov    ah,0x6
  4259b6:	xor    al,0x2c
  4259b8:	sub    DWORD PTR [esi+ecx*4+0x79],0x6ab44b62
  4259c0:	in     eax,dx
  4259c1:	sub    ebp,esp
  4259c3:	mov    edx,0x2a5295ab
  4259c8:	push   es
  4259c9:	xor    BYTE PTR [ebp-0x47],0x74
  4259cd:	pop    DWORD PTR [edi-0x21121df8]
  4259d3:	mov    eax,0x9e25af0b
  4259d8:	mov    bh,0x7e
  4259db:	pop    ebp
  4259dc:	in     eax,dx
  4259dd:	dec    edx
  4259de:	adc    al,al
  4259e0:	jmp    0x42596a
  4259e2:	les    ecx,FWORD PTR [eax+0x4c2c4848]
  4259e8:	mov    ecx,0xcfea09a1
  4259ed:	aaa    
  4259ee:	inc    esi
  4259ef:	fcmovnbe st,st(5)
  4259f1:	pop    edx
  4259f2:	sahf   
  4259f3:	jmp    0x7026:0x7b2d546f
  4259fa:	das    
  4259fb:	scas   eax,DWORD PTR es:[edi]
  4259fc:	adc    BYTE PTR [edi],0x5b
  4259ff:	jmp    0x4259ac
  425a01:	jmp    edi
  425a03:	adc    BYTE PTR [ebp-0x2074cce0],ah
  425a09:	pushf  
  425a0a:	out    dx,al
  425a0b:	fldenv [esi+0x26]
  425a0e:	ds cli 
  425a10:	inc    ebx
  425a11:	dec    eax
  425a12:	push   ebx
  425a13:	outs   dx,BYTE PTR ds:[esi]
  425a14:	aaa    
  425a15:	imul   eax
  425a17:	inc    esp
  425a18:	sti    
  425a19:	pop    ds
  425a1a:	aaa    
  425a1b:	jge    0x4259ce
  425a1d:	mov    al,ds:0xb1aeca1d
  425a22:	pushf  
  425a23:	xchg   BYTE PTR [ebx-0x408ebc87],ch
  425a29:	retf   0x8f56
  425a2c:	xor    eax,0x92be1724
  425a31:	push   ebp
  425a32:	jne    0x425aa9
  425a34:	or     bl,BYTE PTR [eax+0x78]
  425a37:	dec    eax
  425a38:	outs   dx,DWORD PTR ds:[esi]
  425a39:	ins    BYTE PTR es:[edi],dx
  425a3a:	dec    ebx
  425a3b:	cmp    eax,DWORD PTR [eax]
  425a3d:	xchg   BYTE PTR [esi],bh
  425a3f:	mov    ch,0xfd
  425a41:	push   es
  425a42:	jno    0x4259fe
  425a44:	daa    
  425a45:	cmc    
  425a46:	adc    eax,0x9f842512
  425a4b:	dec    ebx
  425a4c:	repnz pushf 
  425a4e:	es pop esp
  425a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a51:	mov    al,0xd2
  425a53:	in     al,0x5b
  425a55:	adc    eax,0xac217949
  425a5a:	xor    DWORD PTR [ecx-0x22],esi
  425a5d:	push   0x584c5125
  425a62:	ja     0x425a35
  425a64:	loope  0x425a67
  425a66:	out    dx,al
  425a67:	xor    edx,DWORD PTR [ebp+0x4e8ea0db]
  425a6d:	mov    es,WORD PTR ds:0x70b4f27b
  425a73:	aaa    
  425a74:	mov    ch,0x49
  425a76:	inc    edi
  425a77:	and    BYTE PTR [eax+0x6b],0x92
  425a7b:	retf   
  425a7c:	aaa    
  425a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a7e:	inc    esi
  425a7f:	and    BYTE PTR [eax-0xc2e3842],bh
  425a85:	dec    edx
  425a86:	xchg   esi,eax
  425a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a88:	popa   
  425a89:	test   al,0x7
  425a8b:	mov    ebx,0xe0e7fd69
  425a90:	shl    ch,cl
  425a92:	sahf   
  425a93:	loope  0x425a27
  425a95:	sub    DWORD PTR [edi-0x46981dc8],ebx
  425a9b:	dec    edx
  425a9c:	pop    esp
  425a9d:	rol    DWORD PTR [edx+0x52],1
  425aa0:	mov    ebp,0x806d03b5
  425aa5:	cwde   
  425aa6:	dec    ecx
  425aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425aa8:	outs   dx,DWORD PTR ds:[esi]
  425aa9:	pop    edi
  425aaa:	cmc    
  425aab:	outs   dx,DWORD PTR ds:[esi]
  425aac:	and    al,0xce
  425aae:	aaa    
  425aaf:	dec    eax
  425ab0:	enter  0xe753,0x87
  425ab4:	xor    eax,0x54f5c71d
  425ab9:	pushf  
  425aba:	and    DWORD PTR [ebx],0x7a
  425abd:	loop   0x425b1f
  425abf:	sar    DWORD PTR [ebp+0x1a],0xea
  425ac3:	adc    al,0x91
  425ac5:	add    ch,BYTE PTR [esi-0x3b]
  425ac8:	xchg   edi,eax
  425ac9:	push   eax
  425aca:	add    eax,ebp
  425acc:	mov    DWORD PTR ds:0xdc6dc08a,ebp
  425ad2:	aam    0xe3
  425ad4:	ja     0x425ac8
  425ad6:	mov    ebx,esp
  425ad8:	xchg   DWORD PTR [esi+0x64bc54a1],edi
  425ade:	mov    edx,DWORD PTR [ebx]
  425ae0:	xchg   ecx,eax
  425ae1:	lea    edx,[esi+ecx*2+0x631361fc]
  425ae8:	mov    al,0x7f
  425aea:	add    al,0x43
  425aec:	xor    al,BYTE PTR [eax]
	...
  425afa:	stos   BYTE PTR es:[edi],al
  425afb:	jo     0x425add
  425afd:	dec    ecx
  425afe:	cli    
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	dec    dl
  425b07:	nop
  425b08:	cwde   
  425b09:	push   ecx
  425b0a:	inc    eax
  425b0b:	rol    BYTE PTR [ecx],cl
  425b0d:	add    bl,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [ebp-0x32],ah
  425b14:	cmp    dl,bh
  425b16:	dec    esi
  425b17:	(bad)  
  425b18:	(bad)  
  425b19:	sbb    BYTE PTR [ecx-0x307a2018],bh
  425b1f:	and    edi,DWORD PTR ds:0x8244f94e
  425b25:	xchg   DWORD PTR ds:0x6ce531cf,ecx
  425b2b:	and    al,0x1d
  425b2d:	adc    al,0x9a
  425b2f:	fcmovnb st,st(4)
  425b31:	loop   0x425ba0
  425b33:	sbb    al,0x77
  425b35:	jle    0x425b4b
  425b37:	xchg   edi,eax
  425b38:	js     0x425b04
  425b3a:	adc    eax,0x8d4d9c8a
  425b3f:	mov    al,BYTE PTR [eax-0x5a50fd94]
  425b45:	ja     0x425b31
  425b47:	pop    es
  425b48:	loopne 0x425ba4
  425b4a:	mov    al,0x32
  425b4c:	sub    DWORD PTR [edi-0x28],esi
  425b4f:	mov    dl,0x24
  425b51:	mov    esp,0x77f8498b
  425b56:	rcl    DWORD PTR [edx+edi*2],0xe
  425b5a:	push   0xb158d42d
  425b5f:	jle    0x425bde
  425b61:	loopne 0x425b2f
  425b63:	mov    dl,0x2b
  425b65:	sub    dh,BYTE PTR [ecx]
  425b67:	add    DWORD PTR [eax+ebp*4-0x40],esi
  425b6b:	push   cs
  425b6c:	fdiv   QWORD PTR [edx-0x58]
  425b6f:	(bad)  
  425b70:	jne    0x425bcf
  425b72:	xchg   esp,eax
  425b73:	jnp    0x425bb2
  425b75:	adc    BYTE PTR [eax+0x413f9364],al
  425b7b:	test   eax,0x7fdee700
  425b80:	mov    dh,0x8
  425b82:	xor    esp,DWORD PTR [ebp+0x661b3fcf]
  425b88:	adc    eax,0x4bd104d0
  425b8d:	js     0x425b3e
  425b8f:	cld    
  425b90:	inc    edi
  425b91:	xchg   esi,eax
  425b92:	jmp    0x425ba2
  425b94:	xchg   esi,eax
  425b95:	xchg   ebx,eax
  425b96:	sbb    BYTE PTR [ecx-0x6d859526],0xde
  425b9d:	mov    cl,0x9a
  425b9f:	fwait
  425ba0:	mov    ah,0xe4
  425ba2:	clc    
  425ba3:	jmp    0x4b2c942e
  425ba8:	arpl   WORD PTR [bx],si
  425bab:	inc    ecx
  425bac:	or     eax,0x35c9b92f
  425bb1:	add    al,0xc3
  425bb3:	inc    eax
  425bb4:	and    dl,bl
  425bb6:	test   ah,bh
  425bb8:	fild   QWORD PTR [esi]
  425bba:	and    ebx,DWORD PTR [edx]
  425bbc:	(bad)  
  425bbd:	enter  0x700c,0x31
  425bc1:	shl    BYTE PTR [eax+0xf],0x5b
  425bc5:	or     BYTE PTR [ecx],bl
  425bc7:	shl    edx,1
  425bc9:	push   ecx
  425bca:	scas   eax,DWORD PTR es:[edi]
  425bcb:	call   0xcbee847c
  425bd0:	pop    esi
  425bd1:	lds    edi,FWORD PTR [ebx+0x68d95ebd]
  425bd7:	push   0x50f77aa8
  425bdc:	pop    edx
  425bdd:	jns    0x425c35
  425bdf:	ins    DWORD PTR es:[edi],dx
  425be0:	mov    bh,BYTE PTR [ebx]
  425be2:	xor    eax,0xa1cb7c88
  425be7:	sahf   
  425be8:	lock ds retf 
  425beb:	xchg   ecx,eax
  425bec:	pop    ss
  425bed:	cli    
  425bee:	dec    ebx
  425bef:	cmp    ebx,ecx
  425bf1:	push   ebx
  425bf2:	inc    ebp
  425bf3:	es test eax,0xf5520f5c
  425bf9:	cmp    bh,BYTE PTR [edi-0x52]
  425bfc:	nop
  425bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bfe:	ins    DWORD PTR es:[edi],dx
  425bff:	imul   esp,DWORD PTR [ebp+0x4f],0xffffff95
  425c03:	fnstsw WORD PTR [edi+0x61]
  425c06:	add    ecx,DWORD PTR [esi+0x61]
  425c09:	add    DWORD PTR [eax-0x78],esi
  425c0c:	fld    DWORD PTR [edi+0x5654b93]
  425c12:	adc    al,0xaf
  425c14:	outs   dx,BYTE PTR ds:[esi]
  425c15:	retf   
  425c16:	stos   BYTE PTR es:[edi],al
  425c17:	pop    edi
  425c18:	test   eax,esi
  425c1a:	mov    ch,al
  425c1c:	popf   
  425c1d:	sti    
  425c1e:	sub    DWORD PTR [ebx+edx*4],ebp
  425c21:	inc    edi
  425c22:	mov    eax,0x4359721d
  425c27:	int3   
  425c28:	inc    esp
  425c29:	cmp    esp,DWORD PTR [edx]
  425c2b:	test   al,0x32
  425c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c2e:	jno    0x425c65
  425c30:	and    ebx,edi
  425c32:	icebp  
  425c33:	fst    QWORD PTR [edx]
  425c35:	addr16 repz ds ret 
  425c39:	dec    ecx
  425c3a:	pusha  
  425c3b:	jmp    0x438584ce
  425c40:	mov    dh,0xde
  425c42:	cli    
  425c43:	sub    eax,0xc0e41ed4
  425c48:	fst    QWORD PTR [ebx]
  425c4a:	and    dl,dl
  425c4c:	fstp   st(4)
  425c4e:	mov    bh,BYTE PTR [edi+0x6a8151b0]
  425c54:	dec    eax
  425c55:	pop    ebx
  425c56:	(bad)  
  425c57:	outs   dx,BYTE PTR ds:[esi]
  425c58:	call   0x98318d10
  425c5d:	jmp    0x3995:0xfabc62c1
  425c64:	sub    BYTE PTR [esi],0xb4
  425c67:	add    al,0xf6
  425c69:	test   al,0xe1
  425c6b:	add    al,0x23
  425c6d:	icebp  
  425c6e:	push   ebx
  425c6f:	aad    0xd
  425c71:	cs leave 
  425c73:	loop   0x425c2c
  425c75:	ret    0x4580
  425c78:	push   ebp
  425c79:	(bad)  [esi-0x61]
  425c7c:	leave  
  425c7d:	int    0xf0
  425c7f:	inc    ebx
  425c80:	sbb    eax,0x9ff8e883
  425c85:	rcr    BYTE PTR [edi+edi*8],cl
  425c88:	popa   
  425c89:	inc    ebp
  425c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8b:	fimul  WORD PTR [eax]
  425c8d:	or     BYTE PTR [ebx-0x2e],bh
  425c90:	xchg   esp,eax
  425c91:	retf   0x82df
  425c94:	mov    dh,0xd
  425c96:	fistp  QWORD PTR [ecx-0x45]
  425c99:	mov    cl,0xe3
  425c9b:	(bad)  
  425c9c:	ins    BYTE PTR es:[edi],dx
  425c9d:	loope  0x425c96
  425c9f:	int3   
  425ca0:	iret   
  425ca1:	in     al,0x86
  425ca3:	pop    ebx
  425ca4:	inc    eax
  425ca5:	xor    ah,al
  425ca7:	icebp  
  425ca8:	or     al,0x28
  425caa:	loop   0x425cff
  425cac:	inc    esi
  425cad:	and    al,0xcd
  425caf:	or     BYTE PTR fs:0x4c3739d6,dh
  425cb6:	inc    edi
  425cb7:	stos   BYTE PTR es:[edi],al
  425cb8:	call   FWORD PTR [ebx]
  425cba:	lods   eax,DWORD PTR ds:[esi]
  425cbb:	fsub   QWORD PTR [ebp+0x6ecca9a7]
  425cc1:	jmp    0x425c98
  425cc3:	mov    ah,0xb9
  425cc5:	je     0x425c96
  425cc7:	adc    bl,BYTE PTR [eax+0x1b]
  425cca:	repnz sbb bl,BYTE PTR [edx-0xc]
  425cce:	pop    esi
  425ccf:	enter  0xbddf,0xd9
  425cd3:	cdq    
  425cd4:	mov    WORD PTR [eax-0x23],fs
  425cd7:	clc    
  425cd8:	mov    WORD PTR [ecx+esi*2+0x7eb01d8a],cs
  425cdf:	add    edx,DWORD PTR ds:0x742e0e10
  425ce5:	mov    BYTE PTR [ecx+0x62],dh
  425ce8:	mov    al,0xc1
  425cea:	loopne 0x425d65
  425cec:	mov    esp,0x942111fc
  425cf1:	add    BYTE PTR [ebx-0xf785c3a],al
  425cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cf8:	int3   
  425cf9:	and    al,al
  425cfb:	aad    0x25
  425cfd:	ja     0x425d5d
  425cff:	sbb    BYTE PTR [ecx+0x42339cc1],ch
  425d05:	xchg   esp,eax
  425d06:	mov    ds:0xf6e566e7,eax
  425d0b:	fild   WORD PTR fs:[eax]
	...
  425d1a:	dec    edx
  425d1b:	xchg   DWORD PTR [edx+0x4c],edx
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi+0xb6d210f],ecx
  425d27:	popa   
  425d28:	mov    eax,ds:0x1d43ba3
  425d2d:	add    bl,bh
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [ecx],ah
  425d33:	rol    BYTE PTR [ebx+0x49],1
  425d36:	(bad)  
  425d37:	xchg   edi,eax
  425d38:	mov    al,ds:0x384bc3a5
  425d3d:	lods   eax,DWORD PTR ds:[esi]
  425d3e:	outs   dx,DWORD PTR ds:[esi]
  425d3f:	xchg   esp,eax
  425d40:	rol    BYTE PTR [edi],0x7e
  425d43:	mov    cl,0x5c
  425d45:	mov    al,0xab
  425d47:	ret    
  425d48:	inc    eax
  425d49:	sbb    ch,cl
  425d4b:	mov    ch,0xd0
  425d4d:	mov    ecx,0x4e99cbd9
  425d52:	stos   BYTE PTR es:[edi],al
  425d53:	and    eax,0xa11f8b64
  425d58:	mov    ecx,0x844f1a5c
  425d5d:	mov    BYTE PTR [ebx+0x5381a261],0x6d
  425d64:	daa    
  425d65:	rcr    ecx,cl
  425d67:	or     al,0x2f
  425d69:	(bad)  
  425d6a:	outs   dx,DWORD PTR ds:[esi]
  425d6b:	add    DWORD PTR [edi+0x28ebf2a2],0x4cda9674
  425d75:	cli    
  425d76:	fwait
  425d77:	push   0xffffffe9
  425d79:	test   DWORD PTR [ecx+0x1ec18607],ebx
  425d7f:	iret   
  425d80:	cdq    
  425d81:	adc    eax,0xef1e4d57
  425d86:	scas   al,BYTE PTR es:[edi]
  425d87:	push   edx
  425d88:	pop    ecx
  425d89:	std    
  425d8a:	and    BYTE PTR [eax+0x63],cl
  425d8d:	mov    eax,ds:0x2203c310
  425d92:	aam    0x56
  425d94:	ret    0xb18e
  425d97:	mov    esp,0xc32e5bb7
  425d9c:	sahf   
  425d9d:	test   BYTE PTR [esi],ch
  425d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425da0:	mov    al,ds:0x54aa1ff1
  425da5:	mov    WORD PTR [ebp+0x560ef83b],gs
  425dab:	cmp    al,0x59
  425dad:	aad    0xae
  425daf:	out    0x22,eax
  425db1:	sar    DWORD PTR [edx-0x2a],cl
  425db4:	retf   
  425db5:	scas   eax,DWORD PTR es:[edi]
  425db6:	in     eax,dx
  425db7:	push   edi
  425db8:	rcr    DWORD PTR [esp+eax*1-0x3],0xe5
  425dbd:	repz mov al,0x21
  425dc0:	xor    eax,0x6e6dc3d
  425dc5:	push   es
  425dc6:	add    ah,BYTE PTR [edx+0x5]
  425dc9:	push   esi
  425dca:	mov    esp,0x773c2cc4
  425dcf:	cdq    
  425dd0:	ins    DWORD PTR es:[edi],dx
  425dd1:	xor    ah,cl
  425dd3:	ss cld 
  425dd5:	outs   dx,BYTE PTR ds:[esi]
  425dd6:	dec    edi
  425dd7:	fst    DWORD PTR cs:[edx+0x409f93ec]
  425dde:	push   ss
  425ddf:	pop    ss
  425de0:	xor    cl,BYTE PTR [ecx+ebp*1]
  425de3:	fmul   DWORD PTR [ebx-0x7d2b81c9]
  425de9:	cmp    BYTE PTR [ecx+0x48884313],al
  425def:	cld    
  425df0:	adc    eax,0xc163980b
  425df5:	add    al,0x4c
  425df7:	or     DWORD PTR [edx],ecx
  425df9:	jae    0x425e35
  425dfb:	outs   dx,BYTE PTR ds:[esi]
  425dfc:	aas    
  425dfd:	sub    DWORD PTR [ebx-0x769ed1fd],edi
  425e03:	adc    al,0x44
  425e05:	ja     0x425dd5
  425e07:	and    edx,esi
  425e09:	out    dx,al
  425e0a:	xchg   esi,eax
  425e0b:	sar    DWORD PTR [edi+0x69],cl
  425e0e:	sbb    ebp,ebx
  425e10:	jns    0x425d99
  425e12:	add    cl,ch
  425e14:	shr    BYTE PTR [edx+0x6683a92d],cl
  425e1a:	(bad)  
  425e1b:	mov    WORD PTR [esi-0x6f],es
  425e1e:	dec    edi
  425e1f:	add    BYTE PTR [ecx-0x6b],dh
  425e22:	lods   al,BYTE PTR ds:[esi]
  425e23:	(bad)  
  425e24:	jge    0x425e86
  425e26:	fsubp  st(2),st
  425e28:	mov    esp,esi
  425e2a:	xor    ebx,ebx
  425e2c:	cwde   
  425e2d:	jb     0x425e63
  425e2f:	sti    
  425e30:	mov    ah,0x86
  425e32:	call   0x961ea702
  425e37:	mov    cl,0x79
  425e39:	xlat   BYTE PTR ds:[ebx]
  425e3a:	fst    QWORD PTR [ebp+edx*1+0x37]
  425e3e:	ror    DWORD PTR [edx-0x49e0132c],1
  425e44:	std    
  425e45:	sub    eax,0xf15cb934
  425e4a:	or     cl,BYTE PTR [ebp-0x7fe3c99c]
  425e50:	pop    esp
  425e51:	(bad)  [eax-0xa]
  425e54:	and    esp,DWORD PTR [ecx+ebx*8]
  425e57:	lods   al,BYTE PTR ds:[esi]
  425e58:	sub    eax,0x938ce629
  425e5d:	and    DWORD PTR [esi],0xffffff9c
  425e60:	loope  0x425e5f
  425e62:	mov    esi,eax
  425e64:	rcr    DWORD PTR [ebx-0x10bb09cc],cl
  425e6a:	ret    
  425e6b:	adc    DWORD PTR ds:[eax-0x16],eax
  425e6f:	sbb    BYTE PTR [ebp+0x439c8303],cl
  425e75:	and    eax,0xfe9036e4
  425e7a:	sbb    esp,ecx
  425e7c:	pop    es
  425e7d:	loope  0x425ea9
  425e7f:	lea    eax,[ecx+ecx*1]
  425e82:	sahf   
  425e83:	daa    
  425e84:	mov    eax,0xf5ded8c8
  425e89:	dec    edx
  425e8a:	fwait
  425e8b:	out    dx,eax
  425e8c:	adc    eax,0x24f34a93
  425e91:	push   esp
  425e92:	inc    eax
  425e93:	push   esp
  425e94:	pop    ss
  425e95:	inc    DWORD PTR [edi+0x51f37c80]
  425e9b:	jg     0x425f0d
  425e9d:	jmp    0x425e70
  425e9f:	mov    esi,0xdd25e69f
  425ea4:	pop    es
  425ea5:	mov    ch,0x2f
  425ea7:	loope  0x425e79
  425ea9:	or     BYTE PTR [ebx-0x67c2175],bl
  425eaf:	push   edi
  425eb0:	fadd   QWORD PTR [edi]
  425eb2:	lods   al,BYTE PTR ds:[esi]
  425eb3:	push   edi
  425eb4:	pop    ebx
  425eb5:	ret    0x4ceb
  425eb8:	inc    eax
  425eb9:	mov    ecx,0x49a89c5c
  425ebe:	lods   eax,DWORD PTR ds:[esi]
  425ebf:	dec    edi
  425ec0:	and    al,0x86
  425ec2:	ror    BYTE PTR [ebx+0x6eafa4d1],1
  425ec8:	mov    DWORD PTR [ebp-0x73],eax
  425ecb:	or     ecx,ebp
  425ecd:	call   0x15f5:0x292ff157
  425ed4:	outs   dx,BYTE PTR ds:[esi]
  425ed5:	dec    ebp
  425ed6:	push   edi
  425ed7:	test   eax,0xa8d2b531
  425edc:	jno    0x425e73
  425ede:	(bad)  [edi]
  425ee0:	and    al,0x6b
  425ee2:	bound  ebp,QWORD PTR [esp+eiz*2+0x5d]
  425ee6:	popf   
  425ee7:	pop    ebx
  425ee8:	or     eax,0xf965dee1
  425eed:	(bad)  
  425eee:	ds lock std 
  425ef1:	stc    
  425ef2:	in     eax,0x1
  425ef4:	pusha  
  425ef5:	mov    esi,0xf40aae0a
  425efa:	mov    cl,0x4e
  425efc:	aaa    
  425efd:	pop    eax
  425efe:	adc    al,0xb2
  425f00:	cwde   
  425f01:	adc    esp,DWORD PTR [ebx-0x2d81d9b2]
  425f07:	and    eax,0xffb354f7
  425f0c:	xor    cl,dh
  425f0e:	les    esi,FWORD PTR [ebx]
  425f10:	xchg   ebx,eax
  425f11:	arpl   dx,sp
  425f13:	inc    ebx
  425f14:	or     al,0x7e
  425f16:	popa   
  425f17:	jnp    0x425ec3
  425f19:	adc    DWORD PTR [ecx+0x222b0c3f],edi
  425f1f:	mov    ds:0x17adb8ab,eax
  425f24:	call   0x4dfc:0x9422568d
  425f2b:	inc    edx
  425f2c:	jne    0x425f2e
	...
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    ebx,edx
  425f47:	xor    ch,BYTE PTR [edx+0x44]
  425f4a:	ss (bad) 
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	sti    
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [eax+0x378f79e1],dl
  425f57:	fst    st(4)
  425f59:	(bad)  
  425f5b:	jns    0x425f18
  425f5d:	mov    ds:0xcaaf667a,eax
  425f62:	mov    dh,0xc2
  425f64:	mov    ecx,0x6f691b94
  425f69:	or     al,0x5a
  425f6b:	push   esi
  425f6c:	out    dx,eax
  425f6d:	add    ch,BYTE PTR [ecx-0x447af77a]
  425f73:	jo     0x425f3f
  425f75:	jle    0x425fa4
  425f77:	out    dx,eax
  425f78:	push   eax
  425f79:	and    al,0x5c
  425f7b:	(bad)  
  425f7d:	sbb    BYTE PTR [edx+0x4a],cl
  425f80:	push   eax
  425f81:	nop
  425f82:	nop    DWORD PTR [esi]
  425f85:	mov    esi,0x7568cc6
  425f8a:	bound  edi,QWORD PTR [edx]
  425f8c:	test   BYTE PTR [ecx+ecx*4],bh
  425f8f:	push   0xd3d9955b
  425f94:	jbe    0x425f51
  425f96:	or     ah,BYTE PTR [esi+0x5ad01856]
  425f9c:	pop    eax
  425f9d:	sub    bl,BYTE PTR [eax-0x7b]
  425fa0:	xchg   DWORD PTR [edi],ebp
  425fa2:	and    DWORD PTR [eax],ebp
  425fa4:	stc    
  425fa5:	sbb    BYTE PTR [ebx+eiz*1-0x49],bh
  425fa9:	xchg   edi,eax
  425faa:	je     0x426002
  425fac:	leave  
  425fad:	jnp    0x425fe9
  425faf:	jle    0x425fca
  425fb1:	push   edx
  425fb2:	(bad)  
  425fb3:	push   cs
  425fb4:	test   DWORD PTR [ebp+0x78f20d1f],esp
  425fba:	ja     0x425f76
  425fbc:	xor    ebp,edi
  425fbe:	cmp    al,0xa4
  425fc0:	mov    esp,0x71e37bb4
  425fc5:	fistp  WORD PTR [ecx+0x43729024]
  425fcb:	data16 (bad) 
  425fcd:	xchg   esi,eax
  425fce:	add    al,BYTE PTR [edx-0x2c]
  425fd1:	ins    DWORD PTR es:[edi],dx
  425fd2:	aam    0x7b
  425fd4:	loopne 0x425fb4
  425fd6:	dec    ecx
  425fd7:	adc    DWORD PTR [ecx],0x9a643987
  425fdd:	sub    ch,BYTE PTR [edi+0x7d]
  425fe0:	sbb    ch,ah
  425fe2:	in     eax,dx
  425fe3:	(bad)  
  425fe4:	mov    edi,0x78e661c9
  425fe9:	sub    ecx,eax
  425feb:	or     al,0x95
  425fed:	pusha  
  425fee:	add    DWORD PTR [ebp-0x50],ebx
  425ff1:	jae    0x426033
  425ff3:	xchg   ebx,eax
  425ff4:	xlat   BYTE PTR ds:[ebx]
  425ff5:	les    edx,FWORD PTR [edi+0x284dec24]
  425ffb:	or     esi,DWORD PTR [edi-0x58ab25f5]
  426001:	jmp    0x426075
  426003:	adc    al,BYTE PTR [edi+eiz*4]
  426006:	cmp    ecx,edx
  426008:	test   DWORD PTR [eax-0x34],ebp
  42600b:	ins    BYTE PTR es:[edi],dx
  42600c:	xchg   DWORD PTR [edx-0x14],esp
  42600f:	mov    al,0xd5
  426011:	dec    edi
  426012:	jl     0x425fc3
  426014:	mov    al,ds:0xa08fa2fb
  426019:	lods   eax,DWORD PTR ds:[esi]
  42601b:	add    BYTE PTR [eax],ah
  42601d:	mov    al,0x23
  42601f:	out    0xe5,eax
  426021:	add    al,0x54
  426023:	mov    ebp,0xb6822694
  426028:	sbb    BYTE PTR [edx],ch
  42602a:	cmp    ebx,DWORD PTR [esi-0x37]
  42602d:	mov    eax,ds:0xbb7586ca
  426032:	dec    eax
  426033:	mov    ch,0xf4
  426035:	ror    BYTE PTR [edx+0x55a49803],cl
  42603b:	adc    al,0x3d
  42603d:	push   0xd18ba66c
  426042:	mov    eax,ds:0xb3efab1b
  426047:	(bad)  
  426048:	sar    DWORD PTR [edi-0xa],cl
  42604b:	cmovnp ebp,DWORD PTR ds:0x5ba550ce
  426052:	(bad)  
  426053:	mov    ebx,0xd0bf9fbb
  426059:	xchg   ebp,eax
  42605a:	mov    esi,edx
  42605c:	out    dx,eax
  42605d:	popa   
  42605e:	mul    bh
  426060:	test   al,0x6f
  426062:	test   eax,0xf331b998
  426067:	into   
  426068:	mov    dl,0x79
  42606a:	dec    eax
  42606b:	(bad)  
  42606c:	repz mov eax,0x8f476f05
  426072:	(bad)  
  426073:	dec    ecx
  426074:	jecxz  0x4260c7
  426076:	sub    dl,BYTE PTR [esp+esi*1+0x12a69e49]
  42607d:	in     al,dx
  42607e:	push   ebx
  42607f:	push   ds
  426080:	fiadd  WORD PTR [ebx+0x5d8ee1d5]
  426086:	pop    ebp
  426087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426088:	fs dec ecx
  42608a:	(bad)  
  42608c:	ds sub al,0xe3
  42608f:	sub    DWORD PTR [edx-0x4a],ebp
  426092:	add    eax,0xe6c43ad2
  426097:	(bad)  
  426098:	mov    edi,0x1965e742
  42609d:	das    
  42609e:	push   ecx
  42609f:	push   ecx
  4260a0:	push   0x26
  4260a2:	jecxz  0x4260f7
  4260a4:	add    ebx,DWORD PTR [ecx+esi*2-0x18]
  4260a8:	inc    edx
  4260a9:	xchg   ebx,eax
  4260aa:	imul   ebx,DWORD PTR [ecx+ecx*1],0xffffffb7
  4260ae:	sbb    esi,DWORD PTR [eax]
  4260b0:	push   edx
  4260b1:	push   edx
  4260b2:	push   ebp
  4260b3:	(bad)  
  4260b4:	xor    ah,BYTE PTR [edx]
  4260b6:	stos   DWORD PTR es:[edi],eax
  4260b7:	inc    esp
  4260b8:	rol    DWORD PTR [edx],1
  4260ba:	or     al,dh
  4260bc:	mov    al,0x29
  4260be:	xor    al,0xf6
  4260c0:	xor    esi,esi
  4260c2:	test   eax,0xbf43e15d
  4260c8:	mov    dh,0x7e
  4260ca:	xor    eax,DWORD PTR [eax-0x2f]
  4260cd:	bound  edi,QWORD PTR [ebp-0x80]
  4260d0:	sbb    BYTE PTR [esi+0x4dd0fbf3],al
  4260d6:	mov    ecx,DWORD PTR [eax+eiz*8]
  4260d9:	call   0x78455419
  4260de:	das    
  4260df:	mov    ecx,0xb909268c
  4260e4:	imul   eax,DWORD PTR [esi-0x69],0x51
  4260e8:	xchg   ebp,eax
  4260e9:	xor    BYTE PTR [esi+ebx*8+0x45],al
  4260ed:	xor    eax,ecx
  4260ef:	jb     0x4260a2
  4260f1:	sub    al,0xba
  4260f3:	call   0x175a:0x92fef4b4
  4260fa:	mov    cl,0xb2
  4260fc:	add    eax,0xcf267074
  426101:	mov    esp,0xe8fc870
  426106:	out    dx,eax
  426107:	lea    edi,[ecx]
  426109:	push   0x12565a82
  42610e:	aam    0x9d
  426110:	mov    ebx,0x586d73a8
  426115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426116:	xor    dh,cl
  426118:	jmp    0x5c78e641
  42611d:	stos   BYTE PTR es:[edi],al
  42611e:	jo     0x426167
  426120:	popa   
  426121:	ss dec ebx
  426123:	outs   dx,BYTE PTR ds:[esi]
  426124:	inc    esi
  426125:	stos   BYTE PTR es:[edi],al
  426126:	cmp    al,0xe4
  426128:	fwait
  426129:	dec    esi
  42612a:	jmp    0xb6d6:0xa795d9b
  426131:	jg     0x426147
  426133:	ficomp WORD PTR [eax-0x9]
  426136:	fild   DWORD PTR [ebx]
  426138:	retf   
  426139:	mov    edx,0xb7d0f89e
  42613e:	shl    DWORD PTR [esi],0x5c
  426141:	ret    
  426142:	pusha  
  426143:	aam    0x28
  426145:	add    ebx,DWORD PTR [esi+edx*4-0x65053797]
  42614c:	inc    DWORD PTR [eax]
	...
  42615a:	ret    
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	icebp  
  426167:	add    ebp,eax
  426169:	push   0x1d831
  42616e:	sti    
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    ah,bl
  426173:	pop    eax
  426174:	mov    ds:0xe1b96fa0,eax
  426179:	addr16 clc 
  42617b:	pop    ebx
  42617c:	mov    bh,0xe5
  42617e:	gs cmp eax,0xd9f7bb4a
  426184:	push   edx
  426185:	ror    BYTE PTR [ebx-0x65],1
  426188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426189:	xor    esp,DWORD PTR [eax-0x64b46480]
  42618f:	lock adc eax,0x77354889
  426195:	sti    
  426196:	push   ss
  426197:	mov    eax,ds:0xc7485871
  42619c:	xor    DWORD PTR [ecx],esi
  42619e:	fisttp WORD PTR [edi]
  4261a0:	addr16 and eax,0xf8ffdf93
  4261a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261a7:	pop    eax
  4261a8:	dec    ecx
  4261a9:	(bad)  
  4261aa:	and    al,0x59
  4261ac:	mov    bl,0xc8
  4261ae:	and    BYTE PTR [edx-0x62],bh
  4261b1:	loopne 0x426178
  4261b3:	ja     0x4261f3
  4261b5:	jb     0x426152
  4261b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261b8:	push   ebx
  4261b9:	ins    BYTE PTR es:[edi],dx
  4261ba:	je     0x42615c
  4261bc:	outs   dx,BYTE PTR ds:[esi]
  4261bd:	sbb    al,0x12
  4261bf:	jnp    0x4261b8
  4261c1:	out    dx,al
  4261c2:	ret    0xce72
  4261c5:	push   es
  4261c6:	fcomp  DWORD PTR [eax+0x37429e08]
  4261cc:	imul   eax,ecx,0x6a
  4261cf:	xor    bh,BYTE PTR [eax+edi*4+0x56a56059]
  4261d6:	xchg   edi,eax
  4261d7:	push   ds
  4261d8:	and    esi,DWORD PTR [esi-0x42]
  4261db:	enter  0xa6f4,0x58
  4261df:	adc    cl,BYTE PTR [esi-0x7e5a99f4]
  4261e5:	shl    BYTE PTR [edi-0x5d],0xc1
  4261e9:	in     eax,dx
  4261ea:	fstp   DWORD PTR [ebx-0x38efdfad]
  4261f0:	sub    BYTE PTR [edi-0x52],dh
  4261f3:	cwde   
  4261f4:	adc    DWORD PTR [ebx],ecx
  4261f6:	test   eax,0xbe8e62b0
  4261fb:	dec    ecx
  4261fc:	pop    es
  4261fd:	push   edi
  4261fe:	fnstcw WORD PTR [esi+0x13]
  426201:	std    
  426202:	ficomp WORD PTR [si-0x5865]
  426207:	gs stos DWORD PTR es:[edi],eax
  426209:	push   ecx
  42620a:	push   es
  42620b:	shl    BYTE PTR [eax],cl
  42620d:	aaa    
  42620e:	fimul  WORD PTR [edi-0x224e6539]
  426214:	je     0x4261ff
  426216:	jne    0x426249
  426218:	push   cs
  426219:	pusha  
  42621a:	dec    bl
  42621c:	loopne 0x42628d
  42621e:	inc    esp
  42621f:	outs   dx,BYTE PTR ds:[esi]
  426220:	in     eax,0x5e
  426222:	sub    BYTE PTR [ecx-0x66d3b0e1],0xfd
  426229:	fild   QWORD PTR [edx-0x681dd5a2]
  42622f:	lods   al,BYTE PTR ds:[esi]
  426230:	jp     0x426287
  426232:	pushf  
  426233:	jmp    0x3b73f50e
  426238:	add    BYTE PTR ds:0xfd3e4794,bl
  42623e:	add    eax,0xc4d3059a
  426243:	hlt    
  426244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426245:	mov    ds:0x63da4f78,al
  42624a:	loopne 0x426223
  42624c:	jno    0x426250
  42624e:	test   al,0xd6
  426250:	cld    
  426251:	jno    0x426271
  426253:	jl     0x426237
  426255:	repz pop ecx
  426257:	imul   ebx,DWORD PTR [eax+ecx*1],0x83231166
  42625e:	pop    edi
  42625f:	dec    edi
  426260:	ret    0xa32d
  426263:	dec    esi
  426264:	pusha  
  426265:	sub    DWORD PTR [ebp-0x794d231f],esi
  42626b:	jae    0x42627a
  42626d:	pop    es
  42626e:	cmp    bl,BYTE PTR [ecx-0x2f]
  426271:	lds    ebp,FWORD PTR [eax+0x40]
  426274:	mov    ds:0x983bbd8f,al
  426279:	mov    ecx,0xbba4125d
  42627e:	rcr    DWORD PTR [eax],cl
  426280:	adc    BYTE PTR [ecx+edx*8-0x5092368a],0x63
  426288:	add    ebp,eax
  42628a:	in     eax,0xae
  42628c:	xor    eax,0x2d006984
  426291:	mov    gs,WORD PTR [esp+edx*4]
  426294:	test   eax,0x91c1b98a
  426299:	jo     0x4262d0
  42629b:	iret   
  42629c:	dec    BYTE PTR [esi+eiz*8]
  42629f:	sub    BYTE PTR [edx+0x3e],al
  4262a2:	xor    DWORD PTR [esi-0x593731c2],eax
  4262a8:	adc    al,0x2c
  4262aa:	inc    edx
  4262ab:	and    eax,0x24634620
  4262b0:	or     al,0xd0
  4262b2:	and    ebx,DWORD PTR [esi-0x56]
  4262b5:	xchg   ecx,eax
  4262b6:	pushf  
  4262b7:	fstp   TBYTE PTR [ecx-0x21]
  4262ba:	dec    ebp
  4262bb:	pop    esp
  4262bc:	jne    0x426318
  4262be:	clc    
  4262bf:	pop    esp
  4262c0:	pop    edi
  4262c1:	adc    eax,0x8ce500df
  4262c6:	les    ebp,FWORD PTR [ebx+0x27]
  4262c9:	ret    
  4262ca:	ja     0x42626b
  4262cc:	push   ebx
  4262cd:	mov    dh,0x1a
  4262cf:	pop    edi
  4262d0:	fiadd  WORD PTR [ebp-0x2b]
  4262d3:	xor    DWORD PTR [ebp-0x2592d82],esi
  4262d9:	(bad)  
  4262db:	push   cs
  4262dc:	ficom  DWORD PTR [esi*4+0x69ec9988]
  4262e3:	(bad)  
  4262e4:	push   0xeb963b52
  4262e9:	lods   al,BYTE PTR ds:[esi]
  4262ea:	fimul  DWORD PTR [ebp-0x3140893c]
  4262f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262f1:	lock pop edx
  4262f3:	aam    0xfa
  4262f5:	mov    ah,0xb7
  4262f7:	les    esp,FWORD PTR [ecx-0x2f]
  4262fa:	out    0xd2,eax
  4262fc:	mov    ch,BYTE PTR [ebx-0x3e74886e]
  426302:	fs jge 0x426298
  426305:	mov    ebx,0x4f03ff6f
  42630a:	pop    es
  42630b:	adc    al,0x40
  42630d:	rcl    ah,1
  42630f:	bnd js 0x42629e
  426312:	sti    
  426313:	sar    edx,0x74
  426316:	pop    ecx
  426317:	pop    ds
  426318:	push   edx
  426319:	mov    edi,0xd90446d1
  42631e:	cld    
  42631f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426320:	xor    BYTE PTR [esp+esi*2+0x71f4e65e],cl
  426327:	stos   DWORD PTR es:[edi],eax
  426328:	call   0x6d21:0x80d848f8
  42632f:	adc    esp,ecx
  426331:	mov    eax,ds:0xd7ddfbe9
  426336:	ret    0x4ae1
  426339:	cmp    bh,BYTE PTR [edx+0x11]
  42633c:	dec    esi
  42633d:	fwait
  42633e:	adc    al,0x7c
  426340:	sbb    ch,bl
  426342:	hlt    
  426343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426344:	fld    TBYTE PTR [edi-0x76792ef4]
  42634a:	aad    0x4f
  42634c:	pop    ebx
  42634d:	sbb    BYTE PTR [ebx],cl
  42634f:	jno    0x4263c0
  426351:	and    DWORD PTR [edx+0x5020fbc4],ecx
  426357:	inc    ebx
  426358:	inc    esi
  426359:	inc    esi
  42635a:	test   al,0x3
  42635c:	ror    DWORD PTR [ebx+0x2d3da722],cl
  426362:	mov    edx,0xfd7cf91b
  426367:	data16 gs xor al,0x4a
  42636b:	stos   DWORD PTR es:[edi],eax
  42636c:	ret    
	...
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	rol    DWORD PTR [ebx],cl
  426387:	test   DWORD PTR [esi],esp
  426389:	sub    BYTE PTR [edx+ebx*8],0x1
  42638d:	add    bl,bh
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [ecx+0x18],dl
  426394:	sub    edx,DWORD PTR [edi]
  426396:	dec    ebx
  426397:	push   cs
  426398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426399:	and    bl,BYTE PTR [eax+edi*4+0x316e95da]
  4263a0:	pop    ebp
  4263a1:	stos   DWORD PTR es:[edi],eax
  4263a2:	mov    ebp,0xa1dbd1fa
  4263a7:	cmp    cl,BYTE PTR [ebp-0x5a136434]
  4263ad:	(bad)  
  4263ae:	xchg   edx,eax
  4263af:	jle    0x4263a4
  4263b1:	sbb    BYTE PTR [edx-0x66f20a3c],ah
  4263b7:	xchg   esi,eax
  4263b8:	mov    ah,0x6e
  4263ba:	lahf   
  4263bb:	and    ch,BYTE PTR [esi]
  4263bd:	mov    al,0x52
  4263bf:	loop   0x426439
  4263c1:	scas   al,BYTE PTR es:[edi]
  4263c2:	mov    edx,0xbc38a53d
  4263c7:	or     DWORD PTR [edi+0x54],edx
  4263ca:	or     al,0x8a
  4263cc:	rcl    dh,0xf2
  4263cf:	sub    al,0x92
  4263d1:	inc    esi
  4263d2:	out    dx,al
  4263d3:	cld    
  4263d4:	xchg   ebp,eax
  4263d5:	or     ah,BYTE PTR [ecx+ecx*1+0x4ba97515]
  4263dc:	xchg   ebx,eax
  4263dd:	cwde   
  4263de:	xchg   edi,eax
  4263df:	ss sti 
  4263e1:	dec    esi
  4263e2:	lock lods al,BYTE PTR ds:[esi]
  4263e4:	mov    bl,0x49
  4263e6:	fisttp WORD PTR [eax-0x4664a9a7]
  4263ec:	fsubr  DWORD PTR [esp+ebx*2-0x1225cf9f]
  4263f3:	push   ebx
  4263f4:	push   edi
  4263f5:	xchg   edx,eax
  4263f6:	rcr    DWORD PTR [ecx-0x3438b218],1
  4263fc:	jmp    0x426417
  4263fe:	jno    0x4263d7
  426400:	lock sub DWORD PTR [ecx-0x386b5e4a],ebp
  426407:	stc    
  426408:	lahf   
  426409:	jae    0x4263f9
  42640b:	add    al,0xa9
  42640d:	adc    BYTE PTR [esi-0x7a],0x3e
  426411:	xchg   BYTE PTR [ebp+0x41906166],al
  426417:	sahf   
  426418:	jp     0x426477
  42641a:	lds    edx,FWORD PTR [edx]
  42641c:	cmp    DWORD PTR gs:[edi],ebp
  42641f:	push   esi
  426420:	adc    BYTE PTR [ebx+ebp*1+0x7be6d08],ah
  426427:	pop    ecx
  426428:	push   es
  426429:	xor    al,0xd3
  42642b:	and    BYTE PTR [ecx+0x6a3c063a],0x27
  426432:	dec    ebp
  426433:	push   esp
  426434:	jno    0x4263c3
  426436:	jmp    FWORD PTR [edi+0x4c53b770]
  42643c:	fld    TBYTE PTR [ebx+eiz*1-0x171f8a9d]
  426443:	and    ebp,edx
  426445:	xchg   DWORD PTR [edi-0x2e],esi
  426448:	mov    ch,0xaf
  42644a:	sbb    DWORD PTR [ebx+0x1b60afd],edi
  426450:	mov    gs,WORD PTR [ebp-0x12]
  426453:	dec    esi
  426454:	xor    eax,0xf80731ca
  426459:	mov    ebx,0x556d0456
  42645e:	gs jne 0x426452
  426461:	add    al,0x28
  426463:	inc    edx
  426464:	(bad)  
  426465:	nop
  426466:	iret   
  426467:	mov    eax,0x514a8466
  42646c:	bound  ebp,QWORD PTR [edx+0x6d]
  42646f:	lahf   
  426470:	sbb    al,0x9f
  426472:	push   0xffffffeb
  426474:	jo     0x42644c
  426476:	retf   
  426477:	mov    esp,0x43fc2809
  42647c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42647d:	div    BYTE PTR [edx+edx*4+0x78527530]
  426484:	mov    eax,ds:0x97b5bd40
  426489:	mov    ch,0xb
  42648b:	jge    0x42649b
  42648d:	lahf   
  42648e:	mov    bh,0x2b
  426490:	pop    ds
  426491:	xchg   esi,eax
  426492:	xchg   edx,eax
  426493:	adc    BYTE PTR [esi+0x61],cl
  426496:	xor    BYTE PTR [ecx-0x2521a970],dl
  42649c:	iret   
  42649d:	pop    ss
  42649e:	dec    BYTE PTR [edx-0xf6afd86]
  4264a4:	jmp    0x396:0xb850724d
  4264ab:	retf   0xca26
  4264ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264af:	or     eax,0xfa8fe089
  4264b4:	add    BYTE PTR [edx],al
  4264b6:	stos   BYTE PTR es:[edi],al
  4264b7:	out    0x2d,al
  4264b9:	in     al,0xbf
  4264bb:	inc    esi
  4264bc:	and    BYTE PTR [ebp+0x7fa87dfe],ch
  4264c2:	adc    ch,BYTE PTR [eax-0x4f]
  4264c5:	sub    cl,ah
  4264c7:	outs   dx,BYTE PTR ss:[esi]
  4264c9:	and    al,0xad
  4264cb:	data16 icebp 
  4264cd:	sbb    eax,0x506498d7
  4264d2:	test   DWORD PTR [edx+ebp*1+0x32efa3cd],edx
  4264d9:	or     edx,ebp
  4264db:	imul   edx,DWORD PTR [ebp-0x6d],0x88f2436e
  4264e2:	mov    ecx,0xfd69d92d
  4264e7:	call   0x4e85:0xfe012811
  4264ee:	dec    edx
  4264ef:	mov    ebp,esi
  4264f1:	push   es
  4264f2:	push   ecx
  4264f3:	leave  
  4264f4:	jle    0x426488
  4264f6:	jbe    0x4264b0
  4264f8:	test   eax,0xc99fa97e
  4264fd:	sub    DWORD PTR [ecx+0x7c],0xca853b3f
  426504:	dec    esi
  426505:	call   0x7a69:0xd8d83764
  42650c:	jo     0x42656e
  42650e:	js     0x426559
  426510:	loop   0x4264ff
  426512:	sbb    dl,BYTE PTR [eax+0x44ce4981]
  426518:	sbb    dh,bl
  42651a:	pop    es
  42651b:	mov    esi,0x6cc0a9e3
  426520:	pop    esi
  426521:	sbb    cl,ch
  426523:	inc    esi
  426524:	and    ch,BYTE PTR [edi-0x16b503e0]
  42652a:	mov    ah,0xf5
  42652c:	das    
  42652d:	jb     0x4264b9
  42652f:	fcos   
  426531:	loope  0x42658b
  426533:	cwde   
  426534:	pop    edi
  426535:	cmp    BYTE PTR [edx],ah
  426537:	mov    bl,0x3e
  426539:	sub    DWORD PTR [ecx-0x4a9c8206],0xffffffa8
  426540:	push   ss
  426541:	arpl   WORD PTR [edi+0x7b7ecfdd],bp
  426547:	pop    ecx
  426548:	mov    ds:0x67059e69,al
  42654d:	retf   
  42654e:	fldenv [ecx+ecx*2+0x59c098af]
  426555:	mov    eax,ds:0x632f2594
  42655a:	sbb    esp,DWORD PTR [ecx+0x41f79e55]
  426560:	push   0xd23dbc5a
  426565:	lds    ecx,FWORD PTR [esi]
  426567:	hlt    
  426568:	ja     0x426530
  42656a:	mov    ch,0x2b
  42656c:	jl     0x426527
  42656e:	out    dx,al
  42656f:	es addr16 jbe 0x4265c7
  426573:	push   eax
  426574:	dec    edx
  426575:	jle    0x4265b5
  426577:	mov    ch,0x71
  426579:	addr16 sub esi,edi
  42657c:	adc    esi,DWORD PTR [esi]
  42657e:	popf   
  42657f:	lods   eax,DWORD PTR ds:[esi]
  426580:	js     0x426557
  426582:	stc    
  426583:	aas    
  426584:	ins    BYTE PTR es:[edi],dx
  426585:	or     eax,0xaa0ef5ec
  42658a:	fucomi st,st(0)
  42658c:	sub    DWORD PTR [eax],eax
	...
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x42661c
  4265a7:	push   ebx
  4265a8:	dec    ebp
  4265a9:	add    ah,BYTE PTR [edi]
  4265ab:	fadd   QWORD PTR [ecx]
  4265ad:	add    bl,bh
  4265af:	add    DWORD PTR [eax],eax
  4265b1:	add    BYTE PTR ds:0x104f52f6,dl
  4265b7:	or     edx,DWORD PTR [esi]
  4265b9:	jmp    0x93c8:0xa3e785d7
  4265c0:	repnz (bad) 
  4265c2:	push   0x2d
  4265c4:	jbe    0x426624
  4265c6:	fcom   QWORD PTR [ebp+0x6d]
  4265c9:	and    DWORD PTR [edx+0x53a56223],ebx
  4265cf:	test   eax,0x4b2625b1
  4265d4:	cdq    
  4265d5:	or     eax,0x992506a6
  4265da:	dec    edi
  4265db:	gs shl bl,1
  4265de:	and    eax,DWORD PTR [ebp-0x8]
  4265e1:	jecxz  0x426587
  4265e3:	push   edi
  4265e4:	push   ebx
  4265e5:	cmp    cl,bl
  4265e7:	dec    ecx
  4265e8:	xchg   ebx,eax
  4265e9:	aas    
  4265ea:	xchg   esp,eax
  4265eb:	xchg   edi,eax
  4265ec:	pop    ebp
  4265ed:	cmp    DWORD PTR [edi*2-0x7c753bfd],eax
  4265f4:	mov    al,ds:0xdd9fec7
  4265f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265fa:	nop
  4265fb:	(bad)  
  4265fc:	mov    bl,0x5b
  4265fe:	(bad)  
  4265ff:	lock dec ebp
  426601:	je     0x4265e1
  426603:	sahf   
  426604:	std    
  426605:	std    
  426606:	adc    eax,0xab82a2f0
  42660b:	shl    BYTE PTR [esi-0x54],0x7a
  42660f:	fisubr DWORD PTR [eax]
  426611:	push   edx
  426612:	stos   BYTE PTR es:[edi],al
  426613:	pop    edi
  426614:	pop    eax
  426615:	push   edx
  426616:	cdq    
  426617:	fnstenv [edi-0x32]
  42661a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661b:	(bad)  
  42661c:	xchg   ebx,eax
  42661d:	(bad)  
  42661f:	adc    esi,DWORD PTR [edi-0x2e]
  426622:	fisubr DWORD PTR [eax+0x5f]
  426625:	js     0x426692
  426627:	js     0x4266a2
  426629:	fsub   DWORD PTR [edx+0x2f21ad7]
  42662f:	fiadd  WORD PTR [ebx-0x61c3d738]
  426635:	mov    esp,0x23968487
  42663a:	addr16 loope 0x426663
  42663d:	inc    edx
  42663e:	jbe    0x4265c4
  426640:	outs   dx,BYTE PTR ds:[esi]
  426641:	dec    esi
  426642:	sbb    esi,DWORD PTR [ebx]
  426644:	add    ecx,esp
  426646:	push   0xa8b774cc
  42664b:	dec    ecx
  42664c:	push   cs
  42664d:	mov    ds:0x56aad50d,eax
  426652:	das    
  426653:	outs   dx,BYTE PTR ds:[esi]
  426654:	(bad)  
  426655:	mov    edx,0x2e163bc5
  42665a:	adc    DWORD PTR [edi+0x5ef93971],ebp
  426660:	inc    ecx
  426661:	cmp    eax,DWORD PTR [edi+0x2017246b]
  426667:	pop    eax
  426668:	(bad)  
  426669:	jge    0x42669d
  42666b:	push   ebx
  42666c:	inc    esi
  42666d:	jns    0x426630
  42666f:	dec    ecx
  426670:	mov    edx,0x6ba480ce
  426675:	or     esp,DWORD PTR ds:0x8f104b77
  42667b:	or     esp,DWORD PTR [bx]
  42667e:	jbe    0x42668d
  426680:	pop    edi
  426681:	icebp  
  426682:	adc    edi,DWORD PTR [ebp+edi*1+0x3c6c3c66]
  426689:	pop    DWORD PTR [ebp-0x5698e0ad]
  42668f:	shl    BYTE PTR [eax],cl
  426691:	into   
  426692:	sahf   
  426693:	aaa    
  426694:	and    ecx,DWORD PTR gs:[esi]
  426697:	fmul   QWORD PTR [eax]
  426699:	cmp    eax,0x68686243
  42669e:	pop    ebp
  42669f:	xor    cl,BYTE PTR [ebx-0x6f]
  4266a2:	mov    edx,0x6fc8e4e5
  4266a7:	pop    esp
  4266a8:	pop    ebx
  4266a9:	ins    BYTE PTR es:[edi],dx
  4266aa:	(bad)  
  4266ab:	cld    
  4266ac:	repz pop esp
  4266ae:	cmp    BYTE PTR [ebx+0x5d],ch
  4266b1:	rcr    DWORD PTR [ebp-0x6b4c0ff6],0x40
  4266b8:	hlt    
  4266b9:	fimul  WORD PTR [ebx+ebp*4+0x16]
  4266bd:	and    DWORD PTR [edi+0x32bcf378],edx
  4266c3:	mov    al,BYTE PTR [edi-0x56456938]
  4266c9:	sub    edx,ebp
  4266cb:	pop    ss
  4266cc:	jmp    0x800e:0x9489247f
  4266d3:	or     BYTE PTR [esi+0x67],bl
  4266d6:	sub    ah,bh
  4266d8:	call   0x459bcc12
  4266dd:	inc    esi
  4266de:	sub    eax,0x1f88e156
  4266e3:	int3   
  4266e4:	and    eax,0x71b02f25
  4266e9:	and    DWORD PTR [ecx],edi
  4266eb:	fdiv   QWORD PTR [esi]
  4266ed:	and    eax,0xdb645cf7
  4266f2:	cli    
  4266f3:	sbb    BYTE PTR [edi],ch
  4266f5:	(bad)  
  4266f6:	sbb    eax,0x5f4ad3e7
  4266fb:	lods   al,BYTE PTR ds:[esi]
  4266fc:	push   esi
  4266fd:	std    
  4266fe:	mov    bl,BYTE PTR [esp+ebp*4-0xf]
  426702:	push   ecx
  426703:	leave  
  426704:	sbb    DWORD PTR [ecx],esi
  426706:	and    eax,DWORD PTR [esi+0x3a9e199c]
  42670c:	mov    bl,BYTE PTR [ebp+edx*2+0x37830c64]
  426713:	das    
  426714:	jo     0x4266f2
  426716:	jl     0x426730
  426718:	sub    BYTE PTR [ebp+0x26d22a12],dh
  42671e:	dec    esp
  42671f:	mov    esi,0x8abbd83d
  426724:	adc    dh,BYTE PTR [eax]
  426726:	jp     0x426704
  426728:	out    dx,eax
  426729:	pop    eax
  42672a:	push   ss
  42672b:	mov    edi,0x42888aaf
  426730:	outs   dx,DWORD PTR ds:[esi]
  426731:	jecxz  0x426770
  426733:	push   edi
  426734:	idiv   BYTE PTR [eax+0x23216e06]
  42673a:	xlat   BYTE PTR ds:[ebx]
  42673b:	push   esi
  42673c:	xor    BYTE PTR [edx+0x56],0xaf
  426740:	fisub  DWORD PTR [edi+0x2f]
  426743:	std    
  426744:	xor    eax,0xc328a562
  426749:	mov    ds:0x1508befc,al
  42674e:	mov    edx,DWORD PTR [eax]
  426750:	aaa    
  426751:	cmp    al,BYTE PTR [eax+ebp*4]
  426754:	(bad)  
  426755:	lea    esp,fs:[ebp+0x12ffa978]
  42675c:	jle    0x42671a
  42675e:	sub    bl,bh
  426760:	(bad)  
  426761:	jbe    0x4267d3
  426763:	push   ebp
  426764:	or     DWORD PTR [ebp+0x49f98ec5],edi
  42676a:	push   DWORD PTR [ebp+edx*4+0x10]
  42676e:	js     0x4267c0
  426770:	bound  esp,QWORD PTR [edi-0x3f]
  426773:	repnz push eax
  426775:	aaa    
  426776:	mov    BYTE PTR [edi-0x5cf8be3f],dl
  42677c:	fisttp QWORD PTR [eax]
  42677e:	mov    eax,ds:0x3892fd6a
  426783:	mov    fs,edi
  426785:	test   al,0xe7
  426787:	or     ecx,DWORD PTR [ebp-0x45]
  42678a:	lods   al,BYTE PTR ds:[esi]
  42678b:	dec    ebx
  42678c:	outs   dx,DWORD PTR ds:[esi]
  42678d:	popf   
  42678e:	add    DWORD PTR [ebx+0x6419ab60],esp
  426794:	mov    eax,0xa02c406
  426799:	jmp    0x92a0:0x4fe79ede
  4267a0:	sbb    BYTE PTR [ebx+0xf],dl
  4267a3:	inc    esi
  4267a4:	bound  ecx,QWORD PTR [ecx-0x27]
  4267a7:	adc    al,0xb2
  4267a9:	push   edx
  4267aa:	clc    
  4267ab:	add    eax,0xed
	...
  4267b8:	add    BYTE PTR [eax],al
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	ret    
  4267c7:	leave  
  4267c8:	dec    ebp
  4267c9:	add    eax,0x1de22
  4267ce:	sti    
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [ebx+edi*8-0x53],dh
  4267d5:	out    dx,eax
  4267d6:	mov    edx,0xadea4188
  4267db:	sub    eax,0x6e5c84c8
  4267e0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4267e2:	neg    DWORD PTR [edi]
  4267e4:	clc    
  4267e5:	xchg   edx,eax
  4267e6:	ins    BYTE PTR es:[edi],dx
  4267e7:	popa   
  4267e8:	mov    fs,WORD PTR [edi-0x1e0a4703]
  4267ee:	ret    
  4267ef:	inc    esp
  4267f0:	stos   DWORD PTR es:[edi],eax
  4267f1:	dec    esi
  4267f2:	or     eax,0xb6066941
  4267f7:	les    ebp,FWORD PTR [ecx+0x27854c9]
  4267fd:	sbb    DWORD PTR [eax-0x57],edx
  426800:	jb     0x4267a1
  426802:	sbb    edi,esi
  426804:	pop    ss
  426805:	and    BYTE PTR [ebx+ebx*2+0x31],bl
  426809:	(bad)  
  42680a:	push   DWORD PTR [esi]
  42680c:	add    edi,ebx
  42680e:	into   
  42680f:	adc    eax,0x6725a4bc
  426814:	mov    edi,0x8c81e356
  426819:	and    DWORD PTR [edi-0x61967bd],ecx
  42681f:	repnz mov ah,0xcd
  426822:	retf   0xd129
  426825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426826:	sub    eax,0x794affee
  42682b:	sub    eax,0xe676ea34
  426830:	imul   esp,DWORD PTR [esi+0x7edcd1a0],0xffffffa5
  426837:	int3   
  426838:	ffree  st(4)
  42683a:	jl     0x426801
  42683c:	adc    ebx,DWORD PTR [ebx+0x1abbfc6e]
  426842:	(bad)  
  426843:	jge    0x8c84b406
  426849:	fwait
  42684a:	retf   
  42684b:	out    0x2b,eax
  42684d:	inc    edi
  42684e:	lea    esi,[ebx+ecx*8]
  426851:	jae    0x426863
  426853:	xor    ah,ah
  426855:	or     al,0xfc
  426857:	in     al,dx
  426858:	test   al,cl
  42685a:	jnp    0x4267e7
  42685c:	les    edx,FWORD PTR [ecx]
  42685e:	add    al,0xf9
  426860:	sbb    al,0xe2
  426862:	fs (bad) 
  426864:	mov    bl,0xe3
  426866:	push   edx
  426867:	fsubr  st(2),st
  426869:	jmp    0xefa9:0x262569b6
  426870:	inc    eax
  426871:	ss stc 
  426873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426874:	adc    BYTE PTR [ebp-0x58d8e179],ah
  42687a:	ror    DWORD PTR [ebx-0x3f58c63e],0x47
  426881:	xor    DWORD PTR [edi+esi*4],0x76a366fa
  426888:	mov    DWORD PTR es:[edi-0x10],edi
  42688c:	out    dx,eax
  42688d:	pop    esp
  42688e:	and    DWORD PTR [eax-0x15efd5b5],0x961c69b5
  426898:	xchg   ecx,eax
  426899:	gs in  eax,0xb3
  42689c:	mov    ebp,0x8cd37617
  4268a1:	mov    bl,0x4
  4268a3:	call   0xccef:0x62066d62
  4268aa:	dec    ecx
  4268ab:	pop    ebx
  4268ac:	xchg   edi,eax
  4268ad:	xor    eax,0x2bafa44b
  4268b2:	xor    al,0x8c
  4268b4:	dec    edx
  4268b5:	push   edi
  4268b6:	int    0x76
  4268b8:	mov    ebx,0x8b46a095
  4268bd:	jne    0x426849
  4268bf:	int    0xe2
  4268c1:	das    
  4268c2:	dec    edi
  4268c3:	lods   eax,DWORD PTR ds:[esi]
  4268c4:	push   edx
  4268c5:	and    al,0xd2
  4268c7:	and    bh,BYTE PTR [edi]
  4268c9:	mov    ebx,0x103579f7
  4268ce:	cmp    DWORD PTR [esi],0x64c9e424
  4268d4:	jge    0x426905
  4268d6:	dec    edi
  4268d7:	aas    
  4268d8:	cmc    
  4268d9:	and    BYTE PTR [edx+0x1a],0xb7
  4268dd:	sub    ch,BYTE PTR [ebx-0x73]
  4268e0:	sub    DWORD PTR [edx+0x71],eax
  4268e3:	retf   0x3c46
  4268e6:	rcl    DWORD PTR [ebx-0x66dc04c4],0xfb
  4268ed:	neg    DWORD PTR [eax]
  4268ef:	test   DWORD PTR [edi+ebp*2+0x8716060],ebx
  4268f6:	push   edi
  4268f7:	mov    bl,0xee
  4268f9:	cmp    bl,ch
  4268fb:	adc    DWORD PTR fs:[eax+eiz*8],edi
  4268ff:	fwait
  426900:	scas   eax,DWORD PTR es:[edi]
  426901:	and    eax,0xc69fa863
  426906:	push   ds
  426907:	push   0x63a2fb74
  42690c:	aam    0x94
  42690e:	sub    al,0x88
  426910:	pop    esp
  426911:	mov    ebx,0xb8731b32
  426916:	scas   eax,DWORD PTR es:[edi]
  426917:	push   ecx
  426918:	mov    dh,0x67
  42691a:	mov    eax,ds:0xcdf45794
  42691f:	jae    0x4268c8
  426921:	lock sbb eax,0xf6ccaeca
  426927:	imul   BYTE PTR [esi+edi*8]
  42692a:	test   al,0x90
  42692c:	dec    esi
  42692d:	std    
  42692e:	daa    
  42692f:	xor    esi,ecx
  426931:	xchg   edi,eax
  426932:	ret    0x478d
  426935:	ret    0x5ad9
  426938:	hlt    
  426939:	mov    ecx,0x78098acb
  42693e:	addr16 (bad) 
  426940:	out    dx,al
  426941:	dec    eax
  426942:	jl     0x426920
  426944:	std    
  426945:	push   ebp
  426946:	mov    bh,0x35
  426948:	inc    ecx
  426949:	mov    ds:0x86b69503,eax
  42694e:	adc    ebx,DWORD PTR [ebx+0x5e]
  426951:	xchg   DWORD PTR [ebp+0x5cd36038],esp
  426957:	xor    al,0xf3
  426959:	sub    DWORD PTR [esi],eax
  42695b:	sub    BYTE PTR [esi+ebx*8-0x3403bc89],ch
  426962:	mov    esi,0xa91e06ce
  426967:	ins    DWORD PTR es:[edi],dx
  426968:	lock shr BYTE PTR [edi],cl
  42696b:	scas   eax,DWORD PTR es:[edi]
  42696c:	jle    0x42695b
  42696e:	scas   eax,DWORD PTR es:[edi]
  42696f:	pop    es
  426970:	(bad)  
  426971:	jbe    0x4269f1
  426973:	adc    BYTE PTR [ebx+0x444475d9],cl
  426979:	sbb    eax,0x72396146
  42697e:	jns    0x426911
  426980:	ja     0x4269cc
  426982:	dec    ecx
  426983:	mov    edi,ss
  426985:	lods   al,BYTE PTR ds:[esi]
  426986:	sub    ecx,DWORD PTR [ebx+0x4f]
  426989:	mov    ch,0x3c
  42698b:	sbb    BYTE PTR [ebx],dl
  42698d:	test   BYTE PTR ds:0x60861ce2,0xd8
  426994:	int    0xf0
  426996:	add    BYTE PTR [eax],dl
  426998:	sub    ch,BYTE PTR [edx]
  42699a:	mov    ds:0x781fc179,al
  42699f:	mov    edi,0xff3fbd4
  4269a4:	xchg   edx,eax
  4269a6:	add    eax,0xb4b87edb
  4269ab:	addr16 mov ecx,0x571f745d
  4269b1:	aaa    
  4269b2:	add    DWORD PTR [ebp-0x3c4342c6],ebx
  4269b8:	cmp    DWORD PTR [esp+esi*8+0x3e063cbe],esi
  4269bf:	jmp    0x426a2a
  4269c1:	cmp    al,0xa1
  4269c3:	xchg   ah,cl
  4269c5:	ins    DWORD PTR es:[edi],dx
  4269c6:	xchg   ebx,eax
  4269c7:	fucom  st(2)
  4269c9:	js     0x4269fb
  4269cb:	add    BYTE PTR [edi+0x0],cl
	...
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    al,BYTE PTR [ecx+ecx*8+0x5e]
  4269e9:	jns    0x426a08
  4269eb:	loopne 0x4269ee
  4269ed:	add    bl,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [esi],bl
  4269f3:	or     BYTE PTR [ebp-0x1c148f97],0x6d
  4269fa:	sbb    BYTE PTR [esi],0x41
  4269fd:	mov    ?,WORD PTR [eax-0x37754501]
  426a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a04:	fisubr DWORD PTR [edi+0x2f]
  426a07:	cdq    
  426a08:	or     ch,ch
  426a0a:	pop    DWORD PTR [esi+eiz*8+0x20]
  426a0e:	and    cl,BYTE PTR cs:[edx+0x3e6c3c33]
  426a15:	or     al,0xbb
  426a17:	dec    ebp
  426a18:	push   0xffffffc4
  426a1a:	(bad)  
  426a1b:	cdq    
  426a1c:	jmp    0x6676:0x22450443
  426a23:	ret    
  426a24:	les    eax,FWORD PTR [edx-0x70]
  426a27:	int    0x4
  426a29:	mov    esi,eax
  426a2b:	test   DWORD PTR [ebp+esi*4+0x3ca0c6a5],esi
  426a32:	cmp    eax,0xf94f139e
  426a37:	sbb    bl,BYTE PTR [eax-0x39]
  426a3a:	or     BYTE PTR [edi-0x2e32e694],bh
  426a40:	mov    bl,BYTE PTR [ebx]
  426a42:	enter  0x1c0e,0x2
  426a46:	jge    0x426ab0
  426a48:	push   ebx
  426a49:	cmp    edx,DWORD PTR [esp+ebp*1]
  426a4c:	mov    edx,0xf9fd1dc4
  426a51:	je     0x426a58
  426a53:	inc    ebp
  426a54:	mov    WORD PTR [edi],cs
  426a56:	sahf   
  426a57:	addr16 pop ss
  426a59:	push   ebp
  426a5a:	mov    edx,DWORD PTR [edi]
  426a5c:	cmp    ch,BYTE PTR cs:[ebx]
  426a5f:	lds    ecx,FWORD PTR ds:0xb7888b16
  426a65:	push   ss
  426a66:	jp     0x426a5e
  426a68:	imul   DWORD PTR [ebp+0x48eb2aa]
  426a6e:	and    bh,BYTE PTR [edx]
  426a70:	xor    esi,DWORD PTR [eax-0x73]
  426a73:	sbb    DWORD PTR [eax],eax
  426a75:	call   DWORD PTR [edx+0x36513a8b]
  426a7b:	mov    WORD PTR ds:0x196b1dcb,?
  426a81:	daa    
  426a82:	stos   BYTE PTR es:[edi],al
  426a83:	out    dx,al
  426a84:	into   
  426a85:	js     0x426a58
  426a87:	aaa    
  426a88:	lock lock scas eax,DWORD PTR es:[edi]
  426a8b:	inc    ebp
  426a8c:	aam    0xd2
  426a8e:	xchg   edx,eax
  426a8f:	int3   
  426a90:	retf   0x516b
  426a93:	inc    esi
  426a94:	sbb    dl,bl
  426a96:	xchg   edx,eax
  426a97:	mov    ah,0xc8
  426a99:	lea    esi,[edi]
  426a9b:	rol    DWORD PTR [ecx-0x65],cl
  426a9e:	pop    es
  426a9f:	(bad)  
  426aa1:	fimul  WORD PTR [eax]
  426aa3:	and    dh,BYTE PTR [edx+0x41]
  426aa6:	mov    BYTE PTR [edi],0x4f
  426aa9:	inc    ebx
  426aaa:	sbb    ah,ah
  426aac:	jb     0x426afd
  426aae:	into   
  426aaf:	cmp    BYTE PTR [edi-0xc226bed],0xd6
  426ab6:	xchg   esp,eax
  426ab7:	in     eax,dx
  426ab8:	and    esi,DWORD PTR [edx]
  426aba:	xchg   edi,eax
  426abb:	into   
  426abc:	mov    edi,0xd61e9715
  426ac1:	xor    ebx,DWORD PTR [edi+0x721b5b38]
  426ac7:	call   0x82b21777
  426acc:	pusha  
  426acd:	and    esp,eax
  426acf:	mov    BYTE PTR [ecx],dl
  426ad1:	or     eax,0xc3a4fb
  426ad6:	stos   BYTE PTR es:[edi],al
  426ad7:	inc    sp
  426ad9:	(bad)  
  426ada:	adc    cl,dh
  426adc:	dec    edi
  426add:	aas    
  426ade:	ins    BYTE PTR es:[edi],dx
  426adf:	sub    eax,0xe7dacb21
  426ae4:	cmp    ah,BYTE PTR [eax]
  426ae6:	lods   eax,DWORD PTR ds:[esi]
  426ae7:	xor    WORD PTR [esp+ecx*4],0xb58c
  426aed:	imul   ebp,edi,0xb2ce7a1e
  426af3:	add    al,0x2e
  426af5:	xchg   esp,eax
  426af6:	sbb    al,0x21
  426af8:	sti    
  426af9:	stos   DWORD PTR es:[edi],eax
  426afa:	jo     0x426b30
  426afc:	mov    dh,0x46
  426afe:	inc    edi
  426aff:	xor    eax,0x4f9f141a
  426b04:	push   cs
  426b05:	push   ebx
  426b06:	mov    ebp,0x2103943b
  426b0b:	push   es
  426b0c:	icebp  
  426b0d:	add    DWORD PTR [esi-0x74],edi
  426b10:	mov    ah,0xf1
  426b12:	addr16 inc ebx
  426b14:	dec    DWORD PTR [edx-0x3d7ca320]
  426b1a:	jecxz  0x426b79
  426b1c:	nop
  426b1d:	mov    bh,0xe2
  426b1f:	dec    BYTE PTR [ecx-0x61]
  426b22:	scas   eax,DWORD PTR es:[edi]
  426b23:	adc    eax,0x937ec934
  426b28:	frstor [ebp+0x528074d4]
  426b2e:	fistp  DWORD PTR [ebx+0x6aca7524]
  426b34:	les    esp,FWORD PTR [ebx]
  426b36:	ja     0x426b79
  426b38:	das    
  426b39:	adc    BYTE PTR [esi-0x78],0xa2
  426b3d:	cmp    BYTE PTR [edi+0x54e49916],dh
  426b43:	cmp    BYTE PTR [ebx+0x1f],bh
  426b46:	sbb    ch,ch
  426b48:	nop
  426b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b4b:	ds dec edi
  426b4d:	dec    ebp
  426b4e:	xor    BYTE PTR ds:0xf18da7fe,dh
  426b54:	je     0x426bc6
  426b56:	dec    edx
  426b57:	aaa    
  426b58:	aam    0xd0
  426b5a:	xchg   ebx,eax
  426b5b:	adc    al,0xb4
  426b5d:	cld    
  426b5e:	call   edi
  426b60:	call   0xa2474f78
  426b65:	adc    edi,DWORD PTR [ebx+ecx*4+0x42f679ee]
  426b6c:	sbb    al,0xef
  426b6e:	pop    esp
  426b6f:	test   eax,0x1e06fec
  426b74:	xor    DWORD PTR [esp+ebp*2],eax
  426b77:	outs   dx,DWORD PTR ds:[esi]
  426b78:	inc    DWORD PTR [eax+0xf]
  426b7b:	jae    0x426b3b
  426b7d:	js     0x426b78
  426b7f:	or     ecx,esi
  426b81:	xchg   DWORD PTR [ebp-0x42],edi
  426b84:	in     eax,dx
  426b85:	mov    al,0xf
  426b87:	(bad)  
  426b89:	fisubr WORD PTR [edx+0x54]
  426b8c:	pop    edi
  426b8d:	(bad)  
  426b8e:	fs sbb dl,bh
  426b91:	jg     0x426c00
  426b93:	pushf  
  426b94:	mov    fs,WORD PTR [ecx-0x66]
  426b97:	add    BYTE PTR [esi],bl
  426b99:	inc    ebp
  426b9a:	push   eax
  426b9b:	cmp    bl,BYTE PTR [edx-0x3c]
  426b9e:	pop    esi
  426b9f:	loop   0x426b33
  426ba1:	jecxz  0x426b3b
  426ba3:	mov    ch,0x2b
  426ba5:	jo     0x426bc4
  426ba7:	mov    al,ds:0x2dfb6fd1
  426bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bad:	and    DWORD PTR [ebx+0x5d65500a],esi
  426bb3:	adc    eax,0x3477f088
  426bb8:	hlt    
  426bb9:	cwde   
  426bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bbb:	mov    dh,0x6b
  426bbd:	push   ds
  426bbe:	ret    0xa3f2
  426bc1:	dec    ebx
  426bc2:	add    al,0x61
  426bc4:	and    cl,BYTE PTR [edx]
  426bc6:	in     al,0xd0
  426bc8:	test   DWORD PTR [ebx-0x20e8853],0xeb39e09b
  426bd2:	mov    edi,ebx
  426bd4:	mov    bh,0x3
  426bd6:	mov    esp,edi
  426bd8:	jns    0x426bb7
  426bda:	or     al,0x64
  426bdc:	mov    ebx,0xd5c9d8b6
  426be1:	xchg   ebp,eax
  426be2:	inc    ebp
  426be3:	push   edi
  426be4:	inc    ebx
  426be5:	and    DWORD PTR [eax+0x1772bfc3],esp
  426beb:	popa   
  426bec:	pop    esp
	...
  426bf9:	add    BYTE PTR [eax-0x56],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x42fe433f,al
  426c07:	lds    ebx,FWORD PTR [eax]
  426c09:	mov    ebx,0x1e218
  426c0e:	sti    
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [ebx-0x43],dl
  426c14:	push   esp
  426c15:	lods   al,BYTE PTR ds:[esi]
  426c16:	scas   al,BYTE PTR es:[edi]
  426c17:	fs dec esi
  426c19:	stos   DWORD PTR es:[edi],eax
  426c1a:	fsub   DWORD PTR [edx-0x3b]
  426c1d:	xchg   DWORD PTR [ecx-0x2b3871ed],ebp
  426c23:	lods   eax,DWORD PTR ds:[esi]
  426c24:	mov    al,ds:0xbdb85810
  426c29:	jecxz  0x426c28
  426c2b:	das    
  426c2c:	adc    cl,BYTE PTR [ebx+eiz*8+0x300f4c65]
  426c33:	stc    
  426c34:	pop    edx
  426c35:	mov    ds:0x90e7a6a5,al
  426c3a:	sub    cl,dh
  426c3c:	jl     0x426c3b
  426c3e:	daa    
  426c3f:	push   ebx
  426c40:	(bad)  
  426c41:	(bad)  [ebx+0x7dde2b6b]
  426c47:	ror    DWORD PTR [esi-0x25],0xd2
  426c4b:	imul   ebx,esi,0x1c
  426c4e:	adc    al,BYTE PTR [ecx-0x45b007f0]
  426c54:	mov    ah,0x67
  426c56:	or     ecx,esi
  426c58:	push   eax
  426c59:	add    eax,ebp
  426c5b:	int    0x47
  426c5d:	pushf  
  426c5e:	mov    bl,0xc7
  426c60:	retf   0xcc4d
  426c63:	into   
  426c64:	es and eax,0x9ebe97ba
  426c6a:	sahf   
  426c6b:	xor    edi,DWORD PTR [esi+eiz*8]
  426c6e:	cmp    eax,0xbc60de70
  426c73:	fmul   st(0),st
  426c75:	xchg   DWORD PTR [eax],esp
  426c77:	mov    ds:0x3cfb1881,eax
  426c7c:	mov    edi,0xf7548c3b
  426c81:	xchg   ebp,eax
  426c82:	arpl   WORD PTR [esi],si
  426c84:	out    dx,al
  426c85:	cli    
  426c86:	pop    edi
  426c87:	pop    eax
  426c88:	mov    esp,0x56f221b
  426c8d:	pop    edi
  426c8e:	hlt    
  426c8f:	out    0x62,al
  426c91:	repz fist DWORD PTR [edx]
  426c94:	lea    ecx,[edx-0x3160b91]
  426c9a:	mov    eax,0x7618e248
  426c9f:	pop    esi
  426ca0:	or     ebp,edi
  426ca2:	push   0xc70fce1e
  426ca7:	out    dx,eax
  426ca8:	push   cs
  426ca9:	cmp    BYTE PTR [edi+0x72],ch
  426cac:	pop    edx
  426cad:	push   edx
  426cae:	push   0x14
  426cb0:	pop    ebp
  426cb1:	mov    BYTE PTR [edx+ebp*4-0x56c6a009],cl
  426cb8:	push   edx
  426cb9:	hlt    
  426cba:	mov    DWORD PTR [esi],eax
  426cbc:	lods   eax,DWORD PTR ds:[esi]
  426cbd:	adc    bl,BYTE PTR [ebx+ecx*1+0x5eb5ef17]
  426cc4:	pop    esi
  426cc5:	test   ch,ah
  426cc7:	test   eax,0xd278f200
  426ccc:	cmp    ebx,eax
  426cce:	xor    ebx,DWORD PTR [ecx+0x41]
  426cd1:	mov    esi,0xcdb41459
  426cd6:	aam    0x90
  426cd8:	sbb    DWORD PTR [eax],eax
  426cda:	cmp    DWORD PTR [eax],esp
  426cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cdd:	rcl    BYTE PTR [edi+eiz*8-0x22],0x1d
  426ce2:	mov    bl,cl
  426ce4:	repz jecxz 0x426d31
  426ce7:	or     BYTE PTR [esi-0x11b9cc48],al
  426ced:	inc    ebp
  426cee:	jae    0x426cb1
  426cf0:	aaa    
  426cf1:	ret    
  426cf2:	jbe    0x426d31
  426cf4:	add    edx,ebp
  426cf6:	mov    eax,0x5dba15fd
  426cfb:	shl    dh,0x6c
  426cfe:	imul   edx,DWORD PTR [ebp+0x763ccc98],0xd9c18905
  426d08:	pop    eax
  426d09:	test   al,0xaa
  426d0b:	mov    edi,0x52bad584
  426d10:	arpl   WORD PTR [eax+0x5b],di
  426d13:	cmp    eax,0x7d37c86b
  426d18:	bound  ebp,QWORD PTR [edx+0x26]
  426d1b:	mov    edi,0x9dfa7daf
  426d20:	aaa    
  426d21:	pop    esp
  426d22:	add    ecx,ebx
  426d24:	test   eax,0x87e9eef
  426d29:	jb     0x426cf6
  426d2b:	iret   
  426d2c:	dec    esi
  426d2d:	test   BYTE PTR [esi+0x3e73488f],al
  426d33:	mov    bl,0x59
  426d35:	pop    ebx
  426d36:	cmp    DWORD PTR [esp+edi*2+0x13],ebx
  426d3a:	cmp    eax,0x7ab01371
  426d3f:	adc    BYTE PTR [ebx-0x13],bl
  426d42:	fidivr DWORD PTR [esi]
  426d44:	pop    ebx
  426d45:	and    dl,dh
  426d47:	lahf   
  426d48:	cmp    eax,0xeef8ac0
  426d4d:	clc    
  426d4e:	mov    BYTE PTR [ebx+0x3b09d884],ch
  426d54:	cmp    cl,dl
  426d56:	mov    ds:0x91c5b469,eax
  426d5b:	cmp    cl,BYTE PTR [eax]
  426d5d:	popa   
  426d5e:	mov    dl,0xdb
  426d60:	dec    esp
  426d61:	(bad)  
  426d62:	fucomp st(4)
  426d64:	out    0x48,al
  426d66:	data16 out 0xc7,al
  426d69:	fbld   TBYTE PTR [esi]
  426d6b:	cmp    edx,DWORD PTR [edx-0xc]
  426d6e:	fild   QWORD PTR [esi+edi*8-0x68]
  426d72:	adc    ch,BYTE PTR [ebx-0x1d86d501]
  426d78:	out    dx,al
  426d79:	cmp    eax,DWORD PTR [ebp-0x74]
  426d7c:	fwait
  426d7d:	jne    0x426dbe
  426d7f:	ds mov ecx,0x57f2dd41
  426d85:	cmp    eax,0x5ae9c8f8
  426d8a:	mov    al,ds:0xbc846281
  426d8f:	dec    ebx
  426d90:	push   ds
  426d91:	mov    bh,0x2d
  426d93:	(bad)  
  426d95:	les    esp,FWORD PTR [ebp-0x7f]
  426d98:	retf   0x6dd4
  426d9b:	mov    bh,0xa4
  426d9d:	mov    ah,0x13
  426d9f:	loop   0x426d8f
  426da1:	xor    ebx,esp
  426da3:	or     al,0x23
  426da5:	mov    eax,0xe4bf107
  426daa:	push   ecx
  426dab:	sub    DWORD PTR [ecx],esi
  426dad:	stos   BYTE PTR es:[edi],al
  426dae:	stos   BYTE PTR es:[edi],al
  426daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426db0:	and    BYTE PTR [ecx],bl
  426db2:	and    cl,0x60
  426db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426db6:	push   edi
  426db7:	inc    DWORD PTR [esi-0x16]
  426dba:	je     0x426dd8
  426dbc:	adc    cl,BYTE PTR [esi+ebp*2]
  426dbf:	repz fdivr DWORD PTR [esi]
  426dc2:	xchg   DWORD PTR [ecx+0x45fc56a8],ebx
  426dc8:	sub    ch,bl
  426dca:	stos   DWORD PTR es:[edi],eax
  426dcb:	mov    cl,0xda
  426dcd:	sbb    al,0xa6
  426dcf:	xor    ah,BYTE PTR [eax+0x3e]
  426dd2:	jne    0x426dc8
  426dd4:	sbb    eax,0xb8e930ef
  426dd9:	sbb    DWORD PTR [ebp+0x8],ebp
  426ddc:	add    BYTE PTR [esi+0x5ce621cc],al
  426de2:	adc    bl,BYTE PTR [ecx-0x78]
  426de5:	sbb    al,0xf8
  426de7:	and    al,0x67
  426de9:	xor    eax,ebx
  426deb:	dec    esi
  426dec:	adc    eax,0x16d95900
  426df1:	jne    0x426e09
  426df3:	(bad)
  426df6:	clc    
  426df7:	jge    0x426e72
  426df9:	mov    edi,0xeeea4a12
  426dfe:	fs dec ebp
  426e00:	or     DWORD PTR [edx],ecx
  426e02:	(bad)  
  426e03:	push   esp
  426e04:	and    ecx,DWORD PTR [esp+ebp*2+0x56b3dea5]
  426e0b:	jle    0x426e53
	...
  426e19:	add    BYTE PTR [esi-0x28ab281c],dh
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	xor    esp,DWORD PTR [ecx-0x26]
  426e29:	adc    BYTE PTR [ebx],0xe4
  426e2c:	add    DWORD PTR [eax],eax
  426e2e:	sti    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [edx-0x58],ch
  426e34:	cmp    BYTE PTR [ecx+edi*2-0x236ea16a],cl
  426e3b:	repnz test al,0x98
  426e3e:	das    
  426e3f:	je     0x426e0f
  426e41:	call   0x743c473e
  426e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e47:	mov    ebp,0xa2689bb4
  426e4c:	mov    edi,0xb2a3a02f
  426e51:	ror    DWORD PTR [edi],0xf1
  426e54:	(bad)  
  426e55:	xchg   esp,eax
  426e56:	adc    ch,bh
  426e58:	bnd ret 
  426e5a:	dec    ebx
  426e5b:	sub    al,bh
  426e5d:	dec    esi
  426e5e:	iret   
  426e5f:	pop    ss
  426e60:	mov    ebp,0xb02feece
  426e65:	outs   dx,DWORD PTR ds:[esi]
  426e66:	mul    cl
  426e68:	repz hlt 
  426e6a:	pop    eax
  426e6b:	add    bl,BYTE PTR ds:0x2a283bf7
  426e71:	dec    edi
  426e72:	leave  
  426e73:	push   ebx
  426e74:	or     BYTE PTR ds:0xe1803e5f,dl
  426e7a:	daa    
  426e7b:	call   0xcda0f19b
  426e80:	ds inc esi
  426e82:	cmp    esi,esi
  426e84:	ror    DWORD PTR [ecx],1
  426e86:	mov    esi,0xf93953da
  426e8b:	xor    al,0x2d
  426e8d:	cld    
  426e8e:	popf   
  426e8f:	sub    eax,0x68514684
  426e94:	sbb    cl,BYTE PTR [edx]
  426e96:	jle    0x426f11
  426e98:	out    dx,eax
  426e99:	add    dh,bh
  426e9b:	xor    BYTE PTR [ebx],bh
  426e9d:	jecxz  0x426ee7
  426e9f:	inc    ebp
  426ea0:	ret    0xa1b9
  426ea3:	pushf  
  426ea4:	scas   al,BYTE PTR es:[edi]
  426ea5:	jnp    0x426ec5
  426ea7:	cmc    
  426ea8:	inc    esi
  426ea9:	adc    DWORD PTR [ecx-0x3f],0x1c
  426ead:	inc    edx
  426eae:	iret   
  426eaf:	cs aaa 
  426eb1:	call   0x90ed:0x8dd0c4cc
  426eb8:	xor    ch,BYTE PTR [ebx]
  426eba:	adc    al,0x4b
  426ebc:	clc    
  426ebd:	iret   
  426ebe:	into   
  426ebf:	inc    edx
  426ec0:	jge    0x426e8c
  426ec2:	push   edx
  426ec3:	scas   eax,DWORD PTR es:[edi]
  426ec4:	sub    esi,ebx
  426ec6:	retf   
  426ec7:	iret   
  426ec8:	data16 in al,0xa1
  426ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ecc:	int    0x47
  426ece:	lahf   
  426ecf:	jecxz  0x426f34
  426ed1:	fst    DWORD PTR [esi]
  426ed3:	clc    
  426ed4:	gs ins BYTE PTR es:[edi],dx
  426ed6:	xor    eax,0xea8d4e90
  426edb:	pop    ss
  426edc:	mov    ecx,0x17c5e5e5
  426ee1:	imul   edx,ebx,0xfffffff5
  426ee4:	jmp    0x426ee5
  426ee6:	xchg   BYTE PTR [ecx+0x6ccd8fb8],cl
  426eec:	adc    DWORD PTR [eax-0x20],ecx
  426eef:	jmp    0x426ecb
  426ef1:	ja     0x426f4b
  426ef3:	int    0xcf
  426ef5:	imul   eax,DWORD PTR [edx+0x1b28a37b],0xc8751ee3
  426eff:	(bad)  
  426f00:	pushf  
  426f01:	inc    esp
  426f02:	pop    ds
  426f03:	cmp    eax,0xd8da3308
  426f08:	cmp    BYTE PTR [ecx-0x74],ah
  426f0b:	cmc    
  426f0c:	mov    ecx,0x6287c027
  426f11:	sahf   
  426f12:	in     eax,dx
  426f13:	cdq    
  426f14:	sbb    esi,DWORD PTR [ebp-0x11]
  426f17:	ret    
  426f18:	fwait
  426f19:	inc    ecx
  426f1a:	fisubr WORD PTR [eax+eax*1-0x3a]
  426f1e:	pop    edi
  426f1f:	mov    ah,0x1a
  426f21:	cmp    eax,0xe9e92e93
  426f26:	rol    BYTE PTR [edi],1
  426f28:	pop    esp
  426f29:	jmp    0x8b56:0xef33b6d9
  426f30:	sahf   
  426f31:	mov    esi,0x8eb71cc9
  426f36:	mov    edi,DWORD PTR [edi+ebx*2]
  426f39:	les    edi,FWORD PTR [ebp+0x669781dd]
  426f3f:	inc    ebp
  426f40:	mov    DWORD PTR [edx+eax*8+0x350f0fa0],0x9d8b9682
  426f4b:	mov    esi,0xcec8d272
  426f50:	cmp    dh,BYTE PTR [edx+0x39]
  426f53:	xchg   ebp,eax
  426f54:	rcr    DWORD PTR [esi],0xf3
  426f57:	addr16 mov ecx,0x4ae4d423
  426f5d:	es in  eax,0x34
  426f60:	fld    QWORD PTR [eax]
  426f62:	xor    edi,ebx
  426f64:	clc    
  426f65:	sahf   
  426f66:	les    ecx,FWORD PTR [ecx+ebp*1+0xc]
  426f6a:	fcmove st,st(5)
  426f6c:	outs   dx,DWORD PTR ds:[esi]
  426f6d:	inc    eax
  426f6e:	adc    BYTE PTR [edi],0x8b
  426f71:	inc    eax
  426f72:	jbe    0x426efe
  426f74:	dec    edx
  426f75:	popa   
  426f76:	push   0x8
  426f78:	jmp    0xe6d391c4
  426f7d:	push   ecx
  426f7e:	clc    
  426f7f:	push   edi
  426f80:	ss mov esp,0x40eed8fe
  426f86:	and    al,0x93
  426f88:	les    eax,FWORD PTR [ebp-0x4a]
  426f8b:	ror    DWORD PTR [eax+ebp*1+0xa],cl
  426f8f:	dec    eax
  426f90:	je     0x426f6c
  426f92:	ret    
  426f93:	add    eax,0x1468f062
  426f98:	pop    edi
  426f99:	push   ecx
  426f9a:	xor    bl,BYTE PTR [ebp-0x7ccfd105]
  426fa0:	iret   
  426fa1:	fbstp  TBYTE PTR [ecx]
  426fa3:	and    BYTE PTR [eax],0x8b
  426fa6:	push   eax
  426fa7:	sub    ecx,ebp
  426fa9:	adc    eax,0xc6eae4ea
  426fae:	(bad)  [eax-0x1e]
  426fb1:	outs   dx,BYTE PTR ds:[esi]
  426fb2:	and    eax,edi
  426fb4:	mov    esi,esi
  426fb6:	and    esi,DWORD PTR [edx]
  426fb8:	jno    0x427035
  426fba:	popa   
  426fbb:	xchg   ebp,eax
  426fbc:	mov    al,BYTE PTR [esi+0x7a]
  426fbf:	push   ss
  426fc0:	lock into 
  426fc2:	jmp    0xd5c0:0x1e27f4d9
  426fc9:	stc    
  426fca:	gs sbb al,0x30
  426fcd:	mov    ds:0x5f2497cb,al
  426fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd3:	push   edx
  426fd4:	sub    al,0x39
  426fd6:	ja     0x426fdc
  426fd8:	into   
  426fd9:	sub    DWORD PTR [eax+0x76],0xcf9ff78
  426fe0:	xchg   BYTE PTR [eax],cl
  426fe2:	jg     0x42705e
  426fe4:	pusha  
  426fe5:	int    0x17
  426fe7:	loope  0x426f89
  426fe9:	xchg   DWORD PTR [ecx],ecx
  426feb:	jmp    0x4f93:0xec29b87
  426ff2:	inc    edx
  426ff3:	or     al,0xf0
  426ff5:	mov    dl,0x78
  426ff7:	(bad)  
  426ff8:	icebp  
  426ff9:	adc    eax,0xe519b04
  426ffe:	mov    ch,dh
  427000:	aad    0x54
  427002:	or     al,0xf2
  427004:	pusha  
  427005:	(bad)  
  427007:	(bad)  
  427008:	jmp    0x51f05c57
  42700d:	retf   0xd0e1
  427010:	fstp   st(1)
  427012:	push   esi
  427013:	aad    0x75
  427015:	ret    
  427016:	in     al,0xf2
  427018:	adc    ch,BYTE PTR [ebp-0x3d]
  42701b:	dec    edx
  42701c:	jmp    0x3dbec67a
  427021:	inc    DWORD PTR [edx+edi*4+0xb6527a9]
  427028:	stos   BYTE PTR es:[edi],al
  427029:	xchg   edi,eax
  42702a:	pop    es
  42702b:	fmul   DWORD PTR [ecx]
	...
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x7f5bc2eb]
  427047:	jle    0x42703f
  427049:	in     al,0xe
  42704b:	out    0x1,al
  42704d:	add    bl,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [esi+0x369eed89],ch
  427057:	gs into 
  427059:	dec    edi
  42705a:	cmp    al,0x18
  42705c:	xchg   ecx,eax
  42705d:	imul   ecx,DWORD PTR [edx-0x4fcce2de],0x35
  427064:	call   0xa600ac5c
  427069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42706a:	mov    eax,ds:0x367840e5
  42706f:	jae    0x4270b6
  427071:	call   0xb2c2c713
  427076:	lods   eax,DWORD PTR ds:[esi]
  427077:	push   es
  427078:	call   0xff7c:0xc64d9a80
  42707f:	adc    al,0x1b
  427081:	and    DWORD PTR [edx+eax*8-0x63],eax
  427085:	call   0xad65:0x449663c6
  42708c:	pop    es
  42708d:	add    bh,BYTE PTR [ebx-0x1f]
  427090:	ret    
  427091:	mov    esi,0x47b31d7c
  427096:	or     DWORD PTR [ecx-0x2a9e7c0d],ebx
  42709c:	and    DWORD PTR [ecx],ecx
  42709e:	out    0xdd,al
  4270a0:	jbe    0x427071
  4270a2:	pusha  
  4270a3:	repz pop ds
  4270a5:	pop    eax
  4270a6:	xor    eax,0x617b1cfa
  4270ab:	in     al,dx
  4270ac:	sbb    al,0x7a
  4270ae:	sahf   
  4270af:	(bad)  
  4270b0:	fwait
  4270b1:	jp     0x42703f
  4270b3:	cmp    eax,0x64209796
  4270b8:	ret    0x5033
  4270bb:	and    DWORD PTR [edx],esi
  4270bd:	sub    eax,0x5e33ab86
  4270c2:	jmp    0x4270fb
  4270c4:	test   BYTE PTR [ebp-0x636e389d],al
  4270ca:	les    edi,FWORD PTR [ebx]
  4270cc:	stos   DWORD PTR es:[edi],eax
  4270cd:	ins    DWORD PTR es:[edi],dx
  4270ce:	mov    dh,0x8d
  4270d0:	adc    al,BYTE PTR [edi+eax*4-0x42]
  4270d4:	fstp   TBYTE PTR ds:0xc0515ad4
  4270da:	mov    dh,0xa4
  4270dc:	push   0x286ffa
  4270e1:	and    DWORD PTR [edi],eax
  4270e3:	jge    0x4270dd
  4270e5:	inc    ebp
  4270e6:	int3   
  4270e7:	es xchg ebp,eax
  4270e9:	(bad)  
  4270eb:	nop
  4270ec:	dec    edi
  4270ed:	je     0x427104
  4270ef:	hlt    
  4270f0:	xchg   edx,eax
  4270f1:	rol    DWORD PTR [edi],1
  4270f3:	in     eax,0x98
  4270f5:	xchg   edi,eax
  4270f6:	dec    eax
  4270f7:	xor    ebx,esp
  4270f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270fa:	aad    0xb5
  4270fc:	dec    edx
  4270fd:	out    dx,al
  4270fe:	cld    
  4270ff:	sub    eax,0xbf2c0c54
  427104:	xor    ecx,ebp
  427106:	push   0x9e9dea16
  42710b:	je     0x4270e1
  42710d:	and    cl,bh
  42710f:	pop    edx
  427110:	scas   al,BYTE PTR es:[edi]
  427111:	mov    eax,DWORD PTR [esi]
  427113:	iret   
  427114:	shl    DWORD PTR [ebx],1
  427116:	add    al,0x15
  427118:	ins    DWORD PTR es:[edi],dx
  427119:	and    esi,edx
  42711b:	test   eax,0x45eb17ef
  427120:	inc    ecx
  427121:	add    esi,DWORD PTR [ebp-0x23a02e67]
  427127:	ins    DWORD PTR es:[edi],dx
  427128:	inc    esp
  427129:	(bad)  
  42712a:	cli    
  42712b:	mul    cl
  42712d:	mov    al,ds:0x28128b6c
  427132:	inc    edi
  427133:	inc    esi
  427134:	sub    eax,0xde64f8c4
  427139:	cmp    cl,BYTE PTR [eax+0x35f9eccf]
  42713f:	sbb    al,0x70
  427141:	cmp    DWORD PTR ds:0x9a50253e,0x40
  427148:	aad    0x5f
  42714a:	dec    edi
  42714b:	xchg   ebp,eax
  42714c:	xchg   edx,eax
  42714d:	das    
  42714e:	clc    
  42714f:	(bad)  [ecx-0x2551129e]
  427155:	adc    bl,bh
  427157:	and    edx,DWORD PTR ds:0xb5c836af
  42715d:	lods   eax,DWORD PTR ds:[esi]
  42715e:	outs   dx,BYTE PTR ds:[esi]
  42715f:	imul   bp,dx,0xffc8
  427163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427164:	gs ins DWORD PTR es:[edi],dx
  427166:	pop    edx
  427167:	imul   esi,DWORD PTR [ebx+0x5e98025b],0x777126d1
  427171:	in     al,0x57
  427173:	loop   0x4270fa
  427175:	out    0xa2,al
  427177:	mov    bh,0xbf
  427179:	mov    ebp,0x5b59f7e3
  42717e:	stos   BYTE PTR es:[edi],al
  42717f:	inc    ecx
  427180:	jmp    0x8d72757
  427185:	imul   ecx,ebx,0x3c10b2a2
  42718b:	(bad)  
  42718c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42718d:	stc    
  42718e:	pop    ds
  42718f:	pop    esi
  427190:	add    eax,DWORD PTR es:[eax]
  427193:	les    ecx,FWORD PTR [esi]
  427195:	in     al,dx
  427196:	sbb    BYTE PTR [edi-0x776cd232],ah
  42719c:	test   ecx,esp
  42719e:	arpl   WORD PTR [edx-0x17afc100],ax
  4271a4:	outs   dx,BYTE PTR ds:[esi]
  4271a5:	xchg   DWORD PTR [edx+0x540c302a],esp
  4271ab:	je     0x427176
  4271ad:	inc    edi
  4271ae:	(bad)  
  4271af:	ins    DWORD PTR es:[edi],dx
  4271b0:	jae    0x427220
  4271b2:	addr16 in al,0x6e
  4271b5:	mov    esi,DWORD PTR [edx-0x6f]
  4271b8:	aad    0x97
  4271ba:	lahf   
  4271bb:	popa   
  4271bc:	or     esp,DWORD PTR [edx+0x48]
  4271bf:	or     eax,0x7fed0025
  4271c4:	fyl2xp1 
  4271c6:	daa    
  4271c7:	shl    DWORD PTR ds:0x8248d840,1
  4271cd:	or     dl,BYTE PTR [eax+edx*1]
  4271d0:	rep lods al,BYTE PTR ds:[esi]
  4271d2:	adc    al,0x6a
  4271d4:	shl    edi,cl
  4271d6:	lds    esi,FWORD PTR [eax]
  4271d8:	in     al,dx
  4271d9:	addr16 int 0xf
  4271dc:	dec    ebp
  4271dd:	jge    0x4271c0
  4271df:	scas   al,BYTE PTR es:[edi]
  4271e0:	adc    DWORD PTR [eax+0x78],ebp
  4271e3:	cmp    esi,DWORD PTR [edi]
  4271e5:	pushf  
  4271e6:	mov    dh,0x47
  4271e8:	push   0xffffffe6
  4271ea:	mov    BYTE PTR [esp],al
  4271ed:	mov    eax,ebx
  4271ef:	and    DWORD PTR [ebx],eax
  4271f1:	mov    ebx,0x906252bf
  4271f6:	xor    ecx,DWORD PTR [esi+0x48]
  4271f9:	call   0xd6c6:0x8e5544f
  427200:	(bad)  [edi+0x525f0321]
  427206:	(bad)  
  427207:	stos   DWORD PTR es:[edi],eax
  427208:	jecxz  0x427254
  42720a:	xchg   BYTE PTR [ebx+edi*2+0x5cbe021b],bl
  427211:	iret   
  427212:	shl    BYTE PTR [eax],cl
  427214:	pop    ebp
  427215:	leave  
  427216:	push   0x6e5376ec
  42721b:	aas    
  42721c:	jge    0x4271d4
  42721e:	and    al,0xb
  427220:	cmp    cl,BYTE PTR [ecx]
  427222:	scas   al,BYTE PTR es:[edi]
  427223:	xor    BYTE PTR [esi],bl
  427225:	mov    edi,0xd579f9d8
  42722a:	bsf    ebp,eax
  42722d:	push   0xd092dc3a
  427232:	pop    DWORD PTR [esi]
  427234:	cmp    bl,BYTE PTR [ecx+0x62]
  427237:	fcmovne st,st(3)
  427239:	and    BYTE PTR [edx],bh
  42723b:	jmp    0x2d9d:0x5ce8d85e
  427242:	add    al,0x88
  427244:	imul   ebp,DWORD PTR [edi+0x30],0x3c
  427248:	fild   QWORD PTR [ebp+0x7d]
  42724b:	icebp  
  42724c:	mov    dl,0x0
	...
  42725a:	iret   
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x8db02077
  427267:	mov    dl,0x8d
  427269:	call   0x445a77
  42726e:	sti    
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    BYTE PTR [edi-0x11],bh
  427274:	loope  0x42721a
  427276:	leave  
  427277:	int3   
  427278:	loop   0x4272e1
  42727a:	lods   eax,DWORD PTR fs:[esi]
  42727c:	ror    DWORD PTR [edi],cl
  42727e:	jmp    0x2c94:0xf8003809
  427285:	and    eax,DWORD PTR [eax-0x21]
  427288:	or     esp,esp
  42728a:	mov    esi,0xe317bcc7
  42728f:	in     eax,dx
  427290:	xor    al,0x5c
  427292:	lods   eax,DWORD PTR ds:[esi]
  427293:	sub    esp,DWORD PTR [ebx+0x4c]
  427296:	or     BYTE PTR [ebx-0x50],al
  427299:	or     DWORD PTR [ebp+0x52cf3db4],0x4b66aa50
  4272a3:	sbb    al,0xdf
  4272a5:	xchg   esi,eax
  4272a6:	sbb    ebp,DWORD PTR [edx-0x4]
  4272a9:	or     edx,DWORD PTR [edx]
  4272ab:	sbb    BYTE PTR [edx-0x64],dl
  4272ae:	xor    dh,BYTE PTR [ebx]
  4272b0:	xchg   ebp,eax
  4272b1:	xor    BYTE PTR [edi],bl
  4272b3:	jnp    0x4272d3
  4272b5:	repz lds ecx,FWORD PTR [ecx-0x6bedbef5]
  4272bc:	xor    eax,DWORD PTR [ecx+0x3]
  4272bf:	mov    edx,0x2362a830
  4272c4:	loop   0x427335
  4272c6:	jnp    0x4272a1
  4272c8:	add    eax,0x27148ab
  4272cd:	dec    esi
  4272ce:	push   esi
  4272cf:	sub    BYTE PTR ds:0xb151d42d,cl
  4272d5:	fidiv  DWORD PTR [edx-0x484c9c00]
  4272db:	dec    eax
  4272dc:	sbb    al,dh
  4272de:	add    BYTE PTR [edx-0x7b6d88d9],bl
  4272e4:	leave  
  4272e5:	fadd   QWORD PTR [ecx]
  4272e7:	adc    BYTE PTR [ecx+0x27],bh
  4272ea:	push   ds
  4272eb:	push   ebx
  4272ec:	and    BYTE PTR [ecx+0x76],ch
  4272ef:	pop    DWORD PTR ds:0x30d3ee58
  4272f5:	and    bh,dh
  4272f7:	outs   dx,DWORD PTR ds:[esi]
  4272f8:	and    DWORD PTR [ebp+0x4f5cc8c2],0xc0ac2c48
  427302:	loop   0x4272d3
  427304:	(bad)  
  427305:	out    0xec,eax
  427307:	daa    
  427308:	clc    
  427309:	scas   al,BYTE PTR es:[edi]
  42730a:	add    DWORD PTR [esi],esi
  42730c:	call   0x4ec6:0xeee2f514
  427313:	fstp   DWORD PTR [edx]
  427315:	(bad)  
  427318:	cld    
  427319:	sbb    edx,DWORD PTR [ebx+eiz*4+0x8a1fe45]
  427320:	popf   
  427321:	mov    WORD PTR [edi],ds
  427323:	sub    ebp,DWORD PTR [eax+eiz*2+0x49]
  427327:	pop    ecx
  427328:	mov    ds:0x66532b45,al
  42732d:	shr    BYTE PTR [edx],0xf5
  427330:	aam    0x5c
  427332:	inc    eax
  427333:	fdivr  DWORD PTR [ebx-0x66]
  427336:	out    0xd0,eax
  427338:	aaa    
  427339:	push   ebp
  42733a:	mov    al,0xee
  42733c:	inc    edi
  42733d:	jns    0x427335
  42733f:	(bad)  
  427340:	sti    
  427341:	les    ebx,FWORD PTR [edx]
  427343:	sub    DWORD PTR [ebx],ebp
  427345:	jmp    0x60a4:0xcc2426f5
  42734c:	sti    
  42734d:	mov    bh,0xef
  42734f:	jmp    0x42737f
  427351:	test   DWORD PTR [eax],0x101c1bc5
  427357:	add    BYTE PTR [ebx-0x4c58bda4],0xe1
  42735e:	into   
  42735f:	out    0xd5,eax
  427361:	rcl    DWORD PTR [ebp+0x6b],0xd9
  427365:	and    bl,ch
  427367:	xlat   BYTE PTR ds:[ebx]
  427368:	pop    eax
  427369:	lods   al,BYTE PTR ds:[esi]
  42736a:	push   ebp
  42736b:	js     0x427338
  42736d:	mul    DWORD PTR [ebp+0x6f]
  427370:	nop
  427371:	add    bh,ah
  427373:	into   
  427374:	cmp    BYTE PTR [edx],al
  427376:	dec    esp
  427377:	add    DWORD PTR [esi+ebx*2-0x45],eax
  42737b:	mov    al,0x9f
  42737d:	or     eax,DWORD PTR [edx+0x76548c10]
  427383:	mov    eax,0xbd8a27fe
  427388:	loop   0x42734b
  42738a:	push   0x31
  42738c:	mov    ebp,0xd055ab34
  427391:	xchg   edi,eax
  427392:	jns    0x4273b1
  427394:	enter  0x76dd,0xf3
  427398:	(bad)  
  427399:	pop    ss
  42739a:	(bad)  
  42739b:	and    BYTE PTR [ecx-0x5b],dl
  42739e:	adc    al,0x64
  4273a0:	jns    0x42735b
  4273a2:	fdiv   QWORD PTR [esi+0x24]
  4273a5:	mov    dh,0xe8
  4273a7:	adc    bl,cl
  4273a9:	and    al,0x49
  4273ab:	pusha  
  4273ac:	out    0x9c,eax
  4273ae:	scas   al,BYTE PTR es:[edi]
  4273af:	jp     0x42733d
  4273b1:	add    esi,DWORD PTR [ebp-0x24]
  4273b4:	push   esi
  4273b5:	dec    ebp
  4273b6:	lods   eax,DWORD PTR ds:[esi]
  4273b7:	imul   esi,DWORD PTR [ebp+0x64],0x57f6307a
  4273be:	xor    DWORD PTR [ecx-0x80],esp
  4273c1:	xchg   edx,eax
  4273c2:	push   eax
  4273c3:	cdq    
  4273c4:	fnsave [edi*2-0x76284f8e]
  4273cb:	je     0x42738f
  4273cd:	sti    
  4273ce:	ret    0x6946
  4273d1:	ins    DWORD PTR es:[edi],dx
  4273d2:	popf   
  4273d3:	mov    ebx,0x4edbe95d
  4273d8:	dec    ebx
  4273d9:	xchg   esi,eax
  4273da:	adc    esp,DWORD PTR [esp+edi*8-0x78]
  4273de:	pop    ebx
  4273df:	dec    eax
  4273e0:	pop    ds
  4273e1:	aas    
  4273e2:	adc    eax,0x53aaef62
  4273e7:	fwait
  4273e8:	sub    BYTE PTR [ebx],bl
  4273ea:	shr    BYTE PTR [ecx+0x523cebda],0x1b
  4273f1:	imul   edi,DWORD PTR [ecx-0x66],0x316a234d
  4273f8:	scas   eax,DWORD PTR es:[edi]
  4273f9:	adc    DWORD PTR [edi-0x7ab83fdb],0x8
  427400:	out    dx,eax
  427401:	in     al,dx
  427402:	gs in  eax,dx
  427404:	pop    esi
  427405:	pushf  
  427406:	jnp    0x4273c4
  427408:	cs inc esi
  42740a:	in     eax,dx
  42740b:	dec    edi
  42740c:	xchg   esi,eax
  42740d:	add    eax,0x2587f4d8
  427412:	or     eax,0x5454cdfe
  427417:	jnp    0x427438
  427419:	imul   ebx,esp,0xffffff98
  42741c:	mov    ebx,0x313d6362
  427421:	enter  0x7e19,0x10
  427425:	inc    edi
  427426:	gs popf 
  427428:	or     BYTE PTR [edx],dh
  42742a:	or     al,0x9c
  42742c:	out    dx,eax
  42742d:	push   esp
  42742e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42742f:	stc    
  427430:	loopne 0x427413
  427432:	push   cs
  427433:	adc    ebx,DWORD PTR [ebp+0x47]
  427436:	pop    esi
  427437:	dec    edi
  427438:	jl     0x4274a7
  42743a:	mov    cl,0x7c
  42743c:	(bad)  
  42743d:	call   0xa06300c0
  427442:	pop    es
  427443:	cs sbb al,0xec
  427446:	xor    esi,DWORD PTR [ebx]
  427448:	add    eax,0x4b6df0d1
  42744d:	enter  0xa359,0x6f
  427451:	mov    ah,0x7c
  427453:	mov    esp,0xb02f1b7c
  427458:	dec    ebp
  427459:	test   DWORD PTR [ecx+eiz*4-0x80],ebx
  42745d:	and    BYTE PTR [eax+0x538af5ac],ah
  427463:	lahf   
  427464:	push   cs
  427465:	adc    dh,ch
  427467:	addr16 daa 
  427469:	lds    esi,FWORD PTR [edx]
  42746b:	jbe    0x4274bd
	...
  427479:	add    BYTE PTR [eax+0x23],ch
  42747c:	sub    eax,0x7b1e6f1e
  427481:	ja     0x4274f2
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	jecxz  0x427412
  427488:	add    esp,edx
  42748a:	add    al,0xea
  42748c:	add    DWORD PTR [eax],eax
  42748e:	sti    
  42748f:	add    DWORD PTR [eax],eax
  427491:	add    BYTE PTR [edx+0x641f9d5b],ah
  427497:	call   0x4b47a28d
  42749c:	sbb    al,dh
  42749e:	(bad)  
  4274a0:	in     eax,0x6b
  4274a2:	and    ebp,esi
  4274a4:	push   ds
  4274a5:	or     eax,esp
  4274a7:	jo     0x427512
  4274a9:	mov    dh,0x96
  4274ab:	jecxz  0x427480
  4274ad:	cmp    eax,0xdc3a3907
  4274b2:	sub    eax,0x56c1dae0
  4274b7:	adc    ah,BYTE PTR [edi+0x6f5d2c88]
  4274bd:	adc    bl,dl
  4274bf:	pop    ss
  4274c0:	mov    eax,ds:0xcbda8825
  4274c5:	stos   DWORD PTR es:[edi],eax
  4274c6:	add    BYTE PTR [edi+0x758631af],bh
  4274cc:	in     eax,0x7d
  4274ce:	lods   eax,DWORD PTR ds:[esi]
  4274cf:	inc    edi
  4274d0:	fidiv  DWORD PTR [ecx+esi*2-0x1baf890e]
  4274d7:	adc    al,0x74
  4274d9:	sbb    al,0x2e
  4274db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274dc:	lahf   
  4274dd:	pop    ebx
  4274de:	sub    edi,DWORD PTR [ebx-0x53]
  4274e1:	call   0xad41e4f6
  4274e6:	rol    DWORD PTR [ecx-0x2a17f011],0x67
  4274ed:	push   esi
  4274ee:	sbb    ebx,DWORD PTR [edx-0x3c]
  4274f1:	mov    ebx,0xdc7c6401
  4274f6:	push   0xffffff85
  4274f8:	xchg   BYTE PTR [eax-0x7c],bl
  4274fb:	xor    ebx,DWORD PTR ds:0x7de97b64
  427501:	popa   
  427502:	loope  0x4274da
  427504:	mov    cl,0x3a
  427506:	gs mov esp,0x11d10783
  42750c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42750d:	sbb    ch,ah
  42750f:	and    BYTE PTR [eax+0x1b],al
  427512:	loopne 0x4274e6
  427514:	sbb    al,dl
  427516:	lea    ebp,[esp+esi*1+0x76]
  42751a:	out    dx,eax
  42751b:	cmp    al,0x20
  42751d:	out    0xfd,eax
  42751f:	into   
  427520:	pop    ss
  427521:	imul   edx,DWORD PTR [ecx],0x4da08d2c
  427527:	or     BYTE PTR [esi-0x42e19c53],0xcd
  42752e:	rcl    DWORD PTR [ecx+eax*4-0x4755f0b0],cl
  427535:	add    ah,BYTE PTR [edi-0x531f3a7a]
  42753b:	cmp    eax,0x4d286385
  427540:	clc    
  427541:	out    dx,eax
  427542:	push   ds
  427543:	aad    0xda
  427545:	(bad)  
  427546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427547:	adc    ecx,DWORD PTR [edx-0x15]
  42754a:	xor    DWORD PTR [ebx],0xf4af6507
  427550:	dec    ebp
  427551:	jp     0x427563
  427553:	push   0x24e18bbc
  427558:	xchg   edi,eax
  427559:	dec    esp
  42755a:	push   edi
  42755b:	dec    ebx
  42755c:	adc    al,0x1d
  42755e:	jb     0x4274f3
  427560:	mov    edi,0xfe6386e9
  427565:	sbb    DWORD PTR [edi-0x617e322e],esp
  42756b:	imul   esp,DWORD PTR [ecx+0x2b],0x391d884d
  427572:	mov    eax,0x5b758387
  427577:	(bad)  
  427578:	push   0x9
  42757a:	lods   eax,DWORD PTR ds:[esi]
  42757b:	jp     0x427533
  42757d:	or     al,0x77
  42757f:	mov    BYTE PTR [edx-0x7f],ch
  427582:	cli    
  427583:	arpl   WORD PTR [edx],si
  427585:	test   eax,0x834e4b4c
  42758a:	psllw  mm5,QWORD PTR [eax+edi*8+0x6548d21a]
  427592:	or     ebx,ecx
  427594:	aaa    
  427595:	stos   DWORD PTR es:[edi],eax
  427596:	sub    ebp,DWORD PTR [ebx+0x48]
  427599:	ror    BYTE PTR [eax+0x23961a69],cl
  42759f:	in     al,dx
  4275a0:	push   eax
  4275a1:	mov    dh,0x52
  4275a3:	cwde   
  4275a4:	cli    
  4275a5:	loopne 0x4275a4
  4275a7:	imul   ebx,DWORD PTR [eax],0x1750a711
  4275ad:	and    DWORD PTR [edi-0x79],edi
  4275b0:	cmp    DWORD PTR [ecx-0x6f],ecx
  4275b3:	in     eax,0xe
  4275b5:	sahf   
  4275b6:	pop    ebx
  4275b7:	xchg   esp,eax
  4275b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275b9:	add    al,0xd2
  4275bb:	enter  0xcfd,0xf7
  4275bf:	sbb    dl,BYTE PTR [edx]
  4275c1:	loopne 0x427590
  4275c3:	aaa    
  4275c4:	pop    eax
  4275c5:	fidiv  DWORD PTR [ecx-0x1f]
  4275c8:	mov    esp,0xa70fb1f4
  4275cd:	int    0xe7
  4275cf:	push   0xe5d42ff8
  4275d4:	pop    ebp
  4275d5:	cld    
  4275d6:	stc    
  4275d7:	ins    DWORD PTR es:[edi],dx
  4275d8:	rep outs dx,BYTE PTR ds:[esi]
  4275da:	sahf   
  4275db:	cmp    BYTE PTR fs:[edx],bh
  4275de:	cmp    DWORD PTR [ecx-0x7a],ebp
  4275e1:	js     0x427660
  4275e3:	mov    bl,0xad
  4275e5:	adc    bh,BYTE PTR [edx-0x5e440db]
  4275eb:	jbe    0x427595
  4275ed:	out    0x8b,al
  4275ef:	repz cmp esp,ecx
  4275f2:	inc    ecx
  4275f3:	push   ecx
  4275f4:	and    ecx,DWORD PTR [esi]
  4275f6:	ror    BYTE PTR [ecx+0x2d3772e],1
  4275fc:	add    ah,BYTE PTR [edi-0x72ca0216]
  427602:	pop    edx
  427603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427604:	push   ss
  427605:	mul    BYTE PTR [eax+0x58]
  427608:	or     cl,BYTE PTR [ebp+0x7f808652]
  42760e:	stos   DWORD PTR es:[edi],eax
  42760f:	fwait
  427610:	(bad)  
  427611:	jle    0x427664
  427613:	repz rcr BYTE PTR [eax+esi*1-0x328db919],0xf
  42761c:	mov    bl,0xa7
  42761e:	adc    BYTE PTR [ebp-0x73],al
  427621:	(bad)  
  427622:	pusha  
  427623:	fldz   
  427625:	shl    ebp,1
  427627:	add    esi,DWORD PTR [eax-0x41]
  42762a:	pop    esp
  42762b:	clc    
  42762c:	push   ecx
  42762d:	out    0xbd,eax
  42762f:	lahf   
  427630:	lods   al,BYTE PTR ds:[esi]
  427631:	mov    edi,0xa3ebee58
  427636:	retf   0x42c2
  427639:	mov    ds:0xdd65f967,al
  42763e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42763f:	bound  esp,QWORD PTR [esi]
  427641:	loop   0x4275fb
  427643:	ins    BYTE PTR es:[edi],dx
  427644:	jle    0x427644
  427646:	add    ecx,DWORD PTR [ebp+0x7fc41fc]
  42764c:	rcl    DWORD PTR [ebx-0x79a34c26],cl
  427652:	sub    eax,esp
  427654:	sahf   
  427655:	xchg   DWORD PTR [esi+ebp*2-0x24],eax
  427659:	stos   DWORD PTR es:[edi],eax
  42765a:	in     eax,0xd0
  42765c:	pusha  
  42765d:	shl    DWORD PTR [esp+eiz*2],0x45
  427661:	push   ds
  427662:	out    0x6f,eax
  427664:	test   eax,0xaf72480
  427669:	dec    ecx
  42766a:	div    DWORD PTR [ebx+0x5685e1a5]
  427670:	push   ss
  427671:	inc    ebp
  427672:	ret    
  427673:	rcr    DWORD PTR [ecx+0x6c],cl
  427676:	jge    0x4276a8
  427678:	ror    DWORD PTR [edi-0x15],1
  42767b:	dec    ebp
  42767c:	push   0xffffff9d
  42767e:	jge    0x427675
  427680:	push   esp
  427681:	ficomp WORD PTR [esi]
  427683:	ffreep st(6)
  427685:	jmp    0xd680699d
  42768a:	loop   0x4276c1
  42768c:	outs   dx,DWORD PTR ds:[esi]
	...
  427699:	add    BYTE PTR [ecx-0x6600738],bl
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	mov    ds:0xff8e3f58,al
  4276ab:	jmp    0x4276ae
  4276ad:	add    bl,bh
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR [edx+0x61622f90],ch
  4276b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276b8:	sbb    dh,BYTE PTR [edi-0xd8ba9ab]
  4276be:	aad    0x4a
  4276c0:	fst    DWORD PTR [ebp+0x4a]
  4276c3:	daa    
  4276c4:	mov    dl,0xd4
  4276c6:	lahf   
  4276c7:	jl     0x4276f2
  4276c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276ca:	mov    bh,0xc3
  4276cc:	fnsave [eax-0x4df130f1]
  4276d2:	arpl   WORD PTR [edi+ebp*1+0x49835657],cx
  4276d9:	mov    ebx,0x6cdef321
  4276de:	jbe    0x42769d
  4276e0:	jle    0x427671
  4276e2:	jno    0x4276dd
  4276e4:	mov    ah,0xf5
  4276e6:	inc    ecx
  4276e7:	mov    ebx,0x27e32a1c
  4276ec:	outs   dx,DWORD PTR ds:[esi]
  4276ed:	js     0x427725
  4276ef:	push   cs
  4276f0:	ds pop eax
  4276f2:	cmp    ch,BYTE PTR [eax-0x6a]
  4276f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276f6:	sub    cl,BYTE PTR [ecx-0x9]
  4276f9:	shl    DWORD PTR [edi+eiz*4+0x6c],1
  4276fd:	sar    DWORD PTR [edx+0x7d0b2c3b],0x9e
  427704:	push   edx
  427705:	cwde   
  427706:	jnp    0x427753
  427708:	jns    0x4276d4
  42770a:	or     al,0x91
  42770c:	lea    ebx,[esi+ebp*4]
  42770f:	cmp    ecx,edi
  427711:	adc    al,0x23
  427713:	rol    DWORD PTR [eax+0x3313b5d3],0xb0
  42771a:	cmp    al,0x15
  42771c:	sar    BYTE PTR [edx],0x39
  42771f:	aam    0xb5
  427721:	fisub  DWORD PTR [ebp-0x5b27bcaa]
  427727:	dec    edx
  427728:	xchg   ebp,eax
  427729:	bound  ebp,QWORD PTR [edi+0x27]
  42772c:	pop    ebp
  42772d:	fwait
  42772e:	(bad)  
  42772f:	sbb    eax,0xcf3ab125
  427734:	inc    edi
  427735:	ror    al,0xd
  427738:	ds icebp 
  42773a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  42773c:	xchg   esi,eax
  42773d:	and    BYTE PTR [esi-0x387118e7],cl
  427743:	popa   
  427744:	adc    BYTE PTR [bx],al
  427747:	test   BYTE PTR [ebx+0x60276dbb],ah
  42774d:	pusha  
  42774e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42774f:	xchg   BYTE PTR [esi+0x6c47bbaa],cl
  427755:	sbb    eax,0x8a34aad0
  42775a:	inc    esp
  42775b:	ret    0x9edc
  42775e:	add    DWORD PTR [eax-0xdd7afa8],edx
  427764:	sub    DWORD PTR es:[ecx-0x57],esi
  427768:	test   ebp,ebx
  42776a:	adc    ebp,DWORD PTR [ecx-0x12d0a687]
  427770:	sub    DWORD PTR [esi-0x5c6d4e12],ecx
  427776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427777:	fcomp  QWORD PTR [ebp+0x25e467ec]
  42777d:	xchg   ebp,eax
  42777e:	inc    esi
  42777f:	inc    edx
  427780:	sbb    ecx,ebp
  427782:	lods   al,BYTE PTR ds:[esi]
  427783:	repnz inc eax
  427785:	ins    BYTE PTR es:[edi],dx
  427786:	in     eax,0x4e
  427788:	cmp    ebx,DWORD PTR [esi]
  42778a:	xor    ecx,DWORD PTR [eax+0x43]
  42778d:	std    
  42778e:	rcl    dh,1
  427790:	cmp    eax,0xc236b228
  427795:	mov    BYTE PTR [ebp-0x75],cl
  427798:	add    eax,0x52e809a9
  42779d:	mov    edx,fs
  42779f:	ss and bl,al
  4277a2:	or     edi,DWORD PTR [ebp-0x1216da36]
  4277a8:	jle    0x42775e
  4277aa:	popa   
  4277ab:	push   0xffffffb7
  4277ad:	jbe    0x4277f5
  4277af:	nop
  4277b0:	scas   eax,DWORD PTR es:[edi]
  4277b1:	fdivr  QWORD PTR [ecx+0x4fdfbaa2]
  4277b7:	loope  0x427803
  4277b9:	enter  0xcce0,0x30
  4277bd:	pop    ecx
  4277be:	dec    ebx
  4277bf:	pop    ecx
  4277c0:	jne    0x4277b6
  4277c2:	push   ss
  4277c3:	add    BYTE PTR [ebp+0x7c],0x74
  4277c7:	aaa    
  4277c8:	sbb    BYTE PTR [ecx],ah
  4277ca:	cmp    edx,edx
  4277cc:	cmp    ecx,DWORD PTR [eax-0x39b05338]
  4277d2:	stc    
  4277d3:	int    0x3e
  4277d5:	mov    eax,ds:0xbc6772c3
  4277da:	xchg   ebx,eax
  4277db:	pop    ds
  4277dc:	xlat   BYTE PTR ds:[ebx]
  4277dd:	(bad)  
  4277de:	mov    edx,0x4b328a32
  4277e3:	call   0x9e5d:0xcdc2136
  4277ea:	hlt    
  4277eb:	cmp    cl,ch
  4277ed:	xchg   ebp,eax
  4277ee:	int    0x57
  4277f0:	(bad)  
  4277f1:	fisubr WORD PTR [edx+eiz*4+0x27]
  4277f5:	add    al,0x18
  4277f7:	test   DWORD PTR [ecx-0x7424807f],esp
  4277fd:	pop    es
  4277fe:	cld    
  4277ff:	cmp    ax,0x8ac2
  427803:	xchg   ecx,eax
  427804:	fwait
  427805:	add    BYTE PTR [edx+0x85736ca],ah
  42780b:	jge    0x42781e
  42780d:	sahf   
  42780e:	push   0x4230032b
  427813:	sub    bh,BYTE PTR [edx+0x5f]
  427816:	inc    ecx
  427817:	adc    ah,BYTE PTR [esi+0x5c]
  42781a:	loope  0x4277f7
  42781c:	cmp    DWORD PTR [esi-0x47],esp
  42781f:	jno    0x42783a
  427821:	xor    ah,al
  427823:	mov    dh,BYTE PTR [edx]
  427825:	ds or  al,0x5e
  427828:	(bad)
  42782b:	add    al,0x2c
  42782d:	dec    cl
  42782f:	jnp    0x4277c3
  427831:	xor    al,0xd6
  427833:	test   eax,0xa3f92f02
  427838:	xchg   edx,eax
  427839:	loope  0x427869
  42783b:	pushf  
  42783c:	fwait
  42783d:	nop
  42783e:	xchg   ebp,eax
  42783f:	out    dx,eax
  427840:	test   DWORD PTR [ecx+0x6e],ebx
  427843:	xor    dl,BYTE PTR [ebx-0x71]
  427846:	sub    al,0xd2
  427848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427849:	mov    ebp,0xe1286405
  42784e:	sbb    bl,BYTE PTR [eax]
  427850:	push   0x9d748bc6
  427855:	out    0xc2,al
  427857:	push   ebx
  427858:	lods   eax,DWORD PTR ds:[esi]
  427859:	or     DWORD PTR [edx],0x3c83c6b4
  42785f:	les    ebp,FWORD PTR [esi]
  427861:	add    al,0xf8
  427863:	shl    DWORD PTR [ebp+0x446a80cd],0x93
  42786a:	mov    ah,0x21
  42786c:	push   0x9414c893
  427871:	iret   
  427872:	mov    dl,0x31
  427874:	inc    edi
  427875:	dec    ebx
  427876:	int    0xc9
  427878:	adc    DWORD PTR [ebx],0x42
  42787b:	scas   eax,DWORD PTR es:[edi]
  42787c:	mov    esi,0x96374b30
  427881:	mov    ch,0x91
  427883:	(bad)
  427886:	outs   dx,BYTE PTR ds:[esi]
  427887:	cwde   
  427888:	cs pop ebx
  42788a:	jnp    0x4278a0
  42788c:	inc    edx
  42788d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42788e:	lods   eax,DWORD PTR ds:[esi]
  42788f:	pop    ds
  427890:	repnz cdq 
  427892:	(bad)  
  427893:	(bad)  
  427894:	outs   dx,BYTE PTR ds:[esi]
  427895:	xor    esp,DWORD PTR [edx-0x26f15552]
  42789b:	mov    ebx,0xe7b13a0c
  4278a0:	or     BYTE PTR [esp+eiz*4+0x4a],0x49
  4278a5:	retf   
  4278a6:	or     DWORD PTR [eax-0x21],ebp
  4278a9:	push   0xffffff94
  4278ab:	int    0xed
	...
  4278b9:	add    BYTE PTR [ecx+0xa],bh
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	jns    0x4278c6
  4278c8:	mov    ebx,0x1edfa79
  4278cd:	add    bl,bh
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    al,dl
  4278d3:	sbb    ebx,DWORD PTR [eax+0x33]
  4278d6:	pop    ss
  4278d7:	dec    edi
  4278d8:	adc    eax,0x8981bb50
  4278dd:	inc    esi
  4278de:	scas   eax,DWORD PTR es:[edi]
  4278df:	cld    
  4278e0:	sub    DWORD PTR es:[ebx-0x15b62d8a],eax
  4278e7:	or     eax,DWORD PTR [ebx-0x7f29c82]
  4278ed:	scas   eax,DWORD PTR es:[edi]
  4278ee:	arpl   sp,bp
  4278f0:	cli    
  4278f1:	inc    edx
  4278f2:	jp     0x427952
  4278f4:	call   0x73bedded
  4278f9:	jl     0x4278fc
  4278fb:	ret    0x95cc
  4278fe:	pop    edi
  4278ff:	(bad)  [ecx+0x66]
  427902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427903:	cdq    
  427904:	jnp    0x4278b0
  427906:	jmp    0x4278d2
  427908:	mov    WORD PTR [edi-0x25],gs
  42790b:	in     al,0xe2
  42790d:	jl     0x4278cb
  42790f:	outs   dx,BYTE PTR ds:[esi]
  427910:	retf   
  427911:	or     al,0xb1
  427913:	imul   ecx,esp,0x6f5b34ec
  427919:	test   al,0x7a
  42791b:	in     al,dx
  42791c:	rcr    ah,0x4
  42791f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427920:	and    BYTE PTR [edx+ecx*4+0xb],dh
  427924:	lods   eax,DWORD PTR ds:[esi]
  427925:	mov    ah,0xa5
  427927:	push   ds
  427928:	inc    ecx
  427929:	cmp    BYTE PTR [eax+ebx*2-0x21138979],0xc3
  427931:	cmp    BYTE PTR [esi],0xe9
  427934:	pop    edi
  427935:	pop    esi
  427936:	cmp    DWORD PTR [esp+edi*1+0x556a1698],esp
  42793d:	je     0x42791e
  42793f:	push   eax
  427940:	jge    0x427934
  427942:	push   esi
  427943:	or     ecx,ecx
  427945:	or     bh,BYTE PTR [ebx]
  427947:	lahf   
  427948:	fadd   QWORD PTR [eax]
  42794a:	fwait
  42794b:	jae    0x4278f4
  42794d:	icebp  
  42794e:	rcr    BYTE PTR fs:[edx-0x7c7d54b2],0xcc
  427956:	pop    ecx
  427957:	inc    ebp
  427958:	adc    edx,edx
  42795a:	aas    
  42795b:	mov    dl,bl
  42795d:	fisubr DWORD PTR [eax+edi*8+0x529df4c0]
  427964:	addr16 xchg edx,eax
  427966:	mov    eax,0xd78a9ae5
  42796b:	stos   DWORD PTR es:[edi],eax
  42796c:	mov    ah,BYTE PTR [ebp-0x39]
  42796f:	setle  BYTE PTR [esi+0x13bd1940]
  427976:	dec    esi
  427977:	fcomi  st,st(7)
  427979:	inc    ecx
  42797a:	pop    eax
  42797b:	adc    al,0x48
  42797d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42797e:	clc    
  42797f:	add    al,0x10
  427981:	test   al,0xa0
  427983:	loop   0x4279f3
  427985:	in     eax,dx
  427986:	push   ebx
  427987:	in     eax,dx
  427988:	jle    0x4279c2
  42798a:	(bad)  
  42798b:	jbe    0x4279cc
  42798d:	xor    al,0xdb
  42798f:	jl     0x427980
  427991:	ret    0x75ce
  427994:	mov    eax,ds:0x459dbd65
  427999:	add    bh,BYTE PTR [ebp+0x4871a7f5]
  42799f:	rol    DWORD PTR [eax],cl
  4279a1:	fist   DWORD PTR [ebx+0x5fbbcadf]
  4279a7:	mov    al,ds:0xa4d940d0
  4279ac:	pop    esi
  4279ad:	push   0xf9f5c3c4
  4279b2:	mov    bh,0x6a
  4279b4:	add    ebx,DWORD PTR [edx-0x5a]
  4279b7:	lahf   
  4279b8:	sub    eax,ebx
  4279ba:	lahf   
  4279bb:	add    al,0x77
  4279bd:	out    0x2d,al
  4279bf:	(bad)  
  4279c1:	cwde   
  4279c2:	and    DWORD PTR [ebx+ebp*2+0x782e200c],edx
  4279c9:	std    
  4279ca:	inc    edx
  4279cb:	ins    DWORD PTR es:[edi],dx
  4279cc:	out    dx,al
  4279cd:	and    ah,BYTE PTR [eax+0x1f902e5f]
  4279d3:	mov    esi,0xf3a71f62
  4279d8:	stos   DWORD PTR es:[edi],eax
  4279d9:	fcmovne st,st(7)
  4279db:	mov    edx,0xd9b1c862
  4279e0:	mov    bl,0x11
  4279e2:	ficom  WORD PTR [eax+0x125612de]
  4279e8:	loopne 0x4279d3
  4279ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279eb:	call   0xa3fbad30
  4279f0:	dec    esi
  4279f1:	sti    
  4279f2:	inc    ecx
  4279f3:	sti    
  4279f4:	inc    ebx
  4279f5:	ds pop eax
  4279f7:	xor    ah,BYTE PTR [edx-0x16]
  4279fa:	mov    edi,DWORD PTR [edx-0x60]
  4279fd:	data16 sbb BYTE PTR [esi],cl
  427a00:	dec    esp
  427a01:	rcl    DWORD PTR [eax+0x5c],1
  427a04:	cvtpi2ps xmm1,QWORD PTR [edi-0x34e319ef]
  427a0b:	out    0x2c,al
  427a0d:	jb     0x4279ec
  427a0f:	pop    ds
  427a10:	test   BYTE PTR ds:0xa54432e7,bl
  427a16:	jbe    0x427a4f
  427a18:	xor    al,0xf1
  427a1a:	(bad)  
  427a1b:	outs   dx,BYTE PTR ds:[esi]
  427a1c:	add    edx,DWORD PTR [edx+0x63c35cba]
  427a22:	sub    al,0xb5
  427a24:	dec    esp
  427a25:	mov    ds:0x5f7e5f87,al
  427a2a:	in     al,0x8
  427a2c:	loop   0x427a8d
  427a2e:	sar    BYTE PTR fs:[edx-0x17],cl
  427a32:	rcl    BYTE PTR [esi+0x50f8ec59],1
  427a38:	ret    0xefa4
  427a3b:	cmp    DWORD PTR [ebx+0x61cf5fc3],esi
  427a41:	icebp  
  427a42:	repnz dec ebp
  427a44:	pop    es
  427a45:	xlat   BYTE PTR es:[ebx]
  427a47:	xor    ebp,DWORD PTR [edi]
  427a49:	test   edx,ecx
  427a4b:	dec    esp
  427a4c:	lods   al,BYTE PTR ds:[esi]
  427a4d:	sub    DWORD PTR [edx-0x3b],ebp
  427a50:	and    eax,0xd5be476a
  427a55:	std    
  427a56:	adc    al,0x75
  427a58:	add    al,0x4f
  427a5a:	xor    al,0x47
  427a5c:	adc    DWORD PTR [ebx-0x7353e622],edi
  427a62:	dec    ecx
  427a63:	inc    ebp
  427a64:	inc    ebx
  427a65:	or     DWORD PTR [ecx+0x34],ebp
  427a68:	loopne 0x427a18
  427a6a:	int    0x5c
  427a6c:	leave  
  427a6d:	xchg   edi,eax
  427a6e:	bound  ecx,QWORD PTR [eax]
  427a70:	sti    
  427a71:	adc    al,0x30
  427a73:	cwde   
  427a74:	dec    edx
  427a75:	mov    esp,0x27022991
  427a7a:	stc    
  427a7b:	mov    ebx,0x5eefc1c0
  427a80:	je     0x427a1f
  427a82:	mov    ah,0x95
  427a84:	mov    ds:0x5c8a4114,al
  427a89:	inc    edx
  427a8a:	sub    cl,BYTE PTR [ecx+0x5ca460c8]
  427a90:	sub    BYTE PTR [ebx],0x66
  427a93:	(bad)  
  427a94:	fs jp  0x427a96
  427a97:	push   es
  427a98:	mov    ?,WORD PTR [ebp+0x4ed13dce]
  427a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a9f:	mov    ds:0xac9c870a,al
  427aa4:	in     eax,dx
  427aa5:	or     al,0xcc
  427aa7:	les    eax,FWORD PTR [edi]
  427aa9:	in     al,0x59
  427aab:	pop    esp
  427aac:	mov    BYTE PTR [ebx-0x58],ch
  427aaf:	ret    
  427ab0:	(bad)  
  427ab1:	(bad)  
  427ab3:	(bad)  
  427ab4:	sub    al,0xf2
  427ab6:	sub    ecx,DWORD PTR [esi]
  427ab8:	mov    dl,0x2f
  427aba:	cmp    eax,0xb91ef48
  427abf:	add    eax,0x9ea3afb5
  427ac4:	pop    edx
  427ac5:	into   
  427ac6:	mov    ebp,ecx
  427ac8:	fs cmp eax,0xace5ec
	...
  427ada:	pop    ecx
  427adb:	add    eax,ecx
  427add:	inc    esp
  427ade:	fcmovnb st,st(6)
  427ae0:	fstp   QWORD PTR [edi]
  427ae2:	arpl   WORD PTR [edi-0xac0b294],di
  427ae8:	test   esi,edx
  427aea:	cmc    
  427aeb:	out    dx,eax
  427aec:	add    DWORD PTR [eax],eax
  427aee:	sti    
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR [esp+edi*1-0x6c],dh
  427af5:	jo     0x427ac9
  427af7:	or     ecx,DWORD PTR [edx]
  427af9:	in     al,0xa
  427afb:	aam    0x6e
  427afd:	in     al,0x8e
  427aff:	mov    edi,0x5cfa3cbd
  427b04:	pop    ebp
  427b05:	ret    0xcc31
  427b08:	(bad)  
  427b09:	sti    
  427b0a:	lds    ebx,FWORD PTR [edi-0x58]
  427b0d:	xor    eax,0x47891313
  427b12:	mov    al,ds:0xe9cbd8b6
  427b17:	xchg   esi,eax
  427b18:	fcomp  DWORD PTR [esi+0x5a8af8d9]
  427b1e:	hlt    
  427b1f:	or     al,0x92
  427b21:	xchg   ecx,eax
  427b22:	mov    edx,0xc776330d
  427b27:	adc    eax,0xda36d4f3
  427b2c:	aaa    
  427b2d:	(bad)  
  427b2e:	jo     0x427b76
  427b30:	dec    ebx
  427b31:	inc    eax
  427b32:	fidivr WORD PTR [eax-0x21]
  427b35:	push   ds
  427b36:	dec    edi
  427b37:	mov    dl,0x59
  427b39:	pop    esi
  427b3a:	cmp    DWORD PTR [edi+0x45],esp
  427b3d:	xor    al,0xb0
  427b3f:	add    eax,DWORD PTR [eax+edi*2-0x24]
  427b43:	mov    al,ds:0xf670d0c4
  427b48:	adc    DWORD PTR [edi],ebp
  427b4a:	and    DWORD PTR [esi+ecx*1],0x7f0c2507
  427b51:	(bad)  
  427b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b53:	xor    al,0xfb
  427b55:	sbb    BYTE PTR [edx-0x71],al
  427b58:	data16 mov WORD PTR [edx+ecx*2],?
  427b5c:	fwait
  427b5d:	(bad)  
  427b5f:	adc    DWORD PTR [ebx-0x20d1b1c0],edx
  427b65:	icebp  
  427b66:	sbb    DWORD PTR [ecx-0x5703a77e],ebp
  427b6c:	int    0xf2
  427b6e:	outs   dx,BYTE PTR ds:[esi]
  427b6f:	jae    0x427bc4
  427b71:	jp     0x427b1e
  427b73:	cwde   
  427b74:	sahf   
  427b75:	mov    ebx,0xb687ae48
  427b7a:	jo     0x427bbf
  427b7c:	ja     0x427bd1
  427b7e:	fisub  WORD PTR [edx+0x3d4eb9c9]
  427b84:	fnstenv ds:0xba6b8882
  427b8a:	(bad)  
  427b8b:	syscall 
  427b8d:	pop    esp
  427b8e:	and    BYTE PTR [esi-0x54d67de2],ah
  427b94:	clc    
  427b95:	jge    0x427bea
  427b97:	sbb    DWORD PTR [edi-0x41a07f5f],esi
  427b9d:	(bad)  
  427b9e:	xlat   BYTE PTR fs:[ebx]
  427ba0:	push   esi
  427ba1:	xchg   edi,eax
  427ba2:	inc    edi
  427ba3:	pop    esp
  427ba4:	add    BYTE PTR [eax+0x71],al
  427ba7:	bound  eax,QWORD PTR [ebx+0x10]
  427baa:	aam    0x99
  427bac:	js     0x427c1d
  427bae:	cli    
  427baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bb0:	xabort 0x67
  427bb3:	jmp    0xeaf6:0x3529cb19
  427bba:	jo     0x427bd0
  427bbc:	in     al,dx
  427bbd:	rcl    BYTE PTR [ebp-0x5651a167],1
  427bc3:	hlt    
  427bc4:	data16 fmul QWORD PTR [ebx-0x5b]
  427bc8:	xchg   ebx,eax
  427bc9:	pusha  
  427bca:	jne    0x427c1e
  427bcc:	std    
  427bcd:	sub    DWORD PTR [ebp+0x6810a277],edi
  427bd3:	add    BYTE PTR [edi+0x2cbb984d],bh
  427bd9:	outs   dx,DWORD PTR ds:[esi]
  427bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bdb:	or     BYTE PTR [ebp-0x72],cl
  427bde:	enter  0x135c,0x31
  427be2:	xchg   edx,eax
  427be3:	mov    edi,0x8ad4fc05
  427be8:	ror    BYTE PTR [eax-0x1b2b0cee],0x0
  427bef:	pop    edi
  427bf0:	lock aaa 
  427bf2:	cdq    
  427bf3:	jl     0x427c06
  427bf5:	pusha  
  427bf6:	push   esi
  427bf7:	xor    BYTE PTR ss:[ecx+0x718eea5b],cl
  427bfe:	(bad)  
  427bff:	daa    
  427c00:	test   BYTE PTR [eax+0x1ba9cc8],ah
  427c06:	inc    edi
  427c07:	stc    
  427c08:	adc    BYTE PTR [esi+0x78],0xfb
  427c0c:	jl     0x427bbc
  427c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c0f:	add    DWORD PTR ds:0x3a38d577,ebx
  427c15:	push   edx
  427c16:	mov    eax,0x2f12c453
  427c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c1c:	prefetch (bad)
  427c1d:	or     eax,0x8e81cee0
  427c22:	pop    ebp
  427c23:	pop    esp
  427c24:	sub    DWORD PTR [esi],edx
  427c26:	and    eax,0xead08104
  427c2b:	cld    
  427c2c:	xor    al,BYTE PTR ds:0xb229c26f
  427c32:	jecxz  0x427c13
  427c34:	sbb    DWORD PTR [edi+0x71c8a463],eax
  427c3a:	out    0xc6,eax
  427c3c:	jo     0x427bc6
  427c3e:	jb     0x427bff
  427c40:	mov    ds:0xb0386586,eax
  427c45:	in     eax,0xc3
  427c47:	pop    esp
  427c48:	shl    BYTE PTR [edi+0x39341db],0xe0
  427c4f:	aam    0x77
  427c51:	mov    WORD PTR [ecx+0x72],cs
  427c54:	aad    0x45
  427c56:	jno    0x427c1a
  427c58:	xchg   esp,eax
  427c59:	mov    bl,0xc5
  427c5b:	jle    0x427c47
  427c5d:	jno    0x427c20
  427c5f:	aas    
  427c60:	sbb    eax,0x6b3bbf92
  427c65:	inc    ebx
  427c66:	ss loope 0x427c0d
  427c69:	rcr    edx,1
  427c6b:	not    BYTE PTR [edi]
  427c6d:	das    
  427c6e:	jns    0x427cdd
  427c70:	fmul   DWORD PTR [edi]
  427c72:	xchg   DWORD PTR [ebp+0x695a159],ebp
  427c78:	xchg   edx,eax
  427c79:	mov    DWORD PTR [ebx+0x7b],esi
  427c7c:	xor    al,0xd7
  427c7e:	dec    edx
  427c7f:	ret    0x2bcf
  427c82:	loop   0x427c0a
  427c84:	aaa    
  427c85:	mov    ecx,0xbd063e28
  427c8a:	loopne 0x427cd9
  427c8c:	add    eax,0xb1d77e1
  427c91:	cmp    DWORD PTR [ebx-0x58],ecx
  427c94:	lahf   
  427c95:	adc    esi,edx
  427c97:	adc    BYTE PTR ss:[esi+esi*4-0x249f1e3f],0xaa
  427ca0:	jnp    0x427cf7
  427ca2:	rcl    DWORD PTR [ebp-0x3adfebaf],0x2a
  427ca9:	mov    BYTE PTR [ecx+ecx*1],al
  427cac:	retf   
  427cad:	add    esi,DWORD PTR [edi+0x2a351e8e]
  427cb3:	jmp    0xacbb67f
  427cb8:	int    0x59
  427cba:	cdq    
  427cbb:	int    0xc1
  427cbd:	mov    ecx,0x6eba7b8a
  427cc2:	inc    ebp
  427cc3:	in     al,0x19
  427cc5:	push   ebx
  427cc6:	stc    
  427cc7:	clc    
  427cc8:	jne    0x427cac
  427cca:	imul   esi,DWORD PTR [ebp-0x1e],0xe9237a48
  427cd1:	call   0x13e5:0x61852bdf
  427cd8:	ja     0x427d56
  427cda:	add    DWORD PTR [edi],esi
  427cdc:	lods   eax,DWORD PTR ds:[esi]
  427cdd:	push   0xfffffffb
  427cdf:	dec    esp
  427ce0:	imul   ecx,DWORD PTR [ebp+0x43],0x13f14c8c
  427ce7:	xchg   edx,eax
  427ce8:	test   eax,0x9815b7a9
	...
  427cf9:	add    BYTE PTR [ebx],bl
  427cfb:	daa    
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	push   edi
  427d07:	xor    DWORD PTR [ecx+ebx*1],esp
  427d0a:	lock icebp 
  427d0c:	add    DWORD PTR [eax],eax
  427d0e:	sti    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [ebp-0x45],cl
  427d14:	sbb    al,0xb2
  427d16:	stos   BYTE PTR es:[edi],al
  427d17:	xchg   DWORD PTR [edx+0x32],ebx
  427d1a:	and    eax,0xc8d74757
  427d1f:	shl    BYTE PTR [ebx],0x64
  427d22:	mov    bh,0xf2
  427d24:	mov    ebx,0xad91e289
  427d29:	add    eax,0x6e50b70e
  427d2e:	add    dl,cl
  427d30:	fsubr  QWORD PTR ds:0xb3681e42
  427d36:	sub    eax,DWORD PTR [ecx-0x76f3964f]
  427d3c:	dec    esp
  427d3d:	(bad)  
  427d3e:	mov    dh,0x60
  427d40:	pushf  
  427d41:	(bad)
  427d44:	rcl    DWORD PTR [eax+0x13],1
  427d47:	xor    BYTE PTR [ebp+0x4ae85e44],0x85
  427d4e:	jg     0x427d1d
  427d50:	outs   dx,DWORD PTR ds:[esi]
  427d51:	in     eax,dx
  427d52:	mov    al,0x62
  427d54:	bound  ebx,QWORD PTR [esi]
  427d56:	or     eax,0xf9758618
  427d5b:	xchg   esp,eax
  427d5c:	mov    ds:0x990d4a7b,al
  427d61:	jg     0x427d14
  427d63:	xchg   esi,eax
  427d64:	enter  0xff61,0x41
  427d68:	cwde   
  427d69:	aaa    
  427d6a:	mov    ds:0x2e1fc815,al
  427d6f:	mov    edx,0x5ec46fd8
  427d74:	sub    BYTE PTR ds:0x83a84541,0x41
  427d7b:	cld    
  427d7c:	mov    dl,BYTE PTR [ebp+0x17]
  427d7f:	push   es
  427d80:	jecxz  0x427da9
  427d82:	fs and al,0x6d
  427d85:	dec    esi
  427d86:	(bad)  
  427d87:	pop    eax
  427d88:	rcl    BYTE PTR [ebp-0x596f0df0],1
  427d8e:	pop    es
  427d8f:	mov    dl,0xf8
  427d91:	cmc    
  427d92:	jg     0x427dd1
  427d94:	test   al,0x94
  427d96:	inc    esp
  427d97:	mov    edx,0x5bee5967
  427d9c:	xchg   ecx,eax
  427d9d:	jmp    0xeda8:0x87a4036f
  427da4:	ret    
  427da5:	inc    ecx
  427da6:	dec    edi
  427da7:	outs   dx,DWORD PTR ds:[esi]
  427da8:	stos   BYTE PTR es:[edi],al
  427da9:	inc    ebx
  427daa:	in     al,0xa
  427dac:	fsub   st(1),st
  427dae:	mov    ah,0x9f
  427db0:	mov    al,0xa
  427db2:	lahf   
  427db3:	out    0x51,eax
  427db5:	retf   
  427db6:	mov    edx,0xeddda4e8
  427dbb:	(bad)  
  427dbc:	fstp   DWORD PTR [ebx+0x36d09569]
  427dc2:	dec    ebx
  427dc3:	inc    ebp
  427dc4:	jl     0x427dd1
  427dc6:	or     DWORD PTR [edi+0x5],esi
  427dc9:	pop    eax
  427dca:	xchg   BYTE PTR [edi+ebx*4-0x71850625],dl
  427dd1:	out    0xef,eax
  427dd3:	sbb    dl,BYTE PTR [ebp-0x2e5cf296]
  427dd9:	imul   esi,DWORD PTR [ecx],0xe38cbe6
  427ddf:	dec    ebp
  427de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427de1:	jmp    0x427dff
  427de3:	push   ebx
  427de4:	mov    BYTE PTR [edi+0x2b5a692a],dl
  427dea:	and    cl,dl
  427dec:	(bad)  
  427ded:	addr16 cs jle 0x427dec
  427df1:	out    dx,eax
  427df2:	xor    ebx,DWORD PTR [ecx-0x52e9926d]
  427df8:	clc    
  427df9:	mov    edi,0x3640715d
  427dfe:	xchg   DWORD PTR [eax-0x5b7d44ee],edi
  427e04:	outs   dx,BYTE PTR ds:[esi]
  427e05:	loop   0x427e40
  427e07:	mov    al,0xbf
  427e09:	and    al,0x2c
  427e0b:	int    0x16
  427e0d:	imul   ecx,DWORD PTR [esp+eiz*4+0x4a],0xffffff9a
  427e12:	xchg   DWORD PTR [edi],esp
  427e14:	fisubr DWORD PTR [edx-0x23]
  427e17:	mov    BYTE PTR ds:[ebx+0x6],dh
  427e1b:	sar    ecx,1
  427e1d:	arpl   WORD PTR [ebp+eiz*2+0x2d],si
  427e21:	jne    0x427de2
  427e23:	push   ebp
  427e24:	test   ebp,esi
  427e26:	lahf   
  427e27:	(bad)  
  427e29:	popf   
  427e2a:	jbe    0x427dfc
  427e2c:	or     DWORD PTR [edx-0x5f],esi
  427e2f:	in     al,0xc0
  427e31:	nop
  427e32:	xchg   DWORD PTR [ebx],edi
  427e34:	and    al,0x9c
  427e36:	cmp    cl,BYTE PTR [esi-0x69]
  427e39:	dec    ecx
  427e3a:	mov    cl,0x9e
  427e3c:	les    ecx,FWORD PTR [edx]
  427e3e:	cmp    BYTE PTR [ebx-0x74],dl
  427e41:	push   esp
  427e42:	lods   eax,DWORD PTR ds:[esi]
  427e43:	and    BYTE PTR [edi+eax*4],al
  427e46:	scas   eax,DWORD PTR es:[edi]
  427e47:	pop    ss
  427e48:	mov    BYTE PTR [ebx+0x1d9488af],al
  427e4e:	pop    eax
  427e4f:	fst    QWORD PTR [eax]
  427e51:	mov    ds:0xcfc2ef4,eax
  427e56:	add    ecx,DWORD PTR [ecx-0xf9753e2]
  427e5c:	retf   
  427e5d:	jbe    0x427e91
  427e5f:	mov    ebx,0x7a341436
  427e64:	and    al,0x5f
  427e66:	sbb    dh,dl
  427e68:	in     al,0x76
  427e6a:	loope  0x427ebd
  427e6c:	test   BYTE PTR [eax+ebp*2+0x7f],bh
  427e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e71:	(bad)  
  427e72:	mul    BYTE PTR [esi*8-0xd793e40]
  427e79:	in     eax,0x48
  427e7b:	push   0x92d2891
  427e80:	sub    eax,ebp
  427e82:	xchg   ebp,eax
  427e83:	not    dh
  427e85:	push   edi
  427e86:	icebp  
  427e87:	sbb    cl,dh
  427e89:	sbb    cl,BYTE PTR [edx-0x51]
  427e8c:	loope  0x427edf
  427e8e:	dec    edx
  427e8f:	stc    
  427e90:	dec    ecx
  427e91:	inc    ebx
  427e92:	retf   
  427e93:	(bad)  
  427e94:	lea    ebp,[eax]
  427e96:	mov    WORD PTR [edx-0x69],ss
  427e99:	ret    0xab61
  427e9c:	jp     0x427e81
  427e9e:	jg     0x427eab
  427ea0:	adc    al,0x59
  427ea2:	dec    ebx
  427ea3:	cmp    edx,eax
  427ea5:	push   esp
  427ea6:	xchg   edi,eax
  427ea7:	dec    esp
  427ea8:	inc    eax
  427ea9:	pop    ds
  427eaa:	and    eax,0x9d63dd37
  427eaf:	cmp    bl,al
  427eb1:	and    bh,dl
  427eb3:	jmp    0x83aa0b9f
  427eb8:	inc    ebx
  427eb9:	cmp    dh,ch
  427ebb:	int    0x78
  427ebd:	inc    ebx
  427ebe:	scas   al,BYTE PTR es:[edi]
  427ebf:	arpl   bp,sp
  427ec1:	ins    DWORD PTR es:[edi],dx
  427ec2:	cmp    BYTE PTR [ecx+0x6c],bl
  427ec5:	add    dh,BYTE PTR [edi+eiz*4]
  427ec8:	out    0x51,eax
  427eca:	or     eax,0xfa7e336f
  427ecf:	push   ecx
  427ed0:	mov    esi,DWORD PTR [ebx-0x26bfc40c]
  427ed6:	xchg   edx,eax
  427ed7:	mov    al,0xdd
  427ed9:	xchg   edi,eax
  427eda:	(bad)  
  427edb:	into   
  427edc:	pop    ebp
  427edd:	sbb    al,0x83
  427edf:	dec    ecx
  427ee0:	in     al,dx
  427ee1:	sub    DWORD PTR [eax],0x2c86c072
  427ee7:	je     0x427eb7
  427ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427eea:	nop
  427eeb:	fcomp  st(7)
  427eed:	ficomp WORD PTR [ecx+0x2a]
  427ef0:	mov    ds:0xcdfc840c,eax
  427ef5:	jno    0x427f0b
  427ef7:	jge    0x427efb
  427ef9:	pop    ebp
  427efa:	mov    ds:0xa8701167,eax
  427eff:	and    ah,BYTE PTR [ecx+0x2b50d1cb]
  427f05:	adc    dl,ah
  427f07:	mov    eax,0x9f12495a
  427f0c:	rol    DWORD PTR [eax],cl
	...
  427f1a:	call   0xdafe:0xfef82244
  427f21:	leavew 
  427f23:	and    dh,BYTE PTR [ecx+edx*1-0x15]
  427f27:	mov    bh,0x84
  427f29:	daa    
  427f2a:	jmp    0x427f1f
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	sti    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    BYTE PTR [edi+0x58d822fb],bh
  427f37:	rol    BYTE PTR [ecx+0x56d1b151],cl
  427f3d:	pushf  
  427f3e:	lea    ecx,[ebp-0x52]
  427f41:	jb     0x427f33
  427f43:	dec    ebx
  427f44:	(bad)  
  427f45:	cmp    al,0x1a
  427f47:	ret    0x64b4
  427f4a:	cmp    ecx,DWORD PTR [esi-0x5b]
  427f4d:	lea    edi,[ebx-0x1b27dbea]
  427f53:	or     ecx,ebp
  427f55:	dec    ebx
  427f56:	add    al,0x98
  427f58:	sub    al,0x8d
  427f5a:	cwde   
  427f5b:	(bad)  
  427f5c:	sub    ah,BYTE PTR [ebp+0x8]
  427f5f:	scas   eax,DWORD PTR es:[edi]
  427f60:	ja     0x427eeb
  427f62:	test   eax,0x10d79dce
  427f67:	mov    bl,0x6a
  427f69:	mov    bh,0x92
  427f6c:	ss fstp st(5)
  427f6f:	out    0x4a,eax
  427f71:	jecxz  0x427fb4
  427f73:	pop    ss
  427f74:	or     esi,DWORD PTR [esi+0x61]
  427f77:	pushf  
  427f78:	xor    BYTE PTR [di-0x43a5],cl
  427f7d:	jmp    0xa981:0xef1e57fb
  427f84:	mov    al,ds:0x45fb226e
  427f89:	jmp    0xab06:0xd4a0a1f5
  427f90:	into   
  427f91:	mov    esi,0x2d1fa754
  427f96:	sub    bl,BYTE PTR [edx+ebx*1+0x35]
  427f9a:	fld    DWORD PTR [esi]
  427f9c:	add    al,0x28
  427f9e:	repz je 0x428006
  427fa1:	fdiv   DWORD PTR [esi+edx*2-0x14466c99]
  427fa8:	lds    ebx,FWORD PTR [edx]
  427faa:	mov    BYTE PTR [edi+0x39c402b],ch
  427fb0:	lea    esp,[eax-0x2c789bd9]
  427fb6:	into   
  427fb7:	std    
  427fb8:	or     al,0xa4
  427fba:	mov    bh,0x65
  427fbc:	xchg   edx,eax
  427fbd:	vpsrlw ymm4,ymm7,XMMWORD PTR [ebx+0x6]
  427fc2:	xchg   BYTE PTR [edx+0x9],bl
  427fc5:	add    DWORD PTR [ebx+0x41],edx
  427fc8:	pop    ecx
  427fc9:	rcr    DWORD PTR [esi+esi*1],0x74
  427fcd:	xor    ebp,DWORD PTR [eax+0x6f30cf5b]
  427fd3:	outs   dx,DWORD PTR ds:[esi]
  427fd4:	push   0x40d882b
  427fd9:	loope  0x427fbe
  427fdb:	pop    eax
  427fdc:	inc    edx
  427fdd:	push   0xffffffa1
  427fdf:	scas   eax,DWORD PTR es:[edi]
  427fe0:	or     DWORD PTR [ecx-0x57],eax
  427fe3:	rol    ebx,1
  427fe5:	push   edx
  427fe6:	push   eax
  427fe7:	push   ss
  427fe8:	ss daa 
  427fea:	push   esi
  427feb:	int    0x25
  427fed:	add    DWORD PTR [ecx],esi
  427fef:	cmp    eax,0x8caa4ef2
  427ff4:	int    0xb8
  427ff6:	ds test al,0x99
  427ff9:	jmp    0x427ffa
  427ffb:	pop    es
  427ffc:	xchg   edi,eax
  427ffd:	dec    eax
  427ffe:	sub    BYTE PTR [eax-0x5],0x3a
  428002:	ja     0x427f84
  428004:	js     0x427fc7
  428006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428007:	inc    ebp
  428008:	push   esp
  428009:	mov    BYTE PTR [ecx],bh
  42800b:	cmc    
  42800c:	jge    0x42806d
  42800e:	enter  0xd160,0x47
  428012:	inc    eax
  428013:	or     edx,DWORD PTR [ebx*2+0x426a7a2]
  42801a:	hlt    
  42801b:	dec    ebp
  42801c:	fcmovbe st,st(4)
  42801e:	imul   edx,DWORD PTR [edx+0x21],0xffffffed
  428022:	push   cs
  428023:	cli    
  428024:	cli    
  428025:	popa   
  428026:	push   ss
  428027:	(bad)  [ebp-0x1a]
  42802a:	in     eax,0x93
  42802c:	mov    ch,0xd4
  42802e:	push   ss
  42802f:	sbb    al,0xf2
  428031:	jnp    0x427fe9
  428033:	jmp    0x42809c
  428035:	adc    eax,0xaffff6c0
  42803a:	fnstenv [ebx]
  42803c:	fxch   st(2)
  42803e:	and    al,0x50
  428040:	push   ebp
  428041:	sbb    eax,0x421a8bb2
  428046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428047:	rol    BYTE PTR [esi-0x58],0xb3
  42804b:	pop    ebp
  42804c:	xor    cl,BYTE PTR [ebp+0x71]
  42804f:	mov    ds:0x135d4e8a,al
  428054:	adc    cl,BYTE PTR [eax+0x3e]
  428057:	das    
  428058:	cmp    eax,0x4b79bceb
  42805d:	xor    eax,0x2ef4334e
  428062:	lods   al,BYTE PTR ds:[esi]
  428063:	sbb    DWORD PTR [ecx+0x1cb316b4],edx
  428069:	sbb    eax,0x1af04065
  42806e:	and    al,0x51
  428070:	in     eax,dx
  428071:	inc    eax
  428072:	(bad)  
  428076:	mov    ch,0xac
  428078:	pop    ebp
  428079:	retf   
  42807a:	mov    ah,0xe1
  42807c:	jle    0x428015
  42807e:	pop    ebx
  42807f:	(bad)  
  428080:	cmp    BYTE PTR [ebx],ah
  428082:	cmp    BYTE PTR [ebx+ebp*8],0x67
  428086:	jl     0x42807f
  428088:	and    bh,cl
  42808a:	dec    DWORD PTR [ebx]
  42808c:	xchg   BYTE PTR [ebx+0x7cb66224],cl
  428092:	jl     0x42810d
  428094:	dec    edx
  428095:	lods   eax,DWORD PTR ds:[esi]
  428096:	push   eax
  428097:	xchg   DWORD PTR [eax],eax
  428099:	repz (bad) 
  42809b:	dec    ebx
  42809c:	iret   
  42809d:	test   BYTE PTR [edi-0x5f29b510],bh
  4280a3:	jnp    0x4280de
  4280a5:	ret    0x481d
  4280a8:	xor    eax,0xd1341026
  4280ad:	inc    ebp
  4280ae:	mov    es,WORD PTR [esi]
  4280b0:	pop    ebp
  4280b1:	or     eax,0x5b8493
  4280b6:	loopne 0x42805b
  4280b8:	mov    ebx,0x79ec9f50
  4280bd:	xchg   DWORD PTR [esi+0x9],esp
  4280c0:	cmp    al,0x3b
  4280c2:	sbb    BYTE PTR [eax-0x20],ch
  4280c5:	push   ebx
  4280c6:	or     edi,DWORD PTR [ebx]
  4280c8:	xor    al,0x1a
  4280ca:	jnp    0x428092
  4280cc:	dec    esp
  4280cd:	xlat   BYTE PTR ds:[ebx]
  4280ce:	pushf  
  4280cf:	sbb    al,0x77
  4280d1:	ins    BYTE PTR es:[edi],dx
  4280d2:	lea    edi,[ecx-0x796f845d]
  4280d8:	jmp    0xe9701fe2
  4280dd:	enter  0x7622,0x86
  4280e1:	mov    WORD PTR [edi-0x65],ss
  4280e4:	and    BYTE PTR [eax+0x78690f9e],0x7e
  4280eb:	out    0x78,eax
  4280ed:	lds    ebp,FWORD PTR [edx]
  4280ef:	pushf  
  4280f0:	adc    ebx,DWORD PTR [esi+0x36]
  4280f3:	lds    edx,FWORD PTR [esi-0x353bc632]
  4280f9:	sub    BYTE PTR [ecx+ebx*1],al
  4280fc:	adc    eax,0xe3c59d6
  428101:	bound  esi,QWORD PTR ds:0xabde7f5e
  428107:	sbb    bh,BYTE PTR [ecx+0x4a]
  42810a:	pop    ss
  42810b:	ficomp DWORD PTR [edi-0x3b]
  42810e:	jns    0x42814f
  428110:	ret    
  428111:	test   BYTE PTR [edx-0x6408d673],bl
  428117:	sub    ecx,DWORD PTR [edx-0x4a1c6b2c]
  42811d:	call   0x854c:0x2a333c00
  428124:	cdq    
  428125:	enter  0x999c,0xfb
  428129:	mov    al,ds:0xac899e
	...
  42813a:	nop
  42813b:	stos   DWORD PTR es:[edi],eax
  42813c:	es ret 
  42813e:	aas    
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	les    esp,FWORD PTR [ebp+0x3b]
  428149:	aas    
  42814a:	out    0xf5,al
  42814c:	add    DWORD PTR [eax],eax
  42814e:	sti    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    BYTE PTR [ebp+0x9],bh
  428154:	in     al,0x7e
  428156:	sbb    al,0x22
  428158:	pop    esi
  428159:	(bad)  
  42815b:	push   edi
  42815c:	lock leave 
  42815e:	fs (bad) 
  428160:	cwde   
  428161:	cmp    BYTE PTR [ecx-0x71],0x3e
  428165:	enter  0xe285,0xe0
  428169:	jle    0x4281d1
  42816b:	clc    
  42816c:	fsub   st,st(3)
  42816e:	add    BYTE PTR [edx+0x73574712],bl
  428174:	fdiv   QWORD PTR [edx-0x66]
  428177:	sbb    ah,BYTE PTR [esi-0x2c]
  42817a:	mov    al,ds:0xf36e12c9
  42817f:	into   
  428180:	jae    0x4281ec
  428182:	dec    eax
  428183:	pushf  
  428184:	arpl   WORD PTR [ebp+0x39273a69],bx
  42818a:	mov    al,0x0
  42818c:	mul    BYTE PTR [eax-0x30]
  42818f:	test   al,0xaf
  428191:	dec    ebp
  428192:	push   ss
  428193:	add    ebx,edi
  428195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428196:	cld    
  428197:	inc    eax
  428198:	test   ecx,edx
  42819a:	push   ebx
  42819b:	bound  edi,QWORD PTR [ecx]
  42819d:	ins    BYTE PTR es:[edi],dx
  42819e:	imul   ebx,DWORD PTR [ebp-0x54],0xc94dc6ca
  4281a5:	data16 scas al,BYTE PTR es:[edi]
  4281a7:	and    edi,edx
  4281a9:	sub    al,0x94
  4281ab:	pop    es
  4281ac:	enter  0x9509,0xfc
  4281b0:	xchg   edi,eax
  4281b1:	jbe    0x42819a
  4281b3:	add    BYTE PTR [edx+0x1314f37c],0x27
  4281ba:	and    DWORD PTR [eax],esi
  4281bc:	dec    ecx
  4281bd:	sahf   
  4281be:	mov    DWORD PTR [edx-0xaceb80f],eax
  4281c4:	mov    ah,0x66
  4281c6:	rol    BYTE PTR [eax+0x1cdef8b1],cl
  4281cc:	inc    ebx
  4281cd:	cli    
  4281ce:	loop   0x428229
  4281d0:	sub    dl,BYTE PTR [edx+ecx*8]
  4281d3:	in     eax,0x7a
  4281d5:	mov    WORD PTR [ebp+0x40],?
  4281d8:	in     al,0xd3
  4281da:	les    esp,FWORD PTR [edx-0x3e1030b9]
  4281e0:	push   edi
  4281e1:	jbe    0x42822a
  4281e3:	dec    edx
  4281e4:	mov    al,0xb8
  4281e6:	push   ds
  4281e7:	bound  ebx,QWORD PTR [ecx-0x37]
  4281ea:	or     al,0x4a
  4281ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281ed:	fist   WORD PTR [ebx+0x54960b8a]
  4281f3:	hlt    
  4281f4:	sbb    DWORD PTR [ecx],esi
  4281f6:	mov    ecx,0xbc2d7530
  4281fb:	mov    eax,0x972a5529
  428200:	or     dh,bh
  428202:	dec    ecx
  428203:	pop    ebx
  428204:	sub    ch,bl
  428206:	ret    
  428207:	daa    
  428208:	add    bl,dl
  42820a:	fldl2t 
  42820c:	sbb    eax,0xbe4b30eb
  428211:	sti    
  428212:	fidiv  DWORD PTR [ebx-0x66]
  428215:	push   ss
  428216:	jle    0x4281b9
  428218:	xchg   esp,eax
  428219:	mov    cl,0xf7
  42821b:	push   esp
  42821c:	loopne 0x4281d3
  42821e:	test   al,0x75
  428220:	push   edx
  428221:	push   ebp
  428222:	lock addr16 xchg edi,eax
  428225:	pop    eax
  428226:	rcl    ebx,1
  428228:	mov    DWORD PTR [esi+eiz*2+0x5c],ecx
  42822c:	ror    al,cl
  42822e:	xchg   esi,eax
  42822f:	sub    DWORD PTR [ebx],ebx
  428231:	push   esp
  428232:	push   esp
  428233:	cmp    ah,BYTE PTR [esi-0x34]
  428236:	inc    ecx
  428237:	add    esp,eax
  428239:	repz jae 0x428299
  42823c:	loop   0x428279
  42823e:	ficom  WORD PTR [esi+0x51abf5da]
  428244:	adc    esi,0xffffff8a
  428247:	xchg   esi,eax
  428248:	xor    edx,DWORD PTR [ecx]
  42824a:	scas   al,BYTE PTR es:[edi]
  42824b:	mov    BYTE PTR [ecx],dh
  42824d:	xor    al,0xf1
  42824f:	je     0x42827b
  428251:	push   ecx
  428252:	or     eax,0x40cf7d2d
  428257:	and    al,0xdd
  428259:	dec    ebx
  42825a:	cmp    DWORD PTR [edi],ebx
  42825c:	xchg   DWORD PTR [edx-0x527eb0ce],ecx
  428262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428263:	adc    ah,bh
  428265:	in     al,dx
  428266:	div    DWORD PTR [esi]
  428268:	in     eax,0x2a
  42826a:	pop    es
  42826b:	adc    BYTE PTR [ecx+0x2e0c07be],ah
  428271:	push   esp
  428272:	xchg   edi,eax
  428273:	js     0x4281fd
  428275:	(bad)  
  428276:	dec    eax
  428277:	retf   0xdb85
  42827a:	mov    ds:0x68fa4e49,al
  42827f:	dec    ebx
  428280:	mov    eax,ds:0xcb105d2f
  428285:	or     edx,edx
  428287:	int    0x10
  428289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42828a:	ret    
  42828b:	xchg   ebx,eax
  42828c:	pop    ecx
  42828d:	test   DWORD PTR [eax-0x18],edx
  428290:	sar    DWORD PTR [esp+edx*2-0x7a3fab5c],1
  428297:	and    BYTE PTR ds:0xca5702fa,ah
  42829d:	jo     0x428303
  42829f:	push   esp
  4282a0:	mov    cs,WORD PTR [ecx+ebp*4+0x5b]
  4282a4:	jne    0x4282d6
  4282a6:	in     eax,dx
  4282a7:	mov    ebp,0xe1386067
  4282ac:	fild   WORD PTR [ebx+0x3b]
  4282af:	mov    ebp,DWORD PTR [eax+edx*2+0x39]
  4282b3:	outs   dx,DWORD PTR ds:[esi]
  4282b4:	push   ds
  4282b5:	mov    al,ds:0x2a752d07
  4282ba:	aaa    
  4282bb:	push   eax
  4282bc:	loop   0x42827f
  4282be:	pop    esi
  4282bf:	shr    DWORD PTR [ebx-0x45b0c9d8],0x7e
  4282c6:	lock sbb DWORD PTR [eax+0x4a327fad],0xffffffe0
  4282ce:	rcr    DWORD PTR fs:[bp+di+0x2f],cl
  4282d3:	push   0x17
  4282d5:	sub    eax,0x9db04f29
  4282da:	aad    0xc
  4282dc:	and    ebp,DWORD PTR [esp+edi*2-0x1c]
  4282e0:	push   eax
  4282e1:	fcomip st,st(2)
  4282e3:	in     eax,dx
  4282e4:	dec    edx
  4282e5:	jnp    0x4282c9
  4282e7:	fild   WORD PTR [edi-0x33]
  4282ea:	or     eax,0xe34cce07
  4282ef:	push   ecx
  4282f0:	ins    DWORD PTR es:[edi],dx
  4282f1:	pushf  
  4282f2:	sbb    edi,ebp
  4282f4:	jns    0x4282ca
  4282f6:	popa   
  4282f7:	jmp    FWORD PTR [edx+eax*1]
  4282fa:	or     cl,BYTE PTR [ebx+0x2580bf89]
  428300:	xor    DWORD PTR [edi+0x272abaf2],esi
  428306:	adc    bh,BYTE PTR [ebx]
  428308:	call   0xe38dedc3
  42830d:	shl    DWORD PTR [ebp+0x40995d0b],1
  428313:	sbb    eax,0xd333de5c
  428318:	sub    al,0xed
  42831a:	(bad)  
  42831c:	mov    al,ds:0xa09aeee8
  428321:	jns    0x4282f9
  428323:	cdq    
  428324:	dec    ebp
  428325:	sbb    DWORD PTR [edi],ebx
  428327:	sbb    DWORD PTR [eax-0x7875f522],edx
  42832d:	jnp    0x428320
  42832f:	(bad)  
  428330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428331:	push   ebx
  428332:	imul   edi,DWORD PTR [edi+0x5c],0x873628d8
  428339:	jmp    0xb3756f62
  42833e:	dec    ecx
  42833f:	pop    esi
  428340:	mov    cl,0x8d
  428342:	pop    ss
  428343:	ja     0x4282d3
  428345:	aas    
  428346:	push   0x3e
  428348:	sub    al,0x4f
  42834a:	std    
  42834b:	in     eax,dx
  42834c:	jecxz  0x42834e
	...
  42835a:	std    
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x428347
  428367:	xor    eax,0xf7e1a1db
  42836c:	add    DWORD PTR [eax],eax
  42836e:	sti    
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [edi],bh
  428373:	bound  edi,QWORD PTR [ebp+0x70755835]
  428379:	test   eax,0xde860ae4
  42837e:	iret   
  42837f:	ficomp DWORD PTR [esi]
  428381:	fistp  WORD PTR [esp+ecx*1]
  428384:	fild   QWORD PTR [ebx]
  428386:	test   BYTE PTR [edi+0x2f],bl
  428389:	xchg   esi,eax
  42838a:	ja     0x428328
  42838c:	(bad)  
  42838d:	add    edi,DWORD PTR [esi-0x26]
  428390:	pop    es
  428391:	push   esi
  428392:	xor    ebx,eax
  428394:	neg    ah
  428396:	popf   
  428397:	dec    edx
  428398:	xlat   BYTE PTR ds:[ebx]
  428399:	mov    ds:0x5633574b,eax
  42839e:	push   eax
  42839f:	leave  
  4283a0:	jle    0x4283a9
  4283a2:	mov    al,ds:0xdff105a4
  4283a7:	outs   dx,BYTE PTR ds:[esi]
  4283a8:	cdq    
  4283a9:	not    DWORD PTR [edx+0x4f]
  4283ac:	dec    ecx
  4283ad:	push   esi
  4283ae:	sahf   
  4283af:	xor    bh,BYTE PTR [ebp+0x54047c01]
  4283b5:	shr    BYTE PTR [ecx],0xfb
  4283b8:	and    BYTE PTR [eax],bl
  4283ba:	jnp    0x428354
  4283bc:	dec    ebp
  4283bd:	dec    ebx
  4283be:	and    edi,DWORD PTR [edi-0xb]
  4283c1:	das    
  4283c2:	into   
  4283c3:	shl    DWORD PTR [ecx-0x2a],1
  4283c6:	test   esi,ebp
  4283c8:	lds    ecx,FWORD PTR [ebx-0x1b7e7b60]
  4283ce:	sahf   
  4283cf:	stos   BYTE PTR es:[edi],al
  4283d0:	xor    eax,0x4df85b63
  4283d5:	xchg   edx,eax
  4283d6:	pop    edi
  4283d7:	mov    cl,0xcb
  4283d9:	(bad)  [ecx+0x6d]
  4283dc:	jl     0x4283b5
  4283de:	cdq    
  4283df:	out    0xbc,al
  4283e1:	sbb    eax,edx
  4283e3:	add    eax,0xd30d5fa8
  4283e8:	push   eax
  4283e9:	push   edx
  4283ea:	mov    esp,0x3031b36f
  4283ef:	je     0x428376
  4283f1:	mov    al,0x75
  4283f3:	inc    edx
  4283f4:	test   eax,0xbbb20ca6
  4283f9:	std    
  4283fa:	imul   esi,DWORD PTR [esi-0x5265cb39],0xd7771cb4
  428404:	(bad)  
  428405:	dec    esp
  428406:	jl     0x4283e0
  428408:	push   ds
  428409:	nop
  42840a:	outs   dx,DWORD PTR ds:[esi]
  42840b:	jns    0x4283db
  42840d:	xor    ch,bl
  42840f:	fld    DWORD PTR [ebp-0x34]
  428412:	jb     0x4283f2
  428414:	dec    eax
  428415:	mov    ?,WORD PTR [edx-0x41]
  428418:	addr16 dec esp
  42841a:	mov    bh,BYTE PTR [edx]
  42841c:	imul   ebx,DWORD PTR ds:0xa318f07,0x4a
  428423:	test   al,0x1
  428425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428426:	inc    edx
  428427:	dec    esp
  428428:	dec    ebx
  428429:	mov    esp,0x1e937790
  42842e:	lods   eax,DWORD PTR ds:[esi]
  42842f:	mov    dl,0xe0
  428431:	mov    edi,DWORD PTR [esi]
  428433:	add    DWORD PTR [ecx+0x12],edi
  428436:	push   cs
  428437:	(bad)  
  428438:	stc    
  428439:	dec    esp
  42843a:	inc    eax
  42843b:	ins    DWORD PTR es:[edi],dx
  42843c:	leave  
  42843d:	pop    edx
  42843e:	jno    0x428427
  428440:	fstp   TBYTE PTR ds:0xff319ea
  428446:	jno    0x428453
  428448:	imul   ebp,DWORD PTR [ebx-0x2ac70fba],0x67b0accf
  428452:	xchg   edx,eax
  428453:	dec    esi
  428454:	and    ebx,DWORD PTR [eax]
  428456:	and    dl,BYTE PTR [edi]
  428458:	xchg   ecx,eax
  428459:	xchg   ebx,eax
  42845a:	jge    0x428418
  42845c:	sar    BYTE PTR [ecx+0x44],1
  42845f:	mov    ch,BYTE PTR [ebp+0x53]
  428462:	retf   0xfb82
  428465:	mov    eax,DWORD PTR [ecx]
  428467:	ins    BYTE PTR es:[edi],dx
  428468:	lsl    ecx,WORD PTR [edi+eax*4+0x45086a7c]
  428470:	pop    esp
  428471:	push   cs
  428472:	mov    DWORD PTR [esi+0x41],eax
  428475:	lock fs or al,0xc
  428479:	aad    0xbd
  42847b:	lods   al,BYTE PTR ds:[esi]
  42847c:	mov    dh,0x7d
  42847e:	xchg   esp,eax
  42847f:	bsf    ebp,DWORD PTR [edi+0x58]
  428483:	cwde   
  428484:	or     al,0xeb
  428486:	imul   edi,DWORD PTR ds:0xb8e7de7b,0x4b16a659
  428490:	mov    ecx,DWORD PTR [eax-0x2b]
  428493:	cmc    
  428494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428495:	or     BYTE PTR [eax-0x1fa64df],ah
  42849b:	nop
  42849c:	sub    DWORD PTR [ecx+0x539079e7],ecx
  4284a2:	add    al,0x19
  4284a4:	or     al,BYTE PTR [edi]
  4284a6:	add    esp,edx
  4284a8:	pop    edx
  4284a9:	inc    ecx
  4284aa:	stc    
  4284ab:	jae    0x4284fd
  4284ad:	popf   
  4284ae:	pop    ds
  4284af:	and    DWORD PTR [edi+0x5a],esp
  4284b2:	rcr    DWORD PTR ds:0x4743f21c,1
  4284b8:	repnz dec edi
  4284ba:	icebp  
  4284bb:	xlat   BYTE PTR ds:[ebx]
  4284bc:	dec    ecx
  4284bd:	dec    ecx
  4284be:	push   eax
  4284bf:	mov    esp,0x574caae4
  4284c4:	jb     0x428482
  4284c6:	sbb    BYTE PTR [eax-0x3e],ch
  4284c9:	add    edi,ebx
  4284cb:	pop    es
  4284cc:	mov    ss,WORD PTR [edi+ecx*8]
  4284cf:	in     al,dx
  4284d0:	lock push esp
  4284d2:	jmp    0x42854d
  4284d4:	pop    ecx
  4284d5:	adc    BYTE PTR [edi+0x4bef7201],ah
  4284db:	pop    edi
  4284dc:	cmp    ebp,DWORD PTR [edi-0x2de434fb]
  4284e2:	aas    
  4284e3:	shr    DWORD PTR [esi-0x4b],cl
  4284e6:	loop   0x42849e
  4284e8:	and    al,0x45
  4284ea:	data16 adc cl,ch
  4284ed:	inc    ebp
  4284ee:	mov    ds:0x33119867,al
  4284f3:	jge    0x428501
  4284f5:	int3   
  4284f6:	in     al,dx
  4284f7:	mov    edi,0x420f9bb6
  4284fc:	dec    eax
  4284fd:	aas    
  4284fe:	pop    es
  4284ff:	push   ss
  428500:	pop    ecx
  428501:	fld    DWORD PTR [edx]
  428503:	cmc    
  428504:	dec    edx
  428505:	stos   DWORD PTR es:[edi],eax
  428506:	mul    DWORD PTR ds:0xe5afabe3
  42850c:	jb     0x428552
  42850e:	xchg   edi,eax
  42850f:	hlt    
  428510:	fimul  WORD PTR [edx]
  428512:	add    edi,ebx
  428514:	sbb    ebx,DWORD PTR [ecx+ebx*1-0x55aef20e]
  42851b:	cmp    esi,esp
  42851d:	inc    edi
  42851e:	jp     0x428541
  428520:	sbb    ebp,DWORD PTR [ecx]
  428522:	lods   eax,DWORD PTR ds:[esi]
  428523:	stos   DWORD PTR es:[edi],eax
  428524:	push   esp
  428525:	or     ecx,DWORD PTR [ebx+0x27]
  428528:	push   edx
  428529:	(bad)  
  42852a:	call   0xfb1d:0x9f5350eb
  428531:	jle    0x4284e0
  428533:	inc    ecx
  428534:	fistp  DWORD PTR [edx+esi*1-0x593c7370]
  42853b:	adc    al,0x9d
  42853d:	xor    eax,0x25a5bef9
  428542:	push   0x308930c6
  428547:	inc    ebx
  428548:	push   edi
  428549:	jns    0x428523
  42854b:	cmp    ch,BYTE PTR [ebp+0x5d]
  42854e:	lods   al,BYTE PTR ds:[esi]
  42854f:	xlat   BYTE PTR ds:[ebx]
  428550:	mov    edx,0xa2c35cbb
  428555:	retf   0xf0bc
  428558:	or     BYTE PTR [edi+eiz*4+0x69],al
  42855c:	lods   al,BYTE PTR ds:[esi]
  42855d:	push   ecx
  42855e:	mov    ds:0xc8fa3ce3,al
  428563:	inc    ebp
  428564:	inc    edx
  428565:	or     dh,BYTE PTR ds:0xe2d3dd41
  42856b:	adc    DWORD PTR ds:0x0,ebp
	...
  428579:	add    BYTE PTR [ecx-0x7d39faf],ch
  42857f:	cmp    eax,0x65b9d5ed
  428584:	test   BYTE PTR [ecx-0x3d2fd2e5],ch
  42858a:	fdiv   st(1),st
  42858c:	add    DWORD PTR [eax],eax
  42858e:	sldt   WORD PTR [eax]
  428591:	add    BYTE PTR [edi+0x3397382a],ah
  428597:	ror    DWORD PTR [ecx-0x3a],1
  42859a:	(bad)  
  42859b:	xor    eax,0xeefcf049
  4285a0:	or     eax,DWORD PTR [eax]
	...
